command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4666045	File	data/converged/CVE-2019-16718~_radare2/libr_crypto_p_crypto_serpent.c								
ANR	4666046	DeclStmt									
ANR	4666047	Decl							struct serpent_state	struct serpent_state	st
ANR	4666048	Function	serpent_set_key	7:0:116:478							
ANR	4666049	FunctionDef	"serpent_set_key (RCrypto * cry , const ut8 * key , int keylen , int mode , int direction)"		4666048	0					
ANR	4666050	CompoundStatement		7:95:211:478	4666048	0					
ANR	4666051	ExpressionStatement	"eprintf ( ""key_size: %d\\n"" , keylen )"	8:1:214:248	4666048	0	True				
ANR	4666052	CallExpression	"eprintf ( ""key_size: %d\\n"" , keylen )"		4666048	0					
ANR	4666053	Callee	eprintf		4666048	0					
ANR	4666054	Identifier	eprintf		4666048	0					
ANR	4666055	ArgumentList	"""key_size: %d\\n"""		4666048	1					
ANR	4666056	Argument	"""key_size: %d\\n"""		4666048	0					
ANR	4666057	PrimaryExpression	"""key_size: %d\\n"""		4666048	0					
ANR	4666058	Argument	keylen		4666048	1					
ANR	4666059	Identifier	keylen		4666048	0					
ANR	4666060	IfStatement	if ( ( keylen != 128 / 8 ) && ( keylen != 192 / 8 ) && ( keylen != 256 / 8 ) )		4666048	1					
ANR	4666061	Condition	( keylen != 128 / 8 ) && ( keylen != 192 / 8 ) && ( keylen != 256 / 8 )	9:5:255:319	4666048	0	True				
ANR	4666062	AndExpression	( keylen != 128 / 8 ) && ( keylen != 192 / 8 ) && ( keylen != 256 / 8 )		4666048	0		&&			
ANR	4666063	EqualityExpression	keylen != 128 / 8		4666048	0		!=			
ANR	4666064	Identifier	keylen		4666048	0					
ANR	4666065	MultiplicativeExpression	128 / 8		4666048	1		/			
ANR	4666066	PrimaryExpression	128		4666048	0					
ANR	4666067	PrimaryExpression	8		4666048	1					
ANR	4666068	AndExpression	( keylen != 192 / 8 ) && ( keylen != 256 / 8 )		4666048	1		&&			
ANR	4666069	EqualityExpression	keylen != 192 / 8		4666048	0		!=			
ANR	4666070	Identifier	keylen		4666048	0					
ANR	4666071	MultiplicativeExpression	192 / 8		4666048	1		/			
ANR	4666072	PrimaryExpression	192		4666048	0					
ANR	4666073	PrimaryExpression	8		4666048	1					
ANR	4666074	EqualityExpression	keylen != 256 / 8		4666048	1		!=			
ANR	4666075	Identifier	keylen		4666048	0					
ANR	4666076	MultiplicativeExpression	256 / 8		4666048	1		/			
ANR	4666077	PrimaryExpression	256		4666048	0					
ANR	4666078	PrimaryExpression	8		4666048	1					
ANR	4666079	CompoundStatement		3:72:110:110	4666048	1					
ANR	4666080	ReturnStatement	return false ;	10:2:326:338	4666048	0	True				
ANR	4666081	Identifier	false		4666048	0					
ANR	4666082	ExpressionStatement	st . key_size = keylen * 8	12:1:344:366	4666048	2	True				
ANR	4666083	AssignmentExpression	st . key_size = keylen * 8		4666048	0		=			
ANR	4666084	MemberAccess	st . key_size		4666048	0					
ANR	4666085	Identifier	st		4666048	0					
ANR	4666086	Identifier	key_size		4666048	1					
ANR	4666087	MultiplicativeExpression	keylen * 8		4666048	1		*			
ANR	4666088	Identifier	keylen		4666048	0					
ANR	4666089	PrimaryExpression	8		4666048	1					
ANR	4666090	ExpressionStatement	"eprintf ( ""key_size: %d\\n"" , st . key_size )"	13:1:369:408	4666048	3	True				
ANR	4666091	CallExpression	"eprintf ( ""key_size: %d\\n"" , st . key_size )"		4666048	0					
ANR	4666092	Callee	eprintf		4666048	0					
ANR	4666093	Identifier	eprintf		4666048	0					
ANR	4666094	ArgumentList	"""key_size: %d\\n"""		4666048	1					
ANR	4666095	Argument	"""key_size: %d\\n"""		4666048	0					
ANR	4666096	PrimaryExpression	"""key_size: %d\\n"""		4666048	0					
ANR	4666097	Argument	st . key_size		4666048	1					
ANR	4666098	MemberAccess	st . key_size		4666048	0					
ANR	4666099	Identifier	st		4666048	0					
ANR	4666100	Identifier	key_size		4666048	1					
ANR	4666101	ExpressionStatement	"memcpy ( st . key , key , keylen )"	14:1:411:439	4666048	4	True				
ANR	4666102	CallExpression	"memcpy ( st . key , key , keylen )"		4666048	0					
ANR	4666103	Callee	memcpy		4666048	0					
ANR	4666104	Identifier	memcpy		4666048	0					
ANR	4666105	ArgumentList	st . key		4666048	1					
ANR	4666106	Argument	st . key		4666048	0					
ANR	4666107	MemberAccess	st . key		4666048	0					
ANR	4666108	Identifier	st		4666048	0					
ANR	4666109	Identifier	key		4666048	1					
ANR	4666110	Argument	key		4666048	1					
ANR	4666111	Identifier	key		4666048	0					
ANR	4666112	Argument	keylen		4666048	2					
ANR	4666113	Identifier	keylen		4666048	0					
ANR	4666114	ExpressionStatement	cry -> dir = direction	15:1:442:462	4666048	5	True				
ANR	4666115	AssignmentExpression	cry -> dir = direction		4666048	0		=			
ANR	4666116	PtrMemberAccess	cry -> dir		4666048	0					
ANR	4666117	Identifier	cry		4666048	0					
ANR	4666118	Identifier	dir		4666048	1					
ANR	4666119	Identifier	direction		4666048	1					
ANR	4666120	ReturnStatement	return true ;	16:1:465:476	4666048	6	True				
ANR	4666121	Identifier	true		4666048	0					
ANR	4666122	ReturnType	static bool		4666048	1					
ANR	4666123	Identifier	serpent_set_key		4666048	2					
ANR	4666124	ParameterList	"RCrypto * cry , const ut8 * key , int keylen , int mode , int direction"		4666048	3					
ANR	4666125	Parameter	RCrypto * cry	7:28:144:155	4666048	0	True				
ANR	4666126	ParameterType	RCrypto *		4666048	0					
ANR	4666127	Identifier	cry		4666048	1					
ANR	4666128	Parameter	const ut8 * key	7:42:158:171	4666048	1	True				
ANR	4666129	ParameterType	const ut8 *		4666048	0					
ANR	4666130	Identifier	key		4666048	1					
ANR	4666131	Parameter	int keylen	7:58:174:183	4666048	2	True				
ANR	4666132	ParameterType	int		4666048	0					
ANR	4666133	Identifier	keylen		4666048	1					
ANR	4666134	Parameter	int mode	7:70:186:193	4666048	3	True				
ANR	4666135	ParameterType	int		4666048	0					
ANR	4666136	Identifier	mode		4666048	1					
ANR	4666137	Parameter	int direction	7:80:196:208	4666048	4	True				
ANR	4666138	ParameterType	int		4666048	0					
ANR	4666139	Identifier	direction		4666048	1					
ANR	4666140	CFGEntryNode	ENTRY		4666048		True				
ANR	4666141	CFGExitNode	EXIT		4666048		True				
ANR	4666142	Symbol	mode		4666048						
ANR	4666143	Symbol	st		4666048						
ANR	4666144	Symbol	st . key		4666048						
ANR	4666145	Symbol	keylen		4666048						
ANR	4666146	Symbol	false		4666048						
ANR	4666147	Symbol	true		4666048						
ANR	4666148	Symbol	cry		4666048						
ANR	4666149	Symbol	* cry		4666048						
ANR	4666150	Symbol	st . key_size		4666048						
ANR	4666151	Symbol	cry -> dir		4666048						
ANR	4666152	Symbol	key		4666048						
ANR	4666153	Symbol	direction		4666048						
ANR	4666154	Function	serpent_get_key_size	19:0:481:550							
ANR	4666155	FunctionDef	serpent_get_key_size (RCrypto * cry)		4666154	0					
ANR	4666156	CompoundStatement		19:46:527:550	4666154	0					
ANR	4666157	ReturnStatement	return st . key_size ;	20:1:530:548	4666154	0	True				
ANR	4666158	MemberAccess	st . key_size		4666154	0					
ANR	4666159	Identifier	st		4666154	0					
ANR	4666160	Identifier	key_size		4666154	1					
ANR	4666161	ReturnType	static int		4666154	1					
ANR	4666162	Identifier	serpent_get_key_size		4666154	2					
ANR	4666163	ParameterList	RCrypto * cry		4666154	3					
ANR	4666164	Parameter	RCrypto * cry	19:32:513:524	4666154	0	True				
ANR	4666165	ParameterType	RCrypto *		4666154	0					
ANR	4666166	Identifier	cry		4666154	1					
ANR	4666167	CFGEntryNode	ENTRY		4666154		True				
ANR	4666168	CFGExitNode	EXIT		4666154		True				
ANR	4666169	Symbol	st		4666154						
ANR	4666170	Symbol	cry		4666154						
ANR	4666171	Symbol	st . key_size		4666154						
ANR	4666172	Function	serpent_use	23:0:553:636							
ANR	4666173	FunctionDef	serpent_use (const char * algo)		4666172	0					
ANR	4666174	CompoundStatement		23:42:595:636	4666172	0					
ANR	4666175	ReturnStatement	"return ! strcmp ( algo , ""serpent-ecb"" ) ;"	24:1:598:634	4666172	0	True				
ANR	4666176	UnaryOperationExpression	"! strcmp ( algo , ""serpent-ecb"" )"		4666172	0					
ANR	4666177	UnaryOperator	!		4666172	0					
ANR	4666178	CallExpression	"strcmp ( algo , ""serpent-ecb"" )"		4666172	1					
ANR	4666179	Callee	strcmp		4666172	0					
ANR	4666180	Identifier	strcmp		4666172	0					
ANR	4666181	ArgumentList	algo		4666172	1					
ANR	4666182	Argument	algo		4666172	0					
ANR	4666183	Identifier	algo		4666172	0					
ANR	4666184	Argument	"""serpent-ecb"""		4666172	1					
ANR	4666185	PrimaryExpression	"""serpent-ecb"""		4666172	0					
ANR	4666186	ReturnType	static bool		4666172	1					
ANR	4666187	Identifier	serpent_use		4666172	2					
ANR	4666188	ParameterList	const char * algo		4666172	3					
ANR	4666189	Parameter	const char * algo	23:24:577:592	4666172	0	True				
ANR	4666190	ParameterType	const char *		4666172	0					
ANR	4666191	Identifier	algo		4666172	1					
ANR	4666192	CFGEntryNode	ENTRY		4666172		True				
ANR	4666193	CFGExitNode	EXIT		4666172		True				
ANR	4666194	Symbol	strcmp		4666172						
ANR	4666195	Symbol	algo		4666172						
ANR	4666196	Function	update	29:0:662:2021							
ANR	4666197	FunctionDef	"update (RCrypto * cry , const ut8 * buf , int len)"		4666196	0					
ANR	4666198	CompoundStatement		29:58:720:2021	4666196	0					
ANR	4666199	IdentifierDeclStatement	const int diff = ( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE ;	31:1:776:839	4666196	0	True				
ANR	4666200	IdentifierDecl	diff = ( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE		4666196	0					
ANR	4666201	IdentifierDeclType	const int		4666196	0					
ANR	4666202	Identifier	diff		4666196	1					
ANR	4666203	AssignmentExpression	diff = ( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE		4666196	2		=			
ANR	4666204	Identifier	diff		4666196	0					
ANR	4666205	MultiplicativeExpression	( BLOCK_SIZE - ( len % BLOCK_SIZE ) ) % BLOCK_SIZE		4666196	1		%			
ANR	4666206	AdditiveExpression	BLOCK_SIZE - ( len % BLOCK_SIZE )		4666196	0		-			
ANR	4666207	Identifier	BLOCK_SIZE		4666196	0					
ANR	4666208	MultiplicativeExpression	len % BLOCK_SIZE		4666196	1		%			
ANR	4666209	Identifier	len		4666196	0					
ANR	4666210	Identifier	BLOCK_SIZE		4666196	1					
ANR	4666211	Identifier	BLOCK_SIZE		4666196	1					
ANR	4666212	IdentifierDeclStatement	const int size = len + diff ;	32:1:842:869	4666196	1	True				
ANR	4666213	IdentifierDecl	size = len + diff		4666196	0					
ANR	4666214	IdentifierDeclType	const int		4666196	0					
ANR	4666215	Identifier	size		4666196	1					
ANR	4666216	AssignmentExpression	size = len + diff		4666196	2		=			
ANR	4666217	Identifier	size		4666196	0					
ANR	4666218	AdditiveExpression	len + diff		4666196	1		+			
ANR	4666219	Identifier	len		4666196	0					
ANR	4666220	Identifier	diff		4666196	1					
ANR	4666221	IdentifierDeclStatement	const int blocks = size / BLOCK_SIZE ;	33:1:872:908	4666196	2	True				
ANR	4666222	IdentifierDecl	blocks = size / BLOCK_SIZE		4666196	0					
ANR	4666223	IdentifierDeclType	const int		4666196	0					
ANR	4666224	Identifier	blocks		4666196	1					
ANR	4666225	AssignmentExpression	blocks = size / BLOCK_SIZE		4666196	2		=			
ANR	4666226	Identifier	blocks		4666196	0					
ANR	4666227	MultiplicativeExpression	size / BLOCK_SIZE		4666196	1		/			
ANR	4666228	Identifier	size		4666196	0					
ANR	4666229	Identifier	BLOCK_SIZE		4666196	1					
ANR	4666230	IdentifierDeclStatement	"int i , j ;"	34:1:911:919	4666196	3	True				
ANR	4666231	IdentifierDecl	i		4666196	0					
ANR	4666232	IdentifierDeclType	int		4666196	0					
ANR	4666233	Identifier	i		4666196	1					
ANR	4666234	IdentifierDecl	j		4666196	1					
ANR	4666235	IdentifierDeclType	int		4666196	0					
ANR	4666236	Identifier	j		4666196	1					
ANR	4666237	Statement	ut8	36:1:923:925	4666196	4	True				
ANR	4666238	Statement	*	36:5:927:927	4666196	5	True				
ANR	4666239	Statement	const	36:6:928:932	4666196	6	True				
ANR	4666240	ExpressionStatement	"obuf = calloc ( 4 , size / 4 )"	36:12:934:959	4666196	7	True				
ANR	4666241	AssignmentExpression	"obuf = calloc ( 4 , size / 4 )"		4666196	0		=			
ANR	4666242	Identifier	obuf		4666196	0					
ANR	4666243	CallExpression	"calloc ( 4 , size / 4 )"		4666196	1					
ANR	4666244	Callee	calloc		4666196	0					
ANR	4666245	Identifier	calloc		4666196	0					
ANR	4666246	ArgumentList	4		4666196	1					
ANR	4666247	Argument	4		4666196	0					
ANR	4666248	PrimaryExpression	4		4666196	0					
ANR	4666249	Argument	size / 4		4666196	1					
ANR	4666250	MultiplicativeExpression	size / 4		4666196	0		/			
ANR	4666251	Identifier	size		4666196	0					
ANR	4666252	PrimaryExpression	4		4666196	1					
ANR	4666253	IfStatement	if ( ! obuf )		4666196	8					
ANR	4666254	Condition	! obuf	37:5:966:970	4666196	0	True				
ANR	4666255	UnaryOperationExpression	! obuf		4666196	0					
ANR	4666256	UnaryOperator	!		4666196	0					
ANR	4666257	Identifier	obuf		4666196	1					
ANR	4666258	CompoundStatement		9:12:252:252	4666196	1					
ANR	4666259	ReturnStatement	return false ;	38:2:977:989	4666196	0	True				
ANR	4666260	Identifier	false		4666196	0					
ANR	4666261	Statement	ut32	40:1:995:998	4666196	9	True				
ANR	4666262	Statement	*	40:6:1000:1000	4666196	10	True				
ANR	4666263	Statement	const	40:7:1001:1005	4666196	11	True				
ANR	4666264	ExpressionStatement	"ibuf = calloc ( 4 , size / 4 )"	40:13:1007:1032	4666196	12	True				
ANR	4666265	AssignmentExpression	"ibuf = calloc ( 4 , size / 4 )"		4666196	0		=			
ANR	4666266	Identifier	ibuf		4666196	0					
ANR	4666267	CallExpression	"calloc ( 4 , size / 4 )"		4666196	1					
ANR	4666268	Callee	calloc		4666196	0					
ANR	4666269	Identifier	calloc		4666196	0					
ANR	4666270	ArgumentList	4		4666196	1					
ANR	4666271	Argument	4		4666196	0					
ANR	4666272	PrimaryExpression	4		4666196	0					
ANR	4666273	Argument	size / 4		4666196	1					
ANR	4666274	MultiplicativeExpression	size / 4		4666196	0		/			
ANR	4666275	Identifier	size		4666196	0					
ANR	4666276	PrimaryExpression	4		4666196	1					
ANR	4666277	IfStatement	if ( ! ibuf )		4666196	13					
ANR	4666278	Condition	! ibuf	41:5:1039:1043	4666196	0	True				
ANR	4666279	UnaryOperationExpression	! ibuf		4666196	0					
ANR	4666280	UnaryOperator	!		4666196	0					
ANR	4666281	Identifier	ibuf		4666196	1					
ANR	4666282	CompoundStatement		13:12:325:325	4666196	1					
ANR	4666283	ExpressionStatement	free ( obuf )	42:2:1050:1061	4666196	0	True				
ANR	4666284	CallExpression	free ( obuf )		4666196	0					
ANR	4666285	Callee	free		4666196	0					
ANR	4666286	Identifier	free		4666196	0					
ANR	4666287	ArgumentList	obuf		4666196	1					
ANR	4666288	Argument	obuf		4666196	0					
ANR	4666289	Identifier	obuf		4666196	0					
ANR	4666290	ReturnStatement	return false ;	43:2:1065:1077	4666196	1	True				
ANR	4666291	Identifier	false		4666196	0					
ANR	4666292	Statement	ut32	45:1:1083:1086	4666196	14	True				
ANR	4666293	Statement	*	45:6:1088:1088	4666196	15	True				
ANR	4666294	Statement	const	45:7:1089:1093	4666196	16	True				
ANR	4666295	ExpressionStatement	"tmp = calloc ( 4 , size / 4 )"	45:13:1095:1119	4666196	17	True				
ANR	4666296	AssignmentExpression	"tmp = calloc ( 4 , size / 4 )"		4666196	0		=			
ANR	4666297	Identifier	tmp		4666196	0					
ANR	4666298	CallExpression	"calloc ( 4 , size / 4 )"		4666196	1					
ANR	4666299	Callee	calloc		4666196	0					
ANR	4666300	Identifier	calloc		4666196	0					
ANR	4666301	ArgumentList	4		4666196	1					
ANR	4666302	Argument	4		4666196	0					
ANR	4666303	PrimaryExpression	4		4666196	0					
ANR	4666304	Argument	size / 4		4666196	1					
ANR	4666305	MultiplicativeExpression	size / 4		4666196	0		/			
ANR	4666306	Identifier	size		4666196	0					
ANR	4666307	PrimaryExpression	4		4666196	1					
ANR	4666308	IfStatement	if ( ! ibuf )		4666196	18					
ANR	4666309	Condition	! ibuf	46:5:1126:1130	4666196	0	True				
ANR	4666310	UnaryOperationExpression	! ibuf		4666196	0					
ANR	4666311	UnaryOperator	!		4666196	0					
ANR	4666312	Identifier	ibuf		4666196	1					
ANR	4666313	CompoundStatement		18:12:412:412	4666196	1					
ANR	4666314	ExpressionStatement	free ( obuf )	47:2:1137:1148	4666196	0	True				
ANR	4666315	CallExpression	free ( obuf )		4666196	0					
ANR	4666316	Callee	free		4666196	0					
ANR	4666317	Identifier	free		4666196	0					
ANR	4666318	ArgumentList	obuf		4666196	1					
ANR	4666319	Argument	obuf		4666196	0					
ANR	4666320	Identifier	obuf		4666196	0					
ANR	4666321	ExpressionStatement	free ( ibuf )	48:2:1152:1163	4666196	1	True				
ANR	4666322	CallExpression	free ( ibuf )		4666196	0					
ANR	4666323	Callee	free		4666196	0					
ANR	4666324	Identifier	free		4666196	0					
ANR	4666325	ArgumentList	ibuf		4666196	1					
ANR	4666326	Argument	ibuf		4666196	0					
ANR	4666327	Identifier	ibuf		4666196	0					
ANR	4666328	ReturnStatement	return false ;	49:2:1167:1179	4666196	2	True				
ANR	4666329	Identifier	false		4666196	0					
ANR	4666330	ForStatement	for ( j = 0 ; j < size / 4 ; j ++ )		4666196	19					
ANR	4666331	ForInit	j = 0 ;	53:6:1234:1239	4666196	0	True				
ANR	4666332	AssignmentExpression	j = 0		4666196	0		=			
ANR	4666333	Identifier	j		4666196	0					
ANR	4666334	PrimaryExpression	0		4666196	1					
ANR	4666335	Condition	j < size / 4	53:13:1241:1250	4666196	1	True				
ANR	4666336	RelationalExpression	j < size / 4		4666196	0		<			
ANR	4666337	Identifier	j		4666196	0					
ANR	4666338	MultiplicativeExpression	size / 4		4666196	1		/			
ANR	4666339	Identifier	size		4666196	0					
ANR	4666340	PrimaryExpression	4		4666196	1					
ANR	4666341	PostIncDecOperationExpression	j ++	53:25:1253:1255	4666196	2	True				
ANR	4666342	Identifier	j		4666196	0					
ANR	4666343	IncDec	++		4666196	1					
ANR	4666344	CompoundStatement		25:30:537:537	4666196	3					
ANR	4666345	ExpressionStatement	ibuf [ j ] = r_read_le32 ( & buf [ 4 * j ] )	54:2:1262:1294	4666196	0	True				
ANR	4666346	AssignmentExpression	ibuf [ j ] = r_read_le32 ( & buf [ 4 * j ] )		4666196	0		=			
ANR	4666347	ArrayIndexing	ibuf [ j ]		4666196	0					
ANR	4666348	Identifier	ibuf		4666196	0					
ANR	4666349	Identifier	j		4666196	1					
ANR	4666350	CallExpression	r_read_le32 ( & buf [ 4 * j ] )		4666196	1					
ANR	4666351	Callee	r_read_le32		4666196	0					
ANR	4666352	Identifier	r_read_le32		4666196	0					
ANR	4666353	ArgumentList	& buf [ 4 * j ]		4666196	1					
ANR	4666354	Argument	& buf [ 4 * j ]		4666196	0					
ANR	4666355	UnaryOperationExpression	& buf [ 4 * j ]		4666196	0					
ANR	4666356	UnaryOperator	&		4666196	0					
ANR	4666357	ArrayIndexing	buf [ 4 * j ]		4666196	1					
ANR	4666358	Identifier	buf		4666196	0					
ANR	4666359	MultiplicativeExpression	4 * j		4666196	1		*			
ANR	4666360	PrimaryExpression	4		4666196	0					
ANR	4666361	Identifier	j		4666196	1					
ANR	4666362	IfStatement	if ( cry -> dir == 0 )		4666196	20					
ANR	4666363	Condition	cry -> dir == 0	59:5:1324:1336	4666196	0	True				
ANR	4666364	EqualityExpression	cry -> dir == 0		4666196	0		==			
ANR	4666365	PtrMemberAccess	cry -> dir		4666196	0					
ANR	4666366	Identifier	cry		4666196	0					
ANR	4666367	Identifier	dir		4666196	1					
ANR	4666368	PrimaryExpression	0		4666196	1					
ANR	4666369	CompoundStatement		31:20:618:618	4666196	1					
ANR	4666370	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		4666196	0					
ANR	4666371	ForInit	i = 0 ;	60:7:1348:1353	4666196	0	True				
ANR	4666372	AssignmentExpression	i = 0		4666196	0		=			
ANR	4666373	Identifier	i		4666196	0					
ANR	4666374	PrimaryExpression	0		4666196	1					
ANR	4666375	Condition	i < blocks	60:14:1355:1364	4666196	1	True				
ANR	4666376	RelationalExpression	i < blocks		4666196	0		<			
ANR	4666377	Identifier	i		4666196	0					
ANR	4666378	Identifier	blocks		4666196	1					
ANR	4666379	PostIncDecOperationExpression	i ++	60:26:1367:1369	4666196	2	True				
ANR	4666380	Identifier	i		4666196	0					
ANR	4666381	IncDec	++		4666196	1					
ANR	4666382	CompoundStatement		34:3:686:722	4666196	3					
ANR	4666383	IdentifierDeclStatement	const int delta = ( BLOCK_SIZE * i ) / 4 ;	62:3:1407:1443	4666196	0	True				
ANR	4666384	IdentifierDecl	delta = ( BLOCK_SIZE * i ) / 4		4666196	0					
ANR	4666385	IdentifierDeclType	const int		4666196	0					
ANR	4666386	Identifier	delta		4666196	1					
ANR	4666387	AssignmentExpression	delta = ( BLOCK_SIZE * i ) / 4		4666196	2		=			
ANR	4666388	Identifier	delta		4666196	0					
ANR	4666389	MultiplicativeExpression	( BLOCK_SIZE * i ) / 4		4666196	1		/			
ANR	4666390	MultiplicativeExpression	BLOCK_SIZE * i		4666196	0		*			
ANR	4666391	Identifier	BLOCK_SIZE		4666196	0					
ANR	4666392	Identifier	i		4666196	1					
ANR	4666393	PrimaryExpression	4		4666196	1					
ANR	4666394	ExpressionStatement	"serpent_encrypt ( & st , ibuf + delta , tmp + delta )"	63:3:1448:1496	4666196	1	True				
ANR	4666395	CallExpression	"serpent_encrypt ( & st , ibuf + delta , tmp + delta )"		4666196	0					
ANR	4666396	Callee	serpent_encrypt		4666196	0					
ANR	4666397	Identifier	serpent_encrypt		4666196	0					
ANR	4666398	ArgumentList	& st		4666196	1					
ANR	4666399	Argument	& st		4666196	0					
ANR	4666400	UnaryOperationExpression	& st		4666196	0					
ANR	4666401	UnaryOperator	&		4666196	0					
ANR	4666402	Identifier	st		4666196	1					
ANR	4666403	Argument	ibuf + delta		4666196	1					
ANR	4666404	AdditiveExpression	ibuf + delta		4666196	0		+			
ANR	4666405	Identifier	ibuf		4666196	0					
ANR	4666406	Identifier	delta		4666196	1					
ANR	4666407	Argument	tmp + delta		4666196	2					
ANR	4666408	AdditiveExpression	tmp + delta		4666196	0		+			
ANR	4666409	Identifier	tmp		4666196	0					
ANR	4666410	Identifier	delta		4666196	1					
ANR	4666411	ElseStatement	else		4666196	0					
ANR	4666412	IfStatement	if ( cry -> dir > 0 )		4666196	0					
ANR	4666413	Condition	cry -> dir > 0	65:12:1514:1525	4666196	0	True				
ANR	4666414	RelationalExpression	cry -> dir > 0		4666196	0		>			
ANR	4666415	PtrMemberAccess	cry -> dir		4666196	0					
ANR	4666416	Identifier	cry		4666196	0					
ANR	4666417	Identifier	dir		4666196	1					
ANR	4666418	PrimaryExpression	0		4666196	1					
ANR	4666419	CompoundStatement		37:26:807:807	4666196	1					
ANR	4666420	ForStatement	for ( i = 0 ; i < blocks ; i ++ )		4666196	0					
ANR	4666421	ForInit	i = 0 ;	66:7:1537:1542	4666196	0	True				
ANR	4666422	AssignmentExpression	i = 0		4666196	0		=			
ANR	4666423	Identifier	i		4666196	0					
ANR	4666424	PrimaryExpression	0		4666196	1					
ANR	4666425	Condition	i < blocks	66:14:1544:1553	4666196	1	True				
ANR	4666426	RelationalExpression	i < blocks		4666196	0		<			
ANR	4666427	Identifier	i		4666196	0					
ANR	4666428	Identifier	blocks		4666196	1					
ANR	4666429	PostIncDecOperationExpression	i ++	66:26:1556:1558	4666196	2	True				
ANR	4666430	Identifier	i		4666196	0					
ANR	4666431	IncDec	++		4666196	1					
ANR	4666432	CompoundStatement		40:3:875:911	4666196	3					
ANR	4666433	IdentifierDeclStatement	const int delta = ( BLOCK_SIZE * i ) / 4 ;	68:3:1596:1632	4666196	0	True				
ANR	4666434	IdentifierDecl	delta = ( BLOCK_SIZE * i ) / 4		4666196	0					
ANR	4666435	IdentifierDeclType	const int		4666196	0					
ANR	4666436	Identifier	delta		4666196	1					
ANR	4666437	AssignmentExpression	delta = ( BLOCK_SIZE * i ) / 4		4666196	2		=			
ANR	4666438	Identifier	delta		4666196	0					
ANR	4666439	MultiplicativeExpression	( BLOCK_SIZE * i ) / 4		4666196	1		/			
ANR	4666440	MultiplicativeExpression	BLOCK_SIZE * i		4666196	0		*			
ANR	4666441	Identifier	BLOCK_SIZE		4666196	0					
ANR	4666442	Identifier	i		4666196	1					
ANR	4666443	PrimaryExpression	4		4666196	1					
ANR	4666444	ExpressionStatement	"serpent_decrypt ( & st , ibuf + delta , tmp + delta )"	69:3:1637:1685	4666196	1	True				
ANR	4666445	CallExpression	"serpent_decrypt ( & st , ibuf + delta , tmp + delta )"		4666196	0					
ANR	4666446	Callee	serpent_decrypt		4666196	0					
ANR	4666447	Identifier	serpent_decrypt		4666196	0					
ANR	4666448	ArgumentList	& st		4666196	1					
ANR	4666449	Argument	& st		4666196	0					
ANR	4666450	UnaryOperationExpression	& st		4666196	0					
ANR	4666451	UnaryOperator	&		4666196	0					
ANR	4666452	Identifier	st		4666196	1					
ANR	4666453	Argument	ibuf + delta		4666196	1					
ANR	4666454	AdditiveExpression	ibuf + delta		4666196	0		+			
ANR	4666455	Identifier	ibuf		4666196	0					
ANR	4666456	Identifier	delta		4666196	1					
ANR	4666457	Argument	tmp + delta		4666196	2					
ANR	4666458	AdditiveExpression	tmp + delta		4666196	0		+			
ANR	4666459	Identifier	tmp		4666196	0					
ANR	4666460	Identifier	delta		4666196	1					
ANR	4666461	IdentifierDeclStatement	int k ;	74:1:1739:1744	4666196	21	True				
ANR	4666462	IdentifierDecl	k		4666196	0					
ANR	4666463	IdentifierDeclType	int		4666196	0					
ANR	4666464	Identifier	k		4666196	1					
ANR	4666465	ForStatement	for ( j = 0 ; j < size / 4 ; j ++ )		4666196	22					
ANR	4666466	ForInit	j = 0 ;	75:6:1752:1757	4666196	0	True				
ANR	4666467	AssignmentExpression	j = 0		4666196	0		=			
ANR	4666468	Identifier	j		4666196	0					
ANR	4666469	PrimaryExpression	0		4666196	1					
ANR	4666470	Condition	j < size / 4	75:13:1759:1768	4666196	1	True				
ANR	4666471	RelationalExpression	j < size / 4		4666196	0		<			
ANR	4666472	Identifier	j		4666196	0					
ANR	4666473	MultiplicativeExpression	size / 4		4666196	1		/			
ANR	4666474	Identifier	size		4666196	0					
ANR	4666475	PrimaryExpression	4		4666196	1					
ANR	4666476	PostIncDecOperationExpression	j ++	75:25:1771:1773	4666196	2	True				
ANR	4666477	Identifier	j		4666196	0					
ANR	4666478	IncDec	++		4666196	1					
ANR	4666479	CompoundStatement		47:30:1055:1055	4666196	3					
ANR	4666480	ExpressionStatement	k = 4 * j	76:2:1780:1787	4666196	0	True				
ANR	4666481	AssignmentExpression	k = 4 * j		4666196	0		=			
ANR	4666482	Identifier	k		4666196	0					
ANR	4666483	MultiplicativeExpression	4 * j		4666196	1		*			
ANR	4666484	PrimaryExpression	4		4666196	0					
ANR	4666485	Identifier	j		4666196	1					
ANR	4666486	ExpressionStatement	obuf [ k ] = tmp [ j ] & 0xff	77:2:1791:1814	4666196	1	True				
ANR	4666487	AssignmentExpression	obuf [ k ] = tmp [ j ] & 0xff		4666196	0		=			
ANR	4666488	ArrayIndexing	obuf [ k ]		4666196	0					
ANR	4666489	Identifier	obuf		4666196	0					
ANR	4666490	Identifier	k		4666196	1					
ANR	4666491	BitAndExpression	tmp [ j ] & 0xff		4666196	1		&			
ANR	4666492	ArrayIndexing	tmp [ j ]		4666196	0					
ANR	4666493	Identifier	tmp		4666196	0					
ANR	4666494	Identifier	j		4666196	1					
ANR	4666495	PrimaryExpression	0xff		4666196	1					
ANR	4666496	ExpressionStatement	obuf [ k + 1 ] = ( tmp [ j ] >> 8 ) & 0xff	78:2:1818:1850	4666196	2	True				
ANR	4666497	AssignmentExpression	obuf [ k + 1 ] = ( tmp [ j ] >> 8 ) & 0xff		4666196	0		=			
ANR	4666498	ArrayIndexing	obuf [ k + 1 ]		4666196	0					
ANR	4666499	Identifier	obuf		4666196	0					
ANR	4666500	AdditiveExpression	k + 1		4666196	1		+			
ANR	4666501	Identifier	k		4666196	0					
ANR	4666502	PrimaryExpression	1		4666196	1					
ANR	4666503	BitAndExpression	( tmp [ j ] >> 8 ) & 0xff		4666196	1		&			
ANR	4666504	ShiftExpression	tmp [ j ] >> 8		4666196	0		>>			
ANR	4666505	ArrayIndexing	tmp [ j ]		4666196	0					
ANR	4666506	Identifier	tmp		4666196	0					
ANR	4666507	Identifier	j		4666196	1					
ANR	4666508	PrimaryExpression	8		4666196	1					
ANR	4666509	PrimaryExpression	0xff		4666196	1					
ANR	4666510	ExpressionStatement	obuf [ k + 2 ] = ( tmp [ j ] >> 16 ) & 0xff	79:2:1854:1887	4666196	3	True				
ANR	4666511	AssignmentExpression	obuf [ k + 2 ] = ( tmp [ j ] >> 16 ) & 0xff		4666196	0		=			
ANR	4666512	ArrayIndexing	obuf [ k + 2 ]		4666196	0					
ANR	4666513	Identifier	obuf		4666196	0					
ANR	4666514	AdditiveExpression	k + 2		4666196	1		+			
ANR	4666515	Identifier	k		4666196	0					
ANR	4666516	PrimaryExpression	2		4666196	1					
ANR	4666517	BitAndExpression	( tmp [ j ] >> 16 ) & 0xff		4666196	1		&			
ANR	4666518	ShiftExpression	tmp [ j ] >> 16		4666196	0		>>			
ANR	4666519	ArrayIndexing	tmp [ j ]		4666196	0					
ANR	4666520	Identifier	tmp		4666196	0					
ANR	4666521	Identifier	j		4666196	1					
ANR	4666522	PrimaryExpression	16		4666196	1					
ANR	4666523	PrimaryExpression	0xff		4666196	1					
ANR	4666524	ExpressionStatement	obuf [ k + 3 ] = ( tmp [ j ] >> 24 ) & 0xff	80:2:1891:1924	4666196	4	True				
ANR	4666525	AssignmentExpression	obuf [ k + 3 ] = ( tmp [ j ] >> 24 ) & 0xff		4666196	0		=			
ANR	4666526	ArrayIndexing	obuf [ k + 3 ]		4666196	0					
ANR	4666527	Identifier	obuf		4666196	0					
ANR	4666528	AdditiveExpression	k + 3		4666196	1		+			
ANR	4666529	Identifier	k		4666196	0					
ANR	4666530	PrimaryExpression	3		4666196	1					
ANR	4666531	BitAndExpression	( tmp [ j ] >> 24 ) & 0xff		4666196	1		&			
ANR	4666532	ShiftExpression	tmp [ j ] >> 24		4666196	0		>>			
ANR	4666533	ArrayIndexing	tmp [ j ]		4666196	0					
ANR	4666534	Identifier	tmp		4666196	0					
ANR	4666535	Identifier	j		4666196	1					
ANR	4666536	PrimaryExpression	24		4666196	1					
ANR	4666537	PrimaryExpression	0xff		4666196	1					
ANR	4666538	ExpressionStatement	"r_crypto_append ( cry , obuf , size )"	83:1:1931:1964	4666196	23	True				
ANR	4666539	CallExpression	"r_crypto_append ( cry , obuf , size )"		4666196	0					
ANR	4666540	Callee	r_crypto_append		4666196	0					
ANR	4666541	Identifier	r_crypto_append		4666196	0					
ANR	4666542	ArgumentList	cry		4666196	1					
ANR	4666543	Argument	cry		4666196	0					
ANR	4666544	Identifier	cry		4666196	0					
ANR	4666545	Argument	obuf		4666196	1					
ANR	4666546	Identifier	obuf		4666196	0					
ANR	4666547	Argument	size		4666196	2					
ANR	4666548	Identifier	size		4666196	0					
ANR	4666549	ExpressionStatement	free ( obuf )	84:1:1967:1978	4666196	24	True				
ANR	4666550	CallExpression	free ( obuf )		4666196	0					
ANR	4666551	Callee	free		4666196	0					
ANR	4666552	Identifier	free		4666196	0					
ANR	4666553	ArgumentList	obuf		4666196	1					
ANR	4666554	Argument	obuf		4666196	0					
ANR	4666555	Identifier	obuf		4666196	0					
ANR	4666556	ExpressionStatement	free ( ibuf )	85:1:1981:1992	4666196	25	True				
ANR	4666557	CallExpression	free ( ibuf )		4666196	0					
ANR	4666558	Callee	free		4666196	0					
ANR	4666559	Identifier	free		4666196	0					
ANR	4666560	ArgumentList	ibuf		4666196	1					
ANR	4666561	Argument	ibuf		4666196	0					
ANR	4666562	Identifier	ibuf		4666196	0					
ANR	4666563	ExpressionStatement	free ( tmp )	86:1:1995:2005	4666196	26	True				
ANR	4666564	CallExpression	free ( tmp )		4666196	0					
ANR	4666565	Callee	free		4666196	0					
ANR	4666566	Identifier	free		4666196	0					
ANR	4666567	ArgumentList	tmp		4666196	1					
ANR	4666568	Argument	tmp		4666196	0					
ANR	4666569	Identifier	tmp		4666196	0					
ANR	4666570	ReturnStatement	return true ;	87:1:2008:2019	4666196	27	True				
ANR	4666571	Identifier	true		4666196	0					
ANR	4666572	ReturnType	static bool		4666196	1					
ANR	4666573	Identifier	update		4666196	2					
ANR	4666574	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		4666196	3					
ANR	4666575	Parameter	RCrypto * cry	29:19:681:692	4666196	0	True				
ANR	4666576	ParameterType	RCrypto *		4666196	0					
ANR	4666577	Identifier	cry		4666196	1					
ANR	4666578	Parameter	const ut8 * buf	29:33:695:708	4666196	1	True				
ANR	4666579	ParameterType	const ut8 *		4666196	0					
ANR	4666580	Identifier	buf		4666196	1					
ANR	4666581	Parameter	int len	29:49:711:717	4666196	2	True				
ANR	4666582	ParameterType	int		4666196	0					
ANR	4666583	Identifier	len		4666196	1					
ANR	4666584	CFGEntryNode	ENTRY		4666196		True				
ANR	4666585	CFGExitNode	EXIT		4666196		True				
ANR	4666586	Symbol	* tmp		4666196						
ANR	4666587	Symbol	BLOCK_SIZE		4666196						
ANR	4666588	Symbol	delta		4666196						
ANR	4666589	Symbol	& st		4666196						
ANR	4666590	Symbol	calloc		4666196						
ANR	4666591	Symbol	cry -> dir		4666196						
ANR	4666592	Symbol	len		4666196						
ANR	4666593	Symbol	tmp		4666196						
ANR	4666594	Symbol	obuf		4666196						
ANR	4666595	Symbol	ibuf		4666196						
ANR	4666596	Symbol	r_read_le32		4666196						
ANR	4666597	Symbol	blocks		4666196						
ANR	4666598	Symbol	false		4666196						
ANR	4666599	Symbol	i		4666196						
ANR	4666600	Symbol	diff		4666196						
ANR	4666601	Symbol	j		4666196						
ANR	4666602	Symbol	cry		4666196						
ANR	4666603	Symbol	* cry		4666196						
ANR	4666604	Symbol	k		4666196						
ANR	4666605	Symbol	buf		4666196						
ANR	4666606	Symbol	size		4666196						
ANR	4666607	Symbol	* j		4666196						
ANR	4666608	Symbol	* k		4666196						
ANR	4666609	Symbol	* obuf		4666196						
ANR	4666610	Symbol	true		4666196						
ANR	4666611	Symbol	* ibuf		4666196						
ANR	4666612	Function	final	90:0:2024:2115							
ANR	4666613	FunctionDef	"final (RCrypto * cry , const ut8 * buf , int len)"		4666612	0					
ANR	4666614	CompoundStatement		90:57:2081:2115	4666612	0					
ANR	4666615	ReturnStatement	"return update ( cry , buf , len ) ;"	91:1:2084:2113	4666612	0	True				
ANR	4666616	CallExpression	"update ( cry , buf , len )"		4666612	0					
ANR	4666617	Callee	update		4666612	0					
ANR	4666618	Identifier	update		4666612	0					
ANR	4666619	ArgumentList	cry		4666612	1					
ANR	4666620	Argument	cry		4666612	0					
ANR	4666621	Identifier	cry		4666612	0					
ANR	4666622	Argument	buf		4666612	1					
ANR	4666623	Identifier	buf		4666612	0					
ANR	4666624	Argument	len		4666612	2					
ANR	4666625	Identifier	len		4666612	0					
ANR	4666626	ReturnType	static bool		4666612	1					
ANR	4666627	Identifier	final		4666612	2					
ANR	4666628	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		4666612	3					
ANR	4666629	Parameter	RCrypto * cry	90:18:2042:2053	4666612	0	True				
ANR	4666630	ParameterType	RCrypto *		4666612	0					
ANR	4666631	Identifier	cry		4666612	1					
ANR	4666632	Parameter	const ut8 * buf	90:32:2056:2069	4666612	1	True				
ANR	4666633	ParameterType	const ut8 *		4666612	0					
ANR	4666634	Identifier	buf		4666612	1					
ANR	4666635	Parameter	int len	90:48:2072:2078	4666612	2	True				
ANR	4666636	ParameterType	int		4666612	0					
ANR	4666637	Identifier	len		4666612	1					
ANR	4666638	CFGEntryNode	ENTRY		4666612		True				
ANR	4666639	CFGExitNode	EXIT		4666612		True				
ANR	4666640	Symbol	buf		4666612						
ANR	4666641	Symbol	len		4666612						
ANR	4666642	Symbol	update		4666612						
ANR	4666643	Symbol	cry		4666612						
ANR	4666644	DeclStmt									
ANR	4666645	Decl							RCryptoPlugin	RCryptoPlugin	r_crypto_plugin_serpent
ANR	4666646	DeclStmt									
ANR	4666647	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
