command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5595537	File	data/converged/CVE-2019-16718~_radare2/print.c								
ANR	5595538	Function	file_mdump	47:0:1870:5123							
ANR	5595539	FunctionDef	file_mdump (struct r_magic * m)		5595538	0					
ANR	5595540	CompoundStatement		47:35:1905:5123	5595538	0					
ANR	5595541	Statement	static	48:1:1908:1913	5595538	0	True				
ANR	5595542	IdentifierDeclStatement	const char optyp [ ] = { FILE_OPS } ;	48:8:1915:1948	5595538	1	True				
ANR	5595543	IdentifierDecl	optyp [ ] = { FILE_OPS }		5595538	0					
ANR	5595544	IdentifierDeclType	const char [ ]		5595538	0					
ANR	5595545	Identifier	optyp		5595538	1					
ANR	5595546	AssignmentExpression	optyp [ ] = { FILE_OPS }		5595538	2		=			
ANR	5595547	Identifier	optyp		5595538	0					
ANR	5595548	InitializerList	FILE_OPS		5595538	1					
ANR	5595549	Identifier	FILE_OPS		5595538	0					
ANR	5595550	ExpressionStatement	"( void ) eprintf ( ""[%u"" , m -> lineno )"	50:1:1952:1985	5595538	2	True				
ANR	5595551	CastExpression	"( void ) eprintf ( ""[%u"" , m -> lineno )"		5595538	0					
ANR	5595552	CastTarget	void		5595538	0					
ANR	5595553	CallExpression	"eprintf ( ""[%u"" , m -> lineno )"		5595538	1					
ANR	5595554	Callee	eprintf		5595538	0					
ANR	5595555	Identifier	eprintf		5595538	0					
ANR	5595556	ArgumentList	"""[%u"""		5595538	1					
ANR	5595557	Argument	"""[%u"""		5595538	0					
ANR	5595558	PrimaryExpression	"""[%u"""		5595538	0					
ANR	5595559	Argument	m -> lineno		5595538	1					
ANR	5595560	PtrMemberAccess	m -> lineno		5595538	0					
ANR	5595561	Identifier	m		5595538	0					
ANR	5595562	Identifier	lineno		5595538	1					
ANR	5595563	ExpressionStatement	"( void ) eprintf ( ""%.*s %u"" , m -> cont_level & 7 , "">>>>>>>>"" , m -> offset )"	51:1:1988:2056	5595538	3	True				
ANR	5595564	CastExpression	"( void ) eprintf ( ""%.*s %u"" , m -> cont_level & 7 , "">>>>>>>>"" , m -> offset )"		5595538	0					
ANR	5595565	CastTarget	void		5595538	0					
ANR	5595566	CallExpression	"eprintf ( ""%.*s %u"" , m -> cont_level & 7 , "">>>>>>>>"" , m -> offset )"		5595538	1					
ANR	5595567	Callee	eprintf		5595538	0					
ANR	5595568	Identifier	eprintf		5595538	0					
ANR	5595569	ArgumentList	"""%.*s %u"""		5595538	1					
ANR	5595570	Argument	"""%.*s %u"""		5595538	0					
ANR	5595571	PrimaryExpression	"""%.*s %u"""		5595538	0					
ANR	5595572	Argument	m -> cont_level & 7		5595538	1					
ANR	5595573	BitAndExpression	m -> cont_level & 7		5595538	0		&			
ANR	5595574	PtrMemberAccess	m -> cont_level		5595538	0					
ANR	5595575	Identifier	m		5595538	0					
ANR	5595576	Identifier	cont_level		5595538	1					
ANR	5595577	PrimaryExpression	7		5595538	1					
ANR	5595578	Argument	""">>>>>>>>"""		5595538	2					
ANR	5595579	PrimaryExpression	""">>>>>>>>"""		5595538	0					
ANR	5595580	Argument	m -> offset		5595538	3					
ANR	5595581	PtrMemberAccess	m -> offset		5595538	0					
ANR	5595582	Identifier	m		5595538	0					
ANR	5595583	Identifier	offset		5595538	1					
ANR	5595584	IfStatement	if ( m -> flag & INDIR )		5595538	4					
ANR	5595585	Condition	m -> flag & INDIR	53:5:2064:2078	5595538	0	True				
ANR	5595586	BitAndExpression	m -> flag & INDIR		5595538	0		&			
ANR	5595587	PtrMemberAccess	m -> flag		5595538	0					
ANR	5595588	Identifier	m		5595538	0					
ANR	5595589	Identifier	flag		5595538	1					
ANR	5595590	Identifier	INDIR		5595538	1					
ANR	5595591	CompoundStatement		7:22:175:175	5595538	1					
ANR	5595592	ExpressionStatement	"( void ) eprintf ( ""(%s,"" , ( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"" )"	54:2:2085:2231	5595538	0	True				
ANR	5595593	CastExpression	"( void ) eprintf ( ""(%s,"" , ( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"" )"		5595538	0					
ANR	5595594	CastTarget	void		5595538	0					
ANR	5595595	CallExpression	"eprintf ( ""(%s,"" , ( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"" )"		5595538	1					
ANR	5595596	Callee	eprintf		5595538	0					
ANR	5595597	Identifier	eprintf		5595538	0					
ANR	5595598	ArgumentList	"""(%s,"""		5595538	1					
ANR	5595599	Argument	"""(%s,"""		5595538	0					
ANR	5595600	PrimaryExpression	"""(%s,"""		5595538	0					
ANR	5595601	Argument	"( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"""		5595538	1					
ANR	5595602	ConditionalExpression	"( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"""		5595538	0					
ANR	5595603	Condition	m -> in_type < file_nnames		5595538	0					
ANR	5595604	RelationalExpression	m -> in_type < file_nnames		5595538	0		<			
ANR	5595605	PtrMemberAccess	m -> in_type		5595538	0					
ANR	5595606	Identifier	m		5595538	0					
ANR	5595607	Identifier	in_type		5595538	1					
ANR	5595608	Identifier	file_nnames		5595538	1					
ANR	5595609	ArrayIndexing	magic_file_names [ m -> in_type ]		5595538	1					
ANR	5595610	Identifier	magic_file_names		5595538	0					
ANR	5595611	PtrMemberAccess	m -> in_type		5595538	1					
ANR	5595612	Identifier	m		5595538	0					
ANR	5595613	Identifier	in_type		5595538	1					
ANR	5595614	PrimaryExpression	"""*bad*"""		5595538	2					
ANR	5595615	IfStatement	if ( m -> in_op & FILE_OPINVERSE )		5595538	1					
ANR	5595616	Condition	m -> in_op & FILE_OPINVERSE	58:6:2239:2263	5595538	0	True				
ANR	5595617	BitAndExpression	m -> in_op & FILE_OPINVERSE		5595538	0		&			
ANR	5595618	PtrMemberAccess	m -> in_op		5595538	0					
ANR	5595619	Identifier	m		5595538	0					
ANR	5595620	Identifier	in_op		5595538	1					
ANR	5595621	Identifier	FILE_OPINVERSE		5595538	1					
ANR	5595622	ExpressionStatement	"( void ) fputc ( '~' , stderr )"	59:3:2269:2294	5595538	1	True				
ANR	5595623	CastExpression	"( void ) fputc ( '~' , stderr )"		5595538	0					
ANR	5595624	CastTarget	void		5595538	0					
ANR	5595625	CallExpression	"fputc ( '~' , stderr )"		5595538	1					
ANR	5595626	Callee	fputc		5595538	0					
ANR	5595627	Identifier	fputc		5595538	0					
ANR	5595628	ArgumentList	'~'		5595538	1					
ANR	5595629	Argument	'~'		5595538	0					
ANR	5595630	PrimaryExpression	'~'		5595538	0					
ANR	5595631	Argument	stderr		5595538	1					
ANR	5595632	Identifier	stderr		5595538	0					
ANR	5595633	ExpressionStatement	"( void ) eprintf ( ""%c%u),"" , ( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?' , m -> in_offset )"	60:2:2298:2440	5595538	2	True				
ANR	5595634	CastExpression	"( void ) eprintf ( ""%c%u),"" , ( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?' , m -> in_offset )"		5595538	0					
ANR	5595635	CastTarget	void		5595538	0					
ANR	5595636	CallExpression	"eprintf ( ""%c%u),"" , ( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?' , m -> in_offset )"		5595538	1					
ANR	5595637	Callee	eprintf		5595538	0					
ANR	5595638	Identifier	eprintf		5595538	0					
ANR	5595639	ArgumentList	"""%c%u),"""		5595538	1					
ANR	5595640	Argument	"""%c%u),"""		5595538	0					
ANR	5595641	PrimaryExpression	"""%c%u),"""		5595538	0					
ANR	5595642	Argument	( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?'		5595538	1					
ANR	5595643	ConditionalExpression	( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?'		5595538	0					
ANR	5595644	Condition	( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp )		5595538	0					
ANR	5595645	RelationalExpression	( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp )		5595538	0		<			
ANR	5595646	BitAndExpression	m -> in_op & FILE_OPS_MASK		5595538	0		&			
ANR	5595647	PtrMemberAccess	m -> in_op		5595538	0					
ANR	5595648	Identifier	m		5595538	0					
ANR	5595649	Identifier	in_op		5595538	1					
ANR	5595650	Identifier	FILE_OPS_MASK		5595538	1					
ANR	5595651	CallExpression	SZOF ( optyp )		5595538	1					
ANR	5595652	Callee	SZOF		5595538	0					
ANR	5595653	Identifier	SZOF		5595538	0					
ANR	5595654	ArgumentList	optyp		5595538	1					
ANR	5595655	Argument	optyp		5595538	0					
ANR	5595656	Identifier	optyp		5595538	0					
ANR	5595657	ArrayIndexing	optyp [ m -> in_op & FILE_OPS_MASK ]		5595538	1					
ANR	5595658	Identifier	optyp		5595538	0					
ANR	5595659	BitAndExpression	m -> in_op & FILE_OPS_MASK		5595538	1		&			
ANR	5595660	PtrMemberAccess	m -> in_op		5595538	0					
ANR	5595661	Identifier	m		5595538	0					
ANR	5595662	Identifier	in_op		5595538	1					
ANR	5595663	Identifier	FILE_OPS_MASK		5595538	1					
ANR	5595664	PrimaryExpression	'?'		5595538	2					
ANR	5595665	Argument	m -> in_offset		5595538	2					
ANR	5595666	PtrMemberAccess	m -> in_offset		5595538	0					
ANR	5595667	Identifier	m		5595538	0					
ANR	5595668	Identifier	in_offset		5595538	1					
ANR	5595669	ExpressionStatement	"( void ) eprintf ( "" %s%s"" , ( m -> flag & UNSIGNED ) ? ""u"" : """" , ( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"" )"	65:1:2446:2613	5595538	5	True				
ANR	5595670	CastExpression	"( void ) eprintf ( "" %s%s"" , ( m -> flag & UNSIGNED ) ? ""u"" : """" , ( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"" )"		5595538	0					
ANR	5595671	CastTarget	void		5595538	0					
ANR	5595672	CallExpression	"eprintf ( "" %s%s"" , ( m -> flag & UNSIGNED ) ? ""u"" : """" , ( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"" )"		5595538	1					
ANR	5595673	Callee	eprintf		5595538	0					
ANR	5595674	Identifier	eprintf		5595538	0					
ANR	5595675	ArgumentList	""" %s%s"""		5595538	1					
ANR	5595676	Argument	""" %s%s"""		5595538	0					
ANR	5595677	PrimaryExpression	""" %s%s"""		5595538	0					
ANR	5595678	Argument	"( m -> flag & UNSIGNED ) ? ""u"" : """""		5595538	1					
ANR	5595679	ConditionalExpression	"( m -> flag & UNSIGNED ) ? ""u"" : """""		5595538	0					
ANR	5595680	Condition	m -> flag & UNSIGNED		5595538	0					
ANR	5595681	BitAndExpression	m -> flag & UNSIGNED		5595538	0		&			
ANR	5595682	PtrMemberAccess	m -> flag		5595538	0					
ANR	5595683	Identifier	m		5595538	0					
ANR	5595684	Identifier	flag		5595538	1					
ANR	5595685	Identifier	UNSIGNED		5595538	1					
ANR	5595686	PrimaryExpression	"""u"""		5595538	1					
ANR	5595687	PrimaryExpression	""""""		5595538	2					
ANR	5595688	Argument	"( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"""		5595538	2					
ANR	5595689	ConditionalExpression	"( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"""		5595538	0					
ANR	5595690	Condition	m -> type < file_nnames		5595538	0					
ANR	5595691	RelationalExpression	m -> type < file_nnames		5595538	0		<			
ANR	5595692	PtrMemberAccess	m -> type		5595538	0					
ANR	5595693	Identifier	m		5595538	0					
ANR	5595694	Identifier	type		5595538	1					
ANR	5595695	Identifier	file_nnames		5595538	1					
ANR	5595696	ArrayIndexing	magic_file_names [ m -> type ]		5595538	1					
ANR	5595697	Identifier	magic_file_names		5595538	0					
ANR	5595698	PtrMemberAccess	m -> type		5595538	1					
ANR	5595699	Identifier	m		5595538	0					
ANR	5595700	Identifier	type		5595538	1					
ANR	5595701	PrimaryExpression	"""*bad*"""		5595538	2					
ANR	5595702	IfStatement	if ( m -> mask_op & FILE_OPINVERSE )		5595538	6					
ANR	5595703	Condition	m -> mask_op & FILE_OPINVERSE	68:5:2620:2646	5595538	0	True				
ANR	5595704	BitAndExpression	m -> mask_op & FILE_OPINVERSE		5595538	0		&			
ANR	5595705	PtrMemberAccess	m -> mask_op		5595538	0					
ANR	5595706	Identifier	m		5595538	0					
ANR	5595707	Identifier	mask_op		5595538	1					
ANR	5595708	Identifier	FILE_OPINVERSE		5595538	1					
ANR	5595709	ExpressionStatement	"( void ) fputc ( '~' , stderr )"	69:2:2651:2676	5595538	1	True				
ANR	5595710	CastExpression	"( void ) fputc ( '~' , stderr )"		5595538	0					
ANR	5595711	CastTarget	void		5595538	0					
ANR	5595712	CallExpression	"fputc ( '~' , stderr )"		5595538	1					
ANR	5595713	Callee	fputc		5595538	0					
ANR	5595714	Identifier	fputc		5595538	0					
ANR	5595715	ArgumentList	'~'		5595538	1					
ANR	5595716	Argument	'~'		5595538	0					
ANR	5595717	PrimaryExpression	'~'		5595538	0					
ANR	5595718	Argument	stderr		5595538	1					
ANR	5595719	Identifier	stderr		5595538	0					
ANR	5595720	IfStatement	if ( MAGIC_IS_STRING ( m -> type ) )		5595538	7					
ANR	5595721	Condition	MAGIC_IS_STRING ( m -> type )	71:5:2684:2707	5595538	0	True				
ANR	5595722	CallExpression	MAGIC_IS_STRING ( m -> type )		5595538	0					
ANR	5595723	Callee	MAGIC_IS_STRING		5595538	0					
ANR	5595724	Identifier	MAGIC_IS_STRING		5595538	0					
ANR	5595725	ArgumentList	m -> type		5595538	1					
ANR	5595726	Argument	m -> type		5595538	0					
ANR	5595727	PtrMemberAccess	m -> type		5595538	0					
ANR	5595728	Identifier	m		5595538	0					
ANR	5595729	Identifier	type		5595538	1					
ANR	5595730	CompoundStatement		25:31:804:804	5595538	1					
ANR	5595731	IfStatement	if ( m -> str_flags )		5595538	0					
ANR	5595732	Condition	m -> str_flags	72:6:2718:2729	5595538	0	True				
ANR	5595733	PtrMemberAccess	m -> str_flags		5595538	0					
ANR	5595734	Identifier	m		5595538	0					
ANR	5595735	Identifier	str_flags		5595538	1					
ANR	5595736	CompoundStatement		26:20:826:826	5595538	1					
ANR	5595737	ExpressionStatement	"( void ) fputc ( '/' , stderr )"	73:3:2737:2762	5595538	0	True				
ANR	5595738	CastExpression	"( void ) fputc ( '/' , stderr )"		5595538	0					
ANR	5595739	CastTarget	void		5595538	0					
ANR	5595740	CallExpression	"fputc ( '/' , stderr )"		5595538	1					
ANR	5595741	Callee	fputc		5595538	0					
ANR	5595742	Identifier	fputc		5595538	0					
ANR	5595743	ArgumentList	'/'		5595538	1					
ANR	5595744	Argument	'/'		5595538	0					
ANR	5595745	PrimaryExpression	'/'		5595538	0					
ANR	5595746	Argument	stderr		5595538	1					
ANR	5595747	Identifier	stderr		5595538	0					
ANR	5595748	IfStatement	if ( m -> str_flags & STRING_COMPACT_BLANK )		5595538	1					
ANR	5595749	Condition	m -> str_flags & STRING_COMPACT_BLANK	74:7:2771:2805	5595538	0	True				
ANR	5595750	BitAndExpression	m -> str_flags & STRING_COMPACT_BLANK		5595538	0		&			
ANR	5595751	PtrMemberAccess	m -> str_flags		5595538	0					
ANR	5595752	Identifier	m		5595538	0					
ANR	5595753	Identifier	str_flags		5595538	1					
ANR	5595754	Identifier	STRING_COMPACT_BLANK		5595538	1					
ANR	5595755	ExpressionStatement	"( void ) fputc ( CHAR_COMPACT_BLANK , stderr )"	75:4:2812:2852	5595538	1	True				
ANR	5595756	CastExpression	"( void ) fputc ( CHAR_COMPACT_BLANK , stderr )"		5595538	0					
ANR	5595757	CastTarget	void		5595538	0					
ANR	5595758	CallExpression	"fputc ( CHAR_COMPACT_BLANK , stderr )"		5595538	1					
ANR	5595759	Callee	fputc		5595538	0					
ANR	5595760	Identifier	fputc		5595538	0					
ANR	5595761	ArgumentList	CHAR_COMPACT_BLANK		5595538	1					
ANR	5595762	Argument	CHAR_COMPACT_BLANK		5595538	0					
ANR	5595763	Identifier	CHAR_COMPACT_BLANK		5595538	0					
ANR	5595764	Argument	stderr		5595538	1					
ANR	5595765	Identifier	stderr		5595538	0					
ANR	5595766	IfStatement	if ( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK )		5595538	2					
ANR	5595767	Condition	m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK	76:7:2861:2904	5595538	0	True				
ANR	5595768	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK		5595538	0		&			
ANR	5595769	PtrMemberAccess	m -> str_flags		5595538	0					
ANR	5595770	Identifier	m		5595538	0					
ANR	5595771	Identifier	str_flags		5595538	1					
ANR	5595772	Identifier	STRING_COMPACT_OPTIONAL_BLANK		5595538	1					
ANR	5595773	ExpressionStatement	"( void ) fputc ( CHAR_COMPACT_OPTIONAL_BLANK , stderr )"	77:4:2911:2968	5595538	1	True				
ANR	5595774	CastExpression	"( void ) fputc ( CHAR_COMPACT_OPTIONAL_BLANK , stderr )"		5595538	0					
ANR	5595775	CastTarget	void		5595538	0					
ANR	5595776	CallExpression	"fputc ( CHAR_COMPACT_OPTIONAL_BLANK , stderr )"		5595538	1					
ANR	5595777	Callee	fputc		5595538	0					
ANR	5595778	Identifier	fputc		5595538	0					
ANR	5595779	ArgumentList	CHAR_COMPACT_OPTIONAL_BLANK		5595538	1					
ANR	5595780	Argument	CHAR_COMPACT_OPTIONAL_BLANK		5595538	0					
ANR	5595781	Identifier	CHAR_COMPACT_OPTIONAL_BLANK		5595538	0					
ANR	5595782	Argument	stderr		5595538	1					
ANR	5595783	Identifier	stderr		5595538	0					
ANR	5595784	IfStatement	if ( m -> str_flags & STRING_IGNORE_LOWERCASE )		5595538	3					
ANR	5595785	Condition	m -> str_flags & STRING_IGNORE_LOWERCASE	79:7:2977:3014	5595538	0	True				
ANR	5595786	BitAndExpression	m -> str_flags & STRING_IGNORE_LOWERCASE		5595538	0		&			
ANR	5595787	PtrMemberAccess	m -> str_flags		5595538	0					
ANR	5595788	Identifier	m		5595538	0					
ANR	5595789	Identifier	str_flags		5595538	1					
ANR	5595790	Identifier	STRING_IGNORE_LOWERCASE		5595538	1					
ANR	5595791	ExpressionStatement	"( void ) fputc ( CHAR_IGNORE_LOWERCASE , stderr )"	80:4:3021:3064	5595538	1	True				
ANR	5595792	CastExpression	"( void ) fputc ( CHAR_IGNORE_LOWERCASE , stderr )"		5595538	0					
ANR	5595793	CastTarget	void		5595538	0					
ANR	5595794	CallExpression	"fputc ( CHAR_IGNORE_LOWERCASE , stderr )"		5595538	1					
ANR	5595795	Callee	fputc		5595538	0					
ANR	5595796	Identifier	fputc		5595538	0					
ANR	5595797	ArgumentList	CHAR_IGNORE_LOWERCASE		5595538	1					
ANR	5595798	Argument	CHAR_IGNORE_LOWERCASE		5595538	0					
ANR	5595799	Identifier	CHAR_IGNORE_LOWERCASE		5595538	0					
ANR	5595800	Argument	stderr		5595538	1					
ANR	5595801	Identifier	stderr		5595538	0					
ANR	5595802	IfStatement	if ( m -> str_flags & STRING_IGNORE_UPPERCASE )		5595538	4					
ANR	5595803	Condition	m -> str_flags & STRING_IGNORE_UPPERCASE	81:7:3073:3110	5595538	0	True				
ANR	5595804	BitAndExpression	m -> str_flags & STRING_IGNORE_UPPERCASE		5595538	0		&			
ANR	5595805	PtrMemberAccess	m -> str_flags		5595538	0					
ANR	5595806	Identifier	m		5595538	0					
ANR	5595807	Identifier	str_flags		5595538	1					
ANR	5595808	Identifier	STRING_IGNORE_UPPERCASE		5595538	1					
ANR	5595809	ExpressionStatement	"( void ) fputc ( CHAR_IGNORE_UPPERCASE , stderr )"	82:4:3117:3160	5595538	1	True				
ANR	5595810	CastExpression	"( void ) fputc ( CHAR_IGNORE_UPPERCASE , stderr )"		5595538	0					
ANR	5595811	CastTarget	void		5595538	0					
ANR	5595812	CallExpression	"fputc ( CHAR_IGNORE_UPPERCASE , stderr )"		5595538	1					
ANR	5595813	Callee	fputc		5595538	0					
ANR	5595814	Identifier	fputc		5595538	0					
ANR	5595815	ArgumentList	CHAR_IGNORE_UPPERCASE		5595538	1					
ANR	5595816	Argument	CHAR_IGNORE_UPPERCASE		5595538	0					
ANR	5595817	Identifier	CHAR_IGNORE_UPPERCASE		5595538	0					
ANR	5595818	Argument	stderr		5595538	1					
ANR	5595819	Identifier	stderr		5595538	0					
ANR	5595820	IfStatement	if ( m -> str_flags & REGEX_OFFSET_START )		5595538	5					
ANR	5595821	Condition	m -> str_flags & REGEX_OFFSET_START	83:7:3169:3201	5595538	0	True				
ANR	5595822	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		5595538	0		&			
ANR	5595823	PtrMemberAccess	m -> str_flags		5595538	0					
ANR	5595824	Identifier	m		5595538	0					
ANR	5595825	Identifier	str_flags		5595538	1					
ANR	5595826	Identifier	REGEX_OFFSET_START		5595538	1					
ANR	5595827	ExpressionStatement	"( void ) fputc ( CHAR_REGEX_OFFSET_START , stderr )"	84:4:3208:3253	5595538	1	True				
ANR	5595828	CastExpression	"( void ) fputc ( CHAR_REGEX_OFFSET_START , stderr )"		5595538	0					
ANR	5595829	CastTarget	void		5595538	0					
ANR	5595830	CallExpression	"fputc ( CHAR_REGEX_OFFSET_START , stderr )"		5595538	1					
ANR	5595831	Callee	fputc		5595538	0					
ANR	5595832	Identifier	fputc		5595538	0					
ANR	5595833	ArgumentList	CHAR_REGEX_OFFSET_START		5595538	1					
ANR	5595834	Argument	CHAR_REGEX_OFFSET_START		5595538	0					
ANR	5595835	Identifier	CHAR_REGEX_OFFSET_START		5595538	0					
ANR	5595836	Argument	stderr		5595538	1					
ANR	5595837	Identifier	stderr		5595538	0					
ANR	5595838	IfStatement	if ( m -> str_range )		5595538	1					
ANR	5595839	Condition	m -> str_range	86:6:3265:3276	5595538	0	True				
ANR	5595840	PtrMemberAccess	m -> str_range		5595538	0					
ANR	5595841	Identifier	m		5595538	0					
ANR	5595842	Identifier	str_range		5595538	1					
ANR	5595843	ExpressionStatement	"( void ) eprintf ( ""/%u"" , m -> str_range )"	87:3:3282:3318	5595538	1	True				
ANR	5595844	CastExpression	"( void ) eprintf ( ""/%u"" , m -> str_range )"		5595538	0					
ANR	5595845	CastTarget	void		5595538	0					
ANR	5595846	CallExpression	"eprintf ( ""/%u"" , m -> str_range )"		5595538	1					
ANR	5595847	Callee	eprintf		5595538	0					
ANR	5595848	Identifier	eprintf		5595538	0					
ANR	5595849	ArgumentList	"""/%u"""		5595538	1					
ANR	5595850	Argument	"""/%u"""		5595538	0					
ANR	5595851	PrimaryExpression	"""/%u"""		5595538	0					
ANR	5595852	Argument	m -> str_range		5595538	1					
ANR	5595853	PtrMemberAccess	m -> str_range		5595538	0					
ANR	5595854	Identifier	m		5595538	0					
ANR	5595855	Identifier	str_range		5595538	1					
ANR	5595856	ElseStatement	else		5595538	0					
ANR	5595857	CompoundStatement		43:6:1423:1423	5595538	0					
ANR	5595858	IfStatement	if ( ( m -> mask_op & FILE_OPS_MASK ) < SZOF ( optyp ) )		5595538	0					
ANR	5595859	Condition	( m -> mask_op & FILE_OPS_MASK ) < SZOF ( optyp )	90:6:3337:3378	5595538	0	True				
ANR	5595860	RelationalExpression	( m -> mask_op & FILE_OPS_MASK ) < SZOF ( optyp )		5595538	0		<			
ANR	5595861	BitAndExpression	m -> mask_op & FILE_OPS_MASK		5595538	0		&			
ANR	5595862	PtrMemberAccess	m -> mask_op		5595538	0					
ANR	5595863	Identifier	m		5595538	0					
ANR	5595864	Identifier	mask_op		5595538	1					
ANR	5595865	Identifier	FILE_OPS_MASK		5595538	1					
ANR	5595866	CallExpression	SZOF ( optyp )		5595538	1					
ANR	5595867	Callee	SZOF		5595538	0					
ANR	5595868	Identifier	SZOF		5595538	0					
ANR	5595869	ArgumentList	optyp		5595538	1					
ANR	5595870	Argument	optyp		5595538	0					
ANR	5595871	Identifier	optyp		5595538	0					
ANR	5595872	ExpressionStatement	"( void ) fputc ( optyp [ m -> mask_op & FILE_OPS_MASK ] , stderr )"	91:3:3384:3439	5595538	1	True				
ANR	5595873	CastExpression	"( void ) fputc ( optyp [ m -> mask_op & FILE_OPS_MASK ] , stderr )"		5595538	0					
ANR	5595874	CastTarget	void		5595538	0					
ANR	5595875	CallExpression	"fputc ( optyp [ m -> mask_op & FILE_OPS_MASK ] , stderr )"		5595538	1					
ANR	5595876	Callee	fputc		5595538	0					
ANR	5595877	Identifier	fputc		5595538	0					
ANR	5595878	ArgumentList	optyp [ m -> mask_op & FILE_OPS_MASK ]		5595538	1					
ANR	5595879	Argument	optyp [ m -> mask_op & FILE_OPS_MASK ]		5595538	0					
ANR	5595880	ArrayIndexing	optyp [ m -> mask_op & FILE_OPS_MASK ]		5595538	0					
ANR	5595881	Identifier	optyp		5595538	0					
ANR	5595882	BitAndExpression	m -> mask_op & FILE_OPS_MASK		5595538	1		&			
ANR	5595883	PtrMemberAccess	m -> mask_op		5595538	0					
ANR	5595884	Identifier	m		5595538	0					
ANR	5595885	Identifier	mask_op		5595538	1					
ANR	5595886	Identifier	FILE_OPS_MASK		5595538	1					
ANR	5595887	Argument	stderr		5595538	1					
ANR	5595888	Identifier	stderr		5595538	0					
ANR	5595889	ElseStatement	else		5595538	0					
ANR	5595890	ExpressionStatement	"( void ) fputc ( '?' , stderr )"	93:3:3451:3476	5595538	0	True				
ANR	5595891	CastExpression	"( void ) fputc ( '?' , stderr )"		5595538	0					
ANR	5595892	CastTarget	void		5595538	0					
ANR	5595893	CallExpression	"fputc ( '?' , stderr )"		5595538	1					
ANR	5595894	Callee	fputc		5595538	0					
ANR	5595895	Identifier	fputc		5595538	0					
ANR	5595896	ArgumentList	'?'		5595538	1					
ANR	5595897	Argument	'?'		5595538	0					
ANR	5595898	PrimaryExpression	'?'		5595538	0					
ANR	5595899	Argument	stderr		5595538	1					
ANR	5595900	Identifier	stderr		5595538	0					
ANR	5595901	IfStatement	if ( m -> num_mask )		5595538	1					
ANR	5595902	Condition	m -> num_mask	95:6:3485:3495	5595538	0	True				
ANR	5595903	PtrMemberAccess	m -> num_mask		5595538	0					
ANR	5595904	Identifier	m		5595538	0					
ANR	5595905	Identifier	num_mask		5595538	1					
ANR	5595906	Statement	(	96:3:3501:3501	5595538	1	True				
ANR	5595907	Statement	void	96:4:3502:3505	5595538	2	True				
ANR	5595908	Statement	)	96:8:3506:3506	5595538	3	True				
ANR	5595909	Statement	eprintf	96:10:3508:3514	5595538	4	True				
ANR	5595910	Statement	(	96:18:3516:3516	5595538	5	True				
ANR	5595911	Statement	"""%08"""	96:19:3517:3521	5595538	6	True				
ANR	5595912	Statement	PFMT64x	96:24:3522:3528	5595538	7	True				
ANR	5595913	Statement	","	96:31:3529:3529	5595538	8	True				
ANR	5595914	Statement	(	96:33:3531:3531	5595538	9	True				
ANR	5595915	Statement	ut64	96:34:3532:3535	5595538	10	True				
ANR	5595916	Statement	)	96:38:3536:3536	5595538	11	True				
ANR	5595917	Statement	m	96:39:3537:3537	5595538	12	True				
ANR	5595918	Statement	->	96:40:3538:3539	5595538	13	True				
ANR	5595919	Statement	num_mask	96:42:3540:3547	5595538	14	True				
ANR	5595920	Statement	)	96:50:3548:3548	5595538	15	True				
ANR	5595921	ExpressionStatement		96:51:3549:3549	5595538	16	True				
ANR	5595922	ExpressionStatement	"( void ) eprintf ( "",%c"" , m -> reln )"	98:1:3555:3586	5595538	8	True				
ANR	5595923	CastExpression	"( void ) eprintf ( "",%c"" , m -> reln )"		5595538	0					
ANR	5595924	CastTarget	void		5595538	0					
ANR	5595925	CallExpression	"eprintf ( "",%c"" , m -> reln )"		5595538	1					
ANR	5595926	Callee	eprintf		5595538	0					
ANR	5595927	Identifier	eprintf		5595538	0					
ANR	5595928	ArgumentList	""",%c"""		5595538	1					
ANR	5595929	Argument	""",%c"""		5595538	0					
ANR	5595930	PrimaryExpression	""",%c"""		5595538	0					
ANR	5595931	Argument	m -> reln		5595538	1					
ANR	5595932	PtrMemberAccess	m -> reln		5595538	0					
ANR	5595933	Identifier	m		5595538	0					
ANR	5595934	Identifier	reln		5595538	1					
ANR	5595935	IfStatement	if ( m -> reln != 'x' )		5595538	9					
ANR	5595936	Condition	m -> reln != 'x'	100:5:3594:3607	5595538	0	True				
ANR	5595937	EqualityExpression	m -> reln != 'x'		5595538	0		!=			
ANR	5595938	PtrMemberAccess	m -> reln		5595538	0					
ANR	5595939	Identifier	m		5595538	0					
ANR	5595940	Identifier	reln		5595538	1					
ANR	5595941	PrimaryExpression	'x'		5595538	1					
ANR	5595942	CompoundStatement		54:21:1704:1704	5595538	1					
ANR	5595943	SwitchStatement	switch ( m -> type )		5595538	0					
ANR	5595944	Condition	m -> type	101:10:3622:3628	5595538	0	True				
ANR	5595945	PtrMemberAccess	m -> type		5595538	0					
ANR	5595946	Identifier	m		5595538	0					
ANR	5595947	Identifier	type		5595538	1					
ANR	5595948	CompoundStatement		55:19:1725:1725	5595538	1					
ANR	5595949	Label	case FILE_BYTE :	102:2:3635:3649	5595538	0	True				
ANR	5595950	Identifier	FILE_BYTE		5595538	0					
ANR	5595951	Label	case FILE_SHORT :	103:2:3653:3668	5595538	1	True				
ANR	5595952	Identifier	FILE_SHORT		5595538	0					
ANR	5595953	Label	case FILE_LONG :	104:2:3672:3686	5595538	2	True				
ANR	5595954	Identifier	FILE_LONG		5595538	0					
ANR	5595955	Label	case FILE_LESHORT :	105:2:3690:3707	5595538	3	True				
ANR	5595956	Identifier	FILE_LESHORT		5595538	0					
ANR	5595957	Label	case FILE_LELONG :	106:2:3711:3727	5595538	4	True				
ANR	5595958	Identifier	FILE_LELONG		5595538	0					
ANR	5595959	Label	case FILE_MELONG :	107:2:3731:3747	5595538	5	True				
ANR	5595960	Identifier	FILE_MELONG		5595538	0					
ANR	5595961	Label	case FILE_BESHORT :	108:2:3751:3768	5595538	6	True				
ANR	5595962	Identifier	FILE_BESHORT		5595538	0					
ANR	5595963	Label	case FILE_BELONG :	109:2:3772:3788	5595538	7	True				
ANR	5595964	Identifier	FILE_BELONG		5595538	0					
ANR	5595965	ExpressionStatement	"( void ) eprintf ( ""%d"" , m -> value . l )"	110:3:3793:3826	5595538	8	True				
ANR	5595966	CastExpression	"( void ) eprintf ( ""%d"" , m -> value . l )"		5595538	0					
ANR	5595967	CastTarget	void		5595538	0					
ANR	5595968	CallExpression	"eprintf ( ""%d"" , m -> value . l )"		5595538	1					
ANR	5595969	Callee	eprintf		5595538	0					
ANR	5595970	Identifier	eprintf		5595538	0					
ANR	5595971	ArgumentList	"""%d"""		5595538	1					
ANR	5595972	Argument	"""%d"""		5595538	0					
ANR	5595973	PrimaryExpression	"""%d"""		5595538	0					
ANR	5595974	Argument	m -> value . l		5595538	1					
ANR	5595975	MemberAccess	m -> value . l		5595538	0					
ANR	5595976	PtrMemberAccess	m -> value		5595538	0					
ANR	5595977	Identifier	m		5595538	0					
ANR	5595978	Identifier	value		5595538	1					
ANR	5595979	Identifier	l		5595538	1					
ANR	5595980	BreakStatement	break ;	111:3:3831:3836	5595538	9	True				
ANR	5595981	Label	case FILE_BEQUAD :	112:2:3840:3856	5595538	10	True				
ANR	5595982	Identifier	FILE_BEQUAD		5595538	0					
ANR	5595983	Label	case FILE_LEQUAD :	113:2:3860:3876	5595538	11	True				
ANR	5595984	Identifier	FILE_LEQUAD		5595538	0					
ANR	5595985	Label	case FILE_QUAD :	114:2:3880:3894	5595538	12	True				
ANR	5595986	Identifier	FILE_QUAD		5595538	0					
ANR	5595987	Statement	(	115:3:3899:3899	5595538	13	True				
ANR	5595988	Statement	void	115:4:3900:3903	5595538	14	True				
ANR	5595989	Statement	)	115:8:3904:3904	5595538	15	True				
ANR	5595990	Statement	eprintf	115:10:3906:3912	5595538	16	True				
ANR	5595991	Statement	(	115:18:3914:3914	5595538	17	True				
ANR	5595992	Statement	"""%"""	115:19:3915:3917	5595538	18	True				
ANR	5595993	Statement	PFMT64d	115:22:3918:3924	5595538	19	True				
ANR	5595994	Statement	","	115:29:3925:3925	5595538	20	True				
ANR	5595995	Statement	(	115:31:3927:3927	5595538	21	True				
ANR	5595996	Statement	ut64	115:32:3928:3931	5595538	22	True				
ANR	5595997	Statement	)	115:36:3932:3932	5595538	23	True				
ANR	5595998	Statement	m	115:37:3933:3933	5595538	24	True				
ANR	5595999	Statement	->	115:38:3934:3935	5595538	25	True				
ANR	5596000	Statement	value	115:40:3936:3940	5595538	26	True				
ANR	5596001	Statement	.	115:45:3941:3941	5595538	27	True				
ANR	5596002	Statement	q	115:46:3942:3942	5595538	28	True				
ANR	5596003	Statement	)	115:47:3943:3943	5595538	29	True				
ANR	5596004	ExpressionStatement		115:48:3944:3944	5595538	30	True				
ANR	5596005	BreakStatement	break ;	116:3:3949:3954	5595538	31	True				
ANR	5596006	Label	case FILE_PSTRING :	117:2:3958:3975	5595538	32	True				
ANR	5596007	Identifier	FILE_PSTRING		5595538	0					
ANR	5596008	Label	case FILE_STRING :	118:2:3979:3995	5595538	33	True				
ANR	5596009	Identifier	FILE_STRING		5595538	0					
ANR	5596010	Label	case FILE_REGEX :	119:2:3999:4014	5595538	34	True				
ANR	5596011	Identifier	FILE_REGEX		5595538	0					
ANR	5596012	Label	case FILE_BESTRING16 :	120:2:4018:4038	5595538	35	True				
ANR	5596013	Identifier	FILE_BESTRING16		5595538	0					
ANR	5596014	Label	case FILE_LESTRING16 :	121:2:4042:4062	5595538	36	True				
ANR	5596015	Identifier	FILE_LESTRING16		5595538	0					
ANR	5596016	Label	case FILE_SEARCH :	122:2:4066:4082	5595538	37	True				
ANR	5596017	Identifier	FILE_SEARCH		5595538	0					
ANR	5596018	ExpressionStatement	"file_showstr ( stderr , m -> value . s , ( size_t ) m -> vallen )"	123:3:4087:4138	5595538	38	True				
ANR	5596019	CallExpression	"file_showstr ( stderr , m -> value . s , ( size_t ) m -> vallen )"		5595538	0					
ANR	5596020	Callee	file_showstr		5595538	0					
ANR	5596021	Identifier	file_showstr		5595538	0					
ANR	5596022	ArgumentList	stderr		5595538	1					
ANR	5596023	Argument	stderr		5595538	0					
ANR	5596024	Identifier	stderr		5595538	0					
ANR	5596025	Argument	m -> value . s		5595538	1					
ANR	5596026	MemberAccess	m -> value . s		5595538	0					
ANR	5596027	PtrMemberAccess	m -> value		5595538	0					
ANR	5596028	Identifier	m		5595538	0					
ANR	5596029	Identifier	value		5595538	1					
ANR	5596030	Identifier	s		5595538	1					
ANR	5596031	Argument	( size_t ) m -> vallen		5595538	2					
ANR	5596032	CastExpression	( size_t ) m -> vallen		5595538	0					
ANR	5596033	CastTarget	size_t		5595538	0					
ANR	5596034	PtrMemberAccess	m -> vallen		5595538	1					
ANR	5596035	Identifier	m		5595538	0					
ANR	5596036	Identifier	vallen		5595538	1					
ANR	5596037	BreakStatement	break ;	124:3:4143:4148	5595538	39	True				
ANR	5596038	Label	case FILE_DATE :	125:2:4152:4166	5595538	40	True				
ANR	5596039	Identifier	FILE_DATE		5595538	0					
ANR	5596040	Label	case FILE_LEDATE :	126:2:4170:4186	5595538	41	True				
ANR	5596041	Identifier	FILE_LEDATE		5595538	0					
ANR	5596042	Label	case FILE_BEDATE :	127:2:4190:4206	5595538	42	True				
ANR	5596043	Identifier	FILE_BEDATE		5595538	0					
ANR	5596044	Label	case FILE_MEDATE :	128:2:4210:4226	5595538	43	True				
ANR	5596045	Identifier	FILE_MEDATE		5595538	0					
ANR	5596046	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 1 ) )"	129:3:4231:4288	5595538	44	True				
ANR	5596047	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 1 ) )"		5595538	0					
ANR	5596048	CastTarget	void		5595538	0					
ANR	5596049	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 1 ) )"		5595538	1					
ANR	5596050	Callee	eprintf		5595538	0					
ANR	5596051	Identifier	eprintf		5595538	0					
ANR	5596052	ArgumentList	"""%s,"""		5595538	1					
ANR	5596053	Argument	"""%s,"""		5595538	0					
ANR	5596054	PrimaryExpression	"""%s,"""		5595538	0					
ANR	5596055	Argument	"file_fmttime ( m -> value . l , 1 )"		5595538	1					
ANR	5596056	CallExpression	"file_fmttime ( m -> value . l , 1 )"		5595538	0					
ANR	5596057	Callee	file_fmttime		5595538	0					
ANR	5596058	Identifier	file_fmttime		5595538	0					
ANR	5596059	ArgumentList	m -> value . l		5595538	1					
ANR	5596060	Argument	m -> value . l		5595538	0					
ANR	5596061	MemberAccess	m -> value . l		5595538	0					
ANR	5596062	PtrMemberAccess	m -> value		5595538	0					
ANR	5596063	Identifier	m		5595538	0					
ANR	5596064	Identifier	value		5595538	1					
ANR	5596065	Identifier	l		5595538	1					
ANR	5596066	Argument	1		5595538	1					
ANR	5596067	PrimaryExpression	1		5595538	0					
ANR	5596068	BreakStatement	break ;	131:3:4293:4298	5595538	45	True				
ANR	5596069	Label	case FILE_LDATE :	132:2:4302:4317	5595538	46	True				
ANR	5596070	Identifier	FILE_LDATE		5595538	0					
ANR	5596071	Label	case FILE_LELDATE :	133:2:4321:4338	5595538	47	True				
ANR	5596072	Identifier	FILE_LELDATE		5595538	0					
ANR	5596073	Label	case FILE_BELDATE :	134:2:4342:4359	5595538	48	True				
ANR	5596074	Identifier	FILE_BELDATE		5595538	0					
ANR	5596075	Label	case FILE_MELDATE :	135:2:4363:4380	5595538	49	True				
ANR	5596076	Identifier	FILE_MELDATE		5595538	0					
ANR	5596077	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 0 ) )"	136:3:4385:4442	5595538	50	True				
ANR	5596078	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 0 ) )"		5595538	0					
ANR	5596079	CastTarget	void		5595538	0					
ANR	5596080	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 0 ) )"		5595538	1					
ANR	5596081	Callee	eprintf		5595538	0					
ANR	5596082	Identifier	eprintf		5595538	0					
ANR	5596083	ArgumentList	"""%s,"""		5595538	1					
ANR	5596084	Argument	"""%s,"""		5595538	0					
ANR	5596085	PrimaryExpression	"""%s,"""		5595538	0					
ANR	5596086	Argument	"file_fmttime ( m -> value . l , 0 )"		5595538	1					
ANR	5596087	CallExpression	"file_fmttime ( m -> value . l , 0 )"		5595538	0					
ANR	5596088	Callee	file_fmttime		5595538	0					
ANR	5596089	Identifier	file_fmttime		5595538	0					
ANR	5596090	ArgumentList	m -> value . l		5595538	1					
ANR	5596091	Argument	m -> value . l		5595538	0					
ANR	5596092	MemberAccess	m -> value . l		5595538	0					
ANR	5596093	PtrMemberAccess	m -> value		5595538	0					
ANR	5596094	Identifier	m		5595538	0					
ANR	5596095	Identifier	value		5595538	1					
ANR	5596096	Identifier	l		5595538	1					
ANR	5596097	Argument	0		5595538	1					
ANR	5596098	PrimaryExpression	0		5595538	0					
ANR	5596099	BreakStatement	break ;	138:3:4447:4452	5595538	51	True				
ANR	5596100	Label	case FILE_QDATE :	139:2:4456:4471	5595538	52	True				
ANR	5596101	Identifier	FILE_QDATE		5595538	0					
ANR	5596102	Label	case FILE_LEQDATE :	140:2:4475:4492	5595538	53	True				
ANR	5596103	Identifier	FILE_LEQDATE		5595538	0					
ANR	5596104	Label	case FILE_BEQDATE :	141:2:4496:4513	5595538	54	True				
ANR	5596105	Identifier	FILE_BEQDATE		5595538	0					
ANR	5596106	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 1 ) )"	142:3:4518:4581	5595538	55	True				
ANR	5596107	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 1 ) )"		5595538	0					
ANR	5596108	CastTarget	void		5595538	0					
ANR	5596109	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 1 ) )"		5595538	1					
ANR	5596110	Callee	eprintf		5595538	0					
ANR	5596111	Identifier	eprintf		5595538	0					
ANR	5596112	ArgumentList	"""%s,"""		5595538	1					
ANR	5596113	Argument	"""%s,"""		5595538	0					
ANR	5596114	PrimaryExpression	"""%s,"""		5595538	0					
ANR	5596115	Argument	"file_fmttime ( ( ut32 ) m -> value . q , 1 )"		5595538	1					
ANR	5596116	CallExpression	"file_fmttime ( ( ut32 ) m -> value . q , 1 )"		5595538	0					
ANR	5596117	Callee	file_fmttime		5595538	0					
ANR	5596118	Identifier	file_fmttime		5595538	0					
ANR	5596119	ArgumentList	( ut32 ) m -> value . q		5595538	1					
ANR	5596120	Argument	( ut32 ) m -> value . q		5595538	0					
ANR	5596121	CastExpression	( ut32 ) m -> value . q		5595538	0					
ANR	5596122	CastTarget	ut32		5595538	0					
ANR	5596123	MemberAccess	m -> value . q		5595538	1					
ANR	5596124	PtrMemberAccess	m -> value		5595538	0					
ANR	5596125	Identifier	m		5595538	0					
ANR	5596126	Identifier	value		5595538	1					
ANR	5596127	Identifier	q		5595538	1					
ANR	5596128	Argument	1		5595538	1					
ANR	5596129	PrimaryExpression	1		5595538	0					
ANR	5596130	BreakStatement	break ;	144:3:4586:4591	5595538	56	True				
ANR	5596131	Label	case FILE_QLDATE :	145:2:4595:4611	5595538	57	True				
ANR	5596132	Identifier	FILE_QLDATE		5595538	0					
ANR	5596133	Label	case FILE_LEQLDATE :	146:2:4615:4633	5595538	58	True				
ANR	5596134	Identifier	FILE_LEQLDATE		5595538	0					
ANR	5596135	Label	case FILE_BEQLDATE :	147:2:4637:4655	5595538	59	True				
ANR	5596136	Identifier	FILE_BEQLDATE		5595538	0					
ANR	5596137	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 0 ) )"	148:3:4660:4723	5595538	60	True				
ANR	5596138	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 0 ) )"		5595538	0					
ANR	5596139	CastTarget	void		5595538	0					
ANR	5596140	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 0 ) )"		5595538	1					
ANR	5596141	Callee	eprintf		5595538	0					
ANR	5596142	Identifier	eprintf		5595538	0					
ANR	5596143	ArgumentList	"""%s,"""		5595538	1					
ANR	5596144	Argument	"""%s,"""		5595538	0					
ANR	5596145	PrimaryExpression	"""%s,"""		5595538	0					
ANR	5596146	Argument	"file_fmttime ( ( ut32 ) m -> value . q , 0 )"		5595538	1					
ANR	5596147	CallExpression	"file_fmttime ( ( ut32 ) m -> value . q , 0 )"		5595538	0					
ANR	5596148	Callee	file_fmttime		5595538	0					
ANR	5596149	Identifier	file_fmttime		5595538	0					
ANR	5596150	ArgumentList	( ut32 ) m -> value . q		5595538	1					
ANR	5596151	Argument	( ut32 ) m -> value . q		5595538	0					
ANR	5596152	CastExpression	( ut32 ) m -> value . q		5595538	0					
ANR	5596153	CastTarget	ut32		5595538	0					
ANR	5596154	MemberAccess	m -> value . q		5595538	1					
ANR	5596155	PtrMemberAccess	m -> value		5595538	0					
ANR	5596156	Identifier	m		5595538	0					
ANR	5596157	Identifier	value		5595538	1					
ANR	5596158	Identifier	q		5595538	1					
ANR	5596159	Argument	0		5595538	1					
ANR	5596160	PrimaryExpression	0		5595538	0					
ANR	5596161	BreakStatement	break ;	150:3:4728:4733	5595538	61	True				
ANR	5596162	Label	case FILE_FLOAT :	151:2:4737:4752	5595538	62	True				
ANR	5596163	Identifier	FILE_FLOAT		5595538	0					
ANR	5596164	Label	case FILE_BEFLOAT :	152:2:4756:4773	5595538	63	True				
ANR	5596165	Identifier	FILE_BEFLOAT		5595538	0					
ANR	5596166	Label	case FILE_LEFLOAT :	153:2:4777:4794	5595538	64	True				
ANR	5596167	Identifier	FILE_LEFLOAT		5595538	0					
ANR	5596168	ExpressionStatement	"( void ) eprintf ( ""%G"" , m -> value . f )"	154:3:4799:4832	5595538	65	True				
ANR	5596169	CastExpression	"( void ) eprintf ( ""%G"" , m -> value . f )"		5595538	0					
ANR	5596170	CastTarget	void		5595538	0					
ANR	5596171	CallExpression	"eprintf ( ""%G"" , m -> value . f )"		5595538	1					
ANR	5596172	Callee	eprintf		5595538	0					
ANR	5596173	Identifier	eprintf		5595538	0					
ANR	5596174	ArgumentList	"""%G"""		5595538	1					
ANR	5596175	Argument	"""%G"""		5595538	0					
ANR	5596176	PrimaryExpression	"""%G"""		5595538	0					
ANR	5596177	Argument	m -> value . f		5595538	1					
ANR	5596178	MemberAccess	m -> value . f		5595538	0					
ANR	5596179	PtrMemberAccess	m -> value		5595538	0					
ANR	5596180	Identifier	m		5595538	0					
ANR	5596181	Identifier	value		5595538	1					
ANR	5596182	Identifier	f		5595538	1					
ANR	5596183	BreakStatement	break ;	155:3:4837:4842	5595538	66	True				
ANR	5596184	Label	case FILE_DOUBLE :	156:2:4846:4862	5595538	67	True				
ANR	5596185	Identifier	FILE_DOUBLE		5595538	0					
ANR	5596186	Label	case FILE_BEDOUBLE :	157:2:4866:4884	5595538	68	True				
ANR	5596187	Identifier	FILE_BEDOUBLE		5595538	0					
ANR	5596188	Label	case FILE_LEDOUBLE :	158:2:4888:4906	5595538	69	True				
ANR	5596189	Identifier	FILE_LEDOUBLE		5595538	0					
ANR	5596190	ExpressionStatement	"( void ) eprintf ( ""%G"" , m -> value . d )"	159:3:4911:4944	5595538	70	True				
ANR	5596191	CastExpression	"( void ) eprintf ( ""%G"" , m -> value . d )"		5595538	0					
ANR	5596192	CastTarget	void		5595538	0					
ANR	5596193	CallExpression	"eprintf ( ""%G"" , m -> value . d )"		5595538	1					
ANR	5596194	Callee	eprintf		5595538	0					
ANR	5596195	Identifier	eprintf		5595538	0					
ANR	5596196	ArgumentList	"""%G"""		5595538	1					
ANR	5596197	Argument	"""%G"""		5595538	0					
ANR	5596198	PrimaryExpression	"""%G"""		5595538	0					
ANR	5596199	Argument	m -> value . d		5595538	1					
ANR	5596200	MemberAccess	m -> value . d		5595538	0					
ANR	5596201	PtrMemberAccess	m -> value		5595538	0					
ANR	5596202	Identifier	m		5595538	0					
ANR	5596203	Identifier	value		5595538	1					
ANR	5596204	Identifier	d		5595538	1					
ANR	5596205	BreakStatement	break ;	160:3:4949:4954	5595538	71	True				
ANR	5596206	Label	case FILE_DEFAULT :	161:2:4958:4975	5595538	72	True				
ANR	5596207	Identifier	FILE_DEFAULT		5595538	0					
ANR	5596208	BreakStatement	break ;	163:3:5013:5018	5595538	73	True				
ANR	5596209	Label	default :	164:2:5022:5029	5595538	74	True				
ANR	5596210	Identifier	default		5595538	0					
ANR	5596211	ExpressionStatement	"( void ) fputs ( ""*bad*"" , stderr )"	165:3:5034:5063	5595538	75	True				
ANR	5596212	CastExpression	"( void ) fputs ( ""*bad*"" , stderr )"		5595538	0					
ANR	5596213	CastTarget	void		5595538	0					
ANR	5596214	CallExpression	"fputs ( ""*bad*"" , stderr )"		5595538	1					
ANR	5596215	Callee	fputs		5595538	0					
ANR	5596216	Identifier	fputs		5595538	0					
ANR	5596217	ArgumentList	"""*bad*"""		5595538	1					
ANR	5596218	Argument	"""*bad*"""		5595538	0					
ANR	5596219	PrimaryExpression	"""*bad*"""		5595538	0					
ANR	5596220	Argument	stderr		5595538	1					
ANR	5596221	Identifier	stderr		5595538	0					
ANR	5596222	BreakStatement	break ;	166:3:5068:5073	5595538	76	True				
ANR	5596223	ExpressionStatement	"( void ) eprintf ( "",\\""%s\\""]\\n"" , m -> desc )"	169:1:5083:5121	5595538	10	True				
ANR	5596224	CastExpression	"( void ) eprintf ( "",\\""%s\\""]\\n"" , m -> desc )"		5595538	0					
ANR	5596225	CastTarget	void		5595538	0					
ANR	5596226	CallExpression	"eprintf ( "",\\""%s\\""]\\n"" , m -> desc )"		5595538	1					
ANR	5596227	Callee	eprintf		5595538	0					
ANR	5596228	Identifier	eprintf		5595538	0					
ANR	5596229	ArgumentList	""",\\""%s\\""]\\n"""		5595538	1					
ANR	5596230	Argument	""",\\""%s\\""]\\n"""		5595538	0					
ANR	5596231	PrimaryExpression	""",\\""%s\\""]\\n"""		5595538	0					
ANR	5596232	Argument	m -> desc		5595538	1					
ANR	5596233	PtrMemberAccess	m -> desc		5595538	0					
ANR	5596234	Identifier	m		5595538	0					
ANR	5596235	Identifier	desc		5595538	1					
ANR	5596236	ReturnType	void		5595538	1					
ANR	5596237	Identifier	file_mdump		5595538	2					
ANR	5596238	ParameterList	struct r_magic * m		5595538	3					
ANR	5596239	Parameter	struct r_magic * m	47:16:1886:1902	5595538	0	True				
ANR	5596240	ParameterType	struct r_magic *		5595538	0					
ANR	5596241	Identifier	m		5595538	1					
ANR	5596242	CFGEntryNode	ENTRY		5595538		True				
ANR	5596243	CFGExitNode	EXIT		5595538		True				
ANR	5596244	Symbol	INDIR		5595538						
ANR	5596245	Symbol	m -> in_offset		5595538						
ANR	5596246	Symbol	REGEX_OFFSET_START		5595538						
ANR	5596247	Symbol	STRING_COMPACT_OPTIONAL_BLANK		5595538						
ANR	5596248	Symbol	m -> num_mask		5595538						
ANR	5596249	Symbol	m -> type		5595538						
ANR	5596250	Symbol	m -> desc		5595538						
ANR	5596251	Symbol	* m -> type		5595538						
ANR	5596252	Symbol	m -> in_op		5595538						
ANR	5596253	Symbol	CHAR_REGEX_OFFSET_START		5595538						
ANR	5596254	Symbol	* optyp		5595538						
ANR	5596255	Symbol	m -> value . s		5595538						
ANR	5596256	Symbol	m -> value . q		5595538						
ANR	5596257	Symbol	m -> str_range		5595538						
ANR	5596258	Symbol	stderr		5595538						
ANR	5596259	Symbol	FILE_OPS		5595538						
ANR	5596260	Symbol	FILE_OPINVERSE		5595538						
ANR	5596261	Symbol	m -> value . l		5595538						
ANR	5596262	Symbol	m -> value . f		5595538						
ANR	5596263	Symbol	* magic_file_names		5595538						
ANR	5596264	Symbol	m -> value . d		5595538						
ANR	5596265	Symbol	m -> lineno		5595538						
ANR	5596266	Symbol	m -> cont_level		5595538						
ANR	5596267	Symbol	UNSIGNED		5595538						
ANR	5596268	Symbol	m -> flag		5595538						
ANR	5596269	Symbol	m -> str_flags		5595538						
ANR	5596270	Symbol	MAGIC_IS_STRING		5595538						
ANR	5596271	Symbol	m -> in_type		5595538						
ANR	5596272	Symbol	m -> mask_op		5595538						
ANR	5596273	Symbol	m -> reln		5595538						
ANR	5596274	Symbol	SZOF		5595538						
ANR	5596275	Symbol	optyp		5595538						
ANR	5596276	Symbol	* FILE_OPS_MASK		5595538						
ANR	5596277	Symbol	STRING_IGNORE_UPPERCASE		5595538						
ANR	5596278	Symbol	* m -> mask_op		5595538						
ANR	5596279	Symbol	* m -> in_type		5595538						
ANR	5596280	Symbol	magic_file_names		5595538						
ANR	5596281	Symbol	FILE_OPS_MASK		5595538						
ANR	5596282	Symbol	* * m		5595538						
ANR	5596283	Symbol	CHAR_COMPACT_OPTIONAL_BLANK		5595538						
ANR	5596284	Symbol	STRING_IGNORE_LOWERCASE		5595538						
ANR	5596285	Symbol	file_fmttime		5595538						
ANR	5596286	Symbol	m -> value		5595538						
ANR	5596287	Symbol	CHAR_COMPACT_BLANK		5595538						
ANR	5596288	Symbol	file_nnames		5595538						
ANR	5596289	Symbol	CHAR_IGNORE_LOWERCASE		5595538						
ANR	5596290	Symbol	m		5595538						
ANR	5596291	Symbol	* m -> in_op		5595538						
ANR	5596292	Symbol	STRING_COMPACT_BLANK		5595538						
ANR	5596293	Symbol	CHAR_IGNORE_UPPERCASE		5595538						
ANR	5596294	Symbol	m -> offset		5595538						
ANR	5596295	Symbol	* m		5595538						
ANR	5596296	Symbol	m -> vallen		5595538						
ANR	5596297	Function	file_magwarn	174:0:5145:5508							
ANR	5596298	FunctionDef	"file_magwarn (struct r_magic_set * ms , const char * f)"		5596297	0					
ANR	5596299	CompoundStatement		174:62:5207:5508	5596297	0					
ANR	5596300	IdentifierDeclStatement	va_list va ;	175:1:5210:5220	5596297	0	True				
ANR	5596301	IdentifierDecl	va		5596297	0					
ANR	5596302	IdentifierDeclType	va_list		5596297	0					
ANR	5596303	Identifier	va		5596297	1					
ANR	5596304	ExpressionStatement	( void ) fflush ( stdout )	178:1:5271:5292	5596297	1	True				
ANR	5596305	CastExpression	( void ) fflush ( stdout )		5596297	0					
ANR	5596306	CastTarget	void		5596297	0					
ANR	5596307	CallExpression	fflush ( stdout )		5596297	1					
ANR	5596308	Callee	fflush		5596297	0					
ANR	5596309	Identifier	fflush		5596297	0					
ANR	5596310	ArgumentList	stdout		5596297	1					
ANR	5596311	Argument	stdout		5596297	0					
ANR	5596312	Identifier	stdout		5596297	0					
ANR	5596313	IfStatement	if ( ms -> file )		5596297	2					
ANR	5596314	Condition	ms -> file	180:5:5300:5307	5596297	0	True				
ANR	5596315	PtrMemberAccess	ms -> file		5596297	0					
ANR	5596316	Identifier	ms		5596297	0					
ANR	5596317	Identifier	file		5596297	1					
ANR	5596318	ExpressionStatement	"( void ) eprintf ( ""%s, %lu: "" , ms -> file , ( unsigned long ) ms -> line )"	181:2:5312:5381	5596297	1	True				
ANR	5596319	CastExpression	"( void ) eprintf ( ""%s, %lu: "" , ms -> file , ( unsigned long ) ms -> line )"		5596297	0					
ANR	5596320	CastTarget	void		5596297	0					
ANR	5596321	CallExpression	"eprintf ( ""%s, %lu: "" , ms -> file , ( unsigned long ) ms -> line )"		5596297	1					
ANR	5596322	Callee	eprintf		5596297	0					
ANR	5596323	Identifier	eprintf		5596297	0					
ANR	5596324	ArgumentList	"""%s, %lu: """		5596297	1					
ANR	5596325	Argument	"""%s, %lu: """		5596297	0					
ANR	5596326	PrimaryExpression	"""%s, %lu: """		5596297	0					
ANR	5596327	Argument	ms -> file		5596297	1					
ANR	5596328	PtrMemberAccess	ms -> file		5596297	0					
ANR	5596329	Identifier	ms		5596297	0					
ANR	5596330	Identifier	file		5596297	1					
ANR	5596331	Argument	( unsigned long ) ms -> line		5596297	2					
ANR	5596332	CastExpression	( unsigned long ) ms -> line		5596297	0					
ANR	5596333	CastTarget	unsigned long		5596297	0					
ANR	5596334	PtrMemberAccess	ms -> line		5596297	1					
ANR	5596335	Identifier	ms		5596297	0					
ANR	5596336	Identifier	line		5596297	1					
ANR	5596337	ExpressionStatement	"( void ) eprintf ( ""Warning: "" )"	183:1:5384:5412	5596297	3	True				
ANR	5596338	CastExpression	"( void ) eprintf ( ""Warning: "" )"		5596297	0					
ANR	5596339	CastTarget	void		5596297	0					
ANR	5596340	CallExpression	"eprintf ( ""Warning: "" )"		5596297	1					
ANR	5596341	Callee	eprintf		5596297	0					
ANR	5596342	Identifier	eprintf		5596297	0					
ANR	5596343	ArgumentList	"""Warning: """		5596297	1					
ANR	5596344	Argument	"""Warning: """		5596297	0					
ANR	5596345	PrimaryExpression	"""Warning: """		5596297	0					
ANR	5596346	ExpressionStatement	"va_start ( va , f )"	184:1:5415:5430	5596297	4	True				
ANR	5596347	CallExpression	"va_start ( va , f )"		5596297	0					
ANR	5596348	Callee	va_start		5596297	0					
ANR	5596349	Identifier	va_start		5596297	0					
ANR	5596350	ArgumentList	va		5596297	1					
ANR	5596351	Argument	va		5596297	0					
ANR	5596352	Identifier	va		5596297	0					
ANR	5596353	Argument	f		5596297	1					
ANR	5596354	Identifier	f		5596297	0					
ANR	5596355	ExpressionStatement	"( void ) vfprintf ( stderr , f , va )"	185:1:5433:5464	5596297	5	True				
ANR	5596356	CastExpression	"( void ) vfprintf ( stderr , f , va )"		5596297	0					
ANR	5596357	CastTarget	void		5596297	0					
ANR	5596358	CallExpression	"vfprintf ( stderr , f , va )"		5596297	1					
ANR	5596359	Callee	vfprintf		5596297	0					
ANR	5596360	Identifier	vfprintf		5596297	0					
ANR	5596361	ArgumentList	stderr		5596297	1					
ANR	5596362	Argument	stderr		5596297	0					
ANR	5596363	Identifier	stderr		5596297	0					
ANR	5596364	Argument	f		5596297	1					
ANR	5596365	Identifier	f		5596297	0					
ANR	5596366	Argument	va		5596297	2					
ANR	5596367	Identifier	va		5596297	0					
ANR	5596368	ExpressionStatement	va_end ( va )	186:1:5467:5477	5596297	6	True				
ANR	5596369	CallExpression	va_end ( va )		5596297	0					
ANR	5596370	Callee	va_end		5596297	0					
ANR	5596371	Identifier	va_end		5596297	0					
ANR	5596372	ArgumentList	va		5596297	1					
ANR	5596373	Argument	va		5596297	0					
ANR	5596374	Identifier	va		5596297	0					
ANR	5596375	ExpressionStatement	"( void ) fputc ( '\\n' , stderr )"	187:1:5480:5506	5596297	7	True				
ANR	5596376	CastExpression	"( void ) fputc ( '\\n' , stderr )"		5596297	0					
ANR	5596377	CastTarget	void		5596297	0					
ANR	5596378	CallExpression	"fputc ( '\\n' , stderr )"		5596297	1					
ANR	5596379	Callee	fputc		5596297	0					
ANR	5596380	Identifier	fputc		5596297	0					
ANR	5596381	ArgumentList	'\\n'		5596297	1					
ANR	5596382	Argument	'\\n'		5596297	0					
ANR	5596383	PrimaryExpression	'\\n'		5596297	0					
ANR	5596384	Argument	stderr		5596297	1					
ANR	5596385	Identifier	stderr		5596297	0					
ANR	5596386	ReturnType	void		5596297	1					
ANR	5596387	Identifier	file_magwarn		5596297	2					
ANR	5596388	ParameterList	"struct r_magic_set * ms , const char * f"		5596297	3					
ANR	5596389	Parameter	struct r_magic_set * ms	174:18:5163:5184	5596297	0	True				
ANR	5596390	ParameterType	struct r_magic_set *		5596297	0					
ANR	5596391	Identifier	ms		5596297	1					
ANR	5596392	Parameter	const char * f	174:42:5187:5199	5596297	1	True				
ANR	5596393	ParameterType	const char *		5596297	0					
ANR	5596394	Identifier	f		5596297	1					
ANR	5596395	CFGEntryNode	ENTRY		5596297		True				
ANR	5596396	CFGExitNode	EXIT		5596297		True				
ANR	5596397	Symbol	ms -> file		5596297						
ANR	5596398	Symbol	stdout		5596297						
ANR	5596399	Symbol	ms		5596297						
ANR	5596400	Symbol	f		5596297						
ANR	5596401	Symbol	ms -> line		5596297						
ANR	5596402	Symbol	va		5596297						
ANR	5596403	Symbol	stderr		5596297						
ANR	5596404	Symbol	* ms		5596297						
ANR	5596405	Function	file_fmttime	190:0:5511:6170							
ANR	5596406	FunctionDef	"file_fmttime (ut32 v , int local)"		5596405	0					
ANR	5596407	CompoundStatement		190:44:5555:6170	5596405	0					
ANR	5596408	IdentifierDeclStatement	char * pp ;	191:1:5558:5566	5596405	0	True				
ANR	5596409	IdentifierDecl	* pp		5596405	0					
ANR	5596410	IdentifierDeclType	char *		5596405	0					
ANR	5596411	Identifier	pp		5596405	1					
ANR	5596412	IdentifierDeclStatement	time_t t = ( time_t ) v ;	192:1:5569:5589	5596405	1	True				
ANR	5596413	IdentifierDecl	t = ( time_t ) v		5596405	0					
ANR	5596414	IdentifierDeclType	time_t		5596405	0					
ANR	5596415	Identifier	t		5596405	1					
ANR	5596416	AssignmentExpression	t = ( time_t ) v		5596405	2		=			
ANR	5596417	Identifier	t		5596405	0					
ANR	5596418	CastExpression	( time_t ) v		5596405	1					
ANR	5596419	CastTarget	time_t		5596405	0					
ANR	5596420	Identifier	v		5596405	1					
ANR	5596421	IdentifierDeclStatement	struct tm * tm ;	193:1:5592:5605	5596405	2	True				
ANR	5596422	IdentifierDecl	* tm		5596405	0					
ANR	5596423	IdentifierDeclType	struct tm *		5596405	0					
ANR	5596424	Identifier	tm		5596405	1					
ANR	5596425	IdentifierDeclStatement	struct tm timestruct ;	194:1:5608:5628	5596405	3	True				
ANR	5596426	IdentifierDecl	timestruct		5596405	0					
ANR	5596427	IdentifierDeclType	struct tm		5596405	0					
ANR	5596428	Identifier	timestruct		5596405	1					
ANR	5596429	IfStatement	if ( local )		5596405	4					
ANR	5596430	Condition	local	196:5:5636:5640	5596405	0	True				
ANR	5596431	Identifier	local		5596405	0					
ANR	5596432	CompoundStatement		7:12:87:87	5596405	1					
ANR	5596433	ExpressionStatement	pp = ctime ( & t )	197:2:5647:5661	5596405	0	True				
ANR	5596434	AssignmentExpression	pp = ctime ( & t )		5596405	0		=			
ANR	5596435	Identifier	pp		5596405	0					
ANR	5596436	CallExpression	ctime ( & t )		5596405	1					
ANR	5596437	Callee	ctime		5596405	0					
ANR	5596438	Identifier	ctime		5596405	0					
ANR	5596439	ArgumentList	& t		5596405	1					
ANR	5596440	Argument	& t		5596405	0					
ANR	5596441	UnaryOperationExpression	& t		5596405	0					
ANR	5596442	UnaryOperator	&		5596405	0					
ANR	5596443	Identifier	t		5596405	1					
ANR	5596444	ElseStatement	else		5596405	0					
ANR	5596445	CompoundStatement		13:9:196:218	5596405	0					
ANR	5596446	Statement	static	200:2:5697:5702	5596405	0	True				
ANR	5596447	IdentifierDeclStatement	int daylight = 0 ;	200:9:5704:5720	5596405	1	True				
ANR	5596448	IdentifierDecl	daylight = 0		5596405	0					
ANR	5596449	IdentifierDeclType	int		5596405	0					
ANR	5596450	Identifier	daylight		5596405	1					
ANR	5596451	AssignmentExpression	daylight = 0		5596405	2		=			
ANR	5596452	Identifier	daylight		5596405	0					
ANR	5596453	PrimaryExpression	0		5596405	1					
ANR	5596454	Statement	static	202:2:5745:5750	5596405	2	True				
ANR	5596455	IdentifierDeclStatement	time_t now = ( time_t ) 0 ;	202:9:5752:5774	5596405	3	True				
ANR	5596456	IdentifierDecl	now = ( time_t ) 0		5596405	0					
ANR	5596457	IdentifierDeclType	time_t		5596405	0					
ANR	5596458	Identifier	now		5596405	1					
ANR	5596459	AssignmentExpression	now = ( time_t ) 0		5596405	2		=			
ANR	5596460	Identifier	now		5596405	0					
ANR	5596461	CastExpression	( time_t ) 0		5596405	1					
ANR	5596462	CastTarget	time_t		5596405	0					
ANR	5596463	PrimaryExpression	0		5596405	1					
ANR	5596464	IfStatement	if ( now == ( time_t ) 0 )		5596405	4					
ANR	5596465	Condition	now == ( time_t ) 0	204:6:5783:5798	5596405	0	True				
ANR	5596466	EqualityExpression	now == ( time_t ) 0		5596405	0		==			
ANR	5596467	Identifier	now		5596405	0					
ANR	5596468	CastExpression	( time_t ) 0		5596405	1					
ANR	5596469	CastTarget	time_t		5596405	0					
ANR	5596470	PrimaryExpression	0		5596405	1					
ANR	5596471	CompoundStatement		16:3:250:264	5596405	1					
ANR	5596472	IdentifierDeclStatement	struct tm * tm1 ;	205:3:5806:5820	5596405	0	True				
ANR	5596473	IdentifierDecl	* tm1		5596405	0					
ANR	5596474	IdentifierDeclType	struct tm *		5596405	0					
ANR	5596475	Identifier	tm1		5596405	1					
ANR	5596476	ExpressionStatement	( void ) time ( & now )	206:3:5825:5841	5596405	1	True				
ANR	5596477	CastExpression	( void ) time ( & now )		5596405	0					
ANR	5596478	CastTarget	void		5596405	0					
ANR	5596479	CallExpression	time ( & now )		5596405	1					
ANR	5596480	Callee	time		5596405	0					
ANR	5596481	Identifier	time		5596405	0					
ANR	5596482	ArgumentList	& now		5596405	1					
ANR	5596483	Argument	& now		5596405	0					
ANR	5596484	UnaryOperationExpression	& now		5596405	0					
ANR	5596485	UnaryOperator	&		5596405	0					
ANR	5596486	Identifier	now		5596405	1					
ANR	5596487	ExpressionStatement	tm1 = localtime ( & now )	207:3:5846:5867	5596405	2	True				
ANR	5596488	AssignmentExpression	tm1 = localtime ( & now )		5596405	0		=			
ANR	5596489	Identifier	tm1		5596405	0					
ANR	5596490	CallExpression	localtime ( & now )		5596405	1					
ANR	5596491	Callee	localtime		5596405	0					
ANR	5596492	Identifier	localtime		5596405	0					
ANR	5596493	ArgumentList	& now		5596405	1					
ANR	5596494	Argument	& now		5596405	0					
ANR	5596495	UnaryOperationExpression	& now		5596405	0					
ANR	5596496	UnaryOperator	&		5596405	0					
ANR	5596497	Identifier	now		5596405	1					
ANR	5596498	IfStatement	if ( ! tm1 )		5596405	3					
ANR	5596499	Condition	! tm1	208:7:5876:5879	5596405	0	True				
ANR	5596500	UnaryOperationExpression	! tm1		5596405	0					
ANR	5596501	UnaryOperator	!		5596405	0					
ANR	5596502	Identifier	tm1		5596405	1					
ANR	5596503	ReturnStatement	"return ""*Invalid time*"" ;"	209:4:5886:5909	5596405	1	True				
ANR	5596504	PrimaryExpression	"""*Invalid time*"""		5596405	0					
ANR	5596505	ExpressionStatement	daylight = tm1 -> tm_isdst	210:3:5914:5938	5596405	4	True				
ANR	5596506	AssignmentExpression	daylight = tm1 -> tm_isdst		5596405	0		=			
ANR	5596507	Identifier	daylight		5596405	0					
ANR	5596508	PtrMemberAccess	tm1 -> tm_isdst		5596405	1					
ANR	5596509	Identifier	tm1		5596405	0					
ANR	5596510	Identifier	tm_isdst		5596405	1					
ANR	5596511	IfStatement	if ( daylight )		5596405	5					
ANR	5596512	Condition	daylight	214:6:6004:6011	5596405	0	True				
ANR	5596513	Identifier	daylight		5596405	0					
ANR	5596514	ExpressionStatement	t += 3600	215:3:6017:6026	5596405	1	True				
ANR	5596515	AssignmentExpression	t += 3600		5596405	0		+=			
ANR	5596516	Identifier	t		5596405	0					
ANR	5596517	PrimaryExpression	3600		5596405	1					
ANR	5596518	ExpressionStatement	"tm = gmtime_r ( & t , & timestruct )"	216:2:6030:6060	5596405	6	True				
ANR	5596519	AssignmentExpression	"tm = gmtime_r ( & t , & timestruct )"		5596405	0		=			
ANR	5596520	Identifier	tm		5596405	0					
ANR	5596521	CallExpression	"gmtime_r ( & t , & timestruct )"		5596405	1					
ANR	5596522	Callee	gmtime_r		5596405	0					
ANR	5596523	Identifier	gmtime_r		5596405	0					
ANR	5596524	ArgumentList	& t		5596405	1					
ANR	5596525	Argument	& t		5596405	0					
ANR	5596526	UnaryOperationExpression	& t		5596405	0					
ANR	5596527	UnaryOperator	&		5596405	0					
ANR	5596528	Identifier	t		5596405	1					
ANR	5596529	Argument	& timestruct		5596405	1					
ANR	5596530	UnaryOperationExpression	& timestruct		5596405	0					
ANR	5596531	UnaryOperator	&		5596405	0					
ANR	5596532	Identifier	timestruct		5596405	1					
ANR	5596533	IfStatement	if ( ! tm )		5596405	7					
ANR	5596534	Condition	! tm	217:6:6068:6070	5596405	0	True				
ANR	5596535	UnaryOperationExpression	! tm		5596405	0					
ANR	5596536	UnaryOperator	!		5596405	0					
ANR	5596537	Identifier	tm		5596405	1					
ANR	5596538	ReturnStatement	"return ""*Invalid time*"" ;"	218:3:6076:6099	5596405	1	True				
ANR	5596539	PrimaryExpression	"""*Invalid time*"""		5596405	0					
ANR	5596540	ExpressionStatement	pp = asctime ( tm )	219:2:6103:6120	5596405	8	True				
ANR	5596541	AssignmentExpression	pp = asctime ( tm )		5596405	0		=			
ANR	5596542	Identifier	pp		5596405	0					
ANR	5596543	CallExpression	asctime ( tm )		5596405	1					
ANR	5596544	Callee	asctime		5596405	0					
ANR	5596545	Identifier	asctime		5596405	0					
ANR	5596546	ArgumentList	tm		5596405	1					
ANR	5596547	Argument	tm		5596405	0					
ANR	5596548	Identifier	tm		5596405	0					
ANR	5596549	ExpressionStatement	"pp [ strcspn ( pp , ""\\n"" ) ] = '\\0'"	222:1:6127:6156	5596405	5	True				
ANR	5596550	AssignmentExpression	"pp [ strcspn ( pp , ""\\n"" ) ] = '\\0'"		5596405	0		=			
ANR	5596551	ArrayIndexing	"pp [ strcspn ( pp , ""\\n"" ) ]"		5596405	0					
ANR	5596552	Identifier	pp		5596405	0					
ANR	5596553	CallExpression	"strcspn ( pp , ""\\n"" )"		5596405	1					
ANR	5596554	Callee	strcspn		5596405	0					
ANR	5596555	Identifier	strcspn		5596405	0					
ANR	5596556	ArgumentList	pp		5596405	1					
ANR	5596557	Argument	pp		5596405	0					
ANR	5596558	Identifier	pp		5596405	0					
ANR	5596559	Argument	"""\\n"""		5596405	1					
ANR	5596560	PrimaryExpression	"""\\n"""		5596405	0					
ANR	5596561	PrimaryExpression	'\\0'		5596405	1					
ANR	5596562	ReturnStatement	return pp ;	223:1:6159:6168	5596405	6	True				
ANR	5596563	Identifier	pp		5596405	0					
ANR	5596564	ReturnType	const char *		5596405	1					
ANR	5596565	Identifier	file_fmttime		5596405	2					
ANR	5596566	ParameterList	"ut32 v , int local"		5596405	3					
ANR	5596567	Parameter	ut32 v	190:25:5536:5541	5596405	0	True				
ANR	5596568	ParameterType	ut32		5596405	0					
ANR	5596569	Identifier	v		5596405	1					
ANR	5596570	Parameter	int local	190:33:5544:5552	5596405	1	True				
ANR	5596571	ParameterType	int		5596405	0					
ANR	5596572	Identifier	local		5596405	1					
ANR	5596573	CFGEntryNode	ENTRY		5596405		True				
ANR	5596574	CFGExitNode	EXIT		5596405		True				
ANR	5596575	Symbol	pp		5596405						
ANR	5596576	Symbol	localtime		5596405						
ANR	5596577	Symbol	timestruct		5596405						
ANR	5596578	Symbol	* tm1		5596405						
ANR	5596579	Symbol	& timestruct		5596405						
ANR	5596580	Symbol	* pp		5596405						
ANR	5596581	Symbol	tm1 -> tm_isdst		5596405						
ANR	5596582	Symbol	gmtime_r		5596405						
ANR	5596583	Symbol	strcspn		5596405						
ANR	5596584	Symbol	local		5596405						
ANR	5596585	Symbol	t		5596405						
ANR	5596586	Symbol	daylight		5596405						
ANR	5596587	Symbol	v		5596405						
ANR	5596588	Symbol	now		5596405						
ANR	5596589	Symbol	tm		5596405						
ANR	5596590	Symbol	ctime		5596405						
ANR	5596591	Symbol	tm1		5596405						
ANR	5596592	Symbol	& t		5596405						
ANR	5596593	Symbol	* strcspn		5596405						
ANR	5596594	Symbol	& now		5596405						
ANR	5596595	Symbol	asctime		5596405						
