command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5162099	File	data/converged/CVE-2019-16718~_radare2/libr_util_pie.c								
ANR	5162100	Function	drawSectorLine	14:0:288:570							
ANR	5162101	FunctionDef	"drawSectorLine (char * out , int size , int percent)"		5162100	0					
ANR	5162102	CompoundStatement		14:61:349:570	5162100	0					
ANR	5162103	IdentifierDeclStatement	"int i , x , y ;"	15:1:352:363	5162100	0	True				
ANR	5162104	IdentifierDecl	i		5162100	0					
ANR	5162105	IdentifierDeclType	int		5162100	0					
ANR	5162106	Identifier	i		5162100	1					
ANR	5162107	IdentifierDecl	x		5162100	1					
ANR	5162108	IdentifierDeclType	int		5162100	0					
ANR	5162109	Identifier	x		5162100	1					
ANR	5162110	IdentifierDecl	y		5162100	2					
ANR	5162111	IdentifierDeclType	int		5162100	0					
ANR	5162112	Identifier	y		5162100	1					
ANR	5162113	IdentifierDeclStatement	double A = ( percent ) * PI / 50 ;	16:1:366:394	5162100	1	True				
ANR	5162114	IdentifierDecl	A = ( percent ) * PI / 50		5162100	0					
ANR	5162115	IdentifierDeclType	double		5162100	0					
ANR	5162116	Identifier	A		5162100	1					
ANR	5162117	AssignmentExpression	A = ( percent ) * PI / 50		5162100	2		=			
ANR	5162118	Identifier	A		5162100	0					
ANR	5162119	MultiplicativeExpression	( percent ) * PI / 50		5162100	1		/			
ANR	5162120	CastExpression	( percent ) * PI		5162100	0					
ANR	5162121	CastTarget	percent		5162100	0					
ANR	5162122	UnaryOperationExpression	* PI		5162100	1					
ANR	5162123	UnaryOperator	*		5162100	0					
ANR	5162124	Identifier	PI		5162100	1					
ANR	5162125	PrimaryExpression	50		5162100	1					
ANR	5162126	IdentifierDeclStatement	double foo = 0.1 ;	17:1:397:413	5162100	2	True				
ANR	5162127	IdentifierDecl	foo = 0.1		5162100	0					
ANR	5162128	IdentifierDeclType	double		5162100	0					
ANR	5162129	Identifier	foo		5162100	1					
ANR	5162130	AssignmentExpression	foo = 0.1		5162100	2		=			
ANR	5162131	Identifier	foo		5162100	0					
ANR	5162132	PrimaryExpression	0.1		5162100	1					
ANR	5162133	ForStatement	for ( i = ( size - 1 ) / 2 ; i < ( size - 3 ) ; i ++ )		5162100	3					
ANR	5162134	ForInit	i = ( size - 1 ) / 2 ;	18:6:421:439	5162100	0	True				
ANR	5162135	AssignmentExpression	i = ( size - 1 ) / 2		5162100	0		=			
ANR	5162136	Identifier	i		5162100	0					
ANR	5162137	MultiplicativeExpression	( size - 1 ) / 2		5162100	1		/			
ANR	5162138	AdditiveExpression	size - 1		5162100	0		-			
ANR	5162139	Identifier	size		5162100	0					
ANR	5162140	PrimaryExpression	1		5162100	1					
ANR	5162141	PrimaryExpression	2		5162100	1					
ANR	5162142	Condition	i < ( size - 3 )	18:26:441:454	5162100	1	True				
ANR	5162143	RelationalExpression	i < ( size - 3 )		5162100	0		<			
ANR	5162144	Identifier	i		5162100	0					
ANR	5162145	AdditiveExpression	size - 3		5162100	1		-			
ANR	5162146	Identifier	size		5162100	0					
ANR	5162147	PrimaryExpression	3		5162100	1					
ANR	5162148	PostIncDecOperationExpression	i ++	18:42:457:459	5162100	2	True				
ANR	5162149	Identifier	i		5162100	0					
ANR	5162150	IncDec	++		5162100	1					
ANR	5162151	CompoundStatement		5:47:112:112	5162100	3					
ANR	5162152	ExpressionStatement	x = y = ( size - 1 ) / 2	19:2:466:488	5162100	0	True				
ANR	5162153	AssignmentExpression	x = y = ( size - 1 ) / 2		5162100	0		=			
ANR	5162154	Identifier	x		5162100	0					
ANR	5162155	AssignmentExpression	y = ( size - 1 ) / 2		5162100	1		=			
ANR	5162156	Identifier	y		5162100	0					
ANR	5162157	MultiplicativeExpression	( size - 1 ) / 2		5162100	1		/			
ANR	5162158	AdditiveExpression	size - 1		5162100	0		-			
ANR	5162159	Identifier	size		5162100	0					
ANR	5162160	PrimaryExpression	1		5162100	1					
ANR	5162161	PrimaryExpression	2		5162100	1					
ANR	5162162	ExpressionStatement	x += cos ( A ) * foo + 1	20:2:492:514	5162100	1	True				
ANR	5162163	AssignmentExpression	x += cos ( A ) * foo + 1		5162100	0		+=			
ANR	5162164	Identifier	x		5162100	0					
ANR	5162165	AdditiveExpression	cos ( A ) * foo + 1		5162100	1		+			
ANR	5162166	MultiplicativeExpression	cos ( A ) * foo		5162100	0		*			
ANR	5162167	CallExpression	cos ( A )		5162100	0					
ANR	5162168	Callee	cos		5162100	0					
ANR	5162169	Identifier	cos		5162100	0					
ANR	5162170	ArgumentList	A		5162100	1					
ANR	5162171	Argument	A		5162100	0					
ANR	5162172	Identifier	A		5162100	0					
ANR	5162173	Identifier	foo		5162100	1					
ANR	5162174	PrimaryExpression	1		5162100	1					
ANR	5162175	ExpressionStatement	y += sin ( A ) * foo + 1	21:2:518:540	5162100	2	True				
ANR	5162176	AssignmentExpression	y += sin ( A ) * foo + 1		5162100	0		+=			
ANR	5162177	Identifier	y		5162100	0					
ANR	5162178	AdditiveExpression	sin ( A ) * foo + 1		5162100	1		+			
ANR	5162179	MultiplicativeExpression	sin ( A ) * foo		5162100	0		*			
ANR	5162180	CallExpression	sin ( A )		5162100	0					
ANR	5162181	Callee	sin		5162100	0					
ANR	5162182	Identifier	sin		5162100	0					
ANR	5162183	ArgumentList	A		5162100	1					
ANR	5162184	Argument	A		5162100	0					
ANR	5162185	Identifier	A		5162100	0					
ANR	5162186	Identifier	foo		5162100	1					
ANR	5162187	PrimaryExpression	1		5162100	1					
ANR	5162188	ExpressionStatement	foo += 1.1	22:2:544:554	5162100	3	True				
ANR	5162189	AssignmentExpression	foo += 1.1		5162100	0		+=			
ANR	5162190	Identifier	foo		5162100	0					
ANR	5162191	PrimaryExpression	1.1		5162100	1					
ANR	5162192	ExpressionStatement	O = '.'	23:2:558:565	5162100	4	True				
ANR	5162193	AssignmentExpression	O = '.'		5162100	0		=			
ANR	5162194	Identifier	O		5162100	0					
ANR	5162195	PrimaryExpression	'.'		5162100	1					
ANR	5162196	ReturnType	static void		5162100	1					
ANR	5162197	Identifier	drawSectorLine		5162100	2					
ANR	5162198	ParameterList	"char * out , int size , int percent"		5162100	3					
ANR	5162199	Parameter	char * out	14:27:315:323	5162100	0	True				
ANR	5162200	ParameterType	char *		5162100	0					
ANR	5162201	Identifier	out		5162100	1					
ANR	5162202	Parameter	int size	14:38:326:333	5162100	1	True				
ANR	5162203	ParameterType	int		5162100	0					
ANR	5162204	Identifier	size		5162100	1					
ANR	5162205	Parameter	int percent	14:48:336:346	5162100	2	True				
ANR	5162206	ParameterType	int		5162100	0					
ANR	5162207	Identifier	percent		5162100	1					
ANR	5162208	CFGEntryNode	ENTRY		5162100		True				
ANR	5162209	CFGExitNode	EXIT		5162100		True				
ANR	5162210	Symbol	A		5162100						
ANR	5162211	Symbol	cos		5162100						
ANR	5162212	Symbol	foo		5162100						
ANR	5162213	Symbol	i		5162100						
ANR	5162214	Symbol	percent		5162100						
ANR	5162215	Symbol	out		5162100						
ANR	5162216	Symbol	O		5162100						
ANR	5162217	Symbol	size		5162100						
ANR	5162218	Symbol	x		5162100						
ANR	5162219	Symbol	y		5162100						
ANR	5162220	Symbol	PI		5162100						
ANR	5162221	Symbol	sin		5162100						
ANR	5162222	Symbol	* PI		5162100						
ANR	5162223	Function	r_print_pie	27:0:573:1871							
ANR	5162224	FunctionDef	"r_print_pie (RPrint * p , ut64 * values , int nvalues , int size)"		5162223	0					
ANR	5162225	CompoundStatement		27:70:643:1871	5162223	0					
ANR	5162226	IdentifierDeclStatement	"ut8 * nv = calloc ( nvalues , sizeof ( ut8 ) ) ;"	28:1:646:686	5162223	0	True				
ANR	5162227	IdentifierDecl	"* nv = calloc ( nvalues , sizeof ( ut8 ) )"		5162223	0					
ANR	5162228	IdentifierDeclType	ut8 *		5162223	0					
ANR	5162229	Identifier	nv		5162223	1					
ANR	5162230	AssignmentExpression	"* nv = calloc ( nvalues , sizeof ( ut8 ) )"		5162223	2		=			
ANR	5162231	Identifier	nv		5162223	0					
ANR	5162232	CallExpression	"calloc ( nvalues , sizeof ( ut8 ) )"		5162223	1					
ANR	5162233	Callee	calloc		5162223	0					
ANR	5162234	Identifier	calloc		5162223	0					
ANR	5162235	ArgumentList	nvalues		5162223	1					
ANR	5162236	Argument	nvalues		5162223	0					
ANR	5162237	Identifier	nvalues		5162223	0					
ANR	5162238	Argument	sizeof ( ut8 )		5162223	1					
ANR	5162239	SizeofExpression	sizeof ( ut8 )		5162223	0					
ANR	5162240	Sizeof	sizeof		5162223	0					
ANR	5162241	SizeofOperand	ut8		5162223	1					
ANR	5162242	IdentifierDeclStatement	"char * out = calloc ( size , size ) ;"	29:1:689:720	5162223	1	True				
ANR	5162243	IdentifierDecl	"* out = calloc ( size , size )"		5162223	0					
ANR	5162244	IdentifierDeclType	char *		5162223	0					
ANR	5162245	Identifier	out		5162223	1					
ANR	5162246	AssignmentExpression	"* out = calloc ( size , size )"		5162223	2		=			
ANR	5162247	Identifier	out		5162223	0					
ANR	5162248	CallExpression	"calloc ( size , size )"		5162223	1					
ANR	5162249	Callee	calloc		5162223	0					
ANR	5162250	Identifier	calloc		5162223	0					
ANR	5162251	ArgumentList	size		5162223	1					
ANR	5162252	Argument	size		5162223	0					
ANR	5162253	Identifier	size		5162223	0					
ANR	5162254	Argument	size		5162223	1					
ANR	5162255	Identifier	size		5162223	0					
ANR	5162256	IdentifierDeclStatement	"int i , x , y ;"	30:1:723:734	5162223	2	True				
ANR	5162257	IdentifierDecl	i		5162223	0					
ANR	5162258	IdentifierDeclType	int		5162223	0					
ANR	5162259	Identifier	i		5162223	1					
ANR	5162260	IdentifierDecl	x		5162223	1					
ANR	5162261	IdentifierDeclType	int		5162223	0					
ANR	5162262	Identifier	x		5162223	1					
ANR	5162263	IdentifierDecl	y		5162223	2					
ANR	5162264	IdentifierDeclType	int		5162223	0					
ANR	5162265	Identifier	y		5162223	1					
ANR	5162266	IfStatement	if ( nv && out )		5162223	3					
ANR	5162267	Condition	nv && out	31:5:741:749	5162223	0	True				
ANR	5162268	AndExpression	nv && out		5162223	0		&&			
ANR	5162269	Identifier	nv		5162223	0					
ANR	5162270	Identifier	out		5162223	1					
ANR	5162271	CompoundStatement		42:2:887:901	5162223	1					
ANR	5162272	IdentifierDeclStatement	ut64 total = 0 ;	32:2:756:770	5162223	0	True				
ANR	5162273	IdentifierDecl	total = 0		5162223	0					
ANR	5162274	IdentifierDeclType	ut64		5162223	0					
ANR	5162275	Identifier	total		5162223	1					
ANR	5162276	AssignmentExpression	total = 0		5162223	2		=			
ANR	5162277	Identifier	total		5162223	0					
ANR	5162278	PrimaryExpression	0		5162223	1					
ANR	5162279	ForStatement	for ( i = 0 ; i < nvalues ; i ++ )		5162223	1					
ANR	5162280	ForInit	i = 0 ;	33:7:779:784	5162223	0	True				
ANR	5162281	AssignmentExpression	i = 0		5162223	0		=			
ANR	5162282	Identifier	i		5162223	0					
ANR	5162283	PrimaryExpression	0		5162223	1					
ANR	5162284	Condition	i < nvalues	33:14:786:796	5162223	1	True				
ANR	5162285	RelationalExpression	i < nvalues		5162223	0		<			
ANR	5162286	Identifier	i		5162223	0					
ANR	5162287	Identifier	nvalues		5162223	1					
ANR	5162288	PostIncDecOperationExpression	i ++	33:27:799:801	5162223	2	True				
ANR	5162289	Identifier	i		5162223	0					
ANR	5162290	IncDec	++		5162223	1					
ANR	5162291	CompoundStatement		7:32:160:160	5162223	3					
ANR	5162292	ExpressionStatement	total += values [ i ]	34:3:809:827	5162223	0	True				
ANR	5162293	AssignmentExpression	total += values [ i ]		5162223	0		+=			
ANR	5162294	Identifier	total		5162223	0					
ANR	5162295	ArrayIndexing	values [ i ]		5162223	1					
ANR	5162296	Identifier	values		5162223	0					
ANR	5162297	Identifier	i		5162223	1					
ANR	5162298	ExpressionStatement	total /= 100	36:2:835:847	5162223	2	True				
ANR	5162299	AssignmentExpression	total /= 100		5162223	0		/=			
ANR	5162300	Identifier	total		5162223	0					
ANR	5162301	PrimaryExpression	100		5162223	1					
ANR	5162302	IfStatement	if ( total < 1 )		5162223	3					
ANR	5162303	Condition	total < 1	37:6:855:863	5162223	0	True				
ANR	5162304	RelationalExpression	total < 1		5162223	0		<			
ANR	5162305	Identifier	total		5162223	0					
ANR	5162306	PrimaryExpression	1		5162223	1					
ANR	5162307	CompoundStatement		11:17:222:222	5162223	1					
ANR	5162308	ExpressionStatement	total = 1	38:3:871:880	5162223	0	True				
ANR	5162309	AssignmentExpression	total = 1		5162223	0		=			
ANR	5162310	Identifier	total		5162223	0					
ANR	5162311	PrimaryExpression	1		5162223	1					
ANR	5162312	ForStatement	for ( i = 0 ; i < nvalues ; i ++ )		5162223	4					
ANR	5162313	ForInit	i = 0 ;	40:7:893:898	5162223	0	True				
ANR	5162314	AssignmentExpression	i = 0		5162223	0		=			
ANR	5162315	Identifier	i		5162223	0					
ANR	5162316	PrimaryExpression	0		5162223	1					
ANR	5162317	Condition	i < nvalues	40:14:900:910	5162223	1	True				
ANR	5162318	RelationalExpression	i < nvalues		5162223	0		<			
ANR	5162319	Identifier	i		5162223	0					
ANR	5162320	Identifier	nvalues		5162223	1					
ANR	5162321	PostIncDecOperationExpression	i ++	40:27:913:915	5162223	2	True				
ANR	5162322	Identifier	i		5162223	0					
ANR	5162323	IncDec	++		5162223	1					
ANR	5162324	CompoundStatement		14:32:274:274	5162223	3					
ANR	5162325	ExpressionStatement	nv [ i ] = values [ i ] / total	41:3:923:948	5162223	0	True				
ANR	5162326	AssignmentExpression	nv [ i ] = values [ i ] / total		5162223	0		=			
ANR	5162327	ArrayIndexing	nv [ i ]		5162223	0					
ANR	5162328	Identifier	nv		5162223	0					
ANR	5162329	Identifier	i		5162223	1					
ANR	5162330	MultiplicativeExpression	values [ i ] / total		5162223	1		/			
ANR	5162331	ArrayIndexing	values [ i ]		5162223	0					
ANR	5162332	Identifier	values		5162223	0					
ANR	5162333	Identifier	i		5162223	1					
ANR	5162334	Identifier	total		5162223	1					
ANR	5162335	ForStatement	for ( x = 0 ; x < size ; x ++ )		5162223	5					
ANR	5162336	ForInit	x = 0 ;	43:7:961:966	5162223	0	True				
ANR	5162337	AssignmentExpression	x = 0		5162223	0		=			
ANR	5162338	Identifier	x		5162223	0					
ANR	5162339	PrimaryExpression	0		5162223	1					
ANR	5162340	Condition	x < size	43:14:968:975	5162223	1	True				
ANR	5162341	RelationalExpression	x < size		5162223	0		<			
ANR	5162342	Identifier	x		5162223	0					
ANR	5162343	Identifier	size		5162223	1					
ANR	5162344	PostIncDecOperationExpression	x ++	43:24:978:980	5162223	2	True				
ANR	5162345	Identifier	x		5162223	0					
ANR	5162346	IncDec	++		5162223	1					
ANR	5162347	CompoundStatement		17:29:339:339	5162223	3					
ANR	5162348	ForStatement	for ( y = 0 ; y < size ; y ++ )		5162223	0					
ANR	5162349	ForInit	y = 0 ;	44:8:993:998	5162223	0	True				
ANR	5162350	AssignmentExpression	y = 0		5162223	0		=			
ANR	5162351	Identifier	y		5162223	0					
ANR	5162352	PrimaryExpression	0		5162223	1					
ANR	5162353	Condition	y < size	44:15:1000:1007	5162223	1	True				
ANR	5162354	RelationalExpression	y < size		5162223	0		<			
ANR	5162355	Identifier	y		5162223	0					
ANR	5162356	Identifier	size		5162223	1					
ANR	5162357	PostIncDecOperationExpression	y ++	44:25:1010:1012	5162223	2	True				
ANR	5162358	Identifier	y		5162223	0					
ANR	5162359	IncDec	++		5162223	1					
ANR	5162360	CompoundStatement		18:30:371:371	5162223	3					
ANR	5162361	ExpressionStatement	O = ' '	45:4:1021:1028	5162223	0	True				
ANR	5162362	AssignmentExpression	O = ' '		5162223	0		=			
ANR	5162363	Identifier	O		5162223	0					
ANR	5162364	PrimaryExpression	' '		5162223	1					
ANR	5162365	IdentifierDeclStatement	float a = 0.0 ;	49:2:1056:1069	5162223	6	True				
ANR	5162366	IdentifierDecl	a = 0.0		5162223	0					
ANR	5162367	IdentifierDeclType	float		5162223	0					
ANR	5162368	Identifier	a		5162223	1					
ANR	5162369	AssignmentExpression	a = 0.0		5162223	2		=			
ANR	5162370	Identifier	a		5162223	0					
ANR	5162371	PrimaryExpression	0.0		5162223	1					
ANR	5162372	IdentifierDeclStatement	int s = size / 2 ;	50:2:1073:1089	5162223	7	True				
ANR	5162373	IdentifierDecl	s = size / 2		5162223	0					
ANR	5162374	IdentifierDeclType	int		5162223	0					
ANR	5162375	Identifier	s		5162223	1					
ANR	5162376	AssignmentExpression	s = size / 2		5162223	2		=			
ANR	5162377	Identifier	s		5162223	0					
ANR	5162378	MultiplicativeExpression	size / 2		5162223	1		/			
ANR	5162379	Identifier	size		5162223	0					
ANR	5162380	PrimaryExpression	2		5162223	1					
ANR	5162381	WhileStatement	while ( a < 2 * PI )		5162223	8					
ANR	5162382	Condition	a < 2 * PI	51:9:1100:1109	5162223	0	True				
ANR	5162383	RelationalExpression	a < 2 * PI		5162223	0		<			
ANR	5162384	Identifier	a		5162223	0					
ANR	5162385	MultiplicativeExpression	2 * PI		5162223	1		*			
ANR	5162386	PrimaryExpression	2		5162223	0					
ANR	5162387	Identifier	PI		5162223	1					
ANR	5162388	CompoundStatement		25:21:468:468	5162223	1					
ANR	5162389	ExpressionStatement	x = s * cos ( a ) + ( size / 2 )	52:3:1117:1145	5162223	0	True				
ANR	5162390	AssignmentExpression	x = s * cos ( a ) + ( size / 2 )		5162223	0		=			
ANR	5162391	Identifier	x		5162223	0					
ANR	5162392	AdditiveExpression	s * cos ( a ) + ( size / 2 )		5162223	1		+			
ANR	5162393	MultiplicativeExpression	s * cos ( a )		5162223	0		*			
ANR	5162394	Identifier	s		5162223	0					
ANR	5162395	CallExpression	cos ( a )		5162223	1					
ANR	5162396	Callee	cos		5162223	0					
ANR	5162397	Identifier	cos		5162223	0					
ANR	5162398	ArgumentList	a		5162223	1					
ANR	5162399	Argument	a		5162223	0					
ANR	5162400	Identifier	a		5162223	0					
ANR	5162401	MultiplicativeExpression	size / 2		5162223	1		/			
ANR	5162402	Identifier	size		5162223	0					
ANR	5162403	PrimaryExpression	2		5162223	1					
ANR	5162404	ExpressionStatement	y = s * sin ( a ) + ( size / 2 )	53:3:1150:1178	5162223	1	True				
ANR	5162405	AssignmentExpression	y = s * sin ( a ) + ( size / 2 )		5162223	0		=			
ANR	5162406	Identifier	y		5162223	0					
ANR	5162407	AdditiveExpression	s * sin ( a ) + ( size / 2 )		5162223	1		+			
ANR	5162408	MultiplicativeExpression	s * sin ( a )		5162223	0		*			
ANR	5162409	Identifier	s		5162223	0					
ANR	5162410	CallExpression	sin ( a )		5162223	1					
ANR	5162411	Callee	sin		5162223	0					
ANR	5162412	Identifier	sin		5162223	0					
ANR	5162413	ArgumentList	a		5162223	1					
ANR	5162414	Argument	a		5162223	0					
ANR	5162415	Identifier	a		5162223	0					
ANR	5162416	MultiplicativeExpression	size / 2		5162223	1		/			
ANR	5162417	Identifier	size		5162223	0					
ANR	5162418	PrimaryExpression	2		5162223	1					
ANR	5162419	ExpressionStatement	O = '.'	54:3:1183:1190	5162223	2	True				
ANR	5162420	AssignmentExpression	O = '.'		5162223	0		=			
ANR	5162421	Identifier	O		5162223	0					
ANR	5162422	PrimaryExpression	'.'		5162223	1					
ANR	5162423	ExpressionStatement	a += 0.1	55:3:1195:1203	5162223	3	True				
ANR	5162424	AssignmentExpression	a += 0.1		5162223	0		+=			
ANR	5162425	Identifier	a		5162223	0					
ANR	5162426	PrimaryExpression	0.1		5162223	1					
ANR	5162427	IdentifierDeclStatement	int amount = 0 ;	68:2:1531:1545	5162223	9	True				
ANR	5162428	IdentifierDecl	amount = 0		5162223	0					
ANR	5162429	IdentifierDeclType	int		5162223	0					
ANR	5162430	Identifier	amount		5162223	1					
ANR	5162431	AssignmentExpression	amount = 0		5162223	2		=			
ANR	5162432	Identifier	amount		5162223	0					
ANR	5162433	PrimaryExpression	0		5162223	1					
ANR	5162434	ForStatement	for ( i = 0 ; i < nvalues ; i ++ )		5162223	10					
ANR	5162435	ForInit	i = 0 ;	69:7:1554:1559	5162223	0	True				
ANR	5162436	AssignmentExpression	i = 0		5162223	0		=			
ANR	5162437	Identifier	i		5162223	0					
ANR	5162438	PrimaryExpression	0		5162223	1					
ANR	5162439	Condition	i < nvalues	69:14:1561:1571	5162223	1	True				
ANR	5162440	RelationalExpression	i < nvalues		5162223	0		<			
ANR	5162441	Identifier	i		5162223	0					
ANR	5162442	Identifier	nvalues		5162223	1					
ANR	5162443	PostIncDecOperationExpression	i ++	69:27:1574:1576	5162223	2	True				
ANR	5162444	Identifier	i		5162223	0					
ANR	5162445	IncDec	++		5162223	1					
ANR	5162446	CompoundStatement		43:32:935:935	5162223	3					
ANR	5162447	ExpressionStatement	"drawSectorLine ( out , size , nv [ i ] + amount )"	70:3:1584:1626	5162223	0	True				
ANR	5162448	CallExpression	"drawSectorLine ( out , size , nv [ i ] + amount )"		5162223	0					
ANR	5162449	Callee	drawSectorLine		5162223	0					
ANR	5162450	Identifier	drawSectorLine		5162223	0					
ANR	5162451	ArgumentList	out		5162223	1					
ANR	5162452	Argument	out		5162223	0					
ANR	5162453	Identifier	out		5162223	0					
ANR	5162454	Argument	size		5162223	1					
ANR	5162455	Identifier	size		5162223	0					
ANR	5162456	Argument	nv [ i ] + amount		5162223	2					
ANR	5162457	AdditiveExpression	nv [ i ] + amount		5162223	0		+			
ANR	5162458	ArrayIndexing	nv [ i ]		5162223	0					
ANR	5162459	Identifier	nv		5162223	0					
ANR	5162460	Identifier	i		5162223	1					
ANR	5162461	Identifier	amount		5162223	1					
ANR	5162462	ExpressionStatement	amount += nv [ i ]	71:3:1631:1646	5162223	1	True				
ANR	5162463	AssignmentExpression	amount += nv [ i ]		5162223	0		+=			
ANR	5162464	Identifier	amount		5162223	0					
ANR	5162465	ArrayIndexing	nv [ i ]		5162223	1					
ANR	5162466	Identifier	nv		5162223	0					
ANR	5162467	Identifier	i		5162223	1					
ANR	5162468	IfStatement	if ( p && p -> cb_printf )		5162223	11					
ANR	5162469	Condition	p && p -> cb_printf	75:6:1672:1688	5162223	0	True				
ANR	5162470	AndExpression	p && p -> cb_printf		5162223	0		&&			
ANR	5162471	Identifier	p		5162223	0					
ANR	5162472	PtrMemberAccess	p -> cb_printf		5162223	1					
ANR	5162473	Identifier	p		5162223	0					
ANR	5162474	Identifier	cb_printf		5162223	1					
ANR	5162475	CompoundStatement		49:25:1047:1047	5162223	1					
ANR	5162476	ForStatement	for ( x = 0 ; x < size ; x ++ )		5162223	0					
ANR	5162477	ForInit	x = 0 ;	76:8:1701:1706	5162223	0	True				
ANR	5162478	AssignmentExpression	x = 0		5162223	0		=			
ANR	5162479	Identifier	x		5162223	0					
ANR	5162480	PrimaryExpression	0		5162223	1					
ANR	5162481	Condition	x < size	76:15:1708:1715	5162223	1	True				
ANR	5162482	RelationalExpression	x < size		5162223	0		<			
ANR	5162483	Identifier	x		5162223	0					
ANR	5162484	Identifier	size		5162223	1					
ANR	5162485	PostIncDecOperationExpression	x ++	76:25:1718:1720	5162223	2	True				
ANR	5162486	Identifier	x		5162223	0					
ANR	5162487	IncDec	++		5162223	1					
ANR	5162488	CompoundStatement		50:30:1079:1079	5162223	3					
ANR	5162489	ForStatement	for ( y = 0 ; y < size ; y ++ )		5162223	0					
ANR	5162490	ForInit	y = 0 ;	77:9:1734:1739	5162223	0	True				
ANR	5162491	AssignmentExpression	y = 0		5162223	0		=			
ANR	5162492	Identifier	y		5162223	0					
ANR	5162493	PrimaryExpression	0		5162223	1					
ANR	5162494	Condition	y < size	77:16:1741:1748	5162223	1	True				
ANR	5162495	RelationalExpression	y < size		5162223	0		<			
ANR	5162496	Identifier	y		5162223	0					
ANR	5162497	Identifier	size		5162223	1					
ANR	5162498	PostIncDecOperationExpression	y ++	77:26:1751:1753	5162223	2	True				
ANR	5162499	Identifier	y		5162223	0					
ANR	5162500	IncDec	++		5162223	1					
ANR	5162501	CompoundStatement		51:31:1112:1112	5162223	3					
ANR	5162502	ExpressionStatement	"p -> cb_printf ( ""%c%c"" , O , O )"	78:5:1763:1790	5162223	0	True				
ANR	5162503	CallExpression	"p -> cb_printf ( ""%c%c"" , O , O )"		5162223	0					
ANR	5162504	Callee	p -> cb_printf		5162223	0					
ANR	5162505	PtrMemberAccess	p -> cb_printf		5162223	0					
ANR	5162506	Identifier	p		5162223	0					
ANR	5162507	Identifier	cb_printf		5162223	1					
ANR	5162508	ArgumentList	"""%c%c"""		5162223	1					
ANR	5162509	Argument	"""%c%c"""		5162223	0					
ANR	5162510	PrimaryExpression	"""%c%c"""		5162223	0					
ANR	5162511	Argument	O		5162223	1					
ANR	5162512	Identifier	O		5162223	0					
ANR	5162513	Argument	O		5162223	2					
ANR	5162514	Identifier	O		5162223	0					
ANR	5162515	ExpressionStatement	"p -> cb_printf ( ""\\n"" )"	80:4:1802:1821	5162223	1	True				
ANR	5162516	CallExpression	"p -> cb_printf ( ""\\n"" )"		5162223	0					
ANR	5162517	Callee	p -> cb_printf		5162223	0					
ANR	5162518	PtrMemberAccess	p -> cb_printf		5162223	0					
ANR	5162519	Identifier	p		5162223	0					
ANR	5162520	Identifier	cb_printf		5162223	1					
ANR	5162521	ArgumentList	"""\\n"""		5162223	1					
ANR	5162522	Argument	"""\\n"""		5162223	0					
ANR	5162523	PrimaryExpression	"""\\n"""		5162223	0					
ANR	5162524	ExpressionStatement	free ( out )	84:1:1836:1846	5162223	4	True				
ANR	5162525	CallExpression	free ( out )		5162223	0					
ANR	5162526	Callee	free		5162223	0					
ANR	5162527	Identifier	free		5162223	0					
ANR	5162528	ArgumentList	out		5162223	1					
ANR	5162529	Argument	out		5162223	0					
ANR	5162530	Identifier	out		5162223	0					
ANR	5162531	ExpressionStatement	free ( nv )	85:1:1849:1858	5162223	5	True				
ANR	5162532	CallExpression	free ( nv )		5162223	0					
ANR	5162533	Callee	free		5162223	0					
ANR	5162534	Identifier	free		5162223	0					
ANR	5162535	ArgumentList	nv		5162223	1					
ANR	5162536	Argument	nv		5162223	0					
ANR	5162537	Identifier	nv		5162223	0					
ANR	5162538	ReturnStatement	return 0 ;	86:1:1861:1869	5162223	6	True				
ANR	5162539	PrimaryExpression	0		5162223	0					
ANR	5162540	ReturnType	R_API int		5162223	1					
ANR	5162541	Identifier	r_print_pie		5162223	2					
ANR	5162542	ParameterList	"RPrint * p , ut64 * values , int nvalues , int size"		5162223	3					
ANR	5162543	Parameter	RPrint * p	27:22:595:603	5162223	0	True				
ANR	5162544	ParameterType	RPrint *		5162223	0					
ANR	5162545	Identifier	p		5162223	1					
ANR	5162546	Parameter	ut64 * values	27:33:606:617	5162223	1	True				
ANR	5162547	ParameterType	ut64 *		5162223	0					
ANR	5162548	Identifier	values		5162223	1					
ANR	5162549	Parameter	int nvalues	27:47:620:630	5162223	2	True				
ANR	5162550	ParameterType	int		5162223	0					
ANR	5162551	Identifier	nvalues		5162223	1					
ANR	5162552	Parameter	int size	27:60:633:640	5162223	3	True				
ANR	5162553	ParameterType	int		5162223	0					
ANR	5162554	Identifier	size		5162223	1					
ANR	5162555	CFGEntryNode	ENTRY		5162223		True				
ANR	5162556	CFGExitNode	EXIT		5162223		True				
ANR	5162557	Symbol	a		5162223						
ANR	5162558	Symbol	amount		5162223						
ANR	5162559	Symbol	nvalues		5162223						
ANR	5162560	Symbol	* values		5162223						
ANR	5162561	Symbol	cos		5162223						
ANR	5162562	Symbol	values		5162223						
ANR	5162563	Symbol	nv		5162223						
ANR	5162564	Symbol	i		5162223						
ANR	5162565	Symbol	calloc		5162223						
ANR	5162566	Symbol	* nv		5162223						
ANR	5162567	Symbol	out		5162223						
ANR	5162568	Symbol	O		5162223						
ANR	5162569	Symbol	p		5162223						
ANR	5162570	Symbol	total		5162223						
ANR	5162571	Symbol	* i		5162223						
ANR	5162572	Symbol	s		5162223						
ANR	5162573	Symbol	size		5162223						
ANR	5162574	Symbol	x		5162223						
ANR	5162575	Symbol	y		5162223						
ANR	5162576	Symbol	PI		5162223						
ANR	5162577	Symbol	sin		5162223						
ANR	5162578	Symbol	* p		5162223						
ANR	5162579	Symbol	p -> cb_printf		5162223						
ANR	5162580	Function	main	89:0:1879:1952							
ANR	5162581	FunctionDef	main ()		5162580	0					
ANR	5162582	CompoundStatement		89:7:1886:1952	5162580	0					
ANR	5162583	IdentifierDeclStatement	"ut64 v [ ] = { 10 , 20 , 30 , 40 } ;"	90:1:1889:1918	5162580	0	True				
ANR	5162584	IdentifierDecl	"v [ ] = { 10 , 20 , 30 , 40 }"		5162580	0					
ANR	5162585	IdentifierDeclType	ut64 [ ]		5162580	0					
ANR	5162586	Identifier	v		5162580	1					
ANR	5162587	AssignmentExpression	"v [ ] = { 10 , 20 , 30 , 40 }"		5162580	2		=			
ANR	5162588	Identifier	v		5162580	0					
ANR	5162589	InitializerList	10		5162580	1					
ANR	5162590	PrimaryExpression	10		5162580	0					
ANR	5162591	PrimaryExpression	20		5162580	1					
ANR	5162592	PrimaryExpression	30		5162580	2					
ANR	5162593	PrimaryExpression	40		5162580	3					
ANR	5162594	ExpressionStatement	"r_print_pie ( NULL , & v , 4 , 20 )"	91:1:1921:1950	5162580	1	True				
ANR	5162595	CallExpression	"r_print_pie ( NULL , & v , 4 , 20 )"		5162580	0					
ANR	5162596	Callee	r_print_pie		5162580	0					
ANR	5162597	Identifier	r_print_pie		5162580	0					
ANR	5162598	ArgumentList	NULL		5162580	1					
ANR	5162599	Argument	NULL		5162580	0					
ANR	5162600	Identifier	NULL		5162580	0					
ANR	5162601	Argument	& v		5162580	1					
ANR	5162602	UnaryOperationExpression	& v		5162580	0					
ANR	5162603	UnaryOperator	&		5162580	0					
ANR	5162604	Identifier	v		5162580	1					
ANR	5162605	Argument	4		5162580	2					
ANR	5162606	PrimaryExpression	4		5162580	0					
ANR	5162607	Argument	20		5162580	3					
ANR	5162608	PrimaryExpression	20		5162580	0					
ANR	5162609	Identifier	main		5162580	1					
ANR	5162610	ParameterList			5162580	2					
ANR	5162611	CFGEntryNode	ENTRY		5162580		True				
ANR	5162612	CFGExitNode	EXIT		5162580		True				
ANR	5162613	Symbol	NULL		5162580						
ANR	5162614	Symbol	v		5162580						
ANR	5162615	Symbol	& v		5162580						
