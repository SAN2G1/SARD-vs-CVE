command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5912592	File	data/converged/CVE-2019-16718~_radare2/shlr_grub_kern_misc.c								
ANR	5912593	DeclStmt									
ANR	5912594	Decl							include < grub / i18n . h >	include < grub / i18n . h > ( grub_memmove )	GRUB_EXPORT
ANR	5912595	DeclStmt									
ANR	5912596	Decl							int	"int ( char * str , grub_size_t n , const char * fmt , va_list args )"	grub_vsnprintf_real
ANR	5912597	Function	grub_iswordseparator	68:0:2004:2123							
ANR	5912598	FunctionDef	grub_iswordseparator (int c)		5912597	0					
ANR	5912599	CompoundStatement		70:0:2044:2123	5912597	0					
ANR	5912600	ReturnStatement	"return ( grub_isspace ( c ) || c == ',' || c == ';' || c == '|' || c == '&' ) ;"	71:2:2048:2121	5912597	0	True				
ANR	5912601	OrExpression	"grub_isspace ( c ) || c == ',' || c == ';' || c == '|' || c == '&'"		5912597	0		||			
ANR	5912602	CallExpression	grub_isspace ( c )		5912597	0					
ANR	5912603	Callee	grub_isspace		5912597	0					
ANR	5912604	Identifier	grub_isspace		5912597	0					
ANR	5912605	ArgumentList	c		5912597	1					
ANR	5912606	Argument	c		5912597	0					
ANR	5912607	Identifier	c		5912597	0					
ANR	5912608	OrExpression	"c == ',' || c == ';' || c == '|' || c == '&'"		5912597	1		||			
ANR	5912609	EqualityExpression	"c == ','"		5912597	0		==			
ANR	5912610	Identifier	c		5912597	0					
ANR	5912611	PrimaryExpression	"','"		5912597	1					
ANR	5912612	OrExpression	c == ';' || c == '|' || c == '&'		5912597	1		||			
ANR	5912613	EqualityExpression	c == ';'		5912597	0		==			
ANR	5912614	Identifier	c		5912597	0					
ANR	5912615	PrimaryExpression	';'		5912597	1					
ANR	5912616	OrExpression	c == '|' || c == '&'		5912597	1		||			
ANR	5912617	EqualityExpression	c == '|'		5912597	0		==			
ANR	5912618	Identifier	c		5912597	0					
ANR	5912619	PrimaryExpression	'|'		5912597	1					
ANR	5912620	EqualityExpression	c == '&'		5912597	1		==			
ANR	5912621	Identifier	c		5912597	0					
ANR	5912622	PrimaryExpression	'&'		5912597	1					
ANR	5912623	ReturnType	static int		5912597	1					
ANR	5912624	Identifier	grub_iswordseparator		5912597	2					
ANR	5912625	ParameterList	int c		5912597	3					
ANR	5912626	Parameter	int c	69:22:2037:2041	5912597	0	True				
ANR	5912627	ParameterType	int		5912597	0					
ANR	5912628	Identifier	c		5912597	1					
ANR	5912629	CFGEntryNode	ENTRY		5912597		True				
ANR	5912630	CFGExitNode	EXIT		5912597		True				
ANR	5912631	Symbol	c		5912597						
ANR	5912632	Symbol	grub_isspace		5912597						
ANR	5912633	Function	grub_gettext_dummy	75:0:2181:2250							
ANR	5912634	FunctionDef	grub_gettext_dummy (const char * s)		5912633	0					
ANR	5912635	CompoundStatement		77:0:2236:2250	5912633	0					
ANR	5912636	ReturnStatement	return s ;	78:2:2240:2248	5912633	0	True				
ANR	5912637	Identifier	s		5912633	0					
ANR	5912638	ReturnType	static const char *		5912633	1					
ANR	5912639	Identifier	grub_gettext_dummy		5912633	2					
ANR	5912640	ParameterList	const char * s		5912633	3					
ANR	5912641	Parameter	const char * s	76:20:2221:2233	5912633	0	True				
ANR	5912642	ParameterType	const char *		5912633	0					
ANR	5912643	Identifier	s		5912633	1					
ANR	5912644	CFGEntryNode	ENTRY		5912633		True				
ANR	5912645	CFGExitNode	EXIT		5912633		True				
ANR	5912646	Symbol	s		5912633						
ANR	5912647	DeclStmt									
ANR	5912648	Decl							const char * ( * ) ( const char * s )	const char * ( * ) ( const char * s )	grub_gettext
ANR	5912649	Function	grub_memmove	83:0:2320:2597							
ANR	5912650	FunctionDef	"grub_memmove (void * dest , const void * src , grub_size_t n)"		5912649	0					
ANR	5912651	CompoundStatement		85:0:2385:2597	5912649	0					
ANR	5912652	IdentifierDeclStatement	char * d = ( char * ) dest ;	86:2:2389:2412	5912649	0	True				
ANR	5912653	IdentifierDecl	* d = ( char * ) dest		5912649	0					
ANR	5912654	IdentifierDeclType	char *		5912649	0					
ANR	5912655	Identifier	d		5912649	1					
ANR	5912656	AssignmentExpression	* d = ( char * ) dest		5912649	2		=			
ANR	5912657	Identifier	d		5912649	0					
ANR	5912658	CastExpression	( char * ) dest		5912649	1					
ANR	5912659	CastTarget	char *		5912649	0					
ANR	5912660	Identifier	dest		5912649	1					
ANR	5912661	IdentifierDeclStatement	const char * s = ( const char * ) src ;	87:2:2416:2450	5912649	1	True				
ANR	5912662	IdentifierDecl	* s = ( const char * ) src		5912649	0					
ANR	5912663	IdentifierDeclType	const char *		5912649	0					
ANR	5912664	Identifier	s		5912649	1					
ANR	5912665	AssignmentExpression	* s = ( const char * ) src		5912649	2		=			
ANR	5912666	Identifier	s		5912649	0					
ANR	5912667	CastExpression	( const char * ) src		5912649	1					
ANR	5912668	CastTarget	const char *		5912649	0					
ANR	5912669	Identifier	src		5912649	1					
ANR	5912670	IfStatement	if ( d < s )		5912649	2					
ANR	5912671	Condition	d < s	89:6:2459:2463	5912649	0	True				
ANR	5912672	RelationalExpression	d < s		5912649	0		<			
ANR	5912673	Identifier	d		5912649	0					
ANR	5912674	Identifier	s		5912649	1					
ANR	5912675	WhileStatement	while ( n -- )		5912649	1					
ANR	5912676	Condition	n --	90:11:2477:2479	5912649	0	True				
ANR	5912677	PostIncDecOperationExpression	n --		5912649	0					
ANR	5912678	Identifier	n		5912649	0					
ANR	5912679	IncDec	--		5912649	1					
ANR	5912680	ExpressionStatement	* d ++ = * s ++	91:6:2488:2499	5912649	1	True				
ANR	5912681	AssignmentExpression	* d ++ = * s ++		5912649	0		=			
ANR	5912682	UnaryOperationExpression	* d ++		5912649	0					
ANR	5912683	UnaryOperator	*		5912649	0					
ANR	5912684	PostIncDecOperationExpression	d ++		5912649	1					
ANR	5912685	Identifier	d		5912649	0					
ANR	5912686	IncDec	++		5912649	1					
ANR	5912687	UnaryOperationExpression	* s ++		5912649	1					
ANR	5912688	UnaryOperator	*		5912649	0					
ANR	5912689	PostIncDecOperationExpression	s ++		5912649	1					
ANR	5912690	Identifier	s		5912649	0					
ANR	5912691	IncDec	++		5912649	1					
ANR	5912692	ElseStatement	else		5912649	0					
ANR	5912693	CompoundStatement		9:4:126:126	5912649	0					
ANR	5912694	ExpressionStatement	d += n	94:6:2520:2526	5912649	0	True				
ANR	5912695	AssignmentExpression	d += n		5912649	0		+=			
ANR	5912696	Identifier	d		5912649	0					
ANR	5912697	Identifier	n		5912649	1					
ANR	5912698	ExpressionStatement	s += n	95:6:2534:2540	5912649	1	True				
ANR	5912699	AssignmentExpression	s += n		5912649	0		+=			
ANR	5912700	Identifier	s		5912649	0					
ANR	5912701	Identifier	n		5912649	1					
ANR	5912702	WhileStatement	while ( n -- )		5912649	2					
ANR	5912703	Condition	n --	97:13:2556:2558	5912649	0	True				
ANR	5912704	PostIncDecOperationExpression	n --		5912649	0					
ANR	5912705	Identifier	n		5912649	0					
ANR	5912706	IncDec	--		5912649	1					
ANR	5912707	ExpressionStatement	* -- d = * -- s	98:1:2562:2573	5912649	1	True				
ANR	5912708	AssignmentExpression	* -- d = * -- s		5912649	0		=			
ANR	5912709	UnaryOperationExpression	* -- d		5912649	0					
ANR	5912710	UnaryOperator	*		5912649	0					
ANR	5912711	UnaryExpression	-- d		5912649	1					
ANR	5912712	IncDec	--		5912649	0					
ANR	5912713	Identifier	d		5912649	1					
ANR	5912714	UnaryOperationExpression	* -- s		5912649	1					
ANR	5912715	UnaryOperator	*		5912649	0					
ANR	5912716	UnaryExpression	-- s		5912649	1					
ANR	5912717	IncDec	--		5912649	0					
ANR	5912718	Identifier	s		5912649	1					
ANR	5912719	ReturnStatement	return dest ;	101:2:2584:2595	5912649	3	True				
ANR	5912720	Identifier	dest		5912649	0					
ANR	5912721	ReturnType	void *		5912649	1					
ANR	5912722	Identifier	grub_memmove		5912649	2					
ANR	5912723	ParameterList	"void * dest , const void * src , grub_size_t n"		5912649	3					
ANR	5912724	Parameter	void * dest	84:14:2341:2350	5912649	0	True				
ANR	5912725	ParameterType	void *		5912649	0					
ANR	5912726	Identifier	dest		5912649	1					
ANR	5912727	Parameter	const void * src	84:26:2353:2367	5912649	1	True				
ANR	5912728	ParameterType	const void *		5912649	0					
ANR	5912729	Identifier	src		5912649	1					
ANR	5912730	Parameter	grub_size_t n	84:43:2370:2382	5912649	2	True				
ANR	5912731	ParameterType	grub_size_t		5912649	0					
ANR	5912732	Identifier	n		5912649	1					
ANR	5912733	CFGEntryNode	ENTRY		5912649		True				
ANR	5912734	CFGExitNode	EXIT		5912649		True				
ANR	5912735	Symbol	* s ++		5912649						
ANR	5912736	Symbol	s		5912649						
ANR	5912737	Symbol	d		5912649						
ANR	5912738	Symbol	src		5912649						
ANR	5912739	Symbol	* -- d		5912649						
ANR	5912740	Symbol	* -- s		5912649						
ANR	5912741	Symbol	dest		5912649						
ANR	5912742	Symbol	* s		5912649						
ANR	5912743	Symbol	n		5912649						
ANR	5912744	Symbol	* d ++		5912649						
ANR	5912745	Symbol	* d		5912649						
ANR	5912746	Function	grub_strcpy	104:0:2600:2726							
ANR	5912747	FunctionDef	"grub_strcpy (char * dest , const char * src)"		5912746	0					
ANR	5912748	CompoundStatement		106:0:2649:2726	5912746	0					
ANR	5912749	IdentifierDeclStatement	char * p = dest ;	107:2:2653:2667	5912746	0	True				
ANR	5912750	IdentifierDecl	* p = dest		5912746	0					
ANR	5912751	IdentifierDeclType	char *		5912746	0					
ANR	5912752	Identifier	p		5912746	1					
ANR	5912753	AssignmentExpression	* p = dest		5912746	2		=			
ANR	5912754	Identifier	dest		5912746	0					
ANR	5912755	Identifier	dest		5912746	1					
ANR	5912756	WhileStatement	while ( ( * p ++ = * src ++ ) != '\\0' )		5912746	1					
ANR	5912757	Condition	( * p ++ = * src ++ ) != '\\0'	109:9:2679:2701	5912746	0	True				
ANR	5912758	EqualityExpression	( * p ++ = * src ++ ) != '\\0'		5912746	0		!=			
ANR	5912759	AssignmentExpression	* p ++ = * src ++		5912746	0		=			
ANR	5912760	UnaryOperationExpression	* p ++		5912746	0					
ANR	5912761	UnaryOperator	*		5912746	0					
ANR	5912762	PostIncDecOperationExpression	p ++		5912746	1					
ANR	5912763	Identifier	p		5912746	0					
ANR	5912764	IncDec	++		5912746	1					
ANR	5912765	UnaryOperationExpression	* src ++		5912746	1					
ANR	5912766	UnaryOperator	*		5912746	0					
ANR	5912767	PostIncDecOperationExpression	src ++		5912746	1					
ANR	5912768	Identifier	src		5912746	0					
ANR	5912769	IncDec	++		5912746	1					
ANR	5912770	PrimaryExpression	'\\0'		5912746	1					
ANR	5912771	ExpressionStatement		110:4:2708:2708	5912746	1	True				
ANR	5912772	ReturnStatement	return dest ;	112:2:2713:2724	5912746	2	True				
ANR	5912773	Identifier	dest		5912746	0					
ANR	5912774	ReturnType	char *		5912746	1					
ANR	5912775	Identifier	grub_strcpy		5912746	2					
ANR	5912776	ParameterList	"char * dest , const char * src"		5912746	3					
ANR	5912777	Parameter	char * dest	105:13:2620:2629	5912746	0	True				
ANR	5912778	ParameterType	char *		5912746	0					
ANR	5912779	Identifier	dest		5912746	1					
ANR	5912780	Parameter	const char * src	105:25:2632:2646	5912746	1	True				
ANR	5912781	ParameterType	const char *		5912746	0					
ANR	5912782	Identifier	src		5912746	1					
ANR	5912783	CFGEntryNode	ENTRY		5912746		True				
ANR	5912784	CFGExitNode	EXIT		5912746		True				
ANR	5912785	Symbol	p		5912746						
ANR	5912786	Symbol	src		5912746						
ANR	5912787	Symbol	* p ++		5912746						
ANR	5912788	Symbol	* src ++		5912746						
ANR	5912789	Symbol	dest		5912746						
ANR	5912790	Function	grub_strncpy	115:0:2729:2870							
ANR	5912791	FunctionDef	"grub_strncpy (char * dest , const char * src , int c)"		5912790	0					
ANR	5912792	CompoundStatement		117:0:2786:2870	5912790	0					
ANR	5912793	IdentifierDeclStatement	char * p = dest ;	118:2:2790:2804	5912790	0	True				
ANR	5912794	IdentifierDecl	* p = dest		5912790	0					
ANR	5912795	IdentifierDeclType	char *		5912790	0					
ANR	5912796	Identifier	p		5912790	1					
ANR	5912797	AssignmentExpression	* p = dest		5912790	2		=			
ANR	5912798	Identifier	dest		5912790	0					
ANR	5912799	Identifier	dest		5912790	1					
ANR	5912800	WhileStatement	while ( ( * p ++ = * src ++ ) != '\\0' && -- c )		5912790	1					
ANR	5912801	Condition	( * p ++ = * src ++ ) != '\\0' && -- c	120:9:2816:2845	5912790	0	True				
ANR	5912802	AndExpression	( * p ++ = * src ++ ) != '\\0' && -- c		5912790	0		&&			
ANR	5912803	EqualityExpression	( * p ++ = * src ++ ) != '\\0'		5912790	0		!=			
ANR	5912804	AssignmentExpression	* p ++ = * src ++		5912790	0		=			
ANR	5912805	UnaryOperationExpression	* p ++		5912790	0					
ANR	5912806	UnaryOperator	*		5912790	0					
ANR	5912807	PostIncDecOperationExpression	p ++		5912790	1					
ANR	5912808	Identifier	p		5912790	0					
ANR	5912809	IncDec	++		5912790	1					
ANR	5912810	UnaryOperationExpression	* src ++		5912790	1					
ANR	5912811	UnaryOperator	*		5912790	0					
ANR	5912812	PostIncDecOperationExpression	src ++		5912790	1					
ANR	5912813	Identifier	src		5912790	0					
ANR	5912814	IncDec	++		5912790	1					
ANR	5912815	PrimaryExpression	'\\0'		5912790	1					
ANR	5912816	UnaryExpression	-- c		5912790	1					
ANR	5912817	IncDec	--		5912790	0					
ANR	5912818	Identifier	c		5912790	1					
ANR	5912819	ExpressionStatement		121:4:2852:2852	5912790	1	True				
ANR	5912820	ReturnStatement	return dest ;	123:2:2857:2868	5912790	2	True				
ANR	5912821	Identifier	dest		5912790	0					
ANR	5912822	ReturnType	char *		5912790	1					
ANR	5912823	Identifier	grub_strncpy		5912790	2					
ANR	5912824	ParameterList	"char * dest , const char * src , int c"		5912790	3					
ANR	5912825	Parameter	char * dest	116:14:2750:2759	5912790	0	True				
ANR	5912826	ParameterType	char *		5912790	0					
ANR	5912827	Identifier	dest		5912790	1					
ANR	5912828	Parameter	const char * src	116:26:2762:2776	5912790	1	True				
ANR	5912829	ParameterType	const char *		5912790	0					
ANR	5912830	Identifier	src		5912790	1					
ANR	5912831	Parameter	int c	116:43:2779:2783	5912790	2	True				
ANR	5912832	ParameterType	int		5912790	0					
ANR	5912833	Identifier	c		5912790	1					
ANR	5912834	CFGEntryNode	ENTRY		5912790		True				
ANR	5912835	CFGExitNode	EXIT		5912790		True				
ANR	5912836	Symbol	p		5912790						
ANR	5912837	Symbol	c		5912790						
ANR	5912838	Symbol	src		5912790						
ANR	5912839	Symbol	* p ++		5912790						
ANR	5912840	Symbol	* src ++		5912790						
ANR	5912841	Symbol	dest		5912790						
ANR	5912842	Function	grub_stpcpy	126:0:2873:3027							
ANR	5912843	FunctionDef	"grub_stpcpy (char * dest , const char * src)"		5912842	0					
ANR	5912844	CompoundStatement		128:0:2922:3027	5912842	0					
ANR	5912845	IdentifierDeclStatement	char * d = dest ;	129:2:2926:2940	5912842	0	True				
ANR	5912846	IdentifierDecl	* d = dest		5912842	0					
ANR	5912847	IdentifierDeclType	char *		5912842	0					
ANR	5912848	Identifier	d		5912842	1					
ANR	5912849	AssignmentExpression	* d = dest		5912842	2		=			
ANR	5912850	Identifier	dest		5912842	0					
ANR	5912851	Identifier	dest		5912842	1					
ANR	5912852	IdentifierDeclStatement	const char * s = src ;	130:2:2944:2963	5912842	1	True				
ANR	5912853	IdentifierDecl	* s = src		5912842	0					
ANR	5912854	IdentifierDeclType	const char *		5912842	0					
ANR	5912855	Identifier	s		5912842	1					
ANR	5912856	AssignmentExpression	* s = src		5912842	2		=			
ANR	5912857	Identifier	src		5912842	0					
ANR	5912858	Identifier	src		5912842	1					
ANR	5912859	DoStatement	do		5912842	2					
ANR	5912860	ExpressionStatement	* d ++ = * s	133:4:2975:2984	5912842	0	True				
ANR	5912861	AssignmentExpression	* d ++ = * s		5912842	0		=			
ANR	5912862	UnaryOperationExpression	* d ++		5912842	0					
ANR	5912863	UnaryOperator	*		5912842	0					
ANR	5912864	PostIncDecOperationExpression	d ++		5912842	1					
ANR	5912865	Identifier	d		5912842	0					
ANR	5912866	IncDec	++		5912842	1					
ANR	5912867	UnaryOperationExpression	* s		5912842	1					
ANR	5912868	UnaryOperator	*		5912842	0					
ANR	5912869	Identifier	s		5912842	1					
ANR	5912870	Condition	* s ++ != '\\0'	134:9:2995:3006	5912842	1	True				
ANR	5912871	EqualityExpression	* s ++ != '\\0'		5912842	0		!=			
ANR	5912872	UnaryOperationExpression	* s ++		5912842	0					
ANR	5912873	UnaryOperator	*		5912842	0					
ANR	5912874	PostIncDecOperationExpression	s ++		5912842	1					
ANR	5912875	Identifier	s		5912842	0					
ANR	5912876	IncDec	++		5912842	1					
ANR	5912877	PrimaryExpression	'\\0'		5912842	1					
ANR	5912878	ReturnStatement	return d - 1 ;	136:2:3013:3025	5912842	3	True				
ANR	5912879	AdditiveExpression	d - 1		5912842	0		-			
ANR	5912880	Identifier	d		5912842	0					
ANR	5912881	PrimaryExpression	1		5912842	1					
ANR	5912882	ReturnType	char *		5912842	1					
ANR	5912883	Identifier	grub_stpcpy		5912842	2					
ANR	5912884	ParameterList	"char * dest , const char * src"		5912842	3					
ANR	5912885	Parameter	char * dest	127:13:2893:2902	5912842	0	True				
ANR	5912886	ParameterType	char *		5912842	0					
ANR	5912887	Identifier	dest		5912842	1					
ANR	5912888	Parameter	const char * src	127:25:2905:2919	5912842	1	True				
ANR	5912889	ParameterType	const char *		5912842	0					
ANR	5912890	Identifier	src		5912842	1					
ANR	5912891	CFGEntryNode	ENTRY		5912842		True				
ANR	5912892	CFGExitNode	EXIT		5912842		True				
ANR	5912893	Symbol	* s ++		5912842						
ANR	5912894	Symbol	s		5912842						
ANR	5912895	Symbol	d		5912842						
ANR	5912896	Symbol	src		5912842						
ANR	5912897	Symbol	dest		5912842						
ANR	5912898	Symbol	* s		5912842						
ANR	5912899	Symbol	* d ++		5912842						
ANR	5912900	Function	grub_printf	139:0:3030:3181							
ANR	5912901	FunctionDef	grub_printf (const char * fmt)		5912900	0					
ANR	5912902	CompoundStatement		141:0:3069:3181	5912900	0					
ANR	5912903	IdentifierDeclStatement	va_list ap ;	142:2:3073:3083	5912900	0	True				
ANR	5912904	IdentifierDecl	ap		5912900	0					
ANR	5912905	IdentifierDeclType	va_list		5912900	0					
ANR	5912906	Identifier	ap		5912900	1					
ANR	5912907	IdentifierDeclStatement	int ret ;	143:2:3087:3094	5912900	1	True				
ANR	5912908	IdentifierDecl	ret		5912900	0					
ANR	5912909	IdentifierDeclType	int		5912900	0					
ANR	5912910	Identifier	ret		5912900	1					
ANR	5912911	ExpressionStatement	"va_start ( ap , fmt )"	145:2:3099:3117	5912900	2	True				
ANR	5912912	CallExpression	"va_start ( ap , fmt )"		5912900	0					
ANR	5912913	Callee	va_start		5912900	0					
ANR	5912914	Identifier	va_start		5912900	0					
ANR	5912915	ArgumentList	ap		5912900	1					
ANR	5912916	Argument	ap		5912900	0					
ANR	5912917	Identifier	ap		5912900	0					
ANR	5912918	Argument	fmt		5912900	1					
ANR	5912919	Identifier	fmt		5912900	0					
ANR	5912920	ExpressionStatement	"ret = grub_vprintf ( fmt , ap )"	146:2:3121:3149	5912900	3	True				
ANR	5912921	AssignmentExpression	"ret = grub_vprintf ( fmt , ap )"		5912900	0		=			
ANR	5912922	Identifier	ret		5912900	0					
ANR	5912923	CallExpression	"grub_vprintf ( fmt , ap )"		5912900	1					
ANR	5912924	Callee	grub_vprintf		5912900	0					
ANR	5912925	Identifier	grub_vprintf		5912900	0					
ANR	5912926	ArgumentList	fmt		5912900	1					
ANR	5912927	Argument	fmt		5912900	0					
ANR	5912928	Identifier	fmt		5912900	0					
ANR	5912929	Argument	ap		5912900	1					
ANR	5912930	Identifier	ap		5912900	0					
ANR	5912931	ExpressionStatement	va_end ( ap )	147:2:3153:3164	5912900	4	True				
ANR	5912932	CallExpression	va_end ( ap )		5912900	0					
ANR	5912933	Callee	va_end		5912900	0					
ANR	5912934	Identifier	va_end		5912900	0					
ANR	5912935	ArgumentList	ap		5912900	1					
ANR	5912936	Argument	ap		5912900	0					
ANR	5912937	Identifier	ap		5912900	0					
ANR	5912938	ReturnStatement	return ret ;	149:2:3169:3179	5912900	5	True				
ANR	5912939	Identifier	ret		5912900	0					
ANR	5912940	ReturnType	int		5912900	1					
ANR	5912941	Identifier	grub_printf		5912900	2					
ANR	5912942	ParameterList	const char * fmt		5912900	3					
ANR	5912943	Parameter	const char * fmt	140:13:3047:3061	5912900	0	True				
ANR	5912944	ParameterType	const char *		5912900	0					
ANR	5912945	Identifier	fmt		5912900	1					
ANR	5912946	CFGEntryNode	ENTRY		5912900		True				
ANR	5912947	CFGExitNode	EXIT		5912900		True				
ANR	5912948	Symbol	ret		5912900						
ANR	5912949	Symbol	grub_vprintf		5912900						
ANR	5912950	Symbol	fmt		5912900						
ANR	5912951	Symbol	ap		5912900						
ANR	5912952	Function	grub_printf_	152:0:3184:3339							
ANR	5912953	FunctionDef	grub_printf_ (const char * fmt)		5912952	0					
ANR	5912954	CompoundStatement		154:0:3224:3339	5912952	0					
ANR	5912955	IdentifierDeclStatement	va_list ap ;	155:2:3228:3238	5912952	0	True				
ANR	5912956	IdentifierDecl	ap		5912952	0					
ANR	5912957	IdentifierDeclType	va_list		5912952	0					
ANR	5912958	Identifier	ap		5912952	1					
ANR	5912959	IdentifierDeclStatement	int ret ;	156:2:3242:3249	5912952	1	True				
ANR	5912960	IdentifierDecl	ret		5912952	0					
ANR	5912961	IdentifierDeclType	int		5912952	0					
ANR	5912962	Identifier	ret		5912952	1					
ANR	5912963	ExpressionStatement	"va_start ( ap , fmt )"	158:2:3254:3272	5912952	2	True				
ANR	5912964	CallExpression	"va_start ( ap , fmt )"		5912952	0					
ANR	5912965	Callee	va_start		5912952	0					
ANR	5912966	Identifier	va_start		5912952	0					
ANR	5912967	ArgumentList	ap		5912952	1					
ANR	5912968	Argument	ap		5912952	0					
ANR	5912969	Identifier	ap		5912952	0					
ANR	5912970	Argument	fmt		5912952	1					
ANR	5912971	Identifier	fmt		5912952	0					
ANR	5912972	ExpressionStatement	"ret = grub_vprintf ( _ ( fmt ) , ap )"	159:2:3276:3307	5912952	3	True				
ANR	5912973	AssignmentExpression	"ret = grub_vprintf ( _ ( fmt ) , ap )"		5912952	0		=			
ANR	5912974	Identifier	ret		5912952	0					
ANR	5912975	CallExpression	"grub_vprintf ( _ ( fmt ) , ap )"		5912952	1					
ANR	5912976	Callee	grub_vprintf		5912952	0					
ANR	5912977	Identifier	grub_vprintf		5912952	0					
ANR	5912978	ArgumentList	_ ( fmt )		5912952	1					
ANR	5912979	Argument	_ ( fmt )		5912952	0					
ANR	5912980	CallExpression	_ ( fmt )		5912952	0					
ANR	5912981	Callee	_		5912952	0					
ANR	5912982	Identifier	_		5912952	0					
ANR	5912983	ArgumentList	fmt		5912952	1					
ANR	5912984	Argument	fmt		5912952	0					
ANR	5912985	Identifier	fmt		5912952	0					
ANR	5912986	Argument	ap		5912952	1					
ANR	5912987	Identifier	ap		5912952	0					
ANR	5912988	ExpressionStatement	va_end ( ap )	160:2:3311:3322	5912952	4	True				
ANR	5912989	CallExpression	va_end ( ap )		5912952	0					
ANR	5912990	Callee	va_end		5912952	0					
ANR	5912991	Identifier	va_end		5912952	0					
ANR	5912992	ArgumentList	ap		5912952	1					
ANR	5912993	Argument	ap		5912952	0					
ANR	5912994	Identifier	ap		5912952	0					
ANR	5912995	ReturnStatement	return ret ;	162:2:3327:3337	5912952	5	True				
ANR	5912996	Identifier	ret		5912952	0					
ANR	5912997	ReturnType	int		5912952	1					
ANR	5912998	Identifier	grub_printf_		5912952	2					
ANR	5912999	ParameterList	const char * fmt		5912952	3					
ANR	5913000	Parameter	const char * fmt	153:14:3202:3216	5912952	0	True				
ANR	5913001	ParameterType	const char *		5912952	0					
ANR	5913002	Identifier	fmt		5912952	1					
ANR	5913003	CFGEntryNode	ENTRY		5912952		True				
ANR	5913004	CFGExitNode	EXIT		5912952		True				
ANR	5913005	Symbol	ret		5912952						
ANR	5913006	Symbol	grub_vprintf		5912952						
ANR	5913007	Symbol	fmt		5912952						
ANR	5913008	Symbol	ap		5912952						
ANR	5913009	Symbol	_		5912952						
ANR	5913010	Function	grub_puts	165:0:3342:3491							
ANR	5913011	FunctionDef	grub_puts (const char * s)		5913010	0					
ANR	5913012	CompoundStatement		167:0:3372:3491	5913010	0					
ANR	5913013	WhileStatement	while ( * s )		5913010	0					
ANR	5913014	Condition	* s	168:9:3383:3384	5913010	0	True				
ANR	5913015	UnaryOperationExpression	* s		5913010	0					
ANR	5913016	UnaryOperator	*		5913010	0					
ANR	5913017	Identifier	s		5913010	1					
ANR	5913018	CompoundStatement		3:4:18:18	5913010	1					
ANR	5913019	ExpressionStatement	grub_putchar ( * s )	170:6:3399:3416	5913010	0	True				
ANR	5913020	CallExpression	grub_putchar ( * s )		5913010	0					
ANR	5913021	Callee	grub_putchar		5913010	0					
ANR	5913022	Identifier	grub_putchar		5913010	0					
ANR	5913023	ArgumentList	* s		5913010	1					
ANR	5913024	Argument	* s		5913010	0					
ANR	5913025	UnaryOperationExpression	* s		5913010	0					
ANR	5913026	UnaryOperator	*		5913010	0					
ANR	5913027	Identifier	s		5913010	1					
ANR	5913028	ExpressionStatement	s ++	171:6:3424:3427	5913010	1	True				
ANR	5913029	PostIncDecOperationExpression	s ++		5913010	0					
ANR	5913030	Identifier	s		5913010	0					
ANR	5913031	IncDec	++		5913010	1					
ANR	5913032	ExpressionStatement	grub_putchar ( '\\n' )	173:2:3437:3456	5913010	1	True				
ANR	5913033	CallExpression	grub_putchar ( '\\n' )		5913010	0					
ANR	5913034	Callee	grub_putchar		5913010	0					
ANR	5913035	Identifier	grub_putchar		5913010	0					
ANR	5913036	ArgumentList	'\\n'		5913010	1					
ANR	5913037	Argument	'\\n'		5913010	0					
ANR	5913038	PrimaryExpression	'\\n'		5913010	0					
ANR	5913039	ReturnStatement	return 1 ;	175:2:3461:3469	5913010	2	True				
ANR	5913040	PrimaryExpression	1		5913010	0					
ANR	5913041	ReturnType	int		5913010	1					
ANR	5913042	Identifier	grub_puts		5913010	2					
ANR	5913043	ParameterList	const char * s		5913010	3					
ANR	5913044	Parameter	const char * s	166:11:3357:3369	5913010	0	True				
ANR	5913045	ParameterType	const char *		5913010	0					
ANR	5913046	Identifier	s		5913010	1					
ANR	5913047	CFGEntryNode	ENTRY		5913010		True				
ANR	5913048	CFGExitNode	EXIT		5913010		True				
ANR	5913049	Symbol	s		5913010						
ANR	5913050	Symbol	* s		5913010						
ANR	5913051	Function	grub_puts_	178:0:3494:3554							
ANR	5913052	FunctionDef	grub_puts_ (const char * s)		5913051	0					
ANR	5913053	CompoundStatement		180:0:3525:3554	5913051	0					
ANR	5913054	ReturnStatement	return grub_puts ( _ ( s ) ) ;	181:2:3529:3552	5913051	0	True				
ANR	5913055	CallExpression	grub_puts ( _ ( s ) )		5913051	0					
ANR	5913056	Callee	grub_puts		5913051	0					
ANR	5913057	Identifier	grub_puts		5913051	0					
ANR	5913058	ArgumentList	_ ( s )		5913051	1					
ANR	5913059	Argument	_ ( s )		5913051	0					
ANR	5913060	CallExpression	_ ( s )		5913051	0					
ANR	5913061	Callee	_		5913051	0					
ANR	5913062	Identifier	_		5913051	0					
ANR	5913063	ArgumentList	s		5913051	1					
ANR	5913064	Argument	s		5913051	0					
ANR	5913065	Identifier	s		5913051	0					
ANR	5913066	ReturnType	int		5913051	1					
ANR	5913067	Identifier	grub_puts_		5913051	2					
ANR	5913068	ParameterList	const char * s		5913051	3					
ANR	5913069	Parameter	const char * s	179:12:3510:3522	5913051	0	True				
ANR	5913070	ParameterType	const char *		5913051	0					
ANR	5913071	Identifier	s		5913051	1					
ANR	5913072	CFGEntryNode	ENTRY		5913051		True				
ANR	5913073	CFGExitNode	EXIT		5913051		True				
ANR	5913074	Symbol	s		5913051						
ANR	5913075	Symbol	grub_puts		5913051						
ANR	5913076	Symbol	_		5913051						
ANR	5913077	Function	grub_err_printf	184:0:3557:3706							
ANR	5913078	FunctionDef	grub_err_printf (const char * fmt)		5913077	0					
ANR	5913079	CompoundStatement		186:0:3600:3706	5913077	0					
ANR	5913080	IdentifierDeclStatement	va_list ap ;	187:1:3603:3613	5913077	0	True				
ANR	5913081	IdentifierDecl	ap		5913077	0					
ANR	5913082	IdentifierDeclType	va_list		5913077	0					
ANR	5913083	Identifier	ap		5913077	1					
ANR	5913084	IdentifierDeclStatement	int ret ;	188:1:3616:3623	5913077	1	True				
ANR	5913085	IdentifierDecl	ret		5913077	0					
ANR	5913086	IdentifierDeclType	int		5913077	0					
ANR	5913087	Identifier	ret		5913077	1					
ANR	5913088	ExpressionStatement	"va_start ( ap , fmt )"	190:1:3627:3645	5913077	2	True				
ANR	5913089	CallExpression	"va_start ( ap , fmt )"		5913077	0					
ANR	5913090	Callee	va_start		5913077	0					
ANR	5913091	Identifier	va_start		5913077	0					
ANR	5913092	ArgumentList	ap		5913077	1					
ANR	5913093	Argument	ap		5913077	0					
ANR	5913094	Identifier	ap		5913077	0					
ANR	5913095	Argument	fmt		5913077	1					
ANR	5913096	Identifier	fmt		5913077	0					
ANR	5913097	ExpressionStatement	"ret = grub_vprintf ( fmt , ap )"	191:1:3648:3676	5913077	3	True				
ANR	5913098	AssignmentExpression	"ret = grub_vprintf ( fmt , ap )"		5913077	0		=			
ANR	5913099	Identifier	ret		5913077	0					
ANR	5913100	CallExpression	"grub_vprintf ( fmt , ap )"		5913077	1					
ANR	5913101	Callee	grub_vprintf		5913077	0					
ANR	5913102	Identifier	grub_vprintf		5913077	0					
ANR	5913103	ArgumentList	fmt		5913077	1					
ANR	5913104	Argument	fmt		5913077	0					
ANR	5913105	Identifier	fmt		5913077	0					
ANR	5913106	Argument	ap		5913077	1					
ANR	5913107	Identifier	ap		5913077	0					
ANR	5913108	ExpressionStatement	va_end ( ap )	192:1:3679:3690	5913077	4	True				
ANR	5913109	CallExpression	va_end ( ap )		5913077	0					
ANR	5913110	Callee	va_end		5913077	0					
ANR	5913111	Identifier	va_end		5913077	0					
ANR	5913112	ArgumentList	ap		5913077	1					
ANR	5913113	Argument	ap		5913077	0					
ANR	5913114	Identifier	ap		5913077	0					
ANR	5913115	ReturnStatement	return ret ;	194:1:3694:3704	5913077	5	True				
ANR	5913116	Identifier	ret		5913077	0					
ANR	5913117	ReturnType	int		5913077	1					
ANR	5913118	Identifier	grub_err_printf		5913077	2					
ANR	5913119	ParameterList	const char * fmt		5913077	3					
ANR	5913120	Parameter	const char * fmt	185:17:3578:3592	5913077	0	True				
ANR	5913121	ParameterType	const char *		5913077	0					
ANR	5913122	Identifier	fmt		5913077	1					
ANR	5913123	CFGEntryNode	ENTRY		5913077		True				
ANR	5913124	CFGExitNode	EXIT		5913077		True				
ANR	5913125	Symbol	ret		5913077						
ANR	5913126	Symbol	grub_vprintf		5913077						
ANR	5913127	Symbol	fmt		5913077						
ANR	5913128	Symbol	ap		5913077						
ANR	5913129	Function	grub_real_dprintf	197:0:3709:4116							
ANR	5913130	FunctionDef	"grub_real_dprintf (const char * file , const int line , const char * condition , const char * fmt)"		5913129	0					
ANR	5913131	CompoundStatement		200:0:3817:4116	5913129	0					
ANR	5913132	IdentifierDeclStatement	va_list args ;	201:2:3821:3833	5913129	0	True				
ANR	5913133	IdentifierDecl	args		5913129	0					
ANR	5913134	IdentifierDeclType	va_list		5913129	0					
ANR	5913135	Identifier	args		5913129	1					
ANR	5913136	IdentifierDeclStatement	"const char * debug = grub_env_get ( ""debug"" ) ;"	202:2:3837:3879	5913129	1	True				
ANR	5913137	IdentifierDecl	"* debug = grub_env_get ( ""debug"" )"		5913129	0					
ANR	5913138	IdentifierDeclType	const char *		5913129	0					
ANR	5913139	Identifier	debug		5913129	1					
ANR	5913140	AssignmentExpression	"* debug = grub_env_get ( ""debug"" )"		5913129	2		=			
ANR	5913141	Identifier	debug		5913129	0					
ANR	5913142	CallExpression	"grub_env_get ( ""debug"" )"		5913129	1					
ANR	5913143	Callee	grub_env_get		5913129	0					
ANR	5913144	Identifier	grub_env_get		5913129	0					
ANR	5913145	ArgumentList	"""debug"""		5913129	1					
ANR	5913146	Argument	"""debug"""		5913129	0					
ANR	5913147	PrimaryExpression	"""debug"""		5913129	0					
ANR	5913148	IfStatement	if ( ! debug )		5913129	2					
ANR	5913149	Condition	! debug	204:6:3888:3894	5913129	0	True				
ANR	5913150	UnaryOperationExpression	! debug		5913129	0					
ANR	5913151	UnaryOperator	!		5913129	0					
ANR	5913152	Identifier	debug		5913129	1					
ANR	5913153	ReturnStatement	return ;	205:4:3901:3907	5913129	1	True				
ANR	5913154	IfStatement	"if ( grub_strword ( debug , ""all"" ) || grub_strword ( debug , condition ) )"		5913129	3					
ANR	5913155	Condition	"grub_strword ( debug , ""all"" ) || grub_strword ( debug , condition )"	207:6:3916:3977	5913129	0	True				
ANR	5913156	OrExpression	"grub_strword ( debug , ""all"" ) || grub_strword ( debug , condition )"		5913129	0		||			
ANR	5913157	CallExpression	"grub_strword ( debug , ""all"" )"		5913129	0					
ANR	5913158	Callee	grub_strword		5913129	0					
ANR	5913159	Identifier	grub_strword		5913129	0					
ANR	5913160	ArgumentList	debug		5913129	1					
ANR	5913161	Argument	debug		5913129	0					
ANR	5913162	Identifier	debug		5913129	0					
ANR	5913163	Argument	"""all"""		5913129	1					
ANR	5913164	PrimaryExpression	"""all"""		5913129	0					
ANR	5913165	CallExpression	"grub_strword ( debug , condition )"		5913129	1					
ANR	5913166	Callee	grub_strword		5913129	0					
ANR	5913167	Identifier	grub_strword		5913129	0					
ANR	5913168	ArgumentList	debug		5913129	1					
ANR	5913169	Argument	debug		5913129	0					
ANR	5913170	Identifier	debug		5913129	0					
ANR	5913171	Argument	condition		5913129	1					
ANR	5913172	Identifier	condition		5913129	0					
ANR	5913173	CompoundStatement		9:4:166:166	5913129	1					
ANR	5913174	ExpressionStatement	"grub_printf ( ""%s:%d: "" , file , line )"	209:6:3992:4027	5913129	0	True				
ANR	5913175	CallExpression	"grub_printf ( ""%s:%d: "" , file , line )"		5913129	0					
ANR	5913176	Callee	grub_printf		5913129	0					
ANR	5913177	Identifier	grub_printf		5913129	0					
ANR	5913178	ArgumentList	"""%s:%d: """		5913129	1					
ANR	5913179	Argument	"""%s:%d: """		5913129	0					
ANR	5913180	PrimaryExpression	"""%s:%d: """		5913129	0					
ANR	5913181	Argument	file		5913129	1					
ANR	5913182	Identifier	file		5913129	0					
ANR	5913183	Argument	line		5913129	2					
ANR	5913184	Identifier	line		5913129	0					
ANR	5913185	ExpressionStatement	"va_start ( args , fmt )"	210:6:4035:4055	5913129	1	True				
ANR	5913186	CallExpression	"va_start ( args , fmt )"		5913129	0					
ANR	5913187	Callee	va_start		5913129	0					
ANR	5913188	Identifier	va_start		5913129	0					
ANR	5913189	ArgumentList	args		5913129	1					
ANR	5913190	Argument	args		5913129	0					
ANR	5913191	Identifier	args		5913129	0					
ANR	5913192	Argument	fmt		5913129	1					
ANR	5913193	Identifier	fmt		5913129	0					
ANR	5913194	ExpressionStatement	"grub_vprintf ( fmt , args )"	211:6:4063:4087	5913129	2	True				
ANR	5913195	CallExpression	"grub_vprintf ( fmt , args )"		5913129	0					
ANR	5913196	Callee	grub_vprintf		5913129	0					
ANR	5913197	Identifier	grub_vprintf		5913129	0					
ANR	5913198	ArgumentList	fmt		5913129	1					
ANR	5913199	Argument	fmt		5913129	0					
ANR	5913200	Identifier	fmt		5913129	0					
ANR	5913201	Argument	args		5913129	1					
ANR	5913202	Identifier	args		5913129	0					
ANR	5913203	ExpressionStatement	va_end ( args )	212:6:4095:4108	5913129	3	True				
ANR	5913204	CallExpression	va_end ( args )		5913129	0					
ANR	5913205	Callee	va_end		5913129	0					
ANR	5913206	Identifier	va_end		5913129	0					
ANR	5913207	ArgumentList	args		5913129	1					
ANR	5913208	Argument	args		5913129	0					
ANR	5913209	Identifier	args		5913129	0					
ANR	5913210	ReturnType	void		5913129	1					
ANR	5913211	Identifier	grub_real_dprintf		5913129	2					
ANR	5913212	ParameterList	"const char * file , const int line , const char * condition , const char * fmt"		5913129	3					
ANR	5913213	Parameter	const char * file	198:19:3733:3748	5913129	0	True				
ANR	5913214	ParameterType	const char *		5913129	0					
ANR	5913215	Identifier	file		5913129	1					
ANR	5913216	Parameter	const int line	198:37:3751:3764	5913129	1	True				
ANR	5913217	ParameterType	const int		5913129	0					
ANR	5913218	Identifier	line		5913129	1					
ANR	5913219	Parameter	const char * condition	198:53:3767:3787	5913129	2	True				
ANR	5913220	ParameterType	const char *		5913129	0					
ANR	5913221	Identifier	condition		5913129	1					
ANR	5913222	Parameter	const char * fmt	199:5:3795:3809	5913129	3	True				
ANR	5913223	ParameterType	const char *		5913129	0					
ANR	5913224	Identifier	fmt		5913129	1					
ANR	5913225	CFGEntryNode	ENTRY		5913129		True				
ANR	5913226	CFGExitNode	EXIT		5913129		True				
ANR	5913227	Symbol	args		5913129						
ANR	5913228	Symbol	condition		5913129						
ANR	5913229	Symbol	file		5913129						
ANR	5913230	Symbol	debug		5913129						
ANR	5913231	Symbol	grub_strword		5913129						
ANR	5913232	Symbol	line		5913129						
ANR	5913233	Symbol	grub_env_get		5913129						
ANR	5913234	Symbol	fmt		5913129						
ANR	5913235	Function	grub_vprintf	216:0:4119:4243							
ANR	5913236	FunctionDef	"grub_vprintf (const char * fmt , va_list args)"		5913235	0					
ANR	5913237	CompoundStatement		218:0:4168:4243	5913235	0					
ANR	5913238	IdentifierDeclStatement	int ret ;	219:2:4172:4179	5913235	0	True				
ANR	5913239	IdentifierDecl	ret		5913235	0					
ANR	5913240	IdentifierDeclType	int		5913235	0					
ANR	5913241	Identifier	ret		5913235	1					
ANR	5913242	ExpressionStatement	"ret = grub_vsnprintf_real ( 0 , 0 , fmt , args )"	221:2:4184:4227	5913235	1	True				
ANR	5913243	AssignmentExpression	"ret = grub_vsnprintf_real ( 0 , 0 , fmt , args )"		5913235	0		=			
ANR	5913244	Identifier	ret		5913235	0					
ANR	5913245	CallExpression	"grub_vsnprintf_real ( 0 , 0 , fmt , args )"		5913235	1					
ANR	5913246	Callee	grub_vsnprintf_real		5913235	0					
ANR	5913247	Identifier	grub_vsnprintf_real		5913235	0					
ANR	5913248	ArgumentList	0		5913235	1					
ANR	5913249	Argument	0		5913235	0					
ANR	5913250	PrimaryExpression	0		5913235	0					
ANR	5913251	Argument	0		5913235	1					
ANR	5913252	PrimaryExpression	0		5913235	0					
ANR	5913253	Argument	fmt		5913235	2					
ANR	5913254	Identifier	fmt		5913235	0					
ANR	5913255	Argument	args		5913235	3					
ANR	5913256	Identifier	args		5913235	0					
ANR	5913257	ReturnStatement	return ret ;	222:2:4231:4241	5913235	2	True				
ANR	5913258	Identifier	ret		5913235	0					
ANR	5913259	ReturnType	int		5913235	1					
ANR	5913260	Identifier	grub_vprintf		5913235	2					
ANR	5913261	ParameterList	"const char * fmt , va_list args"		5913235	3					
ANR	5913262	Parameter	const char * fmt	217:14:4137:4151	5913235	0	True				
ANR	5913263	ParameterType	const char *		5913235	0					
ANR	5913264	Identifier	fmt		5913235	1					
ANR	5913265	Parameter	va_list args	217:31:4154:4165	5913235	1	True				
ANR	5913266	ParameterType	va_list		5913235	0					
ANR	5913267	Identifier	args		5913235	1					
ANR	5913268	CFGEntryNode	ENTRY		5913235		True				
ANR	5913269	CFGExitNode	EXIT		5913235		True				
ANR	5913270	Symbol	args		5913235						
ANR	5913271	Symbol	ret		5913235						
ANR	5913272	Symbol	grub_vsnprintf_real		5913235						
ANR	5913273	Symbol	fmt		5913235						
ANR	5913274	Function	grub_memcmp	225:0:4246:4476							
ANR	5913275	FunctionDef	"grub_memcmp (const void * s1 , const void * s2 , grub_size_t n)"		5913274	0					
ANR	5913276	CompoundStatement		227:0:4310:4476	5913274	0					
ANR	5913277	IdentifierDeclStatement	const char * t1 = s1 ;	228:2:4314:4333	5913274	0	True				
ANR	5913278	IdentifierDecl	* t1 = s1		5913274	0					
ANR	5913279	IdentifierDeclType	const char *		5913274	0					
ANR	5913280	Identifier	t1		5913274	1					
ANR	5913281	AssignmentExpression	* t1 = s1		5913274	2		=			
ANR	5913282	Identifier	s1		5913274	0					
ANR	5913283	Identifier	s1		5913274	1					
ANR	5913284	IdentifierDeclStatement	const char * t2 = s2 ;	229:2:4337:4356	5913274	1	True				
ANR	5913285	IdentifierDecl	* t2 = s2		5913274	0					
ANR	5913286	IdentifierDeclType	const char *		5913274	0					
ANR	5913287	Identifier	t2		5913274	1					
ANR	5913288	AssignmentExpression	* t2 = s2		5913274	2		=			
ANR	5913289	Identifier	s2		5913274	0					
ANR	5913290	Identifier	s2		5913274	1					
ANR	5913291	WhileStatement	while ( n -- )		5913274	2					
ANR	5913292	Condition	n --	231:9:4368:4370	5913274	0	True				
ANR	5913293	PostIncDecOperationExpression	n --		5913274	0					
ANR	5913294	Identifier	n		5913274	0					
ANR	5913295	IncDec	--		5913274	1					
ANR	5913296	CompoundStatement		6:4:66:66	5913274	1					
ANR	5913297	IfStatement	if ( * t1 != * t2 )		5913274	0					
ANR	5913298	Condition	* t1 != * t2	233:10:4389:4398	5913274	0	True				
ANR	5913299	EqualityExpression	* t1 != * t2		5913274	0		!=			
ANR	5913300	UnaryOperationExpression	* t1		5913274	0					
ANR	5913301	UnaryOperator	*		5913274	0					
ANR	5913302	Identifier	t1		5913274	1					
ANR	5913303	UnaryOperationExpression	* t2		5913274	1					
ANR	5913304	UnaryOperator	*		5913274	0					
ANR	5913305	Identifier	t2		5913274	1					
ANR	5913306	ReturnStatement	return ( int ) * t1 - ( int ) * t2 ;	234:1:4402:4430	5913274	1	True				
ANR	5913307	AdditiveExpression	( int ) * t1 - ( int ) * t2		5913274	0		-			
ANR	5913308	CastExpression	( int ) * t1		5913274	0					
ANR	5913309	CastTarget	int		5913274	0					
ANR	5913310	UnaryOperationExpression	* t1		5913274	1					
ANR	5913311	UnaryOperator	*		5913274	0					
ANR	5913312	Identifier	t1		5913274	1					
ANR	5913313	CastExpression	( int ) * t2		5913274	1					
ANR	5913314	CastTarget	int		5913274	0					
ANR	5913315	UnaryOperationExpression	* t2		5913274	1					
ANR	5913316	UnaryOperator	*		5913274	0					
ANR	5913317	Identifier	t2		5913274	1					
ANR	5913318	ExpressionStatement	t1 ++	236:6:4439:4443	5913274	1	True				
ANR	5913319	PostIncDecOperationExpression	t1 ++		5913274	0					
ANR	5913320	Identifier	t1		5913274	0					
ANR	5913321	IncDec	++		5913274	1					
ANR	5913322	ExpressionStatement	t2 ++	237:6:4451:4455	5913274	2	True				
ANR	5913323	PostIncDecOperationExpression	t2 ++		5913274	0					
ANR	5913324	Identifier	t2		5913274	0					
ANR	5913325	IncDec	++		5913274	1					
ANR	5913326	ReturnStatement	return 0 ;	240:2:4466:4474	5913274	3	True				
ANR	5913327	PrimaryExpression	0		5913274	0					
ANR	5913328	ReturnType	int		5913274	1					
ANR	5913329	Identifier	grub_memcmp		5913274	2					
ANR	5913330	ParameterList	"const void * s1 , const void * s2 , grub_size_t n"		5913274	3					
ANR	5913331	Parameter	const void * s1	226:13:4263:4276	5913274	0	True				
ANR	5913332	ParameterType	const void *		5913274	0					
ANR	5913333	Identifier	s1		5913274	1					
ANR	5913334	Parameter	const void * s2	226:29:4279:4292	5913274	1	True				
ANR	5913335	ParameterType	const void *		5913274	0					
ANR	5913336	Identifier	s2		5913274	1					
ANR	5913337	Parameter	grub_size_t n	226:45:4295:4307	5913274	2	True				
ANR	5913338	ParameterType	grub_size_t		5913274	0					
ANR	5913339	Identifier	n		5913274	1					
ANR	5913340	CFGEntryNode	ENTRY		5913274		True				
ANR	5913341	CFGExitNode	EXIT		5913274		True				
ANR	5913342	Symbol	* t1		5913274						
ANR	5913343	Symbol	* t2		5913274						
ANR	5913344	Symbol	t1		5913274						
ANR	5913345	Symbol	s1		5913274						
ANR	5913346	Symbol	n		5913274						
ANR	5913347	Symbol	t2		5913274						
ANR	5913348	Symbol	s2		5913274						
ANR	5913349	Function	grub_strcmp	243:0:4479:4651							
ANR	5913350	FunctionDef	"grub_strcmp (const char * s1 , const char * s2)"		5913349	0					
ANR	5913351	CompoundStatement		245:0:4528:4651	5913349	0					
ANR	5913352	WhileStatement	while ( * s1 && * s2 )		5913349	0					
ANR	5913353	Condition	* s1 && * s2	246:9:4539:4548	5913349	0	True				
ANR	5913354	AndExpression	* s1 && * s2		5913349	0		&&			
ANR	5913355	UnaryOperationExpression	* s1		5913349	0					
ANR	5913356	UnaryOperator	*		5913349	0					
ANR	5913357	Identifier	s1		5913349	1					
ANR	5913358	UnaryOperationExpression	* s2		5913349	1					
ANR	5913359	UnaryOperator	*		5913349	0					
ANR	5913360	Identifier	s2		5913349	1					
ANR	5913361	CompoundStatement		3:4:26:26	5913349	1					
ANR	5913362	IfStatement	if ( * s1 != * s2 )		5913349	0					
ANR	5913363	Condition	* s1 != * s2	248:10:4567:4576	5913349	0	True				
ANR	5913364	EqualityExpression	* s1 != * s2		5913349	0		!=			
ANR	5913365	UnaryOperationExpression	* s1		5913349	0					
ANR	5913366	UnaryOperator	*		5913349	0					
ANR	5913367	Identifier	s1		5913349	1					
ANR	5913368	UnaryOperationExpression	* s2		5913349	1					
ANR	5913369	UnaryOperator	*		5913349	0					
ANR	5913370	Identifier	s2		5913349	1					
ANR	5913371	BreakStatement	break ;	249:1:4580:4585	5913349	1	True				
ANR	5913372	ExpressionStatement	s1 ++	251:6:4594:4598	5913349	1	True				
ANR	5913373	PostIncDecOperationExpression	s1 ++		5913349	0					
ANR	5913374	Identifier	s1		5913349	0					
ANR	5913375	IncDec	++		5913349	1					
ANR	5913376	ExpressionStatement	s2 ++	252:6:4606:4610	5913349	2	True				
ANR	5913377	PostIncDecOperationExpression	s2 ++		5913349	0					
ANR	5913378	Identifier	s2		5913349	0					
ANR	5913379	IncDec	++		5913349	1					
ANR	5913380	ReturnStatement	return ( int ) * s1 - ( int ) * s2 ;	255:2:4621:4649	5913349	1	True				
ANR	5913381	AdditiveExpression	( int ) * s1 - ( int ) * s2		5913349	0		-			
ANR	5913382	CastExpression	( int ) * s1		5913349	0					
ANR	5913383	CastTarget	int		5913349	0					
ANR	5913384	UnaryOperationExpression	* s1		5913349	1					
ANR	5913385	UnaryOperator	*		5913349	0					
ANR	5913386	Identifier	s1		5913349	1					
ANR	5913387	CastExpression	( int ) * s2		5913349	1					
ANR	5913388	CastTarget	int		5913349	0					
ANR	5913389	UnaryOperationExpression	* s2		5913349	1					
ANR	5913390	UnaryOperator	*		5913349	0					
ANR	5913391	Identifier	s2		5913349	1					
ANR	5913392	ReturnType	int		5913349	1					
ANR	5913393	Identifier	grub_strcmp		5913349	2					
ANR	5913394	ParameterList	"const char * s1 , const char * s2"		5913349	3					
ANR	5913395	Parameter	const char * s1	244:13:4496:4509	5913349	0	True				
ANR	5913396	ParameterType	const char *		5913349	0					
ANR	5913397	Identifier	s1		5913349	1					
ANR	5913398	Parameter	const char * s2	244:29:4512:4525	5913349	1	True				
ANR	5913399	ParameterType	const char *		5913349	0					
ANR	5913400	Identifier	s2		5913349	1					
ANR	5913401	CFGEntryNode	ENTRY		5913349		True				
ANR	5913402	CFGExitNode	EXIT		5913349		True				
ANR	5913403	Symbol	* s2		5913349						
ANR	5913404	Symbol	* s1		5913349						
ANR	5913405	Symbol	s1		5913349						
ANR	5913406	Symbol	s2		5913349						
ANR	5913407	Function	grub_strncmp	258:0:4654:4878							
ANR	5913408	FunctionDef	"grub_strncmp (const char * s1 , const char * s2 , grub_size_t n)"		5913407	0					
ANR	5913409	CompoundStatement		260:0:4719:4878	5913407	0					
ANR	5913410	IfStatement	if ( n == 0 )		5913407	0					
ANR	5913411	Condition	n == 0	261:6:4727:4732	5913407	0	True				
ANR	5913412	EqualityExpression	n == 0		5913407	0		==			
ANR	5913413	Identifier	n		5913407	0					
ANR	5913414	PrimaryExpression	0		5913407	1					
ANR	5913415	ReturnStatement	return 0 ;	262:4:4739:4747	5913407	1	True				
ANR	5913416	PrimaryExpression	0		5913407	0					
ANR	5913417	WhileStatement	while ( * s1 && * s2 && -- n )		5913407	1					
ANR	5913418	Condition	* s1 && * s2 && -- n	264:9:4759:4775	5913407	0	True				
ANR	5913419	AndExpression	* s1 && * s2 && -- n		5913407	0		&&			
ANR	5913420	UnaryOperationExpression	* s1		5913407	0					
ANR	5913421	UnaryOperator	*		5913407	0					
ANR	5913422	Identifier	s1		5913407	1					
ANR	5913423	AndExpression	* s2 && -- n		5913407	1		&&			
ANR	5913424	UnaryOperationExpression	* s2		5913407	0					
ANR	5913425	UnaryOperator	*		5913407	0					
ANR	5913426	Identifier	s2		5913407	1					
ANR	5913427	UnaryExpression	-- n		5913407	1					
ANR	5913428	IncDec	--		5913407	0					
ANR	5913429	Identifier	n		5913407	1					
ANR	5913430	CompoundStatement		6:4:62:62	5913407	1					
ANR	5913431	IfStatement	if ( * s1 != * s2 )		5913407	0					
ANR	5913432	Condition	* s1 != * s2	266:10:4794:4803	5913407	0	True				
ANR	5913433	EqualityExpression	* s1 != * s2		5913407	0		!=			
ANR	5913434	UnaryOperationExpression	* s1		5913407	0					
ANR	5913435	UnaryOperator	*		5913407	0					
ANR	5913436	Identifier	s1		5913407	1					
ANR	5913437	UnaryOperationExpression	* s2		5913407	1					
ANR	5913438	UnaryOperator	*		5913407	0					
ANR	5913439	Identifier	s2		5913407	1					
ANR	5913440	BreakStatement	break ;	267:1:4807:4812	5913407	1	True				
ANR	5913441	ExpressionStatement	s1 ++	269:6:4821:4825	5913407	1	True				
ANR	5913442	PostIncDecOperationExpression	s1 ++		5913407	0					
ANR	5913443	Identifier	s1		5913407	0					
ANR	5913444	IncDec	++		5913407	1					
ANR	5913445	ExpressionStatement	s2 ++	270:6:4833:4837	5913407	2	True				
ANR	5913446	PostIncDecOperationExpression	s2 ++		5913407	0					
ANR	5913447	Identifier	s2		5913407	0					
ANR	5913448	IncDec	++		5913407	1					
ANR	5913449	ReturnStatement	return ( int ) * s1 - ( int ) * s2 ;	273:2:4848:4876	5913407	2	True				
ANR	5913450	AdditiveExpression	( int ) * s1 - ( int ) * s2		5913407	0		-			
ANR	5913451	CastExpression	( int ) * s1		5913407	0					
ANR	5913452	CastTarget	int		5913407	0					
ANR	5913453	UnaryOperationExpression	* s1		5913407	1					
ANR	5913454	UnaryOperator	*		5913407	0					
ANR	5913455	Identifier	s1		5913407	1					
ANR	5913456	CastExpression	( int ) * s2		5913407	1					
ANR	5913457	CastTarget	int		5913407	0					
ANR	5913458	UnaryOperationExpression	* s2		5913407	1					
ANR	5913459	UnaryOperator	*		5913407	0					
ANR	5913460	Identifier	s2		5913407	1					
ANR	5913461	ReturnType	int		5913407	1					
ANR	5913462	Identifier	grub_strncmp		5913407	2					
ANR	5913463	ParameterList	"const char * s1 , const char * s2 , grub_size_t n"		5913407	3					
ANR	5913464	Parameter	const char * s1	259:14:4672:4685	5913407	0	True				
ANR	5913465	ParameterType	const char *		5913407	0					
ANR	5913466	Identifier	s1		5913407	1					
ANR	5913467	Parameter	const char * s2	259:30:4688:4701	5913407	1	True				
ANR	5913468	ParameterType	const char *		5913407	0					
ANR	5913469	Identifier	s2		5913407	1					
ANR	5913470	Parameter	grub_size_t n	259:46:4704:4716	5913407	2	True				
ANR	5913471	ParameterType	grub_size_t		5913407	0					
ANR	5913472	Identifier	n		5913407	1					
ANR	5913473	CFGEntryNode	ENTRY		5913407		True				
ANR	5913474	CFGExitNode	EXIT		5913407		True				
ANR	5913475	Symbol	* s2		5913407						
ANR	5913476	Symbol	* s1		5913407						
ANR	5913477	Symbol	s1		5913407						
ANR	5913478	Symbol	n		5913407						
ANR	5913479	Symbol	s2		5913407						
ANR	5913480	Function	grub_strchr	276:0:4881:5010							
ANR	5913481	FunctionDef	"grub_strchr (const char * s , int c)"		5913480	0					
ANR	5913482	CompoundStatement		278:0:4923:5010	5913480	0					
ANR	5913483	DoStatement	do		5913480	0					
ANR	5913484	CompoundStatement		3:4:10:10	5913480	0					
ANR	5913485	IfStatement	if ( * s == c )		5913480	0					
ANR	5913486	Condition	* s == c	281:10:4946:4952	5913480	0	True				
ANR	5913487	EqualityExpression	* s == c		5913480	0		==			
ANR	5913488	UnaryOperationExpression	* s		5913480	0					
ANR	5913489	UnaryOperator	*		5913480	0					
ANR	5913490	Identifier	s		5913480	1					
ANR	5913491	Identifier	c		5913480	1					
ANR	5913492	ReturnStatement	return ( char * ) s ;	282:1:4956:4973	5913480	1	True				
ANR	5913493	CastExpression	( char * ) s		5913480	0					
ANR	5913494	CastTarget	char *		5913480	0					
ANR	5913495	Identifier	s		5913480	1					
ANR	5913496	Condition	* s ++	284:9:4990:4993	5913480	1	True				
ANR	5913497	UnaryOperationExpression	* s ++		5913480	0					
ANR	5913498	UnaryOperator	*		5913480	0					
ANR	5913499	PostIncDecOperationExpression	s ++		5913480	1					
ANR	5913500	Identifier	s		5913480	0					
ANR	5913501	IncDec	++		5913480	1					
ANR	5913502	ReturnStatement	return 0 ;	286:2:5000:5008	5913480	1	True				
ANR	5913503	PrimaryExpression	0		5913480	0					
ANR	5913504	ReturnType	char *		5913480	1					
ANR	5913505	Identifier	grub_strchr		5913480	2					
ANR	5913506	ParameterList	"const char * s , int c"		5913480	3					
ANR	5913507	Parameter	const char * s	277:13:4901:4913	5913480	0	True				
ANR	5913508	ParameterType	const char *		5913480	0					
ANR	5913509	Identifier	s		5913480	1					
ANR	5913510	Parameter	int c	277:28:4916:4920	5913480	1	True				
ANR	5913511	ParameterType	int		5913480	0					
ANR	5913512	Identifier	c		5913480	1					
ANR	5913513	CFGEntryNode	ENTRY		5913480		True				
ANR	5913514	CFGExitNode	EXIT		5913480		True				
ANR	5913515	Symbol	* s ++		5913480						
ANR	5913516	Symbol	s		5913480						
ANR	5913517	Symbol	c		5913480						
ANR	5913518	Symbol	* s		5913480						
ANR	5913519	Function	grub_strrchr	289:0:5013:5159							
ANR	5913520	FunctionDef	"grub_strrchr (const char * s , int c)"		5913519	0					
ANR	5913521	CompoundStatement		291:0:5056:5159	5913519	0					
ANR	5913522	IdentifierDeclStatement	char * p = NULL ;	292:2:5060:5074	5913519	0	True				
ANR	5913523	IdentifierDecl	* p = NULL		5913519	0					
ANR	5913524	IdentifierDeclType	char *		5913519	0					
ANR	5913525	Identifier	p		5913519	1					
ANR	5913526	AssignmentExpression	* p = NULL		5913519	2		=			
ANR	5913527	Identifier	NULL		5913519	0					
ANR	5913528	Identifier	NULL		5913519	1					
ANR	5913529	DoStatement	do		5913519	1					
ANR	5913530	CompoundStatement		5:4:29:29	5913519	0					
ANR	5913531	IfStatement	if ( * s == c )		5913519	0					
ANR	5913532	Condition	* s == c	296:10:5098:5104	5913519	0	True				
ANR	5913533	EqualityExpression	* s == c		5913519	0		==			
ANR	5913534	UnaryOperationExpression	* s		5913519	0					
ANR	5913535	UnaryOperator	*		5913519	0					
ANR	5913536	Identifier	s		5913519	1					
ANR	5913537	Identifier	c		5913519	1					
ANR	5913538	ExpressionStatement	p = ( char * ) s	297:1:5108:5122	5913519	1	True				
ANR	5913539	AssignmentExpression	p = ( char * ) s		5913519	0		=			
ANR	5913540	Identifier	p		5913519	0					
ANR	5913541	CastExpression	( char * ) s		5913519	1					
ANR	5913542	CastTarget	char *		5913519	0					
ANR	5913543	Identifier	s		5913519	1					
ANR	5913544	Condition	* s ++	299:9:5139:5142	5913519	1	True				
ANR	5913545	UnaryOperationExpression	* s ++		5913519	0					
ANR	5913546	UnaryOperator	*		5913519	0					
ANR	5913547	PostIncDecOperationExpression	s ++		5913519	1					
ANR	5913548	Identifier	s		5913519	0					
ANR	5913549	IncDec	++		5913519	1					
ANR	5913550	ReturnStatement	return p ;	301:2:5149:5157	5913519	2	True				
ANR	5913551	Identifier	p		5913519	0					
ANR	5913552	ReturnType	char *		5913519	1					
ANR	5913553	Identifier	grub_strrchr		5913519	2					
ANR	5913554	ParameterList	"const char * s , int c"		5913519	3					
ANR	5913555	Parameter	const char * s	290:14:5034:5046	5913519	0	True				
ANR	5913556	ParameterType	const char *		5913519	0					
ANR	5913557	Identifier	s		5913519	1					
ANR	5913558	Parameter	int c	290:29:5049:5053	5913519	1	True				
ANR	5913559	ParameterType	int		5913519	0					
ANR	5913560	Identifier	c		5913519	1					
ANR	5913561	CFGEntryNode	ENTRY		5913519		True				
ANR	5913562	CFGExitNode	EXIT		5913519		True				
ANR	5913563	Symbol	p		5913519						
ANR	5913564	Symbol	* s ++		5913519						
ANR	5913565	Symbol	s		5913519						
ANR	5913566	Symbol	c		5913519						
ANR	5913567	Symbol	NULL		5913519						
ANR	5913568	Symbol	* s		5913519						
ANR	5913569	Function	grub_strstr	306:0:5240:6358							
ANR	5913570	FunctionDef	"grub_strstr (const char * haystack , const char * needle)"		5913569	0					
ANR	5913571	CompoundStatement		308:0:5302:6358	5913569	0					
ANR	5913572	IfStatement	if ( * needle != '\\0' )		5913569	0					
ANR	5913573	Condition	* needle != '\\0'	314:6:5633:5647	5913569	0	True				
ANR	5913574	EqualityExpression	* needle != '\\0'		5913569	0		!=			
ANR	5913575	UnaryOperationExpression	* needle		5913569	0					
ANR	5913576	UnaryOperator	*		5913569	0					
ANR	5913577	Identifier	needle		5913569	1					
ANR	5913578	PrimaryExpression	'\\0'		5913569	1					
ANR	5913579	CompoundStatement		11:6:448:466	5913569	1					
ANR	5913580	IdentifierDeclStatement	char b = * needle ++ ;	318:6:5751:5769	5913569	0	True				
ANR	5913581	IdentifierDecl	b = * needle ++		5913569	0					
ANR	5913582	IdentifierDeclType	char		5913569	0					
ANR	5913583	Identifier	b		5913569	1					
ANR	5913584	AssignmentExpression	b = * needle ++		5913569	2		=			
ANR	5913585	Identifier	b		5913569	0					
ANR	5913586	UnaryOperationExpression	* needle ++		5913569	1					
ANR	5913587	UnaryOperator	*		5913569	0					
ANR	5913588	PostIncDecOperationExpression	needle ++		5913569	1					
ANR	5913589	Identifier	needle		5913569	0					
ANR	5913590	IncDec	++		5913569	1					
ANR	5913591	ForStatement	for ( ; ; haystack ++ )		5913569	1					
ANR	5913592	PostIncDecOperationExpression	haystack ++	320:14:5786:5795	5913569	0	True				
ANR	5913593	Identifier	haystack		5913569	0					
ANR	5913594	IncDec	++		5913569	1					
ANR	5913595	CompoundStatement		14:1:496:496	5913569	1					
ANR	5913596	IfStatement	if ( * haystack == '\\0' )		5913569	0					
ANR	5913597	Condition	* haystack == '\\0'	322:7:5808:5824	5913569	0	True				
ANR	5913598	EqualityExpression	* haystack == '\\0'		5913569	0		==			
ANR	5913599	UnaryOperationExpression	* haystack		5913569	0					
ANR	5913600	UnaryOperator	*		5913569	0					
ANR	5913601	Identifier	haystack		5913569	1					
ANR	5913602	PrimaryExpression	'\\0'		5913569	1					
ANR	5913603	ReturnStatement	return NULL ;	324:5:5854:5865	5913569	1	True				
ANR	5913604	Identifier	NULL		5913569	0					
ANR	5913605	IfStatement	if ( * haystack == b )		5913569	1					
ANR	5913606	Condition	* haystack == b	325:7:5874:5887	5913569	0	True				
ANR	5913607	EqualityExpression	* haystack == b		5913569	0		==			
ANR	5913608	UnaryOperationExpression	* haystack		5913569	0					
ANR	5913609	UnaryOperator	*		5913569	0					
ANR	5913610	Identifier	haystack		5913569	1					
ANR	5913611	Identifier	b		5913569	1					
ANR	5913612	CompoundStatement		22:7:687:715	5913569	1					
ANR	5913613	IdentifierDeclStatement	const char * rhaystack = haystack + 1 ;	328:7:5945:5981	5913569	0	True				
ANR	5913614	IdentifierDecl	* rhaystack = haystack + 1		5913569	0					
ANR	5913615	IdentifierDeclType	const char *		5913569	0					
ANR	5913616	Identifier	rhaystack		5913569	1					
ANR	5913617	AssignmentExpression	* rhaystack = haystack + 1		5913569	2		=			
ANR	5913618	Identifier	rhaystack		5913569	0					
ANR	5913619	AdditiveExpression	haystack + 1		5913569	1		+			
ANR	5913620	Identifier	haystack		5913569	0					
ANR	5913621	PrimaryExpression	1		5913569	1					
ANR	5913622	IdentifierDeclStatement	const char * rneedle = needle ;	329:7:5990:6018	5913569	1	True				
ANR	5913623	IdentifierDecl	* rneedle = needle		5913569	0					
ANR	5913624	IdentifierDeclType	const char *		5913569	0					
ANR	5913625	Identifier	rneedle		5913569	1					
ANR	5913626	AssignmentExpression	* rneedle = needle		5913569	2		=			
ANR	5913627	Identifier	needle		5913569	0					
ANR	5913628	Identifier	needle		5913569	1					
ANR	5913629	ForStatement	"for ( ; ; rhaystack ++ , rneedle ++ )"		5913569	2					
ANR	5913630	Expression	"rhaystack ++ , rneedle ++"	331:15:6036:6057	5913569	0	True				
ANR	5913631	PostIncDecOperationExpression	rhaystack ++		5913569	0					
ANR	5913632	Identifier	rhaystack		5913569	0					
ANR	5913633	IncDec	++		5913569	1					
ANR	5913634	PostIncDecOperationExpression	rneedle ++		5913569	1					
ANR	5913635	Identifier	rneedle		5913569	0					
ANR	5913636	IncDec	++		5913569	1					
ANR	5913637	CompoundStatement		25:2:759:759	5913569	1					
ANR	5913638	IfStatement	if ( * rneedle == '\\0' )		5913569	0					
ANR	5913639	Condition	* rneedle == '\\0'	333:8:6072:6087	5913569	0	True				
ANR	5913640	EqualityExpression	* rneedle == '\\0'		5913569	0		==			
ANR	5913641	UnaryOperationExpression	* rneedle		5913569	0					
ANR	5913642	UnaryOperator	*		5913569	0					
ANR	5913643	Identifier	rneedle		5913569	1					
ANR	5913644	PrimaryExpression	'\\0'		5913569	1					
ANR	5913645	ReturnStatement	return ( char * ) haystack ;	335:6:6124:6148	5913569	1	True				
ANR	5913646	CastExpression	( char * ) haystack		5913569	0					
ANR	5913647	CastTarget	char *		5913569	0					
ANR	5913648	Identifier	haystack		5913569	1					
ANR	5913649	IfStatement	if ( * rhaystack == '\\0' )		5913569	1					
ANR	5913650	Condition	* rhaystack == '\\0'	336:8:6158:6175	5913569	0	True				
ANR	5913651	EqualityExpression	* rhaystack == '\\0'		5913569	0		==			
ANR	5913652	UnaryOperationExpression	* rhaystack		5913569	0					
ANR	5913653	UnaryOperator	*		5913569	0					
ANR	5913654	Identifier	rhaystack		5913569	1					
ANR	5913655	PrimaryExpression	'\\0'		5913569	1					
ANR	5913656	ReturnStatement	return NULL ;	338:6:6207:6218	5913569	1	True				
ANR	5913657	Identifier	NULL		5913569	0					
ANR	5913658	IfStatement	if ( * rhaystack != * rneedle )		5913569	2					
ANR	5913659	Condition	* rhaystack != * rneedle	339:8:6228:6249	5913569	0	True				
ANR	5913660	EqualityExpression	* rhaystack != * rneedle		5913569	0		!=			
ANR	5913661	UnaryOperationExpression	* rhaystack		5913569	0					
ANR	5913662	UnaryOperator	*		5913569	0					
ANR	5913663	Identifier	rhaystack		5913569	1					
ANR	5913664	UnaryOperationExpression	* rneedle		5913569	1					
ANR	5913665	UnaryOperator	*		5913569	0					
ANR	5913666	Identifier	rneedle		5913569	1					
ANR	5913667	BreakStatement	break ;	341:6:6294:6299	5913569	1	True				
ANR	5913668	ElseStatement	else		5913569	0					
ANR	5913669	ReturnStatement	return ( char * ) haystack ;	347:4:6332:6356	5913569	0	True				
ANR	5913670	CastExpression	( char * ) haystack		5913569	0					
ANR	5913671	CastTarget	char *		5913569	0					
ANR	5913672	Identifier	haystack		5913569	1					
ANR	5913673	ReturnType	char *		5913569	1					
ANR	5913674	Identifier	grub_strstr		5913569	2					
ANR	5913675	ParameterList	"const char * haystack , const char * needle"		5913569	3					
ANR	5913676	Parameter	const char * haystack	307:13:5260:5279	5913569	0	True				
ANR	5913677	ParameterType	const char *		5913569	0					
ANR	5913678	Identifier	haystack		5913569	1					
ANR	5913679	Parameter	const char * needle	307:35:5282:5299	5913569	1	True				
ANR	5913680	ParameterType	const char *		5913569	0					
ANR	5913681	Identifier	needle		5913569	1					
ANR	5913682	CFGEntryNode	ENTRY		5913569		True				
ANR	5913683	CFGExitNode	EXIT		5913569		True				
ANR	5913684	InfiniteForNode	true		5913569		True				
ANR	5913685	InfiniteForNode	true		5913569		True				
ANR	5913686	Symbol	b		5913569						
ANR	5913687	Symbol	* rneedle		5913569						
ANR	5913688	Symbol	haystack		5913569						
ANR	5913689	Symbol	NULL		5913569						
ANR	5913690	Symbol	* needle ++		5913569						
ANR	5913691	Symbol	* haystack		5913569						
ANR	5913692	Symbol	* needle		5913569						
ANR	5913693	Symbol	rneedle		5913569						
ANR	5913694	Symbol	needle		5913569						
ANR	5913695	Symbol	* rhaystack		5913569						
ANR	5913696	Symbol	rhaystack		5913569						
ANR	5913697	Function	grub_strword	350:0:6361:7347							
ANR	5913698	FunctionDef	"grub_strword (const char * haystack , const char * needle)"		5913697	0					
ANR	5913699	CompoundStatement		352:0:6421:7347	5913697	0					
ANR	5913700	IdentifierDeclStatement	const char * n_pos = needle ;	353:2:6425:6451	5913697	0	True				
ANR	5913701	IdentifierDecl	* n_pos = needle		5913697	0					
ANR	5913702	IdentifierDeclType	const char *		5913697	0					
ANR	5913703	Identifier	n_pos		5913697	1					
ANR	5913704	AssignmentExpression	* n_pos = needle		5913697	2		=			
ANR	5913705	Identifier	needle		5913697	0					
ANR	5913706	Identifier	needle		5913697	1					
ANR	5913707	WhileStatement	while ( grub_iswordseparator ( * haystack ) )		5913697	1					
ANR	5913708	Condition	grub_iswordseparator ( * haystack )	355:9:6463:6494	5913697	0	True				
ANR	5913709	CallExpression	grub_iswordseparator ( * haystack )		5913697	0					
ANR	5913710	Callee	grub_iswordseparator		5913697	0					
ANR	5913711	Identifier	grub_iswordseparator		5913697	0					
ANR	5913712	ArgumentList	* haystack		5913697	1					
ANR	5913713	Argument	* haystack		5913697	0					
ANR	5913714	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913715	UnaryOperator	*		5913697	0					
ANR	5913716	Identifier	haystack		5913697	1					
ANR	5913717	ExpressionStatement	haystack ++	356:4:6501:6511	5913697	1	True				
ANR	5913718	PostIncDecOperationExpression	haystack ++		5913697	0					
ANR	5913719	Identifier	haystack		5913697	0					
ANR	5913720	IncDec	++		5913697	1					
ANR	5913721	WhileStatement	while ( * haystack )		5913697	2					
ANR	5913722	Condition	* haystack	358:9:6523:6531	5913697	0	True				
ANR	5913723	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913724	UnaryOperator	*		5913697	0					
ANR	5913725	Identifier	haystack		5913697	1					
ANR	5913726	CompoundStatement		8:4:116:116	5913697	1					
ANR	5913727	WhileStatement	while ( * haystack && ! grub_iswordseparator ( * haystack ) && * haystack == * n_pos )		5913697	0					
ANR	5913728	Condition	* haystack && ! grub_iswordseparator ( * haystack ) && * haystack == * n_pos	361:12:6619:6699	5913697	0	True				
ANR	5913729	AndExpression	* haystack && ! grub_iswordseparator ( * haystack ) && * haystack == * n_pos		5913697	0		&&			
ANR	5913730	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913731	UnaryOperator	*		5913697	0					
ANR	5913732	Identifier	haystack		5913697	1					
ANR	5913733	AndExpression	! grub_iswordseparator ( * haystack ) && * haystack == * n_pos		5913697	1		&&			
ANR	5913734	UnaryOperationExpression	! grub_iswordseparator ( * haystack )		5913697	0					
ANR	5913735	UnaryOperator	!		5913697	0					
ANR	5913736	CallExpression	grub_iswordseparator ( * haystack )		5913697	1					
ANR	5913737	Callee	grub_iswordseparator		5913697	0					
ANR	5913738	Identifier	grub_iswordseparator		5913697	0					
ANR	5913739	ArgumentList	* haystack		5913697	1					
ANR	5913740	Argument	* haystack		5913697	0					
ANR	5913741	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913742	UnaryOperator	*		5913697	0					
ANR	5913743	Identifier	haystack		5913697	1					
ANR	5913744	EqualityExpression	* haystack == * n_pos		5913697	1		==			
ANR	5913745	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913746	UnaryOperator	*		5913697	0					
ANR	5913747	Identifier	haystack		5913697	1					
ANR	5913748	UnaryOperationExpression	* n_pos		5913697	1					
ANR	5913749	UnaryOperator	*		5913697	0					
ANR	5913750	Identifier	n_pos		5913697	1					
ANR	5913751	CompoundStatement		12:8:288:288	5913697	1					
ANR	5913752	ExpressionStatement	haystack ++	364:10:6722:6732	5913697	0	True				
ANR	5913753	PostIncDecOperationExpression	haystack ++		5913697	0					
ANR	5913754	Identifier	haystack		5913697	0					
ANR	5913755	IncDec	++		5913697	1					
ANR	5913756	ExpressionStatement	n_pos ++	365:10:6744:6751	5913697	1	True				
ANR	5913757	PostIncDecOperationExpression	n_pos ++		5913697	0					
ANR	5913758	Identifier	n_pos		5913697	0					
ANR	5913759	IncDec	++		5913697	1					
ANR	5913760	IfStatement	if ( ( ! * haystack || grub_iswordseparator ( * haystack ) ) && ( ! * n_pos || grub_iswordseparator ( * n_pos ) ) )		5913697	1					
ANR	5913761	Condition	( ! * haystack || grub_iswordseparator ( * haystack ) ) && ( ! * n_pos || grub_iswordseparator ( * n_pos ) )	371:11:6984:7086	5913697	0	True				
ANR	5913762	AndExpression	( ! * haystack || grub_iswordseparator ( * haystack ) ) && ( ! * n_pos || grub_iswordseparator ( * n_pos ) )		5913697	0		&&			
ANR	5913763	OrExpression	! * haystack || grub_iswordseparator ( * haystack )		5913697	0		||			
ANR	5913764	UnaryOperationExpression	! * haystack		5913697	0					
ANR	5913765	UnaryOperator	!		5913697	0					
ANR	5913766	UnaryOperationExpression	* haystack		5913697	1					
ANR	5913767	UnaryOperator	*		5913697	0					
ANR	5913768	Identifier	haystack		5913697	1					
ANR	5913769	CallExpression	grub_iswordseparator ( * haystack )		5913697	1					
ANR	5913770	Callee	grub_iswordseparator		5913697	0					
ANR	5913771	Identifier	grub_iswordseparator		5913697	0					
ANR	5913772	ArgumentList	* haystack		5913697	1					
ANR	5913773	Argument	* haystack		5913697	0					
ANR	5913774	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913775	UnaryOperator	*		5913697	0					
ANR	5913776	Identifier	haystack		5913697	1					
ANR	5913777	OrExpression	! * n_pos || grub_iswordseparator ( * n_pos )		5913697	1		||			
ANR	5913778	UnaryOperationExpression	! * n_pos		5913697	0					
ANR	5913779	UnaryOperator	!		5913697	0					
ANR	5913780	UnaryOperationExpression	* n_pos		5913697	1					
ANR	5913781	UnaryOperator	*		5913697	0					
ANR	5913782	Identifier	n_pos		5913697	1					
ANR	5913783	CallExpression	grub_iswordseparator ( * n_pos )		5913697	1					
ANR	5913784	Callee	grub_iswordseparator		5913697	0					
ANR	5913785	Identifier	grub_iswordseparator		5913697	0					
ANR	5913786	ArgumentList	* n_pos		5913697	1					
ANR	5913787	Argument	* n_pos		5913697	0					
ANR	5913788	UnaryOperationExpression	* n_pos		5913697	0					
ANR	5913789	UnaryOperator	*		5913697	0					
ANR	5913790	Identifier	n_pos		5913697	1					
ANR	5913791	ReturnStatement	return 1 ;	373:8:7097:7105	5913697	1	True				
ANR	5913792	PrimaryExpression	1		5913697	0					
ANR	5913793	ElseStatement	else		5913697	0					
ANR	5913794	CompoundStatement		24:8:704:704	5913697	0					
ANR	5913795	ExpressionStatement	n_pos = needle	376:10:7138:7152	5913697	0	True				
ANR	5913796	AssignmentExpression	n_pos = needle		5913697	0		=			
ANR	5913797	Identifier	n_pos		5913697	0					
ANR	5913798	Identifier	needle		5913697	1					
ANR	5913799	WhileStatement	while ( * haystack && ! grub_iswordseparator ( * haystack ) )		5913697	1					
ANR	5913800	Condition	* haystack && ! grub_iswordseparator ( * haystack )	377:17:7171:7216	5913697	0	True				
ANR	5913801	AndExpression	* haystack && ! grub_iswordseparator ( * haystack )		5913697	0		&&			
ANR	5913802	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913803	UnaryOperator	*		5913697	0					
ANR	5913804	Identifier	haystack		5913697	1					
ANR	5913805	UnaryOperationExpression	! grub_iswordseparator ( * haystack )		5913697	1					
ANR	5913806	UnaryOperator	!		5913697	0					
ANR	5913807	CallExpression	grub_iswordseparator ( * haystack )		5913697	1					
ANR	5913808	Callee	grub_iswordseparator		5913697	0					
ANR	5913809	Identifier	grub_iswordseparator		5913697	0					
ANR	5913810	ArgumentList	* haystack		5913697	1					
ANR	5913811	Argument	* haystack		5913697	0					
ANR	5913812	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913813	UnaryOperator	*		5913697	0					
ANR	5913814	Identifier	haystack		5913697	1					
ANR	5913815	ExpressionStatement	haystack ++	378:12:7231:7241	5913697	1	True				
ANR	5913816	PostIncDecOperationExpression	haystack ++		5913697	0					
ANR	5913817	Identifier	haystack		5913697	0					
ANR	5913818	IncDec	++		5913697	1					
ANR	5913819	WhileStatement	while ( grub_iswordseparator ( * haystack ) )		5913697	2					
ANR	5913820	Condition	grub_iswordseparator ( * haystack )	379:17:7260:7291	5913697	0	True				
ANR	5913821	CallExpression	grub_iswordseparator ( * haystack )		5913697	0					
ANR	5913822	Callee	grub_iswordseparator		5913697	0					
ANR	5913823	Identifier	grub_iswordseparator		5913697	0					
ANR	5913824	ArgumentList	* haystack		5913697	1					
ANR	5913825	Argument	* haystack		5913697	0					
ANR	5913826	UnaryOperationExpression	* haystack		5913697	0					
ANR	5913827	UnaryOperator	*		5913697	0					
ANR	5913828	Identifier	haystack		5913697	1					
ANR	5913829	ExpressionStatement	haystack ++	380:12:7306:7316	5913697	1	True				
ANR	5913830	PostIncDecOperationExpression	haystack ++		5913697	0					
ANR	5913831	Identifier	haystack		5913697	0					
ANR	5913832	IncDec	++		5913697	1					
ANR	5913833	ReturnStatement	return 0 ;	384:2:7337:7345	5913697	3	True				
ANR	5913834	PrimaryExpression	0		5913697	0					
ANR	5913835	ReturnType	int		5913697	1					
ANR	5913836	Identifier	grub_strword		5913697	2					
ANR	5913837	ParameterList	"const char * haystack , const char * needle"		5913697	3					
ANR	5913838	Parameter	const char * haystack	351:14:6379:6398	5913697	0	True				
ANR	5913839	ParameterType	const char *		5913697	0					
ANR	5913840	Identifier	haystack		5913697	1					
ANR	5913841	Parameter	const char * needle	351:36:6401:6418	5913697	1	True				
ANR	5913842	ParameterType	const char *		5913697	0					
ANR	5913843	Identifier	needle		5913697	1					
ANR	5913844	CFGEntryNode	ENTRY		5913697		True				
ANR	5913845	CFGExitNode	EXIT		5913697		True				
ANR	5913846	Symbol	haystack		5913697						
ANR	5913847	Symbol	* n_pos		5913697						
ANR	5913848	Symbol	* haystack		5913697						
ANR	5913849	Symbol	n_pos		5913697						
ANR	5913850	Symbol	grub_iswordseparator		5913697						
ANR	5913851	Symbol	needle		5913697						
ANR	5913852	Function	grub_isspace	387:0:7350:7437							
ANR	5913853	FunctionDef	grub_isspace (int c)		5913852	0					
ANR	5913854	CompoundStatement		389:0:7375:7437	5913852	0					
ANR	5913855	ReturnStatement	return ( c == '\\n' || c == '\\r' || c == ' ' || c == '\\t' ) ;	390:2:7379:7435	5913852	0	True				
ANR	5913856	OrExpression	c == '\\n' || c == '\\r' || c == ' ' || c == '\\t'		5913852	0		||			
ANR	5913857	EqualityExpression	c == '\\n'		5913852	0		==			
ANR	5913858	Identifier	c		5913852	0					
ANR	5913859	PrimaryExpression	'\\n'		5913852	1					
ANR	5913860	OrExpression	c == '\\r' || c == ' ' || c == '\\t'		5913852	1		||			
ANR	5913861	EqualityExpression	c == '\\r'		5913852	0		==			
ANR	5913862	Identifier	c		5913852	0					
ANR	5913863	PrimaryExpression	'\\r'		5913852	1					
ANR	5913864	OrExpression	c == ' ' || c == '\\t'		5913852	1		||			
ANR	5913865	EqualityExpression	c == ' '		5913852	0		==			
ANR	5913866	Identifier	c		5913852	0					
ANR	5913867	PrimaryExpression	' '		5913852	1					
ANR	5913868	EqualityExpression	c == '\\t'		5913852	1		==			
ANR	5913869	Identifier	c		5913852	0					
ANR	5913870	PrimaryExpression	'\\t'		5913852	1					
ANR	5913871	ReturnType	int		5913852	1					
ANR	5913872	Identifier	grub_isspace		5913852	2					
ANR	5913873	ParameterList	int c		5913852	3					
ANR	5913874	Parameter	int c	388:14:7368:7372	5913852	0	True				
ANR	5913875	ParameterType	int		5913852	0					
ANR	5913876	Identifier	c		5913852	1					
ANR	5913877	CFGEntryNode	ENTRY		5913852		True				
ANR	5913878	CFGExitNode	EXIT		5913852		True				
ANR	5913879	Symbol	c		5913852						
ANR	5913880	Function	grub_isprint	393:0:7440:7500							
ANR	5913881	FunctionDef	grub_isprint (int c)		5913880	0					
ANR	5913882	CompoundStatement		395:0:7465:7500	5913880	0					
ANR	5913883	ReturnStatement	return ( c >= ' ' && c <= '~' ) ;	396:2:7469:7498	5913880	0	True				
ANR	5913884	AndExpression	c >= ' ' && c <= '~'		5913880	0		&&			
ANR	5913885	RelationalExpression	c >= ' '		5913880	0		>=			
ANR	5913886	Identifier	c		5913880	0					
ANR	5913887	PrimaryExpression	' '		5913880	1					
ANR	5913888	RelationalExpression	c <= '~'		5913880	1		<=			
ANR	5913889	Identifier	c		5913880	0					
ANR	5913890	PrimaryExpression	'~'		5913880	1					
ANR	5913891	ReturnType	int		5913880	1					
ANR	5913892	Identifier	grub_isprint		5913880	2					
ANR	5913893	ParameterList	int c		5913880	3					
ANR	5913894	Parameter	int c	394:14:7458:7462	5913880	0	True				
ANR	5913895	ParameterType	int		5913880	0					
ANR	5913896	Identifier	c		5913880	1					
ANR	5913897	CFGEntryNode	ENTRY		5913880		True				
ANR	5913898	CFGExitNode	EXIT		5913880		True				
ANR	5913899	Symbol	c		5913880						
ANR	5913900	Function	grub_strtoul	400:0:7504:7786							
ANR	5913901	FunctionDef	"grub_strtoul (const char * str , char * * end , int base)"		5913900	0					
ANR	5913902	CompoundStatement		402:0:7571:7786	5913900	0					
ANR	5913903	IdentifierDeclStatement	unsigned long long num ;	403:2:7575:7597	5913900	0	True				
ANR	5913904	IdentifierDecl	num		5913900	0					
ANR	5913905	IdentifierDeclType	unsigned long long		5913900	0					
ANR	5913906	Identifier	num		5913900	1					
ANR	5913907	ExpressionStatement	"num = grub_strtoull ( str , end , base )"	405:2:7602:7638	5913900	1	True				
ANR	5913908	AssignmentExpression	"num = grub_strtoull ( str , end , base )"		5913900	0		=			
ANR	5913909	Identifier	num		5913900	0					
ANR	5913910	CallExpression	"grub_strtoull ( str , end , base )"		5913900	1					
ANR	5913911	Callee	grub_strtoull		5913900	0					
ANR	5913912	Identifier	grub_strtoull		5913900	0					
ANR	5913913	ArgumentList	str		5913900	1					
ANR	5913914	Argument	str		5913900	0					
ANR	5913915	Identifier	str		5913900	0					
ANR	5913916	Argument	end		5913900	1					
ANR	5913917	Identifier	end		5913900	0					
ANR	5913918	Argument	base		5913900	2					
ANR	5913919	Identifier	base		5913900	0					
ANR	5913920	IfStatement	if ( num > ~0UL )		5913900	2					
ANR	5913921	Condition	num > ~0UL	406:6:7646:7655	5913900	0	True				
ANR	5913922	RelationalExpression	num > ~0UL		5913900	0		>			
ANR	5913923	Identifier	num		5913900	0					
ANR	5913924	Identifier	~0UL		5913900	1					
ANR	5913925	CompoundStatement		6:4:90:90	5913900	1					
ANR	5913926	ExpressionStatement	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"	408:6:7670:7728	5913900	0	True				
ANR	5913927	CallExpression	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"		5913900	0					
ANR	5913928	Callee	grub_error		5913900	0					
ANR	5913929	Identifier	grub_error		5913900	0					
ANR	5913930	ArgumentList	GRUB_ERR_OUT_OF_RANGE		5913900	1					
ANR	5913931	Argument	GRUB_ERR_OUT_OF_RANGE		5913900	0					
ANR	5913932	Identifier	GRUB_ERR_OUT_OF_RANGE		5913900	0					
ANR	5913933	Argument	"""overflow is detected"""		5913900	1					
ANR	5913934	PrimaryExpression	"""overflow is detected"""		5913900	0					
ANR	5913935	ReturnStatement	return ~0UL ;	409:6:7736:7747	5913900	1	True				
ANR	5913936	Identifier	~0UL		5913900	0					
ANR	5913937	ReturnStatement	return ( unsigned long ) num ;	412:2:7758:7784	5913900	3	True				
ANR	5913938	CastExpression	( unsigned long ) num		5913900	0					
ANR	5913939	CastTarget	unsigned long		5913900	0					
ANR	5913940	Identifier	num		5913900	1					
ANR	5913941	ReturnType	unsigned long		5913900	1					
ANR	5913942	Identifier	grub_strtoul		5913900	2					
ANR	5913943	ParameterList	"const char * str , char * * end , int base"		5913900	3					
ANR	5913944	Parameter	const char * str	401:14:7532:7546	5913900	0	True				
ANR	5913945	ParameterType	const char *		5913900	0					
ANR	5913946	Identifier	str		5913900	1					
ANR	5913947	Parameter	char * * end	401:31:7549:7558	5913900	1	True				
ANR	5913948	ParameterType	char * *		5913900	0					
ANR	5913949	Identifier	end		5913900	1					
ANR	5913950	Parameter	int base	401:43:7561:7568	5913900	2	True				
ANR	5913951	ParameterType	int		5913900	0					
ANR	5913952	Identifier	base		5913900	1					
ANR	5913953	CFGEntryNode	ENTRY		5913900		True				
ANR	5913954	CFGExitNode	EXIT		5913900		True				
ANR	5913955	Symbol	str		5913900						
ANR	5913956	Symbol	~0UL		5913900						
ANR	5913957	Symbol	grub_strtoull		5913900						
ANR	5913958	Symbol	num		5913900						
ANR	5913959	Symbol	end		5913900						
ANR	5913960	Symbol	GRUB_ERR_OUT_OF_RANGE		5913900						
ANR	5913961	Symbol	base		5913900						
ANR	5913962	Function	grub_strtoull	415:0:7789:8948							
ANR	5913963	FunctionDef	"grub_strtoull (const char * str , char * * end , int base)"		5913962	0					
ANR	5913964	CompoundStatement		417:0:7862:8948	5913962	0					
ANR	5913965	IdentifierDeclStatement	unsigned long long num = 0 ;	418:2:7866:7892	5913962	0	True				
ANR	5913966	IdentifierDecl	num = 0		5913962	0					
ANR	5913967	IdentifierDeclType	unsigned long long		5913962	0					
ANR	5913968	Identifier	num		5913962	1					
ANR	5913969	AssignmentExpression	num = 0		5913962	2		=			
ANR	5913970	Identifier	num		5913962	0					
ANR	5913971	PrimaryExpression	0		5913962	1					
ANR	5913972	IdentifierDeclStatement	int found = 0 ;	419:2:7896:7909	5913962	1	True				
ANR	5913973	IdentifierDecl	found = 0		5913962	0					
ANR	5913974	IdentifierDeclType	int		5913962	0					
ANR	5913975	Identifier	found		5913962	1					
ANR	5913976	AssignmentExpression	found = 0		5913962	2		=			
ANR	5913977	Identifier	found		5913962	0					
ANR	5913978	PrimaryExpression	0		5913962	1					
ANR	5913979	WhileStatement	while ( * str && grub_isspace ( * str ) )		5913962	2					
ANR	5913980	Condition	* str && grub_isspace ( * str )	422:9:7949:7975	5913962	0	True				
ANR	5913981	AndExpression	* str && grub_isspace ( * str )		5913962	0		&&			
ANR	5913982	UnaryOperationExpression	* str		5913962	0					
ANR	5913983	UnaryOperator	*		5913962	0					
ANR	5913984	Identifier	str		5913962	1					
ANR	5913985	CallExpression	grub_isspace ( * str )		5913962	1					
ANR	5913986	Callee	grub_isspace		5913962	0					
ANR	5913987	Identifier	grub_isspace		5913962	0					
ANR	5913988	ArgumentList	* str		5913962	1					
ANR	5913989	Argument	* str		5913962	0					
ANR	5913990	UnaryOperationExpression	* str		5913962	0					
ANR	5913991	UnaryOperator	*		5913962	0					
ANR	5913992	Identifier	str		5913962	1					
ANR	5913993	ExpressionStatement	str ++	423:4:7982:7987	5913962	1	True				
ANR	5913994	PostIncDecOperationExpression	str ++		5913962	0					
ANR	5913995	Identifier	str		5913962	0					
ANR	5913996	IncDec	++		5913962	1					
ANR	5913997	IfStatement	if ( str [ 0 ] == '0' )		5913962	3					
ANR	5913998	Condition	str [ 0 ] == '0'	427:6:8098:8110	5913962	0	True				
ANR	5913999	EqualityExpression	str [ 0 ] == '0'		5913962	0		==			
ANR	5914000	ArrayIndexing	str [ 0 ]		5913962	0					
ANR	5914001	Identifier	str		5913962	0					
ANR	5914002	PrimaryExpression	0		5913962	1					
ANR	5914003	PrimaryExpression	'0'		5913962	1					
ANR	5914004	CompoundStatement		12:4:254:254	5913962	1					
ANR	5914005	IfStatement	if ( str [ 1 ] == 'x' )		5913962	0					
ANR	5914006	Condition	str [ 1 ] == 'x'	429:10:8129:8141	5913962	0	True				
ANR	5914007	EqualityExpression	str [ 1 ] == 'x'		5913962	0		==			
ANR	5914008	ArrayIndexing	str [ 1 ]		5913962	0					
ANR	5914009	Identifier	str		5913962	0					
ANR	5914010	PrimaryExpression	1		5913962	1					
ANR	5914011	PrimaryExpression	'x'		5913962	1					
ANR	5914012	CompoundStatement		14:1:282:282	5913962	1					
ANR	5914013	IfStatement	if ( base == 0 || base == 16 )		5913962	0					
ANR	5914014	Condition	base == 0 || base == 16	431:7:8154:8176	5913962	0	True				
ANR	5914015	OrExpression	base == 0 || base == 16		5913962	0		||			
ANR	5914016	EqualityExpression	base == 0		5913962	0		==			
ANR	5914017	Identifier	base		5913962	0					
ANR	5914018	PrimaryExpression	0		5913962	1					
ANR	5914019	EqualityExpression	base == 16		5913962	1		==			
ANR	5914020	Identifier	base		5913962	0					
ANR	5914021	PrimaryExpression	16		5913962	1					
ANR	5914022	CompoundStatement		16:5:321:321	5913962	1					
ANR	5914023	ExpressionStatement	base = 16	433:7:8193:8202	5913962	0	True				
ANR	5914024	AssignmentExpression	base = 16		5913962	0		=			
ANR	5914025	Identifier	base		5913962	0					
ANR	5914026	PrimaryExpression	16		5913962	1					
ANR	5914027	ExpressionStatement	str += 2	434:7:8211:8219	5913962	1	True				
ANR	5914028	AssignmentExpression	str += 2		5913962	0		+=			
ANR	5914029	Identifier	str		5913962	0					
ANR	5914030	PrimaryExpression	2		5913962	1					
ANR	5914031	ElseStatement	else		5913962	0					
ANR	5914032	IfStatement	if ( base == 0 && str [ 1 ] >= '0' && str [ 1 ] <= '7' )		5913962	0					
ANR	5914033	Condition	base == 0 && str [ 1 ] >= '0' && str [ 1 ] <= '7'	437:15:8246:8288	5913962	0	True				
ANR	5914034	AndExpression	base == 0 && str [ 1 ] >= '0' && str [ 1 ] <= '7'		5913962	0		&&			
ANR	5914035	EqualityExpression	base == 0		5913962	0		==			
ANR	5914036	Identifier	base		5913962	0					
ANR	5914037	PrimaryExpression	0		5913962	1					
ANR	5914038	AndExpression	str [ 1 ] >= '0' && str [ 1 ] <= '7'		5913962	1		&&			
ANR	5914039	RelationalExpression	str [ 1 ] >= '0'		5913962	0		>=			
ANR	5914040	ArrayIndexing	str [ 1 ]		5913962	0					
ANR	5914041	Identifier	str		5913962	0					
ANR	5914042	PrimaryExpression	1		5913962	1					
ANR	5914043	PrimaryExpression	'0'		5913962	1					
ANR	5914044	RelationalExpression	str [ 1 ] <= '7'		5913962	1		<=			
ANR	5914045	ArrayIndexing	str [ 1 ]		5913962	0					
ANR	5914046	Identifier	str		5913962	0					
ANR	5914047	PrimaryExpression	1		5913962	1					
ANR	5914048	PrimaryExpression	'7'		5913962	1					
ANR	5914049	ExpressionStatement	base = 8	438:1:8292:8300	5913962	1	True				
ANR	5914050	AssignmentExpression	base = 8		5913962	0		=			
ANR	5914051	Identifier	base		5913962	0					
ANR	5914052	PrimaryExpression	8		5913962	1					
ANR	5914053	IfStatement	if ( base == 0 )		5913962	4					
ANR	5914054	Condition	base == 0	441:6:8315:8323	5913962	0	True				
ANR	5914055	EqualityExpression	base == 0		5913962	0		==			
ANR	5914056	Identifier	base		5913962	0					
ANR	5914057	PrimaryExpression	0		5913962	1					
ANR	5914058	ExpressionStatement	base = 10	442:4:8330:8339	5913962	1	True				
ANR	5914059	AssignmentExpression	base = 10		5913962	0		=			
ANR	5914060	Identifier	base		5913962	0					
ANR	5914061	PrimaryExpression	10		5913962	1					
ANR	5914062	WhileStatement	while ( * str )		5913962	5					
ANR	5914063	Condition	* str	444:9:8351:8354	5913962	0	True				
ANR	5914064	UnaryOperationExpression	* str		5913962	0					
ANR	5914065	UnaryOperator	*		5913962	0					
ANR	5914066	Identifier	str		5913962	1					
ANR	5914067	CompoundStatement		30:6:506:525	5913962	1					
ANR	5914068	IdentifierDeclStatement	unsigned long digit ;	446:6:8369:8388	5913962	0	True				
ANR	5914069	IdentifierDecl	digit		5913962	0					
ANR	5914070	IdentifierDeclType	unsigned long		5913962	0					
ANR	5914071	Identifier	digit		5913962	1					
ANR	5914072	ExpressionStatement	digit = grub_tolower ( * str ) - '0'	448:6:8397:8430	5913962	1	True				
ANR	5914073	AssignmentExpression	digit = grub_tolower ( * str ) - '0'		5913962	0		=			
ANR	5914074	Identifier	digit		5913962	0					
ANR	5914075	AdditiveExpression	grub_tolower ( * str ) - '0'		5913962	1		-			
ANR	5914076	CallExpression	grub_tolower ( * str )		5913962	0					
ANR	5914077	Callee	grub_tolower		5913962	0					
ANR	5914078	Identifier	grub_tolower		5913962	0					
ANR	5914079	ArgumentList	* str		5913962	1					
ANR	5914080	Argument	* str		5913962	0					
ANR	5914081	UnaryOperationExpression	* str		5913962	0					
ANR	5914082	UnaryOperator	*		5913962	0					
ANR	5914083	Identifier	str		5913962	1					
ANR	5914084	PrimaryExpression	'0'		5913962	1					
ANR	5914085	IfStatement	if ( digit > 9 )		5913962	2					
ANR	5914086	Condition	digit > 9	449:10:8442:8450	5913962	0	True				
ANR	5914087	RelationalExpression	digit > 9		5913962	0		>			
ANR	5914088	Identifier	digit		5913962	0					
ANR	5914089	PrimaryExpression	9		5913962	1					
ANR	5914090	CompoundStatement		34:1:591:591	5913962	1					
ANR	5914091	ExpressionStatement	digit += '0' - 'a' + 10	451:3:8459:8482	5913962	0	True				
ANR	5914092	AssignmentExpression	digit += '0' - 'a' + 10		5913962	0		+=			
ANR	5914093	Identifier	digit		5913962	0					
ANR	5914094	AdditiveExpression	'0' - 'a' + 10		5913962	1		-			
ANR	5914095	PrimaryExpression	'0'		5913962	0					
ANR	5914096	AdditiveExpression	'a' + 10		5913962	1		+			
ANR	5914097	PrimaryExpression	'a'		5913962	0					
ANR	5914098	PrimaryExpression	10		5913962	1					
ANR	5914099	IfStatement	if ( digit >= ( unsigned long ) base )		5913962	1					
ANR	5914100	Condition	digit >= ( unsigned long ) base	452:7:8491:8519	5913962	0	True				
ANR	5914101	RelationalExpression	digit >= ( unsigned long ) base		5913962	0		>=			
ANR	5914102	Identifier	digit		5913962	0					
ANR	5914103	CastExpression	( unsigned long ) base		5913962	1					
ANR	5914104	CastTarget	unsigned long		5913962	0					
ANR	5914105	Identifier	base		5913962	1					
ANR	5914106	BreakStatement	break ;	453:5:8527:8532	5913962	1	True				
ANR	5914107	ExpressionStatement	found = 1	456:6:8544:8553	5913962	3	True				
ANR	5914108	AssignmentExpression	found = 1		5913962	0		=			
ANR	5914109	Identifier	found		5913962	0					
ANR	5914110	PrimaryExpression	1		5913962	1					
ANR	5914111	IfStatement	"if ( num > grub_divmod64 ( ~0ULL - digit , base , 0 ) )"		5913962	4					
ANR	5914112	Condition	"num > grub_divmod64 ( ~0ULL - digit , base , 0 )"	459:10:8605:8648	5913962	0	True				
ANR	5914113	RelationalExpression	"num > grub_divmod64 ( ~0ULL - digit , base , 0 )"		5913962	0		>			
ANR	5914114	Identifier	num		5913962	0					
ANR	5914115	CallExpression	"grub_divmod64 ( ~0ULL - digit , base , 0 )"		5913962	1					
ANR	5914116	Callee	grub_divmod64		5913962	0					
ANR	5914117	Identifier	grub_divmod64		5913962	0					
ANR	5914118	ArgumentList	~0ULL - digit		5913962	1					
ANR	5914119	Argument	~0ULL - digit		5913962	0					
ANR	5914120	AdditiveExpression	~0ULL - digit		5913962	0		-			
ANR	5914121	Identifier	~0ULL		5913962	0					
ANR	5914122	Identifier	digit		5913962	1					
ANR	5914123	Argument	base		5913962	1					
ANR	5914124	Identifier	base		5913962	0					
ANR	5914125	Argument	0		5913962	2					
ANR	5914126	PrimaryExpression	0		5913962	0					
ANR	5914127	CompoundStatement		44:1:789:789	5913962	1					
ANR	5914128	ExpressionStatement	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"	461:3:8657:8715	5913962	0	True				
ANR	5914129	CallExpression	"grub_error ( GRUB_ERR_OUT_OF_RANGE , ""overflow is detected"" )"		5913962	0					
ANR	5914130	Callee	grub_error		5913962	0					
ANR	5914131	Identifier	grub_error		5913962	0					
ANR	5914132	ArgumentList	GRUB_ERR_OUT_OF_RANGE		5913962	1					
ANR	5914133	Argument	GRUB_ERR_OUT_OF_RANGE		5913962	0					
ANR	5914134	Identifier	GRUB_ERR_OUT_OF_RANGE		5913962	0					
ANR	5914135	Argument	"""overflow is detected"""		5913962	1					
ANR	5914136	PrimaryExpression	"""overflow is detected"""		5913962	0					
ANR	5914137	ReturnStatement	return ~0ULL ;	462:3:8720:8732	5913962	1	True				
ANR	5914138	Identifier	~0ULL		5913962	0					
ANR	5914139	ExpressionStatement	num = num * base + digit	465:6:8744:8768	5913962	5	True				
ANR	5914140	AssignmentExpression	num = num * base + digit		5913962	0		=			
ANR	5914141	Identifier	num		5913962	0					
ANR	5914142	AdditiveExpression	num * base + digit		5913962	1		+			
ANR	5914143	MultiplicativeExpression	num * base		5913962	0		*			
ANR	5914144	Identifier	num		5913962	0					
ANR	5914145	Identifier	base		5913962	1					
ANR	5914146	Identifier	digit		5913962	1					
ANR	5914147	ExpressionStatement	str ++	466:6:8776:8781	5913962	6	True				
ANR	5914148	PostIncDecOperationExpression	str ++		5913962	0					
ANR	5914149	Identifier	str		5913962	0					
ANR	5914150	IncDec	++		5913962	1					
ANR	5914151	IfStatement	if ( ! found )		5913962	6					
ANR	5914152	Condition	! found	469:6:8796:8802	5913962	0	True				
ANR	5914153	UnaryOperationExpression	! found		5913962	0					
ANR	5914154	UnaryOperator	!		5913962	0					
ANR	5914155	Identifier	found		5913962	1					
ANR	5914156	CompoundStatement		54:4:946:946	5913962	1					
ANR	5914157	ExpressionStatement	"grub_error ( GRUB_ERR_BAD_NUMBER , ""unrecognized number"" )"	471:6:8817:8872	5913962	0	True				
ANR	5914158	CallExpression	"grub_error ( GRUB_ERR_BAD_NUMBER , ""unrecognized number"" )"		5913962	0					
ANR	5914159	Callee	grub_error		5913962	0					
ANR	5914160	Identifier	grub_error		5913962	0					
ANR	5914161	ArgumentList	GRUB_ERR_BAD_NUMBER		5913962	1					
ANR	5914162	Argument	GRUB_ERR_BAD_NUMBER		5913962	0					
ANR	5914163	Identifier	GRUB_ERR_BAD_NUMBER		5913962	0					
ANR	5914164	Argument	"""unrecognized number"""		5913962	1					
ANR	5914165	PrimaryExpression	"""unrecognized number"""		5913962	0					
ANR	5914166	ReturnStatement	return 0 ;	472:6:8880:8888	5913962	1	True				
ANR	5914167	PrimaryExpression	0		5913962	0					
ANR	5914168	IfStatement	if ( end )		5913962	7					
ANR	5914169	Condition	end	475:6:8903:8905	5913962	0	True				
ANR	5914170	Identifier	end		5913962	0					
ANR	5914171	ExpressionStatement	* end = ( char * ) str	476:4:8912:8931	5913962	1	True				
ANR	5914172	AssignmentExpression	* end = ( char * ) str		5913962	0		=			
ANR	5914173	UnaryOperationExpression	* end		5913962	0					
ANR	5914174	UnaryOperator	*		5913962	0					
ANR	5914175	Identifier	end		5913962	1					
ANR	5914176	CastExpression	( char * ) str		5913962	1					
ANR	5914177	CastTarget	char *		5913962	0					
ANR	5914178	Identifier	str		5913962	1					
ANR	5914179	ReturnStatement	return num ;	478:2:8936:8946	5913962	8	True				
ANR	5914180	Identifier	num		5913962	0					
ANR	5914181	ReturnType	unsigned long long		5913962	1					
ANR	5914182	Identifier	grub_strtoull		5913962	2					
ANR	5914183	ParameterList	"const char * str , char * * end , int base"		5913962	3					
ANR	5914184	Parameter	const char * str	416:15:7823:7837	5913962	0	True				
ANR	5914185	ParameterType	const char *		5913962	0					
ANR	5914186	Identifier	str		5913962	1					
ANR	5914187	Parameter	char * * end	416:32:7840:7849	5913962	1	True				
ANR	5914188	ParameterType	char * *		5913962	0					
ANR	5914189	Identifier	end		5913962	1					
ANR	5914190	Parameter	int base	416:44:7852:7859	5913962	2	True				
ANR	5914191	ParameterType	int		5913962	0					
ANR	5914192	Identifier	base		5913962	1					
ANR	5914193	CFGEntryNode	ENTRY		5913962		True				
ANR	5914194	CFGExitNode	EXIT		5913962		True				
ANR	5914195	Symbol	~0ULL		5913962						
ANR	5914196	Symbol	num		5913962						
ANR	5914197	Symbol	GRUB_ERR_OUT_OF_RANGE		5913962						
ANR	5914198	Symbol	grub_isspace		5913962						
ANR	5914199	Symbol	GRUB_ERR_BAD_NUMBER		5913962						
ANR	5914200	Symbol	str		5913962						
ANR	5914201	Symbol	found		5913962						
ANR	5914202	Symbol	grub_tolower		5913962						
ANR	5914203	Symbol	grub_divmod64		5913962						
ANR	5914204	Symbol	end		5913962						
ANR	5914205	Symbol	* end		5913962						
ANR	5914206	Symbol	* str		5913962						
ANR	5914207	Symbol	base		5913962						
ANR	5914208	Symbol	digit		5913962						
ANR	5914209	Function	grub_strdup	481:0:8951:9142							
ANR	5914210	FunctionDef	grub_strdup (const char * s)		5914209	0					
ANR	5914211	CompoundStatement		483:0:8986:9142	5914209	0					
ANR	5914212	IdentifierDeclStatement	grub_size_t len ;	484:2:8990:9005	5914209	0	True				
ANR	5914213	IdentifierDecl	len		5914209	0					
ANR	5914214	IdentifierDeclType	grub_size_t		5914209	0					
ANR	5914215	Identifier	len		5914209	1					
ANR	5914216	IdentifierDeclStatement	char * p ;	485:2:9009:9016	5914209	1	True				
ANR	5914217	IdentifierDecl	* p		5914209	0					
ANR	5914218	IdentifierDeclType	char *		5914209	0					
ANR	5914219	Identifier	p		5914209	1					
ANR	5914220	ExpressionStatement	len = grub_strlen ( s ) + 1	487:2:9021:9046	5914209	2	True				
ANR	5914221	AssignmentExpression	len = grub_strlen ( s ) + 1		5914209	0		=			
ANR	5914222	Identifier	len		5914209	0					
ANR	5914223	AdditiveExpression	grub_strlen ( s ) + 1		5914209	1		+			
ANR	5914224	CallExpression	grub_strlen ( s )		5914209	0					
ANR	5914225	Callee	grub_strlen		5914209	0					
ANR	5914226	Identifier	grub_strlen		5914209	0					
ANR	5914227	ArgumentList	s		5914209	1					
ANR	5914228	Argument	s		5914209	0					
ANR	5914229	Identifier	s		5914209	0					
ANR	5914230	PrimaryExpression	1		5914209	1					
ANR	5914231	ExpressionStatement	p = ( char * ) grub_malloc ( len )	488:2:9050:9080	5914209	3	True				
ANR	5914232	AssignmentExpression	p = ( char * ) grub_malloc ( len )		5914209	0		=			
ANR	5914233	Identifier	p		5914209	0					
ANR	5914234	CastExpression	( char * ) grub_malloc ( len )		5914209	1					
ANR	5914235	CastTarget	char *		5914209	0					
ANR	5914236	CallExpression	grub_malloc ( len )		5914209	1					
ANR	5914237	Callee	grub_malloc		5914209	0					
ANR	5914238	Identifier	grub_malloc		5914209	0					
ANR	5914239	ArgumentList	len		5914209	1					
ANR	5914240	Argument	len		5914209	0					
ANR	5914241	Identifier	len		5914209	0					
ANR	5914242	IfStatement	if ( ! p )		5914209	4					
ANR	5914243	Condition	! p	489:6:9088:9090	5914209	0	True				
ANR	5914244	UnaryOperationExpression	! p		5914209	0					
ANR	5914245	UnaryOperator	!		5914209	0					
ANR	5914246	Identifier	p		5914209	1					
ANR	5914247	ReturnStatement	return 0 ;	490:4:9097:9105	5914209	1	True				
ANR	5914248	PrimaryExpression	0		5914209	0					
ANR	5914249	ReturnStatement	"return grub_memcpy ( p , s , len ) ;"	492:2:9110:9140	5914209	5	True				
ANR	5914250	CallExpression	"grub_memcpy ( p , s , len )"		5914209	0					
ANR	5914251	Callee	grub_memcpy		5914209	0					
ANR	5914252	Identifier	grub_memcpy		5914209	0					
ANR	5914253	ArgumentList	p		5914209	1					
ANR	5914254	Argument	p		5914209	0					
ANR	5914255	Identifier	p		5914209	0					
ANR	5914256	Argument	s		5914209	1					
ANR	5914257	Identifier	s		5914209	0					
ANR	5914258	Argument	len		5914209	2					
ANR	5914259	Identifier	len		5914209	0					
ANR	5914260	ReturnType	char *		5914209	1					
ANR	5914261	Identifier	grub_strdup		5914209	2					
ANR	5914262	ParameterList	const char * s		5914209	3					
ANR	5914263	Parameter	const char * s	482:13:8971:8983	5914209	0	True				
ANR	5914264	ParameterType	const char *		5914209	0					
ANR	5914265	Identifier	s		5914209	1					
ANR	5914266	CFGEntryNode	ENTRY		5914209		True				
ANR	5914267	CFGExitNode	EXIT		5914209		True				
ANR	5914268	Symbol	p		5914209						
ANR	5914269	Symbol	s		5914209						
ANR	5914270	Symbol	grub_malloc		5914209						
ANR	5914271	Symbol	len		5914209						
ANR	5914272	Symbol	grub_memcpy		5914209						
ANR	5914273	Symbol	grub_strlen		5914209						
ANR	5914274	Function	grub_strndup	495:0:9145:9402							
ANR	5914275	FunctionDef	"grub_strndup (const char * s , grub_size_t n)"		5914274	0					
ANR	5914276	CompoundStatement		497:0:9196:9402	5914274	0					
ANR	5914277	IdentifierDeclStatement	grub_size_t len ;	498:2:9200:9215	5914274	0	True				
ANR	5914278	IdentifierDecl	len		5914274	0					
ANR	5914279	IdentifierDeclType	grub_size_t		5914274	0					
ANR	5914280	Identifier	len		5914274	1					
ANR	5914281	IdentifierDeclStatement	char * p ;	499:2:9219:9226	5914274	1	True				
ANR	5914282	IdentifierDecl	* p		5914274	0					
ANR	5914283	IdentifierDeclType	char *		5914274	0					
ANR	5914284	Identifier	p		5914274	1					
ANR	5914285	ExpressionStatement	len = grub_strlen ( s )	501:2:9231:9252	5914274	2	True				
ANR	5914286	AssignmentExpression	len = grub_strlen ( s )		5914274	0		=			
ANR	5914287	Identifier	len		5914274	0					
ANR	5914288	CallExpression	grub_strlen ( s )		5914274	1					
ANR	5914289	Callee	grub_strlen		5914274	0					
ANR	5914290	Identifier	grub_strlen		5914274	0					
ANR	5914291	ArgumentList	s		5914274	1					
ANR	5914292	Argument	s		5914274	0					
ANR	5914293	Identifier	s		5914274	0					
ANR	5914294	IfStatement	if ( len > n )		5914274	3					
ANR	5914295	Condition	len > n	502:6:9260:9266	5914274	0	True				
ANR	5914296	RelationalExpression	len > n		5914274	0		>			
ANR	5914297	Identifier	len		5914274	0					
ANR	5914298	Identifier	n		5914274	1					
ANR	5914299	ExpressionStatement	len = n	503:4:9273:9280	5914274	1	True				
ANR	5914300	AssignmentExpression	len = n		5914274	0		=			
ANR	5914301	Identifier	len		5914274	0					
ANR	5914302	Identifier	n		5914274	1					
ANR	5914303	ExpressionStatement	p = ( char * ) grub_malloc ( len + 1 )	504:2:9284:9318	5914274	4	True				
ANR	5914304	AssignmentExpression	p = ( char * ) grub_malloc ( len + 1 )		5914274	0		=			
ANR	5914305	Identifier	p		5914274	0					
ANR	5914306	CastExpression	( char * ) grub_malloc ( len + 1 )		5914274	1					
ANR	5914307	CastTarget	char *		5914274	0					
ANR	5914308	CallExpression	grub_malloc ( len + 1 )		5914274	1					
ANR	5914309	Callee	grub_malloc		5914274	0					
ANR	5914310	Identifier	grub_malloc		5914274	0					
ANR	5914311	ArgumentList	len + 1		5914274	1					
ANR	5914312	Argument	len + 1		5914274	0					
ANR	5914313	AdditiveExpression	len + 1		5914274	0		+			
ANR	5914314	Identifier	len		5914274	0					
ANR	5914315	PrimaryExpression	1		5914274	1					
ANR	5914316	IfStatement	if ( ! p )		5914274	5					
ANR	5914317	Condition	! p	505:6:9326:9328	5914274	0	True				
ANR	5914318	UnaryOperationExpression	! p		5914274	0					
ANR	5914319	UnaryOperator	!		5914274	0					
ANR	5914320	Identifier	p		5914274	1					
ANR	5914321	ReturnStatement	return 0 ;	506:4:9335:9343	5914274	1	True				
ANR	5914322	PrimaryExpression	0		5914274	0					
ANR	5914323	ExpressionStatement	"grub_memcpy ( p , s , len )"	508:2:9348:9371	5914274	6	True				
ANR	5914324	CallExpression	"grub_memcpy ( p , s , len )"		5914274	0					
ANR	5914325	Callee	grub_memcpy		5914274	0					
ANR	5914326	Identifier	grub_memcpy		5914274	0					
ANR	5914327	ArgumentList	p		5914274	1					
ANR	5914328	Argument	p		5914274	0					
ANR	5914329	Identifier	p		5914274	0					
ANR	5914330	Argument	s		5914274	1					
ANR	5914331	Identifier	s		5914274	0					
ANR	5914332	Argument	len		5914274	2					
ANR	5914333	Identifier	len		5914274	0					
ANR	5914334	ExpressionStatement	p [ len ] = '\\0'	509:2:9375:9388	5914274	7	True				
ANR	5914335	AssignmentExpression	p [ len ] = '\\0'		5914274	0		=			
ANR	5914336	ArrayIndexing	p [ len ]		5914274	0					
ANR	5914337	Identifier	p		5914274	0					
ANR	5914338	Identifier	len		5914274	1					
ANR	5914339	PrimaryExpression	'\\0'		5914274	1					
ANR	5914340	ReturnStatement	return p ;	510:2:9392:9400	5914274	8	True				
ANR	5914341	Identifier	p		5914274	0					
ANR	5914342	ReturnType	char *		5914274	1					
ANR	5914343	Identifier	grub_strndup		5914274	2					
ANR	5914344	ParameterList	"const char * s , grub_size_t n"		5914274	3					
ANR	5914345	Parameter	const char * s	496:14:9166:9178	5914274	0	True				
ANR	5914346	ParameterType	const char *		5914274	0					
ANR	5914347	Identifier	s		5914274	1					
ANR	5914348	Parameter	grub_size_t n	496:29:9181:9193	5914274	1	True				
ANR	5914349	ParameterType	grub_size_t		5914274	0					
ANR	5914350	Identifier	n		5914274	1					
ANR	5914351	CFGEntryNode	ENTRY		5914274		True				
ANR	5914352	CFGExitNode	EXIT		5914274		True				
ANR	5914353	Symbol	p		5914274						
ANR	5914354	Symbol	s		5914274						
ANR	5914355	Symbol	grub_malloc		5914274						
ANR	5914356	Symbol	len		5914274						
ANR	5914357	Symbol	* p		5914274						
ANR	5914358	Symbol	grub_strlen		5914274						
ANR	5914359	Symbol	n		5914274						
ANR	5914360	Symbol	* len		5914274						
ANR	5914361	Function	grub_memset	513:0:9405:9558							
ANR	5914362	FunctionDef	"grub_memset (void * s , int c , grub_size_t n)"		5914361	0					
ANR	5914363	CompoundStatement		515:0:9456:9558	5914361	0					
ANR	5914364	IdentifierDeclStatement	unsigned char * p = ( unsigned char * ) s ;	516:2:9460:9498	5914361	0	True				
ANR	5914365	IdentifierDecl	* p = ( unsigned char * ) s		5914361	0					
ANR	5914366	IdentifierDeclType	unsigned char *		5914361	0					
ANR	5914367	Identifier	p		5914361	1					
ANR	5914368	AssignmentExpression	* p = ( unsigned char * ) s		5914361	2		=			
ANR	5914369	Identifier	p		5914361	0					
ANR	5914370	CastExpression	( unsigned char * ) s		5914361	1					
ANR	5914371	CastTarget	unsigned char *		5914361	0					
ANR	5914372	Identifier	s		5914361	1					
ANR	5914373	WhileStatement	while ( n -- )		5914361	1					
ANR	5914374	Condition	n --	518:9:9510:9512	5914361	0	True				
ANR	5914375	PostIncDecOperationExpression	n --		5914361	0					
ANR	5914376	Identifier	n		5914361	0					
ANR	5914377	IncDec	--		5914361	1					
ANR	5914378	ExpressionStatement	* p ++ = ( unsigned char ) c	519:4:9519:9543	5914361	1	True				
ANR	5914379	AssignmentExpression	* p ++ = ( unsigned char ) c		5914361	0		=			
ANR	5914380	UnaryOperationExpression	* p ++		5914361	0					
ANR	5914381	UnaryOperator	*		5914361	0					
ANR	5914382	PostIncDecOperationExpression	p ++		5914361	1					
ANR	5914383	Identifier	p		5914361	0					
ANR	5914384	IncDec	++		5914361	1					
ANR	5914385	CastExpression	( unsigned char ) c		5914361	1					
ANR	5914386	CastTarget	unsigned char		5914361	0					
ANR	5914387	Identifier	c		5914361	1					
ANR	5914388	ReturnStatement	return s ;	521:2:9548:9556	5914361	2	True				
ANR	5914389	Identifier	s		5914361	0					
ANR	5914390	ReturnType	void *		5914361	1					
ANR	5914391	Identifier	grub_memset		5914361	2					
ANR	5914392	ParameterList	"void * s , int c , grub_size_t n"		5914361	3					
ANR	5914393	Parameter	void * s	514:13:9425:9431	5914361	0	True				
ANR	5914394	ParameterType	void *		5914361	0					
ANR	5914395	Identifier	s		5914361	1					
ANR	5914396	Parameter	int c	514:22:9434:9438	5914361	1	True				
ANR	5914397	ParameterType	int		5914361	0					
ANR	5914398	Identifier	c		5914361	1					
ANR	5914399	Parameter	grub_size_t n	514:29:9441:9453	5914361	2	True				
ANR	5914400	ParameterType	grub_size_t		5914361	0					
ANR	5914401	Identifier	n		5914361	1					
ANR	5914402	CFGEntryNode	ENTRY		5914361		True				
ANR	5914403	CFGExitNode	EXIT		5914361		True				
ANR	5914404	Symbol	p		5914361						
ANR	5914405	Symbol	s		5914361						
ANR	5914406	Symbol	c		5914361						
ANR	5914407	Symbol	* p ++		5914361						
ANR	5914408	Symbol	n		5914361						
ANR	5914409	Function	grub_strlen	524:0:9561:9664							
ANR	5914410	FunctionDef	grub_strlen (const char * s)		5914409	0					
ANR	5914411	CompoundStatement		526:0:9601:9664	5914409	0					
ANR	5914412	IdentifierDeclStatement	const char * p = s ;	527:2:9605:9622	5914409	0	True				
ANR	5914413	IdentifierDecl	* p = s		5914409	0					
ANR	5914414	IdentifierDeclType	const char *		5914409	0					
ANR	5914415	Identifier	p		5914409	1					
ANR	5914416	AssignmentExpression	* p = s		5914409	2		=			
ANR	5914417	Identifier	s		5914409	0					
ANR	5914418	Identifier	s		5914409	1					
ANR	5914419	WhileStatement	while ( * p )		5914409	1					
ANR	5914420	Condition	* p	529:9:9634:9635	5914409	0	True				
ANR	5914421	UnaryOperationExpression	* p		5914409	0					
ANR	5914422	UnaryOperator	*		5914409	0					
ANR	5914423	Identifier	p		5914409	1					
ANR	5914424	ExpressionStatement	p ++	530:4:9642:9645	5914409	1	True				
ANR	5914425	PostIncDecOperationExpression	p ++		5914409	0					
ANR	5914426	Identifier	p		5914409	0					
ANR	5914427	IncDec	++		5914409	1					
ANR	5914428	ReturnStatement	return p - s ;	532:2:9650:9662	5914409	2	True				
ANR	5914429	AdditiveExpression	p - s		5914409	0		-			
ANR	5914430	Identifier	p		5914409	0					
ANR	5914431	Identifier	s		5914409	1					
ANR	5914432	ReturnType	grub_size_t		5914409	1					
ANR	5914433	Identifier	grub_strlen		5914409	2					
ANR	5914434	ParameterList	const char * s		5914409	3					
ANR	5914435	Parameter	const char * s	525:13:9586:9598	5914409	0	True				
ANR	5914436	ParameterType	const char *		5914409	0					
ANR	5914437	Identifier	s		5914409	1					
ANR	5914438	CFGEntryNode	ENTRY		5914409		True				
ANR	5914439	CFGExitNode	EXIT		5914409		True				
ANR	5914440	Symbol	p		5914409						
ANR	5914441	Symbol	s		5914409						
ANR	5914442	Symbol	* p		5914409						
ANR	5914443	Function	grub_reverse	535:0:9667:9835							
ANR	5914444	FunctionDef	grub_reverse (char * str)		5914443	0					
ANR	5914445	CompoundStatement		536:25:9711:9835	5914443	0					
ANR	5914446	IdentifierDeclStatement	"char tmp , * p = str + grub_strlen ( str ) - 1 ;"	537:1:9714:9756	5914443	0	True				
ANR	5914447	IdentifierDecl	tmp		5914443	0					
ANR	5914448	IdentifierDeclType	char		5914443	0					
ANR	5914449	Identifier	tmp		5914443	1					
ANR	5914450	IdentifierDecl	* p = str + grub_strlen ( str ) - 1		5914443	1					
ANR	5914451	IdentifierDeclType	char *		5914443	0					
ANR	5914452	Identifier	p		5914443	1					
ANR	5914453	AssignmentExpression	* p = str + grub_strlen ( str ) - 1		5914443	2		=			
ANR	5914454	Identifier	p		5914443	0					
ANR	5914455	AdditiveExpression	str + grub_strlen ( str ) - 1		5914443	1		+			
ANR	5914456	Identifier	str		5914443	0					
ANR	5914457	AdditiveExpression	grub_strlen ( str ) - 1		5914443	1		-			
ANR	5914458	CallExpression	grub_strlen ( str )		5914443	0					
ANR	5914459	Callee	grub_strlen		5914443	0					
ANR	5914460	Identifier	grub_strlen		5914443	0					
ANR	5914461	ArgumentList	str		5914443	1					
ANR	5914462	Argument	str		5914443	0					
ANR	5914463	Identifier	str		5914443	0					
ANR	5914464	PrimaryExpression	1		5914443	1					
ANR	5914465	WhileStatement	while ( str < p )		5914443	1					
ANR	5914466	Condition	str < p	538:8:9766:9772	5914443	0	True				
ANR	5914467	RelationalExpression	str < p		5914443	0		<			
ANR	5914468	Identifier	str		5914443	0					
ANR	5914469	Identifier	p		5914443	1					
ANR	5914470	CompoundStatement		3:17:63:63	5914443	1					
ANR	5914471	ExpressionStatement	tmp = * str	539:2:9779:9789	5914443	0	True				
ANR	5914472	AssignmentExpression	tmp = * str		5914443	0		=			
ANR	5914473	Identifier	tmp		5914443	0					
ANR	5914474	UnaryOperationExpression	* str		5914443	1					
ANR	5914475	UnaryOperator	*		5914443	0					
ANR	5914476	Identifier	str		5914443	1					
ANR	5914477	ExpressionStatement	* str = * p	540:2:9793:9802	5914443	1	True				
ANR	5914478	AssignmentExpression	* str = * p		5914443	0		=			
ANR	5914479	UnaryOperationExpression	* str		5914443	0					
ANR	5914480	UnaryOperator	*		5914443	0					
ANR	5914481	Identifier	str		5914443	1					
ANR	5914482	UnaryOperationExpression	* p		5914443	1					
ANR	5914483	UnaryOperator	*		5914443	0					
ANR	5914484	Identifier	p		5914443	1					
ANR	5914485	ExpressionStatement	* p = tmp	541:2:9806:9814	5914443	2	True				
ANR	5914486	AssignmentExpression	* p = tmp		5914443	0		=			
ANR	5914487	UnaryOperationExpression	* p		5914443	0					
ANR	5914488	UnaryOperator	*		5914443	0					
ANR	5914489	Identifier	p		5914443	1					
ANR	5914490	Identifier	tmp		5914443	1					
ANR	5914491	ExpressionStatement	str ++	542:2:9818:9823	5914443	3	True				
ANR	5914492	PostIncDecOperationExpression	str ++		5914443	0					
ANR	5914493	Identifier	str		5914443	0					
ANR	5914494	IncDec	++		5914443	1					
ANR	5914495	ExpressionStatement	p --	543:2:9827:9830	5914443	4	True				
ANR	5914496	PostIncDecOperationExpression	p --		5914443	0					
ANR	5914497	Identifier	p		5914443	0					
ANR	5914498	IncDec	--		5914443	1					
ANR	5914499	ReturnType	static inline void		5914443	1					
ANR	5914500	Identifier	grub_reverse		5914443	2					
ANR	5914501	ParameterList	char * str		5914443	3					
ANR	5914502	Parameter	char * str	536:14:9700:9708	5914443	0	True				
ANR	5914503	ParameterType	char *		5914443	0					
ANR	5914504	Identifier	str		5914443	1					
ANR	5914505	CFGEntryNode	ENTRY		5914443		True				
ANR	5914506	CFGExitNode	EXIT		5914443		True				
ANR	5914507	Symbol	str		5914443						
ANR	5914508	Symbol	p		5914443						
ANR	5914509	Symbol	tmp		5914443						
ANR	5914510	Symbol	* p		5914443						
ANR	5914511	Symbol	* str		5914443						
ANR	5914512	Symbol	grub_strlen		5914443						
ANR	5914513	Function	grub_divmod64	548:0:9912:10688							
ANR	5914514	FunctionDef	"grub_divmod64 (grub_uint64_t n , grub_uint32_t d , grub_uint32_t * r)"		5914513	0					
ANR	5914515	CompoundStatement		550:0:9993:10688	5914513	0					
ANR	5914516	IdentifierDeclStatement	unsigned bits = 64 ;	555:2:10239:10257	5914513	0	True				
ANR	5914517	IdentifierDecl	bits = 64		5914513	0					
ANR	5914518	IdentifierDeclType	unsigned		5914513	0					
ANR	5914519	Identifier	bits		5914513	1					
ANR	5914520	AssignmentExpression	bits = 64		5914513	2		=			
ANR	5914521	Identifier	bits		5914513	0					
ANR	5914522	PrimaryExpression	64		5914513	1					
ANR	5914523	IdentifierDeclStatement	unsigned long long q = 0 ;	556:2:10261:10285	5914513	1	True				
ANR	5914524	IdentifierDecl	q = 0		5914513	0					
ANR	5914525	IdentifierDeclType	unsigned long long		5914513	0					
ANR	5914526	Identifier	q		5914513	1					
ANR	5914527	AssignmentExpression	q = 0		5914513	2		=			
ANR	5914528	Identifier	q		5914513	0					
ANR	5914529	PrimaryExpression	0		5914513	1					
ANR	5914530	IdentifierDeclStatement	unsigned m = 0 ;	557:2:10289:10303	5914513	2	True				
ANR	5914531	IdentifierDecl	m = 0		5914513	0					
ANR	5914532	IdentifierDeclType	unsigned		5914513	0					
ANR	5914533	Identifier	m		5914513	1					
ANR	5914534	AssignmentExpression	m = 0		5914513	2		=			
ANR	5914535	Identifier	m		5914513	0					
ANR	5914536	PrimaryExpression	0		5914513	1					
ANR	5914537	IfStatement	if ( n < 0xffffffff )		5914513	3					
ANR	5914538	Condition	n < 0xffffffff	560:6:10381:10394	5914513	0	True				
ANR	5914539	RelationalExpression	n < 0xffffffff		5914513	0		<			
ANR	5914540	Identifier	n		5914513	0					
ANR	5914541	PrimaryExpression	0xffffffff		5914513	1					
ANR	5914542	CompoundStatement		12:4:407:407	5914513	1					
ANR	5914543	IfStatement	if ( r )		5914513	0					
ANR	5914544	Condition	r	562:10:10413:10413	5914513	0	True				
ANR	5914545	Identifier	r		5914513	0					
ANR	5914546	ExpressionStatement	* r = ( ( grub_uint32_t ) n ) % d	563:1:10417:10445	5914513	1	True				
ANR	5914547	AssignmentExpression	* r = ( ( grub_uint32_t ) n ) % d		5914513	0		=			
ANR	5914548	UnaryOperationExpression	* r		5914513	0					
ANR	5914549	UnaryOperator	*		5914513	0					
ANR	5914550	Identifier	r		5914513	1					
ANR	5914551	MultiplicativeExpression	( ( grub_uint32_t ) n ) % d		5914513	1		%			
ANR	5914552	CastExpression	( grub_uint32_t ) n		5914513	0					
ANR	5914553	CastTarget	grub_uint32_t		5914513	0					
ANR	5914554	Identifier	n		5914513	1					
ANR	5914555	Identifier	d		5914513	1					
ANR	5914556	ReturnStatement	return ( ( grub_uint32_t ) n ) / d ;	565:6:10454:10484	5914513	1	True				
ANR	5914557	MultiplicativeExpression	( ( grub_uint32_t ) n ) / d		5914513	0		/			
ANR	5914558	CastExpression	( grub_uint32_t ) n		5914513	0					
ANR	5914559	CastTarget	grub_uint32_t		5914513	0					
ANR	5914560	Identifier	n		5914513	1					
ANR	5914561	Identifier	d		5914513	1					
ANR	5914562	WhileStatement	while ( bits -- )		5914513	4					
ANR	5914563	Condition	bits --	568:9:10502:10507	5914513	0	True				
ANR	5914564	PostIncDecOperationExpression	bits --		5914513	0					
ANR	5914565	Identifier	bits		5914513	0					
ANR	5914566	IncDec	--		5914513	1					
ANR	5914567	CompoundStatement		20:4:520:520	5914513	1					
ANR	5914568	ExpressionStatement	m <<= 1	570:6:10522:10529	5914513	0	True				
ANR	5914569	AssignmentExpression	m <<= 1		5914513	0		<<=			
ANR	5914570	Identifier	m		5914513	0					
ANR	5914571	PrimaryExpression	1		5914513	1					
ANR	5914572	Statement	if	572:6:10538:10539	5914513	1	True				
ANR	5914573	Statement	(	572:9:10541:10541	5914513	2	True				
ANR	5914574	Statement	n	572:10:10542:10542	5914513	3	True				
ANR	5914575	Statement	&	572:12:10544:10544	5914513	4	True				
ANR	5914576	Statement	(	572:14:10546:10546	5914513	5	True				
ANR	5914577	Statement	1UL	572:15:10547:10549	5914513	6	True				
ANR	5914578	Statement	L	572:18:10550:10550	5914513	7	True				
ANR	5914579	Statement	<<	572:20:10552:10553	5914513	8	True				
ANR	5914580	Statement	63	572:23:10555:10556	5914513	9	True				
ANR	5914581	Statement	)	572:25:10557:10557	5914513	10	True				
ANR	5914582	Statement	)	572:26:10558:10558	5914513	11	True				
ANR	5914583	ExpressionStatement	m |= 1	573:1:10561:10567	5914513	12	True				
ANR	5914584	AssignmentExpression	m |= 1		5914513	0		|=			
ANR	5914585	Identifier	m		5914513	0					
ANR	5914586	PrimaryExpression	1		5914513	1					
ANR	5914587	ExpressionStatement	q <<= 1	575:6:10576:10583	5914513	13	True				
ANR	5914588	AssignmentExpression	q <<= 1		5914513	0		<<=			
ANR	5914589	Identifier	q		5914513	0					
ANR	5914590	PrimaryExpression	1		5914513	1					
ANR	5914591	ExpressionStatement	n <<= 1	576:6:10591:10598	5914513	14	True				
ANR	5914592	AssignmentExpression	n <<= 1		5914513	0		<<=			
ANR	5914593	Identifier	n		5914513	0					
ANR	5914594	PrimaryExpression	1		5914513	1					
ANR	5914595	IfStatement	if ( m >= d )		5914513	15					
ANR	5914596	Condition	m >= d	578:10:10611:10616	5914513	0	True				
ANR	5914597	RelationalExpression	m >= d		5914513	0		>=			
ANR	5914598	Identifier	m		5914513	0					
ANR	5914599	Identifier	d		5914513	1					
ANR	5914600	CompoundStatement		30:1:626:626	5914513	1					
ANR	5914601	ExpressionStatement	q |= 1	580:3:10625:10631	5914513	0	True				
ANR	5914602	AssignmentExpression	q |= 1		5914513	0		|=			
ANR	5914603	Identifier	q		5914513	0					
ANR	5914604	PrimaryExpression	1		5914513	1					
ANR	5914605	ExpressionStatement	m -= d	581:3:10636:10642	5914513	1	True				
ANR	5914606	AssignmentExpression	m -= d		5914513	0		-=			
ANR	5914607	Identifier	m		5914513	0					
ANR	5914608	Identifier	d		5914513	1					
ANR	5914609	IfStatement	if ( r )		5914513	5					
ANR	5914610	Condition	r	585:6:10660:10660	5914513	0	True				
ANR	5914611	Identifier	r		5914513	0					
ANR	5914612	ExpressionStatement	* r = m	586:4:10667:10673	5914513	1	True				
ANR	5914613	AssignmentExpression	* r = m		5914513	0		=			
ANR	5914614	UnaryOperationExpression	* r		5914513	0					
ANR	5914615	UnaryOperator	*		5914513	0					
ANR	5914616	Identifier	r		5914513	1					
ANR	5914617	Identifier	m		5914513	1					
ANR	5914618	ReturnStatement	return q ;	588:2:10678:10686	5914513	6	True				
ANR	5914619	Identifier	q		5914513	0					
ANR	5914620	ReturnType	grub_uint64_t		5914513	1					
ANR	5914621	Identifier	grub_divmod64		5914513	2					
ANR	5914622	ParameterList	"grub_uint64_t n , grub_uint32_t d , grub_uint32_t * r"		5914513	3					
ANR	5914623	Parameter	grub_uint64_t n	549:15:9941:9955	5914513	0	True				
ANR	5914624	ParameterType	grub_uint64_t		5914513	0					
ANR	5914625	Identifier	n		5914513	1					
ANR	5914626	Parameter	grub_uint32_t d	549:32:9958:9972	5914513	1	True				
ANR	5914627	ParameterType	grub_uint32_t		5914513	0					
ANR	5914628	Identifier	d		5914513	1					
ANR	5914629	Parameter	grub_uint32_t * r	549:49:9975:9990	5914513	2	True				
ANR	5914630	ParameterType	grub_uint32_t *		5914513	0					
ANR	5914631	Identifier	r		5914513	1					
ANR	5914632	CFGEntryNode	ENTRY		5914513		True				
ANR	5914633	CFGExitNode	EXIT		5914513		True				
ANR	5914634	Symbol	q		5914513						
ANR	5914635	Symbol	r		5914513						
ANR	5914636	Symbol	d		5914513						
ANR	5914637	Symbol	bits		5914513						
ANR	5914638	Symbol	* r		5914513						
ANR	5914639	Symbol	m		5914513						
ANR	5914640	Symbol	n		5914513						
ANR	5914641	Function	grub_lltoa	593:0:10801:11369							
ANR	5914642	FunctionDef	"grub_lltoa (char * str , int c , unsigned long long n)"		5914641	0					
ANR	5914643	CompoundStatement		595:0:10867:11369	5914641	0					
ANR	5914644	IdentifierDeclStatement	unsigned base = ( c == 'x' ) ? 16 : 10 ;	596:2:10871:10907	5914641	0	True				
ANR	5914645	IdentifierDecl	base = ( c == 'x' ) ? 16 : 10		5914641	0					
ANR	5914646	IdentifierDeclType	unsigned		5914641	0					
ANR	5914647	Identifier	base		5914641	1					
ANR	5914648	AssignmentExpression	base = ( c == 'x' ) ? 16 : 10		5914641	2		=			
ANR	5914649	Identifier	base		5914641	0					
ANR	5914650	ConditionalExpression	( c == 'x' ) ? 16 : 10		5914641	1					
ANR	5914651	Condition	c == 'x'		5914641	0					
ANR	5914652	EqualityExpression	c == 'x'		5914641	0		==			
ANR	5914653	Identifier	c		5914641	0					
ANR	5914654	PrimaryExpression	'x'		5914641	1					
ANR	5914655	PrimaryExpression	16		5914641	1					
ANR	5914656	PrimaryExpression	10		5914641	2					
ANR	5914657	IdentifierDeclStatement	char * p ;	597:2:10911:10918	5914641	1	True				
ANR	5914658	IdentifierDecl	* p		5914641	0					
ANR	5914659	IdentifierDeclType	char *		5914641	0					
ANR	5914660	Identifier	p		5914641	1					
ANR	5914661	IfStatement	if ( ( long long ) n < 0 && c == 'd' )		5914641	2					
ANR	5914662	Condition	( long long ) n < 0 && c == 'd'	599:6:10927:10955	5914641	0	True				
ANR	5914663	AndExpression	( long long ) n < 0 && c == 'd'		5914641	0		&&			
ANR	5914664	RelationalExpression	( long long ) n < 0		5914641	0		<			
ANR	5914665	CastExpression	( long long ) n		5914641	0					
ANR	5914666	CastTarget	long long		5914641	0					
ANR	5914667	Identifier	n		5914641	1					
ANR	5914668	PrimaryExpression	0		5914641	1					
ANR	5914669	EqualityExpression	c == 'd'		5914641	1		==			
ANR	5914670	Identifier	c		5914641	0					
ANR	5914671	PrimaryExpression	'd'		5914641	1					
ANR	5914672	CompoundStatement		6:4:94:94	5914641	1					
ANR	5914673	ExpressionStatement	n = ( unsigned long long ) ( - ( ( long long ) n ) )	601:6:10970:11013	5914641	0	True				
ANR	5914674	AssignmentExpression	n = ( unsigned long long ) ( - ( ( long long ) n ) )		5914641	0		=			
ANR	5914675	Identifier	n		5914641	0					
ANR	5914676	CastExpression	( unsigned long long ) ( - ( ( long long ) n ) )		5914641	1					
ANR	5914677	CastTarget	unsigned long long		5914641	0					
ANR	5914678	UnaryOperationExpression	- ( ( long long ) n )		5914641	1					
ANR	5914679	UnaryOperator	-		5914641	0					
ANR	5914680	CastExpression	( long long ) n		5914641	1					
ANR	5914681	CastTarget	long long		5914641	0					
ANR	5914682	Identifier	n		5914641	1					
ANR	5914683	ExpressionStatement	* str ++ = '-'	602:6:11021:11033	5914641	1	True				
ANR	5914684	AssignmentExpression	* str ++ = '-'		5914641	0		=			
ANR	5914685	UnaryOperationExpression	* str ++		5914641	0					
ANR	5914686	UnaryOperator	*		5914641	0					
ANR	5914687	PostIncDecOperationExpression	str ++		5914641	1					
ANR	5914688	Identifier	str		5914641	0					
ANR	5914689	IncDec	++		5914641	1					
ANR	5914690	PrimaryExpression	'-'		5914641	1					
ANR	5914691	ExpressionStatement	p = str	605:2:11044:11051	5914641	3	True				
ANR	5914692	AssignmentExpression	p = str		5914641	0		=			
ANR	5914693	Identifier	p		5914641	0					
ANR	5914694	Identifier	str		5914641	1					
ANR	5914695	IfStatement	if ( base == 16 )		5914641	4					
ANR	5914696	Condition	base == 16	607:6:11060:11069	5914641	0	True				
ANR	5914697	EqualityExpression	base == 16		5914641	0		==			
ANR	5914698	Identifier	base		5914641	0					
ANR	5914699	PrimaryExpression	16		5914641	1					
ANR	5914700	DoStatement	do		5914641	1					
ANR	5914701	CompoundStatement		16:1:220:253	5914641	0					
ANR	5914702	IdentifierDeclStatement	unsigned d = ( unsigned ) ( n & 0xf ) ;	610:1:11088:11121	5914641	0	True				
ANR	5914703	IdentifierDecl	d = ( unsigned ) ( n & 0xf )		5914641	0					
ANR	5914704	IdentifierDeclType	unsigned		5914641	0					
ANR	5914705	Identifier	d		5914641	1					
ANR	5914706	AssignmentExpression	d = ( unsigned ) ( n & 0xf )		5914641	2		=			
ANR	5914707	Identifier	d		5914641	0					
ANR	5914708	CastExpression	( unsigned ) ( n & 0xf )		5914641	1					
ANR	5914709	CastTarget	unsigned		5914641	0					
ANR	5914710	BitAndExpression	n & 0xf		5914641	1		&			
ANR	5914711	Identifier	n		5914641	0					
ANR	5914712	PrimaryExpression	0xf		5914641	1					
ANR	5914713	ExpressionStatement	* p ++ = ( d > 9 ) ? d + 'a' - 10 : d + '0'	611:1:11124:11163	5914641	1	True				
ANR	5914714	AssignmentExpression	* p ++ = ( d > 9 ) ? d + 'a' - 10 : d + '0'		5914641	0		=			
ANR	5914715	UnaryOperationExpression	* p ++		5914641	0					
ANR	5914716	UnaryOperator	*		5914641	0					
ANR	5914717	PostIncDecOperationExpression	p ++		5914641	1					
ANR	5914718	Identifier	p		5914641	0					
ANR	5914719	IncDec	++		5914641	1					
ANR	5914720	ConditionalExpression	( d > 9 ) ? d + 'a' - 10 : d + '0'		5914641	1					
ANR	5914721	Condition	d > 9		5914641	0					
ANR	5914722	RelationalExpression	d > 9		5914641	0		>			
ANR	5914723	Identifier	d		5914641	0					
ANR	5914724	PrimaryExpression	9		5914641	1					
ANR	5914725	AdditiveExpression	d + 'a' - 10		5914641	1		+			
ANR	5914726	Identifier	d		5914641	0					
ANR	5914727	AdditiveExpression	'a' - 10		5914641	1		-			
ANR	5914728	PrimaryExpression	'a'		5914641	0					
ANR	5914729	PrimaryExpression	10		5914641	1					
ANR	5914730	AdditiveExpression	d + '0'		5914641	2		+			
ANR	5914731	Identifier	d		5914641	0					
ANR	5914732	PrimaryExpression	'0'		5914641	1					
ANR	5914733	Condition	n >>= 4	613:11:11184:11190	5914641	1	True				
ANR	5914734	AssignmentExpression	n >>= 4		5914641	0		>>=			
ANR	5914735	Identifier	n		5914641	0					
ANR	5914736	PrimaryExpression	4		5914641	1					
ANR	5914737	ReturnType	static char *		5914641	1					
ANR	5914738	Identifier	grub_lltoa		5914641	2					
ANR	5914739	ParameterList	"char * str , int c , unsigned long long n"		5914641	3					
ANR	5914740	Parameter	char * str	594:12:10827:10835	5914641	0	True				
ANR	5914741	ParameterType	char *		5914641	0					
ANR	5914742	Identifier	str		5914641	1					
ANR	5914743	Parameter	int c	594:23:10838:10842	5914641	1	True				
ANR	5914744	ParameterType	int		5914641	0					
ANR	5914745	Identifier	c		5914641	1					
ANR	5914746	Parameter	unsigned long long n	594:30:10845:10864	5914641	2	True				
ANR	5914747	ParameterType	unsigned long long		5914641	0					
ANR	5914748	Identifier	n		5914641	1					
ANR	5914749	CFGEntryNode	ENTRY		5914641		True				
ANR	5914750	CFGExitNode	EXIT		5914641		True				
ANR	5914751	Symbol	str		5914641						
ANR	5914752	Symbol	p		5914641						
ANR	5914753	Symbol	c		5914641						
ANR	5914754	Symbol	d		5914641						
ANR	5914755	Symbol	* p ++		5914641						
ANR	5914756	Symbol	* str ++		5914641						
ANR	5914757	Symbol	n		5914641						
ANR	5914758	Symbol	base		5914641						
ANR	5914759	ClassDef	vsnprintf_closure	631:0:11372:11456							
ANR	5914760	DeclStmt									
ANR	5914761	Decl							char	char *	str
ANR	5914762	DeclStmt									
ANR	5914763	Decl							grub_size_t	grub_size_t	count
ANR	5914764	DeclStmt									
ANR	5914765	Decl							grub_size_t	grub_size_t	max_len
ANR	5914766	Function	write_char	638:0:11460:11664							
ANR	5914767	FunctionDef	"write_char (unsigned char ch , struct vsnprintf_closure * cc)"		5914766	0					
ANR	5914768	CompoundStatement		640:0:11532:11664	5914766	0					
ANR	5914769	IfStatement	if ( cc -> str )		5914766	0					
ANR	5914770	Condition	cc -> str	641:6:11540:11546	5914766	0	True				
ANR	5914771	PtrMemberAccess	cc -> str		5914766	0					
ANR	5914772	Identifier	cc		5914766	0					
ANR	5914773	Identifier	str		5914766	1					
ANR	5914774	CompoundStatement		3:4:20:20	5914766	1					
ANR	5914775	IfStatement	if ( cc -> count < cc -> max_len )		5914766	0					
ANR	5914776	Condition	cc -> count < cc -> max_len	643:10:11565:11587	5914766	0	True				
ANR	5914777	RelationalExpression	cc -> count < cc -> max_len		5914766	0		<			
ANR	5914778	PtrMemberAccess	cc -> count		5914766	0					
ANR	5914779	Identifier	cc		5914766	0					
ANR	5914780	Identifier	count		5914766	1					
ANR	5914781	PtrMemberAccess	cc -> max_len		5914766	1					
ANR	5914782	Identifier	cc		5914766	0					
ANR	5914783	Identifier	max_len		5914766	1					
ANR	5914784	ExpressionStatement	* ( cc -> str ) ++ = ch	644:1:11591:11608	5914766	1	True				
ANR	5914785	AssignmentExpression	* ( cc -> str ) ++ = ch		5914766	0		=			
ANR	5914786	UnaryOperationExpression	* ( cc -> str ) ++		5914766	0					
ANR	5914787	UnaryOperator	*		5914766	0					
ANR	5914788	PostIncDecOperationExpression	( cc -> str ) ++		5914766	1					
ANR	5914789	PtrMemberAccess	cc -> str		5914766	0					
ANR	5914790	Identifier	cc		5914766	0					
ANR	5914791	Identifier	str		5914766	1					
ANR	5914792	IncDec	++		5914766	1					
ANR	5914793	Identifier	ch		5914766	1					
ANR	5914794	ElseStatement	else		5914766	0					
ANR	5914795	ExpressionStatement	grub_putchar ( ch )	647:4:11627:11644	5914766	0	True				
ANR	5914796	CallExpression	grub_putchar ( ch )		5914766	0					
ANR	5914797	Callee	grub_putchar		5914766	0					
ANR	5914798	Identifier	grub_putchar		5914766	0					
ANR	5914799	ArgumentList	ch		5914766	1					
ANR	5914800	Argument	ch		5914766	0					
ANR	5914801	Identifier	ch		5914766	0					
ANR	5914802	ExpressionStatement	( cc -> count ) ++	649:2:11649:11662	5914766	1	True				
ANR	5914803	PostIncDecOperationExpression	( cc -> count ) ++		5914766	0					
ANR	5914804	PtrMemberAccess	cc -> count		5914766	0					
ANR	5914805	Identifier	cc		5914766	0					
ANR	5914806	Identifier	count		5914766	1					
ANR	5914807	IncDec	++		5914766	1					
ANR	5914808	ReturnType	static void		5914766	1					
ANR	5914809	Identifier	write_char		5914766	2					
ANR	5914810	ParameterList	"unsigned char ch , struct vsnprintf_closure * cc"		5914766	3					
ANR	5914811	Parameter	unsigned char ch	639:12:11484:11499	5914766	0	True				
ANR	5914812	ParameterType	unsigned char		5914766	0					
ANR	5914813	Identifier	ch		5914766	1					
ANR	5914814	Parameter	struct vsnprintf_closure * cc	639:30:11502:11529	5914766	1	True				
ANR	5914815	ParameterType	struct vsnprintf_closure *		5914766	0					
ANR	5914816	Identifier	cc		5914766	1					
ANR	5914817	CFGEntryNode	ENTRY		5914766		True				
ANR	5914818	CFGExitNode	EXIT		5914766		True				
ANR	5914819	Symbol	cc		5914766						
ANR	5914820	Symbol	cc -> max_len		5914766						
ANR	5914821	Symbol	cc -> str		5914766						
ANR	5914822	Symbol	ch		5914766						
ANR	5914823	Symbol	* cc		5914766						
ANR	5914824	Symbol	* ( cc -> str ) ++		5914766						
ANR	5914825	Symbol	cc -> count		5914766						
ANR	5914826	Function	write_str	652:0:11667:11777							
ANR	5914827	FunctionDef	"write_str (const char * s , struct vsnprintf_closure * cc)"		5914826	0					
ANR	5914828	CompoundStatement		654:0:11735:11777	5914826	0					
ANR	5914829	WhileStatement	while ( * s )		5914826	0					
ANR	5914830	Condition	* s	655:9:11746:11747	5914826	0	True				
ANR	5914831	UnaryOperationExpression	* s		5914826	0					
ANR	5914832	UnaryOperator	*		5914826	0					
ANR	5914833	Identifier	s		5914826	1					
ANR	5914834	ExpressionStatement	"write_char ( * s ++ , cc )"	656:4:11754:11775	5914826	1	True				
ANR	5914835	CallExpression	"write_char ( * s ++ , cc )"		5914826	0					
ANR	5914836	Callee	write_char		5914826	0					
ANR	5914837	Identifier	write_char		5914826	0					
ANR	5914838	ArgumentList	* s ++		5914826	1					
ANR	5914839	Argument	* s ++		5914826	0					
ANR	5914840	UnaryOperationExpression	* s ++		5914826	0					
ANR	5914841	UnaryOperator	*		5914826	0					
ANR	5914842	PostIncDecOperationExpression	s ++		5914826	1					
ANR	5914843	Identifier	s		5914826	0					
ANR	5914844	IncDec	++		5914826	1					
ANR	5914845	Argument	cc		5914826	1					
ANR	5914846	Identifier	cc		5914826	0					
ANR	5914847	ReturnType	static void		5914826	1					
ANR	5914848	Identifier	write_str		5914826	2					
ANR	5914849	ParameterList	"const char * s , struct vsnprintf_closure * cc"		5914826	3					
ANR	5914850	Parameter	const char * s	653:11:11690:11702	5914826	0	True				
ANR	5914851	ParameterType	const char *		5914826	0					
ANR	5914852	Identifier	s		5914826	1					
ANR	5914853	Parameter	struct vsnprintf_closure * cc	653:26:11705:11732	5914826	1	True				
ANR	5914854	ParameterType	struct vsnprintf_closure *		5914826	0					
ANR	5914855	Identifier	cc		5914826	1					
ANR	5914856	CFGEntryNode	ENTRY		5914826		True				
ANR	5914857	CFGExitNode	EXIT		5914826		True				
ANR	5914858	Symbol	cc		5914826						
ANR	5914859	Symbol	* s ++		5914826						
ANR	5914860	Symbol	s		5914826						
ANR	5914861	Symbol	* s		5914826						
ANR	5914862	Function	write_fill	659:0:11780:11918							
ANR	5914863	FunctionDef	"write_fill (const char ch , int n , struct vsnprintf_closure * cc)"		5914862	0					
ANR	5914864	CompoundStatement		661:0:11856:11918	5914862	0					
ANR	5914865	IdentifierDeclStatement	int i ;	662:2:11860:11865	5914862	0	True				
ANR	5914866	IdentifierDecl	i		5914862	0					
ANR	5914867	IdentifierDeclType	int		5914862	0					
ANR	5914868	Identifier	i		5914862	1					
ANR	5914869	ForStatement	for ( i = 0 ; i < n ; i ++ )		5914862	1					
ANR	5914870	ForInit	i = 0 ;	663:7:11874:11879	5914862	0	True				
ANR	5914871	AssignmentExpression	i = 0		5914862	0		=			
ANR	5914872	Identifier	i		5914862	0					
ANR	5914873	PrimaryExpression	0		5914862	1					
ANR	5914874	Condition	i < n	663:14:11881:11885	5914862	1	True				
ANR	5914875	RelationalExpression	i < n		5914862	0		<			
ANR	5914876	Identifier	i		5914862	0					
ANR	5914877	Identifier	n		5914862	1					
ANR	5914878	PostIncDecOperationExpression	i ++	663:21:11888:11890	5914862	2	True				
ANR	5914879	Identifier	i		5914862	0					
ANR	5914880	IncDec	++		5914862	1					
ANR	5914881	ExpressionStatement	"write_char ( ch , cc )"	664:4:11897:11916	5914862	3	True				
ANR	5914882	CallExpression	"write_char ( ch , cc )"		5914862	0					
ANR	5914883	Callee	write_char		5914862	0					
ANR	5914884	Identifier	write_char		5914862	0					
ANR	5914885	ArgumentList	ch		5914862	1					
ANR	5914886	Argument	ch		5914862	0					
ANR	5914887	Identifier	ch		5914862	0					
ANR	5914888	Argument	cc		5914862	1					
ANR	5914889	Identifier	cc		5914862	0					
ANR	5914890	ReturnType	static void		5914862	1					
ANR	5914891	Identifier	write_fill		5914862	2					
ANR	5914892	ParameterList	"const char ch , int n , struct vsnprintf_closure * cc"		5914862	3					
ANR	5914893	Parameter	const char ch	660:12:11804:11816	5914862	0	True				
ANR	5914894	ParameterType	const char		5914862	0					
ANR	5914895	Identifier	ch		5914862	1					
ANR	5914896	Parameter	int n	660:27:11819:11823	5914862	1	True				
ANR	5914897	ParameterType	int		5914862	0					
ANR	5914898	Identifier	n		5914862	1					
ANR	5914899	Parameter	struct vsnprintf_closure * cc	660:34:11826:11853	5914862	2	True				
ANR	5914900	ParameterType	struct vsnprintf_closure *		5914862	0					
ANR	5914901	Identifier	cc		5914862	1					
ANR	5914902	CFGEntryNode	ENTRY		5914862		True				
ANR	5914903	CFGExitNode	EXIT		5914862		True				
ANR	5914904	Symbol	cc		5914862						
ANR	5914905	Symbol	ch		5914862						
ANR	5914906	Symbol	i		5914862						
ANR	5914907	Symbol	n		5914862						
ANR	5914908	Function	grub_vsnprintf_real	667:0:11921:15914							
ANR	5914909	FunctionDef	"grub_vsnprintf_real (char * str , grub_size_t max_len , const char * fmt , va_list args)"		5914908	0					
ANR	5914910	CompoundStatement		669:0:12016:15914	5914908	0					
ANR	5914911	IdentifierDeclStatement	char c ;	670:2:12020:12026	5914908	0	True				
ANR	5914912	IdentifierDecl	c		5914908	0					
ANR	5914913	IdentifierDeclType	char		5914908	0					
ANR	5914914	Identifier	c		5914908	1					
ANR	5914915	IdentifierDeclStatement	struct vsnprintf_closure cc ;	671:2:12030:12057	5914908	1	True				
ANR	5914916	IdentifierDecl	cc		5914908	0					
ANR	5914917	IdentifierDeclType	struct vsnprintf_closure		5914908	0					
ANR	5914918	Identifier	cc		5914908	1					
ANR	5914919	ExpressionStatement	cc . str = str	673:2:12062:12074	5914908	2	True				
ANR	5914920	AssignmentExpression	cc . str = str		5914908	0		=			
ANR	5914921	MemberAccess	cc . str		5914908	0					
ANR	5914922	Identifier	cc		5914908	0					
ANR	5914923	Identifier	str		5914908	1					
ANR	5914924	Identifier	str		5914908	1					
ANR	5914925	ExpressionStatement	cc . max_len = max_len	674:2:12078:12098	5914908	3	True				
ANR	5914926	AssignmentExpression	cc . max_len = max_len		5914908	0		=			
ANR	5914927	MemberAccess	cc . max_len		5914908	0					
ANR	5914928	Identifier	cc		5914908	0					
ANR	5914929	Identifier	max_len		5914908	1					
ANR	5914930	Identifier	max_len		5914908	1					
ANR	5914931	ExpressionStatement	cc . count = 0	675:2:12102:12114	5914908	4	True				
ANR	5914932	AssignmentExpression	cc . count = 0		5914908	0		=			
ANR	5914933	MemberAccess	cc . count		5914908	0					
ANR	5914934	Identifier	cc		5914908	0					
ANR	5914935	Identifier	count		5914908	1					
ANR	5914936	PrimaryExpression	0		5914908	1					
ANR	5914937	WhileStatement	while ( ( c = * fmt ++ ) != 0 )		5914908	5					
ANR	5914938	Condition	( c = * fmt ++ ) != 0	677:9:12126:12142	5914908	0	True				
ANR	5914939	EqualityExpression	( c = * fmt ++ ) != 0		5914908	0		!=			
ANR	5914940	AssignmentExpression	c = * fmt ++		5914908	0		=			
ANR	5914941	Identifier	c		5914908	0					
ANR	5914942	UnaryOperationExpression	* fmt ++		5914908	1					
ANR	5914943	UnaryOperator	*		5914908	0					
ANR	5914944	PostIncDecOperationExpression	fmt ++		5914908	1					
ANR	5914945	Identifier	fmt		5914908	0					
ANR	5914946	IncDec	++		5914908	1					
ANR	5914947	PrimaryExpression	0		5914908	1					
ANR	5914948	CompoundStatement		10:4:132:132	5914908	1					
ANR	5914949	IfStatement	if ( c != '%' )		5914908	0					
ANR	5914950	Condition	c != '%'	679:10:12161:12168	5914908	0	True				
ANR	5914951	EqualityExpression	c != '%'		5914908	0		!=			
ANR	5914952	Identifier	c		5914908	0					
ANR	5914953	PrimaryExpression	'%'		5914908	1					
ANR	5914954	ExpressionStatement	"write_char ( c , & cc )"	680:1:12172:12191	5914908	1	True				
ANR	5914955	CallExpression	"write_char ( c , & cc )"		5914908	0					
ANR	5914956	Callee	write_char		5914908	0					
ANR	5914957	Identifier	write_char		5914908	0					
ANR	5914958	ArgumentList	c		5914908	1					
ANR	5914959	Argument	c		5914908	0					
ANR	5914960	Identifier	c		5914908	0					
ANR	5914961	Argument	& cc		5914908	1					
ANR	5914962	UnaryOperationExpression	& cc		5914908	0					
ANR	5914963	UnaryOperator	&		5914908	0					
ANR	5914964	Identifier	cc		5914908	1					
ANR	5914965	ElseStatement	else		5914908	0					
ANR	5914966	CompoundStatement		24:3:383:396	5914908	0					
ANR	5914967	IdentifierDeclStatement	char tmp [ 32 ] ;	683:3:12210:12222	5914908	0	True				
ANR	5914968	IdentifierDecl	tmp [ 32 ]		5914908	0					
ANR	5914969	IdentifierDeclType	char [ 32 ]		5914908	0					
ANR	5914970	Identifier	tmp		5914908	1					
ANR	5914971	PrimaryExpression	32		5914908	2					
ANR	5914972	IdentifierDeclStatement	char * p ;	684:3:12227:12234	5914908	1	True				
ANR	5914973	IdentifierDecl	* p		5914908	0					
ANR	5914974	IdentifierDeclType	char *		5914908	0					
ANR	5914975	Identifier	p		5914908	1					
ANR	5914976	IdentifierDeclStatement	unsigned int format1 = 0 ;	685:3:12239:12263	5914908	2	True				
ANR	5914977	IdentifierDecl	format1 = 0		5914908	0					
ANR	5914978	IdentifierDeclType	unsigned int		5914908	0					
ANR	5914979	Identifier	format1		5914908	1					
ANR	5914980	AssignmentExpression	format1 = 0		5914908	2		=			
ANR	5914981	Identifier	format1		5914908	0					
ANR	5914982	PrimaryExpression	0		5914908	1					
ANR	5914983	IdentifierDeclStatement	unsigned int format2 = ~ 0U ;	686:3:12268:12295	5914908	3	True				
ANR	5914984	IdentifierDecl	format2 = ~ 0U		5914908	0					
ANR	5914985	IdentifierDeclType	unsigned int		5914908	0					
ANR	5914986	Identifier	format2		5914908	1					
ANR	5914987	AssignmentExpression	format2 = ~ 0U		5914908	2		=			
ANR	5914988	Identifier	format2		5914908	0					
ANR	5914989	UnaryOperationExpression	~ 0U		5914908	1					
ANR	5914990	UnaryOperator	~		5914908	0					
ANR	5914991	PrimaryExpression	0U		5914908	1					
ANR	5914992	IdentifierDeclStatement	char zerofill = ' ' ;	687:3:12300:12319	5914908	4	True				
ANR	5914993	IdentifierDecl	zerofill = ' '		5914908	0					
ANR	5914994	IdentifierDeclType	char		5914908	0					
ANR	5914995	Identifier	zerofill		5914908	1					
ANR	5914996	AssignmentExpression	zerofill = ' '		5914908	2		=			
ANR	5914997	Identifier	zerofill		5914908	0					
ANR	5914998	PrimaryExpression	' '		5914908	1					
ANR	5914999	IdentifierDeclStatement	int rightfill = 0 ;	688:3:12324:12341	5914908	5	True				
ANR	5915000	IdentifierDecl	rightfill = 0		5914908	0					
ANR	5915001	IdentifierDeclType	int		5914908	0					
ANR	5915002	Identifier	rightfill		5914908	1					
ANR	5915003	AssignmentExpression	rightfill = 0		5914908	2		=			
ANR	5915004	Identifier	rightfill		5914908	0					
ANR	5915005	PrimaryExpression	0		5914908	1					
ANR	5915006	IdentifierDeclStatement	int n ;	689:3:12346:12351	5914908	6	True				
ANR	5915007	IdentifierDecl	n		5914908	0					
ANR	5915008	IdentifierDeclType	int		5914908	0					
ANR	5915009	Identifier	n		5914908	1					
ANR	5915010	IdentifierDeclStatement	int longfmt = 0 ;	690:3:12356:12371	5914908	7	True				
ANR	5915011	IdentifierDecl	longfmt = 0		5914908	0					
ANR	5915012	IdentifierDeclType	int		5914908	0					
ANR	5915013	Identifier	longfmt		5914908	1					
ANR	5915014	AssignmentExpression	longfmt = 0		5914908	2		=			
ANR	5915015	Identifier	longfmt		5914908	0					
ANR	5915016	PrimaryExpression	0		5914908	1					
ANR	5915017	IdentifierDeclStatement	int longlongfmt = 0 ;	691:3:12376:12395	5914908	8	True				
ANR	5915018	IdentifierDecl	longlongfmt = 0		5914908	0					
ANR	5915019	IdentifierDeclType	int		5914908	0					
ANR	5915020	Identifier	longlongfmt		5914908	1					
ANR	5915021	AssignmentExpression	longlongfmt = 0		5914908	2		=			
ANR	5915022	Identifier	longlongfmt		5914908	0					
ANR	5915023	PrimaryExpression	0		5914908	1					
ANR	5915024	IdentifierDeclStatement	int unsig = 0 ;	692:3:12400:12413	5914908	9	True				
ANR	5915025	IdentifierDecl	unsig = 0		5914908	0					
ANR	5915026	IdentifierDeclType	int		5914908	0					
ANR	5915027	Identifier	unsig		5914908	1					
ANR	5915028	AssignmentExpression	unsig = 0		5914908	2		=			
ANR	5915029	Identifier	unsig		5914908	0					
ANR	5915030	PrimaryExpression	0		5914908	1					
ANR	5915031	IfStatement	if ( * fmt && * fmt == '-' )		5914908	10					
ANR	5915032	Condition	* fmt && * fmt == '-'	694:7:12423:12440	5914908	0	True				
ANR	5915033	AndExpression	* fmt && * fmt == '-'		5914908	0		&&			
ANR	5915034	UnaryOperationExpression	* fmt		5914908	0					
ANR	5915035	UnaryOperator	*		5914908	0					
ANR	5915036	Identifier	fmt		5914908	1					
ANR	5915037	EqualityExpression	* fmt == '-'		5914908	1		==			
ANR	5915038	UnaryOperationExpression	* fmt		5914908	0					
ANR	5915039	UnaryOperator	*		5914908	0					
ANR	5915040	Identifier	fmt		5914908	1					
ANR	5915041	PrimaryExpression	'-'		5914908	1					
ANR	5915042	CompoundStatement		27:5:431:431	5914908	1					
ANR	5915043	ExpressionStatement	rightfill = 1	696:7:12457:12470	5914908	0	True				
ANR	5915044	AssignmentExpression	rightfill = 1		5914908	0		=			
ANR	5915045	Identifier	rightfill		5914908	0					
ANR	5915046	PrimaryExpression	1		5914908	1					
ANR	5915047	ExpressionStatement	fmt ++	697:7:12479:12484	5914908	1	True				
ANR	5915048	PostIncDecOperationExpression	fmt ++		5914908	0					
ANR	5915049	Identifier	fmt		5914908	0					
ANR	5915050	IncDec	++		5914908	1					
ANR	5915051	ExpressionStatement	p = ( char * ) fmt	700:3:12497:12513	5914908	11	True				
ANR	5915052	AssignmentExpression	p = ( char * ) fmt		5914908	0		=			
ANR	5915053	Identifier	p		5914908	0					
ANR	5915054	CastExpression	( char * ) fmt		5914908	1					
ANR	5915055	CastTarget	char *		5914908	0					
ANR	5915056	Identifier	fmt		5914908	1					
ANR	5915057	WhileStatement	while ( * p && grub_isdigit ( * p ) )		5914908	12					
ANR	5915058	Condition	* p && grub_isdigit ( * p )	702:10:12563:12585	5914908	0	True				
ANR	5915059	AndExpression	* p && grub_isdigit ( * p )		5914908	0		&&			
ANR	5915060	UnaryOperationExpression	* p		5914908	0					
ANR	5915061	UnaryOperator	*		5914908	0					
ANR	5915062	Identifier	p		5914908	1					
ANR	5915063	CallExpression	grub_isdigit ( * p )		5914908	1					
ANR	5915064	Callee	grub_isdigit		5914908	0					
ANR	5915065	Identifier	grub_isdigit		5914908	0					
ANR	5915066	ArgumentList	* p		5914908	1					
ANR	5915067	Argument	* p		5914908	0					
ANR	5915068	UnaryOperationExpression	* p		5914908	0					
ANR	5915069	UnaryOperator	*		5914908	0					
ANR	5915070	Identifier	p		5914908	1					
ANR	5915071	ExpressionStatement	p ++	703:5:12593:12596	5914908	1	True				
ANR	5915072	PostIncDecOperationExpression	p ++		5914908	0					
ANR	5915073	Identifier	p		5914908	0					
ANR	5915074	IncDec	++		5914908	1					
ANR	5915075	IfStatement	if ( p > fmt )		5914908	13					
ANR	5915076	Condition	p > fmt	705:7:12606:12612	5914908	0	True				
ANR	5915077	RelationalExpression	p > fmt		5914908	0		>			
ANR	5915078	Identifier	p		5914908	0					
ANR	5915079	Identifier	fmt		5914908	1					
ANR	5915080	CompoundStatement		40:4:626:645	5914908	1					
ANR	5915081	IdentifierDeclStatement	char s [ p - fmt + 1 ] ;	708:4:12643:12662	5914908	0	True				
ANR	5915082	IdentifierDecl	s [ p - fmt + 1 ]		5914908	0					
ANR	5915083	IdentifierDeclType	char [ p - fmt + 1 ]		5914908	0					
ANR	5915084	Identifier	s		5914908	1					
ANR	5915085	AdditiveExpression	p - fmt + 1		5914908	2		-			
ANR	5915086	Identifier	p		5914908	0					
ANR	5915087	AdditiveExpression	fmt + 1		5914908	1		+			
ANR	5915088	Identifier	fmt		5914908	0					
ANR	5915089	PrimaryExpression	1		5914908	1					
ANR	5915090	ExpressionStatement	"grub_strncpy ( s , fmt , p - fmt )"	712:4:12721:12751	5914908	1	True				
ANR	5915091	CallExpression	"grub_strncpy ( s , fmt , p - fmt )"		5914908	0					
ANR	5915092	Callee	grub_strncpy		5914908	0					
ANR	5915093	Identifier	grub_strncpy		5914908	0					
ANR	5915094	ArgumentList	s		5914908	1					
ANR	5915095	Argument	s		5914908	0					
ANR	5915096	Identifier	s		5914908	0					
ANR	5915097	Argument	fmt		5914908	1					
ANR	5915098	Identifier	fmt		5914908	0					
ANR	5915099	Argument	p - fmt		5914908	2					
ANR	5915100	AdditiveExpression	p - fmt		5914908	0		-			
ANR	5915101	Identifier	p		5914908	0					
ANR	5915102	Identifier	fmt		5914908	1					
ANR	5915103	ExpressionStatement	s [ p - fmt ] = 0	713:7:12760:12774	5914908	2	True				
ANR	5915104	AssignmentExpression	s [ p - fmt ] = 0		5914908	0		=			
ANR	5915105	ArrayIndexing	s [ p - fmt ]		5914908	0					
ANR	5915106	Identifier	s		5914908	0					
ANR	5915107	AdditiveExpression	p - fmt		5914908	1		-			
ANR	5915108	Identifier	p		5914908	0					
ANR	5915109	Identifier	fmt		5914908	1					
ANR	5915110	PrimaryExpression	0		5914908	1					
ANR	5915111	IfStatement	if ( s [ 0 ] == '0' )		5914908	3					
ANR	5915112	Condition	s [ 0 ] == '0'	714:11:12787:12797	5914908	0	True				
ANR	5915113	EqualityExpression	s [ 0 ] == '0'		5914908	0		==			
ANR	5915114	ArrayIndexing	s [ 0 ]		5914908	0					
ANR	5915115	Identifier	s		5914908	0					
ANR	5915116	PrimaryExpression	0		5914908	1					
ANR	5915117	PrimaryExpression	'0'		5914908	1					
ANR	5915118	ExpressionStatement	zerofill = '0'	715:2:12802:12816	5914908	1	True				
ANR	5915119	AssignmentExpression	zerofill = '0'		5914908	0		=			
ANR	5915120	Identifier	zerofill		5914908	0					
ANR	5915121	PrimaryExpression	'0'		5914908	1					
ANR	5915122	ExpressionStatement	"format1 = grub_strtoul ( s , 0 , 10 )"	716:7:12825:12858	5914908	4	True				
ANR	5915123	AssignmentExpression	"format1 = grub_strtoul ( s , 0 , 10 )"		5914908	0		=			
ANR	5915124	Identifier	format1		5914908	0					
ANR	5915125	CallExpression	"grub_strtoul ( s , 0 , 10 )"		5914908	1					
ANR	5915126	Callee	grub_strtoul		5914908	0					
ANR	5915127	Identifier	grub_strtoul		5914908	0					
ANR	5915128	ArgumentList	s		5914908	1					
ANR	5915129	Argument	s		5914908	0					
ANR	5915130	Identifier	s		5914908	0					
ANR	5915131	Argument	0		5914908	1					
ANR	5915132	PrimaryExpression	0		5914908	0					
ANR	5915133	Argument	10		5914908	2					
ANR	5915134	PrimaryExpression	10		5914908	0					
ANR	5915135	ExpressionStatement	fmt = p	717:7:12867:12874	5914908	5	True				
ANR	5915136	AssignmentExpression	fmt = p		5914908	0		=			
ANR	5915137	Identifier	fmt		5914908	0					
ANR	5915138	Identifier	p		5914908	1					
ANR	5915139	IfStatement	if ( * p && * p == '.' )		5914908	14					
ANR	5915140	Condition	* p && * p == '.'	720:7:12891:12905	5914908	0	True				
ANR	5915141	AndExpression	* p && * p == '.'		5914908	0		&&			
ANR	5915142	UnaryOperationExpression	* p		5914908	0					
ANR	5915143	UnaryOperator	*		5914908	0					
ANR	5915144	Identifier	p		5914908	1					
ANR	5915145	EqualityExpression	* p == '.'		5914908	1		==			
ANR	5915146	UnaryOperationExpression	* p		5914908	0					
ANR	5915147	UnaryOperator	*		5914908	0					
ANR	5915148	Identifier	p		5914908	1					
ANR	5915149	PrimaryExpression	'.'		5914908	1					
ANR	5915150	CompoundStatement		53:5:896:896	5914908	1					
ANR	5915151	ExpressionStatement	p ++	722:7:12922:12925	5914908	0	True				
ANR	5915152	PostIncDecOperationExpression	p ++		5914908	0					
ANR	5915153	Identifier	p		5914908	0					
ANR	5915154	IncDec	++		5914908	1					
ANR	5915155	ExpressionStatement	fmt ++	723:7:12934:12939	5914908	1	True				
ANR	5915156	PostIncDecOperationExpression	fmt ++		5914908	0					
ANR	5915157	Identifier	fmt		5914908	0					
ANR	5915158	IncDec	++		5914908	1					
ANR	5915159	WhileStatement	while ( * p && grub_isdigit ( * p ) )		5914908	2					
ANR	5915160	Condition	* p && grub_isdigit ( * p )	724:14:12955:12977	5914908	0	True				
ANR	5915161	AndExpression	* p && grub_isdigit ( * p )		5914908	0		&&			
ANR	5915162	UnaryOperationExpression	* p		5914908	0					
ANR	5915163	UnaryOperator	*		5914908	0					
ANR	5915164	Identifier	p		5914908	1					
ANR	5915165	CallExpression	grub_isdigit ( * p )		5914908	1					
ANR	5915166	Callee	grub_isdigit		5914908	0					
ANR	5915167	Identifier	grub_isdigit		5914908	0					
ANR	5915168	ArgumentList	* p		5914908	1					
ANR	5915169	Argument	* p		5914908	0					
ANR	5915170	UnaryOperationExpression	* p		5914908	0					
ANR	5915171	UnaryOperator	*		5914908	0					
ANR	5915172	Identifier	p		5914908	1					
ANR	5915173	ExpressionStatement	p ++	725:2:12982:12985	5914908	1	True				
ANR	5915174	PostIncDecOperationExpression	p ++		5914908	0					
ANR	5915175	Identifier	p		5914908	0					
ANR	5915176	IncDec	++		5914908	1					
ANR	5915177	IfStatement	if ( p > fmt )		5914908	3					
ANR	5915178	Condition	p > fmt	727:11:12999:13005	5914908	0	True				
ANR	5915179	RelationalExpression	p > fmt		5914908	0		>			
ANR	5915180	Identifier	p		5914908	0					
ANR	5915181	Identifier	fmt		5914908	1					
ANR	5915182	CompoundStatement		62:4:1016:1038	5914908	1					
ANR	5915183	IdentifierDeclStatement	char fstr [ p - fmt + 1 ] ;	730:4:13033:13055	5914908	0	True				
ANR	5915184	IdentifierDecl	fstr [ p - fmt + 1 ]		5914908	0					
ANR	5915185	IdentifierDeclType	char [ p - fmt + 1 ]		5914908	0					
ANR	5915186	Identifier	fstr		5914908	1					
ANR	5915187	AdditiveExpression	p - fmt + 1		5914908	2		-			
ANR	5915188	Identifier	p		5914908	0					
ANR	5915189	AdditiveExpression	fmt + 1		5914908	1		+			
ANR	5915190	Identifier	fmt		5914908	0					
ANR	5915191	PrimaryExpression	1		5914908	1					
ANR	5915192	ExpressionStatement	"grub_strncpy ( fstr , fmt , p - fmt )"	734:4:13118:13151	5914908	1	True				
ANR	5915193	CallExpression	"grub_strncpy ( fstr , fmt , p - fmt )"		5914908	0					
ANR	5915194	Callee	grub_strncpy		5914908	0					
ANR	5915195	Identifier	grub_strncpy		5914908	0					
ANR	5915196	ArgumentList	fstr		5914908	1					
ANR	5915197	Argument	fstr		5914908	0					
ANR	5915198	Identifier	fstr		5914908	0					
ANR	5915199	Argument	fmt		5914908	1					
ANR	5915200	Identifier	fmt		5914908	0					
ANR	5915201	Argument	p - fmt		5914908	2					
ANR	5915202	AdditiveExpression	p - fmt		5914908	0		-			
ANR	5915203	Identifier	p		5914908	0					
ANR	5915204	Identifier	fmt		5914908	1					
ANR	5915205	ExpressionStatement	fstr [ p - fmt ] = 0	735:4:13157:13174	5914908	2	True				
ANR	5915206	AssignmentExpression	fstr [ p - fmt ] = 0		5914908	0		=			
ANR	5915207	ArrayIndexing	fstr [ p - fmt ]		5914908	0					
ANR	5915208	Identifier	fstr		5914908	0					
ANR	5915209	AdditiveExpression	p - fmt		5914908	1		-			
ANR	5915210	Identifier	p		5914908	0					
ANR	5915211	Identifier	fmt		5914908	1					
ANR	5915212	PrimaryExpression	0		5914908	1					
ANR	5915213	ExpressionStatement	"format2 = grub_strtoul ( fstr , 0 , 10 )"	736:4:13180:13216	5914908	3	True				
ANR	5915214	AssignmentExpression	"format2 = grub_strtoul ( fstr , 0 , 10 )"		5914908	0		=			
ANR	5915215	Identifier	format2		5914908	0					
ANR	5915216	CallExpression	"grub_strtoul ( fstr , 0 , 10 )"		5914908	1					
ANR	5915217	Callee	grub_strtoul		5914908	0					
ANR	5915218	Identifier	grub_strtoul		5914908	0					
ANR	5915219	ArgumentList	fstr		5914908	1					
ANR	5915220	Argument	fstr		5914908	0					
ANR	5915221	Identifier	fstr		5914908	0					
ANR	5915222	Argument	0		5914908	1					
ANR	5915223	PrimaryExpression	0		5914908	0					
ANR	5915224	Argument	10		5914908	2					
ANR	5915225	PrimaryExpression	10		5914908	0					
ANR	5915226	ExpressionStatement	fmt = p	737:4:13222:13229	5914908	4	True				
ANR	5915227	AssignmentExpression	fmt = p		5914908	0		=			
ANR	5915228	Identifier	fmt		5914908	0					
ANR	5915229	Identifier	p		5914908	1					
ANR	5915230	ExpressionStatement	c = * fmt ++	741:3:13246:13256	5914908	15	True				
ANR	5915231	AssignmentExpression	c = * fmt ++		5914908	0		=			
ANR	5915232	Identifier	c		5914908	0					
ANR	5915233	UnaryOperationExpression	* fmt ++		5914908	1					
ANR	5915234	UnaryOperator	*		5914908	0					
ANR	5915235	PostIncDecOperationExpression	fmt ++		5914908	1					
ANR	5915236	Identifier	fmt		5914908	0					
ANR	5915237	IncDec	++		5914908	1					
ANR	5915238	IfStatement	if ( c == 'l' )		5914908	16					
ANR	5915239	Condition	c == 'l'	742:7:13265:13272	5914908	0	True				
ANR	5915240	EqualityExpression	c == 'l'		5914908	0		==			
ANR	5915241	Identifier	c		5914908	0					
ANR	5915242	PrimaryExpression	'l'		5914908	1					
ANR	5915243	CompoundStatement		75:5:1263:1263	5914908	1					
ANR	5915244	ExpressionStatement	longfmt = 1	744:7:13289:13300	5914908	0	True				
ANR	5915245	AssignmentExpression	longfmt = 1		5914908	0		=			
ANR	5915246	Identifier	longfmt		5914908	0					
ANR	5915247	PrimaryExpression	1		5914908	1					
ANR	5915248	ExpressionStatement	c = * fmt ++	745:7:13309:13319	5914908	1	True				
ANR	5915249	AssignmentExpression	c = * fmt ++		5914908	0		=			
ANR	5915250	Identifier	c		5914908	0					
ANR	5915251	UnaryOperationExpression	* fmt ++		5914908	1					
ANR	5915252	UnaryOperator	*		5914908	0					
ANR	5915253	PostIncDecOperationExpression	fmt ++		5914908	1					
ANR	5915254	Identifier	fmt		5914908	0					
ANR	5915255	IncDec	++		5914908	1					
ANR	5915256	IfStatement	if ( c == 'l' )		5914908	2					
ANR	5915257	Condition	c == 'l'	746:11:13332:13339	5914908	0	True				
ANR	5915258	EqualityExpression	c == 'l'		5914908	0		==			
ANR	5915259	Identifier	c		5914908	0					
ANR	5915260	PrimaryExpression	'l'		5914908	1					
ANR	5915261	CompoundStatement		79:2:1327:1327	5914908	1					
ANR	5915262	ExpressionStatement	longlongfmt = 1	748:4:13350:13365	5914908	0	True				
ANR	5915263	AssignmentExpression	longlongfmt = 1		5914908	0		=			
ANR	5915264	Identifier	longlongfmt		5914908	0					
ANR	5915265	PrimaryExpression	1		5914908	1					
ANR	5915266	ExpressionStatement	c = * fmt ++	749:4:13371:13381	5914908	1	True				
ANR	5915267	AssignmentExpression	c = * fmt ++		5914908	0		=			
ANR	5915268	Identifier	c		5914908	0					
ANR	5915269	UnaryOperationExpression	* fmt ++		5914908	1					
ANR	5915270	UnaryOperator	*		5914908	0					
ANR	5915271	PostIncDecOperationExpression	fmt ++		5914908	1					
ANR	5915272	Identifier	fmt		5914908	0					
ANR	5915273	IncDec	++		5914908	1					
ANR	5915274	SwitchStatement	switch ( c )		5914908	17					
ANR	5915275	Condition	c	753:11:13406:13406	5914908	0	True				
ANR	5915276	Identifier	c		5914908	0					
ANR	5915277	CompoundStatement		86:5:1397:1397	5914908	1					
ANR	5915278	Label	case 'p' :	755:5:13421:13429	5914908	0	True				
ANR	5915279	ExpressionStatement	"write_str ( ""0x"" , & cc )"	756:7:13438:13459	5914908	1	True				
ANR	5915280	CallExpression	"write_str ( ""0x"" , & cc )"		5914908	0					
ANR	5915281	Callee	write_str		5914908	0					
ANR	5915282	Identifier	write_str		5914908	0					
ANR	5915283	ArgumentList	"""0x"""		5914908	1					
ANR	5915284	Argument	"""0x"""		5914908	0					
ANR	5915285	PrimaryExpression	"""0x"""		5914908	0					
ANR	5915286	Argument	& cc		5914908	1					
ANR	5915287	UnaryOperationExpression	& cc		5914908	0					
ANR	5915288	UnaryOperator	&		5914908	0					
ANR	5915289	Identifier	cc		5914908	1					
ANR	5915290	ExpressionStatement	c = 'x'	757:7:13468:13475	5914908	2	True				
ANR	5915291	AssignmentExpression	c = 'x'		5914908	0		=			
ANR	5915292	Identifier	c		5914908	0					
ANR	5915293	PrimaryExpression	'x'		5914908	1					
ANR	5915294	ExpressionStatement	longlongfmt |= ( sizeof ( void * ) == sizeof ( long long ) )	758:7:13484:13538	5914908	3	True				
ANR	5915295	AssignmentExpression	longlongfmt |= ( sizeof ( void * ) == sizeof ( long long ) )		5914908	0		|=			
ANR	5915296	Identifier	longlongfmt		5914908	0					
ANR	5915297	EqualityExpression	sizeof ( void * ) == sizeof ( long long )		5914908	1		==			
ANR	5915298	SizeofExpression	sizeof ( void * )		5914908	0					
ANR	5915299	Sizeof	sizeof		5914908	0					
ANR	5915300	SizeofOperand	void *		5914908	1					
ANR	5915301	SizeofExpression	sizeof ( long long )		5914908	1					
ANR	5915302	Sizeof	sizeof		5914908	0					
ANR	5915303	SizeofOperand	long long		5914908	1					
ANR	5915304	Label	case 'x' :	760:5:13572:13580	5914908	4	True				
ANR	5915305	Label	case 'u' :	761:5:13587:13595	5914908	5	True				
ANR	5915306	ExpressionStatement	unsig = 1	762:7:13604:13613	5914908	6	True				
ANR	5915307	AssignmentExpression	unsig = 1		5914908	0		=			
ANR	5915308	Identifier	unsig		5914908	0					
ANR	5915309	PrimaryExpression	1		5914908	1					
ANR	5915310	Label	case 'd' :	764:5:13647:13655	5914908	7	True				
ANR	5915311	IfStatement	if ( longlongfmt )		5914908	8					
ANR	5915312	Condition	longlongfmt	765:11:13668:13678	5914908	0	True				
ANR	5915313	Identifier	longlongfmt		5914908	0					
ANR	5915314	CompoundStatement		99:4:1672:1684	5914908	1					
ANR	5915315	IdentifierDeclStatement	long long ll ;	767:4:13689:13701	5914908	0	True				
ANR	5915316	IdentifierDecl	ll		5914908	0					
ANR	5915317	IdentifierDeclType	long long		5914908	0					
ANR	5915318	Identifier	ll		5914908	1					
ANR	5915319	Statement	ll	769:4:13708:13709	5914908	1	True				
ANR	5915320	Statement	=	769:7:13711:13711	5914908	2	True				
ANR	5915321	Statement	va_arg	769:9:13713:13718	5914908	3	True				
ANR	5915322	Statement	(	769:16:13720:13720	5914908	4	True				
ANR	5915323	Statement	args	769:17:13721:13724	5914908	5	True				
ANR	5915324	Statement	","	769:21:13725:13725	5914908	6	True				
ANR	5915325	Statement	long	769:23:13727:13730	5914908	7	True				
ANR	5915326	Statement	long	769:28:13732:13735	5914908	8	True				
ANR	5915327	Statement	)	769:32:13736:13736	5914908	9	True				
ANR	5915328	ExpressionStatement		769:33:13737:13737	5914908	10	True				
ANR	5915329	ExpressionStatement	"grub_lltoa ( tmp , c , ll )"	770:4:13743:13766	5914908	11	True				
ANR	5915330	CallExpression	"grub_lltoa ( tmp , c , ll )"		5914908	0					
ANR	5915331	Callee	grub_lltoa		5914908	0					
ANR	5915332	Identifier	grub_lltoa		5914908	0					
ANR	5915333	ArgumentList	tmp		5914908	1					
ANR	5915334	Argument	tmp		5914908	0					
ANR	5915335	Identifier	tmp		5914908	0					
ANR	5915336	Argument	c		5914908	1					
ANR	5915337	Identifier	c		5914908	0					
ANR	5915338	Argument	ll		5914908	2					
ANR	5915339	Identifier	ll		5914908	0					
ANR	5915340	ElseStatement	else		5914908	0					
ANR	5915341	IfStatement	if ( longfmt && unsig )		5914908	0					
ANR	5915342	Condition	longfmt && unsig	772:16:13788:13803	5914908	0	True				
ANR	5915343	AndExpression	longfmt && unsig		5914908	0		&&			
ANR	5915344	Identifier	longfmt		5914908	0					
ANR	5915345	Identifier	unsig		5914908	1					
ANR	5915346	CompoundStatement		105:2:1791:1791	5914908	1					
ANR	5915347	Statement	unsigned	774:4:13814:13821	5914908	0	True				
ANR	5915348	Statement	long	774:13:13823:13826	5914908	1	True				
ANR	5915349	Statement	l	774:18:13828:13828	5914908	2	True				
ANR	5915350	Statement	=	774:20:13830:13830	5914908	3	True				
ANR	5915351	Statement	va_arg	774:22:13832:13837	5914908	4	True				
ANR	5915352	Statement	(	774:29:13839:13839	5914908	5	True				
ANR	5915353	Statement	args	774:30:13840:13843	5914908	6	True				
ANR	5915354	Statement	","	774:34:13844:13844	5914908	7	True				
ANR	5915355	Statement	unsigned	774:36:13846:13853	5914908	8	True				
ANR	5915356	Statement	long	774:45:13855:13858	5914908	9	True				
ANR	5915357	Statement	)	774:49:13859:13859	5914908	10	True				
ANR	5915358	ExpressionStatement		774:50:13860:13860	5914908	11	True				
ANR	5915359	ExpressionStatement	"grub_lltoa ( tmp , c , l )"	775:4:13866:13888	5914908	12	True				
ANR	5915360	CallExpression	"grub_lltoa ( tmp , c , l )"		5914908	0					
ANR	5915361	Callee	grub_lltoa		5914908	0					
ANR	5915362	Identifier	grub_lltoa		5914908	0					
ANR	5915363	ArgumentList	tmp		5914908	1					
ANR	5915364	Argument	tmp		5914908	0					
ANR	5915365	Identifier	tmp		5914908	0					
ANR	5915366	Argument	c		5914908	1					
ANR	5915367	Identifier	c		5914908	0					
ANR	5915368	Argument	l		5914908	2					
ANR	5915369	Identifier	l		5914908	0					
ANR	5915370	ElseStatement	else		5914908	0					
ANR	5915371	IfStatement	if ( longfmt )		5914908	0					
ANR	5915372	Condition	longfmt	777:16:13910:13916	5914908	0	True				
ANR	5915373	Identifier	longfmt		5914908	0					
ANR	5915374	CompoundStatement		110:2:1904:1904	5914908	1					
ANR	5915375	Statement	long	779:4:13927:13930	5914908	0	True				
ANR	5915376	Statement	l	779:9:13932:13932	5914908	1	True				
ANR	5915377	Statement	=	779:11:13934:13934	5914908	2	True				
ANR	5915378	Statement	va_arg	779:13:13936:13941	5914908	3	True				
ANR	5915379	Statement	(	779:20:13943:13943	5914908	4	True				
ANR	5915380	Statement	args	779:21:13944:13947	5914908	5	True				
ANR	5915381	Statement	","	779:25:13948:13948	5914908	6	True				
ANR	5915382	Statement	long	779:27:13950:13953	5914908	7	True				
ANR	5915383	Statement	)	779:31:13954:13954	5914908	8	True				
ANR	5915384	ExpressionStatement		779:32:13955:13955	5914908	9	True				
ANR	5915385	ExpressionStatement	"grub_lltoa ( tmp , c , l )"	780:4:13961:13983	5914908	10	True				
ANR	5915386	CallExpression	"grub_lltoa ( tmp , c , l )"		5914908	0					
ANR	5915387	Callee	grub_lltoa		5914908	0					
ANR	5915388	Identifier	grub_lltoa		5914908	0					
ANR	5915389	ArgumentList	tmp		5914908	1					
ANR	5915390	Argument	tmp		5914908	0					
ANR	5915391	Identifier	tmp		5914908	0					
ANR	5915392	Argument	c		5914908	1					
ANR	5915393	Identifier	c		5914908	0					
ANR	5915394	Argument	l		5914908	2					
ANR	5915395	Identifier	l		5914908	0					
ANR	5915396	ElseStatement	else		5914908	0					
ANR	5915397	IfStatement	if ( unsig )		5914908	0					
ANR	5915398	Condition	unsig	782:16:14005:14009	5914908	0	True				
ANR	5915399	Identifier	unsig		5914908	0					
ANR	5915400	CompoundStatement		115:2:1997:1997	5914908	1					
ANR	5915401	Statement	unsigned	784:4:14020:14027	5914908	0	True				
ANR	5915402	Statement	u	784:13:14029:14029	5914908	1	True				
ANR	5915403	Statement	=	784:15:14031:14031	5914908	2	True				
ANR	5915404	Statement	va_arg	784:17:14033:14038	5914908	3	True				
ANR	5915405	Statement	(	784:24:14040:14040	5914908	4	True				
ANR	5915406	Statement	args	784:25:14041:14044	5914908	5	True				
ANR	5915407	Statement	","	784:29:14045:14045	5914908	6	True				
ANR	5915408	Statement	unsigned	784:31:14047:14054	5914908	7	True				
ANR	5915409	Statement	)	784:39:14055:14055	5914908	8	True				
ANR	5915410	ExpressionStatement		784:40:14056:14056	5914908	9	True				
ANR	5915411	ExpressionStatement	"grub_lltoa ( tmp , c , u )"	785:4:14062:14084	5914908	10	True				
ANR	5915412	CallExpression	"grub_lltoa ( tmp , c , u )"		5914908	0					
ANR	5915413	Callee	grub_lltoa		5914908	0					
ANR	5915414	Identifier	grub_lltoa		5914908	0					
ANR	5915415	ArgumentList	tmp		5914908	1					
ANR	5915416	Argument	tmp		5914908	0					
ANR	5915417	Identifier	tmp		5914908	0					
ANR	5915418	Argument	c		5914908	1					
ANR	5915419	Identifier	c		5914908	0					
ANR	5915420	Argument	u		5914908	2					
ANR	5915421	Identifier	u		5914908	0					
ANR	5915422	ElseStatement	else		5914908	0					
ANR	5915423	CompoundStatement		120:2:2087:2087	5914908	0					
ANR	5915424	ExpressionStatement	"n = va_arg ( args , int )"	789:4:14110:14132	5914908	0	True				
ANR	5915425	AssignmentExpression	"n = va_arg ( args , int )"		5914908	0		=			
ANR	5915426	Identifier	n		5914908	0					
ANR	5915427	CallExpression	"va_arg ( args , int )"		5914908	1					
ANR	5915428	Callee	va_arg		5914908	0					
ANR	5915429	Identifier	va_arg		5914908	0					
ANR	5915430	ArgumentList	args		5914908	1					
ANR	5915431	Argument	args		5914908	0					
ANR	5915432	Identifier	args		5914908	0					
ANR	5915433	Argument	int		5914908	1					
ANR	5915434	Identifier	int		5914908	0					
ANR	5915435	ExpressionStatement	"grub_lltoa ( tmp , c , n )"	790:4:14138:14160	5914908	1	True				
ANR	5915436	CallExpression	"grub_lltoa ( tmp , c , n )"		5914908	0					
ANR	5915437	Callee	grub_lltoa		5914908	0					
ANR	5915438	Identifier	grub_lltoa		5914908	0					
ANR	5915439	ArgumentList	tmp		5914908	1					
ANR	5915440	Argument	tmp		5914908	0					
ANR	5915441	Identifier	tmp		5914908	0					
ANR	5915442	Argument	c		5914908	1					
ANR	5915443	Identifier	c		5914908	0					
ANR	5915444	Argument	n		5914908	2					
ANR	5915445	Identifier	n		5914908	0					
ANR	5915446	IfStatement	if ( ! rightfill && grub_strlen ( tmp ) < format1 )		5914908	9					
ANR	5915447	Condition	! rightfill && grub_strlen ( tmp ) < format1	792:11:14177:14218	5914908	0	True				
ANR	5915448	AndExpression	! rightfill && grub_strlen ( tmp ) < format1		5914908	0		&&			
ANR	5915449	UnaryOperationExpression	! rightfill		5914908	0					
ANR	5915450	UnaryOperator	!		5914908	0					
ANR	5915451	Identifier	rightfill		5914908	1					
ANR	5915452	RelationalExpression	grub_strlen ( tmp ) < format1		5914908	1		<			
ANR	5915453	CallExpression	grub_strlen ( tmp )		5914908	0					
ANR	5915454	Callee	grub_strlen		5914908	0					
ANR	5915455	Identifier	grub_strlen		5914908	0					
ANR	5915456	ArgumentList	tmp		5914908	1					
ANR	5915457	Argument	tmp		5914908	0					
ANR	5915458	Identifier	tmp		5914908	0					
ANR	5915459	Identifier	format1		5914908	1					
ANR	5915460	ExpressionStatement	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"	793:2:14223:14278	5914908	1	True				
ANR	5915461	CallExpression	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"		5914908	0					
ANR	5915462	Callee	write_fill		5914908	0					
ANR	5915463	Identifier	write_fill		5914908	0					
ANR	5915464	ArgumentList	zerofill		5914908	1					
ANR	5915465	Argument	zerofill		5914908	0					
ANR	5915466	Identifier	zerofill		5914908	0					
ANR	5915467	Argument	format1 - grub_strlen ( tmp )		5914908	1					
ANR	5915468	AdditiveExpression	format1 - grub_strlen ( tmp )		5914908	0		-			
ANR	5915469	Identifier	format1		5914908	0					
ANR	5915470	CallExpression	grub_strlen ( tmp )		5914908	1					
ANR	5915471	Callee	grub_strlen		5914908	0					
ANR	5915472	Identifier	grub_strlen		5914908	0					
ANR	5915473	ArgumentList	tmp		5914908	1					
ANR	5915474	Argument	tmp		5914908	0					
ANR	5915475	Identifier	tmp		5914908	0					
ANR	5915476	Argument	& cc		5914908	2					
ANR	5915477	UnaryOperationExpression	& cc		5914908	0					
ANR	5915478	UnaryOperator	&		5914908	0					
ANR	5915479	Identifier	cc		5914908	1					
ANR	5915480	ExpressionStatement	"write_str ( tmp , & cc )"	794:7:14287:14307	5914908	10	True				
ANR	5915481	CallExpression	"write_str ( tmp , & cc )"		5914908	0					
ANR	5915482	Callee	write_str		5914908	0					
ANR	5915483	Identifier	write_str		5914908	0					
ANR	5915484	ArgumentList	tmp		5914908	1					
ANR	5915485	Argument	tmp		5914908	0					
ANR	5915486	Identifier	tmp		5914908	0					
ANR	5915487	Argument	& cc		5914908	1					
ANR	5915488	UnaryOperationExpression	& cc		5914908	0					
ANR	5915489	UnaryOperator	&		5914908	0					
ANR	5915490	Identifier	cc		5914908	1					
ANR	5915491	IfStatement	if ( rightfill && grub_strlen ( tmp ) < format1 )		5914908	11					
ANR	5915492	Condition	rightfill && grub_strlen ( tmp ) < format1	795:11:14320:14359	5914908	0	True				
ANR	5915493	AndExpression	rightfill && grub_strlen ( tmp ) < format1		5914908	0		&&			
ANR	5915494	Identifier	rightfill		5914908	0					
ANR	5915495	RelationalExpression	grub_strlen ( tmp ) < format1		5914908	1		<			
ANR	5915496	CallExpression	grub_strlen ( tmp )		5914908	0					
ANR	5915497	Callee	grub_strlen		5914908	0					
ANR	5915498	Identifier	grub_strlen		5914908	0					
ANR	5915499	ArgumentList	tmp		5914908	1					
ANR	5915500	Argument	tmp		5914908	0					
ANR	5915501	Identifier	tmp		5914908	0					
ANR	5915502	Identifier	format1		5914908	1					
ANR	5915503	ExpressionStatement	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"	796:2:14364:14419	5914908	1	True				
ANR	5915504	CallExpression	"write_fill ( zerofill , format1 - grub_strlen ( tmp ) , & cc )"		5914908	0					
ANR	5915505	Callee	write_fill		5914908	0					
ANR	5915506	Identifier	write_fill		5914908	0					
ANR	5915507	ArgumentList	zerofill		5914908	1					
ANR	5915508	Argument	zerofill		5914908	0					
ANR	5915509	Identifier	zerofill		5914908	0					
ANR	5915510	Argument	format1 - grub_strlen ( tmp )		5914908	1					
ANR	5915511	AdditiveExpression	format1 - grub_strlen ( tmp )		5914908	0		-			
ANR	5915512	Identifier	format1		5914908	0					
ANR	5915513	CallExpression	grub_strlen ( tmp )		5914908	1					
ANR	5915514	Callee	grub_strlen		5914908	0					
ANR	5915515	Identifier	grub_strlen		5914908	0					
ANR	5915516	ArgumentList	tmp		5914908	1					
ANR	5915517	Argument	tmp		5914908	0					
ANR	5915518	Identifier	tmp		5914908	0					
ANR	5915519	Argument	& cc		5914908	2					
ANR	5915520	UnaryOperationExpression	& cc		5914908	0					
ANR	5915521	UnaryOperator	&		5914908	0					
ANR	5915522	Identifier	cc		5914908	1					
ANR	5915523	BreakStatement	break ;	797:7:14428:14433	5914908	12	True				
ANR	5915524	Label	case 'c' :	799:5:14441:14449	5914908	13	True				
ANR	5915525	ExpressionStatement	"n = va_arg ( args , int )"	800:7:14458:14480	5914908	14	True				
ANR	5915526	AssignmentExpression	"n = va_arg ( args , int )"		5914908	0		=			
ANR	5915527	Identifier	n		5914908	0					
ANR	5915528	CallExpression	"va_arg ( args , int )"		5914908	1					
ANR	5915529	Callee	va_arg		5914908	0					
ANR	5915530	Identifier	va_arg		5914908	0					
ANR	5915531	ArgumentList	args		5914908	1					
ANR	5915532	Argument	args		5914908	0					
ANR	5915533	Identifier	args		5914908	0					
ANR	5915534	Argument	int		5914908	1					
ANR	5915535	Identifier	int		5914908	0					
ANR	5915536	ExpressionStatement	"write_char ( n & 0xff , & cc )"	801:7:14489:14515	5914908	15	True				
ANR	5915537	CallExpression	"write_char ( n & 0xff , & cc )"		5914908	0					
ANR	5915538	Callee	write_char		5914908	0					
ANR	5915539	Identifier	write_char		5914908	0					
ANR	5915540	ArgumentList	n & 0xff		5914908	1					
ANR	5915541	Argument	n & 0xff		5914908	0					
ANR	5915542	BitAndExpression	n & 0xff		5914908	0		&			
ANR	5915543	Identifier	n		5914908	0					
ANR	5915544	PrimaryExpression	0xff		5914908	1					
ANR	5915545	Argument	& cc		5914908	1					
ANR	5915546	UnaryOperationExpression	& cc		5914908	0					
ANR	5915547	UnaryOperator	&		5914908	0					
ANR	5915548	Identifier	cc		5914908	1					
ANR	5915549	BreakStatement	break ;	802:7:14524:14529	5914908	16	True				
ANR	5915550	Label	case 'C' :	804:5:14537:14545	5914908	17	True				
ANR	5915551	CompoundStatement		140:2:2607:2620	5914908	18					
ANR	5915552	IdentifierDeclStatement	"grub_uint32_t code = va_arg ( args , grub_uint32_t ) ;"	806:2:14558:14607	5914908	0	True				
ANR	5915553	IdentifierDecl	"code = va_arg ( args , grub_uint32_t )"		5914908	0					
ANR	5915554	IdentifierDeclType	grub_uint32_t		5914908	0					
ANR	5915555	Identifier	code		5914908	1					
ANR	5915556	AssignmentExpression	"code = va_arg ( args , grub_uint32_t )"		5914908	2		=			
ANR	5915557	Identifier	code		5914908	0					
ANR	5915558	CallExpression	"va_arg ( args , grub_uint32_t )"		5914908	1					
ANR	5915559	Callee	va_arg		5914908	0					
ANR	5915560	Identifier	va_arg		5914908	0					
ANR	5915561	ArgumentList	args		5914908	1					
ANR	5915562	Argument	args		5914908	0					
ANR	5915563	Identifier	args		5914908	0					
ANR	5915564	Argument	grub_uint32_t		5914908	1					
ANR	5915565	Identifier	grub_uint32_t		5914908	0					
ANR	5915566	IdentifierDeclStatement	int shift ;	807:2:14611:14620	5914908	1	True				
ANR	5915567	IdentifierDecl	shift		5914908	0					
ANR	5915568	IdentifierDeclType	int		5914908	0					
ANR	5915569	Identifier	shift		5914908	1					
ANR	5915570	IdentifierDeclStatement	unsigned mask ;	808:2:14624:14637	5914908	2	True				
ANR	5915571	IdentifierDecl	mask		5914908	0					
ANR	5915572	IdentifierDeclType	unsigned		5914908	0					
ANR	5915573	Identifier	mask		5914908	1					
ANR	5915574	IfStatement	if ( code <= 0x7f )		5914908	3					
ANR	5915575	Condition	code <= 0x7f	810:6:14646:14657	5914908	0	True				
ANR	5915576	RelationalExpression	code <= 0x7f		5914908	0		<=			
ANR	5915577	Identifier	code		5914908	0					
ANR	5915578	PrimaryExpression	0x7f		5914908	1					
ANR	5915579	CompoundStatement		143:4:2647:2647	5914908	1					
ANR	5915580	ExpressionStatement	shift = 0	812:6:14672:14681	5914908	0	True				
ANR	5915581	AssignmentExpression	shift = 0		5914908	0		=			
ANR	5915582	Identifier	shift		5914908	0					
ANR	5915583	PrimaryExpression	0		5914908	1					
ANR	5915584	ExpressionStatement	mask = 0	813:6:14689:14697	5914908	1	True				
ANR	5915585	AssignmentExpression	mask = 0		5914908	0		=			
ANR	5915586	Identifier	mask		5914908	0					
ANR	5915587	PrimaryExpression	0		5914908	1					
ANR	5915588	ElseStatement	else		5914908	0					
ANR	5915589	IfStatement	if ( code <= 0x7ff )		5914908	0					
ANR	5915590	Condition	code <= 0x7ff	815:11:14716:14728	5914908	0	True				
ANR	5915591	RelationalExpression	code <= 0x7ff		5914908	0		<=			
ANR	5915592	Identifier	code		5914908	0					
ANR	5915593	PrimaryExpression	0x7ff		5914908	1					
ANR	5915594	CompoundStatement		148:4:2718:2718	5914908	1					
ANR	5915595	ExpressionStatement	shift = 6	817:6:14743:14752	5914908	0	True				
ANR	5915596	AssignmentExpression	shift = 6		5914908	0		=			
ANR	5915597	Identifier	shift		5914908	0					
ANR	5915598	PrimaryExpression	6		5914908	1					
ANR	5915599	ExpressionStatement	mask = 0xc0	818:6:14760:14771	5914908	1	True				
ANR	5915600	AssignmentExpression	mask = 0xc0		5914908	0		=			
ANR	5915601	Identifier	mask		5914908	0					
ANR	5915602	PrimaryExpression	0xc0		5914908	1					
ANR	5915603	ElseStatement	else		5914908	0					
ANR	5915604	IfStatement	if ( code <= 0xffff )		5914908	0					
ANR	5915605	Condition	code <= 0xffff	820:11:14790:14803	5914908	0	True				
ANR	5915606	RelationalExpression	code <= 0xffff		5914908	0		<=			
ANR	5915607	Identifier	code		5914908	0					
ANR	5915608	PrimaryExpression	0xffff		5914908	1					
ANR	5915609	CompoundStatement		153:4:2793:2793	5914908	1					
ANR	5915610	ExpressionStatement	shift = 12	822:6:14818:14828	5914908	0	True				
ANR	5915611	AssignmentExpression	shift = 12		5914908	0		=			
ANR	5915612	Identifier	shift		5914908	0					
ANR	5915613	PrimaryExpression	12		5914908	1					
ANR	5915614	ExpressionStatement	mask = 0xe0	823:6:14836:14847	5914908	1	True				
ANR	5915615	AssignmentExpression	mask = 0xe0		5914908	0		=			
ANR	5915616	Identifier	mask		5914908	0					
ANR	5915617	PrimaryExpression	0xe0		5914908	1					
ANR	5915618	ElseStatement	else		5914908	0					
ANR	5915619	IfStatement	if ( code <= 0x1fffff )		5914908	0					
ANR	5915620	Condition	code <= 0x1fffff	825:11:14866:14881	5914908	0	True				
ANR	5915621	RelationalExpression	code <= 0x1fffff		5914908	0		<=			
ANR	5915622	Identifier	code		5914908	0					
ANR	5915623	PrimaryExpression	0x1fffff		5914908	1					
ANR	5915624	CompoundStatement		158:4:2871:2871	5914908	1					
ANR	5915625	ExpressionStatement	shift = 18	827:6:14896:14906	5914908	0	True				
ANR	5915626	AssignmentExpression	shift = 18		5914908	0		=			
ANR	5915627	Identifier	shift		5914908	0					
ANR	5915628	PrimaryExpression	18		5914908	1					
ANR	5915629	ExpressionStatement	mask = 0xf0	828:6:14914:14925	5914908	1	True				
ANR	5915630	AssignmentExpression	mask = 0xf0		5914908	0		=			
ANR	5915631	Identifier	mask		5914908	0					
ANR	5915632	PrimaryExpression	0xf0		5914908	1					
ANR	5915633	ElseStatement	else		5914908	0					
ANR	5915634	IfStatement	if ( code <= 0x3ffffff )		5914908	0					
ANR	5915635	Condition	code <= 0x3ffffff	830:11:14944:14960	5914908	0	True				
ANR	5915636	RelationalExpression	code <= 0x3ffffff		5914908	0		<=			
ANR	5915637	Identifier	code		5914908	0					
ANR	5915638	PrimaryExpression	0x3ffffff		5914908	1					
ANR	5915639	CompoundStatement		163:4:2950:2950	5914908	1					
ANR	5915640	ExpressionStatement	shift = 24	832:6:14975:14985	5914908	0	True				
ANR	5915641	AssignmentExpression	shift = 24		5914908	0		=			
ANR	5915642	Identifier	shift		5914908	0					
ANR	5915643	PrimaryExpression	24		5914908	1					
ANR	5915644	ExpressionStatement	mask = 0xf8	833:6:14993:15004	5914908	1	True				
ANR	5915645	AssignmentExpression	mask = 0xf8		5914908	0		=			
ANR	5915646	Identifier	mask		5914908	0					
ANR	5915647	PrimaryExpression	0xf8		5914908	1					
ANR	5915648	ElseStatement	else		5914908	0					
ANR	5915649	IfStatement	if ( code <= 0x7fffffff )		5914908	0					
ANR	5915650	Condition	code <= 0x7fffffff	835:11:15023:15040	5914908	0	True				
ANR	5915651	RelationalExpression	code <= 0x7fffffff		5914908	0		<=			
ANR	5915652	Identifier	code		5914908	0					
ANR	5915653	PrimaryExpression	0x7fffffff		5914908	1					
ANR	5915654	CompoundStatement		168:4:3030:3030	5914908	1					
ANR	5915655	ExpressionStatement	shift = 30	837:6:15055:15065	5914908	0	True				
ANR	5915656	AssignmentExpression	shift = 30		5914908	0		=			
ANR	5915657	Identifier	shift		5914908	0					
ANR	5915658	PrimaryExpression	30		5914908	1					
ANR	5915659	ExpressionStatement	mask = 0xfc	838:6:15073:15084	5914908	1	True				
ANR	5915660	AssignmentExpression	mask = 0xfc		5914908	0		=			
ANR	5915661	Identifier	mask		5914908	0					
ANR	5915662	PrimaryExpression	0xfc		5914908	1					
ANR	5915663	ElseStatement	else		5914908	0					
ANR	5915664	CompoundStatement		173:4:3086:3086	5914908	0					
ANR	5915665	ExpressionStatement	code = '?'	842:6:15111:15121	5914908	0	True				
ANR	5915666	AssignmentExpression	code = '?'		5914908	0		=			
ANR	5915667	Identifier	code		5914908	0					
ANR	5915668	PrimaryExpression	'?'		5914908	1					
ANR	5915669	ExpressionStatement	shift = 0	843:6:15129:15138	5914908	1	True				
ANR	5915670	AssignmentExpression	shift = 0		5914908	0		=			
ANR	5915671	Identifier	shift		5914908	0					
ANR	5915672	PrimaryExpression	0		5914908	1					
ANR	5915673	ExpressionStatement	mask = 0	844:6:15146:15154	5914908	2	True				
ANR	5915674	AssignmentExpression	mask = 0		5914908	0		=			
ANR	5915675	Identifier	mask		5914908	0					
ANR	5915676	PrimaryExpression	0		5914908	1					
ANR	5915677	ExpressionStatement	"write_char ( mask | ( code >> shift ) , & cc )"	847:2:15165:15205	5914908	4	True				
ANR	5915678	CallExpression	"write_char ( mask | ( code >> shift ) , & cc )"		5914908	0					
ANR	5915679	Callee	write_char		5914908	0					
ANR	5915680	Identifier	write_char		5914908	0					
ANR	5915681	ArgumentList	mask | ( code >> shift )		5914908	1					
ANR	5915682	Argument	mask | ( code >> shift )		5914908	0					
ANR	5915683	InclusiveOrExpression	mask | ( code >> shift )		5914908	0		|			
ANR	5915684	Identifier	mask		5914908	0					
ANR	5915685	ShiftExpression	code >> shift		5914908	1		>>			
ANR	5915686	Identifier	code		5914908	0					
ANR	5915687	Identifier	shift		5914908	1					
ANR	5915688	Argument	& cc		5914908	1					
ANR	5915689	UnaryOperationExpression	& cc		5914908	0					
ANR	5915690	UnaryOperator	&		5914908	0					
ANR	5915691	Identifier	cc		5914908	1					
ANR	5915692	ForStatement	for ( shift -= 6 ; shift >= 0 ; shift -= 6 )		5914908	5					
ANR	5915693	ForInit	shift -= 6 ;	849:7:15215:15225	5914908	0	True				
ANR	5915694	AssignmentExpression	shift -= 6		5914908	0		-=			
ANR	5915695	Identifier	shift		5914908	0					
ANR	5915696	PrimaryExpression	6		5914908	1					
ANR	5915697	Condition	shift >= 0	849:19:15227:15236	5914908	1	True				
ANR	5915698	RelationalExpression	shift >= 0		5914908	0		>=			
ANR	5915699	Identifier	shift		5914908	0					
ANR	5915700	PrimaryExpression	0		5914908	1					
ANR	5915701	AssignmentExpression	shift -= 6	849:31:15239:15248	5914908	2	True	-=			
ANR	5915702	Identifier	shift		5914908	0					
ANR	5915703	PrimaryExpression	6		5914908	1					
ANR	5915704	ExpressionStatement	"write_char ( 0x80 | ( 0x3f & ( code >> shift ) ) , & cc )"	850:4:15255:15304	5914908	3	True				
ANR	5915705	CallExpression	"write_char ( 0x80 | ( 0x3f & ( code >> shift ) ) , & cc )"		5914908	0					
ANR	5915706	Callee	write_char		5914908	0					
ANR	5915707	Identifier	write_char		5914908	0					
ANR	5915708	ArgumentList	0x80 | ( 0x3f & ( code >> shift ) )		5914908	1					
ANR	5915709	Argument	0x80 | ( 0x3f & ( code >> shift ) )		5914908	0					
ANR	5915710	InclusiveOrExpression	0x80 | ( 0x3f & ( code >> shift ) )		5914908	0		|			
ANR	5915711	PrimaryExpression	0x80		5914908	0					
ANR	5915712	BitAndExpression	0x3f & ( code >> shift )		5914908	1		&			
ANR	5915713	PrimaryExpression	0x3f		5914908	0					
ANR	5915714	ShiftExpression	code >> shift		5914908	1		>>			
ANR	5915715	Identifier	code		5914908	0					
ANR	5915716	Identifier	shift		5914908	1					
ANR	5915717	Argument	& cc		5914908	1					
ANR	5915718	UnaryOperationExpression	& cc		5914908	0					
ANR	5915719	UnaryOperator	&		5914908	0					
ANR	5915720	Identifier	cc		5914908	1					
ANR	5915721	BreakStatement	break ;	852:7:15322:15327	5914908	19	True				
ANR	5915722	Label	case 's' :	854:5:15335:15343	5914908	20	True				
ANR	5915723	Statement	p	855:7:15352:15352	5914908	21	True				
ANR	5915724	Statement	=	855:9:15354:15354	5914908	22	True				
ANR	5915725	Statement	va_arg	855:11:15356:15361	5914908	23	True				
ANR	5915726	Statement	(	855:18:15363:15363	5914908	24	True				
ANR	5915727	Statement	args	855:19:15364:15367	5914908	25	True				
ANR	5915728	Statement	","	855:23:15368:15368	5914908	26	True				
ANR	5915729	Statement	char	855:25:15370:15373	5914908	27	True				
ANR	5915730	Statement	*	855:30:15375:15375	5914908	28	True				
ANR	5915731	Statement	)	855:31:15376:15376	5914908	29	True				
ANR	5915732	ExpressionStatement		855:32:15377:15377	5914908	30	True				
ANR	5915733	IfStatement	if ( p )		5914908	31					
ANR	5915734	Condition	p	856:11:15390:15390	5914908	0	True				
ANR	5915735	Identifier	p		5914908	0					
ANR	5915736	CompoundStatement		197:4:3546:3559	5914908	1					
ANR	5915737	IdentifierDeclStatement	grub_size_t len = 0 ;	858:4:15401:15420	5914908	0	True				
ANR	5915738	IdentifierDecl	len = 0		5914908	0					
ANR	5915739	IdentifierDeclType	grub_size_t		5914908	0					
ANR	5915740	Identifier	len		5914908	1					
ANR	5915741	AssignmentExpression	len = 0		5914908	2		=			
ANR	5915742	Identifier	len		5914908	0					
ANR	5915743	PrimaryExpression	0		5914908	1					
ANR	5915744	WhileStatement	while ( len < format2 && p [ len ] )		5914908	1					
ANR	5915745	Condition	len < format2 && p [ len ]	859:11:15433:15455	5914908	0	True				
ANR	5915746	AndExpression	len < format2 && p [ len ]		5914908	0		&&			
ANR	5915747	RelationalExpression	len < format2		5914908	0		<			
ANR	5915748	Identifier	len		5914908	0					
ANR	5915749	Identifier	format2		5914908	1					
ANR	5915750	ArrayIndexing	p [ len ]		5914908	1					
ANR	5915751	Identifier	p		5914908	0					
ANR	5915752	Identifier	len		5914908	1					
ANR	5915753	ExpressionStatement	len ++	860:6:15464:15469	5914908	1	True				
ANR	5915754	PostIncDecOperationExpression	len ++		5914908	0					
ANR	5915755	Identifier	len		5914908	0					
ANR	5915756	IncDec	++		5914908	1					
ANR	5915757	IfStatement	if ( ! rightfill && len < format1 )		5914908	2					
ANR	5915758	Condition	! rightfill && len < format1	862:8:15480:15506	5914908	0	True				
ANR	5915759	AndExpression	! rightfill && len < format1		5914908	0		&&			
ANR	5915760	UnaryOperationExpression	! rightfill		5914908	0					
ANR	5915761	UnaryOperator	!		5914908	0					
ANR	5915762	Identifier	rightfill		5914908	1					
ANR	5915763	RelationalExpression	len < format1		5914908	1		<			
ANR	5915764	Identifier	len		5914908	0					
ANR	5915765	Identifier	format1		5914908	1					
ANR	5915766	ExpressionStatement	"write_fill ( zerofill , format1 - len , & cc )"	863:6:15515:15556	5914908	1	True				
ANR	5915767	CallExpression	"write_fill ( zerofill , format1 - len , & cc )"		5914908	0					
ANR	5915768	Callee	write_fill		5914908	0					
ANR	5915769	Identifier	write_fill		5914908	0					
ANR	5915770	ArgumentList	zerofill		5914908	1					
ANR	5915771	Argument	zerofill		5914908	0					
ANR	5915772	Identifier	zerofill		5914908	0					
ANR	5915773	Argument	format1 - len		5914908	1					
ANR	5915774	AdditiveExpression	format1 - len		5914908	0		-			
ANR	5915775	Identifier	format1		5914908	0					
ANR	5915776	Identifier	len		5914908	1					
ANR	5915777	Argument	& cc		5914908	2					
ANR	5915778	UnaryOperationExpression	& cc		5914908	0					
ANR	5915779	UnaryOperator	&		5914908	0					
ANR	5915780	Identifier	cc		5914908	1					
ANR	5915781	IdentifierDeclStatement	grub_size_t i ;	865:4:15563:15576	5914908	3	True				
ANR	5915782	IdentifierDecl	i		5914908	0					
ANR	5915783	IdentifierDeclType	grub_size_t		5914908	0					
ANR	5915784	Identifier	i		5914908	1					
ANR	5915785	ForStatement	for ( i = 0 ; i < len ; i ++ )		5914908	4					
ANR	5915786	ForInit	i = 0 ;	866:9:15587:15592	5914908	0	True				
ANR	5915787	AssignmentExpression	i = 0		5914908	0		=			
ANR	5915788	Identifier	i		5914908	0					
ANR	5915789	PrimaryExpression	0		5914908	1					
ANR	5915790	Condition	i < len	866:16:15594:15600	5914908	1	True				
ANR	5915791	RelationalExpression	i < len		5914908	0		<			
ANR	5915792	Identifier	i		5914908	0					
ANR	5915793	Identifier	len		5914908	1					
ANR	5915794	PostIncDecOperationExpression	i ++	866:25:15603:15605	5914908	2	True				
ANR	5915795	Identifier	i		5914908	0					
ANR	5915796	IncDec	++		5914908	1					
ANR	5915797	ExpressionStatement	"write_char ( * p ++ , & cc )"	867:6:15614:15636	5914908	3	True				
ANR	5915798	CallExpression	"write_char ( * p ++ , & cc )"		5914908	0					
ANR	5915799	Callee	write_char		5914908	0					
ANR	5915800	Identifier	write_char		5914908	0					
ANR	5915801	ArgumentList	* p ++		5914908	1					
ANR	5915802	Argument	* p ++		5914908	0					
ANR	5915803	UnaryOperationExpression	* p ++		5914908	0					
ANR	5915804	UnaryOperator	*		5914908	0					
ANR	5915805	PostIncDecOperationExpression	p ++		5914908	1					
ANR	5915806	Identifier	p		5914908	0					
ANR	5915807	IncDec	++		5914908	1					
ANR	5915808	Argument	& cc		5914908	1					
ANR	5915809	UnaryOperationExpression	& cc		5914908	0					
ANR	5915810	UnaryOperator	&		5914908	0					
ANR	5915811	Identifier	cc		5914908	1					
ANR	5915812	IfStatement	if ( rightfill && len < format1 )		5914908	5					
ANR	5915813	Condition	rightfill && len < format1	869:8:15647:15672	5914908	0	True				
ANR	5915814	AndExpression	rightfill && len < format1		5914908	0		&&			
ANR	5915815	Identifier	rightfill		5914908	0					
ANR	5915816	RelationalExpression	len < format1		5914908	1		<			
ANR	5915817	Identifier	len		5914908	0					
ANR	5915818	Identifier	format1		5914908	1					
ANR	5915819	ExpressionStatement	"write_fill ( zerofill , format1 - len , & cc )"	870:6:15681:15722	5914908	1	True				
ANR	5915820	CallExpression	"write_fill ( zerofill , format1 - len , & cc )"		5914908	0					
ANR	5915821	Callee	write_fill		5914908	0					
ANR	5915822	Identifier	write_fill		5914908	0					
ANR	5915823	ArgumentList	zerofill		5914908	1					
ANR	5915824	Argument	zerofill		5914908	0					
ANR	5915825	Identifier	zerofill		5914908	0					
ANR	5915826	Argument	format1 - len		5914908	1					
ANR	5915827	AdditiveExpression	format1 - len		5914908	0		-			
ANR	5915828	Identifier	format1		5914908	0					
ANR	5915829	Identifier	len		5914908	1					
ANR	5915830	Argument	& cc		5914908	2					
ANR	5915831	UnaryOperationExpression	& cc		5914908	0					
ANR	5915832	UnaryOperator	&		5914908	0					
ANR	5915833	Identifier	cc		5914908	1					
ANR	5915834	ElseStatement	else		5914908	0					
ANR	5915835	ExpressionStatement	"write_str ( ""(null)"" , & cc )"	873:2:15742:15767	5914908	0	True				
ANR	5915836	CallExpression	"write_str ( ""(null)"" , & cc )"		5914908	0					
ANR	5915837	Callee	write_str		5914908	0					
ANR	5915838	Identifier	write_str		5914908	0					
ANR	5915839	ArgumentList	"""(null)"""		5914908	1					
ANR	5915840	Argument	"""(null)"""		5914908	0					
ANR	5915841	PrimaryExpression	"""(null)"""		5914908	0					
ANR	5915842	Argument	& cc		5914908	1					
ANR	5915843	UnaryOperationExpression	& cc		5914908	0					
ANR	5915844	UnaryOperator	&		5914908	0					
ANR	5915845	Identifier	cc		5914908	1					
ANR	5915846	BreakStatement	break ;	875:7:15777:15782	5914908	32	True				
ANR	5915847	Label	default :	877:5:15790:15797	5914908	33	True				
ANR	5915848	Identifier	default		5914908	0					
ANR	5915849	ExpressionStatement	"write_char ( c , & cc )"	878:7:15806:15825	5914908	34	True				
ANR	5915850	CallExpression	"write_char ( c , & cc )"		5914908	0					
ANR	5915851	Callee	write_char		5914908	0					
ANR	5915852	Identifier	write_char		5914908	0					
ANR	5915853	ArgumentList	c		5914908	1					
ANR	5915854	Argument	c		5914908	0					
ANR	5915855	Identifier	c		5914908	0					
ANR	5915856	Argument	& cc		5914908	1					
ANR	5915857	UnaryOperationExpression	& cc		5914908	0					
ANR	5915858	UnaryOperator	&		5914908	0					
ANR	5915859	Identifier	cc		5914908	1					
ANR	5915860	BreakStatement	break ;	879:7:15834:15839	5914908	35	True				
ANR	5915861	IfStatement	if ( cc . str )		5914908	6					
ANR	5915862	Condition	cc . str	884:6:15864:15869	5914908	0	True				
ANR	5915863	MemberAccess	cc . str		5914908	0					
ANR	5915864	Identifier	cc		5914908	0					
ANR	5915865	Identifier	str		5914908	1					
ANR	5915866	ExpressionStatement	* ( cc . str ) = '\\0'	885:4:15876:15892	5914908	1	True				
ANR	5915867	AssignmentExpression	* ( cc . str ) = '\\0'		5914908	0		=			
ANR	5915868	UnaryOperationExpression	* ( cc . str )		5914908	0					
ANR	5915869	UnaryOperator	*		5914908	0					
ANR	5915870	MemberAccess	cc . str		5914908	1					
ANR	5915871	Identifier	cc		5914908	0					
ANR	5915872	Identifier	str		5914908	1					
ANR	5915873	PrimaryExpression	'\\0'		5914908	1					
ANR	5915874	ReturnStatement	return cc . count ;	887:2:15897:15912	5914908	7	True				
ANR	5915875	MemberAccess	cc . count		5914908	0					
ANR	5915876	Identifier	cc		5914908	0					
ANR	5915877	Identifier	count		5914908	1					
ANR	5915878	ReturnType	static int		5914908	1					
ANR	5915879	Identifier	grub_vsnprintf_real		5914908	2					
ANR	5915880	ParameterList	"char * str , grub_size_t max_len , const char * fmt , va_list args"		5914908	3					
ANR	5915881	Parameter	char * str	668:21:11953:11961	5914908	0	True				
ANR	5915882	ParameterType	char *		5914908	0					
ANR	5915883	Identifier	str		5914908	1					
ANR	5915884	Parameter	grub_size_t max_len	668:32:11964:11982	5914908	1	True				
ANR	5915885	ParameterType	grub_size_t		5914908	0					
ANR	5915886	Identifier	max_len		5914908	1					
ANR	5915887	Parameter	const char * fmt	668:53:11985:11999	5914908	2	True				
ANR	5915888	ParameterType	const char *		5914908	0					
ANR	5915889	Identifier	fmt		5914908	1					
ANR	5915890	Parameter	va_list args	668:70:12002:12013	5914908	3	True				
ANR	5915891	ParameterType	va_list		5914908	0					
ANR	5915892	Identifier	args		5914908	1					
ANR	5915893	CFGEntryNode	ENTRY		5914908		True				
ANR	5915894	CFGExitNode	EXIT		5914908		True				
ANR	5915895	Symbol	ll		5914908						
ANR	5915896	Symbol	grub_strtoul		5914908						
ANR	5915897	Symbol	code		5914908						
ANR	5915898	Symbol	format2		5914908						
ANR	5915899	Symbol	format1		5914908						
ANR	5915900	Symbol	* cc		5914908						
ANR	5915901	Symbol	shift		5914908						
ANR	5915902	Symbol	longlongfmt		5914908						
ANR	5915903	Symbol	* fmt		5914908						
ANR	5915904	Symbol	& cc		5914908						
ANR	5915905	Symbol	fmt		5914908						
ANR	5915906	Symbol	cc . max_len		5914908						
ANR	5915907	Symbol	zerofill		5914908						
ANR	5915908	Symbol	* ( cc . str )		5914908						
ANR	5915909	Symbol	len		5914908						
ANR	5915910	Symbol	tmp		5914908						
ANR	5915911	Symbol	longfmt		5914908						
ANR	5915912	Symbol	grub_strlen		5914908						
ANR	5915913	Symbol	va_arg		5914908						
ANR	5915914	Symbol	rightfill		5914908						
ANR	5915915	Symbol	* cc . str		5914908						
ANR	5915916	Symbol	* fstr		5914908						
ANR	5915917	Symbol	mask		5914908						
ANR	5915918	Symbol	cc		5914908						
ANR	5915919	Symbol	c		5914908						
ANR	5915920	Symbol	* p ++		5914908						
ANR	5915921	Symbol	i		5914908						
ANR	5915922	Symbol	l		5914908						
ANR	5915923	Symbol	n		5914908						
ANR	5915924	Symbol	int		5914908						
ANR	5915925	Symbol	max_len		5914908						
ANR	5915926	Symbol	cc . str		5914908						
ANR	5915927	Symbol	str		5914908						
ANR	5915928	Symbol	args		5914908						
ANR	5915929	Symbol	p		5914908						
ANR	5915930	Symbol	s		5914908						
ANR	5915931	Symbol	* fmt ++		5914908						
ANR	5915932	Symbol	u		5914908						
ANR	5915933	Symbol	grub_uint32_t		5914908						
ANR	5915934	Symbol	cc . count		5914908						
ANR	5915935	Symbol	* p		5914908						
ANR	5915936	Symbol	fstr		5914908						
ANR	5915937	Symbol	unsig		5914908						
ANR	5915938	Symbol	* s		5914908						
ANR	5915939	Symbol	grub_isdigit		5914908						
ANR	5915940	Symbol	* len		5914908						
ANR	5915941	Function	grub_vsnprintf	890:0:15917:16123							
ANR	5915942	FunctionDef	"grub_vsnprintf (char * str , grub_size_t n , const char * fmt , va_list ap)"		5915941	0					
ANR	5915943	CompoundStatement		892:0:15992:16123	5915941	0					
ANR	5915944	IdentifierDeclStatement	grub_size_t ret ;	893:2:15996:16011	5915941	0	True				
ANR	5915945	IdentifierDecl	ret		5915941	0					
ANR	5915946	IdentifierDeclType	grub_size_t		5915941	0					
ANR	5915947	Identifier	ret		5915941	1					
ANR	5915948	IfStatement	if ( ! n )		5915941	1					
ANR	5915949	Condition	! n	895:6:16020:16021	5915941	0	True				
ANR	5915950	UnaryOperationExpression	! n		5915941	0					
ANR	5915951	UnaryOperator	!		5915941	0					
ANR	5915952	Identifier	n		5915941	1					
ANR	5915953	ReturnStatement	return 0 ;	896:4:16028:16036	5915941	1	True				
ANR	5915954	PrimaryExpression	0		5915941	0					
ANR	5915955	ExpressionStatement	n --	898:2:16041:16044	5915941	2	True				
ANR	5915956	PostIncDecOperationExpression	n --		5915941	0					
ANR	5915957	Identifier	n		5915941	0					
ANR	5915958	IncDec	--		5915941	1					
ANR	5915959	ExpressionStatement	"ret = grub_vsnprintf_real ( str , n , fmt , ap )"	900:2:16049:16092	5915941	3	True				
ANR	5915960	AssignmentExpression	"ret = grub_vsnprintf_real ( str , n , fmt , ap )"		5915941	0		=			
ANR	5915961	Identifier	ret		5915941	0					
ANR	5915962	CallExpression	"grub_vsnprintf_real ( str , n , fmt , ap )"		5915941	1					
ANR	5915963	Callee	grub_vsnprintf_real		5915941	0					
ANR	5915964	Identifier	grub_vsnprintf_real		5915941	0					
ANR	5915965	ArgumentList	str		5915941	1					
ANR	5915966	Argument	str		5915941	0					
ANR	5915967	Identifier	str		5915941	0					
ANR	5915968	Argument	n		5915941	1					
ANR	5915969	Identifier	n		5915941	0					
ANR	5915970	Argument	fmt		5915941	2					
ANR	5915971	Identifier	fmt		5915941	0					
ANR	5915972	Argument	ap		5915941	3					
ANR	5915973	Identifier	ap		5915941	0					
ANR	5915974	ReturnStatement	return ret < n ? ret : n ;	902:2:16097:16121	5915941	4	True				
ANR	5915975	ConditionalExpression	ret < n ? ret : n		5915941	0					
ANR	5915976	Condition	ret < n		5915941	0					
ANR	5915977	RelationalExpression	ret < n		5915941	0		<			
ANR	5915978	Identifier	ret		5915941	0					
ANR	5915979	Identifier	n		5915941	1					
ANR	5915980	Identifier	ret		5915941	1					
ANR	5915981	Identifier	n		5915941	2					
ANR	5915982	ReturnType	int		5915941	1					
ANR	5915983	Identifier	grub_vsnprintf		5915941	2					
ANR	5915984	ParameterList	"char * str , grub_size_t n , const char * fmt , va_list ap"		5915941	3					
ANR	5915985	Parameter	char * str	891:16:15937:15945	5915941	0	True				
ANR	5915986	ParameterType	char *		5915941	0					
ANR	5915987	Identifier	str		5915941	1					
ANR	5915988	Parameter	grub_size_t n	891:27:15948:15960	5915941	1	True				
ANR	5915989	ParameterType	grub_size_t		5915941	0					
ANR	5915990	Identifier	n		5915941	1					
ANR	5915991	Parameter	const char * fmt	891:42:15963:15977	5915941	2	True				
ANR	5915992	ParameterType	const char *		5915941	0					
ANR	5915993	Identifier	fmt		5915941	1					
ANR	5915994	Parameter	va_list ap	891:59:15980:15989	5915941	3	True				
ANR	5915995	ParameterType	va_list		5915941	0					
ANR	5915996	Identifier	ap		5915941	1					
ANR	5915997	CFGEntryNode	ENTRY		5915941		True				
ANR	5915998	CFGExitNode	EXIT		5915941		True				
ANR	5915999	Symbol	str		5915941						
ANR	5916000	Symbol	ret		5915941						
ANR	5916001	Symbol	grub_vsnprintf_real		5915941						
ANR	5916002	Symbol	fmt		5915941						
ANR	5916003	Symbol	n		5915941						
ANR	5916004	Symbol	ap		5915941						
ANR	5916005	Function	grub_snprintf	905:0:16126:16315							
ANR	5916006	FunctionDef	"grub_snprintf (char * str , grub_size_t n , const char * fmt)"		5916005	0					
ANR	5916007	CompoundStatement		907:0:16193:16315	5916005	0					
ANR	5916008	IdentifierDeclStatement	va_list ap ;	908:2:16197:16207	5916005	0	True				
ANR	5916009	IdentifierDecl	ap		5916005	0					
ANR	5916010	IdentifierDeclType	va_list		5916005	0					
ANR	5916011	Identifier	ap		5916005	1					
ANR	5916012	IdentifierDeclStatement	int ret ;	909:2:16211:16218	5916005	1	True				
ANR	5916013	IdentifierDecl	ret		5916005	0					
ANR	5916014	IdentifierDeclType	int		5916005	0					
ANR	5916015	Identifier	ret		5916005	1					
ANR	5916016	ExpressionStatement	"va_start ( ap , fmt )"	911:2:16223:16241	5916005	2	True				
ANR	5916017	CallExpression	"va_start ( ap , fmt )"		5916005	0					
ANR	5916018	Callee	va_start		5916005	0					
ANR	5916019	Identifier	va_start		5916005	0					
ANR	5916020	ArgumentList	ap		5916005	1					
ANR	5916021	Argument	ap		5916005	0					
ANR	5916022	Identifier	ap		5916005	0					
ANR	5916023	Argument	fmt		5916005	1					
ANR	5916024	Identifier	fmt		5916005	0					
ANR	5916025	ExpressionStatement	"ret = grub_vsnprintf ( str , n , fmt , ap )"	912:2:16245:16283	5916005	3	True				
ANR	5916026	AssignmentExpression	"ret = grub_vsnprintf ( str , n , fmt , ap )"		5916005	0		=			
ANR	5916027	Identifier	ret		5916005	0					
ANR	5916028	CallExpression	"grub_vsnprintf ( str , n , fmt , ap )"		5916005	1					
ANR	5916029	Callee	grub_vsnprintf		5916005	0					
ANR	5916030	Identifier	grub_vsnprintf		5916005	0					
ANR	5916031	ArgumentList	str		5916005	1					
ANR	5916032	Argument	str		5916005	0					
ANR	5916033	Identifier	str		5916005	0					
ANR	5916034	Argument	n		5916005	1					
ANR	5916035	Identifier	n		5916005	0					
ANR	5916036	Argument	fmt		5916005	2					
ANR	5916037	Identifier	fmt		5916005	0					
ANR	5916038	Argument	ap		5916005	3					
ANR	5916039	Identifier	ap		5916005	0					
ANR	5916040	ExpressionStatement	va_end ( ap )	913:2:16287:16298	5916005	4	True				
ANR	5916041	CallExpression	va_end ( ap )		5916005	0					
ANR	5916042	Callee	va_end		5916005	0					
ANR	5916043	Identifier	va_end		5916005	0					
ANR	5916044	ArgumentList	ap		5916005	1					
ANR	5916045	Argument	ap		5916005	0					
ANR	5916046	Identifier	ap		5916005	0					
ANR	5916047	ReturnStatement	return ret ;	915:2:16303:16313	5916005	5	True				
ANR	5916048	Identifier	ret		5916005	0					
ANR	5916049	ReturnType	int		5916005	1					
ANR	5916050	Identifier	grub_snprintf		5916005	2					
ANR	5916051	ParameterList	"char * str , grub_size_t n , const char * fmt"		5916005	3					
ANR	5916052	Parameter	char * str	906:15:16145:16153	5916005	0	True				
ANR	5916053	ParameterType	char *		5916005	0					
ANR	5916054	Identifier	str		5916005	1					
ANR	5916055	Parameter	grub_size_t n	906:26:16156:16168	5916005	1	True				
ANR	5916056	ParameterType	grub_size_t		5916005	0					
ANR	5916057	Identifier	n		5916005	1					
ANR	5916058	Parameter	const char * fmt	906:41:16171:16185	5916005	2	True				
ANR	5916059	ParameterType	const char *		5916005	0					
ANR	5916060	Identifier	fmt		5916005	1					
ANR	5916061	CFGEntryNode	ENTRY		5916005		True				
ANR	5916062	CFGExitNode	EXIT		5916005		True				
ANR	5916063	Symbol	str		5916005						
ANR	5916064	Symbol	ret		5916005						
ANR	5916065	Symbol	grub_vsnprintf		5916005						
ANR	5916066	Symbol	fmt		5916005						
ANR	5916067	Symbol	n		5916005						
ANR	5916068	Symbol	ap		5916005						
ANR	5916069	Function	grub_xvasprintf	920:0:16345:16660							
ANR	5916070	FunctionDef	"grub_xvasprintf (const char * fmt , va_list ap)"		5916069	0					
ANR	5916071	CompoundStatement		922:0:16398:16660	5916069	0					
ANR	5916072	IdentifierDeclStatement	"grub_size_t s , as = PREALLOC_SIZE ;"	923:2:16402:16435	5916069	0	True				
ANR	5916073	IdentifierDecl	s		5916069	0					
ANR	5916074	IdentifierDeclType	grub_size_t		5916069	0					
ANR	5916075	Identifier	s		5916069	1					
ANR	5916076	IdentifierDecl	as = PREALLOC_SIZE		5916069	1					
ANR	5916077	IdentifierDeclType	grub_size_t		5916069	0					
ANR	5916078	Identifier	as		5916069	1					
ANR	5916079	AssignmentExpression	as = PREALLOC_SIZE		5916069	2		=			
ANR	5916080	Identifier	PREALLOC_SIZE		5916069	0					
ANR	5916081	Identifier	PREALLOC_SIZE		5916069	1					
ANR	5916082	IdentifierDeclStatement	char * ret ;	924:2:16439:16448	5916069	1	True				
ANR	5916083	IdentifierDecl	* ret		5916069	0					
ANR	5916084	IdentifierDeclType	char *		5916069	0					
ANR	5916085	Identifier	ret		5916069	1					
ANR	5916086	WhileStatement	while ( 1 )		5916069	2					
ANR	5916087	Condition	1	926:9:16460:16460	5916069	0	True				
ANR	5916088	PrimaryExpression	1		5916069	0					
ANR	5916089	CompoundStatement		6:4:68:68	5916069	1					
ANR	5916090	ExpressionStatement	ret = grub_malloc ( as + 1 )	928:6:16475:16501	5916069	0	True				
ANR	5916091	AssignmentExpression	ret = grub_malloc ( as + 1 )		5916069	0		=			
ANR	5916092	Identifier	ret		5916069	0					
ANR	5916093	CallExpression	grub_malloc ( as + 1 )		5916069	1					
ANR	5916094	Callee	grub_malloc		5916069	0					
ANR	5916095	Identifier	grub_malloc		5916069	0					
ANR	5916096	ArgumentList	as + 1		5916069	1					
ANR	5916097	Argument	as + 1		5916069	0					
ANR	5916098	AdditiveExpression	as + 1		5916069	0		+			
ANR	5916099	Identifier	as		5916069	0					
ANR	5916100	PrimaryExpression	1		5916069	1					
ANR	5916101	IfStatement	if ( ! ret )		5916069	1					
ANR	5916102	Condition	! ret	929:10:16513:16516	5916069	0	True				
ANR	5916103	UnaryOperationExpression	! ret		5916069	0					
ANR	5916104	UnaryOperator	!		5916069	0					
ANR	5916105	Identifier	ret		5916069	1					
ANR	5916106	ReturnStatement	return NULL ;	930:1:16520:16531	5916069	1	True				
ANR	5916107	Identifier	NULL		5916069	0					
ANR	5916108	ExpressionStatement	"s = grub_vsnprintf_real ( ret , as , fmt , ap )"	932:6:16540:16582	5916069	2	True				
ANR	5916109	AssignmentExpression	"s = grub_vsnprintf_real ( ret , as , fmt , ap )"		5916069	0		=			
ANR	5916110	Identifier	s		5916069	0					
ANR	5916111	CallExpression	"grub_vsnprintf_real ( ret , as , fmt , ap )"		5916069	1					
ANR	5916112	Callee	grub_vsnprintf_real		5916069	0					
ANR	5916113	Identifier	grub_vsnprintf_real		5916069	0					
ANR	5916114	ArgumentList	ret		5916069	1					
ANR	5916115	Argument	ret		5916069	0					
ANR	5916116	Identifier	ret		5916069	0					
ANR	5916117	Argument	as		5916069	1					
ANR	5916118	Identifier	as		5916069	0					
ANR	5916119	Argument	fmt		5916069	2					
ANR	5916120	Identifier	fmt		5916069	0					
ANR	5916121	Argument	ap		5916069	3					
ANR	5916122	Identifier	ap		5916069	0					
ANR	5916123	IfStatement	if ( s <= as )		5916069	3					
ANR	5916124	Condition	s <= as	933:10:16594:16600	5916069	0	True				
ANR	5916125	RelationalExpression	s <= as		5916069	0		<=			
ANR	5916126	Identifier	s		5916069	0					
ANR	5916127	Identifier	as		5916069	1					
ANR	5916128	ReturnStatement	return ret ;	934:1:16604:16614	5916069	1	True				
ANR	5916129	Identifier	ret		5916069	0					
ANR	5916130	ExpressionStatement	grub_free ( ret )	936:6:16623:16638	5916069	4	True				
ANR	5916131	CallExpression	grub_free ( ret )		5916069	0					
ANR	5916132	Callee	grub_free		5916069	0					
ANR	5916133	Identifier	grub_free		5916069	0					
ANR	5916134	ArgumentList	ret		5916069	1					
ANR	5916135	Argument	ret		5916069	0					
ANR	5916136	Identifier	ret		5916069	0					
ANR	5916137	ExpressionStatement	as = s	937:6:16646:16652	5916069	5	True				
ANR	5916138	AssignmentExpression	as = s		5916069	0		=			
ANR	5916139	Identifier	as		5916069	0					
ANR	5916140	Identifier	s		5916069	1					
ANR	5916141	ReturnType	char *		5916069	1					
ANR	5916142	Identifier	grub_xvasprintf		5916069	2					
ANR	5916143	ParameterList	"const char * fmt , va_list ap"		5916069	3					
ANR	5916144	Parameter	const char * fmt	921:17:16369:16383	5916069	0	True				
ANR	5916145	ParameterType	const char *		5916069	0					
ANR	5916146	Identifier	fmt		5916069	1					
ANR	5916147	Parameter	va_list ap	921:34:16386:16395	5916069	1	True				
ANR	5916148	ParameterType	va_list		5916069	0					
ANR	5916149	Identifier	ap		5916069	1					
ANR	5916150	CFGEntryNode	ENTRY		5916069		True				
ANR	5916151	CFGExitNode	EXIT		5916069		True				
ANR	5916152	Symbol	ret		5916069						
ANR	5916153	Symbol	PREALLOC_SIZE		5916069						
ANR	5916154	Symbol	as		5916069						
ANR	5916155	Symbol	s		5916069						
ANR	5916156	Symbol	grub_malloc		5916069						
ANR	5916157	Symbol	NULL		5916069						
ANR	5916158	Symbol	grub_vsnprintf_real		5916069						
ANR	5916159	Symbol	fmt		5916069						
ANR	5916160	Symbol	ap		5916069						
ANR	5916161	Function	grub_xasprintf	941:0:16663:16825							
ANR	5916162	FunctionDef	grub_xasprintf (const char * fmt)		5916161	0					
ANR	5916163	CompoundStatement		943:0:16708:16825	5916161	0					
ANR	5916164	IdentifierDeclStatement	va_list ap ;	944:2:16712:16722	5916161	0	True				
ANR	5916165	IdentifierDecl	ap		5916161	0					
ANR	5916166	IdentifierDeclType	va_list		5916161	0					
ANR	5916167	Identifier	ap		5916161	1					
ANR	5916168	IdentifierDeclStatement	char * ret ;	945:2:16726:16735	5916161	1	True				
ANR	5916169	IdentifierDecl	* ret		5916161	0					
ANR	5916170	IdentifierDeclType	char *		5916161	0					
ANR	5916171	Identifier	ret		5916161	1					
ANR	5916172	ExpressionStatement	"va_start ( ap , fmt )"	947:2:16740:16758	5916161	2	True				
ANR	5916173	CallExpression	"va_start ( ap , fmt )"		5916161	0					
ANR	5916174	Callee	va_start		5916161	0					
ANR	5916175	Identifier	va_start		5916161	0					
ANR	5916176	ArgumentList	ap		5916161	1					
ANR	5916177	Argument	ap		5916161	0					
ANR	5916178	Identifier	ap		5916161	0					
ANR	5916179	Argument	fmt		5916161	1					
ANR	5916180	Identifier	fmt		5916161	0					
ANR	5916181	ExpressionStatement	"ret = grub_xvasprintf ( fmt , ap )"	948:2:16762:16793	5916161	3	True				
ANR	5916182	AssignmentExpression	"ret = grub_xvasprintf ( fmt , ap )"		5916161	0		=			
ANR	5916183	Identifier	ret		5916161	0					
ANR	5916184	CallExpression	"grub_xvasprintf ( fmt , ap )"		5916161	1					
ANR	5916185	Callee	grub_xvasprintf		5916161	0					
ANR	5916186	Identifier	grub_xvasprintf		5916161	0					
ANR	5916187	ArgumentList	fmt		5916161	1					
ANR	5916188	Argument	fmt		5916161	0					
ANR	5916189	Identifier	fmt		5916161	0					
ANR	5916190	Argument	ap		5916161	1					
ANR	5916191	Identifier	ap		5916161	0					
ANR	5916192	ExpressionStatement	va_end ( ap )	949:2:16797:16808	5916161	4	True				
ANR	5916193	CallExpression	va_end ( ap )		5916161	0					
ANR	5916194	Callee	va_end		5916161	0					
ANR	5916195	Identifier	va_end		5916161	0					
ANR	5916196	ArgumentList	ap		5916161	1					
ANR	5916197	Argument	ap		5916161	0					
ANR	5916198	Identifier	ap		5916161	0					
ANR	5916199	ReturnStatement	return ret ;	951:2:16813:16823	5916161	5	True				
ANR	5916200	Identifier	ret		5916161	0					
ANR	5916201	ReturnType	char *		5916161	1					
ANR	5916202	Identifier	grub_xasprintf		5916161	2					
ANR	5916203	ParameterList	const char * fmt		5916161	3					
ANR	5916204	Parameter	const char * fmt	942:16:16686:16700	5916161	0	True				
ANR	5916205	ParameterType	const char *		5916161	0					
ANR	5916206	Identifier	fmt		5916161	1					
ANR	5916207	CFGEntryNode	ENTRY		5916161		True				
ANR	5916208	CFGExitNode	EXIT		5916161		True				
ANR	5916209	Symbol	ret		5916161						
ANR	5916210	Symbol	grub_xvasprintf		5916161						
ANR	5916211	Symbol	fmt		5916161						
ANR	5916212	Symbol	ap		5916161						
ANR	5916213	Function	grub_utf8_to_ucs4	960:0:17180:18616							
ANR	5916214	FunctionDef	"grub_utf8_to_ucs4 (grub_uint32_t * dest , grub_size_t destsize , const grub_uint8_t * src , grub_size_t srcsize , const grub_uint8_t * * srcend)"		5916213	0					
ANR	5916215	CompoundStatement		964:0:17339:18616	5916213	0					
ANR	5916216	IdentifierDeclStatement	grub_uint32_t * p = dest ;	965:2:17343:17366	5916213	0	True				
ANR	5916217	IdentifierDecl	* p = dest		5916213	0					
ANR	5916218	IdentifierDeclType	grub_uint32_t *		5916213	0					
ANR	5916219	Identifier	p		5916213	1					
ANR	5916220	AssignmentExpression	* p = dest		5916213	2		=			
ANR	5916221	Identifier	dest		5916213	0					
ANR	5916222	Identifier	dest		5916213	1					
ANR	5916223	IdentifierDeclStatement	int count = 0 ;	966:2:17370:17383	5916213	1	True				
ANR	5916224	IdentifierDecl	count = 0		5916213	0					
ANR	5916225	IdentifierDeclType	int		5916213	0					
ANR	5916226	Identifier	count		5916213	1					
ANR	5916227	AssignmentExpression	count = 0		5916213	2		=			
ANR	5916228	Identifier	count		5916213	0					
ANR	5916229	PrimaryExpression	0		5916213	1					
ANR	5916230	IdentifierDeclStatement	grub_uint32_t code = 0 ;	967:2:17387:17409	5916213	2	True				
ANR	5916231	IdentifierDecl	code = 0		5916213	0					
ANR	5916232	IdentifierDeclType	grub_uint32_t		5916213	0					
ANR	5916233	Identifier	code		5916213	1					
ANR	5916234	AssignmentExpression	code = 0		5916213	2		=			
ANR	5916235	Identifier	code		5916213	0					
ANR	5916236	PrimaryExpression	0		5916213	1					
ANR	5916237	IfStatement	if ( srcend )		5916213	3					
ANR	5916238	Condition	srcend	969:6:17418:17423	5916213	0	True				
ANR	5916239	Identifier	srcend		5916213	0					
ANR	5916240	ExpressionStatement	* srcend = src	970:4:17430:17443	5916213	1	True				
ANR	5916241	AssignmentExpression	* srcend = src		5916213	0		=			
ANR	5916242	UnaryOperationExpression	* srcend		5916213	0					
ANR	5916243	UnaryOperator	*		5916213	0					
ANR	5916244	Identifier	srcend		5916213	1					
ANR	5916245	Identifier	src		5916213	1					
ANR	5916246	WhileStatement	while ( srcsize && destsize )		5916213	4					
ANR	5916247	Condition	srcsize && destsize	972:9:17455:17473	5916213	0	True				
ANR	5916248	AndExpression	srcsize && destsize		5916213	0		&&			
ANR	5916249	Identifier	srcsize		5916213	0					
ANR	5916250	Identifier	destsize		5916213	1					
ANR	5916251	CompoundStatement		11:6:148:172	5916213	1					
ANR	5916252	IdentifierDeclStatement	grub_uint32_t c = * src ++ ;	974:6:17488:17512	5916213	0	True				
ANR	5916253	IdentifierDecl	c = * src ++		5916213	0					
ANR	5916254	IdentifierDeclType	grub_uint32_t		5916213	0					
ANR	5916255	Identifier	c		5916213	1					
ANR	5916256	AssignmentExpression	c = * src ++		5916213	2		=			
ANR	5916257	Identifier	c		5916213	0					
ANR	5916258	UnaryOperationExpression	* src ++		5916213	1					
ANR	5916259	UnaryOperator	*		5916213	0					
ANR	5916260	PostIncDecOperationExpression	src ++		5916213	1					
ANR	5916261	Identifier	src		5916213	0					
ANR	5916262	IncDec	++		5916213	1					
ANR	5916263	IfStatement	if ( srcsize != ( grub_size_t ) - 1 )		5916213	1					
ANR	5916264	Condition	srcsize != ( grub_size_t ) - 1	975:10:17524:17549	5916213	0	True				
ANR	5916265	EqualityExpression	srcsize != ( grub_size_t ) - 1		5916213	0		!=			
ANR	5916266	Identifier	srcsize		5916213	0					
ANR	5916267	CastExpression	( grub_size_t ) - 1		5916213	1					
ANR	5916268	CastTarget	grub_size_t		5916213	0					
ANR	5916269	UnaryOperationExpression	- 1		5916213	1					
ANR	5916270	UnaryOperator	-		5916213	0					
ANR	5916271	PrimaryExpression	1		5916213	1					
ANR	5916272	ExpressionStatement	srcsize --	976:1:17553:17562	5916213	1	True				
ANR	5916273	PostIncDecOperationExpression	srcsize --		5916213	0					
ANR	5916274	Identifier	srcsize		5916213	0					
ANR	5916275	IncDec	--		5916213	1					
ANR	5916276	IfStatement	if ( count )		5916213	2					
ANR	5916277	Condition	count	977:10:17574:17578	5916213	0	True				
ANR	5916278	Identifier	count		5916213	0					
ANR	5916279	CompoundStatement		15:1:242:242	5916213	1					
ANR	5916280	IfStatement	if ( ( c & 0xc0 ) != 0x80 )		5916213	0					
ANR	5916281	Condition	( c & 0xc0 ) != 0x80	979:7:17591:17608	5916213	0	True				
ANR	5916282	EqualityExpression	( c & 0xc0 ) != 0x80		5916213	0		!=			
ANR	5916283	BitAndExpression	c & 0xc0		5916213	0		&			
ANR	5916284	Identifier	c		5916213	0					
ANR	5916285	PrimaryExpression	0xc0		5916213	1					
ANR	5916286	PrimaryExpression	0x80		5916213	1					
ANR	5916287	CompoundStatement		17:5:276:276	5916213	1					
ANR	5916288	ExpressionStatement	code = '?'	982:7:17646:17656	5916213	0	True				
ANR	5916289	AssignmentExpression	code = '?'		5916213	0		=			
ANR	5916290	Identifier	code		5916213	0					
ANR	5916291	PrimaryExpression	'?'		5916213	1					
ANR	5916292	ExpressionStatement	src --	984:7:17719:17724	5916213	1	True				
ANR	5916293	PostIncDecOperationExpression	src --		5916213	0					
ANR	5916294	Identifier	src		5916213	0					
ANR	5916295	IncDec	--		5916213	1					
ANR	5916296	IfStatement	if ( srcsize != ( grub_size_t ) - 1 )		5916213	2					
ANR	5916297	Condition	srcsize != ( grub_size_t ) - 1	985:11:17737:17762	5916213	0	True				
ANR	5916298	EqualityExpression	srcsize != ( grub_size_t ) - 1		5916213	0		!=			
ANR	5916299	Identifier	srcsize		5916213	0					
ANR	5916300	CastExpression	( grub_size_t ) - 1		5916213	1					
ANR	5916301	CastTarget	grub_size_t		5916213	0					
ANR	5916302	UnaryOperationExpression	- 1		5916213	1					
ANR	5916303	UnaryOperator	-		5916213	0					
ANR	5916304	PrimaryExpression	1		5916213	1					
ANR	5916305	ExpressionStatement	srcsize ++	986:2:17767:17776	5916213	1	True				
ANR	5916306	PostIncDecOperationExpression	srcsize ++		5916213	0					
ANR	5916307	Identifier	srcsize		5916213	0					
ANR	5916308	IncDec	++		5916213	1					
ANR	5916309	ExpressionStatement	count = 0	987:7:17785:17794	5916213	3	True				
ANR	5916310	AssignmentExpression	count = 0		5916213	0		=			
ANR	5916311	Identifier	count		5916213	0					
ANR	5916312	PrimaryExpression	0		5916213	1					
ANR	5916313	ElseStatement	else		5916213	0					
ANR	5916314	CompoundStatement		27:5:476:476	5916213	0					
ANR	5916315	ExpressionStatement	code <<= 6	991:7:17825:17835	5916213	0	True				
ANR	5916316	AssignmentExpression	code <<= 6		5916213	0		<<=			
ANR	5916317	Identifier	code		5916213	0					
ANR	5916318	PrimaryExpression	6		5916213	1					
ANR	5916319	ExpressionStatement	code |= ( c & 0x3f )	992:7:17844:17862	5916213	1	True				
ANR	5916320	AssignmentExpression	code |= ( c & 0x3f )		5916213	0		|=			
ANR	5916321	Identifier	code		5916213	0					
ANR	5916322	BitAndExpression	c & 0x3f		5916213	1		&			
ANR	5916323	Identifier	c		5916213	0					
ANR	5916324	PrimaryExpression	0x3f		5916213	1					
ANR	5916325	ExpressionStatement	count --	993:7:17871:17878	5916213	2	True				
ANR	5916326	PostIncDecOperationExpression	count --		5916213	0					
ANR	5916327	Identifier	count		5916213	0					
ANR	5916328	IncDec	--		5916213	1					
ANR	5916329	ElseStatement	else		5916213	0					
ANR	5916330	CompoundStatement		34:1:562:562	5916213	0					
ANR	5916331	IfStatement	if ( c == 0 )		5916213	0					
ANR	5916332	Condition	c == 0	998:7:17911:17916	5916213	0	True				
ANR	5916333	EqualityExpression	c == 0		5916213	0		==			
ANR	5916334	Identifier	c		5916213	0					
ANR	5916335	PrimaryExpression	0		5916213	1					
ANR	5916336	BreakStatement	break ;	999:5:17924:17929	5916213	1	True				
ANR	5916337	IfStatement	if ( ( c & 0x80 ) == 0x00 )		5916213	1					
ANR	5916338	Condition	( c & 0x80 ) == 0x00	1001:7:17939:17956	5916213	0	True				
ANR	5916339	EqualityExpression	( c & 0x80 ) == 0x00		5916213	0		==			
ANR	5916340	BitAndExpression	c & 0x80		5916213	0		&			
ANR	5916341	Identifier	c		5916213	0					
ANR	5916342	PrimaryExpression	0x80		5916213	1					
ANR	5916343	PrimaryExpression	0x00		5916213	1					
ANR	5916344	ExpressionStatement	code = c	1002:5:17964:17972	5916213	1	True				
ANR	5916345	AssignmentExpression	code = c		5916213	0		=			
ANR	5916346	Identifier	code		5916213	0					
ANR	5916347	Identifier	c		5916213	1					
ANR	5916348	ElseStatement	else		5916213	0					
ANR	5916349	IfStatement	if ( ( c & 0xe0 ) == 0xc0 )		5916213	0					
ANR	5916350	Condition	( c & 0xe0 ) == 0xc0	1003:12:17986:18003	5916213	0	True				
ANR	5916351	EqualityExpression	( c & 0xe0 ) == 0xc0		5916213	0		==			
ANR	5916352	BitAndExpression	c & 0xe0		5916213	0		&			
ANR	5916353	Identifier	c		5916213	0					
ANR	5916354	PrimaryExpression	0xe0		5916213	1					
ANR	5916355	PrimaryExpression	0xc0		5916213	1					
ANR	5916356	CompoundStatement		41:5:671:671	5916213	1					
ANR	5916357	ExpressionStatement	count = 1	1005:7:18020:18029	5916213	0	True				
ANR	5916358	AssignmentExpression	count = 1		5916213	0		=			
ANR	5916359	Identifier	count		5916213	0					
ANR	5916360	PrimaryExpression	1		5916213	1					
ANR	5916361	ExpressionStatement	code = c & 0x1f	1006:7:18038:18053	5916213	1	True				
ANR	5916362	AssignmentExpression	code = c & 0x1f		5916213	0		=			
ANR	5916363	Identifier	code		5916213	0					
ANR	5916364	BitAndExpression	c & 0x1f		5916213	1		&			
ANR	5916365	Identifier	c		5916213	0					
ANR	5916366	PrimaryExpression	0x1f		5916213	1					
ANR	5916367	ElseStatement	else		5916213	0					
ANR	5916368	IfStatement	if ( ( c & 0xf0 ) == 0xe0 )		5916213	0					
ANR	5916369	Condition	( c & 0xf0 ) == 0xe0	1008:12:18074:18091	5916213	0	True				
ANR	5916370	EqualityExpression	( c & 0xf0 ) == 0xe0		5916213	0		==			
ANR	5916371	BitAndExpression	c & 0xf0		5916213	0		&			
ANR	5916372	Identifier	c		5916213	0					
ANR	5916373	PrimaryExpression	0xf0		5916213	1					
ANR	5916374	PrimaryExpression	0xe0		5916213	1					
ANR	5916375	CompoundStatement		46:5:759:759	5916213	1					
ANR	5916376	ExpressionStatement	count = 2	1010:7:18108:18117	5916213	0	True				
ANR	5916377	AssignmentExpression	count = 2		5916213	0		=			
ANR	5916378	Identifier	count		5916213	0					
ANR	5916379	PrimaryExpression	2		5916213	1					
ANR	5916380	ExpressionStatement	code = c & 0x0f	1011:7:18126:18141	5916213	1	True				
ANR	5916381	AssignmentExpression	code = c & 0x0f		5916213	0		=			
ANR	5916382	Identifier	code		5916213	0					
ANR	5916383	BitAndExpression	c & 0x0f		5916213	1		&			
ANR	5916384	Identifier	c		5916213	0					
ANR	5916385	PrimaryExpression	0x0f		5916213	1					
ANR	5916386	ElseStatement	else		5916213	0					
ANR	5916387	IfStatement	if ( ( c & 0xf8 ) == 0xf0 )		5916213	0					
ANR	5916388	Condition	( c & 0xf8 ) == 0xf0	1013:12:18162:18179	5916213	0	True				
ANR	5916389	EqualityExpression	( c & 0xf8 ) == 0xf0		5916213	0		==			
ANR	5916390	BitAndExpression	c & 0xf8		5916213	0		&			
ANR	5916391	Identifier	c		5916213	0					
ANR	5916392	PrimaryExpression	0xf8		5916213	1					
ANR	5916393	PrimaryExpression	0xf0		5916213	1					
ANR	5916394	CompoundStatement		51:5:847:847	5916213	1					
ANR	5916395	ExpressionStatement	count = 3	1015:7:18196:18205	5916213	0	True				
ANR	5916396	AssignmentExpression	count = 3		5916213	0		=			
ANR	5916397	Identifier	count		5916213	0					
ANR	5916398	PrimaryExpression	3		5916213	1					
ANR	5916399	ExpressionStatement	code = c & 0x07	1016:7:18214:18229	5916213	1	True				
ANR	5916400	AssignmentExpression	code = c & 0x07		5916213	0		=			
ANR	5916401	Identifier	code		5916213	0					
ANR	5916402	BitAndExpression	c & 0x07		5916213	1		&			
ANR	5916403	Identifier	c		5916213	0					
ANR	5916404	PrimaryExpression	0x07		5916213	1					
ANR	5916405	ElseStatement	else		5916213	0					
ANR	5916406	IfStatement	if ( ( c & 0xfc ) == 0xf8 )		5916213	0					
ANR	5916407	Condition	( c & 0xfc ) == 0xf8	1018:12:18250:18267	5916213	0	True				
ANR	5916408	EqualityExpression	( c & 0xfc ) == 0xf8		5916213	0		==			
ANR	5916409	BitAndExpression	c & 0xfc		5916213	0		&			
ANR	5916410	Identifier	c		5916213	0					
ANR	5916411	PrimaryExpression	0xfc		5916213	1					
ANR	5916412	PrimaryExpression	0xf8		5916213	1					
ANR	5916413	CompoundStatement		56:5:935:935	5916213	1					
ANR	5916414	ExpressionStatement	count = 4	1020:7:18284:18293	5916213	0	True				
ANR	5916415	AssignmentExpression	count = 4		5916213	0		=			
ANR	5916416	Identifier	count		5916213	0					
ANR	5916417	PrimaryExpression	4		5916213	1					
ANR	5916418	ExpressionStatement	code = c & 0x03	1021:7:18302:18317	5916213	1	True				
ANR	5916419	AssignmentExpression	code = c & 0x03		5916213	0		=			
ANR	5916420	Identifier	code		5916213	0					
ANR	5916421	BitAndExpression	c & 0x03		5916213	1		&			
ANR	5916422	Identifier	c		5916213	0					
ANR	5916423	PrimaryExpression	0x03		5916213	1					
ANR	5916424	ElseStatement	else		5916213	0					
ANR	5916425	IfStatement	if ( ( c & 0xfe ) == 0xfc )		5916213	0					
ANR	5916426	Condition	( c & 0xfe ) == 0xfc	1023:12:18338:18355	5916213	0	True				
ANR	5916427	EqualityExpression	( c & 0xfe ) == 0xfc		5916213	0		==			
ANR	5916428	BitAndExpression	c & 0xfe		5916213	0		&			
ANR	5916429	Identifier	c		5916213	0					
ANR	5916430	PrimaryExpression	0xfe		5916213	1					
ANR	5916431	PrimaryExpression	0xfc		5916213	1					
ANR	5916432	CompoundStatement		61:5:1023:1023	5916213	1					
ANR	5916433	ExpressionStatement	count = 5	1025:7:18372:18381	5916213	0	True				
ANR	5916434	AssignmentExpression	count = 5		5916213	0		=			
ANR	5916435	Identifier	count		5916213	0					
ANR	5916436	PrimaryExpression	5		5916213	1					
ANR	5916437	ExpressionStatement	code = c & 0x01	1026:7:18390:18405	5916213	1	True				
ANR	5916438	AssignmentExpression	code = c & 0x01		5916213	0		=			
ANR	5916439	Identifier	code		5916213	0					
ANR	5916440	BitAndExpression	c & 0x01		5916213	1		&			
ANR	5916441	Identifier	c		5916213	0					
ANR	5916442	PrimaryExpression	0x01		5916213	1					
ANR	5916443	ElseStatement	else		5916213	0					
ANR	5916444	CompoundStatement		66:5:1087:1087	5916213	0					
ANR	5916445	ExpressionStatement	code = '?'	1031:7:18457:18467	5916213	0	True				
ANR	5916446	AssignmentExpression	code = '?'		5916213	0		=			
ANR	5916447	Identifier	code		5916213	0					
ANR	5916448	PrimaryExpression	'?'		5916213	1					
ANR	5916449	ExpressionStatement	count = 0	1032:7:18476:18485	5916213	1	True				
ANR	5916450	AssignmentExpression	count = 0		5916213	0		=			
ANR	5916451	Identifier	count		5916213	0					
ANR	5916452	PrimaryExpression	0		5916213	1					
ANR	5916453	IfStatement	if ( count == 0 )		5916213	3					
ANR	5916454	Condition	count == 0	1036:10:18508:18517	5916213	0	True				
ANR	5916455	EqualityExpression	count == 0		5916213	0		==			
ANR	5916456	Identifier	count		5916213	0					
ANR	5916457	PrimaryExpression	0		5916213	1					
ANR	5916458	CompoundStatement		74:1:1181:1181	5916213	1					
ANR	5916459	ExpressionStatement	* p ++ = code	1038:3:18526:18537	5916213	0	True				
ANR	5916460	AssignmentExpression	* p ++ = code		5916213	0		=			
ANR	5916461	UnaryOperationExpression	* p ++		5916213	0					
ANR	5916462	UnaryOperator	*		5916213	0					
ANR	5916463	PostIncDecOperationExpression	p ++		5916213	1					
ANR	5916464	Identifier	p		5916213	0					
ANR	5916465	IncDec	++		5916213	1					
ANR	5916466	Identifier	code		5916213	1					
ANR	5916467	ExpressionStatement	destsize --	1039:3:18542:18552	5916213	1	True				
ANR	5916468	PostIncDecOperationExpression	destsize --		5916213	0					
ANR	5916469	Identifier	destsize		5916213	0					
ANR	5916470	IncDec	--		5916213	1					
ANR	5916471	IfStatement	if ( srcend )		5916213	5					
ANR	5916472	Condition	srcend	1043:6:18570:18575	5916213	0	True				
ANR	5916473	Identifier	srcend		5916213	0					
ANR	5916474	ExpressionStatement	* srcend = src	1044:4:18582:18595	5916213	1	True				
ANR	5916475	AssignmentExpression	* srcend = src		5916213	0		=			
ANR	5916476	UnaryOperationExpression	* srcend		5916213	0					
ANR	5916477	UnaryOperator	*		5916213	0					
ANR	5916478	Identifier	srcend		5916213	1					
ANR	5916479	Identifier	src		5916213	1					
ANR	5916480	ReturnStatement	return p - dest ;	1045:2:18599:18614	5916213	6	True				
ANR	5916481	AdditiveExpression	p - dest		5916213	0		-			
ANR	5916482	Identifier	p		5916213	0					
ANR	5916483	Identifier	dest		5916213	1					
ANR	5916484	ReturnType	grub_size_t		5916213	1					
ANR	5916485	Identifier	grub_utf8_to_ucs4		5916213	2					
ANR	5916486	ParameterList	"grub_uint32_t * dest , grub_size_t destsize , const grub_uint8_t * src , grub_size_t srcsize , const grub_uint8_t * * srcend"		5916213	3					
ANR	5916487	Parameter	grub_uint32_t * dest	961:19:17211:17229	5916213	0	True				
ANR	5916488	ParameterType	grub_uint32_t *		5916213	0					
ANR	5916489	Identifier	dest		5916213	1					
ANR	5916490	Parameter	grub_size_t destsize	961:40:17232:17251	5916213	1	True				
ANR	5916491	ParameterType	grub_size_t		5916213	0					
ANR	5916492	Identifier	destsize		5916213	1					
ANR	5916493	Parameter	const grub_uint8_t * src	962:5:17259:17281	5916213	2	True				
ANR	5916494	ParameterType	const grub_uint8_t *		5916213	0					
ANR	5916495	Identifier	src		5916213	1					
ANR	5916496	Parameter	grub_size_t srcsize	962:30:17284:17302	5916213	3	True				
ANR	5916497	ParameterType	grub_size_t		5916213	0					
ANR	5916498	Identifier	srcsize		5916213	1					
ANR	5916499	Parameter	const grub_uint8_t * * srcend	963:5:17310:17336	5916213	4	True				
ANR	5916500	ParameterType	const grub_uint8_t * *		5916213	0					
ANR	5916501	Identifier	srcend		5916213	1					
ANR	5916502	CFGEntryNode	ENTRY		5916213		True				
ANR	5916503	CFGExitNode	EXIT		5916213		True				
ANR	5916504	Symbol	p		5916213						
ANR	5916505	Symbol	destsize		5916213						
ANR	5916506	Symbol	code		5916213						
ANR	5916507	Symbol	c		5916213						
ANR	5916508	Symbol	src		5916213						
ANR	5916509	Symbol	srcend		5916213						
ANR	5916510	Symbol	* srcend		5916213						
ANR	5916511	Symbol	* p ++		5916213						
ANR	5916512	Symbol	count		5916213						
ANR	5916513	Symbol	* src ++		5916213						
ANR	5916514	Symbol	srcsize		5916213						
ANR	5916515	Symbol	dest		5916213						
ANR	5916516	Function	grub_abort	1049:0:18669:18874							
ANR	5916517	FunctionDef	grub_abort ()		5916516	0					
ANR	5916518	CompoundStatement		1051:0:18692:18874	5916516	0					
ANR	5916519	ExpressionStatement	"grub_printf ( ""\\nAborted."" )"	1052:2:18696:18722	5916516	0	True				
ANR	5916520	CallExpression	"grub_printf ( ""\\nAborted."" )"		5916516	0					
ANR	5916521	Callee	grub_printf		5916516	0					
ANR	5916522	Identifier	grub_printf		5916516	0					
ANR	5916523	ArgumentList	"""\\nAborted."""		5916516	1					
ANR	5916524	Argument	"""\\nAborted."""		5916516	0					
ANR	5916525	PrimaryExpression	"""\\nAborted."""		5916516	0					
ANR	5916526	IfStatement	if ( grub_term_inputs )		5916516	1					
ANR	5916527	Condition	grub_term_inputs	1055:6:18749:18764	5916516	0	True				
ANR	5916528	Identifier	grub_term_inputs		5916516	0					
ANR	5916529	CompoundStatement		7:4:85:85	5916516	1					
ANR	5916530	ExpressionStatement	"grub_printf ( "" Press any key to exit."" )"	1058:6:18786:18825	5916516	0	True				
ANR	5916531	CallExpression	"grub_printf ( "" Press any key to exit."" )"		5916516	0					
ANR	5916532	Callee	grub_printf		5916516	0					
ANR	5916533	Identifier	grub_printf		5916516	0					
ANR	5916534	ArgumentList	""" Press any key to exit."""		5916516	1					
ANR	5916535	Argument	""" Press any key to exit."""		5916516	0					
ANR	5916536	PrimaryExpression	""" Press any key to exit."""		5916516	0					
ANR	5916537	ExpressionStatement	grub_getkey ( )	1059:6:18833:18847	5916516	1	True				
ANR	5916538	CallExpression	grub_getkey ( )		5916516	0					
ANR	5916539	Callee	grub_getkey		5916516	0					
ANR	5916540	Identifier	grub_getkey		5916516	0					
ANR	5916541	ArgumentList			5916516	1					
ANR	5916542	ReturnType	void		5916516	1					
ANR	5916543	Identifier	grub_abort		5916516	2					
ANR	5916544	ParameterList			5916516	3					
ANR	5916545	CFGEntryNode	ENTRY		5916516		True				
ANR	5916546	CFGExitNode	EXIT		5916516		True				
ANR	5916547	Symbol	grub_term_inputs		5916516						
ANR	5916548	Function	__register_frame_info	1074:0:19177:19213							
ANR	5916549	FunctionDef	__register_frame_info ()		5916548	0					
ANR	5916550	CompoundStatement		1075:0:19211:19213	5916548	0					
ANR	5916551	ReturnType	void		5916548	1					
ANR	5916552	Identifier	__register_frame_info		5916548	2					
ANR	5916553	ParameterList			5916548	3					
ANR	5916554	CFGEntryNode	ENTRY		5916548		True				
ANR	5916555	CFGExitNode	EXIT		5916548		True				
ANR	5916556	Function	__deregister_frame_info	1078:0:19216:19254							
ANR	5916557	FunctionDef	__deregister_frame_info ()		5916556	0					
ANR	5916558	CompoundStatement		1079:0:19252:19254	5916556	0					
ANR	5916559	ReturnType	void		5916556	1					
ANR	5916560	Identifier	__deregister_frame_info		5916556	2					
ANR	5916561	ParameterList			5916556	3					
ANR	5916562	CFGEntryNode	ENTRY		5916556		True				
ANR	5916563	CFGExitNode	EXIT		5916556		True				
