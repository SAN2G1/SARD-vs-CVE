command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	592123	File	data/converged/CVE-2019-16718~_radare2/bin_xnu_kernelcache.c								
ANR	592124	DeclStmt									
ANR	592125	Decl							"bool ( * ) ( ut64 offset , ut64 decorated_addr , void * user_data )"	"bool ( * ) ( ut64 offset , ut64 decorated_addr , void * user_data )"	ROnRebaseFunc
ANR	592126	ClassDef	_RKernelCacheObj	19:8:452:820							
ANR	592127	DeclStmt									
ANR	592128	Decl							RBuffer	RBuffer *	cache_buf
ANR	592129	DeclStmt									
ANR	592130	Decl							RCFValueDict	RCFValueDict *	prelink_info
ANR	592131	DeclStmt									
ANR	592132	Decl							ut64	ut64	pa2va_exec
ANR	592133	DeclStmt									
ANR	592134	Decl							ut64	ut64	pa2va_data
ANR	592135	DeclStmt									
ANR	592136	Decl							struct _RKextIndex	struct _RKextIndex *	kexts
ANR	592137	DeclStmt									
ANR	592138	Decl							struct _RRebaseInfo	struct _RRebaseInfo *	rebase_info
ANR	592139	DeclStmt									
ANR	592140	Decl							"int ( * ) ( RIO * io , RIODesc * fd , ut8 * buf , int count )"	"int ( * ) ( RIO * io , RIODesc * fd , ut8 * buf , int count )"	original_io_read
ANR	592141	DeclStmt									
ANR	592142	Decl							bool	bool	rebase_info_populated
ANR	592143	DeclStmt									
ANR	592144	Decl							bool	bool	rebasing_buffer
ANR	592145	DeclStmt									
ANR	592146	Decl							bool	bool	kexts_initialized
ANR	592147	DeclStmt									
ANR	592148	Decl							_RKernelCacheObj	_RKernelCacheObj	RKernelCacheObj
ANR	592149	ClassDef	_RFileRange	33:8:831:890							
ANR	592150	DeclStmt									
ANR	592151	Decl							ut64	ut64	offset
ANR	592152	DeclStmt									
ANR	592153	Decl							ut64	ut64	size
ANR	592154	DeclStmt									
ANR	592155	Decl							_RFileRange	_RFileRange	RFileRange
ANR	592156	ClassDef	_RPrelinkRange	38:8:901:995							
ANR	592157	DeclStmt									
ANR	592158	Decl							RFileRange	RFileRange	range
ANR	592159	DeclStmt									
ANR	592160	Decl							ut64	ut64	pa2va_exec
ANR	592161	DeclStmt									
ANR	592162	Decl							ut64	ut64	pa2va_data
ANR	592163	DeclStmt									
ANR	592164	Decl							_RPrelinkRange	_RPrelinkRange	RPrelinkRange
ANR	592165	ClassDef	_RStubsInfo	44:8:1006:1091							
ANR	592166	DeclStmt									
ANR	592167	Decl							RFileRange	RFileRange	got
ANR	592168	DeclStmt									
ANR	592169	Decl							RFileRange	RFileRange	stubs
ANR	592170	DeclStmt									
ANR	592171	Decl							ut64	ut64	got_addr
ANR	592172	DeclStmt									
ANR	592173	Decl							_RStubsInfo	_RStubsInfo	RStubsInfo
ANR	592174	ClassDef	_RKext	50:8:1102:1292							
ANR	592175	DeclStmt									
ANR	592176	Decl							RFileRange	RFileRange	range
ANR	592177	DeclStmt									
ANR	592178	Decl							RFileRange	RFileRange	text_range
ANR	592179	DeclStmt									
ANR	592180	Decl							char	char *	name
ANR	592181	DeclStmt									
ANR	592182	Decl							ut64	ut64	mod_info
ANR	592183	DeclStmt									
ANR	592184	Decl							ut64	ut64	vaddr
ANR	592185	DeclStmt									
ANR	592186	Decl							bool	bool	own_name
ANR	592187	DeclStmt									
ANR	592188	Decl							ut64	ut64	pa2va_exec
ANR	592189	DeclStmt									
ANR	592190	Decl							ut64	ut64	pa2va_data
ANR	592191	DeclStmt									
ANR	592192	Decl							_RKext	_RKext	RKext
ANR	592193	ClassDef	_RKextIndex	62:8:1303:1368							
ANR	592194	DeclStmt									
ANR	592195	Decl							ut64	ut64	length
ANR	592196	DeclStmt									
ANR	592197	Decl							RKext	RKext * *	entries
ANR	592198	DeclStmt									
ANR	592199	Decl							_RKextIndex	_RKextIndex	RKextIndex
ANR	592200	ClassDef	_RRebaseInfo	67:8:1379:1488							
ANR	592201	DeclStmt									
ANR	592202	Decl							RFileRange	RFileRange *	ranges
ANR	592203	DeclStmt									
ANR	592204	Decl							ut64	ut64	n_ranges
ANR	592205	DeclStmt									
ANR	592206	Decl							ut64	ut64	multiplier
ANR	592207	DeclStmt									
ANR	592208	Decl							ut64	ut64	kernel_base
ANR	592209	DeclStmt									
ANR	592210	Decl							_RRebaseInfo	_RRebaseInfo	RRebaseInfo
ANR	592211	ClassDef	_RRebaseCtx	74:8:1499:1594							
ANR	592212	DeclStmt									
ANR	592213	Decl							ut64	ut64	off
ANR	592214	Decl							ut64	ut64	eob
ANR	592215	DeclStmt									
ANR	592216	Decl							ut8	ut8 *	buf
ANR	592217	DeclStmt									
ANR	592218	Decl							int	int	count
ANR	592219	DeclStmt									
ANR	592220	Decl							RKernelCacheObj	RKernelCacheObj *	obj
ANR	592221	DeclStmt									
ANR	592222	Decl							_RRebaseCtx	_RRebaseCtx	RRebaseCtx
ANR	592223	ClassDef	_RParsedPointer	81:8:1605:1661							
ANR	592224	DeclStmt									
ANR	592225	Decl							ut64	ut64	address
ANR	592226	DeclStmt									
ANR	592227	Decl							_RParsedPointer	_RParsedPointer	RParsedPointer
ANR	592228	ClassDef	_RKmodInfo	85:8:1672:1734							
ANR	592229	DeclStmt									
ANR	592230	Decl							char	char [ 0x41 ]	name
ANR	592231	DeclStmt									
ANR	592232	Decl							ut64	ut64	start
ANR	592233	DeclStmt									
ANR	592234	Decl							_RKmodInfo	_RKmodInfo	RKmodInfo
ANR	592235	DeclStmt									
ANR	592236	Decl							char	char *	result
ANR	592237	DeclStmt									
ANR	592238	Decl							char	char *	clone
ANR	592239	DeclStmt									
ANR	592240	Decl							char	char *	cursor
ANR	592241	DeclStmt									
ANR	592242	Decl							ut64	"ut64 ( ut64 decorated_addr , RKernelCacheObj * obj )"	p_ptr
ANR	592243	DeclStmt									
ANR	592244	Decl							ut64	"ut64 ( ut8 * buf , RKernelCacheObj * obj )"	r_ptr
ANR	592245	DeclStmt									
ANR	592246	Decl							void	void ( RRebaseInfo * info )	r_rebase_info_free
ANR	592247	DeclStmt									
ANR	592248	Decl							void	"void ( RRebaseInfo * info , RKernelCacheObj * obj )"	r_rebase_info_populate
ANR	592249	DeclStmt									
ANR	592250	Decl							ut64	"ut64 ( RBuffer * cache_buf , ut64 multiplier , ut64 start_offset , ROnRebaseFunc func , void * user_data )"	iterate_rebase_list
ANR	592251	DeclStmt									
ANR	592252	Decl							ut64	"ut64 ( RKernelCacheObj * obj , struct section_t * sections , ut64 offset )"	r_rebase_offset_to_paddr
ANR	592253	DeclStmt									
ANR	592254	Decl							void	"void ( RKernelCacheObj * obj , RIO * io )"	swizzle_io_read
ANR	592255	DeclStmt									
ANR	592256	Decl							int	"int ( RIO * io , RIODesc * fd , ut8 * buf , int count )"	kernelcache_io_read
ANR	592257	DeclStmt									
ANR	592258	Decl							bool	"bool ( RParsedPointer * ptr , ut64 decorated_addr , RKernelCacheObj * obj )"	r_parse_pointer
ANR	592259	DeclStmt									
ANR	592260	Decl							bool	"bool ( ut64 offset , ut64 decorated_addr , RRebaseCtx * ctx )"	on_rebase_pointer
ANR	592261	DeclStmt									
ANR	592262	Decl							void	"void ( RKernelCacheObj * obj , RIO * io , RIODesc * fd , ut8 * buf , int count )"	rebase_buffer
ANR	592263	DeclStmt									
ANR	592264	Decl							RList	RList * ( RKernelCacheObj * obj )	filter_kexts
ANR	592265	DeclStmt									
ANR	592266	Decl							RList	RList * ( RKernelCacheObj * obj )	carve_kexts
ANR	592267	DeclStmt									
ANR	592268	Decl							void	void ( RBinSection * sect )	handle_data_sections
ANR	592269	DeclStmt									
ANR	592270	Decl							RList	"RList * ( RKernelCacheObj * obj , ut64 enosys_addr )"	resolve_syscalls
ANR	592271	DeclStmt									
ANR	592272	Decl							RList	RList * ( RKernelCacheObj * obj )	resolve_mig_subsystem
ANR	592273	DeclStmt									
ANR	592274	Decl							void	"void ( RList * ret , HtPP * kernel_syms_by_addr , RKernelCacheObj * obj , RBinFile * bf , RKext * kext , int ordinal )"	symbols_from_stubs
ANR	592275	DeclStmt									
ANR	592276	Decl							int	int ( int x )	prot2perm
ANR	592277	DeclStmt									
ANR	592278	Decl							void	void ( RKext * kext )	r_kext_free
ANR	592279	DeclStmt									
ANR	592280	Decl							void	void ( RKext * kext )	r_kext_fill_text_range
ANR	592281	DeclStmt									
ANR	592282	Decl							int	"int ( const void * a , const void * b )"	kexts_sort_vaddr_func
ANR	592283	DeclStmt									
ANR	592284	Decl							RKextIndex	RKextIndex * ( RList * kexts )	r_kext_index_new
ANR	592285	DeclStmt									
ANR	592286	Decl							void	void ( RKextIndex * index )	r_kext_index_free
ANR	592287	DeclStmt									
ANR	592288	Decl							RKext	"RKext * ( RKextIndex * index , ut64 vaddr )"	r_kext_index_vget
ANR	592289	DeclStmt									
ANR	592290	Decl							void	"void ( RKernelCacheObj * obj , RKext * kext , RList * ret , ut64 * * inits , ut64 * * terms )"	process_kmod_init_term
ANR	592291	DeclStmt									
ANR	592292	Decl							void	"void ( RKext * kext , RList * ret , int type , ut64 * pointers )"	create_initterm_syms
ANR	592293	DeclStmt									
ANR	592294	Decl							RBinAddr	"RBinAddr * ( ut64 haddr , ut64 vaddr , int type )"	newEntry
ANR	592295	DeclStmt									
ANR	592296	Decl							void	void ( RKernelCacheObj * obj )	ensure_kexts_initialized
ANR	592297	DeclStmt									
ANR	592298	Decl							void	void ( RKernelCacheObj * obj )	r_kernel_cache_free
ANR	592299	DeclStmt									
ANR	592300	Decl							RList	RList *	pending_bin_files
ANR	592301	Function	load_buffer	173:0:5550:6933							
ANR	592302	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb)"		592301	0					
ANR	592303	CompoundStatement		173:93:5643:6933	592301	0					
ANR	592304	IdentifierDeclStatement	RBuffer * fbuf = r_buf_ref ( buf ) ;	174:1:5646:5677	592301	0	True				
ANR	592305	IdentifierDecl	* fbuf = r_buf_ref ( buf )		592301	0					
ANR	592306	IdentifierDeclType	RBuffer *		592301	0					
ANR	592307	Identifier	fbuf		592301	1					
ANR	592308	AssignmentExpression	* fbuf = r_buf_ref ( buf )		592301	2		=			
ANR	592309	Identifier	fbuf		592301	0					
ANR	592310	CallExpression	r_buf_ref ( buf )		592301	1					
ANR	592311	Callee	r_buf_ref		592301	0					
ANR	592312	Identifier	r_buf_ref		592301	0					
ANR	592313	ArgumentList	buf		592301	1					
ANR	592314	Argument	buf		592301	0					
ANR	592315	Identifier	buf		592301	0					
ANR	592316	Statement	struct	175:1:5680:5685	592301	1	True				
ANR	592317	Statement	MACH0_	175:8:5687:5692	592301	2	True				
ANR	592318	ExpressionStatement	( opts_t ) opts	175:14:5693:5706	592301	3	True				
ANR	592319	CastExpression	( opts_t ) opts		592301	0					
ANR	592320	CastTarget	opts_t		592301	0					
ANR	592321	Identifier	opts		592301	1					
ANR	592322	ExpressionStatement	"MACH0_ ( opts_set_default ) ( & opts , bf )"	176:1:5709:5745	592301	4	True				
ANR	592323	CallExpression	"MACH0_ ( opts_set_default ) ( & opts , bf )"		592301	0					
ANR	592324	Callee	MACH0_ ( opts_set_default )		592301	0					
ANR	592325	CallExpression	MACH0_ ( opts_set_default )		592301	0					
ANR	592326	Callee	MACH0_		592301	0					
ANR	592327	Identifier	MACH0_		592301	0					
ANR	592328	ArgumentList	opts_set_default		592301	1					
ANR	592329	Argument	opts_set_default		592301	0					
ANR	592330	Identifier	opts_set_default		592301	0					
ANR	592331	ArgumentList	& opts		592301	1					
ANR	592332	Argument	& opts		592301	0					
ANR	592333	UnaryOperationExpression	& opts		592301	0					
ANR	592334	UnaryOperator	&		592301	0					
ANR	592335	Identifier	opts		592301	1					
ANR	592336	Argument	bf		592301	1					
ANR	592337	Identifier	bf		592301	0					
ANR	592338	Statement	struct	177:1:5748:5753	592301	5	True				
ANR	592339	ExpressionStatement	"MACH0_ ( obj_t ) * main_mach0 = MACH0_ ( new_buf ) ( fbuf , & opts )"	177:8:5755:5812	592301	6	True				
ANR	592340	AssignmentExpression	"MACH0_ ( obj_t ) * main_mach0 = MACH0_ ( new_buf ) ( fbuf , & opts )"		592301	0		=			
ANR	592341	MultiplicativeExpression	MACH0_ ( obj_t ) * main_mach0		592301	0		*			
ANR	592342	CallExpression	MACH0_ ( obj_t )		592301	0					
ANR	592343	Callee	MACH0_		592301	0					
ANR	592344	Identifier	MACH0_		592301	0					
ANR	592345	ArgumentList	obj_t		592301	1					
ANR	592346	Argument	obj_t		592301	0					
ANR	592347	Identifier	obj_t		592301	0					
ANR	592348	Identifier	main_mach0		592301	1					
ANR	592349	CallExpression	"MACH0_ ( new_buf ) ( fbuf , & opts )"		592301	1					
ANR	592350	Callee	MACH0_ ( new_buf )		592301	0					
ANR	592351	CallExpression	MACH0_ ( new_buf )		592301	0					
ANR	592352	Callee	MACH0_		592301	0					
ANR	592353	Identifier	MACH0_		592301	0					
ANR	592354	ArgumentList	new_buf		592301	1					
ANR	592355	Argument	new_buf		592301	0					
ANR	592356	Identifier	new_buf		592301	0					
ANR	592357	ArgumentList	fbuf		592301	1					
ANR	592358	Argument	fbuf		592301	0					
ANR	592359	Identifier	fbuf		592301	0					
ANR	592360	Argument	& opts		592301	1					
ANR	592361	UnaryOperationExpression	& opts		592301	0					
ANR	592362	UnaryOperator	&		592301	0					
ANR	592363	Identifier	opts		592301	1					
ANR	592364	IfStatement	if ( ! main_mach0 )		592301	7					
ANR	592365	Condition	! main_mach0	178:5:5819:5829	592301	0	True				
ANR	592366	UnaryOperationExpression	! main_mach0		592301	0					
ANR	592367	UnaryOperator	!		592301	0					
ANR	592368	Identifier	main_mach0		592301	1					
ANR	592369	CompoundStatement		6:18:188:188	592301	1					
ANR	592370	ReturnStatement	return false ;	179:2:5836:5848	592301	0	True				
ANR	592371	Identifier	false		592301	0					
ANR	592372	IdentifierDeclStatement	"RRebaseInfo * rebase_info = r_rebase_info_new_from_mach0 ( fbuf , main_mach0 ) ;"	182:1:5855:5929	592301	8	True				
ANR	592373	IdentifierDecl	"* rebase_info = r_rebase_info_new_from_mach0 ( fbuf , main_mach0 )"		592301	0					
ANR	592374	IdentifierDeclType	RRebaseInfo *		592301	0					
ANR	592375	Identifier	rebase_info		592301	1					
ANR	592376	AssignmentExpression	"* rebase_info = r_rebase_info_new_from_mach0 ( fbuf , main_mach0 )"		592301	2		=			
ANR	592377	Identifier	rebase_info		592301	0					
ANR	592378	CallExpression	"r_rebase_info_new_from_mach0 ( fbuf , main_mach0 )"		592301	1					
ANR	592379	Callee	r_rebase_info_new_from_mach0		592301	0					
ANR	592380	Identifier	r_rebase_info_new_from_mach0		592301	0					
ANR	592381	ArgumentList	fbuf		592301	1					
ANR	592382	Argument	fbuf		592301	0					
ANR	592383	Identifier	fbuf		592301	0					
ANR	592384	Argument	main_mach0		592301	1					
ANR	592385	Identifier	main_mach0		592301	0					
ANR	592386	IdentifierDeclStatement	RPrelinkRange * prelink_range = get_prelink_info_range_from_mach0 ( main_mach0 ) ;	184:1:5933:6010	592301	9	True				
ANR	592387	IdentifierDecl	* prelink_range = get_prelink_info_range_from_mach0 ( main_mach0 )		592301	0					
ANR	592388	IdentifierDeclType	RPrelinkRange *		592301	0					
ANR	592389	Identifier	prelink_range		592301	1					
ANR	592390	AssignmentExpression	* prelink_range = get_prelink_info_range_from_mach0 ( main_mach0 )		592301	2		=			
ANR	592391	Identifier	prelink_range		592301	0					
ANR	592392	CallExpression	get_prelink_info_range_from_mach0 ( main_mach0 )		592301	1					
ANR	592393	Callee	get_prelink_info_range_from_mach0		592301	0					
ANR	592394	Identifier	get_prelink_info_range_from_mach0		592301	0					
ANR	592395	ArgumentList	main_mach0		592301	1					
ANR	592396	Argument	main_mach0		592301	0					
ANR	592397	Identifier	main_mach0		592301	0					
ANR	592398	IfStatement	if ( ! prelink_range )		592301	10					
ANR	592399	Condition	! prelink_range	185:5:6017:6030	592301	0	True				
ANR	592400	UnaryOperationExpression	! prelink_range		592301	0					
ANR	592401	UnaryOperator	!		592301	0					
ANR	592402	Identifier	prelink_range		592301	1					
ANR	592403	CompoundStatement		13:21:389:389	592301	1					
ANR	592404	GotoStatement	goto beach ;	186:2:6037:6047	592301	0	True				
ANR	592405	Identifier	beach		592301	0					
ANR	592406	IdentifierDeclStatement	RKernelCacheObj * obj = R_NEW0 ( RKernelCacheObj ) ;	189:1:6054:6101	592301	11	True				
ANR	592407	IdentifierDecl	* obj = R_NEW0 ( RKernelCacheObj )		592301	0					
ANR	592408	IdentifierDeclType	RKernelCacheObj *		592301	0					
ANR	592409	Identifier	obj		592301	1					
ANR	592410	AssignmentExpression	* obj = R_NEW0 ( RKernelCacheObj )		592301	2		=			
ANR	592411	Identifier	obj		592301	0					
ANR	592412	CallExpression	R_NEW0 ( RKernelCacheObj )		592301	1					
ANR	592413	Callee	R_NEW0		592301	0					
ANR	592414	Identifier	R_NEW0		592301	0					
ANR	592415	ArgumentList	RKernelCacheObj		592301	1					
ANR	592416	Argument	RKernelCacheObj		592301	0					
ANR	592417	Identifier	RKernelCacheObj		592301	0					
ANR	592418	IfStatement	if ( ! obj )		592301	12					
ANR	592419	Condition	! obj	190:5:6108:6111	592301	0	True				
ANR	592420	UnaryOperationExpression	! obj		592301	0					
ANR	592421	UnaryOperator	!		592301	0					
ANR	592422	Identifier	obj		592301	1					
ANR	592423	CompoundStatement		18:11:470:470	592301	1					
ANR	592424	GotoStatement	goto beach ;	191:2:6118:6128	592301	0	True				
ANR	592425	Identifier	beach		592301	0					
ANR	592426	IdentifierDeclStatement	"RCFValueDict * prelink_info = r_cf_value_dict_parse ( fbuf , prelink_range -> range . offset , prelink_range -> range . size , R_CF_OPTION_SKIP_NSDATA ) ;"	194:1:6135:6275	592301	13	True				
ANR	592427	IdentifierDecl	"* prelink_info = r_cf_value_dict_parse ( fbuf , prelink_range -> range . offset , prelink_range -> range . size , R_CF_OPTION_SKIP_NSDATA )"		592301	0					
ANR	592428	IdentifierDeclType	RCFValueDict *		592301	0					
ANR	592429	Identifier	prelink_info		592301	1					
ANR	592430	AssignmentExpression	"* prelink_info = r_cf_value_dict_parse ( fbuf , prelink_range -> range . offset , prelink_range -> range . size , R_CF_OPTION_SKIP_NSDATA )"		592301	2		=			
ANR	592431	Identifier	prelink_info		592301	0					
ANR	592432	CallExpression	"r_cf_value_dict_parse ( fbuf , prelink_range -> range . offset , prelink_range -> range . size , R_CF_OPTION_SKIP_NSDATA )"		592301	1					
ANR	592433	Callee	r_cf_value_dict_parse		592301	0					
ANR	592434	Identifier	r_cf_value_dict_parse		592301	0					
ANR	592435	ArgumentList	fbuf		592301	1					
ANR	592436	Argument	fbuf		592301	0					
ANR	592437	Identifier	fbuf		592301	0					
ANR	592438	Argument	prelink_range -> range . offset		592301	1					
ANR	592439	MemberAccess	prelink_range -> range . offset		592301	0					
ANR	592440	PtrMemberAccess	prelink_range -> range		592301	0					
ANR	592441	Identifier	prelink_range		592301	0					
ANR	592442	Identifier	range		592301	1					
ANR	592443	Identifier	offset		592301	1					
ANR	592444	Argument	prelink_range -> range . size		592301	2					
ANR	592445	MemberAccess	prelink_range -> range . size		592301	0					
ANR	592446	PtrMemberAccess	prelink_range -> range		592301	0					
ANR	592447	Identifier	prelink_range		592301	0					
ANR	592448	Identifier	range		592301	1					
ANR	592449	Identifier	size		592301	1					
ANR	592450	Argument	R_CF_OPTION_SKIP_NSDATA		592301	3					
ANR	592451	Identifier	R_CF_OPTION_SKIP_NSDATA		592301	0					
ANR	592452	IfStatement	if ( ! prelink_info )		592301	14					
ANR	592453	Condition	! prelink_info	196:5:6282:6294	592301	0	True				
ANR	592454	UnaryOperationExpression	! prelink_info		592301	0					
ANR	592455	UnaryOperator	!		592301	0					
ANR	592456	Identifier	prelink_info		592301	1					
ANR	592457	CompoundStatement		24:20:653:653	592301	1					
ANR	592458	ExpressionStatement	R_FREE ( obj )	197:2:6301:6313	592301	0	True				
ANR	592459	CallExpression	R_FREE ( obj )		592301	0					
ANR	592460	Callee	R_FREE		592301	0					
ANR	592461	Identifier	R_FREE		592301	0					
ANR	592462	ArgumentList	obj		592301	1					
ANR	592463	Argument	obj		592301	0					
ANR	592464	Identifier	obj		592301	0					
ANR	592465	GotoStatement	goto beach ;	198:2:6317:6327	592301	1	True				
ANR	592466	Identifier	beach		592301	0					
ANR	592467	IfStatement	if ( ! pending_bin_files )		592301	15					
ANR	592468	Condition	! pending_bin_files	201:5:6338:6355	592301	0	True				
ANR	592469	UnaryOperationExpression	! pending_bin_files		592301	0					
ANR	592470	UnaryOperator	!		592301	0					
ANR	592471	Identifier	pending_bin_files		592301	1					
ANR	592472	CompoundStatement		29:25:714:714	592301	1					
ANR	592473	ExpressionStatement	pending_bin_files = r_list_new ( )	202:2:6362:6395	592301	0	True				
ANR	592474	AssignmentExpression	pending_bin_files = r_list_new ( )		592301	0		=			
ANR	592475	Identifier	pending_bin_files		592301	0					
ANR	592476	CallExpression	r_list_new ( )		592301	1					
ANR	592477	Callee	r_list_new		592301	0					
ANR	592478	Identifier	r_list_new		592301	0					
ANR	592479	ArgumentList			592301	1					
ANR	592480	IfStatement	if ( ! pending_bin_files )		592301	1					
ANR	592481	Condition	! pending_bin_files	203:6:6403:6420	592301	0	True				
ANR	592482	UnaryOperationExpression	! pending_bin_files		592301	0					
ANR	592483	UnaryOperator	!		592301	0					
ANR	592484	Identifier	pending_bin_files		592301	1					
ANR	592485	CompoundStatement		31:26:779:779	592301	1					
ANR	592486	ExpressionStatement	R_FREE ( obj )	204:3:6428:6440	592301	0	True				
ANR	592487	CallExpression	R_FREE ( obj )		592301	0					
ANR	592488	Callee	R_FREE		592301	0					
ANR	592489	Identifier	R_FREE		592301	0					
ANR	592490	ArgumentList	obj		592301	1					
ANR	592491	Argument	obj		592301	0					
ANR	592492	Identifier	obj		592301	0					
ANR	592493	ExpressionStatement	R_FREE ( prelink_info )	205:3:6445:6466	592301	1	True				
ANR	592494	CallExpression	R_FREE ( prelink_info )		592301	0					
ANR	592495	Callee	R_FREE		592301	0					
ANR	592496	Identifier	R_FREE		592301	0					
ANR	592497	ArgumentList	prelink_info		592301	1					
ANR	592498	Argument	prelink_info		592301	0					
ANR	592499	Identifier	prelink_info		592301	0					
ANR	592500	GotoStatement	goto beach ;	206:3:6471:6481	592301	2	True				
ANR	592501	Identifier	beach		592301	0					
ANR	592502	ExpressionStatement	obj -> mach0 = main_mach0	210:1:6492:6515	592301	16	True				
ANR	592503	AssignmentExpression	obj -> mach0 = main_mach0		592301	0		=			
ANR	592504	PtrMemberAccess	obj -> mach0		592301	0					
ANR	592505	Identifier	obj		592301	0					
ANR	592506	Identifier	mach0		592301	1					
ANR	592507	Identifier	main_mach0		592301	1					
ANR	592508	ExpressionStatement	obj -> rebase_info = rebase_info	211:1:6518:6548	592301	17	True				
ANR	592509	AssignmentExpression	obj -> rebase_info = rebase_info		592301	0		=			
ANR	592510	PtrMemberAccess	obj -> rebase_info		592301	0					
ANR	592511	Identifier	obj		592301	0					
ANR	592512	Identifier	rebase_info		592301	1					
ANR	592513	Identifier	rebase_info		592301	1					
ANR	592514	ExpressionStatement	obj -> prelink_info = prelink_info	212:1:6551:6583	592301	18	True				
ANR	592515	AssignmentExpression	obj -> prelink_info = prelink_info		592301	0		=			
ANR	592516	PtrMemberAccess	obj -> prelink_info		592301	0					
ANR	592517	Identifier	obj		592301	0					
ANR	592518	Identifier	prelink_info		592301	1					
ANR	592519	Identifier	prelink_info		592301	1					
ANR	592520	ExpressionStatement	obj -> cache_buf = fbuf	213:1:6586:6607	592301	19	True				
ANR	592521	AssignmentExpression	obj -> cache_buf = fbuf		592301	0		=			
ANR	592522	PtrMemberAccess	obj -> cache_buf		592301	0					
ANR	592523	Identifier	obj		592301	0					
ANR	592524	Identifier	cache_buf		592301	1					
ANR	592525	Identifier	fbuf		592301	1					
ANR	592526	ExpressionStatement	obj -> pa2va_exec = prelink_range -> pa2va_exec	214:1:6610:6653	592301	20	True				
ANR	592527	AssignmentExpression	obj -> pa2va_exec = prelink_range -> pa2va_exec		592301	0		=			
ANR	592528	PtrMemberAccess	obj -> pa2va_exec		592301	0					
ANR	592529	Identifier	obj		592301	0					
ANR	592530	Identifier	pa2va_exec		592301	1					
ANR	592531	PtrMemberAccess	prelink_range -> pa2va_exec		592301	1					
ANR	592532	Identifier	prelink_range		592301	0					
ANR	592533	Identifier	pa2va_exec		592301	1					
ANR	592534	ExpressionStatement	obj -> pa2va_data = prelink_range -> pa2va_data	215:1:6656:6699	592301	21	True				
ANR	592535	AssignmentExpression	obj -> pa2va_data = prelink_range -> pa2va_data		592301	0		=			
ANR	592536	PtrMemberAccess	obj -> pa2va_data		592301	0					
ANR	592537	Identifier	obj		592301	0					
ANR	592538	Identifier	pa2va_data		592301	1					
ANR	592539	PtrMemberAccess	prelink_range -> pa2va_data		592301	1					
ANR	592540	Identifier	prelink_range		592301	0					
ANR	592541	Identifier	pa2va_data		592301	1					
ANR	592542	ExpressionStatement	* bin_obj = obj	217:1:6703:6717	592301	22	True				
ANR	592543	AssignmentExpression	* bin_obj = obj		592301	0		=			
ANR	592544	UnaryOperationExpression	* bin_obj		592301	0					
ANR	592545	UnaryOperator	*		592301	0					
ANR	592546	Identifier	bin_obj		592301	1					
ANR	592547	Identifier	obj		592301	1					
ANR	592548	ExpressionStatement	"r_list_push ( pending_bin_files , bf )"	219:1:6721:6756	592301	23	True				
ANR	592549	CallExpression	"r_list_push ( pending_bin_files , bf )"		592301	0					
ANR	592550	Callee	r_list_push		592301	0					
ANR	592551	Identifier	r_list_push		592301	0					
ANR	592552	ArgumentList	pending_bin_files		592301	1					
ANR	592553	Argument	pending_bin_files		592301	0					
ANR	592554	Identifier	pending_bin_files		592301	0					
ANR	592555	Argument	bf		592301	1					
ANR	592556	Identifier	bf		592301	0					
ANR	592557	IfStatement	if ( rebase_info )		592301	24					
ANR	592558	Condition	rebase_info	221:5:6764:6774	592301	0	True				
ANR	592559	Identifier	rebase_info		592301	0					
ANR	592560	CompoundStatement		50:2:1137:1163	592301	1					
ANR	592561	IdentifierDeclStatement	RIO * io = bf -> rbin -> iob . io ;	222:2:6781:6807	592301	0	True				
ANR	592562	IdentifierDecl	* io = bf -> rbin -> iob . io		592301	0					
ANR	592563	IdentifierDeclType	RIO *		592301	0					
ANR	592564	Identifier	io		592301	1					
ANR	592565	AssignmentExpression	* io = bf -> rbin -> iob . io		592301	2		=			
ANR	592566	Identifier	io		592301	0					
ANR	592567	MemberAccess	bf -> rbin -> iob . io		592301	1					
ANR	592568	PtrMemberAccess	bf -> rbin -> iob		592301	0					
ANR	592569	PtrMemberAccess	bf -> rbin		592301	0					
ANR	592570	Identifier	bf		592301	0					
ANR	592571	Identifier	rbin		592301	1					
ANR	592572	Identifier	iob		592301	1					
ANR	592573	Identifier	io		592301	1					
ANR	592574	ExpressionStatement	"swizzle_io_read ( obj , io )"	223:2:6811:6836	592301	1	True				
ANR	592575	CallExpression	"swizzle_io_read ( obj , io )"		592301	0					
ANR	592576	Callee	swizzle_io_read		592301	0					
ANR	592577	Identifier	swizzle_io_read		592301	0					
ANR	592578	ArgumentList	obj		592301	1					
ANR	592579	Argument	obj		592301	0					
ANR	592580	Identifier	obj		592301	0					
ANR	592581	Argument	io		592301	1					
ANR	592582	Identifier	io		592301	0					
ANR	592583	ReturnStatement	return true ;	226:1:6843:6854	592301	25	True				
ANR	592584	Identifier	true		592301	0					
ANR	592585	Label	beach :	228:0:6857:6862	592301	26	True				
ANR	592586	Identifier	beach		592301	0					
ANR	592587	ExpressionStatement	r_buf_free ( fbuf )	229:1:6865:6882	592301	27	True				
ANR	592588	CallExpression	r_buf_free ( fbuf )		592301	0					
ANR	592589	Callee	r_buf_free		592301	0					
ANR	592590	Identifier	r_buf_free		592301	0					
ANR	592591	ArgumentList	fbuf		592301	1					
ANR	592592	Argument	fbuf		592301	0					
ANR	592593	Identifier	fbuf		592301	0					
ANR	592594	ExpressionStatement	MACH0_ ( mach0_free ) ( main_mach0 )	230:1:6885:6916	592301	28	True				
ANR	592595	CallExpression	MACH0_ ( mach0_free ) ( main_mach0 )		592301	0					
ANR	592596	Callee	MACH0_ ( mach0_free )		592301	0					
ANR	592597	CallExpression	MACH0_ ( mach0_free )		592301	0					
ANR	592598	Callee	MACH0_		592301	0					
ANR	592599	Identifier	MACH0_		592301	0					
ANR	592600	ArgumentList	mach0_free		592301	1					
ANR	592601	Argument	mach0_free		592301	0					
ANR	592602	Identifier	mach0_free		592301	0					
ANR	592603	ArgumentList	main_mach0		592301	1					
ANR	592604	Argument	main_mach0		592301	0					
ANR	592605	Identifier	main_mach0		592301	0					
ANR	592606	ReturnStatement	return false ;	231:1:6919:6931	592301	29	True				
ANR	592607	Identifier	false		592301	0					
ANR	592608	ReturnType	static bool		592301	1					
ANR	592609	Identifier	load_buffer		592301	2					
ANR	592610	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb"		592301	3					
ANR	592611	Parameter	RBinFile * bf	173:24:5574:5585	592301	0	True				
ANR	592612	ParameterType	RBinFile *		592301	0					
ANR	592613	Identifier	bf		592301	1					
ANR	592614	Parameter	void * * bin_obj	173:38:5588:5601	592301	1	True				
ANR	592615	ParameterType	void * *		592301	0					
ANR	592616	Identifier	bin_obj		592301	1					
ANR	592617	Parameter	RBuffer * buf	173:54:5604:5615	592301	2	True				
ANR	592618	ParameterType	RBuffer *		592301	0					
ANR	592619	Identifier	buf		592301	1					
ANR	592620	Parameter	ut64 loadaddr	173:68:5618:5630	592301	3	True				
ANR	592621	ParameterType	ut64		592301	0					
ANR	592622	Identifier	loadaddr		592301	1					
ANR	592623	Parameter	Sdb * sdb	173:83:5633:5640	592301	4	True				
ANR	592624	ParameterType	Sdb *		592301	0					
ANR	592625	Identifier	sdb		592301	1					
ANR	592626	CFGEntryNode	ENTRY		592301		True				
ANR	592627	CFGExitNode	EXIT		592301		True				
ANR	592628	Symbol	R_CF_OPTION_SKIP_NSDATA		592301						
ANR	592629	Symbol	r_rebase_info_new_from_mach0		592301						
ANR	592630	Symbol	rebase_info		592301						
ANR	592631	Symbol	pending_bin_files		592301						
ANR	592632	Symbol	& opts		592301						
ANR	592633	Symbol	main_mach0		592301						
ANR	592634	Symbol	obj -> mach0		592301						
ANR	592635	Symbol	r_cf_value_dict_parse		592301						
ANR	592636	Symbol	prelink_info		592301						
ANR	592637	Symbol	* bin_obj		592301						
ANR	592638	Symbol	opts_set_default		592301						
ANR	592639	Symbol	io		592301						
ANR	592640	Symbol	sdb		592301						
ANR	592641	Symbol	R_NEW0		592301						
ANR	592642	Symbol	prelink_range -> range		592301						
ANR	592643	Symbol	prelink_range -> pa2va_exec		592301						
ANR	592644	Symbol	* * bf		592301						
ANR	592645	Symbol	bin_obj		592301						
ANR	592646	Symbol	true		592301						
ANR	592647	Symbol	prelink_range -> range . size		592301						
ANR	592648	Symbol	* bf -> rbin		592301						
ANR	592649	Symbol	bf		592301						
ANR	592650	Symbol	get_prelink_info_range_from_mach0		592301						
ANR	592651	Symbol	bf -> rbin		592301						
ANR	592652	Symbol	loadaddr		592301						
ANR	592653	Symbol	obj -> prelink_info		592301						
ANR	592654	Symbol	new_buf		592301						
ANR	592655	Symbol	RKernelCacheObj		592301						
ANR	592656	Symbol	obj -> cache_buf		592301						
ANR	592657	Symbol	prelink_range		592301						
ANR	592658	Symbol	obj -> pa2va_exec		592301						
ANR	592659	Symbol	prelink_range -> pa2va_data		592301						
ANR	592660	Symbol	* prelink_range		592301						
ANR	592661	Symbol	* obj		592301						
ANR	592662	Symbol	fbuf		592301						
ANR	592663	Symbol	obj_t		592301						
ANR	592664	Symbol	r_buf_ref		592301						
ANR	592665	Symbol	false		592301						
ANR	592666	Symbol	bf -> rbin -> iob . io		592301						
ANR	592667	Symbol	* bf		592301						
ANR	592668	Symbol	obj -> rebase_info		592301						
ANR	592669	Symbol	obj -> pa2va_data		592301						
ANR	592670	Symbol	prelink_range -> range . offset		592301						
ANR	592671	Symbol	MACH0_		592301						
ANR	592672	Symbol	buf		592301						
ANR	592673	Symbol	obj		592301						
ANR	592674	Symbol	bf -> rbin -> iob		592301						
ANR	592675	Symbol	mach0_free		592301						
ANR	592676	Symbol	r_list_new		592301						
ANR	592677	Function	ensure_kexts_initialized	234:0:6936:7282							
ANR	592678	FunctionDef	ensure_kexts_initialized (RKernelCacheObj * obj)		592677	0					
ANR	592679	CompoundStatement		234:59:6995:7282	592677	0					
ANR	592680	IfStatement	if ( obj -> kexts_initialized )		592677	0					
ANR	592681	Condition	obj -> kexts_initialized	235:5:7002:7023	592677	0	True				
ANR	592682	PtrMemberAccess	obj -> kexts_initialized		592677	0					
ANR	592683	Identifier	obj		592677	0					
ANR	592684	Identifier	kexts_initialized		592677	1					
ANR	592685	CompoundStatement		2:29:30:30	592677	1					
ANR	592686	ReturnStatement	return ;	236:2:7030:7036	592677	0	True				
ANR	592687	ExpressionStatement	obj -> kexts_initialized = true	238:1:7042:7071	592677	1	True				
ANR	592688	AssignmentExpression	obj -> kexts_initialized = true		592677	0		=			
ANR	592689	PtrMemberAccess	obj -> kexts_initialized		592677	0					
ANR	592690	Identifier	obj		592677	0					
ANR	592691	Identifier	kexts_initialized		592677	1					
ANR	592692	Identifier	true		592677	1					
ANR	592693	IdentifierDeclStatement	RList * kexts = filter_kexts ( obj ) ;	240:1:7075:7108	592677	2	True				
ANR	592694	IdentifierDecl	* kexts = filter_kexts ( obj )		592677	0					
ANR	592695	IdentifierDeclType	RList *		592677	0					
ANR	592696	Identifier	kexts		592677	1					
ANR	592697	AssignmentExpression	* kexts = filter_kexts ( obj )		592677	2		=			
ANR	592698	Identifier	kexts		592677	0					
ANR	592699	CallExpression	filter_kexts ( obj )		592677	1					
ANR	592700	Callee	filter_kexts		592677	0					
ANR	592701	Identifier	filter_kexts		592677	0					
ANR	592702	ArgumentList	obj		592677	1					
ANR	592703	Argument	obj		592677	0					
ANR	592704	Identifier	obj		592677	0					
ANR	592705	IfStatement	if ( kexts && ! r_list_length ( kexts ) )		592677	3					
ANR	592706	Condition	kexts && ! r_list_length ( kexts )	242:5:7116:7146	592677	0	True				
ANR	592707	AndExpression	kexts && ! r_list_length ( kexts )		592677	0		&&			
ANR	592708	Identifier	kexts		592677	0					
ANR	592709	UnaryOperationExpression	! r_list_length ( kexts )		592677	1					
ANR	592710	UnaryOperator	!		592677	0					
ANR	592711	CallExpression	r_list_length ( kexts )		592677	1					
ANR	592712	Callee	r_list_length		592677	0					
ANR	592713	Identifier	r_list_length		592677	0					
ANR	592714	ArgumentList	kexts		592677	1					
ANR	592715	Argument	kexts		592677	0					
ANR	592716	Identifier	kexts		592677	0					
ANR	592717	CompoundStatement		9:38:153:153	592677	1					
ANR	592718	ExpressionStatement	r_list_free ( kexts )	243:2:7153:7172	592677	0	True				
ANR	592719	CallExpression	r_list_free ( kexts )		592677	0					
ANR	592720	Callee	r_list_free		592677	0					
ANR	592721	Identifier	r_list_free		592677	0					
ANR	592722	ArgumentList	kexts		592677	1					
ANR	592723	Argument	kexts		592677	0					
ANR	592724	Identifier	kexts		592677	0					
ANR	592725	ExpressionStatement	kexts = NULL	244:2:7176:7188	592677	1	True				
ANR	592726	AssignmentExpression	kexts = NULL		592677	0		=			
ANR	592727	Identifier	kexts		592677	0					
ANR	592728	Identifier	NULL		592677	1					
ANR	592729	IfStatement	if ( ! kexts )		592677	4					
ANR	592730	Condition	! kexts	247:5:7199:7204	592677	0	True				
ANR	592731	UnaryOperationExpression	! kexts		592677	0					
ANR	592732	UnaryOperator	!		592677	0					
ANR	592733	Identifier	kexts		592677	1					
ANR	592734	CompoundStatement		14:13:211:211	592677	1					
ANR	592735	ExpressionStatement	kexts = carve_kexts ( obj )	248:2:7211:7236	592677	0	True				
ANR	592736	AssignmentExpression	kexts = carve_kexts ( obj )		592677	0		=			
ANR	592737	Identifier	kexts		592677	0					
ANR	592738	CallExpression	carve_kexts ( obj )		592677	1					
ANR	592739	Callee	carve_kexts		592677	0					
ANR	592740	Identifier	carve_kexts		592677	0					
ANR	592741	ArgumentList	obj		592677	1					
ANR	592742	Argument	obj		592677	0					
ANR	592743	Identifier	obj		592677	0					
ANR	592744	ExpressionStatement	obj -> kexts = r_kext_index_new ( kexts )	251:1:7243:7280	592677	5	True				
ANR	592745	AssignmentExpression	obj -> kexts = r_kext_index_new ( kexts )		592677	0		=			
ANR	592746	PtrMemberAccess	obj -> kexts		592677	0					
ANR	592747	Identifier	obj		592677	0					
ANR	592748	Identifier	kexts		592677	1					
ANR	592749	CallExpression	r_kext_index_new ( kexts )		592677	1					
ANR	592750	Callee	r_kext_index_new		592677	0					
ANR	592751	Identifier	r_kext_index_new		592677	0					
ANR	592752	ArgumentList	kexts		592677	1					
ANR	592753	Argument	kexts		592677	0					
ANR	592754	Identifier	kexts		592677	0					
ANR	592755	ReturnType	static void		592677	1					
ANR	592756	Identifier	ensure_kexts_initialized		592677	2					
ANR	592757	ParameterList	RKernelCacheObj * obj		592677	3					
ANR	592758	Parameter	RKernelCacheObj * obj	234:37:6973:6992	592677	0	True				
ANR	592759	ParameterType	RKernelCacheObj *		592677	0					
ANR	592760	Identifier	obj		592677	1					
ANR	592761	CFGEntryNode	ENTRY		592677		True				
ANR	592762	CFGExitNode	EXIT		592677		True				
ANR	592763	Symbol	* obj		592677						
ANR	592764	Symbol	NULL		592677						
ANR	592765	Symbol	obj		592677						
ANR	592766	Symbol	filter_kexts		592677						
ANR	592767	Symbol	r_kext_index_new		592677						
ANR	592768	Symbol	true		592677						
ANR	592769	Symbol	obj -> kexts		592677						
ANR	592770	Symbol	obj -> kexts_initialized		592677						
ANR	592771	Symbol	kexts		592677						
ANR	592772	Symbol	r_list_length		592677						
ANR	592773	Symbol	carve_kexts		592677						
ANR	592774	DeclStmt									
ANR	592775	Decl							struct section_t	struct section_t *	sections
ANR	592776	DeclStmt									
ANR	592777	Decl							RPrelinkRange	RPrelinkRange *	prelink_range
ANR	592778	DeclStmt									
ANR	592779	Decl							int	int	incomplete
ANR	592780	DeclStmt									
ANR	592781	Decl							int	int	i
ANR	592782	Function	filter_kexts	300:0:8299:10708							
ANR	592783	FunctionDef	filter_kexts (RKernelCacheObj * obj)		592782	0					
ANR	592784	CompoundStatement		300:49:8348:10708	592782	0					
ANR	592785	IdentifierDeclStatement	RCFValueArray * kext_array = NULL ;	301:1:8351:8383	592782	0	True				
ANR	592786	IdentifierDecl	* kext_array = NULL		592782	0					
ANR	592787	IdentifierDeclType	RCFValueArray *		592782	0					
ANR	592788	Identifier	kext_array		592782	1					
ANR	592789	AssignmentExpression	* kext_array = NULL		592782	2		=			
ANR	592790	Identifier	NULL		592782	0					
ANR	592791	Identifier	NULL		592782	1					
ANR	592792	IdentifierDeclStatement	RListIter * iter ;	302:1:8386:8401	592782	1	True				
ANR	592793	IdentifierDecl	* iter		592782	0					
ANR	592794	IdentifierDeclType	RListIter *		592782	0					
ANR	592795	Identifier	iter		592782	1					
ANR	592796	IdentifierDeclStatement	RCFKeyValue * item ;	303:1:8404:8421	592782	2	True				
ANR	592797	IdentifierDecl	* item		592782	0					
ANR	592798	IdentifierDeclType	RCFKeyValue *		592782	0					
ANR	592799	Identifier	item		592782	1					
ANR	592800	Statement	r_list_foreach	304:1:8424:8437	592782	3	True				
ANR	592801	Statement	(	304:16:8439:8439	592782	4	True				
ANR	592802	Statement	obj	304:17:8440:8442	592782	5	True				
ANR	592803	Statement	->	304:20:8443:8444	592782	6	True				
ANR	592804	Statement	prelink_info	304:22:8445:8456	592782	7	True				
ANR	592805	Statement	->	304:34:8457:8458	592782	8	True				
ANR	592806	Statement	pairs	304:36:8459:8463	592782	9	True				
ANR	592807	Statement	","	304:41:8464:8464	592782	10	True				
ANR	592808	Statement	iter	304:43:8466:8469	592782	11	True				
ANR	592809	Statement	","	304:47:8470:8470	592782	12	True				
ANR	592810	Statement	item	304:49:8472:8475	592782	13	True				
ANR	592811	Statement	)	304:53:8476:8476	592782	14	True				
ANR	592812	CompoundStatement		5:55:129:129	592782	15					
ANR	592813	IfStatement	"if ( ! strcmp ( item -> key , ""_PrelinkInfoDictionary"" ) )"		592782	0					
ANR	592814	Condition	"! strcmp ( item -> key , ""_PrelinkInfoDictionary"" )"	305:6:8486:8530	592782	0	True				
ANR	592815	UnaryOperationExpression	"! strcmp ( item -> key , ""_PrelinkInfoDictionary"" )"		592782	0					
ANR	592816	UnaryOperator	!		592782	0					
ANR	592817	CallExpression	"strcmp ( item -> key , ""_PrelinkInfoDictionary"" )"		592782	1					
ANR	592818	Callee	strcmp		592782	0					
ANR	592819	Identifier	strcmp		592782	0					
ANR	592820	ArgumentList	item -> key		592782	1					
ANR	592821	Argument	item -> key		592782	0					
ANR	592822	PtrMemberAccess	item -> key		592782	0					
ANR	592823	Identifier	item		592782	0					
ANR	592824	Identifier	key		592782	1					
ANR	592825	Argument	"""_PrelinkInfoDictionary"""		592782	1					
ANR	592826	PrimaryExpression	"""_PrelinkInfoDictionary"""		592782	0					
ANR	592827	CompoundStatement		6:53:184:184	592782	1					
ANR	592828	ExpressionStatement	kext_array = ( RCFValueArray * ) item -> value	306:3:8538:8579	592782	0	True				
ANR	592829	AssignmentExpression	kext_array = ( RCFValueArray * ) item -> value		592782	0		=			
ANR	592830	Identifier	kext_array		592782	0					
ANR	592831	CastExpression	( RCFValueArray * ) item -> value		592782	1					
ANR	592832	CastTarget	RCFValueArray *		592782	0					
ANR	592833	PtrMemberAccess	item -> value		592782	1					
ANR	592834	Identifier	item		592782	0					
ANR	592835	Identifier	value		592782	1					
ANR	592836	BreakStatement	break ;	307:3:8584:8589	592782	1	True				
ANR	592837	IfStatement	if ( ! kext_array )		592782	16					
ANR	592838	Condition	! kext_array	311:5:8604:8614	592782	0	True				
ANR	592839	UnaryOperationExpression	! kext_array		592782	0					
ANR	592840	UnaryOperator	!		592782	0					
ANR	592841	Identifier	kext_array		592782	1					
ANR	592842	CompoundStatement		12:18:268:268	592782	1					
ANR	592843	ReturnStatement	return NULL ;	312:2:8621:8632	592782	0	True				
ANR	592844	Identifier	NULL		592782	0					
ANR	592845	IdentifierDeclStatement	RList * kexts = r_list_newf ( ( RListFree ) & r_kext_free ) ;	315:1:8639:8692	592782	17	True				
ANR	592846	IdentifierDecl	* kexts = r_list_newf ( ( RListFree ) & r_kext_free )		592782	0					
ANR	592847	IdentifierDeclType	RList *		592782	0					
ANR	592848	Identifier	kexts		592782	1					
ANR	592849	AssignmentExpression	* kexts = r_list_newf ( ( RListFree ) & r_kext_free )		592782	2		=			
ANR	592850	Identifier	kexts		592782	0					
ANR	592851	CallExpression	r_list_newf ( ( RListFree ) & r_kext_free )		592782	1					
ANR	592852	Callee	r_list_newf		592782	0					
ANR	592853	Identifier	r_list_newf		592782	0					
ANR	592854	ArgumentList	( RListFree ) & r_kext_free		592782	1					
ANR	592855	Argument	( RListFree ) & r_kext_free		592782	0					
ANR	592856	CastExpression	( RListFree ) & r_kext_free		592782	0					
ANR	592857	CastTarget	RListFree		592782	0					
ANR	592858	UnaryOperationExpression	& r_kext_free		592782	1					
ANR	592859	UnaryOperator	&		592782	0					
ANR	592860	Identifier	r_kext_free		592782	1					
ANR	592861	IfStatement	if ( ! kexts )		592782	18					
ANR	592862	Condition	! kexts	316:5:8699:8704	592782	0	True				
ANR	592863	UnaryOperationExpression	! kexts		592782	0					
ANR	592864	UnaryOperator	!		592782	0					
ANR	592865	Identifier	kexts		592782	1					
ANR	592866	CompoundStatement		17:13:358:358	592782	1					
ANR	592867	ReturnStatement	return NULL ;	317:2:8711:8722	592782	0	True				
ANR	592868	Identifier	NULL		592782	0					
ANR	592869	IdentifierDeclStatement	bool is_sorted = true ;	320:1:8729:8750	592782	19	True				
ANR	592870	IdentifierDecl	is_sorted = true		592782	0					
ANR	592871	IdentifierDeclType	bool		592782	0					
ANR	592872	Identifier	is_sorted		592782	1					
ANR	592873	AssignmentExpression	is_sorted = true		592782	2		=			
ANR	592874	Identifier	true		592782	0					
ANR	592875	Identifier	true		592782	1					
ANR	592876	IdentifierDeclStatement	RKext * prev_kext = NULL ;	321:1:8753:8776	592782	20	True				
ANR	592877	IdentifierDecl	* prev_kext = NULL		592782	0					
ANR	592878	IdentifierDeclType	RKext *		592782	0					
ANR	592879	Identifier	prev_kext		592782	1					
ANR	592880	AssignmentExpression	* prev_kext = NULL		592782	2		=			
ANR	592881	Identifier	NULL		592782	0					
ANR	592882	Identifier	NULL		592782	1					
ANR	592883	IdentifierDeclStatement	RCFValueDict * kext_item ;	322:1:8779:8802	592782	21	True				
ANR	592884	IdentifierDecl	* kext_item		592782	0					
ANR	592885	IdentifierDeclType	RCFValueDict *		592782	0					
ANR	592886	Identifier	kext_item		592782	1					
ANR	592887	Statement	r_list_foreach	323:1:8805:8818	592782	22	True				
ANR	592888	Statement	(	323:16:8820:8820	592782	23	True				
ANR	592889	Statement	kext_array	323:17:8821:8830	592782	24	True				
ANR	592890	Statement	->	323:27:8831:8832	592782	25	True				
ANR	592891	Statement	values	323:29:8833:8838	592782	26	True				
ANR	592892	Statement	","	323:35:8839:8839	592782	27	True				
ANR	592893	Statement	iter	323:37:8841:8844	592782	28	True				
ANR	592894	Statement	","	323:41:8845:8845	592782	29	True				
ANR	592895	Statement	kext_item	323:43:8847:8855	592782	30	True				
ANR	592896	Statement	)	323:52:8856:8856	592782	31	True				
ANR	592897	CompoundStatement		32:2:627:651	592782	32					
ANR	592898	IdentifierDeclStatement	RKext * kext = R_NEW0 ( RKext ) ;	324:2:8862:8890	592782	0	True				
ANR	592899	IdentifierDecl	* kext = R_NEW0 ( RKext )		592782	0					
ANR	592900	IdentifierDeclType	RKext *		592782	0					
ANR	592901	Identifier	kext		592782	1					
ANR	592902	AssignmentExpression	* kext = R_NEW0 ( RKext )		592782	2		=			
ANR	592903	Identifier	kext		592782	0					
ANR	592904	CallExpression	R_NEW0 ( RKext )		592782	1					
ANR	592905	Callee	R_NEW0		592782	0					
ANR	592906	Identifier	R_NEW0		592782	0					
ANR	592907	ArgumentList	RKext		592782	1					
ANR	592908	Argument	RKext		592782	0					
ANR	592909	Identifier	RKext		592782	0					
ANR	592910	IfStatement	if ( ! kext )		592782	1					
ANR	592911	Condition	! kext	325:6:8898:8902	592782	0	True				
ANR	592912	UnaryOperationExpression	! kext		592782	0					
ANR	592913	UnaryOperator	!		592782	0					
ANR	592914	Identifier	kext		592782	1					
ANR	592915	CompoundStatement		26:13:556:556	592782	1					
ANR	592916	ExpressionStatement	R_FREE ( kexts )	326:3:8910:8924	592782	0	True				
ANR	592917	CallExpression	R_FREE ( kexts )		592782	0					
ANR	592918	Callee	R_FREE		592782	0					
ANR	592919	Identifier	R_FREE		592782	0					
ANR	592920	ArgumentList	kexts		592782	1					
ANR	592921	Argument	kexts		592782	0					
ANR	592922	Identifier	kexts		592782	0					
ANR	592923	ReturnStatement	return NULL ;	327:3:8929:8940	592782	1	True				
ANR	592924	Identifier	NULL		592782	0					
ANR	592925	IdentifierDeclStatement	int kext_incomplete = 5 ;	330:2:8949:8972	592782	2	True				
ANR	592926	IdentifierDecl	kext_incomplete = 5		592782	0					
ANR	592927	IdentifierDeclType	int		592782	0					
ANR	592928	Identifier	kext_incomplete		592782	1					
ANR	592929	AssignmentExpression	kext_incomplete = 5		592782	2		=			
ANR	592930	Identifier	kext_incomplete		592782	0					
ANR	592931	PrimaryExpression	5		592782	1					
ANR	592932	IdentifierDeclStatement	RListIter * internal_iter ;	331:2:8976:9000	592782	3	True				
ANR	592933	IdentifierDecl	* internal_iter		592782	0					
ANR	592934	IdentifierDeclType	RListIter *		592782	0					
ANR	592935	Identifier	internal_iter		592782	1					
ANR	592936	Statement	r_list_foreach	332:2:9004:9017	592782	4	True				
ANR	592937	Statement	(	332:17:9019:9019	592782	5	True				
ANR	592938	Statement	kext_item	332:18:9020:9028	592782	6	True				
ANR	592939	Statement	->	332:27:9029:9030	592782	7	True				
ANR	592940	Statement	pairs	332:29:9031:9035	592782	8	True				
ANR	592941	Statement	","	332:34:9036:9036	592782	9	True				
ANR	592942	Statement	internal_iter	332:36:9038:9050	592782	10	True				
ANR	592943	Statement	","	332:49:9051:9051	592782	11	True				
ANR	592944	Statement	item	332:51:9053:9056	592782	12	True				
ANR	592945	Statement	)	332:55:9057:9057	592782	13	True				
ANR	592946	CompoundStatement		33:57:710:710	592782	14					
ANR	592947	IfStatement	"if ( ! strcmp ( item -> key , ""CFBundlePackageType"" ) )"		592782	0					
ANR	592948	Condition	"! strcmp ( item -> key , ""CFBundlePackageType"" )"	333:7:9068:9109	592782	0	True				
ANR	592949	UnaryOperationExpression	"! strcmp ( item -> key , ""CFBundlePackageType"" )"		592782	0					
ANR	592950	UnaryOperator	!		592782	0					
ANR	592951	CallExpression	"strcmp ( item -> key , ""CFBundlePackageType"" )"		592782	1					
ANR	592952	Callee	strcmp		592782	0					
ANR	592953	Identifier	strcmp		592782	0					
ANR	592954	ArgumentList	item -> key		592782	1					
ANR	592955	Argument	item -> key		592782	0					
ANR	592956	PtrMemberAccess	item -> key		592782	0					
ANR	592957	Identifier	item		592782	0					
ANR	592958	Identifier	key		592782	1					
ANR	592959	Argument	"""CFBundlePackageType"""		592782	1					
ANR	592960	PrimaryExpression	"""CFBundlePackageType"""		592782	0					
ANR	592961	CompoundStatement		38:4:831:883	592782	1					
ANR	592962	IfStatement	if ( item -> value -> type != R_CF_STRING )		592782	0					
ANR	592963	Condition	item -> value -> type != R_CF_STRING	334:8:9122:9153	592782	0	True				
ANR	592964	EqualityExpression	item -> value -> type != R_CF_STRING		592782	0		!=			
ANR	592965	PtrMemberAccess	item -> value -> type		592782	0					
ANR	592966	PtrMemberAccess	item -> value		592782	0					
ANR	592967	Identifier	item		592782	0					
ANR	592968	Identifier	value		592782	1					
ANR	592969	Identifier	type		592782	1					
ANR	592970	Identifier	R_CF_STRING		592782	1					
ANR	592971	CompoundStatement		35:42:807:807	592782	1					
ANR	592972	BreakStatement	break ;	335:5:9163:9168	592782	0	True				
ANR	592973	IdentifierDeclStatement	RCFValueString * type = ( RCFValueString * ) item -> value ;	337:4:9180:9232	592782	1	True				
ANR	592974	IdentifierDecl	* type = ( RCFValueString * ) item -> value		592782	0					
ANR	592975	IdentifierDeclType	RCFValueString *		592782	0					
ANR	592976	Identifier	type		592782	1					
ANR	592977	AssignmentExpression	* type = ( RCFValueString * ) item -> value		592782	2		=			
ANR	592978	Identifier	type		592782	0					
ANR	592979	CastExpression	( RCFValueString * ) item -> value		592782	1					
ANR	592980	CastTarget	RCFValueString *		592782	0					
ANR	592981	PtrMemberAccess	item -> value		592782	1					
ANR	592982	Identifier	item		592782	0					
ANR	592983	Identifier	value		592782	1					
ANR	592984	IfStatement	"if ( strcmp ( type -> value , ""KEXT"" ) )"		592782	2					
ANR	592985	Condition	"strcmp ( type -> value , ""KEXT"" )"	338:8:9242:9269	592782	0	True				
ANR	592986	CallExpression	"strcmp ( type -> value , ""KEXT"" )"		592782	0					
ANR	592987	Callee	strcmp		592782	0					
ANR	592988	Identifier	strcmp		592782	0					
ANR	592989	ArgumentList	type -> value		592782	1					
ANR	592990	Argument	type -> value		592782	0					
ANR	592991	PtrMemberAccess	type -> value		592782	0					
ANR	592992	Identifier	type		592782	0					
ANR	592993	Identifier	value		592782	1					
ANR	592994	Argument	"""KEXT"""		592782	1					
ANR	592995	PrimaryExpression	"""KEXT"""		592782	0					
ANR	592996	CompoundStatement		39:38:923:923	592782	1					
ANR	592997	BreakStatement	break ;	339:5:9279:9284	592782	0	True				
ANR	592998	ExpressionStatement	kext_incomplete --	341:4:9296:9313	592782	3	True				
ANR	592999	PostIncDecOperationExpression	kext_incomplete --		592782	0					
ANR	593000	Identifier	kext_incomplete		592782	0					
ANR	593001	IncDec	--		592782	1					
ANR	593002	IfStatement	"if ( ! strcmp ( item -> key , ""_PrelinkExecutableLoadAddr"" ) )"		592782	1					
ANR	593003	Condition	"! strcmp ( item -> key , ""_PrelinkExecutableLoadAddr"" )"	344:7:9328:9376	592782	0	True				
ANR	593004	UnaryOperationExpression	"! strcmp ( item -> key , ""_PrelinkExecutableLoadAddr"" )"		592782	0					
ANR	593005	UnaryOperator	!		592782	0					
ANR	593006	CallExpression	"strcmp ( item -> key , ""_PrelinkExecutableLoadAddr"" )"		592782	1					
ANR	593007	Callee	strcmp		592782	0					
ANR	593008	Identifier	strcmp		592782	0					
ANR	593009	ArgumentList	item -> key		592782	1					
ANR	593010	Argument	item -> key		592782	0					
ANR	593011	PtrMemberAccess	item -> key		592782	0					
ANR	593012	Identifier	item		592782	0					
ANR	593013	Identifier	key		592782	1					
ANR	593014	Argument	"""_PrelinkExecutableLoadAddr"""		592782	1					
ANR	593015	PrimaryExpression	"""_PrelinkExecutableLoadAddr"""		592782	0					
ANR	593016	CompoundStatement		45:58:1030:1030	592782	1					
ANR	593017	IfStatement	if ( item -> value -> type == R_CF_INTEGER )		592782	0					
ANR	593018	Condition	item -> value -> type == R_CF_INTEGER	345:8:9389:9421	592782	0	True				
ANR	593019	EqualityExpression	item -> value -> type == R_CF_INTEGER		592782	0		==			
ANR	593020	PtrMemberAccess	item -> value -> type		592782	0					
ANR	593021	PtrMemberAccess	item -> value		592782	0					
ANR	593022	Identifier	item		592782	0					
ANR	593023	Identifier	value		592782	1					
ANR	593024	Identifier	type		592782	1					
ANR	593025	Identifier	R_CF_INTEGER		592782	1					
ANR	593026	CompoundStatement		46:43:1075:1075	592782	1					
ANR	593027	ExpressionStatement	kext_incomplete --	346:5:9431:9448	592782	0	True				
ANR	593028	PostIncDecOperationExpression	kext_incomplete --		592782	0					
ANR	593029	Identifier	kext_incomplete		592782	0					
ANR	593030	IncDec	--		592782	1					
ANR	593031	ExpressionStatement	kext -> vaddr = ( ( RCFValueInteger * ) item -> value ) -> value	347:5:9455:9508	592782	1	True				
ANR	593032	AssignmentExpression	kext -> vaddr = ( ( RCFValueInteger * ) item -> value ) -> value		592782	0		=			
ANR	593033	PtrMemberAccess	kext -> vaddr		592782	0					
ANR	593034	Identifier	kext		592782	0					
ANR	593035	Identifier	vaddr		592782	1					
ANR	593036	PtrMemberAccess	( ( RCFValueInteger * ) item -> value ) -> value		592782	1					
ANR	593037	CastExpression	( RCFValueInteger * ) item -> value		592782	0					
ANR	593038	CastTarget	RCFValueInteger *		592782	0					
ANR	593039	PtrMemberAccess	item -> value		592782	1					
ANR	593040	Identifier	item		592782	0					
ANR	593041	Identifier	value		592782	1					
ANR	593042	Identifier	value		592782	1					
ANR	593043	ExpressionStatement	kext -> range . offset = kext -> vaddr - obj -> pa2va_exec	348:5:9515:9565	592782	2	True				
ANR	593044	AssignmentExpression	kext -> range . offset = kext -> vaddr - obj -> pa2va_exec		592782	0		=			
ANR	593045	MemberAccess	kext -> range . offset		592782	0					
ANR	593046	PtrMemberAccess	kext -> range		592782	0					
ANR	593047	Identifier	kext		592782	0					
ANR	593048	Identifier	range		592782	1					
ANR	593049	Identifier	offset		592782	1					
ANR	593050	AdditiveExpression	kext -> vaddr - obj -> pa2va_exec		592782	1		-			
ANR	593051	PtrMemberAccess	kext -> vaddr		592782	0					
ANR	593052	Identifier	kext		592782	0					
ANR	593053	Identifier	vaddr		592782	1					
ANR	593054	PtrMemberAccess	obj -> pa2va_exec		592782	1					
ANR	593055	Identifier	obj		592782	0					
ANR	593056	Identifier	pa2va_exec		592782	1					
ANR	593057	IfStatement	"if ( ! strcmp ( item -> key , ""_PrelinkExecutableSize"" ) )"		592782	2					
ANR	593058	Condition	"! strcmp ( item -> key , ""_PrelinkExecutableSize"" )"	352:7:9586:9630	592782	0	True				
ANR	593059	UnaryOperationExpression	"! strcmp ( item -> key , ""_PrelinkExecutableSize"" )"		592782	0					
ANR	593060	UnaryOperator	!		592782	0					
ANR	593061	CallExpression	"strcmp ( item -> key , ""_PrelinkExecutableSize"" )"		592782	1					
ANR	593062	Callee	strcmp		592782	0					
ANR	593063	Identifier	strcmp		592782	0					
ANR	593064	ArgumentList	item -> key		592782	1					
ANR	593065	Argument	item -> key		592782	0					
ANR	593066	PtrMemberAccess	item -> key		592782	0					
ANR	593067	Identifier	item		592782	0					
ANR	593068	Identifier	key		592782	1					
ANR	593069	Argument	"""_PrelinkExecutableSize"""		592782	1					
ANR	593070	PrimaryExpression	"""_PrelinkExecutableSize"""		592782	0					
ANR	593071	CompoundStatement		53:54:1284:1284	592782	1					
ANR	593072	ExpressionStatement	kext_incomplete --	353:4:9639:9656	592782	0	True				
ANR	593073	PostIncDecOperationExpression	kext_incomplete --		592782	0					
ANR	593074	Identifier	kext_incomplete		592782	0					
ANR	593075	IncDec	--		592782	1					
ANR	593076	IfStatement	if ( item -> value -> type == R_CF_INTEGER )		592782	1					
ANR	593077	Condition	item -> value -> type == R_CF_INTEGER	354:8:9666:9698	592782	0	True				
ANR	593078	EqualityExpression	item -> value -> type == R_CF_INTEGER		592782	0		==			
ANR	593079	PtrMemberAccess	item -> value -> type		592782	0					
ANR	593080	PtrMemberAccess	item -> value		592782	0					
ANR	593081	Identifier	item		592782	0					
ANR	593082	Identifier	value		592782	1					
ANR	593083	Identifier	type		592782	1					
ANR	593084	Identifier	R_CF_INTEGER		592782	1					
ANR	593085	CompoundStatement		55:43:1352:1352	592782	1					
ANR	593086	ExpressionStatement	kext -> range . size = ( ( RCFValueInteger * ) item -> value ) -> value	355:5:9708:9766	592782	0	True				
ANR	593087	AssignmentExpression	kext -> range . size = ( ( RCFValueInteger * ) item -> value ) -> value		592782	0		=			
ANR	593088	MemberAccess	kext -> range . size		592782	0					
ANR	593089	PtrMemberAccess	kext -> range		592782	0					
ANR	593090	Identifier	kext		592782	0					
ANR	593091	Identifier	range		592782	1					
ANR	593092	Identifier	size		592782	1					
ANR	593093	PtrMemberAccess	( ( RCFValueInteger * ) item -> value ) -> value		592782	1					
ANR	593094	CastExpression	( RCFValueInteger * ) item -> value		592782	0					
ANR	593095	CastTarget	RCFValueInteger *		592782	0					
ANR	593096	PtrMemberAccess	item -> value		592782	1					
ANR	593097	Identifier	item		592782	0					
ANR	593098	Identifier	value		592782	1					
ANR	593099	Identifier	value		592782	1					
ANR	593100	ElseStatement	else		592782	0					
ANR	593101	CompoundStatement		57:11:1430:1430	592782	0					
ANR	593102	ExpressionStatement	kext -> range . size = 0	357:5:9786:9806	592782	0	True				
ANR	593103	AssignmentExpression	kext -> range . size = 0		592782	0		=			
ANR	593104	MemberAccess	kext -> range . size		592782	0					
ANR	593105	PtrMemberAccess	kext -> range		592782	0					
ANR	593106	Identifier	kext		592782	0					
ANR	593107	Identifier	range		592782	1					
ANR	593108	Identifier	size		592782	1					
ANR	593109	PrimaryExpression	0		592782	1					
ANR	593110	IfStatement	"if ( ! strcmp ( item -> key , ""_PrelinkKmodInfo"" ) )"		592782	3					
ANR	593111	Condition	"! strcmp ( item -> key , ""_PrelinkKmodInfo"" )"	361:7:9827:9865	592782	0	True				
ANR	593112	UnaryOperationExpression	"! strcmp ( item -> key , ""_PrelinkKmodInfo"" )"		592782	0					
ANR	593113	UnaryOperator	!		592782	0					
ANR	593114	CallExpression	"strcmp ( item -> key , ""_PrelinkKmodInfo"" )"		592782	1					
ANR	593115	Callee	strcmp		592782	0					
ANR	593116	Identifier	strcmp		592782	0					
ANR	593117	ArgumentList	item -> key		592782	1					
ANR	593118	Argument	item -> key		592782	0					
ANR	593119	PtrMemberAccess	item -> key		592782	0					
ANR	593120	Identifier	item		592782	0					
ANR	593121	Identifier	key		592782	1					
ANR	593122	Argument	"""_PrelinkKmodInfo"""		592782	1					
ANR	593123	PrimaryExpression	"""_PrelinkKmodInfo"""		592782	0					
ANR	593124	CompoundStatement		62:48:1519:1519	592782	1					
ANR	593125	IfStatement	if ( item -> value -> type == R_CF_INTEGER )		592782	0					
ANR	593126	Condition	item -> value -> type == R_CF_INTEGER	362:8:9878:9910	592782	0	True				
ANR	593127	EqualityExpression	item -> value -> type == R_CF_INTEGER		592782	0		==			
ANR	593128	PtrMemberAccess	item -> value -> type		592782	0					
ANR	593129	PtrMemberAccess	item -> value		592782	0					
ANR	593130	Identifier	item		592782	0					
ANR	593131	Identifier	value		592782	1					
ANR	593132	Identifier	type		592782	1					
ANR	593133	Identifier	R_CF_INTEGER		592782	1					
ANR	593134	CompoundStatement		63:43:1564:1564	592782	1					
ANR	593135	ExpressionStatement	kext_incomplete --	363:5:9920:9937	592782	0	True				
ANR	593136	PostIncDecOperationExpression	kext_incomplete --		592782	0					
ANR	593137	Identifier	kext_incomplete		592782	0					
ANR	593138	IncDec	--		592782	1					
ANR	593139	ExpressionStatement	kext -> mod_info = ( ( RCFValueInteger * ) item -> value ) -> value	364:5:9944:10000	592782	1	True				
ANR	593140	AssignmentExpression	kext -> mod_info = ( ( RCFValueInteger * ) item -> value ) -> value		592782	0		=			
ANR	593141	PtrMemberAccess	kext -> mod_info		592782	0					
ANR	593142	Identifier	kext		592782	0					
ANR	593143	Identifier	mod_info		592782	1					
ANR	593144	PtrMemberAccess	( ( RCFValueInteger * ) item -> value ) -> value		592782	1					
ANR	593145	CastExpression	( RCFValueInteger * ) item -> value		592782	0					
ANR	593146	CastTarget	RCFValueInteger *		592782	0					
ANR	593147	PtrMemberAccess	item -> value		592782	1					
ANR	593148	Identifier	item		592782	0					
ANR	593149	Identifier	value		592782	1					
ANR	593150	Identifier	value		592782	1					
ANR	593151	ExpressionStatement	kext -> mod_info -= obj -> pa2va_data	365:5:10007:10040	592782	2	True				
ANR	593152	AssignmentExpression	kext -> mod_info -= obj -> pa2va_data		592782	0		-=			
ANR	593153	PtrMemberAccess	kext -> mod_info		592782	0					
ANR	593154	Identifier	kext		592782	0					
ANR	593155	Identifier	mod_info		592782	1					
ANR	593156	PtrMemberAccess	obj -> pa2va_data		592782	1					
ANR	593157	Identifier	obj		592782	0					
ANR	593158	Identifier	pa2va_data		592782	1					
ANR	593159	IfStatement	"if ( ! strcmp ( item -> key , ""CFBundleIdentifier"" ) )"		592782	4					
ANR	593160	Condition	"! strcmp ( item -> key , ""CFBundleIdentifier"" )"	369:7:10061:10101	592782	0	True				
ANR	593161	UnaryOperationExpression	"! strcmp ( item -> key , ""CFBundleIdentifier"" )"		592782	0					
ANR	593162	UnaryOperator	!		592782	0					
ANR	593163	CallExpression	"strcmp ( item -> key , ""CFBundleIdentifier"" )"		592782	1					
ANR	593164	Callee	strcmp		592782	0					
ANR	593165	Identifier	strcmp		592782	0					
ANR	593166	ArgumentList	item -> key		592782	1					
ANR	593167	Argument	item -> key		592782	0					
ANR	593168	PtrMemberAccess	item -> key		592782	0					
ANR	593169	Identifier	item		592782	0					
ANR	593170	Identifier	key		592782	1					
ANR	593171	Argument	"""CFBundleIdentifier"""		592782	1					
ANR	593172	PrimaryExpression	"""CFBundleIdentifier"""		592782	0					
ANR	593173	CompoundStatement		70:50:1755:1755	592782	1					
ANR	593174	IfStatement	if ( item -> value -> type == R_CF_STRING )		592782	0					
ANR	593175	Condition	item -> value -> type == R_CF_STRING	370:8:10114:10145	592782	0	True				
ANR	593176	EqualityExpression	item -> value -> type == R_CF_STRING		592782	0		==			
ANR	593177	PtrMemberAccess	item -> value -> type		592782	0					
ANR	593178	PtrMemberAccess	item -> value		592782	0					
ANR	593179	Identifier	item		592782	0					
ANR	593180	Identifier	value		592782	1					
ANR	593181	Identifier	type		592782	1					
ANR	593182	Identifier	R_CF_STRING		592782	1					
ANR	593183	CompoundStatement		71:42:1799:1799	592782	1					
ANR	593184	ExpressionStatement	kext_incomplete --	371:5:10155:10172	592782	0	True				
ANR	593185	PostIncDecOperationExpression	kext_incomplete --		592782	0					
ANR	593186	Identifier	kext_incomplete		592782	0					
ANR	593187	IncDec	--		592782	1					
ANR	593188	ExpressionStatement	kext -> name = ( ( RCFValueString * ) item -> value ) -> value	372:5:10179:10230	592782	1	True				
ANR	593189	AssignmentExpression	kext -> name = ( ( RCFValueString * ) item -> value ) -> value		592782	0		=			
ANR	593190	PtrMemberAccess	kext -> name		592782	0					
ANR	593191	Identifier	kext		592782	0					
ANR	593192	Identifier	name		592782	1					
ANR	593193	PtrMemberAccess	( ( RCFValueString * ) item -> value ) -> value		592782	1					
ANR	593194	CastExpression	( RCFValueString * ) item -> value		592782	0					
ANR	593195	CastTarget	RCFValueString *		592782	0					
ANR	593196	PtrMemberAccess	item -> value		592782	1					
ANR	593197	Identifier	item		592782	0					
ANR	593198	Identifier	value		592782	1					
ANR	593199	Identifier	value		592782	1					
ANR	593200	IfStatement	if ( kext_incomplete )		592782	15					
ANR	593201	Condition	kext_incomplete	377:6:10254:10268	592782	0	True				
ANR	593202	Identifier	kext_incomplete		592782	0					
ANR	593203	CompoundStatement		78:23:1922:1922	592782	1					
ANR	593204	ExpressionStatement	r_kext_free ( kext )	378:3:10276:10294	592782	0	True				
ANR	593205	CallExpression	r_kext_free ( kext )		592782	0					
ANR	593206	Callee	r_kext_free		592782	0					
ANR	593207	Identifier	r_kext_free		592782	0					
ANR	593208	ArgumentList	kext		592782	1					
ANR	593209	Argument	kext		592782	0					
ANR	593210	Identifier	kext		592782	0					
ANR	593211	ContinueStatement	continue ;	379:3:10299:10307	592782	1	True				
ANR	593212	IfStatement	if ( prev_kext && kext -> vaddr < prev_kext -> vaddr )		592782	16					
ANR	593213	Condition	prev_kext && kext -> vaddr < prev_kext -> vaddr	382:6:10320:10362	592782	0	True				
ANR	593214	AndExpression	prev_kext && kext -> vaddr < prev_kext -> vaddr		592782	0		&&			
ANR	593215	Identifier	prev_kext		592782	0					
ANR	593216	RelationalExpression	kext -> vaddr < prev_kext -> vaddr		592782	1		<			
ANR	593217	PtrMemberAccess	kext -> vaddr		592782	0					
ANR	593218	Identifier	kext		592782	0					
ANR	593219	Identifier	vaddr		592782	1					
ANR	593220	PtrMemberAccess	prev_kext -> vaddr		592782	1					
ANR	593221	Identifier	prev_kext		592782	0					
ANR	593222	Identifier	vaddr		592782	1					
ANR	593223	CompoundStatement		83:51:2016:2016	592782	1					
ANR	593224	ExpressionStatement	is_sorted = false	383:3:10370:10387	592782	0	True				
ANR	593225	AssignmentExpression	is_sorted = false		592782	0		=			
ANR	593226	Identifier	is_sorted		592782	0					
ANR	593227	Identifier	false		592782	1					
ANR	593228	ExpressionStatement	prev_kext = kext	385:2:10395:10411	592782	17	True				
ANR	593229	AssignmentExpression	prev_kext = kext		592782	0		=			
ANR	593230	Identifier	prev_kext		592782	0					
ANR	593231	Identifier	kext		592782	1					
ANR	593232	ExpressionStatement	"kext -> mach0 = create_kext_mach0 ( obj , kext )"	387:2:10416:10459	592782	18	True				
ANR	593233	AssignmentExpression	"kext -> mach0 = create_kext_mach0 ( obj , kext )"		592782	0		=			
ANR	593234	PtrMemberAccess	kext -> mach0		592782	0					
ANR	593235	Identifier	kext		592782	0					
ANR	593236	Identifier	mach0		592782	1					
ANR	593237	CallExpression	"create_kext_mach0 ( obj , kext )"		592782	1					
ANR	593238	Callee	create_kext_mach0		592782	0					
ANR	593239	Identifier	create_kext_mach0		592782	0					
ANR	593240	ArgumentList	obj		592782	1					
ANR	593241	Argument	obj		592782	0					
ANR	593242	Identifier	obj		592782	0					
ANR	593243	Argument	kext		592782	1					
ANR	593244	Identifier	kext		592782	0					
ANR	593245	IfStatement	if ( ! kext -> mach0 )		592782	19					
ANR	593246	Condition	! kext -> mach0	388:6:10467:10478	592782	0	True				
ANR	593247	UnaryOperationExpression	! kext -> mach0		592782	0					
ANR	593248	UnaryOperator	!		592782	0					
ANR	593249	PtrMemberAccess	kext -> mach0		592782	1					
ANR	593250	Identifier	kext		592782	0					
ANR	593251	Identifier	mach0		592782	1					
ANR	593252	CompoundStatement		89:20:2132:2132	592782	1					
ANR	593253	ExpressionStatement	r_kext_free ( kext )	389:3:10486:10504	592782	0	True				
ANR	593254	CallExpression	r_kext_free ( kext )		592782	0					
ANR	593255	Callee	r_kext_free		592782	0					
ANR	593256	Identifier	r_kext_free		592782	0					
ANR	593257	ArgumentList	kext		592782	1					
ANR	593258	Argument	kext		592782	0					
ANR	593259	Identifier	kext		592782	0					
ANR	593260	ContinueStatement	continue ;	390:3:10509:10517	592782	1	True				
ANR	593261	ExpressionStatement	r_kext_fill_text_range ( kext )	393:2:10526:10555	592782	20	True				
ANR	593262	CallExpression	r_kext_fill_text_range ( kext )		592782	0					
ANR	593263	Callee	r_kext_fill_text_range		592782	0					
ANR	593264	Identifier	r_kext_fill_text_range		592782	0					
ANR	593265	ArgumentList	kext		592782	1					
ANR	593266	Argument	kext		592782	0					
ANR	593267	Identifier	kext		592782	0					
ANR	593268	ExpressionStatement	"r_list_push ( kexts , kext )"	395:2:10560:10585	592782	21	True				
ANR	593269	CallExpression	"r_list_push ( kexts , kext )"		592782	0					
ANR	593270	Callee	r_list_push		592782	0					
ANR	593271	Identifier	r_list_push		592782	0					
ANR	593272	ArgumentList	kexts		592782	1					
ANR	593273	Argument	kexts		592782	0					
ANR	593274	Identifier	kexts		592782	0					
ANR	593275	Argument	kext		592782	1					
ANR	593276	Identifier	kext		592782	0					
ANR	593277	IfStatement	if ( ! is_sorted )		592782	33					
ANR	593278	Condition	! is_sorted	398:5:10596:10605	592782	0	True				
ANR	593279	UnaryOperationExpression	! is_sorted		592782	0					
ANR	593280	UnaryOperator	!		592782	0					
ANR	593281	Identifier	is_sorted		592782	1					
ANR	593282	CompoundStatement		99:17:2259:2259	592782	1					
ANR	593283	ExpressionStatement	"eprintf ( ""SORTING KEXTs...\\n"" )"	399:2:10612:10642	592782	0	True				
ANR	593284	CallExpression	"eprintf ( ""SORTING KEXTs...\\n"" )"		592782	0					
ANR	593285	Callee	eprintf		592782	0					
ANR	593286	Identifier	eprintf		592782	0					
ANR	593287	ArgumentList	"""SORTING KEXTs...\\n"""		592782	1					
ANR	593288	Argument	"""SORTING KEXTs...\\n"""		592782	0					
ANR	593289	PrimaryExpression	"""SORTING KEXTs...\\n"""		592782	0					
ANR	593290	ExpressionStatement	"r_list_sort ( kexts , kexts_sort_vaddr_func )"	400:2:10646:10688	592782	1	True				
ANR	593291	CallExpression	"r_list_sort ( kexts , kexts_sort_vaddr_func )"		592782	0					
ANR	593292	Callee	r_list_sort		592782	0					
ANR	593293	Identifier	r_list_sort		592782	0					
ANR	593294	ArgumentList	kexts		592782	1					
ANR	593295	Argument	kexts		592782	0					
ANR	593296	Identifier	kexts		592782	0					
ANR	593297	Argument	kexts_sort_vaddr_func		592782	1					
ANR	593298	Identifier	kexts_sort_vaddr_func		592782	0					
ANR	593299	ReturnStatement	return kexts ;	402:1:10694:10706	592782	34	True				
ANR	593300	Identifier	kexts		592782	0					
ANR	593301	ReturnType	static RList *		592782	1					
ANR	593302	Identifier	filter_kexts		592782	2					
ANR	593303	ParameterList	RKernelCacheObj * obj		592782	3					
ANR	593304	Parameter	RKernelCacheObj * obj	300:27:8326:8345	592782	0	True				
ANR	593305	ParameterType	RKernelCacheObj *		592782	0					
ANR	593306	Identifier	obj		592782	1					
ANR	593307	CFGEntryNode	ENTRY		592782		True				
ANR	593308	CFGExitNode	EXIT		592782		True				
ANR	593309	CFGErrorNode	ERROR		592782		True				
ANR	593310	Symbol	prev_kext -> vaddr		592782						
ANR	593311	Symbol	kext -> vaddr		592782						
ANR	593312	Symbol	is_sorted		592782						
ANR	593313	Symbol	item -> value		592782						
ANR	593314	Symbol	internal_iter		592782						
ANR	593315	Symbol	( ( RCFValueString * ) item -> value ) -> value		592782						
ANR	593316	Symbol	kext_array		592782						
ANR	593317	Symbol	R_CF_INTEGER		592782						
ANR	593318	Symbol	type		592782						
ANR	593319	Symbol	kexts		592782						
ANR	593320	Symbol	item -> value -> type		592782						
ANR	593321	Symbol	kext -> range		592782						
ANR	593322	Symbol	& r_kext_free		592782						
ANR	593323	Symbol	R_CF_STRING		592782						
ANR	593324	Symbol	* type		592782						
ANR	593325	Symbol	* item		592782						
ANR	593326	Symbol	* item -> value		592782						
ANR	593327	Symbol	obj -> pa2va_exec		592782						
ANR	593328	Symbol	kext -> name		592782						
ANR	593329	Symbol	strcmp		592782						
ANR	593330	Symbol	* obj		592782						
ANR	593331	Symbol	item		592782						
ANR	593332	Symbol	item -> key		592782						
ANR	593333	Symbol	type -> value		592782						
ANR	593334	Symbol	NULL		592782						
ANR	593335	Symbol	kext		592782						
ANR	593336	Symbol	( ( RCFValueInteger * ) item -> value ) -> value		592782						
ANR	593337	Symbol	* prev_kext		592782						
ANR	593338	Symbol	r_list_newf		592782						
ANR	593339	Symbol	kext_item		592782						
ANR	593340	Symbol	* * item		592782						
ANR	593341	Symbol	false		592782						
ANR	593342	Symbol	iter		592782						
ANR	593343	Symbol	kext -> range . offset		592782						
ANR	593344	Symbol	* kext		592782						
ANR	593345	Symbol	obj -> pa2va_data		592782						
ANR	593346	Symbol	kext_incomplete		592782						
ANR	593347	Symbol	RKext		592782						
ANR	593348	Symbol	kext -> mach0		592782						
ANR	593349	Symbol	R_NEW0		592782						
ANR	593350	Symbol	kext -> mod_info		592782						
ANR	593351	Symbol	obj		592782						
ANR	593352	Symbol	prev_kext		592782						
ANR	593353	Symbol	kext -> range . size		592782						
ANR	593354	Symbol	true		592782						
ANR	593355	Symbol	kexts_sort_vaddr_func		592782						
ANR	593356	Symbol	create_kext_mach0		592782						
ANR	593357	Function	p_ptr	405:0:10711:10863							
ANR	593358	FunctionDef	"p_ptr (ut64 decorated_addr , RKernelCacheObj * obj)"		593357	0					
ANR	593359	CompoundStatement		405:62:10773:10863	593357	0					
ANR	593360	IdentifierDeclStatement	RParsedPointer ptr ;	406:1:10776:10794	593357	0	True				
ANR	593361	IdentifierDecl	ptr		593357	0					
ANR	593362	IdentifierDeclType	RParsedPointer		593357	0					
ANR	593363	Identifier	ptr		593357	1					
ANR	593364	ExpressionStatement	"r_parse_pointer ( & ptr , decorated_addr , obj )"	407:1:10797:10840	593357	1	True				
ANR	593365	CallExpression	"r_parse_pointer ( & ptr , decorated_addr , obj )"		593357	0					
ANR	593366	Callee	r_parse_pointer		593357	0					
ANR	593367	Identifier	r_parse_pointer		593357	0					
ANR	593368	ArgumentList	& ptr		593357	1					
ANR	593369	Argument	& ptr		593357	0					
ANR	593370	UnaryOperationExpression	& ptr		593357	0					
ANR	593371	UnaryOperator	&		593357	0					
ANR	593372	Identifier	ptr		593357	1					
ANR	593373	Argument	decorated_addr		593357	1					
ANR	593374	Identifier	decorated_addr		593357	0					
ANR	593375	Argument	obj		593357	2					
ANR	593376	Identifier	obj		593357	0					
ANR	593377	ReturnStatement	return ptr . address ;	408:1:10843:10861	593357	2	True				
ANR	593378	MemberAccess	ptr . address		593357	0					
ANR	593379	Identifier	ptr		593357	0					
ANR	593380	Identifier	address		593357	1					
ANR	593381	ReturnType	static ut64		593357	1					
ANR	593382	Identifier	p_ptr		593357	2					
ANR	593383	ParameterList	"ut64 decorated_addr , RKernelCacheObj * obj"		593357	3					
ANR	593384	Parameter	ut64 decorated_addr	405:19:10730:10748	593357	0	True				
ANR	593385	ParameterType	ut64		593357	0					
ANR	593386	Identifier	decorated_addr		593357	1					
ANR	593387	Parameter	RKernelCacheObj * obj	405:40:10751:10770	593357	1	True				
ANR	593388	ParameterType	RKernelCacheObj *		593357	0					
ANR	593389	Identifier	obj		593357	1					
ANR	593390	CFGEntryNode	ENTRY		593357		True				
ANR	593391	CFGExitNode	EXIT		593357		True				
ANR	593392	Symbol	ptr . address		593357						
ANR	593393	Symbol	& ptr		593357						
ANR	593394	Symbol	decorated_addr		593357						
ANR	593395	Symbol	obj		593357						
ANR	593396	Symbol	ptr		593357						
ANR	593397	Function	r_ptr	411:0:10866:10994							
ANR	593398	FunctionDef	"r_ptr (ut8 * buf , RKernelCacheObj * obj)"		593397	0					
ANR	593399	CompoundStatement		411:51:10917:10994	593397	0					
ANR	593400	IdentifierDeclStatement	ut64 decorated_addr = r_read_le64 ( buf ) ;	412:1:10920:10959	593397	0	True				
ANR	593401	IdentifierDecl	decorated_addr = r_read_le64 ( buf )		593397	0					
ANR	593402	IdentifierDeclType	ut64		593397	0					
ANR	593403	Identifier	decorated_addr		593397	1					
ANR	593404	AssignmentExpression	decorated_addr = r_read_le64 ( buf )		593397	2		=			
ANR	593405	Identifier	decorated_addr		593397	0					
ANR	593406	CallExpression	r_read_le64 ( buf )		593397	1					
ANR	593407	Callee	r_read_le64		593397	0					
ANR	593408	Identifier	r_read_le64		593397	0					
ANR	593409	ArgumentList	buf		593397	1					
ANR	593410	Argument	buf		593397	0					
ANR	593411	Identifier	buf		593397	0					
ANR	593412	ReturnStatement	return K_PPTR ( decorated_addr ) ;	413:1:10962:10992	593397	1	True				
ANR	593413	CallExpression	K_PPTR ( decorated_addr )		593397	0					
ANR	593414	Callee	K_PPTR		593397	0					
ANR	593415	Identifier	K_PPTR		593397	0					
ANR	593416	ArgumentList	decorated_addr		593397	1					
ANR	593417	Argument	decorated_addr		593397	0					
ANR	593418	Identifier	decorated_addr		593397	0					
ANR	593419	ReturnType	static ut64		593397	1					
ANR	593420	Identifier	r_ptr		593397	2					
ANR	593421	ParameterList	"ut8 * buf , RKernelCacheObj * obj"		593397	3					
ANR	593422	Parameter	ut8 * buf	411:19:10885:10892	593397	0	True				
ANR	593423	ParameterType	ut8 *		593397	0					
ANR	593424	Identifier	buf		593397	1					
ANR	593425	Parameter	RKernelCacheObj * obj	411:29:10895:10914	593397	1	True				
ANR	593426	ParameterType	RKernelCacheObj *		593397	0					
ANR	593427	Identifier	obj		593397	1					
ANR	593428	CFGEntryNode	ENTRY		593397		True				
ANR	593429	CFGExitNode	EXIT		593397		True				
ANR	593430	Symbol	buf		593397						
ANR	593431	Symbol	decorated_addr		593397						
ANR	593432	Symbol	r_read_le64		593397						
ANR	593433	Symbol	obj		593397						
ANR	593434	Symbol	K_PPTR		593397						
ANR	593435	Function	carve_kexts	416:0:10997:14049							
ANR	593436	FunctionDef	carve_kexts (RKernelCacheObj * obj)		593435	0					
ANR	593437	CompoundStatement		416:48:11045:14049	593435	0					
ANR	593438	IdentifierDeclStatement	struct section_t * sections = NULL ;	417:1:11048:11081	593435	0	True				
ANR	593439	IdentifierDecl	* sections = NULL		593435	0					
ANR	593440	IdentifierDeclType	struct section_t *		593435	0					
ANR	593441	Identifier	sections		593435	1					
ANR	593442	AssignmentExpression	* sections = NULL		593435	2		=			
ANR	593443	Identifier	NULL		593435	0					
ANR	593444	Identifier	NULL		593435	1					
ANR	593445	IfStatement	if ( ! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) ) )		593435	1					
ANR	593446	Condition	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )	418:5:11088:11134	593435	0	True				
ANR	593447	UnaryOperationExpression	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )		593435	0					
ANR	593448	UnaryOperator	!		593435	0					
ANR	593449	AssignmentExpression	sections = MACH0_ ( get_sections ) ( obj -> mach0 )		593435	1		=			
ANR	593450	Identifier	sections		593435	0					
ANR	593451	CallExpression	MACH0_ ( get_sections ) ( obj -> mach0 )		593435	1					
ANR	593452	Callee	MACH0_ ( get_sections )		593435	0					
ANR	593453	CallExpression	MACH0_ ( get_sections )		593435	0					
ANR	593454	Callee	MACH0_		593435	0					
ANR	593455	Identifier	MACH0_		593435	0					
ANR	593456	ArgumentList	get_sections		593435	1					
ANR	593457	Argument	get_sections		593435	0					
ANR	593458	Identifier	get_sections		593435	0					
ANR	593459	ArgumentList	obj -> mach0		593435	1					
ANR	593460	Argument	obj -> mach0		593435	0					
ANR	593461	PtrMemberAccess	obj -> mach0		593435	0					
ANR	593462	Identifier	obj		593435	0					
ANR	593463	Identifier	mach0		593435	1					
ANR	593464	CompoundStatement		3:54:91:91	593435	1					
ANR	593465	ReturnStatement	return NULL ;	419:2:11141:11152	593435	0	True				
ANR	593466	Identifier	NULL		593435	0					
ANR	593467	IdentifierDeclStatement	ut64 pa2va_exec = 0 ;	422:1:11159:11178	593435	2	True				
ANR	593468	IdentifierDecl	pa2va_exec = 0		593435	0					
ANR	593469	IdentifierDeclType	ut64		593435	0					
ANR	593470	Identifier	pa2va_exec		593435	1					
ANR	593471	AssignmentExpression	pa2va_exec = 0		593435	2		=			
ANR	593472	Identifier	pa2va_exec		593435	0					
ANR	593473	PrimaryExpression	0		593435	1					
ANR	593474	IdentifierDeclStatement	ut64 pa2va_data = 0 ;	423:1:11181:11200	593435	3	True				
ANR	593475	IdentifierDecl	pa2va_data = 0		593435	0					
ANR	593476	IdentifierDeclType	ut64		593435	0					
ANR	593477	Identifier	pa2va_data		593435	1					
ANR	593478	AssignmentExpression	pa2va_data = 0		593435	2		=			
ANR	593479	Identifier	pa2va_data		593435	0					
ANR	593480	PrimaryExpression	0		593435	1					
ANR	593481	IdentifierDeclStatement	"ut64 kmod_start = 0 , kmod_end = 0 ;"	424:1:11203:11236	593435	4	True				
ANR	593482	IdentifierDecl	kmod_start = 0		593435	0					
ANR	593483	IdentifierDeclType	ut64		593435	0					
ANR	593484	Identifier	kmod_start		593435	1					
ANR	593485	AssignmentExpression	kmod_start = 0		593435	2		=			
ANR	593486	Identifier	kmod_start		593435	0					
ANR	593487	PrimaryExpression	0		593435	1					
ANR	593488	IdentifierDecl	kmod_end = 0		593435	1					
ANR	593489	IdentifierDeclType	ut64		593435	0					
ANR	593490	Identifier	kmod_end		593435	1					
ANR	593491	AssignmentExpression	kmod_end = 0		593435	2		=			
ANR	593492	Identifier	kmod_end		593435	0					
ANR	593493	PrimaryExpression	0		593435	1					
ANR	593494	IdentifierDeclStatement	"ut64 kmod_info = 0 , kmod_info_end = 0 ;"	425:1:11239:11276	593435	5	True				
ANR	593495	IdentifierDecl	kmod_info = 0		593435	0					
ANR	593496	IdentifierDeclType	ut64		593435	0					
ANR	593497	Identifier	kmod_info		593435	1					
ANR	593498	AssignmentExpression	kmod_info = 0		593435	2		=			
ANR	593499	Identifier	kmod_info		593435	0					
ANR	593500	PrimaryExpression	0		593435	1					
ANR	593501	IdentifierDecl	kmod_info_end = 0		593435	1					
ANR	593502	IdentifierDeclType	ut64		593435	0					
ANR	593503	Identifier	kmod_info_end		593435	1					
ANR	593504	AssignmentExpression	kmod_info_end = 0		593435	2		=			
ANR	593505	Identifier	kmod_info_end		593435	0					
ANR	593506	PrimaryExpression	0		593435	1					
ANR	593507	IdentifierDeclStatement	int incomplete = 4 ;	426:1:11279:11297	593435	6	True				
ANR	593508	IdentifierDecl	incomplete = 4		593435	0					
ANR	593509	IdentifierDeclType	int		593435	0					
ANR	593510	Identifier	incomplete		593435	1					
ANR	593511	AssignmentExpression	incomplete = 4		593435	2		=			
ANR	593512	Identifier	incomplete		593435	0					
ANR	593513	PrimaryExpression	4		593435	1					
ANR	593514	IdentifierDeclStatement	RKmodInfo * all_infos = NULL ;	427:1:11300:11327	593435	7	True				
ANR	593515	IdentifierDecl	* all_infos = NULL		593435	0					
ANR	593516	IdentifierDeclType	RKmodInfo *		593435	0					
ANR	593517	Identifier	all_infos		593435	1					
ANR	593518	AssignmentExpression	* all_infos = NULL		593435	2		=			
ANR	593519	Identifier	NULL		593435	0					
ANR	593520	Identifier	NULL		593435	1					
ANR	593521	IdentifierDeclStatement	int i = 0 ;	429:1:11331:11340	593435	8	True				
ANR	593522	IdentifierDecl	i = 0		593435	0					
ANR	593523	IdentifierDeclType	int		593435	0					
ANR	593524	Identifier	i		593435	1					
ANR	593525	AssignmentExpression	i = 0		593435	2		=			
ANR	593526	Identifier	i		593435	0					
ANR	593527	PrimaryExpression	0		593435	1					
ANR	593528	ForStatement	for ( ; ! sections [ i ] . last && incomplete > 0 ; i ++ )		593435	9					
ANR	593529	Condition	! sections [ i ] . last && incomplete > 0	430:8:11350:11384	593435	0	True				
ANR	593530	AndExpression	! sections [ i ] . last && incomplete > 0		593435	0		&&			
ANR	593531	UnaryOperationExpression	! sections [ i ] . last		593435	0					
ANR	593532	UnaryOperator	!		593435	0					
ANR	593533	MemberAccess	sections [ i ] . last		593435	1					
ANR	593534	ArrayIndexing	sections [ i ]		593435	0					
ANR	593535	Identifier	sections		593435	0					
ANR	593536	Identifier	i		593435	1					
ANR	593537	Identifier	last		593435	1					
ANR	593538	RelationalExpression	incomplete > 0		593435	1		>			
ANR	593539	Identifier	incomplete		593435	0					
ANR	593540	PrimaryExpression	0		593435	1					
ANR	593541	PostIncDecOperationExpression	i ++	430:45:11387:11389	593435	1	True				
ANR	593542	Identifier	i		593435	0					
ANR	593543	IncDec	++		593435	1					
ANR	593544	CompoundStatement		15:50:346:346	593435	2					
ANR	593545	IfStatement	"if ( strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" ) )"		593435	0					
ANR	593546	Condition	"strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" )"	431:6:11400:11446	593435	0	True				
ANR	593547	CallExpression	"strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" )"		593435	0					
ANR	593548	Callee	strstr		593435	0					
ANR	593549	Identifier	strstr		593435	0					
ANR	593550	ArgumentList	sections [ i ] . name		593435	1					
ANR	593551	Argument	sections [ i ] . name		593435	0					
ANR	593552	MemberAccess	sections [ i ] . name		593435	0					
ANR	593553	ArrayIndexing	sections [ i ]		593435	0					
ANR	593554	Identifier	sections		593435	0					
ANR	593555	Identifier	i		593435	1					
ANR	593556	Identifier	name		593435	1					
ANR	593557	Argument	"""__TEXT_EXEC.__text"""		593435	1					
ANR	593558	PrimaryExpression	"""__TEXT_EXEC.__text"""		593435	0					
ANR	593559	CompoundStatement		16:55:403:403	593435	1					
ANR	593560	ExpressionStatement	pa2va_exec = sections [ i ] . addr - sections [ i ] . offset	432:3:11454:11504	593435	0	True				
ANR	593561	AssignmentExpression	pa2va_exec = sections [ i ] . addr - sections [ i ] . offset		593435	0		=			
ANR	593562	Identifier	pa2va_exec		593435	0					
ANR	593563	AdditiveExpression	sections [ i ] . addr - sections [ i ] . offset		593435	1		-			
ANR	593564	MemberAccess	sections [ i ] . addr		593435	0					
ANR	593565	ArrayIndexing	sections [ i ]		593435	0					
ANR	593566	Identifier	sections		593435	0					
ANR	593567	Identifier	i		593435	1					
ANR	593568	Identifier	addr		593435	1					
ANR	593569	MemberAccess	sections [ i ] . offset		593435	1					
ANR	593570	ArrayIndexing	sections [ i ]		593435	0					
ANR	593571	Identifier	sections		593435	0					
ANR	593572	Identifier	i		593435	1					
ANR	593573	Identifier	offset		593435	1					
ANR	593574	ExpressionStatement	incomplete --	433:3:11509:11521	593435	1	True				
ANR	593575	PostIncDecOperationExpression	incomplete --		593435	0					
ANR	593576	Identifier	incomplete		593435	0					
ANR	593577	IncDec	--		593435	1					
ANR	593578	IfStatement	"if ( strstr ( sections [ i ] . name , ""__DATA.__data"" ) )"		593435	1					
ANR	593579	Condition	"strstr ( sections [ i ] . name , ""__DATA.__data"" )"	435:6:11533:11574	593435	0	True				
ANR	593580	CallExpression	"strstr ( sections [ i ] . name , ""__DATA.__data"" )"		593435	0					
ANR	593581	Callee	strstr		593435	0					
ANR	593582	Identifier	strstr		593435	0					
ANR	593583	ArgumentList	sections [ i ] . name		593435	1					
ANR	593584	Argument	sections [ i ] . name		593435	0					
ANR	593585	MemberAccess	sections [ i ] . name		593435	0					
ANR	593586	ArrayIndexing	sections [ i ]		593435	0					
ANR	593587	Identifier	sections		593435	0					
ANR	593588	Identifier	i		593435	1					
ANR	593589	Identifier	name		593435	1					
ANR	593590	Argument	"""__DATA.__data"""		593435	1					
ANR	593591	PrimaryExpression	"""__DATA.__data"""		593435	0					
ANR	593592	CompoundStatement		20:50:531:531	593435	1					
ANR	593593	ExpressionStatement	pa2va_data = sections [ i ] . addr - sections [ i ] . offset	436:3:11582:11632	593435	0	True				
ANR	593594	AssignmentExpression	pa2va_data = sections [ i ] . addr - sections [ i ] . offset		593435	0		=			
ANR	593595	Identifier	pa2va_data		593435	0					
ANR	593596	AdditiveExpression	sections [ i ] . addr - sections [ i ] . offset		593435	1		-			
ANR	593597	MemberAccess	sections [ i ] . addr		593435	0					
ANR	593598	ArrayIndexing	sections [ i ]		593435	0					
ANR	593599	Identifier	sections		593435	0					
ANR	593600	Identifier	i		593435	1					
ANR	593601	Identifier	addr		593435	1					
ANR	593602	MemberAccess	sections [ i ] . offset		593435	1					
ANR	593603	ArrayIndexing	sections [ i ]		593435	0					
ANR	593604	Identifier	sections		593435	0					
ANR	593605	Identifier	i		593435	1					
ANR	593606	Identifier	offset		593435	1					
ANR	593607	ExpressionStatement	incomplete --	437:3:11637:11649	593435	1	True				
ANR	593608	PostIncDecOperationExpression	incomplete --		593435	0					
ANR	593609	Identifier	incomplete		593435	0					
ANR	593610	IncDec	--		593435	1					
ANR	593611	IfStatement	"if ( strstr ( sections [ i ] . name , ""__PRELINK_INFO.__kmod_start"" ) )"		593435	2					
ANR	593612	Condition	"strstr ( sections [ i ] . name , ""__PRELINK_INFO.__kmod_start"" )"	439:6:11661:11716	593435	0	True				
ANR	593613	CallExpression	"strstr ( sections [ i ] . name , ""__PRELINK_INFO.__kmod_start"" )"		593435	0					
ANR	593614	Callee	strstr		593435	0					
ANR	593615	Identifier	strstr		593435	0					
ANR	593616	ArgumentList	sections [ i ] . name		593435	1					
ANR	593617	Argument	sections [ i ] . name		593435	0					
ANR	593618	MemberAccess	sections [ i ] . name		593435	0					
ANR	593619	ArrayIndexing	sections [ i ]		593435	0					
ANR	593620	Identifier	sections		593435	0					
ANR	593621	Identifier	i		593435	1					
ANR	593622	Identifier	name		593435	1					
ANR	593623	Argument	"""__PRELINK_INFO.__kmod_start"""		593435	1					
ANR	593624	PrimaryExpression	"""__PRELINK_INFO.__kmod_start"""		593435	0					
ANR	593625	CompoundStatement		24:64:673:673	593435	1					
ANR	593626	ExpressionStatement	kmod_start = sections [ i ] . offset	440:3:11724:11755	593435	0	True				
ANR	593627	AssignmentExpression	kmod_start = sections [ i ] . offset		593435	0		=			
ANR	593628	Identifier	kmod_start		593435	0					
ANR	593629	MemberAccess	sections [ i ] . offset		593435	1					
ANR	593630	ArrayIndexing	sections [ i ]		593435	0					
ANR	593631	Identifier	sections		593435	0					
ANR	593632	Identifier	i		593435	1					
ANR	593633	Identifier	offset		593435	1					
ANR	593634	ExpressionStatement	kmod_end = kmod_start + sections [ i ] . size	441:3:11760:11800	593435	1	True				
ANR	593635	AssignmentExpression	kmod_end = kmod_start + sections [ i ] . size		593435	0		=			
ANR	593636	Identifier	kmod_end		593435	0					
ANR	593637	AdditiveExpression	kmod_start + sections [ i ] . size		593435	1		+			
ANR	593638	Identifier	kmod_start		593435	0					
ANR	593639	MemberAccess	sections [ i ] . size		593435	1					
ANR	593640	ArrayIndexing	sections [ i ]		593435	0					
ANR	593641	Identifier	sections		593435	0					
ANR	593642	Identifier	i		593435	1					
ANR	593643	Identifier	size		593435	1					
ANR	593644	ExpressionStatement	incomplete --	442:3:11805:11817	593435	2	True				
ANR	593645	PostIncDecOperationExpression	incomplete --		593435	0					
ANR	593646	Identifier	incomplete		593435	0					
ANR	593647	IncDec	--		593435	1					
ANR	593648	IfStatement	"if ( strstr ( sections [ i ] . name , ""__PRELINK_INFO.__kmod_info"" ) )"		593435	3					
ANR	593649	Condition	"strstr ( sections [ i ] . name , ""__PRELINK_INFO.__kmod_info"" )"	444:6:11829:11883	593435	0	True				
ANR	593650	CallExpression	"strstr ( sections [ i ] . name , ""__PRELINK_INFO.__kmod_info"" )"		593435	0					
ANR	593651	Callee	strstr		593435	0					
ANR	593652	Identifier	strstr		593435	0					
ANR	593653	ArgumentList	sections [ i ] . name		593435	1					
ANR	593654	Argument	sections [ i ] . name		593435	0					
ANR	593655	MemberAccess	sections [ i ] . name		593435	0					
ANR	593656	ArrayIndexing	sections [ i ]		593435	0					
ANR	593657	Identifier	sections		593435	0					
ANR	593658	Identifier	i		593435	1					
ANR	593659	Identifier	name		593435	1					
ANR	593660	Argument	"""__PRELINK_INFO.__kmod_info"""		593435	1					
ANR	593661	PrimaryExpression	"""__PRELINK_INFO.__kmod_info"""		593435	0					
ANR	593662	CompoundStatement		29:63:840:840	593435	1					
ANR	593663	ExpressionStatement	kmod_info = sections [ i ] . offset	445:3:11891:11921	593435	0	True				
ANR	593664	AssignmentExpression	kmod_info = sections [ i ] . offset		593435	0		=			
ANR	593665	Identifier	kmod_info		593435	0					
ANR	593666	MemberAccess	sections [ i ] . offset		593435	1					
ANR	593667	ArrayIndexing	sections [ i ]		593435	0					
ANR	593668	Identifier	sections		593435	0					
ANR	593669	Identifier	i		593435	1					
ANR	593670	Identifier	offset		593435	1					
ANR	593671	ExpressionStatement	kmod_info_end = kmod_info + sections [ i ] . size	446:3:11926:11970	593435	1	True				
ANR	593672	AssignmentExpression	kmod_info_end = kmod_info + sections [ i ] . size		593435	0		=			
ANR	593673	Identifier	kmod_info_end		593435	0					
ANR	593674	AdditiveExpression	kmod_info + sections [ i ] . size		593435	1		+			
ANR	593675	Identifier	kmod_info		593435	0					
ANR	593676	MemberAccess	sections [ i ] . size		593435	1					
ANR	593677	ArrayIndexing	sections [ i ]		593435	0					
ANR	593678	Identifier	sections		593435	0					
ANR	593679	Identifier	i		593435	1					
ANR	593680	Identifier	size		593435	1					
ANR	593681	ExpressionStatement	incomplete --	447:3:11975:11987	593435	2	True				
ANR	593682	PostIncDecOperationExpression	incomplete --		593435	0					
ANR	593683	Identifier	incomplete		593435	0					
ANR	593684	IncDec	--		593435	1					
ANR	593685	ExpressionStatement	R_FREE ( sections )	451:1:11998:12015	593435	10	True				
ANR	593686	CallExpression	R_FREE ( sections )		593435	0					
ANR	593687	Callee	R_FREE		593435	0					
ANR	593688	Identifier	R_FREE		593435	0					
ANR	593689	ArgumentList	sections		593435	1					
ANR	593690	Argument	sections		593435	0					
ANR	593691	Identifier	sections		593435	0					
ANR	593692	IfStatement	if ( incomplete )		593435	11					
ANR	593693	Condition	incomplete	453:5:12023:12032	593435	0	True				
ANR	593694	Identifier	incomplete		593435	0					
ANR	593695	CompoundStatement		38:17:989:989	593435	1					
ANR	593696	ReturnStatement	return NULL ;	454:2:12039:12050	593435	0	True				
ANR	593697	Identifier	NULL		593435	0					
ANR	593698	IdentifierDeclStatement	RList * kexts = r_list_newf ( ( RListFree ) & r_kext_free ) ;	457:1:12057:12110	593435	12	True				
ANR	593699	IdentifierDecl	* kexts = r_list_newf ( ( RListFree ) & r_kext_free )		593435	0					
ANR	593700	IdentifierDeclType	RList *		593435	0					
ANR	593701	Identifier	kexts		593435	1					
ANR	593702	AssignmentExpression	* kexts = r_list_newf ( ( RListFree ) & r_kext_free )		593435	2		=			
ANR	593703	Identifier	kexts		593435	0					
ANR	593704	CallExpression	r_list_newf ( ( RListFree ) & r_kext_free )		593435	1					
ANR	593705	Callee	r_list_newf		593435	0					
ANR	593706	Identifier	r_list_newf		593435	0					
ANR	593707	ArgumentList	( RListFree ) & r_kext_free		593435	1					
ANR	593708	Argument	( RListFree ) & r_kext_free		593435	0					
ANR	593709	CastExpression	( RListFree ) & r_kext_free		593435	0					
ANR	593710	CastTarget	RListFree		593435	0					
ANR	593711	UnaryOperationExpression	& r_kext_free		593435	1					
ANR	593712	UnaryOperator	&		593435	0					
ANR	593713	Identifier	r_kext_free		593435	1					
ANR	593714	IfStatement	if ( ! kexts )		593435	13					
ANR	593715	Condition	! kexts	458:5:12117:12122	593435	0	True				
ANR	593716	UnaryOperationExpression	! kexts		593435	0					
ANR	593717	UnaryOperator	!		593435	0					
ANR	593718	Identifier	kexts		593435	1					
ANR	593719	CompoundStatement		43:13:1079:1079	593435	1					
ANR	593720	ReturnStatement	return NULL ;	459:2:12129:12140	593435	0	True				
ANR	593721	Identifier	NULL		593435	0					
ANR	593722	IdentifierDeclStatement	int n_kmod_info = ( kmod_info_end - kmod_info ) / 8 ;	462:1:12147:12196	593435	14	True				
ANR	593723	IdentifierDecl	n_kmod_info = ( kmod_info_end - kmod_info ) / 8		593435	0					
ANR	593724	IdentifierDeclType	int		593435	0					
ANR	593725	Identifier	n_kmod_info		593435	1					
ANR	593726	AssignmentExpression	n_kmod_info = ( kmod_info_end - kmod_info ) / 8		593435	2		=			
ANR	593727	Identifier	n_kmod_info		593435	0					
ANR	593728	MultiplicativeExpression	( kmod_info_end - kmod_info ) / 8		593435	1		/			
ANR	593729	AdditiveExpression	kmod_info_end - kmod_info		593435	0		-			
ANR	593730	Identifier	kmod_info_end		593435	0					
ANR	593731	Identifier	kmod_info		593435	1					
ANR	593732	PrimaryExpression	8		593435	1					
ANR	593733	IfStatement	if ( n_kmod_info == 0 )		593435	15					
ANR	593734	Condition	n_kmod_info == 0	463:5:12203:12218	593435	0	True				
ANR	593735	EqualityExpression	n_kmod_info == 0		593435	0		==			
ANR	593736	Identifier	n_kmod_info		593435	0					
ANR	593737	PrimaryExpression	0		593435	1					
ANR	593738	CompoundStatement		48:23:1175:1175	593435	1					
ANR	593739	GotoStatement	goto beach ;	464:2:12225:12235	593435	0	True				
ANR	593740	Identifier	beach		593435	0					
ANR	593741	ExpressionStatement	"all_infos = R_NEWS0 ( RKmodInfo , n_kmod_info )"	467:1:12242:12286	593435	16	True				
ANR	593742	AssignmentExpression	"all_infos = R_NEWS0 ( RKmodInfo , n_kmod_info )"		593435	0		=			
ANR	593743	Identifier	all_infos		593435	0					
ANR	593744	CallExpression	"R_NEWS0 ( RKmodInfo , n_kmod_info )"		593435	1					
ANR	593745	Callee	R_NEWS0		593435	0					
ANR	593746	Identifier	R_NEWS0		593435	0					
ANR	593747	ArgumentList	RKmodInfo		593435	1					
ANR	593748	Argument	RKmodInfo		593435	0					
ANR	593749	Identifier	RKmodInfo		593435	0					
ANR	593750	Argument	n_kmod_info		593435	1					
ANR	593751	Identifier	n_kmod_info		593435	0					
ANR	593752	IfStatement	if ( ! all_infos )		593435	17					
ANR	593753	Condition	! all_infos	468:5:12293:12302	593435	0	True				
ANR	593754	UnaryOperationExpression	! all_infos		593435	0					
ANR	593755	UnaryOperator	!		593435	0					
ANR	593756	Identifier	all_infos		593435	1					
ANR	593757	CompoundStatement		53:17:1259:1259	593435	1					
ANR	593758	GotoStatement	goto beach ;	469:2:12309:12319	593435	0	True				
ANR	593759	Identifier	beach		593435	0					
ANR	593760	IdentifierDeclStatement	ut8 bytes [ 8 ] ;	472:1:12326:12338	593435	18	True				
ANR	593761	IdentifierDecl	bytes [ 8 ]		593435	0					
ANR	593762	IdentifierDeclType	ut8 [ 8 ]		593435	0					
ANR	593763	Identifier	bytes		593435	1					
ANR	593764	PrimaryExpression	8		593435	2					
ANR	593765	IdentifierDeclStatement	int j = 0 ;	473:1:12341:12350	593435	19	True				
ANR	593766	IdentifierDecl	j = 0		593435	0					
ANR	593767	IdentifierDeclType	int		593435	0					
ANR	593768	Identifier	j		593435	1					
ANR	593769	AssignmentExpression	j = 0		593435	2		=			
ANR	593770	Identifier	j		593435	0					
ANR	593771	PrimaryExpression	0		593435	1					
ANR	593772	ForStatement	for ( ; j < n_kmod_info ; j ++ )		593435	20					
ANR	593773	Condition	j < n_kmod_info	474:8:12360:12374	593435	0	True				
ANR	593774	RelationalExpression	j < n_kmod_info		593435	0		<			
ANR	593775	Identifier	j		593435	0					
ANR	593776	Identifier	n_kmod_info		593435	1					
ANR	593777	PostIncDecOperationExpression	j ++	474:25:12377:12379	593435	1	True				
ANR	593778	Identifier	j		593435	0					
ANR	593779	IncDec	++		593435	1					
ANR	593780	CompoundStatement		69:2:1569:1610	593435	2					
ANR	593781	IdentifierDeclStatement	ut64 entry_offset = j * 8 + kmod_info ;	475:2:12386:12423	593435	0	True				
ANR	593782	IdentifierDecl	entry_offset = j * 8 + kmod_info		593435	0					
ANR	593783	IdentifierDeclType	ut64		593435	0					
ANR	593784	Identifier	entry_offset		593435	1					
ANR	593785	AssignmentExpression	entry_offset = j * 8 + kmod_info		593435	2		=			
ANR	593786	Identifier	entry_offset		593435	0					
ANR	593787	AdditiveExpression	j * 8 + kmod_info		593435	1		+			
ANR	593788	MultiplicativeExpression	j * 8		593435	0		*			
ANR	593789	Identifier	j		593435	0					
ANR	593790	PrimaryExpression	8		593435	1					
ANR	593791	Identifier	kmod_info		593435	1					
ANR	593792	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , entry_offset , bytes , 8 ) < 8 )"		593435	1					
ANR	593793	Condition	"r_buf_read_at ( obj -> cache_buf , entry_offset , bytes , 8 ) < 8"	477:6:12432:12489	593435	0	True				
ANR	593794	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , entry_offset , bytes , 8 ) < 8"		593435	0		<			
ANR	593795	CallExpression	"r_buf_read_at ( obj -> cache_buf , entry_offset , bytes , 8 )"		593435	0					
ANR	593796	Callee	r_buf_read_at		593435	0					
ANR	593797	Identifier	r_buf_read_at		593435	0					
ANR	593798	ArgumentList	obj -> cache_buf		593435	1					
ANR	593799	Argument	obj -> cache_buf		593435	0					
ANR	593800	PtrMemberAccess	obj -> cache_buf		593435	0					
ANR	593801	Identifier	obj		593435	0					
ANR	593802	Identifier	cache_buf		593435	1					
ANR	593803	Argument	entry_offset		593435	1					
ANR	593804	Identifier	entry_offset		593435	0					
ANR	593805	Argument	bytes		593435	2					
ANR	593806	Identifier	bytes		593435	0					
ANR	593807	Argument	8		593435	3					
ANR	593808	PrimaryExpression	8		593435	0					
ANR	593809	PrimaryExpression	8		593435	1					
ANR	593810	CompoundStatement		62:66:1446:1446	593435	1					
ANR	593811	GotoStatement	goto beach ;	478:3:12497:12507	593435	0	True				
ANR	593812	Identifier	beach		593435	0					
ANR	593813	IdentifierDeclStatement	ut64 kmod_info_paddr = K_RPTR ( bytes ) - pa2va_data ;	481:2:12516:12566	593435	2	True				
ANR	593814	IdentifierDecl	kmod_info_paddr = K_RPTR ( bytes ) - pa2va_data		593435	0					
ANR	593815	IdentifierDeclType	ut64		593435	0					
ANR	593816	Identifier	kmod_info_paddr		593435	1					
ANR	593817	AssignmentExpression	kmod_info_paddr = K_RPTR ( bytes ) - pa2va_data		593435	2		=			
ANR	593818	Identifier	kmod_info_paddr		593435	0					
ANR	593819	AdditiveExpression	K_RPTR ( bytes ) - pa2va_data		593435	1		-			
ANR	593820	CallExpression	K_RPTR ( bytes )		593435	0					
ANR	593821	Callee	K_RPTR		593435	0					
ANR	593822	Identifier	K_RPTR		593435	0					
ANR	593823	ArgumentList	bytes		593435	1					
ANR	593824	Argument	bytes		593435	0					
ANR	593825	Identifier	bytes		593435	0					
ANR	593826	Identifier	pa2va_data		593435	1					
ANR	593827	IdentifierDeclStatement	ut64 field_name = kmod_info_paddr + 0x10 ;	483:2:12571:12611	593435	3	True				
ANR	593828	IdentifierDecl	field_name = kmod_info_paddr + 0x10		593435	0					
ANR	593829	IdentifierDeclType	ut64		593435	0					
ANR	593830	Identifier	field_name		593435	1					
ANR	593831	AssignmentExpression	field_name = kmod_info_paddr + 0x10		593435	2		=			
ANR	593832	Identifier	field_name		593435	0					
ANR	593833	AdditiveExpression	kmod_info_paddr + 0x10		593435	1		+			
ANR	593834	Identifier	kmod_info_paddr		593435	0					
ANR	593835	PrimaryExpression	0x10		593435	1					
ANR	593836	IdentifierDeclStatement	ut64 field_start = kmod_info_paddr + 0xb4 ;	484:2:12615:12656	593435	4	True				
ANR	593837	IdentifierDecl	field_start = kmod_info_paddr + 0xb4		593435	0					
ANR	593838	IdentifierDeclType	ut64		593435	0					
ANR	593839	Identifier	field_start		593435	1					
ANR	593840	AssignmentExpression	field_start = kmod_info_paddr + 0xb4		593435	2		=			
ANR	593841	Identifier	field_start		593435	0					
ANR	593842	AdditiveExpression	kmod_info_paddr + 0xb4		593435	1		+			
ANR	593843	Identifier	kmod_info_paddr		593435	0					
ANR	593844	PrimaryExpression	0xb4		593435	1					
ANR	593845	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , field_start , bytes , 8 ) < 8 )"		593435	5					
ANR	593846	Condition	"r_buf_read_at ( obj -> cache_buf , field_start , bytes , 8 ) < 8"	486:6:12665:12721	593435	0	True				
ANR	593847	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , field_start , bytes , 8 ) < 8"		593435	0		<			
ANR	593848	CallExpression	"r_buf_read_at ( obj -> cache_buf , field_start , bytes , 8 )"		593435	0					
ANR	593849	Callee	r_buf_read_at		593435	0					
ANR	593850	Identifier	r_buf_read_at		593435	0					
ANR	593851	ArgumentList	obj -> cache_buf		593435	1					
ANR	593852	Argument	obj -> cache_buf		593435	0					
ANR	593853	PtrMemberAccess	obj -> cache_buf		593435	0					
ANR	593854	Identifier	obj		593435	0					
ANR	593855	Identifier	cache_buf		593435	1					
ANR	593856	Argument	field_start		593435	1					
ANR	593857	Identifier	field_start		593435	0					
ANR	593858	Argument	bytes		593435	2					
ANR	593859	Identifier	bytes		593435	0					
ANR	593860	Argument	8		593435	3					
ANR	593861	PrimaryExpression	8		593435	0					
ANR	593862	PrimaryExpression	8		593435	1					
ANR	593863	CompoundStatement		71:65:1678:1678	593435	1					
ANR	593864	GotoStatement	goto beach ;	487:3:12729:12739	593435	0	True				
ANR	593865	Identifier	beach		593435	0					
ANR	593866	ExpressionStatement	all_infos [ j ] . start = K_RPTR ( bytes )	490:2:12748:12783	593435	6	True				
ANR	593867	AssignmentExpression	all_infos [ j ] . start = K_RPTR ( bytes )		593435	0		=			
ANR	593868	MemberAccess	all_infos [ j ] . start		593435	0					
ANR	593869	ArrayIndexing	all_infos [ j ]		593435	0					
ANR	593870	Identifier	all_infos		593435	0					
ANR	593871	Identifier	j		593435	1					
ANR	593872	Identifier	start		593435	1					
ANR	593873	CallExpression	K_RPTR ( bytes )		593435	1					
ANR	593874	Callee	K_RPTR		593435	0					
ANR	593875	Identifier	K_RPTR		593435	0					
ANR	593876	ArgumentList	bytes		593435	1					
ANR	593877	Argument	bytes		593435	0					
ANR	593878	Identifier	bytes		593435	0					
ANR	593879	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , field_name , ( ut8 * ) all_infos [ j ] . name , 0x40 ) < 0x40 )"		593435	7					
ANR	593880	Condition	"r_buf_read_at ( obj -> cache_buf , field_name , ( ut8 * ) all_infos [ j ] . name , 0x40 ) < 0x40"	492:6:12792:12873	593435	0	True				
ANR	593881	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , field_name , ( ut8 * ) all_infos [ j ] . name , 0x40 ) < 0x40"		593435	0		<			
ANR	593882	CallExpression	"r_buf_read_at ( obj -> cache_buf , field_name , ( ut8 * ) all_infos [ j ] . name , 0x40 )"		593435	0					
ANR	593883	Callee	r_buf_read_at		593435	0					
ANR	593884	Identifier	r_buf_read_at		593435	0					
ANR	593885	ArgumentList	obj -> cache_buf		593435	1					
ANR	593886	Argument	obj -> cache_buf		593435	0					
ANR	593887	PtrMemberAccess	obj -> cache_buf		593435	0					
ANR	593888	Identifier	obj		593435	0					
ANR	593889	Identifier	cache_buf		593435	1					
ANR	593890	Argument	field_name		593435	1					
ANR	593891	Identifier	field_name		593435	0					
ANR	593892	Argument	( ut8 * ) all_infos [ j ] . name		593435	2					
ANR	593893	CastExpression	( ut8 * ) all_infos [ j ] . name		593435	0					
ANR	593894	CastTarget	ut8 *		593435	0					
ANR	593895	MemberAccess	all_infos [ j ] . name		593435	1					
ANR	593896	ArrayIndexing	all_infos [ j ]		593435	0					
ANR	593897	Identifier	all_infos		593435	0					
ANR	593898	Identifier	j		593435	1					
ANR	593899	Identifier	name		593435	1					
ANR	593900	Argument	0x40		593435	3					
ANR	593901	PrimaryExpression	0x40		593435	0					
ANR	593902	PrimaryExpression	0x40		593435	1					
ANR	593903	CompoundStatement		77:90:1830:1830	593435	1					
ANR	593904	GotoStatement	goto beach ;	493:3:12881:12891	593435	0	True				
ANR	593905	Identifier	beach		593435	0					
ANR	593906	ExpressionStatement	all_infos [ j ] . name [ 0x40 ] = 0	496:2:12900:12927	593435	8	True				
ANR	593907	AssignmentExpression	all_infos [ j ] . name [ 0x40 ] = 0		593435	0		=			
ANR	593908	ArrayIndexing	all_infos [ j ] . name [ 0x40 ]		593435	0					
ANR	593909	MemberAccess	all_infos [ j ] . name		593435	0					
ANR	593910	ArrayIndexing	all_infos [ j ]		593435	0					
ANR	593911	Identifier	all_infos		593435	0					
ANR	593912	Identifier	j		593435	1					
ANR	593913	Identifier	name		593435	1					
ANR	593914	PrimaryExpression	0x40		593435	1					
ANR	593915	PrimaryExpression	0		593435	1					
ANR	593916	IdentifierDeclStatement	ut64 cursor = kmod_start ;	499:1:12934:12958	593435	21	True				
ANR	593917	IdentifierDecl	cursor = kmod_start		593435	0					
ANR	593918	IdentifierDeclType	ut64		593435	0					
ANR	593919	Identifier	cursor		593435	1					
ANR	593920	AssignmentExpression	cursor = kmod_start		593435	2		=			
ANR	593921	Identifier	kmod_start		593435	0					
ANR	593922	Identifier	kmod_start		593435	1					
ANR	593923	ForStatement	for ( ; cursor < kmod_end ; cursor += 8 )		593435	22					
ANR	593924	Condition	cursor < kmod_end	500:7:12967:12983	593435	0	True				
ANR	593925	RelationalExpression	cursor < kmod_end		593435	0		<			
ANR	593926	Identifier	cursor		593435	0					
ANR	593927	Identifier	kmod_end		593435	1					
ANR	593928	AssignmentExpression	cursor += 8	500:26:12986:12996	593435	1	True	+=			
ANR	593929	Identifier	cursor		593435	0					
ANR	593930	PrimaryExpression	8		593435	1					
ANR	593931	CompoundStatement		111:2:2485:2535	593435	2					
ANR	593932	IdentifierDeclStatement	ut8 bytes [ 8 ] ;	501:2:13003:13015	593435	0	True				
ANR	593933	IdentifierDecl	bytes [ 8 ]		593435	0					
ANR	593934	IdentifierDeclType	ut8 [ 8 ]		593435	0					
ANR	593935	Identifier	bytes		593435	1					
ANR	593936	PrimaryExpression	8		593435	2					
ANR	593937	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , cursor , bytes , 8 ) < 8 )"		593435	1					
ANR	593938	Condition	"r_buf_read_at ( obj -> cache_buf , cursor , bytes , 8 ) < 8"	502:6:13023:13074	593435	0	True				
ANR	593939	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , cursor , bytes , 8 ) < 8"		593435	0		<			
ANR	593940	CallExpression	"r_buf_read_at ( obj -> cache_buf , cursor , bytes , 8 )"		593435	0					
ANR	593941	Callee	r_buf_read_at		593435	0					
ANR	593942	Identifier	r_buf_read_at		593435	0					
ANR	593943	ArgumentList	obj -> cache_buf		593435	1					
ANR	593944	Argument	obj -> cache_buf		593435	0					
ANR	593945	PtrMemberAccess	obj -> cache_buf		593435	0					
ANR	593946	Identifier	obj		593435	0					
ANR	593947	Identifier	cache_buf		593435	1					
ANR	593948	Argument	cursor		593435	1					
ANR	593949	Identifier	cursor		593435	0					
ANR	593950	Argument	bytes		593435	2					
ANR	593951	Identifier	bytes		593435	0					
ANR	593952	Argument	8		593435	3					
ANR	593953	PrimaryExpression	8		593435	0					
ANR	593954	PrimaryExpression	8		593435	1					
ANR	593955	CompoundStatement		87:60:2031:2031	593435	1					
ANR	593956	GotoStatement	goto beach ;	503:3:13082:13092	593435	0	True				
ANR	593957	Identifier	beach		593435	0					
ANR	593958	IdentifierDeclStatement	RKext * kext = R_NEW0 ( RKext ) ;	506:2:13101:13129	593435	2	True				
ANR	593959	IdentifierDecl	* kext = R_NEW0 ( RKext )		593435	0					
ANR	593960	IdentifierDeclType	RKext *		593435	0					
ANR	593961	Identifier	kext		593435	1					
ANR	593962	AssignmentExpression	* kext = R_NEW0 ( RKext )		593435	2		=			
ANR	593963	Identifier	kext		593435	0					
ANR	593964	CallExpression	R_NEW0 ( RKext )		593435	1					
ANR	593965	Callee	R_NEW0		593435	0					
ANR	593966	Identifier	R_NEW0		593435	0					
ANR	593967	ArgumentList	RKext		593435	1					
ANR	593968	Argument	RKext		593435	0					
ANR	593969	Identifier	RKext		593435	0					
ANR	593970	IfStatement	if ( ! kext )		593435	3					
ANR	593971	Condition	! kext	507:6:13137:13141	593435	0	True				
ANR	593972	UnaryOperationExpression	! kext		593435	0					
ANR	593973	UnaryOperator	!		593435	0					
ANR	593974	Identifier	kext		593435	1					
ANR	593975	CompoundStatement		92:13:2098:2098	593435	1					
ANR	593976	GotoStatement	goto beach ;	508:3:13149:13159	593435	0	True				
ANR	593977	Identifier	beach		593435	0					
ANR	593978	ExpressionStatement	kext -> vaddr = K_RPTR ( bytes )	511:2:13168:13196	593435	4	True				
ANR	593979	AssignmentExpression	kext -> vaddr = K_RPTR ( bytes )		593435	0		=			
ANR	593980	PtrMemberAccess	kext -> vaddr		593435	0					
ANR	593981	Identifier	kext		593435	0					
ANR	593982	Identifier	vaddr		593435	1					
ANR	593983	CallExpression	K_RPTR ( bytes )		593435	1					
ANR	593984	Callee	K_RPTR		593435	0					
ANR	593985	Identifier	K_RPTR		593435	0					
ANR	593986	ArgumentList	bytes		593435	1					
ANR	593987	Argument	bytes		593435	0					
ANR	593988	Identifier	bytes		593435	0					
ANR	593989	ExpressionStatement	kext -> range . offset = kext -> vaddr - pa2va_exec	512:2:13200:13245	593435	5	True				
ANR	593990	AssignmentExpression	kext -> range . offset = kext -> vaddr - pa2va_exec		593435	0		=			
ANR	593991	MemberAccess	kext -> range . offset		593435	0					
ANR	593992	PtrMemberAccess	kext -> range		593435	0					
ANR	593993	Identifier	kext		593435	0					
ANR	593994	Identifier	range		593435	1					
ANR	593995	Identifier	offset		593435	1					
ANR	593996	AdditiveExpression	kext -> vaddr - pa2va_exec		593435	1		-			
ANR	593997	PtrMemberAccess	kext -> vaddr		593435	0					
ANR	593998	Identifier	kext		593435	0					
ANR	593999	Identifier	vaddr		593435	1					
ANR	594000	Identifier	pa2va_exec		593435	1					
ANR	594001	ExpressionStatement	"kext -> mach0 = create_kext_mach0 ( obj , kext )"	514:2:13250:13293	593435	6	True				
ANR	594002	AssignmentExpression	"kext -> mach0 = create_kext_mach0 ( obj , kext )"		593435	0		=			
ANR	594003	PtrMemberAccess	kext -> mach0		593435	0					
ANR	594004	Identifier	kext		593435	0					
ANR	594005	Identifier	mach0		593435	1					
ANR	594006	CallExpression	"create_kext_mach0 ( obj , kext )"		593435	1					
ANR	594007	Callee	create_kext_mach0		593435	0					
ANR	594008	Identifier	create_kext_mach0		593435	0					
ANR	594009	ArgumentList	obj		593435	1					
ANR	594010	Argument	obj		593435	0					
ANR	594011	Identifier	obj		593435	0					
ANR	594012	Argument	kext		593435	1					
ANR	594013	Identifier	kext		593435	0					
ANR	594014	IfStatement	if ( ! kext -> mach0 )		593435	7					
ANR	594015	Condition	! kext -> mach0	515:6:13301:13312	593435	0	True				
ANR	594016	UnaryOperationExpression	! kext -> mach0		593435	0					
ANR	594017	UnaryOperator	!		593435	0					
ANR	594018	PtrMemberAccess	kext -> mach0		593435	1					
ANR	594019	Identifier	kext		593435	0					
ANR	594020	Identifier	mach0		593435	1					
ANR	594021	CompoundStatement		100:20:2269:2269	593435	1					
ANR	594022	ExpressionStatement	r_kext_free ( kext )	516:3:13320:13338	593435	0	True				
ANR	594023	CallExpression	r_kext_free ( kext )		593435	0					
ANR	594024	Callee	r_kext_free		593435	0					
ANR	594025	Identifier	r_kext_free		593435	0					
ANR	594026	ArgumentList	kext		593435	1					
ANR	594027	Argument	kext		593435	0					
ANR	594028	Identifier	kext		593435	0					
ANR	594029	ContinueStatement	continue ;	517:3:13343:13351	593435	1	True				
ANR	594030	ExpressionStatement	r_kext_fill_text_range ( kext )	520:2:13360:13389	593435	8	True				
ANR	594031	CallExpression	r_kext_fill_text_range ( kext )		593435	0					
ANR	594032	Callee	r_kext_fill_text_range		593435	0					
ANR	594033	Identifier	r_kext_fill_text_range		593435	0					
ANR	594034	ArgumentList	kext		593435	1					
ANR	594035	Argument	kext		593435	0					
ANR	594036	Identifier	kext		593435	0					
ANR	594037	ExpressionStatement	kext -> vaddr = K_PPTR ( kext -> vaddr )	521:2:13393:13427	593435	9	True				
ANR	594038	AssignmentExpression	kext -> vaddr = K_PPTR ( kext -> vaddr )		593435	0		=			
ANR	594039	PtrMemberAccess	kext -> vaddr		593435	0					
ANR	594040	Identifier	kext		593435	0					
ANR	594041	Identifier	vaddr		593435	1					
ANR	594042	CallExpression	K_PPTR ( kext -> vaddr )		593435	1					
ANR	594043	Callee	K_PPTR		593435	0					
ANR	594044	Identifier	K_PPTR		593435	0					
ANR	594045	ArgumentList	kext -> vaddr		593435	1					
ANR	594046	Argument	kext -> vaddr		593435	0					
ANR	594047	PtrMemberAccess	kext -> vaddr		593435	0					
ANR	594048	Identifier	kext		593435	0					
ANR	594049	Identifier	vaddr		593435	1					
ANR	594050	ExpressionStatement	kext -> pa2va_exec = pa2va_exec	522:2:13431:13460	593435	10	True				
ANR	594051	AssignmentExpression	kext -> pa2va_exec = pa2va_exec		593435	0		=			
ANR	594052	PtrMemberAccess	kext -> pa2va_exec		593435	0					
ANR	594053	Identifier	kext		593435	0					
ANR	594054	Identifier	pa2va_exec		593435	1					
ANR	594055	Identifier	pa2va_exec		593435	1					
ANR	594056	ExpressionStatement	kext -> pa2va_data = pa2va_data	523:2:13464:13493	593435	11	True				
ANR	594057	AssignmentExpression	kext -> pa2va_data = pa2va_data		593435	0		=			
ANR	594058	PtrMemberAccess	kext -> pa2va_data		593435	0					
ANR	594059	Identifier	kext		593435	0					
ANR	594060	Identifier	pa2va_data		593435	1					
ANR	594061	Identifier	pa2va_data		593435	1					
ANR	594062	IdentifierDeclStatement	ut64 text_start = kext -> vaddr ;	525:2:13498:13527	593435	12	True				
ANR	594063	IdentifierDecl	text_start = kext -> vaddr		593435	0					
ANR	594064	IdentifierDeclType	ut64		593435	0					
ANR	594065	Identifier	text_start		593435	1					
ANR	594066	AssignmentExpression	text_start = kext -> vaddr		593435	2		=			
ANR	594067	Identifier	text_start		593435	0					
ANR	594068	PtrMemberAccess	kext -> vaddr		593435	1					
ANR	594069	Identifier	kext		593435	0					
ANR	594070	Identifier	vaddr		593435	1					
ANR	594071	IdentifierDeclStatement	ut64 text_end = text_start + kext -> text_range . size ;	526:2:13531:13581	593435	13	True				
ANR	594072	IdentifierDecl	text_end = text_start + kext -> text_range . size		593435	0					
ANR	594073	IdentifierDeclType	ut64		593435	0					
ANR	594074	Identifier	text_end		593435	1					
ANR	594075	AssignmentExpression	text_end = text_start + kext -> text_range . size		593435	2		=			
ANR	594076	Identifier	text_end		593435	0					
ANR	594077	AdditiveExpression	text_start + kext -> text_range . size		593435	1		+			
ANR	594078	Identifier	text_start		593435	0					
ANR	594079	MemberAccess	kext -> text_range . size		593435	1					
ANR	594080	PtrMemberAccess	kext -> text_range		593435	0					
ANR	594081	Identifier	kext		593435	0					
ANR	594082	Identifier	text_range		593435	1					
ANR	594083	Identifier	size		593435	1					
ANR	594084	IfStatement	if ( text_start == text_end )		593435	14					
ANR	594085	Condition	text_start == text_end	528:6:13590:13611	593435	0	True				
ANR	594086	EqualityExpression	text_start == text_end		593435	0		==			
ANR	594087	Identifier	text_start		593435	0					
ANR	594088	Identifier	text_end		593435	1					
ANR	594089	CompoundStatement		113:30:2568:2568	593435	1					
ANR	594090	ContinueStatement	continue ;	529:3:13619:13627	593435	0	True				
ANR	594091	ForStatement	for ( j = 0 ; j < n_kmod_info ; j ++ )		593435	15					
ANR	594092	ForInit	j = 0 ;	532:7:13641:13646	593435	0	True				
ANR	594093	AssignmentExpression	j = 0		593435	0		=			
ANR	594094	Identifier	j		593435	0					
ANR	594095	PrimaryExpression	0		593435	1					
ANR	594096	Condition	j < n_kmod_info	532:14:13648:13662	593435	1	True				
ANR	594097	RelationalExpression	j < n_kmod_info		593435	0		<			
ANR	594098	Identifier	j		593435	0					
ANR	594099	Identifier	n_kmod_info		593435	1					
ANR	594100	PostIncDecOperationExpression	j ++	532:31:13665:13667	593435	2	True				
ANR	594101	Identifier	j		593435	0					
ANR	594102	IncDec	++		593435	1					
ANR	594103	CompoundStatement		117:36:2624:2624	593435	3					
ANR	594104	IfStatement	if ( text_start > all_infos [ j ] . start || all_infos [ j ] . start >= text_end )		593435	0					
ANR	594105	Condition	text_start > all_infos [ j ] . start || all_infos [ j ] . start >= text_end	533:7:13679:13743	593435	0	True				
ANR	594106	OrExpression	text_start > all_infos [ j ] . start || all_infos [ j ] . start >= text_end		593435	0		||			
ANR	594107	RelationalExpression	text_start > all_infos [ j ] . start		593435	0		>			
ANR	594108	Identifier	text_start		593435	0					
ANR	594109	MemberAccess	all_infos [ j ] . start		593435	1					
ANR	594110	ArrayIndexing	all_infos [ j ]		593435	0					
ANR	594111	Identifier	all_infos		593435	0					
ANR	594112	Identifier	j		593435	1					
ANR	594113	Identifier	start		593435	1					
ANR	594114	RelationalExpression	all_infos [ j ] . start >= text_end		593435	1		>=			
ANR	594115	MemberAccess	all_infos [ j ] . start		593435	0					
ANR	594116	ArrayIndexing	all_infos [ j ]		593435	0					
ANR	594117	Identifier	all_infos		593435	0					
ANR	594118	Identifier	j		593435	1					
ANR	594119	Identifier	start		593435	1					
ANR	594120	Identifier	text_end		593435	1					
ANR	594121	CompoundStatement		118:74:2700:2700	593435	1					
ANR	594122	ContinueStatement	continue ;	534:4:13752:13760	593435	0	True				
ANR	594123	ExpressionStatement	kext -> name = strdup ( all_infos [ j ] . name )	537:3:13771:13810	593435	1	True				
ANR	594124	AssignmentExpression	kext -> name = strdup ( all_infos [ j ] . name )		593435	0		=			
ANR	594125	PtrMemberAccess	kext -> name		593435	0					
ANR	594126	Identifier	kext		593435	0					
ANR	594127	Identifier	name		593435	1					
ANR	594128	CallExpression	strdup ( all_infos [ j ] . name )		593435	1					
ANR	594129	Callee	strdup		593435	0					
ANR	594130	Identifier	strdup		593435	0					
ANR	594131	ArgumentList	all_infos [ j ] . name		593435	1					
ANR	594132	Argument	all_infos [ j ] . name		593435	0					
ANR	594133	MemberAccess	all_infos [ j ] . name		593435	0					
ANR	594134	ArrayIndexing	all_infos [ j ]		593435	0					
ANR	594135	Identifier	all_infos		593435	0					
ANR	594136	Identifier	j		593435	1					
ANR	594137	Identifier	name		593435	1					
ANR	594138	ExpressionStatement	kext -> own_name = true	538:3:13815:13836	593435	2	True				
ANR	594139	AssignmentExpression	kext -> own_name = true		593435	0		=			
ANR	594140	PtrMemberAccess	kext -> own_name		593435	0					
ANR	594141	Identifier	kext		593435	0					
ANR	594142	Identifier	own_name		593435	1					
ANR	594143	Identifier	true		593435	1					
ANR	594144	BreakStatement	break ;	539:3:13841:13846	593435	3	True				
ANR	594145	IfStatement	if ( ! kext -> name )		593435	16					
ANR	594146	Condition	! kext -> name	542:6:13859:13869	593435	0	True				
ANR	594147	UnaryOperationExpression	! kext -> name		593435	0					
ANR	594148	UnaryOperator	!		593435	0					
ANR	594149	PtrMemberAccess	kext -> name		593435	1					
ANR	594150	Identifier	kext		593435	0					
ANR	594151	Identifier	name		593435	1					
ANR	594152	CompoundStatement		127:19:2826:2826	593435	1					
ANR	594153	ExpressionStatement	r_kext_free ( kext )	543:3:13877:13895	593435	0	True				
ANR	594154	CallExpression	r_kext_free ( kext )		593435	0					
ANR	594155	Callee	r_kext_free		593435	0					
ANR	594156	Identifier	r_kext_free		593435	0					
ANR	594157	ArgumentList	kext		593435	1					
ANR	594158	Argument	kext		593435	0					
ANR	594159	Identifier	kext		593435	0					
ANR	594160	ContinueStatement	continue ;	544:3:13900:13908	593435	1	True				
ANR	594161	ExpressionStatement	"r_list_push ( kexts , kext )"	547:2:13917:13942	593435	17	True				
ANR	594162	CallExpression	"r_list_push ( kexts , kext )"		593435	0					
ANR	594163	Callee	r_list_push		593435	0					
ANR	594164	Identifier	r_list_push		593435	0					
ANR	594165	ArgumentList	kexts		593435	1					
ANR	594166	Argument	kexts		593435	0					
ANR	594167	Identifier	kexts		593435	0					
ANR	594168	Argument	kext		593435	1					
ANR	594169	Identifier	kext		593435	0					
ANR	594170	ExpressionStatement	R_FREE ( all_infos )	550:1:13949:13967	593435	23	True				
ANR	594171	CallExpression	R_FREE ( all_infos )		593435	0					
ANR	594172	Callee	R_FREE		593435	0					
ANR	594173	Identifier	R_FREE		593435	0					
ANR	594174	ArgumentList	all_infos		593435	1					
ANR	594175	Argument	all_infos		593435	0					
ANR	594176	Identifier	all_infos		593435	0					
ANR	594177	ReturnStatement	return kexts ;	551:1:13970:13982	593435	24	True				
ANR	594178	Identifier	kexts		593435	0					
ANR	594179	Label	beach :	553:0:13985:13990	593435	25	True				
ANR	594180	Identifier	beach		593435	0					
ANR	594181	ExpressionStatement	r_list_free ( kexts )	554:1:13993:14012	593435	26	True				
ANR	594182	CallExpression	r_list_free ( kexts )		593435	0					
ANR	594183	Callee	r_list_free		593435	0					
ANR	594184	Identifier	r_list_free		593435	0					
ANR	594185	ArgumentList	kexts		593435	1					
ANR	594186	Argument	kexts		593435	0					
ANR	594187	Identifier	kexts		593435	0					
ANR	594188	ExpressionStatement	R_FREE ( all_infos )	555:1:14015:14033	593435	27	True				
ANR	594189	CallExpression	R_FREE ( all_infos )		593435	0					
ANR	594190	Callee	R_FREE		593435	0					
ANR	594191	Identifier	R_FREE		593435	0					
ANR	594192	ArgumentList	all_infos		593435	1					
ANR	594193	Argument	all_infos		593435	0					
ANR	594194	Identifier	all_infos		593435	0					
ANR	594195	ReturnStatement	return NULL ;	556:1:14036:14047	593435	28	True				
ANR	594196	Identifier	NULL		593435	0					
ANR	594197	ReturnType	static RList *		593435	1					
ANR	594198	Identifier	carve_kexts		593435	2					
ANR	594199	ParameterList	RKernelCacheObj * obj		593435	3					
ANR	594200	Parameter	RKernelCacheObj * obj	416:26:11023:11042	593435	0	True				
ANR	594201	ParameterType	RKernelCacheObj *		593435	0					
ANR	594202	Identifier	obj		593435	1					
ANR	594203	CFGEntryNode	ENTRY		593435		True				
ANR	594204	CFGExitNode	EXIT		593435		True				
ANR	594205	Symbol	kext -> own_name		593435						
ANR	594206	Symbol	kext -> pa2va_data		593435						
ANR	594207	Symbol	sections [ i ] . addr		593435						
ANR	594208	Symbol	kext -> text_range . size		593435						
ANR	594209	Symbol	field_start		593435						
ANR	594210	Symbol	RKmodInfo		593435						
ANR	594211	Symbol	incomplete		593435						
ANR	594212	Symbol	kmod_info_end		593435						
ANR	594213	Symbol	get_sections		593435						
ANR	594214	Symbol	obj -> mach0		593435						
ANR	594215	Symbol	kext -> name		593435						
ANR	594216	Symbol	text_start		593435						
ANR	594217	Symbol	* * j		593435						
ANR	594218	Symbol	NULL		593435						
ANR	594219	Symbol	pa2va_data		593435						
ANR	594220	Symbol	r_list_newf		593435						
ANR	594221	Symbol	kmod_info_paddr		593435						
ANR	594222	Symbol	* all_infos		593435						
ANR	594223	Symbol	K_PPTR		593435						
ANR	594224	Symbol	kext -> range . offset		593435						
ANR	594225	Symbol	* kext		593435						
ANR	594226	Symbol	sections		593435						
ANR	594227	Symbol	kext -> mach0		593435						
ANR	594228	Symbol	entry_offset		593435						
ANR	594229	Symbol	R_NEW0		593435						
ANR	594230	Symbol	strstr		593435						
ANR	594231	Symbol	true		593435						
ANR	594232	Symbol	pa2va_exec		593435						
ANR	594233	Symbol	create_kext_mach0		593435						
ANR	594234	Symbol	cursor		593435						
ANR	594235	Symbol	n_kmod_info		593435						
ANR	594236	Symbol	all_infos		593435						
ANR	594237	Symbol	kext -> vaddr		593435						
ANR	594238	Symbol	kexts		593435						
ANR	594239	Symbol	kext -> range		593435						
ANR	594240	Symbol	all_infos [ j ] . name		593435						
ANR	594241	Symbol	kmod_start		593435						
ANR	594242	Symbol	& r_kext_free		593435						
ANR	594243	Symbol	obj -> cache_buf		593435						
ANR	594244	Symbol	R_NEWS0		593435						
ANR	594245	Symbol	sections [ i ] . offset		593435						
ANR	594246	Symbol	* obj		593435						
ANR	594247	Symbol	kext		593435						
ANR	594248	Symbol	kmod_info		593435						
ANR	594249	Symbol	i		593435						
ANR	594250	Symbol	j		593435						
ANR	594251	Symbol	kext -> pa2va_exec		593435						
ANR	594252	Symbol	sections [ i ] . last		593435						
ANR	594253	Symbol	K_RPTR		593435						
ANR	594254	Symbol	kmod_end		593435						
ANR	594255	Symbol	field_name		593435						
ANR	594256	Symbol	RKext		593435						
ANR	594257	Symbol	kext -> text_range		593435						
ANR	594258	Symbol	MACH0_		593435						
ANR	594259	Symbol	* i		593435						
ANR	594260	Symbol	* j		593435						
ANR	594261	Symbol	obj		593435						
ANR	594262	Symbol	bytes		593435						
ANR	594263	Symbol	* all_infos [ j ] . name		593435						
ANR	594264	Symbol	* * all_infos		593435						
ANR	594265	Symbol	sections [ i ] . name		593435						
ANR	594266	Symbol	r_buf_read_at		593435						
ANR	594267	Symbol	all_infos [ j ] . start		593435						
ANR	594268	Symbol	text_end		593435						
ANR	594269	Symbol	strdup		593435						
ANR	594270	Symbol	sections [ i ] . size		593435						
ANR	594271	Symbol	* sections		593435						
ANR	594272	Function	r_kext_free	559:0:14052:14302							
ANR	594273	FunctionDef	r_kext_free (RKext * kext)		594272	0					
ANR	594274	CompoundStatement		559:37:14089:14302	594272	0					
ANR	594275	IfStatement	if ( ! kext )		594272	0					
ANR	594276	Condition	! kext	560:5:14096:14100	594272	0	True				
ANR	594277	UnaryOperationExpression	! kext		594272	0					
ANR	594278	UnaryOperator	!		594272	0					
ANR	594279	Identifier	kext		594272	1					
ANR	594280	CompoundStatement		2:12:13:13	594272	1					
ANR	594281	ReturnStatement	return ;	561:2:14107:14113	594272	0	True				
ANR	594282	IfStatement	if ( kext -> mach0 )		594272	1					
ANR	594283	Condition	kext -> mach0	564:5:14124:14134	594272	0	True				
ANR	594284	PtrMemberAccess	kext -> mach0		594272	0					
ANR	594285	Identifier	kext		594272	0					
ANR	594286	Identifier	mach0		594272	1					
ANR	594287	CompoundStatement		6:18:47:47	594272	1					
ANR	594288	ExpressionStatement	MACH0_ ( mach0_free ) ( kext -> mach0 )	565:2:14141:14173	594272	0	True				
ANR	594289	CallExpression	MACH0_ ( mach0_free ) ( kext -> mach0 )		594272	0					
ANR	594290	Callee	MACH0_ ( mach0_free )		594272	0					
ANR	594291	CallExpression	MACH0_ ( mach0_free )		594272	0					
ANR	594292	Callee	MACH0_		594272	0					
ANR	594293	Identifier	MACH0_		594272	0					
ANR	594294	ArgumentList	mach0_free		594272	1					
ANR	594295	Argument	mach0_free		594272	0					
ANR	594296	Identifier	mach0_free		594272	0					
ANR	594297	ArgumentList	kext -> mach0		594272	1					
ANR	594298	Argument	kext -> mach0		594272	0					
ANR	594299	PtrMemberAccess	kext -> mach0		594272	0					
ANR	594300	Identifier	kext		594272	0					
ANR	594301	Identifier	mach0		594272	1					
ANR	594302	ExpressionStatement	kext -> mach0 = NULL	566:2:14177:14195	594272	1	True				
ANR	594303	AssignmentExpression	kext -> mach0 = NULL		594272	0		=			
ANR	594304	PtrMemberAccess	kext -> mach0		594272	0					
ANR	594305	Identifier	kext		594272	0					
ANR	594306	Identifier	mach0		594272	1					
ANR	594307	Identifier	NULL		594272	1					
ANR	594308	IfStatement	if ( kext -> own_name && kext -> name )		594272	2					
ANR	594309	Condition	kext -> own_name && kext -> name	569:5:14206:14233	594272	0	True				
ANR	594310	AndExpression	kext -> own_name && kext -> name		594272	0		&&			
ANR	594311	PtrMemberAccess	kext -> own_name		594272	0					
ANR	594312	Identifier	kext		594272	0					
ANR	594313	Identifier	own_name		594272	1					
ANR	594314	PtrMemberAccess	kext -> name		594272	1					
ANR	594315	Identifier	kext		594272	0					
ANR	594316	Identifier	name		594272	1					
ANR	594317	CompoundStatement		11:35:146:146	594272	1					
ANR	594318	ExpressionStatement	R_FREE ( kext -> name )	570:2:14240:14259	594272	0	True				
ANR	594319	CallExpression	R_FREE ( kext -> name )		594272	0					
ANR	594320	Callee	R_FREE		594272	0					
ANR	594321	Identifier	R_FREE		594272	0					
ANR	594322	ArgumentList	kext -> name		594272	1					
ANR	594323	Argument	kext -> name		594272	0					
ANR	594324	PtrMemberAccess	kext -> name		594272	0					
ANR	594325	Identifier	kext		594272	0					
ANR	594326	Identifier	name		594272	1					
ANR	594327	ExpressionStatement	kext -> name = NULL	571:2:14263:14280	594272	1	True				
ANR	594328	AssignmentExpression	kext -> name = NULL		594272	0		=			
ANR	594329	PtrMemberAccess	kext -> name		594272	0					
ANR	594330	Identifier	kext		594272	0					
ANR	594331	Identifier	name		594272	1					
ANR	594332	Identifier	NULL		594272	1					
ANR	594333	ExpressionStatement	R_FREE ( kext )	574:1:14287:14300	594272	3	True				
ANR	594334	CallExpression	R_FREE ( kext )		594272	0					
ANR	594335	Callee	R_FREE		594272	0					
ANR	594336	Identifier	R_FREE		594272	0					
ANR	594337	ArgumentList	kext		594272	1					
ANR	594338	Argument	kext		594272	0					
ANR	594339	Identifier	kext		594272	0					
ANR	594340	ReturnType	static void		594272	1					
ANR	594341	Identifier	r_kext_free		594272	2					
ANR	594342	ParameterList	RKext * kext		594272	3					
ANR	594343	Parameter	RKext * kext	559:24:14076:14086	594272	0	True				
ANR	594344	ParameterType	RKext *		594272	0					
ANR	594345	Identifier	kext		594272	1					
ANR	594346	CFGEntryNode	ENTRY		594272		True				
ANR	594347	CFGExitNode	EXIT		594272		True				
ANR	594348	Symbol	kext -> mach0		594272						
ANR	594349	Symbol	kext -> own_name		594272						
ANR	594350	Symbol	NULL		594272						
ANR	594351	Symbol	kext		594272						
ANR	594352	Symbol	mach0_free		594272						
ANR	594353	Symbol	kext -> name		594272						
ANR	594354	Symbol	* kext		594272						
ANR	594355	Function	r_kext_fill_text_range	577:0:14305:14732							
ANR	594356	FunctionDef	r_kext_fill_text_range (RKext * kext)		594355	0					
ANR	594357	CompoundStatement		577:48:14353:14732	594355	0					
ANR	594358	IdentifierDeclStatement	struct section_t * sections = NULL ;	578:1:14356:14389	594355	0	True				
ANR	594359	IdentifierDecl	* sections = NULL		594355	0					
ANR	594360	IdentifierDeclType	struct section_t *		594355	0					
ANR	594361	Identifier	sections		594355	1					
ANR	594362	AssignmentExpression	* sections = NULL		594355	2		=			
ANR	594363	Identifier	NULL		594355	0					
ANR	594364	Identifier	NULL		594355	1					
ANR	594365	IfStatement	if ( ! ( sections = MACH0_ ( get_sections ) ( kext -> mach0 ) ) )		594355	1					
ANR	594366	Condition	! ( sections = MACH0_ ( get_sections ) ( kext -> mach0 ) )	579:5:14396:14443	594355	0	True				
ANR	594367	UnaryOperationExpression	! ( sections = MACH0_ ( get_sections ) ( kext -> mach0 ) )		594355	0					
ANR	594368	UnaryOperator	!		594355	0					
ANR	594369	AssignmentExpression	sections = MACH0_ ( get_sections ) ( kext -> mach0 )		594355	1		=			
ANR	594370	Identifier	sections		594355	0					
ANR	594371	CallExpression	MACH0_ ( get_sections ) ( kext -> mach0 )		594355	1					
ANR	594372	Callee	MACH0_ ( get_sections )		594355	0					
ANR	594373	CallExpression	MACH0_ ( get_sections )		594355	0					
ANR	594374	Callee	MACH0_		594355	0					
ANR	594375	Identifier	MACH0_		594355	0					
ANR	594376	ArgumentList	get_sections		594355	1					
ANR	594377	Argument	get_sections		594355	0					
ANR	594378	Identifier	get_sections		594355	0					
ANR	594379	ArgumentList	kext -> mach0		594355	1					
ANR	594380	Argument	kext -> mach0		594355	0					
ANR	594381	PtrMemberAccess	kext -> mach0		594355	0					
ANR	594382	Identifier	kext		594355	0					
ANR	594383	Identifier	mach0		594355	1					
ANR	594384	CompoundStatement		3:55:92:92	594355	1					
ANR	594385	ReturnStatement	return ;	580:2:14450:14456	594355	0	True				
ANR	594386	IdentifierDeclStatement	int i = 0 ;	583:1:14463:14472	594355	2	True				
ANR	594387	IdentifierDecl	i = 0		594355	0					
ANR	594388	IdentifierDeclType	int		594355	0					
ANR	594389	Identifier	i		594355	1					
ANR	594390	AssignmentExpression	i = 0		594355	2		=			
ANR	594391	Identifier	i		594355	0					
ANR	594392	PrimaryExpression	0		594355	1					
ANR	594393	ForStatement	for ( ; ! sections [ i ] . last ; i ++ )		594355	3					
ANR	594394	Condition	! sections [ i ] . last	584:8:14482:14498	594355	0	True				
ANR	594395	UnaryOperationExpression	! sections [ i ] . last		594355	0					
ANR	594396	UnaryOperator	!		594355	0					
ANR	594397	MemberAccess	sections [ i ] . last		594355	1					
ANR	594398	ArrayIndexing	sections [ i ]		594355	0					
ANR	594399	Identifier	sections		594355	0					
ANR	594400	Identifier	i		594355	1					
ANR	594401	Identifier	last		594355	1					
ANR	594402	PostIncDecOperationExpression	i ++	584:27:14501:14503	594355	1	True				
ANR	594403	Identifier	i		594355	0					
ANR	594404	IncDec	++		594355	1					
ANR	594405	CompoundStatement		8:32:152:152	594355	2					
ANR	594406	IfStatement	"if ( strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" ) )"		594355	0					
ANR	594407	Condition	"strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" )"	585:6:14514:14560	594355	0	True				
ANR	594408	CallExpression	"strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" )"		594355	0					
ANR	594409	Callee	strstr		594355	0					
ANR	594410	Identifier	strstr		594355	0					
ANR	594411	ArgumentList	sections [ i ] . name		594355	1					
ANR	594412	Argument	sections [ i ] . name		594355	0					
ANR	594413	MemberAccess	sections [ i ] . name		594355	0					
ANR	594414	ArrayIndexing	sections [ i ]		594355	0					
ANR	594415	Identifier	sections		594355	0					
ANR	594416	Identifier	i		594355	1					
ANR	594417	Identifier	name		594355	1					
ANR	594418	Argument	"""__TEXT_EXEC.__text"""		594355	1					
ANR	594419	PrimaryExpression	"""__TEXT_EXEC.__text"""		594355	0					
ANR	594420	CompoundStatement		9:55:209:209	594355	1					
ANR	594421	ExpressionStatement	kext -> text_range . offset = sections [ i ] . offset	586:3:14568:14612	594355	0	True				
ANR	594422	AssignmentExpression	kext -> text_range . offset = sections [ i ] . offset		594355	0		=			
ANR	594423	MemberAccess	kext -> text_range . offset		594355	0					
ANR	594424	PtrMemberAccess	kext -> text_range		594355	0					
ANR	594425	Identifier	kext		594355	0					
ANR	594426	Identifier	text_range		594355	1					
ANR	594427	Identifier	offset		594355	1					
ANR	594428	MemberAccess	sections [ i ] . offset		594355	1					
ANR	594429	ArrayIndexing	sections [ i ]		594355	0					
ANR	594430	Identifier	sections		594355	0					
ANR	594431	Identifier	i		594355	1					
ANR	594432	Identifier	offset		594355	1					
ANR	594433	ExpressionStatement	kext -> text_range . size = sections [ i ] . size	587:3:14617:14657	594355	1	True				
ANR	594434	AssignmentExpression	kext -> text_range . size = sections [ i ] . size		594355	0		=			
ANR	594435	MemberAccess	kext -> text_range . size		594355	0					
ANR	594436	PtrMemberAccess	kext -> text_range		594355	0					
ANR	594437	Identifier	kext		594355	0					
ANR	594438	Identifier	text_range		594355	1					
ANR	594439	Identifier	size		594355	1					
ANR	594440	MemberAccess	sections [ i ] . size		594355	1					
ANR	594441	ArrayIndexing	sections [ i ]		594355	0					
ANR	594442	Identifier	sections		594355	0					
ANR	594443	Identifier	i		594355	1					
ANR	594444	Identifier	size		594355	1					
ANR	594445	ExpressionStatement	kext -> vaddr = sections [ i ] . addr	588:3:14662:14692	594355	2	True				
ANR	594446	AssignmentExpression	kext -> vaddr = sections [ i ] . addr		594355	0		=			
ANR	594447	PtrMemberAccess	kext -> vaddr		594355	0					
ANR	594448	Identifier	kext		594355	0					
ANR	594449	Identifier	vaddr		594355	1					
ANR	594450	MemberAccess	sections [ i ] . addr		594355	1					
ANR	594451	ArrayIndexing	sections [ i ]		594355	0					
ANR	594452	Identifier	sections		594355	0					
ANR	594453	Identifier	i		594355	1					
ANR	594454	Identifier	addr		594355	1					
ANR	594455	BreakStatement	break ;	589:3:14697:14702	594355	3	True				
ANR	594456	ExpressionStatement	R_FREE ( sections )	593:1:14713:14730	594355	4	True				
ANR	594457	CallExpression	R_FREE ( sections )		594355	0					
ANR	594458	Callee	R_FREE		594355	0					
ANR	594459	Identifier	R_FREE		594355	0					
ANR	594460	ArgumentList	sections		594355	1					
ANR	594461	Argument	sections		594355	0					
ANR	594462	Identifier	sections		594355	0					
ANR	594463	ReturnType	static void		594355	1					
ANR	594464	Identifier	r_kext_fill_text_range		594355	2					
ANR	594465	ParameterList	RKext * kext		594355	3					
ANR	594466	Parameter	RKext * kext	577:35:14340:14350	594355	0	True				
ANR	594467	ParameterType	RKext *		594355	0					
ANR	594468	Identifier	kext		594355	1					
ANR	594469	CFGEntryNode	ENTRY		594355		True				
ANR	594470	CFGExitNode	EXIT		594355		True				
ANR	594471	Symbol	sections [ i ] . offset		594355						
ANR	594472	Symbol	NULL		594355						
ANR	594473	Symbol	kext -> vaddr		594355						
ANR	594474	Symbol	kext		594355						
ANR	594475	Symbol	sections [ i ] . addr		594355						
ANR	594476	Symbol	kext -> text_range . size		594355						
ANR	594477	Symbol	i		594355						
ANR	594478	Symbol	* kext		594355						
ANR	594479	Symbol	sections [ i ] . last		594355						
ANR	594480	Symbol	kext -> text_range . offset		594355						
ANR	594481	Symbol	sections		594355						
ANR	594482	Symbol	kext -> text_range		594355						
ANR	594483	Symbol	kext -> mach0		594355						
ANR	594484	Symbol	MACH0_		594355						
ANR	594485	Symbol	* i		594355						
ANR	594486	Symbol	strstr		594355						
ANR	594487	Symbol	get_sections		594355						
ANR	594488	Symbol	sections [ i ] . name		594355						
ANR	594489	Symbol	sections [ i ] . size		594355						
ANR	594490	Symbol	* sections		594355						
ANR	594491	Function	kexts_sort_vaddr_func	596:0:14735:14995							
ANR	594492	FunctionDef	"kexts_sort_vaddr_func (const void * a , const void * b)"		594491	0					
ANR	594493	CompoundStatement		596:63:14798:14995	594491	0					
ANR	594494	IdentifierDeclStatement	RKext * A = ( RKext * ) a ;	597:1:14801:14823	594491	0	True				
ANR	594495	IdentifierDecl	* A = ( RKext * ) a		594491	0					
ANR	594496	IdentifierDeclType	RKext *		594491	0					
ANR	594497	Identifier	A		594491	1					
ANR	594498	AssignmentExpression	* A = ( RKext * ) a		594491	2		=			
ANR	594499	Identifier	A		594491	0					
ANR	594500	CastExpression	( RKext * ) a		594491	1					
ANR	594501	CastTarget	RKext *		594491	0					
ANR	594502	Identifier	a		594491	1					
ANR	594503	IdentifierDeclStatement	RKext * B = ( RKext * ) b ;	598:1:14826:14848	594491	1	True				
ANR	594504	IdentifierDecl	* B = ( RKext * ) b		594491	0					
ANR	594505	IdentifierDeclType	RKext *		594491	0					
ANR	594506	Identifier	B		594491	1					
ANR	594507	AssignmentExpression	* B = ( RKext * ) b		594491	2		=			
ANR	594508	Identifier	B		594491	0					
ANR	594509	CastExpression	( RKext * ) b		594491	1					
ANR	594510	CastTarget	RKext *		594491	0					
ANR	594511	Identifier	b		594491	1					
ANR	594512	IdentifierDeclStatement	int vaddr_compare = A -> vaddr - B -> vaddr ;	599:1:14851:14890	594491	2	True				
ANR	594513	IdentifierDecl	vaddr_compare = A -> vaddr - B -> vaddr		594491	0					
ANR	594514	IdentifierDeclType	int		594491	0					
ANR	594515	Identifier	vaddr_compare		594491	1					
ANR	594516	AssignmentExpression	vaddr_compare = A -> vaddr - B -> vaddr		594491	2		=			
ANR	594517	Identifier	vaddr_compare		594491	0					
ANR	594518	AdditiveExpression	A -> vaddr - B -> vaddr		594491	1		-			
ANR	594519	PtrMemberAccess	A -> vaddr		594491	0					
ANR	594520	Identifier	A		594491	0					
ANR	594521	Identifier	vaddr		594491	1					
ANR	594522	PtrMemberAccess	B -> vaddr		594491	1					
ANR	594523	Identifier	B		594491	0					
ANR	594524	Identifier	vaddr		594491	1					
ANR	594525	IfStatement	if ( vaddr_compare == 0 )		594491	3					
ANR	594526	Condition	vaddr_compare == 0	600:5:14897:14914	594491	0	True				
ANR	594527	EqualityExpression	vaddr_compare == 0		594491	0		==			
ANR	594528	Identifier	vaddr_compare		594491	0					
ANR	594529	PrimaryExpression	0		594491	1					
ANR	594530	CompoundStatement		5:25:118:118	594491	1					
ANR	594531	ReturnStatement	return A -> text_range . size - B -> text_range . size ;	601:2:14921:14967	594491	0	True				
ANR	594532	AdditiveExpression	A -> text_range . size - B -> text_range . size		594491	0		-			
ANR	594533	MemberAccess	A -> text_range . size		594491	0					
ANR	594534	PtrMemberAccess	A -> text_range		594491	0					
ANR	594535	Identifier	A		594491	0					
ANR	594536	Identifier	text_range		594491	1					
ANR	594537	Identifier	size		594491	1					
ANR	594538	MemberAccess	B -> text_range . size		594491	1					
ANR	594539	PtrMemberAccess	B -> text_range		594491	0					
ANR	594540	Identifier	B		594491	0					
ANR	594541	Identifier	text_range		594491	1					
ANR	594542	Identifier	size		594491	1					
ANR	594543	ReturnStatement	return vaddr_compare ;	603:1:14973:14993	594491	4	True				
ANR	594544	Identifier	vaddr_compare		594491	0					
ANR	594545	ReturnType	static int		594491	1					
ANR	594546	Identifier	kexts_sort_vaddr_func		594491	2					
ANR	594547	ParameterList	"const void * a , const void * b"		594491	3					
ANR	594548	Parameter	const void * a	596:33:14768:14780	594491	0	True				
ANR	594549	ParameterType	const void *		594491	0					
ANR	594550	Identifier	a		594491	1					
ANR	594551	Parameter	const void * b	596:48:14783:14795	594491	1	True				
ANR	594552	ParameterType	const void *		594491	0					
ANR	594553	Identifier	b		594491	1					
ANR	594554	CFGEntryNode	ENTRY		594491		True				
ANR	594555	CFGExitNode	EXIT		594491		True				
ANR	594556	Symbol	a		594491						
ANR	594557	Symbol	A		594491						
ANR	594558	Symbol	b		594491						
ANR	594559	Symbol	B		594491						
ANR	594560	Symbol	A -> vaddr		594491						
ANR	594561	Symbol	vaddr_compare		594491						
ANR	594562	Symbol	* A		594491						
ANR	594563	Symbol	A -> text_range . size		594491						
ANR	594564	Symbol	* B		594491						
ANR	594565	Symbol	B -> vaddr		594491						
ANR	594566	Symbol	B -> text_range . size		594491						
ANR	594567	Symbol	A -> text_range		594491						
ANR	594568	Symbol	B -> text_range		594491						
ANR	594569	Function	r_kext_index_new	606:0:14998:15495							
ANR	594570	FunctionDef	r_kext_index_new (RList * kexts)		594569	0					
ANR	594571	CompoundStatement		606:50:15048:15495	594569	0					
ANR	594572	IfStatement	if ( ! kexts )		594569	0					
ANR	594573	Condition	! kexts	607:5:15055:15060	594569	0	True				
ANR	594574	UnaryOperationExpression	! kexts		594569	0					
ANR	594575	UnaryOperator	!		594569	0					
ANR	594576	Identifier	kexts		594569	1					
ANR	594577	CompoundStatement		2:13:14:14	594569	1					
ANR	594578	ReturnStatement	return NULL ;	608:2:15067:15078	594569	0	True				
ANR	594579	Identifier	NULL		594569	0					
ANR	594580	IdentifierDeclStatement	int length = r_list_length ( kexts ) ;	611:1:15085:15119	594569	1	True				
ANR	594581	IdentifierDecl	length = r_list_length ( kexts )		594569	0					
ANR	594582	IdentifierDeclType	int		594569	0					
ANR	594583	Identifier	length		594569	1					
ANR	594584	AssignmentExpression	length = r_list_length ( kexts )		594569	2		=			
ANR	594585	Identifier	length		594569	0					
ANR	594586	CallExpression	r_list_length ( kexts )		594569	1					
ANR	594587	Callee	r_list_length		594569	0					
ANR	594588	Identifier	r_list_length		594569	0					
ANR	594589	ArgumentList	kexts		594569	1					
ANR	594590	Argument	kexts		594569	0					
ANR	594591	Identifier	kexts		594569	0					
ANR	594592	IfStatement	if ( ! length )		594569	2					
ANR	594593	Condition	! length	612:5:15126:15132	594569	0	True				
ANR	594594	UnaryOperationExpression	! length		594569	0					
ANR	594595	UnaryOperator	!		594569	0					
ANR	594596	Identifier	length		594569	1					
ANR	594597	CompoundStatement		7:14:86:86	594569	1					
ANR	594598	ReturnStatement	return NULL ;	613:2:15139:15150	594569	0	True				
ANR	594599	Identifier	NULL		594569	0					
ANR	594600	IdentifierDeclStatement	RKextIndex * index = R_NEW0 ( RKextIndex ) ;	616:1:15157:15196	594569	3	True				
ANR	594601	IdentifierDecl	* index = R_NEW0 ( RKextIndex )		594569	0					
ANR	594602	IdentifierDeclType	RKextIndex *		594569	0					
ANR	594603	Identifier	index		594569	1					
ANR	594604	AssignmentExpression	* index = R_NEW0 ( RKextIndex )		594569	2		=			
ANR	594605	Identifier	index		594569	0					
ANR	594606	CallExpression	R_NEW0 ( RKextIndex )		594569	1					
ANR	594607	Callee	R_NEW0		594569	0					
ANR	594608	Identifier	R_NEW0		594569	0					
ANR	594609	ArgumentList	RKextIndex		594569	1					
ANR	594610	Argument	RKextIndex		594569	0					
ANR	594611	Identifier	RKextIndex		594569	0					
ANR	594612	IfStatement	if ( ! index )		594569	4					
ANR	594613	Condition	! index	617:5:15203:15208	594569	0	True				
ANR	594614	UnaryOperationExpression	! index		594569	0					
ANR	594615	UnaryOperator	!		594569	0					
ANR	594616	Identifier	index		594569	1					
ANR	594617	CompoundStatement		12:13:162:162	594569	1					
ANR	594618	ReturnStatement	return NULL ;	618:2:15215:15226	594569	0	True				
ANR	594619	Identifier	NULL		594569	0					
ANR	594620	ExpressionStatement	index -> entries = malloc ( length * sizeof ( RKext * ) )	621:1:15233:15281	594569	5	True				
ANR	594621	AssignmentExpression	index -> entries = malloc ( length * sizeof ( RKext * ) )		594569	0		=			
ANR	594622	PtrMemberAccess	index -> entries		594569	0					
ANR	594623	Identifier	index		594569	0					
ANR	594624	Identifier	entries		594569	1					
ANR	594625	CallExpression	malloc ( length * sizeof ( RKext * ) )		594569	1					
ANR	594626	Callee	malloc		594569	0					
ANR	594627	Identifier	malloc		594569	0					
ANR	594628	ArgumentList	length * sizeof ( RKext * )		594569	1					
ANR	594629	Argument	length * sizeof ( RKext * )		594569	0					
ANR	594630	MultiplicativeExpression	length * sizeof ( RKext * )		594569	0		*			
ANR	594631	Identifier	length		594569	0					
ANR	594632	SizeofExpression	sizeof ( RKext * )		594569	1					
ANR	594633	Sizeof	sizeof		594569	0					
ANR	594634	SizeofOperand	RKext *		594569	1					
ANR	594635	IfStatement	if ( ! index -> entries )		594569	6					
ANR	594636	Condition	! index -> entries	622:5:15288:15302	594569	0	True				
ANR	594637	UnaryOperationExpression	! index -> entries		594569	0					
ANR	594638	UnaryOperator	!		594569	0					
ANR	594639	PtrMemberAccess	index -> entries		594569	1					
ANR	594640	Identifier	index		594569	0					
ANR	594641	Identifier	entries		594569	1					
ANR	594642	CompoundStatement		17:22:256:256	594569	1					
ANR	594643	ExpressionStatement	R_FREE ( index )	623:2:15309:15323	594569	0	True				
ANR	594644	CallExpression	R_FREE ( index )		594569	0					
ANR	594645	Callee	R_FREE		594569	0					
ANR	594646	Identifier	R_FREE		594569	0					
ANR	594647	ArgumentList	index		594569	1					
ANR	594648	Argument	index		594569	0					
ANR	594649	Identifier	index		594569	0					
ANR	594650	ReturnStatement	return NULL ;	624:2:15327:15338	594569	1	True				
ANR	594651	Identifier	NULL		594569	0					
ANR	594652	IdentifierDeclStatement	RListIter * iter ;	627:1:15345:15360	594569	7	True				
ANR	594653	IdentifierDecl	* iter		594569	0					
ANR	594654	IdentifierDeclType	RListIter *		594569	0					
ANR	594655	Identifier	iter		594569	1					
ANR	594656	IdentifierDeclStatement	RKext * kext ;	628:1:15363:15374	594569	8	True				
ANR	594657	IdentifierDecl	* kext		594569	0					
ANR	594658	IdentifierDeclType	RKext *		594569	0					
ANR	594659	Identifier	kext		594569	1					
ANR	594660	IdentifierDeclStatement	int i = 0 ;	629:1:15377:15386	594569	9	True				
ANR	594661	IdentifierDecl	i = 0		594569	0					
ANR	594662	IdentifierDeclType	int		594569	0					
ANR	594663	Identifier	i		594569	1					
ANR	594664	AssignmentExpression	i = 0		594569	2		=			
ANR	594665	Identifier	i		594569	0					
ANR	594666	PrimaryExpression	0		594569	1					
ANR	594667	Statement	r_list_foreach	630:1:15389:15402	594569	10	True				
ANR	594668	Statement	(	630:16:15404:15404	594569	11	True				
ANR	594669	Statement	kexts	630:17:15405:15409	594569	12	True				
ANR	594670	Statement	","	630:22:15410:15410	594569	13	True				
ANR	594671	Statement	iter	630:24:15412:15415	594569	14	True				
ANR	594672	Statement	","	630:28:15416:15416	594569	15	True				
ANR	594673	Statement	kext	630:30:15418:15421	594569	16	True				
ANR	594674	Statement	)	630:34:15422:15422	594569	17	True				
ANR	594675	CompoundStatement		25:36:375:375	594569	18					
ANR	594676	ExpressionStatement	index -> entries [ i ++ ] = kext	631:2:15428:15454	594569	0	True				
ANR	594677	AssignmentExpression	index -> entries [ i ++ ] = kext		594569	0		=			
ANR	594678	ArrayIndexing	index -> entries [ i ++ ]		594569	0					
ANR	594679	PtrMemberAccess	index -> entries		594569	0					
ANR	594680	Identifier	index		594569	0					
ANR	594681	Identifier	entries		594569	1					
ANR	594682	PostIncDecOperationExpression	i ++		594569	1					
ANR	594683	Identifier	i		594569	0					
ANR	594684	IncDec	++		594569	1					
ANR	594685	Identifier	kext		594569	1					
ANR	594686	ExpressionStatement	index -> length = i	633:1:15460:15477	594569	19	True				
ANR	594687	AssignmentExpression	index -> length = i		594569	0		=			
ANR	594688	PtrMemberAccess	index -> length		594569	0					
ANR	594689	Identifier	index		594569	0					
ANR	594690	Identifier	length		594569	1					
ANR	594691	Identifier	i		594569	1					
ANR	594692	ReturnStatement	return index ;	635:1:15481:15493	594569	20	True				
ANR	594693	Identifier	index		594569	0					
ANR	594694	ReturnType	static RKextIndex *		594569	1					
ANR	594695	Identifier	r_kext_index_new		594569	2					
ANR	594696	ParameterList	RList * kexts		594569	3					
ANR	594697	Parameter	RList * kexts	606:36:15034:15045	594569	0	True				
ANR	594698	ParameterType	RList *		594569	0					
ANR	594699	Identifier	kexts		594569	1					
ANR	594700	CFGEntryNode	ENTRY		594569		True				
ANR	594701	CFGExitNode	EXIT		594569		True				
ANR	594702	Symbol	index -> entries		594569						
ANR	594703	Symbol	malloc		594569						
ANR	594704	Symbol	NULL		594569						
ANR	594705	Symbol	kext		594569						
ANR	594706	Symbol	* index		594569						
ANR	594707	Symbol	length		594569						
ANR	594708	Symbol	index		594569						
ANR	594709	Symbol	iter		594569						
ANR	594710	Symbol	i		594569						
ANR	594711	Symbol	kexts		594569						
ANR	594712	Symbol	index -> length		594569						
ANR	594713	Symbol	R_NEW0		594569						
ANR	594714	Symbol	RKextIndex		594569						
ANR	594715	Symbol	* * index		594569						
ANR	594716	Symbol	r_list_length		594569						
ANR	594717	Symbol	* index -> entries		594569						
ANR	594718	Function	r_kext_index_free	638:0:15498:15736							
ANR	594719	FunctionDef	r_kext_index_free (RKextIndex * index)		594718	0					
ANR	594720	CompoundStatement		638:49:15547:15736	594718	0					
ANR	594721	IfStatement	if ( ! index )		594718	0					
ANR	594722	Condition	! index	639:5:15554:15559	594718	0	True				
ANR	594723	UnaryOperationExpression	! index		594718	0					
ANR	594724	UnaryOperator	!		594718	0					
ANR	594725	Identifier	index		594718	1					
ANR	594726	CompoundStatement		2:13:14:14	594718	1					
ANR	594727	ReturnStatement	return ;	640:2:15566:15572	594718	0	True				
ANR	594728	IdentifierDeclStatement	int i = 0 ;	643:1:15579:15588	594718	1	True				
ANR	594729	IdentifierDecl	i = 0		594718	0					
ANR	594730	IdentifierDeclType	int		594718	0					
ANR	594731	Identifier	i		594718	1					
ANR	594732	AssignmentExpression	i = 0		594718	2		=			
ANR	594733	Identifier	i		594718	0					
ANR	594734	PrimaryExpression	0		594718	1					
ANR	594735	IdentifierDeclStatement	RKext * kext ;	644:1:15591:15602	594718	2	True				
ANR	594736	IdentifierDecl	* kext		594718	0					
ANR	594737	IdentifierDeclType	RKext *		594718	0					
ANR	594738	Identifier	kext		594718	1					
ANR	594739	Statement	r_kext_index_foreach	645:1:15605:15624	594718	3	True				
ANR	594740	Statement	(	645:22:15626:15626	594718	4	True				
ANR	594741	Statement	index	645:23:15627:15631	594718	5	True				
ANR	594742	Statement	","	645:28:15632:15632	594718	6	True				
ANR	594743	Statement	i	645:30:15634:15634	594718	7	True				
ANR	594744	Statement	","	645:31:15635:15635	594718	8	True				
ANR	594745	Statement	kext	645:33:15637:15640	594718	9	True				
ANR	594746	Statement	)	645:37:15641:15641	594718	10	True				
ANR	594747	CompoundStatement		8:39:95:95	594718	11					
ANR	594748	ExpressionStatement	r_kext_free ( kext )	646:2:15647:15665	594718	0	True				
ANR	594749	CallExpression	r_kext_free ( kext )		594718	0					
ANR	594750	Callee	r_kext_free		594718	0					
ANR	594751	Identifier	r_kext_free		594718	0					
ANR	594752	ArgumentList	kext		594718	1					
ANR	594753	Argument	kext		594718	0					
ANR	594754	Identifier	kext		594718	0					
ANR	594755	ExpressionStatement	index -> entries [ i ] = NULL	647:2:15669:15693	594718	1	True				
ANR	594756	AssignmentExpression	index -> entries [ i ] = NULL		594718	0		=			
ANR	594757	ArrayIndexing	index -> entries [ i ]		594718	0					
ANR	594758	PtrMemberAccess	index -> entries		594718	0					
ANR	594759	Identifier	index		594718	0					
ANR	594760	Identifier	entries		594718	1					
ANR	594761	Identifier	i		594718	1					
ANR	594762	Identifier	NULL		594718	1					
ANR	594763	ExpressionStatement	index -> length = 0	650:1:15700:15717	594718	12	True				
ANR	594764	AssignmentExpression	index -> length = 0		594718	0		=			
ANR	594765	PtrMemberAccess	index -> length		594718	0					
ANR	594766	Identifier	index		594718	0					
ANR	594767	Identifier	length		594718	1					
ANR	594768	PrimaryExpression	0		594718	1					
ANR	594769	ExpressionStatement	R_FREE ( index )	651:1:15720:15734	594718	13	True				
ANR	594770	CallExpression	R_FREE ( index )		594718	0					
ANR	594771	Callee	R_FREE		594718	0					
ANR	594772	Identifier	R_FREE		594718	0					
ANR	594773	ArgumentList	index		594718	1					
ANR	594774	Argument	index		594718	0					
ANR	594775	Identifier	index		594718	0					
ANR	594776	ReturnType	static void		594718	1					
ANR	594777	Identifier	r_kext_index_free		594718	2					
ANR	594778	ParameterList	RKextIndex * index		594718	3					
ANR	594779	Parameter	RKextIndex * index	638:30:15528:15544	594718	0	True				
ANR	594780	ParameterType	RKextIndex *		594718	0					
ANR	594781	Identifier	index		594718	1					
ANR	594782	CFGEntryNode	ENTRY		594718		True				
ANR	594783	CFGExitNode	EXIT		594718		True				
ANR	594784	Symbol	index -> entries		594718						
ANR	594785	Symbol	index -> length		594718						
ANR	594786	Symbol	* i		594718						
ANR	594787	Symbol	NULL		594718						
ANR	594788	Symbol	kext		594718						
ANR	594789	Symbol	* index		594718						
ANR	594790	Symbol	index		594718						
ANR	594791	Symbol	i		594718						
ANR	594792	Symbol	* * index		594718						
ANR	594793	Symbol	* index -> entries		594718						
ANR	594794	Function	r_kext_index_vget	654:0:15739:16312							
ANR	594795	FunctionDef	"r_kext_index_vget (RKextIndex * index , ut64 vaddr)"		594794	0					
ANR	594796	CompoundStatement		654:63:15802:16312	594794	0					
ANR	594797	IdentifierDeclStatement	int imid ;	655:1:15805:15813	594794	0	True				
ANR	594798	IdentifierDecl	imid		594794	0					
ANR	594799	IdentifierDeclType	int		594794	0					
ANR	594800	Identifier	imid		594794	1					
ANR	594801	IdentifierDeclStatement	int imin = 0 ;	656:1:15816:15828	594794	1	True				
ANR	594802	IdentifierDecl	imin = 0		594794	0					
ANR	594803	IdentifierDeclType	int		594794	0					
ANR	594804	Identifier	imin		594794	1					
ANR	594805	AssignmentExpression	imin = 0		594794	2		=			
ANR	594806	Identifier	imin		594794	0					
ANR	594807	PrimaryExpression	0		594794	1					
ANR	594808	IdentifierDeclStatement	int imax = index -> length - 1 ;	657:1:15831:15859	594794	2	True				
ANR	594809	IdentifierDecl	imax = index -> length - 1		594794	0					
ANR	594810	IdentifierDeclType	int		594794	0					
ANR	594811	Identifier	imax		594794	1					
ANR	594812	AssignmentExpression	imax = index -> length - 1		594794	2		=			
ANR	594813	Identifier	imax		594794	0					
ANR	594814	AdditiveExpression	index -> length - 1		594794	1		-			
ANR	594815	PtrMemberAccess	index -> length		594794	0					
ANR	594816	Identifier	index		594794	0					
ANR	594817	Identifier	length		594794	1					
ANR	594818	PrimaryExpression	1		594794	1					
ANR	594819	WhileStatement	while ( imin < imax )		594794	3					
ANR	594820	Condition	imin < imax	659:8:15870:15880	594794	0	True				
ANR	594821	RelationalExpression	imin < imax		594794	0		<			
ANR	594822	Identifier	imin		594794	0					
ANR	594823	Identifier	imax		594794	1					
ANR	594824	CompoundStatement		8:2:112:147	594794	1					
ANR	594825	ExpressionStatement	imid = ( imin + imax ) / 2	660:2:15887:15911	594794	0	True				
ANR	594826	AssignmentExpression	imid = ( imin + imax ) / 2		594794	0		=			
ANR	594827	Identifier	imid		594794	0					
ANR	594828	MultiplicativeExpression	( imin + imax ) / 2		594794	1		/			
ANR	594829	AdditiveExpression	imin + imax		594794	0		+			
ANR	594830	Identifier	imin		594794	0					
ANR	594831	Identifier	imax		594794	1					
ANR	594832	PrimaryExpression	2		594794	1					
ANR	594833	IdentifierDeclStatement	RKext * entry = index -> entries [ imid ] ;	661:2:15915:15950	594794	1	True				
ANR	594834	IdentifierDecl	* entry = index -> entries [ imid ]		594794	0					
ANR	594835	IdentifierDeclType	RKext *		594794	0					
ANR	594836	Identifier	entry		594794	1					
ANR	594837	AssignmentExpression	* entry = index -> entries [ imid ]		594794	2		=			
ANR	594838	Identifier	entry		594794	0					
ANR	594839	ArrayIndexing	index -> entries [ imid ]		594794	1					
ANR	594840	PtrMemberAccess	index -> entries		594794	0					
ANR	594841	Identifier	index		594794	0					
ANR	594842	Identifier	entries		594794	1					
ANR	594843	Identifier	imid		594794	1					
ANR	594844	IfStatement	if ( ( entry -> vaddr + entry -> text_range . size ) <= vaddr || ( entry -> vaddr == vaddr && entry -> text_range . size == 0 ) )		594794	2					
ANR	594845	Condition	( entry -> vaddr + entry -> text_range . size ) <= vaddr || ( entry -> vaddr == vaddr && entry -> text_range . size == 0 )	662:6:15958:16063	594794	0	True				
ANR	594846	OrExpression	( entry -> vaddr + entry -> text_range . size ) <= vaddr || ( entry -> vaddr == vaddr && entry -> text_range . size == 0 )		594794	0		||			
ANR	594847	RelationalExpression	( entry -> vaddr + entry -> text_range . size ) <= vaddr		594794	0		<=			
ANR	594848	AdditiveExpression	entry -> vaddr + entry -> text_range . size		594794	0		+			
ANR	594849	PtrMemberAccess	entry -> vaddr		594794	0					
ANR	594850	Identifier	entry		594794	0					
ANR	594851	Identifier	vaddr		594794	1					
ANR	594852	MemberAccess	entry -> text_range . size		594794	1					
ANR	594853	PtrMemberAccess	entry -> text_range		594794	0					
ANR	594854	Identifier	entry		594794	0					
ANR	594855	Identifier	text_range		594794	1					
ANR	594856	Identifier	size		594794	1					
ANR	594857	Identifier	vaddr		594794	1					
ANR	594858	AndExpression	entry -> vaddr == vaddr && entry -> text_range . size == 0		594794	1		&&			
ANR	594859	EqualityExpression	entry -> vaddr == vaddr		594794	0		==			
ANR	594860	PtrMemberAccess	entry -> vaddr		594794	0					
ANR	594861	Identifier	entry		594794	0					
ANR	594862	Identifier	vaddr		594794	1					
ANR	594863	Identifier	vaddr		594794	1					
ANR	594864	EqualityExpression	entry -> text_range . size == 0		594794	1		==			
ANR	594865	MemberAccess	entry -> text_range . size		594794	0					
ANR	594866	PtrMemberAccess	entry -> text_range		594794	0					
ANR	594867	Identifier	entry		594794	0					
ANR	594868	Identifier	text_range		594794	1					
ANR	594869	Identifier	size		594794	1					
ANR	594870	PrimaryExpression	0		594794	1					
ANR	594871	CompoundStatement		9:114:263:263	594794	1					
ANR	594872	ExpressionStatement	imin = imid + 1	663:3:16071:16086	594794	0	True				
ANR	594873	AssignmentExpression	imin = imid + 1		594794	0		=			
ANR	594874	Identifier	imin		594794	0					
ANR	594875	AdditiveExpression	imid + 1		594794	1		+			
ANR	594876	Identifier	imid		594794	0					
ANR	594877	PrimaryExpression	1		594794	1					
ANR	594878	ElseStatement	else		594794	0					
ANR	594879	CompoundStatement		11:9:294:294	594794	0					
ANR	594880	ExpressionStatement	imax = imid	665:3:16102:16113	594794	0	True				
ANR	594881	AssignmentExpression	imax = imid		594794	0		=			
ANR	594882	Identifier	imax		594794	0					
ANR	594883	Identifier	imid		594794	1					
ANR	594884	IdentifierDeclStatement	RKext * minEntry = index -> entries [ imin ] ;	669:1:16124:16162	594794	4	True				
ANR	594885	IdentifierDecl	* minEntry = index -> entries [ imin ]		594794	0					
ANR	594886	IdentifierDeclType	RKext *		594794	0					
ANR	594887	Identifier	minEntry		594794	1					
ANR	594888	AssignmentExpression	* minEntry = index -> entries [ imin ]		594794	2		=			
ANR	594889	Identifier	minEntry		594794	0					
ANR	594890	ArrayIndexing	index -> entries [ imin ]		594794	1					
ANR	594891	PtrMemberAccess	index -> entries		594794	0					
ANR	594892	Identifier	index		594794	0					
ANR	594893	Identifier	entries		594794	1					
ANR	594894	Identifier	imin		594794	1					
ANR	594895	IfStatement	if ( ( imax == imin ) && ( minEntry -> vaddr <= vaddr ) && ( ( minEntry -> vaddr + minEntry -> text_range . size ) > vaddr ) )		594794	5					
ANR	594896	Condition	( imax == imin ) && ( minEntry -> vaddr <= vaddr ) && ( ( minEntry -> vaddr + minEntry -> text_range . size ) > vaddr )	670:5:16169:16271	594794	0	True				
ANR	594897	AndExpression	( imax == imin ) && ( minEntry -> vaddr <= vaddr ) && ( ( minEntry -> vaddr + minEntry -> text_range . size ) > vaddr )		594794	0		&&			
ANR	594898	EqualityExpression	imax == imin		594794	0		==			
ANR	594899	Identifier	imax		594794	0					
ANR	594900	Identifier	imin		594794	1					
ANR	594901	AndExpression	( minEntry -> vaddr <= vaddr ) && ( ( minEntry -> vaddr + minEntry -> text_range . size ) > vaddr )		594794	1		&&			
ANR	594902	RelationalExpression	minEntry -> vaddr <= vaddr		594794	0		<=			
ANR	594903	PtrMemberAccess	minEntry -> vaddr		594794	0					
ANR	594904	Identifier	minEntry		594794	0					
ANR	594905	Identifier	vaddr		594794	1					
ANR	594906	Identifier	vaddr		594794	1					
ANR	594907	RelationalExpression	( minEntry -> vaddr + minEntry -> text_range . size ) > vaddr		594794	1		>			
ANR	594908	AdditiveExpression	minEntry -> vaddr + minEntry -> text_range . size		594794	0		+			
ANR	594909	PtrMemberAccess	minEntry -> vaddr		594794	0					
ANR	594910	Identifier	minEntry		594794	0					
ANR	594911	Identifier	vaddr		594794	1					
ANR	594912	MemberAccess	minEntry -> text_range . size		594794	1					
ANR	594913	PtrMemberAccess	minEntry -> text_range		594794	0					
ANR	594914	Identifier	minEntry		594794	0					
ANR	594915	Identifier	text_range		594794	1					
ANR	594916	Identifier	size		594794	1					
ANR	594917	Identifier	vaddr		594794	1					
ANR	594918	CompoundStatement		17:110:471:471	594794	1					
ANR	594919	ReturnStatement	return minEntry ;	671:2:16278:16293	594794	0	True				
ANR	594920	Identifier	minEntry		594794	0					
ANR	594921	ReturnStatement	return NULL ;	673:1:16299:16310	594794	6	True				
ANR	594922	Identifier	NULL		594794	0					
ANR	594923	ReturnType	static RKext *		594794	1					
ANR	594924	Identifier	r_kext_index_vget		594794	2					
ANR	594925	ParameterList	"RKextIndex * index , ut64 vaddr"		594794	3					
ANR	594926	Parameter	RKextIndex * index	654:32:15771:15787	594794	0	True				
ANR	594927	ParameterType	RKextIndex *		594794	0					
ANR	594928	Identifier	index		594794	1					
ANR	594929	Parameter	ut64 vaddr	654:51:15790:15799	594794	1	True				
ANR	594930	ParameterType	ut64		594794	0					
ANR	594931	Identifier	vaddr		594794	1					
ANR	594932	CFGEntryNode	ENTRY		594794		True				
ANR	594933	CFGExitNode	EXIT		594794		True				
ANR	594934	Symbol	index -> entries		594794						
ANR	594935	Symbol	entry -> vaddr		594794						
ANR	594936	Symbol	* imin		594794						
ANR	594937	Symbol	minEntry		594794						
ANR	594938	Symbol	NULL		594794						
ANR	594939	Symbol	minEntry -> vaddr		594794						
ANR	594940	Symbol	* index		594794						
ANR	594941	Symbol	* minEntry		594794						
ANR	594942	Symbol	index		594794						
ANR	594943	Symbol	imax		594794						
ANR	594944	Symbol	* imid		594794						
ANR	594945	Symbol	vaddr		594794						
ANR	594946	Symbol	imid		594794						
ANR	594947	Symbol	index -> length		594794						
ANR	594948	Symbol	minEntry -> text_range		594794						
ANR	594949	Symbol	minEntry -> text_range . size		594794						
ANR	594950	Symbol	entry		594794						
ANR	594951	Symbol	entry -> text_range		594794						
ANR	594952	Symbol	imin		594794						
ANR	594953	Symbol	entry -> text_range . size		594794						
ANR	594954	Symbol	* * index		594794						
ANR	594955	Symbol	* index -> entries		594794						
ANR	594956	Symbol	* entry		594794						
ANR	594957	Function	create_kext_mach0	676:29:16344:16720							
ANR	594958	FunctionDef	"create_kext_mach0 (RKernelCacheObj * obj , RKext * kext)"		594957	0					
ANR	594959	CompoundStatement		676:82:16397:16720	594957	0					
ANR	594960	IdentifierDeclStatement	"RBuffer * buf = r_buf_new_slice ( obj -> cache_buf , kext -> range . offset , r_buf_size ( obj -> cache_buf ) - kext -> range . offset ) ;"	677:1:16400:16517	594957	0	True				
ANR	594961	IdentifierDecl	"* buf = r_buf_new_slice ( obj -> cache_buf , kext -> range . offset , r_buf_size ( obj -> cache_buf ) - kext -> range . offset )"		594957	0					
ANR	594962	IdentifierDeclType	RBuffer *		594957	0					
ANR	594963	Identifier	buf		594957	1					
ANR	594964	AssignmentExpression	"* buf = r_buf_new_slice ( obj -> cache_buf , kext -> range . offset , r_buf_size ( obj -> cache_buf ) - kext -> range . offset )"		594957	2		=			
ANR	594965	Identifier	buf		594957	0					
ANR	594966	CallExpression	"r_buf_new_slice ( obj -> cache_buf , kext -> range . offset , r_buf_size ( obj -> cache_buf ) - kext -> range . offset )"		594957	1					
ANR	594967	Callee	r_buf_new_slice		594957	0					
ANR	594968	Identifier	r_buf_new_slice		594957	0					
ANR	594969	ArgumentList	obj -> cache_buf		594957	1					
ANR	594970	Argument	obj -> cache_buf		594957	0					
ANR	594971	PtrMemberAccess	obj -> cache_buf		594957	0					
ANR	594972	Identifier	obj		594957	0					
ANR	594973	Identifier	cache_buf		594957	1					
ANR	594974	Argument	kext -> range . offset		594957	1					
ANR	594975	MemberAccess	kext -> range . offset		594957	0					
ANR	594976	PtrMemberAccess	kext -> range		594957	0					
ANR	594977	Identifier	kext		594957	0					
ANR	594978	Identifier	range		594957	1					
ANR	594979	Identifier	offset		594957	1					
ANR	594980	Argument	r_buf_size ( obj -> cache_buf ) - kext -> range . offset		594957	2					
ANR	594981	AdditiveExpression	r_buf_size ( obj -> cache_buf ) - kext -> range . offset		594957	0		-			
ANR	594982	CallExpression	r_buf_size ( obj -> cache_buf )		594957	0					
ANR	594983	Callee	r_buf_size		594957	0					
ANR	594984	Identifier	r_buf_size		594957	0					
ANR	594985	ArgumentList	obj -> cache_buf		594957	1					
ANR	594986	Argument	obj -> cache_buf		594957	0					
ANR	594987	PtrMemberAccess	obj -> cache_buf		594957	0					
ANR	594988	Identifier	obj		594957	0					
ANR	594989	Identifier	cache_buf		594957	1					
ANR	594990	MemberAccess	kext -> range . offset		594957	1					
ANR	594991	PtrMemberAccess	kext -> range		594957	0					
ANR	594992	Identifier	kext		594957	0					
ANR	594993	Identifier	range		594957	1					
ANR	594994	Identifier	offset		594957	1					
ANR	594995	Statement	struct	678:1:16520:16525	594957	1	True				
ANR	594996	Statement	MACH0_	678:8:16527:16532	594957	2	True				
ANR	594997	ExpressionStatement	( opts_t ) opts	678:14:16533:16546	594957	3	True				
ANR	594998	CastExpression	( opts_t ) opts		594957	0					
ANR	594999	CastTarget	opts_t		594957	0					
ANR	595000	Identifier	opts		594957	1					
ANR	595001	ExpressionStatement	opts . verbose = true	679:1:16549:16568	594957	4	True				
ANR	595002	AssignmentExpression	opts . verbose = true		594957	0		=			
ANR	595003	MemberAccess	opts . verbose		594957	0					
ANR	595004	Identifier	opts		594957	0					
ANR	595005	Identifier	verbose		594957	1					
ANR	595006	Identifier	true		594957	1					
ANR	595007	ExpressionStatement	opts . header_at = 0	680:1:16571:16589	594957	5	True				
ANR	595008	AssignmentExpression	opts . header_at = 0		594957	0		=			
ANR	595009	MemberAccess	opts . header_at		594957	0					
ANR	595010	Identifier	opts		594957	0					
ANR	595011	Identifier	header_at		594957	1					
ANR	595012	PrimaryExpression	0		594957	1					
ANR	595013	Statement	struct	681:1:16592:16597	594957	6	True				
ANR	595014	ExpressionStatement	"MACH0_ ( obj_t ) * mach0 = MACH0_ ( new_buf ) ( buf , & opts )"	681:8:16599:16650	594957	7	True				
ANR	595015	AssignmentExpression	"MACH0_ ( obj_t ) * mach0 = MACH0_ ( new_buf ) ( buf , & opts )"		594957	0		=			
ANR	595016	MultiplicativeExpression	MACH0_ ( obj_t ) * mach0		594957	0		*			
ANR	595017	CallExpression	MACH0_ ( obj_t )		594957	0					
ANR	595018	Callee	MACH0_		594957	0					
ANR	595019	Identifier	MACH0_		594957	0					
ANR	595020	ArgumentList	obj_t		594957	1					
ANR	595021	Argument	obj_t		594957	0					
ANR	595022	Identifier	obj_t		594957	0					
ANR	595023	Identifier	mach0		594957	1					
ANR	595024	CallExpression	"MACH0_ ( new_buf ) ( buf , & opts )"		594957	1					
ANR	595025	Callee	MACH0_ ( new_buf )		594957	0					
ANR	595026	CallExpression	MACH0_ ( new_buf )		594957	0					
ANR	595027	Callee	MACH0_		594957	0					
ANR	595028	Identifier	MACH0_		594957	0					
ANR	595029	ArgumentList	new_buf		594957	1					
ANR	595030	Argument	new_buf		594957	0					
ANR	595031	Identifier	new_buf		594957	0					
ANR	595032	ArgumentList	buf		594957	1					
ANR	595033	Argument	buf		594957	0					
ANR	595034	Identifier	buf		594957	0					
ANR	595035	Argument	& opts		594957	1					
ANR	595036	UnaryOperationExpression	& opts		594957	0					
ANR	595037	UnaryOperator	&		594957	0					
ANR	595038	Identifier	opts		594957	1					
ANR	595039	ExpressionStatement	r_buf_free ( buf )	682:1:16653:16669	594957	8	True				
ANR	595040	CallExpression	r_buf_free ( buf )		594957	0					
ANR	595041	Callee	r_buf_free		594957	0					
ANR	595042	Identifier	r_buf_free		594957	0					
ANR	595043	ArgumentList	buf		594957	1					
ANR	595044	Argument	buf		594957	0					
ANR	595045	Identifier	buf		594957	0					
ANR	595046	IfStatement	if ( ! mach0 )		594957	9					
ANR	595047	Condition	! mach0	683:5:16676:16681	594957	0	True				
ANR	595048	UnaryOperationExpression	! mach0		594957	0					
ANR	595049	UnaryOperator	!		594957	0					
ANR	595050	Identifier	mach0		594957	1					
ANR	595051	CompoundStatement		8:13:286:286	594957	1					
ANR	595052	ReturnStatement	return NULL ;	684:2:16688:16699	594957	0	True				
ANR	595053	Identifier	NULL		594957	0					
ANR	595054	ReturnStatement	return mach0 ;	687:1:16706:16718	594957	10	True				
ANR	595055	Identifier	mach0		594957	0					
ANR	595056	Identifier	create_kext_mach0		594957	1					
ANR	595057	ParameterList	"RKernelCacheObj * obj , RKext * kext"		594957	2					
ANR	595058	Parameter	RKernelCacheObj * obj	676:47:16362:16381	594957	0	True				
ANR	595059	ParameterType	RKernelCacheObj *		594957	0					
ANR	595060	Identifier	obj		594957	1					
ANR	595061	Parameter	RKext * kext	676:69:16384:16394	594957	1	True				
ANR	595062	ParameterType	RKext *		594957	0					
ANR	595063	Identifier	kext		594957	1					
ANR	595064	CFGEntryNode	ENTRY		594957		True				
ANR	595065	CFGExitNode	EXIT		594957		True				
ANR	595066	Symbol	* obj		594957						
ANR	595067	Symbol	NULL		594957						
ANR	595068	Symbol	kext		594957						
ANR	595069	Symbol	obj_t		594957						
ANR	595070	Symbol	kext -> range . offset		594957						
ANR	595071	Symbol	* kext		594957						
ANR	595072	Symbol	opts . header_at		594957						
ANR	595073	Symbol	MACH0_		594957						
ANR	595074	Symbol	kext -> range		594957						
ANR	595075	Symbol	buf		594957						
ANR	595076	Symbol	opts		594957						
ANR	595077	Symbol	new_buf		594957						
ANR	595078	Symbol	obj -> cache_buf		594957						
ANR	595079	Symbol	opts . verbose		594957						
ANR	595080	Symbol	& opts		594957						
ANR	595081	Symbol	obj		594957						
ANR	595082	Symbol	true		594957						
ANR	595083	Symbol	r_buf_new_slice		594957						
ANR	595084	Symbol	mach0		594957						
ANR	595085	Symbol	r_buf_size		594957						
ANR	595086	Function	entries	690:0:16723:17292							
ANR	595087	FunctionDef	entries (RBinFile * bf)		595086	0					
ANR	595088	CompoundStatement		690:36:16759:17292	595086	0					
ANR	595089	IdentifierDeclStatement	RList * ret ;	691:1:16762:16772	595086	0	True				
ANR	595090	IdentifierDecl	* ret		595086	0					
ANR	595091	IdentifierDeclType	RList *		595086	0					
ANR	595092	Identifier	ret		595086	1					
ANR	595093	IdentifierDeclStatement	RBinObject * obj = bf ? bf -> o : NULL ;	692:1:16775:16810	595086	1	True				
ANR	595094	IdentifierDecl	* obj = bf ? bf -> o : NULL		595086	0					
ANR	595095	IdentifierDeclType	RBinObject *		595086	0					
ANR	595096	Identifier	obj		595086	1					
ANR	595097	AssignmentExpression	* obj = bf ? bf -> o : NULL		595086	2		=			
ANR	595098	Identifier	obj		595086	0					
ANR	595099	ConditionalExpression	bf ? bf -> o : NULL		595086	1					
ANR	595100	Condition	bf		595086	0					
ANR	595101	Identifier	bf		595086	0					
ANR	595102	PtrMemberAccess	bf -> o		595086	1					
ANR	595103	Identifier	bf		595086	0					
ANR	595104	Identifier	o		595086	1					
ANR	595105	Identifier	NULL		595086	2					
ANR	595106	IfStatement	if ( ! obj || ! obj -> bin_obj || ! ( ret = r_list_newf ( free ) ) )		595086	2					
ANR	595107	Condition	! obj || ! obj -> bin_obj || ! ( ret = r_list_newf ( free ) )	694:5:16818:16869	595086	0	True				
ANR	595108	OrExpression	! obj || ! obj -> bin_obj || ! ( ret = r_list_newf ( free ) )		595086	0		||			
ANR	595109	UnaryOperationExpression	! obj		595086	0					
ANR	595110	UnaryOperator	!		595086	0					
ANR	595111	Identifier	obj		595086	1					
ANR	595112	OrExpression	! obj -> bin_obj || ! ( ret = r_list_newf ( free ) )		595086	1		||			
ANR	595113	UnaryOperationExpression	! obj -> bin_obj		595086	0					
ANR	595114	UnaryOperator	!		595086	0					
ANR	595115	PtrMemberAccess	obj -> bin_obj		595086	1					
ANR	595116	Identifier	obj		595086	0					
ANR	595117	Identifier	bin_obj		595086	1					
ANR	595118	UnaryOperationExpression	! ( ret = r_list_newf ( free ) )		595086	1					
ANR	595119	UnaryOperator	!		595086	0					
ANR	595120	AssignmentExpression	ret = r_list_newf ( free )		595086	1		=			
ANR	595121	Identifier	ret		595086	0					
ANR	595122	CallExpression	r_list_newf ( free )		595086	1					
ANR	595123	Callee	r_list_newf		595086	0					
ANR	595124	Identifier	r_list_newf		595086	0					
ANR	595125	ArgumentList	free		595086	1					
ANR	595126	Argument	free		595086	0					
ANR	595127	Identifier	free		595086	0					
ANR	595128	CompoundStatement		5:59:112:112	595086	1					
ANR	595129	ReturnStatement	return NULL ;	695:2:16876:16887	595086	0	True				
ANR	595130	Identifier	NULL		595086	0					
ANR	595131	IdentifierDeclStatement	RKernelCacheObj * kobj = ( RKernelCacheObj * ) obj -> bin_obj ;	698:1:16894:16949	595086	3	True				
ANR	595132	IdentifierDecl	* kobj = ( RKernelCacheObj * ) obj -> bin_obj		595086	0					
ANR	595133	IdentifierDeclType	RKernelCacheObj *		595086	0					
ANR	595134	Identifier	kobj		595086	1					
ANR	595135	AssignmentExpression	* kobj = ( RKernelCacheObj * ) obj -> bin_obj		595086	2		=			
ANR	595136	Identifier	kobj		595086	0					
ANR	595137	CastExpression	( RKernelCacheObj * ) obj -> bin_obj		595086	1					
ANR	595138	CastTarget	RKernelCacheObj *		595086	0					
ANR	595139	PtrMemberAccess	obj -> bin_obj		595086	1					
ANR	595140	Identifier	obj		595086	0					
ANR	595141	Identifier	bin_obj		595086	1					
ANR	595142	IdentifierDeclStatement	ut64 entry_vaddr = kobj -> mach0 -> entry ;	699:1:16952:16989	595086	4	True				
ANR	595143	IdentifierDecl	entry_vaddr = kobj -> mach0 -> entry		595086	0					
ANR	595144	IdentifierDeclType	ut64		595086	0					
ANR	595145	Identifier	entry_vaddr		595086	1					
ANR	595146	AssignmentExpression	entry_vaddr = kobj -> mach0 -> entry		595086	2		=			
ANR	595147	Identifier	entry_vaddr		595086	0					
ANR	595148	PtrMemberAccess	kobj -> mach0 -> entry		595086	1					
ANR	595149	PtrMemberAccess	kobj -> mach0		595086	0					
ANR	595150	Identifier	kobj		595086	0					
ANR	595151	Identifier	mach0		595086	1					
ANR	595152	Identifier	entry		595086	1					
ANR	595153	IfStatement	if ( kobj -> pa2va_exec <= entry_vaddr )		595086	5					
ANR	595154	Condition	kobj -> pa2va_exec <= entry_vaddr	700:5:16996:17026	595086	0	True				
ANR	595155	RelationalExpression	kobj -> pa2va_exec <= entry_vaddr		595086	0		<=			
ANR	595156	PtrMemberAccess	kobj -> pa2va_exec		595086	0					
ANR	595157	Identifier	kobj		595086	0					
ANR	595158	Identifier	pa2va_exec		595086	1					
ANR	595159	Identifier	entry_vaddr		595086	1					
ANR	595160	CompoundStatement		13:2:326:379	595086	1					
ANR	595161	IdentifierDeclStatement	ut64 entry_paddr = entry_vaddr - kobj -> pa2va_exec ;	701:2:17033:17082	595086	0	True				
ANR	595162	IdentifierDecl	entry_paddr = entry_vaddr - kobj -> pa2va_exec		595086	0					
ANR	595163	IdentifierDeclType	ut64		595086	0					
ANR	595164	Identifier	entry_paddr		595086	1					
ANR	595165	AssignmentExpression	entry_paddr = entry_vaddr - kobj -> pa2va_exec		595086	2		=			
ANR	595166	Identifier	entry_paddr		595086	0					
ANR	595167	AdditiveExpression	entry_vaddr - kobj -> pa2va_exec		595086	1		-			
ANR	595168	Identifier	entry_vaddr		595086	0					
ANR	595169	PtrMemberAccess	kobj -> pa2va_exec		595086	1					
ANR	595170	Identifier	kobj		595086	0					
ANR	595171	Identifier	pa2va_exec		595086	1					
ANR	595172	IdentifierDeclStatement	"RBinAddr * ba = newEntry ( entry_paddr , entry_vaddr , 0 ) ;"	702:2:17086:17139	595086	1	True				
ANR	595173	IdentifierDecl	"* ba = newEntry ( entry_paddr , entry_vaddr , 0 )"		595086	0					
ANR	595174	IdentifierDeclType	RBinAddr *		595086	0					
ANR	595175	Identifier	ba		595086	1					
ANR	595176	AssignmentExpression	"* ba = newEntry ( entry_paddr , entry_vaddr , 0 )"		595086	2		=			
ANR	595177	Identifier	ba		595086	0					
ANR	595178	CallExpression	"newEntry ( entry_paddr , entry_vaddr , 0 )"		595086	1					
ANR	595179	Callee	newEntry		595086	0					
ANR	595180	Identifier	newEntry		595086	0					
ANR	595181	ArgumentList	entry_paddr		595086	1					
ANR	595182	Argument	entry_paddr		595086	0					
ANR	595183	Identifier	entry_paddr		595086	0					
ANR	595184	Argument	entry_vaddr		595086	1					
ANR	595185	Identifier	entry_vaddr		595086	0					
ANR	595186	Argument	0		595086	2					
ANR	595187	PrimaryExpression	0		595086	0					
ANR	595188	IfStatement	if ( ba )		595086	2					
ANR	595189	Condition	ba	703:6:17147:17148	595086	0	True				
ANR	595190	Identifier	ba		595086	0					
ANR	595191	CompoundStatement		14:10:391:391	595086	1					
ANR	595192	ExpressionStatement	"r_list_append ( ret , ba )"	704:3:17156:17179	595086	0	True				
ANR	595193	CallExpression	"r_list_append ( ret , ba )"		595086	0					
ANR	595194	Callee	r_list_append		595086	0					
ANR	595195	Identifier	r_list_append		595086	0					
ANR	595196	ArgumentList	ret		595086	1					
ANR	595197	Argument	ret		595086	0					
ANR	595198	Identifier	ret		595086	0					
ANR	595199	Argument	ba		595086	1					
ANR	595200	Identifier	ba		595086	0					
ANR	595201	ExpressionStatement	"process_constructors ( kobj , kobj -> mach0 , ret , 0 , true , R_K_CONSTRUCTOR_TO_ENTRY , NULL )"	708:1:17190:17276	595086	6	True				
ANR	595202	CallExpression	"process_constructors ( kobj , kobj -> mach0 , ret , 0 , true , R_K_CONSTRUCTOR_TO_ENTRY , NULL )"		595086	0					
ANR	595203	Callee	process_constructors		595086	0					
ANR	595204	Identifier	process_constructors		595086	0					
ANR	595205	ArgumentList	kobj		595086	1					
ANR	595206	Argument	kobj		595086	0					
ANR	595207	Identifier	kobj		595086	0					
ANR	595208	Argument	kobj -> mach0		595086	1					
ANR	595209	PtrMemberAccess	kobj -> mach0		595086	0					
ANR	595210	Identifier	kobj		595086	0					
ANR	595211	Identifier	mach0		595086	1					
ANR	595212	Argument	ret		595086	2					
ANR	595213	Identifier	ret		595086	0					
ANR	595214	Argument	0		595086	3					
ANR	595215	PrimaryExpression	0		595086	0					
ANR	595216	Argument	true		595086	4					
ANR	595217	Identifier	true		595086	0					
ANR	595218	Argument	R_K_CONSTRUCTOR_TO_ENTRY		595086	5					
ANR	595219	Identifier	R_K_CONSTRUCTOR_TO_ENTRY		595086	0					
ANR	595220	Argument	NULL		595086	6					
ANR	595221	Identifier	NULL		595086	0					
ANR	595222	ReturnStatement	return ret ;	710:1:17280:17290	595086	7	True				
ANR	595223	Identifier	ret		595086	0					
ANR	595224	ReturnType	static RList *		595086	1					
ANR	595225	Identifier	entries		595086	2					
ANR	595226	ParameterList	RBinFile * bf		595086	3					
ANR	595227	Parameter	RBinFile * bf	690:22:16745:16756	595086	0	True				
ANR	595228	ParameterType	RBinFile *		595086	0					
ANR	595229	Identifier	bf		595086	1					
ANR	595230	CFGEntryNode	ENTRY		595086		True				
ANR	595231	CFGExitNode	EXIT		595086		True				
ANR	595232	Symbol	ret		595086						
ANR	595233	Symbol	* kobj -> mach0		595086						
ANR	595234	Symbol	* obj		595086						
ANR	595235	Symbol	* * kobj		595086						
ANR	595236	Symbol	* kobj		595086						
ANR	595237	Symbol	NULL		595086						
ANR	595238	Symbol	entry_paddr		595086						
ANR	595239	Symbol	bf		595086						
ANR	595240	Symbol	r_list_newf		595086						
ANR	595241	Symbol	* bf		595086						
ANR	595242	Symbol	kobj -> mach0 -> entry		595086						
ANR	595243	Symbol	kobj -> mach0		595086						
ANR	595244	Symbol	R_K_CONSTRUCTOR_TO_ENTRY		595086						
ANR	595245	Symbol	bf -> o		595086						
ANR	595246	Symbol	newEntry		595086						
ANR	595247	Symbol	obj		595086						
ANR	595248	Symbol	entry_vaddr		595086						
ANR	595249	Symbol	kobj -> pa2va_exec		595086						
ANR	595250	Symbol	true		595086						
ANR	595251	Symbol	obj -> bin_obj		595086						
ANR	595252	Symbol	free		595086						
ANR	595253	Symbol	kobj		595086						
ANR	595254	Symbol	ba		595086						
ANR	595255	Function	process_kmod_init_term	713:0:17295:18682							
ANR	595256	FunctionDef	"process_kmod_init_term (RKernelCacheObj * obj , RKext * kext , RList * ret , ut64 * * inits , ut64 * * terms)"		595255	0					
ANR	595257	CompoundStatement		713:110:17405:18682	595255	0					
ANR	595258	IfStatement	if ( ! * inits || ! * terms )		595255	0					
ANR	595259	Condition	! * inits || ! * terms	714:5:17412:17429	595255	0	True				
ANR	595260	OrExpression	! * inits || ! * terms		595255	0		||			
ANR	595261	UnaryOperationExpression	! * inits		595255	0					
ANR	595262	UnaryOperator	!		595255	0					
ANR	595263	UnaryOperationExpression	* inits		595255	1					
ANR	595264	UnaryOperator	*		595255	0					
ANR	595265	Identifier	inits		595255	1					
ANR	595266	UnaryOperationExpression	! * terms		595255	1					
ANR	595267	UnaryOperator	!		595255	0					
ANR	595268	UnaryOperationExpression	* terms		595255	1					
ANR	595269	UnaryOperator	*		595255	0					
ANR	595270	Identifier	terms		595255	1					
ANR	595271	CompoundStatement		8:2:140:149	595255	1					
ANR	595272	IdentifierDeclStatement	struct section_t * sections = NULL ;	715:2:17436:17469	595255	0	True				
ANR	595273	IdentifierDecl	* sections = NULL		595255	0					
ANR	595274	IdentifierDeclType	struct section_t *		595255	0					
ANR	595275	Identifier	sections		595255	1					
ANR	595276	AssignmentExpression	* sections = NULL		595255	2		=			
ANR	595277	Identifier	NULL		595255	0					
ANR	595278	Identifier	NULL		595255	1					
ANR	595279	IfStatement	if ( ! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) ) )		595255	1					
ANR	595280	Condition	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )	716:6:17477:17523	595255	0	True				
ANR	595281	UnaryOperationExpression	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )		595255	0					
ANR	595282	UnaryOperator	!		595255	0					
ANR	595283	AssignmentExpression	sections = MACH0_ ( get_sections ) ( obj -> mach0 )		595255	1		=			
ANR	595284	Identifier	sections		595255	0					
ANR	595285	CallExpression	MACH0_ ( get_sections ) ( obj -> mach0 )		595255	1					
ANR	595286	Callee	MACH0_ ( get_sections )		595255	0					
ANR	595287	CallExpression	MACH0_ ( get_sections )		595255	0					
ANR	595288	Callee	MACH0_		595255	0					
ANR	595289	Identifier	MACH0_		595255	0					
ANR	595290	ArgumentList	get_sections		595255	1					
ANR	595291	Argument	get_sections		595255	0					
ANR	595292	Identifier	get_sections		595255	0					
ANR	595293	ArgumentList	obj -> mach0		595255	1					
ANR	595294	Argument	obj -> mach0		595255	0					
ANR	595295	PtrMemberAccess	obj -> mach0		595255	0					
ANR	595296	Identifier	obj		595255	0					
ANR	595297	Identifier	mach0		595255	1					
ANR	595298	CompoundStatement		4:55:120:120	595255	1					
ANR	595299	ReturnStatement	return ;	717:3:17531:17537	595255	0	True				
ANR	595300	IdentifierDeclStatement	int i = 0 ;	720:2:17546:17555	595255	2	True				
ANR	595301	IdentifierDecl	i = 0		595255	0					
ANR	595302	IdentifierDeclType	int		595255	0					
ANR	595303	Identifier	i		595255	1					
ANR	595304	AssignmentExpression	i = 0		595255	2		=			
ANR	595305	Identifier	i		595255	0					
ANR	595306	PrimaryExpression	0		595255	1					
ANR	595307	ForStatement	for ( ; ! sections [ i ] . last ; i ++ )		595255	3					
ANR	595308	Condition	! sections [ i ] . last	721:9:17566:17582	595255	0	True				
ANR	595309	UnaryOperationExpression	! sections [ i ] . last		595255	0					
ANR	595310	UnaryOperator	!		595255	0					
ANR	595311	MemberAccess	sections [ i ] . last		595255	1					
ANR	595312	ArrayIndexing	sections [ i ]		595255	0					
ANR	595313	Identifier	sections		595255	0					
ANR	595314	Identifier	i		595255	1					
ANR	595315	Identifier	last		595255	1					
ANR	595316	PostIncDecOperationExpression	i ++	721:28:17585:17587	595255	1	True				
ANR	595317	Identifier	i		595255	0					
ANR	595318	IncDec	++		595255	1					
ANR	595319	CompoundStatement		41:3:883:895	595255	2					
ANR	595320	IfStatement	if ( sections [ i ] . size == 0 )		595255	0					
ANR	595321	Condition	sections [ i ] . size == 0	722:7:17599:17619	595255	0	True				
ANR	595322	EqualityExpression	sections [ i ] . size == 0		595255	0		==			
ANR	595323	MemberAccess	sections [ i ] . size		595255	0					
ANR	595324	ArrayIndexing	sections [ i ]		595255	0					
ANR	595325	Identifier	sections		595255	0					
ANR	595326	Identifier	i		595255	1					
ANR	595327	Identifier	size		595255	1					
ANR	595328	PrimaryExpression	0		595255	1					
ANR	595329	CompoundStatement		10:30:216:216	595255	1					
ANR	595330	ContinueStatement	continue ;	723:4:17628:17636	595255	0	True				
ANR	595331	IdentifierDeclStatement	ut64 start_paddr = 0 ;	726:3:17647:17667	595255	1	True				
ANR	595332	IdentifierDecl	start_paddr = 0		595255	0					
ANR	595333	IdentifierDeclType	ut64		595255	0					
ANR	595334	Identifier	start_paddr		595255	1					
ANR	595335	AssignmentExpression	start_paddr = 0		595255	2		=			
ANR	595336	Identifier	start_paddr		595255	0					
ANR	595337	PrimaryExpression	0		595255	1					
ANR	595338	IdentifierDeclStatement	ut64 * target = NULL ;	727:3:17672:17691	595255	2	True				
ANR	595339	IdentifierDecl	* target = NULL		595255	0					
ANR	595340	IdentifierDeclType	ut64 *		595255	0					
ANR	595341	Identifier	target		595255	1					
ANR	595342	AssignmentExpression	* target = NULL		595255	2		=			
ANR	595343	Identifier	NULL		595255	0					
ANR	595344	Identifier	NULL		595255	1					
ANR	595345	IdentifierDeclStatement	int n_ptrs = 0 ;	728:3:17696:17710	595255	3	True				
ANR	595346	IdentifierDecl	n_ptrs = 0		595255	0					
ANR	595347	IdentifierDeclType	int		595255	0					
ANR	595348	Identifier	n_ptrs		595255	1					
ANR	595349	AssignmentExpression	n_ptrs = 0		595255	2		=			
ANR	595350	Identifier	n_ptrs		595255	0					
ANR	595351	PrimaryExpression	0		595255	1					
ANR	595352	IfStatement	"if ( ! * inits && strstr ( sections [ i ] . name , ""__kmod_init"" ) )"		595255	4					
ANR	595353	Condition	"! * inits && strstr ( sections [ i ] . name , ""__kmod_init"" )"	730:7:17720:17770	595255	0	True				
ANR	595354	AndExpression	"! * inits && strstr ( sections [ i ] . name , ""__kmod_init"" )"		595255	0		&&			
ANR	595355	UnaryOperationExpression	! * inits		595255	0					
ANR	595356	UnaryOperator	!		595255	0					
ANR	595357	UnaryOperationExpression	* inits		595255	1					
ANR	595358	UnaryOperator	*		595255	0					
ANR	595359	Identifier	inits		595255	1					
ANR	595360	CallExpression	"strstr ( sections [ i ] . name , ""__kmod_init"" )"		595255	1					
ANR	595361	Callee	strstr		595255	0					
ANR	595362	Identifier	strstr		595255	0					
ANR	595363	ArgumentList	sections [ i ] . name		595255	1					
ANR	595364	Argument	sections [ i ] . name		595255	0					
ANR	595365	MemberAccess	sections [ i ] . name		595255	0					
ANR	595366	ArrayIndexing	sections [ i ]		595255	0					
ANR	595367	Identifier	sections		595255	0					
ANR	595368	Identifier	i		595255	1					
ANR	595369	Identifier	name		595255	1					
ANR	595370	Argument	"""__kmod_init"""		595255	1					
ANR	595371	PrimaryExpression	"""__kmod_init"""		595255	0					
ANR	595372	CompoundStatement		19:4:373:407	595255	1					
ANR	595373	IdentifierDeclStatement	int n_inits = sections [ i ] . size / 8 ;	731:4:17779:17813	595255	0	True				
ANR	595374	IdentifierDecl	n_inits = sections [ i ] . size / 8		595255	0					
ANR	595375	IdentifierDeclType	int		595255	0					
ANR	595376	Identifier	n_inits		595255	1					
ANR	595377	AssignmentExpression	n_inits = sections [ i ] . size / 8		595255	2		=			
ANR	595378	Identifier	n_inits		595255	0					
ANR	595379	MultiplicativeExpression	sections [ i ] . size / 8		595255	1		/			
ANR	595380	MemberAccess	sections [ i ] . size		595255	0					
ANR	595381	ArrayIndexing	sections [ i ]		595255	0					
ANR	595382	Identifier	sections		595255	0					
ANR	595383	Identifier	i		595255	1					
ANR	595384	Identifier	size		595255	1					
ANR	595385	PrimaryExpression	8		595255	1					
ANR	595386	IfStatement	if ( n_inits <= 0 )		595255	1					
ANR	595387	Condition	n_inits <= 0	732:8:17823:17834	595255	0	True				
ANR	595388	RelationalExpression	n_inits <= 0		595255	0		<=			
ANR	595389	Identifier	n_inits		595255	0					
ANR	595390	PrimaryExpression	0		595255	1					
ANR	595391	CompoundStatement		20:22:431:431	595255	1					
ANR	595392	ContinueStatement	continue ;	733:5:17844:17852	595255	0	True				
ANR	595393	ExpressionStatement	"* inits = R_NEWS0 ( ut64 , n_inits + 1 )"	735:4:17864:17900	595255	2	True				
ANR	595394	AssignmentExpression	"* inits = R_NEWS0 ( ut64 , n_inits + 1 )"		595255	0		=			
ANR	595395	UnaryOperationExpression	* inits		595255	0					
ANR	595396	UnaryOperator	*		595255	0					
ANR	595397	Identifier	inits		595255	1					
ANR	595398	CallExpression	"R_NEWS0 ( ut64 , n_inits + 1 )"		595255	1					
ANR	595399	Callee	R_NEWS0		595255	0					
ANR	595400	Identifier	R_NEWS0		595255	0					
ANR	595401	ArgumentList	ut64		595255	1					
ANR	595402	Argument	ut64		595255	0					
ANR	595403	Identifier	ut64		595255	0					
ANR	595404	Argument	n_inits + 1		595255	1					
ANR	595405	AdditiveExpression	n_inits + 1		595255	0		+			
ANR	595406	Identifier	n_inits		595255	0					
ANR	595407	PrimaryExpression	1		595255	1					
ANR	595408	ExpressionStatement	target = * inits	736:4:17906:17921	595255	3	True				
ANR	595409	AssignmentExpression	target = * inits		595255	0		=			
ANR	595410	Identifier	target		595255	0					
ANR	595411	UnaryOperationExpression	* inits		595255	1					
ANR	595412	UnaryOperator	*		595255	0					
ANR	595413	Identifier	inits		595255	1					
ANR	595414	ExpressionStatement	n_ptrs = n_inits	737:4:17927:17943	595255	4	True				
ANR	595415	AssignmentExpression	n_ptrs = n_inits		595255	0		=			
ANR	595416	Identifier	n_ptrs		595255	0					
ANR	595417	Identifier	n_inits		595255	1					
ANR	595418	IfStatement	"if ( ! * terms && strstr ( sections [ i ] . name , ""__kmod_term"" ) )"		595255	5					
ANR	595419	Condition	"! * terms && strstr ( sections [ i ] . name , ""__kmod_term"" )"	739:7:17957:18007	595255	0	True				
ANR	595420	AndExpression	"! * terms && strstr ( sections [ i ] . name , ""__kmod_term"" )"		595255	0		&&			
ANR	595421	UnaryOperationExpression	! * terms		595255	0					
ANR	595422	UnaryOperator	!		595255	0					
ANR	595423	UnaryOperationExpression	* terms		595255	1					
ANR	595424	UnaryOperator	*		595255	0					
ANR	595425	Identifier	terms		595255	1					
ANR	595426	CallExpression	"strstr ( sections [ i ] . name , ""__kmod_term"" )"		595255	1					
ANR	595427	Callee	strstr		595255	0					
ANR	595428	Identifier	strstr		595255	0					
ANR	595429	ArgumentList	sections [ i ] . name		595255	1					
ANR	595430	Argument	sections [ i ] . name		595255	0					
ANR	595431	MemberAccess	sections [ i ] . name		595255	0					
ANR	595432	ArrayIndexing	sections [ i ]		595255	0					
ANR	595433	Identifier	sections		595255	0					
ANR	595434	Identifier	i		595255	1					
ANR	595435	Identifier	name		595255	1					
ANR	595436	Argument	"""__kmod_term"""		595255	1					
ANR	595437	PrimaryExpression	"""__kmod_term"""		595255	0					
ANR	595438	CompoundStatement		28:4:610:644	595255	1					
ANR	595439	IdentifierDeclStatement	int n_terms = sections [ i ] . size / 8 ;	740:4:18016:18050	595255	0	True				
ANR	595440	IdentifierDecl	n_terms = sections [ i ] . size / 8		595255	0					
ANR	595441	IdentifierDeclType	int		595255	0					
ANR	595442	Identifier	n_terms		595255	1					
ANR	595443	AssignmentExpression	n_terms = sections [ i ] . size / 8		595255	2		=			
ANR	595444	Identifier	n_terms		595255	0					
ANR	595445	MultiplicativeExpression	sections [ i ] . size / 8		595255	1		/			
ANR	595446	MemberAccess	sections [ i ] . size		595255	0					
ANR	595447	ArrayIndexing	sections [ i ]		595255	0					
ANR	595448	Identifier	sections		595255	0					
ANR	595449	Identifier	i		595255	1					
ANR	595450	Identifier	size		595255	1					
ANR	595451	PrimaryExpression	8		595255	1					
ANR	595452	IfStatement	if ( n_terms <= 0 )		595255	1					
ANR	595453	Condition	n_terms <= 0	741:8:18060:18071	595255	0	True				
ANR	595454	RelationalExpression	n_terms <= 0		595255	0		<=			
ANR	595455	Identifier	n_terms		595255	0					
ANR	595456	PrimaryExpression	0		595255	1					
ANR	595457	CompoundStatement		29:22:668:668	595255	1					
ANR	595458	ContinueStatement	continue ;	742:5:18081:18089	595255	0	True				
ANR	595459	ExpressionStatement	"* terms = R_NEWS0 ( ut64 , n_terms + 1 )"	744:4:18101:18137	595255	2	True				
ANR	595460	AssignmentExpression	"* terms = R_NEWS0 ( ut64 , n_terms + 1 )"		595255	0		=			
ANR	595461	UnaryOperationExpression	* terms		595255	0					
ANR	595462	UnaryOperator	*		595255	0					
ANR	595463	Identifier	terms		595255	1					
ANR	595464	CallExpression	"R_NEWS0 ( ut64 , n_terms + 1 )"		595255	1					
ANR	595465	Callee	R_NEWS0		595255	0					
ANR	595466	Identifier	R_NEWS0		595255	0					
ANR	595467	ArgumentList	ut64		595255	1					
ANR	595468	Argument	ut64		595255	0					
ANR	595469	Identifier	ut64		595255	0					
ANR	595470	Argument	n_terms + 1		595255	1					
ANR	595471	AdditiveExpression	n_terms + 1		595255	0		+			
ANR	595472	Identifier	n_terms		595255	0					
ANR	595473	PrimaryExpression	1		595255	1					
ANR	595474	ExpressionStatement	target = * terms	745:4:18143:18158	595255	3	True				
ANR	595475	AssignmentExpression	target = * terms		595255	0		=			
ANR	595476	Identifier	target		595255	0					
ANR	595477	UnaryOperationExpression	* terms		595255	1					
ANR	595478	UnaryOperator	*		595255	0					
ANR	595479	Identifier	terms		595255	1					
ANR	595480	ExpressionStatement	n_ptrs = n_terms	746:4:18164:18180	595255	4	True				
ANR	595481	AssignmentExpression	n_ptrs = n_terms		595255	0		=			
ANR	595482	Identifier	n_ptrs		595255	0					
ANR	595483	Identifier	n_terms		595255	1					
ANR	595484	IfStatement	if ( ! target || ! n_ptrs )		595255	6					
ANR	595485	Condition	! target || ! n_ptrs	748:7:18194:18211	595255	0	True				
ANR	595486	OrExpression	! target || ! n_ptrs		595255	0		||			
ANR	595487	UnaryOperationExpression	! target		595255	0					
ANR	595488	UnaryOperator	!		595255	0					
ANR	595489	Identifier	target		595255	1					
ANR	595490	UnaryOperationExpression	! n_ptrs		595255	1					
ANR	595491	UnaryOperator	!		595255	0					
ANR	595492	Identifier	n_ptrs		595255	1					
ANR	595493	CompoundStatement		36:27:808:808	595255	1					
ANR	595494	ContinueStatement	continue ;	749:4:18220:18228	595255	0	True				
ANR	595495	ExpressionStatement	start_paddr = sections [ i ] . offset	751:3:18238:18270	595255	7	True				
ANR	595496	AssignmentExpression	start_paddr = sections [ i ] . offset		595255	0		=			
ANR	595497	Identifier	start_paddr		595255	0					
ANR	595498	MemberAccess	sections [ i ] . offset		595255	1					
ANR	595499	ArrayIndexing	sections [ i ]		595255	0					
ANR	595500	Identifier	sections		595255	0					
ANR	595501	Identifier	i		595255	1					
ANR	595502	Identifier	offset		595255	1					
ANR	595503	IdentifierDeclStatement	int j = 0 ;	752:3:18275:18284	595255	8	True				
ANR	595504	IdentifierDecl	j = 0		595255	0					
ANR	595505	IdentifierDeclType	int		595255	0					
ANR	595506	Identifier	j		595255	1					
ANR	595507	AssignmentExpression	j = 0		595255	2		=			
ANR	595508	Identifier	j		595255	0					
ANR	595509	PrimaryExpression	0		595255	1					
ANR	595510	IdentifierDeclStatement	ut8 bytes [ 8 ] ;	753:3:18289:18301	595255	9	True				
ANR	595511	IdentifierDecl	bytes [ 8 ]		595255	0					
ANR	595512	IdentifierDeclType	ut8 [ 8 ]		595255	0					
ANR	595513	Identifier	bytes		595255	1					
ANR	595514	PrimaryExpression	8		595255	2					
ANR	595515	ForStatement	for ( ; j < n_ptrs ; j ++ )		595255	10					
ANR	595516	Condition	j < n_ptrs	754:10:18313:18322	595255	0	True				
ANR	595517	RelationalExpression	j < n_ptrs		595255	0		<			
ANR	595518	Identifier	j		595255	0					
ANR	595519	Identifier	n_ptrs		595255	1					
ANR	595520	PostIncDecOperationExpression	j ++	754:22:18325:18327	595255	1	True				
ANR	595521	Identifier	j		595255	0					
ANR	595522	IncDec	++		595255	1					
ANR	595523	CompoundStatement		42:27:924:924	595255	2					
ANR	595524	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , start_paddr + j * 8 , bytes , 8 ) < 8 )"		595255	0					
ANR	595525	Condition	"r_buf_read_at ( obj -> cache_buf , start_paddr + j * 8 , bytes , 8 ) < 8"	755:8:18340:18404	595255	0	True				
ANR	595526	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , start_paddr + j * 8 , bytes , 8 ) < 8"		595255	0		<			
ANR	595527	CallExpression	"r_buf_read_at ( obj -> cache_buf , start_paddr + j * 8 , bytes , 8 )"		595255	0					
ANR	595528	Callee	r_buf_read_at		595255	0					
ANR	595529	Identifier	r_buf_read_at		595255	0					
ANR	595530	ArgumentList	obj -> cache_buf		595255	1					
ANR	595531	Argument	obj -> cache_buf		595255	0					
ANR	595532	PtrMemberAccess	obj -> cache_buf		595255	0					
ANR	595533	Identifier	obj		595255	0					
ANR	595534	Identifier	cache_buf		595255	1					
ANR	595535	Argument	start_paddr + j * 8		595255	1					
ANR	595536	AdditiveExpression	start_paddr + j * 8		595255	0		+			
ANR	595537	Identifier	start_paddr		595255	0					
ANR	595538	MultiplicativeExpression	j * 8		595255	1		*			
ANR	595539	Identifier	j		595255	0					
ANR	595540	PrimaryExpression	8		595255	1					
ANR	595541	Argument	bytes		595255	2					
ANR	595542	Identifier	bytes		595255	0					
ANR	595543	Argument	8		595255	3					
ANR	595544	PrimaryExpression	8		595255	0					
ANR	595545	PrimaryExpression	8		595255	1					
ANR	595546	CompoundStatement		43:75:1001:1001	595255	1					
ANR	595547	BreakStatement	break ;	756:5:18414:18419	595255	0	True				
ANR	595548	ExpressionStatement	target [ j ] = K_RPTR ( bytes )	758:4:18431:18457	595255	1	True				
ANR	595549	AssignmentExpression	target [ j ] = K_RPTR ( bytes )		595255	0		=			
ANR	595550	ArrayIndexing	target [ j ]		595255	0					
ANR	595551	Identifier	target		595255	0					
ANR	595552	Identifier	j		595255	1					
ANR	595553	CallExpression	K_RPTR ( bytes )		595255	1					
ANR	595554	Callee	K_RPTR		595255	0					
ANR	595555	Identifier	K_RPTR		595255	0					
ANR	595556	ArgumentList	bytes		595255	1					
ANR	595557	Argument	bytes		595255	0					
ANR	595558	Identifier	bytes		595255	0					
ANR	595559	ExpressionStatement	target [ j ] = 0	760:3:18467:18480	595255	11	True				
ANR	595560	AssignmentExpression	target [ j ] = 0		595255	0		=			
ANR	595561	ArrayIndexing	target [ j ]		595255	0					
ANR	595562	Identifier	target		595255	0					
ANR	595563	Identifier	j		595255	1					
ANR	595564	PrimaryExpression	0		595255	1					
ANR	595565	ExpressionStatement	R_FREE ( sections )	763:2:18489:18506	595255	4	True				
ANR	595566	CallExpression	R_FREE ( sections )		595255	0					
ANR	595567	Callee	R_FREE		595255	0					
ANR	595568	Identifier	R_FREE		595255	0					
ANR	595569	ArgumentList	sections		595255	1					
ANR	595570	Argument	sections		595255	0					
ANR	595571	Identifier	sections		595255	0					
ANR	595572	IfStatement	if ( * inits )		595255	1					
ANR	595573	Condition	* inits	766:5:18517:18522	595255	0	True				
ANR	595574	UnaryOperationExpression	* inits		595255	0					
ANR	595575	UnaryOperator	*		595255	0					
ANR	595576	Identifier	inits		595255	1					
ANR	595577	CompoundStatement		54:13:1119:1119	595255	1					
ANR	595578	ExpressionStatement	"create_initterm_syms ( kext , ret , R_BIN_ENTRY_TYPE_INIT , * inits )"	767:2:18529:18592	595255	0	True				
ANR	595579	CallExpression	"create_initterm_syms ( kext , ret , R_BIN_ENTRY_TYPE_INIT , * inits )"		595255	0					
ANR	595580	Callee	create_initterm_syms		595255	0					
ANR	595581	Identifier	create_initterm_syms		595255	0					
ANR	595582	ArgumentList	kext		595255	1					
ANR	595583	Argument	kext		595255	0					
ANR	595584	Identifier	kext		595255	0					
ANR	595585	Argument	ret		595255	1					
ANR	595586	Identifier	ret		595255	0					
ANR	595587	Argument	R_BIN_ENTRY_TYPE_INIT		595255	2					
ANR	595588	Identifier	R_BIN_ENTRY_TYPE_INIT		595255	0					
ANR	595589	Argument	* inits		595255	3					
ANR	595590	UnaryOperationExpression	* inits		595255	0					
ANR	595591	UnaryOperator	*		595255	0					
ANR	595592	Identifier	inits		595255	1					
ANR	595593	IfStatement	if ( * terms )		595255	2					
ANR	595594	Condition	* terms	769:5:18602:18607	595255	0	True				
ANR	595595	UnaryOperationExpression	* terms		595255	0					
ANR	595596	UnaryOperator	*		595255	0					
ANR	595597	Identifier	terms		595255	1					
ANR	595598	CompoundStatement		57:13:1204:1204	595255	1					
ANR	595599	ExpressionStatement	"create_initterm_syms ( kext , ret , R_BIN_ENTRY_TYPE_FINI , * terms )"	770:2:18614:18677	595255	0	True				
ANR	595600	CallExpression	"create_initterm_syms ( kext , ret , R_BIN_ENTRY_TYPE_FINI , * terms )"		595255	0					
ANR	595601	Callee	create_initterm_syms		595255	0					
ANR	595602	Identifier	create_initterm_syms		595255	0					
ANR	595603	ArgumentList	kext		595255	1					
ANR	595604	Argument	kext		595255	0					
ANR	595605	Identifier	kext		595255	0					
ANR	595606	Argument	ret		595255	1					
ANR	595607	Identifier	ret		595255	0					
ANR	595608	Argument	R_BIN_ENTRY_TYPE_FINI		595255	2					
ANR	595609	Identifier	R_BIN_ENTRY_TYPE_FINI		595255	0					
ANR	595610	Argument	* terms		595255	3					
ANR	595611	UnaryOperationExpression	* terms		595255	0					
ANR	595612	UnaryOperator	*		595255	0					
ANR	595613	Identifier	terms		595255	1					
ANR	595614	ReturnType	static void		595255	1					
ANR	595615	Identifier	process_kmod_init_term		595255	2					
ANR	595616	ParameterList	"RKernelCacheObj * obj , RKext * kext , RList * ret , ut64 * * inits , ut64 * * terms"		595255	3					
ANR	595617	Parameter	RKernelCacheObj * obj	713:35:17330:17349	595255	0	True				
ANR	595618	ParameterType	RKernelCacheObj *		595255	0					
ANR	595619	Identifier	obj		595255	1					
ANR	595620	Parameter	RKext * kext	713:57:17352:17362	595255	1	True				
ANR	595621	ParameterType	RKext *		595255	0					
ANR	595622	Identifier	kext		595255	1					
ANR	595623	Parameter	RList * ret	713:70:17365:17374	595255	2	True				
ANR	595624	ParameterType	RList *		595255	0					
ANR	595625	Identifier	ret		595255	1					
ANR	595626	Parameter	ut64 * * inits	713:82:17377:17388	595255	3	True				
ANR	595627	ParameterType	ut64 * *		595255	0					
ANR	595628	Identifier	inits		595255	1					
ANR	595629	Parameter	ut64 * * terms	713:96:17391:17402	595255	4	True				
ANR	595630	ParameterType	ut64 * *		595255	0					
ANR	595631	Identifier	terms		595255	1					
ANR	595632	CFGEntryNode	ENTRY		595255		True				
ANR	595633	CFGExitNode	EXIT		595255		True				
ANR	595634	Symbol	n_ptrs		595255						
ANR	595635	Symbol	terms		595255						
ANR	595636	Symbol	obj -> cache_buf		595255						
ANR	595637	Symbol	get_sections		595255						
ANR	595638	Symbol	n_inits		595255						
ANR	595639	Symbol	R_NEWS0		595255						
ANR	595640	Symbol	inits		595255						
ANR	595641	Symbol	obj -> mach0		595255						
ANR	595642	Symbol	ret		595255						
ANR	595643	Symbol	sections [ i ] . offset		595255						
ANR	595644	Symbol	* obj		595255						
ANR	595645	Symbol	* terms		595255						
ANR	595646	Symbol	R_BIN_ENTRY_TYPE_INIT		595255						
ANR	595647	Symbol	NULL		595255						
ANR	595648	Symbol	kext		595255						
ANR	595649	Symbol	i		595255						
ANR	595650	Symbol	n_terms		595255						
ANR	595651	Symbol	j		595255						
ANR	595652	Symbol	ut64		595255						
ANR	595653	Symbol	sections [ i ] . last		595255						
ANR	595654	Symbol	K_RPTR		595255						
ANR	595655	Symbol	sections		595255						
ANR	595656	Symbol	R_BIN_ENTRY_TYPE_FINI		595255						
ANR	595657	Symbol	target		595255						
ANR	595658	Symbol	MACH0_		595255						
ANR	595659	Symbol	* target		595255						
ANR	595660	Symbol	* inits		595255						
ANR	595661	Symbol	* i		595255						
ANR	595662	Symbol	* j		595255						
ANR	595663	Symbol	strstr		595255						
ANR	595664	Symbol	obj		595255						
ANR	595665	Symbol	bytes		595255						
ANR	595666	Symbol	sections [ i ] . name		595255						
ANR	595667	Symbol	r_buf_read_at		595255						
ANR	595668	Symbol	start_paddr		595255						
ANR	595669	Symbol	sections [ i ] . size		595255						
ANR	595670	Symbol	* sections		595255						
ANR	595671	Function	kext_short_name	780:0:18833:18962							
ANR	595672	FunctionDef	kext_short_name (RKext * kext)		595671	0					
ANR	595673	CompoundStatement		780:48:18881:18962	595671	0					
ANR	595674	IdentifierDeclStatement	"const char * sn = strrchr ( kext -> name , '.' ) ;"	781:1:18884:18926	595671	0	True				
ANR	595675	IdentifierDecl	"* sn = strrchr ( kext -> name , '.' )"		595671	0					
ANR	595676	IdentifierDeclType	const char *		595671	0					
ANR	595677	Identifier	sn		595671	1					
ANR	595678	AssignmentExpression	"* sn = strrchr ( kext -> name , '.' )"		595671	2		=			
ANR	595679	Identifier	sn		595671	0					
ANR	595680	CallExpression	"strrchr ( kext -> name , '.' )"		595671	1					
ANR	595681	Callee	strrchr		595671	0					
ANR	595682	Identifier	strrchr		595671	0					
ANR	595683	ArgumentList	kext -> name		595671	1					
ANR	595684	Argument	kext -> name		595671	0					
ANR	595685	PtrMemberAccess	kext -> name		595671	0					
ANR	595686	Identifier	kext		595671	0					
ANR	595687	Identifier	name		595671	1					
ANR	595688	Argument	'.'		595671	1					
ANR	595689	PrimaryExpression	'.'		595671	0					
ANR	595690	ReturnStatement	return sn ? sn + 1 : kext -> name ;	782:1:18929:18960	595671	1	True				
ANR	595691	ConditionalExpression	sn ? sn + 1 : kext -> name		595671	0					
ANR	595692	Condition	sn		595671	0					
ANR	595693	Identifier	sn		595671	0					
ANR	595694	AdditiveExpression	sn + 1		595671	1		+			
ANR	595695	Identifier	sn		595671	0					
ANR	595696	PrimaryExpression	1		595671	1					
ANR	595697	PtrMemberAccess	kext -> name		595671	2					
ANR	595698	Identifier	kext		595671	0					
ANR	595699	Identifier	name		595671	1					
ANR	595700	ReturnType	static const char *		595671	1					
ANR	595701	Identifier	kext_short_name		595671	2					
ANR	595702	ParameterList	RKext * kext		595671	3					
ANR	595703	Parameter	RKext * kext	780:35:18868:18878	595671	0	True				
ANR	595704	ParameterType	RKext *		595671	0					
ANR	595705	Identifier	kext		595671	1					
ANR	595706	CFGEntryNode	ENTRY		595671		True				
ANR	595707	CFGExitNode	EXIT		595671		True				
ANR	595708	Symbol	kext		595671						
ANR	595709	Symbol	strrchr		595671						
ANR	595710	Symbol	kext -> name		595671						
ANR	595711	Symbol	sn		595671						
ANR	595712	Symbol	* kext		595671						
ANR	595713	Function	create_initterm_syms	785:0:18965:19785							
ANR	595714	FunctionDef	"create_initterm_syms (RKext * kext , RList * ret , int type , ut64 * pointers)"		595713	0					
ANR	595715	CompoundStatement		785:84:19049:19785	595713	0					
ANR	595716	IdentifierDeclStatement	int i = 0 ;	786:1:19052:19061	595713	0	True				
ANR	595717	IdentifierDecl	i = 0		595713	0					
ANR	595718	IdentifierDeclType	int		595713	0					
ANR	595719	Identifier	i		595713	1					
ANR	595720	AssignmentExpression	i = 0		595713	2		=			
ANR	595721	Identifier	i		595713	0					
ANR	595722	PrimaryExpression	0		595713	1					
ANR	595723	IdentifierDeclStatement	int count = 0 ;	787:1:19064:19077	595713	1	True				
ANR	595724	IdentifierDecl	count = 0		595713	0					
ANR	595725	IdentifierDeclType	int		595713	0					
ANR	595726	Identifier	count		595713	1					
ANR	595727	AssignmentExpression	count = 0		595713	2		=			
ANR	595728	Identifier	count		595713	0					
ANR	595729	PrimaryExpression	0		595713	1					
ANR	595730	ForStatement	for ( ; pointers [ i ] ; i ++ )		595713	2					
ANR	595731	Condition	pointers [ i ]	788:8:19087:19097	595713	0	True				
ANR	595732	ArrayIndexing	pointers [ i ]		595713	0					
ANR	595733	Identifier	pointers		595713	0					
ANR	595734	Identifier	i		595713	1					
ANR	595735	PostIncDecOperationExpression	i ++	788:21:19100:19102	595713	1	True				
ANR	595736	Identifier	i		595713	0					
ANR	595737	IncDec	++		595713	1					
ANR	595738	CompoundStatement		17:2:307:344	595713	2					
ANR	595739	IdentifierDeclStatement	ut64 func_vaddr = pointers [ i ] ;	789:2:19109:19138	595713	0	True				
ANR	595740	IdentifierDecl	func_vaddr = pointers [ i ]		595713	0					
ANR	595741	IdentifierDeclType	ut64		595713	0					
ANR	595742	Identifier	func_vaddr		595713	1					
ANR	595743	AssignmentExpression	func_vaddr = pointers [ i ]		595713	2		=			
ANR	595744	Identifier	func_vaddr		595713	0					
ANR	595745	ArrayIndexing	pointers [ i ]		595713	1					
ANR	595746	Identifier	pointers		595713	0					
ANR	595747	Identifier	i		595713	1					
ANR	595748	IdentifierDeclStatement	ut64 text_start = kext -> vaddr ;	790:2:19142:19171	595713	1	True				
ANR	595749	IdentifierDecl	text_start = kext -> vaddr		595713	0					
ANR	595750	IdentifierDeclType	ut64		595713	0					
ANR	595751	Identifier	text_start		595713	1					
ANR	595752	AssignmentExpression	text_start = kext -> vaddr		595713	2		=			
ANR	595753	Identifier	text_start		595713	0					
ANR	595754	PtrMemberAccess	kext -> vaddr		595713	1					
ANR	595755	Identifier	kext		595713	0					
ANR	595756	Identifier	vaddr		595713	1					
ANR	595757	IdentifierDeclStatement	ut64 text_end = text_start + kext -> text_range . size ;	791:2:19175:19225	595713	2	True				
ANR	595758	IdentifierDecl	text_end = text_start + kext -> text_range . size		595713	0					
ANR	595759	IdentifierDeclType	ut64		595713	0					
ANR	595760	Identifier	text_end		595713	1					
ANR	595761	AssignmentExpression	text_end = text_start + kext -> text_range . size		595713	2		=			
ANR	595762	Identifier	text_end		595713	0					
ANR	595763	AdditiveExpression	text_start + kext -> text_range . size		595713	1		+			
ANR	595764	Identifier	text_start		595713	0					
ANR	595765	MemberAccess	kext -> text_range . size		595713	1					
ANR	595766	PtrMemberAccess	kext -> text_range		595713	0					
ANR	595767	Identifier	kext		595713	0					
ANR	595768	Identifier	text_range		595713	1					
ANR	595769	Identifier	size		595713	1					
ANR	595770	IfStatement	if ( text_start == text_end )		595713	3					
ANR	595771	Condition	text_start == text_end	793:6:19234:19255	595713	0	True				
ANR	595772	EqualityExpression	text_start == text_end		595713	0		==			
ANR	595773	Identifier	text_start		595713	0					
ANR	595774	Identifier	text_end		595713	1					
ANR	595775	CompoundStatement		9:30:208:208	595713	1					
ANR	595776	ContinueStatement	continue ;	794:3:19263:19271	595713	0	True				
ANR	595777	IfStatement	if ( text_start > func_vaddr || func_vaddr >= text_end )		595713	4					
ANR	595778	Condition	text_start > func_vaddr || func_vaddr >= text_end	797:6:19284:19332	595713	0	True				
ANR	595779	OrExpression	text_start > func_vaddr || func_vaddr >= text_end		595713	0		||			
ANR	595780	RelationalExpression	text_start > func_vaddr		595713	0		>			
ANR	595781	Identifier	text_start		595713	0					
ANR	595782	Identifier	func_vaddr		595713	1					
ANR	595783	RelationalExpression	func_vaddr >= text_end		595713	1		>=			
ANR	595784	Identifier	func_vaddr		595713	0					
ANR	595785	Identifier	text_end		595713	1					
ANR	595786	CompoundStatement		13:57:285:285	595713	1					
ANR	595787	ContinueStatement	continue ;	798:3:19340:19348	595713	0	True				
ANR	595788	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	801:2:19357:19394	595713	5	True				
ANR	595789	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		595713	0					
ANR	595790	IdentifierDeclType	RBinSymbol *		595713	0					
ANR	595791	Identifier	sym		595713	1					
ANR	595792	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		595713	2		=			
ANR	595793	Identifier	sym		595713	0					
ANR	595794	CallExpression	R_NEW0 ( RBinSymbol )		595713	1					
ANR	595795	Callee	R_NEW0		595713	0					
ANR	595796	Identifier	R_NEW0		595713	0					
ANR	595797	ArgumentList	RBinSymbol		595713	1					
ANR	595798	Argument	RBinSymbol		595713	0					
ANR	595799	Identifier	RBinSymbol		595713	0					
ANR	595800	IfStatement	if ( ! sym )		595713	6					
ANR	595801	Condition	! sym	802:6:19402:19405	595713	0	True				
ANR	595802	UnaryOperationExpression	! sym		595713	0					
ANR	595803	UnaryOperator	!		595713	0					
ANR	595804	Identifier	sym		595713	1					
ANR	595805	CompoundStatement		18:12:358:358	595713	1					
ANR	595806	BreakStatement	break ;	803:3:19413:19418	595713	0	True				
ANR	595807	ExpressionStatement	"sym -> name = r_str_newf ( ""%s.%s.%d"" , kext_short_name ( kext ) , ( type == R_BIN_ENTRY_TYPE_INIT ) ? ""init"" : ""fini"" , count ++ )"	806:2:19427:19546	595713	7	True				
ANR	595808	AssignmentExpression	"sym -> name = r_str_newf ( ""%s.%s.%d"" , kext_short_name ( kext ) , ( type == R_BIN_ENTRY_TYPE_INIT ) ? ""init"" : ""fini"" , count ++ )"		595713	0		=			
ANR	595809	PtrMemberAccess	sym -> name		595713	0					
ANR	595810	Identifier	sym		595713	0					
ANR	595811	Identifier	name		595713	1					
ANR	595812	CallExpression	"r_str_newf ( ""%s.%s.%d"" , kext_short_name ( kext ) , ( type == R_BIN_ENTRY_TYPE_INIT ) ? ""init"" : ""fini"" , count ++ )"		595713	1					
ANR	595813	Callee	r_str_newf		595713	0					
ANR	595814	Identifier	r_str_newf		595713	0					
ANR	595815	ArgumentList	"""%s.%s.%d"""		595713	1					
ANR	595816	Argument	"""%s.%s.%d"""		595713	0					
ANR	595817	PrimaryExpression	"""%s.%s.%d"""		595713	0					
ANR	595818	Argument	kext_short_name ( kext )		595713	1					
ANR	595819	CallExpression	kext_short_name ( kext )		595713	0					
ANR	595820	Callee	kext_short_name		595713	0					
ANR	595821	Identifier	kext_short_name		595713	0					
ANR	595822	ArgumentList	kext		595713	1					
ANR	595823	Argument	kext		595713	0					
ANR	595824	Identifier	kext		595713	0					
ANR	595825	Argument	"( type == R_BIN_ENTRY_TYPE_INIT ) ? ""init"" : ""fini"""		595713	2					
ANR	595826	ConditionalExpression	"( type == R_BIN_ENTRY_TYPE_INIT ) ? ""init"" : ""fini"""		595713	0					
ANR	595827	Condition	type == R_BIN_ENTRY_TYPE_INIT		595713	0					
ANR	595828	EqualityExpression	type == R_BIN_ENTRY_TYPE_INIT		595713	0		==			
ANR	595829	Identifier	type		595713	0					
ANR	595830	Identifier	R_BIN_ENTRY_TYPE_INIT		595713	1					
ANR	595831	PrimaryExpression	"""init"""		595713	1					
ANR	595832	PrimaryExpression	"""fini"""		595713	2					
ANR	595833	Argument	count ++		595713	3					
ANR	595834	PostIncDecOperationExpression	count ++		595713	0					
ANR	595835	Identifier	count		595713	0					
ANR	595836	IncDec	++		595713	1					
ANR	595837	ExpressionStatement	sym -> vaddr = func_vaddr	807:2:19550:19573	595713	8	True				
ANR	595838	AssignmentExpression	sym -> vaddr = func_vaddr		595713	0		=			
ANR	595839	PtrMemberAccess	sym -> vaddr		595713	0					
ANR	595840	Identifier	sym		595713	0					
ANR	595841	Identifier	vaddr		595713	1					
ANR	595842	Identifier	func_vaddr		595713	1					
ANR	595843	ExpressionStatement	sym -> paddr = func_vaddr - kext -> pa2va_exec	808:2:19577:19619	595713	9	True				
ANR	595844	AssignmentExpression	sym -> paddr = func_vaddr - kext -> pa2va_exec		595713	0		=			
ANR	595845	PtrMemberAccess	sym -> paddr		595713	0					
ANR	595846	Identifier	sym		595713	0					
ANR	595847	Identifier	paddr		595713	1					
ANR	595848	AdditiveExpression	func_vaddr - kext -> pa2va_exec		595713	1		-			
ANR	595849	Identifier	func_vaddr		595713	0					
ANR	595850	PtrMemberAccess	kext -> pa2va_exec		595713	1					
ANR	595851	Identifier	kext		595713	0					
ANR	595852	Identifier	pa2va_exec		595713	1					
ANR	595853	ExpressionStatement	sym -> size = 0	809:2:19623:19636	595713	10	True				
ANR	595854	AssignmentExpression	sym -> size = 0		595713	0		=			
ANR	595855	PtrMemberAccess	sym -> size		595713	0					
ANR	595856	Identifier	sym		595713	0					
ANR	595857	Identifier	size		595713	1					
ANR	595858	PrimaryExpression	0		595713	1					
ANR	595859	ExpressionStatement	"sym -> forwarder = r_str_const ( ""NONE"" )"	810:2:19640:19677	595713	11	True				
ANR	595860	AssignmentExpression	"sym -> forwarder = r_str_const ( ""NONE"" )"		595713	0		=			
ANR	595861	PtrMemberAccess	sym -> forwarder		595713	0					
ANR	595862	Identifier	sym		595713	0					
ANR	595863	Identifier	forwarder		595713	1					
ANR	595864	CallExpression	"r_str_const ( ""NONE"" )"		595713	1					
ANR	595865	Callee	r_str_const		595713	0					
ANR	595866	Identifier	r_str_const		595713	0					
ANR	595867	ArgumentList	"""NONE"""		595713	1					
ANR	595868	Argument	"""NONE"""		595713	0					
ANR	595869	PrimaryExpression	"""NONE"""		595713	0					
ANR	595870	ExpressionStatement	"sym -> bind = r_str_const ( ""GLOBAL"" )"	811:2:19681:19715	595713	12	True				
ANR	595871	AssignmentExpression	"sym -> bind = r_str_const ( ""GLOBAL"" )"		595713	0		=			
ANR	595872	PtrMemberAccess	sym -> bind		595713	0					
ANR	595873	Identifier	sym		595713	0					
ANR	595874	Identifier	bind		595713	1					
ANR	595875	CallExpression	"r_str_const ( ""GLOBAL"" )"		595713	1					
ANR	595876	Callee	r_str_const		595713	0					
ANR	595877	Identifier	r_str_const		595713	0					
ANR	595878	ArgumentList	"""GLOBAL"""		595713	1					
ANR	595879	Argument	"""GLOBAL"""		595713	0					
ANR	595880	PrimaryExpression	"""GLOBAL"""		595713	0					
ANR	595881	ExpressionStatement	"sym -> type = r_str_const ( ""FUNC"" )"	812:2:19719:19751	595713	13	True				
ANR	595882	AssignmentExpression	"sym -> type = r_str_const ( ""FUNC"" )"		595713	0		=			
ANR	595883	PtrMemberAccess	sym -> type		595713	0					
ANR	595884	Identifier	sym		595713	0					
ANR	595885	Identifier	type		595713	1					
ANR	595886	CallExpression	"r_str_const ( ""FUNC"" )"		595713	1					
ANR	595887	Callee	r_str_const		595713	0					
ANR	595888	Identifier	r_str_const		595713	0					
ANR	595889	ArgumentList	"""FUNC"""		595713	1					
ANR	595890	Argument	"""FUNC"""		595713	0					
ANR	595891	PrimaryExpression	"""FUNC"""		595713	0					
ANR	595892	ExpressionStatement	"r_list_append ( ret , sym )"	814:2:19756:19780	595713	14	True				
ANR	595893	CallExpression	"r_list_append ( ret , sym )"		595713	0					
ANR	595894	Callee	r_list_append		595713	0					
ANR	595895	Identifier	r_list_append		595713	0					
ANR	595896	ArgumentList	ret		595713	1					
ANR	595897	Argument	ret		595713	0					
ANR	595898	Identifier	ret		595713	0					
ANR	595899	Argument	sym		595713	1					
ANR	595900	Identifier	sym		595713	0					
ANR	595901	ReturnType	static void		595713	1					
ANR	595902	Identifier	create_initterm_syms		595713	2					
ANR	595903	ParameterList	"RKext * kext , RList * ret , int type , ut64 * pointers"		595713	3					
ANR	595904	Parameter	RKext * kext	785:33:18998:19008	595713	0	True				
ANR	595905	ParameterType	RKext *		595713	0					
ANR	595906	Identifier	kext		595713	1					
ANR	595907	Parameter	RList * ret	785:46:19011:19020	595713	1	True				
ANR	595908	ParameterType	RList *		595713	0					
ANR	595909	Identifier	ret		595713	1					
ANR	595910	Parameter	int type	785:58:19023:19030	595713	2	True				
ANR	595911	ParameterType	int		595713	0					
ANR	595912	Identifier	type		595713	1					
ANR	595913	Parameter	ut64 * pointers	785:68:19033:19046	595713	3	True				
ANR	595914	ParameterType	ut64 *		595713	0					
ANR	595915	Identifier	pointers		595713	1					
ANR	595916	CFGEntryNode	ENTRY		595713		True				
ANR	595917	CFGExitNode	EXIT		595713		True				
ANR	595918	Symbol	sym -> bind		595713						
ANR	595919	Symbol	kext -> vaddr		595713						
ANR	595920	Symbol	kext -> text_range . size		595713						
ANR	595921	Symbol	sym		595713						
ANR	595922	Symbol	sym -> type		595713						
ANR	595923	Symbol	r_str_newf		595713						
ANR	595924	Symbol	type		595713						
ANR	595925	Symbol	sym -> size		595713						
ANR	595926	Symbol	sym -> forwarder		595713						
ANR	595927	Symbol	pointers		595713						
ANR	595928	Symbol	text_start		595713						
ANR	595929	Symbol	ret		595713						
ANR	595930	Symbol	r_str_const		595713						
ANR	595931	Symbol	R_BIN_ENTRY_TYPE_INIT		595713						
ANR	595932	Symbol	kext		595713						
ANR	595933	Symbol	kext_short_name		595713						
ANR	595934	Symbol	sym -> vaddr		595713						
ANR	595935	Symbol	count		595713						
ANR	595936	Symbol	sym -> paddr		595713						
ANR	595937	Symbol	i		595713						
ANR	595938	Symbol	kext -> pa2va_exec		595713						
ANR	595939	Symbol	* kext		595713						
ANR	595940	Symbol	* pointers		595713						
ANR	595941	Symbol	kext -> text_range		595713						
ANR	595942	Symbol	func_vaddr		595713						
ANR	595943	Symbol	R_NEW0		595713						
ANR	595944	Symbol	* sym		595713						
ANR	595945	Symbol	* i		595713						
ANR	595946	Symbol	sym -> name		595713						
ANR	595947	Symbol	text_end		595713						
ANR	595948	Symbol	RBinSymbol		595713						
ANR	595949	DeclStmt									
ANR	595950	Decl							struct section_t	struct section_t *	sections
ANR	595951	DeclStmt									
ANR	595952	Decl							int	int	i
ANR	595953	Decl							int	int	type
ANR	595954	DeclStmt									
ANR	595955	Decl							ut8	ut8 *	buf
ANR	595956	DeclStmt									
ANR	595957	Decl							int	int	j
ANR	595958	DeclStmt									
ANR	595959	Decl							int	int	count
ANR	595960	DeclStmt									
ANR	595961	Decl							ut64	ut64	addr64
ANR	595962	DeclStmt									
ANR	595963	Decl							ut64	ut64	paddr64
ANR	595964	DeclStmt									
ANR	595965	Decl							RBinAddr	RBinAddr *	ba
ANR	595966	DeclStmt									
ANR	595967	Decl							RBinSymbol	RBinSymbol *	sym
ANR	595968	Function	newEntry	876:0:21437:21679							
ANR	595969	FunctionDef	"newEntry (ut64 haddr , ut64 vaddr , int type)"		595968	0					
ANR	595970	CompoundStatement		876:60:21497:21679	595968	0					
ANR	595971	IdentifierDeclStatement	RBinAddr * ptr = R_NEW0 ( RBinAddr ) ;	877:1:21500:21533	595968	0	True				
ANR	595972	IdentifierDecl	* ptr = R_NEW0 ( RBinAddr )		595968	0					
ANR	595973	IdentifierDeclType	RBinAddr *		595968	0					
ANR	595974	Identifier	ptr		595968	1					
ANR	595975	AssignmentExpression	* ptr = R_NEW0 ( RBinAddr )		595968	2		=			
ANR	595976	Identifier	ptr		595968	0					
ANR	595977	CallExpression	R_NEW0 ( RBinAddr )		595968	1					
ANR	595978	Callee	R_NEW0		595968	0					
ANR	595979	Identifier	R_NEW0		595968	0					
ANR	595980	ArgumentList	RBinAddr		595968	1					
ANR	595981	Argument	RBinAddr		595968	0					
ANR	595982	Identifier	RBinAddr		595968	0					
ANR	595983	IfStatement	if ( ! ptr )		595968	1					
ANR	595984	Condition	! ptr	878:5:21540:21543	595968	0	True				
ANR	595985	UnaryOperationExpression	! ptr		595968	0					
ANR	595986	UnaryOperator	!		595968	0					
ANR	595987	Identifier	ptr		595968	1					
ANR	595988	CompoundStatement		3:11:48:48	595968	1					
ANR	595989	ReturnStatement	return NULL ;	879:2:21550:21561	595968	0	True				
ANR	595990	Identifier	NULL		595968	0					
ANR	595991	ExpressionStatement	ptr -> paddr = haddr	881:1:21567:21585	595968	2	True				
ANR	595992	AssignmentExpression	ptr -> paddr = haddr		595968	0		=			
ANR	595993	PtrMemberAccess	ptr -> paddr		595968	0					
ANR	595994	Identifier	ptr		595968	0					
ANR	595995	Identifier	paddr		595968	1					
ANR	595996	Identifier	haddr		595968	1					
ANR	595997	ExpressionStatement	ptr -> vaddr = vaddr	882:1:21588:21606	595968	3	True				
ANR	595998	AssignmentExpression	ptr -> vaddr = vaddr		595968	0		=			
ANR	595999	PtrMemberAccess	ptr -> vaddr		595968	0					
ANR	596000	Identifier	ptr		595968	0					
ANR	596001	Identifier	vaddr		595968	1					
ANR	596002	Identifier	vaddr		595968	1					
ANR	596003	ExpressionStatement	ptr -> hpaddr = haddr	883:1:21609:21628	595968	4	True				
ANR	596004	AssignmentExpression	ptr -> hpaddr = haddr		595968	0		=			
ANR	596005	PtrMemberAccess	ptr -> hpaddr		595968	0					
ANR	596006	Identifier	ptr		595968	0					
ANR	596007	Identifier	hpaddr		595968	1					
ANR	596008	Identifier	haddr		595968	1					
ANR	596009	ExpressionStatement	ptr -> bits = 64	884:1:21631:21645	595968	5	True				
ANR	596010	AssignmentExpression	ptr -> bits = 64		595968	0		=			
ANR	596011	PtrMemberAccess	ptr -> bits		595968	0					
ANR	596012	Identifier	ptr		595968	0					
ANR	596013	Identifier	bits		595968	1					
ANR	596014	PrimaryExpression	64		595968	1					
ANR	596015	ExpressionStatement	ptr -> type = type	885:1:21648:21664	595968	6	True				
ANR	596016	AssignmentExpression	ptr -> type = type		595968	0		=			
ANR	596017	PtrMemberAccess	ptr -> type		595968	0					
ANR	596018	Identifier	ptr		595968	0					
ANR	596019	Identifier	type		595968	1					
ANR	596020	Identifier	type		595968	1					
ANR	596021	ReturnStatement	return ptr ;	886:1:21667:21677	595968	7	True				
ANR	596022	Identifier	ptr		595968	0					
ANR	596023	ReturnType	static RBinAddr *		595968	1					
ANR	596024	Identifier	newEntry		595968	2					
ANR	596025	ParameterList	"ut64 haddr , ut64 vaddr , int type"		595968	3					
ANR	596026	Parameter	ut64 haddr	876:26:21463:21472	595968	0	True				
ANR	596027	ParameterType	ut64		595968	0					
ANR	596028	Identifier	haddr		595968	1					
ANR	596029	Parameter	ut64 vaddr	876:38:21475:21484	595968	1	True				
ANR	596030	ParameterType	ut64		595968	0					
ANR	596031	Identifier	vaddr		595968	1					
ANR	596032	Parameter	int type	876:50:21487:21494	595968	2	True				
ANR	596033	ParameterType	int		595968	0					
ANR	596034	Identifier	type		595968	1					
ANR	596035	CFGEntryNode	ENTRY		595968		True				
ANR	596036	CFGExitNode	EXIT		595968		True				
ANR	596037	Symbol	ptr -> paddr		595968						
ANR	596038	Symbol	NULL		595968						
ANR	596039	Symbol	ptr -> type		595968						
ANR	596040	Symbol	ptr -> hpaddr		595968						
ANR	596041	Symbol	ptr -> bits		595968						
ANR	596042	Symbol	vaddr		595968						
ANR	596043	Symbol	type		595968						
ANR	596044	Symbol	ptr		595968						
ANR	596045	Symbol	ptr -> vaddr		595968						
ANR	596046	Symbol	R_NEW0		595968						
ANR	596047	Symbol	RBinAddr		595968						
ANR	596048	Symbol	* ptr		595968						
ANR	596049	Symbol	haddr		595968						
ANR	596050	Function	check_buffer	889:0:21682:21910							
ANR	596051	FunctionDef	check_buffer (RBuffer * b)		596050	0					
ANR	596052	CompoundStatement		889:37:21719:21910	596050	0					
ANR	596053	IfStatement	if ( r_buf_size ( b ) > 4 )		596050	0					
ANR	596054	Condition	r_buf_size ( b ) > 4	890:5:21726:21743	596050	0	True				
ANR	596055	RelationalExpression	r_buf_size ( b ) > 4		596050	0		>			
ANR	596056	CallExpression	r_buf_size ( b )		596050	0					
ANR	596057	Callee	r_buf_size		596050	0					
ANR	596058	Identifier	r_buf_size		596050	0					
ANR	596059	ArgumentList	b		596050	1					
ANR	596060	Argument	b		596050	0					
ANR	596061	Identifier	b		596050	0					
ANR	596062	PrimaryExpression	4		596050	1					
ANR	596063	CompoundStatement		3:2:30:40	596050	1					
ANR	596064	IdentifierDeclStatement	ut8 buf [ 4 ] ;	891:2:21750:21760	596050	0	True				
ANR	596065	IdentifierDecl	buf [ 4 ]		596050	0					
ANR	596066	IdentifierDeclType	ut8 [ 4 ]		596050	0					
ANR	596067	Identifier	buf		596050	1					
ANR	596068	PrimaryExpression	4		596050	2					
ANR	596069	ExpressionStatement	"r_buf_read_at ( b , 0 , buf , sizeof ( buf ) )"	892:2:21764:21803	596050	1	True				
ANR	596070	CallExpression	"r_buf_read_at ( b , 0 , buf , sizeof ( buf ) )"		596050	0					
ANR	596071	Callee	r_buf_read_at		596050	0					
ANR	596072	Identifier	r_buf_read_at		596050	0					
ANR	596073	ArgumentList	b		596050	1					
ANR	596074	Argument	b		596050	0					
ANR	596075	Identifier	b		596050	0					
ANR	596076	Argument	0		596050	1					
ANR	596077	PrimaryExpression	0		596050	0					
ANR	596078	Argument	buf		596050	2					
ANR	596079	Identifier	buf		596050	0					
ANR	596080	Argument	sizeof ( buf )		596050	3					
ANR	596081	SizeofExpression	sizeof ( buf )		596050	0					
ANR	596082	Sizeof	sizeof		596050	0					
ANR	596083	SizeofOperand	buf		596050	1					
ANR	596084	IfStatement	"if ( ! memcmp ( buf , ""\\xcf\\xfa\\xed\\xfe"" , 4 ) )"		596050	2					
ANR	596085	Condition	"! memcmp ( buf , ""\\xcf\\xfa\\xed\\xfe"" , 4 )"	893:6:21811:21846	596050	0	True				
ANR	596086	UnaryOperationExpression	"! memcmp ( buf , ""\\xcf\\xfa\\xed\\xfe"" , 4 )"		596050	0					
ANR	596087	UnaryOperator	!		596050	0					
ANR	596088	CallExpression	"memcmp ( buf , ""\\xcf\\xfa\\xed\\xfe"" , 4 )"		596050	1					
ANR	596089	Callee	memcmp		596050	0					
ANR	596090	Identifier	memcmp		596050	0					
ANR	596091	ArgumentList	buf		596050	1					
ANR	596092	Argument	buf		596050	0					
ANR	596093	Identifier	buf		596050	0					
ANR	596094	Argument	"""\\xcf\\xfa\\xed\\xfe"""		596050	1					
ANR	596095	PrimaryExpression	"""\\xcf\\xfa\\xed\\xfe"""		596050	0					
ANR	596096	Argument	4		596050	2					
ANR	596097	PrimaryExpression	4		596050	0					
ANR	596098	CompoundStatement		5:44:129:129	596050	1					
ANR	596099	ReturnStatement	return is_kernelcache_buffer ( b ) ;	894:3:21854:21886	596050	0	True				
ANR	596100	CallExpression	is_kernelcache_buffer ( b )		596050	0					
ANR	596101	Callee	is_kernelcache_buffer		596050	0					
ANR	596102	Identifier	is_kernelcache_buffer		596050	0					
ANR	596103	ArgumentList	b		596050	1					
ANR	596104	Argument	b		596050	0					
ANR	596105	Identifier	b		596050	0					
ANR	596106	ReturnStatement	return false ;	897:1:21896:21908	596050	1	True				
ANR	596107	Identifier	false		596050	0					
ANR	596108	ReturnType	static bool		596050	1					
ANR	596109	Identifier	check_buffer		596050	2					
ANR	596110	ParameterList	RBuffer * b		596050	3					
ANR	596111	Parameter	RBuffer * b	889:25:21707:21716	596050	0	True				
ANR	596112	ParameterType	RBuffer *		596050	0					
ANR	596113	Identifier	b		596050	1					
ANR	596114	CFGEntryNode	ENTRY		596050		True				
ANR	596115	CFGExitNode	EXIT		596050		True				
ANR	596116	Symbol	b		596050						
ANR	596117	Symbol	buf		596050						
ANR	596118	Symbol	memcmp		596050						
ANR	596119	Symbol	is_kernelcache_buffer		596050						
ANR	596120	Symbol	false		596050						
ANR	596121	Symbol	r_buf_size		596050						
ANR	596122	Function	sections	900:0:21913:23342							
ANR	596123	FunctionDef	sections (RBinFile * bf)		596122	0					
ANR	596124	CompoundStatement		900:37:21950:23342	596122	0					
ANR	596125	IdentifierDeclStatement	RList * ret = NULL ;	901:1:21953:21970	596122	0	True				
ANR	596126	IdentifierDecl	* ret = NULL		596122	0					
ANR	596127	IdentifierDeclType	RList *		596122	0					
ANR	596128	Identifier	ret		596122	1					
ANR	596129	AssignmentExpression	* ret = NULL		596122	2		=			
ANR	596130	Identifier	NULL		596122	0					
ANR	596131	Identifier	NULL		596122	1					
ANR	596132	IdentifierDeclStatement	RBinObject * obj = bf ? bf -> o : NULL ;	902:1:21973:22008	596122	1	True				
ANR	596133	IdentifierDecl	* obj = bf ? bf -> o : NULL		596122	0					
ANR	596134	IdentifierDeclType	RBinObject *		596122	0					
ANR	596135	Identifier	obj		596122	1					
ANR	596136	AssignmentExpression	* obj = bf ? bf -> o : NULL		596122	2		=			
ANR	596137	Identifier	obj		596122	0					
ANR	596138	ConditionalExpression	bf ? bf -> o : NULL		596122	1					
ANR	596139	Condition	bf		596122	0					
ANR	596140	Identifier	bf		596122	0					
ANR	596141	PtrMemberAccess	bf -> o		596122	1					
ANR	596142	Identifier	bf		596122	0					
ANR	596143	Identifier	o		596122	1					
ANR	596144	Identifier	NULL		596122	2					
ANR	596145	IfStatement	if ( ! obj || ! obj -> bin_obj || ! ( ret = r_list_newf ( ( RListFree ) free ) ) )		596122	2					
ANR	596146	Condition	! obj || ! obj -> bin_obj || ! ( ret = r_list_newf ( ( RListFree ) free ) )	904:5:22016:22078	596122	0	True				
ANR	596147	OrExpression	! obj || ! obj -> bin_obj || ! ( ret = r_list_newf ( ( RListFree ) free ) )		596122	0		||			
ANR	596148	UnaryOperationExpression	! obj		596122	0					
ANR	596149	UnaryOperator	!		596122	0					
ANR	596150	Identifier	obj		596122	1					
ANR	596151	OrExpression	! obj -> bin_obj || ! ( ret = r_list_newf ( ( RListFree ) free ) )		596122	1		||			
ANR	596152	UnaryOperationExpression	! obj -> bin_obj		596122	0					
ANR	596153	UnaryOperator	!		596122	0					
ANR	596154	PtrMemberAccess	obj -> bin_obj		596122	1					
ANR	596155	Identifier	obj		596122	0					
ANR	596156	Identifier	bin_obj		596122	1					
ANR	596157	UnaryOperationExpression	! ( ret = r_list_newf ( ( RListFree ) free ) )		596122	1					
ANR	596158	UnaryOperator	!		596122	0					
ANR	596159	AssignmentExpression	ret = r_list_newf ( ( RListFree ) free )		596122	1		=			
ANR	596160	Identifier	ret		596122	0					
ANR	596161	CallExpression	r_list_newf ( ( RListFree ) free )		596122	1					
ANR	596162	Callee	r_list_newf		596122	0					
ANR	596163	Identifier	r_list_newf		596122	0					
ANR	596164	ArgumentList	( RListFree ) free		596122	1					
ANR	596165	Argument	( RListFree ) free		596122	0					
ANR	596166	CastExpression	( RListFree ) free		596122	0					
ANR	596167	CastTarget	RListFree		596122	0					
ANR	596168	Identifier	free		596122	1					
ANR	596169	CompoundStatement		5:70:130:130	596122	1					
ANR	596170	ReturnStatement	return NULL ;	905:2:22085:22096	596122	0	True				
ANR	596171	Identifier	NULL		596122	0					
ANR	596172	IdentifierDeclStatement	RKernelCacheObj * kobj = ( RKernelCacheObj * ) obj -> bin_obj ;	908:1:22103:22158	596122	3	True				
ANR	596173	IdentifierDecl	* kobj = ( RKernelCacheObj * ) obj -> bin_obj		596122	0					
ANR	596174	IdentifierDeclType	RKernelCacheObj *		596122	0					
ANR	596175	Identifier	kobj		596122	1					
ANR	596176	AssignmentExpression	* kobj = ( RKernelCacheObj * ) obj -> bin_obj		596122	2		=			
ANR	596177	Identifier	kobj		596122	0					
ANR	596178	CastExpression	( RKernelCacheObj * ) obj -> bin_obj		596122	1					
ANR	596179	CastTarget	RKernelCacheObj *		596122	0					
ANR	596180	PtrMemberAccess	obj -> bin_obj		596122	1					
ANR	596181	Identifier	obj		596122	0					
ANR	596182	Identifier	bin_obj		596122	1					
ANR	596183	ExpressionStatement	ensure_kexts_initialized ( kobj )	909:1:22161:22192	596122	4	True				
ANR	596184	CallExpression	ensure_kexts_initialized ( kobj )		596122	0					
ANR	596185	Callee	ensure_kexts_initialized		596122	0					
ANR	596186	Identifier	ensure_kexts_initialized		596122	0					
ANR	596187	ArgumentList	kobj		596122	1					
ANR	596188	Argument	kobj		596122	0					
ANR	596189	Identifier	kobj		596122	0					
ANR	596190	IdentifierDeclStatement	int iter ;	911:1:22196:22204	596122	5	True				
ANR	596191	IdentifierDecl	iter		596122	0					
ANR	596192	IdentifierDeclType	int		596122	0					
ANR	596193	Identifier	iter		596122	1					
ANR	596194	IdentifierDeclStatement	RKext * kext ;	912:1:22207:22218	596122	6	True				
ANR	596195	IdentifierDecl	* kext		596122	0					
ANR	596196	IdentifierDeclType	RKext *		596122	0					
ANR	596197	Identifier	kext		596122	1					
ANR	596198	Statement	r_kext_index_foreach	913:1:22221:22240	596122	7	True				
ANR	596199	Statement	(	913:22:22242:22242	596122	8	True				
ANR	596200	Statement	kobj	913:23:22243:22246	596122	9	True				
ANR	596201	Statement	->	913:27:22247:22248	596122	10	True				
ANR	596202	Statement	kexts	913:29:22249:22253	596122	11	True				
ANR	596203	Statement	","	913:34:22254:22254	596122	12	True				
ANR	596204	Statement	iter	913:36:22256:22259	596122	13	True				
ANR	596205	Statement	","	913:40:22260:22260	596122	14	True				
ANR	596206	Statement	kext	913:42:22262:22265	596122	15	True				
ANR	596207	Statement	)	913:46:22266:22266	596122	16	True				
ANR	596208	CompoundStatement		18:2:413:449	596122	17					
ANR	596209	IdentifierDeclStatement	ut8 magicbytes [ 4 ] ;	914:2:22272:22289	596122	0	True				
ANR	596210	IdentifierDecl	magicbytes [ 4 ]		596122	0					
ANR	596211	IdentifierDeclType	ut8 [ 4 ]		596122	0					
ANR	596212	Identifier	magicbytes		596122	1					
ANR	596213	PrimaryExpression	4		596122	2					
ANR	596214	ExpressionStatement	"r_buf_read_at ( kobj -> cache_buf , kext -> range . offset , magicbytes , 4 )"	916:2:22294:22360	596122	1	True				
ANR	596215	CallExpression	"r_buf_read_at ( kobj -> cache_buf , kext -> range . offset , magicbytes , 4 )"		596122	0					
ANR	596216	Callee	r_buf_read_at		596122	0					
ANR	596217	Identifier	r_buf_read_at		596122	0					
ANR	596218	ArgumentList	kobj -> cache_buf		596122	1					
ANR	596219	Argument	kobj -> cache_buf		596122	0					
ANR	596220	PtrMemberAccess	kobj -> cache_buf		596122	0					
ANR	596221	Identifier	kobj		596122	0					
ANR	596222	Identifier	cache_buf		596122	1					
ANR	596223	Argument	kext -> range . offset		596122	1					
ANR	596224	MemberAccess	kext -> range . offset		596122	0					
ANR	596225	PtrMemberAccess	kext -> range		596122	0					
ANR	596226	Identifier	kext		596122	0					
ANR	596227	Identifier	range		596122	1					
ANR	596228	Identifier	offset		596122	1					
ANR	596229	Argument	magicbytes		596122	2					
ANR	596230	Identifier	magicbytes		596122	0					
ANR	596231	Argument	4		596122	3					
ANR	596232	PrimaryExpression	4		596122	0					
ANR	596233	IdentifierDeclStatement	int magic = r_read_le32 ( magicbytes ) ;	917:2:22364:22400	596122	2	True				
ANR	596234	IdentifierDecl	magic = r_read_le32 ( magicbytes )		596122	0					
ANR	596235	IdentifierDeclType	int		596122	0					
ANR	596236	Identifier	magic		596122	1					
ANR	596237	AssignmentExpression	magic = r_read_le32 ( magicbytes )		596122	2		=			
ANR	596238	Identifier	magic		596122	0					
ANR	596239	CallExpression	r_read_le32 ( magicbytes )		596122	1					
ANR	596240	Callee	r_read_le32		596122	0					
ANR	596241	Identifier	r_read_le32		596122	0					
ANR	596242	ArgumentList	magicbytes		596122	1					
ANR	596243	Argument	magicbytes		596122	0					
ANR	596244	Identifier	magicbytes		596122	0					
ANR	596245	SwitchStatement	switch ( magic )		596122	3					
ANR	596246	Condition	magic	918:10:22412:22416	596122	0	True				
ANR	596247	Identifier	magic		596122	0					
ANR	596248	CompoundStatement		19:17:468:468	596122	1					
ANR	596249	Label	case MH_MAGIC_64 :	919:2:22423:22439	596122	0	True				
ANR	596250	Identifier	MH_MAGIC_64		596122	0					
ANR	596251	ExpressionStatement	"sections_from_mach0 ( ret , kext -> mach0 , bf , kext -> range . offset , kext -> name , kobj )"	920:3:22444:22524	596122	1	True				
ANR	596252	CallExpression	"sections_from_mach0 ( ret , kext -> mach0 , bf , kext -> range . offset , kext -> name , kobj )"		596122	0					
ANR	596253	Callee	sections_from_mach0		596122	0					
ANR	596254	Identifier	sections_from_mach0		596122	0					
ANR	596255	ArgumentList	ret		596122	1					
ANR	596256	Argument	ret		596122	0					
ANR	596257	Identifier	ret		596122	0					
ANR	596258	Argument	kext -> mach0		596122	1					
ANR	596259	PtrMemberAccess	kext -> mach0		596122	0					
ANR	596260	Identifier	kext		596122	0					
ANR	596261	Identifier	mach0		596122	1					
ANR	596262	Argument	bf		596122	2					
ANR	596263	Identifier	bf		596122	0					
ANR	596264	Argument	kext -> range . offset		596122	3					
ANR	596265	MemberAccess	kext -> range . offset		596122	0					
ANR	596266	PtrMemberAccess	kext -> range		596122	0					
ANR	596267	Identifier	kext		596122	0					
ANR	596268	Identifier	range		596122	1					
ANR	596269	Identifier	offset		596122	1					
ANR	596270	Argument	kext -> name		596122	4					
ANR	596271	PtrMemberAccess	kext -> name		596122	0					
ANR	596272	Identifier	kext		596122	0					
ANR	596273	Identifier	name		596122	1					
ANR	596274	Argument	kobj		596122	5					
ANR	596275	Identifier	kobj		596122	0					
ANR	596276	BreakStatement	break ;	921:3:22529:22534	596122	2	True				
ANR	596277	Label	default :	922:2:22538:22545	596122	3	True				
ANR	596278	Identifier	default		596122	0					
ANR	596279	ExpressionStatement	"eprintf ( ""Unknown sub-bin\\n"" )"	923:3:22550:22579	596122	4	True				
ANR	596280	CallExpression	"eprintf ( ""Unknown sub-bin\\n"" )"		596122	0					
ANR	596281	Callee	eprintf		596122	0					
ANR	596282	Identifier	eprintf		596122	0					
ANR	596283	ArgumentList	"""Unknown sub-bin\\n"""		596122	1					
ANR	596284	Argument	"""Unknown sub-bin\\n"""		596122	0					
ANR	596285	PrimaryExpression	"""Unknown sub-bin\\n"""		596122	0					
ANR	596286	BreakStatement	break ;	924:3:22584:22589	596122	5	True				
ANR	596287	ExpressionStatement	"sections_from_mach0 ( ret , kobj -> mach0 , bf , 0 , NULL , kobj )"	928:1:22600:22657	596122	18	True				
ANR	596288	CallExpression	"sections_from_mach0 ( ret , kobj -> mach0 , bf , 0 , NULL , kobj )"		596122	0					
ANR	596289	Callee	sections_from_mach0		596122	0					
ANR	596290	Identifier	sections_from_mach0		596122	0					
ANR	596291	ArgumentList	ret		596122	1					
ANR	596292	Argument	ret		596122	0					
ANR	596293	Identifier	ret		596122	0					
ANR	596294	Argument	kobj -> mach0		596122	1					
ANR	596295	PtrMemberAccess	kobj -> mach0		596122	0					
ANR	596296	Identifier	kobj		596122	0					
ANR	596297	Identifier	mach0		596122	1					
ANR	596298	Argument	bf		596122	2					
ANR	596299	Identifier	bf		596122	0					
ANR	596300	Argument	0		596122	3					
ANR	596301	PrimaryExpression	0		596122	0					
ANR	596302	Argument	NULL		596122	4					
ANR	596303	Identifier	NULL		596122	0					
ANR	596304	Argument	kobj		596122	5					
ANR	596305	Identifier	kobj		596122	0					
ANR	596306	Statement	struct	930:1:22661:22666	596122	19	True				
ANR	596307	ExpressionStatement	MACH0_ ( segment_command ) * seg	930:8:22668:22696	596122	20	True				
ANR	596308	MultiplicativeExpression	MACH0_ ( segment_command ) * seg		596122	0		*			
ANR	596309	CallExpression	MACH0_ ( segment_command )		596122	0					
ANR	596310	Callee	MACH0_		596122	0					
ANR	596311	Identifier	MACH0_		596122	0					
ANR	596312	ArgumentList	segment_command		596122	1					
ANR	596313	Argument	segment_command		596122	0					
ANR	596314	Identifier	segment_command		596122	0					
ANR	596315	Identifier	seg		596122	1					
ANR	596316	IdentifierDeclStatement	"int nsegs = R_MIN ( kobj -> mach0 -> nsegs , 128 ) ;"	931:1:22699:22742	596122	21	True				
ANR	596317	IdentifierDecl	"nsegs = R_MIN ( kobj -> mach0 -> nsegs , 128 )"		596122	0					
ANR	596318	IdentifierDeclType	int		596122	0					
ANR	596319	Identifier	nsegs		596122	1					
ANR	596320	AssignmentExpression	"nsegs = R_MIN ( kobj -> mach0 -> nsegs , 128 )"		596122	2		=			
ANR	596321	Identifier	nsegs		596122	0					
ANR	596322	CallExpression	"R_MIN ( kobj -> mach0 -> nsegs , 128 )"		596122	1					
ANR	596323	Callee	R_MIN		596122	0					
ANR	596324	Identifier	R_MIN		596122	0					
ANR	596325	ArgumentList	kobj -> mach0 -> nsegs		596122	1					
ANR	596326	Argument	kobj -> mach0 -> nsegs		596122	0					
ANR	596327	PtrMemberAccess	kobj -> mach0 -> nsegs		596122	0					
ANR	596328	PtrMemberAccess	kobj -> mach0		596122	0					
ANR	596329	Identifier	kobj		596122	0					
ANR	596330	Identifier	mach0		596122	1					
ANR	596331	Identifier	nsegs		596122	1					
ANR	596332	Argument	128		596122	1					
ANR	596333	PrimaryExpression	128		596122	0					
ANR	596334	IdentifierDeclStatement	int i ;	932:1:22745:22750	596122	22	True				
ANR	596335	IdentifierDecl	i		596122	0					
ANR	596336	IdentifierDeclType	int		596122	0					
ANR	596337	Identifier	i		596122	1					
ANR	596338	ForStatement	for ( i = 0 ; i < nsegs ; i ++ )		596122	23					
ANR	596339	ForInit	i = 0 ;	933:6:22758:22763	596122	0	True				
ANR	596340	AssignmentExpression	i = 0		596122	0		=			
ANR	596341	Identifier	i		596122	0					
ANR	596342	PrimaryExpression	0		596122	1					
ANR	596343	Condition	i < nsegs	933:13:22765:22773	596122	1	True				
ANR	596344	RelationalExpression	i < nsegs		596122	0		<			
ANR	596345	Identifier	i		596122	0					
ANR	596346	Identifier	nsegs		596122	1					
ANR	596347	PostIncDecOperationExpression	i ++	933:24:22776:22778	596122	2	True				
ANR	596348	Identifier	i		596122	0					
ANR	596349	IncDec	++		596122	1					
ANR	596350	CompoundStatement		36:2:854:870	596122	3					
ANR	596351	IdentifierDeclStatement	RBinSection * ptr ;	934:2:22785:22801	596122	0	True				
ANR	596352	IdentifierDecl	* ptr		596122	0					
ANR	596353	IdentifierDeclType	RBinSection *		596122	0					
ANR	596354	Identifier	ptr		596122	1					
ANR	596355	IdentifierDeclStatement	char segname [ 17 ] ;	935:2:22805:22821	596122	1	True				
ANR	596356	IdentifierDecl	segname [ 17 ]		596122	0					
ANR	596357	IdentifierDeclType	char [ 17 ]		596122	0					
ANR	596358	Identifier	segname		596122	1					
ANR	596359	PrimaryExpression	17		596122	2					
ANR	596360	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSection ) ) )		596122	2					
ANR	596361	Condition	! ( ptr = R_NEW0 ( RBinSection ) )	937:6:22830:22858	596122	0	True				
ANR	596362	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSection ) )		596122	0					
ANR	596363	UnaryOperator	!		596122	0					
ANR	596364	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		596122	1		=			
ANR	596365	Identifier	ptr		596122	0					
ANR	596366	CallExpression	R_NEW0 ( RBinSection )		596122	1					
ANR	596367	Callee	R_NEW0		596122	0					
ANR	596368	Identifier	R_NEW0		596122	0					
ANR	596369	ArgumentList	RBinSection		596122	1					
ANR	596370	Argument	RBinSection		596122	0					
ANR	596371	Identifier	RBinSection		596122	0					
ANR	596372	CompoundStatement		38:37:910:910	596122	1					
ANR	596373	BreakStatement	break ;	938:3:22866:22871	596122	0	True				
ANR	596374	ExpressionStatement	seg = & kobj -> mach0 -> segs [ i ]	941:2:22880:22907	596122	3	True				
ANR	596375	AssignmentExpression	seg = & kobj -> mach0 -> segs [ i ]		596122	0		=			
ANR	596376	Identifier	seg		596122	0					
ANR	596377	UnaryOperationExpression	& kobj -> mach0 -> segs [ i ]		596122	1					
ANR	596378	UnaryOperator	&		596122	0					
ANR	596379	ArrayIndexing	kobj -> mach0 -> segs [ i ]		596122	1					
ANR	596380	PtrMemberAccess	kobj -> mach0 -> segs		596122	0					
ANR	596381	PtrMemberAccess	kobj -> mach0		596122	0					
ANR	596382	Identifier	kobj		596122	0					
ANR	596383	Identifier	mach0		596122	1					
ANR	596384	Identifier	segs		596122	1					
ANR	596385	Identifier	i		596122	1					
ANR	596386	ExpressionStatement	"r_str_ncpy ( segname , seg -> segname , 17 )"	942:2:22911:22949	596122	4	True				
ANR	596387	CallExpression	"r_str_ncpy ( segname , seg -> segname , 17 )"		596122	0					
ANR	596388	Callee	r_str_ncpy		596122	0					
ANR	596389	Identifier	r_str_ncpy		596122	0					
ANR	596390	ArgumentList	segname		596122	1					
ANR	596391	Argument	segname		596122	0					
ANR	596392	Identifier	segname		596122	0					
ANR	596393	Argument	seg -> segname		596122	1					
ANR	596394	PtrMemberAccess	seg -> segname		596122	0					
ANR	596395	Identifier	seg		596122	0					
ANR	596396	Identifier	segname		596122	1					
ANR	596397	Argument	17		596122	2					
ANR	596398	PrimaryExpression	17		596122	0					
ANR	596399	ExpressionStatement	"r_str_filter ( segname , - 1 )"	943:2:22953:22979	596122	5	True				
ANR	596400	CallExpression	"r_str_filter ( segname , - 1 )"		596122	0					
ANR	596401	Callee	r_str_filter		596122	0					
ANR	596402	Identifier	r_str_filter		596122	0					
ANR	596403	ArgumentList	segname		596122	1					
ANR	596404	Argument	segname		596122	0					
ANR	596405	Identifier	segname		596122	0					
ANR	596406	Argument	- 1		596122	1					
ANR	596407	UnaryOperationExpression	- 1		596122	0					
ANR	596408	UnaryOperator	-		596122	0					
ANR	596409	PrimaryExpression	1		596122	1					
ANR	596410	ExpressionStatement	"ptr -> name = r_str_newf ( ""%d.%s"" , i , segname )"	944:2:22983:23027	596122	6	True				
ANR	596411	AssignmentExpression	"ptr -> name = r_str_newf ( ""%d.%s"" , i , segname )"		596122	0		=			
ANR	596412	PtrMemberAccess	ptr -> name		596122	0					
ANR	596413	Identifier	ptr		596122	0					
ANR	596414	Identifier	name		596122	1					
ANR	596415	CallExpression	"r_str_newf ( ""%d.%s"" , i , segname )"		596122	1					
ANR	596416	Callee	r_str_newf		596122	0					
ANR	596417	Identifier	r_str_newf		596122	0					
ANR	596418	ArgumentList	"""%d.%s"""		596122	1					
ANR	596419	Argument	"""%d.%s"""		596122	0					
ANR	596420	PrimaryExpression	"""%d.%s"""		596122	0					
ANR	596421	Argument	i		596122	1					
ANR	596422	Identifier	i		596122	0					
ANR	596423	Argument	segname		596122	2					
ANR	596424	Identifier	segname		596122	0					
ANR	596425	ExpressionStatement	ptr -> size = seg -> vmsize	945:2:23031:23054	596122	7	True				
ANR	596426	AssignmentExpression	ptr -> size = seg -> vmsize		596122	0		=			
ANR	596427	PtrMemberAccess	ptr -> size		596122	0					
ANR	596428	Identifier	ptr		596122	0					
ANR	596429	Identifier	size		596122	1					
ANR	596430	PtrMemberAccess	seg -> vmsize		596122	1					
ANR	596431	Identifier	seg		596122	0					
ANR	596432	Identifier	vmsize		596122	1					
ANR	596433	ExpressionStatement	ptr -> vsize = seg -> vmsize	946:2:23058:23082	596122	8	True				
ANR	596434	AssignmentExpression	ptr -> vsize = seg -> vmsize		596122	0		=			
ANR	596435	PtrMemberAccess	ptr -> vsize		596122	0					
ANR	596436	Identifier	ptr		596122	0					
ANR	596437	Identifier	vsize		596122	1					
ANR	596438	PtrMemberAccess	seg -> vmsize		596122	1					
ANR	596439	Identifier	seg		596122	0					
ANR	596440	Identifier	vmsize		596122	1					
ANR	596441	ExpressionStatement	ptr -> paddr = seg -> fileoff + bf -> o -> boffset	947:2:23086:23128	596122	9	True				
ANR	596442	AssignmentExpression	ptr -> paddr = seg -> fileoff + bf -> o -> boffset		596122	0		=			
ANR	596443	PtrMemberAccess	ptr -> paddr		596122	0					
ANR	596444	Identifier	ptr		596122	0					
ANR	596445	Identifier	paddr		596122	1					
ANR	596446	AdditiveExpression	seg -> fileoff + bf -> o -> boffset		596122	1		+			
ANR	596447	PtrMemberAccess	seg -> fileoff		596122	0					
ANR	596448	Identifier	seg		596122	0					
ANR	596449	Identifier	fileoff		596122	1					
ANR	596450	PtrMemberAccess	bf -> o -> boffset		596122	1					
ANR	596451	PtrMemberAccess	bf -> o		596122	0					
ANR	596452	Identifier	bf		596122	0					
ANR	596453	Identifier	o		596122	1					
ANR	596454	Identifier	boffset		596122	1					
ANR	596455	ExpressionStatement	ptr -> vaddr = seg -> vmaddr	948:2:23132:23156	596122	10	True				
ANR	596456	AssignmentExpression	ptr -> vaddr = seg -> vmaddr		596122	0		=			
ANR	596457	PtrMemberAccess	ptr -> vaddr		596122	0					
ANR	596458	Identifier	ptr		596122	0					
ANR	596459	Identifier	vaddr		596122	1					
ANR	596460	PtrMemberAccess	seg -> vmaddr		596122	1					
ANR	596461	Identifier	seg		596122	0					
ANR	596462	Identifier	vmaddr		596122	1					
ANR	596463	ExpressionStatement	ptr -> add = true	949:2:23160:23175	596122	11	True				
ANR	596464	AssignmentExpression	ptr -> add = true		596122	0		=			
ANR	596465	PtrMemberAccess	ptr -> add		596122	0					
ANR	596466	Identifier	ptr		596122	0					
ANR	596467	Identifier	add		596122	1					
ANR	596468	Identifier	true		596122	1					
ANR	596469	ExpressionStatement	ptr -> is_segment = true	950:2:23179:23201	596122	12	True				
ANR	596470	AssignmentExpression	ptr -> is_segment = true		596122	0		=			
ANR	596471	PtrMemberAccess	ptr -> is_segment		596122	0					
ANR	596472	Identifier	ptr		596122	0					
ANR	596473	Identifier	is_segment		596122	1					
ANR	596474	Identifier	true		596122	1					
ANR	596475	IfStatement	if ( ! ptr -> vaddr )		596122	13					
ANR	596476	Condition	! ptr -> vaddr	951:6:23209:23219	596122	0	True				
ANR	596477	UnaryOperationExpression	! ptr -> vaddr		596122	0					
ANR	596478	UnaryOperator	!		596122	0					
ANR	596479	PtrMemberAccess	ptr -> vaddr		596122	1					
ANR	596480	Identifier	ptr		596122	0					
ANR	596481	Identifier	vaddr		596122	1					
ANR	596482	CompoundStatement		52:19:1271:1271	596122	1					
ANR	596483	ExpressionStatement	ptr -> vaddr = ptr -> paddr	952:3:23227:23250	596122	0	True				
ANR	596484	AssignmentExpression	ptr -> vaddr = ptr -> paddr		596122	0		=			
ANR	596485	PtrMemberAccess	ptr -> vaddr		596122	0					
ANR	596486	Identifier	ptr		596122	0					
ANR	596487	Identifier	vaddr		596122	1					
ANR	596488	PtrMemberAccess	ptr -> paddr		596122	1					
ANR	596489	Identifier	ptr		596122	0					
ANR	596490	Identifier	paddr		596122	1					
ANR	596491	ExpressionStatement	ptr -> perm = prot2perm ( seg -> initprot )	954:2:23258:23295	596122	14	True				
ANR	596492	AssignmentExpression	ptr -> perm = prot2perm ( seg -> initprot )		596122	0		=			
ANR	596493	PtrMemberAccess	ptr -> perm		596122	0					
ANR	596494	Identifier	ptr		596122	0					
ANR	596495	Identifier	perm		596122	1					
ANR	596496	CallExpression	prot2perm ( seg -> initprot )		596122	1					
ANR	596497	Callee	prot2perm		596122	0					
ANR	596498	Identifier	prot2perm		596122	0					
ANR	596499	ArgumentList	seg -> initprot		596122	1					
ANR	596500	Argument	seg -> initprot		596122	0					
ANR	596501	PtrMemberAccess	seg -> initprot		596122	0					
ANR	596502	Identifier	seg		596122	0					
ANR	596503	Identifier	initprot		596122	1					
ANR	596504	ExpressionStatement	"r_list_append ( ret , ptr )"	955:2:23299:23323	596122	15	True				
ANR	596505	CallExpression	"r_list_append ( ret , ptr )"		596122	0					
ANR	596506	Callee	r_list_append		596122	0					
ANR	596507	Identifier	r_list_append		596122	0					
ANR	596508	ArgumentList	ret		596122	1					
ANR	596509	Argument	ret		596122	0					
ANR	596510	Identifier	ret		596122	0					
ANR	596511	Argument	ptr		596122	1					
ANR	596512	Identifier	ptr		596122	0					
ANR	596513	ReturnStatement	return ret ;	958:1:23330:23340	596122	24	True				
ANR	596514	Identifier	ret		596122	0					
ANR	596515	ReturnType	static RList *		596122	1					
ANR	596516	Identifier	sections		596122	2					
ANR	596517	ParameterList	RBinFile * bf		596122	3					
ANR	596518	Parameter	RBinFile * bf	900:23:21936:21947	596122	0	True				
ANR	596519	ParameterType	RBinFile *		596122	0					
ANR	596520	Identifier	bf		596122	1					
ANR	596521	CFGEntryNode	ENTRY		596122		True				
ANR	596522	CFGExitNode	EXIT		596122		True				
ANR	596523	Symbol	magic		596122						
ANR	596524	Symbol	* kobj -> mach0		596122						
ANR	596525	Symbol	bf -> o -> boffset		596122						
ANR	596526	Symbol	ptr -> vaddr		596122						
ANR	596527	Symbol	bf -> o		596122						
ANR	596528	Symbol	magicbytes		596122						
ANR	596529	Symbol	* ptr		596122						
ANR	596530	Symbol	kext -> name		596122						
ANR	596531	Symbol	kobj		596122						
ANR	596532	Symbol	ret		596122						
ANR	596533	Symbol	seg -> fileoff		596122						
ANR	596534	Symbol	NULL		596122						
ANR	596535	Symbol	r_read_le32		596122						
ANR	596536	Symbol	r_list_newf		596122						
ANR	596537	Symbol	iter		596122						
ANR	596538	Symbol	kext -> range . offset		596122						
ANR	596539	Symbol	* kext		596122						
ANR	596540	Symbol	seg -> initprot		596122						
ANR	596541	Symbol	kext -> mach0		596122						
ANR	596542	Symbol	R_NEW0		596122						
ANR	596543	Symbol	* * bf		596122						
ANR	596544	Symbol	seg -> segname		596122						
ANR	596545	Symbol	ptr -> is_segment		596122						
ANR	596546	Symbol	true		596122						
ANR	596547	Symbol	obj -> bin_obj		596122						
ANR	596548	Symbol	kobj -> cache_buf		596122						
ANR	596549	Symbol	* seg		596122						
ANR	596550	Symbol	* * kobj		596122						
ANR	596551	Symbol	ptr -> paddr		596122						
ANR	596552	Symbol	* kobj		596122						
ANR	596553	Symbol	bf		596122						
ANR	596554	Symbol	segname		596122						
ANR	596555	Symbol	ptr -> name		596122						
ANR	596556	Symbol	kobj -> mach0 -> nsegs		596122						
ANR	596557	Symbol	r_str_newf		596122						
ANR	596558	Symbol	* bf -> o		596122						
ANR	596559	Symbol	ptr -> add		596122						
ANR	596560	Symbol	kext -> range		596122						
ANR	596561	Symbol	segment_command		596122						
ANR	596562	Symbol	seg		596122						
ANR	596563	Symbol	kobj -> mach0 -> segs		596122						
ANR	596564	Symbol	free		596122						
ANR	596565	Symbol	* obj		596122						
ANR	596566	Symbol	kext		596122						
ANR	596567	Symbol	* bf		596122						
ANR	596568	Symbol	i		596122						
ANR	596569	Symbol	seg -> vmaddr		596122						
ANR	596570	Symbol	R_MIN		596122						
ANR	596571	Symbol	prot2perm		596122						
ANR	596572	Symbol	ptr -> size		596122						
ANR	596573	Symbol	nsegs		596122						
ANR	596574	Symbol	ptr		596122						
ANR	596575	Symbol	kobj -> mach0		596122						
ANR	596576	Symbol	seg -> vmsize		596122						
ANR	596577	Symbol	obj		596122						
ANR	596578	Symbol	ptr -> vsize		596122						
ANR	596579	Symbol	RBinSection		596122						
ANR	596580	Symbol	ptr -> perm		596122						
ANR	596581	Function	prot2perm	961:0:23345:23453							
ANR	596582	FunctionDef	prot2perm (int x)		596581	0					
ANR	596583	CompoundStatement		961:29:23374:23453	596581	0					
ANR	596584	IdentifierDeclStatement	int r = 0 ;	962:1:23377:23386	596581	0	True				
ANR	596585	IdentifierDecl	r = 0		596581	0					
ANR	596586	IdentifierDeclType	int		596581	0					
ANR	596587	Identifier	r		596581	1					
ANR	596588	AssignmentExpression	r = 0		596581	2		=			
ANR	596589	Identifier	r		596581	0					
ANR	596590	PrimaryExpression	0		596581	1					
ANR	596591	IfStatement	if ( x & 1 )		596581	1					
ANR	596592	Condition	x & 1	963:5:23393:23395	596581	0	True				
ANR	596593	BitAndExpression	x & 1		596581	0		&			
ANR	596594	Identifier	x		596581	0					
ANR	596595	PrimaryExpression	1		596581	1					
ANR	596596	ExpressionStatement	r |= 4	963:10:23398:23404	596581	1	True				
ANR	596597	AssignmentExpression	r |= 4		596581	0		|=			
ANR	596598	Identifier	r		596581	0					
ANR	596599	PrimaryExpression	4		596581	1					
ANR	596600	IfStatement	if ( x & 2 )		596581	2					
ANR	596601	Condition	x & 2	964:5:23411:23413	596581	0	True				
ANR	596602	BitAndExpression	x & 2		596581	0		&			
ANR	596603	Identifier	x		596581	0					
ANR	596604	PrimaryExpression	2		596581	1					
ANR	596605	ExpressionStatement	r |= 2	964:10:23416:23422	596581	1	True				
ANR	596606	AssignmentExpression	r |= 2		596581	0		|=			
ANR	596607	Identifier	r		596581	0					
ANR	596608	PrimaryExpression	2		596581	1					
ANR	596609	IfStatement	if ( x & 4 )		596581	3					
ANR	596610	Condition	x & 4	965:5:23429:23431	596581	0	True				
ANR	596611	BitAndExpression	x & 4		596581	0		&			
ANR	596612	Identifier	x		596581	0					
ANR	596613	PrimaryExpression	4		596581	1					
ANR	596614	ExpressionStatement	r |= 1	965:10:23434:23440	596581	1	True				
ANR	596615	AssignmentExpression	r |= 1		596581	0		|=			
ANR	596616	Identifier	r		596581	0					
ANR	596617	PrimaryExpression	1		596581	1					
ANR	596618	ReturnStatement	return r ;	966:1:23443:23451	596581	4	True				
ANR	596619	Identifier	r		596581	0					
ANR	596620	ReturnType	static int		596581	1					
ANR	596621	Identifier	prot2perm		596581	2					
ANR	596622	ParameterList	int x		596581	3					
ANR	596623	Parameter	int x	961:22:23367:23371	596581	0	True				
ANR	596624	ParameterType	int		596581	0					
ANR	596625	Identifier	x		596581	1					
ANR	596626	CFGEntryNode	ENTRY		596581		True				
ANR	596627	CFGExitNode	EXIT		596581		True				
ANR	596628	Symbol	r		596581						
ANR	596629	Symbol	x		596581						
ANR	596630	DeclStmt									
ANR	596631	Decl							struct section_t	struct section_t *	sections
ANR	596632	DeclStmt									
ANR	596633	Decl							int	int	i
ANR	596634	DeclStmt									
ANR	596635	Decl							RBinSection	RBinSection *	ptr
ANR	596636	DeclStmt									
ANR	596637	Decl							int	int	len
ANR	596638	Function	handle_data_sections	1006:0:24540:24963							
ANR	596639	FunctionDef	handle_data_sections (RBinSection * sect)		596638	0					
ANR	596640	CompoundStatement		1006:52:24592:24963	596638	0					
ANR	596641	IfStatement	"if ( strstr ( sect -> name , ""_cstring"" ) )"		596638	0					
ANR	596642	Condition	"strstr ( sect -> name , ""_cstring"" )"	1007:5:24599:24629	596638	0	True				
ANR	596643	CallExpression	"strstr ( sect -> name , ""_cstring"" )"		596638	0					
ANR	596644	Callee	strstr		596638	0					
ANR	596645	Identifier	strstr		596638	0					
ANR	596646	ArgumentList	sect -> name		596638	1					
ANR	596647	Argument	sect -> name		596638	0					
ANR	596648	PtrMemberAccess	sect -> name		596638	0					
ANR	596649	Identifier	sect		596638	0					
ANR	596650	Identifier	name		596638	1					
ANR	596651	Argument	"""_cstring"""		596638	1					
ANR	596652	PrimaryExpression	"""_cstring"""		596638	0					
ANR	596653	CompoundStatement		2:38:39:39	596638	1					
ANR	596654	ExpressionStatement	sect -> is_data = true	1008:2:24636:24656	596638	0	True				
ANR	596655	AssignmentExpression	sect -> is_data = true		596638	0		=			
ANR	596656	PtrMemberAccess	sect -> is_data		596638	0					
ANR	596657	Identifier	sect		596638	0					
ANR	596658	Identifier	is_data		596638	1					
ANR	596659	Identifier	true		596638	1					
ANR	596660	ElseStatement	else		596638	0					
ANR	596661	IfStatement	"if ( strstr ( sect -> name , ""_os_log"" ) )"		596638	0					
ANR	596662	Condition	"strstr ( sect -> name , ""_os_log"" )"	1009:12:24670:24699	596638	0	True				
ANR	596663	CallExpression	"strstr ( sect -> name , ""_os_log"" )"		596638	0					
ANR	596664	Callee	strstr		596638	0					
ANR	596665	Identifier	strstr		596638	0					
ANR	596666	ArgumentList	sect -> name		596638	1					
ANR	596667	Argument	sect -> name		596638	0					
ANR	596668	PtrMemberAccess	sect -> name		596638	0					
ANR	596669	Identifier	sect		596638	0					
ANR	596670	Identifier	name		596638	1					
ANR	596671	Argument	"""_os_log"""		596638	1					
ANR	596672	PrimaryExpression	"""_os_log"""		596638	0					
ANR	596673	CompoundStatement		4:44:109:109	596638	1					
ANR	596674	ExpressionStatement	sect -> is_data = true	1010:2:24706:24726	596638	0	True				
ANR	596675	AssignmentExpression	sect -> is_data = true		596638	0		=			
ANR	596676	PtrMemberAccess	sect -> is_data		596638	0					
ANR	596677	Identifier	sect		596638	0					
ANR	596678	Identifier	is_data		596638	1					
ANR	596679	Identifier	true		596638	1					
ANR	596680	ElseStatement	else		596638	0					
ANR	596681	IfStatement	"if ( strstr ( sect -> name , ""_objc_methname"" ) )"		596638	0					
ANR	596682	Condition	"strstr ( sect -> name , ""_objc_methname"" )"	1011:12:24740:24776	596638	0	True				
ANR	596683	CallExpression	"strstr ( sect -> name , ""_objc_methname"" )"		596638	0					
ANR	596684	Callee	strstr		596638	0					
ANR	596685	Identifier	strstr		596638	0					
ANR	596686	ArgumentList	sect -> name		596638	1					
ANR	596687	Argument	sect -> name		596638	0					
ANR	596688	PtrMemberAccess	sect -> name		596638	0					
ANR	596689	Identifier	sect		596638	0					
ANR	596690	Identifier	name		596638	1					
ANR	596691	Argument	"""_objc_methname"""		596638	1					
ANR	596692	PrimaryExpression	"""_objc_methname"""		596638	0					
ANR	596693	CompoundStatement		6:51:186:186	596638	1					
ANR	596694	ExpressionStatement	sect -> is_data = true	1012:2:24783:24803	596638	0	True				
ANR	596695	AssignmentExpression	sect -> is_data = true		596638	0		=			
ANR	596696	PtrMemberAccess	sect -> is_data		596638	0					
ANR	596697	Identifier	sect		596638	0					
ANR	596698	Identifier	is_data		596638	1					
ANR	596699	Identifier	true		596638	1					
ANR	596700	ElseStatement	else		596638	0					
ANR	596701	IfStatement	"if ( strstr ( sect -> name , ""_objc_classname"" ) )"		596638	0					
ANR	596702	Condition	"strstr ( sect -> name , ""_objc_classname"" )"	1013:12:24817:24854	596638	0	True				
ANR	596703	CallExpression	"strstr ( sect -> name , ""_objc_classname"" )"		596638	0					
ANR	596704	Callee	strstr		596638	0					
ANR	596705	Identifier	strstr		596638	0					
ANR	596706	ArgumentList	sect -> name		596638	1					
ANR	596707	Argument	sect -> name		596638	0					
ANR	596708	PtrMemberAccess	sect -> name		596638	0					
ANR	596709	Identifier	sect		596638	0					
ANR	596710	Identifier	name		596638	1					
ANR	596711	Argument	"""_objc_classname"""		596638	1					
ANR	596712	PrimaryExpression	"""_objc_classname"""		596638	0					
ANR	596713	CompoundStatement		8:52:264:264	596638	1					
ANR	596714	ExpressionStatement	sect -> is_data = true	1014:2:24861:24881	596638	0	True				
ANR	596715	AssignmentExpression	sect -> is_data = true		596638	0		=			
ANR	596716	PtrMemberAccess	sect -> is_data		596638	0					
ANR	596717	Identifier	sect		596638	0					
ANR	596718	Identifier	is_data		596638	1					
ANR	596719	Identifier	true		596638	1					
ANR	596720	ElseStatement	else		596638	0					
ANR	596721	IfStatement	"if ( strstr ( sect -> name , ""_objc_methtype"" ) )"		596638	0					
ANR	596722	Condition	"strstr ( sect -> name , ""_objc_methtype"" )"	1015:12:24895:24931	596638	0	True				
ANR	596723	CallExpression	"strstr ( sect -> name , ""_objc_methtype"" )"		596638	0					
ANR	596724	Callee	strstr		596638	0					
ANR	596725	Identifier	strstr		596638	0					
ANR	596726	ArgumentList	sect -> name		596638	1					
ANR	596727	Argument	sect -> name		596638	0					
ANR	596728	PtrMemberAccess	sect -> name		596638	0					
ANR	596729	Identifier	sect		596638	0					
ANR	596730	Identifier	name		596638	1					
ANR	596731	Argument	"""_objc_methtype"""		596638	1					
ANR	596732	PrimaryExpression	"""_objc_methtype"""		596638	0					
ANR	596733	CompoundStatement		10:51:341:341	596638	1					
ANR	596734	ExpressionStatement	sect -> is_data = true	1016:2:24938:24958	596638	0	True				
ANR	596735	AssignmentExpression	sect -> is_data = true		596638	0		=			
ANR	596736	PtrMemberAccess	sect -> is_data		596638	0					
ANR	596737	Identifier	sect		596638	0					
ANR	596738	Identifier	is_data		596638	1					
ANR	596739	Identifier	true		596638	1					
ANR	596740	ReturnType	static void		596638	1					
ANR	596741	Identifier	handle_data_sections		596638	2					
ANR	596742	ParameterList	RBinSection * sect		596638	3					
ANR	596743	Parameter	RBinSection * sect	1006:33:24573:24589	596638	0	True				
ANR	596744	ParameterType	RBinSection *		596638	0					
ANR	596745	Identifier	sect		596638	1					
ANR	596746	CFGEntryNode	ENTRY		596638		True				
ANR	596747	CFGExitNode	EXIT		596638		True				
ANR	596748	Symbol	strstr		596638						
ANR	596749	Symbol	sect -> is_data		596638						
ANR	596750	Symbol	sect		596638						
ANR	596751	Symbol	true		596638						
ANR	596752	Symbol	sect -> name		596638						
ANR	596753	Symbol	* sect		596638						
ANR	596754	Function	symbols	1020:0:24966:27076							
ANR	596755	FunctionDef	symbols (RBinFile * bf)		596754	0					
ANR	596756	CompoundStatement		1020:36:25002:27076	596754	0					
ANR	596757	IdentifierDeclStatement	RList * ret = r_list_newf ( free ) ;	1021:1:25005:25036	596754	0	True				
ANR	596758	IdentifierDecl	* ret = r_list_newf ( free )		596754	0					
ANR	596759	IdentifierDeclType	RList *		596754	0					
ANR	596760	Identifier	ret		596754	1					
ANR	596761	AssignmentExpression	* ret = r_list_newf ( free )		596754	2		=			
ANR	596762	Identifier	ret		596754	0					
ANR	596763	CallExpression	r_list_newf ( free )		596754	1					
ANR	596764	Callee	r_list_newf		596754	0					
ANR	596765	Identifier	r_list_newf		596754	0					
ANR	596766	ArgumentList	free		596754	1					
ANR	596767	Argument	free		596754	0					
ANR	596768	Identifier	free		596754	0					
ANR	596769	IfStatement	if ( ! ret )		596754	1					
ANR	596770	Condition	! ret	1022:5:25043:25046	596754	0	True				
ANR	596771	UnaryOperationExpression	! ret		596754	0					
ANR	596772	UnaryOperator	!		596754	0					
ANR	596773	Identifier	ret		596754	1					
ANR	596774	CompoundStatement		3:11:46:46	596754	1					
ANR	596775	ReturnStatement	return NULL ;	1023:2:25053:25064	596754	0	True				
ANR	596776	Identifier	NULL		596754	0					
ANR	596777	IdentifierDeclStatement	RKernelCacheObj * obj = ( RKernelCacheObj * ) bf -> o -> bin_obj ;	1026:1:25071:25127	596754	2	True				
ANR	596778	IdentifierDecl	* obj = ( RKernelCacheObj * ) bf -> o -> bin_obj		596754	0					
ANR	596779	IdentifierDeclType	RKernelCacheObj *		596754	0					
ANR	596780	Identifier	obj		596754	1					
ANR	596781	AssignmentExpression	* obj = ( RKernelCacheObj * ) bf -> o -> bin_obj		596754	2		=			
ANR	596782	Identifier	obj		596754	0					
ANR	596783	CastExpression	( RKernelCacheObj * ) bf -> o -> bin_obj		596754	1					
ANR	596784	CastTarget	RKernelCacheObj *		596754	0					
ANR	596785	PtrMemberAccess	bf -> o -> bin_obj		596754	1					
ANR	596786	PtrMemberAccess	bf -> o		596754	0					
ANR	596787	Identifier	bf		596754	0					
ANR	596788	Identifier	o		596754	1					
ANR	596789	Identifier	bin_obj		596754	1					
ANR	596790	ExpressionStatement	"symbols_from_mach0 ( ret , obj -> mach0 , bf , 0 , 0 )"	1028:1:25131:25177	596754	3	True				
ANR	596791	CallExpression	"symbols_from_mach0 ( ret , obj -> mach0 , bf , 0 , 0 )"		596754	0					
ANR	596792	Callee	symbols_from_mach0		596754	0					
ANR	596793	Identifier	symbols_from_mach0		596754	0					
ANR	596794	ArgumentList	ret		596754	1					
ANR	596795	Argument	ret		596754	0					
ANR	596796	Identifier	ret		596754	0					
ANR	596797	Argument	obj -> mach0		596754	1					
ANR	596798	PtrMemberAccess	obj -> mach0		596754	0					
ANR	596799	Identifier	obj		596754	0					
ANR	596800	Identifier	mach0		596754	1					
ANR	596801	Argument	bf		596754	2					
ANR	596802	Identifier	bf		596754	0					
ANR	596803	Argument	0		596754	3					
ANR	596804	PrimaryExpression	0		596754	0					
ANR	596805	Argument	0		596754	4					
ANR	596806	PrimaryExpression	0		596754	0					
ANR	596807	IdentifierDeclStatement	HtPP * kernel_syms_by_addr = sdb_ht_new ( ) ;	1030:1:25181:25222	596754	4	True				
ANR	596808	IdentifierDecl	* kernel_syms_by_addr = sdb_ht_new ( )		596754	0					
ANR	596809	IdentifierDeclType	HtPP *		596754	0					
ANR	596810	Identifier	kernel_syms_by_addr		596754	1					
ANR	596811	AssignmentExpression	* kernel_syms_by_addr = sdb_ht_new ( )		596754	2		=			
ANR	596812	Identifier	kernel_syms_by_addr		596754	0					
ANR	596813	CallExpression	sdb_ht_new ( )		596754	1					
ANR	596814	Callee	sdb_ht_new		596754	0					
ANR	596815	Identifier	sdb_ht_new		596754	0					
ANR	596816	ArgumentList			596754	1					
ANR	596817	IfStatement	if ( ! kernel_syms_by_addr )		596754	5					
ANR	596818	Condition	! kernel_syms_by_addr	1031:5:25229:25248	596754	0	True				
ANR	596819	UnaryOperationExpression	! kernel_syms_by_addr		596754	0					
ANR	596820	UnaryOperator	!		596754	0					
ANR	596821	Identifier	kernel_syms_by_addr		596754	1					
ANR	596822	CompoundStatement		12:27:248:248	596754	1					
ANR	596823	ExpressionStatement	r_list_free ( ret )	1032:2:25255:25272	596754	0	True				
ANR	596824	CallExpression	r_list_free ( ret )		596754	0					
ANR	596825	Callee	r_list_free		596754	0					
ANR	596826	Identifier	r_list_free		596754	0					
ANR	596827	ArgumentList	ret		596754	1					
ANR	596828	Argument	ret		596754	0					
ANR	596829	Identifier	ret		596754	0					
ANR	596830	ReturnStatement	return NULL ;	1033:2:25276:25287	596754	1	True				
ANR	596831	Identifier	NULL		596754	0					
ANR	596832	IdentifierDeclStatement	RListIter * iter ;	1036:1:25294:25309	596754	6	True				
ANR	596833	IdentifierDecl	* iter		596754	0					
ANR	596834	IdentifierDeclType	RListIter *		596754	0					
ANR	596835	Identifier	iter		596754	1					
ANR	596836	IdentifierDeclStatement	RBinSymbol * sym ;	1037:1:25312:25327	596754	7	True				
ANR	596837	IdentifierDecl	* sym		596754	0					
ANR	596838	IdentifierDeclType	RBinSymbol *		596754	0					
ANR	596839	Identifier	sym		596754	1					
ANR	596840	IdentifierDeclStatement	ut64 enosys_addr = 0 ;	1038:1:25330:25350	596754	8	True				
ANR	596841	IdentifierDecl	enosys_addr = 0		596754	0					
ANR	596842	IdentifierDeclType	ut64		596754	0					
ANR	596843	Identifier	enosys_addr		596754	1					
ANR	596844	AssignmentExpression	enosys_addr = 0		596754	2		=			
ANR	596845	Identifier	enosys_addr		596754	0					
ANR	596846	PrimaryExpression	0		596754	1					
ANR	596847	Statement	r_list_foreach	1039:1:25353:25366	596754	9	True				
ANR	596848	Statement	(	1039:16:25368:25368	596754	10	True				
ANR	596849	Statement	ret	1039:17:25369:25371	596754	11	True				
ANR	596850	Statement	","	1039:20:25372:25372	596754	12	True				
ANR	596851	Statement	iter	1039:22:25374:25377	596754	13	True				
ANR	596852	Statement	","	1039:26:25378:25378	596754	14	True				
ANR	596853	Statement	sym	1039:28:25380:25382	596754	15	True				
ANR	596854	Statement	)	1039:31:25383:25383	596754	16	True				
ANR	596855	CompoundStatement		20:33:382:382	596754	17					
ANR	596856	Statement	const	1040:2:25389:25393	596754	0	True				
ANR	596857	Statement	char	1040:8:25395:25398	596754	1	True				
ANR	596858	Statement	*	1040:13:25400:25400	596754	2	True				
ANR	596859	Statement	key	1040:14:25401:25403	596754	3	True				
ANR	596860	Statement	=	1040:18:25405:25405	596754	4	True				
ANR	596861	Statement	sdb_fmt	1040:20:25407:25413	596754	5	True				
ANR	596862	Statement	(	1040:28:25415:25415	596754	6	True				
ANR	596863	Statement	"""%"""	1040:29:25416:25418	596754	7	True				
ANR	596864	Statement	PFMT64x	1040:32:25419:25425	596754	8	True				
ANR	596865	Statement	","	1040:39:25426:25426	596754	9	True				
ANR	596866	Statement	sym	1040:41:25428:25430	596754	10	True				
ANR	596867	Statement	->	1040:44:25431:25432	596754	11	True				
ANR	596868	Statement	vaddr	1040:46:25433:25437	596754	12	True				
ANR	596869	Statement	)	1040:51:25438:25438	596754	13	True				
ANR	596870	ExpressionStatement		1040:52:25439:25439	596754	14	True				
ANR	596871	ExpressionStatement	"sdb_ht_insert ( kernel_syms_by_addr , key , sym -> dname ? sym -> dname : sym -> name )"	1041:2:25443:25520	596754	15	True				
ANR	596872	CallExpression	"sdb_ht_insert ( kernel_syms_by_addr , key , sym -> dname ? sym -> dname : sym -> name )"		596754	0					
ANR	596873	Callee	sdb_ht_insert		596754	0					
ANR	596874	Identifier	sdb_ht_insert		596754	0					
ANR	596875	ArgumentList	kernel_syms_by_addr		596754	1					
ANR	596876	Argument	kernel_syms_by_addr		596754	0					
ANR	596877	Identifier	kernel_syms_by_addr		596754	0					
ANR	596878	Argument	key		596754	1					
ANR	596879	Identifier	key		596754	0					
ANR	596880	Argument	sym -> dname ? sym -> dname : sym -> name		596754	2					
ANR	596881	ConditionalExpression	sym -> dname ? sym -> dname : sym -> name		596754	0					
ANR	596882	Condition	sym -> dname		596754	0					
ANR	596883	PtrMemberAccess	sym -> dname		596754	0					
ANR	596884	Identifier	sym		596754	0					
ANR	596885	Identifier	dname		596754	1					
ANR	596886	PtrMemberAccess	sym -> dname		596754	1					
ANR	596887	Identifier	sym		596754	0					
ANR	596888	Identifier	dname		596754	1					
ANR	596889	PtrMemberAccess	sym -> name		596754	2					
ANR	596890	Identifier	sym		596754	0					
ANR	596891	Identifier	name		596754	1					
ANR	596892	IfStatement	"if ( ! enosys_addr && strstr ( sym -> name , ""enosys"" ) )"		596754	16					
ANR	596893	Condition	"! enosys_addr && strstr ( sym -> name , ""enosys"" )"	1042:6:25528:25571	596754	0	True				
ANR	596894	AndExpression	"! enosys_addr && strstr ( sym -> name , ""enosys"" )"		596754	0		&&			
ANR	596895	UnaryOperationExpression	! enosys_addr		596754	0					
ANR	596896	UnaryOperator	!		596754	0					
ANR	596897	Identifier	enosys_addr		596754	1					
ANR	596898	CallExpression	"strstr ( sym -> name , ""enosys"" )"		596754	1					
ANR	596899	Callee	strstr		596754	0					
ANR	596900	Identifier	strstr		596754	0					
ANR	596901	ArgumentList	sym -> name		596754	1					
ANR	596902	Argument	sym -> name		596754	0					
ANR	596903	PtrMemberAccess	sym -> name		596754	0					
ANR	596904	Identifier	sym		596754	0					
ANR	596905	Identifier	name		596754	1					
ANR	596906	Argument	"""enosys"""		596754	1					
ANR	596907	PrimaryExpression	"""enosys"""		596754	0					
ANR	596908	CompoundStatement		23:52:571:571	596754	1					
ANR	596909	ExpressionStatement	enosys_addr = sym -> vaddr	1043:3:25579:25603	596754	0	True				
ANR	596910	AssignmentExpression	enosys_addr = sym -> vaddr		596754	0		=			
ANR	596911	Identifier	enosys_addr		596754	0					
ANR	596912	PtrMemberAccess	sym -> vaddr		596754	1					
ANR	596913	Identifier	sym		596754	0					
ANR	596914	Identifier	vaddr		596754	1					
ANR	596915	IdentifierDeclStatement	"RList * syscalls = resolve_syscalls ( obj , enosys_addr ) ;"	1047:1:25614:25667	596754	18	True				
ANR	596916	IdentifierDecl	"* syscalls = resolve_syscalls ( obj , enosys_addr )"		596754	0					
ANR	596917	IdentifierDeclType	RList *		596754	0					
ANR	596918	Identifier	syscalls		596754	1					
ANR	596919	AssignmentExpression	"* syscalls = resolve_syscalls ( obj , enosys_addr )"		596754	2		=			
ANR	596920	Identifier	syscalls		596754	0					
ANR	596921	CallExpression	"resolve_syscalls ( obj , enosys_addr )"		596754	1					
ANR	596922	Callee	resolve_syscalls		596754	0					
ANR	596923	Identifier	resolve_syscalls		596754	0					
ANR	596924	ArgumentList	obj		596754	1					
ANR	596925	Argument	obj		596754	0					
ANR	596926	Identifier	obj		596754	0					
ANR	596927	Argument	enosys_addr		596754	1					
ANR	596928	Identifier	enosys_addr		596754	0					
ANR	596929	IfStatement	if ( syscalls )		596754	19					
ANR	596930	Condition	syscalls	1048:5:25674:25681	596754	0	True				
ANR	596931	Identifier	syscalls		596754	0					
ANR	596932	CompoundStatement		29:15:681:681	596754	1					
ANR	596933	Statement	r_list_foreach	1049:2:25688:25701	596754	0	True				
ANR	596934	Statement	(	1049:17:25703:25703	596754	1	True				
ANR	596935	Statement	syscalls	1049:18:25704:25711	596754	2	True				
ANR	596936	Statement	","	1049:26:25712:25712	596754	3	True				
ANR	596937	Statement	iter	1049:28:25714:25717	596754	4	True				
ANR	596938	Statement	","	1049:32:25718:25718	596754	5	True				
ANR	596939	Statement	sym	1049:34:25720:25722	596754	6	True				
ANR	596940	Statement	)	1049:37:25723:25723	596754	7	True				
ANR	596941	CompoundStatement		30:39:722:722	596754	8					
ANR	596942	Statement	const	1050:3:25730:25734	596754	0	True				
ANR	596943	Statement	char	1050:9:25736:25739	596754	1	True				
ANR	596944	Statement	*	1050:14:25741:25741	596754	2	True				
ANR	596945	Statement	key	1050:15:25742:25744	596754	3	True				
ANR	596946	Statement	=	1050:19:25746:25746	596754	4	True				
ANR	596947	Statement	sdb_fmt	1050:21:25748:25754	596754	5	True				
ANR	596948	Statement	(	1050:29:25756:25756	596754	6	True				
ANR	596949	Statement	"""%"""	1050:30:25757:25759	596754	7	True				
ANR	596950	Statement	PFMT64x	1050:33:25760:25766	596754	8	True				
ANR	596951	Statement	","	1050:40:25767:25767	596754	9	True				
ANR	596952	Statement	sym	1050:42:25769:25771	596754	10	True				
ANR	596953	Statement	->	1050:45:25772:25773	596754	11	True				
ANR	596954	Statement	vaddr	1050:47:25774:25778	596754	12	True				
ANR	596955	Statement	)	1050:52:25779:25779	596754	13	True				
ANR	596956	ExpressionStatement		1050:53:25780:25780	596754	14	True				
ANR	596957	ExpressionStatement	"sdb_ht_insert ( kernel_syms_by_addr , key , sym -> name )"	1051:3:25785:25836	596754	15	True				
ANR	596958	CallExpression	"sdb_ht_insert ( kernel_syms_by_addr , key , sym -> name )"		596754	0					
ANR	596959	Callee	sdb_ht_insert		596754	0					
ANR	596960	Identifier	sdb_ht_insert		596754	0					
ANR	596961	ArgumentList	kernel_syms_by_addr		596754	1					
ANR	596962	Argument	kernel_syms_by_addr		596754	0					
ANR	596963	Identifier	kernel_syms_by_addr		596754	0					
ANR	596964	Argument	key		596754	1					
ANR	596965	Identifier	key		596754	0					
ANR	596966	Argument	sym -> name		596754	2					
ANR	596967	PtrMemberAccess	sym -> name		596754	0					
ANR	596968	Identifier	sym		596754	0					
ANR	596969	Identifier	name		596754	1					
ANR	596970	ExpressionStatement	"r_list_append ( ret , sym )"	1052:3:25841:25865	596754	16	True				
ANR	596971	CallExpression	"r_list_append ( ret , sym )"		596754	0					
ANR	596972	Callee	r_list_append		596754	0					
ANR	596973	Identifier	r_list_append		596754	0					
ANR	596974	ArgumentList	ret		596754	1					
ANR	596975	Argument	ret		596754	0					
ANR	596976	Identifier	ret		596754	0					
ANR	596977	Argument	sym		596754	1					
ANR	596978	Identifier	sym		596754	0					
ANR	596979	ExpressionStatement	syscalls -> free = NULL	1054:2:25873:25894	596754	9	True				
ANR	596980	AssignmentExpression	syscalls -> free = NULL		596754	0		=			
ANR	596981	PtrMemberAccess	syscalls -> free		596754	0					
ANR	596982	Identifier	syscalls		596754	0					
ANR	596983	Identifier	free		596754	1					
ANR	596984	Identifier	NULL		596754	1					
ANR	596985	ExpressionStatement	r_list_free ( syscalls )	1055:2:25898:25920	596754	10	True				
ANR	596986	CallExpression	r_list_free ( syscalls )		596754	0					
ANR	596987	Callee	r_list_free		596754	0					
ANR	596988	Identifier	r_list_free		596754	0					
ANR	596989	ArgumentList	syscalls		596754	1					
ANR	596990	Argument	syscalls		596754	0					
ANR	596991	Identifier	syscalls		596754	0					
ANR	596992	IdentifierDeclStatement	RList * subsystem = resolve_mig_subsystem ( obj ) ;	1058:1:25927:25973	596754	20	True				
ANR	596993	IdentifierDecl	* subsystem = resolve_mig_subsystem ( obj )		596754	0					
ANR	596994	IdentifierDeclType	RList *		596754	0					
ANR	596995	Identifier	subsystem		596754	1					
ANR	596996	AssignmentExpression	* subsystem = resolve_mig_subsystem ( obj )		596754	2		=			
ANR	596997	Identifier	subsystem		596754	0					
ANR	596998	CallExpression	resolve_mig_subsystem ( obj )		596754	1					
ANR	596999	Callee	resolve_mig_subsystem		596754	0					
ANR	597000	Identifier	resolve_mig_subsystem		596754	0					
ANR	597001	ArgumentList	obj		596754	1					
ANR	597002	Argument	obj		596754	0					
ANR	597003	Identifier	obj		596754	0					
ANR	597004	IfStatement	if ( subsystem )		596754	21					
ANR	597005	Condition	subsystem	1059:5:25980:25988	596754	0	True				
ANR	597006	Identifier	subsystem		596754	0					
ANR	597007	CompoundStatement		40:16:988:988	596754	1					
ANR	597008	Statement	r_list_foreach	1060:2:25995:26008	596754	0	True				
ANR	597009	Statement	(	1060:17:26010:26010	596754	1	True				
ANR	597010	Statement	subsystem	1060:18:26011:26019	596754	2	True				
ANR	597011	Statement	","	1060:27:26020:26020	596754	3	True				
ANR	597012	Statement	iter	1060:29:26022:26025	596754	4	True				
ANR	597013	Statement	","	1060:33:26026:26026	596754	5	True				
ANR	597014	Statement	sym	1060:35:26028:26030	596754	6	True				
ANR	597015	Statement	)	1060:38:26031:26031	596754	7	True				
ANR	597016	CompoundStatement		41:40:1030:1030	596754	8					
ANR	597017	Statement	const	1061:3:26038:26042	596754	0	True				
ANR	597018	Statement	char	1061:9:26044:26047	596754	1	True				
ANR	597019	Statement	*	1061:14:26049:26049	596754	2	True				
ANR	597020	Statement	key	1061:15:26050:26052	596754	3	True				
ANR	597021	Statement	=	1061:19:26054:26054	596754	4	True				
ANR	597022	Statement	sdb_fmt	1061:21:26056:26062	596754	5	True				
ANR	597023	Statement	(	1061:29:26064:26064	596754	6	True				
ANR	597024	Statement	"""%"""	1061:30:26065:26067	596754	7	True				
ANR	597025	Statement	PFMT64x	1061:33:26068:26074	596754	8	True				
ANR	597026	Statement	","	1061:40:26075:26075	596754	9	True				
ANR	597027	Statement	sym	1061:42:26077:26079	596754	10	True				
ANR	597028	Statement	->	1061:45:26080:26081	596754	11	True				
ANR	597029	Statement	vaddr	1061:47:26082:26086	596754	12	True				
ANR	597030	Statement	)	1061:52:26087:26087	596754	13	True				
ANR	597031	ExpressionStatement		1061:53:26088:26088	596754	14	True				
ANR	597032	ExpressionStatement	"sdb_ht_insert ( kernel_syms_by_addr , key , sym -> name )"	1062:3:26093:26144	596754	15	True				
ANR	597033	CallExpression	"sdb_ht_insert ( kernel_syms_by_addr , key , sym -> name )"		596754	0					
ANR	597034	Callee	sdb_ht_insert		596754	0					
ANR	597035	Identifier	sdb_ht_insert		596754	0					
ANR	597036	ArgumentList	kernel_syms_by_addr		596754	1					
ANR	597037	Argument	kernel_syms_by_addr		596754	0					
ANR	597038	Identifier	kernel_syms_by_addr		596754	0					
ANR	597039	Argument	key		596754	1					
ANR	597040	Identifier	key		596754	0					
ANR	597041	Argument	sym -> name		596754	2					
ANR	597042	PtrMemberAccess	sym -> name		596754	0					
ANR	597043	Identifier	sym		596754	0					
ANR	597044	Identifier	name		596754	1					
ANR	597045	ExpressionStatement	"r_list_append ( ret , sym )"	1063:3:26149:26173	596754	16	True				
ANR	597046	CallExpression	"r_list_append ( ret , sym )"		596754	0					
ANR	597047	Callee	r_list_append		596754	0					
ANR	597048	Identifier	r_list_append		596754	0					
ANR	597049	ArgumentList	ret		596754	1					
ANR	597050	Argument	ret		596754	0					
ANR	597051	Identifier	ret		596754	0					
ANR	597052	Argument	sym		596754	1					
ANR	597053	Identifier	sym		596754	0					
ANR	597054	ExpressionStatement	subsystem -> free = NULL	1065:2:26181:26203	596754	9	True				
ANR	597055	AssignmentExpression	subsystem -> free = NULL		596754	0		=			
ANR	597056	PtrMemberAccess	subsystem -> free		596754	0					
ANR	597057	Identifier	subsystem		596754	0					
ANR	597058	Identifier	free		596754	1					
ANR	597059	Identifier	NULL		596754	1					
ANR	597060	ExpressionStatement	r_list_free ( subsystem )	1066:2:26207:26230	596754	10	True				
ANR	597061	CallExpression	r_list_free ( subsystem )		596754	0					
ANR	597062	Callee	r_list_free		596754	0					
ANR	597063	Identifier	r_list_free		596754	0					
ANR	597064	ArgumentList	subsystem		596754	1					
ANR	597065	Argument	subsystem		596754	0					
ANR	597066	Identifier	subsystem		596754	0					
ANR	597067	ExpressionStatement	ensure_kexts_initialized ( obj )	1069:1:26237:26267	596754	22	True				
ANR	597068	CallExpression	ensure_kexts_initialized ( obj )		596754	0					
ANR	597069	Callee	ensure_kexts_initialized		596754	0					
ANR	597070	Identifier	ensure_kexts_initialized		596754	0					
ANR	597071	ArgumentList	obj		596754	1					
ANR	597072	Argument	obj		596754	0					
ANR	597073	Identifier	obj		596754	0					
ANR	597074	IdentifierDeclStatement	RKext * kext ;	1071:1:26271:26282	596754	23	True				
ANR	597075	IdentifierDecl	* kext		596754	0					
ANR	597076	IdentifierDeclType	RKext *		596754	0					
ANR	597077	Identifier	kext		596754	1					
ANR	597078	IdentifierDeclStatement	int kiter ;	1072:1:26285:26294	596754	24	True				
ANR	597079	IdentifierDecl	kiter		596754	0					
ANR	597080	IdentifierDeclType	int		596754	0					
ANR	597081	Identifier	kiter		596754	1					
ANR	597082	IdentifierDeclStatement	ut64 * inits = NULL ;	1073:1:26297:26315	596754	25	True				
ANR	597083	IdentifierDecl	* inits = NULL		596754	0					
ANR	597084	IdentifierDeclType	ut64 *		596754	0					
ANR	597085	Identifier	inits		596754	1					
ANR	597086	AssignmentExpression	* inits = NULL		596754	2		=			
ANR	597087	Identifier	NULL		596754	0					
ANR	597088	Identifier	NULL		596754	1					
ANR	597089	IdentifierDeclStatement	ut64 * terms = NULL ;	1074:1:26318:26336	596754	26	True				
ANR	597090	IdentifierDecl	* terms = NULL		596754	0					
ANR	597091	IdentifierDeclType	ut64 *		596754	0					
ANR	597092	Identifier	terms		596754	1					
ANR	597093	AssignmentExpression	* terms = NULL		596754	2		=			
ANR	597094	Identifier	NULL		596754	0					
ANR	597095	Identifier	NULL		596754	1					
ANR	597096	Statement	r_kext_index_foreach	1075:1:26339:26358	596754	27	True				
ANR	597097	Statement	(	1075:22:26360:26360	596754	28	True				
ANR	597098	Statement	obj	1075:23:26361:26363	596754	29	True				
ANR	597099	Statement	->	1075:26:26364:26365	596754	30	True				
ANR	597100	Statement	kexts	1075:28:26366:26370	596754	31	True				
ANR	597101	Statement	","	1075:33:26371:26371	596754	32	True				
ANR	597102	Statement	kiter	1075:35:26373:26377	596754	33	True				
ANR	597103	Statement	","	1075:40:26378:26378	596754	34	True				
ANR	597104	Statement	kext	1075:42:26380:26383	596754	35	True				
ANR	597105	Statement	)	1075:46:26384:26384	596754	36	True				
ANR	597106	CompoundStatement		59:2:1477:1513	596754	37					
ANR	597107	IdentifierDeclStatement	ut8 magicbytes [ 4 ] ;	1076:2:26390:26407	596754	0	True				
ANR	597108	IdentifierDecl	magicbytes [ 4 ]		596754	0					
ANR	597109	IdentifierDeclType	ut8 [ 4 ]		596754	0					
ANR	597110	Identifier	magicbytes		596754	1					
ANR	597111	PrimaryExpression	4		596754	2					
ANR	597112	ExpressionStatement	"r_buf_read_at ( obj -> cache_buf , kext -> range . offset , magicbytes , 4 )"	1077:2:26411:26476	596754	1	True				
ANR	597113	CallExpression	"r_buf_read_at ( obj -> cache_buf , kext -> range . offset , magicbytes , 4 )"		596754	0					
ANR	597114	Callee	r_buf_read_at		596754	0					
ANR	597115	Identifier	r_buf_read_at		596754	0					
ANR	597116	ArgumentList	obj -> cache_buf		596754	1					
ANR	597117	Argument	obj -> cache_buf		596754	0					
ANR	597118	PtrMemberAccess	obj -> cache_buf		596754	0					
ANR	597119	Identifier	obj		596754	0					
ANR	597120	Identifier	cache_buf		596754	1					
ANR	597121	Argument	kext -> range . offset		596754	1					
ANR	597122	MemberAccess	kext -> range . offset		596754	0					
ANR	597123	PtrMemberAccess	kext -> range		596754	0					
ANR	597124	Identifier	kext		596754	0					
ANR	597125	Identifier	range		596754	1					
ANR	597126	Identifier	offset		596754	1					
ANR	597127	Argument	magicbytes		596754	2					
ANR	597128	Identifier	magicbytes		596754	0					
ANR	597129	Argument	4		596754	3					
ANR	597130	PrimaryExpression	4		596754	0					
ANR	597131	IdentifierDeclStatement	int magic = r_read_le32 ( magicbytes ) ;	1078:2:26480:26516	596754	2	True				
ANR	597132	IdentifierDecl	magic = r_read_le32 ( magicbytes )		596754	0					
ANR	597133	IdentifierDeclType	int		596754	0					
ANR	597134	Identifier	magic		596754	1					
ANR	597135	AssignmentExpression	magic = r_read_le32 ( magicbytes )		596754	2		=			
ANR	597136	Identifier	magic		596754	0					
ANR	597137	CallExpression	r_read_le32 ( magicbytes )		596754	1					
ANR	597138	Callee	r_read_le32		596754	0					
ANR	597139	Identifier	r_read_le32		596754	0					
ANR	597140	ArgumentList	magicbytes		596754	1					
ANR	597141	Argument	magicbytes		596754	0					
ANR	597142	Identifier	magicbytes		596754	0					
ANR	597143	SwitchStatement	switch ( magic )		596754	3					
ANR	597144	Condition	magic	1079:10:26528:26532	596754	0	True				
ANR	597145	Identifier	magic		596754	0					
ANR	597146	CompoundStatement		60:17:1532:1532	596754	1					
ANR	597147	Label	case MH_MAGIC_64 :	1080:2:26539:26555	596754	0	True				
ANR	597148	Identifier	MH_MAGIC_64		596754	0					
ANR	597149	ExpressionStatement	"symbols_from_mach0 ( ret , kext -> mach0 , bf , kext -> range . offset , r_list_length ( ret ) )"	1081:3:26560:26642	596754	1	True				
ANR	597150	CallExpression	"symbols_from_mach0 ( ret , kext -> mach0 , bf , kext -> range . offset , r_list_length ( ret ) )"		596754	0					
ANR	597151	Callee	symbols_from_mach0		596754	0					
ANR	597152	Identifier	symbols_from_mach0		596754	0					
ANR	597153	ArgumentList	ret		596754	1					
ANR	597154	Argument	ret		596754	0					
ANR	597155	Identifier	ret		596754	0					
ANR	597156	Argument	kext -> mach0		596754	1					
ANR	597157	PtrMemberAccess	kext -> mach0		596754	0					
ANR	597158	Identifier	kext		596754	0					
ANR	597159	Identifier	mach0		596754	1					
ANR	597160	Argument	bf		596754	2					
ANR	597161	Identifier	bf		596754	0					
ANR	597162	Argument	kext -> range . offset		596754	3					
ANR	597163	MemberAccess	kext -> range . offset		596754	0					
ANR	597164	PtrMemberAccess	kext -> range		596754	0					
ANR	597165	Identifier	kext		596754	0					
ANR	597166	Identifier	range		596754	1					
ANR	597167	Identifier	offset		596754	1					
ANR	597168	Argument	r_list_length ( ret )		596754	4					
ANR	597169	CallExpression	r_list_length ( ret )		596754	0					
ANR	597170	Callee	r_list_length		596754	0					
ANR	597171	Identifier	r_list_length		596754	0					
ANR	597172	ArgumentList	ret		596754	1					
ANR	597173	Argument	ret		596754	0					
ANR	597174	Identifier	ret		596754	0					
ANR	597175	ExpressionStatement	"symbols_from_stubs ( ret , kernel_syms_by_addr , obj , bf , kext , r_list_length ( ret ) )"	1082:3:26647:26728	596754	2	True				
ANR	597176	CallExpression	"symbols_from_stubs ( ret , kernel_syms_by_addr , obj , bf , kext , r_list_length ( ret ) )"		596754	0					
ANR	597177	Callee	symbols_from_stubs		596754	0					
ANR	597178	Identifier	symbols_from_stubs		596754	0					
ANR	597179	ArgumentList	ret		596754	1					
ANR	597180	Argument	ret		596754	0					
ANR	597181	Identifier	ret		596754	0					
ANR	597182	Argument	kernel_syms_by_addr		596754	1					
ANR	597183	Identifier	kernel_syms_by_addr		596754	0					
ANR	597184	Argument	obj		596754	2					
ANR	597185	Identifier	obj		596754	0					
ANR	597186	Argument	bf		596754	3					
ANR	597187	Identifier	bf		596754	0					
ANR	597188	Argument	kext		596754	4					
ANR	597189	Identifier	kext		596754	0					
ANR	597190	Argument	r_list_length ( ret )		596754	5					
ANR	597191	CallExpression	r_list_length ( ret )		596754	0					
ANR	597192	Callee	r_list_length		596754	0					
ANR	597193	Identifier	r_list_length		596754	0					
ANR	597194	ArgumentList	ret		596754	1					
ANR	597195	Argument	ret		596754	0					
ANR	597196	Identifier	ret		596754	0					
ANR	597197	ExpressionStatement	"process_constructors ( obj , kext -> mach0 , ret , kext -> range . offset , false , R_K_CONSTRUCTOR_TO_SYMBOL , kext_short_name ( kext ) )"	1083:3:26733:26855	596754	3	True				
ANR	597198	CallExpression	"process_constructors ( obj , kext -> mach0 , ret , kext -> range . offset , false , R_K_CONSTRUCTOR_TO_SYMBOL , kext_short_name ( kext ) )"		596754	0					
ANR	597199	Callee	process_constructors		596754	0					
ANR	597200	Identifier	process_constructors		596754	0					
ANR	597201	ArgumentList	obj		596754	1					
ANR	597202	Argument	obj		596754	0					
ANR	597203	Identifier	obj		596754	0					
ANR	597204	Argument	kext -> mach0		596754	1					
ANR	597205	PtrMemberAccess	kext -> mach0		596754	0					
ANR	597206	Identifier	kext		596754	0					
ANR	597207	Identifier	mach0		596754	1					
ANR	597208	Argument	ret		596754	2					
ANR	597209	Identifier	ret		596754	0					
ANR	597210	Argument	kext -> range . offset		596754	3					
ANR	597211	MemberAccess	kext -> range . offset		596754	0					
ANR	597212	PtrMemberAccess	kext -> range		596754	0					
ANR	597213	Identifier	kext		596754	0					
ANR	597214	Identifier	range		596754	1					
ANR	597215	Identifier	offset		596754	1					
ANR	597216	Argument	false		596754	4					
ANR	597217	Identifier	false		596754	0					
ANR	597218	Argument	R_K_CONSTRUCTOR_TO_SYMBOL		596754	5					
ANR	597219	Identifier	R_K_CONSTRUCTOR_TO_SYMBOL		596754	0					
ANR	597220	Argument	kext_short_name ( kext )		596754	6					
ANR	597221	CallExpression	kext_short_name ( kext )		596754	0					
ANR	597222	Callee	kext_short_name		596754	0					
ANR	597223	Identifier	kext_short_name		596754	0					
ANR	597224	ArgumentList	kext		596754	1					
ANR	597225	Argument	kext		596754	0					
ANR	597226	Identifier	kext		596754	0					
ANR	597227	ExpressionStatement	"process_kmod_init_term ( obj , kext , ret , & inits , & terms )"	1084:3:26860:26915	596754	4	True				
ANR	597228	CallExpression	"process_kmod_init_term ( obj , kext , ret , & inits , & terms )"		596754	0					
ANR	597229	Callee	process_kmod_init_term		596754	0					
ANR	597230	Identifier	process_kmod_init_term		596754	0					
ANR	597231	ArgumentList	obj		596754	1					
ANR	597232	Argument	obj		596754	0					
ANR	597233	Identifier	obj		596754	0					
ANR	597234	Argument	kext		596754	1					
ANR	597235	Identifier	kext		596754	0					
ANR	597236	Argument	ret		596754	2					
ANR	597237	Identifier	ret		596754	0					
ANR	597238	Argument	& inits		596754	3					
ANR	597239	UnaryOperationExpression	& inits		596754	0					
ANR	597240	UnaryOperator	&		596754	0					
ANR	597241	Identifier	inits		596754	1					
ANR	597242	Argument	& terms		596754	4					
ANR	597243	UnaryOperationExpression	& terms		596754	0					
ANR	597244	UnaryOperator	&		596754	0					
ANR	597245	Identifier	terms		596754	1					
ANR	597246	BreakStatement	break ;	1086:3:26921:26926	596754	5	True				
ANR	597247	Label	default :	1087:2:26930:26937	596754	6	True				
ANR	597248	Identifier	default		596754	0					
ANR	597249	ExpressionStatement	"eprintf ( ""Unknown sub-bin\\n"" )"	1088:3:26942:26971	596754	7	True				
ANR	597250	CallExpression	"eprintf ( ""Unknown sub-bin\\n"" )"		596754	0					
ANR	597251	Callee	eprintf		596754	0					
ANR	597252	Identifier	eprintf		596754	0					
ANR	597253	ArgumentList	"""Unknown sub-bin\\n"""		596754	1					
ANR	597254	Argument	"""Unknown sub-bin\\n"""		596754	0					
ANR	597255	PrimaryExpression	"""Unknown sub-bin\\n"""		596754	0					
ANR	597256	BreakStatement	break ;	1089:3:26976:26981	596754	8	True				
ANR	597257	ExpressionStatement	R_FREE ( inits )	1093:1:26992:27006	596754	38	True				
ANR	597258	CallExpression	R_FREE ( inits )		596754	0					
ANR	597259	Callee	R_FREE		596754	0					
ANR	597260	Identifier	R_FREE		596754	0					
ANR	597261	ArgumentList	inits		596754	1					
ANR	597262	Argument	inits		596754	0					
ANR	597263	Identifier	inits		596754	0					
ANR	597264	ExpressionStatement	R_FREE ( terms )	1094:1:27009:27023	596754	39	True				
ANR	597265	CallExpression	R_FREE ( terms )		596754	0					
ANR	597266	Callee	R_FREE		596754	0					
ANR	597267	Identifier	R_FREE		596754	0					
ANR	597268	ArgumentList	terms		596754	1					
ANR	597269	Argument	terms		596754	0					
ANR	597270	Identifier	terms		596754	0					
ANR	597271	ExpressionStatement	sdb_ht_free ( kernel_syms_by_addr )	1096:1:27027:27060	596754	40	True				
ANR	597272	CallExpression	sdb_ht_free ( kernel_syms_by_addr )		596754	0					
ANR	597273	Callee	sdb_ht_free		596754	0					
ANR	597274	Identifier	sdb_ht_free		596754	0					
ANR	597275	ArgumentList	kernel_syms_by_addr		596754	1					
ANR	597276	Argument	kernel_syms_by_addr		596754	0					
ANR	597277	Identifier	kernel_syms_by_addr		596754	0					
ANR	597278	ReturnStatement	return ret ;	1098:1:27064:27074	596754	41	True				
ANR	597279	Identifier	ret		596754	0					
ANR	597280	ReturnType	static RList *		596754	1					
ANR	597281	Identifier	symbols		596754	2					
ANR	597282	ParameterList	RBinFile * bf		596754	3					
ANR	597283	Parameter	RBinFile * bf	1020:22:24988:24999	596754	0	True				
ANR	597284	ParameterType	RBinFile *		596754	0					
ANR	597285	Identifier	bf		596754	1					
ANR	597286	CFGEntryNode	ENTRY		596754		True				
ANR	597287	CFGExitNode	EXIT		596754		True				
ANR	597288	Symbol	magic		596754						
ANR	597289	Symbol	subsystem		596754						
ANR	597290	Symbol	resolve_syscalls		596754						
ANR	597291	Symbol	bf -> o		596754						
ANR	597292	Symbol	terms		596754						
ANR	597293	Symbol	kiter		596754						
ANR	597294	Symbol	magicbytes		596754						
ANR	597295	Symbol	obj -> mach0		596754						
ANR	597296	Symbol	inits		596754						
ANR	597297	Symbol	enosys_addr		596754						
ANR	597298	Symbol	ret		596754						
ANR	597299	Symbol	NULL		596754						
ANR	597300	Symbol	r_read_le32		596754						
ANR	597301	Symbol	r_list_newf		596754						
ANR	597302	Symbol	kext_short_name		596754						
ANR	597303	Symbol	sym -> dname		596754						
ANR	597304	Symbol	sym -> vaddr		596754						
ANR	597305	Symbol	iter		596754						
ANR	597306	Symbol	& inits		596754						
ANR	597307	Symbol	kext -> range . offset		596754						
ANR	597308	Symbol	* kext		596754						
ANR	597309	Symbol	* syscalls		596754						
ANR	597310	Symbol	resolve_mig_subsystem		596754						
ANR	597311	Symbol	kext -> mach0		596754						
ANR	597312	Symbol	* sym		596754						
ANR	597313	Symbol	* * bf		596754						
ANR	597314	Symbol	strstr		596754						
ANR	597315	Symbol	sym -> name		596754						
ANR	597316	Symbol	subsystem -> free		596754						
ANR	597317	Symbol	kernel_syms_by_addr		596754						
ANR	597318	Symbol	bf		596754						
ANR	597319	Symbol	sym		596754						
ANR	597320	Symbol	* bf -> o		596754						
ANR	597321	Symbol	kext -> range		596754						
ANR	597322	Symbol	obj -> cache_buf		596754						
ANR	597323	Symbol	& terms		596754						
ANR	597324	Symbol	sdb_ht_new		596754						
ANR	597325	Symbol	free		596754						
ANR	597326	Symbol	key		596754						
ANR	597327	Symbol	bf -> o -> bin_obj		596754						
ANR	597328	Symbol	* subsystem		596754						
ANR	597329	Symbol	* obj		596754						
ANR	597330	Symbol	kext		596754						
ANR	597331	Symbol	syscalls -> free		596754						
ANR	597332	Symbol	false		596754						
ANR	597333	Symbol	* bf		596754						
ANR	597334	Symbol	obj		596754						
ANR	597335	Symbol	R_K_CONSTRUCTOR_TO_SYMBOL		596754						
ANR	597336	Symbol	r_list_length		596754						
ANR	597337	Symbol	syscalls		596754						
ANR	597338	DeclStmt									
ANR	597339	Decl							const struct symbol_t	const struct symbol_t *	symbols
ANR	597340	DeclStmt									
ANR	597341	Decl							int	int	i
ANR	597342	DeclStmt									
ANR	597343	Decl							RBinSymbol	RBinSymbol *	sym
ANR	597344	DeclStmt									
ANR	597345	Decl							char	char *	dn
ANR	597346	DeclStmt									
ANR	597347	Decl							char	char *	p
ANR	597348	ClassDef	_r_sysent	1149:8:28440:28562							
ANR	597349	DeclStmt									
ANR	597350	Decl							ut64	ut64	sy_call
ANR	597351	DeclStmt									
ANR	597352	Decl							ut64	ut64	sy_arg_munge32
ANR	597353	DeclStmt									
ANR	597354	Decl							st32	st32	sy_return_type
ANR	597355	DeclStmt									
ANR	597356	Decl							st16	st16	sy_narg
ANR	597357	DeclStmt									
ANR	597358	Decl							ut16	ut16	sy_arg_bytes
ANR	597359	DeclStmt									
ANR	597360	Decl							_r_sysent	_r_sysent	RSysEnt
ANR	597361	Function	resolve_syscalls	1157:0:28565:31596							
ANR	597362	FunctionDef	"resolve_syscalls (RKernelCacheObj * obj , ut64 enosys_addr)"		597361	0					
ANR	597363	CompoundStatement		1157:71:28636:31596	597361	0					
ANR	597364	IdentifierDeclStatement	struct section_t * sections = NULL ;	1158:1:28639:28672	597361	0	True				
ANR	597365	IdentifierDecl	* sections = NULL		597361	0					
ANR	597366	IdentifierDeclType	struct section_t *		597361	0					
ANR	597367	Identifier	sections		597361	1					
ANR	597368	AssignmentExpression	* sections = NULL		597361	2		=			
ANR	597369	Identifier	NULL		597361	0					
ANR	597370	Identifier	NULL		597361	1					
ANR	597371	IfStatement	if ( ! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) ) )		597361	1					
ANR	597372	Condition	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )	1159:5:28679:28725	597361	0	True				
ANR	597373	UnaryOperationExpression	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )		597361	0					
ANR	597374	UnaryOperator	!		597361	0					
ANR	597375	AssignmentExpression	sections = MACH0_ ( get_sections ) ( obj -> mach0 )		597361	1		=			
ANR	597376	Identifier	sections		597361	0					
ANR	597377	CallExpression	MACH0_ ( get_sections ) ( obj -> mach0 )		597361	1					
ANR	597378	Callee	MACH0_ ( get_sections )		597361	0					
ANR	597379	CallExpression	MACH0_ ( get_sections )		597361	0					
ANR	597380	Callee	MACH0_		597361	0					
ANR	597381	Identifier	MACH0_		597361	0					
ANR	597382	ArgumentList	get_sections		597361	1					
ANR	597383	Argument	get_sections		597361	0					
ANR	597384	Identifier	get_sections		597361	0					
ANR	597385	ArgumentList	obj -> mach0		597361	1					
ANR	597386	Argument	obj -> mach0		597361	0					
ANR	597387	PtrMemberAccess	obj -> mach0		597361	0					
ANR	597388	Identifier	obj		597361	0					
ANR	597389	Identifier	mach0		597361	1					
ANR	597390	CompoundStatement		3:54:91:91	597361	1					
ANR	597391	ReturnStatement	return NULL ;	1160:2:28732:28743	597361	0	True				
ANR	597392	Identifier	NULL		597361	0					
ANR	597393	IdentifierDeclStatement	RList * syscalls = NULL ;	1163:1:28750:28772	597361	2	True				
ANR	597394	IdentifierDecl	* syscalls = NULL		597361	0					
ANR	597395	IdentifierDeclType	RList *		597361	0					
ANR	597396	Identifier	syscalls		597361	1					
ANR	597397	AssignmentExpression	* syscalls = NULL		597361	2		=			
ANR	597398	Identifier	NULL		597361	0					
ANR	597399	Identifier	NULL		597361	1					
ANR	597400	IdentifierDeclStatement	RSyscall * syscall = NULL ;	1164:1:28775:28799	597361	3	True				
ANR	597401	IdentifierDecl	* syscall = NULL		597361	0					
ANR	597402	IdentifierDeclType	RSyscall *		597361	0					
ANR	597403	Identifier	syscall		597361	1					
ANR	597404	AssignmentExpression	* syscall = NULL		597361	2		=			
ANR	597405	Identifier	NULL		597361	0					
ANR	597406	Identifier	NULL		597361	1					
ANR	597407	IdentifierDeclStatement	ut8 * data_const = NULL ;	1165:1:28802:28824	597361	4	True				
ANR	597408	IdentifierDecl	* data_const = NULL		597361	0					
ANR	597409	IdentifierDeclType	ut8 *		597361	0					
ANR	597410	Identifier	data_const		597361	1					
ANR	597411	AssignmentExpression	* data_const = NULL		597361	2		=			
ANR	597412	Identifier	NULL		597361	0					
ANR	597413	Identifier	NULL		597361	1					
ANR	597414	IdentifierDeclStatement	"ut64 data_const_offset = 0 , data_const_size = 0 , data_const_vaddr = 0 ;"	1166:1:28827:28896	597361	5	True				
ANR	597415	IdentifierDecl	data_const_offset = 0		597361	0					
ANR	597416	IdentifierDeclType	ut64		597361	0					
ANR	597417	Identifier	data_const_offset		597361	1					
ANR	597418	AssignmentExpression	data_const_offset = 0		597361	2		=			
ANR	597419	Identifier	data_const_offset		597361	0					
ANR	597420	PrimaryExpression	0		597361	1					
ANR	597421	IdentifierDecl	data_const_size = 0		597361	1					
ANR	597422	IdentifierDeclType	ut64		597361	0					
ANR	597423	Identifier	data_const_size		597361	1					
ANR	597424	AssignmentExpression	data_const_size = 0		597361	2		=			
ANR	597425	Identifier	data_const_size		597361	0					
ANR	597426	PrimaryExpression	0		597361	1					
ANR	597427	IdentifierDecl	data_const_vaddr = 0		597361	2					
ANR	597428	IdentifierDeclType	ut64		597361	0					
ANR	597429	Identifier	data_const_vaddr		597361	1					
ANR	597430	AssignmentExpression	data_const_vaddr = 0		597361	2		=			
ANR	597431	Identifier	data_const_vaddr		597361	0					
ANR	597432	PrimaryExpression	0		597361	1					
ANR	597433	IdentifierDeclStatement	int i = 0 ;	1167:1:28899:28908	597361	6	True				
ANR	597434	IdentifierDecl	i = 0		597361	0					
ANR	597435	IdentifierDeclType	int		597361	0					
ANR	597436	Identifier	i		597361	1					
ANR	597437	AssignmentExpression	i = 0		597361	2		=			
ANR	597438	Identifier	i		597361	0					
ANR	597439	PrimaryExpression	0		597361	1					
ANR	597440	ForStatement	for ( ; ! sections [ i ] . last ; i ++ )		597361	7					
ANR	597441	Condition	! sections [ i ] . last	1168:8:28918:28934	597361	0	True				
ANR	597442	UnaryOperationExpression	! sections [ i ] . last		597361	0					
ANR	597443	UnaryOperator	!		597361	0					
ANR	597444	MemberAccess	sections [ i ] . last		597361	1					
ANR	597445	ArrayIndexing	sections [ i ]		597361	0					
ANR	597446	Identifier	sections		597361	0					
ANR	597447	Identifier	i		597361	1					
ANR	597448	Identifier	last		597361	1					
ANR	597449	PostIncDecOperationExpression	i ++	1168:27:28937:28939	597361	1	True				
ANR	597450	Identifier	i		597361	0					
ANR	597451	IncDec	++		597361	1					
ANR	597452	CompoundStatement		12:32:305:305	597361	2					
ANR	597453	IfStatement	"if ( strstr ( sections [ i ] . name , ""__DATA_CONST.__const"" ) )"		597361	0					
ANR	597454	Condition	"strstr ( sections [ i ] . name , ""__DATA_CONST.__const"" )"	1169:6:28950:28998	597361	0	True				
ANR	597455	CallExpression	"strstr ( sections [ i ] . name , ""__DATA_CONST.__const"" )"		597361	0					
ANR	597456	Callee	strstr		597361	0					
ANR	597457	Identifier	strstr		597361	0					
ANR	597458	ArgumentList	sections [ i ] . name		597361	1					
ANR	597459	Argument	sections [ i ] . name		597361	0					
ANR	597460	MemberAccess	sections [ i ] . name		597361	0					
ANR	597461	ArrayIndexing	sections [ i ]		597361	0					
ANR	597462	Identifier	sections		597361	0					
ANR	597463	Identifier	i		597361	1					
ANR	597464	Identifier	name		597361	1					
ANR	597465	Argument	"""__DATA_CONST.__const"""		597361	1					
ANR	597466	PrimaryExpression	"""__DATA_CONST.__const"""		597361	0					
ANR	597467	CompoundStatement		13:57:364:364	597361	1					
ANR	597468	ExpressionStatement	data_const_offset = sections [ i ] . offset	1170:3:29006:29044	597361	0	True				
ANR	597469	AssignmentExpression	data_const_offset = sections [ i ] . offset		597361	0		=			
ANR	597470	Identifier	data_const_offset		597361	0					
ANR	597471	MemberAccess	sections [ i ] . offset		597361	1					
ANR	597472	ArrayIndexing	sections [ i ]		597361	0					
ANR	597473	Identifier	sections		597361	0					
ANR	597474	Identifier	i		597361	1					
ANR	597475	Identifier	offset		597361	1					
ANR	597476	ExpressionStatement	data_const_size = sections [ i ] . size	1171:3:29049:29083	597361	1	True				
ANR	597477	AssignmentExpression	data_const_size = sections [ i ] . size		597361	0		=			
ANR	597478	Identifier	data_const_size		597361	0					
ANR	597479	MemberAccess	sections [ i ] . size		597361	1					
ANR	597480	ArrayIndexing	sections [ i ]		597361	0					
ANR	597481	Identifier	sections		597361	0					
ANR	597482	Identifier	i		597361	1					
ANR	597483	Identifier	size		597361	1					
ANR	597484	ExpressionStatement	data_const_vaddr = K_PPTR ( sections [ i ] . addr )	1172:3:29088:29132	597361	2	True				
ANR	597485	AssignmentExpression	data_const_vaddr = K_PPTR ( sections [ i ] . addr )		597361	0		=			
ANR	597486	Identifier	data_const_vaddr		597361	0					
ANR	597487	CallExpression	K_PPTR ( sections [ i ] . addr )		597361	1					
ANR	597488	Callee	K_PPTR		597361	0					
ANR	597489	Identifier	K_PPTR		597361	0					
ANR	597490	ArgumentList	sections [ i ] . addr		597361	1					
ANR	597491	Argument	sections [ i ] . addr		597361	0					
ANR	597492	MemberAccess	sections [ i ] . addr		597361	0					
ANR	597493	ArrayIndexing	sections [ i ]		597361	0					
ANR	597494	Identifier	sections		597361	0					
ANR	597495	Identifier	i		597361	1					
ANR	597496	Identifier	addr		597361	1					
ANR	597497	BreakStatement	break ;	1173:3:29137:29142	597361	3	True				
ANR	597498	IfStatement	if ( ! data_const_offset || ! data_const_size || ! data_const_vaddr )		597361	8					
ANR	597499	Condition	! data_const_offset || ! data_const_size || ! data_const_vaddr	1177:5:29157:29215	597361	0	True				
ANR	597500	OrExpression	! data_const_offset || ! data_const_size || ! data_const_vaddr		597361	0		||			
ANR	597501	UnaryOperationExpression	! data_const_offset		597361	0					
ANR	597502	UnaryOperator	!		597361	0					
ANR	597503	Identifier	data_const_offset		597361	1					
ANR	597504	OrExpression	! data_const_size || ! data_const_vaddr		597361	1		||			
ANR	597505	UnaryOperationExpression	! data_const_size		597361	0					
ANR	597506	UnaryOperator	!		597361	0					
ANR	597507	Identifier	data_const_size		597361	1					
ANR	597508	UnaryOperationExpression	! data_const_vaddr		597361	1					
ANR	597509	UnaryOperator	!		597361	0					
ANR	597510	Identifier	data_const_vaddr		597361	1					
ANR	597511	CompoundStatement		21:66:581:581	597361	1					
ANR	597512	GotoStatement	goto beach ;	1178:2:29222:29232	597361	0	True				
ANR	597513	Identifier	beach		597361	0					
ANR	597514	ExpressionStatement	data_const = malloc ( data_const_size )	1181:1:29239:29276	597361	9	True				
ANR	597515	AssignmentExpression	data_const = malloc ( data_const_size )		597361	0		=			
ANR	597516	Identifier	data_const		597361	0					
ANR	597517	CallExpression	malloc ( data_const_size )		597361	1					
ANR	597518	Callee	malloc		597361	0					
ANR	597519	Identifier	malloc		597361	0					
ANR	597520	ArgumentList	data_const_size		597361	1					
ANR	597521	Argument	data_const_size		597361	0					
ANR	597522	Identifier	data_const_size		597361	0					
ANR	597523	IfStatement	if ( ! data_const )		597361	10					
ANR	597524	Condition	! data_const	1182:5:29283:29293	597361	0	True				
ANR	597525	UnaryOperationExpression	! data_const		597361	0					
ANR	597526	UnaryOperator	!		597361	0					
ANR	597527	Identifier	data_const		597361	1					
ANR	597528	CompoundStatement		26:18:659:659	597361	1					
ANR	597529	GotoStatement	goto beach ;	1183:2:29300:29310	597361	0	True				
ANR	597530	Identifier	beach		597361	0					
ANR	597531	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size ) < data_const_size )"		597361	11					
ANR	597532	Condition	"r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size ) < data_const_size"	1185:5:29320:29415	597361	0	True				
ANR	597533	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size ) < data_const_size"		597361	0		<			
ANR	597534	CallExpression	"r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size )"		597361	0					
ANR	597535	Callee	r_buf_read_at		597361	0					
ANR	597536	Identifier	r_buf_read_at		597361	0					
ANR	597537	ArgumentList	obj -> cache_buf		597361	1					
ANR	597538	Argument	obj -> cache_buf		597361	0					
ANR	597539	PtrMemberAccess	obj -> cache_buf		597361	0					
ANR	597540	Identifier	obj		597361	0					
ANR	597541	Identifier	cache_buf		597361	1					
ANR	597542	Argument	data_const_offset		597361	1					
ANR	597543	Identifier	data_const_offset		597361	0					
ANR	597544	Argument	data_const		597361	2					
ANR	597545	Identifier	data_const		597361	0					
ANR	597546	Argument	data_const_size		597361	3					
ANR	597547	Identifier	data_const_size		597361	0					
ANR	597548	Identifier	data_const_size		597361	1					
ANR	597549	CompoundStatement		29:103:781:781	597361	1					
ANR	597550	GotoStatement	goto beach ;	1186:2:29422:29432	597361	0	True				
ANR	597551	Identifier	beach		597361	0					
ANR	597552	IdentifierDeclStatement	ut8 * cursor = data_const ;	1189:1:29439:29463	597361	12	True				
ANR	597553	IdentifierDecl	* cursor = data_const		597361	0					
ANR	597554	IdentifierDeclType	ut8 *		597361	0					
ANR	597555	Identifier	cursor		597361	1					
ANR	597556	AssignmentExpression	* cursor = data_const		597361	2		=			
ANR	597557	Identifier	data_const		597361	0					
ANR	597558	Identifier	data_const		597361	1					
ANR	597559	IdentifierDeclStatement	ut8 * end = data_const + data_const_size ;	1190:1:29466:29505	597361	13	True				
ANR	597560	IdentifierDecl	* end = data_const + data_const_size		597361	0					
ANR	597561	IdentifierDeclType	ut8 *		597361	0					
ANR	597562	Identifier	end		597361	1					
ANR	597563	AssignmentExpression	* end = data_const + data_const_size		597361	2		=			
ANR	597564	Identifier	end		597361	0					
ANR	597565	AdditiveExpression	data_const + data_const_size		597361	1		+			
ANR	597566	Identifier	data_const		597361	0					
ANR	597567	Identifier	data_const_size		597361	1					
ANR	597568	WhileStatement	while ( cursor < end )		597361	14					
ANR	597569	Condition	cursor < end	1191:8:29515:29526	597361	0	True				
ANR	597570	RelationalExpression	cursor < end		597361	0		<			
ANR	597571	Identifier	cursor		597361	0					
ANR	597572	Identifier	end		597361	1					
ANR	597573	CompoundStatement		36:2:896:928	597361	1					
ANR	597574	IdentifierDeclStatement	ut64 test = r_read_le64 ( cursor ) ;	1192:2:29533:29565	597361	0	True				
ANR	597575	IdentifierDecl	test = r_read_le64 ( cursor )		597361	0					
ANR	597576	IdentifierDeclType	ut64		597361	0					
ANR	597577	Identifier	test		597361	1					
ANR	597578	AssignmentExpression	test = r_read_le64 ( cursor )		597361	2		=			
ANR	597579	Identifier	test		597361	0					
ANR	597580	CallExpression	r_read_le64 ( cursor )		597361	1					
ANR	597581	Callee	r_read_le64		597361	0					
ANR	597582	Identifier	r_read_le64		597361	0					
ANR	597583	ArgumentList	cursor		597361	1					
ANR	597584	Argument	cursor		597361	0					
ANR	597585	Identifier	cursor		597361	0					
ANR	597586	IfStatement	if ( test == enosys_addr )		597361	1					
ANR	597587	Condition	test == enosys_addr	1193:6:29573:29591	597361	0	True				
ANR	597588	EqualityExpression	test == enosys_addr		597361	0		==			
ANR	597589	Identifier	test		597361	0					
ANR	597590	Identifier	enosys_addr		597361	1					
ANR	597591	CompoundStatement		37:27:957:957	597361	1					
ANR	597592	BreakStatement	break ;	1194:3:29599:29604	597361	0	True				
ANR	597593	ExpressionStatement	cursor += 8	1196:2:29612:29623	597361	2	True				
ANR	597594	AssignmentExpression	cursor += 8		597361	0		+=			
ANR	597595	Identifier	cursor		597361	0					
ANR	597596	PrimaryExpression	8		597361	1					
ANR	597597	IfStatement	if ( cursor >= end )		597361	15					
ANR	597598	Condition	cursor >= end	1199:5:29634:29646	597361	0	True				
ANR	597599	RelationalExpression	cursor >= end		597361	0		>=			
ANR	597600	Identifier	cursor		597361	0					
ANR	597601	Identifier	end		597361	1					
ANR	597602	CompoundStatement		43:20:1012:1012	597361	1					
ANR	597603	GotoStatement	goto beach ;	1200:2:29653:29663	597361	0	True				
ANR	597604	Identifier	beach		597361	0					
ANR	597605	ExpressionStatement	cursor -= 24	1203:1:29670:29682	597361	16	True				
ANR	597606	AssignmentExpression	cursor -= 24		597361	0		-=			
ANR	597607	Identifier	cursor		597361	0					
ANR	597608	PrimaryExpression	24		597361	1					
ANR	597609	WhileStatement	while ( cursor >= data_const )		597361	17					
ANR	597610	Condition	cursor >= data_const	1204:8:29692:29711	597361	0	True				
ANR	597611	RelationalExpression	cursor >= data_const		597361	0		>=			
ANR	597612	Identifier	cursor		597361	0					
ANR	597613	Identifier	data_const		597361	1					
ANR	597614	CompoundStatement		51:2:1154:1188	597361	1					
ANR	597615	IdentifierDeclStatement	ut64 addr = r_read_le64 ( cursor ) ;	1205:2:29718:29750	597361	0	True				
ANR	597616	IdentifierDecl	addr = r_read_le64 ( cursor )		597361	0					
ANR	597617	IdentifierDeclType	ut64		597361	0					
ANR	597618	Identifier	addr		597361	1					
ANR	597619	AssignmentExpression	addr = r_read_le64 ( cursor )		597361	2		=			
ANR	597620	Identifier	addr		597361	0					
ANR	597621	CallExpression	r_read_le64 ( cursor )		597361	1					
ANR	597622	Callee	r_read_le64		597361	0					
ANR	597623	Identifier	r_read_le64		597361	0					
ANR	597624	ArgumentList	cursor		597361	1					
ANR	597625	Argument	cursor		597361	0					
ANR	597626	Identifier	cursor		597361	0					
ANR	597627	IdentifierDeclStatement	ut64 x = r_read_le64 ( cursor + 8 ) ;	1206:2:29754:29787	597361	1	True				
ANR	597628	IdentifierDecl	x = r_read_le64 ( cursor + 8 )		597361	0					
ANR	597629	IdentifierDeclType	ut64		597361	0					
ANR	597630	Identifier	x		597361	1					
ANR	597631	AssignmentExpression	x = r_read_le64 ( cursor + 8 )		597361	2		=			
ANR	597632	Identifier	x		597361	0					
ANR	597633	CallExpression	r_read_le64 ( cursor + 8 )		597361	1					
ANR	597634	Callee	r_read_le64		597361	0					
ANR	597635	Identifier	r_read_le64		597361	0					
ANR	597636	ArgumentList	cursor + 8		597361	1					
ANR	597637	Argument	cursor + 8		597361	0					
ANR	597638	AdditiveExpression	cursor + 8		597361	0		+			
ANR	597639	Identifier	cursor		597361	0					
ANR	597640	PrimaryExpression	8		597361	1					
ANR	597641	IdentifierDeclStatement	ut64 y = r_read_le64 ( cursor + 16 ) ;	1207:2:29791:29825	597361	2	True				
ANR	597642	IdentifierDecl	y = r_read_le64 ( cursor + 16 )		597361	0					
ANR	597643	IdentifierDeclType	ut64		597361	0					
ANR	597644	Identifier	y		597361	1					
ANR	597645	AssignmentExpression	y = r_read_le64 ( cursor + 16 )		597361	2		=			
ANR	597646	Identifier	y		597361	0					
ANR	597647	CallExpression	r_read_le64 ( cursor + 16 )		597361	1					
ANR	597648	Callee	r_read_le64		597361	0					
ANR	597649	Identifier	r_read_le64		597361	0					
ANR	597650	ArgumentList	cursor + 16		597361	1					
ANR	597651	Argument	cursor + 16		597361	0					
ANR	597652	AdditiveExpression	cursor + 16		597361	0		+			
ANR	597653	Identifier	cursor		597361	0					
ANR	597654	PrimaryExpression	16		597361	1					
ANR	597655	IfStatement	if ( IS_KERNEL_ADDR ( addr ) && ( x == 0 || IS_KERNEL_ADDR ( x ) ) && ( y != 0 && ! IS_KERNEL_ADDR ( y ) ) )		597361	3					
ANR	597656	Condition	IS_KERNEL_ADDR ( addr ) && ( x == 0 || IS_KERNEL_ADDR ( x ) ) && ( y != 0 && ! IS_KERNEL_ADDR ( y ) )	1209:6:29834:29929	597361	0	True				
ANR	597657	AndExpression	IS_KERNEL_ADDR ( addr ) && ( x == 0 || IS_KERNEL_ADDR ( x ) ) && ( y != 0 && ! IS_KERNEL_ADDR ( y ) )		597361	0		&&			
ANR	597658	CallExpression	IS_KERNEL_ADDR ( addr )		597361	0					
ANR	597659	Callee	IS_KERNEL_ADDR		597361	0					
ANR	597660	Identifier	IS_KERNEL_ADDR		597361	0					
ANR	597661	ArgumentList	addr		597361	1					
ANR	597662	Argument	addr		597361	0					
ANR	597663	Identifier	addr		597361	0					
ANR	597664	AndExpression	( x == 0 || IS_KERNEL_ADDR ( x ) ) && ( y != 0 && ! IS_KERNEL_ADDR ( y ) )		597361	1		&&			
ANR	597665	OrExpression	x == 0 || IS_KERNEL_ADDR ( x )		597361	0		||			
ANR	597666	EqualityExpression	x == 0		597361	0		==			
ANR	597667	Identifier	x		597361	0					
ANR	597668	PrimaryExpression	0		597361	1					
ANR	597669	CallExpression	IS_KERNEL_ADDR ( x )		597361	1					
ANR	597670	Callee	IS_KERNEL_ADDR		597361	0					
ANR	597671	Identifier	IS_KERNEL_ADDR		597361	0					
ANR	597672	ArgumentList	x		597361	1					
ANR	597673	Argument	x		597361	0					
ANR	597674	Identifier	x		597361	0					
ANR	597675	AndExpression	y != 0 && ! IS_KERNEL_ADDR ( y )		597361	1		&&			
ANR	597676	EqualityExpression	y != 0		597361	0		!=			
ANR	597677	Identifier	y		597361	0					
ANR	597678	PrimaryExpression	0		597361	1					
ANR	597679	UnaryOperationExpression	! IS_KERNEL_ADDR ( y )		597361	1					
ANR	597680	UnaryOperator	!		597361	0					
ANR	597681	CallExpression	IS_KERNEL_ADDR ( y )		597361	1					
ANR	597682	Callee	IS_KERNEL_ADDR		597361	0					
ANR	597683	Identifier	IS_KERNEL_ADDR		597361	0					
ANR	597684	ArgumentList	y		597361	1					
ANR	597685	Argument	y		597361	0					
ANR	597686	Identifier	y		597361	0					
ANR	597687	CompoundStatement		55:36:1295:1295	597361	1					
ANR	597688	ExpressionStatement	cursor -= 24	1212:3:29937:29949	597361	0	True				
ANR	597689	AssignmentExpression	cursor -= 24		597361	0		-=			
ANR	597690	Identifier	cursor		597361	0					
ANR	597691	PrimaryExpression	24		597361	1					
ANR	597692	ContinueStatement	continue ;	1213:3:29954:29962	597361	1	True				
ANR	597693	ExpressionStatement	cursor += 24	1216:2:29971:29983	597361	4	True				
ANR	597694	AssignmentExpression	cursor += 24		597361	0		+=			
ANR	597695	Identifier	cursor		597361	0					
ANR	597696	PrimaryExpression	24		597361	1					
ANR	597697	BreakStatement	break ;	1217:2:29987:29992	597361	5	True				
ANR	597698	IfStatement	if ( cursor < data_const )		597361	18					
ANR	597699	Condition	cursor < data_const	1220:5:30003:30021	597361	0	True				
ANR	597700	RelationalExpression	cursor < data_const		597361	0		<			
ANR	597701	Identifier	cursor		597361	0					
ANR	597702	Identifier	data_const		597361	1					
ANR	597703	CompoundStatement		64:26:1387:1387	597361	1					
ANR	597704	GotoStatement	goto beach ;	1221:2:30028:30038	597361	0	True				
ANR	597705	Identifier	beach		597361	0					
ANR	597706	ExpressionStatement	syscalls = r_list_newf ( r_bin_symbol_free )	1224:1:30045:30087	597361	19	True				
ANR	597707	AssignmentExpression	syscalls = r_list_newf ( r_bin_symbol_free )		597361	0		=			
ANR	597708	Identifier	syscalls		597361	0					
ANR	597709	CallExpression	r_list_newf ( r_bin_symbol_free )		597361	1					
ANR	597710	Callee	r_list_newf		597361	0					
ANR	597711	Identifier	r_list_newf		597361	0					
ANR	597712	ArgumentList	r_bin_symbol_free		597361	1					
ANR	597713	Argument	r_bin_symbol_free		597361	0					
ANR	597714	Identifier	r_bin_symbol_free		597361	0					
ANR	597715	IfStatement	if ( ! syscalls )		597361	20					
ANR	597716	Condition	! syscalls	1225:5:30094:30102	597361	0	True				
ANR	597717	UnaryOperationExpression	! syscalls		597361	0					
ANR	597718	UnaryOperator	!		597361	0					
ANR	597719	Identifier	syscalls		597361	1					
ANR	597720	CompoundStatement		69:16:1468:1468	597361	1					
ANR	597721	GotoStatement	goto beach ;	1226:2:30109:30119	597361	0	True				
ANR	597722	Identifier	beach		597361	0					
ANR	597723	ExpressionStatement	syscall = r_syscall_new ( )	1229:1:30126:30152	597361	21	True				
ANR	597724	AssignmentExpression	syscall = r_syscall_new ( )		597361	0		=			
ANR	597725	Identifier	syscall		597361	0					
ANR	597726	CallExpression	r_syscall_new ( )		597361	1					
ANR	597727	Callee	r_syscall_new		597361	0					
ANR	597728	Identifier	r_syscall_new		597361	0					
ANR	597729	ArgumentList			597361	1					
ANR	597730	IfStatement	if ( ! syscall )		597361	22					
ANR	597731	Condition	! syscall	1230:5:30159:30166	597361	0	True				
ANR	597732	UnaryOperationExpression	! syscall		597361	0					
ANR	597733	UnaryOperator	!		597361	0					
ANR	597734	Identifier	syscall		597361	1					
ANR	597735	CompoundStatement		74:15:1532:1532	597361	1					
ANR	597736	GotoStatement	goto beach ;	1231:2:30173:30183	597361	0	True				
ANR	597737	Identifier	beach		597361	0					
ANR	597738	ExpressionStatement	"r_syscall_setup ( syscall , ""arm"" , 64 , NULL , ""ios"" )"	1233:1:30189:30238	597361	23	True				
ANR	597739	CallExpression	"r_syscall_setup ( syscall , ""arm"" , 64 , NULL , ""ios"" )"		597361	0					
ANR	597740	Callee	r_syscall_setup		597361	0					
ANR	597741	Identifier	r_syscall_setup		597361	0					
ANR	597742	ArgumentList	syscall		597361	1					
ANR	597743	Argument	syscall		597361	0					
ANR	597744	Identifier	syscall		597361	0					
ANR	597745	Argument	"""arm"""		597361	1					
ANR	597746	PrimaryExpression	"""arm"""		597361	0					
ANR	597747	Argument	64		597361	2					
ANR	597748	PrimaryExpression	64		597361	0					
ANR	597749	Argument	NULL		597361	3					
ANR	597750	Identifier	NULL		597361	0					
ANR	597751	Argument	"""ios"""		597361	4					
ANR	597752	PrimaryExpression	"""ios"""		597361	0					
ANR	597753	IfStatement	if ( ! syscall -> db )		597361	24					
ANR	597754	Condition	! syscall -> db	1234:5:30245:30256	597361	0	True				
ANR	597755	UnaryOperationExpression	! syscall -> db		597361	0					
ANR	597756	UnaryOperator	!		597361	0					
ANR	597757	PtrMemberAccess	syscall -> db		597361	1					
ANR	597758	Identifier	syscall		597361	0					
ANR	597759	Identifier	db		597361	1					
ANR	597760	CompoundStatement		78:19:1622:1622	597361	1					
ANR	597761	ExpressionStatement	r_syscall_free ( syscall )	1235:2:30263:30287	597361	0	True				
ANR	597762	CallExpression	r_syscall_free ( syscall )		597361	0					
ANR	597763	Callee	r_syscall_free		597361	0					
ANR	597764	Identifier	r_syscall_free		597361	0					
ANR	597765	ArgumentList	syscall		597361	1					
ANR	597766	Argument	syscall		597361	0					
ANR	597767	Identifier	syscall		597361	0					
ANR	597768	GotoStatement	goto beach ;	1236:2:30291:30301	597361	1	True				
ANR	597769	Identifier	beach		597361	0					
ANR	597770	IdentifierDeclStatement	ut64 sysent_vaddr = cursor - data_const + data_const_vaddr ;	1239:1:30308:30366	597361	25	True				
ANR	597771	IdentifierDecl	sysent_vaddr = cursor - data_const + data_const_vaddr		597361	0					
ANR	597772	IdentifierDeclType	ut64		597361	0					
ANR	597773	Identifier	sysent_vaddr		597361	1					
ANR	597774	AssignmentExpression	sysent_vaddr = cursor - data_const + data_const_vaddr		597361	2		=			
ANR	597775	Identifier	sysent_vaddr		597361	0					
ANR	597776	AdditiveExpression	cursor - data_const + data_const_vaddr		597361	1		-			
ANR	597777	Identifier	cursor		597361	0					
ANR	597778	AdditiveExpression	data_const + data_const_vaddr		597361	1		+			
ANR	597779	Identifier	data_const		597361	0					
ANR	597780	Identifier	data_const_vaddr		597361	1					
ANR	597781	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1241:1:30370:30407	597361	26	True				
ANR	597782	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		597361	0					
ANR	597783	IdentifierDeclType	RBinSymbol *		597361	0					
ANR	597784	Identifier	sym		597361	1					
ANR	597785	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		597361	2		=			
ANR	597786	Identifier	sym		597361	0					
ANR	597787	CallExpression	R_NEW0 ( RBinSymbol )		597361	1					
ANR	597788	Callee	R_NEW0		597361	0					
ANR	597789	Identifier	R_NEW0		597361	0					
ANR	597790	ArgumentList	RBinSymbol		597361	1					
ANR	597791	Argument	RBinSymbol		597361	0					
ANR	597792	Identifier	RBinSymbol		597361	0					
ANR	597793	IfStatement	if ( ! sym )		597361	27					
ANR	597794	Condition	! sym	1242:5:30414:30417	597361	0	True				
ANR	597795	UnaryOperationExpression	! sym		597361	0					
ANR	597796	UnaryOperator	!		597361	0					
ANR	597797	Identifier	sym		597361	1					
ANR	597798	CompoundStatement		86:11:1783:1783	597361	1					
ANR	597799	GotoStatement	goto beach ;	1243:2:30424:30434	597361	0	True				
ANR	597800	Identifier	beach		597361	0					
ANR	597801	ExpressionStatement	"sym -> name = r_str_newf ( ""sysent"" )"	1246:1:30441:30474	597361	28	True				
ANR	597802	AssignmentExpression	"sym -> name = r_str_newf ( ""sysent"" )"		597361	0		=			
ANR	597803	PtrMemberAccess	sym -> name		597361	0					
ANR	597804	Identifier	sym		597361	0					
ANR	597805	Identifier	name		597361	1					
ANR	597806	CallExpression	"r_str_newf ( ""sysent"" )"		597361	1					
ANR	597807	Callee	r_str_newf		597361	0					
ANR	597808	Identifier	r_str_newf		597361	0					
ANR	597809	ArgumentList	"""sysent"""		597361	1					
ANR	597810	Argument	"""sysent"""		597361	0					
ANR	597811	PrimaryExpression	"""sysent"""		597361	0					
ANR	597812	ExpressionStatement	sym -> vaddr = sysent_vaddr	1247:1:30477:30502	597361	29	True				
ANR	597813	AssignmentExpression	sym -> vaddr = sysent_vaddr		597361	0		=			
ANR	597814	PtrMemberAccess	sym -> vaddr		597361	0					
ANR	597815	Identifier	sym		597361	0					
ANR	597816	Identifier	vaddr		597361	1					
ANR	597817	Identifier	sysent_vaddr		597361	1					
ANR	597818	ExpressionStatement	sym -> paddr = cursor - data_const + data_const_offset	1248:1:30505:30557	597361	30	True				
ANR	597819	AssignmentExpression	sym -> paddr = cursor - data_const + data_const_offset		597361	0		=			
ANR	597820	PtrMemberAccess	sym -> paddr		597361	0					
ANR	597821	Identifier	sym		597361	0					
ANR	597822	Identifier	paddr		597361	1					
ANR	597823	AdditiveExpression	cursor - data_const + data_const_offset		597361	1		-			
ANR	597824	Identifier	cursor		597361	0					
ANR	597825	AdditiveExpression	data_const + data_const_offset		597361	1		+			
ANR	597826	Identifier	data_const		597361	0					
ANR	597827	Identifier	data_const_offset		597361	1					
ANR	597828	ExpressionStatement	sym -> size = 0	1249:1:30560:30573	597361	31	True				
ANR	597829	AssignmentExpression	sym -> size = 0		597361	0		=			
ANR	597830	PtrMemberAccess	sym -> size		597361	0					
ANR	597831	Identifier	sym		597361	0					
ANR	597832	Identifier	size		597361	1					
ANR	597833	PrimaryExpression	0		597361	1					
ANR	597834	ExpressionStatement	"sym -> forwarder = r_str_const ( ""NONE"" )"	1250:1:30576:30613	597361	32	True				
ANR	597835	AssignmentExpression	"sym -> forwarder = r_str_const ( ""NONE"" )"		597361	0		=			
ANR	597836	PtrMemberAccess	sym -> forwarder		597361	0					
ANR	597837	Identifier	sym		597361	0					
ANR	597838	Identifier	forwarder		597361	1					
ANR	597839	CallExpression	"r_str_const ( ""NONE"" )"		597361	1					
ANR	597840	Callee	r_str_const		597361	0					
ANR	597841	Identifier	r_str_const		597361	0					
ANR	597842	ArgumentList	"""NONE"""		597361	1					
ANR	597843	Argument	"""NONE"""		597361	0					
ANR	597844	PrimaryExpression	"""NONE"""		597361	0					
ANR	597845	ExpressionStatement	"sym -> bind = r_str_const ( ""GLOBAL"" )"	1251:1:30616:30650	597361	33	True				
ANR	597846	AssignmentExpression	"sym -> bind = r_str_const ( ""GLOBAL"" )"		597361	0		=			
ANR	597847	PtrMemberAccess	sym -> bind		597361	0					
ANR	597848	Identifier	sym		597361	0					
ANR	597849	Identifier	bind		597361	1					
ANR	597850	CallExpression	"r_str_const ( ""GLOBAL"" )"		597361	1					
ANR	597851	Callee	r_str_const		597361	0					
ANR	597852	Identifier	r_str_const		597361	0					
ANR	597853	ArgumentList	"""GLOBAL"""		597361	1					
ANR	597854	Argument	"""GLOBAL"""		597361	0					
ANR	597855	PrimaryExpression	"""GLOBAL"""		597361	0					
ANR	597856	ExpressionStatement	"sym -> type = r_str_const ( ""OBJECT"" )"	1252:1:30653:30687	597361	34	True				
ANR	597857	AssignmentExpression	"sym -> type = r_str_const ( ""OBJECT"" )"		597361	0		=			
ANR	597858	PtrMemberAccess	sym -> type		597361	0					
ANR	597859	Identifier	sym		597361	0					
ANR	597860	Identifier	type		597361	1					
ANR	597861	CallExpression	"r_str_const ( ""OBJECT"" )"		597361	1					
ANR	597862	Callee	r_str_const		597361	0					
ANR	597863	Identifier	r_str_const		597361	0					
ANR	597864	ArgumentList	"""OBJECT"""		597361	1					
ANR	597865	Argument	"""OBJECT"""		597361	0					
ANR	597866	PrimaryExpression	"""OBJECT"""		597361	0					
ANR	597867	ExpressionStatement	"r_list_append ( syscalls , sym )"	1253:1:30690:30719	597361	35	True				
ANR	597868	CallExpression	"r_list_append ( syscalls , sym )"		597361	0					
ANR	597869	Callee	r_list_append		597361	0					
ANR	597870	Identifier	r_list_append		597361	0					
ANR	597871	ArgumentList	syscalls		597361	1					
ANR	597872	Argument	syscalls		597361	0					
ANR	597873	Identifier	syscalls		597361	0					
ANR	597874	Argument	sym		597361	1					
ANR	597875	Identifier	sym		597361	0					
ANR	597876	ExpressionStatement	i = 1	1255:1:30723:30728	597361	36	True				
ANR	597877	AssignmentExpression	i = 1		597361	0		=			
ANR	597878	Identifier	i		597361	0					
ANR	597879	PrimaryExpression	1		597361	1					
ANR	597880	ExpressionStatement	cursor += 24	1256:1:30731:30743	597361	37	True				
ANR	597881	AssignmentExpression	cursor += 24		597361	0		+=			
ANR	597882	Identifier	cursor		597361	0					
ANR	597883	PrimaryExpression	24		597361	1					
ANR	597884	IdentifierDeclStatement	int num_syscalls = sdb_count ( syscall -> db ) ;	1257:1:30746:30788	597361	38	True				
ANR	597885	IdentifierDecl	num_syscalls = sdb_count ( syscall -> db )		597361	0					
ANR	597886	IdentifierDeclType	int		597361	0					
ANR	597887	Identifier	num_syscalls		597361	1					
ANR	597888	AssignmentExpression	num_syscalls = sdb_count ( syscall -> db )		597361	2		=			
ANR	597889	Identifier	num_syscalls		597361	0					
ANR	597890	CallExpression	sdb_count ( syscall -> db )		597361	1					
ANR	597891	Callee	sdb_count		597361	0					
ANR	597892	Identifier	sdb_count		597361	0					
ANR	597893	ArgumentList	syscall -> db		597361	1					
ANR	597894	Argument	syscall -> db		597361	0					
ANR	597895	PtrMemberAccess	syscall -> db		597361	0					
ANR	597896	Identifier	syscall		597361	0					
ANR	597897	Identifier	db		597361	1					
ANR	597898	WhileStatement	while ( cursor < end && i < num_syscalls )		597361	39					
ANR	597899	Condition	cursor < end && i < num_syscalls	1258:8:30798:30829	597361	0	True				
ANR	597900	AndExpression	cursor < end && i < num_syscalls		597361	0		&&			
ANR	597901	RelationalExpression	cursor < end		597361	0		<			
ANR	597902	Identifier	cursor		597361	0					
ANR	597903	Identifier	end		597361	1					
ANR	597904	RelationalExpression	i < num_syscalls		597361	1		<			
ANR	597905	Identifier	i		597361	0					
ANR	597906	Identifier	num_syscalls		597361	1					
ANR	597907	CompoundStatement		104:2:2235:2288	597361	1					
ANR	597908	IdentifierDeclStatement	ut64 addr = r_read_le64 ( cursor ) ;	1259:2:30836:30868	597361	0	True				
ANR	597909	IdentifierDecl	addr = r_read_le64 ( cursor )		597361	0					
ANR	597910	IdentifierDeclType	ut64		597361	0					
ANR	597911	Identifier	addr		597361	1					
ANR	597912	AssignmentExpression	addr = r_read_le64 ( cursor )		597361	2		=			
ANR	597913	Identifier	addr		597361	0					
ANR	597914	CallExpression	r_read_le64 ( cursor )		597361	1					
ANR	597915	Callee	r_read_le64		597361	0					
ANR	597916	Identifier	r_read_le64		597361	0					
ANR	597917	ArgumentList	cursor		597361	1					
ANR	597918	Argument	cursor		597361	0					
ANR	597919	Identifier	cursor		597361	0					
ANR	597920	IdentifierDeclStatement	"RSyscallItem * item = r_syscall_get ( syscall , i , 0x80 ) ;"	1260:2:30872:30925	597361	1	True				
ANR	597921	IdentifierDecl	"* item = r_syscall_get ( syscall , i , 0x80 )"		597361	0					
ANR	597922	IdentifierDeclType	RSyscallItem *		597361	0					
ANR	597923	Identifier	item		597361	1					
ANR	597924	AssignmentExpression	"* item = r_syscall_get ( syscall , i , 0x80 )"		597361	2		=			
ANR	597925	Identifier	item		597361	0					
ANR	597926	CallExpression	"r_syscall_get ( syscall , i , 0x80 )"		597361	1					
ANR	597927	Callee	r_syscall_get		597361	0					
ANR	597928	Identifier	r_syscall_get		597361	0					
ANR	597929	ArgumentList	syscall		597361	1					
ANR	597930	Argument	syscall		597361	0					
ANR	597931	Identifier	syscall		597361	0					
ANR	597932	Argument	i		597361	1					
ANR	597933	Identifier	i		597361	0					
ANR	597934	Argument	0x80		597361	2					
ANR	597935	PrimaryExpression	0x80		597361	0					
ANR	597936	IfStatement	if ( item && item -> name )		597361	2					
ANR	597937	Condition	item && item -> name	1261:6:30933:30950	597361	0	True				
ANR	597938	AndExpression	item && item -> name		597361	0		&&			
ANR	597939	Identifier	item		597361	0					
ANR	597940	PtrMemberAccess	item -> name		597361	1					
ANR	597941	Identifier	item		597361	0					
ANR	597942	Identifier	name		597361	1					
ANR	597943	CompoundStatement		106:3:2321:2358	597361	1					
ANR	597944	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1262:3:30958:30995	597361	0	True				
ANR	597945	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		597361	0					
ANR	597946	IdentifierDeclType	RBinSymbol *		597361	0					
ANR	597947	Identifier	sym		597361	1					
ANR	597948	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		597361	2		=			
ANR	597949	Identifier	sym		597361	0					
ANR	597950	CallExpression	R_NEW0 ( RBinSymbol )		597361	1					
ANR	597951	Callee	R_NEW0		597361	0					
ANR	597952	Identifier	R_NEW0		597361	0					
ANR	597953	ArgumentList	RBinSymbol		597361	1					
ANR	597954	Argument	RBinSymbol		597361	0					
ANR	597955	Identifier	RBinSymbol		597361	0					
ANR	597956	IfStatement	if ( ! sym )		597361	1					
ANR	597957	Condition	! sym	1263:7:31004:31007	597361	0	True				
ANR	597958	UnaryOperationExpression	! sym		597361	0					
ANR	597959	UnaryOperator	!		597361	0					
ANR	597960	Identifier	sym		597361	1					
ANR	597961	CompoundStatement		107:13:2373:2373	597361	1					
ANR	597962	GotoStatement	goto beach ;	1264:4:31016:31026	597361	0	True				
ANR	597963	Identifier	beach		597361	0					
ANR	597964	ExpressionStatement	"sym -> name = r_str_newf ( ""syscall.%d.%s"" , i , item -> name )"	1267:3:31037:31092	597361	2	True				
ANR	597965	AssignmentExpression	"sym -> name = r_str_newf ( ""syscall.%d.%s"" , i , item -> name )"		597361	0		=			
ANR	597966	PtrMemberAccess	sym -> name		597361	0					
ANR	597967	Identifier	sym		597361	0					
ANR	597968	Identifier	name		597361	1					
ANR	597969	CallExpression	"r_str_newf ( ""syscall.%d.%s"" , i , item -> name )"		597361	1					
ANR	597970	Callee	r_str_newf		597361	0					
ANR	597971	Identifier	r_str_newf		597361	0					
ANR	597972	ArgumentList	"""syscall.%d.%s"""		597361	1					
ANR	597973	Argument	"""syscall.%d.%s"""		597361	0					
ANR	597974	PrimaryExpression	"""syscall.%d.%s"""		597361	0					
ANR	597975	Argument	i		597361	1					
ANR	597976	Identifier	i		597361	0					
ANR	597977	Argument	item -> name		597361	2					
ANR	597978	PtrMemberAccess	item -> name		597361	0					
ANR	597979	Identifier	item		597361	0					
ANR	597980	Identifier	name		597361	1					
ANR	597981	ExpressionStatement	sym -> vaddr = addr	1268:3:31097:31114	597361	3	True				
ANR	597982	AssignmentExpression	sym -> vaddr = addr		597361	0		=			
ANR	597983	PtrMemberAccess	sym -> vaddr		597361	0					
ANR	597984	Identifier	sym		597361	0					
ANR	597985	Identifier	vaddr		597361	1					
ANR	597986	Identifier	addr		597361	1					
ANR	597987	ExpressionStatement	sym -> paddr = addr	1269:3:31119:31136	597361	4	True				
ANR	597988	AssignmentExpression	sym -> paddr = addr		597361	0		=			
ANR	597989	PtrMemberAccess	sym -> paddr		597361	0					
ANR	597990	Identifier	sym		597361	0					
ANR	597991	Identifier	paddr		597361	1					
ANR	597992	Identifier	addr		597361	1					
ANR	597993	ExpressionStatement	sym -> size = 0	1270:3:31141:31154	597361	5	True				
ANR	597994	AssignmentExpression	sym -> size = 0		597361	0		=			
ANR	597995	PtrMemberAccess	sym -> size		597361	0					
ANR	597996	Identifier	sym		597361	0					
ANR	597997	Identifier	size		597361	1					
ANR	597998	PrimaryExpression	0		597361	1					
ANR	597999	ExpressionStatement	"sym -> forwarder = r_str_const ( ""NONE"" )"	1271:3:31159:31196	597361	6	True				
ANR	598000	AssignmentExpression	"sym -> forwarder = r_str_const ( ""NONE"" )"		597361	0		=			
ANR	598001	PtrMemberAccess	sym -> forwarder		597361	0					
ANR	598002	Identifier	sym		597361	0					
ANR	598003	Identifier	forwarder		597361	1					
ANR	598004	CallExpression	"r_str_const ( ""NONE"" )"		597361	1					
ANR	598005	Callee	r_str_const		597361	0					
ANR	598006	Identifier	r_str_const		597361	0					
ANR	598007	ArgumentList	"""NONE"""		597361	1					
ANR	598008	Argument	"""NONE"""		597361	0					
ANR	598009	PrimaryExpression	"""NONE"""		597361	0					
ANR	598010	ExpressionStatement	"sym -> bind = r_str_const ( ""GLOBAL"" )"	1272:3:31201:31235	597361	7	True				
ANR	598011	AssignmentExpression	"sym -> bind = r_str_const ( ""GLOBAL"" )"		597361	0		=			
ANR	598012	PtrMemberAccess	sym -> bind		597361	0					
ANR	598013	Identifier	sym		597361	0					
ANR	598014	Identifier	bind		597361	1					
ANR	598015	CallExpression	"r_str_const ( ""GLOBAL"" )"		597361	1					
ANR	598016	Callee	r_str_const		597361	0					
ANR	598017	Identifier	r_str_const		597361	0					
ANR	598018	ArgumentList	"""GLOBAL"""		597361	1					
ANR	598019	Argument	"""GLOBAL"""		597361	0					
ANR	598020	PrimaryExpression	"""GLOBAL"""		597361	0					
ANR	598021	ExpressionStatement	"sym -> type = r_str_const ( ""FUNC"" )"	1273:3:31240:31272	597361	8	True				
ANR	598022	AssignmentExpression	"sym -> type = r_str_const ( ""FUNC"" )"		597361	0		=			
ANR	598023	PtrMemberAccess	sym -> type		597361	0					
ANR	598024	Identifier	sym		597361	0					
ANR	598025	Identifier	type		597361	1					
ANR	598026	CallExpression	"r_str_const ( ""FUNC"" )"		597361	1					
ANR	598027	Callee	r_str_const		597361	0					
ANR	598028	Identifier	r_str_const		597361	0					
ANR	598029	ArgumentList	"""FUNC"""		597361	1					
ANR	598030	Argument	"""FUNC"""		597361	0					
ANR	598031	PrimaryExpression	"""FUNC"""		597361	0					
ANR	598032	ExpressionStatement	"r_list_append ( syscalls , sym )"	1274:3:31277:31306	597361	9	True				
ANR	598033	CallExpression	"r_list_append ( syscalls , sym )"		597361	0					
ANR	598034	Callee	r_list_append		597361	0					
ANR	598035	Identifier	r_list_append		597361	0					
ANR	598036	ArgumentList	syscalls		597361	1					
ANR	598037	Argument	syscalls		597361	0					
ANR	598038	Identifier	syscalls		597361	0					
ANR	598039	Argument	sym		597361	1					
ANR	598040	Identifier	sym		597361	0					
ANR	598041	ExpressionStatement	r_syscall_item_free ( item )	1276:3:31312:31338	597361	10	True				
ANR	598042	CallExpression	r_syscall_item_free ( item )		597361	0					
ANR	598043	Callee	r_syscall_item_free		597361	0					
ANR	598044	Identifier	r_syscall_item_free		597361	0					
ANR	598045	ArgumentList	item		597361	1					
ANR	598046	Argument	item		597361	0					
ANR	598047	Identifier	item		597361	0					
ANR	598048	ExpressionStatement	cursor += 24	1279:2:31347:31359	597361	3	True				
ANR	598049	AssignmentExpression	cursor += 24		597361	0		+=			
ANR	598050	Identifier	cursor		597361	0					
ANR	598051	PrimaryExpression	24		597361	1					
ANR	598052	ExpressionStatement	i ++	1280:2:31363:31366	597361	4	True				
ANR	598053	PostIncDecOperationExpression	i ++		597361	0					
ANR	598054	Identifier	i		597361	0					
ANR	598055	IncDec	++		597361	1					
ANR	598056	ExpressionStatement	r_syscall_free ( syscall )	1283:1:31373:31397	597361	40	True				
ANR	598057	CallExpression	r_syscall_free ( syscall )		597361	0					
ANR	598058	Callee	r_syscall_free		597361	0					
ANR	598059	Identifier	r_syscall_free		597361	0					
ANR	598060	ArgumentList	syscall		597361	1					
ANR	598061	Argument	syscall		597361	0					
ANR	598062	Identifier	syscall		597361	0					
ANR	598063	ExpressionStatement	R_FREE ( data_const )	1284:1:31400:31419	597361	41	True				
ANR	598064	CallExpression	R_FREE ( data_const )		597361	0					
ANR	598065	Callee	R_FREE		597361	0					
ANR	598066	Identifier	R_FREE		597361	0					
ANR	598067	ArgumentList	data_const		597361	1					
ANR	598068	Argument	data_const		597361	0					
ANR	598069	Identifier	data_const		597361	0					
ANR	598070	ExpressionStatement	R_FREE ( sections )	1285:1:31422:31439	597361	42	True				
ANR	598071	CallExpression	R_FREE ( sections )		597361	0					
ANR	598072	Callee	R_FREE		597361	0					
ANR	598073	Identifier	R_FREE		597361	0					
ANR	598074	ArgumentList	sections		597361	1					
ANR	598075	Argument	sections		597361	0					
ANR	598076	Identifier	sections		597361	0					
ANR	598077	ReturnStatement	return syscalls ;	1286:1:31442:31457	597361	43	True				
ANR	598078	Identifier	syscalls		597361	0					
ANR	598079	Label	beach :	1288:0:31460:31465	597361	44	True				
ANR	598080	Identifier	beach		597361	0					
ANR	598081	ExpressionStatement	r_syscall_free ( syscall )	1289:1:31468:31492	597361	45	True				
ANR	598082	CallExpression	r_syscall_free ( syscall )		597361	0					
ANR	598083	Callee	r_syscall_free		597361	0					
ANR	598084	Identifier	r_syscall_free		597361	0					
ANR	598085	ArgumentList	syscall		597361	1					
ANR	598086	Argument	syscall		597361	0					
ANR	598087	Identifier	syscall		597361	0					
ANR	598088	IfStatement	if ( syscalls )		597361	46					
ANR	598089	Condition	syscalls	1290:5:31499:31506	597361	0	True				
ANR	598090	Identifier	syscalls		597361	0					
ANR	598091	CompoundStatement		134:15:2872:2872	597361	1					
ANR	598092	ExpressionStatement	r_list_free ( syscalls )	1291:2:31513:31535	597361	0	True				
ANR	598093	CallExpression	r_list_free ( syscalls )		597361	0					
ANR	598094	Callee	r_list_free		597361	0					
ANR	598095	Identifier	r_list_free		597361	0					
ANR	598096	ArgumentList	syscalls		597361	1					
ANR	598097	Argument	syscalls		597361	0					
ANR	598098	Identifier	syscalls		597361	0					
ANR	598099	ExpressionStatement	R_FREE ( data_const )	1293:1:31541:31560	597361	47	True				
ANR	598100	CallExpression	R_FREE ( data_const )		597361	0					
ANR	598101	Callee	R_FREE		597361	0					
ANR	598102	Identifier	R_FREE		597361	0					
ANR	598103	ArgumentList	data_const		597361	1					
ANR	598104	Argument	data_const		597361	0					
ANR	598105	Identifier	data_const		597361	0					
ANR	598106	ExpressionStatement	R_FREE ( sections )	1294:1:31563:31580	597361	48	True				
ANR	598107	CallExpression	R_FREE ( sections )		597361	0					
ANR	598108	Callee	R_FREE		597361	0					
ANR	598109	Identifier	R_FREE		597361	0					
ANR	598110	ArgumentList	sections		597361	1					
ANR	598111	Argument	sections		597361	0					
ANR	598112	Identifier	sections		597361	0					
ANR	598113	ReturnStatement	return NULL ;	1295:1:31583:31594	597361	49	True				
ANR	598114	Identifier	NULL		597361	0					
ANR	598115	ReturnType	static RList *		597361	1					
ANR	598116	Identifier	resolve_syscalls		597361	2					
ANR	598117	ParameterList	"RKernelCacheObj * obj , ut64 enosys_addr"		597361	3					
ANR	598118	Parameter	RKernelCacheObj * obj	1157:31:28596:28615	597361	0	True				
ANR	598119	ParameterType	RKernelCacheObj *		597361	0					
ANR	598120	Identifier	obj		597361	1					
ANR	598121	Parameter	ut64 enosys_addr	1157:53:28618:28633	597361	1	True				
ANR	598122	ParameterType	ut64		597361	0					
ANR	598123	Identifier	enosys_addr		597361	1					
ANR	598124	CFGEntryNode	ENTRY		597361		True				
ANR	598125	CFGExitNode	EXIT		597361		True				
ANR	598126	Symbol	sym -> bind		597361						
ANR	598127	Symbol	sections [ i ] . addr		597361						
ANR	598128	Symbol	sym -> type		597361						
ANR	598129	Symbol	IS_KERNEL_ADDR		597361						
ANR	598130	Symbol	r_syscall_new		597361						
ANR	598131	Symbol	get_sections		597361						
ANR	598132	Symbol	obj -> mach0		597361						
ANR	598133	Symbol	sdb_count		597361						
ANR	598134	Symbol	enosys_addr		597361						
ANR	598135	Symbol	num_syscalls		597361						
ANR	598136	Symbol	item		597361						
ANR	598137	Symbol	NULL		597361						
ANR	598138	Symbol	test		597361						
ANR	598139	Symbol	r_list_newf		597361						
ANR	598140	Symbol	sysent_vaddr		597361						
ANR	598141	Symbol	sym -> vaddr		597361						
ANR	598142	Symbol	data_const		597361						
ANR	598143	Symbol	K_PPTR		597361						
ANR	598144	Symbol	sections		597361						
ANR	598145	Symbol	syscall -> db		597361						
ANR	598146	Symbol	R_NEW0		597361						
ANR	598147	Symbol	* sym		597361						
ANR	598148	Symbol	strstr		597361						
ANR	598149	Symbol	sym -> name		597361						
ANR	598150	Symbol	RBinSymbol		597361						
ANR	598151	Symbol	cursor		597361						
ANR	598152	Symbol	syscall		597361						
ANR	598153	Symbol	r_read_le64		597361						
ANR	598154	Symbol	r_syscall_get		597361						
ANR	598155	Symbol	sym		597361						
ANR	598156	Symbol	r_str_newf		597361						
ANR	598157	Symbol	sym -> size		597361						
ANR	598158	Symbol	data_const_vaddr		597361						
ANR	598159	Symbol	obj -> cache_buf		597361						
ANR	598160	Symbol	* item		597361						
ANR	598161	Symbol	end		597361						
ANR	598162	Symbol	addr		597361						
ANR	598163	Symbol	sym -> forwarder		597361						
ANR	598164	Symbol	sections [ i ] . offset		597361						
ANR	598165	Symbol	r_str_const		597361						
ANR	598166	Symbol	* obj		597361						
ANR	598167	Symbol	malloc		597361						
ANR	598168	Symbol	r_bin_symbol_free		597361						
ANR	598169	Symbol	sym -> paddr		597361						
ANR	598170	Symbol	data_const_offset		597361						
ANR	598171	Symbol	i		597361						
ANR	598172	Symbol	sections [ i ] . last		597361						
ANR	598173	Symbol	MACH0_		597361						
ANR	598174	Symbol	* i		597361						
ANR	598175	Symbol	obj		597361						
ANR	598176	Symbol	item -> name		597361						
ANR	598177	Symbol	sections [ i ] . name		597361						
ANR	598178	Symbol	r_buf_read_at		597361						
ANR	598179	Symbol	x		597361						
ANR	598180	Symbol	y		597361						
ANR	598181	Symbol	* syscall		597361						
ANR	598182	Symbol	data_const_size		597361						
ANR	598183	Symbol	sections [ i ] . size		597361						
ANR	598184	Symbol	* sections		597361						
ANR	598185	Symbol	syscalls		597361						
ANR	598186	Function	mig_hash_new	1302:0:31703:31971							
ANR	598187	FunctionDef	mig_hash_new ()		598186	0					
ANR	598188	CompoundStatement		1302:28:31731:31971	598186	0					
ANR	598189	IdentifierDeclStatement	HtPP * hash = sdb_ht_new ( ) ;	1303:1:31734:31760	598186	0	True				
ANR	598190	IdentifierDecl	* hash = sdb_ht_new ( )		598186	0					
ANR	598191	IdentifierDeclType	HtPP *		598186	0					
ANR	598192	Identifier	hash		598186	1					
ANR	598193	AssignmentExpression	* hash = sdb_ht_new ( )		598186	2		=			
ANR	598194	Identifier	hash		598186	0					
ANR	598195	CallExpression	sdb_ht_new ( )		598186	1					
ANR	598196	Callee	sdb_ht_new		598186	0					
ANR	598197	Identifier	sdb_ht_new		598186	0					
ANR	598198	ArgumentList			598186	1					
ANR	598199	IfStatement	if ( ! hash )		598186	1					
ANR	598200	Condition	! hash	1304:5:31767:31771	598186	0	True				
ANR	598201	UnaryOperationExpression	! hash		598186	0					
ANR	598202	UnaryOperator	!		598186	0					
ANR	598203	Identifier	hash		598186	1					
ANR	598204	CompoundStatement		3:12:42:42	598186	1					
ANR	598205	ReturnStatement	return NULL ;	1305:2:31778:31789	598186	0	True				
ANR	598206	Identifier	NULL		598186	0					
ANR	598207	IdentifierDeclStatement	int i ;	1308:1:31796:31801	598186	2	True				
ANR	598208	IdentifierDecl	i		598186	0					
ANR	598209	IdentifierDeclType	int		598186	0					
ANR	598210	Identifier	i		598186	1					
ANR	598211	ForStatement	for ( i = 0 ; i < R_MIG_INDEX_LEN ; i += 2 )		598186	3					
ANR	598212	ForInit	i = 0 ;	1309:6:31809:31814	598186	0	True				
ANR	598213	AssignmentExpression	i = 0		598186	0		=			
ANR	598214	Identifier	i		598186	0					
ANR	598215	PrimaryExpression	0		598186	1					
ANR	598216	Condition	i < R_MIG_INDEX_LEN	1309:13:31816:31834	598186	1	True				
ANR	598217	RelationalExpression	i < R_MIG_INDEX_LEN		598186	0		<			
ANR	598218	Identifier	i		598186	0					
ANR	598219	Identifier	R_MIG_INDEX_LEN		598186	1					
ANR	598220	AssignmentExpression	i += 2	1309:34:31837:31842	598186	2	True	+=			
ANR	598221	Identifier	i		598186	0					
ANR	598222	PrimaryExpression	2		598186	1					
ANR	598223	CompoundStatement		10:2:151:184	598186	3					
ANR	598224	IdentifierDeclStatement	const char * num = mig_index [ i ] ;	1310:2:31849:31879	598186	0	True				
ANR	598225	IdentifierDecl	* num = mig_index [ i ]		598186	0					
ANR	598226	IdentifierDeclType	const char *		598186	0					
ANR	598227	Identifier	num		598186	1					
ANR	598228	AssignmentExpression	* num = mig_index [ i ]		598186	2		=			
ANR	598229	Identifier	num		598186	0					
ANR	598230	ArrayIndexing	mig_index [ i ]		598186	1					
ANR	598231	Identifier	mig_index		598186	0					
ANR	598232	Identifier	i		598186	1					
ANR	598233	IdentifierDeclStatement	const char * name = mig_index [ i + 1 ] ;	1311:2:31883:31916	598186	1	True				
ANR	598234	IdentifierDecl	* name = mig_index [ i + 1 ]		598186	0					
ANR	598235	IdentifierDeclType	const char *		598186	0					
ANR	598236	Identifier	name		598186	1					
ANR	598237	AssignmentExpression	* name = mig_index [ i + 1 ]		598186	2		=			
ANR	598238	Identifier	name		598186	0					
ANR	598239	ArrayIndexing	mig_index [ i + 1 ]		598186	1					
ANR	598240	Identifier	mig_index		598186	0					
ANR	598241	AdditiveExpression	i + 1		598186	1		+			
ANR	598242	Identifier	i		598186	0					
ANR	598243	PrimaryExpression	1		598186	1					
ANR	598244	ExpressionStatement	"sdb_ht_insert ( hash , num , name )"	1312:2:31920:31951	598186	2	True				
ANR	598245	CallExpression	"sdb_ht_insert ( hash , num , name )"		598186	0					
ANR	598246	Callee	sdb_ht_insert		598186	0					
ANR	598247	Identifier	sdb_ht_insert		598186	0					
ANR	598248	ArgumentList	hash		598186	1					
ANR	598249	Argument	hash		598186	0					
ANR	598250	Identifier	hash		598186	0					
ANR	598251	Argument	num		598186	1					
ANR	598252	Identifier	num		598186	0					
ANR	598253	Argument	name		598186	2					
ANR	598254	Identifier	name		598186	0					
ANR	598255	ReturnStatement	return hash ;	1315:1:31958:31969	598186	4	True				
ANR	598256	Identifier	hash		598186	0					
ANR	598257	ReturnType	static HtPP *		598186	1					
ANR	598258	Identifier	mig_hash_new		598186	2					
ANR	598259	ParameterList			598186	3					
ANR	598260	CFGEntryNode	ENTRY		598186		True				
ANR	598261	CFGExitNode	EXIT		598186		True				
ANR	598262	Symbol	NULL		598186						
ANR	598263	Symbol	* i		598186						
ANR	598264	Symbol	* mig_index		598186						
ANR	598265	Symbol	mig_index		598186						
ANR	598266	Symbol	num		598186						
ANR	598267	Symbol	sdb_ht_new		598186						
ANR	598268	Symbol	R_MIG_INDEX_LEN		598186						
ANR	598269	Symbol	name		598186						
ANR	598270	Symbol	i		598186						
ANR	598271	Symbol	hash		598186						
ANR	598272	Function	resolve_mig_subsystem	1318:0:31974:35826							
ANR	598273	FunctionDef	resolve_mig_subsystem (RKernelCacheObj * obj)		598272	0					
ANR	598274	CompoundStatement		1318:58:32032:35826	598272	0					
ANR	598275	IdentifierDeclStatement	struct section_t * sections = NULL ;	1319:1:32035:32068	598272	0	True				
ANR	598276	IdentifierDecl	* sections = NULL		598272	0					
ANR	598277	IdentifierDeclType	struct section_t *		598272	0					
ANR	598278	Identifier	sections		598272	1					
ANR	598279	AssignmentExpression	* sections = NULL		598272	2		=			
ANR	598280	Identifier	NULL		598272	0					
ANR	598281	Identifier	NULL		598272	1					
ANR	598282	IfStatement	if ( ! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) ) )		598272	1					
ANR	598283	Condition	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )	1320:5:32075:32121	598272	0	True				
ANR	598284	UnaryOperationExpression	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )		598272	0					
ANR	598285	UnaryOperator	!		598272	0					
ANR	598286	AssignmentExpression	sections = MACH0_ ( get_sections ) ( obj -> mach0 )		598272	1		=			
ANR	598287	Identifier	sections		598272	0					
ANR	598288	CallExpression	MACH0_ ( get_sections ) ( obj -> mach0 )		598272	1					
ANR	598289	Callee	MACH0_ ( get_sections )		598272	0					
ANR	598290	CallExpression	MACH0_ ( get_sections )		598272	0					
ANR	598291	Callee	MACH0_		598272	0					
ANR	598292	Identifier	MACH0_		598272	0					
ANR	598293	ArgumentList	get_sections		598272	1					
ANR	598294	Argument	get_sections		598272	0					
ANR	598295	Identifier	get_sections		598272	0					
ANR	598296	ArgumentList	obj -> mach0		598272	1					
ANR	598297	Argument	obj -> mach0		598272	0					
ANR	598298	PtrMemberAccess	obj -> mach0		598272	0					
ANR	598299	Identifier	obj		598272	0					
ANR	598300	Identifier	mach0		598272	1					
ANR	598301	CompoundStatement		3:54:91:91	598272	1					
ANR	598302	ReturnStatement	return NULL ;	1321:2:32128:32139	598272	0	True				
ANR	598303	Identifier	NULL		598272	0					
ANR	598304	IdentifierDeclStatement	HtPP * mig_hash = NULL ;	1324:1:32146:32167	598272	2	True				
ANR	598305	IdentifierDecl	* mig_hash = NULL		598272	0					
ANR	598306	IdentifierDeclType	HtPP *		598272	0					
ANR	598307	Identifier	mig_hash		598272	1					
ANR	598308	AssignmentExpression	* mig_hash = NULL		598272	2		=			
ANR	598309	Identifier	NULL		598272	0					
ANR	598310	Identifier	NULL		598272	1					
ANR	598311	IdentifierDeclStatement	RList * subsystem = NULL ;	1325:1:32170:32193	598272	3	True				
ANR	598312	IdentifierDecl	* subsystem = NULL		598272	0					
ANR	598313	IdentifierDeclType	RList *		598272	0					
ANR	598314	Identifier	subsystem		598272	1					
ANR	598315	AssignmentExpression	* subsystem = NULL		598272	2		=			
ANR	598316	Identifier	NULL		598272	0					
ANR	598317	Identifier	NULL		598272	1					
ANR	598318	IdentifierDeclStatement	ut8 * data_const = NULL ;	1326:1:32196:32218	598272	4	True				
ANR	598319	IdentifierDecl	* data_const = NULL		598272	0					
ANR	598320	IdentifierDeclType	ut8 *		598272	0					
ANR	598321	Identifier	data_const		598272	1					
ANR	598322	AssignmentExpression	* data_const = NULL		598272	2		=			
ANR	598323	Identifier	NULL		598272	0					
ANR	598324	Identifier	NULL		598272	1					
ANR	598325	IdentifierDeclStatement	"ut64 data_const_offset = 0 , data_const_size = 0 , data_const_vaddr = 0 ;"	1327:1:32221:32290	598272	5	True				
ANR	598326	IdentifierDecl	data_const_offset = 0		598272	0					
ANR	598327	IdentifierDeclType	ut64		598272	0					
ANR	598328	Identifier	data_const_offset		598272	1					
ANR	598329	AssignmentExpression	data_const_offset = 0		598272	2		=			
ANR	598330	Identifier	data_const_offset		598272	0					
ANR	598331	PrimaryExpression	0		598272	1					
ANR	598332	IdentifierDecl	data_const_size = 0		598272	1					
ANR	598333	IdentifierDeclType	ut64		598272	0					
ANR	598334	Identifier	data_const_size		598272	1					
ANR	598335	AssignmentExpression	data_const_size = 0		598272	2		=			
ANR	598336	Identifier	data_const_size		598272	0					
ANR	598337	PrimaryExpression	0		598272	1					
ANR	598338	IdentifierDecl	data_const_vaddr = 0		598272	2					
ANR	598339	IdentifierDeclType	ut64		598272	0					
ANR	598340	Identifier	data_const_vaddr		598272	1					
ANR	598341	AssignmentExpression	data_const_vaddr = 0		598272	2		=			
ANR	598342	Identifier	data_const_vaddr		598272	0					
ANR	598343	PrimaryExpression	0		598272	1					
ANR	598344	IdentifierDeclStatement	"ut64 text_exec_offset = 0 , text_exec_size = 0 , text_exec_vaddr = 0 ;"	1328:1:32293:32359	598272	6	True				
ANR	598345	IdentifierDecl	text_exec_offset = 0		598272	0					
ANR	598346	IdentifierDeclType	ut64		598272	0					
ANR	598347	Identifier	text_exec_offset		598272	1					
ANR	598348	AssignmentExpression	text_exec_offset = 0		598272	2		=			
ANR	598349	Identifier	text_exec_offset		598272	0					
ANR	598350	PrimaryExpression	0		598272	1					
ANR	598351	IdentifierDecl	text_exec_size = 0		598272	1					
ANR	598352	IdentifierDeclType	ut64		598272	0					
ANR	598353	Identifier	text_exec_size		598272	1					
ANR	598354	AssignmentExpression	text_exec_size = 0		598272	2		=			
ANR	598355	Identifier	text_exec_size		598272	0					
ANR	598356	PrimaryExpression	0		598272	1					
ANR	598357	IdentifierDecl	text_exec_vaddr = 0		598272	2					
ANR	598358	IdentifierDeclType	ut64		598272	0					
ANR	598359	Identifier	text_exec_vaddr		598272	1					
ANR	598360	AssignmentExpression	text_exec_vaddr = 0		598272	2		=			
ANR	598361	Identifier	text_exec_vaddr		598272	0					
ANR	598362	PrimaryExpression	0		598272	1					
ANR	598363	IdentifierDeclStatement	int incomplete = 2 ;	1329:1:32362:32380	598272	7	True				
ANR	598364	IdentifierDecl	incomplete = 2		598272	0					
ANR	598365	IdentifierDeclType	int		598272	0					
ANR	598366	Identifier	incomplete		598272	1					
ANR	598367	AssignmentExpression	incomplete = 2		598272	2		=			
ANR	598368	Identifier	incomplete		598272	0					
ANR	598369	PrimaryExpression	2		598272	1					
ANR	598370	IdentifierDeclStatement	int i = 0 ;	1330:1:32383:32392	598272	8	True				
ANR	598371	IdentifierDecl	i = 0		598272	0					
ANR	598372	IdentifierDeclType	int		598272	0					
ANR	598373	Identifier	i		598272	1					
ANR	598374	AssignmentExpression	i = 0		598272	2		=			
ANR	598375	Identifier	i		598272	0					
ANR	598376	PrimaryExpression	0		598272	1					
ANR	598377	ForStatement	for ( ; ! sections [ i ] . last && incomplete > 0 ; i ++ )		598272	9					
ANR	598378	Condition	! sections [ i ] . last && incomplete > 0	1331:8:32402:32436	598272	0	True				
ANR	598379	AndExpression	! sections [ i ] . last && incomplete > 0		598272	0		&&			
ANR	598380	UnaryOperationExpression	! sections [ i ] . last		598272	0					
ANR	598381	UnaryOperator	!		598272	0					
ANR	598382	MemberAccess	sections [ i ] . last		598272	1					
ANR	598383	ArrayIndexing	sections [ i ]		598272	0					
ANR	598384	Identifier	sections		598272	0					
ANR	598385	Identifier	i		598272	1					
ANR	598386	Identifier	last		598272	1					
ANR	598387	RelationalExpression	incomplete > 0		598272	1		>			
ANR	598388	Identifier	incomplete		598272	0					
ANR	598389	PrimaryExpression	0		598272	1					
ANR	598390	PostIncDecOperationExpression	i ++	1331:45:32439:32441	598272	1	True				
ANR	598391	Identifier	i		598272	0					
ANR	598392	IncDec	++		598272	1					
ANR	598393	CompoundStatement		14:50:411:411	598272	2					
ANR	598394	IfStatement	"if ( strstr ( sections [ i ] . name , ""__DATA_CONST.__const"" ) )"		598272	0					
ANR	598395	Condition	"strstr ( sections [ i ] . name , ""__DATA_CONST.__const"" )"	1332:6:32452:32500	598272	0	True				
ANR	598396	CallExpression	"strstr ( sections [ i ] . name , ""__DATA_CONST.__const"" )"		598272	0					
ANR	598397	Callee	strstr		598272	0					
ANR	598398	Identifier	strstr		598272	0					
ANR	598399	ArgumentList	sections [ i ] . name		598272	1					
ANR	598400	Argument	sections [ i ] . name		598272	0					
ANR	598401	MemberAccess	sections [ i ] . name		598272	0					
ANR	598402	ArrayIndexing	sections [ i ]		598272	0					
ANR	598403	Identifier	sections		598272	0					
ANR	598404	Identifier	i		598272	1					
ANR	598405	Identifier	name		598272	1					
ANR	598406	Argument	"""__DATA_CONST.__const"""		598272	1					
ANR	598407	PrimaryExpression	"""__DATA_CONST.__const"""		598272	0					
ANR	598408	CompoundStatement		15:57:470:470	598272	1					
ANR	598409	ExpressionStatement	data_const_offset = sections [ i ] . offset	1333:3:32508:32546	598272	0	True				
ANR	598410	AssignmentExpression	data_const_offset = sections [ i ] . offset		598272	0		=			
ANR	598411	Identifier	data_const_offset		598272	0					
ANR	598412	MemberAccess	sections [ i ] . offset		598272	1					
ANR	598413	ArrayIndexing	sections [ i ]		598272	0					
ANR	598414	Identifier	sections		598272	0					
ANR	598415	Identifier	i		598272	1					
ANR	598416	Identifier	offset		598272	1					
ANR	598417	ExpressionStatement	data_const_size = sections [ i ] . size	1334:3:32551:32585	598272	1	True				
ANR	598418	AssignmentExpression	data_const_size = sections [ i ] . size		598272	0		=			
ANR	598419	Identifier	data_const_size		598272	0					
ANR	598420	MemberAccess	sections [ i ] . size		598272	1					
ANR	598421	ArrayIndexing	sections [ i ]		598272	0					
ANR	598422	Identifier	sections		598272	0					
ANR	598423	Identifier	i		598272	1					
ANR	598424	Identifier	size		598272	1					
ANR	598425	ExpressionStatement	data_const_vaddr = K_PPTR ( sections [ i ] . addr )	1335:3:32590:32634	598272	2	True				
ANR	598426	AssignmentExpression	data_const_vaddr = K_PPTR ( sections [ i ] . addr )		598272	0		=			
ANR	598427	Identifier	data_const_vaddr		598272	0					
ANR	598428	CallExpression	K_PPTR ( sections [ i ] . addr )		598272	1					
ANR	598429	Callee	K_PPTR		598272	0					
ANR	598430	Identifier	K_PPTR		598272	0					
ANR	598431	ArgumentList	sections [ i ] . addr		598272	1					
ANR	598432	Argument	sections [ i ] . addr		598272	0					
ANR	598433	MemberAccess	sections [ i ] . addr		598272	0					
ANR	598434	ArrayIndexing	sections [ i ]		598272	0					
ANR	598435	Identifier	sections		598272	0					
ANR	598436	Identifier	i		598272	1					
ANR	598437	Identifier	addr		598272	1					
ANR	598438	ExpressionStatement	incomplete --	1336:3:32639:32651	598272	3	True				
ANR	598439	PostIncDecOperationExpression	incomplete --		598272	0					
ANR	598440	Identifier	incomplete		598272	0					
ANR	598441	IncDec	--		598272	1					
ANR	598442	IfStatement	"if ( strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" ) )"		598272	1					
ANR	598443	Condition	"strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" )"	1338:6:32663:32709	598272	0	True				
ANR	598444	CallExpression	"strstr ( sections [ i ] . name , ""__TEXT_EXEC.__text"" )"		598272	0					
ANR	598445	Callee	strstr		598272	0					
ANR	598446	Identifier	strstr		598272	0					
ANR	598447	ArgumentList	sections [ i ] . name		598272	1					
ANR	598448	Argument	sections [ i ] . name		598272	0					
ANR	598449	MemberAccess	sections [ i ] . name		598272	0					
ANR	598450	ArrayIndexing	sections [ i ]		598272	0					
ANR	598451	Identifier	sections		598272	0					
ANR	598452	Identifier	i		598272	1					
ANR	598453	Identifier	name		598272	1					
ANR	598454	Argument	"""__TEXT_EXEC.__text"""		598272	1					
ANR	598455	PrimaryExpression	"""__TEXT_EXEC.__text"""		598272	0					
ANR	598456	CompoundStatement		21:55:679:679	598272	1					
ANR	598457	ExpressionStatement	text_exec_offset = sections [ i ] . offset	1339:3:32717:32754	598272	0	True				
ANR	598458	AssignmentExpression	text_exec_offset = sections [ i ] . offset		598272	0		=			
ANR	598459	Identifier	text_exec_offset		598272	0					
ANR	598460	MemberAccess	sections [ i ] . offset		598272	1					
ANR	598461	ArrayIndexing	sections [ i ]		598272	0					
ANR	598462	Identifier	sections		598272	0					
ANR	598463	Identifier	i		598272	1					
ANR	598464	Identifier	offset		598272	1					
ANR	598465	ExpressionStatement	text_exec_size = sections [ i ] . size	1340:3:32759:32792	598272	1	True				
ANR	598466	AssignmentExpression	text_exec_size = sections [ i ] . size		598272	0		=			
ANR	598467	Identifier	text_exec_size		598272	0					
ANR	598468	MemberAccess	sections [ i ] . size		598272	1					
ANR	598469	ArrayIndexing	sections [ i ]		598272	0					
ANR	598470	Identifier	sections		598272	0					
ANR	598471	Identifier	i		598272	1					
ANR	598472	Identifier	size		598272	1					
ANR	598473	ExpressionStatement	text_exec_vaddr = K_PPTR ( sections [ i ] . addr )	1341:3:32797:32840	598272	2	True				
ANR	598474	AssignmentExpression	text_exec_vaddr = K_PPTR ( sections [ i ] . addr )		598272	0		=			
ANR	598475	Identifier	text_exec_vaddr		598272	0					
ANR	598476	CallExpression	K_PPTR ( sections [ i ] . addr )		598272	1					
ANR	598477	Callee	K_PPTR		598272	0					
ANR	598478	Identifier	K_PPTR		598272	0					
ANR	598479	ArgumentList	sections [ i ] . addr		598272	1					
ANR	598480	Argument	sections [ i ] . addr		598272	0					
ANR	598481	MemberAccess	sections [ i ] . addr		598272	0					
ANR	598482	ArrayIndexing	sections [ i ]		598272	0					
ANR	598483	Identifier	sections		598272	0					
ANR	598484	Identifier	i		598272	1					
ANR	598485	Identifier	addr		598272	1					
ANR	598486	ExpressionStatement	incomplete --	1342:3:32845:32857	598272	3	True				
ANR	598487	PostIncDecOperationExpression	incomplete --		598272	0					
ANR	598488	Identifier	incomplete		598272	0					
ANR	598489	IncDec	--		598272	1					
ANR	598490	IfStatement	if ( ! data_const_offset || ! data_const_size || ! data_const_vaddr || ! text_exec_offset || ! text_exec_size || ! text_exec_vaddr )		598272	10					
ANR	598491	Condition	! data_const_offset || ! data_const_size || ! data_const_vaddr || ! text_exec_offset || ! text_exec_size || ! text_exec_vaddr	1346:5:32872:32992	598272	0	True				
ANR	598492	OrExpression	! data_const_offset || ! data_const_size || ! data_const_vaddr || ! text_exec_offset || ! text_exec_size || ! text_exec_vaddr		598272	0		||			
ANR	598493	UnaryOperationExpression	! data_const_offset		598272	0					
ANR	598494	UnaryOperator	!		598272	0					
ANR	598495	Identifier	data_const_offset		598272	1					
ANR	598496	OrExpression	! data_const_size || ! data_const_vaddr || ! text_exec_offset || ! text_exec_size || ! text_exec_vaddr		598272	1		||			
ANR	598497	UnaryOperationExpression	! data_const_size		598272	0					
ANR	598498	UnaryOperator	!		598272	0					
ANR	598499	Identifier	data_const_size		598272	1					
ANR	598500	OrExpression	! data_const_vaddr || ! text_exec_offset || ! text_exec_size || ! text_exec_vaddr		598272	1		||			
ANR	598501	UnaryOperationExpression	! data_const_vaddr		598272	0					
ANR	598502	UnaryOperator	!		598272	0					
ANR	598503	Identifier	data_const_vaddr		598272	1					
ANR	598504	OrExpression	! text_exec_offset || ! text_exec_size || ! text_exec_vaddr		598272	1		||			
ANR	598505	UnaryOperationExpression	! text_exec_offset		598272	0					
ANR	598506	UnaryOperator	!		598272	0					
ANR	598507	Identifier	text_exec_offset		598272	1					
ANR	598508	OrExpression	! text_exec_size || ! text_exec_vaddr		598272	1		||			
ANR	598509	UnaryOperationExpression	! text_exec_size		598272	0					
ANR	598510	UnaryOperator	!		598272	0					
ANR	598511	Identifier	text_exec_size		598272	1					
ANR	598512	UnaryOperationExpression	! text_exec_vaddr		598272	1					
ANR	598513	UnaryOperator	!		598272	0					
ANR	598514	Identifier	text_exec_vaddr		598272	1					
ANR	598515	CompoundStatement		30:60:962:962	598272	1					
ANR	598516	GotoStatement	goto beach ;	1348:2:32999:33009	598272	0	True				
ANR	598517	Identifier	beach		598272	0					
ANR	598518	ExpressionStatement	data_const = malloc ( data_const_size )	1351:1:33016:33053	598272	11	True				
ANR	598519	AssignmentExpression	data_const = malloc ( data_const_size )		598272	0		=			
ANR	598520	Identifier	data_const		598272	0					
ANR	598521	CallExpression	malloc ( data_const_size )		598272	1					
ANR	598522	Callee	malloc		598272	0					
ANR	598523	Identifier	malloc		598272	0					
ANR	598524	ArgumentList	data_const_size		598272	1					
ANR	598525	Argument	data_const_size		598272	0					
ANR	598526	Identifier	data_const_size		598272	0					
ANR	598527	IfStatement	if ( ! data_const )		598272	12					
ANR	598528	Condition	! data_const	1352:5:33060:33070	598272	0	True				
ANR	598529	UnaryOperationExpression	! data_const		598272	0					
ANR	598530	UnaryOperator	!		598272	0					
ANR	598531	Identifier	data_const		598272	1					
ANR	598532	CompoundStatement		35:18:1040:1040	598272	1					
ANR	598533	GotoStatement	goto beach ;	1353:2:33077:33087	598272	0	True				
ANR	598534	Identifier	beach		598272	0					
ANR	598535	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size ) < data_const_size )"		598272	13					
ANR	598536	Condition	"r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size ) < data_const_size"	1355:5:33097:33192	598272	0	True				
ANR	598537	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size ) < data_const_size"		598272	0		<			
ANR	598538	CallExpression	"r_buf_read_at ( obj -> cache_buf , data_const_offset , data_const , data_const_size )"		598272	0					
ANR	598539	Callee	r_buf_read_at		598272	0					
ANR	598540	Identifier	r_buf_read_at		598272	0					
ANR	598541	ArgumentList	obj -> cache_buf		598272	1					
ANR	598542	Argument	obj -> cache_buf		598272	0					
ANR	598543	PtrMemberAccess	obj -> cache_buf		598272	0					
ANR	598544	Identifier	obj		598272	0					
ANR	598545	Identifier	cache_buf		598272	1					
ANR	598546	Argument	data_const_offset		598272	1					
ANR	598547	Identifier	data_const_offset		598272	0					
ANR	598548	Argument	data_const		598272	2					
ANR	598549	Identifier	data_const		598272	0					
ANR	598550	Argument	data_const_size		598272	3					
ANR	598551	Identifier	data_const_size		598272	0					
ANR	598552	Identifier	data_const_size		598272	1					
ANR	598553	CompoundStatement		38:103:1162:1162	598272	1					
ANR	598554	GotoStatement	goto beach ;	1356:2:33199:33209	598272	0	True				
ANR	598555	Identifier	beach		598272	0					
ANR	598556	ExpressionStatement	subsystem = r_list_newf ( r_bin_symbol_free )	1359:1:33216:33259	598272	14	True				
ANR	598557	AssignmentExpression	subsystem = r_list_newf ( r_bin_symbol_free )		598272	0		=			
ANR	598558	Identifier	subsystem		598272	0					
ANR	598559	CallExpression	r_list_newf ( r_bin_symbol_free )		598272	1					
ANR	598560	Callee	r_list_newf		598272	0					
ANR	598561	Identifier	r_list_newf		598272	0					
ANR	598562	ArgumentList	r_bin_symbol_free		598272	1					
ANR	598563	Argument	r_bin_symbol_free		598272	0					
ANR	598564	Identifier	r_bin_symbol_free		598272	0					
ANR	598565	IfStatement	if ( ! subsystem )		598272	15					
ANR	598566	Condition	! subsystem	1360:5:33266:33275	598272	0	True				
ANR	598567	UnaryOperationExpression	! subsystem		598272	0					
ANR	598568	UnaryOperator	!		598272	0					
ANR	598569	Identifier	subsystem		598272	1					
ANR	598570	CompoundStatement		43:17:1245:1245	598272	1					
ANR	598571	GotoStatement	goto beach ;	1361:2:33282:33292	598272	0	True				
ANR	598572	Identifier	beach		598272	0					
ANR	598573	ExpressionStatement	mig_hash = mig_hash_new ( )	1364:1:33299:33325	598272	16	True				
ANR	598574	AssignmentExpression	mig_hash = mig_hash_new ( )		598272	0		=			
ANR	598575	Identifier	mig_hash		598272	0					
ANR	598576	CallExpression	mig_hash_new ( )		598272	1					
ANR	598577	Callee	mig_hash_new		598272	0					
ANR	598578	Identifier	mig_hash_new		598272	0					
ANR	598579	ArgumentList			598272	1					
ANR	598580	IfStatement	if ( ! mig_hash )		598272	17					
ANR	598581	Condition	! mig_hash	1365:5:33332:33340	598272	0	True				
ANR	598582	UnaryOperationExpression	! mig_hash		598272	0					
ANR	598583	UnaryOperator	!		598272	0					
ANR	598584	Identifier	mig_hash		598272	1					
ANR	598585	CompoundStatement		48:16:1310:1310	598272	1					
ANR	598586	GotoStatement	goto beach ;	1366:2:33347:33357	598272	0	True				
ANR	598587	Identifier	beach		598272	0					
ANR	598588	IdentifierDeclStatement	ut8 * cursor = data_const ;	1369:1:33364:33388	598272	18	True				
ANR	598589	IdentifierDecl	* cursor = data_const		598272	0					
ANR	598590	IdentifierDeclType	ut8 *		598272	0					
ANR	598591	Identifier	cursor		598272	1					
ANR	598592	AssignmentExpression	* cursor = data_const		598272	2		=			
ANR	598593	Identifier	data_const		598272	0					
ANR	598594	Identifier	data_const		598272	1					
ANR	598595	IdentifierDeclStatement	ut8 * end = data_const + data_const_size ;	1370:1:33391:33430	598272	19	True				
ANR	598596	IdentifierDecl	* end = data_const + data_const_size		598272	0					
ANR	598597	IdentifierDeclType	ut8 *		598272	0					
ANR	598598	Identifier	end		598272	1					
ANR	598599	AssignmentExpression	* end = data_const + data_const_size		598272	2		=			
ANR	598600	Identifier	end		598272	0					
ANR	598601	AdditiveExpression	data_const + data_const_size		598272	1		+			
ANR	598602	Identifier	data_const		598272	0					
ANR	598603	Identifier	data_const_size		598272	1					
ANR	598604	WhileStatement	while ( cursor < end )		598272	20					
ANR	598605	Condition	cursor < end	1371:8:33440:33451	598272	0	True				
ANR	598606	RelationalExpression	cursor < end		598272	0		<			
ANR	598607	Identifier	cursor		598272	0					
ANR	598608	Identifier	end		598272	1					
ANR	598609	CompoundStatement		75:2:2112:2123	598272	1					
ANR	598610	IdentifierDeclStatement	ut64 subs_p = K_PPTR ( r_read_le64 ( cursor ) ) ;	1372:2:33458:33501	598272	0	True				
ANR	598611	IdentifierDecl	subs_p = K_PPTR ( r_read_le64 ( cursor ) )		598272	0					
ANR	598612	IdentifierDeclType	ut64		598272	0					
ANR	598613	Identifier	subs_p		598272	1					
ANR	598614	AssignmentExpression	subs_p = K_PPTR ( r_read_le64 ( cursor ) )		598272	2		=			
ANR	598615	Identifier	subs_p		598272	0					
ANR	598616	CallExpression	K_PPTR ( r_read_le64 ( cursor ) )		598272	1					
ANR	598617	Callee	K_PPTR		598272	0					
ANR	598618	Identifier	K_PPTR		598272	0					
ANR	598619	ArgumentList	r_read_le64 ( cursor )		598272	1					
ANR	598620	Argument	r_read_le64 ( cursor )		598272	0					
ANR	598621	CallExpression	r_read_le64 ( cursor )		598272	0					
ANR	598622	Callee	r_read_le64		598272	0					
ANR	598623	Identifier	r_read_le64		598272	0					
ANR	598624	ArgumentList	cursor		598272	1					
ANR	598625	Argument	cursor		598272	0					
ANR	598626	Identifier	cursor		598272	0					
ANR	598627	IfStatement	if ( subs_p < text_exec_vaddr || subs_p >= text_exec_vaddr + text_exec_size )		598272	1					
ANR	598628	Condition	subs_p < text_exec_vaddr || subs_p >= text_exec_vaddr + text_exec_size	1373:6:33509:33578	598272	0	True				
ANR	598629	OrExpression	subs_p < text_exec_vaddr || subs_p >= text_exec_vaddr + text_exec_size		598272	0		||			
ANR	598630	RelationalExpression	subs_p < text_exec_vaddr		598272	0		<			
ANR	598631	Identifier	subs_p		598272	0					
ANR	598632	Identifier	text_exec_vaddr		598272	1					
ANR	598633	RelationalExpression	subs_p >= text_exec_vaddr + text_exec_size		598272	1		>=			
ANR	598634	Identifier	subs_p		598272	0					
ANR	598635	AdditiveExpression	text_exec_vaddr + text_exec_size		598272	1		+			
ANR	598636	Identifier	text_exec_vaddr		598272	0					
ANR	598637	Identifier	text_exec_size		598272	1					
ANR	598638	CompoundStatement		56:78:1548:1548	598272	1					
ANR	598639	ExpressionStatement	cursor += 8	1374:3:33586:33597	598272	0	True				
ANR	598640	AssignmentExpression	cursor += 8		598272	0		+=			
ANR	598641	Identifier	cursor		598272	0					
ANR	598642	PrimaryExpression	8		598272	1					
ANR	598643	ContinueStatement	continue ;	1375:3:33602:33610	598272	1	True				
ANR	598644	IdentifierDeclStatement	ut32 subs_min_idx = r_read_le32 ( cursor + 8 ) ;	1377:2:33618:33662	598272	2	True				
ANR	598645	IdentifierDecl	subs_min_idx = r_read_le32 ( cursor + 8 )		598272	0					
ANR	598646	IdentifierDeclType	ut32		598272	0					
ANR	598647	Identifier	subs_min_idx		598272	1					
ANR	598648	AssignmentExpression	subs_min_idx = r_read_le32 ( cursor + 8 )		598272	2		=			
ANR	598649	Identifier	subs_min_idx		598272	0					
ANR	598650	CallExpression	r_read_le32 ( cursor + 8 )		598272	1					
ANR	598651	Callee	r_read_le32		598272	0					
ANR	598652	Identifier	r_read_le32		598272	0					
ANR	598653	ArgumentList	cursor + 8		598272	1					
ANR	598654	Argument	cursor + 8		598272	0					
ANR	598655	AdditiveExpression	cursor + 8		598272	0		+			
ANR	598656	Identifier	cursor		598272	0					
ANR	598657	PrimaryExpression	8		598272	1					
ANR	598658	IdentifierDeclStatement	ut32 subs_max_idx = r_read_le32 ( cursor + 12 ) ;	1378:2:33666:33711	598272	3	True				
ANR	598659	IdentifierDecl	subs_max_idx = r_read_le32 ( cursor + 12 )		598272	0					
ANR	598660	IdentifierDeclType	ut32		598272	0					
ANR	598661	Identifier	subs_max_idx		598272	1					
ANR	598662	AssignmentExpression	subs_max_idx = r_read_le32 ( cursor + 12 )		598272	2		=			
ANR	598663	Identifier	subs_max_idx		598272	0					
ANR	598664	CallExpression	r_read_le32 ( cursor + 12 )		598272	1					
ANR	598665	Callee	r_read_le32		598272	0					
ANR	598666	Identifier	r_read_le32		598272	0					
ANR	598667	ArgumentList	cursor + 12		598272	1					
ANR	598668	Argument	cursor + 12		598272	0					
ANR	598669	AdditiveExpression	cursor + 12		598272	0		+			
ANR	598670	Identifier	cursor		598272	0					
ANR	598671	PrimaryExpression	12		598272	1					
ANR	598672	IdentifierDeclStatement	ut32 n_routines = ( subs_max_idx - subs_min_idx ) ;	1379:2:33715:33762	598272	4	True				
ANR	598673	IdentifierDecl	n_routines = ( subs_max_idx - subs_min_idx )		598272	0					
ANR	598674	IdentifierDeclType	ut32		598272	0					
ANR	598675	Identifier	n_routines		598272	1					
ANR	598676	AssignmentExpression	n_routines = ( subs_max_idx - subs_min_idx )		598272	2		=			
ANR	598677	Identifier	n_routines		598272	0					
ANR	598678	AdditiveExpression	subs_max_idx - subs_min_idx		598272	1		-			
ANR	598679	Identifier	subs_max_idx		598272	0					
ANR	598680	Identifier	subs_min_idx		598272	1					
ANR	598681	IfStatement	if ( subs_min_idx >= subs_max_idx || ( subs_max_idx - subs_min_idx ) > K_MIG_MAX_ROUTINES )		598272	5					
ANR	598682	Condition	subs_min_idx >= subs_max_idx || ( subs_max_idx - subs_min_idx ) > K_MIG_MAX_ROUTINES	1380:6:33770:33851	598272	0	True				
ANR	598683	OrExpression	subs_min_idx >= subs_max_idx || ( subs_max_idx - subs_min_idx ) > K_MIG_MAX_ROUTINES		598272	0		||			
ANR	598684	RelationalExpression	subs_min_idx >= subs_max_idx		598272	0		>=			
ANR	598685	Identifier	subs_min_idx		598272	0					
ANR	598686	Identifier	subs_max_idx		598272	1					
ANR	598687	RelationalExpression	( subs_max_idx - subs_min_idx ) > K_MIG_MAX_ROUTINES		598272	1		>			
ANR	598688	AdditiveExpression	subs_max_idx - subs_min_idx		598272	0		-			
ANR	598689	Identifier	subs_max_idx		598272	0					
ANR	598690	Identifier	subs_min_idx		598272	1					
ANR	598691	Identifier	K_MIG_MAX_ROUTINES		598272	1					
ANR	598692	CompoundStatement		63:90:1821:1821	598272	1					
ANR	598693	ExpressionStatement	cursor += 16	1381:3:33859:33871	598272	0	True				
ANR	598694	AssignmentExpression	cursor += 16		598272	0		+=			
ANR	598695	Identifier	cursor		598272	0					
ANR	598696	PrimaryExpression	16		598272	1					
ANR	598697	ContinueStatement	continue ;	1382:3:33876:33884	598272	1	True				
ANR	598698	IdentifierDeclStatement	ut64 * routines = ( ut64 * ) malloc ( n_routines * sizeof ( ut64 ) ) ;	1385:2:33893:33954	598272	6	True				
ANR	598699	IdentifierDecl	* routines = ( ut64 * ) malloc ( n_routines * sizeof ( ut64 ) )		598272	0					
ANR	598700	IdentifierDeclType	ut64 *		598272	0					
ANR	598701	Identifier	routines		598272	1					
ANR	598702	AssignmentExpression	* routines = ( ut64 * ) malloc ( n_routines * sizeof ( ut64 ) )		598272	2		=			
ANR	598703	Identifier	routines		598272	0					
ANR	598704	CastExpression	( ut64 * ) malloc ( n_routines * sizeof ( ut64 ) )		598272	1					
ANR	598705	CastTarget	ut64 *		598272	0					
ANR	598706	CallExpression	malloc ( n_routines * sizeof ( ut64 ) )		598272	1					
ANR	598707	Callee	malloc		598272	0					
ANR	598708	Identifier	malloc		598272	0					
ANR	598709	ArgumentList	n_routines * sizeof ( ut64 )		598272	1					
ANR	598710	Argument	n_routines * sizeof ( ut64 )		598272	0					
ANR	598711	MultiplicativeExpression	n_routines * sizeof ( ut64 )		598272	0		*			
ANR	598712	Identifier	n_routines		598272	0					
ANR	598713	SizeofExpression	sizeof ( ut64 )		598272	1					
ANR	598714	Sizeof	sizeof		598272	0					
ANR	598715	SizeofOperand	ut64		598272	1					
ANR	598716	IfStatement	if ( ! routines )		598272	7					
ANR	598717	Condition	! routines	1386:6:33962:33970	598272	0	True				
ANR	598718	UnaryOperationExpression	! routines		598272	0					
ANR	598719	UnaryOperator	!		598272	0					
ANR	598720	Identifier	routines		598272	1					
ANR	598721	CompoundStatement		69:17:1940:1940	598272	1					
ANR	598722	GotoStatement	goto beach ;	1387:3:33978:33988	598272	0	True				
ANR	598723	Identifier	beach		598272	0					
ANR	598724	IdentifierDeclStatement	ut8 * array_cursor = cursor + K_MIG_SUBSYSTEM_SIZE ;	1389:2:33996:34045	598272	8	True				
ANR	598725	IdentifierDecl	* array_cursor = cursor + K_MIG_SUBSYSTEM_SIZE		598272	0					
ANR	598726	IdentifierDeclType	ut8 *		598272	0					
ANR	598727	Identifier	array_cursor		598272	1					
ANR	598728	AssignmentExpression	* array_cursor = cursor + K_MIG_SUBSYSTEM_SIZE		598272	2		=			
ANR	598729	Identifier	array_cursor		598272	0					
ANR	598730	AdditiveExpression	cursor + K_MIG_SUBSYSTEM_SIZE		598272	1		+			
ANR	598731	Identifier	cursor		598272	0					
ANR	598732	Identifier	K_MIG_SUBSYSTEM_SIZE		598272	1					
ANR	598733	IdentifierDeclStatement	ut8 * end_array = array_cursor + n_routines * K_MIG_ROUTINE_SIZE ;	1390:2:34049:34112	598272	9	True				
ANR	598734	IdentifierDecl	* end_array = array_cursor + n_routines * K_MIG_ROUTINE_SIZE		598272	0					
ANR	598735	IdentifierDeclType	ut8 *		598272	0					
ANR	598736	Identifier	end_array		598272	1					
ANR	598737	AssignmentExpression	* end_array = array_cursor + n_routines * K_MIG_ROUTINE_SIZE		598272	2		=			
ANR	598738	Identifier	end_array		598272	0					
ANR	598739	AdditiveExpression	array_cursor + n_routines * K_MIG_ROUTINE_SIZE		598272	1		+			
ANR	598740	Identifier	array_cursor		598272	0					
ANR	598741	MultiplicativeExpression	n_routines * K_MIG_ROUTINE_SIZE		598272	1		*			
ANR	598742	Identifier	n_routines		598272	0					
ANR	598743	Identifier	K_MIG_ROUTINE_SIZE		598272	1					
ANR	598744	IdentifierDeclStatement	bool is_consistent = true ;	1391:2:34116:34141	598272	10	True				
ANR	598745	IdentifierDecl	is_consistent = true		598272	0					
ANR	598746	IdentifierDeclType	bool		598272	0					
ANR	598747	Identifier	is_consistent		598272	1					
ANR	598748	AssignmentExpression	is_consistent = true		598272	2		=			
ANR	598749	Identifier	true		598272	0					
ANR	598750	Identifier	true		598272	1					
ANR	598751	IdentifierDeclStatement	int idx = 0 ;	1392:2:34145:34156	598272	11	True				
ANR	598752	IdentifierDecl	idx = 0		598272	0					
ANR	598753	IdentifierDeclType	int		598272	0					
ANR	598754	Identifier	idx		598272	1					
ANR	598755	AssignmentExpression	idx = 0		598272	2		=			
ANR	598756	Identifier	idx		598272	0					
ANR	598757	PrimaryExpression	0		598272	1					
ANR	598758	WhileStatement	while ( array_cursor < end_array )		598272	12					
ANR	598759	Condition	array_cursor < end_array	1393:9:34167:34190	598272	0	True				
ANR	598760	RelationalExpression	array_cursor < end_array		598272	0		<			
ANR	598761	Identifier	array_cursor		598272	0					
ANR	598762	Identifier	end_array		598272	1					
ANR	598763	CompoundStatement		83:3:2292:2348	598272	1					
ANR	598764	IdentifierDeclStatement	ut64 should_be_null = r_read_le64 ( array_cursor ) ;	1394:3:34198:34246	598272	0	True				
ANR	598765	IdentifierDecl	should_be_null = r_read_le64 ( array_cursor )		598272	0					
ANR	598766	IdentifierDeclType	ut64		598272	0					
ANR	598767	Identifier	should_be_null		598272	1					
ANR	598768	AssignmentExpression	should_be_null = r_read_le64 ( array_cursor )		598272	2		=			
ANR	598769	Identifier	should_be_null		598272	0					
ANR	598770	CallExpression	r_read_le64 ( array_cursor )		598272	1					
ANR	598771	Callee	r_read_le64		598272	0					
ANR	598772	Identifier	r_read_le64		598272	0					
ANR	598773	ArgumentList	array_cursor		598272	1					
ANR	598774	Argument	array_cursor		598272	0					
ANR	598775	Identifier	array_cursor		598272	0					
ANR	598776	IfStatement	if ( should_be_null != 0 )		598272	1					
ANR	598777	Condition	should_be_null != 0	1395:7:34255:34273	598272	0	True				
ANR	598778	EqualityExpression	should_be_null != 0		598272	0		!=			
ANR	598779	Identifier	should_be_null		598272	0					
ANR	598780	PrimaryExpression	0		598272	1					
ANR	598781	CompoundStatement		78:28:2243:2243	598272	1					
ANR	598782	ExpressionStatement	is_consistent = false	1396:4:34282:34303	598272	0	True				
ANR	598783	AssignmentExpression	is_consistent = false		598272	0		=			
ANR	598784	Identifier	is_consistent		598272	0					
ANR	598785	Identifier	false		598272	1					
ANR	598786	BreakStatement	break ;	1397:4:34309:34314	598272	1	True				
ANR	598787	IdentifierDeclStatement	ut64 routine_p = K_PPTR ( r_read_le64 ( array_cursor + 8 ) ) ;	1400:3:34325:34381	598272	2	True				
ANR	598788	IdentifierDecl	routine_p = K_PPTR ( r_read_le64 ( array_cursor + 8 ) )		598272	0					
ANR	598789	IdentifierDeclType	ut64		598272	0					
ANR	598790	Identifier	routine_p		598272	1					
ANR	598791	AssignmentExpression	routine_p = K_PPTR ( r_read_le64 ( array_cursor + 8 ) )		598272	2		=			
ANR	598792	Identifier	routine_p		598272	0					
ANR	598793	CallExpression	K_PPTR ( r_read_le64 ( array_cursor + 8 ) )		598272	1					
ANR	598794	Callee	K_PPTR		598272	0					
ANR	598795	Identifier	K_PPTR		598272	0					
ANR	598796	ArgumentList	r_read_le64 ( array_cursor + 8 )		598272	1					
ANR	598797	Argument	r_read_le64 ( array_cursor + 8 )		598272	0					
ANR	598798	CallExpression	r_read_le64 ( array_cursor + 8 )		598272	0					
ANR	598799	Callee	r_read_le64		598272	0					
ANR	598800	Identifier	r_read_le64		598272	0					
ANR	598801	ArgumentList	array_cursor + 8		598272	1					
ANR	598802	Argument	array_cursor + 8		598272	0					
ANR	598803	AdditiveExpression	array_cursor + 8		598272	0		+			
ANR	598804	Identifier	array_cursor		598272	0					
ANR	598805	PrimaryExpression	8		598272	1					
ANR	598806	IfStatement	if ( routine_p != 0 && ( routine_p < text_exec_vaddr || routine_p >= text_exec_vaddr + text_exec_size ) )		598272	3					
ANR	598807	Condition	routine_p != 0 && ( routine_p < text_exec_vaddr || routine_p >= text_exec_vaddr + text_exec_size )	1401:7:34390:34485	598272	0	True				
ANR	598808	AndExpression	routine_p != 0 && ( routine_p < text_exec_vaddr || routine_p >= text_exec_vaddr + text_exec_size )		598272	0		&&			
ANR	598809	EqualityExpression	routine_p != 0		598272	0		!=			
ANR	598810	Identifier	routine_p		598272	0					
ANR	598811	PrimaryExpression	0		598272	1					
ANR	598812	OrExpression	routine_p < text_exec_vaddr || routine_p >= text_exec_vaddr + text_exec_size		598272	1		||			
ANR	598813	RelationalExpression	routine_p < text_exec_vaddr		598272	0		<			
ANR	598814	Identifier	routine_p		598272	0					
ANR	598815	Identifier	text_exec_vaddr		598272	1					
ANR	598816	RelationalExpression	routine_p >= text_exec_vaddr + text_exec_size		598272	1		>=			
ANR	598817	Identifier	routine_p		598272	0					
ANR	598818	AdditiveExpression	text_exec_vaddr + text_exec_size		598272	1		+			
ANR	598819	Identifier	text_exec_vaddr		598272	0					
ANR	598820	Identifier	text_exec_size		598272	1					
ANR	598821	CompoundStatement		84:105:2455:2455	598272	1					
ANR	598822	ExpressionStatement	is_consistent = false	1402:4:34494:34515	598272	0	True				
ANR	598823	AssignmentExpression	is_consistent = false		598272	0		=			
ANR	598824	Identifier	is_consistent		598272	0					
ANR	598825	Identifier	false		598272	1					
ANR	598826	BreakStatement	break ;	1403:4:34521:34526	598272	1	True				
ANR	598827	ExpressionStatement	routines [ idx ++ ] = routine_p	1406:3:34537:34564	598272	4	True				
ANR	598828	AssignmentExpression	routines [ idx ++ ] = routine_p		598272	0		=			
ANR	598829	ArrayIndexing	routines [ idx ++ ]		598272	0					
ANR	598830	Identifier	routines		598272	0					
ANR	598831	PostIncDecOperationExpression	idx ++		598272	1					
ANR	598832	Identifier	idx		598272	0					
ANR	598833	IncDec	++		598272	1					
ANR	598834	Identifier	routine_p		598272	1					
ANR	598835	ExpressionStatement	array_cursor += K_MIG_ROUTINE_SIZE	1407:3:34569:34603	598272	5	True				
ANR	598836	AssignmentExpression	array_cursor += K_MIG_ROUTINE_SIZE		598272	0		+=			
ANR	598837	Identifier	array_cursor		598272	0					
ANR	598838	Identifier	K_MIG_ROUTINE_SIZE		598272	1					
ANR	598839	IfStatement	if ( is_consistent )		598272	13					
ANR	598840	Condition	is_consistent	1410:6:34616:34628	598272	0	True				
ANR	598841	Identifier	is_consistent		598272	0					
ANR	598842	CompoundStatement		93:21:2598:2598	598272	1					
ANR	598843	ForStatement	for ( idx = 0 ; idx < n_routines ; idx ++ )		598272	0					
ANR	598844	ForInit	idx = 0 ;	1411:8:34641:34648	598272	0	True				
ANR	598845	AssignmentExpression	idx = 0		598272	0		=			
ANR	598846	Identifier	idx		598272	0					
ANR	598847	PrimaryExpression	0		598272	1					
ANR	598848	Condition	idx < n_routines	1411:17:34650:34665	598272	1	True				
ANR	598849	RelationalExpression	idx < n_routines		598272	0		<			
ANR	598850	Identifier	idx		598272	0					
ANR	598851	Identifier	n_routines		598272	1					
ANR	598852	PostIncDecOperationExpression	idx ++	1411:35:34668:34672	598272	2	True				
ANR	598853	Identifier	idx		598272	0					
ANR	598854	IncDec	++		598272	1					
ANR	598855	CompoundStatement		109:4:2936:2990	598272	3					
ANR	598856	IdentifierDeclStatement	ut64 routine_p = routines [ idx ] ;	1412:4:34681:34711	598272	0	True				
ANR	598857	IdentifierDecl	routine_p = routines [ idx ]		598272	0					
ANR	598858	IdentifierDeclType	ut64		598272	0					
ANR	598859	Identifier	routine_p		598272	1					
ANR	598860	AssignmentExpression	routine_p = routines [ idx ]		598272	2		=			
ANR	598861	Identifier	routine_p		598272	0					
ANR	598862	ArrayIndexing	routines [ idx ]		598272	1					
ANR	598863	Identifier	routines		598272	0					
ANR	598864	Identifier	idx		598272	1					
ANR	598865	IfStatement	if ( ! routine_p )		598272	1					
ANR	598866	Condition	! routine_p	1413:8:34721:34730	598272	0	True				
ANR	598867	UnaryOperationExpression	! routine_p		598272	0					
ANR	598868	UnaryOperator	!		598272	0					
ANR	598869	Identifier	routine_p		598272	1					
ANR	598870	CompoundStatement		96:20:2700:2700	598272	1					
ANR	598871	ContinueStatement	continue ;	1414:5:34740:34748	598272	0	True				
ANR	598872	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1417:4:34761:34798	598272	2	True				
ANR	598873	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		598272	0					
ANR	598874	IdentifierDeclType	RBinSymbol *		598272	0					
ANR	598875	Identifier	sym		598272	1					
ANR	598876	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		598272	2		=			
ANR	598877	Identifier	sym		598272	0					
ANR	598878	CallExpression	R_NEW0 ( RBinSymbol )		598272	1					
ANR	598879	Callee	R_NEW0		598272	0					
ANR	598880	Identifier	R_NEW0		598272	0					
ANR	598881	ArgumentList	RBinSymbol		598272	1					
ANR	598882	Argument	RBinSymbol		598272	0					
ANR	598883	Identifier	RBinSymbol		598272	0					
ANR	598884	IfStatement	if ( ! sym )		598272	3					
ANR	598885	Condition	! sym	1418:8:34808:34811	598272	0	True				
ANR	598886	UnaryOperationExpression	! sym		598272	0					
ANR	598887	UnaryOperator	!		598272	0					
ANR	598888	Identifier	sym		598272	1					
ANR	598889	CompoundStatement		101:14:2781:2781	598272	1					
ANR	598890	ExpressionStatement	R_FREE ( routines )	1419:5:34821:34838	598272	0	True				
ANR	598891	CallExpression	R_FREE ( routines )		598272	0					
ANR	598892	Callee	R_FREE		598272	0					
ANR	598893	Identifier	R_FREE		598272	0					
ANR	598894	ArgumentList	routines		598272	1					
ANR	598895	Argument	routines		598272	0					
ANR	598896	Identifier	routines		598272	0					
ANR	598897	GotoStatement	goto beach ;	1420:5:34845:34855	598272	1	True				
ANR	598898	Identifier	beach		598272	0					
ANR	598899	IdentifierDeclStatement	int num = idx + subs_min_idx ;	1423:4:34868:34896	598272	4	True				
ANR	598900	IdentifierDecl	num = idx + subs_min_idx		598272	0					
ANR	598901	IdentifierDeclType	int		598272	0					
ANR	598902	Identifier	num		598272	1					
ANR	598903	AssignmentExpression	num = idx + subs_min_idx		598272	2		=			
ANR	598904	Identifier	num		598272	0					
ANR	598905	AdditiveExpression	idx + subs_min_idx		598272	1		+			
ANR	598906	Identifier	idx		598272	0					
ANR	598907	Identifier	subs_min_idx		598272	1					
ANR	598908	IdentifierDeclStatement	bool found = false ;	1424:4:34902:34920	598272	5	True				
ANR	598909	IdentifierDecl	found = false		598272	0					
ANR	598910	IdentifierDeclType	bool		598272	0					
ANR	598911	Identifier	found		598272	1					
ANR	598912	AssignmentExpression	found = false		598272	2		=			
ANR	598913	Identifier	false		598272	0					
ANR	598914	Identifier	false		598272	1					
ANR	598915	IdentifierDeclStatement	"const char * key = sdb_fmt ( ""%d"" , num ) ;"	1425:4:34926:34963	598272	6	True				
ANR	598916	IdentifierDecl	"* key = sdb_fmt ( ""%d"" , num )"		598272	0					
ANR	598917	IdentifierDeclType	const char *		598272	0					
ANR	598918	Identifier	key		598272	1					
ANR	598919	AssignmentExpression	"* key = sdb_fmt ( ""%d"" , num )"		598272	2		=			
ANR	598920	Identifier	key		598272	0					
ANR	598921	CallExpression	"sdb_fmt ( ""%d"" , num )"		598272	1					
ANR	598922	Callee	sdb_fmt		598272	0					
ANR	598923	Identifier	sdb_fmt		598272	0					
ANR	598924	ArgumentList	"""%d"""		598272	1					
ANR	598925	Argument	"""%d"""		598272	0					
ANR	598926	PrimaryExpression	"""%d"""		598272	0					
ANR	598927	Argument	num		598272	1					
ANR	598928	Identifier	num		598272	0					
ANR	598929	IdentifierDeclStatement	"const char * name = sdb_ht_find ( mig_hash , key , & found ) ;"	1426:4:34969:35023	598272	7	True				
ANR	598930	IdentifierDecl	"* name = sdb_ht_find ( mig_hash , key , & found )"		598272	0					
ANR	598931	IdentifierDeclType	const char *		598272	0					
ANR	598932	Identifier	name		598272	1					
ANR	598933	AssignmentExpression	"* name = sdb_ht_find ( mig_hash , key , & found )"		598272	2		=			
ANR	598934	Identifier	name		598272	0					
ANR	598935	CallExpression	"sdb_ht_find ( mig_hash , key , & found )"		598272	1					
ANR	598936	Callee	sdb_ht_find		598272	0					
ANR	598937	Identifier	sdb_ht_find		598272	0					
ANR	598938	ArgumentList	mig_hash		598272	1					
ANR	598939	Argument	mig_hash		598272	0					
ANR	598940	Identifier	mig_hash		598272	0					
ANR	598941	Argument	key		598272	1					
ANR	598942	Identifier	key		598272	0					
ANR	598943	Argument	& found		598272	2					
ANR	598944	UnaryOperationExpression	& found		598272	0					
ANR	598945	UnaryOperator	&		598272	0					
ANR	598946	Identifier	found		598272	1					
ANR	598947	IfStatement	if ( found && name && * name )		598272	8					
ANR	598948	Condition	found && name && * name	1427:8:35033:35054	598272	0	True				
ANR	598949	AndExpression	found && name && * name		598272	0		&&			
ANR	598950	Identifier	found		598272	0					
ANR	598951	AndExpression	name && * name		598272	1		&&			
ANR	598952	Identifier	name		598272	0					
ANR	598953	UnaryOperationExpression	* name		598272	1					
ANR	598954	UnaryOperator	*		598272	0					
ANR	598955	Identifier	name		598272	1					
ANR	598956	CompoundStatement		110:32:3024:3024	598272	1					
ANR	598957	ExpressionStatement	"sym -> name = r_str_newf ( ""mig.%d.%s"" , num , name )"	1428:5:35064:35111	598272	0	True				
ANR	598958	AssignmentExpression	"sym -> name = r_str_newf ( ""mig.%d.%s"" , num , name )"		598272	0		=			
ANR	598959	PtrMemberAccess	sym -> name		598272	0					
ANR	598960	Identifier	sym		598272	0					
ANR	598961	Identifier	name		598272	1					
ANR	598962	CallExpression	"r_str_newf ( ""mig.%d.%s"" , num , name )"		598272	1					
ANR	598963	Callee	r_str_newf		598272	0					
ANR	598964	Identifier	r_str_newf		598272	0					
ANR	598965	ArgumentList	"""mig.%d.%s"""		598272	1					
ANR	598966	Argument	"""mig.%d.%s"""		598272	0					
ANR	598967	PrimaryExpression	"""mig.%d.%s"""		598272	0					
ANR	598968	Argument	num		598272	1					
ANR	598969	Identifier	num		598272	0					
ANR	598970	Argument	name		598272	2					
ANR	598971	Identifier	name		598272	0					
ANR	598972	ElseStatement	else		598272	0					
ANR	598973	CompoundStatement		112:11:3091:3091	598272	0					
ANR	598974	ExpressionStatement	"sym -> name = r_str_newf ( ""mig.%d"" , num )"	1430:5:35131:35169	598272	0	True				
ANR	598975	AssignmentExpression	"sym -> name = r_str_newf ( ""mig.%d"" , num )"		598272	0		=			
ANR	598976	PtrMemberAccess	sym -> name		598272	0					
ANR	598977	Identifier	sym		598272	0					
ANR	598978	Identifier	name		598272	1					
ANR	598979	CallExpression	"r_str_newf ( ""mig.%d"" , num )"		598272	1					
ANR	598980	Callee	r_str_newf		598272	0					
ANR	598981	Identifier	r_str_newf		598272	0					
ANR	598982	ArgumentList	"""mig.%d"""		598272	1					
ANR	598983	Argument	"""mig.%d"""		598272	0					
ANR	598984	PrimaryExpression	"""mig.%d"""		598272	0					
ANR	598985	Argument	num		598272	1					
ANR	598986	Identifier	num		598272	0					
ANR	598987	ExpressionStatement	sym -> vaddr = routine_p	1433:4:35182:35204	598272	9	True				
ANR	598988	AssignmentExpression	sym -> vaddr = routine_p		598272	0		=			
ANR	598989	PtrMemberAccess	sym -> vaddr		598272	0					
ANR	598990	Identifier	sym		598272	0					
ANR	598991	Identifier	vaddr		598272	1					
ANR	598992	Identifier	routine_p		598272	1					
ANR	598993	ExpressionStatement	sym -> paddr = sym -> vaddr - text_exec_vaddr + text_exec_offset	1434:4:35210:35270	598272	10	True				
ANR	598994	AssignmentExpression	sym -> paddr = sym -> vaddr - text_exec_vaddr + text_exec_offset		598272	0		=			
ANR	598995	PtrMemberAccess	sym -> paddr		598272	0					
ANR	598996	Identifier	sym		598272	0					
ANR	598997	Identifier	paddr		598272	1					
ANR	598998	AdditiveExpression	sym -> vaddr - text_exec_vaddr + text_exec_offset		598272	1		-			
ANR	598999	PtrMemberAccess	sym -> vaddr		598272	0					
ANR	599000	Identifier	sym		598272	0					
ANR	599001	Identifier	vaddr		598272	1					
ANR	599002	AdditiveExpression	text_exec_vaddr + text_exec_offset		598272	1		+			
ANR	599003	Identifier	text_exec_vaddr		598272	0					
ANR	599004	Identifier	text_exec_offset		598272	1					
ANR	599005	ExpressionStatement	sym -> size = 0	1435:4:35276:35289	598272	11	True				
ANR	599006	AssignmentExpression	sym -> size = 0		598272	0		=			
ANR	599007	PtrMemberAccess	sym -> size		598272	0					
ANR	599008	Identifier	sym		598272	0					
ANR	599009	Identifier	size		598272	1					
ANR	599010	PrimaryExpression	0		598272	1					
ANR	599011	ExpressionStatement	"sym -> forwarder = r_str_const ( ""NONE"" )"	1436:4:35295:35332	598272	12	True				
ANR	599012	AssignmentExpression	"sym -> forwarder = r_str_const ( ""NONE"" )"		598272	0		=			
ANR	599013	PtrMemberAccess	sym -> forwarder		598272	0					
ANR	599014	Identifier	sym		598272	0					
ANR	599015	Identifier	forwarder		598272	1					
ANR	599016	CallExpression	"r_str_const ( ""NONE"" )"		598272	1					
ANR	599017	Callee	r_str_const		598272	0					
ANR	599018	Identifier	r_str_const		598272	0					
ANR	599019	ArgumentList	"""NONE"""		598272	1					
ANR	599020	Argument	"""NONE"""		598272	0					
ANR	599021	PrimaryExpression	"""NONE"""		598272	0					
ANR	599022	ExpressionStatement	"sym -> bind = r_str_const ( ""GLOBAL"" )"	1437:4:35338:35372	598272	13	True				
ANR	599023	AssignmentExpression	"sym -> bind = r_str_const ( ""GLOBAL"" )"		598272	0		=			
ANR	599024	PtrMemberAccess	sym -> bind		598272	0					
ANR	599025	Identifier	sym		598272	0					
ANR	599026	Identifier	bind		598272	1					
ANR	599027	CallExpression	"r_str_const ( ""GLOBAL"" )"		598272	1					
ANR	599028	Callee	r_str_const		598272	0					
ANR	599029	Identifier	r_str_const		598272	0					
ANR	599030	ArgumentList	"""GLOBAL"""		598272	1					
ANR	599031	Argument	"""GLOBAL"""		598272	0					
ANR	599032	PrimaryExpression	"""GLOBAL"""		598272	0					
ANR	599033	ExpressionStatement	"sym -> type = r_str_const ( ""OBJECT"" )"	1438:4:35378:35412	598272	14	True				
ANR	599034	AssignmentExpression	"sym -> type = r_str_const ( ""OBJECT"" )"		598272	0		=			
ANR	599035	PtrMemberAccess	sym -> type		598272	0					
ANR	599036	Identifier	sym		598272	0					
ANR	599037	Identifier	type		598272	1					
ANR	599038	CallExpression	"r_str_const ( ""OBJECT"" )"		598272	1					
ANR	599039	Callee	r_str_const		598272	0					
ANR	599040	Identifier	r_str_const		598272	0					
ANR	599041	ArgumentList	"""OBJECT"""		598272	1					
ANR	599042	Argument	"""OBJECT"""		598272	0					
ANR	599043	PrimaryExpression	"""OBJECT"""		598272	0					
ANR	599044	ExpressionStatement	"r_list_append ( subsystem , sym )"	1439:4:35418:35448	598272	15	True				
ANR	599045	CallExpression	"r_list_append ( subsystem , sym )"		598272	0					
ANR	599046	Callee	r_list_append		598272	0					
ANR	599047	Identifier	r_list_append		598272	0					
ANR	599048	ArgumentList	subsystem		598272	1					
ANR	599049	Argument	subsystem		598272	0					
ANR	599050	Identifier	subsystem		598272	0					
ANR	599051	Argument	sym		598272	1					
ANR	599052	Identifier	sym		598272	0					
ANR	599053	ExpressionStatement	cursor += K_MIG_SUBSYSTEM_SIZE + n_routines * K_MIG_ROUTINE_SIZE	1442:3:35459:35523	598272	1	True				
ANR	599054	AssignmentExpression	cursor += K_MIG_SUBSYSTEM_SIZE + n_routines * K_MIG_ROUTINE_SIZE		598272	0		+=			
ANR	599055	Identifier	cursor		598272	0					
ANR	599056	AdditiveExpression	K_MIG_SUBSYSTEM_SIZE + n_routines * K_MIG_ROUTINE_SIZE		598272	1		+			
ANR	599057	Identifier	K_MIG_SUBSYSTEM_SIZE		598272	0					
ANR	599058	MultiplicativeExpression	n_routines * K_MIG_ROUTINE_SIZE		598272	1		*			
ANR	599059	Identifier	n_routines		598272	0					
ANR	599060	Identifier	K_MIG_ROUTINE_SIZE		598272	1					
ANR	599061	ElseStatement	else		598272	0					
ANR	599062	CompoundStatement		126:9:3501:3501	598272	0					
ANR	599063	ExpressionStatement	cursor += 8	1444:3:35539:35550	598272	0	True				
ANR	599064	AssignmentExpression	cursor += 8		598272	0		+=			
ANR	599065	Identifier	cursor		598272	0					
ANR	599066	PrimaryExpression	8		598272	1					
ANR	599067	ExpressionStatement	R_FREE ( routines )	1447:2:35559:35576	598272	14	True				
ANR	599068	CallExpression	R_FREE ( routines )		598272	0					
ANR	599069	Callee	R_FREE		598272	0					
ANR	599070	Identifier	R_FREE		598272	0					
ANR	599071	ArgumentList	routines		598272	1					
ANR	599072	Argument	routines		598272	0					
ANR	599073	Identifier	routines		598272	0					
ANR	599074	ExpressionStatement	sdb_ht_free ( mig_hash )	1450:1:35583:35605	598272	21	True				
ANR	599075	CallExpression	sdb_ht_free ( mig_hash )		598272	0					
ANR	599076	Callee	sdb_ht_free		598272	0					
ANR	599077	Identifier	sdb_ht_free		598272	0					
ANR	599078	ArgumentList	mig_hash		598272	1					
ANR	599079	Argument	mig_hash		598272	0					
ANR	599080	Identifier	mig_hash		598272	0					
ANR	599081	ExpressionStatement	R_FREE ( data_const )	1451:1:35608:35627	598272	22	True				
ANR	599082	CallExpression	R_FREE ( data_const )		598272	0					
ANR	599083	Callee	R_FREE		598272	0					
ANR	599084	Identifier	R_FREE		598272	0					
ANR	599085	ArgumentList	data_const		598272	1					
ANR	599086	Argument	data_const		598272	0					
ANR	599087	Identifier	data_const		598272	0					
ANR	599088	ExpressionStatement	R_FREE ( sections )	1452:1:35630:35647	598272	23	True				
ANR	599089	CallExpression	R_FREE ( sections )		598272	0					
ANR	599090	Callee	R_FREE		598272	0					
ANR	599091	Identifier	R_FREE		598272	0					
ANR	599092	ArgumentList	sections		598272	1					
ANR	599093	Argument	sections		598272	0					
ANR	599094	Identifier	sections		598272	0					
ANR	599095	ReturnStatement	return subsystem ;	1453:1:35650:35666	598272	24	True				
ANR	599096	Identifier	subsystem		598272	0					
ANR	599097	Label	beach :	1455:0:35669:35674	598272	25	True				
ANR	599098	Identifier	beach		598272	0					
ANR	599099	IfStatement	if ( subsystem )		598272	26					
ANR	599100	Condition	subsystem	1456:5:35681:35689	598272	0	True				
ANR	599101	Identifier	subsystem		598272	0					
ANR	599102	CompoundStatement		139:16:3659:3659	598272	1					
ANR	599103	ExpressionStatement	r_list_free ( subsystem )	1457:2:35696:35719	598272	0	True				
ANR	599104	CallExpression	r_list_free ( subsystem )		598272	0					
ANR	599105	Callee	r_list_free		598272	0					
ANR	599106	Identifier	r_list_free		598272	0					
ANR	599107	ArgumentList	subsystem		598272	1					
ANR	599108	Argument	subsystem		598272	0					
ANR	599109	Identifier	subsystem		598272	0					
ANR	599110	IfStatement	if ( mig_hash )		598272	27					
ANR	599111	Condition	mig_hash	1459:5:35729:35736	598272	0	True				
ANR	599112	Identifier	mig_hash		598272	0					
ANR	599113	CompoundStatement		142:15:3706:3706	598272	1					
ANR	599114	ExpressionStatement	sdb_ht_free ( mig_hash )	1460:2:35743:35765	598272	0	True				
ANR	599115	CallExpression	sdb_ht_free ( mig_hash )		598272	0					
ANR	599116	Callee	sdb_ht_free		598272	0					
ANR	599117	Identifier	sdb_ht_free		598272	0					
ANR	599118	ArgumentList	mig_hash		598272	1					
ANR	599119	Argument	mig_hash		598272	0					
ANR	599120	Identifier	mig_hash		598272	0					
ANR	599121	ExpressionStatement	R_FREE ( data_const )	1462:1:35771:35790	598272	28	True				
ANR	599122	CallExpression	R_FREE ( data_const )		598272	0					
ANR	599123	Callee	R_FREE		598272	0					
ANR	599124	Identifier	R_FREE		598272	0					
ANR	599125	ArgumentList	data_const		598272	1					
ANR	599126	Argument	data_const		598272	0					
ANR	599127	Identifier	data_const		598272	0					
ANR	599128	ExpressionStatement	R_FREE ( sections )	1463:1:35793:35810	598272	29	True				
ANR	599129	CallExpression	R_FREE ( sections )		598272	0					
ANR	599130	Callee	R_FREE		598272	0					
ANR	599131	Identifier	R_FREE		598272	0					
ANR	599132	ArgumentList	sections		598272	1					
ANR	599133	Argument	sections		598272	0					
ANR	599134	Identifier	sections		598272	0					
ANR	599135	ReturnStatement	return NULL ;	1464:1:35813:35824	598272	30	True				
ANR	599136	Identifier	NULL		598272	0					
ANR	599137	ReturnType	static RList *		598272	1					
ANR	599138	Identifier	resolve_mig_subsystem		598272	2					
ANR	599139	ParameterList	RKernelCacheObj * obj		598272	3					
ANR	599140	Parameter	RKernelCacheObj * obj	1318:36:32010:32029	598272	0	True				
ANR	599141	ParameterType	RKernelCacheObj *		598272	0					
ANR	599142	Identifier	obj		598272	1					
ANR	599143	CFGEntryNode	ENTRY		598272		True				
ANR	599144	CFGExitNode	EXIT		598272		True				
ANR	599145	Symbol	sym -> bind		598272						
ANR	599146	Symbol	sections [ i ] . addr		598272						
ANR	599147	Symbol	num		598272						
ANR	599148	Symbol	subsystem		598272						
ANR	599149	Symbol	* routines		598272						
ANR	599150	Symbol	sym -> type		598272						
ANR	599151	Symbol	& found		598272						
ANR	599152	Symbol	incomplete		598272						
ANR	599153	Symbol	get_sections		598272						
ANR	599154	Symbol	obj -> mach0		598272						
ANR	599155	Symbol	* idx		598272						
ANR	599156	Symbol	text_exec_offset		598272						
ANR	599157	Symbol	NULL		598272						
ANR	599158	Symbol	r_read_le32		598272						
ANR	599159	Symbol	r_list_newf		598272						
ANR	599160	Symbol	is_consistent		598272						
ANR	599161	Symbol	sym -> vaddr		598272						
ANR	599162	Symbol	data_const		598272						
ANR	599163	Symbol	n_routines		598272						
ANR	599164	Symbol	K_PPTR		598272						
ANR	599165	Symbol	K_MIG_MAX_ROUTINES		598272						
ANR	599166	Symbol	end_array		598272						
ANR	599167	Symbol	sections		598272						
ANR	599168	Symbol	R_NEW0		598272						
ANR	599169	Symbol	* sym		598272						
ANR	599170	Symbol	strstr		598272						
ANR	599171	Symbol	sym -> name		598272						
ANR	599172	Symbol	subs_p		598272						
ANR	599173	Symbol	true		598272						
ANR	599174	Symbol	name		598272						
ANR	599175	Symbol	idx		598272						
ANR	599176	Symbol	RBinSymbol		598272						
ANR	599177	Symbol	cursor		598272						
ANR	599178	Symbol	array_cursor		598272						
ANR	599179	Symbol	r_read_le64		598272						
ANR	599180	Symbol	subs_max_idx		598272						
ANR	599181	Symbol	sym		598272						
ANR	599182	Symbol	text_exec_size		598272						
ANR	599183	Symbol	r_str_newf		598272						
ANR	599184	Symbol	sym -> size		598272						
ANR	599185	Symbol	found		598272						
ANR	599186	Symbol	data_const_vaddr		598272						
ANR	599187	Symbol	obj -> cache_buf		598272						
ANR	599188	Symbol	end		598272						
ANR	599189	Symbol	K_MIG_SUBSYSTEM_SIZE		598272						
ANR	599190	Symbol	sdb_fmt		598272						
ANR	599191	Symbol	sym -> forwarder		598272						
ANR	599192	Symbol	key		598272						
ANR	599193	Symbol	mig_hash_new		598272						
ANR	599194	Symbol	text_exec_vaddr		598272						
ANR	599195	Symbol	sections [ i ] . offset		598272						
ANR	599196	Symbol	* name		598272						
ANR	599197	Symbol	r_str_const		598272						
ANR	599198	Symbol	* obj		598272						
ANR	599199	Symbol	malloc		598272						
ANR	599200	Symbol	K_MIG_ROUTINE_SIZE		598272						
ANR	599201	Symbol	r_bin_symbol_free		598272						
ANR	599202	Symbol	subs_min_idx		598272						
ANR	599203	Symbol	false		598272						
ANR	599204	Symbol	sym -> paddr		598272						
ANR	599205	Symbol	data_const_offset		598272						
ANR	599206	Symbol	i		598272						
ANR	599207	Symbol	sections [ i ] . last		598272						
ANR	599208	Symbol	sdb_ht_find		598272						
ANR	599209	Symbol	should_be_null		598272						
ANR	599210	Symbol	MACH0_		598272						
ANR	599211	Symbol	* i		598272						
ANR	599212	Symbol	obj		598272						
ANR	599213	Symbol	routine_p		598272						
ANR	599214	Symbol	sections [ i ] . name		598272						
ANR	599215	Symbol	r_buf_read_at		598272						
ANR	599216	Symbol	routines		598272						
ANR	599217	Symbol	data_const_size		598272						
ANR	599218	Symbol	sections [ i ] . size		598272						
ANR	599219	Symbol	* sections		598272						
ANR	599220	Symbol	mig_hash		598272						
ANR	599221	Function	extract_addr_from_code	1467:0:35829:36191							
ANR	599222	FunctionDef	"extract_addr_from_code (ut8 * arm64_code , ut64 vaddr)"		599221	0					
ANR	599223	CompoundStatement		1467:64:35893:36191	599221	0					
ANR	599224	IdentifierDeclStatement	ut64 addr = vaddr & ~0xfff ;	1468:1:35896:35922	599221	0	True				
ANR	599225	IdentifierDecl	addr = vaddr & ~0xfff		599221	0					
ANR	599226	IdentifierDeclType	ut64		599221	0					
ANR	599227	Identifier	addr		599221	1					
ANR	599228	AssignmentExpression	addr = vaddr & ~0xfff		599221	2		=			
ANR	599229	Identifier	addr		599221	0					
ANR	599230	BitAndExpression	vaddr & ~0xfff		599221	1		&			
ANR	599231	Identifier	vaddr		599221	0					
ANR	599232	Identifier	~0xfff		599221	1					
ANR	599233	IdentifierDeclStatement	ut64 adrp = r_read_le32 ( arm64_code ) ;	1470:1:35926:35962	599221	1	True				
ANR	599234	IdentifierDecl	adrp = r_read_le32 ( arm64_code )		599221	0					
ANR	599235	IdentifierDeclType	ut64		599221	0					
ANR	599236	Identifier	adrp		599221	1					
ANR	599237	AssignmentExpression	adrp = r_read_le32 ( arm64_code )		599221	2		=			
ANR	599238	Identifier	adrp		599221	0					
ANR	599239	CallExpression	r_read_le32 ( arm64_code )		599221	1					
ANR	599240	Callee	r_read_le32		599221	0					
ANR	599241	Identifier	r_read_le32		599221	0					
ANR	599242	ArgumentList	arm64_code		599221	1					
ANR	599243	Argument	arm64_code		599221	0					
ANR	599244	Identifier	arm64_code		599221	0					
ANR	599245	IdentifierDeclStatement	ut64 adrp_offset = ( ( adrp & 0x60000000 ) >> 29 ) | ( ( adrp & 0xffffe0 ) >> 3 ) ;	1471:1:35965:36038	599221	2	True				
ANR	599246	IdentifierDecl	adrp_offset = ( ( adrp & 0x60000000 ) >> 29 ) | ( ( adrp & 0xffffe0 ) >> 3 )		599221	0					
ANR	599247	IdentifierDeclType	ut64		599221	0					
ANR	599248	Identifier	adrp_offset		599221	1					
ANR	599249	AssignmentExpression	adrp_offset = ( ( adrp & 0x60000000 ) >> 29 ) | ( ( adrp & 0xffffe0 ) >> 3 )		599221	2		=			
ANR	599250	Identifier	adrp_offset		599221	0					
ANR	599251	InclusiveOrExpression	( ( adrp & 0x60000000 ) >> 29 ) | ( ( adrp & 0xffffe0 ) >> 3 )		599221	1		|			
ANR	599252	ShiftExpression	( adrp & 0x60000000 ) >> 29		599221	0		>>			
ANR	599253	BitAndExpression	adrp & 0x60000000		599221	0		&			
ANR	599254	Identifier	adrp		599221	0					
ANR	599255	PrimaryExpression	0x60000000		599221	1					
ANR	599256	PrimaryExpression	29		599221	1					
ANR	599257	ShiftExpression	( adrp & 0xffffe0 ) >> 3		599221	1		>>			
ANR	599258	BitAndExpression	adrp & 0xffffe0		599221	0		&			
ANR	599259	Identifier	adrp		599221	0					
ANR	599260	PrimaryExpression	0xffffe0		599221	1					
ANR	599261	PrimaryExpression	3		599221	1					
ANR	599262	ExpressionStatement	addr += adrp_offset << 12	1472:1:36041:36066	599221	3	True				
ANR	599263	AssignmentExpression	addr += adrp_offset << 12		599221	0		+=			
ANR	599264	Identifier	addr		599221	0					
ANR	599265	ShiftExpression	adrp_offset << 12		599221	1		<<			
ANR	599266	Identifier	adrp_offset		599221	0					
ANR	599267	PrimaryExpression	12		599221	1					
ANR	599268	IdentifierDeclStatement	ut64 ldr = r_read_le32 ( arm64_code + 4 ) ;	1474:1:36070:36109	599221	4	True				
ANR	599269	IdentifierDecl	ldr = r_read_le32 ( arm64_code + 4 )		599221	0					
ANR	599270	IdentifierDeclType	ut64		599221	0					
ANR	599271	Identifier	ldr		599221	1					
ANR	599272	AssignmentExpression	ldr = r_read_le32 ( arm64_code + 4 )		599221	2		=			
ANR	599273	Identifier	ldr		599221	0					
ANR	599274	CallExpression	r_read_le32 ( arm64_code + 4 )		599221	1					
ANR	599275	Callee	r_read_le32		599221	0					
ANR	599276	Identifier	r_read_le32		599221	0					
ANR	599277	ArgumentList	arm64_code + 4		599221	1					
ANR	599278	Argument	arm64_code + 4		599221	0					
ANR	599279	AdditiveExpression	arm64_code + 4		599221	0		+			
ANR	599280	Identifier	arm64_code		599221	0					
ANR	599281	PrimaryExpression	4		599221	1					
ANR	599282	ExpressionStatement	addr += ( ( ldr & 0x3ffc00 ) >> 10 ) << ( ( ldr & 0xc0000000 ) >> 30 )	1475:1:36112:36174	599221	5	True				
ANR	599283	AssignmentExpression	addr += ( ( ldr & 0x3ffc00 ) >> 10 ) << ( ( ldr & 0xc0000000 ) >> 30 )		599221	0		+=			
ANR	599284	Identifier	addr		599221	0					
ANR	599285	ShiftExpression	( ( ldr & 0x3ffc00 ) >> 10 ) << ( ( ldr & 0xc0000000 ) >> 30 )		599221	1		<<			
ANR	599286	ShiftExpression	( ldr & 0x3ffc00 ) >> 10		599221	0		>>			
ANR	599287	BitAndExpression	ldr & 0x3ffc00		599221	0		&			
ANR	599288	Identifier	ldr		599221	0					
ANR	599289	PrimaryExpression	0x3ffc00		599221	1					
ANR	599290	PrimaryExpression	10		599221	1					
ANR	599291	ShiftExpression	( ldr & 0xc0000000 ) >> 30		599221	1		>>			
ANR	599292	BitAndExpression	ldr & 0xc0000000		599221	0		&			
ANR	599293	Identifier	ldr		599221	0					
ANR	599294	PrimaryExpression	0xc0000000		599221	1					
ANR	599295	PrimaryExpression	30		599221	1					
ANR	599296	ReturnStatement	return addr ;	1477:1:36178:36189	599221	6	True				
ANR	599297	Identifier	addr		599221	0					
ANR	599298	ReturnType	static ut64		599221	1					
ANR	599299	Identifier	extract_addr_from_code		599221	2					
ANR	599300	ParameterList	"ut8 * arm64_code , ut64 vaddr"		599221	3					
ANR	599301	Parameter	ut8 * arm64_code	1467:35:35864:35878	599221	0	True				
ANR	599302	ParameterType	ut8 *		599221	0					
ANR	599303	Identifier	arm64_code		599221	1					
ANR	599304	Parameter	ut64 vaddr	1467:52:35881:35890	599221	1	True				
ANR	599305	ParameterType	ut64		599221	0					
ANR	599306	Identifier	vaddr		599221	1					
ANR	599307	CFGEntryNode	ENTRY		599221		True				
ANR	599308	CFGExitNode	EXIT		599221		True				
ANR	599309	Symbol	arm64_code		599221						
ANR	599310	Symbol	r_read_le32		599221						
ANR	599311	Symbol	vaddr		599221						
ANR	599312	Symbol	ldr		599221						
ANR	599313	Symbol	addr		599221						
ANR	599314	Symbol	adrp		599221						
ANR	599315	Symbol	adrp_offset		599221						
ANR	599316	Symbol	~0xfff		599221						
ANR	599317	Function	symbols_from_stubs	1480:0:36194:38905							
ANR	599318	FunctionDef	"symbols_from_stubs (RList * ret , HtPP * kernel_syms_by_addr , RKernelCacheObj * obj , RBinFile * bf , RKext * kext , int ordinal)"		599317	0					
ANR	599319	CompoundStatement		1480:132:36326:38905	599317	0					
ANR	599320	IdentifierDeclStatement	"RStubsInfo * stubs_info = get_stubs_info ( kext -> mach0 , kext -> range . offset , obj ) ;"	1481:1:36329:36406	599317	0	True				
ANR	599321	IdentifierDecl	"* stubs_info = get_stubs_info ( kext -> mach0 , kext -> range . offset , obj )"		599317	0					
ANR	599322	IdentifierDeclType	RStubsInfo *		599317	0					
ANR	599323	Identifier	stubs_info		599317	1					
ANR	599324	AssignmentExpression	"* stubs_info = get_stubs_info ( kext -> mach0 , kext -> range . offset , obj )"		599317	2		=			
ANR	599325	Identifier	stubs_info		599317	0					
ANR	599326	CallExpression	"get_stubs_info ( kext -> mach0 , kext -> range . offset , obj )"		599317	1					
ANR	599327	Callee	get_stubs_info		599317	0					
ANR	599328	Identifier	get_stubs_info		599317	0					
ANR	599329	ArgumentList	kext -> mach0		599317	1					
ANR	599330	Argument	kext -> mach0		599317	0					
ANR	599331	PtrMemberAccess	kext -> mach0		599317	0					
ANR	599332	Identifier	kext		599317	0					
ANR	599333	Identifier	mach0		599317	1					
ANR	599334	Argument	kext -> range . offset		599317	1					
ANR	599335	MemberAccess	kext -> range . offset		599317	0					
ANR	599336	PtrMemberAccess	kext -> range		599317	0					
ANR	599337	Identifier	kext		599317	0					
ANR	599338	Identifier	range		599317	1					
ANR	599339	Identifier	offset		599317	1					
ANR	599340	Argument	obj		599317	2					
ANR	599341	Identifier	obj		599317	0					
ANR	599342	IfStatement	if ( ! stubs_info )		599317	1					
ANR	599343	Condition	! stubs_info	1482:5:36413:36423	599317	0	True				
ANR	599344	UnaryOperationExpression	! stubs_info		599317	0					
ANR	599345	UnaryOperator	!		599317	0					
ANR	599346	Identifier	stubs_info		599317	1					
ANR	599347	CompoundStatement		3:18:99:99	599317	1					
ANR	599348	ReturnStatement	return ;	1483:2:36430:36436	599317	0	True				
ANR	599349	IdentifierDeclStatement	ut64 stubs_cursor = stubs_info -> stubs . offset ;	1485:1:36442:36486	599317	2	True				
ANR	599350	IdentifierDecl	stubs_cursor = stubs_info -> stubs . offset		599317	0					
ANR	599351	IdentifierDeclType	ut64		599317	0					
ANR	599352	Identifier	stubs_cursor		599317	1					
ANR	599353	AssignmentExpression	stubs_cursor = stubs_info -> stubs . offset		599317	2		=			
ANR	599354	Identifier	stubs_cursor		599317	0					
ANR	599355	MemberAccess	stubs_info -> stubs . offset		599317	1					
ANR	599356	PtrMemberAccess	stubs_info -> stubs		599317	0					
ANR	599357	Identifier	stubs_info		599317	0					
ANR	599358	Identifier	stubs		599317	1					
ANR	599359	Identifier	offset		599317	1					
ANR	599360	IdentifierDeclStatement	ut64 stubs_end = stubs_cursor + stubs_info -> stubs . size ;	1486:1:36489:36543	599317	3	True				
ANR	599361	IdentifierDecl	stubs_end = stubs_cursor + stubs_info -> stubs . size		599317	0					
ANR	599362	IdentifierDeclType	ut64		599317	0					
ANR	599363	Identifier	stubs_end		599317	1					
ANR	599364	AssignmentExpression	stubs_end = stubs_cursor + stubs_info -> stubs . size		599317	2		=			
ANR	599365	Identifier	stubs_end		599317	0					
ANR	599366	AdditiveExpression	stubs_cursor + stubs_info -> stubs . size		599317	1		+			
ANR	599367	Identifier	stubs_cursor		599317	0					
ANR	599368	MemberAccess	stubs_info -> stubs . size		599317	1					
ANR	599369	PtrMemberAccess	stubs_info -> stubs		599317	0					
ANR	599370	Identifier	stubs_info		599317	0					
ANR	599371	Identifier	stubs		599317	1					
ANR	599372	Identifier	size		599317	1					
ANR	599373	ForStatement	for ( ; stubs_cursor < stubs_end ; stubs_cursor += 12 )		599317	4					
ANR	599374	Condition	stubs_cursor < stubs_end	1488:8:36554:36577	599317	0	True				
ANR	599375	RelationalExpression	stubs_cursor < stubs_end		599317	0		<			
ANR	599376	Identifier	stubs_cursor		599317	0					
ANR	599377	Identifier	stubs_end		599317	1					
ANR	599378	AssignmentExpression	stubs_cursor += 12	1488:34:36580:36597	599317	1	True	+=			
ANR	599379	Identifier	stubs_cursor		599317	0					
ANR	599380	PrimaryExpression	12		599317	1					
ANR	599381	CompoundStatement		82:2:2084:2127	599317	2					
ANR	599382	IdentifierDeclStatement	ut8 arm64_code [ 8 ] ;	1489:2:36604:36621	599317	0	True				
ANR	599383	IdentifierDecl	arm64_code [ 8 ]		599317	0					
ANR	599384	IdentifierDeclType	ut8 [ 8 ]		599317	0					
ANR	599385	Identifier	arm64_code		599317	1					
ANR	599386	PrimaryExpression	8		599317	2					
ANR	599387	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , stubs_cursor , arm64_code , 8 ) < 8 )"		599317	1					
ANR	599388	Condition	"r_buf_read_at ( obj -> cache_buf , stubs_cursor , arm64_code , 8 ) < 8"	1490:6:36629:36691	599317	0	True				
ANR	599389	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , stubs_cursor , arm64_code , 8 ) < 8"		599317	0		<			
ANR	599390	CallExpression	"r_buf_read_at ( obj -> cache_buf , stubs_cursor , arm64_code , 8 )"		599317	0					
ANR	599391	Callee	r_buf_read_at		599317	0					
ANR	599392	Identifier	r_buf_read_at		599317	0					
ANR	599393	ArgumentList	obj -> cache_buf		599317	1					
ANR	599394	Argument	obj -> cache_buf		599317	0					
ANR	599395	PtrMemberAccess	obj -> cache_buf		599317	0					
ANR	599396	Identifier	obj		599317	0					
ANR	599397	Identifier	cache_buf		599317	1					
ANR	599398	Argument	stubs_cursor		599317	1					
ANR	599399	Identifier	stubs_cursor		599317	0					
ANR	599400	Argument	arm64_code		599317	2					
ANR	599401	Identifier	arm64_code		599317	0					
ANR	599402	Argument	8		599317	3					
ANR	599403	PrimaryExpression	8		599317	0					
ANR	599404	PrimaryExpression	8		599317	1					
ANR	599405	CompoundStatement		11:71:367:367	599317	1					
ANR	599406	BreakStatement	break ;	1491:3:36699:36704	599317	0	True				
ANR	599407	IdentifierDeclStatement	ut64 vaddr = stubs_cursor + obj -> pa2va_exec ;	1494:2:36713:36756	599317	2	True				
ANR	599408	IdentifierDecl	vaddr = stubs_cursor + obj -> pa2va_exec		599317	0					
ANR	599409	IdentifierDeclType	ut64		599317	0					
ANR	599410	Identifier	vaddr		599317	1					
ANR	599411	AssignmentExpression	vaddr = stubs_cursor + obj -> pa2va_exec		599317	2		=			
ANR	599412	Identifier	vaddr		599317	0					
ANR	599413	AdditiveExpression	stubs_cursor + obj -> pa2va_exec		599317	1		+			
ANR	599414	Identifier	stubs_cursor		599317	0					
ANR	599415	PtrMemberAccess	obj -> pa2va_exec		599317	1					
ANR	599416	Identifier	obj		599317	0					
ANR	599417	Identifier	pa2va_exec		599317	1					
ANR	599418	IdentifierDeclStatement	"ut64 addr_in_got = extract_addr_from_code ( arm64_code , vaddr ) ;"	1495:2:36760:36821	599317	3	True				
ANR	599419	IdentifierDecl	"addr_in_got = extract_addr_from_code ( arm64_code , vaddr )"		599317	0					
ANR	599420	IdentifierDeclType	ut64		599317	0					
ANR	599421	Identifier	addr_in_got		599317	1					
ANR	599422	AssignmentExpression	"addr_in_got = extract_addr_from_code ( arm64_code , vaddr )"		599317	2		=			
ANR	599423	Identifier	addr_in_got		599317	0					
ANR	599424	CallExpression	"extract_addr_from_code ( arm64_code , vaddr )"		599317	1					
ANR	599425	Callee	extract_addr_from_code		599317	0					
ANR	599426	Identifier	extract_addr_from_code		599317	0					
ANR	599427	ArgumentList	arm64_code		599317	1					
ANR	599428	Argument	arm64_code		599317	0					
ANR	599429	Identifier	arm64_code		599317	0					
ANR	599430	Argument	vaddr		599317	1					
ANR	599431	Identifier	vaddr		599317	0					
ANR	599432	IdentifierDeclStatement	bool found = false ;	1497:2:36826:36844	599317	4	True				
ANR	599433	IdentifierDecl	found = false		599317	0					
ANR	599434	IdentifierDeclType	bool		599317	0					
ANR	599435	Identifier	found		599317	1					
ANR	599436	AssignmentExpression	found = false		599317	2		=			
ANR	599437	Identifier	false		599317	0					
ANR	599438	Identifier	false		599317	1					
ANR	599439	IdentifierDeclStatement	int level = 3 ;	1498:2:36848:36861	599317	5	True				
ANR	599440	IdentifierDecl	level = 3		599317	0					
ANR	599441	IdentifierDeclType	int		599317	0					
ANR	599442	Identifier	level		599317	1					
ANR	599443	AssignmentExpression	level = 3		599317	2		=			
ANR	599444	Identifier	level		599317	0					
ANR	599445	PrimaryExpression	3		599317	1					
ANR	599446	IdentifierDeclStatement	ut64 target_addr = UT64_MAX ;	1500:2:36866:36893	599317	6	True				
ANR	599447	IdentifierDecl	target_addr = UT64_MAX		599317	0					
ANR	599448	IdentifierDeclType	ut64		599317	0					
ANR	599449	Identifier	target_addr		599317	1					
ANR	599450	AssignmentExpression	target_addr = UT64_MAX		599317	2		=			
ANR	599451	Identifier	UT64_MAX		599317	0					
ANR	599452	Identifier	UT64_MAX		599317	1					
ANR	599453	WhileStatement	while ( ! found && level -- > 0 )		599317	7					
ANR	599454	Condition	! found && level -- > 0	1502:9:36905:36925	599317	0	True				
ANR	599455	AndExpression	! found && level -- > 0		599317	0		&&			
ANR	599456	UnaryOperationExpression	! found		599317	0					
ANR	599457	UnaryOperator	!		599317	0					
ANR	599458	Identifier	found		599317	1					
ANR	599459	RelationalExpression	level -- > 0		599317	1		>			
ANR	599460	PostIncDecOperationExpression	level --		599317	0					
ANR	599461	Identifier	level		599317	0					
ANR	599462	IncDec	--		599317	1					
ANR	599463	PrimaryExpression	0		599317	1					
ANR	599464	CompoundStatement		35:3:869:934	599317	1					
ANR	599465	IdentifierDeclStatement	ut64 offset_in_got = addr_in_got - obj -> pa2va_exec ;	1503:3:36933:36983	599317	0	True				
ANR	599466	IdentifierDecl	offset_in_got = addr_in_got - obj -> pa2va_exec		599317	0					
ANR	599467	IdentifierDeclType	ut64		599317	0					
ANR	599468	Identifier	offset_in_got		599317	1					
ANR	599469	AssignmentExpression	offset_in_got = addr_in_got - obj -> pa2va_exec		599317	2		=			
ANR	599470	Identifier	offset_in_got		599317	0					
ANR	599471	AdditiveExpression	addr_in_got - obj -> pa2va_exec		599317	1		-			
ANR	599472	Identifier	addr_in_got		599317	0					
ANR	599473	PtrMemberAccess	obj -> pa2va_exec		599317	1					
ANR	599474	Identifier	obj		599317	0					
ANR	599475	Identifier	pa2va_exec		599317	1					
ANR	599476	IdentifierDeclStatement	ut64 addr ;	1504:3:36988:36997	599317	1	True				
ANR	599477	IdentifierDecl	addr		599317	0					
ANR	599478	IdentifierDeclType	ut64		599317	0					
ANR	599479	Identifier	addr		599317	1					
ANR	599480	IfStatement	"if ( r_buf_read_at ( obj -> cache_buf , offset_in_got , ( ut8 * ) & addr , 8 ) < 8 )"		599317	2					
ANR	599481	Condition	"r_buf_read_at ( obj -> cache_buf , offset_in_got , ( ut8 * ) & addr , 8 ) < 8"	1505:7:37006:37071	599317	0	True				
ANR	599482	RelationalExpression	"r_buf_read_at ( obj -> cache_buf , offset_in_got , ( ut8 * ) & addr , 8 ) < 8"		599317	0		<			
ANR	599483	CallExpression	"r_buf_read_at ( obj -> cache_buf , offset_in_got , ( ut8 * ) & addr , 8 )"		599317	0					
ANR	599484	Callee	r_buf_read_at		599317	0					
ANR	599485	Identifier	r_buf_read_at		599317	0					
ANR	599486	ArgumentList	obj -> cache_buf		599317	1					
ANR	599487	Argument	obj -> cache_buf		599317	0					
ANR	599488	PtrMemberAccess	obj -> cache_buf		599317	0					
ANR	599489	Identifier	obj		599317	0					
ANR	599490	Identifier	cache_buf		599317	1					
ANR	599491	Argument	offset_in_got		599317	1					
ANR	599492	Identifier	offset_in_got		599317	0					
ANR	599493	Argument	( ut8 * ) & addr		599317	2					
ANR	599494	CastExpression	( ut8 * ) & addr		599317	0					
ANR	599495	CastTarget	ut8 *		599317	0					
ANR	599496	UnaryOperationExpression	& addr		599317	1					
ANR	599497	UnaryOperator	&		599317	0					
ANR	599498	Identifier	addr		599317	1					
ANR	599499	Argument	8		599317	3					
ANR	599500	PrimaryExpression	8		599317	0					
ANR	599501	PrimaryExpression	8		599317	1					
ANR	599502	CompoundStatement		26:75:747:747	599317	1					
ANR	599503	BreakStatement	break ;	1506:4:37080:37085	599317	0	True				
ANR	599504	IfStatement	if ( level == 2 )		599317	3					
ANR	599505	Condition	level == 2	1509:7:37100:37109	599317	0	True				
ANR	599506	EqualityExpression	level == 2		599317	0		==			
ANR	599507	Identifier	level		599317	0					
ANR	599508	PrimaryExpression	2		599317	1					
ANR	599509	CompoundStatement		30:19:785:785	599317	1					
ANR	599510	ExpressionStatement	target_addr = addr	1510:4:37118:37136	599317	0	True				
ANR	599511	AssignmentExpression	target_addr = addr		599317	0		=			
ANR	599512	Identifier	target_addr		599317	0					
ANR	599513	Identifier	addr		599317	1					
ANR	599514	Statement	const	1513:3:37147:37151	599317	4	True				
ANR	599515	Statement	char	1513:9:37153:37156	599317	5	True				
ANR	599516	Statement	*	1513:14:37158:37158	599317	6	True				
ANR	599517	Statement	key	1513:15:37159:37161	599317	7	True				
ANR	599518	Statement	=	1513:19:37163:37163	599317	8	True				
ANR	599519	Statement	sdb_fmt	1513:21:37165:37171	599317	9	True				
ANR	599520	Statement	(	1513:29:37173:37173	599317	10	True				
ANR	599521	Statement	"""%"""	1513:30:37174:37176	599317	11	True				
ANR	599522	Statement	PFMT64x	1513:33:37177:37183	599317	12	True				
ANR	599523	Statement	","	1513:40:37184:37184	599317	13	True				
ANR	599524	Statement	addr	1513:42:37186:37189	599317	14	True				
ANR	599525	Statement	)	1513:46:37190:37190	599317	15	True				
ANR	599526	ExpressionStatement		1513:47:37191:37191	599317	16	True				
ANR	599527	IdentifierDeclStatement	"const char * name = sdb_ht_find ( kernel_syms_by_addr , key , & found ) ;"	1514:3:37196:37261	599317	17	True				
ANR	599528	IdentifierDecl	"* name = sdb_ht_find ( kernel_syms_by_addr , key , & found )"		599317	0					
ANR	599529	IdentifierDeclType	const char *		599317	0					
ANR	599530	Identifier	name		599317	1					
ANR	599531	AssignmentExpression	"* name = sdb_ht_find ( kernel_syms_by_addr , key , & found )"		599317	2		=			
ANR	599532	Identifier	name		599317	0					
ANR	599533	CallExpression	"sdb_ht_find ( kernel_syms_by_addr , key , & found )"		599317	1					
ANR	599534	Callee	sdb_ht_find		599317	0					
ANR	599535	Identifier	sdb_ht_find		599317	0					
ANR	599536	ArgumentList	kernel_syms_by_addr		599317	1					
ANR	599537	Argument	kernel_syms_by_addr		599317	0					
ANR	599538	Identifier	kernel_syms_by_addr		599317	0					
ANR	599539	Argument	key		599317	1					
ANR	599540	Identifier	key		599317	0					
ANR	599541	Argument	& found		599317	2					
ANR	599542	UnaryOperationExpression	& found		599317	0					
ANR	599543	UnaryOperator	&		599317	0					
ANR	599544	Identifier	found		599317	1					
ANR	599545	IfStatement	if ( found )		599317	18					
ANR	599546	Condition	found	1516:7:37271:37275	599317	0	True				
ANR	599547	Identifier	found		599317	0					
ANR	599548	CompoundStatement		38:4:957:994	599317	1					
ANR	599549	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1517:4:37284:37321	599317	0	True				
ANR	599550	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		599317	0					
ANR	599551	IdentifierDeclType	RBinSymbol *		599317	0					
ANR	599552	Identifier	sym		599317	1					
ANR	599553	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		599317	2		=			
ANR	599554	Identifier	sym		599317	0					
ANR	599555	CallExpression	R_NEW0 ( RBinSymbol )		599317	1					
ANR	599556	Callee	R_NEW0		599317	0					
ANR	599557	Identifier	R_NEW0		599317	0					
ANR	599558	ArgumentList	RBinSymbol		599317	1					
ANR	599559	Argument	RBinSymbol		599317	0					
ANR	599560	Identifier	RBinSymbol		599317	0					
ANR	599561	IfStatement	if ( ! sym )		599317	1					
ANR	599562	Condition	! sym	1518:8:37331:37334	599317	0	True				
ANR	599563	UnaryOperationExpression	! sym		599317	0					
ANR	599564	UnaryOperator	!		599317	0					
ANR	599565	Identifier	sym		599317	1					
ANR	599566	CompoundStatement		39:14:1010:1010	599317	1					
ANR	599567	BreakStatement	break ;	1519:5:37344:37349	599317	0	True				
ANR	599568	ExpressionStatement	"sym -> name = r_str_newf ( ""stub.%s"" , name )"	1521:4:37361:37401	599317	2	True				
ANR	599569	AssignmentExpression	"sym -> name = r_str_newf ( ""stub.%s"" , name )"		599317	0		=			
ANR	599570	PtrMemberAccess	sym -> name		599317	0					
ANR	599571	Identifier	sym		599317	0					
ANR	599572	Identifier	name		599317	1					
ANR	599573	CallExpression	"r_str_newf ( ""stub.%s"" , name )"		599317	1					
ANR	599574	Callee	r_str_newf		599317	0					
ANR	599575	Identifier	r_str_newf		599317	0					
ANR	599576	ArgumentList	"""stub.%s"""		599317	1					
ANR	599577	Argument	"""stub.%s"""		599317	0					
ANR	599578	PrimaryExpression	"""stub.%s"""		599317	0					
ANR	599579	Argument	name		599317	1					
ANR	599580	Identifier	name		599317	0					
ANR	599581	ExpressionStatement	sym -> vaddr = vaddr	1522:4:37407:37425	599317	3	True				
ANR	599582	AssignmentExpression	sym -> vaddr = vaddr		599317	0		=			
ANR	599583	PtrMemberAccess	sym -> vaddr		599317	0					
ANR	599584	Identifier	sym		599317	0					
ANR	599585	Identifier	vaddr		599317	1					
ANR	599586	Identifier	vaddr		599317	1					
ANR	599587	ExpressionStatement	sym -> paddr = stubs_cursor	1523:4:37431:37456	599317	4	True				
ANR	599588	AssignmentExpression	sym -> paddr = stubs_cursor		599317	0		=			
ANR	599589	PtrMemberAccess	sym -> paddr		599317	0					
ANR	599590	Identifier	sym		599317	0					
ANR	599591	Identifier	paddr		599317	1					
ANR	599592	Identifier	stubs_cursor		599317	1					
ANR	599593	ExpressionStatement	sym -> size = 12	1524:4:37462:37476	599317	5	True				
ANR	599594	AssignmentExpression	sym -> size = 12		599317	0		=			
ANR	599595	PtrMemberAccess	sym -> size		599317	0					
ANR	599596	Identifier	sym		599317	0					
ANR	599597	Identifier	size		599317	1					
ANR	599598	PrimaryExpression	12		599317	1					
ANR	599599	ExpressionStatement	"sym -> forwarder = r_str_const ( ""NONE"" )"	1525:4:37482:37519	599317	6	True				
ANR	599600	AssignmentExpression	"sym -> forwarder = r_str_const ( ""NONE"" )"		599317	0		=			
ANR	599601	PtrMemberAccess	sym -> forwarder		599317	0					
ANR	599602	Identifier	sym		599317	0					
ANR	599603	Identifier	forwarder		599317	1					
ANR	599604	CallExpression	"r_str_const ( ""NONE"" )"		599317	1					
ANR	599605	Callee	r_str_const		599317	0					
ANR	599606	Identifier	r_str_const		599317	0					
ANR	599607	ArgumentList	"""NONE"""		599317	1					
ANR	599608	Argument	"""NONE"""		599317	0					
ANR	599609	PrimaryExpression	"""NONE"""		599317	0					
ANR	599610	ExpressionStatement	"sym -> bind = r_str_const ( ""LOCAL"" )"	1526:4:37525:37558	599317	7	True				
ANR	599611	AssignmentExpression	"sym -> bind = r_str_const ( ""LOCAL"" )"		599317	0		=			
ANR	599612	PtrMemberAccess	sym -> bind		599317	0					
ANR	599613	Identifier	sym		599317	0					
ANR	599614	Identifier	bind		599317	1					
ANR	599615	CallExpression	"r_str_const ( ""LOCAL"" )"		599317	1					
ANR	599616	Callee	r_str_const		599317	0					
ANR	599617	Identifier	r_str_const		599317	0					
ANR	599618	ArgumentList	"""LOCAL"""		599317	1					
ANR	599619	Argument	"""LOCAL"""		599317	0					
ANR	599620	PrimaryExpression	"""LOCAL"""		599317	0					
ANR	599621	ExpressionStatement	"sym -> type = r_str_const ( ""FUNC"" )"	1527:4:37564:37596	599317	8	True				
ANR	599622	AssignmentExpression	"sym -> type = r_str_const ( ""FUNC"" )"		599317	0		=			
ANR	599623	PtrMemberAccess	sym -> type		599317	0					
ANR	599624	Identifier	sym		599317	0					
ANR	599625	Identifier	type		599317	1					
ANR	599626	CallExpression	"r_str_const ( ""FUNC"" )"		599317	1					
ANR	599627	Callee	r_str_const		599317	0					
ANR	599628	Identifier	r_str_const		599317	0					
ANR	599629	ArgumentList	"""FUNC"""		599317	1					
ANR	599630	Argument	"""FUNC"""		599317	0					
ANR	599631	PrimaryExpression	"""FUNC"""		599317	0					
ANR	599632	ExpressionStatement	sym -> ordinal = ordinal ++	1528:4:37602:37627	599317	9	True				
ANR	599633	AssignmentExpression	sym -> ordinal = ordinal ++		599317	0		=			
ANR	599634	PtrMemberAccess	sym -> ordinal		599317	0					
ANR	599635	Identifier	sym		599317	0					
ANR	599636	Identifier	ordinal		599317	1					
ANR	599637	PostIncDecOperationExpression	ordinal ++		599317	1					
ANR	599638	Identifier	ordinal		599317	0					
ANR	599639	IncDec	++		599317	1					
ANR	599640	ExpressionStatement	"r_list_append ( ret , sym )"	1529:4:37633:37657	599317	10	True				
ANR	599641	CallExpression	"r_list_append ( ret , sym )"		599317	0					
ANR	599642	Callee	r_list_append		599317	0					
ANR	599643	Identifier	r_list_append		599317	0					
ANR	599644	ArgumentList	ret		599317	1					
ANR	599645	Argument	ret		599317	0					
ANR	599646	Identifier	ret		599317	0					
ANR	599647	Argument	sym		599317	1					
ANR	599648	Identifier	sym		599317	0					
ANR	599649	BreakStatement	break ;	1530:4:37663:37668	599317	11	True				
ANR	599650	ExpressionStatement	addr_in_got = addr	1533:3:37679:37697	599317	19	True				
ANR	599651	AssignmentExpression	addr_in_got = addr		599317	0		=			
ANR	599652	Identifier	addr_in_got		599317	0					
ANR	599653	Identifier	addr		599317	1					
ANR	599654	IfStatement	if ( found || target_addr == UT64_MAX )		599317	8					
ANR	599655	Condition	found || target_addr == UT64_MAX	1536:6:37710:37741	599317	0	True				
ANR	599656	OrExpression	found || target_addr == UT64_MAX		599317	0		||			
ANR	599657	Identifier	found		599317	0					
ANR	599658	EqualityExpression	target_addr == UT64_MAX		599317	1		==			
ANR	599659	Identifier	target_addr		599317	0					
ANR	599660	Identifier	UT64_MAX		599317	1					
ANR	599661	CompoundStatement		57:40:1417:1417	599317	1					
ANR	599662	ContinueStatement	continue ;	1537:3:37749:37757	599317	0	True				
ANR	599663	ExpressionStatement	ensure_kexts_initialized ( obj )	1540:2:37766:37796	599317	9	True				
ANR	599664	CallExpression	ensure_kexts_initialized ( obj )		599317	0					
ANR	599665	Callee	ensure_kexts_initialized		599317	0					
ANR	599666	Identifier	ensure_kexts_initialized		599317	0					
ANR	599667	ArgumentList	obj		599317	1					
ANR	599668	Argument	obj		599317	0					
ANR	599669	Identifier	obj		599317	0					
ANR	599670	IdentifierDeclStatement	"RKext * remote_kext = r_kext_index_vget ( obj -> kexts , target_addr ) ;"	1541:2:37800:37864	599317	10	True				
ANR	599671	IdentifierDecl	"* remote_kext = r_kext_index_vget ( obj -> kexts , target_addr )"		599317	0					
ANR	599672	IdentifierDeclType	RKext *		599317	0					
ANR	599673	Identifier	remote_kext		599317	1					
ANR	599674	AssignmentExpression	"* remote_kext = r_kext_index_vget ( obj -> kexts , target_addr )"		599317	2		=			
ANR	599675	Identifier	remote_kext		599317	0					
ANR	599676	CallExpression	"r_kext_index_vget ( obj -> kexts , target_addr )"		599317	1					
ANR	599677	Callee	r_kext_index_vget		599317	0					
ANR	599678	Identifier	r_kext_index_vget		599317	0					
ANR	599679	ArgumentList	obj -> kexts		599317	1					
ANR	599680	Argument	obj -> kexts		599317	0					
ANR	599681	PtrMemberAccess	obj -> kexts		599317	0					
ANR	599682	Identifier	obj		599317	0					
ANR	599683	Identifier	kexts		599317	1					
ANR	599684	Argument	target_addr		599317	1					
ANR	599685	Identifier	target_addr		599317	0					
ANR	599686	IfStatement	if ( ! remote_kext )		599317	11					
ANR	599687	Condition	! remote_kext	1542:6:37872:37883	599317	0	True				
ANR	599688	UnaryOperationExpression	! remote_kext		599317	0					
ANR	599689	UnaryOperator	!		599317	0					
ANR	599690	Identifier	remote_kext		599317	1					
ANR	599691	CompoundStatement		63:20:1559:1559	599317	1					
ANR	599692	ContinueStatement	continue ;	1543:3:37891:37899	599317	0	True				
ANR	599693	IdentifierDeclStatement	RBinSymbol * remote_sym = R_NEW0 ( RBinSymbol ) ;	1546:2:37908:37952	599317	12	True				
ANR	599694	IdentifierDecl	* remote_sym = R_NEW0 ( RBinSymbol )		599317	0					
ANR	599695	IdentifierDeclType	RBinSymbol *		599317	0					
ANR	599696	Identifier	remote_sym		599317	1					
ANR	599697	AssignmentExpression	* remote_sym = R_NEW0 ( RBinSymbol )		599317	2		=			
ANR	599698	Identifier	remote_sym		599317	0					
ANR	599699	CallExpression	R_NEW0 ( RBinSymbol )		599317	1					
ANR	599700	Callee	R_NEW0		599317	0					
ANR	599701	Identifier	R_NEW0		599317	0					
ANR	599702	ArgumentList	RBinSymbol		599317	1					
ANR	599703	Argument	RBinSymbol		599317	0					
ANR	599704	Identifier	RBinSymbol		599317	0					
ANR	599705	IfStatement	if ( ! remote_sym )		599317	13					
ANR	599706	Condition	! remote_sym	1547:6:37960:37970	599317	0	True				
ANR	599707	UnaryOperationExpression	! remote_sym		599317	0					
ANR	599708	UnaryOperator	!		599317	0					
ANR	599709	Identifier	remote_sym		599317	1					
ANR	599710	CompoundStatement		68:19:1646:1646	599317	1					
ANR	599711	BreakStatement	break ;	1548:3:37978:37983	599317	0	True				
ANR	599712	Statement	remote_sym	1551:2:37992:38001	599317	14	True				
ANR	599713	Statement	->	1551:12:38002:38003	599317	15	True				
ANR	599714	Statement	name	1551:14:38004:38007	599317	16	True				
ANR	599715	Statement	=	1551:19:38009:38009	599317	17	True				
ANR	599716	Statement	r_str_newf	1551:21:38011:38020	599317	18	True				
ANR	599717	Statement	(	1551:32:38022:38022	599317	19	True				
ANR	599718	Statement	"""exp.%s.0x%"""	1551:33:38023:38034	599317	20	True				
ANR	599719	Statement	PFMT64x	1551:45:38035:38041	599317	21	True				
ANR	599720	Statement	","	1551:52:38042:38042	599317	22	True				
ANR	599721	Statement	kext_short_name	1551:54:38044:38058	599317	23	True				
ANR	599722	Statement	(	1551:70:38060:38060	599317	24	True				
ANR	599723	Statement	remote_kext	1551:71:38061:38071	599317	25	True				
ANR	599724	Statement	)	1551:82:38072:38072	599317	26	True				
ANR	599725	Statement	","	1551:83:38073:38073	599317	27	True				
ANR	599726	Statement	target_addr	1551:85:38075:38085	599317	28	True				
ANR	599727	Statement	)	1551:96:38086:38086	599317	29	True				
ANR	599728	ExpressionStatement		1551:97:38087:38087	599317	30	True				
ANR	599729	ExpressionStatement	remote_sym -> vaddr = target_addr	1552:2:38091:38122	599317	31	True				
ANR	599730	AssignmentExpression	remote_sym -> vaddr = target_addr		599317	0		=			
ANR	599731	PtrMemberAccess	remote_sym -> vaddr		599317	0					
ANR	599732	Identifier	remote_sym		599317	0					
ANR	599733	Identifier	vaddr		599317	1					
ANR	599734	Identifier	target_addr		599317	1					
ANR	599735	ExpressionStatement	remote_sym -> paddr = target_addr - obj -> pa2va_exec	1553:2:38126:38175	599317	32	True				
ANR	599736	AssignmentExpression	remote_sym -> paddr = target_addr - obj -> pa2va_exec		599317	0		=			
ANR	599737	PtrMemberAccess	remote_sym -> paddr		599317	0					
ANR	599738	Identifier	remote_sym		599317	0					
ANR	599739	Identifier	paddr		599317	1					
ANR	599740	AdditiveExpression	target_addr - obj -> pa2va_exec		599317	1		-			
ANR	599741	Identifier	target_addr		599317	0					
ANR	599742	PtrMemberAccess	obj -> pa2va_exec		599317	1					
ANR	599743	Identifier	obj		599317	0					
ANR	599744	Identifier	pa2va_exec		599317	1					
ANR	599745	ExpressionStatement	remote_sym -> size = 0	1554:2:38179:38199	599317	33	True				
ANR	599746	AssignmentExpression	remote_sym -> size = 0		599317	0		=			
ANR	599747	PtrMemberAccess	remote_sym -> size		599317	0					
ANR	599748	Identifier	remote_sym		599317	0					
ANR	599749	Identifier	size		599317	1					
ANR	599750	PrimaryExpression	0		599317	1					
ANR	599751	ExpressionStatement	"remote_sym -> forwarder = r_str_const ( ""NONE"" )"	1555:2:38203:38247	599317	34	True				
ANR	599752	AssignmentExpression	"remote_sym -> forwarder = r_str_const ( ""NONE"" )"		599317	0		=			
ANR	599753	PtrMemberAccess	remote_sym -> forwarder		599317	0					
ANR	599754	Identifier	remote_sym		599317	0					
ANR	599755	Identifier	forwarder		599317	1					
ANR	599756	CallExpression	"r_str_const ( ""NONE"" )"		599317	1					
ANR	599757	Callee	r_str_const		599317	0					
ANR	599758	Identifier	r_str_const		599317	0					
ANR	599759	ArgumentList	"""NONE"""		599317	1					
ANR	599760	Argument	"""NONE"""		599317	0					
ANR	599761	PrimaryExpression	"""NONE"""		599317	0					
ANR	599762	ExpressionStatement	"remote_sym -> bind = r_str_const ( ""GLOBAL"" )"	1556:2:38251:38292	599317	35	True				
ANR	599763	AssignmentExpression	"remote_sym -> bind = r_str_const ( ""GLOBAL"" )"		599317	0		=			
ANR	599764	PtrMemberAccess	remote_sym -> bind		599317	0					
ANR	599765	Identifier	remote_sym		599317	0					
ANR	599766	Identifier	bind		599317	1					
ANR	599767	CallExpression	"r_str_const ( ""GLOBAL"" )"		599317	1					
ANR	599768	Callee	r_str_const		599317	0					
ANR	599769	Identifier	r_str_const		599317	0					
ANR	599770	ArgumentList	"""GLOBAL"""		599317	1					
ANR	599771	Argument	"""GLOBAL"""		599317	0					
ANR	599772	PrimaryExpression	"""GLOBAL"""		599317	0					
ANR	599773	ExpressionStatement	"remote_sym -> type = r_str_const ( ""FUNC"" )"	1557:2:38296:38335	599317	36	True				
ANR	599774	AssignmentExpression	"remote_sym -> type = r_str_const ( ""FUNC"" )"		599317	0		=			
ANR	599775	PtrMemberAccess	remote_sym -> type		599317	0					
ANR	599776	Identifier	remote_sym		599317	0					
ANR	599777	Identifier	type		599317	1					
ANR	599778	CallExpression	"r_str_const ( ""FUNC"" )"		599317	1					
ANR	599779	Callee	r_str_const		599317	0					
ANR	599780	Identifier	r_str_const		599317	0					
ANR	599781	ArgumentList	"""FUNC"""		599317	1					
ANR	599782	Argument	"""FUNC"""		599317	0					
ANR	599783	PrimaryExpression	"""FUNC"""		599317	0					
ANR	599784	ExpressionStatement	remote_sym -> ordinal = ordinal ++	1558:2:38339:38371	599317	37	True				
ANR	599785	AssignmentExpression	remote_sym -> ordinal = ordinal ++		599317	0		=			
ANR	599786	PtrMemberAccess	remote_sym -> ordinal		599317	0					
ANR	599787	Identifier	remote_sym		599317	0					
ANR	599788	Identifier	ordinal		599317	1					
ANR	599789	PostIncDecOperationExpression	ordinal ++		599317	1					
ANR	599790	Identifier	ordinal		599317	0					
ANR	599791	IncDec	++		599317	1					
ANR	599792	ExpressionStatement	"r_list_append ( ret , remote_sym )"	1559:2:38375:38406	599317	38	True				
ANR	599793	CallExpression	"r_list_append ( ret , remote_sym )"		599317	0					
ANR	599794	Callee	r_list_append		599317	0					
ANR	599795	Identifier	r_list_append		599317	0					
ANR	599796	ArgumentList	ret		599317	1					
ANR	599797	Argument	ret		599317	0					
ANR	599798	Identifier	ret		599317	0					
ANR	599799	Argument	remote_sym		599317	1					
ANR	599800	Identifier	remote_sym		599317	0					
ANR	599801	IdentifierDeclStatement	RBinSymbol * local_sym = R_NEW0 ( RBinSymbol ) ;	1561:2:38411:38454	599317	39	True				
ANR	599802	IdentifierDecl	* local_sym = R_NEW0 ( RBinSymbol )		599317	0					
ANR	599803	IdentifierDeclType	RBinSymbol *		599317	0					
ANR	599804	Identifier	local_sym		599317	1					
ANR	599805	AssignmentExpression	* local_sym = R_NEW0 ( RBinSymbol )		599317	2		=			
ANR	599806	Identifier	local_sym		599317	0					
ANR	599807	CallExpression	R_NEW0 ( RBinSymbol )		599317	1					
ANR	599808	Callee	R_NEW0		599317	0					
ANR	599809	Identifier	R_NEW0		599317	0					
ANR	599810	ArgumentList	RBinSymbol		599317	1					
ANR	599811	Argument	RBinSymbol		599317	0					
ANR	599812	Identifier	RBinSymbol		599317	0					
ANR	599813	IfStatement	if ( ! local_sym )		599317	40					
ANR	599814	Condition	! local_sym	1562:6:38462:38471	599317	0	True				
ANR	599815	UnaryOperationExpression	! local_sym		599317	0					
ANR	599816	UnaryOperator	!		599317	0					
ANR	599817	Identifier	local_sym		599317	1					
ANR	599818	CompoundStatement		83:18:2147:2147	599317	1					
ANR	599819	BreakStatement	break ;	1563:3:38479:38484	599317	0	True				
ANR	599820	Statement	local_sym	1566:2:38493:38501	599317	41	True				
ANR	599821	Statement	->	1566:11:38502:38503	599317	42	True				
ANR	599822	Statement	name	1566:13:38504:38507	599317	43	True				
ANR	599823	Statement	=	1566:18:38509:38509	599317	44	True				
ANR	599824	Statement	r_str_newf	1566:20:38511:38520	599317	45	True				
ANR	599825	Statement	(	1566:31:38522:38522	599317	46	True				
ANR	599826	Statement	"""stub.%s.0x%"""	1566:32:38523:38535	599317	47	True				
ANR	599827	Statement	PFMT64x	1566:45:38536:38542	599317	48	True				
ANR	599828	Statement	","	1566:52:38543:38543	599317	49	True				
ANR	599829	Statement	kext_short_name	1566:54:38545:38559	599317	50	True				
ANR	599830	Statement	(	1566:70:38561:38561	599317	51	True				
ANR	599831	Statement	remote_kext	1566:71:38562:38572	599317	52	True				
ANR	599832	Statement	)	1566:82:38573:38573	599317	53	True				
ANR	599833	Statement	","	1566:83:38574:38574	599317	54	True				
ANR	599834	Statement	target_addr	1566:85:38576:38586	599317	55	True				
ANR	599835	Statement	)	1566:96:38587:38587	599317	56	True				
ANR	599836	ExpressionStatement		1566:97:38588:38588	599317	57	True				
ANR	599837	ExpressionStatement	local_sym -> vaddr = vaddr	1567:2:38592:38616	599317	58	True				
ANR	599838	AssignmentExpression	local_sym -> vaddr = vaddr		599317	0		=			
ANR	599839	PtrMemberAccess	local_sym -> vaddr		599317	0					
ANR	599840	Identifier	local_sym		599317	0					
ANR	599841	Identifier	vaddr		599317	1					
ANR	599842	Identifier	vaddr		599317	1					
ANR	599843	ExpressionStatement	local_sym -> paddr = stubs_cursor	1568:2:38620:38651	599317	59	True				
ANR	599844	AssignmentExpression	local_sym -> paddr = stubs_cursor		599317	0		=			
ANR	599845	PtrMemberAccess	local_sym -> paddr		599317	0					
ANR	599846	Identifier	local_sym		599317	0					
ANR	599847	Identifier	paddr		599317	1					
ANR	599848	Identifier	stubs_cursor		599317	1					
ANR	599849	ExpressionStatement	local_sym -> size = 12	1569:2:38655:38675	599317	60	True				
ANR	599850	AssignmentExpression	local_sym -> size = 12		599317	0		=			
ANR	599851	PtrMemberAccess	local_sym -> size		599317	0					
ANR	599852	Identifier	local_sym		599317	0					
ANR	599853	Identifier	size		599317	1					
ANR	599854	PrimaryExpression	12		599317	1					
ANR	599855	ExpressionStatement	"local_sym -> forwarder = r_str_const ( ""NONE"" )"	1570:2:38679:38722	599317	61	True				
ANR	599856	AssignmentExpression	"local_sym -> forwarder = r_str_const ( ""NONE"" )"		599317	0		=			
ANR	599857	PtrMemberAccess	local_sym -> forwarder		599317	0					
ANR	599858	Identifier	local_sym		599317	0					
ANR	599859	Identifier	forwarder		599317	1					
ANR	599860	CallExpression	"r_str_const ( ""NONE"" )"		599317	1					
ANR	599861	Callee	r_str_const		599317	0					
ANR	599862	Identifier	r_str_const		599317	0					
ANR	599863	ArgumentList	"""NONE"""		599317	1					
ANR	599864	Argument	"""NONE"""		599317	0					
ANR	599865	PrimaryExpression	"""NONE"""		599317	0					
ANR	599866	ExpressionStatement	"local_sym -> bind = r_str_const ( ""GLOBAL"" )"	1571:2:38726:38766	599317	62	True				
ANR	599867	AssignmentExpression	"local_sym -> bind = r_str_const ( ""GLOBAL"" )"		599317	0		=			
ANR	599868	PtrMemberAccess	local_sym -> bind		599317	0					
ANR	599869	Identifier	local_sym		599317	0					
ANR	599870	Identifier	bind		599317	1					
ANR	599871	CallExpression	"r_str_const ( ""GLOBAL"" )"		599317	1					
ANR	599872	Callee	r_str_const		599317	0					
ANR	599873	Identifier	r_str_const		599317	0					
ANR	599874	ArgumentList	"""GLOBAL"""		599317	1					
ANR	599875	Argument	"""GLOBAL"""		599317	0					
ANR	599876	PrimaryExpression	"""GLOBAL"""		599317	0					
ANR	599877	ExpressionStatement	"local_sym -> type = r_str_const ( ""FUNC"" )"	1572:2:38770:38808	599317	63	True				
ANR	599878	AssignmentExpression	"local_sym -> type = r_str_const ( ""FUNC"" )"		599317	0		=			
ANR	599879	PtrMemberAccess	local_sym -> type		599317	0					
ANR	599880	Identifier	local_sym		599317	0					
ANR	599881	Identifier	type		599317	1					
ANR	599882	CallExpression	"r_str_const ( ""FUNC"" )"		599317	1					
ANR	599883	Callee	r_str_const		599317	0					
ANR	599884	Identifier	r_str_const		599317	0					
ANR	599885	ArgumentList	"""FUNC"""		599317	1					
ANR	599886	Argument	"""FUNC"""		599317	0					
ANR	599887	PrimaryExpression	"""FUNC"""		599317	0					
ANR	599888	ExpressionStatement	local_sym -> ordinal = ordinal ++	1573:2:38812:38843	599317	64	True				
ANR	599889	AssignmentExpression	local_sym -> ordinal = ordinal ++		599317	0		=			
ANR	599890	PtrMemberAccess	local_sym -> ordinal		599317	0					
ANR	599891	Identifier	local_sym		599317	0					
ANR	599892	Identifier	ordinal		599317	1					
ANR	599893	PostIncDecOperationExpression	ordinal ++		599317	1					
ANR	599894	Identifier	ordinal		599317	0					
ANR	599895	IncDec	++		599317	1					
ANR	599896	ExpressionStatement	"r_list_append ( ret , local_sym )"	1574:2:38847:38877	599317	65	True				
ANR	599897	CallExpression	"r_list_append ( ret , local_sym )"		599317	0					
ANR	599898	Callee	r_list_append		599317	0					
ANR	599899	Identifier	r_list_append		599317	0					
ANR	599900	ArgumentList	ret		599317	1					
ANR	599901	Argument	ret		599317	0					
ANR	599902	Identifier	ret		599317	0					
ANR	599903	Argument	local_sym		599317	1					
ANR	599904	Identifier	local_sym		599317	0					
ANR	599905	ExpressionStatement	R_FREE ( stubs_info )	1577:1:38884:38903	599317	5	True				
ANR	599906	CallExpression	R_FREE ( stubs_info )		599317	0					
ANR	599907	Callee	R_FREE		599317	0					
ANR	599908	Identifier	R_FREE		599317	0					
ANR	599909	ArgumentList	stubs_info		599317	1					
ANR	599910	Argument	stubs_info		599317	0					
ANR	599911	Identifier	stubs_info		599317	0					
ANR	599912	ReturnType	static void		599317	1					
ANR	599913	Identifier	symbols_from_stubs		599317	2					
ANR	599914	ParameterList	"RList * ret , HtPP * kernel_syms_by_addr , RKernelCacheObj * obj , RBinFile * bf , RKext * kext , int ordinal"		599317	3					
ANR	599915	Parameter	RList * ret	1480:31:36225:36234	599317	0	True				
ANR	599916	ParameterType	RList *		599317	0					
ANR	599917	Identifier	ret		599317	1					
ANR	599918	Parameter	HtPP * kernel_syms_by_addr	1480:43:36237:36261	599317	1	True				
ANR	599919	ParameterType	HtPP *		599317	0					
ANR	599920	Identifier	kernel_syms_by_addr		599317	1					
ANR	599921	Parameter	RKernelCacheObj * obj	1480:70:36264:36283	599317	2	True				
ANR	599922	ParameterType	RKernelCacheObj *		599317	0					
ANR	599923	Identifier	obj		599317	1					
ANR	599924	Parameter	RBinFile * bf	1480:92:36286:36297	599317	3	True				
ANR	599925	ParameterType	RBinFile *		599317	0					
ANR	599926	Identifier	bf		599317	1					
ANR	599927	Parameter	RKext * kext	1480:106:36300:36310	599317	4	True				
ANR	599928	ParameterType	RKext *		599317	0					
ANR	599929	Identifier	kext		599317	1					
ANR	599930	Parameter	int ordinal	1480:119:36313:36323	599317	5	True				
ANR	599931	ParameterType	int		599317	0					
ANR	599932	Identifier	ordinal		599317	1					
ANR	599933	CFGEntryNode	ENTRY		599317		True				
ANR	599934	CFGExitNode	EXIT		599317		True				
ANR	599935	Symbol	sym -> bind		599317						
ANR	599936	Symbol	sym -> ordinal		599317						
ANR	599937	Symbol	local_sym -> vaddr		599317						
ANR	599938	Symbol	offset_in_got		599317						
ANR	599939	Symbol	sym -> type		599317						
ANR	599940	Symbol	stubs_cursor		599317						
ANR	599941	Symbol	arm64_code		599317						
ANR	599942	Symbol	& found		599317						
ANR	599943	Symbol	local_sym -> ordinal		599317						
ANR	599944	Symbol	stubs_end		599317						
ANR	599945	Symbol	local_sym -> size		599317						
ANR	599946	Symbol	stubs_info		599317						
ANR	599947	Symbol	remote_kext		599317						
ANR	599948	Symbol	* local_sym		599317						
ANR	599949	Symbol	ret		599317						
ANR	599950	Symbol	stubs_info -> stubs . size		599317						
ANR	599951	Symbol	level		599317						
ANR	599952	Symbol	sym -> vaddr		599317						
ANR	599953	Symbol	remote_sym -> type		599317						
ANR	599954	Symbol	kext -> range . offset		599317						
ANR	599955	Symbol	* kext		599317						
ANR	599956	Symbol	remote_sym -> vaddr		599317						
ANR	599957	Symbol	* stubs_info		599317						
ANR	599958	Symbol	kext -> mach0		599317						
ANR	599959	Symbol	addr_in_got		599317						
ANR	599960	Symbol	get_stubs_info		599317						
ANR	599961	Symbol	extract_addr_from_code		599317						
ANR	599962	Symbol	R_NEW0		599317						
ANR	599963	Symbol	* sym		599317						
ANR	599964	Symbol	remote_sym -> bind		599317						
ANR	599965	Symbol	sym -> name		599317						
ANR	599966	Symbol	name		599317						
ANR	599967	Symbol	obj -> kexts		599317						
ANR	599968	Symbol	remote_sym -> ordinal		599317						
ANR	599969	Symbol	kernel_syms_by_addr		599317						
ANR	599970	Symbol	RBinSymbol		599317						
ANR	599971	Symbol	bf		599317						
ANR	599972	Symbol	stubs_info -> stubs . offset		599317						
ANR	599973	Symbol	sym		599317						
ANR	599974	Symbol	remote_sym -> forwarder		599317						
ANR	599975	Symbol	local_sym -> forwarder		599317						
ANR	599976	Symbol	vaddr		599317						
ANR	599977	Symbol	r_str_newf		599317						
ANR	599978	Symbol	remote_sym -> paddr		599317						
ANR	599979	Symbol	local_sym -> paddr		599317						
ANR	599980	Symbol	sym -> size		599317						
ANR	599981	Symbol	kext -> range		599317						
ANR	599982	Symbol	found		599317						
ANR	599983	Symbol	obj -> cache_buf		599317						
ANR	599984	Symbol	* remote_sym		599317						
ANR	599985	Symbol	remote_sym		599317						
ANR	599986	Symbol	obj -> pa2va_exec		599317						
ANR	599987	Symbol	UT64_MAX		599317						
ANR	599988	Symbol	addr		599317						
ANR	599989	Symbol	local_sym		599317						
ANR	599990	Symbol	sym -> forwarder		599317						
ANR	599991	Symbol	key		599317						
ANR	599992	Symbol	stubs_info -> stubs		599317						
ANR	599993	Symbol	r_str_const		599317						
ANR	599994	Symbol	* obj		599317						
ANR	599995	Symbol	& addr		599317						
ANR	599996	Symbol	kext		599317						
ANR	599997	Symbol	r_kext_index_vget		599317						
ANR	599998	Symbol	local_sym -> type		599317						
ANR	599999	Symbol	false		599317						
ANR	600000	Symbol	target_addr		599317						
ANR	600001	Symbol	sym -> paddr		599317						
ANR	600002	Symbol	sdb_ht_find		599317						
ANR	600003	Symbol	remote_sym -> size		599317						
ANR	600004	Symbol	local_sym -> bind		599317						
ANR	600005	Symbol	obj		599317						
ANR	600006	Symbol	r_buf_read_at		599317						
ANR	600007	Symbol	ordinal		599317						
ANR	600008	DeclStmt									
ANR	600009	Decl							struct section_t	struct section_t *	sections
ANR	600010	DeclStmt									
ANR	600011	Decl							RStubsInfo	RStubsInfo *	stubs_info
ANR	600012	DeclStmt									
ANR	600013	Decl							int	int	incomplete
ANR	600014	DeclStmt									
ANR	600015	Decl							int	int	i
ANR	600016	Function	info	1621:0:39821:40332							
ANR	600017	FunctionDef	info (RBinFile * bf)		600016	0					
ANR	600018	CompoundStatement		1621:36:39857:40332	600016	0					
ANR	600019	IdentifierDeclStatement	RBinInfo * ret = NULL ;	1622:1:39860:39880	600016	0	True				
ANR	600020	IdentifierDecl	* ret = NULL		600016	0					
ANR	600021	IdentifierDeclType	RBinInfo *		600016	0					
ANR	600022	Identifier	ret		600016	1					
ANR	600023	AssignmentExpression	* ret = NULL		600016	2		=			
ANR	600024	Identifier	NULL		600016	0					
ANR	600025	Identifier	NULL		600016	1					
ANR	600026	IdentifierDeclStatement	bool big_endian = 0 ;	1623:1:39883:39902	600016	1	True				
ANR	600027	IdentifierDecl	big_endian = 0		600016	0					
ANR	600028	IdentifierDeclType	bool		600016	0					
ANR	600029	Identifier	big_endian		600016	1					
ANR	600030	AssignmentExpression	big_endian = 0		600016	2		=			
ANR	600031	Identifier	big_endian		600016	0					
ANR	600032	PrimaryExpression	0		600016	1					
ANR	600033	IfStatement	if ( ! ( ret = R_NEW0 ( RBinInfo ) ) )		600016	2					
ANR	600034	Condition	! ( ret = R_NEW0 ( RBinInfo ) )	1624:5:39909:39934	600016	0	True				
ANR	600035	UnaryOperationExpression	! ( ret = R_NEW0 ( RBinInfo ) )		600016	0					
ANR	600036	UnaryOperator	!		600016	0					
ANR	600037	AssignmentExpression	ret = R_NEW0 ( RBinInfo )		600016	1		=			
ANR	600038	Identifier	ret		600016	0					
ANR	600039	CallExpression	R_NEW0 ( RBinInfo )		600016	1					
ANR	600040	Callee	R_NEW0		600016	0					
ANR	600041	Identifier	R_NEW0		600016	0					
ANR	600042	ArgumentList	RBinInfo		600016	1					
ANR	600043	Argument	RBinInfo		600016	0					
ANR	600044	Identifier	RBinInfo		600016	0					
ANR	600045	CompoundStatement		4:33:79:79	600016	1					
ANR	600046	ReturnStatement	return NULL ;	1625:2:39941:39952	600016	0	True				
ANR	600047	Identifier	NULL		600016	0					
ANR	600048	ExpressionStatement	ret -> file = strdup ( bf -> file )	1627:1:39958:39987	600016	3	True				
ANR	600049	AssignmentExpression	ret -> file = strdup ( bf -> file )		600016	0		=			
ANR	600050	PtrMemberAccess	ret -> file		600016	0					
ANR	600051	Identifier	ret		600016	0					
ANR	600052	Identifier	file		600016	1					
ANR	600053	CallExpression	strdup ( bf -> file )		600016	1					
ANR	600054	Callee	strdup		600016	0					
ANR	600055	Identifier	strdup		600016	0					
ANR	600056	ArgumentList	bf -> file		600016	1					
ANR	600057	Argument	bf -> file		600016	0					
ANR	600058	PtrMemberAccess	bf -> file		600016	0					
ANR	600059	Identifier	bf		600016	0					
ANR	600060	Identifier	file		600016	1					
ANR	600061	ExpressionStatement	"ret -> bclass = strdup ( ""kernelcache"" )"	1628:1:39990:40026	600016	4	True				
ANR	600062	AssignmentExpression	"ret -> bclass = strdup ( ""kernelcache"" )"		600016	0		=			
ANR	600063	PtrMemberAccess	ret -> bclass		600016	0					
ANR	600064	Identifier	ret		600016	0					
ANR	600065	Identifier	bclass		600016	1					
ANR	600066	CallExpression	"strdup ( ""kernelcache"" )"		600016	1					
ANR	600067	Callee	strdup		600016	0					
ANR	600068	Identifier	strdup		600016	0					
ANR	600069	ArgumentList	"""kernelcache"""		600016	1					
ANR	600070	Argument	"""kernelcache"""		600016	0					
ANR	600071	PrimaryExpression	"""kernelcache"""		600016	0					
ANR	600072	ExpressionStatement	"ret -> rclass = strdup ( ""ios"" )"	1629:1:40029:40057	600016	5	True				
ANR	600073	AssignmentExpression	"ret -> rclass = strdup ( ""ios"" )"		600016	0		=			
ANR	600074	PtrMemberAccess	ret -> rclass		600016	0					
ANR	600075	Identifier	ret		600016	0					
ANR	600076	Identifier	rclass		600016	1					
ANR	600077	CallExpression	"strdup ( ""ios"" )"		600016	1					
ANR	600078	Callee	strdup		600016	0					
ANR	600079	Identifier	strdup		600016	0					
ANR	600080	ArgumentList	"""ios"""		600016	1					
ANR	600081	Argument	"""ios"""		600016	0					
ANR	600082	PrimaryExpression	"""ios"""		600016	0					
ANR	600083	ExpressionStatement	"ret -> os = strdup ( ""iOS"" )"	1630:1:40060:40084	600016	6	True				
ANR	600084	AssignmentExpression	"ret -> os = strdup ( ""iOS"" )"		600016	0		=			
ANR	600085	PtrMemberAccess	ret -> os		600016	0					
ANR	600086	Identifier	ret		600016	0					
ANR	600087	Identifier	os		600016	1					
ANR	600088	CallExpression	"strdup ( ""iOS"" )"		600016	1					
ANR	600089	Callee	strdup		600016	0					
ANR	600090	Identifier	strdup		600016	0					
ANR	600091	ArgumentList	"""iOS"""		600016	1					
ANR	600092	Argument	"""iOS"""		600016	0					
ANR	600093	PrimaryExpression	"""iOS"""		600016	0					
ANR	600094	ExpressionStatement	"ret -> arch = strdup ( ""arm"" )"	1631:1:40087:40113	600016	7	True				
ANR	600095	AssignmentExpression	"ret -> arch = strdup ( ""arm"" )"		600016	0		=			
ANR	600096	PtrMemberAccess	ret -> arch		600016	0					
ANR	600097	Identifier	ret		600016	0					
ANR	600098	Identifier	arch		600016	1					
ANR	600099	CallExpression	"strdup ( ""arm"" )"		600016	1					
ANR	600100	Callee	strdup		600016	0					
ANR	600101	Identifier	strdup		600016	0					
ANR	600102	ArgumentList	"""arm"""		600016	1					
ANR	600103	Argument	"""arm"""		600016	0					
ANR	600104	PrimaryExpression	"""arm"""		600016	0					
ANR	600105	ExpressionStatement	ret -> machine = strdup ( ret -> arch )	1632:1:40123:40156	600016	8	True				
ANR	600106	AssignmentExpression	ret -> machine = strdup ( ret -> arch )		600016	0		=			
ANR	600107	PtrMemberAccess	ret -> machine		600016	0					
ANR	600108	Identifier	ret		600016	0					
ANR	600109	Identifier	machine		600016	1					
ANR	600110	CallExpression	strdup ( ret -> arch )		600016	1					
ANR	600111	Callee	strdup		600016	0					
ANR	600112	Identifier	strdup		600016	0					
ANR	600113	ArgumentList	ret -> arch		600016	1					
ANR	600114	Argument	ret -> arch		600016	0					
ANR	600115	PtrMemberAccess	ret -> arch		600016	0					
ANR	600116	Identifier	ret		600016	0					
ANR	600117	Identifier	arch		600016	1					
ANR	600118	ExpressionStatement	"ret -> subsystem = strdup ( ""xnu"" )"	1633:1:40159:40190	600016	9	True				
ANR	600119	AssignmentExpression	"ret -> subsystem = strdup ( ""xnu"" )"		600016	0		=			
ANR	600120	PtrMemberAccess	ret -> subsystem		600016	0					
ANR	600121	Identifier	ret		600016	0					
ANR	600122	Identifier	subsystem		600016	1					
ANR	600123	CallExpression	"strdup ( ""xnu"" )"		600016	1					
ANR	600124	Callee	strdup		600016	0					
ANR	600125	Identifier	strdup		600016	0					
ANR	600126	ArgumentList	"""xnu"""		600016	1					
ANR	600127	Argument	"""xnu"""		600016	0					
ANR	600128	PrimaryExpression	"""xnu"""		600016	0					
ANR	600129	ExpressionStatement	"ret -> type = strdup ( ""kernel-cache"" )"	1634:1:40193:40228	600016	10	True				
ANR	600130	AssignmentExpression	"ret -> type = strdup ( ""kernel-cache"" )"		600016	0		=			
ANR	600131	PtrMemberAccess	ret -> type		600016	0					
ANR	600132	Identifier	ret		600016	0					
ANR	600133	Identifier	type		600016	1					
ANR	600134	CallExpression	"strdup ( ""kernel-cache"" )"		600016	1					
ANR	600135	Callee	strdup		600016	0					
ANR	600136	Identifier	strdup		600016	0					
ANR	600137	ArgumentList	"""kernel-cache"""		600016	1					
ANR	600138	Argument	"""kernel-cache"""		600016	0					
ANR	600139	PrimaryExpression	"""kernel-cache"""		600016	0					
ANR	600140	ExpressionStatement	ret -> bits = 64	1635:1:40231:40245	600016	11	True				
ANR	600141	AssignmentExpression	ret -> bits = 64		600016	0		=			
ANR	600142	PtrMemberAccess	ret -> bits		600016	0					
ANR	600143	Identifier	ret		600016	0					
ANR	600144	Identifier	bits		600016	1					
ANR	600145	PrimaryExpression	64		600016	1					
ANR	600146	ExpressionStatement	ret -> has_va = true	1636:1:40248:40266	600016	12	True				
ANR	600147	AssignmentExpression	ret -> has_va = true		600016	0		=			
ANR	600148	PtrMemberAccess	ret -> has_va		600016	0					
ANR	600149	Identifier	ret		600016	0					
ANR	600150	Identifier	has_va		600016	1					
ANR	600151	Identifier	true		600016	1					
ANR	600152	ExpressionStatement	ret -> big_endian = big_endian	1637:1:40269:40297	600016	13	True				
ANR	600153	AssignmentExpression	ret -> big_endian = big_endian		600016	0		=			
ANR	600154	PtrMemberAccess	ret -> big_endian		600016	0					
ANR	600155	Identifier	ret		600016	0					
ANR	600156	Identifier	big_endian		600016	1					
ANR	600157	Identifier	big_endian		600016	1					
ANR	600158	ExpressionStatement	ret -> dbg_info = 0	1638:1:40300:40317	600016	14	True				
ANR	600159	AssignmentExpression	ret -> dbg_info = 0		600016	0		=			
ANR	600160	PtrMemberAccess	ret -> dbg_info		600016	0					
ANR	600161	Identifier	ret		600016	0					
ANR	600162	Identifier	dbg_info		600016	1					
ANR	600163	PrimaryExpression	0		600016	1					
ANR	600164	ReturnStatement	return ret ;	1639:1:40320:40330	600016	15	True				
ANR	600165	Identifier	ret		600016	0					
ANR	600166	ReturnType	static RBinInfo *		600016	1					
ANR	600167	Identifier	info		600016	2					
ANR	600168	ParameterList	RBinFile * bf		600016	3					
ANR	600169	Parameter	RBinFile * bf	1621:22:39843:39854	600016	0	True				
ANR	600170	ParameterType	RBinFile *		600016	0					
ANR	600171	Identifier	bf		600016	1					
ANR	600172	CFGEntryNode	ENTRY		600016		True				
ANR	600173	CFGExitNode	EXIT		600016		True				
ANR	600174	Symbol	ret		600016						
ANR	600175	Symbol	ret -> os		600016						
ANR	600176	Symbol	NULL		600016						
ANR	600177	Symbol	ret -> big_endian		600016						
ANR	600178	Symbol	bf		600016						
ANR	600179	Symbol	ret -> arch		600016						
ANR	600180	Symbol	ret -> subsystem		600016						
ANR	600181	Symbol	* bf		600016						
ANR	600182	Symbol	ret -> machine		600016						
ANR	600183	Symbol	* ret		600016						
ANR	600184	Symbol	ret -> dbg_info		600016						
ANR	600185	Symbol	ret -> bclass		600016						
ANR	600186	Symbol	R_NEW0		600016						
ANR	600187	Symbol	bf -> file		600016						
ANR	600188	Symbol	ret -> rclass		600016						
ANR	600189	Symbol	big_endian		600016						
ANR	600190	Symbol	true		600016						
ANR	600191	Symbol	ret -> bits		600016						
ANR	600192	Symbol	RBinInfo		600016						
ANR	600193	Symbol	ret -> has_va		600016						
ANR	600194	Symbol	strdup		600016						
ANR	600195	Symbol	ret -> file		600016						
ANR	600196	Symbol	ret -> type		600016						
ANR	600197	Function	baddr	1642:0:40335:40526							
ANR	600198	FunctionDef	baddr (RBinFile * bf)		600197	0					
ANR	600199	CompoundStatement		1642:32:40367:40526	600197	0					
ANR	600200	IfStatement	if ( ! bf || ! bf -> o || ! bf -> o -> bin_obj )		600197	0					
ANR	600201	Condition	! bf || ! bf -> o || ! bf -> o -> bin_obj	1643:5:40374:40405	600197	0	True				
ANR	600202	OrExpression	! bf || ! bf -> o || ! bf -> o -> bin_obj		600197	0		||			
ANR	600203	UnaryOperationExpression	! bf		600197	0					
ANR	600204	UnaryOperator	!		600197	0					
ANR	600205	Identifier	bf		600197	1					
ANR	600206	OrExpression	! bf -> o || ! bf -> o -> bin_obj		600197	1		||			
ANR	600207	UnaryOperationExpression	! bf -> o		600197	0					
ANR	600208	UnaryOperator	!		600197	0					
ANR	600209	PtrMemberAccess	bf -> o		600197	1					
ANR	600210	Identifier	bf		600197	0					
ANR	600211	Identifier	o		600197	1					
ANR	600212	UnaryOperationExpression	! bf -> o -> bin_obj		600197	1					
ANR	600213	UnaryOperator	!		600197	0					
ANR	600214	PtrMemberAccess	bf -> o -> bin_obj		600197	1					
ANR	600215	PtrMemberAccess	bf -> o		600197	0					
ANR	600216	Identifier	bf		600197	0					
ANR	600217	Identifier	o		600197	1					
ANR	600218	Identifier	bin_obj		600197	1					
ANR	600219	CompoundStatement		2:39:40:40	600197	1					
ANR	600220	Statement	return	1644:2:40412:40417	600197	0	True				
ANR	600221	Statement	8L	1644:9:40419:40420	600197	1	True				
ANR	600222	ExpressionStatement	L	1644:11:40421:40422	600197	2	True				
ANR	600223	Identifier	L		600197	0					
ANR	600224	IdentifierDeclStatement	RKernelCacheObj * obj = ( RKernelCacheObj * ) bf -> o -> bin_obj ;	1647:1:40429:40485	600197	1	True				
ANR	600225	IdentifierDecl	* obj = ( RKernelCacheObj * ) bf -> o -> bin_obj		600197	0					
ANR	600226	IdentifierDeclType	RKernelCacheObj *		600197	0					
ANR	600227	Identifier	obj		600197	1					
ANR	600228	AssignmentExpression	* obj = ( RKernelCacheObj * ) bf -> o -> bin_obj		600197	2		=			
ANR	600229	Identifier	obj		600197	0					
ANR	600230	CastExpression	( RKernelCacheObj * ) bf -> o -> bin_obj		600197	1					
ANR	600231	CastTarget	RKernelCacheObj *		600197	0					
ANR	600232	PtrMemberAccess	bf -> o -> bin_obj		600197	1					
ANR	600233	PtrMemberAccess	bf -> o		600197	0					
ANR	600234	Identifier	bf		600197	0					
ANR	600235	Identifier	o		600197	1					
ANR	600236	Identifier	bin_obj		600197	1					
ANR	600237	ReturnStatement	return MACH0_ ( get_baddr ) ( obj -> mach0 ) ;	1648:1:40488:40524	600197	2	True				
ANR	600238	CallExpression	MACH0_ ( get_baddr ) ( obj -> mach0 )		600197	0					
ANR	600239	Callee	MACH0_ ( get_baddr )		600197	0					
ANR	600240	CallExpression	MACH0_ ( get_baddr )		600197	0					
ANR	600241	Callee	MACH0_		600197	0					
ANR	600242	Identifier	MACH0_		600197	0					
ANR	600243	ArgumentList	get_baddr		600197	1					
ANR	600244	Argument	get_baddr		600197	0					
ANR	600245	Identifier	get_baddr		600197	0					
ANR	600246	ArgumentList	obj -> mach0		600197	1					
ANR	600247	Argument	obj -> mach0		600197	0					
ANR	600248	PtrMemberAccess	obj -> mach0		600197	0					
ANR	600249	Identifier	obj		600197	0					
ANR	600250	Identifier	mach0		600197	1					
ANR	600251	ReturnType	static ut64		600197	1					
ANR	600252	Identifier	baddr		600197	2					
ANR	600253	ParameterList	RBinFile * bf		600197	3					
ANR	600254	Parameter	RBinFile * bf	1642:18:40353:40364	600197	0	True				
ANR	600255	ParameterType	RBinFile *		600197	0					
ANR	600256	Identifier	bf		600197	1					
ANR	600257	CFGEntryNode	ENTRY		600197		True				
ANR	600258	CFGExitNode	EXIT		600197		True				
ANR	600259	Symbol	bf -> o -> bin_obj		600197						
ANR	600260	Symbol	MACH0_		600197						
ANR	600261	Symbol	* obj		600197						
ANR	600262	Symbol	* * bf		600197						
ANR	600263	Symbol	bf		600197						
ANR	600264	Symbol	bf -> o		600197						
ANR	600265	Symbol	obj		600197						
ANR	600266	Symbol	obj -> mach0		600197						
ANR	600267	Symbol	* bf		600197						
ANR	600268	Symbol	get_baddr		600197						
ANR	600269	Symbol	* bf -> o		600197						
ANR	600270	Function	destroy	1651:0:40529:40623							
ANR	600271	FunctionDef	destroy (RBinFile * bf)		600270	0					
ANR	600272	CompoundStatement		1651:34:40563:40623	600270	0					
ANR	600273	ExpressionStatement	r_kernel_cache_free ( ( RKernelCacheObj * ) bf -> o -> bin_obj )	1652:1:40566:40621	600270	0	True				
ANR	600274	CallExpression	r_kernel_cache_free ( ( RKernelCacheObj * ) bf -> o -> bin_obj )		600270	0					
ANR	600275	Callee	r_kernel_cache_free		600270	0					
ANR	600276	Identifier	r_kernel_cache_free		600270	0					
ANR	600277	ArgumentList	( RKernelCacheObj * ) bf -> o -> bin_obj		600270	1					
ANR	600278	Argument	( RKernelCacheObj * ) bf -> o -> bin_obj		600270	0					
ANR	600279	CastExpression	( RKernelCacheObj * ) bf -> o -> bin_obj		600270	0					
ANR	600280	CastTarget	RKernelCacheObj *		600270	0					
ANR	600281	PtrMemberAccess	bf -> o -> bin_obj		600270	1					
ANR	600282	PtrMemberAccess	bf -> o		600270	0					
ANR	600283	Identifier	bf		600270	0					
ANR	600284	Identifier	o		600270	1					
ANR	600285	Identifier	bin_obj		600270	1					
ANR	600286	ReturnType	static void		600270	1					
ANR	600287	Identifier	destroy		600270	2					
ANR	600288	ParameterList	RBinFile * bf		600270	3					
ANR	600289	Parameter	RBinFile * bf	1651:20:40549:40560	600270	0	True				
ANR	600290	ParameterType	RBinFile *		600270	0					
ANR	600291	Identifier	bf		600270	1					
ANR	600292	CFGEntryNode	ENTRY		600270		True				
ANR	600293	CFGExitNode	EXIT		600270		True				
ANR	600294	Symbol	bf -> o -> bin_obj		600270						
ANR	600295	Symbol	* * bf		600270						
ANR	600296	Symbol	bf		600270						
ANR	600297	Symbol	bf -> o		600270						
ANR	600298	Symbol	* bf		600270						
ANR	600299	Symbol	* bf -> o		600270						
ANR	600300	Function	r_kernel_cache_free	1655:0:40626:41188							
ANR	600301	FunctionDef	r_kernel_cache_free (RKernelCacheObj * obj)		600300	0					
ANR	600302	CompoundStatement		1655:54:40680:41188	600300	0					
ANR	600303	IfStatement	if ( ! obj )		600300	0					
ANR	600304	Condition	! obj	1656:5:40687:40690	600300	0	True				
ANR	600305	UnaryOperationExpression	! obj		600300	0					
ANR	600306	UnaryOperator	!		600300	0					
ANR	600307	Identifier	obj		600300	1					
ANR	600308	CompoundStatement		2:11:12:12	600300	1					
ANR	600309	ReturnStatement	return ;	1657:2:40697:40703	600300	0	True				
ANR	600310	IfStatement	if ( obj -> mach0 )		600300	1					
ANR	600311	Condition	obj -> mach0	1660:5:40714:40723	600300	0	True				
ANR	600312	PtrMemberAccess	obj -> mach0		600300	0					
ANR	600313	Identifier	obj		600300	0					
ANR	600314	Identifier	mach0		600300	1					
ANR	600315	CompoundStatement		6:17:45:45	600300	1					
ANR	600316	ExpressionStatement	MACH0_ ( mach0_free ) ( obj -> mach0 )	1661:2:40730:40761	600300	0	True				
ANR	600317	CallExpression	MACH0_ ( mach0_free ) ( obj -> mach0 )		600300	0					
ANR	600318	Callee	MACH0_ ( mach0_free )		600300	0					
ANR	600319	CallExpression	MACH0_ ( mach0_free )		600300	0					
ANR	600320	Callee	MACH0_		600300	0					
ANR	600321	Identifier	MACH0_		600300	0					
ANR	600322	ArgumentList	mach0_free		600300	1					
ANR	600323	Argument	mach0_free		600300	0					
ANR	600324	Identifier	mach0_free		600300	0					
ANR	600325	ArgumentList	obj -> mach0		600300	1					
ANR	600326	Argument	obj -> mach0		600300	0					
ANR	600327	PtrMemberAccess	obj -> mach0		600300	0					
ANR	600328	Identifier	obj		600300	0					
ANR	600329	Identifier	mach0		600300	1					
ANR	600330	ExpressionStatement	obj -> mach0 = NULL	1662:2:40765:40782	600300	1	True				
ANR	600331	AssignmentExpression	obj -> mach0 = NULL		600300	0		=			
ANR	600332	PtrMemberAccess	obj -> mach0		600300	0					
ANR	600333	Identifier	obj		600300	0					
ANR	600334	Identifier	mach0		600300	1					
ANR	600335	Identifier	NULL		600300	1					
ANR	600336	ExpressionStatement	obj -> cache_buf = NULL	1663:2:40786:40807	600300	2	True				
ANR	600337	AssignmentExpression	obj -> cache_buf = NULL		600300	0		=			
ANR	600338	PtrMemberAccess	obj -> cache_buf		600300	0					
ANR	600339	Identifier	obj		600300	0					
ANR	600340	Identifier	cache_buf		600300	1					
ANR	600341	Identifier	NULL		600300	1					
ANR	600342	IfStatement	if ( obj -> cache_buf )		600300	2					
ANR	600343	Condition	obj -> cache_buf	1666:5:40818:40831	600300	0	True				
ANR	600344	PtrMemberAccess	obj -> cache_buf		600300	0					
ANR	600345	Identifier	obj		600300	0					
ANR	600346	Identifier	cache_buf		600300	1					
ANR	600347	CompoundStatement		12:21:153:153	600300	1					
ANR	600348	ExpressionStatement	r_buf_free ( obj -> cache_buf )	1667:2:40838:40865	600300	0	True				
ANR	600349	CallExpression	r_buf_free ( obj -> cache_buf )		600300	0					
ANR	600350	Callee	r_buf_free		600300	0					
ANR	600351	Identifier	r_buf_free		600300	0					
ANR	600352	ArgumentList	obj -> cache_buf		600300	1					
ANR	600353	Argument	obj -> cache_buf		600300	0					
ANR	600354	PtrMemberAccess	obj -> cache_buf		600300	0					
ANR	600355	Identifier	obj		600300	0					
ANR	600356	Identifier	cache_buf		600300	1					
ANR	600357	ExpressionStatement	obj -> cache_buf = NULL	1668:2:40869:40890	600300	1	True				
ANR	600358	AssignmentExpression	obj -> cache_buf = NULL		600300	0		=			
ANR	600359	PtrMemberAccess	obj -> cache_buf		600300	0					
ANR	600360	Identifier	obj		600300	0					
ANR	600361	Identifier	cache_buf		600300	1					
ANR	600362	Identifier	NULL		600300	1					
ANR	600363	IfStatement	if ( obj -> prelink_info )		600300	3					
ANR	600364	Condition	obj -> prelink_info	1671:5:40901:40917	600300	0	True				
ANR	600365	PtrMemberAccess	obj -> prelink_info		600300	0					
ANR	600366	Identifier	obj		600300	0					
ANR	600367	Identifier	prelink_info		600300	1					
ANR	600368	CompoundStatement		17:24:239:239	600300	1					
ANR	600369	ExpressionStatement	r_cf_value_dict_free ( obj -> prelink_info )	1672:2:40924:40964	600300	0	True				
ANR	600370	CallExpression	r_cf_value_dict_free ( obj -> prelink_info )		600300	0					
ANR	600371	Callee	r_cf_value_dict_free		600300	0					
ANR	600372	Identifier	r_cf_value_dict_free		600300	0					
ANR	600373	ArgumentList	obj -> prelink_info		600300	1					
ANR	600374	Argument	obj -> prelink_info		600300	0					
ANR	600375	PtrMemberAccess	obj -> prelink_info		600300	0					
ANR	600376	Identifier	obj		600300	0					
ANR	600377	Identifier	prelink_info		600300	1					
ANR	600378	ExpressionStatement	obj -> prelink_info = NULL	1673:2:40968:40992	600300	1	True				
ANR	600379	AssignmentExpression	obj -> prelink_info = NULL		600300	0		=			
ANR	600380	PtrMemberAccess	obj -> prelink_info		600300	0					
ANR	600381	Identifier	obj		600300	0					
ANR	600382	Identifier	prelink_info		600300	1					
ANR	600383	Identifier	NULL		600300	1					
ANR	600384	IfStatement	if ( obj -> kexts )		600300	4					
ANR	600385	Condition	obj -> kexts	1676:5:41003:41012	600300	0	True				
ANR	600386	PtrMemberAccess	obj -> kexts		600300	0					
ANR	600387	Identifier	obj		600300	0					
ANR	600388	Identifier	kexts		600300	1					
ANR	600389	CompoundStatement		22:17:334:334	600300	1					
ANR	600390	ExpressionStatement	r_kext_index_free ( obj -> kexts )	1677:2:41019:41049	600300	0	True				
ANR	600391	CallExpression	r_kext_index_free ( obj -> kexts )		600300	0					
ANR	600392	Callee	r_kext_index_free		600300	0					
ANR	600393	Identifier	r_kext_index_free		600300	0					
ANR	600394	ArgumentList	obj -> kexts		600300	1					
ANR	600395	Argument	obj -> kexts		600300	0					
ANR	600396	PtrMemberAccess	obj -> kexts		600300	0					
ANR	600397	Identifier	obj		600300	0					
ANR	600398	Identifier	kexts		600300	1					
ANR	600399	ExpressionStatement	obj -> kexts = NULL	1678:2:41053:41070	600300	1	True				
ANR	600400	AssignmentExpression	obj -> kexts = NULL		600300	0		=			
ANR	600401	PtrMemberAccess	obj -> kexts		600300	0					
ANR	600402	Identifier	obj		600300	0					
ANR	600403	Identifier	kexts		600300	1					
ANR	600404	Identifier	NULL		600300	1					
ANR	600405	IfStatement	if ( obj -> rebase_info )		600300	5					
ANR	600406	Condition	obj -> rebase_info	1681:5:41081:41096	600300	0	True				
ANR	600407	PtrMemberAccess	obj -> rebase_info		600300	0					
ANR	600408	Identifier	obj		600300	0					
ANR	600409	Identifier	rebase_info		600300	1					
ANR	600410	CompoundStatement		27:23:418:418	600300	1					
ANR	600411	ExpressionStatement	r_rebase_info_free ( obj -> rebase_info )	1682:2:41103:41140	600300	0	True				
ANR	600412	CallExpression	r_rebase_info_free ( obj -> rebase_info )		600300	0					
ANR	600413	Callee	r_rebase_info_free		600300	0					
ANR	600414	Identifier	r_rebase_info_free		600300	0					
ANR	600415	ArgumentList	obj -> rebase_info		600300	1					
ANR	600416	Argument	obj -> rebase_info		600300	0					
ANR	600417	PtrMemberAccess	obj -> rebase_info		600300	0					
ANR	600418	Identifier	obj		600300	0					
ANR	600419	Identifier	rebase_info		600300	1					
ANR	600420	ExpressionStatement	obj -> rebase_info = NULL	1683:2:41144:41167	600300	1	True				
ANR	600421	AssignmentExpression	obj -> rebase_info = NULL		600300	0		=			
ANR	600422	PtrMemberAccess	obj -> rebase_info		600300	0					
ANR	600423	Identifier	obj		600300	0					
ANR	600424	Identifier	rebase_info		600300	1					
ANR	600425	Identifier	NULL		600300	1					
ANR	600426	ExpressionStatement	R_FREE ( obj )	1686:1:41174:41186	600300	6	True				
ANR	600427	CallExpression	R_FREE ( obj )		600300	0					
ANR	600428	Callee	R_FREE		600300	0					
ANR	600429	Identifier	R_FREE		600300	0					
ANR	600430	ArgumentList	obj		600300	1					
ANR	600431	Argument	obj		600300	0					
ANR	600432	Identifier	obj		600300	0					
ANR	600433	ReturnType	static void		600300	1					
ANR	600434	Identifier	r_kernel_cache_free		600300	2					
ANR	600435	ParameterList	RKernelCacheObj * obj		600300	3					
ANR	600436	Parameter	RKernelCacheObj * obj	1655:32:40658:40677	600300	0	True				
ANR	600437	ParameterType	RKernelCacheObj *		600300	0					
ANR	600438	Identifier	obj		600300	1					
ANR	600439	CFGEntryNode	ENTRY		600300		True				
ANR	600440	CFGExitNode	EXIT		600300		True				
ANR	600441	Symbol	* obj		600300						
ANR	600442	Symbol	obj -> prelink_info		600300						
ANR	600443	Symbol	NULL		600300						
ANR	600444	Symbol	obj -> cache_buf		600300						
ANR	600445	Symbol	obj		600300						
ANR	600446	Symbol	mach0_free		600300						
ANR	600447	Symbol	obj -> mach0		600300						
ANR	600448	Symbol	obj -> kexts		600300						
ANR	600449	Symbol	obj -> rebase_info		600300						
ANR	600450	DeclStmt									
ANR	600451	Decl							RFileRange	RFileRange *	rebase_ranges
ANR	600452	DeclStmt									
ANR	600453	Decl							struct section_t	struct section_t *	sections
ANR	600454	DeclStmt									
ANR	600455	Decl							ut64	ut64	starts_offset
ANR	600456	Decl							ut64	ut64	starts_size
ANR	600457	DeclStmt									
ANR	600458	Decl							int	int	i
ANR	600459	DeclStmt									
ANR	600460	Decl							ut64	ut64	kernel_base
ANR	600461	DeclStmt									
ANR	600462	Decl							int	int	nsegs
ANR	600463	DeclStmt									
ANR	600464	Decl							char	char [ 17 ]	segname
ANR	600465	DeclStmt									
ANR	600466	Decl							int	int	n_starts
ANR	600467	DeclStmt									
ANR	600468	Decl							ut64	ut64	multiplier
ANR	600469	DeclStmt									
ANR	600470	Decl							ut8	ut8 [ 4 ]	bytes
ANR	600471	DeclStmt									
ANR	600472	Decl							RRebaseInfo	RRebaseInfo *	rebase_info
ANR	600473	Function	r_rebase_info_free	1769:0:42956:43125							
ANR	600474	FunctionDef	r_rebase_info_free (RRebaseInfo * info)		600473	0					
ANR	600475	CompoundStatement		1769:50:43006:43125	600473	0					
ANR	600476	IfStatement	if ( ! info )		600473	0					
ANR	600477	Condition	! info	1770:5:43013:43017	600473	0	True				
ANR	600478	UnaryOperationExpression	! info		600473	0					
ANR	600479	UnaryOperator	!		600473	0					
ANR	600480	Identifier	info		600473	1					
ANR	600481	CompoundStatement		2:12:13:13	600473	1					
ANR	600482	ReturnStatement	return ;	1771:2:43024:43030	600473	0	True				
ANR	600483	IfStatement	if ( info -> ranges )		600473	1					
ANR	600484	Condition	info -> ranges	1774:5:43041:43052	600473	0	True				
ANR	600485	PtrMemberAccess	info -> ranges		600473	0					
ANR	600486	Identifier	info		600473	0					
ANR	600487	Identifier	ranges		600473	1					
ANR	600488	CompoundStatement		6:19:48:48	600473	1					
ANR	600489	ExpressionStatement	R_FREE ( info -> ranges )	1775:2:43059:43080	600473	0	True				
ANR	600490	CallExpression	R_FREE ( info -> ranges )		600473	0					
ANR	600491	Callee	R_FREE		600473	0					
ANR	600492	Identifier	R_FREE		600473	0					
ANR	600493	ArgumentList	info -> ranges		600473	1					
ANR	600494	Argument	info -> ranges		600473	0					
ANR	600495	PtrMemberAccess	info -> ranges		600473	0					
ANR	600496	Identifier	info		600473	0					
ANR	600497	Identifier	ranges		600473	1					
ANR	600498	ExpressionStatement	info -> ranges = NULL	1776:2:43084:43103	600473	1	True				
ANR	600499	AssignmentExpression	info -> ranges = NULL		600473	0		=			
ANR	600500	PtrMemberAccess	info -> ranges		600473	0					
ANR	600501	Identifier	info		600473	0					
ANR	600502	Identifier	ranges		600473	1					
ANR	600503	Identifier	NULL		600473	1					
ANR	600504	ExpressionStatement	R_FREE ( info )	1779:1:43110:43123	600473	2	True				
ANR	600505	CallExpression	R_FREE ( info )		600473	0					
ANR	600506	Callee	R_FREE		600473	0					
ANR	600507	Identifier	R_FREE		600473	0					
ANR	600508	ArgumentList	info		600473	1					
ANR	600509	Argument	info		600473	0					
ANR	600510	Identifier	info		600473	0					
ANR	600511	ReturnType	static void		600473	1					
ANR	600512	Identifier	r_rebase_info_free		600473	2					
ANR	600513	ParameterList	RRebaseInfo * info		600473	3					
ANR	600514	Parameter	RRebaseInfo * info	1769:31:42987:43003	600473	0	True				
ANR	600515	ParameterType	RRebaseInfo *		600473	0					
ANR	600516	Identifier	info		600473	1					
ANR	600517	CFGEntryNode	ENTRY		600473		True				
ANR	600518	CFGExitNode	EXIT		600473		True				
ANR	600519	Symbol	NULL		600473						
ANR	600520	Symbol	* info		600473						
ANR	600521	Symbol	info -> ranges		600473						
ANR	600522	Symbol	info		600473						
ANR	600523	Function	r_rebase_info_populate	1782:0:43128:43906							
ANR	600524	FunctionDef	"r_rebase_info_populate (RRebaseInfo * info , RKernelCacheObj * obj)"		600523	0					
ANR	600525	CompoundStatement		1782:76:43204:43906	600523	0					
ANR	600526	IdentifierDeclStatement	struct section_t * sections = NULL ;	1783:1:43207:43240	600523	0	True				
ANR	600527	IdentifierDecl	* sections = NULL		600523	0					
ANR	600528	IdentifierDeclType	struct section_t *		600523	0					
ANR	600529	Identifier	sections		600523	1					
ANR	600530	AssignmentExpression	* sections = NULL		600523	2		=			
ANR	600531	Identifier	NULL		600523	0					
ANR	600532	Identifier	NULL		600523	1					
ANR	600533	IdentifierDeclStatement	int i = 0 ;	1784:1:43243:43252	600523	1	True				
ANR	600534	IdentifierDecl	i = 0		600523	0					
ANR	600535	IdentifierDeclType	int		600523	0					
ANR	600536	Identifier	i		600523	1					
ANR	600537	AssignmentExpression	i = 0		600523	2		=			
ANR	600538	Identifier	i		600523	0					
ANR	600539	PrimaryExpression	0		600523	1					
ANR	600540	IfStatement	if ( obj -> rebase_info_populated )		600523	2					
ANR	600541	Condition	obj -> rebase_info_populated	1786:5:43260:43285	600523	0	True				
ANR	600542	PtrMemberAccess	obj -> rebase_info_populated		600523	0					
ANR	600543	Identifier	obj		600523	0					
ANR	600544	Identifier	rebase_info_populated		600523	1					
ANR	600545	CompoundStatement		5:33:83:83	600523	1					
ANR	600546	ReturnStatement	return ;	1787:2:43292:43298	600523	0	True				
ANR	600547	ExpressionStatement	obj -> rebase_info_populated = true	1789:1:43304:43337	600523	3	True				
ANR	600548	AssignmentExpression	obj -> rebase_info_populated = true		600523	0		=			
ANR	600549	PtrMemberAccess	obj -> rebase_info_populated		600523	0					
ANR	600550	Identifier	obj		600523	0					
ANR	600551	Identifier	rebase_info_populated		600523	1					
ANR	600552	Identifier	true		600523	1					
ANR	600553	ForStatement	for ( ; i < info -> n_ranges ; i ++ )		600523	4					
ANR	600554	Condition	i < info -> n_ranges	1791:8:43348:43365	600523	0	True				
ANR	600555	RelationalExpression	i < info -> n_ranges		600523	0		<			
ANR	600556	Identifier	i		600523	0					
ANR	600557	PtrMemberAccess	info -> n_ranges		600523	1					
ANR	600558	Identifier	info		600523	0					
ANR	600559	Identifier	n_ranges		600523	1					
ANR	600560	PostIncDecOperationExpression	i ++	1791:28:43368:43370	600523	1	True				
ANR	600561	Identifier	i		600523	0					
ANR	600562	IncDec	++		600523	1					
ANR	600563	CompoundStatement		19:2:436:537	600523	2					
ANR	600564	IfStatement	if ( info -> ranges [ i ] . size != UT64_MAX )		600523	0					
ANR	600565	Condition	info -> ranges [ i ] . size != UT64_MAX	1792:6:43381:43412	600523	0	True				
ANR	600566	EqualityExpression	info -> ranges [ i ] . size != UT64_MAX		600523	0		!=			
ANR	600567	MemberAccess	info -> ranges [ i ] . size		600523	0					
ANR	600568	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600569	PtrMemberAccess	info -> ranges		600523	0					
ANR	600570	Identifier	info		600523	0					
ANR	600571	Identifier	ranges		600523	1					
ANR	600572	Identifier	i		600523	1					
ANR	600573	Identifier	size		600523	1					
ANR	600574	Identifier	UT64_MAX		600523	1					
ANR	600575	CompoundStatement		11:40:210:210	600523	1					
ANR	600576	GotoStatement	goto cleanup ;	1793:3:43420:43432	600523	0	True				
ANR	600577	Identifier	cleanup		600523	0					
ANR	600578	ElseStatement	else		600523	0					
ANR	600579	IfStatement	if ( sections == NULL )		600523	0					
ANR	600580	Condition	sections == NULL	1794:13:43447:43462	600523	0	True				
ANR	600581	EqualityExpression	sections == NULL		600523	0		==			
ANR	600582	Identifier	sections		600523	0					
ANR	600583	Identifier	NULL		600523	1					
ANR	600584	CompoundStatement		13:31:260:260	600523	1					
ANR	600585	IfStatement	if ( ! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) ) )		600523	0					
ANR	600586	Condition	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )	1795:7:43474:43520	600523	0	True				
ANR	600587	UnaryOperationExpression	! ( sections = MACH0_ ( get_sections ) ( obj -> mach0 ) )		600523	0					
ANR	600588	UnaryOperator	!		600523	0					
ANR	600589	AssignmentExpression	sections = MACH0_ ( get_sections ) ( obj -> mach0 )		600523	1		=			
ANR	600590	Identifier	sections		600523	0					
ANR	600591	CallExpression	MACH0_ ( get_sections ) ( obj -> mach0 )		600523	1					
ANR	600592	Callee	MACH0_ ( get_sections )		600523	0					
ANR	600593	CallExpression	MACH0_ ( get_sections )		600523	0					
ANR	600594	Callee	MACH0_		600523	0					
ANR	600595	Identifier	MACH0_		600523	0					
ANR	600596	ArgumentList	get_sections		600523	1					
ANR	600597	Argument	get_sections		600523	0					
ANR	600598	Identifier	get_sections		600523	0					
ANR	600599	ArgumentList	obj -> mach0		600523	1					
ANR	600600	Argument	obj -> mach0		600523	0					
ANR	600601	PtrMemberAccess	obj -> mach0		600523	0					
ANR	600602	Identifier	obj		600523	0					
ANR	600603	Identifier	mach0		600523	1					
ANR	600604	CompoundStatement		14:56:318:318	600523	1					
ANR	600605	ReturnStatement	return ;	1796:4:43529:43535	600523	0	True				
ANR	600606	ExpressionStatement	"info -> ranges [ i ] . offset = r_rebase_offset_to_paddr ( obj , sections , info -> ranges [ i ] . offset )"	1799:2:43548:43637	600523	1	True				
ANR	600607	AssignmentExpression	"info -> ranges [ i ] . offset = r_rebase_offset_to_paddr ( obj , sections , info -> ranges [ i ] . offset )"		600523	0		=			
ANR	600608	MemberAccess	info -> ranges [ i ] . offset		600523	0					
ANR	600609	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600610	PtrMemberAccess	info -> ranges		600523	0					
ANR	600611	Identifier	info		600523	0					
ANR	600612	Identifier	ranges		600523	1					
ANR	600613	Identifier	i		600523	1					
ANR	600614	Identifier	offset		600523	1					
ANR	600615	CallExpression	"r_rebase_offset_to_paddr ( obj , sections , info -> ranges [ i ] . offset )"		600523	1					
ANR	600616	Callee	r_rebase_offset_to_paddr		600523	0					
ANR	600617	Identifier	r_rebase_offset_to_paddr		600523	0					
ANR	600618	ArgumentList	obj		600523	1					
ANR	600619	Argument	obj		600523	0					
ANR	600620	Identifier	obj		600523	0					
ANR	600621	Argument	sections		600523	1					
ANR	600622	Identifier	sections		600523	0					
ANR	600623	Argument	info -> ranges [ i ] . offset		600523	2					
ANR	600624	MemberAccess	info -> ranges [ i ] . offset		600523	0					
ANR	600625	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600626	PtrMemberAccess	info -> ranges		600523	0					
ANR	600627	Identifier	info		600523	0					
ANR	600628	Identifier	ranges		600523	1					
ANR	600629	Identifier	i		600523	1					
ANR	600630	Identifier	offset		600523	1					
ANR	600631	IdentifierDeclStatement	"ut64 end = iterate_rebase_list ( obj -> cache_buf , info -> multiplier , info -> ranges [ i ] . offset , NULL , NULL ) ;"	1800:2:43641:43742	600523	2	True				
ANR	600632	IdentifierDecl	"end = iterate_rebase_list ( obj -> cache_buf , info -> multiplier , info -> ranges [ i ] . offset , NULL , NULL )"		600523	0					
ANR	600633	IdentifierDeclType	ut64		600523	0					
ANR	600634	Identifier	end		600523	1					
ANR	600635	AssignmentExpression	"end = iterate_rebase_list ( obj -> cache_buf , info -> multiplier , info -> ranges [ i ] . offset , NULL , NULL )"		600523	2		=			
ANR	600636	Identifier	end		600523	0					
ANR	600637	CallExpression	"iterate_rebase_list ( obj -> cache_buf , info -> multiplier , info -> ranges [ i ] . offset , NULL , NULL )"		600523	1					
ANR	600638	Callee	iterate_rebase_list		600523	0					
ANR	600639	Identifier	iterate_rebase_list		600523	0					
ANR	600640	ArgumentList	obj -> cache_buf		600523	1					
ANR	600641	Argument	obj -> cache_buf		600523	0					
ANR	600642	PtrMemberAccess	obj -> cache_buf		600523	0					
ANR	600643	Identifier	obj		600523	0					
ANR	600644	Identifier	cache_buf		600523	1					
ANR	600645	Argument	info -> multiplier		600523	1					
ANR	600646	PtrMemberAccess	info -> multiplier		600523	0					
ANR	600647	Identifier	info		600523	0					
ANR	600648	Identifier	multiplier		600523	1					
ANR	600649	Argument	info -> ranges [ i ] . offset		600523	2					
ANR	600650	MemberAccess	info -> ranges [ i ] . offset		600523	0					
ANR	600651	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600652	PtrMemberAccess	info -> ranges		600523	0					
ANR	600653	Identifier	info		600523	0					
ANR	600654	Identifier	ranges		600523	1					
ANR	600655	Identifier	i		600523	1					
ANR	600656	Identifier	offset		600523	1					
ANR	600657	Argument	NULL		600523	3					
ANR	600658	Identifier	NULL		600523	0					
ANR	600659	Argument	NULL		600523	4					
ANR	600660	Identifier	NULL		600523	0					
ANR	600661	IfStatement	if ( end != UT64_MAX )		600523	3					
ANR	600662	Condition	end != UT64_MAX	1801:6:43750:43764	600523	0	True				
ANR	600663	EqualityExpression	end != UT64_MAX		600523	0		!=			
ANR	600664	Identifier	end		600523	0					
ANR	600665	Identifier	UT64_MAX		600523	1					
ANR	600666	CompoundStatement		20:23:562:562	600523	1					
ANR	600667	ExpressionStatement	info -> ranges [ i ] . size = end - info -> ranges [ i ] . offset + 8	1802:3:43772:43827	600523	0	True				
ANR	600668	AssignmentExpression	info -> ranges [ i ] . size = end - info -> ranges [ i ] . offset + 8		600523	0		=			
ANR	600669	MemberAccess	info -> ranges [ i ] . size		600523	0					
ANR	600670	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600671	PtrMemberAccess	info -> ranges		600523	0					
ANR	600672	Identifier	info		600523	0					
ANR	600673	Identifier	ranges		600523	1					
ANR	600674	Identifier	i		600523	1					
ANR	600675	Identifier	size		600523	1					
ANR	600676	AdditiveExpression	end - info -> ranges [ i ] . offset + 8		600523	1		-			
ANR	600677	Identifier	end		600523	0					
ANR	600678	AdditiveExpression	info -> ranges [ i ] . offset + 8		600523	1		+			
ANR	600679	MemberAccess	info -> ranges [ i ] . offset		600523	0					
ANR	600680	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600681	PtrMemberAccess	info -> ranges		600523	0					
ANR	600682	Identifier	info		600523	0					
ANR	600683	Identifier	ranges		600523	1					
ANR	600684	Identifier	i		600523	1					
ANR	600685	Identifier	offset		600523	1					
ANR	600686	PrimaryExpression	8		600523	1					
ANR	600687	ElseStatement	else		600523	0					
ANR	600688	CompoundStatement		22:9:633:633	600523	0					
ANR	600689	ExpressionStatement	info -> ranges [ i ] . size = 0	1804:3:43843:43867	600523	0	True				
ANR	600690	AssignmentExpression	info -> ranges [ i ] . size = 0		600523	0		=			
ANR	600691	MemberAccess	info -> ranges [ i ] . size		600523	0					
ANR	600692	ArrayIndexing	info -> ranges [ i ]		600523	0					
ANR	600693	PtrMemberAccess	info -> ranges		600523	0					
ANR	600694	Identifier	info		600523	0					
ANR	600695	Identifier	ranges		600523	1					
ANR	600696	Identifier	i		600523	1					
ANR	600697	Identifier	size		600523	1					
ANR	600698	PrimaryExpression	0		600523	1					
ANR	600699	Label	cleanup :	1808:0:43877:43884	600523	5	True				
ANR	600700	Identifier	cleanup		600523	0					
ANR	600701	ExpressionStatement	R_FREE ( sections )	1809:1:43887:43904	600523	6	True				
ANR	600702	CallExpression	R_FREE ( sections )		600523	0					
ANR	600703	Callee	R_FREE		600523	0					
ANR	600704	Identifier	R_FREE		600523	0					
ANR	600705	ArgumentList	sections		600523	1					
ANR	600706	Argument	sections		600523	0					
ANR	600707	Identifier	sections		600523	0					
ANR	600708	ReturnType	static void		600523	1					
ANR	600709	Identifier	r_rebase_info_populate		600523	2					
ANR	600710	ParameterList	"RRebaseInfo * info , RKernelCacheObj * obj"		600523	3					
ANR	600711	Parameter	RRebaseInfo * info	1782:35:43163:43179	600523	0	True				
ANR	600712	ParameterType	RRebaseInfo *		600523	0					
ANR	600713	Identifier	info		600523	1					
ANR	600714	Parameter	RKernelCacheObj * obj	1782:54:43182:43201	600523	1	True				
ANR	600715	ParameterType	RKernelCacheObj *		600523	0					
ANR	600716	Identifier	obj		600523	1					
ANR	600717	CFGEntryNode	ENTRY		600523		True				
ANR	600718	CFGExitNode	EXIT		600523		True				
ANR	600719	Symbol	* * info		600523						
ANR	600720	Symbol	* info -> ranges		600523						
ANR	600721	Symbol	info -> multiplier		600523						
ANR	600722	Symbol	iterate_rebase_list		600523						
ANR	600723	Symbol	r_rebase_offset_to_paddr		600523						
ANR	600724	Symbol	obj -> cache_buf		600523						
ANR	600725	Symbol	get_sections		600523						
ANR	600726	Symbol	obj -> mach0		600523						
ANR	600727	Symbol	end		600523						
ANR	600728	Symbol	UT64_MAX		600523						
ANR	600729	Symbol	info		600523						
ANR	600730	Symbol	* obj		600523						
ANR	600731	Symbol	info -> ranges [ i ] . offset		600523						
ANR	600732	Symbol	NULL		600523						
ANR	600733	Symbol	obj -> rebase_info_populated		600523						
ANR	600734	Symbol	i		600523						
ANR	600735	Symbol	info -> n_ranges		600523						
ANR	600736	Symbol	sections		600523						
ANR	600737	Symbol	MACH0_		600523						
ANR	600738	Symbol	* i		600523						
ANR	600739	Symbol	obj		600523						
ANR	600740	Symbol	true		600523						
ANR	600741	Symbol	info -> ranges [ i ] . size		600523						
ANR	600742	Symbol	* info		600523						
ANR	600743	Symbol	info -> ranges		600523						
ANR	600744	Function	r_rebase_offset_to_paddr	1812:0:43909:44279							
ANR	600745	FunctionDef	"r_rebase_offset_to_paddr (RKernelCacheObj * obj , struct section_t * sections , ut64 offset)"		600744	0					
ANR	600746	CompoundStatement		1812:101:44010:44279	600744	0					
ANR	600747	IdentifierDeclStatement	ut64 vaddr = obj -> rebase_info -> kernel_base + offset ;	1813:1:44013:44064	600744	0	True				
ANR	600748	IdentifierDecl	vaddr = obj -> rebase_info -> kernel_base + offset		600744	0					
ANR	600749	IdentifierDeclType	ut64		600744	0					
ANR	600750	Identifier	vaddr		600744	1					
ANR	600751	AssignmentExpression	vaddr = obj -> rebase_info -> kernel_base + offset		600744	2		=			
ANR	600752	Identifier	vaddr		600744	0					
ANR	600753	AdditiveExpression	obj -> rebase_info -> kernel_base + offset		600744	1		+			
ANR	600754	PtrMemberAccess	obj -> rebase_info -> kernel_base		600744	0					
ANR	600755	PtrMemberAccess	obj -> rebase_info		600744	0					
ANR	600756	Identifier	obj		600744	0					
ANR	600757	Identifier	rebase_info		600744	1					
ANR	600758	Identifier	kernel_base		600744	1					
ANR	600759	Identifier	offset		600744	1					
ANR	600760	IdentifierDeclStatement	int i = 0 ;	1814:1:44067:44076	600744	1	True				
ANR	600761	IdentifierDecl	i = 0		600744	0					
ANR	600762	IdentifierDeclType	int		600744	0					
ANR	600763	Identifier	i		600744	1					
ANR	600764	AssignmentExpression	i = 0		600744	2		=			
ANR	600765	Identifier	i		600744	0					
ANR	600766	PrimaryExpression	0		600744	1					
ANR	600767	ForStatement	for ( ; ! sections [ i ] . last ; i ++ )		600744	2					
ANR	600768	Condition	! sections [ i ] . last	1815:8:44086:44102	600744	0	True				
ANR	600769	UnaryOperationExpression	! sections [ i ] . last		600744	0					
ANR	600770	UnaryOperator	!		600744	0					
ANR	600771	MemberAccess	sections [ i ] . last		600744	1					
ANR	600772	ArrayIndexing	sections [ i ]		600744	0					
ANR	600773	Identifier	sections		600744	0					
ANR	600774	Identifier	i		600744	1					
ANR	600775	Identifier	last		600744	1					
ANR	600776	PostIncDecOperationExpression	i ++	1815:27:44105:44107	600744	1	True				
ANR	600777	Identifier	i		600744	0					
ANR	600778	IncDec	++		600744	1					
ANR	600779	CompoundStatement		4:32:99:99	600744	2					
ANR	600780	IfStatement	if ( sections [ i ] . addr <= vaddr && vaddr < ( sections [ i ] . addr + sections [ i ] . vsize ) )		600744	0					
ANR	600781	Condition	sections [ i ] . addr <= vaddr && vaddr < ( sections [ i ] . addr + sections [ i ] . vsize )	1816:6:44118:44192	600744	0	True				
ANR	600782	AndExpression	sections [ i ] . addr <= vaddr && vaddr < ( sections [ i ] . addr + sections [ i ] . vsize )		600744	0		&&			
ANR	600783	RelationalExpression	sections [ i ] . addr <= vaddr		600744	0		<=			
ANR	600784	MemberAccess	sections [ i ] . addr		600744	0					
ANR	600785	ArrayIndexing	sections [ i ]		600744	0					
ANR	600786	Identifier	sections		600744	0					
ANR	600787	Identifier	i		600744	1					
ANR	600788	Identifier	addr		600744	1					
ANR	600789	Identifier	vaddr		600744	1					
ANR	600790	RelationalExpression	vaddr < ( sections [ i ] . addr + sections [ i ] . vsize )		600744	1		<			
ANR	600791	Identifier	vaddr		600744	0					
ANR	600792	AdditiveExpression	sections [ i ] . addr + sections [ i ] . vsize		600744	1		+			
ANR	600793	MemberAccess	sections [ i ] . addr		600744	0					
ANR	600794	ArrayIndexing	sections [ i ]		600744	0					
ANR	600795	Identifier	sections		600744	0					
ANR	600796	Identifier	i		600744	1					
ANR	600797	Identifier	addr		600744	1					
ANR	600798	MemberAccess	sections [ i ] . vsize		600744	1					
ANR	600799	ArrayIndexing	sections [ i ]		600744	0					
ANR	600800	Identifier	sections		600744	0					
ANR	600801	Identifier	i		600744	1					
ANR	600802	Identifier	vsize		600744	1					
ANR	600803	CompoundStatement		5:83:184:184	600744	1					
ANR	600804	ReturnStatement	return sections [ i ] . offset + ( vaddr - sections [ i ] . addr ) ;	1817:3:44200:44254	600744	0	True				
ANR	600805	AdditiveExpression	sections [ i ] . offset + ( vaddr - sections [ i ] . addr )		600744	0		+			
ANR	600806	MemberAccess	sections [ i ] . offset		600744	0					
ANR	600807	ArrayIndexing	sections [ i ]		600744	0					
ANR	600808	Identifier	sections		600744	0					
ANR	600809	Identifier	i		600744	1					
ANR	600810	Identifier	offset		600744	1					
ANR	600811	AdditiveExpression	vaddr - sections [ i ] . addr		600744	1		-			
ANR	600812	Identifier	vaddr		600744	0					
ANR	600813	MemberAccess	sections [ i ] . addr		600744	1					
ANR	600814	ArrayIndexing	sections [ i ]		600744	0					
ANR	600815	Identifier	sections		600744	0					
ANR	600816	Identifier	i		600744	1					
ANR	600817	Identifier	addr		600744	1					
ANR	600818	ReturnStatement	return offset ;	1820:1:44264:44277	600744	3	True				
ANR	600819	Identifier	offset		600744	0					
ANR	600820	ReturnType	static ut64		600744	1					
ANR	600821	Identifier	r_rebase_offset_to_paddr		600744	2					
ANR	600822	ParameterList	"RKernelCacheObj * obj , struct section_t * sections , ut64 offset"		600744	3					
ANR	600823	Parameter	RKernelCacheObj * obj	1812:38:43947:43966	600744	0	True				
ANR	600824	ParameterType	RKernelCacheObj *		600744	0					
ANR	600825	Identifier	obj		600744	1					
ANR	600826	Parameter	struct section_t * sections	1812:60:43969:43994	600744	1	True				
ANR	600827	ParameterType	struct section_t *		600744	0					
ANR	600828	Identifier	sections		600744	1					
ANR	600829	Parameter	ut64 offset	1812:88:43997:44007	600744	2	True				
ANR	600830	ParameterType	ut64		600744	0					
ANR	600831	Identifier	offset		600744	1					
ANR	600832	CFGEntryNode	ENTRY		600744		True				
ANR	600833	CFGExitNode	EXIT		600744		True				
ANR	600834	Symbol	sections [ i ] . offset		600744						
ANR	600835	Symbol	* obj		600744						
ANR	600836	Symbol	offset		600744						
ANR	600837	Symbol	sections [ i ] . addr		600744						
ANR	600838	Symbol	obj -> rebase_info -> kernel_base		600744						
ANR	600839	Symbol	i		600744						
ANR	600840	Symbol	sections [ i ] . vsize		600744						
ANR	600841	Symbol	vaddr		600744						
ANR	600842	Symbol	* * obj		600744						
ANR	600843	Symbol	obj -> rebase_info		600744						
ANR	600844	Symbol	sections [ i ] . last		600744						
ANR	600845	Symbol	sections		600744						
ANR	600846	Symbol	* obj -> rebase_info		600744						
ANR	600847	Symbol	* i		600744						
ANR	600848	Symbol	obj		600744						
ANR	600849	Symbol	* sections		600744						
ANR	600850	Function	iterate_rebase_list	1823:0:44282:44849							
ANR	600851	FunctionDef	"iterate_rebase_list (RBuffer * cache_buf , ut64 multiplier , ut64 start_offset , ROnRebaseFunc func , void * user_data)"		600850	0					
ANR	600852	CompoundStatement		1823:125:44407:44849	600850	0					
ANR	600853	IdentifierDeclStatement	ut8 bytes [ 8 ] ;	1824:1:44410:44422	600850	0	True				
ANR	600854	IdentifierDecl	bytes [ 8 ]		600850	0					
ANR	600855	IdentifierDeclType	ut8 [ 8 ]		600850	0					
ANR	600856	Identifier	bytes		600850	1					
ANR	600857	PrimaryExpression	8		600850	2					
ANR	600858	IdentifierDeclStatement	ut64 cursor = start_offset ;	1825:1:44425:44451	600850	1	True				
ANR	600859	IdentifierDecl	cursor = start_offset		600850	0					
ANR	600860	IdentifierDeclType	ut64		600850	0					
ANR	600861	Identifier	cursor		600850	1					
ANR	600862	AssignmentExpression	cursor = start_offset		600850	2		=			
ANR	600863	Identifier	start_offset		600850	0					
ANR	600864	Identifier	start_offset		600850	1					
ANR	600865	WhileStatement	while ( true )		600850	2					
ANR	600866	Condition	true	1827:8:44462:44465	600850	0	True				
ANR	600867	Identifier	true		600850	0					
ANR	600868	CompoundStatement		19:2:308:366	600850	1					
ANR	600869	IfStatement	"if ( r_buf_read_at ( cache_buf , cursor , bytes , 8 ) < 8 )"		600850	0					
ANR	600870	Condition	"r_buf_read_at ( cache_buf , cursor , bytes , 8 ) < 8"	1828:6:44476:44522	600850	0	True				
ANR	600871	RelationalExpression	"r_buf_read_at ( cache_buf , cursor , bytes , 8 ) < 8"		600850	0		<			
ANR	600872	CallExpression	"r_buf_read_at ( cache_buf , cursor , bytes , 8 )"		600850	0					
ANR	600873	Callee	r_buf_read_at		600850	0					
ANR	600874	Identifier	r_buf_read_at		600850	0					
ANR	600875	ArgumentList	cache_buf		600850	1					
ANR	600876	Argument	cache_buf		600850	0					
ANR	600877	Identifier	cache_buf		600850	0					
ANR	600878	Argument	cursor		600850	1					
ANR	600879	Identifier	cursor		600850	0					
ANR	600880	Argument	bytes		600850	2					
ANR	600881	Identifier	bytes		600850	0					
ANR	600882	Argument	8		600850	3					
ANR	600883	PrimaryExpression	8		600850	0					
ANR	600884	PrimaryExpression	8		600850	1					
ANR	600885	CompoundStatement		6:55:117:117	600850	1					
ANR	600886	ReturnStatement	return UT64_MAX ;	1829:3:44530:44545	600850	0	True				
ANR	600887	Identifier	UT64_MAX		600850	0					
ANR	600888	IdentifierDeclStatement	ut64 decorated_addr = r_read_le64 ( bytes ) ;	1832:2:44554:44595	600850	1	True				
ANR	600889	IdentifierDecl	decorated_addr = r_read_le64 ( bytes )		600850	0					
ANR	600890	IdentifierDeclType	ut64		600850	0					
ANR	600891	Identifier	decorated_addr		600850	1					
ANR	600892	AssignmentExpression	decorated_addr = r_read_le64 ( bytes )		600850	2		=			
ANR	600893	Identifier	decorated_addr		600850	0					
ANR	600894	CallExpression	r_read_le64 ( bytes )		600850	1					
ANR	600895	Callee	r_read_le64		600850	0					
ANR	600896	Identifier	r_read_le64		600850	0					
ANR	600897	ArgumentList	bytes		600850	1					
ANR	600898	Argument	bytes		600850	0					
ANR	600899	Identifier	bytes		600850	0					
ANR	600900	IfStatement	if ( func )		600850	2					
ANR	600901	Condition	func	1834:6:44604:44607	600850	0	True				
ANR	600902	Identifier	func		600850	0					
ANR	600903	CompoundStatement		13:3:207:263	600850	1					
ANR	600904	IdentifierDeclStatement	"bool carry_on = func ( cursor , decorated_addr , user_data ) ;"	1835:3:44615:44671	600850	0	True				
ANR	600905	IdentifierDecl	"carry_on = func ( cursor , decorated_addr , user_data )"		600850	0					
ANR	600906	IdentifierDeclType	bool		600850	0					
ANR	600907	Identifier	carry_on		600850	1					
ANR	600908	AssignmentExpression	"carry_on = func ( cursor , decorated_addr , user_data )"		600850	2		=			
ANR	600909	Identifier	carry_on		600850	0					
ANR	600910	CallExpression	"func ( cursor , decorated_addr , user_data )"		600850	1					
ANR	600911	Callee	func		600850	0					
ANR	600912	Identifier	func		600850	0					
ANR	600913	ArgumentList	cursor		600850	1					
ANR	600914	Argument	cursor		600850	0					
ANR	600915	Identifier	cursor		600850	0					
ANR	600916	Argument	decorated_addr		600850	1					
ANR	600917	Identifier	decorated_addr		600850	0					
ANR	600918	Argument	user_data		600850	2					
ANR	600919	Identifier	user_data		600850	0					
ANR	600920	IfStatement	if ( ! carry_on )		600850	1					
ANR	600921	Condition	! carry_on	1836:7:44680:44688	600850	0	True				
ANR	600922	UnaryOperationExpression	! carry_on		600850	0					
ANR	600923	UnaryOperator	!		600850	0					
ANR	600924	Identifier	carry_on		600850	1					
ANR	600925	CompoundStatement		14:18:283:283	600850	1					
ANR	600926	BreakStatement	break ;	1837:4:44697:44702	600850	0	True				
ANR	600927	IdentifierDeclStatement	ut64 delta = ( ( decorated_addr >> 51 ) & 0x7ff ) * multiplier ;	1841:2:44716:44774	600850	3	True				
ANR	600928	IdentifierDecl	delta = ( ( decorated_addr >> 51 ) & 0x7ff ) * multiplier		600850	0					
ANR	600929	IdentifierDeclType	ut64		600850	0					
ANR	600930	Identifier	delta		600850	1					
ANR	600931	AssignmentExpression	delta = ( ( decorated_addr >> 51 ) & 0x7ff ) * multiplier		600850	2		=			
ANR	600932	Identifier	delta		600850	0					
ANR	600933	MultiplicativeExpression	( ( decorated_addr >> 51 ) & 0x7ff ) * multiplier		600850	1		*			
ANR	600934	BitAndExpression	( decorated_addr >> 51 ) & 0x7ff		600850	0		&			
ANR	600935	ShiftExpression	decorated_addr >> 51		600850	0		>>			
ANR	600936	Identifier	decorated_addr		600850	0					
ANR	600937	PrimaryExpression	51		600850	1					
ANR	600938	PrimaryExpression	0x7ff		600850	1					
ANR	600939	Identifier	multiplier		600850	1					
ANR	600940	IfStatement	if ( delta == 0 )		600850	4					
ANR	600941	Condition	delta == 0	1842:6:44782:44791	600850	0	True				
ANR	600942	EqualityExpression	delta == 0		600850	0		==			
ANR	600943	Identifier	delta		600850	0					
ANR	600944	PrimaryExpression	0		600850	1					
ANR	600945	CompoundStatement		20:18:386:386	600850	1					
ANR	600946	BreakStatement	break ;	1843:3:44799:44804	600850	0	True				
ANR	600947	ExpressionStatement	cursor += delta	1845:2:44812:44827	600850	5	True				
ANR	600948	AssignmentExpression	cursor += delta		600850	0		+=			
ANR	600949	Identifier	cursor		600850	0					
ANR	600950	Identifier	delta		600850	1					
ANR	600951	ReturnStatement	return cursor ;	1848:1:44834:44847	600850	3	True				
ANR	600952	Identifier	cursor		600850	0					
ANR	600953	ReturnType	static ut64		600850	1					
ANR	600954	Identifier	iterate_rebase_list		600850	2					
ANR	600955	ParameterList	"RBuffer * cache_buf , ut64 multiplier , ut64 start_offset , ROnRebaseFunc func , void * user_data"		600850	3					
ANR	600956	Parameter	RBuffer * cache_buf	1823:32:44314:44331	600850	0	True				
ANR	600957	ParameterType	RBuffer *		600850	0					
ANR	600958	Identifier	cache_buf		600850	1					
ANR	600959	Parameter	ut64 multiplier	1823:52:44334:44348	600850	1	True				
ANR	600960	ParameterType	ut64		600850	0					
ANR	600961	Identifier	multiplier		600850	1					
ANR	600962	Parameter	ut64 start_offset	1823:69:44351:44367	600850	2	True				
ANR	600963	ParameterType	ut64		600850	0					
ANR	600964	Identifier	start_offset		600850	1					
ANR	600965	Parameter	ROnRebaseFunc func	1823:88:44370:44387	600850	3	True				
ANR	600966	ParameterType	ROnRebaseFunc		600850	0					
ANR	600967	Identifier	func		600850	1					
ANR	600968	Parameter	void * user_data	1823:108:44390:44404	600850	4	True				
ANR	600969	ParameterType	void *		600850	0					
ANR	600970	Identifier	user_data		600850	1					
ANR	600971	CFGEntryNode	ENTRY		600850		True				
ANR	600972	CFGExitNode	EXIT		600850		True				
ANR	600973	Symbol	cursor		600850						
ANR	600974	Symbol	r_read_le64		600850						
ANR	600975	Symbol	decorated_addr		600850						
ANR	600976	Symbol	multiplier		600850						
ANR	600977	Symbol	delta		600850						
ANR	600978	Symbol	user_data		600850						
ANR	600979	Symbol	cache_buf		600850						
ANR	600980	Symbol	func		600850						
ANR	600981	Symbol	bytes		600850						
ANR	600982	Symbol	true		600850						
ANR	600983	Symbol	r_buf_read_at		600850						
ANR	600984	Symbol	start_offset		600850						
ANR	600985	Symbol	carry_on		600850						
ANR	600986	Symbol	UT64_MAX		600850						
ANR	600987	Function	swizzle_io_read	1851:0:44852:45089							
ANR	600988	FunctionDef	"swizzle_io_read (RKernelCacheObj * obj , RIO * io)"		600987	0					
ANR	600989	CompoundStatement		1851:59:44911:45089	600987	0					
ANR	600990	IfStatement	if ( ! io || ! io -> desc || ! io -> desc -> plugin )		600987	0					
ANR	600991	Condition	! io || ! io -> desc || ! io -> desc -> plugin	1852:5:44918:44954	600987	0	True				
ANR	600992	OrExpression	! io || ! io -> desc || ! io -> desc -> plugin		600987	0		||			
ANR	600993	UnaryOperationExpression	! io		600987	0					
ANR	600994	UnaryOperator	!		600987	0					
ANR	600995	Identifier	io		600987	1					
ANR	600996	OrExpression	! io -> desc || ! io -> desc -> plugin		600987	1		||			
ANR	600997	UnaryOperationExpression	! io -> desc		600987	0					
ANR	600998	UnaryOperator	!		600987	0					
ANR	600999	PtrMemberAccess	io -> desc		600987	1					
ANR	601000	Identifier	io		600987	0					
ANR	601001	Identifier	desc		600987	1					
ANR	601002	UnaryOperationExpression	! io -> desc -> plugin		600987	1					
ANR	601003	UnaryOperator	!		600987	0					
ANR	601004	PtrMemberAccess	io -> desc -> plugin		600987	1					
ANR	601005	PtrMemberAccess	io -> desc		600987	0					
ANR	601006	Identifier	io		600987	0					
ANR	601007	Identifier	desc		600987	1					
ANR	601008	Identifier	plugin		600987	1					
ANR	601009	CompoundStatement		2:44:45:45	600987	1					
ANR	601010	ReturnStatement	return ;	1853:2:44961:44967	600987	0	True				
ANR	601011	IdentifierDeclStatement	RIOPlugin * plugin = io -> desc -> plugin ;	1856:1:44974:45010	600987	1	True				
ANR	601012	IdentifierDecl	* plugin = io -> desc -> plugin		600987	0					
ANR	601013	IdentifierDeclType	RIOPlugin *		600987	0					
ANR	601014	Identifier	plugin		600987	1					
ANR	601015	AssignmentExpression	* plugin = io -> desc -> plugin		600987	2		=			
ANR	601016	Identifier	plugin		600987	0					
ANR	601017	PtrMemberAccess	io -> desc -> plugin		600987	1					
ANR	601018	PtrMemberAccess	io -> desc		600987	0					
ANR	601019	Identifier	io		600987	0					
ANR	601020	Identifier	desc		600987	1					
ANR	601021	Identifier	plugin		600987	1					
ANR	601022	ExpressionStatement	obj -> original_io_read = plugin -> read	1857:1:45013:45049	600987	2	True				
ANR	601023	AssignmentExpression	obj -> original_io_read = plugin -> read		600987	0		=			
ANR	601024	PtrMemberAccess	obj -> original_io_read		600987	0					
ANR	601025	Identifier	obj		600987	0					
ANR	601026	Identifier	original_io_read		600987	1					
ANR	601027	PtrMemberAccess	plugin -> read		600987	1					
ANR	601028	Identifier	plugin		600987	0					
ANR	601029	Identifier	read		600987	1					
ANR	601030	ExpressionStatement	plugin -> read = & kernelcache_io_read	1858:1:45052:45087	600987	3	True				
ANR	601031	AssignmentExpression	plugin -> read = & kernelcache_io_read		600987	0		=			
ANR	601032	PtrMemberAccess	plugin -> read		600987	0					
ANR	601033	Identifier	plugin		600987	0					
ANR	601034	Identifier	read		600987	1					
ANR	601035	UnaryOperationExpression	& kernelcache_io_read		600987	1					
ANR	601036	UnaryOperator	&		600987	0					
ANR	601037	Identifier	kernelcache_io_read		600987	1					
ANR	601038	ReturnType	static void		600987	1					
ANR	601039	Identifier	swizzle_io_read		600987	2					
ANR	601040	ParameterList	"RKernelCacheObj * obj , RIO * io"		600987	3					
ANR	601041	Parameter	RKernelCacheObj * obj	1851:28:44880:44899	600987	0	True				
ANR	601042	ParameterType	RKernelCacheObj *		600987	0					
ANR	601043	Identifier	obj		600987	1					
ANR	601044	Parameter	RIO * io	1851:50:44902:44908	600987	1	True				
ANR	601045	ParameterType	RIO *		600987	0					
ANR	601046	Identifier	io		600987	1					
ANR	601047	CFGEntryNode	ENTRY		600987		True				
ANR	601048	CFGExitNode	EXIT		600987		True				
ANR	601049	Symbol	io -> desc		600987						
ANR	601050	Symbol	* obj		600987						
ANR	601051	Symbol	io		600987						
ANR	601052	Symbol	* plugin		600987						
ANR	601053	Symbol	* io		600987						
ANR	601054	Symbol	* * io		600987						
ANR	601055	Symbol	obj -> original_io_read		600987						
ANR	601056	Symbol	io -> desc -> plugin		600987						
ANR	601057	Symbol	plugin		600987						
ANR	601058	Symbol	plugin -> read		600987						
ANR	601059	Symbol	obj		600987						
ANR	601060	Symbol	& kernelcache_io_read		600987						
ANR	601061	Symbol	* io -> desc		600987						
ANR	601062	Function	kernelcache_io_read	1861:0:45092:46667							
ANR	601063	FunctionDef	"kernelcache_io_read (RIO * io , RIODesc * fd , ut8 * buf , int count)"		601062	0					
ANR	601064	CompoundStatement		1861:74:45166:46667	601062	0					
ANR	601065	IfStatement	if ( ! io )		601062	0					
ANR	601066	Condition	! io	1862:5:45173:45175	601062	0	True				
ANR	601067	UnaryOperationExpression	! io		601062	0					
ANR	601068	UnaryOperator	!		601062	0					
ANR	601069	Identifier	io		601062	1					
ANR	601070	CompoundStatement		2:10:11:11	601062	1					
ANR	601071	ReturnStatement	return - 1 ;	1863:2:45182:45191	601062	0	True				
ANR	601072	UnaryOperationExpression	- 1		601062	0					
ANR	601073	UnaryOperator	-		601062	0					
ANR	601074	PrimaryExpression	1		601062	1					
ANR	601075	IdentifierDeclStatement	RCore * core = ( RCore * ) io -> user ;	1865:1:45197:45228	601062	1	True				
ANR	601076	IdentifierDecl	* core = ( RCore * ) io -> user		601062	0					
ANR	601077	IdentifierDeclType	RCore *		601062	0					
ANR	601078	Identifier	core		601062	1					
ANR	601079	AssignmentExpression	* core = ( RCore * ) io -> user		601062	2		=			
ANR	601080	Identifier	core		601062	0					
ANR	601081	CastExpression	( RCore * ) io -> user		601062	1					
ANR	601082	CastTarget	RCore *		601062	0					
ANR	601083	PtrMemberAccess	io -> user		601062	1					
ANR	601084	Identifier	io		601062	0					
ANR	601085	Identifier	user		601062	1					
ANR	601086	IfStatement	if ( ! core || ! core -> bin || ! core -> bin -> binfiles )		601062	2					
ANR	601087	Condition	! core || ! core -> bin || ! core -> bin -> binfiles	1867:5:45236:45278	601062	0	True				
ANR	601088	OrExpression	! core || ! core -> bin || ! core -> bin -> binfiles		601062	0		||			
ANR	601089	UnaryOperationExpression	! core		601062	0					
ANR	601090	UnaryOperator	!		601062	0					
ANR	601091	Identifier	core		601062	1					
ANR	601092	OrExpression	! core -> bin || ! core -> bin -> binfiles		601062	1		||			
ANR	601093	UnaryOperationExpression	! core -> bin		601062	0					
ANR	601094	UnaryOperator	!		601062	0					
ANR	601095	PtrMemberAccess	core -> bin		601062	1					
ANR	601096	Identifier	core		601062	0					
ANR	601097	Identifier	bin		601062	1					
ANR	601098	UnaryOperationExpression	! core -> bin -> binfiles		601062	1					
ANR	601099	UnaryOperator	!		601062	0					
ANR	601100	PtrMemberAccess	core -> bin -> binfiles		601062	1					
ANR	601101	PtrMemberAccess	core -> bin		601062	0					
ANR	601102	Identifier	core		601062	0					
ANR	601103	Identifier	bin		601062	1					
ANR	601104	Identifier	binfiles		601062	1					
ANR	601105	CompoundStatement		7:50:114:114	601062	1					
ANR	601106	ReturnStatement	return - 1 ;	1868:2:45285:45294	601062	0	True				
ANR	601107	UnaryOperationExpression	- 1		601062	0					
ANR	601108	UnaryOperator	-		601062	0					
ANR	601109	PrimaryExpression	1		601062	1					
ANR	601110	IdentifierDeclStatement	RKernelCacheObj * cache = NULL ;	1871:1:45301:45330	601062	3	True				
ANR	601111	IdentifierDecl	* cache = NULL		601062	0					
ANR	601112	IdentifierDeclType	RKernelCacheObj *		601062	0					
ANR	601113	Identifier	cache		601062	1					
ANR	601114	AssignmentExpression	* cache = NULL		601062	2		=			
ANR	601115	Identifier	NULL		601062	0					
ANR	601116	Identifier	NULL		601062	1					
ANR	601117	IdentifierDeclStatement	RListIter * iter ;	1872:1:45333:45348	601062	4	True				
ANR	601118	IdentifierDecl	* iter		601062	0					
ANR	601119	IdentifierDeclType	RListIter *		601062	0					
ANR	601120	Identifier	iter		601062	1					
ANR	601121	IdentifierDeclStatement	RBinFile * bf ;	1873:1:45351:45363	601062	5	True				
ANR	601122	IdentifierDecl	* bf		601062	0					
ANR	601123	IdentifierDeclType	RBinFile *		601062	0					
ANR	601124	Identifier	bf		601062	1					
ANR	601125	Statement	r_list_foreach	1874:1:45366:45379	601062	6	True				
ANR	601126	Statement	(	1874:16:45381:45381	601062	7	True				
ANR	601127	Statement	core	1874:17:45382:45385	601062	8	True				
ANR	601128	Statement	->	1874:21:45386:45387	601062	9	True				
ANR	601129	Statement	bin	1874:23:45388:45390	601062	10	True				
ANR	601130	Statement	->	1874:26:45391:45392	601062	11	True				
ANR	601131	Statement	binfiles	1874:28:45393:45400	601062	12	True				
ANR	601132	Statement	","	1874:36:45401:45401	601062	13	True				
ANR	601133	Statement	iter	1874:38:45403:45406	601062	14	True				
ANR	601134	Statement	","	1874:42:45407:45407	601062	15	True				
ANR	601135	Statement	bf	1874:44:45409:45410	601062	16	True				
ANR	601136	Statement	)	1874:46:45411:45411	601062	17	True				
ANR	601137	CompoundStatement		14:48:246:246	601062	18					
ANR	601138	IfStatement	if ( bf -> fd == fd -> fd )		601062	0					
ANR	601139	Condition	bf -> fd == fd -> fd	1875:6:45421:45436	601062	0	True				
ANR	601140	EqualityExpression	bf -> fd == fd -> fd		601062	0		==			
ANR	601141	PtrMemberAccess	bf -> fd		601062	0					
ANR	601142	Identifier	bf		601062	0					
ANR	601143	Identifier	fd		601062	1					
ANR	601144	PtrMemberAccess	fd -> fd		601062	1					
ANR	601145	Identifier	fd		601062	0					
ANR	601146	Identifier	fd		601062	1					
ANR	601147	CompoundStatement		15:25:273:273	601062	1					
ANR	601148	ExpressionStatement	cache = bf -> o -> bin_obj	1876:3:45445:45467	601062	0	True				
ANR	601149	AssignmentExpression	cache = bf -> o -> bin_obj		601062	0		=			
ANR	601150	Identifier	cache		601062	0					
ANR	601151	PtrMemberAccess	bf -> o -> bin_obj		601062	1					
ANR	601152	PtrMemberAccess	bf -> o		601062	0					
ANR	601153	Identifier	bf		601062	0					
ANR	601154	Identifier	o		601062	1					
ANR	601155	Identifier	bin_obj		601062	1					
ANR	601156	IfStatement	if ( pending_bin_files )		601062	1					
ANR	601157	Condition	pending_bin_files	1877:7:45476:45492	601062	0	True				
ANR	601158	Identifier	pending_bin_files		601062	0					
ANR	601159	CompoundStatement		18:4:334:396	601062	1					
ANR	601160	IdentifierDeclStatement	"RListIter * to_remove = r_list_contains ( pending_bin_files , bf ) ;"	1878:4:45501:45563	601062	0	True				
ANR	601161	IdentifierDecl	"* to_remove = r_list_contains ( pending_bin_files , bf )"		601062	0					
ANR	601162	IdentifierDeclType	RListIter *		601062	0					
ANR	601163	Identifier	to_remove		601062	1					
ANR	601164	AssignmentExpression	"* to_remove = r_list_contains ( pending_bin_files , bf )"		601062	2		=			
ANR	601165	Identifier	to_remove		601062	0					
ANR	601166	CallExpression	"r_list_contains ( pending_bin_files , bf )"		601062	1					
ANR	601167	Callee	r_list_contains		601062	0					
ANR	601168	Identifier	r_list_contains		601062	0					
ANR	601169	ArgumentList	pending_bin_files		601062	1					
ANR	601170	Argument	pending_bin_files		601062	0					
ANR	601171	Identifier	pending_bin_files		601062	0					
ANR	601172	Argument	bf		601062	1					
ANR	601173	Identifier	bf		601062	0					
ANR	601174	IfStatement	if ( to_remove )		601062	1					
ANR	601175	Condition	to_remove	1879:8:45573:45581	601062	0	True				
ANR	601176	Identifier	to_remove		601062	0					
ANR	601177	CompoundStatement		19:19:417:417	601062	1					
ANR	601178	ExpressionStatement	"r_list_delete ( pending_bin_files , to_remove )"	1880:5:45591:45635	601062	0	True				
ANR	601179	CallExpression	"r_list_delete ( pending_bin_files , to_remove )"		601062	0					
ANR	601180	Callee	r_list_delete		601062	0					
ANR	601181	Identifier	r_list_delete		601062	0					
ANR	601182	ArgumentList	pending_bin_files		601062	1					
ANR	601183	Argument	pending_bin_files		601062	0					
ANR	601184	Identifier	pending_bin_files		601062	0					
ANR	601185	Argument	to_remove		601062	1					
ANR	601186	Identifier	to_remove		601062	0					
ANR	601187	IfStatement	if ( r_list_empty ( pending_bin_files ) )		601062	1					
ANR	601188	Condition	r_list_empty ( pending_bin_files )	1881:9:45646:45677	601062	0	True				
ANR	601189	CallExpression	r_list_empty ( pending_bin_files )		601062	0					
ANR	601190	Callee	r_list_empty		601062	0					
ANR	601191	Identifier	r_list_empty		601062	0					
ANR	601192	ArgumentList	pending_bin_files		601062	1					
ANR	601193	Argument	pending_bin_files		601062	0					
ANR	601194	Identifier	pending_bin_files		601062	0					
ANR	601195	CompoundStatement		21:43:513:513	601062	1					
ANR	601196	ExpressionStatement	r_list_free ( pending_bin_files )	1882:6:45688:45719	601062	0	True				
ANR	601197	CallExpression	r_list_free ( pending_bin_files )		601062	0					
ANR	601198	Callee	r_list_free		601062	0					
ANR	601199	Identifier	r_list_free		601062	0					
ANR	601200	ArgumentList	pending_bin_files		601062	1					
ANR	601201	Argument	pending_bin_files		601062	0					
ANR	601202	Identifier	pending_bin_files		601062	0					
ANR	601203	ExpressionStatement	pending_bin_files = NULL	1883:6:45727:45751	601062	1	True				
ANR	601204	AssignmentExpression	pending_bin_files = NULL		601062	0		=			
ANR	601205	Identifier	pending_bin_files		601062	0					
ANR	601206	Identifier	NULL		601062	1					
ANR	601207	BreakStatement	break ;	1887:3:45774:45779	601062	2	True				
ANR	601208	IfStatement	if ( ! cache )		601062	19					
ANR	601209	Condition	! cache	1891:5:45794:45799	601062	0	True				
ANR	601210	UnaryOperationExpression	! cache		601062	0					
ANR	601211	UnaryOperator	!		601062	0					
ANR	601212	Identifier	cache		601062	1					
ANR	601213	CompoundStatement		31:13:635:635	601062	1					
ANR	601214	Statement	r_list_foreach	1892:2:45806:45819	601062	0	True				
ANR	601215	Statement	(	1892:17:45821:45821	601062	1	True				
ANR	601216	Statement	pending_bin_files	1892:18:45822:45838	601062	2	True				
ANR	601217	Statement	","	1892:35:45839:45839	601062	3	True				
ANR	601218	Statement	iter	1892:37:45841:45844	601062	4	True				
ANR	601219	Statement	","	1892:41:45845:45845	601062	5	True				
ANR	601220	Statement	bf	1892:43:45847:45848	601062	6	True				
ANR	601221	Statement	)	1892:45:45849:45849	601062	7	True				
ANR	601222	CompoundStatement		32:47:684:684	601062	8					
ANR	601223	IfStatement	if ( bf -> fd == fd -> fd && bf -> o )		601062	0					
ANR	601224	Condition	bf -> fd == fd -> fd && bf -> o	1893:7:45860:45884	601062	0	True				
ANR	601225	AndExpression	bf -> fd == fd -> fd && bf -> o		601062	0		&&			
ANR	601226	EqualityExpression	bf -> fd == fd -> fd		601062	0		==			
ANR	601227	PtrMemberAccess	bf -> fd		601062	0					
ANR	601228	Identifier	bf		601062	0					
ANR	601229	Identifier	fd		601062	1					
ANR	601230	PtrMemberAccess	fd -> fd		601062	1					
ANR	601231	Identifier	fd		601062	0					
ANR	601232	Identifier	fd		601062	1					
ANR	601233	PtrMemberAccess	bf -> o		601062	1					
ANR	601234	Identifier	bf		601062	0					
ANR	601235	Identifier	o		601062	1					
ANR	601236	CompoundStatement		33:34:720:720	601062	1					
ANR	601237	ExpressionStatement	cache = bf -> o -> bin_obj	1894:4:45893:45915	601062	0	True				
ANR	601238	AssignmentExpression	cache = bf -> o -> bin_obj		601062	0		=			
ANR	601239	Identifier	cache		601062	0					
ANR	601240	PtrMemberAccess	bf -> o -> bin_obj		601062	1					
ANR	601241	PtrMemberAccess	bf -> o		601062	0					
ANR	601242	Identifier	bf		601062	0					
ANR	601243	Identifier	o		601062	1					
ANR	601244	Identifier	bin_obj		601062	1					
ANR	601245	BreakStatement	break ;	1895:4:45921:45926	601062	1	True				
ANR	601246	IfStatement	if ( ! cache || ! cache -> original_io_read || cache -> rebasing_buffer )		601062	20					
ANR	601247	Condition	! cache || ! cache -> original_io_read || cache -> rebasing_buffer	1900:5:45946:46005	601062	0	True				
ANR	601248	OrExpression	! cache || ! cache -> original_io_read || cache -> rebasing_buffer		601062	0		||			
ANR	601249	UnaryOperationExpression	! cache		601062	0					
ANR	601250	UnaryOperator	!		601062	0					
ANR	601251	Identifier	cache		601062	1					
ANR	601252	OrExpression	! cache -> original_io_read || cache -> rebasing_buffer		601062	1		||			
ANR	601253	UnaryOperationExpression	! cache -> original_io_read		601062	0					
ANR	601254	UnaryOperator	!		601062	0					
ANR	601255	PtrMemberAccess	cache -> original_io_read		601062	1					
ANR	601256	Identifier	cache		601062	0					
ANR	601257	Identifier	original_io_read		601062	1					
ANR	601258	PtrMemberAccess	cache -> rebasing_buffer		601062	1					
ANR	601259	Identifier	cache		601062	0					
ANR	601260	Identifier	rebasing_buffer		601062	1					
ANR	601261	CompoundStatement		40:67:841:841	601062	1					
ANR	601262	IfStatement	if ( fd -> plugin -> read == & kernelcache_io_read )		601062	0					
ANR	601263	Condition	fd -> plugin -> read == & kernelcache_io_read	1901:6:46016:46055	601062	0	True				
ANR	601264	EqualityExpression	fd -> plugin -> read == & kernelcache_io_read		601062	0		==			
ANR	601265	PtrMemberAccess	fd -> plugin -> read		601062	0					
ANR	601266	PtrMemberAccess	fd -> plugin		601062	0					
ANR	601267	Identifier	fd		601062	0					
ANR	601268	Identifier	plugin		601062	1					
ANR	601269	Identifier	read		601062	1					
ANR	601270	UnaryOperationExpression	& kernelcache_io_read		601062	1					
ANR	601271	UnaryOperator	&		601062	0					
ANR	601272	Identifier	kernelcache_io_read		601062	1					
ANR	601273	CompoundStatement		41:48:891:891	601062	1					
ANR	601274	ReturnStatement	return - 1 ;	1902:3:46063:46072	601062	0	True				
ANR	601275	UnaryOperationExpression	- 1		601062	0					
ANR	601276	UnaryOperator	-		601062	0					
ANR	601277	PrimaryExpression	1		601062	1					
ANR	601278	ReturnStatement	"return fd -> plugin -> read ( io , fd , buf , count ) ;"	1904:2:46080:46124	601062	1	True				
ANR	601279	CallExpression	"fd -> plugin -> read ( io , fd , buf , count )"		601062	0					
ANR	601280	Callee	fd -> plugin -> read		601062	0					
ANR	601281	PtrMemberAccess	fd -> plugin -> read		601062	0					
ANR	601282	PtrMemberAccess	fd -> plugin		601062	0					
ANR	601283	Identifier	fd		601062	0					
ANR	601284	Identifier	plugin		601062	1					
ANR	601285	Identifier	read		601062	1					
ANR	601286	ArgumentList	io		601062	1					
ANR	601287	Argument	io		601062	0					
ANR	601288	Identifier	io		601062	0					
ANR	601289	Argument	fd		601062	1					
ANR	601290	Identifier	fd		601062	0					
ANR	601291	Argument	buf		601062	2					
ANR	601292	Identifier	buf		601062	0					
ANR	601293	Argument	count		601062	3					
ANR	601294	Identifier	count		601062	0					
ANR	601295	ExpressionStatement	"r_rebase_info_populate ( cache -> rebase_info , cache )"	1907:1:46131:46181	601062	21	True				
ANR	601296	CallExpression	"r_rebase_info_populate ( cache -> rebase_info , cache )"		601062	0					
ANR	601297	Callee	r_rebase_info_populate		601062	0					
ANR	601298	Identifier	r_rebase_info_populate		601062	0					
ANR	601299	ArgumentList	cache -> rebase_info		601062	1					
ANR	601300	Argument	cache -> rebase_info		601062	0					
ANR	601301	PtrMemberAccess	cache -> rebase_info		601062	0					
ANR	601302	Identifier	cache		601062	0					
ANR	601303	Identifier	rebase_info		601062	1					
ANR	601304	Argument	cache		601062	1					
ANR	601305	Identifier	cache		601062	0					
ANR	601306	Statement	static	1909:1:46185:46190	601062	22	True				
ANR	601307	IdentifierDeclStatement	ut8 * internal_buffer = NULL ;	1909:8:46192:46219	601062	23	True				
ANR	601308	IdentifierDecl	* internal_buffer = NULL		601062	0					
ANR	601309	IdentifierDeclType	ut8 *		601062	0					
ANR	601310	Identifier	internal_buffer		601062	1					
ANR	601311	AssignmentExpression	* internal_buffer = NULL		601062	2		=			
ANR	601312	Identifier	NULL		601062	0					
ANR	601313	Identifier	NULL		601062	1					
ANR	601314	Statement	static	1910:1:46222:46227	601062	24	True				
ANR	601315	IdentifierDeclStatement	int internal_buf_size = 0 ;	1910:8:46229:46254	601062	25	True				
ANR	601316	IdentifierDecl	internal_buf_size = 0		601062	0					
ANR	601317	IdentifierDeclType	int		601062	0					
ANR	601318	Identifier	internal_buf_size		601062	1					
ANR	601319	AssignmentExpression	internal_buf_size = 0		601062	2		=			
ANR	601320	Identifier	internal_buf_size		601062	0					
ANR	601321	PrimaryExpression	0		601062	1					
ANR	601322	IfStatement	if ( count > internal_buf_size )		601062	26					
ANR	601323	Condition	count > internal_buf_size	1911:5:46261:46285	601062	0	True				
ANR	601324	RelationalExpression	count > internal_buf_size		601062	0		>			
ANR	601325	Identifier	count		601062	0					
ANR	601326	Identifier	internal_buf_size		601062	1					
ANR	601327	CompoundStatement		51:32:1121:1121	601062	1					
ANR	601328	IfStatement	if ( internal_buffer )		601062	0					
ANR	601329	Condition	internal_buffer	1912:6:46296:46310	601062	0	True				
ANR	601330	Identifier	internal_buffer		601062	0					
ANR	601331	CompoundStatement		52:23:1146:1146	601062	1					
ANR	601332	ExpressionStatement	R_FREE ( internal_buffer )	1913:3:46318:46342	601062	0	True				
ANR	601333	CallExpression	R_FREE ( internal_buffer )		601062	0					
ANR	601334	Callee	R_FREE		601062	0					
ANR	601335	Identifier	R_FREE		601062	0					
ANR	601336	ArgumentList	internal_buffer		601062	1					
ANR	601337	Argument	internal_buffer		601062	0					
ANR	601338	Identifier	internal_buffer		601062	0					
ANR	601339	ExpressionStatement	internal_buffer = NULL	1914:3:46347:46369	601062	1	True				
ANR	601340	AssignmentExpression	internal_buffer = NULL		601062	0		=			
ANR	601341	Identifier	internal_buffer		601062	0					
ANR	601342	Identifier	NULL		601062	1					
ANR	601343	ExpressionStatement	internal_buffer = ( ut8 * ) malloc ( count )	1916:2:46377:46417	601062	1	True				
ANR	601344	AssignmentExpression	internal_buffer = ( ut8 * ) malloc ( count )		601062	0		=			
ANR	601345	Identifier	internal_buffer		601062	0					
ANR	601346	CastExpression	( ut8 * ) malloc ( count )		601062	1					
ANR	601347	CastTarget	ut8 *		601062	0					
ANR	601348	CallExpression	malloc ( count )		601062	1					
ANR	601349	Callee	malloc		601062	0					
ANR	601350	Identifier	malloc		601062	0					
ANR	601351	ArgumentList	count		601062	1					
ANR	601352	Argument	count		601062	0					
ANR	601353	Identifier	count		601062	0					
ANR	601354	ExpressionStatement	internal_buf_size = count	1917:2:46421:46446	601062	2	True				
ANR	601355	AssignmentExpression	internal_buf_size = count		601062	0		=			
ANR	601356	Identifier	internal_buf_size		601062	0					
ANR	601357	Identifier	count		601062	1					
ANR	601358	IdentifierDeclStatement	"int result = cache -> original_io_read ( io , fd , internal_buffer , count ) ;"	1920:1:46453:46522	601062	27	True				
ANR	601359	IdentifierDecl	"result = cache -> original_io_read ( io , fd , internal_buffer , count )"		601062	0					
ANR	601360	IdentifierDeclType	int		601062	0					
ANR	601361	Identifier	result		601062	1					
ANR	601362	AssignmentExpression	"result = cache -> original_io_read ( io , fd , internal_buffer , count )"		601062	2		=			
ANR	601363	Identifier	result		601062	0					
ANR	601364	CallExpression	"cache -> original_io_read ( io , fd , internal_buffer , count )"		601062	1					
ANR	601365	Callee	cache -> original_io_read		601062	0					
ANR	601366	PtrMemberAccess	cache -> original_io_read		601062	0					
ANR	601367	Identifier	cache		601062	0					
ANR	601368	Identifier	original_io_read		601062	1					
ANR	601369	ArgumentList	io		601062	1					
ANR	601370	Argument	io		601062	0					
ANR	601371	Identifier	io		601062	0					
ANR	601372	Argument	fd		601062	1					
ANR	601373	Identifier	fd		601062	0					
ANR	601374	Argument	internal_buffer		601062	2					
ANR	601375	Identifier	internal_buffer		601062	0					
ANR	601376	Argument	count		601062	3					
ANR	601377	Identifier	count		601062	0					
ANR	601378	IfStatement	if ( result == count )		601062	28					
ANR	601379	Condition	result == count	1922:5:46530:46544	601062	0	True				
ANR	601380	EqualityExpression	result == count		601062	0		==			
ANR	601381	Identifier	result		601062	0					
ANR	601382	Identifier	count		601062	1					
ANR	601383	CompoundStatement		62:22:1380:1380	601062	1					
ANR	601384	ExpressionStatement	"rebase_buffer ( cache , io , fd , internal_buffer , count )"	1923:2:46551:46604	601062	0	True				
ANR	601385	CallExpression	"rebase_buffer ( cache , io , fd , internal_buffer , count )"		601062	0					
ANR	601386	Callee	rebase_buffer		601062	0					
ANR	601387	Identifier	rebase_buffer		601062	0					
ANR	601388	ArgumentList	cache		601062	1					
ANR	601389	Argument	cache		601062	0					
ANR	601390	Identifier	cache		601062	0					
ANR	601391	Argument	io		601062	1					
ANR	601392	Identifier	io		601062	0					
ANR	601393	Argument	fd		601062	2					
ANR	601394	Identifier	fd		601062	0					
ANR	601395	Argument	internal_buffer		601062	3					
ANR	601396	Identifier	internal_buffer		601062	0					
ANR	601397	Argument	count		601062	4					
ANR	601398	Identifier	count		601062	0					
ANR	601399	ExpressionStatement	"memcpy ( buf , internal_buffer , result )"	1924:2:46608:46645	601062	1	True				
ANR	601400	CallExpression	"memcpy ( buf , internal_buffer , result )"		601062	0					
ANR	601401	Callee	memcpy		601062	0					
ANR	601402	Identifier	memcpy		601062	0					
ANR	601403	ArgumentList	buf		601062	1					
ANR	601404	Argument	buf		601062	0					
ANR	601405	Identifier	buf		601062	0					
ANR	601406	Argument	internal_buffer		601062	1					
ANR	601407	Identifier	internal_buffer		601062	0					
ANR	601408	Argument	result		601062	2					
ANR	601409	Identifier	result		601062	0					
ANR	601410	ReturnStatement	return result ;	1927:1:46652:46665	601062	29	True				
ANR	601411	Identifier	result		601062	0					
ANR	601412	ReturnType	static int		601062	1					
ANR	601413	Identifier	kernelcache_io_read		601062	2					
ANR	601414	ParameterList	"RIO * io , RIODesc * fd , ut8 * buf , int count"		601062	3					
ANR	601415	Parameter	RIO * io	1861:31:45123:45129	601062	0	True				
ANR	601416	ParameterType	RIO *		601062	0					
ANR	601417	Identifier	io		601062	1					
ANR	601418	Parameter	RIODesc * fd	1861:40:45132:45142	601062	1	True				
ANR	601419	ParameterType	RIODesc *		601062	0					
ANR	601420	Identifier	fd		601062	1					
ANR	601421	Parameter	ut8 * buf	1861:53:45145:45152	601062	2	True				
ANR	601422	ParameterType	ut8 *		601062	0					
ANR	601423	Identifier	buf		601062	1					
ANR	601424	Parameter	int count	1861:63:45155:45163	601062	3	True				
ANR	601425	ParameterType	int		601062	0					
ANR	601426	Identifier	count		601062	1					
ANR	601427	CFGEntryNode	ENTRY		601062		True				
ANR	601428	CFGExitNode	EXIT		601062		True				
ANR	601429	CFGErrorNode	ERROR		601062		True				
ANR	601430	Symbol	bf		601062						
ANR	601431	Symbol	* core		601062						
ANR	601432	Symbol	fd -> plugin		601062						
ANR	601433	Symbol	* cache		601062						
ANR	601434	Symbol	* io		601062						
ANR	601435	Symbol	io -> user		601062						
ANR	601436	Symbol	* bf -> o		601062						
ANR	601437	Symbol	result		601062						
ANR	601438	Symbol	bf -> fd		601062						
ANR	601439	Symbol	pending_bin_files		601062						
ANR	601440	Symbol	bf -> o		601062						
ANR	601441	Symbol	to_remove		601062						
ANR	601442	Symbol	* core -> bin		601062						
ANR	601443	Symbol	core -> bin		601062						
ANR	601444	Symbol	internal_buffer		601062						
ANR	601445	Symbol	* * core		601062						
ANR	601446	Symbol	bf -> o -> bin_obj		601062						
ANR	601447	Symbol	core -> bin -> binfiles		601062						
ANR	601448	Symbol	malloc		601062						
ANR	601449	Symbol	cache		601062						
ANR	601450	Symbol	NULL		601062						
ANR	601451	Symbol	io		601062						
ANR	601452	Symbol	* fd		601062						
ANR	601453	Symbol	count		601062						
ANR	601454	Symbol	* * fd		601062						
ANR	601455	Symbol	internal_buf_size		601062						
ANR	601456	Symbol	iter		601062						
ANR	601457	Symbol	* bf		601062						
ANR	601458	Symbol	cache -> rebasing_buffer		601062						
ANR	601459	Symbol	r_list_contains		601062						
ANR	601460	Symbol	core		601062						
ANR	601461	Symbol	buf		601062						
ANR	601462	Symbol	* * bf		601062						
ANR	601463	Symbol	fd -> fd		601062						
ANR	601464	Symbol	fd -> plugin -> read		601062						
ANR	601465	Symbol	* fd -> plugin		601062						
ANR	601466	Symbol	cache -> rebase_info		601062						
ANR	601467	Symbol	r_list_empty		601062						
ANR	601468	Symbol	& kernelcache_io_read		601062						
ANR	601469	Symbol	cache -> original_io_read		601062						
ANR	601470	Symbol	fd		601062						
ANR	601471	Function	rebase_buffer	1930:0:46670:47348							
ANR	601472	FunctionDef	"rebase_buffer (RKernelCacheObj * obj , RIO * io , RIODesc * fd , ut8 * buf , int count)"		601471	0					
ANR	601473	CompoundStatement		1930:91:46761:47348	601471	0					
ANR	601474	IfStatement	if ( obj -> rebasing_buffer )		601471	0					
ANR	601475	Condition	obj -> rebasing_buffer	1931:5:46768:46787	601471	0	True				
ANR	601476	PtrMemberAccess	obj -> rebasing_buffer		601471	0					
ANR	601477	Identifier	obj		601471	0					
ANR	601478	Identifier	rebasing_buffer		601471	1					
ANR	601479	CompoundStatement		2:27:28:28	601471	1					
ANR	601480	ReturnStatement	return ;	1932:2:46794:46800	601471	0	True				
ANR	601481	ExpressionStatement	obj -> rebasing_buffer = true	1934:1:46806:46833	601471	1	True				
ANR	601482	AssignmentExpression	obj -> rebasing_buffer = true		601471	0		=			
ANR	601483	PtrMemberAccess	obj -> rebasing_buffer		601471	0					
ANR	601484	Identifier	obj		601471	0					
ANR	601485	Identifier	rebasing_buffer		601471	1					
ANR	601486	Identifier	true		601471	1					
ANR	601487	IdentifierDeclStatement	ut64 off = io -> off ;	1936:1:46837:46855	601471	2	True				
ANR	601488	IdentifierDecl	off = io -> off		601471	0					
ANR	601489	IdentifierDeclType	ut64		601471	0					
ANR	601490	Identifier	off		601471	1					
ANR	601491	AssignmentExpression	off = io -> off		601471	2		=			
ANR	601492	Identifier	off		601471	0					
ANR	601493	PtrMemberAccess	io -> off		601471	1					
ANR	601494	Identifier	io		601471	0					
ANR	601495	Identifier	off		601471	1					
ANR	601496	IdentifierDeclStatement	ut64 eob = off + count ;	1937:1:46858:46880	601471	3	True				
ANR	601497	IdentifierDecl	eob = off + count		601471	0					
ANR	601498	IdentifierDeclType	ut64		601471	0					
ANR	601499	Identifier	eob		601471	1					
ANR	601500	AssignmentExpression	eob = off + count		601471	2		=			
ANR	601501	Identifier	eob		601471	0					
ANR	601502	AdditiveExpression	off + count		601471	1		+			
ANR	601503	Identifier	off		601471	0					
ANR	601504	Identifier	count		601471	1					
ANR	601505	IdentifierDeclStatement	int i = 0 ;	1938:1:46883:46892	601471	4	True				
ANR	601506	IdentifierDecl	i = 0		601471	0					
ANR	601507	IdentifierDeclType	int		601471	0					
ANR	601508	Identifier	i		601471	1					
ANR	601509	AssignmentExpression	i = 0		601471	2		=			
ANR	601510	Identifier	i		601471	0					
ANR	601511	PrimaryExpression	0		601471	1					
ANR	601512	IdentifierDeclStatement	RRebaseCtx ctx ;	1939:1:46895:46909	601471	5	True				
ANR	601513	IdentifierDecl	ctx		601471	0					
ANR	601514	IdentifierDeclType	RRebaseCtx		601471	0					
ANR	601515	Identifier	ctx		601471	1					
ANR	601516	ExpressionStatement	ctx . off = off	1941:1:46913:46926	601471	6	True				
ANR	601517	AssignmentExpression	ctx . off = off		601471	0		=			
ANR	601518	MemberAccess	ctx . off		601471	0					
ANR	601519	Identifier	ctx		601471	0					
ANR	601520	Identifier	off		601471	1					
ANR	601521	Identifier	off		601471	1					
ANR	601522	ExpressionStatement	ctx . eob = eob	1942:1:46929:46942	601471	7	True				
ANR	601523	AssignmentExpression	ctx . eob = eob		601471	0		=			
ANR	601524	MemberAccess	ctx . eob		601471	0					
ANR	601525	Identifier	ctx		601471	0					
ANR	601526	Identifier	eob		601471	1					
ANR	601527	Identifier	eob		601471	1					
ANR	601528	ExpressionStatement	ctx . buf = buf	1943:1:46945:46958	601471	8	True				
ANR	601529	AssignmentExpression	ctx . buf = buf		601471	0		=			
ANR	601530	MemberAccess	ctx . buf		601471	0					
ANR	601531	Identifier	ctx		601471	0					
ANR	601532	Identifier	buf		601471	1					
ANR	601533	Identifier	buf		601471	1					
ANR	601534	ExpressionStatement	ctx . count = count	1944:1:46961:46978	601471	9	True				
ANR	601535	AssignmentExpression	ctx . count = count		601471	0		=			
ANR	601536	MemberAccess	ctx . count		601471	0					
ANR	601537	Identifier	ctx		601471	0					
ANR	601538	Identifier	count		601471	1					
ANR	601539	Identifier	count		601471	1					
ANR	601540	ExpressionStatement	ctx . obj = obj	1945:1:46981:46994	601471	10	True				
ANR	601541	AssignmentExpression	ctx . obj = obj		601471	0		=			
ANR	601542	MemberAccess	ctx . obj		601471	0					
ANR	601543	Identifier	ctx		601471	0					
ANR	601544	Identifier	obj		601471	1					
ANR	601545	Identifier	obj		601471	1					
ANR	601546	ForStatement	for ( ; i < obj -> rebase_info -> n_ranges ; i ++ )		601471	11					
ANR	601547	Condition	i < obj -> rebase_info -> n_ranges	1947:8:47005:47034	601471	0	True				
ANR	601548	RelationalExpression	i < obj -> rebase_info -> n_ranges		601471	0		<			
ANR	601549	Identifier	i		601471	0					
ANR	601550	PtrMemberAccess	obj -> rebase_info -> n_ranges		601471	1					
ANR	601551	PtrMemberAccess	obj -> rebase_info		601471	0					
ANR	601552	Identifier	obj		601471	0					
ANR	601553	Identifier	rebase_info		601471	1					
ANR	601554	Identifier	n_ranges		601471	1					
ANR	601555	PostIncDecOperationExpression	i ++	1947:40:47037:47039	601471	1	True				
ANR	601556	Identifier	i		601471	0					
ANR	601557	IncDec	++		601471	1					
ANR	601558	CompoundStatement		20:2:335:386	601471	2					
ANR	601559	IdentifierDeclStatement	ut64 start = obj -> rebase_info -> ranges [ i ] . offset ;	1948:2:47046:47093	601471	0	True				
ANR	601560	IdentifierDecl	start = obj -> rebase_info -> ranges [ i ] . offset		601471	0					
ANR	601561	IdentifierDeclType	ut64		601471	0					
ANR	601562	Identifier	start		601471	1					
ANR	601563	AssignmentExpression	start = obj -> rebase_info -> ranges [ i ] . offset		601471	2		=			
ANR	601564	Identifier	start		601471	0					
ANR	601565	MemberAccess	obj -> rebase_info -> ranges [ i ] . offset		601471	1					
ANR	601566	ArrayIndexing	obj -> rebase_info -> ranges [ i ]		601471	0					
ANR	601567	PtrMemberAccess	obj -> rebase_info -> ranges		601471	0					
ANR	601568	PtrMemberAccess	obj -> rebase_info		601471	0					
ANR	601569	Identifier	obj		601471	0					
ANR	601570	Identifier	rebase_info		601471	1					
ANR	601571	Identifier	ranges		601471	1					
ANR	601572	Identifier	i		601471	1					
ANR	601573	Identifier	offset		601471	1					
ANR	601574	IdentifierDeclStatement	ut64 end = start + obj -> rebase_info -> ranges [ i ] . size ;	1949:2:47097:47148	601471	1	True				
ANR	601575	IdentifierDecl	end = start + obj -> rebase_info -> ranges [ i ] . size		601471	0					
ANR	601576	IdentifierDeclType	ut64		601471	0					
ANR	601577	Identifier	end		601471	1					
ANR	601578	AssignmentExpression	end = start + obj -> rebase_info -> ranges [ i ] . size		601471	2		=			
ANR	601579	Identifier	end		601471	0					
ANR	601580	AdditiveExpression	start + obj -> rebase_info -> ranges [ i ] . size		601471	1		+			
ANR	601581	Identifier	start		601471	0					
ANR	601582	MemberAccess	obj -> rebase_info -> ranges [ i ] . size		601471	1					
ANR	601583	ArrayIndexing	obj -> rebase_info -> ranges [ i ]		601471	0					
ANR	601584	PtrMemberAccess	obj -> rebase_info -> ranges		601471	0					
ANR	601585	PtrMemberAccess	obj -> rebase_info		601471	0					
ANR	601586	Identifier	obj		601471	0					
ANR	601587	Identifier	rebase_info		601471	1					
ANR	601588	Identifier	ranges		601471	1					
ANR	601589	Identifier	i		601471	1					
ANR	601590	Identifier	size		601471	1					
ANR	601591	IfStatement	if ( end >= off && start <= eob )		601471	2					
ANR	601592	Condition	end >= off && start <= eob	1950:6:47156:47181	601471	0	True				
ANR	601593	AndExpression	end >= off && start <= eob		601471	0		&&			
ANR	601594	RelationalExpression	end >= off		601471	0		>=			
ANR	601595	Identifier	end		601471	0					
ANR	601596	Identifier	off		601471	1					
ANR	601597	RelationalExpression	start <= eob		601471	1		<=			
ANR	601598	Identifier	start		601471	0					
ANR	601599	Identifier	eob		601471	1					
ANR	601600	CompoundStatement		21:34:422:422	601471	1					
ANR	601601	ExpressionStatement	"iterate_rebase_list ( obj -> cache_buf , obj -> rebase_info -> multiplier , start , ( ROnRebaseFunc ) on_rebase_pointer , & ctx )"	1951:3:47189:47307	601471	0	True				
ANR	601602	CallExpression	"iterate_rebase_list ( obj -> cache_buf , obj -> rebase_info -> multiplier , start , ( ROnRebaseFunc ) on_rebase_pointer , & ctx )"		601471	0					
ANR	601603	Callee	iterate_rebase_list		601471	0					
ANR	601604	Identifier	iterate_rebase_list		601471	0					
ANR	601605	ArgumentList	obj -> cache_buf		601471	1					
ANR	601606	Argument	obj -> cache_buf		601471	0					
ANR	601607	PtrMemberAccess	obj -> cache_buf		601471	0					
ANR	601608	Identifier	obj		601471	0					
ANR	601609	Identifier	cache_buf		601471	1					
ANR	601610	Argument	obj -> rebase_info -> multiplier		601471	1					
ANR	601611	PtrMemberAccess	obj -> rebase_info -> multiplier		601471	0					
ANR	601612	PtrMemberAccess	obj -> rebase_info		601471	0					
ANR	601613	Identifier	obj		601471	0					
ANR	601614	Identifier	rebase_info		601471	1					
ANR	601615	Identifier	multiplier		601471	1					
ANR	601616	Argument	start		601471	2					
ANR	601617	Identifier	start		601471	0					
ANR	601618	Argument	( ROnRebaseFunc ) on_rebase_pointer		601471	3					
ANR	601619	CastExpression	( ROnRebaseFunc ) on_rebase_pointer		601471	0					
ANR	601620	CastTarget	ROnRebaseFunc		601471	0					
ANR	601621	Identifier	on_rebase_pointer		601471	1					
ANR	601622	Argument	& ctx		601471	4					
ANR	601623	UnaryOperationExpression	& ctx		601471	0					
ANR	601624	UnaryOperator	&		601471	0					
ANR	601625	Identifier	ctx		601471	1					
ANR	601626	ExpressionStatement	obj -> rebasing_buffer = false	1956:1:47318:47346	601471	12	True				
ANR	601627	AssignmentExpression	obj -> rebasing_buffer = false		601471	0		=			
ANR	601628	PtrMemberAccess	obj -> rebasing_buffer		601471	0					
ANR	601629	Identifier	obj		601471	0					
ANR	601630	Identifier	rebasing_buffer		601471	1					
ANR	601631	Identifier	false		601471	1					
ANR	601632	ReturnType	static void		601471	1					
ANR	601633	Identifier	rebase_buffer		601471	2					
ANR	601634	ParameterList	"RKernelCacheObj * obj , RIO * io , RIODesc * fd , ut8 * buf , int count"		601471	3					
ANR	601635	Parameter	RKernelCacheObj * obj	1930:26:46696:46715	601471	0	True				
ANR	601636	ParameterType	RKernelCacheObj *		601471	0					
ANR	601637	Identifier	obj		601471	1					
ANR	601638	Parameter	RIO * io	1930:48:46718:46724	601471	1	True				
ANR	601639	ParameterType	RIO *		601471	0					
ANR	601640	Identifier	io		601471	1					
ANR	601641	Parameter	RIODesc * fd	1930:57:46727:46737	601471	2	True				
ANR	601642	ParameterType	RIODesc *		601471	0					
ANR	601643	Identifier	fd		601471	1					
ANR	601644	Parameter	ut8 * buf	1930:70:46740:46747	601471	3	True				
ANR	601645	ParameterType	ut8 *		601471	0					
ANR	601646	Identifier	buf		601471	1					
ANR	601647	Parameter	int count	1930:80:46750:46758	601471	4	True				
ANR	601648	ParameterType	int		601471	0					
ANR	601649	Identifier	count		601471	1					
ANR	601650	CFGEntryNode	ENTRY		601471		True				
ANR	601651	CFGExitNode	EXIT		601471		True				
ANR	601652	Symbol	io -> off		601471						
ANR	601653	Symbol	& ctx		601471						
ANR	601654	Symbol	* * obj		601471						
ANR	601655	Symbol	obj -> rebase_info -> ranges [ i ] . size		601471						
ANR	601656	Symbol	obj -> rebase_info -> ranges [ i ] . offset		601471						
ANR	601657	Symbol	* io		601471						
ANR	601658	Symbol	* obj -> rebase_info -> ranges		601471						
ANR	601659	Symbol	ctx . obj		601471						
ANR	601660	Symbol	ctx . eob		601471						
ANR	601661	Symbol	obj -> cache_buf		601471						
ANR	601662	Symbol	ctx . buf		601471						
ANR	601663	Symbol	obj -> rebase_info -> ranges		601471						
ANR	601664	Symbol	ctx . off		601471						
ANR	601665	Symbol	end		601471						
ANR	601666	Symbol	* obj		601471						
ANR	601667	Symbol	io		601471						
ANR	601668	Symbol	ctx		601471						
ANR	601669	Symbol	count		601471						
ANR	601670	Symbol	start		601471						
ANR	601671	Symbol	false		601471						
ANR	601672	Symbol	i		601471						
ANR	601673	Symbol	on_rebase_pointer		601471						
ANR	601674	Symbol	obj -> rebase_info -> multiplier		601471						
ANR	601675	Symbol	obj -> rebasing_buffer		601471						
ANR	601676	Symbol	obj -> rebase_info		601471						
ANR	601677	Symbol	off		601471						
ANR	601678	Symbol	* obj -> rebase_info		601471						
ANR	601679	Symbol	buf		601471						
ANR	601680	Symbol	* i		601471						
ANR	601681	Symbol	* * * obj		601471						
ANR	601682	Symbol	obj		601471						
ANR	601683	Symbol	ctx . count		601471						
ANR	601684	Symbol	* * obj -> rebase_info		601471						
ANR	601685	Symbol	true		601471						
ANR	601686	Symbol	eob		601471						
ANR	601687	Symbol	obj -> rebase_info -> n_ranges		601471						
ANR	601688	Symbol	fd		601471						
ANR	601689	Function	on_rebase_pointer	1959:0:47351:47773							
ANR	601690	FunctionDef	"on_rebase_pointer (ut64 offset , ut64 decorated_addr , RRebaseCtx * ctx)"		601689	0					
ANR	601691	CompoundStatement		1959:82:47433:47773	601689	0					
ANR	601692	IfStatement	if ( offset < ctx -> off )		601689	0					
ANR	601693	Condition	offset < ctx -> off	1960:5:47440:47456	601689	0	True				
ANR	601694	RelationalExpression	offset < ctx -> off		601689	0		<			
ANR	601695	Identifier	offset		601689	0					
ANR	601696	PtrMemberAccess	ctx -> off		601689	1					
ANR	601697	Identifier	ctx		601689	0					
ANR	601698	Identifier	off		601689	1					
ANR	601699	CompoundStatement		2:24:25:25	601689	1					
ANR	601700	ReturnStatement	return true ;	1961:2:47463:47474	601689	0	True				
ANR	601701	Identifier	true		601689	0					
ANR	601702	IfStatement	if ( offset >= ctx -> eob )		601689	1					
ANR	601703	Condition	offset >= ctx -> eob	1963:5:47484:47501	601689	0	True				
ANR	601704	RelationalExpression	offset >= ctx -> eob		601689	0		>=			
ANR	601705	Identifier	offset		601689	0					
ANR	601706	PtrMemberAccess	ctx -> eob		601689	1					
ANR	601707	Identifier	ctx		601689	0					
ANR	601708	Identifier	eob		601689	1					
ANR	601709	CompoundStatement		5:25:70:70	601689	1					
ANR	601710	ReturnStatement	return false ;	1964:2:47508:47520	601689	0	True				
ANR	601711	Identifier	false		601689	0					
ANR	601712	IdentifierDeclStatement	ut64 in_buf = offset - ctx -> off ;	1966:1:47526:47557	601689	2	True				
ANR	601713	IdentifierDecl	in_buf = offset - ctx -> off		601689	0					
ANR	601714	IdentifierDeclType	ut64		601689	0					
ANR	601715	Identifier	in_buf		601689	1					
ANR	601716	AssignmentExpression	in_buf = offset - ctx -> off		601689	2		=			
ANR	601717	Identifier	in_buf		601689	0					
ANR	601718	AdditiveExpression	offset - ctx -> off		601689	1		-			
ANR	601719	Identifier	offset		601689	0					
ANR	601720	PtrMemberAccess	ctx -> off		601689	1					
ANR	601721	Identifier	ctx		601689	0					
ANR	601722	Identifier	off		601689	1					
ANR	601723	IfStatement	if ( in_buf >= ctx -> count || ( in_buf + 8 ) > ctx -> count )		601689	3					
ANR	601724	Condition	in_buf >= ctx -> count || ( in_buf + 8 ) > ctx -> count	1967:5:47564:47612	601689	0	True				
ANR	601725	OrExpression	in_buf >= ctx -> count || ( in_buf + 8 ) > ctx -> count		601689	0		||			
ANR	601726	RelationalExpression	in_buf >= ctx -> count		601689	0		>=			
ANR	601727	Identifier	in_buf		601689	0					
ANR	601728	PtrMemberAccess	ctx -> count		601689	1					
ANR	601729	Identifier	ctx		601689	0					
ANR	601730	Identifier	count		601689	1					
ANR	601731	RelationalExpression	( in_buf + 8 ) > ctx -> count		601689	1		>			
ANR	601732	AdditiveExpression	in_buf + 8		601689	0		+			
ANR	601733	Identifier	in_buf		601689	0					
ANR	601734	PrimaryExpression	8		601689	1					
ANR	601735	PtrMemberAccess	ctx -> count		601689	1					
ANR	601736	Identifier	ctx		601689	0					
ANR	601737	Identifier	count		601689	1					
ANR	601738	CompoundStatement		9:56:181:181	601689	1					
ANR	601739	ReturnStatement	return false ;	1968:2:47619:47631	601689	0	True				
ANR	601740	Identifier	false		601689	0					
ANR	601741	IdentifierDeclStatement	RParsedPointer ptr ;	1971:1:47638:47656	601689	4	True				
ANR	601742	IdentifierDecl	ptr		601689	0					
ANR	601743	IdentifierDeclType	RParsedPointer		601689	0					
ANR	601744	Identifier	ptr		601689	1					
ANR	601745	ExpressionStatement	"r_parse_pointer ( & ptr , decorated_addr , ctx -> obj )"	1972:1:47659:47707	601689	5	True				
ANR	601746	CallExpression	"r_parse_pointer ( & ptr , decorated_addr , ctx -> obj )"		601689	0					
ANR	601747	Callee	r_parse_pointer		601689	0					
ANR	601748	Identifier	r_parse_pointer		601689	0					
ANR	601749	ArgumentList	& ptr		601689	1					
ANR	601750	Argument	& ptr		601689	0					
ANR	601751	UnaryOperationExpression	& ptr		601689	0					
ANR	601752	UnaryOperator	&		601689	0					
ANR	601753	Identifier	ptr		601689	1					
ANR	601754	Argument	decorated_addr		601689	1					
ANR	601755	Identifier	decorated_addr		601689	0					
ANR	601756	Argument	ctx -> obj		601689	2					
ANR	601757	PtrMemberAccess	ctx -> obj		601689	0					
ANR	601758	Identifier	ctx		601689	0					
ANR	601759	Identifier	obj		601689	1					
ANR	601760	ExpressionStatement	"r_write_le64 ( & ctx -> buf [ in_buf ] , ptr . address )"	1974:1:47711:47756	601689	6	True				
ANR	601761	CallExpression	"r_write_le64 ( & ctx -> buf [ in_buf ] , ptr . address )"		601689	0					
ANR	601762	Callee	r_write_le64		601689	0					
ANR	601763	Identifier	r_write_le64		601689	0					
ANR	601764	ArgumentList	& ctx -> buf [ in_buf ]		601689	1					
ANR	601765	Argument	& ctx -> buf [ in_buf ]		601689	0					
ANR	601766	UnaryOperationExpression	& ctx -> buf [ in_buf ]		601689	0					
ANR	601767	UnaryOperator	&		601689	0					
ANR	601768	ArrayIndexing	ctx -> buf [ in_buf ]		601689	1					
ANR	601769	PtrMemberAccess	ctx -> buf		601689	0					
ANR	601770	Identifier	ctx		601689	0					
ANR	601771	Identifier	buf		601689	1					
ANR	601772	Identifier	in_buf		601689	1					
ANR	601773	Argument	ptr . address		601689	1					
ANR	601774	MemberAccess	ptr . address		601689	0					
ANR	601775	Identifier	ptr		601689	0					
ANR	601776	Identifier	address		601689	1					
ANR	601777	ReturnStatement	return true ;	1976:1:47760:47771	601689	7	True				
ANR	601778	Identifier	true		601689	0					
ANR	601779	ReturnType	static bool		601689	1					
ANR	601780	Identifier	on_rebase_pointer		601689	2					
ANR	601781	ParameterList	"ut64 offset , ut64 decorated_addr , RRebaseCtx * ctx"		601689	3					
ANR	601782	Parameter	ut64 offset	1959:31:47382:47392	601689	0	True				
ANR	601783	ParameterType	ut64		601689	0					
ANR	601784	Identifier	offset		601689	1					
ANR	601785	Parameter	ut64 decorated_addr	1959:44:47395:47413	601689	1	True				
ANR	601786	ParameterType	ut64		601689	0					
ANR	601787	Identifier	decorated_addr		601689	1					
ANR	601788	Parameter	RRebaseCtx * ctx	1959:65:47416:47430	601689	2	True				
ANR	601789	ParameterType	RRebaseCtx *		601689	0					
ANR	601790	Identifier	ctx		601689	1					
ANR	601791	CFGEntryNode	ENTRY		601689		True				
ANR	601792	CFGExitNode	EXIT		601689		True				
ANR	601793	Symbol	ctx -> obj		601689						
ANR	601794	Symbol	ctx -> eob		601689						
ANR	601795	Symbol	offset		601689						
ANR	601796	Symbol	decorated_addr		601689						
ANR	601797	Symbol	ctx		601689						
ANR	601798	Symbol	false		601689						
ANR	601799	Symbol	* ctx		601689						
ANR	601800	Symbol	ptr		601689						
ANR	601801	Symbol	ptr . address		601689						
ANR	601802	Symbol	ctx -> count		601689						
ANR	601803	Symbol	& ptr		601689						
ANR	601804	Symbol	ctx -> off		601689						
ANR	601805	Symbol	true		601689						
ANR	601806	Symbol	ctx -> buf		601689						
ANR	601807	Symbol	in_buf		601689						
ANR	601808	Function	r_parse_pointer	1979:0:47776:48470							
ANR	601809	FunctionDef	"r_parse_pointer (RParsedPointer * ptr , ut64 decorated_addr , RKernelCacheObj * obj)"		601808	0					
ANR	601810	CompoundStatement		1979:92:47868:48470	601808	0					
ANR	601811	Statement	if	1985:1:48000:48001	601808	0	True				
ANR	601812	Statement	(	1985:4:48003:48003	601808	1	True				
ANR	601813	Statement	(	1985:5:48004:48004	601808	2	True				
ANR	601814	Statement	decorated_addr	1985:6:48005:48018	601808	3	True				
ANR	601815	Statement	&	1985:21:48020:48020	601808	4	True				
ANR	601816	Statement	0x4000000000000000L	1985:23:48022:48040	601808	5	True				
ANR	601817	Statement	L	1985:42:48041:48041	601808	6	True				
ANR	601818	Statement	)	1985:43:48042:48042	601808	7	True				
ANR	601819	Statement	==	1985:45:48044:48045	601808	8	True				
ANR	601820	Statement	0	1985:48:48047:48047	601808	9	True				
ANR	601821	Statement	&&	1985:50:48049:48050	601808	10	True				
ANR	601822	Statement	obj	1985:53:48052:48054	601808	11	True				
ANR	601823	Statement	->	1985:56:48055:48056	601808	12	True				
ANR	601824	Statement	rebase_info	1985:58:48057:48067	601808	13	True				
ANR	601825	Statement	)	1985:69:48068:48068	601808	14	True				
ANR	601826	ReturnType	static bool		601808	1					
ANR	601827	Identifier	r_parse_pointer		601808	2					
ANR	601828	ParameterList	"RParsedPointer * ptr , ut64 decorated_addr , RKernelCacheObj * obj"		601808	3					
ANR	601829	Parameter	RParsedPointer * ptr	1979:28:47804:47822	601808	0	True				
ANR	601830	ParameterType	RParsedPointer *		601808	0					
ANR	601831	Identifier	ptr		601808	1					
ANR	601832	Parameter	ut64 decorated_addr	1979:49:47825:47843	601808	1	True				
ANR	601833	ParameterType	ut64		601808	0					
ANR	601834	Identifier	decorated_addr		601808	1					
ANR	601835	Parameter	RKernelCacheObj * obj	1979:70:47846:47865	601808	2	True				
ANR	601836	ParameterType	RKernelCacheObj *		601808	0					
ANR	601837	Identifier	obj		601808	1					
ANR	601838	CFGEntryNode	ENTRY		601808		True				
ANR	601839	CFGExitNode	EXIT		601808		True				
ANR	601840	Symbol	decorated_addr		601808						
ANR	601841	Symbol	obj		601808						
ANR	601842	Symbol	ptr		601808						
ANR	601843	DeclStmt									
ANR	601844	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_xnu_kernelcache
ANR	601845	DeclStmt									
ANR	601846	Decl							RLibStruct	RLibStruct	radare_plugin
