command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1540108	File	data/converged/CVE-2019-16718~_radare2/hack.c								
ANR	1540109	Function	r_core_hack_help	10:0:241:1080							
ANR	1540110	FunctionDef	r_core_hack_help (const RCore * core)		1540109	0					
ANR	1540111	CompoundStatement		10:41:282:1080	1540109	0					
ANR	1540112	IdentifierDeclStatement	"const char * help_msg [ ] = { ""wao"" , "" [op]"" , ""performs a modification on current opcode"" , ""wao"" , "" nop"" , ""nop current opcode"" , ""wao"" , "" jinf"" , ""assemble an infinite loop"" , ""wao"" , "" jz"" , ""make current opcode conditional (zero)"" , ""wao"" , "" jnz"" , ""make current opcode conditional (not zero)"" , ""wao"" , "" ret1"" , ""make the current opcode return 1"" , ""wao"" , "" ret0"" , ""make the current opcode return 0"" , ""wao"" , "" retn"" , ""make the current opcode return -1"" , ""wao"" , "" nocj"" , ""remove conditional operation from branch (make it unconditional)"" , ""wao"" , "" trap"" , ""make the current opcode a trap"" , ""wao"" , "" recj"" , ""reverse (swap) conditional branch instruction"" , ""WIP:"" , """" , ""not all archs are supported and not all commands work on all archs"" , NULL } ;"	11:1:285:1043	1540109	0	True				
ANR	1540113	IdentifierDecl	"* help_msg [ ] = { ""wao"" , "" [op]"" , ""performs a modification on current opcode"" , ""wao"" , "" nop"" , ""nop current opcode"" , ""wao"" , "" jinf"" , ""assemble an infinite loop"" , ""wao"" , "" jz"" , ""make current opcode conditional (zero)"" , ""wao"" , "" jnz"" , ""make current opcode conditional (not zero)"" , ""wao"" , "" ret1"" , ""make the current opcode return 1"" , ""wao"" , "" ret0"" , ""make the current opcode return 0"" , ""wao"" , "" retn"" , ""make the current opcode return -1"" , ""wao"" , "" nocj"" , ""remove conditional operation from branch (make it unconditional)"" , ""wao"" , "" trap"" , ""make the current opcode a trap"" , ""wao"" , "" recj"" , ""reverse (swap) conditional branch instruction"" , ""WIP:"" , """" , ""not all archs are supported and not all commands work on all archs"" , NULL }"		1540109	0					
ANR	1540114	IdentifierDeclType	const char * [ ]		1540109	0					
ANR	1540115	Identifier	help_msg		1540109	1					
ANR	1540116	AssignmentExpression	"* help_msg [ ] = { ""wao"" , "" [op]"" , ""performs a modification on current opcode"" , ""wao"" , "" nop"" , ""nop current opcode"" , ""wao"" , "" jinf"" , ""assemble an infinite loop"" , ""wao"" , "" jz"" , ""make current opcode conditional (zero)"" , ""wao"" , "" jnz"" , ""make current opcode conditional (not zero)"" , ""wao"" , "" ret1"" , ""make the current opcode return 1"" , ""wao"" , "" ret0"" , ""make the current opcode return 0"" , ""wao"" , "" retn"" , ""make the current opcode return -1"" , ""wao"" , "" nocj"" , ""remove conditional operation from branch (make it unconditional)"" , ""wao"" , "" trap"" , ""make the current opcode a trap"" , ""wao"" , "" recj"" , ""reverse (swap) conditional branch instruction"" , ""WIP:"" , """" , ""not all archs are supported and not all commands work on all archs"" , NULL }"		1540109	2		=			
ANR	1540117	Identifier	help_msg		1540109	0					
ANR	1540118	InitializerList	"""wao"""		1540109	1					
ANR	1540119	PrimaryExpression	"""wao"""		1540109	0					
ANR	1540120	PrimaryExpression	""" [op]"""		1540109	1					
ANR	1540121	PrimaryExpression	"""performs a modification on current opcode"""		1540109	2					
ANR	1540122	PrimaryExpression	"""wao"""		1540109	3					
ANR	1540123	PrimaryExpression	""" nop"""		1540109	4					
ANR	1540124	PrimaryExpression	"""nop current opcode"""		1540109	5					
ANR	1540125	PrimaryExpression	"""wao"""		1540109	6					
ANR	1540126	PrimaryExpression	""" jinf"""		1540109	7					
ANR	1540127	PrimaryExpression	"""assemble an infinite loop"""		1540109	8					
ANR	1540128	PrimaryExpression	"""wao"""		1540109	9					
ANR	1540129	PrimaryExpression	""" jz"""		1540109	10					
ANR	1540130	PrimaryExpression	"""make current opcode conditional (zero)"""		1540109	11					
ANR	1540131	PrimaryExpression	"""wao"""		1540109	12					
ANR	1540132	PrimaryExpression	""" jnz"""		1540109	13					
ANR	1540133	PrimaryExpression	"""make current opcode conditional (not zero)"""		1540109	14					
ANR	1540134	PrimaryExpression	"""wao"""		1540109	15					
ANR	1540135	PrimaryExpression	""" ret1"""		1540109	16					
ANR	1540136	PrimaryExpression	"""make the current opcode return 1"""		1540109	17					
ANR	1540137	PrimaryExpression	"""wao"""		1540109	18					
ANR	1540138	PrimaryExpression	""" ret0"""		1540109	19					
ANR	1540139	PrimaryExpression	"""make the current opcode return 0"""		1540109	20					
ANR	1540140	PrimaryExpression	"""wao"""		1540109	21					
ANR	1540141	PrimaryExpression	""" retn"""		1540109	22					
ANR	1540142	PrimaryExpression	"""make the current opcode return -1"""		1540109	23					
ANR	1540143	PrimaryExpression	"""wao"""		1540109	24					
ANR	1540144	PrimaryExpression	""" nocj"""		1540109	25					
ANR	1540145	PrimaryExpression	"""remove conditional operation from branch (make it unconditional)"""		1540109	26					
ANR	1540146	PrimaryExpression	"""wao"""		1540109	27					
ANR	1540147	PrimaryExpression	""" trap"""		1540109	28					
ANR	1540148	PrimaryExpression	"""make the current opcode a trap"""		1540109	29					
ANR	1540149	PrimaryExpression	"""wao"""		1540109	30					
ANR	1540150	PrimaryExpression	""" recj"""		1540109	31					
ANR	1540151	PrimaryExpression	"""reverse (swap) conditional branch instruction"""		1540109	32					
ANR	1540152	PrimaryExpression	"""WIP:"""		1540109	33					
ANR	1540153	PrimaryExpression	""""""		1540109	34					
ANR	1540154	PrimaryExpression	"""not all archs are supported and not all commands work on all archs"""		1540109	35					
ANR	1540155	Identifier	NULL		1540109	36					
ANR	1540156	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	26:1:1046:1078	1540109	1	True				
ANR	1540157	CallExpression	"r_core_cmd_help ( core , help_msg )"		1540109	0					
ANR	1540158	Callee	r_core_cmd_help		1540109	0					
ANR	1540159	Identifier	r_core_cmd_help		1540109	0					
ANR	1540160	ArgumentList	core		1540109	1					
ANR	1540161	Argument	core		1540109	0					
ANR	1540162	Identifier	core		1540109	0					
ANR	1540163	Argument	help_msg		1540109	1					
ANR	1540164	Identifier	help_msg		1540109	0					
ANR	1540165	ReturnType	void		1540109	1					
ANR	1540166	Identifier	r_core_hack_help		1540109	2					
ANR	1540167	ParameterList	const RCore * core		1540109	3					
ANR	1540168	Parameter	const RCore * core	10:22:263:279	1540109	0	True				
ANR	1540169	ParameterType	const RCore *		1540109	0					
ANR	1540170	Identifier	core		1540109	1					
ANR	1540171	CFGEntryNode	ENTRY		1540109		True				
ANR	1540172	CFGExitNode	EXIT		1540109		True				
ANR	1540173	Symbol	core		1540109						
ANR	1540174	Symbol	help_msg		1540109						
ANR	1540175	Symbol	NULL		1540109						
ANR	1540176	Function	r_core_hack_dalvik	29:0:1083:1598							
ANR	1540177	FunctionDef	"r_core_hack_dalvik (RCore * core , const char * op , const RAnalOp * analop)"		1540176	0					
ANR	1540178	CompoundStatement		29:82:1165:1598	1540176	0					
ANR	1540179	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		1540176	0					
ANR	1540180	Condition	"! strcmp ( op , ""nop"" )"	30:5:1172:1190	1540176	0	True				
ANR	1540181	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		1540176	0					
ANR	1540182	UnaryOperator	!		1540176	0					
ANR	1540183	CallExpression	"strcmp ( op , ""nop"" )"		1540176	1					
ANR	1540184	Callee	strcmp		1540176	0					
ANR	1540185	Identifier	strcmp		1540176	0					
ANR	1540186	ArgumentList	op		1540176	1					
ANR	1540187	Argument	op		1540176	0					
ANR	1540188	Identifier	op		1540176	0					
ANR	1540189	Argument	"""nop"""		1540176	1					
ANR	1540190	PrimaryExpression	"""nop"""		1540176	0					
ANR	1540191	CompoundStatement		2:26:27:27	1540176	1					
ANR	1540192	ExpressionStatement	"r_core_cmdf ( core , ""wx 0000"" )"	31:2:1197:1226	1540176	0	True				
ANR	1540193	CallExpression	"r_core_cmdf ( core , ""wx 0000"" )"		1540176	0					
ANR	1540194	Callee	r_core_cmdf		1540176	0					
ANR	1540195	Identifier	r_core_cmdf		1540176	0					
ANR	1540196	ArgumentList	core		1540176	1					
ANR	1540197	Argument	core		1540176	0					
ANR	1540198	Identifier	core		1540176	0					
ANR	1540199	Argument	"""wx 0000"""		1540176	1					
ANR	1540200	PrimaryExpression	"""wx 0000"""		1540176	0					
ANR	1540201	ElseStatement	else		1540176	0					
ANR	1540202	IfStatement	"if ( ! strcmp ( op , ""ret2"" ) )"		1540176	0					
ANR	1540203	Condition	"! strcmp ( op , ""ret2"" )"	32:12:1240:1259	1540176	0	True				
ANR	1540204	UnaryOperationExpression	"! strcmp ( op , ""ret2"" )"		1540176	0					
ANR	1540205	UnaryOperator	!		1540176	0					
ANR	1540206	CallExpression	"strcmp ( op , ""ret2"" )"		1540176	1					
ANR	1540207	Callee	strcmp		1540176	0					
ANR	1540208	Identifier	strcmp		1540176	0					
ANR	1540209	ArgumentList	op		1540176	1					
ANR	1540210	Argument	op		1540176	0					
ANR	1540211	Identifier	op		1540176	0					
ANR	1540212	Argument	"""ret2"""		1540176	1					
ANR	1540213	PrimaryExpression	"""ret2"""		1540176	0					
ANR	1540214	CompoundStatement		4:34:96:96	1540176	1					
ANR	1540215	ExpressionStatement	"r_core_cmdf ( core , ""wx 12200f00"" )"	33:2:1266:1299	1540176	0	True				
ANR	1540216	CallExpression	"r_core_cmdf ( core , ""wx 12200f00"" )"		1540176	0					
ANR	1540217	Callee	r_core_cmdf		1540176	0					
ANR	1540218	Identifier	r_core_cmdf		1540176	0					
ANR	1540219	ArgumentList	core		1540176	1					
ANR	1540220	Argument	core		1540176	0					
ANR	1540221	Identifier	core		1540176	0					
ANR	1540222	Argument	"""wx 12200f00"""		1540176	1					
ANR	1540223	PrimaryExpression	"""wx 12200f00"""		1540176	0					
ANR	1540224	ElseStatement	else		1540176	0					
ANR	1540225	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		1540176	0					
ANR	1540226	Condition	"! strcmp ( op , ""ret1"" )"	34:12:1333:1352	1540176	0	True				
ANR	1540227	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		1540176	0					
ANR	1540228	UnaryOperator	!		1540176	0					
ANR	1540229	CallExpression	"strcmp ( op , ""ret1"" )"		1540176	1					
ANR	1540230	Callee	strcmp		1540176	0					
ANR	1540231	Identifier	strcmp		1540176	0					
ANR	1540232	ArgumentList	op		1540176	1					
ANR	1540233	Argument	op		1540176	0					
ANR	1540234	Identifier	op		1540176	0					
ANR	1540235	Argument	"""ret1"""		1540176	1					
ANR	1540236	PrimaryExpression	"""ret1"""		1540176	0					
ANR	1540237	CompoundStatement		6:34:189:189	1540176	1					
ANR	1540238	ExpressionStatement	"r_core_cmdf ( core , ""wx 12100f00"" )"	35:2:1359:1392	1540176	0	True				
ANR	1540239	CallExpression	"r_core_cmdf ( core , ""wx 12100f00"" )"		1540176	0					
ANR	1540240	Callee	r_core_cmdf		1540176	0					
ANR	1540241	Identifier	r_core_cmdf		1540176	0					
ANR	1540242	ArgumentList	core		1540176	1					
ANR	1540243	Argument	core		1540176	0					
ANR	1540244	Identifier	core		1540176	0					
ANR	1540245	Argument	"""wx 12100f00"""		1540176	1					
ANR	1540246	PrimaryExpression	"""wx 12100f00"""		1540176	0					
ANR	1540247	ElseStatement	else		1540176	0					
ANR	1540248	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		1540176	0					
ANR	1540249	Condition	"! strcmp ( op , ""ret0"" )"	36:12:1426:1445	1540176	0	True				
ANR	1540250	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		1540176	0					
ANR	1540251	UnaryOperator	!		1540176	0					
ANR	1540252	CallExpression	"strcmp ( op , ""ret0"" )"		1540176	1					
ANR	1540253	Callee	strcmp		1540176	0					
ANR	1540254	Identifier	strcmp		1540176	0					
ANR	1540255	ArgumentList	op		1540176	1					
ANR	1540256	Argument	op		1540176	0					
ANR	1540257	Identifier	op		1540176	0					
ANR	1540258	Argument	"""ret0"""		1540176	1					
ANR	1540259	PrimaryExpression	"""ret0"""		1540176	0					
ANR	1540260	CompoundStatement		8:34:282:282	1540176	1					
ANR	1540261	ExpressionStatement	"r_core_cmdf ( core , ""wx 12000f00"" )"	37:2:1452:1485	1540176	0	True				
ANR	1540262	CallExpression	"r_core_cmdf ( core , ""wx 12000f00"" )"		1540176	0					
ANR	1540263	Callee	r_core_cmdf		1540176	0					
ANR	1540264	Identifier	r_core_cmdf		1540176	0					
ANR	1540265	ArgumentList	core		1540176	1					
ANR	1540266	Argument	core		1540176	0					
ANR	1540267	Identifier	core		1540176	0					
ANR	1540268	Argument	"""wx 12000f00"""		1540176	1					
ANR	1540269	PrimaryExpression	"""wx 12000f00"""		1540176	0					
ANR	1540270	ElseStatement	else		1540176	0					
ANR	1540271	CompoundStatement		10:8:349:349	1540176	0					
ANR	1540272	ExpressionStatement	"eprintf ( ""Unsupported operation '%s'\\n"" , op )"	39:2:1519:1563	1540176	0	True				
ANR	1540273	CallExpression	"eprintf ( ""Unsupported operation '%s'\\n"" , op )"		1540176	0					
ANR	1540274	Callee	eprintf		1540176	0					
ANR	1540275	Identifier	eprintf		1540176	0					
ANR	1540276	ArgumentList	"""Unsupported operation '%s'\\n"""		1540176	1					
ANR	1540277	Argument	"""Unsupported operation '%s'\\n"""		1540176	0					
ANR	1540278	PrimaryExpression	"""Unsupported operation '%s'\\n"""		1540176	0					
ANR	1540279	Argument	op		1540176	1					
ANR	1540280	Identifier	op		1540176	0					
ANR	1540281	ReturnStatement	return false ;	40:2:1567:1579	1540176	1	True				
ANR	1540282	Identifier	false		1540176	0					
ANR	1540283	ReturnStatement	return true ;	42:1:1585:1596	1540176	1	True				
ANR	1540284	Identifier	true		1540176	0					
ANR	1540285	ReturnType	R_API bool		1540176	1					
ANR	1540286	Identifier	r_core_hack_dalvik		1540176	2					
ANR	1540287	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		1540176	3					
ANR	1540288	Parameter	RCore * core	29:30:1113:1123	1540176	0	True				
ANR	1540289	ParameterType	RCore *		1540176	0					
ANR	1540290	Identifier	core		1540176	1					
ANR	1540291	Parameter	const char * op	29:43:1126:1139	1540176	1	True				
ANR	1540292	ParameterType	const char *		1540176	0					
ANR	1540293	Identifier	op		1540176	1					
ANR	1540294	Parameter	const RAnalOp * analop	29:59:1142:1162	1540176	2	True				
ANR	1540295	ParameterType	const RAnalOp *		1540176	0					
ANR	1540296	Identifier	analop		1540176	1					
ANR	1540297	CFGEntryNode	ENTRY		1540176		True				
ANR	1540298	CFGExitNode	EXIT		1540176		True				
ANR	1540299	Symbol	strcmp		1540176						
ANR	1540300	Symbol	core		1540176						
ANR	1540301	Symbol	op		1540176						
ANR	1540302	Symbol	analop		1540176						
ANR	1540303	Symbol	false		1540176						
ANR	1540304	Symbol	true		1540176						
ANR	1540305	Function	r_core_hack_arm64	45:0:1601:2666							
ANR	1540306	FunctionDef	"r_core_hack_arm64 (RCore * core , const char * op , const RAnalOp * analop)"		1540305	0					
ANR	1540307	CompoundStatement		45:81:1682:2666	1540305	0					
ANR	1540308	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		1540305	0					
ANR	1540309	Condition	"! strcmp ( op , ""nop"" )"	46:5:1689:1707	1540305	0	True				
ANR	1540310	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		1540305	0					
ANR	1540311	UnaryOperator	!		1540305	0					
ANR	1540312	CallExpression	"strcmp ( op , ""nop"" )"		1540305	1					
ANR	1540313	Callee	strcmp		1540305	0					
ANR	1540314	Identifier	strcmp		1540305	0					
ANR	1540315	ArgumentList	op		1540305	1					
ANR	1540316	Argument	op		1540305	0					
ANR	1540317	Identifier	op		1540305	0					
ANR	1540318	Argument	"""nop"""		1540305	1					
ANR	1540319	PrimaryExpression	"""nop"""		1540305	0					
ANR	1540320	CompoundStatement		2:26:27:27	1540305	1					
ANR	1540321	ExpressionStatement	"r_core_cmdf ( core , ""wx 1f2003d5"" )"	47:2:1714:1747	1540305	0	True				
ANR	1540322	CallExpression	"r_core_cmdf ( core , ""wx 1f2003d5"" )"		1540305	0					
ANR	1540323	Callee	r_core_cmdf		1540305	0					
ANR	1540324	Identifier	r_core_cmdf		1540305	0					
ANR	1540325	ArgumentList	core		1540305	1					
ANR	1540326	Argument	core		1540305	0					
ANR	1540327	Identifier	core		1540305	0					
ANR	1540328	Argument	"""wx 1f2003d5"""		1540305	1					
ANR	1540329	PrimaryExpression	"""wx 1f2003d5"""		1540305	0					
ANR	1540330	ElseStatement	else		1540305	0					
ANR	1540331	IfStatement	"if ( ! strcmp ( op , ""ret"" ) )"		1540305	0					
ANR	1540332	Condition	"! strcmp ( op , ""ret"" )"	48:12:1761:1779	1540305	0	True				
ANR	1540333	UnaryOperationExpression	"! strcmp ( op , ""ret"" )"		1540305	0					
ANR	1540334	UnaryOperator	!		1540305	0					
ANR	1540335	CallExpression	"strcmp ( op , ""ret"" )"		1540305	1					
ANR	1540336	Callee	strcmp		1540305	0					
ANR	1540337	Identifier	strcmp		1540305	0					
ANR	1540338	ArgumentList	op		1540305	1					
ANR	1540339	Argument	op		1540305	0					
ANR	1540340	Identifier	op		1540305	0					
ANR	1540341	Argument	"""ret"""		1540305	1					
ANR	1540342	PrimaryExpression	"""ret"""		1540305	0					
ANR	1540343	CompoundStatement		4:33:99:99	1540305	1					
ANR	1540344	ExpressionStatement	"r_core_cmdf ( core , ""wx c0035fd6t"" )"	49:2:1786:1820	1540305	0	True				
ANR	1540345	CallExpression	"r_core_cmdf ( core , ""wx c0035fd6t"" )"		1540305	0					
ANR	1540346	Callee	r_core_cmdf		1540305	0					
ANR	1540347	Identifier	r_core_cmdf		1540305	0					
ANR	1540348	ArgumentList	core		1540305	1					
ANR	1540349	Argument	core		1540305	0					
ANR	1540350	Identifier	core		1540305	0					
ANR	1540351	Argument	"""wx c0035fd6t"""		1540305	1					
ANR	1540352	PrimaryExpression	"""wx c0035fd6t"""		1540305	0					
ANR	1540353	ElseStatement	else		1540305	0					
ANR	1540354	IfStatement	"if ( ! strcmp ( op , ""trap"" ) )"		1540305	0					
ANR	1540355	Condition	"! strcmp ( op , ""trap"" )"	50:12:1834:1853	1540305	0	True				
ANR	1540356	UnaryOperationExpression	"! strcmp ( op , ""trap"" )"		1540305	0					
ANR	1540357	UnaryOperator	!		1540305	0					
ANR	1540358	CallExpression	"strcmp ( op , ""trap"" )"		1540305	1					
ANR	1540359	Callee	strcmp		1540305	0					
ANR	1540360	Identifier	strcmp		1540305	0					
ANR	1540361	ArgumentList	op		1540305	1					
ANR	1540362	Argument	op		1540305	0					
ANR	1540363	Identifier	op		1540305	0					
ANR	1540364	Argument	"""trap"""		1540305	1					
ANR	1540365	PrimaryExpression	"""trap"""		1540305	0					
ANR	1540366	CompoundStatement		6:34:173:173	1540305	1					
ANR	1540367	ExpressionStatement	"r_core_cmdf ( core , ""wx 000020d4"" )"	51:2:1860:1893	1540305	0	True				
ANR	1540368	CallExpression	"r_core_cmdf ( core , ""wx 000020d4"" )"		1540305	0					
ANR	1540369	Callee	r_core_cmdf		1540305	0					
ANR	1540370	Identifier	r_core_cmdf		1540305	0					
ANR	1540371	ArgumentList	core		1540305	1					
ANR	1540372	Argument	core		1540305	0					
ANR	1540373	Identifier	core		1540305	0					
ANR	1540374	Argument	"""wx 000020d4"""		1540305	1					
ANR	1540375	PrimaryExpression	"""wx 000020d4"""		1540305	0					
ANR	1540376	ElseStatement	else		1540305	0					
ANR	1540377	IfStatement	"if ( ! strcmp ( op , ""jz"" ) )"		1540305	0					
ANR	1540378	Condition	"! strcmp ( op , ""jz"" )"	52:12:1907:1924	1540305	0	True				
ANR	1540379	UnaryOperationExpression	"! strcmp ( op , ""jz"" )"		1540305	0					
ANR	1540380	UnaryOperator	!		1540305	0					
ANR	1540381	CallExpression	"strcmp ( op , ""jz"" )"		1540305	1					
ANR	1540382	Callee	strcmp		1540305	0					
ANR	1540383	Identifier	strcmp		1540305	0					
ANR	1540384	ArgumentList	op		1540305	1					
ANR	1540385	Argument	op		1540305	0					
ANR	1540386	Identifier	op		1540305	0					
ANR	1540387	Argument	"""jz"""		1540305	1					
ANR	1540388	PrimaryExpression	"""jz"""		1540305	0					
ANR	1540389	CompoundStatement		8:32:244:244	1540305	1					
ANR	1540390	ExpressionStatement	"eprintf ( ""ARM jz hack not supported\\n"" )"	53:2:1931:1970	1540305	0	True				
ANR	1540391	CallExpression	"eprintf ( ""ARM jz hack not supported\\n"" )"		1540305	0					
ANR	1540392	Callee	eprintf		1540305	0					
ANR	1540393	Identifier	eprintf		1540305	0					
ANR	1540394	ArgumentList	"""ARM jz hack not supported\\n"""		1540305	1					
ANR	1540395	Argument	"""ARM jz hack not supported\\n"""		1540305	0					
ANR	1540396	PrimaryExpression	"""ARM jz hack not supported\\n"""		1540305	0					
ANR	1540397	ReturnStatement	return false ;	54:2:1974:1986	1540305	1	True				
ANR	1540398	Identifier	false		1540305	0					
ANR	1540399	ElseStatement	else		1540305	0					
ANR	1540400	IfStatement	"if ( ! strcmp ( op , ""jinf"" ) )"		1540305	0					
ANR	1540401	Condition	"! strcmp ( op , ""jinf"" )"	55:12:2000:2019	1540305	0	True				
ANR	1540402	UnaryOperationExpression	"! strcmp ( op , ""jinf"" )"		1540305	0					
ANR	1540403	UnaryOperator	!		1540305	0					
ANR	1540404	CallExpression	"strcmp ( op , ""jinf"" )"		1540305	1					
ANR	1540405	Callee	strcmp		1540305	0					
ANR	1540406	Identifier	strcmp		1540305	0					
ANR	1540407	ArgumentList	op		1540305	1					
ANR	1540408	Argument	op		1540305	0					
ANR	1540409	Identifier	op		1540305	0					
ANR	1540410	Argument	"""jinf"""		1540305	1					
ANR	1540411	PrimaryExpression	"""jinf"""		1540305	0					
ANR	1540412	CompoundStatement		11:34:339:339	1540305	1					
ANR	1540413	ExpressionStatement	"r_core_cmdf ( core , ""wx 00000014"" )"	56:2:2026:2059	1540305	0	True				
ANR	1540414	CallExpression	"r_core_cmdf ( core , ""wx 00000014"" )"		1540305	0					
ANR	1540415	Callee	r_core_cmdf		1540305	0					
ANR	1540416	Identifier	r_core_cmdf		1540305	0					
ANR	1540417	ArgumentList	core		1540305	1					
ANR	1540418	Argument	core		1540305	0					
ANR	1540419	Identifier	core		1540305	0					
ANR	1540420	Argument	"""wx 00000014"""		1540305	1					
ANR	1540421	PrimaryExpression	"""wx 00000014"""		1540305	0					
ANR	1540422	ElseStatement	else		1540305	0					
ANR	1540423	IfStatement	"if ( ! strcmp ( op , ""jnz"" ) )"		1540305	0					
ANR	1540424	Condition	"! strcmp ( op , ""jnz"" )"	57:12:2073:2091	1540305	0	True				
ANR	1540425	UnaryOperationExpression	"! strcmp ( op , ""jnz"" )"		1540305	0					
ANR	1540426	UnaryOperator	!		1540305	0					
ANR	1540427	CallExpression	"strcmp ( op , ""jnz"" )"		1540305	1					
ANR	1540428	Callee	strcmp		1540305	0					
ANR	1540429	Identifier	strcmp		1540305	0					
ANR	1540430	ArgumentList	op		1540305	1					
ANR	1540431	Argument	op		1540305	0					
ANR	1540432	Identifier	op		1540305	0					
ANR	1540433	Argument	"""jnz"""		1540305	1					
ANR	1540434	PrimaryExpression	"""jnz"""		1540305	0					
ANR	1540435	CompoundStatement		13:33:411:411	1540305	1					
ANR	1540436	ExpressionStatement	"eprintf ( ""ARM jnz hack not supported\\n"" )"	58:2:2098:2138	1540305	0	True				
ANR	1540437	CallExpression	"eprintf ( ""ARM jnz hack not supported\\n"" )"		1540305	0					
ANR	1540438	Callee	eprintf		1540305	0					
ANR	1540439	Identifier	eprintf		1540305	0					
ANR	1540440	ArgumentList	"""ARM jnz hack not supported\\n"""		1540305	1					
ANR	1540441	Argument	"""ARM jnz hack not supported\\n"""		1540305	0					
ANR	1540442	PrimaryExpression	"""ARM jnz hack not supported\\n"""		1540305	0					
ANR	1540443	ReturnStatement	return false ;	59:2:2142:2154	1540305	1	True				
ANR	1540444	Identifier	false		1540305	0					
ANR	1540445	ElseStatement	else		1540305	0					
ANR	1540446	IfStatement	"if ( ! strcmp ( op , ""nocj"" ) )"		1540305	0					
ANR	1540447	Condition	"! strcmp ( op , ""nocj"" )"	60:12:2168:2187	1540305	0	True				
ANR	1540448	UnaryOperationExpression	"! strcmp ( op , ""nocj"" )"		1540305	0					
ANR	1540449	UnaryOperator	!		1540305	0					
ANR	1540450	CallExpression	"strcmp ( op , ""nocj"" )"		1540305	1					
ANR	1540451	Callee	strcmp		1540305	0					
ANR	1540452	Identifier	strcmp		1540305	0					
ANR	1540453	ArgumentList	op		1540305	1					
ANR	1540454	Argument	op		1540305	0					
ANR	1540455	Identifier	op		1540305	0					
ANR	1540456	Argument	"""nocj"""		1540305	1					
ANR	1540457	PrimaryExpression	"""nocj"""		1540305	0					
ANR	1540458	CompoundStatement		16:34:507:507	1540305	1					
ANR	1540459	ExpressionStatement	"eprintf ( ""ARM jnz hack not supported\\n"" )"	61:2:2194:2234	1540305	0	True				
ANR	1540460	CallExpression	"eprintf ( ""ARM jnz hack not supported\\n"" )"		1540305	0					
ANR	1540461	Callee	eprintf		1540305	0					
ANR	1540462	Identifier	eprintf		1540305	0					
ANR	1540463	ArgumentList	"""ARM jnz hack not supported\\n"""		1540305	1					
ANR	1540464	Argument	"""ARM jnz hack not supported\\n"""		1540305	0					
ANR	1540465	PrimaryExpression	"""ARM jnz hack not supported\\n"""		1540305	0					
ANR	1540466	ReturnStatement	return false ;	62:2:2238:2250	1540305	1	True				
ANR	1540467	Identifier	false		1540305	0					
ANR	1540468	ElseStatement	else		1540305	0					
ANR	1540469	IfStatement	"if ( ! strcmp ( op , ""recj"" ) )"		1540305	0					
ANR	1540470	Condition	"! strcmp ( op , ""recj"" )"	63:12:2264:2283	1540305	0	True				
ANR	1540471	UnaryOperationExpression	"! strcmp ( op , ""recj"" )"		1540305	0					
ANR	1540472	UnaryOperator	!		1540305	0					
ANR	1540473	CallExpression	"strcmp ( op , ""recj"" )"		1540305	1					
ANR	1540474	Callee	strcmp		1540305	0					
ANR	1540475	Identifier	strcmp		1540305	0					
ANR	1540476	ArgumentList	op		1540305	1					
ANR	1540477	Argument	op		1540305	0					
ANR	1540478	Identifier	op		1540305	0					
ANR	1540479	Argument	"""recj"""		1540305	1					
ANR	1540480	PrimaryExpression	"""recj"""		1540305	0					
ANR	1540481	CompoundStatement		19:34:603:603	1540305	1					
ANR	1540482	ExpressionStatement	"eprintf ( ""TODO: use jnz or jz\\n"" )"	64:2:2290:2323	1540305	0	True				
ANR	1540483	CallExpression	"eprintf ( ""TODO: use jnz or jz\\n"" )"		1540305	0					
ANR	1540484	Callee	eprintf		1540305	0					
ANR	1540485	Identifier	eprintf		1540305	0					
ANR	1540486	ArgumentList	"""TODO: use jnz or jz\\n"""		1540305	1					
ANR	1540487	Argument	"""TODO: use jnz or jz\\n"""		1540305	0					
ANR	1540488	PrimaryExpression	"""TODO: use jnz or jz\\n"""		1540305	0					
ANR	1540489	ReturnStatement	return false ;	65:2:2327:2339	1540305	1	True				
ANR	1540490	Identifier	false		1540305	0					
ANR	1540491	ElseStatement	else		1540305	0					
ANR	1540492	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		1540305	0					
ANR	1540493	Condition	"! strcmp ( op , ""ret1"" )"	66:12:2353:2372	1540305	0	True				
ANR	1540494	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		1540305	0					
ANR	1540495	UnaryOperator	!		1540305	0					
ANR	1540496	CallExpression	"strcmp ( op , ""ret1"" )"		1540305	1					
ANR	1540497	Callee	strcmp		1540305	0					
ANR	1540498	Identifier	strcmp		1540305	0					
ANR	1540499	ArgumentList	op		1540305	1					
ANR	1540500	Argument	op		1540305	0					
ANR	1540501	Identifier	op		1540305	0					
ANR	1540502	Argument	"""ret1"""		1540305	1					
ANR	1540503	PrimaryExpression	"""ret1"""		1540305	0					
ANR	1540504	CompoundStatement		22:34:692:692	1540305	1					
ANR	1540505	ExpressionStatement	"r_core_cmdf ( core , ""wa mov x0, 1,,ret"" )"	67:2:2379:2418	1540305	0	True				
ANR	1540506	CallExpression	"r_core_cmdf ( core , ""wa mov x0, 1,,ret"" )"		1540305	0					
ANR	1540507	Callee	r_core_cmdf		1540305	0					
ANR	1540508	Identifier	r_core_cmdf		1540305	0					
ANR	1540509	ArgumentList	core		1540305	1					
ANR	1540510	Argument	core		1540305	0					
ANR	1540511	Identifier	core		1540305	0					
ANR	1540512	Argument	"""wa mov x0, 1,,ret"""		1540305	1					
ANR	1540513	PrimaryExpression	"""wa mov x0, 1,,ret"""		1540305	0					
ANR	1540514	ElseStatement	else		1540305	0					
ANR	1540515	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		1540305	0					
ANR	1540516	Condition	"! strcmp ( op , ""ret0"" )"	68:12:2432:2451	1540305	0	True				
ANR	1540517	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		1540305	0					
ANR	1540518	UnaryOperator	!		1540305	0					
ANR	1540519	CallExpression	"strcmp ( op , ""ret0"" )"		1540305	1					
ANR	1540520	Callee	strcmp		1540305	0					
ANR	1540521	Identifier	strcmp		1540305	0					
ANR	1540522	ArgumentList	op		1540305	1					
ANR	1540523	Argument	op		1540305	0					
ANR	1540524	Identifier	op		1540305	0					
ANR	1540525	Argument	"""ret0"""		1540305	1					
ANR	1540526	PrimaryExpression	"""ret0"""		1540305	0					
ANR	1540527	CompoundStatement		24:34:771:771	1540305	1					
ANR	1540528	ExpressionStatement	"r_core_cmdf ( core , ""wa mov x0, 0,,ret"" )"	69:2:2458:2497	1540305	0	True				
ANR	1540529	CallExpression	"r_core_cmdf ( core , ""wa mov x0, 0,,ret"" )"		1540305	0					
ANR	1540530	Callee	r_core_cmdf		1540305	0					
ANR	1540531	Identifier	r_core_cmdf		1540305	0					
ANR	1540532	ArgumentList	core		1540305	1					
ANR	1540533	Argument	core		1540305	0					
ANR	1540534	Identifier	core		1540305	0					
ANR	1540535	Argument	"""wa mov x0, 0,,ret"""		1540305	1					
ANR	1540536	PrimaryExpression	"""wa mov x0, 0,,ret"""		1540305	0					
ANR	1540537	ElseStatement	else		1540305	0					
ANR	1540538	IfStatement	"if ( ! strcmp ( op , ""retn"" ) )"		1540305	0					
ANR	1540539	Condition	"! strcmp ( op , ""retn"" )"	70:12:2511:2530	1540305	0	True				
ANR	1540540	UnaryOperationExpression	"! strcmp ( op , ""retn"" )"		1540305	0					
ANR	1540541	UnaryOperator	!		1540305	0					
ANR	1540542	CallExpression	"strcmp ( op , ""retn"" )"		1540305	1					
ANR	1540543	Callee	strcmp		1540305	0					
ANR	1540544	Identifier	strcmp		1540305	0					
ANR	1540545	ArgumentList	op		1540305	1					
ANR	1540546	Argument	op		1540305	0					
ANR	1540547	Identifier	op		1540305	0					
ANR	1540548	Argument	"""retn"""		1540305	1					
ANR	1540549	PrimaryExpression	"""retn"""		1540305	0					
ANR	1540550	CompoundStatement		26:34:850:850	1540305	1					
ANR	1540551	ExpressionStatement	"r_core_cmdf ( core , ""wa mov x0, -1,,ret"" )"	71:2:2537:2577	1540305	0	True				
ANR	1540552	CallExpression	"r_core_cmdf ( core , ""wa mov x0, -1,,ret"" )"		1540305	0					
ANR	1540553	Callee	r_core_cmdf		1540305	0					
ANR	1540554	Identifier	r_core_cmdf		1540305	0					
ANR	1540555	ArgumentList	core		1540305	1					
ANR	1540556	Argument	core		1540305	0					
ANR	1540557	Identifier	core		1540305	0					
ANR	1540558	Argument	"""wa mov x0, -1,,ret"""		1540305	1					
ANR	1540559	PrimaryExpression	"""wa mov x0, -1,,ret"""		1540305	0					
ANR	1540560	ElseStatement	else		1540305	0					
ANR	1540561	CompoundStatement		28:8:904:904	1540305	0					
ANR	1540562	ExpressionStatement	"eprintf ( ""Invalid operation '%s'\\n"" , op )"	73:2:2591:2631	1540305	0	True				
ANR	1540563	CallExpression	"eprintf ( ""Invalid operation '%s'\\n"" , op )"		1540305	0					
ANR	1540564	Callee	eprintf		1540305	0					
ANR	1540565	Identifier	eprintf		1540305	0					
ANR	1540566	ArgumentList	"""Invalid operation '%s'\\n"""		1540305	1					
ANR	1540567	Argument	"""Invalid operation '%s'\\n"""		1540305	0					
ANR	1540568	PrimaryExpression	"""Invalid operation '%s'\\n"""		1540305	0					
ANR	1540569	Argument	op		1540305	1					
ANR	1540570	Identifier	op		1540305	0					
ANR	1540571	ReturnStatement	return false ;	74:2:2635:2647	1540305	1	True				
ANR	1540572	Identifier	false		1540305	0					
ANR	1540573	ReturnStatement	return true ;	76:1:2653:2664	1540305	1	True				
ANR	1540574	Identifier	true		1540305	0					
ANR	1540575	ReturnType	R_API bool		1540305	1					
ANR	1540576	Identifier	r_core_hack_arm64		1540305	2					
ANR	1540577	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		1540305	3					
ANR	1540578	Parameter	RCore * core	45:29:1630:1640	1540305	0	True				
ANR	1540579	ParameterType	RCore *		1540305	0					
ANR	1540580	Identifier	core		1540305	1					
ANR	1540581	Parameter	const char * op	45:42:1643:1656	1540305	1	True				
ANR	1540582	ParameterType	const char *		1540305	0					
ANR	1540583	Identifier	op		1540305	1					
ANR	1540584	Parameter	const RAnalOp * analop	45:58:1659:1679	1540305	2	True				
ANR	1540585	ParameterType	const RAnalOp *		1540305	0					
ANR	1540586	Identifier	analop		1540305	1					
ANR	1540587	CFGEntryNode	ENTRY		1540305		True				
ANR	1540588	CFGExitNode	EXIT		1540305		True				
ANR	1540589	Symbol	strcmp		1540305						
ANR	1540590	Symbol	core		1540305						
ANR	1540591	Symbol	op		1540305						
ANR	1540592	Symbol	analop		1540305						
ANR	1540593	Symbol	false		1540305						
ANR	1540594	Symbol	true		1540305						
ANR	1540595	Function	r_core_hack_arm	78:0:2668:5808							
ANR	1540596	FunctionDef	"r_core_hack_arm (RCore * core , const char * op , const RAnalOp * analop)"		1540595	0					
ANR	1540597	CompoundStatement		78:79:2747:5808	1540595	0					
ANR	1540598	IdentifierDeclStatement	const int bits = core -> assembler -> bits ;	79:1:2750:2788	1540595	0	True				
ANR	1540599	IdentifierDecl	bits = core -> assembler -> bits		1540595	0					
ANR	1540600	IdentifierDeclType	const int		1540595	0					
ANR	1540601	Identifier	bits		1540595	1					
ANR	1540602	AssignmentExpression	bits = core -> assembler -> bits		1540595	2		=			
ANR	1540603	Identifier	bits		1540595	0					
ANR	1540604	PtrMemberAccess	core -> assembler -> bits		1540595	1					
ANR	1540605	PtrMemberAccess	core -> assembler		1540595	0					
ANR	1540606	Identifier	core		1540595	0					
ANR	1540607	Identifier	assembler		1540595	1					
ANR	1540608	Identifier	bits		1540595	1					
ANR	1540609	IdentifierDeclStatement	const ut8 * b = core -> block ;	80:1:2791:2817	1540595	1	True				
ANR	1540610	IdentifierDecl	* b = core -> block		1540595	0					
ANR	1540611	IdentifierDeclType	const ut8 *		1540595	0					
ANR	1540612	Identifier	b		1540595	1					
ANR	1540613	AssignmentExpression	* b = core -> block		1540595	2		=			
ANR	1540614	Identifier	b		1540595	0					
ANR	1540615	PtrMemberAccess	core -> block		1540595	1					
ANR	1540616	Identifier	core		1540595	0					
ANR	1540617	Identifier	block		1540595	1					
ANR	1540618	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		1540595	2					
ANR	1540619	Condition	"! strcmp ( op , ""nop"" )"	82:5:2825:2843	1540595	0	True				
ANR	1540620	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		1540595	0					
ANR	1540621	UnaryOperator	!		1540595	0					
ANR	1540622	CallExpression	"strcmp ( op , ""nop"" )"		1540595	1					
ANR	1540623	Callee	strcmp		1540595	0					
ANR	1540624	Identifier	strcmp		1540595	0					
ANR	1540625	ArgumentList	op		1540595	1					
ANR	1540626	Argument	op		1540595	0					
ANR	1540627	Identifier	op		1540595	0					
ANR	1540628	Argument	"""nop"""		1540595	1					
ANR	1540629	PrimaryExpression	"""nop"""		1540595	0					
ANR	1540630	CompoundStatement		10:2:242:247	1540595	1					
ANR	1540631	IdentifierDeclStatement	const int nopsize = ( bits == 16 ) ? 2 : 4 ;	83:2:2850:2886	1540595	0	True				
ANR	1540632	IdentifierDecl	nopsize = ( bits == 16 ) ? 2 : 4		1540595	0					
ANR	1540633	IdentifierDeclType	const int		1540595	0					
ANR	1540634	Identifier	nopsize		1540595	1					
ANR	1540635	AssignmentExpression	nopsize = ( bits == 16 ) ? 2 : 4		1540595	2		=			
ANR	1540636	Identifier	nopsize		1540595	0					
ANR	1540637	ConditionalExpression	( bits == 16 ) ? 2 : 4		1540595	1					
ANR	1540638	Condition	bits == 16		1540595	0					
ANR	1540639	EqualityExpression	bits == 16		1540595	0		==			
ANR	1540640	Identifier	bits		1540595	0					
ANR	1540641	PrimaryExpression	16		1540595	1					
ANR	1540642	PrimaryExpression	2		1540595	1					
ANR	1540643	PrimaryExpression	4		1540595	2					
ANR	1540644	IdentifierDeclStatement	"const char * nopcode = ( bits == 16 ) ? ""00bf"" : ""0000a0e1"" ;"	84:2:2890:2941	1540595	1	True				
ANR	1540645	IdentifierDecl	"* nopcode = ( bits == 16 ) ? ""00bf"" : ""0000a0e1"""		1540595	0					
ANR	1540646	IdentifierDeclType	const char *		1540595	0					
ANR	1540647	Identifier	nopcode		1540595	1					
ANR	1540648	AssignmentExpression	"* nopcode = ( bits == 16 ) ? ""00bf"" : ""0000a0e1"""		1540595	2		=			
ANR	1540649	Identifier	nopcode		1540595	0					
ANR	1540650	ConditionalExpression	"( bits == 16 ) ? ""00bf"" : ""0000a0e1"""		1540595	1					
ANR	1540651	Condition	bits == 16		1540595	0					
ANR	1540652	EqualityExpression	bits == 16		1540595	0		==			
ANR	1540653	Identifier	bits		1540595	0					
ANR	1540654	PrimaryExpression	16		1540595	1					
ANR	1540655	PrimaryExpression	"""00bf"""		1540595	1					
ANR	1540656	PrimaryExpression	"""0000a0e1"""		1540595	2					
ANR	1540657	IdentifierDeclStatement	const int len = analop -> size ;	85:2:2945:2973	1540595	2	True				
ANR	1540658	IdentifierDecl	len = analop -> size		1540595	0					
ANR	1540659	IdentifierDeclType	const int		1540595	0					
ANR	1540660	Identifier	len		1540595	1					
ANR	1540661	AssignmentExpression	len = analop -> size		1540595	2		=			
ANR	1540662	Identifier	len		1540595	0					
ANR	1540663	PtrMemberAccess	analop -> size		1540595	1					
ANR	1540664	Identifier	analop		1540595	0					
ANR	1540665	Identifier	size		1540595	1					
ANR	1540666	IdentifierDeclStatement	char * str ;	86:2:2977:2986	1540595	3	True				
ANR	1540667	IdentifierDecl	* str		1540595	0					
ANR	1540668	IdentifierDeclType	char *		1540595	0					
ANR	1540669	Identifier	str		1540595	1					
ANR	1540670	IdentifierDeclStatement	int i ;	87:2:2990:2995	1540595	4	True				
ANR	1540671	IdentifierDecl	i		1540595	0					
ANR	1540672	IdentifierDeclType	int		1540595	0					
ANR	1540673	Identifier	i		1540595	1					
ANR	1540674	IfStatement	if ( len % nopsize )		1540595	5					
ANR	1540675	Condition	len % nopsize	89:6:3004:3016	1540595	0	True				
ANR	1540676	MultiplicativeExpression	len % nopsize		1540595	0		%			
ANR	1540677	Identifier	len		1540595	0					
ANR	1540678	Identifier	nopsize		1540595	1					
ANR	1540679	CompoundStatement		12:21:271:271	1540595	1					
ANR	1540680	ExpressionStatement	"eprintf ( ""Invalid nopcode size\\n"" )"	90:3:3024:3058	1540595	0	True				
ANR	1540681	CallExpression	"eprintf ( ""Invalid nopcode size\\n"" )"		1540595	0					
ANR	1540682	Callee	eprintf		1540595	0					
ANR	1540683	Identifier	eprintf		1540595	0					
ANR	1540684	ArgumentList	"""Invalid nopcode size\\n"""		1540595	1					
ANR	1540685	Argument	"""Invalid nopcode size\\n"""		1540595	0					
ANR	1540686	PrimaryExpression	"""Invalid nopcode size\\n"""		1540595	0					
ANR	1540687	ReturnStatement	return false ;	91:3:3063:3075	1540595	1	True				
ANR	1540688	Identifier	false		1540595	0					
ANR	1540689	ExpressionStatement	"str = calloc ( len + 1 , 2 )"	94:2:3084:3109	1540595	6	True				
ANR	1540690	AssignmentExpression	"str = calloc ( len + 1 , 2 )"		1540595	0		=			
ANR	1540691	Identifier	str		1540595	0					
ANR	1540692	CallExpression	"calloc ( len + 1 , 2 )"		1540595	1					
ANR	1540693	Callee	calloc		1540595	0					
ANR	1540694	Identifier	calloc		1540595	0					
ANR	1540695	ArgumentList	len + 1		1540595	1					
ANR	1540696	Argument	len + 1		1540595	0					
ANR	1540697	AdditiveExpression	len + 1		1540595	0		+			
ANR	1540698	Identifier	len		1540595	0					
ANR	1540699	PrimaryExpression	1		1540595	1					
ANR	1540700	Argument	2		1540595	1					
ANR	1540701	PrimaryExpression	2		1540595	0					
ANR	1540702	IfStatement	if ( ! str )		1540595	7					
ANR	1540703	Condition	! str	95:6:3117:3120	1540595	0	True				
ANR	1540704	UnaryOperationExpression	! str		1540595	0					
ANR	1540705	UnaryOperator	!		1540595	0					
ANR	1540706	Identifier	str		1540595	1					
ANR	1540707	CompoundStatement		18:12:375:375	1540595	1					
ANR	1540708	ReturnStatement	return false ;	96:3:3128:3140	1540595	0	True				
ANR	1540709	Identifier	false		1540595	0					
ANR	1540710	ForStatement	for ( i = 0 ; i < len ; i += nopsize )		1540595	8					
ANR	1540711	ForInit	i = 0 ;	98:7:3153:3156	1540595	0	True				
ANR	1540712	AssignmentExpression	i = 0		1540595	0		=			
ANR	1540713	Identifier	i		1540595	0					
ANR	1540714	PrimaryExpression	0		1540595	1					
ANR	1540715	Condition	i < len	98:12:3158:3164	1540595	1	True				
ANR	1540716	RelationalExpression	i < len		1540595	0		<			
ANR	1540717	Identifier	i		1540595	0					
ANR	1540718	Identifier	len		1540595	1					
ANR	1540719	AssignmentExpression	i += nopsize	98:21:3167:3176	1540595	2	True	+=			
ANR	1540720	Identifier	i		1540595	0					
ANR	1540721	Identifier	nopsize		1540595	1					
ANR	1540722	CompoundStatement		21:33:431:431	1540595	3					
ANR	1540723	ExpressionStatement	"memcpy ( str + i * 2 , nopcode , nopsize * 2 )"	99:3:3184:3224	1540595	0	True				
ANR	1540724	CallExpression	"memcpy ( str + i * 2 , nopcode , nopsize * 2 )"		1540595	0					
ANR	1540725	Callee	memcpy		1540595	0					
ANR	1540726	Identifier	memcpy		1540595	0					
ANR	1540727	ArgumentList	str + i * 2		1540595	1					
ANR	1540728	Argument	str + i * 2		1540595	0					
ANR	1540729	AdditiveExpression	str + i * 2		1540595	0		+			
ANR	1540730	Identifier	str		1540595	0					
ANR	1540731	MultiplicativeExpression	i * 2		1540595	1		*			
ANR	1540732	Identifier	i		1540595	0					
ANR	1540733	PrimaryExpression	2		1540595	1					
ANR	1540734	Argument	nopcode		1540595	1					
ANR	1540735	Identifier	nopcode		1540595	0					
ANR	1540736	Argument	nopsize * 2		1540595	2					
ANR	1540737	MultiplicativeExpression	nopsize * 2		1540595	0		*			
ANR	1540738	Identifier	nopsize		1540595	0					
ANR	1540739	PrimaryExpression	2		1540595	1					
ANR	1540740	ExpressionStatement	str [ len * 2 ] = '\\0'	101:2:3232:3249	1540595	9	True				
ANR	1540741	AssignmentExpression	str [ len * 2 ] = '\\0'		1540595	0		=			
ANR	1540742	ArrayIndexing	str [ len * 2 ]		1540595	0					
ANR	1540743	Identifier	str		1540595	0					
ANR	1540744	MultiplicativeExpression	len * 2		1540595	1		*			
ANR	1540745	Identifier	len		1540595	0					
ANR	1540746	PrimaryExpression	2		1540595	1					
ANR	1540747	PrimaryExpression	'\\0'		1540595	1					
ANR	1540748	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , str )"	102:2:3253:3287	1540595	10	True				
ANR	1540749	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , str )"		1540595	0					
ANR	1540750	Callee	r_core_cmdf		1540595	0					
ANR	1540751	Identifier	r_core_cmdf		1540595	0					
ANR	1540752	ArgumentList	core		1540595	1					
ANR	1540753	Argument	core		1540595	0					
ANR	1540754	Identifier	core		1540595	0					
ANR	1540755	Argument	"""wx %s\\n"""		1540595	1					
ANR	1540756	PrimaryExpression	"""wx %s\\n"""		1540595	0					
ANR	1540757	Argument	str		1540595	2					
ANR	1540758	Identifier	str		1540595	0					
ANR	1540759	ExpressionStatement	free ( str )	103:2:3291:3301	1540595	11	True				
ANR	1540760	CallExpression	free ( str )		1540595	0					
ANR	1540761	Callee	free		1540595	0					
ANR	1540762	Identifier	free		1540595	0					
ANR	1540763	ArgumentList	str		1540595	1					
ANR	1540764	Argument	str		1540595	0					
ANR	1540765	Identifier	str		1540595	0					
ANR	1540766	ElseStatement	else		1540595	0					
ANR	1540767	IfStatement	"if ( ! strcmp ( op , ""jinf"" ) )"		1540595	0					
ANR	1540768	Condition	"! strcmp ( op , ""jinf"" )"	104:12:3315:3334	1540595	0	True				
ANR	1540769	UnaryOperationExpression	"! strcmp ( op , ""jinf"" )"		1540595	0					
ANR	1540770	UnaryOperator	!		1540595	0					
ANR	1540771	CallExpression	"strcmp ( op , ""jinf"" )"		1540595	1					
ANR	1540772	Callee	strcmp		1540595	0					
ANR	1540773	Identifier	strcmp		1540595	0					
ANR	1540774	ArgumentList	op		1540595	1					
ANR	1540775	Argument	op		1540595	0					
ANR	1540776	Identifier	op		1540595	0					
ANR	1540777	Argument	"""jinf"""		1540595	1					
ANR	1540778	PrimaryExpression	"""jinf"""		1540595	0					
ANR	1540779	CompoundStatement		27:34:589:589	1540595	1					
ANR	1540780	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , ( bits == 16 ) ? ""fee7"" : ""feffffea"" )"	105:2:3341:3402	1540595	0	True				
ANR	1540781	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , ( bits == 16 ) ? ""fee7"" : ""feffffea"" )"		1540595	0					
ANR	1540782	Callee	r_core_cmdf		1540595	0					
ANR	1540783	Identifier	r_core_cmdf		1540595	0					
ANR	1540784	ArgumentList	core		1540595	1					
ANR	1540785	Argument	core		1540595	0					
ANR	1540786	Identifier	core		1540595	0					
ANR	1540787	Argument	"""wx %s\\n"""		1540595	1					
ANR	1540788	PrimaryExpression	"""wx %s\\n"""		1540595	0					
ANR	1540789	Argument	"( bits == 16 ) ? ""fee7"" : ""feffffea"""		1540595	2					
ANR	1540790	ConditionalExpression	"( bits == 16 ) ? ""fee7"" : ""feffffea"""		1540595	0					
ANR	1540791	Condition	bits == 16		1540595	0					
ANR	1540792	EqualityExpression	bits == 16		1540595	0		==			
ANR	1540793	Identifier	bits		1540595	0					
ANR	1540794	PrimaryExpression	16		1540595	1					
ANR	1540795	PrimaryExpression	"""fee7"""		1540595	1					
ANR	1540796	PrimaryExpression	"""feffffea"""		1540595	2					
ANR	1540797	ElseStatement	else		1540595	0					
ANR	1540798	IfStatement	"if ( ! strcmp ( op , ""trap"" ) )"		1540595	0					
ANR	1540799	Condition	"! strcmp ( op , ""trap"" )"	106:12:3416:3435	1540595	0	True				
ANR	1540800	UnaryOperationExpression	"! strcmp ( op , ""trap"" )"		1540595	0					
ANR	1540801	UnaryOperator	!		1540595	0					
ANR	1540802	CallExpression	"strcmp ( op , ""trap"" )"		1540595	1					
ANR	1540803	Callee	strcmp		1540595	0					
ANR	1540804	Identifier	strcmp		1540595	0					
ANR	1540805	ArgumentList	op		1540595	1					
ANR	1540806	Argument	op		1540595	0					
ANR	1540807	Identifier	op		1540595	0					
ANR	1540808	Argument	"""trap"""		1540595	1					
ANR	1540809	PrimaryExpression	"""trap"""		1540595	0					
ANR	1540810	CompoundStatement		30:2:694:747	1540595	1					
ANR	1540811	IdentifierDeclStatement	"const char * trapcode = ( bits == 16 ) ? ""bebe"" : ""fedeffe7"" ;"	107:2:3442:3495	1540595	0	True				
ANR	1540812	IdentifierDecl	"* trapcode = ( bits == 16 ) ? ""bebe"" : ""fedeffe7"""		1540595	0					
ANR	1540813	IdentifierDeclType	const char *		1540595	0					
ANR	1540814	Identifier	trapcode		1540595	1					
ANR	1540815	AssignmentExpression	"* trapcode = ( bits == 16 ) ? ""bebe"" : ""fedeffe7"""		1540595	2		=			
ANR	1540816	Identifier	trapcode		1540595	0					
ANR	1540817	ConditionalExpression	"( bits == 16 ) ? ""bebe"" : ""fedeffe7"""		1540595	1					
ANR	1540818	Condition	bits == 16		1540595	0					
ANR	1540819	EqualityExpression	bits == 16		1540595	0		==			
ANR	1540820	Identifier	bits		1540595	0					
ANR	1540821	PrimaryExpression	16		1540595	1					
ANR	1540822	PrimaryExpression	"""bebe"""		1540595	1					
ANR	1540823	PrimaryExpression	"""fedeffe7"""		1540595	2					
ANR	1540824	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , trapcode )"	108:2:3499:3538	1540595	1	True				
ANR	1540825	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , trapcode )"		1540595	0					
ANR	1540826	Callee	r_core_cmdf		1540595	0					
ANR	1540827	Identifier	r_core_cmdf		1540595	0					
ANR	1540828	ArgumentList	core		1540595	1					
ANR	1540829	Argument	core		1540595	0					
ANR	1540830	Identifier	core		1540595	0					
ANR	1540831	Argument	"""wx %s\\n"""		1540595	1					
ANR	1540832	PrimaryExpression	"""wx %s\\n"""		1540595	0					
ANR	1540833	Argument	trapcode		1540595	2					
ANR	1540834	Identifier	trapcode		1540595	0					
ANR	1540835	ElseStatement	else		1540595	0					
ANR	1540836	IfStatement	"if ( ! strcmp ( op , ""jz"" ) )"		1540595	0					
ANR	1540837	Condition	"! strcmp ( op , ""jz"" )"	109:12:3552:3569	1540595	0	True				
ANR	1540838	UnaryOperationExpression	"! strcmp ( op , ""jz"" )"		1540595	0					
ANR	1540839	UnaryOperator	!		1540595	0					
ANR	1540840	CallExpression	"strcmp ( op , ""jz"" )"		1540595	1					
ANR	1540841	Callee	strcmp		1540595	0					
ANR	1540842	Identifier	strcmp		1540595	0					
ANR	1540843	ArgumentList	op		1540595	1					
ANR	1540844	Argument	op		1540595	0					
ANR	1540845	Identifier	op		1540595	0					
ANR	1540846	Argument	"""jz"""		1540595	1					
ANR	1540847	PrimaryExpression	"""jz"""		1540595	0					
ANR	1540848	CompoundStatement		32:32:824:824	1540595	1					
ANR	1540849	IfStatement	if ( bits == 16 )		1540595	0					
ANR	1540850	Condition	bits == 16	110:6:3580:3589	1540595	0	True				
ANR	1540851	EqualityExpression	bits == 16		1540595	0		==			
ANR	1540852	Identifier	bits		1540595	0					
ANR	1540853	PrimaryExpression	16		1540595	1					
ANR	1540854	CompoundStatement		33:18:844:844	1540595	1					
ANR	1540855	SwitchStatement	switch ( b [ 1 ] )		1540595	0					
ANR	1540856	Condition	b [ 1 ]	111:11:3605:3608	1540595	0	True				
ANR	1540857	ArrayIndexing	b [ 1 ]		1540595	0					
ANR	1540858	Identifier	b		1540595	0					
ANR	1540859	PrimaryExpression	1		1540595	1					
ANR	1540860	CompoundStatement		34:17:863:863	1540595	1					
ANR	1540861	Label	case 0xb9 :	112:3:3616:3625	1540595	0	True				
ANR	1540862	ExpressionStatement	"r_core_cmd0 ( core , ""wx b1 @@ $$+1\\n"" )"	113:4:3639:3676	1540595	1	True				
ANR	1540863	CallExpression	"r_core_cmd0 ( core , ""wx b1 @@ $$+1\\n"" )"		1540595	0					
ANR	1540864	Callee	r_core_cmd0		1540595	0					
ANR	1540865	Identifier	r_core_cmd0		1540595	0					
ANR	1540866	ArgumentList	core		1540595	1					
ANR	1540867	Argument	core		1540595	0					
ANR	1540868	Identifier	core		1540595	0					
ANR	1540869	Argument	"""wx b1 @@ $$+1\\n"""		1540595	1					
ANR	1540870	PrimaryExpression	"""wx b1 @@ $$+1\\n"""		1540595	0					
ANR	1540871	BreakStatement	break ;	114:4:3688:3693	1540595	2	True				
ANR	1540872	Label	case 0xbb :	115:3:3698:3707	1540595	3	True				
ANR	1540873	ExpressionStatement	"r_core_cmd0 ( core , ""wx b3 @@ $$+1\\n"" )"	116:4:3721:3758	1540595	4	True				
ANR	1540874	CallExpression	"r_core_cmd0 ( core , ""wx b3 @@ $$+1\\n"" )"		1540595	0					
ANR	1540875	Callee	r_core_cmd0		1540595	0					
ANR	1540876	Identifier	r_core_cmd0		1540595	0					
ANR	1540877	ArgumentList	core		1540595	1					
ANR	1540878	Argument	core		1540595	0					
ANR	1540879	Identifier	core		1540595	0					
ANR	1540880	Argument	"""wx b3 @@ $$+1\\n"""		1540595	1					
ANR	1540881	PrimaryExpression	"""wx b3 @@ $$+1\\n"""		1540595	0					
ANR	1540882	BreakStatement	break ;	117:4:3770:3775	1540595	5	True				
ANR	1540883	Label	case 0xd1 :	118:3:3780:3789	1540595	6	True				
ANR	1540884	ExpressionStatement	"r_core_cmd0 ( core , ""wx d0 @@ $$+1\\n"" )"	119:4:3802:3839	1540595	7	True				
ANR	1540885	CallExpression	"r_core_cmd0 ( core , ""wx d0 @@ $$+1\\n"" )"		1540595	0					
ANR	1540886	Callee	r_core_cmd0		1540595	0					
ANR	1540887	Identifier	r_core_cmd0		1540595	0					
ANR	1540888	ArgumentList	core		1540595	1					
ANR	1540889	Argument	core		1540595	0					
ANR	1540890	Identifier	core		1540595	0					
ANR	1540891	Argument	"""wx d0 @@ $$+1\\n"""		1540595	1					
ANR	1540892	PrimaryExpression	"""wx d0 @@ $$+1\\n"""		1540595	0					
ANR	1540893	BreakStatement	break ;	120:4:3851:3856	1540595	8	True				
ANR	1540894	Label	default :	121:3:3861:3868	1540595	9	True				
ANR	1540895	Identifier	default		1540595	0					
ANR	1540896	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	122:4:3874:3921	1540595	10	True				
ANR	1540897	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		1540595	0					
ANR	1540898	Callee	eprintf		1540595	0					
ANR	1540899	Identifier	eprintf		1540595	0					
ANR	1540900	ArgumentList	"""Current opcode is not conditional\\n"""		1540595	1					
ANR	1540901	Argument	"""Current opcode is not conditional\\n"""		1540595	0					
ANR	1540902	PrimaryExpression	"""Current opcode is not conditional\\n"""		1540595	0					
ANR	1540903	ReturnStatement	return false ;	123:4:3927:3939	1540595	11	True				
ANR	1540904	Identifier	false		1540595	0					
ANR	1540905	ElseStatement	else		1540595	0					
ANR	1540906	CompoundStatement		48:9:1207:1207	1540595	0					
ANR	1540907	ExpressionStatement	"eprintf ( ""ARM jz hack not supported\\n"" )"	126:3:3960:3999	1540595	0	True				
ANR	1540908	CallExpression	"eprintf ( ""ARM jz hack not supported\\n"" )"		1540595	0					
ANR	1540909	Callee	eprintf		1540595	0					
ANR	1540910	Identifier	eprintf		1540595	0					
ANR	1540911	ArgumentList	"""ARM jz hack not supported\\n"""		1540595	1					
ANR	1540912	Argument	"""ARM jz hack not supported\\n"""		1540595	0					
ANR	1540913	PrimaryExpression	"""ARM jz hack not supported\\n"""		1540595	0					
ANR	1540914	ReturnStatement	return false ;	127:3:4004:4016	1540595	1	True				
ANR	1540915	Identifier	false		1540595	0					
ANR	1540916	ElseStatement	else		1540595	0					
ANR	1540917	IfStatement	"if ( ! strcmp ( op , ""jnz"" ) )"		1540595	0					
ANR	1540918	Condition	"! strcmp ( op , ""jnz"" )"	129:12:4034:4052	1540595	0	True				
ANR	1540919	UnaryOperationExpression	"! strcmp ( op , ""jnz"" )"		1540595	0					
ANR	1540920	UnaryOperator	!		1540595	0					
ANR	1540921	CallExpression	"strcmp ( op , ""jnz"" )"		1540595	1					
ANR	1540922	Callee	strcmp		1540595	0					
ANR	1540923	Identifier	strcmp		1540595	0					
ANR	1540924	ArgumentList	op		1540595	1					
ANR	1540925	Argument	op		1540595	0					
ANR	1540926	Identifier	op		1540595	0					
ANR	1540927	Argument	"""jnz"""		1540595	1					
ANR	1540928	PrimaryExpression	"""jnz"""		1540595	0					
ANR	1540929	CompoundStatement		52:33:1307:1307	1540595	1					
ANR	1540930	IfStatement	if ( bits == 16 )		1540595	0					
ANR	1540931	Condition	bits == 16	130:6:4063:4072	1540595	0	True				
ANR	1540932	EqualityExpression	bits == 16		1540595	0		==			
ANR	1540933	Identifier	bits		1540595	0					
ANR	1540934	PrimaryExpression	16		1540595	1					
ANR	1540935	CompoundStatement		53:18:1327:1327	1540595	1					
ANR	1540936	SwitchStatement	switch ( b [ 1 ] )		1540595	0					
ANR	1540937	Condition	b [ 1 ]	131:11:4088:4091	1540595	0	True				
ANR	1540938	ArrayIndexing	b [ 1 ]		1540595	0					
ANR	1540939	Identifier	b		1540595	0					
ANR	1540940	PrimaryExpression	1		1540595	1					
ANR	1540941	CompoundStatement		54:17:1346:1346	1540595	1					
ANR	1540942	Label	case 0xb1 :	132:3:4099:4108	1540595	0	True				
ANR	1540943	ExpressionStatement	"r_core_cmd0 ( core , ""wx b9 @@ $$+1\\n"" )"	133:4:4121:4158	1540595	1	True				
ANR	1540944	CallExpression	"r_core_cmd0 ( core , ""wx b9 @@ $$+1\\n"" )"		1540595	0					
ANR	1540945	Callee	r_core_cmd0		1540595	0					
ANR	1540946	Identifier	r_core_cmd0		1540595	0					
ANR	1540947	ArgumentList	core		1540595	1					
ANR	1540948	Argument	core		1540595	0					
ANR	1540949	Identifier	core		1540595	0					
ANR	1540950	Argument	"""wx b9 @@ $$+1\\n"""		1540595	1					
ANR	1540951	PrimaryExpression	"""wx b9 @@ $$+1\\n"""		1540595	0					
ANR	1540952	BreakStatement	break ;	134:4:4171:4176	1540595	2	True				
ANR	1540953	Label	case 0xb3 :	135:3:4181:4190	1540595	3	True				
ANR	1540954	ExpressionStatement	"r_core_cmd0 ( core , ""wx bb @@ $$+1\\n"" )"	136:4:4203:4240	1540595	4	True				
ANR	1540955	CallExpression	"r_core_cmd0 ( core , ""wx bb @@ $$+1\\n"" )"		1540595	0					
ANR	1540956	Callee	r_core_cmd0		1540595	0					
ANR	1540957	Identifier	r_core_cmd0		1540595	0					
ANR	1540958	ArgumentList	core		1540595	1					
ANR	1540959	Argument	core		1540595	0					
ANR	1540960	Identifier	core		1540595	0					
ANR	1540961	Argument	"""wx bb @@ $$+1\\n"""		1540595	1					
ANR	1540962	PrimaryExpression	"""wx bb @@ $$+1\\n"""		1540595	0					
ANR	1540963	BreakStatement	break ;	137:4:4253:4258	1540595	5	True				
ANR	1540964	Label	case 0xd0 :	138:3:4263:4272	1540595	6	True				
ANR	1540965	ExpressionStatement	"r_core_cmd0 ( core , ""wx d1 @@ $$+1\\n"" )"	139:4:4285:4322	1540595	7	True				
ANR	1540966	CallExpression	"r_core_cmd0 ( core , ""wx d1 @@ $$+1\\n"" )"		1540595	0					
ANR	1540967	Callee	r_core_cmd0		1540595	0					
ANR	1540968	Identifier	r_core_cmd0		1540595	0					
ANR	1540969	ArgumentList	core		1540595	1					
ANR	1540970	Argument	core		1540595	0					
ANR	1540971	Identifier	core		1540595	0					
ANR	1540972	Argument	"""wx d1 @@ $$+1\\n"""		1540595	1					
ANR	1540973	PrimaryExpression	"""wx d1 @@ $$+1\\n"""		1540595	0					
ANR	1540974	BreakStatement	break ;	140:4:4334:4339	1540595	8	True				
ANR	1540975	Label	default :	141:3:4344:4351	1540595	9	True				
ANR	1540976	Identifier	default		1540595	0					
ANR	1540977	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	142:4:4357:4404	1540595	10	True				
ANR	1540978	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		1540595	0					
ANR	1540979	Callee	eprintf		1540595	0					
ANR	1540980	Identifier	eprintf		1540595	0					
ANR	1540981	ArgumentList	"""Current opcode is not conditional\\n"""		1540595	1					
ANR	1540982	Argument	"""Current opcode is not conditional\\n"""		1540595	0					
ANR	1540983	PrimaryExpression	"""Current opcode is not conditional\\n"""		1540595	0					
ANR	1540984	ReturnStatement	return false ;	143:4:4410:4422	1540595	11	True				
ANR	1540985	Identifier	false		1540595	0					
ANR	1540986	ElseStatement	else		1540595	0					
ANR	1540987	CompoundStatement		68:9:1690:1690	1540595	0					
ANR	1540988	ExpressionStatement	"eprintf ( ""ARM jnz hack not supported\\n"" )"	146:3:4443:4483	1540595	0	True				
ANR	1540989	CallExpression	"eprintf ( ""ARM jnz hack not supported\\n"" )"		1540595	0					
ANR	1540990	Callee	eprintf		1540595	0					
ANR	1540991	Identifier	eprintf		1540595	0					
ANR	1540992	ArgumentList	"""ARM jnz hack not supported\\n"""		1540595	1					
ANR	1540993	Argument	"""ARM jnz hack not supported\\n"""		1540595	0					
ANR	1540994	PrimaryExpression	"""ARM jnz hack not supported\\n"""		1540595	0					
ANR	1540995	ReturnStatement	return false ;	147:3:4488:4500	1540595	1	True				
ANR	1540996	Identifier	false		1540595	0					
ANR	1540997	ElseStatement	else		1540595	0					
ANR	1540998	IfStatement	"if ( ! strcmp ( op , ""nocj"" ) )"		1540595	0					
ANR	1540999	Condition	"! strcmp ( op , ""nocj"" )"	149:12:4518:4537	1540595	0	True				
ANR	1541000	UnaryOperationExpression	"! strcmp ( op , ""nocj"" )"		1540595	0					
ANR	1541001	UnaryOperator	!		1540595	0					
ANR	1541002	CallExpression	"strcmp ( op , ""nocj"" )"		1540595	1					
ANR	1541003	Callee	strcmp		1540595	0					
ANR	1541004	Identifier	strcmp		1540595	0					
ANR	1541005	ArgumentList	op		1540595	1					
ANR	1541006	Argument	op		1540595	0					
ANR	1541007	Identifier	op		1540595	0					
ANR	1541008	Argument	"""nocj"""		1540595	1					
ANR	1541009	PrimaryExpression	"""nocj"""		1540595	0					
ANR	1541010	CompoundStatement		72:34:1792:1792	1540595	1					
ANR	1541011	IfStatement	if ( bits == 16 )		1540595	0					
ANR	1541012	Condition	bits == 16	151:6:4601:4610	1540595	0	True				
ANR	1541013	EqualityExpression	bits == 16		1540595	0		==			
ANR	1541014	Identifier	bits		1540595	0					
ANR	1541015	PrimaryExpression	16		1540595	1					
ANR	1541016	CompoundStatement		74:18:1865:1865	1540595	1					
ANR	1541017	SwitchStatement	switch ( b [ 1 ] )		1540595	0					
ANR	1541018	Condition	b [ 1 ]	152:11:4626:4629	1540595	0	True				
ANR	1541019	ArrayIndexing	b [ 1 ]		1540595	0					
ANR	1541020	Identifier	b		1540595	0					
ANR	1541021	PrimaryExpression	1		1540595	1					
ANR	1541022	CompoundStatement		75:17:1884:1884	1540595	1					
ANR	1541023	Label	case 0xb1 :	153:3:4637:4646	1540595	0	True				
ANR	1541024	Label	case 0xb3 :	154:3:4658:4667	1540595	1	True				
ANR	1541025	Label	case 0xd0 :	155:3:4679:4688	1540595	2	True				
ANR	1541026	Label	case 0xb9 :	156:3:4700:4709	1540595	3	True				
ANR	1541027	Label	case 0xbb :	157:3:4722:4731	1540595	4	True				
ANR	1541028	Label	case 0xd1 :	158:3:4744:4753	1540595	5	True				
ANR	1541029	ExpressionStatement	"r_core_cmd0 ( core , ""wx e0 @@ $$+1\\n"" )"	159:4:4766:4803	1540595	6	True				
ANR	1541030	CallExpression	"r_core_cmd0 ( core , ""wx e0 @@ $$+1\\n"" )"		1540595	0					
ANR	1541031	Callee	r_core_cmd0		1540595	0					
ANR	1541032	Identifier	r_core_cmd0		1540595	0					
ANR	1541033	ArgumentList	core		1540595	1					
ANR	1541034	Argument	core		1540595	0					
ANR	1541035	Identifier	core		1540595	0					
ANR	1541036	Argument	"""wx e0 @@ $$+1\\n"""		1540595	1					
ANR	1541037	PrimaryExpression	"""wx e0 @@ $$+1\\n"""		1540595	0					
ANR	1541038	BreakStatement	break ;	160:4:4815:4820	1540595	7	True				
ANR	1541039	Label	default :	161:3:4825:4832	1540595	8	True				
ANR	1541040	Identifier	default		1540595	0					
ANR	1541041	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	162:4:4838:4885	1540595	9	True				
ANR	1541042	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		1540595	0					
ANR	1541043	Callee	eprintf		1540595	0					
ANR	1541044	Identifier	eprintf		1540595	0					
ANR	1541045	ArgumentList	"""Current opcode is not conditional\\n"""		1540595	1					
ANR	1541046	Argument	"""Current opcode is not conditional\\n"""		1540595	0					
ANR	1541047	PrimaryExpression	"""Current opcode is not conditional\\n"""		1540595	0					
ANR	1541048	ReturnStatement	return false ;	163:4:4891:4903	1540595	10	True				
ANR	1541049	Identifier	false		1540595	0					
ANR	1541050	ElseStatement	else		1540595	0					
ANR	1541051	CompoundStatement		88:9:2171:2171	1540595	0					
ANR	1541052	ExpressionStatement	"eprintf ( ""ARM un-cjmp hack not supported\\n"" )"	166:3:4924:4968	1540595	0	True				
ANR	1541053	CallExpression	"eprintf ( ""ARM un-cjmp hack not supported\\n"" )"		1540595	0					
ANR	1541054	Callee	eprintf		1540595	0					
ANR	1541055	Identifier	eprintf		1540595	0					
ANR	1541056	ArgumentList	"""ARM un-cjmp hack not supported\\n"""		1540595	1					
ANR	1541057	Argument	"""ARM un-cjmp hack not supported\\n"""		1540595	0					
ANR	1541058	PrimaryExpression	"""ARM un-cjmp hack not supported\\n"""		1540595	0					
ANR	1541059	ReturnStatement	return false ;	167:3:4973:4985	1540595	1	True				
ANR	1541060	Identifier	false		1540595	0					
ANR	1541061	ElseStatement	else		1540595	0					
ANR	1541062	IfStatement	"if ( ! strcmp ( op , ""recj"" ) )"		1540595	0					
ANR	1541063	Condition	"! strcmp ( op , ""recj"" )"	169:12:5003:5022	1540595	0	True				
ANR	1541064	UnaryOperationExpression	"! strcmp ( op , ""recj"" )"		1540595	0					
ANR	1541065	UnaryOperator	!		1540595	0					
ANR	1541066	CallExpression	"strcmp ( op , ""recj"" )"		1540595	1					
ANR	1541067	Callee	strcmp		1540595	0					
ANR	1541068	Identifier	strcmp		1540595	0					
ANR	1541069	ArgumentList	op		1540595	1					
ANR	1541070	Argument	op		1540595	0					
ANR	1541071	Identifier	op		1540595	0					
ANR	1541072	Argument	"""recj"""		1540595	1					
ANR	1541073	PrimaryExpression	"""recj"""		1540595	0					
ANR	1541074	CompoundStatement		92:34:2277:2277	1540595	1					
ANR	1541075	ExpressionStatement	"eprintf ( ""TODO: use jnz or jz\\n"" )"	170:2:5029:5062	1540595	0	True				
ANR	1541076	CallExpression	"eprintf ( ""TODO: use jnz or jz\\n"" )"		1540595	0					
ANR	1541077	Callee	eprintf		1540595	0					
ANR	1541078	Identifier	eprintf		1540595	0					
ANR	1541079	ArgumentList	"""TODO: use jnz or jz\\n"""		1540595	1					
ANR	1541080	Argument	"""TODO: use jnz or jz\\n"""		1540595	0					
ANR	1541081	PrimaryExpression	"""TODO: use jnz or jz\\n"""		1540595	0					
ANR	1541082	ReturnStatement	return false ;	171:2:5066:5078	1540595	1	True				
ANR	1541083	Identifier	false		1540595	0					
ANR	1541084	ElseStatement	else		1540595	0					
ANR	1541085	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		1540595	0					
ANR	1541086	Condition	"! strcmp ( op , ""ret1"" )"	172:12:5092:5111	1540595	0	True				
ANR	1541087	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		1540595	0					
ANR	1541088	UnaryOperator	!		1540595	0					
ANR	1541089	CallExpression	"strcmp ( op , ""ret1"" )"		1540595	1					
ANR	1541090	Callee	strcmp		1540595	0					
ANR	1541091	Identifier	strcmp		1540595	0					
ANR	1541092	ArgumentList	op		1540595	1					
ANR	1541093	Argument	op		1540595	0					
ANR	1541094	Identifier	op		1540595	0					
ANR	1541095	Argument	"""ret1"""		1540595	1					
ANR	1541096	PrimaryExpression	"""ret1"""		1540595	0					
ANR	1541097	CompoundStatement		95:34:2366:2366	1540595	1					
ANR	1541098	IfStatement	if ( bits == 16 )		1540595	0					
ANR	1541099	Condition	bits == 16	173:6:5122:5131	1540595	0	True				
ANR	1541100	EqualityExpression	bits == 16		1540595	0		==			
ANR	1541101	Identifier	bits		1540595	0					
ANR	1541102	PrimaryExpression	16		1540595	1					
ANR	1541103	CompoundStatement		96:18:2386:2386	1540595	1					
ANR	1541104	ExpressionStatement	"r_core_cmd0 ( core , ""wx 01207047 @@ $$+1\\n"" )"	174:3:5139:5182	1540595	0	True				
ANR	1541105	CallExpression	"r_core_cmd0 ( core , ""wx 01207047 @@ $$+1\\n"" )"		1540595	0					
ANR	1541106	Callee	r_core_cmd0		1540595	0					
ANR	1541107	Identifier	r_core_cmd0		1540595	0					
ANR	1541108	ArgumentList	core		1540595	1					
ANR	1541109	Argument	core		1540595	0					
ANR	1541110	Identifier	core		1540595	0					
ANR	1541111	Argument	"""wx 01207047 @@ $$+1\\n"""		1540595	1					
ANR	1541112	PrimaryExpression	"""wx 01207047 @@ $$+1\\n"""		1540595	0					
ANR	1541113	ElseStatement	else		1540595	0					
ANR	1541114	CompoundStatement		98:9:2465:2465	1540595	0					
ANR	1541115	ExpressionStatement	"r_core_cmd0 ( core , ""wx 0100b0e31eff2fe1 @@ $$+1\\n"" )"	176:3:5218:5269	1540595	0	True				
ANR	1541116	CallExpression	"r_core_cmd0 ( core , ""wx 0100b0e31eff2fe1 @@ $$+1\\n"" )"		1540595	0					
ANR	1541117	Callee	r_core_cmd0		1540595	0					
ANR	1541118	Identifier	r_core_cmd0		1540595	0					
ANR	1541119	ArgumentList	core		1540595	1					
ANR	1541120	Argument	core		1540595	0					
ANR	1541121	Identifier	core		1540595	0					
ANR	1541122	Argument	"""wx 0100b0e31eff2fe1 @@ $$+1\\n"""		1540595	1					
ANR	1541123	PrimaryExpression	"""wx 0100b0e31eff2fe1 @@ $$+1\\n"""		1540595	0					
ANR	1541124	ElseStatement	else		1540595	0					
ANR	1541125	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		1540595	0					
ANR	1541126	Condition	"! strcmp ( op , ""ret0"" )"	178:12:5308:5327	1540595	0	True				
ANR	1541127	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		1540595	0					
ANR	1541128	UnaryOperator	!		1540595	0					
ANR	1541129	CallExpression	"strcmp ( op , ""ret0"" )"		1540595	1					
ANR	1541130	Callee	strcmp		1540595	0					
ANR	1541131	Identifier	strcmp		1540595	0					
ANR	1541132	ArgumentList	op		1540595	1					
ANR	1541133	Argument	op		1540595	0					
ANR	1541134	Identifier	op		1540595	0					
ANR	1541135	Argument	"""ret0"""		1540595	1					
ANR	1541136	PrimaryExpression	"""ret0"""		1540595	0					
ANR	1541137	CompoundStatement		101:34:2582:2582	1540595	1					
ANR	1541138	IfStatement	if ( bits == 16 )		1540595	0					
ANR	1541139	Condition	bits == 16	179:6:5338:5347	1540595	0	True				
ANR	1541140	EqualityExpression	bits == 16		1540595	0		==			
ANR	1541141	Identifier	bits		1540595	0					
ANR	1541142	PrimaryExpression	16		1540595	1					
ANR	1541143	CompoundStatement		102:18:2602:2602	1540595	1					
ANR	1541144	ExpressionStatement	"r_core_cmd0 ( core , ""wx 00207047 @@ $$+1\\n"" )"	180:3:5355:5398	1540595	0	True				
ANR	1541145	CallExpression	"r_core_cmd0 ( core , ""wx 00207047 @@ $$+1\\n"" )"		1540595	0					
ANR	1541146	Callee	r_core_cmd0		1540595	0					
ANR	1541147	Identifier	r_core_cmd0		1540595	0					
ANR	1541148	ArgumentList	core		1540595	1					
ANR	1541149	Argument	core		1540595	0					
ANR	1541150	Identifier	core		1540595	0					
ANR	1541151	Argument	"""wx 00207047 @@ $$+1\\n"""		1540595	1					
ANR	1541152	PrimaryExpression	"""wx 00207047 @@ $$+1\\n"""		1540595	0					
ANR	1541153	ElseStatement	else		1540595	0					
ANR	1541154	CompoundStatement		104:9:2681:2681	1540595	0					
ANR	1541155	ExpressionStatement	"r_core_cmd0 ( core , ""wx 0000a0e31eff2fe1 @@ $$+1\\n"" )"	182:3:5434:5485	1540595	0	True				
ANR	1541156	CallExpression	"r_core_cmd0 ( core , ""wx 0000a0e31eff2fe1 @@ $$+1\\n"" )"		1540595	0					
ANR	1541157	Callee	r_core_cmd0		1540595	0					
ANR	1541158	Identifier	r_core_cmd0		1540595	0					
ANR	1541159	ArgumentList	core		1540595	1					
ANR	1541160	Argument	core		1540595	0					
ANR	1541161	Identifier	core		1540595	0					
ANR	1541162	Argument	"""wx 0000a0e31eff2fe1 @@ $$+1\\n"""		1540595	1					
ANR	1541163	PrimaryExpression	"""wx 0000a0e31eff2fe1 @@ $$+1\\n"""		1540595	0					
ANR	1541164	ElseStatement	else		1540595	0					
ANR	1541165	IfStatement	"if ( ! strcmp ( op , ""retn"" ) )"		1540595	0					
ANR	1541166	Condition	"! strcmp ( op , ""retn"" )"	184:12:5524:5543	1540595	0	True				
ANR	1541167	UnaryOperationExpression	"! strcmp ( op , ""retn"" )"		1540595	0					
ANR	1541168	UnaryOperator	!		1540595	0					
ANR	1541169	CallExpression	"strcmp ( op , ""retn"" )"		1540595	1					
ANR	1541170	Callee	strcmp		1540595	0					
ANR	1541171	Identifier	strcmp		1540595	0					
ANR	1541172	ArgumentList	op		1540595	1					
ANR	1541173	Argument	op		1540595	0					
ANR	1541174	Identifier	op		1540595	0					
ANR	1541175	Argument	"""retn"""		1540595	1					
ANR	1541176	PrimaryExpression	"""retn"""		1540595	0					
ANR	1541177	CompoundStatement		107:34:2798:2798	1540595	1					
ANR	1541178	IfStatement	if ( bits == 16 )		1540595	0					
ANR	1541179	Condition	bits == 16	185:6:5554:5563	1540595	0	True				
ANR	1541180	EqualityExpression	bits == 16		1540595	0		==			
ANR	1541181	Identifier	bits		1540595	0					
ANR	1541182	PrimaryExpression	16		1540595	1					
ANR	1541183	CompoundStatement		108:18:2818:2818	1540595	1					
ANR	1541184	ExpressionStatement	"r_core_cmd0 ( core , ""wx ff207047 @@ $$+1\\n"" )"	186:3:5571:5614	1540595	0	True				
ANR	1541185	CallExpression	"r_core_cmd0 ( core , ""wx ff207047 @@ $$+1\\n"" )"		1540595	0					
ANR	1541186	Callee	r_core_cmd0		1540595	0					
ANR	1541187	Identifier	r_core_cmd0		1540595	0					
ANR	1541188	ArgumentList	core		1540595	1					
ANR	1541189	Argument	core		1540595	0					
ANR	1541190	Identifier	core		1540595	0					
ANR	1541191	Argument	"""wx ff207047 @@ $$+1\\n"""		1540595	1					
ANR	1541192	PrimaryExpression	"""wx ff207047 @@ $$+1\\n"""		1540595	0					
ANR	1541193	ElseStatement	else		1540595	0					
ANR	1541194	CompoundStatement		110:9:2898:2898	1540595	0					
ANR	1541195	ExpressionStatement	"r_core_cmd0 ( core , ""wx ff00a0e31eff2fe1 @@ $$+1\\n"" )"	188:3:5651:5702	1540595	0	True				
ANR	1541196	CallExpression	"r_core_cmd0 ( core , ""wx ff00a0e31eff2fe1 @@ $$+1\\n"" )"		1540595	0					
ANR	1541197	Callee	r_core_cmd0		1540595	0					
ANR	1541198	Identifier	r_core_cmd0		1540595	0					
ANR	1541199	ArgumentList	core		1540595	1					
ANR	1541200	Argument	core		1540595	0					
ANR	1541201	Identifier	core		1540595	0					
ANR	1541202	Argument	"""wx ff00a0e31eff2fe1 @@ $$+1\\n"""		1540595	1					
ANR	1541203	PrimaryExpression	"""wx ff00a0e31eff2fe1 @@ $$+1\\n"""		1540595	0					
ANR	1541204	ElseStatement	else		1540595	0					
ANR	1541205	CompoundStatement		113:8:2990:2990	1540595	0					
ANR	1541206	ExpressionStatement	"eprintf ( ""Invalid operation\\n"" )"	191:2:5742:5773	1540595	0	True				
ANR	1541207	CallExpression	"eprintf ( ""Invalid operation\\n"" )"		1540595	0					
ANR	1541208	Callee	eprintf		1540595	0					
ANR	1541209	Identifier	eprintf		1540595	0					
ANR	1541210	ArgumentList	"""Invalid operation\\n"""		1540595	1					
ANR	1541211	Argument	"""Invalid operation\\n"""		1540595	0					
ANR	1541212	PrimaryExpression	"""Invalid operation\\n"""		1540595	0					
ANR	1541213	ReturnStatement	return false ;	192:2:5777:5789	1540595	1	True				
ANR	1541214	Identifier	false		1540595	0					
ANR	1541215	ReturnStatement	return true ;	194:1:5795:5806	1540595	3	True				
ANR	1541216	Identifier	true		1540595	0					
ANR	1541217	ReturnType	R_API bool		1540595	1					
ANR	1541218	Identifier	r_core_hack_arm		1540595	2					
ANR	1541219	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		1540595	3					
ANR	1541220	Parameter	RCore * core	78:27:2695:2705	1540595	0	True				
ANR	1541221	ParameterType	RCore *		1540595	0					
ANR	1541222	Identifier	core		1540595	1					
ANR	1541223	Parameter	const char * op	78:40:2708:2721	1540595	1	True				
ANR	1541224	ParameterType	const char *		1540595	0					
ANR	1541225	Identifier	op		1540595	1					
ANR	1541226	Parameter	const RAnalOp * analop	78:56:2724:2744	1540595	2	True				
ANR	1541227	ParameterType	const RAnalOp *		1540595	0					
ANR	1541228	Identifier	analop		1540595	1					
ANR	1541229	CFGEntryNode	ENTRY		1540595		True				
ANR	1541230	CFGExitNode	EXIT		1540595		True				
ANR	1541231	Symbol	core -> assembler -> bits		1540595						
ANR	1541232	Symbol	* core		1540595						
ANR	1541233	Symbol	core -> assembler		1540595						
ANR	1541234	Symbol	calloc		1540595						
ANR	1541235	Symbol	nopcode		1540595						
ANR	1541236	Symbol	* core -> assembler		1540595						
ANR	1541237	Symbol	len		1540595						
ANR	1541238	Symbol	* analop		1540595						
ANR	1541239	Symbol	* str		1540595						
ANR	1541240	Symbol	* * core		1540595						
ANR	1541241	Symbol	strcmp		1540595						
ANR	1541242	Symbol	op		1540595						
ANR	1541243	Symbol	b		1540595						
ANR	1541244	Symbol	core -> block		1540595						
ANR	1541245	Symbol	analop -> size		1540595						
ANR	1541246	Symbol	nopsize		1540595						
ANR	1541247	Symbol	bits		1540595						
ANR	1541248	Symbol	false		1540595						
ANR	1541249	Symbol	i		1540595						
ANR	1541250	Symbol	* b		1540595						
ANR	1541251	Symbol	str		1540595						
ANR	1541252	Symbol	core		1540595						
ANR	1541253	Symbol	trapcode		1540595						
ANR	1541254	Symbol	analop		1540595						
ANR	1541255	Symbol	true		1540595						
ANR	1541256	Symbol	* len		1540595						
ANR	1541257	Function	r_core_hack_x86	197:0:5811:7778							
ANR	1541258	FunctionDef	"r_core_hack_x86 (RCore * core , const char * op , const RAnalOp * analop)"		1541257	0					
ANR	1541259	CompoundStatement		197:79:5890:7778	1541257	0					
ANR	1541260	IdentifierDeclStatement	const ut8 * b = core -> block ;	198:1:5893:5919	1541257	0	True				
ANR	1541261	IdentifierDecl	* b = core -> block		1541257	0					
ANR	1541262	IdentifierDeclType	const ut8 *		1541257	0					
ANR	1541263	Identifier	b		1541257	1					
ANR	1541264	AssignmentExpression	* b = core -> block		1541257	2		=			
ANR	1541265	Identifier	b		1541257	0					
ANR	1541266	PtrMemberAccess	core -> block		1541257	1					
ANR	1541267	Identifier	core		1541257	0					
ANR	1541268	Identifier	block		1541257	1					
ANR	1541269	IdentifierDeclStatement	"int i , size = analop -> size ;"	199:1:5922:5948	1541257	1	True				
ANR	1541270	IdentifierDecl	i		1541257	0					
ANR	1541271	IdentifierDeclType	int		1541257	0					
ANR	1541272	Identifier	i		1541257	1					
ANR	1541273	IdentifierDecl	size = analop -> size		1541257	1					
ANR	1541274	IdentifierDeclType	int		1541257	0					
ANR	1541275	Identifier	size		1541257	1					
ANR	1541276	AssignmentExpression	size = analop -> size		1541257	2		=			
ANR	1541277	Identifier	size		1541257	0					
ANR	1541278	PtrMemberAccess	analop -> size		1541257	1					
ANR	1541279	Identifier	analop		1541257	0					
ANR	1541280	Identifier	size		1541257	1					
ANR	1541281	IfStatement	"if ( ! strcmp ( op , ""nop"" ) )"		1541257	2					
ANR	1541282	Condition	"! strcmp ( op , ""nop"" )"	200:5:5955:5973	1541257	0	True				
ANR	1541283	UnaryOperationExpression	"! strcmp ( op , ""nop"" )"		1541257	0					
ANR	1541284	UnaryOperator	!		1541257	0					
ANR	1541285	CallExpression	"strcmp ( op , ""nop"" )"		1541257	1					
ANR	1541286	Callee	strcmp		1541257	0					
ANR	1541287	Identifier	strcmp		1541257	0					
ANR	1541288	ArgumentList	op		1541257	1					
ANR	1541289	Argument	op		1541257	0					
ANR	1541290	Identifier	op		1541257	0					
ANR	1541291	Argument	"""nop"""		1541257	1					
ANR	1541292	PrimaryExpression	"""nop"""		1541257	0					
ANR	1541293	CompoundStatement		8:2:139:172	1541257	1					
ANR	1541294	IfStatement	if ( size * 2 + 1 < size )		1541257	0					
ANR	1541295	Condition	size * 2 + 1 < size	201:6:5984:6002	1541257	0	True				
ANR	1541296	RelationalExpression	size * 2 + 1 < size		1541257	0		<			
ANR	1541297	AdditiveExpression	size * 2 + 1		1541257	0		+			
ANR	1541298	MultiplicativeExpression	size * 2		1541257	0		*			
ANR	1541299	Identifier	size		1541257	0					
ANR	1541300	PrimaryExpression	2		1541257	1					
ANR	1541301	PrimaryExpression	1		1541257	1					
ANR	1541302	Identifier	size		1541257	1					
ANR	1541303	CompoundStatement		5:27:114:114	1541257	1					
ANR	1541304	ReturnStatement	return false ;	202:3:6010:6022	1541257	0	True				
ANR	1541305	Identifier	false		1541257	0					
ANR	1541306	IdentifierDeclStatement	char * str = malloc ( size * 2 + 1 ) ;	204:2:6030:6063	1541257	1	True				
ANR	1541307	IdentifierDecl	* str = malloc ( size * 2 + 1 )		1541257	0					
ANR	1541308	IdentifierDeclType	char *		1541257	0					
ANR	1541309	Identifier	str		1541257	1					
ANR	1541310	AssignmentExpression	* str = malloc ( size * 2 + 1 )		1541257	2		=			
ANR	1541311	Identifier	str		1541257	0					
ANR	1541312	CallExpression	malloc ( size * 2 + 1 )		1541257	1					
ANR	1541313	Callee	malloc		1541257	0					
ANR	1541314	Identifier	malloc		1541257	0					
ANR	1541315	ArgumentList	size * 2 + 1		1541257	1					
ANR	1541316	Argument	size * 2 + 1		1541257	0					
ANR	1541317	AdditiveExpression	size * 2 + 1		1541257	0		+			
ANR	1541318	MultiplicativeExpression	size * 2		1541257	0		*			
ANR	1541319	Identifier	size		1541257	0					
ANR	1541320	PrimaryExpression	2		1541257	1					
ANR	1541321	PrimaryExpression	1		1541257	1					
ANR	1541322	IfStatement	if ( ! str )		1541257	2					
ANR	1541323	Condition	! str	205:6:6071:6074	1541257	0	True				
ANR	1541324	UnaryOperationExpression	! str		1541257	0					
ANR	1541325	UnaryOperator	!		1541257	0					
ANR	1541326	Identifier	str		1541257	1					
ANR	1541327	CompoundStatement		9:12:186:186	1541257	1					
ANR	1541328	ReturnStatement	return false ;	206:3:6082:6094	1541257	0	True				
ANR	1541329	Identifier	false		1541257	0					
ANR	1541330	ForStatement	for ( i = 0 ; i < size ; i ++ )		1541257	3					
ANR	1541331	ForInit	i = 0 ;	208:7:6107:6112	1541257	0	True				
ANR	1541332	AssignmentExpression	i = 0		1541257	0		=			
ANR	1541333	Identifier	i		1541257	0					
ANR	1541334	PrimaryExpression	0		1541257	1					
ANR	1541335	Condition	i < size	208:14:6114:6121	1541257	1	True				
ANR	1541336	RelationalExpression	i < size		1541257	0		<			
ANR	1541337	Identifier	i		1541257	0					
ANR	1541338	Identifier	size		1541257	1					
ANR	1541339	PostIncDecOperationExpression	i ++	208:24:6124:6126	1541257	2	True				
ANR	1541340	Identifier	i		1541257	0					
ANR	1541341	IncDec	++		1541257	1					
ANR	1541342	CompoundStatement		12:29:238:238	1541257	3					
ANR	1541343	ExpressionStatement	"memcpy ( str + ( i * 2 ) , ""90"" , 2 )"	209:3:6134:6165	1541257	0	True				
ANR	1541344	CallExpression	"memcpy ( str + ( i * 2 ) , ""90"" , 2 )"		1541257	0					
ANR	1541345	Callee	memcpy		1541257	0					
ANR	1541346	Identifier	memcpy		1541257	0					
ANR	1541347	ArgumentList	str + ( i * 2 )		1541257	1					
ANR	1541348	Argument	str + ( i * 2 )		1541257	0					
ANR	1541349	AdditiveExpression	str + ( i * 2 )		1541257	0		+			
ANR	1541350	Identifier	str		1541257	0					
ANR	1541351	MultiplicativeExpression	i * 2		1541257	1		*			
ANR	1541352	Identifier	i		1541257	0					
ANR	1541353	PrimaryExpression	2		1541257	1					
ANR	1541354	Argument	"""90"""		1541257	1					
ANR	1541355	PrimaryExpression	"""90"""		1541257	0					
ANR	1541356	Argument	2		1541257	2					
ANR	1541357	PrimaryExpression	2		1541257	0					
ANR	1541358	ExpressionStatement	str [ size * 2 ] = '\\0'	211:2:6173:6191	1541257	4	True				
ANR	1541359	AssignmentExpression	str [ size * 2 ] = '\\0'		1541257	0		=			
ANR	1541360	ArrayIndexing	str [ size * 2 ]		1541257	0					
ANR	1541361	Identifier	str		1541257	0					
ANR	1541362	MultiplicativeExpression	size * 2		1541257	1		*			
ANR	1541363	Identifier	size		1541257	0					
ANR	1541364	PrimaryExpression	2		1541257	1					
ANR	1541365	PrimaryExpression	'\\0'		1541257	1					
ANR	1541366	ExpressionStatement	"r_core_cmdf ( core , ""wx %s\\n"" , str )"	212:2:6195:6229	1541257	5	True				
ANR	1541367	CallExpression	"r_core_cmdf ( core , ""wx %s\\n"" , str )"		1541257	0					
ANR	1541368	Callee	r_core_cmdf		1541257	0					
ANR	1541369	Identifier	r_core_cmdf		1541257	0					
ANR	1541370	ArgumentList	core		1541257	1					
ANR	1541371	Argument	core		1541257	0					
ANR	1541372	Identifier	core		1541257	0					
ANR	1541373	Argument	"""wx %s\\n"""		1541257	1					
ANR	1541374	PrimaryExpression	"""wx %s\\n"""		1541257	0					
ANR	1541375	Argument	str		1541257	2					
ANR	1541376	Identifier	str		1541257	0					
ANR	1541377	ExpressionStatement	free ( str )	213:2:6233:6243	1541257	6	True				
ANR	1541378	CallExpression	free ( str )		1541257	0					
ANR	1541379	Callee	free		1541257	0					
ANR	1541380	Identifier	free		1541257	0					
ANR	1541381	ArgumentList	str		1541257	1					
ANR	1541382	Argument	str		1541257	0					
ANR	1541383	Identifier	str		1541257	0					
ANR	1541384	ElseStatement	else		1541257	0					
ANR	1541385	IfStatement	"if ( ! strcmp ( op , ""trap"" ) )"		1541257	0					
ANR	1541386	Condition	"! strcmp ( op , ""trap"" )"	214:12:6257:6276	1541257	0	True				
ANR	1541387	UnaryOperationExpression	"! strcmp ( op , ""trap"" )"		1541257	0					
ANR	1541388	UnaryOperator	!		1541257	0					
ANR	1541389	CallExpression	"strcmp ( op , ""trap"" )"		1541257	1					
ANR	1541390	Callee	strcmp		1541257	0					
ANR	1541391	Identifier	strcmp		1541257	0					
ANR	1541392	ArgumentList	op		1541257	1					
ANR	1541393	Argument	op		1541257	0					
ANR	1541394	Identifier	op		1541257	0					
ANR	1541395	Argument	"""trap"""		1541257	1					
ANR	1541396	PrimaryExpression	"""trap"""		1541257	0					
ANR	1541397	CompoundStatement		18:34:388:388	1541257	1					
ANR	1541398	ExpressionStatement	"r_core_cmd0 ( core , ""wx cc\\n"" )"	215:2:6283:6312	1541257	0	True				
ANR	1541399	CallExpression	"r_core_cmd0 ( core , ""wx cc\\n"" )"		1541257	0					
ANR	1541400	Callee	r_core_cmd0		1541257	0					
ANR	1541401	Identifier	r_core_cmd0		1541257	0					
ANR	1541402	ArgumentList	core		1541257	1					
ANR	1541403	Argument	core		1541257	0					
ANR	1541404	Identifier	core		1541257	0					
ANR	1541405	Argument	"""wx cc\\n"""		1541257	1					
ANR	1541406	PrimaryExpression	"""wx cc\\n"""		1541257	0					
ANR	1541407	ElseStatement	else		1541257	0					
ANR	1541408	IfStatement	"if ( ! strcmp ( op , ""jz"" ) )"		1541257	0					
ANR	1541409	Condition	"! strcmp ( op , ""jz"" )"	216:12:6326:6343	1541257	0	True				
ANR	1541410	UnaryOperationExpression	"! strcmp ( op , ""jz"" )"		1541257	0					
ANR	1541411	UnaryOperator	!		1541257	0					
ANR	1541412	CallExpression	"strcmp ( op , ""jz"" )"		1541257	1					
ANR	1541413	Callee	strcmp		1541257	0					
ANR	1541414	Identifier	strcmp		1541257	0					
ANR	1541415	ArgumentList	op		1541257	1					
ANR	1541416	Argument	op		1541257	0					
ANR	1541417	Identifier	op		1541257	0					
ANR	1541418	Argument	"""jz"""		1541257	1					
ANR	1541419	PrimaryExpression	"""jz"""		1541257	0					
ANR	1541420	CompoundStatement		20:32:455:455	1541257	1					
ANR	1541421	IfStatement	if ( b [ 0 ] == 0x75 )		1541257	0					
ANR	1541422	Condition	b [ 0 ] == 0x75	217:6:6354:6365	1541257	0	True				
ANR	1541423	EqualityExpression	b [ 0 ] == 0x75		1541257	0		==			
ANR	1541424	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541425	Identifier	b		1541257	0					
ANR	1541426	PrimaryExpression	0		1541257	1					
ANR	1541427	PrimaryExpression	0x75		1541257	1					
ANR	1541428	CompoundStatement		21:20:477:477	1541257	1					
ANR	1541429	ExpressionStatement	"r_core_cmd0 ( core , ""wx 74\\n"" )"	218:3:6373:6402	1541257	0	True				
ANR	1541430	CallExpression	"r_core_cmd0 ( core , ""wx 74\\n"" )"		1541257	0					
ANR	1541431	Callee	r_core_cmd0		1541257	0					
ANR	1541432	Identifier	r_core_cmd0		1541257	0					
ANR	1541433	ArgumentList	core		1541257	1					
ANR	1541434	Argument	core		1541257	0					
ANR	1541435	Identifier	core		1541257	0					
ANR	1541436	Argument	"""wx 74\\n"""		1541257	1					
ANR	1541437	PrimaryExpression	"""wx 74\\n"""		1541257	0					
ANR	1541438	ElseStatement	else		1541257	0					
ANR	1541439	CompoundStatement		23:9:522:522	1541257	0					
ANR	1541440	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	220:3:6418:6465	1541257	0	True				
ANR	1541441	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		1541257	0					
ANR	1541442	Callee	eprintf		1541257	0					
ANR	1541443	Identifier	eprintf		1541257	0					
ANR	1541444	ArgumentList	"""Current opcode is not conditional\\n"""		1541257	1					
ANR	1541445	Argument	"""Current opcode is not conditional\\n"""		1541257	0					
ANR	1541446	PrimaryExpression	"""Current opcode is not conditional\\n"""		1541257	0					
ANR	1541447	ReturnStatement	return false ;	221:3:6470:6482	1541257	1	True				
ANR	1541448	Identifier	false		1541257	0					
ANR	1541449	ElseStatement	else		1541257	0					
ANR	1541450	IfStatement	"if ( ! strcmp ( op , ""jinf"" ) )"		1541257	0					
ANR	1541451	Condition	"! strcmp ( op , ""jinf"" )"	223:12:6500:6519	1541257	0	True				
ANR	1541452	UnaryOperationExpression	"! strcmp ( op , ""jinf"" )"		1541257	0					
ANR	1541453	UnaryOperator	!		1541257	0					
ANR	1541454	CallExpression	"strcmp ( op , ""jinf"" )"		1541257	1					
ANR	1541455	Callee	strcmp		1541257	0					
ANR	1541456	Identifier	strcmp		1541257	0					
ANR	1541457	ArgumentList	op		1541257	1					
ANR	1541458	Argument	op		1541257	0					
ANR	1541459	Identifier	op		1541257	0					
ANR	1541460	Argument	"""jinf"""		1541257	1					
ANR	1541461	PrimaryExpression	"""jinf"""		1541257	0					
ANR	1541462	CompoundStatement		27:34:631:631	1541257	1					
ANR	1541463	ExpressionStatement	"r_core_cmd0 ( core , ""wx ebfe\\n"" )"	224:2:6526:6557	1541257	0	True				
ANR	1541464	CallExpression	"r_core_cmd0 ( core , ""wx ebfe\\n"" )"		1541257	0					
ANR	1541465	Callee	r_core_cmd0		1541257	0					
ANR	1541466	Identifier	r_core_cmd0		1541257	0					
ANR	1541467	ArgumentList	core		1541257	1					
ANR	1541468	Argument	core		1541257	0					
ANR	1541469	Identifier	core		1541257	0					
ANR	1541470	Argument	"""wx ebfe\\n"""		1541257	1					
ANR	1541471	PrimaryExpression	"""wx ebfe\\n"""		1541257	0					
ANR	1541472	ElseStatement	else		1541257	0					
ANR	1541473	IfStatement	"if ( ! strcmp ( op , ""jnz"" ) )"		1541257	0					
ANR	1541474	Condition	"! strcmp ( op , ""jnz"" )"	225:12:6571:6589	1541257	0	True				
ANR	1541475	UnaryOperationExpression	"! strcmp ( op , ""jnz"" )"		1541257	0					
ANR	1541476	UnaryOperator	!		1541257	0					
ANR	1541477	CallExpression	"strcmp ( op , ""jnz"" )"		1541257	1					
ANR	1541478	Callee	strcmp		1541257	0					
ANR	1541479	Identifier	strcmp		1541257	0					
ANR	1541480	ArgumentList	op		1541257	1					
ANR	1541481	Argument	op		1541257	0					
ANR	1541482	Identifier	op		1541257	0					
ANR	1541483	Argument	"""jnz"""		1541257	1					
ANR	1541484	PrimaryExpression	"""jnz"""		1541257	0					
ANR	1541485	CompoundStatement		29:33:701:701	1541257	1					
ANR	1541486	IfStatement	if ( b [ 0 ] == 0x74 )		1541257	0					
ANR	1541487	Condition	b [ 0 ] == 0x74	226:6:6600:6611	1541257	0	True				
ANR	1541488	EqualityExpression	b [ 0 ] == 0x74		1541257	0		==			
ANR	1541489	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541490	Identifier	b		1541257	0					
ANR	1541491	PrimaryExpression	0		1541257	1					
ANR	1541492	PrimaryExpression	0x74		1541257	1					
ANR	1541493	CompoundStatement		30:20:723:723	1541257	1					
ANR	1541494	ExpressionStatement	"r_core_cmd0 ( core , ""wx 75\\n"" )"	227:3:6619:6648	1541257	0	True				
ANR	1541495	CallExpression	"r_core_cmd0 ( core , ""wx 75\\n"" )"		1541257	0					
ANR	1541496	Callee	r_core_cmd0		1541257	0					
ANR	1541497	Identifier	r_core_cmd0		1541257	0					
ANR	1541498	ArgumentList	core		1541257	1					
ANR	1541499	Argument	core		1541257	0					
ANR	1541500	Identifier	core		1541257	0					
ANR	1541501	Argument	"""wx 75\\n"""		1541257	1					
ANR	1541502	PrimaryExpression	"""wx 75\\n"""		1541257	0					
ANR	1541503	ElseStatement	else		1541257	0					
ANR	1541504	CompoundStatement		32:9:768:768	1541257	0					
ANR	1541505	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	229:3:6664:6711	1541257	0	True				
ANR	1541506	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		1541257	0					
ANR	1541507	Callee	eprintf		1541257	0					
ANR	1541508	Identifier	eprintf		1541257	0					
ANR	1541509	ArgumentList	"""Current opcode is not conditional\\n"""		1541257	1					
ANR	1541510	Argument	"""Current opcode is not conditional\\n"""		1541257	0					
ANR	1541511	PrimaryExpression	"""Current opcode is not conditional\\n"""		1541257	0					
ANR	1541512	ReturnStatement	return false ;	230:3:6716:6728	1541257	1	True				
ANR	1541513	Identifier	false		1541257	0					
ANR	1541514	ElseStatement	else		1541257	0					
ANR	1541515	IfStatement	"if ( ! strcmp ( op , ""nocj"" ) )"		1541257	0					
ANR	1541516	Condition	"! strcmp ( op , ""nocj"" )"	232:12:6746:6765	1541257	0	True				
ANR	1541517	UnaryOperationExpression	"! strcmp ( op , ""nocj"" )"		1541257	0					
ANR	1541518	UnaryOperator	!		1541257	0					
ANR	1541519	CallExpression	"strcmp ( op , ""nocj"" )"		1541257	1					
ANR	1541520	Callee	strcmp		1541257	0					
ANR	1541521	Identifier	strcmp		1541257	0					
ANR	1541522	ArgumentList	op		1541257	1					
ANR	1541523	Argument	op		1541257	0					
ANR	1541524	Identifier	op		1541257	0					
ANR	1541525	Argument	"""nocj"""		1541257	1					
ANR	1541526	PrimaryExpression	"""nocj"""		1541257	0					
ANR	1541527	CompoundStatement		36:34:877:877	1541257	1					
ANR	1541528	IfStatement	if ( * b == 0xf )		1541257	0					
ANR	1541529	Condition	* b == 0xf	233:6:6776:6784	1541257	0	True				
ANR	1541530	EqualityExpression	* b == 0xf		1541257	0		==			
ANR	1541531	UnaryOperationExpression	* b		1541257	0					
ANR	1541532	UnaryOperator	*		1541257	0					
ANR	1541533	Identifier	b		1541257	1					
ANR	1541534	PrimaryExpression	0xf		1541257	1					
ANR	1541535	CompoundStatement		37:17:896:896	1541257	1					
ANR	1541536	ExpressionStatement	"r_core_cmd0 ( core , ""wx 90e9"" )"	234:3:6792:6821	1541257	0	True				
ANR	1541537	CallExpression	"r_core_cmd0 ( core , ""wx 90e9"" )"		1541257	0					
ANR	1541538	Callee	r_core_cmd0		1541257	0					
ANR	1541539	Identifier	r_core_cmd0		1541257	0					
ANR	1541540	ArgumentList	core		1541257	1					
ANR	1541541	Argument	core		1541257	0					
ANR	1541542	Identifier	core		1541257	0					
ANR	1541543	Argument	"""wx 90e9"""		1541257	1					
ANR	1541544	PrimaryExpression	"""wx 90e9"""		1541257	0					
ANR	1541545	ElseStatement	else		1541257	0					
ANR	1541546	IfStatement	if ( b [ 0 ] >= 0x70 && b [ 0 ] <= 0x7f )		1541257	0					
ANR	1541547	Condition	b [ 0 ] >= 0x70 && b [ 0 ] <= 0x7f	235:13:6836:6863	1541257	0	True				
ANR	1541548	AndExpression	b [ 0 ] >= 0x70 && b [ 0 ] <= 0x7f		1541257	0		&&			
ANR	1541549	RelationalExpression	b [ 0 ] >= 0x70		1541257	0		>=			
ANR	1541550	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541551	Identifier	b		1541257	0					
ANR	1541552	PrimaryExpression	0		1541257	1					
ANR	1541553	PrimaryExpression	0x70		1541257	1					
ANR	1541554	RelationalExpression	b [ 0 ] <= 0x7f		1541257	1		<=			
ANR	1541555	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541556	Identifier	b		1541257	0					
ANR	1541557	PrimaryExpression	0		1541257	1					
ANR	1541558	PrimaryExpression	0x7f		1541257	1					
ANR	1541559	CompoundStatement		39:43:975:975	1541257	1					
ANR	1541560	ExpressionStatement	"r_core_cmd0 ( core , ""wx eb"" )"	236:3:6871:6898	1541257	0	True				
ANR	1541561	CallExpression	"r_core_cmd0 ( core , ""wx eb"" )"		1541257	0					
ANR	1541562	Callee	r_core_cmd0		1541257	0					
ANR	1541563	Identifier	r_core_cmd0		1541257	0					
ANR	1541564	ArgumentList	core		1541257	1					
ANR	1541565	Argument	core		1541257	0					
ANR	1541566	Identifier	core		1541257	0					
ANR	1541567	Argument	"""wx eb"""		1541257	1					
ANR	1541568	PrimaryExpression	"""wx eb"""		1541257	0					
ANR	1541569	ElseStatement	else		1541257	0					
ANR	1541570	CompoundStatement		41:9:1018:1018	1541257	0					
ANR	1541571	ExpressionStatement	"eprintf ( ""Current opcode is not conditional\\n"" )"	238:3:6914:6961	1541257	0	True				
ANR	1541572	CallExpression	"eprintf ( ""Current opcode is not conditional\\n"" )"		1541257	0					
ANR	1541573	Callee	eprintf		1541257	0					
ANR	1541574	Identifier	eprintf		1541257	0					
ANR	1541575	ArgumentList	"""Current opcode is not conditional\\n"""		1541257	1					
ANR	1541576	Argument	"""Current opcode is not conditional\\n"""		1541257	0					
ANR	1541577	PrimaryExpression	"""Current opcode is not conditional\\n"""		1541257	0					
ANR	1541578	ReturnStatement	return false ;	239:3:6966:6978	1541257	1	True				
ANR	1541579	Identifier	false		1541257	0					
ANR	1541580	ElseStatement	else		1541257	0					
ANR	1541581	IfStatement	"if ( ! strcmp ( op , ""recj"" ) )"		1541257	0					
ANR	1541582	Condition	"! strcmp ( op , ""recj"" )"	241:12:6996:7015	1541257	0	True				
ANR	1541583	UnaryOperationExpression	"! strcmp ( op , ""recj"" )"		1541257	0					
ANR	1541584	UnaryOperator	!		1541257	0					
ANR	1541585	CallExpression	"strcmp ( op , ""recj"" )"		1541257	1					
ANR	1541586	Callee	strcmp		1541257	0					
ANR	1541587	Identifier	strcmp		1541257	0					
ANR	1541588	ArgumentList	op		1541257	1					
ANR	1541589	Argument	op		1541257	0					
ANR	1541590	Identifier	op		1541257	0					
ANR	1541591	Argument	"""recj"""		1541257	1					
ANR	1541592	PrimaryExpression	"""recj"""		1541257	0					
ANR	1541593	CompoundStatement		46:2:1131:1156	1541257	1					
ANR	1541594	IdentifierDeclStatement	int is_near = ( * b == 0xf ) ;	242:2:7022:7047	1541257	0	True				
ANR	1541595	IdentifierDecl	is_near = ( * b == 0xf )		1541257	0					
ANR	1541596	IdentifierDeclType	int		1541257	0					
ANR	1541597	Identifier	is_near		1541257	1					
ANR	1541598	AssignmentExpression	is_near = ( * b == 0xf )		1541257	2		=			
ANR	1541599	Identifier	is_near		1541257	0					
ANR	1541600	EqualityExpression	* b == 0xf		1541257	1		==			
ANR	1541601	UnaryOperationExpression	* b		1541257	0					
ANR	1541602	UnaryOperator	*		1541257	0					
ANR	1541603	Identifier	b		1541257	1					
ANR	1541604	PrimaryExpression	0xf		1541257	1					
ANR	1541605	IfStatement	if ( b [ 0 ] < 0x80 && b [ 0 ] >= 0x70 )		1541257	1					
ANR	1541606	Condition	b [ 0 ] < 0x80 && b [ 0 ] >= 0x70	243:6:7055:7081	1541257	0	True				
ANR	1541607	AndExpression	b [ 0 ] < 0x80 && b [ 0 ] >= 0x70		1541257	0		&&			
ANR	1541608	RelationalExpression	b [ 0 ] < 0x80		1541257	0		<			
ANR	1541609	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541610	Identifier	b		1541257	0					
ANR	1541611	PrimaryExpression	0		1541257	1					
ANR	1541612	PrimaryExpression	0x80		1541257	1					
ANR	1541613	RelationalExpression	b [ 0 ] >= 0x70		1541257	1		>=			
ANR	1541614	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541615	Identifier	b		1541257	0					
ANR	1541616	PrimaryExpression	0		1541257	1					
ANR	1541617	PrimaryExpression	0x70		1541257	1					
ANR	1541618	CompoundStatement		47:35:1193:1193	1541257	1					
ANR	1541619	ExpressionStatement	"r_core_cmdf ( core , ""wx %x\\n"" , ( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1 )"	244:4:7149:7208	1541257	0	True				
ANR	1541620	CallExpression	"r_core_cmdf ( core , ""wx %x\\n"" , ( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1 )"		1541257	0					
ANR	1541621	Callee	r_core_cmdf		1541257	0					
ANR	1541622	Identifier	r_core_cmdf		1541257	0					
ANR	1541623	ArgumentList	core		1541257	1					
ANR	1541624	Argument	core		1541257	0					
ANR	1541625	Identifier	core		1541257	0					
ANR	1541626	Argument	"""wx %x\\n"""		1541257	1					
ANR	1541627	PrimaryExpression	"""wx %x\\n"""		1541257	0					
ANR	1541628	Argument	( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1		1541257	2					
ANR	1541629	ConditionalExpression	( b [ 0 ] % 2 ) ? b [ 0 ] - 1 : b [ 0 ] + 1		1541257	0					
ANR	1541630	Condition	b [ 0 ] % 2		1541257	0					
ANR	1541631	MultiplicativeExpression	b [ 0 ] % 2		1541257	0		%			
ANR	1541632	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541633	Identifier	b		1541257	0					
ANR	1541634	PrimaryExpression	0		1541257	1					
ANR	1541635	PrimaryExpression	2		1541257	1					
ANR	1541636	AdditiveExpression	b [ 0 ] - 1		1541257	1		-			
ANR	1541637	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541638	Identifier	b		1541257	0					
ANR	1541639	PrimaryExpression	0		1541257	1					
ANR	1541640	PrimaryExpression	1		1541257	1					
ANR	1541641	AdditiveExpression	b [ 0 ] + 1		1541257	2		+			
ANR	1541642	ArrayIndexing	b [ 0 ]		1541257	0					
ANR	1541643	Identifier	b		1541257	0					
ANR	1541644	PrimaryExpression	0		1541257	1					
ANR	1541645	PrimaryExpression	1		1541257	1					
ANR	1541646	ElseStatement	else		1541257	0					
ANR	1541647	IfStatement	if ( is_near && b [ 1 ] < 0x90 && b [ 1 ] >= 0x80 )		1541257	0					
ANR	1541648	Condition	is_near && b [ 1 ] < 0x90 && b [ 1 ] >= 0x80	245:13:7223:7260	1541257	0	True				
ANR	1541649	AndExpression	is_near && b [ 1 ] < 0x90 && b [ 1 ] >= 0x80		1541257	0		&&			
ANR	1541650	Identifier	is_near		1541257	0					
ANR	1541651	AndExpression	b [ 1 ] < 0x90 && b [ 1 ] >= 0x80		1541257	1		&&			
ANR	1541652	RelationalExpression	b [ 1 ] < 0x90		1541257	0		<			
ANR	1541653	ArrayIndexing	b [ 1 ]		1541257	0					
ANR	1541654	Identifier	b		1541257	0					
ANR	1541655	PrimaryExpression	1		1541257	1					
ANR	1541656	PrimaryExpression	0x90		1541257	1					
ANR	1541657	RelationalExpression	b [ 1 ] >= 0x80		1541257	1		>=			
ANR	1541658	ArrayIndexing	b [ 1 ]		1541257	0					
ANR	1541659	Identifier	b		1541257	0					
ANR	1541660	PrimaryExpression	1		1541257	1					
ANR	1541661	PrimaryExpression	0x80		1541257	1					
ANR	1541662	CompoundStatement		49:53:1372:1372	1541257	1					
ANR	1541663	ExpressionStatement	"r_core_cmdf ( core , ""wx 0f%x\\n"" , ( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1 )"	246:4:7327:7388	1541257	0	True				
ANR	1541664	CallExpression	"r_core_cmdf ( core , ""wx 0f%x\\n"" , ( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1 )"		1541257	0					
ANR	1541665	Callee	r_core_cmdf		1541257	0					
ANR	1541666	Identifier	r_core_cmdf		1541257	0					
ANR	1541667	ArgumentList	core		1541257	1					
ANR	1541668	Argument	core		1541257	0					
ANR	1541669	Identifier	core		1541257	0					
ANR	1541670	Argument	"""wx 0f%x\\n"""		1541257	1					
ANR	1541671	PrimaryExpression	"""wx 0f%x\\n"""		1541257	0					
ANR	1541672	Argument	( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1		1541257	2					
ANR	1541673	ConditionalExpression	( b [ 1 ] % 2 ) ? b [ 1 ] - 1 : b [ 1 ] + 1		1541257	0					
ANR	1541674	Condition	b [ 1 ] % 2		1541257	0					
ANR	1541675	MultiplicativeExpression	b [ 1 ] % 2		1541257	0		%			
ANR	1541676	ArrayIndexing	b [ 1 ]		1541257	0					
ANR	1541677	Identifier	b		1541257	0					
ANR	1541678	PrimaryExpression	1		1541257	1					
ANR	1541679	PrimaryExpression	2		1541257	1					
ANR	1541680	AdditiveExpression	b [ 1 ] - 1		1541257	1		-			
ANR	1541681	ArrayIndexing	b [ 1 ]		1541257	0					
ANR	1541682	Identifier	b		1541257	0					
ANR	1541683	PrimaryExpression	1		1541257	1					
ANR	1541684	PrimaryExpression	1		1541257	1					
ANR	1541685	AdditiveExpression	b [ 1 ] + 1		1541257	2		+			
ANR	1541686	ArrayIndexing	b [ 1 ]		1541257	0					
ANR	1541687	Identifier	b		1541257	0					
ANR	1541688	PrimaryExpression	1		1541257	1					
ANR	1541689	PrimaryExpression	1		1541257	1					
ANR	1541690	ElseStatement	else		1541257	0					
ANR	1541691	CompoundStatement		51:9:1508:1508	1541257	0					
ANR	1541692	ExpressionStatement	"eprintf ( ""Invalid conditional jump opcode\\n"" )"	248:3:7404:7449	1541257	0	True				
ANR	1541693	CallExpression	"eprintf ( ""Invalid conditional jump opcode\\n"" )"		1541257	0					
ANR	1541694	Callee	eprintf		1541257	0					
ANR	1541695	Identifier	eprintf		1541257	0					
ANR	1541696	ArgumentList	"""Invalid conditional jump opcode\\n"""		1541257	1					
ANR	1541697	Argument	"""Invalid conditional jump opcode\\n"""		1541257	0					
ANR	1541698	PrimaryExpression	"""Invalid conditional jump opcode\\n"""		1541257	0					
ANR	1541699	ReturnStatement	return false ;	249:3:7454:7466	1541257	1	True				
ANR	1541700	Identifier	false		1541257	0					
ANR	1541701	ElseStatement	else		1541257	0					
ANR	1541702	IfStatement	"if ( ! strcmp ( op , ""ret1"" ) )"		1541257	0					
ANR	1541703	Condition	"! strcmp ( op , ""ret1"" )"	251:12:7484:7503	1541257	0	True				
ANR	1541704	UnaryOperationExpression	"! strcmp ( op , ""ret1"" )"		1541257	0					
ANR	1541705	UnaryOperator	!		1541257	0					
ANR	1541706	CallExpression	"strcmp ( op , ""ret1"" )"		1541257	1					
ANR	1541707	Callee	strcmp		1541257	0					
ANR	1541708	Identifier	strcmp		1541257	0					
ANR	1541709	ArgumentList	op		1541257	1					
ANR	1541710	Argument	op		1541257	0					
ANR	1541711	Identifier	op		1541257	0					
ANR	1541712	Argument	"""ret1"""		1541257	1					
ANR	1541713	PrimaryExpression	"""ret1"""		1541257	0					
ANR	1541714	CompoundStatement		55:34:1615:1615	1541257	1					
ANR	1541715	ExpressionStatement	"r_core_cmd0 ( core , ""wx c20100\\n"" )"	252:2:7510:7543	1541257	0	True				
ANR	1541716	CallExpression	"r_core_cmd0 ( core , ""wx c20100\\n"" )"		1541257	0					
ANR	1541717	Callee	r_core_cmd0		1541257	0					
ANR	1541718	Identifier	r_core_cmd0		1541257	0					
ANR	1541719	ArgumentList	core		1541257	1					
ANR	1541720	Argument	core		1541257	0					
ANR	1541721	Identifier	core		1541257	0					
ANR	1541722	Argument	"""wx c20100\\n"""		1541257	1					
ANR	1541723	PrimaryExpression	"""wx c20100\\n"""		1541257	0					
ANR	1541724	ElseStatement	else		1541257	0					
ANR	1541725	IfStatement	"if ( ! strcmp ( op , ""ret0"" ) )"		1541257	0					
ANR	1541726	Condition	"! strcmp ( op , ""ret0"" )"	253:12:7557:7576	1541257	0	True				
ANR	1541727	UnaryOperationExpression	"! strcmp ( op , ""ret0"" )"		1541257	0					
ANR	1541728	UnaryOperator	!		1541257	0					
ANR	1541729	CallExpression	"strcmp ( op , ""ret0"" )"		1541257	1					
ANR	1541730	Callee	strcmp		1541257	0					
ANR	1541731	Identifier	strcmp		1541257	0					
ANR	1541732	ArgumentList	op		1541257	1					
ANR	1541733	Argument	op		1541257	0					
ANR	1541734	Identifier	op		1541257	0					
ANR	1541735	Argument	"""ret0"""		1541257	1					
ANR	1541736	PrimaryExpression	"""ret0"""		1541257	0					
ANR	1541737	CompoundStatement		57:34:1688:1688	1541257	1					
ANR	1541738	ExpressionStatement	"r_core_cmd0 ( core , ""wx c20000\\n"" )"	254:2:7583:7616	1541257	0	True				
ANR	1541739	CallExpression	"r_core_cmd0 ( core , ""wx c20000\\n"" )"		1541257	0					
ANR	1541740	Callee	r_core_cmd0		1541257	0					
ANR	1541741	Identifier	r_core_cmd0		1541257	0					
ANR	1541742	ArgumentList	core		1541257	1					
ANR	1541743	Argument	core		1541257	0					
ANR	1541744	Identifier	core		1541257	0					
ANR	1541745	Argument	"""wx c20000\\n"""		1541257	1					
ANR	1541746	PrimaryExpression	"""wx c20000\\n"""		1541257	0					
ANR	1541747	ElseStatement	else		1541257	0					
ANR	1541748	IfStatement	"if ( ! strcmp ( op , ""retn"" ) )"		1541257	0					
ANR	1541749	Condition	"! strcmp ( op , ""retn"" )"	255:12:7630:7649	1541257	0	True				
ANR	1541750	UnaryOperationExpression	"! strcmp ( op , ""retn"" )"		1541257	0					
ANR	1541751	UnaryOperator	!		1541257	0					
ANR	1541752	CallExpression	"strcmp ( op , ""retn"" )"		1541257	1					
ANR	1541753	Callee	strcmp		1541257	0					
ANR	1541754	Identifier	strcmp		1541257	0					
ANR	1541755	ArgumentList	op		1541257	1					
ANR	1541756	Argument	op		1541257	0					
ANR	1541757	Identifier	op		1541257	0					
ANR	1541758	Argument	"""retn"""		1541257	1					
ANR	1541759	PrimaryExpression	"""retn"""		1541257	0					
ANR	1541760	CompoundStatement		59:34:1761:1761	1541257	1					
ANR	1541761	ExpressionStatement	"r_core_cmd0 ( core , ""wx c2ffff\\n"" )"	256:2:7656:7689	1541257	0	True				
ANR	1541762	CallExpression	"r_core_cmd0 ( core , ""wx c2ffff\\n"" )"		1541257	0					
ANR	1541763	Callee	r_core_cmd0		1541257	0					
ANR	1541764	Identifier	r_core_cmd0		1541257	0					
ANR	1541765	ArgumentList	core		1541257	1					
ANR	1541766	Argument	core		1541257	0					
ANR	1541767	Identifier	core		1541257	0					
ANR	1541768	Argument	"""wx c2ffff\\n"""		1541257	1					
ANR	1541769	PrimaryExpression	"""wx c2ffff\\n"""		1541257	0					
ANR	1541770	ElseStatement	else		1541257	0					
ANR	1541771	CompoundStatement		61:8:1808:1808	1541257	0					
ANR	1541772	ExpressionStatement	"eprintf ( ""Invalid operation '%s'\\n"" , op )"	258:2:7703:7743	1541257	0	True				
ANR	1541773	CallExpression	"eprintf ( ""Invalid operation '%s'\\n"" , op )"		1541257	0					
ANR	1541774	Callee	eprintf		1541257	0					
ANR	1541775	Identifier	eprintf		1541257	0					
ANR	1541776	ArgumentList	"""Invalid operation '%s'\\n"""		1541257	1					
ANR	1541777	Argument	"""Invalid operation '%s'\\n"""		1541257	0					
ANR	1541778	PrimaryExpression	"""Invalid operation '%s'\\n"""		1541257	0					
ANR	1541779	Argument	op		1541257	1					
ANR	1541780	Identifier	op		1541257	0					
ANR	1541781	ReturnStatement	return false ;	259:2:7747:7759	1541257	1	True				
ANR	1541782	Identifier	false		1541257	0					
ANR	1541783	ReturnStatement	return true ;	261:1:7765:7776	1541257	3	True				
ANR	1541784	Identifier	true		1541257	0					
ANR	1541785	ReturnType	R_API bool		1541257	1					
ANR	1541786	Identifier	r_core_hack_x86		1541257	2					
ANR	1541787	ParameterList	"RCore * core , const char * op , const RAnalOp * analop"		1541257	3					
ANR	1541788	Parameter	RCore * core	197:27:5838:5848	1541257	0	True				
ANR	1541789	ParameterType	RCore *		1541257	0					
ANR	1541790	Identifier	core		1541257	1					
ANR	1541791	Parameter	const char * op	197:40:5851:5864	1541257	1	True				
ANR	1541792	ParameterType	const char *		1541257	0					
ANR	1541793	Identifier	op		1541257	1					
ANR	1541794	Parameter	const RAnalOp * analop	197:56:5867:5887	1541257	2	True				
ANR	1541795	ParameterType	const RAnalOp *		1541257	0					
ANR	1541796	Identifier	analop		1541257	1					
ANR	1541797	CFGEntryNode	ENTRY		1541257		True				
ANR	1541798	CFGExitNode	EXIT		1541257		True				
ANR	1541799	Symbol	strcmp		1541257						
ANR	1541800	Symbol	op		1541257						
ANR	1541801	Symbol	malloc		1541257						
ANR	1541802	Symbol	b		1541257						
ANR	1541803	Symbol	core -> block		1541257						
ANR	1541804	Symbol	analop -> size		1541257						
ANR	1541805	Symbol	is_near		1541257						
ANR	1541806	Symbol	* core		1541257						
ANR	1541807	Symbol	false		1541257						
ANR	1541808	Symbol	i		1541257						
ANR	1541809	Symbol	* b		1541257						
ANR	1541810	Symbol	str		1541257						
ANR	1541811	Symbol	core		1541257						
ANR	1541812	Symbol	* size		1541257						
ANR	1541813	Symbol	size		1541257						
ANR	1541814	Symbol	* analop		1541257						
ANR	1541815	Symbol	analop		1541257						
ANR	1541816	Symbol	true		1541257						
ANR	1541817	Symbol	* str		1541257						
ANR	1541818	Function	r_core_hack	264:0:7781:8624							
ANR	1541819	FunctionDef	"r_core_hack (RCore * core , const char * op)"		1541818	0					
ANR	1541820	CompoundStatement		264:51:7832:8624	1541818	0					
ANR	1541821	IdentifierDeclStatement	"bool ( * hack ) ( RCore * core , const char * op , const RAnalOp * analop ) = NULL ;"	265:1:7835:7906	1541818	0	True				
ANR	1541822	IdentifierDecl	"( * hack ) ( RCore * core , const char * op , const RAnalOp * analop ) = NULL"		1541818	0					
ANR	1541823	IdentifierDeclType	"bool ( * ) ( RCore * core , const char * op , const RAnalOp * analop )"		1541818	0					
ANR	1541824	Identifier	hack		1541818	1					
ANR	1541825	Identifier	core		1541818	2					
ANR	1541826	Identifier	op		1541818	3					
ANR	1541827	Identifier	analop		1541818	4					
ANR	1541828	AssignmentExpression	"( * hack ) ( RCore * core , const char * op , const RAnalOp * analop ) = NULL"		1541818	5		=			
ANR	1541829	Identifier	NULL		1541818	0					
ANR	1541830	Identifier	NULL		1541818	1					
ANR	1541831	IdentifierDeclStatement	"const char * asmarch = r_config_get ( core -> config , ""asm.arch"" ) ;"	266:1:7909:7970	1541818	1	True				
ANR	1541832	IdentifierDecl	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		1541818	0					
ANR	1541833	IdentifierDeclType	const char *		1541818	0					
ANR	1541834	Identifier	asmarch		1541818	1					
ANR	1541835	AssignmentExpression	"* asmarch = r_config_get ( core -> config , ""asm.arch"" )"		1541818	2		=			
ANR	1541836	Identifier	asmarch		1541818	0					
ANR	1541837	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		1541818	1					
ANR	1541838	Callee	r_config_get		1541818	0					
ANR	1541839	Identifier	r_config_get		1541818	0					
ANR	1541840	ArgumentList	core -> config		1541818	1					
ANR	1541841	Argument	core -> config		1541818	0					
ANR	1541842	PtrMemberAccess	core -> config		1541818	0					
ANR	1541843	Identifier	core		1541818	0					
ANR	1541844	Identifier	config		1541818	1					
ANR	1541845	Argument	"""asm.arch"""		1541818	1					
ANR	1541846	PrimaryExpression	"""asm.arch"""		1541818	0					
ANR	1541847	IdentifierDeclStatement	const int asmbits = core -> assembler -> bits ;	267:1:7973:8014	1541818	2	True				
ANR	1541848	IdentifierDecl	asmbits = core -> assembler -> bits		1541818	0					
ANR	1541849	IdentifierDeclType	const int		1541818	0					
ANR	1541850	Identifier	asmbits		1541818	1					
ANR	1541851	AssignmentExpression	asmbits = core -> assembler -> bits		1541818	2		=			
ANR	1541852	Identifier	asmbits		1541818	0					
ANR	1541853	PtrMemberAccess	core -> assembler -> bits		1541818	1					
ANR	1541854	PtrMemberAccess	core -> assembler		1541818	0					
ANR	1541855	Identifier	core		1541818	0					
ANR	1541856	Identifier	assembler		1541818	1					
ANR	1541857	Identifier	bits		1541818	1					
ANR	1541858	IfStatement	if ( ! asmarch )		1541818	3					
ANR	1541859	Condition	! asmarch	269:5:8022:8029	1541818	0	True				
ANR	1541860	UnaryOperationExpression	! asmarch		1541818	0					
ANR	1541861	UnaryOperator	!		1541818	0					
ANR	1541862	Identifier	asmarch		1541818	1					
ANR	1541863	CompoundStatement		6:15:199:199	1541818	1					
ANR	1541864	ReturnStatement	return false ;	270:2:8036:8048	1541818	0	True				
ANR	1541865	Identifier	false		1541818	0					
ANR	1541866	IfStatement	"if ( strstr ( asmarch , ""x86"" ) )"		1541818	4					
ANR	1541867	Condition	"strstr ( asmarch , ""x86"" )"	272:5:8058:8080	1541818	0	True				
ANR	1541868	CallExpression	"strstr ( asmarch , ""x86"" )"		1541818	0					
ANR	1541869	Callee	strstr		1541818	0					
ANR	1541870	Identifier	strstr		1541818	0					
ANR	1541871	ArgumentList	asmarch		1541818	1					
ANR	1541872	Argument	asmarch		1541818	0					
ANR	1541873	Identifier	asmarch		1541818	0					
ANR	1541874	Argument	"""x86"""		1541818	1					
ANR	1541875	PrimaryExpression	"""x86"""		1541818	0					
ANR	1541876	CompoundStatement		9:30:250:250	1541818	1					
ANR	1541877	ExpressionStatement	hack = r_core_hack_x86	273:2:8087:8109	1541818	0	True				
ANR	1541878	AssignmentExpression	hack = r_core_hack_x86		1541818	0		=			
ANR	1541879	Identifier	hack		1541818	0					
ANR	1541880	Identifier	r_core_hack_x86		1541818	1					
ANR	1541881	ElseStatement	else		1541818	0					
ANR	1541882	IfStatement	"if ( strstr ( asmarch , ""dalvik"" ) )"		1541818	0					
ANR	1541883	Condition	"strstr ( asmarch , ""dalvik"" )"	274:12:8123:8148	1541818	0	True				
ANR	1541884	CallExpression	"strstr ( asmarch , ""dalvik"" )"		1541818	0					
ANR	1541885	Callee	strstr		1541818	0					
ANR	1541886	Identifier	strstr		1541818	0					
ANR	1541887	ArgumentList	asmarch		1541818	1					
ANR	1541888	Argument	asmarch		1541818	0					
ANR	1541889	Identifier	asmarch		1541818	0					
ANR	1541890	Argument	"""dalvik"""		1541818	1					
ANR	1541891	PrimaryExpression	"""dalvik"""		1541818	0					
ANR	1541892	CompoundStatement		11:40:318:318	1541818	1					
ANR	1541893	ExpressionStatement	hack = r_core_hack_dalvik	275:2:8155:8180	1541818	0	True				
ANR	1541894	AssignmentExpression	hack = r_core_hack_dalvik		1541818	0		=			
ANR	1541895	Identifier	hack		1541818	0					
ANR	1541896	Identifier	r_core_hack_dalvik		1541818	1					
ANR	1541897	ElseStatement	else		1541818	0					
ANR	1541898	IfStatement	"if ( strstr ( asmarch , ""arm"" ) )"		1541818	0					
ANR	1541899	Condition	"strstr ( asmarch , ""arm"" )"	276:12:8194:8216	1541818	0	True				
ANR	1541900	CallExpression	"strstr ( asmarch , ""arm"" )"		1541818	0					
ANR	1541901	Callee	strstr		1541818	0					
ANR	1541902	Identifier	strstr		1541818	0					
ANR	1541903	ArgumentList	asmarch		1541818	1					
ANR	1541904	Argument	asmarch		1541818	0					
ANR	1541905	Identifier	asmarch		1541818	0					
ANR	1541906	Argument	"""arm"""		1541818	1					
ANR	1541907	PrimaryExpression	"""arm"""		1541818	0					
ANR	1541908	CompoundStatement		13:37:386:386	1541818	1					
ANR	1541909	IfStatement	if ( asmbits == 64 )		1541818	0					
ANR	1541910	Condition	asmbits == 64	277:6:8227:8239	1541818	0	True				
ANR	1541911	EqualityExpression	asmbits == 64		1541818	0		==			
ANR	1541912	Identifier	asmbits		1541818	0					
ANR	1541913	PrimaryExpression	64		1541818	1					
ANR	1541914	CompoundStatement		14:21:409:409	1541818	1					
ANR	1541915	ExpressionStatement	hack = r_core_hack_arm64	278:3:8247:8271	1541818	0	True				
ANR	1541916	AssignmentExpression	hack = r_core_hack_arm64		1541818	0		=			
ANR	1541917	Identifier	hack		1541818	0					
ANR	1541918	Identifier	r_core_hack_arm64		1541818	1					
ANR	1541919	ElseStatement	else		1541818	0					
ANR	1541920	CompoundStatement		16:9:449:449	1541818	0					
ANR	1541921	ExpressionStatement	hack = r_core_hack_arm	280:3:8287:8309	1541818	0	True				
ANR	1541922	AssignmentExpression	hack = r_core_hack_arm		1541818	0		=			
ANR	1541923	Identifier	hack		1541818	0					
ANR	1541924	Identifier	r_core_hack_arm		1541818	1					
ANR	1541925	ElseStatement	else		1541818	0					
ANR	1541926	CompoundStatement		19:8:490:490	1541818	0					
ANR	1541927	ExpressionStatement	"eprintf ( ""TODO: write hacks are only for x86\\n"" )"	283:2:8327:8375	1541818	0	True				
ANR	1541928	CallExpression	"eprintf ( ""TODO: write hacks are only for x86\\n"" )"		1541818	0					
ANR	1541929	Callee	eprintf		1541818	0					
ANR	1541930	Identifier	eprintf		1541818	0					
ANR	1541931	ArgumentList	"""TODO: write hacks are only for x86\\n"""		1541818	1					
ANR	1541932	Argument	"""TODO: write hacks are only for x86\\n"""		1541818	0					
ANR	1541933	PrimaryExpression	"""TODO: write hacks are only for x86\\n"""		1541818	0					
ANR	1541934	IfStatement	if ( hack )		1541818	5					
ANR	1541935	Condition	hack	285:5:8385:8388	1541818	0	True				
ANR	1541936	Identifier	hack		1541818	0					
ANR	1541937	CompoundStatement		23:2:562:576	1541818	1					
ANR	1541938	IdentifierDeclStatement	RAnalOp analop ;	286:2:8395:8409	1541818	0	True				
ANR	1541939	IdentifierDecl	analop		1541818	0					
ANR	1541940	IdentifierDeclType	RAnalOp		1541818	0					
ANR	1541941	Identifier	analop		1541818	1					
ANR	1541942	IfStatement	"if ( ! r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC ) )"		1541818	1					
ANR	1541943	Condition	"! r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"	287:6:8417:8514	1541818	0	True				
ANR	1541944	UnaryOperationExpression	"! r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		1541818	0					
ANR	1541945	UnaryOperator	!		1541818	0					
ANR	1541946	CallExpression	"r_anal_op ( core -> anal , & analop , core -> offset , core -> block , core -> blocksize , R_ANAL_OP_MASK_BASIC )"		1541818	1					
ANR	1541947	Callee	r_anal_op		1541818	0					
ANR	1541948	Identifier	r_anal_op		1541818	0					
ANR	1541949	ArgumentList	core -> anal		1541818	1					
ANR	1541950	Argument	core -> anal		1541818	0					
ANR	1541951	PtrMemberAccess	core -> anal		1541818	0					
ANR	1541952	Identifier	core		1541818	0					
ANR	1541953	Identifier	anal		1541818	1					
ANR	1541954	Argument	& analop		1541818	1					
ANR	1541955	UnaryOperationExpression	& analop		1541818	0					
ANR	1541956	UnaryOperator	&		1541818	0					
ANR	1541957	Identifier	analop		1541818	1					
ANR	1541958	Argument	core -> offset		1541818	2					
ANR	1541959	PtrMemberAccess	core -> offset		1541818	0					
ANR	1541960	Identifier	core		1541818	0					
ANR	1541961	Identifier	offset		1541818	1					
ANR	1541962	Argument	core -> block		1541818	3					
ANR	1541963	PtrMemberAccess	core -> block		1541818	0					
ANR	1541964	Identifier	core		1541818	0					
ANR	1541965	Identifier	block		1541818	1					
ANR	1541966	Argument	core -> blocksize		1541818	4					
ANR	1541967	PtrMemberAccess	core -> blocksize		1541818	0					
ANR	1541968	Identifier	core		1541818	0					
ANR	1541969	Identifier	blocksize		1541818	1					
ANR	1541970	Argument	R_ANAL_OP_MASK_BASIC		1541818	5					
ANR	1541971	Identifier	R_ANAL_OP_MASK_BASIC		1541818	0					
ANR	1541972	CompoundStatement		24:106:684:684	1541818	1					
ANR	1541973	ExpressionStatement	"eprintf ( ""anal op fail\\n"" )"	288:3:8522:8548	1541818	0	True				
ANR	1541974	CallExpression	"eprintf ( ""anal op fail\\n"" )"		1541818	0					
ANR	1541975	Callee	eprintf		1541818	0					
ANR	1541976	Identifier	eprintf		1541818	0					
ANR	1541977	ArgumentList	"""anal op fail\\n"""		1541818	1					
ANR	1541978	Argument	"""anal op fail\\n"""		1541818	0					
ANR	1541979	PrimaryExpression	"""anal op fail\\n"""		1541818	0					
ANR	1541980	ReturnStatement	return false ;	289:3:8553:8565	1541818	1	True				
ANR	1541981	Identifier	false		1541818	0					
ANR	1541982	ReturnStatement	"return hack ( core , op , & analop ) ;"	291:2:8573:8604	1541818	2	True				
ANR	1541983	CallExpression	"hack ( core , op , & analop )"		1541818	0					
ANR	1541984	Callee	hack		1541818	0					
ANR	1541985	Identifier	hack		1541818	0					
ANR	1541986	ArgumentList	core		1541818	1					
ANR	1541987	Argument	core		1541818	0					
ANR	1541988	Identifier	core		1541818	0					
ANR	1541989	Argument	op		1541818	1					
ANR	1541990	Identifier	op		1541818	0					
ANR	1541991	Argument	& analop		1541818	2					
ANR	1541992	UnaryOperationExpression	& analop		1541818	0					
ANR	1541993	UnaryOperator	&		1541818	0					
ANR	1541994	Identifier	analop		1541818	1					
ANR	1541995	ReturnStatement	return false ;	293:1:8610:8622	1541818	6	True				
ANR	1541996	Identifier	false		1541818	0					
ANR	1541997	ReturnType	R_API int		1541818	1					
ANR	1541998	Identifier	r_core_hack		1541818	2					
ANR	1541999	ParameterList	"RCore * core , const char * op"		1541818	3					
ANR	1542000	Parameter	RCore * core	264:22:7803:7813	1541818	0	True				
ANR	1542001	ParameterType	RCore *		1541818	0					
ANR	1542002	Identifier	core		1541818	1					
ANR	1542003	Parameter	const char * op	264:35:7816:7829	1541818	1	True				
ANR	1542004	ParameterType	const char *		1541818	0					
ANR	1542005	Identifier	op		1541818	1					
ANR	1542006	CFGEntryNode	ENTRY		1541818		True				
ANR	1542007	CFGExitNode	EXIT		1541818		True				
ANR	1542008	Symbol	& analop		1541818						
ANR	1542009	Symbol	* core		1541818						
ANR	1542010	Symbol	r_config_get		1541818						
ANR	1542011	Symbol	core -> assembler -> bits		1541818						
ANR	1542012	Symbol	r_core_hack_x86		1541818						
ANR	1542013	Symbol	core -> assembler		1541818						
ANR	1542014	Symbol	r_core_hack_dalvik		1541818						
ANR	1542015	Symbol	core -> offset		1541818						
ANR	1542016	Symbol	core -> anal		1541818						
ANR	1542017	Symbol	R_ANAL_OP_MASK_BASIC		1541818						
ANR	1542018	Symbol	* core -> assembler		1541818						
ANR	1542019	Symbol	hack		1541818						
ANR	1542020	Symbol	r_core_hack_arm64		1541818						
ANR	1542021	Symbol	* * core		1541818						
ANR	1542022	Symbol	r_anal_op		1541818						
ANR	1542023	Symbol	core -> config		1541818						
ANR	1542024	Symbol	core -> blocksize		1541818						
ANR	1542025	Symbol	op		1541818						
ANR	1542026	Symbol	NULL		1541818						
ANR	1542027	Symbol	core -> block		1541818						
ANR	1542028	Symbol	asmbits		1541818						
ANR	1542029	Symbol	false		1541818						
ANR	1542030	Symbol	core		1541818						
ANR	1542031	Symbol	r_core_hack_arm		1541818						
ANR	1542032	Symbol	strstr		1541818						
ANR	1542033	Symbol	asmarch		1541818						
ANR	1542034	Symbol	analop		1541818						
