command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5932141	File	data/converged/CVE-2019-16718~_radare2/shlr_heap_include_r_jemalloc_internal_hash.h								
ANR	5932142	DeclStmt									
ANR	5932143	Decl							uint32_t	"uint32_t ( const void * key , int len , uint32_t seed )"	hash_x86_32
ANR	5932144	DeclStmt									
ANR	5932145	Decl							void	"void ( const void * key , const int len , uint32_t seed , uint64_t r_out [ 2 ] )"	hash_x86_128
ANR	5932146	DeclStmt									
ANR	5932147	Decl							void	"void ( const void * key , const int len , const uint32_t seed , uint64_t r_out [ 2 ] )"	hash_x64_128
ANR	5932148	DeclStmt									
ANR	5932149	Decl							void	"void ( const void * key , size_t len , const uint32_t seed , size_t r_hash [ 2 ] )"	hash
ANR	5932150	Function	hash_rotl_32	34:0:1245:1346							
ANR	5932151	FunctionDef	"hash_rotl_32 (uint32_t x , int8_t r)"		5932150	0					
ANR	5932152	CompoundStatement		36:0:1305:1346	5932150	0					
ANR	5932153	ReturnStatement	return ( ( x << r ) | ( x >> ( 32 - r ) ) ) ;	38:1:1309:1344	5932150	0	True				
ANR	5932154	InclusiveOrExpression	( x << r ) | ( x >> ( 32 - r ) )		5932150	0		|			
ANR	5932155	ShiftExpression	x << r		5932150	0		<<			
ANR	5932156	Identifier	x		5932150	0					
ANR	5932157	Identifier	r		5932150	1					
ANR	5932158	ShiftExpression	x >> ( 32 - r )		5932150	1		>>			
ANR	5932159	Identifier	x		5932150	0					
ANR	5932160	AdditiveExpression	32 - r		5932150	1		-			
ANR	5932161	PrimaryExpression	32		5932150	0					
ANR	5932162	Identifier	r		5932150	1					
ANR	5932163	ReturnType	JEMALLOC_INLINE uint32_t		5932150	1					
ANR	5932164	Identifier	hash_rotl_32		5932150	2					
ANR	5932165	ParameterList	"uint32_t x , int8_t r"		5932150	3					
ANR	5932166	Parameter	uint32_t x	35:13:1283:1292	5932150	0	True				
ANR	5932167	ParameterType	uint32_t		5932150	0					
ANR	5932168	Identifier	x		5932150	1					
ANR	5932169	Parameter	int8_t r	35:25:1295:1302	5932150	1	True				
ANR	5932170	ParameterType	int8_t		5932150	0					
ANR	5932171	Identifier	r		5932150	1					
ANR	5932172	CFGEntryNode	ENTRY		5932150		True				
ANR	5932173	CFGExitNode	EXIT		5932150		True				
ANR	5932174	Symbol	r		5932150						
ANR	5932175	Symbol	x		5932150						
ANR	5932176	Function	hash_rotl_64	41:0:1349:1450							
ANR	5932177	FunctionDef	"hash_rotl_64 (uint64_t x , int8_t r)"		5932176	0					
ANR	5932178	CompoundStatement		43:0:1409:1450	5932176	0					
ANR	5932179	ReturnStatement	return ( ( x << r ) | ( x >> ( 64 - r ) ) ) ;	45:1:1413:1448	5932176	0	True				
ANR	5932180	InclusiveOrExpression	( x << r ) | ( x >> ( 64 - r ) )		5932176	0		|			
ANR	5932181	ShiftExpression	x << r		5932176	0		<<			
ANR	5932182	Identifier	x		5932176	0					
ANR	5932183	Identifier	r		5932176	1					
ANR	5932184	ShiftExpression	x >> ( 64 - r )		5932176	1		>>			
ANR	5932185	Identifier	x		5932176	0					
ANR	5932186	AdditiveExpression	64 - r		5932176	1		-			
ANR	5932187	PrimaryExpression	64		5932176	0					
ANR	5932188	Identifier	r		5932176	1					
ANR	5932189	ReturnType	JEMALLOC_INLINE uint64_t		5932176	1					
ANR	5932190	Identifier	hash_rotl_64		5932176	2					
ANR	5932191	ParameterList	"uint64_t x , int8_t r"		5932176	3					
ANR	5932192	Parameter	uint64_t x	42:13:1387:1396	5932176	0	True				
ANR	5932193	ParameterType	uint64_t		5932176	0					
ANR	5932194	Identifier	x		5932176	1					
ANR	5932195	Parameter	int8_t r	42:25:1399:1406	5932176	1	True				
ANR	5932196	ParameterType	int8_t		5932176	0					
ANR	5932197	Identifier	r		5932176	1					
ANR	5932198	CFGEntryNode	ENTRY		5932176		True				
ANR	5932199	CFGExitNode	EXIT		5932176		True				
ANR	5932200	Symbol	r		5932176						
ANR	5932201	Symbol	x		5932176						
ANR	5932202	Function	hash_get_block_32	48:0:1453:1721							
ANR	5932203	FunctionDef	"hash_get_block_32 (const uint32_t * p , int i)"		5932202	0					
ANR	5932204	CompoundStatement		50:0:1522:1721	5932202	0					
ANR	5932205	IfStatement	if ( unlikely ( ( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 ) ) != 0 )		5932202	0					
ANR	5932206	Condition	unlikely ( ( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 ) ) != 0	53:5:1560:1609	5932202	0	True				
ANR	5932207	EqualityExpression	unlikely ( ( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 ) ) != 0		5932202	0		!=			
ANR	5932208	CallExpression	unlikely ( ( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 ) )		5932202	0					
ANR	5932209	Callee	unlikely		5932202	0					
ANR	5932210	Identifier	unlikely		5932202	0					
ANR	5932211	ArgumentList	( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 )		5932202	1					
ANR	5932212	Argument	( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 )		5932202	0					
ANR	5932213	BitAndExpression	( uintptr_t ) p & ( sizeof ( uint32_t ) - 1 )		5932202	0		&			
ANR	5932214	CastExpression	( uintptr_t ) p		5932202	0					
ANR	5932215	CastTarget	uintptr_t		5932202	0					
ANR	5932216	Identifier	p		5932202	1					
ANR	5932217	AdditiveExpression	sizeof ( uint32_t ) - 1		5932202	1		-			
ANR	5932218	SizeofExpression	sizeof ( uint32_t )		5932202	0					
ANR	5932219	Sizeof	sizeof		5932202	0					
ANR	5932220	SizeofOperand	uint32_t		5932202	1					
ANR	5932221	PrimaryExpression	1		5932202	1					
ANR	5932222	PrimaryExpression	0		5932202	1					
ANR	5932223	CompoundStatement		5:2:93:105	5932202	1					
ANR	5932224	IdentifierDeclStatement	uint32_t ret ;	54:2:1616:1628	5932202	0	True				
ANR	5932225	IdentifierDecl	ret		5932202	0					
ANR	5932226	IdentifierDeclType	uint32_t		5932202	0					
ANR	5932227	Identifier	ret		5932202	1					
ANR	5932228	ExpressionStatement	"memcpy ( & ret , ( uint8_t * ) ( p + i ) , sizeof ( uint32_t ) )"	56:2:1633:1683	5932202	1	True				
ANR	5932229	CallExpression	"memcpy ( & ret , ( uint8_t * ) ( p + i ) , sizeof ( uint32_t ) )"		5932202	0					
ANR	5932230	Callee	memcpy		5932202	0					
ANR	5932231	Identifier	memcpy		5932202	0					
ANR	5932232	ArgumentList	& ret		5932202	1					
ANR	5932233	Argument	& ret		5932202	0					
ANR	5932234	UnaryOperationExpression	& ret		5932202	0					
ANR	5932235	UnaryOperator	&		5932202	0					
ANR	5932236	Identifier	ret		5932202	1					
ANR	5932237	Argument	( uint8_t * ) ( p + i )		5932202	1					
ANR	5932238	CastExpression	( uint8_t * ) ( p + i )		5932202	0					
ANR	5932239	CastTarget	uint8_t *		5932202	0					
ANR	5932240	AdditiveExpression	p + i		5932202	1		+			
ANR	5932241	Identifier	p		5932202	0					
ANR	5932242	Identifier	i		5932202	1					
ANR	5932243	Argument	sizeof ( uint32_t )		5932202	2					
ANR	5932244	SizeofExpression	sizeof ( uint32_t )		5932202	0					
ANR	5932245	Sizeof	sizeof		5932202	0					
ANR	5932246	SizeofOperand	uint32_t		5932202	1					
ANR	5932247	ReturnStatement	return ( ret ) ;	57:2:1687:1699	5932202	2	True				
ANR	5932248	Identifier	ret		5932202	0					
ANR	5932249	ReturnStatement	return ( p [ i ] ) ;	60:1:1706:1719	5932202	1	True				
ANR	5932250	ArrayIndexing	p [ i ]		5932202	0					
ANR	5932251	Identifier	p		5932202	0					
ANR	5932252	Identifier	i		5932202	1					
ANR	5932253	ReturnType	JEMALLOC_INLINE uint32_t		5932202	1					
ANR	5932254	Identifier	hash_get_block_32		5932202	2					
ANR	5932255	ParameterList	"const uint32_t * p , int i"		5932202	3					
ANR	5932256	Parameter	const uint32_t * p	49:18:1496:1512	5932202	0	True				
ANR	5932257	ParameterType	const uint32_t *		5932202	0					
ANR	5932258	Identifier	p		5932202	1					
ANR	5932259	Parameter	int i	49:37:1515:1519	5932202	1	True				
ANR	5932260	ParameterType	int		5932202	0					
ANR	5932261	Identifier	i		5932202	1					
ANR	5932262	CFGEntryNode	ENTRY		5932202		True				
ANR	5932263	CFGExitNode	EXIT		5932202		True				
ANR	5932264	Symbol	p		5932202						
ANR	5932265	Symbol	ret		5932202						
ANR	5932266	Symbol	& ret		5932202						
ANR	5932267	Symbol	unlikely		5932202						
ANR	5932268	Symbol	* i		5932202						
ANR	5932269	Symbol	i		5932202						
ANR	5932270	Symbol	* p		5932202						
ANR	5932271	Function	hash_get_block_64	63:0:1724:1992							
ANR	5932272	FunctionDef	"hash_get_block_64 (const uint64_t * p , int i)"		5932271	0					
ANR	5932273	CompoundStatement		65:0:1793:1992	5932271	0					
ANR	5932274	IfStatement	if ( unlikely ( ( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 ) ) != 0 )		5932271	0					
ANR	5932275	Condition	unlikely ( ( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 ) ) != 0	68:5:1831:1880	5932271	0	True				
ANR	5932276	EqualityExpression	unlikely ( ( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 ) ) != 0		5932271	0		!=			
ANR	5932277	CallExpression	unlikely ( ( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 ) )		5932271	0					
ANR	5932278	Callee	unlikely		5932271	0					
ANR	5932279	Identifier	unlikely		5932271	0					
ANR	5932280	ArgumentList	( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 )		5932271	1					
ANR	5932281	Argument	( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 )		5932271	0					
ANR	5932282	BitAndExpression	( uintptr_t ) p & ( sizeof ( uint64_t ) - 1 )		5932271	0		&			
ANR	5932283	CastExpression	( uintptr_t ) p		5932271	0					
ANR	5932284	CastTarget	uintptr_t		5932271	0					
ANR	5932285	Identifier	p		5932271	1					
ANR	5932286	AdditiveExpression	sizeof ( uint64_t ) - 1		5932271	1		-			
ANR	5932287	SizeofExpression	sizeof ( uint64_t )		5932271	0					
ANR	5932288	Sizeof	sizeof		5932271	0					
ANR	5932289	SizeofOperand	uint64_t		5932271	1					
ANR	5932290	PrimaryExpression	1		5932271	1					
ANR	5932291	PrimaryExpression	0		5932271	1					
ANR	5932292	CompoundStatement		5:2:93:105	5932271	1					
ANR	5932293	IdentifierDeclStatement	uint64_t ret ;	69:2:1887:1899	5932271	0	True				
ANR	5932294	IdentifierDecl	ret		5932271	0					
ANR	5932295	IdentifierDeclType	uint64_t		5932271	0					
ANR	5932296	Identifier	ret		5932271	1					
ANR	5932297	ExpressionStatement	"memcpy ( & ret , ( uint8_t * ) ( p + i ) , sizeof ( uint64_t ) )"	71:2:1904:1954	5932271	1	True				
ANR	5932298	CallExpression	"memcpy ( & ret , ( uint8_t * ) ( p + i ) , sizeof ( uint64_t ) )"		5932271	0					
ANR	5932299	Callee	memcpy		5932271	0					
ANR	5932300	Identifier	memcpy		5932271	0					
ANR	5932301	ArgumentList	& ret		5932271	1					
ANR	5932302	Argument	& ret		5932271	0					
ANR	5932303	UnaryOperationExpression	& ret		5932271	0					
ANR	5932304	UnaryOperator	&		5932271	0					
ANR	5932305	Identifier	ret		5932271	1					
ANR	5932306	Argument	( uint8_t * ) ( p + i )		5932271	1					
ANR	5932307	CastExpression	( uint8_t * ) ( p + i )		5932271	0					
ANR	5932308	CastTarget	uint8_t *		5932271	0					
ANR	5932309	AdditiveExpression	p + i		5932271	1		+			
ANR	5932310	Identifier	p		5932271	0					
ANR	5932311	Identifier	i		5932271	1					
ANR	5932312	Argument	sizeof ( uint64_t )		5932271	2					
ANR	5932313	SizeofExpression	sizeof ( uint64_t )		5932271	0					
ANR	5932314	Sizeof	sizeof		5932271	0					
ANR	5932315	SizeofOperand	uint64_t		5932271	1					
ANR	5932316	ReturnStatement	return ( ret ) ;	72:2:1958:1970	5932271	2	True				
ANR	5932317	Identifier	ret		5932271	0					
ANR	5932318	ReturnStatement	return ( p [ i ] ) ;	75:1:1977:1990	5932271	1	True				
ANR	5932319	ArrayIndexing	p [ i ]		5932271	0					
ANR	5932320	Identifier	p		5932271	0					
ANR	5932321	Identifier	i		5932271	1					
ANR	5932322	ReturnType	JEMALLOC_INLINE uint64_t		5932271	1					
ANR	5932323	Identifier	hash_get_block_64		5932271	2					
ANR	5932324	ParameterList	"const uint64_t * p , int i"		5932271	3					
ANR	5932325	Parameter	const uint64_t * p	64:18:1767:1783	5932271	0	True				
ANR	5932326	ParameterType	const uint64_t *		5932271	0					
ANR	5932327	Identifier	p		5932271	1					
ANR	5932328	Parameter	int i	64:37:1786:1790	5932271	1	True				
ANR	5932329	ParameterType	int		5932271	0					
ANR	5932330	Identifier	i		5932271	1					
ANR	5932331	CFGEntryNode	ENTRY		5932271		True				
ANR	5932332	CFGExitNode	EXIT		5932271		True				
ANR	5932333	Symbol	p		5932271						
ANR	5932334	Symbol	ret		5932271						
ANR	5932335	Symbol	& ret		5932271						
ANR	5932336	Symbol	unlikely		5932271						
ANR	5932337	Symbol	* i		5932271						
ANR	5932338	Symbol	i		5932271						
ANR	5932339	Symbol	* p		5932271						
ANR	5932340	Function	hash_fmix_32	78:0:1995:2143							
ANR	5932341	FunctionDef	hash_fmix_32 (uint32_t h)		5932340	0					
ANR	5932342	CompoundStatement		80:0:2045:2143	5932340	0					
ANR	5932343	ExpressionStatement	h ^= h >> 16	82:1:2049:2061	5932340	0	True				
ANR	5932344	AssignmentExpression	h ^= h >> 16		5932340	0		^=			
ANR	5932345	Identifier	h		5932340	0					
ANR	5932346	ShiftExpression	h >> 16		5932340	1		>>			
ANR	5932347	Identifier	h		5932340	0					
ANR	5932348	PrimaryExpression	16		5932340	1					
ANR	5932349	ExpressionStatement	h *= 0x85ebca6b	83:1:2064:2079	5932340	1	True				
ANR	5932350	AssignmentExpression	h *= 0x85ebca6b		5932340	0		*=			
ANR	5932351	Identifier	h		5932340	0					
ANR	5932352	PrimaryExpression	0x85ebca6b		5932340	1					
ANR	5932353	ExpressionStatement	h ^= h >> 13	84:1:2082:2094	5932340	2	True				
ANR	5932354	AssignmentExpression	h ^= h >> 13		5932340	0		^=			
ANR	5932355	Identifier	h		5932340	0					
ANR	5932356	ShiftExpression	h >> 13		5932340	1		>>			
ANR	5932357	Identifier	h		5932340	0					
ANR	5932358	PrimaryExpression	13		5932340	1					
ANR	5932359	ExpressionStatement	h *= 0xc2b2ae35	85:1:2097:2112	5932340	3	True				
ANR	5932360	AssignmentExpression	h *= 0xc2b2ae35		5932340	0		*=			
ANR	5932361	Identifier	h		5932340	0					
ANR	5932362	PrimaryExpression	0xc2b2ae35		5932340	1					
ANR	5932363	ExpressionStatement	h ^= h >> 16	86:1:2115:2127	5932340	4	True				
ANR	5932364	AssignmentExpression	h ^= h >> 16		5932340	0		^=			
ANR	5932365	Identifier	h		5932340	0					
ANR	5932366	ShiftExpression	h >> 16		5932340	1		>>			
ANR	5932367	Identifier	h		5932340	0					
ANR	5932368	PrimaryExpression	16		5932340	1					
ANR	5932369	ReturnStatement	return ( h ) ;	88:1:2131:2141	5932340	5	True				
ANR	5932370	Identifier	h		5932340	0					
ANR	5932371	ReturnType	JEMALLOC_INLINE uint32_t		5932340	1					
ANR	5932372	Identifier	hash_fmix_32		5932340	2					
ANR	5932373	ParameterList	uint32_t h		5932340	3					
ANR	5932374	Parameter	uint32_t h	79:13:2033:2042	5932340	0	True				
ANR	5932375	ParameterType	uint32_t		5932340	0					
ANR	5932376	Identifier	h		5932340	1					
ANR	5932377	CFGEntryNode	ENTRY		5932340		True				
ANR	5932378	CFGExitNode	EXIT		5932340		True				
ANR	5932379	Symbol	h		5932340						
ANR	5932380	Function	hash_fmix_64	91:0:2146:2320							
ANR	5932381	FunctionDef	hash_fmix_64 (uint64_t k)		5932380	0					
ANR	5932382	CompoundStatement		93:0:2196:2320	5932380	0					
ANR	5932383	ExpressionStatement	k ^= k >> 33	95:1:2200:2212	5932380	0	True				
ANR	5932384	AssignmentExpression	k ^= k >> 33		5932380	0		^=			
ANR	5932385	Identifier	k		5932380	0					
ANR	5932386	ShiftExpression	k >> 33		5932380	1		>>			
ANR	5932387	Identifier	k		5932380	0					
ANR	5932388	PrimaryExpression	33		5932380	1					
ANR	5932389	ExpressionStatement	k *= KQU ( 0xff51afd7ed558ccd )	96:1:2215:2243	5932380	1	True				
ANR	5932390	AssignmentExpression	k *= KQU ( 0xff51afd7ed558ccd )		5932380	0		*=			
ANR	5932391	Identifier	k		5932380	0					
ANR	5932392	CallExpression	KQU ( 0xff51afd7ed558ccd )		5932380	1					
ANR	5932393	Callee	KQU		5932380	0					
ANR	5932394	Identifier	KQU		5932380	0					
ANR	5932395	ArgumentList	0xff51afd7ed558ccd		5932380	1					
ANR	5932396	Argument	0xff51afd7ed558ccd		5932380	0					
ANR	5932397	PrimaryExpression	0xff51afd7ed558ccd		5932380	0					
ANR	5932398	ExpressionStatement	k ^= k >> 33	97:1:2246:2258	5932380	2	True				
ANR	5932399	AssignmentExpression	k ^= k >> 33		5932380	0		^=			
ANR	5932400	Identifier	k		5932380	0					
ANR	5932401	ShiftExpression	k >> 33		5932380	1		>>			
ANR	5932402	Identifier	k		5932380	0					
ANR	5932403	PrimaryExpression	33		5932380	1					
ANR	5932404	ExpressionStatement	k *= KQU ( 0xc4ceb9fe1a85ec53 )	98:1:2261:2289	5932380	3	True				
ANR	5932405	AssignmentExpression	k *= KQU ( 0xc4ceb9fe1a85ec53 )		5932380	0		*=			
ANR	5932406	Identifier	k		5932380	0					
ANR	5932407	CallExpression	KQU ( 0xc4ceb9fe1a85ec53 )		5932380	1					
ANR	5932408	Callee	KQU		5932380	0					
ANR	5932409	Identifier	KQU		5932380	0					
ANR	5932410	ArgumentList	0xc4ceb9fe1a85ec53		5932380	1					
ANR	5932411	Argument	0xc4ceb9fe1a85ec53		5932380	0					
ANR	5932412	PrimaryExpression	0xc4ceb9fe1a85ec53		5932380	0					
ANR	5932413	ExpressionStatement	k ^= k >> 33	99:1:2292:2304	5932380	4	True				
ANR	5932414	AssignmentExpression	k ^= k >> 33		5932380	0		^=			
ANR	5932415	Identifier	k		5932380	0					
ANR	5932416	ShiftExpression	k >> 33		5932380	1		>>			
ANR	5932417	Identifier	k		5932380	0					
ANR	5932418	PrimaryExpression	33		5932380	1					
ANR	5932419	ReturnStatement	return ( k ) ;	101:1:2308:2318	5932380	5	True				
ANR	5932420	Identifier	k		5932380	0					
ANR	5932421	ReturnType	JEMALLOC_INLINE uint64_t		5932380	1					
ANR	5932422	Identifier	hash_fmix_64		5932380	2					
ANR	5932423	ParameterList	uint64_t k		5932380	3					
ANR	5932424	Parameter	uint64_t k	92:13:2184:2193	5932380	0	True				
ANR	5932425	ParameterType	uint64_t		5932380	0					
ANR	5932426	Identifier	k		5932380	1					
ANR	5932427	CFGEntryNode	ENTRY		5932380		True				
ANR	5932428	CFGExitNode	EXIT		5932380		True				
ANR	5932429	Symbol	k		5932380						
ANR	5932430	Symbol	KQU		5932380						
ANR	5932431	Function	hash_x86_32	104:0:2323:3219							
ANR	5932432	FunctionDef	"hash_x86_32 (const void * key , int len , uint32_t seed)"		5932431	0					
ANR	5932433	CompoundStatement		106:0:2401:3219	5932431	0					
ANR	5932434	IdentifierDeclStatement	const uint8_t * data = ( const uint8_t * ) key ;	107:1:2404:2447	5932431	0	True				
ANR	5932435	IdentifierDecl	* data = ( const uint8_t * ) key		5932431	0					
ANR	5932436	IdentifierDeclType	const uint8_t *		5932431	0					
ANR	5932437	Identifier	data		5932431	1					
ANR	5932438	AssignmentExpression	* data = ( const uint8_t * ) key		5932431	2		=			
ANR	5932439	Identifier	data		5932431	0					
ANR	5932440	CastExpression	( const uint8_t * ) key		5932431	1					
ANR	5932441	CastTarget	const uint8_t *		5932431	0					
ANR	5932442	Identifier	key		5932431	1					
ANR	5932443	IdentifierDeclStatement	const int nblocks = len / 4 ;	108:1:2450:2477	5932431	1	True				
ANR	5932444	IdentifierDecl	nblocks = len / 4		5932431	0					
ANR	5932445	IdentifierDeclType	const int		5932431	0					
ANR	5932446	Identifier	nblocks		5932431	1					
ANR	5932447	AssignmentExpression	nblocks = len / 4		5932431	2		=			
ANR	5932448	Identifier	nblocks		5932431	0					
ANR	5932449	MultiplicativeExpression	len / 4		5932431	1		/			
ANR	5932450	Identifier	len		5932431	0					
ANR	5932451	PrimaryExpression	4		5932431	1					
ANR	5932452	IdentifierDeclStatement	uint32_t h1 = seed ;	110:1:2481:2499	5932431	2	True				
ANR	5932453	IdentifierDecl	h1 = seed		5932431	0					
ANR	5932454	IdentifierDeclType	uint32_t		5932431	0					
ANR	5932455	Identifier	h1		5932431	1					
ANR	5932456	AssignmentExpression	h1 = seed		5932431	2		=			
ANR	5932457	Identifier	seed		5932431	0					
ANR	5932458	Identifier	seed		5932431	1					
ANR	5932459	IdentifierDeclStatement	const uint32_t c1 = 0xcc9e2d51 ;	112:1:2503:2533	5932431	3	True				
ANR	5932460	IdentifierDecl	c1 = 0xcc9e2d51		5932431	0					
ANR	5932461	IdentifierDeclType	const uint32_t		5932431	0					
ANR	5932462	Identifier	c1		5932431	1					
ANR	5932463	AssignmentExpression	c1 = 0xcc9e2d51		5932431	2		=			
ANR	5932464	Identifier	c1		5932431	0					
ANR	5932465	PrimaryExpression	0xcc9e2d51		5932431	1					
ANR	5932466	IdentifierDeclStatement	const uint32_t c2 = 0x1b873593 ;	113:1:2536:2566	5932431	4	True				
ANR	5932467	IdentifierDecl	c2 = 0x1b873593		5932431	0					
ANR	5932468	IdentifierDeclType	const uint32_t		5932431	0					
ANR	5932469	Identifier	c2		5932431	1					
ANR	5932470	AssignmentExpression	c2 = 0x1b873593		5932431	2		=			
ANR	5932471	Identifier	c2		5932431	0					
ANR	5932472	PrimaryExpression	0x1b873593		5932431	1					
ANR	5932473	CompoundStatement		13:2:250:255	5932431	5					
ANR	5932474	IdentifierDeclStatement	const uint32_t * blocks = ( const uint32_t * ) ( data + nblocks * 4 ) ;	117:2:2586:2648	5932431	0	True				
ANR	5932475	IdentifierDecl	* blocks = ( const uint32_t * ) ( data + nblocks * 4 )		5932431	0					
ANR	5932476	IdentifierDeclType	const uint32_t *		5932431	0					
ANR	5932477	Identifier	blocks		5932431	1					
ANR	5932478	AssignmentExpression	* blocks = ( const uint32_t * ) ( data + nblocks * 4 )		5932431	2		=			
ANR	5932479	Identifier	blocks		5932431	0					
ANR	5932480	CastExpression	( const uint32_t * ) ( data + nblocks * 4 )		5932431	1					
ANR	5932481	CastTarget	const uint32_t *		5932431	0					
ANR	5932482	AdditiveExpression	data + nblocks * 4		5932431	1		+			
ANR	5932483	Identifier	data		5932431	0					
ANR	5932484	MultiplicativeExpression	nblocks * 4		5932431	1		*			
ANR	5932485	Identifier	nblocks		5932431	0					
ANR	5932486	PrimaryExpression	4		5932431	1					
ANR	5932487	IdentifierDeclStatement	int i ;	118:2:2652:2657	5932431	1	True				
ANR	5932488	IdentifierDecl	i		5932431	0					
ANR	5932489	IdentifierDeclType	int		5932431	0					
ANR	5932490	Identifier	i		5932431	1					
ANR	5932491	ForStatement	for ( i = - nblocks ; i ; i ++ )		5932431	2					
ANR	5932492	ForInit	i = - nblocks ;	120:7:2667:2679	5932431	0	True				
ANR	5932493	AssignmentExpression	i = - nblocks		5932431	0		=			
ANR	5932494	Identifier	i		5932431	0					
ANR	5932495	UnaryOperationExpression	- nblocks		5932431	1					
ANR	5932496	UnaryOperator	-		5932431	0					
ANR	5932497	Identifier	nblocks		5932431	1					
ANR	5932498	Condition	i	120:21:2681:2681	5932431	1	True				
ANR	5932499	Identifier	i		5932431	0					
ANR	5932500	PostIncDecOperationExpression	i ++	120:24:2684:2686	5932431	2	True				
ANR	5932501	Identifier	i		5932431	0					
ANR	5932502	IncDec	++		5932431	1					
ANR	5932503	CompoundStatement		16:3:292:334	5932431	3					
ANR	5932504	IdentifierDeclStatement	"uint32_t k1 = hash_get_block_32 ( blocks , i ) ;"	121:3:2694:2736	5932431	0	True				
ANR	5932505	IdentifierDecl	"k1 = hash_get_block_32 ( blocks , i )"		5932431	0					
ANR	5932506	IdentifierDeclType	uint32_t		5932431	0					
ANR	5932507	Identifier	k1		5932431	1					
ANR	5932508	AssignmentExpression	"k1 = hash_get_block_32 ( blocks , i )"		5932431	2		=			
ANR	5932509	Identifier	k1		5932431	0					
ANR	5932510	CallExpression	"hash_get_block_32 ( blocks , i )"		5932431	1					
ANR	5932511	Callee	hash_get_block_32		5932431	0					
ANR	5932512	Identifier	hash_get_block_32		5932431	0					
ANR	5932513	ArgumentList	blocks		5932431	1					
ANR	5932514	Argument	blocks		5932431	0					
ANR	5932515	Identifier	blocks		5932431	0					
ANR	5932516	Argument	i		5932431	1					
ANR	5932517	Identifier	i		5932431	0					
ANR	5932518	ExpressionStatement	k1 *= c1	123:3:2742:2750	5932431	1	True				
ANR	5932519	AssignmentExpression	k1 *= c1		5932431	0		*=			
ANR	5932520	Identifier	k1		5932431	0					
ANR	5932521	Identifier	c1		5932431	1					
ANR	5932522	ExpressionStatement	"k1 = hash_rotl_32 ( k1 , 15 )"	124:3:2755:2780	5932431	2	True				
ANR	5932523	AssignmentExpression	"k1 = hash_rotl_32 ( k1 , 15 )"		5932431	0		=			
ANR	5932524	Identifier	k1		5932431	0					
ANR	5932525	CallExpression	"hash_rotl_32 ( k1 , 15 )"		5932431	1					
ANR	5932526	Callee	hash_rotl_32		5932431	0					
ANR	5932527	Identifier	hash_rotl_32		5932431	0					
ANR	5932528	ArgumentList	k1		5932431	1					
ANR	5932529	Argument	k1		5932431	0					
ANR	5932530	Identifier	k1		5932431	0					
ANR	5932531	Argument	15		5932431	1					
ANR	5932532	PrimaryExpression	15		5932431	0					
ANR	5932533	ExpressionStatement	k1 *= c2	125:3:2785:2793	5932431	3	True				
ANR	5932534	AssignmentExpression	k1 *= c2		5932431	0		*=			
ANR	5932535	Identifier	k1		5932431	0					
ANR	5932536	Identifier	c2		5932431	1					
ANR	5932537	ExpressionStatement	h1 ^= k1	127:3:2799:2807	5932431	4	True				
ANR	5932538	AssignmentExpression	h1 ^= k1		5932431	0		^=			
ANR	5932539	Identifier	h1		5932431	0					
ANR	5932540	Identifier	k1		5932431	1					
ANR	5932541	ExpressionStatement	"h1 = hash_rotl_32 ( h1 , 13 )"	128:3:2812:2837	5932431	5	True				
ANR	5932542	AssignmentExpression	"h1 = hash_rotl_32 ( h1 , 13 )"		5932431	0		=			
ANR	5932543	Identifier	h1		5932431	0					
ANR	5932544	CallExpression	"hash_rotl_32 ( h1 , 13 )"		5932431	1					
ANR	5932545	Callee	hash_rotl_32		5932431	0					
ANR	5932546	Identifier	hash_rotl_32		5932431	0					
ANR	5932547	ArgumentList	h1		5932431	1					
ANR	5932548	Argument	h1		5932431	0					
ANR	5932549	Identifier	h1		5932431	0					
ANR	5932550	Argument	13		5932431	1					
ANR	5932551	PrimaryExpression	13		5932431	0					
ANR	5932552	ExpressionStatement	h1 = h1 * 5 + 0xe6546b64	129:3:2842:2864	5932431	6	True				
ANR	5932553	AssignmentExpression	h1 = h1 * 5 + 0xe6546b64		5932431	0		=			
ANR	5932554	Identifier	h1		5932431	0					
ANR	5932555	AdditiveExpression	h1 * 5 + 0xe6546b64		5932431	1		+			
ANR	5932556	MultiplicativeExpression	h1 * 5		5932431	0		*			
ANR	5932557	Identifier	h1		5932431	0					
ANR	5932558	PrimaryExpression	5		5932431	1					
ANR	5932559	PrimaryExpression	0xe6546b64		5932431	1					
ANR	5932560	CompoundStatement		32:2:552:567	5932431	6					
ANR	5932561	IdentifierDeclStatement	const uint8_t * tail = ( const uint8_t * ) ( data + nblocks * 4 ) ;	135:2:2891:2949	5932431	0	True				
ANR	5932562	IdentifierDecl	* tail = ( const uint8_t * ) ( data + nblocks * 4 )		5932431	0					
ANR	5932563	IdentifierDeclType	const uint8_t *		5932431	0					
ANR	5932564	Identifier	tail		5932431	1					
ANR	5932565	AssignmentExpression	* tail = ( const uint8_t * ) ( data + nblocks * 4 )		5932431	2		=			
ANR	5932566	Identifier	tail		5932431	0					
ANR	5932567	CastExpression	( const uint8_t * ) ( data + nblocks * 4 )		5932431	1					
ANR	5932568	CastTarget	const uint8_t *		5932431	0					
ANR	5932569	AdditiveExpression	data + nblocks * 4		5932431	1		+			
ANR	5932570	Identifier	data		5932431	0					
ANR	5932571	MultiplicativeExpression	nblocks * 4		5932431	1		*			
ANR	5932572	Identifier	nblocks		5932431	0					
ANR	5932573	PrimaryExpression	4		5932431	1					
ANR	5932574	IdentifierDeclStatement	uint32_t k1 = 0 ;	137:2:2954:2969	5932431	1	True				
ANR	5932575	IdentifierDecl	k1 = 0		5932431	0					
ANR	5932576	IdentifierDeclType	uint32_t		5932431	0					
ANR	5932577	Identifier	k1		5932431	1					
ANR	5932578	AssignmentExpression	k1 = 0		5932431	2		=			
ANR	5932579	Identifier	k1		5932431	0					
ANR	5932580	PrimaryExpression	0		5932431	1					
ANR	5932581	SwitchStatement	switch ( len & 3 )		5932431	2					
ANR	5932582	Condition	len & 3	139:10:2982:2988	5932431	0	True				
ANR	5932583	BitAndExpression	len & 3		5932431	0		&			
ANR	5932584	Identifier	len		5932431	0					
ANR	5932585	PrimaryExpression	3		5932431	1					
ANR	5932586	CompoundStatement		34:19:589:589	5932431	1					
ANR	5932587	Label	case 3 :	140:2:2995:3001	5932431	0	True				
ANR	5932588	ExpressionStatement	k1 ^= tail [ 2 ] << 16	140:10:3003:3022	5932431	1	True				
ANR	5932589	AssignmentExpression	k1 ^= tail [ 2 ] << 16		5932431	0		^=			
ANR	5932590	Identifier	k1		5932431	0					
ANR	5932591	ShiftExpression	tail [ 2 ] << 16		5932431	1		<<			
ANR	5932592	ArrayIndexing	tail [ 2 ]		5932431	0					
ANR	5932593	Identifier	tail		5932431	0					
ANR	5932594	PrimaryExpression	2		5932431	1					
ANR	5932595	PrimaryExpression	16		5932431	1					
ANR	5932596	Label	case 2 :	141:2:3026:3032	5932431	2	True				
ANR	5932597	ExpressionStatement	k1 ^= tail [ 1 ] << 8	141:10:3034:3052	5932431	3	True				
ANR	5932598	AssignmentExpression	k1 ^= tail [ 1 ] << 8		5932431	0		^=			
ANR	5932599	Identifier	k1		5932431	0					
ANR	5932600	ShiftExpression	tail [ 1 ] << 8		5932431	1		<<			
ANR	5932601	ArrayIndexing	tail [ 1 ]		5932431	0					
ANR	5932602	Identifier	tail		5932431	0					
ANR	5932603	PrimaryExpression	1		5932431	1					
ANR	5932604	PrimaryExpression	8		5932431	1					
ANR	5932605	Label	case 1 :	142:2:3056:3062	5932431	4	True				
ANR	5932606	ExpressionStatement	k1 ^= tail [ 0 ]	142:10:3064:3077	5932431	5	True				
ANR	5932607	AssignmentExpression	k1 ^= tail [ 0 ]		5932431	0		^=			
ANR	5932608	Identifier	k1		5932431	0					
ANR	5932609	ArrayIndexing	tail [ 0 ]		5932431	1					
ANR	5932610	Identifier	tail		5932431	0					
ANR	5932611	PrimaryExpression	0		5932431	1					
ANR	5932612	ExpressionStatement	k1 *= c1	142:25:3079:3087	5932431	6	True				
ANR	5932613	AssignmentExpression	k1 *= c1		5932431	0		*=			
ANR	5932614	Identifier	k1		5932431	0					
ANR	5932615	Identifier	c1		5932431	1					
ANR	5932616	ExpressionStatement	"k1 = hash_rotl_32 ( k1 , 15 )"	142:35:3089:3114	5932431	7	True				
ANR	5932617	AssignmentExpression	"k1 = hash_rotl_32 ( k1 , 15 )"		5932431	0		=			
ANR	5932618	Identifier	k1		5932431	0					
ANR	5932619	CallExpression	"hash_rotl_32 ( k1 , 15 )"		5932431	1					
ANR	5932620	Callee	hash_rotl_32		5932431	0					
ANR	5932621	Identifier	hash_rotl_32		5932431	0					
ANR	5932622	ArgumentList	k1		5932431	1					
ANR	5932623	Argument	k1		5932431	0					
ANR	5932624	Identifier	k1		5932431	0					
ANR	5932625	Argument	15		5932431	1					
ANR	5932626	PrimaryExpression	15		5932431	0					
ANR	5932627	ExpressionStatement	k1 *= c2	143:3:3119:3127	5932431	8	True				
ANR	5932628	AssignmentExpression	k1 *= c2		5932431	0		*=			
ANR	5932629	Identifier	k1		5932431	0					
ANR	5932630	Identifier	c2		5932431	1					
ANR	5932631	ExpressionStatement	h1 ^= k1	143:13:3129:3137	5932431	9	True				
ANR	5932632	AssignmentExpression	h1 ^= k1		5932431	0		^=			
ANR	5932633	Identifier	h1		5932431	0					
ANR	5932634	Identifier	k1		5932431	1					
ANR	5932635	ExpressionStatement	h1 ^= len	148:1:3168:3177	5932431	7	True				
ANR	5932636	AssignmentExpression	h1 ^= len		5932431	0		^=			
ANR	5932637	Identifier	h1		5932431	0					
ANR	5932638	Identifier	len		5932431	1					
ANR	5932639	ExpressionStatement	h1 = hash_fmix_32 ( h1 )	150:1:3181:3202	5932431	8	True				
ANR	5932640	AssignmentExpression	h1 = hash_fmix_32 ( h1 )		5932431	0		=			
ANR	5932641	Identifier	h1		5932431	0					
ANR	5932642	CallExpression	hash_fmix_32 ( h1 )		5932431	1					
ANR	5932643	Callee	hash_fmix_32		5932431	0					
ANR	5932644	Identifier	hash_fmix_32		5932431	0					
ANR	5932645	ArgumentList	h1		5932431	1					
ANR	5932646	Argument	h1		5932431	0					
ANR	5932647	Identifier	h1		5932431	0					
ANR	5932648	ReturnStatement	return ( h1 ) ;	152:1:3206:3217	5932431	9	True				
ANR	5932649	Identifier	h1		5932431	0					
ANR	5932650	ReturnType	JEMALLOC_INLINE uint32_t		5932431	1					
ANR	5932651	Identifier	hash_x86_32		5932431	2					
ANR	5932652	ParameterList	"const void * key , int len , uint32_t seed"		5932431	3					
ANR	5932653	Parameter	const void * key	105:12:2360:2374	5932431	0	True				
ANR	5932654	ParameterType	const void *		5932431	0					
ANR	5932655	Identifier	key		5932431	1					
ANR	5932656	Parameter	int len	105:29:2377:2383	5932431	1	True				
ANR	5932657	ParameterType	int		5932431	0					
ANR	5932658	Identifier	len		5932431	1					
ANR	5932659	Parameter	uint32_t seed	105:38:2386:2398	5932431	2	True				
ANR	5932660	ParameterType	uint32_t		5932431	0					
ANR	5932661	Identifier	seed		5932431	1					
ANR	5932662	CFGEntryNode	ENTRY		5932431		True				
ANR	5932663	CFGExitNode	EXIT		5932431		True				
ANR	5932664	Symbol	* tail		5932431						
ANR	5932665	Symbol	seed		5932431						
ANR	5932666	Symbol	data		5932431						
ANR	5932667	Symbol	blocks		5932431						
ANR	5932668	Symbol	k1		5932431						
ANR	5932669	Symbol	tail		5932431						
ANR	5932670	Symbol	h1		5932431						
ANR	5932671	Symbol	i		5932431						
ANR	5932672	Symbol	hash_rotl_32		5932431						
ANR	5932673	Symbol	c1		5932431						
ANR	5932674	Symbol	c2		5932431						
ANR	5932675	Symbol	len		5932431						
ANR	5932676	Symbol	nblocks		5932431						
ANR	5932677	Symbol	key		5932431						
ANR	5932678	Symbol	hash_get_block_32		5932431						
ANR	5932679	Symbol	hash_fmix_32		5932431						
ANR	5932680	Function	hash_x86_128	155:0:3222:5783							
ANR	5932681	FunctionDef	"hash_x86_128 (const void * key , const int len , uint32_t seed , uint64_t r_out [ 2 ])"		5932680	0					
ANR	5932682	CompoundStatement		158:0:3333:5783	5932680	0					
ANR	5932683	IdentifierDeclStatement	const uint8_t * data = ( const uint8_t * ) key ;	159:1:3336:3380	5932680	0	True				
ANR	5932684	IdentifierDecl	* data = ( const uint8_t * ) key		5932680	0					
ANR	5932685	IdentifierDeclType	const uint8_t *		5932680	0					
ANR	5932686	Identifier	data		5932680	1					
ANR	5932687	AssignmentExpression	* data = ( const uint8_t * ) key		5932680	2		=			
ANR	5932688	Identifier	data		5932680	0					
ANR	5932689	CastExpression	( const uint8_t * ) key		5932680	1					
ANR	5932690	CastTarget	const uint8_t *		5932680	0					
ANR	5932691	Identifier	key		5932680	1					
ANR	5932692	IdentifierDeclStatement	const int nblocks = len / 16 ;	160:1:3383:3411	5932680	1	True				
ANR	5932693	IdentifierDecl	nblocks = len / 16		5932680	0					
ANR	5932694	IdentifierDeclType	const int		5932680	0					
ANR	5932695	Identifier	nblocks		5932680	1					
ANR	5932696	AssignmentExpression	nblocks = len / 16		5932680	2		=			
ANR	5932697	Identifier	nblocks		5932680	0					
ANR	5932698	MultiplicativeExpression	len / 16		5932680	1		/			
ANR	5932699	Identifier	len		5932680	0					
ANR	5932700	PrimaryExpression	16		5932680	1					
ANR	5932701	IdentifierDeclStatement	uint32_t h1 = seed ;	162:1:3415:3433	5932680	2	True				
ANR	5932702	IdentifierDecl	h1 = seed		5932680	0					
ANR	5932703	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932704	Identifier	h1		5932680	1					
ANR	5932705	AssignmentExpression	h1 = seed		5932680	2		=			
ANR	5932706	Identifier	seed		5932680	0					
ANR	5932707	Identifier	seed		5932680	1					
ANR	5932708	IdentifierDeclStatement	uint32_t h2 = seed ;	163:1:3436:3454	5932680	3	True				
ANR	5932709	IdentifierDecl	h2 = seed		5932680	0					
ANR	5932710	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932711	Identifier	h2		5932680	1					
ANR	5932712	AssignmentExpression	h2 = seed		5932680	2		=			
ANR	5932713	Identifier	seed		5932680	0					
ANR	5932714	Identifier	seed		5932680	1					
ANR	5932715	IdentifierDeclStatement	uint32_t h3 = seed ;	164:1:3457:3475	5932680	4	True				
ANR	5932716	IdentifierDecl	h3 = seed		5932680	0					
ANR	5932717	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932718	Identifier	h3		5932680	1					
ANR	5932719	AssignmentExpression	h3 = seed		5932680	2		=			
ANR	5932720	Identifier	seed		5932680	0					
ANR	5932721	Identifier	seed		5932680	1					
ANR	5932722	IdentifierDeclStatement	uint32_t h4 = seed ;	165:1:3478:3496	5932680	5	True				
ANR	5932723	IdentifierDecl	h4 = seed		5932680	0					
ANR	5932724	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932725	Identifier	h4		5932680	1					
ANR	5932726	AssignmentExpression	h4 = seed		5932680	2		=			
ANR	5932727	Identifier	seed		5932680	0					
ANR	5932728	Identifier	seed		5932680	1					
ANR	5932729	IdentifierDeclStatement	const uint32_t c1 = 0x239b961b ;	167:1:3500:3530	5932680	6	True				
ANR	5932730	IdentifierDecl	c1 = 0x239b961b		5932680	0					
ANR	5932731	IdentifierDeclType	const uint32_t		5932680	0					
ANR	5932732	Identifier	c1		5932680	1					
ANR	5932733	AssignmentExpression	c1 = 0x239b961b		5932680	2		=			
ANR	5932734	Identifier	c1		5932680	0					
ANR	5932735	PrimaryExpression	0x239b961b		5932680	1					
ANR	5932736	IdentifierDeclStatement	const uint32_t c2 = 0xab0e9789 ;	168:1:3533:3563	5932680	7	True				
ANR	5932737	IdentifierDecl	c2 = 0xab0e9789		5932680	0					
ANR	5932738	IdentifierDeclType	const uint32_t		5932680	0					
ANR	5932739	Identifier	c2		5932680	1					
ANR	5932740	AssignmentExpression	c2 = 0xab0e9789		5932680	2		=			
ANR	5932741	Identifier	c2		5932680	0					
ANR	5932742	PrimaryExpression	0xab0e9789		5932680	1					
ANR	5932743	IdentifierDeclStatement	const uint32_t c3 = 0x38b34ae5 ;	169:1:3566:3596	5932680	8	True				
ANR	5932744	IdentifierDecl	c3 = 0x38b34ae5		5932680	0					
ANR	5932745	IdentifierDeclType	const uint32_t		5932680	0					
ANR	5932746	Identifier	c3		5932680	1					
ANR	5932747	AssignmentExpression	c3 = 0x38b34ae5		5932680	2		=			
ANR	5932748	Identifier	c3		5932680	0					
ANR	5932749	PrimaryExpression	0x38b34ae5		5932680	1					
ANR	5932750	IdentifierDeclStatement	const uint32_t c4 = 0xa1e38b93 ;	170:1:3599:3629	5932680	9	True				
ANR	5932751	IdentifierDecl	c4 = 0xa1e38b93		5932680	0					
ANR	5932752	IdentifierDeclType	const uint32_t		5932680	0					
ANR	5932753	Identifier	c4		5932680	1					
ANR	5932754	AssignmentExpression	c4 = 0xa1e38b93		5932680	2		=			
ANR	5932755	Identifier	c4		5932680	0					
ANR	5932756	PrimaryExpression	0xa1e38b93		5932680	1					
ANR	5932757	CompoundStatement		18:2:382:387	5932680	10					
ANR	5932758	IdentifierDeclStatement	const uint32_t * blocks = ( const uint32_t * ) ( data + nblocks * 16 ) ;	174:2:3649:3712	5932680	0	True				
ANR	5932759	IdentifierDecl	* blocks = ( const uint32_t * ) ( data + nblocks * 16 )		5932680	0					
ANR	5932760	IdentifierDeclType	const uint32_t *		5932680	0					
ANR	5932761	Identifier	blocks		5932680	1					
ANR	5932762	AssignmentExpression	* blocks = ( const uint32_t * ) ( data + nblocks * 16 )		5932680	2		=			
ANR	5932763	Identifier	blocks		5932680	0					
ANR	5932764	CastExpression	( const uint32_t * ) ( data + nblocks * 16 )		5932680	1					
ANR	5932765	CastTarget	const uint32_t *		5932680	0					
ANR	5932766	AdditiveExpression	data + nblocks * 16		5932680	1		+			
ANR	5932767	Identifier	data		5932680	0					
ANR	5932768	MultiplicativeExpression	nblocks * 16		5932680	1		*			
ANR	5932769	Identifier	nblocks		5932680	0					
ANR	5932770	PrimaryExpression	16		5932680	1					
ANR	5932771	IdentifierDeclStatement	int i ;	175:2:3716:3721	5932680	1	True				
ANR	5932772	IdentifierDecl	i		5932680	0					
ANR	5932773	IdentifierDeclType	int		5932680	0					
ANR	5932774	Identifier	i		5932680	1					
ANR	5932775	ForStatement	for ( i = - nblocks ; i ; i ++ )		5932680	2					
ANR	5932776	ForInit	i = - nblocks ;	177:7:3731:3743	5932680	0	True				
ANR	5932777	AssignmentExpression	i = - nblocks		5932680	0		=			
ANR	5932778	Identifier	i		5932680	0					
ANR	5932779	UnaryOperationExpression	- nblocks		5932680	1					
ANR	5932780	UnaryOperator	-		5932680	0					
ANR	5932781	Identifier	nblocks		5932680	1					
ANR	5932782	Condition	i	177:21:3745:3745	5932680	1	True				
ANR	5932783	Identifier	i		5932680	0					
ANR	5932784	PostIncDecOperationExpression	i ++	177:24:3748:3750	5932680	2	True				
ANR	5932785	Identifier	i		5932680	0					
ANR	5932786	IncDec	++		5932680	1					
ANR	5932787	CompoundStatement		24:3:583:631	5932680	3					
ANR	5932788	IdentifierDeclStatement	"uint32_t k1 = hash_get_block_32 ( blocks , i * 4 + 0 ) ;"	178:3:3758:3806	5932680	0	True				
ANR	5932789	IdentifierDecl	"k1 = hash_get_block_32 ( blocks , i * 4 + 0 )"		5932680	0					
ANR	5932790	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932791	Identifier	k1		5932680	1					
ANR	5932792	AssignmentExpression	"k1 = hash_get_block_32 ( blocks , i * 4 + 0 )"		5932680	2		=			
ANR	5932793	Identifier	k1		5932680	0					
ANR	5932794	CallExpression	"hash_get_block_32 ( blocks , i * 4 + 0 )"		5932680	1					
ANR	5932795	Callee	hash_get_block_32		5932680	0					
ANR	5932796	Identifier	hash_get_block_32		5932680	0					
ANR	5932797	ArgumentList	blocks		5932680	1					
ANR	5932798	Argument	blocks		5932680	0					
ANR	5932799	Identifier	blocks		5932680	0					
ANR	5932800	Argument	i * 4 + 0		5932680	1					
ANR	5932801	AdditiveExpression	i * 4 + 0		5932680	0		+			
ANR	5932802	MultiplicativeExpression	i * 4		5932680	0		*			
ANR	5932803	Identifier	i		5932680	0					
ANR	5932804	PrimaryExpression	4		5932680	1					
ANR	5932805	PrimaryExpression	0		5932680	1					
ANR	5932806	IdentifierDeclStatement	"uint32_t k2 = hash_get_block_32 ( blocks , i * 4 + 1 ) ;"	179:3:3811:3859	5932680	1	True				
ANR	5932807	IdentifierDecl	"k2 = hash_get_block_32 ( blocks , i * 4 + 1 )"		5932680	0					
ANR	5932808	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932809	Identifier	k2		5932680	1					
ANR	5932810	AssignmentExpression	"k2 = hash_get_block_32 ( blocks , i * 4 + 1 )"		5932680	2		=			
ANR	5932811	Identifier	k2		5932680	0					
ANR	5932812	CallExpression	"hash_get_block_32 ( blocks , i * 4 + 1 )"		5932680	1					
ANR	5932813	Callee	hash_get_block_32		5932680	0					
ANR	5932814	Identifier	hash_get_block_32		5932680	0					
ANR	5932815	ArgumentList	blocks		5932680	1					
ANR	5932816	Argument	blocks		5932680	0					
ANR	5932817	Identifier	blocks		5932680	0					
ANR	5932818	Argument	i * 4 + 1		5932680	1					
ANR	5932819	AdditiveExpression	i * 4 + 1		5932680	0		+			
ANR	5932820	MultiplicativeExpression	i * 4		5932680	0		*			
ANR	5932821	Identifier	i		5932680	0					
ANR	5932822	PrimaryExpression	4		5932680	1					
ANR	5932823	PrimaryExpression	1		5932680	1					
ANR	5932824	IdentifierDeclStatement	"uint32_t k3 = hash_get_block_32 ( blocks , i * 4 + 2 ) ;"	180:3:3864:3912	5932680	2	True				
ANR	5932825	IdentifierDecl	"k3 = hash_get_block_32 ( blocks , i * 4 + 2 )"		5932680	0					
ANR	5932826	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932827	Identifier	k3		5932680	1					
ANR	5932828	AssignmentExpression	"k3 = hash_get_block_32 ( blocks , i * 4 + 2 )"		5932680	2		=			
ANR	5932829	Identifier	k3		5932680	0					
ANR	5932830	CallExpression	"hash_get_block_32 ( blocks , i * 4 + 2 )"		5932680	1					
ANR	5932831	Callee	hash_get_block_32		5932680	0					
ANR	5932832	Identifier	hash_get_block_32		5932680	0					
ANR	5932833	ArgumentList	blocks		5932680	1					
ANR	5932834	Argument	blocks		5932680	0					
ANR	5932835	Identifier	blocks		5932680	0					
ANR	5932836	Argument	i * 4 + 2		5932680	1					
ANR	5932837	AdditiveExpression	i * 4 + 2		5932680	0		+			
ANR	5932838	MultiplicativeExpression	i * 4		5932680	0		*			
ANR	5932839	Identifier	i		5932680	0					
ANR	5932840	PrimaryExpression	4		5932680	1					
ANR	5932841	PrimaryExpression	2		5932680	1					
ANR	5932842	IdentifierDeclStatement	"uint32_t k4 = hash_get_block_32 ( blocks , i * 4 + 3 ) ;"	181:3:3917:3965	5932680	3	True				
ANR	5932843	IdentifierDecl	"k4 = hash_get_block_32 ( blocks , i * 4 + 3 )"		5932680	0					
ANR	5932844	IdentifierDeclType	uint32_t		5932680	0					
ANR	5932845	Identifier	k4		5932680	1					
ANR	5932846	AssignmentExpression	"k4 = hash_get_block_32 ( blocks , i * 4 + 3 )"		5932680	2		=			
ANR	5932847	Identifier	k4		5932680	0					
ANR	5932848	CallExpression	"hash_get_block_32 ( blocks , i * 4 + 3 )"		5932680	1					
ANR	5932849	Callee	hash_get_block_32		5932680	0					
ANR	5932850	Identifier	hash_get_block_32		5932680	0					
ANR	5932851	ArgumentList	blocks		5932680	1					
ANR	5932852	Argument	blocks		5932680	0					
ANR	5932853	Identifier	blocks		5932680	0					
ANR	5932854	Argument	i * 4 + 3		5932680	1					
ANR	5932855	AdditiveExpression	i * 4 + 3		5932680	0		+			
ANR	5932856	MultiplicativeExpression	i * 4		5932680	0		*			
ANR	5932857	Identifier	i		5932680	0					
ANR	5932858	PrimaryExpression	4		5932680	1					
ANR	5932859	PrimaryExpression	3		5932680	1					
ANR	5932860	ExpressionStatement	k1 *= c1	183:3:3971:3979	5932680	4	True				
ANR	5932861	AssignmentExpression	k1 *= c1		5932680	0		*=			
ANR	5932862	Identifier	k1		5932680	0					
ANR	5932863	Identifier	c1		5932680	1					
ANR	5932864	ExpressionStatement	"k1 = hash_rotl_32 ( k1 , 15 )"	183:13:3981:4006	5932680	5	True				
ANR	5932865	AssignmentExpression	"k1 = hash_rotl_32 ( k1 , 15 )"		5932680	0		=			
ANR	5932866	Identifier	k1		5932680	0					
ANR	5932867	CallExpression	"hash_rotl_32 ( k1 , 15 )"		5932680	1					
ANR	5932868	Callee	hash_rotl_32		5932680	0					
ANR	5932869	Identifier	hash_rotl_32		5932680	0					
ANR	5932870	ArgumentList	k1		5932680	1					
ANR	5932871	Argument	k1		5932680	0					
ANR	5932872	Identifier	k1		5932680	0					
ANR	5932873	Argument	15		5932680	1					
ANR	5932874	PrimaryExpression	15		5932680	0					
ANR	5932875	ExpressionStatement	k1 *= c2	183:40:4008:4016	5932680	6	True				
ANR	5932876	AssignmentExpression	k1 *= c2		5932680	0		*=			
ANR	5932877	Identifier	k1		5932680	0					
ANR	5932878	Identifier	c2		5932680	1					
ANR	5932879	ExpressionStatement	h1 ^= k1	183:50:4018:4026	5932680	7	True				
ANR	5932880	AssignmentExpression	h1 ^= k1		5932680	0		^=			
ANR	5932881	Identifier	h1		5932680	0					
ANR	5932882	Identifier	k1		5932680	1					
ANR	5932883	ExpressionStatement	"h1 = hash_rotl_32 ( h1 , 19 )"	185:3:4032:4057	5932680	8	True				
ANR	5932884	AssignmentExpression	"h1 = hash_rotl_32 ( h1 , 19 )"		5932680	0		=			
ANR	5932885	Identifier	h1		5932680	0					
ANR	5932886	CallExpression	"hash_rotl_32 ( h1 , 19 )"		5932680	1					
ANR	5932887	Callee	hash_rotl_32		5932680	0					
ANR	5932888	Identifier	hash_rotl_32		5932680	0					
ANR	5932889	ArgumentList	h1		5932680	1					
ANR	5932890	Argument	h1		5932680	0					
ANR	5932891	Identifier	h1		5932680	0					
ANR	5932892	Argument	19		5932680	1					
ANR	5932893	PrimaryExpression	19		5932680	0					
ANR	5932894	ExpressionStatement	h1 += h2	185:30:4059:4067	5932680	9	True				
ANR	5932895	AssignmentExpression	h1 += h2		5932680	0		+=			
ANR	5932896	Identifier	h1		5932680	0					
ANR	5932897	Identifier	h2		5932680	1					
ANR	5932898	ExpressionStatement	h1 = h1 * 5 + 0x561ccd1b	186:3:4072:4094	5932680	10	True				
ANR	5932899	AssignmentExpression	h1 = h1 * 5 + 0x561ccd1b		5932680	0		=			
ANR	5932900	Identifier	h1		5932680	0					
ANR	5932901	AdditiveExpression	h1 * 5 + 0x561ccd1b		5932680	1		+			
ANR	5932902	MultiplicativeExpression	h1 * 5		5932680	0		*			
ANR	5932903	Identifier	h1		5932680	0					
ANR	5932904	PrimaryExpression	5		5932680	1					
ANR	5932905	PrimaryExpression	0x561ccd1b		5932680	1					
ANR	5932906	ExpressionStatement	k2 *= c2	188:3:4100:4108	5932680	11	True				
ANR	5932907	AssignmentExpression	k2 *= c2		5932680	0		*=			
ANR	5932908	Identifier	k2		5932680	0					
ANR	5932909	Identifier	c2		5932680	1					
ANR	5932910	ExpressionStatement	"k2 = hash_rotl_32 ( k2 , 16 )"	188:13:4110:4135	5932680	12	True				
ANR	5932911	AssignmentExpression	"k2 = hash_rotl_32 ( k2 , 16 )"		5932680	0		=			
ANR	5932912	Identifier	k2		5932680	0					
ANR	5932913	CallExpression	"hash_rotl_32 ( k2 , 16 )"		5932680	1					
ANR	5932914	Callee	hash_rotl_32		5932680	0					
ANR	5932915	Identifier	hash_rotl_32		5932680	0					
ANR	5932916	ArgumentList	k2		5932680	1					
ANR	5932917	Argument	k2		5932680	0					
ANR	5932918	Identifier	k2		5932680	0					
ANR	5932919	Argument	16		5932680	1					
ANR	5932920	PrimaryExpression	16		5932680	0					
ANR	5932921	ExpressionStatement	k2 *= c3	188:40:4137:4145	5932680	13	True				
ANR	5932922	AssignmentExpression	k2 *= c3		5932680	0		*=			
ANR	5932923	Identifier	k2		5932680	0					
ANR	5932924	Identifier	c3		5932680	1					
ANR	5932925	ExpressionStatement	h2 ^= k2	188:50:4147:4155	5932680	14	True				
ANR	5932926	AssignmentExpression	h2 ^= k2		5932680	0		^=			
ANR	5932927	Identifier	h2		5932680	0					
ANR	5932928	Identifier	k2		5932680	1					
ANR	5932929	ExpressionStatement	"h2 = hash_rotl_32 ( h2 , 17 )"	190:3:4161:4186	5932680	15	True				
ANR	5932930	AssignmentExpression	"h2 = hash_rotl_32 ( h2 , 17 )"		5932680	0		=			
ANR	5932931	Identifier	h2		5932680	0					
ANR	5932932	CallExpression	"hash_rotl_32 ( h2 , 17 )"		5932680	1					
ANR	5932933	Callee	hash_rotl_32		5932680	0					
ANR	5932934	Identifier	hash_rotl_32		5932680	0					
ANR	5932935	ArgumentList	h2		5932680	1					
ANR	5932936	Argument	h2		5932680	0					
ANR	5932937	Identifier	h2		5932680	0					
ANR	5932938	Argument	17		5932680	1					
ANR	5932939	PrimaryExpression	17		5932680	0					
ANR	5932940	ExpressionStatement	h2 += h3	190:30:4188:4196	5932680	16	True				
ANR	5932941	AssignmentExpression	h2 += h3		5932680	0		+=			
ANR	5932942	Identifier	h2		5932680	0					
ANR	5932943	Identifier	h3		5932680	1					
ANR	5932944	ExpressionStatement	h2 = h2 * 5 + 0x0bcaa747	191:3:4201:4223	5932680	17	True				
ANR	5932945	AssignmentExpression	h2 = h2 * 5 + 0x0bcaa747		5932680	0		=			
ANR	5932946	Identifier	h2		5932680	0					
ANR	5932947	AdditiveExpression	h2 * 5 + 0x0bcaa747		5932680	1		+			
ANR	5932948	MultiplicativeExpression	h2 * 5		5932680	0		*			
ANR	5932949	Identifier	h2		5932680	0					
ANR	5932950	PrimaryExpression	5		5932680	1					
ANR	5932951	PrimaryExpression	0x0bcaa747		5932680	1					
ANR	5932952	ExpressionStatement	k3 *= c3	193:3:4229:4237	5932680	18	True				
ANR	5932953	AssignmentExpression	k3 *= c3		5932680	0		*=			
ANR	5932954	Identifier	k3		5932680	0					
ANR	5932955	Identifier	c3		5932680	1					
ANR	5932956	ExpressionStatement	"k3 = hash_rotl_32 ( k3 , 17 )"	193:13:4239:4264	5932680	19	True				
ANR	5932957	AssignmentExpression	"k3 = hash_rotl_32 ( k3 , 17 )"		5932680	0		=			
ANR	5932958	Identifier	k3		5932680	0					
ANR	5932959	CallExpression	"hash_rotl_32 ( k3 , 17 )"		5932680	1					
ANR	5932960	Callee	hash_rotl_32		5932680	0					
ANR	5932961	Identifier	hash_rotl_32		5932680	0					
ANR	5932962	ArgumentList	k3		5932680	1					
ANR	5932963	Argument	k3		5932680	0					
ANR	5932964	Identifier	k3		5932680	0					
ANR	5932965	Argument	17		5932680	1					
ANR	5932966	PrimaryExpression	17		5932680	0					
ANR	5932967	ExpressionStatement	k3 *= c4	193:40:4266:4274	5932680	20	True				
ANR	5932968	AssignmentExpression	k3 *= c4		5932680	0		*=			
ANR	5932969	Identifier	k3		5932680	0					
ANR	5932970	Identifier	c4		5932680	1					
ANR	5932971	ExpressionStatement	h3 ^= k3	193:50:4276:4284	5932680	21	True				
ANR	5932972	AssignmentExpression	h3 ^= k3		5932680	0		^=			
ANR	5932973	Identifier	h3		5932680	0					
ANR	5932974	Identifier	k3		5932680	1					
ANR	5932975	ExpressionStatement	"h3 = hash_rotl_32 ( h3 , 15 )"	195:3:4290:4315	5932680	22	True				
ANR	5932976	AssignmentExpression	"h3 = hash_rotl_32 ( h3 , 15 )"		5932680	0		=			
ANR	5932977	Identifier	h3		5932680	0					
ANR	5932978	CallExpression	"hash_rotl_32 ( h3 , 15 )"		5932680	1					
ANR	5932979	Callee	hash_rotl_32		5932680	0					
ANR	5932980	Identifier	hash_rotl_32		5932680	0					
ANR	5932981	ArgumentList	h3		5932680	1					
ANR	5932982	Argument	h3		5932680	0					
ANR	5932983	Identifier	h3		5932680	0					
ANR	5932984	Argument	15		5932680	1					
ANR	5932985	PrimaryExpression	15		5932680	0					
ANR	5932986	ExpressionStatement	h3 += h4	195:30:4317:4325	5932680	23	True				
ANR	5932987	AssignmentExpression	h3 += h4		5932680	0		+=			
ANR	5932988	Identifier	h3		5932680	0					
ANR	5932989	Identifier	h4		5932680	1					
ANR	5932990	ExpressionStatement	h3 = h3 * 5 + 0x96cd1c35	196:3:4330:4352	5932680	24	True				
ANR	5932991	AssignmentExpression	h3 = h3 * 5 + 0x96cd1c35		5932680	0		=			
ANR	5932992	Identifier	h3		5932680	0					
ANR	5932993	AdditiveExpression	h3 * 5 + 0x96cd1c35		5932680	1		+			
ANR	5932994	MultiplicativeExpression	h3 * 5		5932680	0		*			
ANR	5932995	Identifier	h3		5932680	0					
ANR	5932996	PrimaryExpression	5		5932680	1					
ANR	5932997	PrimaryExpression	0x96cd1c35		5932680	1					
ANR	5932998	ExpressionStatement	k4 *= c4	198:3:4358:4366	5932680	25	True				
ANR	5932999	AssignmentExpression	k4 *= c4		5932680	0		*=			
ANR	5933000	Identifier	k4		5932680	0					
ANR	5933001	Identifier	c4		5932680	1					
ANR	5933002	ExpressionStatement	"k4 = hash_rotl_32 ( k4 , 18 )"	198:13:4368:4393	5932680	26	True				
ANR	5933003	AssignmentExpression	"k4 = hash_rotl_32 ( k4 , 18 )"		5932680	0		=			
ANR	5933004	Identifier	k4		5932680	0					
ANR	5933005	CallExpression	"hash_rotl_32 ( k4 , 18 )"		5932680	1					
ANR	5933006	Callee	hash_rotl_32		5932680	0					
ANR	5933007	Identifier	hash_rotl_32		5932680	0					
ANR	5933008	ArgumentList	k4		5932680	1					
ANR	5933009	Argument	k4		5932680	0					
ANR	5933010	Identifier	k4		5932680	0					
ANR	5933011	Argument	18		5932680	1					
ANR	5933012	PrimaryExpression	18		5932680	0					
ANR	5933013	ExpressionStatement	k4 *= c1	198:40:4395:4403	5932680	27	True				
ANR	5933014	AssignmentExpression	k4 *= c1		5932680	0		*=			
ANR	5933015	Identifier	k4		5932680	0					
ANR	5933016	Identifier	c1		5932680	1					
ANR	5933017	ExpressionStatement	h4 ^= k4	198:50:4405:4413	5932680	28	True				
ANR	5933018	AssignmentExpression	h4 ^= k4		5932680	0		^=			
ANR	5933019	Identifier	h4		5932680	0					
ANR	5933020	Identifier	k4		5932680	1					
ANR	5933021	ExpressionStatement	"h4 = hash_rotl_32 ( h4 , 13 )"	200:3:4419:4444	5932680	29	True				
ANR	5933022	AssignmentExpression	"h4 = hash_rotl_32 ( h4 , 13 )"		5932680	0		=			
ANR	5933023	Identifier	h4		5932680	0					
ANR	5933024	CallExpression	"hash_rotl_32 ( h4 , 13 )"		5932680	1					
ANR	5933025	Callee	hash_rotl_32		5932680	0					
ANR	5933026	Identifier	hash_rotl_32		5932680	0					
ANR	5933027	ArgumentList	h4		5932680	1					
ANR	5933028	Argument	h4		5932680	0					
ANR	5933029	Identifier	h4		5932680	0					
ANR	5933030	Argument	13		5932680	1					
ANR	5933031	PrimaryExpression	13		5932680	0					
ANR	5933032	ExpressionStatement	h4 += h1	200:30:4446:4454	5932680	30	True				
ANR	5933033	AssignmentExpression	h4 += h1		5932680	0		+=			
ANR	5933034	Identifier	h4		5932680	0					
ANR	5933035	Identifier	h1		5932680	1					
ANR	5933036	ExpressionStatement	h4 = h4 * 5 + 0x32ac3b17	201:3:4459:4481	5932680	31	True				
ANR	5933037	AssignmentExpression	h4 = h4 * 5 + 0x32ac3b17		5932680	0		=			
ANR	5933038	Identifier	h4		5932680	0					
ANR	5933039	AdditiveExpression	h4 * 5 + 0x32ac3b17		5932680	1		+			
ANR	5933040	MultiplicativeExpression	h4 * 5		5932680	0		*			
ANR	5933041	Identifier	h4		5932680	0					
ANR	5933042	PrimaryExpression	5		5932680	1					
ANR	5933043	PrimaryExpression	0x32ac3b17		5932680	1					
ANR	5933044	CompoundStatement		54:2:1294:1309	5932680	11					
ANR	5933045	IdentifierDeclStatement	const uint8_t * tail = ( const uint8_t * ) ( data + nblocks * 16 ) ;	207:2:4508:4567	5932680	0	True				
ANR	5933046	IdentifierDecl	* tail = ( const uint8_t * ) ( data + nblocks * 16 )		5932680	0					
ANR	5933047	IdentifierDeclType	const uint8_t *		5932680	0					
ANR	5933048	Identifier	tail		5932680	1					
ANR	5933049	AssignmentExpression	* tail = ( const uint8_t * ) ( data + nblocks * 16 )		5932680	2		=			
ANR	5933050	Identifier	tail		5932680	0					
ANR	5933051	CastExpression	( const uint8_t * ) ( data + nblocks * 16 )		5932680	1					
ANR	5933052	CastTarget	const uint8_t *		5932680	0					
ANR	5933053	AdditiveExpression	data + nblocks * 16		5932680	1		+			
ANR	5933054	Identifier	data		5932680	0					
ANR	5933055	MultiplicativeExpression	nblocks * 16		5932680	1		*			
ANR	5933056	Identifier	nblocks		5932680	0					
ANR	5933057	PrimaryExpression	16		5932680	1					
ANR	5933058	IdentifierDeclStatement	uint32_t k1 = 0 ;	208:2:4571:4586	5932680	1	True				
ANR	5933059	IdentifierDecl	k1 = 0		5932680	0					
ANR	5933060	IdentifierDeclType	uint32_t		5932680	0					
ANR	5933061	Identifier	k1		5932680	1					
ANR	5933062	AssignmentExpression	k1 = 0		5932680	2		=			
ANR	5933063	Identifier	k1		5932680	0					
ANR	5933064	PrimaryExpression	0		5932680	1					
ANR	5933065	IdentifierDeclStatement	uint32_t k2 = 0 ;	209:2:4590:4605	5932680	2	True				
ANR	5933066	IdentifierDecl	k2 = 0		5932680	0					
ANR	5933067	IdentifierDeclType	uint32_t		5932680	0					
ANR	5933068	Identifier	k2		5932680	1					
ANR	5933069	AssignmentExpression	k2 = 0		5932680	2		=			
ANR	5933070	Identifier	k2		5932680	0					
ANR	5933071	PrimaryExpression	0		5932680	1					
ANR	5933072	IdentifierDeclStatement	uint32_t k3 = 0 ;	210:2:4609:4624	5932680	3	True				
ANR	5933073	IdentifierDecl	k3 = 0		5932680	0					
ANR	5933074	IdentifierDeclType	uint32_t		5932680	0					
ANR	5933075	Identifier	k3		5932680	1					
ANR	5933076	AssignmentExpression	k3 = 0		5932680	2		=			
ANR	5933077	Identifier	k3		5932680	0					
ANR	5933078	PrimaryExpression	0		5932680	1					
ANR	5933079	IdentifierDeclStatement	uint32_t k4 = 0 ;	211:2:4628:4643	5932680	4	True				
ANR	5933080	IdentifierDecl	k4 = 0		5932680	0					
ANR	5933081	IdentifierDeclType	uint32_t		5932680	0					
ANR	5933082	Identifier	k4		5932680	1					
ANR	5933083	AssignmentExpression	k4 = 0		5932680	2		=			
ANR	5933084	Identifier	k4		5932680	0					
ANR	5933085	PrimaryExpression	0		5932680	1					
ANR	5933086	SwitchStatement	switch ( len & 15 )		5932680	5					
ANR	5933087	Condition	len & 15	213:10:4656:4663	5932680	0	True				
ANR	5933088	BitAndExpression	len & 15		5932680	0		&			
ANR	5933089	Identifier	len		5932680	0					
ANR	5933090	PrimaryExpression	15		5932680	1					
ANR	5933091	CompoundStatement		56:20:1332:1332	5932680	1					
ANR	5933092	Label	case 15 :	214:2:4670:4677	5932680	0	True				
ANR	5933093	ExpressionStatement	k4 ^= tail [ 14 ] << 16	214:11:4679:4699	5932680	1	True				
ANR	5933094	AssignmentExpression	k4 ^= tail [ 14 ] << 16		5932680	0		^=			
ANR	5933095	Identifier	k4		5932680	0					
ANR	5933096	ShiftExpression	tail [ 14 ] << 16		5932680	1		<<			
ANR	5933097	ArrayIndexing	tail [ 14 ]		5932680	0					
ANR	5933098	Identifier	tail		5932680	0					
ANR	5933099	PrimaryExpression	14		5932680	1					
ANR	5933100	PrimaryExpression	16		5932680	1					
ANR	5933101	Label	case 14 :	215:2:4703:4710	5932680	2	True				
ANR	5933102	ExpressionStatement	k4 ^= tail [ 13 ] << 8	215:11:4712:4731	5932680	3	True				
ANR	5933103	AssignmentExpression	k4 ^= tail [ 13 ] << 8		5932680	0		^=			
ANR	5933104	Identifier	k4		5932680	0					
ANR	5933105	ShiftExpression	tail [ 13 ] << 8		5932680	1		<<			
ANR	5933106	ArrayIndexing	tail [ 13 ]		5932680	0					
ANR	5933107	Identifier	tail		5932680	0					
ANR	5933108	PrimaryExpression	13		5932680	1					
ANR	5933109	PrimaryExpression	8		5932680	1					
ANR	5933110	Label	case 13 :	216:2:4735:4742	5932680	4	True				
ANR	5933111	ExpressionStatement	k4 ^= tail [ 12 ] << 0	216:11:4744:4763	5932680	5	True				
ANR	5933112	AssignmentExpression	k4 ^= tail [ 12 ] << 0		5932680	0		^=			
ANR	5933113	Identifier	k4		5932680	0					
ANR	5933114	ShiftExpression	tail [ 12 ] << 0		5932680	1		<<			
ANR	5933115	ArrayIndexing	tail [ 12 ]		5932680	0					
ANR	5933116	Identifier	tail		5932680	0					
ANR	5933117	PrimaryExpression	12		5932680	1					
ANR	5933118	PrimaryExpression	0		5932680	1					
ANR	5933119	ExpressionStatement	k4 *= c4	217:3:4768:4776	5932680	6	True				
ANR	5933120	AssignmentExpression	k4 *= c4		5932680	0		*=			
ANR	5933121	Identifier	k4		5932680	0					
ANR	5933122	Identifier	c4		5932680	1					
ANR	5933123	ExpressionStatement	"k4 = hash_rotl_32 ( k4 , 18 )"	217:13:4778:4803	5932680	7	True				
ANR	5933124	AssignmentExpression	"k4 = hash_rotl_32 ( k4 , 18 )"		5932680	0		=			
ANR	5933125	Identifier	k4		5932680	0					
ANR	5933126	CallExpression	"hash_rotl_32 ( k4 , 18 )"		5932680	1					
ANR	5933127	Callee	hash_rotl_32		5932680	0					
ANR	5933128	Identifier	hash_rotl_32		5932680	0					
ANR	5933129	ArgumentList	k4		5932680	1					
ANR	5933130	Argument	k4		5932680	0					
ANR	5933131	Identifier	k4		5932680	0					
ANR	5933132	Argument	18		5932680	1					
ANR	5933133	PrimaryExpression	18		5932680	0					
ANR	5933134	ExpressionStatement	k4 *= c1	217:40:4805:4813	5932680	8	True				
ANR	5933135	AssignmentExpression	k4 *= c1		5932680	0		*=			
ANR	5933136	Identifier	k4		5932680	0					
ANR	5933137	Identifier	c1		5932680	1					
ANR	5933138	ExpressionStatement	h4 ^= k4	217:50:4815:4823	5932680	9	True				
ANR	5933139	AssignmentExpression	h4 ^= k4		5932680	0		^=			
ANR	5933140	Identifier	h4		5932680	0					
ANR	5933141	Identifier	k4		5932680	1					
ANR	5933142	Label	case 12 :	219:2:4828:4835	5932680	10	True				
ANR	5933143	ExpressionStatement	k3 ^= tail [ 11 ] << 24	219:11:4837:4857	5932680	11	True				
ANR	5933144	AssignmentExpression	k3 ^= tail [ 11 ] << 24		5932680	0		^=			
ANR	5933145	Identifier	k3		5932680	0					
ANR	5933146	ShiftExpression	tail [ 11 ] << 24		5932680	1		<<			
ANR	5933147	ArrayIndexing	tail [ 11 ]		5932680	0					
ANR	5933148	Identifier	tail		5932680	0					
ANR	5933149	PrimaryExpression	11		5932680	1					
ANR	5933150	PrimaryExpression	24		5932680	1					
ANR	5933151	Label	case 11 :	220:2:4861:4868	5932680	12	True				
ANR	5933152	ExpressionStatement	k3 ^= tail [ 10 ] << 16	220:11:4870:4890	5932680	13	True				
ANR	5933153	AssignmentExpression	k3 ^= tail [ 10 ] << 16		5932680	0		^=			
ANR	5933154	Identifier	k3		5932680	0					
ANR	5933155	ShiftExpression	tail [ 10 ] << 16		5932680	1		<<			
ANR	5933156	ArrayIndexing	tail [ 10 ]		5932680	0					
ANR	5933157	Identifier	tail		5932680	0					
ANR	5933158	PrimaryExpression	10		5932680	1					
ANR	5933159	PrimaryExpression	16		5932680	1					
ANR	5933160	Label	case 10 :	221:2:4894:4901	5932680	14	True				
ANR	5933161	ExpressionStatement	k3 ^= tail [ 9 ] << 8	221:11:4903:4922	5932680	15	True				
ANR	5933162	AssignmentExpression	k3 ^= tail [ 9 ] << 8		5932680	0		^=			
ANR	5933163	Identifier	k3		5932680	0					
ANR	5933164	ShiftExpression	tail [ 9 ] << 8		5932680	1		<<			
ANR	5933165	ArrayIndexing	tail [ 9 ]		5932680	0					
ANR	5933166	Identifier	tail		5932680	0					
ANR	5933167	PrimaryExpression	9		5932680	1					
ANR	5933168	PrimaryExpression	8		5932680	1					
ANR	5933169	Label	case 9 :	222:2:4926:4933	5932680	16	True				
ANR	5933170	ExpressionStatement	k3 ^= tail [ 8 ] << 0	222:11:4935:4954	5932680	17	True				
ANR	5933171	AssignmentExpression	k3 ^= tail [ 8 ] << 0		5932680	0		^=			
ANR	5933172	Identifier	k3		5932680	0					
ANR	5933173	ShiftExpression	tail [ 8 ] << 0		5932680	1		<<			
ANR	5933174	ArrayIndexing	tail [ 8 ]		5932680	0					
ANR	5933175	Identifier	tail		5932680	0					
ANR	5933176	PrimaryExpression	8		5932680	1					
ANR	5933177	PrimaryExpression	0		5932680	1					
ANR	5933178	ExpressionStatement	k3 *= c3	223:7:4963:4971	5932680	18	True				
ANR	5933179	AssignmentExpression	k3 *= c3		5932680	0		*=			
ANR	5933180	Identifier	k3		5932680	0					
ANR	5933181	Identifier	c3		5932680	1					
ANR	5933182	ExpressionStatement	"k3 = hash_rotl_32 ( k3 , 17 )"	223:17:4973:4998	5932680	19	True				
ANR	5933183	AssignmentExpression	"k3 = hash_rotl_32 ( k3 , 17 )"		5932680	0		=			
ANR	5933184	Identifier	k3		5932680	0					
ANR	5933185	CallExpression	"hash_rotl_32 ( k3 , 17 )"		5932680	1					
ANR	5933186	Callee	hash_rotl_32		5932680	0					
ANR	5933187	Identifier	hash_rotl_32		5932680	0					
ANR	5933188	ArgumentList	k3		5932680	1					
ANR	5933189	Argument	k3		5932680	0					
ANR	5933190	Identifier	k3		5932680	0					
ANR	5933191	Argument	17		5932680	1					
ANR	5933192	PrimaryExpression	17		5932680	0					
ANR	5933193	ExpressionStatement	k3 *= c4	223:44:5000:5008	5932680	20	True				
ANR	5933194	AssignmentExpression	k3 *= c4		5932680	0		*=			
ANR	5933195	Identifier	k3		5932680	0					
ANR	5933196	Identifier	c4		5932680	1					
ANR	5933197	ExpressionStatement	h3 ^= k3	223:54:5010:5018	5932680	21	True				
ANR	5933198	AssignmentExpression	h3 ^= k3		5932680	0		^=			
ANR	5933199	Identifier	h3		5932680	0					
ANR	5933200	Identifier	k3		5932680	1					
ANR	5933201	Label	case 8 :	225:2:5023:5030	5932680	22	True				
ANR	5933202	ExpressionStatement	k2 ^= tail [ 7 ] << 24	225:11:5032:5052	5932680	23	True				
ANR	5933203	AssignmentExpression	k2 ^= tail [ 7 ] << 24		5932680	0		^=			
ANR	5933204	Identifier	k2		5932680	0					
ANR	5933205	ShiftExpression	tail [ 7 ] << 24		5932680	1		<<			
ANR	5933206	ArrayIndexing	tail [ 7 ]		5932680	0					
ANR	5933207	Identifier	tail		5932680	0					
ANR	5933208	PrimaryExpression	7		5932680	1					
ANR	5933209	PrimaryExpression	24		5932680	1					
ANR	5933210	Label	case 7 :	226:2:5056:5063	5932680	24	True				
ANR	5933211	ExpressionStatement	k2 ^= tail [ 6 ] << 16	226:11:5065:5085	5932680	25	True				
ANR	5933212	AssignmentExpression	k2 ^= tail [ 6 ] << 16		5932680	0		^=			
ANR	5933213	Identifier	k2		5932680	0					
ANR	5933214	ShiftExpression	tail [ 6 ] << 16		5932680	1		<<			
ANR	5933215	ArrayIndexing	tail [ 6 ]		5932680	0					
ANR	5933216	Identifier	tail		5932680	0					
ANR	5933217	PrimaryExpression	6		5932680	1					
ANR	5933218	PrimaryExpression	16		5932680	1					
ANR	5933219	Label	case 6 :	227:2:5089:5096	5932680	26	True				
ANR	5933220	ExpressionStatement	k2 ^= tail [ 5 ] << 8	227:11:5098:5117	5932680	27	True				
ANR	5933221	AssignmentExpression	k2 ^= tail [ 5 ] << 8		5932680	0		^=			
ANR	5933222	Identifier	k2		5932680	0					
ANR	5933223	ShiftExpression	tail [ 5 ] << 8		5932680	1		<<			
ANR	5933224	ArrayIndexing	tail [ 5 ]		5932680	0					
ANR	5933225	Identifier	tail		5932680	0					
ANR	5933226	PrimaryExpression	5		5932680	1					
ANR	5933227	PrimaryExpression	8		5932680	1					
ANR	5933228	Label	case 5 :	228:2:5121:5128	5932680	28	True				
ANR	5933229	ExpressionStatement	k2 ^= tail [ 4 ] << 0	228:11:5130:5149	5932680	29	True				
ANR	5933230	AssignmentExpression	k2 ^= tail [ 4 ] << 0		5932680	0		^=			
ANR	5933231	Identifier	k2		5932680	0					
ANR	5933232	ShiftExpression	tail [ 4 ] << 0		5932680	1		<<			
ANR	5933233	ArrayIndexing	tail [ 4 ]		5932680	0					
ANR	5933234	Identifier	tail		5932680	0					
ANR	5933235	PrimaryExpression	4		5932680	1					
ANR	5933236	PrimaryExpression	0		5932680	1					
ANR	5933237	ExpressionStatement	k2 *= c2	229:3:5154:5162	5932680	30	True				
ANR	5933238	AssignmentExpression	k2 *= c2		5932680	0		*=			
ANR	5933239	Identifier	k2		5932680	0					
ANR	5933240	Identifier	c2		5932680	1					
ANR	5933241	ExpressionStatement	"k2 = hash_rotl_32 ( k2 , 16 )"	229:13:5164:5189	5932680	31	True				
ANR	5933242	AssignmentExpression	"k2 = hash_rotl_32 ( k2 , 16 )"		5932680	0		=			
ANR	5933243	Identifier	k2		5932680	0					
ANR	5933244	CallExpression	"hash_rotl_32 ( k2 , 16 )"		5932680	1					
ANR	5933245	Callee	hash_rotl_32		5932680	0					
ANR	5933246	Identifier	hash_rotl_32		5932680	0					
ANR	5933247	ArgumentList	k2		5932680	1					
ANR	5933248	Argument	k2		5932680	0					
ANR	5933249	Identifier	k2		5932680	0					
ANR	5933250	Argument	16		5932680	1					
ANR	5933251	PrimaryExpression	16		5932680	0					
ANR	5933252	ExpressionStatement	k2 *= c3	229:40:5191:5199	5932680	32	True				
ANR	5933253	AssignmentExpression	k2 *= c3		5932680	0		*=			
ANR	5933254	Identifier	k2		5932680	0					
ANR	5933255	Identifier	c3		5932680	1					
ANR	5933256	ExpressionStatement	h2 ^= k2	229:50:5201:5209	5932680	33	True				
ANR	5933257	AssignmentExpression	h2 ^= k2		5932680	0		^=			
ANR	5933258	Identifier	h2		5932680	0					
ANR	5933259	Identifier	k2		5932680	1					
ANR	5933260	Label	case 4 :	231:2:5214:5221	5932680	34	True				
ANR	5933261	ExpressionStatement	k1 ^= tail [ 3 ] << 24	231:11:5223:5243	5932680	35	True				
ANR	5933262	AssignmentExpression	k1 ^= tail [ 3 ] << 24		5932680	0		^=			
ANR	5933263	Identifier	k1		5932680	0					
ANR	5933264	ShiftExpression	tail [ 3 ] << 24		5932680	1		<<			
ANR	5933265	ArrayIndexing	tail [ 3 ]		5932680	0					
ANR	5933266	Identifier	tail		5932680	0					
ANR	5933267	PrimaryExpression	3		5932680	1					
ANR	5933268	PrimaryExpression	24		5932680	1					
ANR	5933269	Label	case 3 :	232:2:5247:5254	5932680	36	True				
ANR	5933270	ExpressionStatement	k1 ^= tail [ 2 ] << 16	232:11:5256:5276	5932680	37	True				
ANR	5933271	AssignmentExpression	k1 ^= tail [ 2 ] << 16		5932680	0		^=			
ANR	5933272	Identifier	k1		5932680	0					
ANR	5933273	ShiftExpression	tail [ 2 ] << 16		5932680	1		<<			
ANR	5933274	ArrayIndexing	tail [ 2 ]		5932680	0					
ANR	5933275	Identifier	tail		5932680	0					
ANR	5933276	PrimaryExpression	2		5932680	1					
ANR	5933277	PrimaryExpression	16		5932680	1					
ANR	5933278	Label	case 2 :	233:2:5280:5287	5932680	38	True				
ANR	5933279	ExpressionStatement	k1 ^= tail [ 1 ] << 8	233:11:5289:5308	5932680	39	True				
ANR	5933280	AssignmentExpression	k1 ^= tail [ 1 ] << 8		5932680	0		^=			
ANR	5933281	Identifier	k1		5932680	0					
ANR	5933282	ShiftExpression	tail [ 1 ] << 8		5932680	1		<<			
ANR	5933283	ArrayIndexing	tail [ 1 ]		5932680	0					
ANR	5933284	Identifier	tail		5932680	0					
ANR	5933285	PrimaryExpression	1		5932680	1					
ANR	5933286	PrimaryExpression	8		5932680	1					
ANR	5933287	Label	case 1 :	234:2:5312:5319	5932680	40	True				
ANR	5933288	ExpressionStatement	k1 ^= tail [ 0 ] << 0	234:11:5321:5340	5932680	41	True				
ANR	5933289	AssignmentExpression	k1 ^= tail [ 0 ] << 0		5932680	0		^=			
ANR	5933290	Identifier	k1		5932680	0					
ANR	5933291	ShiftExpression	tail [ 0 ] << 0		5932680	1		<<			
ANR	5933292	ArrayIndexing	tail [ 0 ]		5932680	0					
ANR	5933293	Identifier	tail		5932680	0					
ANR	5933294	PrimaryExpression	0		5932680	1					
ANR	5933295	PrimaryExpression	0		5932680	1					
ANR	5933296	ExpressionStatement	k1 *= c1	235:3:5345:5353	5932680	42	True				
ANR	5933297	AssignmentExpression	k1 *= c1		5932680	0		*=			
ANR	5933298	Identifier	k1		5932680	0					
ANR	5933299	Identifier	c1		5932680	1					
ANR	5933300	ExpressionStatement	"k1 = hash_rotl_32 ( k1 , 15 )"	235:13:5355:5380	5932680	43	True				
ANR	5933301	AssignmentExpression	"k1 = hash_rotl_32 ( k1 , 15 )"		5932680	0		=			
ANR	5933302	Identifier	k1		5932680	0					
ANR	5933303	CallExpression	"hash_rotl_32 ( k1 , 15 )"		5932680	1					
ANR	5933304	Callee	hash_rotl_32		5932680	0					
ANR	5933305	Identifier	hash_rotl_32		5932680	0					
ANR	5933306	ArgumentList	k1		5932680	1					
ANR	5933307	Argument	k1		5932680	0					
ANR	5933308	Identifier	k1		5932680	0					
ANR	5933309	Argument	15		5932680	1					
ANR	5933310	PrimaryExpression	15		5932680	0					
ANR	5933311	ExpressionStatement	k1 *= c2	235:40:5382:5390	5932680	44	True				
ANR	5933312	AssignmentExpression	k1 *= c2		5932680	0		*=			
ANR	5933313	Identifier	k1		5932680	0					
ANR	5933314	Identifier	c2		5932680	1					
ANR	5933315	ExpressionStatement	h1 ^= k1	235:50:5392:5400	5932680	45	True				
ANR	5933316	AssignmentExpression	h1 ^= k1		5932680	0		^=			
ANR	5933317	Identifier	h1		5932680	0					
ANR	5933318	Identifier	k1		5932680	1					
ANR	5933319	ExpressionStatement	h1 ^= len	240:1:5431:5440	5932680	12	True				
ANR	5933320	AssignmentExpression	h1 ^= len		5932680	0		^=			
ANR	5933321	Identifier	h1		5932680	0					
ANR	5933322	Identifier	len		5932680	1					
ANR	5933323	ExpressionStatement	h2 ^= len	240:12:5442:5451	5932680	13	True				
ANR	5933324	AssignmentExpression	h2 ^= len		5932680	0		^=			
ANR	5933325	Identifier	h2		5932680	0					
ANR	5933326	Identifier	len		5932680	1					
ANR	5933327	ExpressionStatement	h3 ^= len	240:23:5453:5462	5932680	14	True				
ANR	5933328	AssignmentExpression	h3 ^= len		5932680	0		^=			
ANR	5933329	Identifier	h3		5932680	0					
ANR	5933330	Identifier	len		5932680	1					
ANR	5933331	ExpressionStatement	h4 ^= len	240:34:5464:5473	5932680	15	True				
ANR	5933332	AssignmentExpression	h4 ^= len		5932680	0		^=			
ANR	5933333	Identifier	h4		5932680	0					
ANR	5933334	Identifier	len		5932680	1					
ANR	5933335	ExpressionStatement	h1 += h2	242:1:5477:5485	5932680	16	True				
ANR	5933336	AssignmentExpression	h1 += h2		5932680	0		+=			
ANR	5933337	Identifier	h1		5932680	0					
ANR	5933338	Identifier	h2		5932680	1					
ANR	5933339	ExpressionStatement	h1 += h3	242:11:5487:5495	5932680	17	True				
ANR	5933340	AssignmentExpression	h1 += h3		5932680	0		+=			
ANR	5933341	Identifier	h1		5932680	0					
ANR	5933342	Identifier	h3		5932680	1					
ANR	5933343	ExpressionStatement	h1 += h4	242:21:5497:5505	5932680	18	True				
ANR	5933344	AssignmentExpression	h1 += h4		5932680	0		+=			
ANR	5933345	Identifier	h1		5932680	0					
ANR	5933346	Identifier	h4		5932680	1					
ANR	5933347	ExpressionStatement	h2 += h1	243:1:5508:5516	5932680	19	True				
ANR	5933348	AssignmentExpression	h2 += h1		5932680	0		+=			
ANR	5933349	Identifier	h2		5932680	0					
ANR	5933350	Identifier	h1		5932680	1					
ANR	5933351	ExpressionStatement	h3 += h1	243:11:5518:5526	5932680	20	True				
ANR	5933352	AssignmentExpression	h3 += h1		5932680	0		+=			
ANR	5933353	Identifier	h3		5932680	0					
ANR	5933354	Identifier	h1		5932680	1					
ANR	5933355	ExpressionStatement	h4 += h1	243:21:5528:5536	5932680	21	True				
ANR	5933356	AssignmentExpression	h4 += h1		5932680	0		+=			
ANR	5933357	Identifier	h4		5932680	0					
ANR	5933358	Identifier	h1		5932680	1					
ANR	5933359	ExpressionStatement	h1 = hash_fmix_32 ( h1 )	245:1:5540:5561	5932680	22	True				
ANR	5933360	AssignmentExpression	h1 = hash_fmix_32 ( h1 )		5932680	0		=			
ANR	5933361	Identifier	h1		5932680	0					
ANR	5933362	CallExpression	hash_fmix_32 ( h1 )		5932680	1					
ANR	5933363	Callee	hash_fmix_32		5932680	0					
ANR	5933364	Identifier	hash_fmix_32		5932680	0					
ANR	5933365	ArgumentList	h1		5932680	1					
ANR	5933366	Argument	h1		5932680	0					
ANR	5933367	Identifier	h1		5932680	0					
ANR	5933368	ExpressionStatement	h2 = hash_fmix_32 ( h2 )	246:1:5564:5585	5932680	23	True				
ANR	5933369	AssignmentExpression	h2 = hash_fmix_32 ( h2 )		5932680	0		=			
ANR	5933370	Identifier	h2		5932680	0					
ANR	5933371	CallExpression	hash_fmix_32 ( h2 )		5932680	1					
ANR	5933372	Callee	hash_fmix_32		5932680	0					
ANR	5933373	Identifier	hash_fmix_32		5932680	0					
ANR	5933374	ArgumentList	h2		5932680	1					
ANR	5933375	Argument	h2		5932680	0					
ANR	5933376	Identifier	h2		5932680	0					
ANR	5933377	ExpressionStatement	h3 = hash_fmix_32 ( h3 )	247:1:5588:5609	5932680	24	True				
ANR	5933378	AssignmentExpression	h3 = hash_fmix_32 ( h3 )		5932680	0		=			
ANR	5933379	Identifier	h3		5932680	0					
ANR	5933380	CallExpression	hash_fmix_32 ( h3 )		5932680	1					
ANR	5933381	Callee	hash_fmix_32		5932680	0					
ANR	5933382	Identifier	hash_fmix_32		5932680	0					
ANR	5933383	ArgumentList	h3		5932680	1					
ANR	5933384	Argument	h3		5932680	0					
ANR	5933385	Identifier	h3		5932680	0					
ANR	5933386	ExpressionStatement	h4 = hash_fmix_32 ( h4 )	248:1:5612:5633	5932680	25	True				
ANR	5933387	AssignmentExpression	h4 = hash_fmix_32 ( h4 )		5932680	0		=			
ANR	5933388	Identifier	h4		5932680	0					
ANR	5933389	CallExpression	hash_fmix_32 ( h4 )		5932680	1					
ANR	5933390	Callee	hash_fmix_32		5932680	0					
ANR	5933391	Identifier	hash_fmix_32		5932680	0					
ANR	5933392	ArgumentList	h4		5932680	1					
ANR	5933393	Argument	h4		5932680	0					
ANR	5933394	Identifier	h4		5932680	0					
ANR	5933395	ExpressionStatement	h1 += h2	250:1:5637:5645	5932680	26	True				
ANR	5933396	AssignmentExpression	h1 += h2		5932680	0		+=			
ANR	5933397	Identifier	h1		5932680	0					
ANR	5933398	Identifier	h2		5932680	1					
ANR	5933399	ExpressionStatement	h1 += h3	250:11:5647:5655	5932680	27	True				
ANR	5933400	AssignmentExpression	h1 += h3		5932680	0		+=			
ANR	5933401	Identifier	h1		5932680	0					
ANR	5933402	Identifier	h3		5932680	1					
ANR	5933403	ExpressionStatement	h1 += h4	250:21:5657:5665	5932680	28	True				
ANR	5933404	AssignmentExpression	h1 += h4		5932680	0		+=			
ANR	5933405	Identifier	h1		5932680	0					
ANR	5933406	Identifier	h4		5932680	1					
ANR	5933407	ExpressionStatement	h2 += h1	251:1:5668:5676	5932680	29	True				
ANR	5933408	AssignmentExpression	h2 += h1		5932680	0		+=			
ANR	5933409	Identifier	h2		5932680	0					
ANR	5933410	Identifier	h1		5932680	1					
ANR	5933411	ExpressionStatement	h3 += h1	251:11:5678:5686	5932680	30	True				
ANR	5933412	AssignmentExpression	h3 += h1		5932680	0		+=			
ANR	5933413	Identifier	h3		5932680	0					
ANR	5933414	Identifier	h1		5932680	1					
ANR	5933415	ExpressionStatement	h4 += h1	251:21:5688:5696	5932680	31	True				
ANR	5933416	AssignmentExpression	h4 += h1		5932680	0		+=			
ANR	5933417	Identifier	h4		5932680	0					
ANR	5933418	Identifier	h1		5932680	1					
ANR	5933419	ExpressionStatement	r_out [ 0 ] = ( ( ( uint64_t ) h2 ) << 32 ) | h1	253:1:5700:5739	5932680	32	True				
ANR	5933420	AssignmentExpression	r_out [ 0 ] = ( ( ( uint64_t ) h2 ) << 32 ) | h1		5932680	0		=			
ANR	5933421	ArrayIndexing	r_out [ 0 ]		5932680	0					
ANR	5933422	Identifier	r_out		5932680	0					
ANR	5933423	PrimaryExpression	0		5932680	1					
ANR	5933424	InclusiveOrExpression	( ( ( uint64_t ) h2 ) << 32 ) | h1		5932680	1		|			
ANR	5933425	ShiftExpression	( ( uint64_t ) h2 ) << 32		5932680	0		<<			
ANR	5933426	CastExpression	( uint64_t ) h2		5932680	0					
ANR	5933427	CastTarget	uint64_t		5932680	0					
ANR	5933428	Identifier	h2		5932680	1					
ANR	5933429	PrimaryExpression	32		5932680	1					
ANR	5933430	Identifier	h1		5932680	1					
ANR	5933431	ExpressionStatement	r_out [ 1 ] = ( ( ( uint64_t ) h4 ) << 32 ) | h3	254:1:5742:5781	5932680	33	True				
ANR	5933432	AssignmentExpression	r_out [ 1 ] = ( ( ( uint64_t ) h4 ) << 32 ) | h3		5932680	0		=			
ANR	5933433	ArrayIndexing	r_out [ 1 ]		5932680	0					
ANR	5933434	Identifier	r_out		5932680	0					
ANR	5933435	PrimaryExpression	1		5932680	1					
ANR	5933436	InclusiveOrExpression	( ( ( uint64_t ) h4 ) << 32 ) | h3		5932680	1		|			
ANR	5933437	ShiftExpression	( ( uint64_t ) h4 ) << 32		5932680	0		<<			
ANR	5933438	CastExpression	( uint64_t ) h4		5932680	0					
ANR	5933439	CastTarget	uint64_t		5932680	0					
ANR	5933440	Identifier	h4		5932680	1					
ANR	5933441	PrimaryExpression	32		5932680	1					
ANR	5933442	Identifier	h3		5932680	1					
ANR	5933443	ReturnType	UNUSED JEMALLOC_INLINE void		5932680	1					
ANR	5933444	Identifier	hash_x86_128		5932680	2					
ANR	5933445	ParameterList	"const void * key , const int len , uint32_t seed , uint64_t r_out [ 2 ]"		5932680	3					
ANR	5933446	Parameter	const void * key	156:13:3263:3277	5932680	0	True				
ANR	5933447	ParameterType	const void *		5932680	0					
ANR	5933448	Identifier	key		5932680	1					
ANR	5933449	Parameter	const int len	156:30:3280:3292	5932680	1	True				
ANR	5933450	ParameterType	const int		5932680	0					
ANR	5933451	Identifier	len		5932680	1					
ANR	5933452	Parameter	uint32_t seed	156:45:3295:3307	5932680	2	True				
ANR	5933453	ParameterType	uint32_t		5932680	0					
ANR	5933454	Identifier	seed		5932680	1					
ANR	5933455	Parameter	uint64_t r_out [ 2 ]	157:4:3314:3330	5932680	3	True				
ANR	5933456	ParameterType	uint64_t [ 2 ]		5932680	0					
ANR	5933457	Identifier	r_out		5932680	1					
ANR	5933458	CFGEntryNode	ENTRY		5932680		True				
ANR	5933459	CFGExitNode	EXIT		5932680		True				
ANR	5933460	Symbol	seed		5932680						
ANR	5933461	Symbol	data		5932680						
ANR	5933462	Symbol	h1		5932680						
ANR	5933463	Symbol	h2		5932680						
ANR	5933464	Symbol	hash_rotl_32		5932680						
ANR	5933465	Symbol	h3		5932680						
ANR	5933466	Symbol	h4		5932680						
ANR	5933467	Symbol	len		5932680						
ANR	5933468	Symbol	key		5932680						
ANR	5933469	Symbol	* r_out		5932680						
ANR	5933470	Symbol	* tail		5932680						
ANR	5933471	Symbol	blocks		5932680						
ANR	5933472	Symbol	k1		5932680						
ANR	5933473	Symbol	tail		5932680						
ANR	5933474	Symbol	k2		5932680						
ANR	5933475	Symbol	k3		5932680						
ANR	5933476	Symbol	i		5932680						
ANR	5933477	Symbol	k4		5932680						
ANR	5933478	Symbol	c1		5932680						
ANR	5933479	Symbol	c2		5932680						
ANR	5933480	Symbol	c3		5932680						
ANR	5933481	Symbol	c4		5932680						
ANR	5933482	Symbol	r_out		5932680						
ANR	5933483	Symbol	nblocks		5932680						
ANR	5933484	Symbol	hash_get_block_32		5932680						
ANR	5933485	Symbol	hash_fmix_32		5932680						
ANR	5933486	Function	hash_x64_128	257:0:5786:7742							
ANR	5933487	FunctionDef	"hash_x64_128 (const void * key , const int len , const uint32_t seed , uint64_t r_out [ 2 ])"		5933486	0					
ANR	5933488	CompoundStatement		260:0:5903:7742	5933486	0					
ANR	5933489	IdentifierDeclStatement	const uint8_t * data = ( const uint8_t * ) key ;	261:1:5906:5949	5933486	0	True				
ANR	5933490	IdentifierDecl	* data = ( const uint8_t * ) key		5933486	0					
ANR	5933491	IdentifierDeclType	const uint8_t *		5933486	0					
ANR	5933492	Identifier	data		5933486	1					
ANR	5933493	AssignmentExpression	* data = ( const uint8_t * ) key		5933486	2		=			
ANR	5933494	Identifier	data		5933486	0					
ANR	5933495	CastExpression	( const uint8_t * ) key		5933486	1					
ANR	5933496	CastTarget	const uint8_t *		5933486	0					
ANR	5933497	Identifier	key		5933486	1					
ANR	5933498	IdentifierDeclStatement	const int nblocks = len / 16 ;	262:1:5952:5980	5933486	1	True				
ANR	5933499	IdentifierDecl	nblocks = len / 16		5933486	0					
ANR	5933500	IdentifierDeclType	const int		5933486	0					
ANR	5933501	Identifier	nblocks		5933486	1					
ANR	5933502	AssignmentExpression	nblocks = len / 16		5933486	2		=			
ANR	5933503	Identifier	nblocks		5933486	0					
ANR	5933504	MultiplicativeExpression	len / 16		5933486	1		/			
ANR	5933505	Identifier	len		5933486	0					
ANR	5933506	PrimaryExpression	16		5933486	1					
ANR	5933507	IdentifierDeclStatement	uint64_t h1 = seed ;	264:1:5984:6002	5933486	2	True				
ANR	5933508	IdentifierDecl	h1 = seed		5933486	0					
ANR	5933509	IdentifierDeclType	uint64_t		5933486	0					
ANR	5933510	Identifier	h1		5933486	1					
ANR	5933511	AssignmentExpression	h1 = seed		5933486	2		=			
ANR	5933512	Identifier	seed		5933486	0					
ANR	5933513	Identifier	seed		5933486	1					
ANR	5933514	IdentifierDeclStatement	uint64_t h2 = seed ;	265:1:6005:6023	5933486	3	True				
ANR	5933515	IdentifierDecl	h2 = seed		5933486	0					
ANR	5933516	IdentifierDeclType	uint64_t		5933486	0					
ANR	5933517	Identifier	h2		5933486	1					
ANR	5933518	AssignmentExpression	h2 = seed		5933486	2		=			
ANR	5933519	Identifier	seed		5933486	0					
ANR	5933520	Identifier	seed		5933486	1					
ANR	5933521	IdentifierDeclStatement	const uint64_t c1 = KQU ( 0x87c37b91114253d5 ) ;	267:1:6027:6070	5933486	4	True				
ANR	5933522	IdentifierDecl	c1 = KQU ( 0x87c37b91114253d5 )		5933486	0					
ANR	5933523	IdentifierDeclType	const uint64_t		5933486	0					
ANR	5933524	Identifier	c1		5933486	1					
ANR	5933525	AssignmentExpression	c1 = KQU ( 0x87c37b91114253d5 )		5933486	2		=			
ANR	5933526	Identifier	c1		5933486	0					
ANR	5933527	CallExpression	KQU ( 0x87c37b91114253d5 )		5933486	1					
ANR	5933528	Callee	KQU		5933486	0					
ANR	5933529	Identifier	KQU		5933486	0					
ANR	5933530	ArgumentList	0x87c37b91114253d5		5933486	1					
ANR	5933531	Argument	0x87c37b91114253d5		5933486	0					
ANR	5933532	PrimaryExpression	0x87c37b91114253d5		5933486	0					
ANR	5933533	IdentifierDeclStatement	const uint64_t c2 = KQU ( 0x4cf5ad432745937f ) ;	268:1:6073:6116	5933486	5	True				
ANR	5933534	IdentifierDecl	c2 = KQU ( 0x4cf5ad432745937f )		5933486	0					
ANR	5933535	IdentifierDeclType	const uint64_t		5933486	0					
ANR	5933536	Identifier	c2		5933486	1					
ANR	5933537	AssignmentExpression	c2 = KQU ( 0x4cf5ad432745937f )		5933486	2		=			
ANR	5933538	Identifier	c2		5933486	0					
ANR	5933539	CallExpression	KQU ( 0x4cf5ad432745937f )		5933486	1					
ANR	5933540	Callee	KQU		5933486	0					
ANR	5933541	Identifier	KQU		5933486	0					
ANR	5933542	ArgumentList	0x4cf5ad432745937f		5933486	1					
ANR	5933543	Argument	0x4cf5ad432745937f		5933486	0					
ANR	5933544	PrimaryExpression	0x4cf5ad432745937f		5933486	0					
ANR	5933545	CompoundStatement		14:2:286:291	5933486	6					
ANR	5933546	IdentifierDeclStatement	const uint64_t * blocks = ( const uint64_t * ) ( data ) ;	272:2:6136:6186	5933486	0	True				
ANR	5933547	IdentifierDecl	* blocks = ( const uint64_t * ) ( data )		5933486	0					
ANR	5933548	IdentifierDeclType	const uint64_t *		5933486	0					
ANR	5933549	Identifier	blocks		5933486	1					
ANR	5933550	AssignmentExpression	* blocks = ( const uint64_t * ) ( data )		5933486	2		=			
ANR	5933551	Identifier	blocks		5933486	0					
ANR	5933552	CastExpression	( const uint64_t * ) ( data )		5933486	1					
ANR	5933553	CastTarget	const uint64_t *		5933486	0					
ANR	5933554	Identifier	data		5933486	1					
ANR	5933555	IdentifierDeclStatement	int i ;	273:2:6190:6195	5933486	1	True				
ANR	5933556	IdentifierDecl	i		5933486	0					
ANR	5933557	IdentifierDeclType	int		5933486	0					
ANR	5933558	Identifier	i		5933486	1					
ANR	5933559	ForStatement	for ( i = 0 ; i < nblocks ; i ++ )		5933486	2					
ANR	5933560	ForInit	i = 0 ;	275:7:6205:6210	5933486	0	True				
ANR	5933561	AssignmentExpression	i = 0		5933486	0		=			
ANR	5933562	Identifier	i		5933486	0					
ANR	5933563	PrimaryExpression	0		5933486	1					
ANR	5933564	Condition	i < nblocks	275:14:6212:6222	5933486	1	True				
ANR	5933565	RelationalExpression	i < nblocks		5933486	0		<			
ANR	5933566	Identifier	i		5933486	0					
ANR	5933567	Identifier	nblocks		5933486	1					
ANR	5933568	PostIncDecOperationExpression	i ++	275:27:6225:6227	5933486	2	True				
ANR	5933569	Identifier	i		5933486	0					
ANR	5933570	IncDec	++		5933486	1					
ANR	5933571	CompoundStatement		18:3:384:432	5933486	3					
ANR	5933572	IdentifierDeclStatement	"uint64_t k1 = hash_get_block_64 ( blocks , i * 2 + 0 ) ;"	276:3:6235:6283	5933486	0	True				
ANR	5933573	IdentifierDecl	"k1 = hash_get_block_64 ( blocks , i * 2 + 0 )"		5933486	0					
ANR	5933574	IdentifierDeclType	uint64_t		5933486	0					
ANR	5933575	Identifier	k1		5933486	1					
ANR	5933576	AssignmentExpression	"k1 = hash_get_block_64 ( blocks , i * 2 + 0 )"		5933486	2		=			
ANR	5933577	Identifier	k1		5933486	0					
ANR	5933578	CallExpression	"hash_get_block_64 ( blocks , i * 2 + 0 )"		5933486	1					
ANR	5933579	Callee	hash_get_block_64		5933486	0					
ANR	5933580	Identifier	hash_get_block_64		5933486	0					
ANR	5933581	ArgumentList	blocks		5933486	1					
ANR	5933582	Argument	blocks		5933486	0					
ANR	5933583	Identifier	blocks		5933486	0					
ANR	5933584	Argument	i * 2 + 0		5933486	1					
ANR	5933585	AdditiveExpression	i * 2 + 0		5933486	0		+			
ANR	5933586	MultiplicativeExpression	i * 2		5933486	0		*			
ANR	5933587	Identifier	i		5933486	0					
ANR	5933588	PrimaryExpression	2		5933486	1					
ANR	5933589	PrimaryExpression	0		5933486	1					
ANR	5933590	IdentifierDeclStatement	"uint64_t k2 = hash_get_block_64 ( blocks , i * 2 + 1 ) ;"	277:3:6288:6336	5933486	1	True				
ANR	5933591	IdentifierDecl	"k2 = hash_get_block_64 ( blocks , i * 2 + 1 )"		5933486	0					
ANR	5933592	IdentifierDeclType	uint64_t		5933486	0					
ANR	5933593	Identifier	k2		5933486	1					
ANR	5933594	AssignmentExpression	"k2 = hash_get_block_64 ( blocks , i * 2 + 1 )"		5933486	2		=			
ANR	5933595	Identifier	k2		5933486	0					
ANR	5933596	CallExpression	"hash_get_block_64 ( blocks , i * 2 + 1 )"		5933486	1					
ANR	5933597	Callee	hash_get_block_64		5933486	0					
ANR	5933598	Identifier	hash_get_block_64		5933486	0					
ANR	5933599	ArgumentList	blocks		5933486	1					
ANR	5933600	Argument	blocks		5933486	0					
ANR	5933601	Identifier	blocks		5933486	0					
ANR	5933602	Argument	i * 2 + 1		5933486	1					
ANR	5933603	AdditiveExpression	i * 2 + 1		5933486	0		+			
ANR	5933604	MultiplicativeExpression	i * 2		5933486	0		*			
ANR	5933605	Identifier	i		5933486	0					
ANR	5933606	PrimaryExpression	2		5933486	1					
ANR	5933607	PrimaryExpression	1		5933486	1					
ANR	5933608	ExpressionStatement	k1 *= c1	279:3:6342:6350	5933486	2	True				
ANR	5933609	AssignmentExpression	k1 *= c1		5933486	0		*=			
ANR	5933610	Identifier	k1		5933486	0					
ANR	5933611	Identifier	c1		5933486	1					
ANR	5933612	ExpressionStatement	"k1 = hash_rotl_64 ( k1 , 31 )"	279:13:6352:6377	5933486	3	True				
ANR	5933613	AssignmentExpression	"k1 = hash_rotl_64 ( k1 , 31 )"		5933486	0		=			
ANR	5933614	Identifier	k1		5933486	0					
ANR	5933615	CallExpression	"hash_rotl_64 ( k1 , 31 )"		5933486	1					
ANR	5933616	Callee	hash_rotl_64		5933486	0					
ANR	5933617	Identifier	hash_rotl_64		5933486	0					
ANR	5933618	ArgumentList	k1		5933486	1					
ANR	5933619	Argument	k1		5933486	0					
ANR	5933620	Identifier	k1		5933486	0					
ANR	5933621	Argument	31		5933486	1					
ANR	5933622	PrimaryExpression	31		5933486	0					
ANR	5933623	ExpressionStatement	k1 *= c2	279:40:6379:6387	5933486	4	True				
ANR	5933624	AssignmentExpression	k1 *= c2		5933486	0		*=			
ANR	5933625	Identifier	k1		5933486	0					
ANR	5933626	Identifier	c2		5933486	1					
ANR	5933627	ExpressionStatement	h1 ^= k1	279:50:6389:6397	5933486	5	True				
ANR	5933628	AssignmentExpression	h1 ^= k1		5933486	0		^=			
ANR	5933629	Identifier	h1		5933486	0					
ANR	5933630	Identifier	k1		5933486	1					
ANR	5933631	ExpressionStatement	"h1 = hash_rotl_64 ( h1 , 27 )"	281:3:6403:6428	5933486	6	True				
ANR	5933632	AssignmentExpression	"h1 = hash_rotl_64 ( h1 , 27 )"		5933486	0		=			
ANR	5933633	Identifier	h1		5933486	0					
ANR	5933634	CallExpression	"hash_rotl_64 ( h1 , 27 )"		5933486	1					
ANR	5933635	Callee	hash_rotl_64		5933486	0					
ANR	5933636	Identifier	hash_rotl_64		5933486	0					
ANR	5933637	ArgumentList	h1		5933486	1					
ANR	5933638	Argument	h1		5933486	0					
ANR	5933639	Identifier	h1		5933486	0					
ANR	5933640	Argument	27		5933486	1					
ANR	5933641	PrimaryExpression	27		5933486	0					
ANR	5933642	ExpressionStatement	h1 += h2	281:30:6430:6438	5933486	7	True				
ANR	5933643	AssignmentExpression	h1 += h2		5933486	0		+=			
ANR	5933644	Identifier	h1		5933486	0					
ANR	5933645	Identifier	h2		5933486	1					
ANR	5933646	ExpressionStatement	h1 = h1 * 5 + 0x52dce729	282:3:6443:6465	5933486	8	True				
ANR	5933647	AssignmentExpression	h1 = h1 * 5 + 0x52dce729		5933486	0		=			
ANR	5933648	Identifier	h1		5933486	0					
ANR	5933649	AdditiveExpression	h1 * 5 + 0x52dce729		5933486	1		+			
ANR	5933650	MultiplicativeExpression	h1 * 5		5933486	0		*			
ANR	5933651	Identifier	h1		5933486	0					
ANR	5933652	PrimaryExpression	5		5933486	1					
ANR	5933653	PrimaryExpression	0x52dce729		5933486	1					
ANR	5933654	ExpressionStatement	k2 *= c2	284:3:6471:6479	5933486	9	True				
ANR	5933655	AssignmentExpression	k2 *= c2		5933486	0		*=			
ANR	5933656	Identifier	k2		5933486	0					
ANR	5933657	Identifier	c2		5933486	1					
ANR	5933658	ExpressionStatement	"k2 = hash_rotl_64 ( k2 , 33 )"	284:13:6481:6506	5933486	10	True				
ANR	5933659	AssignmentExpression	"k2 = hash_rotl_64 ( k2 , 33 )"		5933486	0		=			
ANR	5933660	Identifier	k2		5933486	0					
ANR	5933661	CallExpression	"hash_rotl_64 ( k2 , 33 )"		5933486	1					
ANR	5933662	Callee	hash_rotl_64		5933486	0					
ANR	5933663	Identifier	hash_rotl_64		5933486	0					
ANR	5933664	ArgumentList	k2		5933486	1					
ANR	5933665	Argument	k2		5933486	0					
ANR	5933666	Identifier	k2		5933486	0					
ANR	5933667	Argument	33		5933486	1					
ANR	5933668	PrimaryExpression	33		5933486	0					
ANR	5933669	ExpressionStatement	k2 *= c1	284:40:6508:6516	5933486	11	True				
ANR	5933670	AssignmentExpression	k2 *= c1		5933486	0		*=			
ANR	5933671	Identifier	k2		5933486	0					
ANR	5933672	Identifier	c1		5933486	1					
ANR	5933673	ExpressionStatement	h2 ^= k2	284:50:6518:6526	5933486	12	True				
ANR	5933674	AssignmentExpression	h2 ^= k2		5933486	0		^=			
ANR	5933675	Identifier	h2		5933486	0					
ANR	5933676	Identifier	k2		5933486	1					
ANR	5933677	ExpressionStatement	"h2 = hash_rotl_64 ( h2 , 31 )"	286:3:6532:6557	5933486	13	True				
ANR	5933678	AssignmentExpression	"h2 = hash_rotl_64 ( h2 , 31 )"		5933486	0		=			
ANR	5933679	Identifier	h2		5933486	0					
ANR	5933680	CallExpression	"hash_rotl_64 ( h2 , 31 )"		5933486	1					
ANR	5933681	Callee	hash_rotl_64		5933486	0					
ANR	5933682	Identifier	hash_rotl_64		5933486	0					
ANR	5933683	ArgumentList	h2		5933486	1					
ANR	5933684	Argument	h2		5933486	0					
ANR	5933685	Identifier	h2		5933486	0					
ANR	5933686	Argument	31		5933486	1					
ANR	5933687	PrimaryExpression	31		5933486	0					
ANR	5933688	ExpressionStatement	h2 += h1	286:30:6559:6567	5933486	14	True				
ANR	5933689	AssignmentExpression	h2 += h1		5933486	0		+=			
ANR	5933690	Identifier	h2		5933486	0					
ANR	5933691	Identifier	h1		5933486	1					
ANR	5933692	ExpressionStatement	h2 = h2 * 5 + 0x38495ab5	287:3:6572:6594	5933486	15	True				
ANR	5933693	AssignmentExpression	h2 = h2 * 5 + 0x38495ab5		5933486	0		=			
ANR	5933694	Identifier	h2		5933486	0					
ANR	5933695	AdditiveExpression	h2 * 5 + 0x38495ab5		5933486	1		+			
ANR	5933696	MultiplicativeExpression	h2 * 5		5933486	0		*			
ANR	5933697	Identifier	h2		5933486	0					
ANR	5933698	PrimaryExpression	5		5933486	1					
ANR	5933699	PrimaryExpression	0x38495ab5		5933486	1					
ANR	5933700	CompoundStatement		36:2:797:812	5933486	7					
ANR	5933701	IdentifierDeclStatement	const uint8_t * tail = ( const uint8_t * ) ( data + nblocks * 16 ) ;	293:2:6621:6678	5933486	0	True				
ANR	5933702	IdentifierDecl	* tail = ( const uint8_t * ) ( data + nblocks * 16 )		5933486	0					
ANR	5933703	IdentifierDeclType	const uint8_t *		5933486	0					
ANR	5933704	Identifier	tail		5933486	1					
ANR	5933705	AssignmentExpression	* tail = ( const uint8_t * ) ( data + nblocks * 16 )		5933486	2		=			
ANR	5933706	Identifier	tail		5933486	0					
ANR	5933707	CastExpression	( const uint8_t * ) ( data + nblocks * 16 )		5933486	1					
ANR	5933708	CastTarget	const uint8_t *		5933486	0					
ANR	5933709	AdditiveExpression	data + nblocks * 16		5933486	1		+			
ANR	5933710	Identifier	data		5933486	0					
ANR	5933711	MultiplicativeExpression	nblocks * 16		5933486	1		*			
ANR	5933712	Identifier	nblocks		5933486	0					
ANR	5933713	PrimaryExpression	16		5933486	1					
ANR	5933714	IdentifierDeclStatement	uint64_t k1 = 0 ;	294:2:6682:6697	5933486	1	True				
ANR	5933715	IdentifierDecl	k1 = 0		5933486	0					
ANR	5933716	IdentifierDeclType	uint64_t		5933486	0					
ANR	5933717	Identifier	k1		5933486	1					
ANR	5933718	AssignmentExpression	k1 = 0		5933486	2		=			
ANR	5933719	Identifier	k1		5933486	0					
ANR	5933720	PrimaryExpression	0		5933486	1					
ANR	5933721	IdentifierDeclStatement	uint64_t k2 = 0 ;	295:2:6701:6716	5933486	2	True				
ANR	5933722	IdentifierDecl	k2 = 0		5933486	0					
ANR	5933723	IdentifierDeclType	uint64_t		5933486	0					
ANR	5933724	Identifier	k2		5933486	1					
ANR	5933725	AssignmentExpression	k2 = 0		5933486	2		=			
ANR	5933726	Identifier	k2		5933486	0					
ANR	5933727	PrimaryExpression	0		5933486	1					
ANR	5933728	SwitchStatement	switch ( len & 15 )		5933486	3					
ANR	5933729	Condition	len & 15	297:10:6729:6736	5933486	0	True				
ANR	5933730	BitAndExpression	len & 15		5933486	0		&			
ANR	5933731	Identifier	len		5933486	0					
ANR	5933732	PrimaryExpression	15		5933486	1					
ANR	5933733	CompoundStatement		38:20:835:835	5933486	1					
ANR	5933734	Label	case 15 :	298:2:6743:6750	5933486	0	True				
ANR	5933735	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 14 ] ) ) << 48	298:11:6752:6786	5933486	1	True				
ANR	5933736	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 14 ] ) ) << 48		5933486	0		^=			
ANR	5933737	Identifier	k2		5933486	0					
ANR	5933738	ShiftExpression	( ( uint64_t ) ( tail [ 14 ] ) ) << 48		5933486	1		<<			
ANR	5933739	CastExpression	( uint64_t ) ( tail [ 14 ] )		5933486	0					
ANR	5933740	CastTarget	uint64_t		5933486	0					
ANR	5933741	ArrayIndexing	tail [ 14 ]		5933486	1					
ANR	5933742	Identifier	tail		5933486	0					
ANR	5933743	PrimaryExpression	14		5933486	1					
ANR	5933744	PrimaryExpression	48		5933486	1					
ANR	5933745	Label	case 14 :	299:2:6790:6797	5933486	2	True				
ANR	5933746	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 13 ] ) ) << 40	299:11:6799:6833	5933486	3	True				
ANR	5933747	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 13 ] ) ) << 40		5933486	0		^=			
ANR	5933748	Identifier	k2		5933486	0					
ANR	5933749	ShiftExpression	( ( uint64_t ) ( tail [ 13 ] ) ) << 40		5933486	1		<<			
ANR	5933750	CastExpression	( uint64_t ) ( tail [ 13 ] )		5933486	0					
ANR	5933751	CastTarget	uint64_t		5933486	0					
ANR	5933752	ArrayIndexing	tail [ 13 ]		5933486	1					
ANR	5933753	Identifier	tail		5933486	0					
ANR	5933754	PrimaryExpression	13		5933486	1					
ANR	5933755	PrimaryExpression	40		5933486	1					
ANR	5933756	Label	case 13 :	300:2:6837:6844	5933486	4	True				
ANR	5933757	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 12 ] ) ) << 32	300:11:6846:6880	5933486	5	True				
ANR	5933758	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 12 ] ) ) << 32		5933486	0		^=			
ANR	5933759	Identifier	k2		5933486	0					
ANR	5933760	ShiftExpression	( ( uint64_t ) ( tail [ 12 ] ) ) << 32		5933486	1		<<			
ANR	5933761	CastExpression	( uint64_t ) ( tail [ 12 ] )		5933486	0					
ANR	5933762	CastTarget	uint64_t		5933486	0					
ANR	5933763	ArrayIndexing	tail [ 12 ]		5933486	1					
ANR	5933764	Identifier	tail		5933486	0					
ANR	5933765	PrimaryExpression	12		5933486	1					
ANR	5933766	PrimaryExpression	32		5933486	1					
ANR	5933767	Label	case 12 :	301:2:6884:6891	5933486	6	True				
ANR	5933768	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 11 ] ) ) << 24	301:11:6893:6927	5933486	7	True				
ANR	5933769	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 11 ] ) ) << 24		5933486	0		^=			
ANR	5933770	Identifier	k2		5933486	0					
ANR	5933771	ShiftExpression	( ( uint64_t ) ( tail [ 11 ] ) ) << 24		5933486	1		<<			
ANR	5933772	CastExpression	( uint64_t ) ( tail [ 11 ] )		5933486	0					
ANR	5933773	CastTarget	uint64_t		5933486	0					
ANR	5933774	ArrayIndexing	tail [ 11 ]		5933486	1					
ANR	5933775	Identifier	tail		5933486	0					
ANR	5933776	PrimaryExpression	11		5933486	1					
ANR	5933777	PrimaryExpression	24		5933486	1					
ANR	5933778	Label	case 11 :	302:2:6931:6938	5933486	8	True				
ANR	5933779	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 10 ] ) ) << 16	302:11:6940:6974	5933486	9	True				
ANR	5933780	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 10 ] ) ) << 16		5933486	0		^=			
ANR	5933781	Identifier	k2		5933486	0					
ANR	5933782	ShiftExpression	( ( uint64_t ) ( tail [ 10 ] ) ) << 16		5933486	1		<<			
ANR	5933783	CastExpression	( uint64_t ) ( tail [ 10 ] )		5933486	0					
ANR	5933784	CastTarget	uint64_t		5933486	0					
ANR	5933785	ArrayIndexing	tail [ 10 ]		5933486	1					
ANR	5933786	Identifier	tail		5933486	0					
ANR	5933787	PrimaryExpression	10		5933486	1					
ANR	5933788	PrimaryExpression	16		5933486	1					
ANR	5933789	Label	case 10 :	303:2:6978:6985	5933486	10	True				
ANR	5933790	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 9 ] ) ) << 8	303:11:6987:7020	5933486	11	True				
ANR	5933791	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 9 ] ) ) << 8		5933486	0		^=			
ANR	5933792	Identifier	k2		5933486	0					
ANR	5933793	ShiftExpression	( ( uint64_t ) ( tail [ 9 ] ) ) << 8		5933486	1		<<			
ANR	5933794	CastExpression	( uint64_t ) ( tail [ 9 ] )		5933486	0					
ANR	5933795	CastTarget	uint64_t		5933486	0					
ANR	5933796	ArrayIndexing	tail [ 9 ]		5933486	1					
ANR	5933797	Identifier	tail		5933486	0					
ANR	5933798	PrimaryExpression	9		5933486	1					
ANR	5933799	PrimaryExpression	8		5933486	1					
ANR	5933800	Label	case 9 :	304:2:7024:7031	5933486	12	True				
ANR	5933801	ExpressionStatement	k2 ^= ( ( uint64_t ) ( tail [ 8 ] ) ) << 0	304:11:7033:7066	5933486	13	True				
ANR	5933802	AssignmentExpression	k2 ^= ( ( uint64_t ) ( tail [ 8 ] ) ) << 0		5933486	0		^=			
ANR	5933803	Identifier	k2		5933486	0					
ANR	5933804	ShiftExpression	( ( uint64_t ) ( tail [ 8 ] ) ) << 0		5933486	1		<<			
ANR	5933805	CastExpression	( uint64_t ) ( tail [ 8 ] )		5933486	0					
ANR	5933806	CastTarget	uint64_t		5933486	0					
ANR	5933807	ArrayIndexing	tail [ 8 ]		5933486	1					
ANR	5933808	Identifier	tail		5933486	0					
ANR	5933809	PrimaryExpression	8		5933486	1					
ANR	5933810	PrimaryExpression	0		5933486	1					
ANR	5933811	ExpressionStatement	k2 *= c2	305:3:7071:7079	5933486	14	True				
ANR	5933812	AssignmentExpression	k2 *= c2		5933486	0		*=			
ANR	5933813	Identifier	k2		5933486	0					
ANR	5933814	Identifier	c2		5933486	1					
ANR	5933815	ExpressionStatement	"k2 = hash_rotl_64 ( k2 , 33 )"	305:13:7081:7106	5933486	15	True				
ANR	5933816	AssignmentExpression	"k2 = hash_rotl_64 ( k2 , 33 )"		5933486	0		=			
ANR	5933817	Identifier	k2		5933486	0					
ANR	5933818	CallExpression	"hash_rotl_64 ( k2 , 33 )"		5933486	1					
ANR	5933819	Callee	hash_rotl_64		5933486	0					
ANR	5933820	Identifier	hash_rotl_64		5933486	0					
ANR	5933821	ArgumentList	k2		5933486	1					
ANR	5933822	Argument	k2		5933486	0					
ANR	5933823	Identifier	k2		5933486	0					
ANR	5933824	Argument	33		5933486	1					
ANR	5933825	PrimaryExpression	33		5933486	0					
ANR	5933826	ExpressionStatement	k2 *= c1	305:40:7108:7116	5933486	16	True				
ANR	5933827	AssignmentExpression	k2 *= c1		5933486	0		*=			
ANR	5933828	Identifier	k2		5933486	0					
ANR	5933829	Identifier	c1		5933486	1					
ANR	5933830	ExpressionStatement	h2 ^= k2	305:50:7118:7126	5933486	17	True				
ANR	5933831	AssignmentExpression	h2 ^= k2		5933486	0		^=			
ANR	5933832	Identifier	h2		5933486	0					
ANR	5933833	Identifier	k2		5933486	1					
ANR	5933834	Label	case 8 :	307:2:7131:7138	5933486	18	True				
ANR	5933835	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 7 ] ) ) << 56	307:11:7140:7174	5933486	19	True				
ANR	5933836	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 7 ] ) ) << 56		5933486	0		^=			
ANR	5933837	Identifier	k1		5933486	0					
ANR	5933838	ShiftExpression	( ( uint64_t ) ( tail [ 7 ] ) ) << 56		5933486	1		<<			
ANR	5933839	CastExpression	( uint64_t ) ( tail [ 7 ] )		5933486	0					
ANR	5933840	CastTarget	uint64_t		5933486	0					
ANR	5933841	ArrayIndexing	tail [ 7 ]		5933486	1					
ANR	5933842	Identifier	tail		5933486	0					
ANR	5933843	PrimaryExpression	7		5933486	1					
ANR	5933844	PrimaryExpression	56		5933486	1					
ANR	5933845	Label	case 7 :	308:2:7178:7185	5933486	20	True				
ANR	5933846	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 6 ] ) ) << 48	308:11:7187:7221	5933486	21	True				
ANR	5933847	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 6 ] ) ) << 48		5933486	0		^=			
ANR	5933848	Identifier	k1		5933486	0					
ANR	5933849	ShiftExpression	( ( uint64_t ) ( tail [ 6 ] ) ) << 48		5933486	1		<<			
ANR	5933850	CastExpression	( uint64_t ) ( tail [ 6 ] )		5933486	0					
ANR	5933851	CastTarget	uint64_t		5933486	0					
ANR	5933852	ArrayIndexing	tail [ 6 ]		5933486	1					
ANR	5933853	Identifier	tail		5933486	0					
ANR	5933854	PrimaryExpression	6		5933486	1					
ANR	5933855	PrimaryExpression	48		5933486	1					
ANR	5933856	Label	case 6 :	309:2:7225:7232	5933486	22	True				
ANR	5933857	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 5 ] ) ) << 40	309:11:7234:7268	5933486	23	True				
ANR	5933858	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 5 ] ) ) << 40		5933486	0		^=			
ANR	5933859	Identifier	k1		5933486	0					
ANR	5933860	ShiftExpression	( ( uint64_t ) ( tail [ 5 ] ) ) << 40		5933486	1		<<			
ANR	5933861	CastExpression	( uint64_t ) ( tail [ 5 ] )		5933486	0					
ANR	5933862	CastTarget	uint64_t		5933486	0					
ANR	5933863	ArrayIndexing	tail [ 5 ]		5933486	1					
ANR	5933864	Identifier	tail		5933486	0					
ANR	5933865	PrimaryExpression	5		5933486	1					
ANR	5933866	PrimaryExpression	40		5933486	1					
ANR	5933867	Label	case 5 :	310:2:7272:7279	5933486	24	True				
ANR	5933868	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 4 ] ) ) << 32	310:11:7281:7315	5933486	25	True				
ANR	5933869	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 4 ] ) ) << 32		5933486	0		^=			
ANR	5933870	Identifier	k1		5933486	0					
ANR	5933871	ShiftExpression	( ( uint64_t ) ( tail [ 4 ] ) ) << 32		5933486	1		<<			
ANR	5933872	CastExpression	( uint64_t ) ( tail [ 4 ] )		5933486	0					
ANR	5933873	CastTarget	uint64_t		5933486	0					
ANR	5933874	ArrayIndexing	tail [ 4 ]		5933486	1					
ANR	5933875	Identifier	tail		5933486	0					
ANR	5933876	PrimaryExpression	4		5933486	1					
ANR	5933877	PrimaryExpression	32		5933486	1					
ANR	5933878	Label	case 4 :	311:2:7319:7326	5933486	26	True				
ANR	5933879	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 3 ] ) ) << 24	311:11:7328:7362	5933486	27	True				
ANR	5933880	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 3 ] ) ) << 24		5933486	0		^=			
ANR	5933881	Identifier	k1		5933486	0					
ANR	5933882	ShiftExpression	( ( uint64_t ) ( tail [ 3 ] ) ) << 24		5933486	1		<<			
ANR	5933883	CastExpression	( uint64_t ) ( tail [ 3 ] )		5933486	0					
ANR	5933884	CastTarget	uint64_t		5933486	0					
ANR	5933885	ArrayIndexing	tail [ 3 ]		5933486	1					
ANR	5933886	Identifier	tail		5933486	0					
ANR	5933887	PrimaryExpression	3		5933486	1					
ANR	5933888	PrimaryExpression	24		5933486	1					
ANR	5933889	Label	case 3 :	312:2:7366:7373	5933486	28	True				
ANR	5933890	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 2 ] ) ) << 16	312:11:7375:7409	5933486	29	True				
ANR	5933891	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 2 ] ) ) << 16		5933486	0		^=			
ANR	5933892	Identifier	k1		5933486	0					
ANR	5933893	ShiftExpression	( ( uint64_t ) ( tail [ 2 ] ) ) << 16		5933486	1		<<			
ANR	5933894	CastExpression	( uint64_t ) ( tail [ 2 ] )		5933486	0					
ANR	5933895	CastTarget	uint64_t		5933486	0					
ANR	5933896	ArrayIndexing	tail [ 2 ]		5933486	1					
ANR	5933897	Identifier	tail		5933486	0					
ANR	5933898	PrimaryExpression	2		5933486	1					
ANR	5933899	PrimaryExpression	16		5933486	1					
ANR	5933900	Label	case 2 :	313:2:7413:7420	5933486	30	True				
ANR	5933901	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 1 ] ) ) << 8	313:11:7422:7455	5933486	31	True				
ANR	5933902	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 1 ] ) ) << 8		5933486	0		^=			
ANR	5933903	Identifier	k1		5933486	0					
ANR	5933904	ShiftExpression	( ( uint64_t ) ( tail [ 1 ] ) ) << 8		5933486	1		<<			
ANR	5933905	CastExpression	( uint64_t ) ( tail [ 1 ] )		5933486	0					
ANR	5933906	CastTarget	uint64_t		5933486	0					
ANR	5933907	ArrayIndexing	tail [ 1 ]		5933486	1					
ANR	5933908	Identifier	tail		5933486	0					
ANR	5933909	PrimaryExpression	1		5933486	1					
ANR	5933910	PrimaryExpression	8		5933486	1					
ANR	5933911	Label	case 1 :	314:2:7459:7466	5933486	32	True				
ANR	5933912	ExpressionStatement	k1 ^= ( ( uint64_t ) ( tail [ 0 ] ) ) << 0	314:11:7468:7501	5933486	33	True				
ANR	5933913	AssignmentExpression	k1 ^= ( ( uint64_t ) ( tail [ 0 ] ) ) << 0		5933486	0		^=			
ANR	5933914	Identifier	k1		5933486	0					
ANR	5933915	ShiftExpression	( ( uint64_t ) ( tail [ 0 ] ) ) << 0		5933486	1		<<			
ANR	5933916	CastExpression	( uint64_t ) ( tail [ 0 ] )		5933486	0					
ANR	5933917	CastTarget	uint64_t		5933486	0					
ANR	5933918	ArrayIndexing	tail [ 0 ]		5933486	1					
ANR	5933919	Identifier	tail		5933486	0					
ANR	5933920	PrimaryExpression	0		5933486	1					
ANR	5933921	PrimaryExpression	0		5933486	1					
ANR	5933922	ExpressionStatement	k1 *= c1	315:3:7506:7514	5933486	34	True				
ANR	5933923	AssignmentExpression	k1 *= c1		5933486	0		*=			
ANR	5933924	Identifier	k1		5933486	0					
ANR	5933925	Identifier	c1		5933486	1					
ANR	5933926	ExpressionStatement	"k1 = hash_rotl_64 ( k1 , 31 )"	315:13:7516:7541	5933486	35	True				
ANR	5933927	AssignmentExpression	"k1 = hash_rotl_64 ( k1 , 31 )"		5933486	0		=			
ANR	5933928	Identifier	k1		5933486	0					
ANR	5933929	CallExpression	"hash_rotl_64 ( k1 , 31 )"		5933486	1					
ANR	5933930	Callee	hash_rotl_64		5933486	0					
ANR	5933931	Identifier	hash_rotl_64		5933486	0					
ANR	5933932	ArgumentList	k1		5933486	1					
ANR	5933933	Argument	k1		5933486	0					
ANR	5933934	Identifier	k1		5933486	0					
ANR	5933935	Argument	31		5933486	1					
ANR	5933936	PrimaryExpression	31		5933486	0					
ANR	5933937	ExpressionStatement	k1 *= c2	315:40:7543:7551	5933486	36	True				
ANR	5933938	AssignmentExpression	k1 *= c2		5933486	0		*=			
ANR	5933939	Identifier	k1		5933486	0					
ANR	5933940	Identifier	c2		5933486	1					
ANR	5933941	ExpressionStatement	h1 ^= k1	315:50:7553:7561	5933486	37	True				
ANR	5933942	AssignmentExpression	h1 ^= k1		5933486	0		^=			
ANR	5933943	Identifier	h1		5933486	0					
ANR	5933944	Identifier	k1		5933486	1					
ANR	5933945	ExpressionStatement	h1 ^= len	320:1:7592:7601	5933486	8	True				
ANR	5933946	AssignmentExpression	h1 ^= len		5933486	0		^=			
ANR	5933947	Identifier	h1		5933486	0					
ANR	5933948	Identifier	len		5933486	1					
ANR	5933949	ExpressionStatement	h2 ^= len	320:12:7603:7612	5933486	9	True				
ANR	5933950	AssignmentExpression	h2 ^= len		5933486	0		^=			
ANR	5933951	Identifier	h2		5933486	0					
ANR	5933952	Identifier	len		5933486	1					
ANR	5933953	ExpressionStatement	h1 += h2	322:1:7616:7624	5933486	10	True				
ANR	5933954	AssignmentExpression	h1 += h2		5933486	0		+=			
ANR	5933955	Identifier	h1		5933486	0					
ANR	5933956	Identifier	h2		5933486	1					
ANR	5933957	ExpressionStatement	h2 += h1	323:1:7627:7635	5933486	11	True				
ANR	5933958	AssignmentExpression	h2 += h1		5933486	0		+=			
ANR	5933959	Identifier	h2		5933486	0					
ANR	5933960	Identifier	h1		5933486	1					
ANR	5933961	ExpressionStatement	h1 = hash_fmix_64 ( h1 )	325:1:7639:7660	5933486	12	True				
ANR	5933962	AssignmentExpression	h1 = hash_fmix_64 ( h1 )		5933486	0		=			
ANR	5933963	Identifier	h1		5933486	0					
ANR	5933964	CallExpression	hash_fmix_64 ( h1 )		5933486	1					
ANR	5933965	Callee	hash_fmix_64		5933486	0					
ANR	5933966	Identifier	hash_fmix_64		5933486	0					
ANR	5933967	ArgumentList	h1		5933486	1					
ANR	5933968	Argument	h1		5933486	0					
ANR	5933969	Identifier	h1		5933486	0					
ANR	5933970	ExpressionStatement	h2 = hash_fmix_64 ( h2 )	326:1:7663:7684	5933486	13	True				
ANR	5933971	AssignmentExpression	h2 = hash_fmix_64 ( h2 )		5933486	0		=			
ANR	5933972	Identifier	h2		5933486	0					
ANR	5933973	CallExpression	hash_fmix_64 ( h2 )		5933486	1					
ANR	5933974	Callee	hash_fmix_64		5933486	0					
ANR	5933975	Identifier	hash_fmix_64		5933486	0					
ANR	5933976	ArgumentList	h2		5933486	1					
ANR	5933977	Argument	h2		5933486	0					
ANR	5933978	Identifier	h2		5933486	0					
ANR	5933979	ExpressionStatement	h1 += h2	328:1:7688:7696	5933486	14	True				
ANR	5933980	AssignmentExpression	h1 += h2		5933486	0		+=			
ANR	5933981	Identifier	h1		5933486	0					
ANR	5933982	Identifier	h2		5933486	1					
ANR	5933983	ExpressionStatement	h2 += h1	329:1:7699:7707	5933486	15	True				
ANR	5933984	AssignmentExpression	h2 += h1		5933486	0		+=			
ANR	5933985	Identifier	h2		5933486	0					
ANR	5933986	Identifier	h1		5933486	1					
ANR	5933987	ExpressionStatement	r_out [ 0 ] = h1	331:1:7711:7724	5933486	16	True				
ANR	5933988	AssignmentExpression	r_out [ 0 ] = h1		5933486	0		=			
ANR	5933989	ArrayIndexing	r_out [ 0 ]		5933486	0					
ANR	5933990	Identifier	r_out		5933486	0					
ANR	5933991	PrimaryExpression	0		5933486	1					
ANR	5933992	Identifier	h1		5933486	1					
ANR	5933993	ExpressionStatement	r_out [ 1 ] = h2	332:1:7727:7740	5933486	17	True				
ANR	5933994	AssignmentExpression	r_out [ 1 ] = h2		5933486	0		=			
ANR	5933995	ArrayIndexing	r_out [ 1 ]		5933486	0					
ANR	5933996	Identifier	r_out		5933486	0					
ANR	5933997	PrimaryExpression	1		5933486	1					
ANR	5933998	Identifier	h2		5933486	1					
ANR	5933999	ReturnType	UNUSED JEMALLOC_INLINE void		5933486	1					
ANR	5934000	Identifier	hash_x64_128		5933486	2					
ANR	5934001	ParameterList	"const void * key , const int len , const uint32_t seed , uint64_t r_out [ 2 ]"		5933486	3					
ANR	5934002	Parameter	const void * key	258:13:5827:5841	5933486	0	True				
ANR	5934003	ParameterType	const void *		5933486	0					
ANR	5934004	Identifier	key		5933486	1					
ANR	5934005	Parameter	const int len	258:30:5844:5856	5933486	1	True				
ANR	5934006	ParameterType	const int		5933486	0					
ANR	5934007	Identifier	len		5933486	1					
ANR	5934008	Parameter	const uint32_t seed	258:45:5859:5877	5933486	2	True				
ANR	5934009	ParameterType	const uint32_t		5933486	0					
ANR	5934010	Identifier	seed		5933486	1					
ANR	5934011	Parameter	uint64_t r_out [ 2 ]	259:4:5884:5900	5933486	3	True				
ANR	5934012	ParameterType	uint64_t [ 2 ]		5933486	0					
ANR	5934013	Identifier	r_out		5933486	1					
ANR	5934014	CFGEntryNode	ENTRY		5933486		True				
ANR	5934015	CFGExitNode	EXIT		5933486		True				
ANR	5934016	Symbol	* tail		5933486						
ANR	5934017	Symbol	seed		5933486						
ANR	5934018	Symbol	data		5933486						
ANR	5934019	Symbol	hash_rotl_64		5933486						
ANR	5934020	Symbol	blocks		5933486						
ANR	5934021	Symbol	k1		5933486						
ANR	5934022	Symbol	tail		5933486						
ANR	5934023	Symbol	k2		5933486						
ANR	5934024	Symbol	h1		5933486						
ANR	5934025	Symbol	i		5933486						
ANR	5934026	Symbol	h2		5933486						
ANR	5934027	Symbol	c1		5933486						
ANR	5934028	Symbol	KQU		5933486						
ANR	5934029	Symbol	c2		5933486						
ANR	5934030	Symbol	r_out		5933486						
ANR	5934031	Symbol	len		5933486						
ANR	5934032	Symbol	nblocks		5933486						
ANR	5934033	Symbol	key		5933486						
ANR	5934034	Symbol	hash_fmix_64		5933486						
ANR	5934035	Symbol	hash_get_block_64		5933486						
ANR	5934036	Symbol	* r_out		5933486						
ANR	5934037	Function	hash	337:0:7837:8271							
ANR	5934038	FunctionDef	"hash (const void * key , size_t len , const uint32_t seed , size_t r_hash [ 2 ])"		5934037	0					
ANR	5934039	CompoundStatement		339:0:7931:8271	5934037	0					
ANR	5934040	ExpressionStatement	assert ( len <= INT_MAX )	341:1:7935:7957	5934037	0	True				
ANR	5934041	CallExpression	assert ( len <= INT_MAX )		5934037	0					
ANR	5934042	Callee	assert		5934037	0					
ANR	5934043	Identifier	assert		5934037	0					
ANR	5934044	ArgumentList	len <= INT_MAX		5934037	1					
ANR	5934045	Argument	len <= INT_MAX		5934037	0					
ANR	5934046	RelationalExpression	len <= INT_MAX		5934037	0		<=			
ANR	5934047	Identifier	len		5934037	0					
ANR	5934048	Identifier	INT_MAX		5934037	1					
ANR	5934049	ExpressionStatement	"hash_x64_128 ( key , ( int ) len , seed , ( uint64_t * ) r_hash )"	344:1:8064:8117	5934037	1	True				
ANR	5934050	CallExpression	"hash_x64_128 ( key , ( int ) len , seed , ( uint64_t * ) r_hash )"		5934037	0					
ANR	5934051	Callee	hash_x64_128		5934037	0					
ANR	5934052	Identifier	hash_x64_128		5934037	0					
ANR	5934053	ArgumentList	key		5934037	1					
ANR	5934054	Argument	key		5934037	0					
ANR	5934055	Identifier	key		5934037	0					
ANR	5934056	Argument	( int ) len		5934037	1					
ANR	5934057	CastExpression	( int ) len		5934037	0					
ANR	5934058	CastTarget	int		5934037	0					
ANR	5934059	Identifier	len		5934037	1					
ANR	5934060	Argument	seed		5934037	2					
ANR	5934061	Identifier	seed		5934037	0					
ANR	5934062	Argument	( uint64_t * ) r_hash		5934037	3					
ANR	5934063	CastExpression	( uint64_t * ) r_hash		5934037	0					
ANR	5934064	CastTarget	uint64_t *		5934037	0					
ANR	5934065	Identifier	r_hash		5934037	1					
ANR	5934066	ReturnType	JEMALLOC_INLINE void		5934037	1					
ANR	5934067	Identifier	hash		5934037	2					
ANR	5934068	ParameterList	"const void * key , size_t len , const uint32_t seed , size_t r_hash [ 2 ]"		5934037	3					
ANR	5934069	Parameter	const void * key	338:5:7863:7877	5934037	0	True				
ANR	5934070	ParameterType	const void *		5934037	0					
ANR	5934071	Identifier	key		5934037	1					
ANR	5934072	Parameter	size_t len	338:22:7880:7889	5934037	1	True				
ANR	5934073	ParameterType	size_t		5934037	0					
ANR	5934074	Identifier	len		5934037	1					
ANR	5934075	Parameter	const uint32_t seed	338:34:7892:7910	5934037	2	True				
ANR	5934076	ParameterType	const uint32_t		5934037	0					
ANR	5934077	Identifier	seed		5934037	1					
ANR	5934078	Parameter	size_t r_hash [ 2 ]	338:55:7913:7928	5934037	3	True				
ANR	5934079	ParameterType	size_t [ 2 ]		5934037	0					
ANR	5934080	Identifier	r_hash		5934037	1					
ANR	5934081	CFGEntryNode	ENTRY		5934037		True				
ANR	5934082	CFGExitNode	EXIT		5934037		True				
ANR	5934083	Symbol	len		5934037						
ANR	5934084	Symbol	seed		5934037						
ANR	5934085	Symbol	r_hash		5934037						
ANR	5934086	Symbol	INT_MAX		5934037						
ANR	5934087	Symbol	key		5934037						
