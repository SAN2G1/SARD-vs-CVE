command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4997995	File	data/converged/CVE-2019-16718~_radare2/libr_main_rasm2.c								
ANR	4997996	ClassDef	<unnamed>	12:8:236:346							
ANR	4997997	DeclStmt									
ANR	4997998	Decl							RLib	RLib *	l
ANR	4997999	DeclStmt									
ANR	4998000	Decl							RAsm	RAsm *	a
ANR	4998001	DeclStmt									
ANR	4998002	Decl							RAnal	RAnal *	anal
ANR	4998003	DeclStmt									
ANR	4998004	Decl							bool	bool	oneliner
ANR	4998005	DeclStmt									
ANR	4998006	Decl							bool	bool	coutput
ANR	4998007	DeclStmt									
ANR	4998008	Decl							bool	bool	json
ANR	4998009	DeclStmt									
ANR	4998010	Decl							bool	bool	quiet
ANR	4998011	DeclStmt									
ANR	4998012	Decl									RAsmState
ANR	4998013	DeclStmt									
ANR	4998014	Decl							void	void ( RAsmState * as )	__load_plugins
ANR	4998015	Function	__as_set_archbits	24:0:393:634							
ANR	4998016	FunctionDef	__as_set_archbits (RAsmState * as)		4998015	0					
ANR	4998017	CompoundStatement		24:45:438:634	4998015	0					
ANR	4998018	ExpressionStatement	"r_asm_use ( as -> a , R_SYS_ARCH )"	25:1:441:470	4998015	0	True				
ANR	4998019	CallExpression	"r_asm_use ( as -> a , R_SYS_ARCH )"		4998015	0					
ANR	4998020	Callee	r_asm_use		4998015	0					
ANR	4998021	Identifier	r_asm_use		4998015	0					
ANR	4998022	ArgumentList	as -> a		4998015	1					
ANR	4998023	Argument	as -> a		4998015	0					
ANR	4998024	PtrMemberAccess	as -> a		4998015	0					
ANR	4998025	Identifier	as		4998015	0					
ANR	4998026	Identifier	a		4998015	1					
ANR	4998027	Argument	R_SYS_ARCH		4998015	1					
ANR	4998028	Identifier	R_SYS_ARCH		4998015	0					
ANR	4998029	ExpressionStatement	"r_anal_use ( as -> anal , R_SYS_ARCH )"	26:1:473:506	4998015	1	True				
ANR	4998030	CallExpression	"r_anal_use ( as -> anal , R_SYS_ARCH )"		4998015	0					
ANR	4998031	Callee	r_anal_use		4998015	0					
ANR	4998032	Identifier	r_anal_use		4998015	0					
ANR	4998033	ArgumentList	as -> anal		4998015	1					
ANR	4998034	Argument	as -> anal		4998015	0					
ANR	4998035	PtrMemberAccess	as -> anal		4998015	0					
ANR	4998036	Identifier	as		4998015	0					
ANR	4998037	Identifier	anal		4998015	1					
ANR	4998038	Argument	R_SYS_ARCH		4998015	1					
ANR	4998039	Identifier	R_SYS_ARCH		4998015	0					
ANR	4998040	IdentifierDeclStatement	int sysbits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32 ;	28:1:510:560	4998015	2	True				
ANR	4998041	IdentifierDecl	sysbits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		4998015	0					
ANR	4998042	IdentifierDeclType	int		4998015	0					
ANR	4998043	Identifier	sysbits		4998015	1					
ANR	4998044	AssignmentExpression	sysbits = ( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		4998015	2		=			
ANR	4998045	Identifier	sysbits		4998015	0					
ANR	4998046	ConditionalExpression	( R_SYS_BITS & R_SYS_BITS_64 ) ? 64 : 32		4998015	1					
ANR	4998047	Condition	R_SYS_BITS & R_SYS_BITS_64		4998015	0					
ANR	4998048	BitAndExpression	R_SYS_BITS & R_SYS_BITS_64		4998015	0		&			
ANR	4998049	Identifier	R_SYS_BITS		4998015	0					
ANR	4998050	Identifier	R_SYS_BITS_64		4998015	1					
ANR	4998051	PrimaryExpression	64		4998015	1					
ANR	4998052	PrimaryExpression	32		4998015	2					
ANR	4998053	ExpressionStatement	"r_asm_set_bits ( as -> a , sysbits )"	29:1:563:594	4998015	3	True				
ANR	4998054	CallExpression	"r_asm_set_bits ( as -> a , sysbits )"		4998015	0					
ANR	4998055	Callee	r_asm_set_bits		4998015	0					
ANR	4998056	Identifier	r_asm_set_bits		4998015	0					
ANR	4998057	ArgumentList	as -> a		4998015	1					
ANR	4998058	Argument	as -> a		4998015	0					
ANR	4998059	PtrMemberAccess	as -> a		4998015	0					
ANR	4998060	Identifier	as		4998015	0					
ANR	4998061	Identifier	a		4998015	1					
ANR	4998062	Argument	sysbits		4998015	1					
ANR	4998063	Identifier	sysbits		4998015	0					
ANR	4998064	ExpressionStatement	"r_anal_set_bits ( as -> anal , sysbits )"	30:1:597:632	4998015	4	True				
ANR	4998065	CallExpression	"r_anal_set_bits ( as -> anal , sysbits )"		4998015	0					
ANR	4998066	Callee	r_anal_set_bits		4998015	0					
ANR	4998067	Identifier	r_anal_set_bits		4998015	0					
ANR	4998068	ArgumentList	as -> anal		4998015	1					
ANR	4998069	Argument	as -> anal		4998015	0					
ANR	4998070	PtrMemberAccess	as -> anal		4998015	0					
ANR	4998071	Identifier	as		4998015	0					
ANR	4998072	Identifier	anal		4998015	1					
ANR	4998073	Argument	sysbits		4998015	1					
ANR	4998074	Identifier	sysbits		4998015	0					
ANR	4998075	ReturnType	static void		4998015	1					
ANR	4998076	Identifier	__as_set_archbits		4998015	2					
ANR	4998077	ParameterList	RAsmState * as		4998015	3					
ANR	4998078	Parameter	RAsmState * as	24:30:423:435	4998015	0	True				
ANR	4998079	ParameterType	RAsmState *		4998015	0					
ANR	4998080	Identifier	as		4998015	1					
ANR	4998081	CFGEntryNode	ENTRY		4998015		True				
ANR	4998082	CFGExitNode	EXIT		4998015		True				
ANR	4998083	Symbol	as		4998015						
ANR	4998084	Symbol	as -> a		4998015						
ANR	4998085	Symbol	as -> anal		4998015						
ANR	4998086	Symbol	R_SYS_ARCH		4998015						
ANR	4998087	Symbol	R_SYS_BITS		4998015						
ANR	4998088	Symbol	sysbits		4998015						
ANR	4998089	Symbol	* as		4998015						
ANR	4998090	Symbol	R_SYS_BITS_64		4998015						
ANR	4998091	Function	__as_new	33:0:637:882							
ANR	4998092	FunctionDef	__as_new ()		4998091	0					
ANR	4998093	CompoundStatement		33:29:666:882	4998091	0					
ANR	4998094	IdentifierDeclStatement	RAsmState * as = R_NEW0 ( RAsmState ) ;	34:1:669:703	4998091	0	True				
ANR	4998095	IdentifierDecl	* as = R_NEW0 ( RAsmState )		4998091	0					
ANR	4998096	IdentifierDeclType	RAsmState *		4998091	0					
ANR	4998097	Identifier	as		4998091	1					
ANR	4998098	AssignmentExpression	* as = R_NEW0 ( RAsmState )		4998091	2		=			
ANR	4998099	Identifier	as		4998091	0					
ANR	4998100	CallExpression	R_NEW0 ( RAsmState )		4998091	1					
ANR	4998101	Callee	R_NEW0		4998091	0					
ANR	4998102	Identifier	R_NEW0		4998091	0					
ANR	4998103	ArgumentList	RAsmState		4998091	1					
ANR	4998104	Argument	RAsmState		4998091	0					
ANR	4998105	Identifier	RAsmState		4998091	0					
ANR	4998106	IfStatement	if ( ! as )		4998091	1					
ANR	4998107	Condition	! as	35:5:710:712	4998091	0	True				
ANR	4998108	UnaryOperationExpression	! as		4998091	0					
ANR	4998109	UnaryOperator	!		4998091	0					
ANR	4998110	Identifier	as		4998091	1					
ANR	4998111	CompoundStatement		3:10:48:48	4998091	1					
ANR	4998112	ReturnStatement	return NULL ;	36:2:719:730	4998091	0	True				
ANR	4998113	Identifier	NULL		4998091	0					
ANR	4998114	ExpressionStatement	"as -> l = r_lib_new ( ""radare_plugin"" )"	38:1:736:771	4998091	2	True				
ANR	4998115	AssignmentExpression	"as -> l = r_lib_new ( ""radare_plugin"" )"		4998091	0		=			
ANR	4998116	PtrMemberAccess	as -> l		4998091	0					
ANR	4998117	Identifier	as		4998091	0					
ANR	4998118	Identifier	l		4998091	1					
ANR	4998119	CallExpression	"r_lib_new ( ""radare_plugin"" )"		4998091	1					
ANR	4998120	Callee	r_lib_new		4998091	0					
ANR	4998121	Identifier	r_lib_new		4998091	0					
ANR	4998122	ArgumentList	"""radare_plugin"""		4998091	1					
ANR	4998123	Argument	"""radare_plugin"""		4998091	0					
ANR	4998124	PrimaryExpression	"""radare_plugin"""		4998091	0					
ANR	4998125	ExpressionStatement	as -> a = r_asm_new ( )	39:1:774:794	4998091	3	True				
ANR	4998126	AssignmentExpression	as -> a = r_asm_new ( )		4998091	0		=			
ANR	4998127	PtrMemberAccess	as -> a		4998091	0					
ANR	4998128	Identifier	as		4998091	0					
ANR	4998129	Identifier	a		4998091	1					
ANR	4998130	CallExpression	r_asm_new ( )		4998091	1					
ANR	4998131	Callee	r_asm_new		4998091	0					
ANR	4998132	Identifier	r_asm_new		4998091	0					
ANR	4998133	ArgumentList			4998091	1					
ANR	4998134	ExpressionStatement	as -> anal = r_anal_new ( )	40:1:797:821	4998091	4	True				
ANR	4998135	AssignmentExpression	as -> anal = r_anal_new ( )		4998091	0		=			
ANR	4998136	PtrMemberAccess	as -> anal		4998091	0					
ANR	4998137	Identifier	as		4998091	0					
ANR	4998138	Identifier	anal		4998091	1					
ANR	4998139	CallExpression	r_anal_new ( )		4998091	1					
ANR	4998140	Callee	r_anal_new		4998091	0					
ANR	4998141	Identifier	r_anal_new		4998091	0					
ANR	4998142	ArgumentList			4998091	1					
ANR	4998143	ExpressionStatement	__load_plugins ( as )	41:1:824:843	4998091	5	True				
ANR	4998144	CallExpression	__load_plugins ( as )		4998091	0					
ANR	4998145	Callee	__load_plugins		4998091	0					
ANR	4998146	Identifier	__load_plugins		4998091	0					
ANR	4998147	ArgumentList	as		4998091	1					
ANR	4998148	Argument	as		4998091	0					
ANR	4998149	Identifier	as		4998091	0					
ANR	4998150	ExpressionStatement	__as_set_archbits ( as )	42:1:846:868	4998091	6	True				
ANR	4998151	CallExpression	__as_set_archbits ( as )		4998091	0					
ANR	4998152	Callee	__as_set_archbits		4998091	0					
ANR	4998153	Identifier	__as_set_archbits		4998091	0					
ANR	4998154	ArgumentList	as		4998091	1					
ANR	4998155	Argument	as		4998091	0					
ANR	4998156	Identifier	as		4998091	0					
ANR	4998157	ReturnStatement	return as ;	43:1:871:880	4998091	7	True				
ANR	4998158	Identifier	as		4998091	0					
ANR	4998159	ReturnType	static RAsmState *		4998091	1					
ANR	4998160	Identifier	__as_new		4998091	2					
ANR	4998161	ParameterList			4998091	3					
ANR	4998162	CFGEntryNode	ENTRY		4998091		True				
ANR	4998163	CFGExitNode	EXIT		4998091		True				
ANR	4998164	Symbol	r_asm_new		4998091						
ANR	4998165	Symbol	R_NEW0		4998091						
ANR	4998166	Symbol	r_lib_new		4998091						
ANR	4998167	Symbol	as		4998091						
ANR	4998168	Symbol	as -> a		4998091						
ANR	4998169	Symbol	NULL		4998091						
ANR	4998170	Symbol	RAsmState		4998091						
ANR	4998171	Symbol	as -> anal		4998091						
ANR	4998172	Symbol	as -> l		4998091						
ANR	4998173	Symbol	* as		4998091						
ANR	4998174	Symbol	r_anal_new		4998091						
ANR	4998175	Function	__as_free	46:0:885:991							
ANR	4998176	FunctionDef	__as_free (RAsmState * as)		4998175	0					
ANR	4998177	CompoundStatement		46:37:922:991	4998175	0					
ANR	4998178	ExpressionStatement	r_asm_free ( as -> a )	47:1:925:943	4998175	0	True				
ANR	4998179	CallExpression	r_asm_free ( as -> a )		4998175	0					
ANR	4998180	Callee	r_asm_free		4998175	0					
ANR	4998181	Identifier	r_asm_free		4998175	0					
ANR	4998182	ArgumentList	as -> a		4998175	1					
ANR	4998183	Argument	as -> a		4998175	0					
ANR	4998184	PtrMemberAccess	as -> a		4998175	0					
ANR	4998185	Identifier	as		4998175	0					
ANR	4998186	Identifier	a		4998175	1					
ANR	4998187	ExpressionStatement	r_anal_free ( as -> anal )	48:1:946:968	4998175	1	True				
ANR	4998188	CallExpression	r_anal_free ( as -> anal )		4998175	0					
ANR	4998189	Callee	r_anal_free		4998175	0					
ANR	4998190	Identifier	r_anal_free		4998175	0					
ANR	4998191	ArgumentList	as -> anal		4998175	1					
ANR	4998192	Argument	as -> anal		4998175	0					
ANR	4998193	PtrMemberAccess	as -> anal		4998175	0					
ANR	4998194	Identifier	as		4998175	0					
ANR	4998195	Identifier	anal		4998175	1					
ANR	4998196	ExpressionStatement	r_lib_free ( as -> l )	49:1:971:989	4998175	2	True				
ANR	4998197	CallExpression	r_lib_free ( as -> l )		4998175	0					
ANR	4998198	Callee	r_lib_free		4998175	0					
ANR	4998199	Identifier	r_lib_free		4998175	0					
ANR	4998200	ArgumentList	as -> l		4998175	1					
ANR	4998201	Argument	as -> l		4998175	0					
ANR	4998202	PtrMemberAccess	as -> l		4998175	0					
ANR	4998203	Identifier	as		4998175	0					
ANR	4998204	Identifier	l		4998175	1					
ANR	4998205	ReturnType	static void		4998175	1					
ANR	4998206	Identifier	__as_free		4998175	2					
ANR	4998207	ParameterList	RAsmState * as		4998175	3					
ANR	4998208	Parameter	RAsmState * as	46:22:907:919	4998175	0	True				
ANR	4998209	ParameterType	RAsmState *		4998175	0					
ANR	4998210	Identifier	as		4998175	1					
ANR	4998211	CFGEntryNode	ENTRY		4998175		True				
ANR	4998212	CFGExitNode	EXIT		4998175		True				
ANR	4998213	Symbol	as		4998175						
ANR	4998214	Symbol	as -> a		4998175						
ANR	4998215	Symbol	as -> anal		4998175						
ANR	4998216	Symbol	as -> l		4998175						
ANR	4998217	Symbol	* as		4998175						
ANR	4998218	Function	stackop2str	52:0:994:1328							
ANR	4998219	FunctionDef	stackop2str (int type)		4998218	0					
ANR	4998220	CompoundStatement		52:35:1029:1328	4998218	0					
ANR	4998221	SwitchStatement	switch ( type )		4998218	0					
ANR	4998222	Condition	type	53:9:1040:1043	4998218	0	True				
ANR	4998223	Identifier	type		4998218	0					
ANR	4998224	CompoundStatement		2:15:16:16	4998218	1					
ANR	4998225	Label	case R_ANAL_STACK_NULL :	54:1:1049:1071	4998218	0	True				
ANR	4998226	Identifier	R_ANAL_STACK_NULL		4998218	0					
ANR	4998227	ReturnStatement	"return strdup ( ""null"" ) ;"	54:25:1073:1095	4998218	1	True				
ANR	4998228	CallExpression	"strdup ( ""null"" )"		4998218	0					
ANR	4998229	Callee	strdup		4998218	0					
ANR	4998230	Identifier	strdup		4998218	0					
ANR	4998231	ArgumentList	"""null"""		4998218	1					
ANR	4998232	Argument	"""null"""		4998218	0					
ANR	4998233	PrimaryExpression	"""null"""		4998218	0					
ANR	4998234	Label	case R_ANAL_STACK_NOP :	55:1:1098:1119	4998218	2	True				
ANR	4998235	Identifier	R_ANAL_STACK_NOP		4998218	0					
ANR	4998236	ReturnStatement	"return strdup ( ""nop"" ) ;"	55:24:1121:1142	4998218	3	True				
ANR	4998237	CallExpression	"strdup ( ""nop"" )"		4998218	0					
ANR	4998238	Callee	strdup		4998218	0					
ANR	4998239	Identifier	strdup		4998218	0					
ANR	4998240	ArgumentList	"""nop"""		4998218	1					
ANR	4998241	Argument	"""nop"""		4998218	0					
ANR	4998242	PrimaryExpression	"""nop"""		4998218	0					
ANR	4998243	Label	case R_ANAL_STACK_GET :	57:1:1204:1225	4998218	4	True				
ANR	4998244	Identifier	R_ANAL_STACK_GET		4998218	0					
ANR	4998245	ReturnStatement	"return strdup ( ""get"" ) ;"	57:24:1227:1248	4998218	5	True				
ANR	4998246	CallExpression	"strdup ( ""get"" )"		4998218	0					
ANR	4998247	Callee	strdup		4998218	0					
ANR	4998248	Identifier	strdup		4998218	0					
ANR	4998249	ArgumentList	"""get"""		4998218	1					
ANR	4998250	Argument	"""get"""		4998218	0					
ANR	4998251	PrimaryExpression	"""get"""		4998218	0					
ANR	4998252	Label	case R_ANAL_STACK_SET :	58:1:1251:1272	4998218	6	True				
ANR	4998253	Identifier	R_ANAL_STACK_SET		4998218	0					
ANR	4998254	ReturnStatement	"return strdup ( ""set"" ) ;"	58:24:1274:1295	4998218	7	True				
ANR	4998255	CallExpression	"strdup ( ""set"" )"		4998218	0					
ANR	4998256	Callee	strdup		4998218	0					
ANR	4998257	Identifier	strdup		4998218	0					
ANR	4998258	ArgumentList	"""set"""		4998218	1					
ANR	4998259	Argument	"""set"""		4998218	0					
ANR	4998260	PrimaryExpression	"""set"""		4998218	0					
ANR	4998261	ReturnStatement	"return strdup ( ""unknown"" ) ;"	60:1:1301:1326	4998218	1	True				
ANR	4998262	CallExpression	"strdup ( ""unknown"" )"		4998218	0					
ANR	4998263	Callee	strdup		4998218	0					
ANR	4998264	Identifier	strdup		4998218	0					
ANR	4998265	ArgumentList	"""unknown"""		4998218	1					
ANR	4998266	Argument	"""unknown"""		4998218	0					
ANR	4998267	PrimaryExpression	"""unknown"""		4998218	0					
ANR	4998268	ReturnType	static char *		4998218	1					
ANR	4998269	Identifier	stackop2str		4998218	2					
ANR	4998270	ParameterList	int type		4998218	3					
ANR	4998271	Parameter	int type	52:25:1019:1026	4998218	0	True				
ANR	4998272	ParameterType	int		4998218	0					
ANR	4998273	Identifier	type		4998218	1					
ANR	4998274	CFGEntryNode	ENTRY		4998218		True				
ANR	4998275	CFGExitNode	EXIT		4998218		True				
ANR	4998276	Symbol	strdup		4998218						
ANR	4998277	Symbol	type		4998218						
ANR	4998278	Function	showanal	64:0:1347:2973							
ANR	4998279	FunctionDef	"showanal (RAsmState * as , RAnalOp * op , ut64 offset , ut8 * buf , int len , PJ * pj)"		4998278	0					
ANR	4998280	CompoundStatement		64:88:1435:2973	4998278	0					
ANR	4998281	IdentifierDeclStatement	"int ret = r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL ) ;"	65:1:1438:1511	4998278	0	True				
ANR	4998282	IdentifierDecl	"ret = r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL )"		4998278	0					
ANR	4998283	IdentifierDeclType	int		4998278	0					
ANR	4998284	Identifier	ret		4998278	1					
ANR	4998285	AssignmentExpression	"ret = r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL )"		4998278	2		=			
ANR	4998286	Identifier	ret		4998278	0					
ANR	4998287	CallExpression	"r_anal_op ( as -> anal , op , offset , buf , len , R_ANAL_OP_MASK_ESIL )"		4998278	1					
ANR	4998288	Callee	r_anal_op		4998278	0					
ANR	4998289	Identifier	r_anal_op		4998278	0					
ANR	4998290	ArgumentList	as -> anal		4998278	1					
ANR	4998291	Argument	as -> anal		4998278	0					
ANR	4998292	PtrMemberAccess	as -> anal		4998278	0					
ANR	4998293	Identifier	as		4998278	0					
ANR	4998294	Identifier	anal		4998278	1					
ANR	4998295	Argument	op		4998278	1					
ANR	4998296	Identifier	op		4998278	0					
ANR	4998297	Argument	offset		4998278	2					
ANR	4998298	Identifier	offset		4998278	0					
ANR	4998299	Argument	buf		4998278	3					
ANR	4998300	Identifier	buf		4998278	0					
ANR	4998301	Argument	len		4998278	4					
ANR	4998302	Identifier	len		4998278	0					
ANR	4998303	Argument	R_ANAL_OP_MASK_ESIL		4998278	5					
ANR	4998304	Identifier	R_ANAL_OP_MASK_ESIL		4998278	0					
ANR	4998305	IfStatement	if ( ret < 1 )		4998278	1					
ANR	4998306	Condition	ret < 1	66:5:1518:1524	4998278	0	True				
ANR	4998307	RelationalExpression	ret < 1		4998278	0		<			
ANR	4998308	Identifier	ret		4998278	0					
ANR	4998309	PrimaryExpression	1		4998278	1					
ANR	4998310	CompoundStatement		3:14:91:91	4998278	1					
ANR	4998311	ReturnStatement	return ret ;	67:2:1531:1541	4998278	0	True				
ANR	4998312	Identifier	ret		4998278	0					
ANR	4998313	IdentifierDeclStatement	char * stackop = stackop2str ( op -> stackop ) ;	69:1:1547:1588	4998278	2	True				
ANR	4998314	IdentifierDecl	* stackop = stackop2str ( op -> stackop )		4998278	0					
ANR	4998315	IdentifierDeclType	char *		4998278	0					
ANR	4998316	Identifier	stackop		4998278	1					
ANR	4998317	AssignmentExpression	* stackop = stackop2str ( op -> stackop )		4998278	2		=			
ANR	4998318	Identifier	stackop		4998278	0					
ANR	4998319	CallExpression	stackop2str ( op -> stackop )		4998278	1					
ANR	4998320	Callee	stackop2str		4998278	0					
ANR	4998321	Identifier	stackop2str		4998278	0					
ANR	4998322	ArgumentList	op -> stackop		4998278	1					
ANR	4998323	Argument	op -> stackop		4998278	0					
ANR	4998324	PtrMemberAccess	op -> stackop		4998278	0					
ANR	4998325	Identifier	op		4998278	0					
ANR	4998326	Identifier	stackop		4998278	1					
ANR	4998327	IdentifierDeclStatement	const char * optype = r_anal_optype_to_string ( op -> type ) ;	70:1:1591:1646	4998278	3	True				
ANR	4998328	IdentifierDecl	* optype = r_anal_optype_to_string ( op -> type )		4998278	0					
ANR	4998329	IdentifierDeclType	const char *		4998278	0					
ANR	4998330	Identifier	optype		4998278	1					
ANR	4998331	AssignmentExpression	* optype = r_anal_optype_to_string ( op -> type )		4998278	2		=			
ANR	4998332	Identifier	optype		4998278	0					
ANR	4998333	CallExpression	r_anal_optype_to_string ( op -> type )		4998278	1					
ANR	4998334	Callee	r_anal_optype_to_string		4998278	0					
ANR	4998335	Identifier	r_anal_optype_to_string		4998278	0					
ANR	4998336	ArgumentList	op -> type		4998278	1					
ANR	4998337	Argument	op -> type		4998278	0					
ANR	4998338	PtrMemberAccess	op -> type		4998278	0					
ANR	4998339	Identifier	op		4998278	0					
ANR	4998340	Identifier	type		4998278	1					
ANR	4998341	IdentifierDeclStatement	"char * bytes = r_hex_bin2strdup ( buf , ret ) ;"	71:1:1649:1690	4998278	4	True				
ANR	4998342	IdentifierDecl	"* bytes = r_hex_bin2strdup ( buf , ret )"		4998278	0					
ANR	4998343	IdentifierDeclType	char *		4998278	0					
ANR	4998344	Identifier	bytes		4998278	1					
ANR	4998345	AssignmentExpression	"* bytes = r_hex_bin2strdup ( buf , ret )"		4998278	2		=			
ANR	4998346	Identifier	bytes		4998278	0					
ANR	4998347	CallExpression	"r_hex_bin2strdup ( buf , ret )"		4998278	1					
ANR	4998348	Callee	r_hex_bin2strdup		4998278	0					
ANR	4998349	Identifier	r_hex_bin2strdup		4998278	0					
ANR	4998350	ArgumentList	buf		4998278	1					
ANR	4998351	Argument	buf		4998278	0					
ANR	4998352	Identifier	buf		4998278	0					
ANR	4998353	Argument	ret		4998278	1					
ANR	4998354	Identifier	ret		4998278	0					
ANR	4998355	IfStatement	if ( as -> json )		4998278	5					
ANR	4998356	Condition	as -> json	72:5:1697:1704	4998278	0	True				
ANR	4998357	PtrMemberAccess	as -> json		4998278	0					
ANR	4998358	Identifier	as		4998278	0					
ANR	4998359	Identifier	json		4998278	1					
ANR	4998360	CompoundStatement		9:15:271:271	4998278	1					
ANR	4998361	ExpressionStatement	pj_o ( pj )	73:2:1711:1720	4998278	0	True				
ANR	4998362	CallExpression	pj_o ( pj )		4998278	0					
ANR	4998363	Callee	pj_o		4998278	0					
ANR	4998364	Identifier	pj_o		4998278	0					
ANR	4998365	ArgumentList	pj		4998278	1					
ANR	4998366	Argument	pj		4998278	0					
ANR	4998367	Identifier	pj		4998278	0					
ANR	4998368	ExpressionStatement	"pj_kn ( pj , ""opcode"" , offset )"	74:2:1724:1752	4998278	1	True				
ANR	4998369	CallExpression	"pj_kn ( pj , ""opcode"" , offset )"		4998278	0					
ANR	4998370	Callee	pj_kn		4998278	0					
ANR	4998371	Identifier	pj_kn		4998278	0					
ANR	4998372	ArgumentList	pj		4998278	1					
ANR	4998373	Argument	pj		4998278	0					
ANR	4998374	Identifier	pj		4998278	0					
ANR	4998375	Argument	"""opcode"""		4998278	1					
ANR	4998376	PrimaryExpression	"""opcode"""		4998278	0					
ANR	4998377	Argument	offset		4998278	2					
ANR	4998378	Identifier	offset		4998278	0					
ANR	4998379	ExpressionStatement	"pj_ks ( pj , ""bytes"" , bytes )"	75:2:1756:1782	4998278	2	True				
ANR	4998380	CallExpression	"pj_ks ( pj , ""bytes"" , bytes )"		4998278	0					
ANR	4998381	Callee	pj_ks		4998278	0					
ANR	4998382	Identifier	pj_ks		4998278	0					
ANR	4998383	ArgumentList	pj		4998278	1					
ANR	4998384	Argument	pj		4998278	0					
ANR	4998385	Identifier	pj		4998278	0					
ANR	4998386	Argument	"""bytes"""		4998278	1					
ANR	4998387	PrimaryExpression	"""bytes"""		4998278	0					
ANR	4998388	Argument	bytes		4998278	2					
ANR	4998389	Identifier	bytes		4998278	0					
ANR	4998390	ExpressionStatement	"pj_ks ( pj , ""type"" , optype )"	76:2:1786:1812	4998278	3	True				
ANR	4998391	CallExpression	"pj_ks ( pj , ""type"" , optype )"		4998278	0					
ANR	4998392	Callee	pj_ks		4998278	0					
ANR	4998393	Identifier	pj_ks		4998278	0					
ANR	4998394	ArgumentList	pj		4998278	1					
ANR	4998395	Argument	pj		4998278	0					
ANR	4998396	Identifier	pj		4998278	0					
ANR	4998397	Argument	"""type"""		4998278	1					
ANR	4998398	PrimaryExpression	"""type"""		4998278	0					
ANR	4998399	Argument	optype		4998278	2					
ANR	4998400	Identifier	optype		4998278	0					
ANR	4998401	IfStatement	if ( op -> jump != UT64_MAX )		4998278	4					
ANR	4998402	Condition	op -> jump != UT64_MAX	77:6:1820:1839	4998278	0	True				
ANR	4998403	EqualityExpression	op -> jump != UT64_MAX		4998278	0		!=			
ANR	4998404	PtrMemberAccess	op -> jump		4998278	0					
ANR	4998405	Identifier	op		4998278	0					
ANR	4998406	Identifier	jump		4998278	1					
ANR	4998407	Identifier	UT64_MAX		4998278	1					
ANR	4998408	CompoundStatement		14:28:406:406	4998278	1					
ANR	4998409	ExpressionStatement	"pj_kn ( pj , ""jump"" , op -> jump )"	78:3:1847:1875	4998278	0	True				
ANR	4998410	CallExpression	"pj_kn ( pj , ""jump"" , op -> jump )"		4998278	0					
ANR	4998411	Callee	pj_kn		4998278	0					
ANR	4998412	Identifier	pj_kn		4998278	0					
ANR	4998413	ArgumentList	pj		4998278	1					
ANR	4998414	Argument	pj		4998278	0					
ANR	4998415	Identifier	pj		4998278	0					
ANR	4998416	Argument	"""jump"""		4998278	1					
ANR	4998417	PrimaryExpression	"""jump"""		4998278	0					
ANR	4998418	Argument	op -> jump		4998278	2					
ANR	4998419	PtrMemberAccess	op -> jump		4998278	0					
ANR	4998420	Identifier	op		4998278	0					
ANR	4998421	Identifier	jump		4998278	1					
ANR	4998422	IfStatement	if ( op -> fail != UT64_MAX )		4998278	5					
ANR	4998423	Condition	op -> fail != UT64_MAX	80:6:1887:1906	4998278	0	True				
ANR	4998424	EqualityExpression	op -> fail != UT64_MAX		4998278	0		!=			
ANR	4998425	PtrMemberAccess	op -> fail		4998278	0					
ANR	4998426	Identifier	op		4998278	0					
ANR	4998427	Identifier	fail		4998278	1					
ANR	4998428	Identifier	UT64_MAX		4998278	1					
ANR	4998429	CompoundStatement		17:28:473:473	4998278	1					
ANR	4998430	ExpressionStatement	"pj_kn ( pj , ""fail"" , op -> fail )"	81:3:1914:1942	4998278	0	True				
ANR	4998431	CallExpression	"pj_kn ( pj , ""fail"" , op -> fail )"		4998278	0					
ANR	4998432	Callee	pj_kn		4998278	0					
ANR	4998433	Identifier	pj_kn		4998278	0					
ANR	4998434	ArgumentList	pj		4998278	1					
ANR	4998435	Argument	pj		4998278	0					
ANR	4998436	Identifier	pj		4998278	0					
ANR	4998437	Argument	"""fail"""		4998278	1					
ANR	4998438	PrimaryExpression	"""fail"""		4998278	0					
ANR	4998439	Argument	op -> fail		4998278	2					
ANR	4998440	PtrMemberAccess	op -> fail		4998278	0					
ANR	4998441	Identifier	op		4998278	0					
ANR	4998442	Identifier	fail		4998278	1					
ANR	4998443	IfStatement	if ( op -> val != UT64_MAX )		4998278	6					
ANR	4998444	Condition	op -> val != UT64_MAX	83:6:1954:1972	4998278	0	True				
ANR	4998445	EqualityExpression	op -> val != UT64_MAX		4998278	0		!=			
ANR	4998446	PtrMemberAccess	op -> val		4998278	0					
ANR	4998447	Identifier	op		4998278	0					
ANR	4998448	Identifier	val		4998278	1					
ANR	4998449	Identifier	UT64_MAX		4998278	1					
ANR	4998450	CompoundStatement		20:27:539:539	4998278	1					
ANR	4998451	ExpressionStatement	"pj_kn ( pj , ""val"" , op -> val )"	84:3:1980:2006	4998278	0	True				
ANR	4998452	CallExpression	"pj_kn ( pj , ""val"" , op -> val )"		4998278	0					
ANR	4998453	Callee	pj_kn		4998278	0					
ANR	4998454	Identifier	pj_kn		4998278	0					
ANR	4998455	ArgumentList	pj		4998278	1					
ANR	4998456	Argument	pj		4998278	0					
ANR	4998457	Identifier	pj		4998278	0					
ANR	4998458	Argument	"""val"""		4998278	1					
ANR	4998459	PrimaryExpression	"""val"""		4998278	0					
ANR	4998460	Argument	op -> val		4998278	2					
ANR	4998461	PtrMemberAccess	op -> val		4998278	0					
ANR	4998462	Identifier	op		4998278	0					
ANR	4998463	Identifier	val		4998278	1					
ANR	4998464	IfStatement	if ( op -> ptr != UT64_MAX )		4998278	7					
ANR	4998465	Condition	op -> ptr != UT64_MAX	86:6:2018:2036	4998278	0	True				
ANR	4998466	EqualityExpression	op -> ptr != UT64_MAX		4998278	0		!=			
ANR	4998467	PtrMemberAccess	op -> ptr		4998278	0					
ANR	4998468	Identifier	op		4998278	0					
ANR	4998469	Identifier	ptr		4998278	1					
ANR	4998470	Identifier	UT64_MAX		4998278	1					
ANR	4998471	CompoundStatement		23:27:603:603	4998278	1					
ANR	4998472	ExpressionStatement	"pj_kn ( pj , ""ptr"" , op -> ptr )"	87:3:2044:2070	4998278	0	True				
ANR	4998473	CallExpression	"pj_kn ( pj , ""ptr"" , op -> ptr )"		4998278	0					
ANR	4998474	Callee	pj_kn		4998278	0					
ANR	4998475	Identifier	pj_kn		4998278	0					
ANR	4998476	ArgumentList	pj		4998278	1					
ANR	4998477	Argument	pj		4998278	0					
ANR	4998478	Identifier	pj		4998278	0					
ANR	4998479	Argument	"""ptr"""		4998278	1					
ANR	4998480	PrimaryExpression	"""ptr"""		4998278	0					
ANR	4998481	Argument	op -> ptr		4998278	2					
ANR	4998482	PtrMemberAccess	op -> ptr		4998278	0					
ANR	4998483	Identifier	op		4998278	0					
ANR	4998484	Identifier	ptr		4998278	1					
ANR	4998485	ExpressionStatement	"pj_ks ( pj , ""stackop"" , stackop )"	89:2:2078:2108	4998278	8	True				
ANR	4998486	CallExpression	"pj_ks ( pj , ""stackop"" , stackop )"		4998278	0					
ANR	4998487	Callee	pj_ks		4998278	0					
ANR	4998488	Identifier	pj_ks		4998278	0					
ANR	4998489	ArgumentList	pj		4998278	1					
ANR	4998490	Argument	pj		4998278	0					
ANR	4998491	Identifier	pj		4998278	0					
ANR	4998492	Argument	"""stackop"""		4998278	1					
ANR	4998493	PrimaryExpression	"""stackop"""		4998278	0					
ANR	4998494	Argument	stackop		4998278	2					
ANR	4998495	Identifier	stackop		4998278	0					
ANR	4998496	ExpressionStatement	"pj_ks ( pj , ""esil"" , r_strbuf_get ( & op -> esil ) )"	90:2:2112:2156	4998278	9	True				
ANR	4998497	CallExpression	"pj_ks ( pj , ""esil"" , r_strbuf_get ( & op -> esil ) )"		4998278	0					
ANR	4998498	Callee	pj_ks		4998278	0					
ANR	4998499	Identifier	pj_ks		4998278	0					
ANR	4998500	ArgumentList	pj		4998278	1					
ANR	4998501	Argument	pj		4998278	0					
ANR	4998502	Identifier	pj		4998278	0					
ANR	4998503	Argument	"""esil"""		4998278	1					
ANR	4998504	PrimaryExpression	"""esil"""		4998278	0					
ANR	4998505	Argument	r_strbuf_get ( & op -> esil )		4998278	2					
ANR	4998506	CallExpression	r_strbuf_get ( & op -> esil )		4998278	0					
ANR	4998507	Callee	r_strbuf_get		4998278	0					
ANR	4998508	Identifier	r_strbuf_get		4998278	0					
ANR	4998509	ArgumentList	& op -> esil		4998278	1					
ANR	4998510	Argument	& op -> esil		4998278	0					
ANR	4998511	UnaryOperationExpression	& op -> esil		4998278	0					
ANR	4998512	UnaryOperator	&		4998278	0					
ANR	4998513	PtrMemberAccess	op -> esil		4998278	1					
ANR	4998514	Identifier	op		4998278	0					
ANR	4998515	Identifier	esil		4998278	1					
ANR	4998516	ExpressionStatement	"pj_kn ( pj , ""stackptr"" , op -> stackptr )"	91:2:2160:2196	4998278	10	True				
ANR	4998517	CallExpression	"pj_kn ( pj , ""stackptr"" , op -> stackptr )"		4998278	0					
ANR	4998518	Callee	pj_kn		4998278	0					
ANR	4998519	Identifier	pj_kn		4998278	0					
ANR	4998520	ArgumentList	pj		4998278	1					
ANR	4998521	Argument	pj		4998278	0					
ANR	4998522	Identifier	pj		4998278	0					
ANR	4998523	Argument	"""stackptr"""		4998278	1					
ANR	4998524	PrimaryExpression	"""stackptr"""		4998278	0					
ANR	4998525	Argument	op -> stackptr		4998278	2					
ANR	4998526	PtrMemberAccess	op -> stackptr		4998278	0					
ANR	4998527	Identifier	op		4998278	0					
ANR	4998528	Identifier	stackptr		4998278	1					
ANR	4998529	ExpressionStatement	pj_end ( pj )	92:2:2200:2211	4998278	11	True				
ANR	4998530	CallExpression	pj_end ( pj )		4998278	0					
ANR	4998531	Callee	pj_end		4998278	0					
ANR	4998532	Identifier	pj_end		4998278	0					
ANR	4998533	ArgumentList	pj		4998278	1					
ANR	4998534	Argument	pj		4998278	0					
ANR	4998535	Identifier	pj		4998278	0					
ANR	4998536	ElseStatement	else		4998278	0					
ANR	4998537	CompoundStatement		30:8:785:785	4998278	0					
ANR	4998538	Statement	printf	94:2:2225:2230	4998278	0	True				
ANR	4998539	Statement	(	94:9:2232:2232	4998278	1	True				
ANR	4998540	Statement	"""offset:   0x%08"""	94:10:2233:2249	4998278	2	True				
ANR	4998541	Statement	PFMT64x	94:28:2251:2257	4998278	3	True				
ANR	4998542	Statement	"""\\n"""	94:36:2259:2262	4998278	4	True				
ANR	4998543	Statement	","	94:40:2263:2263	4998278	5	True				
ANR	4998544	Statement	offset	94:42:2265:2270	4998278	6	True				
ANR	4998545	Statement	)	94:48:2271:2271	4998278	7	True				
ANR	4998546	ExpressionStatement		94:49:2272:2272	4998278	8	True				
ANR	4998547	ExpressionStatement	"printf ( ""bytes:    %s\\n"" , bytes )"	95:2:2276:2308	4998278	9	True				
ANR	4998548	CallExpression	"printf ( ""bytes:    %s\\n"" , bytes )"		4998278	0					
ANR	4998549	Callee	printf		4998278	0					
ANR	4998550	Identifier	printf		4998278	0					
ANR	4998551	ArgumentList	"""bytes:    %s\\n"""		4998278	1					
ANR	4998552	Argument	"""bytes:    %s\\n"""		4998278	0					
ANR	4998553	PrimaryExpression	"""bytes:    %s\\n"""		4998278	0					
ANR	4998554	Argument	bytes		4998278	1					
ANR	4998555	Identifier	bytes		4998278	0					
ANR	4998556	ExpressionStatement	"printf ( ""type:     %s\\n"" , optype )"	96:2:2312:2345	4998278	10	True				
ANR	4998557	CallExpression	"printf ( ""type:     %s\\n"" , optype )"		4998278	0					
ANR	4998558	Callee	printf		4998278	0					
ANR	4998559	Identifier	printf		4998278	0					
ANR	4998560	ArgumentList	"""type:     %s\\n"""		4998278	1					
ANR	4998561	Argument	"""type:     %s\\n"""		4998278	0					
ANR	4998562	PrimaryExpression	"""type:     %s\\n"""		4998278	0					
ANR	4998563	Argument	optype		4998278	1					
ANR	4998564	Identifier	optype		4998278	0					
ANR	4998565	Statement	if	97:2:2349:2350	4998278	11	True				
ANR	4998566	Statement	(	97:5:2352:2352	4998278	12	True				
ANR	4998567	Statement	op	97:6:2353:2354	4998278	13	True				
ANR	4998568	Statement	->	97:8:2355:2356	4998278	14	True				
ANR	4998569	Statement	jump	97:10:2357:2360	4998278	15	True				
ANR	4998570	Statement	!=	97:15:2362:2363	4998278	16	True				
ANR	4998571	Statement	-	97:18:2365:2365	4998278	17	True				
ANR	4998572	Statement	1L	97:19:2366:2367	4998278	18	True				
ANR	4998573	Statement	L	97:21:2368:2368	4998278	19	True				
ANR	4998574	Statement	)	97:22:2369:2369	4998278	20	True				
ANR	4998575	CompoundStatement		34:24:935:935	4998278	21					
ANR	4998576	Statement	printf	98:3:2376:2381	4998278	0	True				
ANR	4998577	Statement	(	98:10:2383:2383	4998278	1	True				
ANR	4998578	Statement	"""jump:     0x%08"""	98:11:2384:2400	4998278	2	True				
ANR	4998579	Statement	PFMT64x	98:29:2402:2408	4998278	3	True				
ANR	4998580	Statement	"""\\n"""	98:37:2410:2413	4998278	4	True				
ANR	4998581	Statement	","	98:41:2414:2414	4998278	5	True				
ANR	4998582	Statement	op	98:43:2416:2417	4998278	6	True				
ANR	4998583	Statement	->	98:45:2418:2419	4998278	7	True				
ANR	4998584	Statement	jump	98:47:2420:2423	4998278	8	True				
ANR	4998585	Statement	)	98:51:2424:2424	4998278	9	True				
ANR	4998586	ExpressionStatement		98:52:2425:2425	4998278	10	True				
ANR	4998587	Statement	if	100:2:2433:2434	4998278	22	True				
ANR	4998588	Statement	(	100:5:2436:2436	4998278	23	True				
ANR	4998589	Statement	op	100:6:2437:2438	4998278	24	True				
ANR	4998590	Statement	->	100:8:2439:2440	4998278	25	True				
ANR	4998591	Statement	fail	100:10:2441:2444	4998278	26	True				
ANR	4998592	Statement	!=	100:15:2446:2447	4998278	27	True				
ANR	4998593	Statement	-	100:18:2449:2449	4998278	28	True				
ANR	4998594	Statement	1L	100:19:2450:2451	4998278	29	True				
ANR	4998595	Statement	L	100:21:2452:2452	4998278	30	True				
ANR	4998596	Statement	)	100:22:2453:2453	4998278	31	True				
ANR	4998597	CompoundStatement		37:24:1019:1019	4998278	32					
ANR	4998598	Statement	printf	101:3:2460:2465	4998278	0	True				
ANR	4998599	Statement	(	101:10:2467:2467	4998278	1	True				
ANR	4998600	Statement	"""fail:     0x%08"""	101:11:2468:2484	4998278	2	True				
ANR	4998601	Statement	PFMT64x	101:29:2486:2492	4998278	3	True				
ANR	4998602	Statement	"""\\n"""	101:37:2494:2497	4998278	4	True				
ANR	4998603	Statement	","	101:41:2498:2498	4998278	5	True				
ANR	4998604	Statement	op	101:43:2500:2501	4998278	6	True				
ANR	4998605	Statement	->	101:45:2502:2503	4998278	7	True				
ANR	4998606	Statement	fail	101:47:2504:2507	4998278	8	True				
ANR	4998607	Statement	)	101:51:2508:2508	4998278	9	True				
ANR	4998608	ExpressionStatement		101:52:2509:2509	4998278	10	True				
ANR	4998609	Statement	if	105:2:2600:2601	4998278	33	True				
ANR	4998610	Statement	(	105:5:2603:2603	4998278	34	True				
ANR	4998611	Statement	op	105:6:2604:2605	4998278	35	True				
ANR	4998612	Statement	->	105:8:2606:2607	4998278	36	True				
ANR	4998613	Statement	val	105:10:2608:2610	4998278	37	True				
ANR	4998614	Statement	!=	105:14:2612:2613	4998278	38	True				
ANR	4998615	Statement	-	105:17:2615:2615	4998278	39	True				
ANR	4998616	Statement	1L	105:18:2616:2617	4998278	40	True				
ANR	4998617	Statement	L	105:20:2618:2618	4998278	41	True				
ANR	4998618	Statement	)	105:21:2619:2619	4998278	42	True				
ANR	4998619	CompoundStatement		42:23:1185:1185	4998278	43					
ANR	4998620	Statement	printf	106:3:2626:2631	4998278	0	True				
ANR	4998621	Statement	(	106:10:2633:2633	4998278	1	True				
ANR	4998622	Statement	"""value:    0x%08"""	106:11:2634:2650	4998278	2	True				
ANR	4998623	Statement	PFMT64x	106:29:2652:2658	4998278	3	True				
ANR	4998624	Statement	"""\\n"""	106:37:2660:2663	4998278	4	True				
ANR	4998625	Statement	","	106:41:2664:2664	4998278	5	True				
ANR	4998626	Statement	op	106:43:2666:2667	4998278	6	True				
ANR	4998627	Statement	->	106:45:2668:2669	4998278	7	True				
ANR	4998628	Statement	val	106:47:2670:2672	4998278	8	True				
ANR	4998629	Statement	)	106:50:2673:2673	4998278	9	True				
ANR	4998630	ExpressionStatement		106:51:2674:2674	4998278	10	True				
ANR	4998631	ExpressionStatement	"printf ( ""stackop:  %s\\n"" , stackop )"	108:2:2682:2716	4998278	44	True				
ANR	4998632	CallExpression	"printf ( ""stackop:  %s\\n"" , stackop )"		4998278	0					
ANR	4998633	Callee	printf		4998278	0					
ANR	4998634	Identifier	printf		4998278	0					
ANR	4998635	ArgumentList	"""stackop:  %s\\n"""		4998278	1					
ANR	4998636	Argument	"""stackop:  %s\\n"""		4998278	0					
ANR	4998637	PrimaryExpression	"""stackop:  %s\\n"""		4998278	0					
ANR	4998638	Argument	stackop		4998278	1					
ANR	4998639	Identifier	stackop		4998278	0					
ANR	4998640	ExpressionStatement	"printf ( ""esil:     %s\\n"" , r_strbuf_get ( & op -> esil ) )"	109:2:2720:2771	4998278	45	True				
ANR	4998641	CallExpression	"printf ( ""esil:     %s\\n"" , r_strbuf_get ( & op -> esil ) )"		4998278	0					
ANR	4998642	Callee	printf		4998278	0					
ANR	4998643	Identifier	printf		4998278	0					
ANR	4998644	ArgumentList	"""esil:     %s\\n"""		4998278	1					
ANR	4998645	Argument	"""esil:     %s\\n"""		4998278	0					
ANR	4998646	PrimaryExpression	"""esil:     %s\\n"""		4998278	0					
ANR	4998647	Argument	r_strbuf_get ( & op -> esil )		4998278	1					
ANR	4998648	CallExpression	r_strbuf_get ( & op -> esil )		4998278	0					
ANR	4998649	Callee	r_strbuf_get		4998278	0					
ANR	4998650	Identifier	r_strbuf_get		4998278	0					
ANR	4998651	ArgumentList	& op -> esil		4998278	1					
ANR	4998652	Argument	& op -> esil		4998278	0					
ANR	4998653	UnaryOperationExpression	& op -> esil		4998278	0					
ANR	4998654	UnaryOperator	&		4998278	0					
ANR	4998655	PtrMemberAccess	op -> esil		4998278	1					
ANR	4998656	Identifier	op		4998278	0					
ANR	4998657	Identifier	esil		4998278	1					
ANR	4998658	Statement	printf	110:2:2775:2780	4998278	46	True				
ANR	4998659	Statement	(	110:9:2782:2782	4998278	47	True				
ANR	4998660	Statement	"""stackptr: %"""	110:10:2783:2795	4998278	48	True				
ANR	4998661	Statement	PFMT64d	110:24:2797:2803	4998278	49	True				
ANR	4998662	Statement	"""\\n"""	110:32:2805:2808	4998278	50	True				
ANR	4998663	Statement	","	110:36:2809:2809	4998278	51	True				
ANR	4998664	Statement	op	110:38:2811:2812	4998278	52	True				
ANR	4998665	Statement	->	110:40:2813:2814	4998278	53	True				
ANR	4998666	Statement	stackptr	110:42:2815:2822	4998278	54	True				
ANR	4998667	Statement	)	110:50:2823:2823	4998278	55	True				
ANR	4998668	ExpressionStatement		110:51:2824:2824	4998278	56	True				
ANR	4998669	ExpressionStatement	"printf ( ""\\n"" )"	112:2:2910:2923	4998278	57	True				
ANR	4998670	CallExpression	"printf ( ""\\n"" )"		4998278	0					
ANR	4998671	Callee	printf		4998278	0					
ANR	4998672	Identifier	printf		4998278	0					
ANR	4998673	ArgumentList	"""\\n"""		4998278	1					
ANR	4998674	Argument	"""\\n"""		4998278	0					
ANR	4998675	PrimaryExpression	"""\\n"""		4998278	0					
ANR	4998676	ExpressionStatement	free ( stackop )	114:1:2929:2943	4998278	6	True				
ANR	4998677	CallExpression	free ( stackop )		4998278	0					
ANR	4998678	Callee	free		4998278	0					
ANR	4998679	Identifier	free		4998278	0					
ANR	4998680	ArgumentList	stackop		4998278	1					
ANR	4998681	Argument	stackop		4998278	0					
ANR	4998682	Identifier	stackop		4998278	0					
ANR	4998683	ExpressionStatement	free ( bytes )	115:1:2946:2958	4998278	7	True				
ANR	4998684	CallExpression	free ( bytes )		4998278	0					
ANR	4998685	Callee	free		4998278	0					
ANR	4998686	Identifier	free		4998278	0					
ANR	4998687	ArgumentList	bytes		4998278	1					
ANR	4998688	Argument	bytes		4998278	0					
ANR	4998689	Identifier	bytes		4998278	0					
ANR	4998690	ReturnStatement	return ret ;	116:1:2961:2971	4998278	8	True				
ANR	4998691	Identifier	ret		4998278	0					
ANR	4998692	ReturnType	static int		4998278	1					
ANR	4998693	Identifier	showanal		4998278	2					
ANR	4998694	ParameterList	"RAsmState * as , RAnalOp * op , ut64 offset , ut8 * buf , int len , PJ * pj"		4998278	3					
ANR	4998695	Parameter	RAsmState * as	64:20:1367:1379	4998278	0	True				
ANR	4998696	ParameterType	RAsmState *		4998278	0					
ANR	4998697	Identifier	as		4998278	1					
ANR	4998698	Parameter	RAnalOp * op	64:35:1382:1392	4998278	1	True				
ANR	4998699	ParameterType	RAnalOp *		4998278	0					
ANR	4998700	Identifier	op		4998278	1					
ANR	4998701	Parameter	ut64 offset	64:48:1395:1405	4998278	2	True				
ANR	4998702	ParameterType	ut64		4998278	0					
ANR	4998703	Identifier	offset		4998278	1					
ANR	4998704	Parameter	ut8 * buf	64:61:1408:1415	4998278	3	True				
ANR	4998705	ParameterType	ut8 *		4998278	0					
ANR	4998706	Identifier	buf		4998278	1					
ANR	4998707	Parameter	int len	64:71:1418:1424	4998278	4	True				
ANR	4998708	ParameterType	int		4998278	0					
ANR	4998709	Identifier	len		4998278	1					
ANR	4998710	Parameter	PJ * pj	64:80:1427:1432	4998278	5	True				
ANR	4998711	ParameterType	PJ *		4998278	0					
ANR	4998712	Identifier	pj		4998278	1					
ANR	4998713	CFGEntryNode	ENTRY		4998278		True				
ANR	4998714	CFGExitNode	EXIT		4998278		True				
ANR	4998715	Symbol	& op -> esil		4998278						
ANR	4998716	Symbol	* op		4998278						
ANR	4998717	Symbol	stackop2str		4998278						
ANR	4998718	Symbol	r_hex_bin2strdup		4998278						
ANR	4998719	Symbol	r_anal_optype_to_string		4998278						
ANR	4998720	Symbol	op -> fail		4998278						
ANR	4998721	Symbol	stackop		4998278						
ANR	4998722	Symbol	optype		4998278						
ANR	4998723	Symbol	len		4998278						
ANR	4998724	Symbol	op -> stackptr		4998278						
ANR	4998725	Symbol	as -> anal		4998278						
ANR	4998726	Symbol	op -> jump		4998278						
ANR	4998727	Symbol	UT64_MAX		4998278						
ANR	4998728	Symbol	r_anal_op		4998278						
ANR	4998729	Symbol	ret		4998278						
ANR	4998730	Symbol	op		4998278						
ANR	4998731	Symbol	offset		4998278						
ANR	4998732	Symbol	op -> ptr		4998278						
ANR	4998733	Symbol	op -> type		4998278						
ANR	4998734	Symbol	op -> val		4998278						
ANR	4998735	Symbol	as		4998278						
ANR	4998736	Symbol	buf		4998278						
ANR	4998737	Symbol	r_strbuf_get		4998278						
ANR	4998738	Symbol	bytes		4998278						
ANR	4998739	Symbol	as -> json		4998278						
ANR	4998740	Symbol	pj		4998278						
ANR	4998741	Symbol	* as		4998278						
ANR	4998742	Symbol	op -> stackop		4998278						
ANR	4998743	Symbol	R_ANAL_OP_MASK_ESIL		4998278						
ANR	4998744	Function	show_analinfo	120:0:2999:3950							
ANR	4998745	FunctionDef	"show_analinfo (RAsmState * as , const char * arg , ut64 offset)"		4998744	0					
ANR	4998746	CompoundStatement		120:70:3069:3950	4998744	0					
ANR	4998747	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) strdup ( ( const char * ) arg ) ;	121:1:3072:3116	4998744	0	True				
ANR	4998748	IdentifierDecl	* buf = ( ut8 * ) strdup ( ( const char * ) arg )		4998744	0					
ANR	4998749	IdentifierDeclType	ut8 *		4998744	0					
ANR	4998750	Identifier	buf		4998744	1					
ANR	4998751	AssignmentExpression	* buf = ( ut8 * ) strdup ( ( const char * ) arg )		4998744	2		=			
ANR	4998752	Identifier	buf		4998744	0					
ANR	4998753	CastExpression	( ut8 * ) strdup ( ( const char * ) arg )		4998744	1					
ANR	4998754	CastTarget	ut8 *		4998744	0					
ANR	4998755	CallExpression	strdup ( ( const char * ) arg )		4998744	1					
ANR	4998756	Callee	strdup		4998744	0					
ANR	4998757	Identifier	strdup		4998744	0					
ANR	4998758	ArgumentList	( const char * ) arg		4998744	1					
ANR	4998759	Argument	( const char * ) arg		4998744	0					
ANR	4998760	CastExpression	( const char * ) arg		4998744	0					
ANR	4998761	CastTarget	const char *		4998744	0					
ANR	4998762	Identifier	arg		4998744	1					
ANR	4998763	IdentifierDeclStatement	"int ret , len = r_hex_str2bin ( ( char * ) buf , buf ) ;"	122:1:3119:3166	4998744	1	True				
ANR	4998764	IdentifierDecl	ret		4998744	0					
ANR	4998765	IdentifierDeclType	int		4998744	0					
ANR	4998766	Identifier	ret		4998744	1					
ANR	4998767	IdentifierDecl	"len = r_hex_str2bin ( ( char * ) buf , buf )"		4998744	1					
ANR	4998768	IdentifierDeclType	int		4998744	0					
ANR	4998769	Identifier	len		4998744	1					
ANR	4998770	AssignmentExpression	"len = r_hex_str2bin ( ( char * ) buf , buf )"		4998744	2		=			
ANR	4998771	Identifier	len		4998744	0					
ANR	4998772	CallExpression	"r_hex_str2bin ( ( char * ) buf , buf )"		4998744	1					
ANR	4998773	Callee	r_hex_str2bin		4998744	0					
ANR	4998774	Identifier	r_hex_str2bin		4998744	0					
ANR	4998775	ArgumentList	( char * ) buf		4998744	1					
ANR	4998776	Argument	( char * ) buf		4998744	0					
ANR	4998777	CastExpression	( char * ) buf		4998744	0					
ANR	4998778	CastTarget	char *		4998744	0					
ANR	4998779	Identifier	buf		4998744	1					
ANR	4998780	Argument	buf		4998744	1					
ANR	4998781	Identifier	buf		4998744	0					
ANR	4998782	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	123:1:3169:3187	4998744	2	True				
ANR	4998783	IdentifierDecl	* pj = pj_new ( )		4998744	0					
ANR	4998784	IdentifierDeclType	PJ *		4998744	0					
ANR	4998785	Identifier	pj		4998744	1					
ANR	4998786	AssignmentExpression	* pj = pj_new ( )		4998744	2		=			
ANR	4998787	Identifier	pj		4998744	0					
ANR	4998788	CallExpression	pj_new ( )		4998744	1					
ANR	4998789	Callee	pj_new		4998744	0					
ANR	4998790	Identifier	pj_new		4998744	0					
ANR	4998791	ArgumentList			4998744	1					
ANR	4998792	IfStatement	if ( ! pj )		4998744	3					
ANR	4998793	Condition	! pj	124:5:3194:3196	4998744	0	True				
ANR	4998794	UnaryOperationExpression	! pj		4998744	0					
ANR	4998795	UnaryOperator	!		4998744	0					
ANR	4998796	Identifier	pj		4998744	1					
ANR	4998797	CompoundStatement		5:10:129:129	4998744	1					
ANR	4998798	ExpressionStatement	free ( buf )	125:2:3203:3213	4998744	0	True				
ANR	4998799	CallExpression	free ( buf )		4998744	0					
ANR	4998800	Callee	free		4998744	0					
ANR	4998801	Identifier	free		4998744	0					
ANR	4998802	ArgumentList	buf		4998744	1					
ANR	4998803	Argument	buf		4998744	0					
ANR	4998804	Identifier	buf		4998744	0					
ANR	4998805	ReturnStatement	return 0 ;	126:2:3217:3225	4998744	1	True				
ANR	4998806	PrimaryExpression	0		4998744	0					
ANR	4998807	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	129:1:3233:3252	4998744	4	True				
ANR	4998808	IdentifierDecl	aop = { 0 }		4998744	0					
ANR	4998809	IdentifierDeclType	RAnalOp		4998744	0					
ANR	4998810	Identifier	aop		4998744	1					
ANR	4998811	AssignmentExpression	aop = { 0 }		4998744	2		=			
ANR	4998812	Identifier	aop		4998744	0					
ANR	4998813	InitializerList	0		4998744	1					
ANR	4998814	PrimaryExpression	0		4998744	0					
ANR	4998815	IfStatement	if ( as -> json )		4998744	5					
ANR	4998816	Condition	as -> json	131:5:3261:3268	4998744	0	True				
ANR	4998817	PtrMemberAccess	as -> json		4998744	0					
ANR	4998818	Identifier	as		4998744	0					
ANR	4998819	Identifier	json		4998744	1					
ANR	4998820	CompoundStatement		12:15:201:201	4998744	1					
ANR	4998821	ExpressionStatement	pj_a ( pj )	132:2:3275:3284	4998744	0	True				
ANR	4998822	CallExpression	pj_a ( pj )		4998744	0					
ANR	4998823	Callee	pj_a		4998744	0					
ANR	4998824	Identifier	pj_a		4998744	0					
ANR	4998825	ArgumentList	pj		4998744	1					
ANR	4998826	Argument	pj		4998744	0					
ANR	4998827	Identifier	pj		4998744	0					
ANR	4998828	ForStatement	for ( ret = 0 ; ret < len ; )		4998744	6					
ANR	4998829	ForInit	ret = 0 ;	134:6:3295:3302	4998744	0	True				
ANR	4998830	AssignmentExpression	ret = 0		4998744	0		=			
ANR	4998831	Identifier	ret		4998744	0					
ANR	4998832	PrimaryExpression	0		4998744	1					
ANR	4998833	Condition	ret < len	134:15:3304:3312	4998744	1	True				
ANR	4998834	RelationalExpression	ret < len		4998744	0		<			
ANR	4998835	Identifier	ret		4998744	0					
ANR	4998836	Identifier	len		4998744	1					
ANR	4998837	CompoundStatement		15:27:246:246	4998744	2					
ANR	4998838	ExpressionStatement	aop . size = 0	135:2:3320:3332	4998744	0	True				
ANR	4998839	AssignmentExpression	aop . size = 0		4998744	0		=			
ANR	4998840	MemberAccess	aop . size		4998744	0					
ANR	4998841	Identifier	aop		4998744	0					
ANR	4998842	Identifier	size		4998744	1					
ANR	4998843	PrimaryExpression	0		4998744	1					
ANR	4998844	IfStatement	"if ( r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC ) < 1 )"		4998744	1					
ANR	4998845	Condition	"r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC ) < 1"	136:6:3340:3421	4998744	0	True				
ANR	4998846	RelationalExpression	"r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC ) < 1"		4998744	0		<			
ANR	4998847	CallExpression	"r_anal_op ( as -> anal , & aop , offset , buf + ret , len - ret , R_ANAL_OP_MASK_BASIC )"		4998744	0					
ANR	4998848	Callee	r_anal_op		4998744	0					
ANR	4998849	Identifier	r_anal_op		4998744	0					
ANR	4998850	ArgumentList	as -> anal		4998744	1					
ANR	4998851	Argument	as -> anal		4998744	0					
ANR	4998852	PtrMemberAccess	as -> anal		4998744	0					
ANR	4998853	Identifier	as		4998744	0					
ANR	4998854	Identifier	anal		4998744	1					
ANR	4998855	Argument	& aop		4998744	1					
ANR	4998856	UnaryOperationExpression	& aop		4998744	0					
ANR	4998857	UnaryOperator	&		4998744	0					
ANR	4998858	Identifier	aop		4998744	1					
ANR	4998859	Argument	offset		4998744	2					
ANR	4998860	Identifier	offset		4998744	0					
ANR	4998861	Argument	buf + ret		4998744	3					
ANR	4998862	AdditiveExpression	buf + ret		4998744	0		+			
ANR	4998863	Identifier	buf		4998744	0					
ANR	4998864	Identifier	ret		4998744	1					
ANR	4998865	Argument	len - ret		4998744	4					
ANR	4998866	AdditiveExpression	len - ret		4998744	0		-			
ANR	4998867	Identifier	len		4998744	0					
ANR	4998868	Identifier	ret		4998744	1					
ANR	4998869	Argument	R_ANAL_OP_MASK_BASIC		4998744	5					
ANR	4998870	Identifier	R_ANAL_OP_MASK_BASIC		4998744	0					
ANR	4998871	PrimaryExpression	1		4998744	1					
ANR	4998872	CompoundStatement		17:90:354:354	4998744	1					
ANR	4998873	Statement	eprintf	137:3:3429:3435	4998744	0	True				
ANR	4998874	Statement	(	137:11:3437:3437	4998744	1	True				
ANR	4998875	Statement	"""Error analyzing instruction at 0x%08"""	137:12:3438:3475	4998744	2	True				
ANR	4998876	Statement	PFMT64x	137:50:3476:3482	4998744	3	True				
ANR	4998877	Statement	"""\\n"""	137:57:3483:3486	4998744	4	True				
ANR	4998878	Statement	","	137:61:3487:3487	4998744	5	True				
ANR	4998879	Statement	offset	137:63:3489:3494	4998744	6	True				
ANR	4998880	Statement	)	137:69:3495:3495	4998744	7	True				
ANR	4998881	ExpressionStatement		137:70:3496:3496	4998744	8	True				
ANR	4998882	BreakStatement	break ;	138:3:3501:3506	4998744	9	True				
ANR	4998883	IfStatement	if ( aop . size < 1 )		4998744	2					
ANR	4998884	Condition	aop . size < 1	140:6:3518:3529	4998744	0	True				
ANR	4998885	RelationalExpression	aop . size < 1		4998744	0		<			
ANR	4998886	MemberAccess	aop . size		4998744	0					
ANR	4998887	Identifier	aop		4998744	0					
ANR	4998888	Identifier	size		4998744	1					
ANR	4998889	PrimaryExpression	1		4998744	1					
ANR	4998890	CompoundStatement		21:20:462:462	4998744	1					
ANR	4998891	IfStatement	if ( as -> json )		4998744	0					
ANR	4998892	Condition	as -> json	141:7:3541:3548	4998744	0	True				
ANR	4998893	PtrMemberAccess	as -> json		4998744	0					
ANR	4998894	Identifier	as		4998744	0					
ANR	4998895	Identifier	json		4998744	1					
ANR	4998896	CompoundStatement		22:17:481:481	4998744	1					
ANR	4998897	ExpressionStatement	pj_o ( pj )	142:4:3557:3566	4998744	0	True				
ANR	4998898	CallExpression	pj_o ( pj )		4998744	0					
ANR	4998899	Callee	pj_o		4998744	0					
ANR	4998900	Identifier	pj_o		4998744	0					
ANR	4998901	ArgumentList	pj		4998744	1					
ANR	4998902	Argument	pj		4998744	0					
ANR	4998903	Identifier	pj		4998744	0					
ANR	4998904	ExpressionStatement	"pj_ks ( pj , ""bytes"" , r_hex_bin2strdup ( buf , ret ) )"	143:4:3572:3621	4998744	1	True				
ANR	4998905	CallExpression	"pj_ks ( pj , ""bytes"" , r_hex_bin2strdup ( buf , ret ) )"		4998744	0					
ANR	4998906	Callee	pj_ks		4998744	0					
ANR	4998907	Identifier	pj_ks		4998744	0					
ANR	4998908	ArgumentList	pj		4998744	1					
ANR	4998909	Argument	pj		4998744	0					
ANR	4998910	Identifier	pj		4998744	0					
ANR	4998911	Argument	"""bytes"""		4998744	1					
ANR	4998912	PrimaryExpression	"""bytes"""		4998744	0					
ANR	4998913	Argument	"r_hex_bin2strdup ( buf , ret )"		4998744	2					
ANR	4998914	CallExpression	"r_hex_bin2strdup ( buf , ret )"		4998744	0					
ANR	4998915	Callee	r_hex_bin2strdup		4998744	0					
ANR	4998916	Identifier	r_hex_bin2strdup		4998744	0					
ANR	4998917	ArgumentList	buf		4998744	1					
ANR	4998918	Argument	buf		4998744	0					
ANR	4998919	Identifier	buf		4998744	0					
ANR	4998920	Argument	ret		4998744	1					
ANR	4998921	Identifier	ret		4998744	0					
ANR	4998922	ExpressionStatement	"pj_ks ( pj , ""type"" , ""Invalid"" )"	144:4:3627:3656	4998744	2	True				
ANR	4998923	CallExpression	"pj_ks ( pj , ""type"" , ""Invalid"" )"		4998744	0					
ANR	4998924	Callee	pj_ks		4998744	0					
ANR	4998925	Identifier	pj_ks		4998744	0					
ANR	4998926	ArgumentList	pj		4998744	1					
ANR	4998927	Argument	pj		4998744	0					
ANR	4998928	Identifier	pj		4998744	0					
ANR	4998929	Argument	"""type"""		4998744	1					
ANR	4998930	PrimaryExpression	"""type"""		4998744	0					
ANR	4998931	Argument	"""Invalid"""		4998744	2					
ANR	4998932	PrimaryExpression	"""Invalid"""		4998744	0					
ANR	4998933	ExpressionStatement	pj_end ( pj )	145:4:3662:3673	4998744	3	True				
ANR	4998934	CallExpression	pj_end ( pj )		4998744	0					
ANR	4998935	Callee	pj_end		4998744	0					
ANR	4998936	Identifier	pj_end		4998744	0					
ANR	4998937	ArgumentList	pj		4998744	1					
ANR	4998938	Argument	pj		4998744	0					
ANR	4998939	Identifier	pj		4998744	0					
ANR	4998940	ElseStatement	else		4998744	0					
ANR	4998941	CompoundStatement		27:10:615:615	4998744	0					
ANR	4998942	ExpressionStatement	"eprintf ( ""Invalid\\n"" )"	147:4:3691:3712	4998744	0	True				
ANR	4998943	CallExpression	"eprintf ( ""Invalid\\n"" )"		4998744	0					
ANR	4998944	Callee	eprintf		4998744	0					
ANR	4998945	Identifier	eprintf		4998744	0					
ANR	4998946	ArgumentList	"""Invalid\\n"""		4998744	1					
ANR	4998947	Argument	"""Invalid\\n"""		4998744	0					
ANR	4998948	PrimaryExpression	"""Invalid\\n"""		4998744	0					
ANR	4998949	BreakStatement	break ;	149:3:3722:3727	4998744	1	True				
ANR	4998950	ExpressionStatement	"showanal ( as , & aop , offset , buf + ret , len - ret , pj )"	151:2:3735:3788	4998744	3	True				
ANR	4998951	CallExpression	"showanal ( as , & aop , offset , buf + ret , len - ret , pj )"		4998744	0					
ANR	4998952	Callee	showanal		4998744	0					
ANR	4998953	Identifier	showanal		4998744	0					
ANR	4998954	ArgumentList	as		4998744	1					
ANR	4998955	Argument	as		4998744	0					
ANR	4998956	Identifier	as		4998744	0					
ANR	4998957	Argument	& aop		4998744	1					
ANR	4998958	UnaryOperationExpression	& aop		4998744	0					
ANR	4998959	UnaryOperator	&		4998744	0					
ANR	4998960	Identifier	aop		4998744	1					
ANR	4998961	Argument	offset		4998744	2					
ANR	4998962	Identifier	offset		4998744	0					
ANR	4998963	Argument	buf + ret		4998744	3					
ANR	4998964	AdditiveExpression	buf + ret		4998744	0		+			
ANR	4998965	Identifier	buf		4998744	0					
ANR	4998966	Identifier	ret		4998744	1					
ANR	4998967	Argument	len - ret		4998744	4					
ANR	4998968	AdditiveExpression	len - ret		4998744	0		-			
ANR	4998969	Identifier	len		4998744	0					
ANR	4998970	Identifier	ret		4998744	1					
ANR	4998971	Argument	pj		4998744	5					
ANR	4998972	Identifier	pj		4998744	0					
ANR	4998973	ExpressionStatement	ret += aop . size	152:2:3792:3807	4998744	4	True				
ANR	4998974	AssignmentExpression	ret += aop . size		4998744	0		+=			
ANR	4998975	Identifier	ret		4998744	0					
ANR	4998976	MemberAccess	aop . size		4998744	1					
ANR	4998977	Identifier	aop		4998744	0					
ANR	4998978	Identifier	size		4998744	1					
ANR	4998979	ExpressionStatement	r_anal_op_fini ( & aop )	153:2:3811:3832	4998744	5	True				
ANR	4998980	CallExpression	r_anal_op_fini ( & aop )		4998744	0					
ANR	4998981	Callee	r_anal_op_fini		4998744	0					
ANR	4998982	Identifier	r_anal_op_fini		4998744	0					
ANR	4998983	ArgumentList	& aop		4998744	1					
ANR	4998984	Argument	& aop		4998744	0					
ANR	4998985	UnaryOperationExpression	& aop		4998744	0					
ANR	4998986	UnaryOperator	&		4998744	0					
ANR	4998987	Identifier	aop		4998744	1					
ANR	4998988	IfStatement	if ( as -> json )		4998744	7					
ANR	4998989	Condition	as -> json	155:5:3842:3849	4998744	0	True				
ANR	4998990	PtrMemberAccess	as -> json		4998744	0					
ANR	4998991	Identifier	as		4998744	0					
ANR	4998992	Identifier	json		4998744	1					
ANR	4998993	CompoundStatement		36:15:782:782	4998744	1					
ANR	4998994	ExpressionStatement	pj_end ( pj )	156:2:3856:3867	4998744	0	True				
ANR	4998995	CallExpression	pj_end ( pj )		4998744	0					
ANR	4998996	Callee	pj_end		4998744	0					
ANR	4998997	Identifier	pj_end		4998744	0					
ANR	4998998	ArgumentList	pj		4998744	1					
ANR	4998999	Argument	pj		4998744	0					
ANR	4999000	Identifier	pj		4998744	0					
ANR	4999001	ExpressionStatement	"printf ( ""%s\\n"" , pj_string ( pj ) )"	157:2:3872:3903	4998744	1	True				
ANR	4999002	CallExpression	"printf ( ""%s\\n"" , pj_string ( pj ) )"		4998744	0					
ANR	4999003	Callee	printf		4998744	0					
ANR	4999004	Identifier	printf		4998744	0					
ANR	4999005	ArgumentList	"""%s\\n"""		4998744	1					
ANR	4999006	Argument	"""%s\\n"""		4998744	0					
ANR	4999007	PrimaryExpression	"""%s\\n"""		4998744	0					
ANR	4999008	Argument	pj_string ( pj )		4998744	1					
ANR	4999009	CallExpression	pj_string ( pj )		4998744	0					
ANR	4999010	Callee	pj_string		4998744	0					
ANR	4999011	Identifier	pj_string		4998744	0					
ANR	4999012	ArgumentList	pj		4998744	1					
ANR	4999013	Argument	pj		4998744	0					
ANR	4999014	Identifier	pj		4998744	0					
ANR	4999015	ExpressionStatement	pj_free ( pj )	158:2:3907:3919	4998744	2	True				
ANR	4999016	CallExpression	pj_free ( pj )		4998744	0					
ANR	4999017	Callee	pj_free		4998744	0					
ANR	4999018	Identifier	pj_free		4998744	0					
ANR	4999019	ArgumentList	pj		4998744	1					
ANR	4999020	Argument	pj		4998744	0					
ANR	4999021	Identifier	pj		4998744	0					
ANR	4999022	ExpressionStatement	free ( buf )	160:1:3925:3935	4998744	8	True				
ANR	4999023	CallExpression	free ( buf )		4998744	0					
ANR	4999024	Callee	free		4998744	0					
ANR	4999025	Identifier	free		4998744	0					
ANR	4999026	ArgumentList	buf		4998744	1					
ANR	4999027	Argument	buf		4998744	0					
ANR	4999028	Identifier	buf		4998744	0					
ANR	4999029	ReturnStatement	return ret ;	161:1:3938:3948	4998744	9	True				
ANR	4999030	Identifier	ret		4998744	0					
ANR	4999031	ReturnType	static int		4998744	1					
ANR	4999032	Identifier	show_analinfo		4998744	2					
ANR	4999033	ParameterList	"RAsmState * as , const char * arg , ut64 offset"		4998744	3					
ANR	4999034	Parameter	RAsmState * as	120:25:3024:3036	4998744	0	True				
ANR	4999035	ParameterType	RAsmState *		4998744	0					
ANR	4999036	Identifier	as		4998744	1					
ANR	4999037	Parameter	const char * arg	120:40:3039:3053	4998744	1	True				
ANR	4999038	ParameterType	const char *		4998744	0					
ANR	4999039	Identifier	arg		4998744	1					
ANR	4999040	Parameter	ut64 offset	120:57:3056:3066	4998744	2	True				
ANR	4999041	ParameterType	ut64		4998744	0					
ANR	4999042	Identifier	offset		4998744	1					
ANR	4999043	CFGEntryNode	ENTRY		4998744		True				
ANR	4999044	CFGExitNode	EXIT		4998744		True				
ANR	4999045	Symbol	ret		4998744						
ANR	4999046	Symbol	aop		4998744						
ANR	4999047	Symbol	offset		4998744						
ANR	4999048	Symbol	pj_string		4998744						
ANR	4999049	Symbol	r_hex_bin2strdup		4998744						
ANR	4999050	Symbol	R_ANAL_OP_MASK_BASIC		4998744						
ANR	4999051	Symbol	& aop		4998744						
ANR	4999052	Symbol	as		4998744						
ANR	4999053	Symbol	buf		4998744						
ANR	4999054	Symbol	aop . size		4998744						
ANR	4999055	Symbol	len		4998744						
ANR	4999056	Symbol	as -> anal		4998744						
ANR	4999057	Symbol	arg		4998744						
ANR	4999058	Symbol	as -> json		4998744						
ANR	4999059	Symbol	pj		4998744						
ANR	4999060	Symbol	pj_new		4998744						
ANR	4999061	Symbol	strdup		4998744						
ANR	4999062	Symbol	* as		4998744						
ANR	4999063	Symbol	r_hex_str2bin		4998744						
ANR	4999064	Symbol	r_anal_op		4998744						
ANR	4999065	Function	has_esil	164:0:3953:4194							
ANR	4999066	FunctionDef	"has_esil (RAsmState * as , const char * name)"		4999065	0					
ANR	4999067	CompoundStatement		164:61:4014:4194	4999065	0					
ANR	4999068	IdentifierDeclStatement	RListIter * iter ;	165:1:4017:4032	4999065	0	True				
ANR	4999069	IdentifierDecl	* iter		4999065	0					
ANR	4999070	IdentifierDeclType	RListIter *		4999065	0					
ANR	4999071	Identifier	iter		4999065	1					
ANR	4999072	IdentifierDeclStatement	RAnalPlugin * h ;	166:1:4035:4049	4999065	1	True				
ANR	4999073	IdentifierDecl	* h		4999065	0					
ANR	4999074	IdentifierDeclType	RAnalPlugin *		4999065	0					
ANR	4999075	Identifier	h		4999065	1					
ANR	4999076	Statement	r_list_foreach	167:1:4052:4065	4999065	2	True				
ANR	4999077	Statement	(	167:16:4067:4067	4999065	3	True				
ANR	4999078	Statement	as	167:17:4068:4069	4999065	4	True				
ANR	4999079	Statement	->	167:19:4070:4071	4999065	5	True				
ANR	4999080	Statement	anal	167:21:4072:4075	4999065	6	True				
ANR	4999081	Statement	->	167:25:4076:4077	4999065	7	True				
ANR	4999082	Statement	plugins	167:27:4078:4084	4999065	8	True				
ANR	4999083	Statement	","	167:34:4085:4085	4999065	9	True				
ANR	4999084	Statement	iter	167:36:4087:4090	4999065	10	True				
ANR	4999085	Statement	","	167:40:4091:4091	4999065	11	True				
ANR	4999086	Statement	h	167:42:4093:4093	4999065	12	True				
ANR	4999087	Statement	)	167:43:4094:4094	4999065	13	True				
ANR	4999088	CompoundStatement		4:45:81:81	4999065	14					
ANR	4999089	IfStatement	"if ( h -> name && ! strcmp ( name , h -> name ) )"		4999065	0					
ANR	4999090	Condition	"h -> name && ! strcmp ( name , h -> name )"	168:6:4104:4137	4999065	0	True				
ANR	4999091	AndExpression	"h -> name && ! strcmp ( name , h -> name )"		4999065	0		&&			
ANR	4999092	PtrMemberAccess	h -> name		4999065	0					
ANR	4999093	Identifier	h		4999065	0					
ANR	4999094	Identifier	name		4999065	1					
ANR	4999095	UnaryOperationExpression	"! strcmp ( name , h -> name )"		4999065	1					
ANR	4999096	UnaryOperator	!		4999065	0					
ANR	4999097	CallExpression	"strcmp ( name , h -> name )"		4999065	1					
ANR	4999098	Callee	strcmp		4999065	0					
ANR	4999099	Identifier	strcmp		4999065	0					
ANR	4999100	ArgumentList	name		4999065	1					
ANR	4999101	Argument	name		4999065	0					
ANR	4999102	Identifier	name		4999065	0					
ANR	4999103	Argument	h -> name		4999065	1					
ANR	4999104	PtrMemberAccess	h -> name		4999065	0					
ANR	4999105	Identifier	h		4999065	0					
ANR	4999106	Identifier	name		4999065	1					
ANR	4999107	CompoundStatement		5:42:125:125	4999065	1					
ANR	4999108	ReturnStatement	"return h -> esil ? ""Ae"" : ""A_"" ;"	169:3:4145:4171	4999065	0	True				
ANR	4999109	ConditionalExpression	"h -> esil ? ""Ae"" : ""A_"""		4999065	0					
ANR	4999110	Condition	h -> esil		4999065	0					
ANR	4999111	PtrMemberAccess	h -> esil		4999065	0					
ANR	4999112	Identifier	h		4999065	0					
ANR	4999113	Identifier	esil		4999065	1					
ANR	4999114	PrimaryExpression	"""Ae"""		4999065	1					
ANR	4999115	PrimaryExpression	"""A_"""		4999065	2					
ANR	4999116	ReturnStatement	"return ""__"" ;"	172:1:4181:4192	4999065	15	True				
ANR	4999117	PrimaryExpression	"""__"""		4999065	0					
ANR	4999118	ReturnType	static const char *		4999065	1					
ANR	4999119	Identifier	has_esil		4999065	2					
ANR	4999120	ParameterList	"RAsmState * as , const char * name"		4999065	3					
ANR	4999121	Parameter	RAsmState * as	164:28:3981:3993	4999065	0	True				
ANR	4999122	ParameterType	RAsmState *		4999065	0					
ANR	4999123	Identifier	as		4999065	1					
ANR	4999124	Parameter	const char * name	164:43:3996:4011	4999065	1	True				
ANR	4999125	ParameterType	const char *		4999065	0					
ANR	4999126	Identifier	name		4999065	1					
ANR	4999127	CFGEntryNode	ENTRY		4999065		True				
ANR	4999128	CFGExitNode	EXIT		4999065		True				
ANR	4999129	Symbol	strcmp		4999065						
ANR	4999130	Symbol	as		4999065						
ANR	4999131	Symbol	* h		4999065						
ANR	4999132	Symbol	h -> esil		4999065						
ANR	4999133	Symbol	name		4999065						
ANR	4999134	Symbol	h		4999065						
ANR	4999135	Symbol	iter		4999065						
ANR	4999136	Symbol	h -> name		4999065						
ANR	4999137	Function	rasm2_list	175:0:4197:5998							
ANR	4999138	FunctionDef	"rasm2_list (RAsmState * as , const char * arch)"		4999137	0					
ANR	4999139	CompoundStatement		175:56:4253:5998	4999137	0					
ANR	4999140	IdentifierDeclStatement	int i ;	176:1:4256:4261	4999137	0	True				
ANR	4999141	IdentifierDecl	i		4999137	0					
ANR	4999142	IdentifierDeclType	int		4999137	0					
ANR	4999143	Identifier	i		4999137	1					
ANR	4999144	IdentifierDeclStatement	char bits [ 32 ] ;	177:1:4264:4277	4999137	1	True				
ANR	4999145	IdentifierDecl	bits [ 32 ]		4999137	0					
ANR	4999146	IdentifierDeclType	char [ 32 ]		4999137	0					
ANR	4999147	Identifier	bits		4999137	1					
ANR	4999148	PrimaryExpression	32		4999137	2					
ANR	4999149	IdentifierDeclStatement	"const char * feat2 , * feat ;"	178:1:4280:4304	4999137	2	True				
ANR	4999150	IdentifierDecl	* feat2		4999137	0					
ANR	4999151	IdentifierDeclType	const char *		4999137	0					
ANR	4999152	Identifier	feat2		4999137	1					
ANR	4999153	IdentifierDecl	* feat		4999137	1					
ANR	4999154	IdentifierDeclType	const char *		4999137	0					
ANR	4999155	Identifier	feat		4999137	1					
ANR	4999156	IdentifierDeclStatement	RAsmPlugin * h ;	179:1:4307:4320	4999137	3	True				
ANR	4999157	IdentifierDecl	* h		4999137	0					
ANR	4999158	IdentifierDeclType	RAsmPlugin *		4999137	0					
ANR	4999159	Identifier	h		4999137	1					
ANR	4999160	IdentifierDeclStatement	RListIter * iter ;	180:1:4323:4338	4999137	4	True				
ANR	4999161	IdentifierDecl	* iter		4999137	0					
ANR	4999162	IdentifierDeclType	RListIter *		4999137	0					
ANR	4999163	Identifier	iter		4999137	1					
ANR	4999164	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	181:1:4341:4359	4999137	5	True				
ANR	4999165	IdentifierDecl	* pj = pj_new ( )		4999137	0					
ANR	4999166	IdentifierDeclType	PJ *		4999137	0					
ANR	4999167	Identifier	pj		4999137	1					
ANR	4999168	AssignmentExpression	* pj = pj_new ( )		4999137	2		=			
ANR	4999169	Identifier	pj		4999137	0					
ANR	4999170	CallExpression	pj_new ( )		4999137	1					
ANR	4999171	Callee	pj_new		4999137	0					
ANR	4999172	Identifier	pj_new		4999137	0					
ANR	4999173	ArgumentList			4999137	1					
ANR	4999174	IfStatement	if ( ! pj )		4999137	6					
ANR	4999175	Condition	! pj	182:5:4366:4368	4999137	0	True				
ANR	4999176	UnaryOperationExpression	! pj		4999137	0					
ANR	4999177	UnaryOperator	!		4999137	0					
ANR	4999178	Identifier	pj		4999137	1					
ANR	4999179	CompoundStatement		8:10:117:117	4999137	1					
ANR	4999180	ReturnStatement	return ;	183:2:4375:4381	4999137	0	True				
ANR	4999181	IfStatement	if ( as -> json )		4999137	7					
ANR	4999182	Condition	as -> json	185:5:4391:4398	4999137	0	True				
ANR	4999183	PtrMemberAccess	as -> json		4999137	0					
ANR	4999184	Identifier	as		4999137	0					
ANR	4999185	Identifier	json		4999137	1					
ANR	4999186	CompoundStatement		11:15:147:147	4999137	1					
ANR	4999187	ExpressionStatement	pj_o ( pj )	186:2:4405:4414	4999137	0	True				
ANR	4999188	CallExpression	pj_o ( pj )		4999137	0					
ANR	4999189	Callee	pj_o		4999137	0					
ANR	4999190	Identifier	pj_o		4999137	0					
ANR	4999191	ArgumentList	pj		4999137	1					
ANR	4999192	Argument	pj		4999137	0					
ANR	4999193	Identifier	pj		4999137	0					
ANR	4999194	Statement	r_list_foreach	188:1:4420:4433	4999137	8	True				
ANR	4999195	Statement	(	188:16:4435:4435	4999137	9	True				
ANR	4999196	Statement	as	188:17:4436:4437	4999137	10	True				
ANR	4999197	Statement	->	188:19:4438:4439	4999137	11	True				
ANR	4999198	Statement	a	188:21:4440:4440	4999137	12	True				
ANR	4999199	Statement	->	188:22:4441:4442	4999137	13	True				
ANR	4999200	Statement	plugins	188:24:4443:4449	4999137	14	True				
ANR	4999201	Statement	","	188:31:4450:4450	4999137	15	True				
ANR	4999202	Statement	iter	188:33:4452:4455	4999137	16	True				
ANR	4999203	Statement	","	188:37:4456:4456	4999137	17	True				
ANR	4999204	Statement	h	188:39:4458:4458	4999137	18	True				
ANR	4999205	Statement	)	188:40:4459:4459	4999137	19	True				
ANR	4999206	CompoundStatement		14:42:207:207	4999137	20					
ANR	4999207	IfStatement	if ( arch )		4999137	0					
ANR	4999208	Condition	arch	189:6:4469:4472	4999137	0	True				
ANR	4999209	Identifier	arch		4999137	0					
ANR	4999210	CompoundStatement		15:12:221:221	4999137	1					
ANR	4999211	IfStatement	"if ( h -> cpus && ! strcmp ( arch , h -> name ) )"		4999137	0					
ANR	4999212	Condition	"h -> cpus && ! strcmp ( arch , h -> name )"	190:7:4484:4517	4999137	0	True				
ANR	4999213	AndExpression	"h -> cpus && ! strcmp ( arch , h -> name )"		4999137	0		&&			
ANR	4999214	PtrMemberAccess	h -> cpus		4999137	0					
ANR	4999215	Identifier	h		4999137	0					
ANR	4999216	Identifier	cpus		4999137	1					
ANR	4999217	UnaryOperationExpression	"! strcmp ( arch , h -> name )"		4999137	1					
ANR	4999218	UnaryOperator	!		4999137	0					
ANR	4999219	CallExpression	"strcmp ( arch , h -> name )"		4999137	1					
ANR	4999220	Callee	strcmp		4999137	0					
ANR	4999221	Identifier	strcmp		4999137	0					
ANR	4999222	ArgumentList	arch		4999137	1					
ANR	4999223	Argument	arch		4999137	0					
ANR	4999224	Identifier	arch		4999137	0					
ANR	4999225	Argument	h -> name		4999137	1					
ANR	4999226	PtrMemberAccess	h -> name		4999137	0					
ANR	4999227	Identifier	h		4999137	0					
ANR	4999228	Identifier	name		4999137	1					
ANR	4999229	CompoundStatement		18:4:304:332	4999137	1					
ANR	4999230	IdentifierDeclStatement	char * c = strdup ( h -> cpus ) ;	191:4:4526:4552	4999137	0	True				
ANR	4999231	IdentifierDecl	* c = strdup ( h -> cpus )		4999137	0					
ANR	4999232	IdentifierDeclType	char *		4999137	0					
ANR	4999233	Identifier	c		4999137	1					
ANR	4999234	AssignmentExpression	* c = strdup ( h -> cpus )		4999137	2		=			
ANR	4999235	Identifier	c		4999137	0					
ANR	4999236	CallExpression	strdup ( h -> cpus )		4999137	1					
ANR	4999237	Callee	strdup		4999137	0					
ANR	4999238	Identifier	strdup		4999137	0					
ANR	4999239	ArgumentList	h -> cpus		4999137	1					
ANR	4999240	Argument	h -> cpus		4999137	0					
ANR	4999241	PtrMemberAccess	h -> cpus		4999137	0					
ANR	4999242	Identifier	h		4999137	0					
ANR	4999243	Identifier	cpus		4999137	1					
ANR	4999244	IdentifierDeclStatement	"int n = r_str_split ( c , ',' ) ;"	192:4:4558:4586	4999137	1	True				
ANR	4999245	IdentifierDecl	"n = r_str_split ( c , ',' )"		4999137	0					
ANR	4999246	IdentifierDeclType	int		4999137	0					
ANR	4999247	Identifier	n		4999137	1					
ANR	4999248	AssignmentExpression	"n = r_str_split ( c , ',' )"		4999137	2		=			
ANR	4999249	Identifier	n		4999137	0					
ANR	4999250	CallExpression	"r_str_split ( c , ',' )"		4999137	1					
ANR	4999251	Callee	r_str_split		4999137	0					
ANR	4999252	Identifier	r_str_split		4999137	0					
ANR	4999253	ArgumentList	c		4999137	1					
ANR	4999254	Argument	c		4999137	0					
ANR	4999255	Identifier	c		4999137	0					
ANR	4999256	Argument	"','"		4999137	1					
ANR	4999257	PrimaryExpression	"','"		4999137	0					
ANR	4999258	ForStatement	for ( i = 0 ; i < n ; i ++ )		4999137	2					
ANR	4999259	ForInit	i = 0 ;	193:9:4597:4602	4999137	0	True				
ANR	4999260	AssignmentExpression	i = 0		4999137	0		=			
ANR	4999261	Identifier	i		4999137	0					
ANR	4999262	PrimaryExpression	0		4999137	1					
ANR	4999263	Condition	i < n	193:16:4604:4608	4999137	1	True				
ANR	4999264	RelationalExpression	i < n		4999137	0		<			
ANR	4999265	Identifier	i		4999137	0					
ANR	4999266	Identifier	n		4999137	1					
ANR	4999267	PostIncDecOperationExpression	i ++	193:23:4611:4613	4999137	2	True				
ANR	4999268	Identifier	i		4999137	0					
ANR	4999269	IncDec	++		4999137	1					
ANR	4999270	CompoundStatement		19:28:362:362	4999137	3					
ANR	4999271	ExpressionStatement	"printf ( ""%s\\n"" , r_str_word_get0 ( c , i ) )"	194:5:4623:4662	4999137	0	True				
ANR	4999272	CallExpression	"printf ( ""%s\\n"" , r_str_word_get0 ( c , i ) )"		4999137	0					
ANR	4999273	Callee	printf		4999137	0					
ANR	4999274	Identifier	printf		4999137	0					
ANR	4999275	ArgumentList	"""%s\\n"""		4999137	1					
ANR	4999276	Argument	"""%s\\n"""		4999137	0					
ANR	4999277	PrimaryExpression	"""%s\\n"""		4999137	0					
ANR	4999278	Argument	"r_str_word_get0 ( c , i )"		4999137	1					
ANR	4999279	CallExpression	"r_str_word_get0 ( c , i )"		4999137	0					
ANR	4999280	Callee	r_str_word_get0		4999137	0					
ANR	4999281	Identifier	r_str_word_get0		4999137	0					
ANR	4999282	ArgumentList	c		4999137	1					
ANR	4999283	Argument	c		4999137	0					
ANR	4999284	Identifier	c		4999137	0					
ANR	4999285	Argument	i		4999137	1					
ANR	4999286	Identifier	i		4999137	0					
ANR	4999287	ExpressionStatement	free ( c )	196:4:4674:4682	4999137	3	True				
ANR	4999288	CallExpression	free ( c )		4999137	0					
ANR	4999289	Callee	free		4999137	0					
ANR	4999290	Identifier	free		4999137	0					
ANR	4999291	ArgumentList	c		4999137	1					
ANR	4999292	Argument	c		4999137	0					
ANR	4999293	Identifier	c		4999137	0					
ANR	4999294	BreakStatement	break ;	197:4:4688:4693	4999137	4	True				
ANR	4999295	ElseStatement	else		4999137	0					
ANR	4999296	CompoundStatement		25:9:455:455	4999137	0					
ANR	4999297	ExpressionStatement	bits [ 0 ] = 0	200:3:4714:4725	4999137	0	True				
ANR	4999298	AssignmentExpression	bits [ 0 ] = 0		4999137	0		=			
ANR	4999299	ArrayIndexing	bits [ 0 ]		4999137	0					
ANR	4999300	Identifier	bits		4999137	0					
ANR	4999301	PrimaryExpression	0		4999137	1					
ANR	4999302	PrimaryExpression	0		4999137	1					
ANR	4999303	IfStatement	if ( h -> bits == 27 )		4999137	1					
ANR	4999304	Condition	h -> bits == 27	201:7:4734:4746	4999137	0	True				
ANR	4999305	EqualityExpression	h -> bits == 27		4999137	0		==			
ANR	4999306	PtrMemberAccess	h -> bits		4999137	0					
ANR	4999307	Identifier	h		4999137	0					
ANR	4999308	Identifier	bits		4999137	1					
ANR	4999309	PrimaryExpression	27		4999137	1					
ANR	4999310	CompoundStatement		27:22:495:495	4999137	1					
ANR	4999311	ExpressionStatement	"strcat ( bits , ""27"" )"	202:4:4755:4774	4999137	0	True				
ANR	4999312	CallExpression	"strcat ( bits , ""27"" )"		4999137	0					
ANR	4999313	Callee	strcat		4999137	0					
ANR	4999314	Identifier	strcat		4999137	0					
ANR	4999315	ArgumentList	bits		4999137	1					
ANR	4999316	Argument	bits		4999137	0					
ANR	4999317	Identifier	bits		4999137	0					
ANR	4999318	Argument	"""27"""		4999137	1					
ANR	4999319	PrimaryExpression	"""27"""		4999137	0					
ANR	4999320	ElseStatement	else		4999137	0					
ANR	4999321	CompoundStatement		29:10:532:532	4999137	0					
ANR	4999322	IfStatement	if ( h -> bits & 8 )		4999137	0					
ANR	4999323	Condition	h -> bits & 8	204:8:4796:4806	4999137	0	True				
ANR	4999324	BitAndExpression	h -> bits & 8		4999137	0		&			
ANR	4999325	PtrMemberAccess	h -> bits		4999137	0					
ANR	4999326	Identifier	h		4999137	0					
ANR	4999327	Identifier	bits		4999137	1					
ANR	4999328	PrimaryExpression	8		4999137	1					
ANR	4999329	CompoundStatement		30:21:555:555	4999137	1					
ANR	4999330	ExpressionStatement	"strcat ( bits , ""8 "" )"	205:5:4816:4835	4999137	0	True				
ANR	4999331	CallExpression	"strcat ( bits , ""8 "" )"		4999137	0					
ANR	4999332	Callee	strcat		4999137	0					
ANR	4999333	Identifier	strcat		4999137	0					
ANR	4999334	ArgumentList	bits		4999137	1					
ANR	4999335	Argument	bits		4999137	0					
ANR	4999336	Identifier	bits		4999137	0					
ANR	4999337	Argument	"""8 """		4999137	1					
ANR	4999338	PrimaryExpression	"""8 """		4999137	0					
ANR	4999339	IfStatement	if ( h -> bits & 16 )		4999137	1					
ANR	4999340	Condition	h -> bits & 16	207:8:4851:4862	4999137	0	True				
ANR	4999341	BitAndExpression	h -> bits & 16		4999137	0		&			
ANR	4999342	PtrMemberAccess	h -> bits		4999137	0					
ANR	4999343	Identifier	h		4999137	0					
ANR	4999344	Identifier	bits		4999137	1					
ANR	4999345	PrimaryExpression	16		4999137	1					
ANR	4999346	CompoundStatement		33:22:611:611	4999137	1					
ANR	4999347	ExpressionStatement	"strcat ( bits , ""16 "" )"	208:5:4872:4892	4999137	0	True				
ANR	4999348	CallExpression	"strcat ( bits , ""16 "" )"		4999137	0					
ANR	4999349	Callee	strcat		4999137	0					
ANR	4999350	Identifier	strcat		4999137	0					
ANR	4999351	ArgumentList	bits		4999137	1					
ANR	4999352	Argument	bits		4999137	0					
ANR	4999353	Identifier	bits		4999137	0					
ANR	4999354	Argument	"""16 """		4999137	1					
ANR	4999355	PrimaryExpression	"""16 """		4999137	0					
ANR	4999356	IfStatement	if ( h -> bits & 32 )		4999137	2					
ANR	4999357	Condition	h -> bits & 32	210:8:4908:4919	4999137	0	True				
ANR	4999358	BitAndExpression	h -> bits & 32		4999137	0		&			
ANR	4999359	PtrMemberAccess	h -> bits		4999137	0					
ANR	4999360	Identifier	h		4999137	0					
ANR	4999361	Identifier	bits		4999137	1					
ANR	4999362	PrimaryExpression	32		4999137	1					
ANR	4999363	CompoundStatement		36:22:668:668	4999137	1					
ANR	4999364	ExpressionStatement	"strcat ( bits , ""32 "" )"	211:5:4929:4949	4999137	0	True				
ANR	4999365	CallExpression	"strcat ( bits , ""32 "" )"		4999137	0					
ANR	4999366	Callee	strcat		4999137	0					
ANR	4999367	Identifier	strcat		4999137	0					
ANR	4999368	ArgumentList	bits		4999137	1					
ANR	4999369	Argument	bits		4999137	0					
ANR	4999370	Identifier	bits		4999137	0					
ANR	4999371	Argument	"""32 """		4999137	1					
ANR	4999372	PrimaryExpression	"""32 """		4999137	0					
ANR	4999373	IfStatement	if ( h -> bits & 64 )		4999137	3					
ANR	4999374	Condition	h -> bits & 64	213:8:4965:4976	4999137	0	True				
ANR	4999375	BitAndExpression	h -> bits & 64		4999137	0		&			
ANR	4999376	PtrMemberAccess	h -> bits		4999137	0					
ANR	4999377	Identifier	h		4999137	0					
ANR	4999378	Identifier	bits		4999137	1					
ANR	4999379	PrimaryExpression	64		4999137	1					
ANR	4999380	CompoundStatement		39:22:725:725	4999137	1					
ANR	4999381	ExpressionStatement	"strcat ( bits , ""64 "" )"	214:5:4986:5006	4999137	0	True				
ANR	4999382	CallExpression	"strcat ( bits , ""64 "" )"		4999137	0					
ANR	4999383	Callee	strcat		4999137	0					
ANR	4999384	Identifier	strcat		4999137	0					
ANR	4999385	ArgumentList	bits		4999137	1					
ANR	4999386	Argument	bits		4999137	0					
ANR	4999387	Identifier	bits		4999137	0					
ANR	4999388	Argument	"""64 """		4999137	1					
ANR	4999389	PrimaryExpression	"""64 """		4999137	0					
ANR	4999390	ExpressionStatement	"feat = ""__"""	217:3:5022:5033	4999137	2	True				
ANR	4999391	AssignmentExpression	"feat = ""__"""		4999137	0		=			
ANR	4999392	Identifier	feat		4999137	0					
ANR	4999393	PrimaryExpression	"""__"""		4999137	1					
ANR	4999394	IfStatement	if ( h -> assemble && h -> disassemble )		4999137	3					
ANR	4999395	Condition	h -> assemble && h -> disassemble	218:7:5042:5070	4999137	0	True				
ANR	4999396	AndExpression	h -> assemble && h -> disassemble		4999137	0		&&			
ANR	4999397	PtrMemberAccess	h -> assemble		4999137	0					
ANR	4999398	Identifier	h		4999137	0					
ANR	4999399	Identifier	assemble		4999137	1					
ANR	4999400	PtrMemberAccess	h -> disassemble		4999137	1					
ANR	4999401	Identifier	h		4999137	0					
ANR	4999402	Identifier	disassemble		4999137	1					
ANR	4999403	CompoundStatement		44:38:819:819	4999137	1					
ANR	4999404	ExpressionStatement	"feat = ""ad"""	219:4:5079:5090	4999137	0	True				
ANR	4999405	AssignmentExpression	"feat = ""ad"""		4999137	0		=			
ANR	4999406	Identifier	feat		4999137	0					
ANR	4999407	PrimaryExpression	"""ad"""		4999137	1					
ANR	4999408	IfStatement	if ( h -> assemble && ! h -> disassemble )		4999137	4					
ANR	4999409	Condition	h -> assemble && ! h -> disassemble	221:7:5104:5133	4999137	0	True				
ANR	4999410	AndExpression	h -> assemble && ! h -> disassemble		4999137	0		&&			
ANR	4999411	PtrMemberAccess	h -> assemble		4999137	0					
ANR	4999412	Identifier	h		4999137	0					
ANR	4999413	Identifier	assemble		4999137	1					
ANR	4999414	UnaryOperationExpression	! h -> disassemble		4999137	1					
ANR	4999415	UnaryOperator	!		4999137	0					
ANR	4999416	PtrMemberAccess	h -> disassemble		4999137	1					
ANR	4999417	Identifier	h		4999137	0					
ANR	4999418	Identifier	disassemble		4999137	1					
ANR	4999419	CompoundStatement		47:39:882:882	4999137	1					
ANR	4999420	ExpressionStatement	"feat = ""a_"""	222:4:5142:5153	4999137	0	True				
ANR	4999421	AssignmentExpression	"feat = ""a_"""		4999137	0		=			
ANR	4999422	Identifier	feat		4999137	0					
ANR	4999423	PrimaryExpression	"""a_"""		4999137	1					
ANR	4999424	IfStatement	if ( ! h -> assemble && h -> disassemble )		4999137	5					
ANR	4999425	Condition	! h -> assemble && h -> disassemble	224:7:5167:5196	4999137	0	True				
ANR	4999426	AndExpression	! h -> assemble && h -> disassemble		4999137	0		&&			
ANR	4999427	UnaryOperationExpression	! h -> assemble		4999137	0					
ANR	4999428	UnaryOperator	!		4999137	0					
ANR	4999429	PtrMemberAccess	h -> assemble		4999137	1					
ANR	4999430	Identifier	h		4999137	0					
ANR	4999431	Identifier	assemble		4999137	1					
ANR	4999432	PtrMemberAccess	h -> disassemble		4999137	1					
ANR	4999433	Identifier	h		4999137	0					
ANR	4999434	Identifier	disassemble		4999137	1					
ANR	4999435	CompoundStatement		50:39:945:945	4999137	1					
ANR	4999436	ExpressionStatement	"feat = ""_d"""	225:4:5205:5216	4999137	0	True				
ANR	4999437	AssignmentExpression	"feat = ""_d"""		4999137	0		=			
ANR	4999438	Identifier	feat		4999137	0					
ANR	4999439	PrimaryExpression	"""_d"""		4999137	1					
ANR	4999440	ExpressionStatement	"feat2 = has_esil ( as , h -> name )"	227:3:5226:5256	4999137	6	True				
ANR	4999441	AssignmentExpression	"feat2 = has_esil ( as , h -> name )"		4999137	0		=			
ANR	4999442	Identifier	feat2		4999137	0					
ANR	4999443	CallExpression	"has_esil ( as , h -> name )"		4999137	1					
ANR	4999444	Callee	has_esil		4999137	0					
ANR	4999445	Identifier	has_esil		4999137	0					
ANR	4999446	ArgumentList	as		4999137	1					
ANR	4999447	Argument	as		4999137	0					
ANR	4999448	Identifier	as		4999137	0					
ANR	4999449	Argument	h -> name		4999137	1					
ANR	4999450	PtrMemberAccess	h -> name		4999137	0					
ANR	4999451	Identifier	h		4999137	0					
ANR	4999452	Identifier	name		4999137	1					
ANR	4999453	IfStatement	if ( as -> quiet )		4999137	7					
ANR	4999454	Condition	as -> quiet	228:7:5265:5273	4999137	0	True				
ANR	4999455	PtrMemberAccess	as -> quiet		4999137	0					
ANR	4999456	Identifier	as		4999137	0					
ANR	4999457	Identifier	quiet		4999137	1					
ANR	4999458	CompoundStatement		54:18:1022:1022	4999137	1					
ANR	4999459	ExpressionStatement	"printf ( ""%s\\n"" , h -> name )"	229:4:5282:5306	4999137	0	True				
ANR	4999460	CallExpression	"printf ( ""%s\\n"" , h -> name )"		4999137	0					
ANR	4999461	Callee	printf		4999137	0					
ANR	4999462	Identifier	printf		4999137	0					
ANR	4999463	ArgumentList	"""%s\\n"""		4999137	1					
ANR	4999464	Argument	"""%s\\n"""		4999137	0					
ANR	4999465	PrimaryExpression	"""%s\\n"""		4999137	0					
ANR	4999466	Argument	h -> name		4999137	1					
ANR	4999467	PtrMemberAccess	h -> name		4999137	0					
ANR	4999468	Identifier	h		4999137	0					
ANR	4999469	Identifier	name		4999137	1					
ANR	4999470	ElseStatement	else		4999137	0					
ANR	4999471	IfStatement	if ( as -> json )		4999137	0					
ANR	4999472	Condition	as -> json	230:14:5322:5329	4999137	0	True				
ANR	4999473	PtrMemberAccess	as -> json		4999137	0					
ANR	4999474	Identifier	as		4999137	0					
ANR	4999475	Identifier	json		4999137	1					
ANR	4999476	CompoundStatement		56:24:1078:1078	4999137	1					
ANR	4999477	ExpressionStatement	"pj_k ( pj , h -> name )"	231:4:5338:5356	4999137	0	True				
ANR	4999478	CallExpression	"pj_k ( pj , h -> name )"		4999137	0					
ANR	4999479	Callee	pj_k		4999137	0					
ANR	4999480	Identifier	pj_k		4999137	0					
ANR	4999481	ArgumentList	pj		4999137	1					
ANR	4999482	Argument	pj		4999137	0					
ANR	4999483	Identifier	pj		4999137	0					
ANR	4999484	Argument	h -> name		4999137	1					
ANR	4999485	PtrMemberAccess	h -> name		4999137	0					
ANR	4999486	Identifier	h		4999137	0					
ANR	4999487	Identifier	name		4999137	1					
ANR	4999488	ExpressionStatement	pj_o ( pj )	232:4:5362:5371	4999137	1	True				
ANR	4999489	CallExpression	pj_o ( pj )		4999137	0					
ANR	4999490	Callee	pj_o		4999137	0					
ANR	4999491	Identifier	pj_o		4999137	0					
ANR	4999492	ArgumentList	pj		4999137	1					
ANR	4999493	Argument	pj		4999137	0					
ANR	4999494	Identifier	pj		4999137	0					
ANR	4999495	ExpressionStatement	"pj_k ( pj , ""bits"" )"	233:4:5377:5394	4999137	2	True				
ANR	4999496	CallExpression	"pj_k ( pj , ""bits"" )"		4999137	0					
ANR	4999497	Callee	pj_k		4999137	0					
ANR	4999498	Identifier	pj_k		4999137	0					
ANR	4999499	ArgumentList	pj		4999137	1					
ANR	4999500	Argument	pj		4999137	0					
ANR	4999501	Identifier	pj		4999137	0					
ANR	4999502	Argument	"""bits"""		4999137	1					
ANR	4999503	PrimaryExpression	"""bits"""		4999137	0					
ANR	4999504	ExpressionStatement	pj_a ( pj )	234:4:5400:5409	4999137	3	True				
ANR	4999505	CallExpression	pj_a ( pj )		4999137	0					
ANR	4999506	Callee	pj_a		4999137	0					
ANR	4999507	Identifier	pj_a		4999137	0					
ANR	4999508	ArgumentList	pj		4999137	1					
ANR	4999509	Argument	pj		4999137	0					
ANR	4999510	Identifier	pj		4999137	0					
ANR	4999511	ExpressionStatement	"pj_i ( pj , 32 )"	235:4:5415:5428	4999137	4	True				
ANR	4999512	CallExpression	"pj_i ( pj , 32 )"		4999137	0					
ANR	4999513	Callee	pj_i		4999137	0					
ANR	4999514	Identifier	pj_i		4999137	0					
ANR	4999515	ArgumentList	pj		4999137	1					
ANR	4999516	Argument	pj		4999137	0					
ANR	4999517	Identifier	pj		4999137	0					
ANR	4999518	Argument	32		4999137	1					
ANR	4999519	PrimaryExpression	32		4999137	0					
ANR	4999520	ExpressionStatement	"pj_i ( pj , 64 )"	236:4:5434:5447	4999137	5	True				
ANR	4999521	CallExpression	"pj_i ( pj , 64 )"		4999137	0					
ANR	4999522	Callee	pj_i		4999137	0					
ANR	4999523	Identifier	pj_i		4999137	0					
ANR	4999524	ArgumentList	pj		4999137	1					
ANR	4999525	Argument	pj		4999137	0					
ANR	4999526	Identifier	pj		4999137	0					
ANR	4999527	Argument	64		4999137	1					
ANR	4999528	PrimaryExpression	64		4999137	0					
ANR	4999529	ExpressionStatement	pj_end ( pj )	237:4:5453:5464	4999137	6	True				
ANR	4999530	CallExpression	pj_end ( pj )		4999137	0					
ANR	4999531	Callee	pj_end		4999137	0					
ANR	4999532	Identifier	pj_end		4999137	0					
ANR	4999533	ArgumentList	pj		4999137	1					
ANR	4999534	Argument	pj		4999137	0					
ANR	4999535	Identifier	pj		4999137	0					
ANR	4999536	ExpressionStatement	"pj_ks ( pj , ""license"" , h -> license ? h -> license : ""unknown"" )"	238:4:5470:5526	4999137	7	True				
ANR	4999537	CallExpression	"pj_ks ( pj , ""license"" , h -> license ? h -> license : ""unknown"" )"		4999137	0					
ANR	4999538	Callee	pj_ks		4999137	0					
ANR	4999539	Identifier	pj_ks		4999137	0					
ANR	4999540	ArgumentList	pj		4999137	1					
ANR	4999541	Argument	pj		4999137	0					
ANR	4999542	Identifier	pj		4999137	0					
ANR	4999543	Argument	"""license"""		4999137	1					
ANR	4999544	PrimaryExpression	"""license"""		4999137	0					
ANR	4999545	Argument	"h -> license ? h -> license : ""unknown"""		4999137	2					
ANR	4999546	ConditionalExpression	"h -> license ? h -> license : ""unknown"""		4999137	0					
ANR	4999547	Condition	h -> license		4999137	0					
ANR	4999548	PtrMemberAccess	h -> license		4999137	0					
ANR	4999549	Identifier	h		4999137	0					
ANR	4999550	Identifier	license		4999137	1					
ANR	4999551	PtrMemberAccess	h -> license		4999137	1					
ANR	4999552	Identifier	h		4999137	0					
ANR	4999553	Identifier	license		4999137	1					
ANR	4999554	PrimaryExpression	"""unknown"""		4999137	2					
ANR	4999555	ExpressionStatement	"pj_ks ( pj , ""description"" , h -> desc )"	239:4:5532:5566	4999137	8	True				
ANR	4999556	CallExpression	"pj_ks ( pj , ""description"" , h -> desc )"		4999137	0					
ANR	4999557	Callee	pj_ks		4999137	0					
ANR	4999558	Identifier	pj_ks		4999137	0					
ANR	4999559	ArgumentList	pj		4999137	1					
ANR	4999560	Argument	pj		4999137	0					
ANR	4999561	Identifier	pj		4999137	0					
ANR	4999562	Argument	"""description"""		4999137	1					
ANR	4999563	PrimaryExpression	"""description"""		4999137	0					
ANR	4999564	Argument	h -> desc		4999137	2					
ANR	4999565	PtrMemberAccess	h -> desc		4999137	0					
ANR	4999566	Identifier	h		4999137	0					
ANR	4999567	Identifier	desc		4999137	1					
ANR	4999568	ExpressionStatement	"pj_ks ( pj , ""features"" , feat )"	240:4:5572:5600	4999137	9	True				
ANR	4999569	CallExpression	"pj_ks ( pj , ""features"" , feat )"		4999137	0					
ANR	4999570	Callee	pj_ks		4999137	0					
ANR	4999571	Identifier	pj_ks		4999137	0					
ANR	4999572	ArgumentList	pj		4999137	1					
ANR	4999573	Argument	pj		4999137	0					
ANR	4999574	Identifier	pj		4999137	0					
ANR	4999575	Argument	"""features"""		4999137	1					
ANR	4999576	PrimaryExpression	"""features"""		4999137	0					
ANR	4999577	Argument	feat		4999137	2					
ANR	4999578	Identifier	feat		4999137	0					
ANR	4999579	ExpressionStatement	pj_end ( pj )	241:4:5606:5617	4999137	10	True				
ANR	4999580	CallExpression	pj_end ( pj )		4999137	0					
ANR	4999581	Callee	pj_end		4999137	0					
ANR	4999582	Identifier	pj_end		4999137	0					
ANR	4999583	ArgumentList	pj		4999137	1					
ANR	4999584	Argument	pj		4999137	0					
ANR	4999585	Identifier	pj		4999137	0					
ANR	4999586	ElseStatement	else		4999137	0					
ANR	4999587	CompoundStatement		68:10:1375:1375	4999137	0					
ANR	4999588	ExpressionStatement	"printf ( ""%s%s  %-9s  %-11s %-7s %s"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"	243:4:5635:5753	4999137	0	True				
ANR	4999589	CallExpression	"printf ( ""%s%s  %-9s  %-11s %-7s %s"" , feat , feat2 , bits , h -> name , h -> license ? h -> license : ""unknown"" , h -> desc )"		4999137	0					
ANR	4999590	Callee	printf		4999137	0					
ANR	4999591	Identifier	printf		4999137	0					
ANR	4999592	ArgumentList	"""%s%s  %-9s  %-11s %-7s %s"""		4999137	1					
ANR	4999593	Argument	"""%s%s  %-9s  %-11s %-7s %s"""		4999137	0					
ANR	4999594	PrimaryExpression	"""%s%s  %-9s  %-11s %-7s %s"""		4999137	0					
ANR	4999595	Argument	feat		4999137	1					
ANR	4999596	Identifier	feat		4999137	0					
ANR	4999597	Argument	feat2		4999137	2					
ANR	4999598	Identifier	feat2		4999137	0					
ANR	4999599	Argument	bits		4999137	3					
ANR	4999600	Identifier	bits		4999137	0					
ANR	4999601	Argument	h -> name		4999137	4					
ANR	4999602	PtrMemberAccess	h -> name		4999137	0					
ANR	4999603	Identifier	h		4999137	0					
ANR	4999604	Identifier	name		4999137	1					
ANR	4999605	Argument	"h -> license ? h -> license : ""unknown"""		4999137	5					
ANR	4999606	ConditionalExpression	"h -> license ? h -> license : ""unknown"""		4999137	0					
ANR	4999607	Condition	h -> license		4999137	0					
ANR	4999608	PtrMemberAccess	h -> license		4999137	0					
ANR	4999609	Identifier	h		4999137	0					
ANR	4999610	Identifier	license		4999137	1					
ANR	4999611	PtrMemberAccess	h -> license		4999137	1					
ANR	4999612	Identifier	h		4999137	0					
ANR	4999613	Identifier	license		4999137	1					
ANR	4999614	PrimaryExpression	"""unknown"""		4999137	2					
ANR	4999615	Argument	h -> desc		4999137	6					
ANR	4999616	PtrMemberAccess	h -> desc		4999137	0					
ANR	4999617	Identifier	h		4999137	0					
ANR	4999618	Identifier	desc		4999137	1					
ANR	4999619	IfStatement	if ( h -> author )		4999137	1					
ANR	4999620	Condition	h -> author	246:8:5763:5771	4999137	0	True				
ANR	4999621	PtrMemberAccess	h -> author		4999137	0					
ANR	4999622	Identifier	h		4999137	0					
ANR	4999623	Identifier	author		4999137	1					
ANR	4999624	CompoundStatement		72:19:1520:1520	4999137	1					
ANR	4999625	ExpressionStatement	"printf ( "" (by %s)"" , h -> author )"	247:5:5781:5811	4999137	0	True				
ANR	4999626	CallExpression	"printf ( "" (by %s)"" , h -> author )"		4999137	0					
ANR	4999627	Callee	printf		4999137	0					
ANR	4999628	Identifier	printf		4999137	0					
ANR	4999629	ArgumentList	""" (by %s)"""		4999137	1					
ANR	4999630	Argument	""" (by %s)"""		4999137	0					
ANR	4999631	PrimaryExpression	""" (by %s)"""		4999137	0					
ANR	4999632	Argument	h -> author		4999137	1					
ANR	4999633	PtrMemberAccess	h -> author		4999137	0					
ANR	4999634	Identifier	h		4999137	0					
ANR	4999635	Identifier	author		4999137	1					
ANR	4999636	IfStatement	if ( h -> version )		4999137	2					
ANR	4999637	Condition	h -> version	249:8:5827:5836	4999137	0	True				
ANR	4999638	PtrMemberAccess	h -> version		4999137	0					
ANR	4999639	Identifier	h		4999137	0					
ANR	4999640	Identifier	version		4999137	1					
ANR	4999641	CompoundStatement		75:20:1585:1585	4999137	1					
ANR	4999642	ExpressionStatement	"printf ( "" v%s"" , h -> version )"	250:5:5846:5873	4999137	0	True				
ANR	4999643	CallExpression	"printf ( "" v%s"" , h -> version )"		4999137	0					
ANR	4999644	Callee	printf		4999137	0					
ANR	4999645	Identifier	printf		4999137	0					
ANR	4999646	ArgumentList	""" v%s"""		4999137	1					
ANR	4999647	Argument	""" v%s"""		4999137	0					
ANR	4999648	PrimaryExpression	""" v%s"""		4999137	0					
ANR	4999649	Argument	h -> version		4999137	1					
ANR	4999650	PtrMemberAccess	h -> version		4999137	0					
ANR	4999651	Identifier	h		4999137	0					
ANR	4999652	Identifier	version		4999137	1					
ANR	4999653	ExpressionStatement	"printf ( ""\\n"" )"	252:4:5885:5898	4999137	3	True				
ANR	4999654	CallExpression	"printf ( ""\\n"" )"		4999137	0					
ANR	4999655	Callee	printf		4999137	0					
ANR	4999656	Identifier	printf		4999137	0					
ANR	4999657	ArgumentList	"""\\n"""		4999137	1					
ANR	4999658	Argument	"""\\n"""		4999137	0					
ANR	4999659	PrimaryExpression	"""\\n"""		4999137	0					
ANR	4999660	IfStatement	if ( as -> json )		4999137	21					
ANR	4999661	Condition	as -> json	256:5:5917:5924	4999137	0	True				
ANR	4999662	PtrMemberAccess	as -> json		4999137	0					
ANR	4999663	Identifier	as		4999137	0					
ANR	4999664	Identifier	json		4999137	1					
ANR	4999665	CompoundStatement		82:15:1673:1673	4999137	1					
ANR	4999666	ExpressionStatement	pj_end ( pj )	257:2:5931:5942	4999137	0	True				
ANR	4999667	CallExpression	pj_end ( pj )		4999137	0					
ANR	4999668	Callee	pj_end		4999137	0					
ANR	4999669	Identifier	pj_end		4999137	0					
ANR	4999670	ArgumentList	pj		4999137	1					
ANR	4999671	Argument	pj		4999137	0					
ANR	4999672	Identifier	pj		4999137	0					
ANR	4999673	ExpressionStatement	"printf ( ""%s\\n"" , pj_string ( pj ) )"	258:2:5946:5977	4999137	1	True				
ANR	4999674	CallExpression	"printf ( ""%s\\n"" , pj_string ( pj ) )"		4999137	0					
ANR	4999675	Callee	printf		4999137	0					
ANR	4999676	Identifier	printf		4999137	0					
ANR	4999677	ArgumentList	"""%s\\n"""		4999137	1					
ANR	4999678	Argument	"""%s\\n"""		4999137	0					
ANR	4999679	PrimaryExpression	"""%s\\n"""		4999137	0					
ANR	4999680	Argument	pj_string ( pj )		4999137	1					
ANR	4999681	CallExpression	pj_string ( pj )		4999137	0					
ANR	4999682	Callee	pj_string		4999137	0					
ANR	4999683	Identifier	pj_string		4999137	0					
ANR	4999684	ArgumentList	pj		4999137	1					
ANR	4999685	Argument	pj		4999137	0					
ANR	4999686	Identifier	pj		4999137	0					
ANR	4999687	ExpressionStatement	pj_free ( pj )	259:2:5981:5993	4999137	2	True				
ANR	4999688	CallExpression	pj_free ( pj )		4999137	0					
ANR	4999689	Callee	pj_free		4999137	0					
ANR	4999690	Identifier	pj_free		4999137	0					
ANR	4999691	ArgumentList	pj		4999137	1					
ANR	4999692	Argument	pj		4999137	0					
ANR	4999693	Identifier	pj		4999137	0					
ANR	4999694	ReturnType	static void		4999137	1					
ANR	4999695	Identifier	rasm2_list		4999137	2					
ANR	4999696	ParameterList	"RAsmState * as , const char * arch"		4999137	3					
ANR	4999697	Parameter	RAsmState * as	175:23:4220:4232	4999137	0	True				
ANR	4999698	ParameterType	RAsmState *		4999137	0					
ANR	4999699	Identifier	as		4999137	1					
ANR	4999700	Parameter	const char * arch	175:38:4235:4250	4999137	1	True				
ANR	4999701	ParameterType	const char *		4999137	0					
ANR	4999702	Identifier	arch		4999137	1					
ANR	4999703	CFGEntryNode	ENTRY		4999137		True				
ANR	4999704	CFGExitNode	EXIT		4999137		True				
ANR	4999705	CFGErrorNode	ERROR		4999137		True				
ANR	4999706	Symbol	h -> desc		4999137						
ANR	4999707	Symbol	pj_string		4999137						
ANR	4999708	Symbol	has_esil		4999137						
ANR	4999709	Symbol	h -> cpus		4999137						
ANR	4999710	Symbol	feat2		4999137						
ANR	4999711	Symbol	h -> name		4999137						
ANR	4999712	Symbol	h -> assemble		4999137						
ANR	4999713	Symbol	h -> license		4999137						
ANR	4999714	Symbol	feat		4999137						
ANR	4999715	Symbol	strcmp		4999137						
ANR	4999716	Symbol	* bits		4999137						
ANR	4999717	Symbol	c		4999137						
ANR	4999718	Symbol	h -> disassemble		4999137						
ANR	4999719	Symbol	as -> quiet		4999137						
ANR	4999720	Symbol	bits		4999137						
ANR	4999721	Symbol	h		4999137						
ANR	4999722	Symbol	i		4999137						
ANR	4999723	Symbol	iter		4999137						
ANR	4999724	Symbol	r_str_word_get0		4999137						
ANR	4999725	Symbol	n		4999137						
ANR	4999726	Symbol	as		4999137						
ANR	4999727	Symbol	* h		4999137						
ANR	4999728	Symbol	r_str_split		4999137						
ANR	4999729	Symbol	h -> bits		4999137						
ANR	4999730	Symbol	as -> json		4999137						
ANR	4999731	Symbol	h -> author		4999137						
ANR	4999732	Symbol	h -> version		4999137						
ANR	4999733	Symbol	pj		4999137						
ANR	4999734	Symbol	pj_new		4999137						
ANR	4999735	Symbol	arch		4999137						
ANR	4999736	Symbol	* as		4999137						
ANR	4999737	Symbol	strdup		4999137						
ANR	4999738	Function	rasm_show_help	263:0:6001:8284							
ANR	4999739	FunctionDef	rasm_show_help (int v)		4999738	0					
ANR	4999740	CompoundStatement		263:33:6034:8284	4999738	0					
ANR	4999741	IfStatement	if ( v < 2 )		4999738	0					
ANR	4999742	Condition	v < 2	264:5:6041:6045	4999738	0	True				
ANR	4999743	RelationalExpression	v < 2		4999738	0		<			
ANR	4999744	Identifier	v		4999738	0					
ANR	4999745	PrimaryExpression	2		4999738	1					
ANR	4999746	CompoundStatement		2:12:13:13	4999738	1					
ANR	4999747	Statement	printf	265:2:6052:6057	4999738	0	True				
ANR	4999748	Statement	(	265:9:6059:6059	4999738	1	True				
ANR	4999749	Statement	"""Usage: rasm2 [-ACdDehLBvw] [-a arch] [-b bits] [-o addr] [-s syntax]\\n"""	265:10:6060:6131	4999738	2	True				
ANR	4999750	Statement	"""             [-f file] [-F fil:ter] [-i skip] [-l len] 'code'|hex|-\\n"""	266:3:6136:6206	4999738	3	True				
ANR	4999751	Statement	)	266:74:6207:6207	4999738	4	True				
ANR	4999752	ExpressionStatement		266:75:6208:6208	4999738	5	True				
ANR	4999753	IfStatement	if ( v != 1 )		4999738	1					
ANR	4999754	Condition	v != 1	268:5:6218:6223	4999738	0	True				
ANR	4999755	EqualityExpression	v != 1		4999738	0		!=			
ANR	4999756	Identifier	v		4999738	0					
ANR	4999757	PrimaryExpression	1		4999738	1					
ANR	4999758	CompoundStatement		6:13:191:191	4999738	1					
ANR	4999759	Statement	printf	269:2:6230:6235	4999738	0	True				
ANR	4999760	Statement	(	269:9:6237:6237	4999738	1	True				
ANR	4999761	Statement	""" -a [arch]    Set architecture to assemble/disassemble (see -L)\\n"""	269:10:6238:6304	4999738	2	True				
ANR	4999762	Statement	""" -A           Show Analysis information from given hexpairs\\n"""	270:3:6309:6371	4999738	3	True				
ANR	4999763	Statement	""" -b [bits]    Set cpu register size (8, 16, 32, 64) (RASM2_BITS)\\n"""	271:3:6376:6443	4999738	4	True				
ANR	4999764	Statement	""" -B           Binary input/output (-l is mandatory for binary input)\\n"""	272:3:6448:6519	4999738	5	True				
ANR	4999765	Statement	""" -c [cpu]     Select specific CPU (depends on arch)\\n"""	273:3:6524:6578	4999738	6	True				
ANR	4999766	Statement	""" -C           Output in C format\\n"""	274:3:6583:6618	4999738	7	True				
ANR	4999767	Statement	""" -d, -D       Disassemble from hexpair bytes (-D show hexpairs)\\n"""	275:3:6623:6689	4999738	8	True				
ANR	4999768	Statement	""" -e           Use big endian instead of little endian\\n"""	276:3:6694:6750	4999738	9	True				
ANR	4999769	Statement	""" -E           Display ESIL expression (same input as in -d)\\n"""	277:3:6755:6817	4999738	10	True				
ANR	4999770	Statement	""" -f [file]    Read data from file\\n"""	278:3:6822:6858	4999738	11	True				
ANR	4999771	Statement	""" -F [in:out]  Specify input and/or output filters (att2intel, x86.pseudo, ...)\\n"""	279:3:6863:6944	4999738	12	True				
ANR	4999772	Statement	""" -h, -hh      Show this help, -hh for long\\n"""	280:3:6949:6994	4999738	13	True				
ANR	4999773	Statement	""" -i [len]     ignore/skip N bytes of the input buffer\\n"""	281:3:6999:7055	4999738	14	True				
ANR	4999774	Statement	""" -j           output in json format\\n"""	282:3:7060:7098	4999738	15	True				
ANR	4999775	Statement	""" -k [kernel]  Select operating system (linux, windows, darwin, ..)\\n"""	283:3:7103:7172	4999738	16	True				
ANR	4999776	Statement	""" -l [len]     Input/Output length\\n"""	284:3:7177:7213	4999738	17	True				
ANR	4999777	Statement	""" -L           List Asm plugins: (a=asm, d=disasm, A=analyze, e=ESIL)\\n"""	285:3:7218:7289	4999738	18	True				
ANR	4999778	Statement	""" -o,-@ [addr] Set start address for code (default 0)\\n"""	286:3:7294:7349	4999738	19	True				
ANR	4999779	Statement	""" -O [file]    Output file name (rasm2 -Bf a.asm -O a)\\n"""	287:3:7354:7410	4999738	20	True				
ANR	4999780	Statement	""" -p           Run SPP over input for assembly\\n"""	288:3:7415:7463	4999738	21	True				
ANR	4999781	Statement	""" -q           quiet mode\\n"""	289:3:7468:7495	4999738	22	True				
ANR	4999782	Statement	""" -r           output in radare commands\\n"""	290:3:7500:7542	4999738	23	True				
ANR	4999783	Statement	""" -s [syntax]  Select syntax (intel, att)\\n"""	291:3:7547:7590	4999738	24	True				
ANR	4999784	Statement	""" -v           Show version information\\n"""	292:3:7595:7636	4999738	25	True				
ANR	4999785	Statement	""" -x           Use hex dwords instead of hex pairs when assembling.\\n"""	293:3:7641:7710	4999738	26	True				
ANR	4999786	Statement	""" -w           What's this instruction for? describe opcode\\n"""	294:3:7715:7776	4999738	27	True				
ANR	4999787	Statement	""" If '-l' value is greater than output length, output is padded with nops\\n"""	295:3:7781:7856	4999738	28	True				
ANR	4999788	Statement	""" If the last argument is '-' reads from stdin\\n"""	296:3:7861:7909	4999738	29	True				
ANR	4999789	Statement	)	296:52:7910:7910	4999738	30	True				
ANR	4999790	ExpressionStatement		296:53:7911:7911	4999738	31	True				
ANR	4999791	Statement	printf	297:2:7915:7920	4999738	32	True				
ANR	4999792	Statement	(	297:9:7922:7922	4999738	33	True				
ANR	4999793	Statement	"""Environment:\\n"""	297:10:7923:7938	4999738	34	True				
ANR	4999794	Statement	""" RASM2_NOPLUGINS  do not load shared plugins (speedup loading)\\n"""	298:3:7943:8008	4999738	35	True				
ANR	4999795	Statement	""" RASM2_ARCH       same as rasm2 -a\\n"""	299:3:8013:8050	4999738	36	True				
ANR	4999796	Statement	""" RASM2_BITS       same as rasm2 -b\\n"""	300:3:8055:8092	4999738	37	True				
ANR	4999797	Statement	""" R_DEBUG          if defined, show error messages and crash signal\\n"""	301:3:8097:8166	4999738	38	True				
ANR	4999798	Statement	""""""	302:3:8171:8172	4999738	39	True				
ANR	4999799	Statement	)	302:5:8173:8173	4999738	40	True				
ANR	4999800	ExpressionStatement		302:6:8174:8174	4999738	41	True				
ANR	4999801	IfStatement	if ( v == 2 )		4999738	2					
ANR	4999802	Condition	v == 2	304:5:8184:8189	4999738	0	True				
ANR	4999803	EqualityExpression	v == 2		4999738	0		==			
ANR	4999804	Identifier	v		4999738	0					
ANR	4999805	PrimaryExpression	2		4999738	1					
ANR	4999806	CompoundStatement		42:13:2157:2157	4999738	1					
ANR	4999807	ExpressionStatement	"printf ( ""Supported Assembler directives:\\n"" )"	305:2:8196:8240	4999738	0	True				
ANR	4999808	CallExpression	"printf ( ""Supported Assembler directives:\\n"" )"		4999738	0					
ANR	4999809	Callee	printf		4999738	0					
ANR	4999810	Identifier	printf		4999738	0					
ANR	4999811	ArgumentList	"""Supported Assembler directives:\\n"""		4999738	1					
ANR	4999812	Argument	"""Supported Assembler directives:\\n"""		4999738	0					
ANR	4999813	PrimaryExpression	"""Supported Assembler directives:\\n"""		4999738	0					
ANR	4999814	ExpressionStatement	r_asm_list_directives ( )	306:2:8244:8268	4999738	1	True				
ANR	4999815	CallExpression	r_asm_list_directives ( )		4999738	0					
ANR	4999816	Callee	r_asm_list_directives		4999738	0					
ANR	4999817	Identifier	r_asm_list_directives		4999738	0					
ANR	4999818	ArgumentList			4999738	1					
ANR	4999819	ReturnStatement	return 0 ;	308:1:8274:8282	4999738	3	True				
ANR	4999820	PrimaryExpression	0		4999738	0					
ANR	4999821	ReturnType	static int		4999738	1					
ANR	4999822	Identifier	rasm_show_help		4999738	2					
ANR	4999823	ParameterList	int v		4999738	3					
ANR	4999824	Parameter	int v	263:26:6027:6031	4999738	0	True				
ANR	4999825	ParameterType	int		4999738	0					
ANR	4999826	Identifier	v		4999738	1					
ANR	4999827	CFGEntryNode	ENTRY		4999738		True				
ANR	4999828	CFGExitNode	EXIT		4999738		True				
ANR	4999829	Symbol	v		4999738						
ANR	4999830	Function	rasm_disasm	311:0:8287:10095							
ANR	4999831	FunctionDef	"rasm_disasm (RAsmState * as , char * buf , ut64 offset , int len , int bits , int ascii , int bin , int hex)"		4999830	0					
ANR	4999832	CompoundStatement		311:110:8397:10095	4999830	0					
ANR	4999833	IdentifierDeclStatement	RAsmCode * acode ;	312:1:8400:8415	4999830	0	True				
ANR	4999834	IdentifierDecl	* acode		4999830	0					
ANR	4999835	IdentifierDeclType	RAsmCode *		4999830	0					
ANR	4999836	Identifier	acode		4999830	1					
ANR	4999837	IdentifierDeclStatement	ut8 * data = NULL ;	313:1:8418:8434	4999830	1	True				
ANR	4999838	IdentifierDecl	* data = NULL		4999830	0					
ANR	4999839	IdentifierDeclType	ut8 *		4999830	0					
ANR	4999840	Identifier	data		4999830	1					
ANR	4999841	AssignmentExpression	* data = NULL		4999830	2		=			
ANR	4999842	Identifier	NULL		4999830	0					
ANR	4999843	Identifier	NULL		4999830	1					
ANR	4999844	IdentifierDeclStatement	int ret = 0 ;	314:1:8437:8448	4999830	2	True				
ANR	4999845	IdentifierDecl	ret = 0		4999830	0					
ANR	4999846	IdentifierDeclType	int		4999830	0					
ANR	4999847	Identifier	ret		4999830	1					
ANR	4999848	AssignmentExpression	ret = 0		4999830	2		=			
ANR	4999849	Identifier	ret		4999830	0					
ANR	4999850	PrimaryExpression	0		4999830	1					
ANR	4999851	IdentifierDeclStatement	ut64 clen = 0 ;	315:1:8451:8464	4999830	3	True				
ANR	4999852	IdentifierDecl	clen = 0		4999830	0					
ANR	4999853	IdentifierDeclType	ut64		4999830	0					
ANR	4999854	Identifier	clen		4999830	1					
ANR	4999855	AssignmentExpression	clen = 0		4999830	2		=			
ANR	4999856	Identifier	clen		4999830	0					
ANR	4999857	PrimaryExpression	0		4999830	1					
ANR	4999858	IfStatement	if ( bits == 1 )		4999830	4					
ANR	4999859	Condition	bits == 1	316:5:8471:8479	4999830	0	True				
ANR	4999860	EqualityExpression	bits == 1		4999830	0		==			
ANR	4999861	Identifier	bits		4999830	0					
ANR	4999862	PrimaryExpression	1		4999830	1					
ANR	4999863	CompoundStatement		6:16:84:84	4999830	1					
ANR	4999864	ExpressionStatement	len /= 8	317:2:8486:8494	4999830	0	True				
ANR	4999865	AssignmentExpression	len /= 8		4999830	0		/=			
ANR	4999866	Identifier	len		4999830	0					
ANR	4999867	PrimaryExpression	8		4999830	1					
ANR	4999868	IfStatement	if ( bin )		4999830	5					
ANR	4999869	Condition	bin	319:5:8504:8506	4999830	0	True				
ANR	4999870	Identifier	bin		4999830	0					
ANR	4999871	CompoundStatement		9:10:111:111	4999830	1					
ANR	4999872	IfStatement	if ( len < 0 )		4999830	0					
ANR	4999873	Condition	len < 0	320:6:8517:8523	4999830	0	True				
ANR	4999874	RelationalExpression	len < 0		4999830	0		<			
ANR	4999875	Identifier	len		4999830	0					
ANR	4999876	PrimaryExpression	0		4999830	1					
ANR	4999877	CompoundStatement		10:15:128:128	4999830	1					
ANR	4999878	ReturnStatement	return false ;	321:3:8531:8543	4999830	0	True				
ANR	4999879	Identifier	false		4999830	0					
ANR	4999880	ExpressionStatement	clen = len	323:2:8551:8561	4999830	1	True				
ANR	4999881	AssignmentExpression	clen = len		4999830	0		=			
ANR	4999882	Identifier	clen		4999830	0					
ANR	4999883	Identifier	len		4999830	1					
ANR	4999884	ExpressionStatement	data = ( ut8 * ) buf	324:2:8572:8589	4999830	2	True				
ANR	4999885	AssignmentExpression	data = ( ut8 * ) buf		4999830	0		=			
ANR	4999886	Identifier	data		4999830	0					
ANR	4999887	CastExpression	( ut8 * ) buf		4999830	1					
ANR	4999888	CastTarget	ut8 *		4999830	0					
ANR	4999889	Identifier	buf		4999830	1					
ANR	4999890	ElseStatement	else		4999830	0					
ANR	4999891	IfStatement	if ( ascii )		4999830	0					
ANR	4999892	Condition	ascii	325:12:8603:8607	4999830	0	True				
ANR	4999893	Identifier	ascii		4999830	0					
ANR	4999894	CompoundStatement		15:19:212:212	4999830	1					
ANR	4999895	ExpressionStatement	clen = strlen ( buf )	326:2:8614:8633	4999830	0	True				
ANR	4999896	AssignmentExpression	clen = strlen ( buf )		4999830	0		=			
ANR	4999897	Identifier	clen		4999830	0					
ANR	4999898	CallExpression	strlen ( buf )		4999830	1					
ANR	4999899	Callee	strlen		4999830	0					
ANR	4999900	Identifier	strlen		4999830	0					
ANR	4999901	ArgumentList	buf		4999830	1					
ANR	4999902	Argument	buf		4999830	0					
ANR	4999903	Identifier	buf		4999830	0					
ANR	4999904	ExpressionStatement	data = ( ut8 * ) buf	327:2:8637:8654	4999830	1	True				
ANR	4999905	AssignmentExpression	data = ( ut8 * ) buf		4999830	0		=			
ANR	4999906	Identifier	data		4999830	0					
ANR	4999907	CastExpression	( ut8 * ) buf		4999830	1					
ANR	4999908	CastTarget	ut8 *		4999830	0					
ANR	4999909	Identifier	buf		4999830	1					
ANR	4999910	ElseStatement	else		4999830	0					
ANR	4999911	CompoundStatement		18:8:266:266	4999830	0					
ANR	4999912	ExpressionStatement	"clen = r_hex_str2bin ( buf , NULL )"	329:2:8668:8700	4999830	0	True				
ANR	4999913	AssignmentExpression	"clen = r_hex_str2bin ( buf , NULL )"		4999830	0		=			
ANR	4999914	Identifier	clen		4999830	0					
ANR	4999915	CallExpression	"r_hex_str2bin ( buf , NULL )"		4999830	1					
ANR	4999916	Callee	r_hex_str2bin		4999830	0					
ANR	4999917	Identifier	r_hex_str2bin		4999830	0					
ANR	4999918	ArgumentList	buf		4999830	1					
ANR	4999919	Argument	buf		4999830	0					
ANR	4999920	Identifier	buf		4999830	0					
ANR	4999921	Argument	NULL		4999830	1					
ANR	4999922	Identifier	NULL		4999830	0					
ANR	4999923	IfStatement	if ( ( int ) clen < 1 || ! ( data = malloc ( clen ) ) )		4999830	1					
ANR	4999924	Condition	( int ) clen < 1 || ! ( data = malloc ( clen ) )	330:6:8708:8747	4999830	0	True				
ANR	4999925	OrExpression	( int ) clen < 1 || ! ( data = malloc ( clen ) )		4999830	0		||			
ANR	4999926	RelationalExpression	( int ) clen < 1		4999830	0		<			
ANR	4999927	CastExpression	( int ) clen		4999830	0					
ANR	4999928	CastTarget	int		4999830	0					
ANR	4999929	Identifier	clen		4999830	1					
ANR	4999930	PrimaryExpression	1		4999830	1					
ANR	4999931	UnaryOperationExpression	! ( data = malloc ( clen ) )		4999830	1					
ANR	4999932	UnaryOperator	!		4999830	0					
ANR	4999933	AssignmentExpression	data = malloc ( clen )		4999830	1		=			
ANR	4999934	Identifier	data		4999830	0					
ANR	4999935	CallExpression	malloc ( clen )		4999830	1					
ANR	4999936	Callee	malloc		4999830	0					
ANR	4999937	Identifier	malloc		4999830	0					
ANR	4999938	ArgumentList	clen		4999830	1					
ANR	4999939	Argument	clen		4999830	0					
ANR	4999940	Identifier	clen		4999830	0					
ANR	4999941	CompoundStatement		20:48:352:352	4999830	1					
ANR	4999942	ExpressionStatement	ret = 0	331:3:8755:8762	4999830	0	True				
ANR	4999943	AssignmentExpression	ret = 0		4999830	0		=			
ANR	4999944	Identifier	ret		4999830	0					
ANR	4999945	PrimaryExpression	0		4999830	1					
ANR	4999946	GotoStatement	goto beach ;	332:3:8767:8777	4999830	1	True				
ANR	4999947	Identifier	beach		4999830	0					
ANR	4999948	ExpressionStatement	"r_hex_str2bin ( buf , data )"	334:2:8785:8810	4999830	2	True				
ANR	4999949	CallExpression	"r_hex_str2bin ( buf , data )"		4999830	0					
ANR	4999950	Callee	r_hex_str2bin		4999830	0					
ANR	4999951	Identifier	r_hex_str2bin		4999830	0					
ANR	4999952	ArgumentList	buf		4999830	1					
ANR	4999953	Argument	buf		4999830	0					
ANR	4999954	Identifier	buf		4999830	0					
ANR	4999955	Argument	data		4999830	1					
ANR	4999956	Identifier	data		4999830	0					
ANR	4999957	IfStatement	if ( ! len || clen <= len )		4999830	6					
ANR	4999958	Condition	! len || clen <= len	337:5:8821:8839	4999830	0	True				
ANR	4999959	OrExpression	! len || clen <= len		4999830	0		||			
ANR	4999960	UnaryOperationExpression	! len		4999830	0					
ANR	4999961	UnaryOperator	!		4999830	0					
ANR	4999962	Identifier	len		4999830	1					
ANR	4999963	RelationalExpression	clen <= len		4999830	1		<=			
ANR	4999964	Identifier	clen		4999830	0					
ANR	4999965	Identifier	len		4999830	1					
ANR	4999966	CompoundStatement		27:26:444:444	4999830	1					
ANR	4999967	ExpressionStatement	len = clen	338:2:8846:8856	4999830	0	True				
ANR	4999968	AssignmentExpression	len = clen		4999830	0		=			
ANR	4999969	Identifier	len		4999830	0					
ANR	4999970	Identifier	clen		4999830	1					
ANR	4999971	IfStatement	if ( hex == 2 )		4999830	7					
ANR	4999972	Condition	hex == 2	341:5:8867:8874	4999830	0	True				
ANR	4999973	EqualityExpression	hex == 2		4999830	0		==			
ANR	4999974	Identifier	hex		4999830	0					
ANR	4999975	PrimaryExpression	2		4999830	1					
ANR	4999976	CompoundStatement		32:2:483:502	4999830	1					
ANR	4999977	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	342:2:8881:8900	4999830	0	True				
ANR	4999978	IdentifierDecl	aop = { 0 }		4999830	0					
ANR	4999979	IdentifierDeclType	RAnalOp		4999830	0					
ANR	4999980	Identifier	aop		4999830	1					
ANR	4999981	AssignmentExpression	aop = { 0 }		4999830	2		=			
ANR	4999982	Identifier	aop		4999830	0					
ANR	4999983	InitializerList	0		4999830	1					
ANR	4999984	PrimaryExpression	0		4999830	0					
ANR	4999985	WhileStatement	while ( ret < len )		4999830	1					
ANR	4999986	Condition	ret < len	343:9:8911:8919	4999830	0	True				
ANR	4999987	RelationalExpression	ret < len		4999830	0		<			
ANR	4999988	Identifier	ret		4999830	0					
ANR	4999989	Identifier	len		4999830	1					
ANR	4999990	CompoundStatement		33:20:524:524	4999830	1					
ANR	4999991	ExpressionStatement	aop . size = 0	344:3:8927:8939	4999830	0	True				
ANR	4999992	AssignmentExpression	aop . size = 0		4999830	0		=			
ANR	4999993	MemberAccess	aop . size		4999830	0					
ANR	4999994	Identifier	aop		4999830	0					
ANR	4999995	Identifier	size		4999830	1					
ANR	4999996	PrimaryExpression	0		4999830	1					
ANR	4999997	IfStatement	"if ( r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL ) > 0 )"		4999830	1					
ANR	4999998	Condition	"r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL ) > 0"	345:7:8948:9029	4999830	0	True				
ANR	4999999	RelationalExpression	"r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL ) > 0"		4999830	0		>			
ANR	5000000	CallExpression	"r_anal_op ( as -> anal , & aop , offset , data + ret , len - ret , R_ANAL_OP_MASK_ESIL )"		4999830	0					
ANR	5000001	Callee	r_anal_op		4999830	0					
ANR	5000002	Identifier	r_anal_op		4999830	0					
ANR	5000003	ArgumentList	as -> anal		4999830	1					
ANR	5000004	Argument	as -> anal		4999830	0					
ANR	5000005	PtrMemberAccess	as -> anal		4999830	0					
ANR	5000006	Identifier	as		4999830	0					
ANR	5000007	Identifier	anal		4999830	1					
ANR	5000008	Argument	& aop		4999830	1					
ANR	5000009	UnaryOperationExpression	& aop		4999830	0					
ANR	5000010	UnaryOperator	&		4999830	0					
ANR	5000011	Identifier	aop		4999830	1					
ANR	5000012	Argument	offset		4999830	2					
ANR	5000013	Identifier	offset		4999830	0					
ANR	5000014	Argument	data + ret		4999830	3					
ANR	5000015	AdditiveExpression	data + ret		4999830	0		+			
ANR	5000016	Identifier	data		4999830	0					
ANR	5000017	Identifier	ret		4999830	1					
ANR	5000018	Argument	len - ret		4999830	4					
ANR	5000019	AdditiveExpression	len - ret		4999830	0		-			
ANR	5000020	Identifier	len		4999830	0					
ANR	5000021	Identifier	ret		4999830	1					
ANR	5000022	Argument	R_ANAL_OP_MASK_ESIL		4999830	5					
ANR	5000023	Identifier	R_ANAL_OP_MASK_ESIL		4999830	0					
ANR	5000024	PrimaryExpression	0		4999830	1					
ANR	5000025	CompoundStatement		35:91:634:634	4999830	1					
ANR	5000026	ExpressionStatement	"printf ( ""%s\\n"" , R_STRBUF_SAFEGET ( & aop . esil ) )"	346:4:9038:9083	4999830	0	True				
ANR	5000027	CallExpression	"printf ( ""%s\\n"" , R_STRBUF_SAFEGET ( & aop . esil ) )"		4999830	0					
ANR	5000028	Callee	printf		4999830	0					
ANR	5000029	Identifier	printf		4999830	0					
ANR	5000030	ArgumentList	"""%s\\n"""		4999830	1					
ANR	5000031	Argument	"""%s\\n"""		4999830	0					
ANR	5000032	PrimaryExpression	"""%s\\n"""		4999830	0					
ANR	5000033	Argument	R_STRBUF_SAFEGET ( & aop . esil )		4999830	1					
ANR	5000034	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		4999830	0					
ANR	5000035	Callee	R_STRBUF_SAFEGET		4999830	0					
ANR	5000036	Identifier	R_STRBUF_SAFEGET		4999830	0					
ANR	5000037	ArgumentList	& aop . esil		4999830	1					
ANR	5000038	Argument	& aop . esil		4999830	0					
ANR	5000039	UnaryOperationExpression	& aop . esil		4999830	0					
ANR	5000040	UnaryOperator	&		4999830	0					
ANR	5000041	MemberAccess	aop . esil		4999830	1					
ANR	5000042	Identifier	aop		4999830	0					
ANR	5000043	Identifier	esil		4999830	1					
ANR	5000044	IfStatement	if ( aop . size < 1 )		4999830	2					
ANR	5000045	Condition	aop . size < 1	348:7:9097:9108	4999830	0	True				
ANR	5000046	RelationalExpression	aop . size < 1		4999830	0		<			
ANR	5000047	MemberAccess	aop . size		4999830	0					
ANR	5000048	Identifier	aop		4999830	0					
ANR	5000049	Identifier	size		4999830	1					
ANR	5000050	PrimaryExpression	1		4999830	1					
ANR	5000051	CompoundStatement		38:21:713:713	4999830	1					
ANR	5000052	ExpressionStatement	"eprintf ( ""Invalid\\n"" )"	349:4:9117:9138	4999830	0	True				
ANR	5000053	CallExpression	"eprintf ( ""Invalid\\n"" )"		4999830	0					
ANR	5000054	Callee	eprintf		4999830	0					
ANR	5000055	Identifier	eprintf		4999830	0					
ANR	5000056	ArgumentList	"""Invalid\\n"""		4999830	1					
ANR	5000057	Argument	"""Invalid\\n"""		4999830	0					
ANR	5000058	PrimaryExpression	"""Invalid\\n"""		4999830	0					
ANR	5000059	BreakStatement	break ;	350:4:9144:9149	4999830	1	True				
ANR	5000060	ExpressionStatement	ret += aop . size	352:3:9159:9174	4999830	3	True				
ANR	5000061	AssignmentExpression	ret += aop . size		4999830	0		+=			
ANR	5000062	Identifier	ret		4999830	0					
ANR	5000063	MemberAccess	aop . size		4999830	1					
ANR	5000064	Identifier	aop		4999830	0					
ANR	5000065	Identifier	size		4999830	1					
ANR	5000066	ExpressionStatement	r_anal_op_fini ( & aop )	353:3:9179:9200	4999830	4	True				
ANR	5000067	CallExpression	r_anal_op_fini ( & aop )		4999830	0					
ANR	5000068	Callee	r_anal_op_fini		4999830	0					
ANR	5000069	Identifier	r_anal_op_fini		4999830	0					
ANR	5000070	ArgumentList	& aop		4999830	1					
ANR	5000071	Argument	& aop		4999830	0					
ANR	5000072	UnaryOperationExpression	& aop		4999830	0					
ANR	5000073	UnaryOperator	&		4999830	0					
ANR	5000074	Identifier	aop		4999830	1					
ANR	5000075	ElseStatement	else		4999830	0					
ANR	5000076	IfStatement	if ( hex )		4999830	0					
ANR	5000077	Condition	hex	355:12:9218:9220	4999830	0	True				
ANR	5000078	Identifier	hex		4999830	0					
ANR	5000079	CompoundStatement		46:2:829:838	4999830	1					
ANR	5000080	IdentifierDeclStatement	RAsmOp op ;	356:2:9227:9236	4999830	0	True				
ANR	5000081	IdentifierDecl	op		4999830	0					
ANR	5000082	IdentifierDeclType	RAsmOp		4999830	0					
ANR	5000083	Identifier	op		4999830	1					
ANR	5000084	ExpressionStatement	"r_asm_set_pc ( as -> a , offset )"	357:2:9240:9268	4999830	1	True				
ANR	5000085	CallExpression	"r_asm_set_pc ( as -> a , offset )"		4999830	0					
ANR	5000086	Callee	r_asm_set_pc		4999830	0					
ANR	5000087	Identifier	r_asm_set_pc		4999830	0					
ANR	5000088	ArgumentList	as -> a		4999830	1					
ANR	5000089	Argument	as -> a		4999830	0					
ANR	5000090	PtrMemberAccess	as -> a		4999830	0					
ANR	5000091	Identifier	as		4999830	0					
ANR	5000092	Identifier	a		4999830	1					
ANR	5000093	Argument	offset		4999830	1					
ANR	5000094	Identifier	offset		4999830	0					
ANR	5000095	WhileStatement	while ( ( len - ret ) > 0 )		4999830	2					
ANR	5000096	Condition	( len - ret ) > 0	358:9:9279:9293	4999830	0	True				
ANR	5000097	RelationalExpression	( len - ret ) > 0		4999830	0		>			
ANR	5000098	AdditiveExpression	len - ret		4999830	0		-			
ANR	5000099	Identifier	len		4999830	0					
ANR	5000100	Identifier	ret		4999830	1					
ANR	5000101	PrimaryExpression	0		4999830	1					
ANR	5000102	CompoundStatement		54:3:1065:1102	4999830	1					
ANR	5000103	IdentifierDeclStatement	"int dr = r_asm_disassemble ( as -> a , & op , data + ret , len - ret ) ;"	359:3:9301:9363	4999830	0	True				
ANR	5000104	IdentifierDecl	"dr = r_asm_disassemble ( as -> a , & op , data + ret , len - ret )"		4999830	0					
ANR	5000105	IdentifierDeclType	int		4999830	0					
ANR	5000106	Identifier	dr		4999830	1					
ANR	5000107	AssignmentExpression	"dr = r_asm_disassemble ( as -> a , & op , data + ret , len - ret )"		4999830	2		=			
ANR	5000108	Identifier	dr		4999830	0					
ANR	5000109	CallExpression	"r_asm_disassemble ( as -> a , & op , data + ret , len - ret )"		4999830	1					
ANR	5000110	Callee	r_asm_disassemble		4999830	0					
ANR	5000111	Identifier	r_asm_disassemble		4999830	0					
ANR	5000112	ArgumentList	as -> a		4999830	1					
ANR	5000113	Argument	as -> a		4999830	0					
ANR	5000114	PtrMemberAccess	as -> a		4999830	0					
ANR	5000115	Identifier	as		4999830	0					
ANR	5000116	Identifier	a		4999830	1					
ANR	5000117	Argument	& op		4999830	1					
ANR	5000118	UnaryOperationExpression	& op		4999830	0					
ANR	5000119	UnaryOperator	&		4999830	0					
ANR	5000120	Identifier	op		4999830	1					
ANR	5000121	Argument	data + ret		4999830	2					
ANR	5000122	AdditiveExpression	data + ret		4999830	0		+			
ANR	5000123	Identifier	data		4999830	0					
ANR	5000124	Identifier	ret		4999830	1					
ANR	5000125	Argument	len - ret		4999830	3					
ANR	5000126	AdditiveExpression	len - ret		4999830	0		-			
ANR	5000127	Identifier	len		4999830	0					
ANR	5000128	Identifier	ret		4999830	1					
ANR	5000129	IfStatement	if ( dr == - 1 || op . size < 1 )		4999830	1					
ANR	5000130	Condition	dr == - 1 || op . size < 1	360:7:9372:9394	4999830	0	True				
ANR	5000131	OrExpression	dr == - 1 || op . size < 1		4999830	0		||			
ANR	5000132	EqualityExpression	dr == - 1		4999830	0		==			
ANR	5000133	Identifier	dr		4999830	0					
ANR	5000134	UnaryOperationExpression	- 1		4999830	1					
ANR	5000135	UnaryOperator	-		4999830	0					
ANR	5000136	PrimaryExpression	1		4999830	1					
ANR	5000137	RelationalExpression	op . size < 1		4999830	1		<			
ANR	5000138	MemberAccess	op . size		4999830	0					
ANR	5000139	Identifier	op		4999830	0					
ANR	5000140	Identifier	size		4999830	1					
ANR	5000141	PrimaryExpression	1		4999830	1					
ANR	5000142	CompoundStatement		50:32:999:999	4999830	1					
ANR	5000143	ExpressionStatement	op . size = 1	361:4:9403:9414	4999830	0	True				
ANR	5000144	AssignmentExpression	op . size = 1		4999830	0		=			
ANR	5000145	MemberAccess	op . size		4999830	0					
ANR	5000146	Identifier	op		4999830	0					
ANR	5000147	Identifier	size		4999830	1					
ANR	5000148	PrimaryExpression	1		4999830	1					
ANR	5000149	ExpressionStatement	"r_asm_op_set_asm ( & op , ""invalid"" )"	362:4:9420:9453	4999830	1	True				
ANR	5000150	CallExpression	"r_asm_op_set_asm ( & op , ""invalid"" )"		4999830	0					
ANR	5000151	Callee	r_asm_op_set_asm		4999830	0					
ANR	5000152	Identifier	r_asm_op_set_asm		4999830	0					
ANR	5000153	ArgumentList	& op		4999830	1					
ANR	5000154	Argument	& op		4999830	0					
ANR	5000155	UnaryOperationExpression	& op		4999830	0					
ANR	5000156	UnaryOperator	&		4999830	0					
ANR	5000157	Identifier	op		4999830	1					
ANR	5000158	Argument	"""invalid"""		4999830	1					
ANR	5000159	PrimaryExpression	"""invalid"""		4999830	0					
ANR	5000160	IdentifierDeclStatement	char * op_hex = r_asm_op_get_hex ( & op ) ;	364:3:9463:9500	4999830	2	True				
ANR	5000161	IdentifierDecl	* op_hex = r_asm_op_get_hex ( & op )		4999830	0					
ANR	5000162	IdentifierDeclType	char *		4999830	0					
ANR	5000163	Identifier	op_hex		4999830	1					
ANR	5000164	AssignmentExpression	* op_hex = r_asm_op_get_hex ( & op )		4999830	2		=			
ANR	5000165	Identifier	op_hex		4999830	0					
ANR	5000166	CallExpression	r_asm_op_get_hex ( & op )		4999830	1					
ANR	5000167	Callee	r_asm_op_get_hex		4999830	0					
ANR	5000168	Identifier	r_asm_op_get_hex		4999830	0					
ANR	5000169	ArgumentList	& op		4999830	1					
ANR	5000170	Argument	& op		4999830	0					
ANR	5000171	UnaryOperationExpression	& op		4999830	0					
ANR	5000172	UnaryOperator	&		4999830	0					
ANR	5000173	Identifier	op		4999830	1					
ANR	5000174	Statement	printf	365:3:9505:9510	4999830	3	True				
ANR	5000175	Statement	(	365:10:9512:9512	4999830	4	True				
ANR	5000176	Statement	"""0x%08"""	365:11:9513:9519	4999830	5	True				
ANR	5000177	Statement	PFMT64x	365:19:9521:9527	4999830	6	True				
ANR	5000178	Statement	"""  %2d %24s  %s\\n"""	365:27:9529:9546	4999830	7	True				
ANR	5000179	Statement	","	365:45:9547:9547	4999830	8	True				
ANR	5000180	Statement	as	366:4:9553:9554	4999830	9	True				
ANR	5000181	Statement	->	366:6:9555:9556	4999830	10	True				
ANR	5000182	Statement	a	366:8:9557:9557	4999830	11	True				
ANR	5000183	Statement	->	366:9:9558:9559	4999830	12	True				
ANR	5000184	Statement	pc	366:11:9560:9561	4999830	13	True				
ANR	5000185	Statement	","	366:13:9562:9562	4999830	14	True				
ANR	5000186	Statement	op	366:15:9564:9565	4999830	15	True				
ANR	5000187	Statement	.	366:17:9566:9566	4999830	16	True				
ANR	5000188	Statement	size	366:18:9567:9570	4999830	17	True				
ANR	5000189	Statement	","	366:22:9571:9571	4999830	18	True				
ANR	5000190	Statement	op_hex	366:24:9573:9578	4999830	19	True				
ANR	5000191	Statement	","	366:30:9579:9579	4999830	20	True				
ANR	5000192	Statement	r_asm_op_get_asm	367:4:9585:9600	4999830	21	True				
ANR	5000193	Statement	(	367:21:9602:9602	4999830	22	True				
ANR	5000194	Statement	&	367:22:9603:9603	4999830	23	True				
ANR	5000195	Statement	op	367:23:9604:9605	4999830	24	True				
ANR	5000196	Statement	)	367:25:9606:9606	4999830	25	True				
ANR	5000197	Statement	)	367:26:9607:9607	4999830	26	True				
ANR	5000198	ExpressionStatement		367:27:9608:9608	4999830	27	True				
ANR	5000199	ExpressionStatement	free ( op_hex )	368:3:9613:9626	4999830	28	True				
ANR	5000200	CallExpression	free ( op_hex )		4999830	0					
ANR	5000201	Callee	free		4999830	0					
ANR	5000202	Identifier	free		4999830	0					
ANR	5000203	ArgumentList	op_hex		4999830	1					
ANR	5000204	Argument	op_hex		4999830	0					
ANR	5000205	Identifier	op_hex		4999830	0					
ANR	5000206	ExpressionStatement	ret += op . size	369:3:9631:9645	4999830	29	True				
ANR	5000207	AssignmentExpression	ret += op . size		4999830	0		+=			
ANR	5000208	Identifier	ret		4999830	0					
ANR	5000209	MemberAccess	op . size		4999830	1					
ANR	5000210	Identifier	op		4999830	0					
ANR	5000211	Identifier	size		4999830	1					
ANR	5000212	ExpressionStatement	"r_asm_set_pc ( as -> a , offset + ret )"	370:3:9650:9684	4999830	30	True				
ANR	5000213	CallExpression	"r_asm_set_pc ( as -> a , offset + ret )"		4999830	0					
ANR	5000214	Callee	r_asm_set_pc		4999830	0					
ANR	5000215	Identifier	r_asm_set_pc		4999830	0					
ANR	5000216	ArgumentList	as -> a		4999830	1					
ANR	5000217	Argument	as -> a		4999830	0					
ANR	5000218	PtrMemberAccess	as -> a		4999830	0					
ANR	5000219	Identifier	as		4999830	0					
ANR	5000220	Identifier	a		4999830	1					
ANR	5000221	Argument	offset + ret		4999830	1					
ANR	5000222	AdditiveExpression	offset + ret		4999830	0		+			
ANR	5000223	Identifier	offset		4999830	0					
ANR	5000224	Identifier	ret		4999830	1					
ANR	5000225	ElseStatement	else		4999830	0					
ANR	5000226	CompoundStatement		62:8:1300:1300	4999830	0					
ANR	5000227	ExpressionStatement	"r_asm_set_pc ( as -> a , offset )"	373:2:9702:9730	4999830	0	True				
ANR	5000228	CallExpression	"r_asm_set_pc ( as -> a , offset )"		4999830	0					
ANR	5000229	Callee	r_asm_set_pc		4999830	0					
ANR	5000230	Identifier	r_asm_set_pc		4999830	0					
ANR	5000231	ArgumentList	as -> a		4999830	1					
ANR	5000232	Argument	as -> a		4999830	0					
ANR	5000233	PtrMemberAccess	as -> a		4999830	0					
ANR	5000234	Identifier	as		4999830	0					
ANR	5000235	Identifier	a		4999830	1					
ANR	5000236	Argument	offset		4999830	1					
ANR	5000237	Identifier	offset		4999830	0					
ANR	5000238	IfStatement	"if ( ! ( acode = r_asm_mdisassemble ( as -> a , data , len ) ) )"		4999830	1					
ANR	5000239	Condition	"! ( acode = r_asm_mdisassemble ( as -> a , data , len ) )"	374:6:9738:9785	4999830	0	True				
ANR	5000240	UnaryOperationExpression	"! ( acode = r_asm_mdisassemble ( as -> a , data , len ) )"		4999830	0					
ANR	5000241	UnaryOperator	!		4999830	0					
ANR	5000242	AssignmentExpression	"acode = r_asm_mdisassemble ( as -> a , data , len )"		4999830	1		=			
ANR	5000243	Identifier	acode		4999830	0					
ANR	5000244	CallExpression	"r_asm_mdisassemble ( as -> a , data , len )"		4999830	1					
ANR	5000245	Callee	r_asm_mdisassemble		4999830	0					
ANR	5000246	Identifier	r_asm_mdisassemble		4999830	0					
ANR	5000247	ArgumentList	as -> a		4999830	1					
ANR	5000248	Argument	as -> a		4999830	0					
ANR	5000249	PtrMemberAccess	as -> a		4999830	0					
ANR	5000250	Identifier	as		4999830	0					
ANR	5000251	Identifier	a		4999830	1					
ANR	5000252	Argument	data		4999830	1					
ANR	5000253	Identifier	data		4999830	0					
ANR	5000254	Argument	len		4999830	2					
ANR	5000255	Identifier	len		4999830	0					
ANR	5000256	CompoundStatement		64:56:1390:1390	4999830	1					
ANR	5000257	GotoStatement	goto beach ;	375:3:9793:9803	4999830	0	True				
ANR	5000258	Identifier	beach		4999830	0					
ANR	5000259	IfStatement	if ( as -> oneliner )		4999830	2					
ANR	5000260	Condition	as -> oneliner	377:6:9815:9826	4999830	0	True				
ANR	5000261	PtrMemberAccess	as -> oneliner		4999830	0					
ANR	5000262	Identifier	as		4999830	0					
ANR	5000263	Identifier	oneliner		4999830	1					
ANR	5000264	CompoundStatement		67:20:1431:1431	4999830	1					
ANR	5000265	ExpressionStatement	"r_str_replace_char ( acode -> assembly , '\\n' , ';' )"	378:3:9834:9881	4999830	0	True				
ANR	5000266	CallExpression	"r_str_replace_char ( acode -> assembly , '\\n' , ';' )"		4999830	0					
ANR	5000267	Callee	r_str_replace_char		4999830	0					
ANR	5000268	Identifier	r_str_replace_char		4999830	0					
ANR	5000269	ArgumentList	acode -> assembly		4999830	1					
ANR	5000270	Argument	acode -> assembly		4999830	0					
ANR	5000271	PtrMemberAccess	acode -> assembly		4999830	0					
ANR	5000272	Identifier	acode		4999830	0					
ANR	5000273	Identifier	assembly		4999830	1					
ANR	5000274	Argument	'\\n'		4999830	1					
ANR	5000275	PrimaryExpression	'\\n'		4999830	0					
ANR	5000276	Argument	';'		4999830	2					
ANR	5000277	PrimaryExpression	';'		4999830	0					
ANR	5000278	ExpressionStatement	"printf ( ""%s\\""\\n"" , acode -> assembly )"	379:3:9886:9920	4999830	1	True				
ANR	5000279	CallExpression	"printf ( ""%s\\""\\n"" , acode -> assembly )"		4999830	0					
ANR	5000280	Callee	printf		4999830	0					
ANR	5000281	Identifier	printf		4999830	0					
ANR	5000282	ArgumentList	"""%s\\""\\n"""		4999830	1					
ANR	5000283	Argument	"""%s\\""\\n"""		4999830	0					
ANR	5000284	PrimaryExpression	"""%s\\""\\n"""		4999830	0					
ANR	5000285	Argument	acode -> assembly		4999830	1					
ANR	5000286	PtrMemberAccess	acode -> assembly		4999830	0					
ANR	5000287	Identifier	acode		4999830	0					
ANR	5000288	Identifier	assembly		4999830	1					
ANR	5000289	ElseStatement	else		4999830	0					
ANR	5000290	CompoundStatement		70:9:1533:1533	4999830	0					
ANR	5000291	ExpressionStatement	"printf ( ""%s"" , acode -> assembly )"	381:3:9936:9966	4999830	0	True				
ANR	5000292	CallExpression	"printf ( ""%s"" , acode -> assembly )"		4999830	0					
ANR	5000293	Callee	printf		4999830	0					
ANR	5000294	Identifier	printf		4999830	0					
ANR	5000295	ArgumentList	"""%s"""		4999830	1					
ANR	5000296	Argument	"""%s"""		4999830	0					
ANR	5000297	PrimaryExpression	"""%s"""		4999830	0					
ANR	5000298	Argument	acode -> assembly		4999830	1					
ANR	5000299	PtrMemberAccess	acode -> assembly		4999830	0					
ANR	5000300	Identifier	acode		4999830	0					
ANR	5000301	Identifier	assembly		4999830	1					
ANR	5000302	ExpressionStatement	ret = acode -> len	383:2:9974:9990	4999830	3	True				
ANR	5000303	AssignmentExpression	ret = acode -> len		4999830	0		=			
ANR	5000304	Identifier	ret		4999830	0					
ANR	5000305	PtrMemberAccess	acode -> len		4999830	1					
ANR	5000306	Identifier	acode		4999830	0					
ANR	5000307	Identifier	len		4999830	1					
ANR	5000308	ExpressionStatement	r_asm_code_free ( acode )	384:2:9994:10017	4999830	4	True				
ANR	5000309	CallExpression	r_asm_code_free ( acode )		4999830	0					
ANR	5000310	Callee	r_asm_code_free		4999830	0					
ANR	5000311	Identifier	r_asm_code_free		4999830	0					
ANR	5000312	ArgumentList	acode		4999830	1					
ANR	5000313	Argument	acode		4999830	0					
ANR	5000314	Identifier	acode		4999830	0					
ANR	5000315	Label	beach :	386:0:10022:10027	4999830	8	True				
ANR	5000316	Identifier	beach		4999830	0					
ANR	5000317	IfStatement	if ( data && data != ( ut8 * ) buf )		4999830	9					
ANR	5000318	Condition	data && data != ( ut8 * ) buf	387:5:10034:10059	4999830	0	True				
ANR	5000319	AndExpression	data && data != ( ut8 * ) buf		4999830	0		&&			
ANR	5000320	Identifier	data		4999830	0					
ANR	5000321	EqualityExpression	data != ( ut8 * ) buf		4999830	1		!=			
ANR	5000322	Identifier	data		4999830	0					
ANR	5000323	CastExpression	( ut8 * ) buf		4999830	1					
ANR	5000324	CastTarget	ut8 *		4999830	0					
ANR	5000325	Identifier	buf		4999830	1					
ANR	5000326	CompoundStatement		77:33:1664:1664	4999830	1					
ANR	5000327	ExpressionStatement	free ( data )	388:2:10066:10077	4999830	0	True				
ANR	5000328	CallExpression	free ( data )		4999830	0					
ANR	5000329	Callee	free		4999830	0					
ANR	5000330	Identifier	free		4999830	0					
ANR	5000331	ArgumentList	data		4999830	1					
ANR	5000332	Argument	data		4999830	0					
ANR	5000333	Identifier	data		4999830	0					
ANR	5000334	ReturnStatement	return ret ;	390:1:10083:10093	4999830	10	True				
ANR	5000335	Identifier	ret		4999830	0					
ANR	5000336	ReturnType	static int		4999830	1					
ANR	5000337	Identifier	rasm_disasm		4999830	2					
ANR	5000338	ParameterList	"RAsmState * as , char * buf , ut64 offset , int len , int bits , int ascii , int bin , int hex"		4999830	3					
ANR	5000339	Parameter	RAsmState * as	311:23:8310:8322	4999830	0	True				
ANR	5000340	ParameterType	RAsmState *		4999830	0					
ANR	5000341	Identifier	as		4999830	1					
ANR	5000342	Parameter	char * buf	311:38:8325:8333	4999830	1	True				
ANR	5000343	ParameterType	char *		4999830	0					
ANR	5000344	Identifier	buf		4999830	1					
ANR	5000345	Parameter	ut64 offset	311:49:8336:8346	4999830	2	True				
ANR	5000346	ParameterType	ut64		4999830	0					
ANR	5000347	Identifier	offset		4999830	1					
ANR	5000348	Parameter	int len	311:62:8349:8355	4999830	3	True				
ANR	5000349	ParameterType	int		4999830	0					
ANR	5000350	Identifier	len		4999830	1					
ANR	5000351	Parameter	int bits	311:71:8358:8365	4999830	4	True				
ANR	5000352	ParameterType	int		4999830	0					
ANR	5000353	Identifier	bits		4999830	1					
ANR	5000354	Parameter	int ascii	311:81:8368:8376	4999830	5	True				
ANR	5000355	ParameterType	int		4999830	0					
ANR	5000356	Identifier	ascii		4999830	1					
ANR	5000357	Parameter	int bin	311:92:8379:8385	4999830	6	True				
ANR	5000358	ParameterType	int		4999830	0					
ANR	5000359	Identifier	bin		4999830	1					
ANR	5000360	Parameter	int hex	311:101:8388:8394	4999830	7	True				
ANR	5000361	ParameterType	int		4999830	0					
ANR	5000362	Identifier	hex		4999830	1					
ANR	5000363	CFGEntryNode	ENTRY		4999830		True				
ANR	5000364	CFGExitNode	EXIT		4999830		True				
ANR	5000365	Symbol	aop		4999830						
ANR	5000366	Symbol	data		4999830						
ANR	5000367	Symbol	bin		4999830						
ANR	5000368	Symbol	as -> oneliner		4999830						
ANR	5000369	Symbol	& op		4999830						
ANR	5000370	Symbol	acode		4999830						
ANR	5000371	Symbol	dr		4999830						
ANR	5000372	Symbol	acode -> len		4999830						
ANR	5000373	Symbol	strlen		4999830						
ANR	5000374	Symbol	aop . size		4999830						
ANR	5000375	Symbol	len		4999830						
ANR	5000376	Symbol	as -> anal		4999830						
ANR	5000377	Symbol	acode -> assembly		4999830						
ANR	5000378	Symbol	hex		4999830						
ANR	5000379	Symbol	ascii		4999830						
ANR	5000380	Symbol	r_hex_str2bin		4999830						
ANR	5000381	Symbol	r_anal_op		4999830						
ANR	5000382	Symbol	ret		4999830						
ANR	5000383	Symbol	malloc		4999830						
ANR	5000384	Symbol	op		4999830						
ANR	5000385	Symbol	NULL		4999830						
ANR	5000386	Symbol	offset		4999830						
ANR	5000387	Symbol	R_STRBUF_SAFEGET		4999830						
ANR	5000388	Symbol	bits		4999830						
ANR	5000389	Symbol	false		4999830						
ANR	5000390	Symbol	& aop . esil		4999830						
ANR	5000391	Symbol	r_asm_op_get_hex		4999830						
ANR	5000392	Symbol	& aop		4999830						
ANR	5000393	Symbol	as		4999830						
ANR	5000394	Symbol	buf		4999830						
ANR	5000395	Symbol	as -> a		4999830						
ANR	5000396	Symbol	* as		4999830						
ANR	5000397	Symbol	clen		4999830						
ANR	5000398	Symbol	op . size		4999830						
ANR	5000399	Symbol	r_asm_mdisassemble		4999830						
ANR	5000400	Symbol	r_asm_disassemble		4999830						
ANR	5000401	Symbol	op_hex		4999830						
ANR	5000402	Symbol	* acode		4999830						
ANR	5000403	Symbol	R_ANAL_OP_MASK_ESIL		4999830						
ANR	5000404	Function	print_buf	393:0:10098:10392							
ANR	5000405	FunctionDef	"print_buf (RAsmState * as , char * str)"		5000404	0					
ANR	5000406	CompoundStatement		393:48:10146:10392	5000404	0					
ANR	5000407	IdentifierDeclStatement	int i ;	394:1:10149:10154	5000404	0	True				
ANR	5000408	IdentifierDecl	i		5000404	0					
ANR	5000409	IdentifierDeclType	int		5000404	0					
ANR	5000410	Identifier	i		5000404	1					
ANR	5000411	IfStatement	if ( as -> coutput )		5000404	1					
ANR	5000412	Condition	as -> coutput	395:5:10161:10171	5000404	0	True				
ANR	5000413	PtrMemberAccess	as -> coutput		5000404	0					
ANR	5000414	Identifier	as		5000404	0					
ANR	5000415	Identifier	coutput		5000404	1					
ANR	5000416	CompoundStatement		3:18:27:27	5000404	1					
ANR	5000417	ExpressionStatement	"printf ( ""\\"""" )"	396:2:10178:10191	5000404	0	True				
ANR	5000418	CallExpression	"printf ( ""\\"""" )"		5000404	0					
ANR	5000419	Callee	printf		5000404	0					
ANR	5000420	Identifier	printf		5000404	0					
ANR	5000421	ArgumentList	"""\\"""""		5000404	1					
ANR	5000422	Argument	"""\\"""""		5000404	0					
ANR	5000423	PrimaryExpression	"""\\"""""		5000404	0					
ANR	5000424	ForStatement	"for ( i = 1 ; * str ; str += 2 , i += 2 )"		5000404	1					
ANR	5000425	ForInit	i = 1 ;	397:7:10200:10205	5000404	0	True				
ANR	5000426	AssignmentExpression	i = 1		5000404	0		=			
ANR	5000427	Identifier	i		5000404	0					
ANR	5000428	PrimaryExpression	1		5000404	1					
ANR	5000429	Condition	* str	397:14:10207:10210	5000404	1	True				
ANR	5000430	UnaryOperationExpression	* str		5000404	0					
ANR	5000431	UnaryOperator	*		5000404	0					
ANR	5000432	Identifier	str		5000404	1					
ANR	5000433	Expression	"str += 2 , i += 2"	397:20:10213:10228	5000404	2	True				
ANR	5000434	AssignmentExpression	str += 2		5000404	0		+=			
ANR	5000435	Identifier	str		5000404	0					
ANR	5000436	PrimaryExpression	2		5000404	1					
ANR	5000437	AssignmentExpression	i += 2		5000404	1		+=			
ANR	5000438	Identifier	i		5000404	0					
ANR	5000439	PrimaryExpression	2		5000404	1					
ANR	5000440	CompoundStatement		5:38:84:84	5000404	3					
ANR	5000441	IfStatement	if ( ! ( i % 41 ) )		5000404	0					
ANR	5000442	Condition	! ( i % 41 )	398:7:10240:10248	5000404	0	True				
ANR	5000443	UnaryOperationExpression	! ( i % 41 )		5000404	0					
ANR	5000444	UnaryOperator	!		5000404	0					
ANR	5000445	MultiplicativeExpression	i % 41		5000404	1		%			
ANR	5000446	Identifier	i		5000404	0					
ANR	5000447	PrimaryExpression	41		5000404	1					
ANR	5000448	CompoundStatement		6:18:104:104	5000404	1					
ANR	5000449	ExpressionStatement	"printf ( ""\\"" \\\\\\n\\"""" )"	399:4:10257:10277	5000404	0	True				
ANR	5000450	CallExpression	"printf ( ""\\"" \\\\\\n\\"""" )"		5000404	0					
ANR	5000451	Callee	printf		5000404	0					
ANR	5000452	Identifier	printf		5000404	0					
ANR	5000453	ArgumentList	"""\\"" \\\\\\n\\"""""		5000404	1					
ANR	5000454	Argument	"""\\"" \\\\\\n\\"""""		5000404	0					
ANR	5000455	PrimaryExpression	"""\\"" \\\\\\n\\"""""		5000404	0					
ANR	5000456	ExpressionStatement	i = 1	400:4:10283:10288	5000404	1	True				
ANR	5000457	AssignmentExpression	i = 1		5000404	0		=			
ANR	5000458	Identifier	i		5000404	0					
ANR	5000459	PrimaryExpression	1		5000404	1					
ANR	5000460	ExpressionStatement	"printf ( ""\\\\x%c%c"" , * str , str [ 1 ] )"	402:3:10298:10330	5000404	1	True				
ANR	5000461	CallExpression	"printf ( ""\\\\x%c%c"" , * str , str [ 1 ] )"		5000404	0					
ANR	5000462	Callee	printf		5000404	0					
ANR	5000463	Identifier	printf		5000404	0					
ANR	5000464	ArgumentList	"""\\\\x%c%c"""		5000404	1					
ANR	5000465	Argument	"""\\\\x%c%c"""		5000404	0					
ANR	5000466	PrimaryExpression	"""\\\\x%c%c"""		5000404	0					
ANR	5000467	Argument	* str		5000404	1					
ANR	5000468	UnaryOperationExpression	* str		5000404	0					
ANR	5000469	UnaryOperator	*		5000404	0					
ANR	5000470	Identifier	str		5000404	1					
ANR	5000471	Argument	str [ 1 ]		5000404	2					
ANR	5000472	ArrayIndexing	str [ 1 ]		5000404	0					
ANR	5000473	Identifier	str		5000404	0					
ANR	5000474	PrimaryExpression	1		5000404	1					
ANR	5000475	ExpressionStatement	"printf ( ""\\""\\n"" )"	404:2:10338:10353	5000404	2	True				
ANR	5000476	CallExpression	"printf ( ""\\""\\n"" )"		5000404	0					
ANR	5000477	Callee	printf		5000404	0					
ANR	5000478	Identifier	printf		5000404	0					
ANR	5000479	ArgumentList	"""\\""\\n"""		5000404	1					
ANR	5000480	Argument	"""\\""\\n"""		5000404	0					
ANR	5000481	PrimaryExpression	"""\\""\\n"""		5000404	0					
ANR	5000482	ElseStatement	else		5000404	0					
ANR	5000483	CompoundStatement		13:8:216:216	5000404	0					
ANR	5000484	ExpressionStatement	"printf ( ""%s\\n"" , str )"	406:2:10367:10387	5000404	0	True				
ANR	5000485	CallExpression	"printf ( ""%s\\n"" , str )"		5000404	0					
ANR	5000486	Callee	printf		5000404	0					
ANR	5000487	Identifier	printf		5000404	0					
ANR	5000488	ArgumentList	"""%s\\n"""		5000404	1					
ANR	5000489	Argument	"""%s\\n"""		5000404	0					
ANR	5000490	PrimaryExpression	"""%s\\n"""		5000404	0					
ANR	5000491	Argument	str		5000404	1					
ANR	5000492	Identifier	str		5000404	0					
ANR	5000493	ReturnType	static void		5000404	1					
ANR	5000494	Identifier	print_buf		5000404	2					
ANR	5000495	ParameterList	"RAsmState * as , char * str"		5000404	3					
ANR	5000496	Parameter	RAsmState * as	393:22:10120:10132	5000404	0	True				
ANR	5000497	ParameterType	RAsmState *		5000404	0					
ANR	5000498	Identifier	as		5000404	1					
ANR	5000499	Parameter	char * str	393:37:10135:10143	5000404	1	True				
ANR	5000500	ParameterType	char *		5000404	0					
ANR	5000501	Identifier	str		5000404	1					
ANR	5000502	CFGEntryNode	ENTRY		5000404		True				
ANR	5000503	CFGExitNode	EXIT		5000404		True				
ANR	5000504	Symbol	str		5000404						
ANR	5000505	Symbol	as		5000404						
ANR	5000506	Symbol	as -> coutput		5000404						
ANR	5000507	Symbol	i		5000404						
ANR	5000508	Symbol	* as		5000404						
ANR	5000509	Symbol	* str		5000404						
ANR	5000510	Function	print_label	410:0:10395:10542							
ANR	5000511	FunctionDef	"print_label (void * user , const void * k , const void * v)"		5000510	0					
ANR	5000512	CompoundStatement		410:66:10461:10542	5000510	0					
ANR	5000513	ExpressionStatement	"printf ( ""f label.%s = %s\\n"" , ( const char * ) k , ( const char * ) v )"	411:1:10464:10526	5000510	0	True				
ANR	5000514	CallExpression	"printf ( ""f label.%s = %s\\n"" , ( const char * ) k , ( const char * ) v )"		5000510	0					
ANR	5000515	Callee	printf		5000510	0					
ANR	5000516	Identifier	printf		5000510	0					
ANR	5000517	ArgumentList	"""f label.%s = %s\\n"""		5000510	1					
ANR	5000518	Argument	"""f label.%s = %s\\n"""		5000510	0					
ANR	5000519	PrimaryExpression	"""f label.%s = %s\\n"""		5000510	0					
ANR	5000520	Argument	( const char * ) k		5000510	1					
ANR	5000521	CastExpression	( const char * ) k		5000510	0					
ANR	5000522	CastTarget	const char *		5000510	0					
ANR	5000523	Identifier	k		5000510	1					
ANR	5000524	Argument	( const char * ) v		5000510	2					
ANR	5000525	CastExpression	( const char * ) v		5000510	0					
ANR	5000526	CastTarget	const char *		5000510	0					
ANR	5000527	Identifier	v		5000510	1					
ANR	5000528	ReturnStatement	return true ;	412:1:10529:10540	5000510	1	True				
ANR	5000529	Identifier	true		5000510	0					
ANR	5000530	ReturnType	static bool		5000510	1					
ANR	5000531	Identifier	print_label		5000510	2					
ANR	5000532	ParameterList	"void * user , const void * k , const void * v"		5000510	3					
ANR	5000533	Parameter	void * user	410:24:10419:10428	5000510	0	True				
ANR	5000534	ParameterType	void *		5000510	0					
ANR	5000535	Identifier	user		5000510	1					
ANR	5000536	Parameter	const void * k	410:36:10431:10443	5000510	1	True				
ANR	5000537	ParameterType	const void *		5000510	0					
ANR	5000538	Identifier	k		5000510	1					
ANR	5000539	Parameter	const void * v	410:51:10446:10458	5000510	2	True				
ANR	5000540	ParameterType	const void *		5000510	0					
ANR	5000541	Identifier	v		5000510	1					
ANR	5000542	CFGEntryNode	ENTRY		5000510		True				
ANR	5000543	CFGExitNode	EXIT		5000510		True				
ANR	5000544	Symbol	v		5000510						
ANR	5000545	Symbol	true		5000510						
ANR	5000546	Symbol	k		5000510						
ANR	5000547	Symbol	user		5000510						
ANR	5000548	Function	rasm_asm	415:0:10545:11748							
ANR	5000549	FunctionDef	"rasm_asm (RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool hexwords)"		5000548	0					
ANR	5000550	CompoundStatement		415:123:10668:11748	5000548	0					
ANR	5000551	IdentifierDeclStatement	RAsmCode * acode ;	416:1:10671:10686	5000548	0	True				
ANR	5000552	IdentifierDecl	* acode		5000548	0					
ANR	5000553	IdentifierDeclType	RAsmCode *		5000548	0					
ANR	5000554	Identifier	acode		5000548	1					
ANR	5000555	IdentifierDeclStatement	"int i , j , ret = 0 ;"	417:1:10689:10706	5000548	1	True				
ANR	5000556	IdentifierDecl	i		5000548	0					
ANR	5000557	IdentifierDeclType	int		5000548	0					
ANR	5000558	Identifier	i		5000548	1					
ANR	5000559	IdentifierDecl	j		5000548	1					
ANR	5000560	IdentifierDeclType	int		5000548	0					
ANR	5000561	Identifier	j		5000548	1					
ANR	5000562	IdentifierDecl	ret = 0		5000548	2					
ANR	5000563	IdentifierDeclType	int		5000548	0					
ANR	5000564	Identifier	ret		5000548	1					
ANR	5000565	AssignmentExpression	ret = 0		5000548	2		=			
ANR	5000566	Identifier	ret		5000548	0					
ANR	5000567	PrimaryExpression	0		5000548	1					
ANR	5000568	ExpressionStatement	"r_asm_set_pc ( as -> a , offset )"	418:1:10709:10737	5000548	2	True				
ANR	5000569	CallExpression	"r_asm_set_pc ( as -> a , offset )"		5000548	0					
ANR	5000570	Callee	r_asm_set_pc		5000548	0					
ANR	5000571	Identifier	r_asm_set_pc		5000548	0					
ANR	5000572	ArgumentList	as -> a		5000548	1					
ANR	5000573	Argument	as -> a		5000548	0					
ANR	5000574	PtrMemberAccess	as -> a		5000548	0					
ANR	5000575	Identifier	as		5000548	0					
ANR	5000576	Identifier	a		5000548	1					
ANR	5000577	Argument	offset		5000548	1					
ANR	5000578	Identifier	offset		5000548	0					
ANR	5000579	IfStatement	"if ( ! ( acode = r_asm_rasm_assemble ( as -> a , buf , use_spp ) ) )"		5000548	3					
ANR	5000580	Condition	"! ( acode = r_asm_rasm_assemble ( as -> a , buf , use_spp ) )"	419:5:10744:10795	5000548	0	True				
ANR	5000581	UnaryOperationExpression	"! ( acode = r_asm_rasm_assemble ( as -> a , buf , use_spp ) )"		5000548	0					
ANR	5000582	UnaryOperator	!		5000548	0					
ANR	5000583	AssignmentExpression	"acode = r_asm_rasm_assemble ( as -> a , buf , use_spp )"		5000548	1		=			
ANR	5000584	Identifier	acode		5000548	0					
ANR	5000585	CallExpression	"r_asm_rasm_assemble ( as -> a , buf , use_spp )"		5000548	1					
ANR	5000586	Callee	r_asm_rasm_assemble		5000548	0					
ANR	5000587	Identifier	r_asm_rasm_assemble		5000548	0					
ANR	5000588	ArgumentList	as -> a		5000548	1					
ANR	5000589	Argument	as -> a		5000548	0					
ANR	5000590	PtrMemberAccess	as -> a		5000548	0					
ANR	5000591	Identifier	as		5000548	0					
ANR	5000592	Identifier	a		5000548	1					
ANR	5000593	Argument	buf		5000548	1					
ANR	5000594	Identifier	buf		5000548	0					
ANR	5000595	Argument	use_spp		5000548	2					
ANR	5000596	Identifier	use_spp		5000548	0					
ANR	5000597	CompoundStatement		5:59:129:129	5000548	1					
ANR	5000598	ReturnStatement	return 0 ;	420:2:10802:10810	5000548	0	True				
ANR	5000599	PrimaryExpression	0		5000548	0					
ANR	5000600	IfStatement	if ( acode -> len )		5000548	4					
ANR	5000601	Condition	acode -> len	422:5:10820:10829	5000548	0	True				
ANR	5000602	PtrMemberAccess	acode -> len		5000548	0					
ANR	5000603	Identifier	acode		5000548	0					
ANR	5000604	Identifier	len		5000548	1					
ANR	5000605	CompoundStatement		8:17:163:163	5000548	1					
ANR	5000606	ExpressionStatement	ret = acode -> len	423:2:10836:10852	5000548	0	True				
ANR	5000607	AssignmentExpression	ret = acode -> len		5000548	0		=			
ANR	5000608	Identifier	ret		5000548	0					
ANR	5000609	PtrMemberAccess	acode -> len		5000548	1					
ANR	5000610	Identifier	acode		5000548	0					
ANR	5000611	Identifier	len		5000548	1					
ANR	5000612	IfStatement	if ( bin )		5000548	1					
ANR	5000613	Condition	bin	424:6:10860:10862	5000548	0	True				
ANR	5000614	Identifier	bin		5000548	0					
ANR	5000615	CompoundStatement		10:11:196:196	5000548	1					
ANR	5000616	IfStatement	"if ( ( ret = write ( 1 , acode -> bytes , acode -> len ) ) != acode -> len )"		5000548	0					
ANR	5000617	Condition	"( ret = write ( 1 , acode -> bytes , acode -> len ) ) != acode -> len"	425:7:10874:10930	5000548	0	True				
ANR	5000618	EqualityExpression	"( ret = write ( 1 , acode -> bytes , acode -> len ) ) != acode -> len"		5000548	0		!=			
ANR	5000619	AssignmentExpression	"ret = write ( 1 , acode -> bytes , acode -> len )"		5000548	0		=			
ANR	5000620	Identifier	ret		5000548	0					
ANR	5000621	CallExpression	"write ( 1 , acode -> bytes , acode -> len )"		5000548	1					
ANR	5000622	Callee	write		5000548	0					
ANR	5000623	Identifier	write		5000548	0					
ANR	5000624	ArgumentList	1		5000548	1					
ANR	5000625	Argument	1		5000548	0					
ANR	5000626	PrimaryExpression	1		5000548	0					
ANR	5000627	Argument	acode -> bytes		5000548	1					
ANR	5000628	PtrMemberAccess	acode -> bytes		5000548	0					
ANR	5000629	Identifier	acode		5000548	0					
ANR	5000630	Identifier	bytes		5000548	1					
ANR	5000631	Argument	acode -> len		5000548	2					
ANR	5000632	PtrMemberAccess	acode -> len		5000548	0					
ANR	5000633	Identifier	acode		5000548	0					
ANR	5000634	Identifier	len		5000548	1					
ANR	5000635	PtrMemberAccess	acode -> len		5000548	1					
ANR	5000636	Identifier	acode		5000548	0					
ANR	5000637	Identifier	len		5000548	1					
ANR	5000638	CompoundStatement		11:66:264:264	5000548	1					
ANR	5000639	ExpressionStatement	"eprintf ( ""Failed to write buffer\\n"" )"	426:4:10939:10975	5000548	0	True				
ANR	5000640	CallExpression	"eprintf ( ""Failed to write buffer\\n"" )"		5000548	0					
ANR	5000641	Callee	eprintf		5000548	0					
ANR	5000642	Identifier	eprintf		5000548	0					
ANR	5000643	ArgumentList	"""Failed to write buffer\\n"""		5000548	1					
ANR	5000644	Argument	"""Failed to write buffer\\n"""		5000548	0					
ANR	5000645	PrimaryExpression	"""Failed to write buffer\\n"""		5000548	0					
ANR	5000646	ExpressionStatement	r_asm_code_free ( acode )	427:4:10981:11004	5000548	1	True				
ANR	5000647	CallExpression	r_asm_code_free ( acode )		5000548	0					
ANR	5000648	Callee	r_asm_code_free		5000548	0					
ANR	5000649	Identifier	r_asm_code_free		5000548	0					
ANR	5000650	ArgumentList	acode		5000548	1					
ANR	5000651	Argument	acode		5000548	0					
ANR	5000652	Identifier	acode		5000548	0					
ANR	5000653	ReturnStatement	return 0 ;	428:4:11010:11018	5000548	2	True				
ANR	5000654	PrimaryExpression	0		5000548	0					
ANR	5000655	ElseStatement	else		5000548	0					
ANR	5000656	CompoundStatement		17:3:370:388	5000548	0					
ANR	5000657	IdentifierDeclStatement	int b = acode -> len ;	431:3:11039:11057	5000548	0	True				
ANR	5000658	IdentifierDecl	b = acode -> len		5000548	0					
ANR	5000659	IdentifierDeclType	int		5000548	0					
ANR	5000660	Identifier	b		5000548	1					
ANR	5000661	AssignmentExpression	b = acode -> len		5000548	2		=			
ANR	5000662	Identifier	b		5000548	0					
ANR	5000663	PtrMemberAccess	acode -> len		5000548	1					
ANR	5000664	Identifier	acode		5000548	0					
ANR	5000665	Identifier	len		5000548	1					
ANR	5000666	IfStatement	if ( bits == 1 )		5000548	1					
ANR	5000667	Condition	bits == 1	432:7:11066:11074	5000548	0	True				
ANR	5000668	EqualityExpression	bits == 1		5000548	0		==			
ANR	5000669	Identifier	bits		5000548	0					
ANR	5000670	PrimaryExpression	1		5000548	1					
ANR	5000671	CompoundStatement		19:4:414:437	5000548	1					
ANR	5000672	IdentifierDeclStatement	int bytes = ( b / 8 ) + 1 ;	433:4:11083:11106	5000548	0	True				
ANR	5000673	IdentifierDecl	bytes = ( b / 8 ) + 1		5000548	0					
ANR	5000674	IdentifierDeclType	int		5000548	0					
ANR	5000675	Identifier	bytes		5000548	1					
ANR	5000676	AssignmentExpression	bytes = ( b / 8 ) + 1		5000548	2		=			
ANR	5000677	Identifier	bytes		5000548	0					
ANR	5000678	AdditiveExpression	( b / 8 ) + 1		5000548	1		+			
ANR	5000679	MultiplicativeExpression	b / 8		5000548	0		/			
ANR	5000680	Identifier	b		5000548	0					
ANR	5000681	PrimaryExpression	8		5000548	1					
ANR	5000682	PrimaryExpression	1		5000548	1					
ANR	5000683	ForStatement	for ( i = 0 ; i < bytes ; i ++ )		5000548	1					
ANR	5000684	ForInit	i = 0 ;	434:9:11117:11122	5000548	0	True				
ANR	5000685	AssignmentExpression	i = 0		5000548	0		=			
ANR	5000686	Identifier	i		5000548	0					
ANR	5000687	PrimaryExpression	0		5000548	1					
ANR	5000688	Condition	i < bytes	434:16:11124:11132	5000548	1	True				
ANR	5000689	RelationalExpression	i < bytes		5000548	0		<			
ANR	5000690	Identifier	i		5000548	0					
ANR	5000691	Identifier	bytes		5000548	1					
ANR	5000692	PostIncDecOperationExpression	i ++	434:27:11135:11137	5000548	2	True				
ANR	5000693	Identifier	i		5000548	0					
ANR	5000694	IncDec	++		5000548	1					
ANR	5000695	CompoundStatement		20:32:471:471	5000548	3					
ANR	5000696	ForStatement	for ( j = 0 ; j < 8 && b -- ; j ++ )		5000548	0					
ANR	5000697	ForInit	j = 0 ;	435:10:11152:11157	5000548	0	True				
ANR	5000698	AssignmentExpression	j = 0		5000548	0		=			
ANR	5000699	Identifier	j		5000548	0					
ANR	5000700	PrimaryExpression	0		5000548	1					
ANR	5000701	Condition	j < 8 && b --	435:17:11159:11170	5000548	1	True				
ANR	5000702	AndExpression	j < 8 && b --		5000548	0		&&			
ANR	5000703	RelationalExpression	j < 8		5000548	0		<			
ANR	5000704	Identifier	j		5000548	0					
ANR	5000705	PrimaryExpression	8		5000548	1					
ANR	5000706	PostIncDecOperationExpression	b --		5000548	1					
ANR	5000707	Identifier	b		5000548	0					
ANR	5000708	IncDec	--		5000548	1					
ANR	5000709	PostIncDecOperationExpression	j ++	435:31:11173:11175	5000548	2	True				
ANR	5000710	Identifier	j		5000548	0					
ANR	5000711	IncDec	++		5000548	1					
ANR	5000712	CompoundStatement		21:36:509:509	5000548	3					
ANR	5000713	ExpressionStatement	"printf ( ""%c"" , ( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0' )"	436:6:11186:11239	5000548	0	True				
ANR	5000714	CallExpression	"printf ( ""%c"" , ( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0' )"		5000548	0					
ANR	5000715	Callee	printf		5000548	0					
ANR	5000716	Identifier	printf		5000548	0					
ANR	5000717	ArgumentList	"""%c"""		5000548	1					
ANR	5000718	Argument	"""%c"""		5000548	0					
ANR	5000719	PrimaryExpression	"""%c"""		5000548	0					
ANR	5000720	Argument	( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0'		5000548	1					
ANR	5000721	ConditionalExpression	( acode -> bytes [ i ] & ( 1 << j ) ) ? '1' : '0'		5000548	0					
ANR	5000722	Condition	acode -> bytes [ i ] & ( 1 << j )		5000548	0					
ANR	5000723	BitAndExpression	acode -> bytes [ i ] & ( 1 << j )		5000548	0		&			
ANR	5000724	ArrayIndexing	acode -> bytes [ i ]		5000548	0					
ANR	5000725	PtrMemberAccess	acode -> bytes		5000548	0					
ANR	5000726	Identifier	acode		5000548	0					
ANR	5000727	Identifier	bytes		5000548	1					
ANR	5000728	Identifier	i		5000548	1					
ANR	5000729	ShiftExpression	1 << j		5000548	1		<<			
ANR	5000730	PrimaryExpression	1		5000548	0					
ANR	5000731	Identifier	j		5000548	1					
ANR	5000732	PrimaryExpression	'1'		5000548	1					
ANR	5000733	PrimaryExpression	'0'		5000548	2					
ANR	5000734	ExpressionStatement	"printf ( ""\\n"" )"	439:4:11258:11271	5000548	2	True				
ANR	5000735	CallExpression	"printf ( ""\\n"" )"		5000548	0					
ANR	5000736	Callee	printf		5000548	0					
ANR	5000737	Identifier	printf		5000548	0					
ANR	5000738	ArgumentList	"""\\n"""		5000548	1					
ANR	5000739	Argument	"""\\n"""		5000548	0					
ANR	5000740	PrimaryExpression	"""\\n"""		5000548	0					
ANR	5000741	ElseStatement	else		5000548	0					
ANR	5000742	CompoundStatement		26:10:614:614	5000548	0					
ANR	5000743	IfStatement	if ( hexwords )		5000548	0					
ANR	5000744	Condition	hexwords	441:8:11293:11300	5000548	0	True				
ANR	5000745	Identifier	hexwords		5000548	0					
ANR	5000746	CompoundStatement		28:5:641:653	5000548	1					
ANR	5000747	IdentifierDeclStatement	size_t i = 0 ;	442:5:11310:11322	5000548	0	True				
ANR	5000748	IdentifierDecl	i = 0		5000548	0					
ANR	5000749	IdentifierDeclType	size_t		5000548	0					
ANR	5000750	Identifier	i		5000548	1					
ANR	5000751	AssignmentExpression	i = 0		5000548	2		=			
ANR	5000752	Identifier	i		5000548	0					
ANR	5000753	PrimaryExpression	0		5000548	1					
ANR	5000754	ForStatement	for ( i = 0 ; i < acode -> len ; i += sizeof ( ut32 ) )		5000548	1					
ANR	5000755	ForInit	i = 0 ;	443:10:11334:11339	5000548	0	True				
ANR	5000756	AssignmentExpression	i = 0		5000548	0		=			
ANR	5000757	Identifier	i		5000548	0					
ANR	5000758	PrimaryExpression	0		5000548	1					
ANR	5000759	Condition	i < acode -> len	443:17:11341:11354	5000548	1	True				
ANR	5000760	RelationalExpression	i < acode -> len		5000548	0		<			
ANR	5000761	Identifier	i		5000548	0					
ANR	5000762	PtrMemberAccess	acode -> len		5000548	1					
ANR	5000763	Identifier	acode		5000548	0					
ANR	5000764	Identifier	len		5000548	1					
ANR	5000765	AssignmentExpression	i += sizeof ( ut32 )	443:33:11357:11374	5000548	2	True	+=			
ANR	5000766	Identifier	i		5000548	0					
ANR	5000767	SizeofExpression	sizeof ( ut32 )		5000548	1					
ANR	5000768	Sizeof	sizeof		5000548	0					
ANR	5000769	SizeofOperand	ut32		5000548	1					
ANR	5000770	CompoundStatement		30:6:716:774	5000548	3					
ANR	5000771	IdentifierDeclStatement	"ut32 dword = r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN ) ;"	444:6:11385:11443	5000548	0	True				
ANR	5000772	IdentifierDecl	"dword = r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN )"		5000548	0					
ANR	5000773	IdentifierDeclType	ut32		5000548	0					
ANR	5000774	Identifier	dword		5000548	1					
ANR	5000775	AssignmentExpression	"dword = r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN )"		5000548	2		=			
ANR	5000776	Identifier	dword		5000548	0					
ANR	5000777	CallExpression	"r_read_ble32 ( acode -> bytes + i , R_SYS_ENDIAN )"		5000548	1					
ANR	5000778	Callee	r_read_ble32		5000548	0					
ANR	5000779	Identifier	r_read_ble32		5000548	0					
ANR	5000780	ArgumentList	acode -> bytes + i		5000548	1					
ANR	5000781	Argument	acode -> bytes + i		5000548	0					
ANR	5000782	AdditiveExpression	acode -> bytes + i		5000548	0		+			
ANR	5000783	PtrMemberAccess	acode -> bytes		5000548	0					
ANR	5000784	Identifier	acode		5000548	0					
ANR	5000785	Identifier	bytes		5000548	1					
ANR	5000786	Identifier	i		5000548	1					
ANR	5000787	Argument	R_SYS_ENDIAN		5000548	1					
ANR	5000788	Identifier	R_SYS_ENDIAN		5000548	0					
ANR	5000789	ExpressionStatement	"printf ( ""0x%08x "" , dword )"	445:6:11451:11476	5000548	1	True				
ANR	5000790	CallExpression	"printf ( ""0x%08x "" , dword )"		5000548	0					
ANR	5000791	Callee	printf		5000548	0					
ANR	5000792	Identifier	printf		5000548	0					
ANR	5000793	ArgumentList	"""0x%08x """		5000548	1					
ANR	5000794	Argument	"""0x%08x """		5000548	0					
ANR	5000795	PrimaryExpression	"""0x%08x """		5000548	0					
ANR	5000796	Argument	dword		5000548	1					
ANR	5000797	Identifier	dword		5000548	0					
ANR	5000798	IfStatement	if ( ( i / 4 ) == 7 )		5000548	2					
ANR	5000799	Condition	( i / 4 ) == 7	446:10:11488:11497	5000548	0	True				
ANR	5000800	EqualityExpression	( i / 4 ) == 7		5000548	0		==			
ANR	5000801	MultiplicativeExpression	i / 4		5000548	0		/			
ANR	5000802	Identifier	i		5000548	0					
ANR	5000803	PrimaryExpression	4		5000548	1					
ANR	5000804	PrimaryExpression	7		5000548	1					
ANR	5000805	CompoundStatement		32:22:831:831	5000548	1					
ANR	5000806	ExpressionStatement	"printf ( ""\\n"" )"	447:7:11509:11522	5000548	0	True				
ANR	5000807	CallExpression	"printf ( ""\\n"" )"		5000548	0					
ANR	5000808	Callee	printf		5000548	0					
ANR	5000809	Identifier	printf		5000548	0					
ANR	5000810	ArgumentList	"""\\n"""		5000548	1					
ANR	5000811	Argument	"""\\n"""		5000548	0					
ANR	5000812	PrimaryExpression	"""\\n"""		5000548	0					
ANR	5000813	ExpressionStatement	"printf ( ""\\n"" )"	450:5:11544:11557	5000548	2	True				
ANR	5000814	CallExpression	"printf ( ""\\n"" )"		5000548	0					
ANR	5000815	Callee	printf		5000548	0					
ANR	5000816	Identifier	printf		5000548	0					
ANR	5000817	ArgumentList	"""\\n"""		5000548	1					
ANR	5000818	Argument	"""\\n"""		5000548	0					
ANR	5000819	PrimaryExpression	"""\\n"""		5000548	0					
ANR	5000820	ElseStatement	else		5000548	0					
ANR	5000821	CompoundStatement		38:5:908:946	5000548	0					
ANR	5000822	IdentifierDeclStatement	char * str = r_asm_code_get_hex ( acode ) ;	452:5:11577:11615	5000548	0	True				
ANR	5000823	IdentifierDecl	* str = r_asm_code_get_hex ( acode )		5000548	0					
ANR	5000824	IdentifierDeclType	char *		5000548	0					
ANR	5000825	Identifier	str		5000548	1					
ANR	5000826	AssignmentExpression	* str = r_asm_code_get_hex ( acode )		5000548	2		=			
ANR	5000827	Identifier	str		5000548	0					
ANR	5000828	CallExpression	r_asm_code_get_hex ( acode )		5000548	1					
ANR	5000829	Callee	r_asm_code_get_hex		5000548	0					
ANR	5000830	Identifier	r_asm_code_get_hex		5000548	0					
ANR	5000831	ArgumentList	acode		5000548	1					
ANR	5000832	Argument	acode		5000548	0					
ANR	5000833	Identifier	acode		5000548	0					
ANR	5000834	IfStatement	if ( str )		5000548	1					
ANR	5000835	Condition	str	453:9:11626:11628	5000548	0	True				
ANR	5000836	Identifier	str		5000548	0					
ANR	5000837	CompoundStatement		39:14:962:962	5000548	1					
ANR	5000838	ExpressionStatement	"print_buf ( as , str )"	454:6:11639:11658	5000548	0	True				
ANR	5000839	CallExpression	"print_buf ( as , str )"		5000548	0					
ANR	5000840	Callee	print_buf		5000548	0					
ANR	5000841	Identifier	print_buf		5000548	0					
ANR	5000842	ArgumentList	as		5000548	1					
ANR	5000843	Argument	as		5000548	0					
ANR	5000844	Identifier	as		5000548	0					
ANR	5000845	Argument	str		5000548	1					
ANR	5000846	Identifier	str		5000548	0					
ANR	5000847	ExpressionStatement	free ( str )	455:6:11666:11676	5000548	1	True				
ANR	5000848	CallExpression	free ( str )		5000548	0					
ANR	5000849	Callee	free		5000548	0					
ANR	5000850	Identifier	free		5000548	0					
ANR	5000851	ArgumentList	str		5000548	1					
ANR	5000852	Argument	str		5000548	0					
ANR	5000853	Identifier	str		5000548	0					
ANR	5000854	ExpressionStatement	r_asm_code_free ( acode )	461:1:11704:11727	5000548	5	True				
ANR	5000855	CallExpression	r_asm_code_free ( acode )		5000548	0					
ANR	5000856	Callee	r_asm_code_free		5000548	0					
ANR	5000857	Identifier	r_asm_code_free		5000548	0					
ANR	5000858	ArgumentList	acode		5000548	1					
ANR	5000859	Argument	acode		5000548	0					
ANR	5000860	Identifier	acode		5000548	0					
ANR	5000861	ReturnStatement	return ( ret > 0 ) ;	462:1:11730:11746	5000548	6	True				
ANR	5000862	RelationalExpression	ret > 0		5000548	0		>			
ANR	5000863	Identifier	ret		5000548	0					
ANR	5000864	PrimaryExpression	0		5000548	1					
ANR	5000865	ReturnType	static int		5000548	1					
ANR	5000866	Identifier	rasm_asm		5000548	2					
ANR	5000867	ParameterList	"RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool hexwords"		5000548	3					
ANR	5000868	Parameter	RAsmState * as	415:20:10565:10577	5000548	0	True				
ANR	5000869	ParameterType	RAsmState *		5000548	0					
ANR	5000870	Identifier	as		5000548	1					
ANR	5000871	Parameter	const char * buf	415:35:10580:10594	5000548	1	True				
ANR	5000872	ParameterType	const char *		5000548	0					
ANR	5000873	Identifier	buf		5000548	1					
ANR	5000874	Parameter	ut64 offset	415:52:10597:10607	5000548	2	True				
ANR	5000875	ParameterType	ut64		5000548	0					
ANR	5000876	Identifier	offset		5000548	1					
ANR	5000877	Parameter	ut64 len	415:65:10610:10617	5000548	3	True				
ANR	5000878	ParameterType	ut64		5000548	0					
ANR	5000879	Identifier	len		5000548	1					
ANR	5000880	Parameter	int bits	415:75:10620:10627	5000548	4	True				
ANR	5000881	ParameterType	int		5000548	0					
ANR	5000882	Identifier	bits		5000548	1					
ANR	5000883	Parameter	int bin	415:85:10630:10636	5000548	5	True				
ANR	5000884	ParameterType	int		5000548	0					
ANR	5000885	Identifier	bin		5000548	1					
ANR	5000886	Parameter	bool use_spp	415:94:10639:10650	5000548	6	True				
ANR	5000887	ParameterType	bool		5000548	0					
ANR	5000888	Identifier	use_spp		5000548	1					
ANR	5000889	Parameter	bool hexwords	415:108:10653:10665	5000548	7	True				
ANR	5000890	ParameterType	bool		5000548	0					
ANR	5000891	Identifier	hexwords		5000548	1					
ANR	5000892	CFGEntryNode	ENTRY		5000548		True				
ANR	5000893	CFGExitNode	EXIT		5000548		True				
ANR	5000894	Symbol	* acode -> bytes		5000548						
ANR	5000895	Symbol	R_SYS_ENDIAN		5000548						
ANR	5000896	Symbol	bin		5000548						
ANR	5000897	Symbol	use_spp		5000548						
ANR	5000898	Symbol	acode		5000548						
ANR	5000899	Symbol	acode -> len		5000548						
ANR	5000900	Symbol	len		5000548						
ANR	5000901	Symbol	dword		5000548						
ANR	5000902	Symbol	r_asm_rasm_assemble		5000548						
ANR	5000903	Symbol	r_asm_code_get_hex		5000548						
ANR	5000904	Symbol	write		5000548						
ANR	5000905	Symbol	r_read_ble32		5000548						
ANR	5000906	Symbol	ret		5000548						
ANR	5000907	Symbol	b		5000548						
ANR	5000908	Symbol	offset		5000548						
ANR	5000909	Symbol	* * acode		5000548						
ANR	5000910	Symbol	acode -> bytes		5000548						
ANR	5000911	Symbol	bits		5000548						
ANR	5000912	Symbol	i		5000548						
ANR	5000913	Symbol	j		5000548						
ANR	5000914	Symbol	str		5000548						
ANR	5000915	Symbol	as		5000548						
ANR	5000916	Symbol	buf		5000548						
ANR	5000917	Symbol	as -> a		5000548						
ANR	5000918	Symbol	* i		5000548						
ANR	5000919	Symbol	bytes		5000548						
ANR	5000920	Symbol	hexwords		5000548						
ANR	5000921	Symbol	* as		5000548						
ANR	5000922	Symbol	* acode		5000548						
ANR	5000923	Function	__lib_asm_cb	466:0:11770:11952							
ANR	5000924	FunctionDef	"__lib_asm_cb (RLibPlugin * pl , void * user , void * data)"		5000923	0					
ANR	5000925	CompoundStatement		466:64:11834:11952	5000923	0					
ANR	5000926	IdentifierDeclStatement	RAsmPlugin * hand = ( RAsmPlugin * ) data ;	467:1:11837:11874	5000923	0	True				
ANR	5000927	IdentifierDecl	* hand = ( RAsmPlugin * ) data		5000923	0					
ANR	5000928	IdentifierDeclType	RAsmPlugin *		5000923	0					
ANR	5000929	Identifier	hand		5000923	1					
ANR	5000930	AssignmentExpression	* hand = ( RAsmPlugin * ) data		5000923	2		=			
ANR	5000931	Identifier	hand		5000923	0					
ANR	5000932	CastExpression	( RAsmPlugin * ) data		5000923	1					
ANR	5000933	CastTarget	RAsmPlugin *		5000923	0					
ANR	5000934	Identifier	data		5000923	1					
ANR	5000935	IdentifierDeclStatement	RAsmState * as = ( RAsmState * ) user ;	468:1:11877:11910	5000923	1	True				
ANR	5000936	IdentifierDecl	* as = ( RAsmState * ) user		5000923	0					
ANR	5000937	IdentifierDeclType	RAsmState *		5000923	0					
ANR	5000938	Identifier	as		5000923	1					
ANR	5000939	AssignmentExpression	* as = ( RAsmState * ) user		5000923	2		=			
ANR	5000940	Identifier	as		5000923	0					
ANR	5000941	CastExpression	( RAsmState * ) user		5000923	1					
ANR	5000942	CastTarget	RAsmState *		5000923	0					
ANR	5000943	Identifier	user		5000923	1					
ANR	5000944	ExpressionStatement	"r_asm_add ( as -> a , hand )"	469:1:11913:11936	5000923	2	True				
ANR	5000945	CallExpression	"r_asm_add ( as -> a , hand )"		5000923	0					
ANR	5000946	Callee	r_asm_add		5000923	0					
ANR	5000947	Identifier	r_asm_add		5000923	0					
ANR	5000948	ArgumentList	as -> a		5000923	1					
ANR	5000949	Argument	as -> a		5000923	0					
ANR	5000950	PtrMemberAccess	as -> a		5000923	0					
ANR	5000951	Identifier	as		5000923	0					
ANR	5000952	Identifier	a		5000923	1					
ANR	5000953	Argument	hand		5000923	1					
ANR	5000954	Identifier	hand		5000923	0					
ANR	5000955	ReturnStatement	return true ;	470:1:11939:11950	5000923	3	True				
ANR	5000956	Identifier	true		5000923	0					
ANR	5000957	ReturnType	static int		5000923	1					
ANR	5000958	Identifier	__lib_asm_cb		5000923	2					
ANR	5000959	ParameterList	"RLibPlugin * pl , void * user , void * data"		5000923	3					
ANR	5000960	Parameter	RLibPlugin * pl	466:24:11794:11807	5000923	0	True				
ANR	5000961	ParameterType	RLibPlugin *		5000923	0					
ANR	5000962	Identifier	pl		5000923	1					
ANR	5000963	Parameter	void * user	466:40:11810:11819	5000923	1	True				
ANR	5000964	ParameterType	void *		5000923	0					
ANR	5000965	Identifier	user		5000923	1					
ANR	5000966	Parameter	void * data	466:52:11822:11831	5000923	2	True				
ANR	5000967	ParameterType	void *		5000923	0					
ANR	5000968	Identifier	data		5000923	1					
ANR	5000969	CFGEntryNode	ENTRY		5000923		True				
ANR	5000970	CFGExitNode	EXIT		5000923		True				
ANR	5000971	Symbol	as		5000923						
ANR	5000972	Symbol	as -> a		5000923						
ANR	5000973	Symbol	data		5000923						
ANR	5000974	Symbol	true		5000923						
ANR	5000975	Symbol	* as		5000923						
ANR	5000976	Symbol	pl		5000923						
ANR	5000977	Symbol	user		5000923						
ANR	5000978	Symbol	hand		5000923						
ANR	5000979	Function	__lib_anal_cb	474:0:11975:12164							
ANR	5000980	FunctionDef	"__lib_anal_cb (RLibPlugin * pl , void * user , void * data)"		5000979	0					
ANR	5000981	CompoundStatement		474:65:12040:12164	5000979	0					
ANR	5000982	IdentifierDeclStatement	RAnalPlugin * hand = ( RAnalPlugin * ) data ;	475:1:12043:12082	5000979	0	True				
ANR	5000983	IdentifierDecl	* hand = ( RAnalPlugin * ) data		5000979	0					
ANR	5000984	IdentifierDeclType	RAnalPlugin *		5000979	0					
ANR	5000985	Identifier	hand		5000979	1					
ANR	5000986	AssignmentExpression	* hand = ( RAnalPlugin * ) data		5000979	2		=			
ANR	5000987	Identifier	hand		5000979	0					
ANR	5000988	CastExpression	( RAnalPlugin * ) data		5000979	1					
ANR	5000989	CastTarget	RAnalPlugin *		5000979	0					
ANR	5000990	Identifier	data		5000979	1					
ANR	5000991	IdentifierDeclStatement	RAsmState * as = ( RAsmState * ) user ;	476:1:12085:12118	5000979	1	True				
ANR	5000992	IdentifierDecl	* as = ( RAsmState * ) user		5000979	0					
ANR	5000993	IdentifierDeclType	RAsmState *		5000979	0					
ANR	5000994	Identifier	as		5000979	1					
ANR	5000995	AssignmentExpression	* as = ( RAsmState * ) user		5000979	2		=			
ANR	5000996	Identifier	as		5000979	0					
ANR	5000997	CastExpression	( RAsmState * ) user		5000979	1					
ANR	5000998	CastTarget	RAsmState *		5000979	0					
ANR	5000999	Identifier	user		5000979	1					
ANR	5001000	ExpressionStatement	"r_anal_add ( as -> anal , hand )"	477:1:12121:12148	5000979	2	True				
ANR	5001001	CallExpression	"r_anal_add ( as -> anal , hand )"		5000979	0					
ANR	5001002	Callee	r_anal_add		5000979	0					
ANR	5001003	Identifier	r_anal_add		5000979	0					
ANR	5001004	ArgumentList	as -> anal		5000979	1					
ANR	5001005	Argument	as -> anal		5000979	0					
ANR	5001006	PtrMemberAccess	as -> anal		5000979	0					
ANR	5001007	Identifier	as		5000979	0					
ANR	5001008	Identifier	anal		5000979	1					
ANR	5001009	Argument	hand		5000979	1					
ANR	5001010	Identifier	hand		5000979	0					
ANR	5001011	ReturnStatement	return true ;	478:1:12151:12162	5000979	3	True				
ANR	5001012	Identifier	true		5000979	0					
ANR	5001013	ReturnType	static int		5000979	1					
ANR	5001014	Identifier	__lib_anal_cb		5000979	2					
ANR	5001015	ParameterList	"RLibPlugin * pl , void * user , void * data"		5000979	3					
ANR	5001016	Parameter	RLibPlugin * pl	474:25:12000:12013	5000979	0	True				
ANR	5001017	ParameterType	RLibPlugin *		5000979	0					
ANR	5001018	Identifier	pl		5000979	1					
ANR	5001019	Parameter	void * user	474:41:12016:12025	5000979	1	True				
ANR	5001020	ParameterType	void *		5000979	0					
ANR	5001021	Identifier	user		5000979	1					
ANR	5001022	Parameter	void * data	474:53:12028:12037	5000979	2	True				
ANR	5001023	ParameterType	void *		5000979	0					
ANR	5001024	Identifier	data		5000979	1					
ANR	5001025	CFGEntryNode	ENTRY		5000979		True				
ANR	5001026	CFGExitNode	EXIT		5000979		True				
ANR	5001027	Symbol	as		5000979						
ANR	5001028	Symbol	data		5000979						
ANR	5001029	Symbol	as -> anal		5000979						
ANR	5001030	Symbol	true		5000979						
ANR	5001031	Symbol	* as		5000979						
ANR	5001032	Symbol	pl		5000979						
ANR	5001033	Symbol	user		5000979						
ANR	5001034	Symbol	hand		5000979						
ANR	5001035	Function	print_assembly_output	481:0:12167:12788							
ANR	5001036	FunctionDef	"print_assembly_output (RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool rad , bool hexwords , char * arch)"		5001035	0					
ANR	5001037	CompoundStatement		482:93:12358:12788	5001035	0					
ANR	5001038	IdentifierDeclStatement	int ret = 0 ;	483:1:12361:12372	5001035	0	True				
ANR	5001039	IdentifierDecl	ret = 0		5001035	0					
ANR	5001040	IdentifierDeclType	int		5001035	0					
ANR	5001041	Identifier	ret		5001035	1					
ANR	5001042	AssignmentExpression	ret = 0		5001035	2		=			
ANR	5001043	Identifier	ret		5001035	0					
ANR	5001044	PrimaryExpression	0		5001035	1					
ANR	5001045	IfStatement	if ( rad )		5001035	1					
ANR	5001046	Condition	rad	484:5:12379:12381	5001035	0	True				
ANR	5001047	Identifier	rad		5001035	0					
ANR	5001048	CompoundStatement		3:10:25:25	5001035	1					
ANR	5001049	ExpressionStatement	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"	485:2:12388:12438	5001035	0	True				
ANR	5001050	CallExpression	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"		5001035	0					
ANR	5001051	Callee	printf		5001035	0					
ANR	5001052	Identifier	printf		5001035	0					
ANR	5001053	ArgumentList	"""e asm.arch=%s\\n"""		5001035	1					
ANR	5001054	Argument	"""e asm.arch=%s\\n"""		5001035	0					
ANR	5001055	PrimaryExpression	"""e asm.arch=%s\\n"""		5001035	0					
ANR	5001056	Argument	arch ? arch : R_SYS_ARCH		5001035	1					
ANR	5001057	ConditionalExpression	arch ? arch : R_SYS_ARCH		5001035	0					
ANR	5001058	Condition	arch		5001035	0					
ANR	5001059	Identifier	arch		5001035	0					
ANR	5001060	Identifier	arch		5001035	1					
ANR	5001061	Identifier	R_SYS_ARCH		5001035	2					
ANR	5001062	ExpressionStatement	"printf ( ""e asm.bits=%d\\n"" , bits )"	486:2:12442:12474	5001035	1	True				
ANR	5001063	CallExpression	"printf ( ""e asm.bits=%d\\n"" , bits )"		5001035	0					
ANR	5001064	Callee	printf		5001035	0					
ANR	5001065	Identifier	printf		5001035	0					
ANR	5001066	ArgumentList	"""e asm.bits=%d\\n"""		5001035	1					
ANR	5001067	Argument	"""e asm.bits=%d\\n"""		5001035	0					
ANR	5001068	PrimaryExpression	"""e asm.bits=%d\\n"""		5001035	0					
ANR	5001069	Argument	bits		5001035	1					
ANR	5001070	Identifier	bits		5001035	0					
ANR	5001071	IfStatement	if ( offset )		5001035	2					
ANR	5001072	Condition	offset	487:6:12482:12487	5001035	0	True				
ANR	5001073	Identifier	offset		5001035	0					
ANR	5001074	CompoundStatement		6:14:131:131	5001035	1					
ANR	5001075	Statement	printf	488:3:12495:12500	5001035	0	True				
ANR	5001076	Statement	(	488:10:12502:12502	5001035	1	True				
ANR	5001077	Statement	"""s 0x%"""	488:11:12503:12509	5001035	2	True				
ANR	5001078	Statement	PFMT64x	488:18:12510:12516	5001035	3	True				
ANR	5001079	Statement	"""\\n"""	488:25:12517:12520	5001035	4	True				
ANR	5001080	Statement	","	488:29:12521:12521	5001035	5	True				
ANR	5001081	Statement	offset	488:31:12523:12528	5001035	6	True				
ANR	5001082	Statement	)	488:37:12529:12529	5001035	7	True				
ANR	5001083	ExpressionStatement		488:38:12530:12530	5001035	8	True				
ANR	5001084	ExpressionStatement	"printf ( ""wx "" )"	490:2:12538:12552	5001035	3	True				
ANR	5001085	CallExpression	"printf ( ""wx "" )"		5001035	0					
ANR	5001086	Callee	printf		5001035	0					
ANR	5001087	Identifier	printf		5001035	0					
ANR	5001088	ArgumentList	"""wx """		5001035	1					
ANR	5001089	Argument	"""wx """		5001035	0					
ANR	5001090	PrimaryExpression	"""wx """		5001035	0					
ANR	5001091	ExpressionStatement	"ret = rasm_asm ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , hexwords )"	492:1:12558:12640	5001035	2	True				
ANR	5001092	AssignmentExpression	"ret = rasm_asm ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , hexwords )"		5001035	0		=			
ANR	5001093	Identifier	ret		5001035	0					
ANR	5001094	CallExpression	"rasm_asm ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , hexwords )"		5001035	1					
ANR	5001095	Callee	rasm_asm		5001035	0					
ANR	5001096	Identifier	rasm_asm		5001035	0					
ANR	5001097	ArgumentList	as		5001035	1					
ANR	5001098	Argument	as		5001035	0					
ANR	5001099	Identifier	as		5001035	0					
ANR	5001100	Argument	( char * ) buf		5001035	1					
ANR	5001101	CastExpression	( char * ) buf		5001035	0					
ANR	5001102	CastTarget	char *		5001035	0					
ANR	5001103	Identifier	buf		5001035	1					
ANR	5001104	Argument	offset		5001035	2					
ANR	5001105	Identifier	offset		5001035	0					
ANR	5001106	Argument	len		5001035	3					
ANR	5001107	Identifier	len		5001035	0					
ANR	5001108	Argument	as -> a -> bits		5001035	4					
ANR	5001109	PtrMemberAccess	as -> a -> bits		5001035	0					
ANR	5001110	PtrMemberAccess	as -> a		5001035	0					
ANR	5001111	Identifier	as		5001035	0					
ANR	5001112	Identifier	a		5001035	1					
ANR	5001113	Identifier	bits		5001035	1					
ANR	5001114	Argument	bin		5001035	5					
ANR	5001115	Identifier	bin		5001035	0					
ANR	5001116	Argument	use_spp		5001035	6					
ANR	5001117	Identifier	use_spp		5001035	0					
ANR	5001118	Argument	hexwords		5001035	7					
ANR	5001119	Identifier	hexwords		5001035	0					
ANR	5001120	IfStatement	if ( rad )		5001035	3					
ANR	5001121	Condition	rad	493:5:12647:12649	5001035	0	True				
ANR	5001122	Identifier	rad		5001035	0					
ANR	5001123	CompoundStatement		12:10:293:293	5001035	1					
ANR	5001124	ExpressionStatement	"printf ( ""f entry = $$\\n"" )"	494:2:12656:12681	5001035	0	True				
ANR	5001125	CallExpression	"printf ( ""f entry = $$\\n"" )"		5001035	0					
ANR	5001126	Callee	printf		5001035	0					
ANR	5001127	Identifier	printf		5001035	0					
ANR	5001128	ArgumentList	"""f entry = $$\\n"""		5001035	1					
ANR	5001129	Argument	"""f entry = $$\\n"""		5001035	0					
ANR	5001130	PrimaryExpression	"""f entry = $$\\n"""		5001035	0					
ANR	5001131	ExpressionStatement	"printf ( ""f label.main = $$ + 1\\n"" )"	495:2:12685:12719	5001035	1	True				
ANR	5001132	CallExpression	"printf ( ""f label.main = $$ + 1\\n"" )"		5001035	0					
ANR	5001133	Callee	printf		5001035	0					
ANR	5001134	Identifier	printf		5001035	0					
ANR	5001135	ArgumentList	"""f label.main = $$ + 1\\n"""		5001035	1					
ANR	5001136	Argument	"""f label.main = $$ + 1\\n"""		5001035	0					
ANR	5001137	PrimaryExpression	"""f label.main = $$ + 1\\n"""		5001035	0					
ANR	5001138	ExpressionStatement	"ht_pp_foreach ( as -> a -> flags , print_label , NULL )"	496:2:12723:12770	5001035	2	True				
ANR	5001139	CallExpression	"ht_pp_foreach ( as -> a -> flags , print_label , NULL )"		5001035	0					
ANR	5001140	Callee	ht_pp_foreach		5001035	0					
ANR	5001141	Identifier	ht_pp_foreach		5001035	0					
ANR	5001142	ArgumentList	as -> a -> flags		5001035	1					
ANR	5001143	Argument	as -> a -> flags		5001035	0					
ANR	5001144	PtrMemberAccess	as -> a -> flags		5001035	0					
ANR	5001145	PtrMemberAccess	as -> a		5001035	0					
ANR	5001146	Identifier	as		5001035	0					
ANR	5001147	Identifier	a		5001035	1					
ANR	5001148	Identifier	flags		5001035	1					
ANR	5001149	Argument	print_label		5001035	1					
ANR	5001150	Identifier	print_label		5001035	0					
ANR	5001151	Argument	NULL		5001035	2					
ANR	5001152	Identifier	NULL		5001035	0					
ANR	5001153	ReturnStatement	return ret ;	498:1:12776:12786	5001035	4	True				
ANR	5001154	Identifier	ret		5001035	0					
ANR	5001155	ReturnType	static int		5001035	1					
ANR	5001156	Identifier	print_assembly_output		5001035	2					
ANR	5001157	ParameterList	"RAsmState * as , const char * buf , ut64 offset , ut64 len , int bits , int bin , bool use_spp , bool rad , bool hexwords , char * arch"		5001035	3					
ANR	5001158	Parameter	RAsmState * as	481:33:12200:12212	5001035	0	True				
ANR	5001159	ParameterType	RAsmState *		5001035	0					
ANR	5001160	Identifier	as		5001035	1					
ANR	5001161	Parameter	const char * buf	481:48:12215:12229	5001035	1	True				
ANR	5001162	ParameterType	const char *		5001035	0					
ANR	5001163	Identifier	buf		5001035	1					
ANR	5001164	Parameter	ut64 offset	481:65:12232:12242	5001035	2	True				
ANR	5001165	ParameterType	ut64		5001035	0					
ANR	5001166	Identifier	offset		5001035	1					
ANR	5001167	Parameter	ut64 len	481:78:12245:12252	5001035	3	True				
ANR	5001168	ParameterType	ut64		5001035	0					
ANR	5001169	Identifier	len		5001035	1					
ANR	5001170	Parameter	int bits	481:88:12255:12262	5001035	4	True				
ANR	5001171	ParameterType	int		5001035	0					
ANR	5001172	Identifier	bits		5001035	1					
ANR	5001173	Parameter	int bin	482:33:12298:12304	5001035	5	True				
ANR	5001174	ParameterType	int		5001035	0					
ANR	5001175	Identifier	bin		5001035	1					
ANR	5001176	Parameter	bool use_spp	482:42:12307:12318	5001035	6	True				
ANR	5001177	ParameterType	bool		5001035	0					
ANR	5001178	Identifier	use_spp		5001035	1					
ANR	5001179	Parameter	bool rad	482:56:12321:12328	5001035	7	True				
ANR	5001180	ParameterType	bool		5001035	0					
ANR	5001181	Identifier	rad		5001035	1					
ANR	5001182	Parameter	bool hexwords	482:66:12331:12343	5001035	8	True				
ANR	5001183	ParameterType	bool		5001035	0					
ANR	5001184	Identifier	hexwords		5001035	1					
ANR	5001185	Parameter	char * arch	482:81:12346:12355	5001035	9	True				
ANR	5001186	ParameterType	char *		5001035	0					
ANR	5001187	Identifier	arch		5001035	1					
ANR	5001188	CFGEntryNode	ENTRY		5001035		True				
ANR	5001189	CFGExitNode	EXIT		5001035		True				
ANR	5001190	Symbol	ret		5001035						
ANR	5001191	Symbol	NULL		5001035						
ANR	5001192	Symbol	offset		5001035						
ANR	5001193	Symbol	bin		5001035						
ANR	5001194	Symbol	R_SYS_ARCH		5001035						
ANR	5001195	Symbol	print_label		5001035						
ANR	5001196	Symbol	bits		5001035						
ANR	5001197	Symbol	use_spp		5001035						
ANR	5001198	Symbol	rasm_asm		5001035						
ANR	5001199	Symbol	as -> a -> bits		5001035						
ANR	5001200	Symbol	as -> a -> flags		5001035						
ANR	5001201	Symbol	as		5001035						
ANR	5001202	Symbol	buf		5001035						
ANR	5001203	Symbol	as -> a		5001035						
ANR	5001204	Symbol	len		5001035						
ANR	5001205	Symbol	rad		5001035						
ANR	5001206	Symbol	hexwords		5001035						
ANR	5001207	Symbol	arch		5001035						
ANR	5001208	Symbol	* as		5001035						
ANR	5001209	Symbol	* as -> a		5001035						
ANR	5001210	Symbol	* * as		5001035						
ANR	5001211	Function	__load_plugins	501:0:12791:13757							
ANR	5001212	FunctionDef	__load_plugins (RAsmState * as)		5001211	0					
ANR	5001213	CompoundStatement		501:42:12833:13757	5001211	0					
ANR	5001214	IdentifierDeclStatement	"char * tmp = r_sys_getenv ( ""RASM2_NOPLUGINS"" ) ;"	502:1:12836:12880	5001211	0	True				
ANR	5001215	IdentifierDecl	"* tmp = r_sys_getenv ( ""RASM2_NOPLUGINS"" )"		5001211	0					
ANR	5001216	IdentifierDeclType	char *		5001211	0					
ANR	5001217	Identifier	tmp		5001211	1					
ANR	5001218	AssignmentExpression	"* tmp = r_sys_getenv ( ""RASM2_NOPLUGINS"" )"		5001211	2		=			
ANR	5001219	Identifier	tmp		5001211	0					
ANR	5001220	CallExpression	"r_sys_getenv ( ""RASM2_NOPLUGINS"" )"		5001211	1					
ANR	5001221	Callee	r_sys_getenv		5001211	0					
ANR	5001222	Identifier	r_sys_getenv		5001211	0					
ANR	5001223	ArgumentList	"""RASM2_NOPLUGINS"""		5001211	1					
ANR	5001224	Argument	"""RASM2_NOPLUGINS"""		5001211	0					
ANR	5001225	PrimaryExpression	"""RASM2_NOPLUGINS"""		5001211	0					
ANR	5001226	IfStatement	if ( tmp )		5001211	1					
ANR	5001227	Condition	tmp	503:5:12887:12889	5001211	0	True				
ANR	5001228	Identifier	tmp		5001211	0					
ANR	5001229	CompoundStatement		3:10:58:58	5001211	1					
ANR	5001230	ExpressionStatement	free ( tmp )	504:2:12896:12906	5001211	0	True				
ANR	5001231	CallExpression	free ( tmp )		5001211	0					
ANR	5001232	Callee	free		5001211	0					
ANR	5001233	Identifier	free		5001211	0					
ANR	5001234	ArgumentList	tmp		5001211	1					
ANR	5001235	Argument	tmp		5001211	0					
ANR	5001236	Identifier	tmp		5001211	0					
ANR	5001237	ReturnStatement	return ;	505:2:12910:12916	5001211	1	True				
ANR	5001238	ExpressionStatement	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ASM , ""(dis)assembly plugins"" , & __lib_asm_cb , NULL , as )"	507:1:12922:13013	5001211	2	True				
ANR	5001239	CallExpression	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ASM , ""(dis)assembly plugins"" , & __lib_asm_cb , NULL , as )"		5001211	0					
ANR	5001240	Callee	r_lib_add_handler		5001211	0					
ANR	5001241	Identifier	r_lib_add_handler		5001211	0					
ANR	5001242	ArgumentList	as -> l		5001211	1					
ANR	5001243	Argument	as -> l		5001211	0					
ANR	5001244	PtrMemberAccess	as -> l		5001211	0					
ANR	5001245	Identifier	as		5001211	0					
ANR	5001246	Identifier	l		5001211	1					
ANR	5001247	Argument	R_LIB_TYPE_ASM		5001211	1					
ANR	5001248	Identifier	R_LIB_TYPE_ASM		5001211	0					
ANR	5001249	Argument	"""(dis)assembly plugins"""		5001211	2					
ANR	5001250	PrimaryExpression	"""(dis)assembly plugins"""		5001211	0					
ANR	5001251	Argument	& __lib_asm_cb		5001211	3					
ANR	5001252	UnaryOperationExpression	& __lib_asm_cb		5001211	0					
ANR	5001253	UnaryOperator	&		5001211	0					
ANR	5001254	Identifier	__lib_asm_cb		5001211	1					
ANR	5001255	Argument	NULL		5001211	4					
ANR	5001256	Identifier	NULL		5001211	0					
ANR	5001257	Argument	as		5001211	5					
ANR	5001258	Identifier	as		5001211	0					
ANR	5001259	ExpressionStatement	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ANAL , ""analysis/emulation plugins"" , & __lib_anal_cb , NULL , as )"	508:1:13016:13114	5001211	3	True				
ANR	5001260	CallExpression	"r_lib_add_handler ( as -> l , R_LIB_TYPE_ANAL , ""analysis/emulation plugins"" , & __lib_anal_cb , NULL , as )"		5001211	0					
ANR	5001261	Callee	r_lib_add_handler		5001211	0					
ANR	5001262	Identifier	r_lib_add_handler		5001211	0					
ANR	5001263	ArgumentList	as -> l		5001211	1					
ANR	5001264	Argument	as -> l		5001211	0					
ANR	5001265	PtrMemberAccess	as -> l		5001211	0					
ANR	5001266	Identifier	as		5001211	0					
ANR	5001267	Identifier	l		5001211	1					
ANR	5001268	Argument	R_LIB_TYPE_ANAL		5001211	1					
ANR	5001269	Identifier	R_LIB_TYPE_ANAL		5001211	0					
ANR	5001270	Argument	"""analysis/emulation plugins"""		5001211	2					
ANR	5001271	PrimaryExpression	"""analysis/emulation plugins"""		5001211	0					
ANR	5001272	Argument	& __lib_anal_cb		5001211	3					
ANR	5001273	UnaryOperationExpression	& __lib_anal_cb		5001211	0					
ANR	5001274	UnaryOperator	&		5001211	0					
ANR	5001275	Identifier	__lib_anal_cb		5001211	1					
ANR	5001276	Argument	NULL		5001211	4					
ANR	5001277	Identifier	NULL		5001211	0					
ANR	5001278	Argument	as		5001211	5					
ANR	5001279	Identifier	as		5001211	0					
ANR	5001280	IdentifierDeclStatement	char * path = r_sys_getenv ( R_LIB_ENV ) ;	510:1:13118:13155	5001211	4	True				
ANR	5001281	IdentifierDecl	* path = r_sys_getenv ( R_LIB_ENV )		5001211	0					
ANR	5001282	IdentifierDeclType	char *		5001211	0					
ANR	5001283	Identifier	path		5001211	1					
ANR	5001284	AssignmentExpression	* path = r_sys_getenv ( R_LIB_ENV )		5001211	2		=			
ANR	5001285	Identifier	path		5001211	0					
ANR	5001286	CallExpression	r_sys_getenv ( R_LIB_ENV )		5001211	1					
ANR	5001287	Callee	r_sys_getenv		5001211	0					
ANR	5001288	Identifier	r_sys_getenv		5001211	0					
ANR	5001289	ArgumentList	R_LIB_ENV		5001211	1					
ANR	5001290	Argument	R_LIB_ENV		5001211	0					
ANR	5001291	Identifier	R_LIB_ENV		5001211	0					
ANR	5001292	IfStatement	if ( path && * path )		5001211	5					
ANR	5001293	Condition	path && * path	511:5:13162:13174	5001211	0	True				
ANR	5001294	AndExpression	path && * path		5001211	0		&&			
ANR	5001295	Identifier	path		5001211	0					
ANR	5001296	UnaryOperationExpression	* path		5001211	1					
ANR	5001297	UnaryOperator	*		5001211	0					
ANR	5001298	Identifier	path		5001211	1					
ANR	5001299	CompoundStatement		11:20:343:343	5001211	1					
ANR	5001300	ExpressionStatement	"r_lib_opendir ( as -> l , path )"	512:2:13181:13208	5001211	0	True				
ANR	5001301	CallExpression	"r_lib_opendir ( as -> l , path )"		5001211	0					
ANR	5001302	Callee	r_lib_opendir		5001211	0					
ANR	5001303	Identifier	r_lib_opendir		5001211	0					
ANR	5001304	ArgumentList	as -> l		5001211	1					
ANR	5001305	Argument	as -> l		5001211	0					
ANR	5001306	PtrMemberAccess	as -> l		5001211	0					
ANR	5001307	Identifier	as		5001211	0					
ANR	5001308	Identifier	l		5001211	1					
ANR	5001309	Argument	path		5001211	1					
ANR	5001310	Identifier	path		5001211	0					
ANR	5001311	IdentifierDeclStatement	char * homeplugindir = r_str_home ( R2_HOME_PLUGINS ) ;	516:1:13256:13306	5001211	6	True				
ANR	5001312	IdentifierDecl	* homeplugindir = r_str_home ( R2_HOME_PLUGINS )		5001211	0					
ANR	5001313	IdentifierDeclType	char *		5001211	0					
ANR	5001314	Identifier	homeplugindir		5001211	1					
ANR	5001315	AssignmentExpression	* homeplugindir = r_str_home ( R2_HOME_PLUGINS )		5001211	2		=			
ANR	5001316	Identifier	homeplugindir		5001211	0					
ANR	5001317	CallExpression	r_str_home ( R2_HOME_PLUGINS )		5001211	1					
ANR	5001318	Callee	r_str_home		5001211	0					
ANR	5001319	Identifier	r_str_home		5001211	0					
ANR	5001320	ArgumentList	R2_HOME_PLUGINS		5001211	1					
ANR	5001321	Argument	R2_HOME_PLUGINS		5001211	0					
ANR	5001322	Identifier	R2_HOME_PLUGINS		5001211	0					
ANR	5001323	ExpressionStatement	"r_lib_opendir ( as -> l , homeplugindir )"	517:1:13309:13345	5001211	7	True				
ANR	5001324	CallExpression	"r_lib_opendir ( as -> l , homeplugindir )"		5001211	0					
ANR	5001325	Callee	r_lib_opendir		5001211	0					
ANR	5001326	Identifier	r_lib_opendir		5001211	0					
ANR	5001327	ArgumentList	as -> l		5001211	1					
ANR	5001328	Argument	as -> l		5001211	0					
ANR	5001329	PtrMemberAccess	as -> l		5001211	0					
ANR	5001330	Identifier	as		5001211	0					
ANR	5001331	Identifier	l		5001211	1					
ANR	5001332	Argument	homeplugindir		5001211	1					
ANR	5001333	Identifier	homeplugindir		5001211	0					
ANR	5001334	ExpressionStatement	free ( homeplugindir )	518:1:13348:13368	5001211	8	True				
ANR	5001335	CallExpression	free ( homeplugindir )		5001211	0					
ANR	5001336	Callee	free		5001211	0					
ANR	5001337	Identifier	free		5001211	0					
ANR	5001338	ArgumentList	homeplugindir		5001211	1					
ANR	5001339	Argument	homeplugindir		5001211	0					
ANR	5001340	Identifier	homeplugindir		5001211	0					
ANR	5001341	IdentifierDeclStatement	char * plugindir = r_str_r2_prefix ( R2_PLUGINS ) ;	521:1:13415:13461	5001211	9	True				
ANR	5001342	IdentifierDecl	* plugindir = r_str_r2_prefix ( R2_PLUGINS )		5001211	0					
ANR	5001343	IdentifierDeclType	char *		5001211	0					
ANR	5001344	Identifier	plugindir		5001211	1					
ANR	5001345	AssignmentExpression	* plugindir = r_str_r2_prefix ( R2_PLUGINS )		5001211	2		=			
ANR	5001346	Identifier	plugindir		5001211	0					
ANR	5001347	CallExpression	r_str_r2_prefix ( R2_PLUGINS )		5001211	1					
ANR	5001348	Callee	r_str_r2_prefix		5001211	0					
ANR	5001349	Identifier	r_str_r2_prefix		5001211	0					
ANR	5001350	ArgumentList	R2_PLUGINS		5001211	1					
ANR	5001351	Argument	R2_PLUGINS		5001211	0					
ANR	5001352	Identifier	R2_PLUGINS		5001211	0					
ANR	5001353	IdentifierDeclStatement	char * extrasdir = r_str_r2_prefix ( R2_EXTRAS ) ;	522:1:13464:13509	5001211	10	True				
ANR	5001354	IdentifierDecl	* extrasdir = r_str_r2_prefix ( R2_EXTRAS )		5001211	0					
ANR	5001355	IdentifierDeclType	char *		5001211	0					
ANR	5001356	Identifier	extrasdir		5001211	1					
ANR	5001357	AssignmentExpression	* extrasdir = r_str_r2_prefix ( R2_EXTRAS )		5001211	2		=			
ANR	5001358	Identifier	extrasdir		5001211	0					
ANR	5001359	CallExpression	r_str_r2_prefix ( R2_EXTRAS )		5001211	1					
ANR	5001360	Callee	r_str_r2_prefix		5001211	0					
ANR	5001361	Identifier	r_str_r2_prefix		5001211	0					
ANR	5001362	ArgumentList	R2_EXTRAS		5001211	1					
ANR	5001363	Argument	R2_EXTRAS		5001211	0					
ANR	5001364	Identifier	R2_EXTRAS		5001211	0					
ANR	5001365	IdentifierDeclStatement	char * bindingsdir = r_str_r2_prefix ( R2_BINDINGS ) ;	523:1:13512:13561	5001211	11	True				
ANR	5001366	IdentifierDecl	* bindingsdir = r_str_r2_prefix ( R2_BINDINGS )		5001211	0					
ANR	5001367	IdentifierDeclType	char *		5001211	0					
ANR	5001368	Identifier	bindingsdir		5001211	1					
ANR	5001369	AssignmentExpression	* bindingsdir = r_str_r2_prefix ( R2_BINDINGS )		5001211	2		=			
ANR	5001370	Identifier	bindingsdir		5001211	0					
ANR	5001371	CallExpression	r_str_r2_prefix ( R2_BINDINGS )		5001211	1					
ANR	5001372	Callee	r_str_r2_prefix		5001211	0					
ANR	5001373	Identifier	r_str_r2_prefix		5001211	0					
ANR	5001374	ArgumentList	R2_BINDINGS		5001211	1					
ANR	5001375	Argument	R2_BINDINGS		5001211	0					
ANR	5001376	Identifier	R2_BINDINGS		5001211	0					
ANR	5001377	ExpressionStatement	"r_lib_opendir ( as -> l , plugindir )"	524:1:13564:13596	5001211	12	True				
ANR	5001378	CallExpression	"r_lib_opendir ( as -> l , plugindir )"		5001211	0					
ANR	5001379	Callee	r_lib_opendir		5001211	0					
ANR	5001380	Identifier	r_lib_opendir		5001211	0					
ANR	5001381	ArgumentList	as -> l		5001211	1					
ANR	5001382	Argument	as -> l		5001211	0					
ANR	5001383	PtrMemberAccess	as -> l		5001211	0					
ANR	5001384	Identifier	as		5001211	0					
ANR	5001385	Identifier	l		5001211	1					
ANR	5001386	Argument	plugindir		5001211	1					
ANR	5001387	Identifier	plugindir		5001211	0					
ANR	5001388	ExpressionStatement	"r_lib_opendir ( as -> l , extrasdir )"	525:1:13599:13631	5001211	13	True				
ANR	5001389	CallExpression	"r_lib_opendir ( as -> l , extrasdir )"		5001211	0					
ANR	5001390	Callee	r_lib_opendir		5001211	0					
ANR	5001391	Identifier	r_lib_opendir		5001211	0					
ANR	5001392	ArgumentList	as -> l		5001211	1					
ANR	5001393	Argument	as -> l		5001211	0					
ANR	5001394	PtrMemberAccess	as -> l		5001211	0					
ANR	5001395	Identifier	as		5001211	0					
ANR	5001396	Identifier	l		5001211	1					
ANR	5001397	Argument	extrasdir		5001211	1					
ANR	5001398	Identifier	extrasdir		5001211	0					
ANR	5001399	ExpressionStatement	"r_lib_opendir ( as -> l , bindingsdir )"	526:1:13634:13668	5001211	14	True				
ANR	5001400	CallExpression	"r_lib_opendir ( as -> l , bindingsdir )"		5001211	0					
ANR	5001401	Callee	r_lib_opendir		5001211	0					
ANR	5001402	Identifier	r_lib_opendir		5001211	0					
ANR	5001403	ArgumentList	as -> l		5001211	1					
ANR	5001404	Argument	as -> l		5001211	0					
ANR	5001405	PtrMemberAccess	as -> l		5001211	0					
ANR	5001406	Identifier	as		5001211	0					
ANR	5001407	Identifier	l		5001211	1					
ANR	5001408	Argument	bindingsdir		5001211	1					
ANR	5001409	Identifier	bindingsdir		5001211	0					
ANR	5001410	ExpressionStatement	free ( plugindir )	527:1:13671:13687	5001211	15	True				
ANR	5001411	CallExpression	free ( plugindir )		5001211	0					
ANR	5001412	Callee	free		5001211	0					
ANR	5001413	Identifier	free		5001211	0					
ANR	5001414	ArgumentList	plugindir		5001211	1					
ANR	5001415	Argument	plugindir		5001211	0					
ANR	5001416	Identifier	plugindir		5001211	0					
ANR	5001417	ExpressionStatement	free ( extrasdir )	528:1:13690:13706	5001211	16	True				
ANR	5001418	CallExpression	free ( extrasdir )		5001211	0					
ANR	5001419	Callee	free		5001211	0					
ANR	5001420	Identifier	free		5001211	0					
ANR	5001421	ArgumentList	extrasdir		5001211	1					
ANR	5001422	Argument	extrasdir		5001211	0					
ANR	5001423	Identifier	extrasdir		5001211	0					
ANR	5001424	ExpressionStatement	free ( bindingsdir )	529:1:13709:13727	5001211	17	True				
ANR	5001425	CallExpression	free ( bindingsdir )		5001211	0					
ANR	5001426	Callee	free		5001211	0					
ANR	5001427	Identifier	free		5001211	0					
ANR	5001428	ArgumentList	bindingsdir		5001211	1					
ANR	5001429	Argument	bindingsdir		5001211	0					
ANR	5001430	Identifier	bindingsdir		5001211	0					
ANR	5001431	ExpressionStatement	free ( tmp )	531:1:13731:13741	5001211	18	True				
ANR	5001432	CallExpression	free ( tmp )		5001211	0					
ANR	5001433	Callee	free		5001211	0					
ANR	5001434	Identifier	free		5001211	0					
ANR	5001435	ArgumentList	tmp		5001211	1					
ANR	5001436	Argument	tmp		5001211	0					
ANR	5001437	Identifier	tmp		5001211	0					
ANR	5001438	ExpressionStatement	free ( path )	532:1:13744:13755	5001211	19	True				
ANR	5001439	CallExpression	free ( path )		5001211	0					
ANR	5001440	Callee	free		5001211	0					
ANR	5001441	Identifier	free		5001211	0					
ANR	5001442	ArgumentList	path		5001211	1					
ANR	5001443	Argument	path		5001211	0					
ANR	5001444	Identifier	path		5001211	0					
ANR	5001445	ReturnType	static void		5001211	1					
ANR	5001446	Identifier	__load_plugins		5001211	2					
ANR	5001447	ParameterList	RAsmState * as		5001211	3					
ANR	5001448	Parameter	RAsmState * as	501:27:12818:12830	5001211	0	True				
ANR	5001449	ParameterType	RAsmState *		5001211	0					
ANR	5001450	Identifier	as		5001211	1					
ANR	5001451	CFGEntryNode	ENTRY		5001211		True				
ANR	5001452	CFGExitNode	EXIT		5001211		True				
ANR	5001453	Symbol	R2_BINDINGS		5001211						
ANR	5001454	Symbol	& __lib_asm_cb		5001211						
ANR	5001455	Symbol	NULL		5001211						
ANR	5001456	Symbol	R2_PLUGINS		5001211						
ANR	5001457	Symbol	r_sys_getenv		5001211						
ANR	5001458	Symbol	R_LIB_TYPE_ASM		5001211						
ANR	5001459	Symbol	path		5001211						
ANR	5001460	Symbol	as		5001211						
ANR	5001461	Symbol	R_LIB_ENV		5001211						
ANR	5001462	Symbol	R2_HOME_PLUGINS		5001211						
ANR	5001463	Symbol	bindingsdir		5001211						
ANR	5001464	Symbol	R_LIB_TYPE_ANAL		5001211						
ANR	5001465	Symbol	tmp		5001211						
ANR	5001466	Symbol	R2_EXTRAS		5001211						
ANR	5001467	Symbol	as -> l		5001211						
ANR	5001468	Symbol	* path		5001211						
ANR	5001469	Symbol	r_str_r2_prefix		5001211						
ANR	5001470	Symbol	homeplugindir		5001211						
ANR	5001471	Symbol	* as		5001211						
ANR	5001472	Symbol	& __lib_anal_cb		5001211						
ANR	5001473	Symbol	plugindir		5001211						
ANR	5001474	Symbol	r_str_home		5001211						
ANR	5001475	Symbol	extrasdir		5001211						
ANR	5001476	Function	r_main_rasm2	535:0:13760:21434							
ANR	5001477	FunctionDef	"r_main_rasm2 (int argc , char * argv [ ])"		5001476	0					
ANR	5001478	CompoundStatement		535:47:13807:21434	5001476	0					
ANR	5001479	IdentifierDeclStatement	"const char * env_arch = r_sys_getenv ( ""RASM2_ARCH"" ) ;"	536:1:13810:13860	5001476	0	True				
ANR	5001480	IdentifierDecl	"* env_arch = r_sys_getenv ( ""RASM2_ARCH"" )"		5001476	0					
ANR	5001481	IdentifierDeclType	const char *		5001476	0					
ANR	5001482	Identifier	env_arch		5001476	1					
ANR	5001483	AssignmentExpression	"* env_arch = r_sys_getenv ( ""RASM2_ARCH"" )"		5001476	2		=			
ANR	5001484	Identifier	env_arch		5001476	0					
ANR	5001485	CallExpression	"r_sys_getenv ( ""RASM2_ARCH"" )"		5001476	1					
ANR	5001486	Callee	r_sys_getenv		5001476	0					
ANR	5001487	Identifier	r_sys_getenv		5001476	0					
ANR	5001488	ArgumentList	"""RASM2_ARCH"""		5001476	1					
ANR	5001489	Argument	"""RASM2_ARCH"""		5001476	0					
ANR	5001490	PrimaryExpression	"""RASM2_ARCH"""		5001476	0					
ANR	5001491	IdentifierDeclStatement	"const char * env_bits = r_sys_getenv ( ""RASM2_BITS"" ) ;"	537:1:13863:13913	5001476	1	True				
ANR	5001492	IdentifierDecl	"* env_bits = r_sys_getenv ( ""RASM2_BITS"" )"		5001476	0					
ANR	5001493	IdentifierDeclType	const char *		5001476	0					
ANR	5001494	Identifier	env_bits		5001476	1					
ANR	5001495	AssignmentExpression	"* env_bits = r_sys_getenv ( ""RASM2_BITS"" )"		5001476	2		=			
ANR	5001496	Identifier	env_bits		5001476	0					
ANR	5001497	CallExpression	"r_sys_getenv ( ""RASM2_BITS"" )"		5001476	1					
ANR	5001498	Callee	r_sys_getenv		5001476	0					
ANR	5001499	Identifier	r_sys_getenv		5001476	0					
ANR	5001500	ArgumentList	"""RASM2_BITS"""		5001476	1					
ANR	5001501	Argument	"""RASM2_BITS"""		5001476	0					
ANR	5001502	PrimaryExpression	"""RASM2_BITS"""		5001476	0					
ANR	5001503	IdentifierDeclStatement	"char * arch = NULL , * file = NULL , * filters = NULL , * kernel = NULL , * cpu = NULL ;"	538:1:13916:13993	5001476	2	True				
ANR	5001504	IdentifierDecl	* arch = NULL		5001476	0					
ANR	5001505	IdentifierDeclType	char *		5001476	0					
ANR	5001506	Identifier	arch		5001476	1					
ANR	5001507	AssignmentExpression	* arch = NULL		5001476	2		=			
ANR	5001508	Identifier	NULL		5001476	0					
ANR	5001509	Identifier	NULL		5001476	1					
ANR	5001510	IdentifierDecl	* file = NULL		5001476	1					
ANR	5001511	IdentifierDeclType	char *		5001476	0					
ANR	5001512	Identifier	file		5001476	1					
ANR	5001513	AssignmentExpression	* file = NULL		5001476	2		=			
ANR	5001514	Identifier	NULL		5001476	0					
ANR	5001515	Identifier	NULL		5001476	1					
ANR	5001516	IdentifierDecl	* filters = NULL		5001476	2					
ANR	5001517	IdentifierDeclType	char *		5001476	0					
ANR	5001518	Identifier	filters		5001476	1					
ANR	5001519	AssignmentExpression	* filters = NULL		5001476	2		=			
ANR	5001520	Identifier	NULL		5001476	0					
ANR	5001521	Identifier	NULL		5001476	1					
ANR	5001522	IdentifierDecl	* kernel = NULL		5001476	3					
ANR	5001523	IdentifierDeclType	char *		5001476	0					
ANR	5001524	Identifier	kernel		5001476	1					
ANR	5001525	AssignmentExpression	* kernel = NULL		5001476	2		=			
ANR	5001526	Identifier	NULL		5001476	0					
ANR	5001527	Identifier	NULL		5001476	1					
ANR	5001528	IdentifierDecl	* cpu = NULL		5001476	4					
ANR	5001529	IdentifierDeclType	char *		5001476	0					
ANR	5001530	Identifier	cpu		5001476	1					
ANR	5001531	AssignmentExpression	* cpu = NULL		5001476	2		=			
ANR	5001532	Identifier	NULL		5001476	0					
ANR	5001533	Identifier	NULL		5001476	1					
ANR	5001534	IdentifierDeclStatement	bool isbig = false ;	539:1:13996:14014	5001476	3	True				
ANR	5001535	IdentifierDecl	isbig = false		5001476	0					
ANR	5001536	IdentifierDeclType	bool		5001476	0					
ANR	5001537	Identifier	isbig		5001476	1					
ANR	5001538	AssignmentExpression	isbig = false		5001476	2		=			
ANR	5001539	Identifier	false		5001476	0					
ANR	5001540	Identifier	false		5001476	1					
ANR	5001541	IdentifierDeclStatement	bool rad = false ;	540:1:14017:14033	5001476	4	True				
ANR	5001542	IdentifierDecl	rad = false		5001476	0					
ANR	5001543	IdentifierDeclType	bool		5001476	0					
ANR	5001544	Identifier	rad		5001476	1					
ANR	5001545	AssignmentExpression	rad = false		5001476	2		=			
ANR	5001546	Identifier	false		5001476	0					
ANR	5001547	Identifier	false		5001476	1					
ANR	5001548	IdentifierDeclStatement	bool use_spp = false ;	541:1:14036:14056	5001476	5	True				
ANR	5001549	IdentifierDecl	use_spp = false		5001476	0					
ANR	5001550	IdentifierDeclType	bool		5001476	0					
ANR	5001551	Identifier	use_spp		5001476	1					
ANR	5001552	AssignmentExpression	use_spp = false		5001476	2		=			
ANR	5001553	Identifier	false		5001476	0					
ANR	5001554	Identifier	false		5001476	1					
ANR	5001555	IdentifierDeclStatement	bool hexwords = false ;	542:1:14059:14080	5001476	6	True				
ANR	5001556	IdentifierDecl	hexwords = false		5001476	0					
ANR	5001557	IdentifierDeclType	bool		5001476	0					
ANR	5001558	Identifier	hexwords		5001476	1					
ANR	5001559	AssignmentExpression	hexwords = false		5001476	2		=			
ANR	5001560	Identifier	false		5001476	0					
ANR	5001561	Identifier	false		5001476	1					
ANR	5001562	IdentifierDeclStatement	ut64 offset = 0 ;	543:1:14083:14098	5001476	7	True				
ANR	5001563	IdentifierDecl	offset = 0		5001476	0					
ANR	5001564	IdentifierDeclType	ut64		5001476	0					
ANR	5001565	Identifier	offset		5001476	1					
ANR	5001566	AssignmentExpression	offset = 0		5001476	2		=			
ANR	5001567	Identifier	offset		5001476	0					
ANR	5001568	PrimaryExpression	0		5001476	1					
ANR	5001569	IdentifierDeclStatement	"int fd = - 1 , dis = 0 , ascii = 0 , bin = 0 , ret = 0 , bits = 32 , c , whatsop = 0 ;"	544:1:14101:14177	5001476	8	True				
ANR	5001570	IdentifierDecl	fd = - 1		5001476	0					
ANR	5001571	IdentifierDeclType	int		5001476	0					
ANR	5001572	Identifier	fd		5001476	1					
ANR	5001573	AssignmentExpression	fd = - 1		5001476	2		=			
ANR	5001574	Identifier	fd		5001476	0					
ANR	5001575	UnaryOperationExpression	- 1		5001476	1					
ANR	5001576	UnaryOperator	-		5001476	0					
ANR	5001577	PrimaryExpression	1		5001476	1					
ANR	5001578	IdentifierDecl	dis = 0		5001476	1					
ANR	5001579	IdentifierDeclType	int		5001476	0					
ANR	5001580	Identifier	dis		5001476	1					
ANR	5001581	AssignmentExpression	dis = 0		5001476	2		=			
ANR	5001582	Identifier	dis		5001476	0					
ANR	5001583	PrimaryExpression	0		5001476	1					
ANR	5001584	IdentifierDecl	ascii = 0		5001476	2					
ANR	5001585	IdentifierDeclType	int		5001476	0					
ANR	5001586	Identifier	ascii		5001476	1					
ANR	5001587	AssignmentExpression	ascii = 0		5001476	2		=			
ANR	5001588	Identifier	ascii		5001476	0					
ANR	5001589	PrimaryExpression	0		5001476	1					
ANR	5001590	IdentifierDecl	bin = 0		5001476	3					
ANR	5001591	IdentifierDeclType	int		5001476	0					
ANR	5001592	Identifier	bin		5001476	1					
ANR	5001593	AssignmentExpression	bin = 0		5001476	2		=			
ANR	5001594	Identifier	bin		5001476	0					
ANR	5001595	PrimaryExpression	0		5001476	1					
ANR	5001596	IdentifierDecl	ret = 0		5001476	4					
ANR	5001597	IdentifierDeclType	int		5001476	0					
ANR	5001598	Identifier	ret		5001476	1					
ANR	5001599	AssignmentExpression	ret = 0		5001476	2		=			
ANR	5001600	Identifier	ret		5001476	0					
ANR	5001601	PrimaryExpression	0		5001476	1					
ANR	5001602	IdentifierDecl	bits = 32		5001476	5					
ANR	5001603	IdentifierDeclType	int		5001476	0					
ANR	5001604	Identifier	bits		5001476	1					
ANR	5001605	AssignmentExpression	bits = 32		5001476	2		=			
ANR	5001606	Identifier	bits		5001476	0					
ANR	5001607	PrimaryExpression	32		5001476	1					
ANR	5001608	IdentifierDecl	c		5001476	6					
ANR	5001609	IdentifierDeclType	int		5001476	0					
ANR	5001610	Identifier	c		5001476	1					
ANR	5001611	IdentifierDecl	whatsop = 0		5001476	7					
ANR	5001612	IdentifierDeclType	int		5001476	0					
ANR	5001613	Identifier	whatsop		5001476	1					
ANR	5001614	AssignmentExpression	whatsop = 0		5001476	2		=			
ANR	5001615	Identifier	whatsop		5001476	0					
ANR	5001616	PrimaryExpression	0		5001476	1					
ANR	5001617	IdentifierDeclStatement	int help = 0 ;	545:1:14180:14192	5001476	9	True				
ANR	5001618	IdentifierDecl	help = 0		5001476	0					
ANR	5001619	IdentifierDeclType	int		5001476	0					
ANR	5001620	Identifier	help		5001476	1					
ANR	5001621	AssignmentExpression	help = 0		5001476	2		=			
ANR	5001622	Identifier	help		5001476	0					
ANR	5001623	PrimaryExpression	0		5001476	1					
ANR	5001624	IdentifierDeclStatement	"ut64 len = 0 , idx = 0 , skip = 0 ;"	546:1:14195:14226	5001476	10	True				
ANR	5001625	IdentifierDecl	len = 0		5001476	0					
ANR	5001626	IdentifierDeclType	ut64		5001476	0					
ANR	5001627	Identifier	len		5001476	1					
ANR	5001628	AssignmentExpression	len = 0		5001476	2		=			
ANR	5001629	Identifier	len		5001476	0					
ANR	5001630	PrimaryExpression	0		5001476	1					
ANR	5001631	IdentifierDecl	idx = 0		5001476	1					
ANR	5001632	IdentifierDeclType	ut64		5001476	0					
ANR	5001633	Identifier	idx		5001476	1					
ANR	5001634	AssignmentExpression	idx = 0		5001476	2		=			
ANR	5001635	Identifier	idx		5001476	0					
ANR	5001636	PrimaryExpression	0		5001476	1					
ANR	5001637	IdentifierDecl	skip = 0		5001476	2					
ANR	5001638	IdentifierDeclType	ut64		5001476	0					
ANR	5001639	Identifier	skip		5001476	1					
ANR	5001640	AssignmentExpression	skip = 0		5001476	2		=			
ANR	5001641	Identifier	skip		5001476	0					
ANR	5001642	PrimaryExpression	0		5001476	1					
ANR	5001643	IdentifierDeclStatement	bool analinfo = false ;	547:1:14229:14250	5001476	11	True				
ANR	5001644	IdentifierDecl	analinfo = false		5001476	0					
ANR	5001645	IdentifierDeclType	bool		5001476	0					
ANR	5001646	Identifier	analinfo		5001476	1					
ANR	5001647	AssignmentExpression	analinfo = false		5001476	2		=			
ANR	5001648	Identifier	false		5001476	0					
ANR	5001649	Identifier	false		5001476	1					
ANR	5001650	IfStatement	if ( argc < 2 )		5001476	12					
ANR	5001651	Condition	argc < 2	549:5:14258:14265	5001476	0	True				
ANR	5001652	RelationalExpression	argc < 2		5001476	0		<			
ANR	5001653	Identifier	argc		5001476	0					
ANR	5001654	PrimaryExpression	2		5001476	1					
ANR	5001655	CompoundStatement		15:15:460:460	5001476	1					
ANR	5001656	ReturnStatement	return rasm_show_help ( 1 ) ;	550:2:14272:14297	5001476	0	True				
ANR	5001657	CallExpression	rasm_show_help ( 1 )		5001476	0					
ANR	5001658	Callee	rasm_show_help		5001476	0					
ANR	5001659	Identifier	rasm_show_help		5001476	0					
ANR	5001660	ArgumentList	1		5001476	1					
ANR	5001661	Argument	1		5001476	0					
ANR	5001662	PrimaryExpression	1		5001476	0					
ANR	5001663	IdentifierDeclStatement	RAsmState * as = __as_new ( ) ;	553:1:14304:14331	5001476	13	True				
ANR	5001664	IdentifierDecl	* as = __as_new ( )		5001476	0					
ANR	5001665	IdentifierDeclType	RAsmState *		5001476	0					
ANR	5001666	Identifier	as		5001476	1					
ANR	5001667	AssignmentExpression	* as = __as_new ( )		5001476	2		=			
ANR	5001668	Identifier	as		5001476	0					
ANR	5001669	CallExpression	__as_new ( )		5001476	1					
ANR	5001670	Callee	__as_new		5001476	0					
ANR	5001671	Identifier	__as_new		5001476	0					
ANR	5001672	ArgumentList			5001476	1					
ANR	5001673	IdentifierDeclStatement	"char * r2arch = r_sys_getenv ( ""R2_ARCH"" ) ;"	556:1:14358:14397	5001476	14	True				
ANR	5001674	IdentifierDecl	"* r2arch = r_sys_getenv ( ""R2_ARCH"" )"		5001476	0					
ANR	5001675	IdentifierDeclType	char *		5001476	0					
ANR	5001676	Identifier	r2arch		5001476	1					
ANR	5001677	AssignmentExpression	"* r2arch = r_sys_getenv ( ""R2_ARCH"" )"		5001476	2		=			
ANR	5001678	Identifier	r2arch		5001476	0					
ANR	5001679	CallExpression	"r_sys_getenv ( ""R2_ARCH"" )"		5001476	1					
ANR	5001680	Callee	r_sys_getenv		5001476	0					
ANR	5001681	Identifier	r_sys_getenv		5001476	0					
ANR	5001682	ArgumentList	"""R2_ARCH"""		5001476	1					
ANR	5001683	Argument	"""R2_ARCH"""		5001476	0					
ANR	5001684	PrimaryExpression	"""R2_ARCH"""		5001476	0					
ANR	5001685	IfStatement	if ( r2arch )		5001476	15					
ANR	5001686	Condition	r2arch	557:5:14404:14409	5001476	0	True				
ANR	5001687	Identifier	r2arch		5001476	0					
ANR	5001688	CompoundStatement		23:13:604:604	5001476	1					
ANR	5001689	ExpressionStatement	arch = r2arch	558:2:14416:14429	5001476	0	True				
ANR	5001690	AssignmentExpression	arch = r2arch		5001476	0		=			
ANR	5001691	Identifier	arch		5001476	0					
ANR	5001692	Identifier	r2arch		5001476	1					
ANR	5001693	IdentifierDeclStatement	"char * r2bits = r_sys_getenv ( ""R2_BITS"" ) ;"	561:1:14436:14475	5001476	16	True				
ANR	5001694	IdentifierDecl	"* r2bits = r_sys_getenv ( ""R2_BITS"" )"		5001476	0					
ANR	5001695	IdentifierDeclType	char *		5001476	0					
ANR	5001696	Identifier	r2bits		5001476	1					
ANR	5001697	AssignmentExpression	"* r2bits = r_sys_getenv ( ""R2_BITS"" )"		5001476	2		=			
ANR	5001698	Identifier	r2bits		5001476	0					
ANR	5001699	CallExpression	"r_sys_getenv ( ""R2_BITS"" )"		5001476	1					
ANR	5001700	Callee	r_sys_getenv		5001476	0					
ANR	5001701	Identifier	r_sys_getenv		5001476	0					
ANR	5001702	ArgumentList	"""R2_BITS"""		5001476	1					
ANR	5001703	Argument	"""R2_BITS"""		5001476	0					
ANR	5001704	PrimaryExpression	"""R2_BITS"""		5001476	0					
ANR	5001705	IfStatement	if ( r2bits )		5001476	17					
ANR	5001706	Condition	r2bits	562:5:14482:14487	5001476	0	True				
ANR	5001707	Identifier	r2bits		5001476	0					
ANR	5001708	CompoundStatement		28:13:682:682	5001476	1					
ANR	5001709	ExpressionStatement	"bits = r_num_math ( NULL , r2bits )"	563:2:14494:14526	5001476	0	True				
ANR	5001710	AssignmentExpression	"bits = r_num_math ( NULL , r2bits )"		5001476	0		=			
ANR	5001711	Identifier	bits		5001476	0					
ANR	5001712	CallExpression	"r_num_math ( NULL , r2bits )"		5001476	1					
ANR	5001713	Callee	r_num_math		5001476	0					
ANR	5001714	Identifier	r_num_math		5001476	0					
ANR	5001715	ArgumentList	NULL		5001476	1					
ANR	5001716	Argument	NULL		5001476	0					
ANR	5001717	Identifier	NULL		5001476	0					
ANR	5001718	Argument	r2bits		5001476	1					
ANR	5001719	Identifier	r2bits		5001476	0					
ANR	5001720	ExpressionStatement	free ( r2bits )	564:2:14530:14543	5001476	1	True				
ANR	5001721	CallExpression	free ( r2bits )		5001476	0					
ANR	5001722	Callee	free		5001476	0					
ANR	5001723	Identifier	free		5001476	0					
ANR	5001724	ArgumentList	r2bits		5001476	1					
ANR	5001725	Argument	r2bits		5001476	0					
ANR	5001726	Identifier	r2bits		5001476	0					
ANR	5001727	WhileStatement	"while ( ( c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" ) ) != - 1 )"		5001476	18					
ANR	5001728	Condition	"( c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" ) ) != - 1"	567:8:14557:14633	5001476	0	True				
ANR	5001729	EqualityExpression	"( c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" ) ) != - 1"		5001476	0		!=			
ANR	5001730	AssignmentExpression	"c = r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" )"		5001476	0		=			
ANR	5001731	Identifier	c		5001476	0					
ANR	5001732	CallExpression	"r_getopt ( argc , argv , ""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"" )"		5001476	1					
ANR	5001733	Callee	r_getopt		5001476	0					
ANR	5001734	Identifier	r_getopt		5001476	0					
ANR	5001735	ArgumentList	argc		5001476	1					
ANR	5001736	Argument	argc		5001476	0					
ANR	5001737	Identifier	argc		5001476	0					
ANR	5001738	Argument	argv		5001476	1					
ANR	5001739	Identifier	argv		5001476	0					
ANR	5001740	Argument	"""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"""		5001476	2					
ANR	5001741	PrimaryExpression	"""a:Ab:Bc:CdDeEf:F:hi:jk:l:L@:o:O:pqrs:vwx"""		5001476	0					
ANR	5001742	UnaryOperationExpression	- 1		5001476	1					
ANR	5001743	UnaryOperator	-		5001476	0					
ANR	5001744	PrimaryExpression	1		5001476	1					
ANR	5001745	CompoundStatement		33:87:828:828	5001476	1					
ANR	5001746	SwitchStatement	switch ( c )		5001476	0					
ANR	5001747	Condition	c	568:10:14648:14648	5001476	0	True				
ANR	5001748	Identifier	c		5001476	0					
ANR	5001749	CompoundStatement		34:13:843:843	5001476	1					
ANR	5001750	Label	case 'a' :	569:2:14655:14663	5001476	0	True				
ANR	5001751	ExpressionStatement	arch = r_optarg	570:3:14668:14683	5001476	1	True				
ANR	5001752	AssignmentExpression	arch = r_optarg		5001476	0		=			
ANR	5001753	Identifier	arch		5001476	0					
ANR	5001754	Identifier	r_optarg		5001476	1					
ANR	5001755	BreakStatement	break ;	571:3:14688:14693	5001476	2	True				
ANR	5001756	Label	case 'A' :	572:2:14697:14705	5001476	3	True				
ANR	5001757	ExpressionStatement	analinfo = true	573:3:14710:14725	5001476	4	True				
ANR	5001758	AssignmentExpression	analinfo = true		5001476	0		=			
ANR	5001759	Identifier	analinfo		5001476	0					
ANR	5001760	Identifier	true		5001476	1					
ANR	5001761	BreakStatement	break ;	574:3:14730:14735	5001476	5	True				
ANR	5001762	Label	case 'b' :	575:2:14739:14747	5001476	6	True				
ANR	5001763	ExpressionStatement	"bits = r_num_math ( NULL , r_optarg )"	576:3:14752:14786	5001476	7	True				
ANR	5001764	AssignmentExpression	"bits = r_num_math ( NULL , r_optarg )"		5001476	0		=			
ANR	5001765	Identifier	bits		5001476	0					
ANR	5001766	CallExpression	"r_num_math ( NULL , r_optarg )"		5001476	1					
ANR	5001767	Callee	r_num_math		5001476	0					
ANR	5001768	Identifier	r_num_math		5001476	0					
ANR	5001769	ArgumentList	NULL		5001476	1					
ANR	5001770	Argument	NULL		5001476	0					
ANR	5001771	Identifier	NULL		5001476	0					
ANR	5001772	Argument	r_optarg		5001476	1					
ANR	5001773	Identifier	r_optarg		5001476	0					
ANR	5001774	BreakStatement	break ;	577:3:14791:14796	5001476	8	True				
ANR	5001775	Label	case 'B' :	578:2:14800:14808	5001476	9	True				
ANR	5001776	ExpressionStatement	bin = 1	579:3:14813:14820	5001476	10	True				
ANR	5001777	AssignmentExpression	bin = 1		5001476	0		=			
ANR	5001778	Identifier	bin		5001476	0					
ANR	5001779	PrimaryExpression	1		5001476	1					
ANR	5001780	BreakStatement	break ;	580:3:14825:14830	5001476	11	True				
ANR	5001781	Label	case 'c' :	581:2:14834:14842	5001476	12	True				
ANR	5001782	ExpressionStatement	cpu = r_optarg	582:3:14847:14861	5001476	13	True				
ANR	5001783	AssignmentExpression	cpu = r_optarg		5001476	0		=			
ANR	5001784	Identifier	cpu		5001476	0					
ANR	5001785	Identifier	r_optarg		5001476	1					
ANR	5001786	BreakStatement	break ;	583:3:14866:14871	5001476	14	True				
ANR	5001787	Label	case 'C' :	584:2:14875:14883	5001476	15	True				
ANR	5001788	ExpressionStatement	as -> coutput = true	585:3:14888:14906	5001476	16	True				
ANR	5001789	AssignmentExpression	as -> coutput = true		5001476	0		=			
ANR	5001790	PtrMemberAccess	as -> coutput		5001476	0					
ANR	5001791	Identifier	as		5001476	0					
ANR	5001792	Identifier	coutput		5001476	1					
ANR	5001793	Identifier	true		5001476	1					
ANR	5001794	BreakStatement	break ;	586:3:14911:14916	5001476	17	True				
ANR	5001795	Label	case 'd' :	587:2:14920:14928	5001476	18	True				
ANR	5001796	ExpressionStatement	dis = 1	588:3:14933:14940	5001476	19	True				
ANR	5001797	AssignmentExpression	dis = 1		5001476	0		=			
ANR	5001798	Identifier	dis		5001476	0					
ANR	5001799	PrimaryExpression	1		5001476	1					
ANR	5001800	BreakStatement	break ;	589:3:14945:14950	5001476	20	True				
ANR	5001801	Label	case 'D' :	590:2:14954:14962	5001476	21	True				
ANR	5001802	ExpressionStatement	dis = 2	591:3:14967:14974	5001476	22	True				
ANR	5001803	AssignmentExpression	dis = 2		5001476	0		=			
ANR	5001804	Identifier	dis		5001476	0					
ANR	5001805	PrimaryExpression	2		5001476	1					
ANR	5001806	BreakStatement	break ;	592:3:14979:14984	5001476	23	True				
ANR	5001807	Label	case 'e' :	593:2:14988:14996	5001476	24	True				
ANR	5001808	ExpressionStatement	isbig = true	594:3:15001:15013	5001476	25	True				
ANR	5001809	AssignmentExpression	isbig = true		5001476	0		=			
ANR	5001810	Identifier	isbig		5001476	0					
ANR	5001811	Identifier	true		5001476	1					
ANR	5001812	BreakStatement	break ;	595:3:15018:15023	5001476	26	True				
ANR	5001813	Label	case 'E' :	596:2:15027:15035	5001476	27	True				
ANR	5001814	ExpressionStatement	dis = 3	597:3:15040:15047	5001476	28	True				
ANR	5001815	AssignmentExpression	dis = 3		5001476	0		=			
ANR	5001816	Identifier	dis		5001476	0					
ANR	5001817	PrimaryExpression	3		5001476	1					
ANR	5001818	BreakStatement	break ;	598:3:15052:15057	5001476	29	True				
ANR	5001819	Label	case 'f' :	599:2:15061:15069	5001476	30	True				
ANR	5001820	ExpressionStatement	file = r_optarg	600:3:15074:15089	5001476	31	True				
ANR	5001821	AssignmentExpression	file = r_optarg		5001476	0		=			
ANR	5001822	Identifier	file		5001476	0					
ANR	5001823	Identifier	r_optarg		5001476	1					
ANR	5001824	BreakStatement	break ;	601:3:15094:15099	5001476	32	True				
ANR	5001825	Label	case 'F' :	602:2:15103:15111	5001476	33	True				
ANR	5001826	ExpressionStatement	filters = r_optarg	603:3:15116:15134	5001476	34	True				
ANR	5001827	AssignmentExpression	filters = r_optarg		5001476	0		=			
ANR	5001828	Identifier	filters		5001476	0					
ANR	5001829	Identifier	r_optarg		5001476	1					
ANR	5001830	BreakStatement	break ;	604:3:15139:15144	5001476	35	True				
ANR	5001831	Label	case 'h' :	605:2:15148:15156	5001476	36	True				
ANR	5001832	ExpressionStatement	help ++	606:3:15161:15167	5001476	37	True				
ANR	5001833	PostIncDecOperationExpression	help ++		5001476	0					
ANR	5001834	Identifier	help		5001476	0					
ANR	5001835	IncDec	++		5001476	1					
ANR	5001836	Label	case 'i' :	607:2:15171:15179	5001476	38	True				
ANR	5001837	ExpressionStatement	"skip = r_num_math ( NULL , r_optarg )"	608:3:15184:15218	5001476	39	True				
ANR	5001838	AssignmentExpression	"skip = r_num_math ( NULL , r_optarg )"		5001476	0		=			
ANR	5001839	Identifier	skip		5001476	0					
ANR	5001840	CallExpression	"r_num_math ( NULL , r_optarg )"		5001476	1					
ANR	5001841	Callee	r_num_math		5001476	0					
ANR	5001842	Identifier	r_num_math		5001476	0					
ANR	5001843	ArgumentList	NULL		5001476	1					
ANR	5001844	Argument	NULL		5001476	0					
ANR	5001845	Identifier	NULL		5001476	0					
ANR	5001846	Argument	r_optarg		5001476	1					
ANR	5001847	Identifier	r_optarg		5001476	0					
ANR	5001848	BreakStatement	break ;	609:3:15223:15228	5001476	40	True				
ANR	5001849	Label	case 'j' :	610:2:15232:15240	5001476	41	True				
ANR	5001850	ExpressionStatement	as -> json = true	611:3:15245:15260	5001476	42	True				
ANR	5001851	AssignmentExpression	as -> json = true		5001476	0		=			
ANR	5001852	PtrMemberAccess	as -> json		5001476	0					
ANR	5001853	Identifier	as		5001476	0					
ANR	5001854	Identifier	json		5001476	1					
ANR	5001855	Identifier	true		5001476	1					
ANR	5001856	BreakStatement	break ;	612:3:15265:15270	5001476	43	True				
ANR	5001857	Label	case 'k' :	613:2:15274:15282	5001476	44	True				
ANR	5001858	ExpressionStatement	kernel = r_optarg	614:3:15287:15304	5001476	45	True				
ANR	5001859	AssignmentExpression	kernel = r_optarg		5001476	0		=			
ANR	5001860	Identifier	kernel		5001476	0					
ANR	5001861	Identifier	r_optarg		5001476	1					
ANR	5001862	BreakStatement	break ;	615:3:15309:15314	5001476	46	True				
ANR	5001863	Label	case 'l' :	616:2:15318:15326	5001476	47	True				
ANR	5001864	ExpressionStatement	"len = r_num_math ( NULL , r_optarg )"	617:3:15331:15364	5001476	48	True				
ANR	5001865	AssignmentExpression	"len = r_num_math ( NULL , r_optarg )"		5001476	0		=			
ANR	5001866	Identifier	len		5001476	0					
ANR	5001867	CallExpression	"r_num_math ( NULL , r_optarg )"		5001476	1					
ANR	5001868	Callee	r_num_math		5001476	0					
ANR	5001869	Identifier	r_num_math		5001476	0					
ANR	5001870	ArgumentList	NULL		5001476	1					
ANR	5001871	Argument	NULL		5001476	0					
ANR	5001872	Identifier	NULL		5001476	0					
ANR	5001873	Argument	r_optarg		5001476	1					
ANR	5001874	Identifier	r_optarg		5001476	0					
ANR	5001875	BreakStatement	break ;	618:3:15369:15374	5001476	49	True				
ANR	5001876	Label	case 'L' :	619:2:15378:15386	5001476	50	True				
ANR	5001877	ExpressionStatement	"rasm2_list ( as , argv [ r_optind ] )"	620:3:15391:15422	5001476	51	True				
ANR	5001878	CallExpression	"rasm2_list ( as , argv [ r_optind ] )"		5001476	0					
ANR	5001879	Callee	rasm2_list		5001476	0					
ANR	5001880	Identifier	rasm2_list		5001476	0					
ANR	5001881	ArgumentList	as		5001476	1					
ANR	5001882	Argument	as		5001476	0					
ANR	5001883	Identifier	as		5001476	0					
ANR	5001884	Argument	argv [ r_optind ]		5001476	1					
ANR	5001885	ArrayIndexing	argv [ r_optind ]		5001476	0					
ANR	5001886	Identifier	argv		5001476	0					
ANR	5001887	Identifier	r_optind		5001476	1					
ANR	5001888	ExpressionStatement	ret = 1	621:3:15427:15434	5001476	52	True				
ANR	5001889	AssignmentExpression	ret = 1		5001476	0		=			
ANR	5001890	Identifier	ret		5001476	0					
ANR	5001891	PrimaryExpression	1		5001476	1					
ANR	5001892	GotoStatement	goto beach ;	622:3:15439:15449	5001476	53	True				
ANR	5001893	Identifier	beach		5001476	0					
ANR	5001894	Label	case '@' :	623:2:15453:15461	5001476	54	True				
ANR	5001895	Label	case 'o' :	624:2:15465:15473	5001476	55	True				
ANR	5001896	ExpressionStatement	"offset = r_num_math ( NULL , r_optarg )"	625:3:15478:15514	5001476	56	True				
ANR	5001897	AssignmentExpression	"offset = r_num_math ( NULL , r_optarg )"		5001476	0		=			
ANR	5001898	Identifier	offset		5001476	0					
ANR	5001899	CallExpression	"r_num_math ( NULL , r_optarg )"		5001476	1					
ANR	5001900	Callee	r_num_math		5001476	0					
ANR	5001901	Identifier	r_num_math		5001476	0					
ANR	5001902	ArgumentList	NULL		5001476	1					
ANR	5001903	Argument	NULL		5001476	0					
ANR	5001904	Identifier	NULL		5001476	0					
ANR	5001905	Argument	r_optarg		5001476	1					
ANR	5001906	Identifier	r_optarg		5001476	0					
ANR	5001907	BreakStatement	break ;	626:3:15519:15524	5001476	57	True				
ANR	5001908	Label	case 'O' :	627:2:15528:15536	5001476	58	True				
ANR	5001909	ExpressionStatement	"fd = open ( r_optarg , O_TRUNC | O_RDWR | O_CREAT , 0644 )"	628:3:15541:15595	5001476	59	True				
ANR	5001910	AssignmentExpression	"fd = open ( r_optarg , O_TRUNC | O_RDWR | O_CREAT , 0644 )"		5001476	0		=			
ANR	5001911	Identifier	fd		5001476	0					
ANR	5001912	CallExpression	"open ( r_optarg , O_TRUNC | O_RDWR | O_CREAT , 0644 )"		5001476	1					
ANR	5001913	Callee	open		5001476	0					
ANR	5001914	Identifier	open		5001476	0					
ANR	5001915	ArgumentList	r_optarg		5001476	1					
ANR	5001916	Argument	r_optarg		5001476	0					
ANR	5001917	Identifier	r_optarg		5001476	0					
ANR	5001918	Argument	O_TRUNC | O_RDWR | O_CREAT		5001476	1					
ANR	5001919	InclusiveOrExpression	O_TRUNC | O_RDWR | O_CREAT		5001476	0		|			
ANR	5001920	Identifier	O_TRUNC		5001476	0					
ANR	5001921	InclusiveOrExpression	O_RDWR | O_CREAT		5001476	1		|			
ANR	5001922	Identifier	O_RDWR		5001476	0					
ANR	5001923	Identifier	O_CREAT		5001476	1					
ANR	5001924	Argument	0644		5001476	2					
ANR	5001925	PrimaryExpression	0644		5001476	0					
ANR	5001926	IfStatement	if ( fd != - 1 )		5001476	60					
ANR	5001927	Condition	fd != - 1	629:7:15604:15611	5001476	0	True				
ANR	5001928	EqualityExpression	fd != - 1		5001476	0		!=			
ANR	5001929	Identifier	fd		5001476	0					
ANR	5001930	UnaryOperationExpression	- 1		5001476	1					
ANR	5001931	UnaryOperator	-		5001476	0					
ANR	5001932	PrimaryExpression	1		5001476	1					
ANR	5001933	CompoundStatement		95:17:1806:1806	5001476	1					
ANR	5001934	ExpressionStatement	"dup2 ( fd , 1 )"	630:4:15620:15632	5001476	0	True				
ANR	5001935	CallExpression	"dup2 ( fd , 1 )"		5001476	0					
ANR	5001936	Callee	dup2		5001476	0					
ANR	5001937	Identifier	dup2		5001476	0					
ANR	5001938	ArgumentList	fd		5001476	1					
ANR	5001939	Argument	fd		5001476	0					
ANR	5001940	Identifier	fd		5001476	0					
ANR	5001941	Argument	1		5001476	1					
ANR	5001942	PrimaryExpression	1		5001476	0					
ANR	5001943	BreakStatement	break ;	632:3:15642:15647	5001476	61	True				
ANR	5001944	Label	case 'p' :	633:2:15651:15659	5001476	62	True				
ANR	5001945	ExpressionStatement	use_spp = true	634:3:15664:15678	5001476	63	True				
ANR	5001946	AssignmentExpression	use_spp = true		5001476	0		=			
ANR	5001947	Identifier	use_spp		5001476	0					
ANR	5001948	Identifier	true		5001476	1					
ANR	5001949	BreakStatement	break ;	635:3:15683:15688	5001476	64	True				
ANR	5001950	Label	case 'q' :	636:2:15692:15700	5001476	65	True				
ANR	5001951	ExpressionStatement	as -> quiet = true	637:3:15705:15721	5001476	66	True				
ANR	5001952	AssignmentExpression	as -> quiet = true		5001476	0		=			
ANR	5001953	PtrMemberAccess	as -> quiet		5001476	0					
ANR	5001954	Identifier	as		5001476	0					
ANR	5001955	Identifier	quiet		5001476	1					
ANR	5001956	Identifier	true		5001476	1					
ANR	5001957	BreakStatement	break ;	638:3:15726:15731	5001476	67	True				
ANR	5001958	Label	case 'r' :	639:2:15735:15743	5001476	68	True				
ANR	5001959	ExpressionStatement	rad = true	640:3:15748:15758	5001476	69	True				
ANR	5001960	AssignmentExpression	rad = true		5001476	0		=			
ANR	5001961	Identifier	rad		5001476	0					
ANR	5001962	Identifier	true		5001476	1					
ANR	5001963	BreakStatement	break ;	641:3:15763:15768	5001476	70	True				
ANR	5001964	Label	case 's' :	642:2:15772:15780	5001476	71	True				
ANR	5001965	IfStatement	if ( * r_optarg == '?' )		5001476	72					
ANR	5001966	Condition	* r_optarg == '?'	643:7:15789:15804	5001476	0	True				
ANR	5001967	EqualityExpression	* r_optarg == '?'		5001476	0		==			
ANR	5001968	UnaryOperationExpression	* r_optarg		5001476	0					
ANR	5001969	UnaryOperator	*		5001476	0					
ANR	5001970	Identifier	r_optarg		5001476	1					
ANR	5001971	PrimaryExpression	'?'		5001476	1					
ANR	5001972	CompoundStatement		109:25:1999:1999	5001476	1					
ANR	5001973	ExpressionStatement	"printf ( ""att\\nintel\\nmasm\\njz\\nregnum\\n"" )"	644:4:15813:15854	5001476	0	True				
ANR	5001974	CallExpression	"printf ( ""att\\nintel\\nmasm\\njz\\nregnum\\n"" )"		5001476	0					
ANR	5001975	Callee	printf		5001476	0					
ANR	5001976	Identifier	printf		5001476	0					
ANR	5001977	ArgumentList	"""att\\nintel\\nmasm\\njz\\nregnum\\n"""		5001476	1					
ANR	5001978	Argument	"""att\\nintel\\nmasm\\njz\\nregnum\\n"""		5001476	0					
ANR	5001979	PrimaryExpression	"""att\\nintel\\nmasm\\njz\\nregnum\\n"""		5001476	0					
ANR	5001980	ExpressionStatement	__as_free ( as )	645:4:15860:15874	5001476	1	True				
ANR	5001981	CallExpression	__as_free ( as )		5001476	0					
ANR	5001982	Callee	__as_free		5001476	0					
ANR	5001983	Identifier	__as_free		5001476	0					
ANR	5001984	ArgumentList	as		5001476	1					
ANR	5001985	Argument	as		5001476	0					
ANR	5001986	Identifier	as		5001476	0					
ANR	5001987	ReturnStatement	return 0 ;	646:4:15880:15888	5001476	2	True				
ANR	5001988	PrimaryExpression	0		5001476	0					
ANR	5001989	ElseStatement	else		5001476	0					
ANR	5001990	CompoundStatement		114:4:2098:2146	5001476	0					
ANR	5001991	IdentifierDeclStatement	int syntax = r_asm_syntax_from_string ( r_optarg ) ;	648:4:15906:15954	5001476	0	True				
ANR	5001992	IdentifierDecl	syntax = r_asm_syntax_from_string ( r_optarg )		5001476	0					
ANR	5001993	IdentifierDeclType	int		5001476	0					
ANR	5001994	Identifier	syntax		5001476	1					
ANR	5001995	AssignmentExpression	syntax = r_asm_syntax_from_string ( r_optarg )		5001476	2		=			
ANR	5001996	Identifier	syntax		5001476	0					
ANR	5001997	CallExpression	r_asm_syntax_from_string ( r_optarg )		5001476	1					
ANR	5001998	Callee	r_asm_syntax_from_string		5001476	0					
ANR	5001999	Identifier	r_asm_syntax_from_string		5001476	0					
ANR	5002000	ArgumentList	r_optarg		5001476	1					
ANR	5002001	Argument	r_optarg		5001476	0					
ANR	5002002	Identifier	r_optarg		5001476	0					
ANR	5002003	IfStatement	if ( syntax == - 1 )		5001476	1					
ANR	5002004	Condition	syntax == - 1	649:8:15964:15975	5001476	0	True				
ANR	5002005	EqualityExpression	syntax == - 1		5001476	0		==			
ANR	5002006	Identifier	syntax		5001476	0					
ANR	5002007	UnaryOperationExpression	- 1		5001476	1					
ANR	5002008	UnaryOperator	-		5001476	0					
ANR	5002009	PrimaryExpression	1		5001476	1					
ANR	5002010	CompoundStatement		115:22:2170:2170	5001476	1					
ANR	5002011	ExpressionStatement	__as_free ( as )	650:5:15985:15999	5001476	0	True				
ANR	5002012	CallExpression	__as_free ( as )		5001476	0					
ANR	5002013	Callee	__as_free		5001476	0					
ANR	5002014	Identifier	__as_free		5001476	0					
ANR	5002015	ArgumentList	as		5001476	1					
ANR	5002016	Argument	as		5001476	0					
ANR	5002017	Identifier	as		5001476	0					
ANR	5002018	ReturnStatement	return 1 ;	651:5:16006:16014	5001476	1	True				
ANR	5002019	PrimaryExpression	1		5001476	0					
ANR	5002020	ExpressionStatement	"r_asm_set_syntax ( as -> a , syntax )"	653:4:16026:16058	5001476	2	True				
ANR	5002021	CallExpression	"r_asm_set_syntax ( as -> a , syntax )"		5001476	0					
ANR	5002022	Callee	r_asm_set_syntax		5001476	0					
ANR	5002023	Identifier	r_asm_set_syntax		5001476	0					
ANR	5002024	ArgumentList	as -> a		5001476	1					
ANR	5002025	Argument	as -> a		5001476	0					
ANR	5002026	PtrMemberAccess	as -> a		5001476	0					
ANR	5002027	Identifier	as		5001476	0					
ANR	5002028	Identifier	a		5001476	1					
ANR	5002029	Argument	syntax		5001476	1					
ANR	5002030	Identifier	syntax		5001476	0					
ANR	5002031	BreakStatement	break ;	655:3:16068:16073	5001476	73	True				
ANR	5002032	Label	case 'v' :	656:2:16077:16085	5001476	74	True				
ANR	5002033	IfStatement	if ( as -> quiet )		5001476	75					
ANR	5002034	Condition	as -> quiet	657:7:16094:16102	5001476	0	True				
ANR	5002035	PtrMemberAccess	as -> quiet		5001476	0					
ANR	5002036	Identifier	as		5001476	0					
ANR	5002037	Identifier	quiet		5001476	1					
ANR	5002038	CompoundStatement		123:18:2297:2297	5001476	1					
ANR	5002039	ExpressionStatement	"printf ( ""%s\\n"" , R2_VERSION )"	658:4:16111:16138	5001476	0	True				
ANR	5002040	CallExpression	"printf ( ""%s\\n"" , R2_VERSION )"		5001476	0					
ANR	5002041	Callee	printf		5001476	0					
ANR	5002042	Identifier	printf		5001476	0					
ANR	5002043	ArgumentList	"""%s\\n"""		5001476	1					
ANR	5002044	Argument	"""%s\\n"""		5001476	0					
ANR	5002045	PrimaryExpression	"""%s\\n"""		5001476	0					
ANR	5002046	Argument	R2_VERSION		5001476	1					
ANR	5002047	Identifier	R2_VERSION		5001476	0					
ANR	5002048	ElseStatement	else		5001476	0					
ANR	5002049	CompoundStatement		125:10:2342:2342	5001476	0					
ANR	5002050	ExpressionStatement	"ret = r_main_version_print ( ""rasm2"" )"	660:4:16156:16192	5001476	0	True				
ANR	5002051	AssignmentExpression	"ret = r_main_version_print ( ""rasm2"" )"		5001476	0		=			
ANR	5002052	Identifier	ret		5001476	0					
ANR	5002053	CallExpression	"r_main_version_print ( ""rasm2"" )"		5001476	1					
ANR	5002054	Callee	r_main_version_print		5001476	0					
ANR	5002055	Identifier	r_main_version_print		5001476	0					
ANR	5002056	ArgumentList	"""rasm2"""		5001476	1					
ANR	5002057	Argument	"""rasm2"""		5001476	0					
ANR	5002058	PrimaryExpression	"""rasm2"""		5001476	0					
ANR	5002059	GotoStatement	goto beach ;	662:3:16202:16212	5001476	76	True				
ANR	5002060	Identifier	beach		5001476	0					
ANR	5002061	Label	case 'w' :	663:2:16216:16224	5001476	77	True				
ANR	5002062	ExpressionStatement	whatsop = true	664:3:16229:16243	5001476	78	True				
ANR	5002063	AssignmentExpression	whatsop = true		5001476	0		=			
ANR	5002064	Identifier	whatsop		5001476	0					
ANR	5002065	Identifier	true		5001476	1					
ANR	5002066	BreakStatement	break ;	665:3:16248:16253	5001476	79	True				
ANR	5002067	Label	case 'x' :	666:2:16257:16265	5001476	80	True				
ANR	5002068	ExpressionStatement	hexwords = true	667:3:16270:16285	5001476	81	True				
ANR	5002069	AssignmentExpression	hexwords = true		5001476	0		=			
ANR	5002070	Identifier	hexwords		5001476	0					
ANR	5002071	Identifier	true		5001476	1					
ANR	5002072	BreakStatement	break ;	668:3:16290:16295	5001476	82	True				
ANR	5002073	Label	default :	669:2:16299:16306	5001476	83	True				
ANR	5002074	Identifier	default		5001476	0					
ANR	5002075	ExpressionStatement	ret = rasm_show_help ( 0 )	670:3:16311:16335	5001476	84	True				
ANR	5002076	AssignmentExpression	ret = rasm_show_help ( 0 )		5001476	0		=			
ANR	5002077	Identifier	ret		5001476	0					
ANR	5002078	CallExpression	rasm_show_help ( 0 )		5001476	1					
ANR	5002079	Callee	rasm_show_help		5001476	0					
ANR	5002080	Identifier	rasm_show_help		5001476	0					
ANR	5002081	ArgumentList	0		5001476	1					
ANR	5002082	Argument	0		5001476	0					
ANR	5002083	PrimaryExpression	0		5001476	0					
ANR	5002084	GotoStatement	goto beach ;	671:3:16340:16350	5001476	85	True				
ANR	5002085	Identifier	beach		5001476	0					
ANR	5002086	IfStatement	if ( help > 0 )		5001476	19					
ANR	5002087	Condition	help > 0	675:5:16365:16372	5001476	0	True				
ANR	5002088	RelationalExpression	help > 0		5001476	0		>			
ANR	5002089	Identifier	help		5001476	0					
ANR	5002090	PrimaryExpression	0		5001476	1					
ANR	5002091	CompoundStatement		141:15:2567:2567	5001476	1					
ANR	5002092	ExpressionStatement	ret = rasm_show_help ( help > 1 ? 2 : 0 )	676:2:16379:16416	5001476	0	True				
ANR	5002093	AssignmentExpression	ret = rasm_show_help ( help > 1 ? 2 : 0 )		5001476	0		=			
ANR	5002094	Identifier	ret		5001476	0					
ANR	5002095	CallExpression	rasm_show_help ( help > 1 ? 2 : 0 )		5001476	1					
ANR	5002096	Callee	rasm_show_help		5001476	0					
ANR	5002097	Identifier	rasm_show_help		5001476	0					
ANR	5002098	ArgumentList	help > 1 ? 2 : 0		5001476	1					
ANR	5002099	Argument	help > 1 ? 2 : 0		5001476	0					
ANR	5002100	ConditionalExpression	help > 1 ? 2 : 0		5001476	0					
ANR	5002101	Condition	help > 1		5001476	0					
ANR	5002102	RelationalExpression	help > 1		5001476	0		>			
ANR	5002103	Identifier	help		5001476	0					
ANR	5002104	PrimaryExpression	1		5001476	1					
ANR	5002105	PrimaryExpression	2		5001476	1					
ANR	5002106	PrimaryExpression	0		5001476	2					
ANR	5002107	GotoStatement	goto beach ;	677:2:16420:16430	5001476	1	True				
ANR	5002108	Identifier	beach		5001476	0					
ANR	5002109	IfStatement	if ( arch )		5001476	20					
ANR	5002110	Condition	arch	680:5:16441:16444	5001476	0	True				
ANR	5002111	Identifier	arch		5001476	0					
ANR	5002112	CompoundStatement		146:11:2639:2639	5001476	1					
ANR	5002113	IfStatement	"if ( ! r_asm_use ( as -> a , arch ) )"		5001476	0					
ANR	5002114	Condition	"! r_asm_use ( as -> a , arch )"	681:6:16455:16478	5001476	0	True				
ANR	5002115	UnaryOperationExpression	"! r_asm_use ( as -> a , arch )"		5001476	0					
ANR	5002116	UnaryOperator	!		5001476	0					
ANR	5002117	CallExpression	"r_asm_use ( as -> a , arch )"		5001476	1					
ANR	5002118	Callee	r_asm_use		5001476	0					
ANR	5002119	Identifier	r_asm_use		5001476	0					
ANR	5002120	ArgumentList	as -> a		5001476	1					
ANR	5002121	Argument	as -> a		5001476	0					
ANR	5002122	PtrMemberAccess	as -> a		5001476	0					
ANR	5002123	Identifier	as		5001476	0					
ANR	5002124	Identifier	a		5001476	1					
ANR	5002125	Argument	arch		5001476	1					
ANR	5002126	Identifier	arch		5001476	0					
ANR	5002127	CompoundStatement		147:32:2673:2673	5001476	1					
ANR	5002128	ExpressionStatement	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , arch )"	682:3:16486:16536	5001476	0	True				
ANR	5002129	CallExpression	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , arch )"		5001476	0					
ANR	5002130	Callee	eprintf		5001476	0					
ANR	5002131	Identifier	eprintf		5001476	0					
ANR	5002132	ArgumentList	"""rasm2: Unknown asm plugin '%s'\\n"""		5001476	1					
ANR	5002133	Argument	"""rasm2: Unknown asm plugin '%s'\\n"""		5001476	0					
ANR	5002134	PrimaryExpression	"""rasm2: Unknown asm plugin '%s'\\n"""		5001476	0					
ANR	5002135	Argument	arch		5001476	1					
ANR	5002136	Identifier	arch		5001476	0					
ANR	5002137	ExpressionStatement	ret = 0	683:3:16541:16548	5001476	1	True				
ANR	5002138	AssignmentExpression	ret = 0		5001476	0		=			
ANR	5002139	Identifier	ret		5001476	0					
ANR	5002140	PrimaryExpression	0		5001476	1					
ANR	5002141	GotoStatement	goto beach ;	684:3:16553:16563	5001476	2	True				
ANR	5002142	Identifier	beach		5001476	0					
ANR	5002143	ExpressionStatement	"r_anal_use ( as -> anal , arch )"	686:2:16571:16598	5001476	1	True				
ANR	5002144	CallExpression	"r_anal_use ( as -> anal , arch )"		5001476	0					
ANR	5002145	Callee	r_anal_use		5001476	0					
ANR	5002146	Identifier	r_anal_use		5001476	0					
ANR	5002147	ArgumentList	as -> anal		5001476	1					
ANR	5002148	Argument	as -> anal		5001476	0					
ANR	5002149	PtrMemberAccess	as -> anal		5001476	0					
ANR	5002150	Identifier	as		5001476	0					
ANR	5002151	Identifier	anal		5001476	1					
ANR	5002152	Argument	arch		5001476	1					
ANR	5002153	Identifier	arch		5001476	0					
ANR	5002154	IfStatement	"if ( ! strcmp ( arch , ""bf"" ) )"		5001476	2					
ANR	5002155	Condition	"! strcmp ( arch , ""bf"" )"	687:6:16606:16625	5001476	0	True				
ANR	5002156	UnaryOperationExpression	"! strcmp ( arch , ""bf"" )"		5001476	0					
ANR	5002157	UnaryOperator	!		5001476	0					
ANR	5002158	CallExpression	"strcmp ( arch , ""bf"" )"		5001476	1					
ANR	5002159	Callee	strcmp		5001476	0					
ANR	5002160	Identifier	strcmp		5001476	0					
ANR	5002161	ArgumentList	arch		5001476	1					
ANR	5002162	Argument	arch		5001476	0					
ANR	5002163	Identifier	arch		5001476	0					
ANR	5002164	Argument	"""bf"""		5001476	1					
ANR	5002165	PrimaryExpression	"""bf"""		5001476	0					
ANR	5002166	CompoundStatement		153:28:2820:2820	5001476	1					
ANR	5002167	ExpressionStatement	ascii = 1	688:3:16633:16642	5001476	0	True				
ANR	5002168	AssignmentExpression	ascii = 1		5001476	0		=			
ANR	5002169	Identifier	ascii		5001476	0					
ANR	5002170	PrimaryExpression	1		5001476	1					
ANR	5002171	ElseStatement	else		5001476	0					
ANR	5002172	IfStatement	if ( env_arch )		5001476	0					
ANR	5002173	Condition	env_arch	690:12:16660:16667	5001476	0	True				
ANR	5002174	Identifier	env_arch		5001476	0					
ANR	5002175	CompoundStatement		156:22:2862:2862	5001476	1					
ANR	5002176	IfStatement	"if ( ! r_asm_use ( as -> a , env_arch ) )"		5001476	0					
ANR	5002177	Condition	"! r_asm_use ( as -> a , env_arch )"	691:6:16678:16705	5001476	0	True				
ANR	5002178	UnaryOperationExpression	"! r_asm_use ( as -> a , env_arch )"		5001476	0					
ANR	5002179	UnaryOperator	!		5001476	0					
ANR	5002180	CallExpression	"r_asm_use ( as -> a , env_arch )"		5001476	1					
ANR	5002181	Callee	r_asm_use		5001476	0					
ANR	5002182	Identifier	r_asm_use		5001476	0					
ANR	5002183	ArgumentList	as -> a		5001476	1					
ANR	5002184	Argument	as -> a		5001476	0					
ANR	5002185	PtrMemberAccess	as -> a		5001476	0					
ANR	5002186	Identifier	as		5001476	0					
ANR	5002187	Identifier	a		5001476	1					
ANR	5002188	Argument	env_arch		5001476	1					
ANR	5002189	Identifier	env_arch		5001476	0					
ANR	5002190	CompoundStatement		157:36:2900:2900	5001476	1					
ANR	5002191	ExpressionStatement	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , env_arch )"	692:3:16713:16767	5001476	0	True				
ANR	5002192	CallExpression	"eprintf ( ""rasm2: Unknown asm plugin '%s'\\n"" , env_arch )"		5001476	0					
ANR	5002193	Callee	eprintf		5001476	0					
ANR	5002194	Identifier	eprintf		5001476	0					
ANR	5002195	ArgumentList	"""rasm2: Unknown asm plugin '%s'\\n"""		5001476	1					
ANR	5002196	Argument	"""rasm2: Unknown asm plugin '%s'\\n"""		5001476	0					
ANR	5002197	PrimaryExpression	"""rasm2: Unknown asm plugin '%s'\\n"""		5001476	0					
ANR	5002198	Argument	env_arch		5001476	1					
ANR	5002199	Identifier	env_arch		5001476	0					
ANR	5002200	ExpressionStatement	ret = 0	693:3:16772:16779	5001476	1	True				
ANR	5002201	AssignmentExpression	ret = 0		5001476	0		=			
ANR	5002202	Identifier	ret		5001476	0					
ANR	5002203	PrimaryExpression	0		5001476	1					
ANR	5002204	GotoStatement	goto beach ;	694:3:16784:16794	5001476	2	True				
ANR	5002205	Identifier	beach		5001476	0					
ANR	5002206	ElseStatement	else		5001476	0					
ANR	5002207	IfStatement	"if ( ! r_asm_use ( as -> a , ""x86"" ) )"		5001476	0					
ANR	5002208	Condition	"! r_asm_use ( as -> a , ""x86"" )"	696:12:16812:16836	5001476	0	True				
ANR	5002209	UnaryOperationExpression	"! r_asm_use ( as -> a , ""x86"" )"		5001476	0					
ANR	5002210	UnaryOperator	!		5001476	0					
ANR	5002211	CallExpression	"r_asm_use ( as -> a , ""x86"" )"		5001476	1					
ANR	5002212	Callee	r_asm_use		5001476	0					
ANR	5002213	Identifier	r_asm_use		5001476	0					
ANR	5002214	ArgumentList	as -> a		5001476	1					
ANR	5002215	Argument	as -> a		5001476	0					
ANR	5002216	PtrMemberAccess	as -> a		5001476	0					
ANR	5002217	Identifier	as		5001476	0					
ANR	5002218	Identifier	a		5001476	1					
ANR	5002219	Argument	"""x86"""		5001476	1					
ANR	5002220	PrimaryExpression	"""x86"""		5001476	0					
ANR	5002221	CompoundStatement		162:39:3031:3031	5001476	1					
ANR	5002222	ExpressionStatement	"eprintf ( ""rasm2: Cannot find asm.x86 plugin\\n"" )"	697:2:16843:16890	5001476	0	True				
ANR	5002223	CallExpression	"eprintf ( ""rasm2: Cannot find asm.x86 plugin\\n"" )"		5001476	0					
ANR	5002224	Callee	eprintf		5001476	0					
ANR	5002225	Identifier	eprintf		5001476	0					
ANR	5002226	ArgumentList	"""rasm2: Cannot find asm.x86 plugin\\n"""		5001476	1					
ANR	5002227	Argument	"""rasm2: Cannot find asm.x86 plugin\\n"""		5001476	0					
ANR	5002228	PrimaryExpression	"""rasm2: Cannot find asm.x86 plugin\\n"""		5001476	0					
ANR	5002229	ExpressionStatement	ret = 0	698:2:16894:16901	5001476	1	True				
ANR	5002230	AssignmentExpression	ret = 0		5001476	0		=			
ANR	5002231	Identifier	ret		5001476	0					
ANR	5002232	PrimaryExpression	0		5001476	1					
ANR	5002233	GotoStatement	goto beach ;	699:2:16905:16915	5001476	2	True				
ANR	5002234	Identifier	beach		5001476	0					
ANR	5002235	ExpressionStatement	"r_asm_set_cpu ( as -> a , cpu )"	701:1:16921:16947	5001476	21	True				
ANR	5002236	CallExpression	"r_asm_set_cpu ( as -> a , cpu )"		5001476	0					
ANR	5002237	Callee	r_asm_set_cpu		5001476	0					
ANR	5002238	Identifier	r_asm_set_cpu		5001476	0					
ANR	5002239	ArgumentList	as -> a		5001476	1					
ANR	5002240	Argument	as -> a		5001476	0					
ANR	5002241	PtrMemberAccess	as -> a		5001476	0					
ANR	5002242	Identifier	as		5001476	0					
ANR	5002243	Identifier	a		5001476	1					
ANR	5002244	Argument	cpu		5001476	1					
ANR	5002245	Identifier	cpu		5001476	0					
ANR	5002246	ExpressionStatement	"r_asm_set_bits ( as -> a , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"	702:1:16950:17020	5001476	22	True				
ANR	5002247	CallExpression	"r_asm_set_bits ( as -> a , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"		5001476	0					
ANR	5002248	Callee	r_asm_set_bits		5001476	0					
ANR	5002249	Identifier	r_asm_set_bits		5001476	0					
ANR	5002250	ArgumentList	as -> a		5001476	1					
ANR	5002251	Argument	as -> a		5001476	0					
ANR	5002252	PtrMemberAccess	as -> a		5001476	0					
ANR	5002253	Identifier	as		5001476	0					
ANR	5002254	Identifier	a		5001476	1					
ANR	5002255	Argument	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5001476	1					
ANR	5002256	ConditionalExpression	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5001476	0					
ANR	5002257	Condition	env_bits && * env_bits		5001476	0					
ANR	5002258	AndExpression	env_bits && * env_bits		5001476	0		&&			
ANR	5002259	Identifier	env_bits		5001476	0					
ANR	5002260	UnaryOperationExpression	* env_bits		5001476	1					
ANR	5002261	UnaryOperator	*		5001476	0					
ANR	5002262	Identifier	env_bits		5001476	1					
ANR	5002263	CallExpression	atoi ( env_bits )		5001476	1					
ANR	5002264	Callee	atoi		5001476	0					
ANR	5002265	Identifier	atoi		5001476	0					
ANR	5002266	ArgumentList	env_bits		5001476	1					
ANR	5002267	Argument	env_bits		5001476	0					
ANR	5002268	Identifier	env_bits		5001476	0					
ANR	5002269	Identifier	bits		5001476	2					
ANR	5002270	ExpressionStatement	"r_anal_set_bits ( as -> anal , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"	703:1:17023:17097	5001476	23	True				
ANR	5002271	CallExpression	"r_anal_set_bits ( as -> anal , ( env_bits && * env_bits ) ? atoi ( env_bits ) : bits )"		5001476	0					
ANR	5002272	Callee	r_anal_set_bits		5001476	0					
ANR	5002273	Identifier	r_anal_set_bits		5001476	0					
ANR	5002274	ArgumentList	as -> anal		5001476	1					
ANR	5002275	Argument	as -> anal		5001476	0					
ANR	5002276	PtrMemberAccess	as -> anal		5001476	0					
ANR	5002277	Identifier	as		5001476	0					
ANR	5002278	Identifier	anal		5001476	1					
ANR	5002279	Argument	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5001476	1					
ANR	5002280	ConditionalExpression	( env_bits && * env_bits ) ? atoi ( env_bits ) : bits		5001476	0					
ANR	5002281	Condition	env_bits && * env_bits		5001476	0					
ANR	5002282	AndExpression	env_bits && * env_bits		5001476	0		&&			
ANR	5002283	Identifier	env_bits		5001476	0					
ANR	5002284	UnaryOperationExpression	* env_bits		5001476	1					
ANR	5002285	UnaryOperator	*		5001476	0					
ANR	5002286	Identifier	env_bits		5001476	1					
ANR	5002287	CallExpression	atoi ( env_bits )		5001476	1					
ANR	5002288	Callee	atoi		5001476	0					
ANR	5002289	Identifier	atoi		5001476	0					
ANR	5002290	ArgumentList	env_bits		5001476	1					
ANR	5002291	Argument	env_bits		5001476	0					
ANR	5002292	Identifier	env_bits		5001476	0					
ANR	5002293	Identifier	bits		5001476	2					
ANR	5002294	ExpressionStatement	as -> a -> syscall = r_syscall_new ( )	704:1:17100:17133	5001476	24	True				
ANR	5002295	AssignmentExpression	as -> a -> syscall = r_syscall_new ( )		5001476	0		=			
ANR	5002296	PtrMemberAccess	as -> a -> syscall		5001476	0					
ANR	5002297	PtrMemberAccess	as -> a		5001476	0					
ANR	5002298	Identifier	as		5001476	0					
ANR	5002299	Identifier	a		5001476	1					
ANR	5002300	Identifier	syscall		5001476	1					
ANR	5002301	CallExpression	r_syscall_new ( )		5001476	1					
ANR	5002302	Callee	r_syscall_new		5001476	0					
ANR	5002303	Identifier	r_syscall_new		5001476	0					
ANR	5002304	ArgumentList			5001476	1					
ANR	5002305	ExpressionStatement	"r_syscall_setup ( as -> a -> syscall , arch , bits , cpu , kernel )"	705:1:17136:17193	5001476	25	True				
ANR	5002306	CallExpression	"r_syscall_setup ( as -> a -> syscall , arch , bits , cpu , kernel )"		5001476	0					
ANR	5002307	Callee	r_syscall_setup		5001476	0					
ANR	5002308	Identifier	r_syscall_setup		5001476	0					
ANR	5002309	ArgumentList	as -> a -> syscall		5001476	1					
ANR	5002310	Argument	as -> a -> syscall		5001476	0					
ANR	5002311	PtrMemberAccess	as -> a -> syscall		5001476	0					
ANR	5002312	PtrMemberAccess	as -> a		5001476	0					
ANR	5002313	Identifier	as		5001476	0					
ANR	5002314	Identifier	a		5001476	1					
ANR	5002315	Identifier	syscall		5001476	1					
ANR	5002316	Argument	arch		5001476	1					
ANR	5002317	Identifier	arch		5001476	0					
ANR	5002318	Argument	bits		5001476	2					
ANR	5002319	Identifier	bits		5001476	0					
ANR	5002320	Argument	cpu		5001476	3					
ANR	5002321	Identifier	cpu		5001476	0					
ANR	5002322	Argument	kernel		5001476	4					
ANR	5002323	Identifier	kernel		5001476	0					
ANR	5002324	CompoundStatement		173:2:3392:3443	5001476	26					
ANR	5002325	IdentifierDeclStatement	"bool canbebig = r_asm_set_big_endian ( as -> a , isbig ) ;"	707:2:17200:17251	5001476	0	True				
ANR	5002326	IdentifierDecl	"canbebig = r_asm_set_big_endian ( as -> a , isbig )"		5001476	0					
ANR	5002327	IdentifierDeclType	bool		5001476	0					
ANR	5002328	Identifier	canbebig		5001476	1					
ANR	5002329	AssignmentExpression	"canbebig = r_asm_set_big_endian ( as -> a , isbig )"		5001476	2		=			
ANR	5002330	Identifier	canbebig		5001476	0					
ANR	5002331	CallExpression	"r_asm_set_big_endian ( as -> a , isbig )"		5001476	1					
ANR	5002332	Callee	r_asm_set_big_endian		5001476	0					
ANR	5002333	Identifier	r_asm_set_big_endian		5001476	0					
ANR	5002334	ArgumentList	as -> a		5001476	1					
ANR	5002335	Argument	as -> a		5001476	0					
ANR	5002336	PtrMemberAccess	as -> a		5001476	0					
ANR	5002337	Identifier	as		5001476	0					
ANR	5002338	Identifier	a		5001476	1					
ANR	5002339	Argument	isbig		5001476	1					
ANR	5002340	Identifier	isbig		5001476	0					
ANR	5002341	IfStatement	if ( isbig && ! canbebig )		5001476	1					
ANR	5002342	Condition	isbig && ! canbebig	708:6:17259:17276	5001476	0	True				
ANR	5002343	AndExpression	isbig && ! canbebig		5001476	0		&&			
ANR	5002344	Identifier	isbig		5001476	0					
ANR	5002345	UnaryOperationExpression	! canbebig		5001476	1					
ANR	5002346	UnaryOperator	!		5001476	0					
ANR	5002347	Identifier	canbebig		5001476	1					
ANR	5002348	CompoundStatement		174:26:3471:3471	5001476	1					
ANR	5002349	ExpressionStatement	"eprintf ( ""Warning: This architecture can't swap to big endian.\\n"" )"	709:3:17284:17350	5001476	0	True				
ANR	5002350	CallExpression	"eprintf ( ""Warning: This architecture can't swap to big endian.\\n"" )"		5001476	0					
ANR	5002351	Callee	eprintf		5001476	0					
ANR	5002352	Identifier	eprintf		5001476	0					
ANR	5002353	ArgumentList	"""Warning: This architecture can't swap to big endian.\\n"""		5001476	1					
ANR	5002354	Argument	"""Warning: This architecture can't swap to big endian.\\n"""		5001476	0					
ANR	5002355	PrimaryExpression	"""Warning: This architecture can't swap to big endian.\\n"""		5001476	0					
ANR	5002356	ExpressionStatement	"r_anal_set_big_endian ( as -> anal , canbebig )"	711:2:17358:17400	5001476	2	True				
ANR	5002357	CallExpression	"r_anal_set_big_endian ( as -> anal , canbebig )"		5001476	0					
ANR	5002358	Callee	r_anal_set_big_endian		5001476	0					
ANR	5002359	Identifier	r_anal_set_big_endian		5001476	0					
ANR	5002360	ArgumentList	as -> anal		5001476	1					
ANR	5002361	Argument	as -> anal		5001476	0					
ANR	5002362	PtrMemberAccess	as -> anal		5001476	0					
ANR	5002363	Identifier	as		5001476	0					
ANR	5002364	Identifier	anal		5001476	1					
ANR	5002365	Argument	canbebig		5001476	1					
ANR	5002366	Identifier	canbebig		5001476	0					
ANR	5002367	IfStatement	if ( whatsop )		5001476	27					
ANR	5002368	Condition	whatsop	713:5:17410:17416	5001476	0	True				
ANR	5002369	Identifier	whatsop		5001476	0					
ANR	5002370	CompoundStatement		180:2:3615:3669	5001476	1					
ANR	5002371	IdentifierDeclStatement	"const char * s = r_asm_describe ( as -> a , argv [ r_optind ] ) ;"	714:2:17423:17477	5001476	0	True				
ANR	5002372	IdentifierDecl	"* s = r_asm_describe ( as -> a , argv [ r_optind ] )"		5001476	0					
ANR	5002373	IdentifierDeclType	const char *		5001476	0					
ANR	5002374	Identifier	s		5001476	1					
ANR	5002375	AssignmentExpression	"* s = r_asm_describe ( as -> a , argv [ r_optind ] )"		5001476	2		=			
ANR	5002376	Identifier	s		5001476	0					
ANR	5002377	CallExpression	"r_asm_describe ( as -> a , argv [ r_optind ] )"		5001476	1					
ANR	5002378	Callee	r_asm_describe		5001476	0					
ANR	5002379	Identifier	r_asm_describe		5001476	0					
ANR	5002380	ArgumentList	as -> a		5001476	1					
ANR	5002381	Argument	as -> a		5001476	0					
ANR	5002382	PtrMemberAccess	as -> a		5001476	0					
ANR	5002383	Identifier	as		5001476	0					
ANR	5002384	Identifier	a		5001476	1					
ANR	5002385	Argument	argv [ r_optind ]		5001476	1					
ANR	5002386	ArrayIndexing	argv [ r_optind ]		5001476	0					
ANR	5002387	Identifier	argv		5001476	0					
ANR	5002388	Identifier	r_optind		5001476	1					
ANR	5002389	ExpressionStatement	ret = 1	715:2:17481:17488	5001476	1	True				
ANR	5002390	AssignmentExpression	ret = 1		5001476	0		=			
ANR	5002391	Identifier	ret		5001476	0					
ANR	5002392	PrimaryExpression	1		5001476	1					
ANR	5002393	IfStatement	if ( s )		5001476	2					
ANR	5002394	Condition	s	716:6:17496:17496	5001476	0	True				
ANR	5002395	Identifier	s		5001476	0					
ANR	5002396	CompoundStatement		182:9:3691:3691	5001476	1					
ANR	5002397	ExpressionStatement	"printf ( ""%s\\n"" , s )"	717:3:17504:17522	5001476	0	True				
ANR	5002398	CallExpression	"printf ( ""%s\\n"" , s )"		5001476	0					
ANR	5002399	Callee	printf		5001476	0					
ANR	5002400	Identifier	printf		5001476	0					
ANR	5002401	ArgumentList	"""%s\\n"""		5001476	1					
ANR	5002402	Argument	"""%s\\n"""		5001476	0					
ANR	5002403	PrimaryExpression	"""%s\\n"""		5001476	0					
ANR	5002404	Argument	s		5001476	1					
ANR	5002405	Identifier	s		5001476	0					
ANR	5002406	ExpressionStatement	ret = 0	718:3:17527:17534	5001476	1	True				
ANR	5002407	AssignmentExpression	ret = 0		5001476	0		=			
ANR	5002408	Identifier	ret		5001476	0					
ANR	5002409	PrimaryExpression	0		5001476	1					
ANR	5002410	GotoStatement	goto beach ;	720:2:17542:17552	5001476	3	True				
ANR	5002411	Identifier	beach		5001476	0					
ANR	5002412	IfStatement	if ( filters )		5001476	28					
ANR	5002413	Condition	filters	722:5:17562:17568	5001476	0	True				
ANR	5002414	Identifier	filters		5001476	0					
ANR	5002415	CompoundStatement		189:2:3767:3798	5001476	1					
ANR	5002416	IdentifierDeclStatement	"char * p = strchr ( filters , ':' ) ;"	723:2:17575:17606	5001476	0	True				
ANR	5002417	IdentifierDecl	"* p = strchr ( filters , ':' )"		5001476	0					
ANR	5002418	IdentifierDeclType	char *		5001476	0					
ANR	5002419	Identifier	p		5001476	1					
ANR	5002420	AssignmentExpression	"* p = strchr ( filters , ':' )"		5001476	2		=			
ANR	5002421	Identifier	p		5001476	0					
ANR	5002422	CallExpression	"strchr ( filters , ':' )"		5001476	1					
ANR	5002423	Callee	strchr		5001476	0					
ANR	5002424	Identifier	strchr		5001476	0					
ANR	5002425	ArgumentList	filters		5001476	1					
ANR	5002426	Argument	filters		5001476	0					
ANR	5002427	Identifier	filters		5001476	0					
ANR	5002428	Argument	':'		5001476	1					
ANR	5002429	PrimaryExpression	':'		5001476	0					
ANR	5002430	IfStatement	if ( p )		5001476	1					
ANR	5002431	Condition	p	724:6:17614:17614	5001476	0	True				
ANR	5002432	Identifier	p		5001476	0					
ANR	5002433	CompoundStatement		190:9:3809:3809	5001476	1					
ANR	5002434	ExpressionStatement	* p = 0	725:3:17622:17628	5001476	0	True				
ANR	5002435	AssignmentExpression	* p = 0		5001476	0		=			
ANR	5002436	UnaryOperationExpression	* p		5001476	0					
ANR	5002437	UnaryOperator	*		5001476	0					
ANR	5002438	Identifier	p		5001476	1					
ANR	5002439	PrimaryExpression	0		5001476	1					
ANR	5002440	IfStatement	if ( * filters )		5001476	1					
ANR	5002441	Condition	* filters	726:7:17637:17644	5001476	0	True				
ANR	5002442	UnaryOperationExpression	* filters		5001476	0					
ANR	5002443	UnaryOperator	*		5001476	0					
ANR	5002444	Identifier	filters		5001476	1					
ANR	5002445	CompoundStatement		192:17:3839:3839	5001476	1					
ANR	5002446	ExpressionStatement	"r_asm_filter_input ( as -> a , filters )"	727:4:17653:17688	5001476	0	True				
ANR	5002447	CallExpression	"r_asm_filter_input ( as -> a , filters )"		5001476	0					
ANR	5002448	Callee	r_asm_filter_input		5001476	0					
ANR	5002449	Identifier	r_asm_filter_input		5001476	0					
ANR	5002450	ArgumentList	as -> a		5001476	1					
ANR	5002451	Argument	as -> a		5001476	0					
ANR	5002452	PtrMemberAccess	as -> a		5001476	0					
ANR	5002453	Identifier	as		5001476	0					
ANR	5002454	Identifier	a		5001476	1					
ANR	5002455	Argument	filters		5001476	1					
ANR	5002456	Identifier	filters		5001476	0					
ANR	5002457	IfStatement	if ( p [ 1 ] )		5001476	2					
ANR	5002458	Condition	p [ 1 ]	729:7:17702:17705	5001476	0	True				
ANR	5002459	ArrayIndexing	p [ 1 ]		5001476	0					
ANR	5002460	Identifier	p		5001476	0					
ANR	5002461	PrimaryExpression	1		5001476	1					
ANR	5002462	CompoundStatement		195:13:3900:3900	5001476	1					
ANR	5002463	ExpressionStatement	"r_asm_filter_output ( as -> a , p + 1 )"	730:4:17714:17748	5001476	0	True				
ANR	5002464	CallExpression	"r_asm_filter_output ( as -> a , p + 1 )"		5001476	0					
ANR	5002465	Callee	r_asm_filter_output		5001476	0					
ANR	5002466	Identifier	r_asm_filter_output		5001476	0					
ANR	5002467	ArgumentList	as -> a		5001476	1					
ANR	5002468	Argument	as -> a		5001476	0					
ANR	5002469	PtrMemberAccess	as -> a		5001476	0					
ANR	5002470	Identifier	as		5001476	0					
ANR	5002471	Identifier	a		5001476	1					
ANR	5002472	Argument	p + 1		5001476	1					
ANR	5002473	AdditiveExpression	p + 1		5001476	0		+			
ANR	5002474	Identifier	p		5001476	0					
ANR	5002475	PrimaryExpression	1		5001476	1					
ANR	5002476	ExpressionStatement	* p = ':'	732:3:17758:17766	5001476	3	True				
ANR	5002477	AssignmentExpression	* p = ':'		5001476	0		=			
ANR	5002478	UnaryOperationExpression	* p		5001476	0					
ANR	5002479	UnaryOperator	*		5001476	0					
ANR	5002480	Identifier	p		5001476	1					
ANR	5002481	PrimaryExpression	':'		5001476	1					
ANR	5002482	ElseStatement	else		5001476	0					
ANR	5002483	CompoundStatement		199:9:3969:3969	5001476	0					
ANR	5002484	IfStatement	if ( dis )		5001476	0					
ANR	5002485	Condition	dis	734:7:17786:17788	5001476	0	True				
ANR	5002486	Identifier	dis		5001476	0					
ANR	5002487	CompoundStatement		200:12:3983:3983	5001476	1					
ANR	5002488	ExpressionStatement	"r_asm_filter_output ( as -> a , filters )"	735:4:17797:17833	5001476	0	True				
ANR	5002489	CallExpression	"r_asm_filter_output ( as -> a , filters )"		5001476	0					
ANR	5002490	Callee	r_asm_filter_output		5001476	0					
ANR	5002491	Identifier	r_asm_filter_output		5001476	0					
ANR	5002492	ArgumentList	as -> a		5001476	1					
ANR	5002493	Argument	as -> a		5001476	0					
ANR	5002494	PtrMemberAccess	as -> a		5001476	0					
ANR	5002495	Identifier	as		5001476	0					
ANR	5002496	Identifier	a		5001476	1					
ANR	5002497	Argument	filters		5001476	1					
ANR	5002498	Identifier	filters		5001476	0					
ANR	5002499	ElseStatement	else		5001476	0					
ANR	5002500	CompoundStatement		202:10:4037:4037	5001476	0					
ANR	5002501	ExpressionStatement	"r_asm_filter_input ( as -> a , filters )"	737:4:17851:17886	5001476	0	True				
ANR	5002502	CallExpression	"r_asm_filter_input ( as -> a , filters )"		5001476	0					
ANR	5002503	Callee	r_asm_filter_input		5001476	0					
ANR	5002504	Identifier	r_asm_filter_input		5001476	0					
ANR	5002505	ArgumentList	as -> a		5001476	1					
ANR	5002506	Argument	as -> a		5001476	0					
ANR	5002507	PtrMemberAccess	as -> a		5001476	0					
ANR	5002508	Identifier	as		5001476	0					
ANR	5002509	Identifier	a		5001476	1					
ANR	5002510	Argument	filters		5001476	1					
ANR	5002511	Identifier	filters		5001476	0					
ANR	5002512	IfStatement	if ( file )		5001476	29					
ANR	5002513	Condition	file	742:5:17906:17909	5001476	0	True				
ANR	5002514	Identifier	file		5001476	0					
ANR	5002515	CompoundStatement		210:2:4125:4139	5001476	1					
ANR	5002516	IdentifierDeclStatement	char * content ;	743:2:17916:17929	5001476	0	True				
ANR	5002517	IdentifierDecl	* content		5001476	0					
ANR	5002518	IdentifierDeclType	char *		5001476	0					
ANR	5002519	Identifier	content		5001476	1					
ANR	5002520	IdentifierDeclStatement	int length = 0 ;	744:2:17933:17947	5001476	1	True				
ANR	5002521	IdentifierDecl	length = 0		5001476	0					
ANR	5002522	IdentifierDeclType	int		5001476	0					
ANR	5002523	Identifier	length		5001476	1					
ANR	5002524	AssignmentExpression	length = 0		5001476	2		=			
ANR	5002525	Identifier	length		5001476	0					
ANR	5002526	PrimaryExpression	0		5001476	1					
ANR	5002527	IfStatement	"if ( ! strcmp ( file , ""-"" ) )"		5001476	2					
ANR	5002528	Condition	"! strcmp ( file , ""-"" )"	745:6:17955:17973	5001476	0	True				
ANR	5002529	UnaryOperationExpression	"! strcmp ( file , ""-"" )"		5001476	0					
ANR	5002530	UnaryOperator	!		5001476	0					
ANR	5002531	CallExpression	"strcmp ( file , ""-"" )"		5001476	1					
ANR	5002532	Callee	strcmp		5001476	0					
ANR	5002533	Identifier	strcmp		5001476	0					
ANR	5002534	ArgumentList	file		5001476	1					
ANR	5002535	Argument	file		5001476	0					
ANR	5002536	Identifier	file		5001476	0					
ANR	5002537	Argument	"""-"""		5001476	1					
ANR	5002538	PrimaryExpression	"""-"""		5001476	0					
ANR	5002539	CompoundStatement		213:3:4188:4225	5001476	1					
ANR	5002540	IdentifierDeclStatement	int sz = 0 ;	746:3:17981:17991	5001476	0	True				
ANR	5002541	IdentifierDecl	sz = 0		5001476	0					
ANR	5002542	IdentifierDeclType	int		5001476	0					
ANR	5002543	Identifier	sz		5001476	1					
ANR	5002544	AssignmentExpression	sz = 0		5001476	2		=			
ANR	5002545	Identifier	sz		5001476	0					
ANR	5002546	PrimaryExpression	0		5001476	1					
ANR	5002547	IdentifierDeclStatement	ut8 * buf = ( ut8 * ) r_stdin_slurp ( & sz ) ;	747:3:17996:18033	5001476	1	True				
ANR	5002548	IdentifierDecl	* buf = ( ut8 * ) r_stdin_slurp ( & sz )		5001476	0					
ANR	5002549	IdentifierDeclType	ut8 *		5001476	0					
ANR	5002550	Identifier	buf		5001476	1					
ANR	5002551	AssignmentExpression	* buf = ( ut8 * ) r_stdin_slurp ( & sz )		5001476	2		=			
ANR	5002552	Identifier	buf		5001476	0					
ANR	5002553	CastExpression	( ut8 * ) r_stdin_slurp ( & sz )		5001476	1					
ANR	5002554	CastTarget	ut8 *		5001476	0					
ANR	5002555	CallExpression	r_stdin_slurp ( & sz )		5001476	1					
ANR	5002556	Callee	r_stdin_slurp		5001476	0					
ANR	5002557	Identifier	r_stdin_slurp		5001476	0					
ANR	5002558	ArgumentList	& sz		5001476	1					
ANR	5002559	Argument	& sz		5001476	0					
ANR	5002560	UnaryOperationExpression	& sz		5001476	0					
ANR	5002561	UnaryOperator	&		5001476	0					
ANR	5002562	Identifier	sz		5001476	1					
ANR	5002563	IfStatement	if ( ! buf || sz < 1 )		5001476	2					
ANR	5002564	Condition	! buf || sz < 1	748:7:18042:18055	5001476	0	True				
ANR	5002565	OrExpression	! buf || sz < 1		5001476	0		||			
ANR	5002566	UnaryOperationExpression	! buf		5001476	0					
ANR	5002567	UnaryOperator	!		5001476	0					
ANR	5002568	Identifier	buf		5001476	1					
ANR	5002569	RelationalExpression	sz < 1		5001476	1		<			
ANR	5002570	Identifier	sz		5001476	0					
ANR	5002571	PrimaryExpression	1		5001476	1					
ANR	5002572	CompoundStatement		214:23:4250:4250	5001476	1					
ANR	5002573	ExpressionStatement	"eprintf ( ""Nothing to do.\\n"" )"	749:4:18064:18092	5001476	0	True				
ANR	5002574	CallExpression	"eprintf ( ""Nothing to do.\\n"" )"		5001476	0					
ANR	5002575	Callee	eprintf		5001476	0					
ANR	5002576	Identifier	eprintf		5001476	0					
ANR	5002577	ArgumentList	"""Nothing to do.\\n"""		5001476	1					
ANR	5002578	Argument	"""Nothing to do.\\n"""		5001476	0					
ANR	5002579	PrimaryExpression	"""Nothing to do.\\n"""		5001476	0					
ANR	5002580	GotoStatement	goto beach ;	750:4:18098:18108	5001476	1	True				
ANR	5002581	Identifier	beach		5001476	0					
ANR	5002582	ExpressionStatement	len = ( ut64 ) sz	752:3:18118:18132	5001476	3	True				
ANR	5002583	AssignmentExpression	len = ( ut64 ) sz		5001476	0		=			
ANR	5002584	Identifier	len		5001476	0					
ANR	5002585	CastExpression	( ut64 ) sz		5001476	1					
ANR	5002586	CastTarget	ut64		5001476	0					
ANR	5002587	Identifier	sz		5001476	1					
ANR	5002588	IfStatement	if ( dis )		5001476	4					
ANR	5002589	Condition	dis	753:7:18141:18143	5001476	0	True				
ANR	5002590	Identifier	dis		5001476	0					
ANR	5002591	CompoundStatement		219:12:4338:4338	5001476	1					
ANR	5002592	IfStatement	if ( skip && length > skip )		5001476	0					
ANR	5002593	Condition	skip && length > skip	754:8:18156:18176	5001476	0	True				
ANR	5002594	AndExpression	skip && length > skip		5001476	0		&&			
ANR	5002595	Identifier	skip		5001476	0					
ANR	5002596	RelationalExpression	length > skip		5001476	1		>			
ANR	5002597	Identifier	length		5001476	0					
ANR	5002598	Identifier	skip		5001476	1					
ANR	5002599	CompoundStatement		220:31:4371:4371	5001476	1					
ANR	5002600	IfStatement	if ( bin )		5001476	0					
ANR	5002601	Condition	bin	755:9:18190:18192	5001476	0	True				
ANR	5002602	Identifier	bin		5001476	0					
ANR	5002603	CompoundStatement		221:14:4387:4387	5001476	1					
ANR	5002604	ExpressionStatement	"memmove ( buf , buf + skip , length - skip )"	756:6:18203:18243	5001476	0	True				
ANR	5002605	CallExpression	"memmove ( buf , buf + skip , length - skip )"		5001476	0					
ANR	5002606	Callee	memmove		5001476	0					
ANR	5002607	Identifier	memmove		5001476	0					
ANR	5002608	ArgumentList	buf		5001476	1					
ANR	5002609	Argument	buf		5001476	0					
ANR	5002610	Identifier	buf		5001476	0					
ANR	5002611	Argument	buf + skip		5001476	1					
ANR	5002612	AdditiveExpression	buf + skip		5001476	0		+			
ANR	5002613	Identifier	buf		5001476	0					
ANR	5002614	Identifier	skip		5001476	1					
ANR	5002615	Argument	length - skip		5001476	2					
ANR	5002616	AdditiveExpression	length - skip		5001476	0		-			
ANR	5002617	Identifier	length		5001476	0					
ANR	5002618	Identifier	skip		5001476	1					
ANR	5002619	ExpressionStatement	length -= skip	757:6:18251:18265	5001476	1	True				
ANR	5002620	AssignmentExpression	length -= skip		5001476	0		-=			
ANR	5002621	Identifier	length		5001476	0					
ANR	5002622	Identifier	skip		5001476	1					
ANR	5002623	ExpressionStatement	"ret = rasm_disasm ( as , ( char * ) buf , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"	760:4:18284:18366	5001476	1	True				
ANR	5002624	AssignmentExpression	"ret = rasm_disasm ( as , ( char * ) buf , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	0		=			
ANR	5002625	Identifier	ret		5001476	0					
ANR	5002626	CallExpression	"rasm_disasm ( as , ( char * ) buf , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	1					
ANR	5002627	Callee	rasm_disasm		5001476	0					
ANR	5002628	Identifier	rasm_disasm		5001476	0					
ANR	5002629	ArgumentList	as		5001476	1					
ANR	5002630	Argument	as		5001476	0					
ANR	5002631	Identifier	as		5001476	0					
ANR	5002632	Argument	( char * ) buf		5001476	1					
ANR	5002633	CastExpression	( char * ) buf		5001476	0					
ANR	5002634	CastTarget	char *		5001476	0					
ANR	5002635	Identifier	buf		5001476	1					
ANR	5002636	Argument	offset		5001476	2					
ANR	5002637	Identifier	offset		5001476	0					
ANR	5002638	Argument	len		5001476	3					
ANR	5002639	Identifier	len		5001476	0					
ANR	5002640	Argument	as -> a -> bits		5001476	4					
ANR	5002641	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5002642	PtrMemberAccess	as -> a		5001476	0					
ANR	5002643	Identifier	as		5001476	0					
ANR	5002644	Identifier	a		5001476	1					
ANR	5002645	Identifier	bits		5001476	1					
ANR	5002646	Argument	ascii		5001476	5					
ANR	5002647	Identifier	ascii		5001476	0					
ANR	5002648	Argument	bin		5001476	6					
ANR	5002649	Identifier	bin		5001476	0					
ANR	5002650	Argument	dis - 1		5001476	7					
ANR	5002651	AdditiveExpression	dis - 1		5001476	0		-			
ANR	5002652	Identifier	dis		5001476	0					
ANR	5002653	PrimaryExpression	1		5001476	1					
ANR	5002654	ElseStatement	else		5001476	0					
ANR	5002655	IfStatement	if ( analinfo )		5001476	0					
ANR	5002656	Condition	analinfo	761:14:18382:18389	5001476	0	True				
ANR	5002657	Identifier	analinfo		5001476	0					
ANR	5002658	CompoundStatement		227:24:4584:4584	5001476	1					
ANR	5002659	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) buf , offset )"	762:4:18398:18449	5001476	0	True				
ANR	5002660	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) buf , offset )"		5001476	0		=			
ANR	5002661	Identifier	ret		5001476	0					
ANR	5002662	CallExpression	"show_analinfo ( as , ( const char * ) buf , offset )"		5001476	1					
ANR	5002663	Callee	show_analinfo		5001476	0					
ANR	5002664	Identifier	show_analinfo		5001476	0					
ANR	5002665	ArgumentList	as		5001476	1					
ANR	5002666	Argument	as		5001476	0					
ANR	5002667	Identifier	as		5001476	0					
ANR	5002668	Argument	( const char * ) buf		5001476	1					
ANR	5002669	CastExpression	( const char * ) buf		5001476	0					
ANR	5002670	CastTarget	const char *		5001476	0					
ANR	5002671	Identifier	buf		5001476	1					
ANR	5002672	Argument	offset		5001476	2					
ANR	5002673	Identifier	offset		5001476	0					
ANR	5002674	ElseStatement	else		5001476	0					
ANR	5002675	CompoundStatement		229:10:4653:4653	5001476	0					
ANR	5002676	ExpressionStatement	"ret = print_assembly_output ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"	764:4:18467:18578	5001476	0	True				
ANR	5002677	AssignmentExpression	"ret = print_assembly_output ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5001476	0		=			
ANR	5002678	Identifier	ret		5001476	0					
ANR	5002679	CallExpression	"print_assembly_output ( as , ( char * ) buf , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5001476	1					
ANR	5002680	Callee	print_assembly_output		5001476	0					
ANR	5002681	Identifier	print_assembly_output		5001476	0					
ANR	5002682	ArgumentList	as		5001476	1					
ANR	5002683	Argument	as		5001476	0					
ANR	5002684	Identifier	as		5001476	0					
ANR	5002685	Argument	( char * ) buf		5001476	1					
ANR	5002686	CastExpression	( char * ) buf		5001476	0					
ANR	5002687	CastTarget	char *		5001476	0					
ANR	5002688	Identifier	buf		5001476	1					
ANR	5002689	Argument	offset		5001476	2					
ANR	5002690	Identifier	offset		5001476	0					
ANR	5002691	Argument	len		5001476	3					
ANR	5002692	Identifier	len		5001476	0					
ANR	5002693	Argument	as -> a -> bits		5001476	4					
ANR	5002694	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5002695	PtrMemberAccess	as -> a		5001476	0					
ANR	5002696	Identifier	as		5001476	0					
ANR	5002697	Identifier	a		5001476	1					
ANR	5002698	Identifier	bits		5001476	1					
ANR	5002699	Argument	bin		5001476	5					
ANR	5002700	Identifier	bin		5001476	0					
ANR	5002701	Argument	use_spp		5001476	6					
ANR	5002702	Identifier	use_spp		5001476	0					
ANR	5002703	Argument	rad		5001476	7					
ANR	5002704	Identifier	rad		5001476	0					
ANR	5002705	Argument	hexwords		5001476	8					
ANR	5002706	Identifier	hexwords		5001476	0					
ANR	5002707	Argument	arch		5001476	9					
ANR	5002708	Identifier	arch		5001476	0					
ANR	5002709	ExpressionStatement	free ( buf )	767:3:18588:18598	5001476	5	True				
ANR	5002710	CallExpression	free ( buf )		5001476	0					
ANR	5002711	Callee	free		5001476	0					
ANR	5002712	Identifier	free		5001476	0					
ANR	5002713	ArgumentList	buf		5001476	1					
ANR	5002714	Argument	buf		5001476	0					
ANR	5002715	Identifier	buf		5001476	0					
ANR	5002716	ElseStatement	else		5001476	0					
ANR	5002717	CompoundStatement		234:9:4801:4801	5001476	0					
ANR	5002718	ExpressionStatement	"content = r_file_slurp ( file , & length )"	769:3:18614:18652	5001476	0	True				
ANR	5002719	AssignmentExpression	"content = r_file_slurp ( file , & length )"		5001476	0		=			
ANR	5002720	Identifier	content		5001476	0					
ANR	5002721	CallExpression	"r_file_slurp ( file , & length )"		5001476	1					
ANR	5002722	Callee	r_file_slurp		5001476	0					
ANR	5002723	Identifier	r_file_slurp		5001476	0					
ANR	5002724	ArgumentList	file		5001476	1					
ANR	5002725	Argument	file		5001476	0					
ANR	5002726	Identifier	file		5001476	0					
ANR	5002727	Argument	& length		5001476	1					
ANR	5002728	UnaryOperationExpression	& length		5001476	0					
ANR	5002729	UnaryOperator	&		5001476	0					
ANR	5002730	Identifier	length		5001476	1					
ANR	5002731	IfStatement	if ( content )		5001476	1					
ANR	5002732	Condition	content	770:7:18661:18667	5001476	0	True				
ANR	5002733	Identifier	content		5001476	0					
ANR	5002734	CompoundStatement		236:16:4862:4862	5001476	1					
ANR	5002735	IfStatement	if ( len && len > 0 && len < length )		5001476	0					
ANR	5002736	Condition	len && len > 0 && len < length	771:8:18680:18709	5001476	0	True				
ANR	5002737	AndExpression	len && len > 0 && len < length		5001476	0		&&			
ANR	5002738	Identifier	len		5001476	0					
ANR	5002739	AndExpression	len > 0 && len < length		5001476	1		&&			
ANR	5002740	RelationalExpression	len > 0		5001476	0		>			
ANR	5002741	Identifier	len		5001476	0					
ANR	5002742	PrimaryExpression	0		5001476	1					
ANR	5002743	RelationalExpression	len < length		5001476	1		<			
ANR	5002744	Identifier	len		5001476	0					
ANR	5002745	Identifier	length		5001476	1					
ANR	5002746	CompoundStatement		237:40:4904:4904	5001476	1					
ANR	5002747	ExpressionStatement	length = len	772:5:18719:18731	5001476	0	True				
ANR	5002748	AssignmentExpression	length = len		5001476	0		=			
ANR	5002749	Identifier	length		5001476	0					
ANR	5002750	Identifier	len		5001476	1					
ANR	5002751	ExpressionStatement	content [ length ] = '\\0'	774:4:18743:18765	5001476	1	True				
ANR	5002752	AssignmentExpression	content [ length ] = '\\0'		5001476	0		=			
ANR	5002753	ArrayIndexing	content [ length ]		5001476	0					
ANR	5002754	Identifier	content		5001476	0					
ANR	5002755	Identifier	length		5001476	1					
ANR	5002756	PrimaryExpression	'\\0'		5001476	1					
ANR	5002757	IfStatement	if ( skip && length > skip )		5001476	2					
ANR	5002758	Condition	skip && length > skip	775:8:18775:18795	5001476	0	True				
ANR	5002759	AndExpression	skip && length > skip		5001476	0		&&			
ANR	5002760	Identifier	skip		5001476	0					
ANR	5002761	RelationalExpression	length > skip		5001476	1		>			
ANR	5002762	Identifier	length		5001476	0					
ANR	5002763	Identifier	skip		5001476	1					
ANR	5002764	CompoundStatement		241:31:4990:4990	5001476	1					
ANR	5002765	IfStatement	if ( bin )		5001476	0					
ANR	5002766	Condition	bin	776:9:18809:18811	5001476	0	True				
ANR	5002767	Identifier	bin		5001476	0					
ANR	5002768	CompoundStatement		242:14:5006:5006	5001476	1					
ANR	5002769	ExpressionStatement	"memmove ( content , content + skip , length - skip )"	777:6:18822:18870	5001476	0	True				
ANR	5002770	CallExpression	"memmove ( content , content + skip , length - skip )"		5001476	0					
ANR	5002771	Callee	memmove		5001476	0					
ANR	5002772	Identifier	memmove		5001476	0					
ANR	5002773	ArgumentList	content		5001476	1					
ANR	5002774	Argument	content		5001476	0					
ANR	5002775	Identifier	content		5001476	0					
ANR	5002776	Argument	content + skip		5001476	1					
ANR	5002777	AdditiveExpression	content + skip		5001476	0		+			
ANR	5002778	Identifier	content		5001476	0					
ANR	5002779	Identifier	skip		5001476	1					
ANR	5002780	Argument	length - skip		5001476	2					
ANR	5002781	AdditiveExpression	length - skip		5001476	0		-			
ANR	5002782	Identifier	length		5001476	0					
ANR	5002783	Identifier	skip		5001476	1					
ANR	5002784	ExpressionStatement	length -= skip	778:6:18878:18892	5001476	1	True				
ANR	5002785	AssignmentExpression	length -= skip		5001476	0		-=			
ANR	5002786	Identifier	length		5001476	0					
ANR	5002787	Identifier	skip		5001476	1					
ANR	5002788	IfStatement	if ( dis )		5001476	3					
ANR	5002789	Condition	dis	781:8:18915:18917	5001476	0	True				
ANR	5002790	Identifier	dis		5001476	0					
ANR	5002791	CompoundStatement		247:13:5112:5112	5001476	1					
ANR	5002792	ExpressionStatement	"ret = rasm_disasm ( as , content , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"	782:5:18927:19015	5001476	0	True				
ANR	5002793	AssignmentExpression	"ret = rasm_disasm ( as , content , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	0		=			
ANR	5002794	Identifier	ret		5001476	0					
ANR	5002795	CallExpression	"rasm_disasm ( as , content , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	1					
ANR	5002796	Callee	rasm_disasm		5001476	0					
ANR	5002797	Identifier	rasm_disasm		5001476	0					
ANR	5002798	ArgumentList	as		5001476	1					
ANR	5002799	Argument	as		5001476	0					
ANR	5002800	Identifier	as		5001476	0					
ANR	5002801	Argument	content		5001476	1					
ANR	5002802	Identifier	content		5001476	0					
ANR	5002803	Argument	offset		5001476	2					
ANR	5002804	Identifier	offset		5001476	0					
ANR	5002805	Argument	length		5001476	3					
ANR	5002806	Identifier	length		5001476	0					
ANR	5002807	Argument	as -> a -> bits		5001476	4					
ANR	5002808	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5002809	PtrMemberAccess	as -> a		5001476	0					
ANR	5002810	Identifier	as		5001476	0					
ANR	5002811	Identifier	a		5001476	1					
ANR	5002812	Identifier	bits		5001476	1					
ANR	5002813	Argument	ascii		5001476	5					
ANR	5002814	Identifier	ascii		5001476	0					
ANR	5002815	Argument	bin		5001476	6					
ANR	5002816	Identifier	bin		5001476	0					
ANR	5002817	Argument	dis - 1		5001476	7					
ANR	5002818	AdditiveExpression	dis - 1		5001476	0		-			
ANR	5002819	Identifier	dis		5001476	0					
ANR	5002820	PrimaryExpression	1		5001476	1					
ANR	5002821	ElseStatement	else		5001476	0					
ANR	5002822	IfStatement	if ( analinfo )		5001476	0					
ANR	5002823	Condition	analinfo	784:15:19032:19039	5001476	0	True				
ANR	5002824	Identifier	analinfo		5001476	0					
ANR	5002825	CompoundStatement		250:25:5234:5234	5001476	1					
ANR	5002826	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) content , offset )"	785:5:19049:19104	5001476	0	True				
ANR	5002827	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) content , offset )"		5001476	0		=			
ANR	5002828	Identifier	ret		5001476	0					
ANR	5002829	CallExpression	"show_analinfo ( as , ( const char * ) content , offset )"		5001476	1					
ANR	5002830	Callee	show_analinfo		5001476	0					
ANR	5002831	Identifier	show_analinfo		5001476	0					
ANR	5002832	ArgumentList	as		5001476	1					
ANR	5002833	Argument	as		5001476	0					
ANR	5002834	Identifier	as		5001476	0					
ANR	5002835	Argument	( const char * ) content		5001476	1					
ANR	5002836	CastExpression	( const char * ) content		5001476	0					
ANR	5002837	CastTarget	const char *		5001476	0					
ANR	5002838	Identifier	content		5001476	1					
ANR	5002839	Argument	offset		5001476	2					
ANR	5002840	Identifier	offset		5001476	0					
ANR	5002841	ElseStatement	else		5001476	0					
ANR	5002842	CompoundStatement		252:11:5309:5309	5001476	0					
ANR	5002843	ExpressionStatement	"ret = print_assembly_output ( as , content , offset , length , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"	787:5:19124:19236	5001476	0	True				
ANR	5002844	AssignmentExpression	"ret = print_assembly_output ( as , content , offset , length , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5001476	0		=			
ANR	5002845	Identifier	ret		5001476	0					
ANR	5002846	CallExpression	"print_assembly_output ( as , content , offset , length , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5001476	1					
ANR	5002847	Callee	print_assembly_output		5001476	0					
ANR	5002848	Identifier	print_assembly_output		5001476	0					
ANR	5002849	ArgumentList	as		5001476	1					
ANR	5002850	Argument	as		5001476	0					
ANR	5002851	Identifier	as		5001476	0					
ANR	5002852	Argument	content		5001476	1					
ANR	5002853	Identifier	content		5001476	0					
ANR	5002854	Argument	offset		5001476	2					
ANR	5002855	Identifier	offset		5001476	0					
ANR	5002856	Argument	length		5001476	3					
ANR	5002857	Identifier	length		5001476	0					
ANR	5002858	Argument	as -> a -> bits		5001476	4					
ANR	5002859	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5002860	PtrMemberAccess	as -> a		5001476	0					
ANR	5002861	Identifier	as		5001476	0					
ANR	5002862	Identifier	a		5001476	1					
ANR	5002863	Identifier	bits		5001476	1					
ANR	5002864	Argument	bin		5001476	5					
ANR	5002865	Identifier	bin		5001476	0					
ANR	5002866	Argument	use_spp		5001476	6					
ANR	5002867	Identifier	use_spp		5001476	0					
ANR	5002868	Argument	rad		5001476	7					
ANR	5002869	Identifier	rad		5001476	0					
ANR	5002870	Argument	hexwords		5001476	8					
ANR	5002871	Identifier	hexwords		5001476	0					
ANR	5002872	Argument	arch		5001476	9					
ANR	5002873	Identifier	arch		5001476	0					
ANR	5002874	ExpressionStatement	ret = ! ret	790:4:19248:19258	5001476	4	True				
ANR	5002875	AssignmentExpression	ret = ! ret		5001476	0		=			
ANR	5002876	Identifier	ret		5001476	0					
ANR	5002877	UnaryOperationExpression	! ret		5001476	1					
ANR	5002878	UnaryOperator	!		5001476	0					
ANR	5002879	Identifier	ret		5001476	1					
ANR	5002880	ExpressionStatement	free ( content )	791:4:19264:19278	5001476	5	True				
ANR	5002881	CallExpression	free ( content )		5001476	0					
ANR	5002882	Callee	free		5001476	0					
ANR	5002883	Identifier	free		5001476	0					
ANR	5002884	ArgumentList	content		5001476	1					
ANR	5002885	Argument	content		5001476	0					
ANR	5002886	Identifier	content		5001476	0					
ANR	5002887	ElseStatement	else		5001476	0					
ANR	5002888	CompoundStatement		258:10:5482:5482	5001476	0					
ANR	5002889	ExpressionStatement	"eprintf ( ""rasm2: Cannot open file %s\\n"" , file )"	793:4:19296:19342	5001476	0	True				
ANR	5002890	CallExpression	"eprintf ( ""rasm2: Cannot open file %s\\n"" , file )"		5001476	0					
ANR	5002891	Callee	eprintf		5001476	0					
ANR	5002892	Identifier	eprintf		5001476	0					
ANR	5002893	ArgumentList	"""rasm2: Cannot open file %s\\n"""		5001476	1					
ANR	5002894	Argument	"""rasm2: Cannot open file %s\\n"""		5001476	0					
ANR	5002895	PrimaryExpression	"""rasm2: Cannot open file %s\\n"""		5001476	0					
ANR	5002896	Argument	file		5001476	1					
ANR	5002897	Identifier	file		5001476	0					
ANR	5002898	ExpressionStatement	ret = 1	794:4:19348:19355	5001476	1	True				
ANR	5002899	AssignmentExpression	ret = 1		5001476	0		=			
ANR	5002900	Identifier	ret		5001476	0					
ANR	5002901	PrimaryExpression	1		5001476	1					
ANR	5002902	ElseStatement	else		5001476	0					
ANR	5002903	IfStatement	if ( argv [ r_optind ] )		5001476	0					
ANR	5002904	Condition	argv [ r_optind ]	797:12:19378:19391	5001476	0	True				
ANR	5002905	ArrayIndexing	argv [ r_optind ]		5001476	0					
ANR	5002906	Identifier	argv		5001476	0					
ANR	5002907	Identifier	r_optind		5001476	1					
ANR	5002908	CompoundStatement		263:28:5586:5586	5001476	1					
ANR	5002909	IfStatement	"if ( ! strcmp ( argv [ r_optind ] , ""-"" ) )"		5001476	0					
ANR	5002910	Condition	"! strcmp ( argv [ r_optind ] , ""-"" )"	798:6:19402:19430	5001476	0	True				
ANR	5002911	UnaryOperationExpression	"! strcmp ( argv [ r_optind ] , ""-"" )"		5001476	0					
ANR	5002912	UnaryOperator	!		5001476	0					
ANR	5002913	CallExpression	"strcmp ( argv [ r_optind ] , ""-"" )"		5001476	1					
ANR	5002914	Callee	strcmp		5001476	0					
ANR	5002915	Identifier	strcmp		5001476	0					
ANR	5002916	ArgumentList	argv [ r_optind ]		5001476	1					
ANR	5002917	Argument	argv [ r_optind ]		5001476	0					
ANR	5002918	ArrayIndexing	argv [ r_optind ]		5001476	0					
ANR	5002919	Identifier	argv		5001476	0					
ANR	5002920	Identifier	r_optind		5001476	1					
ANR	5002921	Argument	"""-"""		5001476	1					
ANR	5002922	PrimaryExpression	"""-"""		5001476	0					
ANR	5002923	CompoundStatement		265:3:5630:5640	5001476	1					
ANR	5002924	IdentifierDeclStatement	int length ;	799:3:19438:19448	5001476	0	True				
ANR	5002925	IdentifierDecl	length		5001476	0					
ANR	5002926	IdentifierDeclType	int		5001476	0					
ANR	5002927	Identifier	length		5001476	1					
ANR	5002928	DoStatement	do		5001476	1					
ANR	5002929	CompoundStatement		267:4:5654:5668	5001476	0					
ANR	5002930	IdentifierDeclStatement	char buf [ 1024 ] ;	801:4:19462:19476	5001476	0	True				
ANR	5002931	IdentifierDecl	buf [ 1024 ]		5001476	0					
ANR	5002932	IdentifierDeclType	char [ 1024 ]		5001476	0					
ANR	5002933	Identifier	buf		5001476	1					
ANR	5002934	PrimaryExpression	1024		5001476	2					
ANR	5002935	ExpressionStatement	"length = read ( 0 , buf , sizeof ( buf ) - 1 )"	802:4:19527:19567	5001476	1	True				
ANR	5002936	AssignmentExpression	"length = read ( 0 , buf , sizeof ( buf ) - 1 )"		5001476	0		=			
ANR	5002937	Identifier	length		5001476	0					
ANR	5002938	CallExpression	"read ( 0 , buf , sizeof ( buf ) - 1 )"		5001476	1					
ANR	5002939	Callee	read		5001476	0					
ANR	5002940	Identifier	read		5001476	0					
ANR	5002941	ArgumentList	0		5001476	1					
ANR	5002942	Argument	0		5001476	0					
ANR	5002943	PrimaryExpression	0		5001476	0					
ANR	5002944	Argument	buf		5001476	1					
ANR	5002945	Identifier	buf		5001476	0					
ANR	5002946	Argument	sizeof ( buf ) - 1		5001476	2					
ANR	5002947	AdditiveExpression	sizeof ( buf ) - 1		5001476	0		-			
ANR	5002948	SizeofExpression	sizeof ( buf )		5001476	0					
ANR	5002949	Sizeof	sizeof		5001476	0					
ANR	5002950	SizeofOperand	buf		5001476	1					
ANR	5002951	PrimaryExpression	1		5001476	1					
ANR	5002952	IfStatement	if ( length < 1 )		5001476	2					
ANR	5002953	Condition	length < 1	803:8:19577:19586	5001476	0	True				
ANR	5002954	RelationalExpression	length < 1		5001476	0		<			
ANR	5002955	Identifier	length		5001476	0					
ANR	5002956	PrimaryExpression	1		5001476	1					
ANR	5002957	CompoundStatement		269:20:5781:5781	5001476	1					
ANR	5002958	BreakStatement	break ;	804:5:19596:19601	5001476	0	True				
ANR	5002959	IfStatement	if ( len > 0 && len < length )		5001476	3					
ANR	5002960	Condition	len > 0 && len < length	806:8:19617:19639	5001476	0	True				
ANR	5002961	AndExpression	len > 0 && len < length		5001476	0		&&			
ANR	5002962	RelationalExpression	len > 0		5001476	0		>			
ANR	5002963	Identifier	len		5001476	0					
ANR	5002964	PrimaryExpression	0		5001476	1					
ANR	5002965	RelationalExpression	len < length		5001476	1		<			
ANR	5002966	Identifier	len		5001476	0					
ANR	5002967	Identifier	length		5001476	1					
ANR	5002968	CompoundStatement		272:33:5834:5834	5001476	1					
ANR	5002969	ExpressionStatement	length = len	807:5:19649:19661	5001476	0	True				
ANR	5002970	AssignmentExpression	length = len		5001476	0		=			
ANR	5002971	Identifier	length		5001476	0					
ANR	5002972	Identifier	len		5001476	1					
ANR	5002973	ExpressionStatement	buf [ length ] = 0	809:4:19673:19688	5001476	4	True				
ANR	5002974	AssignmentExpression	buf [ length ] = 0		5001476	0		=			
ANR	5002975	ArrayIndexing	buf [ length ]		5001476	0					
ANR	5002976	Identifier	buf		5001476	0					
ANR	5002977	Identifier	length		5001476	1					
ANR	5002978	PrimaryExpression	0		5001476	1					
ANR	5002979	IfStatement	if ( ( ! bin || ! dis ) && feof ( stdin ) )		5001476	5					
ANR	5002980	Condition	( ! bin || ! dis ) && feof ( stdin )	810:8:19698:19727	5001476	0	True				
ANR	5002981	AndExpression	( ! bin || ! dis ) && feof ( stdin )		5001476	0		&&			
ANR	5002982	OrExpression	! bin || ! dis		5001476	0		||			
ANR	5002983	UnaryOperationExpression	! bin		5001476	0					
ANR	5002984	UnaryOperator	!		5001476	0					
ANR	5002985	Identifier	bin		5001476	1					
ANR	5002986	UnaryOperationExpression	! dis		5001476	1					
ANR	5002987	UnaryOperator	!		5001476	0					
ANR	5002988	Identifier	dis		5001476	1					
ANR	5002989	CallExpression	feof ( stdin )		5001476	1					
ANR	5002990	Callee	feof		5001476	0					
ANR	5002991	Identifier	feof		5001476	0					
ANR	5002992	ArgumentList	stdin		5001476	1					
ANR	5002993	Argument	stdin		5001476	0					
ANR	5002994	Identifier	stdin		5001476	0					
ANR	5002995	CompoundStatement		276:40:5922:5922	5001476	1					
ANR	5002996	BreakStatement	break ;	811:5:19737:19742	5001476	0	True				
ANR	5002997	IfStatement	if ( skip && length > skip )		5001476	6					
ANR	5002998	Condition	skip && length > skip	813:8:19758:19778	5001476	0	True				
ANR	5002999	AndExpression	skip && length > skip		5001476	0		&&			
ANR	5003000	Identifier	skip		5001476	0					
ANR	5003001	RelationalExpression	length > skip		5001476	1		>			
ANR	5003002	Identifier	length		5001476	0					
ANR	5003003	Identifier	skip		5001476	1					
ANR	5003004	CompoundStatement		279:31:5973:5973	5001476	1					
ANR	5003005	IfStatement	if ( bin )		5001476	0					
ANR	5003006	Condition	bin	814:9:19792:19794	5001476	0	True				
ANR	5003007	Identifier	bin		5001476	0					
ANR	5003008	CompoundStatement		280:14:5989:5989	5001476	1					
ANR	5003009	ExpressionStatement	"memmove ( buf , buf + skip , length - skip + 1 )"	815:6:19805:19849	5001476	0	True				
ANR	5003010	CallExpression	"memmove ( buf , buf + skip , length - skip + 1 )"		5001476	0					
ANR	5003011	Callee	memmove		5001476	0					
ANR	5003012	Identifier	memmove		5001476	0					
ANR	5003013	ArgumentList	buf		5001476	1					
ANR	5003014	Argument	buf		5001476	0					
ANR	5003015	Identifier	buf		5001476	0					
ANR	5003016	Argument	buf + skip		5001476	1					
ANR	5003017	AdditiveExpression	buf + skip		5001476	0		+			
ANR	5003018	Identifier	buf		5001476	0					
ANR	5003019	Identifier	skip		5001476	1					
ANR	5003020	Argument	length - skip + 1		5001476	2					
ANR	5003021	AdditiveExpression	length - skip + 1		5001476	0		-			
ANR	5003022	Identifier	length		5001476	0					
ANR	5003023	AdditiveExpression	skip + 1		5001476	1		+			
ANR	5003024	Identifier	skip		5001476	0					
ANR	5003025	PrimaryExpression	1		5001476	1					
ANR	5003026	ExpressionStatement	length -= skip	816:6:19857:19871	5001476	1	True				
ANR	5003027	AssignmentExpression	length -= skip		5001476	0		-=			
ANR	5003028	Identifier	length		5001476	0					
ANR	5003029	Identifier	skip		5001476	1					
ANR	5003030	IfStatement	if ( ! bin || ! dis )		5001476	7					
ANR	5003031	Condition	! bin || ! dis	819:8:19894:19905	5001476	0	True				
ANR	5003032	OrExpression	! bin || ! dis		5001476	0		||			
ANR	5003033	UnaryOperationExpression	! bin		5001476	0					
ANR	5003034	UnaryOperator	!		5001476	0					
ANR	5003035	Identifier	bin		5001476	1					
ANR	5003036	UnaryOperationExpression	! dis		5001476	1					
ANR	5003037	UnaryOperator	!		5001476	0					
ANR	5003038	Identifier	dis		5001476	1					
ANR	5003039	CompoundStatement		286:5:6107:6146	5001476	1					
ANR	5003040	IdentifierDeclStatement	int buflen = strlen ( ( const char * ) buf ) ;	820:5:19915:19954	5001476	0	True				
ANR	5003041	IdentifierDecl	buflen = strlen ( ( const char * ) buf )		5001476	0					
ANR	5003042	IdentifierDeclType	int		5001476	0					
ANR	5003043	Identifier	buflen		5001476	1					
ANR	5003044	AssignmentExpression	buflen = strlen ( ( const char * ) buf )		5001476	2		=			
ANR	5003045	Identifier	buflen		5001476	0					
ANR	5003046	CallExpression	strlen ( ( const char * ) buf )		5001476	1					
ANR	5003047	Callee	strlen		5001476	0					
ANR	5003048	Identifier	strlen		5001476	0					
ANR	5003049	ArgumentList	( const char * ) buf		5001476	1					
ANR	5003050	Argument	( const char * ) buf		5001476	0					
ANR	5003051	CastExpression	( const char * ) buf		5001476	0					
ANR	5003052	CastTarget	const char *		5001476	0					
ANR	5003053	Identifier	buf		5001476	1					
ANR	5003054	IfStatement	if ( buf [ buflen ] == '\\n' )		5001476	1					
ANR	5003055	Condition	buf [ buflen ] == '\\n'	821:9:19965:19983	5001476	0	True				
ANR	5003056	EqualityExpression	buf [ buflen ] == '\\n'		5001476	0		==			
ANR	5003057	ArrayIndexing	buf [ buflen ]		5001476	0					
ANR	5003058	Identifier	buf		5001476	0					
ANR	5003059	Identifier	buflen		5001476	1					
ANR	5003060	PrimaryExpression	'\\n'		5001476	1					
ANR	5003061	CompoundStatement		287:30:6178:6178	5001476	1					
ANR	5003062	ExpressionStatement	buf [ buflen - 1 ] = '\\0'	822:6:19994:20016	5001476	0	True				
ANR	5003063	AssignmentExpression	buf [ buflen - 1 ] = '\\0'		5001476	0		=			
ANR	5003064	ArrayIndexing	buf [ buflen - 1 ]		5001476	0					
ANR	5003065	Identifier	buf		5001476	0					
ANR	5003066	AdditiveExpression	buflen - 1		5001476	1		-			
ANR	5003067	Identifier	buflen		5001476	0					
ANR	5003068	PrimaryExpression	1		5001476	1					
ANR	5003069	PrimaryExpression	'\\0'		5001476	1					
ANR	5003070	IfStatement	if ( dis )		5001476	8					
ANR	5003071	Condition	dis	825:8:20039:20041	5001476	0	True				
ANR	5003072	Identifier	dis		5001476	0					
ANR	5003073	CompoundStatement		291:13:6236:6236	5001476	1					
ANR	5003074	ExpressionStatement	"ret = rasm_disasm ( as , ( char * ) buf , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"	826:5:20051:20136	5001476	0	True				
ANR	5003075	AssignmentExpression	"ret = rasm_disasm ( as , ( char * ) buf , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	0		=			
ANR	5003076	Identifier	ret		5001476	0					
ANR	5003077	CallExpression	"rasm_disasm ( as , ( char * ) buf , offset , length , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	1					
ANR	5003078	Callee	rasm_disasm		5001476	0					
ANR	5003079	Identifier	rasm_disasm		5001476	0					
ANR	5003080	ArgumentList	as		5001476	1					
ANR	5003081	Argument	as		5001476	0					
ANR	5003082	Identifier	as		5001476	0					
ANR	5003083	Argument	( char * ) buf		5001476	1					
ANR	5003084	CastExpression	( char * ) buf		5001476	0					
ANR	5003085	CastTarget	char *		5001476	0					
ANR	5003086	Identifier	buf		5001476	1					
ANR	5003087	Argument	offset		5001476	2					
ANR	5003088	Identifier	offset		5001476	0					
ANR	5003089	Argument	length		5001476	3					
ANR	5003090	Identifier	length		5001476	0					
ANR	5003091	Argument	as -> a -> bits		5001476	4					
ANR	5003092	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5003093	PtrMemberAccess	as -> a		5001476	0					
ANR	5003094	Identifier	as		5001476	0					
ANR	5003095	Identifier	a		5001476	1					
ANR	5003096	Identifier	bits		5001476	1					
ANR	5003097	Argument	ascii		5001476	5					
ANR	5003098	Identifier	ascii		5001476	0					
ANR	5003099	Argument	bin		5001476	6					
ANR	5003100	Identifier	bin		5001476	0					
ANR	5003101	Argument	dis - 1		5001476	7					
ANR	5003102	AdditiveExpression	dis - 1		5001476	0		-			
ANR	5003103	Identifier	dis		5001476	0					
ANR	5003104	PrimaryExpression	1		5001476	1					
ANR	5003105	ElseStatement	else		5001476	0					
ANR	5003106	IfStatement	if ( analinfo )		5001476	0					
ANR	5003107	Condition	analinfo	827:15:20153:20160	5001476	0	True				
ANR	5003108	Identifier	analinfo		5001476	0					
ANR	5003109	CompoundStatement		293:25:6355:6355	5001476	1					
ANR	5003110	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) buf , offset )"	828:5:20170:20221	5001476	0	True				
ANR	5003111	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) buf , offset )"		5001476	0		=			
ANR	5003112	Identifier	ret		5001476	0					
ANR	5003113	CallExpression	"show_analinfo ( as , ( const char * ) buf , offset )"		5001476	1					
ANR	5003114	Callee	show_analinfo		5001476	0					
ANR	5003115	Identifier	show_analinfo		5001476	0					
ANR	5003116	ArgumentList	as		5001476	1					
ANR	5003117	Argument	as		5001476	0					
ANR	5003118	Identifier	as		5001476	0					
ANR	5003119	Argument	( const char * ) buf		5001476	1					
ANR	5003120	CastExpression	( const char * ) buf		5001476	0					
ANR	5003121	CastTarget	const char *		5001476	0					
ANR	5003122	Identifier	buf		5001476	1					
ANR	5003123	Argument	offset		5001476	2					
ANR	5003124	Identifier	offset		5001476	0					
ANR	5003125	ElseStatement	else		5001476	0					
ANR	5003126	CompoundStatement		295:11:6426:6426	5001476	0					
ANR	5003127	ExpressionStatement	"ret = rasm_asm ( as , ( const char * ) buf , offset , length , as -> a -> bits , bin , use_spp , hexwords )"	830:5:20241:20332	5001476	0	True				
ANR	5003128	AssignmentExpression	"ret = rasm_asm ( as , ( const char * ) buf , offset , length , as -> a -> bits , bin , use_spp , hexwords )"		5001476	0		=			
ANR	5003129	Identifier	ret		5001476	0					
ANR	5003130	CallExpression	"rasm_asm ( as , ( const char * ) buf , offset , length , as -> a -> bits , bin , use_spp , hexwords )"		5001476	1					
ANR	5003131	Callee	rasm_asm		5001476	0					
ANR	5003132	Identifier	rasm_asm		5001476	0					
ANR	5003133	ArgumentList	as		5001476	1					
ANR	5003134	Argument	as		5001476	0					
ANR	5003135	Identifier	as		5001476	0					
ANR	5003136	Argument	( const char * ) buf		5001476	1					
ANR	5003137	CastExpression	( const char * ) buf		5001476	0					
ANR	5003138	CastTarget	const char *		5001476	0					
ANR	5003139	Identifier	buf		5001476	1					
ANR	5003140	Argument	offset		5001476	2					
ANR	5003141	Identifier	offset		5001476	0					
ANR	5003142	Argument	length		5001476	3					
ANR	5003143	Identifier	length		5001476	0					
ANR	5003144	Argument	as -> a -> bits		5001476	4					
ANR	5003145	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5003146	PtrMemberAccess	as -> a		5001476	0					
ANR	5003147	Identifier	as		5001476	0					
ANR	5003148	Identifier	a		5001476	1					
ANR	5003149	Identifier	bits		5001476	1					
ANR	5003150	Argument	bin		5001476	5					
ANR	5003151	Identifier	bin		5001476	0					
ANR	5003152	Argument	use_spp		5001476	6					
ANR	5003153	Identifier	use_spp		5001476	0					
ANR	5003154	Argument	hexwords		5001476	7					
ANR	5003155	Identifier	hexwords		5001476	0					
ANR	5003156	ExpressionStatement	idx += ret	832:4:20344:20354	5001476	9	True				
ANR	5003157	AssignmentExpression	idx += ret		5001476	0		+=			
ANR	5003158	Identifier	idx		5001476	0					
ANR	5003159	Identifier	ret		5001476	1					
ANR	5003160	ExpressionStatement	offset += ret	833:4:20360:20373	5001476	10	True				
ANR	5003161	AssignmentExpression	offset += ret		5001476	0		+=			
ANR	5003162	Identifier	offset		5001476	0					
ANR	5003163	Identifier	ret		5001476	1					
ANR	5003164	IfStatement	if ( ! ret )		5001476	11					
ANR	5003165	Condition	! ret	834:8:20383:20386	5001476	0	True				
ANR	5003166	UnaryOperationExpression	! ret		5001476	0					
ANR	5003167	UnaryOperator	!		5001476	0					
ANR	5003168	Identifier	ret		5001476	1					
ANR	5003169	CompoundStatement		300:14:6581:6581	5001476	1					
ANR	5003170	GotoStatement	goto beach ;	835:5:20396:20406	5001476	0	True				
ANR	5003171	Identifier	beach		5001476	0					
ANR	5003172	Condition	! len || idx < length	837:12:20426:20445	5001476	1	True				
ANR	5003173	OrExpression	! len || idx < length		5001476	0		||			
ANR	5003174	UnaryOperationExpression	! len		5001476	0					
ANR	5003175	UnaryOperator	!		5001476	0					
ANR	5003176	Identifier	len		5001476	1					
ANR	5003177	RelationalExpression	idx < length		5001476	1		<			
ANR	5003178	Identifier	idx		5001476	0					
ANR	5003179	Identifier	length		5001476	1					
ANR	5003180	ExpressionStatement	ret = idx	838:3:20452:20461	5001476	2	True				
ANR	5003181	AssignmentExpression	ret = idx		5001476	0		=			
ANR	5003182	Identifier	ret		5001476	0					
ANR	5003183	Identifier	idx		5001476	1					
ANR	5003184	GotoStatement	goto beach ;	839:3:20466:20476	5001476	3	True				
ANR	5003185	Identifier	beach		5001476	0					
ANR	5003186	IfStatement	if ( dis )		5001476	1					
ANR	5003187	Condition	dis	841:6:20488:20490	5001476	0	True				
ANR	5003188	Identifier	dis		5001476	0					
ANR	5003189	CompoundStatement		308:3:6690:6719	5001476	1					
ANR	5003190	IdentifierDeclStatement	char * usrstr = argv [ r_optind ] ;	842:3:20498:20527	5001476	0	True				
ANR	5003191	IdentifierDecl	* usrstr = argv [ r_optind ]		5001476	0					
ANR	5003192	IdentifierDeclType	char *		5001476	0					
ANR	5003193	Identifier	usrstr		5001476	1					
ANR	5003194	AssignmentExpression	* usrstr = argv [ r_optind ]		5001476	2		=			
ANR	5003195	Identifier	usrstr		5001476	0					
ANR	5003196	ArrayIndexing	argv [ r_optind ]		5001476	1					
ANR	5003197	Identifier	argv		5001476	0					
ANR	5003198	Identifier	r_optind		5001476	1					
ANR	5003199	ExpressionStatement	len = strlen ( usrstr )	843:3:20532:20553	5001476	1	True				
ANR	5003200	AssignmentExpression	len = strlen ( usrstr )		5001476	0		=			
ANR	5003201	Identifier	len		5001476	0					
ANR	5003202	CallExpression	strlen ( usrstr )		5001476	1					
ANR	5003203	Callee	strlen		5001476	0					
ANR	5003204	Identifier	strlen		5001476	0					
ANR	5003205	ArgumentList	usrstr		5001476	1					
ANR	5003206	Argument	usrstr		5001476	0					
ANR	5003207	Identifier	usrstr		5001476	0					
ANR	5003208	IfStatement	if ( skip && len > skip )		5001476	2					
ANR	5003209	Condition	skip && len > skip	844:7:20562:20579	5001476	0	True				
ANR	5003210	AndExpression	skip && len > skip		5001476	0		&&			
ANR	5003211	Identifier	skip		5001476	0					
ANR	5003212	RelationalExpression	len > skip		5001476	1		>			
ANR	5003213	Identifier	len		5001476	0					
ANR	5003214	Identifier	skip		5001476	1					
ANR	5003215	CompoundStatement		310:27:6774:6774	5001476	1					
ANR	5003216	ExpressionStatement	skip *= 2	845:4:20588:20597	5001476	0	True				
ANR	5003217	AssignmentExpression	skip *= 2		5001476	0		*=			
ANR	5003218	Identifier	skip		5001476	0					
ANR	5003219	PrimaryExpression	2		5001476	1					
ANR	5003220	ExpressionStatement	"memmove ( usrstr , usrstr + skip , len - skip )"	847:4:20655:20698	5001476	1	True				
ANR	5003221	CallExpression	"memmove ( usrstr , usrstr + skip , len - skip )"		5001476	0					
ANR	5003222	Callee	memmove		5001476	0					
ANR	5003223	Identifier	memmove		5001476	0					
ANR	5003224	ArgumentList	usrstr		5001476	1					
ANR	5003225	Argument	usrstr		5001476	0					
ANR	5003226	Identifier	usrstr		5001476	0					
ANR	5003227	Argument	usrstr + skip		5001476	1					
ANR	5003228	AdditiveExpression	usrstr + skip		5001476	0		+			
ANR	5003229	Identifier	usrstr		5001476	0					
ANR	5003230	Identifier	skip		5001476	1					
ANR	5003231	Argument	len - skip		5001476	2					
ANR	5003232	AdditiveExpression	len - skip		5001476	0		-			
ANR	5003233	Identifier	len		5001476	0					
ANR	5003234	Identifier	skip		5001476	1					
ANR	5003235	ExpressionStatement	len -= skip	848:4:20704:20715	5001476	2	True				
ANR	5003236	AssignmentExpression	len -= skip		5001476	0		-=			
ANR	5003237	Identifier	len		5001476	0					
ANR	5003238	Identifier	skip		5001476	1					
ANR	5003239	ExpressionStatement	usrstr [ len ] = 0	849:4:20721:20736	5001476	3	True				
ANR	5003240	AssignmentExpression	usrstr [ len ] = 0		5001476	0		=			
ANR	5003241	ArrayIndexing	usrstr [ len ]		5001476	0					
ANR	5003242	Identifier	usrstr		5001476	0					
ANR	5003243	Identifier	len		5001476	1					
ANR	5003244	PrimaryExpression	0		5001476	1					
ANR	5003245	IfStatement	"if ( ! strncmp ( usrstr , ""0x"" , 2 ) )"		5001476	3					
ANR	5003246	Condition	"! strncmp ( usrstr , ""0x"" , 2 )"	851:7:20750:20775	5001476	0	True				
ANR	5003247	UnaryOperationExpression	"! strncmp ( usrstr , ""0x"" , 2 )"		5001476	0					
ANR	5003248	UnaryOperator	!		5001476	0					
ANR	5003249	CallExpression	"strncmp ( usrstr , ""0x"" , 2 )"		5001476	1					
ANR	5003250	Callee	strncmp		5001476	0					
ANR	5003251	Identifier	strncmp		5001476	0					
ANR	5003252	ArgumentList	usrstr		5001476	1					
ANR	5003253	Argument	usrstr		5001476	0					
ANR	5003254	Identifier	usrstr		5001476	0					
ANR	5003255	Argument	"""0x"""		5001476	1					
ANR	5003256	PrimaryExpression	"""0x"""		5001476	0					
ANR	5003257	Argument	2		5001476	2					
ANR	5003258	PrimaryExpression	2		5001476	0					
ANR	5003259	CompoundStatement		317:35:6970:6970	5001476	1					
ANR	5003260	ExpressionStatement	usrstr += 2	852:4:20784:20795	5001476	0	True				
ANR	5003261	AssignmentExpression	usrstr += 2		5001476	0		+=			
ANR	5003262	Identifier	usrstr		5001476	0					
ANR	5003263	PrimaryExpression	2		5001476	1					
ANR	5003264	IfStatement	if ( rad )		5001476	4					
ANR	5003265	Condition	rad	854:7:20809:20811	5001476	0	True				
ANR	5003266	Identifier	rad		5001476	0					
ANR	5003267	CompoundStatement		320:12:7006:7006	5001476	1					
ANR	5003268	ExpressionStatement	as -> oneliner = true	855:4:20820:20839	5001476	0	True				
ANR	5003269	AssignmentExpression	as -> oneliner = true		5001476	0		=			
ANR	5003270	PtrMemberAccess	as -> oneliner		5001476	0					
ANR	5003271	Identifier	as		5001476	0					
ANR	5003272	Identifier	oneliner		5001476	1					
ANR	5003273	Identifier	true		5001476	1					
ANR	5003274	ExpressionStatement	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"	856:4:20845:20895	5001476	1	True				
ANR	5003275	CallExpression	"printf ( ""e asm.arch=%s\\n"" , arch ? arch : R_SYS_ARCH )"		5001476	0					
ANR	5003276	Callee	printf		5001476	0					
ANR	5003277	Identifier	printf		5001476	0					
ANR	5003278	ArgumentList	"""e asm.arch=%s\\n"""		5001476	1					
ANR	5003279	Argument	"""e asm.arch=%s\\n"""		5001476	0					
ANR	5003280	PrimaryExpression	"""e asm.arch=%s\\n"""		5001476	0					
ANR	5003281	Argument	arch ? arch : R_SYS_ARCH		5001476	1					
ANR	5003282	ConditionalExpression	arch ? arch : R_SYS_ARCH		5001476	0					
ANR	5003283	Condition	arch		5001476	0					
ANR	5003284	Identifier	arch		5001476	0					
ANR	5003285	Identifier	arch		5001476	1					
ANR	5003286	Identifier	R_SYS_ARCH		5001476	2					
ANR	5003287	ExpressionStatement	"printf ( ""e asm.bits=%d\\n"" , bits )"	857:4:20901:20933	5001476	2	True				
ANR	5003288	CallExpression	"printf ( ""e asm.bits=%d\\n"" , bits )"		5001476	0					
ANR	5003289	Callee	printf		5001476	0					
ANR	5003290	Identifier	printf		5001476	0					
ANR	5003291	ArgumentList	"""e asm.bits=%d\\n"""		5001476	1					
ANR	5003292	Argument	"""e asm.bits=%d\\n"""		5001476	0					
ANR	5003293	PrimaryExpression	"""e asm.bits=%d\\n"""		5001476	0					
ANR	5003294	Argument	bits		5001476	1					
ANR	5003295	Identifier	bits		5001476	0					
ANR	5003296	ExpressionStatement	"printf ( ""\\""wa "" )"	858:4:20939:20955	5001476	3	True				
ANR	5003297	CallExpression	"printf ( ""\\""wa "" )"		5001476	0					
ANR	5003298	Callee	printf		5001476	0					
ANR	5003299	Identifier	printf		5001476	0					
ANR	5003300	ArgumentList	"""\\""wa """		5001476	1					
ANR	5003301	Argument	"""\\""wa """		5001476	0					
ANR	5003302	PrimaryExpression	"""\\""wa """		5001476	0					
ANR	5003303	ExpressionStatement	"ret = rasm_disasm ( as , ( char * ) usrstr , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"	860:3:20965:21055	5001476	5	True				
ANR	5003304	AssignmentExpression	"ret = rasm_disasm ( as , ( char * ) usrstr , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	0		=			
ANR	5003305	Identifier	ret		5001476	0					
ANR	5003306	CallExpression	"rasm_disasm ( as , ( char * ) usrstr , offset , len , as -> a -> bits , ascii , bin , dis - 1 )"		5001476	1					
ANR	5003307	Callee	rasm_disasm		5001476	0					
ANR	5003308	Identifier	rasm_disasm		5001476	0					
ANR	5003309	ArgumentList	as		5001476	1					
ANR	5003310	Argument	as		5001476	0					
ANR	5003311	Identifier	as		5001476	0					
ANR	5003312	Argument	( char * ) usrstr		5001476	1					
ANR	5003313	CastExpression	( char * ) usrstr		5001476	0					
ANR	5003314	CastTarget	char *		5001476	0					
ANR	5003315	Identifier	usrstr		5001476	1					
ANR	5003316	Argument	offset		5001476	2					
ANR	5003317	Identifier	offset		5001476	0					
ANR	5003318	Argument	len		5001476	3					
ANR	5003319	Identifier	len		5001476	0					
ANR	5003320	Argument	as -> a -> bits		5001476	4					
ANR	5003321	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5003322	PtrMemberAccess	as -> a		5001476	0					
ANR	5003323	Identifier	as		5001476	0					
ANR	5003324	Identifier	a		5001476	1					
ANR	5003325	Identifier	bits		5001476	1					
ANR	5003326	Argument	ascii		5001476	5					
ANR	5003327	Identifier	ascii		5001476	0					
ANR	5003328	Argument	bin		5001476	6					
ANR	5003329	Identifier	bin		5001476	0					
ANR	5003330	Argument	dis - 1		5001476	7					
ANR	5003331	AdditiveExpression	dis - 1		5001476	0		-			
ANR	5003332	Identifier	dis		5001476	0					
ANR	5003333	PrimaryExpression	1		5001476	1					
ANR	5003334	ElseStatement	else		5001476	0					
ANR	5003335	IfStatement	if ( analinfo )		5001476	0					
ANR	5003336	Condition	analinfo	862:13:21070:21077	5001476	0	True				
ANR	5003337	Identifier	analinfo		5001476	0					
ANR	5003338	CompoundStatement		328:23:7272:7272	5001476	1					
ANR	5003339	ExpressionStatement	"ret = show_analinfo ( as , ( const char * ) argv [ r_optind ] , offset )"	863:3:21085:21147	5001476	0	True				
ANR	5003340	AssignmentExpression	"ret = show_analinfo ( as , ( const char * ) argv [ r_optind ] , offset )"		5001476	0		=			
ANR	5003341	Identifier	ret		5001476	0					
ANR	5003342	CallExpression	"show_analinfo ( as , ( const char * ) argv [ r_optind ] , offset )"		5001476	1					
ANR	5003343	Callee	show_analinfo		5001476	0					
ANR	5003344	Identifier	show_analinfo		5001476	0					
ANR	5003345	ArgumentList	as		5001476	1					
ANR	5003346	Argument	as		5001476	0					
ANR	5003347	Identifier	as		5001476	0					
ANR	5003348	Argument	( const char * ) argv [ r_optind ]		5001476	1					
ANR	5003349	CastExpression	( const char * ) argv [ r_optind ]		5001476	0					
ANR	5003350	CastTarget	const char *		5001476	0					
ANR	5003351	ArrayIndexing	argv [ r_optind ]		5001476	1					
ANR	5003352	Identifier	argv		5001476	0					
ANR	5003353	Identifier	r_optind		5001476	1					
ANR	5003354	Argument	offset		5001476	2					
ANR	5003355	Identifier	offset		5001476	0					
ANR	5003356	ElseStatement	else		5001476	0					
ANR	5003357	CompoundStatement		330:9:7350:7350	5001476	0					
ANR	5003358	ExpressionStatement	"ret = print_assembly_output ( as , argv [ r_optind ] , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"	865:3:21163:21279	5001476	0	True				
ANR	5003359	AssignmentExpression	"ret = print_assembly_output ( as , argv [ r_optind ] , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5001476	0		=			
ANR	5003360	Identifier	ret		5001476	0					
ANR	5003361	CallExpression	"print_assembly_output ( as , argv [ r_optind ] , offset , len , as -> a -> bits , bin , use_spp , rad , hexwords , arch )"		5001476	1					
ANR	5003362	Callee	print_assembly_output		5001476	0					
ANR	5003363	Identifier	print_assembly_output		5001476	0					
ANR	5003364	ArgumentList	as		5001476	1					
ANR	5003365	Argument	as		5001476	0					
ANR	5003366	Identifier	as		5001476	0					
ANR	5003367	Argument	argv [ r_optind ]		5001476	1					
ANR	5003368	ArrayIndexing	argv [ r_optind ]		5001476	0					
ANR	5003369	Identifier	argv		5001476	0					
ANR	5003370	Identifier	r_optind		5001476	1					
ANR	5003371	Argument	offset		5001476	2					
ANR	5003372	Identifier	offset		5001476	0					
ANR	5003373	Argument	len		5001476	3					
ANR	5003374	Identifier	len		5001476	0					
ANR	5003375	Argument	as -> a -> bits		5001476	4					
ANR	5003376	PtrMemberAccess	as -> a -> bits		5001476	0					
ANR	5003377	PtrMemberAccess	as -> a		5001476	0					
ANR	5003378	Identifier	as		5001476	0					
ANR	5003379	Identifier	a		5001476	1					
ANR	5003380	Identifier	bits		5001476	1					
ANR	5003381	Argument	bin		5001476	5					
ANR	5003382	Identifier	bin		5001476	0					
ANR	5003383	Argument	use_spp		5001476	6					
ANR	5003384	Identifier	use_spp		5001476	0					
ANR	5003385	Argument	rad		5001476	7					
ANR	5003386	Identifier	rad		5001476	0					
ANR	5003387	Argument	hexwords		5001476	8					
ANR	5003388	Identifier	hexwords		5001476	0					
ANR	5003389	Argument	arch		5001476	9					
ANR	5003390	Identifier	arch		5001476	0					
ANR	5003391	IfStatement	if ( ! ret )		5001476	2					
ANR	5003392	Condition	! ret	868:6:21291:21294	5001476	0	True				
ANR	5003393	UnaryOperationExpression	! ret		5001476	0					
ANR	5003394	UnaryOperator	!		5001476	0					
ANR	5003395	Identifier	ret		5001476	1					
ANR	5003396	CompoundStatement		334:12:7489:7489	5001476	1					
ANR	5003397	ExpressionStatement	"eprintf ( ""invalid\\n"" )"	869:3:21302:21323	5001476	0	True				
ANR	5003398	CallExpression	"eprintf ( ""invalid\\n"" )"		5001476	0					
ANR	5003399	Callee	eprintf		5001476	0					
ANR	5003400	Identifier	eprintf		5001476	0					
ANR	5003401	ArgumentList	"""invalid\\n"""		5001476	1					
ANR	5003402	Argument	"""invalid\\n"""		5001476	0					
ANR	5003403	PrimaryExpression	"""invalid\\n"""		5001476	0					
ANR	5003404	ExpressionStatement	ret = ! ret	871:2:21331:21341	5001476	3	True				
ANR	5003405	AssignmentExpression	ret = ! ret		5001476	0		=			
ANR	5003406	Identifier	ret		5001476	0					
ANR	5003407	UnaryOperationExpression	! ret		5001476	1					
ANR	5003408	UnaryOperator	!		5001476	0					
ANR	5003409	Identifier	ret		5001476	1					
ANR	5003410	Label	beach :	873:0:21346:21351	5001476	30	True				
ANR	5003411	Identifier	beach		5001476	0					
ANR	5003412	ExpressionStatement	__as_free ( as )	874:1:21354:21368	5001476	31	True				
ANR	5003413	CallExpression	__as_free ( as )		5001476	0					
ANR	5003414	Callee	__as_free		5001476	0					
ANR	5003415	Identifier	__as_free		5001476	0					
ANR	5003416	ArgumentList	as		5001476	1					
ANR	5003417	Argument	as		5001476	0					
ANR	5003418	Identifier	as		5001476	0					
ANR	5003419	ExpressionStatement	free ( r2arch )	876:1:21372:21385	5001476	32	True				
ANR	5003420	CallExpression	free ( r2arch )		5001476	0					
ANR	5003421	Callee	free		5001476	0					
ANR	5003422	Identifier	free		5001476	0					
ANR	5003423	ArgumentList	r2arch		5001476	1					
ANR	5003424	Argument	r2arch		5001476	0					
ANR	5003425	Identifier	r2arch		5001476	0					
ANR	5003426	IfStatement	if ( fd != - 1 )		5001476	33					
ANR	5003427	Condition	fd != - 1	877:5:21392:21399	5001476	0	True				
ANR	5003428	EqualityExpression	fd != - 1		5001476	0		!=			
ANR	5003429	Identifier	fd		5001476	0					
ANR	5003430	UnaryOperationExpression	- 1		5001476	1					
ANR	5003431	UnaryOperator	-		5001476	0					
ANR	5003432	PrimaryExpression	1		5001476	1					
ANR	5003433	CompoundStatement		343:15:7594:7594	5001476	1					
ANR	5003434	ExpressionStatement	close ( fd )	878:2:21406:21416	5001476	0	True				
ANR	5003435	CallExpression	close ( fd )		5001476	0					
ANR	5003436	Callee	close		5001476	0					
ANR	5003437	Identifier	close		5001476	0					
ANR	5003438	ArgumentList	fd		5001476	1					
ANR	5003439	Argument	fd		5001476	0					
ANR	5003440	Identifier	fd		5001476	0					
ANR	5003441	ReturnStatement	return ret ;	880:1:21422:21432	5001476	34	True				
ANR	5003442	Identifier	ret		5001476	0					
ANR	5003443	ReturnType	R_API int		5001476	1					
ANR	5003444	Identifier	r_main_rasm2		5001476	2					
ANR	5003445	ParameterList	"int argc , char * argv [ ]"		5001476	3					
ANR	5003446	Parameter	int argc	535:23:13783:13790	5001476	0	True				
ANR	5003447	ParameterType	int		5001476	0					
ANR	5003448	Identifier	argc		5001476	1					
ANR	5003449	Parameter	char * argv [ ]	535:33:13793:13804	5001476	1	True				
ANR	5003450	ParameterType	char * [ ]		5001476	0					
ANR	5003451	Identifier	argv		5001476	1					
ANR	5003452	CFGEntryNode	ENTRY		5001476		True				
ANR	5003453	CFGExitNode	EXIT		5001476		True				
ANR	5003454	Symbol	stdin		5001476						
ANR	5003455	Symbol	r_sys_getenv		5001476						
ANR	5003456	Symbol	bin		5001476						
ANR	5003457	Symbol	R_SYS_ARCH		5001476						
ANR	5003458	Symbol	strchr		5001476						
ANR	5003459	Symbol	r_asm_syntax_from_string		5001476						
ANR	5003460	Symbol	r_asm_set_big_endian		5001476						
ANR	5003461	Symbol	strncmp		5001476						
ANR	5003462	Symbol	rasm_show_help		5001476						
ANR	5003463	Symbol	rad		5001476						
ANR	5003464	Symbol	len		5001476						
ANR	5003465	Symbol	as -> a -> syscall		5001476						
ANR	5003466	Symbol	buflen		5001476						
ANR	5003467	Symbol	r2arch		5001476						
ANR	5003468	Symbol	r_file_slurp		5001476						
ANR	5003469	Symbol	* buf		5001476						
ANR	5003470	Symbol	bits		5001476						
ANR	5003471	Symbol	usrstr		5001476						
ANR	5003472	Symbol	analinfo		5001476						
ANR	5003473	Symbol	as		5001476						
ANR	5003474	Symbol	r_getopt		5001476						
ANR	5003475	Symbol	rasm_disasm		5001476						
ANR	5003476	Symbol	r_optind		5001476						
ANR	5003477	Symbol	* usrstr		5001476						
ANR	5003478	Symbol	print_assembly_output		5001476						
ANR	5003479	Symbol	r_stdin_slurp		5001476						
ANR	5003480	Symbol	as -> oneliner		5001476						
ANR	5003481	Symbol	skip		5001476						
ANR	5003482	Symbol	O_RDWR		5001476						
ANR	5003483	Symbol	file		5001476						
ANR	5003484	Symbol	r_asm_use		5001476						
ANR	5003485	Symbol	whatsop		5001476						
ANR	5003486	Symbol	* length		5001476						
ANR	5003487	Symbol	* as -> a		5001476						
ANR	5003488	Symbol	atoi		5001476						
ANR	5003489	Symbol	& length		5001476						
ANR	5003490	Symbol	c		5001476						
ANR	5003491	Symbol	kernel		5001476						
ANR	5003492	Symbol	sz		5001476						
ANR	5003493	Symbol	show_analinfo		5001476						
ANR	5003494	Symbol	isbig		5001476						
ANR	5003495	Symbol	* env_bits		5001476						
ANR	5003496	Symbol	p		5001476						
ANR	5003497	Symbol	help		5001476						
ANR	5003498	Symbol	r2bits		5001476						
ANR	5003499	Symbol	O_TRUNC		5001476						
ANR	5003500	Symbol	buf		5001476						
ANR	5003501	Symbol	s		5001476						
ANR	5003502	Symbol	* filters		5001476						
ANR	5003503	Symbol	r_asm_describe		5001476						
ANR	5003504	Symbol	arch		5001476						
ANR	5003505	Symbol	* r_optarg		5001476						
ANR	5003506	Symbol	open		5001476						
ANR	5003507	Symbol	* len		5001476						
ANR	5003508	Symbol	O_CREAT		5001476						
ANR	5003509	Symbol	* argv		5001476						
ANR	5003510	Symbol	dis		5001476						
ANR	5003511	Symbol	r_syscall_new		5001476						
ANR	5003512	Symbol	env_bits		5001476						
ANR	5003513	Symbol	strlen		5001476						
ANR	5003514	Symbol	* content		5001476						
ANR	5003515	Symbol	canbebig		5001476						
ANR	5003516	Symbol	* * as		5001476						
ANR	5003517	Symbol	ret		5001476						
ANR	5003518	Symbol	strcmp		5001476						
ANR	5003519	Symbol	NULL		5001476						
ANR	5003520	Symbol	read		5001476						
ANR	5003521	Symbol	offset		5001476						
ANR	5003522	Symbol	as -> coutput		5001476						
ANR	5003523	Symbol	as -> quiet		5001476						
ANR	5003524	Symbol	cpu		5001476						
ANR	5003525	Symbol	R2_VERSION		5001476						
ANR	5003526	Symbol	r_optarg		5001476						
ANR	5003527	Symbol	& sz		5001476						
ANR	5003528	Symbol	as -> a		5001476						
ANR	5003529	Symbol	hexwords		5001476						
ANR	5003530	Symbol	true		5001476						
ANR	5003531	Symbol	idx		5001476						
ANR	5003532	Symbol	fd		5001476						
ANR	5003533	Symbol	use_spp		5001476						
ANR	5003534	Symbol	argv		5001476						
ANR	5003535	Symbol	content		5001476						
ANR	5003536	Symbol	r_num_math		5001476						
ANR	5003537	Symbol	as -> anal		5001476						
ANR	5003538	Symbol	ascii		5001476						
ANR	5003539	Symbol	argc		5001476						
ANR	5003540	Symbol	env_arch		5001476						
ANR	5003541	Symbol	false		5001476						
ANR	5003542	Symbol	length		5001476						
ANR	5003543	Symbol	rasm_asm		5001476						
ANR	5003544	Symbol	filters		5001476						
ANR	5003545	Symbol	* buflen		5001476						
ANR	5003546	Symbol	as -> a -> bits		5001476						
ANR	5003547	Symbol	r_main_version_print		5001476						
ANR	5003548	Symbol	__as_new		5001476						
ANR	5003549	Symbol	* r_optind		5001476						
ANR	5003550	Symbol	as -> json		5001476						
ANR	5003551	Symbol	syntax		5001476						
ANR	5003552	Symbol	feof		5001476						
ANR	5003553	Symbol	* p		5001476						
ANR	5003554	Symbol	* as		5001476						
