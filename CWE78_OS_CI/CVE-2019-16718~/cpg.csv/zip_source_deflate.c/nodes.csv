command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6641716	File	data/converged/CVE-2019-16718~_radare2/zip_source_deflate.c								
ANR	6641717	ClassDef	deflate	41:0:1701:1833							
ANR	6641718	DeclStmt									
ANR	6641719	Decl							int	int [ 2 ]	e
ANR	6641720	DeclStmt									
ANR	6641721	Decl							int	int	eof
ANR	6641722	DeclStmt									
ANR	6641723	Decl							int	int	mem_level
ANR	6641724	DeclStmt									
ANR	6641725	Decl							zip_uint64_t	zip_uint64_t	size
ANR	6641726	DeclStmt									
ANR	6641727	Decl							char	char [ BUFSIZE ]	buffer
ANR	6641728	DeclStmt									
ANR	6641729	Decl							z_stream	z_stream	zstr
ANR	6641730	DeclStmt									
ANR	6641731	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , struct deflate * , void * , zip_uint64_t )"	compress_read
ANR	6641732	DeclStmt									
ANR	6641733	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , struct deflate * , void * , zip_uint64_t )"	decompress_read
ANR	6641734	DeclStmt									
ANR	6641735	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	deflate_compress
ANR	6641736	DeclStmt									
ANR	6641737	Decl							zip_int64_t	"zip_int64_t ( struct zip_source * , void * , void * , zip_uint64_t , enum zip_source_cmd )"	deflate_decompress
ANR	6641738	DeclStmt									
ANR	6641739	Decl							void	void ( struct deflate * )	deflate_free
ANR	6641740	Function	zip_source_deflate	63:0:2327:3201							
ANR	6641741	FunctionDef	"zip_source_deflate (struct zip * za , struct zip_source * src , zip_int32_t cm , int flags)"		6641740	0					
ANR	6641742	CompoundStatement		66:0:2438:3201	6641740	0					
ANR	6641743	IdentifierDeclStatement	struct deflate * ctx ;	67:4:2444:2463	6641740	0	True				
ANR	6641744	IdentifierDecl	* ctx		6641740	0					
ANR	6641745	IdentifierDeclType	struct deflate *		6641740	0					
ANR	6641746	Identifier	ctx		6641740	1					
ANR	6641747	IdentifierDeclStatement	struct zip_source * s2 ;	68:4:2469:2490	6641740	1	True				
ANR	6641748	IdentifierDecl	* s2		6641740	0					
ANR	6641749	IdentifierDeclType	struct zip_source *		6641740	0					
ANR	6641750	Identifier	s2		6641740	1					
ANR	6641751	IfStatement	if ( src == NULL || ( cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm ) ) )		6641740	2					
ANR	6641752	Condition	src == NULL || ( cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm ) )	70:8:2501:2563	6641740	0	True				
ANR	6641753	OrExpression	src == NULL || ( cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm ) )		6641740	0		||			
ANR	6641754	EqualityExpression	src == NULL		6641740	0		==			
ANR	6641755	Identifier	src		6641740	0					
ANR	6641756	Identifier	NULL		6641740	1					
ANR	6641757	AndExpression	cm != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( cm )		6641740	1		&&			
ANR	6641758	EqualityExpression	cm != ZIP_CM_DEFLATE		6641740	0		!=			
ANR	6641759	Identifier	cm		6641740	0					
ANR	6641760	Identifier	ZIP_CM_DEFLATE		6641740	1					
ANR	6641761	UnaryOperationExpression	! ZIP_CM_IS_DEFAULT ( cm )		6641740	1					
ANR	6641762	UnaryOperator	!		6641740	0					
ANR	6641763	CallExpression	ZIP_CM_IS_DEFAULT ( cm )		6641740	1					
ANR	6641764	Callee	ZIP_CM_IS_DEFAULT		6641740	0					
ANR	6641765	Identifier	ZIP_CM_IS_DEFAULT		6641740	0					
ANR	6641766	ArgumentList	cm		6641740	1					
ANR	6641767	Argument	cm		6641740	0					
ANR	6641768	Identifier	cm		6641740	0					
ANR	6641769	CompoundStatement		5:73:127:127	6641740	1					
ANR	6641770	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"	71:1:2569:2612	6641740	0	True				
ANR	6641771	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INVAL , 0 )"		6641740	0					
ANR	6641772	Callee	_zip_error_set		6641740	0					
ANR	6641773	Identifier	_zip_error_set		6641740	0					
ANR	6641774	ArgumentList	& za -> error		6641740	1					
ANR	6641775	Argument	& za -> error		6641740	0					
ANR	6641776	UnaryOperationExpression	& za -> error		6641740	0					
ANR	6641777	UnaryOperator	&		6641740	0					
ANR	6641778	PtrMemberAccess	za -> error		6641740	1					
ANR	6641779	Identifier	za		6641740	0					
ANR	6641780	Identifier	error		6641740	1					
ANR	6641781	Argument	ZIP_ER_INVAL		6641740	1					
ANR	6641782	Identifier	ZIP_ER_INVAL		6641740	0					
ANR	6641783	Argument	0		6641740	2					
ANR	6641784	PrimaryExpression	0		6641740	0					
ANR	6641785	ReturnStatement	return NULL ;	72:1:2615:2626	6641740	1	True				
ANR	6641786	Identifier	NULL		6641740	0					
ANR	6641787	IfStatement	if ( ( ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) ) ) == NULL )		6641740	3					
ANR	6641788	Condition	( ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) ) ) == NULL	75:8:2643:2694	6641740	0	True				
ANR	6641789	EqualityExpression	( ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) ) ) == NULL		6641740	0		==			
ANR	6641790	AssignmentExpression	ctx = ( struct deflate * ) malloc ( sizeof ( * ctx ) )		6641740	0		=			
ANR	6641791	Identifier	ctx		6641740	0					
ANR	6641792	CastExpression	( struct deflate * ) malloc ( sizeof ( * ctx ) )		6641740	1					
ANR	6641793	CastTarget	struct deflate *		6641740	0					
ANR	6641794	CallExpression	malloc ( sizeof ( * ctx ) )		6641740	1					
ANR	6641795	Callee	malloc		6641740	0					
ANR	6641796	Identifier	malloc		6641740	0					
ANR	6641797	ArgumentList	sizeof ( * ctx )		6641740	1					
ANR	6641798	Argument	sizeof ( * ctx )		6641740	0					
ANR	6641799	SizeofExpression	sizeof ( * ctx )		6641740	0					
ANR	6641800	Sizeof	sizeof		6641740	0					
ANR	6641801	UnaryOperationExpression	* ctx		6641740	1					
ANR	6641802	UnaryOperator	*		6641740	0					
ANR	6641803	Identifier	ctx		6641740	1					
ANR	6641804	Identifier	NULL		6641740	1					
ANR	6641805	CompoundStatement		10:62:258:258	6641740	1					
ANR	6641806	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	76:1:2700:2744	6641740	0	True				
ANR	6641807	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6641740	0					
ANR	6641808	Callee	_zip_error_set		6641740	0					
ANR	6641809	Identifier	_zip_error_set		6641740	0					
ANR	6641810	ArgumentList	& za -> error		6641740	1					
ANR	6641811	Argument	& za -> error		6641740	0					
ANR	6641812	UnaryOperationExpression	& za -> error		6641740	0					
ANR	6641813	UnaryOperator	&		6641740	0					
ANR	6641814	PtrMemberAccess	za -> error		6641740	1					
ANR	6641815	Identifier	za		6641740	0					
ANR	6641816	Identifier	error		6641740	1					
ANR	6641817	Argument	ZIP_ER_MEMORY		6641740	1					
ANR	6641818	Identifier	ZIP_ER_MEMORY		6641740	0					
ANR	6641819	Argument	0		6641740	2					
ANR	6641820	PrimaryExpression	0		6641740	0					
ANR	6641821	ReturnStatement	return NULL ;	77:1:2747:2758	6641740	1	True				
ANR	6641822	Identifier	NULL		6641740	0					
ANR	6641823	ExpressionStatement	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0	80:4:2771:2796	6641740	4	True				
ANR	6641824	AssignmentExpression	ctx -> e [ 0 ] = ctx -> e [ 1 ] = 0		6641740	0		=			
ANR	6641825	ArrayIndexing	ctx -> e [ 0 ]		6641740	0					
ANR	6641826	PtrMemberAccess	ctx -> e		6641740	0					
ANR	6641827	Identifier	ctx		6641740	0					
ANR	6641828	Identifier	e		6641740	1					
ANR	6641829	PrimaryExpression	0		6641740	1					
ANR	6641830	AssignmentExpression	ctx -> e [ 1 ] = 0		6641740	1		=			
ANR	6641831	ArrayIndexing	ctx -> e [ 1 ]		6641740	0					
ANR	6641832	PtrMemberAccess	ctx -> e		6641740	0					
ANR	6641833	Identifier	ctx		6641740	0					
ANR	6641834	Identifier	e		6641740	1					
ANR	6641835	PrimaryExpression	1		6641740	1					
ANR	6641836	PrimaryExpression	0		6641740	1					
ANR	6641837	ExpressionStatement	ctx -> eof = 0	81:4:2802:2814	6641740	5	True				
ANR	6641838	AssignmentExpression	ctx -> eof = 0		6641740	0		=			
ANR	6641839	PtrMemberAccess	ctx -> eof		6641740	0					
ANR	6641840	Identifier	ctx		6641740	0					
ANR	6641841	Identifier	eof		6641740	1					
ANR	6641842	PrimaryExpression	0		6641740	1					
ANR	6641843	IfStatement	if ( flags & ZIP_CODEC_ENCODE )		6641740	6					
ANR	6641844	Condition	flags & ZIP_CODEC_ENCODE	82:8:2824:2847	6641740	0	True				
ANR	6641845	BitAndExpression	flags & ZIP_CODEC_ENCODE		6641740	0		&			
ANR	6641846	Identifier	flags		6641740	0					
ANR	6641847	Identifier	ZIP_CODEC_ENCODE		6641740	1					
ANR	6641848	CompoundStatement		17:34:411:411	6641740	1					
ANR	6641849	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6641740	0					
ANR	6641850	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	83:5:2857:2900	6641740	0	True				
ANR	6641851	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6641740	0					
ANR	6641852	Callee	zip_get_archive_flag		6641740	0					
ANR	6641853	Identifier	zip_get_archive_flag		6641740	0					
ANR	6641854	ArgumentList	za		6641740	1					
ANR	6641855	Argument	za		6641740	0					
ANR	6641856	Identifier	za		6641740	0					
ANR	6641857	Argument	ZIP_AFL_TORRENT		6641740	1					
ANR	6641858	Identifier	ZIP_AFL_TORRENT		6641740	0					
ANR	6641859	Argument	0		6641740	2					
ANR	6641860	PrimaryExpression	0		6641740	0					
ANR	6641861	ExpressionStatement	ctx -> mem_level = TORRENT_MEM_LEVEL	84:5:2908:2942	6641740	1	True				
ANR	6641862	AssignmentExpression	ctx -> mem_level = TORRENT_MEM_LEVEL		6641740	0		=			
ANR	6641863	PtrMemberAccess	ctx -> mem_level		6641740	0					
ANR	6641864	Identifier	ctx		6641740	0					
ANR	6641865	Identifier	mem_level		6641740	1					
ANR	6641866	Identifier	TORRENT_MEM_LEVEL		6641740	1					
ANR	6641867	ElseStatement	else		6641740	0					
ANR	6641868	ExpressionStatement	ctx -> mem_level = MAX_MEM_LEVEL	86:5:2955:2985	6641740	0	True				
ANR	6641869	AssignmentExpression	ctx -> mem_level = MAX_MEM_LEVEL		6641740	0		=			
ANR	6641870	PtrMemberAccess	ctx -> mem_level		6641740	0					
ANR	6641871	Identifier	ctx		6641740	0					
ANR	6641872	Identifier	mem_level		6641740	1					
ANR	6641873	Identifier	MAX_MEM_LEVEL		6641740	1					
ANR	6641874	IfStatement	"if ( ( s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx ) ) == NULL )"		6641740	7					
ANR	6641875	Condition	"( s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx ) ) == NULL"	89:8:3002:3140	6641740	0	True				
ANR	6641876	EqualityExpression	"( s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx ) ) == NULL"		6641740	0		==			
ANR	6641877	AssignmentExpression	"s2 = zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx )"		6641740	0		=			
ANR	6641878	Identifier	s2		6641740	0					
ANR	6641879	CallExpression	"zip_source_layered ( za , src , ( ( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress ) , ctx )"		6641740	1					
ANR	6641880	Callee	zip_source_layered		6641740	0					
ANR	6641881	Identifier	zip_source_layered		6641740	0					
ANR	6641882	ArgumentList	za		6641740	1					
ANR	6641883	Argument	za		6641740	0					
ANR	6641884	Identifier	za		6641740	0					
ANR	6641885	Argument	src		6641740	1					
ANR	6641886	Identifier	src		6641740	0					
ANR	6641887	Argument	( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress		6641740	2					
ANR	6641888	ConditionalExpression	( flags & ZIP_CODEC_ENCODE ) ? deflate_compress : deflate_decompress		6641740	0					
ANR	6641889	Condition	flags & ZIP_CODEC_ENCODE		6641740	0					
ANR	6641890	BitAndExpression	flags & ZIP_CODEC_ENCODE		6641740	0		&			
ANR	6641891	Identifier	flags		6641740	0					
ANR	6641892	Identifier	ZIP_CODEC_ENCODE		6641740	1					
ANR	6641893	Identifier	deflate_compress		6641740	1					
ANR	6641894	Identifier	deflate_decompress		6641740	2					
ANR	6641895	Argument	ctx		6641740	3					
ANR	6641896	Identifier	ctx		6641740	0					
ANR	6641897	Identifier	NULL		6641740	1					
ANR	6641898	CompoundStatement		27:25:704:704	6641740	1					
ANR	6641899	ExpressionStatement	deflate_free ( ctx )	93:1:3146:3163	6641740	0	True				
ANR	6641900	CallExpression	deflate_free ( ctx )		6641740	0					
ANR	6641901	Callee	deflate_free		6641740	0					
ANR	6641902	Identifier	deflate_free		6641740	0					
ANR	6641903	ArgumentList	ctx		6641740	1					
ANR	6641904	Argument	ctx		6641740	0					
ANR	6641905	Identifier	ctx		6641740	0					
ANR	6641906	ReturnStatement	return NULL ;	94:1:3166:3177	6641740	1	True				
ANR	6641907	Identifier	NULL		6641740	0					
ANR	6641908	ReturnStatement	return s2 ;	97:4:3190:3199	6641740	8	True				
ANR	6641909	Identifier	s2		6641740	0					
ANR	6641910	ReturnType	struct zip_source *		6641740	1					
ANR	6641911	Identifier	zip_source_deflate		6641740	2					
ANR	6641912	ParameterList	"struct zip * za , struct zip_source * src , zip_int32_t cm , int flags"		6641740	3					
ANR	6641913	Parameter	struct zip * za	64:19:2366:2379	6641740	0	True				
ANR	6641914	ParameterType	struct zip *		6641740	0					
ANR	6641915	Identifier	za		6641740	1					
ANR	6641916	Parameter	struct zip_source * src	64:35:2382:2403	6641740	1	True				
ANR	6641917	ParameterType	struct zip_source *		6641740	0					
ANR	6641918	Identifier	src		6641740	1					
ANR	6641919	Parameter	zip_int32_t cm	65:5:2411:2424	6641740	2	True				
ANR	6641920	ParameterType	zip_int32_t		6641740	0					
ANR	6641921	Identifier	cm		6641740	1					
ANR	6641922	Parameter	int flags	65:21:2427:2435	6641740	3	True				
ANR	6641923	ParameterType	int		6641740	0					
ANR	6641924	Identifier	flags		6641740	1					
ANR	6641925	CFGEntryNode	ENTRY		6641740		True				
ANR	6641926	CFGExitNode	EXIT		6641740		True				
ANR	6641927	Symbol	& za -> error		6641740						
ANR	6641928	Symbol	flags		6641740						
ANR	6641929	Symbol	TORRENT_MEM_LEVEL		6641740						
ANR	6641930	Symbol	ctx -> e		6641740						
ANR	6641931	Symbol	MAX_MEM_LEVEL		6641740						
ANR	6641932	Symbol	ZIP_CM_DEFLATE		6641740						
ANR	6641933	Symbol	ZIP_ER_INVAL		6641740						
ANR	6641934	Symbol	ZIP_CM_IS_DEFAULT		6641740						
ANR	6641935	Symbol	* ctx -> e		6641740						
ANR	6641936	Symbol	ZIP_ER_MEMORY		6641740						
ANR	6641937	Symbol	s2		6641740						
ANR	6641938	Symbol	malloc		6641740						
ANR	6641939	Symbol	NULL		6641740						
ANR	6641940	Symbol	src		6641740						
ANR	6641941	Symbol	ctx		6641740						
ANR	6641942	Symbol	za		6641740						
ANR	6641943	Symbol	ctx -> eof		6641740						
ANR	6641944	Symbol	ZIP_CODEC_ENCODE		6641740						
ANR	6641945	Symbol	zip_get_archive_flag		6641740						
ANR	6641946	Symbol	cm		6641740						
ANR	6641947	Symbol	* ctx		6641740						
ANR	6641948	Symbol	ZIP_AFL_TORRENT		6641740						
ANR	6641949	Symbol	ctx -> mem_level		6641740						
ANR	6641950	Symbol	deflate_decompress		6641740						
ANR	6641951	Symbol	zip_source_layered		6641740						
ANR	6641952	Symbol	* * ctx		6641740						
ANR	6641953	Symbol	deflate_compress		6641740						
ANR	6641954	Function	compress_read	102:0:3207:4613							
ANR	6641955	FunctionDef	"compress_read (struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len)"		6641954	0					
ANR	6641956	CompoundStatement		105:0:3322:4613	6641954	0					
ANR	6641957	IdentifierDeclStatement	"int end , ret ;"	106:4:3328:3340	6641954	0	True				
ANR	6641958	IdentifierDecl	end		6641954	0					
ANR	6641959	IdentifierDeclType	int		6641954	0					
ANR	6641960	Identifier	end		6641954	1					
ANR	6641961	IdentifierDecl	ret		6641954	1					
ANR	6641962	IdentifierDeclType	int		6641954	0					
ANR	6641963	Identifier	ret		6641954	1					
ANR	6641964	IdentifierDeclStatement	zip_int64_t n ;	107:4:3346:3359	6641954	1	True				
ANR	6641965	IdentifierDecl	n		6641954	0					
ANR	6641966	IdentifierDeclType	zip_int64_t		6641954	0					
ANR	6641967	Identifier	n		6641954	1					
ANR	6641968	IfStatement	if ( ctx -> e [ 0 ] != 0 )		6641954	2					
ANR	6641969	Condition	ctx -> e [ 0 ] != 0	109:8:3370:3383	6641954	0	True				
ANR	6641970	EqualityExpression	ctx -> e [ 0 ] != 0		6641954	0		!=			
ANR	6641971	ArrayIndexing	ctx -> e [ 0 ]		6641954	0					
ANR	6641972	PtrMemberAccess	ctx -> e		6641954	0					
ANR	6641973	Identifier	ctx		6641954	0					
ANR	6641974	Identifier	e		6641954	1					
ANR	6641975	PrimaryExpression	0		6641954	1					
ANR	6641976	PrimaryExpression	0		6641954	1					
ANR	6641977	ReturnStatement	return - 1 ;	110:1:3387:3396	6641954	1	True				
ANR	6641978	UnaryOperationExpression	- 1		6641954	0					
ANR	6641979	UnaryOperator	-		6641954	0					
ANR	6641980	PrimaryExpression	1		6641954	1					
ANR	6641981	IfStatement	if ( len == 0 )		6641954	3					
ANR	6641982	Condition	len == 0	112:8:3411:3418	6641954	0	True				
ANR	6641983	EqualityExpression	len == 0		6641954	0		==			
ANR	6641984	Identifier	len		6641954	0					
ANR	6641985	PrimaryExpression	0		6641954	1					
ANR	6641986	ReturnStatement	return 0 ;	113:1:3422:3430	6641954	1	True				
ANR	6641987	PrimaryExpression	0		6641954	0					
ANR	6641988	ExpressionStatement	ctx -> zstr . next_out = ( Bytef * ) data	115:4:3438:3472	6641954	4	True				
ANR	6641989	AssignmentExpression	ctx -> zstr . next_out = ( Bytef * ) data		6641954	0		=			
ANR	6641990	MemberAccess	ctx -> zstr . next_out		6641954	0					
ANR	6641991	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6641992	Identifier	ctx		6641954	0					
ANR	6641993	Identifier	zstr		6641954	1					
ANR	6641994	Identifier	next_out		6641954	1					
ANR	6641995	CastExpression	( Bytef * ) data		6641954	1					
ANR	6641996	CastTarget	Bytef *		6641954	0					
ANR	6641997	Identifier	data		6641954	1					
ANR	6641998	ExpressionStatement	ctx -> zstr . avail_out = ( uInt ) len	116:4:3478:3509	6641954	5	True				
ANR	6641999	AssignmentExpression	ctx -> zstr . avail_out = ( uInt ) len		6641954	0		=			
ANR	6642000	MemberAccess	ctx -> zstr . avail_out		6641954	0					
ANR	6642001	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642002	Identifier	ctx		6641954	0					
ANR	6642003	Identifier	zstr		6641954	1					
ANR	6642004	Identifier	avail_out		6641954	1					
ANR	6642005	CastExpression	( uInt ) len		6641954	1					
ANR	6642006	CastTarget	uInt		6641954	0					
ANR	6642007	Identifier	len		6641954	1					
ANR	6642008	ExpressionStatement	end = 0	118:4:3546:3553	6641954	6	True				
ANR	6642009	AssignmentExpression	end = 0		6641954	0		=			
ANR	6642010	Identifier	end		6641954	0					
ANR	6642011	PrimaryExpression	0		6641954	1					
ANR	6642012	WhileStatement	while ( ! end )		6641954	7					
ANR	6642013	Condition	! end	119:11:3566:3569	6641954	0	True				
ANR	6642014	UnaryOperationExpression	! end		6641954	0					
ANR	6642015	UnaryOperator	!		6641954	0					
ANR	6642016	Identifier	end		6641954	1					
ANR	6642017	CompoundStatement		15:17:249:249	6641954	1					
ANR	6642018	ExpressionStatement	"ret = deflate ( & ctx -> zstr , ctx -> eof ? Z_FINISH : 0 )"	120:1:3575:3625	6641954	0	True				
ANR	6642019	AssignmentExpression	"ret = deflate ( & ctx -> zstr , ctx -> eof ? Z_FINISH : 0 )"		6641954	0		=			
ANR	6642020	Identifier	ret		6641954	0					
ANR	6642021	CallExpression	"deflate ( & ctx -> zstr , ctx -> eof ? Z_FINISH : 0 )"		6641954	1					
ANR	6642022	Callee	deflate		6641954	0					
ANR	6642023	Identifier	deflate		6641954	0					
ANR	6642024	ArgumentList	& ctx -> zstr		6641954	1					
ANR	6642025	Argument	& ctx -> zstr		6641954	0					
ANR	6642026	UnaryOperationExpression	& ctx -> zstr		6641954	0					
ANR	6642027	UnaryOperator	&		6641954	0					
ANR	6642028	PtrMemberAccess	ctx -> zstr		6641954	1					
ANR	6642029	Identifier	ctx		6641954	0					
ANR	6642030	Identifier	zstr		6641954	1					
ANR	6642031	Argument	ctx -> eof ? Z_FINISH : 0		6641954	1					
ANR	6642032	ConditionalExpression	ctx -> eof ? Z_FINISH : 0		6641954	0					
ANR	6642033	Condition	ctx -> eof		6641954	0					
ANR	6642034	PtrMemberAccess	ctx -> eof		6641954	0					
ANR	6642035	Identifier	ctx		6641954	0					
ANR	6642036	Identifier	eof		6641954	1					
ANR	6642037	Identifier	Z_FINISH		6641954	1					
ANR	6642038	PrimaryExpression	0		6641954	2					
ANR	6642039	SwitchStatement	switch ( ret )		6641954	1					
ANR	6642040	Condition	ret	122:9:3637:3639	6641954	0	True				
ANR	6642041	Identifier	ret		6641954	0					
ANR	6642042	CompoundStatement		18:14:319:319	6641954	1					
ANR	6642043	Label	case Z_OK :	123:1:3645:3654	6641954	0	True				
ANR	6642044	Identifier	Z_OK		6641954	0					
ANR	6642045	Label	case Z_STREAM_END :	124:1:3657:3674	6641954	1	True				
ANR	6642046	Identifier	Z_STREAM_END		6641954	0					
ANR	6642047	IfStatement	if ( ctx -> zstr . avail_out == 0 || ( ctx -> eof && ctx -> zstr . avail_in == 0 ) )		6641954	2					
ANR	6642048	Condition	ctx -> zstr . avail_out == 0 || ( ctx -> eof && ctx -> zstr . avail_in == 0 )	127:9:3704:3770	6641954	0	True				
ANR	6642049	OrExpression	ctx -> zstr . avail_out == 0 || ( ctx -> eof && ctx -> zstr . avail_in == 0 )		6641954	0		||			
ANR	6642050	EqualityExpression	ctx -> zstr . avail_out == 0		6641954	0		==			
ANR	6642051	MemberAccess	ctx -> zstr . avail_out		6641954	0					
ANR	6642052	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642053	Identifier	ctx		6641954	0					
ANR	6642054	Identifier	zstr		6641954	1					
ANR	6642055	Identifier	avail_out		6641954	1					
ANR	6642056	PrimaryExpression	0		6641954	1					
ANR	6642057	AndExpression	ctx -> eof && ctx -> zstr . avail_in == 0		6641954	1		&&			
ANR	6642058	PtrMemberAccess	ctx -> eof		6641954	0					
ANR	6642059	Identifier	ctx		6641954	0					
ANR	6642060	Identifier	eof		6641954	1					
ANR	6642061	EqualityExpression	ctx -> zstr . avail_in == 0		6641954	1		==			
ANR	6642062	MemberAccess	ctx -> zstr . avail_in		6641954	0					
ANR	6642063	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642064	Identifier	ctx		6641954	0					
ANR	6642065	Identifier	zstr		6641954	1					
ANR	6642066	Identifier	avail_in		6641954	1					
ANR	6642067	PrimaryExpression	0		6641954	1					
ANR	6642068	ExpressionStatement	end = 1	129:2:3775:3782	6641954	1	True				
ANR	6642069	AssignmentExpression	end = 1		6641954	0		=			
ANR	6642070	Identifier	end		6641954	0					
ANR	6642071	PrimaryExpression	1		6641954	1					
ANR	6642072	BreakStatement	break ;	130:5:3789:3794	6641954	3	True				
ANR	6642073	Label	case Z_BUF_ERROR :	132:1:3798:3814	6641954	4	True				
ANR	6642074	Identifier	Z_BUF_ERROR		6641954	0					
ANR	6642075	IfStatement	if ( ctx -> zstr . avail_in == 0 )		6641954	5					
ANR	6642076	Condition	ctx -> zstr . avail_in == 0	133:9:3825:3847	6641954	0	True				
ANR	6642077	EqualityExpression	ctx -> zstr . avail_in == 0		6641954	0		==			
ANR	6642078	MemberAccess	ctx -> zstr . avail_in		6641954	0					
ANR	6642079	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642080	Identifier	ctx		6641954	0					
ANR	6642081	Identifier	zstr		6641954	1					
ANR	6642082	Identifier	avail_in		6641954	1					
ANR	6642083	PrimaryExpression	0		6641954	1					
ANR	6642084	CompoundStatement		29:34:527:527	6641954	1					
ANR	6642085	IfStatement	if ( ctx -> eof )		6641954	0					
ANR	6642086	Condition	ctx -> eof	134:6:3858:3865	6641954	0	True				
ANR	6642087	PtrMemberAccess	ctx -> eof		6641954	0					
ANR	6642088	Identifier	ctx		6641954	0					
ANR	6642089	Identifier	eof		6641954	1					
ANR	6642090	CompoundStatement		30:16:545:545	6641954	1					
ANR	6642091	ExpressionStatement	end = 1	135:6:3876:3883	6641954	0	True				
ANR	6642092	AssignmentExpression	end = 1		6641954	0		=			
ANR	6642093	Identifier	end		6641954	0					
ANR	6642094	PrimaryExpression	1		6641954	1					
ANR	6642095	BreakStatement	break ;	136:6:3891:3896	6641954	1	True				
ANR	6642096	IfStatement	"if ( ( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0 )"		6641954	1					
ANR	6642097	Condition	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"	139:6:3909:3970	6641954	0	True				
ANR	6642098	RelationalExpression	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"		6641954	0		<			
ANR	6642099	AssignmentExpression	"n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6641954	0		=			
ANR	6642100	Identifier	n		6641954	0					
ANR	6642101	CallExpression	"zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6641954	1					
ANR	6642102	Callee	zip_source_read		6641954	0					
ANR	6642103	Identifier	zip_source_read		6641954	0					
ANR	6642104	ArgumentList	src		6641954	1					
ANR	6642105	Argument	src		6641954	0					
ANR	6642106	Identifier	src		6641954	0					
ANR	6642107	Argument	ctx -> buffer		6641954	1					
ANR	6642108	PtrMemberAccess	ctx -> buffer		6641954	0					
ANR	6642109	Identifier	ctx		6641954	0					
ANR	6642110	Identifier	buffer		6641954	1					
ANR	6642111	Argument	sizeof ( ctx -> buffer )		6641954	2					
ANR	6642112	SizeofExpression	sizeof ( ctx -> buffer )		6641954	0					
ANR	6642113	Sizeof	sizeof		6641954	0					
ANR	6642114	PtrMemberAccess	ctx -> buffer		6641954	1					
ANR	6642115	Identifier	ctx		6641954	0					
ANR	6642116	Identifier	buffer		6641954	1					
ANR	6642117	PrimaryExpression	0		6641954	1					
ANR	6642118	CompoundStatement		35:70:650:650	6641954	1					
ANR	6642119	ExpressionStatement	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"	140:6:3981:4020	6641954	0	True				
ANR	6642120	CallExpression	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"		6641954	0					
ANR	6642121	Callee	zip_source_error		6641954	0					
ANR	6642122	Identifier	zip_source_error		6641954	0					
ANR	6642123	ArgumentList	src		6641954	1					
ANR	6642124	Argument	src		6641954	0					
ANR	6642125	Identifier	src		6641954	0					
ANR	6642126	Argument	ctx -> e		6641954	1					
ANR	6642127	PtrMemberAccess	ctx -> e		6641954	0					
ANR	6642128	Identifier	ctx		6641954	0					
ANR	6642129	Identifier	e		6641954	1					
ANR	6642130	Argument	ctx -> e + 1		6641954	2					
ANR	6642131	AdditiveExpression	ctx -> e + 1		6641954	0		+			
ANR	6642132	PtrMemberAccess	ctx -> e		6641954	0					
ANR	6642133	Identifier	ctx		6641954	0					
ANR	6642134	Identifier	e		6641954	1					
ANR	6642135	PrimaryExpression	1		6641954	1					
ANR	6642136	ExpressionStatement	end = 1	141:6:4028:4035	6641954	1	True				
ANR	6642137	AssignmentExpression	end = 1		6641954	0		=			
ANR	6642138	Identifier	end		6641954	0					
ANR	6642139	PrimaryExpression	1		6641954	1					
ANR	6642140	BreakStatement	break ;	142:6:4043:4048	6641954	2	True				
ANR	6642141	ElseStatement	else		6641954	0					
ANR	6642142	IfStatement	if ( n == 0 )		6641954	0					
ANR	6642143	Condition	n == 0	144:11:4065:4070	6641954	0	True				
ANR	6642144	EqualityExpression	n == 0		6641954	0		==			
ANR	6642145	Identifier	n		6641954	0					
ANR	6642146	PrimaryExpression	0		6641954	1					
ANR	6642147	CompoundStatement		40:19:750:750	6641954	1					
ANR	6642148	ExpressionStatement	ctx -> eof = 1	145:6:4081:4093	6641954	0	True				
ANR	6642149	AssignmentExpression	ctx -> eof = 1		6641954	0		=			
ANR	6642150	PtrMemberAccess	ctx -> eof		6641954	0					
ANR	6642151	Identifier	ctx		6641954	0					
ANR	6642152	Identifier	eof		6641954	1					
ANR	6642153	PrimaryExpression	1		6641954	1					
ANR	6642154	ExpressionStatement	ctx -> size = ctx -> zstr . total_in	146:6:4101:4131	6641954	1	True				
ANR	6642155	AssignmentExpression	ctx -> size = ctx -> zstr . total_in		6641954	0		=			
ANR	6642156	PtrMemberAccess	ctx -> size		6641954	0					
ANR	6642157	Identifier	ctx		6641954	0					
ANR	6642158	Identifier	size		6641954	1					
ANR	6642159	MemberAccess	ctx -> zstr . total_in		6641954	1					
ANR	6642160	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642161	Identifier	ctx		6641954	0					
ANR	6642162	Identifier	zstr		6641954	1					
ANR	6642163	Identifier	total_in		6641954	1					
ANR	6642164	ElseStatement	else		6641954	0					
ANR	6642165	CompoundStatement		45:7:865:865	6641954	0					
ANR	6642166	ExpressionStatement	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer	150:6:4196:4236	6641954	0	True				
ANR	6642167	AssignmentExpression	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer		6641954	0		=			
ANR	6642168	MemberAccess	ctx -> zstr . next_in		6641954	0					
ANR	6642169	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642170	Identifier	ctx		6641954	0					
ANR	6642171	Identifier	zstr		6641954	1					
ANR	6642172	Identifier	next_in		6641954	1					
ANR	6642173	CastExpression	( Bytef * ) ctx -> buffer		6641954	1					
ANR	6642174	CastTarget	Bytef *		6641954	0					
ANR	6642175	PtrMemberAccess	ctx -> buffer		6641954	1					
ANR	6642176	Identifier	ctx		6641954	0					
ANR	6642177	Identifier	buffer		6641954	1					
ANR	6642178	ExpressionStatement	ctx -> zstr . avail_in = ( uInt ) n	151:6:4244:4272	6641954	1	True				
ANR	6642179	AssignmentExpression	ctx -> zstr . avail_in = ( uInt ) n		6641954	0		=			
ANR	6642180	MemberAccess	ctx -> zstr . avail_in		6641954	0					
ANR	6642181	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642182	Identifier	ctx		6641954	0					
ANR	6642183	Identifier	zstr		6641954	1					
ANR	6642184	Identifier	avail_in		6641954	1					
ANR	6642185	CastExpression	( uInt ) n		6641954	1					
ANR	6642186	CastTarget	uInt		6641954	0					
ANR	6642187	Identifier	n		6641954	1					
ANR	6642188	ContinueStatement	continue ;	153:2:4280:4288	6641954	2	True				
ANR	6642189	Label	case Z_NEED_DICT :	156:1:4321:4337	6641954	6	True				
ANR	6642190	Identifier	Z_NEED_DICT		6641954	0					
ANR	6642191	Label	case Z_DATA_ERROR :	157:1:4340:4357	6641954	7	True				
ANR	6642192	Identifier	Z_DATA_ERROR		6641954	0					
ANR	6642193	Label	case Z_STREAM_ERROR :	158:1:4360:4379	6641954	8	True				
ANR	6642194	Identifier	Z_STREAM_ERROR		6641954	0					
ANR	6642195	Label	case Z_MEM_ERROR :	159:1:4382:4398	6641954	9	True				
ANR	6642196	Identifier	Z_MEM_ERROR		6641954	0					
ANR	6642197	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	160:5:4405:4428	6641954	10	True				
ANR	6642198	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6641954	0		=			
ANR	6642199	ArrayIndexing	ctx -> e [ 0 ]		6641954	0					
ANR	6642200	PtrMemberAccess	ctx -> e		6641954	0					
ANR	6642201	Identifier	ctx		6641954	0					
ANR	6642202	Identifier	e		6641954	1					
ANR	6642203	PrimaryExpression	0		6641954	1					
ANR	6642204	Identifier	ZIP_ER_ZLIB		6641954	1					
ANR	6642205	ExpressionStatement	ctx -> e [ 1 ] = ret	161:5:4435:4450	6641954	11	True				
ANR	6642206	AssignmentExpression	ctx -> e [ 1 ] = ret		6641954	0		=			
ANR	6642207	ArrayIndexing	ctx -> e [ 1 ]		6641954	0					
ANR	6642208	PtrMemberAccess	ctx -> e		6641954	0					
ANR	6642209	Identifier	ctx		6641954	0					
ANR	6642210	Identifier	e		6641954	1					
ANR	6642211	PrimaryExpression	1		6641954	1					
ANR	6642212	Identifier	ret		6641954	1					
ANR	6642213	ExpressionStatement	end = 1	163:5:4458:4465	6641954	12	True				
ANR	6642214	AssignmentExpression	end = 1		6641954	0		=			
ANR	6642215	Identifier	end		6641954	0					
ANR	6642216	PrimaryExpression	1		6641954	1					
ANR	6642217	BreakStatement	break ;	164:5:4472:4477	6641954	13	True				
ANR	6642218	IfStatement	if ( ctx -> zstr . avail_out < len )		6641954	8					
ANR	6642219	Condition	ctx -> zstr . avail_out < len	168:8:4497:4521	6641954	0	True				
ANR	6642220	RelationalExpression	ctx -> zstr . avail_out < len		6641954	0		<			
ANR	6642221	MemberAccess	ctx -> zstr . avail_out		6641954	0					
ANR	6642222	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642223	Identifier	ctx		6641954	0					
ANR	6642224	Identifier	zstr		6641954	1					
ANR	6642225	Identifier	avail_out		6641954	1					
ANR	6642226	Identifier	len		6641954	1					
ANR	6642227	ReturnStatement	return ( zip_int64_t ) ( len - ctx -> zstr . avail_out ) ;	169:1:4525:4572	6641954	1	True				
ANR	6642228	CastExpression	( zip_int64_t ) ( len - ctx -> zstr . avail_out )		6641954	0					
ANR	6642229	CastTarget	zip_int64_t		6641954	0					
ANR	6642230	AdditiveExpression	len - ctx -> zstr . avail_out		6641954	1		-			
ANR	6642231	Identifier	len		6641954	0					
ANR	6642232	MemberAccess	ctx -> zstr . avail_out		6641954	1					
ANR	6642233	PtrMemberAccess	ctx -> zstr		6641954	0					
ANR	6642234	Identifier	ctx		6641954	0					
ANR	6642235	Identifier	zstr		6641954	1					
ANR	6642236	Identifier	avail_out		6641954	1					
ANR	6642237	ReturnStatement	return ( ctx -> e [ 0 ] == 0 ) ? 0 : - 1 ;	171:4:4579:4611	6641954	9	True				
ANR	6642238	ConditionalExpression	( ctx -> e [ 0 ] == 0 ) ? 0 : - 1		6641954	0					
ANR	6642239	Condition	ctx -> e [ 0 ] == 0		6641954	0					
ANR	6642240	EqualityExpression	ctx -> e [ 0 ] == 0		6641954	0		==			
ANR	6642241	ArrayIndexing	ctx -> e [ 0 ]		6641954	0					
ANR	6642242	PtrMemberAccess	ctx -> e		6641954	0					
ANR	6642243	Identifier	ctx		6641954	0					
ANR	6642244	Identifier	e		6641954	1					
ANR	6642245	PrimaryExpression	0		6641954	1					
ANR	6642246	PrimaryExpression	0		6641954	1					
ANR	6642247	PrimaryExpression	0		6641954	1					
ANR	6642248	UnaryOperationExpression	- 1		6641954	2					
ANR	6642249	UnaryOperator	-		6641954	0					
ANR	6642250	PrimaryExpression	1		6641954	1					
ANR	6642251	ReturnType	static zip_int64_t		6641954	1					
ANR	6642252	Identifier	compress_read		6641954	2					
ANR	6642253	ParameterList	"struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len"		6641954	3					
ANR	6642254	Parameter	struct zip_source * src	103:14:3240:3261	6641954	0	True				
ANR	6642255	ParameterType	struct zip_source *		6641954	0					
ANR	6642256	Identifier	src		6641954	1					
ANR	6642257	Parameter	struct deflate * ctx	103:38:3264:3282	6641954	1	True				
ANR	6642258	ParameterType	struct deflate *		6641954	0					
ANR	6642259	Identifier	ctx		6641954	1					
ANR	6642260	Parameter	void * data	104:7:3292:3301	6641954	2	True				
ANR	6642261	ParameterType	void *		6641954	0					
ANR	6642262	Identifier	data		6641954	1					
ANR	6642263	Parameter	zip_uint64_t len	104:19:3304:3319	6641954	3	True				
ANR	6642264	ParameterType	zip_uint64_t		6641954	0					
ANR	6642265	Identifier	len		6641954	1					
ANR	6642266	CFGEntryNode	ENTRY		6641954		True				
ANR	6642267	CFGExitNode	EXIT		6641954		True				
ANR	6642268	Symbol	data		6641954						
ANR	6642269	Symbol	ctx -> zstr . next_out		6641954						
ANR	6642270	Symbol	& ctx -> zstr		6641954						
ANR	6642271	Symbol	ctx -> e		6641954						
ANR	6642272	Symbol	len		6641954						
ANR	6642273	Symbol	ctx -> zstr . avail_out		6641954						
ANR	6642274	Symbol	end		6641954						
ANR	6642275	Symbol	* ctx -> e		6641954						
ANR	6642276	Symbol	ret		6641954						
ANR	6642277	Symbol	ctx -> zstr . next_in		6641954						
ANR	6642278	Symbol	src		6641954						
ANR	6642279	Symbol	ctx		6641954						
ANR	6642280	Symbol	ctx -> eof		6641954						
ANR	6642281	Symbol	zip_source_read		6641954						
ANR	6642282	Symbol	ctx -> buffer		6641954						
ANR	6642283	Symbol	ctx -> zstr . total_in		6641954						
ANR	6642284	Symbol	n		6641954						
ANR	6642285	Symbol	* ctx		6641954						
ANR	6642286	Symbol	Z_FINISH		6641954						
ANR	6642287	Symbol	ctx -> zstr . avail_in		6641954						
ANR	6642288	Symbol	deflate		6641954						
ANR	6642289	Symbol	ZIP_ER_ZLIB		6641954						
ANR	6642290	Symbol	ctx -> size		6641954						
ANR	6642291	Symbol	* * ctx		6641954						
ANR	6642292	Symbol	ctx -> zstr		6641954						
ANR	6642293	Function	decompress_read	176:0:4619:5888							
ANR	6642294	FunctionDef	"decompress_read (struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len)"		6642293	0					
ANR	6642295	CompoundStatement		179:0:4731:5888	6642293	0					
ANR	6642296	IdentifierDeclStatement	"int end , ret ;"	180:4:4737:4749	6642293	0	True				
ANR	6642297	IdentifierDecl	end		6642293	0					
ANR	6642298	IdentifierDeclType	int		6642293	0					
ANR	6642299	Identifier	end		6642293	1					
ANR	6642300	IdentifierDecl	ret		6642293	1					
ANR	6642301	IdentifierDeclType	int		6642293	0					
ANR	6642302	Identifier	ret		6642293	1					
ANR	6642303	IdentifierDeclStatement	zip_int64_t n ;	181:4:4755:4768	6642293	1	True				
ANR	6642304	IdentifierDecl	n		6642293	0					
ANR	6642305	IdentifierDeclType	zip_int64_t		6642293	0					
ANR	6642306	Identifier	n		6642293	1					
ANR	6642307	IfStatement	if ( ctx -> e [ 0 ] != 0 )		6642293	2					
ANR	6642308	Condition	ctx -> e [ 0 ] != 0	183:8:4779:4792	6642293	0	True				
ANR	6642309	EqualityExpression	ctx -> e [ 0 ] != 0		6642293	0		!=			
ANR	6642310	ArrayIndexing	ctx -> e [ 0 ]		6642293	0					
ANR	6642311	PtrMemberAccess	ctx -> e		6642293	0					
ANR	6642312	Identifier	ctx		6642293	0					
ANR	6642313	Identifier	e		6642293	1					
ANR	6642314	PrimaryExpression	0		6642293	1					
ANR	6642315	PrimaryExpression	0		6642293	1					
ANR	6642316	ReturnStatement	return - 1 ;	184:1:4796:4805	6642293	1	True				
ANR	6642317	UnaryOperationExpression	- 1		6642293	0					
ANR	6642318	UnaryOperator	-		6642293	0					
ANR	6642319	PrimaryExpression	1		6642293	1					
ANR	6642320	IfStatement	if ( len == 0 )		6642293	3					
ANR	6642321	Condition	len == 0	186:8:4820:4827	6642293	0	True				
ANR	6642322	EqualityExpression	len == 0		6642293	0		==			
ANR	6642323	Identifier	len		6642293	0					
ANR	6642324	PrimaryExpression	0		6642293	1					
ANR	6642325	ReturnStatement	return 0 ;	187:1:4831:4839	6642293	1	True				
ANR	6642326	PrimaryExpression	0		6642293	0					
ANR	6642327	ExpressionStatement	ctx -> zstr . next_out = ( Bytef * ) data	189:4:4847:4881	6642293	4	True				
ANR	6642328	AssignmentExpression	ctx -> zstr . next_out = ( Bytef * ) data		6642293	0		=			
ANR	6642329	MemberAccess	ctx -> zstr . next_out		6642293	0					
ANR	6642330	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642331	Identifier	ctx		6642293	0					
ANR	6642332	Identifier	zstr		6642293	1					
ANR	6642333	Identifier	next_out		6642293	1					
ANR	6642334	CastExpression	( Bytef * ) data		6642293	1					
ANR	6642335	CastTarget	Bytef *		6642293	0					
ANR	6642336	Identifier	data		6642293	1					
ANR	6642337	ExpressionStatement	ctx -> zstr . avail_out = ( uInt ) len	190:4:4887:4918	6642293	5	True				
ANR	6642338	AssignmentExpression	ctx -> zstr . avail_out = ( uInt ) len		6642293	0		=			
ANR	6642339	MemberAccess	ctx -> zstr . avail_out		6642293	0					
ANR	6642340	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642341	Identifier	ctx		6642293	0					
ANR	6642342	Identifier	zstr		6642293	1					
ANR	6642343	Identifier	avail_out		6642293	1					
ANR	6642344	CastExpression	( uInt ) len		6642293	1					
ANR	6642345	CastTarget	uInt		6642293	0					
ANR	6642346	Identifier	len		6642293	1					
ANR	6642347	ExpressionStatement	end = 0	192:4:4955:4962	6642293	6	True				
ANR	6642348	AssignmentExpression	end = 0		6642293	0		=			
ANR	6642349	Identifier	end		6642293	0					
ANR	6642350	PrimaryExpression	0		6642293	1					
ANR	6642351	WhileStatement	while ( ! end && ctx -> zstr . avail_out )		6642293	7					
ANR	6642352	Condition	! end && ctx -> zstr . avail_out	193:11:4975:5001	6642293	0	True				
ANR	6642353	AndExpression	! end && ctx -> zstr . avail_out		6642293	0		&&			
ANR	6642354	UnaryOperationExpression	! end		6642293	0					
ANR	6642355	UnaryOperator	!		6642293	0					
ANR	6642356	Identifier	end		6642293	1					
ANR	6642357	MemberAccess	ctx -> zstr . avail_out		6642293	1					
ANR	6642358	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642359	Identifier	ctx		6642293	0					
ANR	6642360	Identifier	zstr		6642293	1					
ANR	6642361	Identifier	avail_out		6642293	1					
ANR	6642362	CompoundStatement		15:40:272:272	6642293	1					
ANR	6642363	ExpressionStatement	"ret = inflate ( & ctx -> zstr , Z_SYNC_FLUSH )"	194:1:5007:5046	6642293	0	True				
ANR	6642364	AssignmentExpression	"ret = inflate ( & ctx -> zstr , Z_SYNC_FLUSH )"		6642293	0		=			
ANR	6642365	Identifier	ret		6642293	0					
ANR	6642366	CallExpression	"inflate ( & ctx -> zstr , Z_SYNC_FLUSH )"		6642293	1					
ANR	6642367	Callee	inflate		6642293	0					
ANR	6642368	Identifier	inflate		6642293	0					
ANR	6642369	ArgumentList	& ctx -> zstr		6642293	1					
ANR	6642370	Argument	& ctx -> zstr		6642293	0					
ANR	6642371	UnaryOperationExpression	& ctx -> zstr		6642293	0					
ANR	6642372	UnaryOperator	&		6642293	0					
ANR	6642373	PtrMemberAccess	ctx -> zstr		6642293	1					
ANR	6642374	Identifier	ctx		6642293	0					
ANR	6642375	Identifier	zstr		6642293	1					
ANR	6642376	Argument	Z_SYNC_FLUSH		6642293	1					
ANR	6642377	Identifier	Z_SYNC_FLUSH		6642293	0					
ANR	6642378	SwitchStatement	switch ( ret )		6642293	1					
ANR	6642379	Condition	ret	196:9:5058:5060	6642293	0	True				
ANR	6642380	Identifier	ret		6642293	0					
ANR	6642381	CompoundStatement		18:14:331:331	6642293	1					
ANR	6642382	Label	case Z_OK :	197:1:5066:5075	6642293	0	True				
ANR	6642383	Identifier	Z_OK		6642293	0					
ANR	6642384	BreakStatement	break ;	198:5:5082:5087	6642293	1	True				
ANR	6642385	Label	case Z_STREAM_END :	200:1:5096:5113	6642293	2	True				
ANR	6642386	Identifier	Z_STREAM_END		6642293	0					
ANR	6642387	ExpressionStatement	ctx -> eof = 1	201:5:5120:5132	6642293	3	True				
ANR	6642388	AssignmentExpression	ctx -> eof = 1		6642293	0		=			
ANR	6642389	PtrMemberAccess	ctx -> eof		6642293	0					
ANR	6642390	Identifier	ctx		6642293	0					
ANR	6642391	Identifier	eof		6642293	1					
ANR	6642392	PrimaryExpression	1		6642293	1					
ANR	6642393	ExpressionStatement	end = 1	202:5:5139:5146	6642293	4	True				
ANR	6642394	AssignmentExpression	end = 1		6642293	0		=			
ANR	6642395	Identifier	end		6642293	0					
ANR	6642396	PrimaryExpression	1		6642293	1					
ANR	6642397	BreakStatement	break ;	203:5:5153:5158	6642293	5	True				
ANR	6642398	Label	case Z_BUF_ERROR :	205:1:5162:5178	6642293	6	True				
ANR	6642399	Identifier	Z_BUF_ERROR		6642293	0					
ANR	6642400	IfStatement	if ( ctx -> zstr . avail_in == 0 )		6642293	7					
ANR	6642401	Condition	ctx -> zstr . avail_in == 0	206:9:5189:5211	6642293	0	True				
ANR	6642402	EqualityExpression	ctx -> zstr . avail_in == 0		6642293	0		==			
ANR	6642403	MemberAccess	ctx -> zstr . avail_in		6642293	0					
ANR	6642404	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642405	Identifier	ctx		6642293	0					
ANR	6642406	Identifier	zstr		6642293	1					
ANR	6642407	Identifier	avail_in		6642293	1					
ANR	6642408	PrimaryExpression	0		6642293	1					
ANR	6642409	CompoundStatement		28:34:482:482	6642293	1					
ANR	6642410	IfStatement	if ( ctx -> eof )		6642293	0					
ANR	6642411	Condition	ctx -> eof	207:6:5222:5229	6642293	0	True				
ANR	6642412	PtrMemberAccess	ctx -> eof		6642293	0					
ANR	6642413	Identifier	ctx		6642293	0					
ANR	6642414	Identifier	eof		6642293	1					
ANR	6642415	CompoundStatement		29:16:500:500	6642293	1					
ANR	6642416	ExpressionStatement	end = 1	208:6:5240:5247	6642293	0	True				
ANR	6642417	AssignmentExpression	end = 1		6642293	0		=			
ANR	6642418	Identifier	end		6642293	0					
ANR	6642419	PrimaryExpression	1		6642293	1					
ANR	6642420	BreakStatement	break ;	209:6:5255:5260	6642293	1	True				
ANR	6642421	IfStatement	"if ( ( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0 )"		6642293	1					
ANR	6642422	Condition	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"	212:6:5273:5334	6642293	0	True				
ANR	6642423	RelationalExpression	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"		6642293	0		<			
ANR	6642424	AssignmentExpression	"n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6642293	0		=			
ANR	6642425	Identifier	n		6642293	0					
ANR	6642426	CallExpression	"zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6642293	1					
ANR	6642427	Callee	zip_source_read		6642293	0					
ANR	6642428	Identifier	zip_source_read		6642293	0					
ANR	6642429	ArgumentList	src		6642293	1					
ANR	6642430	Argument	src		6642293	0					
ANR	6642431	Identifier	src		6642293	0					
ANR	6642432	Argument	ctx -> buffer		6642293	1					
ANR	6642433	PtrMemberAccess	ctx -> buffer		6642293	0					
ANR	6642434	Identifier	ctx		6642293	0					
ANR	6642435	Identifier	buffer		6642293	1					
ANR	6642436	Argument	sizeof ( ctx -> buffer )		6642293	2					
ANR	6642437	SizeofExpression	sizeof ( ctx -> buffer )		6642293	0					
ANR	6642438	Sizeof	sizeof		6642293	0					
ANR	6642439	PtrMemberAccess	ctx -> buffer		6642293	1					
ANR	6642440	Identifier	ctx		6642293	0					
ANR	6642441	Identifier	buffer		6642293	1					
ANR	6642442	PrimaryExpression	0		6642293	1					
ANR	6642443	CompoundStatement		34:70:605:605	6642293	1					
ANR	6642444	ExpressionStatement	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"	213:6:5345:5384	6642293	0	True				
ANR	6642445	CallExpression	"zip_source_error ( src , ctx -> e , ctx -> e + 1 )"		6642293	0					
ANR	6642446	Callee	zip_source_error		6642293	0					
ANR	6642447	Identifier	zip_source_error		6642293	0					
ANR	6642448	ArgumentList	src		6642293	1					
ANR	6642449	Argument	src		6642293	0					
ANR	6642450	Identifier	src		6642293	0					
ANR	6642451	Argument	ctx -> e		6642293	1					
ANR	6642452	PtrMemberAccess	ctx -> e		6642293	0					
ANR	6642453	Identifier	ctx		6642293	0					
ANR	6642454	Identifier	e		6642293	1					
ANR	6642455	Argument	ctx -> e + 1		6642293	2					
ANR	6642456	AdditiveExpression	ctx -> e + 1		6642293	0		+			
ANR	6642457	PtrMemberAccess	ctx -> e		6642293	0					
ANR	6642458	Identifier	ctx		6642293	0					
ANR	6642459	Identifier	e		6642293	1					
ANR	6642460	PrimaryExpression	1		6642293	1					
ANR	6642461	ExpressionStatement	end = 1	214:6:5392:5399	6642293	1	True				
ANR	6642462	AssignmentExpression	end = 1		6642293	0		=			
ANR	6642463	Identifier	end		6642293	0					
ANR	6642464	PrimaryExpression	1		6642293	1					
ANR	6642465	BreakStatement	break ;	215:6:5407:5412	6642293	2	True				
ANR	6642466	ElseStatement	else		6642293	0					
ANR	6642467	IfStatement	if ( n == 0 )		6642293	0					
ANR	6642468	Condition	n == 0	217:11:5429:5434	6642293	0	True				
ANR	6642469	EqualityExpression	n == 0		6642293	0		==			
ANR	6642470	Identifier	n		6642293	0					
ANR	6642471	PrimaryExpression	0		6642293	1					
ANR	6642472	ExpressionStatement	ctx -> eof = 1	218:6:5443:5455	6642293	1	True				
ANR	6642473	AssignmentExpression	ctx -> eof = 1		6642293	0		=			
ANR	6642474	PtrMemberAccess	ctx -> eof		6642293	0					
ANR	6642475	Identifier	ctx		6642293	0					
ANR	6642476	Identifier	eof		6642293	1					
ANR	6642477	PrimaryExpression	1		6642293	1					
ANR	6642478	ElseStatement	else		6642293	0					
ANR	6642479	CompoundStatement		41:7:732:732	6642293	0					
ANR	6642480	ExpressionStatement	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer	220:6:5472:5512	6642293	0	True				
ANR	6642481	AssignmentExpression	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer		6642293	0		=			
ANR	6642482	MemberAccess	ctx -> zstr . next_in		6642293	0					
ANR	6642483	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642484	Identifier	ctx		6642293	0					
ANR	6642485	Identifier	zstr		6642293	1					
ANR	6642486	Identifier	next_in		6642293	1					
ANR	6642487	CastExpression	( Bytef * ) ctx -> buffer		6642293	1					
ANR	6642488	CastTarget	Bytef *		6642293	0					
ANR	6642489	PtrMemberAccess	ctx -> buffer		6642293	1					
ANR	6642490	Identifier	ctx		6642293	0					
ANR	6642491	Identifier	buffer		6642293	1					
ANR	6642492	ExpressionStatement	ctx -> zstr . avail_in = ( uInt ) n	221:6:5520:5548	6642293	1	True				
ANR	6642493	AssignmentExpression	ctx -> zstr . avail_in = ( uInt ) n		6642293	0		=			
ANR	6642494	MemberAccess	ctx -> zstr . avail_in		6642293	0					
ANR	6642495	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642496	Identifier	ctx		6642293	0					
ANR	6642497	Identifier	zstr		6642293	1					
ANR	6642498	Identifier	avail_in		6642293	1					
ANR	6642499	CastExpression	( uInt ) n		6642293	1					
ANR	6642500	CastTarget	uInt		6642293	0					
ANR	6642501	Identifier	n		6642293	1					
ANR	6642502	ContinueStatement	continue ;	223:2:5556:5564	6642293	2	True				
ANR	6642503	Label	case Z_NEED_DICT :	226:1:5597:5613	6642293	8	True				
ANR	6642504	Identifier	Z_NEED_DICT		6642293	0					
ANR	6642505	Label	case Z_DATA_ERROR :	227:1:5616:5633	6642293	9	True				
ANR	6642506	Identifier	Z_DATA_ERROR		6642293	0					
ANR	6642507	Label	case Z_STREAM_ERROR :	228:1:5636:5655	6642293	10	True				
ANR	6642508	Identifier	Z_STREAM_ERROR		6642293	0					
ANR	6642509	Label	case Z_MEM_ERROR :	229:1:5658:5674	6642293	11	True				
ANR	6642510	Identifier	Z_MEM_ERROR		6642293	0					
ANR	6642511	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	230:5:5681:5704	6642293	12	True				
ANR	6642512	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6642293	0		=			
ANR	6642513	ArrayIndexing	ctx -> e [ 0 ]		6642293	0					
ANR	6642514	PtrMemberAccess	ctx -> e		6642293	0					
ANR	6642515	Identifier	ctx		6642293	0					
ANR	6642516	Identifier	e		6642293	1					
ANR	6642517	PrimaryExpression	0		6642293	1					
ANR	6642518	Identifier	ZIP_ER_ZLIB		6642293	1					
ANR	6642519	ExpressionStatement	ctx -> e [ 1 ] = ret	231:5:5711:5726	6642293	13	True				
ANR	6642520	AssignmentExpression	ctx -> e [ 1 ] = ret		6642293	0		=			
ANR	6642521	ArrayIndexing	ctx -> e [ 1 ]		6642293	0					
ANR	6642522	PtrMemberAccess	ctx -> e		6642293	0					
ANR	6642523	Identifier	ctx		6642293	0					
ANR	6642524	Identifier	e		6642293	1					
ANR	6642525	PrimaryExpression	1		6642293	1					
ANR	6642526	Identifier	ret		6642293	1					
ANR	6642527	ExpressionStatement	end = 1	232:5:5733:5740	6642293	14	True				
ANR	6642528	AssignmentExpression	end = 1		6642293	0		=			
ANR	6642529	Identifier	end		6642293	0					
ANR	6642530	PrimaryExpression	1		6642293	1					
ANR	6642531	BreakStatement	break ;	233:5:5747:5752	6642293	15	True				
ANR	6642532	IfStatement	if ( ctx -> zstr . avail_out < len )		6642293	8					
ANR	6642533	Condition	ctx -> zstr . avail_out < len	237:8:5772:5796	6642293	0	True				
ANR	6642534	RelationalExpression	ctx -> zstr . avail_out < len		6642293	0		<			
ANR	6642535	MemberAccess	ctx -> zstr . avail_out		6642293	0					
ANR	6642536	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642537	Identifier	ctx		6642293	0					
ANR	6642538	Identifier	zstr		6642293	1					
ANR	6642539	Identifier	avail_out		6642293	1					
ANR	6642540	Identifier	len		6642293	1					
ANR	6642541	ReturnStatement	return ( zip_int64_t ) ( len - ctx -> zstr . avail_out ) ;	238:1:5800:5847	6642293	1	True				
ANR	6642542	CastExpression	( zip_int64_t ) ( len - ctx -> zstr . avail_out )		6642293	0					
ANR	6642543	CastTarget	zip_int64_t		6642293	0					
ANR	6642544	AdditiveExpression	len - ctx -> zstr . avail_out		6642293	1		-			
ANR	6642545	Identifier	len		6642293	0					
ANR	6642546	MemberAccess	ctx -> zstr . avail_out		6642293	1					
ANR	6642547	PtrMemberAccess	ctx -> zstr		6642293	0					
ANR	6642548	Identifier	ctx		6642293	0					
ANR	6642549	Identifier	zstr		6642293	1					
ANR	6642550	Identifier	avail_out		6642293	1					
ANR	6642551	ReturnStatement	return ( ctx -> e [ 0 ] == 0 ) ? 0 : - 1 ;	240:4:5854:5886	6642293	9	True				
ANR	6642552	ConditionalExpression	( ctx -> e [ 0 ] == 0 ) ? 0 : - 1		6642293	0					
ANR	6642553	Condition	ctx -> e [ 0 ] == 0		6642293	0					
ANR	6642554	EqualityExpression	ctx -> e [ 0 ] == 0		6642293	0		==			
ANR	6642555	ArrayIndexing	ctx -> e [ 0 ]		6642293	0					
ANR	6642556	PtrMemberAccess	ctx -> e		6642293	0					
ANR	6642557	Identifier	ctx		6642293	0					
ANR	6642558	Identifier	e		6642293	1					
ANR	6642559	PrimaryExpression	0		6642293	1					
ANR	6642560	PrimaryExpression	0		6642293	1					
ANR	6642561	PrimaryExpression	0		6642293	1					
ANR	6642562	UnaryOperationExpression	- 1		6642293	2					
ANR	6642563	UnaryOperator	-		6642293	0					
ANR	6642564	PrimaryExpression	1		6642293	1					
ANR	6642565	ReturnType	static zip_int64_t		6642293	1					
ANR	6642566	Identifier	decompress_read		6642293	2					
ANR	6642567	ParameterList	"struct zip_source * src , struct deflate * ctx , void * data , zip_uint64_t len"		6642293	3					
ANR	6642568	Parameter	struct zip_source * src	177:16:4654:4675	6642293	0	True				
ANR	6642569	ParameterType	struct zip_source *		6642293	0					
ANR	6642570	Identifier	src		6642293	1					
ANR	6642571	Parameter	struct deflate * ctx	177:40:4678:4696	6642293	1	True				
ANR	6642572	ParameterType	struct deflate *		6642293	0					
ANR	6642573	Identifier	ctx		6642293	1					
ANR	6642574	Parameter	void * data	178:2:4701:4710	6642293	2	True				
ANR	6642575	ParameterType	void *		6642293	0					
ANR	6642576	Identifier	data		6642293	1					
ANR	6642577	Parameter	zip_uint64_t len	178:14:4713:4728	6642293	3	True				
ANR	6642578	ParameterType	zip_uint64_t		6642293	0					
ANR	6642579	Identifier	len		6642293	1					
ANR	6642580	CFGEntryNode	ENTRY		6642293		True				
ANR	6642581	CFGExitNode	EXIT		6642293		True				
ANR	6642582	Symbol	ret		6642293						
ANR	6642583	Symbol	Z_SYNC_FLUSH		6642293						
ANR	6642584	Symbol	ctx -> zstr . next_in		6642293						
ANR	6642585	Symbol	data		6642293						
ANR	6642586	Symbol	src		6642293						
ANR	6642587	Symbol	ctx -> zstr . next_out		6642293						
ANR	6642588	Symbol	ctx		6642293						
ANR	6642589	Symbol	ctx -> eof		6642293						
ANR	6642590	Symbol	zip_source_read		6642293						
ANR	6642591	Symbol	& ctx -> zstr		6642293						
ANR	6642592	Symbol	ctx -> buffer		6642293						
ANR	6642593	Symbol	ctx -> e		6642293						
ANR	6642594	Symbol	n		6642293						
ANR	6642595	Symbol	* ctx		6642293						
ANR	6642596	Symbol	ctx -> zstr . avail_in		6642293						
ANR	6642597	Symbol	len		6642293						
ANR	6642598	Symbol	inflate		6642293						
ANR	6642599	Symbol	ZIP_ER_ZLIB		6642293						
ANR	6642600	Symbol	ctx -> zstr . avail_out		6642293						
ANR	6642601	Symbol	end		6642293						
ANR	6642602	Symbol	* ctx -> e		6642293						
ANR	6642603	Symbol	* * ctx		6642293						
ANR	6642604	Symbol	ctx -> zstr		6642293						
ANR	6642605	Function	deflate_compress	245:0:5894:7299							
ANR	6642606	FunctionDef	"deflate_compress (struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6642605	0					
ANR	6642607	CompoundStatement		248:0:6022:7299	6642605	0					
ANR	6642608	IdentifierDeclStatement	struct deflate * ctx ;	249:4:6028:6047	6642605	0	True				
ANR	6642609	IdentifierDecl	* ctx		6642605	0					
ANR	6642610	IdentifierDeclType	struct deflate *		6642605	0					
ANR	6642611	Identifier	ctx		6642605	1					
ANR	6642612	IdentifierDeclStatement	int ret ;	250:4:6053:6060	6642605	1	True				
ANR	6642613	IdentifierDecl	ret		6642605	0					
ANR	6642614	IdentifierDeclType	int		6642605	0					
ANR	6642615	Identifier	ret		6642605	1					
ANR	6642616	ExpressionStatement	ctx = ( struct deflate * ) ud	252:4:6067:6093	6642605	2	True				
ANR	6642617	AssignmentExpression	ctx = ( struct deflate * ) ud		6642605	0		=			
ANR	6642618	Identifier	ctx		6642605	0					
ANR	6642619	CastExpression	( struct deflate * ) ud		6642605	1					
ANR	6642620	CastTarget	struct deflate *		6642605	0					
ANR	6642621	Identifier	ud		6642605	1					
ANR	6642622	SwitchStatement	switch ( cmd )		6642605	3					
ANR	6642623	Condition	cmd	254:12:6108:6110	6642605	0	True				
ANR	6642624	Identifier	cmd		6642605	0					
ANR	6642625	CompoundStatement		7:17:90:90	6642605	1					
ANR	6642626	Label	case ZIP_SOURCE_OPEN :	255:4:6119:6139	6642605	0	True				
ANR	6642627	Identifier	ZIP_SOURCE_OPEN		6642605	0					
ANR	6642628	ExpressionStatement	ctx -> zstr . zalloc = Z_NULL	256:1:6142:6167	6642605	1	True				
ANR	6642629	AssignmentExpression	ctx -> zstr . zalloc = Z_NULL		6642605	0		=			
ANR	6642630	MemberAccess	ctx -> zstr . zalloc		6642605	0					
ANR	6642631	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642632	Identifier	ctx		6642605	0					
ANR	6642633	Identifier	zstr		6642605	1					
ANR	6642634	Identifier	zalloc		6642605	1					
ANR	6642635	Identifier	Z_NULL		6642605	1					
ANR	6642636	ExpressionStatement	ctx -> zstr . zfree = Z_NULL	257:1:6170:6194	6642605	2	True				
ANR	6642637	AssignmentExpression	ctx -> zstr . zfree = Z_NULL		6642605	0		=			
ANR	6642638	MemberAccess	ctx -> zstr . zfree		6642605	0					
ANR	6642639	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642640	Identifier	ctx		6642605	0					
ANR	6642641	Identifier	zstr		6642605	1					
ANR	6642642	Identifier	zfree		6642605	1					
ANR	6642643	Identifier	Z_NULL		6642605	1					
ANR	6642644	ExpressionStatement	ctx -> zstr . opaque = NULL	258:1:6197:6220	6642605	3	True				
ANR	6642645	AssignmentExpression	ctx -> zstr . opaque = NULL		6642605	0		=			
ANR	6642646	MemberAccess	ctx -> zstr . opaque		6642605	0					
ANR	6642647	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642648	Identifier	ctx		6642605	0					
ANR	6642649	Identifier	zstr		6642605	1					
ANR	6642650	Identifier	opaque		6642605	1					
ANR	6642651	Identifier	NULL		6642605	1					
ANR	6642652	ExpressionStatement	ctx -> zstr . avail_in = 0	259:1:6223:6245	6642605	4	True				
ANR	6642653	AssignmentExpression	ctx -> zstr . avail_in = 0		6642605	0		=			
ANR	6642654	MemberAccess	ctx -> zstr . avail_in		6642605	0					
ANR	6642655	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642656	Identifier	ctx		6642605	0					
ANR	6642657	Identifier	zstr		6642605	1					
ANR	6642658	Identifier	avail_in		6642605	1					
ANR	6642659	PrimaryExpression	0		6642605	1					
ANR	6642660	ExpressionStatement	ctx -> zstr . next_in = NULL	260:1:6248:6272	6642605	5	True				
ANR	6642661	AssignmentExpression	ctx -> zstr . next_in = NULL		6642605	0		=			
ANR	6642662	MemberAccess	ctx -> zstr . next_in		6642605	0					
ANR	6642663	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642664	Identifier	ctx		6642605	0					
ANR	6642665	Identifier	zstr		6642605	1					
ANR	6642666	Identifier	next_in		6642605	1					
ANR	6642667	Identifier	NULL		6642605	1					
ANR	6642668	ExpressionStatement	ctx -> zstr . avail_out = 0	261:1:6275:6298	6642605	6	True				
ANR	6642669	AssignmentExpression	ctx -> zstr . avail_out = 0		6642605	0		=			
ANR	6642670	MemberAccess	ctx -> zstr . avail_out		6642605	0					
ANR	6642671	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642672	Identifier	ctx		6642605	0					
ANR	6642673	Identifier	zstr		6642605	1					
ANR	6642674	Identifier	avail_out		6642605	1					
ANR	6642675	PrimaryExpression	0		6642605	1					
ANR	6642676	ExpressionStatement	ctx -> zstr . next_out = NULL	262:1:6301:6326	6642605	7	True				
ANR	6642677	AssignmentExpression	ctx -> zstr . next_out = NULL		6642605	0		=			
ANR	6642678	MemberAccess	ctx -> zstr . next_out		6642605	0					
ANR	6642679	PtrMemberAccess	ctx -> zstr		6642605	0					
ANR	6642680	Identifier	ctx		6642605	0					
ANR	6642681	Identifier	zstr		6642605	1					
ANR	6642682	Identifier	next_out		6642605	1					
ANR	6642683	Identifier	NULL		6642605	1					
ANR	6642684	IfStatement	"if ( ( ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY ) ) != Z_OK )"		6642605	8					
ANR	6642685	Condition	"( ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY ) ) != Z_OK"	265:5:6391:6526	6642605	0	True				
ANR	6642686	EqualityExpression	"( ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY ) ) != Z_OK"		6642605	0		!=			
ANR	6642687	AssignmentExpression	"ret = deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY )"		6642605	0		=			
ANR	6642688	Identifier	ret		6642605	0					
ANR	6642689	CallExpression	"deflateInit2 ( & ctx -> zstr , Z_BEST_COMPRESSION , Z_DEFLATED , - MAX_WBITS , ctx -> mem_level , Z_DEFAULT_STRATEGY )"		6642605	1					
ANR	6642690	Callee	deflateInit2		6642605	0					
ANR	6642691	Identifier	deflateInit2		6642605	0					
ANR	6642692	ArgumentList	& ctx -> zstr		6642605	1					
ANR	6642693	Argument	& ctx -> zstr		6642605	0					
ANR	6642694	UnaryOperationExpression	& ctx -> zstr		6642605	0					
ANR	6642695	UnaryOperator	&		6642605	0					
ANR	6642696	PtrMemberAccess	ctx -> zstr		6642605	1					
ANR	6642697	Identifier	ctx		6642605	0					
ANR	6642698	Identifier	zstr		6642605	1					
ANR	6642699	Argument	Z_BEST_COMPRESSION		6642605	1					
ANR	6642700	Identifier	Z_BEST_COMPRESSION		6642605	0					
ANR	6642701	Argument	Z_DEFLATED		6642605	2					
ANR	6642702	Identifier	Z_DEFLATED		6642605	0					
ANR	6642703	Argument	- MAX_WBITS		6642605	3					
ANR	6642704	UnaryOperationExpression	- MAX_WBITS		6642605	0					
ANR	6642705	UnaryOperator	-		6642605	0					
ANR	6642706	Identifier	MAX_WBITS		6642605	1					
ANR	6642707	Argument	ctx -> mem_level		6642605	4					
ANR	6642708	PtrMemberAccess	ctx -> mem_level		6642605	0					
ANR	6642709	Identifier	ctx		6642605	0					
ANR	6642710	Identifier	mem_level		6642605	1					
ANR	6642711	Argument	Z_DEFAULT_STRATEGY		6642605	5					
ANR	6642712	Identifier	Z_DEFAULT_STRATEGY		6642605	0					
ANR	6642713	Identifier	Z_OK		6642605	1					
ANR	6642714	CompoundStatement		20:39:506:506	6642605	1					
ANR	6642715	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	268:5:6536:6559	6642605	0	True				
ANR	6642716	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6642605	0		=			
ANR	6642717	ArrayIndexing	ctx -> e [ 0 ]		6642605	0					
ANR	6642718	PtrMemberAccess	ctx -> e		6642605	0					
ANR	6642719	Identifier	ctx		6642605	0					
ANR	6642720	Identifier	e		6642605	1					
ANR	6642721	PrimaryExpression	0		6642605	1					
ANR	6642722	Identifier	ZIP_ER_ZLIB		6642605	1					
ANR	6642723	ExpressionStatement	ctx -> e [ 1 ] = ret	269:5:6566:6581	6642605	1	True				
ANR	6642724	AssignmentExpression	ctx -> e [ 1 ] = ret		6642605	0		=			
ANR	6642725	ArrayIndexing	ctx -> e [ 1 ]		6642605	0					
ANR	6642726	PtrMemberAccess	ctx -> e		6642605	0					
ANR	6642727	Identifier	ctx		6642605	0					
ANR	6642728	Identifier	e		6642605	1					
ANR	6642729	PrimaryExpression	1		6642605	1					
ANR	6642730	Identifier	ret		6642605	1					
ANR	6642731	ReturnStatement	return - 1 ;	270:5:6588:6597	6642605	2	True				
ANR	6642732	UnaryOperationExpression	- 1		6642605	0					
ANR	6642733	UnaryOperator	-		6642605	0					
ANR	6642734	PrimaryExpression	1		6642605	1					
ANR	6642735	ReturnStatement	return 0 ;	273:1:6604:6612	6642605	9	True				
ANR	6642736	PrimaryExpression	0		6642605	0					
ANR	6642737	Label	case ZIP_SOURCE_READ :	275:4:6619:6639	6642605	10	True				
ANR	6642738	Identifier	ZIP_SOURCE_READ		6642605	0					
ANR	6642739	ReturnStatement	"return compress_read ( src , ctx , data , len ) ;"	276:1:6642:6683	6642605	11	True				
ANR	6642740	CallExpression	"compress_read ( src , ctx , data , len )"		6642605	0					
ANR	6642741	Callee	compress_read		6642605	0					
ANR	6642742	Identifier	compress_read		6642605	0					
ANR	6642743	ArgumentList	src		6642605	1					
ANR	6642744	Argument	src		6642605	0					
ANR	6642745	Identifier	src		6642605	0					
ANR	6642746	Argument	ctx		6642605	1					
ANR	6642747	Identifier	ctx		6642605	0					
ANR	6642748	Argument	data		6642605	2					
ANR	6642749	Identifier	data		6642605	0					
ANR	6642750	Argument	len		6642605	3					
ANR	6642751	Identifier	len		6642605	0					
ANR	6642752	Label	case ZIP_SOURCE_CLOSE :	278:4:6690:6711	6642605	12	True				
ANR	6642753	Identifier	ZIP_SOURCE_CLOSE		6642605	0					
ANR	6642754	ExpressionStatement	deflateEnd ( & ctx -> zstr )	279:1:6714:6736	6642605	13	True				
ANR	6642755	CallExpression	deflateEnd ( & ctx -> zstr )		6642605	0					
ANR	6642756	Callee	deflateEnd		6642605	0					
ANR	6642757	Identifier	deflateEnd		6642605	0					
ANR	6642758	ArgumentList	& ctx -> zstr		6642605	1					
ANR	6642759	Argument	& ctx -> zstr		6642605	0					
ANR	6642760	UnaryOperationExpression	& ctx -> zstr		6642605	0					
ANR	6642761	UnaryOperator	&		6642605	0					
ANR	6642762	PtrMemberAccess	ctx -> zstr		6642605	1					
ANR	6642763	Identifier	ctx		6642605	0					
ANR	6642764	Identifier	zstr		6642605	1					
ANR	6642765	ReturnStatement	return 0 ;	280:1:6739:6747	6642605	14	True				
ANR	6642766	PrimaryExpression	0		6642605	0					
ANR	6642767	Label	case ZIP_SOURCE_STAT :	282:4:6754:6774	6642605	15	True				
ANR	6642768	Identifier	ZIP_SOURCE_STAT		6642605	0					
ANR	6642769	CompoundStatement		37:5:765:784	6642605	16					
ANR	6642770	IdentifierDeclStatement	struct zip_stat * st ;	284:5:6788:6807	6642605	0	True				
ANR	6642771	IdentifierDecl	* st		6642605	0					
ANR	6642772	IdentifierDeclType	struct zip_stat *		6642605	0					
ANR	6642773	Identifier	st		6642605	1					
ANR	6642774	ExpressionStatement	st = ( struct zip_stat * ) data	286:5:6815:6843	6642605	1	True				
ANR	6642775	AssignmentExpression	st = ( struct zip_stat * ) data		6642605	0		=			
ANR	6642776	Identifier	st		6642605	0					
ANR	6642777	CastExpression	( struct zip_stat * ) data		6642605	1					
ANR	6642778	CastTarget	struct zip_stat *		6642605	0					
ANR	6642779	Identifier	data		6642605	1					
ANR	6642780	ExpressionStatement	st -> comp_method = ZIP_CM_DEFLATE	288:5:6851:6883	6642605	2	True				
ANR	6642781	AssignmentExpression	st -> comp_method = ZIP_CM_DEFLATE		6642605	0		=			
ANR	6642782	PtrMemberAccess	st -> comp_method		6642605	0					
ANR	6642783	Identifier	st		6642605	0					
ANR	6642784	Identifier	comp_method		6642605	1					
ANR	6642785	Identifier	ZIP_CM_DEFLATE		6642605	1					
ANR	6642786	ExpressionStatement	st -> valid |= ZIP_STAT_COMP_METHOD	289:5:6890:6923	6642605	3	True				
ANR	6642787	AssignmentExpression	st -> valid |= ZIP_STAT_COMP_METHOD		6642605	0		|=			
ANR	6642788	PtrMemberAccess	st -> valid		6642605	0					
ANR	6642789	Identifier	st		6642605	0					
ANR	6642790	Identifier	valid		6642605	1					
ANR	6642791	Identifier	ZIP_STAT_COMP_METHOD		6642605	1					
ANR	6642792	IfStatement	if ( ctx -> eof )		6642605	4					
ANR	6642793	Condition	ctx -> eof	290:9:6934:6941	6642605	0	True				
ANR	6642794	PtrMemberAccess	ctx -> eof		6642605	0					
ANR	6642795	Identifier	ctx		6642605	0					
ANR	6642796	Identifier	eof		6642605	1					
ANR	6642797	CompoundStatement		43:19:921:921	6642605	1					
ANR	6642798	ExpressionStatement	st -> comp_size = ctx -> size	291:2:6948:6973	6642605	0	True				
ANR	6642799	AssignmentExpression	st -> comp_size = ctx -> size		6642605	0		=			
ANR	6642800	PtrMemberAccess	st -> comp_size		6642605	0					
ANR	6642801	Identifier	st		6642605	0					
ANR	6642802	Identifier	comp_size		6642605	1					
ANR	6642803	PtrMemberAccess	ctx -> size		6642605	1					
ANR	6642804	Identifier	ctx		6642605	0					
ANR	6642805	Identifier	size		6642605	1					
ANR	6642806	ExpressionStatement	st -> valid |= ZIP_STAT_COMP_SIZE	292:2:6977:7008	6642605	1	True				
ANR	6642807	AssignmentExpression	st -> valid |= ZIP_STAT_COMP_SIZE		6642605	0		|=			
ANR	6642808	PtrMemberAccess	st -> valid		6642605	0					
ANR	6642809	Identifier	st		6642605	0					
ANR	6642810	Identifier	valid		6642605	1					
ANR	6642811	Identifier	ZIP_STAT_COMP_SIZE		6642605	1					
ANR	6642812	ElseStatement	else		6642605	0					
ANR	6642813	ExpressionStatement	st -> valid &= ~ZIP_STAT_COMP_SIZE	295:2:7029:7061	6642605	0	True				
ANR	6642814	AssignmentExpression	st -> valid &= ~ZIP_STAT_COMP_SIZE		6642605	0		&=			
ANR	6642815	PtrMemberAccess	st -> valid		6642605	0					
ANR	6642816	Identifier	st		6642605	0					
ANR	6642817	Identifier	valid		6642605	1					
ANR	6642818	Identifier	~ZIP_STAT_COMP_SIZE		6642605	1					
ANR	6642819	ReturnStatement	return 0 ;	297:1:7067:7075	6642605	17	True				
ANR	6642820	PrimaryExpression	0		6642605	0					
ANR	6642821	Label	case ZIP_SOURCE_ERROR :	299:4:7082:7103	6642605	18	True				
ANR	6642822	Identifier	ZIP_SOURCE_ERROR		6642605	0					
ANR	6642823	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"	300:1:7106:7141	6642605	19	True				
ANR	6642824	CallExpression	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"		6642605	0					
ANR	6642825	Callee	memcpy		6642605	0					
ANR	6642826	Identifier	memcpy		6642605	0					
ANR	6642827	ArgumentList	data		6642605	1					
ANR	6642828	Argument	data		6642605	0					
ANR	6642829	Identifier	data		6642605	0					
ANR	6642830	Argument	ctx -> e		6642605	1					
ANR	6642831	PtrMemberAccess	ctx -> e		6642605	0					
ANR	6642832	Identifier	ctx		6642605	0					
ANR	6642833	Identifier	e		6642605	1					
ANR	6642834	Argument	sizeof ( int ) * 2		6642605	2					
ANR	6642835	MultiplicativeExpression	sizeof ( int ) * 2		6642605	0		*			
ANR	6642836	SizeofExpression	sizeof ( int )		6642605	0					
ANR	6642837	Sizeof	sizeof		6642605	0					
ANR	6642838	SizeofOperand	int		6642605	1					
ANR	6642839	PrimaryExpression	2		6642605	1					
ANR	6642840	ReturnStatement	return sizeof ( int ) * 2 ;	301:1:7144:7164	6642605	20	True				
ANR	6642841	MultiplicativeExpression	sizeof ( int ) * 2		6642605	0		*			
ANR	6642842	SizeofExpression	sizeof ( int )		6642605	0					
ANR	6642843	Sizeof	sizeof		6642605	0					
ANR	6642844	SizeofOperand	int		6642605	1					
ANR	6642845	PrimaryExpression	2		6642605	1					
ANR	6642846	Label	case ZIP_SOURCE_FREE :	303:4:7171:7191	6642605	21	True				
ANR	6642847	Identifier	ZIP_SOURCE_FREE		6642605	0					
ANR	6642848	ExpressionStatement	deflate_free ( ctx )	304:1:7194:7211	6642605	22	True				
ANR	6642849	CallExpression	deflate_free ( ctx )		6642605	0					
ANR	6642850	Callee	deflate_free		6642605	0					
ANR	6642851	Identifier	deflate_free		6642605	0					
ANR	6642852	ArgumentList	ctx		6642605	1					
ANR	6642853	Argument	ctx		6642605	0					
ANR	6642854	Identifier	ctx		6642605	0					
ANR	6642855	ReturnStatement	return 0 ;	305:1:7214:7222	6642605	23	True				
ANR	6642856	PrimaryExpression	0		6642605	0					
ANR	6642857	Label	default :	307:4:7229:7236	6642605	24	True				
ANR	6642858	Identifier	default		6642605	0					
ANR	6642859	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INVAL	308:1:7239:7263	6642605	25	True				
ANR	6642860	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INVAL		6642605	0		=			
ANR	6642861	ArrayIndexing	ctx -> e [ 0 ]		6642605	0					
ANR	6642862	PtrMemberAccess	ctx -> e		6642605	0					
ANR	6642863	Identifier	ctx		6642605	0					
ANR	6642864	Identifier	e		6642605	1					
ANR	6642865	PrimaryExpression	0		6642605	1					
ANR	6642866	Identifier	ZIP_ER_INVAL		6642605	1					
ANR	6642867	ExpressionStatement	ctx -> e [ 1 ] = 0	309:1:7266:7279	6642605	26	True				
ANR	6642868	AssignmentExpression	ctx -> e [ 1 ] = 0		6642605	0		=			
ANR	6642869	ArrayIndexing	ctx -> e [ 1 ]		6642605	0					
ANR	6642870	PtrMemberAccess	ctx -> e		6642605	0					
ANR	6642871	Identifier	ctx		6642605	0					
ANR	6642872	Identifier	e		6642605	1					
ANR	6642873	PrimaryExpression	1		6642605	1					
ANR	6642874	PrimaryExpression	0		6642605	1					
ANR	6642875	ReturnStatement	return - 1 ;	310:1:7282:7291	6642605	27	True				
ANR	6642876	UnaryOperationExpression	- 1		6642605	0					
ANR	6642877	UnaryOperator	-		6642605	0					
ANR	6642878	PrimaryExpression	1		6642605	1					
ANR	6642879	ReturnType	static zip_int64_t		6642605	1					
ANR	6642880	Identifier	deflate_compress		6642605	2					
ANR	6642881	ParameterList	"struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6642605	3					
ANR	6642882	Parameter	struct zip_source * src	246:17:5930:5951	6642605	0	True				
ANR	6642883	ParameterType	struct zip_source *		6642605	0					
ANR	6642884	Identifier	src		6642605	1					
ANR	6642885	Parameter	void * ud	246:41:5954:5961	6642605	1	True				
ANR	6642886	ParameterType	void *		6642605	0					
ANR	6642887	Identifier	ud		6642605	1					
ANR	6642888	Parameter	void * data	246:51:5964:5973	6642605	2	True				
ANR	6642889	ParameterType	void *		6642605	0					
ANR	6642890	Identifier	data		6642605	1					
ANR	6642891	Parameter	zip_uint64_t len	247:3:5979:5994	6642605	3	True				
ANR	6642892	ParameterType	zip_uint64_t		6642605	0					
ANR	6642893	Identifier	len		6642605	1					
ANR	6642894	Parameter	enum zip_source_cmd cmd	247:21:5997:6019	6642605	4	True				
ANR	6642895	ParameterType	enum zip_source_cmd		6642605	0					
ANR	6642896	Identifier	cmd		6642605	1					
ANR	6642897	CFGEntryNode	ENTRY		6642605		True				
ANR	6642898	CFGExitNode	EXIT		6642605		True				
ANR	6642899	Symbol	deflateInit2		6642605						
ANR	6642900	Symbol	data		6642605						
ANR	6642901	Symbol	* st		6642605						
ANR	6642902	Symbol	ZIP_STAT_COMP_METHOD		6642605						
ANR	6642903	Symbol	ctx -> zstr . next_out		6642605						
ANR	6642904	Symbol	MAX_WBITS		6642605						
ANR	6642905	Symbol	& ctx -> zstr		6642605						
ANR	6642906	Symbol	ctx -> e		6642605						
ANR	6642907	Symbol	Z_OK		6642605						
ANR	6642908	Symbol	Z_DEFLATED		6642605						
ANR	6642909	Symbol	ZIP_CM_DEFLATE		6642605						
ANR	6642910	Symbol	st -> comp_size		6642605						
ANR	6642911	Symbol	ctx -> zstr . zfree		6642605						
ANR	6642912	Symbol	compress_read		6642605						
ANR	6642913	Symbol	ud		6642605						
ANR	6642914	Symbol	ctx -> zstr . opaque		6642605						
ANR	6642915	Symbol	ZIP_ER_INVAL		6642605						
ANR	6642916	Symbol	len		6642605						
ANR	6642917	Symbol	ZIP_STAT_COMP_SIZE		6642605						
ANR	6642918	Symbol	ctx -> zstr . avail_out		6642605						
ANR	6642919	Symbol	* ctx -> e		6642605						
ANR	6642920	Symbol	st -> valid		6642605						
ANR	6642921	Symbol	ret		6642605						
ANR	6642922	Symbol	ctx -> zstr . zalloc		6642605						
ANR	6642923	Symbol	st		6642605						
ANR	6642924	Symbol	Z_BEST_COMPRESSION		6642605						
ANR	6642925	Symbol	Z_DEFAULT_STRATEGY		6642605						
ANR	6642926	Symbol	NULL		6642605						
ANR	6642927	Symbol	ctx -> zstr . next_in		6642605						
ANR	6642928	Symbol	src		6642605						
ANR	6642929	Symbol	ctx		6642605						
ANR	6642930	Symbol	st -> comp_method		6642605						
ANR	6642931	Symbol	ctx -> eof		6642605						
ANR	6642932	Symbol	~ZIP_STAT_COMP_SIZE		6642605						
ANR	6642933	Symbol	* ctx		6642605						
ANR	6642934	Symbol	ctx -> zstr . avail_in		6642605						
ANR	6642935	Symbol	ctx -> mem_level		6642605						
ANR	6642936	Symbol	ZIP_ER_ZLIB		6642605						
ANR	6642937	Symbol	ctx -> size		6642605						
ANR	6642938	Symbol	cmd		6642605						
ANR	6642939	Symbol	* * ctx		6642605						
ANR	6642940	Symbol	ctx -> zstr		6642605						
ANR	6642941	Symbol	Z_NULL		6642605						
ANR	6642942	Function	deflate_decompress	316:0:7305:8728							
ANR	6642943	FunctionDef	"deflate_decompress (struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd)"		6642942	0					
ANR	6642944	CompoundStatement		319:0:7437:8728	6642942	0					
ANR	6642945	IdentifierDeclStatement	struct deflate * ctx ;	320:4:7443:7462	6642942	0	True				
ANR	6642946	IdentifierDecl	* ctx		6642942	0					
ANR	6642947	IdentifierDeclType	struct deflate *		6642942	0					
ANR	6642948	Identifier	ctx		6642942	1					
ANR	6642949	IdentifierDeclStatement	zip_int64_t n ;	321:4:7468:7481	6642942	1	True				
ANR	6642950	IdentifierDecl	n		6642942	0					
ANR	6642951	IdentifierDeclType	zip_int64_t		6642942	0					
ANR	6642952	Identifier	n		6642942	1					
ANR	6642953	IdentifierDeclStatement	int ret ;	322:4:7487:7494	6642942	2	True				
ANR	6642954	IdentifierDecl	ret		6642942	0					
ANR	6642955	IdentifierDeclType	int		6642942	0					
ANR	6642956	Identifier	ret		6642942	1					
ANR	6642957	ExpressionStatement	ctx = ( struct deflate * ) ud	324:4:7501:7527	6642942	3	True				
ANR	6642958	AssignmentExpression	ctx = ( struct deflate * ) ud		6642942	0		=			
ANR	6642959	Identifier	ctx		6642942	0					
ANR	6642960	CastExpression	( struct deflate * ) ud		6642942	1					
ANR	6642961	CastTarget	struct deflate *		6642942	0					
ANR	6642962	Identifier	ud		6642942	1					
ANR	6642963	SwitchStatement	switch ( cmd )		6642942	4					
ANR	6642964	Condition	cmd	326:12:7542:7544	6642942	0	True				
ANR	6642965	Identifier	cmd		6642942	0					
ANR	6642966	CompoundStatement		8:17:109:109	6642942	1					
ANR	6642967	Label	case ZIP_SOURCE_OPEN :	327:4:7553:7573	6642942	0	True				
ANR	6642968	Identifier	ZIP_SOURCE_OPEN		6642942	0					
ANR	6642969	IfStatement	"if ( ( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0 )"		6642942	1					
ANR	6642970	Condition	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"	328:5:7580:7641	6642942	0	True				
ANR	6642971	RelationalExpression	"( n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) ) ) < 0"		6642942	0		<			
ANR	6642972	AssignmentExpression	"n = zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6642942	0		=			
ANR	6642973	Identifier	n		6642942	0					
ANR	6642974	CallExpression	"zip_source_read ( src , ctx -> buffer , sizeof ( ctx -> buffer ) )"		6642942	1					
ANR	6642975	Callee	zip_source_read		6642942	0					
ANR	6642976	Identifier	zip_source_read		6642942	0					
ANR	6642977	ArgumentList	src		6642942	1					
ANR	6642978	Argument	src		6642942	0					
ANR	6642979	Identifier	src		6642942	0					
ANR	6642980	Argument	ctx -> buffer		6642942	1					
ANR	6642981	PtrMemberAccess	ctx -> buffer		6642942	0					
ANR	6642982	Identifier	ctx		6642942	0					
ANR	6642983	Identifier	buffer		6642942	1					
ANR	6642984	Argument	sizeof ( ctx -> buffer )		6642942	2					
ANR	6642985	SizeofExpression	sizeof ( ctx -> buffer )		6642942	0					
ANR	6642986	Sizeof	sizeof		6642942	0					
ANR	6642987	PtrMemberAccess	ctx -> buffer		6642942	1					
ANR	6642988	Identifier	ctx		6642942	0					
ANR	6642989	Identifier	buffer		6642942	1					
ANR	6642990	PrimaryExpression	0		6642942	1					
ANR	6642991	ReturnStatement	return ZIP_SOURCE_ERR_LOWER ;	329:5:7649:7676	6642942	1	True				
ANR	6642992	Identifier	ZIP_SOURCE_ERR_LOWER		6642942	0					
ANR	6642993	ExpressionStatement	ctx -> zstr . zalloc = Z_NULL	331:1:7680:7705	6642942	2	True				
ANR	6642994	AssignmentExpression	ctx -> zstr . zalloc = Z_NULL		6642942	0		=			
ANR	6642995	MemberAccess	ctx -> zstr . zalloc		6642942	0					
ANR	6642996	PtrMemberAccess	ctx -> zstr		6642942	0					
ANR	6642997	Identifier	ctx		6642942	0					
ANR	6642998	Identifier	zstr		6642942	1					
ANR	6642999	Identifier	zalloc		6642942	1					
ANR	6643000	Identifier	Z_NULL		6642942	1					
ANR	6643001	ExpressionStatement	ctx -> zstr . zfree = Z_NULL	332:1:7708:7732	6642942	3	True				
ANR	6643002	AssignmentExpression	ctx -> zstr . zfree = Z_NULL		6642942	0		=			
ANR	6643003	MemberAccess	ctx -> zstr . zfree		6642942	0					
ANR	6643004	PtrMemberAccess	ctx -> zstr		6642942	0					
ANR	6643005	Identifier	ctx		6642942	0					
ANR	6643006	Identifier	zstr		6642942	1					
ANR	6643007	Identifier	zfree		6642942	1					
ANR	6643008	Identifier	Z_NULL		6642942	1					
ANR	6643009	ExpressionStatement	ctx -> zstr . opaque = NULL	333:1:7735:7758	6642942	4	True				
ANR	6643010	AssignmentExpression	ctx -> zstr . opaque = NULL		6642942	0		=			
ANR	6643011	MemberAccess	ctx -> zstr . opaque		6642942	0					
ANR	6643012	PtrMemberAccess	ctx -> zstr		6642942	0					
ANR	6643013	Identifier	ctx		6642942	0					
ANR	6643014	Identifier	zstr		6642942	1					
ANR	6643015	Identifier	opaque		6642942	1					
ANR	6643016	Identifier	NULL		6642942	1					
ANR	6643017	ExpressionStatement	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer	334:1:7761:7801	6642942	5	True				
ANR	6643018	AssignmentExpression	ctx -> zstr . next_in = ( Bytef * ) ctx -> buffer		6642942	0		=			
ANR	6643019	MemberAccess	ctx -> zstr . next_in		6642942	0					
ANR	6643020	PtrMemberAccess	ctx -> zstr		6642942	0					
ANR	6643021	Identifier	ctx		6642942	0					
ANR	6643022	Identifier	zstr		6642942	1					
ANR	6643023	Identifier	next_in		6642942	1					
ANR	6643024	CastExpression	( Bytef * ) ctx -> buffer		6642942	1					
ANR	6643025	CastTarget	Bytef *		6642942	0					
ANR	6643026	PtrMemberAccess	ctx -> buffer		6642942	1					
ANR	6643027	Identifier	ctx		6642942	0					
ANR	6643028	Identifier	buffer		6642942	1					
ANR	6643029	ExpressionStatement	ctx -> zstr . avail_in = ( uInt ) n	335:1:7804:7862	6642942	6	True				
ANR	6643030	AssignmentExpression	ctx -> zstr . avail_in = ( uInt ) n		6642942	0		=			
ANR	6643031	MemberAccess	ctx -> zstr . avail_in		6642942	0					
ANR	6643032	PtrMemberAccess	ctx -> zstr		6642942	0					
ANR	6643033	Identifier	ctx		6642942	0					
ANR	6643034	Identifier	zstr		6642942	1					
ANR	6643035	Identifier	avail_in		6642942	1					
ANR	6643036	CastExpression	( uInt ) n		6642942	1					
ANR	6643037	CastTarget	uInt		6642942	0					
ANR	6643038	Identifier	n		6642942	1					
ANR	6643039	IfStatement	"if ( ( ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS ) ) != Z_OK )"		6642942	7					
ANR	6643040	Condition	"( ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS ) ) != Z_OK"	338:5:7929:7978	6642942	0	True				
ANR	6643041	EqualityExpression	"( ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS ) ) != Z_OK"		6642942	0		!=			
ANR	6643042	AssignmentExpression	"ret = inflateInit2 ( & ctx -> zstr , - MAX_WBITS )"		6642942	0		=			
ANR	6643043	Identifier	ret		6642942	0					
ANR	6643044	CallExpression	"inflateInit2 ( & ctx -> zstr , - MAX_WBITS )"		6642942	1					
ANR	6643045	Callee	inflateInit2		6642942	0					
ANR	6643046	Identifier	inflateInit2		6642942	0					
ANR	6643047	ArgumentList	& ctx -> zstr		6642942	1					
ANR	6643048	Argument	& ctx -> zstr		6642942	0					
ANR	6643049	UnaryOperationExpression	& ctx -> zstr		6642942	0					
ANR	6643050	UnaryOperator	&		6642942	0					
ANR	6643051	PtrMemberAccess	ctx -> zstr		6642942	1					
ANR	6643052	Identifier	ctx		6642942	0					
ANR	6643053	Identifier	zstr		6642942	1					
ANR	6643054	Argument	- MAX_WBITS		6642942	1					
ANR	6643055	UnaryOperationExpression	- MAX_WBITS		6642942	0					
ANR	6643056	UnaryOperator	-		6642942	0					
ANR	6643057	Identifier	MAX_WBITS		6642942	1					
ANR	6643058	Identifier	Z_OK		6642942	1					
ANR	6643059	CompoundStatement		20:57:543:543	6642942	1					
ANR	6643060	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_ZLIB	339:5:7988:8011	6642942	0	True				
ANR	6643061	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_ZLIB		6642942	0		=			
ANR	6643062	ArrayIndexing	ctx -> e [ 0 ]		6642942	0					
ANR	6643063	PtrMemberAccess	ctx -> e		6642942	0					
ANR	6643064	Identifier	ctx		6642942	0					
ANR	6643065	Identifier	e		6642942	1					
ANR	6643066	PrimaryExpression	0		6642942	1					
ANR	6643067	Identifier	ZIP_ER_ZLIB		6642942	1					
ANR	6643068	ExpressionStatement	ctx -> e [ 1 ] = ret	340:5:8018:8033	6642942	1	True				
ANR	6643069	AssignmentExpression	ctx -> e [ 1 ] = ret		6642942	0		=			
ANR	6643070	ArrayIndexing	ctx -> e [ 1 ]		6642942	0					
ANR	6643071	PtrMemberAccess	ctx -> e		6642942	0					
ANR	6643072	Identifier	ctx		6642942	0					
ANR	6643073	Identifier	e		6642942	1					
ANR	6643074	PrimaryExpression	1		6642942	1					
ANR	6643075	Identifier	ret		6642942	1					
ANR	6643076	ReturnStatement	return - 1 ;	342:5:8041:8050	6642942	2	True				
ANR	6643077	UnaryOperationExpression	- 1		6642942	0					
ANR	6643078	UnaryOperator	-		6642942	0					
ANR	6643079	PrimaryExpression	1		6642942	1					
ANR	6643080	ReturnStatement	return 0 ;	344:1:8056:8064	6642942	8	True				
ANR	6643081	PrimaryExpression	0		6642942	0					
ANR	6643082	Label	case ZIP_SOURCE_READ :	346:4:8071:8091	6642942	9	True				
ANR	6643083	Identifier	ZIP_SOURCE_READ		6642942	0					
ANR	6643084	ReturnStatement	"return decompress_read ( src , ctx , data , len ) ;"	347:1:8094:8137	6642942	10	True				
ANR	6643085	CallExpression	"decompress_read ( src , ctx , data , len )"		6642942	0					
ANR	6643086	Callee	decompress_read		6642942	0					
ANR	6643087	Identifier	decompress_read		6642942	0					
ANR	6643088	ArgumentList	src		6642942	1					
ANR	6643089	Argument	src		6642942	0					
ANR	6643090	Identifier	src		6642942	0					
ANR	6643091	Argument	ctx		6642942	1					
ANR	6643092	Identifier	ctx		6642942	0					
ANR	6643093	Argument	data		6642942	2					
ANR	6643094	Identifier	data		6642942	0					
ANR	6643095	Argument	len		6642942	3					
ANR	6643096	Identifier	len		6642942	0					
ANR	6643097	Label	case ZIP_SOURCE_CLOSE :	349:4:8144:8165	6642942	11	True				
ANR	6643098	Identifier	ZIP_SOURCE_CLOSE		6642942	0					
ANR	6643099	ExpressionStatement	inflateEnd ( & ctx -> zstr )	350:1:8168:8190	6642942	12	True				
ANR	6643100	CallExpression	inflateEnd ( & ctx -> zstr )		6642942	0					
ANR	6643101	Callee	inflateEnd		6642942	0					
ANR	6643102	Identifier	inflateEnd		6642942	0					
ANR	6643103	ArgumentList	& ctx -> zstr		6642942	1					
ANR	6643104	Argument	& ctx -> zstr		6642942	0					
ANR	6643105	UnaryOperationExpression	& ctx -> zstr		6642942	0					
ANR	6643106	UnaryOperator	&		6642942	0					
ANR	6643107	PtrMemberAccess	ctx -> zstr		6642942	1					
ANR	6643108	Identifier	ctx		6642942	0					
ANR	6643109	Identifier	zstr		6642942	1					
ANR	6643110	ReturnStatement	return 0 ;	351:1:8193:8201	6642942	13	True				
ANR	6643111	PrimaryExpression	0		6642942	0					
ANR	6643112	Label	case ZIP_SOURCE_STAT :	353:4:8208:8228	6642942	14	True				
ANR	6643113	Identifier	ZIP_SOURCE_STAT		6642942	0					
ANR	6643114	CompoundStatement		37:5:800:819	6642942	15					
ANR	6643115	IdentifierDeclStatement	struct zip_stat * st ;	355:5:8238:8257	6642942	0	True				
ANR	6643116	IdentifierDecl	* st		6642942	0					
ANR	6643117	IdentifierDeclType	struct zip_stat *		6642942	0					
ANR	6643118	Identifier	st		6642942	1					
ANR	6643119	ExpressionStatement	st = ( struct zip_stat * ) data	357:5:8265:8293	6642942	1	True				
ANR	6643120	AssignmentExpression	st = ( struct zip_stat * ) data		6642942	0		=			
ANR	6643121	Identifier	st		6642942	0					
ANR	6643122	CastExpression	( struct zip_stat * ) data		6642942	1					
ANR	6643123	CastTarget	struct zip_stat *		6642942	0					
ANR	6643124	Identifier	data		6642942	1					
ANR	6643125	ExpressionStatement	st -> comp_method = ZIP_CM_STORE	359:5:8301:8331	6642942	2	True				
ANR	6643126	AssignmentExpression	st -> comp_method = ZIP_CM_STORE		6642942	0		=			
ANR	6643127	PtrMemberAccess	st -> comp_method		6642942	0					
ANR	6643128	Identifier	st		6642942	0					
ANR	6643129	Identifier	comp_method		6642942	1					
ANR	6643130	Identifier	ZIP_CM_STORE		6642942	1					
ANR	6643131	IfStatement	if ( st -> comp_size > 0 && st -> size > 0 )		6642942	3					
ANR	6643132	Condition	st -> comp_size > 0 && st -> size > 0	360:9:8342:8374	6642942	0	True				
ANR	6643133	AndExpression	st -> comp_size > 0 && st -> size > 0		6642942	0		&&			
ANR	6643134	RelationalExpression	st -> comp_size > 0		6642942	0		>			
ANR	6643135	PtrMemberAccess	st -> comp_size		6642942	0					
ANR	6643136	Identifier	st		6642942	0					
ANR	6643137	Identifier	comp_size		6642942	1					
ANR	6643138	PrimaryExpression	0		6642942	1					
ANR	6643139	RelationalExpression	st -> size > 0		6642942	1		>			
ANR	6643140	PtrMemberAccess	st -> size		6642942	0					
ANR	6643141	Identifier	st		6642942	0					
ANR	6643142	Identifier	size		6642942	1					
ANR	6643143	PrimaryExpression	0		6642942	1					
ANR	6643144	ExpressionStatement	st -> comp_size = st -> size	361:2:8379:8403	6642942	1	True				
ANR	6643145	AssignmentExpression	st -> comp_size = st -> size		6642942	0		=			
ANR	6643146	PtrMemberAccess	st -> comp_size		6642942	0					
ANR	6643147	Identifier	st		6642942	0					
ANR	6643148	Identifier	comp_size		6642942	1					
ANR	6643149	PtrMemberAccess	st -> size		6642942	1					
ANR	6643150	Identifier	st		6642942	0					
ANR	6643151	Identifier	size		6642942	1					
ANR	6643152	ReturnStatement	return 0 ;	363:1:8409:8417	6642942	16	True				
ANR	6643153	PrimaryExpression	0		6642942	0					
ANR	6643154	Label	case ZIP_SOURCE_ERROR :	365:4:8424:8445	6642942	17	True				
ANR	6643155	Identifier	ZIP_SOURCE_ERROR		6642942	0					
ANR	6643156	IfStatement	if ( len < sizeof ( int ) * 2 )		6642942	18					
ANR	6643157	Condition	len < sizeof ( int ) * 2	366:5:8452:8470	6642942	0	True				
ANR	6643158	RelationalExpression	len < sizeof ( int ) * 2		6642942	0		<			
ANR	6643159	Identifier	len		6642942	0					
ANR	6643160	MultiplicativeExpression	sizeof ( int ) * 2		6642942	1		*			
ANR	6643161	SizeofExpression	sizeof ( int )		6642942	0					
ANR	6643162	Sizeof	sizeof		6642942	0					
ANR	6643163	SizeofOperand	int		6642942	1					
ANR	6643164	PrimaryExpression	2		6642942	1					
ANR	6643165	ReturnStatement	return - 1 ;	367:5:8478:8487	6642942	1	True				
ANR	6643166	UnaryOperationExpression	- 1		6642942	0					
ANR	6643167	UnaryOperator	-		6642942	0					
ANR	6643168	PrimaryExpression	1		6642942	1					
ANR	6643169	ExpressionStatement	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"	369:1:8491:8526	6642942	19	True				
ANR	6643170	CallExpression	"memcpy ( data , ctx -> e , sizeof ( int ) * 2 )"		6642942	0					
ANR	6643171	Callee	memcpy		6642942	0					
ANR	6643172	Identifier	memcpy		6642942	0					
ANR	6643173	ArgumentList	data		6642942	1					
ANR	6643174	Argument	data		6642942	0					
ANR	6643175	Identifier	data		6642942	0					
ANR	6643176	Argument	ctx -> e		6642942	1					
ANR	6643177	PtrMemberAccess	ctx -> e		6642942	0					
ANR	6643178	Identifier	ctx		6642942	0					
ANR	6643179	Identifier	e		6642942	1					
ANR	6643180	Argument	sizeof ( int ) * 2		6642942	2					
ANR	6643181	MultiplicativeExpression	sizeof ( int ) * 2		6642942	0		*			
ANR	6643182	SizeofExpression	sizeof ( int )		6642942	0					
ANR	6643183	Sizeof	sizeof		6642942	0					
ANR	6643184	SizeofOperand	int		6642942	1					
ANR	6643185	PrimaryExpression	2		6642942	1					
ANR	6643186	ReturnStatement	return sizeof ( int ) * 2 ;	370:1:8529:8549	6642942	20	True				
ANR	6643187	MultiplicativeExpression	sizeof ( int ) * 2		6642942	0		*			
ANR	6643188	SizeofExpression	sizeof ( int )		6642942	0					
ANR	6643189	Sizeof	sizeof		6642942	0					
ANR	6643190	SizeofOperand	int		6642942	1					
ANR	6643191	PrimaryExpression	2		6642942	1					
ANR	6643192	Label	case ZIP_SOURCE_FREE :	372:4:8556:8576	6642942	21	True				
ANR	6643193	Identifier	ZIP_SOURCE_FREE		6642942	0					
ANR	6643194	ExpressionStatement	free ( ctx )	374:1:8626:8635	6642942	22	True				
ANR	6643195	CallExpression	free ( ctx )		6642942	0					
ANR	6643196	Callee	free		6642942	0					
ANR	6643197	Identifier	free		6642942	0					
ANR	6643198	ArgumentList	ctx		6642942	1					
ANR	6643199	Argument	ctx		6642942	0					
ANR	6643200	Identifier	ctx		6642942	0					
ANR	6643201	ReturnStatement	return 0 ;	375:1:8638:8646	6642942	23	True				
ANR	6643202	PrimaryExpression	0		6642942	0					
ANR	6643203	Label	default :	377:4:8653:8660	6642942	24	True				
ANR	6643204	Identifier	default		6642942	0					
ANR	6643205	ExpressionStatement	ctx -> e [ 0 ] = ZIP_ER_INVAL	378:1:8663:8687	6642942	25	True				
ANR	6643206	AssignmentExpression	ctx -> e [ 0 ] = ZIP_ER_INVAL		6642942	0		=			
ANR	6643207	ArrayIndexing	ctx -> e [ 0 ]		6642942	0					
ANR	6643208	PtrMemberAccess	ctx -> e		6642942	0					
ANR	6643209	Identifier	ctx		6642942	0					
ANR	6643210	Identifier	e		6642942	1					
ANR	6643211	PrimaryExpression	0		6642942	1					
ANR	6643212	Identifier	ZIP_ER_INVAL		6642942	1					
ANR	6643213	ExpressionStatement	ctx -> e [ 1 ] = 0	379:1:8690:8703	6642942	26	True				
ANR	6643214	AssignmentExpression	ctx -> e [ 1 ] = 0		6642942	0		=			
ANR	6643215	ArrayIndexing	ctx -> e [ 1 ]		6642942	0					
ANR	6643216	PtrMemberAccess	ctx -> e		6642942	0					
ANR	6643217	Identifier	ctx		6642942	0					
ANR	6643218	Identifier	e		6642942	1					
ANR	6643219	PrimaryExpression	1		6642942	1					
ANR	6643220	PrimaryExpression	0		6642942	1					
ANR	6643221	ReturnStatement	return - 1 ;	380:1:8706:8715	6642942	27	True				
ANR	6643222	UnaryOperationExpression	- 1		6642942	0					
ANR	6643223	UnaryOperator	-		6642942	0					
ANR	6643224	PrimaryExpression	1		6642942	1					
ANR	6643225	ReturnType	static zip_int64_t		6642942	1					
ANR	6643226	Identifier	deflate_decompress		6642942	2					
ANR	6643227	ParameterList	"struct zip_source * src , void * ud , void * data , zip_uint64_t len , enum zip_source_cmd cmd"		6642942	3					
ANR	6643228	Parameter	struct zip_source * src	317:19:7343:7364	6642942	0	True				
ANR	6643229	ParameterType	struct zip_source *		6642942	0					
ANR	6643230	Identifier	src		6642942	1					
ANR	6643231	Parameter	void * ud	317:43:7367:7374	6642942	1	True				
ANR	6643232	ParameterType	void *		6642942	0					
ANR	6643233	Identifier	ud		6642942	1					
ANR	6643234	Parameter	void * data	317:53:7377:7386	6642942	2	True				
ANR	6643235	ParameterType	void *		6642942	0					
ANR	6643236	Identifier	data		6642942	1					
ANR	6643237	Parameter	zip_uint64_t len	318:5:7394:7409	6642942	3	True				
ANR	6643238	ParameterType	zip_uint64_t		6642942	0					
ANR	6643239	Identifier	len		6642942	1					
ANR	6643240	Parameter	enum zip_source_cmd cmd	318:23:7412:7434	6642942	4	True				
ANR	6643241	ParameterType	enum zip_source_cmd		6642942	0					
ANR	6643242	Identifier	cmd		6642942	1					
ANR	6643243	CFGEntryNode	ENTRY		6642942		True				
ANR	6643244	CFGExitNode	EXIT		6642942		True				
ANR	6643245	Symbol	data		6642942						
ANR	6643246	Symbol	* st		6642942						
ANR	6643247	Symbol	& ctx -> zstr		6642942						
ANR	6643248	Symbol	MAX_WBITS		6642942						
ANR	6643249	Symbol	ctx -> e		6642942						
ANR	6643250	Symbol	Z_OK		6642942						
ANR	6643251	Symbol	st -> comp_size		6642942						
ANR	6643252	Symbol	ctx -> zstr . zfree		6642942						
ANR	6643253	Symbol	ud		6642942						
ANR	6643254	Symbol	ctx -> zstr . opaque		6642942						
ANR	6643255	Symbol	ZIP_ER_INVAL		6642942						
ANR	6643256	Symbol	len		6642942						
ANR	6643257	Symbol	* ctx -> e		6642942						
ANR	6643258	Symbol	ZIP_SOURCE_ERR_LOWER		6642942						
ANR	6643259	Symbol	ret		6642942						
ANR	6643260	Symbol	ctx -> zstr . zalloc		6642942						
ANR	6643261	Symbol	inflateInit2		6642942						
ANR	6643262	Symbol	st		6642942						
ANR	6643263	Symbol	NULL		6642942						
ANR	6643264	Symbol	ctx -> zstr . next_in		6642942						
ANR	6643265	Symbol	src		6642942						
ANR	6643266	Symbol	ctx		6642942						
ANR	6643267	Symbol	decompress_read		6642942						
ANR	6643268	Symbol	st -> comp_method		6642942						
ANR	6643269	Symbol	zip_source_read		6642942						
ANR	6643270	Symbol	ctx -> buffer		6642942						
ANR	6643271	Symbol	ZIP_CM_STORE		6642942						
ANR	6643272	Symbol	n		6642942						
ANR	6643273	Symbol	* ctx		6642942						
ANR	6643274	Symbol	ctx -> zstr . avail_in		6642942						
ANR	6643275	Symbol	st -> size		6642942						
ANR	6643276	Symbol	ZIP_ER_ZLIB		6642942						
ANR	6643277	Symbol	cmd		6642942						
ANR	6643278	Symbol	* * ctx		6642942						
ANR	6643279	Symbol	ctx -> zstr		6642942						
ANR	6643280	Symbol	Z_NULL		6642942						
ANR	6643281	Function	deflate_free	387:0:8734:8847							
ANR	6643282	FunctionDef	deflate_free (struct deflate * ctx)		6643281	0					
ANR	6643283	CompoundStatement		389:0:8780:8847	6643281	0					
ANR	6643284	ExpressionStatement	free ( ctx )	391:4:8836:8845	6643281	0	True				
ANR	6643285	CallExpression	free ( ctx )		6643281	0					
ANR	6643286	Callee	free		6643281	0					
ANR	6643287	Identifier	free		6643281	0					
ANR	6643288	ArgumentList	ctx		6643281	1					
ANR	6643289	Argument	ctx		6643281	0					
ANR	6643290	Identifier	ctx		6643281	0					
ANR	6643291	ReturnType	static void		6643281	1					
ANR	6643292	Identifier	deflate_free		6643281	2					
ANR	6643293	ParameterList	struct deflate * ctx		6643281	3					
ANR	6643294	Parameter	struct deflate * ctx	388:13:8759:8777	6643281	0	True				
ANR	6643295	ParameterType	struct deflate *		6643281	0					
ANR	6643296	Identifier	ctx		6643281	1					
ANR	6643297	CFGEntryNode	ENTRY		6643281		True				
ANR	6643298	CFGExitNode	EXIT		6643281		True				
ANR	6643299	Symbol	ctx		6643281						
