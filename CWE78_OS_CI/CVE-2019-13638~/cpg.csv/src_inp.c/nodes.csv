command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	31436	File	data/converged/CVE-2019-13638~_patch/src_inp.c								
ANR	31437	DeclStmt									
ANR	31438	Decl							char	char *	i_buffer
ANR	31439	DeclStmt									
ANR	31440	Decl							char const	char const * *	i_ptr
ANR	31441	DeclStmt									
ANR	31442	Decl							size_t	size_t	tibufsize
ANR	31443	DeclStmt									
ANR	31444	Decl							int	int	tifd
ANR	31445	DeclStmt									
ANR	31446	Decl							char	char * [ 2 ]	tibuf
ANR	31447	DeclStmt									
ANR	31448	Decl							lin	lin [ 2 ]	tiline
ANR	31449	DeclStmt									
ANR	31450	Decl							lin	lin	lines_per_buf
ANR	31451	DeclStmt									
ANR	31452	Decl							size_t	size_t	tireclen
ANR	31453	DeclStmt									
ANR	31454	Decl							size_t	size_t	last_line_size
ANR	31455	DeclStmt									
ANR	31456	Decl							bool	bool ( char const * )	plan_a
ANR	31457	DeclStmt									
ANR	31458	Decl							void	void ( char const * )	plan_b
ANR	31459	DeclStmt									
ANR	31460	Decl							void	void ( bool )	report_revision
ANR	31461	Function	re_input	54:0:1995:2300							
ANR	31462	FunctionDef	re_input ()		31461	0					
ANR	31463	CompoundStatement		56:0:2016:2300	31461	0					
ANR	31464	IfStatement	if ( using_plan_a )		31461	0					
ANR	31465	Condition	using_plan_a	57:8:2026:2037	31461	0	True				
ANR	31466	Identifier	using_plan_a		31461	0					
ANR	31467	CompoundStatement		2:22:23:23	31461	1					
ANR	31468	IfStatement	if ( i_buffer )		31461	0					
ANR	31469	Condition	i_buffer	58:10:2052:2059	31461	0	True				
ANR	31470	Identifier	i_buffer		31461	0					
ANR	31471	CompoundStatement		4:1:46:46	31461	1					
ANR	31472	ExpressionStatement	free ( i_buffer )	60:3:2068:2083	31461	0	True				
ANR	31473	CallExpression	free ( i_buffer )		31461	0					
ANR	31474	Callee	free		31461	0					
ANR	31475	Identifier	free		31461	0					
ANR	31476	ArgumentList	i_buffer		31461	1					
ANR	31477	Argument	i_buffer		31461	0					
ANR	31478	Identifier	i_buffer		31461	0					
ANR	31479	ExpressionStatement	i_buffer = 0	61:3:2088:2100	31461	1	True				
ANR	31480	AssignmentExpression	i_buffer = 0		31461	0		=			
ANR	31481	Identifier	i_buffer		31461	0					
ANR	31482	PrimaryExpression	0		31461	1					
ANR	31483	ExpressionStatement	free ( i_ptr )	62:3:2105:2117	31461	2	True				
ANR	31484	CallExpression	free ( i_ptr )		31461	0					
ANR	31485	Callee	free		31461	0					
ANR	31486	Identifier	free		31461	0					
ANR	31487	ArgumentList	i_ptr		31461	1					
ANR	31488	Argument	i_ptr		31461	0					
ANR	31489	Identifier	i_ptr		31461	0					
ANR	31490	ElseStatement	else		31461	0					
ANR	31491	CompoundStatement		10:9:120:120	31461	0					
ANR	31492	IfStatement	if ( tifd >= 0 )		31461	0					
ANR	31493	Condition	tifd >= 0	66:5:2144:2152	31461	0	True				
ANR	31494	RelationalExpression	tifd >= 0		31461	0		>=			
ANR	31495	Identifier	tifd		31461	0					
ANR	31496	PrimaryExpression	0		31461	1					
ANR	31497	ExpressionStatement	close ( tifd )	67:3:2158:2170	31461	1	True				
ANR	31498	CallExpression	close ( tifd )		31461	0					
ANR	31499	Callee	close		31461	0					
ANR	31500	Identifier	close		31461	0					
ANR	31501	ArgumentList	tifd		31461	1					
ANR	31502	Argument	tifd		31461	0					
ANR	31503	Identifier	tifd		31461	0					
ANR	31504	ExpressionStatement	tifd = - 1	68:1:2173:2182	31461	1	True				
ANR	31505	AssignmentExpression	tifd = - 1		31461	0		=			
ANR	31506	Identifier	tifd		31461	0					
ANR	31507	UnaryOperationExpression	- 1		31461	1					
ANR	31508	UnaryOperator	-		31461	0					
ANR	31509	PrimaryExpression	1		31461	1					
ANR	31510	IfStatement	if ( tibuf [ 0 ] )		31461	2					
ANR	31511	Condition	tibuf [ 0 ]	69:5:2189:2196	31461	0	True				
ANR	31512	ArrayIndexing	tibuf [ 0 ]		31461	0					
ANR	31513	Identifier	tibuf		31461	0					
ANR	31514	PrimaryExpression	0		31461	1					
ANR	31515	CompoundStatement		15:3:185:185	31461	1					
ANR	31516	ExpressionStatement	free ( tibuf [ 0 ] )	71:5:2209:2224	31461	0	True				
ANR	31517	CallExpression	free ( tibuf [ 0 ] )		31461	0					
ANR	31518	Callee	free		31461	0					
ANR	31519	Identifier	free		31461	0					
ANR	31520	ArgumentList	tibuf [ 0 ]		31461	1					
ANR	31521	Argument	tibuf [ 0 ]		31461	0					
ANR	31522	ArrayIndexing	tibuf [ 0 ]		31461	0					
ANR	31523	Identifier	tibuf		31461	0					
ANR	31524	PrimaryExpression	0		31461	1					
ANR	31525	ExpressionStatement	tibuf [ 0 ] = 0	72:5:2231:2243	31461	1	True				
ANR	31526	AssignmentExpression	tibuf [ 0 ] = 0		31461	0		=			
ANR	31527	ArrayIndexing	tibuf [ 0 ]		31461	0					
ANR	31528	Identifier	tibuf		31461	0					
ANR	31529	PrimaryExpression	0		31461	1					
ANR	31530	PrimaryExpression	0		31461	1					
ANR	31531	ExpressionStatement	tiline [ 0 ] = tiline [ 1 ] = - 1	74:1:2251:2277	31461	3	True				
ANR	31532	AssignmentExpression	tiline [ 0 ] = tiline [ 1 ] = - 1		31461	0		=			
ANR	31533	ArrayIndexing	tiline [ 0 ]		31461	0					
ANR	31534	Identifier	tiline		31461	0					
ANR	31535	PrimaryExpression	0		31461	1					
ANR	31536	AssignmentExpression	tiline [ 1 ] = - 1		31461	1		=			
ANR	31537	ArrayIndexing	tiline [ 1 ]		31461	0					
ANR	31538	Identifier	tiline		31461	0					
ANR	31539	PrimaryExpression	1		31461	1					
ANR	31540	UnaryOperationExpression	- 1		31461	1					
ANR	31541	UnaryOperator	-		31461	0					
ANR	31542	PrimaryExpression	1		31461	1					
ANR	31543	ExpressionStatement	tireclen = 0	75:1:2280:2292	31461	4	True				
ANR	31544	AssignmentExpression	tireclen = 0		31461	0		=			
ANR	31545	Identifier	tireclen		31461	0					
ANR	31546	PrimaryExpression	0		31461	1					
ANR	31547	ReturnType	void		31461	1					
ANR	31548	Identifier	re_input		31461	2					
ANR	31549	ParameterList			31461	3					
ANR	31550	CFGEntryNode	ENTRY		31461		True				
ANR	31551	CFGExitNode	EXIT		31461		True				
ANR	31552	Symbol	i_buffer		31461						
ANR	31553	Symbol	tifd		31461						
ANR	31554	Symbol	tiline		31461						
ANR	31555	Symbol	tireclen		31461						
ANR	31556	Symbol	* tiline		31461						
ANR	31557	Symbol	i_ptr		31461						
ANR	31558	Symbol	* tibuf		31461						
ANR	31559	Symbol	using_plan_a		31461						
ANR	31560	Symbol	tibuf		31461						
ANR	31561	Function	scan_input	81:0:2354:2667							
ANR	31562	FunctionDef	"scan_input (char * filename , mode_t file_type)"		31561	0					
ANR	31563	CompoundStatement		83:0:2405:2667	31561	0					
ANR	31564	ExpressionStatement	using_plan_a = ! ( debug & 16 ) && plan_a ( filename )	84:4:2411:2461	31561	0	True				
ANR	31565	AssignmentExpression	using_plan_a = ! ( debug & 16 ) && plan_a ( filename )		31561	0		=			
ANR	31566	Identifier	using_plan_a		31561	0					
ANR	31567	AndExpression	! ( debug & 16 ) && plan_a ( filename )		31561	1		&&			
ANR	31568	UnaryOperationExpression	! ( debug & 16 )		31561	0					
ANR	31569	UnaryOperator	!		31561	0					
ANR	31570	BitAndExpression	debug & 16		31561	1		&			
ANR	31571	Identifier	debug		31561	0					
ANR	31572	PrimaryExpression	16		31561	1					
ANR	31573	CallExpression	plan_a ( filename )		31561	1					
ANR	31574	Callee	plan_a		31561	0					
ANR	31575	Identifier	plan_a		31561	0					
ANR	31576	ArgumentList	filename		31561	1					
ANR	31577	Argument	filename		31561	0					
ANR	31578	Identifier	filename		31561	0					
ANR	31579	IfStatement	if ( ! using_plan_a )		31561	1					
ANR	31580	Condition	! using_plan_a	85:8:2471:2483	31561	0	True				
ANR	31581	UnaryOperationExpression	! using_plan_a		31561	0					
ANR	31582	UnaryOperator	!		31561	0					
ANR	31583	Identifier	using_plan_a		31561	1					
ANR	31584	CompoundStatement		4:6:86:86	31561	1					
ANR	31585	IfStatement	if ( ! S_ISREG ( file_type ) )		31561	0					
ANR	31586	Condition	! S_ISREG ( file_type )	87:5:2499:2519	31561	0	True				
ANR	31587	UnaryOperationExpression	! S_ISREG ( file_type )		31561	0					
ANR	31588	UnaryOperator	!		31561	0					
ANR	31589	CallExpression	S_ISREG ( file_type )		31561	1					
ANR	31590	Callee	S_ISREG		31561	0					
ANR	31591	Identifier	S_ISREG		31561	0					
ANR	31592	ArgumentList	file_type		31561	1					
ANR	31593	Argument	file_type		31561	0					
ANR	31594	Identifier	file_type		31561	0					
ANR	31595	CompoundStatement		6:3:119:119	31561	1					
ANR	31596	ExpressionStatement	assert ( S_ISLNK ( file_type ) )	89:5:2532:2560	31561	0	True				
ANR	31597	CallExpression	assert ( S_ISLNK ( file_type ) )		31561	0					
ANR	31598	Callee	assert		31561	0					
ANR	31599	Identifier	assert		31561	0					
ANR	31600	ArgumentList	S_ISLNK ( file_type )		31561	1					
ANR	31601	Argument	S_ISLNK ( file_type )		31561	0					
ANR	31602	CallExpression	S_ISLNK ( file_type )		31561	0					
ANR	31603	Callee	S_ISLNK		31561	0					
ANR	31604	Identifier	S_ISLNK		31561	0					
ANR	31605	ArgumentList	file_type		31561	1					
ANR	31606	Argument	file_type		31561	0					
ANR	31607	Identifier	file_type		31561	0					
ANR	31608	ExpressionStatement	"fatal ( ""Can't handle %s %s"" , ""symbolic link"" , quotearg ( filename ) )"	90:5:2567:2633	31561	1	True				
ANR	31609	CallExpression	"fatal ( ""Can't handle %s %s"" , ""symbolic link"" , quotearg ( filename ) )"		31561	0					
ANR	31610	Callee	fatal		31561	0					
ANR	31611	Identifier	fatal		31561	0					
ANR	31612	ArgumentList	"""Can't handle %s %s"""		31561	1					
ANR	31613	Argument	"""Can't handle %s %s"""		31561	0					
ANR	31614	PrimaryExpression	"""Can't handle %s %s"""		31561	0					
ANR	31615	Argument	"""symbolic link"""		31561	1					
ANR	31616	PrimaryExpression	"""symbolic link"""		31561	0					
ANR	31617	Argument	quotearg ( filename )		31561	2					
ANR	31618	CallExpression	quotearg ( filename )		31561	0					
ANR	31619	Callee	quotearg		31561	0					
ANR	31620	Identifier	quotearg		31561	0					
ANR	31621	ArgumentList	filename		31561	1					
ANR	31622	Argument	filename		31561	0					
ANR	31623	Identifier	filename		31561	0					
ANR	31624	ExpressionStatement	plan_b ( filename )	92:1:2641:2657	31561	1	True				
ANR	31625	CallExpression	plan_b ( filename )		31561	0					
ANR	31626	Callee	plan_b		31561	0					
ANR	31627	Identifier	plan_b		31561	0					
ANR	31628	ArgumentList	filename		31561	1					
ANR	31629	Argument	filename		31561	0					
ANR	31630	Identifier	filename		31561	0					
ANR	31631	ReturnType	void		31561	1					
ANR	31632	Identifier	scan_input		31561	2					
ANR	31633	ParameterList	"char * filename , mode_t file_type"		31561	3					
ANR	31634	Parameter	char * filename	82:12:2371:2384	31561	0	True				
ANR	31635	ParameterType	char *		31561	0					
ANR	31636	Identifier	filename		31561	1					
ANR	31637	Parameter	mode_t file_type	82:28:2387:2402	31561	1	True				
ANR	31638	ParameterType	mode_t		31561	0					
ANR	31639	Identifier	file_type		31561	1					
ANR	31640	CFGEntryNode	ENTRY		31561		True				
ANR	31641	CFGExitNode	EXIT		31561		True				
ANR	31642	Symbol	filename		31561						
ANR	31643	Symbol	debug		31561						
ANR	31644	Symbol	S_ISREG		31561						
ANR	31645	Symbol	quotearg		31561						
ANR	31646	Symbol	plan_a		31561						
ANR	31647	Symbol	file_type		31561						
ANR	31648	Symbol	using_plan_a		31561						
ANR	31649	Symbol	S_ISLNK		31561						
ANR	31650	Function	report_revision	98:0:2723:3361							
ANR	31651	FunctionDef	report_revision (bool found_revision)		31650	0					
ANR	31652	CompoundStatement		100:0:2773:3361	31650	0					
ANR	31653	IdentifierDeclStatement	char const * rev = quotearg ( revision ) ;	101:2:2777:2814	31650	0	True				
ANR	31654	IdentifierDecl	* rev = quotearg ( revision )		31650	0					
ANR	31655	IdentifierDeclType	char const *		31650	0					
ANR	31656	Identifier	rev		31650	1					
ANR	31657	AssignmentExpression	* rev = quotearg ( revision )		31650	2		=			
ANR	31658	Identifier	rev		31650	0					
ANR	31659	CallExpression	quotearg ( revision )		31650	1					
ANR	31660	Callee	quotearg		31650	0					
ANR	31661	Identifier	quotearg		31650	0					
ANR	31662	ArgumentList	revision		31650	1					
ANR	31663	Argument	revision		31650	0					
ANR	31664	Identifier	revision		31650	0					
ANR	31665	IfStatement	if ( found_revision )		31650	1					
ANR	31666	Condition	found_revision	103:6:2823:2836	31650	0	True				
ANR	31667	Identifier	found_revision		31650	0					
ANR	31668	CompoundStatement		5:4:69:69	31650	1					
ANR	31669	IfStatement	if ( verbosity == VERBOSE )		31650	0					
ANR	31670	Condition	verbosity == VERBOSE	105:10:2855:2874	31650	0	True				
ANR	31671	EqualityExpression	verbosity == VERBOSE		31650	0		==			
ANR	31672	Identifier	verbosity		31650	0					
ANR	31673	Identifier	VERBOSE		31650	1					
ANR	31674	ExpressionStatement	"say ( ""Good.  This file appears to be the %s version.\\n"" , rev )"	106:1:2878:2939	31650	1	True				
ANR	31675	CallExpression	"say ( ""Good.  This file appears to be the %s version.\\n"" , rev )"		31650	0					
ANR	31676	Callee	say		31650	0					
ANR	31677	Identifier	say		31650	0					
ANR	31678	ArgumentList	"""Good.  This file appears to be the %s version.\\n"""		31650	1					
ANR	31679	Argument	"""Good.  This file appears to be the %s version.\\n"""		31650	0					
ANR	31680	PrimaryExpression	"""Good.  This file appears to be the %s version.\\n"""		31650	0					
ANR	31681	Argument	rev		31650	1					
ANR	31682	Identifier	rev		31650	0					
ANR	31683	ElseStatement	else		31650	0					
ANR	31684	IfStatement	if ( force )		31650	0					
ANR	31685	Condition	force	108:11:2958:2962	31650	0	True				
ANR	31686	Identifier	force		31650	0					
ANR	31687	CompoundStatement		10:4:195:195	31650	1					
ANR	31688	IfStatement	if ( verbosity != SILENT )		31650	0					
ANR	31689	Condition	verbosity != SILENT	110:10:2981:2999	31650	0	True				
ANR	31690	EqualityExpression	verbosity != SILENT		31650	0		!=			
ANR	31691	Identifier	verbosity		31650	0					
ANR	31692	Identifier	SILENT		31650	1					
ANR	31693	ExpressionStatement	"say ( ""Warning: this file doesn't appear to be the %s version -- patching anyway.\\n"" , rev )"	111:1:3003:3098	31650	1	True				
ANR	31694	CallExpression	"say ( ""Warning: this file doesn't appear to be the %s version -- patching anyway.\\n"" , rev )"		31650	0					
ANR	31695	Callee	say		31650	0					
ANR	31696	Identifier	say		31650	0					
ANR	31697	ArgumentList	"""Warning: this file doesn't appear to be the %s version -- patching anyway.\\n"""		31650	1					
ANR	31698	Argument	"""Warning: this file doesn't appear to be the %s version -- patching anyway.\\n"""		31650	0					
ANR	31699	PrimaryExpression	"""Warning: this file doesn't appear to be the %s version -- patching anyway.\\n"""		31650	0					
ANR	31700	Argument	rev		31650	1					
ANR	31701	Identifier	rev		31650	0					
ANR	31702	ElseStatement	else		31650	0					
ANR	31703	IfStatement	if ( batch )		31650	0					
ANR	31704	Condition	batch	114:11:3117:3121	31650	0	True				
ANR	31705	Identifier	batch		31650	0					
ANR	31706	ExpressionStatement	"fatal ( ""This file doesn't appear to be the %s version -- aborting."" , rev )"	115:4:3128:3205	31650	1	True				
ANR	31707	CallExpression	"fatal ( ""This file doesn't appear to be the %s version -- aborting."" , rev )"		31650	0					
ANR	31708	Callee	fatal		31650	0					
ANR	31709	Identifier	fatal		31650	0					
ANR	31710	ArgumentList	"""This file doesn't appear to be the %s version -- aborting."""		31650	1					
ANR	31711	Argument	"""This file doesn't appear to be the %s version -- aborting."""		31650	0					
ANR	31712	PrimaryExpression	"""This file doesn't appear to be the %s version -- aborting."""		31650	0					
ANR	31713	Argument	rev		31650	1					
ANR	31714	Identifier	rev		31650	0					
ANR	31715	ElseStatement	else		31650	0					
ANR	31716	CompoundStatement		19:4:444:444	31650	0					
ANR	31717	ExpressionStatement	"ask ( ""This file doesn't appear to be the %s version -- patch anyway? [n] "" , rev )"	119:6:3226:3310	31650	0	True				
ANR	31718	CallExpression	"ask ( ""This file doesn't appear to be the %s version -- patch anyway? [n] "" , rev )"		31650	0					
ANR	31719	Callee	ask		31650	0					
ANR	31720	Identifier	ask		31650	0					
ANR	31721	ArgumentList	"""This file doesn't appear to be the %s version -- patch anyway? [n] """		31650	1					
ANR	31722	Argument	"""This file doesn't appear to be the %s version -- patch anyway? [n] """		31650	0					
ANR	31723	PrimaryExpression	"""This file doesn't appear to be the %s version -- patch anyway? [n] """		31650	0					
ANR	31724	Argument	rev		31650	1					
ANR	31725	Identifier	rev		31650	0					
ANR	31726	IfStatement	if ( * buf != 'y' )		31650	1					
ANR	31727	Condition	* buf != 'y'	121:10:3322:3332	31650	0	True				
ANR	31728	EqualityExpression	* buf != 'y'		31650	0		!=			
ANR	31729	UnaryOperationExpression	* buf		31650	0					
ANR	31730	UnaryOperator	*		31650	0					
ANR	31731	Identifier	buf		31650	1					
ANR	31732	PrimaryExpression	'y'		31650	1					
ANR	31733	ExpressionStatement	"fatal ( ""aborted"" )"	122:1:3336:3353	31650	1	True				
ANR	31734	CallExpression	"fatal ( ""aborted"" )"		31650	0					
ANR	31735	Callee	fatal		31650	0					
ANR	31736	Identifier	fatal		31650	0					
ANR	31737	ArgumentList	"""aborted"""		31650	1					
ANR	31738	Argument	"""aborted"""		31650	0					
ANR	31739	PrimaryExpression	"""aborted"""		31650	0					
ANR	31740	ReturnType	static void		31650	1					
ANR	31741	Identifier	report_revision		31650	2					
ANR	31742	ParameterList	bool found_revision		31650	3					
ANR	31743	Parameter	bool found_revision	99:17:2752:2770	31650	0	True				
ANR	31744	ParameterType	bool		31650	0					
ANR	31745	Identifier	found_revision		31650	1					
ANR	31746	CFGEntryNode	ENTRY		31650		True				
ANR	31747	CFGExitNode	EXIT		31650		True				
ANR	31748	Symbol	rev		31650						
ANR	31749	Symbol	* buf		31650						
ANR	31750	Symbol	buf		31650						
ANR	31751	Symbol	quotearg		31650						
ANR	31752	Symbol	found_revision		31650						
ANR	31753	Symbol	batch		31650						
ANR	31754	Symbol	force		31650						
ANR	31755	Symbol	VERBOSE		31650						
ANR	31756	Symbol	verbosity		31650						
ANR	31757	Symbol	revision		31650						
ANR	31758	Symbol	SILENT		31650						
ANR	31759	Function	too_many_lines	127:0:3365:3478							
ANR	31760	FunctionDef	too_many_lines (char const * filename)		31759	0					
ANR	31761	CompoundStatement		129:0:3415:3478	31759	0					
ANR	31762	ExpressionStatement	"fatal ( ""File %s has too many lines"" , quotearg ( filename ) )"	130:2:3419:3476	31759	0	True				
ANR	31763	CallExpression	"fatal ( ""File %s has too many lines"" , quotearg ( filename ) )"		31759	0					
ANR	31764	Callee	fatal		31759	0					
ANR	31765	Identifier	fatal		31759	0					
ANR	31766	ArgumentList	"""File %s has too many lines"""		31759	1					
ANR	31767	Argument	"""File %s has too many lines"""		31759	0					
ANR	31768	PrimaryExpression	"""File %s has too many lines"""		31759	0					
ANR	31769	Argument	quotearg ( filename )		31759	1					
ANR	31770	CallExpression	quotearg ( filename )		31759	0					
ANR	31771	Callee	quotearg		31759	0					
ANR	31772	Identifier	quotearg		31759	0					
ANR	31773	ArgumentList	filename		31759	1					
ANR	31774	Argument	filename		31759	0					
ANR	31775	Identifier	filename		31759	0					
ANR	31776	ReturnType	static void		31759	1					
ANR	31777	Identifier	too_many_lines		31759	2					
ANR	31778	ParameterList	char const * filename		31759	3					
ANR	31779	Parameter	char const * filename	128:16:3393:3412	31759	0	True				
ANR	31780	ParameterType	char const *		31759	0					
ANR	31781	Identifier	filename		31759	1					
ANR	31782	CFGEntryNode	ENTRY		31759		True				
ANR	31783	CFGExitNode	EXIT		31759		True				
ANR	31784	Symbol	filename		31759						
ANR	31785	Symbol	quotearg		31759						
ANR	31786	Function	lines_too_long	133:0:3481:3597							
ANR	31787	FunctionDef	lines_too_long (char const * filename)		31786	0					
ANR	31788	CompoundStatement		135:0:3531:3597	31786	0					
ANR	31789	ExpressionStatement	"fatal ( ""Lines in file %s are too long"" , quotearg ( filename ) )"	136:2:3535:3595	31786	0	True				
ANR	31790	CallExpression	"fatal ( ""Lines in file %s are too long"" , quotearg ( filename ) )"		31786	0					
ANR	31791	Callee	fatal		31786	0					
ANR	31792	Identifier	fatal		31786	0					
ANR	31793	ArgumentList	"""Lines in file %s are too long"""		31786	1					
ANR	31794	Argument	"""Lines in file %s are too long"""		31786	0					
ANR	31795	PrimaryExpression	"""Lines in file %s are too long"""		31786	0					
ANR	31796	Argument	quotearg ( filename )		31786	1					
ANR	31797	CallExpression	quotearg ( filename )		31786	0					
ANR	31798	Callee	quotearg		31786	0					
ANR	31799	Identifier	quotearg		31786	0					
ANR	31800	ArgumentList	filename		31786	1					
ANR	31801	Argument	filename		31786	0					
ANR	31802	Identifier	filename		31786	0					
ANR	31803	ReturnType	static void		31786	1					
ANR	31804	Identifier	lines_too_long		31786	2					
ANR	31805	ParameterList	char const * filename		31786	3					
ANR	31806	Parameter	char const * filename	134:16:3509:3528	31786	0	True				
ANR	31807	ParameterType	char const *		31786	0					
ANR	31808	Identifier	filename		31786	1					
ANR	31809	CFGEntryNode	ENTRY		31786		True				
ANR	31810	CFGExitNode	EXIT		31786		True				
ANR	31811	Symbol	filename		31786						
ANR	31812	Symbol	quotearg		31786						
ANR	31813	Function	get_input_file	139:0:3600:5718							
ANR	31814	FunctionDef	"get_input_file (char const * filename , char const * outname , mode_t file_type)"		31813	0					
ANR	31815	CompoundStatement		141:0:3682:5718	31813	0					
ANR	31816	IdentifierDeclStatement	"bool elsewhere = strcmp ( filename , outname ) != 0 ;"	142:4:3688:3736	31813	0	True				
ANR	31817	IdentifierDecl	"elsewhere = strcmp ( filename , outname ) != 0"		31813	0					
ANR	31818	IdentifierDeclType	bool		31813	0					
ANR	31819	Identifier	elsewhere		31813	1					
ANR	31820	AssignmentExpression	"elsewhere = strcmp ( filename , outname ) != 0"		31813	2		=			
ANR	31821	Identifier	elsewhere		31813	0					
ANR	31822	EqualityExpression	"strcmp ( filename , outname ) != 0"		31813	1		!=			
ANR	31823	CallExpression	"strcmp ( filename , outname )"		31813	0					
ANR	31824	Callee	strcmp		31813	0					
ANR	31825	Identifier	strcmp		31813	0					
ANR	31826	ArgumentList	filename		31813	1					
ANR	31827	Argument	filename		31813	0					
ANR	31828	Identifier	filename		31813	0					
ANR	31829	Argument	outname		31813	1					
ANR	31830	Identifier	outname		31813	0					
ANR	31831	PrimaryExpression	0		31813	1					
ANR	31832	IdentifierDeclStatement	char const * cs ;	143:4:3742:3756	31813	1	True				
ANR	31833	IdentifierDecl	* cs		31813	0					
ANR	31834	IdentifierDeclType	char const *		31813	0					
ANR	31835	Identifier	cs		31813	1					
ANR	31836	IdentifierDeclStatement	char * diffbuf ;	144:4:3762:3775	31813	2	True				
ANR	31837	IdentifierDecl	* diffbuf		31813	0					
ANR	31838	IdentifierDeclType	char *		31813	0					
ANR	31839	Identifier	diffbuf		31813	1					
ANR	31840	IdentifierDeclStatement	char * getbuf ;	145:4:3781:3793	31813	3	True				
ANR	31841	IdentifierDecl	* getbuf		31813	0					
ANR	31842	IdentifierDeclType	char *		31813	0					
ANR	31843	Identifier	getbuf		31813	1					
ANR	31844	IfStatement	if ( inerrno == - 1 )		31813	4					
ANR	31845	Condition	inerrno == - 1	147:8:3804:3816	31813	0	True				
ANR	31846	EqualityExpression	inerrno == - 1		31813	0		==			
ANR	31847	Identifier	inerrno		31813	0					
ANR	31848	UnaryOperationExpression	- 1		31813	1					
ANR	31849	UnaryOperator	-		31813	0					
ANR	31850	PrimaryExpression	1		31813	1					
ANR	31851	ExpressionStatement	"inerrno = stat_file ( filename , & instat )"	148:6:3825:3864	31813	1	True				
ANR	31852	AssignmentExpression	"inerrno = stat_file ( filename , & instat )"		31813	0		=			
ANR	31853	Identifier	inerrno		31813	0					
ANR	31854	CallExpression	"stat_file ( filename , & instat )"		31813	1					
ANR	31855	Callee	stat_file		31813	0					
ANR	31856	Identifier	stat_file		31813	0					
ANR	31857	ArgumentList	filename		31813	1					
ANR	31858	Argument	filename		31813	0					
ANR	31859	Identifier	filename		31813	0					
ANR	31860	Argument	& instat		31813	1					
ANR	31861	UnaryOperationExpression	& instat		31813	0					
ANR	31862	UnaryOperator	&		31813	0					
ANR	31863	Identifier	instat		31813	1					
ANR	31864	IfStatement	"if ( S_ISREG ( file_type ) && patch_get && invc != 0 && ( inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) ) ) && ( invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) ) ) )"		31813	5					
ANR	31865	Condition	"S_ISREG ( file_type ) && patch_get && invc != 0 && ( inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) ) ) && ( invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) ) )"	151:8:3925:4398	31813	0	True				
ANR	31866	AndExpression	"S_ISREG ( file_type ) && patch_get && invc != 0 && ( inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) ) ) && ( invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) ) )"		31813	0		&&			
ANR	31867	CallExpression	S_ISREG ( file_type )		31813	0					
ANR	31868	Callee	S_ISREG		31813	0					
ANR	31869	Identifier	S_ISREG		31813	0					
ANR	31870	ArgumentList	file_type		31813	1					
ANR	31871	Argument	file_type		31813	0					
ANR	31872	Identifier	file_type		31813	0					
ANR	31873	AndExpression	"patch_get && invc != 0 && ( inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) ) ) && ( invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) ) )"		31813	1		&&			
ANR	31874	Identifier	patch_get		31813	0					
ANR	31875	AndExpression	"invc != 0 && ( inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) ) ) && ( invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) ) )"		31813	1		&&			
ANR	31876	EqualityExpression	invc != 0		31813	0		!=			
ANR	31877	Identifier	invc		31813	0					
ANR	31878	PrimaryExpression	0		31813	1					
ANR	31879	AndExpression	"( inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) ) ) && ( invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) ) )"		31813	1		&&			
ANR	31880	OrExpression	inerrno || ( ! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) ) )		31813	0		||			
ANR	31881	Identifier	inerrno		31813	0					
ANR	31882	AndExpression	! elsewhere && ( ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) ) )		31813	1		&&			
ANR	31883	UnaryOperationExpression	! elsewhere		31813	0					
ANR	31884	UnaryOperator	!		31813	0					
ANR	31885	Identifier	elsewhere		31813	1					
ANR	31886	OrExpression	( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0 || ( ( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( ) )		31813	1		||			
ANR	31887	EqualityExpression	( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) == 0		31813	0		==			
ANR	31888	BitAndExpression	instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH )		31813	0		&			
ANR	31889	MemberAccess	instat . st_mode		31813	0					
ANR	31890	Identifier	instat		31813	0					
ANR	31891	Identifier	st_mode		31813	1					
ANR	31892	InclusiveOrExpression	S_IWUSR | S_IWGRP | S_IWOTH		31813	1		|			
ANR	31893	Identifier	S_IWUSR		31813	0					
ANR	31894	InclusiveOrExpression	S_IWGRP | S_IWOTH		31813	1		|			
ANR	31895	Identifier	S_IWGRP		31813	0					
ANR	31896	Identifier	S_IWOTH		31813	1					
ANR	31897	PrimaryExpression	0		31813	1					
ANR	31898	AndExpression	( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0 && instat . st_uid != geteuid ( )		31813	1		&&			
ANR	31899	EqualityExpression	( instat . st_mode & ( S_IWGRP | S_IWOTH ) ) == 0		31813	0		==			
ANR	31900	BitAndExpression	instat . st_mode & ( S_IWGRP | S_IWOTH )		31813	0		&			
ANR	31901	MemberAccess	instat . st_mode		31813	0					
ANR	31902	Identifier	instat		31813	0					
ANR	31903	Identifier	st_mode		31813	1					
ANR	31904	InclusiveOrExpression	S_IWGRP | S_IWOTH		31813	1		|			
ANR	31905	Identifier	S_IWGRP		31813	0					
ANR	31906	Identifier	S_IWOTH		31813	1					
ANR	31907	PrimaryExpression	0		31813	1					
ANR	31908	EqualityExpression	instat . st_uid != geteuid ( )		31813	1		!=			
ANR	31909	MemberAccess	instat . st_uid		31813	0					
ANR	31910	Identifier	instat		31813	0					
ANR	31911	Identifier	st_uid		31813	1					
ANR	31912	CallExpression	geteuid ( )		31813	1					
ANR	31913	Callee	geteuid		31813	0					
ANR	31914	Identifier	geteuid		31813	0					
ANR	31915	ArgumentList			31813	1					
ANR	31916	AssignmentExpression	"invc = ! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) )"		31813	1		=			
ANR	31917	Identifier	invc		31813	0					
ANR	31918	UnaryOperationExpression	"! ! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) )"		31813	1					
ANR	31919	UnaryOperator	!		31813	0					
ANR	31920	UnaryOperationExpression	"! ( cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) ) )"		31813	1					
ANR	31921	UnaryOperator	!		31813	0					
ANR	31922	AssignmentExpression	"cs = ( version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf ) )"		31813	1		=			
ANR	31923	Identifier	cs		31813	0					
ANR	31924	CallExpression	"version_controller ( filename , elsewhere , inerrno ? ( struct stat * ) 0 : & instat , & getbuf , & diffbuf )"		31813	1					
ANR	31925	Callee	version_controller		31813	0					
ANR	31926	Identifier	version_controller		31813	0					
ANR	31927	ArgumentList	filename		31813	1					
ANR	31928	Argument	filename		31813	0					
ANR	31929	Identifier	filename		31813	0					
ANR	31930	Argument	elsewhere		31813	1					
ANR	31931	Identifier	elsewhere		31813	0					
ANR	31932	Argument	inerrno ? ( struct stat * ) 0 : & instat		31813	2					
ANR	31933	ConditionalExpression	inerrno ? ( struct stat * ) 0 : & instat		31813	0					
ANR	31934	Condition	inerrno		31813	0					
ANR	31935	Identifier	inerrno		31813	0					
ANR	31936	CastExpression	( struct stat * ) 0		31813	1					
ANR	31937	CastTarget	struct stat *		31813	0					
ANR	31938	PrimaryExpression	0		31813	1					
ANR	31939	UnaryOperationExpression	& instat		31813	2					
ANR	31940	UnaryOperator	&		31813	0					
ANR	31941	Identifier	instat		31813	1					
ANR	31942	Argument	& getbuf		31813	3					
ANR	31943	UnaryOperationExpression	& getbuf		31813	0					
ANR	31944	UnaryOperator	&		31813	0					
ANR	31945	Identifier	getbuf		31813	1					
ANR	31946	Argument	& diffbuf		31813	4					
ANR	31947	UnaryOperationExpression	& diffbuf		31813	0					
ANR	31948	UnaryOperator	&		31813	0					
ANR	31949	Identifier	diffbuf		31813	1					
ANR	31950	CompoundStatement		24:32:718:718	31813	1					
ANR	31951	IfStatement	if ( ! inerrno )		31813	0					
ANR	31952	Condition	! inerrno	166:9:4413:4420	31813	0	True				
ANR	31953	UnaryOperationExpression	! inerrno		31813	0					
ANR	31954	UnaryOperator	!		31813	0					
ANR	31955	Identifier	inerrno		31813	1					
ANR	31956	CompoundStatement		26:19:740:740	31813	1					
ANR	31957	IfStatement	if ( ! elsewhere && ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) != 0 )		31813	0					
ANR	31958	Condition	! elsewhere && ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) != 0	167:6:4431:4499	31813	0	True				
ANR	31959	AndExpression	! elsewhere && ( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) != 0		31813	0		&&			
ANR	31960	UnaryOperationExpression	! elsewhere		31813	0					
ANR	31961	UnaryOperator	!		31813	0					
ANR	31962	Identifier	elsewhere		31813	1					
ANR	31963	EqualityExpression	( instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH ) ) != 0		31813	1		!=			
ANR	31964	BitAndExpression	instat . st_mode & ( S_IWUSR | S_IWGRP | S_IWOTH )		31813	0		&			
ANR	31965	MemberAccess	instat . st_mode		31813	0					
ANR	31966	Identifier	instat		31813	0					
ANR	31967	Identifier	st_mode		31813	1					
ANR	31968	InclusiveOrExpression	S_IWUSR | S_IWGRP | S_IWOTH		31813	1		|			
ANR	31969	Identifier	S_IWUSR		31813	0					
ANR	31970	InclusiveOrExpression	S_IWGRP | S_IWOTH		31813	1		|			
ANR	31971	Identifier	S_IWGRP		31813	0					
ANR	31972	Identifier	S_IWOTH		31813	1					
ANR	31973	PrimaryExpression	0		31813	1					
ANR	31974	ExpressionStatement	"fatal ( ""File %s seems to be locked by somebody else under %s"" , quotearg ( filename ) , cs )"	170:4:4545:4636	31813	1	True				
ANR	31975	CallExpression	"fatal ( ""File %s seems to be locked by somebody else under %s"" , quotearg ( filename ) , cs )"		31813	0					
ANR	31976	Callee	fatal		31813	0					
ANR	31977	Identifier	fatal		31813	0					
ANR	31978	ArgumentList	"""File %s seems to be locked by somebody else under %s"""		31813	1					
ANR	31979	Argument	"""File %s seems to be locked by somebody else under %s"""		31813	0					
ANR	31980	PrimaryExpression	"""File %s seems to be locked by somebody else under %s"""		31813	0					
ANR	31981	Argument	quotearg ( filename )		31813	1					
ANR	31982	CallExpression	quotearg ( filename )		31813	0					
ANR	31983	Callee	quotearg		31813	0					
ANR	31984	Identifier	quotearg		31813	0					
ANR	31985	ArgumentList	filename		31813	1					
ANR	31986	Argument	filename		31813	0					
ANR	31987	Identifier	filename		31813	0					
ANR	31988	Argument	cs		31813	2					
ANR	31989	Identifier	cs		31813	0					
ANR	31990	IfStatement	if ( diffbuf )		31813	1					
ANR	31991	Condition	diffbuf	172:6:4644:4650	31813	0	True				
ANR	31992	Identifier	diffbuf		31813	0					
ANR	31993	CompoundStatement		33:4:974:974	31813	1					
ANR	31994	IfStatement	if ( verbosity == VERBOSE )		31813	0					
ANR	31995	Condition	verbosity == VERBOSE	177:10:4785:4804	31813	0	True				
ANR	31996	EqualityExpression	verbosity == VERBOSE		31813	0		==			
ANR	31997	Identifier	verbosity		31813	0					
ANR	31998	Identifier	VERBOSE		31813	1					
ANR	31999	ExpressionStatement	"say ( ""Comparing file %s to default %s version...\\n"" , quotearg ( filename ) , cs )"	178:8:4815:4898	31813	1	True				
ANR	32000	CallExpression	"say ( ""Comparing file %s to default %s version...\\n"" , quotearg ( filename ) , cs )"		31813	0					
ANR	32001	Callee	say		31813	0					
ANR	32002	Identifier	say		31813	0					
ANR	32003	ArgumentList	"""Comparing file %s to default %s version...\\n"""		31813	1					
ANR	32004	Argument	"""Comparing file %s to default %s version...\\n"""		31813	0					
ANR	32005	PrimaryExpression	"""Comparing file %s to default %s version...\\n"""		31813	0					
ANR	32006	Argument	quotearg ( filename )		31813	1					
ANR	32007	CallExpression	quotearg ( filename )		31813	0					
ANR	32008	Callee	quotearg		31813	0					
ANR	32009	Identifier	quotearg		31813	0					
ANR	32010	ArgumentList	filename		31813	1					
ANR	32011	Argument	filename		31813	0					
ANR	32012	Identifier	filename		31813	0					
ANR	32013	Argument	cs		31813	2					
ANR	32014	Identifier	cs		31813	0					
ANR	32015	IfStatement	if ( systemic ( diffbuf ) != 0 )		31813	1					
ANR	32016	Condition	systemic ( diffbuf ) != 0	181:10:4911:4933	31813	0	True				
ANR	32017	EqualityExpression	systemic ( diffbuf ) != 0		31813	0		!=			
ANR	32018	CallExpression	systemic ( diffbuf )		31813	0					
ANR	32019	Callee	systemic		31813	0					
ANR	32020	Identifier	systemic		31813	0					
ANR	32021	ArgumentList	diffbuf		31813	1					
ANR	32022	Argument	diffbuf		31813	0					
ANR	32023	Identifier	diffbuf		31813	0					
ANR	32024	PrimaryExpression	0		31813	1					
ANR	32025	CompoundStatement		42:8:1261:1261	31813	1					
ANR	32026	ExpressionStatement	"say ( ""warning: Patching file %s, which does not match default %s version\\n"" , quotearg ( filename ) , cs )"	183:3:4949:5058	31813	0	True				
ANR	32027	CallExpression	"say ( ""warning: Patching file %s, which does not match default %s version\\n"" , quotearg ( filename ) , cs )"		31813	0					
ANR	32028	Callee	say		31813	0					
ANR	32029	Identifier	say		31813	0					
ANR	32030	ArgumentList	"""warning: Patching file %s, which does not match default %s version\\n"""		31813	1					
ANR	32031	Argument	"""warning: Patching file %s, which does not match default %s version\\n"""		31813	0					
ANR	32032	PrimaryExpression	"""warning: Patching file %s, which does not match default %s version\\n"""		31813	0					
ANR	32033	Argument	quotearg ( filename )		31813	1					
ANR	32034	CallExpression	quotearg ( filename )		31813	0					
ANR	32035	Callee	quotearg		31813	0					
ANR	32036	Identifier	quotearg		31813	0					
ANR	32037	ArgumentList	filename		31813	1					
ANR	32038	Argument	filename		31813	0					
ANR	32039	Identifier	filename		31813	0					
ANR	32040	Argument	cs		31813	2					
ANR	32041	Identifier	cs		31813	0					
ANR	32042	ExpressionStatement	cs = 0	185:3:5063:5069	31813	1	True				
ANR	32043	AssignmentExpression	cs = 0		31813	0		=			
ANR	32044	Identifier	cs		31813	0					
ANR	32045	PrimaryExpression	0		31813	1					
ANR	32046	IfStatement	if ( dry_run )		31813	2					
ANR	32047	Condition	dry_run	188:6:5093:5099	31813	0	True				
ANR	32048	Identifier	dry_run		31813	0					
ANR	32049	ExpressionStatement	cs = 0	189:4:5106:5112	31813	1	True				
ANR	32050	AssignmentExpression	cs = 0		31813	0		=			
ANR	32051	Identifier	cs		31813	0					
ANR	32052	PrimaryExpression	0		31813	1					
ANR	32053	IfStatement	"if ( cs && version_get ( filename , cs , ! inerrno , elsewhere , getbuf , & instat ) )"		31813	1					
ANR	32054	Condition	"cs && version_get ( filename , cs , ! inerrno , elsewhere , getbuf , & instat )"	192:9:5131:5208	31813	0	True				
ANR	32055	AndExpression	"cs && version_get ( filename , cs , ! inerrno , elsewhere , getbuf , & instat )"		31813	0		&&			
ANR	32056	Identifier	cs		31813	0					
ANR	32057	CallExpression	"version_get ( filename , cs , ! inerrno , elsewhere , getbuf , & instat )"		31813	1					
ANR	32058	Callee	version_get		31813	0					
ANR	32059	Identifier	version_get		31813	0					
ANR	32060	ArgumentList	filename		31813	1					
ANR	32061	Argument	filename		31813	0					
ANR	32062	Identifier	filename		31813	0					
ANR	32063	Argument	cs		31813	1					
ANR	32064	Identifier	cs		31813	0					
ANR	32065	Argument	! inerrno		31813	2					
ANR	32066	UnaryOperationExpression	! inerrno		31813	0					
ANR	32067	UnaryOperator	!		31813	0					
ANR	32068	Identifier	inerrno		31813	1					
ANR	32069	Argument	elsewhere		31813	3					
ANR	32070	Identifier	elsewhere		31813	0					
ANR	32071	Argument	getbuf		31813	4					
ANR	32072	Identifier	getbuf		31813	0					
ANR	32073	Argument	& instat		31813	5					
ANR	32074	UnaryOperationExpression	& instat		31813	0					
ANR	32075	UnaryOperator	&		31813	0					
ANR	32076	Identifier	instat		31813	1					
ANR	32077	ExpressionStatement	inerrno = 0	194:7:5218:5229	31813	1	True				
ANR	32078	AssignmentExpression	inerrno = 0		31813	0		=			
ANR	32079	Identifier	inerrno		31813	0					
ANR	32080	PrimaryExpression	0		31813	1					
ANR	32081	ExpressionStatement	free ( getbuf )	196:5:5237:5250	31813	2	True				
ANR	32082	CallExpression	free ( getbuf )		31813	0					
ANR	32083	Callee	free		31813	0					
ANR	32084	Identifier	free		31813	0					
ANR	32085	ArgumentList	getbuf		31813	1					
ANR	32086	Argument	getbuf		31813	0					
ANR	32087	Identifier	getbuf		31813	0					
ANR	32088	ExpressionStatement	free ( diffbuf )	197:5:5257:5271	31813	3	True				
ANR	32089	CallExpression	free ( diffbuf )		31813	0					
ANR	32090	Callee	free		31813	0					
ANR	32091	Identifier	free		31813	0					
ANR	32092	ArgumentList	diffbuf		31813	1					
ANR	32093	Argument	diffbuf		31813	0					
ANR	32094	Identifier	diffbuf		31813	0					
ANR	32095	IfStatement	if ( inerrno )		31813	6					
ANR	32096	Condition	inerrno	200:8:5290:5296	31813	0	True				
ANR	32097	Identifier	inerrno		31813	0					
ANR	32098	CompoundStatement		61:6:1622:1622	31813	1					
ANR	32099	ExpressionStatement	instat . st_mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH	202:1:5308:5372	31813	0	True				
ANR	32100	AssignmentExpression	instat . st_mode = S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		31813	0		=			
ANR	32101	MemberAccess	instat . st_mode		31813	0					
ANR	32102	Identifier	instat		31813	0					
ANR	32103	Identifier	st_mode		31813	1					
ANR	32104	InclusiveOrExpression	S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		31813	1		|			
ANR	32105	Identifier	S_IRUSR		31813	0					
ANR	32106	InclusiveOrExpression	S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		31813	1		|			
ANR	32107	Identifier	S_IWUSR		31813	0					
ANR	32108	InclusiveOrExpression	S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH		31813	1		|			
ANR	32109	Identifier	S_IRGRP		31813	0					
ANR	32110	InclusiveOrExpression	S_IWGRP | S_IROTH | S_IWOTH		31813	1		|			
ANR	32111	Identifier	S_IWGRP		31813	0					
ANR	32112	InclusiveOrExpression	S_IROTH | S_IWOTH		31813	1		|			
ANR	32113	Identifier	S_IROTH		31813	0					
ANR	32114	Identifier	S_IWOTH		31813	1					
ANR	32115	ExpressionStatement	instat . st_size = 0	203:1:5375:5393	31813	1	True				
ANR	32116	AssignmentExpression	instat . st_size = 0		31813	0		=			
ANR	32117	MemberAccess	instat . st_size		31813	0					
ANR	32118	Identifier	instat		31813	0					
ANR	32119	Identifier	st_size		31813	1					
ANR	32120	PrimaryExpression	0		31813	1					
ANR	32121	ElseStatement	else		31813	0					
ANR	32122	IfStatement	if ( ! ( ( S_ISREG ( file_type ) || S_ISLNK ( file_type ) ) && ( file_type & S_IFMT ) == ( instat . st_mode & S_IFMT ) ) )		31813	0					
ANR	32123	Condition	! ( ( S_ISREG ( file_type ) || S_ISLNK ( file_type ) ) && ( file_type & S_IFMT ) == ( instat . st_mode & S_IFMT ) )	205:13:5416:5525	31813	0	True				
ANR	32124	UnaryOperationExpression	! ( ( S_ISREG ( file_type ) || S_ISLNK ( file_type ) ) && ( file_type & S_IFMT ) == ( instat . st_mode & S_IFMT ) )		31813	0					
ANR	32125	UnaryOperator	!		31813	0					
ANR	32126	AndExpression	( S_ISREG ( file_type ) || S_ISLNK ( file_type ) ) && ( file_type & S_IFMT ) == ( instat . st_mode & S_IFMT )		31813	1		&&			
ANR	32127	OrExpression	S_ISREG ( file_type ) || S_ISLNK ( file_type )		31813	0		||			
ANR	32128	CallExpression	S_ISREG ( file_type )		31813	0					
ANR	32129	Callee	S_ISREG		31813	0					
ANR	32130	Identifier	S_ISREG		31813	0					
ANR	32131	ArgumentList	file_type		31813	1					
ANR	32132	Argument	file_type		31813	0					
ANR	32133	Identifier	file_type		31813	0					
ANR	32134	CallExpression	S_ISLNK ( file_type )		31813	1					
ANR	32135	Callee	S_ISLNK		31813	0					
ANR	32136	Identifier	S_ISLNK		31813	0					
ANR	32137	ArgumentList	file_type		31813	1					
ANR	32138	Argument	file_type		31813	0					
ANR	32139	Identifier	file_type		31813	0					
ANR	32140	EqualityExpression	( file_type & S_IFMT ) == ( instat . st_mode & S_IFMT )		31813	1		==			
ANR	32141	BitAndExpression	file_type & S_IFMT		31813	0		&			
ANR	32142	Identifier	file_type		31813	0					
ANR	32143	Identifier	S_IFMT		31813	1					
ANR	32144	BitAndExpression	instat . st_mode & S_IFMT		31813	1		&			
ANR	32145	MemberAccess	instat . st_mode		31813	0					
ANR	32146	Identifier	instat		31813	0					
ANR	32147	Identifier	st_mode		31813	1					
ANR	32148	Identifier	S_IFMT		31813	1					
ANR	32149	CompoundStatement		67:6:1851:1851	31813	1					
ANR	32150	ExpressionStatement	"say ( ""File %s is not a %s -- refusing to patch\\n"" , quotearg ( filename ) , S_ISLNK ( file_type ) ? ""symbolic link"" : ""regular file"" )"	208:1:5537:5676	31813	0	True				
ANR	32151	CallExpression	"say ( ""File %s is not a %s -- refusing to patch\\n"" , quotearg ( filename ) , S_ISLNK ( file_type ) ? ""symbolic link"" : ""regular file"" )"		31813	0					
ANR	32152	Callee	say		31813	0					
ANR	32153	Identifier	say		31813	0					
ANR	32154	ArgumentList	"""File %s is not a %s -- refusing to patch\\n"""		31813	1					
ANR	32155	Argument	"""File %s is not a %s -- refusing to patch\\n"""		31813	0					
ANR	32156	PrimaryExpression	"""File %s is not a %s -- refusing to patch\\n"""		31813	0					
ANR	32157	Argument	quotearg ( filename )		31813	1					
ANR	32158	CallExpression	quotearg ( filename )		31813	0					
ANR	32159	Callee	quotearg		31813	0					
ANR	32160	Identifier	quotearg		31813	0					
ANR	32161	ArgumentList	filename		31813	1					
ANR	32162	Argument	filename		31813	0					
ANR	32163	Identifier	filename		31813	0					
ANR	32164	Argument	"S_ISLNK ( file_type ) ? ""symbolic link"" : ""regular file"""		31813	2					
ANR	32165	ConditionalExpression	"S_ISLNK ( file_type ) ? ""symbolic link"" : ""regular file"""		31813	0					
ANR	32166	Condition	S_ISLNK ( file_type )		31813	0					
ANR	32167	CallExpression	S_ISLNK ( file_type )		31813	0					
ANR	32168	Callee	S_ISLNK		31813	0					
ANR	32169	Identifier	S_ISLNK		31813	0					
ANR	32170	ArgumentList	file_type		31813	1					
ANR	32171	Argument	file_type		31813	0					
ANR	32172	Identifier	file_type		31813	0					
ANR	32173	PrimaryExpression	"""symbolic link"""		31813	1					
ANR	32174	PrimaryExpression	"""regular file"""		31813	2					
ANR	32175	ReturnStatement	return false ;	211:1:5679:5691	31813	1	True				
ANR	32176	Identifier	false		31813	0					
ANR	32177	ReturnStatement	return true ;	213:4:5705:5716	31813	7	True				
ANR	32178	Identifier	true		31813	0					
ANR	32179	ReturnType	bool		31813	1					
ANR	32180	Identifier	get_input_file		31813	2					
ANR	32181	ParameterList	"char const * filename , char const * outname , mode_t file_type"		31813	3					
ANR	32182	Parameter	char const * filename	140:16:3621:3640	31813	0	True				
ANR	32183	ParameterType	char const *		31813	0					
ANR	32184	Identifier	filename		31813	1					
ANR	32185	Parameter	char const * outname	140:38:3643:3661	31813	1	True				
ANR	32186	ParameterType	char const *		31813	0					
ANR	32187	Identifier	outname		31813	1					
ANR	32188	Parameter	mode_t file_type	140:59:3664:3679	31813	2	True				
ANR	32189	ParameterType	mode_t		31813	0					
ANR	32190	Identifier	file_type		31813	1					
ANR	32191	CFGEntryNode	ENTRY		31813		True				
ANR	32192	CFGExitNode	EXIT		31813		True				
ANR	32193	Symbol	systemic		31813						
ANR	32194	Symbol	quotearg		31813						
ANR	32195	Symbol	S_IWGRP		31813						
ANR	32196	Symbol	S_IWOTH		31813						
ANR	32197	Symbol	instat . st_uid		31813						
ANR	32198	Symbol	outname		31813						
ANR	32199	Symbol	inerrno		31813						
ANR	32200	Symbol	instat		31813						
ANR	32201	Symbol	elsewhere		31813						
ANR	32202	Symbol	S_IFMT		31813						
ANR	32203	Symbol	instat . st_mode		31813						
ANR	32204	Symbol	S_IRUSR		31813						
ANR	32205	Symbol	getbuf		31813						
ANR	32206	Symbol	file_type		31813						
ANR	32207	Symbol	& instat		31813						
ANR	32208	Symbol	stat_file		31813						
ANR	32209	Symbol	VERBOSE		31813						
ANR	32210	Symbol	S_ISLNK		31813						
ANR	32211	Symbol	strcmp		31813						
ANR	32212	Symbol	version_controller		31813						
ANR	32213	Symbol	S_IROTH		31813						
ANR	32214	Symbol	invc		31813						
ANR	32215	Symbol	& diffbuf		31813						
ANR	32216	Symbol	diffbuf		31813						
ANR	32217	Symbol	false		31813						
ANR	32218	Symbol	& getbuf		31813						
ANR	32219	Symbol	geteuid		31813						
ANR	32220	Symbol	cs		31813						
ANR	32221	Symbol	filename		31813						
ANR	32222	Symbol	S_ISREG		31813						
ANR	32223	Symbol	patch_get		31813						
ANR	32224	Symbol	S_IWUSR		31813						
ANR	32225	Symbol	version_get		31813						
ANR	32226	Symbol	true		31813						
ANR	32227	Symbol	dry_run		31813						
ANR	32228	Symbol	S_IRGRP		31813						
ANR	32229	Symbol	instat . st_size		31813						
ANR	32230	Symbol	verbosity		31813						
ANR	32231	Function	plan_a	219:0:5763:8581							
ANR	32232	FunctionDef	plan_a (char const * filename)		32231	0					
ANR	32233	CompoundStatement		221:0:5805:8581	32231	0					
ANR	32234	IdentifierDeclStatement	char const * s ;	222:2:5809:5822	32231	0	True				
ANR	32235	IdentifierDecl	* s		32231	0					
ANR	32236	IdentifierDeclType	char const *		32231	0					
ANR	32237	Identifier	s		32231	1					
ANR	32238	IdentifierDeclStatement	char const * lim ;	223:2:5826:5841	32231	1	True				
ANR	32239	IdentifierDecl	* lim		32231	0					
ANR	32240	IdentifierDeclType	char const *		32231	0					
ANR	32241	Identifier	lim		32231	1					
ANR	32242	IdentifierDeclStatement	char const * * ptr ;	224:2:5845:5861	32231	2	True				
ANR	32243	IdentifierDecl	* * ptr		32231	0					
ANR	32244	IdentifierDeclType	char const * *		32231	0					
ANR	32245	Identifier	ptr		32231	1					
ANR	32246	IdentifierDeclStatement	char * buffer ;	225:2:5865:5877	32231	3	True				
ANR	32247	IdentifierDecl	* buffer		32231	0					
ANR	32248	IdentifierDeclType	char *		32231	0					
ANR	32249	Identifier	buffer		32231	1					
ANR	32250	IdentifierDeclStatement	lin iline ;	226:2:5881:5890	32231	4	True				
ANR	32251	IdentifierDecl	iline		32231	0					
ANR	32252	IdentifierDeclType	lin		32231	0					
ANR	32253	Identifier	iline		32231	1					
ANR	32254	IdentifierDeclStatement	size_t size = instat . st_size ;	227:2:5894:5922	32231	5	True				
ANR	32255	IdentifierDecl	size = instat . st_size		32231	0					
ANR	32256	IdentifierDeclType	size_t		32231	0					
ANR	32257	Identifier	size		32231	1					
ANR	32258	AssignmentExpression	size = instat . st_size		32231	2		=			
ANR	32259	Identifier	size		32231	0					
ANR	32260	MemberAccess	instat . st_size		32231	1					
ANR	32261	Identifier	instat		32231	0					
ANR	32262	Identifier	st_size		32231	1					
ANR	32263	IfStatement	if ( ! ( size == instat . st_size && ( buffer = malloc ( size ? size : ( size_t ) 1 ) ) ) )		32231	6					
ANR	32264	Condition	! ( size == instat . st_size && ( buffer = malloc ( size ? size : ( size_t ) 1 ) ) )	231:6:6023:6098	32231	0	True				
ANR	32265	UnaryOperationExpression	! ( size == instat . st_size && ( buffer = malloc ( size ? size : ( size_t ) 1 ) ) )		32231	0					
ANR	32266	UnaryOperator	!		32231	0					
ANR	32267	AndExpression	size == instat . st_size && ( buffer = malloc ( size ? size : ( size_t ) 1 ) )		32231	1		&&			
ANR	32268	EqualityExpression	size == instat . st_size		32231	0		==			
ANR	32269	Identifier	size		32231	0					
ANR	32270	MemberAccess	instat . st_size		32231	1					
ANR	32271	Identifier	instat		32231	0					
ANR	32272	Identifier	st_size		32231	1					
ANR	32273	AssignmentExpression	buffer = malloc ( size ? size : ( size_t ) 1 )		32231	1		=			
ANR	32274	Identifier	buffer		32231	0					
ANR	32275	CallExpression	malloc ( size ? size : ( size_t ) 1 )		32231	1					
ANR	32276	Callee	malloc		32231	0					
ANR	32277	Identifier	malloc		32231	0					
ANR	32278	ArgumentList	size ? size : ( size_t ) 1		32231	1					
ANR	32279	Argument	size ? size : ( size_t ) 1		32231	0					
ANR	32280	ConditionalExpression	size ? size : ( size_t ) 1		32231	0					
ANR	32281	Condition	size		32231	0					
ANR	32282	Identifier	size		32231	0					
ANR	32283	Identifier	size		32231	1					
ANR	32284	CastExpression	( size_t ) 1		32231	2					
ANR	32285	CastTarget	size_t		32231	0					
ANR	32286	PrimaryExpression	1		32231	1					
ANR	32287	ReturnStatement	return false ;	233:4:6105:6117	32231	1	True				
ANR	32288	Identifier	false		32231	0					
ANR	32289	IfStatement	if ( size )		32231	7					
ANR	32290	Condition	size	237:6:6258:6261	32231	0	True				
ANR	32291	Identifier	size		32231	0					
ANR	32292	CompoundStatement		18:4:462:462	32231	1					
ANR	32293	IfStatement	if ( S_ISREG ( instat . st_mode ) )		32231	0					
ANR	32294	Condition	S_ISREG ( instat . st_mode )	239:10:6280:6303	32231	0	True				
ANR	32295	CallExpression	S_ISREG ( instat . st_mode )		32231	0					
ANR	32296	Callee	S_ISREG		32231	0					
ANR	32297	Identifier	S_ISREG		32231	0					
ANR	32298	ArgumentList	instat . st_mode		32231	1					
ANR	32299	Argument	instat . st_mode		32231	0					
ANR	32300	MemberAccess	instat . st_mode		32231	0					
ANR	32301	Identifier	instat		32231	0					
ANR	32302	Identifier	st_mode		32231	1					
ANR	32303	CompoundStatement		22:3:577:599	32231	1					
ANR	32304	IdentifierDeclStatement	"int ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 ) ;"	241:3:6319:6378	32231	0	True				
ANR	32305	IdentifierDecl	"ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 )"		32231	0					
ANR	32306	IdentifierDeclType	int		32231	0					
ANR	32307	Identifier	ifd		32231	1					
ANR	32308	AssignmentExpression	"ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 )"		32231	2		=			
ANR	32309	Identifier	ifd		32231	0					
ANR	32310	CallExpression	"safe_open ( filename , O_RDONLY | binary_transput , 0 )"		32231	1					
ANR	32311	Callee	safe_open		32231	0					
ANR	32312	Identifier	safe_open		32231	0					
ANR	32313	ArgumentList	filename		32231	1					
ANR	32314	Argument	filename		32231	0					
ANR	32315	Identifier	filename		32231	0					
ANR	32316	Argument	O_RDONLY | binary_transput		32231	1					
ANR	32317	InclusiveOrExpression	O_RDONLY | binary_transput		32231	0		|			
ANR	32318	Identifier	O_RDONLY		32231	0					
ANR	32319	Identifier	binary_transput		32231	1					
ANR	32320	Argument	0		32231	2					
ANR	32321	PrimaryExpression	0		32231	0					
ANR	32322	IdentifierDeclStatement	"size_t buffered = 0 , n ;"	242:3:6383:6405	32231	1	True				
ANR	32323	IdentifierDecl	buffered = 0		32231	0					
ANR	32324	IdentifierDeclType	size_t		32231	0					
ANR	32325	Identifier	buffered		32231	1					
ANR	32326	AssignmentExpression	buffered = 0		32231	2		=			
ANR	32327	Identifier	buffered		32231	0					
ANR	32328	PrimaryExpression	0		32231	1					
ANR	32329	IdentifierDecl	n		32231	1					
ANR	32330	IdentifierDeclType	size_t		32231	0					
ANR	32331	Identifier	n		32231	1					
ANR	32332	IfStatement	if ( ifd < 0 )		32231	2					
ANR	32333	Condition	ifd < 0	243:7:6414:6420	32231	0	True				
ANR	32334	RelationalExpression	ifd < 0		32231	0		<			
ANR	32335	Identifier	ifd		32231	0					
ANR	32336	PrimaryExpression	0		32231	1					
ANR	32337	ExpressionStatement	"pfatal ( ""can't open file %s"" , quotearg ( filename ) )"	244:5:6428:6478	32231	1	True				
ANR	32338	CallExpression	"pfatal ( ""can't open file %s"" , quotearg ( filename ) )"		32231	0					
ANR	32339	Callee	pfatal		32231	0					
ANR	32340	Identifier	pfatal		32231	0					
ANR	32341	ArgumentList	"""can't open file %s"""		32231	1					
ANR	32342	Argument	"""can't open file %s"""		32231	0					
ANR	32343	PrimaryExpression	"""can't open file %s"""		32231	0					
ANR	32344	Argument	quotearg ( filename )		32231	1					
ANR	32345	CallExpression	quotearg ( filename )		32231	0					
ANR	32346	Callee	quotearg		32231	0					
ANR	32347	Identifier	quotearg		32231	0					
ANR	32348	ArgumentList	filename		32231	1					
ANR	32349	Argument	filename		32231	0					
ANR	32350	Identifier	filename		32231	0					
ANR	32351	WhileStatement	while ( size - buffered != 0 )		32231	3					
ANR	32352	Condition	size - buffered != 0	246:10:6491:6510	32231	0	True				
ANR	32353	EqualityExpression	size - buffered != 0		32231	0		!=			
ANR	32354	AdditiveExpression	size - buffered		32231	0		-			
ANR	32355	Identifier	size		32231	0					
ANR	32356	Identifier	buffered		32231	1					
ANR	32357	PrimaryExpression	0		32231	1					
ANR	32358	CompoundStatement		27:5:712:712	32231	1					
ANR	32359	ExpressionStatement	"n = read ( ifd , buffer + buffered , size - buffered )"	248:7:6527:6577	32231	0	True				
ANR	32360	AssignmentExpression	"n = read ( ifd , buffer + buffered , size - buffered )"		32231	0		=			
ANR	32361	Identifier	n		32231	0					
ANR	32362	CallExpression	"read ( ifd , buffer + buffered , size - buffered )"		32231	1					
ANR	32363	Callee	read		32231	0					
ANR	32364	Identifier	read		32231	0					
ANR	32365	ArgumentList	ifd		32231	1					
ANR	32366	Argument	ifd		32231	0					
ANR	32367	Identifier	ifd		32231	0					
ANR	32368	Argument	buffer + buffered		32231	1					
ANR	32369	AdditiveExpression	buffer + buffered		32231	0		+			
ANR	32370	Identifier	buffer		32231	0					
ANR	32371	Identifier	buffered		32231	1					
ANR	32372	Argument	size - buffered		32231	2					
ANR	32373	AdditiveExpression	size - buffered		32231	0		-			
ANR	32374	Identifier	size		32231	0					
ANR	32375	Identifier	buffered		32231	1					
ANR	32376	IfStatement	if ( n == 0 )		32231	1					
ANR	32377	Condition	n == 0	249:11:6590:6595	32231	0	True				
ANR	32378	EqualityExpression	n == 0		32231	0		==			
ANR	32379	Identifier	n		32231	0					
ANR	32380	PrimaryExpression	0		32231	1					
ANR	32381	CompoundStatement		30:2:794:794	32231	1					
ANR	32382	ExpressionStatement	size = buffered	253:4:6707:6722	32231	0	True				
ANR	32383	AssignmentExpression	size = buffered		32231	0		=			
ANR	32384	Identifier	size		32231	0					
ANR	32385	Identifier	buffered		32231	1					
ANR	32386	BreakStatement	break ;	254:4:6728:6733	32231	1	True				
ANR	32387	IfStatement	if ( n == ( size_t ) - 1 )		32231	2					
ANR	32388	Condition	n == ( size_t ) - 1	256:11:6750:6765	32231	0	True				
ANR	32389	EqualityExpression	n == ( size_t ) - 1		32231	0		==			
ANR	32390	Identifier	n		32231	0					
ANR	32391	CastExpression	( size_t ) - 1		32231	1					
ANR	32392	CastTarget	size_t		32231	0					
ANR	32393	UnaryOperationExpression	- 1		32231	1					
ANR	32394	UnaryOperator	-		32231	0					
ANR	32395	PrimaryExpression	1		32231	1					
ANR	32396	CompoundStatement		37:2:964:964	32231	1					
ANR	32397	ExpressionStatement	close ( ifd )	259:4:6828:6839	32231	0	True				
ANR	32398	CallExpression	close ( ifd )		32231	0					
ANR	32399	Callee	close		32231	0					
ANR	32400	Identifier	close		32231	0					
ANR	32401	ArgumentList	ifd		32231	1					
ANR	32402	Argument	ifd		32231	0					
ANR	32403	Identifier	ifd		32231	0					
ANR	32404	ExpressionStatement	free ( buffer )	260:4:6845:6858	32231	1	True				
ANR	32405	CallExpression	free ( buffer )		32231	0					
ANR	32406	Callee	free		32231	0					
ANR	32407	Identifier	free		32231	0					
ANR	32408	ArgumentList	buffer		32231	1					
ANR	32409	Argument	buffer		32231	0					
ANR	32410	Identifier	buffer		32231	0					
ANR	32411	ReturnStatement	return false ;	261:4:6864:6876	32231	2	True				
ANR	32412	Identifier	false		32231	0					
ANR	32413	ExpressionStatement	buffered += n	263:7:6889:6902	32231	3	True				
ANR	32414	AssignmentExpression	buffered += n		32231	0		+=			
ANR	32415	Identifier	buffered		32231	0					
ANR	32416	Identifier	n		32231	1					
ANR	32417	IfStatement	if ( close ( ifd ) != 0 )		32231	4					
ANR	32418	Condition	close ( ifd ) != 0	266:7:6919:6934	32231	0	True				
ANR	32419	EqualityExpression	close ( ifd ) != 0		32231	0		!=			
ANR	32420	CallExpression	close ( ifd )		32231	0					
ANR	32421	Callee	close		32231	0					
ANR	32422	Identifier	close		32231	0					
ANR	32423	ArgumentList	ifd		32231	1					
ANR	32424	Argument	ifd		32231	0					
ANR	32425	Identifier	ifd		32231	0					
ANR	32426	PrimaryExpression	0		32231	1					
ANR	32427	ExpressionStatement	read_fatal ( )	267:5:6942:6955	32231	1	True				
ANR	32428	CallExpression	read_fatal ( )		32231	0					
ANR	32429	Callee	read_fatal		32231	0					
ANR	32430	Identifier	read_fatal		32231	0					
ANR	32431	ArgumentList			32231	1					
ANR	32432	ElseStatement	else		32231	0					
ANR	32433	IfStatement	if ( S_ISLNK ( instat . st_mode ) )		32231	0					
ANR	32434	Condition	S_ISLNK ( instat . st_mode )	269:15:6975:6998	32231	0	True				
ANR	32435	CallExpression	S_ISLNK ( instat . st_mode )		32231	0					
ANR	32436	Callee	S_ISLNK		32231	0					
ANR	32437	Identifier	S_ISLNK		32231	0					
ANR	32438	ArgumentList	instat . st_mode		32231	1					
ANR	32439	Argument	instat . st_mode		32231	0					
ANR	32440	MemberAccess	instat . st_mode		32231	0					
ANR	32441	Identifier	instat		32231	0					
ANR	32442	Identifier	st_mode		32231	1					
ANR	32443	CompoundStatement		51:3:1201:1210	32231	1					
ANR	32444	IdentifierDeclStatement	ssize_t n ;	271:3:7007:7016	32231	0	True				
ANR	32445	IdentifierDecl	n		32231	0					
ANR	32446	IdentifierDeclType	ssize_t		32231	0					
ANR	32447	Identifier	n		32231	1					
ANR	32448	ExpressionStatement	"n = safe_readlink ( filename , buffer , size )"	272:3:7021:7063	32231	1	True				
ANR	32449	AssignmentExpression	"n = safe_readlink ( filename , buffer , size )"		32231	0		=			
ANR	32450	Identifier	n		32231	0					
ANR	32451	CallExpression	"safe_readlink ( filename , buffer , size )"		32231	1					
ANR	32452	Callee	safe_readlink		32231	0					
ANR	32453	Identifier	safe_readlink		32231	0					
ANR	32454	ArgumentList	filename		32231	1					
ANR	32455	Argument	filename		32231	0					
ANR	32456	Identifier	filename		32231	0					
ANR	32457	Argument	buffer		32231	1					
ANR	32458	Identifier	buffer		32231	0					
ANR	32459	Argument	size		32231	2					
ANR	32460	Identifier	size		32231	0					
ANR	32461	IfStatement	if ( n < 0 )		32231	2					
ANR	32462	Condition	n < 0	273:7:7072:7076	32231	0	True				
ANR	32463	RelationalExpression	n < 0		32231	0		<			
ANR	32464	Identifier	n		32231	0					
ANR	32465	PrimaryExpression	0		32231	1					
ANR	32466	ExpressionStatement	"pfatal ( ""can't read %s %s"" , ""symbolic link"" , quotearg ( filename ) )"	274:5:7084:7149	32231	1	True				
ANR	32467	CallExpression	"pfatal ( ""can't read %s %s"" , ""symbolic link"" , quotearg ( filename ) )"		32231	0					
ANR	32468	Callee	pfatal		32231	0					
ANR	32469	Identifier	pfatal		32231	0					
ANR	32470	ArgumentList	"""can't read %s %s"""		32231	1					
ANR	32471	Argument	"""can't read %s %s"""		32231	0					
ANR	32472	PrimaryExpression	"""can't read %s %s"""		32231	0					
ANR	32473	Argument	"""symbolic link"""		32231	1					
ANR	32474	PrimaryExpression	"""symbolic link"""		32231	0					
ANR	32475	Argument	quotearg ( filename )		32231	2					
ANR	32476	CallExpression	quotearg ( filename )		32231	0					
ANR	32477	Callee	quotearg		32231	0					
ANR	32478	Identifier	quotearg		32231	0					
ANR	32479	ArgumentList	filename		32231	1					
ANR	32480	Argument	filename		32231	0					
ANR	32481	Identifier	filename		32231	0					
ANR	32482	ExpressionStatement	size = n	275:3:7154:7162	32231	3	True				
ANR	32483	AssignmentExpression	size = n		32231	0		=			
ANR	32484	Identifier	size		32231	0					
ANR	32485	Identifier	n		32231	1					
ANR	32486	ElseStatement	else		32231	0					
ANR	32487	CompoundStatement		58:1:1373:1373	32231	0					
ANR	32488	ExpressionStatement	free ( buffer )	279:3:7184:7197	32231	0	True				
ANR	32489	CallExpression	free ( buffer )		32231	0					
ANR	32490	Callee	free		32231	0					
ANR	32491	Identifier	free		32231	0					
ANR	32492	ArgumentList	buffer		32231	1					
ANR	32493	Argument	buffer		32231	0					
ANR	32494	Identifier	buffer		32231	0					
ANR	32495	ReturnStatement	return false ;	280:3:7202:7214	32231	1	True				
ANR	32496	Identifier	false		32231	0					
ANR	32497	ExpressionStatement	lim = buffer + size	285:2:7289:7308	32231	8	True				
ANR	32498	AssignmentExpression	lim = buffer + size		32231	0		=			
ANR	32499	Identifier	lim		32231	0					
ANR	32500	AdditiveExpression	buffer + size		32231	1		+			
ANR	32501	Identifier	buffer		32231	0					
ANR	32502	Identifier	size		32231	1					
ANR	32503	ExpressionStatement	iline = 3	286:2:7312:7321	32231	9	True				
ANR	32504	AssignmentExpression	iline = 3		32231	0		=			
ANR	32505	Identifier	iline		32231	0					
ANR	32506	PrimaryExpression	3		32231	1					
ANR	32507	ForStatement	"for ( s = buffer ; ( s = ( char * ) memchr ( s , '\\n' , lim - s ) ) ; s ++ )"		32231	10					
ANR	32508	ForInit	s = buffer ;	287:7:7394:7404	32231	0	True				
ANR	32509	AssignmentExpression	s = buffer		32231	0		=			
ANR	32510	Identifier	s		32231	0					
ANR	32511	Identifier	buffer		32231	1					
ANR	32512	Condition	"s = ( char * ) memchr ( s , '\\n' , lim - s )"	287:20:7407:7446	32231	1	True				
ANR	32513	AssignmentExpression	"s = ( char * ) memchr ( s , '\\n' , lim - s )"		32231	0		=			
ANR	32514	Identifier	s		32231	0					
ANR	32515	CastExpression	"( char * ) memchr ( s , '\\n' , lim - s )"		32231	1					
ANR	32516	CastTarget	char *		32231	0					
ANR	32517	CallExpression	"memchr ( s , '\\n' , lim - s )"		32231	1					
ANR	32518	Callee	memchr		32231	0					
ANR	32519	Identifier	memchr		32231	0					
ANR	32520	ArgumentList	s		32231	1					
ANR	32521	Argument	s		32231	0					
ANR	32522	Identifier	s		32231	0					
ANR	32523	Argument	'\\n'		32231	1					
ANR	32524	PrimaryExpression	'\\n'		32231	0					
ANR	32525	Argument	lim - s		32231	2					
ANR	32526	AdditiveExpression	lim - s		32231	0		-			
ANR	32527	Identifier	lim		32231	0					
ANR	32528	Identifier	s		32231	1					
ANR	32529	PostIncDecOperationExpression	s ++	287:63:7450:7452	32231	2	True				
ANR	32530	Identifier	s		32231	0					
ANR	32531	IncDec	++		32231	1					
ANR	32532	IfStatement	if ( ++ iline < 0 )		32231	3					
ANR	32533	Condition	++ iline < 0	288:8:7463:7473	32231	0	True				
ANR	32534	RelationalExpression	++ iline < 0		32231	0		<			
ANR	32535	UnaryExpression	++ iline		32231	0					
ANR	32536	IncDec	++		32231	0					
ANR	32537	Identifier	iline		32231	1					
ANR	32538	PrimaryExpression	0		32231	1					
ANR	32539	ExpressionStatement	too_many_lines ( filename )	289:6:7482:7507	32231	1	True				
ANR	32540	CallExpression	too_many_lines ( filename )		32231	0					
ANR	32541	Callee	too_many_lines		32231	0					
ANR	32542	Identifier	too_many_lines		32231	0					
ANR	32543	ArgumentList	filename		32231	1					
ANR	32544	Argument	filename		32231	0					
ANR	32545	Identifier	filename		32231	0					
ANR	32546	IfStatement	if ( ! ( iline == ( size_t ) iline && ( size_t ) iline * sizeof * ptr / sizeof * ptr == ( size_t ) iline && ( ptr = ( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr ) ) ) )		32231	11					
ANR	32547	Condition	! ( iline == ( size_t ) iline && ( size_t ) iline * sizeof * ptr / sizeof * ptr == ( size_t ) iline && ( ptr = ( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr ) ) )	290:6:7515:7674	32231	0	True				
ANR	32548	UnaryOperationExpression	! ( iline == ( size_t ) iline && ( size_t ) iline * sizeof * ptr / sizeof * ptr == ( size_t ) iline && ( ptr = ( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr ) ) )		32231	0					
ANR	32549	UnaryOperator	!		32231	0					
ANR	32550	AndExpression	iline == ( size_t ) iline && ( size_t ) iline * sizeof * ptr / sizeof * ptr == ( size_t ) iline && ( ptr = ( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr ) )		32231	1		&&			
ANR	32551	EqualityExpression	iline == ( size_t ) iline		32231	0		==			
ANR	32552	Identifier	iline		32231	0					
ANR	32553	CastExpression	( size_t ) iline		32231	1					
ANR	32554	CastTarget	size_t		32231	0					
ANR	32555	Identifier	iline		32231	1					
ANR	32556	AndExpression	( size_t ) iline * sizeof * ptr / sizeof * ptr == ( size_t ) iline && ( ptr = ( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr ) )		32231	1		&&			
ANR	32557	EqualityExpression	( size_t ) iline * sizeof * ptr / sizeof * ptr == ( size_t ) iline		32231	0		==			
ANR	32558	MultiplicativeExpression	( size_t ) iline * sizeof * ptr / sizeof * ptr		32231	0		*			
ANR	32559	CastExpression	( size_t ) iline		32231	0					
ANR	32560	CastTarget	size_t		32231	0					
ANR	32561	Identifier	iline		32231	1					
ANR	32562	MultiplicativeExpression	sizeof * ptr / sizeof * ptr		32231	1		/			
ANR	32563	SizeofExpression	sizeof * ptr		32231	0					
ANR	32564	Sizeof	sizeof		32231	0					
ANR	32565	UnaryOperationExpression	* ptr		32231	1					
ANR	32566	UnaryOperator	*		32231	0					
ANR	32567	Identifier	ptr		32231	1					
ANR	32568	SizeofExpression	sizeof * ptr		32231	1					
ANR	32569	Sizeof	sizeof		32231	0					
ANR	32570	UnaryOperationExpression	* ptr		32231	1					
ANR	32571	UnaryOperator	*		32231	0					
ANR	32572	Identifier	ptr		32231	1					
ANR	32573	CastExpression	( size_t ) iline		32231	1					
ANR	32574	CastTarget	size_t		32231	0					
ANR	32575	Identifier	iline		32231	1					
ANR	32576	AssignmentExpression	ptr = ( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr )		32231	1		=			
ANR	32577	Identifier	ptr		32231	0					
ANR	32578	CastExpression	( char const * * ) malloc ( ( size_t ) iline * sizeof * ptr )		32231	1					
ANR	32579	CastTarget	char const * *		32231	0					
ANR	32580	CallExpression	malloc ( ( size_t ) iline * sizeof * ptr )		32231	1					
ANR	32581	Callee	malloc		32231	0					
ANR	32582	Identifier	malloc		32231	0					
ANR	32583	ArgumentList	( size_t ) iline * sizeof * ptr		32231	1					
ANR	32584	Argument	( size_t ) iline * sizeof * ptr		32231	0					
ANR	32585	MultiplicativeExpression	( size_t ) iline * sizeof * ptr		32231	0		*			
ANR	32586	CastExpression	( size_t ) iline		32231	0					
ANR	32587	CastTarget	size_t		32231	0					
ANR	32588	Identifier	iline		32231	1					
ANR	32589	SizeofExpression	sizeof * ptr		32231	1					
ANR	32590	Sizeof	sizeof		32231	0					
ANR	32591	UnaryOperationExpression	* ptr		32231	1					
ANR	32592	UnaryOperator	*		32231	0					
ANR	32593	Identifier	ptr		32231	1					
ANR	32594	CompoundStatement		73:4:1875:1875	32231	1					
ANR	32595	ExpressionStatement	free ( buffer )	294:6:7689:7702	32231	0	True				
ANR	32596	CallExpression	free ( buffer )		32231	0					
ANR	32597	Callee	free		32231	0					
ANR	32598	Identifier	free		32231	0					
ANR	32599	ArgumentList	buffer		32231	1					
ANR	32600	Argument	buffer		32231	0					
ANR	32601	Identifier	buffer		32231	0					
ANR	32602	ReturnStatement	return false ;	295:6:7710:7722	32231	1	True				
ANR	32603	Identifier	false		32231	0					
ANR	32604	ExpressionStatement	iline = 0	297:2:7732:7741	32231	12	True				
ANR	32605	AssignmentExpression	iline = 0		32231	0		=			
ANR	32606	Identifier	iline		32231	0					
ANR	32607	PrimaryExpression	0		32231	1					
ANR	32608	ForStatement	for ( s = buffer ; ; s ++ )		32231	13					
ANR	32609	ForInit	s = buffer ;	298:7:7750:7760	32231	0	True				
ANR	32610	AssignmentExpression	s = buffer		32231	0		=			
ANR	32611	Identifier	s		32231	0					
ANR	32612	Identifier	buffer		32231	1					
ANR	32613	PostIncDecOperationExpression	s ++	298:23:7766:7768	32231	1	True				
ANR	32614	Identifier	s		32231	0					
ANR	32615	IncDec	++		32231	1					
ANR	32616	CompoundStatement		79:4:1969:1969	32231	2					
ANR	32617	ExpressionStatement	ptr [ ++ iline ] = s	300:6:7783:7799	32231	0	True				
ANR	32618	AssignmentExpression	ptr [ ++ iline ] = s		32231	0		=			
ANR	32619	ArrayIndexing	ptr [ ++ iline ]		32231	0					
ANR	32620	Identifier	ptr		32231	0					
ANR	32621	UnaryExpression	++ iline		32231	1					
ANR	32622	IncDec	++		32231	0					
ANR	32623	Identifier	iline		32231	1					
ANR	32624	Identifier	s		32231	1					
ANR	32625	IfStatement	"if ( ! ( s = ( char * ) memchr ( s , '\\n' , lim - s ) ) )"		32231	1					
ANR	32626	Condition	"! ( s = ( char * ) memchr ( s , '\\n' , lim - s ) )"	301:10:7811:7852	32231	0	True				
ANR	32627	UnaryOperationExpression	"! ( s = ( char * ) memchr ( s , '\\n' , lim - s ) )"		32231	0					
ANR	32628	UnaryOperator	!		32231	0					
ANR	32629	AssignmentExpression	"s = ( char * ) memchr ( s , '\\n' , lim - s )"		32231	1		=			
ANR	32630	Identifier	s		32231	0					
ANR	32631	CastExpression	"( char * ) memchr ( s , '\\n' , lim - s )"		32231	1					
ANR	32632	CastTarget	char *		32231	0					
ANR	32633	CallExpression	"memchr ( s , '\\n' , lim - s )"		32231	1					
ANR	32634	Callee	memchr		32231	0					
ANR	32635	Identifier	memchr		32231	0					
ANR	32636	ArgumentList	s		32231	1					
ANR	32637	Argument	s		32231	0					
ANR	32638	Identifier	s		32231	0					
ANR	32639	Argument	'\\n'		32231	1					
ANR	32640	PrimaryExpression	'\\n'		32231	0					
ANR	32641	Argument	lim - s		32231	2					
ANR	32642	AdditiveExpression	lim - s		32231	0		-			
ANR	32643	Identifier	lim		32231	0					
ANR	32644	Identifier	s		32231	1					
ANR	32645	BreakStatement	break ;	302:1:7856:7861	32231	1	True				
ANR	32646	IfStatement	if ( size && lim [ - 1 ] != '\\n' )		32231	14					
ANR	32647	Condition	size && lim [ - 1 ] != '\\n'	304:6:7875:7897	32231	0	True				
ANR	32648	AndExpression	size && lim [ - 1 ] != '\\n'		32231	0		&&			
ANR	32649	Identifier	size		32231	0					
ANR	32650	EqualityExpression	lim [ - 1 ] != '\\n'		32231	1		!=			
ANR	32651	ArrayIndexing	lim [ - 1 ]		32231	0					
ANR	32652	Identifier	lim		32231	0					
ANR	32653	UnaryOperationExpression	- 1		32231	1					
ANR	32654	UnaryOperator	-		32231	0					
ANR	32655	PrimaryExpression	1		32231	1					
ANR	32656	PrimaryExpression	'\\n'		32231	1					
ANR	32657	ExpressionStatement	ptr [ ++ iline ] = lim	305:4:7904:7922	32231	1	True				
ANR	32658	AssignmentExpression	ptr [ ++ iline ] = lim		32231	0		=			
ANR	32659	ArrayIndexing	ptr [ ++ iline ]		32231	0					
ANR	32660	Identifier	ptr		32231	0					
ANR	32661	UnaryExpression	++ iline		32231	1					
ANR	32662	IncDec	++		32231	0					
ANR	32663	Identifier	iline		32231	1					
ANR	32664	Identifier	lim		32231	1					
ANR	32665	ExpressionStatement	input_lines = iline - 1	306:2:7926:7949	32231	15	True				
ANR	32666	AssignmentExpression	input_lines = iline - 1		32231	0		=			
ANR	32667	Identifier	input_lines		32231	0					
ANR	32668	AdditiveExpression	iline - 1		32231	1		-			
ANR	32669	Identifier	iline		32231	0					
ANR	32670	PrimaryExpression	1		32231	1					
ANR	32671	IfStatement	if ( revision )		32231	16					
ANR	32672	Condition	revision	308:6:7958:7965	32231	0	True				
ANR	32673	Identifier	revision		32231	0					
ANR	32674	CompoundStatement		93:6:2268:2296	32231	1					
ANR	32675	IdentifierDeclStatement	char const * rev = revision ;	310:6:7980:8006	32231	0	True				
ANR	32676	IdentifierDecl	* rev = revision		32231	0					
ANR	32677	IdentifierDeclType	char const *		32231	0					
ANR	32678	Identifier	rev		32231	1					
ANR	32679	AssignmentExpression	* rev = revision		32231	2		=			
ANR	32680	Identifier	revision		32231	0					
ANR	32681	Identifier	revision		32231	1					
ANR	32682	IdentifierDeclStatement	int rev0 = rev [ 0 ] ;	311:6:8014:8031	32231	1	True				
ANR	32683	IdentifierDecl	rev0 = rev [ 0 ]		32231	0					
ANR	32684	IdentifierDeclType	int		32231	0					
ANR	32685	Identifier	rev0		32231	1					
ANR	32686	AssignmentExpression	rev0 = rev [ 0 ]		32231	2		=			
ANR	32687	Identifier	rev0		32231	0					
ANR	32688	ArrayIndexing	rev [ 0 ]		32231	1					
ANR	32689	Identifier	rev		32231	0					
ANR	32690	PrimaryExpression	0		32231	1					
ANR	32691	IdentifierDeclStatement	bool found_revision = false ;	312:6:8039:8066	32231	2	True				
ANR	32692	IdentifierDecl	found_revision = false		32231	0					
ANR	32693	IdentifierDeclType	bool		32231	0					
ANR	32694	Identifier	found_revision		32231	1					
ANR	32695	AssignmentExpression	found_revision = false		32231	2		=			
ANR	32696	Identifier	false		32231	0					
ANR	32697	Identifier	false		32231	1					
ANR	32698	IdentifierDeclStatement	size_t revlen = strlen ( rev ) ;	313:6:8074:8102	32231	3	True				
ANR	32699	IdentifierDecl	revlen = strlen ( rev )		32231	0					
ANR	32700	IdentifierDeclType	size_t		32231	0					
ANR	32701	Identifier	revlen		32231	1					
ANR	32702	AssignmentExpression	revlen = strlen ( rev )		32231	2		=			
ANR	32703	Identifier	revlen		32231	0					
ANR	32704	CallExpression	strlen ( rev )		32231	1					
ANR	32705	Callee	strlen		32231	0					
ANR	32706	Identifier	strlen		32231	0					
ANR	32707	ArgumentList	rev		32231	1					
ANR	32708	Argument	rev		32231	0					
ANR	32709	Identifier	rev		32231	0					
ANR	32710	IfStatement	if ( revlen <= size )		32231	4					
ANR	32711	Condition	revlen <= size	315:10:8115:8128	32231	0	True				
ANR	32712	RelationalExpression	revlen <= size		32231	0		<=			
ANR	32713	Identifier	revlen		32231	0					
ANR	32714	Identifier	size		32231	1					
ANR	32715	CompoundStatement		97:3:2331:2364	32231	1					
ANR	32716	IdentifierDeclStatement	char const * limrev = lim - revlen ;	317:3:8137:8170	32231	0	True				
ANR	32717	IdentifierDecl	* limrev = lim - revlen		32231	0					
ANR	32718	IdentifierDeclType	char const *		32231	0					
ANR	32719	Identifier	limrev		32231	1					
ANR	32720	AssignmentExpression	* limrev = lim - revlen		32231	2		=			
ANR	32721	Identifier	limrev		32231	0					
ANR	32722	AdditiveExpression	lim - revlen		32231	1		-			
ANR	32723	Identifier	lim		32231	0					
ANR	32724	Identifier	revlen		32231	1					
ANR	32725	ForStatement	"for ( s = buffer ; ( s = ( char * ) memchr ( s , rev0 , limrev - s ) ) ; s ++ )"		32231	1					
ANR	32726	ForInit	s = buffer ;	319:8:8181:8191	32231	0	True				
ANR	32727	AssignmentExpression	s = buffer		32231	0		=			
ANR	32728	Identifier	s		32231	0					
ANR	32729	Identifier	buffer		32231	1					
ANR	32730	Condition	"s = ( char * ) memchr ( s , rev0 , limrev - s )"	319:21:8194:8236	32231	1	True				
ANR	32731	AssignmentExpression	"s = ( char * ) memchr ( s , rev0 , limrev - s )"		32231	0		=			
ANR	32732	Identifier	s		32231	0					
ANR	32733	CastExpression	"( char * ) memchr ( s , rev0 , limrev - s )"		32231	1					
ANR	32734	CastTarget	char *		32231	0					
ANR	32735	CallExpression	"memchr ( s , rev0 , limrev - s )"		32231	1					
ANR	32736	Callee	memchr		32231	0					
ANR	32737	Identifier	memchr		32231	0					
ANR	32738	ArgumentList	s		32231	1					
ANR	32739	Argument	s		32231	0					
ANR	32740	Identifier	s		32231	0					
ANR	32741	Argument	rev0		32231	1					
ANR	32742	Identifier	rev0		32231	0					
ANR	32743	Argument	limrev - s		32231	2					
ANR	32744	AdditiveExpression	limrev - s		32231	0		-			
ANR	32745	Identifier	limrev		32231	0					
ANR	32746	Identifier	s		32231	1					
ANR	32747	PostIncDecOperationExpression	s ++	319:67:8240:8242	32231	2	True				
ANR	32748	Identifier	s		32231	0					
ANR	32749	IncDec	++		32231	1					
ANR	32750	IfStatement	"if ( memcmp ( s , rev , revlen ) == 0 && ( s == buffer || ISSPACE ( ( unsigned char ) s [ - 1 ] ) ) && ( s + 1 == limrev || ISSPACE ( ( unsigned char ) s [ revlen ] ) ) )"		32231	3					
ANR	32751	Condition	"memcmp ( s , rev , revlen ) == 0 && ( s == buffer || ISSPACE ( ( unsigned char ) s [ - 1 ] ) ) && ( s + 1 == limrev || ISSPACE ( ( unsigned char ) s [ revlen ] ) )"	320:9:8254:8397	32231	0	True				
ANR	32752	AndExpression	"memcmp ( s , rev , revlen ) == 0 && ( s == buffer || ISSPACE ( ( unsigned char ) s [ - 1 ] ) ) && ( s + 1 == limrev || ISSPACE ( ( unsigned char ) s [ revlen ] ) )"		32231	0		&&			
ANR	32753	EqualityExpression	"memcmp ( s , rev , revlen ) == 0"		32231	0		==			
ANR	32754	CallExpression	"memcmp ( s , rev , revlen )"		32231	0					
ANR	32755	Callee	memcmp		32231	0					
ANR	32756	Identifier	memcmp		32231	0					
ANR	32757	ArgumentList	s		32231	1					
ANR	32758	Argument	s		32231	0					
ANR	32759	Identifier	s		32231	0					
ANR	32760	Argument	rev		32231	1					
ANR	32761	Identifier	rev		32231	0					
ANR	32762	Argument	revlen		32231	2					
ANR	32763	Identifier	revlen		32231	0					
ANR	32764	PrimaryExpression	0		32231	1					
ANR	32765	AndExpression	( s == buffer || ISSPACE ( ( unsigned char ) s [ - 1 ] ) ) && ( s + 1 == limrev || ISSPACE ( ( unsigned char ) s [ revlen ] ) )		32231	1		&&			
ANR	32766	OrExpression	s == buffer || ISSPACE ( ( unsigned char ) s [ - 1 ] )		32231	0		||			
ANR	32767	EqualityExpression	s == buffer		32231	0		==			
ANR	32768	Identifier	s		32231	0					
ANR	32769	Identifier	buffer		32231	1					
ANR	32770	CallExpression	ISSPACE ( ( unsigned char ) s [ - 1 ] )		32231	1					
ANR	32771	Callee	ISSPACE		32231	0					
ANR	32772	Identifier	ISSPACE		32231	0					
ANR	32773	ArgumentList	( unsigned char ) s [ - 1 ]		32231	1					
ANR	32774	Argument	( unsigned char ) s [ - 1 ]		32231	0					
ANR	32775	CastExpression	( unsigned char ) s [ - 1 ]		32231	0					
ANR	32776	CastTarget	unsigned char		32231	0					
ANR	32777	ArrayIndexing	s [ - 1 ]		32231	1					
ANR	32778	Identifier	s		32231	0					
ANR	32779	UnaryOperationExpression	- 1		32231	1					
ANR	32780	UnaryOperator	-		32231	0					
ANR	32781	PrimaryExpression	1		32231	1					
ANR	32782	OrExpression	s + 1 == limrev || ISSPACE ( ( unsigned char ) s [ revlen ] )		32231	1		||			
ANR	32783	EqualityExpression	s + 1 == limrev		32231	0		==			
ANR	32784	AdditiveExpression	s + 1		32231	0		+			
ANR	32785	Identifier	s		32231	0					
ANR	32786	PrimaryExpression	1		32231	1					
ANR	32787	Identifier	limrev		32231	1					
ANR	32788	CallExpression	ISSPACE ( ( unsigned char ) s [ revlen ] )		32231	1					
ANR	32789	Callee	ISSPACE		32231	0					
ANR	32790	Identifier	ISSPACE		32231	0					
ANR	32791	ArgumentList	( unsigned char ) s [ revlen ]		32231	1					
ANR	32792	Argument	( unsigned char ) s [ revlen ]		32231	0					
ANR	32793	CastExpression	( unsigned char ) s [ revlen ]		32231	0					
ANR	32794	CastTarget	unsigned char		32231	0					
ANR	32795	ArrayIndexing	s [ revlen ]		32231	1					
ANR	32796	Identifier	s		32231	0					
ANR	32797	Identifier	revlen		32231	1					
ANR	32798	CompoundStatement		103:7:2601:2601	32231	1					
ANR	32799	ExpressionStatement	found_revision = true	324:2:8411:8432	32231	0	True				
ANR	32800	AssignmentExpression	found_revision = true		32231	0		=			
ANR	32801	Identifier	found_revision		32231	0					
ANR	32802	Identifier	true		32231	1					
ANR	32803	BreakStatement	break ;	325:2:8436:8441	32231	1	True				
ANR	32804	ExpressionStatement	report_revision ( found_revision )	329:6:8462:8494	32231	5	True				
ANR	32805	CallExpression	report_revision ( found_revision )		32231	0					
ANR	32806	Callee	report_revision		32231	0					
ANR	32807	Identifier	report_revision		32231	0					
ANR	32808	ArgumentList	found_revision		32231	1					
ANR	32809	Argument	found_revision		32231	0					
ANR	32810	Identifier	found_revision		32231	0					
ANR	32811	ExpressionStatement	i_buffer = buffer	333:2:8532:8549	32231	17	True				
ANR	32812	AssignmentExpression	i_buffer = buffer		32231	0		=			
ANR	32813	Identifier	i_buffer		32231	0					
ANR	32814	Identifier	buffer		32231	1					
ANR	32815	ExpressionStatement	i_ptr = ptr	334:2:8553:8564	32231	18	True				
ANR	32816	AssignmentExpression	i_ptr = ptr		32231	0		=			
ANR	32817	Identifier	i_ptr		32231	0					
ANR	32818	Identifier	ptr		32231	1					
ANR	32819	ReturnStatement	return true ;	335:2:8568:8579	32231	19	True				
ANR	32820	Identifier	true		32231	0					
ANR	32821	ReturnType	static bool		32231	1					
ANR	32822	Identifier	plan_a		32231	2					
ANR	32823	ParameterList	char const * filename		32231	3					
ANR	32824	Parameter	char const * filename	220:8:5783:5802	32231	0	True				
ANR	32825	ParameterType	char const *		32231	0					
ANR	32826	Identifier	filename		32231	1					
ANR	32827	CFGEntryNode	ENTRY		32231		True				
ANR	32828	CFGExitNode	EXIT		32231		True				
ANR	32829	InfiniteForNode	true		32231		True				
ANR	32830	Symbol	input_lines		32231						
ANR	32831	Symbol	quotearg		32231						
ANR	32832	Symbol	instat		32231						
ANR	32833	Symbol	* rev		32231						
ANR	32834	Symbol	* revlen		32231						
ANR	32835	Symbol	lim		32231						
ANR	32836	Symbol	instat . st_mode		32231						
ANR	32837	Symbol	strlen		32231						
ANR	32838	Symbol	memcmp		32231						
ANR	32839	Symbol	found_revision		32231						
ANR	32840	Symbol	limrev		32231						
ANR	32841	Symbol	buffered		32231						
ANR	32842	Symbol	* ptr		32231						
ANR	32843	Symbol	rev0		32231						
ANR	32844	Symbol	buffer		32231						
ANR	32845	Symbol	close		32231						
ANR	32846	Symbol	revlen		32231						
ANR	32847	Symbol	S_ISLNK		32231						
ANR	32848	Symbol	malloc		32231						
ANR	32849	Symbol	rev		32231						
ANR	32850	Symbol	read		32231						
ANR	32851	Symbol	ifd		32231						
ANR	32852	Symbol	iline		32231						
ANR	32853	Symbol	false		32231						
ANR	32854	Symbol	i_ptr		32231						
ANR	32855	Symbol	n		32231						
ANR	32856	Symbol	ptr		32231						
ANR	32857	Symbol	safe_open		32231						
ANR	32858	Symbol	revision		32231						
ANR	32859	Symbol	i_buffer		32231						
ANR	32860	Symbol	filename		32231						
ANR	32861	Symbol	s		32231						
ANR	32862	Symbol	S_ISREG		32231						
ANR	32863	Symbol	O_RDONLY		32231						
ANR	32864	Symbol	size		32231						
ANR	32865	Symbol	true		32231						
ANR	32866	Symbol	memchr		32231						
ANR	32867	Symbol	* lim		32231						
ANR	32868	Symbol	binary_transput		32231						
ANR	32869	Symbol	safe_readlink		32231						
ANR	32870	Symbol	* iline		32231						
ANR	32871	Symbol	ISSPACE		32231						
ANR	32872	Symbol	instat . st_size		32231						
ANR	32873	Symbol	* s		32231						
ANR	32874	Function	plan_b	340:0:8627:11175							
ANR	32875	FunctionDef	plan_b (char const * filename)		32874	0					
ANR	32876	CompoundStatement		342:0:8669:11175	32874	0					
ANR	32877	IdentifierDeclStatement	int ifd ;	343:2:8673:8680	32874	0	True				
ANR	32878	IdentifierDecl	ifd		32874	0					
ANR	32879	IdentifierDeclType	int		32874	0					
ANR	32880	Identifier	ifd		32874	1					
ANR	32881	IdentifierDeclStatement	FILE * ifp ;	344:2:8684:8693	32874	1	True				
ANR	32882	IdentifierDecl	* ifp		32874	0					
ANR	32883	IdentifierDeclType	FILE *		32874	0					
ANR	32884	Identifier	ifp		32874	1					
ANR	32885	IdentifierDeclStatement	int c ;	345:2:8697:8702	32874	2	True				
ANR	32886	IdentifierDecl	c		32874	0					
ANR	32887	IdentifierDeclType	int		32874	0					
ANR	32888	Identifier	c		32874	1					
ANR	32889	IdentifierDeclStatement	size_t len ;	346:2:8706:8716	32874	3	True				
ANR	32890	IdentifierDecl	len		32874	0					
ANR	32891	IdentifierDeclType	size_t		32874	0					
ANR	32892	Identifier	len		32874	1					
ANR	32893	IdentifierDeclStatement	size_t maxlen ;	347:2:8720:8733	32874	4	True				
ANR	32894	IdentifierDecl	maxlen		32874	0					
ANR	32895	IdentifierDeclType	size_t		32874	0					
ANR	32896	Identifier	maxlen		32874	1					
ANR	32897	IdentifierDeclStatement	bool found_revision ;	348:2:8737:8756	32874	5	True				
ANR	32898	IdentifierDecl	found_revision		32874	0					
ANR	32899	IdentifierDeclType	bool		32874	0					
ANR	32900	Identifier	found_revision		32874	1					
ANR	32901	IdentifierDeclStatement	size_t i ;	349:2:8760:8768	32874	6	True				
ANR	32902	IdentifierDecl	i		32874	0					
ANR	32903	IdentifierDeclType	size_t		32874	0					
ANR	32904	Identifier	i		32874	1					
ANR	32905	IdentifierDeclStatement	char const * rev ;	350:2:8772:8787	32874	7	True				
ANR	32906	IdentifierDecl	* rev		32874	0					
ANR	32907	IdentifierDeclType	char const *		32874	0					
ANR	32908	Identifier	rev		32874	1					
ANR	32909	IdentifierDeclStatement	size_t revlen ;	351:2:8791:8804	32874	8	True				
ANR	32910	IdentifierDecl	revlen		32874	0					
ANR	32911	IdentifierDeclType	size_t		32874	0					
ANR	32912	Identifier	revlen		32874	1					
ANR	32913	IdentifierDeclStatement	lin line = 1 ;	352:2:8808:8820	32874	9	True				
ANR	32914	IdentifierDecl	line = 1		32874	0					
ANR	32915	IdentifierDeclType	lin		32874	0					
ANR	32916	Identifier	line		32874	1					
ANR	32917	AssignmentExpression	line = 1		32874	2		=			
ANR	32918	Identifier	line		32874	0					
ANR	32919	PrimaryExpression	1		32874	1					
ANR	32920	IfStatement	if ( instat . st_size == 0 )		32874	10					
ANR	32921	Condition	instat . st_size == 0	354:6:8829:8847	32874	0	True				
ANR	32922	EqualityExpression	instat . st_size == 0		32874	0		==			
ANR	32923	MemberAccess	instat . st_size		32874	0					
ANR	32924	Identifier	instat		32874	0					
ANR	32925	Identifier	st_size		32874	1					
ANR	32926	PrimaryExpression	0		32874	1					
ANR	32927	ExpressionStatement	filename = NULL_DEVICE	355:4:8854:8876	32874	1	True				
ANR	32928	AssignmentExpression	filename = NULL_DEVICE		32874	0		=			
ANR	32929	Identifier	filename		32874	0					
ANR	32930	Identifier	NULL_DEVICE		32874	1					
ANR	32931	IfStatement	"if ( ( ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 ) ) < 0 || ! ( ifp = fdopen ( ifd , binary_transput ? ""rb"" : ""r"" ) ) )"		32874	11					
ANR	32932	Condition	"( ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 ) ) < 0 || ! ( ifp = fdopen ( ifd , binary_transput ? ""rb"" : ""r"" ) )"	356:6:8884:9008	32874	0	True				
ANR	32933	OrExpression	"( ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 ) ) < 0 || ! ( ifp = fdopen ( ifd , binary_transput ? ""rb"" : ""r"" ) )"		32874	0		||			
ANR	32934	RelationalExpression	"( ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 ) ) < 0"		32874	0		<			
ANR	32935	AssignmentExpression	"ifd = safe_open ( filename , O_RDONLY | binary_transput , 0 )"		32874	0		=			
ANR	32936	Identifier	ifd		32874	0					
ANR	32937	CallExpression	"safe_open ( filename , O_RDONLY | binary_transput , 0 )"		32874	1					
ANR	32938	Callee	safe_open		32874	0					
ANR	32939	Identifier	safe_open		32874	0					
ANR	32940	ArgumentList	filename		32874	1					
ANR	32941	Argument	filename		32874	0					
ANR	32942	Identifier	filename		32874	0					
ANR	32943	Argument	O_RDONLY | binary_transput		32874	1					
ANR	32944	InclusiveOrExpression	O_RDONLY | binary_transput		32874	0		|			
ANR	32945	Identifier	O_RDONLY		32874	0					
ANR	32946	Identifier	binary_transput		32874	1					
ANR	32947	Argument	0		32874	2					
ANR	32948	PrimaryExpression	0		32874	0					
ANR	32949	PrimaryExpression	0		32874	1					
ANR	32950	UnaryOperationExpression	"! ( ifp = fdopen ( ifd , binary_transput ? ""rb"" : ""r"" ) )"		32874	1					
ANR	32951	UnaryOperator	!		32874	0					
ANR	32952	AssignmentExpression	"ifp = fdopen ( ifd , binary_transput ? ""rb"" : ""r"" )"		32874	1		=			
ANR	32953	Identifier	ifp		32874	0					
ANR	32954	CallExpression	"fdopen ( ifd , binary_transput ? ""rb"" : ""r"" )"		32874	1					
ANR	32955	Callee	fdopen		32874	0					
ANR	32956	Identifier	fdopen		32874	0					
ANR	32957	ArgumentList	ifd		32874	1					
ANR	32958	Argument	ifd		32874	0					
ANR	32959	Identifier	ifd		32874	0					
ANR	32960	Argument	"binary_transput ? ""rb"" : ""r"""		32874	1					
ANR	32961	ConditionalExpression	"binary_transput ? ""rb"" : ""r"""		32874	0					
ANR	32962	Condition	binary_transput		32874	0					
ANR	32963	Identifier	binary_transput		32874	0					
ANR	32964	PrimaryExpression	"""rb"""		32874	1					
ANR	32965	PrimaryExpression	"""r"""		32874	2					
ANR	32966	ExpressionStatement	"pfatal ( ""Can't open file %s"" , quotearg ( filename ) )"	358:4:9015:9065	32874	1	True				
ANR	32967	CallExpression	"pfatal ( ""Can't open file %s"" , quotearg ( filename ) )"		32874	0					
ANR	32968	Callee	pfatal		32874	0					
ANR	32969	Identifier	pfatal		32874	0					
ANR	32970	ArgumentList	"""Can't open file %s"""		32874	1					
ANR	32971	Argument	"""Can't open file %s"""		32874	0					
ANR	32972	PrimaryExpression	"""Can't open file %s"""		32874	0					
ANR	32973	Argument	quotearg ( filename )		32874	1					
ANR	32974	CallExpression	quotearg ( filename )		32874	0					
ANR	32975	Callee	quotearg		32874	0					
ANR	32976	Identifier	quotearg		32874	0					
ANR	32977	ArgumentList	filename		32874	1					
ANR	32978	Argument	filename		32874	0					
ANR	32979	Identifier	filename		32874	0					
ANR	32980	IfStatement	if ( TMPINNAME_needs_removal )		32874	12					
ANR	32981	Condition	TMPINNAME_needs_removal	359:6:9073:9095	32874	0	True				
ANR	32982	Identifier	TMPINNAME_needs_removal		32874	0					
ANR	32983	CompoundStatement		19:4:432:432	32874	1					
ANR	32984	ExpressionStatement	"tifd = create_file ( TMPINNAME , O_RDWR | O_BINARY , 0 , true )"	362:6:9158:9216	32874	0	True				
ANR	32985	AssignmentExpression	"tifd = create_file ( TMPINNAME , O_RDWR | O_BINARY , 0 , true )"		32874	0		=			
ANR	32986	Identifier	tifd		32874	0					
ANR	32987	CallExpression	"create_file ( TMPINNAME , O_RDWR | O_BINARY , 0 , true )"		32874	1					
ANR	32988	Callee	create_file		32874	0					
ANR	32989	Identifier	create_file		32874	0					
ANR	32990	ArgumentList	TMPINNAME		32874	1					
ANR	32991	Argument	TMPINNAME		32874	0					
ANR	32992	Identifier	TMPINNAME		32874	0					
ANR	32993	Argument	O_RDWR | O_BINARY		32874	1					
ANR	32994	InclusiveOrExpression	O_RDWR | O_BINARY		32874	0		|			
ANR	32995	Identifier	O_RDWR		32874	0					
ANR	32996	Identifier	O_BINARY		32874	1					
ANR	32997	Argument	0		32874	2					
ANR	32998	PrimaryExpression	0		32874	0					
ANR	32999	Argument	true		32874	3					
ANR	33000	Identifier	true		32874	0					
ANR	33001	ElseStatement	else		32874	0					
ANR	33002	CompoundStatement		24:4:565:565	32874	0					
ANR	33003	ExpressionStatement	"tifd = make_tempfile ( & TMPINNAME , 'i' , NULL , O_RDWR | O_BINARY , S_IRUSR | S_IWUSR )"	366:6:9243:9332	32874	0	True				
ANR	33004	AssignmentExpression	"tifd = make_tempfile ( & TMPINNAME , 'i' , NULL , O_RDWR | O_BINARY , S_IRUSR | S_IWUSR )"		32874	0		=			
ANR	33005	Identifier	tifd		32874	0					
ANR	33006	CallExpression	"make_tempfile ( & TMPINNAME , 'i' , NULL , O_RDWR | O_BINARY , S_IRUSR | S_IWUSR )"		32874	1					
ANR	33007	Callee	make_tempfile		32874	0					
ANR	33008	Identifier	make_tempfile		32874	0					
ANR	33009	ArgumentList	& TMPINNAME		32874	1					
ANR	33010	Argument	& TMPINNAME		32874	0					
ANR	33011	UnaryOperationExpression	& TMPINNAME		32874	0					
ANR	33012	UnaryOperator	&		32874	0					
ANR	33013	Identifier	TMPINNAME		32874	1					
ANR	33014	Argument	'i'		32874	1					
ANR	33015	PrimaryExpression	'i'		32874	0					
ANR	33016	Argument	NULL		32874	2					
ANR	33017	Identifier	NULL		32874	0					
ANR	33018	Argument	O_RDWR | O_BINARY		32874	3					
ANR	33019	InclusiveOrExpression	O_RDWR | O_BINARY		32874	0		|			
ANR	33020	Identifier	O_RDWR		32874	0					
ANR	33021	Identifier	O_BINARY		32874	1					
ANR	33022	Argument	S_IRUSR | S_IWUSR		32874	4					
ANR	33023	InclusiveOrExpression	S_IRUSR | S_IWUSR		32874	0		|			
ANR	33024	Identifier	S_IRUSR		32874	0					
ANR	33025	Identifier	S_IWUSR		32874	1					
ANR	33026	IfStatement	if ( tifd == - 1 )		32874	1					
ANR	33027	Condition	tifd == - 1	368:10:9344:9353	32874	0	True				
ANR	33028	EqualityExpression	tifd == - 1		32874	0		==			
ANR	33029	Identifier	tifd		32874	0					
ANR	33030	UnaryOperationExpression	- 1		32874	1					
ANR	33031	UnaryOperator	-		32874	0					
ANR	33032	PrimaryExpression	1		32874	1					
ANR	33033	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , TMPINNAME )"	369:1:9357:9409	32874	1	True				
ANR	33034	CallExpression	"pfatal ( ""Can't create temporary file %s"" , TMPINNAME )"		32874	0					
ANR	33035	Callee	pfatal		32874	0					
ANR	33036	Identifier	pfatal		32874	0					
ANR	33037	ArgumentList	"""Can't create temporary file %s"""		32874	1					
ANR	33038	Argument	"""Can't create temporary file %s"""		32874	0					
ANR	33039	PrimaryExpression	"""Can't create temporary file %s"""		32874	0					
ANR	33040	Argument	TMPINNAME		32874	1					
ANR	33041	Identifier	TMPINNAME		32874	0					
ANR	33042	ExpressionStatement	TMPINNAME_needs_removal = true	370:6:9417:9447	32874	2	True				
ANR	33043	AssignmentExpression	TMPINNAME_needs_removal = true		32874	0		=			
ANR	33044	Identifier	TMPINNAME_needs_removal		32874	0					
ANR	33045	Identifier	true		32874	1					
ANR	33046	ExpressionStatement	i = 0	372:2:9457:9462	32874	13	True				
ANR	33047	AssignmentExpression	i = 0		32874	0		=			
ANR	33048	Identifier	i		32874	0					
ANR	33049	PrimaryExpression	0		32874	1					
ANR	33050	ExpressionStatement	len = 0	373:2:9466:9473	32874	14	True				
ANR	33051	AssignmentExpression	len = 0		32874	0		=			
ANR	33052	Identifier	len		32874	0					
ANR	33053	PrimaryExpression	0		32874	1					
ANR	33054	ExpressionStatement	maxlen = 1	374:2:9477:9487	32874	15	True				
ANR	33055	AssignmentExpression	maxlen = 1		32874	0		=			
ANR	33056	Identifier	maxlen		32874	0					
ANR	33057	PrimaryExpression	1		32874	1					
ANR	33058	ExpressionStatement	rev = revision	375:2:9491:9505	32874	16	True				
ANR	33059	AssignmentExpression	rev = revision		32874	0		=			
ANR	33060	Identifier	rev		32874	0					
ANR	33061	Identifier	revision		32874	1					
ANR	33062	ExpressionStatement	found_revision = ! rev	376:2:9509:9530	32874	17	True				
ANR	33063	AssignmentExpression	found_revision = ! rev		32874	0		=			
ANR	33064	Identifier	found_revision		32874	0					
ANR	33065	UnaryOperationExpression	! rev		32874	1					
ANR	33066	UnaryOperator	!		32874	0					
ANR	33067	Identifier	rev		32874	1					
ANR	33068	ExpressionStatement	revlen = rev ? strlen ( rev ) : 0	377:2:9534:9565	32874	18	True				
ANR	33069	AssignmentExpression	revlen = rev ? strlen ( rev ) : 0		32874	0		=			
ANR	33070	Identifier	revlen		32874	0					
ANR	33071	ConditionalExpression	rev ? strlen ( rev ) : 0		32874	1					
ANR	33072	Condition	rev		32874	0					
ANR	33073	Identifier	rev		32874	0					
ANR	33074	CallExpression	strlen ( rev )		32874	1					
ANR	33075	Callee	strlen		32874	0					
ANR	33076	Identifier	strlen		32874	0					
ANR	33077	ArgumentList	rev		32874	1					
ANR	33078	Argument	rev		32874	0					
ANR	33079	Identifier	rev		32874	0					
ANR	33080	PrimaryExpression	0		32874	2					
ANR	33081	WhileStatement	while ( ( c = getc ( ifp ) ) != EOF )		32874	19					
ANR	33082	Condition	( c = getc ( ifp ) ) != EOF	379:9:9577:9599	32874	0	True				
ANR	33083	EqualityExpression	( c = getc ( ifp ) ) != EOF		32874	0		!=			
ANR	33084	AssignmentExpression	c = getc ( ifp )		32874	0		=			
ANR	33085	Identifier	c		32874	0					
ANR	33086	CallExpression	getc ( ifp )		32874	1					
ANR	33087	Callee	getc		32874	0					
ANR	33088	Identifier	getc		32874	0					
ANR	33089	ArgumentList	ifp		32874	1					
ANR	33090	Argument	ifp		32874	0					
ANR	33091	Identifier	ifp		32874	0					
ANR	33092	Identifier	EOF		32874	1					
ANR	33093	CompoundStatement		39:4:936:936	32874	1					
ANR	33094	IfStatement	if ( ++ len > ( ( size_t ) - 1 ) / 2 )		32874	0					
ANR	33095	Condition	++ len > ( ( size_t ) - 1 ) / 2	381:10:9618:9642	32874	0	True				
ANR	33096	RelationalExpression	++ len > ( ( size_t ) - 1 ) / 2		32874	0		>			
ANR	33097	UnaryExpression	++ len		32874	0					
ANR	33098	IncDec	++		32874	0					
ANR	33099	Identifier	len		32874	1					
ANR	33100	MultiplicativeExpression	( ( size_t ) - 1 ) / 2		32874	1		/			
ANR	33101	CastExpression	( size_t ) - 1		32874	0					
ANR	33102	CastTarget	size_t		32874	0					
ANR	33103	UnaryOperationExpression	- 1		32874	1					
ANR	33104	UnaryOperator	-		32874	0					
ANR	33105	PrimaryExpression	1		32874	1					
ANR	33106	PrimaryExpression	2		32874	1					
ANR	33107	ExpressionStatement	lines_too_long ( filename )	382:1:9646:9671	32874	1	True				
ANR	33108	CallExpression	lines_too_long ( filename )		32874	0					
ANR	33109	Callee	lines_too_long		32874	0					
ANR	33110	Identifier	lines_too_long		32874	0					
ANR	33111	ArgumentList	filename		32874	1					
ANR	33112	Argument	filename		32874	0					
ANR	33113	Identifier	filename		32874	0					
ANR	33114	IfStatement	if ( c == '\\n' )		32874	1					
ANR	33115	Condition	c == '\\n'	384:10:9684:9692	32874	0	True				
ANR	33116	EqualityExpression	c == '\\n'		32874	0		==			
ANR	33117	Identifier	c		32874	0					
ANR	33118	PrimaryExpression	'\\n'		32874	1					
ANR	33119	CompoundStatement		44:1:1026:1026	32874	1					
ANR	33120	IfStatement	if ( ++ line < 0 )		32874	0					
ANR	33121	Condition	++ line < 0	386:7:9705:9714	32874	0	True				
ANR	33122	RelationalExpression	++ line < 0		32874	0		<			
ANR	33123	UnaryExpression	++ line		32874	0					
ANR	33124	IncDec	++		32874	0					
ANR	33125	Identifier	line		32874	1					
ANR	33126	PrimaryExpression	0		32874	1					
ANR	33127	ExpressionStatement	too_many_lines ( filename )	387:5:9722:9747	32874	1	True				
ANR	33128	CallExpression	too_many_lines ( filename )		32874	0					
ANR	33129	Callee	too_many_lines		32874	0					
ANR	33130	Identifier	too_many_lines		32874	0					
ANR	33131	ArgumentList	filename		32874	1					
ANR	33132	Argument	filename		32874	0					
ANR	33133	Identifier	filename		32874	0					
ANR	33134	IfStatement	if ( maxlen < len )		32874	1					
ANR	33135	Condition	maxlen < len	388:7:9756:9767	32874	0	True				
ANR	33136	RelationalExpression	maxlen < len		32874	0		<			
ANR	33137	Identifier	maxlen		32874	0					
ANR	33138	Identifier	len		32874	1					
ANR	33139	ExpressionStatement	maxlen = len	389:7:9777:9789	32874	1	True				
ANR	33140	AssignmentExpression	maxlen = len		32874	0		=			
ANR	33141	Identifier	maxlen		32874	0					
ANR	33142	Identifier	len		32874	1					
ANR	33143	ExpressionStatement	len = 0	390:3:9794:9801	32874	2	True				
ANR	33144	AssignmentExpression	len = 0		32874	0		=			
ANR	33145	Identifier	len		32874	0					
ANR	33146	PrimaryExpression	0		32874	1					
ANR	33147	IfStatement	if ( ! found_revision )		32874	2					
ANR	33148	Condition	! found_revision	393:10:9817:9831	32874	0	True				
ANR	33149	UnaryOperationExpression	! found_revision		32874	0					
ANR	33150	UnaryOperator	!		32874	0					
ANR	33151	Identifier	found_revision		32874	1					
ANR	33152	CompoundStatement		53:1:1165:1165	32874	1					
ANR	33153	IfStatement	if ( i == revlen )		32874	0					
ANR	33154	Condition	i == revlen	395:7:9844:9854	32874	0	True				
ANR	33155	EqualityExpression	i == revlen		32874	0		==			
ANR	33156	Identifier	i		32874	0					
ANR	33157	Identifier	revlen		32874	1					
ANR	33158	CompoundStatement		55:5:1192:1192	32874	1					
ANR	33159	ExpressionStatement	found_revision = ISSPACE ( ( unsigned char ) c )	397:7:9871:9915	32874	0	True				
ANR	33160	AssignmentExpression	found_revision = ISSPACE ( ( unsigned char ) c )		32874	0		=			
ANR	33161	Identifier	found_revision		32874	0					
ANR	33162	CallExpression	ISSPACE ( ( unsigned char ) c )		32874	1					
ANR	33163	Callee	ISSPACE		32874	0					
ANR	33164	Identifier	ISSPACE		32874	0					
ANR	33165	ArgumentList	( unsigned char ) c		32874	1					
ANR	33166	Argument	( unsigned char ) c		32874	0					
ANR	33167	CastExpression	( unsigned char ) c		32874	0					
ANR	33168	CastTarget	unsigned char		32874	0					
ANR	33169	Identifier	c		32874	1					
ANR	33170	ExpressionStatement	i = ( size_t ) - 1	398:7:9924:9939	32874	1	True				
ANR	33171	AssignmentExpression	i = ( size_t ) - 1		32874	0		=			
ANR	33172	Identifier	i		32874	0					
ANR	33173	CastExpression	( size_t ) - 1		32874	1					
ANR	33174	CastTarget	size_t		32874	0					
ANR	33175	UnaryOperationExpression	- 1		32874	1					
ANR	33176	UnaryOperator	-		32874	0					
ANR	33177	PrimaryExpression	1		32874	1					
ANR	33178	ElseStatement	else		32874	0					
ANR	33179	IfStatement	if ( i != ( size_t ) - 1 )		32874	0					
ANR	33180	Condition	i != ( size_t ) - 1	400:12:9960:9975	32874	0	True				
ANR	33181	EqualityExpression	i != ( size_t ) - 1		32874	0		!=			
ANR	33182	Identifier	i		32874	0					
ANR	33183	CastExpression	( size_t ) - 1		32874	1					
ANR	33184	CastTarget	size_t		32874	0					
ANR	33185	UnaryOperationExpression	- 1		32874	1					
ANR	33186	UnaryOperator	-		32874	0					
ANR	33187	PrimaryExpression	1		32874	1					
ANR	33188	ExpressionStatement	i = rev [ i ] == c ? i + 1 : ( size_t ) - 1	401:5:9983:10018	32874	1	True				
ANR	33189	AssignmentExpression	i = rev [ i ] == c ? i + 1 : ( size_t ) - 1		32874	0		=			
ANR	33190	Identifier	i		32874	0					
ANR	33191	ConditionalExpression	rev [ i ] == c ? i + 1 : ( size_t ) - 1		32874	1					
ANR	33192	Condition	rev [ i ] == c		32874	0					
ANR	33193	EqualityExpression	rev [ i ] == c		32874	0		==			
ANR	33194	ArrayIndexing	rev [ i ]		32874	0					
ANR	33195	Identifier	rev		32874	0					
ANR	33196	Identifier	i		32874	1					
ANR	33197	Identifier	c		32874	1					
ANR	33198	AdditiveExpression	i + 1		32874	1		+			
ANR	33199	Identifier	i		32874	0					
ANR	33200	PrimaryExpression	1		32874	1					
ANR	33201	CastExpression	( size_t ) - 1		32874	2					
ANR	33202	CastTarget	size_t		32874	0					
ANR	33203	UnaryOperationExpression	- 1		32874	1					
ANR	33204	UnaryOperator	-		32874	0					
ANR	33205	PrimaryExpression	1		32874	1					
ANR	33206	IfStatement	if ( i == ( size_t ) - 1 && ISSPACE ( ( unsigned char ) c ) )		32874	1					
ANR	33207	Condition	i == ( size_t ) - 1 && ISSPACE ( ( unsigned char ) c )	403:7:10028:10076	32874	0	True				
ANR	33208	AndExpression	i == ( size_t ) - 1 && ISSPACE ( ( unsigned char ) c )		32874	0		&&			
ANR	33209	EqualityExpression	i == ( size_t ) - 1		32874	0		==			
ANR	33210	Identifier	i		32874	0					
ANR	33211	CastExpression	( size_t ) - 1		32874	1					
ANR	33212	CastTarget	size_t		32874	0					
ANR	33213	UnaryOperationExpression	- 1		32874	1					
ANR	33214	UnaryOperator	-		32874	0					
ANR	33215	PrimaryExpression	1		32874	1					
ANR	33216	CallExpression	ISSPACE ( ( unsigned char ) c )		32874	1					
ANR	33217	Callee	ISSPACE		32874	0					
ANR	33218	Identifier	ISSPACE		32874	0					
ANR	33219	ArgumentList	( unsigned char ) c		32874	1					
ANR	33220	Argument	( unsigned char ) c		32874	0					
ANR	33221	CastExpression	( unsigned char ) c		32874	0					
ANR	33222	CastTarget	unsigned char		32874	0					
ANR	33223	Identifier	c		32874	1					
ANR	33224	ExpressionStatement	i = 0	404:5:10084:10089	32874	1	True				
ANR	33225	AssignmentExpression	i = 0		32874	0		=			
ANR	33226	Identifier	i		32874	0					
ANR	33227	PrimaryExpression	0		32874	1					
ANR	33228	IfStatement	if ( revision )		32874	20					
ANR	33229	Condition	revision	408:6:10107:10114	32874	0	True				
ANR	33230	Identifier	revision		32874	0					
ANR	33231	ExpressionStatement	report_revision ( found_revision )	409:4:10121:10153	32874	1	True				
ANR	33232	CallExpression	report_revision ( found_revision )		32874	0					
ANR	33233	Callee	report_revision		32874	0					
ANR	33234	Identifier	report_revision		32874	0					
ANR	33235	ArgumentList	found_revision		32874	1					
ANR	33236	Argument	found_revision		32874	0					
ANR	33237	Identifier	found_revision		32874	0					
ANR	33238	ExpressionStatement	"Fseek ( ifp , 0 , SEEK_SET )"	410:2:10157:10181	32874	21	True				
ANR	33239	CallExpression	"Fseek ( ifp , 0 , SEEK_SET )"		32874	0					
ANR	33240	Callee	Fseek		32874	0					
ANR	33241	Identifier	Fseek		32874	0					
ANR	33242	ArgumentList	ifp		32874	1					
ANR	33243	Argument	ifp		32874	0					
ANR	33244	Identifier	ifp		32874	0					
ANR	33245	Argument	0		32874	1					
ANR	33246	PrimaryExpression	0		32874	0					
ANR	33247	Argument	SEEK_SET		32874	2					
ANR	33248	Identifier	SEEK_SET		32874	0					
ANR	33249	ForStatement	for ( tibufsize = TIBUFSIZE_MINIMUM ; tibufsize < maxlen ; tibufsize <<= 1 )		32874	22					
ANR	33250	ForInit	tibufsize = TIBUFSIZE_MINIMUM ;	411:7:10209:10238	32874	0	True				
ANR	33251	AssignmentExpression	tibufsize = TIBUFSIZE_MINIMUM		32874	0		=			
ANR	33252	Identifier	tibufsize		32874	0					
ANR	33253	Identifier	TIBUFSIZE_MINIMUM		32874	1					
ANR	33254	Condition	tibufsize < maxlen	411:39:10241:10258	32874	1	True				
ANR	33255	RelationalExpression	tibufsize < maxlen		32874	0		<			
ANR	33256	Identifier	tibufsize		32874	0					
ANR	33257	Identifier	maxlen		32874	1					
ANR	33258	AssignmentExpression	tibufsize <<= 1	411:60:10262:10276	32874	2	True	<<=			
ANR	33259	Identifier	tibufsize		32874	0					
ANR	33260	PrimaryExpression	1		32874	1					
ANR	33261	ExpressionStatement		412:21:10300:10300	32874	3	True				
ANR	33262	ExpressionStatement	lines_per_buf = tibufsize / maxlen	413:2:10304:10338	32874	23	True				
ANR	33263	AssignmentExpression	lines_per_buf = tibufsize / maxlen		32874	0		=			
ANR	33264	Identifier	lines_per_buf		32874	0					
ANR	33265	MultiplicativeExpression	tibufsize / maxlen		32874	1		/			
ANR	33266	Identifier	tibufsize		32874	0					
ANR	33267	Identifier	maxlen		32874	1					
ANR	33268	ExpressionStatement	tireclen = maxlen	414:2:10342:10359	32874	24	True				
ANR	33269	AssignmentExpression	tireclen = maxlen		32874	0		=			
ANR	33270	Identifier	tireclen		32874	0					
ANR	33271	Identifier	maxlen		32874	1					
ANR	33272	ExpressionStatement	tibuf [ 0 ] = xmalloc ( 2 * tibufsize )	415:2:10363:10397	32874	25	True				
ANR	33273	AssignmentExpression	tibuf [ 0 ] = xmalloc ( 2 * tibufsize )		32874	0		=			
ANR	33274	ArrayIndexing	tibuf [ 0 ]		32874	0					
ANR	33275	Identifier	tibuf		32874	0					
ANR	33276	PrimaryExpression	0		32874	1					
ANR	33277	CallExpression	xmalloc ( 2 * tibufsize )		32874	1					
ANR	33278	Callee	xmalloc		32874	0					
ANR	33279	Identifier	xmalloc		32874	0					
ANR	33280	ArgumentList	2 * tibufsize		32874	1					
ANR	33281	Argument	2 * tibufsize		32874	0					
ANR	33282	MultiplicativeExpression	2 * tibufsize		32874	0		*			
ANR	33283	PrimaryExpression	2		32874	0					
ANR	33284	Identifier	tibufsize		32874	1					
ANR	33285	ExpressionStatement	tibuf [ 1 ] = tibuf [ 0 ] + tibufsize	416:2:10401:10432	32874	26	True				
ANR	33286	AssignmentExpression	tibuf [ 1 ] = tibuf [ 0 ] + tibufsize		32874	0		=			
ANR	33287	ArrayIndexing	tibuf [ 1 ]		32874	0					
ANR	33288	Identifier	tibuf		32874	0					
ANR	33289	PrimaryExpression	1		32874	1					
ANR	33290	AdditiveExpression	tibuf [ 0 ] + tibufsize		32874	1		+			
ANR	33291	ArrayIndexing	tibuf [ 0 ]		32874	0					
ANR	33292	Identifier	tibuf		32874	0					
ANR	33293	PrimaryExpression	0		32874	1					
ANR	33294	Identifier	tibufsize		32874	1					
ANR	33295	ForStatement	for ( line = 1 ; ; line ++ )		32874	27					
ANR	33296	ForInit	line = 1 ;	418:7:10442:10450	32874	0	True				
ANR	33297	AssignmentExpression	line = 1		32874	0		=			
ANR	33298	Identifier	line		32874	0					
ANR	33299	PrimaryExpression	1		32874	1					
ANR	33300	PostIncDecOperationExpression	line ++	418:19:10454:10459	32874	1	True				
ANR	33301	Identifier	line		32874	0					
ANR	33302	IncDec	++		32874	1					
ANR	33303	CompoundStatement		80:6:1864:1882	32874	2					
ANR	33304	IdentifierDeclStatement	char * p = tibuf [ 0 ] + maxlen * ( line % lines_per_buf ) ;	420:6:10474:10526	32874	0	True				
ANR	33305	IdentifierDecl	* p = tibuf [ 0 ] + maxlen * ( line % lines_per_buf )		32874	0					
ANR	33306	IdentifierDeclType	char *		32874	0					
ANR	33307	Identifier	p		32874	1					
ANR	33308	AssignmentExpression	* p = tibuf [ 0 ] + maxlen * ( line % lines_per_buf )		32874	2		=			
ANR	33309	Identifier	p		32874	0					
ANR	33310	AdditiveExpression	tibuf [ 0 ] + maxlen * ( line % lines_per_buf )		32874	1		+			
ANR	33311	ArrayIndexing	tibuf [ 0 ]		32874	0					
ANR	33312	Identifier	tibuf		32874	0					
ANR	33313	PrimaryExpression	0		32874	1					
ANR	33314	MultiplicativeExpression	maxlen * ( line % lines_per_buf )		32874	1		*			
ANR	33315	Identifier	maxlen		32874	0					
ANR	33316	MultiplicativeExpression	line % lines_per_buf		32874	1		%			
ANR	33317	Identifier	line		32874	0					
ANR	33318	Identifier	lines_per_buf		32874	1					
ANR	33319	IdentifierDeclStatement	char const * p0 = p ;	421:6:10534:10552	32874	1	True				
ANR	33320	IdentifierDecl	* p0 = p		32874	0					
ANR	33321	IdentifierDeclType	char const *		32874	0					
ANR	33322	Identifier	p0		32874	1					
ANR	33323	AssignmentExpression	* p0 = p		32874	2		=			
ANR	33324	Identifier	p		32874	0					
ANR	33325	Identifier	p		32874	1					
ANR	33326	IfStatement	if ( ! ( line % lines_per_buf ) )		32874	2					
ANR	33327	Condition	! ( line % lines_per_buf )	422:10:10564:10587	32874	0	True				
ANR	33328	UnaryOperationExpression	! ( line % lines_per_buf )		32874	0					
ANR	33329	UnaryOperator	!		32874	0					
ANR	33330	MultiplicativeExpression	line % lines_per_buf		32874	1		%			
ANR	33331	Identifier	line		32874	0					
ANR	33332	Identifier	lines_per_buf		32874	1					
ANR	33333	IfStatement	"if ( write ( tifd , tibuf [ 0 ] , tibufsize ) != tibufsize )"		32874	1					
ANR	33334	Condition	"write ( tifd , tibuf [ 0 ] , tibufsize ) != tibufsize"	423:5:10611:10656	32874	0	True				
ANR	33335	EqualityExpression	"write ( tifd , tibuf [ 0 ] , tibufsize ) != tibufsize"		32874	0		!=			
ANR	33336	CallExpression	"write ( tifd , tibuf [ 0 ] , tibufsize )"		32874	0					
ANR	33337	Callee	write		32874	0					
ANR	33338	Identifier	write		32874	0					
ANR	33339	ArgumentList	tifd		32874	1					
ANR	33340	Argument	tifd		32874	0					
ANR	33341	Identifier	tifd		32874	0					
ANR	33342	Argument	tibuf [ 0 ]		32874	1					
ANR	33343	ArrayIndexing	tibuf [ 0 ]		32874	0					
ANR	33344	Identifier	tibuf		32874	0					
ANR	33345	PrimaryExpression	0		32874	1					
ANR	33346	Argument	tibufsize		32874	2					
ANR	33347	Identifier	tibufsize		32874	0					
ANR	33348	Identifier	tibufsize		32874	1					
ANR	33349	ExpressionStatement	write_fatal ( )	424:3:10662:10676	32874	1	True				
ANR	33350	CallExpression	write_fatal ( )		32874	0					
ANR	33351	Callee	write_fatal		32874	0					
ANR	33352	Identifier	write_fatal		32874	0					
ANR	33353	ArgumentList			32874	1					
ANR	33354	IfStatement	if ( ( c = getc ( ifp ) ) == EOF )		32874	3					
ANR	33355	Condition	( c = getc ( ifp ) ) == EOF	425:10:10688:10710	32874	0	True				
ANR	33356	EqualityExpression	( c = getc ( ifp ) ) == EOF		32874	0		==			
ANR	33357	AssignmentExpression	c = getc ( ifp )		32874	0		=			
ANR	33358	Identifier	c		32874	0					
ANR	33359	CallExpression	getc ( ifp )		32874	1					
ANR	33360	Callee	getc		32874	0					
ANR	33361	Identifier	getc		32874	0					
ANR	33362	ArgumentList	ifp		32874	1					
ANR	33363	Argument	ifp		32874	0					
ANR	33364	Identifier	ifp		32874	0					
ANR	33365	Identifier	EOF		32874	1					
ANR	33366	BreakStatement	break ;	426:1:10714:10719	32874	1	True				
ANR	33367	ForStatement	for ( ; ; )		32874	4					
ANR	33368	CompoundStatement		88:1:2068:2068	32874	0					
ANR	33369	ExpressionStatement	* p ++ = c	430:3:10743:10751	32874	0	True				
ANR	33370	AssignmentExpression	* p ++ = c		32874	0		=			
ANR	33371	UnaryOperationExpression	* p ++		32874	0					
ANR	33372	UnaryOperator	*		32874	0					
ANR	33373	PostIncDecOperationExpression	p ++		32874	1					
ANR	33374	Identifier	p		32874	0					
ANR	33375	IncDec	++		32874	1					
ANR	33376	Identifier	c		32874	1					
ANR	33377	IfStatement	if ( c == '\\n' )		32874	1					
ANR	33378	Condition	c == '\\n'	431:7:10760:10768	32874	0	True				
ANR	33379	EqualityExpression	c == '\\n'		32874	0		==			
ANR	33380	Identifier	c		32874	0					
ANR	33381	PrimaryExpression	'\\n'		32874	1					
ANR	33382	CompoundStatement		91:5:2106:2106	32874	1					
ANR	33383	ExpressionStatement	last_line_size = p - p0	433:7:10785:10808	32874	0	True				
ANR	33384	AssignmentExpression	last_line_size = p - p0		32874	0		=			
ANR	33385	Identifier	last_line_size		32874	0					
ANR	33386	AdditiveExpression	p - p0		32874	1		-			
ANR	33387	Identifier	p		32874	0					
ANR	33388	Identifier	p0		32874	1					
ANR	33389	BreakStatement	break ;	434:7:10817:10822	32874	1	True				
ANR	33390	IfStatement	if ( ( c = getc ( ifp ) ) == EOF )		32874	2					
ANR	33391	Condition	( c = getc ( ifp ) ) == EOF	437:7:10839:10861	32874	0	True				
ANR	33392	EqualityExpression	( c = getc ( ifp ) ) == EOF		32874	0		==			
ANR	33393	AssignmentExpression	c = getc ( ifp )		32874	0		=			
ANR	33394	Identifier	c		32874	0					
ANR	33395	CallExpression	getc ( ifp )		32874	1					
ANR	33396	Callee	getc		32874	0					
ANR	33397	Identifier	getc		32874	0					
ANR	33398	ArgumentList	ifp		32874	1					
ANR	33399	Argument	ifp		32874	0					
ANR	33400	Identifier	ifp		32874	0					
ANR	33401	Identifier	EOF		32874	1					
ANR	33402	CompoundStatement		97:5:2199:2199	32874	1					
ANR	33403	ExpressionStatement	last_line_size = p - p0	439:7:10878:10901	32874	0	True				
ANR	33404	AssignmentExpression	last_line_size = p - p0		32874	0		=			
ANR	33405	Identifier	last_line_size		32874	0					
ANR	33406	AdditiveExpression	p - p0		32874	1		-			
ANR	33407	Identifier	p		32874	0					
ANR	33408	Identifier	p0		32874	1					
ANR	33409	ExpressionStatement	line ++	440:7:10910:10916	32874	1	True				
ANR	33410	PostIncDecOperationExpression	line ++		32874	0					
ANR	33411	Identifier	line		32874	0					
ANR	33412	IncDec	++		32874	1					
ANR	33413	GotoStatement	goto EOF_reached ;	441:7:10925:10941	32874	2	True				
ANR	33414	Identifier	EOF_reached		32874	0					
ANR	33415	Label	EOF_reached :	445:1:10960:10971	32874	28	True				
ANR	33416	Identifier	EOF_reached		32874	0					
ANR	33417	IfStatement	if ( ferror ( ifp ) || fclose ( ifp ) != 0 )		32874	29					
ANR	33418	Condition	ferror ( ifp ) || fclose ( ifp ) != 0	446:6:10979:11013	32874	0	True				
ANR	33419	OrExpression	ferror ( ifp ) || fclose ( ifp ) != 0		32874	0		||			
ANR	33420	CallExpression	ferror ( ifp )		32874	0					
ANR	33421	Callee	ferror		32874	0					
ANR	33422	Identifier	ferror		32874	0					
ANR	33423	ArgumentList	ifp		32874	1					
ANR	33424	Argument	ifp		32874	0					
ANR	33425	Identifier	ifp		32874	0					
ANR	33426	EqualityExpression	fclose ( ifp ) != 0		32874	1		!=			
ANR	33427	CallExpression	fclose ( ifp )		32874	0					
ANR	33428	Callee	fclose		32874	0					
ANR	33429	Identifier	fclose		32874	0					
ANR	33430	ArgumentList	ifp		32874	1					
ANR	33431	Argument	ifp		32874	0					
ANR	33432	Identifier	ifp		32874	0					
ANR	33433	PrimaryExpression	0		32874	1					
ANR	33434	ExpressionStatement	read_fatal ( )	447:4:11020:11033	32874	1	True				
ANR	33435	CallExpression	read_fatal ( )		32874	0					
ANR	33436	Callee	read_fatal		32874	0					
ANR	33437	Identifier	read_fatal		32874	0					
ANR	33438	ArgumentList			32874	1					
ANR	33439	IfStatement	if ( line % lines_per_buf != 0 )		32874	30					
ANR	33440	Condition	line % lines_per_buf != 0	449:6:11042:11068	32874	0	True				
ANR	33441	EqualityExpression	line % lines_per_buf != 0		32874	0		!=			
ANR	33442	MultiplicativeExpression	line % lines_per_buf		32874	0		%			
ANR	33443	Identifier	line		32874	0					
ANR	33444	Identifier	lines_per_buf		32874	1					
ANR	33445	PrimaryExpression	0		32874	1					
ANR	33446	IfStatement	"if ( write ( tifd , tibuf [ 0 ] , tibufsize ) != tibufsize )"		32874	1					
ANR	33447	Condition	"write ( tifd , tibuf [ 0 ] , tibufsize ) != tibufsize"	450:8:11079:11124	32874	0	True				
ANR	33448	EqualityExpression	"write ( tifd , tibuf [ 0 ] , tibufsize ) != tibufsize"		32874	0		!=			
ANR	33449	CallExpression	"write ( tifd , tibuf [ 0 ] , tibufsize )"		32874	0					
ANR	33450	Callee	write		32874	0					
ANR	33451	Identifier	write		32874	0					
ANR	33452	ArgumentList	tifd		32874	1					
ANR	33453	Argument	tifd		32874	0					
ANR	33454	Identifier	tifd		32874	0					
ANR	33455	Argument	tibuf [ 0 ]		32874	1					
ANR	33456	ArrayIndexing	tibuf [ 0 ]		32874	0					
ANR	33457	Identifier	tibuf		32874	0					
ANR	33458	PrimaryExpression	0		32874	1					
ANR	33459	Argument	tibufsize		32874	2					
ANR	33460	Identifier	tibufsize		32874	0					
ANR	33461	Identifier	tibufsize		32874	1					
ANR	33462	ExpressionStatement	write_fatal ( )	451:6:11133:11147	32874	1	True				
ANR	33463	CallExpression	write_fatal ( )		32874	0					
ANR	33464	Callee	write_fatal		32874	0					
ANR	33465	Identifier	write_fatal		32874	0					
ANR	33466	ArgumentList			32874	1					
ANR	33467	ExpressionStatement	input_lines = line - 1	452:2:11151:11173	32874	31	True				
ANR	33468	AssignmentExpression	input_lines = line - 1		32874	0		=			
ANR	33469	Identifier	input_lines		32874	0					
ANR	33470	AdditiveExpression	line - 1		32874	1		-			
ANR	33471	Identifier	line		32874	0					
ANR	33472	PrimaryExpression	1		32874	1					
ANR	33473	ReturnType	static void		32874	1					
ANR	33474	Identifier	plan_b		32874	2					
ANR	33475	ParameterList	char const * filename		32874	3					
ANR	33476	Parameter	char const * filename	341:8:8647:8666	32874	0	True				
ANR	33477	ParameterType	char const *		32874	0					
ANR	33478	Identifier	filename		32874	1					
ANR	33479	CFGEntryNode	ENTRY		32874		True				
ANR	33480	CFGExitNode	EXIT		32874		True				
ANR	33481	InfiniteForNode	true		32874		True				
ANR	33482	InfiniteForNode	true		32874		True				
ANR	33483	Symbol	TMPINNAME_needs_removal		32874						
ANR	33484	Symbol	input_lines		32874						
ANR	33485	Symbol	tireclen		32874						
ANR	33486	Symbol	instat		32874						
ANR	33487	Symbol	strlen		32874						
ANR	33488	Symbol	len		32874						
ANR	33489	Symbol	xmalloc		32874						
ANR	33490	Symbol	* tibuf		32874						
ANR	33491	Symbol	write		32874						
ANR	33492	Symbol	rev		32874						
ANR	33493	Symbol	NULL		32874						
ANR	33494	Symbol	tibufsize		32874						
ANR	33495	Symbol	NULL_DEVICE		32874						
ANR	33496	Symbol	lines_per_buf		32874						
ANR	33497	Symbol	& TMPINNAME		32874						
ANR	33498	Symbol	TIBUFSIZE_MINIMUM		32874						
ANR	33499	Symbol	safe_open		32874						
ANR	33500	Symbol	revision		32874						
ANR	33501	Symbol	ferror		32874						
ANR	33502	Symbol	filename		32874						
ANR	33503	Symbol	true		32874						
ANR	33504	Symbol	binary_transput		32874						
ANR	33505	Symbol	instat . st_size		32874						
ANR	33506	Symbol	maxlen		32874						
ANR	33507	Symbol	p0		32874						
ANR	33508	Symbol	quotearg		32874						
ANR	33509	Symbol	O_BINARY		32874						
ANR	33510	Symbol	tifd		32874						
ANR	33511	Symbol	TMPINNAME		32874						
ANR	33512	Symbol	line		32874						
ANR	33513	Symbol	make_tempfile		32874						
ANR	33514	Symbol	fdopen		32874						
ANR	33515	Symbol	* rev		32874						
ANR	33516	Symbol	tibuf		32874						
ANR	33517	Symbol	create_file		32874						
ANR	33518	Symbol	O_RDWR		32874						
ANR	33519	Symbol	S_IRUSR		32874						
ANR	33520	Symbol	last_line_size		32874						
ANR	33521	Symbol	found_revision		32874						
ANR	33522	Symbol	revlen		32874						
ANR	33523	Symbol	EOF		32874						
ANR	33524	Symbol	SEEK_SET		32874						
ANR	33525	Symbol	c		32874						
ANR	33526	Symbol	ifd		32874						
ANR	33527	Symbol	fclose		32874						
ANR	33528	Symbol	* p ++		32874						
ANR	33529	Symbol	i		32874						
ANR	33530	Symbol	p		32874						
ANR	33531	Symbol	ifp		32874						
ANR	33532	Symbol	O_RDONLY		32874						
ANR	33533	Symbol	* i		32874						
ANR	33534	Symbol	S_IWUSR		32874						
ANR	33535	Symbol	ISSPACE		32874						
ANR	33536	Symbol	getc		32874						
ANR	33537	Function	ifetch	458:0:11271:12119							
ANR	33538	FunctionDef	"ifetch (lin line , bool whichbuf , size_t * psize)"		33537	0					
ANR	33539	CompoundStatement		460:0:11332:12119	33537	0					
ANR	33540	IdentifierDeclStatement	char const * q ;	461:4:11338:11351	33537	0	True				
ANR	33541	IdentifierDecl	* q		33537	0					
ANR	33542	IdentifierDeclType	char const *		33537	0					
ANR	33543	Identifier	q		33537	1					
ANR	33544	IdentifierDeclStatement	char const * p ;	462:4:11357:11370	33537	1	True				
ANR	33545	IdentifierDecl	* p		33537	0					
ANR	33546	IdentifierDeclType	char const *		33537	0					
ANR	33547	Identifier	p		33537	1					
ANR	33548	IfStatement	if ( line < 1 || line > input_lines )		33537	2					
ANR	33549	Condition	line < 1 || line > input_lines	464:8:11381:11410	33537	0	True				
ANR	33550	OrExpression	line < 1 || line > input_lines		33537	0		||			
ANR	33551	RelationalExpression	line < 1		33537	0		<			
ANR	33552	Identifier	line		33537	0					
ANR	33553	PrimaryExpression	1		33537	1					
ANR	33554	RelationalExpression	line > input_lines		33537	1		>			
ANR	33555	Identifier	line		33537	0					
ANR	33556	Identifier	input_lines		33537	1					
ANR	33557	CompoundStatement		5:40:80:80	33537	1					
ANR	33558	ExpressionStatement	* psize = 0	465:1:11416:11426	33537	0	True				
ANR	33559	AssignmentExpression	* psize = 0		33537	0		=			
ANR	33560	UnaryOperationExpression	* psize		33537	0					
ANR	33561	UnaryOperator	*		33537	0					
ANR	33562	Identifier	psize		33537	1					
ANR	33563	PrimaryExpression	0		33537	1					
ANR	33564	ReturnStatement	"return """" ;"	466:1:11429:11438	33537	1	True				
ANR	33565	PrimaryExpression	""""""		33537	0					
ANR	33566	IfStatement	if ( using_plan_a )		33537	3					
ANR	33567	Condition	using_plan_a	468:8:11454:11465	33537	0	True				
ANR	33568	Identifier	using_plan_a		33537	0					
ANR	33569	CompoundStatement		9:22:135:135	33537	1					
ANR	33570	ExpressionStatement	p = i_ptr [ line ]	469:1:11471:11486	33537	0	True				
ANR	33571	AssignmentExpression	p = i_ptr [ line ]		33537	0		=			
ANR	33572	Identifier	p		33537	0					
ANR	33573	ArrayIndexing	i_ptr [ line ]		33537	1					
ANR	33574	Identifier	i_ptr		33537	0					
ANR	33575	Identifier	line		33537	1					
ANR	33576	ExpressionStatement	* psize = i_ptr [ line + 1 ] - p	470:1:11489:11517	33537	1	True				
ANR	33577	AssignmentExpression	* psize = i_ptr [ line + 1 ] - p		33537	0		=			
ANR	33578	UnaryOperationExpression	* psize		33537	0					
ANR	33579	UnaryOperator	*		33537	0					
ANR	33580	Identifier	psize		33537	1					
ANR	33581	AdditiveExpression	i_ptr [ line + 1 ] - p		33537	1		-			
ANR	33582	ArrayIndexing	i_ptr [ line + 1 ]		33537	0					
ANR	33583	Identifier	i_ptr		33537	0					
ANR	33584	AdditiveExpression	line + 1		33537	1		+			
ANR	33585	Identifier	line		33537	0					
ANR	33586	PrimaryExpression	1		33537	1					
ANR	33587	Identifier	p		33537	1					
ANR	33588	ReturnStatement	return p ;	471:1:11520:11528	33537	2	True				
ANR	33589	Identifier	p		33537	0					
ANR	33590	ElseStatement	else		33537	0					
ANR	33591	CompoundStatement		15:1:248:277	33537	0					
ANR	33592	IdentifierDeclStatement	lin offline = line % lines_per_buf ;	473:1:11544:11578	33537	0	True				
ANR	33593	IdentifierDecl	offline = line % lines_per_buf		33537	0					
ANR	33594	IdentifierDeclType	lin		33537	0					
ANR	33595	Identifier	offline		33537	1					
ANR	33596	AssignmentExpression	offline = line % lines_per_buf		33537	2		=			
ANR	33597	Identifier	offline		33537	0					
ANR	33598	MultiplicativeExpression	line % lines_per_buf		33537	1		%			
ANR	33599	Identifier	line		33537	0					
ANR	33600	Identifier	lines_per_buf		33537	1					
ANR	33601	IdentifierDeclStatement	lin baseline = line - offline ;	474:1:11581:11610	33537	1	True				
ANR	33602	IdentifierDecl	baseline = line - offline		33537	0					
ANR	33603	IdentifierDeclType	lin		33537	0					
ANR	33604	Identifier	baseline		33537	1					
ANR	33605	AssignmentExpression	baseline = line - offline		33537	2		=			
ANR	33606	Identifier	baseline		33537	0					
ANR	33607	AdditiveExpression	line - offline		33537	1		-			
ANR	33608	Identifier	line		33537	0					
ANR	33609	Identifier	offline		33537	1					
ANR	33610	IfStatement	if ( tiline [ 0 ] == baseline )		33537	2					
ANR	33611	Condition	tiline [ 0 ] == baseline	476:5:11618:11638	33537	0	True				
ANR	33612	EqualityExpression	tiline [ 0 ] == baseline		33537	0		==			
ANR	33613	ArrayIndexing	tiline [ 0 ]		33537	0					
ANR	33614	Identifier	tiline		33537	0					
ANR	33615	PrimaryExpression	0		33537	1					
ANR	33616	Identifier	baseline		33537	1					
ANR	33617	ExpressionStatement	whichbuf = false	477:5:11646:11662	33537	1	True				
ANR	33618	AssignmentExpression	whichbuf = false		33537	0		=			
ANR	33619	Identifier	whichbuf		33537	0					
ANR	33620	Identifier	false		33537	1					
ANR	33621	ElseStatement	else		33537	0					
ANR	33622	IfStatement	if ( tiline [ 1 ] == baseline )		33537	0					
ANR	33623	Condition	tiline [ 1 ] == baseline	478:10:11674:11694	33537	0	True				
ANR	33624	EqualityExpression	tiline [ 1 ] == baseline		33537	0		==			
ANR	33625	ArrayIndexing	tiline [ 1 ]		33537	0					
ANR	33626	Identifier	tiline		33537	0					
ANR	33627	PrimaryExpression	1		33537	1					
ANR	33628	Identifier	baseline		33537	1					
ANR	33629	ExpressionStatement	whichbuf = true	479:5:11702:11717	33537	1	True				
ANR	33630	AssignmentExpression	whichbuf = true		33537	0		=			
ANR	33631	Identifier	whichbuf		33537	0					
ANR	33632	Identifier	true		33537	1					
ANR	33633	ElseStatement	else		33537	0					
ANR	33634	CompoundStatement		21:6:392:392	33537	0					
ANR	33635	ExpressionStatement	tiline [ whichbuf ] = baseline	481:5:11732:11759	33537	0	True				
ANR	33636	AssignmentExpression	tiline [ whichbuf ] = baseline		33537	0		=			
ANR	33637	ArrayIndexing	tiline [ whichbuf ]		33537	0					
ANR	33638	Identifier	tiline		33537	0					
ANR	33639	Identifier	whichbuf		33537	1					
ANR	33640	Identifier	baseline		33537	1					
ANR	33641	IfStatement	"if ( ( lseek ( tifd , baseline / lines_per_buf * tibufsize , SEEK_SET ) == - 1 ) || read ( tifd , tibuf [ whichbuf ] , tibufsize ) < 0 )"		33537	1					
ANR	33642	Condition	"( lseek ( tifd , baseline / lines_per_buf * tibufsize , SEEK_SET ) == - 1 ) || read ( tifd , tibuf [ whichbuf ] , tibufsize ) < 0"	482:9:11770:11887	33537	0	True				
ANR	33643	OrExpression	"( lseek ( tifd , baseline / lines_per_buf * tibufsize , SEEK_SET ) == - 1 ) || read ( tifd , tibuf [ whichbuf ] , tibufsize ) < 0"		33537	0		||			
ANR	33644	EqualityExpression	"lseek ( tifd , baseline / lines_per_buf * tibufsize , SEEK_SET ) == - 1"		33537	0		==			
ANR	33645	CallExpression	"lseek ( tifd , baseline / lines_per_buf * tibufsize , SEEK_SET )"		33537	0					
ANR	33646	Callee	lseek		33537	0					
ANR	33647	Identifier	lseek		33537	0					
ANR	33648	ArgumentList	tifd		33537	1					
ANR	33649	Argument	tifd		33537	0					
ANR	33650	Identifier	tifd		33537	0					
ANR	33651	Argument	baseline / lines_per_buf * tibufsize		33537	1					
ANR	33652	MultiplicativeExpression	baseline / lines_per_buf * tibufsize		33537	0		/			
ANR	33653	Identifier	baseline		33537	0					
ANR	33654	MultiplicativeExpression	lines_per_buf * tibufsize		33537	1		*			
ANR	33655	Identifier	lines_per_buf		33537	0					
ANR	33656	Identifier	tibufsize		33537	1					
ANR	33657	Argument	SEEK_SET		33537	2					
ANR	33658	Identifier	SEEK_SET		33537	0					
ANR	33659	UnaryOperationExpression	- 1		33537	1					
ANR	33660	UnaryOperator	-		33537	0					
ANR	33661	PrimaryExpression	1		33537	1					
ANR	33662	RelationalExpression	"read ( tifd , tibuf [ whichbuf ] , tibufsize ) < 0"		33537	1		<			
ANR	33663	CallExpression	"read ( tifd , tibuf [ whichbuf ] , tibufsize )"		33537	0					
ANR	33664	Callee	read		33537	0					
ANR	33665	Identifier	read		33537	0					
ANR	33666	ArgumentList	tifd		33537	1					
ANR	33667	Argument	tifd		33537	0					
ANR	33668	Identifier	tifd		33537	0					
ANR	33669	Argument	tibuf [ whichbuf ]		33537	1					
ANR	33670	ArrayIndexing	tibuf [ whichbuf ]		33537	0					
ANR	33671	Identifier	tibuf		33537	0					
ANR	33672	Identifier	whichbuf		33537	1					
ANR	33673	Argument	tibufsize		33537	2					
ANR	33674	Identifier	tibufsize		33537	0					
ANR	33675	PrimaryExpression	0		33537	1					
ANR	33676	ExpressionStatement	read_fatal ( )	485:7:11897:11910	33537	1	True				
ANR	33677	CallExpression	read_fatal ( )		33537	0					
ANR	33678	Callee	read_fatal		33537	0					
ANR	33679	Identifier	read_fatal		33537	0					
ANR	33680	ArgumentList			33537	1					
ANR	33681	ExpressionStatement	p = tibuf [ whichbuf ] + ( tireclen * offline )	487:1:11916:11956	33537	3	True				
ANR	33682	AssignmentExpression	p = tibuf [ whichbuf ] + ( tireclen * offline )		33537	0		=			
ANR	33683	Identifier	p		33537	0					
ANR	33684	AdditiveExpression	tibuf [ whichbuf ] + ( tireclen * offline )		33537	1		+			
ANR	33685	ArrayIndexing	tibuf [ whichbuf ]		33537	0					
ANR	33686	Identifier	tibuf		33537	0					
ANR	33687	Identifier	whichbuf		33537	1					
ANR	33688	MultiplicativeExpression	tireclen * offline		33537	1		*			
ANR	33689	Identifier	tireclen		33537	0					
ANR	33690	Identifier	offline		33537	1					
ANR	33691	IfStatement	if ( line == input_lines )		33537	4					
ANR	33692	Condition	line == input_lines	488:5:11963:11981	33537	0	True				
ANR	33693	EqualityExpression	line == input_lines		33537	0		==			
ANR	33694	Identifier	line		33537	0					
ANR	33695	Identifier	input_lines		33537	1					
ANR	33696	ExpressionStatement	* psize = last_line_size	489:5:11989:12012	33537	1	True				
ANR	33697	AssignmentExpression	* psize = last_line_size		33537	0		=			
ANR	33698	UnaryOperationExpression	* psize		33537	0					
ANR	33699	UnaryOperator	*		33537	0					
ANR	33700	Identifier	psize		33537	1					
ANR	33701	Identifier	last_line_size		33537	1					
ANR	33702	ElseStatement	else		33537	0					
ANR	33703	CompoundStatement		31:6:687:687	33537	0					
ANR	33704	ForStatement	for ( q = p ; * q ++ != '\\n' ; )		33537	0					
ANR	33705	ForInit	q = p ;	491:10:12032:12037	33537	0	True				
ANR	33706	AssignmentExpression	q = p		33537	0		=			
ANR	33707	Identifier	q		33537	0					
ANR	33708	Identifier	p		33537	1					
ANR	33709	Condition	* q ++ != '\\n'	491:18:12040:12051	33537	1	True				
ANR	33710	EqualityExpression	* q ++ != '\\n'		33537	0		!=			
ANR	33711	UnaryOperationExpression	* q ++		33537	0					
ANR	33712	UnaryOperator	*		33537	0					
ANR	33713	PostIncDecOperationExpression	q ++		33537	1					
ANR	33714	Identifier	q		33537	0					
ANR	33715	IncDec	++		33537	1					
ANR	33716	PrimaryExpression	'\\n'		33537	1					
ANR	33717	ExpressionStatement		492:19:12076:12076	33537	2	True				
ANR	33718	ExpressionStatement	* psize = q - p	493:5:12083:12097	33537	1	True				
ANR	33719	AssignmentExpression	* psize = q - p		33537	0		=			
ANR	33720	UnaryOperationExpression	* psize		33537	0					
ANR	33721	UnaryOperator	*		33537	0					
ANR	33722	Identifier	psize		33537	1					
ANR	33723	AdditiveExpression	q - p		33537	1		-			
ANR	33724	Identifier	q		33537	0					
ANR	33725	Identifier	p		33537	1					
ANR	33726	ReturnStatement	return p ;	495:1:12103:12111	33537	5	True				
ANR	33727	Identifier	p		33537	0					
ANR	33728	ReturnType	char const *		33537	1					
ANR	33729	Identifier	ifetch		33537	2					
ANR	33730	ParameterList	"lin line , bool whichbuf , size_t * psize"		33537	3					
ANR	33731	Parameter	lin line	459:8:11292:11299	33537	0	True				
ANR	33732	ParameterType	lin		33537	0					
ANR	33733	Identifier	line		33537	1					
ANR	33734	Parameter	bool whichbuf	459:18:11302:11314	33537	1	True				
ANR	33735	ParameterType	bool		33537	0					
ANR	33736	Identifier	whichbuf		33537	1					
ANR	33737	Parameter	size_t * psize	459:33:11317:11329	33537	2	True				
ANR	33738	ParameterType	size_t *		33537	0					
ANR	33739	Identifier	psize		33537	1					
ANR	33740	CFGEntryNode	ENTRY		33537		True				
ANR	33741	CFGExitNode	EXIT		33537		True				
ANR	33742	Symbol	input_lines		33537						
ANR	33743	Symbol	lseek		33537						
ANR	33744	Symbol	tiline		33537						
ANR	33745	Symbol	tifd		33537						
ANR	33746	Symbol	line		33537						
ANR	33747	Symbol	tireclen		33537						
ANR	33748	Symbol	* q ++		33537						
ANR	33749	Symbol	* line		33537						
ANR	33750	Symbol	tibuf		33537						
ANR	33751	Symbol	psize		33537						
ANR	33752	Symbol	offline		33537						
ANR	33753	Symbol	last_line_size		33537						
ANR	33754	Symbol	* tibuf		33537						
ANR	33755	Symbol	using_plan_a		33537						
ANR	33756	Symbol	SEEK_SET		33537						
ANR	33757	Symbol	read		33537						
ANR	33758	Symbol	tibufsize		33537						
ANR	33759	Symbol	lines_per_buf		33537						
ANR	33760	Symbol	false		33537						
ANR	33761	Symbol	baseline		33537						
ANR	33762	Symbol	i_ptr		33537						
ANR	33763	Symbol	p		33537						
ANR	33764	Symbol	q		33537						
ANR	33765	Symbol	whichbuf		33537						
ANR	33766	Symbol	* whichbuf		33537						
ANR	33767	Symbol	* i_ptr		33537						
ANR	33768	Symbol	true		33537						
ANR	33769	Symbol	* tiline		33537						
ANR	33770	Symbol	* psize		33537						
