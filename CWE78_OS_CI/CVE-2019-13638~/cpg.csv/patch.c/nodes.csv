command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6071	File	data/converged/CVE-2019-13638~_patch/patch.c								
ANR	6072	DeclStmt									
ANR	6073	Decl							FILE	"FILE * ( char const * , int )"	create_output_file
ANR	6074	DeclStmt									
ANR	6075	Decl							lin	lin ( lin )	locate_hunk
ANR	6076	DeclStmt									
ANR	6077	Decl							bool	bool ( lin )	check_line_endings
ANR	6078	DeclStmt									
ANR	6079	Decl							bool	"bool ( struct outstate * , lin )"	apply_hunk
ANR	6080	DeclStmt									
ANR	6081	Decl							bool	"bool ( lin , lin , lin , lin )"	patch_match
ANR	6082	DeclStmt									
ANR	6083	Decl							bool	"bool ( struct outstate * , struct stat * )"	spew_output
ANR	6084	DeclStmt									
ANR	6085	Decl							int	"int ( char const * , bool , char const * )"	numeric_string
ANR	6086	DeclStmt									
ANR	6087	Decl							void	void ( void )	cleanup
ANR	6088	DeclStmt									
ANR	6089	Decl							void	void ( void )	get_some_switches
ANR	6090	DeclStmt									
ANR	6091	Decl							void	void ( struct outstate * )	init_output
ANR	6092	DeclStmt									
ANR	6093	Decl							FILE	FILE * ( char const * )	open_outfile
ANR	6094	DeclStmt									
ANR	6095	Decl							void	void ( char const * )	init_reject
ANR	6096	DeclStmt									
ANR	6097	Decl							void	void ( void )	reinitialize_almost_everything
ANR	6098	DeclStmt									
ANR	6099	Decl							void	"void ( char const * , bool * )"	remove_if_needed
ANR	6100	DeclStmt									
ANR	6101	Decl							void	"void ( char const * , bool , bool )"	abort_hunk
ANR	6102	DeclStmt									
ANR	6103	Decl							void	"void ( bool , bool )"	abort_hunk_context
ANR	6104	DeclStmt									
ANR	6105	Decl							void	"void ( bool , bool )"	abort_hunk_unified
ANR	6106	DeclStmt									
ANR	6107	Decl							void	"void ( char const * , bool * , const struct stat * , char const * , const struct stat * , mode_t , bool )"	output_file
ANR	6108	DeclStmt									
ANR	6109	Decl							void	void ( void )	init_files_to_delete
ANR	6110	DeclStmt									
ANR	6111	Decl							void	void ( void )	init_files_to_output
ANR	6112	DeclStmt									
ANR	6113	Decl							void	void ( void )	delete_files
ANR	6114	DeclStmt									
ANR	6115	Decl							void	void ( struct stat const * )	output_files
ANR	6116	DeclStmt									
ANR	6117	Decl							bool	bool	merge
ANR	6118	DeclStmt									
ANR	6119	Decl							enum diff	enum diff	reject_format
ANR	6120	DeclStmt									
ANR	6121	Decl							bool	bool	make_backups
ANR	6122	DeclStmt									
ANR	6123	Decl							bool	bool	backup_if_mismatch
ANR	6124	DeclStmt									
ANR	6125	Decl							char const	char const *	version_control
ANR	6126	DeclStmt									
ANR	6127	Decl							char const	char const *	version_control_context
ANR	6128	DeclStmt									
ANR	6129	Decl							bool	bool	remove_empty_files
ANR	6130	DeclStmt									
ANR	6131	Decl							bool	bool	explicit_inname
ANR	6132	ClassDef	<unnamed>	82:7:2681:2746							
ANR	6133	DeclStmt									
ANR	6134	Decl									read_only_behavior
ANR	6135	DeclStmt									
ANR	6136	Decl							bool	bool	reverse_flag_specified
ANR	6137	DeclStmt									
ANR	6138	Decl							char const	char const *	do_defines
ANR	6139	DeclStmt									
ANR	6140	Decl							char const	char const [ ]	if_defined
ANR	6141	DeclStmt									
ANR	6142	Decl							char const	char const [ ]	not_defined
ANR	6143	DeclStmt									
ANR	6144	Decl							char const	char const [ ]	else_defined
ANR	6145	DeclStmt									
ANR	6146	Decl							char const	char const [ ]	end_defined
ANR	6147	DeclStmt									
ANR	6148	Decl							int	int	Argc
ANR	6149	DeclStmt									
ANR	6150	Decl							char	char * *	Argv
ANR	6151	DeclStmt									
ANR	6152	Decl							FILE	FILE *	rejfp
ANR	6153	DeclStmt									
ANR	6154	Decl							char const	char const *	patchname
ANR	6155	DeclStmt									
ANR	6156	Decl							char	char *	rejname
ANR	6157	DeclStmt									
ANR	6158	Decl							char const	char const *	TMPREJNAME
ANR	6159	DeclStmt									
ANR	6160	Decl							bool	bool	TMPREJNAME_needs_removal
ANR	6161	DeclStmt									
ANR	6162	Decl							lin	lin	maxfuzz
ANR	6163	DeclStmt									
ANR	6164	Decl							char	char [ BUFSIZ ]	serrbuf
ANR	6165	Function	main	109:0:3421:18957							
ANR	6166	FunctionDef	"main (int argc , char * * argv)"		6165	0					
ANR	6167	CompoundStatement		111:0:3454:18957	6165	0					
ANR	6168	IdentifierDeclStatement	char const * val ;	112:4:3460:3475	6165	0	True				
ANR	6169	IdentifierDecl	* val		6165	0					
ANR	6170	IdentifierDeclType	char const *		6165	0					
ANR	6171	Identifier	val		6165	1					
ANR	6172	IdentifierDeclStatement	bool somefailed = false ;	113:4:3481:3504	6165	1	True				
ANR	6173	IdentifierDecl	somefailed = false		6165	0					
ANR	6174	IdentifierDeclType	bool		6165	0					
ANR	6175	Identifier	somefailed		6165	1					
ANR	6176	AssignmentExpression	somefailed = false		6165	2		=			
ANR	6177	Identifier	false		6165	0					
ANR	6178	Identifier	false		6165	1					
ANR	6179	IdentifierDeclStatement	struct outstate outstate ;	114:4:3510:3534	6165	2	True				
ANR	6180	IdentifierDecl	outstate		6165	0					
ANR	6181	IdentifierDeclType	struct outstate		6165	0					
ANR	6182	Identifier	outstate		6165	1					
ANR	6183	IdentifierDeclStatement	struct stat tmpoutst ;	115:4:3540:3560	6165	3	True				
ANR	6184	IdentifierDecl	tmpoutst		6165	0					
ANR	6185	IdentifierDeclType	struct stat		6165	0					
ANR	6186	Identifier	tmpoutst		6165	1					
ANR	6187	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	116:4:3566:3603	6165	4	True				
ANR	6188	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		6165	0					
ANR	6189	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		6165	0					
ANR	6190	Identifier	numbuf		6165	1					
ANR	6191	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		6165	2		+			
ANR	6192	Identifier	LINENUM_LENGTH_BOUND		6165	0					
ANR	6193	PrimaryExpression	1		6165	1					
ANR	6194	IdentifierDeclStatement	bool written_to_rejname = false ;	117:4:3609:3640	6165	5	True				
ANR	6195	IdentifierDecl	written_to_rejname = false		6165	0					
ANR	6196	IdentifierDeclType	bool		6165	0					
ANR	6197	Identifier	written_to_rejname		6165	1					
ANR	6198	AssignmentExpression	written_to_rejname = false		6165	2		=			
ANR	6199	Identifier	false		6165	0					
ANR	6200	Identifier	false		6165	1					
ANR	6201	IdentifierDeclStatement	bool skip_reject_file = false ;	118:4:3646:3675	6165	6	True				
ANR	6202	IdentifierDecl	skip_reject_file = false		6165	0					
ANR	6203	IdentifierDeclType	bool		6165	0					
ANR	6204	Identifier	skip_reject_file		6165	1					
ANR	6205	AssignmentExpression	skip_reject_file = false		6165	2		=			
ANR	6206	Identifier	false		6165	0					
ANR	6207	Identifier	false		6165	1					
ANR	6208	IdentifierDeclStatement	bool apply_empty_patch = false ;	119:4:3681:3711	6165	7	True				
ANR	6209	IdentifierDecl	apply_empty_patch = false		6165	0					
ANR	6210	IdentifierDeclType	bool		6165	0					
ANR	6211	Identifier	apply_empty_patch		6165	1					
ANR	6212	AssignmentExpression	apply_empty_patch = false		6165	2		=			
ANR	6213	Identifier	false		6165	0					
ANR	6214	Identifier	false		6165	1					
ANR	6215	IdentifierDeclStatement	mode_t file_type ;	120:4:3717:3733	6165	8	True				
ANR	6216	IdentifierDecl	file_type		6165	0					
ANR	6217	IdentifierDeclType	mode_t		6165	0					
ANR	6218	Identifier	file_type		6165	1					
ANR	6219	IdentifierDeclStatement	int outfd = - 1 ;	121:4:3739:3753	6165	9	True				
ANR	6220	IdentifierDecl	outfd = - 1		6165	0					
ANR	6221	IdentifierDeclType	int		6165	0					
ANR	6222	Identifier	outfd		6165	1					
ANR	6223	AssignmentExpression	outfd = - 1		6165	2		=			
ANR	6224	Identifier	outfd		6165	0					
ANR	6225	UnaryOperationExpression	- 1		6165	1					
ANR	6226	UnaryOperator	-		6165	0					
ANR	6227	PrimaryExpression	1		6165	1					
ANR	6228	IdentifierDeclStatement	bool have_git_diff = false ;	122:4:3759:3785	6165	10	True				
ANR	6229	IdentifierDecl	have_git_diff = false		6165	0					
ANR	6230	IdentifierDeclType	bool		6165	0					
ANR	6231	Identifier	have_git_diff		6165	1					
ANR	6232	AssignmentExpression	have_git_diff = false		6165	2		=			
ANR	6233	Identifier	false		6165	0					
ANR	6234	Identifier	false		6165	1					
ANR	6235	ExpressionStatement	exit_failure = 2	124:4:3792:3808	6165	11	True				
ANR	6236	AssignmentExpression	exit_failure = 2		6165	0		=			
ANR	6237	Identifier	exit_failure		6165	0					
ANR	6238	PrimaryExpression	2		6165	1					
ANR	6239	ExpressionStatement	set_program_name ( argv [ 0 ] )	125:4:3814:3840	6165	12	True				
ANR	6240	CallExpression	set_program_name ( argv [ 0 ] )		6165	0					
ANR	6241	Callee	set_program_name		6165	0					
ANR	6242	Identifier	set_program_name		6165	0					
ANR	6243	ArgumentList	argv [ 0 ]		6165	1					
ANR	6244	Argument	argv [ 0 ]		6165	0					
ANR	6245	ArrayIndexing	argv [ 0 ]		6165	0					
ANR	6246	Identifier	argv		6165	0					
ANR	6247	PrimaryExpression	0		6165	1					
ANR	6248	ExpressionStatement	init_time ( )	126:4:3846:3858	6165	13	True				
ANR	6249	CallExpression	init_time ( )		6165	0					
ANR	6250	Callee	init_time		6165	0					
ANR	6251	Identifier	init_time		6165	0					
ANR	6252	ArgumentList			6165	1					
ANR	6253	ExpressionStatement	"setbuf ( stderr , serrbuf )"	128:4:3865:3888	6165	14	True				
ANR	6254	CallExpression	"setbuf ( stderr , serrbuf )"		6165	0					
ANR	6255	Callee	setbuf		6165	0					
ANR	6256	Identifier	setbuf		6165	0					
ANR	6257	ArgumentList	stderr		6165	1					
ANR	6258	Argument	stderr		6165	0					
ANR	6259	Identifier	stderr		6165	0					
ANR	6260	Argument	serrbuf		6165	1					
ANR	6261	Identifier	serrbuf		6165	0					
ANR	6262	ExpressionStatement	bufsize = 8 * 1024	130:4:3895:3913	6165	15	True				
ANR	6263	AssignmentExpression	bufsize = 8 * 1024		6165	0		=			
ANR	6264	Identifier	bufsize		6165	0					
ANR	6265	MultiplicativeExpression	8 * 1024		6165	1		*			
ANR	6266	PrimaryExpression	8		6165	0					
ANR	6267	PrimaryExpression	1024		6165	1					
ANR	6268	ExpressionStatement	buf = xmalloc ( bufsize )	131:4:3919:3942	6165	16	True				
ANR	6269	AssignmentExpression	buf = xmalloc ( bufsize )		6165	0		=			
ANR	6270	Identifier	buf		6165	0					
ANR	6271	CallExpression	xmalloc ( bufsize )		6165	1					
ANR	6272	Callee	xmalloc		6165	0					
ANR	6273	Identifier	xmalloc		6165	0					
ANR	6274	ArgumentList	bufsize		6165	1					
ANR	6275	Argument	bufsize		6165	0					
ANR	6276	Identifier	bufsize		6165	0					
ANR	6277	ExpressionStatement	strippath = - 1	133:4:3949:3963	6165	17	True				
ANR	6278	AssignmentExpression	strippath = - 1		6165	0		=			
ANR	6279	Identifier	strippath		6165	0					
ANR	6280	UnaryOperationExpression	- 1		6165	1					
ANR	6281	UnaryOperator	-		6165	0					
ANR	6282	PrimaryExpression	1		6165	1					
ANR	6283	ExpressionStatement	"val = getenv ( ""QUOTING_STYLE"" )"	135:4:3970:4000	6165	18	True				
ANR	6284	AssignmentExpression	"val = getenv ( ""QUOTING_STYLE"" )"		6165	0		=			
ANR	6285	Identifier	val		6165	0					
ANR	6286	CallExpression	"getenv ( ""QUOTING_STYLE"" )"		6165	1					
ANR	6287	Callee	getenv		6165	0					
ANR	6288	Identifier	getenv		6165	0					
ANR	6289	ArgumentList	"""QUOTING_STYLE"""		6165	1					
ANR	6290	Argument	"""QUOTING_STYLE"""		6165	0					
ANR	6291	PrimaryExpression	"""QUOTING_STYLE"""		6165	0					
ANR	6292	CompoundStatement		27:6:559:618	6165	19					
ANR	6293	IdentifierDeclStatement	"int i = val ? argmatch ( val , quoting_style_args , 0 , 0 ) : - 1 ;"	137:6:4014:4073	6165	0	True				
ANR	6294	IdentifierDecl	"i = val ? argmatch ( val , quoting_style_args , 0 , 0 ) : - 1"		6165	0					
ANR	6295	IdentifierDeclType	int		6165	0					
ANR	6296	Identifier	i		6165	1					
ANR	6297	AssignmentExpression	"i = val ? argmatch ( val , quoting_style_args , 0 , 0 ) : - 1"		6165	2		=			
ANR	6298	Identifier	i		6165	0					
ANR	6299	ConditionalExpression	"val ? argmatch ( val , quoting_style_args , 0 , 0 ) : - 1"		6165	1					
ANR	6300	Condition	val		6165	0					
ANR	6301	Identifier	val		6165	0					
ANR	6302	CallExpression	"argmatch ( val , quoting_style_args , 0 , 0 )"		6165	1					
ANR	6303	Callee	argmatch		6165	0					
ANR	6304	Identifier	argmatch		6165	0					
ANR	6305	ArgumentList	val		6165	1					
ANR	6306	Argument	val		6165	0					
ANR	6307	Identifier	val		6165	0					
ANR	6308	Argument	quoting_style_args		6165	1					
ANR	6309	Identifier	quoting_style_args		6165	0					
ANR	6310	Argument	0		6165	2					
ANR	6311	PrimaryExpression	0		6165	0					
ANR	6312	Argument	0		6165	3					
ANR	6313	PrimaryExpression	0		6165	0					
ANR	6314	UnaryOperationExpression	- 1		6165	2					
ANR	6315	UnaryOperator	-		6165	0					
ANR	6316	PrimaryExpression	1		6165	1					
ANR	6317	ExpressionStatement	"set_quoting_style ( ( struct quoting_options * ) 0 , i < 0 ? shell_quoting_style : ( enum quoting_style ) i )"	138:6:4081:4187	6165	1	True				
ANR	6318	CallExpression	"set_quoting_style ( ( struct quoting_options * ) 0 , i < 0 ? shell_quoting_style : ( enum quoting_style ) i )"		6165	0					
ANR	6319	Callee	set_quoting_style		6165	0					
ANR	6320	Identifier	set_quoting_style		6165	0					
ANR	6321	ArgumentList	( struct quoting_options * ) 0		6165	1					
ANR	6322	Argument	( struct quoting_options * ) 0		6165	0					
ANR	6323	CastExpression	( struct quoting_options * ) 0		6165	0					
ANR	6324	CastTarget	struct quoting_options *		6165	0					
ANR	6325	PrimaryExpression	0		6165	1					
ANR	6326	Argument	i < 0 ? shell_quoting_style : ( enum quoting_style ) i		6165	1					
ANR	6327	ConditionalExpression	i < 0 ? shell_quoting_style : ( enum quoting_style ) i		6165	0					
ANR	6328	Condition	i < 0		6165	0					
ANR	6329	RelationalExpression	i < 0		6165	0		<			
ANR	6330	Identifier	i		6165	0					
ANR	6331	PrimaryExpression	0		6165	1					
ANR	6332	Identifier	shell_quoting_style		6165	1					
ANR	6333	CastExpression	( enum quoting_style ) i		6165	2					
ANR	6334	CastTarget	enum quoting_style		6165	0					
ANR	6335	Identifier	i		6165	1					
ANR	6336	ExpressionStatement	"posixly_correct = getenv ( ""POSIXLY_CORRECT"" ) != 0"	142:4:4200:4249	6165	20	True				
ANR	6337	AssignmentExpression	"posixly_correct = getenv ( ""POSIXLY_CORRECT"" ) != 0"		6165	0		=			
ANR	6338	Identifier	posixly_correct		6165	0					
ANR	6339	EqualityExpression	"getenv ( ""POSIXLY_CORRECT"" ) != 0"		6165	1		!=			
ANR	6340	CallExpression	"getenv ( ""POSIXLY_CORRECT"" )"		6165	0					
ANR	6341	Callee	getenv		6165	0					
ANR	6342	Identifier	getenv		6165	0					
ANR	6343	ArgumentList	"""POSIXLY_CORRECT"""		6165	1					
ANR	6344	Argument	"""POSIXLY_CORRECT"""		6165	0					
ANR	6345	PrimaryExpression	"""POSIXLY_CORRECT"""		6165	0					
ANR	6346	PrimaryExpression	0		6165	1					
ANR	6347	ExpressionStatement	backup_if_mismatch = ! posixly_correct	143:4:4255:4293	6165	21	True				
ANR	6348	AssignmentExpression	backup_if_mismatch = ! posixly_correct		6165	0		=			
ANR	6349	Identifier	backup_if_mismatch		6165	0					
ANR	6350	UnaryOperationExpression	! posixly_correct		6165	1					
ANR	6351	UnaryOperator	!		6165	0					
ANR	6352	Identifier	posixly_correct		6165	1					
ANR	6353	ExpressionStatement	"patch_get = ( ( val = getenv ( ""PATCH_GET"" ) ) ? numeric_string ( val , true , ""PATCH_GET value"" ) : 0 )"	144:4:4299:4399	6165	22	True				
ANR	6354	AssignmentExpression	"patch_get = ( ( val = getenv ( ""PATCH_GET"" ) ) ? numeric_string ( val , true , ""PATCH_GET value"" ) : 0 )"		6165	0		=			
ANR	6355	Identifier	patch_get		6165	0					
ANR	6356	ConditionalExpression	"( val = getenv ( ""PATCH_GET"" ) ) ? numeric_string ( val , true , ""PATCH_GET value"" ) : 0"		6165	1					
ANR	6357	Condition	"val = getenv ( ""PATCH_GET"" )"		6165	0					
ANR	6358	AssignmentExpression	"val = getenv ( ""PATCH_GET"" )"		6165	0		=			
ANR	6359	Identifier	val		6165	0					
ANR	6360	CallExpression	"getenv ( ""PATCH_GET"" )"		6165	1					
ANR	6361	Callee	getenv		6165	0					
ANR	6362	Identifier	getenv		6165	0					
ANR	6363	ArgumentList	"""PATCH_GET"""		6165	1					
ANR	6364	Argument	"""PATCH_GET"""		6165	0					
ANR	6365	PrimaryExpression	"""PATCH_GET"""		6165	0					
ANR	6366	CallExpression	"numeric_string ( val , true , ""PATCH_GET value"" )"		6165	1					
ANR	6367	Callee	numeric_string		6165	0					
ANR	6368	Identifier	numeric_string		6165	0					
ANR	6369	ArgumentList	val		6165	1					
ANR	6370	Argument	val		6165	0					
ANR	6371	Identifier	val		6165	0					
ANR	6372	Argument	true		6165	1					
ANR	6373	Identifier	true		6165	0					
ANR	6374	Argument	"""PATCH_GET value"""		6165	2					
ANR	6375	PrimaryExpression	"""PATCH_GET value"""		6165	0					
ANR	6376	PrimaryExpression	0		6165	2					
ANR	6377	ExpressionStatement	"val = getenv ( ""SIMPLE_BACKUP_SUFFIX"" )"	148:4:4406:4443	6165	23	True				
ANR	6378	AssignmentExpression	"val = getenv ( ""SIMPLE_BACKUP_SUFFIX"" )"		6165	0		=			
ANR	6379	Identifier	val		6165	0					
ANR	6380	CallExpression	"getenv ( ""SIMPLE_BACKUP_SUFFIX"" )"		6165	1					
ANR	6381	Callee	getenv		6165	0					
ANR	6382	Identifier	getenv		6165	0					
ANR	6383	ArgumentList	"""SIMPLE_BACKUP_SUFFIX"""		6165	1					
ANR	6384	Argument	"""SIMPLE_BACKUP_SUFFIX"""		6165	0					
ANR	6385	PrimaryExpression	"""SIMPLE_BACKUP_SUFFIX"""		6165	0					
ANR	6386	ExpressionStatement	"simple_backup_suffix = val && * val ? val : "".orig"""	149:4:4449:4499	6165	24	True				
ANR	6387	AssignmentExpression	"simple_backup_suffix = val && * val ? val : "".orig"""		6165	0		=			
ANR	6388	Identifier	simple_backup_suffix		6165	0					
ANR	6389	ConditionalExpression	"val && * val ? val : "".orig"""		6165	1					
ANR	6390	Condition	val && * val		6165	0					
ANR	6391	AndExpression	val && * val		6165	0		&&			
ANR	6392	Identifier	val		6165	0					
ANR	6393	UnaryOperationExpression	* val		6165	1					
ANR	6394	UnaryOperator	*		6165	0					
ANR	6395	Identifier	val		6165	1					
ANR	6396	Identifier	val		6165	1					
ANR	6397	PrimaryExpression	""".orig"""		6165	2					
ANR	6398	IfStatement	"if ( ( version_control = getenv ( ""PATCH_VERSION_CONTROL"" ) ) )"		6165	25					
ANR	6399	Condition	"version_control = getenv ( ""PATCH_VERSION_CONTROL"" )"	151:8:4510:4561	6165	0	True				
ANR	6400	AssignmentExpression	"version_control = getenv ( ""PATCH_VERSION_CONTROL"" )"		6165	0		=			
ANR	6401	Identifier	version_control		6165	0					
ANR	6402	CallExpression	"getenv ( ""PATCH_VERSION_CONTROL"" )"		6165	1					
ANR	6403	Callee	getenv		6165	0					
ANR	6404	Identifier	getenv		6165	0					
ANR	6405	ArgumentList	"""PATCH_VERSION_CONTROL"""		6165	1					
ANR	6406	Argument	"""PATCH_VERSION_CONTROL"""		6165	0					
ANR	6407	PrimaryExpression	"""PATCH_VERSION_CONTROL"""		6165	0					
ANR	6408	ExpressionStatement	"version_control_context = ""$PATCH_VERSION_CONTROL"""	152:6:4570:4620	6165	1	True				
ANR	6409	AssignmentExpression	"version_control_context = ""$PATCH_VERSION_CONTROL"""		6165	0		=			
ANR	6410	Identifier	version_control_context		6165	0					
ANR	6411	PrimaryExpression	"""$PATCH_VERSION_CONTROL"""		6165	1					
ANR	6412	ElseStatement	else		6165	0					
ANR	6413	IfStatement	"if ( ( version_control = getenv ( ""VERSION_CONTROL"" ) ) )"		6165	0					
ANR	6414	Condition	"version_control = getenv ( ""VERSION_CONTROL"" )"	153:13:4635:4680	6165	0	True				
ANR	6415	AssignmentExpression	"version_control = getenv ( ""VERSION_CONTROL"" )"		6165	0		=			
ANR	6416	Identifier	version_control		6165	0					
ANR	6417	CallExpression	"getenv ( ""VERSION_CONTROL"" )"		6165	1					
ANR	6418	Callee	getenv		6165	0					
ANR	6419	Identifier	getenv		6165	0					
ANR	6420	ArgumentList	"""VERSION_CONTROL"""		6165	1					
ANR	6421	Argument	"""VERSION_CONTROL"""		6165	0					
ANR	6422	PrimaryExpression	"""VERSION_CONTROL"""		6165	0					
ANR	6423	ExpressionStatement	"version_control_context = ""$VERSION_CONTROL"""	154:6:4689:4733	6165	1	True				
ANR	6424	AssignmentExpression	"version_control_context = ""$VERSION_CONTROL"""		6165	0		=			
ANR	6425	Identifier	version_control_context		6165	0					
ANR	6426	PrimaryExpression	"""$VERSION_CONTROL"""		6165	1					
ANR	6427	ExpressionStatement	init_backup_hash_table ( )	156:4:4740:4765	6165	26	True				
ANR	6428	CallExpression	init_backup_hash_table ( )		6165	0					
ANR	6429	Callee	init_backup_hash_table		6165	0					
ANR	6430	Identifier	init_backup_hash_table		6165	0					
ANR	6431	ArgumentList			6165	1					
ANR	6432	ExpressionStatement	init_files_to_delete ( )	157:4:4771:4794	6165	27	True				
ANR	6433	CallExpression	init_files_to_delete ( )		6165	0					
ANR	6434	Callee	init_files_to_delete		6165	0					
ANR	6435	Identifier	init_files_to_delete		6165	0					
ANR	6436	ArgumentList			6165	1					
ANR	6437	ExpressionStatement	init_files_to_output ( )	158:4:4800:4823	6165	28	True				
ANR	6438	CallExpression	init_files_to_output ( )		6165	0					
ANR	6439	Callee	init_files_to_output		6165	0					
ANR	6440	Identifier	init_files_to_output		6165	0					
ANR	6441	ArgumentList			6165	1					
ANR	6442	ExpressionStatement	Argc = argc	161:4:4855:4866	6165	29	True				
ANR	6443	AssignmentExpression	Argc = argc		6165	0		=			
ANR	6444	Identifier	Argc		6165	0					
ANR	6445	Identifier	argc		6165	1					
ANR	6446	ExpressionStatement	Argv = argv	162:4:4872:4883	6165	30	True				
ANR	6447	AssignmentExpression	Argv = argv		6165	0		=			
ANR	6448	Identifier	Argv		6165	0					
ANR	6449	Identifier	argv		6165	1					
ANR	6450	ExpressionStatement	get_some_switches ( )	163:4:4889:4908	6165	31	True				
ANR	6451	CallExpression	get_some_switches ( )		6165	0					
ANR	6452	Callee	get_some_switches		6165	0					
ANR	6453	Identifier	get_some_switches		6165	0					
ANR	6454	ArgumentList			6165	1					
ANR	6455	IfStatement	if ( set_utc )		6165	32					
ANR	6456	Condition	set_utc	166:8:4987:4993	6165	0	True				
ANR	6457	Identifier	set_utc		6165	0					
ANR	6458	ExpressionStatement	"setenv ( ""TZ"" , ""UTC"" , 1 )"	167:6:5002:5025	6165	1	True				
ANR	6459	CallExpression	"setenv ( ""TZ"" , ""UTC"" , 1 )"		6165	0					
ANR	6460	Callee	setenv		6165	0					
ANR	6461	Identifier	setenv		6165	0					
ANR	6462	ArgumentList	"""TZ"""		6165	1					
ANR	6463	Argument	"""TZ"""		6165	0					
ANR	6464	PrimaryExpression	"""TZ"""		6165	0					
ANR	6465	Argument	"""UTC"""		6165	1					
ANR	6466	PrimaryExpression	"""UTC"""		6165	0					
ANR	6467	Argument	1		6165	2					
ANR	6468	PrimaryExpression	1		6165	0					
ANR	6469	IfStatement	if ( make_backups | backup_if_mismatch )		6165	33					
ANR	6470	Condition	make_backups | backup_if_mismatch	169:8:5036:5068	6165	0	True				
ANR	6471	InclusiveOrExpression	make_backups | backup_if_mismatch		6165	0		|			
ANR	6472	Identifier	make_backups		6165	0					
ANR	6473	Identifier	backup_if_mismatch		6165	1					
ANR	6474	ExpressionStatement	"backup_type = get_version ( version_control_context , version_control )"	170:6:5077:5145	6165	1	True				
ANR	6475	AssignmentExpression	"backup_type = get_version ( version_control_context , version_control )"		6165	0		=			
ANR	6476	Identifier	backup_type		6165	0					
ANR	6477	CallExpression	"get_version ( version_control_context , version_control )"		6165	1					
ANR	6478	Callee	get_version		6165	0					
ANR	6479	Identifier	get_version		6165	0					
ANR	6480	ArgumentList	version_control_context		6165	1					
ANR	6481	Argument	version_control_context		6165	0					
ANR	6482	Identifier	version_control_context		6165	0					
ANR	6483	Argument	version_control		6165	1					
ANR	6484	Identifier	version_control		6165	0					
ANR	6485	ExpressionStatement	init_output ( & outstate )	172:4:5152:5175	6165	34	True				
ANR	6486	CallExpression	init_output ( & outstate )		6165	0					
ANR	6487	Callee	init_output		6165	0					
ANR	6488	Identifier	init_output		6165	0					
ANR	6489	ArgumentList	& outstate		6165	1					
ANR	6490	Argument	& outstate		6165	0					
ANR	6491	UnaryOperationExpression	& outstate		6165	0					
ANR	6492	UnaryOperator	&		6165	0					
ANR	6493	Identifier	outstate		6165	1					
ANR	6494	IfStatement	if ( outfile )		6165	35					
ANR	6495	Condition	outfile	173:8:5185:5191	6165	0	True				
ANR	6496	Identifier	outfile		6165	0					
ANR	6497	ExpressionStatement	outstate . ofp = open_outfile ( outfile )	174:6:5200:5237	6165	1	True				
ANR	6498	AssignmentExpression	outstate . ofp = open_outfile ( outfile )		6165	0		=			
ANR	6499	MemberAccess	outstate . ofp		6165	0					
ANR	6500	Identifier	outstate		6165	0					
ANR	6501	Identifier	ofp		6165	1					
ANR	6502	CallExpression	open_outfile ( outfile )		6165	1					
ANR	6503	Callee	open_outfile		6165	0					
ANR	6504	Identifier	open_outfile		6165	0					
ANR	6505	ArgumentList	outfile		6165	1					
ANR	6506	Argument	outfile		6165	0					
ANR	6507	Identifier	outfile		6165	0					
ANR	6508	ExpressionStatement	set_signals ( false )	177:4:5298:5317	6165	36	True				
ANR	6509	CallExpression	set_signals ( false )		6165	0					
ANR	6510	Callee	set_signals		6165	0					
ANR	6511	Identifier	set_signals		6165	0					
ANR	6512	ArgumentList	false		6165	1					
ANR	6513	Argument	false		6165	0					
ANR	6514	Identifier	false		6165	0					
ANR	6515	IfStatement	if ( inname )		6165	37					
ANR	6516	Condition	inname	182:8:5508:5513	6165	0	True				
ANR	6517	Identifier	inname		6165	0					
ANR	6518	ExpressionStatement	unsafe = true	183:6:5522:5535	6165	1	True				
ANR	6519	AssignmentExpression	unsafe = true		6165	0		=			
ANR	6520	Identifier	unsafe		6165	0					
ANR	6521	Identifier	true		6165	1					
ANR	6522	IfStatement	if ( inname && outfile )		6165	38					
ANR	6523	Condition	inname && outfile	185:8:5546:5562	6165	0	True				
ANR	6524	AndExpression	inname && outfile		6165	0		&&			
ANR	6525	Identifier	inname		6165	0					
ANR	6526	Identifier	outfile		6165	1					
ANR	6527	CompoundStatement		76:6:2116:2116	6165	1					
ANR	6528	ExpressionStatement	apply_empty_patch = true	191:1:5801:5825	6165	0	True				
ANR	6529	AssignmentExpression	apply_empty_patch = true		6165	0		=			
ANR	6530	Identifier	apply_empty_patch		6165	0					
ANR	6531	Identifier	true		6165	1					
ANR	6532	ExpressionStatement	file_type = S_IFREG	192:1:5828:5847	6165	1	True				
ANR	6533	AssignmentExpression	file_type = S_IFREG		6165	0		=			
ANR	6534	Identifier	file_type		6165	0					
ANR	6535	Identifier	S_IFREG		6165	1					
ANR	6536	ExpressionStatement	inerrno = - 1	193:1:5850:5862	6165	2	True				
ANR	6537	AssignmentExpression	inerrno = - 1		6165	0		=			
ANR	6538	Identifier	inerrno		6165	0					
ANR	6539	UnaryOperationExpression	- 1		6165	1					
ANR	6540	UnaryOperator	-		6165	0					
ANR	6541	PrimaryExpression	1		6165	1					
ANR	6542	ForStatement	"for ( open_patch_file ( patchname ) ; there_is_another_patch ( ! ( inname || posixly_correct ) , & file_type ) || apply_empty_patch ; reinitialize_almost_everything ( ) , skip_reject_file = false , apply_empty_patch = false )"		6165	39					
ANR	6543	ForInit	open_patch_file ( patchname ) ;	196:1:5883:5910	6165	0	True				
ANR	6544	CallExpression	open_patch_file ( patchname )		6165	0					
ANR	6545	Callee	open_patch_file		6165	0					
ANR	6546	Identifier	open_patch_file		6165	0					
ANR	6547	ArgumentList	patchname		6165	1					
ANR	6548	Argument	patchname		6165	0					
ANR	6549	Identifier	patchname		6165	0					
ANR	6550	Condition	"there_is_another_patch ( ! ( inname || posixly_correct ) , & file_type ) || apply_empty_patch"	197:1:5913:6002	6165	1	True				
ANR	6551	OrExpression	"there_is_another_patch ( ! ( inname || posixly_correct ) , & file_type ) || apply_empty_patch"		6165	0		||			
ANR	6552	CallExpression	"there_is_another_patch ( ! ( inname || posixly_correct ) , & file_type )"		6165	0					
ANR	6553	Callee	there_is_another_patch		6165	0					
ANR	6554	Identifier	there_is_another_patch		6165	0					
ANR	6555	ArgumentList	! ( inname || posixly_correct )		6165	1					
ANR	6556	Argument	! ( inname || posixly_correct )		6165	0					
ANR	6557	UnaryOperationExpression	! ( inname || posixly_correct )		6165	0					
ANR	6558	UnaryOperator	!		6165	0					
ANR	6559	OrExpression	inname || posixly_correct		6165	1		||			
ANR	6560	Identifier	inname		6165	0					
ANR	6561	Identifier	posixly_correct		6165	1					
ANR	6562	Argument	& file_type		6165	1					
ANR	6563	UnaryOperationExpression	& file_type		6165	0					
ANR	6564	UnaryOperator	&		6165	0					
ANR	6565	Identifier	file_type		6165	1					
ANR	6566	Identifier	apply_empty_patch		6165	1					
ANR	6567	Expression	"reinitialize_almost_everything ( ) , skip_reject_file = false , apply_empty_patch = false"	199:1:6006:6096	6165	2	True				
ANR	6568	CallExpression	reinitialize_almost_everything ( )		6165	0					
ANR	6569	Callee	reinitialize_almost_everything		6165	0					
ANR	6570	Identifier	reinitialize_almost_everything		6165	0					
ANR	6571	ArgumentList			6165	1					
ANR	6572	Expression	"skip_reject_file = false , apply_empty_patch = false"		6165	1					
ANR	6573	AssignmentExpression	skip_reject_file = false		6165	0		=			
ANR	6574	Identifier	skip_reject_file		6165	0					
ANR	6575	Identifier	false		6165	1					
ANR	6576	AssignmentExpression	apply_empty_patch = false		6165	1		=			
ANR	6577	Identifier	apply_empty_patch		6165	0					
ANR	6578	Identifier	false		6165	1					
ANR	6579	CompoundStatement		96:6:2767:2793	6165	3					
ANR	6580	IdentifierDeclStatement	int hunk = 0 ;	203:6:6151:6163	6165	0	True				
ANR	6581	IdentifierDecl	hunk = 0		6165	0					
ANR	6582	IdentifierDeclType	int		6165	0					
ANR	6583	Identifier	hunk		6165	1					
ANR	6584	AssignmentExpression	hunk = 0		6165	2		=			
ANR	6585	Identifier	hunk		6165	0					
ANR	6586	PrimaryExpression	0		6165	1					
ANR	6587	IdentifierDeclStatement	int failed = 0 ;	204:6:6171:6185	6165	1	True				
ANR	6588	IdentifierDecl	failed = 0		6165	0					
ANR	6589	IdentifierDeclType	int		6165	0					
ANR	6590	Identifier	failed		6165	1					
ANR	6591	AssignmentExpression	failed = 0		6165	2		=			
ANR	6592	Identifier	failed		6165	0					
ANR	6593	PrimaryExpression	0		6165	1					
ANR	6594	IdentifierDeclStatement	bool mismatch = false ;	205:6:6193:6214	6165	2	True				
ANR	6595	IdentifierDecl	mismatch = false		6165	0					
ANR	6596	IdentifierDeclType	bool		6165	0					
ANR	6597	Identifier	mismatch		6165	1					
ANR	6598	AssignmentExpression	mismatch = false		6165	2		=			
ANR	6599	Identifier	false		6165	0					
ANR	6600	Identifier	false		6165	1					
ANR	6601	IdentifierDeclStatement	char const * outname = NULL ;	206:6:6222:6248	6165	3	True				
ANR	6602	IdentifierDecl	* outname = NULL		6165	0					
ANR	6603	IdentifierDeclType	char const *		6165	0					
ANR	6604	Identifier	outname		6165	1					
ANR	6605	AssignmentExpression	* outname = NULL		6165	2		=			
ANR	6606	Identifier	NULL		6165	0					
ANR	6607	Identifier	NULL		6165	1					
ANR	6608	IfStatement	if ( skip_rest_of_patch )		6165	4					
ANR	6609	Condition	skip_rest_of_patch	208:10:6261:6278	6165	0	True				
ANR	6610	Identifier	skip_rest_of_patch		6165	0					
ANR	6611	ExpressionStatement	somefailed = true	209:1:6282:6299	6165	1	True				
ANR	6612	AssignmentExpression	somefailed = true		6165	0		=			
ANR	6613	Identifier	somefailed		6165	0					
ANR	6614	Identifier	true		6165	1					
ANR	6615	IfStatement	if ( have_git_diff != pch_git_diff ( ) )		6165	5					
ANR	6616	Condition	have_git_diff != pch_git_diff ( )	211:10:6312:6343	6165	0	True				
ANR	6617	EqualityExpression	have_git_diff != pch_git_diff ( )		6165	0		!=			
ANR	6618	Identifier	have_git_diff		6165	0					
ANR	6619	CallExpression	pch_git_diff ( )		6165	1					
ANR	6620	Callee	pch_git_diff		6165	0					
ANR	6621	Identifier	pch_git_diff		6165	0					
ANR	6622	ArgumentList			6165	1					
ANR	6623	CompoundStatement		102:1:2892:2892	6165	1					
ANR	6624	IfStatement	if ( have_git_diff )		6165	0					
ANR	6625	Condition	have_git_diff	213:7:6356:6368	6165	0	True				
ANR	6626	Identifier	have_git_diff		6165	0					
ANR	6627	CompoundStatement		104:5:2921:2921	6165	1					
ANR	6628	ExpressionStatement	output_files ( NULL )	215:7:6385:6404	6165	0	True				
ANR	6629	CallExpression	output_files ( NULL )		6165	0					
ANR	6630	Callee	output_files		6165	0					
ANR	6631	Identifier	output_files		6165	0					
ANR	6632	ArgumentList	NULL		6165	1					
ANR	6633	Argument	NULL		6165	0					
ANR	6634	Identifier	NULL		6165	0					
ANR	6635	ExpressionStatement	inerrno = - 1	216:7:6413:6425	6165	1	True				
ANR	6636	AssignmentExpression	inerrno = - 1		6165	0		=			
ANR	6637	Identifier	inerrno		6165	0					
ANR	6638	UnaryOperationExpression	- 1		6165	1					
ANR	6639	UnaryOperator	-		6165	0					
ANR	6640	PrimaryExpression	1		6165	1					
ANR	6641	ExpressionStatement	have_git_diff = ! have_git_diff	218:3:6437:6468	6165	1	True				
ANR	6642	AssignmentExpression	have_git_diff = ! have_git_diff		6165	0		=			
ANR	6643	Identifier	have_git_diff		6165	0					
ANR	6644	UnaryOperationExpression	! have_git_diff		6165	1					
ANR	6645	UnaryOperator	!		6165	0					
ANR	6646	Identifier	have_git_diff		6165	1					
ANR	6647	IfStatement	if ( TMPREJNAME_needs_removal )		6165	6					
ANR	6648	Condition	TMPREJNAME_needs_removal	221:10:6484:6507	6165	0	True				
ANR	6649	Identifier	TMPREJNAME_needs_removal		6165	0					
ANR	6650	CompoundStatement		112:1:3056:3056	6165	1					
ANR	6651	IfStatement	if ( rejfp )		6165	0					
ANR	6652	Condition	rejfp	223:7:6520:6524	6165	0	True				
ANR	6653	Identifier	rejfp		6165	0					
ANR	6654	CompoundStatement		114:5:3077:3077	6165	1					
ANR	6655	ExpressionStatement	fclose ( rejfp )	225:7:6541:6555	6165	0	True				
ANR	6656	CallExpression	fclose ( rejfp )		6165	0					
ANR	6657	Callee	fclose		6165	0					
ANR	6658	Identifier	fclose		6165	0					
ANR	6659	ArgumentList	rejfp		6165	1					
ANR	6660	Argument	rejfp		6165	0					
ANR	6661	Identifier	rejfp		6165	0					
ANR	6662	ExpressionStatement	rejfp = NULL	226:7:6564:6576	6165	1	True				
ANR	6663	AssignmentExpression	rejfp = NULL		6165	0		=			
ANR	6664	Identifier	rejfp		6165	0					
ANR	6665	Identifier	NULL		6165	1					
ANR	6666	ExpressionStatement	"remove_if_needed ( TMPREJNAME , & TMPREJNAME_needs_removal )"	228:3:6588:6644	6165	1	True				
ANR	6667	CallExpression	"remove_if_needed ( TMPREJNAME , & TMPREJNAME_needs_removal )"		6165	0					
ANR	6668	Callee	remove_if_needed		6165	0					
ANR	6669	Identifier	remove_if_needed		6165	0					
ANR	6670	ArgumentList	TMPREJNAME		6165	1					
ANR	6671	Argument	TMPREJNAME		6165	0					
ANR	6672	Identifier	TMPREJNAME		6165	0					
ANR	6673	Argument	& TMPREJNAME_needs_removal		6165	1					
ANR	6674	UnaryOperationExpression	& TMPREJNAME_needs_removal		6165	0					
ANR	6675	UnaryOperator	&		6165	0					
ANR	6676	Identifier	TMPREJNAME_needs_removal		6165	1					
ANR	6677	IfStatement	if ( TMPOUTNAME_needs_removal )		6165	7					
ANR	6678	Condition	TMPOUTNAME_needs_removal	230:10:6659:6682	6165	0	True				
ANR	6679	Identifier	TMPOUTNAME_needs_removal		6165	0					
ANR	6680	CompoundStatement		121:8:3238:3238	6165	1					
ANR	6681	IfStatement	if ( outfd != - 1 )		6165	0					
ANR	6682	Condition	outfd != - 1	232:7:6702:6712	6165	0	True				
ANR	6683	EqualityExpression	outfd != - 1		6165	0		!=			
ANR	6684	Identifier	outfd		6165	0					
ANR	6685	UnaryOperationExpression	- 1		6165	1					
ANR	6686	UnaryOperator	-		6165	0					
ANR	6687	PrimaryExpression	1		6165	1					
ANR	6688	CompoundStatement		123:5:3265:3265	6165	1					
ANR	6689	ExpressionStatement	close ( outfd )	234:7:6729:6742	6165	0	True				
ANR	6690	CallExpression	close ( outfd )		6165	0					
ANR	6691	Callee	close		6165	0					
ANR	6692	Identifier	close		6165	0					
ANR	6693	ArgumentList	outfd		6165	1					
ANR	6694	Argument	outfd		6165	0					
ANR	6695	Identifier	outfd		6165	0					
ANR	6696	ExpressionStatement	outfd = - 1	235:7:6751:6761	6165	1	True				
ANR	6697	AssignmentExpression	outfd = - 1		6165	0		=			
ANR	6698	Identifier	outfd		6165	0					
ANR	6699	UnaryOperationExpression	- 1		6165	1					
ANR	6700	UnaryOperator	-		6165	0					
ANR	6701	PrimaryExpression	1		6165	1					
ANR	6702	ExpressionStatement	"remove_if_needed ( TMPOUTNAME , & TMPOUTNAME_needs_removal )"	237:3:6773:6829	6165	1	True				
ANR	6703	CallExpression	"remove_if_needed ( TMPOUTNAME , & TMPOUTNAME_needs_removal )"		6165	0					
ANR	6704	Callee	remove_if_needed		6165	0					
ANR	6705	Identifier	remove_if_needed		6165	0					
ANR	6706	ArgumentList	TMPOUTNAME		6165	1					
ANR	6707	Argument	TMPOUTNAME		6165	0					
ANR	6708	Identifier	TMPOUTNAME		6165	0					
ANR	6709	Argument	& TMPOUTNAME_needs_removal		6165	1					
ANR	6710	UnaryOperationExpression	& TMPOUTNAME_needs_removal		6165	0					
ANR	6711	UnaryOperator	&		6165	0					
ANR	6712	Identifier	TMPOUTNAME_needs_removal		6165	1					
ANR	6713	IfStatement	if ( ! skip_rest_of_patch && ! file_type )		6165	8					
ANR	6714	Condition	! skip_rest_of_patch && ! file_type	240:10:6845:6879	6165	0	True				
ANR	6715	AndExpression	! skip_rest_of_patch && ! file_type		6165	0		&&			
ANR	6716	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	6717	UnaryOperator	!		6165	0					
ANR	6718	Identifier	skip_rest_of_patch		6165	1					
ANR	6719	UnaryOperationExpression	! file_type		6165	1					
ANR	6720	UnaryOperator	!		6165	0					
ANR	6721	Identifier	file_type		6165	1					
ANR	6722	CompoundStatement		131:1:3428:3428	6165	1					
ANR	6723	ExpressionStatement	"say ( ""File %s: can't change file type from 0%o to 0%o.\\n"" , quotearg ( inname ) , ( unsigned int ) ( pch_mode ( reverse ) & S_IFMT ) , ( unsigned int ) ( pch_mode ( ! reverse ) & S_IFMT ) )"	242:3:6888:7083	6165	0	True				
ANR	6724	CallExpression	"say ( ""File %s: can't change file type from 0%o to 0%o.\\n"" , quotearg ( inname ) , ( unsigned int ) ( pch_mode ( reverse ) & S_IFMT ) , ( unsigned int ) ( pch_mode ( ! reverse ) & S_IFMT ) )"		6165	0					
ANR	6725	Callee	say		6165	0					
ANR	6726	Identifier	say		6165	0					
ANR	6727	ArgumentList	"""File %s: can't change file type from 0%o to 0%o.\\n"""		6165	1					
ANR	6728	Argument	"""File %s: can't change file type from 0%o to 0%o.\\n"""		6165	0					
ANR	6729	PrimaryExpression	"""File %s: can't change file type from 0%o to 0%o.\\n"""		6165	0					
ANR	6730	Argument	quotearg ( inname )		6165	1					
ANR	6731	CallExpression	quotearg ( inname )		6165	0					
ANR	6732	Callee	quotearg		6165	0					
ANR	6733	Identifier	quotearg		6165	0					
ANR	6734	ArgumentList	inname		6165	1					
ANR	6735	Argument	inname		6165	0					
ANR	6736	Identifier	inname		6165	0					
ANR	6737	Argument	( unsigned int ) ( pch_mode ( reverse ) & S_IFMT )		6165	2					
ANR	6738	CastExpression	( unsigned int ) ( pch_mode ( reverse ) & S_IFMT )		6165	0					
ANR	6739	CastTarget	unsigned int		6165	0					
ANR	6740	BitAndExpression	pch_mode ( reverse ) & S_IFMT		6165	1		&			
ANR	6741	CallExpression	pch_mode ( reverse )		6165	0					
ANR	6742	Callee	pch_mode		6165	0					
ANR	6743	Identifier	pch_mode		6165	0					
ANR	6744	ArgumentList	reverse		6165	1					
ANR	6745	Argument	reverse		6165	0					
ANR	6746	Identifier	reverse		6165	0					
ANR	6747	Identifier	S_IFMT		6165	1					
ANR	6748	Argument	( unsigned int ) ( pch_mode ( ! reverse ) & S_IFMT )		6165	3					
ANR	6749	CastExpression	( unsigned int ) ( pch_mode ( ! reverse ) & S_IFMT )		6165	0					
ANR	6750	CastTarget	unsigned int		6165	0					
ANR	6751	BitAndExpression	pch_mode ( ! reverse ) & S_IFMT		6165	1		&			
ANR	6752	CallExpression	pch_mode ( ! reverse )		6165	0					
ANR	6753	Callee	pch_mode		6165	0					
ANR	6754	Identifier	pch_mode		6165	0					
ANR	6755	ArgumentList	! reverse		6165	1					
ANR	6756	Argument	! reverse		6165	0					
ANR	6757	UnaryOperationExpression	! reverse		6165	0					
ANR	6758	UnaryOperator	!		6165	0					
ANR	6759	Identifier	reverse		6165	1					
ANR	6760	Identifier	S_IFMT		6165	1					
ANR	6761	ExpressionStatement	skip_rest_of_patch = true	246:3:7088:7113	6165	1	True				
ANR	6762	AssignmentExpression	skip_rest_of_patch = true		6165	0		=			
ANR	6763	Identifier	skip_rest_of_patch		6165	0					
ANR	6764	Identifier	true		6165	1					
ANR	6765	ExpressionStatement	somefailed = true	247:3:7118:7135	6165	2	True				
ANR	6766	AssignmentExpression	somefailed = true		6165	0		=			
ANR	6767	Identifier	somefailed		6165	0					
ANR	6768	Identifier	true		6165	1					
ANR	6769	IfStatement	if ( ! skip_rest_of_patch )		6165	9					
ANR	6770	Condition	! skip_rest_of_patch	250:10:7151:7170	6165	0	True				
ANR	6771	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	6772	UnaryOperator	!		6165	0					
ANR	6773	Identifier	skip_rest_of_patch		6165	1					
ANR	6774	CompoundStatement		141:1:3719:3719	6165	1					
ANR	6775	IfStatement	if ( outfile )		6165	0					
ANR	6776	Condition	outfile	252:7:7183:7189	6165	0	True				
ANR	6777	Identifier	outfile		6165	0					
ANR	6778	ExpressionStatement	outname = outfile	253:5:7197:7214	6165	1	True				
ANR	6779	AssignmentExpression	outname = outfile		6165	0		=			
ANR	6780	Identifier	outname		6165	0					
ANR	6781	Identifier	outfile		6165	1					
ANR	6782	ElseStatement	else		6165	0					
ANR	6783	IfStatement	if ( pch_copy ( ) || pch_rename ( ) )		6165	0					
ANR	6784	Condition	pch_copy ( ) || pch_rename ( )	254:12:7228:7255	6165	0	True				
ANR	6785	OrExpression	pch_copy ( ) || pch_rename ( )		6165	0		||			
ANR	6786	CallExpression	pch_copy ( )		6165	0					
ANR	6787	Callee	pch_copy		6165	0					
ANR	6788	Identifier	pch_copy		6165	0					
ANR	6789	ArgumentList			6165	1					
ANR	6790	CallExpression	pch_rename ( )		6165	1					
ANR	6791	Callee	pch_rename		6165	0					
ANR	6792	Identifier	pch_rename		6165	0					
ANR	6793	ArgumentList			6165	1					
ANR	6794	ExpressionStatement	outname = pch_name ( ! reverse )	255:5:7263:7293	6165	1	True				
ANR	6795	AssignmentExpression	outname = pch_name ( ! reverse )		6165	0		=			
ANR	6796	Identifier	outname		6165	0					
ANR	6797	CallExpression	pch_name ( ! reverse )		6165	1					
ANR	6798	Callee	pch_name		6165	0					
ANR	6799	Identifier	pch_name		6165	0					
ANR	6800	ArgumentList	! reverse		6165	1					
ANR	6801	Argument	! reverse		6165	0					
ANR	6802	UnaryOperationExpression	! reverse		6165	0					
ANR	6803	UnaryOperator	!		6165	0					
ANR	6804	Identifier	reverse		6165	1					
ANR	6805	ElseStatement	else		6165	0					
ANR	6806	ExpressionStatement	outname = inname	257:5:7308:7324	6165	0	True				
ANR	6807	AssignmentExpression	outname = inname		6165	0		=			
ANR	6808	Identifier	outname		6165	0					
ANR	6809	Identifier	inname		6165	1					
ANR	6810	IfStatement	if ( pch_git_diff ( ) && ! skip_rest_of_patch )		6165	10					
ANR	6811	Condition	pch_git_diff ( ) && ! skip_rest_of_patch	260:10:7340:7378	6165	0	True				
ANR	6812	AndExpression	pch_git_diff ( ) && ! skip_rest_of_patch		6165	0		&&			
ANR	6813	CallExpression	pch_git_diff ( )		6165	0					
ANR	6814	Callee	pch_git_diff		6165	0					
ANR	6815	Identifier	pch_git_diff		6165	0					
ANR	6816	ArgumentList			6165	1					
ANR	6817	UnaryOperationExpression	! skip_rest_of_patch		6165	1					
ANR	6818	UnaryOperator	!		6165	0					
ANR	6819	Identifier	skip_rest_of_patch		6165	1					
ANR	6820	CompoundStatement		153:3:3956:3972	6165	1					
ANR	6821	IdentifierDeclStatement	struct stat outstat ;	262:3:7387:7406	6165	0	True				
ANR	6822	IdentifierDecl	outstat		6165	0					
ANR	6823	IdentifierDeclType	struct stat		6165	0					
ANR	6824	Identifier	outstat		6165	1					
ANR	6825	IdentifierDeclStatement	int outerrno = 0 ;	263:3:7411:7427	6165	1	True				
ANR	6826	IdentifierDecl	outerrno = 0		6165	0					
ANR	6827	IdentifierDeclType	int		6165	0					
ANR	6828	Identifier	outerrno		6165	1					
ANR	6829	AssignmentExpression	outerrno = 0		6165	2		=			
ANR	6830	Identifier	outerrno		6165	0					
ANR	6831	PrimaryExpression	0		6165	1					
ANR	6832	IfStatement	"if ( ! strcmp ( inname , outname ) )"		6165	2					
ANR	6833	Condition	"! strcmp ( inname , outname )"	269:7:7605:7630	6165	0	True				
ANR	6834	UnaryOperationExpression	"! strcmp ( inname , outname )"		6165	0					
ANR	6835	UnaryOperator	!		6165	0					
ANR	6836	CallExpression	"strcmp ( inname , outname )"		6165	1					
ANR	6837	Callee	strcmp		6165	0					
ANR	6838	Identifier	strcmp		6165	0					
ANR	6839	ArgumentList	inname		6165	1					
ANR	6840	Argument	inname		6165	0					
ANR	6841	Identifier	inname		6165	0					
ANR	6842	Argument	outname		6165	1					
ANR	6843	Identifier	outname		6165	0					
ANR	6844	CompoundStatement		160:5:4183:4183	6165	1					
ANR	6845	IfStatement	if ( inerrno == - 1 )		6165	0					
ANR	6846	Condition	inerrno == - 1	271:11:7651:7663	6165	0	True				
ANR	6847	EqualityExpression	inerrno == - 1		6165	0		==			
ANR	6848	Identifier	inerrno		6165	0					
ANR	6849	UnaryOperationExpression	- 1		6165	1					
ANR	6850	UnaryOperator	-		6165	0					
ANR	6851	PrimaryExpression	1		6165	1					
ANR	6852	ExpressionStatement	"inerrno = stat_file ( inname , & instat )"	272:2:7668:7705	6165	1	True				
ANR	6853	AssignmentExpression	"inerrno = stat_file ( inname , & instat )"		6165	0		=			
ANR	6854	Identifier	inerrno		6165	0					
ANR	6855	CallExpression	"stat_file ( inname , & instat )"		6165	1					
ANR	6856	Callee	stat_file		6165	0					
ANR	6857	Identifier	stat_file		6165	0					
ANR	6858	ArgumentList	inname		6165	1					
ANR	6859	Argument	inname		6165	0					
ANR	6860	Identifier	inname		6165	0					
ANR	6861	Argument	& instat		6165	1					
ANR	6862	UnaryOperationExpression	& instat		6165	0					
ANR	6863	UnaryOperator	&		6165	0					
ANR	6864	Identifier	instat		6165	1					
ANR	6865	ExpressionStatement	outstat = instat	273:7:7714:7730	6165	1	True				
ANR	6866	AssignmentExpression	outstat = instat		6165	0		=			
ANR	6867	Identifier	outstat		6165	0					
ANR	6868	Identifier	instat		6165	1					
ANR	6869	ExpressionStatement	outerrno = inerrno	274:7:7739:7757	6165	2	True				
ANR	6870	AssignmentExpression	outerrno = inerrno		6165	0		=			
ANR	6871	Identifier	outerrno		6165	0					
ANR	6872	Identifier	inerrno		6165	1					
ANR	6873	ElseStatement	else		6165	0					
ANR	6874	ExpressionStatement	"outerrno = stat_file ( outname , & outstat )"	277:5:7779:7819	6165	0	True				
ANR	6875	AssignmentExpression	"outerrno = stat_file ( outname , & outstat )"		6165	0		=			
ANR	6876	Identifier	outerrno		6165	0					
ANR	6877	CallExpression	"stat_file ( outname , & outstat )"		6165	1					
ANR	6878	Callee	stat_file		6165	0					
ANR	6879	Identifier	stat_file		6165	0					
ANR	6880	ArgumentList	outname		6165	1					
ANR	6881	Argument	outname		6165	0					
ANR	6882	Identifier	outname		6165	0					
ANR	6883	Argument	& outstat		6165	1					
ANR	6884	UnaryOperationExpression	& outstat		6165	0					
ANR	6885	UnaryOperator	&		6165	0					
ANR	6886	Identifier	outstat		6165	1					
ANR	6887	IfStatement	if ( ! outerrno )		6165	3					
ANR	6888	Condition	! outerrno	279:7:7829:7838	6165	0	True				
ANR	6889	UnaryOperationExpression	! outerrno		6165	0					
ANR	6890	UnaryOperator	!		6165	0					
ANR	6891	Identifier	outerrno		6165	1					
ANR	6892	CompoundStatement		170:5:4391:4391	6165	1					
ANR	6893	IfStatement	if ( has_queued_output ( & outstat ) )		6165	0					
ANR	6894	Condition	has_queued_output ( & outstat )	281:11:7859:7886	6165	0	True				
ANR	6895	CallExpression	has_queued_output ( & outstat )		6165	0					
ANR	6896	Callee	has_queued_output		6165	0					
ANR	6897	Identifier	has_queued_output		6165	0					
ANR	6898	ArgumentList	& outstat		6165	1					
ANR	6899	Argument	& outstat		6165	0					
ANR	6900	UnaryOperationExpression	& outstat		6165	0					
ANR	6901	UnaryOperator	&		6165	0					
ANR	6902	Identifier	outstat		6165	1					
ANR	6903	CompoundStatement		172:2:4436:4436	6165	1					
ANR	6904	ExpressionStatement	output_files ( & outstat )	283:4:7897:7920	6165	0	True				
ANR	6905	CallExpression	output_files ( & outstat )		6165	0					
ANR	6906	Callee	output_files		6165	0					
ANR	6907	Identifier	output_files		6165	0					
ANR	6908	ArgumentList	& outstat		6165	1					
ANR	6909	Argument	& outstat		6165	0					
ANR	6910	UnaryOperationExpression	& outstat		6165	0					
ANR	6911	UnaryOperator	&		6165	0					
ANR	6912	Identifier	outstat		6165	1					
ANR	6913	ExpressionStatement	"outerrno = stat_file ( outname , & outstat )"	284:4:7926:7966	6165	1	True				
ANR	6914	AssignmentExpression	"outerrno = stat_file ( outname , & outstat )"		6165	0		=			
ANR	6915	Identifier	outerrno		6165	0					
ANR	6916	CallExpression	"stat_file ( outname , & outstat )"		6165	1					
ANR	6917	Callee	stat_file		6165	0					
ANR	6918	Identifier	stat_file		6165	0					
ANR	6919	ArgumentList	outname		6165	1					
ANR	6920	Argument	outname		6165	0					
ANR	6921	Identifier	outname		6165	0					
ANR	6922	Argument	& outstat		6165	1					
ANR	6923	UnaryOperationExpression	& outstat		6165	0					
ANR	6924	UnaryOperator	&		6165	0					
ANR	6925	Identifier	outstat		6165	1					
ANR	6926	ExpressionStatement	inerrno = - 1	285:4:7972:7984	6165	2	True				
ANR	6927	AssignmentExpression	inerrno = - 1		6165	0		=			
ANR	6928	Identifier	inerrno		6165	0					
ANR	6929	UnaryOperationExpression	- 1		6165	1					
ANR	6930	UnaryOperator	-		6165	0					
ANR	6931	PrimaryExpression	1		6165	1					
ANR	6932	IfStatement	if ( ! outerrno )		6165	1					
ANR	6933	Condition	! outerrno	287:11:8001:8010	6165	0	True				
ANR	6934	UnaryOperationExpression	! outerrno		6165	0					
ANR	6935	UnaryOperator	!		6165	0					
ANR	6936	Identifier	outerrno		6165	1					
ANR	6937	ExpressionStatement	"set_queued_output ( & outstat , true )"	288:2:8015:8049	6165	1	True				
ANR	6938	CallExpression	"set_queued_output ( & outstat , true )"		6165	0					
ANR	6939	Callee	set_queued_output		6165	0					
ANR	6940	Identifier	set_queued_output		6165	0					
ANR	6941	ArgumentList	& outstat		6165	1					
ANR	6942	Argument	& outstat		6165	0					
ANR	6943	UnaryOperationExpression	& outstat		6165	0					
ANR	6944	UnaryOperator	&		6165	0					
ANR	6945	Identifier	outstat		6165	1					
ANR	6946	Argument	true		6165	1					
ANR	6947	Identifier	true		6165	0					
ANR	6948	IfStatement	if ( ! skip_rest_of_patch )		6165	11					
ANR	6949	Condition	! skip_rest_of_patch	292:10:8072:8091	6165	0	True				
ANR	6950	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	6951	UnaryOperator	!		6165	0					
ANR	6952	Identifier	skip_rest_of_patch		6165	1					
ANR	6953	CompoundStatement		183:1:4640:4640	6165	1					
ANR	6954	IfStatement	"if ( ! get_input_file ( inname , outname , file_type ) )"		6165	0					
ANR	6955	Condition	"! get_input_file ( inname , outname , file_type )"	294:7:8104:8148	6165	0	True				
ANR	6956	UnaryOperationExpression	"! get_input_file ( inname , outname , file_type )"		6165	0					
ANR	6957	UnaryOperator	!		6165	0					
ANR	6958	CallExpression	"get_input_file ( inname , outname , file_type )"		6165	1					
ANR	6959	Callee	get_input_file		6165	0					
ANR	6960	Identifier	get_input_file		6165	0					
ANR	6961	ArgumentList	inname		6165	1					
ANR	6962	Argument	inname		6165	0					
ANR	6963	Identifier	inname		6165	0					
ANR	6964	Argument	outname		6165	1					
ANR	6965	Identifier	outname		6165	0					
ANR	6966	Argument	file_type		6165	2					
ANR	6967	Identifier	file_type		6165	0					
ANR	6968	CompoundStatement		185:5:4701:4701	6165	1					
ANR	6969	ExpressionStatement	skip_rest_of_patch = true	296:7:8165:8190	6165	0	True				
ANR	6970	AssignmentExpression	skip_rest_of_patch = true		6165	0		=			
ANR	6971	Identifier	skip_rest_of_patch		6165	0					
ANR	6972	Identifier	true		6165	1					
ANR	6973	ExpressionStatement	somefailed = true	297:7:8199:8216	6165	1	True				
ANR	6974	AssignmentExpression	somefailed = true		6165	0		=			
ANR	6975	Identifier	somefailed		6165	0					
ANR	6976	Identifier	true		6165	1					
ANR	6977	IfStatement	"if ( read_only_behavior != RO_IGNORE && ! inerrno && ! S_ISLNK ( instat . st_mode ) && safe_access ( inname , W_OK ) != 0 )"		6165	12					
ANR	6978	Condition	"read_only_behavior != RO_IGNORE && ! inerrno && ! S_ISLNK ( instat . st_mode ) && safe_access ( inname , W_OK ) != 0"	301:10:8239:8353	6165	0	True				
ANR	6979	AndExpression	"read_only_behavior != RO_IGNORE && ! inerrno && ! S_ISLNK ( instat . st_mode ) && safe_access ( inname , W_OK ) != 0"		6165	0		&&			
ANR	6980	EqualityExpression	read_only_behavior != RO_IGNORE		6165	0		!=			
ANR	6981	Identifier	read_only_behavior		6165	0					
ANR	6982	Identifier	RO_IGNORE		6165	1					
ANR	6983	AndExpression	"! inerrno && ! S_ISLNK ( instat . st_mode ) && safe_access ( inname , W_OK ) != 0"		6165	1		&&			
ANR	6984	UnaryOperationExpression	! inerrno		6165	0					
ANR	6985	UnaryOperator	!		6165	0					
ANR	6986	Identifier	inerrno		6165	1					
ANR	6987	AndExpression	"! S_ISLNK ( instat . st_mode ) && safe_access ( inname , W_OK ) != 0"		6165	1		&&			
ANR	6988	UnaryOperationExpression	! S_ISLNK ( instat . st_mode )		6165	0					
ANR	6989	UnaryOperator	!		6165	0					
ANR	6990	CallExpression	S_ISLNK ( instat . st_mode )		6165	1					
ANR	6991	Callee	S_ISLNK		6165	0					
ANR	6992	Identifier	S_ISLNK		6165	0					
ANR	6993	ArgumentList	instat . st_mode		6165	1					
ANR	6994	Argument	instat . st_mode		6165	0					
ANR	6995	MemberAccess	instat . st_mode		6165	0					
ANR	6996	Identifier	instat		6165	0					
ANR	6997	Identifier	st_mode		6165	1					
ANR	6998	EqualityExpression	"safe_access ( inname , W_OK ) != 0"		6165	1		!=			
ANR	6999	CallExpression	"safe_access ( inname , W_OK )"		6165	0					
ANR	7000	Callee	safe_access		6165	0					
ANR	7001	Identifier	safe_access		6165	0					
ANR	7002	ArgumentList	inname		6165	1					
ANR	7003	Argument	inname		6165	0					
ANR	7004	Identifier	inname		6165	0					
ANR	7005	Argument	W_OK		6165	1					
ANR	7006	Identifier	W_OK		6165	0					
ANR	7007	PrimaryExpression	0		6165	1					
ANR	7008	CompoundStatement		194:1:4902:4902	6165	1					
ANR	7009	ExpressionStatement	"say ( ""File %s is read-only; "" , quotearg ( inname ) )"	305:3:8362:8411	6165	0	True				
ANR	7010	CallExpression	"say ( ""File %s is read-only; "" , quotearg ( inname ) )"		6165	0					
ANR	7011	Callee	say		6165	0					
ANR	7012	Identifier	say		6165	0					
ANR	7013	ArgumentList	"""File %s is read-only; """		6165	1					
ANR	7014	Argument	"""File %s is read-only; """		6165	0					
ANR	7015	PrimaryExpression	"""File %s is read-only; """		6165	0					
ANR	7016	Argument	quotearg ( inname )		6165	1					
ANR	7017	CallExpression	quotearg ( inname )		6165	0					
ANR	7018	Callee	quotearg		6165	0					
ANR	7019	Identifier	quotearg		6165	0					
ANR	7020	ArgumentList	inname		6165	1					
ANR	7021	Argument	inname		6165	0					
ANR	7022	Identifier	inname		6165	0					
ANR	7023	IfStatement	if ( read_only_behavior == RO_WARN )		6165	1					
ANR	7024	Condition	read_only_behavior == RO_WARN	306:7:8420:8448	6165	0	True				
ANR	7025	EqualityExpression	read_only_behavior == RO_WARN		6165	0		==			
ANR	7026	Identifier	read_only_behavior		6165	0					
ANR	7027	Identifier	RO_WARN		6165	1					
ANR	7028	ExpressionStatement	"say ( ""trying to patch anyway\\n"" )"	307:5:8456:8488	6165	1	True				
ANR	7029	CallExpression	"say ( ""trying to patch anyway\\n"" )"		6165	0					
ANR	7030	Callee	say		6165	0					
ANR	7031	Identifier	say		6165	0					
ANR	7032	ArgumentList	"""trying to patch anyway\\n"""		6165	1					
ANR	7033	Argument	"""trying to patch anyway\\n"""		6165	0					
ANR	7034	PrimaryExpression	"""trying to patch anyway\\n"""		6165	0					
ANR	7035	ElseStatement	else		6165	0					
ANR	7036	CompoundStatement		199:5:5048:5048	6165	0					
ANR	7037	ExpressionStatement	"say ( ""refusing to patch\\n"" )"	310:7:8512:8539	6165	0	True				
ANR	7038	CallExpression	"say ( ""refusing to patch\\n"" )"		6165	0					
ANR	7039	Callee	say		6165	0					
ANR	7040	Identifier	say		6165	0					
ANR	7041	ArgumentList	"""refusing to patch\\n"""		6165	1					
ANR	7042	Argument	"""refusing to patch\\n"""		6165	0					
ANR	7043	PrimaryExpression	"""refusing to patch\\n"""		6165	0					
ANR	7044	ExpressionStatement	skip_rest_of_patch = true	311:7:8548:8573	6165	1	True				
ANR	7045	AssignmentExpression	skip_rest_of_patch = true		6165	0		=			
ANR	7046	Identifier	skip_rest_of_patch		6165	0					
ANR	7047	Identifier	true		6165	1					
ANR	7048	ExpressionStatement	somefailed = true	312:7:8582:8599	6165	2	True				
ANR	7049	AssignmentExpression	somefailed = true		6165	0		=			
ANR	7050	Identifier	somefailed		6165	0					
ANR	7051	Identifier	true		6165	1					
ANR	7052	ExpressionStatement	tmpoutst . st_size = - 1	316:6:8618:8639	6165	13	True				
ANR	7053	AssignmentExpression	tmpoutst . st_size = - 1		6165	0		=			
ANR	7054	MemberAccess	tmpoutst . st_size		6165	0					
ANR	7055	Identifier	tmpoutst		6165	0					
ANR	7056	Identifier	st_size		6165	1					
ANR	7057	UnaryOperationExpression	- 1		6165	1					
ANR	7058	UnaryOperator	-		6165	0					
ANR	7059	PrimaryExpression	1		6165	1					
ANR	7060	ExpressionStatement	"outfd = make_tempfile ( & TMPOUTNAME , 'o' , outname , O_WRONLY | binary_transput , instat . st_mode & S_IRWXUGO )"	317:6:8647:8768	6165	14	True				
ANR	7061	AssignmentExpression	"outfd = make_tempfile ( & TMPOUTNAME , 'o' , outname , O_WRONLY | binary_transput , instat . st_mode & S_IRWXUGO )"		6165	0		=			
ANR	7062	Identifier	outfd		6165	0					
ANR	7063	CallExpression	"make_tempfile ( & TMPOUTNAME , 'o' , outname , O_WRONLY | binary_transput , instat . st_mode & S_IRWXUGO )"		6165	1					
ANR	7064	Callee	make_tempfile		6165	0					
ANR	7065	Identifier	make_tempfile		6165	0					
ANR	7066	ArgumentList	& TMPOUTNAME		6165	1					
ANR	7067	Argument	& TMPOUTNAME		6165	0					
ANR	7068	UnaryOperationExpression	& TMPOUTNAME		6165	0					
ANR	7069	UnaryOperator	&		6165	0					
ANR	7070	Identifier	TMPOUTNAME		6165	1					
ANR	7071	Argument	'o'		6165	1					
ANR	7072	PrimaryExpression	'o'		6165	0					
ANR	7073	Argument	outname		6165	2					
ANR	7074	Identifier	outname		6165	0					
ANR	7075	Argument	O_WRONLY | binary_transput		6165	3					
ANR	7076	InclusiveOrExpression	O_WRONLY | binary_transput		6165	0		|			
ANR	7077	Identifier	O_WRONLY		6165	0					
ANR	7078	Identifier	binary_transput		6165	1					
ANR	7079	Argument	instat . st_mode & S_IRWXUGO		6165	4					
ANR	7080	BitAndExpression	instat . st_mode & S_IRWXUGO		6165	0		&			
ANR	7081	MemberAccess	instat . st_mode		6165	0					
ANR	7082	Identifier	instat		6165	0					
ANR	7083	Identifier	st_mode		6165	1					
ANR	7084	Identifier	S_IRWXUGO		6165	1					
ANR	7085	IfStatement	if ( outfd == - 1 )		6165	15					
ANR	7086	Condition	outfd == - 1	320:10:8780:8790	6165	0	True				
ANR	7087	EqualityExpression	outfd == - 1		6165	0		==			
ANR	7088	Identifier	outfd		6165	0					
ANR	7089	UnaryOperationExpression	- 1		6165	1					
ANR	7090	UnaryOperator	-		6165	0					
ANR	7091	PrimaryExpression	1		6165	1					
ANR	7092	CompoundStatement		211:1:5339:5339	6165	1					
ANR	7093	IfStatement	if ( errno == ELOOP || errno == EXDEV )		6165	0					
ANR	7094	Condition	errno == ELOOP || errno == EXDEV	322:7:8803:8834	6165	0	True				
ANR	7095	OrExpression	errno == ELOOP || errno == EXDEV		6165	0		||			
ANR	7096	EqualityExpression	errno == ELOOP		6165	0		==			
ANR	7097	Identifier	errno		6165	0					
ANR	7098	Identifier	ELOOP		6165	1					
ANR	7099	EqualityExpression	errno == EXDEV		6165	1		==			
ANR	7100	Identifier	errno		6165	0					
ANR	7101	Identifier	EXDEV		6165	1					
ANR	7102	CompoundStatement		213:5:5387:5387	6165	1					
ANR	7103	ExpressionStatement	"say ( ""Invalid file name %s -- skipping patch\\n"" , quotearg ( outname ) )"	324:7:8851:8919	6165	0	True				
ANR	7104	CallExpression	"say ( ""Invalid file name %s -- skipping patch\\n"" , quotearg ( outname ) )"		6165	0					
ANR	7105	Callee	say		6165	0					
ANR	7106	Identifier	say		6165	0					
ANR	7107	ArgumentList	"""Invalid file name %s -- skipping patch\\n"""		6165	1					
ANR	7108	Argument	"""Invalid file name %s -- skipping patch\\n"""		6165	0					
ANR	7109	PrimaryExpression	"""Invalid file name %s -- skipping patch\\n"""		6165	0					
ANR	7110	Argument	quotearg ( outname )		6165	1					
ANR	7111	CallExpression	quotearg ( outname )		6165	0					
ANR	7112	Callee	quotearg		6165	0					
ANR	7113	Identifier	quotearg		6165	0					
ANR	7114	ArgumentList	outname		6165	1					
ANR	7115	Argument	outname		6165	0					
ANR	7116	Identifier	outname		6165	0					
ANR	7117	ExpressionStatement	skip_rest_of_patch = true	325:7:8928:8953	6165	1	True				
ANR	7118	AssignmentExpression	skip_rest_of_patch = true		6165	0		=			
ANR	7119	Identifier	skip_rest_of_patch		6165	0					
ANR	7120	Identifier	true		6165	1					
ANR	7121	ExpressionStatement	skip_reject_file = true	326:7:8962:8985	6165	2	True				
ANR	7122	AssignmentExpression	skip_reject_file = true		6165	0		=			
ANR	7123	Identifier	skip_reject_file		6165	0					
ANR	7124	Identifier	true		6165	1					
ANR	7125	ExpressionStatement	somefailed = true	327:7:8994:9011	6165	3	True				
ANR	7126	AssignmentExpression	somefailed = true		6165	0		=			
ANR	7127	Identifier	somefailed		6165	0					
ANR	7128	Identifier	true		6165	1					
ANR	7129	ElseStatement	else		6165	0					
ANR	7130	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , TMPOUTNAME )"	330:5:9033:9086	6165	0	True				
ANR	7131	CallExpression	"pfatal ( ""Can't create temporary file %s"" , TMPOUTNAME )"		6165	0					
ANR	7132	Callee	pfatal		6165	0					
ANR	7133	Identifier	pfatal		6165	0					
ANR	7134	ArgumentList	"""Can't create temporary file %s"""		6165	1					
ANR	7135	Argument	"""Can't create temporary file %s"""		6165	0					
ANR	7136	PrimaryExpression	"""Can't create temporary file %s"""		6165	0					
ANR	7137	Argument	TMPOUTNAME		6165	1					
ANR	7138	Identifier	TMPOUTNAME		6165	0					
ANR	7139	ElseStatement	else		6165	0					
ANR	7140	ExpressionStatement	TMPOUTNAME_needs_removal = true	333:8:9110:9141	6165	0	True				
ANR	7141	AssignmentExpression	TMPOUTNAME_needs_removal = true		6165	0		=			
ANR	7142	Identifier	TMPOUTNAME_needs_removal		6165	0					
ANR	7143	Identifier	true		6165	1					
ANR	7144	IfStatement	if ( diff_type == ED_DIFF )		6165	16					
ANR	7145	Condition	diff_type == ED_DIFF	334:10:9153:9172	6165	0	True				
ANR	7146	EqualityExpression	diff_type == ED_DIFF		6165	0		==			
ANR	7147	Identifier	diff_type		6165	0					
ANR	7148	Identifier	ED_DIFF		6165	1					
ANR	7149	CompoundStatement		224:32:5720:5720	6165	1					
ANR	7150	ExpressionStatement	outstate . zero_output = false	335:1:9178:9206	6165	0	True				
ANR	7151	AssignmentExpression	outstate . zero_output = false		6165	0		=			
ANR	7152	MemberAccess	outstate . zero_output		6165	0					
ANR	7153	Identifier	outstate		6165	0					
ANR	7154	Identifier	zero_output		6165	1					
ANR	7155	Identifier	false		6165	1					
ANR	7156	ExpressionStatement	somefailed |= skip_rest_of_patch	336:1:9209:9241	6165	1	True				
ANR	7157	AssignmentExpression	somefailed |= skip_rest_of_patch		6165	0		|=			
ANR	7158	Identifier	somefailed		6165	0					
ANR	7159	Identifier	skip_rest_of_patch		6165	1					
ANR	7160	ExpressionStatement	"do_ed_script ( inname , TMPOUTNAME , & TMPOUTNAME_needs_removal , outstate . ofp )"	337:1:9244:9326	6165	2	True				
ANR	7161	CallExpression	"do_ed_script ( inname , TMPOUTNAME , & TMPOUTNAME_needs_removal , outstate . ofp )"		6165	0					
ANR	7162	Callee	do_ed_script		6165	0					
ANR	7163	Identifier	do_ed_script		6165	0					
ANR	7164	ArgumentList	inname		6165	1					
ANR	7165	Argument	inname		6165	0					
ANR	7166	Identifier	inname		6165	0					
ANR	7167	Argument	TMPOUTNAME		6165	1					
ANR	7168	Identifier	TMPOUTNAME		6165	0					
ANR	7169	Argument	& TMPOUTNAME_needs_removal		6165	2					
ANR	7170	UnaryOperationExpression	& TMPOUTNAME_needs_removal		6165	0					
ANR	7171	UnaryOperator	&		6165	0					
ANR	7172	Identifier	TMPOUTNAME_needs_removal		6165	1					
ANR	7173	Argument	outstate . ofp		6165	3					
ANR	7174	MemberAccess	outstate . ofp		6165	0					
ANR	7175	Identifier	outstate		6165	0					
ANR	7176	Identifier	ofp		6165	1					
ANR	7177	IfStatement	if ( ! dry_run && ! outfile && ! skip_rest_of_patch )		6165	3					
ANR	7178	Condition	! dry_run && ! outfile && ! skip_rest_of_patch	339:5:9333:9378	6165	0	True				
ANR	7179	AndExpression	! dry_run && ! outfile && ! skip_rest_of_patch		6165	0		&&			
ANR	7180	UnaryOperationExpression	! dry_run		6165	0					
ANR	7181	UnaryOperator	!		6165	0					
ANR	7182	Identifier	dry_run		6165	1					
ANR	7183	AndExpression	! outfile && ! skip_rest_of_patch		6165	1		&&			
ANR	7184	UnaryOperationExpression	! outfile		6165	0					
ANR	7185	UnaryOperator	!		6165	0					
ANR	7186	Identifier	outfile		6165	1					
ANR	7187	UnaryOperationExpression	! skip_rest_of_patch		6165	1					
ANR	7188	UnaryOperator	!		6165	0					
ANR	7189	Identifier	skip_rest_of_patch		6165	1					
ANR	7190	CompoundStatement		230:3:5929:5929	6165	1					
ANR	7191	IfStatement	"if ( fstat ( outfd , & tmpoutst ) != 0 )"		6165	0					
ANR	7192	Condition	"fstat ( outfd , & tmpoutst ) != 0"	341:9:9395:9423	6165	0	True				
ANR	7193	EqualityExpression	"fstat ( outfd , & tmpoutst ) != 0"		6165	0		!=			
ANR	7194	CallExpression	"fstat ( outfd , & tmpoutst )"		6165	0					
ANR	7195	Callee	fstat		6165	0					
ANR	7196	Identifier	fstat		6165	0					
ANR	7197	ArgumentList	outfd		6165	1					
ANR	7198	Argument	outfd		6165	0					
ANR	7199	Identifier	outfd		6165	0					
ANR	7200	Argument	& tmpoutst		6165	1					
ANR	7201	UnaryOperationExpression	& tmpoutst		6165	0					
ANR	7202	UnaryOperator	&		6165	0					
ANR	7203	Identifier	tmpoutst		6165	1					
ANR	7204	PrimaryExpression	0		6165	1					
ANR	7205	ExpressionStatement	"pfatal ( ""%s"" , TMPOUTNAME )"	342:7:9433:9458	6165	1	True				
ANR	7206	CallExpression	"pfatal ( ""%s"" , TMPOUTNAME )"		6165	0					
ANR	7207	Callee	pfatal		6165	0					
ANR	7208	Identifier	pfatal		6165	0					
ANR	7209	ArgumentList	"""%s"""		6165	1					
ANR	7210	Argument	"""%s"""		6165	0					
ANR	7211	PrimaryExpression	"""%s"""		6165	0					
ANR	7212	Argument	TMPOUTNAME		6165	1					
ANR	7213	Identifier	TMPOUTNAME		6165	0					
ANR	7214	ExpressionStatement	outstate . zero_output = tmpoutst . st_size == 0	343:5:9465:9509	6165	1	True				
ANR	7215	AssignmentExpression	outstate . zero_output = tmpoutst . st_size == 0		6165	0		=			
ANR	7216	MemberAccess	outstate . zero_output		6165	0					
ANR	7217	Identifier	outstate		6165	0					
ANR	7218	Identifier	zero_output		6165	1					
ANR	7219	EqualityExpression	tmpoutst . st_size == 0		6165	1		==			
ANR	7220	MemberAccess	tmpoutst . st_size		6165	0					
ANR	7221	Identifier	tmpoutst		6165	0					
ANR	7222	Identifier	st_size		6165	1					
ANR	7223	PrimaryExpression	0		6165	1					
ANR	7224	ExpressionStatement	close ( outfd )	345:1:9517:9530	6165	4	True				
ANR	7225	CallExpression	close ( outfd )		6165	0					
ANR	7226	Callee	close		6165	0					
ANR	7227	Identifier	close		6165	0					
ANR	7228	ArgumentList	outfd		6165	1					
ANR	7229	Argument	outfd		6165	0					
ANR	7230	Identifier	outfd		6165	0					
ANR	7231	ExpressionStatement	outfd = - 1	346:1:9533:9543	6165	5	True				
ANR	7232	AssignmentExpression	outfd = - 1		6165	0		=			
ANR	7233	Identifier	outfd		6165	0					
ANR	7234	UnaryOperationExpression	- 1		6165	1					
ANR	7235	UnaryOperator	-		6165	0					
ANR	7236	PrimaryExpression	1		6165	1					
ANR	7237	ElseStatement	else		6165	0					
ANR	7238	CompoundStatement		239:1:6121:6146	6165	0					
ANR	7239	IdentifierDeclStatement	int got_hunk ;	348:1:9561:9573	6165	0	True				
ANR	7240	IdentifierDecl	got_hunk		6165	0					
ANR	7241	IdentifierDeclType	int		6165	0					
ANR	7242	Identifier	got_hunk		6165	1					
ANR	7243	IdentifierDeclStatement	bool apply_anyway = merge ;	349:1:9576:9601	6165	1	True				
ANR	7244	IdentifierDecl	apply_anyway = merge		6165	0					
ANR	7245	IdentifierDeclType	bool		6165	0					
ANR	7246	Identifier	apply_anyway		6165	1					
ANR	7247	AssignmentExpression	apply_anyway = merge		6165	2		=			
ANR	7248	Identifier	merge		6165	0					
ANR	7249	Identifier	merge		6165	1					
ANR	7250	IfStatement	if ( ! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF )		6165	2					
ANR	7251	Condition	! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF	351:5:9650:9701	6165	0	True				
ANR	7252	AndExpression	! skip_rest_of_patch && diff_type == GIT_BINARY_DIFF		6165	0		&&			
ANR	7253	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7254	UnaryOperator	!		6165	0					
ANR	7255	Identifier	skip_rest_of_patch		6165	1					
ANR	7256	EqualityExpression	diff_type == GIT_BINARY_DIFF		6165	1		==			
ANR	7257	Identifier	diff_type		6165	0					
ANR	7258	Identifier	GIT_BINARY_DIFF		6165	1					
ANR	7259	CompoundStatement		241:59:6249:6249	6165	1					
ANR	7260	ExpressionStatement	"say ( ""File %s: git binary diffs are not supported.\\n"" , quotearg ( outname ) )"	352:3:9709:9791	6165	0	True				
ANR	7261	CallExpression	"say ( ""File %s: git binary diffs are not supported.\\n"" , quotearg ( outname ) )"		6165	0					
ANR	7262	Callee	say		6165	0					
ANR	7263	Identifier	say		6165	0					
ANR	7264	ArgumentList	"""File %s: git binary diffs are not supported.\\n"""		6165	1					
ANR	7265	Argument	"""File %s: git binary diffs are not supported.\\n"""		6165	0					
ANR	7266	PrimaryExpression	"""File %s: git binary diffs are not supported.\\n"""		6165	0					
ANR	7267	Argument	quotearg ( outname )		6165	1					
ANR	7268	CallExpression	quotearg ( outname )		6165	0					
ANR	7269	Callee	quotearg		6165	0					
ANR	7270	Identifier	quotearg		6165	0					
ANR	7271	ArgumentList	outname		6165	1					
ANR	7272	Argument	outname		6165	0					
ANR	7273	Identifier	outname		6165	0					
ANR	7274	ExpressionStatement	skip_rest_of_patch = true	354:3:9796:9821	6165	1	True				
ANR	7275	AssignmentExpression	skip_rest_of_patch = true		6165	0		=			
ANR	7276	Identifier	skip_rest_of_patch		6165	0					
ANR	7277	Identifier	true		6165	1					
ANR	7278	ExpressionStatement	somefailed = true	355:3:9826:9843	6165	2	True				
ANR	7279	AssignmentExpression	somefailed = true		6165	0		=			
ANR	7280	Identifier	somefailed		6165	0					
ANR	7281	Identifier	true		6165	1					
ANR	7282	IfStatement	if ( ! skip_rest_of_patch && ! outfile )		6165	3					
ANR	7283	Condition	! skip_rest_of_patch && ! outfile	358:5:9888:9920	6165	0	True				
ANR	7284	AndExpression	! skip_rest_of_patch && ! outfile		6165	0		&&			
ANR	7285	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7286	UnaryOperator	!		6165	0					
ANR	7287	Identifier	skip_rest_of_patch		6165	1					
ANR	7288	UnaryOperationExpression	! outfile		6165	1					
ANR	7289	UnaryOperator	!		6165	0					
ANR	7290	Identifier	outfile		6165	1					
ANR	7291	CompoundStatement		249:3:6471:6471	6165	1					
ANR	7292	ExpressionStatement	init_output ( & outstate )	360:5:9933:9956	6165	0	True				
ANR	7293	CallExpression	init_output ( & outstate )		6165	0					
ANR	7294	Callee	init_output		6165	0					
ANR	7295	Identifier	init_output		6165	0					
ANR	7296	ArgumentList	& outstate		6165	1					
ANR	7297	Argument	& outstate		6165	0					
ANR	7298	UnaryOperationExpression	& outstate		6165	0					
ANR	7299	UnaryOperator	&		6165	0					
ANR	7300	Identifier	outstate		6165	1					
ANR	7301	ExpressionStatement	"outstate . ofp = fdopen ( outfd , binary_transput ? ""wb"" : ""w"" )"	361:5:9963:10021	6165	1	True				
ANR	7302	AssignmentExpression	"outstate . ofp = fdopen ( outfd , binary_transput ? ""wb"" : ""w"" )"		6165	0		=			
ANR	7303	MemberAccess	outstate . ofp		6165	0					
ANR	7304	Identifier	outstate		6165	0					
ANR	7305	Identifier	ofp		6165	1					
ANR	7306	CallExpression	"fdopen ( outfd , binary_transput ? ""wb"" : ""w"" )"		6165	1					
ANR	7307	Callee	fdopen		6165	0					
ANR	7308	Identifier	fdopen		6165	0					
ANR	7309	ArgumentList	outfd		6165	1					
ANR	7310	Argument	outfd		6165	0					
ANR	7311	Identifier	outfd		6165	0					
ANR	7312	Argument	"binary_transput ? ""wb"" : ""w"""		6165	1					
ANR	7313	ConditionalExpression	"binary_transput ? ""wb"" : ""w"""		6165	0					
ANR	7314	Condition	binary_transput		6165	0					
ANR	7315	Identifier	binary_transput		6165	0					
ANR	7316	PrimaryExpression	"""wb"""		6165	1					
ANR	7317	PrimaryExpression	"""w"""		6165	2					
ANR	7318	IfStatement	if ( ! outstate . ofp )		6165	2					
ANR	7319	Condition	! outstate . ofp	362:9:10032:10045	6165	0	True				
ANR	7320	UnaryOperationExpression	! outstate . ofp		6165	0					
ANR	7321	UnaryOperator	!		6165	0					
ANR	7322	MemberAccess	outstate . ofp		6165	1					
ANR	7323	Identifier	outstate		6165	0					
ANR	7324	Identifier	ofp		6165	1					
ANR	7325	ExpressionStatement	"pfatal ( ""%s"" , TMPOUTNAME )"	363:7:10055:10080	6165	1	True				
ANR	7326	CallExpression	"pfatal ( ""%s"" , TMPOUTNAME )"		6165	0					
ANR	7327	Callee	pfatal		6165	0					
ANR	7328	Identifier	pfatal		6165	0					
ANR	7329	ArgumentList	"""%s"""		6165	1					
ANR	7330	Argument	"""%s"""		6165	0					
ANR	7331	PrimaryExpression	"""%s"""		6165	0					
ANR	7332	Argument	TMPOUTNAME		6165	1					
ANR	7333	Identifier	TMPOUTNAME		6165	0					
ANR	7334	ExpressionStatement	outfd = - 1	365:5:10140:10150	6165	3	True				
ANR	7335	AssignmentExpression	outfd = - 1		6165	0		=			
ANR	7336	Identifier	outfd		6165	0					
ANR	7337	UnaryOperationExpression	- 1		6165	1					
ANR	7338	UnaryOperator	-		6165	0					
ANR	7339	PrimaryExpression	1		6165	1					
ANR	7340	IfStatement	if ( ! skip_rest_of_patch )		6165	4					
ANR	7341	Condition	! skip_rest_of_patch	369:5:10203:10221	6165	0	True				
ANR	7342	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7343	UnaryOperator	!		6165	0					
ANR	7344	Identifier	skip_rest_of_patch		6165	1					
ANR	7345	CompoundStatement		259:26:6769:6769	6165	1					
ANR	7346	ExpressionStatement	"scan_input ( inname , file_type )"	370:5:10231:10261	6165	0	True				
ANR	7347	CallExpression	"scan_input ( inname , file_type )"		6165	0					
ANR	7348	Callee	scan_input		6165	0					
ANR	7349	Identifier	scan_input		6165	0					
ANR	7350	ArgumentList	inname		6165	1					
ANR	7351	Argument	inname		6165	0					
ANR	7352	Identifier	inname		6165	0					
ANR	7353	Argument	file_type		6165	1					
ANR	7354	Identifier	file_type		6165	0					
ANR	7355	IfStatement	if ( verbosity != SILENT )		6165	1					
ANR	7356	Condition	verbosity != SILENT	372:9:10273:10291	6165	0	True				
ANR	7357	EqualityExpression	verbosity != SILENT		6165	0		!=			
ANR	7358	Identifier	verbosity		6165	0					
ANR	7359	Identifier	SILENT		6165	1					
ANR	7360	CompoundStatement		265:2:6893:6938	6165	1					
ANR	7361	IdentifierDeclStatement	"bool renamed = strcmp ( inname , outname ) ;"	374:2:10305:10344	6165	0	True				
ANR	7362	IdentifierDecl	"renamed = strcmp ( inname , outname )"		6165	0					
ANR	7363	IdentifierDeclType	bool		6165	0					
ANR	7364	Identifier	renamed		6165	1					
ANR	7365	AssignmentExpression	"renamed = strcmp ( inname , outname )"		6165	2		=			
ANR	7366	Identifier	renamed		6165	0					
ANR	7367	CallExpression	"strcmp ( inname , outname )"		6165	1					
ANR	7368	Callee	strcmp		6165	0					
ANR	7369	Identifier	strcmp		6165	0					
ANR	7370	ArgumentList	inname		6165	1					
ANR	7371	Argument	inname		6165	0					
ANR	7372	Identifier	inname		6165	0					
ANR	7373	Argument	outname		6165	1					
ANR	7374	Identifier	outname		6165	0					
ANR	7375	IdentifierDeclStatement	bool skip_rename = ! renamed && pch_rename ( ) ;	375:2:10348:10393	6165	1	True				
ANR	7376	IdentifierDecl	skip_rename = ! renamed && pch_rename ( )		6165	0					
ANR	7377	IdentifierDeclType	bool		6165	0					
ANR	7378	Identifier	skip_rename		6165	1					
ANR	7379	AssignmentExpression	skip_rename = ! renamed && pch_rename ( )		6165	2		=			
ANR	7380	Identifier	skip_rename		6165	0					
ANR	7381	AndExpression	! renamed && pch_rename ( )		6165	1		&&			
ANR	7382	UnaryOperationExpression	! renamed		6165	0					
ANR	7383	UnaryOperator	!		6165	0					
ANR	7384	Identifier	renamed		6165	1					
ANR	7385	CallExpression	pch_rename ( )		6165	1					
ANR	7386	Callee	pch_rename		6165	0					
ANR	7387	Identifier	pch_rename		6165	0					
ANR	7388	ArgumentList			6165	1					
ANR	7389	ExpressionStatement	"say ( ""%s %s %s%c"" , dry_run ? ""checking"" : ""patching"" , S_ISLNK ( file_type ) ? ""symbolic link"" : ""file"" , quotearg ( outname ) , renamed || skip_rename ? ' ' : '\\n' )"	377:2:10398:10577	6165	2	True				
ANR	7390	CallExpression	"say ( ""%s %s %s%c"" , dry_run ? ""checking"" : ""patching"" , S_ISLNK ( file_type ) ? ""symbolic link"" : ""file"" , quotearg ( outname ) , renamed || skip_rename ? ' ' : '\\n' )"		6165	0					
ANR	7391	Callee	say		6165	0					
ANR	7392	Identifier	say		6165	0					
ANR	7393	ArgumentList	"""%s %s %s%c"""		6165	1					
ANR	7394	Argument	"""%s %s %s%c"""		6165	0					
ANR	7395	PrimaryExpression	"""%s %s %s%c"""		6165	0					
ANR	7396	Argument	"dry_run ? ""checking"" : ""patching"""		6165	1					
ANR	7397	ConditionalExpression	"dry_run ? ""checking"" : ""patching"""		6165	0					
ANR	7398	Condition	dry_run		6165	0					
ANR	7399	Identifier	dry_run		6165	0					
ANR	7400	PrimaryExpression	"""checking"""		6165	1					
ANR	7401	PrimaryExpression	"""patching"""		6165	2					
ANR	7402	Argument	"S_ISLNK ( file_type ) ? ""symbolic link"" : ""file"""		6165	2					
ANR	7403	ConditionalExpression	"S_ISLNK ( file_type ) ? ""symbolic link"" : ""file"""		6165	0					
ANR	7404	Condition	S_ISLNK ( file_type )		6165	0					
ANR	7405	CallExpression	S_ISLNK ( file_type )		6165	0					
ANR	7406	Callee	S_ISLNK		6165	0					
ANR	7407	Identifier	S_ISLNK		6165	0					
ANR	7408	ArgumentList	file_type		6165	1					
ANR	7409	Argument	file_type		6165	0					
ANR	7410	Identifier	file_type		6165	0					
ANR	7411	PrimaryExpression	"""symbolic link"""		6165	1					
ANR	7412	PrimaryExpression	"""file"""		6165	2					
ANR	7413	Argument	quotearg ( outname )		6165	3					
ANR	7414	CallExpression	quotearg ( outname )		6165	0					
ANR	7415	Callee	quotearg		6165	0					
ANR	7416	Identifier	quotearg		6165	0					
ANR	7417	ArgumentList	outname		6165	1					
ANR	7418	Argument	outname		6165	0					
ANR	7419	Identifier	outname		6165	0					
ANR	7420	Argument	renamed || skip_rename ? ' ' : '\\n'		6165	4					
ANR	7421	ConditionalExpression	renamed || skip_rename ? ' ' : '\\n'		6165	0					
ANR	7422	Condition	renamed || skip_rename		6165	0					
ANR	7423	OrExpression	renamed || skip_rename		6165	0		||			
ANR	7424	Identifier	renamed		6165	0					
ANR	7425	Identifier	skip_rename		6165	1					
ANR	7426	PrimaryExpression	' '		6165	1					
ANR	7427	PrimaryExpression	'\\n'		6165	2					
ANR	7428	IfStatement	if ( renamed || skip_rename )		6165	3					
ANR	7429	Condition	renamed || skip_rename	381:6:10585:10606	6165	0	True				
ANR	7430	OrExpression	renamed || skip_rename		6165	0		||			
ANR	7431	Identifier	renamed		6165	0					
ANR	7432	Identifier	skip_rename		6165	1					
ANR	7433	ExpressionStatement	"say ( ""(%s%s from %s)\\n"" , skip_rename ? ""already "" : """" , pch_copy ( ) ? ""copied"" : ( pch_rename ( ) ? ""renamed"" : ""read"" ) , ! skip_rename ? inname : pch_name ( ! strcmp ( inname , pch_name ( OLD ) ) ) )"	382:4:10613:10838	6165	1	True				
ANR	7434	CallExpression	"say ( ""(%s%s from %s)\\n"" , skip_rename ? ""already "" : """" , pch_copy ( ) ? ""copied"" : ( pch_rename ( ) ? ""renamed"" : ""read"" ) , ! skip_rename ? inname : pch_name ( ! strcmp ( inname , pch_name ( OLD ) ) ) )"		6165	0					
ANR	7435	Callee	say		6165	0					
ANR	7436	Identifier	say		6165	0					
ANR	7437	ArgumentList	"""(%s%s from %s)\\n"""		6165	1					
ANR	7438	Argument	"""(%s%s from %s)\\n"""		6165	0					
ANR	7439	PrimaryExpression	"""(%s%s from %s)\\n"""		6165	0					
ANR	7440	Argument	"skip_rename ? ""already "" : """""		6165	1					
ANR	7441	ConditionalExpression	"skip_rename ? ""already "" : """""		6165	0					
ANR	7442	Condition	skip_rename		6165	0					
ANR	7443	Identifier	skip_rename		6165	0					
ANR	7444	PrimaryExpression	"""already """		6165	1					
ANR	7445	PrimaryExpression	""""""		6165	2					
ANR	7446	Argument	"pch_copy ( ) ? ""copied"" : ( pch_rename ( ) ? ""renamed"" : ""read"" )"		6165	2					
ANR	7447	ConditionalExpression	"pch_copy ( ) ? ""copied"" : ( pch_rename ( ) ? ""renamed"" : ""read"" )"		6165	0					
ANR	7448	Condition	pch_copy ( )		6165	0					
ANR	7449	CallExpression	pch_copy ( )		6165	0					
ANR	7450	Callee	pch_copy		6165	0					
ANR	7451	Identifier	pch_copy		6165	0					
ANR	7452	ArgumentList			6165	1					
ANR	7453	PrimaryExpression	"""copied"""		6165	1					
ANR	7454	ConditionalExpression	"pch_rename ( ) ? ""renamed"" : ""read"""		6165	2					
ANR	7455	Condition	pch_rename ( )		6165	0					
ANR	7456	CallExpression	pch_rename ( )		6165	0					
ANR	7457	Callee	pch_rename		6165	0					
ANR	7458	Identifier	pch_rename		6165	0					
ANR	7459	ArgumentList			6165	1					
ANR	7460	PrimaryExpression	"""renamed"""		6165	1					
ANR	7461	PrimaryExpression	"""read"""		6165	2					
ANR	7462	Argument	"! skip_rename ? inname : pch_name ( ! strcmp ( inname , pch_name ( OLD ) ) )"		6165	3					
ANR	7463	ConditionalExpression	"! skip_rename ? inname : pch_name ( ! strcmp ( inname , pch_name ( OLD ) ) )"		6165	0					
ANR	7464	Condition	! skip_rename		6165	0					
ANR	7465	UnaryOperationExpression	! skip_rename		6165	0					
ANR	7466	UnaryOperator	!		6165	0					
ANR	7467	Identifier	skip_rename		6165	1					
ANR	7468	Identifier	inname		6165	1					
ANR	7469	CallExpression	"pch_name ( ! strcmp ( inname , pch_name ( OLD ) ) )"		6165	2					
ANR	7470	Callee	pch_name		6165	0					
ANR	7471	Identifier	pch_name		6165	0					
ANR	7472	ArgumentList	"! strcmp ( inname , pch_name ( OLD ) )"		6165	1					
ANR	7473	Argument	"! strcmp ( inname , pch_name ( OLD ) )"		6165	0					
ANR	7474	UnaryOperationExpression	"! strcmp ( inname , pch_name ( OLD ) )"		6165	0					
ANR	7475	UnaryOperator	!		6165	0					
ANR	7476	CallExpression	"strcmp ( inname , pch_name ( OLD ) )"		6165	1					
ANR	7477	Callee	strcmp		6165	0					
ANR	7478	Identifier	strcmp		6165	0					
ANR	7479	ArgumentList	inname		6165	1					
ANR	7480	Argument	inname		6165	0					
ANR	7481	Identifier	inname		6165	0					
ANR	7482	Argument	pch_name ( OLD )		6165	1					
ANR	7483	CallExpression	pch_name ( OLD )		6165	0					
ANR	7484	Callee	pch_name		6165	0					
ANR	7485	Identifier	pch_name		6165	0					
ANR	7486	ArgumentList	OLD		6165	1					
ANR	7487	Argument	OLD		6165	0					
ANR	7488	Identifier	OLD		6165	0					
ANR	7489	IfStatement	if ( verbosity == VERBOSE )		6165	4					
ANR	7490	Condition	verbosity == VERBOSE	387:6:10846:10865	6165	0	True				
ANR	7491	EqualityExpression	verbosity == VERBOSE		6165	0		==			
ANR	7492	Identifier	verbosity		6165	0					
ANR	7493	Identifier	VERBOSE		6165	1					
ANR	7494	ExpressionStatement	"say ( ""Using Plan %s...\\n"" , using_plan_a ? ""A"" : ""B"" )"	388:4:10872:10924	6165	1	True				
ANR	7495	CallExpression	"say ( ""Using Plan %s...\\n"" , using_plan_a ? ""A"" : ""B"" )"		6165	0					
ANR	7496	Callee	say		6165	0					
ANR	7497	Identifier	say		6165	0					
ANR	7498	ArgumentList	"""Using Plan %s...\\n"""		6165	1					
ANR	7499	Argument	"""Using Plan %s...\\n"""		6165	0					
ANR	7500	PrimaryExpression	"""Using Plan %s...\\n"""		6165	0					
ANR	7501	Argument	"using_plan_a ? ""A"" : ""B"""		6165	1					
ANR	7502	ConditionalExpression	"using_plan_a ? ""A"" : ""B"""		6165	0					
ANR	7503	Condition	using_plan_a		6165	0					
ANR	7504	Identifier	using_plan_a		6165	0					
ANR	7505	PrimaryExpression	"""A"""		6165	1					
ANR	7506	PrimaryExpression	"""B"""		6165	2					
ANR	7507	WhileStatement	"while ( 0 < ( got_hunk = another_hunk ( diff_type , reverse ) ) )"		6165	5					
ANR	7508	Condition	"0 < ( got_hunk = another_hunk ( diff_type , reverse ) )"	396:8:11094:11143	6165	0	True				
ANR	7509	RelationalExpression	"0 < ( got_hunk = another_hunk ( diff_type , reverse ) )"		6165	0		<			
ANR	7510	PrimaryExpression	0		6165	0					
ANR	7511	AssignmentExpression	"got_hunk = another_hunk ( diff_type , reverse )"		6165	1		=			
ANR	7512	Identifier	got_hunk		6165	0					
ANR	7513	CallExpression	"another_hunk ( diff_type , reverse )"		6165	1					
ANR	7514	Callee	another_hunk		6165	0					
ANR	7515	Identifier	another_hunk		6165	0					
ANR	7516	ArgumentList	diff_type		6165	1					
ANR	7517	Argument	diff_type		6165	0					
ANR	7518	Identifier	diff_type		6165	0					
ANR	7519	Argument	reverse		6165	1					
ANR	7520	Identifier	reverse		6165	0					
ANR	7521	CompoundStatement		291:5:7786:7799	6165	1					
ANR	7522	IdentifierDeclStatement	lin where = 0 ;	398:5:11156:11169	6165	0	True				
ANR	7523	IdentifierDecl	where = 0		6165	0					
ANR	7524	IdentifierDeclType	lin		6165	0					
ANR	7525	Identifier	where		6165	1					
ANR	7526	AssignmentExpression	where = 0		6165	2		=			
ANR	7527	Identifier	where		6165	0					
ANR	7528	PrimaryExpression	0		6165	1					
ANR	7529	IdentifierDeclStatement	lin newwhere ;	399:5:11203:11215	6165	1	True				
ANR	7530	IdentifierDecl	newwhere		6165	0					
ANR	7531	IdentifierDeclType	lin		6165	0					
ANR	7532	Identifier	newwhere		6165	1					
ANR	7533	IdentifierDeclStatement	lin fuzz = 0 ;	400:5:11222:11234	6165	2	True				
ANR	7534	IdentifierDecl	fuzz = 0		6165	0					
ANR	7535	IdentifierDeclType	lin		6165	0					
ANR	7536	Identifier	fuzz		6165	1					
ANR	7537	AssignmentExpression	fuzz = 0		6165	2		=			
ANR	7538	Identifier	fuzz		6165	0					
ANR	7539	PrimaryExpression	0		6165	1					
ANR	7540	IdentifierDeclStatement	lin mymaxfuzz ;	401:5:11241:11254	6165	3	True				
ANR	7541	IdentifierDecl	mymaxfuzz		6165	0					
ANR	7542	IdentifierDeclType	lin		6165	0					
ANR	7543	Identifier	mymaxfuzz		6165	1					
ANR	7544	IfStatement	if ( merge )		6165	4					
ANR	7545	Condition	merge	403:9:11266:11270	6165	0	True				
ANR	7546	Identifier	merge		6165	0					
ANR	7547	CompoundStatement		294:7:7825:7825	6165	1					
ANR	7548	ExpressionStatement	mymaxfuzz = 0	406:2:11336:11349	6165	0	True				
ANR	7549	AssignmentExpression	mymaxfuzz = 0		6165	0		=			
ANR	7550	Identifier	mymaxfuzz		6165	0					
ANR	7551	PrimaryExpression	0		6165	1					
ANR	7552	ElseStatement	else		6165	0					
ANR	7553	CompoundStatement		302:2:8018:8109	6165	0					
ANR	7554	IdentifierDeclStatement	lin prefix_context = pch_prefix_context ( ) ;	410:2:11381:11423	6165	0	True				
ANR	7555	IdentifierDecl	prefix_context = pch_prefix_context ( )		6165	0					
ANR	7556	IdentifierDeclType	lin		6165	0					
ANR	7557	Identifier	prefix_context		6165	1					
ANR	7558	AssignmentExpression	prefix_context = pch_prefix_context ( )		6165	2		=			
ANR	7559	Identifier	prefix_context		6165	0					
ANR	7560	CallExpression	pch_prefix_context ( )		6165	1					
ANR	7561	Callee	pch_prefix_context		6165	0					
ANR	7562	Identifier	pch_prefix_context		6165	0					
ANR	7563	ArgumentList			6165	1					
ANR	7564	IdentifierDeclStatement	lin suffix_context = pch_suffix_context ( ) ;	411:2:11427:11469	6165	1	True				
ANR	7565	IdentifierDecl	suffix_context = pch_suffix_context ( )		6165	0					
ANR	7566	IdentifierDeclType	lin		6165	0					
ANR	7567	Identifier	suffix_context		6165	1					
ANR	7568	AssignmentExpression	suffix_context = pch_suffix_context ( )		6165	2		=			
ANR	7569	Identifier	suffix_context		6165	0					
ANR	7570	CallExpression	pch_suffix_context ( )		6165	1					
ANR	7571	Callee	pch_suffix_context		6165	0					
ANR	7572	Identifier	pch_suffix_context		6165	0					
ANR	7573	ArgumentList			6165	1					
ANR	7574	IdentifierDeclStatement	lin context = ( prefix_context < suffix_context ? suffix_context : prefix_context ) ;	412:2:11473:11564	6165	2	True				
ANR	7575	IdentifierDecl	context = ( prefix_context < suffix_context ? suffix_context : prefix_context )		6165	0					
ANR	7576	IdentifierDeclType	lin		6165	0					
ANR	7577	Identifier	context		6165	1					
ANR	7578	AssignmentExpression	context = ( prefix_context < suffix_context ? suffix_context : prefix_context )		6165	2		=			
ANR	7579	Identifier	context		6165	0					
ANR	7580	ConditionalExpression	prefix_context < suffix_context ? suffix_context : prefix_context		6165	1					
ANR	7581	Condition	prefix_context < suffix_context		6165	0					
ANR	7582	RelationalExpression	prefix_context < suffix_context		6165	0		<			
ANR	7583	Identifier	prefix_context		6165	0					
ANR	7584	Identifier	suffix_context		6165	1					
ANR	7585	Identifier	suffix_context		6165	1					
ANR	7586	Identifier	prefix_context		6165	2					
ANR	7587	ExpressionStatement	mymaxfuzz = ( maxfuzz < context ? maxfuzz : context )	414:2:11568:11619	6165	3	True				
ANR	7588	AssignmentExpression	mymaxfuzz = ( maxfuzz < context ? maxfuzz : context )		6165	0		=			
ANR	7589	Identifier	mymaxfuzz		6165	0					
ANR	7590	ConditionalExpression	maxfuzz < context ? maxfuzz : context		6165	1					
ANR	7591	Condition	maxfuzz < context		6165	0					
ANR	7592	RelationalExpression	maxfuzz < context		6165	0		<			
ANR	7593	Identifier	maxfuzz		6165	0					
ANR	7594	Identifier	context		6165	1					
ANR	7595	Identifier	maxfuzz		6165	1					
ANR	7596	Identifier	context		6165	2					
ANR	7597	ExpressionStatement	hunk ++	417:5:11636:11642	6165	5	True				
ANR	7598	PostIncDecOperationExpression	hunk ++		6165	0					
ANR	7599	Identifier	hunk		6165	0					
ANR	7600	IncDec	++		6165	1					
ANR	7601	IfStatement	if ( ! skip_rest_of_patch )		6165	6					
ANR	7602	Condition	! skip_rest_of_patch	418:9:11653:11671	6165	0	True				
ANR	7603	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7604	UnaryOperator	!		6165	0					
ANR	7605	Identifier	skip_rest_of_patch		6165	1					
ANR	7606	CompoundStatement		308:30:8219:8219	6165	1					
ANR	7607	DoStatement	do		6165	0					
ANR	7608	CompoundStatement		309:5:8226:8226	6165	0					
ANR	7609	ExpressionStatement	where = locate_hunk ( fuzz )	420:6:11689:11714	6165	0	True				
ANR	7610	AssignmentExpression	where = locate_hunk ( fuzz )		6165	0		=			
ANR	7611	Identifier	where		6165	0					
ANR	7612	CallExpression	locate_hunk ( fuzz )		6165	1					
ANR	7613	Callee	locate_hunk		6165	0					
ANR	7614	Identifier	locate_hunk		6165	0					
ANR	7615	ArgumentList	fuzz		6165	1					
ANR	7616	Argument	fuzz		6165	0					
ANR	7617	Identifier	fuzz		6165	0					
ANR	7618	IfStatement	if ( ! where || fuzz || in_offset )		6165	1					
ANR	7619	Condition	! where || fuzz || in_offset	421:10:11726:11753	6165	0	True				
ANR	7620	OrExpression	! where || fuzz || in_offset		6165	0		||			
ANR	7621	UnaryOperationExpression	! where		6165	0					
ANR	7622	UnaryOperator	!		6165	0					
ANR	7623	Identifier	where		6165	1					
ANR	7624	OrExpression	fuzz || in_offset		6165	1		||			
ANR	7625	Identifier	fuzz		6165	0					
ANR	7626	Identifier	in_offset		6165	1					
ANR	7627	ExpressionStatement	mismatch = true	422:8:11764:11779	6165	1	True				
ANR	7628	AssignmentExpression	mismatch = true		6165	0		=			
ANR	7629	Identifier	mismatch		6165	0					
ANR	7630	Identifier	true		6165	1					
ANR	7631	IfStatement	if ( hunk == 1 && ! where && ! ( force | apply_anyway ) && reverse == reverse_flag_specified )		6165	2					
ANR	7632	Condition	hunk == 1 && ! where && ! ( force | apply_anyway ) && reverse == reverse_flag_specified	423:10:11791:11878	6165	0	True				
ANR	7633	AndExpression	hunk == 1 && ! where && ! ( force | apply_anyway ) && reverse == reverse_flag_specified		6165	0		&&			
ANR	7634	EqualityExpression	hunk == 1		6165	0		==			
ANR	7635	Identifier	hunk		6165	0					
ANR	7636	PrimaryExpression	1		6165	1					
ANR	7637	AndExpression	! where && ! ( force | apply_anyway ) && reverse == reverse_flag_specified		6165	1		&&			
ANR	7638	UnaryOperationExpression	! where		6165	0					
ANR	7639	UnaryOperator	!		6165	0					
ANR	7640	Identifier	where		6165	1					
ANR	7641	AndExpression	! ( force | apply_anyway ) && reverse == reverse_flag_specified		6165	1		&&			
ANR	7642	UnaryOperationExpression	! ( force | apply_anyway )		6165	0					
ANR	7643	UnaryOperator	!		6165	0					
ANR	7644	InclusiveOrExpression	force | apply_anyway		6165	1		|			
ANR	7645	Identifier	force		6165	0					
ANR	7646	Identifier	apply_anyway		6165	1					
ANR	7647	EqualityExpression	reverse == reverse_flag_specified		6165	1		==			
ANR	7648	Identifier	reverse		6165	0					
ANR	7649	Identifier	reverse_flag_specified		6165	1					
ANR	7650	CompoundStatement		314:41:8426:8426	6165	1					
ANR	7651	IfStatement	if ( ! pch_swap ( ) )		6165	0					
ANR	7652	Condition	! pch_swap ( )	426:7:11927:11937	6165	0	True				
ANR	7653	UnaryOperationExpression	! pch_swap ( )		6165	0					
ANR	7654	UnaryOperator	!		6165	0					
ANR	7655	CallExpression	pch_swap ( )		6165	1					
ANR	7656	Callee	pch_swap		6165	0					
ANR	7657	Identifier	pch_swap		6165	0					
ANR	7658	ArgumentList			6165	1					
ANR	7659	CompoundStatement		316:20:8485:8485	6165	1					
ANR	7660	ExpressionStatement	"say ( ""Not enough memory to try swapped hunk!  Assuming unswapped.\\n"" )"	427:7:11949:12019	6165	0	True				
ANR	7661	CallExpression	"say ( ""Not enough memory to try swapped hunk!  Assuming unswapped.\\n"" )"		6165	0					
ANR	7662	Callee	say		6165	0					
ANR	7663	Identifier	say		6165	0					
ANR	7664	ArgumentList	"""Not enough memory to try swapped hunk!  Assuming unswapped.\\n"""		6165	1					
ANR	7665	Argument	"""Not enough memory to try swapped hunk!  Assuming unswapped.\\n"""		6165	0					
ANR	7666	PrimaryExpression	"""Not enough memory to try swapped hunk!  Assuming unswapped.\\n"""		6165	0					
ANR	7667	ContinueStatement	continue ;	429:7:12028:12036	6165	1	True				
ANR	7668	ExpressionStatement	where = locate_hunk ( fuzz )	432:3:12067:12093	6165	1	True				
ANR	7669	AssignmentExpression	where = locate_hunk ( fuzz )		6165	0		=			
ANR	7670	Identifier	where		6165	0					
ANR	7671	CallExpression	locate_hunk ( fuzz )		6165	1					
ANR	7672	Callee	locate_hunk		6165	0					
ANR	7673	Identifier	locate_hunk		6165	0					
ANR	7674	ArgumentList	fuzz		6165	1					
ANR	7675	Argument	fuzz		6165	0					
ANR	7676	Identifier	fuzz		6165	0					
ANR	7677	IfStatement	"if ( where && ( ok_to_reverse ( ""%s patch detected!"" , ( reverse ? ""Unreversed"" : ""Reversed (or previously applied)"" ) ) ) )"		6165	2					
ANR	7678	Condition	"where && ( ok_to_reverse ( ""%s patch detected!"" , ( reverse ? ""Unreversed"" : ""Reversed (or previously applied)"" ) ) )"	433:7:12102:12239	6165	0	True				
ANR	7679	AndExpression	"where && ( ok_to_reverse ( ""%s patch detected!"" , ( reverse ? ""Unreversed"" : ""Reversed (or previously applied)"" ) ) )"		6165	0		&&			
ANR	7680	Identifier	where		6165	0					
ANR	7681	CallExpression	"ok_to_reverse ( ""%s patch detected!"" , ( reverse ? ""Unreversed"" : ""Reversed (or previously applied)"" ) )"		6165	1					
ANR	7682	Callee	ok_to_reverse		6165	0					
ANR	7683	Identifier	ok_to_reverse		6165	0					
ANR	7684	ArgumentList	"""%s patch detected!"""		6165	1					
ANR	7685	Argument	"""%s patch detected!"""		6165	0					
ANR	7686	PrimaryExpression	"""%s patch detected!"""		6165	0					
ANR	7687	Argument	"reverse ? ""Unreversed"" : ""Reversed (or previously applied)"""		6165	1					
ANR	7688	ConditionalExpression	"reverse ? ""Unreversed"" : ""Reversed (or previously applied)"""		6165	0					
ANR	7689	Condition	reverse		6165	0					
ANR	7690	Identifier	reverse		6165	0					
ANR	7691	PrimaryExpression	"""Unreversed"""		6165	1					
ANR	7692	PrimaryExpression	"""Reversed (or previously applied)"""		6165	2					
ANR	7693	ExpressionStatement	reverse = ! reverse	439:5:12247:12266	6165	1	True				
ANR	7694	AssignmentExpression	reverse = ! reverse		6165	0		=			
ANR	7695	Identifier	reverse		6165	0					
ANR	7696	UnaryOperationExpression	! reverse		6165	1					
ANR	7697	UnaryOperator	!		6165	0					
ANR	7698	Identifier	reverse		6165	1					
ANR	7699	ElseStatement	else		6165	0					
ANR	7700	CompoundStatement		331:5:8826:8826	6165	0					
ANR	7701	IfStatement	if ( ! pch_swap ( ) )		6165	0					
ANR	7702	Condition	! pch_swap ( )	443:11:12331:12343	6165	0	True				
ANR	7703	UnaryOperationExpression	! pch_swap ( )		6165	0					
ANR	7704	UnaryOperator	!		6165	0					
ANR	7705	CallExpression	pch_swap ( )		6165	1					
ANR	7706	Callee	pch_swap		6165	0					
ANR	7707	Identifier	pch_swap		6165	0					
ANR	7708	ArgumentList			6165	1					
ANR	7709	ExpressionStatement	"fatal ( ""lost hunk on alloc error!"" )"	444:9:12355:12390	6165	1	True				
ANR	7710	CallExpression	"fatal ( ""lost hunk on alloc error!"" )"		6165	0					
ANR	7711	Callee	fatal		6165	0					
ANR	7712	Identifier	fatal		6165	0					
ANR	7713	ArgumentList	"""lost hunk on alloc error!"""		6165	1					
ANR	7714	Argument	"""lost hunk on alloc error!"""		6165	0					
ANR	7715	PrimaryExpression	"""lost hunk on alloc error!"""		6165	0					
ANR	7716	IfStatement	if ( where )		6165	1					
ANR	7717	Condition	where	445:11:12403:12407	6165	0	True				
ANR	7718	Identifier	where		6165	0					
ANR	7719	CompoundStatement		336:9:8964:8964	6165	1					
ANR	7720	ExpressionStatement	apply_anyway = true	447:4:12425:12444	6165	0	True				
ANR	7721	AssignmentExpression	apply_anyway = true		6165	0		=			
ANR	7722	Identifier	apply_anyway		6165	0					
ANR	7723	Identifier	true		6165	1					
ANR	7724	ExpressionStatement	fuzz --	448:4:12450:12456	6165	1	True				
ANR	7725	PostIncDecOperationExpression	fuzz --		6165	0					
ANR	7726	Identifier	fuzz		6165	0					
ANR	7727	IncDec	--		6165	1					
ANR	7728	ExpressionStatement	where = 0	449:4:12490:12499	6165	2	True				
ANR	7729	AssignmentExpression	where = 0		6165	0		=			
ANR	7730	Identifier	where		6165	0					
ANR	7731	PrimaryExpression	0		6165	1					
ANR	7732	Condition	! skip_rest_of_patch && ! where && ++ fuzz <= mymaxfuzz	453:11:12538:12593	6165	1	True				
ANR	7733	AndExpression	! skip_rest_of_patch && ! where && ++ fuzz <= mymaxfuzz		6165	0		&&			
ANR	7734	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7735	UnaryOperator	!		6165	0					
ANR	7736	Identifier	skip_rest_of_patch		6165	1					
ANR	7737	AndExpression	! where && ++ fuzz <= mymaxfuzz		6165	1		&&			
ANR	7738	UnaryOperationExpression	! where		6165	0					
ANR	7739	UnaryOperator	!		6165	0					
ANR	7740	Identifier	where		6165	1					
ANR	7741	RelationalExpression	++ fuzz <= mymaxfuzz		6165	1		<=			
ANR	7742	UnaryExpression	++ fuzz		6165	0					
ANR	7743	IncDec	++		6165	0					
ANR	7744	Identifier	fuzz		6165	1					
ANR	7745	Identifier	mymaxfuzz		6165	1					
ANR	7746	IfStatement	if ( skip_rest_of_patch )		6165	1					
ANR	7747	Condition	skip_rest_of_patch	456:6:12604:12621	6165	0	True				
ANR	7748	Identifier	skip_rest_of_patch		6165	0					
ANR	7749	CompoundStatement		346:26:9169:9169	6165	1					
ANR	7750	IfStatement	if ( outstate . ofp && ! outfile )		6165	0					
ANR	7751	Condition	outstate . ofp && ! outfile	457:8:12658:12682	6165	0	True				
ANR	7752	AndExpression	outstate . ofp && ! outfile		6165	0		&&			
ANR	7753	MemberAccess	outstate . ofp		6165	0					
ANR	7754	Identifier	outstate		6165	0					
ANR	7755	Identifier	ofp		6165	1					
ANR	7756	UnaryOperationExpression	! outfile		6165	1					
ANR	7757	UnaryOperator	!		6165	0					
ANR	7758	Identifier	outfile		6165	1					
ANR	7759	CompoundStatement		348:6:9236:9236	6165	1					
ANR	7760	ExpressionStatement	fclose ( outstate . ofp )	459:8:12701:12722	6165	0	True				
ANR	7761	CallExpression	fclose ( outstate . ofp )		6165	0					
ANR	7762	Callee	fclose		6165	0					
ANR	7763	Identifier	fclose		6165	0					
ANR	7764	ArgumentList	outstate . ofp		6165	1					
ANR	7765	Argument	outstate . ofp		6165	0					
ANR	7766	MemberAccess	outstate . ofp		6165	0					
ANR	7767	Identifier	outstate		6165	0					
ANR	7768	Identifier	ofp		6165	1					
ANR	7769	ExpressionStatement	outstate . ofp = 0	460:8:12732:12748	6165	1	True				
ANR	7770	AssignmentExpression	outstate . ofp = 0		6165	0		=			
ANR	7771	MemberAccess	outstate . ofp		6165	0					
ANR	7772	Identifier	outstate		6165	0					
ANR	7773	Identifier	ofp		6165	1					
ANR	7774	PrimaryExpression	0		6165	1					
ANR	7775	ExpressionStatement	outfd = - 1	461:8:12758:12768	6165	2	True				
ANR	7776	AssignmentExpression	outfd = - 1		6165	0		=			
ANR	7777	Identifier	outfd		6165	0					
ANR	7778	UnaryOperationExpression	- 1		6165	1					
ANR	7779	UnaryOperator	-		6165	0					
ANR	7780	PrimaryExpression	1		6165	1					
ANR	7781	ExpressionStatement	newwhere = ( where ? where : pch_first ( ) ) + out_offset	466:5:12795:12848	6165	7	True				
ANR	7782	AssignmentExpression	newwhere = ( where ? where : pch_first ( ) ) + out_offset		6165	0		=			
ANR	7783	Identifier	newwhere		6165	0					
ANR	7784	AdditiveExpression	( where ? where : pch_first ( ) ) + out_offset		6165	1		+			
ANR	7785	ConditionalExpression	where ? where : pch_first ( )		6165	0					
ANR	7786	Condition	where		6165	0					
ANR	7787	Identifier	where		6165	0					
ANR	7788	Identifier	where		6165	1					
ANR	7789	CallExpression	pch_first ( )		6165	2					
ANR	7790	Callee	pch_first		6165	0					
ANR	7791	Identifier	pch_first		6165	0					
ANR	7792	ArgumentList			6165	1					
ANR	7793	Identifier	out_offset		6165	1					
ANR	7794	IfStatement	"if ( skip_rest_of_patch || ( merge && ! merge_hunk ( hunk , & outstate , where , & somefailed ) ) || ( ! merge && ( ( where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size ) || ! where || ! apply_hunk ( & outstate , where ) ) ) )"		6165	8					
ANR	7795	Condition	"skip_rest_of_patch || ( merge && ! merge_hunk ( hunk , & outstate , where , & somefailed ) ) || ( ! merge && ( ( where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size ) || ! where || ! apply_hunk ( & outstate , where ) ) )"	467:9:12859:13103	6165	0	True				
ANR	7796	OrExpression	"skip_rest_of_patch || ( merge && ! merge_hunk ( hunk , & outstate , where , & somefailed ) ) || ( ! merge && ( ( where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size ) || ! where || ! apply_hunk ( & outstate , where ) ) )"		6165	0		||			
ANR	7797	Identifier	skip_rest_of_patch		6165	0					
ANR	7798	OrExpression	"( merge && ! merge_hunk ( hunk , & outstate , where , & somefailed ) ) || ( ! merge && ( ( where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size ) || ! where || ! apply_hunk ( & outstate , where ) ) )"		6165	1		||			
ANR	7799	AndExpression	"merge && ! merge_hunk ( hunk , & outstate , where , & somefailed )"		6165	0		&&			
ANR	7800	Identifier	merge		6165	0					
ANR	7801	UnaryOperationExpression	"! merge_hunk ( hunk , & outstate , where , & somefailed )"		6165	1					
ANR	7802	UnaryOperator	!		6165	0					
ANR	7803	CallExpression	"merge_hunk ( hunk , & outstate , where , & somefailed )"		6165	1					
ANR	7804	Callee	merge_hunk		6165	0					
ANR	7805	Identifier	merge_hunk		6165	0					
ANR	7806	ArgumentList	hunk		6165	1					
ANR	7807	Argument	hunk		6165	0					
ANR	7808	Identifier	hunk		6165	0					
ANR	7809	Argument	& outstate		6165	1					
ANR	7810	UnaryOperationExpression	& outstate		6165	0					
ANR	7811	UnaryOperator	&		6165	0					
ANR	7812	Identifier	outstate		6165	1					
ANR	7813	Argument	where		6165	2					
ANR	7814	Identifier	where		6165	0					
ANR	7815	Argument	& somefailed		6165	3					
ANR	7816	UnaryOperationExpression	& somefailed		6165	0					
ANR	7817	UnaryOperator	&		6165	0					
ANR	7818	Identifier	somefailed		6165	1					
ANR	7819	AndExpression	"! merge && ( ( where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size ) || ! where || ! apply_hunk ( & outstate , where ) )"		6165	1		&&			
ANR	7820	UnaryOperationExpression	! merge		6165	0					
ANR	7821	UnaryOperator	!		6165	0					
ANR	7822	Identifier	merge		6165	1					
ANR	7823	OrExpression	"( where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size ) || ! where || ! apply_hunk ( & outstate , where )"		6165	1		||			
ANR	7824	AndExpression	where == 1 && pch_says_nonexistent ( reverse ) == 2 && instat . st_size		6165	0		&&			
ANR	7825	EqualityExpression	where == 1		6165	0		==			
ANR	7826	Identifier	where		6165	0					
ANR	7827	PrimaryExpression	1		6165	1					
ANR	7828	AndExpression	pch_says_nonexistent ( reverse ) == 2 && instat . st_size		6165	1		&&			
ANR	7829	EqualityExpression	pch_says_nonexistent ( reverse ) == 2		6165	0		==			
ANR	7830	CallExpression	pch_says_nonexistent ( reverse )		6165	0					
ANR	7831	Callee	pch_says_nonexistent		6165	0					
ANR	7832	Identifier	pch_says_nonexistent		6165	0					
ANR	7833	ArgumentList	reverse		6165	1					
ANR	7834	Argument	reverse		6165	0					
ANR	7835	Identifier	reverse		6165	0					
ANR	7836	PrimaryExpression	2		6165	1					
ANR	7837	MemberAccess	instat . st_size		6165	1					
ANR	7838	Identifier	instat		6165	0					
ANR	7839	Identifier	st_size		6165	1					
ANR	7840	OrExpression	"! where || ! apply_hunk ( & outstate , where )"		6165	1		||			
ANR	7841	UnaryOperationExpression	! where		6165	0					
ANR	7842	UnaryOperator	!		6165	0					
ANR	7843	Identifier	where		6165	1					
ANR	7844	UnaryOperationExpression	"! apply_hunk ( & outstate , where )"		6165	1					
ANR	7845	UnaryOperator	!		6165	0					
ANR	7846	CallExpression	"apply_hunk ( & outstate , where )"		6165	1					
ANR	7847	Callee	apply_hunk		6165	0					
ANR	7848	Identifier	apply_hunk		6165	0					
ANR	7849	ArgumentList	& outstate		6165	1					
ANR	7850	Argument	& outstate		6165	0					
ANR	7851	UnaryOperationExpression	& outstate		6165	0					
ANR	7852	UnaryOperator	&		6165	0					
ANR	7853	Identifier	outstate		6165	1					
ANR	7854	Argument	where		6165	1					
ANR	7855	Identifier	where		6165	0					
ANR	7856	CompoundStatement		365:7:9658:9658	6165	1					
ANR	7857	IfStatement	if ( ! skip_reject_file )		6165	0					
ANR	7858	Condition	! skip_reject_file	476:6:13121:13138	6165	0	True				
ANR	7859	UnaryOperationExpression	! skip_reject_file		6165	0					
ANR	7860	UnaryOperator	!		6165	0					
ANR	7861	Identifier	skip_reject_file		6165	1					
ANR	7862	ExpressionStatement	"abort_hunk ( outname , ! failed , reverse )"	477:4:13145:13184	6165	1	True				
ANR	7863	CallExpression	"abort_hunk ( outname , ! failed , reverse )"		6165	0					
ANR	7864	Callee	abort_hunk		6165	0					
ANR	7865	Identifier	abort_hunk		6165	0					
ANR	7866	ArgumentList	outname		6165	1					
ANR	7867	Argument	outname		6165	0					
ANR	7868	Identifier	outname		6165	0					
ANR	7869	Argument	! failed		6165	1					
ANR	7870	UnaryOperationExpression	! failed		6165	0					
ANR	7871	UnaryOperator	!		6165	0					
ANR	7872	Identifier	failed		6165	1					
ANR	7873	Argument	reverse		6165	2					
ANR	7874	Identifier	reverse		6165	0					
ANR	7875	ExpressionStatement	failed ++	478:2:13188:13196	6165	1	True				
ANR	7876	PostIncDecOperationExpression	failed ++		6165	0					
ANR	7877	Identifier	failed		6165	0					
ANR	7878	IncDec	++		6165	1					
ANR	7879	IfStatement	if ( verbosity == VERBOSE || ( ! skip_rest_of_patch && verbosity != SILENT ) )		6165	2					
ANR	7880	Condition	verbosity == VERBOSE || ( ! skip_rest_of_patch && verbosity != SILENT )	479:6:13204:13278	6165	0	True				
ANR	7881	OrExpression	verbosity == VERBOSE || ( ! skip_rest_of_patch && verbosity != SILENT )		6165	0		||			
ANR	7882	EqualityExpression	verbosity == VERBOSE		6165	0		==			
ANR	7883	Identifier	verbosity		6165	0					
ANR	7884	Identifier	VERBOSE		6165	1					
ANR	7885	AndExpression	! skip_rest_of_patch && verbosity != SILENT		6165	1		&&			
ANR	7886	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7887	UnaryOperator	!		6165	0					
ANR	7888	Identifier	skip_rest_of_patch		6165	1					
ANR	7889	EqualityExpression	verbosity != SILENT		6165	1		!=			
ANR	7890	Identifier	verbosity		6165	0					
ANR	7891	Identifier	SILENT		6165	1					
ANR	7892	ExpressionStatement	"say ( ""Hunk #%d %s at %s%s.\\n"" , hunk , skip_rest_of_patch ? ""ignored"" : ""FAILED"" , format_linenum ( numbuf , newwhere ) , ! skip_rest_of_patch && check_line_endings ( newwhere ) ? "" (different line endings)"" : """" )"	481:4:13285:13521	6165	1	True				
ANR	7893	CallExpression	"say ( ""Hunk #%d %s at %s%s.\\n"" , hunk , skip_rest_of_patch ? ""ignored"" : ""FAILED"" , format_linenum ( numbuf , newwhere ) , ! skip_rest_of_patch && check_line_endings ( newwhere ) ? "" (different line endings)"" : """" )"		6165	0					
ANR	7894	Callee	say		6165	0					
ANR	7895	Identifier	say		6165	0					
ANR	7896	ArgumentList	"""Hunk #%d %s at %s%s.\\n"""		6165	1					
ANR	7897	Argument	"""Hunk #%d %s at %s%s.\\n"""		6165	0					
ANR	7898	PrimaryExpression	"""Hunk #%d %s at %s%s.\\n"""		6165	0					
ANR	7899	Argument	hunk		6165	1					
ANR	7900	Identifier	hunk		6165	0					
ANR	7901	Argument	"skip_rest_of_patch ? ""ignored"" : ""FAILED"""		6165	2					
ANR	7902	ConditionalExpression	"skip_rest_of_patch ? ""ignored"" : ""FAILED"""		6165	0					
ANR	7903	Condition	skip_rest_of_patch		6165	0					
ANR	7904	Identifier	skip_rest_of_patch		6165	0					
ANR	7905	PrimaryExpression	"""ignored"""		6165	1					
ANR	7906	PrimaryExpression	"""FAILED"""		6165	2					
ANR	7907	Argument	"format_linenum ( numbuf , newwhere )"		6165	3					
ANR	7908	CallExpression	"format_linenum ( numbuf , newwhere )"		6165	0					
ANR	7909	Callee	format_linenum		6165	0					
ANR	7910	Identifier	format_linenum		6165	0					
ANR	7911	ArgumentList	numbuf		6165	1					
ANR	7912	Argument	numbuf		6165	0					
ANR	7913	Identifier	numbuf		6165	0					
ANR	7914	Argument	newwhere		6165	1					
ANR	7915	Identifier	newwhere		6165	0					
ANR	7916	Argument	"! skip_rest_of_patch && check_line_endings ( newwhere ) ? "" (different line endings)"" : """""		6165	4					
ANR	7917	ConditionalExpression	"! skip_rest_of_patch && check_line_endings ( newwhere ) ? "" (different line endings)"" : """""		6165	0					
ANR	7918	Condition	! skip_rest_of_patch && check_line_endings ( newwhere )		6165	0					
ANR	7919	AndExpression	! skip_rest_of_patch && check_line_endings ( newwhere )		6165	0		&&			
ANR	7920	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	7921	UnaryOperator	!		6165	0					
ANR	7922	Identifier	skip_rest_of_patch		6165	1					
ANR	7923	CallExpression	check_line_endings ( newwhere )		6165	1					
ANR	7924	Callee	check_line_endings		6165	0					
ANR	7925	Identifier	check_line_endings		6165	0					
ANR	7926	ArgumentList	newwhere		6165	1					
ANR	7927	Argument	newwhere		6165	0					
ANR	7928	Identifier	newwhere		6165	0					
ANR	7929	PrimaryExpression	""" (different line endings)"""		6165	1					
ANR	7930	PrimaryExpression	""""""		6165	2					
ANR	7931	ElseStatement	else		6165	0					
ANR	7932	IfStatement	if ( ! merge && ( verbosity == VERBOSE || ( verbosity != SILENT && ( fuzz || in_offset ) ) ) )		6165	0					
ANR	7933	Condition	! merge && ( verbosity == VERBOSE || ( verbosity != SILENT && ( fuzz || in_offset ) ) )	487:14:13546:13641	6165	0	True				
ANR	7934	AndExpression	! merge && ( verbosity == VERBOSE || ( verbosity != SILENT && ( fuzz || in_offset ) ) )		6165	0		&&			
ANR	7935	UnaryOperationExpression	! merge		6165	0					
ANR	7936	UnaryOperator	!		6165	0					
ANR	7937	Identifier	merge		6165	1					
ANR	7938	OrExpression	verbosity == VERBOSE || ( verbosity != SILENT && ( fuzz || in_offset ) )		6165	1		||			
ANR	7939	EqualityExpression	verbosity == VERBOSE		6165	0		==			
ANR	7940	Identifier	verbosity		6165	0					
ANR	7941	Identifier	VERBOSE		6165	1					
ANR	7942	AndExpression	verbosity != SILENT && ( fuzz || in_offset )		6165	1		&&			
ANR	7943	EqualityExpression	verbosity != SILENT		6165	0		!=			
ANR	7944	Identifier	verbosity		6165	0					
ANR	7945	Identifier	SILENT		6165	1					
ANR	7946	OrExpression	fuzz || in_offset		6165	1		||			
ANR	7947	Identifier	fuzz		6165	0					
ANR	7948	Identifier	in_offset		6165	1					
ANR	7949	CompoundStatement		380:7:10196:10196	6165	1					
ANR	7950	ExpressionStatement	"say ( ""Hunk #%d succeeded at %s"" , hunk , format_linenum ( numbuf , newwhere ) )"	491:2:13655:13735	6165	0	True				
ANR	7951	CallExpression	"say ( ""Hunk #%d succeeded at %s"" , hunk , format_linenum ( numbuf , newwhere ) )"		6165	0					
ANR	7952	Callee	say		6165	0					
ANR	7953	Identifier	say		6165	0					
ANR	7954	ArgumentList	"""Hunk #%d succeeded at %s"""		6165	1					
ANR	7955	Argument	"""Hunk #%d succeeded at %s"""		6165	0					
ANR	7956	PrimaryExpression	"""Hunk #%d succeeded at %s"""		6165	0					
ANR	7957	Argument	hunk		6165	1					
ANR	7958	Identifier	hunk		6165	0					
ANR	7959	Argument	"format_linenum ( numbuf , newwhere )"		6165	2					
ANR	7960	CallExpression	"format_linenum ( numbuf , newwhere )"		6165	0					
ANR	7961	Callee	format_linenum		6165	0					
ANR	7962	Identifier	format_linenum		6165	0					
ANR	7963	ArgumentList	numbuf		6165	1					
ANR	7964	Argument	numbuf		6165	0					
ANR	7965	Identifier	numbuf		6165	0					
ANR	7966	Argument	newwhere		6165	1					
ANR	7967	Identifier	newwhere		6165	0					
ANR	7968	IfStatement	if ( fuzz )		6165	1					
ANR	7969	Condition	fuzz	493:6:13743:13746	6165	0	True				
ANR	7970	Identifier	fuzz		6165	0					
ANR	7971	ExpressionStatement	"say ( "" with fuzz %s"" , format_linenum ( numbuf , fuzz ) )"	494:4:13753:13805	6165	1	True				
ANR	7972	CallExpression	"say ( "" with fuzz %s"" , format_linenum ( numbuf , fuzz ) )"		6165	0					
ANR	7973	Callee	say		6165	0					
ANR	7974	Identifier	say		6165	0					
ANR	7975	ArgumentList	""" with fuzz %s"""		6165	1					
ANR	7976	Argument	""" with fuzz %s"""		6165	0					
ANR	7977	PrimaryExpression	""" with fuzz %s"""		6165	0					
ANR	7978	Argument	"format_linenum ( numbuf , fuzz )"		6165	1					
ANR	7979	CallExpression	"format_linenum ( numbuf , fuzz )"		6165	0					
ANR	7980	Callee	format_linenum		6165	0					
ANR	7981	Identifier	format_linenum		6165	0					
ANR	7982	ArgumentList	numbuf		6165	1					
ANR	7983	Argument	numbuf		6165	0					
ANR	7984	Identifier	numbuf		6165	0					
ANR	7985	Argument	fuzz		6165	1					
ANR	7986	Identifier	fuzz		6165	0					
ANR	7987	IfStatement	if ( in_offset )		6165	2					
ANR	7988	Condition	in_offset	495:6:13813:13821	6165	0	True				
ANR	7989	Identifier	in_offset		6165	0					
ANR	7990	ExpressionStatement	"say ( "" (offset %s line%s)"" , format_linenum ( numbuf , in_offset ) , ""s"" + ( in_offset == 1 ) )"	496:4:13828:13933	6165	1	True				
ANR	7991	CallExpression	"say ( "" (offset %s line%s)"" , format_linenum ( numbuf , in_offset ) , ""s"" + ( in_offset == 1 ) )"		6165	0					
ANR	7992	Callee	say		6165	0					
ANR	7993	Identifier	say		6165	0					
ANR	7994	ArgumentList	""" (offset %s line%s)"""		6165	1					
ANR	7995	Argument	""" (offset %s line%s)"""		6165	0					
ANR	7996	PrimaryExpression	""" (offset %s line%s)"""		6165	0					
ANR	7997	Argument	"format_linenum ( numbuf , in_offset )"		6165	1					
ANR	7998	CallExpression	"format_linenum ( numbuf , in_offset )"		6165	0					
ANR	7999	Callee	format_linenum		6165	0					
ANR	8000	Identifier	format_linenum		6165	0					
ANR	8001	ArgumentList	numbuf		6165	1					
ANR	8002	Argument	numbuf		6165	0					
ANR	8003	Identifier	numbuf		6165	0					
ANR	8004	Argument	in_offset		6165	1					
ANR	8005	Identifier	in_offset		6165	0					
ANR	8006	Argument	"""s"" + ( in_offset == 1 )"		6165	2					
ANR	8007	AdditiveExpression	"""s"" + ( in_offset == 1 )"		6165	0		+			
ANR	8008	PrimaryExpression	"""s"""		6165	0					
ANR	8009	EqualityExpression	in_offset == 1		6165	1		==			
ANR	8010	Identifier	in_offset		6165	0					
ANR	8011	PrimaryExpression	1		6165	1					
ANR	8012	ExpressionStatement	"say ( "".\\n"" )"	499:2:13937:13948	6165	3	True				
ANR	8013	CallExpression	"say ( "".\\n"" )"		6165	0					
ANR	8014	Callee	say		6165	0					
ANR	8015	Identifier	say		6165	0					
ANR	8016	ArgumentList	""".\\n"""		6165	1					
ANR	8017	Argument	""".\\n"""		6165	0					
ANR	8018	PrimaryExpression	""".\\n"""		6165	0					
ANR	8019	IfStatement	if ( ! skip_rest_of_patch )		6165	6					
ANR	8020	Condition	! skip_rest_of_patch	503:5:13970:13988	6165	0	True				
ANR	8021	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	8022	UnaryOperator	!		6165	0					
ANR	8023	Identifier	skip_rest_of_patch		6165	1					
ANR	8024	CompoundStatement		394:3:10539:10539	6165	1					
ANR	8025	IfStatement	if ( got_hunk < 0 && using_plan_a )		6165	0					
ANR	8026	Condition	got_hunk < 0 && using_plan_a	505:9:14005:14034	6165	0	True				
ANR	8027	AndExpression	got_hunk < 0 && using_plan_a		6165	0		&&			
ANR	8028	RelationalExpression	got_hunk < 0		6165	0		<			
ANR	8029	Identifier	got_hunk		6165	0					
ANR	8030	PrimaryExpression	0		6165	1					
ANR	8031	Identifier	using_plan_a		6165	1					
ANR	8032	CompoundStatement		396:7:10589:10589	6165	1					
ANR	8033	IfStatement	if ( outfile )		6165	0					
ANR	8034	Condition	outfile	507:6:14052:14058	6165	0	True				
ANR	8035	Identifier	outfile		6165	0					
ANR	8036	ExpressionStatement	"fatal ( ""out of memory using Plan A"" )"	508:4:14065:14101	6165	1	True				
ANR	8037	CallExpression	"fatal ( ""out of memory using Plan A"" )"		6165	0					
ANR	8038	Callee	fatal		6165	0					
ANR	8039	Identifier	fatal		6165	0					
ANR	8040	ArgumentList	"""out of memory using Plan A"""		6165	1					
ANR	8041	Argument	"""out of memory using Plan A"""		6165	0					
ANR	8042	PrimaryExpression	"""out of memory using Plan A"""		6165	0					
ANR	8043	ExpressionStatement	"say ( ""\\n\\nRan out of memory using Plan A -- trying again...\\n\\n"" )"	509:2:14105:14170	6165	1	True				
ANR	8044	CallExpression	"say ( ""\\n\\nRan out of memory using Plan A -- trying again...\\n\\n"" )"		6165	0					
ANR	8045	Callee	say		6165	0					
ANR	8046	Identifier	say		6165	0					
ANR	8047	ArgumentList	"""\\n\\nRan out of memory using Plan A -- trying again...\\n\\n"""		6165	1					
ANR	8048	Argument	"""\\n\\nRan out of memory using Plan A -- trying again...\\n\\n"""		6165	0					
ANR	8049	PrimaryExpression	"""\\n\\nRan out of memory using Plan A -- trying again...\\n\\n"""		6165	0					
ANR	8050	IfStatement	if ( outstate . ofp )		6165	2					
ANR	8051	Condition	outstate . ofp	510:6:14178:14189	6165	0	True				
ANR	8052	MemberAccess	outstate . ofp		6165	0					
ANR	8053	Identifier	outstate		6165	0					
ANR	8054	Identifier	ofp		6165	1					
ANR	8055	CompoundStatement		401:4:10741:10741	6165	1					
ANR	8056	ExpressionStatement	fclose ( outstate . ofp )	512:6:14204:14225	6165	0	True				
ANR	8057	CallExpression	fclose ( outstate . ofp )		6165	0					
ANR	8058	Callee	fclose		6165	0					
ANR	8059	Identifier	fclose		6165	0					
ANR	8060	ArgumentList	outstate . ofp		6165	1					
ANR	8061	Argument	outstate . ofp		6165	0					
ANR	8062	MemberAccess	outstate . ofp		6165	0					
ANR	8063	Identifier	outstate		6165	0					
ANR	8064	Identifier	ofp		6165	1					
ANR	8065	ExpressionStatement	outstate . ofp = 0	513:6:14233:14249	6165	1	True				
ANR	8066	AssignmentExpression	outstate . ofp = 0		6165	0		=			
ANR	8067	MemberAccess	outstate . ofp		6165	0					
ANR	8068	Identifier	outstate		6165	0					
ANR	8069	Identifier	ofp		6165	1					
ANR	8070	PrimaryExpression	0		6165	1					
ANR	8071	ContinueStatement	continue ;	515:2:14259:14267	6165	3	True				
ANR	8072	IfStatement	"if ( ! spew_output ( & outstate , & tmpoutst ) )"		6165	1					
ANR	8073	Condition	"! spew_output ( & outstate , & tmpoutst )"	519:9:14333:14368	6165	0	True				
ANR	8074	UnaryOperationExpression	"! spew_output ( & outstate , & tmpoutst )"		6165	0					
ANR	8075	UnaryOperator	!		6165	0					
ANR	8076	CallExpression	"spew_output ( & outstate , & tmpoutst )"		6165	1					
ANR	8077	Callee	spew_output		6165	0					
ANR	8078	Identifier	spew_output		6165	0					
ANR	8079	ArgumentList	& outstate		6165	1					
ANR	8080	Argument	& outstate		6165	0					
ANR	8081	UnaryOperationExpression	& outstate		6165	0					
ANR	8082	UnaryOperator	&		6165	0					
ANR	8083	Identifier	outstate		6165	1					
ANR	8084	Argument	& tmpoutst		6165	1					
ANR	8085	UnaryOperationExpression	& tmpoutst		6165	0					
ANR	8086	UnaryOperator	&		6165	0					
ANR	8087	Identifier	tmpoutst		6165	1					
ANR	8088	CompoundStatement		410:7:10923:10923	6165	1					
ANR	8089	ExpressionStatement	"say ( ""Skipping patch.\\n"" )"	521:2:14382:14407	6165	0	True				
ANR	8090	CallExpression	"say ( ""Skipping patch.\\n"" )"		6165	0					
ANR	8091	Callee	say		6165	0					
ANR	8092	Identifier	say		6165	0					
ANR	8093	ArgumentList	"""Skipping patch.\\n"""		6165	1					
ANR	8094	Argument	"""Skipping patch.\\n"""		6165	0					
ANR	8095	PrimaryExpression	"""Skipping patch.\\n"""		6165	0					
ANR	8096	ExpressionStatement	skip_rest_of_patch = true	522:2:14411:14436	6165	1	True				
ANR	8097	AssignmentExpression	skip_rest_of_patch = true		6165	0		=			
ANR	8098	Identifier	skip_rest_of_patch		6165	0					
ANR	8099	Identifier	true		6165	1					
ANR	8100	ExpressionStatement	ignore_signals ( )	528:6:14512:14529	6165	17	True				
ANR	8101	CallExpression	ignore_signals ( )		6165	0					
ANR	8102	Callee	ignore_signals		6165	0					
ANR	8103	Identifier	ignore_signals		6165	0					
ANR	8104	ArgumentList			6165	1					
ANR	8105	IfStatement	if ( ! skip_rest_of_patch && ! outfile )		6165	18					
ANR	8106	Condition	! skip_rest_of_patch && ! outfile	529:10:14541:14573	6165	0	True				
ANR	8107	AndExpression	! skip_rest_of_patch && ! outfile		6165	0		&&			
ANR	8108	UnaryOperationExpression	! skip_rest_of_patch		6165	0					
ANR	8109	UnaryOperator	!		6165	0					
ANR	8110	Identifier	skip_rest_of_patch		6165	1					
ANR	8111	UnaryOperationExpression	! outfile		6165	1					
ANR	8112	UnaryOperator	!		6165	0					
ANR	8113	Identifier	outfile		6165	1					
ANR	8114	CompoundStatement		420:3:11126:11202	6165	1					
ANR	8115	IdentifierDeclStatement	bool backup = make_backups || ( backup_if_mismatch && ( mismatch | failed ) ) ;	530:3:14581:14657	6165	0	True				
ANR	8116	IdentifierDecl	backup = make_backups || ( backup_if_mismatch && ( mismatch | failed ) )		6165	0					
ANR	8117	IdentifierDeclType	bool		6165	0					
ANR	8118	Identifier	backup		6165	1					
ANR	8119	AssignmentExpression	backup = make_backups || ( backup_if_mismatch && ( mismatch | failed ) )		6165	2		=			
ANR	8120	Identifier	backup		6165	0					
ANR	8121	OrExpression	make_backups || ( backup_if_mismatch && ( mismatch | failed ) )		6165	1		||			
ANR	8122	Identifier	make_backups		6165	0					
ANR	8123	AndExpression	backup_if_mismatch && ( mismatch | failed )		6165	1		&&			
ANR	8124	Identifier	backup_if_mismatch		6165	0					
ANR	8125	InclusiveOrExpression	mismatch | failed		6165	1		|			
ANR	8126	Identifier	mismatch		6165	0					
ANR	8127	Identifier	failed		6165	1					
ANR	8128	IfStatement	if ( outstate . zero_output && ( remove_empty_files || ( pch_says_nonexistent ( ! reverse ) == 2 && ! posixly_correct ) || S_ISLNK ( file_type ) ) )		6165	1					
ANR	8129	Condition	outstate . zero_output && ( remove_empty_files || ( pch_says_nonexistent ( ! reverse ) == 2 && ! posixly_correct ) || S_ISLNK ( file_type ) )	532:7:14666:14819	6165	0	True				
ANR	8130	AndExpression	outstate . zero_output && ( remove_empty_files || ( pch_says_nonexistent ( ! reverse ) == 2 && ! posixly_correct ) || S_ISLNK ( file_type ) )		6165	0		&&			
ANR	8131	MemberAccess	outstate . zero_output		6165	0					
ANR	8132	Identifier	outstate		6165	0					
ANR	8133	Identifier	zero_output		6165	1					
ANR	8134	OrExpression	remove_empty_files || ( pch_says_nonexistent ( ! reverse ) == 2 && ! posixly_correct ) || S_ISLNK ( file_type )		6165	1		||			
ANR	8135	Identifier	remove_empty_files		6165	0					
ANR	8136	OrExpression	( pch_says_nonexistent ( ! reverse ) == 2 && ! posixly_correct ) || S_ISLNK ( file_type )		6165	1		||			
ANR	8137	AndExpression	pch_says_nonexistent ( ! reverse ) == 2 && ! posixly_correct		6165	0		&&			
ANR	8138	EqualityExpression	pch_says_nonexistent ( ! reverse ) == 2		6165	0		==			
ANR	8139	CallExpression	pch_says_nonexistent ( ! reverse )		6165	0					
ANR	8140	Callee	pch_says_nonexistent		6165	0					
ANR	8141	Identifier	pch_says_nonexistent		6165	0					
ANR	8142	ArgumentList	! reverse		6165	1					
ANR	8143	Argument	! reverse		6165	0					
ANR	8144	UnaryOperationExpression	! reverse		6165	0					
ANR	8145	UnaryOperator	!		6165	0					
ANR	8146	Identifier	reverse		6165	1					
ANR	8147	PrimaryExpression	2		6165	1					
ANR	8148	UnaryOperationExpression	! posixly_correct		6165	1					
ANR	8149	UnaryOperator	!		6165	0					
ANR	8150	Identifier	posixly_correct		6165	1					
ANR	8151	CallExpression	S_ISLNK ( file_type )		6165	1					
ANR	8152	Callee	S_ISLNK		6165	0					
ANR	8153	Identifier	S_ISLNK		6165	0					
ANR	8154	ArgumentList	file_type		6165	1					
ANR	8155	Argument	file_type		6165	0					
ANR	8156	Identifier	file_type		6165	0					
ANR	8157	CompoundStatement		427:5:11372:11372	6165	1					
ANR	8158	IfStatement	if ( ! dry_run )		6165	0					
ANR	8159	Condition	! dry_run	538:11:14840:14848	6165	0	True				
ANR	8160	UnaryOperationExpression	! dry_run		6165	0					
ANR	8161	UnaryOperator	!		6165	0					
ANR	8162	Identifier	dry_run		6165	1					
ANR	8163	ExpressionStatement	"output_file ( NULL , NULL , NULL , outname , ( inname == outname ) ? & instat : NULL , file_type | 0 , backup )"	539:2:14853:14969	6165	1	True				
ANR	8164	CallExpression	"output_file ( NULL , NULL , NULL , outname , ( inname == outname ) ? & instat : NULL , file_type | 0 , backup )"		6165	0					
ANR	8165	Callee	output_file		6165	0					
ANR	8166	Identifier	output_file		6165	0					
ANR	8167	ArgumentList	NULL		6165	1					
ANR	8168	Argument	NULL		6165	0					
ANR	8169	Identifier	NULL		6165	0					
ANR	8170	Argument	NULL		6165	1					
ANR	8171	Identifier	NULL		6165	0					
ANR	8172	Argument	NULL		6165	2					
ANR	8173	Identifier	NULL		6165	0					
ANR	8174	Argument	outname		6165	3					
ANR	8175	Identifier	outname		6165	0					
ANR	8176	Argument	( inname == outname ) ? & instat : NULL		6165	4					
ANR	8177	ConditionalExpression	( inname == outname ) ? & instat : NULL		6165	0					
ANR	8178	Condition	inname == outname		6165	0					
ANR	8179	EqualityExpression	inname == outname		6165	0		==			
ANR	8180	Identifier	inname		6165	0					
ANR	8181	Identifier	outname		6165	1					
ANR	8182	UnaryOperationExpression	& instat		6165	1					
ANR	8183	UnaryOperator	&		6165	0					
ANR	8184	Identifier	instat		6165	1					
ANR	8185	Identifier	NULL		6165	2					
ANR	8186	Argument	file_type | 0		6165	5					
ANR	8187	InclusiveOrExpression	file_type | 0		6165	0		|			
ANR	8188	Identifier	file_type		6165	0					
ANR	8189	PrimaryExpression	0		6165	1					
ANR	8190	Argument	backup		6165	6					
ANR	8191	Identifier	backup		6165	0					
ANR	8192	ElseStatement	else		6165	0					
ANR	8193	CompoundStatement		434:5:11536:11536	6165	0					
ANR	8194	IfStatement	if ( ! outstate . zero_output && pch_says_nonexistent ( ! reverse ) == 2 && ( remove_empty_files || ! posixly_correct ) && ! ( merge && somefailed ) )		6165	0					
ANR	8195	Condition	! outstate . zero_output && pch_says_nonexistent ( ! reverse ) == 2 && ( remove_empty_files || ! posixly_correct ) && ! ( merge && somefailed )	545:11:15004:15150	6165	0	True				
ANR	8196	AndExpression	! outstate . zero_output && pch_says_nonexistent ( ! reverse ) == 2 && ( remove_empty_files || ! posixly_correct ) && ! ( merge && somefailed )		6165	0		&&			
ANR	8197	UnaryOperationExpression	! outstate . zero_output		6165	0					
ANR	8198	UnaryOperator	!		6165	0					
ANR	8199	MemberAccess	outstate . zero_output		6165	1					
ANR	8200	Identifier	outstate		6165	0					
ANR	8201	Identifier	zero_output		6165	1					
ANR	8202	AndExpression	pch_says_nonexistent ( ! reverse ) == 2 && ( remove_empty_files || ! posixly_correct ) && ! ( merge && somefailed )		6165	1		&&			
ANR	8203	EqualityExpression	pch_says_nonexistent ( ! reverse ) == 2		6165	0		==			
ANR	8204	CallExpression	pch_says_nonexistent ( ! reverse )		6165	0					
ANR	8205	Callee	pch_says_nonexistent		6165	0					
ANR	8206	Identifier	pch_says_nonexistent		6165	0					
ANR	8207	ArgumentList	! reverse		6165	1					
ANR	8208	Argument	! reverse		6165	0					
ANR	8209	UnaryOperationExpression	! reverse		6165	0					
ANR	8210	UnaryOperator	!		6165	0					
ANR	8211	Identifier	reverse		6165	1					
ANR	8212	PrimaryExpression	2		6165	1					
ANR	8213	AndExpression	( remove_empty_files || ! posixly_correct ) && ! ( merge && somefailed )		6165	1		&&			
ANR	8214	OrExpression	remove_empty_files || ! posixly_correct		6165	0		||			
ANR	8215	Identifier	remove_empty_files		6165	0					
ANR	8216	UnaryOperationExpression	! posixly_correct		6165	1					
ANR	8217	UnaryOperator	!		6165	0					
ANR	8218	Identifier	posixly_correct		6165	1					
ANR	8219	UnaryOperationExpression	! ( merge && somefailed )		6165	1					
ANR	8220	UnaryOperator	!		6165	0					
ANR	8221	AndExpression	merge && somefailed		6165	1		&&			
ANR	8222	Identifier	merge		6165	0					
ANR	8223	Identifier	somefailed		6165	1					
ANR	8224	CompoundStatement		439:2:11700:11700	6165	1					
ANR	8225	ExpressionStatement	mismatch = true	550:4:15161:15176	6165	0	True				
ANR	8226	AssignmentExpression	mismatch = true		6165	0		=			
ANR	8227	Identifier	mismatch		6165	0					
ANR	8228	Identifier	true		6165	1					
ANR	8229	ExpressionStatement	somefailed = true	551:4:15182:15199	6165	1	True				
ANR	8230	AssignmentExpression	somefailed = true		6165	0		=			
ANR	8231	Identifier	somefailed		6165	0					
ANR	8232	Identifier	true		6165	1					
ANR	8233	IfStatement	if ( verbosity != SILENT )		6165	2					
ANR	8234	Condition	verbosity != SILENT	552:8:15209:15227	6165	0	True				
ANR	8235	EqualityExpression	verbosity != SILENT		6165	0		!=			
ANR	8236	Identifier	verbosity		6165	0					
ANR	8237	Identifier	SILENT		6165	1					
ANR	8238	ExpressionStatement	"say ( ""Not deleting file %s as content differs from patch\\n"" , quotearg ( outname ) )"	553:6:15236:15320	6165	1	True				
ANR	8239	CallExpression	"say ( ""Not deleting file %s as content differs from patch\\n"" , quotearg ( outname ) )"		6165	0					
ANR	8240	Callee	say		6165	0					
ANR	8241	Identifier	say		6165	0					
ANR	8242	ArgumentList	"""Not deleting file %s as content differs from patch\\n"""		6165	1					
ANR	8243	Argument	"""Not deleting file %s as content differs from patch\\n"""		6165	0					
ANR	8244	PrimaryExpression	"""Not deleting file %s as content differs from patch\\n"""		6165	0					
ANR	8245	Argument	quotearg ( outname )		6165	1					
ANR	8246	CallExpression	quotearg ( outname )		6165	0					
ANR	8247	Callee	quotearg		6165	0					
ANR	8248	Identifier	quotearg		6165	0					
ANR	8249	ArgumentList	outname		6165	1					
ANR	8250	Argument	outname		6165	0					
ANR	8251	Identifier	outname		6165	0					
ANR	8252	IfStatement	if ( ! dry_run )		6165	1					
ANR	8253	Condition	! dry_run	557:11:15338:15346	6165	0	True				
ANR	8254	UnaryOperationExpression	! dry_run		6165	0					
ANR	8255	UnaryOperator	!		6165	0					
ANR	8256	Identifier	dry_run		6165	1					
ANR	8257	CompoundStatement		451:4:11988:12036	6165	1					
ANR	8258	IdentifierDeclStatement	mode_t old_mode = pch_mode ( reverse ) ;	559:4:15357:15393	6165	0	True				
ANR	8259	IdentifierDecl	old_mode = pch_mode ( reverse )		6165	0					
ANR	8260	IdentifierDeclType	mode_t		6165	0					
ANR	8261	Identifier	old_mode		6165	1					
ANR	8262	AssignmentExpression	old_mode = pch_mode ( reverse )		6165	2		=			
ANR	8263	Identifier	old_mode		6165	0					
ANR	8264	CallExpression	pch_mode ( reverse )		6165	1					
ANR	8265	Callee	pch_mode		6165	0					
ANR	8266	Identifier	pch_mode		6165	0					
ANR	8267	ArgumentList	reverse		6165	1					
ANR	8268	Argument	reverse		6165	0					
ANR	8269	Identifier	reverse		6165	0					
ANR	8270	IdentifierDeclStatement	mode_t new_mode = pch_mode ( ! reverse ) ;	560:4:15399:15437	6165	1	True				
ANR	8271	IdentifierDecl	new_mode = pch_mode ( ! reverse )		6165	0					
ANR	8272	IdentifierDeclType	mode_t		6165	0					
ANR	8273	Identifier	new_mode		6165	1					
ANR	8274	AssignmentExpression	new_mode = pch_mode ( ! reverse )		6165	2		=			
ANR	8275	Identifier	new_mode		6165	0					
ANR	8276	CallExpression	pch_mode ( ! reverse )		6165	1					
ANR	8277	Callee	pch_mode		6165	0					
ANR	8278	Identifier	pch_mode		6165	0					
ANR	8279	ArgumentList	! reverse		6165	1					
ANR	8280	Argument	! reverse		6165	0					
ANR	8281	UnaryOperationExpression	! reverse		6165	0					
ANR	8282	UnaryOperator	!		6165	0					
ANR	8283	Identifier	reverse		6165	1					
ANR	8284	IdentifierDeclStatement	bool set_mode = new_mode && old_mode != new_mode ;	561:4:15443:15491	6165	2	True				
ANR	8285	IdentifierDecl	set_mode = new_mode && old_mode != new_mode		6165	0					
ANR	8286	IdentifierDeclType	bool		6165	0					
ANR	8287	Identifier	set_mode		6165	1					
ANR	8288	AssignmentExpression	set_mode = new_mode && old_mode != new_mode		6165	2		=			
ANR	8289	Identifier	set_mode		6165	0					
ANR	8290	AndExpression	new_mode && old_mode != new_mode		6165	1		&&			
ANR	8291	Identifier	new_mode		6165	0					
ANR	8292	EqualityExpression	old_mode != new_mode		6165	1		!=			
ANR	8293	Identifier	old_mode		6165	0					
ANR	8294	Identifier	new_mode		6165	1					
ANR	8295	IfStatement	if ( failed < hunk || diff_type == ED_DIFF || set_mode || pch_copy ( ) || pch_rename ( ) )		6165	3					
ANR	8296	Condition	failed < hunk || diff_type == ED_DIFF || set_mode || pch_copy ( ) || pch_rename ( )	564:8:15561:15649	6165	0	True				
ANR	8297	OrExpression	failed < hunk || diff_type == ED_DIFF || set_mode || pch_copy ( ) || pch_rename ( )		6165	0		||			
ANR	8298	RelationalExpression	failed < hunk		6165	0		<			
ANR	8299	Identifier	failed		6165	0					
ANR	8300	Identifier	hunk		6165	1					
ANR	8301	OrExpression	diff_type == ED_DIFF || set_mode || pch_copy ( ) || pch_rename ( )		6165	1		||			
ANR	8302	EqualityExpression	diff_type == ED_DIFF		6165	0		==			
ANR	8303	Identifier	diff_type		6165	0					
ANR	8304	Identifier	ED_DIFF		6165	1					
ANR	8305	OrExpression	set_mode || pch_copy ( ) || pch_rename ( )		6165	1		||			
ANR	8306	Identifier	set_mode		6165	0					
ANR	8307	OrExpression	pch_copy ( ) || pch_rename ( )		6165	1		||			
ANR	8308	CallExpression	pch_copy ( )		6165	0					
ANR	8309	Callee	pch_copy		6165	0					
ANR	8310	Identifier	pch_copy		6165	0					
ANR	8311	ArgumentList			6165	1					
ANR	8312	CallExpression	pch_rename ( )		6165	1					
ANR	8313	Callee	pch_rename		6165	0					
ANR	8314	Identifier	pch_rename		6165	0					
ANR	8315	ArgumentList			6165	1					
ANR	8316	CompoundStatement		459:8:12314:12397	6165	1					
ANR	8317	IdentifierDeclStatement	enum file_attributes attr = 0 ;	567:8:15668:15697	6165	0	True				
ANR	8318	IdentifierDecl	attr = 0		6165	0					
ANR	8319	IdentifierDeclType	enum file_attributes		6165	0					
ANR	8320	Identifier	attr		6165	1					
ANR	8321	AssignmentExpression	attr = 0		6165	2		=			
ANR	8322	Identifier	attr		6165	0					
ANR	8323	PrimaryExpression	0		6165	1					
ANR	8324	IdentifierDeclStatement	struct timespec new_time = pch_timestamp ( ! reverse ) ;	568:8:15707:15759	6165	1	True				
ANR	8325	IdentifierDecl	new_time = pch_timestamp ( ! reverse )		6165	0					
ANR	8326	IdentifierDeclType	struct timespec		6165	0					
ANR	8327	Identifier	new_time		6165	1					
ANR	8328	AssignmentExpression	new_time = pch_timestamp ( ! reverse )		6165	2		=			
ANR	8329	Identifier	new_time		6165	0					
ANR	8330	CallExpression	pch_timestamp ( ! reverse )		6165	1					
ANR	8331	Callee	pch_timestamp		6165	0					
ANR	8332	Identifier	pch_timestamp		6165	0					
ANR	8333	ArgumentList	! reverse		6165	1					
ANR	8334	Argument	! reverse		6165	0					
ANR	8335	UnaryOperationExpression	! reverse		6165	0					
ANR	8336	UnaryOperator	!		6165	0					
ANR	8337	Identifier	reverse		6165	1					
ANR	8338	IdentifierDeclStatement	mode_t mode = file_type | ( ( set_mode ? new_mode : instat . st_mode ) & S_IRWXUGO ) ;	569:8:15769:15852	6165	2	True				
ANR	8339	IdentifierDecl	mode = file_type | ( ( set_mode ? new_mode : instat . st_mode ) & S_IRWXUGO )		6165	0					
ANR	8340	IdentifierDeclType	mode_t		6165	0					
ANR	8341	Identifier	mode		6165	1					
ANR	8342	AssignmentExpression	mode = file_type | ( ( set_mode ? new_mode : instat . st_mode ) & S_IRWXUGO )		6165	2		=			
ANR	8343	Identifier	mode		6165	0					
ANR	8344	InclusiveOrExpression	file_type | ( ( set_mode ? new_mode : instat . st_mode ) & S_IRWXUGO )		6165	1		|			
ANR	8345	Identifier	file_type		6165	0					
ANR	8346	BitAndExpression	( set_mode ? new_mode : instat . st_mode ) & S_IRWXUGO		6165	1		&			
ANR	8347	ConditionalExpression	set_mode ? new_mode : instat . st_mode		6165	0					
ANR	8348	Condition	set_mode		6165	0					
ANR	8349	Identifier	set_mode		6165	0					
ANR	8350	Identifier	new_mode		6165	1					
ANR	8351	MemberAccess	instat . st_mode		6165	2					
ANR	8352	Identifier	instat		6165	0					
ANR	8353	Identifier	st_mode		6165	1					
ANR	8354	Identifier	S_IRWXUGO		6165	1					
ANR	8355	IfStatement	if ( ( set_time | set_utc ) && new_time . tv_sec != - 1 )		6165	3					
ANR	8356	Condition	( set_time | set_utc ) && new_time . tv_sec != - 1	572:12:15867:15911	6165	0	True				
ANR	8357	AndExpression	( set_time | set_utc ) && new_time . tv_sec != - 1		6165	0		&&			
ANR	8358	InclusiveOrExpression	set_time | set_utc		6165	0		|			
ANR	8359	Identifier	set_time		6165	0					
ANR	8360	Identifier	set_utc		6165	1					
ANR	8361	EqualityExpression	new_time . tv_sec != - 1		6165	1		!=			
ANR	8362	MemberAccess	new_time . tv_sec		6165	0					
ANR	8363	Identifier	new_time		6165	0					
ANR	8364	Identifier	tv_sec		6165	1					
ANR	8365	UnaryOperationExpression	- 1		6165	1					
ANR	8366	UnaryOperator	-		6165	0					
ANR	8367	PrimaryExpression	1		6165	1					
ANR	8368	CompoundStatement		464:5:12469:12519	6165	1					
ANR	8369	IdentifierDeclStatement	struct timespec old_time = pch_timestamp ( reverse ) ;	574:5:15924:15974	6165	0	True				
ANR	8370	IdentifierDecl	old_time = pch_timestamp ( reverse )		6165	0					
ANR	8371	IdentifierDeclType	struct timespec		6165	0					
ANR	8372	Identifier	old_time		6165	1					
ANR	8373	AssignmentExpression	old_time = pch_timestamp ( reverse )		6165	2		=			
ANR	8374	Identifier	old_time		6165	0					
ANR	8375	CallExpression	pch_timestamp ( reverse )		6165	1					
ANR	8376	Callee	pch_timestamp		6165	0					
ANR	8377	Identifier	pch_timestamp		6165	0					
ANR	8378	ArgumentList	reverse		6165	1					
ANR	8379	Argument	reverse		6165	0					
ANR	8380	Identifier	reverse		6165	0					
ANR	8381	IfStatement	"if ( ! force && ! inerrno && pch_says_nonexistent ( reverse ) != 2 && old_time . tv_sec != - 1 && timespec_cmp ( old_time , get_stat_mtime ( & instat ) ) )"		6165	1					
ANR	8382	Condition	"! force && ! inerrno && pch_says_nonexistent ( reverse ) != 2 && old_time . tv_sec != - 1 && timespec_cmp ( old_time , get_stat_mtime ( & instat ) )"	576:9:15986:16161	6165	0	True				
ANR	8383	AndExpression	"! force && ! inerrno && pch_says_nonexistent ( reverse ) != 2 && old_time . tv_sec != - 1 && timespec_cmp ( old_time , get_stat_mtime ( & instat ) )"		6165	0		&&			
ANR	8384	UnaryOperationExpression	! force		6165	0					
ANR	8385	UnaryOperator	!		6165	0					
ANR	8386	Identifier	force		6165	1					
ANR	8387	AndExpression	"! inerrno && pch_says_nonexistent ( reverse ) != 2 && old_time . tv_sec != - 1 && timespec_cmp ( old_time , get_stat_mtime ( & instat ) )"		6165	1		&&			
ANR	8388	UnaryOperationExpression	! inerrno		6165	0					
ANR	8389	UnaryOperator	!		6165	0					
ANR	8390	Identifier	inerrno		6165	1					
ANR	8391	AndExpression	"pch_says_nonexistent ( reverse ) != 2 && old_time . tv_sec != - 1 && timespec_cmp ( old_time , get_stat_mtime ( & instat ) )"		6165	1		&&			
ANR	8392	EqualityExpression	pch_says_nonexistent ( reverse ) != 2		6165	0		!=			
ANR	8393	CallExpression	pch_says_nonexistent ( reverse )		6165	0					
ANR	8394	Callee	pch_says_nonexistent		6165	0					
ANR	8395	Identifier	pch_says_nonexistent		6165	0					
ANR	8396	ArgumentList	reverse		6165	1					
ANR	8397	Argument	reverse		6165	0					
ANR	8398	Identifier	reverse		6165	0					
ANR	8399	PrimaryExpression	2		6165	1					
ANR	8400	AndExpression	"old_time . tv_sec != - 1 && timespec_cmp ( old_time , get_stat_mtime ( & instat ) )"		6165	1		&&			
ANR	8401	EqualityExpression	old_time . tv_sec != - 1		6165	0		!=			
ANR	8402	MemberAccess	old_time . tv_sec		6165	0					
ANR	8403	Identifier	old_time		6165	0					
ANR	8404	Identifier	tv_sec		6165	1					
ANR	8405	UnaryOperationExpression	- 1		6165	1					
ANR	8406	UnaryOperator	-		6165	0					
ANR	8407	PrimaryExpression	1		6165	1					
ANR	8408	CallExpression	"timespec_cmp ( old_time , get_stat_mtime ( & instat ) )"		6165	1					
ANR	8409	Callee	timespec_cmp		6165	0					
ANR	8410	Identifier	timespec_cmp		6165	0					
ANR	8411	ArgumentList	old_time		6165	1					
ANR	8412	Argument	old_time		6165	0					
ANR	8413	Identifier	old_time		6165	0					
ANR	8414	Argument	get_stat_mtime ( & instat )		6165	1					
ANR	8415	CallExpression	get_stat_mtime ( & instat )		6165	0					
ANR	8416	Callee	get_stat_mtime		6165	0					
ANR	8417	Identifier	get_stat_mtime		6165	0					
ANR	8418	ArgumentList	& instat		6165	1					
ANR	8419	Argument	& instat		6165	0					
ANR	8420	UnaryOperationExpression	& instat		6165	0					
ANR	8421	UnaryOperator	&		6165	0					
ANR	8422	Identifier	instat		6165	1					
ANR	8423	Statement	say	581:7:16171:16173	6165	1	True				
ANR	8424	ElseStatement	else		6165	0					
ANR	8425	IfStatement	if ( ! force && ( mismatch | failed ) )		6165	0					
ANR	8426	Condition	! force && ( mismatch | failed )	584:14:16273:16302	6165	0	True				
ANR	8427	AndExpression	! force && ( mismatch | failed )		6165	0		&&			
ANR	8428	UnaryOperationExpression	! force		6165	0					
ANR	8429	UnaryOperator	!		6165	0					
ANR	8430	Identifier	force		6165	1					
ANR	8431	InclusiveOrExpression	mismatch | failed		6165	1		|			
ANR	8432	Identifier	mismatch		6165	0					
ANR	8433	Identifier	failed		6165	1					
ANR	8434	Statement	say	585:7:16312:16314	6165	1	True				
ANR	8435	ElseStatement	else		6165	0					
ANR	8436	ExpressionStatement	attr |= FA_TIMES	589:7:16421:16437	6165	0	True				
ANR	8437	AssignmentExpression	attr |= FA_TIMES		6165	0		|=			
ANR	8438	Identifier	attr		6165	0					
ANR	8439	Identifier	FA_TIMES		6165	1					
ANR	8440	Statement	(	581:11:16175:16175	6165	2	True				
ANR	8441	Statement	"""Not setting time of file %s """	581:12:16176:16205	6165	3	True				
ANR	8442	Statement	"""(time mismatch)\\n"""	582:5:16212:16230	6165	4	True				
ANR	8443	Statement	","	582:24:16231:16231	6165	5	True				
ANR	8444	Statement	quotearg	583:5:16238:16245	6165	6	True				
ANR	8445	Statement	(	583:14:16247:16247	6165	7	True				
ANR	8446	Statement	outname	583:15:16248:16254	6165	8	True				
ANR	8447	Statement	)	583:22:16255:16255	6165	9	True				
ANR	8448	Statement	)	583:23:16256:16256	6165	10	True				
ANR	8449	ExpressionStatement		583:24:16257:16257	6165	11	True				
ANR	8450	Statement	(	585:11:16316:16316	6165	12	True				
ANR	8451	Statement	"""Not setting time of file %s """	585:12:16317:16346	6165	13	True				
ANR	8452	Statement	"""(contents mismatch)\\n"""	586:5:16353:16375	6165	14	True				
ANR	8453	Statement	","	586:28:16376:16376	6165	15	True				
ANR	8454	Statement	quotearg	587:5:16383:16390	6165	16	True				
ANR	8455	Statement	(	587:14:16392:16392	6165	17	True				
ANR	8456	Statement	outname	587:15:16393:16399	6165	18	True				
ANR	8457	Statement	)	587:22:16400:16400	6165	19	True				
ANR	8458	Statement	)	587:23:16401:16401	6165	20	True				
ANR	8459	ExpressionStatement		587:24:16402:16402	6165	21	True				
ANR	8460	IfStatement	if ( inerrno )		6165	4					
ANR	8461	Condition	inerrno	592:12:16457:16463	6165	0	True				
ANR	8462	Identifier	inerrno		6165	0					
ANR	8463	CompoundStatement		483:10:13021:13021	6165	1					
ANR	8464	IfStatement	if ( set_mode )		6165	0					
ANR	8465	Condition	set_mode	594:9:16487:16494	6165	0	True				
ANR	8466	Identifier	set_mode		6165	0					
ANR	8467	ExpressionStatement	attr |= FA_MODE	595:7:16504:16519	6165	1	True				
ANR	8468	AssignmentExpression	attr |= FA_MODE		6165	0		|=			
ANR	8469	Identifier	attr		6165	0					
ANR	8470	Identifier	FA_MODE		6165	1					
ANR	8471	ExpressionStatement	"set_file_attributes ( TMPOUTNAME , attr , NULL , NULL , mode , & new_time )"	596:5:16526:16605	6165	1	True				
ANR	8472	CallExpression	"set_file_attributes ( TMPOUTNAME , attr , NULL , NULL , mode , & new_time )"		6165	0					
ANR	8473	Callee	set_file_attributes		6165	0					
ANR	8474	Identifier	set_file_attributes		6165	0					
ANR	8475	ArgumentList	TMPOUTNAME		6165	1					
ANR	8476	Argument	TMPOUTNAME		6165	0					
ANR	8477	Identifier	TMPOUTNAME		6165	0					
ANR	8478	Argument	attr		6165	1					
ANR	8479	Identifier	attr		6165	0					
ANR	8480	Argument	NULL		6165	2					
ANR	8481	Identifier	NULL		6165	0					
ANR	8482	Argument	NULL		6165	3					
ANR	8483	Identifier	NULL		6165	0					
ANR	8484	Argument	mode		6165	4					
ANR	8485	Identifier	mode		6165	0					
ANR	8486	Argument	& new_time		6165	5					
ANR	8487	UnaryOperationExpression	& new_time		6165	0					
ANR	8488	UnaryOperator	&		6165	0					
ANR	8489	Identifier	new_time		6165	1					
ANR	8490	ElseStatement	else		6165	0					
ANR	8491	CompoundStatement		490:3:13173:13173	6165	0					
ANR	8492	ExpressionStatement	attr |= FA_IDS | FA_MODE | FA_XATTRS	601:5:16635:16671	6165	0	True				
ANR	8493	AssignmentExpression	attr |= FA_IDS | FA_MODE | FA_XATTRS		6165	0		|=			
ANR	8494	Identifier	attr		6165	0					
ANR	8495	InclusiveOrExpression	FA_IDS | FA_MODE | FA_XATTRS		6165	1		|			
ANR	8496	Identifier	FA_IDS		6165	0					
ANR	8497	InclusiveOrExpression	FA_MODE | FA_XATTRS		6165	1		|			
ANR	8498	Identifier	FA_MODE		6165	0					
ANR	8499	Identifier	FA_XATTRS		6165	1					
ANR	8500	ExpressionStatement	"set_file_attributes ( TMPOUTNAME , attr , inname , & instat , mode , & new_time )"	602:5:16678:16762	6165	1	True				
ANR	8501	CallExpression	"set_file_attributes ( TMPOUTNAME , attr , inname , & instat , mode , & new_time )"		6165	0					
ANR	8502	Callee	set_file_attributes		6165	0					
ANR	8503	Identifier	set_file_attributes		6165	0					
ANR	8504	ArgumentList	TMPOUTNAME		6165	1					
ANR	8505	Argument	TMPOUTNAME		6165	0					
ANR	8506	Identifier	TMPOUTNAME		6165	0					
ANR	8507	Argument	attr		6165	1					
ANR	8508	Identifier	attr		6165	0					
ANR	8509	Argument	inname		6165	2					
ANR	8510	Identifier	inname		6165	0					
ANR	8511	Argument	& instat		6165	3					
ANR	8512	UnaryOperationExpression	& instat		6165	0					
ANR	8513	UnaryOperator	&		6165	0					
ANR	8514	Identifier	instat		6165	1					
ANR	8515	Argument	mode		6165	4					
ANR	8516	Identifier	mode		6165	0					
ANR	8517	Argument	& new_time		6165	5					
ANR	8518	UnaryOperationExpression	& new_time		6165	0					
ANR	8519	UnaryOperator	&		6165	0					
ANR	8520	Identifier	new_time		6165	1					
ANR	8521	ExpressionStatement	"output_file ( TMPOUTNAME , & TMPOUTNAME_needs_removal , & tmpoutst , outname , NULL , mode , backup )"	606:8:16778:16876	6165	5	True				
ANR	8522	CallExpression	"output_file ( TMPOUTNAME , & TMPOUTNAME_needs_removal , & tmpoutst , outname , NULL , mode , backup )"		6165	0					
ANR	8523	Callee	output_file		6165	0					
ANR	8524	Identifier	output_file		6165	0					
ANR	8525	ArgumentList	TMPOUTNAME		6165	1					
ANR	8526	Argument	TMPOUTNAME		6165	0					
ANR	8527	Identifier	TMPOUTNAME		6165	0					
ANR	8528	Argument	& TMPOUTNAME_needs_removal		6165	1					
ANR	8529	UnaryOperationExpression	& TMPOUTNAME_needs_removal		6165	0					
ANR	8530	UnaryOperator	&		6165	0					
ANR	8531	Identifier	TMPOUTNAME_needs_removal		6165	1					
ANR	8532	Argument	& tmpoutst		6165	2					
ANR	8533	UnaryOperationExpression	& tmpoutst		6165	0					
ANR	8534	UnaryOperator	&		6165	0					
ANR	8535	Identifier	tmpoutst		6165	1					
ANR	8536	Argument	outname		6165	3					
ANR	8537	Identifier	outname		6165	0					
ANR	8538	Argument	NULL		6165	4					
ANR	8539	Identifier	NULL		6165	0					
ANR	8540	Argument	mode		6165	5					
ANR	8541	Identifier	mode		6165	0					
ANR	8542	Argument	backup		6165	6					
ANR	8543	Identifier	backup		6165	0					
ANR	8544	IfStatement	if ( pch_rename ( ) )		6165	6					
ANR	8545	Condition	pch_rename ( )	609:12:16891:16903	6165	0	True				
ANR	8546	CallExpression	pch_rename ( )		6165	0					
ANR	8547	Callee	pch_rename		6165	0					
ANR	8548	Identifier	pch_rename		6165	0					
ANR	8549	ArgumentList			6165	1					
ANR	8550	ExpressionStatement	"output_file ( NULL , NULL , NULL , inname , & instat , mode , backup )"	610:3:16909:16979	6165	1	True				
ANR	8551	CallExpression	"output_file ( NULL , NULL , NULL , inname , & instat , mode , backup )"		6165	0					
ANR	8552	Callee	output_file		6165	0					
ANR	8553	Identifier	output_file		6165	0					
ANR	8554	ArgumentList	NULL		6165	1					
ANR	8555	Argument	NULL		6165	0					
ANR	8556	Identifier	NULL		6165	0					
ANR	8557	Argument	NULL		6165	1					
ANR	8558	Identifier	NULL		6165	0					
ANR	8559	Argument	NULL		6165	2					
ANR	8560	Identifier	NULL		6165	0					
ANR	8561	Argument	inname		6165	3					
ANR	8562	Identifier	inname		6165	0					
ANR	8563	Argument	& instat		6165	4					
ANR	8564	UnaryOperationExpression	& instat		6165	0					
ANR	8565	UnaryOperator	&		6165	0					
ANR	8566	Identifier	instat		6165	1					
ANR	8567	Argument	mode		6165	5					
ANR	8568	Identifier	mode		6165	0					
ANR	8569	Argument	backup		6165	6					
ANR	8570	Identifier	backup		6165	0					
ANR	8571	ElseStatement	else		6165	0					
ANR	8572	ExpressionStatement	"output_file ( outname , NULL , & tmpoutst , NULL , NULL , file_type | 0 , backup )"	614:6:17004:17082	6165	0	True				
ANR	8573	CallExpression	"output_file ( outname , NULL , & tmpoutst , NULL , NULL , file_type | 0 , backup )"		6165	0					
ANR	8574	Callee	output_file		6165	0					
ANR	8575	Identifier	output_file		6165	0					
ANR	8576	ArgumentList	outname		6165	1					
ANR	8577	Argument	outname		6165	0					
ANR	8578	Identifier	outname		6165	0					
ANR	8579	Argument	NULL		6165	1					
ANR	8580	Identifier	NULL		6165	0					
ANR	8581	Argument	& tmpoutst		6165	2					
ANR	8582	UnaryOperationExpression	& tmpoutst		6165	0					
ANR	8583	UnaryOperator	&		6165	0					
ANR	8584	Identifier	tmpoutst		6165	1					
ANR	8585	Argument	NULL		6165	3					
ANR	8586	Identifier	NULL		6165	0					
ANR	8587	Argument	NULL		6165	4					
ANR	8588	Identifier	NULL		6165	0					
ANR	8589	Argument	file_type | 0		6165	5					
ANR	8590	InclusiveOrExpression	file_type | 0		6165	0		|			
ANR	8591	Identifier	file_type		6165	0					
ANR	8592	PrimaryExpression	0		6165	1					
ANR	8593	Argument	backup		6165	6					
ANR	8594	Identifier	backup		6165	0					
ANR	8595	IfStatement	if ( diff_type != ED_DIFF )		6165	19					
ANR	8596	Condition	diff_type != ED_DIFF	619:10:17113:17132	6165	0	True				
ANR	8597	EqualityExpression	diff_type != ED_DIFF		6165	0		!=			
ANR	8598	Identifier	diff_type		6165	0					
ANR	8599	Identifier	ED_DIFF		6165	1					
ANR	8600	CompoundStatement		510:1:13683:13700	6165	1					
ANR	8601	IdentifierDeclStatement	struct stat rejst ;	620:1:17138:17155	6165	0	True				
ANR	8602	IdentifierDecl	rejst		6165	0					
ANR	8603	IdentifierDeclType	struct stat		6165	0					
ANR	8604	Identifier	rejst		6165	1					
ANR	8605	IfStatement	if ( failed && ! skip_reject_file )		6165	1					
ANR	8606	Condition	failed && ! skip_reject_file	622:5:17163:17190	6165	0	True				
ANR	8607	AndExpression	failed && ! skip_reject_file		6165	0		&&			
ANR	8608	Identifier	failed		6165	0					
ANR	8609	UnaryOperationExpression	! skip_reject_file		6165	1					
ANR	8610	UnaryOperator	!		6165	0					
ANR	8611	Identifier	skip_reject_file		6165	1					
ANR	8612	CompoundStatement		512:35:13738:13738	6165	1					
ANR	8613	IfStatement	"if ( fstat ( fileno ( rejfp ) , & rejst ) != 0 || fclose ( rejfp ) != 0 )"		6165	0					
ANR	8614	Condition	"fstat ( fileno ( rejfp ) , & rejst ) != 0 || fclose ( rejfp ) != 0"	623:9:17204:17261	6165	0	True				
ANR	8615	OrExpression	"fstat ( fileno ( rejfp ) , & rejst ) != 0 || fclose ( rejfp ) != 0"		6165	0		||			
ANR	8616	EqualityExpression	"fstat ( fileno ( rejfp ) , & rejst ) != 0"		6165	0		!=			
ANR	8617	CallExpression	"fstat ( fileno ( rejfp ) , & rejst )"		6165	0					
ANR	8618	Callee	fstat		6165	0					
ANR	8619	Identifier	fstat		6165	0					
ANR	8620	ArgumentList	fileno ( rejfp )		6165	1					
ANR	8621	Argument	fileno ( rejfp )		6165	0					
ANR	8622	CallExpression	fileno ( rejfp )		6165	0					
ANR	8623	Callee	fileno		6165	0					
ANR	8624	Identifier	fileno		6165	0					
ANR	8625	ArgumentList	rejfp		6165	1					
ANR	8626	Argument	rejfp		6165	0					
ANR	8627	Identifier	rejfp		6165	0					
ANR	8628	Argument	& rejst		6165	1					
ANR	8629	UnaryOperationExpression	& rejst		6165	0					
ANR	8630	UnaryOperator	&		6165	0					
ANR	8631	Identifier	rejst		6165	1					
ANR	8632	PrimaryExpression	0		6165	1					
ANR	8633	EqualityExpression	fclose ( rejfp ) != 0		6165	1		!=			
ANR	8634	CallExpression	fclose ( rejfp )		6165	0					
ANR	8635	Callee	fclose		6165	0					
ANR	8636	Identifier	fclose		6165	0					
ANR	8637	ArgumentList	rejfp		6165	1					
ANR	8638	Argument	rejfp		6165	0					
ANR	8639	Identifier	rejfp		6165	0					
ANR	8640	PrimaryExpression	0		6165	1					
ANR	8641	ExpressionStatement	write_fatal ( )	624:7:17271:17285	6165	1	True				
ANR	8642	CallExpression	write_fatal ( )		6165	0					
ANR	8643	Callee	write_fatal		6165	0					
ANR	8644	Identifier	write_fatal		6165	0					
ANR	8645	ArgumentList			6165	1					
ANR	8646	ExpressionStatement	rejfp = NULL	625:5:17292:17304	6165	1	True				
ANR	8647	AssignmentExpression	rejfp = NULL		6165	0		=			
ANR	8648	Identifier	rejfp		6165	0					
ANR	8649	Identifier	NULL		6165	1					
ANR	8650	ExpressionStatement	somefailed = true	626:5:17311:17328	6165	2	True				
ANR	8651	AssignmentExpression	somefailed = true		6165	0		=			
ANR	8652	Identifier	somefailed		6165	0					
ANR	8653	Identifier	true		6165	1					
ANR	8654	ExpressionStatement	"say ( ""%d out of %d hunk%s %s"" , failed , hunk , ""s"" + ( hunk == 1 ) , skip_rest_of_patch ? ""ignored"" : ""FAILED"" )"	627:5:17335:17444	6165	3	True				
ANR	8655	CallExpression	"say ( ""%d out of %d hunk%s %s"" , failed , hunk , ""s"" + ( hunk == 1 ) , skip_rest_of_patch ? ""ignored"" : ""FAILED"" )"		6165	0					
ANR	8656	Callee	say		6165	0					
ANR	8657	Identifier	say		6165	0					
ANR	8658	ArgumentList	"""%d out of %d hunk%s %s"""		6165	1					
ANR	8659	Argument	"""%d out of %d hunk%s %s"""		6165	0					
ANR	8660	PrimaryExpression	"""%d out of %d hunk%s %s"""		6165	0					
ANR	8661	Argument	failed		6165	1					
ANR	8662	Identifier	failed		6165	0					
ANR	8663	Argument	hunk		6165	2					
ANR	8664	Identifier	hunk		6165	0					
ANR	8665	Argument	"""s"" + ( hunk == 1 )"		6165	3					
ANR	8666	AdditiveExpression	"""s"" + ( hunk == 1 )"		6165	0		+			
ANR	8667	PrimaryExpression	"""s"""		6165	0					
ANR	8668	EqualityExpression	hunk == 1		6165	1		==			
ANR	8669	Identifier	hunk		6165	0					
ANR	8670	PrimaryExpression	1		6165	1					
ANR	8671	Argument	"skip_rest_of_patch ? ""ignored"" : ""FAILED"""		6165	4					
ANR	8672	ConditionalExpression	"skip_rest_of_patch ? ""ignored"" : ""FAILED"""		6165	0					
ANR	8673	Condition	skip_rest_of_patch		6165	0					
ANR	8674	Identifier	skip_rest_of_patch		6165	0					
ANR	8675	PrimaryExpression	"""ignored"""		6165	1					
ANR	8676	PrimaryExpression	"""FAILED"""		6165	2					
ANR	8677	IfStatement	"if ( outname && ( ! rejname || strcmp ( rejname , ""-"" ) != 0 ) )"		6165	4					
ANR	8678	Condition	"outname && ( ! rejname || strcmp ( rejname , ""-"" ) != 0 )"	629:9:17455:17506	6165	0	True				
ANR	8679	AndExpression	"outname && ( ! rejname || strcmp ( rejname , ""-"" ) != 0 )"		6165	0		&&			
ANR	8680	Identifier	outname		6165	0					
ANR	8681	OrExpression	"! rejname || strcmp ( rejname , ""-"" ) != 0"		6165	1		||			
ANR	8682	UnaryOperationExpression	! rejname		6165	0					
ANR	8683	UnaryOperator	!		6165	0					
ANR	8684	Identifier	rejname		6165	1					
ANR	8685	EqualityExpression	"strcmp ( rejname , ""-"" ) != 0"		6165	1		!=			
ANR	8686	CallExpression	"strcmp ( rejname , ""-"" )"		6165	0					
ANR	8687	Callee	strcmp		6165	0					
ANR	8688	Identifier	strcmp		6165	0					
ANR	8689	ArgumentList	rejname		6165	1					
ANR	8690	Argument	rejname		6165	0					
ANR	8691	Identifier	rejname		6165	0					
ANR	8692	Argument	"""-"""		6165	1					
ANR	8693	PrimaryExpression	"""-"""		6165	0					
ANR	8694	PrimaryExpression	0		6165	1					
ANR	8695	CompoundStatement		520:2:14058:14077	6165	1					
ANR	8696	IdentifierDeclStatement	char * rej = rejname ;	630:2:17513:17532	6165	0	True				
ANR	8697	IdentifierDecl	* rej = rejname		6165	0					
ANR	8698	IdentifierDeclType	char *		6165	0					
ANR	8699	Identifier	rej		6165	1					
ANR	8700	AssignmentExpression	* rej = rejname		6165	2		=			
ANR	8701	Identifier	rejname		6165	0					
ANR	8702	Identifier	rejname		6165	1					
ANR	8703	IfStatement	if ( ! rejname )		6165	1					
ANR	8704	Condition	! rejname	631:6:17540:17547	6165	0	True				
ANR	8705	UnaryOperationExpression	! rejname		6165	0					
ANR	8706	UnaryOperator	!		6165	0					
ANR	8707	Identifier	rejname		6165	1					
ANR	8708	CompoundStatement		524:6:14207:14217	6165	1					
ANR	8709	IdentifierDeclStatement	const char * s = simple_backup_suffix ;	633:6:17618:17654	6165	0	True				
ANR	8710	IdentifierDecl	* s = simple_backup_suffix		6165	0					
ANR	8711	IdentifierDeclType	const char *		6165	0					
ANR	8712	Identifier	s		6165	1					
ANR	8713	AssignmentExpression	* s = simple_backup_suffix		6165	2		=			
ANR	8714	Identifier	simple_backup_suffix		6165	0					
ANR	8715	Identifier	simple_backup_suffix		6165	1					
ANR	8716	IdentifierDeclStatement	size_t len ;	634:6:17662:17672	6165	1	True				
ANR	8717	IdentifierDecl	len		6165	0					
ANR	8718	IdentifierDeclType	size_t		6165	0					
ANR	8719	Identifier	len		6165	1					
ANR	8720	ExpressionStatement	"simple_backup_suffix = "".rej"""	635:6:17680:17709	6165	2	True				
ANR	8721	AssignmentExpression	"simple_backup_suffix = "".rej"""		6165	0		=			
ANR	8722	Identifier	simple_backup_suffix		6165	0					
ANR	8723	PrimaryExpression	""".rej"""		6165	1					
ANR	8724	ExpressionStatement	"rej = find_backup_file_name ( outname , simple_backups )"	636:6:17717:17770	6165	3	True				
ANR	8725	AssignmentExpression	"rej = find_backup_file_name ( outname , simple_backups )"		6165	0		=			
ANR	8726	Identifier	rej		6165	0					
ANR	8727	CallExpression	"find_backup_file_name ( outname , simple_backups )"		6165	1					
ANR	8728	Callee	find_backup_file_name		6165	0					
ANR	8729	Identifier	find_backup_file_name		6165	0					
ANR	8730	ArgumentList	outname		6165	1					
ANR	8731	Argument	outname		6165	0					
ANR	8732	Identifier	outname		6165	0					
ANR	8733	Argument	simple_backups		6165	1					
ANR	8734	Identifier	simple_backups		6165	0					
ANR	8735	ExpressionStatement	len = strlen ( rej )	637:6:17778:17796	6165	4	True				
ANR	8736	AssignmentExpression	len = strlen ( rej )		6165	0		=			
ANR	8737	Identifier	len		6165	0					
ANR	8738	CallExpression	strlen ( rej )		6165	1					
ANR	8739	Callee	strlen		6165	0					
ANR	8740	Identifier	strlen		6165	0					
ANR	8741	ArgumentList	rej		6165	1					
ANR	8742	Argument	rej		6165	0					
ANR	8743	Identifier	rej		6165	0					
ANR	8744	IfStatement	if ( rej [ len - 1 ] == '~' )		6165	5					
ANR	8745	Condition	rej [ len - 1 ] == '~'	638:10:17808:17826	6165	0	True				
ANR	8746	EqualityExpression	rej [ len - 1 ] == '~'		6165	0		==			
ANR	8747	ArrayIndexing	rej [ len - 1 ]		6165	0					
ANR	8748	Identifier	rej		6165	0					
ANR	8749	AdditiveExpression	len - 1		6165	1		-			
ANR	8750	Identifier	len		6165	0					
ANR	8751	PrimaryExpression	1		6165	1					
ANR	8752	PrimaryExpression	'~'		6165	1					
ANR	8753	ExpressionStatement	rej [ len - 1 ] = '#'	639:8:17837:17855	6165	1	True				
ANR	8754	AssignmentExpression	rej [ len - 1 ] = '#'		6165	0		=			
ANR	8755	ArrayIndexing	rej [ len - 1 ]		6165	0					
ANR	8756	Identifier	rej		6165	0					
ANR	8757	AdditiveExpression	len - 1		6165	1		-			
ANR	8758	Identifier	len		6165	0					
ANR	8759	PrimaryExpression	1		6165	1					
ANR	8760	PrimaryExpression	'#'		6165	1					
ANR	8761	ExpressionStatement	simple_backup_suffix = s	640:6:17863:17887	6165	6	True				
ANR	8762	AssignmentExpression	simple_backup_suffix = s		6165	0		=			
ANR	8763	Identifier	simple_backup_suffix		6165	0					
ANR	8764	Identifier	s		6165	1					
ANR	8765	IfStatement	if ( ! dry_run )		6165	2					
ANR	8766	Condition	! dry_run	642:6:17899:17907	6165	0	True				
ANR	8767	UnaryOperationExpression	! dry_run		6165	0					
ANR	8768	UnaryOperator	!		6165	0					
ANR	8769	Identifier	dry_run		6165	1					
ANR	8770	CompoundStatement		533:4:14459:14459	6165	1					
ANR	8771	ExpressionStatement	"say ( "" -- saving rejects to file %s\\n"" , quotearg ( rej ) )"	644:6:17922:17977	6165	0	True				
ANR	8772	CallExpression	"say ( "" -- saving rejects to file %s\\n"" , quotearg ( rej ) )"		6165	0					
ANR	8773	Callee	say		6165	0					
ANR	8774	Identifier	say		6165	0					
ANR	8775	ArgumentList	""" -- saving rejects to file %s\\n"""		6165	1					
ANR	8776	Argument	""" -- saving rejects to file %s\\n"""		6165	0					
ANR	8777	PrimaryExpression	""" -- saving rejects to file %s\\n"""		6165	0					
ANR	8778	Argument	quotearg ( rej )		6165	1					
ANR	8779	CallExpression	quotearg ( rej )		6165	0					
ANR	8780	Callee	quotearg		6165	0					
ANR	8781	Identifier	quotearg		6165	0					
ANR	8782	ArgumentList	rej		6165	1					
ANR	8783	Argument	rej		6165	0					
ANR	8784	Identifier	rej		6165	0					
ANR	8785	IfStatement	if ( rejname )		6165	1					
ANR	8786	Condition	rejname	645:10:17989:17995	6165	0	True				
ANR	8787	Identifier	rejname		6165	0					
ANR	8788	CompoundStatement		536:8:14551:14551	6165	1					
ANR	8789	IfStatement	if ( ! written_to_rejname )		6165	0					
ANR	8790	Condition	! written_to_rejname	647:7:18015:18034	6165	0	True				
ANR	8791	UnaryOperationExpression	! written_to_rejname		6165	0					
ANR	8792	UnaryOperator	!		6165	0					
ANR	8793	Identifier	written_to_rejname		6165	1					
ANR	8794	CompoundStatement		538:5:14587:14587	6165	1					
ANR	8795	ExpressionStatement	"copy_file ( TMPREJNAME , rejname , 0 , 0 , S_IFREG | 0666 , true )"	649:7:18051:18121	6165	0	True				
ANR	8796	CallExpression	"copy_file ( TMPREJNAME , rejname , 0 , 0 , S_IFREG | 0666 , true )"		6165	0					
ANR	8797	Callee	copy_file		6165	0					
ANR	8798	Identifier	copy_file		6165	0					
ANR	8799	ArgumentList	TMPREJNAME		6165	1					
ANR	8800	Argument	TMPREJNAME		6165	0					
ANR	8801	Identifier	TMPREJNAME		6165	0					
ANR	8802	Argument	rejname		6165	1					
ANR	8803	Identifier	rejname		6165	0					
ANR	8804	Argument	0		6165	2					
ANR	8805	PrimaryExpression	0		6165	0					
ANR	8806	Argument	0		6165	3					
ANR	8807	PrimaryExpression	0		6165	0					
ANR	8808	Argument	S_IFREG | 0666		6165	4					
ANR	8809	InclusiveOrExpression	S_IFREG | 0666		6165	0		|			
ANR	8810	Identifier	S_IFREG		6165	0					
ANR	8811	PrimaryExpression	0666		6165	1					
ANR	8812	Argument	true		6165	5					
ANR	8813	Identifier	true		6165	0					
ANR	8814	ExpressionStatement	written_to_rejname = true	651:7:18130:18155	6165	1	True				
ANR	8815	AssignmentExpression	written_to_rejname = true		6165	0		=			
ANR	8816	Identifier	written_to_rejname		6165	0					
ANR	8817	Identifier	true		6165	1					
ANR	8818	ElseStatement	else		6165	0					
ANR	8819	ExpressionStatement	"append_to_file ( TMPREJNAME , rejname )"	654:5:18177:18213	6165	0	True				
ANR	8820	CallExpression	"append_to_file ( TMPREJNAME , rejname )"		6165	0					
ANR	8821	Callee	append_to_file		6165	0					
ANR	8822	Identifier	append_to_file		6165	0					
ANR	8823	ArgumentList	TMPREJNAME		6165	1					
ANR	8824	Argument	TMPREJNAME		6165	0					
ANR	8825	Identifier	TMPREJNAME		6165	0					
ANR	8826	Argument	rejname		6165	1					
ANR	8827	Identifier	rejname		6165	0					
ANR	8828	ElseStatement	else		6165	0					
ANR	8829	CompoundStatement		549:3:14816:14828	6165	0					
ANR	8830	IdentifierDeclStatement	struct stat oldst ;	658:3:18249:18266	6165	0	True				
ANR	8831	IdentifierDecl	oldst		6165	0					
ANR	8832	IdentifierDeclType	struct stat		6165	0					
ANR	8833	Identifier	oldst		6165	1					
ANR	8834	IdentifierDeclStatement	int olderrno ;	659:3:18271:18283	6165	1	True				
ANR	8835	IdentifierDecl	olderrno		6165	0					
ANR	8836	IdentifierDeclType	int		6165	0					
ANR	8837	Identifier	olderrno		6165	1					
ANR	8838	ExpressionStatement	"olderrno = stat_file ( rej , & oldst )"	661:3:18289:18323	6165	2	True				
ANR	8839	AssignmentExpression	"olderrno = stat_file ( rej , & oldst )"		6165	0		=			
ANR	8840	Identifier	olderrno		6165	0					
ANR	8841	CallExpression	"stat_file ( rej , & oldst )"		6165	1					
ANR	8842	Callee	stat_file		6165	0					
ANR	8843	Identifier	stat_file		6165	0					
ANR	8844	ArgumentList	rej		6165	1					
ANR	8845	Argument	rej		6165	0					
ANR	8846	Identifier	rej		6165	0					
ANR	8847	Argument	& oldst		6165	1					
ANR	8848	UnaryOperationExpression	& oldst		6165	0					
ANR	8849	UnaryOperator	&		6165	0					
ANR	8850	Identifier	oldst		6165	1					
ANR	8851	IfStatement	if ( olderrno && olderrno != ENOENT )		6165	3					
ANR	8852	Condition	olderrno && olderrno != ENOENT	662:7:18332:18361	6165	0	True				
ANR	8853	AndExpression	olderrno && olderrno != ENOENT		6165	0		&&			
ANR	8854	Identifier	olderrno		6165	0					
ANR	8855	EqualityExpression	olderrno != ENOENT		6165	1		!=			
ANR	8856	Identifier	olderrno		6165	0					
ANR	8857	Identifier	ENOENT		6165	1					
ANR	8858	ExpressionStatement	write_fatal ( )	663:5:18369:18383	6165	1	True				
ANR	8859	CallExpression	write_fatal ( )		6165	0					
ANR	8860	Callee	write_fatal		6165	0					
ANR	8861	Identifier	write_fatal		6165	0					
ANR	8862	ArgumentList			6165	1					
ANR	8863	IfStatement	if ( ! olderrno && lookup_file_id ( & oldst ) == CREATED )		6165	4					
ANR	8864	Condition	! olderrno && lookup_file_id ( & oldst ) == CREATED	664:14:18399:18446	6165	0	True				
ANR	8865	AndExpression	! olderrno && lookup_file_id ( & oldst ) == CREATED		6165	0		&&			
ANR	8866	UnaryOperationExpression	! olderrno		6165	0					
ANR	8867	UnaryOperator	!		6165	0					
ANR	8868	Identifier	olderrno		6165	1					
ANR	8869	EqualityExpression	lookup_file_id ( & oldst ) == CREATED		6165	1		==			
ANR	8870	CallExpression	lookup_file_id ( & oldst )		6165	0					
ANR	8871	Callee	lookup_file_id		6165	0					
ANR	8872	Identifier	lookup_file_id		6165	0					
ANR	8873	ArgumentList	& oldst		6165	1					
ANR	8874	Argument	& oldst		6165	0					
ANR	8875	UnaryOperationExpression	& oldst		6165	0					
ANR	8876	UnaryOperator	&		6165	0					
ANR	8877	Identifier	oldst		6165	1					
ANR	8878	Identifier	CREATED		6165	1					
ANR	8879	ExpressionStatement	"append_to_file ( TMPREJNAME , rej )"	665:5:18454:18486	6165	1	True				
ANR	8880	CallExpression	"append_to_file ( TMPREJNAME , rej )"		6165	0					
ANR	8881	Callee	append_to_file		6165	0					
ANR	8882	Identifier	append_to_file		6165	0					
ANR	8883	ArgumentList	TMPREJNAME		6165	1					
ANR	8884	Argument	TMPREJNAME		6165	0					
ANR	8885	Identifier	TMPREJNAME		6165	0					
ANR	8886	Argument	rej		6165	1					
ANR	8887	Identifier	rej		6165	0					
ANR	8888	ElseStatement	else		6165	0					
ANR	8889	ExpressionStatement	"move_file ( TMPREJNAME , & TMPREJNAME_needs_removal , & rejst , rej , S_IFREG | 0666 , false )"	667:5:18501:18595	6165	0	True				
ANR	8890	CallExpression	"move_file ( TMPREJNAME , & TMPREJNAME_needs_removal , & rejst , rej , S_IFREG | 0666 , false )"		6165	0					
ANR	8891	Callee	move_file		6165	0					
ANR	8892	Identifier	move_file		6165	0					
ANR	8893	ArgumentList	TMPREJNAME		6165	1					
ANR	8894	Argument	TMPREJNAME		6165	0					
ANR	8895	Identifier	TMPREJNAME		6165	0					
ANR	8896	Argument	& TMPREJNAME_needs_removal		6165	1					
ANR	8897	UnaryOperationExpression	& TMPREJNAME_needs_removal		6165	0					
ANR	8898	UnaryOperator	&		6165	0					
ANR	8899	Identifier	TMPREJNAME_needs_removal		6165	1					
ANR	8900	Argument	& rejst		6165	2					
ANR	8901	UnaryOperationExpression	& rejst		6165	0					
ANR	8902	UnaryOperator	&		6165	0					
ANR	8903	Identifier	rejst		6165	1					
ANR	8904	Argument	rej		6165	3					
ANR	8905	Identifier	rej		6165	0					
ANR	8906	Argument	S_IFREG | 0666		6165	4					
ANR	8907	InclusiveOrExpression	S_IFREG | 0666		6165	0		|			
ANR	8908	Identifier	S_IFREG		6165	0					
ANR	8909	PrimaryExpression	0666		6165	1					
ANR	8910	Argument	false		6165	5					
ANR	8911	Identifier	false		6165	0					
ANR	8912	ElseStatement	else		6165	0					
ANR	8913	ExpressionStatement	"say ( ""\\n"" )"	672:4:18624:18634	6165	0	True				
ANR	8914	CallExpression	"say ( ""\\n"" )"		6165	0					
ANR	8915	Callee	say		6165	0					
ANR	8916	Identifier	say		6165	0					
ANR	8917	ArgumentList	"""\\n"""		6165	1					
ANR	8918	Argument	"""\\n"""		6165	0					
ANR	8919	PrimaryExpression	"""\\n"""		6165	0					
ANR	8920	IfStatement	if ( ! rejname )		6165	3					
ANR	8921	Condition	! rejname	673:6:18642:18649	6165	0	True				
ANR	8922	UnaryOperationExpression	! rejname		6165	0					
ANR	8923	UnaryOperator	!		6165	0					
ANR	8924	Identifier	rejname		6165	1					
ANR	8925	ExpressionStatement	free ( rej )	674:6:18658:18668	6165	1	True				
ANR	8926	CallExpression	free ( rej )		6165	0					
ANR	8927	Callee	free		6165	0					
ANR	8928	Identifier	free		6165	0					
ANR	8929	ArgumentList	rej		6165	1					
ANR	8930	Argument	rej		6165	0					
ANR	8931	Identifier	rej		6165	0					
ANR	8932	ElseStatement	else		6165	0					
ANR	8933	ExpressionStatement	"say ( ""\\n"" )"	676:7:18689:18699	6165	0	True				
ANR	8934	CallExpression	"say ( ""\\n"" )"		6165	0					
ANR	8935	Callee	say		6165	0					
ANR	8936	Identifier	say		6165	0					
ANR	8937	ArgumentList	"""\\n"""		6165	1					
ANR	8938	Argument	"""\\n"""		6165	0					
ANR	8939	PrimaryExpression	"""\\n"""		6165	0					
ANR	8940	ExpressionStatement	set_signals ( true )	679:6:18718:18736	6165	20	True				
ANR	8941	CallExpression	set_signals ( true )		6165	0					
ANR	8942	Callee	set_signals		6165	0					
ANR	8943	Identifier	set_signals		6165	0					
ANR	8944	ArgumentList	true		6165	1					
ANR	8945	Argument	true		6165	0					
ANR	8946	Identifier	true		6165	0					
ANR	8947	IfStatement	if ( outstate . ofp && ( ferror ( outstate . ofp ) || fclose ( outstate . ofp ) != 0 ) )		6165	40					
ANR	8948	Condition	outstate . ofp && ( ferror ( outstate . ofp ) || fclose ( outstate . ofp ) != 0 )	681:8:18752:18820	6165	0	True				
ANR	8949	AndExpression	outstate . ofp && ( ferror ( outstate . ofp ) || fclose ( outstate . ofp ) != 0 )		6165	0		&&			
ANR	8950	MemberAccess	outstate . ofp		6165	0					
ANR	8951	Identifier	outstate		6165	0					
ANR	8952	Identifier	ofp		6165	1					
ANR	8953	OrExpression	ferror ( outstate . ofp ) || fclose ( outstate . ofp ) != 0		6165	1		||			
ANR	8954	CallExpression	ferror ( outstate . ofp )		6165	0					
ANR	8955	Callee	ferror		6165	0					
ANR	8956	Identifier	ferror		6165	0					
ANR	8957	ArgumentList	outstate . ofp		6165	1					
ANR	8958	Argument	outstate . ofp		6165	0					
ANR	8959	MemberAccess	outstate . ofp		6165	0					
ANR	8960	Identifier	outstate		6165	0					
ANR	8961	Identifier	ofp		6165	1					
ANR	8962	EqualityExpression	fclose ( outstate . ofp ) != 0		6165	1		!=			
ANR	8963	CallExpression	fclose ( outstate . ofp )		6165	0					
ANR	8964	Callee	fclose		6165	0					
ANR	8965	Identifier	fclose		6165	0					
ANR	8966	ArgumentList	outstate . ofp		6165	1					
ANR	8967	Argument	outstate . ofp		6165	0					
ANR	8968	MemberAccess	outstate . ofp		6165	0					
ANR	8969	Identifier	outstate		6165	0					
ANR	8970	Identifier	ofp		6165	1					
ANR	8971	PrimaryExpression	0		6165	1					
ANR	8972	ExpressionStatement	write_fatal ( )	682:6:18829:18843	6165	1	True				
ANR	8973	CallExpression	write_fatal ( )		6165	0					
ANR	8974	Callee	write_fatal		6165	0					
ANR	8975	Identifier	write_fatal		6165	0					
ANR	8976	ArgumentList			6165	1					
ANR	8977	ExpressionStatement	output_files ( NULL )	683:4:18849:18868	6165	41	True				
ANR	8978	CallExpression	output_files ( NULL )		6165	0					
ANR	8979	Callee	output_files		6165	0					
ANR	8980	Identifier	output_files		6165	0					
ANR	8981	ArgumentList	NULL		6165	1					
ANR	8982	Argument	NULL		6165	0					
ANR	8983	Identifier	NULL		6165	0					
ANR	8984	ExpressionStatement	cleanup ( )	684:4:18874:18884	6165	42	True				
ANR	8985	CallExpression	cleanup ( )		6165	0					
ANR	8986	Callee	cleanup		6165	0					
ANR	8987	Identifier	cleanup		6165	0					
ANR	8988	ArgumentList			6165	1					
ANR	8989	ExpressionStatement	delete_files ( )	685:4:18890:18905	6165	43	True				
ANR	8990	CallExpression	delete_files ( )		6165	0					
ANR	8991	Callee	delete_files		6165	0					
ANR	8992	Identifier	delete_files		6165	0					
ANR	8993	ArgumentList			6165	1					
ANR	8994	IfStatement	if ( somefailed )		6165	44					
ANR	8995	Condition	somefailed	686:8:18915:18924	6165	0	True				
ANR	8996	Identifier	somefailed		6165	0					
ANR	8997	ExpressionStatement	exit ( 1 )	687:6:18933:18941	6165	1	True				
ANR	8998	CallExpression	exit ( 1 )		6165	0					
ANR	8999	Callee	exit		6165	0					
ANR	9000	Identifier	exit		6165	0					
ANR	9001	ArgumentList	1		6165	1					
ANR	9002	Argument	1		6165	0					
ANR	9003	PrimaryExpression	1		6165	0					
ANR	9004	ReturnStatement	return 0 ;	688:4:18947:18955	6165	45	True				
ANR	9005	PrimaryExpression	0		6165	0					
ANR	9006	ReturnType	int		6165	1					
ANR	9007	Identifier	main		6165	2					
ANR	9008	ParameterList	"int argc , char * * argv"		6165	3					
ANR	9009	Parameter	int argc	110:6:3431:3438	6165	0	True				
ANR	9010	ParameterType	int		6165	0					
ANR	9011	Identifier	argc		6165	1					
ANR	9012	Parameter	char * * argv	110:16:3441:3451	6165	1	True				
ANR	9013	ParameterType	char * *		6165	0					
ANR	9014	Identifier	argv		6165	1					
ANR	9015	CFGEntryNode	ENTRY		6165		True				
ANR	9016	CFGExitNode	EXIT		6165		True				
ANR	9017	Symbol	backup		6165						
ANR	9018	Symbol	has_queued_output		6165						
ANR	9019	Symbol	OLD		6165						
ANR	9020	Symbol	TMPOUTNAME_needs_removal		6165						
ANR	9021	Symbol	inerrno		6165						
ANR	9022	Symbol	TMPOUTNAME		6165						
ANR	9023	Symbol	new_time . tv_sec		6165						
ANR	9024	Symbol	& file_type		6165						
ANR	9025	Symbol	S_IFMT		6165						
ANR	9026	Symbol	instat . st_mode		6165						
ANR	9027	Symbol	set_utc		6165						
ANR	9028	Symbol	prefix_context		6165						
ANR	9029	Symbol	old_time . tv_sec		6165						
ANR	9030	Symbol	safe_access		6165						
ANR	9031	Symbol	new_time		6165						
ANR	9032	Symbol	len		6165						
ANR	9033	Symbol	xmalloc		6165						
ANR	9034	Symbol	FA_XATTRS		6165						
ANR	9035	Symbol	merge		6165						
ANR	9036	Symbol	context		6165						
ANR	9037	Symbol	TMPREJNAME_needs_removal		6165						
ANR	9038	Symbol	Argv		6165						
ANR	9039	Symbol	val		6165						
ANR	9040	Symbol	errno		6165						
ANR	9041	Symbol	newwhere		6165						
ANR	9042	Symbol	pch_rename		6165						
ANR	9043	Symbol	suffix_context		6165						
ANR	9044	Symbol	FA_IDS		6165						
ANR	9045	Symbol	backup_type		6165						
ANR	9046	Symbol	version_control_context		6165						
ANR	9047	Symbol	olderrno		6165						
ANR	9048	Symbol	fileno		6165						
ANR	9049	Symbol	force		6165						
ANR	9050	Symbol	binary_transput		6165						
ANR	9051	Symbol	set_mode		6165						
ANR	9052	Symbol	old_time		6165						
ANR	9053	Symbol	S_IRWXUGO		6165						
ANR	9054	Symbol	skip_rename		6165						
ANR	9055	Symbol	FA_TIMES		6165						
ANR	9056	Symbol	* val		6165						
ANR	9057	Symbol	& new_time		6165						
ANR	9058	Symbol	rejname		6165						
ANR	9059	Symbol	unsafe		6165						
ANR	9060	Symbol	rejst		6165						
ANR	9061	Symbol	format_linenum		6165						
ANR	9062	Symbol	pch_timestamp		6165						
ANR	9063	Symbol	& oldst		6165						
ANR	9064	Symbol	where		6165						
ANR	9065	Symbol	outstate		6165						
ANR	9066	Symbol	using_plan_a		6165						
ANR	9067	Symbol	exit_failure		6165						
ANR	9068	Symbol	inname		6165						
ANR	9069	Symbol	S_ISLNK		6165						
ANR	9070	Symbol	getenv		6165						
ANR	9071	Symbol	serrbuf		6165						
ANR	9072	Symbol	RO_IGNORE		6165						
ANR	9073	Symbol	locate_hunk		6165						
ANR	9074	Symbol	diff_type		6165						
ANR	9075	Symbol	bufsize		6165						
ANR	9076	Symbol	i		6165						
ANR	9077	Symbol	fstat		6165						
ANR	9078	Symbol	TMPREJNAME		6165						
ANR	9079	Symbol	out_offset		6165						
ANR	9080	Symbol	get_version		6165						
ANR	9081	Symbol	ENOENT		6165						
ANR	9082	Symbol	reverse		6165						
ANR	9083	Symbol	old_mode		6165						
ANR	9084	Symbol	mymaxfuzz		6165						
ANR	9085	Symbol	& outstate		6165						
ANR	9086	Symbol	buf		6165						
ANR	9087	Symbol	s		6165						
ANR	9088	Symbol	numbuf		6165						
ANR	9089	Symbol	mismatch		6165						
ANR	9090	Symbol	skip_rest_of_patch		6165						
ANR	9091	Symbol	make_backups		6165						
ANR	9092	Symbol	spew_output		6165						
ANR	9093	Symbol	pch_suffix_context		6165						
ANR	9094	Symbol	apply_anyway		6165						
ANR	9095	Symbol	tmpoutst . st_size		6165						
ANR	9096	Symbol	fuzz		6165						
ANR	9097	Symbol	* len		6165						
ANR	9098	Symbol	simple_backup_suffix		6165						
ANR	9099	Symbol	& somefailed		6165						
ANR	9100	Symbol	remove_empty_files		6165						
ANR	9101	Symbol	written_to_rejname		6165						
ANR	9102	Symbol	& rejst		6165						
ANR	9103	Symbol	& TMPREJNAME_needs_removal		6165						
ANR	9104	Symbol	oldst		6165						
ANR	9105	Symbol	instat		6165						
ANR	9106	Symbol	skip_reject_file		6165						
ANR	9107	Symbol	* argv		6165						
ANR	9108	Symbol	simple_backups		6165						
ANR	9109	Symbol	mode		6165						
ANR	9110	Symbol	shell_quoting_style		6165						
ANR	9111	Symbol	strlen		6165						
ANR	9112	Symbol	read_only_behavior		6165						
ANR	9113	Symbol	file_type		6165						
ANR	9114	Symbol	& TMPOUTNAME_needs_removal		6165						
ANR	9115	Symbol	& instat		6165						
ANR	9116	Symbol	rej		6165						
ANR	9117	Symbol	EXDEV		6165						
ANR	9118	Symbol	got_hunk		6165						
ANR	9119	Symbol	in_offset		6165						
ANR	9120	Symbol	ELOOP		6165						
ANR	9121	Symbol	FA_MODE		6165						
ANR	9122	Symbol	posixly_correct		6165						
ANR	9123	Symbol	GIT_BINARY_DIFF		6165						
ANR	9124	Symbol	ok_to_reverse		6165						
ANR	9125	Symbol	SILENT		6165						
ANR	9126	Symbol	strcmp		6165						
ANR	9127	Symbol	patchname		6165						
ANR	9128	Symbol	NULL		6165						
ANR	9129	Symbol	outstate . ofp		6165						
ANR	9130	Symbol	failed		6165						
ANR	9131	Symbol	stderr		6165						
ANR	9132	Symbol	backup_if_mismatch		6165						
ANR	9133	Symbol	S_IFREG		6165						
ANR	9134	Symbol	numeric_string		6165						
ANR	9135	Symbol	outstat		6165						
ANR	9136	Symbol	get_input_file		6165						
ANR	9137	Symbol	ferror		6165						
ANR	9138	Symbol	patch_get		6165						
ANR	9139	Symbol	reverse_flag_specified		6165						
ANR	9140	Symbol	true		6165						
ANR	9141	Symbol	RO_WARN		6165						
ANR	9142	Symbol	dry_run		6165						
ANR	9143	Symbol	hunk		6165						
ANR	9144	Symbol	pch_git_diff		6165						
ANR	9145	Symbol	instat . st_size		6165						
ANR	9146	Symbol	pch_first		6165						
ANR	9147	Symbol	pch_mode		6165						
ANR	9148	Symbol	& TMPOUTNAME		6165						
ANR	9149	Symbol	* rej		6165						
ANR	9150	Symbol	quotearg		6165						
ANR	9151	Symbol	merge_hunk		6165						
ANR	9152	Symbol	& tmpoutst		6165						
ANR	9153	Symbol	open_outfile		6165						
ANR	9154	Symbol	make_tempfile		6165						
ANR	9155	Symbol	somefailed		6165						
ANR	9156	Symbol	outfile		6165						
ANR	9157	Symbol	pch_name		6165						
ANR	9158	Symbol	pch_swap		6165						
ANR	9159	Symbol	outname		6165						
ANR	9160	Symbol	& outstat		6165						
ANR	9161	Symbol	outerrno		6165						
ANR	9162	Symbol	fdopen		6165						
ANR	9163	Symbol	argv		6165						
ANR	9164	Symbol	quoting_style_args		6165						
ANR	9165	Symbol	apply_empty_patch		6165						
ANR	9166	Symbol	CREATED		6165						
ANR	9167	Symbol	rejfp		6165						
ANR	9168	Symbol	set_time		6165						
ANR	9169	Symbol	ED_DIFF		6165						
ANR	9170	Symbol	stat_file		6165						
ANR	9171	Symbol	outstate . zero_output		6165						
ANR	9172	Symbol	get_stat_mtime		6165						
ANR	9173	Symbol	VERBOSE		6165						
ANR	9174	Symbol	attr		6165						
ANR	9175	Symbol	outfd		6165						
ANR	9176	Symbol	argc		6165						
ANR	9177	Symbol	lookup_file_id		6165						
ANR	9178	Symbol	timespec_cmp		6165						
ANR	9179	Symbol	strippath		6165						
ANR	9180	Symbol	argmatch		6165						
ANR	9181	Symbol	fclose		6165						
ANR	9182	Symbol	false		6165						
ANR	9183	Symbol	version_control		6165						
ANR	9184	Symbol	maxfuzz		6165						
ANR	9185	Symbol	W_OK		6165						
ANR	9186	Symbol	find_backup_file_name		6165						
ANR	9187	Symbol	pch_prefix_context		6165						
ANR	9188	Symbol	pch_says_nonexistent		6165						
ANR	9189	Symbol	Argc		6165						
ANR	9190	Symbol	pch_copy		6165						
ANR	9191	Symbol	another_hunk		6165						
ANR	9192	Symbol	apply_hunk		6165						
ANR	9193	Symbol	new_mode		6165						
ANR	9194	Symbol	check_line_endings		6165						
ANR	9195	Symbol	tmpoutst		6165						
ANR	9196	Symbol	there_is_another_patch		6165						
ANR	9197	Symbol	O_WRONLY		6165						
ANR	9198	Symbol	renamed		6165						
ANR	9199	Symbol	verbosity		6165						
ANR	9200	Symbol	have_git_diff		6165						
ANR	9201	Function	reinitialize_almost_everything	693:0:19023:19426							
ANR	9202	FunctionDef	reinitialize_almost_everything ()		9201	0					
ANR	9203	CompoundStatement		695:0:19073:19426	9201	0					
ANR	9204	ExpressionStatement	re_patch ( )	696:4:19079:19089	9201	0	True				
ANR	9205	CallExpression	re_patch ( )		9201	0					
ANR	9206	Callee	re_patch		9201	0					
ANR	9207	Identifier	re_patch		9201	0					
ANR	9208	ArgumentList			9201	1					
ANR	9209	ExpressionStatement	re_input ( )	697:4:19095:19105	9201	1	True				
ANR	9210	CallExpression	re_input ( )		9201	0					
ANR	9211	Callee	re_input		9201	0					
ANR	9212	Identifier	re_input		9201	0					
ANR	9213	ArgumentList			9201	1					
ANR	9214	ExpressionStatement	input_lines = 0	699:4:19112:19127	9201	2	True				
ANR	9215	AssignmentExpression	input_lines = 0		9201	0		=			
ANR	9216	Identifier	input_lines		9201	0					
ANR	9217	PrimaryExpression	0		9201	1					
ANR	9218	ExpressionStatement	last_frozen_line = 0	700:4:19133:19153	9201	3	True				
ANR	9219	AssignmentExpression	last_frozen_line = 0		9201	0		=			
ANR	9220	Identifier	last_frozen_line		9201	0					
ANR	9221	PrimaryExpression	0		9201	1					
ANR	9222	IfStatement	if ( inname && ! explicit_inname )		9201	4					
ANR	9223	Condition	inname && ! explicit_inname	702:8:19164:19190	9201	0	True				
ANR	9224	AndExpression	inname && ! explicit_inname		9201	0		&&			
ANR	9225	Identifier	inname		9201	0					
ANR	9226	UnaryOperationExpression	! explicit_inname		9201	1					
ANR	9227	UnaryOperator	!		9201	0					
ANR	9228	Identifier	explicit_inname		9201	1					
ANR	9229	CompoundStatement		8:37:119:119	9201	1					
ANR	9230	ExpressionStatement	free ( inname )	703:1:19196:19209	9201	0	True				
ANR	9231	CallExpression	free ( inname )		9201	0					
ANR	9232	Callee	free		9201	0					
ANR	9233	Identifier	free		9201	0					
ANR	9234	ArgumentList	inname		9201	1					
ANR	9235	Argument	inname		9201	0					
ANR	9236	Identifier	inname		9201	0					
ANR	9237	ExpressionStatement	inname = 0	704:1:19212:19222	9201	1	True				
ANR	9238	AssignmentExpression	inname = 0		9201	0		=			
ANR	9239	Identifier	inname		9201	0					
ANR	9240	PrimaryExpression	0		9201	1					
ANR	9241	ExpressionStatement	in_offset = 0	707:4:19235:19248	9201	5	True				
ANR	9242	AssignmentExpression	in_offset = 0		9201	0		=			
ANR	9243	Identifier	in_offset		9201	0					
ANR	9244	PrimaryExpression	0		9201	1					
ANR	9245	ExpressionStatement	out_offset = 0	708:4:19254:19268	9201	6	True				
ANR	9246	AssignmentExpression	out_offset = 0		9201	0		=			
ANR	9247	Identifier	out_offset		9201	0					
ANR	9248	PrimaryExpression	0		9201	1					
ANR	9249	ExpressionStatement	diff_type = NO_DIFF	710:4:19275:19294	9201	7	True				
ANR	9250	AssignmentExpression	diff_type = NO_DIFF		9201	0		=			
ANR	9251	Identifier	diff_type		9201	0					
ANR	9252	Identifier	NO_DIFF		9201	1					
ANR	9253	IfStatement	if ( revision )		9201	8					
ANR	9254	Condition	revision	712:8:19305:19312	9201	0	True				
ANR	9255	Identifier	revision		9201	0					
ANR	9256	CompoundStatement		18:18:241:241	9201	1					
ANR	9257	ExpressionStatement	free ( revision )	713:1:19318:19332	9201	0	True				
ANR	9258	CallExpression	free ( revision )		9201	0					
ANR	9259	Callee	free		9201	0					
ANR	9260	Identifier	free		9201	0					
ANR	9261	ArgumentList	revision		9201	1					
ANR	9262	Argument	revision		9201	0					
ANR	9263	Identifier	revision		9201	0					
ANR	9264	ExpressionStatement	revision = 0	714:1:19335:19347	9201	1	True				
ANR	9265	AssignmentExpression	revision = 0		9201	0		=			
ANR	9266	Identifier	revision		9201	0					
ANR	9267	PrimaryExpression	0		9201	1					
ANR	9268	ExpressionStatement	reverse = reverse_flag_specified	717:4:19360:19392	9201	9	True				
ANR	9269	AssignmentExpression	reverse = reverse_flag_specified		9201	0		=			
ANR	9270	Identifier	reverse		9201	0					
ANR	9271	Identifier	reverse_flag_specified		9201	1					
ANR	9272	ExpressionStatement	skip_rest_of_patch = false	718:4:19398:19424	9201	10	True				
ANR	9273	AssignmentExpression	skip_rest_of_patch = false		9201	0		=			
ANR	9274	Identifier	skip_rest_of_patch		9201	0					
ANR	9275	Identifier	false		9201	1					
ANR	9276	ReturnType	static void		9201	1					
ANR	9277	Identifier	reinitialize_almost_everything		9201	2					
ANR	9278	ParameterList			9201	3					
ANR	9279	CFGEntryNode	ENTRY		9201		True				
ANR	9280	CFGExitNode	EXIT		9201		True				
ANR	9281	Symbol	input_lines		9201						
ANR	9282	Symbol	explicit_inname		9201						
ANR	9283	Symbol	diff_type		9201						
ANR	9284	Symbol	false		9201						
ANR	9285	Symbol	last_frozen_line		9201						
ANR	9286	Symbol	out_offset		9201						
ANR	9287	Symbol	NO_DIFF		9201						
ANR	9288	Symbol	reverse		9201						
ANR	9289	Symbol	revision		9201						
ANR	9290	Symbol	in_offset		9201						
ANR	9291	Symbol	reverse_flag_specified		9201						
ANR	9292	Symbol	skip_rest_of_patch		9201						
ANR	9293	Symbol	inname		9201						
ANR	9294	DeclStmt									
ANR	9295	Decl							char const	char const [ ]	shortopts
ANR	9296	DeclStmt									
ANR	9297	Decl							struct option const	struct option const [ ]	longopts
ANR	9298	Function	usage	847:0:24698:25104							
ANR	9299	FunctionDef	"usage (FILE * stream , int status)"		9298	0					
ANR	9300	CompoundStatement		849:0:24743:25104	9298	0					
ANR	9301	Statement	char	850:2:24747:24750	9298	0	True				
ANR	9302	Statement	const	850:7:24752:24756	9298	1	True				
ANR	9303	Statement	*	850:13:24758:24758	9298	2	True				
ANR	9304	Statement	const	850:15:24760:24764	9298	3	True				
ANR	9305	ExpressionStatement	* p	850:21:24766:24768	9298	4	True				
ANR	9306	UnaryOperationExpression	* p		9298	0					
ANR	9307	UnaryOperator	*		9298	0					
ANR	9308	Identifier	p		9298	1					
ANR	9309	IfStatement	if ( status != 0 )		9298	5					
ANR	9310	Condition	status != 0	852:6:24777:24787	9298	0	True				
ANR	9311	EqualityExpression	status != 0		9298	0		!=			
ANR	9312	Identifier	status		9298	0					
ANR	9313	PrimaryExpression	0		9298	1					
ANR	9314	CompoundStatement		5:4:50:50	9298	1					
ANR	9315	ExpressionStatement	"fprintf ( stream , ""%s: Try '%s --help' for more information.\\n"" , program_name , Argv [ 0 ] )"	854:6:24802:24896	9298	0	True				
ANR	9316	CallExpression	"fprintf ( stream , ""%s: Try '%s --help' for more information.\\n"" , program_name , Argv [ 0 ] )"		9298	0					
ANR	9317	Callee	fprintf		9298	0					
ANR	9318	Identifier	fprintf		9298	0					
ANR	9319	ArgumentList	stream		9298	1					
ANR	9320	Argument	stream		9298	0					
ANR	9321	Identifier	stream		9298	0					
ANR	9322	Argument	"""%s: Try '%s --help' for more information.\\n"""		9298	1					
ANR	9323	PrimaryExpression	"""%s: Try '%s --help' for more information.\\n"""		9298	0					
ANR	9324	Argument	program_name		9298	2					
ANR	9325	Identifier	program_name		9298	0					
ANR	9326	Argument	Argv [ 0 ]		9298	3					
ANR	9327	ArrayIndexing	Argv [ 0 ]		9298	0					
ANR	9328	Identifier	Argv		9298	0					
ANR	9329	PrimaryExpression	0		9298	1					
ANR	9330	ElseStatement	else		9298	0					
ANR	9331	CompoundStatement		10:4:171:171	9298	0					
ANR	9332	ExpressionStatement	"fprintf ( stream , ""Usage: %s [OPTION]... [ORIGFILE [PATCHFILE]]\\n\\n"" , Argv [ 0 ] )"	859:6:24923:25008	9298	0	True				
ANR	9333	CallExpression	"fprintf ( stream , ""Usage: %s [OPTION]... [ORIGFILE [PATCHFILE]]\\n\\n"" , Argv [ 0 ] )"		9298	0					
ANR	9334	Callee	fprintf		9298	0					
ANR	9335	Identifier	fprintf		9298	0					
ANR	9336	ArgumentList	stream		9298	1					
ANR	9337	Argument	stream		9298	0					
ANR	9338	Identifier	stream		9298	0					
ANR	9339	Argument	"""Usage: %s [OPTION]... [ORIGFILE [PATCHFILE]]\\n\\n"""		9298	1					
ANR	9340	PrimaryExpression	"""Usage: %s [OPTION]... [ORIGFILE [PATCHFILE]]\\n\\n"""		9298	0					
ANR	9341	Argument	Argv [ 0 ]		9298	2					
ANR	9342	ArrayIndexing	Argv [ 0 ]		9298	0					
ANR	9343	Identifier	Argv		9298	0					
ANR	9344	PrimaryExpression	0		9298	1					
ANR	9345	ForStatement	for ( p = option_help ; * p ; p ++ )		9298	1					
ANR	9346	ForInit	p = option_help ;	861:11:25021:25036	9298	0	True				
ANR	9347	AssignmentExpression	p = option_help		9298	0		=			
ANR	9348	Identifier	p		9298	0					
ANR	9349	Identifier	option_help		9298	1					
ANR	9350	Condition	* p	861:29:25039:25040	9298	1	True				
ANR	9351	UnaryOperationExpression	* p		9298	0					
ANR	9352	UnaryOperator	*		9298	0					
ANR	9353	Identifier	p		9298	1					
ANR	9354	PostIncDecOperationExpression	p ++	861:34:25044:25046	9298	2	True				
ANR	9355	Identifier	p		9298	0					
ANR	9356	IncDec	++		9298	1					
ANR	9357	ExpressionStatement	"fprintf ( stream , ""%s\\n"" , * p )"	862:1:25050:25078	9298	3	True				
ANR	9358	CallExpression	"fprintf ( stream , ""%s\\n"" , * p )"		9298	0					
ANR	9359	Callee	fprintf		9298	0					
ANR	9360	Identifier	fprintf		9298	0					
ANR	9361	ArgumentList	stream		9298	1					
ANR	9362	Argument	stream		9298	0					
ANR	9363	Identifier	stream		9298	0					
ANR	9364	Argument	"""%s\\n"""		9298	1					
ANR	9365	PrimaryExpression	"""%s\\n"""		9298	0					
ANR	9366	Argument	* p		9298	2					
ANR	9367	UnaryOperationExpression	* p		9298	0					
ANR	9368	UnaryOperator	*		9298	0					
ANR	9369	Identifier	p		9298	1					
ANR	9370	ExpressionStatement	exit ( status )	865:2:25089:25102	9298	6	True				
ANR	9371	CallExpression	exit ( status )		9298	0					
ANR	9372	Callee	exit		9298	0					
ANR	9373	Identifier	exit		9298	0					
ANR	9374	ArgumentList	status		9298	1					
ANR	9375	Argument	status		9298	0					
ANR	9376	Identifier	status		9298	0					
ANR	9377	ReturnType	static void		9298	1					
ANR	9378	Identifier	usage		9298	2					
ANR	9379	ParameterList	"FILE * stream , int status"		9298	3					
ANR	9380	Parameter	FILE * stream	848:7:24717:24728	9298	0	True				
ANR	9381	ParameterType	FILE *		9298	0					
ANR	9382	Identifier	stream		9298	1					
ANR	9383	Parameter	int status	848:21:24731:24740	9298	1	True				
ANR	9384	ParameterType	int		9298	0					
ANR	9385	Identifier	status		9298	1					
ANR	9386	CFGEntryNode	ENTRY		9298		True				
ANR	9387	CFGExitNode	EXIT		9298		True				
ANR	9388	Symbol	p		9298						
ANR	9389	Symbol	stream		9298						
ANR	9390	Symbol	option_help		9298						
ANR	9391	Symbol	program_name		9298						
ANR	9392	Symbol	* p		9298						
ANR	9393	Symbol	* Argv		9298						
ANR	9394	Symbol	status		9298						
ANR	9395	Symbol	Argv		9298						
ANR	9396	Function	get_some_switches	870:0:25147:29952							
ANR	9397	FunctionDef	get_some_switches ()		9396	0					
ANR	9398	CompoundStatement		872:0:25184:29952	9396	0					
ANR	9399	IdentifierDeclStatement	int optc ;	873:4:25190:25198	9396	0	True				
ANR	9400	IdentifierDecl	optc		9396	0					
ANR	9401	IdentifierDeclType	int		9396	0					
ANR	9402	Identifier	optc		9396	1					
ANR	9403	ExpressionStatement	free ( rejname )	875:4:25205:25219	9396	1	True				
ANR	9404	CallExpression	free ( rejname )		9396	0					
ANR	9405	Callee	free		9396	0					
ANR	9406	Identifier	free		9396	0					
ANR	9407	ArgumentList	rejname		9396	1					
ANR	9408	Argument	rejname		9396	0					
ANR	9409	Identifier	rejname		9396	0					
ANR	9410	ExpressionStatement	rejname = 0	876:4:25225:25236	9396	2	True				
ANR	9411	AssignmentExpression	rejname = 0		9396	0		=			
ANR	9412	Identifier	rejname		9396	0					
ANR	9413	PrimaryExpression	0		9396	1					
ANR	9414	IfStatement	if ( optind == Argc )		9396	3					
ANR	9415	Condition	optind == Argc	877:8:25246:25259	9396	0	True				
ANR	9416	EqualityExpression	optind == Argc		9396	0		==			
ANR	9417	Identifier	optind		9396	0					
ANR	9418	Identifier	Argc		9396	1					
ANR	9419	ReturnStatement	return ;	878:1:25263:25269	9396	1	True				
ANR	9420	WhileStatement	"while ( ( optc = getopt_long ( Argc , Argv , shortopts , longopts , ( int * ) 0 ) ) != - 1 )"		9396	4					
ANR	9421	Condition	"( optc = getopt_long ( Argc , Argv , shortopts , longopts , ( int * ) 0 ) ) != - 1"	879:11:25282:25356	9396	0	True				
ANR	9422	EqualityExpression	"( optc = getopt_long ( Argc , Argv , shortopts , longopts , ( int * ) 0 ) ) != - 1"		9396	0		!=			
ANR	9423	AssignmentExpression	"optc = getopt_long ( Argc , Argv , shortopts , longopts , ( int * ) 0 )"		9396	0		=			
ANR	9424	Identifier	optc		9396	0					
ANR	9425	CallExpression	"getopt_long ( Argc , Argv , shortopts , longopts , ( int * ) 0 )"		9396	1					
ANR	9426	Callee	getopt_long		9396	0					
ANR	9427	Identifier	getopt_long		9396	0					
ANR	9428	ArgumentList	Argc		9396	1					
ANR	9429	Argument	Argc		9396	0					
ANR	9430	Identifier	Argc		9396	0					
ANR	9431	Argument	Argv		9396	1					
ANR	9432	Identifier	Argv		9396	0					
ANR	9433	Argument	shortopts		9396	2					
ANR	9434	Identifier	shortopts		9396	0					
ANR	9435	Argument	longopts		9396	3					
ANR	9436	Identifier	longopts		9396	0					
ANR	9437	Argument	( int * ) 0		9396	4					
ANR	9438	CastExpression	( int * ) 0		9396	0					
ANR	9439	CastTarget	int *		9396	0					
ANR	9440	PrimaryExpression	0		9396	1					
ANR	9441	UnaryOperationExpression	- 1		9396	1					
ANR	9442	UnaryOperator	-		9396	0					
ANR	9443	PrimaryExpression	1		9396	1					
ANR	9444	CompoundStatement		9:11:174:174	9396	1					
ANR	9445	SwitchStatement	switch ( optc )		9396	0					
ANR	9446	Condition	optc	881:9:25370:25373	9396	0	True				
ANR	9447	Identifier	optc		9396	0					
ANR	9448	CompoundStatement		10:15:191:191	9396	1					
ANR	9449	Label	case 'b' :	882:5:25383:25391	9396	0	True				
ANR	9450	ExpressionStatement	make_backups = true	883:2:25395:25414	9396	1	True				
ANR	9451	AssignmentExpression	make_backups = true		9396	0		=			
ANR	9452	Identifier	make_backups		9396	0					
ANR	9453	Identifier	true		9396	1					
ANR	9454	IfStatement	"if ( Argc - optind == 3 && strcmp ( Argv [ optind - 1 ] , ""-b"" ) == 0 && ! ( Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ] ) && ! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] ) && ! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] ) )"		9396	2					
ANR	9455	Condition	"Argc - optind == 3 && strcmp ( Argv [ optind - 1 ] , ""-b"" ) == 0 && ! ( Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ] ) && ! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] ) && ! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] )"	887:6:25587:25839	9396	0	True				
ANR	9456	AndExpression	"Argc - optind == 3 && strcmp ( Argv [ optind - 1 ] , ""-b"" ) == 0 && ! ( Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ] ) && ! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] ) && ! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] )"		9396	0		&&			
ANR	9457	EqualityExpression	Argc - optind == 3		9396	0		==			
ANR	9458	AdditiveExpression	Argc - optind		9396	0		-			
ANR	9459	Identifier	Argc		9396	0					
ANR	9460	Identifier	optind		9396	1					
ANR	9461	PrimaryExpression	3		9396	1					
ANR	9462	AndExpression	"strcmp ( Argv [ optind - 1 ] , ""-b"" ) == 0 && ! ( Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ] ) && ! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] ) && ! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] )"		9396	1		&&			
ANR	9463	EqualityExpression	"strcmp ( Argv [ optind - 1 ] , ""-b"" ) == 0"		9396	0		==			
ANR	9464	CallExpression	"strcmp ( Argv [ optind - 1 ] , ""-b"" )"		9396	0					
ANR	9465	Callee	strcmp		9396	0					
ANR	9466	Identifier	strcmp		9396	0					
ANR	9467	ArgumentList	Argv [ optind - 1 ]		9396	1					
ANR	9468	Argument	Argv [ optind - 1 ]		9396	0					
ANR	9469	ArrayIndexing	Argv [ optind - 1 ]		9396	0					
ANR	9470	Identifier	Argv		9396	0					
ANR	9471	AdditiveExpression	optind - 1		9396	1		-			
ANR	9472	Identifier	optind		9396	0					
ANR	9473	PrimaryExpression	1		9396	1					
ANR	9474	Argument	"""-b"""		9396	1					
ANR	9475	PrimaryExpression	"""-b"""		9396	0					
ANR	9476	PrimaryExpression	0		9396	1					
ANR	9477	AndExpression	! ( Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ] ) && ! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] ) && ! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] )		9396	1		&&			
ANR	9478	UnaryOperationExpression	! ( Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ] )		9396	0					
ANR	9479	UnaryOperator	!		9396	0					
ANR	9480	AndExpression	Argv [ optind + 0 ] [ 0 ] == '-' && Argv [ optind + 0 ] [ 1 ]		9396	1		&&			
ANR	9481	EqualityExpression	Argv [ optind + 0 ] [ 0 ] == '-'		9396	0		==			
ANR	9482	ArrayIndexing	Argv [ optind + 0 ] [ 0 ]		9396	0					
ANR	9483	ArrayIndexing	Argv [ optind + 0 ]		9396	0					
ANR	9484	Identifier	Argv		9396	0					
ANR	9485	AdditiveExpression	optind + 0		9396	1		+			
ANR	9486	Identifier	optind		9396	0					
ANR	9487	PrimaryExpression	0		9396	1					
ANR	9488	PrimaryExpression	0		9396	1					
ANR	9489	PrimaryExpression	'-'		9396	1					
ANR	9490	ArrayIndexing	Argv [ optind + 0 ] [ 1 ]		9396	1					
ANR	9491	ArrayIndexing	Argv [ optind + 0 ]		9396	0					
ANR	9492	Identifier	Argv		9396	0					
ANR	9493	AdditiveExpression	optind + 0		9396	1		+			
ANR	9494	Identifier	optind		9396	0					
ANR	9495	PrimaryExpression	0		9396	1					
ANR	9496	PrimaryExpression	1		9396	1					
ANR	9497	AndExpression	! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] ) && ! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] )		9396	1		&&			
ANR	9498	UnaryOperationExpression	! ( Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ] )		9396	0					
ANR	9499	UnaryOperator	!		9396	0					
ANR	9500	AndExpression	Argv [ optind + 1 ] [ 0 ] == '-' && Argv [ optind + 1 ] [ 1 ]		9396	1		&&			
ANR	9501	EqualityExpression	Argv [ optind + 1 ] [ 0 ] == '-'		9396	0		==			
ANR	9502	ArrayIndexing	Argv [ optind + 1 ] [ 0 ]		9396	0					
ANR	9503	ArrayIndexing	Argv [ optind + 1 ]		9396	0					
ANR	9504	Identifier	Argv		9396	0					
ANR	9505	AdditiveExpression	optind + 1		9396	1		+			
ANR	9506	Identifier	optind		9396	0					
ANR	9507	PrimaryExpression	1		9396	1					
ANR	9508	PrimaryExpression	0		9396	1					
ANR	9509	PrimaryExpression	'-'		9396	1					
ANR	9510	ArrayIndexing	Argv [ optind + 1 ] [ 1 ]		9396	1					
ANR	9511	ArrayIndexing	Argv [ optind + 1 ]		9396	0					
ANR	9512	Identifier	Argv		9396	0					
ANR	9513	AdditiveExpression	optind + 1		9396	1		+			
ANR	9514	Identifier	optind		9396	0					
ANR	9515	PrimaryExpression	1		9396	1					
ANR	9516	PrimaryExpression	1		9396	1					
ANR	9517	UnaryOperationExpression	! ( Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ] )		9396	1					
ANR	9518	UnaryOperator	!		9396	0					
ANR	9519	AndExpression	Argv [ optind + 2 ] [ 0 ] == '-' && Argv [ optind + 2 ] [ 1 ]		9396	1		&&			
ANR	9520	EqualityExpression	Argv [ optind + 2 ] [ 0 ] == '-'		9396	0		==			
ANR	9521	ArrayIndexing	Argv [ optind + 2 ] [ 0 ]		9396	0					
ANR	9522	ArrayIndexing	Argv [ optind + 2 ]		9396	0					
ANR	9523	Identifier	Argv		9396	0					
ANR	9524	AdditiveExpression	optind + 2		9396	1		+			
ANR	9525	Identifier	optind		9396	0					
ANR	9526	PrimaryExpression	2		9396	1					
ANR	9527	PrimaryExpression	0		9396	1					
ANR	9528	PrimaryExpression	'-'		9396	1					
ANR	9529	ArrayIndexing	Argv [ optind + 2 ] [ 1 ]		9396	1					
ANR	9530	ArrayIndexing	Argv [ optind + 2 ]		9396	0					
ANR	9531	Identifier	Argv		9396	0					
ANR	9532	AdditiveExpression	optind + 2		9396	1		+			
ANR	9533	Identifier	optind		9396	0					
ANR	9534	PrimaryExpression	2		9396	1					
ANR	9535	PrimaryExpression	1		9396	1					
ANR	9536	CompoundStatement		21:4:661:661	9396	1					
ANR	9537	ExpressionStatement	optarg = Argv [ optind ++ ]	893:6:25854:25877	9396	0	True				
ANR	9538	AssignmentExpression	optarg = Argv [ optind ++ ]		9396	0		=			
ANR	9539	Identifier	optarg		9396	0					
ANR	9540	ArrayIndexing	Argv [ optind ++ ]		9396	1					
ANR	9541	Identifier	Argv		9396	0					
ANR	9542	PostIncDecOperationExpression	optind ++		9396	1					
ANR	9543	Identifier	optind		9396	0					
ANR	9544	IncDec	++		9396	1					
ANR	9545	IfStatement	if ( verbosity != SILENT )		9396	1					
ANR	9546	Condition	verbosity != SILENT	894:10:25889:25907	9396	0	True				
ANR	9547	EqualityExpression	verbosity != SILENT		9396	0		!=			
ANR	9548	Identifier	verbosity		9396	0					
ANR	9549	Identifier	SILENT		9396	1					
ANR	9550	ExpressionStatement	"say ( ""warning: the '-b %s' option is obsolete; use '-b -z %s' instead\\n"" , optarg , optarg )"	895:8:25918:26013	9396	1	True				
ANR	9551	CallExpression	"say ( ""warning: the '-b %s' option is obsolete; use '-b -z %s' instead\\n"" , optarg , optarg )"		9396	0					
ANR	9552	Callee	say		9396	0					
ANR	9553	Identifier	say		9396	0					
ANR	9554	ArgumentList	"""warning: the '-b %s' option is obsolete; use '-b -z %s' instead\\n"""		9396	1					
ANR	9555	Argument	"""warning: the '-b %s' option is obsolete; use '-b -z %s' instead\\n"""		9396	0					
ANR	9556	PrimaryExpression	"""warning: the '-b %s' option is obsolete; use '-b -z %s' instead\\n"""		9396	0					
ANR	9557	Argument	optarg		9396	1					
ANR	9558	Identifier	optarg		9396	0					
ANR	9559	Argument	optarg		9396	2					
ANR	9560	Identifier	optarg		9396	0					
ANR	9561	GotoStatement	goto case_z ;	897:6:26021:26032	9396	2	True				
ANR	9562	Identifier	case_z		9396	0					
ANR	9563	BreakStatement	break ;	899:2:26042:26047	9396	3	True				
ANR	9564	Label	case 'B' :	900:5:26054:26062	9396	4	True				
ANR	9565	IfStatement	if ( ! * optarg )		9396	5					
ANR	9566	Condition	! * optarg	901:6:26070:26077	9396	0	True				
ANR	9567	UnaryOperationExpression	! * optarg		9396	0					
ANR	9568	UnaryOperator	!		9396	0					
ANR	9569	UnaryOperationExpression	* optarg		9396	1					
ANR	9570	UnaryOperator	*		9396	0					
ANR	9571	Identifier	optarg		9396	1					
ANR	9572	ExpressionStatement	"fatal ( ""backup prefix is empty"" )"	902:4:26084:26116	9396	1	True				
ANR	9573	CallExpression	"fatal ( ""backup prefix is empty"" )"		9396	0					
ANR	9574	Callee	fatal		9396	0					
ANR	9575	Identifier	fatal		9396	0					
ANR	9576	ArgumentList	"""backup prefix is empty"""		9396	1					
ANR	9577	Argument	"""backup prefix is empty"""		9396	0					
ANR	9578	PrimaryExpression	"""backup prefix is empty"""		9396	0					
ANR	9579	ExpressionStatement	origprae = xstrdup ( optarg )	903:2:26120:26147	9396	6	True				
ANR	9580	AssignmentExpression	origprae = xstrdup ( optarg )		9396	0		=			
ANR	9581	Identifier	origprae		9396	0					
ANR	9582	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9583	Callee	xstrdup		9396	0					
ANR	9584	Identifier	xstrdup		9396	0					
ANR	9585	ArgumentList	optarg		9396	1					
ANR	9586	Argument	optarg		9396	0					
ANR	9587	Identifier	optarg		9396	0					
ANR	9588	BreakStatement	break ;	904:2:26151:26156	9396	7	True				
ANR	9589	Label	case 'c' :	905:5:26163:26171	9396	8	True				
ANR	9590	ExpressionStatement	diff_type = CONTEXT_DIFF	906:2:26175:26199	9396	9	True				
ANR	9591	AssignmentExpression	diff_type = CONTEXT_DIFF		9396	0		=			
ANR	9592	Identifier	diff_type		9396	0					
ANR	9593	Identifier	CONTEXT_DIFF		9396	1					
ANR	9594	BreakStatement	break ;	907:2:26203:26208	9396	10	True				
ANR	9595	Label	case 'd' :	908:5:26215:26223	9396	11	True				
ANR	9596	IfStatement	if ( chdir ( optarg ) < 0 )		9396	12					
ANR	9597	Condition	chdir ( optarg ) < 0	909:6:26231:26247	9396	0	True				
ANR	9598	RelationalExpression	chdir ( optarg ) < 0		9396	0		<			
ANR	9599	CallExpression	chdir ( optarg )		9396	0					
ANR	9600	Callee	chdir		9396	0					
ANR	9601	Identifier	chdir		9396	0					
ANR	9602	ArgumentList	optarg		9396	1					
ANR	9603	Argument	optarg		9396	0					
ANR	9604	Identifier	optarg		9396	0					
ANR	9605	PrimaryExpression	0		9396	1					
ANR	9606	ExpressionStatement	"pfatal ( ""Can't change to directory %s"" , quotearg ( optarg ) )"	910:4:26254:26312	9396	1	True				
ANR	9607	CallExpression	"pfatal ( ""Can't change to directory %s"" , quotearg ( optarg ) )"		9396	0					
ANR	9608	Callee	pfatal		9396	0					
ANR	9609	Identifier	pfatal		9396	0					
ANR	9610	ArgumentList	"""Can't change to directory %s"""		9396	1					
ANR	9611	Argument	"""Can't change to directory %s"""		9396	0					
ANR	9612	PrimaryExpression	"""Can't change to directory %s"""		9396	0					
ANR	9613	Argument	quotearg ( optarg )		9396	1					
ANR	9614	CallExpression	quotearg ( optarg )		9396	0					
ANR	9615	Callee	quotearg		9396	0					
ANR	9616	Identifier	quotearg		9396	0					
ANR	9617	ArgumentList	optarg		9396	1					
ANR	9618	Argument	optarg		9396	0					
ANR	9619	Identifier	optarg		9396	0					
ANR	9620	BreakStatement	break ;	911:2:26316:26321	9396	13	True				
ANR	9621	Label	case 'D' :	912:5:26328:26336	9396	14	True				
ANR	9622	ExpressionStatement	do_defines = xstrdup ( optarg )	913:2:26340:26369	9396	15	True				
ANR	9623	AssignmentExpression	do_defines = xstrdup ( optarg )		9396	0		=			
ANR	9624	Identifier	do_defines		9396	0					
ANR	9625	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9626	Callee	xstrdup		9396	0					
ANR	9627	Identifier	xstrdup		9396	0					
ANR	9628	ArgumentList	optarg		9396	1					
ANR	9629	Argument	optarg		9396	0					
ANR	9630	Identifier	optarg		9396	0					
ANR	9631	BreakStatement	break ;	914:2:26373:26378	9396	16	True				
ANR	9632	Label	case 'e' :	915:5:26385:26393	9396	17	True				
ANR	9633	ExpressionStatement	diff_type = ED_DIFF	916:2:26397:26416	9396	18	True				
ANR	9634	AssignmentExpression	diff_type = ED_DIFF		9396	0		=			
ANR	9635	Identifier	diff_type		9396	0					
ANR	9636	Identifier	ED_DIFF		9396	1					
ANR	9637	BreakStatement	break ;	917:2:26420:26425	9396	19	True				
ANR	9638	Label	case 'E' :	918:5:26432:26440	9396	20	True				
ANR	9639	ExpressionStatement	remove_empty_files = true	919:2:26444:26469	9396	21	True				
ANR	9640	AssignmentExpression	remove_empty_files = true		9396	0		=			
ANR	9641	Identifier	remove_empty_files		9396	0					
ANR	9642	Identifier	true		9396	1					
ANR	9643	BreakStatement	break ;	920:2:26473:26478	9396	22	True				
ANR	9644	Label	case 'f' :	921:5:26485:26493	9396	23	True				
ANR	9645	ExpressionStatement	force = true	922:2:26497:26509	9396	24	True				
ANR	9646	AssignmentExpression	force = true		9396	0		=			
ANR	9647	Identifier	force		9396	0					
ANR	9648	Identifier	true		9396	1					
ANR	9649	BreakStatement	break ;	923:2:26513:26518	9396	25	True				
ANR	9650	Label	case 'F' :	924:5:26525:26533	9396	26	True				
ANR	9651	ExpressionStatement	"maxfuzz = numeric_string ( optarg , false , ""fuzz factor"" )"	925:2:26537:26592	9396	27	True				
ANR	9652	AssignmentExpression	"maxfuzz = numeric_string ( optarg , false , ""fuzz factor"" )"		9396	0		=			
ANR	9653	Identifier	maxfuzz		9396	0					
ANR	9654	CallExpression	"numeric_string ( optarg , false , ""fuzz factor"" )"		9396	1					
ANR	9655	Callee	numeric_string		9396	0					
ANR	9656	Identifier	numeric_string		9396	0					
ANR	9657	ArgumentList	optarg		9396	1					
ANR	9658	Argument	optarg		9396	0					
ANR	9659	Identifier	optarg		9396	0					
ANR	9660	Argument	false		9396	1					
ANR	9661	Identifier	false		9396	0					
ANR	9662	Argument	"""fuzz factor"""		9396	2					
ANR	9663	PrimaryExpression	"""fuzz factor"""		9396	0					
ANR	9664	BreakStatement	break ;	926:2:26596:26601	9396	28	True				
ANR	9665	Label	case 'g' :	927:5:26608:26616	9396	29	True				
ANR	9666	ExpressionStatement	"patch_get = numeric_string ( optarg , true , ""get option value"" )"	928:2:26620:26681	9396	30	True				
ANR	9667	AssignmentExpression	"patch_get = numeric_string ( optarg , true , ""get option value"" )"		9396	0		=			
ANR	9668	Identifier	patch_get		9396	0					
ANR	9669	CallExpression	"numeric_string ( optarg , true , ""get option value"" )"		9396	1					
ANR	9670	Callee	numeric_string		9396	0					
ANR	9671	Identifier	numeric_string		9396	0					
ANR	9672	ArgumentList	optarg		9396	1					
ANR	9673	Argument	optarg		9396	0					
ANR	9674	Identifier	optarg		9396	0					
ANR	9675	Argument	true		9396	1					
ANR	9676	Identifier	true		9396	0					
ANR	9677	Argument	"""get option value"""		9396	2					
ANR	9678	PrimaryExpression	"""get option value"""		9396	0					
ANR	9679	BreakStatement	break ;	929:2:26685:26690	9396	31	True				
ANR	9680	Label	case 'i' :	930:5:26697:26705	9396	32	True				
ANR	9681	ExpressionStatement	patchname = xstrdup ( optarg )	931:2:26709:26737	9396	33	True				
ANR	9682	AssignmentExpression	patchname = xstrdup ( optarg )		9396	0		=			
ANR	9683	Identifier	patchname		9396	0					
ANR	9684	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9685	Callee	xstrdup		9396	0					
ANR	9686	Identifier	xstrdup		9396	0					
ANR	9687	ArgumentList	optarg		9396	1					
ANR	9688	Argument	optarg		9396	0					
ANR	9689	Identifier	optarg		9396	0					
ANR	9690	BreakStatement	break ;	932:2:26741:26746	9396	34	True				
ANR	9691	Label	case 'l' :	933:5:26753:26761	9396	35	True				
ANR	9692	ExpressionStatement	canonicalize_ws = true	934:2:26765:26787	9396	36	True				
ANR	9693	AssignmentExpression	canonicalize_ws = true		9396	0		=			
ANR	9694	Identifier	canonicalize_ws		9396	0					
ANR	9695	Identifier	true		9396	1					
ANR	9696	BreakStatement	break ;	935:2:26791:26796	9396	37	True				
ANR	9697	Label	case 'm' :	937:5:26823:26831	9396	38	True				
ANR	9698	ExpressionStatement	merge = true	938:2:26835:26847	9396	39	True				
ANR	9699	AssignmentExpression	merge = true		9396	0		=			
ANR	9700	Identifier	merge		9396	0					
ANR	9701	Identifier	true		9396	1					
ANR	9702	IfStatement	if ( optarg )		9396	40					
ANR	9703	Condition	optarg	939:6:26855:26860	9396	0	True				
ANR	9704	Identifier	optarg		9396	0					
ANR	9705	CompoundStatement		69:4:1682:1682	9396	1					
ANR	9706	IfStatement	"if ( ! strcmp ( optarg , ""merge"" ) )"		9396	0					
ANR	9707	Condition	"! strcmp ( optarg , ""merge"" )"	941:10:26879:26904	9396	0	True				
ANR	9708	UnaryOperationExpression	"! strcmp ( optarg , ""merge"" )"		9396	0					
ANR	9709	UnaryOperator	!		9396	0					
ANR	9710	CallExpression	"strcmp ( optarg , ""merge"" )"		9396	1					
ANR	9711	Callee	strcmp		9396	0					
ANR	9712	Identifier	strcmp		9396	0					
ANR	9713	ArgumentList	optarg		9396	1					
ANR	9714	Argument	optarg		9396	0					
ANR	9715	Identifier	optarg		9396	0					
ANR	9716	Argument	"""merge"""		9396	1					
ANR	9717	PrimaryExpression	"""merge"""		9396	0					
ANR	9718	ExpressionStatement	conflict_style = MERGE_MERGE	942:8:26915:26943	9396	1	True				
ANR	9719	AssignmentExpression	conflict_style = MERGE_MERGE		9396	0		=			
ANR	9720	Identifier	conflict_style		9396	0					
ANR	9721	Identifier	MERGE_MERGE		9396	1					
ANR	9722	ElseStatement	else		9396	0					
ANR	9723	IfStatement	"if ( ! strcmp ( optarg , ""diff3"" ) )"		9396	0					
ANR	9724	Condition	"! strcmp ( optarg , ""diff3"" )"	943:15:26960:26985	9396	0	True				
ANR	9725	UnaryOperationExpression	"! strcmp ( optarg , ""diff3"" )"		9396	0					
ANR	9726	UnaryOperator	!		9396	0					
ANR	9727	CallExpression	"strcmp ( optarg , ""diff3"" )"		9396	1					
ANR	9728	Callee	strcmp		9396	0					
ANR	9729	Identifier	strcmp		9396	0					
ANR	9730	ArgumentList	optarg		9396	1					
ANR	9731	Argument	optarg		9396	0					
ANR	9732	Identifier	optarg		9396	0					
ANR	9733	Argument	"""diff3"""		9396	1					
ANR	9734	PrimaryExpression	"""diff3"""		9396	0					
ANR	9735	ExpressionStatement	conflict_style = MERGE_DIFF3	944:8:26996:27024	9396	1	True				
ANR	9736	AssignmentExpression	conflict_style = MERGE_DIFF3		9396	0		=			
ANR	9737	Identifier	conflict_style		9396	0					
ANR	9738	Identifier	MERGE_DIFF3		9396	1					
ANR	9739	ElseStatement	else		9396	0					
ANR	9740	ExpressionStatement	"usage ( stderr , 2 )"	946:8:27045:27062	9396	0	True				
ANR	9741	CallExpression	"usage ( stderr , 2 )"		9396	0					
ANR	9742	Callee	usage		9396	0					
ANR	9743	Identifier	usage		9396	0					
ANR	9744	ArgumentList	stderr		9396	1					
ANR	9745	Argument	stderr		9396	0					
ANR	9746	Identifier	stderr		9396	0					
ANR	9747	Argument	2		9396	1					
ANR	9748	PrimaryExpression	2		9396	0					
ANR	9749	ElseStatement	else		9396	0					
ANR	9750	ExpressionStatement	conflict_style = MERGE_MERGE	949:4:27081:27109	9396	0	True				
ANR	9751	AssignmentExpression	conflict_style = MERGE_MERGE		9396	0		=			
ANR	9752	Identifier	conflict_style		9396	0					
ANR	9753	Identifier	MERGE_MERGE		9396	1					
ANR	9754	BreakStatement	break ;	950:2:27113:27118	9396	41	True				
ANR	9755	Label	case 'n' :	952:5:27132:27140	9396	42	True				
ANR	9756	ExpressionStatement	diff_type = NORMAL_DIFF	953:2:27144:27167	9396	43	True				
ANR	9757	AssignmentExpression	diff_type = NORMAL_DIFF		9396	0		=			
ANR	9758	Identifier	diff_type		9396	0					
ANR	9759	Identifier	NORMAL_DIFF		9396	1					
ANR	9760	BreakStatement	break ;	954:2:27171:27176	9396	44	True				
ANR	9761	Label	case 'N' :	955:5:27183:27191	9396	45	True				
ANR	9762	ExpressionStatement	noreverse = true	956:2:27195:27211	9396	46	True				
ANR	9763	AssignmentExpression	noreverse = true		9396	0		=			
ANR	9764	Identifier	noreverse		9396	0					
ANR	9765	Identifier	true		9396	1					
ANR	9766	BreakStatement	break ;	957:2:27215:27220	9396	47	True				
ANR	9767	Label	case 'o' :	958:5:27227:27235	9396	48	True				
ANR	9768	ExpressionStatement	outfile = xstrdup ( optarg )	959:2:27239:27265	9396	49	True				
ANR	9769	AssignmentExpression	outfile = xstrdup ( optarg )		9396	0		=			
ANR	9770	Identifier	outfile		9396	0					
ANR	9771	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9772	Callee	xstrdup		9396	0					
ANR	9773	Identifier	xstrdup		9396	0					
ANR	9774	ArgumentList	optarg		9396	1					
ANR	9775	Argument	optarg		9396	0					
ANR	9776	Identifier	optarg		9396	0					
ANR	9777	BreakStatement	break ;	960:2:27269:27274	9396	50	True				
ANR	9778	Label	case 'p' :	961:5:27281:27289	9396	51	True				
ANR	9779	ExpressionStatement	"strippath = numeric_string ( optarg , false , ""strip count"" )"	962:2:27293:27350	9396	52	True				
ANR	9780	AssignmentExpression	"strippath = numeric_string ( optarg , false , ""strip count"" )"		9396	0		=			
ANR	9781	Identifier	strippath		9396	0					
ANR	9782	CallExpression	"numeric_string ( optarg , false , ""strip count"" )"		9396	1					
ANR	9783	Callee	numeric_string		9396	0					
ANR	9784	Identifier	numeric_string		9396	0					
ANR	9785	ArgumentList	optarg		9396	1					
ANR	9786	Argument	optarg		9396	0					
ANR	9787	Identifier	optarg		9396	0					
ANR	9788	Argument	false		9396	1					
ANR	9789	Identifier	false		9396	0					
ANR	9790	Argument	"""strip count"""		9396	2					
ANR	9791	PrimaryExpression	"""strip count"""		9396	0					
ANR	9792	BreakStatement	break ;	963:2:27354:27359	9396	53	True				
ANR	9793	Label	case 'r' :	964:5:27366:27374	9396	54	True				
ANR	9794	ExpressionStatement	rejname = xstrdup ( optarg )	965:2:27378:27404	9396	55	True				
ANR	9795	AssignmentExpression	rejname = xstrdup ( optarg )		9396	0		=			
ANR	9796	Identifier	rejname		9396	0					
ANR	9797	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9798	Callee	xstrdup		9396	0					
ANR	9799	Identifier	xstrdup		9396	0					
ANR	9800	ArgumentList	optarg		9396	1					
ANR	9801	Argument	optarg		9396	0					
ANR	9802	Identifier	optarg		9396	0					
ANR	9803	BreakStatement	break ;	966:2:27408:27413	9396	56	True				
ANR	9804	Label	case 'R' :	967:5:27420:27428	9396	57	True				
ANR	9805	ExpressionStatement	reverse = true	968:2:27432:27446	9396	58	True				
ANR	9806	AssignmentExpression	reverse = true		9396	0		=			
ANR	9807	Identifier	reverse		9396	0					
ANR	9808	Identifier	true		9396	1					
ANR	9809	ExpressionStatement	reverse_flag_specified = true	969:2:27450:27479	9396	59	True				
ANR	9810	AssignmentExpression	reverse_flag_specified = true		9396	0		=			
ANR	9811	Identifier	reverse_flag_specified		9396	0					
ANR	9812	Identifier	true		9396	1					
ANR	9813	BreakStatement	break ;	970:2:27483:27488	9396	60	True				
ANR	9814	Label	case 's' :	971:5:27495:27503	9396	61	True				
ANR	9815	ExpressionStatement	verbosity = SILENT	972:2:27507:27525	9396	62	True				
ANR	9816	AssignmentExpression	verbosity = SILENT		9396	0		=			
ANR	9817	Identifier	verbosity		9396	0					
ANR	9818	Identifier	SILENT		9396	1					
ANR	9819	BreakStatement	break ;	973:2:27529:27534	9396	63	True				
ANR	9820	Label	case 't' :	974:5:27541:27549	9396	64	True				
ANR	9821	ExpressionStatement	batch = true	975:2:27553:27565	9396	65	True				
ANR	9822	AssignmentExpression	batch = true		9396	0		=			
ANR	9823	Identifier	batch		9396	0					
ANR	9824	Identifier	true		9396	1					
ANR	9825	BreakStatement	break ;	976:2:27569:27574	9396	66	True				
ANR	9826	Label	case 'T' :	977:5:27581:27589	9396	67	True				
ANR	9827	ExpressionStatement	set_time = true	978:2:27593:27608	9396	68	True				
ANR	9828	AssignmentExpression	set_time = true		9396	0		=			
ANR	9829	Identifier	set_time		9396	0					
ANR	9830	Identifier	true		9396	1					
ANR	9831	BreakStatement	break ;	979:2:27612:27617	9396	69	True				
ANR	9832	Label	case 'u' :	980:5:27624:27632	9396	70	True				
ANR	9833	ExpressionStatement	diff_type = UNI_DIFF	981:2:27636:27656	9396	71	True				
ANR	9834	AssignmentExpression	diff_type = UNI_DIFF		9396	0		=			
ANR	9835	Identifier	diff_type		9396	0					
ANR	9836	Identifier	UNI_DIFF		9396	1					
ANR	9837	BreakStatement	break ;	982:2:27660:27665	9396	72	True				
ANR	9838	Label	case 'v' :	983:5:27672:27680	9396	73	True				
ANR	9839	ExpressionStatement	version ( )	984:2:27684:27693	9396	74	True				
ANR	9840	CallExpression	version ( )		9396	0					
ANR	9841	Callee	version		9396	0					
ANR	9842	Identifier	version		9396	0					
ANR	9843	ArgumentList			9396	1					
ANR	9844	ExpressionStatement	exit ( 0 )	985:2:27697:27705	9396	75	True				
ANR	9845	CallExpression	exit ( 0 )		9396	0					
ANR	9846	Callee	exit		9396	0					
ANR	9847	Identifier	exit		9396	0					
ANR	9848	ArgumentList	0		9396	1					
ANR	9849	Argument	0		9396	0					
ANR	9850	PrimaryExpression	0		9396	0					
ANR	9851	BreakStatement	break ;	986:2:27709:27714	9396	76	True				
ANR	9852	Label	case 'V' :	987:5:27721:27729	9396	77	True				
ANR	9853	ExpressionStatement	version_control = optarg	988:2:27733:27757	9396	78	True				
ANR	9854	AssignmentExpression	version_control = optarg		9396	0		=			
ANR	9855	Identifier	version_control		9396	0					
ANR	9856	Identifier	optarg		9396	1					
ANR	9857	ExpressionStatement	"version_control_context = ""--version-control or -V option"""	989:2:27761:27819	9396	79	True				
ANR	9858	AssignmentExpression	"version_control_context = ""--version-control or -V option"""		9396	0		=			
ANR	9859	Identifier	version_control_context		9396	0					
ANR	9860	PrimaryExpression	"""--version-control or -V option"""		9396	1					
ANR	9861	BreakStatement	break ;	990:2:27823:27828	9396	80	True				
ANR	9862	Label	case 'x' :	992:5:27849:27857	9396	81	True				
ANR	9863	ExpressionStatement	"debug = numeric_string ( optarg , true , ""debugging option"" )"	993:2:27861:27918	9396	82	True				
ANR	9864	AssignmentExpression	"debug = numeric_string ( optarg , true , ""debugging option"" )"		9396	0		=			
ANR	9865	Identifier	debug		9396	0					
ANR	9866	CallExpression	"numeric_string ( optarg , true , ""debugging option"" )"		9396	1					
ANR	9867	Callee	numeric_string		9396	0					
ANR	9868	Identifier	numeric_string		9396	0					
ANR	9869	ArgumentList	optarg		9396	1					
ANR	9870	Argument	optarg		9396	0					
ANR	9871	Identifier	optarg		9396	0					
ANR	9872	Argument	true		9396	1					
ANR	9873	Identifier	true		9396	0					
ANR	9874	Argument	"""debugging option"""		9396	2					
ANR	9875	PrimaryExpression	"""debugging option"""		9396	0					
ANR	9876	BreakStatement	break ;	994:2:27922:27927	9396	83	True				
ANR	9877	Label	case 'Y' :	996:5:27941:27949	9396	84	True				
ANR	9878	IfStatement	if ( ! * optarg )		9396	85					
ANR	9879	Condition	! * optarg	997:6:27957:27964	9396	0	True				
ANR	9880	UnaryOperationExpression	! * optarg		9396	0					
ANR	9881	UnaryOperator	!		9396	0					
ANR	9882	UnaryOperationExpression	* optarg		9396	1					
ANR	9883	UnaryOperator	*		9396	0					
ANR	9884	Identifier	optarg		9396	1					
ANR	9885	ExpressionStatement	"fatal ( ""backup basename prefix is empty"" )"	998:4:27971:28012	9396	1	True				
ANR	9886	CallExpression	"fatal ( ""backup basename prefix is empty"" )"		9396	0					
ANR	9887	Callee	fatal		9396	0					
ANR	9888	Identifier	fatal		9396	0					
ANR	9889	ArgumentList	"""backup basename prefix is empty"""		9396	1					
ANR	9890	Argument	"""backup basename prefix is empty"""		9396	0					
ANR	9891	PrimaryExpression	"""backup basename prefix is empty"""		9396	0					
ANR	9892	ExpressionStatement	origbase = xstrdup ( optarg )	999:2:28016:28043	9396	86	True				
ANR	9893	AssignmentExpression	origbase = xstrdup ( optarg )		9396	0		=			
ANR	9894	Identifier	origbase		9396	0					
ANR	9895	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9896	Callee	xstrdup		9396	0					
ANR	9897	Identifier	xstrdup		9396	0					
ANR	9898	ArgumentList	optarg		9396	1					
ANR	9899	Argument	optarg		9396	0					
ANR	9900	Identifier	optarg		9396	0					
ANR	9901	BreakStatement	break ;	1000:2:28047:28052	9396	87	True				
ANR	9902	Label	case 'z' :	1001:5:28059:28067	9396	88	True				
ANR	9903	Label	case_z :	1002:5:28074:28080	9396	89	True				
ANR	9904	Identifier	case_z		9396	0					
ANR	9905	IfStatement	if ( ! * optarg )		9396	90					
ANR	9906	Condition	! * optarg	1003:6:28088:28095	9396	0	True				
ANR	9907	UnaryOperationExpression	! * optarg		9396	0					
ANR	9908	UnaryOperator	!		9396	0					
ANR	9909	UnaryOperationExpression	* optarg		9396	1					
ANR	9910	UnaryOperator	*		9396	0					
ANR	9911	Identifier	optarg		9396	1					
ANR	9912	ExpressionStatement	"fatal ( ""backup suffix is empty"" )"	1004:4:28102:28134	9396	1	True				
ANR	9913	CallExpression	"fatal ( ""backup suffix is empty"" )"		9396	0					
ANR	9914	Callee	fatal		9396	0					
ANR	9915	Identifier	fatal		9396	0					
ANR	9916	ArgumentList	"""backup suffix is empty"""		9396	1					
ANR	9917	Argument	"""backup suffix is empty"""		9396	0					
ANR	9918	PrimaryExpression	"""backup suffix is empty"""		9396	0					
ANR	9919	ExpressionStatement	origsuff = xstrdup ( optarg )	1005:2:28138:28165	9396	91	True				
ANR	9920	AssignmentExpression	origsuff = xstrdup ( optarg )		9396	0		=			
ANR	9921	Identifier	origsuff		9396	0					
ANR	9922	CallExpression	xstrdup ( optarg )		9396	1					
ANR	9923	Callee	xstrdup		9396	0					
ANR	9924	Identifier	xstrdup		9396	0					
ANR	9925	ArgumentList	optarg		9396	1					
ANR	9926	Argument	optarg		9396	0					
ANR	9927	Identifier	optarg		9396	0					
ANR	9928	BreakStatement	break ;	1006:2:28169:28174	9396	92	True				
ANR	9929	Label	case 'Z' :	1007:5:28181:28189	9396	93	True				
ANR	9930	ExpressionStatement	set_utc = true	1008:2:28193:28207	9396	94	True				
ANR	9931	AssignmentExpression	set_utc = true		9396	0		=			
ANR	9932	Identifier	set_utc		9396	0					
ANR	9933	Identifier	true		9396	1					
ANR	9934	BreakStatement	break ;	1009:2:28211:28216	9396	95	True				
ANR	9935	Statement	case	1010:5:28223:28226	9396	96	True				
ANR	9936	Statement	CHAR_MAX	1010:10:28228:28235	9396	97	True				
ANR	9937	Statement	+	1010:19:28237:28237	9396	98	True				
ANR	9938	Label	1 :	1010:21:28239:28240	9396	99	True				
ANR	9939	ExpressionStatement	dry_run = true	1011:2:28244:28258	9396	100	True				
ANR	9940	AssignmentExpression	dry_run = true		9396	0		=			
ANR	9941	Identifier	dry_run		9396	0					
ANR	9942	Identifier	true		9396	1					
ANR	9943	BreakStatement	break ;	1012:2:28262:28267	9396	101	True				
ANR	9944	Statement	case	1013:5:28274:28277	9396	102	True				
ANR	9945	Statement	CHAR_MAX	1013:10:28279:28286	9396	103	True				
ANR	9946	Statement	+	1013:19:28288:28288	9396	104	True				
ANR	9947	Label	2 :	1013:21:28290:28291	9396	105	True				
ANR	9948	ExpressionStatement	verbosity = VERBOSE	1014:2:28295:28314	9396	106	True				
ANR	9949	AssignmentExpression	verbosity = VERBOSE		9396	0		=			
ANR	9950	Identifier	verbosity		9396	0					
ANR	9951	Identifier	VERBOSE		9396	1					
ANR	9952	BreakStatement	break ;	1015:2:28318:28323	9396	107	True				
ANR	9953	Statement	case	1016:5:28330:28333	9396	108	True				
ANR	9954	Statement	CHAR_MAX	1016:10:28335:28342	9396	109	True				
ANR	9955	Statement	+	1016:19:28344:28344	9396	110	True				
ANR	9956	Label	3 :	1016:21:28346:28347	9396	111	True				
ANR	9957	ExpressionStatement	no_strip_trailing_cr = true	1017:2:28351:28378	9396	112	True				
ANR	9958	AssignmentExpression	no_strip_trailing_cr = true		9396	0		=			
ANR	9959	Identifier	no_strip_trailing_cr		9396	0					
ANR	9960	Identifier	true		9396	1					
ANR	9961	ExpressionStatement	binary_transput = O_BINARY	1019:2:28403:28429	9396	113	True				
ANR	9962	AssignmentExpression	binary_transput = O_BINARY		9396	0		=			
ANR	9963	Identifier	binary_transput		9396	0					
ANR	9964	Identifier	O_BINARY		9396	1					
ANR	9965	BreakStatement	break ;	1021:2:28440:28445	9396	114	True				
ANR	9966	Statement	case	1022:5:28452:28455	9396	115	True				
ANR	9967	Statement	CHAR_MAX	1022:10:28457:28464	9396	116	True				
ANR	9968	Statement	+	1022:19:28466:28466	9396	117	True				
ANR	9969	Label	4 :	1022:21:28468:28469	9396	118	True				
ANR	9970	ExpressionStatement	"usage ( stdout , 0 )"	1023:2:28473:28490	9396	119	True				
ANR	9971	CallExpression	"usage ( stdout , 0 )"		9396	0					
ANR	9972	Callee	usage		9396	0					
ANR	9973	Identifier	usage		9396	0					
ANR	9974	ArgumentList	stdout		9396	1					
ANR	9975	Argument	stdout		9396	0					
ANR	9976	Identifier	stdout		9396	0					
ANR	9977	Argument	0		9396	1					
ANR	9978	PrimaryExpression	0		9396	0					
ANR	9979	Statement	case	1024:5:28497:28500	9396	120	True				
ANR	9980	Statement	CHAR_MAX	1024:10:28502:28509	9396	121	True				
ANR	9981	Statement	+	1024:19:28511:28511	9396	122	True				
ANR	9982	Label	5 :	1024:21:28513:28514	9396	123	True				
ANR	9983	ExpressionStatement	backup_if_mismatch = true	1025:2:28518:28543	9396	124	True				
ANR	9984	AssignmentExpression	backup_if_mismatch = true		9396	0		=			
ANR	9985	Identifier	backup_if_mismatch		9396	0					
ANR	9986	Identifier	true		9396	1					
ANR	9987	BreakStatement	break ;	1026:2:28547:28552	9396	125	True				
ANR	9988	Statement	case	1027:5:28559:28562	9396	126	True				
ANR	9989	Statement	CHAR_MAX	1027:10:28564:28571	9396	127	True				
ANR	9990	Statement	+	1027:19:28573:28573	9396	128	True				
ANR	9991	Label	6 :	1027:21:28575:28576	9396	129	True				
ANR	9992	ExpressionStatement	backup_if_mismatch = false	1028:2:28580:28606	9396	130	True				
ANR	9993	AssignmentExpression	backup_if_mismatch = false		9396	0		=			
ANR	9994	Identifier	backup_if_mismatch		9396	0					
ANR	9995	Identifier	false		9396	1					
ANR	9996	BreakStatement	break ;	1029:2:28610:28615	9396	131	True				
ANR	9997	Statement	case	1030:5:28622:28625	9396	132	True				
ANR	9998	Statement	CHAR_MAX	1030:10:28627:28634	9396	133	True				
ANR	9999	Statement	+	1030:19:28636:28636	9396	134	True				
ANR	10000	Label	7 :	1030:21:28638:28639	9396	135	True				
ANR	10001	ExpressionStatement	posixly_correct = true	1031:2:28643:28665	9396	136	True				
ANR	10002	AssignmentExpression	posixly_correct = true		9396	0		=			
ANR	10003	Identifier	posixly_correct		9396	0					
ANR	10004	Identifier	true		9396	1					
ANR	10005	BreakStatement	break ;	1032:2:28669:28674	9396	137	True				
ANR	10006	Statement	case	1033:5:28681:28684	9396	138	True				
ANR	10007	Statement	CHAR_MAX	1033:10:28686:28693	9396	139	True				
ANR	10008	Statement	+	1033:19:28695:28695	9396	140	True				
ANR	10009	Label	8 :	1033:21:28697:28698	9396	141	True				
ANR	10010	CompoundStatement		164:4:3523:3574	9396	142					
ANR	10011	IdentifierDeclStatement	"int i = argmatch ( optarg , quoting_style_args , 0 , 0 ) ;"	1035:4:28708:28759	9396	0	True				
ANR	10012	IdentifierDecl	"i = argmatch ( optarg , quoting_style_args , 0 , 0 )"		9396	0					
ANR	10013	IdentifierDeclType	int		9396	0					
ANR	10014	Identifier	i		9396	1					
ANR	10015	AssignmentExpression	"i = argmatch ( optarg , quoting_style_args , 0 , 0 )"		9396	2		=			
ANR	10016	Identifier	i		9396	0					
ANR	10017	CallExpression	"argmatch ( optarg , quoting_style_args , 0 , 0 )"		9396	1					
ANR	10018	Callee	argmatch		9396	0					
ANR	10019	Identifier	argmatch		9396	0					
ANR	10020	ArgumentList	optarg		9396	1					
ANR	10021	Argument	optarg		9396	0					
ANR	10022	Identifier	optarg		9396	0					
ANR	10023	Argument	quoting_style_args		9396	1					
ANR	10024	Identifier	quoting_style_args		9396	0					
ANR	10025	Argument	0		9396	2					
ANR	10026	PrimaryExpression	0		9396	0					
ANR	10027	Argument	0		9396	3					
ANR	10028	PrimaryExpression	0		9396	0					
ANR	10029	IfStatement	if ( i < 0 )		9396	1					
ANR	10030	Condition	i < 0	1036:8:28769:28773	9396	0	True				
ANR	10031	RelationalExpression	i < 0		9396	0		<			
ANR	10032	Identifier	i		9396	0					
ANR	10033	PrimaryExpression	0		9396	1					
ANR	10034	CompoundStatement		166:6:3597:3597	9396	1					
ANR	10035	ExpressionStatement	"invalid_arg ( ""quoting style"" , optarg , i )"	1038:8:28792:28832	9396	0	True				
ANR	10036	CallExpression	"invalid_arg ( ""quoting style"" , optarg , i )"		9396	0					
ANR	10037	Callee	invalid_arg		9396	0					
ANR	10038	Identifier	invalid_arg		9396	0					
ANR	10039	ArgumentList	"""quoting style"""		9396	1					
ANR	10040	Argument	"""quoting style"""		9396	0					
ANR	10041	PrimaryExpression	"""quoting style"""		9396	0					
ANR	10042	Argument	optarg		9396	1					
ANR	10043	Identifier	optarg		9396	0					
ANR	10044	Argument	i		9396	2					
ANR	10045	Identifier	i		9396	0					
ANR	10046	ExpressionStatement	"usage ( stderr , 2 )"	1039:8:28842:28859	9396	1	True				
ANR	10047	CallExpression	"usage ( stderr , 2 )"		9396	0					
ANR	10048	Callee	usage		9396	0					
ANR	10049	Identifier	usage		9396	0					
ANR	10050	ArgumentList	stderr		9396	1					
ANR	10051	Argument	stderr		9396	0					
ANR	10052	Identifier	stderr		9396	0					
ANR	10053	Argument	2		9396	1					
ANR	10054	PrimaryExpression	2		9396	0					
ANR	10055	ExpressionStatement	"set_quoting_style ( ( struct quoting_options * ) 0 , ( enum quoting_style ) i )"	1041:4:28873:28954	9396	2	True				
ANR	10056	CallExpression	"set_quoting_style ( ( struct quoting_options * ) 0 , ( enum quoting_style ) i )"		9396	0					
ANR	10057	Callee	set_quoting_style		9396	0					
ANR	10058	Identifier	set_quoting_style		9396	0					
ANR	10059	ArgumentList	( struct quoting_options * ) 0		9396	1					
ANR	10060	Argument	( struct quoting_options * ) 0		9396	0					
ANR	10061	CastExpression	( struct quoting_options * ) 0		9396	0					
ANR	10062	CastTarget	struct quoting_options *		9396	0					
ANR	10063	PrimaryExpression	0		9396	1					
ANR	10064	Argument	( enum quoting_style ) i		9396	1					
ANR	10065	CastExpression	( enum quoting_style ) i		9396	0					
ANR	10066	CastTarget	enum quoting_style		9396	0					
ANR	10067	Identifier	i		9396	1					
ANR	10068	BreakStatement	break ;	1044:2:28962:28967	9396	143	True				
ANR	10069	Statement	case	1045:5:28974:28977	9396	144	True				
ANR	10070	Statement	CHAR_MAX	1045:10:28979:28986	9396	145	True				
ANR	10071	Statement	+	1045:19:28988:28988	9396	146	True				
ANR	10072	Label	9 :	1045:21:28990:28991	9396	147	True				
ANR	10073	IfStatement	"if ( strcmp ( optarg , ""context"" ) == 0 )"		9396	148					
ANR	10074	Condition	"strcmp ( optarg , ""context"" ) == 0"	1046:6:28999:29029	9396	0	True				
ANR	10075	EqualityExpression	"strcmp ( optarg , ""context"" ) == 0"		9396	0		==			
ANR	10076	CallExpression	"strcmp ( optarg , ""context"" )"		9396	0					
ANR	10077	Callee	strcmp		9396	0					
ANR	10078	Identifier	strcmp		9396	0					
ANR	10079	ArgumentList	optarg		9396	1					
ANR	10080	Argument	optarg		9396	0					
ANR	10081	Identifier	optarg		9396	0					
ANR	10082	Argument	"""context"""		9396	1					
ANR	10083	PrimaryExpression	"""context"""		9396	0					
ANR	10084	PrimaryExpression	0		9396	1					
ANR	10085	ExpressionStatement	reject_format = NEW_CONTEXT_DIFF	1047:4:29036:29068	9396	1	True				
ANR	10086	AssignmentExpression	reject_format = NEW_CONTEXT_DIFF		9396	0		=			
ANR	10087	Identifier	reject_format		9396	0					
ANR	10088	Identifier	NEW_CONTEXT_DIFF		9396	1					
ANR	10089	ElseStatement	else		9396	0					
ANR	10090	IfStatement	"if ( strcmp ( optarg , ""unified"" ) == 0 )"		9396	0					
ANR	10091	Condition	"strcmp ( optarg , ""unified"" ) == 0"	1048:11:29081:29111	9396	0	True				
ANR	10092	EqualityExpression	"strcmp ( optarg , ""unified"" ) == 0"		9396	0		==			
ANR	10093	CallExpression	"strcmp ( optarg , ""unified"" )"		9396	0					
ANR	10094	Callee	strcmp		9396	0					
ANR	10095	Identifier	strcmp		9396	0					
ANR	10096	ArgumentList	optarg		9396	1					
ANR	10097	Argument	optarg		9396	0					
ANR	10098	Identifier	optarg		9396	0					
ANR	10099	Argument	"""unified"""		9396	1					
ANR	10100	PrimaryExpression	"""unified"""		9396	0					
ANR	10101	PrimaryExpression	0		9396	1					
ANR	10102	ExpressionStatement	reject_format = UNI_DIFF	1049:4:29118:29142	9396	1	True				
ANR	10103	AssignmentExpression	reject_format = UNI_DIFF		9396	0		=			
ANR	10104	Identifier	reject_format		9396	0					
ANR	10105	Identifier	UNI_DIFF		9396	1					
ANR	10106	ElseStatement	else		9396	0					
ANR	10107	ExpressionStatement	"usage ( stderr , 2 )"	1051:4:29155:29172	9396	0	True				
ANR	10108	CallExpression	"usage ( stderr , 2 )"		9396	0					
ANR	10109	Callee	usage		9396	0					
ANR	10110	Identifier	usage		9396	0					
ANR	10111	ArgumentList	stderr		9396	1					
ANR	10112	Argument	stderr		9396	0					
ANR	10113	Identifier	stderr		9396	0					
ANR	10114	Argument	2		9396	1					
ANR	10115	PrimaryExpression	2		9396	0					
ANR	10116	BreakStatement	break ;	1052:2:29176:29181	9396	149	True				
ANR	10117	Statement	case	1053:5:29188:29191	9396	150	True				
ANR	10118	Statement	CHAR_MAX	1053:10:29193:29200	9396	151	True				
ANR	10119	Statement	+	1053:19:29202:29202	9396	152	True				
ANR	10120	Label	10 :	1053:21:29204:29206	9396	153	True				
ANR	10121	IfStatement	"if ( strcmp ( optarg , ""ignore"" ) == 0 )"		9396	154					
ANR	10122	Condition	"strcmp ( optarg , ""ignore"" ) == 0"	1054:6:29214:29243	9396	0	True				
ANR	10123	EqualityExpression	"strcmp ( optarg , ""ignore"" ) == 0"		9396	0		==			
ANR	10124	CallExpression	"strcmp ( optarg , ""ignore"" )"		9396	0					
ANR	10125	Callee	strcmp		9396	0					
ANR	10126	Identifier	strcmp		9396	0					
ANR	10127	ArgumentList	optarg		9396	1					
ANR	10128	Argument	optarg		9396	0					
ANR	10129	Identifier	optarg		9396	0					
ANR	10130	Argument	"""ignore"""		9396	1					
ANR	10131	PrimaryExpression	"""ignore"""		9396	0					
ANR	10132	PrimaryExpression	0		9396	1					
ANR	10133	ExpressionStatement	read_only_behavior = RO_IGNORE	1055:4:29250:29280	9396	1	True				
ANR	10134	AssignmentExpression	read_only_behavior = RO_IGNORE		9396	0		=			
ANR	10135	Identifier	read_only_behavior		9396	0					
ANR	10136	Identifier	RO_IGNORE		9396	1					
ANR	10137	ElseStatement	else		9396	0					
ANR	10138	IfStatement	"if ( strcmp ( optarg , ""warn"" ) == 0 )"		9396	0					
ANR	10139	Condition	"strcmp ( optarg , ""warn"" ) == 0"	1056:11:29293:29320	9396	0	True				
ANR	10140	EqualityExpression	"strcmp ( optarg , ""warn"" ) == 0"		9396	0		==			
ANR	10141	CallExpression	"strcmp ( optarg , ""warn"" )"		9396	0					
ANR	10142	Callee	strcmp		9396	0					
ANR	10143	Identifier	strcmp		9396	0					
ANR	10144	ArgumentList	optarg		9396	1					
ANR	10145	Argument	optarg		9396	0					
ANR	10146	Identifier	optarg		9396	0					
ANR	10147	Argument	"""warn"""		9396	1					
ANR	10148	PrimaryExpression	"""warn"""		9396	0					
ANR	10149	PrimaryExpression	0		9396	1					
ANR	10150	ExpressionStatement	read_only_behavior = RO_WARN	1057:4:29327:29355	9396	1	True				
ANR	10151	AssignmentExpression	read_only_behavior = RO_WARN		9396	0		=			
ANR	10152	Identifier	read_only_behavior		9396	0					
ANR	10153	Identifier	RO_WARN		9396	1					
ANR	10154	ElseStatement	else		9396	0					
ANR	10155	IfStatement	"if ( strcmp ( optarg , ""fail"" ) == 0 )"		9396	0					
ANR	10156	Condition	"strcmp ( optarg , ""fail"" ) == 0"	1058:11:29368:29395	9396	0	True				
ANR	10157	EqualityExpression	"strcmp ( optarg , ""fail"" ) == 0"		9396	0		==			
ANR	10158	CallExpression	"strcmp ( optarg , ""fail"" )"		9396	0					
ANR	10159	Callee	strcmp		9396	0					
ANR	10160	Identifier	strcmp		9396	0					
ANR	10161	ArgumentList	optarg		9396	1					
ANR	10162	Argument	optarg		9396	0					
ANR	10163	Identifier	optarg		9396	0					
ANR	10164	Argument	"""fail"""		9396	1					
ANR	10165	PrimaryExpression	"""fail"""		9396	0					
ANR	10166	PrimaryExpression	0		9396	1					
ANR	10167	ExpressionStatement	read_only_behavior = RO_FAIL	1059:4:29402:29430	9396	1	True				
ANR	10168	AssignmentExpression	read_only_behavior = RO_FAIL		9396	0		=			
ANR	10169	Identifier	read_only_behavior		9396	0					
ANR	10170	Identifier	RO_FAIL		9396	1					
ANR	10171	ElseStatement	else		9396	0					
ANR	10172	ExpressionStatement	"usage ( stderr , 2 )"	1061:4:29443:29460	9396	0	True				
ANR	10173	CallExpression	"usage ( stderr , 2 )"		9396	0					
ANR	10174	Callee	usage		9396	0					
ANR	10175	Identifier	usage		9396	0					
ANR	10176	ArgumentList	stderr		9396	1					
ANR	10177	Argument	stderr		9396	0					
ANR	10178	Identifier	stderr		9396	0					
ANR	10179	Argument	2		9396	1					
ANR	10180	PrimaryExpression	2		9396	0					
ANR	10181	BreakStatement	break ;	1062:2:29464:29469	9396	155	True				
ANR	10182	Statement	case	1063:5:29476:29479	9396	156	True				
ANR	10183	Statement	CHAR_MAX	1063:10:29481:29488	9396	157	True				
ANR	10184	Statement	+	1063:19:29490:29490	9396	158	True				
ANR	10185	Label	11 :	1063:21:29492:29494	9396	159	True				
ANR	10186	ExpressionStatement	follow_symlinks = true	1064:2:29498:29520	9396	160	True				
ANR	10187	AssignmentExpression	follow_symlinks = true		9396	0		=			
ANR	10188	Identifier	follow_symlinks		9396	0					
ANR	10189	Identifier	true		9396	1					
ANR	10190	BreakStatement	break ;	1065:2:29524:29529	9396	161	True				
ANR	10191	Label	default :	1066:5:29536:29543	9396	162	True				
ANR	10192	Identifier	default		9396	0					
ANR	10193	ExpressionStatement	"usage ( stderr , 2 )"	1067:2:29547:29564	9396	163	True				
ANR	10194	CallExpression	"usage ( stderr , 2 )"		9396	0					
ANR	10195	Callee	usage		9396	0					
ANR	10196	Identifier	usage		9396	0					
ANR	10197	ArgumentList	stderr		9396	1					
ANR	10198	Argument	stderr		9396	0					
ANR	10199	Identifier	stderr		9396	0					
ANR	10200	Argument	2		9396	1					
ANR	10201	PrimaryExpression	2		9396	0					
ANR	10202	IfStatement	if ( optind < Argc )		9396	5					
ANR	10203	Condition	optind < Argc	1072:8:29622:29634	9396	0	True				
ANR	10204	RelationalExpression	optind < Argc		9396	0		<			
ANR	10205	Identifier	optind		9396	0					
ANR	10206	Identifier	Argc		9396	1					
ANR	10207	CompoundStatement		202:6:4458:4458	9396	1					
ANR	10208	ExpressionStatement	inname = xstrdup ( Argv [ optind ++ ] )	1074:1:29646:29679	9396	0	True				
ANR	10209	AssignmentExpression	inname = xstrdup ( Argv [ optind ++ ] )		9396	0		=			
ANR	10210	Identifier	inname		9396	0					
ANR	10211	CallExpression	xstrdup ( Argv [ optind ++ ] )		9396	1					
ANR	10212	Callee	xstrdup		9396	0					
ANR	10213	Identifier	xstrdup		9396	0					
ANR	10214	ArgumentList	Argv [ optind ++ ]		9396	1					
ANR	10215	Argument	Argv [ optind ++ ]		9396	0					
ANR	10216	ArrayIndexing	Argv [ optind ++ ]		9396	0					
ANR	10217	Identifier	Argv		9396	0					
ANR	10218	PostIncDecOperationExpression	optind ++		9396	1					
ANR	10219	Identifier	optind		9396	0					
ANR	10220	IncDec	++		9396	1					
ANR	10221	ExpressionStatement	explicit_inname = true	1075:1:29682:29704	9396	1	True				
ANR	10222	AssignmentExpression	explicit_inname = true		9396	0		=			
ANR	10223	Identifier	explicit_inname		9396	0					
ANR	10224	Identifier	true		9396	1					
ANR	10225	ExpressionStatement	invc = - 1	1076:1:29707:29716	9396	2	True				
ANR	10226	AssignmentExpression	invc = - 1		9396	0		=			
ANR	10227	Identifier	invc		9396	0					
ANR	10228	UnaryOperationExpression	- 1		9396	1					
ANR	10229	UnaryOperator	-		9396	0					
ANR	10230	PrimaryExpression	1		9396	1					
ANR	10231	IfStatement	if ( optind < Argc )		9396	3					
ANR	10232	Condition	optind < Argc	1077:5:29723:29735	9396	0	True				
ANR	10233	RelationalExpression	optind < Argc		9396	0		<			
ANR	10234	Identifier	optind		9396	0					
ANR	10235	Identifier	Argc		9396	1					
ANR	10236	CompoundStatement		207:3:4556:4556	9396	1					
ANR	10237	ExpressionStatement	patchname = xstrdup ( Argv [ optind ++ ] )	1079:5:29748:29784	9396	0	True				
ANR	10238	AssignmentExpression	patchname = xstrdup ( Argv [ optind ++ ] )		9396	0		=			
ANR	10239	Identifier	patchname		9396	0					
ANR	10240	CallExpression	xstrdup ( Argv [ optind ++ ] )		9396	1					
ANR	10241	Callee	xstrdup		9396	0					
ANR	10242	Identifier	xstrdup		9396	0					
ANR	10243	ArgumentList	Argv [ optind ++ ]		9396	1					
ANR	10244	Argument	Argv [ optind ++ ]		9396	0					
ANR	10245	ArrayIndexing	Argv [ optind ++ ]		9396	0					
ANR	10246	Identifier	Argv		9396	0					
ANR	10247	PostIncDecOperationExpression	optind ++		9396	1					
ANR	10248	Identifier	optind		9396	0					
ANR	10249	IncDec	++		9396	1					
ANR	10250	IfStatement	if ( optind < Argc )		9396	1					
ANR	10251	Condition	optind < Argc	1080:9:29795:29807	9396	0	True				
ANR	10252	RelationalExpression	optind < Argc		9396	0		<			
ANR	10253	Identifier	optind		9396	0					
ANR	10254	Identifier	Argc		9396	1					
ANR	10255	CompoundStatement		210:7:4632:4632	9396	1					
ANR	10256	ExpressionStatement	"fprintf ( stderr , ""%s: %s: extra operand\\n"" , program_name , quotearg ( Argv [ optind ] ) )"	1082:2:29821:29907	9396	0	True				
ANR	10257	CallExpression	"fprintf ( stderr , ""%s: %s: extra operand\\n"" , program_name , quotearg ( Argv [ optind ] ) )"		9396	0					
ANR	10258	Callee	fprintf		9396	0					
ANR	10259	Identifier	fprintf		9396	0					
ANR	10260	ArgumentList	stderr		9396	1					
ANR	10261	Argument	stderr		9396	0					
ANR	10262	Identifier	stderr		9396	0					
ANR	10263	Argument	"""%s: %s: extra operand\\n"""		9396	1					
ANR	10264	PrimaryExpression	"""%s: %s: extra operand\\n"""		9396	0					
ANR	10265	Argument	program_name		9396	2					
ANR	10266	Identifier	program_name		9396	0					
ANR	10267	Argument	quotearg ( Argv [ optind ] )		9396	3					
ANR	10268	CallExpression	quotearg ( Argv [ optind ] )		9396	0					
ANR	10269	Callee	quotearg		9396	0					
ANR	10270	Identifier	quotearg		9396	0					
ANR	10271	ArgumentList	Argv [ optind ]		9396	1					
ANR	10272	Argument	Argv [ optind ]		9396	0					
ANR	10273	ArrayIndexing	Argv [ optind ]		9396	0					
ANR	10274	Identifier	Argv		9396	0					
ANR	10275	Identifier	optind		9396	1					
ANR	10276	ExpressionStatement	"usage ( stderr , 2 )"	1084:2:29911:29928	9396	1	True				
ANR	10277	CallExpression	"usage ( stderr , 2 )"		9396	0					
ANR	10278	Callee	usage		9396	0					
ANR	10279	Identifier	usage		9396	0					
ANR	10280	ArgumentList	stderr		9396	1					
ANR	10281	Argument	stderr		9396	0					
ANR	10282	Identifier	stderr		9396	0					
ANR	10283	Argument	2		9396	1					
ANR	10284	PrimaryExpression	2		9396	0					
ANR	10285	ReturnType	static void		9396	1					
ANR	10286	Identifier	get_some_switches		9396	2					
ANR	10287	ParameterList			9396	3					
ANR	10288	CFGEntryNode	ENTRY		9396		True				
ANR	10289	CFGExitNode	EXIT		9396		True				
ANR	10290	CFGErrorNode	ERROR		9396		True				
ANR	10291	Symbol	* optind		9396						
ANR	10292	Symbol	remove_empty_files		9396						
ANR	10293	Symbol	canonicalize_ws		9396						
ANR	10294	Symbol	stdout		9396						
ANR	10295	Symbol	optind		9396						
ANR	10296	Symbol	program_name		9396						
ANR	10297	Symbol	optarg		9396						
ANR	10298	Symbol	RO_FAIL		9396						
ANR	10299	Symbol	set_utc		9396						
ANR	10300	Symbol	read_only_behavior		9396						
ANR	10301	Symbol	NEW_CONTEXT_DIFF		9396						
ANR	10302	Symbol	merge		9396						
ANR	10303	Symbol	MERGE_DIFF3		9396						
ANR	10304	Symbol	noreverse		9396						
ANR	10305	Symbol	posixly_correct		9396						
ANR	10306	Symbol	Argv		9396						
ANR	10307	Symbol	SILENT		9396						
ANR	10308	Symbol	strcmp		9396						
ANR	10309	Symbol	patchname		9396						
ANR	10310	Symbol	conflict_style		9396						
ANR	10311	Symbol	NORMAL_DIFF		9396						
ANR	10312	Symbol	invc		9396						
ANR	10313	Symbol	optc		9396						
ANR	10314	Symbol	* * optind		9396						
ANR	10315	Symbol	batch		9396						
ANR	10316	Symbol	* * Argv		9396						
ANR	10317	Symbol	chdir		9396						
ANR	10318	Symbol	stderr		9396						
ANR	10319	Symbol	backup_if_mismatch		9396						
ANR	10320	Symbol	numeric_string		9396						
ANR	10321	Symbol	version_control_context		9396						
ANR	10322	Symbol	patch_get		9396						
ANR	10323	Symbol	shortopts		9396						
ANR	10324	Symbol	reverse_flag_specified		9396						
ANR	10325	Symbol	true		9396						
ANR	10326	Symbol	RO_WARN		9396						
ANR	10327	Symbol	force		9396						
ANR	10328	Symbol	dry_run		9396						
ANR	10329	Symbol	* Argv		9396						
ANR	10330	Symbol	binary_transput		9396						
ANR	10331	Symbol	origbase		9396						
ANR	10332	Symbol	follow_symlinks		9396						
ANR	10333	Symbol	UNI_DIFF		9396						
ANR	10334	Symbol	quotearg		9396						
ANR	10335	Symbol	O_BINARY		9396						
ANR	10336	Symbol	no_strip_trailing_cr		9396						
ANR	10337	Symbol	outfile		9396						
ANR	10338	Symbol	rejname		9396						
ANR	10339	Symbol	MERGE_MERGE		9396						
ANR	10340	Symbol	quoting_style_args		9396						
ANR	10341	Symbol	origprae		9396						
ANR	10342	Symbol	origsuff		9396						
ANR	10343	Symbol	set_time		9396						
ANR	10344	Symbol	ED_DIFF		9396						
ANR	10345	Symbol	CONTEXT_DIFF		9396						
ANR	10346	Symbol	VERBOSE		9396						
ANR	10347	Symbol	inname		9396						
ANR	10348	Symbol	debug		9396						
ANR	10349	Symbol	RO_IGNORE		9396						
ANR	10350	Symbol	explicit_inname		9396						
ANR	10351	Symbol	getopt_long		9396						
ANR	10352	Symbol	diff_type		9396						
ANR	10353	Symbol	strippath		9396						
ANR	10354	Symbol	argmatch		9396						
ANR	10355	Symbol	xstrdup		9396						
ANR	10356	Symbol	do_defines		9396						
ANR	10357	Symbol	false		9396						
ANR	10358	Symbol	i		9396						
ANR	10359	Symbol	maxfuzz		9396						
ANR	10360	Symbol	version_control		9396						
ANR	10361	Symbol	reverse		9396						
ANR	10362	Symbol	Argc		9396						
ANR	10363	Symbol	* optarg		9396						
ANR	10364	Symbol	longopts		9396						
ANR	10365	Symbol	make_backups		9396						
ANR	10366	Symbol	reject_format		9396						
ANR	10367	Symbol	verbosity		9396						
ANR	10368	Function	numeric_string	1093:0:30109:30883							
ANR	10369	FunctionDef	"numeric_string (char const * string , bool negative_allowed , char const * argtype_msgid)"		10368	0					
ANR	10370	CompoundStatement		1097:0:30210:30883	10368	0					
ANR	10371	IdentifierDeclStatement	int value = 0 ;	1098:2:30214:30227	10368	0	True				
ANR	10372	IdentifierDecl	value = 0		10368	0					
ANR	10373	IdentifierDeclType	int		10368	0					
ANR	10374	Identifier	value		10368	1					
ANR	10375	AssignmentExpression	value = 0		10368	2		=			
ANR	10376	Identifier	value		10368	0					
ANR	10377	PrimaryExpression	0		10368	1					
ANR	10378	IdentifierDeclStatement	char const * p = string ;	1099:2:30231:30253	10368	1	True				
ANR	10379	IdentifierDecl	* p = string		10368	0					
ANR	10380	IdentifierDeclType	char const *		10368	0					
ANR	10381	Identifier	p		10368	1					
ANR	10382	AssignmentExpression	* p = string		10368	2		=			
ANR	10383	Identifier	string		10368	0					
ANR	10384	Identifier	string		10368	1					
ANR	10385	IdentifierDeclStatement	int sign = * p == '-' ? - 1 : 1 ;	1100:2:30257:30286	10368	2	True				
ANR	10386	IdentifierDecl	sign = * p == '-' ? - 1 : 1		10368	0					
ANR	10387	IdentifierDeclType	int		10368	0					
ANR	10388	Identifier	sign		10368	1					
ANR	10389	AssignmentExpression	sign = * p == '-' ? - 1 : 1		10368	2		=			
ANR	10390	Identifier	sign		10368	0					
ANR	10391	ConditionalExpression	* p == '-' ? - 1 : 1		10368	1					
ANR	10392	Condition	* p == '-'		10368	0					
ANR	10393	EqualityExpression	* p == '-'		10368	0		==			
ANR	10394	UnaryOperationExpression	* p		10368	0					
ANR	10395	UnaryOperator	*		10368	0					
ANR	10396	Identifier	p		10368	1					
ANR	10397	PrimaryExpression	'-'		10368	1					
ANR	10398	UnaryOperationExpression	- 1		10368	1					
ANR	10399	UnaryOperator	-		10368	0					
ANR	10400	PrimaryExpression	1		10368	1					
ANR	10401	PrimaryExpression	1		10368	2					
ANR	10402	ExpressionStatement	p += * p == '-' || * p == '+'	1102:2:30291:30318	10368	3	True				
ANR	10403	AssignmentExpression	p += * p == '-' || * p == '+'		10368	0		+=			
ANR	10404	Identifier	p		10368	0					
ANR	10405	OrExpression	* p == '-' || * p == '+'		10368	1		||			
ANR	10406	EqualityExpression	* p == '-'		10368	0		==			
ANR	10407	UnaryOperationExpression	* p		10368	0					
ANR	10408	UnaryOperator	*		10368	0					
ANR	10409	Identifier	p		10368	1					
ANR	10410	PrimaryExpression	'-'		10368	1					
ANR	10411	EqualityExpression	* p == '+'		10368	1		==			
ANR	10412	UnaryOperationExpression	* p		10368	0					
ANR	10413	UnaryOperator	*		10368	0					
ANR	10414	Identifier	p		10368	1					
ANR	10415	PrimaryExpression	'+'		10368	1					
ANR	10416	DoStatement	do		10368	4					
ANR	10417	CompoundStatement		13:6:222:257	10368	0					
ANR	10418	IdentifierDeclStatement	int v10 = value * 10 ;	1106:6:30338:30358	10368	0	True				
ANR	10419	IdentifierDecl	v10 = value * 10		10368	0					
ANR	10420	IdentifierDeclType	int		10368	0					
ANR	10421	Identifier	v10		10368	1					
ANR	10422	AssignmentExpression	v10 = value * 10		10368	2		=			
ANR	10423	Identifier	v10		10368	0					
ANR	10424	MultiplicativeExpression	value * 10		10368	1		*			
ANR	10425	Identifier	value		10368	0					
ANR	10426	PrimaryExpression	10		10368	1					
ANR	10427	IdentifierDeclStatement	int digit = * p - '0' ;	1107:6:30366:30386	10368	1	True				
ANR	10428	IdentifierDecl	digit = * p - '0'		10368	0					
ANR	10429	IdentifierDeclType	int		10368	0					
ANR	10430	Identifier	digit		10368	1					
ANR	10431	AssignmentExpression	digit = * p - '0'		10368	2		=			
ANR	10432	Identifier	digit		10368	0					
ANR	10433	AdditiveExpression	* p - '0'		10368	1		-			
ANR	10434	UnaryOperationExpression	* p		10368	0					
ANR	10435	UnaryOperator	*		10368	0					
ANR	10436	Identifier	p		10368	1					
ANR	10437	PrimaryExpression	'0'		10368	1					
ANR	10438	IdentifierDeclStatement	int signed_digit = sign * digit ;	1108:6:30394:30425	10368	2	True				
ANR	10439	IdentifierDecl	signed_digit = sign * digit		10368	0					
ANR	10440	IdentifierDeclType	int		10368	0					
ANR	10441	Identifier	signed_digit		10368	1					
ANR	10442	AssignmentExpression	signed_digit = sign * digit		10368	2		=			
ANR	10443	Identifier	signed_digit		10368	0					
ANR	10444	MultiplicativeExpression	sign * digit		10368	1		*			
ANR	10445	Identifier	sign		10368	0					
ANR	10446	Identifier	digit		10368	1					
ANR	10447	IdentifierDeclStatement	int next_value = v10 + signed_digit ;	1109:6:30433:30468	10368	3	True				
ANR	10448	IdentifierDecl	next_value = v10 + signed_digit		10368	0					
ANR	10449	IdentifierDeclType	int		10368	0					
ANR	10450	Identifier	next_value		10368	1					
ANR	10451	AssignmentExpression	next_value = v10 + signed_digit		10368	2		=			
ANR	10452	Identifier	next_value		10368	0					
ANR	10453	AdditiveExpression	v10 + signed_digit		10368	1		+			
ANR	10454	Identifier	v10		10368	0					
ANR	10455	Identifier	signed_digit		10368	1					
ANR	10456	IfStatement	if ( 9 < ( unsigned ) digit )		10368	4					
ANR	10457	Condition	9 < ( unsigned ) digit	1111:10:30481:30500	10368	0	True				
ANR	10458	RelationalExpression	9 < ( unsigned ) digit		10368	0		<			
ANR	10459	PrimaryExpression	9		10368	0					
ANR	10460	CastExpression	( unsigned ) digit		10368	1					
ANR	10461	CastTarget	unsigned		10368	0					
ANR	10462	Identifier	digit		10368	1					
ANR	10463	ExpressionStatement	"fatal ( ""%s %s is not a number"" , argtype_msgid , quotearg ( string ) )"	1112:1:30504:30569	10368	1	True				
ANR	10464	CallExpression	"fatal ( ""%s %s is not a number"" , argtype_msgid , quotearg ( string ) )"		10368	0					
ANR	10465	Callee	fatal		10368	0					
ANR	10466	Identifier	fatal		10368	0					
ANR	10467	ArgumentList	"""%s %s is not a number"""		10368	1					
ANR	10468	Argument	"""%s %s is not a number"""		10368	0					
ANR	10469	PrimaryExpression	"""%s %s is not a number"""		10368	0					
ANR	10470	Argument	argtype_msgid		10368	1					
ANR	10471	Identifier	argtype_msgid		10368	0					
ANR	10472	Argument	quotearg ( string )		10368	2					
ANR	10473	CallExpression	quotearg ( string )		10368	0					
ANR	10474	Callee	quotearg		10368	0					
ANR	10475	Identifier	quotearg		10368	0					
ANR	10476	ArgumentList	string		10368	1					
ANR	10477	Argument	string		10368	0					
ANR	10478	Identifier	string		10368	0					
ANR	10479	IfStatement	if ( v10 / 10 != value || ( next_value < v10 ) != ( signed_digit < 0 ) )		10368	5					
ANR	10480	Condition	v10 / 10 != value || ( next_value < v10 ) != ( signed_digit < 0 )	1114:10:30582:30642	10368	0	True				
ANR	10481	OrExpression	v10 / 10 != value || ( next_value < v10 ) != ( signed_digit < 0 )		10368	0		||			
ANR	10482	EqualityExpression	v10 / 10 != value		10368	0		!=			
ANR	10483	MultiplicativeExpression	v10 / 10		10368	0		/			
ANR	10484	Identifier	v10		10368	0					
ANR	10485	PrimaryExpression	10		10368	1					
ANR	10486	Identifier	value		10368	1					
ANR	10487	EqualityExpression	( next_value < v10 ) != ( signed_digit < 0 )		10368	1		!=			
ANR	10488	RelationalExpression	next_value < v10		10368	0		<			
ANR	10489	Identifier	next_value		10368	0					
ANR	10490	Identifier	v10		10368	1					
ANR	10491	RelationalExpression	signed_digit < 0		10368	1		<			
ANR	10492	Identifier	signed_digit		10368	0					
ANR	10493	PrimaryExpression	0		10368	1					
ANR	10494	ExpressionStatement	"fatal ( ""%s %s is too large"" , argtype_msgid , quotearg ( string ) )"	1115:1:30646:30708	10368	1	True				
ANR	10495	CallExpression	"fatal ( ""%s %s is too large"" , argtype_msgid , quotearg ( string ) )"		10368	0					
ANR	10496	Callee	fatal		10368	0					
ANR	10497	Identifier	fatal		10368	0					
ANR	10498	ArgumentList	"""%s %s is too large"""		10368	1					
ANR	10499	Argument	"""%s %s is too large"""		10368	0					
ANR	10500	PrimaryExpression	"""%s %s is too large"""		10368	0					
ANR	10501	Argument	argtype_msgid		10368	1					
ANR	10502	Identifier	argtype_msgid		10368	0					
ANR	10503	Argument	quotearg ( string )		10368	2					
ANR	10504	CallExpression	quotearg ( string )		10368	0					
ANR	10505	Callee	quotearg		10368	0					
ANR	10506	Identifier	quotearg		10368	0					
ANR	10507	ArgumentList	string		10368	1					
ANR	10508	Argument	string		10368	0					
ANR	10509	Identifier	string		10368	0					
ANR	10510	ExpressionStatement	value = next_value	1117:6:30717:30735	10368	6	True				
ANR	10511	AssignmentExpression	value = next_value		10368	0		=			
ANR	10512	Identifier	value		10368	0					
ANR	10513	Identifier	next_value		10368	1					
ANR	10514	Condition	* ++ p	1119:9:30752:30755	10368	1	True				
ANR	10515	UnaryOperationExpression	* ++ p		10368	0					
ANR	10516	UnaryOperator	*		10368	0					
ANR	10517	UnaryExpression	++ p		10368	1					
ANR	10518	IncDec	++		10368	0					
ANR	10519	Identifier	p		10368	1					
ANR	10520	IfStatement	if ( value < 0 && ! negative_allowed )		10368	5					
ANR	10521	Condition	value < 0 && ! negative_allowed	1121:6:30766:30796	10368	0	True				
ANR	10522	AndExpression	value < 0 && ! negative_allowed		10368	0		&&			
ANR	10523	RelationalExpression	value < 0		10368	0		<			
ANR	10524	Identifier	value		10368	0					
ANR	10525	PrimaryExpression	0		10368	1					
ANR	10526	UnaryOperationExpression	! negative_allowed		10368	1					
ANR	10527	UnaryOperator	!		10368	0					
ANR	10528	Identifier	negative_allowed		10368	1					
ANR	10529	ExpressionStatement	"fatal ( ""%s %s is negative"" , argtype_msgid , quotearg ( string ) )"	1122:4:30803:30864	10368	1	True				
ANR	10530	CallExpression	"fatal ( ""%s %s is negative"" , argtype_msgid , quotearg ( string ) )"		10368	0					
ANR	10531	Callee	fatal		10368	0					
ANR	10532	Identifier	fatal		10368	0					
ANR	10533	ArgumentList	"""%s %s is negative"""		10368	1					
ANR	10534	Argument	"""%s %s is negative"""		10368	0					
ANR	10535	PrimaryExpression	"""%s %s is negative"""		10368	0					
ANR	10536	Argument	argtype_msgid		10368	1					
ANR	10537	Identifier	argtype_msgid		10368	0					
ANR	10538	Argument	quotearg ( string )		10368	2					
ANR	10539	CallExpression	quotearg ( string )		10368	0					
ANR	10540	Callee	quotearg		10368	0					
ANR	10541	Identifier	quotearg		10368	0					
ANR	10542	ArgumentList	string		10368	1					
ANR	10543	Argument	string		10368	0					
ANR	10544	Identifier	string		10368	0					
ANR	10545	ReturnStatement	return value ;	1124:2:30869:30881	10368	6	True				
ANR	10546	Identifier	value		10368	0					
ANR	10547	ReturnType	static int		10368	1					
ANR	10548	Identifier	numeric_string		10368	2					
ANR	10549	ParameterList	"char const * string , bool negative_allowed , char const * argtype_msgid"		10368	3					
ANR	10550	Parameter	char const * string	1094:16:30136:30153	10368	0	True				
ANR	10551	ParameterType	char const *		10368	0					
ANR	10552	Identifier	string		10368	1					
ANR	10553	Parameter	bool negative_allowed	1095:2:30158:30178	10368	1	True				
ANR	10554	ParameterType	bool		10368	0					
ANR	10555	Identifier	negative_allowed		10368	1					
ANR	10556	Parameter	char const * argtype_msgid	1096:2:30183:30207	10368	2	True				
ANR	10557	ParameterType	char const *		10368	0					
ANR	10558	Identifier	argtype_msgid		10368	1					
ANR	10559	CFGEntryNode	ENTRY		10368		True				
ANR	10560	CFGExitNode	EXIT		10368		True				
ANR	10561	Symbol	argtype_msgid		10368						
ANR	10562	Symbol	quotearg		10368						
ANR	10563	Symbol	string		10368						
ANR	10564	Symbol	* ++ p		10368						
ANR	10565	Symbol	sign		10368						
ANR	10566	Symbol	signed_digit		10368						
ANR	10567	Symbol	p		10368						
ANR	10568	Symbol	next_value		10368						
ANR	10569	Symbol	v10		10368						
ANR	10570	Symbol	* p		10368						
ANR	10571	Symbol	negative_allowed		10368						
ANR	10572	Symbol	value		10368						
ANR	10573	Symbol	digit		10368						
ANR	10574	Function	locate_hunk	1129:0:30954:33667							
ANR	10575	FunctionDef	locate_hunk (lin fuzz)		10574	0					
ANR	10576	CompoundStatement		1131:0:30988:33667	10574	0					
ANR	10577	IdentifierDeclStatement	lin first_guess = pch_first ( ) + in_offset ;	1132:4:30994:31036	10574	0	True				
ANR	10578	IdentifierDecl	first_guess = pch_first ( ) + in_offset		10574	0					
ANR	10579	IdentifierDeclType	lin		10574	0					
ANR	10580	Identifier	first_guess		10574	1					
ANR	10581	AssignmentExpression	first_guess = pch_first ( ) + in_offset		10574	2		=			
ANR	10582	Identifier	first_guess		10574	0					
ANR	10583	AdditiveExpression	pch_first ( ) + in_offset		10574	1		+			
ANR	10584	CallExpression	pch_first ( )		10574	0					
ANR	10585	Callee	pch_first		10574	0					
ANR	10586	Identifier	pch_first		10574	0					
ANR	10587	ArgumentList			10574	1					
ANR	10588	Identifier	in_offset		10574	1					
ANR	10589	IdentifierDeclStatement	lin offset ;	1133:4:31042:31052	10574	1	True				
ANR	10590	IdentifierDecl	offset		10574	0					
ANR	10591	IdentifierDeclType	lin		10574	0					
ANR	10592	Identifier	offset		10574	1					
ANR	10593	IdentifierDeclStatement	lin pat_lines = pch_ptrn_lines ( ) ;	1134:4:31058:31090	10574	2	True				
ANR	10594	IdentifierDecl	pat_lines = pch_ptrn_lines ( )		10574	0					
ANR	10595	IdentifierDeclType	lin		10574	0					
ANR	10596	Identifier	pat_lines		10574	1					
ANR	10597	AssignmentExpression	pat_lines = pch_ptrn_lines ( )		10574	2		=			
ANR	10598	Identifier	pat_lines		10574	0					
ANR	10599	CallExpression	pch_ptrn_lines ( )		10574	1					
ANR	10600	Callee	pch_ptrn_lines		10574	0					
ANR	10601	Identifier	pch_ptrn_lines		10574	0					
ANR	10602	ArgumentList			10574	1					
ANR	10603	IdentifierDeclStatement	lin prefix_context = pch_prefix_context ( ) ;	1135:4:31096:31138	10574	3	True				
ANR	10604	IdentifierDecl	prefix_context = pch_prefix_context ( )		10574	0					
ANR	10605	IdentifierDeclType	lin		10574	0					
ANR	10606	Identifier	prefix_context		10574	1					
ANR	10607	AssignmentExpression	prefix_context = pch_prefix_context ( )		10574	2		=			
ANR	10608	Identifier	prefix_context		10574	0					
ANR	10609	CallExpression	pch_prefix_context ( )		10574	1					
ANR	10610	Callee	pch_prefix_context		10574	0					
ANR	10611	Identifier	pch_prefix_context		10574	0					
ANR	10612	ArgumentList			10574	1					
ANR	10613	IdentifierDeclStatement	lin suffix_context = pch_suffix_context ( ) ;	1136:4:31144:31186	10574	4	True				
ANR	10614	IdentifierDecl	suffix_context = pch_suffix_context ( )		10574	0					
ANR	10615	IdentifierDeclType	lin		10574	0					
ANR	10616	Identifier	suffix_context		10574	1					
ANR	10617	AssignmentExpression	suffix_context = pch_suffix_context ( )		10574	2		=			
ANR	10618	Identifier	suffix_context		10574	0					
ANR	10619	CallExpression	pch_suffix_context ( )		10574	1					
ANR	10620	Callee	pch_suffix_context		10574	0					
ANR	10621	Identifier	pch_suffix_context		10574	0					
ANR	10622	ArgumentList			10574	1					
ANR	10623	IdentifierDeclStatement	lin context = ( prefix_context < suffix_context ? suffix_context : prefix_context ) ;	1137:4:31192:31278	10574	5	True				
ANR	10624	IdentifierDecl	context = ( prefix_context < suffix_context ? suffix_context : prefix_context )		10574	0					
ANR	10625	IdentifierDeclType	lin		10574	0					
ANR	10626	Identifier	context		10574	1					
ANR	10627	AssignmentExpression	context = ( prefix_context < suffix_context ? suffix_context : prefix_context )		10574	2		=			
ANR	10628	Identifier	context		10574	0					
ANR	10629	ConditionalExpression	prefix_context < suffix_context ? suffix_context : prefix_context		10574	1					
ANR	10630	Condition	prefix_context < suffix_context		10574	0					
ANR	10631	RelationalExpression	prefix_context < suffix_context		10574	0		<			
ANR	10632	Identifier	prefix_context		10574	0					
ANR	10633	Identifier	suffix_context		10574	1					
ANR	10634	Identifier	suffix_context		10574	1					
ANR	10635	Identifier	prefix_context		10574	2					
ANR	10636	IdentifierDeclStatement	lin prefix_fuzz = fuzz + prefix_context - context ;	1139:4:31284:31333	10574	6	True				
ANR	10637	IdentifierDecl	prefix_fuzz = fuzz + prefix_context - context		10574	0					
ANR	10638	IdentifierDeclType	lin		10574	0					
ANR	10639	Identifier	prefix_fuzz		10574	1					
ANR	10640	AssignmentExpression	prefix_fuzz = fuzz + prefix_context - context		10574	2		=			
ANR	10641	Identifier	prefix_fuzz		10574	0					
ANR	10642	AdditiveExpression	fuzz + prefix_context - context		10574	1		+			
ANR	10643	Identifier	fuzz		10574	0					
ANR	10644	AdditiveExpression	prefix_context - context		10574	1		-			
ANR	10645	Identifier	prefix_context		10574	0					
ANR	10646	Identifier	context		10574	1					
ANR	10647	IdentifierDeclStatement	lin suffix_fuzz = fuzz + suffix_context - context ;	1140:4:31339:31388	10574	7	True				
ANR	10648	IdentifierDecl	suffix_fuzz = fuzz + suffix_context - context		10574	0					
ANR	10649	IdentifierDeclType	lin		10574	0					
ANR	10650	Identifier	suffix_fuzz		10574	1					
ANR	10651	AssignmentExpression	suffix_fuzz = fuzz + suffix_context - context		10574	2		=			
ANR	10652	Identifier	suffix_fuzz		10574	0					
ANR	10653	AdditiveExpression	fuzz + suffix_context - context		10574	1		+			
ANR	10654	Identifier	fuzz		10574	0					
ANR	10655	AdditiveExpression	suffix_context - context		10574	1		-			
ANR	10656	Identifier	suffix_context		10574	0					
ANR	10657	Identifier	context		10574	1					
ANR	10658	IdentifierDeclStatement	lin max_where = input_lines - ( pat_lines - suffix_fuzz ) + 1 ;	1141:4:31394:31453	10574	8	True				
ANR	10659	IdentifierDecl	max_where = input_lines - ( pat_lines - suffix_fuzz ) + 1		10574	0					
ANR	10660	IdentifierDeclType	lin		10574	0					
ANR	10661	Identifier	max_where		10574	1					
ANR	10662	AssignmentExpression	max_where = input_lines - ( pat_lines - suffix_fuzz ) + 1		10574	2		=			
ANR	10663	Identifier	max_where		10574	0					
ANR	10664	AdditiveExpression	input_lines - ( pat_lines - suffix_fuzz ) + 1		10574	1		-			
ANR	10665	Identifier	input_lines		10574	0					
ANR	10666	AdditiveExpression	( pat_lines - suffix_fuzz ) + 1		10574	1		+			
ANR	10667	AdditiveExpression	pat_lines - suffix_fuzz		10574	0		-			
ANR	10668	Identifier	pat_lines		10574	0					
ANR	10669	Identifier	suffix_fuzz		10574	1					
ANR	10670	PrimaryExpression	1		10574	1					
ANR	10671	IdentifierDeclStatement	lin min_where = last_frozen_line + 1 ;	1142:4:31459:31495	10574	9	True				
ANR	10672	IdentifierDecl	min_where = last_frozen_line + 1		10574	0					
ANR	10673	IdentifierDeclType	lin		10574	0					
ANR	10674	Identifier	min_where		10574	1					
ANR	10675	AssignmentExpression	min_where = last_frozen_line + 1		10574	2		=			
ANR	10676	Identifier	min_where		10574	0					
ANR	10677	AdditiveExpression	last_frozen_line + 1		10574	1		+			
ANR	10678	Identifier	last_frozen_line		10574	0					
ANR	10679	PrimaryExpression	1		10574	1					
ANR	10680	IdentifierDeclStatement	lin max_pos_offset = max_where - first_guess ;	1143:4:31501:31545	10574	10	True				
ANR	10681	IdentifierDecl	max_pos_offset = max_where - first_guess		10574	0					
ANR	10682	IdentifierDeclType	lin		10574	0					
ANR	10683	Identifier	max_pos_offset		10574	1					
ANR	10684	AssignmentExpression	max_pos_offset = max_where - first_guess		10574	2		=			
ANR	10685	Identifier	max_pos_offset		10574	0					
ANR	10686	AdditiveExpression	max_where - first_guess		10574	1		-			
ANR	10687	Identifier	max_where		10574	0					
ANR	10688	Identifier	first_guess		10574	1					
ANR	10689	IdentifierDeclStatement	lin max_neg_offset = first_guess - min_where ;	1144:4:31551:31595	10574	11	True				
ANR	10690	IdentifierDecl	max_neg_offset = first_guess - min_where		10574	0					
ANR	10691	IdentifierDeclType	lin		10574	0					
ANR	10692	Identifier	max_neg_offset		10574	1					
ANR	10693	AssignmentExpression	max_neg_offset = first_guess - min_where		10574	2		=			
ANR	10694	Identifier	max_neg_offset		10574	0					
ANR	10695	AdditiveExpression	first_guess - min_where		10574	1		-			
ANR	10696	Identifier	first_guess		10574	0					
ANR	10697	Identifier	min_where		10574	1					
ANR	10698	IdentifierDeclStatement	"lin max_offset = MAX ( max_pos_offset , max_neg_offset ) ;"	1145:4:31601:31653	10574	12	True				
ANR	10699	IdentifierDecl	"max_offset = MAX ( max_pos_offset , max_neg_offset )"		10574	0					
ANR	10700	IdentifierDeclType	lin		10574	0					
ANR	10701	Identifier	max_offset		10574	1					
ANR	10702	AssignmentExpression	"max_offset = MAX ( max_pos_offset , max_neg_offset )"		10574	2		=			
ANR	10703	Identifier	max_offset		10574	0					
ANR	10704	CallExpression	"MAX ( max_pos_offset , max_neg_offset )"		10574	1					
ANR	10705	Callee	MAX		10574	0					
ANR	10706	Identifier	MAX		10574	0					
ANR	10707	ArgumentList	max_pos_offset		10574	1					
ANR	10708	Argument	max_pos_offset		10574	0					
ANR	10709	Identifier	max_pos_offset		10574	0					
ANR	10710	Argument	max_neg_offset		10574	1					
ANR	10711	Identifier	max_neg_offset		10574	0					
ANR	10712	IdentifierDeclStatement	lin min_offset ;	1146:4:31659:31673	10574	13	True				
ANR	10713	IdentifierDecl	min_offset		10574	0					
ANR	10714	IdentifierDeclType	lin		10574	0					
ANR	10715	Identifier	min_offset		10574	1					
ANR	10716	IfStatement	if ( ! pat_lines )		10574	14					
ANR	10717	Condition	! pat_lines	1148:8:31684:31693	10574	0	True				
ANR	10718	UnaryOperationExpression	! pat_lines		10574	0					
ANR	10719	UnaryOperator	!		10574	0					
ANR	10720	Identifier	pat_lines		10574	1					
ANR	10721	ReturnStatement	return first_guess ;	1149:1:31731:31749	10574	1	True				
ANR	10722	Identifier	first_guess		10574	0					
ANR	10723	IfStatement	if ( first_guess <= max_neg_offset )		10574	15					
ANR	10724	Condition	first_guess <= max_neg_offset	1152:8:31794:31822	10574	0	True				
ANR	10725	RelationalExpression	first_guess <= max_neg_offset		10574	0		<=			
ANR	10726	Identifier	first_guess		10574	0					
ANR	10727	Identifier	max_neg_offset		10574	1					
ANR	10728	ExpressionStatement	max_neg_offset = first_guess - 1	1153:1:31826:31858	10574	1	True				
ANR	10729	AssignmentExpression	max_neg_offset = first_guess - 1		10574	0		=			
ANR	10730	Identifier	max_neg_offset		10574	0					
ANR	10731	AdditiveExpression	first_guess - 1		10574	1		-			
ANR	10732	Identifier	first_guess		10574	0					
ANR	10733	PrimaryExpression	1		10574	1					
ANR	10734	IfStatement	if ( prefix_fuzz < 0 && pch_first ( ) <= 1 )		10574	16					
ANR	10735	Condition	prefix_fuzz < 0 && pch_first ( ) <= 1	1155:8:31869:31904	10574	0	True				
ANR	10736	AndExpression	prefix_fuzz < 0 && pch_first ( ) <= 1		10574	0		&&			
ANR	10737	RelationalExpression	prefix_fuzz < 0		10574	0		<			
ANR	10738	Identifier	prefix_fuzz		10574	0					
ANR	10739	PrimaryExpression	0		10574	1					
ANR	10740	RelationalExpression	pch_first ( ) <= 1		10574	1		<=			
ANR	10741	CallExpression	pch_first ( )		10574	0					
ANR	10742	Callee	pch_first		10574	0					
ANR	10743	Identifier	pch_first		10574	0					
ANR	10744	ArgumentList			10574	1					
ANR	10745	PrimaryExpression	1		10574	1					
ANR	10746	CompoundStatement		26:6:924:924	10574	1					
ANR	10747	IfStatement	if ( suffix_fuzz < 0 )		10574	0					
ANR	10748	Condition	suffix_fuzz < 0	1159:5:31959:31973	10574	0	True				
ANR	10749	RelationalExpression	suffix_fuzz < 0		10574	0		<			
ANR	10750	Identifier	suffix_fuzz		10574	0					
ANR	10751	PrimaryExpression	0		10574	1					
ANR	10752	IfStatement	if ( pat_lines != input_lines || prefix_context < last_frozen_line )		10574	1					
ANR	10753	Condition	pat_lines != input_lines || prefix_context < last_frozen_line	1161:7:32021:32081	10574	0	True				
ANR	10754	OrExpression	pat_lines != input_lines || prefix_context < last_frozen_line		10574	0		||			
ANR	10755	EqualityExpression	pat_lines != input_lines		10574	0		!=			
ANR	10756	Identifier	pat_lines		10574	0					
ANR	10757	Identifier	input_lines		10574	1					
ANR	10758	RelationalExpression	prefix_context < last_frozen_line		10574	1		<			
ANR	10759	Identifier	prefix_context		10574	0					
ANR	10760	Identifier	last_frozen_line		10574	1					
ANR	10761	ReturnStatement	return 0 ;	1162:5:32089:32097	10574	1	True				
ANR	10762	PrimaryExpression	0		10574	0					
ANR	10763	ExpressionStatement	offset = 1 - first_guess	1164:1:32101:32125	10574	1	True				
ANR	10764	AssignmentExpression	offset = 1 - first_guess		10574	0		=			
ANR	10765	Identifier	offset		10574	0					
ANR	10766	AdditiveExpression	1 - first_guess		10574	1		-			
ANR	10767	PrimaryExpression	1		10574	0					
ANR	10768	Identifier	first_guess		10574	1					
ANR	10769	IfStatement	"if ( last_frozen_line <= prefix_context && offset <= max_pos_offset && patch_match ( first_guess , offset , 0 , suffix_fuzz ) )"		10574	2					
ANR	10770	Condition	"last_frozen_line <= prefix_context && offset <= max_pos_offset && patch_match ( first_guess , offset , 0 , suffix_fuzz )"	1165:5:32132:32256	10574	0	True				
ANR	10771	AndExpression	"last_frozen_line <= prefix_context && offset <= max_pos_offset && patch_match ( first_guess , offset , 0 , suffix_fuzz )"		10574	0		&&			
ANR	10772	RelationalExpression	last_frozen_line <= prefix_context		10574	0		<=			
ANR	10773	Identifier	last_frozen_line		10574	0					
ANR	10774	Identifier	prefix_context		10574	1					
ANR	10775	AndExpression	"offset <= max_pos_offset && patch_match ( first_guess , offset , 0 , suffix_fuzz )"		10574	1		&&			
ANR	10776	RelationalExpression	offset <= max_pos_offset		10574	0		<=			
ANR	10777	Identifier	offset		10574	0					
ANR	10778	Identifier	max_pos_offset		10574	1					
ANR	10779	CallExpression	"patch_match ( first_guess , offset , 0 , suffix_fuzz )"		10574	1					
ANR	10780	Callee	patch_match		10574	0					
ANR	10781	Identifier	patch_match		10574	0					
ANR	10782	ArgumentList	first_guess		10574	1					
ANR	10783	Argument	first_guess		10574	0					
ANR	10784	Identifier	first_guess		10574	0					
ANR	10785	Argument	offset		10574	1					
ANR	10786	Identifier	offset		10574	0					
ANR	10787	Argument	0		10574	2					
ANR	10788	PrimaryExpression	0		10574	0					
ANR	10789	Argument	suffix_fuzz		10574	3					
ANR	10790	Identifier	suffix_fuzz		10574	0					
ANR	10791	CompoundStatement		38:3:1273:1273	10574	1					
ANR	10792	ExpressionStatement	in_offset += offset	1169:5:32269:32288	10574	0	True				
ANR	10793	AssignmentExpression	in_offset += offset		10574	0		+=			
ANR	10794	Identifier	in_offset		10574	0					
ANR	10795	Identifier	offset		10574	1					
ANR	10796	ReturnStatement	return first_guess + offset ;	1170:5:32295:32322	10574	1	True				
ANR	10797	AdditiveExpression	first_guess + offset		10574	0		+			
ANR	10798	Identifier	first_guess		10574	0					
ANR	10799	Identifier	offset		10574	1					
ANR	10800	ElseStatement	else		10574	0					
ANR	10801	ReturnStatement	return 0 ;	1173:3:32338:32346	10574	0	True				
ANR	10802	PrimaryExpression	0		10574	0					
ANR	10803	ElseStatement	else		10574	0					
ANR	10804	IfStatement	if ( prefix_fuzz < 0 )		10574	0					
ANR	10805	Condition	prefix_fuzz < 0	1175:13:32369:32383	10574	0	True				
ANR	10806	RelationalExpression	prefix_fuzz < 0		10574	0		<			
ANR	10807	Identifier	prefix_fuzz		10574	0					
ANR	10808	PrimaryExpression	0		10574	1					
ANR	10809	ExpressionStatement	prefix_fuzz = 0	1176:6:32392:32407	10574	1	True				
ANR	10810	AssignmentExpression	prefix_fuzz = 0		10574	0		=			
ANR	10811	Identifier	prefix_fuzz		10574	0					
ANR	10812	PrimaryExpression	0		10574	1					
ANR	10813	IfStatement	if ( suffix_fuzz < 0 )		10574	17					
ANR	10814	Condition	suffix_fuzz < 0	1178:8:32418:32432	10574	0	True				
ANR	10815	RelationalExpression	suffix_fuzz < 0		10574	0		<			
ANR	10816	Identifier	suffix_fuzz		10574	0					
ANR	10817	PrimaryExpression	0		10574	1					
ANR	10818	CompoundStatement		49:6:1452:1452	10574	1					
ANR	10819	ExpressionStatement	offset = first_guess - ( input_lines - pat_lines + 1 )	1181:1:32480:32532	10574	0	True				
ANR	10820	AssignmentExpression	offset = first_guess - ( input_lines - pat_lines + 1 )		10574	0		=			
ANR	10821	Identifier	offset		10574	0					
ANR	10822	AdditiveExpression	first_guess - ( input_lines - pat_lines + 1 )		10574	1		-			
ANR	10823	Identifier	first_guess		10574	0					
ANR	10824	AdditiveExpression	input_lines - pat_lines + 1		10574	1		-			
ANR	10825	Identifier	input_lines		10574	0					
ANR	10826	AdditiveExpression	pat_lines + 1		10574	1		+			
ANR	10827	Identifier	pat_lines		10574	0					
ANR	10828	PrimaryExpression	1		10574	1					
ANR	10829	IfStatement	"if ( offset <= max_neg_offset && patch_match ( first_guess , - offset , prefix_fuzz , 0 ) )"		10574	1					
ANR	10830	Condition	"offset <= max_neg_offset && patch_match ( first_guess , - offset , prefix_fuzz , 0 )"	1182:5:32539:32621	10574	0	True				
ANR	10831	AndExpression	"offset <= max_neg_offset && patch_match ( first_guess , - offset , prefix_fuzz , 0 )"		10574	0		&&			
ANR	10832	RelationalExpression	offset <= max_neg_offset		10574	0		<=			
ANR	10833	Identifier	offset		10574	0					
ANR	10834	Identifier	max_neg_offset		10574	1					
ANR	10835	CallExpression	"patch_match ( first_guess , - offset , prefix_fuzz , 0 )"		10574	1					
ANR	10836	Callee	patch_match		10574	0					
ANR	10837	Identifier	patch_match		10574	0					
ANR	10838	ArgumentList	first_guess		10574	1					
ANR	10839	Argument	first_guess		10574	0					
ANR	10840	Identifier	first_guess		10574	0					
ANR	10841	Argument	- offset		10574	1					
ANR	10842	UnaryOperationExpression	- offset		10574	0					
ANR	10843	UnaryOperator	-		10574	0					
ANR	10844	Identifier	offset		10574	1					
ANR	10845	Argument	prefix_fuzz		10574	2					
ANR	10846	Identifier	prefix_fuzz		10574	0					
ANR	10847	Argument	0		10574	3					
ANR	10848	PrimaryExpression	0		10574	0					
ANR	10849	CompoundStatement		54:3:1638:1638	10574	1					
ANR	10850	ExpressionStatement	in_offset -= offset	1185:5:32634:32653	10574	0	True				
ANR	10851	AssignmentExpression	in_offset -= offset		10574	0		-=			
ANR	10852	Identifier	in_offset		10574	0					
ANR	10853	Identifier	offset		10574	1					
ANR	10854	ReturnStatement	return first_guess - offset ;	1186:5:32660:32687	10574	1	True				
ANR	10855	AdditiveExpression	first_guess - offset		10574	0		-			
ANR	10856	Identifier	first_guess		10574	0					
ANR	10857	Identifier	offset		10574	1					
ANR	10858	ElseStatement	else		10574	0					
ANR	10859	ReturnStatement	return 0 ;	1189:3:32703:32711	10574	0	True				
ANR	10860	PrimaryExpression	0		10574	0					
ANR	10861	ExpressionStatement	min_offset = max_pos_offset < 0 ? first_guess - max_where : max_neg_offset < 0 ? first_guess - min_where : 0	1192:4:32726:32850	10574	18	True				
ANR	10862	AssignmentExpression	min_offset = max_pos_offset < 0 ? first_guess - max_where : max_neg_offset < 0 ? first_guess - min_where : 0		10574	0		=			
ANR	10863	Identifier	min_offset		10574	0					
ANR	10864	ConditionalExpression	max_pos_offset < 0 ? first_guess - max_where : max_neg_offset < 0 ? first_guess - min_where : 0		10574	1					
ANR	10865	Condition	max_pos_offset < 0		10574	0					
ANR	10866	RelationalExpression	max_pos_offset < 0		10574	0		<			
ANR	10867	Identifier	max_pos_offset		10574	0					
ANR	10868	PrimaryExpression	0		10574	1					
ANR	10869	AdditiveExpression	first_guess - max_where		10574	1		-			
ANR	10870	Identifier	first_guess		10574	0					
ANR	10871	Identifier	max_where		10574	1					
ANR	10872	ConditionalExpression	max_neg_offset < 0 ? first_guess - min_where : 0		10574	2					
ANR	10873	Condition	max_neg_offset < 0		10574	0					
ANR	10874	RelationalExpression	max_neg_offset < 0		10574	0		<			
ANR	10875	Identifier	max_neg_offset		10574	0					
ANR	10876	PrimaryExpression	0		10574	1					
ANR	10877	AdditiveExpression	first_guess - min_where		10574	1		-			
ANR	10878	Identifier	first_guess		10574	0					
ANR	10879	Identifier	min_where		10574	1					
ANR	10880	PrimaryExpression	0		10574	2					
ANR	10881	ForStatement	for ( offset = min_offset ; offset <= max_offset ; offset ++ )		10574	19					
ANR	10882	ForInit	offset = min_offset ;	1195:9:32861:32880	10574	0	True				
ANR	10883	AssignmentExpression	offset = min_offset		10574	0		=			
ANR	10884	Identifier	offset		10574	0					
ANR	10885	Identifier	min_offset		10574	1					
ANR	10886	Condition	offset <= max_offset	1195:31:32883:32902	10574	1	True				
ANR	10887	RelationalExpression	offset <= max_offset		10574	0		<=			
ANR	10888	Identifier	offset		10574	0					
ANR	10889	Identifier	max_offset		10574	1					
ANR	10890	PostIncDecOperationExpression	offset ++	1195:54:32906:32913	10574	2	True				
ANR	10891	Identifier	offset		10574	0					
ANR	10892	IncDec	++		10574	1					
ANR	10893	CompoundStatement		67:1:1971:2009	10574	3					
ANR	10894	IdentifierDeclStatement	char numbuf0 [ LINENUM_LENGTH_BOUND + 1 ] ;	1196:1:32919:32957	10574	0	True				
ANR	10895	IdentifierDecl	numbuf0 [ LINENUM_LENGTH_BOUND + 1 ]		10574	0					
ANR	10896	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		10574	0					
ANR	10897	Identifier	numbuf0		10574	1					
ANR	10898	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		10574	2		+			
ANR	10899	Identifier	LINENUM_LENGTH_BOUND		10574	0					
ANR	10900	PrimaryExpression	1		10574	1					
ANR	10901	IdentifierDeclStatement	char numbuf1 [ LINENUM_LENGTH_BOUND + 1 ] ;	1197:1:32960:32998	10574	1	True				
ANR	10902	IdentifierDecl	numbuf1 [ LINENUM_LENGTH_BOUND + 1 ]		10574	0					
ANR	10903	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		10574	0					
ANR	10904	Identifier	numbuf1		10574	1					
ANR	10905	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		10574	2		+			
ANR	10906	Identifier	LINENUM_LENGTH_BOUND		10574	0					
ANR	10907	PrimaryExpression	1		10574	1					
ANR	10908	IfStatement	"if ( offset <= max_pos_offset && patch_match ( first_guess , offset , prefix_fuzz , suffix_fuzz ) )"		10574	2					
ANR	10909	Condition	"offset <= max_pos_offset && patch_match ( first_guess , offset , prefix_fuzz , suffix_fuzz )"	1198:5:33005:33096	10574	0	True				
ANR	10910	AndExpression	"offset <= max_pos_offset && patch_match ( first_guess , offset , prefix_fuzz , suffix_fuzz )"		10574	0		&&			
ANR	10911	RelationalExpression	offset <= max_pos_offset		10574	0		<=			
ANR	10912	Identifier	offset		10574	0					
ANR	10913	Identifier	max_pos_offset		10574	1					
ANR	10914	CallExpression	"patch_match ( first_guess , offset , prefix_fuzz , suffix_fuzz )"		10574	1					
ANR	10915	Callee	patch_match		10574	0					
ANR	10916	Identifier	patch_match		10574	0					
ANR	10917	ArgumentList	first_guess		10574	1					
ANR	10918	Argument	first_guess		10574	0					
ANR	10919	Identifier	first_guess		10574	0					
ANR	10920	Argument	offset		10574	1					
ANR	10921	Identifier	offset		10574	0					
ANR	10922	Argument	prefix_fuzz		10574	2					
ANR	10923	Identifier	prefix_fuzz		10574	0					
ANR	10924	Argument	suffix_fuzz		10574	3					
ANR	10925	Identifier	suffix_fuzz		10574	0					
ANR	10926	CompoundStatement		69:69:2110:2110	10574	1					
ANR	10927	IfStatement	if ( debug & 1 )		10574	0					
ANR	10928	Condition	debug & 1	1200:9:33110:33118	10574	0	True				
ANR	10929	BitAndExpression	debug & 1		10574	0		&			
ANR	10930	Identifier	debug		10574	0					
ANR	10931	PrimaryExpression	1		10574	1					
ANR	10932	ExpressionStatement	"say ( ""Offset changing from %s to %s\\n"" , format_linenum ( numbuf0 , in_offset ) , format_linenum ( numbuf1 , in_offset + offset ) )"	1201:7:33128:33260	10574	1	True				
ANR	10933	CallExpression	"say ( ""Offset changing from %s to %s\\n"" , format_linenum ( numbuf0 , in_offset ) , format_linenum ( numbuf1 , in_offset + offset ) )"		10574	0					
ANR	10934	Callee	say		10574	0					
ANR	10935	Identifier	say		10574	0					
ANR	10936	ArgumentList	"""Offset changing from %s to %s\\n"""		10574	1					
ANR	10937	Argument	"""Offset changing from %s to %s\\n"""		10574	0					
ANR	10938	PrimaryExpression	"""Offset changing from %s to %s\\n"""		10574	0					
ANR	10939	Argument	"format_linenum ( numbuf0 , in_offset )"		10574	1					
ANR	10940	CallExpression	"format_linenum ( numbuf0 , in_offset )"		10574	0					
ANR	10941	Callee	format_linenum		10574	0					
ANR	10942	Identifier	format_linenum		10574	0					
ANR	10943	ArgumentList	numbuf0		10574	1					
ANR	10944	Argument	numbuf0		10574	0					
ANR	10945	Identifier	numbuf0		10574	0					
ANR	10946	Argument	in_offset		10574	1					
ANR	10947	Identifier	in_offset		10574	0					
ANR	10948	Argument	"format_linenum ( numbuf1 , in_offset + offset )"		10574	2					
ANR	10949	CallExpression	"format_linenum ( numbuf1 , in_offset + offset )"		10574	0					
ANR	10950	Callee	format_linenum		10574	0					
ANR	10951	Identifier	format_linenum		10574	0					
ANR	10952	ArgumentList	numbuf1		10574	1					
ANR	10953	Argument	numbuf1		10574	0					
ANR	10954	Identifier	numbuf1		10574	0					
ANR	10955	Argument	in_offset + offset		10574	1					
ANR	10956	AdditiveExpression	in_offset + offset		10574	0		+			
ANR	10957	Identifier	in_offset		10574	0					
ANR	10958	Identifier	offset		10574	1					
ANR	10959	ExpressionStatement	in_offset += offset	1204:5:33267:33286	10574	1	True				
ANR	10960	AssignmentExpression	in_offset += offset		10574	0		+=			
ANR	10961	Identifier	in_offset		10574	0					
ANR	10962	Identifier	offset		10574	1					
ANR	10963	ReturnStatement	return first_guess + offset ;	1205:5:33293:33318	10574	2	True				
ANR	10964	AdditiveExpression	first_guess + offset		10574	0		+			
ANR	10965	Identifier	first_guess		10574	0					
ANR	10966	Identifier	offset		10574	1					
ANR	10967	IfStatement	"if ( offset <= max_neg_offset && patch_match ( first_guess , - offset , prefix_fuzz , suffix_fuzz ) )"		10574	3					
ANR	10968	Condition	"offset <= max_neg_offset && patch_match ( first_guess , - offset , prefix_fuzz , suffix_fuzz )"	1207:5:33328:33420	10574	0	True				
ANR	10969	AndExpression	"offset <= max_neg_offset && patch_match ( first_guess , - offset , prefix_fuzz , suffix_fuzz )"		10574	0		&&			
ANR	10970	RelationalExpression	offset <= max_neg_offset		10574	0		<=			
ANR	10971	Identifier	offset		10574	0					
ANR	10972	Identifier	max_neg_offset		10574	1					
ANR	10973	CallExpression	"patch_match ( first_guess , - offset , prefix_fuzz , suffix_fuzz )"		10574	1					
ANR	10974	Callee	patch_match		10574	0					
ANR	10975	Identifier	patch_match		10574	0					
ANR	10976	ArgumentList	first_guess		10574	1					
ANR	10977	Argument	first_guess		10574	0					
ANR	10978	Identifier	first_guess		10574	0					
ANR	10979	Argument	- offset		10574	1					
ANR	10980	UnaryOperationExpression	- offset		10574	0					
ANR	10981	UnaryOperator	-		10574	0					
ANR	10982	Identifier	offset		10574	1					
ANR	10983	Argument	prefix_fuzz		10574	2					
ANR	10984	Identifier	prefix_fuzz		10574	0					
ANR	10985	Argument	suffix_fuzz		10574	3					
ANR	10986	Identifier	suffix_fuzz		10574	0					
ANR	10987	CompoundStatement		78:70:2434:2434	10574	1					
ANR	10988	IfStatement	if ( debug & 1 )		10574	0					
ANR	10989	Condition	debug & 1	1209:9:33434:33442	10574	0	True				
ANR	10990	BitAndExpression	debug & 1		10574	0		&			
ANR	10991	Identifier	debug		10574	0					
ANR	10992	PrimaryExpression	1		10574	1					
ANR	10993	ExpressionStatement	"say ( ""Offset changing from %s to %s\\n"" , format_linenum ( numbuf0 , in_offset ) , format_linenum ( numbuf1 , in_offset - offset ) )"	1210:7:33452:33584	10574	1	True				
ANR	10994	CallExpression	"say ( ""Offset changing from %s to %s\\n"" , format_linenum ( numbuf0 , in_offset ) , format_linenum ( numbuf1 , in_offset - offset ) )"		10574	0					
ANR	10995	Callee	say		10574	0					
ANR	10996	Identifier	say		10574	0					
ANR	10997	ArgumentList	"""Offset changing from %s to %s\\n"""		10574	1					
ANR	10998	Argument	"""Offset changing from %s to %s\\n"""		10574	0					
ANR	10999	PrimaryExpression	"""Offset changing from %s to %s\\n"""		10574	0					
ANR	11000	Argument	"format_linenum ( numbuf0 , in_offset )"		10574	1					
ANR	11001	CallExpression	"format_linenum ( numbuf0 , in_offset )"		10574	0					
ANR	11002	Callee	format_linenum		10574	0					
ANR	11003	Identifier	format_linenum		10574	0					
ANR	11004	ArgumentList	numbuf0		10574	1					
ANR	11005	Argument	numbuf0		10574	0					
ANR	11006	Identifier	numbuf0		10574	0					
ANR	11007	Argument	in_offset		10574	1					
ANR	11008	Identifier	in_offset		10574	0					
ANR	11009	Argument	"format_linenum ( numbuf1 , in_offset - offset )"		10574	2					
ANR	11010	CallExpression	"format_linenum ( numbuf1 , in_offset - offset )"		10574	0					
ANR	11011	Callee	format_linenum		10574	0					
ANR	11012	Identifier	format_linenum		10574	0					
ANR	11013	ArgumentList	numbuf1		10574	1					
ANR	11014	Argument	numbuf1		10574	0					
ANR	11015	Identifier	numbuf1		10574	0					
ANR	11016	Argument	in_offset - offset		10574	1					
ANR	11017	AdditiveExpression	in_offset - offset		10574	0		-			
ANR	11018	Identifier	in_offset		10574	0					
ANR	11019	Identifier	offset		10574	1					
ANR	11020	ExpressionStatement	in_offset -= offset	1213:5:33591:33610	10574	1	True				
ANR	11021	AssignmentExpression	in_offset -= offset		10574	0		-=			
ANR	11022	Identifier	in_offset		10574	0					
ANR	11023	Identifier	offset		10574	1					
ANR	11024	ReturnStatement	return first_guess - offset ;	1214:5:33617:33642	10574	2	True				
ANR	11025	AdditiveExpression	first_guess - offset		10574	0		-			
ANR	11026	Identifier	first_guess		10574	0					
ANR	11027	Identifier	offset		10574	1					
ANR	11028	ReturnStatement	return 0 ;	1217:4:33657:33665	10574	20	True				
ANR	11029	PrimaryExpression	0		10574	0					
ANR	11030	ReturnType	static lin		10574	1					
ANR	11031	Identifier	locate_hunk		10574	2					
ANR	11032	ParameterList	lin fuzz		10574	3					
ANR	11033	Parameter	lin fuzz	1130:13:30978:30985	10574	0	True				
ANR	11034	ParameterType	lin		10574	0					
ANR	11035	Identifier	fuzz		10574	1					
ANR	11036	CFGEntryNode	ENTRY		10574		True				
ANR	11037	CFGExitNode	EXIT		10574		True				
ANR	11038	Symbol	input_lines		10574						
ANR	11039	Symbol	prefix_fuzz		10574						
ANR	11040	Symbol	MAX		10574						
ANR	11041	Symbol	patch_match		10574						
ANR	11042	Symbol	max_pos_offset		10574						
ANR	11043	Symbol	format_linenum		10574						
ANR	11044	Symbol	prefix_context		10574						
ANR	11045	Symbol	in_offset		10574						
ANR	11046	Symbol	context		10574						
ANR	11047	Symbol	suffix_fuzz		10574						
ANR	11048	Symbol	max_neg_offset		10574						
ANR	11049	Symbol	min_offset		10574						
ANR	11050	Symbol	numbuf0		10574						
ANR	11051	Symbol	debug		10574						
ANR	11052	Symbol	offset		10574						
ANR	11053	Symbol	suffix_context		10574						
ANR	11054	Symbol	numbuf1		10574						
ANR	11055	Symbol	max_offset		10574						
ANR	11056	Symbol	last_frozen_line		10574						
ANR	11057	Symbol	pch_prefix_context		10574						
ANR	11058	Symbol	pat_lines		10574						
ANR	11059	Symbol	max_where		10574						
ANR	11060	Symbol	first_guess		10574						
ANR	11061	Symbol	pch_suffix_context		10574						
ANR	11062	Symbol	min_where		10574						
ANR	11063	Symbol	pch_first		10574						
ANR	11064	Symbol	pch_ptrn_lines		10574						
ANR	11065	Symbol	fuzz		10574						
ANR	11066	DeclStmt									
ANR	11067	Decl							char	char [ LINENUM_LENGTH_BOUND + 1 ]	numbuf0
ANR	11068	DeclStmt									
ANR	11069	Decl							char	char [ LINENUM_LENGTH_BOUND + 1 ]	numbuf1
ANR	11070	Function	print_unidiff_range	1236:0:34197:34703							
ANR	11071	FunctionDef	"print_unidiff_range (FILE * fp , lin start , lin count)"		11070	0					
ANR	11072	CompoundStatement		1238:0:34262:34703	11070	0					
ANR	11073	IdentifierDeclStatement	char numbuf0 [ LINENUM_LENGTH_BOUND + 1 ] ;	1239:2:34266:34304	11070	0	True				
ANR	11074	IdentifierDecl	numbuf0 [ LINENUM_LENGTH_BOUND + 1 ]		11070	0					
ANR	11075	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		11070	0					
ANR	11076	Identifier	numbuf0		11070	1					
ANR	11077	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		11070	2		+			
ANR	11078	Identifier	LINENUM_LENGTH_BOUND		11070	0					
ANR	11079	PrimaryExpression	1		11070	1					
ANR	11080	IdentifierDeclStatement	char numbuf1 [ LINENUM_LENGTH_BOUND + 1 ] ;	1240:2:34308:34346	11070	1	True				
ANR	11081	IdentifierDecl	numbuf1 [ LINENUM_LENGTH_BOUND + 1 ]		11070	0					
ANR	11082	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		11070	0					
ANR	11083	Identifier	numbuf1		11070	1					
ANR	11084	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		11070	2		+			
ANR	11085	Identifier	LINENUM_LENGTH_BOUND		11070	0					
ANR	11086	PrimaryExpression	1		11070	1					
ANR	11087	SwitchStatement	switch ( count )		11070	2					
ANR	11088	Condition	count	1242:10:34359:34363	11070	0	True				
ANR	11089	Identifier	count		11070	0					
ANR	11090	CompoundStatement		6:4:107:107	11070	1					
ANR	11091	Label	case 0 :	1244:4:34376:34382	11070	0	True				
ANR	11092	ExpressionStatement	"fprintf ( fp , ""%s,0"" , format_linenum ( numbuf0 , start - 1 ) )"	1245:6:34390:34447	11070	1	True				
ANR	11093	CallExpression	"fprintf ( fp , ""%s,0"" , format_linenum ( numbuf0 , start - 1 ) )"		11070	0					
ANR	11094	Callee	fprintf		11070	0					
ANR	11095	Identifier	fprintf		11070	0					
ANR	11096	ArgumentList	fp		11070	1					
ANR	11097	Argument	fp		11070	0					
ANR	11098	Identifier	fp		11070	0					
ANR	11099	Argument	"""%s,0"""		11070	1					
ANR	11100	PrimaryExpression	"""%s,0"""		11070	0					
ANR	11101	Argument	"format_linenum ( numbuf0 , start - 1 )"		11070	2					
ANR	11102	CallExpression	"format_linenum ( numbuf0 , start - 1 )"		11070	0					
ANR	11103	Callee	format_linenum		11070	0					
ANR	11104	Identifier	format_linenum		11070	0					
ANR	11105	ArgumentList	numbuf0		11070	1					
ANR	11106	Argument	numbuf0		11070	0					
ANR	11107	Identifier	numbuf0		11070	0					
ANR	11108	Argument	start - 1		11070	1					
ANR	11109	AdditiveExpression	start - 1		11070	0		-			
ANR	11110	Identifier	start		11070	0					
ANR	11111	PrimaryExpression	1		11070	1					
ANR	11112	BreakStatement	break ;	1246:6:34455:34460	11070	2	True				
ANR	11113	Label	case 1 :	1248:4:34467:34473	11070	3	True				
ANR	11114	ExpressionStatement	"fprintf ( fp , ""%s"" , format_linenum ( numbuf0 , start ) )"	1249:6:34481:34532	11070	4	True				
ANR	11115	CallExpression	"fprintf ( fp , ""%s"" , format_linenum ( numbuf0 , start ) )"		11070	0					
ANR	11116	Callee	fprintf		11070	0					
ANR	11117	Identifier	fprintf		11070	0					
ANR	11118	ArgumentList	fp		11070	1					
ANR	11119	Argument	fp		11070	0					
ANR	11120	Identifier	fp		11070	0					
ANR	11121	Argument	"""%s"""		11070	1					
ANR	11122	PrimaryExpression	"""%s"""		11070	0					
ANR	11123	Argument	"format_linenum ( numbuf0 , start )"		11070	2					
ANR	11124	CallExpression	"format_linenum ( numbuf0 , start )"		11070	0					
ANR	11125	Callee	format_linenum		11070	0					
ANR	11126	Identifier	format_linenum		11070	0					
ANR	11127	ArgumentList	numbuf0		11070	1					
ANR	11128	Argument	numbuf0		11070	0					
ANR	11129	Identifier	numbuf0		11070	0					
ANR	11130	Argument	start		11070	1					
ANR	11131	Identifier	start		11070	0					
ANR	11132	BreakStatement	break ;	1250:6:34540:34545	11070	5	True				
ANR	11133	Label	default :	1252:4:34552:34559	11070	6	True				
ANR	11134	Identifier	default		11070	0					
ANR	11135	ExpressionStatement	"fprintf ( fp , ""%s,%s"" , format_linenum ( numbuf0 , start ) , format_linenum ( numbuf1 , count ) )"	1253:6:34567:34682	11070	7	True				
ANR	11136	CallExpression	"fprintf ( fp , ""%s,%s"" , format_linenum ( numbuf0 , start ) , format_linenum ( numbuf1 , count ) )"		11070	0					
ANR	11137	Callee	fprintf		11070	0					
ANR	11138	Identifier	fprintf		11070	0					
ANR	11139	ArgumentList	fp		11070	1					
ANR	11140	Argument	fp		11070	0					
ANR	11141	Identifier	fp		11070	0					
ANR	11142	Argument	"""%s,%s"""		11070	1					
ANR	11143	PrimaryExpression	"""%s,%s"""		11070	0					
ANR	11144	Argument	"format_linenum ( numbuf0 , start )"		11070	2					
ANR	11145	CallExpression	"format_linenum ( numbuf0 , start )"		11070	0					
ANR	11146	Callee	format_linenum		11070	0					
ANR	11147	Identifier	format_linenum		11070	0					
ANR	11148	ArgumentList	numbuf0		11070	1					
ANR	11149	Argument	numbuf0		11070	0					
ANR	11150	Identifier	numbuf0		11070	0					
ANR	11151	Argument	start		11070	1					
ANR	11152	Identifier	start		11070	0					
ANR	11153	Argument	"format_linenum ( numbuf1 , count )"		11070	3					
ANR	11154	CallExpression	"format_linenum ( numbuf1 , count )"		11070	0					
ANR	11155	Callee	format_linenum		11070	0					
ANR	11156	Identifier	format_linenum		11070	0					
ANR	11157	ArgumentList	numbuf1		11070	1					
ANR	11158	Argument	numbuf1		11070	0					
ANR	11159	Identifier	numbuf1		11070	0					
ANR	11160	Argument	count		11070	1					
ANR	11161	Identifier	count		11070	0					
ANR	11162	BreakStatement	break ;	1256:6:34690:34695	11070	8	True				
ANR	11163	ReturnType	static void		11070	1					
ANR	11164	Identifier	print_unidiff_range		11070	2					
ANR	11165	ParameterList	"FILE * fp , lin start , lin count"		11070	3					
ANR	11166	Parameter	FILE * fp	1237:21:34230:34237	11070	0	True				
ANR	11167	ParameterType	FILE *		11070	0					
ANR	11168	Identifier	fp		11070	1					
ANR	11169	Parameter	lin start	1237:31:34240:34248	11070	1	True				
ANR	11170	ParameterType	lin		11070	0					
ANR	11171	Identifier	start		11070	1					
ANR	11172	Parameter	lin count	1237:42:34251:34259	11070	2	True				
ANR	11173	ParameterType	lin		11070	0					
ANR	11174	Identifier	count		11070	1					
ANR	11175	CFGEntryNode	ENTRY		11070		True				
ANR	11176	CFGExitNode	EXIT		11070		True				
ANR	11177	Symbol	numbuf0		11070						
ANR	11178	Symbol	format_linenum		11070						
ANR	11179	Symbol	numbuf1		11070						
ANR	11180	Symbol	start		11070						
ANR	11181	Symbol	count		11070						
ANR	11182	Symbol	fp		11070						
ANR	11183	Function	print_header_line	1260:0:34706:34958							
ANR	11184	FunctionDef	"print_header_line (FILE * fp , const char * tag , bool reverse)"		11183	0					
ANR	11185	CompoundStatement		1262:0:34778:34958	11183	0					
ANR	11186	IdentifierDeclStatement	const char * name = pch_name ( reverse ) ;	1263:2:34782:34819	11183	0	True				
ANR	11187	IdentifierDecl	* name = pch_name ( reverse )		11183	0					
ANR	11188	IdentifierDeclType	const char *		11183	0					
ANR	11189	Identifier	name		11183	1					
ANR	11190	AssignmentExpression	* name = pch_name ( reverse )		11183	2		=			
ANR	11191	Identifier	name		11183	0					
ANR	11192	CallExpression	pch_name ( reverse )		11183	1					
ANR	11193	Callee	pch_name		11183	0					
ANR	11194	Identifier	pch_name		11183	0					
ANR	11195	ArgumentList	reverse		11183	1					
ANR	11196	Argument	reverse		11183	0					
ANR	11197	Identifier	reverse		11183	0					
ANR	11198	IdentifierDeclStatement	const char * timestr = pch_timestr ( reverse ) ;	1264:2:34823:34866	11183	1	True				
ANR	11199	IdentifierDecl	* timestr = pch_timestr ( reverse )		11183	0					
ANR	11200	IdentifierDeclType	const char *		11183	0					
ANR	11201	Identifier	timestr		11183	1					
ANR	11202	AssignmentExpression	* timestr = pch_timestr ( reverse )		11183	2		=			
ANR	11203	Identifier	timestr		11183	0					
ANR	11204	CallExpression	pch_timestr ( reverse )		11183	1					
ANR	11205	Callee	pch_timestr		11183	0					
ANR	11206	Identifier	pch_timestr		11183	0					
ANR	11207	ArgumentList	reverse		11183	1					
ANR	11208	Argument	reverse		11183	0					
ANR	11209	Identifier	reverse		11183	0					
ANR	11210	ExpressionStatement	"fprintf ( fp , ""%s %s%s\\n"" , tag , name ? name : ""/dev/null"" , timestr ? timestr : """" )"	1266:2:34871:34956	11183	2	True				
ANR	11211	CallExpression	"fprintf ( fp , ""%s %s%s\\n"" , tag , name ? name : ""/dev/null"" , timestr ? timestr : """" )"		11183	0					
ANR	11212	Callee	fprintf		11183	0					
ANR	11213	Identifier	fprintf		11183	0					
ANR	11214	ArgumentList	fp		11183	1					
ANR	11215	Argument	fp		11183	0					
ANR	11216	Identifier	fp		11183	0					
ANR	11217	Argument	"""%s %s%s\\n"""		11183	1					
ANR	11218	PrimaryExpression	"""%s %s%s\\n"""		11183	0					
ANR	11219	Argument	tag		11183	2					
ANR	11220	Identifier	tag		11183	0					
ANR	11221	Argument	"name ? name : ""/dev/null"""		11183	3					
ANR	11222	ConditionalExpression	"name ? name : ""/dev/null"""		11183	0					
ANR	11223	Condition	name		11183	0					
ANR	11224	Identifier	name		11183	0					
ANR	11225	Identifier	name		11183	1					
ANR	11226	PrimaryExpression	"""/dev/null"""		11183	2					
ANR	11227	Argument	"timestr ? timestr : """""		11183	4					
ANR	11228	ConditionalExpression	"timestr ? timestr : """""		11183	0					
ANR	11229	Condition	timestr		11183	0					
ANR	11230	Identifier	timestr		11183	0					
ANR	11231	Identifier	timestr		11183	1					
ANR	11232	PrimaryExpression	""""""		11183	2					
ANR	11233	ReturnType	static void		11183	1					
ANR	11234	Identifier	print_header_line		11183	2					
ANR	11235	ParameterList	"FILE * fp , const char * tag , bool reverse"		11183	3					
ANR	11236	Parameter	FILE * fp	1261:19:34737:34744	11183	0	True				
ANR	11237	ParameterType	FILE *		11183	0					
ANR	11238	Identifier	fp		11183	1					
ANR	11239	Parameter	const char * tag	1261:29:34747:34761	11183	1	True				
ANR	11240	ParameterType	const char *		11183	0					
ANR	11241	Identifier	tag		11183	1					
ANR	11242	Parameter	bool reverse	1261:46:34764:34775	11183	2	True				
ANR	11243	ParameterType	bool		11183	0					
ANR	11244	Identifier	reverse		11183	1					
ANR	11245	CFGEntryNode	ENTRY		11183		True				
ANR	11246	CFGExitNode	EXIT		11183		True				
ANR	11247	Symbol	pch_name		11183						
ANR	11248	Symbol	name		11183						
ANR	11249	Symbol	fp		11183						
ANR	11250	Symbol	tag		11183						
ANR	11251	Symbol	timestr		11183						
ANR	11252	Symbol	pch_timestr		11183						
ANR	11253	Symbol	reverse		11183						
ANR	11254	Function	abort_hunk_unified	1272:0:34997:36331							
ANR	11255	FunctionDef	"abort_hunk_unified (bool header , bool reverse)"		11254	0					
ANR	11256	CompoundStatement		1274:0:35056:36331	11254	0					
ANR	11257	IdentifierDeclStatement	lin old = 1 ;	1275:2:35060:35071	11254	0	True				
ANR	11258	IdentifierDecl	old = 1		11254	0					
ANR	11259	IdentifierDeclType	lin		11254	0					
ANR	11260	Identifier	old		11254	1					
ANR	11261	AssignmentExpression	old = 1		11254	2		=			
ANR	11262	Identifier	old		11254	0					
ANR	11263	PrimaryExpression	1		11254	1					
ANR	11264	IdentifierDeclStatement	lin lastline = pch_ptrn_lines ( ) ;	1276:2:35075:35107	11254	1	True				
ANR	11265	IdentifierDecl	lastline = pch_ptrn_lines ( )		11254	0					
ANR	11266	IdentifierDeclType	lin		11254	0					
ANR	11267	Identifier	lastline		11254	1					
ANR	11268	AssignmentExpression	lastline = pch_ptrn_lines ( )		11254	2		=			
ANR	11269	Identifier	lastline		11254	0					
ANR	11270	CallExpression	pch_ptrn_lines ( )		11254	1					
ANR	11271	Callee	pch_ptrn_lines		11254	0					
ANR	11272	Identifier	pch_ptrn_lines		11254	0					
ANR	11273	ArgumentList			11254	1					
ANR	11274	Statement	lin	1277:2:35111:35113	11254	2	True				
ANR	11275	Statement	new	1277:6:35115:35117	11254	3	True				
ANR	11276	Statement	=	1277:10:35119:35119	11254	4	True				
ANR	11277	ExpressionStatement	lastline + 1	1277:12:35121:35133	11254	5	True				
ANR	11278	AdditiveExpression	lastline + 1		11254	0		+			
ANR	11279	Identifier	lastline		11254	0					
ANR	11280	PrimaryExpression	1		11254	1					
ANR	11281	IdentifierDeclStatement	char const * c_function = pch_c_function ( ) ;	1278:2:35137:35178	11254	6	True				
ANR	11282	IdentifierDecl	* c_function = pch_c_function ( )		11254	0					
ANR	11283	IdentifierDeclType	char const *		11254	0					
ANR	11284	Identifier	c_function		11254	1					
ANR	11285	AssignmentExpression	* c_function = pch_c_function ( )		11254	2		=			
ANR	11286	Identifier	c_function		11254	0					
ANR	11287	CallExpression	pch_c_function ( )		11254	1					
ANR	11288	Callee	pch_c_function		11254	0					
ANR	11289	Identifier	pch_c_function		11254	0					
ANR	11290	ArgumentList			11254	1					
ANR	11291	IfStatement	if ( header )		11254	7					
ANR	11292	Condition	header	1280:6:35187:35192	11254	0	True				
ANR	11293	Identifier	header		11254	0					
ANR	11294	CompoundStatement		8:4:142:142	11254	1					
ANR	11295	IfStatement	if ( pch_name ( INDEX ) )		11254	0					
ANR	11296	Condition	pch_name ( INDEX )	1282:10:35211:35226	11254	0	True				
ANR	11297	CallExpression	pch_name ( INDEX )		11254	0					
ANR	11298	Callee	pch_name		11254	0					
ANR	11299	Identifier	pch_name		11254	0					
ANR	11300	ArgumentList	INDEX		11254	1					
ANR	11301	Argument	INDEX		11254	0					
ANR	11302	Identifier	INDEX		11254	0					
ANR	11303	ExpressionStatement	"fprintf ( rejfp , ""Index: %s\\n"" , pch_name ( INDEX ) )"	1283:1:35230:35277	11254	1	True				
ANR	11304	CallExpression	"fprintf ( rejfp , ""Index: %s\\n"" , pch_name ( INDEX ) )"		11254	0					
ANR	11305	Callee	fprintf		11254	0					
ANR	11306	Identifier	fprintf		11254	0					
ANR	11307	ArgumentList	rejfp		11254	1					
ANR	11308	Argument	rejfp		11254	0					
ANR	11309	Identifier	rejfp		11254	0					
ANR	11310	Argument	"""Index: %s\\n"""		11254	1					
ANR	11311	PrimaryExpression	"""Index: %s\\n"""		11254	0					
ANR	11312	Argument	pch_name ( INDEX )		11254	2					
ANR	11313	CallExpression	pch_name ( INDEX )		11254	0					
ANR	11314	Callee	pch_name		11254	0					
ANR	11315	Identifier	pch_name		11254	0					
ANR	11316	ArgumentList	INDEX		11254	1					
ANR	11317	Argument	INDEX		11254	0					
ANR	11318	Identifier	INDEX		11254	0					
ANR	11319	ExpressionStatement	"print_header_line ( rejfp , ""---"" , reverse )"	1284:6:35285:35326	11254	1	True				
ANR	11320	CallExpression	"print_header_line ( rejfp , ""---"" , reverse )"		11254	0					
ANR	11321	Callee	print_header_line		11254	0					
ANR	11322	Identifier	print_header_line		11254	0					
ANR	11323	ArgumentList	rejfp		11254	1					
ANR	11324	Argument	rejfp		11254	0					
ANR	11325	Identifier	rejfp		11254	0					
ANR	11326	Argument	"""---"""		11254	1					
ANR	11327	PrimaryExpression	"""---"""		11254	0					
ANR	11328	Argument	reverse		11254	2					
ANR	11329	Identifier	reverse		11254	0					
ANR	11330	ExpressionStatement	"print_header_line ( rejfp , ""+++"" , ! reverse )"	1285:6:35334:35377	11254	2	True				
ANR	11331	CallExpression	"print_header_line ( rejfp , ""+++"" , ! reverse )"		11254	0					
ANR	11332	Callee	print_header_line		11254	0					
ANR	11333	Identifier	print_header_line		11254	0					
ANR	11334	ArgumentList	rejfp		11254	1					
ANR	11335	Argument	rejfp		11254	0					
ANR	11336	Identifier	rejfp		11254	0					
ANR	11337	Argument	"""+++"""		11254	1					
ANR	11338	PrimaryExpression	"""+++"""		11254	0					
ANR	11339	Argument	! reverse		11254	2					
ANR	11340	UnaryOperationExpression	! reverse		11254	0					
ANR	11341	UnaryOperator	!		11254	0					
ANR	11342	Identifier	reverse		11254	1					
ANR	11343	ExpressionStatement	"fprintf ( rejfp , ""@@ -"" )"	1289:2:35463:35486	11254	8	True				
ANR	11344	CallExpression	"fprintf ( rejfp , ""@@ -"" )"		11254	0					
ANR	11345	Callee	fprintf		11254	0					
ANR	11346	Identifier	fprintf		11254	0					
ANR	11347	ArgumentList	rejfp		11254	1					
ANR	11348	Argument	rejfp		11254	0					
ANR	11349	Identifier	rejfp		11254	0					
ANR	11350	Argument	"""@@ -"""		11254	1					
ANR	11351	PrimaryExpression	"""@@ -"""		11254	0					
ANR	11352	ExpressionStatement	"print_unidiff_range ( rejfp , pch_first ( ) + out_offset , lastline )"	1290:2:35490:35554	11254	9	True				
ANR	11353	CallExpression	"print_unidiff_range ( rejfp , pch_first ( ) + out_offset , lastline )"		11254	0					
ANR	11354	Callee	print_unidiff_range		11254	0					
ANR	11355	Identifier	print_unidiff_range		11254	0					
ANR	11356	ArgumentList	rejfp		11254	1					
ANR	11357	Argument	rejfp		11254	0					
ANR	11358	Identifier	rejfp		11254	0					
ANR	11359	Argument	pch_first ( ) + out_offset		11254	1					
ANR	11360	AdditiveExpression	pch_first ( ) + out_offset		11254	0		+			
ANR	11361	CallExpression	pch_first ( )		11254	0					
ANR	11362	Callee	pch_first		11254	0					
ANR	11363	Identifier	pch_first		11254	0					
ANR	11364	ArgumentList			11254	1					
ANR	11365	Identifier	out_offset		11254	1					
ANR	11366	Argument	lastline		11254	2					
ANR	11367	Identifier	lastline		11254	0					
ANR	11368	ExpressionStatement	"fprintf ( rejfp , "" +"" )"	1291:2:35558:35579	11254	10	True				
ANR	11369	CallExpression	"fprintf ( rejfp , "" +"" )"		11254	0					
ANR	11370	Callee	fprintf		11254	0					
ANR	11371	Identifier	fprintf		11254	0					
ANR	11372	ArgumentList	rejfp		11254	1					
ANR	11373	Argument	rejfp		11254	0					
ANR	11374	Identifier	rejfp		11254	0					
ANR	11375	Argument	""" +"""		11254	1					
ANR	11376	PrimaryExpression	""" +"""		11254	0					
ANR	11377	ExpressionStatement	"print_unidiff_range ( rejfp , pch_newfirst ( ) + out_offset , pch_repl_lines ( ) )"	1292:2:35583:35659	11254	11	True				
ANR	11378	CallExpression	"print_unidiff_range ( rejfp , pch_newfirst ( ) + out_offset , pch_repl_lines ( ) )"		11254	0					
ANR	11379	Callee	print_unidiff_range		11254	0					
ANR	11380	Identifier	print_unidiff_range		11254	0					
ANR	11381	ArgumentList	rejfp		11254	1					
ANR	11382	Argument	rejfp		11254	0					
ANR	11383	Identifier	rejfp		11254	0					
ANR	11384	Argument	pch_newfirst ( ) + out_offset		11254	1					
ANR	11385	AdditiveExpression	pch_newfirst ( ) + out_offset		11254	0		+			
ANR	11386	CallExpression	pch_newfirst ( )		11254	0					
ANR	11387	Callee	pch_newfirst		11254	0					
ANR	11388	Identifier	pch_newfirst		11254	0					
ANR	11389	ArgumentList			11254	1					
ANR	11390	Identifier	out_offset		11254	1					
ANR	11391	Argument	pch_repl_lines ( )		11254	2					
ANR	11392	CallExpression	pch_repl_lines ( )		11254	0					
ANR	11393	Callee	pch_repl_lines		11254	0					
ANR	11394	Identifier	pch_repl_lines		11254	0					
ANR	11395	ArgumentList			11254	1					
ANR	11396	ExpressionStatement	"fprintf ( rejfp , "" @@%s\\n"" , c_function ? c_function : """" )"	1293:2:35663:35719	11254	12	True				
ANR	11397	CallExpression	"fprintf ( rejfp , "" @@%s\\n"" , c_function ? c_function : """" )"		11254	0					
ANR	11398	Callee	fprintf		11254	0					
ANR	11399	Identifier	fprintf		11254	0					
ANR	11400	ArgumentList	rejfp		11254	1					
ANR	11401	Argument	rejfp		11254	0					
ANR	11402	Identifier	rejfp		11254	0					
ANR	11403	Argument	""" @@%s\\n"""		11254	1					
ANR	11404	PrimaryExpression	""" @@%s\\n"""		11254	0					
ANR	11405	Argument	"c_function ? c_function : """""		11254	2					
ANR	11406	ConditionalExpression	"c_function ? c_function : """""		11254	0					
ANR	11407	Condition	c_function		11254	0					
ANR	11408	Identifier	c_function		11254	0					
ANR	11409	Identifier	c_function		11254	1					
ANR	11410	PrimaryExpression	""""""		11254	2					
ANR	11411	Statement	while	1295:2:35724:35728	11254	13	True				
ANR	11412	Statement	(	1295:8:35730:35730	11254	14	True				
ANR	11413	Statement	pch_char	1295:9:35731:35738	11254	15	True				
ANR	11414	Statement	(	1295:18:35740:35740	11254	16	True				
ANR	11415	Statement	new	1295:19:35741:35743	11254	17	True				
ANR	11416	Statement	)	1295:22:35744:35744	11254	18	True				
ANR	11417	Statement	==	1295:24:35746:35747	11254	19	True				
ANR	11418	Statement	'='	1295:27:35749:35751	11254	20	True				
ANR	11419	Statement	||	1295:31:35753:35754	11254	21	True				
ANR	11420	Statement	pch_char	1295:34:35756:35763	11254	22	True				
ANR	11421	Statement	(	1295:43:35765:35765	11254	23	True				
ANR	11422	Statement	new	1295:44:35766:35768	11254	24	True				
ANR	11423	Statement	)	1295:47:35769:35769	11254	25	True				
ANR	11424	Statement	==	1295:49:35771:35772	11254	26	True				
ANR	11425	Statement	'\\n'	1295:52:35774:35777	11254	27	True				
ANR	11426	Statement	)	1295:56:35778:35778	11254	28	True				
ANR	11427	Statement	new	1296:4:35784:35786	11254	29	True				
ANR	11428	Statement	++	1296:7:35787:35788	11254	30	True				
ANR	11429	ExpressionStatement		1296:9:35789:35789	11254	31	True				
ANR	11430	IfStatement	if ( diff_type != UNI_DIFF )		11254	32					
ANR	11431	Condition	diff_type != UNI_DIFF	1298:6:35798:35818	11254	0	True				
ANR	11432	EqualityExpression	diff_type != UNI_DIFF		11254	0		!=			
ANR	11433	Identifier	diff_type		11254	0					
ANR	11434	Identifier	UNI_DIFF		11254	1					
ANR	11435	ExpressionStatement	pch_normalize ( UNI_DIFF )	1299:4:35825:35849	11254	1	True				
ANR	11436	CallExpression	pch_normalize ( UNI_DIFF )		11254	0					
ANR	11437	Callee	pch_normalize		11254	0					
ANR	11438	Identifier	pch_normalize		11254	0					
ANR	11439	ArgumentList	UNI_DIFF		11254	1					
ANR	11440	Argument	UNI_DIFF		11254	0					
ANR	11441	Identifier	UNI_DIFF		11254	0					
ANR	11442	Statement	for	1301:2:35854:35856	11254	33	True				
ANR	11443	Statement	(	1301:6:35858:35858	11254	34	True				
ANR	11444	ExpressionStatement		1301:7:35859:35859	11254	35	True				
ANR	11445	ExpressionStatement		1301:9:35861:35861	11254	36	True				
ANR	11446	Statement	old	1301:11:35863:35865	11254	37	True				
ANR	11447	Statement	++	1301:14:35866:35867	11254	38	True				
ANR	11448	Statement	","	1301:16:35868:35868	11254	39	True				
ANR	11449	Statement	new	1301:18:35870:35872	11254	40	True				
ANR	11450	Statement	++	1301:21:35873:35874	11254	41	True				
ANR	11451	Statement	)	1301:23:35875:35875	11254	42	True				
ANR	11452	CompoundStatement		29:4:824:824	11254	43					
ANR	11453	ForStatement	for ( ; pch_char ( old ) == '-' ; old ++ )		11254	0					
ANR	11454	Condition	pch_char ( old ) == '-'	1303:14:35897:35917	11254	0	True				
ANR	11455	EqualityExpression	pch_char ( old ) == '-'		11254	0		==			
ANR	11456	CallExpression	pch_char ( old )		11254	0					
ANR	11457	Callee	pch_char		11254	0					
ANR	11458	Identifier	pch_char		11254	0					
ANR	11459	ArgumentList	old		11254	1					
ANR	11460	Argument	old		11254	0					
ANR	11461	Identifier	old		11254	0					
ANR	11462	PrimaryExpression	'-'		11254	1					
ANR	11463	PostIncDecOperationExpression	old ++	1303:38:35921:35925	11254	1	True				
ANR	11464	Identifier	old		11254	0					
ANR	11465	IncDec	++		11254	1					
ANR	11466	CompoundStatement		31:1:872:872	11254	2					
ANR	11467	ExpressionStatement	"fputc ( '-' , rejfp )"	1305:3:35934:35952	11254	0	True				
ANR	11468	CallExpression	"fputc ( '-' , rejfp )"		11254	0					
ANR	11469	Callee	fputc		11254	0					
ANR	11470	Identifier	fputc		11254	0					
ANR	11471	ArgumentList	'-'		11254	1					
ANR	11472	Argument	'-'		11254	0					
ANR	11473	PrimaryExpression	'-'		11254	0					
ANR	11474	Argument	rejfp		11254	1					
ANR	11475	Identifier	rejfp		11254	0					
ANR	11476	ExpressionStatement	"pch_write_line ( old , rejfp )"	1306:3:35957:35984	11254	1	True				
ANR	11477	CallExpression	"pch_write_line ( old , rejfp )"		11254	0					
ANR	11478	Callee	pch_write_line		11254	0					
ANR	11479	Identifier	pch_write_line		11254	0					
ANR	11480	ArgumentList	old		11254	1					
ANR	11481	Argument	old		11254	0					
ANR	11482	Identifier	old		11254	0					
ANR	11483	Argument	rejfp		11254	1					
ANR	11484	Identifier	rejfp		11254	0					
ANR	11485	Statement	for	1308:6:35995:35997	11254	1	True				
ANR	11486	Statement	(	1308:10:35999:35999	11254	2	True				
ANR	11487	ExpressionStatement		1308:11:36000:36000	11254	3	True				
ANR	11488	Statement	pch_char	1308:14:36003:36010	11254	4	True				
ANR	11489	Statement	(	1308:23:36012:36012	11254	5	True				
ANR	11490	Statement	new	1308:24:36013:36015	11254	6	True				
ANR	11491	Statement	)	1308:27:36016:36016	11254	7	True				
ANR	11492	Statement	==	1308:29:36018:36019	11254	8	True				
ANR	11493	ExpressionStatement	'+'	1308:32:36021:36024	11254	9	True				
ANR	11494	PrimaryExpression	'+'		11254	0					
ANR	11495	Statement	new	1308:38:36027:36029	11254	10	True				
ANR	11496	Statement	++	1308:41:36030:36031	11254	11	True				
ANR	11497	Statement	)	1308:43:36032:36032	11254	12	True				
ANR	11498	CompoundStatement		36:1:978:978	11254	13					
ANR	11499	ExpressionStatement	"fputc ( '+' , rejfp )"	1310:3:36040:36058	11254	0	True				
ANR	11500	CallExpression	"fputc ( '+' , rejfp )"		11254	0					
ANR	11501	Callee	fputc		11254	0					
ANR	11502	Identifier	fputc		11254	0					
ANR	11503	ArgumentList	'+'		11254	1					
ANR	11504	Argument	'+'		11254	0					
ANR	11505	PrimaryExpression	'+'		11254	0					
ANR	11506	Argument	rejfp		11254	1					
ANR	11507	Identifier	rejfp		11254	0					
ANR	11508	Statement	pch_write_line	1311:3:36063:36076	11254	1	True				
ANR	11509	Statement	(	1311:18:36078:36078	11254	2	True				
ANR	11510	Statement	new	1311:19:36079:36081	11254	3	True				
ANR	11511	Statement	","	1311:22:36082:36082	11254	4	True				
ANR	11512	Statement	rejfp	1311:24:36084:36088	11254	5	True				
ANR	11513	Statement	)	1311:29:36089:36089	11254	6	True				
ANR	11514	ExpressionStatement		1311:30:36090:36090	11254	7	True				
ANR	11515	IfStatement	if ( old > lastline )		11254	14					
ANR	11516	Condition	old > lastline	1314:10:36106:36119	11254	0	True				
ANR	11517	RelationalExpression	old > lastline		11254	0		>			
ANR	11518	Identifier	old		11254	0					
ANR	11519	Identifier	lastline		11254	1					
ANR	11520	BreakStatement	break ;	1315:3:36125:36130	11254	1	True				
ANR	11521	Statement	if	1317:6:36139:36140	11254	15	True				
ANR	11522	Statement	(	1317:9:36142:36142	11254	16	True				
ANR	11523	Statement	pch_char	1317:10:36143:36150	11254	17	True				
ANR	11524	Statement	(	1317:19:36152:36152	11254	18	True				
ANR	11525	Statement	new	1317:20:36153:36155	11254	19	True				
ANR	11526	Statement	)	1317:23:36156:36156	11254	20	True				
ANR	11527	Statement	!=	1317:25:36158:36159	11254	21	True				
ANR	11528	Statement	pch_char	1317:28:36161:36168	11254	22	True				
ANR	11529	Statement	(	1317:37:36170:36170	11254	23	True				
ANR	11530	Statement	old	1317:38:36171:36173	11254	24	True				
ANR	11531	Statement	)	1317:41:36174:36174	11254	25	True				
ANR	11532	Statement	)	1317:42:36175:36175	11254	26	True				
ANR	11533	Statement	mangled_patch	1318:1:36178:36190	11254	27	True				
ANR	11534	Statement	(	1318:15:36192:36192	11254	28	True				
ANR	11535	Statement	old	1318:16:36193:36195	11254	29	True				
ANR	11536	Statement	","	1318:19:36196:36196	11254	30	True				
ANR	11537	Statement	new	1318:21:36198:36200	11254	31	True				
ANR	11538	Statement	)	1318:24:36201:36201	11254	32	True				
ANR	11539	ExpressionStatement		1318:25:36202:36202	11254	33	True				
ANR	11540	ExpressionStatement	"fputc ( ' ' , rejfp )"	1320:6:36211:36229	11254	34	True				
ANR	11541	CallExpression	"fputc ( ' ' , rejfp )"		11254	0					
ANR	11542	Callee	fputc		11254	0					
ANR	11543	Identifier	fputc		11254	0					
ANR	11544	ArgumentList	' '		11254	1					
ANR	11545	Argument	' '		11254	0					
ANR	11546	PrimaryExpression	' '		11254	0					
ANR	11547	Argument	rejfp		11254	1					
ANR	11548	Identifier	rejfp		11254	0					
ANR	11549	ExpressionStatement	"pch_write_line ( old , rejfp )"	1321:6:36237:36264	11254	35	True				
ANR	11550	CallExpression	"pch_write_line ( old , rejfp )"		11254	0					
ANR	11551	Callee	pch_write_line		11254	0					
ANR	11552	Identifier	pch_write_line		11254	0					
ANR	11553	ArgumentList	old		11254	1					
ANR	11554	Argument	old		11254	0					
ANR	11555	Identifier	old		11254	0					
ANR	11556	Argument	rejfp		11254	1					
ANR	11557	Identifier	rejfp		11254	0					
ANR	11558	Statement	if	1323:2:36274:36275	11254	44	True				
ANR	11559	Statement	(	1323:5:36277:36277	11254	45	True				
ANR	11560	Statement	pch_char	1323:6:36278:36285	11254	46	True				
ANR	11561	Statement	(	1323:15:36287:36287	11254	47	True				
ANR	11562	Statement	new	1323:16:36288:36290	11254	48	True				
ANR	11563	Statement	)	1323:19:36291:36291	11254	49	True				
ANR	11564	Statement	!=	1323:21:36293:36294	11254	50	True				
ANR	11565	Statement	'^'	1323:24:36296:36298	11254	51	True				
ANR	11566	Statement	)	1323:27:36299:36299	11254	52	True				
ANR	11567	Statement	mangled_patch	1324:4:36305:36317	11254	53	True				
ANR	11568	Statement	(	1324:18:36319:36319	11254	54	True				
ANR	11569	Statement	old	1324:19:36320:36322	11254	55	True				
ANR	11570	Statement	","	1324:22:36323:36323	11254	56	True				
ANR	11571	Statement	new	1324:24:36325:36327	11254	57	True				
ANR	11572	Statement	)	1324:27:36328:36328	11254	58	True				
ANR	11573	ExpressionStatement		1324:28:36329:36329	11254	59	True				
ANR	11574	ReturnType	static void		11254	1					
ANR	11575	Identifier	abort_hunk_unified		11254	2					
ANR	11576	ParameterList	"bool header , bool reverse"		11254	3					
ANR	11577	Parameter	bool header	1273:20:35029:35039	11254	0	True				
ANR	11578	ParameterType	bool		11254	0					
ANR	11579	Identifier	header		11254	1					
ANR	11580	Parameter	bool reverse	1273:33:35042:35053	11254	1	True				
ANR	11581	ParameterType	bool		11254	0					
ANR	11582	Identifier	reverse		11254	1					
ANR	11583	CFGEntryNode	ENTRY		11254		True				
ANR	11584	CFGExitNode	EXIT		11254		True				
ANR	11585	CFGErrorNode	ERROR		11254		True				
ANR	11586	Symbol	pch_newfirst		11254						
ANR	11587	Symbol	UNI_DIFF		11254						
ANR	11588	Symbol	lastline		11254						
ANR	11589	Symbol	diff_type		11254						
ANR	11590	Symbol	old		11254						
ANR	11591	Symbol	pch_c_function		11254						
ANR	11592	Symbol	pch_name		11254						
ANR	11593	Symbol	out_offset		11254						
ANR	11594	Symbol	reverse		11254						
ANR	11595	Symbol	pch_repl_lines		11254						
ANR	11596	Symbol	pch_char		11254						
ANR	11597	Symbol	c_function		11254						
ANR	11598	Symbol	rejfp		11254						
ANR	11599	Symbol	header		11254						
ANR	11600	Symbol	INDEX		11254						
ANR	11601	Symbol	pch_ptrn_lines		11254						
ANR	11602	Symbol	pch_first		11254						
ANR	11603	Function	abort_hunk_context	1329:0:36387:38434							
ANR	11604	FunctionDef	"abort_hunk_context (bool header , bool reverse)"		11603	0					
ANR	11605	CompoundStatement		1331:0:36446:38434	11603	0					
ANR	11606	IdentifierDeclStatement	lin i ;	1332:4:36452:36457	11603	0	True				
ANR	11607	IdentifierDecl	i		11603	0					
ANR	11608	IdentifierDeclType	lin		11603	0					
ANR	11609	Identifier	i		11603	1					
ANR	11610	IdentifierDeclStatement	lin pat_end = pch_end ( ) ;	1333:4:36463:36487	11603	1	True				
ANR	11611	IdentifierDecl	pat_end = pch_end ( )		11603	0					
ANR	11612	IdentifierDeclType	lin		11603	0					
ANR	11613	Identifier	pat_end		11603	1					
ANR	11614	AssignmentExpression	pat_end = pch_end ( )		11603	2		=			
ANR	11615	Identifier	pat_end		11603	0					
ANR	11616	CallExpression	pch_end ( )		11603	1					
ANR	11617	Callee	pch_end		11603	0					
ANR	11618	Identifier	pch_end		11603	0					
ANR	11619	ArgumentList			11603	1					
ANR	11620	IdentifierDeclStatement	lin oldfirst = pch_first ( ) + out_offset ;	1335:4:36571:36610	11603	2	True				
ANR	11621	IdentifierDecl	oldfirst = pch_first ( ) + out_offset		11603	0					
ANR	11622	IdentifierDeclType	lin		11603	0					
ANR	11623	Identifier	oldfirst		11603	1					
ANR	11624	AssignmentExpression	oldfirst = pch_first ( ) + out_offset		11603	2		=			
ANR	11625	Identifier	oldfirst		11603	0					
ANR	11626	AdditiveExpression	pch_first ( ) + out_offset		11603	1		+			
ANR	11627	CallExpression	pch_first ( )		11603	0					
ANR	11628	Callee	pch_first		11603	0					
ANR	11629	Identifier	pch_first		11603	0					
ANR	11630	ArgumentList			11603	1					
ANR	11631	Identifier	out_offset		11603	1					
ANR	11632	IdentifierDeclStatement	lin newfirst = pch_newfirst ( ) + out_offset ;	1336:4:36616:36658	11603	3	True				
ANR	11633	IdentifierDecl	newfirst = pch_newfirst ( ) + out_offset		11603	0					
ANR	11634	IdentifierDeclType	lin		11603	0					
ANR	11635	Identifier	newfirst		11603	1					
ANR	11636	AssignmentExpression	newfirst = pch_newfirst ( ) + out_offset		11603	2		=			
ANR	11637	Identifier	newfirst		11603	0					
ANR	11638	AdditiveExpression	pch_newfirst ( ) + out_offset		11603	1		+			
ANR	11639	CallExpression	pch_newfirst ( )		11603	0					
ANR	11640	Callee	pch_newfirst		11603	0					
ANR	11641	Identifier	pch_newfirst		11603	0					
ANR	11642	ArgumentList			11603	1					
ANR	11643	Identifier	out_offset		11603	1					
ANR	11644	IdentifierDeclStatement	lin oldlast = oldfirst + pch_ptrn_lines ( ) - 1 ;	1337:4:36664:36709	11603	4	True				
ANR	11645	IdentifierDecl	oldlast = oldfirst + pch_ptrn_lines ( ) - 1		11603	0					
ANR	11646	IdentifierDeclType	lin		11603	0					
ANR	11647	Identifier	oldlast		11603	1					
ANR	11648	AssignmentExpression	oldlast = oldfirst + pch_ptrn_lines ( ) - 1		11603	2		=			
ANR	11649	Identifier	oldlast		11603	0					
ANR	11650	AdditiveExpression	oldfirst + pch_ptrn_lines ( ) - 1		11603	1		+			
ANR	11651	Identifier	oldfirst		11603	0					
ANR	11652	AdditiveExpression	pch_ptrn_lines ( ) - 1		11603	1		-			
ANR	11653	CallExpression	pch_ptrn_lines ( )		11603	0					
ANR	11654	Callee	pch_ptrn_lines		11603	0					
ANR	11655	Identifier	pch_ptrn_lines		11603	0					
ANR	11656	ArgumentList			11603	1					
ANR	11657	PrimaryExpression	1		11603	1					
ANR	11658	IdentifierDeclStatement	lin newlast = newfirst + pch_repl_lines ( ) - 1 ;	1338:4:36715:36760	11603	5	True				
ANR	11659	IdentifierDecl	newlast = newfirst + pch_repl_lines ( ) - 1		11603	0					
ANR	11660	IdentifierDeclType	lin		11603	0					
ANR	11661	Identifier	newlast		11603	1					
ANR	11662	AssignmentExpression	newlast = newfirst + pch_repl_lines ( ) - 1		11603	2		=			
ANR	11663	Identifier	newlast		11603	0					
ANR	11664	AdditiveExpression	newfirst + pch_repl_lines ( ) - 1		11603	1		+			
ANR	11665	Identifier	newfirst		11603	0					
ANR	11666	AdditiveExpression	pch_repl_lines ( ) - 1		11603	1		-			
ANR	11667	CallExpression	pch_repl_lines ( )		11603	0					
ANR	11668	Callee	pch_repl_lines		11603	0					
ANR	11669	Identifier	pch_repl_lines		11603	0					
ANR	11670	ArgumentList			11603	1					
ANR	11671	PrimaryExpression	1		11603	1					
ANR	11672	IdentifierDeclStatement	"char const * stars = ( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ****"" : """" ;"	1339:4:36766:36848	11603	6	True				
ANR	11673	IdentifierDecl	"* stars = ( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ****"" : """""		11603	0					
ANR	11674	IdentifierDeclType	char const *		11603	0					
ANR	11675	Identifier	stars		11603	1					
ANR	11676	AssignmentExpression	"* stars = ( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ****"" : """""		11603	2		=			
ANR	11677	Identifier	stars		11603	0					
ANR	11678	ConditionalExpression	"( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ****"" : """""		11603	1					
ANR	11679	Condition	( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type		11603	0					
ANR	11680	RelationalExpression	( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type		11603	0		<=			
ANR	11681	CastExpression	( int ) NEW_CONTEXT_DIFF		11603	0					
ANR	11682	CastTarget	int		11603	0					
ANR	11683	Identifier	NEW_CONTEXT_DIFF		11603	1					
ANR	11684	CastExpression	( int ) diff_type		11603	1					
ANR	11685	CastTarget	int		11603	0					
ANR	11686	Identifier	diff_type		11603	1					
ANR	11687	PrimaryExpression	""" ****"""		11603	1					
ANR	11688	PrimaryExpression	""""""		11603	2					
ANR	11689	IdentifierDeclStatement	"char const * minuses = ( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ----"" : "" -----"" ;"	1341:4:36854:36944	11603	7	True				
ANR	11690	IdentifierDecl	"* minuses = ( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ----"" : "" -----"""		11603	0					
ANR	11691	IdentifierDeclType	char const *		11603	0					
ANR	11692	Identifier	minuses		11603	1					
ANR	11693	AssignmentExpression	"* minuses = ( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ----"" : "" -----"""		11603	2		=			
ANR	11694	Identifier	minuses		11603	0					
ANR	11695	ConditionalExpression	"( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type ? "" ----"" : "" -----"""		11603	1					
ANR	11696	Condition	( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type		11603	0					
ANR	11697	RelationalExpression	( int ) NEW_CONTEXT_DIFF <= ( int ) diff_type		11603	0		<=			
ANR	11698	CastExpression	( int ) NEW_CONTEXT_DIFF		11603	0					
ANR	11699	CastTarget	int		11603	0					
ANR	11700	Identifier	NEW_CONTEXT_DIFF		11603	1					
ANR	11701	CastExpression	( int ) diff_type		11603	1					
ANR	11702	CastTarget	int		11603	0					
ANR	11703	Identifier	diff_type		11603	1					
ANR	11704	PrimaryExpression	""" ----"""		11603	1					
ANR	11705	PrimaryExpression	""" -----"""		11603	2					
ANR	11706	IdentifierDeclStatement	char const * c_function = pch_c_function ( ) ;	1343:4:36950:36991	11603	8	True				
ANR	11707	IdentifierDecl	* c_function = pch_c_function ( )		11603	0					
ANR	11708	IdentifierDeclType	char const *		11603	0					
ANR	11709	Identifier	c_function		11603	1					
ANR	11710	AssignmentExpression	* c_function = pch_c_function ( )		11603	2		=			
ANR	11711	Identifier	c_function		11603	0					
ANR	11712	CallExpression	pch_c_function ( )		11603	1					
ANR	11713	Callee	pch_c_function		11603	0					
ANR	11714	Identifier	pch_c_function		11603	0					
ANR	11715	ArgumentList			11603	1					
ANR	11716	IfStatement	if ( diff_type == UNI_DIFF )		11603	9					
ANR	11717	Condition	diff_type == UNI_DIFF	1345:8:37002:37022	11603	0	True				
ANR	11718	EqualityExpression	diff_type == UNI_DIFF		11603	0		==			
ANR	11719	Identifier	diff_type		11603	0					
ANR	11720	Identifier	UNI_DIFF		11603	1					
ANR	11721	ExpressionStatement	pch_normalize ( NEW_CONTEXT_DIFF )	1346:6:37031:37063	11603	1	True				
ANR	11722	CallExpression	pch_normalize ( NEW_CONTEXT_DIFF )		11603	0					
ANR	11723	Callee	pch_normalize		11603	0					
ANR	11724	Identifier	pch_normalize		11603	0					
ANR	11725	ArgumentList	NEW_CONTEXT_DIFF		11603	1					
ANR	11726	Argument	NEW_CONTEXT_DIFF		11603	0					
ANR	11727	Identifier	NEW_CONTEXT_DIFF		11603	0					
ANR	11728	IfStatement	if ( header )		11603	10					
ANR	11729	Condition	header	1348:8:37074:37079	11603	0	True				
ANR	11730	Identifier	header		11603	0					
ANR	11731	CompoundStatement		19:6:641:641	11603	1					
ANR	11732	IfStatement	if ( pch_name ( INDEX ) )		11603	0					
ANR	11733	Condition	pch_name ( INDEX )	1350:5:37095:37110	11603	0	True				
ANR	11734	CallExpression	pch_name ( INDEX )		11603	0					
ANR	11735	Callee	pch_name		11603	0					
ANR	11736	Identifier	pch_name		11603	0					
ANR	11737	ArgumentList	INDEX		11603	1					
ANR	11738	Argument	INDEX		11603	0					
ANR	11739	Identifier	INDEX		11603	0					
ANR	11740	ExpressionStatement	"fprintf ( rejfp , ""Index: %s\\n"" , pch_name ( INDEX ) )"	1351:3:37116:37163	11603	1	True				
ANR	11741	CallExpression	"fprintf ( rejfp , ""Index: %s\\n"" , pch_name ( INDEX ) )"		11603	0					
ANR	11742	Callee	fprintf		11603	0					
ANR	11743	Identifier	fprintf		11603	0					
ANR	11744	ArgumentList	rejfp		11603	1					
ANR	11745	Argument	rejfp		11603	0					
ANR	11746	Identifier	rejfp		11603	0					
ANR	11747	Argument	"""Index: %s\\n"""		11603	1					
ANR	11748	PrimaryExpression	"""Index: %s\\n"""		11603	0					
ANR	11749	Argument	pch_name ( INDEX )		11603	2					
ANR	11750	CallExpression	pch_name ( INDEX )		11603	0					
ANR	11751	Callee	pch_name		11603	0					
ANR	11752	Identifier	pch_name		11603	0					
ANR	11753	ArgumentList	INDEX		11603	1					
ANR	11754	Argument	INDEX		11603	0					
ANR	11755	Identifier	INDEX		11603	0					
ANR	11756	ExpressionStatement	"print_header_line ( rejfp , ""***"" , reverse )"	1352:1:37166:37207	11603	1	True				
ANR	11757	CallExpression	"print_header_line ( rejfp , ""***"" , reverse )"		11603	0					
ANR	11758	Callee	print_header_line		11603	0					
ANR	11759	Identifier	print_header_line		11603	0					
ANR	11760	ArgumentList	rejfp		11603	1					
ANR	11761	Argument	rejfp		11603	0					
ANR	11762	Identifier	rejfp		11603	0					
ANR	11763	Argument	"""***"""		11603	1					
ANR	11764	PrimaryExpression	"""***"""		11603	0					
ANR	11765	Argument	reverse		11603	2					
ANR	11766	Identifier	reverse		11603	0					
ANR	11767	ExpressionStatement	"print_header_line ( rejfp , ""---"" , ! reverse )"	1353:1:37210:37253	11603	2	True				
ANR	11768	CallExpression	"print_header_line ( rejfp , ""---"" , ! reverse )"		11603	0					
ANR	11769	Callee	print_header_line		11603	0					
ANR	11770	Identifier	print_header_line		11603	0					
ANR	11771	ArgumentList	rejfp		11603	1					
ANR	11772	Argument	rejfp		11603	0					
ANR	11773	Identifier	rejfp		11603	0					
ANR	11774	Argument	"""---"""		11603	1					
ANR	11775	PrimaryExpression	"""---"""		11603	0					
ANR	11776	Argument	! reverse		11603	2					
ANR	11777	UnaryOperationExpression	! reverse		11603	0					
ANR	11778	UnaryOperator	!		11603	0					
ANR	11779	Identifier	reverse		11603	1					
ANR	11780	ExpressionStatement	"fprintf ( rejfp , ""***************%s\\n"" , c_function ? c_function : """" )"	1355:4:37267:37334	11603	11	True				
ANR	11781	CallExpression	"fprintf ( rejfp , ""***************%s\\n"" , c_function ? c_function : """" )"		11603	0					
ANR	11782	Callee	fprintf		11603	0					
ANR	11783	Identifier	fprintf		11603	0					
ANR	11784	ArgumentList	rejfp		11603	1					
ANR	11785	Argument	rejfp		11603	0					
ANR	11786	Identifier	rejfp		11603	0					
ANR	11787	Argument	"""***************%s\\n"""		11603	1					
ANR	11788	PrimaryExpression	"""***************%s\\n"""		11603	0					
ANR	11789	Argument	"c_function ? c_function : """""		11603	2					
ANR	11790	ConditionalExpression	"c_function ? c_function : """""		11603	0					
ANR	11791	Condition	c_function		11603	0					
ANR	11792	Identifier	c_function		11603	0					
ANR	11793	Identifier	c_function		11603	1					
ANR	11794	PrimaryExpression	""""""		11603	2					
ANR	11795	ForStatement	for ( i = 0 ; i <= pat_end ; i ++ )		11603	12					
ANR	11796	ForInit	i = 0 ;	1356:9:37345:37348	11603	0	True				
ANR	11797	AssignmentExpression	i = 0		11603	0		=			
ANR	11798	Identifier	i		11603	0					
ANR	11799	PrimaryExpression	0		11603	1					
ANR	11800	Condition	i <= pat_end	1356:14:37350:37359	11603	1	True				
ANR	11801	RelationalExpression	i <= pat_end		11603	0		<=			
ANR	11802	Identifier	i		11603	0					
ANR	11803	Identifier	pat_end		11603	1					
ANR	11804	PostIncDecOperationExpression	i ++	1356:26:37362:37364	11603	2	True				
ANR	11805	Identifier	i		11603	0					
ANR	11806	IncDec	++		11603	1					
ANR	11807	CompoundStatement		28:1:964:1002	11603	3					
ANR	11808	IdentifierDeclStatement	char numbuf0 [ LINENUM_LENGTH_BOUND + 1 ] ;	1357:1:37370:37408	11603	0	True				
ANR	11809	IdentifierDecl	numbuf0 [ LINENUM_LENGTH_BOUND + 1 ]		11603	0					
ANR	11810	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		11603	0					
ANR	11811	Identifier	numbuf0		11603	1					
ANR	11812	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		11603	2		+			
ANR	11813	Identifier	LINENUM_LENGTH_BOUND		11603	0					
ANR	11814	PrimaryExpression	1		11603	1					
ANR	11815	IdentifierDeclStatement	char numbuf1 [ LINENUM_LENGTH_BOUND + 1 ] ;	1358:1:37411:37449	11603	1	True				
ANR	11816	IdentifierDecl	numbuf1 [ LINENUM_LENGTH_BOUND + 1 ]		11603	0					
ANR	11817	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		11603	0					
ANR	11818	Identifier	numbuf1		11603	1					
ANR	11819	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		11603	2		+			
ANR	11820	Identifier	LINENUM_LENGTH_BOUND		11603	0					
ANR	11821	PrimaryExpression	1		11603	1					
ANR	11822	SwitchStatement	switch ( pch_char ( i ) )		11603	2					
ANR	11823	Condition	pch_char ( i )	1359:9:37460:37470	11603	0	True				
ANR	11824	CallExpression	pch_char ( i )		11603	0					
ANR	11825	Callee	pch_char		11603	0					
ANR	11826	Identifier	pch_char		11603	0					
ANR	11827	ArgumentList	i		11603	1					
ANR	11828	Argument	i		11603	0					
ANR	11829	Identifier	i		11603	0					
ANR	11830	CompoundStatement		29:22:1026:1026	11603	1					
ANR	11831	Label	case '*' :	1360:1:37476:37484	11603	0	True				
ANR	11832	IfStatement	if ( oldlast < oldfirst )		11603	1					
ANR	11833	Condition	oldlast < oldfirst	1361:9:37495:37512	11603	0	True				
ANR	11834	RelationalExpression	oldlast < oldfirst		11603	0		<			
ANR	11835	Identifier	oldlast		11603	0					
ANR	11836	Identifier	oldfirst		11603	1					
ANR	11837	ExpressionStatement	"fprintf ( rejfp , ""*** 0%s\\n"" , stars )"	1362:2:37517:37551	11603	1	True				
ANR	11838	CallExpression	"fprintf ( rejfp , ""*** 0%s\\n"" , stars )"		11603	0					
ANR	11839	Callee	fprintf		11603	0					
ANR	11840	Identifier	fprintf		11603	0					
ANR	11841	ArgumentList	rejfp		11603	1					
ANR	11842	Argument	rejfp		11603	0					
ANR	11843	Identifier	rejfp		11603	0					
ANR	11844	Argument	"""*** 0%s\\n"""		11603	1					
ANR	11845	PrimaryExpression	"""*** 0%s\\n"""		11603	0					
ANR	11846	Argument	stars		11603	2					
ANR	11847	Identifier	stars		11603	0					
ANR	11848	ElseStatement	else		11603	0					
ANR	11849	IfStatement	if ( oldlast == oldfirst )		11603	0					
ANR	11850	Condition	oldlast == oldfirst	1363:14:37567:37585	11603	0	True				
ANR	11851	EqualityExpression	oldlast == oldfirst		11603	0		==			
ANR	11852	Identifier	oldlast		11603	0					
ANR	11853	Identifier	oldfirst		11603	1					
ANR	11854	ExpressionStatement	"fprintf ( rejfp , ""*** %s%s\\n"" , format_linenum ( numbuf0 , oldfirst ) , stars )"	1364:2:37590:37666	11603	1	True				
ANR	11855	CallExpression	"fprintf ( rejfp , ""*** %s%s\\n"" , format_linenum ( numbuf0 , oldfirst ) , stars )"		11603	0					
ANR	11856	Callee	fprintf		11603	0					
ANR	11857	Identifier	fprintf		11603	0					
ANR	11858	ArgumentList	rejfp		11603	1					
ANR	11859	Argument	rejfp		11603	0					
ANR	11860	Identifier	rejfp		11603	0					
ANR	11861	Argument	"""*** %s%s\\n"""		11603	1					
ANR	11862	PrimaryExpression	"""*** %s%s\\n"""		11603	0					
ANR	11863	Argument	"format_linenum ( numbuf0 , oldfirst )"		11603	2					
ANR	11864	CallExpression	"format_linenum ( numbuf0 , oldfirst )"		11603	0					
ANR	11865	Callee	format_linenum		11603	0					
ANR	11866	Identifier	format_linenum		11603	0					
ANR	11867	ArgumentList	numbuf0		11603	1					
ANR	11868	Argument	numbuf0		11603	0					
ANR	11869	Identifier	numbuf0		11603	0					
ANR	11870	Argument	oldfirst		11603	1					
ANR	11871	Identifier	oldfirst		11603	0					
ANR	11872	Argument	stars		11603	3					
ANR	11873	Identifier	stars		11603	0					
ANR	11874	ElseStatement	else		11603	0					
ANR	11875	ExpressionStatement	"fprintf ( rejfp , ""*** %s,%s%s\\n"" , format_linenum ( numbuf0 , oldfirst ) , format_linenum ( numbuf1 , oldlast ) , stars )"	1367:2:37680:37798	11603	0	True				
ANR	11876	CallExpression	"fprintf ( rejfp , ""*** %s,%s%s\\n"" , format_linenum ( numbuf0 , oldfirst ) , format_linenum ( numbuf1 , oldlast ) , stars )"		11603	0					
ANR	11877	Callee	fprintf		11603	0					
ANR	11878	Identifier	fprintf		11603	0					
ANR	11879	ArgumentList	rejfp		11603	1					
ANR	11880	Argument	rejfp		11603	0					
ANR	11881	Identifier	rejfp		11603	0					
ANR	11882	Argument	"""*** %s,%s%s\\n"""		11603	1					
ANR	11883	PrimaryExpression	"""*** %s,%s%s\\n"""		11603	0					
ANR	11884	Argument	"format_linenum ( numbuf0 , oldfirst )"		11603	2					
ANR	11885	CallExpression	"format_linenum ( numbuf0 , oldfirst )"		11603	0					
ANR	11886	Callee	format_linenum		11603	0					
ANR	11887	Identifier	format_linenum		11603	0					
ANR	11888	ArgumentList	numbuf0		11603	1					
ANR	11889	Argument	numbuf0		11603	0					
ANR	11890	Identifier	numbuf0		11603	0					
ANR	11891	Argument	oldfirst		11603	1					
ANR	11892	Identifier	oldfirst		11603	0					
ANR	11893	Argument	"format_linenum ( numbuf1 , oldlast )"		11603	3					
ANR	11894	CallExpression	"format_linenum ( numbuf1 , oldlast )"		11603	0					
ANR	11895	Callee	format_linenum		11603	0					
ANR	11896	Identifier	format_linenum		11603	0					
ANR	11897	ArgumentList	numbuf1		11603	1					
ANR	11898	Argument	numbuf1		11603	0					
ANR	11899	Identifier	numbuf1		11603	0					
ANR	11900	Argument	oldlast		11603	1					
ANR	11901	Identifier	oldlast		11603	0					
ANR	11902	Argument	stars		11603	4					
ANR	11903	Identifier	stars		11603	0					
ANR	11904	BreakStatement	break ;	1370:5:37805:37810	11603	2	True				
ANR	11905	Label	case '=' :	1371:1:37813:37821	11603	3	True				
ANR	11906	IfStatement	if ( newlast < newfirst )		11603	4					
ANR	11907	Condition	newlast < newfirst	1372:9:37832:37849	11603	0	True				
ANR	11908	RelationalExpression	newlast < newfirst		11603	0		<			
ANR	11909	Identifier	newlast		11603	0					
ANR	11910	Identifier	newfirst		11603	1					
ANR	11911	ExpressionStatement	"fprintf ( rejfp , ""--- 0%s\\n"" , minuses )"	1373:2:37854:37890	11603	1	True				
ANR	11912	CallExpression	"fprintf ( rejfp , ""--- 0%s\\n"" , minuses )"		11603	0					
ANR	11913	Callee	fprintf		11603	0					
ANR	11914	Identifier	fprintf		11603	0					
ANR	11915	ArgumentList	rejfp		11603	1					
ANR	11916	Argument	rejfp		11603	0					
ANR	11917	Identifier	rejfp		11603	0					
ANR	11918	Argument	"""--- 0%s\\n"""		11603	1					
ANR	11919	PrimaryExpression	"""--- 0%s\\n"""		11603	0					
ANR	11920	Argument	minuses		11603	2					
ANR	11921	Identifier	minuses		11603	0					
ANR	11922	ElseStatement	else		11603	0					
ANR	11923	IfStatement	if ( newlast == newfirst )		11603	0					
ANR	11924	Condition	newlast == newfirst	1374:14:37906:37924	11603	0	True				
ANR	11925	EqualityExpression	newlast == newfirst		11603	0		==			
ANR	11926	Identifier	newlast		11603	0					
ANR	11927	Identifier	newfirst		11603	1					
ANR	11928	ExpressionStatement	"fprintf ( rejfp , ""--- %s%s\\n"" , format_linenum ( numbuf0 , newfirst ) , minuses )"	1375:2:37929:38007	11603	1	True				
ANR	11929	CallExpression	"fprintf ( rejfp , ""--- %s%s\\n"" , format_linenum ( numbuf0 , newfirst ) , minuses )"		11603	0					
ANR	11930	Callee	fprintf		11603	0					
ANR	11931	Identifier	fprintf		11603	0					
ANR	11932	ArgumentList	rejfp		11603	1					
ANR	11933	Argument	rejfp		11603	0					
ANR	11934	Identifier	rejfp		11603	0					
ANR	11935	Argument	"""--- %s%s\\n"""		11603	1					
ANR	11936	PrimaryExpression	"""--- %s%s\\n"""		11603	0					
ANR	11937	Argument	"format_linenum ( numbuf0 , newfirst )"		11603	2					
ANR	11938	CallExpression	"format_linenum ( numbuf0 , newfirst )"		11603	0					
ANR	11939	Callee	format_linenum		11603	0					
ANR	11940	Identifier	format_linenum		11603	0					
ANR	11941	ArgumentList	numbuf0		11603	1					
ANR	11942	Argument	numbuf0		11603	0					
ANR	11943	Identifier	numbuf0		11603	0					
ANR	11944	Argument	newfirst		11603	1					
ANR	11945	Identifier	newfirst		11603	0					
ANR	11946	Argument	minuses		11603	3					
ANR	11947	Identifier	minuses		11603	0					
ANR	11948	ElseStatement	else		11603	0					
ANR	11949	ExpressionStatement	"fprintf ( rejfp , ""--- %s,%s%s\\n"" , format_linenum ( numbuf0 , newfirst ) , format_linenum ( numbuf1 , newlast ) , minuses )"	1378:2:38021:38141	11603	0	True				
ANR	11950	CallExpression	"fprintf ( rejfp , ""--- %s,%s%s\\n"" , format_linenum ( numbuf0 , newfirst ) , format_linenum ( numbuf1 , newlast ) , minuses )"		11603	0					
ANR	11951	Callee	fprintf		11603	0					
ANR	11952	Identifier	fprintf		11603	0					
ANR	11953	ArgumentList	rejfp		11603	1					
ANR	11954	Argument	rejfp		11603	0					
ANR	11955	Identifier	rejfp		11603	0					
ANR	11956	Argument	"""--- %s,%s%s\\n"""		11603	1					
ANR	11957	PrimaryExpression	"""--- %s,%s%s\\n"""		11603	0					
ANR	11958	Argument	"format_linenum ( numbuf0 , newfirst )"		11603	2					
ANR	11959	CallExpression	"format_linenum ( numbuf0 , newfirst )"		11603	0					
ANR	11960	Callee	format_linenum		11603	0					
ANR	11961	Identifier	format_linenum		11603	0					
ANR	11962	ArgumentList	numbuf0		11603	1					
ANR	11963	Argument	numbuf0		11603	0					
ANR	11964	Identifier	numbuf0		11603	0					
ANR	11965	Argument	newfirst		11603	1					
ANR	11966	Identifier	newfirst		11603	0					
ANR	11967	Argument	"format_linenum ( numbuf1 , newlast )"		11603	3					
ANR	11968	CallExpression	"format_linenum ( numbuf1 , newlast )"		11603	0					
ANR	11969	Callee	format_linenum		11603	0					
ANR	11970	Identifier	format_linenum		11603	0					
ANR	11971	ArgumentList	numbuf1		11603	1					
ANR	11972	Argument	numbuf1		11603	0					
ANR	11973	Identifier	numbuf1		11603	0					
ANR	11974	Argument	newlast		11603	1					
ANR	11975	Identifier	newlast		11603	0					
ANR	11976	Argument	minuses		11603	4					
ANR	11977	Identifier	minuses		11603	0					
ANR	11978	BreakStatement	break ;	1381:5:38148:38153	11603	5	True				
ANR	11979	Label	case ' ' :	1382:1:38156:38164	11603	6	True				
ANR	11980	Label	case '-' :	1382:11:38166:38174	11603	7	True				
ANR	11981	Label	case '+' :	1382:21:38176:38184	11603	8	True				
ANR	11982	Label	case '!' :	1382:31:38186:38194	11603	9	True				
ANR	11983	ExpressionStatement	"fprintf ( rejfp , ""%c "" , pch_char ( i ) )"	1383:5:38201:38237	11603	10	True				
ANR	11984	CallExpression	"fprintf ( rejfp , ""%c "" , pch_char ( i ) )"		11603	0					
ANR	11985	Callee	fprintf		11603	0					
ANR	11986	Identifier	fprintf		11603	0					
ANR	11987	ArgumentList	rejfp		11603	1					
ANR	11988	Argument	rejfp		11603	0					
ANR	11989	Identifier	rejfp		11603	0					
ANR	11990	Argument	"""%c """		11603	1					
ANR	11991	PrimaryExpression	"""%c """		11603	0					
ANR	11992	Argument	pch_char ( i )		11603	2					
ANR	11993	CallExpression	pch_char ( i )		11603	0					
ANR	11994	Callee	pch_char		11603	0					
ANR	11995	Identifier	pch_char		11603	0					
ANR	11996	ArgumentList	i		11603	1					
ANR	11997	Argument	i		11603	0					
ANR	11998	Identifier	i		11603	0					
ANR	11999	Label	case '\\n' :	1385:1:38261:38270	11603	11	True				
ANR	12000	ExpressionStatement	"pch_write_line ( i , rejfp )"	1386:5:38277:38302	11603	12	True				
ANR	12001	CallExpression	"pch_write_line ( i , rejfp )"		11603	0					
ANR	12002	Callee	pch_write_line		11603	0					
ANR	12003	Identifier	pch_write_line		11603	0					
ANR	12004	ArgumentList	i		11603	1					
ANR	12005	Argument	i		11603	0					
ANR	12006	Identifier	i		11603	0					
ANR	12007	Argument	rejfp		11603	1					
ANR	12008	Identifier	rejfp		11603	0					
ANR	12009	BreakStatement	break ;	1387:5:38309:38314	11603	13	True				
ANR	12010	Label	default :	1388:1:38317:38324	11603	14	True				
ANR	12011	Identifier	default		11603	0					
ANR	12012	ExpressionStatement	"fatal ( ""fatal internal error in abort_hunk_context"" )"	1389:5:38331:38383	11603	15	True				
ANR	12013	CallExpression	"fatal ( ""fatal internal error in abort_hunk_context"" )"		11603	0					
ANR	12014	Callee	fatal		11603	0					
ANR	12015	Identifier	fatal		11603	0					
ANR	12016	ArgumentList	"""fatal internal error in abort_hunk_context"""		11603	1					
ANR	12017	Argument	"""fatal internal error in abort_hunk_context"""		11603	0					
ANR	12018	PrimaryExpression	"""fatal internal error in abort_hunk_context"""		11603	0					
ANR	12019	IfStatement	if ( ferror ( rejfp ) )		11603	3					
ANR	12020	Condition	ferror ( rejfp )	1391:5:38393:38406	11603	0	True				
ANR	12021	CallExpression	ferror ( rejfp )		11603	0					
ANR	12022	Callee	ferror		11603	0					
ANR	12023	Identifier	ferror		11603	0					
ANR	12024	ArgumentList	rejfp		11603	1					
ANR	12025	Argument	rejfp		11603	0					
ANR	12026	Identifier	rejfp		11603	0					
ANR	12027	ExpressionStatement	write_fatal ( )	1392:3:38412:38426	11603	1	True				
ANR	12028	CallExpression	write_fatal ( )		11603	0					
ANR	12029	Callee	write_fatal		11603	0					
ANR	12030	Identifier	write_fatal		11603	0					
ANR	12031	ArgumentList			11603	1					
ANR	12032	ReturnType	static void		11603	1					
ANR	12033	Identifier	abort_hunk_context		11603	2					
ANR	12034	ParameterList	"bool header , bool reverse"		11603	3					
ANR	12035	Parameter	bool header	1330:20:36419:36429	11603	0	True				
ANR	12036	ParameterType	bool		11603	0					
ANR	12037	Identifier	header		11603	1					
ANR	12038	Parameter	bool reverse	1330:33:36432:36443	11603	1	True				
ANR	12039	ParameterType	bool		11603	0					
ANR	12040	Identifier	reverse		11603	1					
ANR	12041	CFGEntryNode	ENTRY		11603		True				
ANR	12042	CFGExitNode	EXIT		11603		True				
ANR	12043	Symbol	UNI_DIFF		11603						
ANR	12044	Symbol	pch_c_function		11603						
ANR	12045	Symbol	pch_name		11603						
ANR	12046	Symbol	pch_repl_lines		11603						
ANR	12047	Symbol	format_linenum		11603						
ANR	12048	Symbol	rejfp		11603						
ANR	12049	Symbol	NEW_CONTEXT_DIFF		11603						
ANR	12050	Symbol	INDEX		11603						
ANR	12051	Symbol	oldfirst		11603						
ANR	12052	Symbol	pch_newfirst		11603						
ANR	12053	Symbol	numbuf0		11603						
ANR	12054	Symbol	diff_type		11603						
ANR	12055	Symbol	newfirst		11603						
ANR	12056	Symbol	numbuf1		11603						
ANR	12057	Symbol	minuses		11603						
ANR	12058	Symbol	i		11603						
ANR	12059	Symbol	out_offset		11603						
ANR	12060	Symbol	stars		11603						
ANR	12061	Symbol	reverse		11603						
ANR	12062	Symbol	pch_char		11603						
ANR	12063	Symbol	oldlast		11603						
ANR	12064	Symbol	c_function		11603						
ANR	12065	Symbol	pat_end		11603						
ANR	12066	Symbol	newlast		11603						
ANR	12067	Symbol	ferror		11603						
ANR	12068	Symbol	header		11603						
ANR	12069	Symbol	pch_end		11603						
ANR	12070	Symbol	pch_first		11603						
ANR	12071	Symbol	pch_ptrn_lines		11603						
ANR	12072	Function	abort_hunk	1398:0:38471:38791							
ANR	12073	FunctionDef	"abort_hunk (char const * outname , bool header , bool reverse)"		12072	0					
ANR	12074	CompoundStatement		1400:0:38543:38791	12072	0					
ANR	12075	IfStatement	if ( ! TMPREJNAME_needs_removal )		12072	0					
ANR	12076	Condition	! TMPREJNAME_needs_removal	1401:6:38551:38576	12072	0	True				
ANR	12077	UnaryOperationExpression	! TMPREJNAME_needs_removal		12072	0					
ANR	12078	UnaryOperator	!		12072	0					
ANR	12079	Identifier	TMPREJNAME_needs_removal		12072	1					
ANR	12080	ExpressionStatement	init_reject ( outname )	1402:4:38583:38604	12072	1	True				
ANR	12081	CallExpression	init_reject ( outname )		12072	0					
ANR	12082	Callee	init_reject		12072	0					
ANR	12083	Identifier	init_reject		12072	0					
ANR	12084	ArgumentList	outname		12072	1					
ANR	12085	Argument	outname		12072	0					
ANR	12086	Identifier	outname		12072	0					
ANR	12087	IfStatement	if ( reject_format == UNI_DIFF || ( reject_format == NO_DIFF && diff_type == UNI_DIFF ) )		12072	1					
ANR	12088	Condition	reject_format == UNI_DIFF || ( reject_format == NO_DIFF && diff_type == UNI_DIFF )	1403:6:38612:38697	12072	0	True				
ANR	12089	OrExpression	reject_format == UNI_DIFF || ( reject_format == NO_DIFF && diff_type == UNI_DIFF )		12072	0		||			
ANR	12090	EqualityExpression	reject_format == UNI_DIFF		12072	0		==			
ANR	12091	Identifier	reject_format		12072	0					
ANR	12092	Identifier	UNI_DIFF		12072	1					
ANR	12093	AndExpression	reject_format == NO_DIFF && diff_type == UNI_DIFF		12072	1		&&			
ANR	12094	EqualityExpression	reject_format == NO_DIFF		12072	0		==			
ANR	12095	Identifier	reject_format		12072	0					
ANR	12096	Identifier	NO_DIFF		12072	1					
ANR	12097	EqualityExpression	diff_type == UNI_DIFF		12072	1		==			
ANR	12098	Identifier	diff_type		12072	0					
ANR	12099	Identifier	UNI_DIFF		12072	1					
ANR	12100	ExpressionStatement	"abort_hunk_unified ( header , reverse )"	1405:4:38704:38740	12072	1	True				
ANR	12101	CallExpression	"abort_hunk_unified ( header , reverse )"		12072	0					
ANR	12102	Callee	abort_hunk_unified		12072	0					
ANR	12103	Identifier	abort_hunk_unified		12072	0					
ANR	12104	ArgumentList	header		12072	1					
ANR	12105	Argument	header		12072	0					
ANR	12106	Identifier	header		12072	0					
ANR	12107	Argument	reverse		12072	1					
ANR	12108	Identifier	reverse		12072	0					
ANR	12109	ElseStatement	else		12072	0					
ANR	12110	ExpressionStatement	"abort_hunk_context ( header , reverse )"	1407:4:38753:38789	12072	0	True				
ANR	12111	CallExpression	"abort_hunk_context ( header , reverse )"		12072	0					
ANR	12112	Callee	abort_hunk_context		12072	0					
ANR	12113	Identifier	abort_hunk_context		12072	0					
ANR	12114	ArgumentList	header		12072	1					
ANR	12115	Argument	header		12072	0					
ANR	12116	Identifier	header		12072	0					
ANR	12117	Argument	reverse		12072	1					
ANR	12118	Identifier	reverse		12072	0					
ANR	12119	ReturnType	static void		12072	1					
ANR	12120	Identifier	abort_hunk		12072	2					
ANR	12121	ParameterList	"char const * outname , bool header , bool reverse"		12072	3					
ANR	12122	Parameter	char const * outname	1399:12:38495:38513	12072	0	True				
ANR	12123	ParameterType	char const *		12072	0					
ANR	12124	Identifier	outname		12072	1					
ANR	12125	Parameter	bool header	1399:33:38516:38526	12072	1	True				
ANR	12126	ParameterType	bool		12072	0					
ANR	12127	Identifier	header		12072	1					
ANR	12128	Parameter	bool reverse	1399:46:38529:38540	12072	2	True				
ANR	12129	ParameterType	bool		12072	0					
ANR	12130	Identifier	reverse		12072	1					
ANR	12131	CFGEntryNode	ENTRY		12072		True				
ANR	12132	CFGExitNode	EXIT		12072		True				
ANR	12133	Symbol	UNI_DIFF		12072						
ANR	12134	Symbol	diff_type		12072						
ANR	12135	Symbol	outname		12072						
ANR	12136	Symbol	header		12072						
ANR	12137	Symbol	reverse		12072						
ANR	12138	Symbol	TMPREJNAME_needs_removal		12072						
ANR	12139	Symbol	NO_DIFF		12072						
ANR	12140	Symbol	reject_format		12072						
ANR	12141	Function	apply_hunk	1412:0:38849:42641							
ANR	12142	FunctionDef	"apply_hunk (struct outstate * outstate , lin where)"		12141	0					
ANR	12143	CompoundStatement		1414:0:38911:42641	12141	0					
ANR	12144	IdentifierDeclStatement	lin old = 1 ;	1415:4:38917:38928	12141	0	True				
ANR	12145	IdentifierDecl	old = 1		12141	0					
ANR	12146	IdentifierDeclType	lin		12141	0					
ANR	12147	Identifier	old		12141	1					
ANR	12148	AssignmentExpression	old = 1		12141	2		=			
ANR	12149	Identifier	old		12141	0					
ANR	12150	PrimaryExpression	1		12141	1					
ANR	12151	IdentifierDeclStatement	lin lastline = pch_ptrn_lines ( ) ;	1416:4:38934:38966	12141	1	True				
ANR	12152	IdentifierDecl	lastline = pch_ptrn_lines ( )		12141	0					
ANR	12153	IdentifierDeclType	lin		12141	0					
ANR	12154	Identifier	lastline		12141	1					
ANR	12155	AssignmentExpression	lastline = pch_ptrn_lines ( )		12141	2		=			
ANR	12156	Identifier	lastline		12141	0					
ANR	12157	CallExpression	pch_ptrn_lines ( )		12141	1					
ANR	12158	Callee	pch_ptrn_lines		12141	0					
ANR	12159	Identifier	pch_ptrn_lines		12141	0					
ANR	12160	ArgumentList			12141	1					
ANR	12161	Statement	lin	1417:4:38972:38974	12141	2	True				
ANR	12162	Statement	new	1417:8:38976:38978	12141	3	True				
ANR	12163	Statement	=	1417:12:38980:38980	12141	4	True				
ANR	12164	ExpressionStatement	lastline + 1	1417:14:38982:38992	12141	5	True				
ANR	12165	AdditiveExpression	lastline + 1		12141	0		+			
ANR	12166	Identifier	lastline		12141	0					
ANR	12167	PrimaryExpression	1		12141	1					
ANR	12168	ClassDefStatement	"enum { OUTSIDE , IN_IFNDEF , IN_IFDEF , IN_ELSE } def_state = OUTSIDE ;"	1418:4:38998:39062	12141	6	True				
ANR	12169	IdentifierDecl	def_state = OUTSIDE		12141	0					
ANR	12170	IdentifierDeclType			12141	0					
ANR	12171	Identifier	def_state		12141	1					
ANR	12172	AssignmentExpression	def_state = OUTSIDE		12141	2		=			
ANR	12173	Identifier	OUTSIDE		12141	0					
ANR	12174	Identifier	OUTSIDE		12141	1					
ANR	12175	IdentifierDeclStatement	char const * R_do_defines = do_defines ;	1419:4:39068:39105	12141	7	True				
ANR	12176	IdentifierDecl	* R_do_defines = do_defines		12141	0					
ANR	12177	IdentifierDeclType	char const *		12141	0					
ANR	12178	Identifier	R_do_defines		12141	1					
ANR	12179	AssignmentExpression	* R_do_defines = do_defines		12141	2		=			
ANR	12180	Identifier	do_defines		12141	0					
ANR	12181	Identifier	do_defines		12141	1					
ANR	12182	IdentifierDeclStatement	lin pat_end = pch_end ( ) ;	1420:4:39111:39135	12141	8	True				
ANR	12183	IdentifierDecl	pat_end = pch_end ( )		12141	0					
ANR	12184	IdentifierDeclType	lin		12141	0					
ANR	12185	Identifier	pat_end		12141	1					
ANR	12186	AssignmentExpression	pat_end = pch_end ( )		12141	2		=			
ANR	12187	Identifier	pat_end		12141	0					
ANR	12188	CallExpression	pch_end ( )		12141	1					
ANR	12189	Callee	pch_end		12141	0					
ANR	12190	Identifier	pch_end		12141	0					
ANR	12191	ArgumentList			12141	1					
ANR	12192	IdentifierDeclStatement	FILE * fp = outstate -> ofp ;	1421:4:39141:39165	12141	9	True				
ANR	12193	IdentifierDecl	* fp = outstate -> ofp		12141	0					
ANR	12194	IdentifierDeclType	FILE *		12141	0					
ANR	12195	Identifier	fp		12141	1					
ANR	12196	AssignmentExpression	* fp = outstate -> ofp		12141	2		=			
ANR	12197	Identifier	fp		12141	0					
ANR	12198	PtrMemberAccess	outstate -> ofp		12141	1					
ANR	12199	Identifier	outstate		12141	0					
ANR	12200	Identifier	ofp		12141	1					
ANR	12201	ExpressionStatement	where --	1423:4:39172:39179	12141	10	True				
ANR	12202	PostIncDecOperationExpression	where --		12141	0					
ANR	12203	Identifier	where		12141	0					
ANR	12204	IncDec	--		12141	1					
ANR	12205	Statement	while	1424:4:39185:39189	12141	11	True				
ANR	12206	Statement	(	1424:10:39191:39191	12141	12	True				
ANR	12207	Statement	pch_char	1424:11:39192:39199	12141	13	True				
ANR	12208	Statement	(	1424:19:39200:39200	12141	14	True				
ANR	12209	Statement	new	1424:20:39201:39203	12141	15	True				
ANR	12210	Statement	)	1424:23:39204:39204	12141	16	True				
ANR	12211	Statement	==	1424:25:39206:39207	12141	17	True				
ANR	12212	Statement	'='	1424:28:39209:39211	12141	18	True				
ANR	12213	Statement	||	1424:32:39213:39214	12141	19	True				
ANR	12214	Statement	pch_char	1424:35:39216:39223	12141	20	True				
ANR	12215	Statement	(	1424:43:39224:39224	12141	21	True				
ANR	12216	Statement	new	1424:44:39225:39227	12141	22	True				
ANR	12217	Statement	)	1424:47:39228:39228	12141	23	True				
ANR	12218	Statement	==	1424:49:39230:39231	12141	24	True				
ANR	12219	Statement	'\\n'	1424:52:39233:39236	12141	25	True				
ANR	12220	Statement	)	1424:56:39237:39237	12141	26	True				
ANR	12221	Statement	new	1425:1:39240:39242	12141	27	True				
ANR	12222	Statement	++	1425:4:39243:39244	12141	28	True				
ANR	12223	ExpressionStatement		1425:6:39245:39245	12141	29	True				
ANR	12224	ReturnType	static bool		12141	1					
ANR	12225	Identifier	apply_hunk		12141	2					
ANR	12226	ParameterList	"struct outstate * outstate , lin where"		12141	3					
ANR	12227	Parameter	struct outstate * outstate	1413:12:38873:38897	12141	0	True				
ANR	12228	ParameterType	struct outstate *		12141	0					
ANR	12229	Identifier	outstate		12141	1					
ANR	12230	Parameter	lin where	1413:39:38900:38908	12141	1	True				
ANR	12231	ParameterType	lin		12141	0					
ANR	12232	Identifier	where		12141	1					
ANR	12233	CFGEntryNode	ENTRY		12141		True				
ANR	12234	CFGExitNode	EXIT		12141		True				
ANR	12235	Symbol	outstate -> ofp		12141						
ANR	12236	Symbol	def_state		12141						
ANR	12237	Symbol	lastline		12141						
ANR	12238	Symbol	old		12141						
ANR	12239	Symbol	do_defines		12141						
ANR	12240	Symbol	fp		12141						
ANR	12241	Symbol	* outstate		12141						
ANR	12242	Symbol	pat_end		12141						
ANR	12243	Symbol	R_do_defines		12141						
ANR	12244	Symbol	where		12141						
ANR	12245	Symbol	outstate		12141						
ANR	12246	Symbol	OUTSIDE		12141						
ANR	12247	Symbol	pch_ptrn_lines		12141						
ANR	12248	Symbol	pch_end		12141						
ANR	12249	Function	create_output_file	1565:0:42675:42974							
ANR	12250	FunctionDef	"create_output_file (char const * name , int open_flags)"		12249	0					
ANR	12251	CompoundStatement		1567:0:42743:42974	12249	0					
ANR	12252	IdentifierDeclStatement	"int fd = create_file ( name , O_WRONLY | binary_transput | open_flags , instat . st_mode , true ) ;"	1568:2:42747:42840	12249	0	True				
ANR	12253	IdentifierDecl	"fd = create_file ( name , O_WRONLY | binary_transput | open_flags , instat . st_mode , true )"		12249	0					
ANR	12254	IdentifierDeclType	int		12249	0					
ANR	12255	Identifier	fd		12249	1					
ANR	12256	AssignmentExpression	"fd = create_file ( name , O_WRONLY | binary_transput | open_flags , instat . st_mode , true )"		12249	2		=			
ANR	12257	Identifier	fd		12249	0					
ANR	12258	CallExpression	"create_file ( name , O_WRONLY | binary_transput | open_flags , instat . st_mode , true )"		12249	1					
ANR	12259	Callee	create_file		12249	0					
ANR	12260	Identifier	create_file		12249	0					
ANR	12261	ArgumentList	name		12249	1					
ANR	12262	Argument	name		12249	0					
ANR	12263	Identifier	name		12249	0					
ANR	12264	Argument	O_WRONLY | binary_transput | open_flags		12249	1					
ANR	12265	InclusiveOrExpression	O_WRONLY | binary_transput | open_flags		12249	0		|			
ANR	12266	Identifier	O_WRONLY		12249	0					
ANR	12267	InclusiveOrExpression	binary_transput | open_flags		12249	1		|			
ANR	12268	Identifier	binary_transput		12249	0					
ANR	12269	Identifier	open_flags		12249	1					
ANR	12270	Argument	instat . st_mode		12249	2					
ANR	12271	MemberAccess	instat . st_mode		12249	0					
ANR	12272	Identifier	instat		12249	0					
ANR	12273	Identifier	st_mode		12249	1					
ANR	12274	Argument	true		12249	3					
ANR	12275	Identifier	true		12249	0					
ANR	12276	IdentifierDeclStatement	"FILE * f = fdopen ( fd , binary_transput ? ""wb"" : ""w"" ) ;"	1570:2:42844:42895	12249	1	True				
ANR	12277	IdentifierDecl	"* f = fdopen ( fd , binary_transput ? ""wb"" : ""w"" )"		12249	0					
ANR	12278	IdentifierDeclType	FILE *		12249	0					
ANR	12279	Identifier	f		12249	1					
ANR	12280	AssignmentExpression	"* f = fdopen ( fd , binary_transput ? ""wb"" : ""w"" )"		12249	2		=			
ANR	12281	Identifier	f		12249	0					
ANR	12282	CallExpression	"fdopen ( fd , binary_transput ? ""wb"" : ""w"" )"		12249	1					
ANR	12283	Callee	fdopen		12249	0					
ANR	12284	Identifier	fdopen		12249	0					
ANR	12285	ArgumentList	fd		12249	1					
ANR	12286	Argument	fd		12249	0					
ANR	12287	Identifier	fd		12249	0					
ANR	12288	Argument	"binary_transput ? ""wb"" : ""w"""		12249	1					
ANR	12289	ConditionalExpression	"binary_transput ? ""wb"" : ""w"""		12249	0					
ANR	12290	Condition	binary_transput		12249	0					
ANR	12291	Identifier	binary_transput		12249	0					
ANR	12292	PrimaryExpression	"""wb"""		12249	1					
ANR	12293	PrimaryExpression	"""w"""		12249	2					
ANR	12294	IfStatement	if ( ! f )		12249	2					
ANR	12295	Condition	! f	1571:6:42903:42905	12249	0	True				
ANR	12296	UnaryOperationExpression	! f		12249	0					
ANR	12297	UnaryOperator	!		12249	0					
ANR	12298	Identifier	f		12249	1					
ANR	12299	ExpressionStatement	"pfatal ( ""Can't create file %s"" , quotearg ( name ) )"	1572:4:42912:42960	12249	1	True				
ANR	12300	CallExpression	"pfatal ( ""Can't create file %s"" , quotearg ( name ) )"		12249	0					
ANR	12301	Callee	pfatal		12249	0					
ANR	12302	Identifier	pfatal		12249	0					
ANR	12303	ArgumentList	"""Can't create file %s"""		12249	1					
ANR	12304	Argument	"""Can't create file %s"""		12249	0					
ANR	12305	PrimaryExpression	"""Can't create file %s"""		12249	0					
ANR	12306	Argument	quotearg ( name )		12249	1					
ANR	12307	CallExpression	quotearg ( name )		12249	0					
ANR	12308	Callee	quotearg		12249	0					
ANR	12309	Identifier	quotearg		12249	0					
ANR	12310	ArgumentList	name		12249	1					
ANR	12311	Argument	name		12249	0					
ANR	12312	Identifier	name		12249	0					
ANR	12313	ReturnStatement	return f ;	1573:2:42964:42972	12249	3	True				
ANR	12314	Identifier	f		12249	0					
ANR	12315	ReturnType	static FILE *		12249	1					
ANR	12316	Identifier	create_output_file		12249	2					
ANR	12317	ParameterList	"char const * name , int open_flags"		12249	3					
ANR	12318	Parameter	char const * name	1566:20:42709:42724	12249	0	True				
ANR	12319	ParameterType	char const *		12249	0					
ANR	12320	Identifier	name		12249	1					
ANR	12321	Parameter	int open_flags	1566:38:42727:42740	12249	1	True				
ANR	12322	ParameterType	int		12249	0					
ANR	12323	Identifier	open_flags		12249	1					
ANR	12324	CFGEntryNode	ENTRY		12249		True				
ANR	12325	CFGExitNode	EXIT		12249		True				
ANR	12326	Symbol	create_file		12249						
ANR	12327	Symbol	instat . st_mode		12249						
ANR	12328	Symbol	quotearg		12249						
ANR	12329	Symbol	f		12249						
ANR	12330	Symbol	name		12249						
ANR	12331	Symbol	true		12249						
ANR	12332	Symbol	instat		12249						
ANR	12333	Symbol	open_flags		12249						
ANR	12334	Symbol	binary_transput		12249						
ANR	12335	Symbol	fdopen		12249						
ANR	12336	Symbol	O_WRONLY		12249						
ANR	12337	Symbol	fd		12249						
ANR	12338	Function	init_output	1578:0:43003:43147							
ANR	12339	FunctionDef	init_output (struct outstate * outstate)		12338	0					
ANR	12340	CompoundStatement		1580:0:43055:43147	12338	0					
ANR	12341	ExpressionStatement	outstate -> ofp = NULL	1581:2:43059:43079	12338	0	True				
ANR	12342	AssignmentExpression	outstate -> ofp = NULL		12338	0		=			
ANR	12343	PtrMemberAccess	outstate -> ofp		12338	0					
ANR	12344	Identifier	outstate		12338	0					
ANR	12345	Identifier	ofp		12338	1					
ANR	12346	Identifier	NULL		12338	1					
ANR	12347	ExpressionStatement	outstate -> after_newline = true	1582:2:43083:43113	12338	1	True				
ANR	12348	AssignmentExpression	outstate -> after_newline = true		12338	0		=			
ANR	12349	PtrMemberAccess	outstate -> after_newline		12338	0					
ANR	12350	Identifier	outstate		12338	0					
ANR	12351	Identifier	after_newline		12338	1					
ANR	12352	Identifier	true		12338	1					
ANR	12353	ExpressionStatement	outstate -> zero_output = true	1583:2:43117:43145	12338	2	True				
ANR	12354	AssignmentExpression	outstate -> zero_output = true		12338	0		=			
ANR	12355	PtrMemberAccess	outstate -> zero_output		12338	0					
ANR	12356	Identifier	outstate		12338	0					
ANR	12357	Identifier	zero_output		12338	1					
ANR	12358	Identifier	true		12338	1					
ANR	12359	ReturnType	static void		12338	1					
ANR	12360	Identifier	init_output		12338	2					
ANR	12361	ParameterList	struct outstate * outstate		12338	3					
ANR	12362	Parameter	struct outstate * outstate	1579:13:43028:43052	12338	0	True				
ANR	12363	ParameterType	struct outstate *		12338	0					
ANR	12364	Identifier	outstate		12338	1					
ANR	12365	CFGEntryNode	ENTRY		12338		True				
ANR	12366	CFGExitNode	EXIT		12338		True				
ANR	12367	Symbol	outstate -> ofp		12338						
ANR	12368	Symbol	NULL		12338						
ANR	12369	Symbol	outstate -> after_newline		12338						
ANR	12370	Symbol	outstate -> zero_output		12338						
ANR	12371	Symbol	true		12338						
ANR	12372	Symbol	outstate		12338						
ANR	12373	Symbol	* outstate		12338						
ANR	12374	Function	open_outfile	1586:0:43150:43743							
ANR	12375	FunctionDef	open_outfile (char const * name)		12374	0					
ANR	12376	CompoundStatement		1588:0:43196:43743	12374	0					
ANR	12377	IfStatement	"if ( strcmp ( name , ""-"" ) != 0 )"		12374	0					
ANR	12378	Condition	"strcmp ( name , ""-"" ) != 0"	1589:6:43204:43226	12374	0	True				
ANR	12379	EqualityExpression	"strcmp ( name , ""-"" ) != 0"		12374	0		!=			
ANR	12380	CallExpression	"strcmp ( name , ""-"" )"		12374	0					
ANR	12381	Callee	strcmp		12374	0					
ANR	12382	Identifier	strcmp		12374	0					
ANR	12383	ArgumentList	name		12374	1					
ANR	12384	Argument	name		12374	0					
ANR	12385	Identifier	name		12374	0					
ANR	12386	Argument	"""-"""		12374	1					
ANR	12387	PrimaryExpression	"""-"""		12374	0					
ANR	12388	PrimaryExpression	0		12374	1					
ANR	12389	ReturnStatement	"return create_output_file ( name , 0 ) ;"	1590:4:43233:43268	12374	1	True				
ANR	12390	CallExpression	"create_output_file ( name , 0 )"		12374	0					
ANR	12391	Callee	create_output_file		12374	0					
ANR	12392	Identifier	create_output_file		12374	0					
ANR	12393	ArgumentList	name		12374	1					
ANR	12394	Argument	name		12374	0					
ANR	12395	Identifier	name		12374	0					
ANR	12396	Argument	0		12374	1					
ANR	12397	PrimaryExpression	0		12374	0					
ANR	12398	ElseStatement	else		12374	0					
ANR	12399	CompoundStatement		7:6:109:147	12374	0					
ANR	12400	IdentifierDeclStatement	FILE * ofp ;	1593:6:43289:43298	12374	0	True				
ANR	12401	IdentifierDecl	* ofp		12374	0					
ANR	12402	IdentifierDeclType	FILE *		12374	0					
ANR	12403	Identifier	ofp		12374	1					
ANR	12404	IdentifierDeclStatement	int stdout_dup = dup ( fileno ( stdout ) ) ;	1594:6:43306:43344	12374	1	True				
ANR	12405	IdentifierDecl	stdout_dup = dup ( fileno ( stdout ) )		12374	0					
ANR	12406	IdentifierDeclType	int		12374	0					
ANR	12407	Identifier	stdout_dup		12374	1					
ANR	12408	AssignmentExpression	stdout_dup = dup ( fileno ( stdout ) )		12374	2		=			
ANR	12409	Identifier	stdout_dup		12374	0					
ANR	12410	CallExpression	dup ( fileno ( stdout ) )		12374	1					
ANR	12411	Callee	dup		12374	0					
ANR	12412	Identifier	dup		12374	0					
ANR	12413	ArgumentList	fileno ( stdout )		12374	1					
ANR	12414	Argument	fileno ( stdout )		12374	0					
ANR	12415	CallExpression	fileno ( stdout )		12374	0					
ANR	12416	Callee	fileno		12374	0					
ANR	12417	Identifier	fileno		12374	0					
ANR	12418	ArgumentList	stdout		12374	1					
ANR	12419	Argument	stdout		12374	0					
ANR	12420	Identifier	stdout		12374	0					
ANR	12421	IfStatement	if ( stdout_dup == - 1 )		12374	2					
ANR	12422	Condition	stdout_dup == - 1	1595:10:43356:43371	12374	0	True				
ANR	12423	EqualityExpression	stdout_dup == - 1		12374	0		==			
ANR	12424	Identifier	stdout_dup		12374	0					
ANR	12425	UnaryOperationExpression	- 1		12374	1					
ANR	12426	UnaryOperator	-		12374	0					
ANR	12427	PrimaryExpression	1		12374	1					
ANR	12428	ExpressionStatement	"pfatal ( ""Failed to duplicate standard output"" )"	1596:1:43375:43421	12374	1	True				
ANR	12429	CallExpression	"pfatal ( ""Failed to duplicate standard output"" )"		12374	0					
ANR	12430	Callee	pfatal		12374	0					
ANR	12431	Identifier	pfatal		12374	0					
ANR	12432	ArgumentList	"""Failed to duplicate standard output"""		12374	1					
ANR	12433	Argument	"""Failed to duplicate standard output"""		12374	0					
ANR	12434	PrimaryExpression	"""Failed to duplicate standard output"""		12374	0					
ANR	12435	ExpressionStatement	"ofp = fdopen ( stdout_dup , ""a"" )"	1597:6:43429:43459	12374	3	True				
ANR	12436	AssignmentExpression	"ofp = fdopen ( stdout_dup , ""a"" )"		12374	0		=			
ANR	12437	Identifier	ofp		12374	0					
ANR	12438	CallExpression	"fdopen ( stdout_dup , ""a"" )"		12374	1					
ANR	12439	Callee	fdopen		12374	0					
ANR	12440	Identifier	fdopen		12374	0					
ANR	12441	ArgumentList	stdout_dup		12374	1					
ANR	12442	Argument	stdout_dup		12374	0					
ANR	12443	Identifier	stdout_dup		12374	0					
ANR	12444	Argument	"""a"""		12374	1					
ANR	12445	PrimaryExpression	"""a"""		12374	0					
ANR	12446	IfStatement	if ( ! ofp )		12374	4					
ANR	12447	Condition	! ofp	1598:10:43471:43475	12374	0	True				
ANR	12448	UnaryOperationExpression	! ofp		12374	0					
ANR	12449	UnaryOperator	!		12374	0					
ANR	12450	Identifier	ofp		12374	1					
ANR	12451	ExpressionStatement	"pfatal ( ""Failed to duplicate standard output"" )"	1599:1:43479:43525	12374	1	True				
ANR	12452	CallExpression	"pfatal ( ""Failed to duplicate standard output"" )"		12374	0					
ANR	12453	Callee	pfatal		12374	0					
ANR	12454	Identifier	pfatal		12374	0					
ANR	12455	ArgumentList	"""Failed to duplicate standard output"""		12374	1					
ANR	12456	Argument	"""Failed to duplicate standard output"""		12374	0					
ANR	12457	PrimaryExpression	"""Failed to duplicate standard output"""		12374	0					
ANR	12458	IfStatement	"if ( dup2 ( fileno ( stderr ) , fileno ( stdout ) ) == - 1 )"		12374	5					
ANR	12459	Condition	"dup2 ( fileno ( stderr ) , fileno ( stdout ) ) == - 1"	1600:10:43537:43581	12374	0	True				
ANR	12460	EqualityExpression	"dup2 ( fileno ( stderr ) , fileno ( stdout ) ) == - 1"		12374	0		==			
ANR	12461	CallExpression	"dup2 ( fileno ( stderr ) , fileno ( stdout ) )"		12374	0					
ANR	12462	Callee	dup2		12374	0					
ANR	12463	Identifier	dup2		12374	0					
ANR	12464	ArgumentList	fileno ( stderr )		12374	1					
ANR	12465	Argument	fileno ( stderr )		12374	0					
ANR	12466	CallExpression	fileno ( stderr )		12374	0					
ANR	12467	Callee	fileno		12374	0					
ANR	12468	Identifier	fileno		12374	0					
ANR	12469	ArgumentList	stderr		12374	1					
ANR	12470	Argument	stderr		12374	0					
ANR	12471	Identifier	stderr		12374	0					
ANR	12472	Argument	fileno ( stdout )		12374	1					
ANR	12473	CallExpression	fileno ( stdout )		12374	0					
ANR	12474	Callee	fileno		12374	0					
ANR	12475	Identifier	fileno		12374	0					
ANR	12476	ArgumentList	stdout		12374	1					
ANR	12477	Argument	stdout		12374	0					
ANR	12478	Identifier	stdout		12374	0					
ANR	12479	UnaryOperationExpression	- 1		12374	1					
ANR	12480	UnaryOperator	-		12374	0					
ANR	12481	PrimaryExpression	1		12374	1					
ANR	12482	ExpressionStatement	"pfatal ( ""Failed to redirect messages to standard error"" )"	1601:1:43585:43641	12374	1	True				
ANR	12483	CallExpression	"pfatal ( ""Failed to redirect messages to standard error"" )"		12374	0					
ANR	12484	Callee	pfatal		12374	0					
ANR	12485	Identifier	pfatal		12374	0					
ANR	12486	ArgumentList	"""Failed to redirect messages to standard error"""		12374	1					
ANR	12487	Argument	"""Failed to redirect messages to standard error"""		12374	0					
ANR	12488	PrimaryExpression	"""Failed to redirect messages to standard error"""		12374	0					
ANR	12489	ReturnStatement	return ofp ;	1603:6:43725:43735	12374	6	True				
ANR	12490	Identifier	ofp		12374	0					
ANR	12491	ReturnType	static FILE *		12374	1					
ANR	12492	Identifier	open_outfile		12374	2					
ANR	12493	ParameterList	char const * name		12374	3					
ANR	12494	Parameter	char const * name	1587:14:43178:43193	12374	0	True				
ANR	12495	ParameterType	char const *		12374	0					
ANR	12496	Identifier	name		12374	1					
ANR	12497	CFGEntryNode	ENTRY		12374		True				
ANR	12498	CFGExitNode	EXIT		12374		True				
ANR	12499	Symbol	strcmp		12374						
ANR	12500	Symbol	stdout		12374						
ANR	12501	Symbol	stdout_dup		12374						
ANR	12502	Symbol	create_output_file		12374						
ANR	12503	Symbol	fileno		12374						
ANR	12504	Symbol	name		12374						
ANR	12505	Symbol	ofp		12374						
ANR	12506	Symbol	fdopen		12374						
ANR	12507	Symbol	dup2		12374						
ANR	12508	Symbol	stderr		12374						
ANR	12509	Symbol	dup		12374						
ANR	12510	Function	init_reject	1609:0:43795:44192							
ANR	12511	FunctionDef	init_reject (char const * outname)		12510	0					
ANR	12512	CompoundStatement		1611:0:43841:44192	12510	0					
ANR	12513	IdentifierDeclStatement	int fd ;	1612:2:43845:43851	12510	0	True				
ANR	12514	IdentifierDecl	fd		12510	0					
ANR	12515	IdentifierDeclType	int		12510	0					
ANR	12516	Identifier	fd		12510	1					
ANR	12517	ExpressionStatement	"fd = make_tempfile ( & TMPREJNAME , 'r' , outname , O_WRONLY | binary_transput , 0666 )"	1613:2:43855:43943	12510	1	True				
ANR	12518	AssignmentExpression	"fd = make_tempfile ( & TMPREJNAME , 'r' , outname , O_WRONLY | binary_transput , 0666 )"		12510	0		=			
ANR	12519	Identifier	fd		12510	0					
ANR	12520	CallExpression	"make_tempfile ( & TMPREJNAME , 'r' , outname , O_WRONLY | binary_transput , 0666 )"		12510	1					
ANR	12521	Callee	make_tempfile		12510	0					
ANR	12522	Identifier	make_tempfile		12510	0					
ANR	12523	ArgumentList	& TMPREJNAME		12510	1					
ANR	12524	Argument	& TMPREJNAME		12510	0					
ANR	12525	UnaryOperationExpression	& TMPREJNAME		12510	0					
ANR	12526	UnaryOperator	&		12510	0					
ANR	12527	Identifier	TMPREJNAME		12510	1					
ANR	12528	Argument	'r'		12510	1					
ANR	12529	PrimaryExpression	'r'		12510	0					
ANR	12530	Argument	outname		12510	2					
ANR	12531	Identifier	outname		12510	0					
ANR	12532	Argument	O_WRONLY | binary_transput		12510	3					
ANR	12533	InclusiveOrExpression	O_WRONLY | binary_transput		12510	0		|			
ANR	12534	Identifier	O_WRONLY		12510	0					
ANR	12535	Identifier	binary_transput		12510	1					
ANR	12536	Argument	0666		12510	4					
ANR	12537	PrimaryExpression	0666		12510	0					
ANR	12538	IfStatement	if ( fd == - 1 )		12510	2					
ANR	12539	Condition	fd == - 1	1615:6:43951:43958	12510	0	True				
ANR	12540	EqualityExpression	fd == - 1		12510	0		==			
ANR	12541	Identifier	fd		12510	0					
ANR	12542	UnaryOperationExpression	- 1		12510	1					
ANR	12543	UnaryOperator	-		12510	0					
ANR	12544	PrimaryExpression	1		12510	1					
ANR	12545	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , TMPREJNAME )"	1616:4:43965:44018	12510	1	True				
ANR	12546	CallExpression	"pfatal ( ""Can't create temporary file %s"" , TMPREJNAME )"		12510	0					
ANR	12547	Callee	pfatal		12510	0					
ANR	12548	Identifier	pfatal		12510	0					
ANR	12549	ArgumentList	"""Can't create temporary file %s"""		12510	1					
ANR	12550	Argument	"""Can't create temporary file %s"""		12510	0					
ANR	12551	PrimaryExpression	"""Can't create temporary file %s"""		12510	0					
ANR	12552	Argument	TMPREJNAME		12510	1					
ANR	12553	Identifier	TMPREJNAME		12510	0					
ANR	12554	ExpressionStatement	TMPREJNAME_needs_removal = true	1617:2:44022:44053	12510	3	True				
ANR	12555	AssignmentExpression	TMPREJNAME_needs_removal = true		12510	0		=			
ANR	12556	Identifier	TMPREJNAME_needs_removal		12510	0					
ANR	12557	Identifier	true		12510	1					
ANR	12558	ExpressionStatement	"rejfp = fdopen ( fd , binary_transput ? ""wb"" : ""w"" )"	1618:2:44057:44106	12510	4	True				
ANR	12559	AssignmentExpression	"rejfp = fdopen ( fd , binary_transput ? ""wb"" : ""w"" )"		12510	0		=			
ANR	12560	Identifier	rejfp		12510	0					
ANR	12561	CallExpression	"fdopen ( fd , binary_transput ? ""wb"" : ""w"" )"		12510	1					
ANR	12562	Callee	fdopen		12510	0					
ANR	12563	Identifier	fdopen		12510	0					
ANR	12564	ArgumentList	fd		12510	1					
ANR	12565	Argument	fd		12510	0					
ANR	12566	Identifier	fd		12510	0					
ANR	12567	Argument	"binary_transput ? ""wb"" : ""w"""		12510	1					
ANR	12568	ConditionalExpression	"binary_transput ? ""wb"" : ""w"""		12510	0					
ANR	12569	Condition	binary_transput		12510	0					
ANR	12570	Identifier	binary_transput		12510	0					
ANR	12571	PrimaryExpression	"""wb"""		12510	1					
ANR	12572	PrimaryExpression	"""w"""		12510	2					
ANR	12573	IfStatement	if ( ! rejfp )		12510	5					
ANR	12574	Condition	! rejfp	1619:6:44114:44120	12510	0	True				
ANR	12575	UnaryOperationExpression	! rejfp		12510	0					
ANR	12576	UnaryOperator	!		12510	0					
ANR	12577	Identifier	rejfp		12510	1					
ANR	12578	ExpressionStatement	"pfatal ( ""Can't open stream for file %s"" , quotearg ( TMPREJNAME ) )"	1620:4:44127:44190	12510	1	True				
ANR	12579	CallExpression	"pfatal ( ""Can't open stream for file %s"" , quotearg ( TMPREJNAME ) )"		12510	0					
ANR	12580	Callee	pfatal		12510	0					
ANR	12581	Identifier	pfatal		12510	0					
ANR	12582	ArgumentList	"""Can't open stream for file %s"""		12510	1					
ANR	12583	Argument	"""Can't open stream for file %s"""		12510	0					
ANR	12584	PrimaryExpression	"""Can't open stream for file %s"""		12510	0					
ANR	12585	Argument	quotearg ( TMPREJNAME )		12510	1					
ANR	12586	CallExpression	quotearg ( TMPREJNAME )		12510	0					
ANR	12587	Callee	quotearg		12510	0					
ANR	12588	Identifier	quotearg		12510	0					
ANR	12589	ArgumentList	TMPREJNAME		12510	1					
ANR	12590	Argument	TMPREJNAME		12510	0					
ANR	12591	Identifier	TMPREJNAME		12510	0					
ANR	12592	ReturnType	static void		12510	1					
ANR	12593	Identifier	init_reject		12510	2					
ANR	12594	ParameterList	char const * outname		12510	3					
ANR	12595	Parameter	char const * outname	1610:13:43820:43838	12510	0	True				
ANR	12596	ParameterType	char const *		12510	0					
ANR	12597	Identifier	outname		12510	1					
ANR	12598	CFGEntryNode	ENTRY		12510		True				
ANR	12599	CFGExitNode	EXIT		12510		True				
ANR	12600	Symbol	& TMPREJNAME		12510						
ANR	12601	Symbol	quotearg		12510						
ANR	12602	Symbol	rejfp		12510						
ANR	12603	Symbol	make_tempfile		12510						
ANR	12604	Symbol	true		12510						
ANR	12605	Symbol	outname		12510						
ANR	12606	Symbol	TMPREJNAME		12510						
ANR	12607	Symbol	binary_transput		12510						
ANR	12608	Symbol	fdopen		12510						
ANR	12609	Symbol	O_WRONLY		12510						
ANR	12610	Symbol	TMPREJNAME_needs_removal		12510						
ANR	12611	Symbol	fd		12510						
ANR	12612	Function	copy_till	1625:0:44267:44969							
ANR	12613	FunctionDef	"copy_till (struct outstate * outstate , lin lastline)"		12612	0					
ANR	12614	CompoundStatement		1627:0:44324:44969	12612	0					
ANR	12615	IdentifierDeclStatement	lin R_last_frozen_line = last_frozen_line ;	1628:4:44330:44371	12612	0	True				
ANR	12616	IdentifierDecl	R_last_frozen_line = last_frozen_line		12612	0					
ANR	12617	IdentifierDeclType	lin		12612	0					
ANR	12618	Identifier	R_last_frozen_line		12612	1					
ANR	12619	AssignmentExpression	R_last_frozen_line = last_frozen_line		12612	2		=			
ANR	12620	Identifier	last_frozen_line		12612	0					
ANR	12621	Identifier	last_frozen_line		12612	1					
ANR	12622	IdentifierDeclStatement	FILE * fp = outstate -> ofp ;	1629:4:44377:44401	12612	1	True				
ANR	12623	IdentifierDecl	* fp = outstate -> ofp		12612	0					
ANR	12624	IdentifierDeclType	FILE *		12612	0					
ANR	12625	Identifier	fp		12612	1					
ANR	12626	AssignmentExpression	* fp = outstate -> ofp		12612	2		=			
ANR	12627	Identifier	fp		12612	0					
ANR	12628	PtrMemberAccess	outstate -> ofp		12612	1					
ANR	12629	Identifier	outstate		12612	0					
ANR	12630	Identifier	ofp		12612	1					
ANR	12631	IdentifierDeclStatement	char const * s ;	1630:4:44407:44420	12612	2	True				
ANR	12632	IdentifierDecl	* s		12612	0					
ANR	12633	IdentifierDeclType	char const *		12612	0					
ANR	12634	Identifier	s		12612	1					
ANR	12635	IdentifierDeclStatement	size_t size ;	1631:4:44426:44437	12612	3	True				
ANR	12636	IdentifierDecl	size		12612	0					
ANR	12637	IdentifierDeclType	size_t		12612	0					
ANR	12638	Identifier	size		12612	1					
ANR	12639	IfStatement	if ( R_last_frozen_line > lastline )		12612	4					
ANR	12640	Condition	R_last_frozen_line > lastline	1633:8:44448:44476	12612	0	True				
ANR	12641	RelationalExpression	R_last_frozen_line > lastline		12612	0		>			
ANR	12642	Identifier	R_last_frozen_line		12612	0					
ANR	12643	Identifier	lastline		12612	1					
ANR	12644	CompoundStatement		8:6:160:160	12612	1					
ANR	12645	ExpressionStatement	"say ( ""misordered hunks! output would be garbled\\n"" )"	1635:1:44488:44539	12612	0	True				
ANR	12646	CallExpression	"say ( ""misordered hunks! output would be garbled\\n"" )"		12612	0					
ANR	12647	Callee	say		12612	0					
ANR	12648	Identifier	say		12612	0					
ANR	12649	ArgumentList	"""misordered hunks! output would be garbled\\n"""		12612	1					
ANR	12650	Argument	"""misordered hunks! output would be garbled\\n"""		12612	0					
ANR	12651	PrimaryExpression	"""misordered hunks! output would be garbled\\n"""		12612	0					
ANR	12652	ReturnStatement	return false ;	1636:1:44542:44554	12612	1	True				
ANR	12653	Identifier	false		12612	0					
ANR	12654	WhileStatement	while ( R_last_frozen_line < lastline )		12612	5					
ANR	12655	Condition	R_last_frozen_line < lastline	1638:11:44575:44603	12612	0	True				
ANR	12656	RelationalExpression	R_last_frozen_line < lastline		12612	0		<			
ANR	12657	Identifier	R_last_frozen_line		12612	0					
ANR	12658	Identifier	lastline		12612	1					
ANR	12659	CompoundStatement		13:6:287:287	12612	1					
ANR	12660	ExpressionStatement	"s = ifetch ( ++ R_last_frozen_line , false , & size )"	1640:1:44615:44662	12612	0	True				
ANR	12661	AssignmentExpression	"s = ifetch ( ++ R_last_frozen_line , false , & size )"		12612	0		=			
ANR	12662	Identifier	s		12612	0					
ANR	12663	CallExpression	"ifetch ( ++ R_last_frozen_line , false , & size )"		12612	1					
ANR	12664	Callee	ifetch		12612	0					
ANR	12665	Identifier	ifetch		12612	0					
ANR	12666	ArgumentList	++ R_last_frozen_line		12612	1					
ANR	12667	Argument	++ R_last_frozen_line		12612	0					
ANR	12668	UnaryExpression	++ R_last_frozen_line		12612	0					
ANR	12669	IncDec	++		12612	0					
ANR	12670	Identifier	R_last_frozen_line		12612	1					
ANR	12671	Argument	false		12612	1					
ANR	12672	Identifier	false		12612	0					
ANR	12673	Argument	& size		12612	2					
ANR	12674	UnaryOperationExpression	& size		12612	0					
ANR	12675	UnaryOperator	&		12612	0					
ANR	12676	Identifier	size		12612	1					
ANR	12677	IfStatement	if ( size )		12612	1					
ANR	12678	Condition	size	1641:5:44669:44672	12612	0	True				
ANR	12679	Identifier	size		12612	0					
ANR	12680	CompoundStatement		16:3:353:353	12612	1					
ANR	12681	IfStatement	"if ( ( ! outstate -> after_newline && putc ( '\\n' , fp ) == EOF ) || ! fwrite ( s , sizeof * s , size , fp ) )"		12612	0					
ANR	12682	Condition	"( ! outstate -> after_newline && putc ( '\\n' , fp ) == EOF ) || ! fwrite ( s , sizeof * s , size , fp )"	1643:9:44689:44782	12612	0	True				
ANR	12683	OrExpression	"( ! outstate -> after_newline && putc ( '\\n' , fp ) == EOF ) || ! fwrite ( s , sizeof * s , size , fp )"		12612	0		||			
ANR	12684	AndExpression	"! outstate -> after_newline && putc ( '\\n' , fp ) == EOF"		12612	0		&&			
ANR	12685	UnaryOperationExpression	! outstate -> after_newline		12612	0					
ANR	12686	UnaryOperator	!		12612	0					
ANR	12687	PtrMemberAccess	outstate -> after_newline		12612	1					
ANR	12688	Identifier	outstate		12612	0					
ANR	12689	Identifier	after_newline		12612	1					
ANR	12690	EqualityExpression	"putc ( '\\n' , fp ) == EOF"		12612	1		==			
ANR	12691	CallExpression	"putc ( '\\n' , fp )"		12612	0					
ANR	12692	Callee	putc		12612	0					
ANR	12693	Identifier	putc		12612	0					
ANR	12694	ArgumentList	'\\n'		12612	1					
ANR	12695	Argument	'\\n'		12612	0					
ANR	12696	PrimaryExpression	'\\n'		12612	0					
ANR	12697	Argument	fp		12612	1					
ANR	12698	Identifier	fp		12612	0					
ANR	12699	Identifier	EOF		12612	1					
ANR	12700	UnaryOperationExpression	"! fwrite ( s , sizeof * s , size , fp )"		12612	1					
ANR	12701	UnaryOperator	!		12612	0					
ANR	12702	CallExpression	"fwrite ( s , sizeof * s , size , fp )"		12612	1					
ANR	12703	Callee	fwrite		12612	0					
ANR	12704	Identifier	fwrite		12612	0					
ANR	12705	ArgumentList	s		12612	1					
ANR	12706	Argument	s		12612	0					
ANR	12707	Identifier	s		12612	0					
ANR	12708	Argument	sizeof * s		12612	1					
ANR	12709	SizeofExpression	sizeof * s		12612	0					
ANR	12710	Sizeof	sizeof		12612	0					
ANR	12711	UnaryOperationExpression	* s		12612	1					
ANR	12712	UnaryOperator	*		12612	0					
ANR	12713	Identifier	s		12612	1					
ANR	12714	Argument	size		12612	2					
ANR	12715	Identifier	size		12612	0					
ANR	12716	Argument	fp		12612	3					
ANR	12717	Identifier	fp		12612	0					
ANR	12718	ExpressionStatement	write_fatal ( )	1645:7:44792:44806	12612	1	True				
ANR	12719	CallExpression	write_fatal ( )		12612	0					
ANR	12720	Callee	write_fatal		12612	0					
ANR	12721	Identifier	write_fatal		12612	0					
ANR	12722	ArgumentList			12612	1					
ANR	12723	ExpressionStatement	outstate -> after_newline = s [ size - 1 ] == '\\n'	1646:5:44813:44858	12612	1	True				
ANR	12724	AssignmentExpression	outstate -> after_newline = s [ size - 1 ] == '\\n'		12612	0		=			
ANR	12725	PtrMemberAccess	outstate -> after_newline		12612	0					
ANR	12726	Identifier	outstate		12612	0					
ANR	12727	Identifier	after_newline		12612	1					
ANR	12728	EqualityExpression	s [ size - 1 ] == '\\n'		12612	1		==			
ANR	12729	ArrayIndexing	s [ size - 1 ]		12612	0					
ANR	12730	Identifier	s		12612	0					
ANR	12731	AdditiveExpression	size - 1		12612	1		-			
ANR	12732	Identifier	size		12612	0					
ANR	12733	PrimaryExpression	1		12612	1					
ANR	12734	PrimaryExpression	'\\n'		12612	1					
ANR	12735	ExpressionStatement	outstate -> zero_output = false	1647:5:44865:44894	12612	2	True				
ANR	12736	AssignmentExpression	outstate -> zero_output = false		12612	0		=			
ANR	12737	PtrMemberAccess	outstate -> zero_output		12612	0					
ANR	12738	Identifier	outstate		12612	0					
ANR	12739	Identifier	zero_output		12612	1					
ANR	12740	Identifier	false		12612	1					
ANR	12741	ExpressionStatement	last_frozen_line = R_last_frozen_line	1650:4:44913:44950	12612	6	True				
ANR	12742	AssignmentExpression	last_frozen_line = R_last_frozen_line		12612	0		=			
ANR	12743	Identifier	last_frozen_line		12612	0					
ANR	12744	Identifier	R_last_frozen_line		12612	1					
ANR	12745	ReturnStatement	return true ;	1651:4:44956:44967	12612	7	True				
ANR	12746	Identifier	true		12612	0					
ANR	12747	ReturnType	bool		12612	1					
ANR	12748	Identifier	copy_till		12612	2					
ANR	12749	ParameterList	"struct outstate * outstate , lin lastline"		12612	3					
ANR	12750	Parameter	struct outstate * outstate	1626:11:44283:44307	12612	0	True				
ANR	12751	ParameterType	struct outstate *		12612	0					
ANR	12752	Identifier	outstate		12612	1					
ANR	12753	Parameter	lin lastline	1626:38:44310:44321	12612	1	True				
ANR	12754	ParameterType	lin		12612	0					
ANR	12755	Identifier	lastline		12612	1					
ANR	12756	CFGEntryNode	ENTRY		12612		True				
ANR	12757	CFGExitNode	EXIT		12612		True				
ANR	12758	Symbol	putc		12612						
ANR	12759	Symbol	outstate -> ofp		12612						
ANR	12760	Symbol	lastline		12612						
ANR	12761	Symbol	false		12612						
ANR	12762	Symbol	ifetch		12612						
ANR	12763	Symbol	fwrite		12612						
ANR	12764	Symbol	last_frozen_line		12612						
ANR	12765	Symbol	fp		12612						
ANR	12766	Symbol	* outstate		12612						
ANR	12767	Symbol	& size		12612						
ANR	12768	Symbol	R_last_frozen_line		12612						
ANR	12769	Symbol	s		12612						
ANR	12770	Symbol	outstate -> after_newline		12612						
ANR	12771	Symbol	* size		12612						
ANR	12772	Symbol	size		12612						
ANR	12773	Symbol	outstate -> zero_output		12612						
ANR	12774	Symbol	true		12612						
ANR	12775	Symbol	outstate		12612						
ANR	12776	Symbol	* s		12612						
ANR	12777	Symbol	EOF		12612						
ANR	12778	Function	spew_output	1656:0:45029:45670							
ANR	12779	FunctionDef	"spew_output (struct outstate * outstate , struct stat * st)"		12778	0					
ANR	12780	CompoundStatement		1658:0:45098:45670	12778	0					
ANR	12781	IfStatement	if ( debug & 256 )		12778	0					
ANR	12782	Condition	debug & 256	1659:8:45108:45118	12778	0	True				
ANR	12783	BitAndExpression	debug & 256		12778	0		&			
ANR	12784	Identifier	debug		12778	0					
ANR	12785	PrimaryExpression	256		12778	1					
ANR	12786	CompoundStatement		5:1:72:110	12778	1					
ANR	12787	IdentifierDeclStatement	char numbuf0 [ LINENUM_LENGTH_BOUND + 1 ] ;	1661:1:45130:45168	12778	0	True				
ANR	12788	IdentifierDecl	numbuf0 [ LINENUM_LENGTH_BOUND + 1 ]		12778	0					
ANR	12789	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		12778	0					
ANR	12790	Identifier	numbuf0		12778	1					
ANR	12791	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		12778	2		+			
ANR	12792	Identifier	LINENUM_LENGTH_BOUND		12778	0					
ANR	12793	PrimaryExpression	1		12778	1					
ANR	12794	IdentifierDeclStatement	char numbuf1 [ LINENUM_LENGTH_BOUND + 1 ] ;	1662:1:45171:45209	12778	1	True				
ANR	12795	IdentifierDecl	numbuf1 [ LINENUM_LENGTH_BOUND + 1 ]		12778	0					
ANR	12796	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		12778	0					
ANR	12797	Identifier	numbuf1		12778	1					
ANR	12798	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		12778	2		+			
ANR	12799	Identifier	LINENUM_LENGTH_BOUND		12778	0					
ANR	12800	PrimaryExpression	1		12778	1					
ANR	12801	ExpressionStatement	"say ( ""il=%s lfl=%s\\n"" , format_linenum ( numbuf0 , input_lines ) , format_linenum ( numbuf1 , last_frozen_line ) )"	1663:1:45212:45329	12778	2	True				
ANR	12802	CallExpression	"say ( ""il=%s lfl=%s\\n"" , format_linenum ( numbuf0 , input_lines ) , format_linenum ( numbuf1 , last_frozen_line ) )"		12778	0					
ANR	12803	Callee	say		12778	0					
ANR	12804	Identifier	say		12778	0					
ANR	12805	ArgumentList	"""il=%s lfl=%s\\n"""		12778	1					
ANR	12806	Argument	"""il=%s lfl=%s\\n"""		12778	0					
ANR	12807	PrimaryExpression	"""il=%s lfl=%s\\n"""		12778	0					
ANR	12808	Argument	"format_linenum ( numbuf0 , input_lines )"		12778	1					
ANR	12809	CallExpression	"format_linenum ( numbuf0 , input_lines )"		12778	0					
ANR	12810	Callee	format_linenum		12778	0					
ANR	12811	Identifier	format_linenum		12778	0					
ANR	12812	ArgumentList	numbuf0		12778	1					
ANR	12813	Argument	numbuf0		12778	0					
ANR	12814	Identifier	numbuf0		12778	0					
ANR	12815	Argument	input_lines		12778	1					
ANR	12816	Identifier	input_lines		12778	0					
ANR	12817	Argument	"format_linenum ( numbuf1 , last_frozen_line )"		12778	2					
ANR	12818	CallExpression	"format_linenum ( numbuf1 , last_frozen_line )"		12778	0					
ANR	12819	Callee	format_linenum		12778	0					
ANR	12820	Identifier	format_linenum		12778	0					
ANR	12821	ArgumentList	numbuf1		12778	1					
ANR	12822	Argument	numbuf1		12778	0					
ANR	12823	Identifier	numbuf1		12778	0					
ANR	12824	Argument	last_frozen_line		12778	1					
ANR	12825	Identifier	last_frozen_line		12778	0					
ANR	12826	IfStatement	if ( last_frozen_line < input_lines )		12778	1					
ANR	12827	Condition	last_frozen_line < input_lines	1668:8:45348:45377	12778	0	True				
ANR	12828	RelationalExpression	last_frozen_line < input_lines		12778	0		<			
ANR	12829	Identifier	last_frozen_line		12778	0					
ANR	12830	Identifier	input_lines		12778	1					
ANR	12831	IfStatement	"if ( ! copy_till ( outstate , input_lines ) )"		12778	1					
ANR	12832	Condition	"! copy_till ( outstate , input_lines )"	1669:10:45390:45424	12778	0	True				
ANR	12833	UnaryOperationExpression	"! copy_till ( outstate , input_lines )"		12778	0					
ANR	12834	UnaryOperator	!		12778	0					
ANR	12835	CallExpression	"copy_till ( outstate , input_lines )"		12778	1					
ANR	12836	Callee	copy_till		12778	0					
ANR	12837	Identifier	copy_till		12778	0					
ANR	12838	ArgumentList	outstate		12778	1					
ANR	12839	Argument	outstate		12778	0					
ANR	12840	Identifier	outstate		12778	0					
ANR	12841	Argument	input_lines		12778	1					
ANR	12842	Identifier	input_lines		12778	0					
ANR	12843	ReturnStatement	return false ;	1670:1:45428:45440	12778	1	True				
ANR	12844	Identifier	false		12778	0					
ANR	12845	IfStatement	if ( outstate -> ofp && ! outfile )		12778	2					
ANR	12846	Condition	outstate -> ofp && ! outfile	1672:8:45451:45476	12778	0	True				
ANR	12847	AndExpression	outstate -> ofp && ! outfile		12778	0		&&			
ANR	12848	PtrMemberAccess	outstate -> ofp		12778	0					
ANR	12849	Identifier	outstate		12778	0					
ANR	12850	Identifier	ofp		12778	1					
ANR	12851	UnaryOperationExpression	! outfile		12778	1					
ANR	12852	UnaryOperator	!		12778	0					
ANR	12853	Identifier	outfile		12778	1					
ANR	12854	CompoundStatement		16:6:386:386	12778	1					
ANR	12855	IfStatement	"if ( fflush ( outstate -> ofp ) != 0 || fstat ( fileno ( outstate -> ofp ) , st ) != 0 || fclose ( outstate -> ofp ) != 0 )"		12778	0					
ANR	12856	Condition	"fflush ( outstate -> ofp ) != 0 || fstat ( fileno ( outstate -> ofp ) , st ) != 0 || fclose ( outstate -> ofp ) != 0"	1674:5:45492:45602	12778	0	True				
ANR	12857	OrExpression	"fflush ( outstate -> ofp ) != 0 || fstat ( fileno ( outstate -> ofp ) , st ) != 0 || fclose ( outstate -> ofp ) != 0"		12778	0		||			
ANR	12858	EqualityExpression	fflush ( outstate -> ofp ) != 0		12778	0		!=			
ANR	12859	CallExpression	fflush ( outstate -> ofp )		12778	0					
ANR	12860	Callee	fflush		12778	0					
ANR	12861	Identifier	fflush		12778	0					
ANR	12862	ArgumentList	outstate -> ofp		12778	1					
ANR	12863	Argument	outstate -> ofp		12778	0					
ANR	12864	PtrMemberAccess	outstate -> ofp		12778	0					
ANR	12865	Identifier	outstate		12778	0					
ANR	12866	Identifier	ofp		12778	1					
ANR	12867	PrimaryExpression	0		12778	1					
ANR	12868	OrExpression	"fstat ( fileno ( outstate -> ofp ) , st ) != 0 || fclose ( outstate -> ofp ) != 0"		12778	1		||			
ANR	12869	EqualityExpression	"fstat ( fileno ( outstate -> ofp ) , st ) != 0"		12778	0		!=			
ANR	12870	CallExpression	"fstat ( fileno ( outstate -> ofp ) , st )"		12778	0					
ANR	12871	Callee	fstat		12778	0					
ANR	12872	Identifier	fstat		12778	0					
ANR	12873	ArgumentList	fileno ( outstate -> ofp )		12778	1					
ANR	12874	Argument	fileno ( outstate -> ofp )		12778	0					
ANR	12875	CallExpression	fileno ( outstate -> ofp )		12778	0					
ANR	12876	Callee	fileno		12778	0					
ANR	12877	Identifier	fileno		12778	0					
ANR	12878	ArgumentList	outstate -> ofp		12778	1					
ANR	12879	Argument	outstate -> ofp		12778	0					
ANR	12880	PtrMemberAccess	outstate -> ofp		12778	0					
ANR	12881	Identifier	outstate		12778	0					
ANR	12882	Identifier	ofp		12778	1					
ANR	12883	Argument	st		12778	1					
ANR	12884	Identifier	st		12778	0					
ANR	12885	PrimaryExpression	0		12778	1					
ANR	12886	EqualityExpression	fclose ( outstate -> ofp ) != 0		12778	1		!=			
ANR	12887	CallExpression	fclose ( outstate -> ofp )		12778	0					
ANR	12888	Callee	fclose		12778	0					
ANR	12889	Identifier	fclose		12778	0					
ANR	12890	ArgumentList	outstate -> ofp		12778	1					
ANR	12891	Argument	outstate -> ofp		12778	0					
ANR	12892	PtrMemberAccess	outstate -> ofp		12778	0					
ANR	12893	Identifier	outstate		12778	0					
ANR	12894	Identifier	ofp		12778	1					
ANR	12895	PrimaryExpression	0		12778	1					
ANR	12896	ExpressionStatement	write_fatal ( )	1677:3:45608:45622	12778	1	True				
ANR	12897	CallExpression	write_fatal ( )		12778	0					
ANR	12898	Callee	write_fatal		12778	0					
ANR	12899	Identifier	write_fatal		12778	0					
ANR	12900	ArgumentList			12778	1					
ANR	12901	ExpressionStatement	outstate -> ofp = 0	1678:1:45625:45642	12778	1	True				
ANR	12902	AssignmentExpression	outstate -> ofp = 0		12778	0		=			
ANR	12903	PtrMemberAccess	outstate -> ofp		12778	0					
ANR	12904	Identifier	outstate		12778	0					
ANR	12905	Identifier	ofp		12778	1					
ANR	12906	PrimaryExpression	0		12778	1					
ANR	12907	ReturnStatement	return true ;	1681:4:45657:45668	12778	3	True				
ANR	12908	Identifier	true		12778	0					
ANR	12909	ReturnType	static bool		12778	1					
ANR	12910	Identifier	spew_output		12778	2					
ANR	12911	ParameterList	"struct outstate * outstate , struct stat * st"		12778	3					
ANR	12912	Parameter	struct outstate * outstate	1657:13:45054:45078	12778	0	True				
ANR	12913	ParameterType	struct outstate *		12778	0					
ANR	12914	Identifier	outstate		12778	1					
ANR	12915	Parameter	struct stat * st	1657:40:45081:45095	12778	1	True				
ANR	12916	ParameterType	struct stat *		12778	0					
ANR	12917	Identifier	st		12778	1					
ANR	12918	CFGEntryNode	ENTRY		12778		True				
ANR	12919	CFGExitNode	EXIT		12778		True				
ANR	12920	Symbol	fflush		12778						
ANR	12921	Symbol	st		12778						
ANR	12922	Symbol	numbuf0		12778						
ANR	12923	Symbol	copy_till		12778						
ANR	12924	Symbol	input_lines		12778						
ANR	12925	Symbol	outstate -> ofp		12778						
ANR	12926	Symbol	debug		12778						
ANR	12927	Symbol	numbuf1		12778						
ANR	12928	Symbol	fclose		12778						
ANR	12929	Symbol	outfile		12778						
ANR	12930	Symbol	false		12778						
ANR	12931	Symbol	fstat		12778						
ANR	12932	Symbol	last_frozen_line		12778						
ANR	12933	Symbol	* outstate		12778						
ANR	12934	Symbol	format_linenum		12778						
ANR	12935	Symbol	fileno		12778						
ANR	12936	Symbol	true		12778						
ANR	12937	Symbol	outstate		12778						
ANR	12938	Function	patch_match	1686:0:45730:46313							
ANR	12939	FunctionDef	"patch_match (lin base , lin offset , lin prefix_fuzz , lin suffix_fuzz)"		12938	0					
ANR	12940	CompoundStatement		1688:0:45811:46313	12938	0					
ANR	12941	IdentifierDeclStatement	lin pline = 1 + prefix_fuzz ;	1689:4:45817:45844	12938	0	True				
ANR	12942	IdentifierDecl	pline = 1 + prefix_fuzz		12938	0					
ANR	12943	IdentifierDeclType	lin		12938	0					
ANR	12944	Identifier	pline		12938	1					
ANR	12945	AssignmentExpression	pline = 1 + prefix_fuzz		12938	2		=			
ANR	12946	Identifier	pline		12938	0					
ANR	12947	AdditiveExpression	1 + prefix_fuzz		12938	1		+			
ANR	12948	PrimaryExpression	1		12938	0					
ANR	12949	Identifier	prefix_fuzz		12938	1					
ANR	12950	IdentifierDeclStatement	lin iline ;	1690:4:45850:45859	12938	1	True				
ANR	12951	IdentifierDecl	iline		12938	0					
ANR	12952	IdentifierDeclType	lin		12938	0					
ANR	12953	Identifier	iline		12938	1					
ANR	12954	IdentifierDeclStatement	lin pat_lines = pch_ptrn_lines ( ) - suffix_fuzz ;	1691:4:45865:45912	12938	2	True				
ANR	12955	IdentifierDecl	pat_lines = pch_ptrn_lines ( ) - suffix_fuzz		12938	0					
ANR	12956	IdentifierDeclType	lin		12938	0					
ANR	12957	Identifier	pat_lines		12938	1					
ANR	12958	AssignmentExpression	pat_lines = pch_ptrn_lines ( ) - suffix_fuzz		12938	2		=			
ANR	12959	Identifier	pat_lines		12938	0					
ANR	12960	AdditiveExpression	pch_ptrn_lines ( ) - suffix_fuzz		12938	1		-			
ANR	12961	CallExpression	pch_ptrn_lines ( )		12938	0					
ANR	12962	Callee	pch_ptrn_lines		12938	0					
ANR	12963	Identifier	pch_ptrn_lines		12938	0					
ANR	12964	ArgumentList			12938	1					
ANR	12965	Identifier	suffix_fuzz		12938	1					
ANR	12966	IdentifierDeclStatement	size_t size ;	1692:4:45918:45929	12938	3	True				
ANR	12967	IdentifierDecl	size		12938	0					
ANR	12968	IdentifierDeclType	size_t		12938	0					
ANR	12969	Identifier	size		12938	1					
ANR	12970	IdentifierDeclStatement	char const * p ;	1693:4:45935:45948	12938	4	True				
ANR	12971	IdentifierDecl	* p		12938	0					
ANR	12972	IdentifierDeclType	char const *		12938	0					
ANR	12973	Identifier	p		12938	1					
ANR	12974	ForStatement	"for ( iline = base + offset + prefix_fuzz ; pline <= pat_lines ; pline ++ , iline ++ )"		12938	5					
ANR	12975	ForInit	iline = base + offset + prefix_fuzz ;	1695:9:45960:45989	12938	0	True				
ANR	12976	AssignmentExpression	iline = base + offset + prefix_fuzz		12938	0		=			
ANR	12977	Identifier	iline		12938	0					
ANR	12978	AdditiveExpression	base + offset + prefix_fuzz		12938	1		+			
ANR	12979	Identifier	base		12938	0					
ANR	12980	AdditiveExpression	offset + prefix_fuzz		12938	1		+			
ANR	12981	Identifier	offset		12938	0					
ANR	12982	Identifier	prefix_fuzz		12938	1					
ANR	12983	Condition	pline <= pat_lines	1695:40:45991:46008	12938	1	True				
ANR	12984	RelationalExpression	pline <= pat_lines		12938	0		<=			
ANR	12985	Identifier	pline		12938	0					
ANR	12986	Identifier	pat_lines		12938	1					
ANR	12987	Expression	"pline ++ , iline ++"	1695:60:46011:46025	12938	2	True				
ANR	12988	PostIncDecOperationExpression	pline ++		12938	0					
ANR	12989	Identifier	pline		12938	0					
ANR	12990	IncDec	++		12938	1					
ANR	12991	PostIncDecOperationExpression	iline ++		12938	1					
ANR	12992	Identifier	iline		12938	0					
ANR	12993	IncDec	++		12938	1					
ANR	12994	CompoundStatement		8:77:216:216	12938	3					
ANR	12995	ExpressionStatement	"p = ifetch ( iline , offset >= 0 , & size )"	1696:1:46031:46069	12938	0	True				
ANR	12996	AssignmentExpression	"p = ifetch ( iline , offset >= 0 , & size )"		12938	0		=			
ANR	12997	Identifier	p		12938	0					
ANR	12998	CallExpression	"ifetch ( iline , offset >= 0 , & size )"		12938	1					
ANR	12999	Callee	ifetch		12938	0					
ANR	13000	Identifier	ifetch		12938	0					
ANR	13001	ArgumentList	iline		12938	1					
ANR	13002	Argument	iline		12938	0					
ANR	13003	Identifier	iline		12938	0					
ANR	13004	Argument	offset >= 0		12938	1					
ANR	13005	RelationalExpression	offset >= 0		12938	0		>=			
ANR	13006	Identifier	offset		12938	0					
ANR	13007	PrimaryExpression	0		12938	1					
ANR	13008	Argument	& size		12938	2					
ANR	13009	UnaryOperationExpression	& size		12938	0					
ANR	13010	UnaryOperator	&		12938	0					
ANR	13011	Identifier	size		12938	1					
ANR	13012	IfStatement	if ( canonicalize_ws )		12938	1					
ANR	13013	Condition	canonicalize_ws	1697:5:46076:46090	12938	0	True				
ANR	13014	Identifier	canonicalize_ws		12938	0					
ANR	13015	CompoundStatement		10:22:281:281	12938	1					
ANR	13016	IfStatement	"if ( ! similar ( p , size , pfetch ( pline ) , pch_line_len ( pline ) ) )"		12938	0					
ANR	13017	Condition	"! similar ( p , size , pfetch ( pline ) , pch_line_len ( pline ) )"	1698:9:46104:46165	12938	0	True				
ANR	13018	UnaryOperationExpression	"! similar ( p , size , pfetch ( pline ) , pch_line_len ( pline ) )"		12938	0					
ANR	13019	UnaryOperator	!		12938	0					
ANR	13020	CallExpression	"similar ( p , size , pfetch ( pline ) , pch_line_len ( pline ) )"		12938	1					
ANR	13021	Callee	similar		12938	0					
ANR	13022	Identifier	similar		12938	0					
ANR	13023	ArgumentList	p		12938	1					
ANR	13024	Argument	p		12938	0					
ANR	13025	Identifier	p		12938	0					
ANR	13026	Argument	size		12938	1					
ANR	13027	Identifier	size		12938	0					
ANR	13028	Argument	pfetch ( pline )		12938	2					
ANR	13029	CallExpression	pfetch ( pline )		12938	0					
ANR	13030	Callee	pfetch		12938	0					
ANR	13031	Identifier	pfetch		12938	0					
ANR	13032	ArgumentList	pline		12938	1					
ANR	13033	Argument	pline		12938	0					
ANR	13034	Identifier	pline		12938	0					
ANR	13035	Argument	pch_line_len ( pline )		12938	3					
ANR	13036	CallExpression	pch_line_len ( pline )		12938	0					
ANR	13037	Callee	pch_line_len		12938	0					
ANR	13038	Identifier	pch_line_len		12938	0					
ANR	13039	ArgumentList	pline		12938	1					
ANR	13040	Argument	pline		12938	0					
ANR	13041	Identifier	pline		12938	0					
ANR	13042	ReturnStatement	return false ;	1701:2:46170:46182	12938	1	True				
ANR	13043	Identifier	false		12938	0					
ANR	13044	ElseStatement	else		12938	0					
ANR	13045	IfStatement	"if ( size != pch_line_len ( pline ) || memcmp ( p , pfetch ( pline ) , size ) != 0 )"		12938	0					
ANR	13046	Condition	"size != pch_line_len ( pline ) || memcmp ( p , pfetch ( pline ) , size ) != 0"	1703:10:46197:46268	12938	0	True				
ANR	13047	OrExpression	"size != pch_line_len ( pline ) || memcmp ( p , pfetch ( pline ) , size ) != 0"		12938	0		||			
ANR	13048	EqualityExpression	size != pch_line_len ( pline )		12938	0		!=			
ANR	13049	Identifier	size		12938	0					
ANR	13050	CallExpression	pch_line_len ( pline )		12938	1					
ANR	13051	Callee	pch_line_len		12938	0					
ANR	13052	Identifier	pch_line_len		12938	0					
ANR	13053	ArgumentList	pline		12938	1					
ANR	13054	Argument	pline		12938	0					
ANR	13055	Identifier	pline		12938	0					
ANR	13056	EqualityExpression	"memcmp ( p , pfetch ( pline ) , size ) != 0"		12938	1		!=			
ANR	13057	CallExpression	"memcmp ( p , pfetch ( pline ) , size )"		12938	0					
ANR	13058	Callee	memcmp		12938	0					
ANR	13059	Identifier	memcmp		12938	0					
ANR	13060	ArgumentList	p		12938	1					
ANR	13061	Argument	p		12938	0					
ANR	13062	Identifier	p		12938	0					
ANR	13063	Argument	pfetch ( pline )		12938	1					
ANR	13064	CallExpression	pfetch ( pline )		12938	0					
ANR	13065	Callee	pfetch		12938	0					
ANR	13066	Identifier	pfetch		12938	0					
ANR	13067	ArgumentList	pline		12938	1					
ANR	13068	Argument	pline		12938	0					
ANR	13069	Identifier	pline		12938	0					
ANR	13070	Argument	size		12938	2					
ANR	13071	Identifier	size		12938	0					
ANR	13072	PrimaryExpression	0		12938	1					
ANR	13073	ReturnStatement	return false ;	1705:5:46276:46288	12938	1	True				
ANR	13074	Identifier	false		12938	0					
ANR	13075	ReturnStatement	return true ;	1707:4:46300:46311	12938	6	True				
ANR	13076	Identifier	true		12938	0					
ANR	13077	ReturnType	static bool		12938	1					
ANR	13078	Identifier	patch_match		12938	2					
ANR	13079	ParameterList	"lin base , lin offset , lin prefix_fuzz , lin suffix_fuzz"		12938	3					
ANR	13080	Parameter	lin base	1687:13:45755:45762	12938	0	True				
ANR	13081	ParameterType	lin		12938	0					
ANR	13082	Identifier	base		12938	1					
ANR	13083	Parameter	lin offset	1687:23:45765:45774	12938	1	True				
ANR	13084	ParameterType	lin		12938	0					
ANR	13085	Identifier	offset		12938	1					
ANR	13086	Parameter	lin prefix_fuzz	1687:35:45777:45791	12938	2	True				
ANR	13087	ParameterType	lin		12938	0					
ANR	13088	Identifier	prefix_fuzz		12938	1					
ANR	13089	Parameter	lin suffix_fuzz	1687:52:45794:45808	12938	3	True				
ANR	13090	ParameterType	lin		12938	0					
ANR	13091	Identifier	suffix_fuzz		12938	1					
ANR	13092	CFGEntryNode	ENTRY		12938		True				
ANR	13093	CFGExitNode	EXIT		12938		True				
ANR	13094	Symbol	similar		12938						
ANR	13095	Symbol	pfetch		12938						
ANR	13096	Symbol	canonicalize_ws		12938						
ANR	13097	Symbol	offset		12938						
ANR	13098	Symbol	prefix_fuzz		12938						
ANR	13099	Symbol	iline		12938						
ANR	13100	Symbol	ifetch		12938						
ANR	13101	Symbol	false		12938						
ANR	13102	Symbol	& size		12938						
ANR	13103	Symbol	p		12938						
ANR	13104	Symbol	memcmp		12938						
ANR	13105	Symbol	size		12938						
ANR	13106	Symbol	pat_lines		12938						
ANR	13107	Symbol	pch_line_len		12938						
ANR	13108	Symbol	pline		12938						
ANR	13109	Symbol	true		12938						
ANR	13110	Symbol	suffix_fuzz		12938						
ANR	13111	Symbol	pch_ptrn_lines		12938						
ANR	13112	Symbol	base		12938						
ANR	13113	Function	check_line_endings	1712:0:46392:46918							
ANR	13114	FunctionDef	check_line_endings (lin where)		13113	0					
ANR	13115	CompoundStatement		1714:0:46435:46918	13113	0					
ANR	13116	IdentifierDeclStatement	char const * p ;	1715:2:46439:46452	13113	0	True				
ANR	13117	IdentifierDecl	* p		13113	0					
ANR	13118	IdentifierDeclType	char const *		13113	0					
ANR	13119	Identifier	p		13113	1					
ANR	13120	IdentifierDeclStatement	size_t size ;	1716:2:46456:46467	13113	1	True				
ANR	13121	IdentifierDecl	size		13113	0					
ANR	13122	IdentifierDeclType	size_t		13113	0					
ANR	13123	Identifier	size		13113	1					
ANR	13124	IdentifierDeclStatement	"bool input_crlf , patch_crlf ;"	1717:2:46471:46498	13113	2	True				
ANR	13125	IdentifierDecl	input_crlf		13113	0					
ANR	13126	IdentifierDeclType	bool		13113	0					
ANR	13127	Identifier	input_crlf		13113	1					
ANR	13128	IdentifierDecl	patch_crlf		13113	1					
ANR	13129	IdentifierDeclType	bool		13113	0					
ANR	13130	Identifier	patch_crlf		13113	1					
ANR	13131	ExpressionStatement	p = pfetch ( 1 )	1719:2:46503:46517	13113	3	True				
ANR	13132	AssignmentExpression	p = pfetch ( 1 )		13113	0		=			
ANR	13133	Identifier	p		13113	0					
ANR	13134	CallExpression	pfetch ( 1 )		13113	1					
ANR	13135	Callee	pfetch		13113	0					
ANR	13136	Identifier	pfetch		13113	0					
ANR	13137	ArgumentList	1		13113	1					
ANR	13138	Argument	1		13113	0					
ANR	13139	PrimaryExpression	1		13113	0					
ANR	13140	ExpressionStatement	size = pch_line_len ( 1 )	1720:2:46521:46544	13113	4	True				
ANR	13141	AssignmentExpression	size = pch_line_len ( 1 )		13113	0		=			
ANR	13142	Identifier	size		13113	0					
ANR	13143	CallExpression	pch_line_len ( 1 )		13113	1					
ANR	13144	Callee	pch_line_len		13113	0					
ANR	13145	Identifier	pch_line_len		13113	0					
ANR	13146	ArgumentList	1		13113	1					
ANR	13147	Argument	1		13113	0					
ANR	13148	PrimaryExpression	1		13113	0					
ANR	13149	IfStatement	if ( ! size )		13113	5					
ANR	13150	Condition	! size	1721:6:46552:46557	13113	0	True				
ANR	13151	UnaryOperationExpression	! size		13113	0					
ANR	13152	UnaryOperator	!		13113	0					
ANR	13153	Identifier	size		13113	1					
ANR	13154	ReturnStatement	return false ;	1722:4:46564:46576	13113	1	True				
ANR	13155	Identifier	false		13113	0					
ANR	13156	ExpressionStatement	patch_crlf = size >= 2 && p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'	1723:2:46580:46648	13113	6	True				
ANR	13157	AssignmentExpression	patch_crlf = size >= 2 && p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'		13113	0		=			
ANR	13158	Identifier	patch_crlf		13113	0					
ANR	13159	AndExpression	size >= 2 && p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'		13113	1		&&			
ANR	13160	RelationalExpression	size >= 2		13113	0		>=			
ANR	13161	Identifier	size		13113	0					
ANR	13162	PrimaryExpression	2		13113	1					
ANR	13163	AndExpression	p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'		13113	1		&&			
ANR	13164	EqualityExpression	p [ size - 2 ] == '\\r'		13113	0		==			
ANR	13165	ArrayIndexing	p [ size - 2 ]		13113	0					
ANR	13166	Identifier	p		13113	0					
ANR	13167	AdditiveExpression	size - 2		13113	1		-			
ANR	13168	Identifier	size		13113	0					
ANR	13169	PrimaryExpression	2		13113	1					
ANR	13170	PrimaryExpression	'\\r'		13113	1					
ANR	13171	EqualityExpression	p [ size - 1 ] == '\\n'		13113	1		==			
ANR	13172	ArrayIndexing	p [ size - 1 ]		13113	0					
ANR	13173	Identifier	p		13113	0					
ANR	13174	AdditiveExpression	size - 1		13113	1		-			
ANR	13175	Identifier	size		13113	0					
ANR	13176	PrimaryExpression	1		13113	1					
ANR	13177	PrimaryExpression	'\\n'		13113	1					
ANR	13178	IfStatement	if ( ! input_lines )		13113	7					
ANR	13179	Condition	! input_lines	1725:6:46657:46669	13113	0	True				
ANR	13180	UnaryOperationExpression	! input_lines		13113	0					
ANR	13181	UnaryOperator	!		13113	0					
ANR	13182	Identifier	input_lines		13113	1					
ANR	13183	ReturnStatement	return false ;	1726:4:46676:46688	13113	1	True				
ANR	13184	Identifier	false		13113	0					
ANR	13185	IfStatement	if ( where > input_lines )		13113	8					
ANR	13186	Condition	where > input_lines	1727:6:46696:46714	13113	0	True				
ANR	13187	RelationalExpression	where > input_lines		13113	0		>			
ANR	13188	Identifier	where		13113	0					
ANR	13189	Identifier	input_lines		13113	1					
ANR	13190	ExpressionStatement	where = input_lines	1728:4:46721:46740	13113	1	True				
ANR	13191	AssignmentExpression	where = input_lines		13113	0		=			
ANR	13192	Identifier	where		13113	0					
ANR	13193	Identifier	input_lines		13113	1					
ANR	13194	ExpressionStatement	"p = ifetch ( where , false , & size )"	1729:2:46744:46776	13113	9	True				
ANR	13195	AssignmentExpression	"p = ifetch ( where , false , & size )"		13113	0		=			
ANR	13196	Identifier	p		13113	0					
ANR	13197	CallExpression	"ifetch ( where , false , & size )"		13113	1					
ANR	13198	Callee	ifetch		13113	0					
ANR	13199	Identifier	ifetch		13113	0					
ANR	13200	ArgumentList	where		13113	1					
ANR	13201	Argument	where		13113	0					
ANR	13202	Identifier	where		13113	0					
ANR	13203	Argument	false		13113	1					
ANR	13204	Identifier	false		13113	0					
ANR	13205	Argument	& size		13113	2					
ANR	13206	UnaryOperationExpression	& size		13113	0					
ANR	13207	UnaryOperator	&		13113	0					
ANR	13208	Identifier	size		13113	1					
ANR	13209	IfStatement	if ( ! size )		13113	10					
ANR	13210	Condition	! size	1730:6:46784:46789	13113	0	True				
ANR	13211	UnaryOperationExpression	! size		13113	0					
ANR	13212	UnaryOperator	!		13113	0					
ANR	13213	Identifier	size		13113	1					
ANR	13214	ReturnStatement	return false ;	1731:4:46796:46808	13113	1	True				
ANR	13215	Identifier	false		13113	0					
ANR	13216	ExpressionStatement	input_crlf = size >= 2 && p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'	1732:2:46812:46880	13113	11	True				
ANR	13217	AssignmentExpression	input_crlf = size >= 2 && p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'		13113	0		=			
ANR	13218	Identifier	input_crlf		13113	0					
ANR	13219	AndExpression	size >= 2 && p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'		13113	1		&&			
ANR	13220	RelationalExpression	size >= 2		13113	0		>=			
ANR	13221	Identifier	size		13113	0					
ANR	13222	PrimaryExpression	2		13113	1					
ANR	13223	AndExpression	p [ size - 2 ] == '\\r' && p [ size - 1 ] == '\\n'		13113	1		&&			
ANR	13224	EqualityExpression	p [ size - 2 ] == '\\r'		13113	0		==			
ANR	13225	ArrayIndexing	p [ size - 2 ]		13113	0					
ANR	13226	Identifier	p		13113	0					
ANR	13227	AdditiveExpression	size - 2		13113	1		-			
ANR	13228	Identifier	size		13113	0					
ANR	13229	PrimaryExpression	2		13113	1					
ANR	13230	PrimaryExpression	'\\r'		13113	1					
ANR	13231	EqualityExpression	p [ size - 1 ] == '\\n'		13113	1		==			
ANR	13232	ArrayIndexing	p [ size - 1 ]		13113	0					
ANR	13233	Identifier	p		13113	0					
ANR	13234	AdditiveExpression	size - 1		13113	1		-			
ANR	13235	Identifier	size		13113	0					
ANR	13236	PrimaryExpression	1		13113	1					
ANR	13237	PrimaryExpression	'\\n'		13113	1					
ANR	13238	ReturnStatement	return patch_crlf != input_crlf ;	1734:2:46885:46916	13113	12	True				
ANR	13239	EqualityExpression	patch_crlf != input_crlf		13113	0		!=			
ANR	13240	Identifier	patch_crlf		13113	0					
ANR	13241	Identifier	input_crlf		13113	1					
ANR	13242	ReturnType	static bool		13113	1					
ANR	13243	Identifier	check_line_endings		13113	2					
ANR	13244	ParameterList	lin where		13113	3					
ANR	13245	Parameter	lin where	1713:20:46424:46432	13113	0	True				
ANR	13246	ParameterType	lin		13113	0					
ANR	13247	Identifier	where		13113	1					
ANR	13248	CFGEntryNode	ENTRY		13113		True				
ANR	13249	CFGExitNode	EXIT		13113		True				
ANR	13250	Symbol	input_crlf		13113						
ANR	13251	Symbol	pfetch		13113						
ANR	13252	Symbol	patch_crlf		13113						
ANR	13253	Symbol	input_lines		13113						
ANR	13254	Symbol	false		13113						
ANR	13255	Symbol	ifetch		13113						
ANR	13256	Symbol	& size		13113						
ANR	13257	Symbol	p		13113						
ANR	13258	Symbol	* size		13113						
ANR	13259	Symbol	size		13113						
ANR	13260	Symbol	pch_line_len		13113						
ANR	13261	Symbol	where		13113						
ANR	13262	Symbol	* p		13113						
ANR	13263	Function	similar	1739:0:46979:47615							
ANR	13264	FunctionDef	"similar (char const * a , size_t alen , char const * b , size_t blen)"		13263	0					
ANR	13265	CompoundStatement		1741:0:47049:47615	13263	0					
ANR	13266	ExpressionStatement	alen -= alen && a [ alen - 1 ] == '\\n'	1743:2:47111:47148	13263	0	True				
ANR	13267	AssignmentExpression	alen -= alen && a [ alen - 1 ] == '\\n'		13263	0		-=			
ANR	13268	Identifier	alen		13263	0					
ANR	13269	AndExpression	alen && a [ alen - 1 ] == '\\n'		13263	1		&&			
ANR	13270	Identifier	alen		13263	0					
ANR	13271	EqualityExpression	a [ alen - 1 ] == '\\n'		13263	1		==			
ANR	13272	ArrayIndexing	a [ alen - 1 ]		13263	0					
ANR	13273	Identifier	a		13263	0					
ANR	13274	AdditiveExpression	alen - 1		13263	1		-			
ANR	13275	Identifier	alen		13263	0					
ANR	13276	PrimaryExpression	1		13263	1					
ANR	13277	PrimaryExpression	'\\n'		13263	1					
ANR	13278	ExpressionStatement	blen -= blen && b [ blen - 1 ] == '\\n'	1744:2:47152:47189	13263	1	True				
ANR	13279	AssignmentExpression	blen -= blen && b [ blen - 1 ] == '\\n'		13263	0		-=			
ANR	13280	Identifier	blen		13263	0					
ANR	13281	AndExpression	blen && b [ blen - 1 ] == '\\n'		13263	1		&&			
ANR	13282	Identifier	blen		13263	0					
ANR	13283	EqualityExpression	b [ blen - 1 ] == '\\n'		13263	1		==			
ANR	13284	ArrayIndexing	b [ blen - 1 ]		13263	0					
ANR	13285	Identifier	b		13263	0					
ANR	13286	AdditiveExpression	blen - 1		13263	1		-			
ANR	13287	Identifier	blen		13263	0					
ANR	13288	PrimaryExpression	1		13263	1					
ANR	13289	PrimaryExpression	'\\n'		13263	1					
ANR	13290	ForStatement	for ( ; ; )		13263	2					
ANR	13291	CompoundStatement		7:4:157:157	13263	0					
ANR	13292	IfStatement	if ( ! blen || ( * b == ' ' || * b == '\\t' ) )		13263	0					
ANR	13293	Condition	! blen || ( * b == ' ' || * b == '\\t' )	1748:10:47219:47252	13263	0	True				
ANR	13294	OrExpression	! blen || ( * b == ' ' || * b == '\\t' )		13263	0		||			
ANR	13295	UnaryOperationExpression	! blen		13263	0					
ANR	13296	UnaryOperator	!		13263	0					
ANR	13297	Identifier	blen		13263	1					
ANR	13298	OrExpression	* b == ' ' || * b == '\\t'		13263	1		||			
ANR	13299	EqualityExpression	* b == ' '		13263	0		==			
ANR	13300	UnaryOperationExpression	* b		13263	0					
ANR	13301	UnaryOperator	*		13263	0					
ANR	13302	Identifier	b		13263	1					
ANR	13303	PrimaryExpression	' '		13263	1					
ANR	13304	EqualityExpression	* b == '\\t'		13263	1		==			
ANR	13305	UnaryOperationExpression	* b		13263	0					
ANR	13306	UnaryOperator	*		13263	0					
ANR	13307	Identifier	b		13263	1					
ANR	13308	PrimaryExpression	'\\t'		13263	1					
ANR	13309	CompoundStatement		9:1:206:206	13263	1					
ANR	13310	WhileStatement	while ( blen && ( * b == ' ' || * b == '\\t' ) )		13263	0					
ANR	13311	Condition	blen && ( * b == ' ' || * b == '\\t' )	1750:10:47268:47300	13263	0	True				
ANR	13312	AndExpression	blen && ( * b == ' ' || * b == '\\t' )		13263	0		&&			
ANR	13313	Identifier	blen		13263	0					
ANR	13314	OrExpression	* b == ' ' || * b == '\\t'		13263	1		||			
ANR	13315	EqualityExpression	* b == ' '		13263	0		==			
ANR	13316	UnaryOperationExpression	* b		13263	0					
ANR	13317	UnaryOperator	*		13263	0					
ANR	13318	Identifier	b		13263	1					
ANR	13319	PrimaryExpression	' '		13263	1					
ANR	13320	EqualityExpression	* b == '\\t'		13263	1		==			
ANR	13321	UnaryOperationExpression	* b		13263	0					
ANR	13322	UnaryOperator	*		13263	0					
ANR	13323	Identifier	b		13263	1					
ANR	13324	PrimaryExpression	'\\t'		13263	1					
ANR	13325	ExpressionStatement	"b ++ , blen --"	1751:5:47308:47319	13263	1	True				
ANR	13326	Expression	"b ++ , blen --"		13263	0					
ANR	13327	PostIncDecOperationExpression	b ++		13263	0					
ANR	13328	Identifier	b		13263	0					
ANR	13329	IncDec	++		13263	1					
ANR	13330	PostIncDecOperationExpression	blen --		13263	1					
ANR	13331	Identifier	blen		13263	0					
ANR	13332	IncDec	--		13263	1					
ANR	13333	IfStatement	if ( alen )		13263	1					
ANR	13334	Condition	alen	1752:7:47328:47331	13263	0	True				
ANR	13335	Identifier	alen		13263	0					
ANR	13336	CompoundStatement		13:5:289:289	13263	1					
ANR	13337	IfStatement	if ( ! ( * a == ' ' || * a == '\\t' ) )		13263	0					
ANR	13338	Condition	! ( * a == ' ' || * a == '\\t' )	1754:11:47352:47377	13263	0	True				
ANR	13339	UnaryOperationExpression	! ( * a == ' ' || * a == '\\t' )		13263	0					
ANR	13340	UnaryOperator	!		13263	0					
ANR	13341	OrExpression	* a == ' ' || * a == '\\t'		13263	1		||			
ANR	13342	EqualityExpression	* a == ' '		13263	0		==			
ANR	13343	UnaryOperationExpression	* a		13263	0					
ANR	13344	UnaryOperator	*		13263	0					
ANR	13345	Identifier	a		13263	1					
ANR	13346	PrimaryExpression	' '		13263	1					
ANR	13347	EqualityExpression	* a == '\\t'		13263	1		==			
ANR	13348	UnaryOperationExpression	* a		13263	0					
ANR	13349	UnaryOperator	*		13263	0					
ANR	13350	Identifier	a		13263	1					
ANR	13351	PrimaryExpression	'\\t'		13263	1					
ANR	13352	ReturnStatement	return false ;	1755:2:47382:47394	13263	1	True				
ANR	13353	Identifier	false		13263	0					
ANR	13354	DoStatement	do		13263	1					
ANR	13355	ExpressionStatement	"a ++ , alen --"	1756:10:47406:47417	13263	0	True				
ANR	13356	Expression	"a ++ , alen --"		13263	0					
ANR	13357	PostIncDecOperationExpression	a ++		13263	0					
ANR	13358	Identifier	a		13263	0					
ANR	13359	IncDec	++		13263	1					
ANR	13360	PostIncDecOperationExpression	alen --		13263	1					
ANR	13361	Identifier	alen		13263	0					
ANR	13362	IncDec	--		13263	1					
ANR	13363	Condition	alen && ( * a == ' ' || * a == '\\t' )	1757:14:47433:47465	13263	1	True				
ANR	13364	AndExpression	alen && ( * a == ' ' || * a == '\\t' )		13263	0		&&			
ANR	13365	Identifier	alen		13263	0					
ANR	13366	OrExpression	* a == ' ' || * a == '\\t'		13263	1		||			
ANR	13367	EqualityExpression	* a == ' '		13263	0		==			
ANR	13368	UnaryOperationExpression	* a		13263	0					
ANR	13369	UnaryOperator	*		13263	0					
ANR	13370	Identifier	a		13263	1					
ANR	13371	PrimaryExpression	' '		13263	1					
ANR	13372	EqualityExpression	* a == '\\t'		13263	1		==			
ANR	13373	UnaryOperationExpression	* a		13263	0					
ANR	13374	UnaryOperator	*		13263	0					
ANR	13375	Identifier	a		13263	1					
ANR	13376	PrimaryExpression	'\\t'		13263	1					
ANR	13377	IfStatement	if ( ! alen || ! blen )		13263	2					
ANR	13378	Condition	! alen || ! blen	1759:7:47483:47496	13263	0	True				
ANR	13379	OrExpression	! alen || ! blen		13263	0		||			
ANR	13380	UnaryOperationExpression	! alen		13263	0					
ANR	13381	UnaryOperator	!		13263	0					
ANR	13382	Identifier	alen		13263	1					
ANR	13383	UnaryOperationExpression	! blen		13263	1					
ANR	13384	UnaryOperator	!		13263	0					
ANR	13385	Identifier	blen		13263	1					
ANR	13386	ReturnStatement	return alen == blen ;	1760:5:47504:47523	13263	1	True				
ANR	13387	EqualityExpression	alen == blen		13263	0		==			
ANR	13388	Identifier	alen		13263	0					
ANR	13389	Identifier	blen		13263	1					
ANR	13390	ElseStatement	else		13263	0					
ANR	13391	IfStatement	if ( ! alen || * a ++ != * b ++ )		13263	0					
ANR	13392	Condition	! alen || * a ++ != * b ++	1762:15:47543:47563	13263	0	True				
ANR	13393	OrExpression	! alen || * a ++ != * b ++		13263	0		||			
ANR	13394	UnaryOperationExpression	! alen		13263	0					
ANR	13395	UnaryOperator	!		13263	0					
ANR	13396	Identifier	alen		13263	1					
ANR	13397	EqualityExpression	* a ++ != * b ++		13263	1		!=			
ANR	13398	UnaryOperationExpression	* a ++		13263	0					
ANR	13399	UnaryOperator	*		13263	0					
ANR	13400	PostIncDecOperationExpression	a ++		13263	1					
ANR	13401	Identifier	a		13263	0					
ANR	13402	IncDec	++		13263	1					
ANR	13403	UnaryOperationExpression	* b ++		13263	1					
ANR	13404	UnaryOperator	*		13263	0					
ANR	13405	PostIncDecOperationExpression	b ++		13263	1					
ANR	13406	Identifier	b		13263	0					
ANR	13407	IncDec	++		13263	1					
ANR	13408	ReturnStatement	return false ;	1763:1:47567:47579	13263	1	True				
ANR	13409	Identifier	false		13263	0					
ANR	13410	ElseStatement	else		13263	0					
ANR	13411	ExpressionStatement	"alen -- , blen --"	1765:1:47593:47607	13263	0	True				
ANR	13412	Expression	"alen -- , blen --"		13263	0					
ANR	13413	PostIncDecOperationExpression	alen --		13263	0					
ANR	13414	Identifier	alen		13263	0					
ANR	13415	IncDec	--		13263	1					
ANR	13416	PostIncDecOperationExpression	blen --		13263	1					
ANR	13417	Identifier	blen		13263	0					
ANR	13418	IncDec	--		13263	1					
ANR	13419	ReturnType	bool		13263	1					
ANR	13420	Identifier	similar		13263	2					
ANR	13421	ParameterList	"char const * a , size_t alen , char const * b , size_t blen"		13263	3					
ANR	13422	Parameter	char const * a	1740:9:46993:47005	13263	0	True				
ANR	13423	ParameterType	char const *		13263	0					
ANR	13424	Identifier	a		13263	1					
ANR	13425	Parameter	size_t alen	1740:24:47008:47018	13263	1	True				
ANR	13426	ParameterType	size_t		13263	0					
ANR	13427	Identifier	alen		13263	1					
ANR	13428	Parameter	char const * b	1740:37:47021:47033	13263	2	True				
ANR	13429	ParameterType	char const *		13263	0					
ANR	13430	Identifier	b		13263	1					
ANR	13431	Parameter	size_t blen	1740:52:47036:47046	13263	3	True				
ANR	13432	ParameterType	size_t		13263	0					
ANR	13433	Identifier	blen		13263	1					
ANR	13434	CFGEntryNode	ENTRY		13263		True				
ANR	13435	CFGExitNode	EXIT		13263		True				
ANR	13436	InfiniteForNode	true		13263		True				
ANR	13437	Symbol	a		13263						
ANR	13438	Symbol	b		13263						
ANR	13439	Symbol	* blen		13263						
ANR	13440	Symbol	* alen		13263						
ANR	13441	Symbol	false		13263						
ANR	13442	Symbol	alen		13263						
ANR	13443	Symbol	* a		13263						
ANR	13444	Symbol	* b		13263						
ANR	13445	Symbol	blen		13263						
ANR	13446	Symbol	* a ++		13263						
ANR	13447	Symbol	* b ++		13263						
ANR	13448	ClassDef	file_to_delete	1771:0:47653:47724							
ANR	13449	DeclStmt									
ANR	13450	Decl							char	char *	name
ANR	13451	DeclStmt									
ANR	13452	Decl							struct stat	struct stat	st
ANR	13453	DeclStmt									
ANR	13454	Decl							bool	bool	backup
ANR	13455	DeclStmt									
ANR	13456	Decl							gl_list_t	gl_list_t	files_to_delete
ANR	13457	Function	init_files_to_delete	1779:0:47763:47888							
ANR	13458	FunctionDef	init_files_to_delete ()		13457	0					
ANR	13459	CompoundStatement		1781:0:47803:47888	13457	0					
ANR	13460	ExpressionStatement	"files_to_delete = gl_list_create_empty ( GL_LINKED_LIST , NULL , NULL , NULL , true )"	1782:2:47807:47886	13457	0	True				
ANR	13461	AssignmentExpression	"files_to_delete = gl_list_create_empty ( GL_LINKED_LIST , NULL , NULL , NULL , true )"		13457	0		=			
ANR	13462	Identifier	files_to_delete		13457	0					
ANR	13463	CallExpression	"gl_list_create_empty ( GL_LINKED_LIST , NULL , NULL , NULL , true )"		13457	1					
ANR	13464	Callee	gl_list_create_empty		13457	0					
ANR	13465	Identifier	gl_list_create_empty		13457	0					
ANR	13466	ArgumentList	GL_LINKED_LIST		13457	1					
ANR	13467	Argument	GL_LINKED_LIST		13457	0					
ANR	13468	Identifier	GL_LINKED_LIST		13457	0					
ANR	13469	Argument	NULL		13457	1					
ANR	13470	Identifier	NULL		13457	0					
ANR	13471	Argument	NULL		13457	2					
ANR	13472	Identifier	NULL		13457	0					
ANR	13473	Argument	NULL		13457	3					
ANR	13474	Identifier	NULL		13457	0					
ANR	13475	Argument	true		13457	4					
ANR	13476	Identifier	true		13457	0					
ANR	13477	ReturnType	static void		13457	1					
ANR	13478	Identifier	init_files_to_delete		13457	2					
ANR	13479	ParameterList			13457	3					
ANR	13480	CFGEntryNode	ENTRY		13457		True				
ANR	13481	CFGExitNode	EXIT		13457		True				
ANR	13482	Symbol	NULL		13457						
ANR	13483	Symbol	true		13457						
ANR	13484	Symbol	GL_LINKED_LIST		13457						
ANR	13485	Symbol	gl_list_create_empty		13457						
ANR	13486	Symbol	files_to_delete		13457						
ANR	13487	Function	delete_file_later	1785:0:47891:48438							
ANR	13488	FunctionDef	"delete_file_later (const char * name , const struct stat * st , bool backup)"		13487	0					
ANR	13489	CompoundStatement		1787:0:47976:48438	13487	0					
ANR	13490	IdentifierDeclStatement	struct file_to_delete * file_to_delete ;	1788:2:47980:48017	13487	0	True				
ANR	13491	IdentifierDecl	* file_to_delete		13487	0					
ANR	13492	IdentifierDeclType	struct file_to_delete *		13487	0					
ANR	13493	Identifier	file_to_delete		13487	1					
ANR	13494	IdentifierDeclStatement	struct stat st_tmp ;	1789:2:48021:48039	13487	1	True				
ANR	13495	IdentifierDecl	st_tmp		13487	0					
ANR	13496	IdentifierDeclType	struct stat		13487	0					
ANR	13497	Identifier	st_tmp		13487	1					
ANR	13498	IfStatement	if ( ! st )		13487	2					
ANR	13499	Condition	! st	1791:6:48048:48051	13487	0	True				
ANR	13500	UnaryOperationExpression	! st		13487	0					
ANR	13501	UnaryOperator	!		13487	0					
ANR	13502	Identifier	st		13487	1					
ANR	13503	CompoundStatement		6:4:81:81	13487	1					
ANR	13504	IfStatement	"if ( stat_file ( name , & st_tmp ) != 0 )"		13487	0					
ANR	13505	Condition	"stat_file ( name , & st_tmp ) != 0"	1793:10:48070:48099	13487	0	True				
ANR	13506	EqualityExpression	"stat_file ( name , & st_tmp ) != 0"		13487	0		!=			
ANR	13507	CallExpression	"stat_file ( name , & st_tmp )"		13487	0					
ANR	13508	Callee	stat_file		13487	0					
ANR	13509	Identifier	stat_file		13487	0					
ANR	13510	ArgumentList	name		13487	1					
ANR	13511	Argument	name		13487	0					
ANR	13512	Identifier	name		13487	0					
ANR	13513	Argument	& st_tmp		13487	1					
ANR	13514	UnaryOperationExpression	& st_tmp		13487	0					
ANR	13515	UnaryOperator	&		13487	0					
ANR	13516	Identifier	st_tmp		13487	1					
ANR	13517	PrimaryExpression	0		13487	1					
ANR	13518	ExpressionStatement	"pfatal ( ""Can't get file attributes of %s %s"" , ""file"" , name )"	1794:1:48103:48162	13487	1	True				
ANR	13519	CallExpression	"pfatal ( ""Can't get file attributes of %s %s"" , ""file"" , name )"		13487	0					
ANR	13520	Callee	pfatal		13487	0					
ANR	13521	Identifier	pfatal		13487	0					
ANR	13522	ArgumentList	"""Can't get file attributes of %s %s"""		13487	1					
ANR	13523	Argument	"""Can't get file attributes of %s %s"""		13487	0					
ANR	13524	PrimaryExpression	"""Can't get file attributes of %s %s"""		13487	0					
ANR	13525	Argument	"""file"""		13487	1					
ANR	13526	PrimaryExpression	"""file"""		13487	0					
ANR	13527	Argument	name		13487	2					
ANR	13528	Identifier	name		13487	0					
ANR	13529	ExpressionStatement	st = & st_tmp	1795:6:48170:48182	13487	1	True				
ANR	13530	AssignmentExpression	st = & st_tmp		13487	0		=			
ANR	13531	Identifier	st		13487	0					
ANR	13532	UnaryOperationExpression	& st_tmp		13487	1					
ANR	13533	UnaryOperator	&		13487	0					
ANR	13534	Identifier	st_tmp		13487	1					
ANR	13535	ExpressionStatement	file_to_delete = xmalloc ( sizeof * file_to_delete )	1797:2:48192:48241	13487	3	True				
ANR	13536	AssignmentExpression	file_to_delete = xmalloc ( sizeof * file_to_delete )		13487	0		=			
ANR	13537	Identifier	file_to_delete		13487	0					
ANR	13538	CallExpression	xmalloc ( sizeof * file_to_delete )		13487	1					
ANR	13539	Callee	xmalloc		13487	0					
ANR	13540	Identifier	xmalloc		13487	0					
ANR	13541	ArgumentList	sizeof * file_to_delete		13487	1					
ANR	13542	Argument	sizeof * file_to_delete		13487	0					
ANR	13543	SizeofExpression	sizeof * file_to_delete		13487	0					
ANR	13544	Sizeof	sizeof		13487	0					
ANR	13545	UnaryOperationExpression	* file_to_delete		13487	1					
ANR	13546	UnaryOperator	*		13487	0					
ANR	13547	Identifier	file_to_delete		13487	1					
ANR	13548	ExpressionStatement	file_to_delete -> name = xstrdup ( name )	1798:2:48245:48282	13487	4	True				
ANR	13549	AssignmentExpression	file_to_delete -> name = xstrdup ( name )		13487	0		=			
ANR	13550	PtrMemberAccess	file_to_delete -> name		13487	0					
ANR	13551	Identifier	file_to_delete		13487	0					
ANR	13552	Identifier	name		13487	1					
ANR	13553	CallExpression	xstrdup ( name )		13487	1					
ANR	13554	Callee	xstrdup		13487	0					
ANR	13555	Identifier	xstrdup		13487	0					
ANR	13556	ArgumentList	name		13487	1					
ANR	13557	Argument	name		13487	0					
ANR	13558	Identifier	name		13487	0					
ANR	13559	ExpressionStatement	file_to_delete -> st = * st	1799:2:48286:48310	13487	5	True				
ANR	13560	AssignmentExpression	file_to_delete -> st = * st		13487	0		=			
ANR	13561	PtrMemberAccess	file_to_delete -> st		13487	0					
ANR	13562	Identifier	file_to_delete		13487	0					
ANR	13563	Identifier	st		13487	1					
ANR	13564	UnaryOperationExpression	* st		13487	1					
ANR	13565	UnaryOperator	*		13487	0					
ANR	13566	Identifier	st		13487	1					
ANR	13567	ExpressionStatement	file_to_delete -> backup = backup	1800:2:48314:48345	13487	6	True				
ANR	13568	AssignmentExpression	file_to_delete -> backup = backup		13487	0		=			
ANR	13569	PtrMemberAccess	file_to_delete -> backup		13487	0					
ANR	13570	Identifier	file_to_delete		13487	0					
ANR	13571	Identifier	backup		13487	1					
ANR	13572	Identifier	backup		13487	1					
ANR	13573	ExpressionStatement	"gl_list_add_last ( files_to_delete , file_to_delete )"	1801:2:48349:48399	13487	7	True				
ANR	13574	CallExpression	"gl_list_add_last ( files_to_delete , file_to_delete )"		13487	0					
ANR	13575	Callee	gl_list_add_last		13487	0					
ANR	13576	Identifier	gl_list_add_last		13487	0					
ANR	13577	ArgumentList	files_to_delete		13487	1					
ANR	13578	Argument	files_to_delete		13487	0					
ANR	13579	Identifier	files_to_delete		13487	0					
ANR	13580	Argument	file_to_delete		13487	1					
ANR	13581	Identifier	file_to_delete		13487	0					
ANR	13582	ExpressionStatement	"insert_file_id ( st , DELETE_LATER )"	1802:2:48403:48436	13487	8	True				
ANR	13583	CallExpression	"insert_file_id ( st , DELETE_LATER )"		13487	0					
ANR	13584	Callee	insert_file_id		13487	0					
ANR	13585	Identifier	insert_file_id		13487	0					
ANR	13586	ArgumentList	st		13487	1					
ANR	13587	Argument	st		13487	0					
ANR	13588	Identifier	st		13487	0					
ANR	13589	Argument	DELETE_LATER		13487	1					
ANR	13590	Identifier	DELETE_LATER		13487	0					
ANR	13591	ReturnType	static void		13487	1					
ANR	13592	Identifier	delete_file_later		13487	2					
ANR	13593	ParameterList	"const char * name , const struct stat * st , bool backup"		13487	3					
ANR	13594	Parameter	const char * name	1786:19:47922:47937	13487	0	True				
ANR	13595	ParameterType	const char *		13487	0					
ANR	13596	Identifier	name		13487	1					
ANR	13597	Parameter	const struct stat * st	1786:37:47940:47960	13487	1	True				
ANR	13598	ParameterType	const struct stat *		13487	0					
ANR	13599	Identifier	st		13487	1					
ANR	13600	Parameter	bool backup	1786:60:47963:47973	13487	2	True				
ANR	13601	ParameterType	bool		13487	0					
ANR	13602	Identifier	backup		13487	1					
ANR	13603	CFGEntryNode	ENTRY		13487		True				
ANR	13604	CFGExitNode	EXIT		13487		True				
ANR	13605	Symbol	st		13487						
ANR	13606	Symbol	backup		13487						
ANR	13607	Symbol	* file_to_delete		13487						
ANR	13608	Symbol	* st		13487						
ANR	13609	Symbol	xstrdup		13487						
ANR	13610	Symbol	file_to_delete		13487						
ANR	13611	Symbol	file_to_delete -> backup		13487						
ANR	13612	Symbol	& st_tmp		13487						
ANR	13613	Symbol	file_to_delete -> st		13487						
ANR	13614	Symbol	st_tmp		13487						
ANR	13615	Symbol	xmalloc		13487						
ANR	13616	Symbol	file_to_delete -> name		13487						
ANR	13617	Symbol	DELETE_LATER		13487						
ANR	13618	Symbol	name		13487						
ANR	13619	Symbol	stat_file		13487						
ANR	13620	Symbol	files_to_delete		13487						
ANR	13621	Function	delete_files	1805:0:48441:49101							
ANR	13622	FunctionDef	delete_files ()		13621	0					
ANR	13623	CompoundStatement		1807:0:48473:49101	13621	0					
ANR	13624	IdentifierDeclStatement	gl_list_iterator_t iter ;	1808:2:48477:48500	13621	0	True				
ANR	13625	IdentifierDecl	iter		13621	0					
ANR	13626	IdentifierDeclType	gl_list_iterator_t		13621	0					
ANR	13627	Identifier	iter		13621	1					
ANR	13628	IdentifierDeclStatement	const void * elt ;	1809:2:48504:48519	13621	1	True				
ANR	13629	IdentifierDecl	* elt		13621	0					
ANR	13630	IdentifierDeclType	const void *		13621	0					
ANR	13631	Identifier	elt		13621	1					
ANR	13632	ExpressionStatement	iter = gl_list_iterator ( files_to_delete )	1811:2:48524:48565	13621	2	True				
ANR	13633	AssignmentExpression	iter = gl_list_iterator ( files_to_delete )		13621	0		=			
ANR	13634	Identifier	iter		13621	0					
ANR	13635	CallExpression	gl_list_iterator ( files_to_delete )		13621	1					
ANR	13636	Callee	gl_list_iterator		13621	0					
ANR	13637	Identifier	gl_list_iterator		13621	0					
ANR	13638	ArgumentList	files_to_delete		13621	1					
ANR	13639	Argument	files_to_delete		13621	0					
ANR	13640	Identifier	files_to_delete		13621	0					
ANR	13641	WhileStatement	"while ( gl_list_iterator_next ( & iter , & elt , NULL ) )"		13621	3					
ANR	13642	Condition	"gl_list_iterator_next ( & iter , & elt , NULL )"	1812:9:48576:48616	13621	0	True				
ANR	13643	CallExpression	"gl_list_iterator_next ( & iter , & elt , NULL )"		13621	0					
ANR	13644	Callee	gl_list_iterator_next		13621	0					
ANR	13645	Identifier	gl_list_iterator_next		13621	0					
ANR	13646	ArgumentList	& iter		13621	1					
ANR	13647	Argument	& iter		13621	0					
ANR	13648	UnaryOperationExpression	& iter		13621	0					
ANR	13649	UnaryOperator	&		13621	0					
ANR	13650	Identifier	iter		13621	1					
ANR	13651	Argument	& elt		13621	1					
ANR	13652	UnaryOperationExpression	& elt		13621	0					
ANR	13653	UnaryOperator	&		13621	0					
ANR	13654	Identifier	elt		13621	1					
ANR	13655	Argument	NULL		13621	2					
ANR	13656	Identifier	NULL		13621	0					
ANR	13657	CompoundStatement		8:6:157:206	13621	1					
ANR	13658	IdentifierDeclStatement	const struct file_to_delete * file_to_delete = elt ;	1814:6:48631:48680	13621	0	True				
ANR	13659	IdentifierDecl	* file_to_delete = elt		13621	0					
ANR	13660	IdentifierDeclType	const struct file_to_delete *		13621	0					
ANR	13661	Identifier	file_to_delete		13621	1					
ANR	13662	AssignmentExpression	* file_to_delete = elt		13621	2		=			
ANR	13663	Identifier	elt		13621	0					
ANR	13664	Identifier	elt		13621	1					
ANR	13665	IfStatement	if ( lookup_file_id ( & file_to_delete -> st ) == DELETE_LATER )		13621	1					
ANR	13666	Condition	lookup_file_id ( & file_to_delete -> st ) == DELETE_LATER	1816:10:48693:48744	13621	0	True				
ANR	13667	EqualityExpression	lookup_file_id ( & file_to_delete -> st ) == DELETE_LATER		13621	0		==			
ANR	13668	CallExpression	lookup_file_id ( & file_to_delete -> st )		13621	0					
ANR	13669	Callee	lookup_file_id		13621	0					
ANR	13670	Identifier	lookup_file_id		13621	0					
ANR	13671	ArgumentList	& file_to_delete -> st		13621	1					
ANR	13672	Argument	& file_to_delete -> st		13621	0					
ANR	13673	UnaryOperationExpression	& file_to_delete -> st		13621	0					
ANR	13674	UnaryOperator	&		13621	0					
ANR	13675	PtrMemberAccess	file_to_delete -> st		13621	1					
ANR	13676	Identifier	file_to_delete		13621	0					
ANR	13677	Identifier	st		13621	1					
ANR	13678	Identifier	DELETE_LATER		13621	1					
ANR	13679	CompoundStatement		12:3:279:319	13621	1					
ANR	13680	IdentifierDeclStatement	mode_t mode = file_to_delete -> st . st_mode ;	1818:3:48753:48793	13621	0	True				
ANR	13681	IdentifierDecl	mode = file_to_delete -> st . st_mode		13621	0					
ANR	13682	IdentifierDeclType	mode_t		13621	0					
ANR	13683	Identifier	mode		13621	1					
ANR	13684	AssignmentExpression	mode = file_to_delete -> st . st_mode		13621	2		=			
ANR	13685	Identifier	mode		13621	0					
ANR	13686	MemberAccess	file_to_delete -> st . st_mode		13621	1					
ANR	13687	PtrMemberAccess	file_to_delete -> st		13621	0					
ANR	13688	Identifier	file_to_delete		13621	0					
ANR	13689	Identifier	st		13621	1					
ANR	13690	Identifier	st_mode		13621	1					
ANR	13691	IfStatement	if ( verbosity == VERBOSE )		13621	1					
ANR	13692	Condition	verbosity == VERBOSE	1820:7:48803:48822	13621	0	True				
ANR	13693	EqualityExpression	verbosity == VERBOSE		13621	0		==			
ANR	13694	Identifier	verbosity		13621	0					
ANR	13695	Identifier	VERBOSE		13621	1					
ANR	13696	ExpressionStatement	"say ( ""Removing %s %s\\n"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( file_to_delete -> name ) )"	1821:5:48830:48936	13621	1	True				
ANR	13697	CallExpression	"say ( ""Removing %s %s\\n"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( file_to_delete -> name ) )"		13621	0					
ANR	13698	Callee	say		13621	0					
ANR	13699	Identifier	say		13621	0					
ANR	13700	ArgumentList	"""Removing %s %s\\n"""		13621	1					
ANR	13701	Argument	"""Removing %s %s\\n"""		13621	0					
ANR	13702	PrimaryExpression	"""Removing %s %s\\n"""		13621	0					
ANR	13703	Argument	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		13621	1					
ANR	13704	ConditionalExpression	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		13621	0					
ANR	13705	Condition	S_ISLNK ( mode )		13621	0					
ANR	13706	CallExpression	S_ISLNK ( mode )		13621	0					
ANR	13707	Callee	S_ISLNK		13621	0					
ANR	13708	Identifier	S_ISLNK		13621	0					
ANR	13709	ArgumentList	mode		13621	1					
ANR	13710	Argument	mode		13621	0					
ANR	13711	Identifier	mode		13621	0					
ANR	13712	PrimaryExpression	"""symbolic link"""		13621	1					
ANR	13713	PrimaryExpression	"""file"""		13621	2					
ANR	13714	Argument	quotearg ( file_to_delete -> name )		13621	2					
ANR	13715	CallExpression	quotearg ( file_to_delete -> name )		13621	0					
ANR	13716	Callee	quotearg		13621	0					
ANR	13717	Identifier	quotearg		13621	0					
ANR	13718	ArgumentList	file_to_delete -> name		13621	1					
ANR	13719	Argument	file_to_delete -> name		13621	0					
ANR	13720	PtrMemberAccess	file_to_delete -> name		13621	0					
ANR	13721	Identifier	file_to_delete		13621	0					
ANR	13722	Identifier	name		13621	1					
ANR	13723	ExpressionStatement	"move_file ( 0 , 0 , 0 , file_to_delete -> name , mode , file_to_delete -> backup )"	1824:3:48941:49019	13621	2	True				
ANR	13724	CallExpression	"move_file ( 0 , 0 , 0 , file_to_delete -> name , mode , file_to_delete -> backup )"		13621	0					
ANR	13725	Callee	move_file		13621	0					
ANR	13726	Identifier	move_file		13621	0					
ANR	13727	ArgumentList	0		13621	1					
ANR	13728	Argument	0		13621	0					
ANR	13729	PrimaryExpression	0		13621	0					
ANR	13730	Argument	0		13621	1					
ANR	13731	PrimaryExpression	0		13621	0					
ANR	13732	Argument	0		13621	2					
ANR	13733	PrimaryExpression	0		13621	0					
ANR	13734	Argument	file_to_delete -> name		13621	3					
ANR	13735	PtrMemberAccess	file_to_delete -> name		13621	0					
ANR	13736	Identifier	file_to_delete		13621	0					
ANR	13737	Identifier	name		13621	1					
ANR	13738	Argument	mode		13621	4					
ANR	13739	Identifier	mode		13621	0					
ANR	13740	Argument	file_to_delete -> backup		13621	5					
ANR	13741	PtrMemberAccess	file_to_delete -> backup		13621	0					
ANR	13742	Identifier	file_to_delete		13621	0					
ANR	13743	Identifier	backup		13621	1					
ANR	13744	ExpressionStatement	removedirs ( file_to_delete -> name )	1826:3:49024:49057	13621	3	True				
ANR	13745	CallExpression	removedirs ( file_to_delete -> name )		13621	0					
ANR	13746	Callee	removedirs		13621	0					
ANR	13747	Identifier	removedirs		13621	0					
ANR	13748	ArgumentList	file_to_delete -> name		13621	1					
ANR	13749	Argument	file_to_delete -> name		13621	0					
ANR	13750	PtrMemberAccess	file_to_delete -> name		13621	0					
ANR	13751	Identifier	file_to_delete		13621	0					
ANR	13752	Identifier	name		13621	1					
ANR	13753	ExpressionStatement	gl_list_iterator_free ( & iter )	1829:2:49070:49099	13621	4	True				
ANR	13754	CallExpression	gl_list_iterator_free ( & iter )		13621	0					
ANR	13755	Callee	gl_list_iterator_free		13621	0					
ANR	13756	Identifier	gl_list_iterator_free		13621	0					
ANR	13757	ArgumentList	& iter		13621	1					
ANR	13758	Argument	& iter		13621	0					
ANR	13759	UnaryOperationExpression	& iter		13621	0					
ANR	13760	UnaryOperator	&		13621	0					
ANR	13761	Identifier	iter		13621	1					
ANR	13762	ReturnType	static void		13621	1					
ANR	13763	Identifier	delete_files		13621	2					
ANR	13764	ParameterList			13621	3					
ANR	13765	CFGEntryNode	ENTRY		13621		True				
ANR	13766	CFGExitNode	EXIT		13621		True				
ANR	13767	Symbol	lookup_file_id		13621						
ANR	13768	Symbol	gl_list_iterator		13621						
ANR	13769	Symbol	* file_to_delete		13621						
ANR	13770	Symbol	NULL		13621						
ANR	13771	Symbol	quotearg		13621						
ANR	13772	Symbol	file_to_delete -> st . st_mode		13621						
ANR	13773	Symbol	file_to_delete		13621						
ANR	13774	Symbol	file_to_delete -> backup		13621						
ANR	13775	Symbol	iter		13621						
ANR	13776	Symbol	elt		13621						
ANR	13777	Symbol	mode		13621						
ANR	13778	Symbol	& file_to_delete -> st		13621						
ANR	13779	Symbol	gl_list_iterator_next		13621						
ANR	13780	Symbol	file_to_delete -> st		13621						
ANR	13781	Symbol	& elt		13621						
ANR	13782	Symbol	file_to_delete -> name		13621						
ANR	13783	Symbol	DELETE_LATER		13621						
ANR	13784	Symbol	VERBOSE		13621						
ANR	13785	Symbol	files_to_delete		13621						
ANR	13786	Symbol	& iter		13621						
ANR	13787	Symbol	verbosity		13621						
ANR	13788	Symbol	S_ISLNK		13621						
ANR	13789	ClassDef	file_to_output	1834:0:49162:49265							
ANR	13790	DeclStmt									
ANR	13791	Decl							char	char *	from
ANR	13792	DeclStmt									
ANR	13793	Decl							struct stat	struct stat	from_st
ANR	13794	DeclStmt									
ANR	13795	Decl							char	char *	to
ANR	13796	DeclStmt									
ANR	13797	Decl							mode_t	mode_t	mode
ANR	13798	DeclStmt									
ANR	13799	Decl							bool	bool	backup
ANR	13800	DeclStmt									
ANR	13801	Decl							gl_list_t	gl_list_t	files_to_output
ANR	13802	Function	output_file_later	1844:0:49304:49858							
ANR	13803	FunctionDef	"output_file_later (char const * from , bool * from_needs_removal , const struct stat * from_st , char const * to , mode_t mode , bool backup)"		13802	0					
ANR	13804	CompoundStatement		1847:0:49454:49858	13802	0					
ANR	13805	IdentifierDeclStatement	struct file_to_output * file_to_output ;	1848:2:49458:49495	13802	0	True				
ANR	13806	IdentifierDecl	* file_to_output		13802	0					
ANR	13807	IdentifierDeclType	struct file_to_output *		13802	0					
ANR	13808	Identifier	file_to_output		13802	1					
ANR	13809	ExpressionStatement	file_to_output = xmalloc ( sizeof * file_to_output )	1850:2:49500:49549	13802	1	True				
ANR	13810	AssignmentExpression	file_to_output = xmalloc ( sizeof * file_to_output )		13802	0		=			
ANR	13811	Identifier	file_to_output		13802	0					
ANR	13812	CallExpression	xmalloc ( sizeof * file_to_output )		13802	1					
ANR	13813	Callee	xmalloc		13802	0					
ANR	13814	Identifier	xmalloc		13802	0					
ANR	13815	ArgumentList	sizeof * file_to_output		13802	1					
ANR	13816	Argument	sizeof * file_to_output		13802	0					
ANR	13817	SizeofExpression	sizeof * file_to_output		13802	0					
ANR	13818	Sizeof	sizeof		13802	0					
ANR	13819	UnaryOperationExpression	* file_to_output		13802	1					
ANR	13820	UnaryOperator	*		13802	0					
ANR	13821	Identifier	file_to_output		13802	1					
ANR	13822	ExpressionStatement	file_to_output -> from = xstrdup ( from )	1851:2:49553:49590	13802	2	True				
ANR	13823	AssignmentExpression	file_to_output -> from = xstrdup ( from )		13802	0		=			
ANR	13824	PtrMemberAccess	file_to_output -> from		13802	0					
ANR	13825	Identifier	file_to_output		13802	0					
ANR	13826	Identifier	from		13802	1					
ANR	13827	CallExpression	xstrdup ( from )		13802	1					
ANR	13828	Callee	xstrdup		13802	0					
ANR	13829	Identifier	xstrdup		13802	0					
ANR	13830	ArgumentList	from		13802	1					
ANR	13831	Argument	from		13802	0					
ANR	13832	Identifier	from		13802	0					
ANR	13833	ExpressionStatement	file_to_output -> from_st = * from_st	1852:2:49594:49628	13802	3	True				
ANR	13834	AssignmentExpression	file_to_output -> from_st = * from_st		13802	0		=			
ANR	13835	PtrMemberAccess	file_to_output -> from_st		13802	0					
ANR	13836	Identifier	file_to_output		13802	0					
ANR	13837	Identifier	from_st		13802	1					
ANR	13838	UnaryOperationExpression	* from_st		13802	1					
ANR	13839	UnaryOperator	*		13802	0					
ANR	13840	Identifier	from_st		13802	1					
ANR	13841	ExpressionStatement	file_to_output -> to = to ? xstrdup ( to ) : NULL	1853:2:49632:49677	13802	4	True				
ANR	13842	AssignmentExpression	file_to_output -> to = to ? xstrdup ( to ) : NULL		13802	0		=			
ANR	13843	PtrMemberAccess	file_to_output -> to		13802	0					
ANR	13844	Identifier	file_to_output		13802	0					
ANR	13845	Identifier	to		13802	1					
ANR	13846	ConditionalExpression	to ? xstrdup ( to ) : NULL		13802	1					
ANR	13847	Condition	to		13802	0					
ANR	13848	Identifier	to		13802	0					
ANR	13849	CallExpression	xstrdup ( to )		13802	1					
ANR	13850	Callee	xstrdup		13802	0					
ANR	13851	Identifier	xstrdup		13802	0					
ANR	13852	ArgumentList	to		13802	1					
ANR	13853	Argument	to		13802	0					
ANR	13854	Identifier	to		13802	0					
ANR	13855	Identifier	NULL		13802	2					
ANR	13856	ExpressionStatement	file_to_output -> mode = mode	1854:2:49681:49708	13802	5	True				
ANR	13857	AssignmentExpression	file_to_output -> mode = mode		13802	0		=			
ANR	13858	PtrMemberAccess	file_to_output -> mode		13802	0					
ANR	13859	Identifier	file_to_output		13802	0					
ANR	13860	Identifier	mode		13802	1					
ANR	13861	Identifier	mode		13802	1					
ANR	13862	ExpressionStatement	file_to_output -> backup = backup	1855:2:49712:49743	13802	6	True				
ANR	13863	AssignmentExpression	file_to_output -> backup = backup		13802	0		=			
ANR	13864	PtrMemberAccess	file_to_output -> backup		13802	0					
ANR	13865	Identifier	file_to_output		13802	0					
ANR	13866	Identifier	backup		13802	1					
ANR	13867	Identifier	backup		13802	1					
ANR	13868	ExpressionStatement	"gl_list_add_last ( files_to_output , file_to_output )"	1856:2:49747:49797	13802	7	True				
ANR	13869	CallExpression	"gl_list_add_last ( files_to_output , file_to_output )"		13802	0					
ANR	13870	Callee	gl_list_add_last		13802	0					
ANR	13871	Identifier	gl_list_add_last		13802	0					
ANR	13872	ArgumentList	files_to_output		13802	1					
ANR	13873	Argument	files_to_output		13802	0					
ANR	13874	Identifier	files_to_output		13802	0					
ANR	13875	Argument	file_to_output		13802	1					
ANR	13876	Identifier	file_to_output		13802	0					
ANR	13877	IfStatement	if ( from_needs_removal )		13802	8					
ANR	13878	Condition	from_needs_removal	1857:6:49805:49822	13802	0	True				
ANR	13879	Identifier	from_needs_removal		13802	0					
ANR	13880	ExpressionStatement	* from_needs_removal = false	1858:4:49829:49856	13802	1	True				
ANR	13881	AssignmentExpression	* from_needs_removal = false		13802	0		=			
ANR	13882	UnaryOperationExpression	* from_needs_removal		13802	0					
ANR	13883	UnaryOperator	*		13802	0					
ANR	13884	Identifier	from_needs_removal		13802	1					
ANR	13885	Identifier	false		13802	1					
ANR	13886	ReturnType	static void		13802	1					
ANR	13887	Identifier	output_file_later		13802	2					
ANR	13888	ParameterList	"char const * from , bool * from_needs_removal , const struct stat * from_st , char const * to , mode_t mode , bool backup"		13802	3					
ANR	13889	Parameter	char const * from	1845:19:49335:49350	13802	0	True				
ANR	13890	ParameterType	char const *		13802	0					
ANR	13891	Identifier	from		13802	1					
ANR	13892	Parameter	bool * from_needs_removal	1845:37:49353:49376	13802	1	True				
ANR	13893	ParameterType	bool *		13802	0					
ANR	13894	Identifier	from_needs_removal		13802	1					
ANR	13895	Parameter	const struct stat * from_st	1845:63:49379:49404	13802	2	True				
ANR	13896	ParameterType	const struct stat *		13802	0					
ANR	13897	Identifier	from_st		13802	1					
ANR	13898	Parameter	char const * to	1846:5:49412:49425	13802	3	True				
ANR	13899	ParameterType	char const *		13802	0					
ANR	13900	Identifier	to		13802	1					
ANR	13901	Parameter	mode_t mode	1846:21:49428:49438	13802	4	True				
ANR	13902	ParameterType	mode_t		13802	0					
ANR	13903	Identifier	mode		13802	1					
ANR	13904	Parameter	bool backup	1846:34:49441:49451	13802	5	True				
ANR	13905	ParameterType	bool		13802	0					
ANR	13906	Identifier	backup		13802	1					
ANR	13907	CFGEntryNode	ENTRY		13802		True				
ANR	13908	CFGExitNode	EXIT		13802		True				
ANR	13909	Symbol	backup		13802						
ANR	13910	Symbol	NULL		13802						
ANR	13911	Symbol	from_st		13802						
ANR	13912	Symbol	xstrdup		13802						
ANR	13913	Symbol	false		13802						
ANR	13914	Symbol	file_to_output -> backup		13802						
ANR	13915	Symbol	file_to_output -> mode		13802						
ANR	13916	Symbol	file_to_output		13802						
ANR	13917	Symbol	* from_needs_removal		13802						
ANR	13918	Symbol	file_to_output -> from		13802						
ANR	13919	Symbol	mode		13802						
ANR	13920	Symbol	* file_to_output		13802						
ANR	13921	Symbol	* from_st		13802						
ANR	13922	Symbol	xmalloc		13802						
ANR	13923	Symbol	from_needs_removal		13802						
ANR	13924	Symbol	files_to_output		13802						
ANR	13925	Symbol	from		13802						
ANR	13926	Symbol	file_to_output -> from_st		13802						
ANR	13927	Symbol	to		13802						
ANR	13928	Symbol	file_to_output -> to		13802						
ANR	13929	Function	output_file_now	1861:0:49861:50227							
ANR	13930	FunctionDef	"output_file_now (char const * from , bool * from_needs_removal , const struct stat * from_st , char const * to , mode_t mode , bool backup)"		13929	0					
ANR	13931	CompoundStatement		1865:0:50010:50227	13929	0					
ANR	13932	IfStatement	if ( to == NULL )		13929	0					
ANR	13933	Condition	to == NULL	1866:6:50018:50027	13929	0	True				
ANR	13934	EqualityExpression	to == NULL		13929	0		==			
ANR	13935	Identifier	to		13929	0					
ANR	13936	Identifier	NULL		13929	1					
ANR	13937	CompoundStatement		3:4:23:23	13929	1					
ANR	13938	IfStatement	if ( backup )		13929	0					
ANR	13939	Condition	backup	1868:10:50046:50051	13929	0	True				
ANR	13940	Identifier	backup		13929	0					
ANR	13941	ExpressionStatement	"create_backup ( from , from_st , true )"	1869:1:50055:50090	13929	1	True				
ANR	13942	CallExpression	"create_backup ( from , from_st , true )"		13929	0					
ANR	13943	Callee	create_backup		13929	0					
ANR	13944	Identifier	create_backup		13929	0					
ANR	13945	ArgumentList	from		13929	1					
ANR	13946	Argument	from		13929	0					
ANR	13947	Identifier	from		13929	0					
ANR	13948	Argument	from_st		13929	1					
ANR	13949	Identifier	from_st		13929	0					
ANR	13950	Argument	true		13929	2					
ANR	13951	Identifier	true		13929	0					
ANR	13952	ElseStatement	else		13929	0					
ANR	13953	CompoundStatement		8:4:98:98	13929	0					
ANR	13954	ExpressionStatement	assert ( from_st -> st_size != - 1 )	1873:6:50117:50148	13929	0	True				
ANR	13955	CallExpression	assert ( from_st -> st_size != - 1 )		13929	0					
ANR	13956	Callee	assert		13929	0					
ANR	13957	Identifier	assert		13929	0					
ANR	13958	ArgumentList	from_st -> st_size != - 1		13929	1					
ANR	13959	Argument	from_st -> st_size != - 1		13929	0					
ANR	13960	EqualityExpression	from_st -> st_size != - 1		13929	0		!=			
ANR	13961	PtrMemberAccess	from_st -> st_size		13929	0					
ANR	13962	Identifier	from_st		13929	0					
ANR	13963	Identifier	st_size		13929	1					
ANR	13964	UnaryOperationExpression	- 1		13929	1					
ANR	13965	UnaryOperator	-		13929	0					
ANR	13966	PrimaryExpression	1		13929	1					
ANR	13967	ExpressionStatement	"move_file ( from , from_needs_removal , from_st , to , mode , backup )"	1874:6:50156:50219	13929	1	True				
ANR	13968	CallExpression	"move_file ( from , from_needs_removal , from_st , to , mode , backup )"		13929	0					
ANR	13969	Callee	move_file		13929	0					
ANR	13970	Identifier	move_file		13929	0					
ANR	13971	ArgumentList	from		13929	1					
ANR	13972	Argument	from		13929	0					
ANR	13973	Identifier	from		13929	0					
ANR	13974	Argument	from_needs_removal		13929	1					
ANR	13975	Identifier	from_needs_removal		13929	0					
ANR	13976	Argument	from_st		13929	2					
ANR	13977	Identifier	from_st		13929	0					
ANR	13978	Argument	to		13929	3					
ANR	13979	Identifier	to		13929	0					
ANR	13980	Argument	mode		13929	4					
ANR	13981	Identifier	mode		13929	0					
ANR	13982	Argument	backup		13929	5					
ANR	13983	Identifier	backup		13929	0					
ANR	13984	ReturnType	static void		13929	1					
ANR	13985	Identifier	output_file_now		13929	2					
ANR	13986	ParameterList	"char const * from , bool * from_needs_removal , const struct stat * from_st , char const * to , mode_t mode , bool backup"		13929	3					
ANR	13987	Parameter	char const * from	1862:17:49890:49905	13929	0	True				
ANR	13988	ParameterType	char const *		13929	0					
ANR	13989	Identifier	from		13929	1					
ANR	13990	Parameter	bool * from_needs_removal	1862:35:49908:49931	13929	1	True				
ANR	13991	ParameterType	bool *		13929	0					
ANR	13992	Identifier	from_needs_removal		13929	1					
ANR	13993	Parameter	const struct stat * from_st	1863:3:49937:49962	13929	2	True				
ANR	13994	ParameterType	const struct stat *		13929	0					
ANR	13995	Identifier	from_st		13929	1					
ANR	13996	Parameter	char const * to	1863:31:49965:49978	13929	3	True				
ANR	13997	ParameterType	char const *		13929	0					
ANR	13998	Identifier	to		13929	1					
ANR	13999	Parameter	mode_t mode	1864:3:49984:49994	13929	4	True				
ANR	14000	ParameterType	mode_t		13929	0					
ANR	14001	Identifier	mode		13929	1					
ANR	14002	Parameter	bool backup	1864:16:49997:50007	13929	5	True				
ANR	14003	ParameterType	bool		13929	0					
ANR	14004	Identifier	backup		13929	1					
ANR	14005	CFGEntryNode	ENTRY		13929		True				
ANR	14006	CFGExitNode	EXIT		13929		True				
ANR	14007	Symbol	mode		13929						
ANR	14008	Symbol	backup		13929						
ANR	14009	Symbol	NULL		13929						
ANR	14010	Symbol	* from_st		13929						
ANR	14011	Symbol	from_st		13929						
ANR	14012	Symbol	from_needs_removal		13929						
ANR	14013	Symbol	true		13929						
ANR	14014	Symbol	from		13929						
ANR	14015	Symbol	from_st -> st_size		13929						
ANR	14016	Symbol	to		13929						
ANR	14017	Function	output_file	1878:0:50230:51684							
ANR	14018	FunctionDef	"output_file (char const * from , bool * from_needs_removal , const struct stat * from_st , char const * to , const struct stat * to_st , mode_t mode , bool backup)"		14017	0					
ANR	14019	CompoundStatement		1882:0:50407:51684	14017	0					
ANR	14020	IfStatement	if ( from == NULL )		14017	0					
ANR	14021	Condition	from == NULL	1883:6:50415:50426	14017	0	True				
ANR	14022	EqualityExpression	from == NULL		14017	0		==			
ANR	14023	Identifier	from		14017	0					
ANR	14024	Identifier	NULL		14017	1					
ANR	14025	CompoundStatement		3:4:25:25	14017	1					
ANR	14026	ExpressionStatement	"delete_file_later ( to , to_st , backup )"	1889:6:50662:50699	14017	0	True				
ANR	14027	CallExpression	"delete_file_later ( to , to_st , backup )"		14017	0					
ANR	14028	Callee	delete_file_later		14017	0					
ANR	14029	Identifier	delete_file_later		14017	0					
ANR	14030	ArgumentList	to		14017	1					
ANR	14031	Argument	to		14017	0					
ANR	14032	Identifier	to		14017	0					
ANR	14033	Argument	to_st		14017	1					
ANR	14034	Identifier	to_st		14017	0					
ANR	14035	Argument	backup		14017	2					
ANR	14036	Identifier	backup		14017	0					
ANR	14037	ElseStatement	else		14017	0					
ANR	14038	IfStatement	if ( pch_git_diff ( ) && pch_says_nonexistent ( reverse ) != 2 )		14017	0					
ANR	14039	Condition	pch_git_diff ( ) && pch_says_nonexistent ( reverse ) != 2	1891:11:50718:50771	14017	0	True				
ANR	14040	AndExpression	pch_git_diff ( ) && pch_says_nonexistent ( reverse ) != 2		14017	0		&&			
ANR	14041	CallExpression	pch_git_diff ( )		14017	0					
ANR	14042	Callee	pch_git_diff		14017	0					
ANR	14043	Identifier	pch_git_diff		14017	0					
ANR	14044	ArgumentList			14017	1					
ANR	14045	EqualityExpression	pch_says_nonexistent ( reverse ) != 2		14017	1		!=			
ANR	14046	CallExpression	pch_says_nonexistent ( reverse )		14017	0					
ANR	14047	Callee	pch_says_nonexistent		14017	0					
ANR	14048	Identifier	pch_says_nonexistent		14017	0					
ANR	14049	ArgumentList	reverse		14017	1					
ANR	14050	Argument	reverse		14017	0					
ANR	14051	Identifier	reverse		14017	0					
ANR	14052	PrimaryExpression	2		14017	1					
ANR	14053	CompoundStatement		11:4:370:370	14017	1					
ANR	14054	ExpressionStatement	"output_file_later ( from , from_needs_removal , from_st , to , mode , backup )"	1907:6:51523:51594	14017	0	True				
ANR	14055	CallExpression	"output_file_later ( from , from_needs_removal , from_st , to , mode , backup )"		14017	0					
ANR	14056	Callee	output_file_later		14017	0					
ANR	14057	Identifier	output_file_later		14017	0					
ANR	14058	ArgumentList	from		14017	1					
ANR	14059	Argument	from		14017	0					
ANR	14060	Identifier	from		14017	0					
ANR	14061	Argument	from_needs_removal		14017	1					
ANR	14062	Identifier	from_needs_removal		14017	0					
ANR	14063	Argument	from_st		14017	2					
ANR	14064	Identifier	from_st		14017	0					
ANR	14065	Argument	to		14017	3					
ANR	14066	Identifier	to		14017	0					
ANR	14067	Argument	mode		14017	4					
ANR	14068	Identifier	mode		14017	0					
ANR	14069	Argument	backup		14017	5					
ANR	14070	Identifier	backup		14017	0					
ANR	14071	ElseStatement	else		14017	0					
ANR	14072	ExpressionStatement	"output_file_now ( from , from_needs_removal , from_st , to , mode , backup )"	1910:4:51613:51682	14017	0	True				
ANR	14073	CallExpression	"output_file_now ( from , from_needs_removal , from_st , to , mode , backup )"		14017	0					
ANR	14074	Callee	output_file_now		14017	0					
ANR	14075	Identifier	output_file_now		14017	0					
ANR	14076	ArgumentList	from		14017	1					
ANR	14077	Argument	from		14017	0					
ANR	14078	Identifier	from		14017	0					
ANR	14079	Argument	from_needs_removal		14017	1					
ANR	14080	Identifier	from_needs_removal		14017	0					
ANR	14081	Argument	from_st		14017	2					
ANR	14082	Identifier	from_st		14017	0					
ANR	14083	Argument	to		14017	3					
ANR	14084	Identifier	to		14017	0					
ANR	14085	Argument	mode		14017	4					
ANR	14086	Identifier	mode		14017	0					
ANR	14087	Argument	backup		14017	5					
ANR	14088	Identifier	backup		14017	0					
ANR	14089	ReturnType	static void		14017	1					
ANR	14090	Identifier	output_file		14017	2					
ANR	14091	ParameterList	"char const * from , bool * from_needs_removal , const struct stat * from_st , char const * to , const struct stat * to_st , mode_t mode , bool backup"		14017	3					
ANR	14092	Parameter	char const * from	1879:13:50255:50270	14017	0	True				
ANR	14093	ParameterType	char const *		14017	0					
ANR	14094	Identifier	from		14017	1					
ANR	14095	Parameter	bool * from_needs_removal	1879:31:50273:50296	14017	1	True				
ANR	14096	ParameterType	bool *		14017	0					
ANR	14097	Identifier	from_needs_removal		14017	1					
ANR	14098	Parameter	const struct stat * from_st	1880:6:50305:50330	14017	2	True				
ANR	14099	ParameterType	const struct stat *		14017	0					
ANR	14100	Identifier	from_st		14017	1					
ANR	14101	Parameter	char const * to	1880:34:50333:50346	14017	3	True				
ANR	14102	ParameterType	char const *		14017	0					
ANR	14103	Identifier	to		14017	1					
ANR	14104	Parameter	const struct stat * to_st	1881:6:50355:50378	14017	4	True				
ANR	14105	ParameterType	const struct stat *		14017	0					
ANR	14106	Identifier	to_st		14017	1					
ANR	14107	Parameter	mode_t mode	1881:32:50381:50391	14017	5	True				
ANR	14108	ParameterType	mode_t		14017	0					
ANR	14109	Identifier	mode		14017	1					
ANR	14110	Parameter	bool backup	1881:45:50394:50404	14017	6	True				
ANR	14111	ParameterType	bool		14017	0					
ANR	14112	Identifier	backup		14017	1					
ANR	14113	CFGEntryNode	ENTRY		14017		True				
ANR	14114	CFGExitNode	EXIT		14017		True				
ANR	14115	Symbol	mode		14017						
ANR	14116	Symbol	pch_says_nonexistent		14017						
ANR	14117	Symbol	backup		14017						
ANR	14118	Symbol	to_st		14017						
ANR	14119	Symbol	NULL		14017						
ANR	14120	Symbol	from_st		14017						
ANR	14121	Symbol	from_needs_removal		14017						
ANR	14122	Symbol	from		14017						
ANR	14123	Symbol	to		14017						
ANR	14124	Symbol	pch_git_diff		14017						
ANR	14125	Symbol	reverse		14017						
ANR	14126	Function	dispose_file_to_output	1913:0:51687:51856							
ANR	14127	FunctionDef	dispose_file_to_output (const void * elt)		14126	0					
ANR	14128	CompoundStatement		1915:0:51740:51856	14126	0					
ANR	14129	IdentifierDeclStatement	const struct file_to_output * file_to_output = elt ;	1916:2:51744:51793	14126	0	True				
ANR	14130	IdentifierDecl	* file_to_output = elt		14126	0					
ANR	14131	IdentifierDeclType	const struct file_to_output *		14126	0					
ANR	14132	Identifier	file_to_output		14126	1					
ANR	14133	AssignmentExpression	* file_to_output = elt		14126	2		=			
ANR	14134	Identifier	elt		14126	0					
ANR	14135	Identifier	elt		14126	1					
ANR	14136	ExpressionStatement	free ( file_to_output -> from )	1918:2:51798:51825	14126	1	True				
ANR	14137	CallExpression	free ( file_to_output -> from )		14126	0					
ANR	14138	Callee	free		14126	0					
ANR	14139	Identifier	free		14126	0					
ANR	14140	ArgumentList	file_to_output -> from		14126	1					
ANR	14141	Argument	file_to_output -> from		14126	0					
ANR	14142	PtrMemberAccess	file_to_output -> from		14126	0					
ANR	14143	Identifier	file_to_output		14126	0					
ANR	14144	Identifier	from		14126	1					
ANR	14145	ExpressionStatement	free ( file_to_output -> to )	1919:2:51829:51854	14126	2	True				
ANR	14146	CallExpression	free ( file_to_output -> to )		14126	0					
ANR	14147	Callee	free		14126	0					
ANR	14148	Identifier	free		14126	0					
ANR	14149	ArgumentList	file_to_output -> to		14126	1					
ANR	14150	Argument	file_to_output -> to		14126	0					
ANR	14151	PtrMemberAccess	file_to_output -> to		14126	0					
ANR	14152	Identifier	file_to_output		14126	0					
ANR	14153	Identifier	to		14126	1					
ANR	14154	ReturnType	static void		14126	1					
ANR	14155	Identifier	dispose_file_to_output		14126	2					
ANR	14156	ParameterList	const void * elt		14126	3					
ANR	14157	Parameter	const void * elt	1914:24:51723:51737	14126	0	True				
ANR	14158	ParameterType	const void *		14126	0					
ANR	14159	Identifier	elt		14126	1					
ANR	14160	CFGEntryNode	ENTRY		14126		True				
ANR	14161	CFGExitNode	EXIT		14126		True				
ANR	14162	Symbol	* file_to_output		14126						
ANR	14163	Symbol	file_to_output -> to		14126						
ANR	14164	Symbol	elt		14126						
ANR	14165	Symbol	file_to_output		14126						
ANR	14166	Symbol	file_to_output -> from		14126						
ANR	14167	Function	init_files_to_output	1922:0:51859:52009							
ANR	14168	FunctionDef	init_files_to_output ()		14167	0					
ANR	14169	CompoundStatement		1924:0:51899:52009	14167	0					
ANR	14170	ExpressionStatement	"files_to_output = gl_list_create_empty ( GL_LINKED_LIST , NULL , NULL , dispose_file_to_output , true )"	1925:2:51903:52007	14167	0	True				
ANR	14171	AssignmentExpression	"files_to_output = gl_list_create_empty ( GL_LINKED_LIST , NULL , NULL , dispose_file_to_output , true )"		14167	0		=			
ANR	14172	Identifier	files_to_output		14167	0					
ANR	14173	CallExpression	"gl_list_create_empty ( GL_LINKED_LIST , NULL , NULL , dispose_file_to_output , true )"		14167	1					
ANR	14174	Callee	gl_list_create_empty		14167	0					
ANR	14175	Identifier	gl_list_create_empty		14167	0					
ANR	14176	ArgumentList	GL_LINKED_LIST		14167	1					
ANR	14177	Argument	GL_LINKED_LIST		14167	0					
ANR	14178	Identifier	GL_LINKED_LIST		14167	0					
ANR	14179	Argument	NULL		14167	1					
ANR	14180	Identifier	NULL		14167	0					
ANR	14181	Argument	NULL		14167	2					
ANR	14182	Identifier	NULL		14167	0					
ANR	14183	Argument	dispose_file_to_output		14167	3					
ANR	14184	Identifier	dispose_file_to_output		14167	0					
ANR	14185	Argument	true		14167	4					
ANR	14186	Identifier	true		14167	0					
ANR	14187	ReturnType	static void		14167	1					
ANR	14188	Identifier	init_files_to_output		14167	2					
ANR	14189	ParameterList			14167	3					
ANR	14190	CFGEntryNode	ENTRY		14167		True				
ANR	14191	CFGExitNode	EXIT		14167		True				
ANR	14192	Symbol	NULL		14167						
ANR	14193	Symbol	true		14167						
ANR	14194	Symbol	files_to_output		14167						
ANR	14195	Symbol	GL_LINKED_LIST		14167						
ANR	14196	Symbol	gl_list_create_empty		14167						
ANR	14197	Symbol	dispose_file_to_output		14167						
ANR	14198	Function	gl_list_clear	1929:0:52012:52124							
ANR	14199	FunctionDef	gl_list_clear (gl_list_t list)		14198	0					
ANR	14200	CompoundStatement		1931:0:52055:52124	14198	0					
ANR	14201	WhileStatement	while ( gl_list_size ( list ) > 0 )		14198	0					
ANR	14202	Condition	gl_list_size ( list ) > 0	1932:9:52066:52088	14198	0	True				
ANR	14203	RelationalExpression	gl_list_size ( list ) > 0		14198	0		>			
ANR	14204	CallExpression	gl_list_size ( list )		14198	0					
ANR	14205	Callee	gl_list_size		14198	0					
ANR	14206	Identifier	gl_list_size		14198	0					
ANR	14207	ArgumentList	list		14198	1					
ANR	14208	Argument	list		14198	0					
ANR	14209	Identifier	list		14198	0					
ANR	14210	PrimaryExpression	0		14198	1					
ANR	14211	ExpressionStatement	"gl_list_remove_at ( list , 0 )"	1933:4:52095:52122	14198	1	True				
ANR	14212	CallExpression	"gl_list_remove_at ( list , 0 )"		14198	0					
ANR	14213	Callee	gl_list_remove_at		14198	0					
ANR	14214	Identifier	gl_list_remove_at		14198	0					
ANR	14215	ArgumentList	list		14198	1					
ANR	14216	Argument	list		14198	0					
ANR	14217	Identifier	list		14198	0					
ANR	14218	Argument	0		14198	1					
ANR	14219	PrimaryExpression	0		14198	0					
ANR	14220	ReturnType	static void		14198	1					
ANR	14221	Identifier	gl_list_clear		14198	2					
ANR	14222	ParameterList	gl_list_t list		14198	3					
ANR	14223	Parameter	gl_list_t list	1930:15:52039:52052	14198	0	True				
ANR	14224	ParameterType	gl_list_t		14198	0					
ANR	14225	Identifier	list		14198	1					
ANR	14226	CFGEntryNode	ENTRY		14198		True				
ANR	14227	CFGExitNode	EXIT		14198		True				
ANR	14228	Symbol	gl_list_size		14198						
ANR	14229	Symbol	list		14198						
ANR	14230	Function	output_files	1936:0:52127:53144							
ANR	14231	FunctionDef	output_files (struct stat const * st)		14230	0					
ANR	14232	CompoundStatement		1938:0:52176:53144	14230	0					
ANR	14233	IdentifierDeclStatement	gl_list_iterator_t iter ;	1939:2:52180:52203	14230	0	True				
ANR	14234	IdentifierDecl	iter		14230	0					
ANR	14235	IdentifierDeclType	gl_list_iterator_t		14230	0					
ANR	14236	Identifier	iter		14230	1					
ANR	14237	IdentifierDeclStatement	const void * elt ;	1940:2:52207:52222	14230	1	True				
ANR	14238	IdentifierDecl	* elt		14230	0					
ANR	14239	IdentifierDeclType	const void *		14230	0					
ANR	14240	Identifier	elt		14230	1					
ANR	14241	ExpressionStatement	iter = gl_list_iterator ( files_to_output )	1942:2:52227:52268	14230	2	True				
ANR	14242	AssignmentExpression	iter = gl_list_iterator ( files_to_output )		14230	0		=			
ANR	14243	Identifier	iter		14230	0					
ANR	14244	CallExpression	gl_list_iterator ( files_to_output )		14230	1					
ANR	14245	Callee	gl_list_iterator		14230	0					
ANR	14246	Identifier	gl_list_iterator		14230	0					
ANR	14247	ArgumentList	files_to_output		14230	1					
ANR	14248	Argument	files_to_output		14230	0					
ANR	14249	Identifier	files_to_output		14230	0					
ANR	14250	WhileStatement	"while ( gl_list_iterator_next ( & iter , & elt , NULL ) )"		14230	3					
ANR	14251	Condition	"gl_list_iterator_next ( & iter , & elt , NULL )"	1943:9:52279:52319	14230	0	True				
ANR	14252	CallExpression	"gl_list_iterator_next ( & iter , & elt , NULL )"		14230	0					
ANR	14253	Callee	gl_list_iterator_next		14230	0					
ANR	14254	Identifier	gl_list_iterator_next		14230	0					
ANR	14255	ArgumentList	& iter		14230	1					
ANR	14256	Argument	& iter		14230	0					
ANR	14257	UnaryOperationExpression	& iter		14230	0					
ANR	14258	UnaryOperator	&		14230	0					
ANR	14259	Identifier	iter		14230	1					
ANR	14260	Argument	& elt		14230	1					
ANR	14261	UnaryOperationExpression	& elt		14230	0					
ANR	14262	UnaryOperator	&		14230	0					
ANR	14263	Identifier	elt		14230	1					
ANR	14264	Argument	NULL		14230	2					
ANR	14265	Identifier	NULL		14230	0					
ANR	14266	CompoundStatement		10:6:252:305	14230	1					
ANR	14267	IdentifierDeclStatement	const struct file_to_output * file_to_output = elt ;	1945:6:52334:52383	14230	0	True				
ANR	14268	IdentifierDecl	* file_to_output = elt		14230	0					
ANR	14269	IdentifierDeclType	const struct file_to_output *		14230	0					
ANR	14270	Identifier	file_to_output		14230	1					
ANR	14271	AssignmentExpression	* file_to_output = elt		14230	2		=			
ANR	14272	Identifier	elt		14230	0					
ANR	14273	Identifier	elt		14230	1					
ANR	14274	IdentifierDeclStatement	bool from_needs_removal = true ;	1946:6:52391:52421	14230	1	True				
ANR	14275	IdentifierDecl	from_needs_removal = true		14230	0					
ANR	14276	IdentifierDeclType	bool		14230	0					
ANR	14277	Identifier	from_needs_removal		14230	1					
ANR	14278	AssignmentExpression	from_needs_removal = true		14230	2		=			
ANR	14279	Identifier	true		14230	0					
ANR	14280	Identifier	true		14230	1					
ANR	14281	IdentifierDeclStatement	struct stat const * from_st = & file_to_output -> from_st ;	1947:6:52429:52482	14230	2	True				
ANR	14282	IdentifierDecl	* from_st = & file_to_output -> from_st		14230	0					
ANR	14283	IdentifierDeclType	struct stat const *		14230	0					
ANR	14284	Identifier	from_st		14230	1					
ANR	14285	AssignmentExpression	* from_st = & file_to_output -> from_st		14230	2		=			
ANR	14286	Identifier	from_st		14230	0					
ANR	14287	UnaryOperationExpression	& file_to_output -> from_st		14230	1					
ANR	14288	UnaryOperator	&		14230	0					
ANR	14289	PtrMemberAccess	file_to_output -> from_st		14230	1					
ANR	14290	Identifier	file_to_output		14230	0					
ANR	14291	Identifier	from_st		14230	1					
ANR	14292	ExpressionStatement	"output_file_now ( file_to_output -> from , & from_needs_removal , from_st , file_to_output -> to , file_to_output -> mode , file_to_output -> backup )"	1949:6:52491:52643	14230	3	True				
ANR	14293	CallExpression	"output_file_now ( file_to_output -> from , & from_needs_removal , from_st , file_to_output -> to , file_to_output -> mode , file_to_output -> backup )"		14230	0					
ANR	14294	Callee	output_file_now		14230	0					
ANR	14295	Identifier	output_file_now		14230	0					
ANR	14296	ArgumentList	file_to_output -> from		14230	1					
ANR	14297	Argument	file_to_output -> from		14230	0					
ANR	14298	PtrMemberAccess	file_to_output -> from		14230	0					
ANR	14299	Identifier	file_to_output		14230	0					
ANR	14300	Identifier	from		14230	1					
ANR	14301	Argument	& from_needs_removal		14230	1					
ANR	14302	UnaryOperationExpression	& from_needs_removal		14230	0					
ANR	14303	UnaryOperator	&		14230	0					
ANR	14304	Identifier	from_needs_removal		14230	1					
ANR	14305	Argument	from_st		14230	2					
ANR	14306	Identifier	from_st		14230	0					
ANR	14307	Argument	file_to_output -> to		14230	3					
ANR	14308	PtrMemberAccess	file_to_output -> to		14230	0					
ANR	14309	Identifier	file_to_output		14230	0					
ANR	14310	Identifier	to		14230	1					
ANR	14311	Argument	file_to_output -> mode		14230	4					
ANR	14312	PtrMemberAccess	file_to_output -> mode		14230	0					
ANR	14313	Identifier	file_to_output		14230	0					
ANR	14314	Identifier	mode		14230	1					
ANR	14315	Argument	file_to_output -> backup		14230	5					
ANR	14316	PtrMemberAccess	file_to_output -> backup		14230	0					
ANR	14317	Identifier	file_to_output		14230	0					
ANR	14318	Identifier	backup		14230	1					
ANR	14319	IfStatement	if ( file_to_output -> to && from_needs_removal )		14230	4					
ANR	14320	Condition	file_to_output -> to && from_needs_removal	1952:10:52655:52694	14230	0	True				
ANR	14321	AndExpression	file_to_output -> to && from_needs_removal		14230	0		&&			
ANR	14322	PtrMemberAccess	file_to_output -> to		14230	0					
ANR	14323	Identifier	file_to_output		14230	0					
ANR	14324	Identifier	to		14230	1					
ANR	14325	Identifier	from_needs_removal		14230	1					
ANR	14326	ExpressionStatement	safe_unlink ( file_to_output -> from )	1953:1:52698:52732	14230	1	True				
ANR	14327	CallExpression	safe_unlink ( file_to_output -> from )		14230	0					
ANR	14328	Callee	safe_unlink		14230	0					
ANR	14329	Identifier	safe_unlink		14230	0					
ANR	14330	ArgumentList	file_to_output -> from		14230	1					
ANR	14331	Argument	file_to_output -> from		14230	0					
ANR	14332	PtrMemberAccess	file_to_output -> from		14230	0					
ANR	14333	Identifier	file_to_output		14230	0					
ANR	14334	Identifier	from		14230	1					
ANR	14335	IfStatement	if ( st && st -> st_dev == from_st -> st_dev && st -> st_ino == from_st -> st_ino )		14230	5					
ANR	14336	Condition	st && st -> st_dev == from_st -> st_dev && st -> st_ino == from_st -> st_ino	1955:10:52745:52812	14230	0	True				
ANR	14337	AndExpression	st && st -> st_dev == from_st -> st_dev && st -> st_ino == from_st -> st_ino		14230	0		&&			
ANR	14338	Identifier	st		14230	0					
ANR	14339	AndExpression	st -> st_dev == from_st -> st_dev && st -> st_ino == from_st -> st_ino		14230	1		&&			
ANR	14340	EqualityExpression	st -> st_dev == from_st -> st_dev		14230	0		==			
ANR	14341	PtrMemberAccess	st -> st_dev		14230	0					
ANR	14342	Identifier	st		14230	0					
ANR	14343	Identifier	st_dev		14230	1					
ANR	14344	PtrMemberAccess	from_st -> st_dev		14230	1					
ANR	14345	Identifier	from_st		14230	0					
ANR	14346	Identifier	st_dev		14230	1					
ANR	14347	EqualityExpression	st -> st_ino == from_st -> st_ino		14230	1		==			
ANR	14348	PtrMemberAccess	st -> st_ino		14230	0					
ANR	14349	Identifier	st		14230	0					
ANR	14350	Identifier	st_ino		14230	1					
ANR	14351	PtrMemberAccess	from_st -> st_ino		14230	1					
ANR	14352	Identifier	from_st		14230	0					
ANR	14353	Identifier	st_ino		14230	1					
ANR	14354	CompoundStatement		19:1:639:639	14230	1					
ANR	14355	ForStatement	for ( ; ; )		14230	0					
ANR	14356	CompoundStatement		23:7:702:756	14230	0					
ANR	14357	IdentifierDeclStatement	"const void * elt2 = gl_list_get_at ( files_to_output , 0 ) ;"	1960:7:52879:52933	14230	0	True				
ANR	14358	IdentifierDecl	"* elt2 = gl_list_get_at ( files_to_output , 0 )"		14230	0					
ANR	14359	IdentifierDeclType	const void *		14230	0					
ANR	14360	Identifier	elt2		14230	1					
ANR	14361	AssignmentExpression	"* elt2 = gl_list_get_at ( files_to_output , 0 )"		14230	2		=			
ANR	14362	Identifier	elt2		14230	0					
ANR	14363	CallExpression	"gl_list_get_at ( files_to_output , 0 )"		14230	1					
ANR	14364	Callee	gl_list_get_at		14230	0					
ANR	14365	Identifier	gl_list_get_at		14230	0					
ANR	14366	ArgumentList	files_to_output		14230	1					
ANR	14367	Argument	files_to_output		14230	0					
ANR	14368	Identifier	files_to_output		14230	0					
ANR	14369	Argument	0		14230	1					
ANR	14370	PrimaryExpression	0		14230	0					
ANR	14371	ExpressionStatement	"gl_list_remove_at ( files_to_output , 0 )"	1961:7:52942:52980	14230	1	True				
ANR	14372	CallExpression	"gl_list_remove_at ( files_to_output , 0 )"		14230	0					
ANR	14373	Callee	gl_list_remove_at		14230	0					
ANR	14374	Identifier	gl_list_remove_at		14230	0					
ANR	14375	ArgumentList	files_to_output		14230	1					
ANR	14376	Argument	files_to_output		14230	0					
ANR	14377	Identifier	files_to_output		14230	0					
ANR	14378	Argument	0		14230	1					
ANR	14379	PrimaryExpression	0		14230	0					
ANR	14380	IfStatement	if ( elt == elt2 )		14230	2					
ANR	14381	Condition	elt == elt2	1962:11:52993:53003	14230	0	True				
ANR	14382	EqualityExpression	elt == elt2		14230	0		==			
ANR	14383	Identifier	elt		14230	0					
ANR	14384	Identifier	elt2		14230	1					
ANR	14385	BreakStatement	break ;	1963:2:53008:53013	14230	1	True				
ANR	14386	ExpressionStatement	gl_list_iterator_free ( & iter )	1965:3:53025:53054	14230	1	True				
ANR	14387	CallExpression	gl_list_iterator_free ( & iter )		14230	0					
ANR	14388	Callee	gl_list_iterator_free		14230	0					
ANR	14389	Identifier	gl_list_iterator_free		14230	0					
ANR	14390	ArgumentList	& iter		14230	1					
ANR	14391	Argument	& iter		14230	0					
ANR	14392	UnaryOperationExpression	& iter		14230	0					
ANR	14393	UnaryOperator	&		14230	0					
ANR	14394	Identifier	iter		14230	1					
ANR	14395	ReturnStatement	return ;	1966:3:53059:53065	14230	2	True				
ANR	14396	ExpressionStatement	gl_list_iterator_free ( & iter )	1969:2:53078:53107	14230	4	True				
ANR	14397	CallExpression	gl_list_iterator_free ( & iter )		14230	0					
ANR	14398	Callee	gl_list_iterator_free		14230	0					
ANR	14399	Identifier	gl_list_iterator_free		14230	0					
ANR	14400	ArgumentList	& iter		14230	1					
ANR	14401	Argument	& iter		14230	0					
ANR	14402	UnaryOperationExpression	& iter		14230	0					
ANR	14403	UnaryOperator	&		14230	0					
ANR	14404	Identifier	iter		14230	1					
ANR	14405	ExpressionStatement	gl_list_clear ( files_to_output )	1970:2:53111:53142	14230	5	True				
ANR	14406	CallExpression	gl_list_clear ( files_to_output )		14230	0					
ANR	14407	Callee	gl_list_clear		14230	0					
ANR	14408	Identifier	gl_list_clear		14230	0					
ANR	14409	ArgumentList	files_to_output		14230	1					
ANR	14410	Argument	files_to_output		14230	0					
ANR	14411	Identifier	files_to_output		14230	0					
ANR	14412	ReturnType	static void		14230	1					
ANR	14413	Identifier	output_files		14230	2					
ANR	14414	ParameterList	struct stat const * st		14230	3					
ANR	14415	Parameter	struct stat const * st	1937:14:52153:52173	14230	0	True				
ANR	14416	ParameterType	struct stat const *		14230	0					
ANR	14417	Identifier	st		14230	1					
ANR	14418	CFGEntryNode	ENTRY		14230		True				
ANR	14419	CFGExitNode	EXIT		14230		True				
ANR	14420	InfiniteForNode	true		14230		True				
ANR	14421	Symbol	gl_list_iterator		14230						
ANR	14422	Symbol	* st		14230						
ANR	14423	Symbol	from_st -> st_ino		14230						
ANR	14424	Symbol	from_st		14230						
ANR	14425	Symbol	st -> st_dev		14230						
ANR	14426	Symbol	elt2		14230						
ANR	14427	Symbol	file_to_output -> backup		14230						
ANR	14428	Symbol	file_to_output -> mode		14230						
ANR	14429	Symbol	file_to_output -> from		14230						
ANR	14430	Symbol	& from_needs_removal		14230						
ANR	14431	Symbol	* from_st		14230						
ANR	14432	Symbol	& elt		14230						
ANR	14433	Symbol	from_needs_removal		14230						
ANR	14434	Symbol	files_to_output		14230						
ANR	14435	Symbol	& file_to_output -> from_st		14230						
ANR	14436	Symbol	file_to_output -> to		14230						
ANR	14437	Symbol	st -> st_ino		14230						
ANR	14438	Symbol	& iter		14230						
ANR	14439	Symbol	st		14230						
ANR	14440	Symbol	NULL		14230						
ANR	14441	Symbol	iter		14230						
ANR	14442	Symbol	from_st -> st_dev		14230						
ANR	14443	Symbol	gl_list_get_at		14230						
ANR	14444	Symbol	elt		14230						
ANR	14445	Symbol	file_to_output		14230						
ANR	14446	Symbol	gl_list_iterator_next		14230						
ANR	14447	Symbol	* file_to_output		14230						
ANR	14448	Symbol	true		14230						
ANR	14449	Function	fatal_exit	1975:0:53179:53274							
ANR	14450	FunctionDef	fatal_exit (int sig)		14449	0					
ANR	14451	CompoundStatement		1977:0:53205:53274	14449	0					
ANR	14452	ExpressionStatement	cleanup ( )	1978:2:53209:53219	14449	0	True				
ANR	14453	CallExpression	cleanup ( )		14449	0					
ANR	14454	Callee	cleanup		14449	0					
ANR	14455	Identifier	cleanup		14449	0					
ANR	14456	ArgumentList			14449	1					
ANR	14457	IfStatement	if ( sig )		14449	1					
ANR	14458	Condition	sig	1980:6:53228:53230	14449	0	True				
ANR	14459	Identifier	sig		14449	0					
ANR	14460	ExpressionStatement	exit_with_signal ( sig )	1981:4:53237:53259	14449	1	True				
ANR	14461	CallExpression	exit_with_signal ( sig )		14449	0					
ANR	14462	Callee	exit_with_signal		14449	0					
ANR	14463	Identifier	exit_with_signal		14449	0					
ANR	14464	ArgumentList	sig		14449	1					
ANR	14465	Argument	sig		14449	0					
ANR	14466	Identifier	sig		14449	0					
ANR	14467	ExpressionStatement	exit ( 2 )	1983:2:53264:53272	14449	2	True				
ANR	14468	CallExpression	exit ( 2 )		14449	0					
ANR	14469	Callee	exit		14449	0					
ANR	14470	Identifier	exit		14449	0					
ANR	14471	ArgumentList	2		14449	1					
ANR	14472	Argument	2		14449	0					
ANR	14473	PrimaryExpression	2		14449	0					
ANR	14474	ReturnType	void		14449	1					
ANR	14475	Identifier	fatal_exit		14449	2					
ANR	14476	ParameterList	int sig		14449	3					
ANR	14477	Parameter	int sig	1976:12:53196:53202	14449	0	True				
ANR	14478	ParameterType	int		14449	0					
ANR	14479	Identifier	sig		14449	1					
ANR	14480	CFGEntryNode	ENTRY		14449		True				
ANR	14481	CFGExitNode	EXIT		14449		True				
ANR	14482	Symbol	sig		14449						
ANR	14483	Function	remove_if_needed	1986:0:53277:53438							
ANR	14484	FunctionDef	"remove_if_needed (char const * name , bool * needs_removal)"		14483	0					
ANR	14485	CompoundStatement		1988:0:53346:53438	14483	0					
ANR	14486	IfStatement	if ( * needs_removal )		14483	0					
ANR	14487	Condition	* needs_removal	1989:6:53354:53367	14483	0	True				
ANR	14488	UnaryOperationExpression	* needs_removal		14483	0					
ANR	14489	UnaryOperator	*		14483	0					
ANR	14490	Identifier	needs_removal		14483	1					
ANR	14491	CompoundStatement		3:4:27:27	14483	1					
ANR	14492	ExpressionStatement	safe_unlink ( name )	1991:6:53382:53400	14483	0	True				
ANR	14493	CallExpression	safe_unlink ( name )		14483	0					
ANR	14494	Callee	safe_unlink		14483	0					
ANR	14495	Identifier	safe_unlink		14483	0					
ANR	14496	ArgumentList	name		14483	1					
ANR	14497	Argument	name		14483	0					
ANR	14498	Identifier	name		14483	0					
ANR	14499	ExpressionStatement	* needs_removal = false	1992:6:53408:53430	14483	1	True				
ANR	14500	AssignmentExpression	* needs_removal = false		14483	0		=			
ANR	14501	UnaryOperationExpression	* needs_removal		14483	0					
ANR	14502	UnaryOperator	*		14483	0					
ANR	14503	Identifier	needs_removal		14483	1					
ANR	14504	Identifier	false		14483	1					
ANR	14505	ReturnType	static void		14483	1					
ANR	14506	Identifier	remove_if_needed		14483	2					
ANR	14507	ParameterList	"char const * name , bool * needs_removal"		14483	3					
ANR	14508	Parameter	char const * name	1987:18:53307:53322	14483	0	True				
ANR	14509	ParameterType	char const *		14483	0					
ANR	14510	Identifier	name		14483	1					
ANR	14511	Parameter	bool * needs_removal	1987:36:53325:53343	14483	1	True				
ANR	14512	ParameterType	bool *		14483	0					
ANR	14513	Identifier	needs_removal		14483	1					
ANR	14514	CFGEntryNode	ENTRY		14483		True				
ANR	14515	CFGExitNode	EXIT		14483		True				
ANR	14516	Symbol	* needs_removal		14483						
ANR	14517	Symbol	needs_removal		14483						
ANR	14518	Symbol	name		14483						
ANR	14519	Symbol	false		14483						
ANR	14520	Function	cleanup	1996:0:53441:53731							
ANR	14521	FunctionDef	cleanup ()		14520	0					
ANR	14522	CompoundStatement		1998:0:53468:53731	14520	0					
ANR	14523	ExpressionStatement	"remove_if_needed ( TMPINNAME , & TMPINNAME_needs_removal )"	1999:2:53472:53526	14520	0	True				
ANR	14524	CallExpression	"remove_if_needed ( TMPINNAME , & TMPINNAME_needs_removal )"		14520	0					
ANR	14525	Callee	remove_if_needed		14520	0					
ANR	14526	Identifier	remove_if_needed		14520	0					
ANR	14527	ArgumentList	TMPINNAME		14520	1					
ANR	14528	Argument	TMPINNAME		14520	0					
ANR	14529	Identifier	TMPINNAME		14520	0					
ANR	14530	Argument	& TMPINNAME_needs_removal		14520	1					
ANR	14531	UnaryOperationExpression	& TMPINNAME_needs_removal		14520	0					
ANR	14532	UnaryOperator	&		14520	0					
ANR	14533	Identifier	TMPINNAME_needs_removal		14520	1					
ANR	14534	ExpressionStatement	"remove_if_needed ( TMPOUTNAME , & TMPOUTNAME_needs_removal )"	2000:2:53530:53586	14520	1	True				
ANR	14535	CallExpression	"remove_if_needed ( TMPOUTNAME , & TMPOUTNAME_needs_removal )"		14520	0					
ANR	14536	Callee	remove_if_needed		14520	0					
ANR	14537	Identifier	remove_if_needed		14520	0					
ANR	14538	ArgumentList	TMPOUTNAME		14520	1					
ANR	14539	Argument	TMPOUTNAME		14520	0					
ANR	14540	Identifier	TMPOUTNAME		14520	0					
ANR	14541	Argument	& TMPOUTNAME_needs_removal		14520	1					
ANR	14542	UnaryOperationExpression	& TMPOUTNAME_needs_removal		14520	0					
ANR	14543	UnaryOperator	&		14520	0					
ANR	14544	Identifier	TMPOUTNAME_needs_removal		14520	1					
ANR	14545	ExpressionStatement	"remove_if_needed ( TMPPATNAME , & TMPPATNAME_needs_removal )"	2001:2:53590:53646	14520	2	True				
ANR	14546	CallExpression	"remove_if_needed ( TMPPATNAME , & TMPPATNAME_needs_removal )"		14520	0					
ANR	14547	Callee	remove_if_needed		14520	0					
ANR	14548	Identifier	remove_if_needed		14520	0					
ANR	14549	ArgumentList	TMPPATNAME		14520	1					
ANR	14550	Argument	TMPPATNAME		14520	0					
ANR	14551	Identifier	TMPPATNAME		14520	0					
ANR	14552	Argument	& TMPPATNAME_needs_removal		14520	1					
ANR	14553	UnaryOperationExpression	& TMPPATNAME_needs_removal		14520	0					
ANR	14554	UnaryOperator	&		14520	0					
ANR	14555	Identifier	TMPPATNAME_needs_removal		14520	1					
ANR	14556	ExpressionStatement	"remove_if_needed ( TMPREJNAME , & TMPREJNAME_needs_removal )"	2002:2:53650:53706	14520	3	True				
ANR	14557	CallExpression	"remove_if_needed ( TMPREJNAME , & TMPREJNAME_needs_removal )"		14520	0					
ANR	14558	Callee	remove_if_needed		14520	0					
ANR	14559	Identifier	remove_if_needed		14520	0					
ANR	14560	ArgumentList	TMPREJNAME		14520	1					
ANR	14561	Argument	TMPREJNAME		14520	0					
ANR	14562	Identifier	TMPREJNAME		14520	0					
ANR	14563	Argument	& TMPREJNAME_needs_removal		14520	1					
ANR	14564	UnaryOperationExpression	& TMPREJNAME_needs_removal		14520	0					
ANR	14565	UnaryOperator	&		14520	0					
ANR	14566	Identifier	TMPREJNAME_needs_removal		14520	1					
ANR	14567	ExpressionStatement	output_files ( NULL )	2003:2:53710:53729	14520	4	True				
ANR	14568	CallExpression	output_files ( NULL )		14520	0					
ANR	14569	Callee	output_files		14520	0					
ANR	14570	Identifier	output_files		14520	0					
ANR	14571	ArgumentList	NULL		14520	1					
ANR	14572	Argument	NULL		14520	0					
ANR	14573	Identifier	NULL		14520	0					
ANR	14574	ReturnType	static void		14520	1					
ANR	14575	Identifier	cleanup		14520	2					
ANR	14576	ParameterList			14520	3					
ANR	14577	CFGEntryNode	ENTRY		14520		True				
ANR	14578	CFGExitNode	EXIT		14520		True				
ANR	14579	Symbol	NULL		14520						
ANR	14580	Symbol	TMPINNAME		14520						
ANR	14581	Symbol	& TMPINNAME_needs_removal		14520						
ANR	14582	Symbol	& TMPOUTNAME_needs_removal		14520						
ANR	14583	Symbol	& TMPREJNAME_needs_removal		14520						
ANR	14584	Symbol	TMPPATNAME		14520						
ANR	14585	Symbol	& TMPPATNAME_needs_removal		14520						
ANR	14586	Symbol	TMPOUTNAME		14520						
ANR	14587	Symbol	TMPREJNAME		14520						
