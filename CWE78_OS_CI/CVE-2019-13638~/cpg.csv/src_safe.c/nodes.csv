command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	57827	File	data/converged/CVE-2019-13638~_patch/src_safe.c								
ANR	57828	DeclStmt									
ANR	57829	Decl							const unsigned int	const unsigned int	MAX_PATH_COMPONENTS
ANR	57830	DeclStmt									
ANR	57831	Decl							bool	bool	unsafe
ANR	57832	DeclStmt									
ANR	57833	Decl							unsigned int	unsigned int	dirfd_cache_misses
ANR	57834	ClassDef	cached_dirfd	60:0:1652:1803							
ANR	57835	DeclStmt									
ANR	57836	Decl							struct list_head	struct list_head	lru_link
ANR	57837	DeclStmt									
ANR	57838	Decl							struct list_head	struct list_head	children_link
ANR	57839	Decl							struct list_head	struct list_head	children
ANR	57840	DeclStmt									
ANR	57841	Decl							struct cached_dirfd	struct cached_dirfd *	parent
ANR	57842	DeclStmt									
ANR	57843	Decl							char	char *	name
ANR	57844	DeclStmt									
ANR	57845	Decl							int	int	fd
ANR	57846	DeclStmt									
ANR	57847	Decl							Hash_table	Hash_table *	cached_dirfds
ANR	57848	DeclStmt									
ANR	57849	Decl							size_t	size_t	max_cached_fds
ANR	57850	Function	hash_cached_dirfd	73:0:1901:2122							
ANR	57851	FunctionDef	"hash_cached_dirfd (const void * entry , size_t table_size)"		57850	0					
ANR	57852	CompoundStatement		74:0:1972:2122	57850	0					
ANR	57853	IdentifierDeclStatement	const struct cached_dirfd * d = entry ;	75:2:1976:2012	57850	0	True				
ANR	57854	IdentifierDecl	* d = entry		57850	0					
ANR	57855	IdentifierDeclType	const struct cached_dirfd *		57850	0					
ANR	57856	Identifier	d		57850	1					
ANR	57857	AssignmentExpression	* d = entry		57850	2		=			
ANR	57858	Identifier	entry		57850	0					
ANR	57859	Identifier	entry		57850	1					
ANR	57860	IdentifierDeclStatement	"size_t strhash = hash_string ( d -> name , table_size ) ;"	76:2:2016:2066	57850	1	True				
ANR	57861	IdentifierDecl	"strhash = hash_string ( d -> name , table_size )"		57850	0					
ANR	57862	IdentifierDeclType	size_t		57850	0					
ANR	57863	Identifier	strhash		57850	1					
ANR	57864	AssignmentExpression	"strhash = hash_string ( d -> name , table_size )"		57850	2		=			
ANR	57865	Identifier	strhash		57850	0					
ANR	57866	CallExpression	"hash_string ( d -> name , table_size )"		57850	1					
ANR	57867	Callee	hash_string		57850	0					
ANR	57868	Identifier	hash_string		57850	0					
ANR	57869	ArgumentList	d -> name		57850	1					
ANR	57870	Argument	d -> name		57850	0					
ANR	57871	PtrMemberAccess	d -> name		57850	0					
ANR	57872	Identifier	d		57850	0					
ANR	57873	Identifier	name		57850	1					
ANR	57874	Argument	table_size		57850	1					
ANR	57875	Identifier	table_size		57850	0					
ANR	57876	ReturnStatement	return ( strhash * 31 + d -> parent -> fd ) % table_size ;	77:2:2070:2120	57850	2	True				
ANR	57877	MultiplicativeExpression	( strhash * 31 + d -> parent -> fd ) % table_size		57850	0		%			
ANR	57878	AdditiveExpression	strhash * 31 + d -> parent -> fd		57850	0		+			
ANR	57879	MultiplicativeExpression	strhash * 31		57850	0		*			
ANR	57880	Identifier	strhash		57850	0					
ANR	57881	PrimaryExpression	31		57850	1					
ANR	57882	PtrMemberAccess	d -> parent -> fd		57850	1					
ANR	57883	PtrMemberAccess	d -> parent		57850	0					
ANR	57884	Identifier	d		57850	0					
ANR	57885	Identifier	parent		57850	1					
ANR	57886	Identifier	fd		57850	1					
ANR	57887	Identifier	table_size		57850	1					
ANR	57888	ReturnType	static size_t		57850	1					
ANR	57889	Identifier	hash_cached_dirfd		57850	2					
ANR	57890	ParameterList	"const void * entry , size_t table_size"		57850	3					
ANR	57891	Parameter	const void * entry	73:33:1934:1950	57850	0	True				
ANR	57892	ParameterType	const void *		57850	0					
ANR	57893	Identifier	entry		57850	1					
ANR	57894	Parameter	size_t table_size	73:52:1953:1969	57850	1	True				
ANR	57895	ParameterType	size_t		57850	0					
ANR	57896	Identifier	table_size		57850	1					
ANR	57897	CFGEntryNode	ENTRY		57850		True				
ANR	57898	CFGExitNode	EXIT		57850		True				
ANR	57899	Symbol	d -> parent -> fd		57850						
ANR	57900	Symbol	entry		57850						
ANR	57901	Symbol	table_size		57850						
ANR	57902	Symbol	d -> name		57850						
ANR	57903	Symbol	d		57850						
ANR	57904	Symbol	* * d		57850						
ANR	57905	Symbol	strhash		57850						
ANR	57906	Symbol	hash_string		57850						
ANR	57907	Symbol	d -> parent		57850						
ANR	57908	Symbol	* d -> parent		57850						
ANR	57909	Symbol	* d		57850						
ANR	57910	Function	compare_cached_dirfds	80:0:2125:2352							
ANR	57911	FunctionDef	"compare_cached_dirfds (const void * _a , const void * _b)"		57910	0					
ANR	57912	CompoundStatement		82:0:2199:2352	57910	0					
ANR	57913	IdentifierDeclStatement	const struct cached_dirfd * a = _a ;	83:2:2203:2236	57910	0	True				
ANR	57914	IdentifierDecl	* a = _a		57910	0					
ANR	57915	IdentifierDeclType	const struct cached_dirfd *		57910	0					
ANR	57916	Identifier	a		57910	1					
ANR	57917	AssignmentExpression	* a = _a		57910	2		=			
ANR	57918	Identifier	_a		57910	0					
ANR	57919	Identifier	_a		57910	1					
ANR	57920	IdentifierDeclStatement	const struct cached_dirfd * b = _b ;	84:2:2240:2273	57910	1	True				
ANR	57921	IdentifierDecl	* b = _b		57910	0					
ANR	57922	IdentifierDeclType	const struct cached_dirfd *		57910	0					
ANR	57923	Identifier	b		57910	1					
ANR	57924	AssignmentExpression	* b = _b		57910	2		=			
ANR	57925	Identifier	_b		57910	0					
ANR	57926	Identifier	_b		57910	1					
ANR	57927	ReturnStatement	"return ( a -> parent -> fd == b -> parent -> fd && ! strcmp ( a -> name , b -> name ) ) ;"	86:2:2278:2350	57910	2	True				
ANR	57928	AndExpression	"a -> parent -> fd == b -> parent -> fd && ! strcmp ( a -> name , b -> name )"		57910	0		&&			
ANR	57929	EqualityExpression	a -> parent -> fd == b -> parent -> fd		57910	0		==			
ANR	57930	PtrMemberAccess	a -> parent -> fd		57910	0					
ANR	57931	PtrMemberAccess	a -> parent		57910	0					
ANR	57932	Identifier	a		57910	0					
ANR	57933	Identifier	parent		57910	1					
ANR	57934	Identifier	fd		57910	1					
ANR	57935	PtrMemberAccess	b -> parent -> fd		57910	1					
ANR	57936	PtrMemberAccess	b -> parent		57910	0					
ANR	57937	Identifier	b		57910	0					
ANR	57938	Identifier	parent		57910	1					
ANR	57939	Identifier	fd		57910	1					
ANR	57940	UnaryOperationExpression	"! strcmp ( a -> name , b -> name )"		57910	1					
ANR	57941	UnaryOperator	!		57910	0					
ANR	57942	CallExpression	"strcmp ( a -> name , b -> name )"		57910	1					
ANR	57943	Callee	strcmp		57910	0					
ANR	57944	Identifier	strcmp		57910	0					
ANR	57945	ArgumentList	a -> name		57910	1					
ANR	57946	Argument	a -> name		57910	0					
ANR	57947	PtrMemberAccess	a -> name		57910	0					
ANR	57948	Identifier	a		57910	0					
ANR	57949	Identifier	name		57910	1					
ANR	57950	Argument	b -> name		57910	1					
ANR	57951	PtrMemberAccess	b -> name		57910	0					
ANR	57952	Identifier	b		57910	0					
ANR	57953	Identifier	name		57910	1					
ANR	57954	ReturnType	static bool		57910	1					
ANR	57955	Identifier	compare_cached_dirfds		57910	2					
ANR	57956	ParameterList	"const void * _a , const void * _b"		57910	3					
ANR	57957	Parameter	const void * _a	80:35:2160:2173	57910	0	True				
ANR	57958	ParameterType	const void *		57910	0					
ANR	57959	Identifier	_a		57910	1					
ANR	57960	Parameter	const void * _b	81:7:2183:2196	57910	1	True				
ANR	57961	ParameterType	const void *		57910	0					
ANR	57962	Identifier	_b		57910	1					
ANR	57963	CFGEntryNode	ENTRY		57910		True				
ANR	57964	CFGExitNode	EXIT		57910		True				
ANR	57965	Symbol	strcmp		57910						
ANR	57966	Symbol	a		57910						
ANR	57967	Symbol	_a		57910						
ANR	57968	Symbol	b		57910						
ANR	57969	Symbol	a -> parent		57910						
ANR	57970	Symbol	_b		57910						
ANR	57971	Symbol	b -> parent		57910						
ANR	57972	Symbol	* a -> parent		57910						
ANR	57973	Symbol	* * b		57910						
ANR	57974	Symbol	* * a		57910						
ANR	57975	Symbol	* a		57910						
ANR	57976	Symbol	* b		57910						
ANR	57977	Symbol	b -> parent -> fd		57910						
ANR	57978	Symbol	b -> name		57910						
ANR	57979	Symbol	* b -> parent		57910						
ANR	57980	Symbol	a -> name		57910						
ANR	57981	Symbol	a -> parent -> fd		57910						
ANR	57982	Function	free_cached_dirfd	90:0:2355:2490							
ANR	57983	FunctionDef	free_cached_dirfd (struct cached_dirfd * entry)		57982	0					
ANR	57984	CompoundStatement		91:0:2414:2490	57982	0					
ANR	57985	ExpressionStatement	list_del ( & entry -> children_link )	92:2:2418:2450	57982	0	True				
ANR	57986	CallExpression	list_del ( & entry -> children_link )		57982	0					
ANR	57987	Callee	list_del		57982	0					
ANR	57988	Identifier	list_del		57982	0					
ANR	57989	ArgumentList	& entry -> children_link		57982	1					
ANR	57990	Argument	& entry -> children_link		57982	0					
ANR	57991	UnaryOperationExpression	& entry -> children_link		57982	0					
ANR	57992	UnaryOperator	&		57982	0					
ANR	57993	PtrMemberAccess	entry -> children_link		57982	1					
ANR	57994	Identifier	entry		57982	0					
ANR	57995	Identifier	children_link		57982	1					
ANR	57996	ExpressionStatement	free ( entry -> name )	93:2:2454:2472	57982	1	True				
ANR	57997	CallExpression	free ( entry -> name )		57982	0					
ANR	57998	Callee	free		57982	0					
ANR	57999	Identifier	free		57982	0					
ANR	58000	ArgumentList	entry -> name		57982	1					
ANR	58001	Argument	entry -> name		57982	0					
ANR	58002	PtrMemberAccess	entry -> name		57982	0					
ANR	58003	Identifier	entry		57982	0					
ANR	58004	Identifier	name		57982	1					
ANR	58005	ExpressionStatement	free ( entry )	94:2:2476:2488	57982	2	True				
ANR	58006	CallExpression	free ( entry )		57982	0					
ANR	58007	Callee	free		57982	0					
ANR	58008	Identifier	free		57982	0					
ANR	58009	ArgumentList	entry		57982	1					
ANR	58010	Argument	entry		57982	0					
ANR	58011	Identifier	entry		57982	0					
ANR	58012	ReturnType	static void		57982	1					
ANR	58013	Identifier	free_cached_dirfd		57982	2					
ANR	58014	ParameterList	struct cached_dirfd * entry		57982	3					
ANR	58015	Parameter	struct cached_dirfd * entry	90:31:2386:2411	57982	0	True				
ANR	58016	ParameterType	struct cached_dirfd *		57982	0					
ANR	58017	Identifier	entry		57982	1					
ANR	58018	CFGEntryNode	ENTRY		57982		True				
ANR	58019	CFGExitNode	EXIT		57982		True				
ANR	58020	Symbol	entry		57982						
ANR	58021	Symbol	entry -> name		57982						
ANR	58022	Symbol	& entry -> children_link		57982						
ANR	58023	Symbol	* entry		57982						
ANR	58024	Function	init_dirfd_cache	97:0:2493:2866							
ANR	58025	FunctionDef	init_dirfd_cache ()		58024	0					
ANR	58026	CompoundStatement		98:0:2529:2866	58024	0					
ANR	58027	IdentifierDeclStatement	struct rlimit nofile ;	99:2:2533:2553	58024	0	True				
ANR	58028	IdentifierDecl	nofile		58024	0					
ANR	58029	IdentifierDeclType	struct rlimit		58024	0					
ANR	58030	Identifier	nofile		58024	1					
ANR	58031	ExpressionStatement	max_cached_fds = 8	101:2:2558:2576	58024	1	True				
ANR	58032	AssignmentExpression	max_cached_fds = 8		58024	0		=			
ANR	58033	Identifier	max_cached_fds		58024	0					
ANR	58034	PrimaryExpression	8		58024	1					
ANR	58035	IfStatement	"if ( getrlimit ( RLIMIT_NOFILE , & nofile ) == 0 )"		58024	2					
ANR	58036	Condition	"getrlimit ( RLIMIT_NOFILE , & nofile ) == 0"	102:6:2584:2622	58024	0	True				
ANR	58037	EqualityExpression	"getrlimit ( RLIMIT_NOFILE , & nofile ) == 0"		58024	0		==			
ANR	58038	CallExpression	"getrlimit ( RLIMIT_NOFILE , & nofile )"		58024	0					
ANR	58039	Callee	getrlimit		58024	0					
ANR	58040	Identifier	getrlimit		58024	0					
ANR	58041	ArgumentList	RLIMIT_NOFILE		58024	1					
ANR	58042	Argument	RLIMIT_NOFILE		58024	0					
ANR	58043	Identifier	RLIMIT_NOFILE		58024	0					
ANR	58044	Argument	& nofile		58024	1					
ANR	58045	UnaryOperationExpression	& nofile		58024	0					
ANR	58046	UnaryOperator	&		58024	0					
ANR	58047	Identifier	nofile		58024	1					
ANR	58048	PrimaryExpression	0		58024	1					
ANR	58049	ExpressionStatement	"max_cached_fds = MAX ( nofile . rlim_cur / 4 , max_cached_fds )"	103:4:2629:2687	58024	1	True				
ANR	58050	AssignmentExpression	"max_cached_fds = MAX ( nofile . rlim_cur / 4 , max_cached_fds )"		58024	0		=			
ANR	58051	Identifier	max_cached_fds		58024	0					
ANR	58052	CallExpression	"MAX ( nofile . rlim_cur / 4 , max_cached_fds )"		58024	1					
ANR	58053	Callee	MAX		58024	0					
ANR	58054	Identifier	MAX		58024	0					
ANR	58055	ArgumentList	nofile . rlim_cur / 4		58024	1					
ANR	58056	Argument	nofile . rlim_cur / 4		58024	0					
ANR	58057	MultiplicativeExpression	nofile . rlim_cur / 4		58024	0		/			
ANR	58058	MemberAccess	nofile . rlim_cur		58024	0					
ANR	58059	Identifier	nofile		58024	0					
ANR	58060	Identifier	rlim_cur		58024	1					
ANR	58061	PrimaryExpression	4		58024	1					
ANR	58062	Argument	max_cached_fds		58024	1					
ANR	58063	Identifier	max_cached_fds		58024	0					
ANR	58064	ExpressionStatement	"cached_dirfds = hash_initialize ( max_cached_fds , NULL , hash_cached_dirfd , compare_cached_dirfds , NULL )"	105:2:2692:2822	58024	3	True				
ANR	58065	AssignmentExpression	"cached_dirfds = hash_initialize ( max_cached_fds , NULL , hash_cached_dirfd , compare_cached_dirfds , NULL )"		58024	0		=			
ANR	58066	Identifier	cached_dirfds		58024	0					
ANR	58067	CallExpression	"hash_initialize ( max_cached_fds , NULL , hash_cached_dirfd , compare_cached_dirfds , NULL )"		58024	1					
ANR	58068	Callee	hash_initialize		58024	0					
ANR	58069	Identifier	hash_initialize		58024	0					
ANR	58070	ArgumentList	max_cached_fds		58024	1					
ANR	58071	Argument	max_cached_fds		58024	0					
ANR	58072	Identifier	max_cached_fds		58024	0					
ANR	58073	Argument	NULL		58024	1					
ANR	58074	Identifier	NULL		58024	0					
ANR	58075	Argument	hash_cached_dirfd		58024	2					
ANR	58076	Identifier	hash_cached_dirfd		58024	0					
ANR	58077	Argument	compare_cached_dirfds		58024	3					
ANR	58078	Identifier	compare_cached_dirfds		58024	0					
ANR	58079	Argument	NULL		58024	4					
ANR	58080	Identifier	NULL		58024	0					
ANR	58081	IfStatement	if ( ! cached_dirfds )		58024	4					
ANR	58082	Condition	! cached_dirfds	111:6:2831:2844	58024	0	True				
ANR	58083	UnaryOperationExpression	! cached_dirfds		58024	0					
ANR	58084	UnaryOperator	!		58024	0					
ANR	58085	Identifier	cached_dirfds		58024	1					
ANR	58086	ExpressionStatement	xalloc_die ( )	112:4:2851:2864	58024	1	True				
ANR	58087	CallExpression	xalloc_die ( )		58024	0					
ANR	58088	Callee	xalloc_die		58024	0					
ANR	58089	Identifier	xalloc_die		58024	0					
ANR	58090	ArgumentList			58024	1					
ANR	58091	ReturnType	static void		58024	1					
ANR	58092	Identifier	init_dirfd_cache		58024	2					
ANR	58093	ParameterList			58024	3					
ANR	58094	CFGEntryNode	ENTRY		58024		True				
ANR	58095	CFGExitNode	EXIT		58024		True				
ANR	58096	Symbol	nofile . rlim_cur		58024						
ANR	58097	Symbol	compare_cached_dirfds		58024						
ANR	58098	Symbol	& nofile		58024						
ANR	58099	Symbol	getrlimit		58024						
ANR	58100	Symbol	max_cached_fds		58024						
ANR	58101	Symbol	NULL		58024						
ANR	58102	Symbol	MAX		58024						
ANR	58103	Symbol	hash_cached_dirfd		58024						
ANR	58104	Symbol	nofile		58024						
ANR	58105	Symbol	hash_initialize		58024						
ANR	58106	Symbol	cached_dirfds		58024						
ANR	58107	Symbol	RLIMIT_NOFILE		58024						
ANR	58108	Function	lookup_cached_dirfd	115:0:2869:3188							
ANR	58109	FunctionDef	"lookup_cached_dirfd (struct cached_dirfd * dir , const char * name)"		58108	0					
ANR	58110	CompoundStatement		116:0:2962:3188	58108	0					
ANR	58111	IdentifierDeclStatement	struct cached_dirfd * entry = NULL ;	117:2:2966:2999	58108	0	True				
ANR	58112	IdentifierDecl	* entry = NULL		58108	0					
ANR	58113	IdentifierDeclType	struct cached_dirfd *		58108	0					
ANR	58114	Identifier	entry		58108	1					
ANR	58115	AssignmentExpression	* entry = NULL		58108	2		=			
ANR	58116	Identifier	NULL		58108	0					
ANR	58117	Identifier	NULL		58108	1					
ANR	58118	IfStatement	if ( cached_dirfds )		58108	1					
ANR	58119	Condition	cached_dirfds	119:6:3008:3020	58108	0	True				
ANR	58120	Identifier	cached_dirfds		58108	0					
ANR	58121	CompoundStatement		6:6:72:95	58108	1					
ANR	58122	IdentifierDeclStatement	struct cached_dirfd key ;	121:6:3035:3058	58108	0	True				
ANR	58123	IdentifierDecl	key		58108	0					
ANR	58124	IdentifierDeclType	struct cached_dirfd		58108	0					
ANR	58125	Identifier	key		58108	1					
ANR	58126	ExpressionStatement	key . parent = dir	122:6:3066:3082	58108	1	True				
ANR	58127	AssignmentExpression	key . parent = dir		58108	0		=			
ANR	58128	MemberAccess	key . parent		58108	0					
ANR	58129	Identifier	key		58108	0					
ANR	58130	Identifier	parent		58108	1					
ANR	58131	Identifier	dir		58108	1					
ANR	58132	ExpressionStatement	key . name = ( char * ) name	123:6:3090:3114	58108	2	True				
ANR	58133	AssignmentExpression	key . name = ( char * ) name		58108	0		=			
ANR	58134	MemberAccess	key . name		58108	0					
ANR	58135	Identifier	key		58108	0					
ANR	58136	Identifier	name		58108	1					
ANR	58137	CastExpression	( char * ) name		58108	1					
ANR	58138	CastTarget	char *		58108	0					
ANR	58139	Identifier	name		58108	1					
ANR	58140	ExpressionStatement	"entry = hash_lookup ( cached_dirfds , & key )"	124:6:3122:3163	58108	3	True				
ANR	58141	AssignmentExpression	"entry = hash_lookup ( cached_dirfds , & key )"		58108	0		=			
ANR	58142	Identifier	entry		58108	0					
ANR	58143	CallExpression	"hash_lookup ( cached_dirfds , & key )"		58108	1					
ANR	58144	Callee	hash_lookup		58108	0					
ANR	58145	Identifier	hash_lookup		58108	0					
ANR	58146	ArgumentList	cached_dirfds		58108	1					
ANR	58147	Argument	cached_dirfds		58108	0					
ANR	58148	Identifier	cached_dirfds		58108	0					
ANR	58149	Argument	& key		58108	1					
ANR	58150	UnaryOperationExpression	& key		58108	0					
ANR	58151	UnaryOperator	&		58108	0					
ANR	58152	Identifier	key		58108	1					
ANR	58153	ReturnStatement	return entry ;	127:2:3174:3186	58108	2	True				
ANR	58154	Identifier	entry		58108	0					
ANR	58155	ReturnType	static struct cached_dirfd *		58108	1					
ANR	58156	Identifier	lookup_cached_dirfd		58108	2					
ANR	58157	ParameterList	"struct cached_dirfd * dir , const char * name"		58108	3					
ANR	58158	Parameter	struct cached_dirfd * dir	115:49:2918:2941	58108	0	True				
ANR	58159	ParameterType	struct cached_dirfd *		58108	0					
ANR	58160	Identifier	dir		58108	1					
ANR	58161	Parameter	const char * name	115:75:2944:2959	58108	1	True				
ANR	58162	ParameterType	const char *		58108	0					
ANR	58163	Identifier	name		58108	1					
ANR	58164	CFGEntryNode	ENTRY		58108		True				
ANR	58165	CFGExitNode	EXIT		58108		True				
ANR	58166	Symbol	entry		58108						
ANR	58167	Symbol	& key		58108						
ANR	58168	Symbol	NULL		58108						
ANR	58169	Symbol	key . name		58108						
ANR	58170	Symbol	name		58108						
ANR	58171	Symbol	key . parent		58108						
ANR	58172	Symbol	hash_lookup		58108						
ANR	58173	Symbol	dir		58108						
ANR	58174	Symbol	cached_dirfds		58108						
ANR	58175	Symbol	key		58108						
ANR	58176	Function	remove_cached_dirfd	130:0:3191:3734							
ANR	58177	FunctionDef	remove_cached_dirfd (struct cached_dirfd * entry)		58176	0					
ANR	58178	CompoundStatement		131:0:3252:3734	58176	0					
ANR	58179	WhileStatement	while ( ! list_empty ( & entry -> children ) )		58176	0					
ANR	58180	Condition	! list_empty ( & entry -> children )	132:9:3263:3293	58176	0	True				
ANR	58181	UnaryOperationExpression	! list_empty ( & entry -> children )		58176	0					
ANR	58182	UnaryOperator	!		58176	0					
ANR	58183	CallExpression	list_empty ( & entry -> children )		58176	1					
ANR	58184	Callee	list_empty		58176	0					
ANR	58185	Identifier	list_empty		58176	0					
ANR	58186	ArgumentList	& entry -> children		58176	1					
ANR	58187	Argument	& entry -> children		58176	0					
ANR	58188	UnaryOperationExpression	& entry -> children		58176	0					
ANR	58189	UnaryOperator	&		58176	0					
ANR	58190	PtrMemberAccess	entry -> children		58176	1					
ANR	58191	Identifier	entry		58176	0					
ANR	58192	Identifier	children		58176	1					
ANR	58193	CompoundStatement		3:4:47:47	58176	1					
ANR	58194	Statement	struct	134:6:3308:3313	58176	0	True				
ANR	58195	Statement	cached_dirfd	134:13:3315:3326	58176	1	True				
ANR	58196	Statement	*	134:26:3328:3328	58176	2	True				
ANR	58197	Statement	child	134:27:3329:3333	58176	3	True				
ANR	58198	Statement	=	134:33:3335:3335	58176	4	True				
ANR	58199	Statement	list_entry	135:1:3338:3347	58176	5	True				
ANR	58200	Statement	(	135:12:3349:3349	58176	6	True				
ANR	58201	Statement	entry	135:13:3350:3354	58176	7	True				
ANR	58202	Statement	->	135:18:3355:3356	58176	8	True				
ANR	58203	Statement	children	135:20:3357:3364	58176	9	True				
ANR	58204	Statement	.	135:28:3365:3365	58176	10	True				
ANR	58205	Statement	next	135:29:3366:3369	58176	11	True				
ANR	58206	Statement	","	135:33:3370:3370	58176	12	True				
ANR	58207	Statement	struct	135:35:3372:3377	58176	13	True				
ANR	58208	Statement	cached_dirfd	135:42:3379:3390	58176	14	True				
ANR	58209	Statement	","	135:54:3391:3391	58176	15	True				
ANR	58210	Statement	children_link	135:56:3393:3405	58176	16	True				
ANR	58211	Statement	)	135:69:3406:3406	58176	17	True				
ANR	58212	ExpressionStatement		135:70:3407:3407	58176	18	True				
ANR	58213	ExpressionStatement	list_del_init ( & child -> children_link )	136:6:3415:3452	58176	19	True				
ANR	58214	CallExpression	list_del_init ( & child -> children_link )		58176	0					
ANR	58215	Callee	list_del_init		58176	0					
ANR	58216	Identifier	list_del_init		58176	0					
ANR	58217	ArgumentList	& child -> children_link		58176	1					
ANR	58218	Argument	& child -> children_link		58176	0					
ANR	58219	UnaryOperationExpression	& child -> children_link		58176	0					
ANR	58220	UnaryOperator	&		58176	0					
ANR	58221	PtrMemberAccess	child -> children_link		58176	1					
ANR	58222	Identifier	child		58176	0					
ANR	58223	Identifier	children_link		58176	1					
ANR	58224	ExpressionStatement	"hash_delete ( cached_dirfds , child )"	138:6:3517:3551	58176	20	True				
ANR	58225	CallExpression	"hash_delete ( cached_dirfds , child )"		58176	0					
ANR	58226	Callee	hash_delete		58176	0					
ANR	58227	Identifier	hash_delete		58176	0					
ANR	58228	ArgumentList	cached_dirfds		58176	1					
ANR	58229	Argument	cached_dirfds		58176	0					
ANR	58230	Identifier	cached_dirfds		58176	0					
ANR	58231	Argument	child		58176	1					
ANR	58232	Identifier	child		58176	0					
ANR	58233	ExpressionStatement	list_del ( & entry -> lru_link )	140:2:3589:3616	58176	1	True				
ANR	58234	CallExpression	list_del ( & entry -> lru_link )		58176	0					
ANR	58235	Callee	list_del		58176	0					
ANR	58236	Identifier	list_del		58176	0					
ANR	58237	ArgumentList	& entry -> lru_link		58176	1					
ANR	58238	Argument	& entry -> lru_link		58176	0					
ANR	58239	UnaryOperationExpression	& entry -> lru_link		58176	0					
ANR	58240	UnaryOperator	&		58176	0					
ANR	58241	PtrMemberAccess	entry -> lru_link		58176	1					
ANR	58242	Identifier	entry		58176	0					
ANR	58243	Identifier	lru_link		58176	1					
ANR	58244	ExpressionStatement	"hash_delete ( cached_dirfds , entry )"	141:2:3620:3654	58176	2	True				
ANR	58245	CallExpression	"hash_delete ( cached_dirfds , entry )"		58176	0					
ANR	58246	Callee	hash_delete		58176	0					
ANR	58247	Identifier	hash_delete		58176	0					
ANR	58248	ArgumentList	cached_dirfds		58176	1					
ANR	58249	Argument	cached_dirfds		58176	0					
ANR	58250	Identifier	cached_dirfds		58176	0					
ANR	58251	Argument	entry		58176	1					
ANR	58252	Identifier	entry		58176	0					
ANR	58253	ExpressionStatement	close ( entry -> fd )	142:2:3686:3703	58176	3	True				
ANR	58254	CallExpression	close ( entry -> fd )		58176	0					
ANR	58255	Callee	close		58176	0					
ANR	58256	Identifier	close		58176	0					
ANR	58257	ArgumentList	entry -> fd		58176	1					
ANR	58258	Argument	entry -> fd		58176	0					
ANR	58259	PtrMemberAccess	entry -> fd		58176	0					
ANR	58260	Identifier	entry		58176	0					
ANR	58261	Identifier	fd		58176	1					
ANR	58262	ExpressionStatement	free_cached_dirfd ( entry )	143:2:3707:3732	58176	4	True				
ANR	58263	CallExpression	free_cached_dirfd ( entry )		58176	0					
ANR	58264	Callee	free_cached_dirfd		58176	0					
ANR	58265	Identifier	free_cached_dirfd		58176	0					
ANR	58266	ArgumentList	entry		58176	1					
ANR	58267	Argument	entry		58176	0					
ANR	58268	Identifier	entry		58176	0					
ANR	58269	ReturnType	static void		58176	1					
ANR	58270	Identifier	remove_cached_dirfd		58176	2					
ANR	58271	ParameterList	struct cached_dirfd * entry		58176	3					
ANR	58272	Parameter	struct cached_dirfd * entry	130:33:3224:3249	58176	0	True				
ANR	58273	ParameterType	struct cached_dirfd *		58176	0					
ANR	58274	Identifier	entry		58176	1					
ANR	58275	CFGEntryNode	ENTRY		58176		True				
ANR	58276	CFGExitNode	EXIT		58176		True				
ANR	58277	Symbol	entry		58176						
ANR	58278	Symbol	& child -> children_link		58176						
ANR	58279	Symbol	& entry -> children		58176						
ANR	58280	Symbol	list_empty		58176						
ANR	58281	Symbol	entry -> fd		58176						
ANR	58282	Symbol	cached_dirfds		58176						
ANR	58283	Symbol	& entry -> lru_link		58176						
ANR	58284	Symbol	child		58176						
ANR	58285	Symbol	* entry		58176						
ANR	58286	Function	insert_cached_dirfd	146:0:3737:4478							
ANR	58287	FunctionDef	"insert_cached_dirfd (struct cached_dirfd * entry , int keepfd)"		58286	0					
ANR	58288	CompoundStatement		147:0:3810:4478	58286	0					
ANR	58289	IfStatement	if ( cached_dirfds == NULL )		58286	0					
ANR	58290	Condition	cached_dirfds == NULL	148:6:3818:3838	58286	0	True				
ANR	58291	EqualityExpression	cached_dirfds == NULL		58286	0		==			
ANR	58292	Identifier	cached_dirfds		58286	0					
ANR	58293	Identifier	NULL		58286	1					
ANR	58294	ExpressionStatement	init_dirfd_cache ( )	149:4:3845:3864	58286	1	True				
ANR	58295	CallExpression	init_dirfd_cache ( )		58286	0					
ANR	58296	Callee	init_dirfd_cache		58286	0					
ANR	58297	Identifier	init_dirfd_cache		58286	0					
ANR	58298	ArgumentList			58286	1					
ANR	58299	WhileStatement	while ( hash_get_n_entries ( cached_dirfds ) >= max_cached_fds )		58286	1					
ANR	58300	Condition	hash_get_n_entries ( cached_dirfds ) >= max_cached_fds	152:9:3925:3976	58286	0	True				
ANR	58301	RelationalExpression	hash_get_n_entries ( cached_dirfds ) >= max_cached_fds		58286	0		>=			
ANR	58302	CallExpression	hash_get_n_entries ( cached_dirfds )		58286	0					
ANR	58303	Callee	hash_get_n_entries		58286	0					
ANR	58304	Identifier	hash_get_n_entries		58286	0					
ANR	58305	ArgumentList	cached_dirfds		58286	1					
ANR	58306	Argument	cached_dirfds		58286	0					
ANR	58307	Identifier	cached_dirfds		58286	0					
ANR	58308	Identifier	max_cached_fds		58286	1					
ANR	58309	CompoundStatement		7:4:172:172	58286	1					
ANR	58310	Statement	struct	154:6:3991:3996	58286	0	True				
ANR	58311	Statement	cached_dirfd	154:13:3998:4009	58286	1	True				
ANR	58312	Statement	*	154:26:4011:4011	58286	2	True				
ANR	58313	Statement	last	154:27:4012:4015	58286	3	True				
ANR	58314	Statement	=	154:32:4017:4017	58286	4	True				
ANR	58315	Statement	list_entry	155:1:4020:4029	58286	5	True				
ANR	58316	Statement	(	155:12:4031:4031	58286	6	True				
ANR	58317	Statement	lru_list	155:13:4032:4039	58286	7	True				
ANR	58318	Statement	.	155:21:4040:4040	58286	8	True				
ANR	58319	Statement	prev	155:22:4041:4044	58286	9	True				
ANR	58320	Statement	","	155:26:4045:4045	58286	10	True				
ANR	58321	Statement	struct	155:28:4047:4052	58286	11	True				
ANR	58322	Statement	cached_dirfd	155:35:4054:4065	58286	12	True				
ANR	58323	Statement	","	155:47:4066:4066	58286	13	True				
ANR	58324	Statement	lru_link	155:49:4068:4075	58286	14	True				
ANR	58325	Statement	)	155:57:4076:4076	58286	15	True				
ANR	58326	ExpressionStatement		155:58:4077:4077	58286	16	True				
ANR	58327	IfStatement	if ( & last -> lru_link == & lru_list )		58286	17					
ANR	58328	Condition	& last -> lru_link == & lru_list	156:10:4089:4116	58286	0	True				
ANR	58329	EqualityExpression	& last -> lru_link == & lru_list		58286	0		==			
ANR	58330	UnaryOperationExpression	& last -> lru_link		58286	0					
ANR	58331	UnaryOperator	&		58286	0					
ANR	58332	PtrMemberAccess	last -> lru_link		58286	1					
ANR	58333	Identifier	last		58286	0					
ANR	58334	Identifier	lru_link		58286	1					
ANR	58335	UnaryOperationExpression	& lru_list		58286	1					
ANR	58336	UnaryOperator	&		58286	0					
ANR	58337	Identifier	lru_list		58286	1					
ANR	58338	BreakStatement	break ;	157:1:4120:4125	58286	1	True				
ANR	58339	IfStatement	if ( last -> fd == keepfd )		58286	18					
ANR	58340	Condition	last -> fd == keepfd	158:10:4137:4154	58286	0	True				
ANR	58341	EqualityExpression	last -> fd == keepfd		58286	0		==			
ANR	58342	PtrMemberAccess	last -> fd		58286	0					
ANR	58343	Identifier	last		58286	0					
ANR	58344	Identifier	fd		58286	1					
ANR	58345	Identifier	keepfd		58286	1					
ANR	58346	CompoundStatement		13:1:347:347	58286	1					
ANR	58347	Statement	last	160:3:4163:4166	58286	0	True				
ANR	58348	Statement	=	160:8:4168:4168	58286	1	True				
ANR	58349	Statement	list_entry	160:10:4170:4179	58286	2	True				
ANR	58350	Statement	(	160:21:4181:4181	58286	3	True				
ANR	58351	Statement	last	160:22:4182:4185	58286	4	True				
ANR	58352	Statement	->	160:26:4186:4187	58286	5	True				
ANR	58353	Statement	lru_link	160:28:4188:4195	58286	6	True				
ANR	58354	Statement	.	160:36:4196:4196	58286	7	True				
ANR	58355	Statement	prev	160:37:4197:4200	58286	8	True				
ANR	58356	Statement	","	160:41:4201:4201	58286	9	True				
ANR	58357	Statement	struct	160:43:4203:4208	58286	10	True				
ANR	58358	Statement	cached_dirfd	160:50:4210:4221	58286	11	True				
ANR	58359	Statement	","	160:62:4222:4222	58286	12	True				
ANR	58360	Statement	lru_link	160:64:4224:4231	58286	13	True				
ANR	58361	Statement	)	160:72:4232:4232	58286	14	True				
ANR	58362	ExpressionStatement		160:73:4233:4233	58286	15	True				
ANR	58363	IfStatement	if ( & last -> lru_link == & lru_list )		58286	16					
ANR	58364	Condition	& last -> lru_link == & lru_list	161:7:4242:4269	58286	0	True				
ANR	58365	EqualityExpression	& last -> lru_link == & lru_list		58286	0		==			
ANR	58366	UnaryOperationExpression	& last -> lru_link		58286	0					
ANR	58367	UnaryOperator	&		58286	0					
ANR	58368	PtrMemberAccess	last -> lru_link		58286	1					
ANR	58369	Identifier	last		58286	0					
ANR	58370	Identifier	lru_link		58286	1					
ANR	58371	UnaryOperationExpression	& lru_list		58286	1					
ANR	58372	UnaryOperator	&		58286	0					
ANR	58373	Identifier	lru_list		58286	1					
ANR	58374	BreakStatement	break ;	162:5:4277:4282	58286	1	True				
ANR	58375	ExpressionStatement	remove_cached_dirfd ( last )	164:6:4293:4319	58286	19	True				
ANR	58376	CallExpression	remove_cached_dirfd ( last )		58286	0					
ANR	58377	Callee	remove_cached_dirfd		58286	0					
ANR	58378	Identifier	remove_cached_dirfd		58286	0					
ANR	58379	ArgumentList	last		58286	1					
ANR	58380	Argument	last		58286	0					
ANR	58381	Identifier	last		58286	0					
ANR	58382	IfStatement	if ( ! list_empty ( & entry -> children_link ) )		58286	2					
ANR	58383	Condition	! list_empty ( & entry -> children_link )	168:6:4382:4417	58286	0	True				
ANR	58384	UnaryOperationExpression	! list_empty ( & entry -> children_link )		58286	0					
ANR	58385	UnaryOperator	!		58286	0					
ANR	58386	CallExpression	list_empty ( & entry -> children_link )		58286	1					
ANR	58387	Callee	list_empty		58286	0					
ANR	58388	Identifier	list_empty		58286	0					
ANR	58389	ArgumentList	& entry -> children_link		58286	1					
ANR	58390	Argument	& entry -> children_link		58286	0					
ANR	58391	UnaryOperationExpression	& entry -> children_link		58286	0					
ANR	58392	UnaryOperator	&		58286	0					
ANR	58393	PtrMemberAccess	entry -> children_link		58286	1					
ANR	58394	Identifier	entry		58286	0					
ANR	58395	Identifier	children_link		58286	1					
ANR	58396	ExpressionStatement	"assert ( hash_insert ( cached_dirfds , entry ) == entry )"	169:4:4424:4476	58286	1	True				
ANR	58397	CallExpression	"assert ( hash_insert ( cached_dirfds , entry ) == entry )"		58286	0					
ANR	58398	Callee	assert		58286	0					
ANR	58399	Identifier	assert		58286	0					
ANR	58400	ArgumentList	"hash_insert ( cached_dirfds , entry ) == entry"		58286	1					
ANR	58401	Argument	"hash_insert ( cached_dirfds , entry ) == entry"		58286	0					
ANR	58402	EqualityExpression	"hash_insert ( cached_dirfds , entry ) == entry"		58286	0		==			
ANR	58403	CallExpression	"hash_insert ( cached_dirfds , entry )"		58286	0					
ANR	58404	Callee	hash_insert		58286	0					
ANR	58405	Identifier	hash_insert		58286	0					
ANR	58406	ArgumentList	cached_dirfds		58286	1					
ANR	58407	Argument	cached_dirfds		58286	0					
ANR	58408	Identifier	cached_dirfds		58286	0					
ANR	58409	Argument	entry		58286	1					
ANR	58410	Identifier	entry		58286	0					
ANR	58411	Identifier	entry		58286	1					
ANR	58412	ReturnType	static void		58286	1					
ANR	58413	Identifier	insert_cached_dirfd		58286	2					
ANR	58414	ParameterList	"struct cached_dirfd * entry , int keepfd"		58286	3					
ANR	58415	Parameter	struct cached_dirfd * entry	146:33:3770:3795	58286	0	True				
ANR	58416	ParameterType	struct cached_dirfd *		58286	0					
ANR	58417	Identifier	entry		58286	1					
ANR	58418	Parameter	int keepfd	146:61:3798:3807	58286	1	True				
ANR	58419	ParameterType	int		58286	0					
ANR	58420	Identifier	keepfd		58286	1					
ANR	58421	CFGEntryNode	ENTRY		58286		True				
ANR	58422	CFGExitNode	EXIT		58286		True				
ANR	58423	Symbol	& last -> lru_link		58286						
ANR	58424	Symbol	NULL		58286						
ANR	58425	Symbol	max_cached_fds		58286						
ANR	58426	Symbol	last		58286						
ANR	58427	Symbol	& lru_list		58286						
ANR	58428	Symbol	hash_get_n_entries		58286						
ANR	58429	Symbol	list_empty		58286						
ANR	58430	Symbol	cached_dirfds		58286						
ANR	58431	Symbol	* last		58286						
ANR	58432	Symbol	entry		58286						
ANR	58433	Symbol	keepfd		58286						
ANR	58434	Symbol	last -> fd		58286						
ANR	58435	Symbol	& entry -> children_link		58286						
ANR	58436	Symbol	hash_insert		58286						
ANR	58437	Function	invalidate_cached_dirfd	172:0:4481:4782							
ANR	58438	FunctionDef	"invalidate_cached_dirfd (int dirfd , const char * name)"		58437	0					
ANR	58439	CompoundStatement		173:0:4547:4782	58437	0					
ANR	58440	IdentifierDeclStatement	"struct cached_dirfd dir , key , * entry ;"	174:2:4551:4587	58437	0	True				
ANR	58441	IdentifierDecl	dir		58437	0					
ANR	58442	IdentifierDeclType	struct cached_dirfd		58437	0					
ANR	58443	Identifier	dir		58437	1					
ANR	58444	IdentifierDecl	key		58437	1					
ANR	58445	IdentifierDeclType	struct cached_dirfd		58437	0					
ANR	58446	Identifier	key		58437	1					
ANR	58447	IdentifierDecl	* entry		58437	2					
ANR	58448	IdentifierDeclType	struct cached_dirfd *		58437	0					
ANR	58449	Identifier	entry		58437	1					
ANR	58450	IfStatement	if ( ! cached_dirfds )		58437	1					
ANR	58451	Condition	! cached_dirfds	175:6:4595:4608	58437	0	True				
ANR	58452	UnaryOperationExpression	! cached_dirfds		58437	0					
ANR	58453	UnaryOperator	!		58437	0					
ANR	58454	Identifier	cached_dirfds		58437	1					
ANR	58455	ReturnStatement	return ;	176:4:4615:4621	58437	1	True				
ANR	58456	ExpressionStatement	dir . fd = dirfd	178:2:4626:4640	58437	2	True				
ANR	58457	AssignmentExpression	dir . fd = dirfd		58437	0		=			
ANR	58458	MemberAccess	dir . fd		58437	0					
ANR	58459	Identifier	dir		58437	0					
ANR	58460	Identifier	fd		58437	1					
ANR	58461	Identifier	dirfd		58437	1					
ANR	58462	ExpressionStatement	key . parent = & dir	179:2:4644:4661	58437	3	True				
ANR	58463	AssignmentExpression	key . parent = & dir		58437	0		=			
ANR	58464	MemberAccess	key . parent		58437	0					
ANR	58465	Identifier	key		58437	0					
ANR	58466	Identifier	parent		58437	1					
ANR	58467	UnaryOperationExpression	& dir		58437	1					
ANR	58468	UnaryOperator	&		58437	0					
ANR	58469	Identifier	dir		58437	1					
ANR	58470	ExpressionStatement	key . name = ( char * ) name	180:2:4665:4689	58437	4	True				
ANR	58471	AssignmentExpression	key . name = ( char * ) name		58437	0		=			
ANR	58472	MemberAccess	key . name		58437	0					
ANR	58473	Identifier	key		58437	0					
ANR	58474	Identifier	name		58437	1					
ANR	58475	CastExpression	( char * ) name		58437	1					
ANR	58476	CastTarget	char *		58437	0					
ANR	58477	Identifier	name		58437	1					
ANR	58478	ExpressionStatement	"entry = hash_lookup ( cached_dirfds , & key )"	181:2:4693:4734	58437	5	True				
ANR	58479	AssignmentExpression	"entry = hash_lookup ( cached_dirfds , & key )"		58437	0		=			
ANR	58480	Identifier	entry		58437	0					
ANR	58481	CallExpression	"hash_lookup ( cached_dirfds , & key )"		58437	1					
ANR	58482	Callee	hash_lookup		58437	0					
ANR	58483	Identifier	hash_lookup		58437	0					
ANR	58484	ArgumentList	cached_dirfds		58437	1					
ANR	58485	Argument	cached_dirfds		58437	0					
ANR	58486	Identifier	cached_dirfds		58437	0					
ANR	58487	Argument	& key		58437	1					
ANR	58488	UnaryOperationExpression	& key		58437	0					
ANR	58489	UnaryOperator	&		58437	0					
ANR	58490	Identifier	key		58437	1					
ANR	58491	IfStatement	if ( entry )		58437	6					
ANR	58492	Condition	entry	182:6:4742:4746	58437	0	True				
ANR	58493	Identifier	entry		58437	0					
ANR	58494	ExpressionStatement	remove_cached_dirfd ( entry )	183:4:4753:4780	58437	1	True				
ANR	58495	CallExpression	remove_cached_dirfd ( entry )		58437	0					
ANR	58496	Callee	remove_cached_dirfd		58437	0					
ANR	58497	Identifier	remove_cached_dirfd		58437	0					
ANR	58498	ArgumentList	entry		58437	1					
ANR	58499	Argument	entry		58437	0					
ANR	58500	Identifier	entry		58437	0					
ANR	58501	ReturnType	static void		58437	1					
ANR	58502	Identifier	invalidate_cached_dirfd		58437	2					
ANR	58503	ParameterList	"int dirfd , const char * name"		58437	3					
ANR	58504	Parameter	int dirfd	172:37:4518:4526	58437	0	True				
ANR	58505	ParameterType	int		58437	0					
ANR	58506	Identifier	dirfd		58437	1					
ANR	58507	Parameter	const char * name	172:48:4529:4544	58437	1	True				
ANR	58508	ParameterType	const char *		58437	0					
ANR	58509	Identifier	name		58437	1					
ANR	58510	CFGEntryNode	ENTRY		58437		True				
ANR	58511	CFGExitNode	EXIT		58437		True				
ANR	58512	Symbol	entry		58437						
ANR	58513	Symbol	& key		58437						
ANR	58514	Symbol	key . name		58437						
ANR	58515	Symbol	& dir		58437						
ANR	58516	Symbol	dir . fd		58437						
ANR	58517	Symbol	name		58437						
ANR	58518	Symbol	dirfd		58437						
ANR	58519	Symbol	key . parent		58437						
ANR	58520	Symbol	hash_lookup		58437						
ANR	58521	Symbol	dir		58437						
ANR	58522	Symbol	cached_dirfds		58437						
ANR	58523	Symbol	key		58437						
ANR	58524	Function	put_path	188:0:4888:5151							
ANR	58525	FunctionDef	put_path (struct cached_dirfd * entry)		58524	0					
ANR	58526	CompoundStatement		189:0:4937:5151	58524	0					
ANR	58527	IdentifierDeclStatement	int fd = entry -> fd ;	190:2:4941:4959	58524	0	True				
ANR	58528	IdentifierDecl	fd = entry -> fd		58524	0					
ANR	58529	IdentifierDeclType	int		58524	0					
ANR	58530	Identifier	fd		58524	1					
ANR	58531	AssignmentExpression	fd = entry -> fd		58524	2		=			
ANR	58532	Identifier	fd		58524	0					
ANR	58533	PtrMemberAccess	entry -> fd		58524	1					
ANR	58534	Identifier	entry		58524	0					
ANR	58535	Identifier	fd		58524	1					
ANR	58536	WhileStatement	while ( entry )		58524	1					
ANR	58537	Condition	entry	192:9:4971:4975	58524	0	True				
ANR	58538	Identifier	entry		58524	0					
ANR	58539	CompoundStatement		6:6:52:95	58524	1					
ANR	58540	IdentifierDeclStatement	struct cached_dirfd * parent = entry -> parent ;	194:6:4990:5033	58524	0	True				
ANR	58541	IdentifierDecl	* parent = entry -> parent		58524	0					
ANR	58542	IdentifierDeclType	struct cached_dirfd *		58524	0					
ANR	58543	Identifier	parent		58524	1					
ANR	58544	AssignmentExpression	* parent = entry -> parent		58524	2		=			
ANR	58545	Identifier	parent		58524	0					
ANR	58546	PtrMemberAccess	entry -> parent		58524	1					
ANR	58547	Identifier	entry		58524	0					
ANR	58548	Identifier	parent		58524	1					
ANR	58549	IfStatement	if ( ! parent )		58524	1					
ANR	58550	Condition	! parent	195:10:5045:5052	58524	0	True				
ANR	58551	UnaryOperationExpression	! parent		58524	0					
ANR	58552	UnaryOperator	!		58524	0					
ANR	58553	Identifier	parent		58524	1					
ANR	58554	BreakStatement	break ;	196:1:5056:5061	58524	1	True				
ANR	58555	ExpressionStatement	"list_add ( & entry -> lru_link , & lru_list )"	197:6:5069:5107	58524	2	True				
ANR	58556	CallExpression	"list_add ( & entry -> lru_link , & lru_list )"		58524	0					
ANR	58557	Callee	list_add		58524	0					
ANR	58558	Identifier	list_add		58524	0					
ANR	58559	ArgumentList	& entry -> lru_link		58524	1					
ANR	58560	Argument	& entry -> lru_link		58524	0					
ANR	58561	UnaryOperationExpression	& entry -> lru_link		58524	0					
ANR	58562	UnaryOperator	&		58524	0					
ANR	58563	PtrMemberAccess	entry -> lru_link		58524	1					
ANR	58564	Identifier	entry		58524	0					
ANR	58565	Identifier	lru_link		58524	1					
ANR	58566	Argument	& lru_list		58524	1					
ANR	58567	UnaryOperationExpression	& lru_list		58524	0					
ANR	58568	UnaryOperator	&		58524	0					
ANR	58569	Identifier	lru_list		58524	1					
ANR	58570	ExpressionStatement	entry = parent	198:6:5115:5129	58524	3	True				
ANR	58571	AssignmentExpression	entry = parent		58524	0		=			
ANR	58572	Identifier	entry		58524	0					
ANR	58573	Identifier	parent		58524	1					
ANR	58574	ReturnStatement	return fd ;	201:2:5140:5149	58524	2	True				
ANR	58575	Identifier	fd		58524	0					
ANR	58576	ReturnType	static int		58524	1					
ANR	58577	Identifier	put_path		58524	2					
ANR	58578	ParameterList	struct cached_dirfd * entry		58524	3					
ANR	58579	Parameter	struct cached_dirfd * entry	188:21:4909:4934	58524	0	True				
ANR	58580	ParameterType	struct cached_dirfd *		58524	0					
ANR	58581	Identifier	entry		58524	1					
ANR	58582	CFGEntryNode	ENTRY		58524		True				
ANR	58583	CFGExitNode	EXIT		58524		True				
ANR	58584	Symbol	entry		58524						
ANR	58585	Symbol	parent		58524						
ANR	58586	Symbol	& lru_list		58524						
ANR	58587	Symbol	entry -> fd		58524						
ANR	58588	Symbol	entry -> parent		58524						
ANR	58589	Symbol	fd		58524						
ANR	58590	Symbol	& entry -> lru_link		58524						
ANR	58591	Symbol	* entry		58524						
ANR	58592	Function	new_cached_dirfd	204:0:5154:5541							
ANR	58593	FunctionDef	"new_cached_dirfd (struct cached_dirfd * dir , const char * name , int fd)"		58592	0					
ANR	58594	CompoundStatement		205:0:5252:5541	58592	0					
ANR	58595	IdentifierDeclStatement	struct cached_dirfd * entry = xmalloc ( sizeof ( struct cached_dirfd ) ) ;	206:2:5256:5323	58592	0	True				
ANR	58596	IdentifierDecl	* entry = xmalloc ( sizeof ( struct cached_dirfd ) )		58592	0					
ANR	58597	IdentifierDeclType	struct cached_dirfd *		58592	0					
ANR	58598	Identifier	entry		58592	1					
ANR	58599	AssignmentExpression	* entry = xmalloc ( sizeof ( struct cached_dirfd ) )		58592	2		=			
ANR	58600	Identifier	entry		58592	0					
ANR	58601	CallExpression	xmalloc ( sizeof ( struct cached_dirfd ) )		58592	1					
ANR	58602	Callee	xmalloc		58592	0					
ANR	58603	Identifier	xmalloc		58592	0					
ANR	58604	ArgumentList	sizeof ( struct cached_dirfd )		58592	1					
ANR	58605	Argument	sizeof ( struct cached_dirfd )		58592	0					
ANR	58606	SizeofExpression	sizeof ( struct cached_dirfd )		58592	0					
ANR	58607	Sizeof	sizeof		58592	0					
ANR	58608	SizeofOperand	struct cached_dirfd		58592	1					
ANR	58609	ExpressionStatement	INIT_LIST_HEAD ( & entry -> lru_link )	208:2:5328:5361	58592	1	True				
ANR	58610	CallExpression	INIT_LIST_HEAD ( & entry -> lru_link )		58592	0					
ANR	58611	Callee	INIT_LIST_HEAD		58592	0					
ANR	58612	Identifier	INIT_LIST_HEAD		58592	0					
ANR	58613	ArgumentList	& entry -> lru_link		58592	1					
ANR	58614	Argument	& entry -> lru_link		58592	0					
ANR	58615	UnaryOperationExpression	& entry -> lru_link		58592	0					
ANR	58616	UnaryOperator	&		58592	0					
ANR	58617	PtrMemberAccess	entry -> lru_link		58592	1					
ANR	58618	Identifier	entry		58592	0					
ANR	58619	Identifier	lru_link		58592	1					
ANR	58620	ExpressionStatement	"list_add ( & entry -> children_link , & dir -> children )"	209:2:5365:5413	58592	2	True				
ANR	58621	CallExpression	"list_add ( & entry -> children_link , & dir -> children )"		58592	0					
ANR	58622	Callee	list_add		58592	0					
ANR	58623	Identifier	list_add		58592	0					
ANR	58624	ArgumentList	& entry -> children_link		58592	1					
ANR	58625	Argument	& entry -> children_link		58592	0					
ANR	58626	UnaryOperationExpression	& entry -> children_link		58592	0					
ANR	58627	UnaryOperator	&		58592	0					
ANR	58628	PtrMemberAccess	entry -> children_link		58592	1					
ANR	58629	Identifier	entry		58592	0					
ANR	58630	Identifier	children_link		58592	1					
ANR	58631	Argument	& dir -> children		58592	1					
ANR	58632	UnaryOperationExpression	& dir -> children		58592	0					
ANR	58633	UnaryOperator	&		58592	0					
ANR	58634	PtrMemberAccess	dir -> children		58592	1					
ANR	58635	Identifier	dir		58592	0					
ANR	58636	Identifier	children		58592	1					
ANR	58637	ExpressionStatement	INIT_LIST_HEAD ( & entry -> children )	210:2:5417:5450	58592	3	True				
ANR	58638	CallExpression	INIT_LIST_HEAD ( & entry -> children )		58592	0					
ANR	58639	Callee	INIT_LIST_HEAD		58592	0					
ANR	58640	Identifier	INIT_LIST_HEAD		58592	0					
ANR	58641	ArgumentList	& entry -> children		58592	1					
ANR	58642	Argument	& entry -> children		58592	0					
ANR	58643	UnaryOperationExpression	& entry -> children		58592	0					
ANR	58644	UnaryOperator	&		58592	0					
ANR	58645	PtrMemberAccess	entry -> children		58592	1					
ANR	58646	Identifier	entry		58592	0					
ANR	58647	Identifier	children		58592	1					
ANR	58648	ExpressionStatement	entry -> parent = dir	211:2:5454:5473	58592	4	True				
ANR	58649	AssignmentExpression	entry -> parent = dir		58592	0		=			
ANR	58650	PtrMemberAccess	entry -> parent		58592	0					
ANR	58651	Identifier	entry		58592	0					
ANR	58652	Identifier	parent		58592	1					
ANR	58653	Identifier	dir		58592	1					
ANR	58654	ExpressionStatement	entry -> name = xstrdup ( name )	212:2:5477:5505	58592	5	True				
ANR	58655	AssignmentExpression	entry -> name = xstrdup ( name )		58592	0		=			
ANR	58656	PtrMemberAccess	entry -> name		58592	0					
ANR	58657	Identifier	entry		58592	0					
ANR	58658	Identifier	name		58592	1					
ANR	58659	CallExpression	xstrdup ( name )		58592	1					
ANR	58660	Callee	xstrdup		58592	0					
ANR	58661	Identifier	xstrdup		58592	0					
ANR	58662	ArgumentList	name		58592	1					
ANR	58663	Argument	name		58592	0					
ANR	58664	Identifier	name		58592	0					
ANR	58665	ExpressionStatement	entry -> fd = fd	213:2:5509:5523	58592	6	True				
ANR	58666	AssignmentExpression	entry -> fd = fd		58592	0		=			
ANR	58667	PtrMemberAccess	entry -> fd		58592	0					
ANR	58668	Identifier	entry		58592	0					
ANR	58669	Identifier	fd		58592	1					
ANR	58670	Identifier	fd		58592	1					
ANR	58671	ReturnStatement	return entry ;	214:2:5527:5539	58592	7	True				
ANR	58672	Identifier	entry		58592	0					
ANR	58673	ReturnType	static struct cached_dirfd *		58592	1					
ANR	58674	Identifier	new_cached_dirfd		58592	2					
ANR	58675	ParameterList	"struct cached_dirfd * dir , const char * name , int fd"		58592	3					
ANR	58676	Parameter	struct cached_dirfd * dir	204:46:5200:5223	58592	0	True				
ANR	58677	ParameterType	struct cached_dirfd *		58592	0					
ANR	58678	Identifier	dir		58592	1					
ANR	58679	Parameter	const char * name	204:72:5226:5241	58592	1	True				
ANR	58680	ParameterType	const char *		58592	0					
ANR	58681	Identifier	name		58592	1					
ANR	58682	Parameter	int fd	204:90:5244:5249	58592	2	True				
ANR	58683	ParameterType	int		58592	0					
ANR	58684	Identifier	fd		58592	1					
ANR	58685	CFGEntryNode	ENTRY		58592		True				
ANR	58686	CFGExitNode	EXIT		58592		True				
ANR	58687	Symbol	& dir -> children		58592						
ANR	58688	Symbol	& entry -> children		58592						
ANR	58689	Symbol	xstrdup		58592						
ANR	58690	Symbol	entry -> parent		58592						
ANR	58691	Symbol	entry -> fd		58592						
ANR	58692	Symbol	dir		58592						
ANR	58693	Symbol	entry		58592						
ANR	58694	Symbol	xmalloc		58592						
ANR	58695	Symbol	name		58592						
ANR	58696	Symbol	entry -> name		58592						
ANR	58697	Symbol	& entry -> children_link		58592						
ANR	58698	Symbol	fd		58592						
ANR	58699	Symbol	& entry -> lru_link		58592						
ANR	58700	Symbol	* entry		58592						
ANR	58701	Function	openat_cached	217:0:5544:6221							
ANR	58702	FunctionDef	"openat_cached (struct cached_dirfd * dir , const char * name , int keepfd)"		58701	0					
ANR	58703	CompoundStatement		218:0:5643:6221	58701	0					
ANR	58704	IdentifierDeclStatement	int fd ;	219:2:5647:5653	58701	0	True				
ANR	58705	IdentifierDecl	fd		58701	0					
ANR	58706	IdentifierDeclType	int		58701	0					
ANR	58707	Identifier	fd		58701	1					
ANR	58708	IdentifierDeclStatement	"struct cached_dirfd * entry = lookup_cached_dirfd ( dir , name ) ;"	220:2:5657:5717	58701	1	True				
ANR	58709	IdentifierDecl	"* entry = lookup_cached_dirfd ( dir , name )"		58701	0					
ANR	58710	IdentifierDeclType	struct cached_dirfd *		58701	0					
ANR	58711	Identifier	entry		58701	1					
ANR	58712	AssignmentExpression	"* entry = lookup_cached_dirfd ( dir , name )"		58701	2		=			
ANR	58713	Identifier	entry		58701	0					
ANR	58714	CallExpression	"lookup_cached_dirfd ( dir , name )"		58701	1					
ANR	58715	Callee	lookup_cached_dirfd		58701	0					
ANR	58716	Identifier	lookup_cached_dirfd		58701	0					
ANR	58717	ArgumentList	dir		58701	1					
ANR	58718	Argument	dir		58701	0					
ANR	58719	Identifier	dir		58701	0					
ANR	58720	Argument	name		58701	1					
ANR	58721	Identifier	name		58701	0					
ANR	58722	IfStatement	if ( entry )		58701	2					
ANR	58723	Condition	entry	222:6:5726:5730	58701	0	True				
ANR	58724	Identifier	entry		58701	0					
ANR	58725	CompoundStatement		6:4:93:93	58701	1					
ANR	58726	ExpressionStatement	list_del_init ( & entry -> lru_link )	224:6:5745:5777	58701	0	True				
ANR	58727	CallExpression	list_del_init ( & entry -> lru_link )		58701	0					
ANR	58728	Callee	list_del_init		58701	0					
ANR	58729	Identifier	list_del_init		58701	0					
ANR	58730	ArgumentList	& entry -> lru_link		58701	1					
ANR	58731	Argument	& entry -> lru_link		58701	0					
ANR	58732	UnaryOperationExpression	& entry -> lru_link		58701	0					
ANR	58733	UnaryOperator	&		58701	0					
ANR	58734	PtrMemberAccess	entry -> lru_link		58701	1					
ANR	58735	Identifier	entry		58701	0					
ANR	58736	Identifier	lru_link		58701	1					
ANR	58737	GotoStatement	goto out ;	226:6:5837:5845	58701	1	True				
ANR	58738	Identifier	out		58701	0					
ANR	58739	ExpressionStatement	dirfd_cache_misses ++	228:2:5855:5875	58701	3	True				
ANR	58740	PostIncDecOperationExpression	dirfd_cache_misses ++		58701	0					
ANR	58741	Identifier	dirfd_cache_misses		58701	0					
ANR	58742	IncDec	++		58701	1					
ANR	58743	ExpressionStatement	"fd = openat ( dir -> fd , name , O_DIRECTORY | O_NOFOLLOW )"	232:2:5970:6023	58701	4	True				
ANR	58744	AssignmentExpression	"fd = openat ( dir -> fd , name , O_DIRECTORY | O_NOFOLLOW )"		58701	0		=			
ANR	58745	Identifier	fd		58701	0					
ANR	58746	CallExpression	"openat ( dir -> fd , name , O_DIRECTORY | O_NOFOLLOW )"		58701	1					
ANR	58747	Callee	openat		58701	0					
ANR	58748	Identifier	openat		58701	0					
ANR	58749	ArgumentList	dir -> fd		58701	1					
ANR	58750	Argument	dir -> fd		58701	0					
ANR	58751	PtrMemberAccess	dir -> fd		58701	0					
ANR	58752	Identifier	dir		58701	0					
ANR	58753	Identifier	fd		58701	1					
ANR	58754	Argument	name		58701	1					
ANR	58755	Identifier	name		58701	0					
ANR	58756	Argument	O_DIRECTORY | O_NOFOLLOW		58701	2					
ANR	58757	InclusiveOrExpression	O_DIRECTORY | O_NOFOLLOW		58701	0		|			
ANR	58758	Identifier	O_DIRECTORY		58701	0					
ANR	58759	Identifier	O_NOFOLLOW		58701	1					
ANR	58760	IfStatement	if ( fd < 0 )		58701	5					
ANR	58761	Condition	fd < 0	235:6:6060:6065	58701	0	True				
ANR	58762	RelationalExpression	fd < 0		58701	0		<			
ANR	58763	Identifier	fd		58701	0					
ANR	58764	PrimaryExpression	0		58701	1					
ANR	58765	ReturnStatement	return NULL ;	236:4:6072:6083	58701	1	True				
ANR	58766	Identifier	NULL		58701	0					
ANR	58767	ExpressionStatement	"entry = new_cached_dirfd ( dir , name , fd )"	239:2:6118:6158	58701	6	True				
ANR	58768	AssignmentExpression	"entry = new_cached_dirfd ( dir , name , fd )"		58701	0		=			
ANR	58769	Identifier	entry		58701	0					
ANR	58770	CallExpression	"new_cached_dirfd ( dir , name , fd )"		58701	1					
ANR	58771	Callee	new_cached_dirfd		58701	0					
ANR	58772	Identifier	new_cached_dirfd		58701	0					
ANR	58773	ArgumentList	dir		58701	1					
ANR	58774	Argument	dir		58701	0					
ANR	58775	Identifier	dir		58701	0					
ANR	58776	Argument	name		58701	1					
ANR	58777	Identifier	name		58701	0					
ANR	58778	Argument	fd		58701	2					
ANR	58779	Identifier	fd		58701	0					
ANR	58780	ExpressionStatement	"insert_cached_dirfd ( entry , keepfd )"	240:2:6162:6197	58701	7	True				
ANR	58781	CallExpression	"insert_cached_dirfd ( entry , keepfd )"		58701	0					
ANR	58782	Callee	insert_cached_dirfd		58701	0					
ANR	58783	Identifier	insert_cached_dirfd		58701	0					
ANR	58784	ArgumentList	entry		58701	1					
ANR	58785	Argument	entry		58701	0					
ANR	58786	Identifier	entry		58701	0					
ANR	58787	Argument	keepfd		58701	1					
ANR	58788	Identifier	keepfd		58701	0					
ANR	58789	Label	out :	242:0:6200:6203	58701	8	True				
ANR	58790	Identifier	out		58701	0					
ANR	58791	ReturnStatement	return entry ;	243:2:6207:6219	58701	9	True				
ANR	58792	Identifier	entry		58701	0					
ANR	58793	ReturnType	static struct cached_dirfd *		58701	1					
ANR	58794	Identifier	openat_cached		58701	2					
ANR	58795	ParameterList	"struct cached_dirfd * dir , const char * name , int keepfd"		58701	3					
ANR	58796	Parameter	struct cached_dirfd * dir	217:43:5587:5610	58701	0	True				
ANR	58797	ParameterType	struct cached_dirfd *		58701	0					
ANR	58798	Identifier	dir		58701	1					
ANR	58799	Parameter	const char * name	217:69:5613:5628	58701	1	True				
ANR	58800	ParameterType	const char *		58701	0					
ANR	58801	Identifier	name		58701	1					
ANR	58802	Parameter	int keepfd	217:87:5631:5640	58701	2	True				
ANR	58803	ParameterType	int		58701	0					
ANR	58804	Identifier	keepfd		58701	1					
ANR	58805	CFGEntryNode	ENTRY		58701		True				
ANR	58806	CFGExitNode	EXIT		58701		True				
ANR	58807	Symbol	lookup_cached_dirfd		58701						
ANR	58808	Symbol	NULL		58701						
ANR	58809	Symbol	dirfd_cache_misses		58701						
ANR	58810	Symbol	O_NOFOLLOW		58701						
ANR	58811	Symbol	* dir		58701						
ANR	58812	Symbol	dir		58701						
ANR	58813	Symbol	entry		58701						
ANR	58814	Symbol	O_DIRECTORY		58701						
ANR	58815	Symbol	new_cached_dirfd		58701						
ANR	58816	Symbol	dir -> fd		58701						
ANR	58817	Symbol	keepfd		58701						
ANR	58818	Symbol	name		58701						
ANR	58819	Symbol	fd		58701						
ANR	58820	Symbol	& entry -> lru_link		58701						
ANR	58821	Symbol	openat		58701						
ANR	58822	Function	count_path_components	247:0:6243:6567							
ANR	58823	FunctionDef	count_path_components (const char * path)		58822	0					
ANR	58824	CompoundStatement		248:0:6304:6567	58822	0					
ANR	58825	IdentifierDeclStatement	unsigned int components ;	249:2:6308:6331	58822	0	True				
ANR	58826	IdentifierDecl	components		58822	0					
ANR	58827	IdentifierDeclType	unsigned int		58822	0					
ANR	58828	Identifier	components		58822	1					
ANR	58829	WhileStatement	while ( ISSLASH ( * path ) )		58822	1					
ANR	58830	Condition	ISSLASH ( * path )	251:9:6343:6357	58822	0	True				
ANR	58831	CallExpression	ISSLASH ( * path )		58822	0					
ANR	58832	Callee	ISSLASH		58822	0					
ANR	58833	Identifier	ISSLASH		58822	0					
ANR	58834	ArgumentList	* path		58822	1					
ANR	58835	Argument	* path		58822	0					
ANR	58836	UnaryOperationExpression	* path		58822	0					
ANR	58837	UnaryOperator	*		58822	0					
ANR	58838	Identifier	path		58822	1					
ANR	58839	ExpressionStatement	path ++	252:4:6364:6370	58822	1	True				
ANR	58840	PostIncDecOperationExpression	path ++		58822	0					
ANR	58841	Identifier	path		58822	0					
ANR	58842	IncDec	++		58822	1					
ANR	58843	IfStatement	if ( ! * path )		58822	2					
ANR	58844	Condition	! * path	253:6:6378:6384	58822	0	True				
ANR	58845	UnaryOperationExpression	! * path		58822	0					
ANR	58846	UnaryOperator	!		58822	0					
ANR	58847	UnaryOperationExpression	* path		58822	1					
ANR	58848	UnaryOperator	*		58822	0					
ANR	58849	Identifier	path		58822	1					
ANR	58850	ReturnStatement	return 1 ;	254:4:6391:6399	58822	1	True				
ANR	58851	PrimaryExpression	1		58822	0					
ANR	58852	ForStatement	for ( components = 0 ; * path ; components ++ )		58822	3					
ANR	58853	ForInit	components = 0 ;	255:7:6408:6422	58822	0	True				
ANR	58854	AssignmentExpression	components = 0		58822	0		=			
ANR	58855	Identifier	components		58822	0					
ANR	58856	PrimaryExpression	0		58822	1					
ANR	58857	Condition	* path	255:23:6424:6428	58822	1	True				
ANR	58858	UnaryOperationExpression	* path		58822	0					
ANR	58859	UnaryOperator	*		58822	0					
ANR	58860	Identifier	path		58822	1					
ANR	58861	PostIncDecOperationExpression	components ++	255:30:6431:6442	58822	2	True				
ANR	58862	Identifier	components		58822	0					
ANR	58863	IncDec	++		58822	1					
ANR	58864	CompoundStatement		9:4:144:144	58822	3					
ANR	58865	WhileStatement	while ( * path && ! ISSLASH ( * path ) )		58822	0					
ANR	58866	Condition	* path && ! ISSLASH ( * path )	257:13:6464:6489	58822	0	True				
ANR	58867	AndExpression	* path && ! ISSLASH ( * path )		58822	0		&&			
ANR	58868	UnaryOperationExpression	* path		58822	0					
ANR	58869	UnaryOperator	*		58822	0					
ANR	58870	Identifier	path		58822	1					
ANR	58871	UnaryOperationExpression	! ISSLASH ( * path )		58822	1					
ANR	58872	UnaryOperator	!		58822	0					
ANR	58873	CallExpression	ISSLASH ( * path )		58822	1					
ANR	58874	Callee	ISSLASH		58822	0					
ANR	58875	Identifier	ISSLASH		58822	0					
ANR	58876	ArgumentList	* path		58822	1					
ANR	58877	Argument	* path		58822	0					
ANR	58878	UnaryOperationExpression	* path		58822	0					
ANR	58879	UnaryOperator	*		58822	0					
ANR	58880	Identifier	path		58822	1					
ANR	58881	ExpressionStatement	path ++	258:1:6493:6499	58822	1	True				
ANR	58882	PostIncDecOperationExpression	path ++		58822	0					
ANR	58883	Identifier	path		58822	0					
ANR	58884	IncDec	++		58822	1					
ANR	58885	WhileStatement	while ( ISSLASH ( * path ) )		58822	1					
ANR	58886	Condition	ISSLASH ( * path )	259:13:6514:6528	58822	0	True				
ANR	58887	CallExpression	ISSLASH ( * path )		58822	0					
ANR	58888	Callee	ISSLASH		58822	0					
ANR	58889	Identifier	ISSLASH		58822	0					
ANR	58890	ArgumentList	* path		58822	1					
ANR	58891	Argument	* path		58822	0					
ANR	58892	UnaryOperationExpression	* path		58822	0					
ANR	58893	UnaryOperator	*		58822	0					
ANR	58894	Identifier	path		58822	1					
ANR	58895	ExpressionStatement	path ++	260:1:6532:6538	58822	1	True				
ANR	58896	PostIncDecOperationExpression	path ++		58822	0					
ANR	58897	Identifier	path		58822	0					
ANR	58898	IncDec	++		58822	1					
ANR	58899	ReturnStatement	return components ;	262:2:6548:6565	58822	4	True				
ANR	58900	Identifier	components		58822	0					
ANR	58901	ReturnType	static unsigned int		58822	1					
ANR	58902	Identifier	count_path_components		58822	2					
ANR	58903	ParameterList	const char * path		58822	3					
ANR	58904	Parameter	const char * path	247:43:6286:6301	58822	0	True				
ANR	58905	ParameterType	const char *		58822	0					
ANR	58906	Identifier	path		58822	1					
ANR	58907	CFGEntryNode	ENTRY		58822		True				
ANR	58908	CFGExitNode	EXIT		58822		True				
ANR	58909	Symbol	path		58822						
ANR	58910	Symbol	components		58822						
ANR	58911	Symbol	* path		58822						
ANR	58912	Symbol	ISSLASH		58822						
ANR	58913	ClassDef	symlink	266:0:6598:6659							
ANR	58914	DeclStmt									
ANR	58915	Decl							struct symlink	struct symlink *	prev
ANR	58916	DeclStmt									
ANR	58917	Decl							const char	const char *	path
ANR	58918	Function	push_symlink	271:0:6663:6786							
ANR	58919	FunctionDef	"push_symlink (struct symlink * * stack , struct symlink * symlink)"		58918	0					
ANR	58920	CompoundStatement		272:0:6738:6786	58918	0					
ANR	58921	ExpressionStatement	symlink -> prev = * stack	273:2:6742:6764	58918	0	True				
ANR	58922	AssignmentExpression	symlink -> prev = * stack		58918	0		=			
ANR	58923	PtrMemberAccess	symlink -> prev		58918	0					
ANR	58924	Identifier	symlink		58918	0					
ANR	58925	Identifier	prev		58918	1					
ANR	58926	UnaryOperationExpression	* stack		58918	1					
ANR	58927	UnaryOperator	*		58918	0					
ANR	58928	Identifier	stack		58918	1					
ANR	58929	ExpressionStatement	* stack = symlink	274:2:6768:6784	58918	1	True				
ANR	58930	AssignmentExpression	* stack = symlink		58918	0		=			
ANR	58931	UnaryOperationExpression	* stack		58918	0					
ANR	58932	UnaryOperator	*		58918	0					
ANR	58933	Identifier	stack		58918	1					
ANR	58934	Identifier	symlink		58918	1					
ANR	58935	ReturnType	static void		58918	1					
ANR	58936	Identifier	push_symlink		58918	2					
ANR	58937	ParameterList	"struct symlink * * stack , struct symlink * symlink"		58918	3					
ANR	58938	Parameter	struct symlink * * stack	271:26:6689:6710	58918	0	True				
ANR	58939	ParameterType	struct symlink * *		58918	0					
ANR	58940	Identifier	stack		58918	1					
ANR	58941	Parameter	struct symlink * symlink	271:50:6713:6735	58918	1	True				
ANR	58942	ParameterType	struct symlink *		58918	0					
ANR	58943	Identifier	symlink		58918	1					
ANR	58944	CFGEntryNode	ENTRY		58918		True				
ANR	58945	CFGExitNode	EXIT		58918		True				
ANR	58946	Symbol	stack		58918						
ANR	58947	Symbol	* symlink		58918						
ANR	58948	Symbol	symlink		58918						
ANR	58949	Symbol	* stack		58918						
ANR	58950	Symbol	symlink -> prev		58918						
ANR	58951	Function	pop_symlink	277:0:6789:6908							
ANR	58952	FunctionDef	pop_symlink (struct symlink * * stack)		58951	0					
ANR	58953	CompoundStatement		278:0:6838:6908	58951	0					
ANR	58954	IdentifierDeclStatement	struct symlink * top = * stack ;	279:2:6842:6870	58951	0	True				
ANR	58955	IdentifierDecl	* top = * stack		58951	0					
ANR	58956	IdentifierDeclType	struct symlink *		58951	0					
ANR	58957	Identifier	top		58951	1					
ANR	58958	AssignmentExpression	* top = * stack		58951	2		=			
ANR	58959	Identifier	top		58951	0					
ANR	58960	UnaryOperationExpression	* stack		58951	1					
ANR	58961	UnaryOperator	*		58951	0					
ANR	58962	Identifier	stack		58951	1					
ANR	58963	ExpressionStatement	* stack = top -> prev	280:2:6874:6892	58951	1	True				
ANR	58964	AssignmentExpression	* stack = top -> prev		58951	0		=			
ANR	58965	UnaryOperationExpression	* stack		58951	0					
ANR	58966	UnaryOperator	*		58951	0					
ANR	58967	Identifier	stack		58951	1					
ANR	58968	PtrMemberAccess	top -> prev		58951	1					
ANR	58969	Identifier	top		58951	0					
ANR	58970	Identifier	prev		58951	1					
ANR	58971	ExpressionStatement	free ( top )	281:2:6896:6906	58951	2	True				
ANR	58972	CallExpression	free ( top )		58951	0					
ANR	58973	Callee	free		58951	0					
ANR	58974	Identifier	free		58951	0					
ANR	58975	ArgumentList	top		58951	1					
ANR	58976	Argument	top		58951	0					
ANR	58977	Identifier	top		58951	0					
ANR	58978	ReturnType	static void		58951	1					
ANR	58979	Identifier	pop_symlink		58951	2					
ANR	58980	ParameterList	struct symlink * * stack		58951	3					
ANR	58981	Parameter	struct symlink * * stack	277:25:6814:6835	58951	0	True				
ANR	58982	ParameterType	struct symlink * *		58951	0					
ANR	58983	Identifier	stack		58951	1					
ANR	58984	CFGEntryNode	ENTRY		58951		True				
ANR	58985	CFGExitNode	EXIT		58951		True				
ANR	58986	Symbol	stack		58951						
ANR	58987	Symbol	top		58951						
ANR	58988	Symbol	* stack		58951						
ANR	58989	Symbol	top -> prev		58951						
ANR	58990	Symbol	* top		58951						
ANR	58991	DeclStmt									
ANR	58992	Decl							int	int	cwd_stat_errno
ANR	58993	DeclStmt									
ANR	58994	Decl							struct stat	struct stat	cwd_stat
ANR	58995	Function	read_symlink	287:0:6959:8348							
ANR	58996	FunctionDef	"read_symlink (int dirfd , const char * name)"		58995	0					
ANR	58997	CompoundStatement		288:0:7024:8348	58995	0					
ANR	58998	IdentifierDeclStatement	int saved_errno = errno ;	289:2:7028:7051	58995	0	True				
ANR	58999	IdentifierDecl	saved_errno = errno		58995	0					
ANR	59000	IdentifierDeclType	int		58995	0					
ANR	59001	Identifier	saved_errno		58995	1					
ANR	59002	AssignmentExpression	saved_errno = errno		58995	2		=			
ANR	59003	Identifier	errno		58995	0					
ANR	59004	Identifier	errno		58995	1					
ANR	59005	IdentifierDeclStatement	struct stat st ;	290:2:7055:7069	58995	1	True				
ANR	59006	IdentifierDecl	st		58995	0					
ANR	59007	IdentifierDeclType	struct stat		58995	0					
ANR	59008	Identifier	st		58995	1					
ANR	59009	IdentifierDeclStatement	struct symlink * symlink ;	291:2:7073:7096	58995	2	True				
ANR	59010	IdentifierDecl	* symlink		58995	0					
ANR	59011	IdentifierDeclType	struct symlink *		58995	0					
ANR	59012	Identifier	symlink		58995	1					
ANR	59013	IdentifierDeclStatement	char * buffer ;	292:2:7100:7112	58995	3	True				
ANR	59014	IdentifierDecl	* buffer		58995	0					
ANR	59015	IdentifierDeclType	char *		58995	0					
ANR	59016	Identifier	buffer		58995	1					
ANR	59017	IdentifierDeclStatement	ssize_t ret ;	293:2:7116:7127	58995	4	True				
ANR	59018	IdentifierDecl	ret		58995	0					
ANR	59019	IdentifierDeclType	ssize_t		58995	0					
ANR	59020	Identifier	ret		58995	1					
ANR	59021	IfStatement	"if ( fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW ) || ! S_ISLNK ( st . st_mode ) )"		58995	5					
ANR	59022	Condition	"fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW ) || ! S_ISLNK ( st . st_mode )"	295:6:7136:7214	58995	0	True				
ANR	59023	OrExpression	"fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW ) || ! S_ISLNK ( st . st_mode )"		58995	0		||			
ANR	59024	CallExpression	"fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW )"		58995	0					
ANR	59025	Callee	fstatat		58995	0					
ANR	59026	Identifier	fstatat		58995	0					
ANR	59027	ArgumentList	dirfd		58995	1					
ANR	59028	Argument	dirfd		58995	0					
ANR	59029	Identifier	dirfd		58995	0					
ANR	59030	Argument	name		58995	1					
ANR	59031	Identifier	name		58995	0					
ANR	59032	Argument	& st		58995	2					
ANR	59033	UnaryOperationExpression	& st		58995	0					
ANR	59034	UnaryOperator	&		58995	0					
ANR	59035	Identifier	st		58995	1					
ANR	59036	Argument	AT_SYMLINK_NOFOLLOW		58995	3					
ANR	59037	Identifier	AT_SYMLINK_NOFOLLOW		58995	0					
ANR	59038	UnaryOperationExpression	! S_ISLNK ( st . st_mode )		58995	1					
ANR	59039	UnaryOperator	!		58995	0					
ANR	59040	CallExpression	S_ISLNK ( st . st_mode )		58995	1					
ANR	59041	Callee	S_ISLNK		58995	0					
ANR	59042	Identifier	S_ISLNK		58995	0					
ANR	59043	ArgumentList	st . st_mode		58995	1					
ANR	59044	Argument	st . st_mode		58995	0					
ANR	59045	MemberAccess	st . st_mode		58995	0					
ANR	59046	Identifier	st		58995	0					
ANR	59047	Identifier	st_mode		58995	1					
ANR	59048	CompoundStatement		10:4:196:196	58995	1					
ANR	59049	ExpressionStatement	errno = saved_errno	298:6:7229:7248	58995	0	True				
ANR	59050	AssignmentExpression	errno = saved_errno		58995	0		=			
ANR	59051	Identifier	errno		58995	0					
ANR	59052	Identifier	saved_errno		58995	1					
ANR	59053	ReturnStatement	return NULL ;	299:6:7256:7267	58995	1	True				
ANR	59054	Identifier	NULL		58995	0					
ANR	59055	ExpressionStatement	symlink = xmalloc ( sizeof ( * symlink ) + st . st_size + 1 )	301:2:7277:7331	58995	6	True				
ANR	59056	AssignmentExpression	symlink = xmalloc ( sizeof ( * symlink ) + st . st_size + 1 )		58995	0		=			
ANR	59057	Identifier	symlink		58995	0					
ANR	59058	CallExpression	xmalloc ( sizeof ( * symlink ) + st . st_size + 1 )		58995	1					
ANR	59059	Callee	xmalloc		58995	0					
ANR	59060	Identifier	xmalloc		58995	0					
ANR	59061	ArgumentList	sizeof ( * symlink ) + st . st_size + 1		58995	1					
ANR	59062	Argument	sizeof ( * symlink ) + st . st_size + 1		58995	0					
ANR	59063	AdditiveExpression	sizeof ( * symlink ) + st . st_size + 1		58995	0		+			
ANR	59064	SizeofExpression	sizeof ( * symlink )		58995	0					
ANR	59065	Sizeof	sizeof		58995	0					
ANR	59066	UnaryOperationExpression	* symlink		58995	1					
ANR	59067	UnaryOperator	*		58995	0					
ANR	59068	Identifier	symlink		58995	1					
ANR	59069	AdditiveExpression	st . st_size + 1		58995	1		+			
ANR	59070	MemberAccess	st . st_size		58995	0					
ANR	59071	Identifier	st		58995	0					
ANR	59072	Identifier	st_size		58995	1					
ANR	59073	PrimaryExpression	1		58995	1					
ANR	59074	ExpressionStatement	buffer = ( char * ) ( symlink + 1 )	302:2:7335:7365	58995	7	True				
ANR	59075	AssignmentExpression	buffer = ( char * ) ( symlink + 1 )		58995	0		=			
ANR	59076	Identifier	buffer		58995	0					
ANR	59077	CastExpression	( char * ) ( symlink + 1 )		58995	1					
ANR	59078	CastTarget	char *		58995	0					
ANR	59079	AdditiveExpression	symlink + 1		58995	1		+			
ANR	59080	Identifier	symlink		58995	0					
ANR	59081	PrimaryExpression	1		58995	1					
ANR	59082	ExpressionStatement	"ret = readlinkat ( dirfd , name , buffer , st . st_size )"	303:2:7369:7419	58995	8	True				
ANR	59083	AssignmentExpression	"ret = readlinkat ( dirfd , name , buffer , st . st_size )"		58995	0		=			
ANR	59084	Identifier	ret		58995	0					
ANR	59085	CallExpression	"readlinkat ( dirfd , name , buffer , st . st_size )"		58995	1					
ANR	59086	Callee	readlinkat		58995	0					
ANR	59087	Identifier	readlinkat		58995	0					
ANR	59088	ArgumentList	dirfd		58995	1					
ANR	59089	Argument	dirfd		58995	0					
ANR	59090	Identifier	dirfd		58995	0					
ANR	59091	Argument	name		58995	1					
ANR	59092	Identifier	name		58995	0					
ANR	59093	Argument	buffer		58995	2					
ANR	59094	Identifier	buffer		58995	0					
ANR	59095	Argument	st . st_size		58995	3					
ANR	59096	MemberAccess	st . st_size		58995	0					
ANR	59097	Identifier	st		58995	0					
ANR	59098	Identifier	st_size		58995	1					
ANR	59099	IfStatement	if ( ret <= 0 )		58995	9					
ANR	59100	Condition	ret <= 0	304:6:7427:7434	58995	0	True				
ANR	59101	RelationalExpression	ret <= 0		58995	0		<=			
ANR	59102	Identifier	ret		58995	0					
ANR	59103	PrimaryExpression	0		58995	1					
ANR	59104	GotoStatement	goto fail ;	305:4:7441:7450	58995	1	True				
ANR	59105	Identifier	fail		58995	0					
ANR	59106	ExpressionStatement	buffer [ ret ] = 0	306:2:7454:7469	58995	10	True				
ANR	59107	AssignmentExpression	buffer [ ret ] = 0		58995	0		=			
ANR	59108	ArrayIndexing	buffer [ ret ]		58995	0					
ANR	59109	Identifier	buffer		58995	0					
ANR	59110	Identifier	ret		58995	1					
ANR	59111	PrimaryExpression	0		58995	1					
ANR	59112	ExpressionStatement	symlink -> path = buffer	307:2:7473:7495	58995	11	True				
ANR	59113	AssignmentExpression	symlink -> path = buffer		58995	0		=			
ANR	59114	PtrMemberAccess	symlink -> path		58995	0					
ANR	59115	Identifier	symlink		58995	0					
ANR	59116	Identifier	path		58995	1					
ANR	59117	Identifier	buffer		58995	1					
ANR	59118	IfStatement	if ( ISSLASH ( * buffer ) )		58995	12					
ANR	59119	Condition	ISSLASH ( * buffer )	308:6:7503:7519	58995	0	True				
ANR	59120	CallExpression	ISSLASH ( * buffer )		58995	0					
ANR	59121	Callee	ISSLASH		58995	0					
ANR	59122	Identifier	ISSLASH		58995	0					
ANR	59123	ArgumentList	* buffer		58995	1					
ANR	59124	Argument	* buffer		58995	0					
ANR	59125	UnaryOperationExpression	* buffer		58995	0					
ANR	59126	UnaryOperator	*		58995	0					
ANR	59127	Identifier	buffer		58995	1					
ANR	59128	CompoundStatement		23:6:509:518	58995	1					
ANR	59129	IdentifierDeclStatement	char * end ;	310:6:7534:7543	58995	0	True				
ANR	59130	IdentifierDecl	* end		58995	0					
ANR	59131	IdentifierDeclType	char *		58995	0					
ANR	59132	Identifier	end		58995	1					
ANR	59133	IfStatement	if ( cwd_stat_errno == - 1 )		58995	1					
ANR	59134	Condition	cwd_stat_errno == - 1	312:10:7556:7575	58995	0	True				
ANR	59135	EqualityExpression	cwd_stat_errno == - 1		58995	0		==			
ANR	59136	Identifier	cwd_stat_errno		58995	0					
ANR	59137	UnaryOperationExpression	- 1		58995	1					
ANR	59138	UnaryOperator	-		58995	0					
ANR	59139	PrimaryExpression	1		58995	1					
ANR	59140	CompoundStatement		26:1:554:554	58995	1					
ANR	59141	ExpressionStatement	"cwd_stat_errno = stat ( ""."" , & cwd_stat ) == 0 ? 0 : errno"	314:3:7584:7639	58995	0	True				
ANR	59142	AssignmentExpression	"cwd_stat_errno = stat ( ""."" , & cwd_stat ) == 0 ? 0 : errno"		58995	0		=			
ANR	59143	Identifier	cwd_stat_errno		58995	0					
ANR	59144	ConditionalExpression	"stat ( ""."" , & cwd_stat ) == 0 ? 0 : errno"		58995	1					
ANR	59145	Condition	"stat ( ""."" , & cwd_stat ) == 0"		58995	0					
ANR	59146	EqualityExpression	"stat ( ""."" , & cwd_stat ) == 0"		58995	0		==			
ANR	59147	CallExpression	"stat ( ""."" , & cwd_stat )"		58995	0					
ANR	59148	Callee	stat		58995	0					
ANR	59149	Identifier	stat		58995	0					
ANR	59150	ArgumentList	"""."""		58995	1					
ANR	59151	Argument	"""."""		58995	0					
ANR	59152	PrimaryExpression	"""."""		58995	0					
ANR	59153	Argument	& cwd_stat		58995	1					
ANR	59154	UnaryOperationExpression	& cwd_stat		58995	0					
ANR	59155	UnaryOperator	&		58995	0					
ANR	59156	Identifier	cwd_stat		58995	1					
ANR	59157	PrimaryExpression	0		58995	1					
ANR	59158	PrimaryExpression	0		58995	1					
ANR	59159	Identifier	errno		58995	2					
ANR	59160	IfStatement	if ( cwd_stat_errno )		58995	1					
ANR	59161	Condition	cwd_stat_errno	315:7:7648:7661	58995	0	True				
ANR	59162	Identifier	cwd_stat_errno		58995	0					
ANR	59163	GotoStatement	goto fail_exdev ;	316:5:7669:7684	58995	1	True				
ANR	59164	Identifier	fail_exdev		58995	0					
ANR	59165	ExpressionStatement	end = buffer + ret	318:6:7695:7713	58995	2	True				
ANR	59166	AssignmentExpression	end = buffer + ret		58995	0		=			
ANR	59167	Identifier	end		58995	0					
ANR	59168	AdditiveExpression	buffer + ret		58995	1		+			
ANR	59169	Identifier	buffer		58995	0					
ANR	59170	Identifier	ret		58995	1					
ANR	59171	ForStatement	for ( ; ; )		58995	3					
ANR	59172	CompoundStatement		35:3:726:732	58995	0					
ANR	59173	IdentifierDeclStatement	char slash ;	321:3:7736:7746	58995	0	True				
ANR	59174	IdentifierDecl	slash		58995	0					
ANR	59175	IdentifierDeclType	char		58995	0					
ANR	59176	Identifier	slash		58995	1					
ANR	59177	IdentifierDeclStatement	int rv ;	322:3:7751:7757	58995	1	True				
ANR	59178	IdentifierDecl	rv		58995	0					
ANR	59179	IdentifierDeclType	int		58995	0					
ANR	59180	Identifier	rv		58995	1					
ANR	59181	ExpressionStatement	slash = * end	324:3:7763:7775	58995	2	True				
ANR	59182	AssignmentExpression	slash = * end		58995	0		=			
ANR	59183	Identifier	slash		58995	0					
ANR	59184	UnaryOperationExpression	* end		58995	1					
ANR	59185	UnaryOperator	*		58995	0					
ANR	59186	Identifier	end		58995	1					
ANR	59187	ExpressionStatement	* end = 0	324:17:7777:7785	58995	3	True				
ANR	59188	AssignmentExpression	* end = 0		58995	0		=			
ANR	59189	UnaryOperationExpression	* end		58995	0					
ANR	59190	UnaryOperator	*		58995	0					
ANR	59191	Identifier	end		58995	1					
ANR	59192	PrimaryExpression	0		58995	1					
ANR	59193	ExpressionStatement	"rv = stat ( symlink -> path , & st )"	325:3:7790:7820	58995	4	True				
ANR	59194	AssignmentExpression	"rv = stat ( symlink -> path , & st )"		58995	0		=			
ANR	59195	Identifier	rv		58995	0					
ANR	59196	CallExpression	"stat ( symlink -> path , & st )"		58995	1					
ANR	59197	Callee	stat		58995	0					
ANR	59198	Identifier	stat		58995	0					
ANR	59199	ArgumentList	symlink -> path		58995	1					
ANR	59200	Argument	symlink -> path		58995	0					
ANR	59201	PtrMemberAccess	symlink -> path		58995	0					
ANR	59202	Identifier	symlink		58995	0					
ANR	59203	Identifier	path		58995	1					
ANR	59204	Argument	& st		58995	1					
ANR	59205	UnaryOperationExpression	& st		58995	0					
ANR	59206	UnaryOperator	&		58995	0					
ANR	59207	Identifier	st		58995	1					
ANR	59208	ExpressionStatement	* end = slash	326:3:7825:7837	58995	5	True				
ANR	59209	AssignmentExpression	* end = slash		58995	0		=			
ANR	59210	UnaryOperationExpression	* end		58995	0					
ANR	59211	UnaryOperator	*		58995	0					
ANR	59212	Identifier	end		58995	1					
ANR	59213	Identifier	slash		58995	1					
ANR	59214	IfStatement	if ( rv == 0 && st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino )		58995	6					
ANR	59215	Condition	rv == 0 && st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino	328:7:7847:7931	58995	0	True				
ANR	59216	AndExpression	rv == 0 && st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino		58995	0		&&			
ANR	59217	EqualityExpression	rv == 0		58995	0		==			
ANR	59218	Identifier	rv		58995	0					
ANR	59219	PrimaryExpression	0		58995	1					
ANR	59220	AndExpression	st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino		58995	1		&&			
ANR	59221	EqualityExpression	st . st_dev == cwd_stat . st_dev		58995	0		==			
ANR	59222	MemberAccess	st . st_dev		58995	0					
ANR	59223	Identifier	st		58995	0					
ANR	59224	Identifier	st_dev		58995	1					
ANR	59225	MemberAccess	cwd_stat . st_dev		58995	1					
ANR	59226	Identifier	cwd_stat		58995	0					
ANR	59227	Identifier	st_dev		58995	1					
ANR	59228	EqualityExpression	st . st_ino == cwd_stat . st_ino		58995	1		==			
ANR	59229	MemberAccess	st . st_ino		58995	0					
ANR	59230	Identifier	st		58995	0					
ANR	59231	Identifier	st_ino		58995	1					
ANR	59232	MemberAccess	cwd_stat . st_ino		58995	1					
ANR	59233	Identifier	cwd_stat		58995	0					
ANR	59234	Identifier	st_ino		58995	1					
ANR	59235	CompoundStatement		44:5:914:914	58995	1					
ANR	59236	WhileStatement	while ( ISSLASH ( * end ) )		58995	0					
ANR	59237	Condition	ISSLASH ( * end )	332:14:7955:7968	58995	0	True				
ANR	59238	CallExpression	ISSLASH ( * end )		58995	0					
ANR	59239	Callee	ISSLASH		58995	0					
ANR	59240	Identifier	ISSLASH		58995	0					
ANR	59241	ArgumentList	* end		58995	1					
ANR	59242	Argument	* end		58995	0					
ANR	59243	UnaryOperationExpression	* end		58995	0					
ANR	59244	UnaryOperator	*		58995	0					
ANR	59245	Identifier	end		58995	1					
ANR	59246	ExpressionStatement	end ++	333:2:7973:7978	58995	1	True				
ANR	59247	PostIncDecOperationExpression	end ++		58995	0					
ANR	59248	Identifier	end		58995	0					
ANR	59249	IncDec	++		58995	1					
ANR	59250	ExpressionStatement	symlink -> path = end	334:7:7987:8006	58995	1	True				
ANR	59251	AssignmentExpression	symlink -> path = end		58995	0		=			
ANR	59252	PtrMemberAccess	symlink -> path		58995	0					
ANR	59253	Identifier	symlink		58995	0					
ANR	59254	Identifier	path		58995	1					
ANR	59255	Identifier	end		58995	1					
ANR	59256	ReturnStatement	return symlink ;	335:7:8015:8029	58995	2	True				
ANR	59257	Identifier	symlink		58995	0					
ANR	59258	ExpressionStatement	end --	337:3:8041:8046	58995	7	True				
ANR	59259	PostIncDecOperationExpression	end --		58995	0					
ANR	59260	Identifier	end		58995	0					
ANR	59261	IncDec	--		58995	1					
ANR	59262	IfStatement	if ( end == symlink -> path )		58995	8					
ANR	59263	Condition	end == symlink -> path	338:7:8055:8074	58995	0	True				
ANR	59264	EqualityExpression	end == symlink -> path		58995	0		==			
ANR	59265	Identifier	end		58995	0					
ANR	59266	PtrMemberAccess	symlink -> path		58995	1					
ANR	59267	Identifier	symlink		58995	0					
ANR	59268	Identifier	path		58995	1					
ANR	59269	BreakStatement	break ;	339:5:8082:8087	58995	1	True				
ANR	59270	WhileStatement	while ( end != symlink -> path + 1 && ! ISSLASH ( * end ) )		58995	9					
ANR	59271	Condition	end != symlink -> path + 1 && ! ISSLASH ( * end )	340:10:8099:8142	58995	0	True				
ANR	59272	AndExpression	end != symlink -> path + 1 && ! ISSLASH ( * end )		58995	0		&&			
ANR	59273	EqualityExpression	end != symlink -> path + 1		58995	0		!=			
ANR	59274	Identifier	end		58995	0					
ANR	59275	AdditiveExpression	symlink -> path + 1		58995	1		+			
ANR	59276	PtrMemberAccess	symlink -> path		58995	0					
ANR	59277	Identifier	symlink		58995	0					
ANR	59278	Identifier	path		58995	1					
ANR	59279	PrimaryExpression	1		58995	1					
ANR	59280	UnaryOperationExpression	! ISSLASH ( * end )		58995	1					
ANR	59281	UnaryOperator	!		58995	0					
ANR	59282	CallExpression	ISSLASH ( * end )		58995	1					
ANR	59283	Callee	ISSLASH		58995	0					
ANR	59284	Identifier	ISSLASH		58995	0					
ANR	59285	ArgumentList	* end		58995	1					
ANR	59286	Argument	* end		58995	0					
ANR	59287	UnaryOperationExpression	* end		58995	0					
ANR	59288	UnaryOperator	*		58995	0					
ANR	59289	Identifier	end		58995	1					
ANR	59290	ExpressionStatement	end --	341:5:8150:8155	58995	1	True				
ANR	59291	PostIncDecOperationExpression	end --		58995	0					
ANR	59292	Identifier	end		58995	0					
ANR	59293	IncDec	--		58995	1					
ANR	59294	WhileStatement	while ( end != symlink -> path + 1 && ISSLASH ( * ( end - 1 ) ) )		58995	10					
ANR	59295	Condition	end != symlink -> path + 1 && ISSLASH ( * ( end - 1 ) )	342:10:8167:8214	58995	0	True				
ANR	59296	AndExpression	end != symlink -> path + 1 && ISSLASH ( * ( end - 1 ) )		58995	0		&&			
ANR	59297	EqualityExpression	end != symlink -> path + 1		58995	0		!=			
ANR	59298	Identifier	end		58995	0					
ANR	59299	AdditiveExpression	symlink -> path + 1		58995	1		+			
ANR	59300	PtrMemberAccess	symlink -> path		58995	0					
ANR	59301	Identifier	symlink		58995	0					
ANR	59302	Identifier	path		58995	1					
ANR	59303	PrimaryExpression	1		58995	1					
ANR	59304	CallExpression	ISSLASH ( * ( end - 1 ) )		58995	1					
ANR	59305	Callee	ISSLASH		58995	0					
ANR	59306	Identifier	ISSLASH		58995	0					
ANR	59307	ArgumentList	* ( end - 1 )		58995	1					
ANR	59308	Argument	* ( end - 1 )		58995	0					
ANR	59309	UnaryOperationExpression	* ( end - 1 )		58995	0					
ANR	59310	UnaryOperator	*		58995	0					
ANR	59311	AdditiveExpression	end - 1		58995	1		-			
ANR	59312	Identifier	end		58995	0					
ANR	59313	PrimaryExpression	1		58995	1					
ANR	59314	ExpressionStatement	end --	343:5:8222:8227	58995	1	True				
ANR	59315	PostIncDecOperationExpression	end --		58995	0					
ANR	59316	Identifier	end		58995	0					
ANR	59317	IncDec	--		58995	1					
ANR	59318	GotoStatement	goto fail_exdev ;	345:6:8238:8253	58995	4	True				
ANR	59319	Identifier	fail_exdev		58995	0					
ANR	59320	ReturnStatement	return symlink ;	347:2:8263:8277	58995	13	True				
ANR	59321	Identifier	symlink		58995	0					
ANR	59322	Label	fail_exdev :	349:0:8280:8290	58995	14	True				
ANR	59323	Identifier	fail_exdev		58995	0					
ANR	59324	ExpressionStatement	errno = EXDEV	350:2:8294:8307	58995	15	True				
ANR	59325	AssignmentExpression	errno = EXDEV		58995	0		=			
ANR	59326	Identifier	errno		58995	0					
ANR	59327	Identifier	EXDEV		58995	1					
ANR	59328	Label	fail :	351:0:8309:8313	58995	16	True				
ANR	59329	Identifier	fail		58995	0					
ANR	59330	ExpressionStatement	free ( symlink )	352:2:8317:8331	58995	17	True				
ANR	59331	CallExpression	free ( symlink )		58995	0					
ANR	59332	Callee	free		58995	0					
ANR	59333	Identifier	free		58995	0					
ANR	59334	ArgumentList	symlink		58995	1					
ANR	59335	Argument	symlink		58995	0					
ANR	59336	Identifier	symlink		58995	0					
ANR	59337	ReturnStatement	return NULL ;	353:2:8335:8346	58995	18	True				
ANR	59338	Identifier	NULL		58995	0					
ANR	59339	ReturnType	static struct symlink *		58995	1					
ANR	59340	Identifier	read_symlink		58995	2					
ANR	59341	ParameterList	"int dirfd , const char * name"		58995	3					
ANR	59342	Parameter	int dirfd	287:36:6995:7003	58995	0	True				
ANR	59343	ParameterType	int		58995	0					
ANR	59344	Identifier	dirfd		58995	1					
ANR	59345	Parameter	const char * name	287:47:7006:7021	58995	1	True				
ANR	59346	ParameterType	const char *		58995	0					
ANR	59347	Identifier	name		58995	1					
ANR	59348	CFGEntryNode	ENTRY		58995		True				
ANR	59349	CFGExitNode	EXIT		58995		True				
ANR	59350	InfiniteForNode	true		58995		True				
ANR	59351	Symbol	cwd_stat . st_dev		58995						
ANR	59352	Symbol	rv		58995						
ANR	59353	Symbol	st . st_ino		58995						
ANR	59354	Symbol	& st		58995						
ANR	59355	Symbol	st . st_mode		58995						
ANR	59356	Symbol	* ret		58995						
ANR	59357	Symbol	ISSLASH		58995						
ANR	59358	Symbol	st . st_dev		58995						
ANR	59359	Symbol	xmalloc		58995						
ANR	59360	Symbol	EXDEV		58995						
ANR	59361	Symbol	symlink		58995						
ANR	59362	Symbol	end		58995						
ANR	59363	Symbol	buffer		58995						
ANR	59364	Symbol	cwd_stat_errno		58995						
ANR	59365	Symbol	S_ISLNK		58995						
ANR	59366	Symbol	& cwd_stat		58995						
ANR	59367	Symbol	cwd_stat . st_ino		58995						
ANR	59368	Symbol	ret		58995						
ANR	59369	Symbol	st		58995						
ANR	59370	Symbol	errno		58995						
ANR	59371	Symbol	* buffer		58995						
ANR	59372	Symbol	stat		58995						
ANR	59373	Symbol	NULL		58995						
ANR	59374	Symbol	fstatat		58995						
ANR	59375	Symbol	* ( end - 1 )		58995						
ANR	59376	Symbol	saved_errno		58995						
ANR	59377	Symbol	AT_SYMLINK_NOFOLLOW		58995						
ANR	59378	Symbol	cwd_stat		58995						
ANR	59379	Symbol	symlink -> path		58995						
ANR	59380	Symbol	* symlink		58995						
ANR	59381	Symbol	st . st_size		58995						
ANR	59382	Symbol	name		58995						
ANR	59383	Symbol	readlinkat		58995						
ANR	59384	Symbol	dirfd		58995						
ANR	59385	Symbol	slash		58995						
ANR	59386	Symbol	* end		58995						
ANR	59387	Function	traverse_next	358:0:8465:9635							
ANR	59388	FunctionDef	"traverse_next (struct cached_dirfd * dir , const char * * path , int keepfd , struct symlink * * symlink)"		59387	0					
ANR	59389	CompoundStatement		361:0:8600:9635	59387	0					
ANR	59390	IdentifierDeclStatement	const char * p = * path ;	362:2:8604:8625	59387	0	True				
ANR	59391	IdentifierDecl	* p = * path		59387	0					
ANR	59392	IdentifierDeclType	const char *		59387	0					
ANR	59393	Identifier	p		59387	1					
ANR	59394	AssignmentExpression	* p = * path		59387	2		=			
ANR	59395	Identifier	p		59387	0					
ANR	59396	UnaryOperationExpression	* path		59387	1					
ANR	59397	UnaryOperator	*		59387	0					
ANR	59398	Identifier	path		59387	1					
ANR	59399	IdentifierDeclStatement	struct cached_dirfd * entry = dir ;	363:2:8629:8661	59387	1	True				
ANR	59400	IdentifierDecl	* entry = dir		59387	0					
ANR	59401	IdentifierDeclType	struct cached_dirfd *		59387	0					
ANR	59402	Identifier	entry		59387	1					
ANR	59403	AssignmentExpression	* entry = dir		59387	2		=			
ANR	59404	Identifier	dir		59387	0					
ANR	59405	Identifier	dir		59387	1					
ANR	59406	IdentifierDeclStatement	char * name ;	364:2:8665:8675	59387	2	True				
ANR	59407	IdentifierDecl	* name		59387	0					
ANR	59408	IdentifierDeclType	char *		59387	0					
ANR	59409	Identifier	name		59387	1					
ANR	59410	WhileStatement	while ( * p && ! ISSLASH ( * p ) )		59387	3					
ANR	59411	Condition	* p && ! ISSLASH ( * p )	366:9:8687:8706	59387	0	True				
ANR	59412	AndExpression	* p && ! ISSLASH ( * p )		59387	0		&&			
ANR	59413	UnaryOperationExpression	* p		59387	0					
ANR	59414	UnaryOperator	*		59387	0					
ANR	59415	Identifier	p		59387	1					
ANR	59416	UnaryOperationExpression	! ISSLASH ( * p )		59387	1					
ANR	59417	UnaryOperator	!		59387	0					
ANR	59418	CallExpression	ISSLASH ( * p )		59387	1					
ANR	59419	Callee	ISSLASH		59387	0					
ANR	59420	Identifier	ISSLASH		59387	0					
ANR	59421	ArgumentList	* p		59387	1					
ANR	59422	Argument	* p		59387	0					
ANR	59423	UnaryOperationExpression	* p		59387	0					
ANR	59424	UnaryOperator	*		59387	0					
ANR	59425	Identifier	p		59387	1					
ANR	59426	ExpressionStatement	p ++	367:4:8713:8716	59387	1	True				
ANR	59427	PostIncDecOperationExpression	p ++		59387	0					
ANR	59428	Identifier	p		59387	0					
ANR	59429	IncDec	++		59387	1					
ANR	59430	IfStatement	if ( * * path == '.' && * path + 1 == p )		59387	4					
ANR	59431	Condition	* * path == '.' && * path + 1 == p	368:6:8724:8754	59387	0	True				
ANR	59432	AndExpression	* * path == '.' && * path + 1 == p		59387	0		&&			
ANR	59433	EqualityExpression	* * path == '.'		59387	0		==			
ANR	59434	UnaryOperationExpression	* * path		59387	0					
ANR	59435	UnaryOperator	*		59387	0					
ANR	59436	UnaryOperationExpression	* path		59387	1					
ANR	59437	UnaryOperator	*		59387	0					
ANR	59438	Identifier	path		59387	1					
ANR	59439	PrimaryExpression	'.'		59387	1					
ANR	59440	EqualityExpression	* path + 1 == p		59387	1		==			
ANR	59441	AdditiveExpression	* path + 1		59387	0		+			
ANR	59442	UnaryOperationExpression	* path		59387	0					
ANR	59443	UnaryOperator	*		59387	0					
ANR	59444	Identifier	path		59387	1					
ANR	59445	PrimaryExpression	1		59387	1					
ANR	59446	Identifier	p		59387	1					
ANR	59447	GotoStatement	goto skip ;	369:4:8761:8770	59387	1	True				
ANR	59448	Identifier	skip		59387	0					
ANR	59449	IfStatement	if ( * * path == '.' && * ( * path + 1 ) == '.' && * path + 2 == p )		59387	5					
ANR	59450	Condition	* * path == '.' && * ( * path + 1 ) == '.' && * path + 2 == p	370:6:8778:8831	59387	0	True				
ANR	59451	AndExpression	* * path == '.' && * ( * path + 1 ) == '.' && * path + 2 == p		59387	0		&&			
ANR	59452	EqualityExpression	* * path == '.'		59387	0		==			
ANR	59453	UnaryOperationExpression	* * path		59387	0					
ANR	59454	UnaryOperator	*		59387	0					
ANR	59455	UnaryOperationExpression	* path		59387	1					
ANR	59456	UnaryOperator	*		59387	0					
ANR	59457	Identifier	path		59387	1					
ANR	59458	PrimaryExpression	'.'		59387	1					
ANR	59459	AndExpression	* ( * path + 1 ) == '.' && * path + 2 == p		59387	1		&&			
ANR	59460	EqualityExpression	* ( * path + 1 ) == '.'		59387	0		==			
ANR	59461	UnaryOperationExpression	* ( * path + 1 )		59387	0					
ANR	59462	UnaryOperator	*		59387	0					
ANR	59463	AdditiveExpression	* path + 1		59387	1		+			
ANR	59464	UnaryOperationExpression	* path		59387	0					
ANR	59465	UnaryOperator	*		59387	0					
ANR	59466	Identifier	path		59387	1					
ANR	59467	PrimaryExpression	1		59387	1					
ANR	59468	PrimaryExpression	'.'		59387	1					
ANR	59469	EqualityExpression	* path + 2 == p		59387	1		==			
ANR	59470	AdditiveExpression	* path + 2		59387	0		+			
ANR	59471	UnaryOperationExpression	* path		59387	0					
ANR	59472	UnaryOperator	*		59387	0					
ANR	59473	Identifier	path		59387	1					
ANR	59474	PrimaryExpression	2		59387	1					
ANR	59475	Identifier	p		59387	1					
ANR	59476	CompoundStatement		11:4:237:237	59387	1					
ANR	59477	ExpressionStatement	entry = dir -> parent	372:6:8846:8865	59387	0	True				
ANR	59478	AssignmentExpression	entry = dir -> parent		59387	0		=			
ANR	59479	Identifier	entry		59387	0					
ANR	59480	PtrMemberAccess	dir -> parent		59387	1					
ANR	59481	Identifier	dir		59387	0					
ANR	59482	Identifier	parent		59387	1					
ANR	59483	IfStatement	if ( ! entry )		59387	1					
ANR	59484	Condition	! entry	373:10:8877:8883	59387	0	True				
ANR	59485	UnaryOperationExpression	! entry		59387	0					
ANR	59486	UnaryOperator	!		59387	0					
ANR	59487	Identifier	entry		59387	1					
ANR	59488	CompoundStatement		14:1:286:286	59387	1					
ANR	59489	ExpressionStatement	errno = EXDEV	376:3:8934:8947	59387	0	True				
ANR	59490	AssignmentExpression	errno = EXDEV		59387	0		=			
ANR	59491	Identifier	errno		59387	0					
ANR	59492	Identifier	EXDEV		59387	1					
ANR	59493	GotoStatement	goto out ;	377:3:8952:8960	59387	1	True				
ANR	59494	Identifier	out		59387	0					
ANR	59495	ExpressionStatement	assert ( list_empty ( & dir -> lru_link ) )	379:6:8971:9007	59387	2	True				
ANR	59496	CallExpression	assert ( list_empty ( & dir -> lru_link ) )		59387	0					
ANR	59497	Callee	assert		59387	0					
ANR	59498	Identifier	assert		59387	0					
ANR	59499	ArgumentList	list_empty ( & dir -> lru_link )		59387	1					
ANR	59500	Argument	list_empty ( & dir -> lru_link )		59387	0					
ANR	59501	CallExpression	list_empty ( & dir -> lru_link )		59387	0					
ANR	59502	Callee	list_empty		59387	0					
ANR	59503	Identifier	list_empty		59387	0					
ANR	59504	ArgumentList	& dir -> lru_link		59387	1					
ANR	59505	Argument	& dir -> lru_link		59387	0					
ANR	59506	UnaryOperationExpression	& dir -> lru_link		59387	0					
ANR	59507	UnaryOperator	&		59387	0					
ANR	59508	PtrMemberAccess	dir -> lru_link		59387	1					
ANR	59509	Identifier	dir		59387	0					
ANR	59510	Identifier	lru_link		59387	1					
ANR	59511	ExpressionStatement	"list_add ( & dir -> lru_link , & lru_list )"	380:6:9015:9051	59387	3	True				
ANR	59512	CallExpression	"list_add ( & dir -> lru_link , & lru_list )"		59387	0					
ANR	59513	Callee	list_add		59387	0					
ANR	59514	Identifier	list_add		59387	0					
ANR	59515	ArgumentList	& dir -> lru_link		59387	1					
ANR	59516	Argument	& dir -> lru_link		59387	0					
ANR	59517	UnaryOperationExpression	& dir -> lru_link		59387	0					
ANR	59518	UnaryOperator	&		59387	0					
ANR	59519	PtrMemberAccess	dir -> lru_link		59387	1					
ANR	59520	Identifier	dir		59387	0					
ANR	59521	Identifier	lru_link		59387	1					
ANR	59522	Argument	& lru_list		59387	1					
ANR	59523	UnaryOperationExpression	& lru_list		59387	0					
ANR	59524	UnaryOperator	&		59387	0					
ANR	59525	Identifier	lru_list		59387	1					
ANR	59526	GotoStatement	goto skip ;	381:6:9059:9068	59387	4	True				
ANR	59527	Identifier	skip		59387	0					
ANR	59528	ExpressionStatement	name = alloca ( p - * path + 1 )	383:2:9078:9107	59387	6	True				
ANR	59529	AssignmentExpression	name = alloca ( p - * path + 1 )		59387	0		=			
ANR	59530	Identifier	name		59387	0					
ANR	59531	CallExpression	alloca ( p - * path + 1 )		59387	1					
ANR	59532	Callee	alloca		59387	0					
ANR	59533	Identifier	alloca		59387	0					
ANR	59534	ArgumentList	p - * path + 1		59387	1					
ANR	59535	Argument	p - * path + 1		59387	0					
ANR	59536	AdditiveExpression	p - * path + 1		59387	0		-			
ANR	59537	Identifier	p		59387	0					
ANR	59538	AdditiveExpression	* path + 1		59387	1		+			
ANR	59539	UnaryOperationExpression	* path		59387	0					
ANR	59540	UnaryOperator	*		59387	0					
ANR	59541	Identifier	path		59387	1					
ANR	59542	PrimaryExpression	1		59387	1					
ANR	59543	ExpressionStatement	"memcpy ( name , * path , p - * path )"	384:2:9111:9141	59387	7	True				
ANR	59544	CallExpression	"memcpy ( name , * path , p - * path )"		59387	0					
ANR	59545	Callee	memcpy		59387	0					
ANR	59546	Identifier	memcpy		59387	0					
ANR	59547	ArgumentList	name		59387	1					
ANR	59548	Argument	name		59387	0					
ANR	59549	Identifier	name		59387	0					
ANR	59550	Argument	* path		59387	1					
ANR	59551	UnaryOperationExpression	* path		59387	0					
ANR	59552	UnaryOperator	*		59387	0					
ANR	59553	Identifier	path		59387	1					
ANR	59554	Argument	p - * path		59387	2					
ANR	59555	AdditiveExpression	p - * path		59387	0		-			
ANR	59556	Identifier	p		59387	0					
ANR	59557	UnaryOperationExpression	* path		59387	1					
ANR	59558	UnaryOperator	*		59387	0					
ANR	59559	Identifier	path		59387	1					
ANR	59560	ExpressionStatement	name [ p - * path ] = 0	385:2:9145:9164	59387	8	True				
ANR	59561	AssignmentExpression	name [ p - * path ] = 0		59387	0		=			
ANR	59562	ArrayIndexing	name [ p - * path ]		59387	0					
ANR	59563	Identifier	name		59387	0					
ANR	59564	AdditiveExpression	p - * path		59387	1		-			
ANR	59565	Identifier	p		59387	0					
ANR	59566	UnaryOperationExpression	* path		59387	1					
ANR	59567	UnaryOperator	*		59387	0					
ANR	59568	Identifier	path		59387	1					
ANR	59569	PrimaryExpression	0		59387	1					
ANR	59570	ExpressionStatement	"entry = openat_cached ( dir , name , keepfd )"	387:2:9169:9210	59387	9	True				
ANR	59571	AssignmentExpression	"entry = openat_cached ( dir , name , keepfd )"		59387	0		=			
ANR	59572	Identifier	entry		59387	0					
ANR	59573	CallExpression	"openat_cached ( dir , name , keepfd )"		59387	1					
ANR	59574	Callee	openat_cached		59387	0					
ANR	59575	Identifier	openat_cached		59387	0					
ANR	59576	ArgumentList	dir		59387	1					
ANR	59577	Argument	dir		59387	0					
ANR	59578	Identifier	dir		59387	0					
ANR	59579	Argument	name		59387	1					
ANR	59580	Identifier	name		59387	0					
ANR	59581	Argument	keepfd		59387	2					
ANR	59582	Identifier	keepfd		59387	0					
ANR	59583	IfStatement	if ( ! entry )		59387	10					
ANR	59584	Condition	! entry	388:6:9218:9224	59387	0	True				
ANR	59585	UnaryOperationExpression	! entry		59387	0					
ANR	59586	UnaryOperator	!		59387	0					
ANR	59587	Identifier	entry		59387	1					
ANR	59588	CompoundStatement		29:4:630:630	59387	1					
ANR	59589	IfStatement	if ( errno == ELOOP || errno == EMLINK || errno == EFTYPE || errno == ENOTDIR )		59387	0					
ANR	59590	Condition	errno == ELOOP || errno == EMLINK || errno == EFTYPE || errno == ENOTDIR	390:10:9243:9412	59387	0	True				
ANR	59591	OrExpression	errno == ELOOP || errno == EMLINK || errno == EFTYPE || errno == ENOTDIR		59387	0		||			
ANR	59592	EqualityExpression	errno == ELOOP		59387	0		==			
ANR	59593	Identifier	errno		59387	0					
ANR	59594	Identifier	ELOOP		59387	1					
ANR	59595	OrExpression	errno == EMLINK || errno == EFTYPE || errno == ENOTDIR		59387	1		||			
ANR	59596	EqualityExpression	errno == EMLINK		59387	0		==			
ANR	59597	Identifier	errno		59387	0					
ANR	59598	Identifier	EMLINK		59387	1					
ANR	59599	OrExpression	errno == EFTYPE || errno == ENOTDIR		59387	1		||			
ANR	59600	EqualityExpression	errno == EFTYPE		59387	0		==			
ANR	59601	Identifier	errno		59387	0					
ANR	59602	Identifier	EFTYPE		59387	1					
ANR	59603	EqualityExpression	errno == ENOTDIR		59387	1		==			
ANR	59604	Identifier	errno		59387	0					
ANR	59605	Identifier	ENOTDIR		59387	1					
ANR	59606	CompoundStatement		34:1:815:815	59387	1					
ANR	59607	IfStatement	"if ( ( * symlink = read_symlink ( dir -> fd , name ) ) )"		59387	0					
ANR	59608	Condition	"* symlink = read_symlink ( dir -> fd , name )"	395:7:9425:9465	59387	0	True				
ANR	59609	AssignmentExpression	"* symlink = read_symlink ( dir -> fd , name )"		59387	0		=			
ANR	59610	UnaryOperationExpression	* symlink		59387	0					
ANR	59611	UnaryOperator	*		59387	0					
ANR	59612	Identifier	symlink		59387	1					
ANR	59613	CallExpression	"read_symlink ( dir -> fd , name )"		59387	1					
ANR	59614	Callee	read_symlink		59387	0					
ANR	59615	Identifier	read_symlink		59387	0					
ANR	59616	ArgumentList	dir -> fd		59387	1					
ANR	59617	Argument	dir -> fd		59387	0					
ANR	59618	PtrMemberAccess	dir -> fd		59387	0					
ANR	59619	Identifier	dir		59387	0					
ANR	59620	Identifier	fd		59387	1					
ANR	59621	Argument	name		59387	1					
ANR	59622	Identifier	name		59387	0					
ANR	59623	CompoundStatement		36:5:872:872	59387	1					
ANR	59624	ExpressionStatement	entry = dir	397:7:9482:9493	59387	0	True				
ANR	59625	AssignmentExpression	entry = dir		59387	0		=			
ANR	59626	Identifier	entry		59387	0					
ANR	59627	Identifier	dir		59387	1					
ANR	59628	GotoStatement	goto skip ;	398:7:9502:9511	59387	1	True				
ANR	59629	Identifier	skip		59387	0					
ANR	59630	ExpressionStatement	errno = ELOOP	400:3:9523:9536	59387	1	True				
ANR	59631	AssignmentExpression	errno = ELOOP		59387	0		=			
ANR	59632	Identifier	errno		59387	0					
ANR	59633	Identifier	ELOOP		59387	1					
ANR	59634	GotoStatement	goto out ;	402:6:9547:9555	59387	1	True				
ANR	59635	Identifier	out		59387	0					
ANR	59636	Label	skip :	404:0:9563:9567	59387	11	True				
ANR	59637	Identifier	skip		59387	0					
ANR	59638	WhileStatement	while ( ISSLASH ( * p ) )		59387	12					
ANR	59639	Condition	ISSLASH ( * p )	405:9:9578:9589	59387	0	True				
ANR	59640	CallExpression	ISSLASH ( * p )		59387	0					
ANR	59641	Callee	ISSLASH		59387	0					
ANR	59642	Identifier	ISSLASH		59387	0					
ANR	59643	ArgumentList	* p		59387	1					
ANR	59644	Argument	* p		59387	0					
ANR	59645	UnaryOperationExpression	* p		59387	0					
ANR	59646	UnaryOperator	*		59387	0					
ANR	59647	Identifier	p		59387	1					
ANR	59648	ExpressionStatement	p ++	406:4:9596:9599	59387	1	True				
ANR	59649	PostIncDecOperationExpression	p ++		59387	0					
ANR	59650	Identifier	p		59387	0					
ANR	59651	IncDec	++		59387	1					
ANR	59652	Label	out :	407:0:9601:9604	59387	13	True				
ANR	59653	Identifier	out		59387	0					
ANR	59654	ExpressionStatement	* path = p	408:2:9608:9617	59387	14	True				
ANR	59655	AssignmentExpression	* path = p		59387	0		=			
ANR	59656	UnaryOperationExpression	* path		59387	0					
ANR	59657	UnaryOperator	*		59387	0					
ANR	59658	Identifier	path		59387	1					
ANR	59659	Identifier	p		59387	1					
ANR	59660	ReturnStatement	return entry ;	409:2:9621:9633	59387	15	True				
ANR	59661	Identifier	entry		59387	0					
ANR	59662	ReturnType	static struct cached_dirfd *		59387	1					
ANR	59663	Identifier	traverse_next		59387	2					
ANR	59664	ParameterList	"struct cached_dirfd * dir , const char * * path , int keepfd , struct symlink * * symlink"		59387	3					
ANR	59665	Parameter	struct cached_dirfd * dir	359:15:8509:8532	59387	0	True				
ANR	59666	ParameterType	struct cached_dirfd *		59387	0					
ANR	59667	Identifier	dir		59387	1					
ANR	59668	Parameter	const char * * path	359:41:8535:8551	59387	1	True				
ANR	59669	ParameterType	const char * *		59387	0					
ANR	59670	Identifier	path		59387	1					
ANR	59671	Parameter	int keepfd	359:60:8554:8563	59387	2	True				
ANR	59672	ParameterType	int		59387	0					
ANR	59673	Identifier	keepfd		59387	1					
ANR	59674	Parameter	struct symlink * * symlink	360:8:8574:8597	59387	3	True				
ANR	59675	ParameterType	struct symlink * *		59387	0					
ANR	59676	Identifier	symlink		59387	1					
ANR	59677	CFGEntryNode	ENTRY		59387		True				
ANR	59678	CFGExitNode	EXIT		59387		True				
ANR	59679	Symbol	* dir		59387						
ANR	59680	Symbol	openat_cached		59387						
ANR	59681	Symbol	* * path		59387						
ANR	59682	Symbol	list_empty		59387						
ANR	59683	Symbol	dir		59387						
ANR	59684	Symbol	ISSLASH		59387						
ANR	59685	Symbol	path		59387						
ANR	59686	Symbol	keepfd		59387						
ANR	59687	Symbol	read_symlink		59387						
ANR	59688	Symbol	EXDEV		59387						
ANR	59689	Symbol	symlink		59387						
ANR	59690	Symbol	ELOOP		59387						
ANR	59691	Symbol	EFTYPE		59387						
ANR	59692	Symbol	& dir -> lru_link		59387						
ANR	59693	Symbol	* name		59387						
ANR	59694	Symbol	errno		59387						
ANR	59695	Symbol	& lru_list		59387						
ANR	59696	Symbol	alloca		59387						
ANR	59697	Symbol	* ( * path + 1 )		59387						
ANR	59698	Symbol	p		59387						
ANR	59699	Symbol	entry		59387						
ANR	59700	Symbol	* symlink		59387						
ANR	59701	Symbol	dir -> parent		59387						
ANR	59702	Symbol	dir -> fd		59387						
ANR	59703	Symbol	ENOTDIR		59387						
ANR	59704	Symbol	name		59387						
ANR	59705	Symbol	* path		59387						
ANR	59706	Symbol	* p		59387						
ANR	59707	Symbol	EMLINK		59387						
ANR	59708	Function	traverse_another_path	422:0:10214:12930							
ANR	59709	FunctionDef	"traverse_another_path (const char * * pathname , int keepfd)"		59708	0					
ANR	59710	CompoundStatement		423:0:10283:12930	59708	0					
ANR	59711	Statement	static	424:2:10287:10292	59708	0	True				
ANR	59712	Statement	struct	424:9:10294:10299	59708	1	True				
ANR	59713	Statement	cached_dirfd	424:16:10301:10312	59708	2	True				
ANR	59714	Statement	cwd	424:29:10314:10316	59708	3	True				
ANR	59715	Statement	=	424:33:10318:10318	59708	4	True				
ANR	59716	CompoundStatement		2:35:36:36	59708	5					
ANR	59717	Statement	.	425:4:10326:10326	59708	0	True				
ANR	59718	Statement	fd	425:5:10327:10328	59708	1	True				
ANR	59719	Statement	=	425:8:10330:10330	59708	2	True				
ANR	59720	Statement	AT_FDCWD	425:10:10332:10339	59708	3	True				
ANR	59721	Statement	","	425:18:10340:10340	59708	4	True				
ANR	59722	ExpressionStatement		426:3:10345:10345	59708	6	True				
ANR	59723	IdentifierDeclStatement	unsigned int misses = dirfd_cache_misses ;	428:2:10350:10390	59708	7	True				
ANR	59724	IdentifierDecl	misses = dirfd_cache_misses		59708	0					
ANR	59725	IdentifierDeclType	unsigned int		59708	0					
ANR	59726	Identifier	misses		59708	1					
ANR	59727	AssignmentExpression	misses = dirfd_cache_misses		59708	2		=			
ANR	59728	Identifier	dirfd_cache_misses		59708	0					
ANR	59729	Identifier	dirfd_cache_misses		59708	1					
ANR	59730	IdentifierDeclStatement	"const char * path = * pathname , * last ;"	429:2:10394:10429	59708	8	True				
ANR	59731	IdentifierDecl	* path = * pathname		59708	0					
ANR	59732	IdentifierDeclType	const char *		59708	0					
ANR	59733	Identifier	path		59708	1					
ANR	59734	AssignmentExpression	* path = * pathname		59708	2		=			
ANR	59735	Identifier	path		59708	0					
ANR	59736	UnaryOperationExpression	* pathname		59708	1					
ANR	59737	UnaryOperator	*		59708	0					
ANR	59738	Identifier	pathname		59708	1					
ANR	59739	IdentifierDecl	* last		59708	1					
ANR	59740	IdentifierDeclType	const char *		59708	0					
ANR	59741	Identifier	last		59708	1					
ANR	59742	IdentifierDeclStatement	struct cached_dirfd * dir = & cwd ;	430:2:10433:10464	59708	9	True				
ANR	59743	IdentifierDecl	* dir = & cwd		59708	0					
ANR	59744	IdentifierDeclType	struct cached_dirfd *		59708	0					
ANR	59745	Identifier	dir		59708	1					
ANR	59746	AssignmentExpression	* dir = & cwd		59708	2		=			
ANR	59747	Identifier	dir		59708	0					
ANR	59748	UnaryOperationExpression	& cwd		59708	1					
ANR	59749	UnaryOperator	&		59708	0					
ANR	59750	Identifier	cwd		59708	1					
ANR	59751	IdentifierDeclStatement	struct symlink * stack = NULL ;	431:2:10468:10496	59708	10	True				
ANR	59752	IdentifierDecl	* stack = NULL		59708	0					
ANR	59753	IdentifierDeclType	struct symlink *		59708	0					
ANR	59754	Identifier	stack		59708	1					
ANR	59755	AssignmentExpression	* stack = NULL		59708	2		=			
ANR	59756	Identifier	NULL		59708	0					
ANR	59757	Identifier	NULL		59708	1					
ANR	59758	IdentifierDeclStatement	unsigned int steps = count_path_components ( path ) ;	432:2:10500:10549	59708	11	True				
ANR	59759	IdentifierDecl	steps = count_path_components ( path )		59708	0					
ANR	59760	IdentifierDeclType	unsigned int		59708	0					
ANR	59761	Identifier	steps		59708	1					
ANR	59762	AssignmentExpression	steps = count_path_components ( path )		59708	2		=			
ANR	59763	Identifier	steps		59708	0					
ANR	59764	CallExpression	count_path_components ( path )		59708	1					
ANR	59765	Callee	count_path_components		59708	0					
ANR	59766	Identifier	count_path_components		59708	0					
ANR	59767	ArgumentList	path		59708	1					
ANR	59768	Argument	path		59708	0					
ANR	59769	Identifier	path		59708	0					
ANR	59770	IdentifierDeclStatement	struct cached_dirfd * traversed_symlink = NULL ;	433:2:10553:10598	59708	12	True				
ANR	59771	IdentifierDecl	* traversed_symlink = NULL		59708	0					
ANR	59772	IdentifierDeclType	struct cached_dirfd *		59708	0					
ANR	59773	Identifier	traversed_symlink		59708	1					
ANR	59774	AssignmentExpression	* traversed_symlink = NULL		59708	2		=			
ANR	59775	Identifier	NULL		59708	0					
ANR	59776	Identifier	NULL		59708	1					
ANR	59777	ExpressionStatement	INIT_LIST_HEAD ( & cwd . children )	435:2:10603:10633	59708	13	True				
ANR	59778	CallExpression	INIT_LIST_HEAD ( & cwd . children )		59708	0					
ANR	59779	Callee	INIT_LIST_HEAD		59708	0					
ANR	59780	Identifier	INIT_LIST_HEAD		59708	0					
ANR	59781	ArgumentList	& cwd . children		59708	1					
ANR	59782	Argument	& cwd . children		59708	0					
ANR	59783	UnaryOperationExpression	& cwd . children		59708	0					
ANR	59784	UnaryOperator	&		59708	0					
ANR	59785	MemberAccess	cwd . children		59708	1					
ANR	59786	Identifier	cwd		59708	0					
ANR	59787	Identifier	children		59708	1					
ANR	59788	IfStatement	if ( steps > MAX_PATH_COMPONENTS )		59708	14					
ANR	59789	Condition	steps > MAX_PATH_COMPONENTS	437:6:10642:10668	59708	0	True				
ANR	59790	RelationalExpression	steps > MAX_PATH_COMPONENTS		59708	0		>			
ANR	59791	Identifier	steps		59708	0					
ANR	59792	Identifier	MAX_PATH_COMPONENTS		59708	1					
ANR	59793	CompoundStatement		16:4:391:391	59708	1					
ANR	59794	ExpressionStatement	errno = ELOOP	439:6:10683:10696	59708	0	True				
ANR	59795	AssignmentExpression	errno = ELOOP		59708	0		=			
ANR	59796	Identifier	errno		59708	0					
ANR	59797	Identifier	ELOOP		59708	1					
ANR	59798	ReturnStatement	return - 1 ;	440:6:10704:10713	59708	1	True				
ANR	59799	UnaryOperationExpression	- 1		59708	0					
ANR	59800	UnaryOperator	-		59708	0					
ANR	59801	PrimaryExpression	1		59708	1					
ANR	59802	IfStatement	if ( ! * path || IS_ABSOLUTE_FILE_NAME ( path ) )		59708	15					
ANR	59803	Condition	! * path || IS_ABSOLUTE_FILE_NAME ( path )	443:6:10728:10766	59708	0	True				
ANR	59804	OrExpression	! * path || IS_ABSOLUTE_FILE_NAME ( path )		59708	0		||			
ANR	59805	UnaryOperationExpression	! * path		59708	0					
ANR	59806	UnaryOperator	!		59708	0					
ANR	59807	UnaryOperationExpression	* path		59708	1					
ANR	59808	UnaryOperator	*		59708	0					
ANR	59809	Identifier	path		59708	1					
ANR	59810	CallExpression	IS_ABSOLUTE_FILE_NAME ( path )		59708	1					
ANR	59811	Callee	IS_ABSOLUTE_FILE_NAME		59708	0					
ANR	59812	Identifier	IS_ABSOLUTE_FILE_NAME		59708	0					
ANR	59813	ArgumentList	path		59708	1					
ANR	59814	Argument	path		59708	0					
ANR	59815	Identifier	path		59708	0					
ANR	59816	ReturnStatement	return AT_FDCWD ;	444:4:10773:10788	59708	1	True				
ANR	59817	Identifier	AT_FDCWD		59708	0					
ANR	59818	ExpressionStatement	"last = strrchr ( path , 0 ) - 1"	447:2:10834:10862	59708	16	True				
ANR	59819	AssignmentExpression	"last = strrchr ( path , 0 ) - 1"		59708	0		=			
ANR	59820	Identifier	last		59708	0					
ANR	59821	AdditiveExpression	"strrchr ( path , 0 ) - 1"		59708	1		-			
ANR	59822	CallExpression	"strrchr ( path , 0 )"		59708	0					
ANR	59823	Callee	strrchr		59708	0					
ANR	59824	Identifier	strrchr		59708	0					
ANR	59825	ArgumentList	path		59708	1					
ANR	59826	Argument	path		59708	0					
ANR	59827	Identifier	path		59708	0					
ANR	59828	Argument	0		59708	1					
ANR	59829	PrimaryExpression	0		59708	0					
ANR	59830	PrimaryExpression	1		59708	1					
ANR	59831	IfStatement	if ( ISSLASH ( * last ) )		59708	17					
ANR	59832	Condition	ISSLASH ( * last )	448:6:10870:10884	59708	0	True				
ANR	59833	CallExpression	ISSLASH ( * last )		59708	0					
ANR	59834	Callee	ISSLASH		59708	0					
ANR	59835	Identifier	ISSLASH		59708	0					
ANR	59836	ArgumentList	* last		59708	1					
ANR	59837	Argument	* last		59708	0					
ANR	59838	UnaryOperationExpression	* last		59708	0					
ANR	59839	UnaryOperator	*		59708	0					
ANR	59840	Identifier	last		59708	1					
ANR	59841	CompoundStatement		27:4:607:607	59708	1					
ANR	59842	WhileStatement	while ( last != path )		59708	0					
ANR	59843	Condition	last != path	450:13:10906:10917	59708	0	True				
ANR	59844	EqualityExpression	last != path		59708	0		!=			
ANR	59845	Identifier	last		59708	0					
ANR	59846	Identifier	path		59708	1					
ANR	59847	IfStatement	if ( ! ISSLASH ( * -- last ) )		59708	1					
ANR	59848	Condition	! ISSLASH ( * -- last )	451:5:10925:10943	59708	0	True				
ANR	59849	UnaryOperationExpression	! ISSLASH ( * -- last )		59708	0					
ANR	59850	UnaryOperator	!		59708	0					
ANR	59851	CallExpression	ISSLASH ( * -- last )		59708	1					
ANR	59852	Callee	ISSLASH		59708	0					
ANR	59853	Identifier	ISSLASH		59708	0					
ANR	59854	ArgumentList	* -- last		59708	1					
ANR	59855	Argument	* -- last		59708	0					
ANR	59856	UnaryOperationExpression	* -- last		59708	0					
ANR	59857	UnaryOperator	*		59708	0					
ANR	59858	UnaryExpression	-- last		59708	1					
ANR	59859	IncDec	--		59708	0					
ANR	59860	Identifier	last		59708	1					
ANR	59861	BreakStatement	break ;	452:3:10949:10954	59708	1	True				
ANR	59862	WhileStatement	while ( last != path && ! ISSLASH ( * ( last - 1 ) ) )		59708	18					
ANR	59863	Condition	last != path && ! ISSLASH ( * ( last - 1 ) )	454:9:10971:11009	59708	0	True				
ANR	59864	AndExpression	last != path && ! ISSLASH ( * ( last - 1 ) )		59708	0		&&			
ANR	59865	EqualityExpression	last != path		59708	0		!=			
ANR	59866	Identifier	last		59708	0					
ANR	59867	Identifier	path		59708	1					
ANR	59868	UnaryOperationExpression	! ISSLASH ( * ( last - 1 ) )		59708	1					
ANR	59869	UnaryOperator	!		59708	0					
ANR	59870	CallExpression	ISSLASH ( * ( last - 1 ) )		59708	1					
ANR	59871	Callee	ISSLASH		59708	0					
ANR	59872	Identifier	ISSLASH		59708	0					
ANR	59873	ArgumentList	* ( last - 1 )		59708	1					
ANR	59874	Argument	* ( last - 1 )		59708	0					
ANR	59875	UnaryOperationExpression	* ( last - 1 )		59708	0					
ANR	59876	UnaryOperator	*		59708	0					
ANR	59877	AdditiveExpression	last - 1		59708	1		-			
ANR	59878	Identifier	last		59708	0					
ANR	59879	PrimaryExpression	1		59708	1					
ANR	59880	ExpressionStatement	last --	455:4:11016:11022	59708	1	True				
ANR	59881	PostIncDecOperationExpression	last --		59708	0					
ANR	59882	Identifier	last		59708	0					
ANR	59883	IncDec	--		59708	1					
ANR	59884	IfStatement	if ( last == path )		59708	19					
ANR	59885	Condition	last == path	456:6:11030:11041	59708	0	True				
ANR	59886	EqualityExpression	last == path		59708	0		==			
ANR	59887	Identifier	last		59708	0					
ANR	59888	Identifier	path		59708	1					
ANR	59889	ReturnStatement	return AT_FDCWD ;	457:4:11048:11063	59708	1	True				
ANR	59890	Identifier	AT_FDCWD		59708	0					
ANR	59891	IfStatement	if ( debug & 32 )		59708	20					
ANR	59892	Condition	debug & 32	459:6:11072:11081	59708	0	True				
ANR	59893	BitAndExpression	debug & 32		59708	0		&			
ANR	59894	Identifier	debug		59708	0					
ANR	59895	PrimaryExpression	32		59708	1					
ANR	59896	ExpressionStatement	"printf ( ""Resolving path \\""%.*s\\"""" , ( int ) ( last - path ) , path )"	460:4:11088:11149	59708	1	True				
ANR	59897	CallExpression	"printf ( ""Resolving path \\""%.*s\\"""" , ( int ) ( last - path ) , path )"		59708	0					
ANR	59898	Callee	printf		59708	0					
ANR	59899	Identifier	printf		59708	0					
ANR	59900	ArgumentList	"""Resolving path \\""%.*s\\"""""		59708	1					
ANR	59901	Argument	"""Resolving path \\""%.*s\\"""""		59708	0					
ANR	59902	PrimaryExpression	"""Resolving path \\""%.*s\\"""""		59708	0					
ANR	59903	Argument	( int ) ( last - path )		59708	1					
ANR	59904	CastExpression	( int ) ( last - path )		59708	0					
ANR	59905	CastTarget	int		59708	0					
ANR	59906	AdditiveExpression	last - path		59708	1		-			
ANR	59907	Identifier	last		59708	0					
ANR	59908	Identifier	path		59708	1					
ANR	59909	Argument	path		59708	2					
ANR	59910	Identifier	path		59708	0					
ANR	59911	WhileStatement	while ( stack || path != last )		59708	21					
ANR	59912	Condition	stack || path != last	462:9:11161:11181	59708	0	True				
ANR	59913	OrExpression	stack || path != last		59708	0		||			
ANR	59914	Identifier	stack		59708	0					
ANR	59915	EqualityExpression	path != last		59708	1		!=			
ANR	59916	Identifier	path		59708	0					
ANR	59917	Identifier	last		59708	1					
ANR	59918	CompoundStatement		44:6:984:1007	59708	1					
ANR	59919	IdentifierDeclStatement	struct cached_dirfd * entry ;	464:6:11196:11222	59708	0	True				
ANR	59920	IdentifierDecl	* entry		59708	0					
ANR	59921	IdentifierDeclType	struct cached_dirfd *		59708	0					
ANR	59922	Identifier	entry		59708	1					
ANR	59923	IdentifierDeclStatement	struct symlink * symlink = NULL ;	465:6:11230:11260	59708	1	True				
ANR	59924	IdentifierDecl	* symlink = NULL		59708	0					
ANR	59925	IdentifierDeclType	struct symlink *		59708	0					
ANR	59926	Identifier	symlink		59708	1					
ANR	59927	AssignmentExpression	* symlink = NULL		59708	2		=			
ANR	59928	Identifier	NULL		59708	0					
ANR	59929	Identifier	NULL		59708	1					
ANR	59930	IdentifierDeclStatement	const char * prev = path ;	466:6:11268:11291	59708	2	True				
ANR	59931	IdentifierDecl	* prev = path		59708	0					
ANR	59932	IdentifierDeclType	const char *		59708	0					
ANR	59933	Identifier	prev		59708	1					
ANR	59934	AssignmentExpression	* prev = path		59708	2		=			
ANR	59935	Identifier	path		59708	0					
ANR	59936	Identifier	path		59708	1					
ANR	59937	ExpressionStatement	"entry = traverse_next ( dir , stack ? & stack -> path : & path , keepfd , & symlink )"	468:6:11300:11375	59708	3	True				
ANR	59938	AssignmentExpression	"entry = traverse_next ( dir , stack ? & stack -> path : & path , keepfd , & symlink )"		59708	0		=			
ANR	59939	Identifier	entry		59708	0					
ANR	59940	CallExpression	"traverse_next ( dir , stack ? & stack -> path : & path , keepfd , & symlink )"		59708	1					
ANR	59941	Callee	traverse_next		59708	0					
ANR	59942	Identifier	traverse_next		59708	0					
ANR	59943	ArgumentList	dir		59708	1					
ANR	59944	Argument	dir		59708	0					
ANR	59945	Identifier	dir		59708	0					
ANR	59946	Argument	stack ? & stack -> path : & path		59708	1					
ANR	59947	ConditionalExpression	stack ? & stack -> path : & path		59708	0					
ANR	59948	Condition	stack		59708	0					
ANR	59949	Identifier	stack		59708	0					
ANR	59950	UnaryOperationExpression	& stack -> path		59708	1					
ANR	59951	UnaryOperator	&		59708	0					
ANR	59952	PtrMemberAccess	stack -> path		59708	1					
ANR	59953	Identifier	stack		59708	0					
ANR	59954	Identifier	path		59708	1					
ANR	59955	UnaryOperationExpression	& path		59708	2					
ANR	59956	UnaryOperator	&		59708	0					
ANR	59957	Identifier	path		59708	1					
ANR	59958	Argument	keepfd		59708	2					
ANR	59959	Identifier	keepfd		59708	0					
ANR	59960	Argument	& symlink		59708	3					
ANR	59961	UnaryOperationExpression	& symlink		59708	0					
ANR	59962	UnaryOperator	&		59708	0					
ANR	59963	Identifier	symlink		59708	1					
ANR	59964	IfStatement	if ( ! entry )		59708	4					
ANR	59965	Condition	! entry	469:10:11387:11393	59708	0	True				
ANR	59966	UnaryOperationExpression	! entry		59708	0					
ANR	59967	UnaryOperator	!		59708	0					
ANR	59968	Identifier	entry		59708	1					
ANR	59969	CompoundStatement		48:1:1113:1113	59708	1					
ANR	59970	IfStatement	if ( debug & 32 )		59708	0					
ANR	59971	Condition	debug & 32	471:7:11406:11415	59708	0	True				
ANR	59972	BitAndExpression	debug & 32		59708	0		&			
ANR	59973	Identifier	debug		59708	0					
ANR	59974	PrimaryExpression	32		59708	1					
ANR	59975	CompoundStatement		50:5:1139:1139	59708	1					
ANR	59976	ExpressionStatement	"printf ( "" (failed)\\n"" )"	473:7:11432:11454	59708	0	True				
ANR	59977	CallExpression	"printf ( "" (failed)\\n"" )"		59708	0					
ANR	59978	Callee	printf		59708	0					
ANR	59979	Identifier	printf		59708	0					
ANR	59980	ArgumentList	""" (failed)\\n"""		59708	1					
ANR	59981	Argument	""" (failed)\\n"""		59708	0					
ANR	59982	PrimaryExpression	""" (failed)\\n"""		59708	0					
ANR	59983	ExpressionStatement	fflush ( stdout )	474:7:11463:11478	59708	1	True				
ANR	59984	CallExpression	fflush ( stdout )		59708	0					
ANR	59985	Callee	fflush		59708	0					
ANR	59986	Identifier	fflush		59708	0					
ANR	59987	ArgumentList	stdout		59708	1					
ANR	59988	Argument	stdout		59708	0					
ANR	59989	Identifier	stdout		59708	0					
ANR	59990	GotoStatement	goto fail ;	476:3:11490:11499	59708	1	True				
ANR	59991	Identifier	fail		59708	0					
ANR	59992	ExpressionStatement	dir = entry	478:6:11510:11521	59708	5	True				
ANR	59993	AssignmentExpression	dir = entry		59708	0		=			
ANR	59994	Identifier	dir		59708	0					
ANR	59995	Identifier	entry		59708	1					
ANR	59996	IfStatement	if ( ! stack && symlink )		59708	6					
ANR	59997	Condition	! stack && symlink	479:10:11533:11550	59708	0	True				
ANR	59998	AndExpression	! stack && symlink		59708	0		&&			
ANR	59999	UnaryOperationExpression	! stack		59708	0					
ANR	60000	UnaryOperator	!		59708	0					
ANR	60001	Identifier	stack		59708	1					
ANR	60002	Identifier	symlink		59708	1					
ANR	60003	CompoundStatement		60:3:1300:1310	59708	1					
ANR	60004	IdentifierDeclStatement	const char * p = prev ;	481:3:11559:11579	59708	0	True				
ANR	60005	IdentifierDecl	* p = prev		59708	0					
ANR	60006	IdentifierDeclType	const char *		59708	0					
ANR	60007	Identifier	p		59708	1					
ANR	60008	AssignmentExpression	* p = prev		59708	2		=			
ANR	60009	Identifier	prev		59708	0					
ANR	60010	Identifier	prev		59708	1					
ANR	60011	IdentifierDeclStatement	char * name ;	482:3:11584:11594	59708	1	True				
ANR	60012	IdentifierDecl	* name		59708	0					
ANR	60013	IdentifierDeclType	char *		59708	0					
ANR	60014	Identifier	name		59708	1					
ANR	60015	WhileStatement	while ( * p && ! ISSLASH ( * p ) )		59708	2					
ANR	60016	Condition	* p && ! ISSLASH ( * p )	484:10:11607:11626	59708	0	True				
ANR	60017	AndExpression	* p && ! ISSLASH ( * p )		59708	0		&&			
ANR	60018	UnaryOperationExpression	* p		59708	0					
ANR	60019	UnaryOperator	*		59708	0					
ANR	60020	Identifier	p		59708	1					
ANR	60021	UnaryOperationExpression	! ISSLASH ( * p )		59708	1					
ANR	60022	UnaryOperator	!		59708	0					
ANR	60023	CallExpression	ISSLASH ( * p )		59708	1					
ANR	60024	Callee	ISSLASH		59708	0					
ANR	60025	Identifier	ISSLASH		59708	0					
ANR	60026	ArgumentList	* p		59708	1					
ANR	60027	Argument	* p		59708	0					
ANR	60028	UnaryOperationExpression	* p		59708	0					
ANR	60029	UnaryOperator	*		59708	0					
ANR	60030	Identifier	p		59708	1					
ANR	60031	ExpressionStatement	p ++	485:5:11634:11637	59708	1	True				
ANR	60032	PostIncDecOperationExpression	p ++		59708	0					
ANR	60033	Identifier	p		59708	0					
ANR	60034	IncDec	++		59708	1					
ANR	60035	ExpressionStatement	name = alloca ( p - prev + 1 )	486:3:11642:11670	59708	3	True				
ANR	60036	AssignmentExpression	name = alloca ( p - prev + 1 )		59708	0		=			
ANR	60037	Identifier	name		59708	0					
ANR	60038	CallExpression	alloca ( p - prev + 1 )		59708	1					
ANR	60039	Callee	alloca		59708	0					
ANR	60040	Identifier	alloca		59708	0					
ANR	60041	ArgumentList	p - prev + 1		59708	1					
ANR	60042	Argument	p - prev + 1		59708	0					
ANR	60043	AdditiveExpression	p - prev + 1		59708	0		-			
ANR	60044	Identifier	p		59708	0					
ANR	60045	AdditiveExpression	prev + 1		59708	1		+			
ANR	60046	Identifier	prev		59708	0					
ANR	60047	PrimaryExpression	1		59708	1					
ANR	60048	ExpressionStatement	"memcpy ( name , prev , p - prev )"	487:3:11675:11704	59708	4	True				
ANR	60049	CallExpression	"memcpy ( name , prev , p - prev )"		59708	0					
ANR	60050	Callee	memcpy		59708	0					
ANR	60051	Identifier	memcpy		59708	0					
ANR	60052	ArgumentList	name		59708	1					
ANR	60053	Argument	name		59708	0					
ANR	60054	Identifier	name		59708	0					
ANR	60055	Argument	prev		59708	1					
ANR	60056	Identifier	prev		59708	0					
ANR	60057	Argument	p - prev		59708	2					
ANR	60058	AdditiveExpression	p - prev		59708	0		-			
ANR	60059	Identifier	p		59708	0					
ANR	60060	Identifier	prev		59708	1					
ANR	60061	ExpressionStatement	name [ p - prev ] = 0	488:3:11709:11727	59708	5	True				
ANR	60062	AssignmentExpression	name [ p - prev ] = 0		59708	0		=			
ANR	60063	ArrayIndexing	name [ p - prev ]		59708	0					
ANR	60064	Identifier	name		59708	0					
ANR	60065	AdditiveExpression	p - prev		59708	1		-			
ANR	60066	Identifier	p		59708	0					
ANR	60067	Identifier	prev		59708	1					
ANR	60068	PrimaryExpression	0		59708	1					
ANR	60069	ExpressionStatement	"traversed_symlink = new_cached_dirfd ( dir , name , - 1 )"	490:3:11733:11785	59708	6	True				
ANR	60070	AssignmentExpression	"traversed_symlink = new_cached_dirfd ( dir , name , - 1 )"		59708	0		=			
ANR	60071	Identifier	traversed_symlink		59708	0					
ANR	60072	CallExpression	"new_cached_dirfd ( dir , name , - 1 )"		59708	1					
ANR	60073	Callee	new_cached_dirfd		59708	0					
ANR	60074	Identifier	new_cached_dirfd		59708	0					
ANR	60075	ArgumentList	dir		59708	1					
ANR	60076	Argument	dir		59708	0					
ANR	60077	Identifier	dir		59708	0					
ANR	60078	Argument	name		59708	1					
ANR	60079	Identifier	name		59708	0					
ANR	60080	Argument	- 1		59708	2					
ANR	60081	UnaryOperationExpression	- 1		59708	0					
ANR	60082	UnaryOperator	-		59708	0					
ANR	60083	PrimaryExpression	1		59708	1					
ANR	60084	IfStatement	if ( stack && ! * stack -> path )		59708	7					
ANR	60085	Condition	stack && ! * stack -> path	492:10:11800:11822	59708	0	True				
ANR	60086	AndExpression	stack && ! * stack -> path		59708	0		&&			
ANR	60087	Identifier	stack		59708	0					
ANR	60088	UnaryOperationExpression	! * stack -> path		59708	1					
ANR	60089	UnaryOperator	!		59708	0					
ANR	60090	UnaryOperationExpression	* stack -> path		59708	1					
ANR	60091	UnaryOperator	*		59708	0					
ANR	60092	PtrMemberAccess	stack -> path		59708	1					
ANR	60093	Identifier	stack		59708	0					
ANR	60094	Identifier	path		59708	1					
ANR	60095	ExpressionStatement	pop_symlink ( & stack )	493:1:11826:11846	59708	1	True				
ANR	60096	CallExpression	pop_symlink ( & stack )		59708	0					
ANR	60097	Callee	pop_symlink		59708	0					
ANR	60098	Identifier	pop_symlink		59708	0					
ANR	60099	ArgumentList	& stack		59708	1					
ANR	60100	Argument	& stack		59708	0					
ANR	60101	UnaryOperationExpression	& stack		59708	0					
ANR	60102	UnaryOperator	&		59708	0					
ANR	60103	Identifier	stack		59708	1					
ANR	60104	IfStatement	if ( symlink && * symlink -> path )		59708	8					
ANR	60105	Condition	symlink && * symlink -> path	494:10:11858:11882	59708	0	True				
ANR	60106	AndExpression	symlink && * symlink -> path		59708	0		&&			
ANR	60107	Identifier	symlink		59708	0					
ANR	60108	UnaryOperationExpression	* symlink -> path		59708	1					
ANR	60109	UnaryOperator	*		59708	0					
ANR	60110	PtrMemberAccess	symlink -> path		59708	1					
ANR	60111	Identifier	symlink		59708	0					
ANR	60112	Identifier	path		59708	1					
ANR	60113	CompoundStatement		73:1:1602:1602	59708	1					
ANR	60114	ExpressionStatement	"push_symlink ( & stack , symlink )"	496:3:11891:11921	59708	0	True				
ANR	60115	CallExpression	"push_symlink ( & stack , symlink )"		59708	0					
ANR	60116	Callee	push_symlink		59708	0					
ANR	60117	Identifier	push_symlink		59708	0					
ANR	60118	ArgumentList	& stack		59708	1					
ANR	60119	Argument	& stack		59708	0					
ANR	60120	UnaryOperationExpression	& stack		59708	0					
ANR	60121	UnaryOperator	&		59708	0					
ANR	60122	Identifier	stack		59708	1					
ANR	60123	Argument	symlink		59708	1					
ANR	60124	Identifier	symlink		59708	0					
ANR	60125	ExpressionStatement	steps += count_path_components ( symlink -> path )	497:3:11926:11972	59708	1	True				
ANR	60126	AssignmentExpression	steps += count_path_components ( symlink -> path )		59708	0		+=			
ANR	60127	Identifier	steps		59708	0					
ANR	60128	CallExpression	count_path_components ( symlink -> path )		59708	1					
ANR	60129	Callee	count_path_components		59708	0					
ANR	60130	Identifier	count_path_components		59708	0					
ANR	60131	ArgumentList	symlink -> path		59708	1					
ANR	60132	Argument	symlink -> path		59708	0					
ANR	60133	PtrMemberAccess	symlink -> path		59708	0					
ANR	60134	Identifier	symlink		59708	0					
ANR	60135	Identifier	path		59708	1					
ANR	60136	IfStatement	if ( steps > MAX_PATH_COMPONENTS )		59708	2					
ANR	60137	Condition	steps > MAX_PATH_COMPONENTS	498:7:11981:12007	59708	0	True				
ANR	60138	RelationalExpression	steps > MAX_PATH_COMPONENTS		59708	0		>			
ANR	60139	Identifier	steps		59708	0					
ANR	60140	Identifier	MAX_PATH_COMPONENTS		59708	1					
ANR	60141	CompoundStatement		77:5:1731:1731	59708	1					
ANR	60142	ExpressionStatement	errno = ELOOP	500:7:12024:12037	59708	0	True				
ANR	60143	AssignmentExpression	errno = ELOOP		59708	0		=			
ANR	60144	Identifier	errno		59708	0					
ANR	60145	Identifier	ELOOP		59708	1					
ANR	60146	GotoStatement	goto fail ;	501:7:12046:12055	59708	1	True				
ANR	60147	Identifier	fail		59708	0					
ANR	60148	ElseStatement	else		59708	0					
ANR	60149	IfStatement	if ( symlink )		59708	0					
ANR	60150	Condition	symlink	504:15:12082:12088	59708	0	True				
ANR	60151	Identifier	symlink		59708	0					
ANR	60152	ExpressionStatement	pop_symlink ( & symlink )	505:1:12092:12114	59708	1	True				
ANR	60153	CallExpression	pop_symlink ( & symlink )		59708	0					
ANR	60154	Callee	pop_symlink		59708	0					
ANR	60155	Identifier	pop_symlink		59708	0					
ANR	60156	ArgumentList	& symlink		59708	1					
ANR	60157	Argument	& symlink		59708	0					
ANR	60158	UnaryOperationExpression	& symlink		59708	0					
ANR	60159	UnaryOperator	&		59708	0					
ANR	60160	Identifier	symlink		59708	1					
ANR	60161	IfStatement	if ( traversed_symlink && ! stack )		59708	9					
ANR	60162	Condition	traversed_symlink && ! stack	506:10:12126:12153	59708	0	True				
ANR	60163	AndExpression	traversed_symlink && ! stack		59708	0		&&			
ANR	60164	Identifier	traversed_symlink		59708	0					
ANR	60165	UnaryOperationExpression	! stack		59708	1					
ANR	60166	UnaryOperator	!		59708	0					
ANR	60167	Identifier	stack		59708	1					
ANR	60168	CompoundStatement		85:1:1873:1873	59708	1					
ANR	60169	ExpressionStatement	traversed_symlink -> fd = entry -> fd == AT_FDCWD ? AT_FDCWD : dup ( entry -> fd )	508:3:12162:12241	59708	0	True				
ANR	60170	AssignmentExpression	traversed_symlink -> fd = entry -> fd == AT_FDCWD ? AT_FDCWD : dup ( entry -> fd )		59708	0		=			
ANR	60171	PtrMemberAccess	traversed_symlink -> fd		59708	0					
ANR	60172	Identifier	traversed_symlink		59708	0					
ANR	60173	Identifier	fd		59708	1					
ANR	60174	ConditionalExpression	entry -> fd == AT_FDCWD ? AT_FDCWD : dup ( entry -> fd )		59708	1					
ANR	60175	Condition	entry -> fd == AT_FDCWD		59708	0					
ANR	60176	EqualityExpression	entry -> fd == AT_FDCWD		59708	0		==			
ANR	60177	PtrMemberAccess	entry -> fd		59708	0					
ANR	60178	Identifier	entry		59708	0					
ANR	60179	Identifier	fd		59708	1					
ANR	60180	Identifier	AT_FDCWD		59708	1					
ANR	60181	Identifier	AT_FDCWD		59708	1					
ANR	60182	CallExpression	dup ( entry -> fd )		59708	2					
ANR	60183	Callee	dup		59708	0					
ANR	60184	Identifier	dup		59708	0					
ANR	60185	ArgumentList	entry -> fd		59708	1					
ANR	60186	Argument	entry -> fd		59708	0					
ANR	60187	PtrMemberAccess	entry -> fd		59708	0					
ANR	60188	Identifier	entry		59708	0					
ANR	60189	Identifier	fd		59708	1					
ANR	60190	IfStatement	if ( traversed_symlink -> fd != - 1 )		59708	1					
ANR	60191	Condition	traversed_symlink -> fd != - 1	510:7:12250:12276	59708	0	True				
ANR	60192	EqualityExpression	traversed_symlink -> fd != - 1		59708	0		!=			
ANR	60193	PtrMemberAccess	traversed_symlink -> fd		59708	0					
ANR	60194	Identifier	traversed_symlink		59708	0					
ANR	60195	Identifier	fd		59708	1					
ANR	60196	UnaryOperationExpression	- 1		59708	1					
ANR	60197	UnaryOperator	-		59708	0					
ANR	60198	PrimaryExpression	1		59708	1					
ANR	60199	CompoundStatement		89:5:2000:2000	59708	1					
ANR	60200	ExpressionStatement	"insert_cached_dirfd ( traversed_symlink , keepfd )"	512:7:12293:12340	59708	0	True				
ANR	60201	CallExpression	"insert_cached_dirfd ( traversed_symlink , keepfd )"		59708	0					
ANR	60202	Callee	insert_cached_dirfd		59708	0					
ANR	60203	Identifier	insert_cached_dirfd		59708	0					
ANR	60204	ArgumentList	traversed_symlink		59708	1					
ANR	60205	Argument	traversed_symlink		59708	0					
ANR	60206	Identifier	traversed_symlink		59708	0					
ANR	60207	Argument	keepfd		59708	1					
ANR	60208	Identifier	keepfd		59708	0					
ANR	60209	ExpressionStatement	"list_add ( & traversed_symlink -> lru_link , & lru_list )"	513:7:12349:12399	59708	1	True				
ANR	60210	CallExpression	"list_add ( & traversed_symlink -> lru_link , & lru_list )"		59708	0					
ANR	60211	Callee	list_add		59708	0					
ANR	60212	Identifier	list_add		59708	0					
ANR	60213	ArgumentList	& traversed_symlink -> lru_link		59708	1					
ANR	60214	Argument	& traversed_symlink -> lru_link		59708	0					
ANR	60215	UnaryOperationExpression	& traversed_symlink -> lru_link		59708	0					
ANR	60216	UnaryOperator	&		59708	0					
ANR	60217	PtrMemberAccess	traversed_symlink -> lru_link		59708	1					
ANR	60218	Identifier	traversed_symlink		59708	0					
ANR	60219	Identifier	lru_link		59708	1					
ANR	60220	Argument	& lru_list		59708	1					
ANR	60221	UnaryOperationExpression	& lru_list		59708	0					
ANR	60222	UnaryOperator	&		59708	0					
ANR	60223	Identifier	lru_list		59708	1					
ANR	60224	ElseStatement	else		59708	0					
ANR	60225	ExpressionStatement	free_cached_dirfd ( traversed_symlink )	516:5:12421:12458	59708	0	True				
ANR	60226	CallExpression	free_cached_dirfd ( traversed_symlink )		59708	0					
ANR	60227	Callee	free_cached_dirfd		59708	0					
ANR	60228	Identifier	free_cached_dirfd		59708	0					
ANR	60229	ArgumentList	traversed_symlink		59708	1					
ANR	60230	Argument	traversed_symlink		59708	0					
ANR	60231	Identifier	traversed_symlink		59708	0					
ANR	60232	ExpressionStatement	traversed_symlink = NULL	517:3:12463:12487	59708	2	True				
ANR	60233	AssignmentExpression	traversed_symlink = NULL		59708	0		=			
ANR	60234	Identifier	traversed_symlink		59708	0					
ANR	60235	Identifier	NULL		59708	1					
ANR	60236	ExpressionStatement	* pathname = last	520:2:12500:12516	59708	22	True				
ANR	60237	AssignmentExpression	* pathname = last		59708	0		=			
ANR	60238	UnaryOperationExpression	* pathname		59708	0					
ANR	60239	UnaryOperator	*		59708	0					
ANR	60240	Identifier	pathname		59708	1					
ANR	60241	Identifier	last		59708	1					
ANR	60242	IfStatement	if ( debug & 32 )		59708	23					
ANR	60243	Condition	debug & 32	521:6:12524:12533	59708	0	True				
ANR	60244	BitAndExpression	debug & 32		59708	0		&			
ANR	60245	Identifier	debug		59708	0					
ANR	60246	PrimaryExpression	32		59708	1					
ANR	60247	CompoundStatement		100:4:2256:2256	59708	1					
ANR	60248	ExpressionStatement	misses = ( signed int ) dirfd_cache_misses - ( signed int ) misses	523:6:12548:12610	59708	0	True				
ANR	60249	AssignmentExpression	misses = ( signed int ) dirfd_cache_misses - ( signed int ) misses		59708	0		=			
ANR	60250	Identifier	misses		59708	0					
ANR	60251	AdditiveExpression	( signed int ) dirfd_cache_misses - ( signed int ) misses		59708	1		-			
ANR	60252	CastExpression	( signed int ) dirfd_cache_misses		59708	0					
ANR	60253	CastTarget	signed int		59708	0					
ANR	60254	Identifier	dirfd_cache_misses		59708	1					
ANR	60255	CastExpression	( signed int ) misses		59708	1					
ANR	60256	CastTarget	signed int		59708	0					
ANR	60257	Identifier	misses		59708	1					
ANR	60258	IfStatement	if ( ! misses )		59708	1					
ANR	60259	Condition	! misses	524:10:12622:12629	59708	0	True				
ANR	60260	UnaryOperationExpression	! misses		59708	0					
ANR	60261	UnaryOperator	!		59708	0					
ANR	60262	Identifier	misses		59708	1					
ANR	60263	ExpressionStatement	"printf ( "" (cached)\\n"" )"	525:1:12633:12654	59708	1	True				
ANR	60264	CallExpression	"printf ( "" (cached)\\n"" )"		59708	0					
ANR	60265	Callee	printf		59708	0					
ANR	60266	Identifier	printf		59708	0					
ANR	60267	ArgumentList	""" (cached)\\n"""		59708	1					
ANR	60268	Argument	""" (cached)\\n"""		59708	0					
ANR	60269	PrimaryExpression	""" (cached)\\n"""		59708	0					
ANR	60270	ElseStatement	else		59708	0					
ANR	60271	ExpressionStatement	"printf ( "" (%u miss%s)\\n"" , misses , misses == 1 ? """" : ""es"" )"	527:1:12668:12726	59708	0	True				
ANR	60272	CallExpression	"printf ( "" (%u miss%s)\\n"" , misses , misses == 1 ? """" : ""es"" )"		59708	0					
ANR	60273	Callee	printf		59708	0					
ANR	60274	Identifier	printf		59708	0					
ANR	60275	ArgumentList	""" (%u miss%s)\\n"""		59708	1					
ANR	60276	Argument	""" (%u miss%s)\\n"""		59708	0					
ANR	60277	PrimaryExpression	""" (%u miss%s)\\n"""		59708	0					
ANR	60278	Argument	misses		59708	1					
ANR	60279	Identifier	misses		59708	0					
ANR	60280	Argument	"misses == 1 ? """" : ""es"""		59708	2					
ANR	60281	ConditionalExpression	"misses == 1 ? """" : ""es"""		59708	0					
ANR	60282	Condition	misses == 1		59708	0					
ANR	60283	EqualityExpression	misses == 1		59708	0		==			
ANR	60284	Identifier	misses		59708	0					
ANR	60285	PrimaryExpression	1		59708	1					
ANR	60286	PrimaryExpression	""""""		59708	1					
ANR	60287	PrimaryExpression	"""es"""		59708	2					
ANR	60288	ExpressionStatement	fflush ( stdout )	528:6:12734:12749	59708	2	True				
ANR	60289	CallExpression	fflush ( stdout )		59708	0					
ANR	60290	Callee	fflush		59708	0					
ANR	60291	Identifier	fflush		59708	0					
ANR	60292	ArgumentList	stdout		59708	1					
ANR	60293	Argument	stdout		59708	0					
ANR	60294	Identifier	stdout		59708	0					
ANR	60295	ReturnStatement	return put_path ( dir ) ;	530:2:12759:12780	59708	24	True				
ANR	60296	CallExpression	put_path ( dir )		59708	0					
ANR	60297	Callee	put_path		59708	0					
ANR	60298	Identifier	put_path		59708	0					
ANR	60299	ArgumentList	dir		59708	1					
ANR	60300	Argument	dir		59708	0					
ANR	60301	Identifier	dir		59708	0					
ANR	60302	Label	fail :	532:0:12783:12787	59708	25	True				
ANR	60303	Identifier	fail		59708	0					
ANR	60304	IfStatement	if ( traversed_symlink )		59708	26					
ANR	60305	Condition	traversed_symlink	533:6:12795:12811	59708	0	True				
ANR	60306	Identifier	traversed_symlink		59708	0					
ANR	60307	ExpressionStatement	free_cached_dirfd ( traversed_symlink )	534:4:12818:12855	59708	1	True				
ANR	60308	CallExpression	free_cached_dirfd ( traversed_symlink )		59708	0					
ANR	60309	Callee	free_cached_dirfd		59708	0					
ANR	60310	Identifier	free_cached_dirfd		59708	0					
ANR	60311	ArgumentList	traversed_symlink		59708	1					
ANR	60312	Argument	traversed_symlink		59708	0					
ANR	60313	Identifier	traversed_symlink		59708	0					
ANR	60314	ExpressionStatement	put_path ( dir )	535:2:12859:12873	59708	27	True				
ANR	60315	CallExpression	put_path ( dir )		59708	0					
ANR	60316	Callee	put_path		59708	0					
ANR	60317	Identifier	put_path		59708	0					
ANR	60318	ArgumentList	dir		59708	1					
ANR	60319	Argument	dir		59708	0					
ANR	60320	Identifier	dir		59708	0					
ANR	60321	WhileStatement	while ( stack )		59708	28					
ANR	60322	Condition	stack	536:9:12884:12888	59708	0	True				
ANR	60323	Identifier	stack		59708	0					
ANR	60324	ExpressionStatement	pop_symlink ( & stack )	537:4:12895:12915	59708	1	True				
ANR	60325	CallExpression	pop_symlink ( & stack )		59708	0					
ANR	60326	Callee	pop_symlink		59708	0					
ANR	60327	Identifier	pop_symlink		59708	0					
ANR	60328	ArgumentList	& stack		59708	1					
ANR	60329	Argument	& stack		59708	0					
ANR	60330	UnaryOperationExpression	& stack		59708	0					
ANR	60331	UnaryOperator	&		59708	0					
ANR	60332	Identifier	stack		59708	1					
ANR	60333	ReturnStatement	return - 1 ;	538:2:12919:12928	59708	29	True				
ANR	60334	UnaryOperationExpression	- 1		59708	0					
ANR	60335	UnaryOperator	-		59708	0					
ANR	60336	PrimaryExpression	1		59708	1					
ANR	60337	ReturnType	static int		59708	1					
ANR	60338	Identifier	traverse_another_path		59708	2					
ANR	60339	ParameterList	"const char * * pathname , int keepfd"		59708	3					
ANR	60340	Parameter	const char * * pathname	422:34:10248:10268	59708	0	True				
ANR	60341	ParameterType	const char * *		59708	0					
ANR	60342	Identifier	pathname		59708	1					
ANR	60343	Parameter	int keepfd	422:57:10271:10280	59708	1	True				
ANR	60344	ParameterType	int		59708	0					
ANR	60345	Identifier	keepfd		59708	1					
ANR	60346	CFGEntryNode	ENTRY		59708		True				
ANR	60347	CFGExitNode	EXIT		59708		True				
ANR	60348	Symbol	stack		59708						
ANR	60349	Symbol	stdout		59708						
ANR	60350	Symbol	traversed_symlink		59708						
ANR	60351	Symbol	prev		59708						
ANR	60352	Symbol	AT_FDCWD		59708						
ANR	60353	Symbol	dir		59708						
ANR	60354	Symbol	ISSLASH		59708						
ANR	60355	Symbol	* ( last - 1 )		59708						
ANR	60356	Symbol	& path		59708						
ANR	60357	Symbol	path		59708						
ANR	60358	Symbol	& stack -> path		59708						
ANR	60359	Symbol	& traversed_symlink -> lru_link		59708						
ANR	60360	Symbol	ELOOP		59708						
ANR	60361	Symbol	& symlink		59708						
ANR	60362	Symbol	errno		59708						
ANR	60363	Symbol	NULL		59708						
ANR	60364	Symbol	last		59708						
ANR	60365	Symbol	dirfd_cache_misses		59708						
ANR	60366	Symbol	steps		59708						
ANR	60367	Symbol	symlink -> path		59708						
ANR	60368	Symbol	pathname		59708						
ANR	60369	Symbol	entry		59708						
ANR	60370	Symbol	traversed_symlink -> fd		59708						
ANR	60371	Symbol	* symlink		59708						
ANR	60372	Symbol	MAX_PATH_COMPONENTS		59708						
ANR	60373	Symbol	* -- last		59708						
ANR	60374	Symbol	name		59708						
ANR	60375	Symbol	* stack -> path		59708						
ANR	60376	Symbol	put_path		59708						
ANR	60377	Symbol	IS_ABSOLUTE_FILE_NAME		59708						
ANR	60378	Symbol	* prev		59708						
ANR	60379	Symbol	entry -> fd		59708						
ANR	60380	Symbol	* symlink -> path		59708						
ANR	60381	Symbol	& cwd		59708						
ANR	60382	Symbol	keepfd		59708						
ANR	60383	Symbol	traverse_next		59708						
ANR	60384	Symbol	misses		59708						
ANR	60385	Symbol	* * stack		59708						
ANR	60386	Symbol	symlink		59708						
ANR	60387	Symbol	& stack		59708						
ANR	60388	Symbol	* traversed_symlink		59708						
ANR	60389	Symbol	* pathname		59708						
ANR	60390	Symbol	* entry		59708						
ANR	60391	Symbol	* name		59708						
ANR	60392	Symbol	debug		59708						
ANR	60393	Symbol	alloca		59708						
ANR	60394	Symbol	& lru_list		59708						
ANR	60395	Symbol	* last		59708						
ANR	60396	Symbol	p		59708						
ANR	60397	Symbol	cwd		59708						
ANR	60398	Symbol	new_cached_dirfd		59708						
ANR	60399	Symbol	strrchr		59708						
ANR	60400	Symbol	* path		59708						
ANR	60401	Symbol	* stack		59708						
ANR	60402	Symbol	stack -> path		59708						
ANR	60403	Symbol	* * symlink		59708						
ANR	60404	Symbol	* p		59708						
ANR	60405	Symbol	& cwd . children		59708						
ANR	60406	Symbol	dup		59708						
ANR	60407	Symbol	count_path_components		59708						
ANR	60408	Function	traverse_path	542:0:12992:13090							
ANR	60409	FunctionDef	traverse_path (const char * * pathname)		60408	0					
ANR	60410	CompoundStatement		543:0:13041:13090	60408	0					
ANR	60411	ReturnStatement	"return traverse_another_path ( pathname , - 1 ) ;"	544:2:13045:13088	60408	0	True				
ANR	60412	CallExpression	"traverse_another_path ( pathname , - 1 )"		60408	0					
ANR	60413	Callee	traverse_another_path		60408	0					
ANR	60414	Identifier	traverse_another_path		60408	0					
ANR	60415	ArgumentList	pathname		60408	1					
ANR	60416	Argument	pathname		60408	0					
ANR	60417	Identifier	pathname		60408	0					
ANR	60418	Argument	- 1		60408	1					
ANR	60419	UnaryOperationExpression	- 1		60408	0					
ANR	60420	UnaryOperator	-		60408	0					
ANR	60421	PrimaryExpression	1		60408	1					
ANR	60422	ReturnType	static int		60408	1					
ANR	60423	Identifier	traverse_path		60408	2					
ANR	60424	ParameterList	const char * * pathname		60408	3					
ANR	60425	Parameter	const char * * pathname	542:26:13018:13038	60408	0	True				
ANR	60426	ParameterType	const char * *		60408	0					
ANR	60427	Identifier	pathname		60408	1					
ANR	60428	CFGEntryNode	ENTRY		60408		True				
ANR	60429	CFGExitNode	EXIT		60408		True				
ANR	60430	Symbol	traverse_another_path		60408						
ANR	60431	Symbol	pathname		60408						
ANR	60432	Function	safe_xstat	547:0:13093:13392							
ANR	60433	FunctionDef	"safe_xstat (const char * pathname , struct stat * buf , int flags)"		60432	0					
ANR	60434	CompoundStatement		548:0:13167:13392	60432	0					
ANR	60435	IdentifierDeclStatement	int dirfd ;	549:2:13171:13180	60432	0	True				
ANR	60436	IdentifierDecl	dirfd		60432	0					
ANR	60437	IdentifierDeclType	int		60432	0					
ANR	60438	Identifier	dirfd		60432	1					
ANR	60439	IfStatement	if ( unsafe )		60432	1					
ANR	60440	Condition	unsafe	551:6:13189:13194	60432	0	True				
ANR	60441	Identifier	unsafe		60432	0					
ANR	60442	ReturnStatement	"return fstatat ( AT_FDCWD , pathname , buf , flags ) ;"	552:4:13201:13248	60432	1	True				
ANR	60443	CallExpression	"fstatat ( AT_FDCWD , pathname , buf , flags )"		60432	0					
ANR	60444	Callee	fstatat		60432	0					
ANR	60445	Identifier	fstatat		60432	0					
ANR	60446	ArgumentList	AT_FDCWD		60432	1					
ANR	60447	Argument	AT_FDCWD		60432	0					
ANR	60448	Identifier	AT_FDCWD		60432	0					
ANR	60449	Argument	pathname		60432	1					
ANR	60450	Identifier	pathname		60432	0					
ANR	60451	Argument	buf		60432	2					
ANR	60452	Identifier	buf		60432	0					
ANR	60453	Argument	flags		60432	3					
ANR	60454	Identifier	flags		60432	0					
ANR	60455	ExpressionStatement	dirfd = traverse_path ( & pathname )	554:2:13253:13286	60432	2	True				
ANR	60456	AssignmentExpression	dirfd = traverse_path ( & pathname )		60432	0		=			
ANR	60457	Identifier	dirfd		60432	0					
ANR	60458	CallExpression	traverse_path ( & pathname )		60432	1					
ANR	60459	Callee	traverse_path		60432	0					
ANR	60460	Identifier	traverse_path		60432	0					
ANR	60461	ArgumentList	& pathname		60432	1					
ANR	60462	Argument	& pathname		60432	0					
ANR	60463	UnaryOperationExpression	& pathname		60432	0					
ANR	60464	UnaryOperator	&		60432	0					
ANR	60465	Identifier	pathname		60432	1					
ANR	60466	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		60432	3					
ANR	60467	Condition	dirfd < 0 && dirfd != AT_FDCWD	555:6:13294:13323	60432	0	True				
ANR	60468	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		60432	0		&&			
ANR	60469	RelationalExpression	dirfd < 0		60432	0		<			
ANR	60470	Identifier	dirfd		60432	0					
ANR	60471	PrimaryExpression	0		60432	1					
ANR	60472	EqualityExpression	dirfd != AT_FDCWD		60432	1		!=			
ANR	60473	Identifier	dirfd		60432	0					
ANR	60474	Identifier	AT_FDCWD		60432	1					
ANR	60475	ReturnStatement	return dirfd ;	556:4:13330:13342	60432	1	True				
ANR	60476	Identifier	dirfd		60432	0					
ANR	60477	ReturnStatement	"return fstatat ( dirfd , pathname , buf , flags ) ;"	557:2:13346:13390	60432	4	True				
ANR	60478	CallExpression	"fstatat ( dirfd , pathname , buf , flags )"		60432	0					
ANR	60479	Callee	fstatat		60432	0					
ANR	60480	Identifier	fstatat		60432	0					
ANR	60481	ArgumentList	dirfd		60432	1					
ANR	60482	Argument	dirfd		60432	0					
ANR	60483	Identifier	dirfd		60432	0					
ANR	60484	Argument	pathname		60432	1					
ANR	60485	Identifier	pathname		60432	0					
ANR	60486	Argument	buf		60432	2					
ANR	60487	Identifier	buf		60432	0					
ANR	60488	Argument	flags		60432	3					
ANR	60489	Identifier	flags		60432	0					
ANR	60490	ReturnType	static int		60432	1					
ANR	60491	Identifier	safe_xstat		60432	2					
ANR	60492	ParameterList	"const char * pathname , struct stat * buf , int flags"		60432	3					
ANR	60493	Parameter	const char * pathname	547:23:13116:13135	60432	0	True				
ANR	60494	ParameterType	const char *		60432	0					
ANR	60495	Identifier	pathname		60432	1					
ANR	60496	Parameter	struct stat * buf	547:45:13138:13153	60432	1	True				
ANR	60497	ParameterType	struct stat *		60432	0					
ANR	60498	Identifier	buf		60432	1					
ANR	60499	Parameter	int flags	547:63:13156:13164	60432	2	True				
ANR	60500	ParameterType	int		60432	0					
ANR	60501	Identifier	flags		60432	1					
ANR	60502	CFGEntryNode	ENTRY		60432		True				
ANR	60503	CFGExitNode	EXIT		60432		True				
ANR	60504	Symbol	buf		60432						
ANR	60505	Symbol	fstatat		60432						
ANR	60506	Symbol	traverse_path		60432						
ANR	60507	Symbol	flags		60432						
ANR	60508	Symbol	AT_FDCWD		60432						
ANR	60509	Symbol	dirfd		60432						
ANR	60510	Symbol	& pathname		60432						
ANR	60511	Symbol	unsafe		60432						
ANR	60512	Symbol	pathname		60432						
ANR	60513	Function	safe_stat	561:0:13424:13521							
ANR	60514	FunctionDef	"safe_stat (const char * pathname , struct stat * buf)"		60513	0					
ANR	60515	CompoundStatement		562:0:13479:13521	60513	0					
ANR	60516	ReturnStatement	"return safe_xstat ( pathname , buf , 0 ) ;"	563:2:13483:13519	60513	0	True				
ANR	60517	CallExpression	"safe_xstat ( pathname , buf , 0 )"		60513	0					
ANR	60518	Callee	safe_xstat		60513	0					
ANR	60519	Identifier	safe_xstat		60513	0					
ANR	60520	ArgumentList	pathname		60513	1					
ANR	60521	Argument	pathname		60513	0					
ANR	60522	Identifier	pathname		60513	0					
ANR	60523	Argument	buf		60513	1					
ANR	60524	Identifier	buf		60513	0					
ANR	60525	Argument	0		60513	2					
ANR	60526	PrimaryExpression	0		60513	0					
ANR	60527	ReturnType	int		60513	1					
ANR	60528	Identifier	safe_stat		60513	2					
ANR	60529	ParameterList	"const char * pathname , struct stat * buf"		60513	3					
ANR	60530	Parameter	const char * pathname	561:15:13439:13458	60513	0	True				
ANR	60531	ParameterType	const char *		60513	0					
ANR	60532	Identifier	pathname		60513	1					
ANR	60533	Parameter	struct stat * buf	561:37:13461:13476	60513	1	True				
ANR	60534	ParameterType	struct stat *		60513	0					
ANR	60535	Identifier	buf		60513	1					
ANR	60536	CFGEntryNode	ENTRY		60513		True				
ANR	60537	CFGExitNode	EXIT		60513		True				
ANR	60538	Symbol	buf		60513						
ANR	60539	Symbol	safe_xstat		60513						
ANR	60540	Symbol	pathname		60513						
ANR	60541	Function	safe_lstat	567:0:13554:13670							
ANR	60542	FunctionDef	"safe_lstat (const char * pathname , struct stat * buf)"		60541	0					
ANR	60543	CompoundStatement		568:0:13610:13670	60541	0					
ANR	60544	ReturnStatement	"return safe_xstat ( pathname , buf , AT_SYMLINK_NOFOLLOW ) ;"	569:2:13614:13668	60541	0	True				
ANR	60545	CallExpression	"safe_xstat ( pathname , buf , AT_SYMLINK_NOFOLLOW )"		60541	0					
ANR	60546	Callee	safe_xstat		60541	0					
ANR	60547	Identifier	safe_xstat		60541	0					
ANR	60548	ArgumentList	pathname		60541	1					
ANR	60549	Argument	pathname		60541	0					
ANR	60550	Identifier	pathname		60541	0					
ANR	60551	Argument	buf		60541	1					
ANR	60552	Identifier	buf		60541	0					
ANR	60553	Argument	AT_SYMLINK_NOFOLLOW		60541	2					
ANR	60554	Identifier	AT_SYMLINK_NOFOLLOW		60541	0					
ANR	60555	ReturnType	int		60541	1					
ANR	60556	Identifier	safe_lstat		60541	2					
ANR	60557	ParameterList	"const char * pathname , struct stat * buf"		60541	3					
ANR	60558	Parameter	const char * pathname	567:16:13570:13589	60541	0	True				
ANR	60559	ParameterType	const char *		60541	0					
ANR	60560	Identifier	pathname		60541	1					
ANR	60561	Parameter	struct stat * buf	567:38:13592:13607	60541	1	True				
ANR	60562	ParameterType	struct stat *		60541	0					
ANR	60563	Identifier	buf		60541	1					
ANR	60564	CFGEntryNode	ENTRY		60541		True				
ANR	60565	CFGExitNode	EXIT		60541		True				
ANR	60566	Symbol	buf		60541						
ANR	60567	Symbol	safe_xstat		60541						
ANR	60568	Symbol	AT_SYMLINK_NOFOLLOW		60541						
ANR	60569	Symbol	pathname		60541						
ANR	60570	Function	safe_open	573:0:13702:13976							
ANR	60571	FunctionDef	"safe_open (const char * pathname , int flags , mode_t mode)"		60570	0					
ANR	60572	CompoundStatement		574:0:13763:13976	60570	0					
ANR	60573	IdentifierDeclStatement	int dirfd ;	575:2:13767:13776	60570	0	True				
ANR	60574	IdentifierDecl	dirfd		60570	0					
ANR	60575	IdentifierDeclType	int		60570	0					
ANR	60576	Identifier	dirfd		60570	1					
ANR	60577	IfStatement	if ( unsafe )		60570	1					
ANR	60578	Condition	unsafe	577:6:13785:13790	60570	0	True				
ANR	60579	Identifier	unsafe		60570	0					
ANR	60580	ReturnStatement	"return open ( pathname , flags , mode ) ;"	578:4:13797:13832	60570	1	True				
ANR	60581	CallExpression	"open ( pathname , flags , mode )"		60570	0					
ANR	60582	Callee	open		60570	0					
ANR	60583	Identifier	open		60570	0					
ANR	60584	ArgumentList	pathname		60570	1					
ANR	60585	Argument	pathname		60570	0					
ANR	60586	Identifier	pathname		60570	0					
ANR	60587	Argument	flags		60570	1					
ANR	60588	Identifier	flags		60570	0					
ANR	60589	Argument	mode		60570	2					
ANR	60590	Identifier	mode		60570	0					
ANR	60591	ExpressionStatement	dirfd = traverse_path ( & pathname )	580:2:13837:13870	60570	2	True				
ANR	60592	AssignmentExpression	dirfd = traverse_path ( & pathname )		60570	0		=			
ANR	60593	Identifier	dirfd		60570	0					
ANR	60594	CallExpression	traverse_path ( & pathname )		60570	1					
ANR	60595	Callee	traverse_path		60570	0					
ANR	60596	Identifier	traverse_path		60570	0					
ANR	60597	ArgumentList	& pathname		60570	1					
ANR	60598	Argument	& pathname		60570	0					
ANR	60599	UnaryOperationExpression	& pathname		60570	0					
ANR	60600	UnaryOperator	&		60570	0					
ANR	60601	Identifier	pathname		60570	1					
ANR	60602	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		60570	3					
ANR	60603	Condition	dirfd < 0 && dirfd != AT_FDCWD	581:6:13878:13907	60570	0	True				
ANR	60604	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		60570	0		&&			
ANR	60605	RelationalExpression	dirfd < 0		60570	0		<			
ANR	60606	Identifier	dirfd		60570	0					
ANR	60607	PrimaryExpression	0		60570	1					
ANR	60608	EqualityExpression	dirfd != AT_FDCWD		60570	1		!=			
ANR	60609	Identifier	dirfd		60570	0					
ANR	60610	Identifier	AT_FDCWD		60570	1					
ANR	60611	ReturnStatement	return dirfd ;	582:4:13914:13926	60570	1	True				
ANR	60612	Identifier	dirfd		60570	0					
ANR	60613	ReturnStatement	"return openat ( dirfd , pathname , flags , mode ) ;"	583:2:13930:13974	60570	4	True				
ANR	60614	CallExpression	"openat ( dirfd , pathname , flags , mode )"		60570	0					
ANR	60615	Callee	openat		60570	0					
ANR	60616	Identifier	openat		60570	0					
ANR	60617	ArgumentList	dirfd		60570	1					
ANR	60618	Argument	dirfd		60570	0					
ANR	60619	Identifier	dirfd		60570	0					
ANR	60620	Argument	pathname		60570	1					
ANR	60621	Identifier	pathname		60570	0					
ANR	60622	Argument	flags		60570	2					
ANR	60623	Identifier	flags		60570	0					
ANR	60624	Argument	mode		60570	3					
ANR	60625	Identifier	mode		60570	0					
ANR	60626	ReturnType	int		60570	1					
ANR	60627	Identifier	safe_open		60570	2					
ANR	60628	ParameterList	"const char * pathname , int flags , mode_t mode"		60570	3					
ANR	60629	Parameter	const char * pathname	573:15:13717:13736	60570	0	True				
ANR	60630	ParameterType	const char *		60570	0					
ANR	60631	Identifier	pathname		60570	1					
ANR	60632	Parameter	int flags	573:37:13739:13747	60570	1	True				
ANR	60633	ParameterType	int		60570	0					
ANR	60634	Identifier	flags		60570	1					
ANR	60635	Parameter	mode_t mode	573:48:13750:13760	60570	2	True				
ANR	60636	ParameterType	mode_t		60570	0					
ANR	60637	Identifier	mode		60570	1					
ANR	60638	CFGEntryNode	ENTRY		60570		True				
ANR	60639	CFGExitNode	EXIT		60570		True				
ANR	60640	Symbol	mode		60570						
ANR	60641	Symbol	traverse_path		60570						
ANR	60642	Symbol	flags		60570						
ANR	60643	Symbol	AT_FDCWD		60570						
ANR	60644	Symbol	dirfd		60570						
ANR	60645	Symbol	& pathname		60570						
ANR	60646	Symbol	unsafe		60570						
ANR	60647	Symbol	open		60570						
ANR	60648	Symbol	openat		60570						
ANR	60649	Symbol	pathname		60570						
ANR	60650	Function	safe_rename	587:0:14010:14588							
ANR	60651	FunctionDef	"safe_rename (const char * oldpath , const char * newpath)"		60650	0					
ANR	60652	CompoundStatement		588:0:14069:14588	60650	0					
ANR	60653	IdentifierDeclStatement	"int olddirfd , newdirfd ;"	589:2:14073:14095	60650	0	True				
ANR	60654	IdentifierDecl	olddirfd		60650	0					
ANR	60655	IdentifierDeclType	int		60650	0					
ANR	60656	Identifier	olddirfd		60650	1					
ANR	60657	IdentifierDecl	newdirfd		60650	1					
ANR	60658	IdentifierDeclType	int		60650	0					
ANR	60659	Identifier	newdirfd		60650	1					
ANR	60660	IdentifierDeclStatement	int ret ;	590:2:14099:14106	60650	1	True				
ANR	60661	IdentifierDecl	ret		60650	0					
ANR	60662	IdentifierDeclType	int		60650	0					
ANR	60663	Identifier	ret		60650	1					
ANR	60664	IfStatement	if ( unsafe )		60650	2					
ANR	60665	Condition	unsafe	592:6:14115:14120	60650	0	True				
ANR	60666	Identifier	unsafe		60650	0					
ANR	60667	ReturnStatement	"return rename ( oldpath , newpath ) ;"	593:4:14127:14159	60650	1	True				
ANR	60668	CallExpression	"rename ( oldpath , newpath )"		60650	0					
ANR	60669	Callee	rename		60650	0					
ANR	60670	Identifier	rename		60650	0					
ANR	60671	ArgumentList	oldpath		60650	1					
ANR	60672	Argument	oldpath		60650	0					
ANR	60673	Identifier	oldpath		60650	0					
ANR	60674	Argument	newpath		60650	1					
ANR	60675	Identifier	newpath		60650	0					
ANR	60676	ExpressionStatement	olddirfd = traverse_path ( & oldpath )	595:2:14164:14199	60650	3	True				
ANR	60677	AssignmentExpression	olddirfd = traverse_path ( & oldpath )		60650	0		=			
ANR	60678	Identifier	olddirfd		60650	0					
ANR	60679	CallExpression	traverse_path ( & oldpath )		60650	1					
ANR	60680	Callee	traverse_path		60650	0					
ANR	60681	Identifier	traverse_path		60650	0					
ANR	60682	ArgumentList	& oldpath		60650	1					
ANR	60683	Argument	& oldpath		60650	0					
ANR	60684	UnaryOperationExpression	& oldpath		60650	0					
ANR	60685	UnaryOperator	&		60650	0					
ANR	60686	Identifier	oldpath		60650	1					
ANR	60687	IfStatement	if ( olddirfd < 0 && olddirfd != AT_FDCWD )		60650	4					
ANR	60688	Condition	olddirfd < 0 && olddirfd != AT_FDCWD	596:6:14207:14242	60650	0	True				
ANR	60689	AndExpression	olddirfd < 0 && olddirfd != AT_FDCWD		60650	0		&&			
ANR	60690	RelationalExpression	olddirfd < 0		60650	0		<			
ANR	60691	Identifier	olddirfd		60650	0					
ANR	60692	PrimaryExpression	0		60650	1					
ANR	60693	EqualityExpression	olddirfd != AT_FDCWD		60650	1		!=			
ANR	60694	Identifier	olddirfd		60650	0					
ANR	60695	Identifier	AT_FDCWD		60650	1					
ANR	60696	ReturnStatement	return olddirfd ;	597:4:14249:14264	60650	1	True				
ANR	60697	Identifier	olddirfd		60650	0					
ANR	60698	ExpressionStatement	"newdirfd = traverse_another_path ( & newpath , olddirfd )"	599:2:14269:14322	60650	5	True				
ANR	60699	AssignmentExpression	"newdirfd = traverse_another_path ( & newpath , olddirfd )"		60650	0		=			
ANR	60700	Identifier	newdirfd		60650	0					
ANR	60701	CallExpression	"traverse_another_path ( & newpath , olddirfd )"		60650	1					
ANR	60702	Callee	traverse_another_path		60650	0					
ANR	60703	Identifier	traverse_another_path		60650	0					
ANR	60704	ArgumentList	& newpath		60650	1					
ANR	60705	Argument	& newpath		60650	0					
ANR	60706	UnaryOperationExpression	& newpath		60650	0					
ANR	60707	UnaryOperator	&		60650	0					
ANR	60708	Identifier	newpath		60650	1					
ANR	60709	Argument	olddirfd		60650	1					
ANR	60710	Identifier	olddirfd		60650	0					
ANR	60711	IfStatement	if ( newdirfd < 0 && newdirfd != AT_FDCWD )		60650	6					
ANR	60712	Condition	newdirfd < 0 && newdirfd != AT_FDCWD	600:6:14330:14365	60650	0	True				
ANR	60713	AndExpression	newdirfd < 0 && newdirfd != AT_FDCWD		60650	0		&&			
ANR	60714	RelationalExpression	newdirfd < 0		60650	0		<			
ANR	60715	Identifier	newdirfd		60650	0					
ANR	60716	PrimaryExpression	0		60650	1					
ANR	60717	EqualityExpression	newdirfd != AT_FDCWD		60650	1		!=			
ANR	60718	Identifier	newdirfd		60650	0					
ANR	60719	Identifier	AT_FDCWD		60650	1					
ANR	60720	ReturnStatement	return newdirfd ;	601:4:14372:14387	60650	1	True				
ANR	60721	Identifier	newdirfd		60650	0					
ANR	60722	ExpressionStatement	"ret = renameat ( olddirfd , oldpath , newdirfd , newpath )"	603:2:14392:14445	60650	7	True				
ANR	60723	AssignmentExpression	"ret = renameat ( olddirfd , oldpath , newdirfd , newpath )"		60650	0		=			
ANR	60724	Identifier	ret		60650	0					
ANR	60725	CallExpression	"renameat ( olddirfd , oldpath , newdirfd , newpath )"		60650	1					
ANR	60726	Callee	renameat		60650	0					
ANR	60727	Identifier	renameat		60650	0					
ANR	60728	ArgumentList	olddirfd		60650	1					
ANR	60729	Argument	olddirfd		60650	0					
ANR	60730	Identifier	olddirfd		60650	0					
ANR	60731	Argument	oldpath		60650	1					
ANR	60732	Identifier	oldpath		60650	0					
ANR	60733	Argument	newdirfd		60650	2					
ANR	60734	Identifier	newdirfd		60650	0					
ANR	60735	Argument	newpath		60650	3					
ANR	60736	Identifier	newpath		60650	0					
ANR	60737	IfStatement	if ( ! ret )		60650	8					
ANR	60738	Condition	! ret	604:6:14453:14457	60650	0	True				
ANR	60739	UnaryOperationExpression	! ret		60650	0					
ANR	60740	UnaryOperator	!		60650	0					
ANR	60741	Identifier	ret		60650	1					
ANR	60742	CompoundStatement		18:4:394:394	60650	1					
ANR	60743	ExpressionStatement	"invalidate_cached_dirfd ( olddirfd , oldpath )"	606:6:14472:14515	60650	0	True				
ANR	60744	CallExpression	"invalidate_cached_dirfd ( olddirfd , oldpath )"		60650	0					
ANR	60745	Callee	invalidate_cached_dirfd		60650	0					
ANR	60746	Identifier	invalidate_cached_dirfd		60650	0					
ANR	60747	ArgumentList	olddirfd		60650	1					
ANR	60748	Argument	olddirfd		60650	0					
ANR	60749	Identifier	olddirfd		60650	0					
ANR	60750	Argument	oldpath		60650	1					
ANR	60751	Identifier	oldpath		60650	0					
ANR	60752	ExpressionStatement	"invalidate_cached_dirfd ( newdirfd , newpath )"	607:6:14523:14566	60650	1	True				
ANR	60753	CallExpression	"invalidate_cached_dirfd ( newdirfd , newpath )"		60650	0					
ANR	60754	Callee	invalidate_cached_dirfd		60650	0					
ANR	60755	Identifier	invalidate_cached_dirfd		60650	0					
ANR	60756	ArgumentList	newdirfd		60650	1					
ANR	60757	Argument	newdirfd		60650	0					
ANR	60758	Identifier	newdirfd		60650	0					
ANR	60759	Argument	newpath		60650	1					
ANR	60760	Identifier	newpath		60650	0					
ANR	60761	ReturnStatement	return ret ;	609:2:14576:14586	60650	9	True				
ANR	60762	Identifier	ret		60650	0					
ANR	60763	ReturnType	int		60650	1					
ANR	60764	Identifier	safe_rename		60650	2					
ANR	60765	ParameterList	"const char * oldpath , const char * newpath"		60650	3					
ANR	60766	Parameter	const char * oldpath	587:17:14027:14045	60650	0	True				
ANR	60767	ParameterType	const char *		60650	0					
ANR	60768	Identifier	oldpath		60650	1					
ANR	60769	Parameter	const char * newpath	587:38:14048:14066	60650	1	True				
ANR	60770	ParameterType	const char *		60650	0					
ANR	60771	Identifier	newpath		60650	1					
ANR	60772	CFGEntryNode	ENTRY		60650		True				
ANR	60773	CFGExitNode	EXIT		60650		True				
ANR	60774	Symbol	ret		60650						
ANR	60775	Symbol	traverse_another_path		60650						
ANR	60776	Symbol	traverse_path		60650						
ANR	60777	Symbol	AT_FDCWD		60650						
ANR	60778	Symbol	renameat		60650						
ANR	60779	Symbol	unsafe		60650						
ANR	60780	Symbol	newpath		60650						
ANR	60781	Symbol	& oldpath		60650						
ANR	60782	Symbol	newdirfd		60650						
ANR	60783	Symbol	rename		60650						
ANR	60784	Symbol	oldpath		60650						
ANR	60785	Symbol	& newpath		60650						
ANR	60786	Symbol	olddirfd		60650						
ANR	60787	Function	safe_mkdir	613:0:14621:14873							
ANR	60788	FunctionDef	"safe_mkdir (const char * pathname , mode_t mode)"		60787	0					
ANR	60789	CompoundStatement		614:0:14672:14873	60787	0					
ANR	60790	IdentifierDeclStatement	int dirfd ;	615:2:14676:14685	60787	0	True				
ANR	60791	IdentifierDecl	dirfd		60787	0					
ANR	60792	IdentifierDeclType	int		60787	0					
ANR	60793	Identifier	dirfd		60787	1					
ANR	60794	IfStatement	if ( unsafe )		60787	1					
ANR	60795	Condition	unsafe	617:6:14694:14699	60787	0	True				
ANR	60796	Identifier	unsafe		60787	0					
ANR	60797	ReturnStatement	"return mkdir ( pathname , mode ) ;"	618:4:14706:14735	60787	1	True				
ANR	60798	CallExpression	"mkdir ( pathname , mode )"		60787	0					
ANR	60799	Callee	mkdir		60787	0					
ANR	60800	Identifier	mkdir		60787	0					
ANR	60801	ArgumentList	pathname		60787	1					
ANR	60802	Argument	pathname		60787	0					
ANR	60803	Identifier	pathname		60787	0					
ANR	60804	Argument	mode		60787	1					
ANR	60805	Identifier	mode		60787	0					
ANR	60806	ExpressionStatement	dirfd = traverse_path ( & pathname )	620:2:14740:14773	60787	2	True				
ANR	60807	AssignmentExpression	dirfd = traverse_path ( & pathname )		60787	0		=			
ANR	60808	Identifier	dirfd		60787	0					
ANR	60809	CallExpression	traverse_path ( & pathname )		60787	1					
ANR	60810	Callee	traverse_path		60787	0					
ANR	60811	Identifier	traverse_path		60787	0					
ANR	60812	ArgumentList	& pathname		60787	1					
ANR	60813	Argument	& pathname		60787	0					
ANR	60814	UnaryOperationExpression	& pathname		60787	0					
ANR	60815	UnaryOperator	&		60787	0					
ANR	60816	Identifier	pathname		60787	1					
ANR	60817	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		60787	3					
ANR	60818	Condition	dirfd < 0 && dirfd != AT_FDCWD	621:6:14781:14810	60787	0	True				
ANR	60819	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		60787	0		&&			
ANR	60820	RelationalExpression	dirfd < 0		60787	0		<			
ANR	60821	Identifier	dirfd		60787	0					
ANR	60822	PrimaryExpression	0		60787	1					
ANR	60823	EqualityExpression	dirfd != AT_FDCWD		60787	1		!=			
ANR	60824	Identifier	dirfd		60787	0					
ANR	60825	Identifier	AT_FDCWD		60787	1					
ANR	60826	ReturnStatement	return dirfd ;	622:4:14817:14829	60787	1	True				
ANR	60827	Identifier	dirfd		60787	0					
ANR	60828	ReturnStatement	"return mkdirat ( dirfd , pathname , mode ) ;"	623:2:14833:14871	60787	4	True				
ANR	60829	CallExpression	"mkdirat ( dirfd , pathname , mode )"		60787	0					
ANR	60830	Callee	mkdirat		60787	0					
ANR	60831	Identifier	mkdirat		60787	0					
ANR	60832	ArgumentList	dirfd		60787	1					
ANR	60833	Argument	dirfd		60787	0					
ANR	60834	Identifier	dirfd		60787	0					
ANR	60835	Argument	pathname		60787	1					
ANR	60836	Identifier	pathname		60787	0					
ANR	60837	Argument	mode		60787	2					
ANR	60838	Identifier	mode		60787	0					
ANR	60839	ReturnType	int		60787	1					
ANR	60840	Identifier	safe_mkdir		60787	2					
ANR	60841	ParameterList	"const char * pathname , mode_t mode"		60787	3					
ANR	60842	Parameter	const char * pathname	613:16:14637:14656	60787	0	True				
ANR	60843	ParameterType	const char *		60787	0					
ANR	60844	Identifier	pathname		60787	1					
ANR	60845	Parameter	mode_t mode	613:38:14659:14669	60787	1	True				
ANR	60846	ParameterType	mode_t		60787	0					
ANR	60847	Identifier	mode		60787	1					
ANR	60848	CFGEntryNode	ENTRY		60787		True				
ANR	60849	CFGExitNode	EXIT		60787		True				
ANR	60850	Symbol	mode		60787						
ANR	60851	Symbol	mkdirat		60787						
ANR	60852	Symbol	traverse_path		60787						
ANR	60853	Symbol	AT_FDCWD		60787						
ANR	60854	Symbol	dirfd		60787						
ANR	60855	Symbol	& pathname		60787						
ANR	60856	Symbol	unsafe		60787						
ANR	60857	Symbol	mkdir		60787						
ANR	60858	Symbol	pathname		60787						
ANR	60859	Function	safe_rmdir	627:0:14906:15233							
ANR	60860	FunctionDef	safe_rmdir (const char * pathname)		60859	0					
ANR	60861	CompoundStatement		628:0:14944:15233	60859	0					
ANR	60862	IdentifierDeclStatement	int dirfd ;	629:2:14948:14957	60859	0	True				
ANR	60863	IdentifierDecl	dirfd		60859	0					
ANR	60864	IdentifierDeclType	int		60859	0					
ANR	60865	Identifier	dirfd		60859	1					
ANR	60866	IdentifierDeclStatement	int ret ;	630:2:14961:14968	60859	1	True				
ANR	60867	IdentifierDecl	ret		60859	0					
ANR	60868	IdentifierDeclType	int		60859	0					
ANR	60869	Identifier	ret		60859	1					
ANR	60870	IfStatement	if ( unsafe )		60859	2					
ANR	60871	Condition	unsafe	632:6:14977:14982	60859	0	True				
ANR	60872	Identifier	unsafe		60859	0					
ANR	60873	ReturnStatement	return rmdir ( pathname ) ;	633:4:14989:15012	60859	1	True				
ANR	60874	CallExpression	rmdir ( pathname )		60859	0					
ANR	60875	Callee	rmdir		60859	0					
ANR	60876	Identifier	rmdir		60859	0					
ANR	60877	ArgumentList	pathname		60859	1					
ANR	60878	Argument	pathname		60859	0					
ANR	60879	Identifier	pathname		60859	0					
ANR	60880	ExpressionStatement	dirfd = traverse_path ( & pathname )	635:2:15017:15050	60859	3	True				
ANR	60881	AssignmentExpression	dirfd = traverse_path ( & pathname )		60859	0		=			
ANR	60882	Identifier	dirfd		60859	0					
ANR	60883	CallExpression	traverse_path ( & pathname )		60859	1					
ANR	60884	Callee	traverse_path		60859	0					
ANR	60885	Identifier	traverse_path		60859	0					
ANR	60886	ArgumentList	& pathname		60859	1					
ANR	60887	Argument	& pathname		60859	0					
ANR	60888	UnaryOperationExpression	& pathname		60859	0					
ANR	60889	UnaryOperator	&		60859	0					
ANR	60890	Identifier	pathname		60859	1					
ANR	60891	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		60859	4					
ANR	60892	Condition	dirfd < 0 && dirfd != AT_FDCWD	636:6:15058:15087	60859	0	True				
ANR	60893	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		60859	0		&&			
ANR	60894	RelationalExpression	dirfd < 0		60859	0		<			
ANR	60895	Identifier	dirfd		60859	0					
ANR	60896	PrimaryExpression	0		60859	1					
ANR	60897	EqualityExpression	dirfd != AT_FDCWD		60859	1		!=			
ANR	60898	Identifier	dirfd		60859	0					
ANR	60899	Identifier	AT_FDCWD		60859	1					
ANR	60900	ReturnStatement	return dirfd ;	637:4:15094:15106	60859	1	True				
ANR	60901	Identifier	dirfd		60859	0					
ANR	60902	ExpressionStatement	"ret = unlinkat ( dirfd , pathname , AT_REMOVEDIR )"	639:2:15111:15157	60859	5	True				
ANR	60903	AssignmentExpression	"ret = unlinkat ( dirfd , pathname , AT_REMOVEDIR )"		60859	0		=			
ANR	60904	Identifier	ret		60859	0					
ANR	60905	CallExpression	"unlinkat ( dirfd , pathname , AT_REMOVEDIR )"		60859	1					
ANR	60906	Callee	unlinkat		60859	0					
ANR	60907	Identifier	unlinkat		60859	0					
ANR	60908	ArgumentList	dirfd		60859	1					
ANR	60909	Argument	dirfd		60859	0					
ANR	60910	Identifier	dirfd		60859	0					
ANR	60911	Argument	pathname		60859	1					
ANR	60912	Identifier	pathname		60859	0					
ANR	60913	Argument	AT_REMOVEDIR		60859	2					
ANR	60914	Identifier	AT_REMOVEDIR		60859	0					
ANR	60915	IfStatement	if ( ! ret )		60859	6					
ANR	60916	Condition	! ret	640:6:15165:15169	60859	0	True				
ANR	60917	UnaryOperationExpression	! ret		60859	0					
ANR	60918	UnaryOperator	!		60859	0					
ANR	60919	Identifier	ret		60859	1					
ANR	60920	ExpressionStatement	"invalidate_cached_dirfd ( dirfd , pathname )"	641:4:15176:15217	60859	1	True				
ANR	60921	CallExpression	"invalidate_cached_dirfd ( dirfd , pathname )"		60859	0					
ANR	60922	Callee	invalidate_cached_dirfd		60859	0					
ANR	60923	Identifier	invalidate_cached_dirfd		60859	0					
ANR	60924	ArgumentList	dirfd		60859	1					
ANR	60925	Argument	dirfd		60859	0					
ANR	60926	Identifier	dirfd		60859	0					
ANR	60927	Argument	pathname		60859	1					
ANR	60928	Identifier	pathname		60859	0					
ANR	60929	ReturnStatement	return ret ;	642:2:15221:15231	60859	7	True				
ANR	60930	Identifier	ret		60859	0					
ANR	60931	ReturnType	int		60859	1					
ANR	60932	Identifier	safe_rmdir		60859	2					
ANR	60933	ParameterList	const char * pathname		60859	3					
ANR	60934	Parameter	const char * pathname	627:16:14922:14941	60859	0	True				
ANR	60935	ParameterType	const char *		60859	0					
ANR	60936	Identifier	pathname		60859	1					
ANR	60937	CFGEntryNode	ENTRY		60859		True				
ANR	60938	CFGExitNode	EXIT		60859		True				
ANR	60939	Symbol	ret		60859						
ANR	60940	Symbol	AT_REMOVEDIR		60859						
ANR	60941	Symbol	traverse_path		60859						
ANR	60942	Symbol	AT_FDCWD		60859						
ANR	60943	Symbol	dirfd		60859						
ANR	60944	Symbol	& pathname		60859						
ANR	60945	Symbol	rmdir		60859						
ANR	60946	Symbol	unlinkat		60859						
ANR	60947	Symbol	unsafe		60859						
ANR	60948	Symbol	pathname		60859						
ANR	60949	Function	safe_unlink	646:0:15267:15500							
ANR	60950	FunctionDef	safe_unlink (const char * pathname)		60949	0					
ANR	60951	CompoundStatement		647:0:15306:15500	60949	0					
ANR	60952	IdentifierDeclStatement	int dirfd ;	648:2:15310:15319	60949	0	True				
ANR	60953	IdentifierDecl	dirfd		60949	0					
ANR	60954	IdentifierDeclType	int		60949	0					
ANR	60955	Identifier	dirfd		60949	1					
ANR	60956	IfStatement	if ( unsafe )		60949	1					
ANR	60957	Condition	unsafe	650:6:15328:15333	60949	0	True				
ANR	60958	Identifier	unsafe		60949	0					
ANR	60959	ReturnStatement	return unlink ( pathname ) ;	651:4:15340:15364	60949	1	True				
ANR	60960	CallExpression	unlink ( pathname )		60949	0					
ANR	60961	Callee	unlink		60949	0					
ANR	60962	Identifier	unlink		60949	0					
ANR	60963	ArgumentList	pathname		60949	1					
ANR	60964	Argument	pathname		60949	0					
ANR	60965	Identifier	pathname		60949	0					
ANR	60966	ExpressionStatement	dirfd = traverse_path ( & pathname )	653:2:15369:15402	60949	2	True				
ANR	60967	AssignmentExpression	dirfd = traverse_path ( & pathname )		60949	0		=			
ANR	60968	Identifier	dirfd		60949	0					
ANR	60969	CallExpression	traverse_path ( & pathname )		60949	1					
ANR	60970	Callee	traverse_path		60949	0					
ANR	60971	Identifier	traverse_path		60949	0					
ANR	60972	ArgumentList	& pathname		60949	1					
ANR	60973	Argument	& pathname		60949	0					
ANR	60974	UnaryOperationExpression	& pathname		60949	0					
ANR	60975	UnaryOperator	&		60949	0					
ANR	60976	Identifier	pathname		60949	1					
ANR	60977	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		60949	3					
ANR	60978	Condition	dirfd < 0 && dirfd != AT_FDCWD	654:6:15410:15439	60949	0	True				
ANR	60979	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		60949	0		&&			
ANR	60980	RelationalExpression	dirfd < 0		60949	0		<			
ANR	60981	Identifier	dirfd		60949	0					
ANR	60982	PrimaryExpression	0		60949	1					
ANR	60983	EqualityExpression	dirfd != AT_FDCWD		60949	1		!=			
ANR	60984	Identifier	dirfd		60949	0					
ANR	60985	Identifier	AT_FDCWD		60949	1					
ANR	60986	ReturnStatement	return dirfd ;	655:4:15446:15458	60949	1	True				
ANR	60987	Identifier	dirfd		60949	0					
ANR	60988	ReturnStatement	"return unlinkat ( dirfd , pathname , 0 ) ;"	656:2:15462:15498	60949	4	True				
ANR	60989	CallExpression	"unlinkat ( dirfd , pathname , 0 )"		60949	0					
ANR	60990	Callee	unlinkat		60949	0					
ANR	60991	Identifier	unlinkat		60949	0					
ANR	60992	ArgumentList	dirfd		60949	1					
ANR	60993	Argument	dirfd		60949	0					
ANR	60994	Identifier	dirfd		60949	0					
ANR	60995	Argument	pathname		60949	1					
ANR	60996	Identifier	pathname		60949	0					
ANR	60997	Argument	0		60949	2					
ANR	60998	PrimaryExpression	0		60949	0					
ANR	60999	ReturnType	int		60949	1					
ANR	61000	Identifier	safe_unlink		60949	2					
ANR	61001	ParameterList	const char * pathname		60949	3					
ANR	61002	Parameter	const char * pathname	646:17:15284:15303	60949	0	True				
ANR	61003	ParameterType	const char *		60949	0					
ANR	61004	Identifier	pathname		60949	1					
ANR	61005	CFGEntryNode	ENTRY		60949		True				
ANR	61006	CFGExitNode	EXIT		60949		True				
ANR	61007	Symbol	unlink		60949						
ANR	61008	Symbol	traverse_path		60949						
ANR	61009	Symbol	AT_FDCWD		60949						
ANR	61010	Symbol	dirfd		60949						
ANR	61011	Symbol	& pathname		60949						
ANR	61012	Symbol	unlinkat		60949						
ANR	61013	Symbol	unsafe		60949						
ANR	61014	Symbol	pathname		60949						
ANR	61015	Function	safe_symlink	660:0:15535:15804							
ANR	61016	FunctionDef	"safe_symlink (const char * target , const char * linkpath)"		61015	0					
ANR	61017	CompoundStatement		661:0:15595:15804	61015	0					
ANR	61018	IdentifierDeclStatement	int dirfd ;	662:2:15599:15608	61015	0	True				
ANR	61019	IdentifierDecl	dirfd		61015	0					
ANR	61020	IdentifierDeclType	int		61015	0					
ANR	61021	Identifier	dirfd		61015	1					
ANR	61022	IfStatement	if ( unsafe )		61015	1					
ANR	61023	Condition	unsafe	664:6:15617:15622	61015	0	True				
ANR	61024	Identifier	unsafe		61015	0					
ANR	61025	ReturnStatement	"return symlink ( target , linkpath ) ;"	665:4:15629:15662	61015	1	True				
ANR	61026	CallExpression	"symlink ( target , linkpath )"		61015	0					
ANR	61027	Callee	symlink		61015	0					
ANR	61028	Identifier	symlink		61015	0					
ANR	61029	ArgumentList	target		61015	1					
ANR	61030	Argument	target		61015	0					
ANR	61031	Identifier	target		61015	0					
ANR	61032	Argument	linkpath		61015	1					
ANR	61033	Identifier	linkpath		61015	0					
ANR	61034	ExpressionStatement	dirfd = traverse_path ( & linkpath )	667:2:15667:15700	61015	2	True				
ANR	61035	AssignmentExpression	dirfd = traverse_path ( & linkpath )		61015	0		=			
ANR	61036	Identifier	dirfd		61015	0					
ANR	61037	CallExpression	traverse_path ( & linkpath )		61015	1					
ANR	61038	Callee	traverse_path		61015	0					
ANR	61039	Identifier	traverse_path		61015	0					
ANR	61040	ArgumentList	& linkpath		61015	1					
ANR	61041	Argument	& linkpath		61015	0					
ANR	61042	UnaryOperationExpression	& linkpath		61015	0					
ANR	61043	UnaryOperator	&		61015	0					
ANR	61044	Identifier	linkpath		61015	1					
ANR	61045	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		61015	3					
ANR	61046	Condition	dirfd < 0 && dirfd != AT_FDCWD	668:6:15708:15737	61015	0	True				
ANR	61047	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		61015	0		&&			
ANR	61048	RelationalExpression	dirfd < 0		61015	0		<			
ANR	61049	Identifier	dirfd		61015	0					
ANR	61050	PrimaryExpression	0		61015	1					
ANR	61051	EqualityExpression	dirfd != AT_FDCWD		61015	1		!=			
ANR	61052	Identifier	dirfd		61015	0					
ANR	61053	Identifier	AT_FDCWD		61015	1					
ANR	61054	ReturnStatement	return dirfd ;	669:4:15744:15756	61015	1	True				
ANR	61055	Identifier	dirfd		61015	0					
ANR	61056	ReturnStatement	"return symlinkat ( target , dirfd , linkpath ) ;"	670:2:15760:15802	61015	4	True				
ANR	61057	CallExpression	"symlinkat ( target , dirfd , linkpath )"		61015	0					
ANR	61058	Callee	symlinkat		61015	0					
ANR	61059	Identifier	symlinkat		61015	0					
ANR	61060	ArgumentList	target		61015	1					
ANR	61061	Argument	target		61015	0					
ANR	61062	Identifier	target		61015	0					
ANR	61063	Argument	dirfd		61015	1					
ANR	61064	Identifier	dirfd		61015	0					
ANR	61065	Argument	linkpath		61015	2					
ANR	61066	Identifier	linkpath		61015	0					
ANR	61067	ReturnType	int		61015	1					
ANR	61068	Identifier	safe_symlink		61015	2					
ANR	61069	ParameterList	"const char * target , const char * linkpath"		61015	3					
ANR	61070	Parameter	const char * target	660:18:15553:15570	61015	0	True				
ANR	61071	ParameterType	const char *		61015	0					
ANR	61072	Identifier	target		61015	1					
ANR	61073	Parameter	const char * linkpath	660:38:15573:15592	61015	1	True				
ANR	61074	ParameterType	const char *		61015	0					
ANR	61075	Identifier	linkpath		61015	1					
ANR	61076	CFGEntryNode	ENTRY		61015		True				
ANR	61077	CFGExitNode	EXIT		61015		True				
ANR	61078	Symbol	linkpath		61015						
ANR	61079	Symbol	traverse_path		61015						
ANR	61080	Symbol	& linkpath		61015						
ANR	61081	Symbol	symlink		61015						
ANR	61082	Symbol	AT_FDCWD		61015						
ANR	61083	Symbol	dirfd		61015						
ANR	61084	Symbol	unsafe		61015						
ANR	61085	Symbol	symlinkat		61015						
ANR	61086	Symbol	target		61015						
ANR	61087	Function	safe_chmod	674:0:15837:16093							
ANR	61088	FunctionDef	"safe_chmod (const char * pathname , mode_t mode)"		61087	0					
ANR	61089	CompoundStatement		675:0:15888:16093	61087	0					
ANR	61090	IdentifierDeclStatement	int dirfd ;	676:2:15892:15901	61087	0	True				
ANR	61091	IdentifierDecl	dirfd		61087	0					
ANR	61092	IdentifierDeclType	int		61087	0					
ANR	61093	Identifier	dirfd		61087	1					
ANR	61094	IfStatement	if ( unsafe )		61087	1					
ANR	61095	Condition	unsafe	678:6:15910:15915	61087	0	True				
ANR	61096	Identifier	unsafe		61087	0					
ANR	61097	ReturnStatement	"return chmod ( pathname , mode ) ;"	679:4:15922:15951	61087	1	True				
ANR	61098	CallExpression	"chmod ( pathname , mode )"		61087	0					
ANR	61099	Callee	chmod		61087	0					
ANR	61100	Identifier	chmod		61087	0					
ANR	61101	ArgumentList	pathname		61087	1					
ANR	61102	Argument	pathname		61087	0					
ANR	61103	Identifier	pathname		61087	0					
ANR	61104	Argument	mode		61087	1					
ANR	61105	Identifier	mode		61087	0					
ANR	61106	ExpressionStatement	dirfd = traverse_path ( & pathname )	681:2:15956:15989	61087	2	True				
ANR	61107	AssignmentExpression	dirfd = traverse_path ( & pathname )		61087	0		=			
ANR	61108	Identifier	dirfd		61087	0					
ANR	61109	CallExpression	traverse_path ( & pathname )		61087	1					
ANR	61110	Callee	traverse_path		61087	0					
ANR	61111	Identifier	traverse_path		61087	0					
ANR	61112	ArgumentList	& pathname		61087	1					
ANR	61113	Argument	& pathname		61087	0					
ANR	61114	UnaryOperationExpression	& pathname		61087	0					
ANR	61115	UnaryOperator	&		61087	0					
ANR	61116	Identifier	pathname		61087	1					
ANR	61117	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		61087	3					
ANR	61118	Condition	dirfd < 0 && dirfd != AT_FDCWD	682:6:15997:16026	61087	0	True				
ANR	61119	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		61087	0		&&			
ANR	61120	RelationalExpression	dirfd < 0		61087	0		<			
ANR	61121	Identifier	dirfd		61087	0					
ANR	61122	PrimaryExpression	0		61087	1					
ANR	61123	EqualityExpression	dirfd != AT_FDCWD		61087	1		!=			
ANR	61124	Identifier	dirfd		61087	0					
ANR	61125	Identifier	AT_FDCWD		61087	1					
ANR	61126	ReturnStatement	return dirfd ;	683:4:16033:16045	61087	1	True				
ANR	61127	Identifier	dirfd		61087	0					
ANR	61128	ReturnStatement	"return fchmodat ( dirfd , pathname , mode , 0 ) ;"	684:2:16049:16091	61087	4	True				
ANR	61129	CallExpression	"fchmodat ( dirfd , pathname , mode , 0 )"		61087	0					
ANR	61130	Callee	fchmodat		61087	0					
ANR	61131	Identifier	fchmodat		61087	0					
ANR	61132	ArgumentList	dirfd		61087	1					
ANR	61133	Argument	dirfd		61087	0					
ANR	61134	Identifier	dirfd		61087	0					
ANR	61135	Argument	pathname		61087	1					
ANR	61136	Identifier	pathname		61087	0					
ANR	61137	Argument	mode		61087	2					
ANR	61138	Identifier	mode		61087	0					
ANR	61139	Argument	0		61087	3					
ANR	61140	PrimaryExpression	0		61087	0					
ANR	61141	ReturnType	int		61087	1					
ANR	61142	Identifier	safe_chmod		61087	2					
ANR	61143	ParameterList	"const char * pathname , mode_t mode"		61087	3					
ANR	61144	Parameter	const char * pathname	674:16:15853:15872	61087	0	True				
ANR	61145	ParameterType	const char *		61087	0					
ANR	61146	Identifier	pathname		61087	1					
ANR	61147	Parameter	mode_t mode	674:38:15875:15885	61087	1	True				
ANR	61148	ParameterType	mode_t		61087	0					
ANR	61149	Identifier	mode		61087	1					
ANR	61150	CFGEntryNode	ENTRY		61087		True				
ANR	61151	CFGExitNode	EXIT		61087		True				
ANR	61152	Symbol	mode		61087						
ANR	61153	Symbol	traverse_path		61087						
ANR	61154	Symbol	fchmodat		61087						
ANR	61155	Symbol	AT_FDCWD		61087						
ANR	61156	Symbol	dirfd		61087						
ANR	61157	Symbol	chmod		61087						
ANR	61158	Symbol	& pathname		61087						
ANR	61159	Symbol	unsafe		61087						
ANR	61160	Symbol	pathname		61087						
ANR	61161	Function	safe_lchown	688:0:16127:16432							
ANR	61162	FunctionDef	"safe_lchown (const char * pathname , uid_t owner , gid_t group)"		61161	0					
ANR	61163	CompoundStatement		689:0:16192:16432	61161	0					
ANR	61164	IdentifierDeclStatement	int dirfd ;	690:2:16196:16205	61161	0	True				
ANR	61165	IdentifierDecl	dirfd		61161	0					
ANR	61166	IdentifierDeclType	int		61161	0					
ANR	61167	Identifier	dirfd		61161	1					
ANR	61168	IfStatement	if ( unsafe )		61161	1					
ANR	61169	Condition	unsafe	692:6:16214:16219	61161	0	True				
ANR	61170	Identifier	unsafe		61161	0					
ANR	61171	ReturnStatement	"return lchown ( pathname , owner , group ) ;"	693:4:16226:16264	61161	1	True				
ANR	61172	CallExpression	"lchown ( pathname , owner , group )"		61161	0					
ANR	61173	Callee	lchown		61161	0					
ANR	61174	Identifier	lchown		61161	0					
ANR	61175	ArgumentList	pathname		61161	1					
ANR	61176	Argument	pathname		61161	0					
ANR	61177	Identifier	pathname		61161	0					
ANR	61178	Argument	owner		61161	1					
ANR	61179	Identifier	owner		61161	0					
ANR	61180	Argument	group		61161	2					
ANR	61181	Identifier	group		61161	0					
ANR	61182	ExpressionStatement	dirfd = traverse_path ( & pathname )	695:2:16269:16302	61161	2	True				
ANR	61183	AssignmentExpression	dirfd = traverse_path ( & pathname )		61161	0		=			
ANR	61184	Identifier	dirfd		61161	0					
ANR	61185	CallExpression	traverse_path ( & pathname )		61161	1					
ANR	61186	Callee	traverse_path		61161	0					
ANR	61187	Identifier	traverse_path		61161	0					
ANR	61188	ArgumentList	& pathname		61161	1					
ANR	61189	Argument	& pathname		61161	0					
ANR	61190	UnaryOperationExpression	& pathname		61161	0					
ANR	61191	UnaryOperator	&		61161	0					
ANR	61192	Identifier	pathname		61161	1					
ANR	61193	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		61161	3					
ANR	61194	Condition	dirfd < 0 && dirfd != AT_FDCWD	696:6:16310:16339	61161	0	True				
ANR	61195	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		61161	0		&&			
ANR	61196	RelationalExpression	dirfd < 0		61161	0		<			
ANR	61197	Identifier	dirfd		61161	0					
ANR	61198	PrimaryExpression	0		61161	1					
ANR	61199	EqualityExpression	dirfd != AT_FDCWD		61161	1		!=			
ANR	61200	Identifier	dirfd		61161	0					
ANR	61201	Identifier	AT_FDCWD		61161	1					
ANR	61202	ReturnStatement	return dirfd ;	697:4:16346:16358	61161	1	True				
ANR	61203	Identifier	dirfd		61161	0					
ANR	61204	ReturnStatement	"return fchownat ( dirfd , pathname , owner , group , AT_SYMLINK_NOFOLLOW ) ;"	698:2:16362:16430	61161	4	True				
ANR	61205	CallExpression	"fchownat ( dirfd , pathname , owner , group , AT_SYMLINK_NOFOLLOW )"		61161	0					
ANR	61206	Callee	fchownat		61161	0					
ANR	61207	Identifier	fchownat		61161	0					
ANR	61208	ArgumentList	dirfd		61161	1					
ANR	61209	Argument	dirfd		61161	0					
ANR	61210	Identifier	dirfd		61161	0					
ANR	61211	Argument	pathname		61161	1					
ANR	61212	Identifier	pathname		61161	0					
ANR	61213	Argument	owner		61161	2					
ANR	61214	Identifier	owner		61161	0					
ANR	61215	Argument	group		61161	3					
ANR	61216	Identifier	group		61161	0					
ANR	61217	Argument	AT_SYMLINK_NOFOLLOW		61161	4					
ANR	61218	Identifier	AT_SYMLINK_NOFOLLOW		61161	0					
ANR	61219	ReturnType	int		61161	1					
ANR	61220	Identifier	safe_lchown		61161	2					
ANR	61221	ParameterList	"const char * pathname , uid_t owner , gid_t group"		61161	3					
ANR	61222	Parameter	const char * pathname	688:17:16144:16163	61161	0	True				
ANR	61223	ParameterType	const char *		61161	0					
ANR	61224	Identifier	pathname		61161	1					
ANR	61225	Parameter	uid_t owner	688:39:16166:16176	61161	1	True				
ANR	61226	ParameterType	uid_t		61161	0					
ANR	61227	Identifier	owner		61161	1					
ANR	61228	Parameter	gid_t group	688:52:16179:16189	61161	2	True				
ANR	61229	ParameterType	gid_t		61161	0					
ANR	61230	Identifier	group		61161	1					
ANR	61231	CFGEntryNode	ENTRY		61161		True				
ANR	61232	CFGExitNode	EXIT		61161		True				
ANR	61233	Symbol	owner		61161						
ANR	61234	Symbol	fchownat		61161						
ANR	61235	Symbol	traverse_path		61161						
ANR	61236	Symbol	AT_FDCWD		61161						
ANR	61237	Symbol	dirfd		61161						
ANR	61238	Symbol	& pathname		61161						
ANR	61239	Symbol	lchown		61161						
ANR	61240	Symbol	unsafe		61161						
ANR	61241	Symbol	AT_SYMLINK_NOFOLLOW		61161						
ANR	61242	Symbol	pathname		61161						
ANR	61243	Symbol	group		61161						
ANR	61244	Function	safe_lutimens	702:0:16468:16802							
ANR	61245	FunctionDef	"safe_lutimens (const char * pathname , struct timespec const times [ 2 ])"		61244	0					
ANR	61246	CompoundStatement		703:0:16541:16802	61244	0					
ANR	61247	IdentifierDeclStatement	int dirfd ;	704:2:16545:16554	61244	0	True				
ANR	61248	IdentifierDecl	dirfd		61244	0					
ANR	61249	IdentifierDeclType	int		61244	0					
ANR	61250	Identifier	dirfd		61244	1					
ANR	61251	IfStatement	if ( unsafe )		61244	1					
ANR	61252	Condition	unsafe	706:6:16563:16568	61244	0	True				
ANR	61253	Identifier	unsafe		61244	0					
ANR	61254	ReturnStatement	"return utimensat ( AT_FDCWD , pathname , times , AT_SYMLINK_NOFOLLOW ) ;"	707:4:16575:16640	61244	1	True				
ANR	61255	CallExpression	"utimensat ( AT_FDCWD , pathname , times , AT_SYMLINK_NOFOLLOW )"		61244	0					
ANR	61256	Callee	utimensat		61244	0					
ANR	61257	Identifier	utimensat		61244	0					
ANR	61258	ArgumentList	AT_FDCWD		61244	1					
ANR	61259	Argument	AT_FDCWD		61244	0					
ANR	61260	Identifier	AT_FDCWD		61244	0					
ANR	61261	Argument	pathname		61244	1					
ANR	61262	Identifier	pathname		61244	0					
ANR	61263	Argument	times		61244	2					
ANR	61264	Identifier	times		61244	0					
ANR	61265	Argument	AT_SYMLINK_NOFOLLOW		61244	3					
ANR	61266	Identifier	AT_SYMLINK_NOFOLLOW		61244	0					
ANR	61267	ExpressionStatement	dirfd = traverse_path ( & pathname )	709:2:16645:16678	61244	2	True				
ANR	61268	AssignmentExpression	dirfd = traverse_path ( & pathname )		61244	0		=			
ANR	61269	Identifier	dirfd		61244	0					
ANR	61270	CallExpression	traverse_path ( & pathname )		61244	1					
ANR	61271	Callee	traverse_path		61244	0					
ANR	61272	Identifier	traverse_path		61244	0					
ANR	61273	ArgumentList	& pathname		61244	1					
ANR	61274	Argument	& pathname		61244	0					
ANR	61275	UnaryOperationExpression	& pathname		61244	0					
ANR	61276	UnaryOperator	&		61244	0					
ANR	61277	Identifier	pathname		61244	1					
ANR	61278	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		61244	3					
ANR	61279	Condition	dirfd < 0 && dirfd != AT_FDCWD	710:6:16686:16715	61244	0	True				
ANR	61280	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		61244	0		&&			
ANR	61281	RelationalExpression	dirfd < 0		61244	0		<			
ANR	61282	Identifier	dirfd		61244	0					
ANR	61283	PrimaryExpression	0		61244	1					
ANR	61284	EqualityExpression	dirfd != AT_FDCWD		61244	1		!=			
ANR	61285	Identifier	dirfd		61244	0					
ANR	61286	Identifier	AT_FDCWD		61244	1					
ANR	61287	ReturnStatement	return dirfd ;	711:4:16722:16734	61244	1	True				
ANR	61288	Identifier	dirfd		61244	0					
ANR	61289	ReturnStatement	"return utimensat ( dirfd , pathname , times , AT_SYMLINK_NOFOLLOW ) ;"	712:2:16738:16800	61244	4	True				
ANR	61290	CallExpression	"utimensat ( dirfd , pathname , times , AT_SYMLINK_NOFOLLOW )"		61244	0					
ANR	61291	Callee	utimensat		61244	0					
ANR	61292	Identifier	utimensat		61244	0					
ANR	61293	ArgumentList	dirfd		61244	1					
ANR	61294	Argument	dirfd		61244	0					
ANR	61295	Identifier	dirfd		61244	0					
ANR	61296	Argument	pathname		61244	1					
ANR	61297	Identifier	pathname		61244	0					
ANR	61298	Argument	times		61244	2					
ANR	61299	Identifier	times		61244	0					
ANR	61300	Argument	AT_SYMLINK_NOFOLLOW		61244	3					
ANR	61301	Identifier	AT_SYMLINK_NOFOLLOW		61244	0					
ANR	61302	ReturnType	int		61244	1					
ANR	61303	Identifier	safe_lutimens		61244	2					
ANR	61304	ParameterList	"const char * pathname , struct timespec const times [ 2 ]"		61244	3					
ANR	61305	Parameter	const char * pathname	702:19:16487:16506	61244	0	True				
ANR	61306	ParameterType	const char *		61244	0					
ANR	61307	Identifier	pathname		61244	1					
ANR	61308	Parameter	struct timespec const times [ 2 ]	702:41:16509:16538	61244	1	True				
ANR	61309	ParameterType	struct timespec const [ 2 ]		61244	0					
ANR	61310	Identifier	times		61244	1					
ANR	61311	CFGEntryNode	ENTRY		61244		True				
ANR	61312	CFGExitNode	EXIT		61244		True				
ANR	61313	Symbol	times		61244						
ANR	61314	Symbol	traverse_path		61244						
ANR	61315	Symbol	AT_FDCWD		61244						
ANR	61316	Symbol	dirfd		61244						
ANR	61317	Symbol	& pathname		61244						
ANR	61318	Symbol	utimensat		61244						
ANR	61319	Symbol	unsafe		61244						
ANR	61320	Symbol	AT_SYMLINK_NOFOLLOW		61244						
ANR	61321	Symbol	pathname		61244						
ANR	61322	Function	safe_readlink	716:0:16838:17130							
ANR	61323	FunctionDef	"safe_readlink (const char * pathname , char * buf , size_t bufsiz)"		61322	0					
ANR	61324	CompoundStatement		717:0:16909:17130	61322	0					
ANR	61325	IdentifierDeclStatement	int dirfd ;	718:2:16913:16922	61322	0	True				
ANR	61326	IdentifierDecl	dirfd		61322	0					
ANR	61327	IdentifierDeclType	int		61322	0					
ANR	61328	Identifier	dirfd		61322	1					
ANR	61329	IfStatement	if ( unsafe )		61322	1					
ANR	61330	Condition	unsafe	720:6:16931:16936	61322	0	True				
ANR	61331	Identifier	unsafe		61322	0					
ANR	61332	ReturnStatement	"return readlink ( pathname , buf , bufsiz ) ;"	721:4:16943:16982	61322	1	True				
ANR	61333	CallExpression	"readlink ( pathname , buf , bufsiz )"		61322	0					
ANR	61334	Callee	readlink		61322	0					
ANR	61335	Identifier	readlink		61322	0					
ANR	61336	ArgumentList	pathname		61322	1					
ANR	61337	Argument	pathname		61322	0					
ANR	61338	Identifier	pathname		61322	0					
ANR	61339	Argument	buf		61322	1					
ANR	61340	Identifier	buf		61322	0					
ANR	61341	Argument	bufsiz		61322	2					
ANR	61342	Identifier	bufsiz		61322	0					
ANR	61343	ExpressionStatement	dirfd = traverse_path ( & pathname )	723:2:16987:17020	61322	2	True				
ANR	61344	AssignmentExpression	dirfd = traverse_path ( & pathname )		61322	0		=			
ANR	61345	Identifier	dirfd		61322	0					
ANR	61346	CallExpression	traverse_path ( & pathname )		61322	1					
ANR	61347	Callee	traverse_path		61322	0					
ANR	61348	Identifier	traverse_path		61322	0					
ANR	61349	ArgumentList	& pathname		61322	1					
ANR	61350	Argument	& pathname		61322	0					
ANR	61351	UnaryOperationExpression	& pathname		61322	0					
ANR	61352	UnaryOperator	&		61322	0					
ANR	61353	Identifier	pathname		61322	1					
ANR	61354	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		61322	3					
ANR	61355	Condition	dirfd < 0 && dirfd != AT_FDCWD	724:6:17028:17057	61322	0	True				
ANR	61356	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		61322	0		&&			
ANR	61357	RelationalExpression	dirfd < 0		61322	0		<			
ANR	61358	Identifier	dirfd		61322	0					
ANR	61359	PrimaryExpression	0		61322	1					
ANR	61360	EqualityExpression	dirfd != AT_FDCWD		61322	1		!=			
ANR	61361	Identifier	dirfd		61322	0					
ANR	61362	Identifier	AT_FDCWD		61322	1					
ANR	61363	ReturnStatement	return dirfd ;	725:4:17064:17076	61322	1	True				
ANR	61364	Identifier	dirfd		61322	0					
ANR	61365	ReturnStatement	"return readlinkat ( dirfd , pathname , buf , bufsiz ) ;"	726:2:17080:17128	61322	4	True				
ANR	61366	CallExpression	"readlinkat ( dirfd , pathname , buf , bufsiz )"		61322	0					
ANR	61367	Callee	readlinkat		61322	0					
ANR	61368	Identifier	readlinkat		61322	0					
ANR	61369	ArgumentList	dirfd		61322	1					
ANR	61370	Argument	dirfd		61322	0					
ANR	61371	Identifier	dirfd		61322	0					
ANR	61372	Argument	pathname		61322	1					
ANR	61373	Identifier	pathname		61322	0					
ANR	61374	Argument	buf		61322	2					
ANR	61375	Identifier	buf		61322	0					
ANR	61376	Argument	bufsiz		61322	3					
ANR	61377	Identifier	bufsiz		61322	0					
ANR	61378	ReturnType	ssize_t		61322	1					
ANR	61379	Identifier	safe_readlink		61322	2					
ANR	61380	ParameterList	"const char * pathname , char * buf , size_t bufsiz"		61322	3					
ANR	61381	Parameter	const char * pathname	716:23:16861:16880	61322	0	True				
ANR	61382	ParameterType	const char *		61322	0					
ANR	61383	Identifier	pathname		61322	1					
ANR	61384	Parameter	char * buf	716:45:16883:16891	61322	1	True				
ANR	61385	ParameterType	char *		61322	0					
ANR	61386	Identifier	buf		61322	1					
ANR	61387	Parameter	size_t bufsiz	716:56:16894:16906	61322	2	True				
ANR	61388	ParameterType	size_t		61322	0					
ANR	61389	Identifier	bufsiz		61322	1					
ANR	61390	CFGEntryNode	ENTRY		61322		True				
ANR	61391	CFGExitNode	EXIT		61322		True				
ANR	61392	Symbol	buf		61322						
ANR	61393	Symbol	readlink		61322						
ANR	61394	Symbol	traverse_path		61322						
ANR	61395	Symbol	AT_FDCWD		61322						
ANR	61396	Symbol	readlinkat		61322						
ANR	61397	Symbol	dirfd		61322						
ANR	61398	Symbol	& pathname		61322						
ANR	61399	Symbol	bufsiz		61322						
ANR	61400	Symbol	unsafe		61322						
ANR	61401	Symbol	pathname		61322						
ANR	61402	Function	safe_access	730:0:17164:17420							
ANR	61403	FunctionDef	"safe_access (const char * pathname , int mode)"		61402	0					
ANR	61404	CompoundStatement		731:0:17213:17420	61402	0					
ANR	61405	IdentifierDeclStatement	int dirfd ;	732:2:17217:17226	61402	0	True				
ANR	61406	IdentifierDecl	dirfd		61402	0					
ANR	61407	IdentifierDeclType	int		61402	0					
ANR	61408	Identifier	dirfd		61402	1					
ANR	61409	IfStatement	if ( unsafe )		61402	1					
ANR	61410	Condition	unsafe	734:6:17235:17240	61402	0	True				
ANR	61411	Identifier	unsafe		61402	0					
ANR	61412	ReturnStatement	"return access ( pathname , mode ) ;"	735:4:17247:17277	61402	1	True				
ANR	61413	CallExpression	"access ( pathname , mode )"		61402	0					
ANR	61414	Callee	access		61402	0					
ANR	61415	Identifier	access		61402	0					
ANR	61416	ArgumentList	pathname		61402	1					
ANR	61417	Argument	pathname		61402	0					
ANR	61418	Identifier	pathname		61402	0					
ANR	61419	Argument	mode		61402	1					
ANR	61420	Identifier	mode		61402	0					
ANR	61421	ExpressionStatement	dirfd = traverse_path ( & pathname )	737:2:17282:17315	61402	2	True				
ANR	61422	AssignmentExpression	dirfd = traverse_path ( & pathname )		61402	0		=			
ANR	61423	Identifier	dirfd		61402	0					
ANR	61424	CallExpression	traverse_path ( & pathname )		61402	1					
ANR	61425	Callee	traverse_path		61402	0					
ANR	61426	Identifier	traverse_path		61402	0					
ANR	61427	ArgumentList	& pathname		61402	1					
ANR	61428	Argument	& pathname		61402	0					
ANR	61429	UnaryOperationExpression	& pathname		61402	0					
ANR	61430	UnaryOperator	&		61402	0					
ANR	61431	Identifier	pathname		61402	1					
ANR	61432	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		61402	3					
ANR	61433	Condition	dirfd < 0 && dirfd != AT_FDCWD	738:6:17323:17352	61402	0	True				
ANR	61434	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		61402	0		&&			
ANR	61435	RelationalExpression	dirfd < 0		61402	0		<			
ANR	61436	Identifier	dirfd		61402	0					
ANR	61437	PrimaryExpression	0		61402	1					
ANR	61438	EqualityExpression	dirfd != AT_FDCWD		61402	1		!=			
ANR	61439	Identifier	dirfd		61402	0					
ANR	61440	Identifier	AT_FDCWD		61402	1					
ANR	61441	ReturnStatement	return dirfd ;	739:4:17359:17371	61402	1	True				
ANR	61442	Identifier	dirfd		61402	0					
ANR	61443	ReturnStatement	"return faccessat ( dirfd , pathname , mode , 0 ) ;"	740:2:17375:17418	61402	4	True				
ANR	61444	CallExpression	"faccessat ( dirfd , pathname , mode , 0 )"		61402	0					
ANR	61445	Callee	faccessat		61402	0					
ANR	61446	Identifier	faccessat		61402	0					
ANR	61447	ArgumentList	dirfd		61402	1					
ANR	61448	Argument	dirfd		61402	0					
ANR	61449	Identifier	dirfd		61402	0					
ANR	61450	Argument	pathname		61402	1					
ANR	61451	Identifier	pathname		61402	0					
ANR	61452	Argument	mode		61402	2					
ANR	61453	Identifier	mode		61402	0					
ANR	61454	Argument	0		61402	3					
ANR	61455	PrimaryExpression	0		61402	0					
ANR	61456	ReturnType	int		61402	1					
ANR	61457	Identifier	safe_access		61402	2					
ANR	61458	ParameterList	"const char * pathname , int mode"		61402	3					
ANR	61459	Parameter	const char * pathname	730:17:17181:17200	61402	0	True				
ANR	61460	ParameterType	const char *		61402	0					
ANR	61461	Identifier	pathname		61402	1					
ANR	61462	Parameter	int mode	730:39:17203:17210	61402	1	True				
ANR	61463	ParameterType	int		61402	0					
ANR	61464	Identifier	mode		61402	1					
ANR	61465	CFGEntryNode	ENTRY		61402		True				
ANR	61466	CFGExitNode	EXIT		61402		True				
ANR	61467	Symbol	mode		61402						
ANR	61468	Symbol	access		61402						
ANR	61469	Symbol	traverse_path		61402						
ANR	61470	Symbol	AT_FDCWD		61402						
ANR	61471	Symbol	dirfd		61402						
ANR	61472	Symbol	& pathname		61402						
ANR	61473	Symbol	faccessat		61402						
ANR	61474	Symbol	unsafe		61402						
ANR	61475	Symbol	pathname		61402						
