command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	69686	File	data/converged/CVE-2019-13638~_patch/util.c								
ANR	69687	DeclStmt									
ANR	69688	Decl							void	void ( char const * )	makedirs
ANR	69689	ClassDef	<unnamed>	59:8:1507:1599							
ANR	69690	DeclStmt									
ANR	69691	Decl							dev_t	dev_t	dev
ANR	69692	DeclStmt									
ANR	69693	Decl							ino_t	ino_t	ino
ANR	69694	DeclStmt									
ANR	69695	Decl							enum file_id_type	enum file_id_type	type
ANR	69696	DeclStmt									
ANR	69697	Decl							bool	bool	queued_output
ANR	69698	DeclStmt									
ANR	69699	Decl									file_id
ANR	69700	Function	file_id_hasher	69:0:1674:1827							
ANR	69701	FunctionDef	"file_id_hasher (void const * entry , size_t table_size)"		69700	0					
ANR	69702	CompoundStatement		71:0:1742:1827	69700	0					
ANR	69703	IdentifierDeclStatement	file_id const * e = entry ;	72:2:1746:1770	69700	0	True				
ANR	69704	IdentifierDecl	* e = entry		69700	0					
ANR	69705	IdentifierDeclType	file_id const *		69700	0					
ANR	69706	Identifier	e		69700	1					
ANR	69707	AssignmentExpression	* e = entry		69700	2		=			
ANR	69708	Identifier	entry		69700	0					
ANR	69709	Identifier	entry		69700	1					
ANR	69710	IdentifierDeclStatement	size_t i = e -> ino + e -> dev ;	73:2:1774:1800	69700	1	True				
ANR	69711	IdentifierDecl	i = e -> ino + e -> dev		69700	0					
ANR	69712	IdentifierDeclType	size_t		69700	0					
ANR	69713	Identifier	i		69700	1					
ANR	69714	AssignmentExpression	i = e -> ino + e -> dev		69700	2		=			
ANR	69715	Identifier	i		69700	0					
ANR	69716	AdditiveExpression	e -> ino + e -> dev		69700	1		+			
ANR	69717	PtrMemberAccess	e -> ino		69700	0					
ANR	69718	Identifier	e		69700	0					
ANR	69719	Identifier	ino		69700	1					
ANR	69720	PtrMemberAccess	e -> dev		69700	1					
ANR	69721	Identifier	e		69700	0					
ANR	69722	Identifier	dev		69700	1					
ANR	69723	ReturnStatement	return i % table_size ;	74:2:1804:1825	69700	2	True				
ANR	69724	MultiplicativeExpression	i % table_size		69700	0		%			
ANR	69725	Identifier	i		69700	0					
ANR	69726	Identifier	table_size		69700	1					
ANR	69727	ReturnType	static size_t		69700	1					
ANR	69728	Identifier	file_id_hasher		69700	2					
ANR	69729	ParameterList	"void const * entry , size_t table_size"		69700	3					
ANR	69730	Parameter	void const * entry	70:16:1704:1720	69700	0	True				
ANR	69731	ParameterType	void const *		69700	0					
ANR	69732	Identifier	entry		69700	1					
ANR	69733	Parameter	size_t table_size	70:35:1723:1739	69700	1	True				
ANR	69734	ParameterType	size_t		69700	0					
ANR	69735	Identifier	table_size		69700	1					
ANR	69736	CFGEntryNode	ENTRY		69700		True				
ANR	69737	CFGExitNode	EXIT		69700		True				
ANR	69738	Symbol	e -> dev		69700						
ANR	69739	Symbol	entry		69700						
ANR	69740	Symbol	table_size		69700						
ANR	69741	Symbol	e -> ino		69700						
ANR	69742	Symbol	e		69700						
ANR	69743	Symbol	i		69700						
ANR	69744	Symbol	* e		69700						
ANR	69745	Function	file_id_comparator	79:0:1884:2071							
ANR	69746	FunctionDef	"file_id_comparator (void const * entry1 , void const * entry2)"		69745	0					
ANR	69747	CompoundStatement		81:0:1956:2071	69745	0					
ANR	69748	IdentifierDeclStatement	file_id const * e1 = entry1 ;	82:2:1960:1986	69745	0	True				
ANR	69749	IdentifierDecl	* e1 = entry1		69745	0					
ANR	69750	IdentifierDeclType	file_id const *		69745	0					
ANR	69751	Identifier	e1		69745	1					
ANR	69752	AssignmentExpression	* e1 = entry1		69745	2		=			
ANR	69753	Identifier	entry1		69745	0					
ANR	69754	Identifier	entry1		69745	1					
ANR	69755	IdentifierDeclStatement	file_id const * e2 = entry2 ;	83:2:1990:2016	69745	1	True				
ANR	69756	IdentifierDecl	* e2 = entry2		69745	0					
ANR	69757	IdentifierDeclType	file_id const *		69745	0					
ANR	69758	Identifier	e2		69745	1					
ANR	69759	AssignmentExpression	* e2 = entry2		69745	2		=			
ANR	69760	Identifier	entry2		69745	0					
ANR	69761	Identifier	entry2		69745	1					
ANR	69762	ReturnStatement	return ( e1 -> ino == e2 -> ino && e1 -> dev == e2 -> dev ) ;	84:2:2020:2069	69745	2	True				
ANR	69763	AndExpression	e1 -> ino == e2 -> ino && e1 -> dev == e2 -> dev		69745	0		&&			
ANR	69764	EqualityExpression	e1 -> ino == e2 -> ino		69745	0		==			
ANR	69765	PtrMemberAccess	e1 -> ino		69745	0					
ANR	69766	Identifier	e1		69745	0					
ANR	69767	Identifier	ino		69745	1					
ANR	69768	PtrMemberAccess	e2 -> ino		69745	1					
ANR	69769	Identifier	e2		69745	0					
ANR	69770	Identifier	ino		69745	1					
ANR	69771	EqualityExpression	e1 -> dev == e2 -> dev		69745	1		==			
ANR	69772	PtrMemberAccess	e1 -> dev		69745	0					
ANR	69773	Identifier	e1		69745	0					
ANR	69774	Identifier	dev		69745	1					
ANR	69775	PtrMemberAccess	e2 -> dev		69745	1					
ANR	69776	Identifier	e2		69745	0					
ANR	69777	Identifier	dev		69745	1					
ANR	69778	ReturnType	static bool		69745	1					
ANR	69779	Identifier	file_id_comparator		69745	2					
ANR	69780	ParameterList	"void const * entry1 , void const * entry2"		69745	3					
ANR	69781	Parameter	void const * entry1	80:20:1916:1933	69745	0	True				
ANR	69782	ParameterType	void const *		69745	0					
ANR	69783	Identifier	entry1		69745	1					
ANR	69784	Parameter	void const * entry2	80:40:1936:1953	69745	1	True				
ANR	69785	ParameterType	void const *		69745	0					
ANR	69786	Identifier	entry2		69745	1					
ANR	69787	CFGEntryNode	ENTRY		69745		True				
ANR	69788	CFGExitNode	EXIT		69745		True				
ANR	69789	Symbol	* e2		69745						
ANR	69790	Symbol	entry1		69745						
ANR	69791	Symbol	* e1		69745						
ANR	69792	Symbol	e1 -> ino		69745						
ANR	69793	Symbol	e2 -> ino		69745						
ANR	69794	Symbol	e1		69745						
ANR	69795	Symbol	e2 -> dev		69745						
ANR	69796	Symbol	e2		69745						
ANR	69797	Symbol	entry2		69745						
ANR	69798	Symbol	e1 -> dev		69745						
ANR	69799	DeclStmt									
ANR	69800	Decl							Hash_table	Hash_table *	file_id_table
ANR	69801	Function	init_backup_hash_table	91:0:2144:2316							
ANR	69802	FunctionDef	init_backup_hash_table ()		69801	0					
ANR	69803	CompoundStatement		93:0:2179:2316	69801	0					
ANR	69804	ExpressionStatement	"file_id_table = hash_initialize ( 0 , NULL , file_id_hasher , file_id_comparator , free )"	94:2:2183:2273	69801	0	True				
ANR	69805	AssignmentExpression	"file_id_table = hash_initialize ( 0 , NULL , file_id_hasher , file_id_comparator , free )"		69801	0		=			
ANR	69806	Identifier	file_id_table		69801	0					
ANR	69807	CallExpression	"hash_initialize ( 0 , NULL , file_id_hasher , file_id_comparator , free )"		69801	1					
ANR	69808	Callee	hash_initialize		69801	0					
ANR	69809	Identifier	hash_initialize		69801	0					
ANR	69810	ArgumentList	0		69801	1					
ANR	69811	Argument	0		69801	0					
ANR	69812	PrimaryExpression	0		69801	0					
ANR	69813	Argument	NULL		69801	1					
ANR	69814	Identifier	NULL		69801	0					
ANR	69815	Argument	file_id_hasher		69801	2					
ANR	69816	Identifier	file_id_hasher		69801	0					
ANR	69817	Argument	file_id_comparator		69801	3					
ANR	69818	Identifier	file_id_comparator		69801	0					
ANR	69819	Argument	free		69801	4					
ANR	69820	Identifier	free		69801	0					
ANR	69821	IfStatement	if ( ! file_id_table )		69801	1					
ANR	69822	Condition	! file_id_table	96:6:2281:2294	69801	0	True				
ANR	69823	UnaryOperationExpression	! file_id_table		69801	0					
ANR	69824	UnaryOperator	!		69801	0					
ANR	69825	Identifier	file_id_table		69801	1					
ANR	69826	ExpressionStatement	xalloc_die ( )	97:4:2301:2314	69801	1	True				
ANR	69827	CallExpression	xalloc_die ( )		69801	0					
ANR	69828	Callee	xalloc_die		69801	0					
ANR	69829	Identifier	xalloc_die		69801	0					
ANR	69830	ArgumentList			69801	1					
ANR	69831	ReturnType	void		69801	1					
ANR	69832	Identifier	init_backup_hash_table		69801	2					
ANR	69833	ParameterList			69801	3					
ANR	69834	CFGEntryNode	ENTRY		69801		True				
ANR	69835	CFGExitNode	EXIT		69801		True				
ANR	69836	Symbol	NULL		69801						
ANR	69837	Symbol	file_id_hasher		69801						
ANR	69838	Symbol	file_id_comparator		69801						
ANR	69839	Symbol	free		69801						
ANR	69840	Symbol	hash_initialize		69801						
ANR	69841	Symbol	file_id_table		69801						
ANR	69842	Function	__insert_file_id	100:0:2319:2771							
ANR	69843	FunctionDef	"__insert_file_id (struct stat const * st , enum file_id_type type)"		69842	0					
ANR	69844	CompoundStatement		102:0:2401:2771	69842	0					
ANR	69845	IdentifierDeclStatement	file_id * p ;	103:3:2406:2416	69842	0	True				
ANR	69846	IdentifierDecl	* p		69842	0					
ANR	69847	IdentifierDeclType	file_id *		69842	0					
ANR	69848	Identifier	p		69842	1					
ANR	69849	Statement	static	104:3:2421:2426	69842	1	True				
ANR	69850	IdentifierDeclStatement	file_id * next_slot ;	104:10:2428:2446	69842	2	True				
ANR	69851	IdentifierDecl	* next_slot		69842	0					
ANR	69852	IdentifierDeclType	file_id *		69842	0					
ANR	69853	Identifier	next_slot		69842	1					
ANR	69854	IfStatement	if ( ! next_slot )		69842	3					
ANR	69855	Condition	! next_slot	106:7:2456:2465	69842	0	True				
ANR	69856	UnaryOperationExpression	! next_slot		69842	0					
ANR	69857	UnaryOperator	!		69842	0					
ANR	69858	Identifier	next_slot		69842	1					
ANR	69859	ExpressionStatement	next_slot = xmalloc ( sizeof * next_slot )	107:5:2473:2512	69842	1	True				
ANR	69860	AssignmentExpression	next_slot = xmalloc ( sizeof * next_slot )		69842	0		=			
ANR	69861	Identifier	next_slot		69842	0					
ANR	69862	CallExpression	xmalloc ( sizeof * next_slot )		69842	1					
ANR	69863	Callee	xmalloc		69842	0					
ANR	69864	Identifier	xmalloc		69842	0					
ANR	69865	ArgumentList	sizeof * next_slot		69842	1					
ANR	69866	Argument	sizeof * next_slot		69842	0					
ANR	69867	SizeofExpression	sizeof * next_slot		69842	0					
ANR	69868	Sizeof	sizeof		69842	0					
ANR	69869	UnaryOperationExpression	* next_slot		69842	1					
ANR	69870	UnaryOperator	*		69842	0					
ANR	69871	Identifier	next_slot		69842	1					
ANR	69872	ExpressionStatement	next_slot -> dev = st -> st_dev	108:3:2517:2544	69842	4	True				
ANR	69873	AssignmentExpression	next_slot -> dev = st -> st_dev		69842	0		=			
ANR	69874	PtrMemberAccess	next_slot -> dev		69842	0					
ANR	69875	Identifier	next_slot		69842	0					
ANR	69876	Identifier	dev		69842	1					
ANR	69877	PtrMemberAccess	st -> st_dev		69842	1					
ANR	69878	Identifier	st		69842	0					
ANR	69879	Identifier	st_dev		69842	1					
ANR	69880	ExpressionStatement	next_slot -> ino = st -> st_ino	109:3:2549:2576	69842	5	True				
ANR	69881	AssignmentExpression	next_slot -> ino = st -> st_ino		69842	0		=			
ANR	69882	PtrMemberAccess	next_slot -> ino		69842	0					
ANR	69883	Identifier	next_slot		69842	0					
ANR	69884	Identifier	ino		69842	1					
ANR	69885	PtrMemberAccess	st -> st_ino		69842	1					
ANR	69886	Identifier	st		69842	0					
ANR	69887	Identifier	st_ino		69842	1					
ANR	69888	ExpressionStatement	next_slot -> queued_output = false	110:3:2581:2613	69842	6	True				
ANR	69889	AssignmentExpression	next_slot -> queued_output = false		69842	0		=			
ANR	69890	PtrMemberAccess	next_slot -> queued_output		69842	0					
ANR	69891	Identifier	next_slot		69842	0					
ANR	69892	Identifier	queued_output		69842	1					
ANR	69893	Identifier	false		69842	1					
ANR	69894	ExpressionStatement	"p = hash_insert ( file_id_table , next_slot )"	111:3:2618:2660	69842	7	True				
ANR	69895	AssignmentExpression	"p = hash_insert ( file_id_table , next_slot )"		69842	0		=			
ANR	69896	Identifier	p		69842	0					
ANR	69897	CallExpression	"hash_insert ( file_id_table , next_slot )"		69842	1					
ANR	69898	Callee	hash_insert		69842	0					
ANR	69899	Identifier	hash_insert		69842	0					
ANR	69900	ArgumentList	file_id_table		69842	1					
ANR	69901	Argument	file_id_table		69842	0					
ANR	69902	Identifier	file_id_table		69842	0					
ANR	69903	Argument	next_slot		69842	1					
ANR	69904	Identifier	next_slot		69842	0					
ANR	69905	IfStatement	if ( ! p )		69842	8					
ANR	69906	Condition	! p	112:7:2669:2670	69842	0	True				
ANR	69907	UnaryOperationExpression	! p		69842	0					
ANR	69908	UnaryOperator	!		69842	0					
ANR	69909	Identifier	p		69842	1					
ANR	69910	ExpressionStatement	xalloc_die ( )	113:5:2678:2691	69842	1	True				
ANR	69911	CallExpression	xalloc_die ( )		69842	0					
ANR	69912	Callee	xalloc_die		69842	0					
ANR	69913	Identifier	xalloc_die		69842	0					
ANR	69914	ArgumentList			69842	1					
ANR	69915	IfStatement	if ( p == next_slot )		69842	9					
ANR	69916	Condition	p == next_slot	114:7:2700:2713	69842	0	True				
ANR	69917	EqualityExpression	p == next_slot		69842	0		==			
ANR	69918	Identifier	p		69842	0					
ANR	69919	Identifier	next_slot		69842	1					
ANR	69920	ExpressionStatement	next_slot = NULL	115:5:2721:2737	69842	1	True				
ANR	69921	AssignmentExpression	next_slot = NULL		69842	0		=			
ANR	69922	Identifier	next_slot		69842	0					
ANR	69923	Identifier	NULL		69842	1					
ANR	69924	ExpressionStatement	p -> type = type	116:3:2742:2756	69842	10	True				
ANR	69925	AssignmentExpression	p -> type = type		69842	0		=			
ANR	69926	PtrMemberAccess	p -> type		69842	0					
ANR	69927	Identifier	p		69842	0					
ANR	69928	Identifier	type		69842	1					
ANR	69929	Identifier	type		69842	1					
ANR	69930	ReturnStatement	return p ;	117:3:2761:2769	69842	11	True				
ANR	69931	Identifier	p		69842	0					
ANR	69932	ReturnType	static file_id *		69842	1					
ANR	69933	Identifier	__insert_file_id		69842	2					
ANR	69934	ParameterList	"struct stat const * st , enum file_id_type type"		69842	3					
ANR	69935	Parameter	struct stat const * st	101:18:2354:2374	69842	0	True				
ANR	69936	ParameterType	struct stat const *		69842	0					
ANR	69937	Identifier	st		69842	1					
ANR	69938	Parameter	enum file_id_type type	101:41:2377:2398	69842	1	True				
ANR	69939	ParameterType	enum file_id_type		69842	0					
ANR	69940	Identifier	type		69842	1					
ANR	69941	CFGEntryNode	ENTRY		69842		True				
ANR	69942	CFGExitNode	EXIT		69842		True				
ANR	69943	Symbol	st		69842						
ANR	69944	Symbol	NULL		69842						
ANR	69945	Symbol	* st		69842						
ANR	69946	Symbol	next_slot		69842						
ANR	69947	Symbol	next_slot -> ino		69842						
ANR	69948	Symbol	st -> st_dev		69842						
ANR	69949	Symbol	false		69842						
ANR	69950	Symbol	next_slot -> dev		69842						
ANR	69951	Symbol	type		69842						
ANR	69952	Symbol	p -> type		69842						
ANR	69953	Symbol	file_id_table		69842						
ANR	69954	Symbol	p		69842						
ANR	69955	Symbol	* next_slot		69842						
ANR	69956	Symbol	xmalloc		69842						
ANR	69957	Symbol	next_slot -> queued_output		69842						
ANR	69958	Symbol	* p		69842						
ANR	69959	Symbol	st -> st_ino		69842						
ANR	69960	Symbol	hash_insert		69842						
ANR	69961	Function	__lookup_file_id	120:0:2774:2934							
ANR	69962	FunctionDef	__lookup_file_id (struct stat const * st)		69961	0					
ANR	69963	CompoundStatement		122:0:2832:2934	69961	0					
ANR	69964	IdentifierDeclStatement	file_id f ;	123:2:2836:2845	69961	0	True				
ANR	69965	IdentifierDecl	f		69961	0					
ANR	69966	IdentifierDeclType	file_id		69961	0					
ANR	69967	Identifier	f		69961	1					
ANR	69968	ExpressionStatement	f . dev = st -> st_dev	125:2:2850:2868	69961	1	True				
ANR	69969	AssignmentExpression	f . dev = st -> st_dev		69961	0		=			
ANR	69970	MemberAccess	f . dev		69961	0					
ANR	69971	Identifier	f		69961	0					
ANR	69972	Identifier	dev		69961	1					
ANR	69973	PtrMemberAccess	st -> st_dev		69961	1					
ANR	69974	Identifier	st		69961	0					
ANR	69975	Identifier	st_dev		69961	1					
ANR	69976	ExpressionStatement	f . ino = st -> st_ino	126:2:2872:2890	69961	2	True				
ANR	69977	AssignmentExpression	f . ino = st -> st_ino		69961	0		=			
ANR	69978	MemberAccess	f . ino		69961	0					
ANR	69979	Identifier	f		69961	0					
ANR	69980	Identifier	ino		69961	1					
ANR	69981	PtrMemberAccess	st -> st_ino		69961	1					
ANR	69982	Identifier	st		69961	0					
ANR	69983	Identifier	st_ino		69961	1					
ANR	69984	ReturnStatement	"return hash_lookup ( file_id_table , & f ) ;"	127:2:2894:2932	69961	3	True				
ANR	69985	CallExpression	"hash_lookup ( file_id_table , & f )"		69961	0					
ANR	69986	Callee	hash_lookup		69961	0					
ANR	69987	Identifier	hash_lookup		69961	0					
ANR	69988	ArgumentList	file_id_table		69961	1					
ANR	69989	Argument	file_id_table		69961	0					
ANR	69990	Identifier	file_id_table		69961	0					
ANR	69991	Argument	& f		69961	1					
ANR	69992	UnaryOperationExpression	& f		69961	0					
ANR	69993	UnaryOperator	&		69961	0					
ANR	69994	Identifier	f		69961	1					
ANR	69995	ReturnType	static file_id *		69961	1					
ANR	69996	Identifier	__lookup_file_id		69961	2					
ANR	69997	ParameterList	struct stat const * st		69961	3					
ANR	69998	Parameter	struct stat const * st	121:18:2809:2829	69961	0	True				
ANR	69999	ParameterType	struct stat const *		69961	0					
ANR	70000	Identifier	st		69961	1					
ANR	70001	CFGEntryNode	ENTRY		69961		True				
ANR	70002	CFGExitNode	EXIT		69961		True				
ANR	70003	Symbol	st		69961						
ANR	70004	Symbol	f . ino		69961						
ANR	70005	Symbol	* st		69961						
ANR	70006	Symbol	f		69961						
ANR	70007	Symbol	st -> st_dev		69961						
ANR	70008	Symbol	f . dev		69961						
ANR	70009	Symbol	hash_lookup		69961						
ANR	70010	Symbol	st -> st_ino		69961						
ANR	70011	Symbol	& f		69961						
ANR	70012	Symbol	file_id_table		69961						
ANR	70013	Function	insert_file_id	133:0:3077:3178							
ANR	70014	FunctionDef	"insert_file_id (struct stat const * st , enum file_id_type type)"		70013	0					
ANR	70015	CompoundStatement		135:0:3145:3178	70013	0					
ANR	70016	ExpressionStatement	"__insert_file_id ( st , type )"	136:2:3149:3176	70013	0	True				
ANR	70017	CallExpression	"__insert_file_id ( st , type )"		70013	0					
ANR	70018	Callee	__insert_file_id		70013	0					
ANR	70019	Identifier	__insert_file_id		70013	0					
ANR	70020	ArgumentList	st		70013	1					
ANR	70021	Argument	st		70013	0					
ANR	70022	Identifier	st		70013	0					
ANR	70023	Argument	type		70013	1					
ANR	70024	Identifier	type		70013	0					
ANR	70025	ReturnType	void		70013	1					
ANR	70026	Identifier	insert_file_id		70013	2					
ANR	70027	ParameterList	"struct stat const * st , enum file_id_type type"		70013	3					
ANR	70028	Parameter	struct stat const * st	134:16:3098:3118	70013	0	True				
ANR	70029	ParameterType	struct stat const *		70013	0					
ANR	70030	Identifier	st		70013	1					
ANR	70031	Parameter	enum file_id_type type	134:39:3121:3142	70013	1	True				
ANR	70032	ParameterType	enum file_id_type		70013	0					
ANR	70033	Identifier	type		70013	1					
ANR	70034	CFGEntryNode	ENTRY		70013		True				
ANR	70035	CFGExitNode	EXIT		70013		True				
ANR	70036	Symbol	st		70013						
ANR	70037	Symbol	type		70013						
ANR	70038	Function	lookup_file_id	142:0:3293:3423							
ANR	70039	FunctionDef	lookup_file_id (struct stat const * st)		70038	0					
ANR	70040	CompoundStatement		144:0:3350:3423	70038	0					
ANR	70041	IdentifierDeclStatement	file_id * p = __lookup_file_id ( st ) ;	145:2:3354:3388	70038	0	True				
ANR	70042	IdentifierDecl	* p = __lookup_file_id ( st )		70038	0					
ANR	70043	IdentifierDeclType	file_id *		70038	0					
ANR	70044	Identifier	p		70038	1					
ANR	70045	AssignmentExpression	* p = __lookup_file_id ( st )		70038	2		=			
ANR	70046	Identifier	p		70038	0					
ANR	70047	CallExpression	__lookup_file_id ( st )		70038	1					
ANR	70048	Callee	__lookup_file_id		70038	0					
ANR	70049	Identifier	__lookup_file_id		70038	0					
ANR	70050	ArgumentList	st		70038	1					
ANR	70051	Argument	st		70038	0					
ANR	70052	Identifier	st		70038	0					
ANR	70053	ReturnStatement	return p ? p -> type : UNKNOWN ;	147:2:3393:3421	70038	1	True				
ANR	70054	ConditionalExpression	p ? p -> type : UNKNOWN		70038	0					
ANR	70055	Condition	p		70038	0					
ANR	70056	Identifier	p		70038	0					
ANR	70057	PtrMemberAccess	p -> type		70038	1					
ANR	70058	Identifier	p		70038	0					
ANR	70059	Identifier	type		70038	1					
ANR	70060	Identifier	UNKNOWN		70038	2					
ANR	70061	ReturnType	enum file_id_type		70038	1					
ANR	70062	Identifier	lookup_file_id		70038	2					
ANR	70063	ParameterList	struct stat const * st		70038	3					
ANR	70064	Parameter	struct stat const * st	143:16:3327:3347	70038	0	True				
ANR	70065	ParameterType	struct stat const *		70038	0					
ANR	70066	Identifier	st		70038	1					
ANR	70067	CFGEntryNode	ENTRY		70038		True				
ANR	70068	CFGExitNode	EXIT		70038		True				
ANR	70069	Symbol	p		70038						
ANR	70070	Symbol	st		70038						
ANR	70071	Symbol	* p		70038						
ANR	70072	Symbol	UNKNOWN		70038						
ANR	70073	Symbol	p -> type		70038						
ANR	70074	Symbol	__lookup_file_id		70038						
ANR	70075	Function	set_queued_output	150:0:3426:3621							
ANR	70076	FunctionDef	"set_queued_output (struct stat const * st , bool queued_output)"		70075	0					
ANR	70077	CompoundStatement		152:0:3493:3621	70075	0					
ANR	70078	IdentifierDeclStatement	file_id * p = __lookup_file_id ( st ) ;	153:2:3497:3531	70075	0	True				
ANR	70079	IdentifierDecl	* p = __lookup_file_id ( st )		70075	0					
ANR	70080	IdentifierDeclType	file_id *		70075	0					
ANR	70081	Identifier	p		70075	1					
ANR	70082	AssignmentExpression	* p = __lookup_file_id ( st )		70075	2		=			
ANR	70083	Identifier	p		70075	0					
ANR	70084	CallExpression	__lookup_file_id ( st )		70075	1					
ANR	70085	Callee	__lookup_file_id		70075	0					
ANR	70086	Identifier	__lookup_file_id		70075	0					
ANR	70087	ArgumentList	st		70075	1					
ANR	70088	Argument	st		70075	0					
ANR	70089	Identifier	st		70075	0					
ANR	70090	IfStatement	if ( ! p )		70075	1					
ANR	70091	Condition	! p	155:6:3540:3542	70075	0	True				
ANR	70092	UnaryOperationExpression	! p		70075	0					
ANR	70093	UnaryOperator	!		70075	0					
ANR	70094	Identifier	p		70075	1					
ANR	70095	ExpressionStatement	"p = __insert_file_id ( st , UNKNOWN )"	156:4:3549:3583	70075	1	True				
ANR	70096	AssignmentExpression	"p = __insert_file_id ( st , UNKNOWN )"		70075	0		=			
ANR	70097	Identifier	p		70075	0					
ANR	70098	CallExpression	"__insert_file_id ( st , UNKNOWN )"		70075	1					
ANR	70099	Callee	__insert_file_id		70075	0					
ANR	70100	Identifier	__insert_file_id		70075	0					
ANR	70101	ArgumentList	st		70075	1					
ANR	70102	Argument	st		70075	0					
ANR	70103	Identifier	st		70075	0					
ANR	70104	Argument	UNKNOWN		70075	1					
ANR	70105	Identifier	UNKNOWN		70075	0					
ANR	70106	ExpressionStatement	p -> queued_output = queued_output	157:2:3587:3619	70075	2	True				
ANR	70107	AssignmentExpression	p -> queued_output = queued_output		70075	0		=			
ANR	70108	PtrMemberAccess	p -> queued_output		70075	0					
ANR	70109	Identifier	p		70075	0					
ANR	70110	Identifier	queued_output		70075	1					
ANR	70111	Identifier	queued_output		70075	1					
ANR	70112	ReturnType	void		70075	1					
ANR	70113	Identifier	set_queued_output		70075	2					
ANR	70114	ParameterList	"struct stat const * st , bool queued_output"		70075	3					
ANR	70115	Parameter	struct stat const * st	151:19:3450:3470	70075	0	True				
ANR	70116	ParameterType	struct stat const *		70075	0					
ANR	70117	Identifier	st		70075	1					
ANR	70118	Parameter	bool queued_output	151:42:3473:3490	70075	1	True				
ANR	70119	ParameterType	bool		70075	0					
ANR	70120	Identifier	queued_output		70075	1					
ANR	70121	CFGEntryNode	ENTRY		70075		True				
ANR	70122	CFGExitNode	EXIT		70075		True				
ANR	70123	Symbol	p		70075						
ANR	70124	Symbol	st		70075						
ANR	70125	Symbol	__insert_file_id		70075						
ANR	70126	Symbol	queued_output		70075						
ANR	70127	Symbol	p -> queued_output		70075						
ANR	70128	Symbol	* p		70075						
ANR	70129	Symbol	UNKNOWN		70075						
ANR	70130	Symbol	__lookup_file_id		70075						
ANR	70131	Function	has_queued_output	160:0:3624:3744							
ANR	70132	FunctionDef	has_queued_output (struct stat const * st)		70131	0					
ANR	70133	CompoundStatement		162:0:3671:3744	70131	0					
ANR	70134	IdentifierDeclStatement	file_id * p = __lookup_file_id ( st ) ;	163:2:3675:3709	70131	0	True				
ANR	70135	IdentifierDecl	* p = __lookup_file_id ( st )		70131	0					
ANR	70136	IdentifierDeclType	file_id *		70131	0					
ANR	70137	Identifier	p		70131	1					
ANR	70138	AssignmentExpression	* p = __lookup_file_id ( st )		70131	2		=			
ANR	70139	Identifier	p		70131	0					
ANR	70140	CallExpression	__lookup_file_id ( st )		70131	1					
ANR	70141	Callee	__lookup_file_id		70131	0					
ANR	70142	Identifier	__lookup_file_id		70131	0					
ANR	70143	ArgumentList	st		70131	1					
ANR	70144	Argument	st		70131	0					
ANR	70145	Identifier	st		70131	0					
ANR	70146	ReturnStatement	return p && p -> queued_output ;	165:2:3714:3742	70131	1	True				
ANR	70147	AndExpression	p && p -> queued_output		70131	0		&&			
ANR	70148	Identifier	p		70131	0					
ANR	70149	PtrMemberAccess	p -> queued_output		70131	1					
ANR	70150	Identifier	p		70131	0					
ANR	70151	Identifier	queued_output		70131	1					
ANR	70152	ReturnType	bool		70131	1					
ANR	70153	Identifier	has_queued_output		70131	2					
ANR	70154	ParameterList	struct stat const * st		70131	3					
ANR	70155	Parameter	struct stat const * st	161:19:3648:3668	70131	0	True				
ANR	70156	ParameterType	struct stat const *		70131	0					
ANR	70157	Identifier	st		70131	1					
ANR	70158	CFGEntryNode	ENTRY		70131		True				
ANR	70159	CFGExitNode	EXIT		70131		True				
ANR	70160	Symbol	p		70131						
ANR	70161	Symbol	st		70131						
ANR	70162	Symbol	p -> queued_output		70131						
ANR	70163	Symbol	* p		70131						
ANR	70164	Symbol	__lookup_file_id		70131						
ANR	70165	Function	contains_slash	168:0:3747:3885							
ANR	70166	FunctionDef	contains_slash (const char * s)		70165	0					
ANR	70167	CompoundStatement		170:0:3809:3885	70165	0					
ANR	70168	ForStatement	for ( ; * s ; s ++ )		70165	0					
ANR	70169	Condition	* s	171:9:3820:3821	70165	0	True				
ANR	70170	UnaryOperationExpression	* s		70165	0					
ANR	70171	UnaryOperator	*		70165	0					
ANR	70172	Identifier	s		70165	1					
ANR	70173	PostIncDecOperationExpression	s ++	171:13:3824:3826	70165	1	True				
ANR	70174	Identifier	s		70165	0					
ANR	70175	IncDec	++		70165	1					
ANR	70176	IfStatement	if ( ISSLASH ( * s ) )		70165	2					
ANR	70177	Condition	ISSLASH ( * s )	172:8:3837:3847	70165	0	True				
ANR	70178	CallExpression	ISSLASH ( * s )		70165	0					
ANR	70179	Callee	ISSLASH		70165	0					
ANR	70180	Identifier	ISSLASH		70165	0					
ANR	70181	ArgumentList	* s		70165	1					
ANR	70182	Argument	* s		70165	0					
ANR	70183	UnaryOperationExpression	* s		70165	0					
ANR	70184	UnaryOperator	*		70165	0					
ANR	70185	Identifier	s		70165	1					
ANR	70186	ReturnStatement	return true ;	173:6:3856:3867	70165	1	True				
ANR	70187	Identifier	true		70165	0					
ANR	70188	ReturnStatement	return false ;	174:2:3871:3883	70165	1	True				
ANR	70189	Identifier	false		70165	0					
ANR	70190	ReturnType	static bool _GL_ATTRIBUTE_PURE		70165	1					
ANR	70191	Identifier	contains_slash		70165	2					
ANR	70192	ParameterList	const char * s		70165	3					
ANR	70193	Parameter	const char * s	169:16:3794:3806	70165	0	True				
ANR	70194	ParameterType	const char *		70165	0					
ANR	70195	Identifier	s		70165	1					
ANR	70196	CFGEntryNode	ENTRY		70165		True				
ANR	70197	CFGExitNode	EXIT		70165		True				
ANR	70198	Symbol	s		70165						
ANR	70199	Symbol	true		70165						
ANR	70200	Symbol	false		70165						
ANR	70201	Symbol	* s		70165						
ANR	70202	Symbol	ISSLASH		70165						
ANR	70203	Function	copy_attr_error	179:0:3903:4214							
ANR	70204	FunctionDef	"copy_attr_error (struct error_context * ctx , char const * fmt)"		70203	0					
ANR	70205	CompoundStatement		181:0:3981:4214	70203	0					
ANR	70206	IdentifierDeclStatement	int err = errno ;	182:2:3985:4000	70203	0	True				
ANR	70207	IdentifierDecl	err = errno		70203	0					
ANR	70208	IdentifierDeclType	int		70203	0					
ANR	70209	Identifier	err		70203	1					
ANR	70210	AssignmentExpression	err = errno		70203	2		=			
ANR	70211	Identifier	errno		70203	0					
ANR	70212	Identifier	errno		70203	1					
ANR	70213	IdentifierDeclStatement	va_list ap ;	183:2:4004:4014	70203	1	True				
ANR	70214	IdentifierDecl	ap		70203	0					
ANR	70215	IdentifierDeclType	va_list		70203	0					
ANR	70216	Identifier	ap		70203	1					
ANR	70217	IfStatement	if ( err != ENOSYS && err != ENOTSUP && err != EPERM )		70203	2					
ANR	70218	Condition	err != ENOSYS && err != ENOTSUP && err != EPERM	185:6:4023:4069	70203	0	True				
ANR	70219	AndExpression	err != ENOSYS && err != ENOTSUP && err != EPERM		70203	0		&&			
ANR	70220	EqualityExpression	err != ENOSYS		70203	0		!=			
ANR	70221	Identifier	err		70203	0					
ANR	70222	Identifier	ENOSYS		70203	1					
ANR	70223	AndExpression	err != ENOTSUP && err != EPERM		70203	1		&&			
ANR	70224	EqualityExpression	err != ENOTSUP		70203	0		!=			
ANR	70225	Identifier	err		70203	0					
ANR	70226	Identifier	ENOTSUP		70203	1					
ANR	70227	EqualityExpression	err != EPERM		70203	1		!=			
ANR	70228	Identifier	err		70203	0					
ANR	70229	Identifier	EPERM		70203	1					
ANR	70230	CompoundStatement		6:4:94:94	70203	1					
ANR	70231	ExpressionStatement	"va_start ( ap , fmt )"	188:6:4137:4155	70203	0	True				
ANR	70232	CallExpression	"va_start ( ap , fmt )"		70203	0					
ANR	70233	Callee	va_start		70203	0					
ANR	70234	Identifier	va_start		70203	0					
ANR	70235	ArgumentList	ap		70203	1					
ANR	70236	Argument	ap		70203	0					
ANR	70237	Identifier	ap		70203	0					
ANR	70238	Argument	fmt		70203	1					
ANR	70239	Identifier	fmt		70203	0					
ANR	70240	ExpressionStatement	"verror ( 0 , err , fmt , ap )"	189:6:4163:4187	70203	1	True				
ANR	70241	CallExpression	"verror ( 0 , err , fmt , ap )"		70203	0					
ANR	70242	Callee	verror		70203	0					
ANR	70243	Identifier	verror		70203	0					
ANR	70244	ArgumentList	0		70203	1					
ANR	70245	Argument	0		70203	0					
ANR	70246	PrimaryExpression	0		70203	0					
ANR	70247	Argument	err		70203	1					
ANR	70248	Identifier	err		70203	0					
ANR	70249	Argument	fmt		70203	2					
ANR	70250	Identifier	fmt		70203	0					
ANR	70251	Argument	ap		70203	3					
ANR	70252	Identifier	ap		70203	0					
ANR	70253	ExpressionStatement	va_end ( ap )	190:6:4195:4206	70203	2	True				
ANR	70254	CallExpression	va_end ( ap )		70203	0					
ANR	70255	Callee	va_end		70203	0					
ANR	70256	Identifier	va_end		70203	0					
ANR	70257	ArgumentList	ap		70203	1					
ANR	70258	Argument	ap		70203	0					
ANR	70259	Identifier	ap		70203	0					
ANR	70260	ReturnType	static void		70203	1					
ANR	70261	Identifier	copy_attr_error		70203	2					
ANR	70262	ParameterList	"struct error_context * ctx , char const * fmt"		70203	3					
ANR	70263	Parameter	struct error_context * ctx	180:17:3932:3956	70203	0	True				
ANR	70264	ParameterType	struct error_context *		70203	0					
ANR	70265	Identifier	ctx		70203	1					
ANR	70266	Parameter	char const * fmt	180:44:3959:3973	70203	1	True				
ANR	70267	ParameterType	char const *		70203	0					
ANR	70268	Identifier	fmt		70203	1					
ANR	70269	CFGEntryNode	ENTRY		70203		True				
ANR	70270	CFGExitNode	EXIT		70203		True				
ANR	70271	Symbol	errno		70203						
ANR	70272	Symbol	err		70203						
ANR	70273	Symbol	EPERM		70203						
ANR	70274	Symbol	ctx		70203						
ANR	70275	Symbol	ENOTSUP		70203						
ANR	70276	Symbol	ENOSYS		70203						
ANR	70277	Symbol	fmt		70203						
ANR	70278	Symbol	ap		70203						
ANR	70279	Function	copy_attr_quote	194:0:4217:4325							
ANR	70280	FunctionDef	"copy_attr_quote (struct error_context * ctx , char const * str)"		70279	0					
ANR	70281	CompoundStatement		196:0:4298:4325	70279	0					
ANR	70282	ReturnStatement	return quotearg ( str ) ;	197:2:4302:4323	70279	0	True				
ANR	70283	CallExpression	quotearg ( str )		70279	0					
ANR	70284	Callee	quotearg		70279	0					
ANR	70285	Identifier	quotearg		70279	0					
ANR	70286	ArgumentList	str		70279	1					
ANR	70287	Argument	str		70279	0					
ANR	70288	Identifier	str		70279	0					
ANR	70289	ReturnType	static char const *		70279	1					
ANR	70290	Identifier	copy_attr_quote		70279	2					
ANR	70291	ParameterList	"struct error_context * ctx , char const * str"		70279	3					
ANR	70292	Parameter	struct error_context * ctx	195:17:4254:4278	70279	0	True				
ANR	70293	ParameterType	struct error_context *		70279	0					
ANR	70294	Identifier	ctx		70279	1					
ANR	70295	Parameter	char const * str	195:44:4281:4295	70279	1	True				
ANR	70296	ParameterType	char const *		70279	0					
ANR	70297	Identifier	str		70279	1					
ANR	70298	CFGEntryNode	ENTRY		70279		True				
ANR	70299	CFGExitNode	EXIT		70279		True				
ANR	70300	Symbol	str		70279						
ANR	70301	Symbol	quotearg		70279						
ANR	70302	Symbol	ctx		70279						
ANR	70303	Function	copy_attr_free	200:0:4328:4402							
ANR	70304	FunctionDef	"copy_attr_free (struct error_context * ctx , char const * str)"		70303	0					
ANR	70305	CompoundStatement		202:0:4400:4402	70303	0					
ANR	70306	ReturnType	static void		70303	1					
ANR	70307	Identifier	copy_attr_free		70303	2					
ANR	70308	ParameterList	"struct error_context * ctx , char const * str"		70303	3					
ANR	70309	Parameter	struct error_context * ctx	201:16:4356:4380	70303	0	True				
ANR	70310	ParameterType	struct error_context *		70303	0					
ANR	70311	Identifier	ctx		70303	1					
ANR	70312	Parameter	char const * str	201:43:4383:4397	70303	1	True				
ANR	70313	ParameterType	char const *		70303	0					
ANR	70314	Identifier	str		70303	1					
ANR	70315	CFGEntryNode	ENTRY		70303		True				
ANR	70316	CFGExitNode	EXIT		70303		True				
ANR	70317	Symbol	str		70303						
ANR	70318	Symbol	ctx		70303						
ANR	70319	Function	copy_attr_check	205:0:4405:4582							
ANR	70320	FunctionDef	"copy_attr_check (const char * name , struct error_context * ctx)"		70319	0					
ANR	70321	CompoundStatement		207:0:4478:4582	70319	0					
ANR	70322	IdentifierDeclStatement	"int action = attr_copy_action ( name , ctx ) ;"	208:1:4481:4522	70319	0	True				
ANR	70323	IdentifierDecl	"action = attr_copy_action ( name , ctx )"		70319	0					
ANR	70324	IdentifierDeclType	int		70319	0					
ANR	70325	Identifier	action		70319	1					
ANR	70326	AssignmentExpression	"action = attr_copy_action ( name , ctx )"		70319	2		=			
ANR	70327	Identifier	action		70319	0					
ANR	70328	CallExpression	"attr_copy_action ( name , ctx )"		70319	1					
ANR	70329	Callee	attr_copy_action		70319	0					
ANR	70330	Identifier	attr_copy_action		70319	0					
ANR	70331	ArgumentList	name		70319	1					
ANR	70332	Argument	name		70319	0					
ANR	70333	Identifier	name		70319	0					
ANR	70334	Argument	ctx		70319	1					
ANR	70335	Identifier	ctx		70319	0					
ANR	70336	ReturnStatement	return action == 0 || action == ATTR_ACTION_PERMISSIONS ;	209:1:4525:4580	70319	1	True				
ANR	70337	OrExpression	action == 0 || action == ATTR_ACTION_PERMISSIONS		70319	0		||			
ANR	70338	EqualityExpression	action == 0		70319	0		==			
ANR	70339	Identifier	action		70319	0					
ANR	70340	PrimaryExpression	0		70319	1					
ANR	70341	EqualityExpression	action == ATTR_ACTION_PERMISSIONS		70319	1		==			
ANR	70342	Identifier	action		70319	0					
ANR	70343	Identifier	ATTR_ACTION_PERMISSIONS		70319	1					
ANR	70344	ReturnType	static int		70319	1					
ANR	70345	Identifier	copy_attr_check		70319	2					
ANR	70346	ParameterList	"const char * name , struct error_context * ctx"		70319	3					
ANR	70347	Parameter	const char * name	206:17:4433:4448	70319	0	True				
ANR	70348	ParameterType	const char *		70319	0					
ANR	70349	Identifier	name		70319	1					
ANR	70350	Parameter	struct error_context * ctx	206:35:4451:4475	70319	1	True				
ANR	70351	ParameterType	struct error_context *		70319	0					
ANR	70352	Identifier	ctx		70319	1					
ANR	70353	CFGEntryNode	ENTRY		70319		True				
ANR	70354	CFGExitNode	EXIT		70319		True				
ANR	70355	Symbol	ATTR_ACTION_PERMISSIONS		70319						
ANR	70356	Symbol	ctx		70319						
ANR	70357	Symbol	name		70319						
ANR	70358	Symbol	action		70319						
ANR	70359	Symbol	attr_copy_action		70319						
ANR	70360	Function	copy_attr	212:0:4585:5040							
ANR	70361	FunctionDef	"copy_attr (char const * src_path , char const * dst_path)"		70360	0					
ANR	70362	CompoundStatement		214:0:4651:5040	70360	0					
ANR	70363	Statement	struct	215:2:4655:4660	70360	0	True				
ANR	70364	Statement	error_context	215:9:4662:4674	70360	1	True				
ANR	70365	Statement	ctx	215:23:4676:4678	70360	2	True				
ANR	70366	Statement	=	215:27:4680:4680	70360	3	True				
ANR	70367	CompoundStatement		3:2:32:32	70360	4					
ANR	70368	Statement	.	217:4:4690:4690	70360	0	True				
ANR	70369	Statement	error	217:5:4691:4695	70360	1	True				
ANR	70370	Statement	=	217:11:4697:4697	70360	2	True				
ANR	70371	Statement	copy_attr_error	217:13:4699:4713	70360	3	True				
ANR	70372	Statement	","	217:28:4714:4714	70360	4	True				
ANR	70373	Statement	.	218:4:4720:4720	70360	5	True				
ANR	70374	Statement	quote	218:5:4721:4725	70360	6	True				
ANR	70375	Statement	=	218:11:4727:4727	70360	7	True				
ANR	70376	Statement	copy_attr_quote	218:13:4729:4743	70360	8	True				
ANR	70377	Statement	","	218:28:4744:4744	70360	9	True				
ANR	70378	Statement	.	219:4:4750:4750	70360	10	True				
ANR	70379	Statement	quote_free	219:5:4751:4760	70360	11	True				
ANR	70380	Statement	=	219:16:4762:4762	70360	12	True				
ANR	70381	Statement	copy_attr_free	219:18:4764:4777	70360	13	True				
ANR	70382	ExpressionStatement		220:3:4782:4782	70360	5	True				
ANR	70383	ReturnStatement	"return attr_copy_file ( src_path , dst_path , copy_attr_check , & ctx ) ;"	224:2:4973:5038	70360	6	True				
ANR	70384	CallExpression	"attr_copy_file ( src_path , dst_path , copy_attr_check , & ctx )"		70360	0					
ANR	70385	Callee	attr_copy_file		70360	0					
ANR	70386	Identifier	attr_copy_file		70360	0					
ANR	70387	ArgumentList	src_path		70360	1					
ANR	70388	Argument	src_path		70360	0					
ANR	70389	Identifier	src_path		70360	0					
ANR	70390	Argument	dst_path		70360	1					
ANR	70391	Identifier	dst_path		70360	0					
ANR	70392	Argument	copy_attr_check		70360	2					
ANR	70393	Identifier	copy_attr_check		70360	0					
ANR	70394	Argument	& ctx		70360	3					
ANR	70395	UnaryOperationExpression	& ctx		70360	0					
ANR	70396	UnaryOperator	&		70360	0					
ANR	70397	Identifier	ctx		70360	1					
ANR	70398	ReturnType	static int		70360	1					
ANR	70399	Identifier	copy_attr		70360	2					
ANR	70400	ParameterList	"char const * src_path , char const * dst_path"		70360	3					
ANR	70401	Parameter	char const * src_path	213:11:4607:4626	70360	0	True				
ANR	70402	ParameterType	char const *		70360	0					
ANR	70403	Identifier	src_path		70360	1					
ANR	70404	Parameter	char const * dst_path	213:33:4629:4648	70360	1	True				
ANR	70405	ParameterType	char const *		70360	0					
ANR	70406	Identifier	dst_path		70360	1					
ANR	70407	CFGEntryNode	ENTRY		70360		True				
ANR	70408	CFGExitNode	EXIT		70360		True				
ANR	70409	Symbol	attr_copy_file		70360						
ANR	70410	Symbol	copy_attr_check		70360						
ANR	70411	Symbol	& ctx		70360						
ANR	70412	Symbol	src_path		70360						
ANR	70413	Symbol	dst_path		70360						
ANR	70414	Function	copy_attr	229:0:5067:5147							
ANR	70415	FunctionDef	"copy_attr (char const * src_path , char const * dst_path)"		70414	0					
ANR	70416	CompoundStatement		231:0:5133:5147	70414	0					
ANR	70417	ReturnStatement	return 0 ;	232:2:5137:5145	70414	0	True				
ANR	70418	PrimaryExpression	0		70414	0					
ANR	70419	ReturnType	static int		70414	1					
ANR	70420	Identifier	copy_attr		70414	2					
ANR	70421	ParameterList	"char const * src_path , char const * dst_path"		70414	3					
ANR	70422	Parameter	char const * src_path	230:11:5089:5108	70414	0	True				
ANR	70423	ParameterType	char const *		70414	0					
ANR	70424	Identifier	src_path		70414	1					
ANR	70425	Parameter	char const * dst_path	230:33:5111:5130	70414	1	True				
ANR	70426	ParameterType	char const *		70414	0					
ANR	70427	Identifier	dst_path		70414	1					
ANR	70428	CFGEntryNode	ENTRY		70414		True				
ANR	70429	CFGExitNode	EXIT		70414		True				
ANR	70430	Symbol	src_path		70414						
ANR	70431	Symbol	dst_path		70414						
ANR	70432	Function	set_file_attributes	237:0:5158:7076							
ANR	70433	FunctionDef	"set_file_attributes (char const * to , enum file_attributes attr , char const * from , const struct stat * st , mode_t mode , struct timespec * new_time)"		70432	0					
ANR	70434	CompoundStatement		241:0:5322:7076	70432	0					
ANR	70435	IfStatement	if ( attr & FA_TIMES )		70432	0					
ANR	70436	Condition	attr & FA_TIMES	242:6:5330:5344	70432	0	True				
ANR	70437	BitAndExpression	attr & FA_TIMES		70432	0		&			
ANR	70438	Identifier	attr		70432	0					
ANR	70439	Identifier	FA_TIMES		70432	1					
ANR	70440	CompoundStatement		4:6:36:60	70432	1					
ANR	70441	IdentifierDeclStatement	struct timespec times [ 2 ] ;	244:6:5359:5383	70432	0	True				
ANR	70442	IdentifierDecl	times [ 2 ]		70432	0					
ANR	70443	IdentifierDeclType	struct timespec [ 2 ]		70432	0					
ANR	70444	Identifier	times		70432	1					
ANR	70445	PrimaryExpression	2		70432	2					
ANR	70446	IfStatement	if ( new_time )		70432	1					
ANR	70447	Condition	new_time	245:10:5395:5402	70432	0	True				
ANR	70448	Identifier	new_time		70432	0					
ANR	70449	ExpressionStatement	times [ 0 ] = times [ 1 ] = * new_time	246:1:5406:5437	70432	1	True				
ANR	70450	AssignmentExpression	times [ 0 ] = times [ 1 ] = * new_time		70432	0		=			
ANR	70451	ArrayIndexing	times [ 0 ]		70432	0					
ANR	70452	Identifier	times		70432	0					
ANR	70453	PrimaryExpression	0		70432	1					
ANR	70454	AssignmentExpression	times [ 1 ] = * new_time		70432	1		=			
ANR	70455	ArrayIndexing	times [ 1 ]		70432	0					
ANR	70456	Identifier	times		70432	0					
ANR	70457	PrimaryExpression	1		70432	1					
ANR	70458	UnaryOperationExpression	* new_time		70432	1					
ANR	70459	UnaryOperator	*		70432	0					
ANR	70460	Identifier	new_time		70432	1					
ANR	70461	ElseStatement	else		70432	0					
ANR	70462	CompoundStatement		8:8:135:135	70432	0					
ANR	70463	ExpressionStatement	times [ 0 ] = get_stat_atime ( st )	249:3:5463:5493	70432	0	True				
ANR	70464	AssignmentExpression	times [ 0 ] = get_stat_atime ( st )		70432	0		=			
ANR	70465	ArrayIndexing	times [ 0 ]		70432	0					
ANR	70466	Identifier	times		70432	0					
ANR	70467	PrimaryExpression	0		70432	1					
ANR	70468	CallExpression	get_stat_atime ( st )		70432	1					
ANR	70469	Callee	get_stat_atime		70432	0					
ANR	70470	Identifier	get_stat_atime		70432	0					
ANR	70471	ArgumentList	st		70432	1					
ANR	70472	Argument	st		70432	0					
ANR	70473	Identifier	st		70432	0					
ANR	70474	ExpressionStatement	times [ 1 ] = get_stat_mtime ( st )	250:3:5498:5528	70432	1	True				
ANR	70475	AssignmentExpression	times [ 1 ] = get_stat_mtime ( st )		70432	0		=			
ANR	70476	ArrayIndexing	times [ 1 ]		70432	0					
ANR	70477	Identifier	times		70432	0					
ANR	70478	PrimaryExpression	1		70432	1					
ANR	70479	CallExpression	get_stat_mtime ( st )		70432	1					
ANR	70480	Callee	get_stat_mtime		70432	0					
ANR	70481	Identifier	get_stat_mtime		70432	0					
ANR	70482	ArgumentList	st		70432	1					
ANR	70483	Argument	st		70432	0					
ANR	70484	Identifier	st		70432	0					
ANR	70485	IfStatement	"if ( safe_lutimens ( to , times ) != 0 )"		70432	2					
ANR	70486	Condition	"safe_lutimens ( to , times ) != 0"	252:10:5543:5572	70432	0	True				
ANR	70487	EqualityExpression	"safe_lutimens ( to , times ) != 0"		70432	0		!=			
ANR	70488	CallExpression	"safe_lutimens ( to , times )"		70432	0					
ANR	70489	Callee	safe_lutimens		70432	0					
ANR	70490	Identifier	safe_lutimens		70432	0					
ANR	70491	ArgumentList	to		70432	1					
ANR	70492	Argument	to		70432	0					
ANR	70493	Identifier	to		70432	0					
ANR	70494	Argument	times		70432	1					
ANR	70495	Identifier	times		70432	0					
ANR	70496	PrimaryExpression	0		70432	1					
ANR	70497	ExpressionStatement	"pfatal ( ""Failed to set the timestamps of %s %s"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( to ) )"	253:1:5576:5686	70432	1	True				
ANR	70498	CallExpression	"pfatal ( ""Failed to set the timestamps of %s %s"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( to ) )"		70432	0					
ANR	70499	Callee	pfatal		70432	0					
ANR	70500	Identifier	pfatal		70432	0					
ANR	70501	ArgumentList	"""Failed to set the timestamps of %s %s"""		70432	1					
ANR	70502	Argument	"""Failed to set the timestamps of %s %s"""		70432	0					
ANR	70503	PrimaryExpression	"""Failed to set the timestamps of %s %s"""		70432	0					
ANR	70504	Argument	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		70432	1					
ANR	70505	ConditionalExpression	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		70432	0					
ANR	70506	Condition	S_ISLNK ( mode )		70432	0					
ANR	70507	CallExpression	S_ISLNK ( mode )		70432	0					
ANR	70508	Callee	S_ISLNK		70432	0					
ANR	70509	Identifier	S_ISLNK		70432	0					
ANR	70510	ArgumentList	mode		70432	1					
ANR	70511	Argument	mode		70432	0					
ANR	70512	Identifier	mode		70432	0					
ANR	70513	PrimaryExpression	"""symbolic link"""		70432	1					
ANR	70514	PrimaryExpression	"""file"""		70432	2					
ANR	70515	Argument	quotearg ( to )		70432	2					
ANR	70516	CallExpression	quotearg ( to )		70432	0					
ANR	70517	Callee	quotearg		70432	0					
ANR	70518	Identifier	quotearg		70432	0					
ANR	70519	ArgumentList	to		70432	1					
ANR	70520	Argument	to		70432	0					
ANR	70521	Identifier	to		70432	0					
ANR	70522	IfStatement	if ( attr & FA_IDS )		70432	1					
ANR	70523	Condition	attr & FA_IDS	257:6:5700:5712	70432	0	True				
ANR	70524	BitAndExpression	attr & FA_IDS		70432	0		&			
ANR	70525	Identifier	attr		70432	0					
ANR	70526	Identifier	FA_IDS		70432	1					
ANR	70527	CompoundStatement		22:6:495:504	70432	1					
ANR	70528	Statement	static	259:6:5727:5732	70432	0	True				
ANR	70529	IdentifierDeclStatement	uid_t euid = ( uid_t ) - 1 ;	259:13:5734:5756	70432	1	True				
ANR	70530	IdentifierDecl	euid = ( uid_t ) - 1		70432	0					
ANR	70531	IdentifierDeclType	uid_t		70432	0					
ANR	70532	Identifier	euid		70432	1					
ANR	70533	AssignmentExpression	euid = ( uid_t ) - 1		70432	2		=			
ANR	70534	Identifier	euid		70432	0					
ANR	70535	CastExpression	( uid_t ) - 1		70432	1					
ANR	70536	CastTarget	uid_t		70432	0					
ANR	70537	UnaryOperationExpression	- 1		70432	1					
ANR	70538	UnaryOperator	-		70432	0					
ANR	70539	PrimaryExpression	1		70432	1					
ANR	70540	Statement	static	260:6:5764:5769	70432	2	True				
ANR	70541	IdentifierDeclStatement	gid_t egid = ( gid_t ) - 1 ;	260:13:5771:5793	70432	3	True				
ANR	70542	IdentifierDecl	egid = ( gid_t ) - 1		70432	0					
ANR	70543	IdentifierDeclType	gid_t		70432	0					
ANR	70544	Identifier	egid		70432	1					
ANR	70545	AssignmentExpression	egid = ( gid_t ) - 1		70432	2		=			
ANR	70546	Identifier	egid		70432	0					
ANR	70547	CastExpression	( gid_t ) - 1		70432	1					
ANR	70548	CastTarget	gid_t		70432	0					
ANR	70549	UnaryOperationExpression	- 1		70432	1					
ANR	70550	UnaryOperator	-		70432	0					
ANR	70551	PrimaryExpression	1		70432	1					
ANR	70552	IdentifierDeclStatement	uid_t uid ;	261:6:5801:5810	70432	4	True				
ANR	70553	IdentifierDecl	uid		70432	0					
ANR	70554	IdentifierDeclType	uid_t		70432	0					
ANR	70555	Identifier	uid		70432	1					
ANR	70556	IdentifierDeclStatement	uid_t gid ;	262:6:5818:5827	70432	5	True				
ANR	70557	IdentifierDecl	gid		70432	0					
ANR	70558	IdentifierDeclType	uid_t		70432	0					
ANR	70559	Identifier	gid		70432	1					
ANR	70560	IfStatement	if ( euid == - 1 )		70432	6					
ANR	70561	Condition	euid == - 1	264:10:5840:5849	70432	0	True				
ANR	70562	EqualityExpression	euid == - 1		70432	0		==			
ANR	70563	Identifier	euid		70432	0					
ANR	70564	UnaryOperationExpression	- 1		70432	1					
ANR	70565	UnaryOperator	-		70432	0					
ANR	70566	PrimaryExpression	1		70432	1					
ANR	70567	CompoundStatement		25:8:537:537	70432	1					
ANR	70568	ExpressionStatement	euid = geteuid ( )	266:3:5865:5882	70432	0	True				
ANR	70569	AssignmentExpression	euid = geteuid ( )		70432	0		=			
ANR	70570	Identifier	euid		70432	0					
ANR	70571	CallExpression	geteuid ( )		70432	1					
ANR	70572	Callee	geteuid		70432	0					
ANR	70573	Identifier	geteuid		70432	0					
ANR	70574	ArgumentList			70432	1					
ANR	70575	ExpressionStatement	egid = getegid ( )	267:3:5887:5904	70432	1	True				
ANR	70576	AssignmentExpression	egid = getegid ( )		70432	0		=			
ANR	70577	Identifier	egid		70432	0					
ANR	70578	CallExpression	getegid ( )		70432	1					
ANR	70579	Callee	getegid		70432	0					
ANR	70580	Identifier	getegid		70432	0					
ANR	70581	ArgumentList			70432	1					
ANR	70582	ExpressionStatement	uid = ( euid == st -> st_uid ) ? - 1 : st -> st_uid	269:6:5915:5959	70432	7	True				
ANR	70583	AssignmentExpression	uid = ( euid == st -> st_uid ) ? - 1 : st -> st_uid		70432	0		=			
ANR	70584	Identifier	uid		70432	0					
ANR	70585	ConditionalExpression	( euid == st -> st_uid ) ? - 1 : st -> st_uid		70432	1					
ANR	70586	Condition	euid == st -> st_uid		70432	0					
ANR	70587	EqualityExpression	euid == st -> st_uid		70432	0		==			
ANR	70588	Identifier	euid		70432	0					
ANR	70589	PtrMemberAccess	st -> st_uid		70432	1					
ANR	70590	Identifier	st		70432	0					
ANR	70591	Identifier	st_uid		70432	1					
ANR	70592	UnaryOperationExpression	- 1		70432	1					
ANR	70593	UnaryOperator	-		70432	0					
ANR	70594	PrimaryExpression	1		70432	1					
ANR	70595	PtrMemberAccess	st -> st_uid		70432	2					
ANR	70596	Identifier	st		70432	0					
ANR	70597	Identifier	st_uid		70432	1					
ANR	70598	ExpressionStatement	gid = ( egid == st -> st_gid ) ? - 1 : st -> st_gid	270:6:5967:6011	70432	8	True				
ANR	70599	AssignmentExpression	gid = ( egid == st -> st_gid ) ? - 1 : st -> st_gid		70432	0		=			
ANR	70600	Identifier	gid		70432	0					
ANR	70601	ConditionalExpression	( egid == st -> st_gid ) ? - 1 : st -> st_gid		70432	1					
ANR	70602	Condition	egid == st -> st_gid		70432	0					
ANR	70603	EqualityExpression	egid == st -> st_gid		70432	0		==			
ANR	70604	Identifier	egid		70432	0					
ANR	70605	PtrMemberAccess	st -> st_gid		70432	1					
ANR	70606	Identifier	st		70432	0					
ANR	70607	Identifier	st_gid		70432	1					
ANR	70608	UnaryOperationExpression	- 1		70432	1					
ANR	70609	UnaryOperator	-		70432	0					
ANR	70610	PrimaryExpression	1		70432	1					
ANR	70611	PtrMemberAccess	st -> st_gid		70432	2					
ANR	70612	Identifier	st		70432	0					
ANR	70613	Identifier	st_gid		70432	1					
ANR	70614	IfStatement	"if ( ( uid != - 1 || gid != - 1 ) && safe_lchown ( to , uid , gid ) != 0 && ( errno != EPERM || ( uid != - 1 && safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM ) ) )"		70432	9					
ANR	70615	Condition	"( uid != - 1 || gid != - 1 ) && safe_lchown ( to , uid , gid ) != 0 && ( errno != EPERM || ( uid != - 1 && safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM ) )"	274:10:6163:6337	70432	0	True				
ANR	70616	AndExpression	"( uid != - 1 || gid != - 1 ) && safe_lchown ( to , uid , gid ) != 0 && ( errno != EPERM || ( uid != - 1 && safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM ) )"		70432	0		&&			
ANR	70617	OrExpression	uid != - 1 || gid != - 1		70432	0		||			
ANR	70618	EqualityExpression	uid != - 1		70432	0		!=			
ANR	70619	Identifier	uid		70432	0					
ANR	70620	UnaryOperationExpression	- 1		70432	1					
ANR	70621	UnaryOperator	-		70432	0					
ANR	70622	PrimaryExpression	1		70432	1					
ANR	70623	EqualityExpression	gid != - 1		70432	1		!=			
ANR	70624	Identifier	gid		70432	0					
ANR	70625	UnaryOperationExpression	- 1		70432	1					
ANR	70626	UnaryOperator	-		70432	0					
ANR	70627	PrimaryExpression	1		70432	1					
ANR	70628	AndExpression	"safe_lchown ( to , uid , gid ) != 0 && ( errno != EPERM || ( uid != - 1 && safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM ) )"		70432	1		&&			
ANR	70629	EqualityExpression	"safe_lchown ( to , uid , gid ) != 0"		70432	0		!=			
ANR	70630	CallExpression	"safe_lchown ( to , uid , gid )"		70432	0					
ANR	70631	Callee	safe_lchown		70432	0					
ANR	70632	Identifier	safe_lchown		70432	0					
ANR	70633	ArgumentList	to		70432	1					
ANR	70634	Argument	to		70432	0					
ANR	70635	Identifier	to		70432	0					
ANR	70636	Argument	uid		70432	1					
ANR	70637	Identifier	uid		70432	0					
ANR	70638	Argument	gid		70432	2					
ANR	70639	Identifier	gid		70432	0					
ANR	70640	PrimaryExpression	0		70432	1					
ANR	70641	OrExpression	"errno != EPERM || ( uid != - 1 && safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM )"		70432	1		||			
ANR	70642	EqualityExpression	errno != EPERM		70432	0		!=			
ANR	70643	Identifier	errno		70432	0					
ANR	70644	Identifier	EPERM		70432	1					
ANR	70645	AndExpression	"uid != - 1 && safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM"		70432	1		&&			
ANR	70646	EqualityExpression	uid != - 1		70432	0		!=			
ANR	70647	Identifier	uid		70432	0					
ANR	70648	UnaryOperationExpression	- 1		70432	1					
ANR	70649	UnaryOperator	-		70432	0					
ANR	70650	PrimaryExpression	1		70432	1					
ANR	70651	AndExpression	"safe_lchown ( to , ( uid = - 1 ) , gid ) != 0 && errno != EPERM"		70432	1		&&			
ANR	70652	EqualityExpression	"safe_lchown ( to , ( uid = - 1 ) , gid ) != 0"		70432	0		!=			
ANR	70653	CallExpression	"safe_lchown ( to , ( uid = - 1 ) , gid )"		70432	0					
ANR	70654	Callee	safe_lchown		70432	0					
ANR	70655	Identifier	safe_lchown		70432	0					
ANR	70656	ArgumentList	to		70432	1					
ANR	70657	Argument	to		70432	0					
ANR	70658	Identifier	to		70432	0					
ANR	70659	Argument	uid = - 1		70432	1					
ANR	70660	AssignmentExpression	uid = - 1		70432	0		=			
ANR	70661	Identifier	uid		70432	0					
ANR	70662	UnaryOperationExpression	- 1		70432	1					
ANR	70663	UnaryOperator	-		70432	0					
ANR	70664	PrimaryExpression	1		70432	1					
ANR	70665	Argument	gid		70432	2					
ANR	70666	Identifier	gid		70432	0					
ANR	70667	PrimaryExpression	0		70432	1					
ANR	70668	EqualityExpression	errno != EPERM		70432	1		!=			
ANR	70669	Identifier	errno		70432	0					
ANR	70670	Identifier	EPERM		70432	1					
ANR	70671	ExpressionStatement	"pfatal ( ""Failed to set the %s of %s %s"" , ( uid == - 1 ) ? ""owner"" : ""owning group"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( to ) )"	280:1:6341:6485	70432	1	True				
ANR	70672	CallExpression	"pfatal ( ""Failed to set the %s of %s %s"" , ( uid == - 1 ) ? ""owner"" : ""owning group"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( to ) )"		70432	0					
ANR	70673	Callee	pfatal		70432	0					
ANR	70674	Identifier	pfatal		70432	0					
ANR	70675	ArgumentList	"""Failed to set the %s of %s %s"""		70432	1					
ANR	70676	Argument	"""Failed to set the %s of %s %s"""		70432	0					
ANR	70677	PrimaryExpression	"""Failed to set the %s of %s %s"""		70432	0					
ANR	70678	Argument	"( uid == - 1 ) ? ""owner"" : ""owning group"""		70432	1					
ANR	70679	ConditionalExpression	"( uid == - 1 ) ? ""owner"" : ""owning group"""		70432	0					
ANR	70680	Condition	uid == - 1		70432	0					
ANR	70681	EqualityExpression	uid == - 1		70432	0		==			
ANR	70682	Identifier	uid		70432	0					
ANR	70683	UnaryOperationExpression	- 1		70432	1					
ANR	70684	UnaryOperator	-		70432	0					
ANR	70685	PrimaryExpression	1		70432	1					
ANR	70686	PrimaryExpression	"""owner"""		70432	1					
ANR	70687	PrimaryExpression	"""owning group"""		70432	2					
ANR	70688	Argument	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		70432	2					
ANR	70689	ConditionalExpression	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		70432	0					
ANR	70690	Condition	S_ISLNK ( mode )		70432	0					
ANR	70691	CallExpression	S_ISLNK ( mode )		70432	0					
ANR	70692	Callee	S_ISLNK		70432	0					
ANR	70693	Identifier	S_ISLNK		70432	0					
ANR	70694	ArgumentList	mode		70432	1					
ANR	70695	Argument	mode		70432	0					
ANR	70696	Identifier	mode		70432	0					
ANR	70697	PrimaryExpression	"""symbolic link"""		70432	1					
ANR	70698	PrimaryExpression	"""file"""		70432	2					
ANR	70699	Argument	quotearg ( to )		70432	3					
ANR	70700	CallExpression	quotearg ( to )		70432	0					
ANR	70701	Callee	quotearg		70432	0					
ANR	70702	Identifier	quotearg		70432	0					
ANR	70703	ArgumentList	to		70432	1					
ANR	70704	Argument	to		70432	0					
ANR	70705	Identifier	to		70432	0					
ANR	70706	IfStatement	if ( attr & FA_XATTRS )		70432	2					
ANR	70707	Condition	attr & FA_XATTRS	285:6:6499:6514	70432	0	True				
ANR	70708	BitAndExpression	attr & FA_XATTRS		70432	0		&			
ANR	70709	Identifier	attr		70432	0					
ANR	70710	Identifier	FA_XATTRS		70432	1					
ANR	70711	IfStatement	"if ( copy_attr ( from , to ) != 0 && errno != ENOSYS && errno != ENOTSUP && errno != EPERM )"		70432	1					
ANR	70712	Condition	"copy_attr ( from , to ) != 0 && errno != ENOSYS && errno != ENOTSUP && errno != EPERM"	286:8:6525:6607	70432	0	True				
ANR	70713	AndExpression	"copy_attr ( from , to ) != 0 && errno != ENOSYS && errno != ENOTSUP && errno != EPERM"		70432	0		&&			
ANR	70714	EqualityExpression	"copy_attr ( from , to ) != 0"		70432	0		!=			
ANR	70715	CallExpression	"copy_attr ( from , to )"		70432	0					
ANR	70716	Callee	copy_attr		70432	0					
ANR	70717	Identifier	copy_attr		70432	0					
ANR	70718	ArgumentList	from		70432	1					
ANR	70719	Argument	from		70432	0					
ANR	70720	Identifier	from		70432	0					
ANR	70721	Argument	to		70432	1					
ANR	70722	Identifier	to		70432	0					
ANR	70723	PrimaryExpression	0		70432	1					
ANR	70724	AndExpression	errno != ENOSYS && errno != ENOTSUP && errno != EPERM		70432	1		&&			
ANR	70725	EqualityExpression	errno != ENOSYS		70432	0		!=			
ANR	70726	Identifier	errno		70432	0					
ANR	70727	Identifier	ENOSYS		70432	1					
ANR	70728	AndExpression	errno != ENOTSUP && errno != EPERM		70432	1		&&			
ANR	70729	EqualityExpression	errno != ENOTSUP		70432	0		!=			
ANR	70730	Identifier	errno		70432	0					
ANR	70731	Identifier	ENOTSUP		70432	1					
ANR	70732	EqualityExpression	errno != EPERM		70432	1		!=			
ANR	70733	Identifier	errno		70432	0					
ANR	70734	Identifier	EPERM		70432	1					
ANR	70735	ExpressionStatement	fatal_exit ( 0 )	288:6:6616:6630	70432	1	True				
ANR	70736	CallExpression	fatal_exit ( 0 )		70432	0					
ANR	70737	Callee	fatal_exit		70432	0					
ANR	70738	Identifier	fatal_exit		70432	0					
ANR	70739	ArgumentList	0		70432	1					
ANR	70740	Argument	0		70432	0					
ANR	70741	PrimaryExpression	0		70432	0					
ANR	70742	IfStatement	if ( attr & FA_MODE )		70432	3					
ANR	70743	Condition	attr & FA_MODE	289:6:6638:6651	70432	0	True				
ANR	70744	BitAndExpression	attr & FA_MODE		70432	0		&			
ANR	70745	Identifier	attr		70432	0					
ANR	70746	Identifier	FA_MODE		70432	1					
ANR	70747	CompoundStatement		50:4:1335:1335	70432	1					
ANR	70748	IfStatement	"if ( lchmod ( to , mode ) )"		70432	0					
ANR	70749	Condition	"lchmod ( to , mode )"	295:10:6866:6882	70432	0	True				
ANR	70750	CallExpression	"lchmod ( to , mode )"		70432	0					
ANR	70751	Callee	lchmod		70432	0					
ANR	70752	Identifier	lchmod		70432	0					
ANR	70753	ArgumentList	to		70432	1					
ANR	70754	Argument	to		70432	0					
ANR	70755	Identifier	to		70432	0					
ANR	70756	Argument	mode		70432	1					
ANR	70757	Identifier	mode		70432	0					
ANR	70758	ExpressionStatement	"pfatal ( ""Failed to set the permissions of %s %s"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( to ) )"	299:1:6957:7068	70432	1	True				
ANR	70759	CallExpression	"pfatal ( ""Failed to set the permissions of %s %s"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg ( to ) )"		70432	0					
ANR	70760	Callee	pfatal		70432	0					
ANR	70761	Identifier	pfatal		70432	0					
ANR	70762	ArgumentList	"""Failed to set the permissions of %s %s"""		70432	1					
ANR	70763	Argument	"""Failed to set the permissions of %s %s"""		70432	0					
ANR	70764	PrimaryExpression	"""Failed to set the permissions of %s %s"""		70432	0					
ANR	70765	Argument	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		70432	1					
ANR	70766	ConditionalExpression	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		70432	0					
ANR	70767	Condition	S_ISLNK ( mode )		70432	0					
ANR	70768	CallExpression	S_ISLNK ( mode )		70432	0					
ANR	70769	Callee	S_ISLNK		70432	0					
ANR	70770	Identifier	S_ISLNK		70432	0					
ANR	70771	ArgumentList	mode		70432	1					
ANR	70772	Argument	mode		70432	0					
ANR	70773	Identifier	mode		70432	0					
ANR	70774	PrimaryExpression	"""symbolic link"""		70432	1					
ANR	70775	PrimaryExpression	"""file"""		70432	2					
ANR	70776	Argument	quotearg ( to )		70432	2					
ANR	70777	CallExpression	quotearg ( to )		70432	0					
ANR	70778	Callee	quotearg		70432	0					
ANR	70779	Identifier	quotearg		70432	0					
ANR	70780	ArgumentList	to		70432	1					
ANR	70781	Argument	to		70432	0					
ANR	70782	Identifier	to		70432	0					
ANR	70783	ReturnType	void		70432	1					
ANR	70784	Identifier	set_file_attributes		70432	2					
ANR	70785	ParameterList	"char const * to , enum file_attributes attr , char const * from , const struct stat * st , mode_t mode , struct timespec * new_time"		70432	3					
ANR	70786	Parameter	char const * to	238:21:5184:5197	70432	0	True				
ANR	70787	ParameterType	char const *		70432	0					
ANR	70788	Identifier	to		70432	1					
ANR	70789	Parameter	enum file_attributes attr	238:37:5200:5224	70432	1	True				
ANR	70790	ParameterType	enum file_attributes		70432	0					
ANR	70791	Identifier	attr		70432	1					
ANR	70792	Parameter	char const * from	239:7:5234:5249	70432	2	True				
ANR	70793	ParameterType	char const *		70432	0					
ANR	70794	Identifier	from		70432	1					
ANR	70795	Parameter	const struct stat * st	239:25:5252:5272	70432	3	True				
ANR	70796	ParameterType	const struct stat *		70432	0					
ANR	70797	Identifier	st		70432	1					
ANR	70798	Parameter	mode_t mode	239:48:5275:5285	70432	4	True				
ANR	70799	ParameterType	mode_t		70432	0					
ANR	70800	Identifier	mode		70432	1					
ANR	70801	Parameter	struct timespec * new_time	240:7:5295:5319	70432	5	True				
ANR	70802	ParameterType	struct timespec *		70432	0					
ANR	70803	Identifier	new_time		70432	1					
ANR	70804	CFGEntryNode	ENTRY		70432		True				
ANR	70805	CFGExitNode	EXIT		70432		True				
ANR	70806	Symbol	safe_lutimens		70432						
ANR	70807	Symbol	quotearg		70432						
ANR	70808	Symbol	gid		70432						
ANR	70809	Symbol	st -> st_uid		70432						
ANR	70810	Symbol	* st		70432						
ANR	70811	Symbol	EPERM		70432						
ANR	70812	Symbol	FA_TIMES		70432						
ANR	70813	Symbol	ENOTSUP		70432						
ANR	70814	Symbol	ENOSYS		70432						
ANR	70815	Symbol	safe_lchown		70432						
ANR	70816	Symbol	copy_attr		70432						
ANR	70817	Symbol	mode		70432						
ANR	70818	Symbol	uid		70432						
ANR	70819	Symbol	times		70432						
ANR	70820	Symbol	egid		70432						
ANR	70821	Symbol	new_time		70432						
ANR	70822	Symbol	get_stat_atime		70432						
ANR	70823	Symbol	FA_XATTRS		70432						
ANR	70824	Symbol	FA_MODE		70432						
ANR	70825	Symbol	from		70432						
ANR	70826	Symbol	get_stat_mtime		70432						
ANR	70827	Symbol	attr		70432						
ANR	70828	Symbol	S_ISLNK		70432						
ANR	70829	Symbol	getegid		70432						
ANR	70830	Symbol	st		70432						
ANR	70831	Symbol	errno		70432						
ANR	70832	Symbol	* times		70432						
ANR	70833	Symbol	euid		70432						
ANR	70834	Symbol	FA_IDS		70432						
ANR	70835	Symbol	geteuid		70432						
ANR	70836	Symbol	* new_time		70432						
ANR	70837	Symbol	st -> st_gid		70432						
ANR	70838	Symbol	to		70432						
ANR	70839	Symbol	lchmod		70432						
ANR	70840	Function	create_backup_copy	305:0:7079:7359							
ANR	70841	FunctionDef	"create_backup_copy (char const * from , char const * to , const struct stat * st , bool to_dir_known_to_exist)"		70840	0					
ANR	70842	CompoundStatement		308:0:7202:7359	70840	0					
ANR	70843	ExpressionStatement	"copy_file ( from , to , NULL , 0 , st -> st_mode , to_dir_known_to_exist )"	309:2:7206:7271	70840	0	True				
ANR	70844	CallExpression	"copy_file ( from , to , NULL , 0 , st -> st_mode , to_dir_known_to_exist )"		70840	0					
ANR	70845	Callee	copy_file		70840	0					
ANR	70846	Identifier	copy_file		70840	0					
ANR	70847	ArgumentList	from		70840	1					
ANR	70848	Argument	from		70840	0					
ANR	70849	Identifier	from		70840	0					
ANR	70850	Argument	to		70840	1					
ANR	70851	Identifier	to		70840	0					
ANR	70852	Argument	NULL		70840	2					
ANR	70853	Identifier	NULL		70840	0					
ANR	70854	Argument	0		70840	3					
ANR	70855	PrimaryExpression	0		70840	0					
ANR	70856	Argument	st -> st_mode		70840	4					
ANR	70857	PtrMemberAccess	st -> st_mode		70840	0					
ANR	70858	Identifier	st		70840	0					
ANR	70859	Identifier	st_mode		70840	1					
ANR	70860	Argument	to_dir_known_to_exist		70840	5					
ANR	70861	Identifier	to_dir_known_to_exist		70840	0					
ANR	70862	ExpressionStatement	"set_file_attributes ( to , FA_TIMES | FA_IDS | FA_MODE , from , st , st -> st_mode , NULL )"	310:2:7275:7357	70840	1	True				
ANR	70863	CallExpression	"set_file_attributes ( to , FA_TIMES | FA_IDS | FA_MODE , from , st , st -> st_mode , NULL )"		70840	0					
ANR	70864	Callee	set_file_attributes		70840	0					
ANR	70865	Identifier	set_file_attributes		70840	0					
ANR	70866	ArgumentList	to		70840	1					
ANR	70867	Argument	to		70840	0					
ANR	70868	Identifier	to		70840	0					
ANR	70869	Argument	FA_TIMES | FA_IDS | FA_MODE		70840	1					
ANR	70870	InclusiveOrExpression	FA_TIMES | FA_IDS | FA_MODE		70840	0		|			
ANR	70871	Identifier	FA_TIMES		70840	0					
ANR	70872	InclusiveOrExpression	FA_IDS | FA_MODE		70840	1		|			
ANR	70873	Identifier	FA_IDS		70840	0					
ANR	70874	Identifier	FA_MODE		70840	1					
ANR	70875	Argument	from		70840	2					
ANR	70876	Identifier	from		70840	0					
ANR	70877	Argument	st		70840	3					
ANR	70878	Identifier	st		70840	0					
ANR	70879	Argument	st -> st_mode		70840	4					
ANR	70880	PtrMemberAccess	st -> st_mode		70840	0					
ANR	70881	Identifier	st		70840	0					
ANR	70882	Identifier	st_mode		70840	1					
ANR	70883	Argument	NULL		70840	5					
ANR	70884	Identifier	NULL		70840	0					
ANR	70885	ReturnType	static void		70840	1					
ANR	70886	Identifier	create_backup_copy		70840	2					
ANR	70887	ParameterList	"char const * from , char const * to , const struct stat * st , bool to_dir_known_to_exist"		70840	3					
ANR	70888	Parameter	char const * from	306:20:7111:7126	70840	0	True				
ANR	70889	ParameterType	char const *		70840	0					
ANR	70890	Identifier	from		70840	1					
ANR	70891	Parameter	char const * to	306:38:7129:7142	70840	1	True				
ANR	70892	ParameterType	char const *		70840	0					
ANR	70893	Identifier	to		70840	1					
ANR	70894	Parameter	const struct stat * st	306:54:7145:7165	70840	2	True				
ANR	70895	ParameterType	const struct stat *		70840	0					
ANR	70896	Identifier	st		70840	1					
ANR	70897	Parameter	bool to_dir_known_to_exist	307:6:7174:7199	70840	3	True				
ANR	70898	ParameterType	bool		70840	0					
ANR	70899	Identifier	to_dir_known_to_exist		70840	1					
ANR	70900	CFGEntryNode	ENTRY		70840		True				
ANR	70901	CFGExitNode	EXIT		70840		True				
ANR	70902	Symbol	st		70840						
ANR	70903	Symbol	NULL		70840						
ANR	70904	Symbol	* st		70840						
ANR	70905	Symbol	FA_IDS		70840						
ANR	70906	Symbol	FA_TIMES		70840						
ANR	70907	Symbol	FA_MODE		70840						
ANR	70908	Symbol	from		70840						
ANR	70909	Symbol	to		70840						
ANR	70910	Symbol	to_dir_known_to_exist		70840						
ANR	70911	Symbol	st -> st_mode		70840						
ANR	70912	Function	create_backup	313:0:7362:10769							
ANR	70913	FunctionDef	"create_backup (char const * to , const struct stat * to_st , bool leave_original)"		70912	0					
ANR	70914	CompoundStatement		315:0:7445:10769	70912	0					
ANR	70915	IfStatement	if ( to_st && ! ( S_ISREG ( to_st -> st_mode ) || S_ISLNK ( to_st -> st_mode ) ) )		70912	0					
ANR	70916	Condition	to_st && ! ( S_ISREG ( to_st -> st_mode ) || S_ISLNK ( to_st -> st_mode ) )	329:6:8102:8166	70912	0	True				
ANR	70917	AndExpression	to_st && ! ( S_ISREG ( to_st -> st_mode ) || S_ISLNK ( to_st -> st_mode ) )		70912	0		&&			
ANR	70918	Identifier	to_st		70912	0					
ANR	70919	UnaryOperationExpression	! ( S_ISREG ( to_st -> st_mode ) || S_ISLNK ( to_st -> st_mode ) )		70912	1					
ANR	70920	UnaryOperator	!		70912	0					
ANR	70921	OrExpression	S_ISREG ( to_st -> st_mode ) || S_ISLNK ( to_st -> st_mode )		70912	1		||			
ANR	70922	CallExpression	S_ISREG ( to_st -> st_mode )		70912	0					
ANR	70923	Callee	S_ISREG		70912	0					
ANR	70924	Identifier	S_ISREG		70912	0					
ANR	70925	ArgumentList	to_st -> st_mode		70912	1					
ANR	70926	Argument	to_st -> st_mode		70912	0					
ANR	70927	PtrMemberAccess	to_st -> st_mode		70912	0					
ANR	70928	Identifier	to_st		70912	0					
ANR	70929	Identifier	st_mode		70912	1					
ANR	70930	CallExpression	S_ISLNK ( to_st -> st_mode )		70912	1					
ANR	70931	Callee	S_ISLNK		70912	0					
ANR	70932	Identifier	S_ISLNK		70912	0					
ANR	70933	ArgumentList	to_st -> st_mode		70912	1					
ANR	70934	Argument	to_st -> st_mode		70912	0					
ANR	70935	PtrMemberAccess	to_st -> st_mode		70912	0					
ANR	70936	Identifier	to_st		70912	0					
ANR	70937	Identifier	st_mode		70912	1					
ANR	70938	ExpressionStatement	"fatal ( ""File %s is not a %s -- refusing to create backup"" , to , S_ISLNK ( to_st -> st_mode ) ? ""symbolic link"" : ""regular file"" )"	330:4:8173:8300	70912	1	True				
ANR	70939	CallExpression	"fatal ( ""File %s is not a %s -- refusing to create backup"" , to , S_ISLNK ( to_st -> st_mode ) ? ""symbolic link"" : ""regular file"" )"		70912	0					
ANR	70940	Callee	fatal		70912	0					
ANR	70941	Identifier	fatal		70912	0					
ANR	70942	ArgumentList	"""File %s is not a %s -- refusing to create backup"""		70912	1					
ANR	70943	Argument	"""File %s is not a %s -- refusing to create backup"""		70912	0					
ANR	70944	PrimaryExpression	"""File %s is not a %s -- refusing to create backup"""		70912	0					
ANR	70945	Argument	to		70912	1					
ANR	70946	Identifier	to		70912	0					
ANR	70947	Argument	"S_ISLNK ( to_st -> st_mode ) ? ""symbolic link"" : ""regular file"""		70912	2					
ANR	70948	ConditionalExpression	"S_ISLNK ( to_st -> st_mode ) ? ""symbolic link"" : ""regular file"""		70912	0					
ANR	70949	Condition	S_ISLNK ( to_st -> st_mode )		70912	0					
ANR	70950	CallExpression	S_ISLNK ( to_st -> st_mode )		70912	0					
ANR	70951	Callee	S_ISLNK		70912	0					
ANR	70952	Identifier	S_ISLNK		70912	0					
ANR	70953	ArgumentList	to_st -> st_mode		70912	1					
ANR	70954	Argument	to_st -> st_mode		70912	0					
ANR	70955	PtrMemberAccess	to_st -> st_mode		70912	0					
ANR	70956	Identifier	to_st		70912	0					
ANR	70957	Identifier	st_mode		70912	1					
ANR	70958	PrimaryExpression	"""symbolic link"""		70912	1					
ANR	70959	PrimaryExpression	"""regular file"""		70912	2					
ANR	70960	IfStatement	if ( to_st && lookup_file_id ( to_st ) == CREATED )		70912	1					
ANR	70961	Condition	to_st && lookup_file_id ( to_st ) == CREATED	333:6:8309:8350	70912	0	True				
ANR	70962	AndExpression	to_st && lookup_file_id ( to_st ) == CREATED		70912	0		&&			
ANR	70963	Identifier	to_st		70912	0					
ANR	70964	EqualityExpression	lookup_file_id ( to_st ) == CREATED		70912	1		==			
ANR	70965	CallExpression	lookup_file_id ( to_st )		70912	0					
ANR	70966	Callee	lookup_file_id		70912	0					
ANR	70967	Identifier	lookup_file_id		70912	0					
ANR	70968	ArgumentList	to_st		70912	1					
ANR	70969	Argument	to_st		70912	0					
ANR	70970	Identifier	to_st		70912	0					
ANR	70971	Identifier	CREATED		70912	1					
ANR	70972	CompoundStatement		20:4:911:911	70912	1					
ANR	70973	IfStatement	if ( debug & 4 )		70912	0					
ANR	70974	Condition	debug & 4	335:10:8369:8377	70912	0	True				
ANR	70975	BitAndExpression	debug & 4		70912	0		&			
ANR	70976	Identifier	debug		70912	0					
ANR	70977	PrimaryExpression	4		70912	1					
ANR	70978	ExpressionStatement	"say ( ""File %s already seen\\n"" , quotearg ( to ) )"	336:1:8381:8426	70912	1	True				
ANR	70979	CallExpression	"say ( ""File %s already seen\\n"" , quotearg ( to ) )"		70912	0					
ANR	70980	Callee	say		70912	0					
ANR	70981	Identifier	say		70912	0					
ANR	70982	ArgumentList	"""File %s already seen\\n"""		70912	1					
ANR	70983	Argument	"""File %s already seen\\n"""		70912	0					
ANR	70984	PrimaryExpression	"""File %s already seen\\n"""		70912	0					
ANR	70985	Argument	quotearg ( to )		70912	1					
ANR	70986	CallExpression	quotearg ( to )		70912	0					
ANR	70987	Callee	quotearg		70912	0					
ANR	70988	Identifier	quotearg		70912	0					
ANR	70989	ArgumentList	to		70912	1					
ANR	70990	Argument	to		70912	0					
ANR	70991	Identifier	to		70912	0					
ANR	70992	ElseStatement	else		70912	0					
ANR	70993	CompoundStatement		27:6:1041:1054	70912	0					
ANR	70994	IdentifierDeclStatement	int try_makedirs_errno = 0 ;	340:6:8453:8479	70912	0	True				
ANR	70995	IdentifierDecl	try_makedirs_errno = 0		70912	0					
ANR	70996	IdentifierDeclType	int		70912	0					
ANR	70997	Identifier	try_makedirs_errno		70912	1					
ANR	70998	AssignmentExpression	try_makedirs_errno = 0		70912	2		=			
ANR	70999	Identifier	try_makedirs_errno		70912	0					
ANR	71000	PrimaryExpression	0		70912	1					
ANR	71001	IdentifierDeclStatement	char * bakname ;	341:6:8487:8500	70912	1	True				
ANR	71002	IdentifierDecl	* bakname		70912	0					
ANR	71003	IdentifierDeclType	char *		70912	0					
ANR	71004	Identifier	bakname		70912	1					
ANR	71005	IfStatement	if ( origprae || origbase || origsuff )		70912	2					
ANR	71006	Condition	origprae || origbase || origsuff	343:10:8513:8544	70912	0	True				
ANR	71007	OrExpression	origprae || origbase || origsuff		70912	0		||			
ANR	71008	Identifier	origprae		70912	0					
ANR	71009	OrExpression	origbase || origsuff		70912	1		||			
ANR	71010	Identifier	origbase		70912	0					
ANR	71011	Identifier	origsuff		70912	1					
ANR	71012	CompoundStatement		40:3:1399:1410	70912	1					
ANR	71013	IdentifierDeclStatement	"char const * p = origprae ? origprae : """" ;"	345:3:8553:8593	70912	0	True				
ANR	71014	IdentifierDecl	"* p = origprae ? origprae : """""		70912	0					
ANR	71015	IdentifierDeclType	char const *		70912	0					
ANR	71016	Identifier	p		70912	1					
ANR	71017	AssignmentExpression	"* p = origprae ? origprae : """""		70912	2		=			
ANR	71018	Identifier	p		70912	0					
ANR	71019	ConditionalExpression	"origprae ? origprae : """""		70912	1					
ANR	71020	Condition	origprae		70912	0					
ANR	71021	Identifier	origprae		70912	0					
ANR	71022	Identifier	origprae		70912	1					
ANR	71023	PrimaryExpression	""""""		70912	2					
ANR	71024	IdentifierDeclStatement	"char const * b = origbase ? origbase : """" ;"	346:3:8598:8638	70912	1	True				
ANR	71025	IdentifierDecl	"* b = origbase ? origbase : """""		70912	0					
ANR	71026	IdentifierDeclType	char const *		70912	0					
ANR	71027	Identifier	b		70912	1					
ANR	71028	AssignmentExpression	"* b = origbase ? origbase : """""		70912	2		=			
ANR	71029	Identifier	b		70912	0					
ANR	71030	ConditionalExpression	"origbase ? origbase : """""		70912	1					
ANR	71031	Condition	origbase		70912	0					
ANR	71032	Identifier	origbase		70912	0					
ANR	71033	Identifier	origbase		70912	1					
ANR	71034	PrimaryExpression	""""""		70912	2					
ANR	71035	IdentifierDeclStatement	"char const * s = origsuff ? origsuff : """" ;"	347:3:8643:8683	70912	2	True				
ANR	71036	IdentifierDecl	"* s = origsuff ? origsuff : """""		70912	0					
ANR	71037	IdentifierDeclType	char const *		70912	0					
ANR	71038	Identifier	s		70912	1					
ANR	71039	AssignmentExpression	"* s = origsuff ? origsuff : """""		70912	2		=			
ANR	71040	Identifier	s		70912	0					
ANR	71041	ConditionalExpression	"origsuff ? origsuff : """""		70912	1					
ANR	71042	Condition	origsuff		70912	0					
ANR	71043	Identifier	origsuff		70912	0					
ANR	71044	Identifier	origsuff		70912	1					
ANR	71045	PrimaryExpression	""""""		70912	2					
ANR	71046	IdentifierDeclStatement	char const * t = to ;	348:3:8688:8706	70912	3	True				
ANR	71047	IdentifierDecl	* t = to		70912	0					
ANR	71048	IdentifierDeclType	char const *		70912	0					
ANR	71049	Identifier	t		70912	1					
ANR	71050	AssignmentExpression	* t = to		70912	2		=			
ANR	71051	Identifier	to		70912	0					
ANR	71052	Identifier	to		70912	1					
ANR	71053	IdentifierDeclStatement	size_t plen = strlen ( p ) ;	349:3:8711:8735	70912	4	True				
ANR	71054	IdentifierDecl	plen = strlen ( p )		70912	0					
ANR	71055	IdentifierDeclType	size_t		70912	0					
ANR	71056	Identifier	plen		70912	1					
ANR	71057	AssignmentExpression	plen = strlen ( p )		70912	2		=			
ANR	71058	Identifier	plen		70912	0					
ANR	71059	CallExpression	strlen ( p )		70912	1					
ANR	71060	Callee	strlen		70912	0					
ANR	71061	Identifier	strlen		70912	0					
ANR	71062	ArgumentList	p		70912	1					
ANR	71063	Argument	p		70912	0					
ANR	71064	Identifier	p		70912	0					
ANR	71065	IdentifierDeclStatement	size_t blen = strlen ( b ) ;	350:3:8740:8764	70912	5	True				
ANR	71066	IdentifierDecl	blen = strlen ( b )		70912	0					
ANR	71067	IdentifierDeclType	size_t		70912	0					
ANR	71068	Identifier	blen		70912	1					
ANR	71069	AssignmentExpression	blen = strlen ( b )		70912	2		=			
ANR	71070	Identifier	blen		70912	0					
ANR	71071	CallExpression	strlen ( b )		70912	1					
ANR	71072	Callee	strlen		70912	0					
ANR	71073	Identifier	strlen		70912	0					
ANR	71074	ArgumentList	b		70912	1					
ANR	71075	Argument	b		70912	0					
ANR	71076	Identifier	b		70912	0					
ANR	71077	IdentifierDeclStatement	size_t slen = strlen ( s ) ;	351:3:8769:8793	70912	6	True				
ANR	71078	IdentifierDecl	slen = strlen ( s )		70912	0					
ANR	71079	IdentifierDeclType	size_t		70912	0					
ANR	71080	Identifier	slen		70912	1					
ANR	71081	AssignmentExpression	slen = strlen ( s )		70912	2		=			
ANR	71082	Identifier	slen		70912	0					
ANR	71083	CallExpression	strlen ( s )		70912	1					
ANR	71084	Callee	strlen		70912	0					
ANR	71085	Identifier	strlen		70912	0					
ANR	71086	ArgumentList	s		70912	1					
ANR	71087	Argument	s		70912	0					
ANR	71088	Identifier	s		70912	0					
ANR	71089	IdentifierDeclStatement	size_t tlen = strlen ( t ) ;	352:3:8798:8822	70912	7	True				
ANR	71090	IdentifierDecl	tlen = strlen ( t )		70912	0					
ANR	71091	IdentifierDeclType	size_t		70912	0					
ANR	71092	Identifier	tlen		70912	1					
ANR	71093	AssignmentExpression	tlen = strlen ( t )		70912	2		=			
ANR	71094	Identifier	tlen		70912	0					
ANR	71095	CallExpression	strlen ( t )		70912	1					
ANR	71096	Callee	strlen		70912	0					
ANR	71097	Identifier	strlen		70912	0					
ANR	71098	ArgumentList	t		70912	1					
ANR	71099	Argument	t		70912	0					
ANR	71100	Identifier	t		70912	0					
ANR	71101	IdentifierDeclStatement	char const * o ;	353:3:8827:8840	70912	8	True				
ANR	71102	IdentifierDecl	* o		70912	0					
ANR	71103	IdentifierDeclType	char const *		70912	0					
ANR	71104	Identifier	o		70912	1					
ANR	71105	IdentifierDeclStatement	size_t olen ;	354:3:8845:8856	70912	9	True				
ANR	71106	IdentifierDecl	olen		70912	0					
ANR	71107	IdentifierDeclType	size_t		70912	0					
ANR	71108	Identifier	olen		70912	1					
ANR	71109	ForStatement	"for ( o = t + tlen , olen = 0 ; o > t && ! ISSLASH ( * ( o - 1 ) ) ; o -- )"		70912	10					
ANR	71110	ForInit	"o = t + tlen , olen = 0 ;"	356:8:8867:8889	70912	0	True				
ANR	71111	Expression	"o = t + tlen , olen = 0"		70912	0					
ANR	71112	AssignmentExpression	o = t + tlen		70912	0		=			
ANR	71113	Identifier	o		70912	0					
ANR	71114	AdditiveExpression	t + tlen		70912	1		+			
ANR	71115	Identifier	t		70912	0					
ANR	71116	Identifier	tlen		70912	1					
ANR	71117	AssignmentExpression	olen = 0		70912	1		=			
ANR	71118	Identifier	olen		70912	0					
ANR	71119	PrimaryExpression	0		70912	1					
ANR	71120	Condition	o > t && ! ISSLASH ( * ( o - 1 ) )	357:8:8899:8927	70912	1	True				
ANR	71121	AndExpression	o > t && ! ISSLASH ( * ( o - 1 ) )		70912	0		&&			
ANR	71122	RelationalExpression	o > t		70912	0		>			
ANR	71123	Identifier	o		70912	0					
ANR	71124	Identifier	t		70912	1					
ANR	71125	UnaryOperationExpression	! ISSLASH ( * ( o - 1 ) )		70912	1					
ANR	71126	UnaryOperator	!		70912	0					
ANR	71127	CallExpression	ISSLASH ( * ( o - 1 ) )		70912	1					
ANR	71128	Callee	ISSLASH		70912	0					
ANR	71129	Identifier	ISSLASH		70912	0					
ANR	71130	ArgumentList	* ( o - 1 )		70912	1					
ANR	71131	Argument	* ( o - 1 )		70912	0					
ANR	71132	UnaryOperationExpression	* ( o - 1 )		70912	0					
ANR	71133	UnaryOperator	*		70912	0					
ANR	71134	AdditiveExpression	o - 1		70912	1		-			
ANR	71135	Identifier	o		70912	0					
ANR	71136	PrimaryExpression	1		70912	1					
ANR	71137	PostIncDecOperationExpression	o --	358:8:8938:8940	70912	2	True				
ANR	71138	Identifier	o		70912	0					
ANR	71139	IncDec	--		70912	1					
ANR	71140	ExpressionStatement		359:22:8965:8965	70912	3	True				
ANR	71141	ExpressionStatement	olen = t + tlen - o	360:3:8970:8989	70912	11	True				
ANR	71142	AssignmentExpression	olen = t + tlen - o		70912	0		=			
ANR	71143	Identifier	olen		70912	0					
ANR	71144	AdditiveExpression	t + tlen - o		70912	1		+			
ANR	71145	Identifier	t		70912	0					
ANR	71146	AdditiveExpression	tlen - o		70912	1		-			
ANR	71147	Identifier	tlen		70912	0					
ANR	71148	Identifier	o		70912	1					
ANR	71149	ExpressionStatement	tlen -= olen	361:3:8994:9006	70912	12	True				
ANR	71150	AssignmentExpression	tlen -= olen		70912	0		-=			
ANR	71151	Identifier	tlen		70912	0					
ANR	71152	Identifier	olen		70912	1					
ANR	71153	ExpressionStatement	bakname = xmalloc ( plen + tlen + blen + olen + slen + 1 )	362:3:9011:9067	70912	13	True				
ANR	71154	AssignmentExpression	bakname = xmalloc ( plen + tlen + blen + olen + slen + 1 )		70912	0		=			
ANR	71155	Identifier	bakname		70912	0					
ANR	71156	CallExpression	xmalloc ( plen + tlen + blen + olen + slen + 1 )		70912	1					
ANR	71157	Callee	xmalloc		70912	0					
ANR	71158	Identifier	xmalloc		70912	0					
ANR	71159	ArgumentList	plen + tlen + blen + olen + slen + 1		70912	1					
ANR	71160	Argument	plen + tlen + blen + olen + slen + 1		70912	0					
ANR	71161	AdditiveExpression	plen + tlen + blen + olen + slen + 1		70912	0		+			
ANR	71162	Identifier	plen		70912	0					
ANR	71163	AdditiveExpression	tlen + blen + olen + slen + 1		70912	1		+			
ANR	71164	Identifier	tlen		70912	0					
ANR	71165	AdditiveExpression	blen + olen + slen + 1		70912	1		+			
ANR	71166	Identifier	blen		70912	0					
ANR	71167	AdditiveExpression	olen + slen + 1		70912	1		+			
ANR	71168	Identifier	olen		70912	0					
ANR	71169	AdditiveExpression	slen + 1		70912	1		+			
ANR	71170	Identifier	slen		70912	0					
ANR	71171	PrimaryExpression	1		70912	1					
ANR	71172	ExpressionStatement	"memcpy ( bakname , p , plen )"	363:3:9072:9097	70912	14	True				
ANR	71173	CallExpression	"memcpy ( bakname , p , plen )"		70912	0					
ANR	71174	Callee	memcpy		70912	0					
ANR	71175	Identifier	memcpy		70912	0					
ANR	71176	ArgumentList	bakname		70912	1					
ANR	71177	Argument	bakname		70912	0					
ANR	71178	Identifier	bakname		70912	0					
ANR	71179	Argument	p		70912	1					
ANR	71180	Identifier	p		70912	0					
ANR	71181	Argument	plen		70912	2					
ANR	71182	Identifier	plen		70912	0					
ANR	71183	ExpressionStatement	"memcpy ( bakname + plen , t , tlen )"	364:3:9102:9134	70912	15	True				
ANR	71184	CallExpression	"memcpy ( bakname + plen , t , tlen )"		70912	0					
ANR	71185	Callee	memcpy		70912	0					
ANR	71186	Identifier	memcpy		70912	0					
ANR	71187	ArgumentList	bakname + plen		70912	1					
ANR	71188	Argument	bakname + plen		70912	0					
ANR	71189	AdditiveExpression	bakname + plen		70912	0		+			
ANR	71190	Identifier	bakname		70912	0					
ANR	71191	Identifier	plen		70912	1					
ANR	71192	Argument	t		70912	1					
ANR	71193	Identifier	t		70912	0					
ANR	71194	Argument	tlen		70912	2					
ANR	71195	Identifier	tlen		70912	0					
ANR	71196	ExpressionStatement	"memcpy ( bakname + plen + tlen , b , blen )"	365:3:9139:9178	70912	16	True				
ANR	71197	CallExpression	"memcpy ( bakname + plen + tlen , b , blen )"		70912	0					
ANR	71198	Callee	memcpy		70912	0					
ANR	71199	Identifier	memcpy		70912	0					
ANR	71200	ArgumentList	bakname + plen + tlen		70912	1					
ANR	71201	Argument	bakname + plen + tlen		70912	0					
ANR	71202	AdditiveExpression	bakname + plen + tlen		70912	0		+			
ANR	71203	Identifier	bakname		70912	0					
ANR	71204	AdditiveExpression	plen + tlen		70912	1		+			
ANR	71205	Identifier	plen		70912	0					
ANR	71206	Identifier	tlen		70912	1					
ANR	71207	Argument	b		70912	1					
ANR	71208	Identifier	b		70912	0					
ANR	71209	Argument	blen		70912	2					
ANR	71210	Identifier	blen		70912	0					
ANR	71211	ExpressionStatement	"memcpy ( bakname + plen + tlen + blen , o , olen )"	366:3:9183:9229	70912	17	True				
ANR	71212	CallExpression	"memcpy ( bakname + plen + tlen + blen , o , olen )"		70912	0					
ANR	71213	Callee	memcpy		70912	0					
ANR	71214	Identifier	memcpy		70912	0					
ANR	71215	ArgumentList	bakname + plen + tlen + blen		70912	1					
ANR	71216	Argument	bakname + plen + tlen + blen		70912	0					
ANR	71217	AdditiveExpression	bakname + plen + tlen + blen		70912	0		+			
ANR	71218	Identifier	bakname		70912	0					
ANR	71219	AdditiveExpression	plen + tlen + blen		70912	1		+			
ANR	71220	Identifier	plen		70912	0					
ANR	71221	AdditiveExpression	tlen + blen		70912	1		+			
ANR	71222	Identifier	tlen		70912	0					
ANR	71223	Identifier	blen		70912	1					
ANR	71224	Argument	o		70912	1					
ANR	71225	Identifier	o		70912	0					
ANR	71226	Argument	olen		70912	2					
ANR	71227	Identifier	olen		70912	0					
ANR	71228	ExpressionStatement	"memcpy ( bakname + plen + tlen + blen + olen , s , slen + 1 )"	367:3:9234:9291	70912	18	True				
ANR	71229	CallExpression	"memcpy ( bakname + plen + tlen + blen + olen , s , slen + 1 )"		70912	0					
ANR	71230	Callee	memcpy		70912	0					
ANR	71231	Identifier	memcpy		70912	0					
ANR	71232	ArgumentList	bakname + plen + tlen + blen + olen		70912	1					
ANR	71233	Argument	bakname + plen + tlen + blen + olen		70912	0					
ANR	71234	AdditiveExpression	bakname + plen + tlen + blen + olen		70912	0		+			
ANR	71235	Identifier	bakname		70912	0					
ANR	71236	AdditiveExpression	plen + tlen + blen + olen		70912	1		+			
ANR	71237	Identifier	plen		70912	0					
ANR	71238	AdditiveExpression	tlen + blen + olen		70912	1		+			
ANR	71239	Identifier	tlen		70912	0					
ANR	71240	AdditiveExpression	blen + olen		70912	1		+			
ANR	71241	Identifier	blen		70912	0					
ANR	71242	Identifier	olen		70912	1					
ANR	71243	Argument	s		70912	1					
ANR	71244	Identifier	s		70912	0					
ANR	71245	Argument	slen + 1		70912	2					
ANR	71246	AdditiveExpression	slen + 1		70912	0		+			
ANR	71247	Identifier	slen		70912	0					
ANR	71248	PrimaryExpression	1		70912	1					
ANR	71249	IfStatement	if ( ( origprae && ( contains_slash ( origprae + FILE_SYSTEM_PREFIX_LEN ( origprae ) ) || contains_slash ( to ) ) ) || ( origbase && contains_slash ( origbase ) ) )		70912	19					
ANR	71250	Condition	( origprae && ( contains_slash ( origprae + FILE_SYSTEM_PREFIX_LEN ( origprae ) ) || contains_slash ( to ) ) ) || ( origbase && contains_slash ( origbase ) )	369:7:9301:9463	70912	0	True				
ANR	71251	OrExpression	( origprae && ( contains_slash ( origprae + FILE_SYSTEM_PREFIX_LEN ( origprae ) ) || contains_slash ( to ) ) ) || ( origbase && contains_slash ( origbase ) )		70912	0		||			
ANR	71252	AndExpression	origprae && ( contains_slash ( origprae + FILE_SYSTEM_PREFIX_LEN ( origprae ) ) || contains_slash ( to ) )		70912	0		&&			
ANR	71253	Identifier	origprae		70912	0					
ANR	71254	OrExpression	contains_slash ( origprae + FILE_SYSTEM_PREFIX_LEN ( origprae ) ) || contains_slash ( to )		70912	1		||			
ANR	71255	CallExpression	contains_slash ( origprae + FILE_SYSTEM_PREFIX_LEN ( origprae ) )		70912	0					
ANR	71256	Callee	contains_slash		70912	0					
ANR	71257	Identifier	contains_slash		70912	0					
ANR	71258	ArgumentList	origprae + FILE_SYSTEM_PREFIX_LEN ( origprae )		70912	1					
ANR	71259	Argument	origprae + FILE_SYSTEM_PREFIX_LEN ( origprae )		70912	0					
ANR	71260	AdditiveExpression	origprae + FILE_SYSTEM_PREFIX_LEN ( origprae )		70912	0		+			
ANR	71261	Identifier	origprae		70912	0					
ANR	71262	CallExpression	FILE_SYSTEM_PREFIX_LEN ( origprae )		70912	1					
ANR	71263	Callee	FILE_SYSTEM_PREFIX_LEN		70912	0					
ANR	71264	Identifier	FILE_SYSTEM_PREFIX_LEN		70912	0					
ANR	71265	ArgumentList	origprae		70912	1					
ANR	71266	Argument	origprae		70912	0					
ANR	71267	Identifier	origprae		70912	0					
ANR	71268	CallExpression	contains_slash ( to )		70912	1					
ANR	71269	Callee	contains_slash		70912	0					
ANR	71270	Identifier	contains_slash		70912	0					
ANR	71271	ArgumentList	to		70912	1					
ANR	71272	Argument	to		70912	0					
ANR	71273	Identifier	to		70912	0					
ANR	71274	AndExpression	origbase && contains_slash ( origbase )		70912	1		&&			
ANR	71275	Identifier	origbase		70912	0					
ANR	71276	CallExpression	contains_slash ( origbase )		70912	1					
ANR	71277	Callee	contains_slash		70912	0					
ANR	71278	Identifier	contains_slash		70912	0					
ANR	71279	ArgumentList	origbase		70912	1					
ANR	71280	Argument	origbase		70912	0					
ANR	71281	Identifier	origbase		70912	0					
ANR	71282	ExpressionStatement	try_makedirs_errno = ENOENT	373:5:9471:9498	70912	1	True				
ANR	71283	AssignmentExpression	try_makedirs_errno = ENOENT		70912	0		=			
ANR	71284	Identifier	try_makedirs_errno		70912	0					
ANR	71285	Identifier	ENOENT		70912	1					
ANR	71286	ElseStatement	else		70912	0					
ANR	71287	CompoundStatement		62:1:2069:2069	70912	0					
ANR	71288	ExpressionStatement	"bakname = find_backup_file_name ( to , backup_type )"	377:3:9520:9569	70912	0	True				
ANR	71289	AssignmentExpression	"bakname = find_backup_file_name ( to , backup_type )"		70912	0		=			
ANR	71290	Identifier	bakname		70912	0					
ANR	71291	CallExpression	"find_backup_file_name ( to , backup_type )"		70912	1					
ANR	71292	Callee	find_backup_file_name		70912	0					
ANR	71293	Identifier	find_backup_file_name		70912	0					
ANR	71294	ArgumentList	to		70912	1					
ANR	71295	Argument	to		70912	0					
ANR	71296	Identifier	to		70912	0					
ANR	71297	Argument	backup_type		70912	1					
ANR	71298	Identifier	backup_type		70912	0					
ANR	71299	IfStatement	if ( ! bakname )		70912	1					
ANR	71300	Condition	! bakname	378:7:9578:9585	70912	0	True				
ANR	71301	UnaryOperationExpression	! bakname		70912	0					
ANR	71302	UnaryOperator	!		70912	0					
ANR	71303	Identifier	bakname		70912	1					
ANR	71304	ExpressionStatement	xalloc_die ( )	379:5:9593:9606	70912	1	True				
ANR	71305	CallExpression	xalloc_die ( )		70912	0					
ANR	71306	Callee	xalloc_die		70912	0					
ANR	71307	Identifier	xalloc_die		70912	0					
ANR	71308	ArgumentList			70912	1					
ANR	71309	IfStatement	if ( ! to_st )		70912	3					
ANR	71310	Condition	! to_st	382:10:9622:9628	70912	0	True				
ANR	71311	UnaryOperationExpression	! to_st		70912	0					
ANR	71312	UnaryOperator	!		70912	0					
ANR	71313	Identifier	to_st		70912	1					
ANR	71314	CompoundStatement		70:3:2191:2197	70912	1					
ANR	71315	IdentifierDeclStatement	int fd ;	384:3:9637:9643	70912	0	True				
ANR	71316	IdentifierDecl	fd		70912	0					
ANR	71317	IdentifierDeclType	int		70912	0					
ANR	71318	Identifier	fd		70912	1					
ANR	71319	IfStatement	if ( debug & 4 )		70912	1					
ANR	71320	Condition	debug & 4	386:7:9653:9661	70912	0	True				
ANR	71321	BitAndExpression	debug & 4		70912	0		&			
ANR	71322	Identifier	debug		70912	0					
ANR	71323	PrimaryExpression	4		70912	1					
ANR	71324	ExpressionStatement	"say ( ""Creating empty file %s\\n"" , quotearg ( bakname ) )"	387:5:9669:9721	70912	1	True				
ANR	71325	CallExpression	"say ( ""Creating empty file %s\\n"" , quotearg ( bakname ) )"		70912	0					
ANR	71326	Callee	say		70912	0					
ANR	71327	Identifier	say		70912	0					
ANR	71328	ArgumentList	"""Creating empty file %s\\n"""		70912	1					
ANR	71329	Argument	"""Creating empty file %s\\n"""		70912	0					
ANR	71330	PrimaryExpression	"""Creating empty file %s\\n"""		70912	0					
ANR	71331	Argument	quotearg ( bakname )		70912	1					
ANR	71332	CallExpression	quotearg ( bakname )		70912	0					
ANR	71333	Callee	quotearg		70912	0					
ANR	71334	Identifier	quotearg		70912	0					
ANR	71335	ArgumentList	bakname		70912	1					
ANR	71336	Argument	bakname		70912	0					
ANR	71337	Identifier	bakname		70912	0					
ANR	71338	ExpressionStatement	try_makedirs_errno = ENOENT	389:3:9727:9754	70912	2	True				
ANR	71339	AssignmentExpression	try_makedirs_errno = ENOENT		70912	0		=			
ANR	71340	Identifier	try_makedirs_errno		70912	0					
ANR	71341	Identifier	ENOENT		70912	1					
ANR	71342	ExpressionStatement	safe_unlink ( bakname )	390:3:9759:9780	70912	3	True				
ANR	71343	CallExpression	safe_unlink ( bakname )		70912	0					
ANR	71344	Callee	safe_unlink		70912	0					
ANR	71345	Identifier	safe_unlink		70912	0					
ANR	71346	ArgumentList	bakname		70912	1					
ANR	71347	Argument	bakname		70912	0					
ANR	71348	Identifier	bakname		70912	0					
ANR	71349	WhileStatement	"while ( ( fd = safe_open ( bakname , O_CREAT | O_WRONLY | O_TRUNC , 0666 ) ) < 0 )"		70912	4					
ANR	71350	Condition	"( fd = safe_open ( bakname , O_CREAT | O_WRONLY | O_TRUNC , 0666 ) ) < 0"	391:10:9792:9857	70912	0	True				
ANR	71351	RelationalExpression	"( fd = safe_open ( bakname , O_CREAT | O_WRONLY | O_TRUNC , 0666 ) ) < 0"		70912	0		<			
ANR	71352	AssignmentExpression	"fd = safe_open ( bakname , O_CREAT | O_WRONLY | O_TRUNC , 0666 )"		70912	0		=			
ANR	71353	Identifier	fd		70912	0					
ANR	71354	CallExpression	"safe_open ( bakname , O_CREAT | O_WRONLY | O_TRUNC , 0666 )"		70912	1					
ANR	71355	Callee	safe_open		70912	0					
ANR	71356	Identifier	safe_open		70912	0					
ANR	71357	ArgumentList	bakname		70912	1					
ANR	71358	Argument	bakname		70912	0					
ANR	71359	Identifier	bakname		70912	0					
ANR	71360	Argument	O_CREAT | O_WRONLY | O_TRUNC		70912	1					
ANR	71361	InclusiveOrExpression	O_CREAT | O_WRONLY | O_TRUNC		70912	0		|			
ANR	71362	Identifier	O_CREAT		70912	0					
ANR	71363	InclusiveOrExpression	O_WRONLY | O_TRUNC		70912	1		|			
ANR	71364	Identifier	O_WRONLY		70912	0					
ANR	71365	Identifier	O_TRUNC		70912	1					
ANR	71366	Argument	0666		70912	2					
ANR	71367	PrimaryExpression	0666		70912	0					
ANR	71368	PrimaryExpression	0		70912	1					
ANR	71369	CompoundStatement		78:5:2419:2419	70912	1					
ANR	71370	IfStatement	if ( errno != try_makedirs_errno )		70912	0					
ANR	71371	Condition	errno != try_makedirs_errno	393:11:9878:9904	70912	0	True				
ANR	71372	EqualityExpression	errno != try_makedirs_errno		70912	0		!=			
ANR	71373	Identifier	errno		70912	0					
ANR	71374	Identifier	try_makedirs_errno		70912	1					
ANR	71375	ExpressionStatement	"pfatal ( ""Can't create file %s"" , quotearg ( bakname ) )"	394:2:9909:9960	70912	1	True				
ANR	71376	CallExpression	"pfatal ( ""Can't create file %s"" , quotearg ( bakname ) )"		70912	0					
ANR	71377	Callee	pfatal		70912	0					
ANR	71378	Identifier	pfatal		70912	0					
ANR	71379	ArgumentList	"""Can't create file %s"""		70912	1					
ANR	71380	Argument	"""Can't create file %s"""		70912	0					
ANR	71381	PrimaryExpression	"""Can't create file %s"""		70912	0					
ANR	71382	Argument	quotearg ( bakname )		70912	1					
ANR	71383	CallExpression	quotearg ( bakname )		70912	0					
ANR	71384	Callee	quotearg		70912	0					
ANR	71385	Identifier	quotearg		70912	0					
ANR	71386	ArgumentList	bakname		70912	1					
ANR	71387	Argument	bakname		70912	0					
ANR	71388	Identifier	bakname		70912	0					
ANR	71389	ExpressionStatement	makedirs ( bakname )	395:7:9969:9987	70912	1	True				
ANR	71390	CallExpression	makedirs ( bakname )		70912	0					
ANR	71391	Callee	makedirs		70912	0					
ANR	71392	Identifier	makedirs		70912	0					
ANR	71393	ArgumentList	bakname		70912	1					
ANR	71394	Argument	bakname		70912	0					
ANR	71395	Identifier	bakname		70912	0					
ANR	71396	ExpressionStatement	try_makedirs_errno = 0	396:7:9996:10018	70912	2	True				
ANR	71397	AssignmentExpression	try_makedirs_errno = 0		70912	0		=			
ANR	71398	Identifier	try_makedirs_errno		70912	0					
ANR	71399	PrimaryExpression	0		70912	1					
ANR	71400	IfStatement	if ( close ( fd ) != 0 )		70912	5					
ANR	71401	Condition	close ( fd ) != 0	398:7:10034:10048	70912	0	True				
ANR	71402	EqualityExpression	close ( fd ) != 0		70912	0		!=			
ANR	71403	CallExpression	close ( fd )		70912	0					
ANR	71404	Callee	close		70912	0					
ANR	71405	Identifier	close		70912	0					
ANR	71406	ArgumentList	fd		70912	1					
ANR	71407	Argument	fd		70912	0					
ANR	71408	Identifier	fd		70912	0					
ANR	71409	PrimaryExpression	0		70912	1					
ANR	71410	ExpressionStatement	"pfatal ( ""Can't close file %s"" , quotearg ( bakname ) )"	399:5:10056:10106	70912	1	True				
ANR	71411	CallExpression	"pfatal ( ""Can't close file %s"" , quotearg ( bakname ) )"		70912	0					
ANR	71412	Callee	pfatal		70912	0					
ANR	71413	Identifier	pfatal		70912	0					
ANR	71414	ArgumentList	"""Can't close file %s"""		70912	1					
ANR	71415	Argument	"""Can't close file %s"""		70912	0					
ANR	71416	PrimaryExpression	"""Can't close file %s"""		70912	0					
ANR	71417	Argument	quotearg ( bakname )		70912	1					
ANR	71418	CallExpression	quotearg ( bakname )		70912	0					
ANR	71419	Callee	quotearg		70912	0					
ANR	71420	Identifier	quotearg		70912	0					
ANR	71421	ArgumentList	bakname		70912	1					
ANR	71422	Argument	bakname		70912	0					
ANR	71423	Identifier	bakname		70912	0					
ANR	71424	ElseStatement	else		70912	0					
ANR	71425	IfStatement	if ( leave_original )		70912	0					
ANR	71426	Condition	leave_original	401:15:10126:10139	70912	0	True				
ANR	71427	Identifier	leave_original		70912	0					
ANR	71428	ExpressionStatement	"create_backup_copy ( to , bakname , to_st , try_makedirs_errno == 0 )"	402:1:10143:10207	70912	1	True				
ANR	71429	CallExpression	"create_backup_copy ( to , bakname , to_st , try_makedirs_errno == 0 )"		70912	0					
ANR	71430	Callee	create_backup_copy		70912	0					
ANR	71431	Identifier	create_backup_copy		70912	0					
ANR	71432	ArgumentList	to		70912	1					
ANR	71433	Argument	to		70912	0					
ANR	71434	Identifier	to		70912	0					
ANR	71435	Argument	bakname		70912	1					
ANR	71436	Identifier	bakname		70912	0					
ANR	71437	Argument	to_st		70912	2					
ANR	71438	Identifier	to_st		70912	0					
ANR	71439	Argument	try_makedirs_errno == 0		70912	3					
ANR	71440	EqualityExpression	try_makedirs_errno == 0		70912	0		==			
ANR	71441	Identifier	try_makedirs_errno		70912	0					
ANR	71442	PrimaryExpression	0		70912	1					
ANR	71443	ElseStatement	else		70912	0					
ANR	71444	CompoundStatement		90:1:2775:2775	70912	0					
ANR	71445	IfStatement	if ( debug & 4 )		70912	0					
ANR	71446	Condition	debug & 4	405:7:10230:10238	70912	0	True				
ANR	71447	BitAndExpression	debug & 4		70912	0		&			
ANR	71448	Identifier	debug		70912	0					
ANR	71449	PrimaryExpression	4		70912	1					
ANR	71450	ExpressionStatement	"say ( ""Renaming file %s to %s\\n"" , quotearg_n ( 0 , to ) , quotearg_n ( 1 , bakname ) )"	406:5:10246:10326	70912	1	True				
ANR	71451	CallExpression	"say ( ""Renaming file %s to %s\\n"" , quotearg_n ( 0 , to ) , quotearg_n ( 1 , bakname ) )"		70912	0					
ANR	71452	Callee	say		70912	0					
ANR	71453	Identifier	say		70912	0					
ANR	71454	ArgumentList	"""Renaming file %s to %s\\n"""		70912	1					
ANR	71455	Argument	"""Renaming file %s to %s\\n"""		70912	0					
ANR	71456	PrimaryExpression	"""Renaming file %s to %s\\n"""		70912	0					
ANR	71457	Argument	"quotearg_n ( 0 , to )"		70912	1					
ANR	71458	CallExpression	"quotearg_n ( 0 , to )"		70912	0					
ANR	71459	Callee	quotearg_n		70912	0					
ANR	71460	Identifier	quotearg_n		70912	0					
ANR	71461	ArgumentList	0		70912	1					
ANR	71462	Argument	0		70912	0					
ANR	71463	PrimaryExpression	0		70912	0					
ANR	71464	Argument	to		70912	1					
ANR	71465	Identifier	to		70912	0					
ANR	71466	Argument	"quotearg_n ( 1 , bakname )"		70912	2					
ANR	71467	CallExpression	"quotearg_n ( 1 , bakname )"		70912	0					
ANR	71468	Callee	quotearg_n		70912	0					
ANR	71469	Identifier	quotearg_n		70912	0					
ANR	71470	ArgumentList	1		70912	1					
ANR	71471	Argument	1		70912	0					
ANR	71472	PrimaryExpression	1		70912	0					
ANR	71473	Argument	bakname		70912	1					
ANR	71474	Identifier	bakname		70912	0					
ANR	71475	WhileStatement	"while ( safe_rename ( to , bakname ) != 0 )"		70912	1					
ANR	71476	Condition	"safe_rename ( to , bakname ) != 0"	408:10:10338:10367	70912	0	True				
ANR	71477	EqualityExpression	"safe_rename ( to , bakname ) != 0"		70912	0		!=			
ANR	71478	CallExpression	"safe_rename ( to , bakname )"		70912	0					
ANR	71479	Callee	safe_rename		70912	0					
ANR	71480	Identifier	safe_rename		70912	0					
ANR	71481	ArgumentList	to		70912	1					
ANR	71482	Argument	to		70912	0					
ANR	71483	Identifier	to		70912	0					
ANR	71484	Argument	bakname		70912	1					
ANR	71485	Identifier	bakname		70912	0					
ANR	71486	PrimaryExpression	0		70912	1					
ANR	71487	CompoundStatement		95:5:2929:2929	70912	1					
ANR	71488	IfStatement	if ( errno == try_makedirs_errno )		70912	0					
ANR	71489	Condition	errno == try_makedirs_errno	410:11:10388:10414	70912	0	True				
ANR	71490	EqualityExpression	errno == try_makedirs_errno		70912	0		==			
ANR	71491	Identifier	errno		70912	0					
ANR	71492	Identifier	try_makedirs_errno		70912	1					
ANR	71493	CompoundStatement		97:2:2973:2973	70912	1					
ANR	71494	ExpressionStatement	makedirs ( bakname )	412:4:10425:10443	70912	0	True				
ANR	71495	CallExpression	makedirs ( bakname )		70912	0					
ANR	71496	Callee	makedirs		70912	0					
ANR	71497	Identifier	makedirs		70912	0					
ANR	71498	ArgumentList	bakname		70912	1					
ANR	71499	Argument	bakname		70912	0					
ANR	71500	Identifier	bakname		70912	0					
ANR	71501	ExpressionStatement	try_makedirs_errno = 0	413:4:10449:10471	70912	1	True				
ANR	71502	AssignmentExpression	try_makedirs_errno = 0		70912	0		=			
ANR	71503	Identifier	try_makedirs_errno		70912	0					
ANR	71504	PrimaryExpression	0		70912	1					
ANR	71505	ElseStatement	else		70912	0					
ANR	71506	IfStatement	if ( errno == EXDEV )		70912	0					
ANR	71507	Condition	errno == EXDEV	415:16:10493:10506	70912	0	True				
ANR	71508	EqualityExpression	errno == EXDEV		70912	0		==			
ANR	71509	Identifier	errno		70912	0					
ANR	71510	Identifier	EXDEV		70912	1					
ANR	71511	CompoundStatement		102:2:3065:3065	70912	1					
ANR	71512	ExpressionStatement	"create_backup_copy ( to , bakname , to_st , try_makedirs_errno == 0 )"	417:4:10517:10591	70912	0	True				
ANR	71513	CallExpression	"create_backup_copy ( to , bakname , to_st , try_makedirs_errno == 0 )"		70912	0					
ANR	71514	Callee	create_backup_copy		70912	0					
ANR	71515	Identifier	create_backup_copy		70912	0					
ANR	71516	ArgumentList	to		70912	1					
ANR	71517	Argument	to		70912	0					
ANR	71518	Identifier	to		70912	0					
ANR	71519	Argument	bakname		70912	1					
ANR	71520	Identifier	bakname		70912	0					
ANR	71521	Argument	to_st		70912	2					
ANR	71522	Identifier	to_st		70912	0					
ANR	71523	Argument	try_makedirs_errno == 0		70912	3					
ANR	71524	EqualityExpression	try_makedirs_errno == 0		70912	0		==			
ANR	71525	Identifier	try_makedirs_errno		70912	0					
ANR	71526	PrimaryExpression	0		70912	1					
ANR	71527	ExpressionStatement	safe_unlink ( to )	419:4:10597:10613	70912	1	True				
ANR	71528	CallExpression	safe_unlink ( to )		70912	0					
ANR	71529	Callee	safe_unlink		70912	0					
ANR	71530	Identifier	safe_unlink		70912	0					
ANR	71531	ArgumentList	to		70912	1					
ANR	71532	Argument	to		70912	0					
ANR	71533	Identifier	to		70912	0					
ANR	71534	BreakStatement	break ;	420:4:10619:10624	70912	2	True				
ANR	71535	ElseStatement	else		70912	0					
ANR	71536	ExpressionStatement	"pfatal ( ""Can't rename file %s to %s"" , quotearg_n ( 0 , to ) , quotearg_n ( 1 , bakname ) )"	423:2:10644:10729	70912	0	True				
ANR	71537	CallExpression	"pfatal ( ""Can't rename file %s to %s"" , quotearg_n ( 0 , to ) , quotearg_n ( 1 , bakname ) )"		70912	0					
ANR	71538	Callee	pfatal		70912	0					
ANR	71539	Identifier	pfatal		70912	0					
ANR	71540	ArgumentList	"""Can't rename file %s to %s"""		70912	1					
ANR	71541	Argument	"""Can't rename file %s to %s"""		70912	0					
ANR	71542	PrimaryExpression	"""Can't rename file %s to %s"""		70912	0					
ANR	71543	Argument	"quotearg_n ( 0 , to )"		70912	1					
ANR	71544	CallExpression	"quotearg_n ( 0 , to )"		70912	0					
ANR	71545	Callee	quotearg_n		70912	0					
ANR	71546	Identifier	quotearg_n		70912	0					
ANR	71547	ArgumentList	0		70912	1					
ANR	71548	Argument	0		70912	0					
ANR	71549	PrimaryExpression	0		70912	0					
ANR	71550	Argument	to		70912	1					
ANR	71551	Identifier	to		70912	0					
ANR	71552	Argument	"quotearg_n ( 1 , bakname )"		70912	2					
ANR	71553	CallExpression	"quotearg_n ( 1 , bakname )"		70912	0					
ANR	71554	Callee	quotearg_n		70912	0					
ANR	71555	Identifier	quotearg_n		70912	0					
ANR	71556	ArgumentList	1		70912	1					
ANR	71557	Argument	1		70912	0					
ANR	71558	PrimaryExpression	1		70912	0					
ANR	71559	Argument	bakname		70912	1					
ANR	71560	Identifier	bakname		70912	0					
ANR	71561	ExpressionStatement	free ( bakname )	427:6:10747:10761	70912	4	True				
ANR	71562	CallExpression	free ( bakname )		70912	0					
ANR	71563	Callee	free		70912	0					
ANR	71564	Identifier	free		70912	0					
ANR	71565	ArgumentList	bakname		70912	1					
ANR	71566	Argument	bakname		70912	0					
ANR	71567	Identifier	bakname		70912	0					
ANR	71568	ReturnType	void		70912	1					
ANR	71569	Identifier	create_backup		70912	2					
ANR	71570	ParameterList	"char const * to , const struct stat * to_st , bool leave_original"		70912	3					
ANR	71571	Parameter	char const * to	314:15:7382:7395	70912	0	True				
ANR	71572	ParameterType	char const *		70912	0					
ANR	71573	Identifier	to		70912	1					
ANR	71574	Parameter	const struct stat * to_st	314:31:7398:7421	70912	1	True				
ANR	71575	ParameterType	const struct stat *		70912	0					
ANR	71576	Identifier	to_st		70912	1					
ANR	71577	Parameter	bool leave_original	314:57:7424:7442	70912	2	True				
ANR	71578	ParameterType	bool		70912	0					
ANR	71579	Identifier	leave_original		70912	1					
ANR	71580	CFGEntryNode	ENTRY		70912		True				
ANR	71581	CFGExitNode	EXIT		70912		True				
ANR	71582	Symbol	quotearg		70912						
ANR	71583	Symbol	to_st -> st_mode		70912						
ANR	71584	Symbol	quotearg_n		70912						
ANR	71585	Symbol	O_CREAT		70912						
ANR	71586	Symbol	ISSLASH		70912						
ANR	71587	Symbol	strlen		70912						
ANR	71588	Symbol	plen		70912						
ANR	71589	Symbol	CREATED		70912						
ANR	71590	Symbol	origprae		70912						
ANR	71591	Symbol	origsuff		70912						
ANR	71592	Symbol	xmalloc		70912						
ANR	71593	Symbol	safe_rename		70912						
ANR	71594	Symbol	leave_original		70912						
ANR	71595	Symbol	bakname		70912						
ANR	71596	Symbol	tlen		70912						
ANR	71597	Symbol	EXDEV		70912						
ANR	71598	Symbol	* to_st		70912						
ANR	71599	Symbol	contains_slash		70912						
ANR	71600	Symbol	try_makedirs_errno		70912						
ANR	71601	Symbol	blen		70912						
ANR	71602	Symbol	close		70912						
ANR	71603	Symbol	S_ISLNK		70912						
ANR	71604	Symbol	lookup_file_id		70912						
ANR	71605	Symbol	FILE_SYSTEM_PREFIX_LEN		70912						
ANR	71606	Symbol	b		70912						
ANR	71607	Symbol	errno		70912						
ANR	71608	Symbol	debug		70912						
ANR	71609	Symbol	backup_type		70912						
ANR	71610	Symbol	* ( o - 1 )		70912						
ANR	71611	Symbol	ENOENT		70912						
ANR	71612	Symbol	find_backup_file_name		70912						
ANR	71613	Symbol	o		70912						
ANR	71614	Symbol	safe_open		70912						
ANR	71615	Symbol	p		70912						
ANR	71616	Symbol	olen		70912						
ANR	71617	Symbol	O_TRUNC		70912						
ANR	71618	Symbol	to_st		70912						
ANR	71619	Symbol	S_ISREG		70912						
ANR	71620	Symbol	s		70912						
ANR	71621	Symbol	t		70912						
ANR	71622	Symbol	slen		70912						
ANR	71623	Symbol	* o		70912						
ANR	71624	Symbol	to		70912						
ANR	71625	Symbol	O_WRONLY		70912						
ANR	71626	Symbol	origbase		70912						
ANR	71627	Symbol	fd		70912						
ANR	71628	Function	move_file	441:0:11251:14044							
ANR	71629	FunctionDef	"move_file (char const * from , bool * from_needs_removal , struct stat const * fromst , char const * to , mode_t mode , bool backup)"		71628	0					
ANR	71630	CompoundStatement		445:0:11388:14044	71628	0					
ANR	71631	IdentifierDeclStatement	struct stat to_st ;	446:2:11392:11409	71628	0	True				
ANR	71632	IdentifierDecl	to_st		71628	0					
ANR	71633	IdentifierDeclType	struct stat		71628	0					
ANR	71634	Identifier	to_st		71628	1					
ANR	71635	IdentifierDeclStatement	int to_errno ;	447:2:11413:11425	71628	1	True				
ANR	71636	IdentifierDecl	to_errno		71628	0					
ANR	71637	IdentifierDeclType	int		71628	0					
ANR	71638	Identifier	to_errno		71628	1					
ANR	71639	ExpressionStatement	"to_errno = stat_file ( to , & to_st )"	449:2:11430:11463	71628	2	True				
ANR	71640	AssignmentExpression	"to_errno = stat_file ( to , & to_st )"		71628	0		=			
ANR	71641	Identifier	to_errno		71628	0					
ANR	71642	CallExpression	"stat_file ( to , & to_st )"		71628	1					
ANR	71643	Callee	stat_file		71628	0					
ANR	71644	Identifier	stat_file		71628	0					
ANR	71645	ArgumentList	to		71628	1					
ANR	71646	Argument	to		71628	0					
ANR	71647	Identifier	to		71628	0					
ANR	71648	Argument	& to_st		71628	1					
ANR	71649	UnaryOperationExpression	& to_st		71628	0					
ANR	71650	UnaryOperator	&		71628	0					
ANR	71651	Identifier	to_st		71628	1					
ANR	71652	IfStatement	if ( backup )		71628	3					
ANR	71653	Condition	backup	450:6:11471:11476	71628	0	True				
ANR	71654	Identifier	backup		71628	0					
ANR	71655	ExpressionStatement	"create_backup ( to , to_errno ? NULL : & to_st , false )"	451:4:11483:11534	71628	1	True				
ANR	71656	CallExpression	"create_backup ( to , to_errno ? NULL : & to_st , false )"		71628	0					
ANR	71657	Callee	create_backup		71628	0					
ANR	71658	Identifier	create_backup		71628	0					
ANR	71659	ArgumentList	to		71628	1					
ANR	71660	Argument	to		71628	0					
ANR	71661	Identifier	to		71628	0					
ANR	71662	Argument	to_errno ? NULL : & to_st		71628	1					
ANR	71663	ConditionalExpression	to_errno ? NULL : & to_st		71628	0					
ANR	71664	Condition	to_errno		71628	0					
ANR	71665	Identifier	to_errno		71628	0					
ANR	71666	Identifier	NULL		71628	1					
ANR	71667	UnaryOperationExpression	& to_st		71628	2					
ANR	71668	UnaryOperator	&		71628	0					
ANR	71669	Identifier	to_st		71628	1					
ANR	71670	Argument	false		71628	2					
ANR	71671	Identifier	false		71628	0					
ANR	71672	IfStatement	if ( ! to_errno )		71628	4					
ANR	71673	Condition	! to_errno	452:6:11542:11551	71628	0	True				
ANR	71674	UnaryOperationExpression	! to_errno		71628	0					
ANR	71675	UnaryOperator	!		71628	0					
ANR	71676	Identifier	to_errno		71628	1					
ANR	71677	ExpressionStatement	"insert_file_id ( & to_st , OVERWRITTEN )"	453:4:11558:11594	71628	1	True				
ANR	71678	CallExpression	"insert_file_id ( & to_st , OVERWRITTEN )"		71628	0					
ANR	71679	Callee	insert_file_id		71628	0					
ANR	71680	Identifier	insert_file_id		71628	0					
ANR	71681	ArgumentList	& to_st		71628	1					
ANR	71682	Argument	& to_st		71628	0					
ANR	71683	UnaryOperationExpression	& to_st		71628	0					
ANR	71684	UnaryOperator	&		71628	0					
ANR	71685	Identifier	to_st		71628	1					
ANR	71686	Argument	OVERWRITTEN		71628	1					
ANR	71687	Identifier	OVERWRITTEN		71628	0					
ANR	71688	IfStatement	if ( from )		71628	5					
ANR	71689	Condition	from	455:6:11603:11606	71628	0	True				
ANR	71690	Identifier	from		71628	0					
ANR	71691	CompoundStatement		12:4:224:224	71628	1					
ANR	71692	IfStatement	if ( S_ISLNK ( mode ) )		71628	0					
ANR	71693	Condition	S_ISLNK ( mode )	457:10:11625:11638	71628	0	True				
ANR	71694	CallExpression	S_ISLNK ( mode )		71628	0					
ANR	71695	Callee	S_ISLNK		71628	0					
ANR	71696	Identifier	S_ISLNK		71628	0					
ANR	71697	ArgumentList	mode		71628	1					
ANR	71698	Argument	mode		71628	0					
ANR	71699	Identifier	mode		71628	0					
ANR	71700	CompoundStatement		20:3:452:471	71628	1					
ANR	71701	IdentifierDeclStatement	bool to_dir_known_to_exist = false ;	459:3:11647:11681	71628	0	True				
ANR	71702	IdentifierDecl	to_dir_known_to_exist = false		71628	0					
ANR	71703	IdentifierDeclType	bool		71628	0					
ANR	71704	Identifier	to_dir_known_to_exist		71628	1					
ANR	71705	AssignmentExpression	to_dir_known_to_exist = false		71628	2		=			
ANR	71706	Identifier	false		71628	0					
ANR	71707	Identifier	false		71628	1					
ANR	71708	IdentifierDeclStatement	char * buffer = xmalloc ( PATH_MAX ) ;	463:3:11803:11836	71628	1	True				
ANR	71709	IdentifierDecl	* buffer = xmalloc ( PATH_MAX )		71628	0					
ANR	71710	IdentifierDeclType	char *		71628	0					
ANR	71711	Identifier	buffer		71628	1					
ANR	71712	AssignmentExpression	* buffer = xmalloc ( PATH_MAX )		71628	2		=			
ANR	71713	Identifier	buffer		71628	0					
ANR	71714	CallExpression	xmalloc ( PATH_MAX )		71628	1					
ANR	71715	Callee	xmalloc		71628	0					
ANR	71716	Identifier	xmalloc		71628	0					
ANR	71717	ArgumentList	PATH_MAX		71628	1					
ANR	71718	Argument	PATH_MAX		71628	0					
ANR	71719	Identifier	PATH_MAX		71628	0					
ANR	71720	IdentifierDeclStatement	"int fd , size = 0 , i ;"	464:3:11841:11860	71628	2	True				
ANR	71721	IdentifierDecl	fd		71628	0					
ANR	71722	IdentifierDeclType	int		71628	0					
ANR	71723	Identifier	fd		71628	1					
ANR	71724	IdentifierDecl	size = 0		71628	1					
ANR	71725	IdentifierDeclType	int		71628	0					
ANR	71726	Identifier	size		71628	1					
ANR	71727	AssignmentExpression	size = 0		71628	2		=			
ANR	71728	Identifier	size		71628	0					
ANR	71729	PrimaryExpression	0		71628	1					
ANR	71730	IdentifierDecl	i		71628	2					
ANR	71731	IdentifierDeclType	int		71628	0					
ANR	71732	Identifier	i		71628	1					
ANR	71733	IfStatement	"if ( ( fd = safe_open ( from , O_RDONLY | O_BINARY , 0 ) ) < 0 )"		71628	3					
ANR	71734	Condition	"( fd = safe_open ( from , O_RDONLY | O_BINARY , 0 ) ) < 0"	466:7:11870:11920	71628	0	True				
ANR	71735	RelationalExpression	"( fd = safe_open ( from , O_RDONLY | O_BINARY , 0 ) ) < 0"		71628	0		<			
ANR	71736	AssignmentExpression	"fd = safe_open ( from , O_RDONLY | O_BINARY , 0 )"		71628	0		=			
ANR	71737	Identifier	fd		71628	0					
ANR	71738	CallExpression	"safe_open ( from , O_RDONLY | O_BINARY , 0 )"		71628	1					
ANR	71739	Callee	safe_open		71628	0					
ANR	71740	Identifier	safe_open		71628	0					
ANR	71741	ArgumentList	from		71628	1					
ANR	71742	Argument	from		71628	0					
ANR	71743	Identifier	from		71628	0					
ANR	71744	Argument	O_RDONLY | O_BINARY		71628	1					
ANR	71745	InclusiveOrExpression	O_RDONLY | O_BINARY		71628	0		|			
ANR	71746	Identifier	O_RDONLY		71628	0					
ANR	71747	Identifier	O_BINARY		71628	1					
ANR	71748	Argument	0		71628	2					
ANR	71749	PrimaryExpression	0		71628	0					
ANR	71750	PrimaryExpression	0		71628	1					
ANR	71751	ExpressionStatement	"pfatal ( ""Can't reopen file %s"" , quotearg ( from ) )"	467:5:11928:11976	71628	1	True				
ANR	71752	CallExpression	"pfatal ( ""Can't reopen file %s"" , quotearg ( from ) )"		71628	0					
ANR	71753	Callee	pfatal		71628	0					
ANR	71754	Identifier	pfatal		71628	0					
ANR	71755	ArgumentList	"""Can't reopen file %s"""		71628	1					
ANR	71756	Argument	"""Can't reopen file %s"""		71628	0					
ANR	71757	PrimaryExpression	"""Can't reopen file %s"""		71628	0					
ANR	71758	Argument	quotearg ( from )		71628	1					
ANR	71759	CallExpression	quotearg ( from )		71628	0					
ANR	71760	Callee	quotearg		71628	0					
ANR	71761	Identifier	quotearg		71628	0					
ANR	71762	ArgumentList	from		71628	1					
ANR	71763	Argument	from		71628	0					
ANR	71764	Identifier	from		71628	0					
ANR	71765	WhileStatement	"while ( ( i = read ( fd , buffer + size , PATH_MAX - size ) ) > 0 )"		71628	4					
ANR	71766	Condition	"( i = read ( fd , buffer + size , PATH_MAX - size ) ) > 0"	468:10:11988:12038	71628	0	True				
ANR	71767	RelationalExpression	"( i = read ( fd , buffer + size , PATH_MAX - size ) ) > 0"		71628	0		>			
ANR	71768	AssignmentExpression	"i = read ( fd , buffer + size , PATH_MAX - size )"		71628	0		=			
ANR	71769	Identifier	i		71628	0					
ANR	71770	CallExpression	"read ( fd , buffer + size , PATH_MAX - size )"		71628	1					
ANR	71771	Callee	read		71628	0					
ANR	71772	Identifier	read		71628	0					
ANR	71773	ArgumentList	fd		71628	1					
ANR	71774	Argument	fd		71628	0					
ANR	71775	Identifier	fd		71628	0					
ANR	71776	Argument	buffer + size		71628	1					
ANR	71777	AdditiveExpression	buffer + size		71628	0		+			
ANR	71778	Identifier	buffer		71628	0					
ANR	71779	Identifier	size		71628	1					
ANR	71780	Argument	PATH_MAX - size		71628	2					
ANR	71781	AdditiveExpression	PATH_MAX - size		71628	0		-			
ANR	71782	Identifier	PATH_MAX		71628	0					
ANR	71783	Identifier	size		71628	1					
ANR	71784	PrimaryExpression	0		71628	1					
ANR	71785	ExpressionStatement	size += i	469:5:12046:12055	71628	1	True				
ANR	71786	AssignmentExpression	size += i		71628	0		+=			
ANR	71787	Identifier	size		71628	0					
ANR	71788	Identifier	i		71628	1					
ANR	71789	IfStatement	if ( i != 0 || close ( fd ) != 0 )		71628	5					
ANR	71790	Condition	i != 0 || close ( fd ) != 0	470:7:12064:12088	71628	0	True				
ANR	71791	OrExpression	i != 0 || close ( fd ) != 0		71628	0		||			
ANR	71792	EqualityExpression	i != 0		71628	0		!=			
ANR	71793	Identifier	i		71628	0					
ANR	71794	PrimaryExpression	0		71628	1					
ANR	71795	EqualityExpression	close ( fd ) != 0		71628	1		!=			
ANR	71796	CallExpression	close ( fd )		71628	0					
ANR	71797	Callee	close		71628	0					
ANR	71798	Identifier	close		71628	0					
ANR	71799	ArgumentList	fd		71628	1					
ANR	71800	Argument	fd		71628	0					
ANR	71801	Identifier	fd		71628	0					
ANR	71802	PrimaryExpression	0		71628	1					
ANR	71803	ExpressionStatement	read_fatal ( )	471:5:12096:12109	71628	1	True				
ANR	71804	CallExpression	read_fatal ( )		71628	0					
ANR	71805	Callee	read_fatal		71628	0					
ANR	71806	Identifier	read_fatal		71628	0					
ANR	71807	ArgumentList			71628	1					
ANR	71808	ExpressionStatement	buffer [ size ] = 0	472:3:12114:12130	71628	6	True				
ANR	71809	AssignmentExpression	buffer [ size ] = 0		71628	0		=			
ANR	71810	ArrayIndexing	buffer [ size ]		71628	0					
ANR	71811	Identifier	buffer		71628	0					
ANR	71812	Identifier	size		71628	1					
ANR	71813	PrimaryExpression	0		71628	1					
ANR	71814	IfStatement	if ( ! backup )		71628	7					
ANR	71815	Condition	! backup	474:7:12140:12147	71628	0	True				
ANR	71816	UnaryOperationExpression	! backup		71628	0					
ANR	71817	UnaryOperator	!		71628	0					
ANR	71818	Identifier	backup		71628	1					
ANR	71819	CompoundStatement		31:5:766:766	71628	1					
ANR	71820	IfStatement	if ( safe_unlink ( to ) == 0 )		71628	0					
ANR	71821	Condition	safe_unlink ( to ) == 0	476:11:12168:12188	71628	0	True				
ANR	71822	EqualityExpression	safe_unlink ( to ) == 0		71628	0		==			
ANR	71823	CallExpression	safe_unlink ( to )		71628	0					
ANR	71824	Callee	safe_unlink		71628	0					
ANR	71825	Identifier	safe_unlink		71628	0					
ANR	71826	ArgumentList	to		71628	1					
ANR	71827	Argument	to		71628	0					
ANR	71828	Identifier	to		71628	0					
ANR	71829	PrimaryExpression	0		71628	1					
ANR	71830	ExpressionStatement	to_dir_known_to_exist = true	477:2:12193:12221	71628	1	True				
ANR	71831	AssignmentExpression	to_dir_known_to_exist = true		71628	0		=			
ANR	71832	Identifier	to_dir_known_to_exist		71628	0					
ANR	71833	Identifier	true		71628	1					
ANR	71834	IfStatement	"if ( safe_symlink ( buffer , to ) != 0 )"		71628	8					
ANR	71835	Condition	"safe_symlink ( buffer , to ) != 0"	479:7:12237:12266	71628	0	True				
ANR	71836	EqualityExpression	"safe_symlink ( buffer , to ) != 0"		71628	0		!=			
ANR	71837	CallExpression	"safe_symlink ( buffer , to )"		71628	0					
ANR	71838	Callee	safe_symlink		71628	0					
ANR	71839	Identifier	safe_symlink		71628	0					
ANR	71840	ArgumentList	buffer		71628	1					
ANR	71841	Argument	buffer		71628	0					
ANR	71842	Identifier	buffer		71628	0					
ANR	71843	Argument	to		71628	1					
ANR	71844	Identifier	to		71628	0					
ANR	71845	PrimaryExpression	0		71628	1					
ANR	71846	CompoundStatement		36:5:885:885	71628	1					
ANR	71847	IfStatement	if ( errno == ENOENT && ! to_dir_known_to_exist )		71628	0					
ANR	71848	Condition	errno == ENOENT && ! to_dir_known_to_exist	481:11:12287:12328	71628	0	True				
ANR	71849	AndExpression	errno == ENOENT && ! to_dir_known_to_exist		71628	0		&&			
ANR	71850	EqualityExpression	errno == ENOENT		71628	0		==			
ANR	71851	Identifier	errno		71628	0					
ANR	71852	Identifier	ENOENT		71628	1					
ANR	71853	UnaryOperationExpression	! to_dir_known_to_exist		71628	1					
ANR	71854	UnaryOperator	!		71628	0					
ANR	71855	Identifier	to_dir_known_to_exist		71628	1					
ANR	71856	ExpressionStatement	makedirs ( to )	482:2:12333:12346	71628	1	True				
ANR	71857	CallExpression	makedirs ( to )		71628	0					
ANR	71858	Callee	makedirs		71628	0					
ANR	71859	Identifier	makedirs		71628	0					
ANR	71860	ArgumentList	to		71628	1					
ANR	71861	Argument	to		71628	0					
ANR	71862	Identifier	to		71628	0					
ANR	71863	IfStatement	"if ( safe_symlink ( buffer , to ) != 0 )"		71628	1					
ANR	71864	Condition	"safe_symlink ( buffer , to ) != 0"	483:11:12359:12388	71628	0	True				
ANR	71865	EqualityExpression	"safe_symlink ( buffer , to ) != 0"		71628	0		!=			
ANR	71866	CallExpression	"safe_symlink ( buffer , to )"		71628	0					
ANR	71867	Callee	safe_symlink		71628	0					
ANR	71868	Identifier	safe_symlink		71628	0					
ANR	71869	ArgumentList	buffer		71628	1					
ANR	71870	Argument	buffer		71628	0					
ANR	71871	Identifier	buffer		71628	0					
ANR	71872	Argument	to		71628	1					
ANR	71873	Identifier	to		71628	0					
ANR	71874	PrimaryExpression	0		71628	1					
ANR	71875	ExpressionStatement	"pfatal ( ""Can't create %s %s"" , ""symbolic link"" , to )"	484:2:12393:12443	71628	1	True				
ANR	71876	CallExpression	"pfatal ( ""Can't create %s %s"" , ""symbolic link"" , to )"		71628	0					
ANR	71877	Callee	pfatal		71628	0					
ANR	71878	Identifier	pfatal		71628	0					
ANR	71879	ArgumentList	"""Can't create %s %s"""		71628	1					
ANR	71880	Argument	"""Can't create %s %s"""		71628	0					
ANR	71881	PrimaryExpression	"""Can't create %s %s"""		71628	0					
ANR	71882	Argument	"""symbolic link"""		71628	1					
ANR	71883	PrimaryExpression	"""symbolic link"""		71628	0					
ANR	71884	Argument	to		71628	2					
ANR	71885	Identifier	to		71628	0					
ANR	71886	ExpressionStatement	free ( buffer )	486:3:12455:12468	71628	9	True				
ANR	71887	CallExpression	free ( buffer )		71628	0					
ANR	71888	Callee	free		71628	0					
ANR	71889	Identifier	free		71628	0					
ANR	71890	ArgumentList	buffer		71628	1					
ANR	71891	Argument	buffer		71628	0					
ANR	71892	Identifier	buffer		71628	0					
ANR	71893	IfStatement	"if ( safe_lstat ( to , & to_st ) != 0 )"		71628	10					
ANR	71894	Condition	"safe_lstat ( to , & to_st ) != 0"	487:7:12477:12504	71628	0	True				
ANR	71895	EqualityExpression	"safe_lstat ( to , & to_st ) != 0"		71628	0		!=			
ANR	71896	CallExpression	"safe_lstat ( to , & to_st )"		71628	0					
ANR	71897	Callee	safe_lstat		71628	0					
ANR	71898	Identifier	safe_lstat		71628	0					
ANR	71899	ArgumentList	to		71628	1					
ANR	71900	Argument	to		71628	0					
ANR	71901	Identifier	to		71628	0					
ANR	71902	Argument	& to_st		71628	1					
ANR	71903	UnaryOperationExpression	& to_st		71628	0					
ANR	71904	UnaryOperator	&		71628	0					
ANR	71905	Identifier	to_st		71628	1					
ANR	71906	PrimaryExpression	0		71628	1					
ANR	71907	ExpressionStatement	"pfatal ( ""Can't get file attributes of %s %s"" , ""symbolic link"" , to )"	488:5:12512:12578	71628	1	True				
ANR	71908	CallExpression	"pfatal ( ""Can't get file attributes of %s %s"" , ""symbolic link"" , to )"		71628	0					
ANR	71909	Callee	pfatal		71628	0					
ANR	71910	Identifier	pfatal		71628	0					
ANR	71911	ArgumentList	"""Can't get file attributes of %s %s"""		71628	1					
ANR	71912	Argument	"""Can't get file attributes of %s %s"""		71628	0					
ANR	71913	PrimaryExpression	"""Can't get file attributes of %s %s"""		71628	0					
ANR	71914	Argument	"""symbolic link"""		71628	1					
ANR	71915	PrimaryExpression	"""symbolic link"""		71628	0					
ANR	71916	Argument	to		71628	2					
ANR	71917	Identifier	to		71628	0					
ANR	71918	ExpressionStatement	"insert_file_id ( & to_st , CREATED )"	489:3:12583:12615	71628	11	True				
ANR	71919	CallExpression	"insert_file_id ( & to_st , CREATED )"		71628	0					
ANR	71920	Callee	insert_file_id		71628	0					
ANR	71921	Identifier	insert_file_id		71628	0					
ANR	71922	ArgumentList	& to_st		71628	1					
ANR	71923	Argument	& to_st		71628	0					
ANR	71924	UnaryOperationExpression	& to_st		71628	0					
ANR	71925	UnaryOperator	&		71628	0					
ANR	71926	Identifier	to_st		71628	1					
ANR	71927	Argument	CREATED		71628	1					
ANR	71928	Identifier	CREATED		71628	0					
ANR	71929	ElseStatement	else		71628	0					
ANR	71930	CompoundStatement		48:1:1243:1243	71628	0					
ANR	71931	IfStatement	if ( debug & 4 )		71628	0					
ANR	71932	Condition	debug & 4	493:7:12641:12649	71628	0	True				
ANR	71933	BitAndExpression	debug & 4		71628	0		&			
ANR	71934	Identifier	debug		71628	0					
ANR	71935	PrimaryExpression	4		71628	1					
ANR	71936	ExpressionStatement	"say ( ""Renaming file %s to %s\\n"" , quotearg_n ( 0 , from ) , quotearg_n ( 1 , to ) )"	494:5:12657:12734	71628	1	True				
ANR	71937	CallExpression	"say ( ""Renaming file %s to %s\\n"" , quotearg_n ( 0 , from ) , quotearg_n ( 1 , to ) )"		71628	0					
ANR	71938	Callee	say		71628	0					
ANR	71939	Identifier	say		71628	0					
ANR	71940	ArgumentList	"""Renaming file %s to %s\\n"""		71628	1					
ANR	71941	Argument	"""Renaming file %s to %s\\n"""		71628	0					
ANR	71942	PrimaryExpression	"""Renaming file %s to %s\\n"""		71628	0					
ANR	71943	Argument	"quotearg_n ( 0 , from )"		71628	1					
ANR	71944	CallExpression	"quotearg_n ( 0 , from )"		71628	0					
ANR	71945	Callee	quotearg_n		71628	0					
ANR	71946	Identifier	quotearg_n		71628	0					
ANR	71947	ArgumentList	0		71628	1					
ANR	71948	Argument	0		71628	0					
ANR	71949	PrimaryExpression	0		71628	0					
ANR	71950	Argument	from		71628	1					
ANR	71951	Identifier	from		71628	0					
ANR	71952	Argument	"quotearg_n ( 1 , to )"		71628	2					
ANR	71953	CallExpression	"quotearg_n ( 1 , to )"		71628	0					
ANR	71954	Callee	quotearg_n		71628	0					
ANR	71955	Identifier	quotearg_n		71628	0					
ANR	71956	ArgumentList	1		71628	1					
ANR	71957	Argument	1		71628	0					
ANR	71958	PrimaryExpression	1		71628	0					
ANR	71959	Argument	to		71628	1					
ANR	71960	Identifier	to		71628	0					
ANR	71961	IfStatement	"if ( safe_rename ( from , to ) != 0 )"		71628	1					
ANR	71962	Condition	"safe_rename ( from , to ) != 0"	497:7:12744:12770	71628	0	True				
ANR	71963	EqualityExpression	"safe_rename ( from , to ) != 0"		71628	0		!=			
ANR	71964	CallExpression	"safe_rename ( from , to )"		71628	0					
ANR	71965	Callee	safe_rename		71628	0					
ANR	71966	Identifier	safe_rename		71628	0					
ANR	71967	ArgumentList	from		71628	1					
ANR	71968	Argument	from		71628	0					
ANR	71969	Identifier	from		71628	0					
ANR	71970	Argument	to		71628	1					
ANR	71971	Identifier	to		71628	0					
ANR	71972	PrimaryExpression	0		71628	1					
ANR	71973	CompoundStatement		55:7:1398:1432	71628	1					
ANR	71974	IdentifierDeclStatement	bool to_dir_known_to_exist = false ;	499:7:12787:12821	71628	0	True				
ANR	71975	IdentifierDecl	to_dir_known_to_exist = false		71628	0					
ANR	71976	IdentifierDeclType	bool		71628	0					
ANR	71977	Identifier	to_dir_known_to_exist		71628	1					
ANR	71978	AssignmentExpression	to_dir_known_to_exist = false		71628	2		=			
ANR	71979	Identifier	false		71628	0					
ANR	71980	Identifier	false		71628	1					
ANR	71981	IfStatement	if ( errno == ENOENT && ( to_errno == - 1 || to_errno == ENOENT ) )		71628	1					
ANR	71982	Condition	errno == ENOENT && ( to_errno == - 1 || to_errno == ENOENT )	501:11:12835:12895	71628	0	True				
ANR	71983	AndExpression	errno == ENOENT && ( to_errno == - 1 || to_errno == ENOENT )		71628	0		&&			
ANR	71984	EqualityExpression	errno == ENOENT		71628	0		==			
ANR	71985	Identifier	errno		71628	0					
ANR	71986	Identifier	ENOENT		71628	1					
ANR	71987	OrExpression	to_errno == - 1 || to_errno == ENOENT		71628	1		||			
ANR	71988	EqualityExpression	to_errno == - 1		71628	0		==			
ANR	71989	Identifier	to_errno		71628	0					
ANR	71990	UnaryOperationExpression	- 1		71628	1					
ANR	71991	UnaryOperator	-		71628	0					
ANR	71992	PrimaryExpression	1		71628	1					
ANR	71993	EqualityExpression	to_errno == ENOENT		71628	1		==			
ANR	71994	Identifier	to_errno		71628	0					
ANR	71995	Identifier	ENOENT		71628	1					
ANR	71996	CompoundStatement		59:2:1511:1511	71628	1					
ANR	71997	ExpressionStatement	makedirs ( to )	504:4:12906:12919	71628	0	True				
ANR	71998	CallExpression	makedirs ( to )		71628	0					
ANR	71999	Callee	makedirs		71628	0					
ANR	72000	Identifier	makedirs		71628	0					
ANR	72001	ArgumentList	to		71628	1					
ANR	72002	Argument	to		71628	0					
ANR	72003	Identifier	to		71628	0					
ANR	72004	ExpressionStatement	to_dir_known_to_exist = true	505:4:12925:12953	71628	1	True				
ANR	72005	AssignmentExpression	to_dir_known_to_exist = true		71628	0		=			
ANR	72006	Identifier	to_dir_known_to_exist		71628	0					
ANR	72007	Identifier	true		71628	1					
ANR	72008	IfStatement	"if ( safe_rename ( from , to ) == 0 )"		71628	2					
ANR	72009	Condition	"safe_rename ( from , to ) == 0"	506:8:12963:12989	71628	0	True				
ANR	72010	EqualityExpression	"safe_rename ( from , to ) == 0"		71628	0		==			
ANR	72011	CallExpression	"safe_rename ( from , to )"		71628	0					
ANR	72012	Callee	safe_rename		71628	0					
ANR	72013	Identifier	safe_rename		71628	0					
ANR	72014	ArgumentList	from		71628	1					
ANR	72015	Argument	from		71628	0					
ANR	72016	Identifier	from		71628	0					
ANR	72017	Argument	to		71628	1					
ANR	72018	Identifier	to		71628	0					
ANR	72019	PrimaryExpression	0		71628	1					
ANR	72020	GotoStatement	goto rename_succeeded ;	507:6:12998:13019	71628	1	True				
ANR	72021	Identifier	rename_succeeded		71628	0					
ANR	72022	IfStatement	if ( errno == EXDEV )		71628	2					
ANR	72023	Condition	errno == EXDEV	510:11:13037:13050	71628	0	True				
ANR	72024	EqualityExpression	errno == EXDEV		71628	0		==			
ANR	72025	Identifier	errno		71628	0					
ANR	72026	Identifier	EXDEV		71628	1					
ANR	72027	CompoundStatement		68:4:1672:1688	71628	1					
ANR	72028	IdentifierDeclStatement	struct stat tost ;	512:4:13061:13077	71628	0	True				
ANR	72029	IdentifierDecl	tost		71628	0					
ANR	72030	IdentifierDeclType	struct stat		71628	0					
ANR	72031	Identifier	tost		71628	1					
ANR	72032	IfStatement	if ( ! backup )		71628	1					
ANR	72033	Condition	! backup	513:8:13087:13094	71628	0	True				
ANR	72034	UnaryOperationExpression	! backup		71628	0					
ANR	72035	UnaryOperator	!		71628	0					
ANR	72036	Identifier	backup		71628	1					
ANR	72037	CompoundStatement		70:6:1714:1714	71628	1					
ANR	72038	IfStatement	if ( safe_unlink ( to ) == 0 )		71628	0					
ANR	72039	Condition	safe_unlink ( to ) == 0	515:12:13117:13137	71628	0	True				
ANR	72040	EqualityExpression	safe_unlink ( to ) == 0		71628	0		==			
ANR	72041	CallExpression	safe_unlink ( to )		71628	0					
ANR	72042	Callee	safe_unlink		71628	0					
ANR	72043	Identifier	safe_unlink		71628	0					
ANR	72044	ArgumentList	to		71628	1					
ANR	72045	Argument	to		71628	0					
ANR	72046	Identifier	to		71628	0					
ANR	72047	PrimaryExpression	0		71628	1					
ANR	72048	ExpressionStatement	to_dir_known_to_exist = true	516:3:13143:13171	71628	1	True				
ANR	72049	AssignmentExpression	to_dir_known_to_exist = true		71628	0		=			
ANR	72050	Identifier	to_dir_known_to_exist		71628	0					
ANR	72051	Identifier	true		71628	1					
ANR	72052	ElseStatement	else		71628	0					
ANR	72053	IfStatement	if ( errno != ENOENT )		71628	0					
ANR	72054	Condition	errno != ENOENT	517:17:13190:13204	71628	0	True				
ANR	72055	EqualityExpression	errno != ENOENT		71628	0		!=			
ANR	72056	Identifier	errno		71628	0					
ANR	72057	Identifier	ENOENT		71628	1					
ANR	72058	ExpressionStatement	"pfatal ( ""Can't remove file %s"" , quotearg ( to ) )"	518:3:13210:13256	71628	1	True				
ANR	72059	CallExpression	"pfatal ( ""Can't remove file %s"" , quotearg ( to ) )"		71628	0					
ANR	72060	Callee	pfatal		71628	0					
ANR	72061	Identifier	pfatal		71628	0					
ANR	72062	ArgumentList	"""Can't remove file %s"""		71628	1					
ANR	72063	Argument	"""Can't remove file %s"""		71628	0					
ANR	72064	PrimaryExpression	"""Can't remove file %s"""		71628	0					
ANR	72065	Argument	quotearg ( to )		71628	1					
ANR	72066	CallExpression	quotearg ( to )		71628	0					
ANR	72067	Callee	quotearg		71628	0					
ANR	72068	Identifier	quotearg		71628	0					
ANR	72069	ArgumentList	to		71628	1					
ANR	72070	Argument	to		71628	0					
ANR	72071	Identifier	to		71628	0					
ANR	72072	ExpressionStatement	"copy_file ( from , to , & tost , 0 , mode , to_dir_known_to_exist )"	520:4:13270:13329	71628	2	True				
ANR	72073	CallExpression	"copy_file ( from , to , & tost , 0 , mode , to_dir_known_to_exist )"		71628	0					
ANR	72074	Callee	copy_file		71628	0					
ANR	72075	Identifier	copy_file		71628	0					
ANR	72076	ArgumentList	from		71628	1					
ANR	72077	Argument	from		71628	0					
ANR	72078	Identifier	from		71628	0					
ANR	72079	Argument	to		71628	1					
ANR	72080	Identifier	to		71628	0					
ANR	72081	Argument	& tost		71628	2					
ANR	72082	UnaryOperationExpression	& tost		71628	0					
ANR	72083	UnaryOperator	&		71628	0					
ANR	72084	Identifier	tost		71628	1					
ANR	72085	Argument	0		71628	3					
ANR	72086	PrimaryExpression	0		71628	0					
ANR	72087	Argument	mode		71628	4					
ANR	72088	Identifier	mode		71628	0					
ANR	72089	Argument	to_dir_known_to_exist		71628	5					
ANR	72090	Identifier	to_dir_known_to_exist		71628	0					
ANR	72091	ExpressionStatement	"insert_file_id ( & tost , CREATED )"	521:4:13335:13366	71628	3	True				
ANR	72092	CallExpression	"insert_file_id ( & tost , CREATED )"		71628	0					
ANR	72093	Callee	insert_file_id		71628	0					
ANR	72094	Identifier	insert_file_id		71628	0					
ANR	72095	ArgumentList	& tost		71628	1					
ANR	72096	Argument	& tost		71628	0					
ANR	72097	UnaryOperationExpression	& tost		71628	0					
ANR	72098	UnaryOperator	&		71628	0					
ANR	72099	Identifier	tost		71628	1					
ANR	72100	Argument	CREATED		71628	1					
ANR	72101	Identifier	CREATED		71628	0					
ANR	72102	ReturnStatement	return ;	522:4:13372:13378	71628	4	True				
ANR	72103	ExpressionStatement	"pfatal ( ""Can't rename file %s to %s"" , quotearg_n ( 0 , from ) , quotearg_n ( 1 , to ) )"	525:7:13392:13479	71628	3	True				
ANR	72104	CallExpression	"pfatal ( ""Can't rename file %s to %s"" , quotearg_n ( 0 , from ) , quotearg_n ( 1 , to ) )"		71628	0					
ANR	72105	Callee	pfatal		71628	0					
ANR	72106	Identifier	pfatal		71628	0					
ANR	72107	ArgumentList	"""Can't rename file %s to %s"""		71628	1					
ANR	72108	Argument	"""Can't rename file %s to %s"""		71628	0					
ANR	72109	PrimaryExpression	"""Can't rename file %s to %s"""		71628	0					
ANR	72110	Argument	"quotearg_n ( 0 , from )"		71628	1					
ANR	72111	CallExpression	"quotearg_n ( 0 , from )"		71628	0					
ANR	72112	Callee	quotearg_n		71628	0					
ANR	72113	Identifier	quotearg_n		71628	0					
ANR	72114	ArgumentList	0		71628	1					
ANR	72115	Argument	0		71628	0					
ANR	72116	PrimaryExpression	0		71628	0					
ANR	72117	Argument	from		71628	1					
ANR	72118	Identifier	from		71628	0					
ANR	72119	Argument	"quotearg_n ( 1 , to )"		71628	2					
ANR	72120	CallExpression	"quotearg_n ( 1 , to )"		71628	0					
ANR	72121	Callee	quotearg_n		71628	0					
ANR	72122	Identifier	quotearg_n		71628	0					
ANR	72123	ArgumentList	1		71628	1					
ANR	72124	Argument	1		71628	0					
ANR	72125	PrimaryExpression	1		71628	0					
ANR	72126	Argument	to		71628	1					
ANR	72127	Identifier	to		71628	0					
ANR	72128	Label	rename_succeeded :	529:1:13490:13506	71628	2	True				
ANR	72129	Identifier	rename_succeeded		71628	0					
ANR	72130	ExpressionStatement	"insert_file_id ( fromst , CREATED )"	530:3:13511:13543	71628	3	True				
ANR	72131	CallExpression	"insert_file_id ( fromst , CREATED )"		71628	0					
ANR	72132	Callee	insert_file_id		71628	0					
ANR	72133	Identifier	insert_file_id		71628	0					
ANR	72134	ArgumentList	fromst		71628	1					
ANR	72135	Argument	fromst		71628	0					
ANR	72136	Identifier	fromst		71628	0					
ANR	72137	Argument	CREATED		71628	1					
ANR	72138	Identifier	CREATED		71628	0					
ANR	72139	IfStatement	if ( ( 0 < to_errno || ( to_errno == 0 && to_st . st_nlink <= 1 ) ) && from_needs_removal )		71628	4					
ANR	72140	Condition	( 0 < to_errno || ( to_errno == 0 && to_st . st_nlink <= 1 ) ) && from_needs_removal	534:7:13707:13799	71628	0	True				
ANR	72141	AndExpression	( 0 < to_errno || ( to_errno == 0 && to_st . st_nlink <= 1 ) ) && from_needs_removal		71628	0		&&			
ANR	72142	OrExpression	0 < to_errno || ( to_errno == 0 && to_st . st_nlink <= 1 )		71628	0		||			
ANR	72143	RelationalExpression	0 < to_errno		71628	0		<			
ANR	72144	PrimaryExpression	0		71628	0					
ANR	72145	Identifier	to_errno		71628	1					
ANR	72146	AndExpression	to_errno == 0 && to_st . st_nlink <= 1		71628	1		&&			
ANR	72147	EqualityExpression	to_errno == 0		71628	0		==			
ANR	72148	Identifier	to_errno		71628	0					
ANR	72149	PrimaryExpression	0		71628	1					
ANR	72150	RelationalExpression	to_st . st_nlink <= 1		71628	1		<=			
ANR	72151	MemberAccess	to_st . st_nlink		71628	0					
ANR	72152	Identifier	to_st		71628	0					
ANR	72153	Identifier	st_nlink		71628	1					
ANR	72154	PrimaryExpression	1		71628	1					
ANR	72155	Identifier	from_needs_removal		71628	1					
ANR	72156	ExpressionStatement	* from_needs_removal = false	537:5:13807:13834	71628	1	True				
ANR	72157	AssignmentExpression	* from_needs_removal = false		71628	0		=			
ANR	72158	UnaryOperationExpression	* from_needs_removal		71628	0					
ANR	72159	UnaryOperator	*		71628	0					
ANR	72160	Identifier	from_needs_removal		71628	1					
ANR	72161	Identifier	false		71628	1					
ANR	72162	ElseStatement	else		71628	0					
ANR	72163	IfStatement	if ( ! backup )		71628	0					
ANR	72164	Condition	! backup	540:11:13856:13863	71628	0	True				
ANR	72165	UnaryOperationExpression	! backup		71628	0					
ANR	72166	UnaryOperator	!		71628	0					
ANR	72167	Identifier	backup		71628	1					
ANR	72168	CompoundStatement		97:4:2481:2481	71628	1					
ANR	72169	IfStatement	if ( debug & 4 )		71628	0					
ANR	72170	Condition	debug & 4	542:10:13882:13890	71628	0	True				
ANR	72171	BitAndExpression	debug & 4		71628	0		&			
ANR	72172	Identifier	debug		71628	0					
ANR	72173	PrimaryExpression	4		71628	1					
ANR	72174	ExpressionStatement	"say ( ""Removing file %s\\n"" , quotearg ( to ) )"	543:1:13894:13935	71628	1	True				
ANR	72175	CallExpression	"say ( ""Removing file %s\\n"" , quotearg ( to ) )"		71628	0					
ANR	72176	Callee	say		71628	0					
ANR	72177	Identifier	say		71628	0					
ANR	72178	ArgumentList	"""Removing file %s\\n"""		71628	1					
ANR	72179	Argument	"""Removing file %s\\n"""		71628	0					
ANR	72180	PrimaryExpression	"""Removing file %s\\n"""		71628	0					
ANR	72181	Argument	quotearg ( to )		71628	1					
ANR	72182	CallExpression	quotearg ( to )		71628	0					
ANR	72183	Callee	quotearg		71628	0					
ANR	72184	Identifier	quotearg		71628	0					
ANR	72185	ArgumentList	to		71628	1					
ANR	72186	Argument	to		71628	0					
ANR	72187	Identifier	to		71628	0					
ANR	72188	IfStatement	if ( safe_unlink ( to ) != 0 && errno != ENOENT )		71628	1					
ANR	72189	Condition	safe_unlink ( to ) != 0 && errno != ENOENT	544:10:13947:13986	71628	0	True				
ANR	72190	AndExpression	safe_unlink ( to ) != 0 && errno != ENOENT		71628	0		&&			
ANR	72191	EqualityExpression	safe_unlink ( to ) != 0		71628	0		!=			
ANR	72192	CallExpression	safe_unlink ( to )		71628	0					
ANR	72193	Callee	safe_unlink		71628	0					
ANR	72194	Identifier	safe_unlink		71628	0					
ANR	72195	ArgumentList	to		71628	1					
ANR	72196	Argument	to		71628	0					
ANR	72197	Identifier	to		71628	0					
ANR	72198	PrimaryExpression	0		71628	1					
ANR	72199	EqualityExpression	errno != ENOENT		71628	1		!=			
ANR	72200	Identifier	errno		71628	0					
ANR	72201	Identifier	ENOENT		71628	1					
ANR	72202	ExpressionStatement	"pfatal ( ""Can't remove file %s"" , quotearg ( to ) )"	545:1:13990:14036	71628	1	True				
ANR	72203	CallExpression	"pfatal ( ""Can't remove file %s"" , quotearg ( to ) )"		71628	0					
ANR	72204	Callee	pfatal		71628	0					
ANR	72205	Identifier	pfatal		71628	0					
ANR	72206	ArgumentList	"""Can't remove file %s"""		71628	1					
ANR	72207	Argument	"""Can't remove file %s"""		71628	0					
ANR	72208	PrimaryExpression	"""Can't remove file %s"""		71628	0					
ANR	72209	Argument	quotearg ( to )		71628	1					
ANR	72210	CallExpression	quotearg ( to )		71628	0					
ANR	72211	Callee	quotearg		71628	0					
ANR	72212	Identifier	quotearg		71628	0					
ANR	72213	ArgumentList	to		71628	1					
ANR	72214	Argument	to		71628	0					
ANR	72215	Identifier	to		71628	0					
ANR	72216	ReturnType	void		71628	1					
ANR	72217	Identifier	move_file		71628	2					
ANR	72218	ParameterList	"char const * from , bool * from_needs_removal , struct stat const * fromst , char const * to , mode_t mode , bool backup"		71628	3					
ANR	72219	Parameter	char const * from	442:11:11267:11282	71628	0	True				
ANR	72220	ParameterType	char const *		71628	0					
ANR	72221	Identifier	from		71628	1					
ANR	72222	Parameter	bool * from_needs_removal	442:29:11285:11308	71628	1	True				
ANR	72223	ParameterType	bool *		71628	0					
ANR	72224	Identifier	from_needs_removal		71628	1					
ANR	72225	Parameter	struct stat const * fromst	443:4:11315:11339	71628	2	True				
ANR	72226	ParameterType	struct stat const *		71628	0					
ANR	72227	Identifier	fromst		71628	1					
ANR	72228	Parameter	char const * to	444:4:11346:11359	71628	3	True				
ANR	72229	ParameterType	char const *		71628	0					
ANR	72230	Identifier	to		71628	1					
ANR	72231	Parameter	mode_t mode	444:20:11362:11372	71628	4	True				
ANR	72232	ParameterType	mode_t		71628	0					
ANR	72233	Identifier	mode		71628	1					
ANR	72234	Parameter	bool backup	444:33:11375:11385	71628	5	True				
ANR	72235	ParameterType	bool		71628	0					
ANR	72236	Identifier	backup		71628	1					
ANR	72237	CFGEntryNode	ENTRY		71628		True				
ANR	72238	CFGExitNode	EXIT		71628		True				
ANR	72239	Symbol	backup		71628						
ANR	72240	Symbol	fromst		71628						
ANR	72241	Symbol	quotearg		71628						
ANR	72242	Symbol	O_BINARY		71628						
ANR	72243	Symbol	quotearg_n		71628						
ANR	72244	Symbol	to_st . st_nlink		71628						
ANR	72245	Symbol	safe_unlink		71628						
ANR	72246	Symbol	& tost		71628						
ANR	72247	Symbol	OVERWRITTEN		71628						
ANR	72248	Symbol	mode		71628						
ANR	72249	Symbol	CREATED		71628						
ANR	72250	Symbol	* size		71628						
ANR	72251	Symbol	xmalloc		71628						
ANR	72252	Symbol	safe_rename		71628						
ANR	72253	Symbol	EXDEV		71628						
ANR	72254	Symbol	from_needs_removal		71628						
ANR	72255	Symbol	stat_file		71628						
ANR	72256	Symbol	from		71628						
ANR	72257	Symbol	buffer		71628						
ANR	72258	Symbol	close		71628						
ANR	72259	Symbol	S_ISLNK		71628						
ANR	72260	Symbol	to_errno		71628						
ANR	72261	Symbol	* buffer		71628						
ANR	72262	Symbol	errno		71628						
ANR	72263	Symbol	NULL		71628						
ANR	72264	Symbol	read		71628						
ANR	72265	Symbol	debug		71628						
ANR	72266	Symbol	PATH_MAX		71628						
ANR	72267	Symbol	false		71628						
ANR	72268	Symbol	i		71628						
ANR	72269	Symbol	tost		71628						
ANR	72270	Symbol	ENOENT		71628						
ANR	72271	Symbol	to_dir_known_to_exist		71628						
ANR	72272	Symbol	* from_needs_removal		71628						
ANR	72273	Symbol	safe_symlink		71628						
ANR	72274	Symbol	safe_open		71628						
ANR	72275	Symbol	to_st		71628						
ANR	72276	Symbol	O_RDONLY		71628						
ANR	72277	Symbol	safe_lstat		71628						
ANR	72278	Symbol	size		71628						
ANR	72279	Symbol	& to_st		71628						
ANR	72280	Symbol	true		71628						
ANR	72281	Symbol	to		71628						
ANR	72282	Symbol	fd		71628						
ANR	72283	Function	create_file	552:0:14216:14878							
ANR	72284	FunctionDef	"create_file (char const * file , int open_flags , mode_t mode , bool to_dir_known_to_exist)"		72283	0					
ANR	72285	CompoundStatement		555:0:14314:14878	72283	0					
ANR	72286	IdentifierDeclStatement	int try_makedirs_errno = to_dir_known_to_exist ? 0 : ENOENT ;	556:2:14318:14377	72283	0	True				
ANR	72287	IdentifierDecl	try_makedirs_errno = to_dir_known_to_exist ? 0 : ENOENT		72283	0					
ANR	72288	IdentifierDeclType	int		72283	0					
ANR	72289	Identifier	try_makedirs_errno		72283	1					
ANR	72290	AssignmentExpression	try_makedirs_errno = to_dir_known_to_exist ? 0 : ENOENT		72283	2		=			
ANR	72291	Identifier	try_makedirs_errno		72283	0					
ANR	72292	ConditionalExpression	to_dir_known_to_exist ? 0 : ENOENT		72283	1					
ANR	72293	Condition	to_dir_known_to_exist		72283	0					
ANR	72294	Identifier	to_dir_known_to_exist		72283	0					
ANR	72295	PrimaryExpression	0		72283	1					
ANR	72296	Identifier	ENOENT		72283	2					
ANR	72297	IdentifierDeclStatement	int fd ;	557:2:14381:14387	72283	1	True				
ANR	72298	IdentifierDecl	fd		72283	0					
ANR	72299	IdentifierDeclType	int		72283	0					
ANR	72300	Identifier	fd		72283	1					
ANR	72301	ExpressionStatement	mode |= S_IRUSR | S_IWUSR	558:2:14391:14416	72283	2	True				
ANR	72302	AssignmentExpression	mode |= S_IRUSR | S_IWUSR		72283	0		|=			
ANR	72303	Identifier	mode		72283	0					
ANR	72304	InclusiveOrExpression	S_IRUSR | S_IWUSR		72283	1		|			
ANR	72305	Identifier	S_IRUSR		72283	0					
ANR	72306	Identifier	S_IWUSR		72283	1					
ANR	72307	ExpressionStatement	mode &= ~ ( S_IXUSR | S_IXGRP | S_IXOTH )	559:2:14420:14459	72283	3	True				
ANR	72308	AssignmentExpression	mode &= ~ ( S_IXUSR | S_IXGRP | S_IXOTH )		72283	0		&=			
ANR	72309	Identifier	mode		72283	0					
ANR	72310	UnaryOperationExpression	~ ( S_IXUSR | S_IXGRP | S_IXOTH )		72283	1					
ANR	72311	UnaryOperator	~		72283	0					
ANR	72312	InclusiveOrExpression	S_IXUSR | S_IXGRP | S_IXOTH		72283	1		|			
ANR	72313	Identifier	S_IXUSR		72283	0					
ANR	72314	InclusiveOrExpression	S_IXGRP | S_IXOTH		72283	1		|			
ANR	72315	Identifier	S_IXGRP		72283	0					
ANR	72316	Identifier	S_IXOTH		72283	1					
ANR	72317	DoStatement	do		72283	4					
ANR	72318	CompoundStatement		7:4:155:155	72283	0					
ANR	72319	IfStatement	if ( ! ( O_CREAT && O_TRUNC ) )		72283	0					
ANR	72320	Condition	! ( O_CREAT && O_TRUNC )	562:10:14482:14503	72283	0	True				
ANR	72321	UnaryOperationExpression	! ( O_CREAT && O_TRUNC )		72283	0					
ANR	72322	UnaryOperator	!		72283	0					
ANR	72323	AndExpression	O_CREAT && O_TRUNC		72283	1		&&			
ANR	72324	Identifier	O_CREAT		72283	0					
ANR	72325	Identifier	O_TRUNC		72283	1					
ANR	72326	ExpressionStatement	"close ( safe_open ( file , O_CREAT | O_WRONLY | O_TRUNC , mode ) )"	563:1:14507:14567	72283	1	True				
ANR	72327	CallExpression	"close ( safe_open ( file , O_CREAT | O_WRONLY | O_TRUNC , mode ) )"		72283	0					
ANR	72328	Callee	close		72283	0					
ANR	72329	Identifier	close		72283	0					
ANR	72330	ArgumentList	"safe_open ( file , O_CREAT | O_WRONLY | O_TRUNC , mode )"		72283	1					
ANR	72331	Argument	"safe_open ( file , O_CREAT | O_WRONLY | O_TRUNC , mode )"		72283	0					
ANR	72332	CallExpression	"safe_open ( file , O_CREAT | O_WRONLY | O_TRUNC , mode )"		72283	0					
ANR	72333	Callee	safe_open		72283	0					
ANR	72334	Identifier	safe_open		72283	0					
ANR	72335	ArgumentList	file		72283	1					
ANR	72336	Argument	file		72283	0					
ANR	72337	Identifier	file		72283	0					
ANR	72338	Argument	O_CREAT | O_WRONLY | O_TRUNC		72283	1					
ANR	72339	InclusiveOrExpression	O_CREAT | O_WRONLY | O_TRUNC		72283	0		|			
ANR	72340	Identifier	O_CREAT		72283	0					
ANR	72341	InclusiveOrExpression	O_WRONLY | O_TRUNC		72283	1		|			
ANR	72342	Identifier	O_WRONLY		72283	0					
ANR	72343	Identifier	O_TRUNC		72283	1					
ANR	72344	Argument	mode		72283	2					
ANR	72345	Identifier	mode		72283	0					
ANR	72346	ExpressionStatement	"fd = safe_open ( file , O_CREAT | O_TRUNC | open_flags , mode )"	564:6:14575:14634	72283	1	True				
ANR	72347	AssignmentExpression	"fd = safe_open ( file , O_CREAT | O_TRUNC | open_flags , mode )"		72283	0		=			
ANR	72348	Identifier	fd		72283	0					
ANR	72349	CallExpression	"safe_open ( file , O_CREAT | O_TRUNC | open_flags , mode )"		72283	1					
ANR	72350	Callee	safe_open		72283	0					
ANR	72351	Identifier	safe_open		72283	0					
ANR	72352	ArgumentList	file		72283	1					
ANR	72353	Argument	file		72283	0					
ANR	72354	Identifier	file		72283	0					
ANR	72355	Argument	O_CREAT | O_TRUNC | open_flags		72283	1					
ANR	72356	InclusiveOrExpression	O_CREAT | O_TRUNC | open_flags		72283	0		|			
ANR	72357	Identifier	O_CREAT		72283	0					
ANR	72358	InclusiveOrExpression	O_TRUNC | open_flags		72283	1		|			
ANR	72359	Identifier	O_TRUNC		72283	0					
ANR	72360	Identifier	open_flags		72283	1					
ANR	72361	Argument	mode		72283	2					
ANR	72362	Identifier	mode		72283	0					
ANR	72363	IfStatement	if ( fd < 0 )		72283	2					
ANR	72364	Condition	fd < 0	565:10:14646:14651	72283	0	True				
ANR	72365	RelationalExpression	fd < 0		72283	0		<			
ANR	72366	Identifier	fd		72283	0					
ANR	72367	PrimaryExpression	0		72283	1					
ANR	72368	CompoundStatement		13:3:345:352	72283	1					
ANR	72369	IdentifierDeclStatement	char * f ;	567:3:14660:14667	72283	0	True				
ANR	72370	IdentifierDecl	* f		72283	0					
ANR	72371	IdentifierDeclType	char *		72283	0					
ANR	72372	Identifier	f		72283	1					
ANR	72373	IfStatement	if ( errno != try_makedirs_errno )		72283	1					
ANR	72374	Condition	errno != try_makedirs_errno	568:7:14676:14702	72283	0	True				
ANR	72375	EqualityExpression	errno != try_makedirs_errno		72283	0		!=			
ANR	72376	Identifier	errno		72283	0					
ANR	72377	Identifier	try_makedirs_errno		72283	1					
ANR	72378	ExpressionStatement	"pfatal ( ""Can't create file %s"" , quotearg ( file ) )"	569:5:14710:14758	72283	1	True				
ANR	72379	CallExpression	"pfatal ( ""Can't create file %s"" , quotearg ( file ) )"		72283	0					
ANR	72380	Callee	pfatal		72283	0					
ANR	72381	Identifier	pfatal		72283	0					
ANR	72382	ArgumentList	"""Can't create file %s"""		72283	1					
ANR	72383	Argument	"""Can't create file %s"""		72283	0					
ANR	72384	PrimaryExpression	"""Can't create file %s"""		72283	0					
ANR	72385	Argument	quotearg ( file )		72283	1					
ANR	72386	CallExpression	quotearg ( file )		72283	0					
ANR	72387	Callee	quotearg		72283	0					
ANR	72388	Identifier	quotearg		72283	0					
ANR	72389	ArgumentList	file		72283	1					
ANR	72390	Argument	file		72283	0					
ANR	72391	Identifier	file		72283	0					
ANR	72392	ExpressionStatement	f = xstrdup ( file )	570:3:14763:14781	72283	2	True				
ANR	72393	AssignmentExpression	f = xstrdup ( file )		72283	0		=			
ANR	72394	Identifier	f		72283	0					
ANR	72395	CallExpression	xstrdup ( file )		72283	1					
ANR	72396	Callee	xstrdup		72283	0					
ANR	72397	Identifier	xstrdup		72283	0					
ANR	72398	ArgumentList	file		72283	1					
ANR	72399	Argument	file		72283	0					
ANR	72400	Identifier	file		72283	0					
ANR	72401	ExpressionStatement	makedirs ( f )	571:3:14786:14798	72283	3	True				
ANR	72402	CallExpression	makedirs ( f )		72283	0					
ANR	72403	Callee	makedirs		72283	0					
ANR	72404	Identifier	makedirs		72283	0					
ANR	72405	ArgumentList	f		72283	1					
ANR	72406	Argument	f		72283	0					
ANR	72407	Identifier	f		72283	0					
ANR	72408	ExpressionStatement	free ( f )	572:3:14803:14811	72283	4	True				
ANR	72409	CallExpression	free ( f )		72283	0					
ANR	72410	Callee	free		72283	0					
ANR	72411	Identifier	free		72283	0					
ANR	72412	ArgumentList	f		72283	1					
ANR	72413	Argument	f		72283	0					
ANR	72414	Identifier	f		72283	0					
ANR	72415	ExpressionStatement	try_makedirs_errno = 0	573:3:14816:14838	72283	5	True				
ANR	72416	AssignmentExpression	try_makedirs_errno = 0		72283	0		=			
ANR	72417	Identifier	try_makedirs_errno		72283	0					
ANR	72418	PrimaryExpression	0		72283	1					
ANR	72419	Condition	fd < 0	575:13:14856:14861	72283	1	True				
ANR	72420	RelationalExpression	fd < 0		72283	0		<			
ANR	72421	Identifier	fd		72283	0					
ANR	72422	PrimaryExpression	0		72283	1					
ANR	72423	ReturnStatement	return fd ;	576:2:14867:14876	72283	5	True				
ANR	72424	Identifier	fd		72283	0					
ANR	72425	ReturnType	int		72283	1					
ANR	72426	Identifier	create_file		72283	2					
ANR	72427	ParameterList	"char const * file , int open_flags , mode_t mode , bool to_dir_known_to_exist"		72283	3					
ANR	72428	Parameter	char const * file	553:13:14233:14248	72283	0	True				
ANR	72429	ParameterType	char const *		72283	0					
ANR	72430	Identifier	file		72283	1					
ANR	72431	Parameter	int open_flags	553:31:14251:14264	72283	1	True				
ANR	72432	ParameterType	int		72283	0					
ANR	72433	Identifier	open_flags		72283	1					
ANR	72434	Parameter	mode_t mode	553:47:14267:14277	72283	2	True				
ANR	72435	ParameterType	mode_t		72283	0					
ANR	72436	Identifier	mode		72283	1					
ANR	72437	Parameter	bool to_dir_known_to_exist	554:6:14286:14311	72283	3	True				
ANR	72438	ParameterType	bool		72283	0					
ANR	72439	Identifier	to_dir_known_to_exist		72283	1					
ANR	72440	CFGEntryNode	ENTRY		72283		True				
ANR	72441	CFGExitNode	EXIT		72283		True				
ANR	72442	Symbol	errno		72283						
ANR	72443	Symbol	quotearg		72283						
ANR	72444	Symbol	S_IXGRP		72283						
ANR	72445	Symbol	O_CREAT		72283						
ANR	72446	Symbol	f		72283						
ANR	72447	Symbol	S_IXOTH		72283						
ANR	72448	Symbol	xstrdup		72283						
ANR	72449	Symbol	open_flags		72283						
ANR	72450	Symbol	ENOENT		72283						
ANR	72451	Symbol	to_dir_known_to_exist		72283						
ANR	72452	Symbol	safe_open		72283						
ANR	72453	Symbol	mode		72283						
ANR	72454	Symbol	O_TRUNC		72283						
ANR	72455	Symbol	file		72283						
ANR	72456	Symbol	S_IRUSR		72283						
ANR	72457	Symbol	S_IWUSR		72283						
ANR	72458	Symbol	S_IXUSR		72283						
ANR	72459	Symbol	O_WRONLY		72283						
ANR	72460	Symbol	try_makedirs_errno		72283						
ANR	72461	Symbol	fd		72283						
ANR	72462	Function	copy_to_fd	579:0:14881:15291							
ANR	72463	FunctionDef	"copy_to_fd (const char * from , int tofd)"		72462	0					
ANR	72464	CompoundStatement		581:0:14933:15291	72462	0					
ANR	72465	IdentifierDeclStatement	int fromfd ;	582:2:14937:14947	72462	0	True				
ANR	72466	IdentifierDecl	fromfd		72462	0					
ANR	72467	IdentifierDeclType	int		72462	0					
ANR	72468	Identifier	fromfd		72462	1					
ANR	72469	IdentifierDeclStatement	ssize_t i ;	583:2:14951:14960	72462	1	True				
ANR	72470	IdentifierDecl	i		72462	0					
ANR	72471	IdentifierDeclType	ssize_t		72462	0					
ANR	72472	Identifier	i		72462	1					
ANR	72473	IfStatement	"if ( ( fromfd = safe_open ( from , O_RDONLY | O_BINARY , 0 ) ) < 0 )"		72462	2					
ANR	72474	Condition	"( fromfd = safe_open ( from , O_RDONLY | O_BINARY , 0 ) ) < 0"	585:6:14969:15023	72462	0	True				
ANR	72475	RelationalExpression	"( fromfd = safe_open ( from , O_RDONLY | O_BINARY , 0 ) ) < 0"		72462	0		<			
ANR	72476	AssignmentExpression	"fromfd = safe_open ( from , O_RDONLY | O_BINARY , 0 )"		72462	0		=			
ANR	72477	Identifier	fromfd		72462	0					
ANR	72478	CallExpression	"safe_open ( from , O_RDONLY | O_BINARY , 0 )"		72462	1					
ANR	72479	Callee	safe_open		72462	0					
ANR	72480	Identifier	safe_open		72462	0					
ANR	72481	ArgumentList	from		72462	1					
ANR	72482	Argument	from		72462	0					
ANR	72483	Identifier	from		72462	0					
ANR	72484	Argument	O_RDONLY | O_BINARY		72462	1					
ANR	72485	InclusiveOrExpression	O_RDONLY | O_BINARY		72462	0		|			
ANR	72486	Identifier	O_RDONLY		72462	0					
ANR	72487	Identifier	O_BINARY		72462	1					
ANR	72488	Argument	0		72462	2					
ANR	72489	PrimaryExpression	0		72462	0					
ANR	72490	PrimaryExpression	0		72462	1					
ANR	72491	ExpressionStatement	"pfatal ( ""Can't reopen file %s"" , quotearg ( from ) )"	586:4:15030:15078	72462	1	True				
ANR	72492	CallExpression	"pfatal ( ""Can't reopen file %s"" , quotearg ( from ) )"		72462	0					
ANR	72493	Callee	pfatal		72462	0					
ANR	72494	Identifier	pfatal		72462	0					
ANR	72495	ArgumentList	"""Can't reopen file %s"""		72462	1					
ANR	72496	Argument	"""Can't reopen file %s"""		72462	0					
ANR	72497	PrimaryExpression	"""Can't reopen file %s"""		72462	0					
ANR	72498	Argument	quotearg ( from )		72462	1					
ANR	72499	CallExpression	quotearg ( from )		72462	0					
ANR	72500	Callee	quotearg		72462	0					
ANR	72501	Identifier	quotearg		72462	0					
ANR	72502	ArgumentList	from		72462	1					
ANR	72503	Argument	from		72462	0					
ANR	72504	Identifier	from		72462	0					
ANR	72505	WhileStatement	"while ( ( i = read ( fromfd , buf , bufsize ) ) != 0 )"		72462	3					
ANR	72506	Condition	"( i = read ( fromfd , buf , bufsize ) ) != 0"	587:9:15089:15126	72462	0	True				
ANR	72507	EqualityExpression	"( i = read ( fromfd , buf , bufsize ) ) != 0"		72462	0		!=			
ANR	72508	AssignmentExpression	"i = read ( fromfd , buf , bufsize )"		72462	0		=			
ANR	72509	Identifier	i		72462	0					
ANR	72510	CallExpression	"read ( fromfd , buf , bufsize )"		72462	1					
ANR	72511	Callee	read		72462	0					
ANR	72512	Identifier	read		72462	0					
ANR	72513	ArgumentList	fromfd		72462	1					
ANR	72514	Argument	fromfd		72462	0					
ANR	72515	Identifier	fromfd		72462	0					
ANR	72516	Argument	buf		72462	1					
ANR	72517	Identifier	buf		72462	0					
ANR	72518	Argument	bufsize		72462	2					
ANR	72519	Identifier	bufsize		72462	0					
ANR	72520	PrimaryExpression	0		72462	1					
ANR	72521	CompoundStatement		8:4:199:199	72462	1					
ANR	72522	IfStatement	if ( i == ( ssize_t ) - 1 )		72462	0					
ANR	72523	Condition	i == ( ssize_t ) - 1	589:10:15145:15161	72462	0	True				
ANR	72524	EqualityExpression	i == ( ssize_t ) - 1		72462	0		==			
ANR	72525	Identifier	i		72462	0					
ANR	72526	CastExpression	( ssize_t ) - 1		72462	1					
ANR	72527	CastTarget	ssize_t		72462	0					
ANR	72528	UnaryOperationExpression	- 1		72462	1					
ANR	72529	UnaryOperator	-		72462	0					
ANR	72530	PrimaryExpression	1		72462	1					
ANR	72531	ExpressionStatement	read_fatal ( )	590:1:15165:15178	72462	1	True				
ANR	72532	CallExpression	read_fatal ( )		72462	0					
ANR	72533	Callee	read_fatal		72462	0					
ANR	72534	Identifier	read_fatal		72462	0					
ANR	72535	ArgumentList			72462	1					
ANR	72536	IfStatement	"if ( full_write ( tofd , buf , i ) != i )"		72462	1					
ANR	72537	Condition	"full_write ( tofd , buf , i ) != i"	591:10:15190:15219	72462	0	True				
ANR	72538	EqualityExpression	"full_write ( tofd , buf , i ) != i"		72462	0		!=			
ANR	72539	CallExpression	"full_write ( tofd , buf , i )"		72462	0					
ANR	72540	Callee	full_write		72462	0					
ANR	72541	Identifier	full_write		72462	0					
ANR	72542	ArgumentList	tofd		72462	1					
ANR	72543	Argument	tofd		72462	0					
ANR	72544	Identifier	tofd		72462	0					
ANR	72545	Argument	buf		72462	1					
ANR	72546	Identifier	buf		72462	0					
ANR	72547	Argument	i		72462	2					
ANR	72548	Identifier	i		72462	0					
ANR	72549	Identifier	i		72462	1					
ANR	72550	ExpressionStatement	write_fatal ( )	592:1:15223:15237	72462	1	True				
ANR	72551	CallExpression	write_fatal ( )		72462	0					
ANR	72552	Callee	write_fatal		72462	0					
ANR	72553	Identifier	write_fatal		72462	0					
ANR	72554	ArgumentList			72462	1					
ANR	72555	IfStatement	if ( close ( fromfd ) != 0 )		72462	4					
ANR	72556	Condition	close ( fromfd ) != 0	594:6:15251:15269	72462	0	True				
ANR	72557	EqualityExpression	close ( fromfd ) != 0		72462	0		!=			
ANR	72558	CallExpression	close ( fromfd )		72462	0					
ANR	72559	Callee	close		72462	0					
ANR	72560	Identifier	close		72462	0					
ANR	72561	ArgumentList	fromfd		72462	1					
ANR	72562	Argument	fromfd		72462	0					
ANR	72563	Identifier	fromfd		72462	0					
ANR	72564	PrimaryExpression	0		72462	1					
ANR	72565	ExpressionStatement	read_fatal ( )	595:4:15276:15289	72462	1	True				
ANR	72566	CallExpression	read_fatal ( )		72462	0					
ANR	72567	Callee	read_fatal		72462	0					
ANR	72568	Identifier	read_fatal		72462	0					
ANR	72569	ArgumentList			72462	1					
ANR	72570	ReturnType	static void		72462	1					
ANR	72571	Identifier	copy_to_fd		72462	2					
ANR	72572	ParameterList	"const char * from , int tofd"		72462	3					
ANR	72573	Parameter	const char * from	580:12:14905:14920	72462	0	True				
ANR	72574	ParameterType	const char *		72462	0					
ANR	72575	Identifier	from		72462	1					
ANR	72576	Parameter	int tofd	580:30:14923:14930	72462	1	True				
ANR	72577	ParameterType	int		72462	0					
ANR	72578	Identifier	tofd		72462	1					
ANR	72579	CFGEntryNode	ENTRY		72462		True				
ANR	72580	CFGExitNode	EXIT		72462		True				
ANR	72581	Symbol	fromfd		72462						
ANR	72582	Symbol	quotearg		72462						
ANR	72583	Symbol	read		72462						
ANR	72584	Symbol	O_BINARY		72462						
ANR	72585	Symbol	full_write		72462						
ANR	72586	Symbol	bufsize		72462						
ANR	72587	Symbol	i		72462						
ANR	72588	Symbol	tofd		72462						
ANR	72589	Symbol	safe_open		72462						
ANR	72590	Symbol	buf		72462						
ANR	72591	Symbol	O_RDONLY		72462						
ANR	72592	Symbol	from		72462						
ANR	72593	Symbol	close		72462						
ANR	72594	Function	copy_file	600:0:15314:16391							
ANR	72595	FunctionDef	"copy_file (char const * from , char const * to , struct stat * tost , int to_flags , mode_t mode , bool to_dir_known_to_exist)"		72594	0					
ANR	72596	CompoundStatement		603:0:15442:16391	72594	0					
ANR	72597	IdentifierDeclStatement	int tofd ;	604:2:15446:15454	72594	0	True				
ANR	72598	IdentifierDecl	tofd		72594	0					
ANR	72599	IdentifierDeclType	int		72594	0					
ANR	72600	Identifier	tofd		72594	1					
ANR	72601	IfStatement	if ( debug & 4 )		72594	1					
ANR	72602	Condition	debug & 4	606:6:15463:15471	72594	0	True				
ANR	72603	BitAndExpression	debug & 4		72594	0		&			
ANR	72604	Identifier	debug		72594	0					
ANR	72605	PrimaryExpression	4		72594	1					
ANR	72606	ExpressionStatement	"say ( ""Copying %s %s to %s\\n"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg_n ( 0 , from ) , quotearg_n ( 1 , to ) )"	607:4:15478:15596	72594	1	True				
ANR	72607	CallExpression	"say ( ""Copying %s %s to %s\\n"" , S_ISLNK ( mode ) ? ""symbolic link"" : ""file"" , quotearg_n ( 0 , from ) , quotearg_n ( 1 , to ) )"		72594	0					
ANR	72608	Callee	say		72594	0					
ANR	72609	Identifier	say		72594	0					
ANR	72610	ArgumentList	"""Copying %s %s to %s\\n"""		72594	1					
ANR	72611	Argument	"""Copying %s %s to %s\\n"""		72594	0					
ANR	72612	PrimaryExpression	"""Copying %s %s to %s\\n"""		72594	0					
ANR	72613	Argument	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		72594	1					
ANR	72614	ConditionalExpression	"S_ISLNK ( mode ) ? ""symbolic link"" : ""file"""		72594	0					
ANR	72615	Condition	S_ISLNK ( mode )		72594	0					
ANR	72616	CallExpression	S_ISLNK ( mode )		72594	0					
ANR	72617	Callee	S_ISLNK		72594	0					
ANR	72618	Identifier	S_ISLNK		72594	0					
ANR	72619	ArgumentList	mode		72594	1					
ANR	72620	Argument	mode		72594	0					
ANR	72621	Identifier	mode		72594	0					
ANR	72622	PrimaryExpression	"""symbolic link"""		72594	1					
ANR	72623	PrimaryExpression	"""file"""		72594	2					
ANR	72624	Argument	"quotearg_n ( 0 , from )"		72594	2					
ANR	72625	CallExpression	"quotearg_n ( 0 , from )"		72594	0					
ANR	72626	Callee	quotearg_n		72594	0					
ANR	72627	Identifier	quotearg_n		72594	0					
ANR	72628	ArgumentList	0		72594	1					
ANR	72629	Argument	0		72594	0					
ANR	72630	PrimaryExpression	0		72594	0					
ANR	72631	Argument	from		72594	1					
ANR	72632	Identifier	from		72594	0					
ANR	72633	Argument	"quotearg_n ( 1 , to )"		72594	3					
ANR	72634	CallExpression	"quotearg_n ( 1 , to )"		72594	0					
ANR	72635	Callee	quotearg_n		72594	0					
ANR	72636	Identifier	quotearg_n		72594	0					
ANR	72637	ArgumentList	1		72594	1					
ANR	72638	Argument	1		72594	0					
ANR	72639	PrimaryExpression	1		72594	0					
ANR	72640	Argument	to		72594	1					
ANR	72641	Identifier	to		72594	0					
ANR	72642	IfStatement	if ( S_ISLNK ( mode ) )		72594	2					
ANR	72643	Condition	S_ISLNK ( mode )	611:6:15605:15618	72594	0	True				
ANR	72644	CallExpression	S_ISLNK ( mode )		72594	0					
ANR	72645	Callee	S_ISLNK		72594	0					
ANR	72646	Identifier	S_ISLNK		72594	0					
ANR	72647	ArgumentList	mode		72594	1					
ANR	72648	Argument	mode		72594	0					
ANR	72649	Identifier	mode		72594	0					
ANR	72650	CompoundStatement		12:6:235:244	72594	1					
ANR	72651	IdentifierDeclStatement	char * buffer = xmalloc ( PATH_MAX + 1 ) ;	613:6:15633:15670	72594	0	True				
ANR	72652	IdentifierDecl	* buffer = xmalloc ( PATH_MAX + 1 )		72594	0					
ANR	72653	IdentifierDeclType	char *		72594	0					
ANR	72654	Identifier	buffer		72594	1					
ANR	72655	AssignmentExpression	* buffer = xmalloc ( PATH_MAX + 1 )		72594	2		=			
ANR	72656	Identifier	buffer		72594	0					
ANR	72657	CallExpression	xmalloc ( PATH_MAX + 1 )		72594	1					
ANR	72658	Callee	xmalloc		72594	0					
ANR	72659	Identifier	xmalloc		72594	0					
ANR	72660	ArgumentList	PATH_MAX + 1		72594	1					
ANR	72661	Argument	PATH_MAX + 1		72594	0					
ANR	72662	AdditiveExpression	PATH_MAX + 1		72594	0		+			
ANR	72663	Identifier	PATH_MAX		72594	0					
ANR	72664	PrimaryExpression	1		72594	1					
ANR	72665	IdentifierDeclStatement	ssize_t r ;	614:6:15678:15687	72594	1	True				
ANR	72666	IdentifierDecl	r		72594	0					
ANR	72667	IdentifierDeclType	ssize_t		72594	0					
ANR	72668	Identifier	r		72594	1					
ANR	72669	IfStatement	"if ( ( r = safe_readlink ( from , buffer , PATH_MAX ) ) < 0 )"		72594	2					
ANR	72670	Condition	"( r = safe_readlink ( from , buffer , PATH_MAX ) ) < 0"	616:10:15700:15747	72594	0	True				
ANR	72671	RelationalExpression	"( r = safe_readlink ( from , buffer , PATH_MAX ) ) < 0"		72594	0		<			
ANR	72672	AssignmentExpression	"r = safe_readlink ( from , buffer , PATH_MAX )"		72594	0		=			
ANR	72673	Identifier	r		72594	0					
ANR	72674	CallExpression	"safe_readlink ( from , buffer , PATH_MAX )"		72594	1					
ANR	72675	Callee	safe_readlink		72594	0					
ANR	72676	Identifier	safe_readlink		72594	0					
ANR	72677	ArgumentList	from		72594	1					
ANR	72678	Argument	from		72594	0					
ANR	72679	Identifier	from		72594	0					
ANR	72680	Argument	buffer		72594	1					
ANR	72681	Identifier	buffer		72594	0					
ANR	72682	Argument	PATH_MAX		72594	2					
ANR	72683	Identifier	PATH_MAX		72594	0					
ANR	72684	PrimaryExpression	0		72594	1					
ANR	72685	ExpressionStatement	"pfatal ( ""Can't read %s %s"" , ""symbolic link"" , from )"	617:1:15751:15801	72594	1	True				
ANR	72686	CallExpression	"pfatal ( ""Can't read %s %s"" , ""symbolic link"" , from )"		72594	0					
ANR	72687	Callee	pfatal		72594	0					
ANR	72688	Identifier	pfatal		72594	0					
ANR	72689	ArgumentList	"""Can't read %s %s"""		72594	1					
ANR	72690	Argument	"""Can't read %s %s"""		72594	0					
ANR	72691	PrimaryExpression	"""Can't read %s %s"""		72594	0					
ANR	72692	Argument	"""symbolic link"""		72594	1					
ANR	72693	PrimaryExpression	"""symbolic link"""		72594	0					
ANR	72694	Argument	from		72594	2					
ANR	72695	Identifier	from		72594	0					
ANR	72696	ExpressionStatement	buffer [ r ] = '\\0'	618:6:15809:15825	72594	3	True				
ANR	72697	AssignmentExpression	buffer [ r ] = '\\0'		72594	0		=			
ANR	72698	ArrayIndexing	buffer [ r ]		72594	0					
ANR	72699	Identifier	buffer		72594	0					
ANR	72700	Identifier	r		72594	1					
ANR	72701	PrimaryExpression	'\\0'		72594	1					
ANR	72702	IfStatement	"if ( safe_symlink ( buffer , to ) != 0 )"		72594	4					
ANR	72703	Condition	"safe_symlink ( buffer , to ) != 0"	619:10:15837:15866	72594	0	True				
ANR	72704	EqualityExpression	"safe_symlink ( buffer , to ) != 0"		72594	0		!=			
ANR	72705	CallExpression	"safe_symlink ( buffer , to )"		72594	0					
ANR	72706	Callee	safe_symlink		72594	0					
ANR	72707	Identifier	safe_symlink		72594	0					
ANR	72708	ArgumentList	buffer		72594	1					
ANR	72709	Argument	buffer		72594	0					
ANR	72710	Identifier	buffer		72594	0					
ANR	72711	Argument	to		72594	1					
ANR	72712	Identifier	to		72594	0					
ANR	72713	PrimaryExpression	0		72594	1					
ANR	72714	ExpressionStatement	"pfatal ( ""Can't create %s %s"" , ""symbolic link"" , to )"	620:1:15870:15920	72594	1	True				
ANR	72715	CallExpression	"pfatal ( ""Can't create %s %s"" , ""symbolic link"" , to )"		72594	0					
ANR	72716	Callee	pfatal		72594	0					
ANR	72717	Identifier	pfatal		72594	0					
ANR	72718	ArgumentList	"""Can't create %s %s"""		72594	1					
ANR	72719	Argument	"""Can't create %s %s"""		72594	0					
ANR	72720	PrimaryExpression	"""Can't create %s %s"""		72594	0					
ANR	72721	Argument	"""symbolic link"""		72594	1					
ANR	72722	PrimaryExpression	"""symbolic link"""		72594	0					
ANR	72723	Argument	to		72594	2					
ANR	72724	Identifier	to		72594	0					
ANR	72725	IfStatement	"if ( tost && safe_lstat ( to , tost ) != 0 )"		72594	5					
ANR	72726	Condition	"tost && safe_lstat ( to , tost ) != 0"	621:10:15932:15965	72594	0	True				
ANR	72727	AndExpression	"tost && safe_lstat ( to , tost ) != 0"		72594	0		&&			
ANR	72728	Identifier	tost		72594	0					
ANR	72729	EqualityExpression	"safe_lstat ( to , tost ) != 0"		72594	1		!=			
ANR	72730	CallExpression	"safe_lstat ( to , tost )"		72594	0					
ANR	72731	Callee	safe_lstat		72594	0					
ANR	72732	Identifier	safe_lstat		72594	0					
ANR	72733	ArgumentList	to		72594	1					
ANR	72734	Argument	to		72594	0					
ANR	72735	Identifier	to		72594	0					
ANR	72736	Argument	tost		72594	1					
ANR	72737	Identifier	tost		72594	0					
ANR	72738	PrimaryExpression	0		72594	1					
ANR	72739	ExpressionStatement	"pfatal ( ""Can't get file attributes of %s %s"" , ""symbolic link"" , to )"	622:1:15969:16035	72594	1	True				
ANR	72740	CallExpression	"pfatal ( ""Can't get file attributes of %s %s"" , ""symbolic link"" , to )"		72594	0					
ANR	72741	Callee	pfatal		72594	0					
ANR	72742	Identifier	pfatal		72594	0					
ANR	72743	ArgumentList	"""Can't get file attributes of %s %s"""		72594	1					
ANR	72744	Argument	"""Can't get file attributes of %s %s"""		72594	0					
ANR	72745	PrimaryExpression	"""Can't get file attributes of %s %s"""		72594	0					
ANR	72746	Argument	"""symbolic link"""		72594	1					
ANR	72747	PrimaryExpression	"""symbolic link"""		72594	0					
ANR	72748	Argument	to		72594	2					
ANR	72749	Identifier	to		72594	0					
ANR	72750	ExpressionStatement	free ( buffer )	623:6:16043:16056	72594	6	True				
ANR	72751	CallExpression	free ( buffer )		72594	0					
ANR	72752	Callee	free		72594	0					
ANR	72753	Identifier	free		72594	0					
ANR	72754	ArgumentList	buffer		72594	1					
ANR	72755	Argument	buffer		72594	0					
ANR	72756	Identifier	buffer		72594	0					
ANR	72757	ElseStatement	else		72594	0					
ANR	72758	CompoundStatement		24:4:632:632	72594	0					
ANR	72759	ExpressionStatement	assert ( S_ISREG ( mode ) )	627:6:16083:16106	72594	0	True				
ANR	72760	CallExpression	assert ( S_ISREG ( mode ) )		72594	0					
ANR	72761	Callee	assert		72594	0					
ANR	72762	Identifier	assert		72594	0					
ANR	72763	ArgumentList	S_ISREG ( mode )		72594	1					
ANR	72764	Argument	S_ISREG ( mode )		72594	0					
ANR	72765	CallExpression	S_ISREG ( mode )		72594	0					
ANR	72766	Callee	S_ISREG		72594	0					
ANR	72767	Identifier	S_ISREG		72594	0					
ANR	72768	ArgumentList	mode		72594	1					
ANR	72769	Argument	mode		72594	0					
ANR	72770	Identifier	mode		72594	0					
ANR	72771	ExpressionStatement	"tofd = create_file ( to , O_WRONLY | O_BINARY | to_flags , mode , to_dir_known_to_exist )"	628:6:16114:16203	72594	1	True				
ANR	72772	AssignmentExpression	"tofd = create_file ( to , O_WRONLY | O_BINARY | to_flags , mode , to_dir_known_to_exist )"		72594	0		=			
ANR	72773	Identifier	tofd		72594	0					
ANR	72774	CallExpression	"create_file ( to , O_WRONLY | O_BINARY | to_flags , mode , to_dir_known_to_exist )"		72594	1					
ANR	72775	Callee	create_file		72594	0					
ANR	72776	Identifier	create_file		72594	0					
ANR	72777	ArgumentList	to		72594	1					
ANR	72778	Argument	to		72594	0					
ANR	72779	Identifier	to		72594	0					
ANR	72780	Argument	O_WRONLY | O_BINARY | to_flags		72594	1					
ANR	72781	InclusiveOrExpression	O_WRONLY | O_BINARY | to_flags		72594	0		|			
ANR	72782	Identifier	O_WRONLY		72594	0					
ANR	72783	InclusiveOrExpression	O_BINARY | to_flags		72594	1		|			
ANR	72784	Identifier	O_BINARY		72594	0					
ANR	72785	Identifier	to_flags		72594	1					
ANR	72786	Argument	mode		72594	2					
ANR	72787	Identifier	mode		72594	0					
ANR	72788	Argument	to_dir_known_to_exist		72594	3					
ANR	72789	Identifier	to_dir_known_to_exist		72594	0					
ANR	72790	ExpressionStatement	"copy_to_fd ( from , tofd )"	630:6:16211:16234	72594	2	True				
ANR	72791	CallExpression	"copy_to_fd ( from , tofd )"		72594	0					
ANR	72792	Callee	copy_to_fd		72594	0					
ANR	72793	Identifier	copy_to_fd		72594	0					
ANR	72794	ArgumentList	from		72594	1					
ANR	72795	Argument	from		72594	0					
ANR	72796	Identifier	from		72594	0					
ANR	72797	Argument	tofd		72594	1					
ANR	72798	Identifier	tofd		72594	0					
ANR	72799	IfStatement	"if ( tost && fstat ( tofd , tost ) != 0 )"		72594	3					
ANR	72800	Condition	"tost && fstat ( tofd , tost ) != 0"	631:10:16246:16276	72594	0	True				
ANR	72801	AndExpression	"tost && fstat ( tofd , tost ) != 0"		72594	0		&&			
ANR	72802	Identifier	tost		72594	0					
ANR	72803	EqualityExpression	"fstat ( tofd , tost ) != 0"		72594	1		!=			
ANR	72804	CallExpression	"fstat ( tofd , tost )"		72594	0					
ANR	72805	Callee	fstat		72594	0					
ANR	72806	Identifier	fstat		72594	0					
ANR	72807	ArgumentList	tofd		72594	1					
ANR	72808	Argument	tofd		72594	0					
ANR	72809	Identifier	tofd		72594	0					
ANR	72810	Argument	tost		72594	1					
ANR	72811	Identifier	tost		72594	0					
ANR	72812	PrimaryExpression	0		72594	1					
ANR	72813	ExpressionStatement	"pfatal ( ""Can't get file attributes of %s %s"" , ""file"" , to )"	632:1:16280:16337	72594	1	True				
ANR	72814	CallExpression	"pfatal ( ""Can't get file attributes of %s %s"" , ""file"" , to )"		72594	0					
ANR	72815	Callee	pfatal		72594	0					
ANR	72816	Identifier	pfatal		72594	0					
ANR	72817	ArgumentList	"""Can't get file attributes of %s %s"""		72594	1					
ANR	72818	Argument	"""Can't get file attributes of %s %s"""		72594	0					
ANR	72819	PrimaryExpression	"""Can't get file attributes of %s %s"""		72594	0					
ANR	72820	Argument	"""file"""		72594	1					
ANR	72821	PrimaryExpression	"""file"""		72594	0					
ANR	72822	Argument	to		72594	2					
ANR	72823	Identifier	to		72594	0					
ANR	72824	IfStatement	if ( close ( tofd ) != 0 )		72594	4					
ANR	72825	Condition	close ( tofd ) != 0	633:10:16349:16365	72594	0	True				
ANR	72826	EqualityExpression	close ( tofd ) != 0		72594	0		!=			
ANR	72827	CallExpression	close ( tofd )		72594	0					
ANR	72828	Callee	close		72594	0					
ANR	72829	Identifier	close		72594	0					
ANR	72830	ArgumentList	tofd		72594	1					
ANR	72831	Argument	tofd		72594	0					
ANR	72832	Identifier	tofd		72594	0					
ANR	72833	PrimaryExpression	0		72594	1					
ANR	72834	ExpressionStatement	write_fatal ( )	634:1:16369:16383	72594	1	True				
ANR	72835	CallExpression	write_fatal ( )		72594	0					
ANR	72836	Callee	write_fatal		72594	0					
ANR	72837	Identifier	write_fatal		72594	0					
ANR	72838	ArgumentList			72594	1					
ANR	72839	ReturnType	void		72594	1					
ANR	72840	Identifier	copy_file		72594	2					
ANR	72841	ParameterList	"char const * from , char const * to , struct stat * tost , int to_flags , mode_t mode , bool to_dir_known_to_exist"		72594	3					
ANR	72842	Parameter	char const * from	601:11:15330:15345	72594	0	True				
ANR	72843	ParameterType	char const *		72594	0					
ANR	72844	Identifier	from		72594	1					
ANR	72845	Parameter	char const * to	601:29:15348:15361	72594	1	True				
ANR	72846	ParameterType	char const *		72594	0					
ANR	72847	Identifier	to		72594	1					
ANR	72848	Parameter	struct stat * tost	601:45:15364:15380	72594	2	True				
ANR	72849	ParameterType	struct stat *		72594	0					
ANR	72850	Identifier	tost		72594	1					
ANR	72851	Parameter	int to_flags	602:4:15387:15398	72594	3	True				
ANR	72852	ParameterType	int		72594	0					
ANR	72853	Identifier	to_flags		72594	1					
ANR	72854	Parameter	mode_t mode	602:18:15401:15411	72594	4	True				
ANR	72855	ParameterType	mode_t		72594	0					
ANR	72856	Identifier	mode		72594	1					
ANR	72857	Parameter	bool to_dir_known_to_exist	602:31:15414:15439	72594	5	True				
ANR	72858	ParameterType	bool		72594	0					
ANR	72859	Identifier	to_dir_known_to_exist		72594	1					
ANR	72860	CFGEntryNode	ENTRY		72594		True				
ANR	72861	CFGExitNode	EXIT		72594		True				
ANR	72862	Symbol	O_BINARY		72594						
ANR	72863	Symbol	quotearg_n		72594						
ANR	72864	Symbol	to_flags		72594						
ANR	72865	Symbol	tofd		72594						
ANR	72866	Symbol	mode		72594						
ANR	72867	Symbol	create_file		72594						
ANR	72868	Symbol	xmalloc		72594						
ANR	72869	Symbol	from		72594						
ANR	72870	Symbol	buffer		72594						
ANR	72871	Symbol	close		72594						
ANR	72872	Symbol	S_ISLNK		72594						
ANR	72873	Symbol	* buffer		72594						
ANR	72874	Symbol	debug		72594						
ANR	72875	Symbol	PATH_MAX		72594						
ANR	72876	Symbol	fstat		72594						
ANR	72877	Symbol	tost		72594						
ANR	72878	Symbol	to_dir_known_to_exist		72594						
ANR	72879	Symbol	safe_symlink		72594						
ANR	72880	Symbol	r		72594						
ANR	72881	Symbol	safe_lstat		72594						
ANR	72882	Symbol	S_ISREG		72594						
ANR	72883	Symbol	to		72594						
ANR	72884	Symbol	safe_readlink		72594						
ANR	72885	Symbol	* r		72594						
ANR	72886	Symbol	O_WRONLY		72594						
ANR	72887	Function	append_to_file	640:0:16417:16681							
ANR	72888	FunctionDef	"append_to_file (char const * from , char const * to)"		72887	0					
ANR	72889	CompoundStatement		642:0:16472:16681	72887	0					
ANR	72890	IdentifierDeclStatement	int tofd ;	643:2:16476:16484	72887	0	True				
ANR	72891	IdentifierDecl	tofd		72887	0					
ANR	72892	IdentifierDeclType	int		72887	0					
ANR	72893	Identifier	tofd		72887	1					
ANR	72894	IfStatement	"if ( ( tofd = safe_open ( to , O_WRONLY | O_BINARY | O_APPEND , 0 ) ) < 0 )"		72887	1					
ANR	72895	Condition	"( tofd = safe_open ( to , O_WRONLY | O_BINARY | O_APPEND , 0 ) ) < 0"	645:6:16493:16554	72887	0	True				
ANR	72896	RelationalExpression	"( tofd = safe_open ( to , O_WRONLY | O_BINARY | O_APPEND , 0 ) ) < 0"		72887	0		<			
ANR	72897	AssignmentExpression	"tofd = safe_open ( to , O_WRONLY | O_BINARY | O_APPEND , 0 )"		72887	0		=			
ANR	72898	Identifier	tofd		72887	0					
ANR	72899	CallExpression	"safe_open ( to , O_WRONLY | O_BINARY | O_APPEND , 0 )"		72887	1					
ANR	72900	Callee	safe_open		72887	0					
ANR	72901	Identifier	safe_open		72887	0					
ANR	72902	ArgumentList	to		72887	1					
ANR	72903	Argument	to		72887	0					
ANR	72904	Identifier	to		72887	0					
ANR	72905	Argument	O_WRONLY | O_BINARY | O_APPEND		72887	1					
ANR	72906	InclusiveOrExpression	O_WRONLY | O_BINARY | O_APPEND		72887	0		|			
ANR	72907	Identifier	O_WRONLY		72887	0					
ANR	72908	InclusiveOrExpression	O_BINARY | O_APPEND		72887	1		|			
ANR	72909	Identifier	O_BINARY		72887	0					
ANR	72910	Identifier	O_APPEND		72887	1					
ANR	72911	Argument	0		72887	2					
ANR	72912	PrimaryExpression	0		72887	0					
ANR	72913	PrimaryExpression	0		72887	1					
ANR	72914	ExpressionStatement	"pfatal ( ""Can't reopen file %s"" , quotearg ( to ) )"	646:4:16561:16607	72887	1	True				
ANR	72915	CallExpression	"pfatal ( ""Can't reopen file %s"" , quotearg ( to ) )"		72887	0					
ANR	72916	Callee	pfatal		72887	0					
ANR	72917	Identifier	pfatal		72887	0					
ANR	72918	ArgumentList	"""Can't reopen file %s"""		72887	1					
ANR	72919	Argument	"""Can't reopen file %s"""		72887	0					
ANR	72920	PrimaryExpression	"""Can't reopen file %s"""		72887	0					
ANR	72921	Argument	quotearg ( to )		72887	1					
ANR	72922	CallExpression	quotearg ( to )		72887	0					
ANR	72923	Callee	quotearg		72887	0					
ANR	72924	Identifier	quotearg		72887	0					
ANR	72925	ArgumentList	to		72887	1					
ANR	72926	Argument	to		72887	0					
ANR	72927	Identifier	to		72887	0					
ANR	72928	ExpressionStatement	"copy_to_fd ( from , tofd )"	647:2:16611:16634	72887	2	True				
ANR	72929	CallExpression	"copy_to_fd ( from , tofd )"		72887	0					
ANR	72930	Callee	copy_to_fd		72887	0					
ANR	72931	Identifier	copy_to_fd		72887	0					
ANR	72932	ArgumentList	from		72887	1					
ANR	72933	Argument	from		72887	0					
ANR	72934	Identifier	from		72887	0					
ANR	72935	Argument	tofd		72887	1					
ANR	72936	Identifier	tofd		72887	0					
ANR	72937	IfStatement	if ( close ( tofd ) != 0 )		72887	3					
ANR	72938	Condition	close ( tofd ) != 0	648:6:16642:16658	72887	0	True				
ANR	72939	EqualityExpression	close ( tofd ) != 0		72887	0		!=			
ANR	72940	CallExpression	close ( tofd )		72887	0					
ANR	72941	Callee	close		72887	0					
ANR	72942	Identifier	close		72887	0					
ANR	72943	ArgumentList	tofd		72887	1					
ANR	72944	Argument	tofd		72887	0					
ANR	72945	Identifier	tofd		72887	0					
ANR	72946	PrimaryExpression	0		72887	1					
ANR	72947	ExpressionStatement	write_fatal ( )	649:4:16665:16679	72887	1	True				
ANR	72948	CallExpression	write_fatal ( )		72887	0					
ANR	72949	Callee	write_fatal		72887	0					
ANR	72950	Identifier	write_fatal		72887	0					
ANR	72951	ArgumentList			72887	1					
ANR	72952	ReturnType	void		72887	1					
ANR	72953	Identifier	append_to_file		72887	2					
ANR	72954	ParameterList	"char const * from , char const * to"		72887	3					
ANR	72955	Parameter	char const * from	641:16:16438:16453	72887	0	True				
ANR	72956	ParameterType	char const *		72887	0					
ANR	72957	Identifier	from		72887	1					
ANR	72958	Parameter	char const * to	641:34:16456:16469	72887	1	True				
ANR	72959	ParameterType	char const *		72887	0					
ANR	72960	Identifier	to		72887	1					
ANR	72961	CFGEntryNode	ENTRY		72887		True				
ANR	72962	CFGExitNode	EXIT		72887		True				
ANR	72963	Symbol	quotearg		72887						
ANR	72964	Symbol	O_BINARY		72887						
ANR	72965	Symbol	from		72887						
ANR	72966	Symbol	to		72887						
ANR	72967	Symbol	O_WRONLY		72887						
ANR	72968	Symbol	close		72887						
ANR	72969	Symbol	O_APPEND		72887						
ANR	72970	Symbol	tofd		72887						
ANR	72971	Symbol	safe_open		72887						
ANR	72972	DeclStmt									
ANR	72973	Decl							char const	char const [ ]	DEV_NULL
ANR	72974	DeclStmt									
ANR	72975	Decl							char const	char const [ ]	RCSSUFFIX
ANR	72976	DeclStmt									
ANR	72977	Decl							char const	char const [ ]	CHECKOUT
ANR	72978	DeclStmt									
ANR	72979	Decl							char const	char const [ ]	CHECKOUT_LOCKED
ANR	72980	DeclStmt									
ANR	72981	Decl							char const	char const [ ]	RCSDIFF1
ANR	72982	DeclStmt									
ANR	72983	Decl							char const	char const [ ]	SCCSPREFIX
ANR	72984	DeclStmt									
ANR	72985	Decl							char const	char const [ ]	GET
ANR	72986	DeclStmt									
ANR	72987	Decl							char const	char const [ ]	GET_LOCKED
ANR	72988	DeclStmt									
ANR	72989	Decl							char const	char const [ ]	SCCSDIFF1
ANR	72990	DeclStmt									
ANR	72991	Decl							char const	char const [ ]	SCCSDIFF2
ANR	72992	DeclStmt									
ANR	72993	Decl							char const	char const [ ]	CLEARTOOL_CO
ANR	72994	DeclStmt									
ANR	72995	Decl							char const	char const [ ]	PERFORCE_CO
ANR	72996	Function	quote_system_arg	669:0:17219:17428							
ANR	72997	FunctionDef	"quote_system_arg (char * quoted , char const * arg)"		72996	0					
ANR	72998	CompoundStatement		671:0:17282:17428	72996	0					
ANR	72999	IdentifierDeclStatement	"char * q = quotearg_style ( shell_quoting_style , arg ) ;"	672:2:17286:17337	72996	0	True				
ANR	73000	IdentifierDecl	"* q = quotearg_style ( shell_quoting_style , arg )"		72996	0					
ANR	73001	IdentifierDeclType	char *		72996	0					
ANR	73002	Identifier	q		72996	1					
ANR	73003	AssignmentExpression	"* q = quotearg_style ( shell_quoting_style , arg )"		72996	2		=			
ANR	73004	Identifier	q		72996	0					
ANR	73005	CallExpression	"quotearg_style ( shell_quoting_style , arg )"		72996	1					
ANR	73006	Callee	quotearg_style		72996	0					
ANR	73007	Identifier	quotearg_style		72996	0					
ANR	73008	ArgumentList	shell_quoting_style		72996	1					
ANR	73009	Argument	shell_quoting_style		72996	0					
ANR	73010	Identifier	shell_quoting_style		72996	0					
ANR	73011	Argument	arg		72996	1					
ANR	73012	Identifier	arg		72996	0					
ANR	73013	IdentifierDeclStatement	size_t len = strlen ( q ) ;	673:2:17341:17364	72996	1	True				
ANR	73014	IdentifierDecl	len = strlen ( q )		72996	0					
ANR	73015	IdentifierDeclType	size_t		72996	0					
ANR	73016	Identifier	len		72996	1					
ANR	73017	AssignmentExpression	len = strlen ( q )		72996	2		=			
ANR	73018	Identifier	len		72996	0					
ANR	73019	CallExpression	strlen ( q )		72996	1					
ANR	73020	Callee	strlen		72996	0					
ANR	73021	Identifier	strlen		72996	0					
ANR	73022	ArgumentList	q		72996	1					
ANR	73023	Argument	q		72996	0					
ANR	73024	Identifier	q		72996	0					
ANR	73025	IfStatement	if ( quoted )		72996	2					
ANR	73026	Condition	quoted	675:6:17373:17378	72996	0	True				
ANR	73027	Identifier	quoted		72996	0					
ANR	73028	ExpressionStatement	"memcpy ( quoted , q , len + 1 )"	676:4:17385:17412	72996	1	True				
ANR	73029	CallExpression	"memcpy ( quoted , q , len + 1 )"		72996	0					
ANR	73030	Callee	memcpy		72996	0					
ANR	73031	Identifier	memcpy		72996	0					
ANR	73032	ArgumentList	quoted		72996	1					
ANR	73033	Argument	quoted		72996	0					
ANR	73034	Identifier	quoted		72996	0					
ANR	73035	Argument	q		72996	1					
ANR	73036	Identifier	q		72996	0					
ANR	73037	Argument	len + 1		72996	2					
ANR	73038	AdditiveExpression	len + 1		72996	0		+			
ANR	73039	Identifier	len		72996	0					
ANR	73040	PrimaryExpression	1		72996	1					
ANR	73041	ReturnStatement	return len ;	677:2:17416:17426	72996	3	True				
ANR	73042	Identifier	len		72996	0					
ANR	73043	ReturnType	static size_t		72996	1					
ANR	73044	Identifier	quote_system_arg		72996	2					
ANR	73045	ParameterList	"char * quoted , char const * arg"		72996	3					
ANR	73046	Parameter	char * quoted	670:18:17251:17262	72996	0	True				
ANR	73047	ParameterType	char *		72996	0					
ANR	73048	Identifier	quoted		72996	1					
ANR	73049	Parameter	char const * arg	670:32:17265:17279	72996	1	True				
ANR	73050	ParameterType	char const *		72996	0					
ANR	73051	Identifier	arg		72996	1					
ANR	73052	CFGEntryNode	ENTRY		72996		True				
ANR	73053	CFGExitNode	EXIT		72996		True				
ANR	73054	Symbol	quoted		72996						
ANR	73055	Symbol	shell_quoting_style		72996						
ANR	73056	Symbol	q		72996						
ANR	73057	Symbol	strlen		72996						
ANR	73058	Symbol	len		72996						
ANR	73059	Symbol	arg		72996						
ANR	73060	Symbol	quotearg_style		72996						
ANR	73061	Function	version_controller	691:0:18045:21225							
ANR	73062	FunctionDef	"version_controller (char const * filename , bool readonly , struct stat const * filestat , char * * getbuf , char * * diffbuf)"		73061	0					
ANR	73063	CompoundStatement		694:0:18181:21225	73061	0					
ANR	73064	IdentifierDeclStatement	struct stat cstat ;	695:2:18185:18202	73061	0	True				
ANR	73065	IdentifierDecl	cstat		73061	0					
ANR	73066	IdentifierDeclType	struct stat		73061	0					
ANR	73067	Identifier	cstat		73061	1					
ANR	73068	IdentifierDeclStatement	char * dir = dir_name ( filename ) ;	696:2:18206:18237	73061	1	True				
ANR	73069	IdentifierDecl	* dir = dir_name ( filename )		73061	0					
ANR	73070	IdentifierDeclType	char *		73061	0					
ANR	73071	Identifier	dir		73061	1					
ANR	73072	AssignmentExpression	* dir = dir_name ( filename )		73061	2		=			
ANR	73073	Identifier	dir		73061	0					
ANR	73074	CallExpression	dir_name ( filename )		73061	1					
ANR	73075	Callee	dir_name		73061	0					
ANR	73076	Identifier	dir_name		73061	0					
ANR	73077	ArgumentList	filename		73061	1					
ANR	73078	Argument	filename		73061	0					
ANR	73079	Identifier	filename		73061	0					
ANR	73080	IdentifierDeclStatement	char * filebase = base_name ( filename ) ;	697:2:18241:18278	73061	2	True				
ANR	73081	IdentifierDecl	* filebase = base_name ( filename )		73061	0					
ANR	73082	IdentifierDeclType	char *		73061	0					
ANR	73083	Identifier	filebase		73061	1					
ANR	73084	AssignmentExpression	* filebase = base_name ( filename )		73061	2		=			
ANR	73085	Identifier	filebase		73061	0					
ANR	73086	CallExpression	base_name ( filename )		73061	1					
ANR	73087	Callee	base_name		73061	0					
ANR	73088	Identifier	base_name		73061	0					
ANR	73089	ArgumentList	filename		73061	1					
ANR	73090	Argument	filename		73061	0					
ANR	73091	Identifier	filename		73061	0					
ANR	73092	IdentifierDeclStatement	"char const * dotslash = * filename == '-' ? ""./"" : """" ;"	698:2:18282:18333	73061	3	True				
ANR	73093	IdentifierDecl	"* dotslash = * filename == '-' ? ""./"" : """""		73061	0					
ANR	73094	IdentifierDeclType	char const *		73061	0					
ANR	73095	Identifier	dotslash		73061	1					
ANR	73096	AssignmentExpression	"* dotslash = * filename == '-' ? ""./"" : """""		73061	2		=			
ANR	73097	Identifier	dotslash		73061	0					
ANR	73098	ConditionalExpression	"* filename == '-' ? ""./"" : """""		73061	1					
ANR	73099	Condition	* filename == '-'		73061	0					
ANR	73100	EqualityExpression	* filename == '-'		73061	0		==			
ANR	73101	UnaryOperationExpression	* filename		73061	0					
ANR	73102	UnaryOperator	*		73061	0					
ANR	73103	Identifier	filename		73061	1					
ANR	73104	PrimaryExpression	'-'		73061	1					
ANR	73105	PrimaryExpression	"""./"""		73061	1					
ANR	73106	PrimaryExpression	""""""		73061	2					
ANR	73107	IdentifierDeclStatement	size_t dirlen = strlen ( dir ) + 1 ;	699:2:18337:18369	73061	4	True				
ANR	73108	IdentifierDecl	dirlen = strlen ( dir ) + 1		73061	0					
ANR	73109	IdentifierDeclType	size_t		73061	0					
ANR	73110	Identifier	dirlen		73061	1					
ANR	73111	AssignmentExpression	dirlen = strlen ( dir ) + 1		73061	2		=			
ANR	73112	Identifier	dirlen		73061	0					
ANR	73113	AdditiveExpression	strlen ( dir ) + 1		73061	1		+			
ANR	73114	CallExpression	strlen ( dir )		73061	0					
ANR	73115	Callee	strlen		73061	0					
ANR	73116	Identifier	strlen		73061	0					
ANR	73117	ArgumentList	dir		73061	1					
ANR	73118	Argument	dir		73061	0					
ANR	73119	Identifier	dir		73061	0					
ANR	73120	PrimaryExpression	1		73061	1					
ANR	73121	IdentifierDeclStatement	"size_t maxfixlen = sizeof ""SCCS/"" - 1 + sizeof SCCSPREFIX - 1 ;"	700:2:18373:18434	73061	5	True				
ANR	73122	IdentifierDecl	"maxfixlen = sizeof ""SCCS/"" - 1 + sizeof SCCSPREFIX - 1"		73061	0					
ANR	73123	IdentifierDeclType	size_t		73061	0					
ANR	73124	Identifier	maxfixlen		73061	1					
ANR	73125	AssignmentExpression	"maxfixlen = sizeof ""SCCS/"" - 1 + sizeof SCCSPREFIX - 1"		73061	2		=			
ANR	73126	Identifier	maxfixlen		73061	0					
ANR	73127	AdditiveExpression	"sizeof ""SCCS/"" - 1 + sizeof SCCSPREFIX - 1"		73061	1		-			
ANR	73128	SizeofExpression	"sizeof ""SCCS/"""		73061	0					
ANR	73129	Sizeof	sizeof		73061	0					
ANR	73130	PrimaryExpression	"""SCCS/"""		73061	1					
ANR	73131	AdditiveExpression	1 + sizeof SCCSPREFIX - 1		73061	1		+			
ANR	73132	PrimaryExpression	1		73061	0					
ANR	73133	AdditiveExpression	sizeof SCCSPREFIX - 1		73061	1		-			
ANR	73134	SizeofExpression	sizeof SCCSPREFIX		73061	0					
ANR	73135	Sizeof	sizeof		73061	0					
ANR	73136	Identifier	SCCSPREFIX		73061	1					
ANR	73137	PrimaryExpression	1		73061	1					
ANR	73138	IdentifierDeclStatement	size_t maxtrysize = dirlen + strlen ( filebase ) + maxfixlen + 1 ;	701:2:18438:18500	73061	6	True				
ANR	73139	IdentifierDecl	maxtrysize = dirlen + strlen ( filebase ) + maxfixlen + 1		73061	0					
ANR	73140	IdentifierDeclType	size_t		73061	0					
ANR	73141	Identifier	maxtrysize		73061	1					
ANR	73142	AssignmentExpression	maxtrysize = dirlen + strlen ( filebase ) + maxfixlen + 1		73061	2		=			
ANR	73143	Identifier	maxtrysize		73061	0					
ANR	73144	AdditiveExpression	dirlen + strlen ( filebase ) + maxfixlen + 1		73061	1		+			
ANR	73145	Identifier	dirlen		73061	0					
ANR	73146	AdditiveExpression	strlen ( filebase ) + maxfixlen + 1		73061	1		+			
ANR	73147	CallExpression	strlen ( filebase )		73061	0					
ANR	73148	Callee	strlen		73061	0					
ANR	73149	Identifier	strlen		73061	0					
ANR	73150	ArgumentList	filebase		73061	1					
ANR	73151	Argument	filebase		73061	0					
ANR	73152	Identifier	filebase		73061	0					
ANR	73153	AdditiveExpression	maxfixlen + 1		73061	1		+			
ANR	73154	Identifier	maxfixlen		73061	0					
ANR	73155	PrimaryExpression	1		73061	1					
ANR	73156	IdentifierDeclStatement	"size_t quotelen = quote_system_arg ( 0 , dir ) + quote_system_arg ( 0 , filebase ) ;"	702:2:18504:18580	73061	7	True				
ANR	73157	IdentifierDecl	"quotelen = quote_system_arg ( 0 , dir ) + quote_system_arg ( 0 , filebase )"		73061	0					
ANR	73158	IdentifierDeclType	size_t		73061	0					
ANR	73159	Identifier	quotelen		73061	1					
ANR	73160	AssignmentExpression	"quotelen = quote_system_arg ( 0 , dir ) + quote_system_arg ( 0 , filebase )"		73061	2		=			
ANR	73161	Identifier	quotelen		73061	0					
ANR	73162	AdditiveExpression	"quote_system_arg ( 0 , dir ) + quote_system_arg ( 0 , filebase )"		73061	1		+			
ANR	73163	CallExpression	"quote_system_arg ( 0 , dir )"		73061	0					
ANR	73164	Callee	quote_system_arg		73061	0					
ANR	73165	Identifier	quote_system_arg		73061	0					
ANR	73166	ArgumentList	0		73061	1					
ANR	73167	Argument	0		73061	0					
ANR	73168	PrimaryExpression	0		73061	0					
ANR	73169	Argument	dir		73061	1					
ANR	73170	Identifier	dir		73061	0					
ANR	73171	CallExpression	"quote_system_arg ( 0 , filebase )"		73061	1					
ANR	73172	Callee	quote_system_arg		73061	0					
ANR	73173	Identifier	quote_system_arg		73061	0					
ANR	73174	ArgumentList	0		73061	1					
ANR	73175	Argument	0		73061	0					
ANR	73176	PrimaryExpression	0		73061	0					
ANR	73177	Argument	filebase		73061	1					
ANR	73178	Identifier	filebase		73061	0					
ANR	73179	IdentifierDeclStatement	size_t maxgetsize = sizeof CLEARTOOL_CO + quotelen + maxfixlen ;	703:2:18584:18646	73061	8	True				
ANR	73180	IdentifierDecl	maxgetsize = sizeof CLEARTOOL_CO + quotelen + maxfixlen		73061	0					
ANR	73181	IdentifierDeclType	size_t		73061	0					
ANR	73182	Identifier	maxgetsize		73061	1					
ANR	73183	AssignmentExpression	maxgetsize = sizeof CLEARTOOL_CO + quotelen + maxfixlen		73061	2		=			
ANR	73184	Identifier	maxgetsize		73061	0					
ANR	73185	AdditiveExpression	sizeof CLEARTOOL_CO + quotelen + maxfixlen		73061	1		+			
ANR	73186	SizeofExpression	sizeof CLEARTOOL_CO		73061	0					
ANR	73187	Sizeof	sizeof		73061	0					
ANR	73188	Identifier	CLEARTOOL_CO		73061	1					
ANR	73189	AdditiveExpression	quotelen + maxfixlen		73061	1		+			
ANR	73190	Identifier	quotelen		73061	0					
ANR	73191	Identifier	maxfixlen		73061	1					
ANR	73192	IdentifierDeclStatement	size_t maxdiffsize = ( sizeof SCCSDIFF1 + sizeof SCCSDIFF2 + sizeof DEV_NULL - 1 + 2 * quotelen + maxfixlen ) ;	704:2:18650:18766	73061	9	True				
ANR	73193	IdentifierDecl	maxdiffsize = ( sizeof SCCSDIFF1 + sizeof SCCSDIFF2 + sizeof DEV_NULL - 1 + 2 * quotelen + maxfixlen )		73061	0					
ANR	73194	IdentifierDeclType	size_t		73061	0					
ANR	73195	Identifier	maxdiffsize		73061	1					
ANR	73196	AssignmentExpression	maxdiffsize = ( sizeof SCCSDIFF1 + sizeof SCCSDIFF2 + sizeof DEV_NULL - 1 + 2 * quotelen + maxfixlen )		73061	2		=			
ANR	73197	Identifier	maxdiffsize		73061	0					
ANR	73198	AdditiveExpression	sizeof SCCSDIFF1 + sizeof SCCSDIFF2 + sizeof DEV_NULL - 1 + 2 * quotelen + maxfixlen		73061	1		+			
ANR	73199	SizeofExpression	sizeof SCCSDIFF1		73061	0					
ANR	73200	Sizeof	sizeof		73061	0					
ANR	73201	Identifier	SCCSDIFF1		73061	1					
ANR	73202	AdditiveExpression	sizeof SCCSDIFF2 + sizeof DEV_NULL - 1 + 2 * quotelen + maxfixlen		73061	1		+			
ANR	73203	SizeofExpression	sizeof SCCSDIFF2		73061	0					
ANR	73204	Sizeof	sizeof		73061	0					
ANR	73205	Identifier	SCCSDIFF2		73061	1					
ANR	73206	AdditiveExpression	sizeof DEV_NULL - 1 + 2 * quotelen + maxfixlen		73061	1		-			
ANR	73207	SizeofExpression	sizeof DEV_NULL		73061	0					
ANR	73208	Sizeof	sizeof		73061	0					
ANR	73209	Identifier	DEV_NULL		73061	1					
ANR	73210	AdditiveExpression	1 + 2 * quotelen + maxfixlen		73061	1		+			
ANR	73211	PrimaryExpression	1		73061	0					
ANR	73212	AdditiveExpression	2 * quotelen + maxfixlen		73061	1		+			
ANR	73213	MultiplicativeExpression	2 * quotelen		73061	0		*			
ANR	73214	PrimaryExpression	2		73061	0					
ANR	73215	Identifier	quotelen		73061	1					
ANR	73216	Identifier	maxfixlen		73061	1					
ANR	73217	IdentifierDeclStatement	char * trybuf = xmalloc ( maxtrysize ) ;	707:2:18770:18805	73061	10	True				
ANR	73218	IdentifierDecl	* trybuf = xmalloc ( maxtrysize )		73061	0					
ANR	73219	IdentifierDeclType	char *		73061	0					
ANR	73220	Identifier	trybuf		73061	1					
ANR	73221	AssignmentExpression	* trybuf = xmalloc ( maxtrysize )		73061	2		=			
ANR	73222	Identifier	trybuf		73061	0					
ANR	73223	CallExpression	xmalloc ( maxtrysize )		73061	1					
ANR	73224	Callee	xmalloc		73061	0					
ANR	73225	Identifier	xmalloc		73061	0					
ANR	73226	ArgumentList	maxtrysize		73061	1					
ANR	73227	Argument	maxtrysize		73061	0					
ANR	73228	Identifier	maxtrysize		73061	0					
ANR	73229	IdentifierDeclStatement	char const * r = 0 ;	708:2:18809:18826	73061	11	True				
ANR	73230	IdentifierDecl	* r = 0		73061	0					
ANR	73231	IdentifierDeclType	char const *		73061	0					
ANR	73232	Identifier	r		73061	1					
ANR	73233	AssignmentExpression	* r = 0		73061	2		=			
ANR	73234	Identifier	r		73061	0					
ANR	73235	PrimaryExpression	0		73061	1					
ANR	73236	ExpressionStatement	"sprintf ( trybuf , ""%s/"" , dir )"	710:2:18831:18859	73061	12	True				
ANR	73237	CallExpression	"sprintf ( trybuf , ""%s/"" , dir )"		73061	0					
ANR	73238	Callee	sprintf		73061	0					
ANR	73239	Identifier	sprintf		73061	0					
ANR	73240	ArgumentList	trybuf		73061	1					
ANR	73241	Argument	trybuf		73061	0					
ANR	73242	Identifier	trybuf		73061	0					
ANR	73243	Argument	"""%s/"""		73061	1					
ANR	73244	PrimaryExpression	"""%s/"""		73061	0					
ANR	73245	Argument	dir		73061	2					
ANR	73246	Identifier	dir		73061	0					
ANR	73247	Statement	define	712:1:18863:18868	73061	13	True				
ANR	73248	Statement	try1	712:8:18870:18873	73061	14	True				
ANR	73249	Statement	(	712:12:18874:18874	73061	15	True				
ANR	73250	Statement	f	712:13:18875:18875	73061	16	True				
ANR	73251	Statement	","	712:14:18876:18876	73061	17	True				
ANR	73252	Statement	a1	712:15:18877:18878	73061	18	True				
ANR	73253	Statement	)	712:17:18879:18879	73061	19	True				
ANR	73254	Statement	(	712:22:18884:18884	73061	20	True				
ANR	73255	Statement	sprintf	712:23:18885:18891	73061	21	True				
ANR	73256	Statement	(	712:31:18893:18893	73061	22	True				
ANR	73257	Statement	trybuf	712:32:18894:18899	73061	23	True				
ANR	73258	Statement	+	712:39:18901:18901	73061	24	True				
ANR	73259	Statement	dirlen	712:41:18903:18908	73061	25	True				
ANR	73260	Statement	","	712:47:18909:18909	73061	26	True				
ANR	73261	Statement	f	712:49:18911:18911	73061	27	True				
ANR	73262	Statement	","	712:50:18912:18912	73061	28	True				
ANR	73263	Statement	a1	712:52:18914:18915	73061	29	True				
ANR	73264	Statement	)	712:54:18916:18916	73061	30	True				
ANR	73265	Statement	","	712:55:18917:18917	73061	31	True				
ANR	73266	Statement	safe_stat	712:60:18922:18930	73061	32	True				
ANR	73267	Statement	(	712:70:18932:18932	73061	33	True				
ANR	73268	Statement	trybuf	712:71:18933:18938	73061	34	True				
ANR	73269	Statement	","	712:77:18939:18939	73061	35	True				
ANR	73270	Statement	&	712:79:18941:18941	73061	36	True				
ANR	73271	Statement	cstat	712:80:18942:18946	73061	37	True				
ANR	73272	Statement	)	712:85:18947:18947	73061	38	True				
ANR	73273	Statement	==	712:87:18949:18950	73061	39	True				
ANR	73274	Statement	0	712:90:18952:18952	73061	40	True				
ANR	73275	Statement	)	712:91:18953:18953	73061	41	True				
ANR	73276	Statement	define	713:1:18956:18961	73061	42	True				
ANR	73277	Statement	try2	713:8:18963:18966	73061	43	True				
ANR	73278	Statement	(	713:12:18967:18967	73061	44	True				
ANR	73279	Statement	f	713:13:18968:18968	73061	45	True				
ANR	73280	Statement	","	713:14:18969:18969	73061	46	True				
ANR	73281	Statement	a1	713:15:18970:18971	73061	47	True				
ANR	73282	Statement	","	713:17:18972:18972	73061	48	True				
ANR	73283	Statement	a2	713:18:18973:18974	73061	49	True				
ANR	73284	Statement	)	713:20:18975:18975	73061	50	True				
ANR	73285	Statement	(	713:22:18977:18977	73061	51	True				
ANR	73286	Statement	sprintf	713:23:18978:18984	73061	52	True				
ANR	73287	Statement	(	713:31:18986:18986	73061	53	True				
ANR	73288	Statement	trybuf	713:32:18987:18992	73061	54	True				
ANR	73289	Statement	+	713:39:18994:18994	73061	55	True				
ANR	73290	Statement	dirlen	713:41:18996:19001	73061	56	True				
ANR	73291	Statement	","	713:47:19002:19002	73061	57	True				
ANR	73292	Statement	f	713:49:19004:19004	73061	58	True				
ANR	73293	Statement	","	713:50:19005:19005	73061	59	True				
ANR	73294	Statement	a1	713:52:19007:19008	73061	60	True				
ANR	73295	Statement	","	713:54:19009:19009	73061	61	True				
ANR	73296	Statement	a2	713:55:19010:19011	73061	62	True				
ANR	73297	Statement	)	713:57:19012:19012	73061	63	True				
ANR	73298	Statement	","	713:58:19013:19013	73061	64	True				
ANR	73299	Statement	safe_stat	713:60:19015:19023	73061	65	True				
ANR	73300	Statement	(	713:70:19025:19025	73061	66	True				
ANR	73301	Statement	trybuf	713:71:19026:19031	73061	67	True				
ANR	73302	Statement	","	713:77:19032:19032	73061	68	True				
ANR	73303	Statement	&	713:79:19034:19034	73061	69	True				
ANR	73304	Statement	cstat	713:80:19035:19039	73061	70	True				
ANR	73305	Statement	)	713:85:19040:19040	73061	71	True				
ANR	73306	Statement	==	713:87:19042:19043	73061	72	True				
ANR	73307	Statement	0	713:90:19045:19045	73061	73	True				
ANR	73308	Statement	)	713:91:19046:19046	73061	74	True				
ANR	73309	IfStatement	"if ( ( try2 ( ""RCS/%s%s"" , filebase , RCSSUFFIX ) || try1 ( ""RCS/%s"" , filebase ) || try2 ( ""%s%s"" , filebase , RCSSUFFIX ) ) && ! ( filestat && filestat -> st_dev == cstat . st_dev && filestat -> st_ino == cstat . st_ino ) )"		73061	75					
ANR	73310	Condition	"( try2 ( ""RCS/%s%s"" , filebase , RCSSUFFIX ) || try1 ( ""RCS/%s"" , filebase ) || try2 ( ""%s%s"" , filebase , RCSSUFFIX ) ) && ! ( filestat && filestat -> st_dev == cstat . st_dev && filestat -> st_ino == cstat . st_ino )"	718:6:19160:19384	73061	0	True				
ANR	73311	AndExpression	"( try2 ( ""RCS/%s%s"" , filebase , RCSSUFFIX ) || try1 ( ""RCS/%s"" , filebase ) || try2 ( ""%s%s"" , filebase , RCSSUFFIX ) ) && ! ( filestat && filestat -> st_dev == cstat . st_dev && filestat -> st_ino == cstat . st_ino )"		73061	0		&&			
ANR	73312	OrExpression	"try2 ( ""RCS/%s%s"" , filebase , RCSSUFFIX ) || try1 ( ""RCS/%s"" , filebase ) || try2 ( ""%s%s"" , filebase , RCSSUFFIX )"		73061	0		||			
ANR	73313	CallExpression	"try2 ( ""RCS/%s%s"" , filebase , RCSSUFFIX )"		73061	0					
ANR	73314	Callee	try2		73061	0					
ANR	73315	Identifier	try2		73061	0					
ANR	73316	ArgumentList	"""RCS/%s%s"""		73061	1					
ANR	73317	Argument	"""RCS/%s%s"""		73061	0					
ANR	73318	PrimaryExpression	"""RCS/%s%s"""		73061	0					
ANR	73319	Argument	filebase		73061	1					
ANR	73320	Identifier	filebase		73061	0					
ANR	73321	Argument	RCSSUFFIX		73061	2					
ANR	73322	Identifier	RCSSUFFIX		73061	0					
ANR	73323	OrExpression	"try1 ( ""RCS/%s"" , filebase ) || try2 ( ""%s%s"" , filebase , RCSSUFFIX )"		73061	1		||			
ANR	73324	CallExpression	"try1 ( ""RCS/%s"" , filebase )"		73061	0					
ANR	73325	Callee	try1		73061	0					
ANR	73326	Identifier	try1		73061	0					
ANR	73327	ArgumentList	"""RCS/%s"""		73061	1					
ANR	73328	Argument	"""RCS/%s"""		73061	0					
ANR	73329	PrimaryExpression	"""RCS/%s"""		73061	0					
ANR	73330	Argument	filebase		73061	1					
ANR	73331	Identifier	filebase		73061	0					
ANR	73332	CallExpression	"try2 ( ""%s%s"" , filebase , RCSSUFFIX )"		73061	1					
ANR	73333	Callee	try2		73061	0					
ANR	73334	Identifier	try2		73061	0					
ANR	73335	ArgumentList	"""%s%s"""		73061	1					
ANR	73336	Argument	"""%s%s"""		73061	0					
ANR	73337	PrimaryExpression	"""%s%s"""		73061	0					
ANR	73338	Argument	filebase		73061	1					
ANR	73339	Identifier	filebase		73061	0					
ANR	73340	Argument	RCSSUFFIX		73061	2					
ANR	73341	Identifier	RCSSUFFIX		73061	0					
ANR	73342	UnaryOperationExpression	! ( filestat && filestat -> st_dev == cstat . st_dev && filestat -> st_ino == cstat . st_ino )		73061	1					
ANR	73343	UnaryOperator	!		73061	0					
ANR	73344	AndExpression	filestat && filestat -> st_dev == cstat . st_dev && filestat -> st_ino == cstat . st_ino		73061	1		&&			
ANR	73345	Identifier	filestat		73061	0					
ANR	73346	AndExpression	filestat -> st_dev == cstat . st_dev && filestat -> st_ino == cstat . st_ino		73061	1		&&			
ANR	73347	EqualityExpression	filestat -> st_dev == cstat . st_dev		73061	0		==			
ANR	73348	PtrMemberAccess	filestat -> st_dev		73061	0					
ANR	73349	Identifier	filestat		73061	0					
ANR	73350	Identifier	st_dev		73061	1					
ANR	73351	MemberAccess	cstat . st_dev		73061	1					
ANR	73352	Identifier	cstat		73061	0					
ANR	73353	Identifier	st_dev		73061	1					
ANR	73354	EqualityExpression	filestat -> st_ino == cstat . st_ino		73061	1		==			
ANR	73355	PtrMemberAccess	filestat -> st_ino		73061	0					
ANR	73356	Identifier	filestat		73061	0					
ANR	73357	Identifier	st_ino		73061	1					
ANR	73358	MemberAccess	cstat . st_ino		73061	1					
ANR	73359	Identifier	cstat		73061	0					
ANR	73360	Identifier	st_ino		73061	1					
ANR	73361	CompoundStatement		31:4:1209:1209	73061	1					
ANR	73362	IfStatement	if ( getbuf )		73061	0					
ANR	73363	Condition	getbuf	725:10:19403:19408	73061	0	True				
ANR	73364	Identifier	getbuf		73061	0					
ANR	73365	CompoundStatement		34:3:1235:1275	73061	1					
ANR	73366	IdentifierDeclStatement	char * p = * getbuf = xmalloc ( maxgetsize ) ;	727:3:19417:19457	73061	0	True				
ANR	73367	IdentifierDecl	* p = * getbuf = xmalloc ( maxgetsize )		73061	0					
ANR	73368	IdentifierDeclType	char *		73061	0					
ANR	73369	Identifier	p		73061	1					
ANR	73370	AssignmentExpression	* p = * getbuf = xmalloc ( maxgetsize )		73061	2		=			
ANR	73371	Identifier	p		73061	0					
ANR	73372	AssignmentExpression	* getbuf = xmalloc ( maxgetsize )		73061	1		=			
ANR	73373	UnaryOperationExpression	* getbuf		73061	0					
ANR	73374	UnaryOperator	*		73061	0					
ANR	73375	Identifier	getbuf		73061	1					
ANR	73376	CallExpression	xmalloc ( maxgetsize )		73061	1					
ANR	73377	Callee	xmalloc		73061	0					
ANR	73378	Identifier	xmalloc		73061	0					
ANR	73379	ArgumentList	maxgetsize		73061	1					
ANR	73380	Argument	maxgetsize		73061	0					
ANR	73381	Identifier	maxgetsize		73061	0					
ANR	73382	ExpressionStatement	"sprintf ( p , readonly ? CHECKOUT : CHECKOUT_LOCKED , dotslash )"	728:3:19462:19522	73061	1	True				
ANR	73383	CallExpression	"sprintf ( p , readonly ? CHECKOUT : CHECKOUT_LOCKED , dotslash )"		73061	0					
ANR	73384	Callee	sprintf		73061	0					
ANR	73385	Identifier	sprintf		73061	0					
ANR	73386	ArgumentList	p		73061	1					
ANR	73387	Argument	p		73061	0					
ANR	73388	Identifier	p		73061	0					
ANR	73389	Argument	readonly ? CHECKOUT : CHECKOUT_LOCKED		73061	1					
ANR	73390	ConditionalExpression	readonly ? CHECKOUT : CHECKOUT_LOCKED		73061	0					
ANR	73391	Condition	readonly		73061	0					
ANR	73392	Identifier	readonly		73061	0					
ANR	73393	Identifier	CHECKOUT		73061	1					
ANR	73394	Identifier	CHECKOUT_LOCKED		73061	2					
ANR	73395	Argument	dotslash		73061	2					
ANR	73396	Identifier	dotslash		73061	0					
ANR	73397	ExpressionStatement	p += strlen ( p )	729:3:19527:19542	73061	2	True				
ANR	73398	AssignmentExpression	p += strlen ( p )		73061	0		+=			
ANR	73399	Identifier	p		73061	0					
ANR	73400	CallExpression	strlen ( p )		73061	1					
ANR	73401	Callee	strlen		73061	0					
ANR	73402	Identifier	strlen		73061	0					
ANR	73403	ArgumentList	p		73061	1					
ANR	73404	Argument	p		73061	0					
ANR	73405	Identifier	p		73061	0					
ANR	73406	ExpressionStatement	"p += quote_system_arg ( p , filename )"	730:3:19547:19582	73061	3	True				
ANR	73407	AssignmentExpression	"p += quote_system_arg ( p , filename )"		73061	0		+=			
ANR	73408	Identifier	p		73061	0					
ANR	73409	CallExpression	"quote_system_arg ( p , filename )"		73061	1					
ANR	73410	Callee	quote_system_arg		73061	0					
ANR	73411	Identifier	quote_system_arg		73061	0					
ANR	73412	ArgumentList	p		73061	1					
ANR	73413	Argument	p		73061	0					
ANR	73414	Identifier	p		73061	0					
ANR	73415	Argument	filename		73061	1					
ANR	73416	Identifier	filename		73061	0					
ANR	73417	ExpressionStatement	* p = '\\0'	731:3:19587:19596	73061	4	True				
ANR	73418	AssignmentExpression	* p = '\\0'		73061	0		=			
ANR	73419	UnaryOperationExpression	* p		73061	0					
ANR	73420	UnaryOperator	*		73061	0					
ANR	73421	Identifier	p		73061	1					
ANR	73422	PrimaryExpression	'\\0'		73061	1					
ANR	73423	IfStatement	if ( diffbuf )		73061	1					
ANR	73424	Condition	diffbuf	734:10:19612:19618	73061	0	True				
ANR	73425	Identifier	diffbuf		73061	0					
ANR	73426	CompoundStatement		43:3:1445:1487	73061	1					
ANR	73427	IdentifierDeclStatement	char * p = * diffbuf = xmalloc ( maxdiffsize ) ;	736:3:19627:19669	73061	0	True				
ANR	73428	IdentifierDecl	* p = * diffbuf = xmalloc ( maxdiffsize )		73061	0					
ANR	73429	IdentifierDeclType	char *		73061	0					
ANR	73430	Identifier	p		73061	1					
ANR	73431	AssignmentExpression	* p = * diffbuf = xmalloc ( maxdiffsize )		73061	2		=			
ANR	73432	Identifier	p		73061	0					
ANR	73433	AssignmentExpression	* diffbuf = xmalloc ( maxdiffsize )		73061	1		=			
ANR	73434	UnaryOperationExpression	* diffbuf		73061	0					
ANR	73435	UnaryOperator	*		73061	0					
ANR	73436	Identifier	diffbuf		73061	1					
ANR	73437	CallExpression	xmalloc ( maxdiffsize )		73061	1					
ANR	73438	Callee	xmalloc		73061	0					
ANR	73439	Identifier	xmalloc		73061	0					
ANR	73440	ArgumentList	maxdiffsize		73061	1					
ANR	73441	Argument	maxdiffsize		73061	0					
ANR	73442	Identifier	maxdiffsize		73061	0					
ANR	73443	ExpressionStatement	"sprintf ( p , RCSDIFF1 , dotslash )"	737:3:19674:19705	73061	1	True				
ANR	73444	CallExpression	"sprintf ( p , RCSDIFF1 , dotslash )"		73061	0					
ANR	73445	Callee	sprintf		73061	0					
ANR	73446	Identifier	sprintf		73061	0					
ANR	73447	ArgumentList	p		73061	1					
ANR	73448	Argument	p		73061	0					
ANR	73449	Identifier	p		73061	0					
ANR	73450	Argument	RCSDIFF1		73061	1					
ANR	73451	Identifier	RCSDIFF1		73061	0					
ANR	73452	Argument	dotslash		73061	2					
ANR	73453	Identifier	dotslash		73061	0					
ANR	73454	ExpressionStatement	p += strlen ( p )	738:3:19710:19725	73061	2	True				
ANR	73455	AssignmentExpression	p += strlen ( p )		73061	0		+=			
ANR	73456	Identifier	p		73061	0					
ANR	73457	CallExpression	strlen ( p )		73061	1					
ANR	73458	Callee	strlen		73061	0					
ANR	73459	Identifier	strlen		73061	0					
ANR	73460	ArgumentList	p		73061	1					
ANR	73461	Argument	p		73061	0					
ANR	73462	Identifier	p		73061	0					
ANR	73463	ExpressionStatement	"p += quote_system_arg ( p , filename )"	739:3:19730:19765	73061	3	True				
ANR	73464	AssignmentExpression	"p += quote_system_arg ( p , filename )"		73061	0		+=			
ANR	73465	Identifier	p		73061	0					
ANR	73466	CallExpression	"quote_system_arg ( p , filename )"		73061	1					
ANR	73467	Callee	quote_system_arg		73061	0					
ANR	73468	Identifier	quote_system_arg		73061	0					
ANR	73469	ArgumentList	p		73061	1					
ANR	73470	Argument	p		73061	0					
ANR	73471	Identifier	p		73061	0					
ANR	73472	Argument	filename		73061	1					
ANR	73473	Identifier	filename		73061	0					
ANR	73474	ExpressionStatement	* p ++ = '>'	740:3:19770:19780	73061	4	True				
ANR	73475	AssignmentExpression	* p ++ = '>'		73061	0		=			
ANR	73476	UnaryOperationExpression	* p ++		73061	0					
ANR	73477	UnaryOperator	*		73061	0					
ANR	73478	PostIncDecOperationExpression	p ++		73061	1					
ANR	73479	Identifier	p		73061	0					
ANR	73480	IncDec	++		73061	1					
ANR	73481	PrimaryExpression	'>'		73061	1					
ANR	73482	ExpressionStatement	"strcpy ( p , DEV_NULL )"	741:3:19785:19805	73061	5	True				
ANR	73483	CallExpression	"strcpy ( p , DEV_NULL )"		73061	0					
ANR	73484	Callee	strcpy		73061	0					
ANR	73485	Identifier	strcpy		73061	0					
ANR	73486	ArgumentList	p		73061	1					
ANR	73487	Argument	p		73061	0					
ANR	73488	Identifier	p		73061	0					
ANR	73489	Argument	DEV_NULL		73061	1					
ANR	73490	Identifier	DEV_NULL		73061	0					
ANR	73491	ExpressionStatement	"r = ""RCS"""	744:6:19817:19826	73061	2	True				
ANR	73492	AssignmentExpression	"r = ""RCS"""		73061	0		=			
ANR	73493	Identifier	r		73061	0					
ANR	73494	PrimaryExpression	"""RCS"""		73061	1					
ANR	73495	ElseStatement	else		73061	0					
ANR	73496	IfStatement	"if ( try2 ( ""SCCS/%s%s"" , SCCSPREFIX , filebase ) || try2 ( ""%s%s"" , SCCSPREFIX , filebase ) )"		73061	0					
ANR	73497	Condition	"try2 ( ""SCCS/%s%s"" , SCCSPREFIX , filebase ) || try2 ( ""%s%s"" , SCCSPREFIX , filebase )"	746:11:19845:19927	73061	0	True				
ANR	73498	OrExpression	"try2 ( ""SCCS/%s%s"" , SCCSPREFIX , filebase ) || try2 ( ""%s%s"" , SCCSPREFIX , filebase )"		73061	0		||			
ANR	73499	CallExpression	"try2 ( ""SCCS/%s%s"" , SCCSPREFIX , filebase )"		73061	0					
ANR	73500	Callee	try2		73061	0					
ANR	73501	Identifier	try2		73061	0					
ANR	73502	ArgumentList	"""SCCS/%s%s"""		73061	1					
ANR	73503	Argument	"""SCCS/%s%s"""		73061	0					
ANR	73504	PrimaryExpression	"""SCCS/%s%s"""		73061	0					
ANR	73505	Argument	SCCSPREFIX		73061	1					
ANR	73506	Identifier	SCCSPREFIX		73061	0					
ANR	73507	Argument	filebase		73061	2					
ANR	73508	Identifier	filebase		73061	0					
ANR	73509	CallExpression	"try2 ( ""%s%s"" , SCCSPREFIX , filebase )"		73061	1					
ANR	73510	Callee	try2		73061	0					
ANR	73511	Identifier	try2		73061	0					
ANR	73512	ArgumentList	"""%s%s"""		73061	1					
ANR	73513	Argument	"""%s%s"""		73061	0					
ANR	73514	PrimaryExpression	"""%s%s"""		73061	0					
ANR	73515	Argument	SCCSPREFIX		73061	1					
ANR	73516	Identifier	SCCSPREFIX		73061	0					
ANR	73517	Argument	filebase		73061	2					
ANR	73518	Identifier	filebase		73061	0					
ANR	73519	CompoundStatement		55:4:1752:1752	73061	1					
ANR	73520	IfStatement	if ( getbuf )		73061	0					
ANR	73521	Condition	getbuf	749:10:19946:19951	73061	0	True				
ANR	73522	Identifier	getbuf		73061	0					
ANR	73523	CompoundStatement		58:3:1778:1818	73061	1					
ANR	73524	IdentifierDeclStatement	char * p = * getbuf = xmalloc ( maxgetsize ) ;	751:3:19960:20000	73061	0	True				
ANR	73525	IdentifierDecl	* p = * getbuf = xmalloc ( maxgetsize )		73061	0					
ANR	73526	IdentifierDeclType	char *		73061	0					
ANR	73527	Identifier	p		73061	1					
ANR	73528	AssignmentExpression	* p = * getbuf = xmalloc ( maxgetsize )		73061	2		=			
ANR	73529	Identifier	p		73061	0					
ANR	73530	AssignmentExpression	* getbuf = xmalloc ( maxgetsize )		73061	1		=			
ANR	73531	UnaryOperationExpression	* getbuf		73061	0					
ANR	73532	UnaryOperator	*		73061	0					
ANR	73533	Identifier	getbuf		73061	1					
ANR	73534	CallExpression	xmalloc ( maxgetsize )		73061	1					
ANR	73535	Callee	xmalloc		73061	0					
ANR	73536	Identifier	xmalloc		73061	0					
ANR	73537	ArgumentList	maxgetsize		73061	1					
ANR	73538	Argument	maxgetsize		73061	0					
ANR	73539	Identifier	maxgetsize		73061	0					
ANR	73540	ExpressionStatement	"sprintf ( p , readonly ? GET : GET_LOCKED )"	752:3:20005:20045	73061	1	True				
ANR	73541	CallExpression	"sprintf ( p , readonly ? GET : GET_LOCKED )"		73061	0					
ANR	73542	Callee	sprintf		73061	0					
ANR	73543	Identifier	sprintf		73061	0					
ANR	73544	ArgumentList	p		73061	1					
ANR	73545	Argument	p		73061	0					
ANR	73546	Identifier	p		73061	0					
ANR	73547	Argument	readonly ? GET : GET_LOCKED		73061	1					
ANR	73548	ConditionalExpression	readonly ? GET : GET_LOCKED		73061	0					
ANR	73549	Condition	readonly		73061	0					
ANR	73550	Identifier	readonly		73061	0					
ANR	73551	Identifier	GET		73061	1					
ANR	73552	Identifier	GET_LOCKED		73061	2					
ANR	73553	ExpressionStatement	p += strlen ( p )	753:3:20050:20065	73061	2	True				
ANR	73554	AssignmentExpression	p += strlen ( p )		73061	0		+=			
ANR	73555	Identifier	p		73061	0					
ANR	73556	CallExpression	strlen ( p )		73061	1					
ANR	73557	Callee	strlen		73061	0					
ANR	73558	Identifier	strlen		73061	0					
ANR	73559	ArgumentList	p		73061	1					
ANR	73560	Argument	p		73061	0					
ANR	73561	Identifier	p		73061	0					
ANR	73562	ExpressionStatement	"p += quote_system_arg ( p , trybuf )"	754:3:20070:20103	73061	3	True				
ANR	73563	AssignmentExpression	"p += quote_system_arg ( p , trybuf )"		73061	0		+=			
ANR	73564	Identifier	p		73061	0					
ANR	73565	CallExpression	"quote_system_arg ( p , trybuf )"		73061	1					
ANR	73566	Callee	quote_system_arg		73061	0					
ANR	73567	Identifier	quote_system_arg		73061	0					
ANR	73568	ArgumentList	p		73061	1					
ANR	73569	Argument	p		73061	0					
ANR	73570	Identifier	p		73061	0					
ANR	73571	Argument	trybuf		73061	1					
ANR	73572	Identifier	trybuf		73061	0					
ANR	73573	ExpressionStatement	* p = '\\0'	755:3:20108:20117	73061	4	True				
ANR	73574	AssignmentExpression	* p = '\\0'		73061	0		=			
ANR	73575	UnaryOperationExpression	* p		73061	0					
ANR	73576	UnaryOperator	*		73061	0					
ANR	73577	Identifier	p		73061	1					
ANR	73578	PrimaryExpression	'\\0'		73061	1					
ANR	73579	IfStatement	if ( diffbuf )		73061	1					
ANR	73580	Condition	diffbuf	758:10:20133:20139	73061	0	True				
ANR	73581	Identifier	diffbuf		73061	0					
ANR	73582	CompoundStatement		67:3:1966:2008	73061	1					
ANR	73583	IdentifierDeclStatement	char * p = * diffbuf = xmalloc ( maxdiffsize ) ;	760:3:20148:20190	73061	0	True				
ANR	73584	IdentifierDecl	* p = * diffbuf = xmalloc ( maxdiffsize )		73061	0					
ANR	73585	IdentifierDeclType	char *		73061	0					
ANR	73586	Identifier	p		73061	1					
ANR	73587	AssignmentExpression	* p = * diffbuf = xmalloc ( maxdiffsize )		73061	2		=			
ANR	73588	Identifier	p		73061	0					
ANR	73589	AssignmentExpression	* diffbuf = xmalloc ( maxdiffsize )		73061	1		=			
ANR	73590	UnaryOperationExpression	* diffbuf		73061	0					
ANR	73591	UnaryOperator	*		73061	0					
ANR	73592	Identifier	diffbuf		73061	1					
ANR	73593	CallExpression	xmalloc ( maxdiffsize )		73061	1					
ANR	73594	Callee	xmalloc		73061	0					
ANR	73595	Identifier	xmalloc		73061	0					
ANR	73596	ArgumentList	maxdiffsize		73061	1					
ANR	73597	Argument	maxdiffsize		73061	0					
ANR	73598	Identifier	maxdiffsize		73061	0					
ANR	73599	ExpressionStatement	"strcpy ( p , SCCSDIFF1 )"	761:3:20195:20216	73061	1	True				
ANR	73600	CallExpression	"strcpy ( p , SCCSDIFF1 )"		73061	0					
ANR	73601	Callee	strcpy		73061	0					
ANR	73602	Identifier	strcpy		73061	0					
ANR	73603	ArgumentList	p		73061	1					
ANR	73604	Argument	p		73061	0					
ANR	73605	Identifier	p		73061	0					
ANR	73606	Argument	SCCSDIFF1		73061	1					
ANR	73607	Identifier	SCCSDIFF1		73061	0					
ANR	73608	ExpressionStatement	p += sizeof SCCSDIFF1 - 1	762:3:20221:20246	73061	2	True				
ANR	73609	AssignmentExpression	p += sizeof SCCSDIFF1 - 1		73061	0		+=			
ANR	73610	Identifier	p		73061	0					
ANR	73611	AdditiveExpression	sizeof SCCSDIFF1 - 1		73061	1		-			
ANR	73612	SizeofExpression	sizeof SCCSDIFF1		73061	0					
ANR	73613	Sizeof	sizeof		73061	0					
ANR	73614	Identifier	SCCSDIFF1		73061	1					
ANR	73615	PrimaryExpression	1		73061	1					
ANR	73616	ExpressionStatement	"p += quote_system_arg ( p , trybuf )"	763:3:20251:20284	73061	3	True				
ANR	73617	AssignmentExpression	"p += quote_system_arg ( p , trybuf )"		73061	0		+=			
ANR	73618	Identifier	p		73061	0					
ANR	73619	CallExpression	"quote_system_arg ( p , trybuf )"		73061	1					
ANR	73620	Callee	quote_system_arg		73061	0					
ANR	73621	Identifier	quote_system_arg		73061	0					
ANR	73622	ArgumentList	p		73061	1					
ANR	73623	Argument	p		73061	0					
ANR	73624	Identifier	p		73061	0					
ANR	73625	Argument	trybuf		73061	1					
ANR	73626	Identifier	trybuf		73061	0					
ANR	73627	ExpressionStatement	"sprintf ( p , SCCSDIFF2 , dotslash )"	764:3:20289:20321	73061	4	True				
ANR	73628	CallExpression	"sprintf ( p , SCCSDIFF2 , dotslash )"		73061	0					
ANR	73629	Callee	sprintf		73061	0					
ANR	73630	Identifier	sprintf		73061	0					
ANR	73631	ArgumentList	p		73061	1					
ANR	73632	Argument	p		73061	0					
ANR	73633	Identifier	p		73061	0					
ANR	73634	Argument	SCCSDIFF2		73061	1					
ANR	73635	Identifier	SCCSDIFF2		73061	0					
ANR	73636	Argument	dotslash		73061	2					
ANR	73637	Identifier	dotslash		73061	0					
ANR	73638	ExpressionStatement	p += strlen ( p )	765:3:20326:20341	73061	5	True				
ANR	73639	AssignmentExpression	p += strlen ( p )		73061	0		+=			
ANR	73640	Identifier	p		73061	0					
ANR	73641	CallExpression	strlen ( p )		73061	1					
ANR	73642	Callee	strlen		73061	0					
ANR	73643	Identifier	strlen		73061	0					
ANR	73644	ArgumentList	p		73061	1					
ANR	73645	Argument	p		73061	0					
ANR	73646	Identifier	p		73061	0					
ANR	73647	ExpressionStatement	"p += quote_system_arg ( p , filename )"	766:3:20346:20381	73061	6	True				
ANR	73648	AssignmentExpression	"p += quote_system_arg ( p , filename )"		73061	0		+=			
ANR	73649	Identifier	p		73061	0					
ANR	73650	CallExpression	"quote_system_arg ( p , filename )"		73061	1					
ANR	73651	Callee	quote_system_arg		73061	0					
ANR	73652	Identifier	quote_system_arg		73061	0					
ANR	73653	ArgumentList	p		73061	1					
ANR	73654	Argument	p		73061	0					
ANR	73655	Identifier	p		73061	0					
ANR	73656	Argument	filename		73061	1					
ANR	73657	Identifier	filename		73061	0					
ANR	73658	ExpressionStatement	* p ++ = '>'	767:3:20386:20396	73061	7	True				
ANR	73659	AssignmentExpression	* p ++ = '>'		73061	0		=			
ANR	73660	UnaryOperationExpression	* p ++		73061	0					
ANR	73661	UnaryOperator	*		73061	0					
ANR	73662	PostIncDecOperationExpression	p ++		73061	1					
ANR	73663	Identifier	p		73061	0					
ANR	73664	IncDec	++		73061	1					
ANR	73665	PrimaryExpression	'>'		73061	1					
ANR	73666	ExpressionStatement	"strcpy ( p , DEV_NULL )"	768:3:20401:20421	73061	8	True				
ANR	73667	CallExpression	"strcpy ( p , DEV_NULL )"		73061	0					
ANR	73668	Callee	strcpy		73061	0					
ANR	73669	Identifier	strcpy		73061	0					
ANR	73670	ArgumentList	p		73061	1					
ANR	73671	Argument	p		73061	0					
ANR	73672	Identifier	p		73061	0					
ANR	73673	Argument	DEV_NULL		73061	1					
ANR	73674	Identifier	DEV_NULL		73061	0					
ANR	73675	ExpressionStatement	"r = ""SCCS"""	771:6:20433:20443	73061	2	True				
ANR	73676	AssignmentExpression	"r = ""SCCS"""		73061	0		=			
ANR	73677	Identifier	r		73061	0					
ANR	73678	PrimaryExpression	"""SCCS"""		73061	1					
ANR	73679	ElseStatement	else		73061	0					
ANR	73680	IfStatement	"if ( ! readonly && filestat && try1 ( ""%s@@"" , filebase ) && S_ISDIR ( cstat . st_mode ) )"		73061	0					
ANR	73681	Condition	"! readonly && filestat && try1 ( ""%s@@"" , filebase ) && S_ISDIR ( cstat . st_mode )"	773:11:20462:20540	73061	0	True				
ANR	73682	AndExpression	"! readonly && filestat && try1 ( ""%s@@"" , filebase ) && S_ISDIR ( cstat . st_mode )"		73061	0		&&			
ANR	73683	UnaryOperationExpression	! readonly		73061	0					
ANR	73684	UnaryOperator	!		73061	0					
ANR	73685	Identifier	readonly		73061	1					
ANR	73686	AndExpression	"filestat && try1 ( ""%s@@"" , filebase ) && S_ISDIR ( cstat . st_mode )"		73061	1		&&			
ANR	73687	Identifier	filestat		73061	0					
ANR	73688	AndExpression	"try1 ( ""%s@@"" , filebase ) && S_ISDIR ( cstat . st_mode )"		73061	1		&&			
ANR	73689	CallExpression	"try1 ( ""%s@@"" , filebase )"		73061	0					
ANR	73690	Callee	try1		73061	0					
ANR	73691	Identifier	try1		73061	0					
ANR	73692	ArgumentList	"""%s@@"""		73061	1					
ANR	73693	Argument	"""%s@@"""		73061	0					
ANR	73694	PrimaryExpression	"""%s@@"""		73061	0					
ANR	73695	Argument	filebase		73061	1					
ANR	73696	Identifier	filebase		73061	0					
ANR	73697	CallExpression	S_ISDIR ( cstat . st_mode )		73061	1					
ANR	73698	Callee	S_ISDIR		73061	0					
ANR	73699	Identifier	S_ISDIR		73061	0					
ANR	73700	ArgumentList	cstat . st_mode		73061	1					
ANR	73701	Argument	cstat . st_mode		73061	0					
ANR	73702	MemberAccess	cstat . st_mode		73061	0					
ANR	73703	Identifier	cstat		73061	0					
ANR	73704	Identifier	st_mode		73061	1					
ANR	73705	CompoundStatement		82:4:2365:2365	73061	1					
ANR	73706	IfStatement	if ( getbuf )		73061	0					
ANR	73707	Condition	getbuf	776:10:20559:20564	73061	0	True				
ANR	73708	Identifier	getbuf		73061	0					
ANR	73709	CompoundStatement		85:3:2391:2431	73061	1					
ANR	73710	IdentifierDeclStatement	char * p = * getbuf = xmalloc ( maxgetsize ) ;	778:3:20573:20613	73061	0	True				
ANR	73711	IdentifierDecl	* p = * getbuf = xmalloc ( maxgetsize )		73061	0					
ANR	73712	IdentifierDeclType	char *		73061	0					
ANR	73713	Identifier	p		73061	1					
ANR	73714	AssignmentExpression	* p = * getbuf = xmalloc ( maxgetsize )		73061	2		=			
ANR	73715	Identifier	p		73061	0					
ANR	73716	AssignmentExpression	* getbuf = xmalloc ( maxgetsize )		73061	1		=			
ANR	73717	UnaryOperationExpression	* getbuf		73061	0					
ANR	73718	UnaryOperator	*		73061	0					
ANR	73719	Identifier	getbuf		73061	1					
ANR	73720	CallExpression	xmalloc ( maxgetsize )		73061	1					
ANR	73721	Callee	xmalloc		73061	0					
ANR	73722	Identifier	xmalloc		73061	0					
ANR	73723	ArgumentList	maxgetsize		73061	1					
ANR	73724	Argument	maxgetsize		73061	0					
ANR	73725	Identifier	maxgetsize		73061	0					
ANR	73726	ExpressionStatement	"strcpy ( p , CLEARTOOL_CO )"	779:3:20618:20642	73061	1	True				
ANR	73727	CallExpression	"strcpy ( p , CLEARTOOL_CO )"		73061	0					
ANR	73728	Callee	strcpy		73061	0					
ANR	73729	Identifier	strcpy		73061	0					
ANR	73730	ArgumentList	p		73061	1					
ANR	73731	Argument	p		73061	0					
ANR	73732	Identifier	p		73061	0					
ANR	73733	Argument	CLEARTOOL_CO		73061	1					
ANR	73734	Identifier	CLEARTOOL_CO		73061	0					
ANR	73735	ExpressionStatement	p += sizeof CLEARTOOL_CO - 1	780:3:20647:20675	73061	2	True				
ANR	73736	AssignmentExpression	p += sizeof CLEARTOOL_CO - 1		73061	0		+=			
ANR	73737	Identifier	p		73061	0					
ANR	73738	AdditiveExpression	sizeof CLEARTOOL_CO - 1		73061	1		-			
ANR	73739	SizeofExpression	sizeof CLEARTOOL_CO		73061	0					
ANR	73740	Sizeof	sizeof		73061	0					
ANR	73741	Identifier	CLEARTOOL_CO		73061	1					
ANR	73742	PrimaryExpression	1		73061	1					
ANR	73743	ExpressionStatement	"p += quote_system_arg ( p , filename )"	781:3:20680:20715	73061	3	True				
ANR	73744	AssignmentExpression	"p += quote_system_arg ( p , filename )"		73061	0		+=			
ANR	73745	Identifier	p		73061	0					
ANR	73746	CallExpression	"quote_system_arg ( p , filename )"		73061	1					
ANR	73747	Callee	quote_system_arg		73061	0					
ANR	73748	Identifier	quote_system_arg		73061	0					
ANR	73749	ArgumentList	p		73061	1					
ANR	73750	Argument	p		73061	0					
ANR	73751	Identifier	p		73061	0					
ANR	73752	Argument	filename		73061	1					
ANR	73753	Identifier	filename		73061	0					
ANR	73754	ExpressionStatement	* p = '\\0'	782:3:20720:20729	73061	4	True				
ANR	73755	AssignmentExpression	* p = '\\0'		73061	0		=			
ANR	73756	UnaryOperationExpression	* p		73061	0					
ANR	73757	UnaryOperator	*		73061	0					
ANR	73758	Identifier	p		73061	1					
ANR	73759	PrimaryExpression	'\\0'		73061	1					
ANR	73760	IfStatement	if ( diffbuf )		73061	1					
ANR	73761	Condition	diffbuf	785:10:20745:20751	73061	0	True				
ANR	73762	Identifier	diffbuf		73061	0					
ANR	73763	ExpressionStatement	* diffbuf = 0	786:1:20755:20767	73061	1	True				
ANR	73764	AssignmentExpression	* diffbuf = 0		73061	0		=			
ANR	73765	UnaryOperationExpression	* diffbuf		73061	0					
ANR	73766	UnaryOperator	*		73061	0					
ANR	73767	Identifier	diffbuf		73061	1					
ANR	73768	PrimaryExpression	0		73061	1					
ANR	73769	ExpressionStatement	"r = ""ClearCase"""	788:6:20776:20791	73061	2	True				
ANR	73770	AssignmentExpression	"r = ""ClearCase"""		73061	0		=			
ANR	73771	Identifier	r		73061	0					
ANR	73772	PrimaryExpression	"""ClearCase"""		73061	1					
ANR	73773	ElseStatement	else		73061	0					
ANR	73774	IfStatement	"if ( ! readonly && filestat && ( getenv ( ""P4PORT"" ) || getenv ( ""P4USER"" ) || getenv ( ""P4CONFIG"" ) ) )"		73061	0					
ANR	73775	Condition	"! readonly && filestat && ( getenv ( ""P4PORT"" ) || getenv ( ""P4USER"" ) || getenv ( ""P4CONFIG"" ) )"	790:11:20811:20906	73061	0	True				
ANR	73776	AndExpression	"! readonly && filestat && ( getenv ( ""P4PORT"" ) || getenv ( ""P4USER"" ) || getenv ( ""P4CONFIG"" ) )"		73061	0		&&			
ANR	73777	UnaryOperationExpression	! readonly		73061	0					
ANR	73778	UnaryOperator	!		73061	0					
ANR	73779	Identifier	readonly		73061	1					
ANR	73780	AndExpression	"filestat && ( getenv ( ""P4PORT"" ) || getenv ( ""P4USER"" ) || getenv ( ""P4CONFIG"" ) )"		73061	1		&&			
ANR	73781	Identifier	filestat		73061	0					
ANR	73782	OrExpression	"getenv ( ""P4PORT"" ) || getenv ( ""P4USER"" ) || getenv ( ""P4CONFIG"" )"		73061	1		||			
ANR	73783	CallExpression	"getenv ( ""P4PORT"" )"		73061	0					
ANR	73784	Callee	getenv		73061	0					
ANR	73785	Identifier	getenv		73061	0					
ANR	73786	ArgumentList	"""P4PORT"""		73061	1					
ANR	73787	Argument	"""P4PORT"""		73061	0					
ANR	73788	PrimaryExpression	"""P4PORT"""		73061	0					
ANR	73789	OrExpression	"getenv ( ""P4USER"" ) || getenv ( ""P4CONFIG"" )"		73061	1		||			
ANR	73790	CallExpression	"getenv ( ""P4USER"" )"		73061	0					
ANR	73791	Callee	getenv		73061	0					
ANR	73792	Identifier	getenv		73061	0					
ANR	73793	ArgumentList	"""P4USER"""		73061	1					
ANR	73794	Argument	"""P4USER"""		73061	0					
ANR	73795	PrimaryExpression	"""P4USER"""		73061	0					
ANR	73796	CallExpression	"getenv ( ""P4CONFIG"" )"		73061	1					
ANR	73797	Callee	getenv		73061	0					
ANR	73798	Identifier	getenv		73061	0					
ANR	73799	ArgumentList	"""P4CONFIG"""		73061	1					
ANR	73800	Argument	"""P4CONFIG"""		73061	0					
ANR	73801	PrimaryExpression	"""P4CONFIG"""		73061	0					
ANR	73802	CompoundStatement		99:4:2731:2731	73061	1					
ANR	73803	IfStatement	if ( getbuf )		73061	0					
ANR	73804	Condition	getbuf	793:10:20925:20930	73061	0	True				
ANR	73805	Identifier	getbuf		73061	0					
ANR	73806	CompoundStatement		102:3:2757:2797	73061	1					
ANR	73807	IdentifierDeclStatement	char * p = * getbuf = xmalloc ( maxgetsize ) ;	795:3:20939:20979	73061	0	True				
ANR	73808	IdentifierDecl	* p = * getbuf = xmalloc ( maxgetsize )		73061	0					
ANR	73809	IdentifierDeclType	char *		73061	0					
ANR	73810	Identifier	p		73061	1					
ANR	73811	AssignmentExpression	* p = * getbuf = xmalloc ( maxgetsize )		73061	2		=			
ANR	73812	Identifier	p		73061	0					
ANR	73813	AssignmentExpression	* getbuf = xmalloc ( maxgetsize )		73061	1		=			
ANR	73814	UnaryOperationExpression	* getbuf		73061	0					
ANR	73815	UnaryOperator	*		73061	0					
ANR	73816	Identifier	getbuf		73061	1					
ANR	73817	CallExpression	xmalloc ( maxgetsize )		73061	1					
ANR	73818	Callee	xmalloc		73061	0					
ANR	73819	Identifier	xmalloc		73061	0					
ANR	73820	ArgumentList	maxgetsize		73061	1					
ANR	73821	Argument	maxgetsize		73061	0					
ANR	73822	Identifier	maxgetsize		73061	0					
ANR	73823	ExpressionStatement	"strcpy ( p , PERFORCE_CO )"	796:3:20984:21007	73061	1	True				
ANR	73824	CallExpression	"strcpy ( p , PERFORCE_CO )"		73061	0					
ANR	73825	Callee	strcpy		73061	0					
ANR	73826	Identifier	strcpy		73061	0					
ANR	73827	ArgumentList	p		73061	1					
ANR	73828	Argument	p		73061	0					
ANR	73829	Identifier	p		73061	0					
ANR	73830	Argument	PERFORCE_CO		73061	1					
ANR	73831	Identifier	PERFORCE_CO		73061	0					
ANR	73832	ExpressionStatement	p += sizeof PERFORCE_CO - 1	797:3:21012:21039	73061	2	True				
ANR	73833	AssignmentExpression	p += sizeof PERFORCE_CO - 1		73061	0		+=			
ANR	73834	Identifier	p		73061	0					
ANR	73835	AdditiveExpression	sizeof PERFORCE_CO - 1		73061	1		-			
ANR	73836	SizeofExpression	sizeof PERFORCE_CO		73061	0					
ANR	73837	Sizeof	sizeof		73061	0					
ANR	73838	Identifier	PERFORCE_CO		73061	1					
ANR	73839	PrimaryExpression	1		73061	1					
ANR	73840	ExpressionStatement	"p += quote_system_arg ( p , filename )"	798:3:21044:21079	73061	3	True				
ANR	73841	AssignmentExpression	"p += quote_system_arg ( p , filename )"		73061	0		+=			
ANR	73842	Identifier	p		73061	0					
ANR	73843	CallExpression	"quote_system_arg ( p , filename )"		73061	1					
ANR	73844	Callee	quote_system_arg		73061	0					
ANR	73845	Identifier	quote_system_arg		73061	0					
ANR	73846	ArgumentList	p		73061	1					
ANR	73847	Argument	p		73061	0					
ANR	73848	Identifier	p		73061	0					
ANR	73849	Argument	filename		73061	1					
ANR	73850	Identifier	filename		73061	0					
ANR	73851	ExpressionStatement	* p = '\\0'	799:3:21084:21093	73061	4	True				
ANR	73852	AssignmentExpression	* p = '\\0'		73061	0		=			
ANR	73853	UnaryOperationExpression	* p		73061	0					
ANR	73854	UnaryOperator	*		73061	0					
ANR	73855	Identifier	p		73061	1					
ANR	73856	PrimaryExpression	'\\0'		73061	1					
ANR	73857	IfStatement	if ( diffbuf )		73061	1					
ANR	73858	Condition	diffbuf	802:10:21109:21115	73061	0	True				
ANR	73859	Identifier	diffbuf		73061	0					
ANR	73860	ExpressionStatement	* diffbuf = 0	803:1:21119:21131	73061	1	True				
ANR	73861	AssignmentExpression	* diffbuf = 0		73061	0		=			
ANR	73862	UnaryOperationExpression	* diffbuf		73061	0					
ANR	73863	UnaryOperator	*		73061	0					
ANR	73864	Identifier	diffbuf		73061	1					
ANR	73865	PrimaryExpression	0		73061	1					
ANR	73866	ExpressionStatement	"r = ""Perforce"""	805:6:21140:21154	73061	2	True				
ANR	73867	AssignmentExpression	"r = ""Perforce"""		73061	0		=			
ANR	73868	Identifier	r		73061	0					
ANR	73869	PrimaryExpression	"""Perforce"""		73061	1					
ANR	73870	ExpressionStatement	free ( trybuf )	808:2:21165:21178	73061	76	True				
ANR	73871	CallExpression	free ( trybuf )		73061	0					
ANR	73872	Callee	free		73061	0					
ANR	73873	Identifier	free		73061	0					
ANR	73874	ArgumentList	trybuf		73061	1					
ANR	73875	Argument	trybuf		73061	0					
ANR	73876	Identifier	trybuf		73061	0					
ANR	73877	ExpressionStatement	free ( filebase )	809:2:21182:21197	73061	77	True				
ANR	73878	CallExpression	free ( filebase )		73061	0					
ANR	73879	Callee	free		73061	0					
ANR	73880	Identifier	free		73061	0					
ANR	73881	ArgumentList	filebase		73061	1					
ANR	73882	Argument	filebase		73061	0					
ANR	73883	Identifier	filebase		73061	0					
ANR	73884	ExpressionStatement	free ( dir )	810:2:21201:21211	73061	78	True				
ANR	73885	CallExpression	free ( dir )		73061	0					
ANR	73886	Callee	free		73061	0					
ANR	73887	Identifier	free		73061	0					
ANR	73888	ArgumentList	dir		73061	1					
ANR	73889	Argument	dir		73061	0					
ANR	73890	Identifier	dir		73061	0					
ANR	73891	ReturnStatement	return r ;	811:2:21215:21223	73061	79	True				
ANR	73892	Identifier	r		73061	0					
ANR	73893	ReturnType	char const *		73061	1					
ANR	73894	Identifier	version_controller		73061	2					
ANR	73895	ParameterList	"char const * filename , bool readonly , struct stat const * filestat , char * * getbuf , char * * diffbuf"		73061	3					
ANR	73896	Parameter	char const * filename	692:20:18078:18097	73061	0	True				
ANR	73897	ParameterType	char const *		73061	0					
ANR	73898	Identifier	filename		73061	1					
ANR	73899	Parameter	bool readonly	692:42:18100:18112	73061	1	True				
ANR	73900	ParameterType	bool		73061	0					
ANR	73901	Identifier	readonly		73061	1					
ANR	73902	Parameter	struct stat const * filestat	693:6:18121:18147	73061	2	True				
ANR	73903	ParameterType	struct stat const *		73061	0					
ANR	73904	Identifier	filestat		73061	1					
ANR	73905	Parameter	char * * getbuf	693:35:18150:18162	73061	3	True				
ANR	73906	ParameterType	char * *		73061	0					
ANR	73907	Identifier	getbuf		73061	1					
ANR	73908	Parameter	char * * diffbuf	693:50:18165:18178	73061	4	True				
ANR	73909	ParameterType	char * *		73061	0					
ANR	73910	Identifier	diffbuf		73061	1					
ANR	73911	CFGEntryNode	ENTRY		73061		True				
ANR	73912	CFGExitNode	EXIT		73061		True				
ANR	73913	Symbol	base_name		73061						
ANR	73914	Symbol	quotelen		73061						
ANR	73915	Symbol	CHECKOUT		73061						
ANR	73916	Symbol	dir		73061						
ANR	73917	Symbol	strlen		73061						
ANR	73918	Symbol	* diffbuf		73061						
ANR	73919	Symbol	cstat . st_mode		73061						
ANR	73920	Symbol	readonly		73061						
ANR	73921	Symbol	cstat . st_dev		73061						
ANR	73922	Symbol	xmalloc		73061						
ANR	73923	Symbol	dotslash		73061						
ANR	73924	Symbol	quote_system_arg		73061						
ANR	73925	Symbol	filestat -> st_dev		73061						
ANR	73926	Symbol	cstat		73061						
ANR	73927	Symbol	CLEARTOOL_CO		73061						
ANR	73928	Symbol	filestat -> st_ino		73061						
ANR	73929	Symbol	cstat . st_ino		73061						
ANR	73930	Symbol	maxtrysize		73061						
ANR	73931	Symbol	SCCSPREFIX		73061						
ANR	73932	Symbol	diffbuf		73061						
ANR	73933	Symbol	dir_name		73061						
ANR	73934	Symbol	maxgetsize		73061						
ANR	73935	Symbol	trybuf		73061						
ANR	73936	Symbol	maxfixlen		73061						
ANR	73937	Symbol	RCSDIFF1		73061						
ANR	73938	Symbol	filename		73061						
ANR	73939	Symbol	GET		73061						
ANR	73940	Symbol	dirlen		73061						
ANR	73941	Symbol	* getbuf		73061						
ANR	73942	Symbol	getbuf		73061						
ANR	73943	Symbol	PERFORCE_CO		73061						
ANR	73944	Symbol	* filestat		73061						
ANR	73945	Symbol	CHECKOUT_LOCKED		73061						
ANR	73946	Symbol	getenv		73061						
ANR	73947	Symbol	try1		73061						
ANR	73948	Symbol	try2		73061						
ANR	73949	Symbol	filebase		73061						
ANR	73950	Symbol	RCSSUFFIX		73061						
ANR	73951	Symbol	filestat		73061						
ANR	73952	Symbol	maxdiffsize		73061						
ANR	73953	Symbol	* p ++		73061						
ANR	73954	Symbol	SCCSDIFF1		73061						
ANR	73955	Symbol	SCCSDIFF2		73061						
ANR	73956	Symbol	DEV_NULL		73061						
ANR	73957	Symbol	p		73061						
ANR	73958	Symbol	r		73061						
ANR	73959	Symbol	* filename		73061						
ANR	73960	Symbol	* p		73061						
ANR	73961	Symbol	S_ISDIR		73061						
ANR	73962	Symbol	GET_LOCKED		73061						
ANR	73963	Function	version_get	819:0:21503:22337							
ANR	73964	FunctionDef	"version_get (char const * filename , char const * cs , bool exists , bool readonly , char const * getbuf , struct stat * filestat)"		73963	0					
ANR	73965	CompoundStatement		822:0:21636:22337	73963	0					
ANR	73966	IfStatement	if ( patch_get < 0 )		73963	0					
ANR	73967	Condition	patch_get < 0	823:6:21644:21656	73963	0	True				
ANR	73968	RelationalExpression	patch_get < 0		73963	0		<			
ANR	73969	Identifier	patch_get		73963	0					
ANR	73970	PrimaryExpression	0		73963	1					
ANR	73971	CompoundStatement		3:4:26:26	73963	1					
ANR	73972	ExpressionStatement	"ask ( ""Get file %s from %s%s? [y] "" , quotearg ( filename ) , cs , readonly ? """" : "" with lock"" )"	825:6:21671:21765	73963	0	True				
ANR	73973	CallExpression	"ask ( ""Get file %s from %s%s? [y] "" , quotearg ( filename ) , cs , readonly ? """" : "" with lock"" )"		73963	0					
ANR	73974	Callee	ask		73963	0					
ANR	73975	Identifier	ask		73963	0					
ANR	73976	ArgumentList	"""Get file %s from %s%s? [y] """		73963	1					
ANR	73977	Argument	"""Get file %s from %s%s? [y] """		73963	0					
ANR	73978	PrimaryExpression	"""Get file %s from %s%s? [y] """		73963	0					
ANR	73979	Argument	quotearg ( filename )		73963	1					
ANR	73980	CallExpression	quotearg ( filename )		73963	0					
ANR	73981	Callee	quotearg		73963	0					
ANR	73982	Identifier	quotearg		73963	0					
ANR	73983	ArgumentList	filename		73963	1					
ANR	73984	Argument	filename		73963	0					
ANR	73985	Identifier	filename		73963	0					
ANR	73986	Argument	cs		73963	2					
ANR	73987	Identifier	cs		73963	0					
ANR	73988	Argument	"readonly ? """" : "" with lock"""		73963	3					
ANR	73989	ConditionalExpression	"readonly ? """" : "" with lock"""		73963	0					
ANR	73990	Condition	readonly		73963	0					
ANR	73991	Identifier	readonly		73963	0					
ANR	73992	PrimaryExpression	""""""		73963	1					
ANR	73993	PrimaryExpression	""" with lock"""		73963	2					
ANR	73994	IfStatement	if ( * buf == 'n' )		73963	1					
ANR	73995	Condition	* buf == 'n'	827:10:21777:21787	73963	0	True				
ANR	73996	EqualityExpression	* buf == 'n'		73963	0		==			
ANR	73997	UnaryOperationExpression	* buf		73963	0					
ANR	73998	UnaryOperator	*		73963	0					
ANR	73999	Identifier	buf		73963	1					
ANR	74000	PrimaryExpression	'n'		73963	1					
ANR	74001	ReturnStatement	return 0 ;	828:1:21791:21799	73963	1	True				
ANR	74002	PrimaryExpression	0		73963	0					
ANR	74003	IfStatement	if ( dry_run )		73963	1					
ANR	74004	Condition	dry_run	831:6:21814:21820	73963	0	True				
ANR	74005	Identifier	dry_run		73963	0					
ANR	74006	CompoundStatement		11:4:190:190	73963	1					
ANR	74007	IfStatement	if ( ! exists )		73963	0					
ANR	74008	Condition	! exists	833:10:21839:21846	73963	0	True				
ANR	74009	UnaryOperationExpression	! exists		73963	0					
ANR	74010	UnaryOperator	!		73963	0					
ANR	74011	Identifier	exists		73963	1					
ANR	74012	ExpressionStatement	"fatal ( ""can't do dry run on nonexistent version-controlled file %s; invoke '%s' and try again"" , quotearg ( filename ) , getbuf )"	834:1:21850:21982	73963	1	True				
ANR	74013	CallExpression	"fatal ( ""can't do dry run on nonexistent version-controlled file %s; invoke '%s' and try again"" , quotearg ( filename ) , getbuf )"		73963	0					
ANR	74014	Callee	fatal		73963	0					
ANR	74015	Identifier	fatal		73963	0					
ANR	74016	ArgumentList	"""can't do dry run on nonexistent version-controlled file %s; invoke '%s' and try again"""		73963	1					
ANR	74017	Argument	"""can't do dry run on nonexistent version-controlled file %s; invoke '%s' and try again"""		73963	0					
ANR	74018	PrimaryExpression	"""can't do dry run on nonexistent version-controlled file %s; invoke '%s' and try again"""		73963	0					
ANR	74019	Argument	quotearg ( filename )		73963	1					
ANR	74020	CallExpression	quotearg ( filename )		73963	0					
ANR	74021	Callee	quotearg		73963	0					
ANR	74022	Identifier	quotearg		73963	0					
ANR	74023	ArgumentList	filename		73963	1					
ANR	74024	Argument	filename		73963	0					
ANR	74025	Identifier	filename		73963	0					
ANR	74026	Argument	getbuf		73963	2					
ANR	74027	Identifier	getbuf		73963	0					
ANR	74028	ElseStatement	else		73963	0					
ANR	74029	CompoundStatement		17:4:364:364	73963	0					
ANR	74030	IfStatement	if ( verbosity == VERBOSE )		73963	0					
ANR	74031	Condition	verbosity == VERBOSE	839:10:22013:22032	73963	0	True				
ANR	74032	EqualityExpression	verbosity == VERBOSE		73963	0		==			
ANR	74033	Identifier	verbosity		73963	0					
ANR	74034	Identifier	VERBOSE		73963	1					
ANR	74035	ExpressionStatement	"say ( ""Getting file %s from %s%s...\\n"" , quotearg ( filename ) , cs , readonly ? """" : "" with lock"" )"	840:1:22036:22135	73963	1	True				
ANR	74036	CallExpression	"say ( ""Getting file %s from %s%s...\\n"" , quotearg ( filename ) , cs , readonly ? """" : "" with lock"" )"		73963	0					
ANR	74037	Callee	say		73963	0					
ANR	74038	Identifier	say		73963	0					
ANR	74039	ArgumentList	"""Getting file %s from %s%s...\\n"""		73963	1					
ANR	74040	Argument	"""Getting file %s from %s%s...\\n"""		73963	0					
ANR	74041	PrimaryExpression	"""Getting file %s from %s%s...\\n"""		73963	0					
ANR	74042	Argument	quotearg ( filename )		73963	1					
ANR	74043	CallExpression	quotearg ( filename )		73963	0					
ANR	74044	Callee	quotearg		73963	0					
ANR	74045	Identifier	quotearg		73963	0					
ANR	74046	ArgumentList	filename		73963	1					
ANR	74047	Argument	filename		73963	0					
ANR	74048	Identifier	filename		73963	0					
ANR	74049	Argument	cs		73963	2					
ANR	74050	Identifier	cs		73963	0					
ANR	74051	Argument	"readonly ? """" : "" with lock"""		73963	3					
ANR	74052	ConditionalExpression	"readonly ? """" : "" with lock"""		73963	0					
ANR	74053	Condition	readonly		73963	0					
ANR	74054	Identifier	readonly		73963	0					
ANR	74055	PrimaryExpression	""""""		73963	1					
ANR	74056	PrimaryExpression	""" with lock"""		73963	2					
ANR	74057	IfStatement	if ( systemic ( getbuf ) != 0 )		73963	1					
ANR	74058	Condition	systemic ( getbuf ) != 0	842:10:22147:22168	73963	0	True				
ANR	74059	EqualityExpression	systemic ( getbuf ) != 0		73963	0		!=			
ANR	74060	CallExpression	systemic ( getbuf )		73963	0					
ANR	74061	Callee	systemic		73963	0					
ANR	74062	Identifier	systemic		73963	0					
ANR	74063	ArgumentList	getbuf		73963	1					
ANR	74064	Argument	getbuf		73963	0					
ANR	74065	Identifier	getbuf		73963	0					
ANR	74066	PrimaryExpression	0		73963	1					
ANR	74067	ExpressionStatement	"fatal ( ""Can't get file %s from %s"" , quotearg ( filename ) , cs )"	843:1:22172:22232	73963	1	True				
ANR	74068	CallExpression	"fatal ( ""Can't get file %s from %s"" , quotearg ( filename ) , cs )"		73963	0					
ANR	74069	Callee	fatal		73963	0					
ANR	74070	Identifier	fatal		73963	0					
ANR	74071	ArgumentList	"""Can't get file %s from %s"""		73963	1					
ANR	74072	Argument	"""Can't get file %s from %s"""		73963	0					
ANR	74073	PrimaryExpression	"""Can't get file %s from %s"""		73963	0					
ANR	74074	Argument	quotearg ( filename )		73963	1					
ANR	74075	CallExpression	quotearg ( filename )		73963	0					
ANR	74076	Callee	quotearg		73963	0					
ANR	74077	Identifier	quotearg		73963	0					
ANR	74078	ArgumentList	filename		73963	1					
ANR	74079	Argument	filename		73963	0					
ANR	74080	Identifier	filename		73963	0					
ANR	74081	Argument	cs		73963	2					
ANR	74082	Identifier	cs		73963	0					
ANR	74083	IfStatement	"if ( safe_stat ( filename , filestat ) != 0 )"		73963	2					
ANR	74084	Condition	"safe_stat ( filename , filestat ) != 0"	844:10:22244:22278	73963	0	True				
ANR	74085	EqualityExpression	"safe_stat ( filename , filestat ) != 0"		73963	0		!=			
ANR	74086	CallExpression	"safe_stat ( filename , filestat )"		73963	0					
ANR	74087	Callee	safe_stat		73963	0					
ANR	74088	Identifier	safe_stat		73963	0					
ANR	74089	ArgumentList	filename		73963	1					
ANR	74090	Argument	filename		73963	0					
ANR	74091	Identifier	filename		73963	0					
ANR	74092	Argument	filestat		73963	1					
ANR	74093	Identifier	filestat		73963	0					
ANR	74094	PrimaryExpression	0		73963	1					
ANR	74095	ExpressionStatement	"pfatal ( ""%s"" , quotearg ( filename ) )"	845:1:22282:22316	73963	1	True				
ANR	74096	CallExpression	"pfatal ( ""%s"" , quotearg ( filename ) )"		73963	0					
ANR	74097	Callee	pfatal		73963	0					
ANR	74098	Identifier	pfatal		73963	0					
ANR	74099	ArgumentList	"""%s"""		73963	1					
ANR	74100	Argument	"""%s"""		73963	0					
ANR	74101	PrimaryExpression	"""%s"""		73963	0					
ANR	74102	Argument	quotearg ( filename )		73963	1					
ANR	74103	CallExpression	quotearg ( filename )		73963	0					
ANR	74104	Callee	quotearg		73963	0					
ANR	74105	Identifier	quotearg		73963	0					
ANR	74106	ArgumentList	filename		73963	1					
ANR	74107	Argument	filename		73963	0					
ANR	74108	Identifier	filename		73963	0					
ANR	74109	ReturnStatement	return 1 ;	848:2:22327:22335	73963	2	True				
ANR	74110	PrimaryExpression	1		73963	0					
ANR	74111	ReturnType	bool		73963	1					
ANR	74112	Identifier	version_get		73963	2					
ANR	74113	ParameterList	"char const * filename , char const * cs , bool exists , bool readonly , char const * getbuf , struct stat * filestat"		73963	3					
ANR	74114	Parameter	char const * filename	820:13:21521:21540	73963	0	True				
ANR	74115	ParameterType	char const *		73963	0					
ANR	74116	Identifier	filename		73963	1					
ANR	74117	Parameter	char const * cs	820:35:21543:21556	73963	1	True				
ANR	74118	ParameterType	char const *		73963	0					
ANR	74119	Identifier	cs		73963	1					
ANR	74120	Parameter	bool exists	820:51:21559:21569	73963	2	True				
ANR	74121	ParameterType	bool		73963	0					
ANR	74122	Identifier	exists		73963	1					
ANR	74123	Parameter	bool readonly	820:64:21572:21584	73963	3	True				
ANR	74124	ParameterType	bool		73963	0					
ANR	74125	Identifier	readonly		73963	1					
ANR	74126	Parameter	char const * getbuf	821:6:21593:21610	73963	4	True				
ANR	74127	ParameterType	char const *		73963	0					
ANR	74128	Identifier	getbuf		73963	1					
ANR	74129	Parameter	struct stat * filestat	821:26:21613:21633	73963	5	True				
ANR	74130	ParameterType	struct stat *		73963	0					
ANR	74131	Identifier	filestat		73963	1					
ANR	74132	CFGEntryNode	ENTRY		73963		True				
ANR	74133	CFGExitNode	EXIT		73963		True				
ANR	74134	Symbol	systemic		73963						
ANR	74135	Symbol	* buf		73963						
ANR	74136	Symbol	quotearg		73963						
ANR	74137	Symbol	filestat		73963						
ANR	74138	Symbol	cs		73963						
ANR	74139	Symbol	buf		73963						
ANR	74140	Symbol	filename		73963						
ANR	74141	Symbol	safe_stat		73963						
ANR	74142	Symbol	readonly		73963						
ANR	74143	Symbol	patch_get		73963						
ANR	74144	Symbol	getbuf		73963						
ANR	74145	Symbol	exists		73963						
ANR	74146	Symbol	dry_run		73963						
ANR	74147	Symbol	VERBOSE		73963						
ANR	74148	Symbol	verbosity		73963						
ANR	74149	Function	savebuf	853:0:22384:22611							
ANR	74150	FunctionDef	"savebuf (char const * s , size_t size)"		74149	0					
ANR	74151	CompoundStatement		855:0:22428:22611	74149	0					
ANR	74152	IdentifierDeclStatement	char * rv ;	856:2:22432:22440	74149	0	True				
ANR	74153	IdentifierDecl	* rv		74149	0					
ANR	74154	IdentifierDeclType	char *		74149	0					
ANR	74155	Identifier	rv		74149	1					
ANR	74156	IfStatement	if ( ! size )		74149	1					
ANR	74157	Condition	! size	858:6:22449:22454	74149	0	True				
ANR	74158	UnaryOperationExpression	! size		74149	0					
ANR	74159	UnaryOperator	!		74149	0					
ANR	74160	Identifier	size		74149	1					
ANR	74161	ReturnStatement	return NULL ;	859:4:22461:22472	74149	1	True				
ANR	74162	Identifier	NULL		74149	0					
ANR	74163	ExpressionStatement	rv = malloc ( size )	861:2:22477:22495	74149	2	True				
ANR	74164	AssignmentExpression	rv = malloc ( size )		74149	0		=			
ANR	74165	Identifier	rv		74149	0					
ANR	74166	CallExpression	malloc ( size )		74149	1					
ANR	74167	Callee	malloc		74149	0					
ANR	74168	Identifier	malloc		74149	0					
ANR	74169	ArgumentList	size		74149	1					
ANR	74170	Argument	size		74149	0					
ANR	74171	Identifier	size		74149	0					
ANR	74172	IfStatement	if ( ! rv )		74149	3					
ANR	74173	Condition	! rv	863:6:22504:22507	74149	0	True				
ANR	74174	UnaryOperationExpression	! rv		74149	0					
ANR	74175	UnaryOperator	!		74149	0					
ANR	74176	Identifier	rv		74149	1					
ANR	74177	CompoundStatement		10:4:85:85	74149	1					
ANR	74178	IfStatement	if ( ! using_plan_a )		74149	0					
ANR	74179	Condition	! using_plan_a	865:10:22526:22539	74149	0	True				
ANR	74180	UnaryOperationExpression	! using_plan_a		74149	0					
ANR	74181	UnaryOperator	!		74149	0					
ANR	74182	Identifier	using_plan_a		74149	1					
ANR	74183	ExpressionStatement	xalloc_die ( )	866:1:22543:22556	74149	1	True				
ANR	74184	CallExpression	xalloc_die ( )		74149	0					
ANR	74185	Callee	xalloc_die		74149	0					
ANR	74186	Identifier	xalloc_die		74149	0					
ANR	74187	ArgumentList			74149	1					
ANR	74188	ElseStatement	else		74149	0					
ANR	74189	ExpressionStatement	"memcpy ( rv , s , size )"	869:4:22575:22595	74149	0	True				
ANR	74190	CallExpression	"memcpy ( rv , s , size )"		74149	0					
ANR	74191	Callee	memcpy		74149	0					
ANR	74192	Identifier	memcpy		74149	0					
ANR	74193	ArgumentList	rv		74149	1					
ANR	74194	Argument	rv		74149	0					
ANR	74195	Identifier	rv		74149	0					
ANR	74196	Argument	s		74149	1					
ANR	74197	Identifier	s		74149	0					
ANR	74198	Argument	size		74149	2					
ANR	74199	Identifier	size		74149	0					
ANR	74200	ReturnStatement	return rv ;	871:2:22600:22609	74149	4	True				
ANR	74201	Identifier	rv		74149	0					
ANR	74202	ReturnType	char *		74149	1					
ANR	74203	Identifier	savebuf		74149	2					
ANR	74204	ParameterList	"char const * s , size_t size"		74149	3					
ANR	74205	Parameter	char const * s	854:9:22400:22412	74149	0	True				
ANR	74206	ParameterType	char const *		74149	0					
ANR	74207	Identifier	s		74149	1					
ANR	74208	Parameter	size_t size	854:24:22415:22425	74149	1	True				
ANR	74209	ParameterType	size_t		74149	0					
ANR	74210	Identifier	size		74149	1					
ANR	74211	CFGEntryNode	ENTRY		74149		True				
ANR	74212	CFGExitNode	EXIT		74149		True				
ANR	74213	Symbol	malloc		74149						
ANR	74214	Symbol	s		74149						
ANR	74215	Symbol	NULL		74149						
ANR	74216	Symbol	size		74149						
ANR	74217	Symbol	rv		74149						
ANR	74218	Symbol	using_plan_a		74149						
ANR	74219	Function	savestr	874:0:22614:22685							
ANR	74220	FunctionDef	savestr (char const * s)		74219	0					
ANR	74221	CompoundStatement		876:0:22645:22685	74219	0					
ANR	74222	ReturnStatement	"return savebuf ( s , strlen ( s ) + 1 ) ;"	877:2:22649:22683	74219	0	True				
ANR	74223	CallExpression	"savebuf ( s , strlen ( s ) + 1 )"		74219	0					
ANR	74224	Callee	savebuf		74219	0					
ANR	74225	Identifier	savebuf		74219	0					
ANR	74226	ArgumentList	s		74219	1					
ANR	74227	Argument	s		74219	0					
ANR	74228	Identifier	s		74219	0					
ANR	74229	Argument	strlen ( s ) + 1		74219	1					
ANR	74230	AdditiveExpression	strlen ( s ) + 1		74219	0		+			
ANR	74231	CallExpression	strlen ( s )		74219	0					
ANR	74232	Callee	strlen		74219	0					
ANR	74233	Identifier	strlen		74219	0					
ANR	74234	ArgumentList	s		74219	1					
ANR	74235	Argument	s		74219	0					
ANR	74236	Identifier	s		74219	0					
ANR	74237	PrimaryExpression	1		74219	1					
ANR	74238	ReturnType	char *		74219	1					
ANR	74239	Identifier	savestr		74219	2					
ANR	74240	ParameterList	char const * s		74219	3					
ANR	74241	Parameter	char const * s	875:9:22630:22642	74219	0	True				
ANR	74242	ParameterType	char const *		74219	0					
ANR	74243	Identifier	s		74219	1					
ANR	74244	CFGEntryNode	ENTRY		74219		True				
ANR	74245	CFGExitNode	EXIT		74219		True				
ANR	74246	Symbol	strlen		74219						
ANR	74247	Symbol	s		74219						
ANR	74248	Symbol	savebuf		74219						
ANR	74249	Function	remove_prefix	880:0:22688:22817							
ANR	74250	FunctionDef	"remove_prefix (char * p , size_t prefixlen)"		74249	0					
ANR	74251	CompoundStatement		882:0:22735:22817	74249	0					
ANR	74252	IdentifierDeclStatement	char const * s = p + prefixlen ;	883:2:22739:22768	74249	0	True				
ANR	74253	IdentifierDecl	* s = p + prefixlen		74249	0					
ANR	74254	IdentifierDeclType	char const *		74249	0					
ANR	74255	Identifier	s		74249	1					
ANR	74256	AssignmentExpression	* s = p + prefixlen		74249	2		=			
ANR	74257	Identifier	s		74249	0					
ANR	74258	AdditiveExpression	p + prefixlen		74249	1		+			
ANR	74259	Identifier	p		74249	0					
ANR	74260	Identifier	prefixlen		74249	1					
ANR	74261	WhileStatement	while ( ( * p ++ = * s ++ ) )		74249	1					
ANR	74262	Condition	* p ++ = * s ++	884:9:22779:22791	74249	0	True				
ANR	74263	AssignmentExpression	* p ++ = * s ++		74249	0		=			
ANR	74264	UnaryOperationExpression	* p ++		74249	0					
ANR	74265	UnaryOperator	*		74249	0					
ANR	74266	PostIncDecOperationExpression	p ++		74249	1					
ANR	74267	Identifier	p		74249	0					
ANR	74268	IncDec	++		74249	1					
ANR	74269	UnaryOperationExpression	* s ++		74249	1					
ANR	74270	UnaryOperator	*		74249	0					
ANR	74271	PostIncDecOperationExpression	s ++		74249	1					
ANR	74272	Identifier	s		74249	0					
ANR	74273	IncDec	++		74249	1					
ANR	74274	ExpressionStatement		885:21:22815:22815	74249	1	True				
ANR	74275	ReturnType	void		74249	1					
ANR	74276	Identifier	remove_prefix		74249	2					
ANR	74277	ParameterList	"char * p , size_t prefixlen"		74249	3					
ANR	74278	Parameter	char * p	881:15:22708:22714	74249	0	True				
ANR	74279	ParameterType	char *		74249	0					
ANR	74280	Identifier	p		74249	1					
ANR	74281	Parameter	size_t prefixlen	881:24:22717:22732	74249	1	True				
ANR	74282	ParameterType	size_t		74249	0					
ANR	74283	Identifier	prefixlen		74249	1					
ANR	74284	CFGEntryNode	ENTRY		74249		True				
ANR	74285	CFGExitNode	EXIT		74249		True				
ANR	74286	Symbol	p		74249						
ANR	74287	Symbol	* s ++		74249						
ANR	74288	Symbol	s		74249						
ANR	74289	Symbol	* p ++		74249						
ANR	74290	Symbol	prefixlen		74249						
ANR	74291	Function	format_linenum	888:0:22820:23162							
ANR	74292	FunctionDef	"format_linenum (char numbuf [ LINENUM_LENGTH_BOUND + 1 ] , lin n)"		74291	0					
ANR	74293	CompoundStatement		890:0:22889:23162	74291	0					
ANR	74294	IdentifierDeclStatement	char * p = numbuf + LINENUM_LENGTH_BOUND ;	891:2:22893:22932	74291	0	True				
ANR	74295	IdentifierDecl	* p = numbuf + LINENUM_LENGTH_BOUND		74291	0					
ANR	74296	IdentifierDeclType	char *		74291	0					
ANR	74297	Identifier	p		74291	1					
ANR	74298	AssignmentExpression	* p = numbuf + LINENUM_LENGTH_BOUND		74291	2		=			
ANR	74299	Identifier	p		74291	0					
ANR	74300	AdditiveExpression	numbuf + LINENUM_LENGTH_BOUND		74291	1		+			
ANR	74301	Identifier	numbuf		74291	0					
ANR	74302	Identifier	LINENUM_LENGTH_BOUND		74291	1					
ANR	74303	ExpressionStatement	* p = '\\0'	892:2:22936:22945	74291	1	True				
ANR	74304	AssignmentExpression	* p = '\\0'		74291	0		=			
ANR	74305	UnaryOperationExpression	* p		74291	0					
ANR	74306	UnaryOperator	*		74291	0					
ANR	74307	Identifier	p		74291	1					
ANR	74308	PrimaryExpression	'\\0'		74291	1					
ANR	74309	IfStatement	if ( n < 0 )		74291	2					
ANR	74310	Condition	n < 0	894:6:22954:22958	74291	0	True				
ANR	74311	RelationalExpression	n < 0		74291	0		<			
ANR	74312	Identifier	n		74291	0					
ANR	74313	PrimaryExpression	0		74291	1					
ANR	74314	CompoundStatement		6:4:75:75	74291	1					
ANR	74315	DoStatement	do		74291	0					
ANR	74316	ExpressionStatement	* -- p = '0' - ( int ) ( n % 10 )	897:1:22977:23004	74291	0	True				
ANR	74317	AssignmentExpression	* -- p = '0' - ( int ) ( n % 10 )		74291	0		=			
ANR	74318	UnaryOperationExpression	* -- p		74291	0					
ANR	74319	UnaryOperator	*		74291	0					
ANR	74320	UnaryExpression	-- p		74291	1					
ANR	74321	IncDec	--		74291	0					
ANR	74322	Identifier	p		74291	1					
ANR	74323	AdditiveExpression	'0' - ( int ) ( n % 10 )		74291	1		-			
ANR	74324	PrimaryExpression	'0'		74291	0					
ANR	74325	CastExpression	( int ) ( n % 10 )		74291	1					
ANR	74326	CastTarget	int		74291	0					
ANR	74327	MultiplicativeExpression	n % 10		74291	1		%			
ANR	74328	Identifier	n		74291	0					
ANR	74329	PrimaryExpression	10		74291	1					
ANR	74330	Condition	( n /= 10 ) != 0	898:13:23019:23032	74291	1	True				
ANR	74331	EqualityExpression	( n /= 10 ) != 0		74291	0		!=			
ANR	74332	AssignmentExpression	n /= 10		74291	0		/=			
ANR	74333	Identifier	n		74291	0					
ANR	74334	PrimaryExpression	10		74291	1					
ANR	74335	PrimaryExpression	0		74291	1					
ANR	74336	ExpressionStatement	* -- p = '-'	900:6:23043:23053	74291	1	True				
ANR	74337	AssignmentExpression	* -- p = '-'		74291	0		=			
ANR	74338	UnaryOperationExpression	* -- p		74291	0					
ANR	74339	UnaryOperator	*		74291	0					
ANR	74340	UnaryExpression	-- p		74291	1					
ANR	74341	IncDec	--		74291	0					
ANR	74342	Identifier	p		74291	1					
ANR	74343	PrimaryExpression	'-'		74291	1					
ANR	74344	ElseStatement	else		74291	0					
ANR	74345	CompoundStatement		14:4:182:182	74291	0					
ANR	74346	DoStatement	do		74291	0					
ANR	74347	ExpressionStatement	* -- p = '0' + ( int ) ( n % 10 )	905:1:23084:23111	74291	0	True				
ANR	74348	AssignmentExpression	* -- p = '0' + ( int ) ( n % 10 )		74291	0		=			
ANR	74349	UnaryOperationExpression	* -- p		74291	0					
ANR	74350	UnaryOperator	*		74291	0					
ANR	74351	UnaryExpression	-- p		74291	1					
ANR	74352	IncDec	--		74291	0					
ANR	74353	Identifier	p		74291	1					
ANR	74354	AdditiveExpression	'0' + ( int ) ( n % 10 )		74291	1		+			
ANR	74355	PrimaryExpression	'0'		74291	0					
ANR	74356	CastExpression	( int ) ( n % 10 )		74291	1					
ANR	74357	CastTarget	int		74291	0					
ANR	74358	MultiplicativeExpression	n % 10		74291	1		%			
ANR	74359	Identifier	n		74291	0					
ANR	74360	PrimaryExpression	10		74291	1					
ANR	74361	Condition	( n /= 10 ) != 0	906:13:23126:23139	74291	1	True				
ANR	74362	EqualityExpression	( n /= 10 ) != 0		74291	0		!=			
ANR	74363	AssignmentExpression	n /= 10		74291	0		/=			
ANR	74364	Identifier	n		74291	0					
ANR	74365	PrimaryExpression	10		74291	1					
ANR	74366	PrimaryExpression	0		74291	1					
ANR	74367	ReturnStatement	return p ;	909:2:23152:23160	74291	3	True				
ANR	74368	Identifier	p		74291	0					
ANR	74369	ReturnType	char *		74291	1					
ANR	74370	Identifier	format_linenum		74291	2					
ANR	74371	ParameterList	"char numbuf [ LINENUM_LENGTH_BOUND + 1 ] , lin n"		74291	3					
ANR	74372	Parameter	char numbuf [ LINENUM_LENGTH_BOUND + 1 ]	889:16:22843:22879	74291	0	True				
ANR	74373	ParameterType	char [ LINENUM_LENGTH_BOUND + 1 ]		74291	0					
ANR	74374	Identifier	numbuf		74291	1					
ANR	74375	Parameter	lin n	889:55:22882:22886	74291	1	True				
ANR	74376	ParameterType	lin		74291	0					
ANR	74377	Identifier	n		74291	1					
ANR	74378	CFGEntryNode	ENTRY		74291		True				
ANR	74379	CFGExitNode	EXIT		74291		True				
ANR	74380	Symbol	p		74291						
ANR	74381	Symbol	LINENUM_LENGTH_BOUND		74291						
ANR	74382	Symbol	numbuf		74291						
ANR	74383	Symbol	* -- p		74291						
ANR	74384	Symbol	* p		74291						
ANR	74385	Symbol	n		74291						
ANR	74386	Function	fatal	914:0:23203:23444							
ANR	74387	FunctionDef	fatal (char const * format)		74386	0					
ANR	74388	CompoundStatement		916:0:23240:23444	74386	0					
ANR	74389	IdentifierDeclStatement	va_list args ;	917:2:23244:23256	74386	0	True				
ANR	74390	IdentifierDecl	args		74386	0					
ANR	74391	IdentifierDeclType	va_list		74386	0					
ANR	74392	Identifier	args		74386	1					
ANR	74393	ExpressionStatement	"fprintf ( stderr , ""%s: **** "" , program_name )"	918:2:23260:23303	74386	1	True				
ANR	74394	CallExpression	"fprintf ( stderr , ""%s: **** "" , program_name )"		74386	0					
ANR	74395	Callee	fprintf		74386	0					
ANR	74396	Identifier	fprintf		74386	0					
ANR	74397	ArgumentList	stderr		74386	1					
ANR	74398	Argument	stderr		74386	0					
ANR	74399	Identifier	stderr		74386	0					
ANR	74400	Argument	"""%s: **** """		74386	1					
ANR	74401	PrimaryExpression	"""%s: **** """		74386	0					
ANR	74402	Argument	program_name		74386	2					
ANR	74403	Identifier	program_name		74386	0					
ANR	74404	ExpressionStatement	"va_start ( args , format )"	919:2:23307:23330	74386	2	True				
ANR	74405	CallExpression	"va_start ( args , format )"		74386	0					
ANR	74406	Callee	va_start		74386	0					
ANR	74407	Identifier	va_start		74386	0					
ANR	74408	ArgumentList	args		74386	1					
ANR	74409	Argument	args		74386	0					
ANR	74410	Identifier	args		74386	0					
ANR	74411	Argument	format		74386	1					
ANR	74412	Identifier	format		74386	0					
ANR	74413	ExpressionStatement	"vfprintf ( stderr , format , args )"	920:2:23334:23365	74386	3	True				
ANR	74414	CallExpression	"vfprintf ( stderr , format , args )"		74386	0					
ANR	74415	Callee	vfprintf		74386	0					
ANR	74416	Identifier	vfprintf		74386	0					
ANR	74417	ArgumentList	stderr		74386	1					
ANR	74418	Argument	stderr		74386	0					
ANR	74419	Identifier	stderr		74386	0					
ANR	74420	Argument	format		74386	1					
ANR	74421	Identifier	format		74386	0					
ANR	74422	Argument	args		74386	2					
ANR	74423	Identifier	args		74386	0					
ANR	74424	ExpressionStatement	va_end ( args )	921:2:23369:23382	74386	4	True				
ANR	74425	CallExpression	va_end ( args )		74386	0					
ANR	74426	Callee	va_end		74386	0					
ANR	74427	Identifier	va_end		74386	0					
ANR	74428	ArgumentList	args		74386	1					
ANR	74429	Argument	args		74386	0					
ANR	74430	Identifier	args		74386	0					
ANR	74431	ExpressionStatement	"putc ( '\\n' , stderr )"	922:2:23386:23405	74386	5	True				
ANR	74432	CallExpression	"putc ( '\\n' , stderr )"		74386	0					
ANR	74433	Callee	putc		74386	0					
ANR	74434	Identifier	putc		74386	0					
ANR	74435	ArgumentList	'\\n'		74386	1					
ANR	74436	Argument	'\\n'		74386	0					
ANR	74437	PrimaryExpression	'\\n'		74386	0					
ANR	74438	Argument	stderr		74386	1					
ANR	74439	Identifier	stderr		74386	0					
ANR	74440	ExpressionStatement	fflush ( stderr )	923:2:23409:23424	74386	6	True				
ANR	74441	CallExpression	fflush ( stderr )		74386	0					
ANR	74442	Callee	fflush		74386	0					
ANR	74443	Identifier	fflush		74386	0					
ANR	74444	ArgumentList	stderr		74386	1					
ANR	74445	Argument	stderr		74386	0					
ANR	74446	Identifier	stderr		74386	0					
ANR	74447	ExpressionStatement	fatal_exit ( 0 )	924:2:23428:23442	74386	7	True				
ANR	74448	CallExpression	fatal_exit ( 0 )		74386	0					
ANR	74449	Callee	fatal_exit		74386	0					
ANR	74450	Identifier	fatal_exit		74386	0					
ANR	74451	ArgumentList	0		74386	1					
ANR	74452	Argument	0		74386	0					
ANR	74453	PrimaryExpression	0		74386	0					
ANR	74454	ReturnType	void		74386	1					
ANR	74455	Identifier	fatal		74386	2					
ANR	74456	ParameterList	char const * format		74386	3					
ANR	74457	Parameter	char const * format	915:7:23215:23232	74386	0	True				
ANR	74458	ParameterType	char const *		74386	0					
ANR	74459	Identifier	format		74386	1					
ANR	74460	CFGEntryNode	ENTRY		74386		True				
ANR	74461	CFGExitNode	EXIT		74386		True				
ANR	74462	Symbol	args		74386						
ANR	74463	Symbol	program_name		74386						
ANR	74464	Symbol	format		74386						
ANR	74465	Symbol	stderr		74386						
ANR	74466	Function	xalloc_die	927:0:23447:23499							
ANR	74467	FunctionDef	xalloc_die ()		74466	0					
ANR	74468	CompoundStatement		929:0:23470:23499	74466	0					
ANR	74469	ExpressionStatement	"fatal ( ""out of memory"" )"	930:2:23474:23497	74466	0	True				
ANR	74470	CallExpression	"fatal ( ""out of memory"" )"		74466	0					
ANR	74471	Callee	fatal		74466	0					
ANR	74472	Identifier	fatal		74466	0					
ANR	74473	ArgumentList	"""out of memory"""		74466	1					
ANR	74474	Argument	"""out of memory"""		74466	0					
ANR	74475	PrimaryExpression	"""out of memory"""		74466	0					
ANR	74476	ReturnType	void		74466	1					
ANR	74477	Identifier	xalloc_die		74466	2					
ANR	74478	ParameterList			74466	3					
ANR	74479	CFGEntryNode	ENTRY		74466		True				
ANR	74480	CFGExitNode	EXIT		74466		True				
ANR	74481	Function	read_fatal	933:0:23502:23552							
ANR	74482	FunctionDef	read_fatal ()		74481	0					
ANR	74483	CompoundStatement		935:0:23525:23552	74481	0					
ANR	74484	ExpressionStatement	"pfatal ( ""read error"" )"	936:2:23529:23550	74481	0	True				
ANR	74485	CallExpression	"pfatal ( ""read error"" )"		74481	0					
ANR	74486	Callee	pfatal		74481	0					
ANR	74487	Identifier	pfatal		74481	0					
ANR	74488	ArgumentList	"""read error"""		74481	1					
ANR	74489	Argument	"""read error"""		74481	0					
ANR	74490	PrimaryExpression	"""read error"""		74481	0					
ANR	74491	ReturnType	void		74481	1					
ANR	74492	Identifier	read_fatal		74481	2					
ANR	74493	ParameterList			74481	3					
ANR	74494	CFGEntryNode	ENTRY		74481		True				
ANR	74495	CFGExitNode	EXIT		74481		True				
ANR	74496	Function	write_fatal	939:0:23555:23607							
ANR	74497	FunctionDef	write_fatal ()		74496	0					
ANR	74498	CompoundStatement		941:0:23579:23607	74496	0					
ANR	74499	ExpressionStatement	"pfatal ( ""write error"" )"	942:2:23583:23605	74496	0	True				
ANR	74500	CallExpression	"pfatal ( ""write error"" )"		74496	0					
ANR	74501	Callee	pfatal		74496	0					
ANR	74502	Identifier	pfatal		74496	0					
ANR	74503	ArgumentList	"""write error"""		74496	1					
ANR	74504	Argument	"""write error"""		74496	0					
ANR	74505	PrimaryExpression	"""write error"""		74496	0					
ANR	74506	ReturnType	void		74496	1					
ANR	74507	Identifier	write_fatal		74496	2					
ANR	74508	ParameterList			74496	3					
ANR	74509	CFGEntryNode	ENTRY		74496		True				
ANR	74510	CFGExitNode	EXIT		74496		True				
ANR	74511	Function	pfatal	947:0:23689:24027							
ANR	74512	FunctionDef	pfatal (char const * format)		74511	0					
ANR	74513	CompoundStatement		949:0:23727:24027	74511	0					
ANR	74514	IdentifierDeclStatement	int errnum = errno ;	950:2:23731:23749	74511	0	True				
ANR	74515	IdentifierDecl	errnum = errno		74511	0					
ANR	74516	IdentifierDeclType	int		74511	0					
ANR	74517	Identifier	errnum		74511	1					
ANR	74518	AssignmentExpression	errnum = errno		74511	2		=			
ANR	74519	Identifier	errno		74511	0					
ANR	74520	Identifier	errno		74511	1					
ANR	74521	IdentifierDeclStatement	va_list args ;	951:2:23753:23765	74511	1	True				
ANR	74522	IdentifierDecl	args		74511	0					
ANR	74523	IdentifierDeclType	va_list		74511	0					
ANR	74524	Identifier	args		74511	1					
ANR	74525	ExpressionStatement	"fprintf ( stderr , ""%s: **** "" , program_name )"	952:2:23769:23812	74511	2	True				
ANR	74526	CallExpression	"fprintf ( stderr , ""%s: **** "" , program_name )"		74511	0					
ANR	74527	Callee	fprintf		74511	0					
ANR	74528	Identifier	fprintf		74511	0					
ANR	74529	ArgumentList	stderr		74511	1					
ANR	74530	Argument	stderr		74511	0					
ANR	74531	Identifier	stderr		74511	0					
ANR	74532	Argument	"""%s: **** """		74511	1					
ANR	74533	PrimaryExpression	"""%s: **** """		74511	0					
ANR	74534	Argument	program_name		74511	2					
ANR	74535	Identifier	program_name		74511	0					
ANR	74536	ExpressionStatement	"va_start ( args , format )"	953:2:23816:23839	74511	3	True				
ANR	74537	CallExpression	"va_start ( args , format )"		74511	0					
ANR	74538	Callee	va_start		74511	0					
ANR	74539	Identifier	va_start		74511	0					
ANR	74540	ArgumentList	args		74511	1					
ANR	74541	Argument	args		74511	0					
ANR	74542	Identifier	args		74511	0					
ANR	74543	Argument	format		74511	1					
ANR	74544	Identifier	format		74511	0					
ANR	74545	ExpressionStatement	"vfprintf ( stderr , format , args )"	954:2:23843:23874	74511	4	True				
ANR	74546	CallExpression	"vfprintf ( stderr , format , args )"		74511	0					
ANR	74547	Callee	vfprintf		74511	0					
ANR	74548	Identifier	vfprintf		74511	0					
ANR	74549	ArgumentList	stderr		74511	1					
ANR	74550	Argument	stderr		74511	0					
ANR	74551	Identifier	stderr		74511	0					
ANR	74552	Argument	format		74511	1					
ANR	74553	Identifier	format		74511	0					
ANR	74554	Argument	args		74511	2					
ANR	74555	Identifier	args		74511	0					
ANR	74556	ExpressionStatement	va_end ( args )	955:2:23878:23891	74511	5	True				
ANR	74557	CallExpression	va_end ( args )		74511	0					
ANR	74558	Callee	va_end		74511	0					
ANR	74559	Identifier	va_end		74511	0					
ANR	74560	ArgumentList	args		74511	1					
ANR	74561	Argument	args		74511	0					
ANR	74562	Identifier	args		74511	0					
ANR	74563	ExpressionStatement	fflush ( stderr )	956:2:23895:23910	74511	6	True				
ANR	74564	CallExpression	fflush ( stderr )		74511	0					
ANR	74565	Callee	fflush		74511	0					
ANR	74566	Identifier	fflush		74511	0					
ANR	74567	ArgumentList	stderr		74511	1					
ANR	74568	Argument	stderr		74511	0					
ANR	74569	Identifier	stderr		74511	0					
ANR	74570	ExpressionStatement	errno = errnum	957:2:23958:23972	74511	7	True				
ANR	74571	AssignmentExpression	errno = errnum		74511	0		=			
ANR	74572	Identifier	errno		74511	0					
ANR	74573	Identifier	errnum		74511	1					
ANR	74574	ExpressionStatement	"perror ( "" "" )"	958:2:23976:23988	74511	8	True				
ANR	74575	CallExpression	"perror ( "" "" )"		74511	0					
ANR	74576	Callee	perror		74511	0					
ANR	74577	Identifier	perror		74511	0					
ANR	74578	ArgumentList	""" """		74511	1					
ANR	74579	Argument	""" """		74511	0					
ANR	74580	PrimaryExpression	""" """		74511	0					
ANR	74581	ExpressionStatement	fflush ( stderr )	959:2:23992:24007	74511	9	True				
ANR	74582	CallExpression	fflush ( stderr )		74511	0					
ANR	74583	Callee	fflush		74511	0					
ANR	74584	Identifier	fflush		74511	0					
ANR	74585	ArgumentList	stderr		74511	1					
ANR	74586	Argument	stderr		74511	0					
ANR	74587	Identifier	stderr		74511	0					
ANR	74588	ExpressionStatement	fatal_exit ( 0 )	960:2:24011:24025	74511	10	True				
ANR	74589	CallExpression	fatal_exit ( 0 )		74511	0					
ANR	74590	Callee	fatal_exit		74511	0					
ANR	74591	Identifier	fatal_exit		74511	0					
ANR	74592	ArgumentList	0		74511	1					
ANR	74593	Argument	0		74511	0					
ANR	74594	PrimaryExpression	0		74511	0					
ANR	74595	ReturnType	void		74511	1					
ANR	74596	Identifier	pfatal		74511	2					
ANR	74597	ParameterList	char const * format		74511	3					
ANR	74598	Parameter	char const * format	948:8:23702:23719	74511	0	True				
ANR	74599	ParameterType	char const *		74511	0					
ANR	74600	Identifier	format		74511	1					
ANR	74601	CFGEntryNode	ENTRY		74511		True				
ANR	74602	CFGExitNode	EXIT		74511		True				
ANR	74603	Symbol	args		74511						
ANR	74604	Symbol	errno		74511						
ANR	74605	Symbol	errnum		74511						
ANR	74606	Symbol	program_name		74511						
ANR	74607	Symbol	format		74511						
ANR	74608	Symbol	stderr		74511						
ANR	74609	Function	vsay	965:0:24063:24171							
ANR	74610	FunctionDef	"vsay (char const * format , va_list args)"		74609	0					
ANR	74611	CompoundStatement		967:0:24115:24171	74609	0					
ANR	74612	ExpressionStatement	"vfprintf ( stdout , format , args )"	968:2:24119:24150	74609	0	True				
ANR	74613	CallExpression	"vfprintf ( stdout , format , args )"		74609	0					
ANR	74614	Callee	vfprintf		74609	0					
ANR	74615	Identifier	vfprintf		74609	0					
ANR	74616	ArgumentList	stdout		74609	1					
ANR	74617	Argument	stdout		74609	0					
ANR	74618	Identifier	stdout		74609	0					
ANR	74619	Argument	format		74609	1					
ANR	74620	Identifier	format		74609	0					
ANR	74621	Argument	args		74609	2					
ANR	74622	Identifier	args		74609	0					
ANR	74623	ExpressionStatement	fflush ( stdout )	969:2:24154:24169	74609	1	True				
ANR	74624	CallExpression	fflush ( stdout )		74609	0					
ANR	74625	Callee	fflush		74609	0					
ANR	74626	Identifier	fflush		74609	0					
ANR	74627	ArgumentList	stdout		74609	1					
ANR	74628	Argument	stdout		74609	0					
ANR	74629	Identifier	stdout		74609	0					
ANR	74630	ReturnType	static void		74609	1					
ANR	74631	Identifier	vsay		74609	2					
ANR	74632	ParameterList	"char const * format , va_list args"		74609	3					
ANR	74633	Parameter	char const * format	966:6:24081:24098	74609	0	True				
ANR	74634	ParameterType	char const *		74609	0					
ANR	74635	Identifier	format		74609	1					
ANR	74636	Parameter	va_list args	966:26:24101:24112	74609	1	True				
ANR	74637	ParameterType	va_list		74609	0					
ANR	74638	Identifier	args		74609	1					
ANR	74639	CFGEntryNode	ENTRY		74609		True				
ANR	74640	CFGExitNode	EXIT		74609		True				
ANR	74641	Symbol	args		74609						
ANR	74642	Symbol	stdout		74609						
ANR	74643	Symbol	format		74609						
ANR	74644	Function	say	972:0:24174:24294							
ANR	74645	FunctionDef	say (char const * format)		74644	0					
ANR	74646	CompoundStatement		974:0:24209:24294	74644	0					
ANR	74647	IdentifierDeclStatement	va_list args ;	975:2:24213:24225	74644	0	True				
ANR	74648	IdentifierDecl	args		74644	0					
ANR	74649	IdentifierDeclType	va_list		74644	0					
ANR	74650	Identifier	args		74644	1					
ANR	74651	ExpressionStatement	"va_start ( args , format )"	976:2:24229:24252	74644	1	True				
ANR	74652	CallExpression	"va_start ( args , format )"		74644	0					
ANR	74653	Callee	va_start		74644	0					
ANR	74654	Identifier	va_start		74644	0					
ANR	74655	ArgumentList	args		74644	1					
ANR	74656	Argument	args		74644	0					
ANR	74657	Identifier	args		74644	0					
ANR	74658	Argument	format		74644	1					
ANR	74659	Identifier	format		74644	0					
ANR	74660	ExpressionStatement	"vsay ( format , args )"	977:2:24256:24275	74644	2	True				
ANR	74661	CallExpression	"vsay ( format , args )"		74644	0					
ANR	74662	Callee	vsay		74644	0					
ANR	74663	Identifier	vsay		74644	0					
ANR	74664	ArgumentList	format		74644	1					
ANR	74665	Argument	format		74644	0					
ANR	74666	Identifier	format		74644	0					
ANR	74667	Argument	args		74644	1					
ANR	74668	Identifier	args		74644	0					
ANR	74669	ExpressionStatement	va_end ( args )	978:2:24279:24292	74644	3	True				
ANR	74670	CallExpression	va_end ( args )		74644	0					
ANR	74671	Callee	va_end		74644	0					
ANR	74672	Identifier	va_end		74644	0					
ANR	74673	ArgumentList	args		74644	1					
ANR	74674	Argument	args		74644	0					
ANR	74675	Identifier	args		74644	0					
ANR	74676	ReturnType	void		74644	1					
ANR	74677	Identifier	say		74644	2					
ANR	74678	ParameterList	char const * format		74644	3					
ANR	74679	Parameter	char const * format	973:5:24184:24201	74644	0	True				
ANR	74680	ParameterType	char const *		74644	0					
ANR	74681	Identifier	format		74644	1					
ANR	74682	CFGEntryNode	ENTRY		74644		True				
ANR	74683	CFGExitNode	EXIT		74644		True				
ANR	74684	Symbol	args		74644						
ANR	74685	Symbol	format		74644						
ANR	74686	Function	ask	983:0:24352:25629							
ANR	74687	FunctionDef	ask (char const * format)		74686	0					
ANR	74688	CompoundStatement		985:0:24387:25629	74686	0					
ANR	74689	Statement	static	986:2:24391:24396	74686	0	True				
ANR	74690	IdentifierDeclStatement	int ttyfd = - 2 ;	986:9:24398:24412	74686	1	True				
ANR	74691	IdentifierDecl	ttyfd = - 2		74686	0					
ANR	74692	IdentifierDeclType	int		74686	0					
ANR	74693	Identifier	ttyfd		74686	1					
ANR	74694	AssignmentExpression	ttyfd = - 2		74686	2		=			
ANR	74695	Identifier	ttyfd		74686	0					
ANR	74696	UnaryOperationExpression	- 2		74686	1					
ANR	74697	UnaryOperator	-		74686	0					
ANR	74698	PrimaryExpression	2		74686	1					
ANR	74699	IdentifierDeclStatement	ssize_t r ;	987:2:24416:24425	74686	2	True				
ANR	74700	IdentifierDecl	r		74686	0					
ANR	74701	IdentifierDeclType	ssize_t		74686	0					
ANR	74702	Identifier	r		74686	1					
ANR	74703	IdentifierDeclStatement	va_list args ;	988:2:24429:24441	74686	3	True				
ANR	74704	IdentifierDecl	args		74686	0					
ANR	74705	IdentifierDeclType	va_list		74686	0					
ANR	74706	Identifier	args		74686	1					
ANR	74707	ExpressionStatement	"va_start ( args , format )"	990:2:24446:24469	74686	4	True				
ANR	74708	CallExpression	"va_start ( args , format )"		74686	0					
ANR	74709	Callee	va_start		74686	0					
ANR	74710	Identifier	va_start		74686	0					
ANR	74711	ArgumentList	args		74686	1					
ANR	74712	Argument	args		74686	0					
ANR	74713	Identifier	args		74686	0					
ANR	74714	Argument	format		74686	1					
ANR	74715	Identifier	format		74686	0					
ANR	74716	ExpressionStatement	"vfprintf ( stdout , format , args )"	991:2:24473:24504	74686	5	True				
ANR	74717	CallExpression	"vfprintf ( stdout , format , args )"		74686	0					
ANR	74718	Callee	vfprintf		74686	0					
ANR	74719	Identifier	vfprintf		74686	0					
ANR	74720	ArgumentList	stdout		74686	1					
ANR	74721	Argument	stdout		74686	0					
ANR	74722	Identifier	stdout		74686	0					
ANR	74723	Argument	format		74686	1					
ANR	74724	Identifier	format		74686	0					
ANR	74725	Argument	args		74686	2					
ANR	74726	Identifier	args		74686	0					
ANR	74727	ExpressionStatement	va_end ( args )	992:2:24508:24521	74686	6	True				
ANR	74728	CallExpression	va_end ( args )		74686	0					
ANR	74729	Callee	va_end		74686	0					
ANR	74730	Identifier	va_end		74686	0					
ANR	74731	ArgumentList	args		74686	1					
ANR	74732	Argument	args		74686	0					
ANR	74733	Identifier	args		74686	0					
ANR	74734	ExpressionStatement	fflush ( stdout )	993:2:24525:24540	74686	7	True				
ANR	74735	CallExpression	fflush ( stdout )		74686	0					
ANR	74736	Callee	fflush		74686	0					
ANR	74737	Identifier	fflush		74686	0					
ANR	74738	ArgumentList	stdout		74686	1					
ANR	74739	Argument	stdout		74686	0					
ANR	74740	Identifier	stdout		74686	0					
ANR	74741	IfStatement	if ( ttyfd == - 2 )		74686	8					
ANR	74742	Condition	ttyfd == - 2	995:6:24549:24559	74686	0	True				
ANR	74743	EqualityExpression	ttyfd == - 2		74686	0		==			
ANR	74744	Identifier	ttyfd		74686	0					
ANR	74745	UnaryOperationExpression	- 2		74686	1					
ANR	74746	UnaryOperator	-		74686	0					
ANR	74747	PrimaryExpression	2		74686	1					
ANR	74748	CompoundStatement		12:4:178:178	74686	1					
ANR	74749	ExpressionStatement	"ttyfd = ( posixly_correct || isatty ( STDOUT_FILENO ) ? open ( TTY_DEVICE , O_RDONLY ) : - 1 )"	1003:6:24931:25033	74686	0	True				
ANR	74750	AssignmentExpression	"ttyfd = ( posixly_correct || isatty ( STDOUT_FILENO ) ? open ( TTY_DEVICE , O_RDONLY ) : - 1 )"		74686	0		=			
ANR	74751	Identifier	ttyfd		74686	0					
ANR	74752	ConditionalExpression	"posixly_correct || isatty ( STDOUT_FILENO ) ? open ( TTY_DEVICE , O_RDONLY ) : - 1"		74686	1					
ANR	74753	Condition	posixly_correct || isatty ( STDOUT_FILENO )		74686	0					
ANR	74754	OrExpression	posixly_correct || isatty ( STDOUT_FILENO )		74686	0		||			
ANR	74755	Identifier	posixly_correct		74686	0					
ANR	74756	CallExpression	isatty ( STDOUT_FILENO )		74686	1					
ANR	74757	Callee	isatty		74686	0					
ANR	74758	Identifier	isatty		74686	0					
ANR	74759	ArgumentList	STDOUT_FILENO		74686	1					
ANR	74760	Argument	STDOUT_FILENO		74686	0					
ANR	74761	Identifier	STDOUT_FILENO		74686	0					
ANR	74762	CallExpression	"open ( TTY_DEVICE , O_RDONLY )"		74686	1					
ANR	74763	Callee	open		74686	0					
ANR	74764	Identifier	open		74686	0					
ANR	74765	ArgumentList	TTY_DEVICE		74686	1					
ANR	74766	Argument	TTY_DEVICE		74686	0					
ANR	74767	Identifier	TTY_DEVICE		74686	0					
ANR	74768	Argument	O_RDONLY		74686	1					
ANR	74769	Identifier	O_RDONLY		74686	0					
ANR	74770	UnaryOperationExpression	- 1		74686	2					
ANR	74771	UnaryOperator	-		74686	0					
ANR	74772	PrimaryExpression	1		74686	1					
ANR	74773	IfStatement	if ( ttyfd < 0 )		74686	9					
ANR	74774	Condition	ttyfd < 0	1008:6:25048:25056	74686	0	True				
ANR	74775	RelationalExpression	ttyfd < 0		74686	0		<			
ANR	74776	Identifier	ttyfd		74686	0					
ANR	74777	PrimaryExpression	0		74686	1					
ANR	74778	CompoundStatement		25:4:675:675	74686	1					
ANR	74779	ExpressionStatement	"printf ( ""\\n"" )"	1011:6:25118:25131	74686	0	True				
ANR	74780	CallExpression	"printf ( ""\\n"" )"		74686	0					
ANR	74781	Callee	printf		74686	0					
ANR	74782	Identifier	printf		74686	0					
ANR	74783	ArgumentList	"""\\n"""		74686	1					
ANR	74784	Argument	"""\\n"""		74686	0					
ANR	74785	PrimaryExpression	"""\\n"""		74686	0					
ANR	74786	ExpressionStatement	buf [ 0 ] = '\\n'	1012:6:25139:25152	74686	1	True				
ANR	74787	AssignmentExpression	buf [ 0 ] = '\\n'		74686	0		=			
ANR	74788	ArrayIndexing	buf [ 0 ]		74686	0					
ANR	74789	Identifier	buf		74686	0					
ANR	74790	PrimaryExpression	0		74686	1					
ANR	74791	PrimaryExpression	'\\n'		74686	1					
ANR	74792	ExpressionStatement	buf [ 1 ] = '\\0'	1013:6:25160:25173	74686	2	True				
ANR	74793	AssignmentExpression	buf [ 1 ] = '\\0'		74686	0		=			
ANR	74794	ArrayIndexing	buf [ 1 ]		74686	0					
ANR	74795	Identifier	buf		74686	0					
ANR	74796	PrimaryExpression	1		74686	1					
ANR	74797	PrimaryExpression	'\\0'		74686	1					
ANR	74798	ElseStatement	else		74686	0					
ANR	74799	CompoundStatement		33:6:812:824	74686	0					
ANR	74800	IdentifierDeclStatement	size_t s = 0 ;	1017:6:25200:25212	74686	0	True				
ANR	74801	IdentifierDecl	s = 0		74686	0					
ANR	74802	IdentifierDeclType	size_t		74686	0					
ANR	74803	Identifier	s		74686	1					
ANR	74804	AssignmentExpression	s = 0		74686	2		=			
ANR	74805	Identifier	s		74686	0					
ANR	74806	PrimaryExpression	0		74686	1					
ANR	74807	WhileStatement	"while ( ( r = read ( ttyfd , buf + s , bufsize - 1 - s ) ) == bufsize - 1 - s && buf [ bufsize - 2 ] != '\\n' )"		74686	1					
ANR	74808	Condition	"( r = read ( ttyfd , buf + s , bufsize - 1 - s ) ) == bufsize - 1 - s && buf [ bufsize - 2 ] != '\\n'"	1018:13:25227:25323	74686	0	True				
ANR	74809	AndExpression	"( r = read ( ttyfd , buf + s , bufsize - 1 - s ) ) == bufsize - 1 - s && buf [ bufsize - 2 ] != '\\n'"		74686	0		&&			
ANR	74810	EqualityExpression	"( r = read ( ttyfd , buf + s , bufsize - 1 - s ) ) == bufsize - 1 - s"		74686	0		==			
ANR	74811	AssignmentExpression	"r = read ( ttyfd , buf + s , bufsize - 1 - s )"		74686	0		=			
ANR	74812	Identifier	r		74686	0					
ANR	74813	CallExpression	"read ( ttyfd , buf + s , bufsize - 1 - s )"		74686	1					
ANR	74814	Callee	read		74686	0					
ANR	74815	Identifier	read		74686	0					
ANR	74816	ArgumentList	ttyfd		74686	1					
ANR	74817	Argument	ttyfd		74686	0					
ANR	74818	Identifier	ttyfd		74686	0					
ANR	74819	Argument	buf + s		74686	1					
ANR	74820	AdditiveExpression	buf + s		74686	0		+			
ANR	74821	Identifier	buf		74686	0					
ANR	74822	Identifier	s		74686	1					
ANR	74823	Argument	bufsize - 1 - s		74686	2					
ANR	74824	AdditiveExpression	bufsize - 1 - s		74686	0		-			
ANR	74825	Identifier	bufsize		74686	0					
ANR	74826	AdditiveExpression	1 - s		74686	1		-			
ANR	74827	PrimaryExpression	1		74686	0					
ANR	74828	Identifier	s		74686	1					
ANR	74829	AdditiveExpression	bufsize - 1 - s		74686	1		-			
ANR	74830	Identifier	bufsize		74686	0					
ANR	74831	AdditiveExpression	1 - s		74686	1		-			
ANR	74832	PrimaryExpression	1		74686	0					
ANR	74833	Identifier	s		74686	1					
ANR	74834	EqualityExpression	buf [ bufsize - 2 ] != '\\n'		74686	1		!=			
ANR	74835	ArrayIndexing	buf [ bufsize - 2 ]		74686	0					
ANR	74836	Identifier	buf		74686	0					
ANR	74837	AdditiveExpression	bufsize - 2		74686	1		-			
ANR	74838	Identifier	bufsize		74686	0					
ANR	74839	PrimaryExpression	2		74686	1					
ANR	74840	PrimaryExpression	'\\n'		74686	1					
ANR	74841	CompoundStatement		36:1:939:939	74686	1					
ANR	74842	ExpressionStatement	s = bufsize - 1	1021:3:25332:25347	74686	0	True				
ANR	74843	AssignmentExpression	s = bufsize - 1		74686	0		=			
ANR	74844	Identifier	s		74686	0					
ANR	74845	AdditiveExpression	bufsize - 1		74686	1		-			
ANR	74846	Identifier	bufsize		74686	0					
ANR	74847	PrimaryExpression	1		74686	1					
ANR	74848	ExpressionStatement	bufsize *= 2	1022:3:25352:25364	74686	1	True				
ANR	74849	AssignmentExpression	bufsize *= 2		74686	0		*=			
ANR	74850	Identifier	bufsize		74686	0					
ANR	74851	PrimaryExpression	2		74686	1					
ANR	74852	ExpressionStatement	"buf = realloc ( buf , bufsize )"	1023:3:25369:25397	74686	2	True				
ANR	74853	AssignmentExpression	"buf = realloc ( buf , bufsize )"		74686	0		=			
ANR	74854	Identifier	buf		74686	0					
ANR	74855	CallExpression	"realloc ( buf , bufsize )"		74686	1					
ANR	74856	Callee	realloc		74686	0					
ANR	74857	Identifier	realloc		74686	0					
ANR	74858	ArgumentList	buf		74686	1					
ANR	74859	Argument	buf		74686	0					
ANR	74860	Identifier	buf		74686	0					
ANR	74861	Argument	bufsize		74686	1					
ANR	74862	Identifier	bufsize		74686	0					
ANR	74863	IfStatement	if ( ! buf )		74686	3					
ANR	74864	Condition	! buf	1024:7:25406:25409	74686	0	True				
ANR	74865	UnaryOperationExpression	! buf		74686	0					
ANR	74866	UnaryOperator	!		74686	0					
ANR	74867	Identifier	buf		74686	1					
ANR	74868	ExpressionStatement	xalloc_die ( )	1025:5:25417:25430	74686	1	True				
ANR	74869	CallExpression	xalloc_die ( )		74686	0					
ANR	74870	Callee	xalloc_die		74686	0					
ANR	74871	Identifier	xalloc_die		74686	0					
ANR	74872	ArgumentList			74686	1					
ANR	74873	IfStatement	if ( r == 0 )		74686	2					
ANR	74874	Condition	r == 0	1027:10:25445:25450	74686	0	True				
ANR	74875	EqualityExpression	r == 0		74686	0		==			
ANR	74876	Identifier	r		74686	0					
ANR	74877	PrimaryExpression	0		74686	1					
ANR	74878	ExpressionStatement	"printf ( ""EOF\\n"" )"	1028:1:25454:25470	74686	1	True				
ANR	74879	CallExpression	"printf ( ""EOF\\n"" )"		74686	0					
ANR	74880	Callee	printf		74686	0					
ANR	74881	Identifier	printf		74686	0					
ANR	74882	ArgumentList	"""EOF\\n"""		74686	1					
ANR	74883	Argument	"""EOF\\n"""		74686	0					
ANR	74884	PrimaryExpression	"""EOF\\n"""		74686	0					
ANR	74885	ElseStatement	else		74686	0					
ANR	74886	IfStatement	if ( r < 0 )		74686	0					
ANR	74887	Condition	r < 0	1029:15:25487:25491	74686	0	True				
ANR	74888	RelationalExpression	r < 0		74686	0		<			
ANR	74889	Identifier	r		74686	0					
ANR	74890	PrimaryExpression	0		74686	1					
ANR	74891	CompoundStatement		46:1:1107:1107	74686	1					
ANR	74892	ExpressionStatement	"error ( 0 , errno , ""tty read failed"" )"	1031:3:25500:25535	74686	0	True				
ANR	74893	CallExpression	"error ( 0 , errno , ""tty read failed"" )"		74686	0					
ANR	74894	Callee	error		74686	0					
ANR	74895	Identifier	error		74686	0					
ANR	74896	ArgumentList	0		74686	1					
ANR	74897	Argument	0		74686	0					
ANR	74898	PrimaryExpression	0		74686	0					
ANR	74899	Argument	errno		74686	1					
ANR	74900	Identifier	errno		74686	0					
ANR	74901	Argument	"""tty read failed"""		74686	2					
ANR	74902	PrimaryExpression	"""tty read failed"""		74686	0					
ANR	74903	ExpressionStatement	ignore_value ( close ( ttyfd ) )	1032:3:25540:25568	74686	1	True				
ANR	74904	CallExpression	ignore_value ( close ( ttyfd ) )		74686	0					
ANR	74905	Callee	ignore_value		74686	0					
ANR	74906	Identifier	ignore_value		74686	0					
ANR	74907	ArgumentList	close ( ttyfd )		74686	1					
ANR	74908	Argument	close ( ttyfd )		74686	0					
ANR	74909	CallExpression	close ( ttyfd )		74686	0					
ANR	74910	Callee	close		74686	0					
ANR	74911	Identifier	close		74686	0					
ANR	74912	ArgumentList	ttyfd		74686	1					
ANR	74913	Argument	ttyfd		74686	0					
ANR	74914	Identifier	ttyfd		74686	0					
ANR	74915	ExpressionStatement	ttyfd = - 1	1033:3:25573:25583	74686	2	True				
ANR	74916	AssignmentExpression	ttyfd = - 1		74686	0		=			
ANR	74917	Identifier	ttyfd		74686	0					
ANR	74918	UnaryOperationExpression	- 1		74686	1					
ANR	74919	UnaryOperator	-		74686	0					
ANR	74920	PrimaryExpression	1		74686	1					
ANR	74921	ExpressionStatement	r = 0	1034:3:25588:25593	74686	3	True				
ANR	74922	AssignmentExpression	r = 0		74686	0		=			
ANR	74923	Identifier	r		74686	0					
ANR	74924	PrimaryExpression	0		74686	1					
ANR	74925	ExpressionStatement	buf [ s + r ] = '\\0'	1036:6:25604:25621	74686	3	True				
ANR	74926	AssignmentExpression	buf [ s + r ] = '\\0'		74686	0		=			
ANR	74927	ArrayIndexing	buf [ s + r ]		74686	0					
ANR	74928	Identifier	buf		74686	0					
ANR	74929	AdditiveExpression	s + r		74686	1		+			
ANR	74930	Identifier	s		74686	0					
ANR	74931	Identifier	r		74686	1					
ANR	74932	PrimaryExpression	'\\0'		74686	1					
ANR	74933	ReturnType	void		74686	1					
ANR	74934	Identifier	ask		74686	2					
ANR	74935	ParameterList	char const * format		74686	3					
ANR	74936	Parameter	char const * format	984:5:24362:24379	74686	0	True				
ANR	74937	ParameterType	char const *		74686	0					
ANR	74938	Identifier	format		74686	1					
ANR	74939	CFGEntryNode	ENTRY		74686		True				
ANR	74940	CFGExitNode	EXIT		74686		True				
ANR	74941	Symbol	* buf		74686						
ANR	74942	Symbol	* bufsize		74686						
ANR	74943	Symbol	errno		74686						
ANR	74944	Symbol	read		74686						
ANR	74945	Symbol	stdout		74686						
ANR	74946	Symbol	STDOUT_FILENO		74686						
ANR	74947	Symbol	format		74686						
ANR	74948	Symbol	bufsize		74686						
ANR	74949	Symbol	realloc		74686						
ANR	74950	Symbol	isatty		74686						
ANR	74951	Symbol	ttyfd		74686						
ANR	74952	Symbol	args		74686						
ANR	74953	Symbol	r		74686						
ANR	74954	Symbol	buf		74686						
ANR	74955	Symbol	O_RDONLY		74686						
ANR	74956	Symbol	s		74686						
ANR	74957	Symbol	TTY_DEVICE		74686						
ANR	74958	Symbol	posixly_correct		74686						
ANR	74959	Symbol	* r		74686						
ANR	74960	Symbol	close		74686						
ANR	74961	Symbol	* s		74686						
ANR	74962	Symbol	open		74686						
ANR	74963	Function	ok_to_reverse	1042:0:25684:26517							
ANR	74964	FunctionDef	ok_to_reverse (char const * format)		74963	0					
ANR	74965	CompoundStatement		1044:0:25729:26517	74963	0					
ANR	74966	IdentifierDeclStatement	bool r = false ;	1045:2:25733:25747	74963	0	True				
ANR	74967	IdentifierDecl	r = false		74963	0					
ANR	74968	IdentifierDeclType	bool		74963	0					
ANR	74969	Identifier	r		74963	1					
ANR	74970	AssignmentExpression	r = false		74963	2		=			
ANR	74971	Identifier	false		74963	0					
ANR	74972	Identifier	false		74963	1					
ANR	74973	IfStatement	if ( noreverse || ! ( force && verbosity == SILENT ) )		74963	1					
ANR	74974	Condition	noreverse || ! ( force && verbosity == SILENT )	1047:6:25756:25800	74963	0	True				
ANR	74975	OrExpression	noreverse || ! ( force && verbosity == SILENT )		74963	0		||			
ANR	74976	Identifier	noreverse		74963	0					
ANR	74977	UnaryOperationExpression	! ( force && verbosity == SILENT )		74963	1					
ANR	74978	UnaryOperator	!		74963	0					
ANR	74979	AndExpression	force && verbosity == SILENT		74963	1		&&			
ANR	74980	Identifier	force		74963	0					
ANR	74981	EqualityExpression	verbosity == SILENT		74963	1		==			
ANR	74982	Identifier	verbosity		74963	0					
ANR	74983	Identifier	SILENT		74963	1					
ANR	74984	CompoundStatement		6:6:85:97	74963	1					
ANR	74985	IdentifierDeclStatement	va_list args ;	1049:6:25815:25827	74963	0	True				
ANR	74986	IdentifierDecl	args		74963	0					
ANR	74987	IdentifierDeclType	va_list		74963	0					
ANR	74988	Identifier	args		74963	1					
ANR	74989	ExpressionStatement	"va_start ( args , format )"	1050:6:25835:25858	74963	1	True				
ANR	74990	CallExpression	"va_start ( args , format )"		74963	0					
ANR	74991	Callee	va_start		74963	0					
ANR	74992	Identifier	va_start		74963	0					
ANR	74993	ArgumentList	args		74963	1					
ANR	74994	Argument	args		74963	0					
ANR	74995	Identifier	args		74963	0					
ANR	74996	Argument	format		74963	1					
ANR	74997	Identifier	format		74963	0					
ANR	74998	ExpressionStatement	"vsay ( format , args )"	1051:6:25866:25885	74963	2	True				
ANR	74999	CallExpression	"vsay ( format , args )"		74963	0					
ANR	75000	Callee	vsay		74963	0					
ANR	75001	Identifier	vsay		74963	0					
ANR	75002	ArgumentList	format		74963	1					
ANR	75003	Argument	format		74963	0					
ANR	75004	Identifier	format		74963	0					
ANR	75005	Argument	args		74963	1					
ANR	75006	Identifier	args		74963	0					
ANR	75007	ExpressionStatement	va_end ( args )	1052:6:25893:25906	74963	3	True				
ANR	75008	CallExpression	va_end ( args )		74963	0					
ANR	75009	Callee	va_end		74963	0					
ANR	75010	Identifier	va_end		74963	0					
ANR	75011	ArgumentList	args		74963	1					
ANR	75012	Argument	args		74963	0					
ANR	75013	Identifier	args		74963	0					
ANR	75014	IfStatement	if ( noreverse )		74963	2					
ANR	75015	Condition	noreverse	1055:6:25921:25929	74963	0	True				
ANR	75016	Identifier	noreverse		74963	0					
ANR	75017	CompoundStatement		13:4:206:206	74963	1					
ANR	75018	ExpressionStatement	"say ( ""  Skipping patch.\\n"" )"	1057:6:25944:25971	74963	0	True				
ANR	75019	CallExpression	"say ( ""  Skipping patch.\\n"" )"		74963	0					
ANR	75020	Callee	say		74963	0					
ANR	75021	Identifier	say		74963	0					
ANR	75022	ArgumentList	"""  Skipping patch.\\n"""		74963	1					
ANR	75023	Argument	"""  Skipping patch.\\n"""		74963	0					
ANR	75024	PrimaryExpression	"""  Skipping patch.\\n"""		74963	0					
ANR	75025	ExpressionStatement	skip_rest_of_patch = true	1058:6:25979:26004	74963	1	True				
ANR	75026	AssignmentExpression	skip_rest_of_patch = true		74963	0		=			
ANR	75027	Identifier	skip_rest_of_patch		74963	0					
ANR	75028	Identifier	true		74963	1					
ANR	75029	ElseStatement	else		74963	0					
ANR	75030	IfStatement	if ( force )		74963	0					
ANR	75031	Condition	force	1060:11:26023:26027	74963	0	True				
ANR	75032	Identifier	force		74963	0					
ANR	75033	CompoundStatement		18:4:304:304	74963	1					
ANR	75034	IfStatement	if ( verbosity != SILENT )		74963	0					
ANR	75035	Condition	verbosity != SILENT	1062:10:26046:26064	74963	0	True				
ANR	75036	EqualityExpression	verbosity != SILENT		74963	0		!=			
ANR	75037	Identifier	verbosity		74963	0					
ANR	75038	Identifier	SILENT		74963	1					
ANR	75039	ExpressionStatement	"say ( ""  Applying it anyway.\\n"" )"	1063:1:26068:26099	74963	1	True				
ANR	75040	CallExpression	"say ( ""  Applying it anyway.\\n"" )"		74963	0					
ANR	75041	Callee	say		74963	0					
ANR	75042	Identifier	say		74963	0					
ANR	75043	ArgumentList	"""  Applying it anyway.\\n"""		74963	1					
ANR	75044	Argument	"""  Applying it anyway.\\n"""		74963	0					
ANR	75045	PrimaryExpression	"""  Applying it anyway.\\n"""		74963	0					
ANR	75046	ElseStatement	else		74963	0					
ANR	75047	IfStatement	if ( batch )		74963	0					
ANR	75048	Condition	batch	1065:11:26118:26122	74963	0	True				
ANR	75049	Identifier	batch		74963	0					
ANR	75050	CompoundStatement		23:4:399:399	74963	1					
ANR	75051	ExpressionStatement	"say ( reverse ? ""  Ignoring -R.\\n"" : ""  Assuming -R.\\n"" )"	1067:6:26137:26192	74963	0	True				
ANR	75052	CallExpression	"say ( reverse ? ""  Ignoring -R.\\n"" : ""  Assuming -R.\\n"" )"		74963	0					
ANR	75053	Callee	say		74963	0					
ANR	75054	Identifier	say		74963	0					
ANR	75055	ArgumentList	"reverse ? ""  Ignoring -R.\\n"" : ""  Assuming -R.\\n"""		74963	1					
ANR	75056	Argument	"reverse ? ""  Ignoring -R.\\n"" : ""  Assuming -R.\\n"""		74963	0					
ANR	75057	ConditionalExpression	"reverse ? ""  Ignoring -R.\\n"" : ""  Assuming -R.\\n"""		74963	0					
ANR	75058	Condition	reverse		74963	0					
ANR	75059	Identifier	reverse		74963	0					
ANR	75060	PrimaryExpression	"""  Ignoring -R.\\n"""		74963	1					
ANR	75061	PrimaryExpression	"""  Assuming -R.\\n"""		74963	2					
ANR	75062	ExpressionStatement	r = true	1068:6:26200:26208	74963	1	True				
ANR	75063	AssignmentExpression	r = true		74963	0		=			
ANR	75064	Identifier	r		74963	0					
ANR	75065	Identifier	true		74963	1					
ANR	75066	ElseStatement	else		74963	0					
ANR	75067	CompoundStatement		28:4:497:497	74963	0					
ANR	75068	ExpressionStatement	"ask ( reverse ? ""  Ignore -R? [n] "" : ""  Assume -R? [n] "" )"	1072:6:26235:26292	74963	0	True				
ANR	75069	CallExpression	"ask ( reverse ? ""  Ignore -R? [n] "" : ""  Assume -R? [n] "" )"		74963	0					
ANR	75070	Callee	ask		74963	0					
ANR	75071	Identifier	ask		74963	0					
ANR	75072	ArgumentList	"reverse ? ""  Ignore -R? [n] "" : ""  Assume -R? [n] """		74963	1					
ANR	75073	Argument	"reverse ? ""  Ignore -R? [n] "" : ""  Assume -R? [n] """		74963	0					
ANR	75074	ConditionalExpression	"reverse ? ""  Ignore -R? [n] "" : ""  Assume -R? [n] """		74963	0					
ANR	75075	Condition	reverse		74963	0					
ANR	75076	Identifier	reverse		74963	0					
ANR	75077	PrimaryExpression	"""  Ignore -R? [n] """		74963	1					
ANR	75078	PrimaryExpression	"""  Assume -R? [n] """		74963	2					
ANR	75079	ExpressionStatement	r = * buf == 'y'	1073:6:26300:26315	74963	1	True				
ANR	75080	AssignmentExpression	r = * buf == 'y'		74963	0		=			
ANR	75081	Identifier	r		74963	0					
ANR	75082	EqualityExpression	* buf == 'y'		74963	1		==			
ANR	75083	UnaryOperationExpression	* buf		74963	0					
ANR	75084	UnaryOperator	*		74963	0					
ANR	75085	Identifier	buf		74963	1					
ANR	75086	PrimaryExpression	'y'		74963	1					
ANR	75087	IfStatement	if ( ! r )		74963	2					
ANR	75088	Condition	! r	1074:10:26327:26329	74963	0	True				
ANR	75089	UnaryOperationExpression	! r		74963	0					
ANR	75090	UnaryOperator	!		74963	0					
ANR	75091	Identifier	r		74963	1					
ANR	75092	CompoundStatement		32:1:603:603	74963	1					
ANR	75093	ExpressionStatement	"ask ( ""Apply anyway? [n] "" )"	1076:3:26338:26364	74963	0	True				
ANR	75094	CallExpression	"ask ( ""Apply anyway? [n] "" )"		74963	0					
ANR	75095	Callee	ask		74963	0					
ANR	75096	Identifier	ask		74963	0					
ANR	75097	ArgumentList	"""Apply anyway? [n] """		74963	1					
ANR	75098	Argument	"""Apply anyway? [n] """		74963	0					
ANR	75099	PrimaryExpression	"""Apply anyway? [n] """		74963	0					
ANR	75100	IfStatement	if ( * buf != 'y' )		74963	1					
ANR	75101	Condition	* buf != 'y'	1077:7:26373:26383	74963	0	True				
ANR	75102	EqualityExpression	* buf != 'y'		74963	0		!=			
ANR	75103	UnaryOperationExpression	* buf		74963	0					
ANR	75104	UnaryOperator	*		74963	0					
ANR	75105	Identifier	buf		74963	1					
ANR	75106	PrimaryExpression	'y'		74963	1					
ANR	75107	CompoundStatement		35:5:661:661	74963	1					
ANR	75108	IfStatement	if ( verbosity != SILENT )		74963	0					
ANR	75109	Condition	verbosity != SILENT	1079:11:26404:26422	74963	0	True				
ANR	75110	EqualityExpression	verbosity != SILENT		74963	0		!=			
ANR	75111	Identifier	verbosity		74963	0					
ANR	75112	Identifier	SILENT		74963	1					
ANR	75113	ExpressionStatement	"say ( ""Skipping patch.\\n"" )"	1080:2:26427:26452	74963	1	True				
ANR	75114	CallExpression	"say ( ""Skipping patch.\\n"" )"		74963	0					
ANR	75115	Callee	say		74963	0					
ANR	75116	Identifier	say		74963	0					
ANR	75117	ArgumentList	"""Skipping patch.\\n"""		74963	1					
ANR	75118	Argument	"""Skipping patch.\\n"""		74963	0					
ANR	75119	PrimaryExpression	"""Skipping patch.\\n"""		74963	0					
ANR	75120	ExpressionStatement	skip_rest_of_patch = true	1081:7:26461:26486	74963	1	True				
ANR	75121	AssignmentExpression	skip_rest_of_patch = true		74963	0		=			
ANR	75122	Identifier	skip_rest_of_patch		74963	0					
ANR	75123	Identifier	true		74963	1					
ANR	75124	ReturnStatement	return r ;	1086:2:26507:26515	74963	3	True				
ANR	75125	Identifier	r		74963	0					
ANR	75126	ReturnType	bool		74963	1					
ANR	75127	Identifier	ok_to_reverse		74963	2					
ANR	75128	ParameterList	char const * format		74963	3					
ANR	75129	Parameter	char const * format	1043:15:25704:25721	74963	0	True				
ANR	75130	ParameterType	char const *		74963	0					
ANR	75131	Identifier	format		74963	1					
ANR	75132	CFGEntryNode	ENTRY		74963		True				
ANR	75133	CFGExitNode	EXIT		74963		True				
ANR	75134	Symbol	* buf		74963						
ANR	75135	Symbol	format		74963						
ANR	75136	Symbol	false		74963						
ANR	75137	Symbol	batch		74963						
ANR	75138	Symbol	reverse		74963						
ANR	75139	Symbol	args		74963						
ANR	75140	Symbol	r		74963						
ANR	75141	Symbol	buf		74963						
ANR	75142	Symbol	skip_rest_of_patch		74963						
ANR	75143	Symbol	true		74963						
ANR	75144	Symbol	noreverse		74963						
ANR	75145	Symbol	force		74963						
ANR	75146	Symbol	verbosity		74963						
ANR	75147	Symbol	SILENT		74963						
ANR	75148	DeclStmt									
ANR	75149	Decl							int const	int const [ ]	sigs
ANR	75150	DeclStmt									
ANR	75151	Decl							sigset_t	sigset_t	initial_signal_mask
ANR	75152	DeclStmt									
ANR	75153	Decl							sigset_t	sigset_t	signals_to_block
ANR	75154	Function	fatal_exit_handler	1136:0:27642:27730							
ANR	75155	FunctionDef	fatal_exit_handler (int sig)		75154	0					
ANR	75156	CompoundStatement		1138:0:27683:27730	75154	0					
ANR	75157	ExpressionStatement	"signal ( sig , SIG_IGN )"	1139:2:27687:27708	75154	0	True				
ANR	75158	CallExpression	"signal ( sig , SIG_IGN )"		75154	0					
ANR	75159	Callee	signal		75154	0					
ANR	75160	Identifier	signal		75154	0					
ANR	75161	ArgumentList	sig		75154	1					
ANR	75162	Argument	sig		75154	0					
ANR	75163	Identifier	sig		75154	0					
ANR	75164	Argument	SIG_IGN		75154	1					
ANR	75165	Identifier	SIG_IGN		75154	0					
ANR	75166	ExpressionStatement	fatal_exit ( sig )	1140:2:27712:27728	75154	1	True				
ANR	75167	CallExpression	fatal_exit ( sig )		75154	0					
ANR	75168	Callee	fatal_exit		75154	0					
ANR	75169	Identifier	fatal_exit		75154	0					
ANR	75170	ArgumentList	sig		75154	1					
ANR	75171	Argument	sig		75154	0					
ANR	75172	Identifier	sig		75154	0					
ANR	75173	ReturnType	static void		75154	1					
ANR	75174	Identifier	fatal_exit_handler		75154	2					
ANR	75175	ParameterList	int sig		75154	3					
ANR	75176	Parameter	int sig	1137:20:27674:27680	75154	0	True				
ANR	75177	ParameterType	int		75154	0					
ANR	75178	Identifier	sig		75154	1					
ANR	75179	CFGEntryNode	ENTRY		75154		True				
ANR	75180	CFGExitNode	EXIT		75154		True				
ANR	75181	Symbol	sig		75154						
ANR	75182	Symbol	SIG_IGN		75154						
ANR	75183	Function	set_signals	1144:0:27740:29011							
ANR	75184	FunctionDef	set_signals (bool reset)		75183	0					
ANR	75185	CompoundStatement		1146:0:27770:29011	75183	0					
ANR	75186	IdentifierDeclStatement	int i ;	1147:2:27774:27779	75183	0	True				
ANR	75187	IdentifierDecl	i		75183	0					
ANR	75188	IdentifierDeclType	int		75183	0					
ANR	75189	Identifier	i		75183	1					
ANR	75190	IdentifierDeclStatement	"struct sigaction initial_act , fatal_act ;"	1149:2:27802:27841	75183	1	True				
ANR	75191	IdentifierDecl	initial_act		75183	0					
ANR	75192	IdentifierDeclType	struct sigaction		75183	0					
ANR	75193	Identifier	initial_act		75183	1					
ANR	75194	IdentifierDecl	fatal_act		75183	1					
ANR	75195	IdentifierDeclType	struct sigaction		75183	0					
ANR	75196	Identifier	fatal_act		75183	1					
ANR	75197	ExpressionStatement	fatal_act . sa_handler = fatal_exit	1150:2:27845:27878	75183	2	True				
ANR	75198	AssignmentExpression	fatal_act . sa_handler = fatal_exit		75183	0		=			
ANR	75199	MemberAccess	fatal_act . sa_handler		75183	0					
ANR	75200	Identifier	fatal_act		75183	0					
ANR	75201	Identifier	sa_handler		75183	1					
ANR	75202	Identifier	fatal_exit		75183	1					
ANR	75203	ExpressionStatement	sigemptyset ( & fatal_act . sa_mask )	1151:2:27882:27914	75183	3	True				
ANR	75204	CallExpression	sigemptyset ( & fatal_act . sa_mask )		75183	0					
ANR	75205	Callee	sigemptyset		75183	0					
ANR	75206	Identifier	sigemptyset		75183	0					
ANR	75207	ArgumentList	& fatal_act . sa_mask		75183	1					
ANR	75208	Argument	& fatal_act . sa_mask		75183	0					
ANR	75209	UnaryOperationExpression	& fatal_act . sa_mask		75183	0					
ANR	75210	UnaryOperator	&		75183	0					
ANR	75211	MemberAccess	fatal_act . sa_mask		75183	1					
ANR	75212	Identifier	fatal_act		75183	0					
ANR	75213	Identifier	sa_mask		75183	1					
ANR	75214	ExpressionStatement	fatal_act . sa_flags = 0	1152:2:27918:27940	75183	4	True				
ANR	75215	AssignmentExpression	fatal_act . sa_flags = 0		75183	0		=			
ANR	75216	MemberAccess	fatal_act . sa_flags		75183	0					
ANR	75217	Identifier	fatal_act		75183	0					
ANR	75218	Identifier	sa_flags		75183	1					
ANR	75219	PrimaryExpression	0		75183	1					
ANR	75220	Statement	define	1153:1:27943:27948	75183	5	True				
ANR	75221	Statement	setup_handler	1153:8:27950:27962	75183	6	True				
ANR	75222	Statement	(	1153:21:27963:27963	75183	7	True				
ANR	75223	Statement	sig	1153:22:27964:27966	75183	8	True				
ANR	75224	Statement	)	1153:25:27967:27967	75183	9	True				
ANR	75225	Statement	sigaction	1153:27:27969:27977	75183	10	True				
ANR	75226	Statement	(	1153:37:27979:27979	75183	11	True				
ANR	75227	Statement	sig	1153:38:27980:27982	75183	12	True				
ANR	75228	Statement	","	1153:41:27983:27983	75183	13	True				
ANR	75229	Statement	&	1153:43:27985:27985	75183	14	True				
ANR	75230	Statement	fatal_act	1153:44:27986:27994	75183	15	True				
ANR	75231	Statement	","	1153:53:27995:27995	75183	16	True				
ANR	75232	Statement	(	1153:55:27997:27997	75183	17	True				
ANR	75233	Statement	struct	1153:56:27998:28003	75183	18	True				
ANR	75234	Statement	sigaction	1153:63:28005:28013	75183	19	True				
ANR	75235	Statement	*	1153:73:28015:28015	75183	20	True				
ANR	75236	Statement	)	1153:74:28016:28016	75183	21	True				
ANR	75237	Statement	0	1153:76:28018:28018	75183	22	True				
ANR	75238	Statement	)	1153:77:28019:28019	75183	23	True				
ANR	75239	IfStatement	if ( ! reset )		75183	24					
ANR	75240	Condition	! reset	1158:6:28101:28106	75183	0	True				
ANR	75241	UnaryOperationExpression	! reset		75183	0					
ANR	75242	UnaryOperator	!		75183	0					
ANR	75243	Identifier	reset		75183	1					
ANR	75244	CompoundStatement		14:4:342:342	75183	1					
ANR	75245	ExpressionStatement	"signal ( SIGCHLD , SIG_DFL )"	1162:6:28205:28230	75183	0	True				
ANR	75246	CallExpression	"signal ( SIGCHLD , SIG_DFL )"		75183	0					
ANR	75247	Callee	signal		75183	0					
ANR	75248	Identifier	signal		75183	0					
ANR	75249	ArgumentList	SIGCHLD		75183	1					
ANR	75250	Argument	SIGCHLD		75183	0					
ANR	75251	Identifier	SIGCHLD		75183	0					
ANR	75252	Argument	SIG_DFL		75183	1					
ANR	75253	Identifier	SIG_DFL		75183	0					
ANR	75254	ExpressionStatement	sigemptyset ( & signals_to_block )	1164:6:28245:28276	75183	1	True				
ANR	75255	CallExpression	sigemptyset ( & signals_to_block )		75183	0					
ANR	75256	Callee	sigemptyset		75183	0					
ANR	75257	Identifier	sigemptyset		75183	0					
ANR	75258	ArgumentList	& signals_to_block		75183	1					
ANR	75259	Argument	& signals_to_block		75183	0					
ANR	75260	UnaryOperationExpression	& signals_to_block		75183	0					
ANR	75261	UnaryOperator	&		75183	0					
ANR	75262	Identifier	signals_to_block		75183	1					
ANR	75263	ForStatement	for ( i = 0 ; i < NUM_SIGS ; i ++ )		75183	2					
ANR	75264	ForInit	i = 0 ;	1165:11:28289:28294	75183	0	True				
ANR	75265	AssignmentExpression	i = 0		75183	0		=			
ANR	75266	Identifier	i		75183	0					
ANR	75267	PrimaryExpression	0		75183	1					
ANR	75268	Condition	i < NUM_SIGS	1165:19:28297:28308	75183	1	True				
ANR	75269	RelationalExpression	i < NUM_SIGS		75183	0		<			
ANR	75270	Identifier	i		75183	0					
ANR	75271	Identifier	NUM_SIGS		75183	1					
ANR	75272	PostIncDecOperationExpression	i ++	1165:34:28312:28314	75183	2	True				
ANR	75273	Identifier	i		75183	0					
ANR	75274	IncDec	++		75183	1					
ANR	75275	CompoundStatement		22:3:552:572	75183	3					
ANR	75276	IdentifierDeclStatement	bool ignoring_signal ;	1167:3:28323:28343	75183	0	True				
ANR	75277	IdentifierDecl	ignoring_signal		75183	0					
ANR	75278	IdentifierDeclType	bool		75183	0					
ANR	75279	Identifier	ignoring_signal		75183	1					
ANR	75280	IfStatement	"if ( sigaction ( sigs [ i ] , ( struct sigaction * ) 0 , & initial_act ) != 0 )"		75183	1					
ANR	75281	Condition	"sigaction ( sigs [ i ] , ( struct sigaction * ) 0 , & initial_act ) != 0"	1169:7:28371:28432	75183	0	True				
ANR	75282	EqualityExpression	"sigaction ( sigs [ i ] , ( struct sigaction * ) 0 , & initial_act ) != 0"		75183	0		!=			
ANR	75283	CallExpression	"sigaction ( sigs [ i ] , ( struct sigaction * ) 0 , & initial_act )"		75183	0					
ANR	75284	Callee	sigaction		75183	0					
ANR	75285	Identifier	sigaction		75183	0					
ANR	75286	ArgumentList	sigs [ i ]		75183	1					
ANR	75287	Argument	sigs [ i ]		75183	0					
ANR	75288	ArrayIndexing	sigs [ i ]		75183	0					
ANR	75289	Identifier	sigs		75183	0					
ANR	75290	Identifier	i		75183	1					
ANR	75291	Argument	( struct sigaction * ) 0		75183	1					
ANR	75292	CastExpression	( struct sigaction * ) 0		75183	0					
ANR	75293	CastTarget	struct sigaction *		75183	0					
ANR	75294	PrimaryExpression	0		75183	1					
ANR	75295	Argument	& initial_act		75183	2					
ANR	75296	UnaryOperationExpression	& initial_act		75183	0					
ANR	75297	UnaryOperator	&		75183	0					
ANR	75298	Identifier	initial_act		75183	1					
ANR	75299	PrimaryExpression	0		75183	1					
ANR	75300	ContinueStatement	continue ;	1170:5:28440:28448	75183	1	True				
ANR	75301	ExpressionStatement	ignoring_signal = initial_act . sa_handler == SIG_IGN	1171:3:28453:28504	75183	2	True				
ANR	75302	AssignmentExpression	ignoring_signal = initial_act . sa_handler == SIG_IGN		75183	0		=			
ANR	75303	Identifier	ignoring_signal		75183	0					
ANR	75304	EqualityExpression	initial_act . sa_handler == SIG_IGN		75183	1		==			
ANR	75305	MemberAccess	initial_act . sa_handler		75183	0					
ANR	75306	Identifier	initial_act		75183	0					
ANR	75307	Identifier	sa_handler		75183	1					
ANR	75308	Identifier	SIG_IGN		75183	1					
ANR	75309	IfStatement	if ( ! ignoring_signal )		75183	3					
ANR	75310	Condition	! ignoring_signal	1175:7:28585:28601	75183	0	True				
ANR	75311	UnaryOperationExpression	! ignoring_signal		75183	0					
ANR	75312	UnaryOperator	!		75183	0					
ANR	75313	Identifier	ignoring_signal		75183	1					
ANR	75314	CompoundStatement		31:5:838:838	75183	1					
ANR	75315	ExpressionStatement	"sigaddset ( & signals_to_block , sigs [ i ] )"	1177:7:28618:28656	75183	0	True				
ANR	75316	CallExpression	"sigaddset ( & signals_to_block , sigs [ i ] )"		75183	0					
ANR	75317	Callee	sigaddset		75183	0					
ANR	75318	Identifier	sigaddset		75183	0					
ANR	75319	ArgumentList	& signals_to_block		75183	1					
ANR	75320	Argument	& signals_to_block		75183	0					
ANR	75321	UnaryOperationExpression	& signals_to_block		75183	0					
ANR	75322	UnaryOperator	&		75183	0					
ANR	75323	Identifier	signals_to_block		75183	1					
ANR	75324	Argument	sigs [ i ]		75183	1					
ANR	75325	ArrayIndexing	sigs [ i ]		75183	0					
ANR	75326	Identifier	sigs		75183	0					
ANR	75327	Identifier	i		75183	1					
ANR	75328	ExpressionStatement	setup_handler ( sigs [ i ] )	1178:7:28665:28688	75183	1	True				
ANR	75329	CallExpression	setup_handler ( sigs [ i ] )		75183	0					
ANR	75330	Callee	setup_handler		75183	0					
ANR	75331	Identifier	setup_handler		75183	0					
ANR	75332	ArgumentList	sigs [ i ]		75183	1					
ANR	75333	Argument	sigs [ i ]		75183	0					
ANR	75334	ArrayIndexing	sigs [ i ]		75183	0					
ANR	75335	Identifier	sigs		75183	0					
ANR	75336	Identifier	i		75183	1					
ANR	75337	ElseStatement	else		75183	0					
ANR	75338	CompoundStatement		38:4:946:946	75183	0					
ANR	75339	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & initial_signal_mask , ( sigset_t * ) 0 )"	1186:6:28813:28876	75183	0	True				
ANR	75340	CallExpression	"sigprocmask ( SIG_SETMASK , & initial_signal_mask , ( sigset_t * ) 0 )"		75183	0					
ANR	75341	Callee	sigprocmask		75183	0					
ANR	75342	Identifier	sigprocmask		75183	0					
ANR	75343	ArgumentList	SIG_SETMASK		75183	1					
ANR	75344	Argument	SIG_SETMASK		75183	0					
ANR	75345	Identifier	SIG_SETMASK		75183	0					
ANR	75346	Argument	& initial_signal_mask		75183	1					
ANR	75347	UnaryOperationExpression	& initial_signal_mask		75183	0					
ANR	75348	UnaryOperator	&		75183	0					
ANR	75349	Identifier	initial_signal_mask		75183	1					
ANR	75350	Argument	( sigset_t * ) 0		75183	2					
ANR	75351	CastExpression	( sigset_t * ) 0		75183	0					
ANR	75352	CastTarget	sigset_t *		75183	0					
ANR	75353	PrimaryExpression	0		75183	1					
ANR	75354	ReturnType	void		75183	1					
ANR	75355	Identifier	set_signals		75183	2					
ANR	75356	ParameterList	bool reset		75183	3					
ANR	75357	Parameter	bool reset	1145:13:27758:27767	75183	0	True				
ANR	75358	ParameterType	bool		75183	0					
ANR	75359	Identifier	reset		75183	1					
ANR	75360	CFGEntryNode	ENTRY		75183		True				
ANR	75361	CFGExitNode	EXIT		75183		True				
ANR	75362	Symbol	fatal_act . sa_flags		75183						
ANR	75363	Symbol	& fatal_act . sa_mask		75183						
ANR	75364	Symbol	SIG_SETMASK		75183						
ANR	75365	Symbol	i		75183						
ANR	75366	Symbol	SIG_IGN		75183						
ANR	75367	Symbol	fatal_act . sa_handler		75183						
ANR	75368	Symbol	sigaction		75183						
ANR	75369	Symbol	& initial_act		75183						
ANR	75370	Symbol	NUM_SIGS		75183						
ANR	75371	Symbol	SIGCHLD		75183						
ANR	75372	Symbol	fatal_exit		75183						
ANR	75373	Symbol	& fatal_act		75183						
ANR	75374	Symbol	ignoring_signal		75183						
ANR	75375	Symbol	* i		75183						
ANR	75376	Symbol	& initial_signal_mask		75183						
ANR	75377	Symbol	SIG_DFL		75183						
ANR	75378	Symbol	sigs		75183						
ANR	75379	Symbol	& signals_to_block		75183						
ANR	75380	Symbol	reset		75183						
ANR	75381	Symbol	fatal_act		75183						
ANR	75382	Symbol	* sigs		75183						
ANR	75383	Symbol	initial_act . sa_handler		75183						
ANR	75384	Symbol	initial_act		75183						
ANR	75385	Function	ignore_signals	1197:0:29077:29354							
ANR	75386	FunctionDef	ignore_signals ()		75385	0					
ANR	75387	CompoundStatement		1199:0:29104:29354	75385	0					
ANR	75388	ExpressionStatement	"sigprocmask ( SIG_BLOCK , & signals_to_block , & initial_signal_mask )"	1201:2:29148:29212	75385	0	True				
ANR	75389	CallExpression	"sigprocmask ( SIG_BLOCK , & signals_to_block , & initial_signal_mask )"		75385	0					
ANR	75390	Callee	sigprocmask		75385	0					
ANR	75391	Identifier	sigprocmask		75385	0					
ANR	75392	ArgumentList	SIG_BLOCK		75385	1					
ANR	75393	Argument	SIG_BLOCK		75385	0					
ANR	75394	Identifier	SIG_BLOCK		75385	0					
ANR	75395	Argument	& signals_to_block		75385	1					
ANR	75396	UnaryOperationExpression	& signals_to_block		75385	0					
ANR	75397	UnaryOperator	&		75385	0					
ANR	75398	Identifier	signals_to_block		75385	1					
ANR	75399	Argument	& initial_signal_mask		75385	2					
ANR	75400	UnaryOperationExpression	& initial_signal_mask		75385	0					
ANR	75401	UnaryOperator	&		75385	0					
ANR	75402	Identifier	initial_signal_mask		75385	1					
ANR	75403	ReturnType	void		75385	1					
ANR	75404	Identifier	ignore_signals		75385	2					
ANR	75405	ParameterList			75385	3					
ANR	75406	CFGEntryNode	ENTRY		75385		True				
ANR	75407	CFGExitNode	EXIT		75385		True				
ANR	75408	Symbol	& initial_signal_mask		75385						
ANR	75409	Symbol	& signals_to_block		75385						
ANR	75410	Symbol	SIG_BLOCK		75385						
ANR	75411	Function	exit_with_signal	1210:0:29357:29549							
ANR	75412	FunctionDef	exit_with_signal (int sig)		75411	0					
ANR	75413	CompoundStatement		1212:0:29389:29549	75411	0					
ANR	75414	IdentifierDeclStatement	sigset_t s ;	1213:2:29393:29403	75411	0	True				
ANR	75415	IdentifierDecl	s		75411	0					
ANR	75416	IdentifierDeclType	sigset_t		75411	0					
ANR	75417	Identifier	s		75411	1					
ANR	75418	ExpressionStatement	"signal ( sig , SIG_DFL )"	1214:2:29407:29428	75411	1	True				
ANR	75419	CallExpression	"signal ( sig , SIG_DFL )"		75411	0					
ANR	75420	Callee	signal		75411	0					
ANR	75421	Identifier	signal		75411	0					
ANR	75422	ArgumentList	sig		75411	1					
ANR	75423	Argument	sig		75411	0					
ANR	75424	Identifier	sig		75411	0					
ANR	75425	Argument	SIG_DFL		75411	1					
ANR	75426	Identifier	SIG_DFL		75411	0					
ANR	75427	ExpressionStatement	sigemptyset ( & s )	1215:2:29432:29448	75411	2	True				
ANR	75428	CallExpression	sigemptyset ( & s )		75411	0					
ANR	75429	Callee	sigemptyset		75411	0					
ANR	75430	Identifier	sigemptyset		75411	0					
ANR	75431	ArgumentList	& s		75411	1					
ANR	75432	Argument	& s		75411	0					
ANR	75433	UnaryOperationExpression	& s		75411	0					
ANR	75434	UnaryOperator	&		75411	0					
ANR	75435	Identifier	s		75411	1					
ANR	75436	ExpressionStatement	"sigaddset ( & s , sig )"	1216:2:29452:29471	75411	3	True				
ANR	75437	CallExpression	"sigaddset ( & s , sig )"		75411	0					
ANR	75438	Callee	sigaddset		75411	0					
ANR	75439	Identifier	sigaddset		75411	0					
ANR	75440	ArgumentList	& s		75411	1					
ANR	75441	Argument	& s		75411	0					
ANR	75442	UnaryOperationExpression	& s		75411	0					
ANR	75443	UnaryOperator	&		75411	0					
ANR	75444	Identifier	s		75411	1					
ANR	75445	Argument	sig		75411	1					
ANR	75446	Identifier	sig		75411	0					
ANR	75447	ExpressionStatement	"sigprocmask ( SIG_UNBLOCK , & s , ( sigset_t * ) 0 )"	1217:2:29475:29520	75411	4	True				
ANR	75448	CallExpression	"sigprocmask ( SIG_UNBLOCK , & s , ( sigset_t * ) 0 )"		75411	0					
ANR	75449	Callee	sigprocmask		75411	0					
ANR	75450	Identifier	sigprocmask		75411	0					
ANR	75451	ArgumentList	SIG_UNBLOCK		75411	1					
ANR	75452	Argument	SIG_UNBLOCK		75411	0					
ANR	75453	Identifier	SIG_UNBLOCK		75411	0					
ANR	75454	Argument	& s		75411	1					
ANR	75455	UnaryOperationExpression	& s		75411	0					
ANR	75456	UnaryOperator	&		75411	0					
ANR	75457	Identifier	s		75411	1					
ANR	75458	Argument	( sigset_t * ) 0		75411	2					
ANR	75459	CastExpression	( sigset_t * ) 0		75411	0					
ANR	75460	CastTarget	sigset_t *		75411	0					
ANR	75461	PrimaryExpression	0		75411	1					
ANR	75462	ExpressionStatement	raise ( sig )	1218:2:29524:29535	75411	5	True				
ANR	75463	CallExpression	raise ( sig )		75411	0					
ANR	75464	Callee	raise		75411	0					
ANR	75465	Identifier	raise		75411	0					
ANR	75466	ArgumentList	sig		75411	1					
ANR	75467	Argument	sig		75411	0					
ANR	75468	Identifier	sig		75411	0					
ANR	75469	ExpressionStatement	exit ( 2 )	1219:2:29539:29547	75411	6	True				
ANR	75470	CallExpression	exit ( 2 )		75411	0					
ANR	75471	Callee	exit		75411	0					
ANR	75472	Identifier	exit		75411	0					
ANR	75473	ArgumentList	2		75411	1					
ANR	75474	Argument	2		75411	0					
ANR	75475	PrimaryExpression	2		75411	0					
ANR	75476	ReturnType	void		75411	1					
ANR	75477	Identifier	exit_with_signal		75411	2					
ANR	75478	ParameterList	int sig		75411	3					
ANR	75479	Parameter	int sig	1211:18:29380:29386	75411	0	True				
ANR	75480	ParameterType	int		75411	0					
ANR	75481	Identifier	sig		75411	1					
ANR	75482	CFGEntryNode	ENTRY		75411		True				
ANR	75483	CFGExitNode	EXIT		75411		True				
ANR	75484	Symbol	sig		75411						
ANR	75485	Symbol	s		75411						
ANR	75486	Symbol	SIG_UNBLOCK		75411						
ANR	75487	Symbol	SIG_DFL		75411						
ANR	75488	Symbol	& s		75411						
ANR	75489	Function	systemic	1222:0:29552:29681							
ANR	75490	FunctionDef	systemic (char const * command)		75489	0					
ANR	75491	CompoundStatement		1224:0:29587:29681	75489	0					
ANR	75492	IfStatement	if ( debug & 8 )		75489	0					
ANR	75493	Condition	debug & 8	1225:6:29595:29603	75489	0	True				
ANR	75494	BitAndExpression	debug & 8		75489	0		&			
ANR	75495	Identifier	debug		75489	0					
ANR	75496	PrimaryExpression	8		75489	1					
ANR	75497	ExpressionStatement	"say ( ""+ %s\\n"" , command )"	1226:4:29610:29633	75489	1	True				
ANR	75498	CallExpression	"say ( ""+ %s\\n"" , command )"		75489	0					
ANR	75499	Callee	say		75489	0					
ANR	75500	Identifier	say		75489	0					
ANR	75501	ArgumentList	"""+ %s\\n"""		75489	1					
ANR	75502	Argument	"""+ %s\\n"""		75489	0					
ANR	75503	PrimaryExpression	"""+ %s\\n"""		75489	0					
ANR	75504	Argument	command		75489	1					
ANR	75505	Identifier	command		75489	0					
ANR	75506	ExpressionStatement	fflush ( stdout )	1227:2:29637:29652	75489	1	True				
ANR	75507	CallExpression	fflush ( stdout )		75489	0					
ANR	75508	Callee	fflush		75489	0					
ANR	75509	Identifier	fflush		75489	0					
ANR	75510	ArgumentList	stdout		75489	1					
ANR	75511	Argument	stdout		75489	0					
ANR	75512	Identifier	stdout		75489	0					
ANR	75513	ReturnStatement	return system ( command ) ;	1228:2:29656:29679	75489	2	True				
ANR	75514	CallExpression	system ( command )		75489	0					
ANR	75515	Callee	system		75489	0					
ANR	75516	Identifier	system		75489	0					
ANR	75517	ArgumentList	command		75489	1					
ANR	75518	Argument	command		75489	0					
ANR	75519	Identifier	command		75489	0					
ANR	75520	ReturnType	int		75489	1					
ANR	75521	Identifier	systemic		75489	2					
ANR	75522	ParameterList	char const * command		75489	3					
ANR	75523	Parameter	char const * command	1223:10:29566:29584	75489	0	True				
ANR	75524	ParameterType	char const *		75489	0					
ANR	75525	Identifier	command		75489	1					
ANR	75526	CFGEntryNode	ENTRY		75489		True				
ANR	75527	CFGExitNode	EXIT		75489		True				
ANR	75528	Symbol	debug		75489						
ANR	75529	Symbol	system		75489						
ANR	75530	Symbol	stdout		75489						
ANR	75531	Symbol	command		75489						
ANR	75532	Function	replace_slashes	1234:0:29881:30637							
ANR	75533	FunctionDef	replace_slashes (char * filename)		75532	0					
ANR	75534	CompoundStatement		1236:0:29928:30637	75532	0					
ANR	75535	IdentifierDeclStatement	char * f ;	1237:2:29932:29939	75532	0	True				
ANR	75536	IdentifierDecl	* f		75532	0					
ANR	75537	IdentifierDeclType	char *		75532	0					
ANR	75538	Identifier	f		75532	1					
ANR	75539	IdentifierDeclStatement	char * last_location_replaced = 0 ;	1238:2:29943:29975	75532	1	True				
ANR	75540	IdentifierDecl	* last_location_replaced = 0		75532	0					
ANR	75541	IdentifierDeclType	char *		75532	0					
ANR	75542	Identifier	last_location_replaced		75532	1					
ANR	75543	AssignmentExpression	* last_location_replaced = 0		75532	2		=			
ANR	75544	Identifier	last_location_replaced		75532	0					
ANR	75545	PrimaryExpression	0		75532	1					
ANR	75546	IdentifierDeclStatement	char const * component_start ;	1239:2:29979:30006	75532	2	True				
ANR	75547	IdentifierDecl	* component_start		75532	0					
ANR	75548	IdentifierDeclType	char const *		75532	0					
ANR	75549	Identifier	component_start		75532	1					
ANR	75550	ForStatement	for ( f = filename + FILE_SYSTEM_PREFIX_LEN ( filename ) ; ISSLASH ( * f ) ; f ++ )		75532	3					
ANR	75551	ForInit	f = filename + FILE_SYSTEM_PREFIX_LEN ( filename ) ;	1241:7:30016:30064	75532	0	True				
ANR	75552	AssignmentExpression	f = filename + FILE_SYSTEM_PREFIX_LEN ( filename )		75532	0		=			
ANR	75553	Identifier	f		75532	0					
ANR	75554	AdditiveExpression	filename + FILE_SYSTEM_PREFIX_LEN ( filename )		75532	1		+			
ANR	75555	Identifier	filename		75532	0					
ANR	75556	CallExpression	FILE_SYSTEM_PREFIX_LEN ( filename )		75532	1					
ANR	75557	Callee	FILE_SYSTEM_PREFIX_LEN		75532	0					
ANR	75558	Identifier	FILE_SYSTEM_PREFIX_LEN		75532	0					
ANR	75559	ArgumentList	filename		75532	1					
ANR	75560	Argument	filename		75532	0					
ANR	75561	Identifier	filename		75532	0					
ANR	75562	Condition	ISSLASH ( * f )	1241:58:30067:30078	75532	1	True				
ANR	75563	CallExpression	ISSLASH ( * f )		75532	0					
ANR	75564	Callee	ISSLASH		75532	0					
ANR	75565	Identifier	ISSLASH		75532	0					
ANR	75566	ArgumentList	* f		75532	1					
ANR	75567	Argument	* f		75532	0					
ANR	75568	UnaryOperationExpression	* f		75532	0					
ANR	75569	UnaryOperator	*		75532	0					
ANR	75570	Identifier	f		75532	1					
ANR	75571	PostIncDecOperationExpression	f ++	1241:73:30082:30084	75532	2	True				
ANR	75572	Identifier	f		75532	0					
ANR	75573	IncDec	++		75532	1					
ANR	75574	ExpressionStatement		1242:21:30108:30108	75532	3	True				
ANR	75575	ExpressionStatement	component_start = f	1244:2:30113:30132	75532	4	True				
ANR	75576	AssignmentExpression	component_start = f		75532	0		=			
ANR	75577	Identifier	component_start		75532	0					
ANR	75578	Identifier	f		75532	1					
ANR	75579	ForStatement	for ( ; * f ; f ++ )		75532	5					
ANR	75580	Condition	* f	1246:9:30144:30145	75532	0	True				
ANR	75581	UnaryOperationExpression	* f		75532	0					
ANR	75582	UnaryOperator	*		75532	0					
ANR	75583	Identifier	f		75532	1					
ANR	75584	PostIncDecOperationExpression	f ++	1246:13:30148:30150	75532	1	True				
ANR	75585	Identifier	f		75532	0					
ANR	75586	IncDec	++		75532	1					
ANR	75587	IfStatement	if ( ISSLASH ( * f ) )		75532	2					
ANR	75588	Condition	ISSLASH ( * f )	1247:8:30161:30172	75532	0	True				
ANR	75589	CallExpression	ISSLASH ( * f )		75532	0					
ANR	75590	Callee	ISSLASH		75532	0					
ANR	75591	Identifier	ISSLASH		75532	0					
ANR	75592	ArgumentList	* f		75532	1					
ANR	75593	Argument	* f		75532	0					
ANR	75594	UnaryOperationExpression	* f		75532	0					
ANR	75595	UnaryOperator	*		75532	0					
ANR	75596	Identifier	f		75532	1					
ANR	75597	CompoundStatement		14:1:255:270	75532	1					
ANR	75598	IdentifierDeclStatement	char * slash = f ;	1249:1:30184:30199	75532	0	True				
ANR	75599	IdentifierDecl	* slash = f		75532	0					
ANR	75600	IdentifierDeclType	char *		75532	0					
ANR	75601	Identifier	slash		75532	1					
ANR	75602	AssignmentExpression	* slash = f		75532	2		=			
ANR	75603	Identifier	f		75532	0					
ANR	75604	Identifier	f		75532	1					
ANR	75605	WhileStatement	while ( ISSLASH ( f [ 1 ] ) )		75532	1					
ANR	75606	Condition	ISSLASH ( f [ 1 ] )	1252:8:30268:30281	75532	0	True				
ANR	75607	CallExpression	ISSLASH ( f [ 1 ] )		75532	0					
ANR	75608	Callee	ISSLASH		75532	0					
ANR	75609	Identifier	ISSLASH		75532	0					
ANR	75610	ArgumentList	f [ 1 ]		75532	1					
ANR	75611	Argument	f [ 1 ]		75532	0					
ANR	75612	ArrayIndexing	f [ 1 ]		75532	0					
ANR	75613	Identifier	f		75532	0					
ANR	75614	PrimaryExpression	1		75532	1					
ANR	75615	ExpressionStatement	f ++	1253:3:30287:30290	75532	1	True				
ANR	75616	PostIncDecOperationExpression	f ++		75532	0					
ANR	75617	Identifier	f		75532	0					
ANR	75618	IncDec	++		75532	1					
ANR	75619	IfStatement	if ( ! f [ 1 ] )		75532	2					
ANR	75620	Condition	! f [ 1 ]	1256:5:30345:30350	75532	0	True				
ANR	75621	UnaryOperationExpression	! f [ 1 ]		75532	0					
ANR	75622	UnaryOperator	!		75532	0					
ANR	75623	ArrayIndexing	f [ 1 ]		75532	1					
ANR	75624	Identifier	f		75532	0					
ANR	75625	PrimaryExpression	1		75532	1					
ANR	75626	BreakStatement	break ;	1257:3:30356:30361	75532	1	True				
ANR	75627	IfStatement	if ( ! ( slash - component_start <= 2 && component_start [ 0 ] == '.' && slash [ - 1 ] == '.' ) )		75532	3					
ANR	75628	Condition	! ( slash - component_start <= 2 && component_start [ 0 ] == '.' && slash [ - 1 ] == '.' )	1260:5:30410:30498	75532	0	True				
ANR	75629	UnaryOperationExpression	! ( slash - component_start <= 2 && component_start [ 0 ] == '.' && slash [ - 1 ] == '.' )		75532	0					
ANR	75630	UnaryOperator	!		75532	0					
ANR	75631	AndExpression	slash - component_start <= 2 && component_start [ 0 ] == '.' && slash [ - 1 ] == '.'		75532	1		&&			
ANR	75632	RelationalExpression	slash - component_start <= 2		75532	0		<=			
ANR	75633	AdditiveExpression	slash - component_start		75532	0		-			
ANR	75634	Identifier	slash		75532	0					
ANR	75635	Identifier	component_start		75532	1					
ANR	75636	PrimaryExpression	2		75532	1					
ANR	75637	AndExpression	component_start [ 0 ] == '.' && slash [ - 1 ] == '.'		75532	1		&&			
ANR	75638	EqualityExpression	component_start [ 0 ] == '.'		75532	0		==			
ANR	75639	ArrayIndexing	component_start [ 0 ]		75532	0					
ANR	75640	Identifier	component_start		75532	0					
ANR	75641	PrimaryExpression	0		75532	1					
ANR	75642	PrimaryExpression	'.'		75532	1					
ANR	75643	EqualityExpression	slash [ - 1 ] == '.'		75532	1		==			
ANR	75644	ArrayIndexing	slash [ - 1 ]		75532	0					
ANR	75645	Identifier	slash		75532	0					
ANR	75646	UnaryOperationExpression	- 1		75532	1					
ANR	75647	UnaryOperator	-		75532	0					
ANR	75648	PrimaryExpression	1		75532	1					
ANR	75649	PrimaryExpression	'.'		75532	1					
ANR	75650	CompoundStatement		27:3:575:575	75532	1					
ANR	75651	ExpressionStatement	* slash = '\\0'	1263:5:30511:30524	75532	0	True				
ANR	75652	AssignmentExpression	* slash = '\\0'		75532	0		=			
ANR	75653	UnaryOperationExpression	* slash		75532	0					
ANR	75654	UnaryOperator	*		75532	0					
ANR	75655	Identifier	slash		75532	1					
ANR	75656	PrimaryExpression	'\\0'		75532	1					
ANR	75657	ExpressionStatement	last_location_replaced = slash	1264:5:30531:30561	75532	1	True				
ANR	75658	AssignmentExpression	last_location_replaced = slash		75532	0		=			
ANR	75659	Identifier	last_location_replaced		75532	0					
ANR	75660	Identifier	slash		75532	1					
ANR	75661	ExpressionStatement	component_start = f + 1	1267:1:30570:30593	75532	4	True				
ANR	75662	AssignmentExpression	component_start = f + 1		75532	0		=			
ANR	75663	Identifier	component_start		75532	0					
ANR	75664	AdditiveExpression	f + 1		75532	1		+			
ANR	75665	Identifier	f		75532	0					
ANR	75666	PrimaryExpression	1		75532	1					
ANR	75667	ReturnStatement	return last_location_replaced ;	1270:2:30606:30635	75532	6	True				
ANR	75668	Identifier	last_location_replaced		75532	0					
ANR	75669	ReturnType	static char *		75532	1					
ANR	75670	Identifier	replace_slashes		75532	2					
ANR	75671	ParameterList	char * filename		75532	3					
ANR	75672	Parameter	char * filename	1235:17:29912:29925	75532	0	True				
ANR	75673	ParameterType	char *		75532	0					
ANR	75674	Identifier	filename		75532	1					
ANR	75675	CFGEntryNode	ENTRY		75532		True				
ANR	75676	CFGExitNode	EXIT		75532		True				
ANR	75677	Symbol	* f		75532						
ANR	75678	Symbol	* slash		75532						
ANR	75679	Symbol	FILE_SYSTEM_PREFIX_LEN		75532						
ANR	75680	Symbol	filename		75532						
ANR	75681	Symbol	f		75532						
ANR	75682	Symbol	last_location_replaced		75532						
ANR	75683	Symbol	component_start		75532						
ANR	75684	Symbol	* component_start		75532						
ANR	75685	Symbol	slash		75532						
ANR	75686	Symbol	ISSLASH		75532						
ANR	75687	Function	makedirs	1276:0:30745:31586							
ANR	75688	FunctionDef	makedirs (char const * name)		75687	0					
ANR	75689	CompoundStatement		1278:0:30785:31586	75687	0					
ANR	75690	IdentifierDeclStatement	char * filename = xstrdup ( name ) ;	1279:2:30789:30820	75687	0	True				
ANR	75691	IdentifierDecl	* filename = xstrdup ( name )		75687	0					
ANR	75692	IdentifierDeclType	char *		75687	0					
ANR	75693	Identifier	filename		75687	1					
ANR	75694	AssignmentExpression	* filename = xstrdup ( name )		75687	2		=			
ANR	75695	Identifier	filename		75687	0					
ANR	75696	CallExpression	xstrdup ( name )		75687	1					
ANR	75697	Callee	xstrdup		75687	0					
ANR	75698	Identifier	xstrdup		75687	0					
ANR	75699	ArgumentList	name		75687	1					
ANR	75700	Argument	name		75687	0					
ANR	75701	Identifier	name		75687	0					
ANR	75702	IdentifierDeclStatement	char * f ;	1280:2:30824:30831	75687	1	True				
ANR	75703	IdentifierDecl	* f		75687	0					
ANR	75704	IdentifierDeclType	char *		75687	0					
ANR	75705	Identifier	f		75687	1					
ANR	75706	IdentifierDeclStatement	char * flim = replace_slashes ( filename ) ;	1281:2:30835:30874	75687	2	True				
ANR	75707	IdentifierDecl	* flim = replace_slashes ( filename )		75687	0					
ANR	75708	IdentifierDeclType	char *		75687	0					
ANR	75709	Identifier	flim		75687	1					
ANR	75710	AssignmentExpression	* flim = replace_slashes ( filename )		75687	2		=			
ANR	75711	Identifier	flim		75687	0					
ANR	75712	CallExpression	replace_slashes ( filename )		75687	1					
ANR	75713	Callee	replace_slashes		75687	0					
ANR	75714	Identifier	replace_slashes		75687	0					
ANR	75715	ArgumentList	filename		75687	1					
ANR	75716	Argument	filename		75687	0					
ANR	75717	Identifier	filename		75687	0					
ANR	75718	IfStatement	if ( flim )		75687	3					
ANR	75719	Condition	flim	1286:6:31029:31032	75687	0	True				
ANR	75720	Identifier	flim		75687	0					
ANR	75721	CompoundStatement		10:4:253:253	75687	1					
ANR	75722	ForStatement	for ( f = filename ; f <= flim ; f ++ )		75687	0					
ANR	75723	ForInit	f = filename ;	1293:11:31376:31388	75687	0	True				
ANR	75724	AssignmentExpression	f = filename		75687	0		=			
ANR	75725	Identifier	f		75687	0					
ANR	75726	Identifier	filename		75687	1					
ANR	75727	Condition	f <= flim	1293:26:31391:31399	75687	1	True				
ANR	75728	RelationalExpression	f <= flim		75687	0		<=			
ANR	75729	Identifier	f		75687	0					
ANR	75730	Identifier	flim		75687	1					
ANR	75731	PostIncDecOperationExpression	f ++	1293:38:31403:31405	75687	2	True				
ANR	75732	Identifier	f		75687	0					
ANR	75733	IncDec	++		75687	1					
ANR	75734	IfStatement	if ( ! * f )		75687	3					
ANR	75735	Condition	! * f	1294:5:31413:31415	75687	0	True				
ANR	75736	UnaryOperationExpression	! * f		75687	0					
ANR	75737	UnaryOperator	!		75687	0					
ANR	75738	UnaryOperationExpression	* f		75687	1					
ANR	75739	UnaryOperator	*		75687	0					
ANR	75740	Identifier	f		75687	1					
ANR	75741	CompoundStatement		18:3:635:635	75687	1					
ANR	75742	ExpressionStatement	"safe_mkdir ( filename , S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH )"	1296:5:31428:31539	75687	0	True				
ANR	75743	CallExpression	"safe_mkdir ( filename , S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH )"		75687	0					
ANR	75744	Callee	safe_mkdir		75687	0					
ANR	75745	Identifier	safe_mkdir		75687	0					
ANR	75746	ArgumentList	filename		75687	1					
ANR	75747	Argument	filename		75687	0					
ANR	75748	Identifier	filename		75687	0					
ANR	75749	Argument	S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	1					
ANR	75750	InclusiveOrExpression	S_IRUSR | S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	0		|			
ANR	75751	Identifier	S_IRUSR		75687	0					
ANR	75752	InclusiveOrExpression	S_IWUSR | S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	1		|			
ANR	75753	Identifier	S_IWUSR		75687	0					
ANR	75754	InclusiveOrExpression	S_IXUSR | S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	1		|			
ANR	75755	Identifier	S_IXUSR		75687	0					
ANR	75756	InclusiveOrExpression	S_IRGRP | S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	1		|			
ANR	75757	Identifier	S_IRGRP		75687	0					
ANR	75758	InclusiveOrExpression	S_IWGRP | S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	1		|			
ANR	75759	Identifier	S_IWGRP		75687	0					
ANR	75760	InclusiveOrExpression	S_IXGRP | S_IROTH | S_IWOTH | S_IXOTH		75687	1		|			
ANR	75761	Identifier	S_IXGRP		75687	0					
ANR	75762	InclusiveOrExpression	S_IROTH | S_IWOTH | S_IXOTH		75687	1		|			
ANR	75763	Identifier	S_IROTH		75687	0					
ANR	75764	InclusiveOrExpression	S_IWOTH | S_IXOTH		75687	1		|			
ANR	75765	Identifier	S_IWOTH		75687	0					
ANR	75766	Identifier	S_IXOTH		75687	1					
ANR	75767	ExpressionStatement	* f = '/'	1300:5:31546:31554	75687	1	True				
ANR	75768	AssignmentExpression	* f = '/'		75687	0		=			
ANR	75769	UnaryOperationExpression	* f		75687	0					
ANR	75770	UnaryOperator	*		75687	0					
ANR	75771	Identifier	f		75687	1					
ANR	75772	PrimaryExpression	'/'		75687	1					
ANR	75773	ExpressionStatement	free ( filename )	1303:2:31569:31584	75687	4	True				
ANR	75774	CallExpression	free ( filename )		75687	0					
ANR	75775	Callee	free		75687	0					
ANR	75776	Identifier	free		75687	0					
ANR	75777	ArgumentList	filename		75687	1					
ANR	75778	Argument	filename		75687	0					
ANR	75779	Identifier	filename		75687	0					
ANR	75780	ReturnType	static void		75687	1					
ANR	75781	Identifier	makedirs		75687	2					
ANR	75782	ParameterList	char const * name		75687	3					
ANR	75783	Parameter	char const * name	1277:10:30767:30782	75687	0	True				
ANR	75784	ParameterType	char const *		75687	0					
ANR	75785	Identifier	name		75687	1					
ANR	75786	CFGEntryNode	ENTRY		75687		True				
ANR	75787	CFGExitNode	EXIT		75687		True				
ANR	75788	Symbol	S_IROTH		75687						
ANR	75789	Symbol	S_IWGRP		75687						
ANR	75790	Symbol	S_IXGRP		75687						
ANR	75791	Symbol	f		75687						
ANR	75792	Symbol	S_IWOTH		75687						
ANR	75793	Symbol	xstrdup		75687						
ANR	75794	Symbol	S_IXOTH		75687						
ANR	75795	Symbol	* f		75687						
ANR	75796	Symbol	filename		75687						
ANR	75797	Symbol	S_IRUSR		75687						
ANR	75798	Symbol	S_IWUSR		75687						
ANR	75799	Symbol	S_IXUSR		75687						
ANR	75800	Symbol	name		75687						
ANR	75801	Symbol	flim		75687						
ANR	75802	Symbol	S_IRGRP		75687						
ANR	75803	Symbol	replace_slashes		75687						
ANR	75804	Function	removedirs	1309:0:31781:32350							
ANR	75805	FunctionDef	removedirs (char const * name)		75804	0					
ANR	75806	CompoundStatement		1311:0:31816:32350	75804	0					
ANR	75807	IdentifierDeclStatement	char * filename = xstrdup ( name ) ;	1312:2:31820:31851	75804	0	True				
ANR	75808	IdentifierDecl	* filename = xstrdup ( name )		75804	0					
ANR	75809	IdentifierDeclType	char *		75804	0					
ANR	75810	Identifier	filename		75804	1					
ANR	75811	AssignmentExpression	* filename = xstrdup ( name )		75804	2		=			
ANR	75812	Identifier	filename		75804	0					
ANR	75813	CallExpression	xstrdup ( name )		75804	1					
ANR	75814	Callee	xstrdup		75804	0					
ANR	75815	Identifier	xstrdup		75804	0					
ANR	75816	ArgumentList	name		75804	1					
ANR	75817	Argument	name		75804	0					
ANR	75818	Identifier	name		75804	0					
ANR	75819	IdentifierDeclStatement	size_t i ;	1313:2:31855:31863	75804	1	True				
ANR	75820	IdentifierDecl	i		75804	0					
ANR	75821	IdentifierDeclType	size_t		75804	0					
ANR	75822	Identifier	i		75804	1					
ANR	75823	ForStatement	for ( i = strlen ( filename ) ; i != 0 ; i -- )		75804	2					
ANR	75824	ForInit	i = strlen ( filename ) ;	1315:7:31873:31894	75804	0	True				
ANR	75825	AssignmentExpression	i = strlen ( filename )		75804	0		=			
ANR	75826	Identifier	i		75804	0					
ANR	75827	CallExpression	strlen ( filename )		75804	1					
ANR	75828	Callee	strlen		75804	0					
ANR	75829	Identifier	strlen		75804	0					
ANR	75830	ArgumentList	filename		75804	1					
ANR	75831	Argument	filename		75804	0					
ANR	75832	Identifier	filename		75804	0					
ANR	75833	Condition	i != 0	1315:31:31897:31902	75804	1	True				
ANR	75834	EqualityExpression	i != 0		75804	0		!=			
ANR	75835	Identifier	i		75804	0					
ANR	75836	PrimaryExpression	0		75804	1					
ANR	75837	PostIncDecOperationExpression	i --	1315:40:31906:31908	75804	2	True				
ANR	75838	Identifier	i		75804	0					
ANR	75839	IncDec	--		75804	1					
ANR	75840	IfStatement	if ( ISSLASH ( filename [ i ] ) && ! ( ISSLASH ( filename [ i - 1 ] ) || ( filename [ i - 1 ] == '.' && ( i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) ) ) ) ) )		75804	3					
ANR	75841	Condition	ISSLASH ( filename [ i ] ) && ! ( ISSLASH ( filename [ i - 1 ] ) || ( filename [ i - 1 ] == '.' && ( i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) ) ) ) )	1316:8:31919:32152	75804	0	True				
ANR	75842	AndExpression	ISSLASH ( filename [ i ] ) && ! ( ISSLASH ( filename [ i - 1 ] ) || ( filename [ i - 1 ] == '.' && ( i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) ) ) ) )		75804	0		&&			
ANR	75843	CallExpression	ISSLASH ( filename [ i ] )		75804	0					
ANR	75844	Callee	ISSLASH		75804	0					
ANR	75845	Identifier	ISSLASH		75804	0					
ANR	75846	ArgumentList	filename [ i ]		75804	1					
ANR	75847	Argument	filename [ i ]		75804	0					
ANR	75848	ArrayIndexing	filename [ i ]		75804	0					
ANR	75849	Identifier	filename		75804	0					
ANR	75850	Identifier	i		75804	1					
ANR	75851	UnaryOperationExpression	! ( ISSLASH ( filename [ i - 1 ] ) || ( filename [ i - 1 ] == '.' && ( i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) ) ) ) )		75804	1					
ANR	75852	UnaryOperator	!		75804	0					
ANR	75853	OrExpression	ISSLASH ( filename [ i - 1 ] ) || ( filename [ i - 1 ] == '.' && ( i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) ) ) )		75804	1		||			
ANR	75854	CallExpression	ISSLASH ( filename [ i - 1 ] )		75804	0					
ANR	75855	Callee	ISSLASH		75804	0					
ANR	75856	Identifier	ISSLASH		75804	0					
ANR	75857	ArgumentList	filename [ i - 1 ]		75804	1					
ANR	75858	Argument	filename [ i - 1 ]		75804	0					
ANR	75859	ArrayIndexing	filename [ i - 1 ]		75804	0					
ANR	75860	Identifier	filename		75804	0					
ANR	75861	AdditiveExpression	i - 1		75804	1		-			
ANR	75862	Identifier	i		75804	0					
ANR	75863	PrimaryExpression	1		75804	1					
ANR	75864	AndExpression	filename [ i - 1 ] == '.' && ( i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) ) )		75804	1		&&			
ANR	75865	EqualityExpression	filename [ i - 1 ] == '.'		75804	0		==			
ANR	75866	ArrayIndexing	filename [ i - 1 ]		75804	0					
ANR	75867	Identifier	filename		75804	0					
ANR	75868	AdditiveExpression	i - 1		75804	1		-			
ANR	75869	Identifier	i		75804	0					
ANR	75870	PrimaryExpression	1		75804	1					
ANR	75871	PrimaryExpression	'.'		75804	1					
ANR	75872	OrExpression	i == 1 || ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) )		75804	1		||			
ANR	75873	EqualityExpression	i == 1		75804	0		==			
ANR	75874	Identifier	i		75804	0					
ANR	75875	PrimaryExpression	1		75804	1					
ANR	75876	OrExpression	ISSLASH ( filename [ i - 2 ] ) || ( filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) ) )		75804	1		||			
ANR	75877	CallExpression	ISSLASH ( filename [ i - 2 ] )		75804	0					
ANR	75878	Callee	ISSLASH		75804	0					
ANR	75879	Identifier	ISSLASH		75804	0					
ANR	75880	ArgumentList	filename [ i - 2 ]		75804	1					
ANR	75881	Argument	filename [ i - 2 ]		75804	0					
ANR	75882	ArrayIndexing	filename [ i - 2 ]		75804	0					
ANR	75883	Identifier	filename		75804	0					
ANR	75884	AdditiveExpression	i - 2		75804	1		-			
ANR	75885	Identifier	i		75804	0					
ANR	75886	PrimaryExpression	2		75804	1					
ANR	75887	AndExpression	filename [ i - 2 ] == '.' && ( i == 2 || ISSLASH ( filename [ i - 3 ] ) )		75804	1		&&			
ANR	75888	EqualityExpression	filename [ i - 2 ] == '.'		75804	0		==			
ANR	75889	ArrayIndexing	filename [ i - 2 ]		75804	0					
ANR	75890	Identifier	filename		75804	0					
ANR	75891	AdditiveExpression	i - 2		75804	1		-			
ANR	75892	Identifier	i		75804	0					
ANR	75893	PrimaryExpression	2		75804	1					
ANR	75894	PrimaryExpression	'.'		75804	1					
ANR	75895	OrExpression	i == 2 || ISSLASH ( filename [ i - 3 ] )		75804	1		||			
ANR	75896	EqualityExpression	i == 2		75804	0		==			
ANR	75897	Identifier	i		75804	0					
ANR	75898	PrimaryExpression	2		75804	1					
ANR	75899	CallExpression	ISSLASH ( filename [ i - 3 ] )		75804	1					
ANR	75900	Callee	ISSLASH		75804	0					
ANR	75901	Identifier	ISSLASH		75804	0					
ANR	75902	ArgumentList	filename [ i - 3 ]		75804	1					
ANR	75903	Argument	filename [ i - 3 ]		75804	0					
ANR	75904	ArrayIndexing	filename [ i - 3 ]		75804	0					
ANR	75905	Identifier	filename		75804	0					
ANR	75906	AdditiveExpression	i - 3		75804	1		-			
ANR	75907	Identifier	i		75804	0					
ANR	75908	PrimaryExpression	3		75804	1					
ANR	75909	CompoundStatement		14:6:344:344	75804	1					
ANR	75910	ExpressionStatement	filename [ i ] = '\\0'	1325:1:32164:32182	75804	0	True				
ANR	75911	AssignmentExpression	filename [ i ] = '\\0'		75804	0		=			
ANR	75912	ArrayIndexing	filename [ i ]		75804	0					
ANR	75913	Identifier	filename		75804	0					
ANR	75914	Identifier	i		75804	1					
ANR	75915	PrimaryExpression	'\\0'		75804	1					
ANR	75916	IfStatement	if ( safe_rmdir ( filename ) == 0 && verbosity == VERBOSE )		75804	1					
ANR	75917	Condition	safe_rmdir ( filename ) == 0 && verbosity == VERBOSE	1326:5:32189:32238	75804	0	True				
ANR	75918	AndExpression	safe_rmdir ( filename ) == 0 && verbosity == VERBOSE		75804	0		&&			
ANR	75919	EqualityExpression	safe_rmdir ( filename ) == 0		75804	0		==			
ANR	75920	CallExpression	safe_rmdir ( filename )		75804	0					
ANR	75921	Callee	safe_rmdir		75804	0					
ANR	75922	Identifier	safe_rmdir		75804	0					
ANR	75923	ArgumentList	filename		75804	1					
ANR	75924	Argument	filename		75804	0					
ANR	75925	Identifier	filename		75804	0					
ANR	75926	PrimaryExpression	0		75804	1					
ANR	75927	EqualityExpression	verbosity == VERBOSE		75804	1		==			
ANR	75928	Identifier	verbosity		75804	0					
ANR	75929	Identifier	VERBOSE		75804	1					
ANR	75930	ExpressionStatement	"say ( ""Removed empty directory %s\\n"" , quotearg ( filename ) )"	1327:3:32244:32301	75804	1	True				
ANR	75931	CallExpression	"say ( ""Removed empty directory %s\\n"" , quotearg ( filename ) )"		75804	0					
ANR	75932	Callee	say		75804	0					
ANR	75933	Identifier	say		75804	0					
ANR	75934	ArgumentList	"""Removed empty directory %s\\n"""		75804	1					
ANR	75935	Argument	"""Removed empty directory %s\\n"""		75804	0					
ANR	75936	PrimaryExpression	"""Removed empty directory %s\\n"""		75804	0					
ANR	75937	Argument	quotearg ( filename )		75804	1					
ANR	75938	CallExpression	quotearg ( filename )		75804	0					
ANR	75939	Callee	quotearg		75804	0					
ANR	75940	Identifier	quotearg		75804	0					
ANR	75941	ArgumentList	filename		75804	1					
ANR	75942	Argument	filename		75804	0					
ANR	75943	Identifier	filename		75804	0					
ANR	75944	ExpressionStatement	filename [ i ] = '/'	1328:1:32304:32321	75804	2	True				
ANR	75945	AssignmentExpression	filename [ i ] = '/'		75804	0		=			
ANR	75946	ArrayIndexing	filename [ i ]		75804	0					
ANR	75947	Identifier	filename		75804	0					
ANR	75948	Identifier	i		75804	1					
ANR	75949	PrimaryExpression	'/'		75804	1					
ANR	75950	ExpressionStatement	free ( filename )	1330:2:32333:32348	75804	3	True				
ANR	75951	CallExpression	free ( filename )		75804	0					
ANR	75952	Callee	free		75804	0					
ANR	75953	Identifier	free		75804	0					
ANR	75954	ArgumentList	filename		75804	1					
ANR	75955	Argument	filename		75804	0					
ANR	75956	Identifier	filename		75804	0					
ANR	75957	ReturnType	void		75804	1					
ANR	75958	Identifier	removedirs		75804	2					
ANR	75959	ParameterList	char const * name		75804	3					
ANR	75960	Parameter	char const * name	1310:12:31798:31813	75804	0	True				
ANR	75961	ParameterType	char const *		75804	0					
ANR	75962	Identifier	name		75804	1					
ANR	75963	CFGEntryNode	ENTRY		75804		True				
ANR	75964	CFGExitNode	EXIT		75804		True				
ANR	75965	Symbol	strlen		75804						
ANR	75966	Symbol	filename		75804						
ANR	75967	Symbol	* filename		75804						
ANR	75968	Symbol	* i		75804						
ANR	75969	Symbol	quotearg		75804						
ANR	75970	Symbol	xstrdup		75804						
ANR	75971	Symbol	name		75804						
ANR	75972	Symbol	i		75804						
ANR	75973	Symbol	VERBOSE		75804						
ANR	75974	Symbol	ISSLASH		75804						
ANR	75975	Symbol	verbosity		75804						
ANR	75976	Symbol	safe_rmdir		75804						
ANR	75977	DeclStmt									
ANR	75978	Decl							struct timespec	struct timespec	initial_time
ANR	75979	Function	init_time	1335:0:32391:32442							
ANR	75980	FunctionDef	init_time ()		75979	0					
ANR	75981	CompoundStatement		1337:0:32413:32442	75979	0					
ANR	75982	ExpressionStatement	gettime ( & initial_time )	1338:2:32417:32440	75979	0	True				
ANR	75983	CallExpression	gettime ( & initial_time )		75979	0					
ANR	75984	Callee	gettime		75979	0					
ANR	75985	Identifier	gettime		75979	0					
ANR	75986	ArgumentList	& initial_time		75979	1					
ANR	75987	Argument	& initial_time		75979	0					
ANR	75988	UnaryOperationExpression	& initial_time		75979	0					
ANR	75989	UnaryOperator	&		75979	0					
ANR	75990	Identifier	initial_time		75979	1					
ANR	75991	ReturnType	void		75979	1					
ANR	75992	Identifier	init_time		75979	2					
ANR	75993	ParameterList			75979	3					
ANR	75994	CFGEntryNode	ENTRY		75979		True				
ANR	75995	CFGExitNode	EXIT		75979		True				
ANR	75996	Symbol	& initial_time		75979						
ANR	75997	Function	parse_c_string	1341:0:32445:33604							
ANR	75998	FunctionDef	"parse_c_string (char const * s , char const * * endp)"		75997	0					
ANR	75999	CompoundStatement		1343:0:32509:33604	75997	0					
ANR	76000	IdentifierDeclStatement	"char * u , * v ;"	1344:2:32513:32524	75997	0	True				
ANR	76001	IdentifierDecl	* u		75997	0					
ANR	76002	IdentifierDeclType	char *		75997	0					
ANR	76003	Identifier	u		75997	1					
ANR	76004	IdentifierDecl	* v		75997	1					
ANR	76005	IdentifierDeclType	char *		75997	0					
ANR	76006	Identifier	v		75997	1					
ANR	76007	ExpressionStatement	"assert ( * s == '""' )"	1346:2:32529:32547	75997	1	True				
ANR	76008	CallExpression	"assert ( * s == '""' )"		75997	0					
ANR	76009	Callee	assert		75997	0					
ANR	76010	Identifier	assert		75997	0					
ANR	76011	ArgumentList	"* s == '""'"		75997	1					
ANR	76012	Argument	"* s == '""'"		75997	0					
ANR	76013	EqualityExpression	"* s == '""'"		75997	0		==			
ANR	76014	UnaryOperationExpression	* s		75997	0					
ANR	76015	UnaryOperator	*		75997	0					
ANR	76016	Identifier	s		75997	1					
ANR	76017	PrimaryExpression	"'""'"		75997	1					
ANR	76018	ExpressionStatement	s ++	1347:2:32551:32554	75997	2	True				
ANR	76019	PostIncDecOperationExpression	s ++		75997	0					
ANR	76020	Identifier	s		75997	0					
ANR	76021	IncDec	++		75997	1					
ANR	76022	ExpressionStatement	u = v = xmalloc ( strlen ( s ) )	1348:2:32558:32586	75997	3	True				
ANR	76023	AssignmentExpression	u = v = xmalloc ( strlen ( s ) )		75997	0		=			
ANR	76024	Identifier	u		75997	0					
ANR	76025	AssignmentExpression	v = xmalloc ( strlen ( s ) )		75997	1		=			
ANR	76026	Identifier	v		75997	0					
ANR	76027	CallExpression	xmalloc ( strlen ( s ) )		75997	1					
ANR	76028	Callee	xmalloc		75997	0					
ANR	76029	Identifier	xmalloc		75997	0					
ANR	76030	ArgumentList	strlen ( s )		75997	1					
ANR	76031	Argument	strlen ( s )		75997	0					
ANR	76032	CallExpression	strlen ( s )		75997	0					
ANR	76033	Callee	strlen		75997	0					
ANR	76034	Identifier	strlen		75997	0					
ANR	76035	ArgumentList	s		75997	1					
ANR	76036	Argument	s		75997	0					
ANR	76037	Identifier	s		75997	0					
ANR	76038	ForStatement	for ( ; ; )		75997	4					
ANR	76039	CompoundStatement		9:6:101:114	75997	0					
ANR	76040	IdentifierDeclStatement	char c = * s ++ ;	1351:6:32611:32624	75997	0	True				
ANR	76041	IdentifierDecl	c = * s ++		75997	0					
ANR	76042	IdentifierDeclType	char		75997	0					
ANR	76043	Identifier	c		75997	1					
ANR	76044	AssignmentExpression	c = * s ++		75997	2		=			
ANR	76045	Identifier	c		75997	0					
ANR	76046	UnaryOperationExpression	* s ++		75997	1					
ANR	76047	UnaryOperator	*		75997	0					
ANR	76048	PostIncDecOperationExpression	s ++		75997	1					
ANR	76049	Identifier	s		75997	0					
ANR	76050	IncDec	++		75997	1					
ANR	76051	SwitchStatement	switch ( c )		75997	1					
ANR	76052	Condition	c	1353:14:32641:32641	75997	0	True				
ANR	76053	Identifier	c		75997	0					
ANR	76054	CompoundStatement		12:1:135:135	75997	1					
ANR	76055	Label	case 0 :	1355:3:32650:32656	75997	0	True				
ANR	76056	GotoStatement	goto fail ;	1356:5:32663:32672	75997	1	True				
ANR	76057	Identifier	fail		75997	0					
ANR	76058	Label	"case '""' :"	1358:3:32678:32686	75997	2	True				
ANR	76059	ExpressionStatement	* v ++ = 0	1359:5:32693:32701	75997	3	True				
ANR	76060	AssignmentExpression	* v ++ = 0		75997	0		=			
ANR	76061	UnaryOperationExpression	* v ++		75997	0					
ANR	76062	UnaryOperator	*		75997	0					
ANR	76063	PostIncDecOperationExpression	v ++		75997	1					
ANR	76064	Identifier	v		75997	0					
ANR	76065	IncDec	++		75997	1					
ANR	76066	PrimaryExpression	0		75997	1					
ANR	76067	ExpressionStatement	"v = realloc ( u , v - u )"	1360:5:32708:32730	75997	4	True				
ANR	76068	AssignmentExpression	"v = realloc ( u , v - u )"		75997	0		=			
ANR	76069	Identifier	v		75997	0					
ANR	76070	CallExpression	"realloc ( u , v - u )"		75997	1					
ANR	76071	Callee	realloc		75997	0					
ANR	76072	Identifier	realloc		75997	0					
ANR	76073	ArgumentList	u		75997	1					
ANR	76074	Argument	u		75997	0					
ANR	76075	Identifier	u		75997	0					
ANR	76076	Argument	v - u		75997	1					
ANR	76077	AdditiveExpression	v - u		75997	0		-			
ANR	76078	Identifier	v		75997	0					
ANR	76079	Identifier	u		75997	1					
ANR	76080	IfStatement	if ( v )		75997	5					
ANR	76081	Condition	v	1361:9:32741:32741	75997	0	True				
ANR	76082	Identifier	v		75997	0					
ANR	76083	ExpressionStatement	u = v	1362:7:32751:32756	75997	1	True				
ANR	76084	AssignmentExpression	u = v		75997	0		=			
ANR	76085	Identifier	u		75997	0					
ANR	76086	Identifier	v		75997	1					
ANR	76087	IfStatement	if ( endp )		75997	6					
ANR	76088	Condition	endp	1363:9:32767:32770	75997	0	True				
ANR	76089	Identifier	endp		75997	0					
ANR	76090	ExpressionStatement	* endp = s	1364:7:32780:32789	75997	1	True				
ANR	76091	AssignmentExpression	* endp = s		75997	0		=			
ANR	76092	UnaryOperationExpression	* endp		75997	0					
ANR	76093	UnaryOperator	*		75997	0					
ANR	76094	Identifier	endp		75997	1					
ANR	76095	Identifier	s		75997	1					
ANR	76096	ReturnStatement	return u ;	1365:5:32796:32804	75997	7	True				
ANR	76097	Identifier	u		75997	0					
ANR	76098	Label	case '\\\\' :	1367:3:32810:32819	75997	8	True				
ANR	76099	BreakStatement	break ;	1368:5:32826:32831	75997	9	True				
ANR	76100	Label	default :	1370:3:32837:32844	75997	10	True				
ANR	76101	Identifier	default		75997	0					
ANR	76102	ExpressionStatement	* v ++ = c	1371:5:32851:32859	75997	11	True				
ANR	76103	AssignmentExpression	* v ++ = c		75997	0		=			
ANR	76104	UnaryOperationExpression	* v ++		75997	0					
ANR	76105	UnaryOperator	*		75997	0					
ANR	76106	PostIncDecOperationExpression	v ++		75997	1					
ANR	76107	Identifier	v		75997	0					
ANR	76108	IncDec	++		75997	1					
ANR	76109	Identifier	c		75997	1					
ANR	76110	ContinueStatement	continue ;	1372:5:32866:32874	75997	12	True				
ANR	76111	ExpressionStatement	c = * s ++	1375:6:32886:32894	75997	2	True				
ANR	76112	AssignmentExpression	c = * s ++		75997	0		=			
ANR	76113	Identifier	c		75997	0					
ANR	76114	UnaryOperationExpression	* s ++		75997	1					
ANR	76115	UnaryOperator	*		75997	0					
ANR	76116	PostIncDecOperationExpression	s ++		75997	1					
ANR	76117	Identifier	s		75997	0					
ANR	76118	IncDec	++		75997	1					
ANR	76119	SwitchStatement	switch ( c )		75997	3					
ANR	76120	Condition	c	1376:14:32910:32910	75997	0	True				
ANR	76121	Identifier	c		75997	0					
ANR	76122	CompoundStatement		35:1:404:404	75997	1					
ANR	76123	Label	case 'a' :	1378:3:32919:32927	75997	0	True				
ANR	76124	ExpressionStatement	c = '\\a'	1378:13:32929:32937	75997	1	True				
ANR	76125	AssignmentExpression	c = '\\a'		75997	0		=			
ANR	76126	Identifier	c		75997	0					
ANR	76127	PrimaryExpression	'\\a'		75997	1					
ANR	76128	BreakStatement	break ;	1378:23:32939:32944	75997	2	True				
ANR	76129	Label	case 'b' :	1379:3:32949:32957	75997	3	True				
ANR	76130	ExpressionStatement	c = '\\b'	1379:13:32959:32967	75997	4	True				
ANR	76131	AssignmentExpression	c = '\\b'		75997	0		=			
ANR	76132	Identifier	c		75997	0					
ANR	76133	PrimaryExpression	'\\b'		75997	1					
ANR	76134	BreakStatement	break ;	1379:23:32969:32974	75997	5	True				
ANR	76135	Label	case 'f' :	1380:3:32979:32987	75997	6	True				
ANR	76136	ExpressionStatement	c = '\\f'	1380:13:32989:32997	75997	7	True				
ANR	76137	AssignmentExpression	c = '\\f'		75997	0		=			
ANR	76138	Identifier	c		75997	0					
ANR	76139	PrimaryExpression	'\\f'		75997	1					
ANR	76140	BreakStatement	break ;	1380:23:32999:33004	75997	8	True				
ANR	76141	Label	case 'n' :	1381:3:33009:33017	75997	9	True				
ANR	76142	ExpressionStatement	c = '\\n'	1381:13:33019:33027	75997	10	True				
ANR	76143	AssignmentExpression	c = '\\n'		75997	0		=			
ANR	76144	Identifier	c		75997	0					
ANR	76145	PrimaryExpression	'\\n'		75997	1					
ANR	76146	BreakStatement	break ;	1381:23:33029:33034	75997	11	True				
ANR	76147	Label	case 'r' :	1382:3:33039:33047	75997	12	True				
ANR	76148	ExpressionStatement	c = '\\r'	1382:13:33049:33057	75997	13	True				
ANR	76149	AssignmentExpression	c = '\\r'		75997	0		=			
ANR	76150	Identifier	c		75997	0					
ANR	76151	PrimaryExpression	'\\r'		75997	1					
ANR	76152	BreakStatement	break ;	1382:23:33059:33064	75997	14	True				
ANR	76153	Label	case 't' :	1383:3:33069:33077	75997	15	True				
ANR	76154	ExpressionStatement	c = '\\t'	1383:13:33079:33087	75997	16	True				
ANR	76155	AssignmentExpression	c = '\\t'		75997	0		=			
ANR	76156	Identifier	c		75997	0					
ANR	76157	PrimaryExpression	'\\t'		75997	1					
ANR	76158	BreakStatement	break ;	1383:23:33089:33094	75997	17	True				
ANR	76159	Label	case 'v' :	1384:3:33099:33107	75997	18	True				
ANR	76160	ExpressionStatement	c = '\\v'	1384:13:33109:33117	75997	19	True				
ANR	76161	AssignmentExpression	c = '\\v'		75997	0		=			
ANR	76162	Identifier	c		75997	0					
ANR	76163	PrimaryExpression	'\\v'		75997	1					
ANR	76164	BreakStatement	break ;	1384:23:33119:33124	75997	20	True				
ANR	76165	Label	case '\\\\' :	1385:3:33129:33138	75997	21	True				
ANR	76166	Label	"case '""' :"	1385:14:33140:33148	75997	22	True				
ANR	76167	BreakStatement	break ;	1386:5:33155:33160	75997	23	True				
ANR	76168	Label	case '0' :	1387:3:33181:33189	75997	24	True				
ANR	76169	Label	case '1' :	1387:13:33191:33199	75997	25	True				
ANR	76170	Label	case '2' :	1387:23:33201:33209	75997	26	True				
ANR	76171	Label	case '3' :	1387:33:33211:33219	75997	27	True				
ANR	76172	CompoundStatement		47:7:725:749	75997	28					
ANR	76173	IdentifierDeclStatement	int acc = ( c - '0' ) << 6 ;	1389:7:33235:33259	75997	0	True				
ANR	76174	IdentifierDecl	acc = ( c - '0' ) << 6		75997	0					
ANR	76175	IdentifierDeclType	int		75997	0					
ANR	76176	Identifier	acc		75997	1					
ANR	76177	AssignmentExpression	acc = ( c - '0' ) << 6		75997	2		=			
ANR	76178	Identifier	acc		75997	0					
ANR	76179	ShiftExpression	( c - '0' ) << 6		75997	1		<<			
ANR	76180	AdditiveExpression	c - '0'		75997	0		-			
ANR	76181	Identifier	c		75997	0					
ANR	76182	PrimaryExpression	'0'		75997	1					
ANR	76183	PrimaryExpression	6		75997	1					
ANR	76184	ExpressionStatement	c = * s ++	1391:7:33269:33277	75997	1	True				
ANR	76185	AssignmentExpression	c = * s ++		75997	0		=			
ANR	76186	Identifier	c		75997	0					
ANR	76187	UnaryOperationExpression	* s ++		75997	1					
ANR	76188	UnaryOperator	*		75997	0					
ANR	76189	PostIncDecOperationExpression	s ++		75997	1					
ANR	76190	Identifier	s		75997	0					
ANR	76191	IncDec	++		75997	1					
ANR	76192	IfStatement	if ( c < '0' || c > '7' )		75997	2					
ANR	76193	Condition	c < '0' || c > '7'	1392:11:33290:33307	75997	0	True				
ANR	76194	OrExpression	c < '0' || c > '7'		75997	0		||			
ANR	76195	RelationalExpression	c < '0'		75997	0		<			
ANR	76196	Identifier	c		75997	0					
ANR	76197	PrimaryExpression	'0'		75997	1					
ANR	76198	RelationalExpression	c > '7'		75997	1		>			
ANR	76199	Identifier	c		75997	0					
ANR	76200	PrimaryExpression	'7'		75997	1					
ANR	76201	GotoStatement	goto fail ;	1393:9:33319:33328	75997	1	True				
ANR	76202	Identifier	fail		75997	0					
ANR	76203	ExpressionStatement	acc |= ( c - '0' ) << 3	1394:7:33337:33358	75997	3	True				
ANR	76204	AssignmentExpression	acc |= ( c - '0' ) << 3		75997	0		|=			
ANR	76205	Identifier	acc		75997	0					
ANR	76206	ShiftExpression	( c - '0' ) << 3		75997	1		<<			
ANR	76207	AdditiveExpression	c - '0'		75997	0		-			
ANR	76208	Identifier	c		75997	0					
ANR	76209	PrimaryExpression	'0'		75997	1					
ANR	76210	PrimaryExpression	3		75997	1					
ANR	76211	ExpressionStatement	c = * s ++	1395:7:33367:33375	75997	4	True				
ANR	76212	AssignmentExpression	c = * s ++		75997	0		=			
ANR	76213	Identifier	c		75997	0					
ANR	76214	UnaryOperationExpression	* s ++		75997	1					
ANR	76215	UnaryOperator	*		75997	0					
ANR	76216	PostIncDecOperationExpression	s ++		75997	1					
ANR	76217	Identifier	s		75997	0					
ANR	76218	IncDec	++		75997	1					
ANR	76219	IfStatement	if ( c < '0' || c > '7' )		75997	5					
ANR	76220	Condition	c < '0' || c > '7'	1396:11:33388:33405	75997	0	True				
ANR	76221	OrExpression	c < '0' || c > '7'		75997	0		||			
ANR	76222	RelationalExpression	c < '0'		75997	0		<			
ANR	76223	Identifier	c		75997	0					
ANR	76224	PrimaryExpression	'0'		75997	1					
ANR	76225	RelationalExpression	c > '7'		75997	1		>			
ANR	76226	Identifier	c		75997	0					
ANR	76227	PrimaryExpression	'7'		75997	1					
ANR	76228	GotoStatement	goto fail ;	1397:9:33417:33426	75997	1	True				
ANR	76229	Identifier	fail		75997	0					
ANR	76230	ExpressionStatement	acc |= ( c - '0' )	1398:7:33435:33451	75997	6	True				
ANR	76231	AssignmentExpression	acc |= ( c - '0' )		75997	0		|=			
ANR	76232	Identifier	acc		75997	0					
ANR	76233	AdditiveExpression	c - '0'		75997	1		-			
ANR	76234	Identifier	c		75997	0					
ANR	76235	PrimaryExpression	'0'		75997	1					
ANR	76236	ExpressionStatement	c = acc	1399:7:33460:33467	75997	7	True				
ANR	76237	AssignmentExpression	c = acc		75997	0		=			
ANR	76238	Identifier	c		75997	0					
ANR	76239	Identifier	acc		75997	1					
ANR	76240	BreakStatement	break ;	1400:7:33476:33481	75997	8	True				
ANR	76241	Label	default :	1402:3:33493:33500	75997	29	True				
ANR	76242	Identifier	default		75997	0					
ANR	76243	GotoStatement	goto fail ;	1403:5:33507:33516	75997	30	True				
ANR	76244	Identifier	fail		75997	0					
ANR	76245	ExpressionStatement	* v ++ = c	1405:6:33527:33535	75997	4	True				
ANR	76246	AssignmentExpression	* v ++ = c		75997	0		=			
ANR	76247	UnaryOperationExpression	* v ++		75997	0					
ANR	76248	UnaryOperator	*		75997	0					
ANR	76249	PostIncDecOperationExpression	v ++		75997	1					
ANR	76250	Identifier	v		75997	0					
ANR	76251	IncDec	++		75997	1					
ANR	76252	Identifier	c		75997	1					
ANR	76253	Label	fail :	1408:0:33544:33548	75997	5	True				
ANR	76254	Identifier	fail		75997	0					
ANR	76255	ExpressionStatement	free ( u )	1409:2:33552:33560	75997	6	True				
ANR	76256	CallExpression	free ( u )		75997	0					
ANR	76257	Callee	free		75997	0					
ANR	76258	Identifier	free		75997	0					
ANR	76259	ArgumentList	u		75997	1					
ANR	76260	Argument	u		75997	0					
ANR	76261	Identifier	u		75997	0					
ANR	76262	IfStatement	if ( endp )		75997	7					
ANR	76263	Condition	endp	1410:6:33568:33571	75997	0	True				
ANR	76264	Identifier	endp		75997	0					
ANR	76265	ExpressionStatement	* endp = s	1411:4:33578:33587	75997	1	True				
ANR	76266	AssignmentExpression	* endp = s		75997	0		=			
ANR	76267	UnaryOperationExpression	* endp		75997	0					
ANR	76268	UnaryOperator	*		75997	0					
ANR	76269	Identifier	endp		75997	1					
ANR	76270	Identifier	s		75997	1					
ANR	76271	ReturnStatement	return NULL ;	1412:2:33591:33602	75997	8	True				
ANR	76272	Identifier	NULL		75997	0					
ANR	76273	ReturnType	static char *		75997	1					
ANR	76274	Identifier	parse_c_string		75997	2					
ANR	76275	ParameterList	"char const * s , char const * * endp"		75997	3					
ANR	76276	Parameter	char const * s	1342:16:32475:32487	75997	0	True				
ANR	76277	ParameterType	char const *		75997	0					
ANR	76278	Identifier	s		75997	1					
ANR	76279	Parameter	char const * * endp	1342:31:32490:32506	75997	1	True				
ANR	76280	ParameterType	char const * *		75997	0					
ANR	76281	Identifier	endp		75997	1					
ANR	76282	CFGEntryNode	ENTRY		75997		True				
ANR	76283	CFGExitNode	EXIT		75997		True				
ANR	76284	InfiniteForNode	true		75997		True				
ANR	76285	Symbol	* s ++		75997						
ANR	76286	Symbol	acc		75997						
ANR	76287	Symbol	c		75997						
ANR	76288	Symbol	NULL		75997						
ANR	76289	Symbol	* v ++		75997						
ANR	76290	Symbol	realloc		75997						
ANR	76291	Symbol	strlen		75997						
ANR	76292	Symbol	s		75997						
ANR	76293	Symbol	u		75997						
ANR	76294	Symbol	xmalloc		75997						
ANR	76295	Symbol	* endp		75997						
ANR	76296	Symbol	v		75997						
ANR	76297	Symbol	endp		75997						
ANR	76298	Symbol	* s		75997						
ANR	76299	Function	strip_leading_slashes	1419:0:33781:34194							
ANR	76300	FunctionDef	"strip_leading_slashes (char * name , int strip_leading)"		76299	0					
ANR	76301	CompoundStatement		1421:0:33847:34194	76299	0					
ANR	76302	IdentifierDeclStatement	int s = strip_leading ;	1422:2:33851:33872	76299	0	True				
ANR	76303	IdentifierDecl	s = strip_leading		76299	0					
ANR	76304	IdentifierDeclType	int		76299	0					
ANR	76305	Identifier	s		76299	1					
ANR	76306	AssignmentExpression	s = strip_leading		76299	2		=			
ANR	76307	Identifier	strip_leading		76299	0					
ANR	76308	Identifier	strip_leading		76299	1					
ANR	76309	IdentifierDeclStatement	"char * p , * n ;"	1423:2:33876:33887	76299	1	True				
ANR	76310	IdentifierDecl	* p		76299	0					
ANR	76311	IdentifierDeclType	char *		76299	0					
ANR	76312	Identifier	p		76299	1					
ANR	76313	IdentifierDecl	* n		76299	1					
ANR	76314	IdentifierDeclType	char *		76299	0					
ANR	76315	Identifier	n		76299	1					
ANR	76316	ForStatement	for ( p = n = name ; * p ; p ++ )		76299	2					
ANR	76317	ForInit	p = n = name ;	1425:7:33897:33909	76299	0	True				
ANR	76318	AssignmentExpression	p = n = name		76299	0		=			
ANR	76319	Identifier	p		76299	0					
ANR	76320	AssignmentExpression	n = name		76299	1		=			
ANR	76321	Identifier	n		76299	0					
ANR	76322	Identifier	name		76299	1					
ANR	76323	Condition	* p	1425:22:33912:33913	76299	1	True				
ANR	76324	UnaryOperationExpression	* p		76299	0					
ANR	76325	UnaryOperator	*		76299	0					
ANR	76326	Identifier	p		76299	1					
ANR	76327	PostIncDecOperationExpression	p ++	1425:27:33917:33919	76299	2	True				
ANR	76328	Identifier	p		76299	0					
ANR	76329	IncDec	++		76299	1					
ANR	76330	CompoundStatement		6:4:78:78	76299	3					
ANR	76331	IfStatement	if ( ISSLASH ( * p ) )		76299	0					
ANR	76332	Condition	ISSLASH ( * p )	1427:10:33938:33949	76299	0	True				
ANR	76333	CallExpression	ISSLASH ( * p )		76299	0					
ANR	76334	Callee	ISSLASH		76299	0					
ANR	76335	Identifier	ISSLASH		76299	0					
ANR	76336	ArgumentList	* p		76299	1					
ANR	76337	Argument	* p		76299	0					
ANR	76338	UnaryOperationExpression	* p		76299	0					
ANR	76339	UnaryOperator	*		76299	0					
ANR	76340	Identifier	p		76299	1					
ANR	76341	CompoundStatement		8:1:105:105	76299	1					
ANR	76342	WhileStatement	while ( ISSLASH ( p [ 1 ] ) )		76299	0					
ANR	76343	Condition	ISSLASH ( p [ 1 ] )	1429:10:33965:33978	76299	0	True				
ANR	76344	CallExpression	ISSLASH ( p [ 1 ] )		76299	0					
ANR	76345	Callee	ISSLASH		76299	0					
ANR	76346	Identifier	ISSLASH		76299	0					
ANR	76347	ArgumentList	p [ 1 ]		76299	1					
ANR	76348	Argument	p [ 1 ]		76299	0					
ANR	76349	ArrayIndexing	p [ 1 ]		76299	0					
ANR	76350	Identifier	p		76299	0					
ANR	76351	PrimaryExpression	1		76299	1					
ANR	76352	ExpressionStatement	p ++	1430:5:33986:33989	76299	1	True				
ANR	76353	PostIncDecOperationExpression	p ++		76299	0					
ANR	76354	Identifier	p		76299	0					
ANR	76355	IncDec	++		76299	1					
ANR	76356	IfStatement	if ( strip_leading < 0 || -- s >= 0 )		76299	1					
ANR	76357	Condition	strip_leading < 0 || -- s >= 0	1431:7:33998:34026	76299	0	True				
ANR	76358	OrExpression	strip_leading < 0 || -- s >= 0		76299	0		||			
ANR	76359	RelationalExpression	strip_leading < 0		76299	0		<			
ANR	76360	Identifier	strip_leading		76299	0					
ANR	76361	PrimaryExpression	0		76299	1					
ANR	76362	RelationalExpression	-- s >= 0		76299	1		>=			
ANR	76363	UnaryExpression	-- s		76299	0					
ANR	76364	IncDec	--		76299	0					
ANR	76365	Identifier	s		76299	1					
ANR	76366	PrimaryExpression	0		76299	1					
ANR	76367	ExpressionStatement	n = p + 1	1432:7:34036:34043	76299	1	True				
ANR	76368	AssignmentExpression	n = p + 1		76299	0		=			
ANR	76369	Identifier	n		76299	0					
ANR	76370	AdditiveExpression	p + 1		76299	1		+			
ANR	76371	Identifier	p		76299	0					
ANR	76372	PrimaryExpression	1		76299	1					
ANR	76373	IfStatement	if ( ( strip_leading < 0 || s <= 0 ) && * n )		76299	3					
ANR	76374	Condition	( strip_leading < 0 || s <= 0 ) && * n	1435:6:34060:34094	76299	0	True				
ANR	76375	AndExpression	( strip_leading < 0 || s <= 0 ) && * n		76299	0		&&			
ANR	76376	OrExpression	strip_leading < 0 || s <= 0		76299	0		||			
ANR	76377	RelationalExpression	strip_leading < 0		76299	0		<			
ANR	76378	Identifier	strip_leading		76299	0					
ANR	76379	PrimaryExpression	0		76299	1					
ANR	76380	RelationalExpression	s <= 0		76299	1		<=			
ANR	76381	Identifier	s		76299	0					
ANR	76382	PrimaryExpression	0		76299	1					
ANR	76383	UnaryOperationExpression	* n		76299	1					
ANR	76384	UnaryOperator	*		76299	0					
ANR	76385	Identifier	n		76299	1					
ANR	76386	CompoundStatement		16:4:253:253	76299	1					
ANR	76387	ExpressionStatement	"memmove ( name , n , strlen ( n ) + 1 )"	1437:6:34109:34142	76299	0	True				
ANR	76388	CallExpression	"memmove ( name , n , strlen ( n ) + 1 )"		76299	0					
ANR	76389	Callee	memmove		76299	0					
ANR	76390	Identifier	memmove		76299	0					
ANR	76391	ArgumentList	name		76299	1					
ANR	76392	Argument	name		76299	0					
ANR	76393	Identifier	name		76299	0					
ANR	76394	Argument	n		76299	1					
ANR	76395	Identifier	n		76299	0					
ANR	76396	Argument	strlen ( n ) + 1		76299	2					
ANR	76397	AdditiveExpression	strlen ( n ) + 1		76299	0		+			
ANR	76398	CallExpression	strlen ( n )		76299	0					
ANR	76399	Callee	strlen		76299	0					
ANR	76400	Identifier	strlen		76299	0					
ANR	76401	ArgumentList	n		76299	1					
ANR	76402	Argument	n		76299	0					
ANR	76403	Identifier	n		76299	0					
ANR	76404	PrimaryExpression	1		76299	1					
ANR	76405	ReturnStatement	return true ;	1438:6:34150:34161	76299	1	True				
ANR	76406	Identifier	true		76299	0					
ANR	76407	ElseStatement	else		76299	0					
ANR	76408	ReturnStatement	return false ;	1441:4:34180:34192	76299	0	True				
ANR	76409	Identifier	false		76299	0					
ANR	76410	ReturnType	static bool		76299	1					
ANR	76411	Identifier	strip_leading_slashes		76299	2					
ANR	76412	ParameterList	"char * name , int strip_leading"		76299	3					
ANR	76413	Parameter	char * name	1420:23:33816:33825	76299	0	True				
ANR	76414	ParameterType	char *		76299	0					
ANR	76415	Identifier	name		76299	1					
ANR	76416	Parameter	int strip_leading	1420:35:33828:33844	76299	1	True				
ANR	76417	ParameterType	int		76299	0					
ANR	76418	Identifier	strip_leading		76299	1					
ANR	76419	CFGEntryNode	ENTRY		76299		True				
ANR	76420	CFGExitNode	EXIT		76299		True				
ANR	76421	Symbol	p		76299						
ANR	76422	Symbol	strlen		76299						
ANR	76423	Symbol	s		76299						
ANR	76424	Symbol	name		76299						
ANR	76425	Symbol	* n		76299						
ANR	76426	Symbol	true		76299						
ANR	76427	Symbol	false		76299						
ANR	76428	Symbol	* p		76299						
ANR	76429	Symbol	strip_leading		76299						
ANR	76430	Symbol	ISSLASH		76299						
ANR	76431	Symbol	n		76299						
ANR	76432	Function	fetchname	1447:0:34237:36818							
ANR	76433	FunctionDef	"fetchname (char const * at , int strip_leading , char * * pname , char * * ptimestr , struct timespec * pstamp)"		76432	0					
ANR	76434	CompoundStatement		1450:0:34348:36818	76432	0					
ANR	76435	IdentifierDeclStatement	char * name ;	1451:4:34354:34364	76432	0	True				
ANR	76436	IdentifierDecl	* name		76432	0					
ANR	76437	IdentifierDeclType	char *		76432	0					
ANR	76438	Identifier	name		76432	1					
ANR	76439	IdentifierDeclStatement	const char * t ;	1452:4:34370:34383	76432	1	True				
ANR	76440	IdentifierDecl	* t		76432	0					
ANR	76441	IdentifierDeclType	const char *		76432	0					
ANR	76442	Identifier	t		76432	1					
ANR	76443	IdentifierDeclStatement	char * timestr = NULL ;	1453:4:34389:34409	76432	2	True				
ANR	76444	IdentifierDecl	* timestr = NULL		76432	0					
ANR	76445	IdentifierDeclType	char *		76432	0					
ANR	76446	Identifier	timestr		76432	1					
ANR	76447	AssignmentExpression	* timestr = NULL		76432	2		=			
ANR	76448	Identifier	NULL		76432	0					
ANR	76449	Identifier	NULL		76432	1					
ANR	76450	IdentifierDeclStatement	struct timespec stamp ;	1454:4:34415:34436	76432	3	True				
ANR	76451	IdentifierDecl	stamp		76432	0					
ANR	76452	IdentifierDeclType	struct timespec		76432	0					
ANR	76453	Identifier	stamp		76432	1					
ANR	76454	ExpressionStatement	stamp . tv_sec = - 1	1456:4:34443:34460	76432	4	True				
ANR	76455	AssignmentExpression	stamp . tv_sec = - 1		76432	0		=			
ANR	76456	MemberAccess	stamp . tv_sec		76432	0					
ANR	76457	Identifier	stamp		76432	0					
ANR	76458	Identifier	tv_sec		76432	1					
ANR	76459	UnaryOperationExpression	- 1		76432	1					
ANR	76460	UnaryOperator	-		76432	0					
ANR	76461	PrimaryExpression	1		76432	1					
ANR	76462	ExpressionStatement	stamp . tv_nsec = 0	1457:4:34466:34483	76432	5	True				
ANR	76463	AssignmentExpression	stamp . tv_nsec = 0		76432	0		=			
ANR	76464	MemberAccess	stamp . tv_nsec		76432	0					
ANR	76465	Identifier	stamp		76432	0					
ANR	76466	Identifier	tv_nsec		76432	1					
ANR	76467	PrimaryExpression	0		76432	1					
ANR	76468	WhileStatement	while ( ISSPACE ( ( unsigned char ) * at ) )		76432	6					
ANR	76469	Condition	ISSPACE ( ( unsigned char ) * at )	1459:11:34497:34525	76432	0	True				
ANR	76470	CallExpression	ISSPACE ( ( unsigned char ) * at )		76432	0					
ANR	76471	Callee	ISSPACE		76432	0					
ANR	76472	Identifier	ISSPACE		76432	0					
ANR	76473	ArgumentList	( unsigned char ) * at		76432	1					
ANR	76474	Argument	( unsigned char ) * at		76432	0					
ANR	76475	CastExpression	( unsigned char ) * at		76432	0					
ANR	76476	CastTarget	unsigned char		76432	0					
ANR	76477	UnaryOperationExpression	* at		76432	1					
ANR	76478	UnaryOperator	*		76432	0					
ANR	76479	Identifier	at		76432	1					
ANR	76480	ExpressionStatement	at ++	1460:1:34529:34533	76432	1	True				
ANR	76481	PostIncDecOperationExpression	at ++		76432	0					
ANR	76482	Identifier	at		76432	0					
ANR	76483	IncDec	++		76432	1					
ANR	76484	IfStatement	if ( debug & 128 )		76432	7					
ANR	76485	Condition	debug & 128	1461:8:34543:34553	76432	0	True				
ANR	76486	BitAndExpression	debug & 128		76432	0		&			
ANR	76487	Identifier	debug		76432	0					
ANR	76488	PrimaryExpression	128		76432	1					
ANR	76489	ExpressionStatement	"say ( ""fetchname %s %d\\n"" , at , strip_leading )"	1462:1:34557:34601	76432	1	True				
ANR	76490	CallExpression	"say ( ""fetchname %s %d\\n"" , at , strip_leading )"		76432	0					
ANR	76491	Callee	say		76432	0					
ANR	76492	Identifier	say		76432	0					
ANR	76493	ArgumentList	"""fetchname %s %d\\n"""		76432	1					
ANR	76494	Argument	"""fetchname %s %d\\n"""		76432	0					
ANR	76495	PrimaryExpression	"""fetchname %s %d\\n"""		76432	0					
ANR	76496	Argument	at		76432	1					
ANR	76497	Identifier	at		76432	0					
ANR	76498	Argument	strip_leading		76432	2					
ANR	76499	Identifier	strip_leading		76432	0					
ANR	76500	IfStatement	"if ( * at == '""' )"		76432	8					
ANR	76501	Condition	"* at == '""'"	1464:8:34612:34621	76432	0	True				
ANR	76502	EqualityExpression	"* at == '""'"		76432	0		==			
ANR	76503	UnaryOperationExpression	* at		76432	0					
ANR	76504	UnaryOperator	*		76432	0					
ANR	76505	Identifier	at		76432	1					
ANR	76506	PrimaryExpression	"'""'"		76432	1					
ANR	76507	CompoundStatement		16:6:281:281	76432	1					
ANR	76508	ExpressionStatement	"name = parse_c_string ( at , & t )"	1466:1:34633:34663	76432	0	True				
ANR	76509	AssignmentExpression	"name = parse_c_string ( at , & t )"		76432	0		=			
ANR	76510	Identifier	name		76432	0					
ANR	76511	CallExpression	"parse_c_string ( at , & t )"		76432	1					
ANR	76512	Callee	parse_c_string		76432	0					
ANR	76513	Identifier	parse_c_string		76432	0					
ANR	76514	ArgumentList	at		76432	1					
ANR	76515	Argument	at		76432	0					
ANR	76516	Identifier	at		76432	0					
ANR	76517	Argument	& t		76432	1					
ANR	76518	UnaryOperationExpression	& t		76432	0					
ANR	76519	UnaryOperator	&		76432	0					
ANR	76520	Identifier	t		76432	1					
ANR	76521	IfStatement	if ( ! name )		76432	1					
ANR	76522	Condition	! name	1467:5:34670:34675	76432	0	True				
ANR	76523	UnaryOperationExpression	! name		76432	0					
ANR	76524	UnaryOperator	!		76432	0					
ANR	76525	Identifier	name		76432	1					
ANR	76526	CompoundStatement		19:3:332:332	76432	1					
ANR	76527	IfStatement	if ( debug & 128 )		76432	0					
ANR	76528	Condition	debug & 128	1469:9:34692:34702	76432	0	True				
ANR	76529	BitAndExpression	debug & 128		76432	0		&			
ANR	76530	Identifier	debug		76432	0					
ANR	76531	PrimaryExpression	128		76432	1					
ANR	76532	ExpressionStatement	"say ( ""ignoring malformed filename %s\\n"" , quotearg ( at ) )"	1470:7:34712:34767	76432	1	True				
ANR	76533	CallExpression	"say ( ""ignoring malformed filename %s\\n"" , quotearg ( at ) )"		76432	0					
ANR	76534	Callee	say		76432	0					
ANR	76535	Identifier	say		76432	0					
ANR	76536	ArgumentList	"""ignoring malformed filename %s\\n"""		76432	1					
ANR	76537	Argument	"""ignoring malformed filename %s\\n"""		76432	0					
ANR	76538	PrimaryExpression	"""ignoring malformed filename %s\\n"""		76432	0					
ANR	76539	Argument	quotearg ( at )		76432	1					
ANR	76540	CallExpression	quotearg ( at )		76432	0					
ANR	76541	Callee	quotearg		76432	0					
ANR	76542	Identifier	quotearg		76432	0					
ANR	76543	ArgumentList	at		76432	1					
ANR	76544	Argument	at		76432	0					
ANR	76545	Identifier	at		76432	0					
ANR	76546	ReturnStatement	return ;	1471:5:34774:34780	76432	1	True				
ANR	76547	ElseStatement	else		76432	0					
ANR	76548	CompoundStatement		26:6:461:461	76432	0					
ANR	76549	ForStatement	for ( t = at ; * t ; t ++ )		76432	0					
ANR	76550	ForInit	t = at ;	1476:6:34818:34824	76432	0	True				
ANR	76551	AssignmentExpression	t = at		76432	0		=			
ANR	76552	Identifier	t		76432	0					
ANR	76553	Identifier	at		76432	1					
ANR	76554	Condition	* t	1476:15:34827:34828	76432	1	True				
ANR	76555	UnaryOperationExpression	* t		76432	0					
ANR	76556	UnaryOperator	*		76432	0					
ANR	76557	Identifier	t		76432	1					
ANR	76558	PostIncDecOperationExpression	t ++	1476:20:34832:34834	76432	2	True				
ANR	76559	Identifier	t		76432	0					
ANR	76560	IncDec	++		76432	1					
ANR	76561	CompoundStatement		28:3:491:491	76432	3					
ANR	76562	IfStatement	if ( ISSPACE ( ( unsigned char ) * t ) )		76432	0					
ANR	76563	Condition	ISSPACE ( ( unsigned char ) * t )	1478:9:34851:34878	76432	0	True				
ANR	76564	CallExpression	ISSPACE ( ( unsigned char ) * t )		76432	0					
ANR	76565	Callee	ISSPACE		76432	0					
ANR	76566	Identifier	ISSPACE		76432	0					
ANR	76567	ArgumentList	( unsigned char ) * t		76432	1					
ANR	76568	Argument	( unsigned char ) * t		76432	0					
ANR	76569	CastExpression	( unsigned char ) * t		76432	0					
ANR	76570	CastTarget	unsigned char		76432	0					
ANR	76571	UnaryOperationExpression	* t		76432	1					
ANR	76572	UnaryOperator	*		76432	0					
ANR	76573	Identifier	t		76432	1					
ANR	76574	CompoundStatement		33:2:653:670	76432	1					
ANR	76575	IdentifierDeclStatement	char const * u = t ;	1482:2:35002:35019	76432	0	True				
ANR	76576	IdentifierDecl	* u = t		76432	0					
ANR	76577	IdentifierDeclType	char const *		76432	0					
ANR	76578	Identifier	u		76432	1					
ANR	76579	AssignmentExpression	* u = t		76432	2		=			
ANR	76580	Identifier	t		76432	0					
ANR	76581	Identifier	t		76432	1					
ANR	76582	WhileStatement	while ( * u != '\\t' && ISSPACE ( ( unsigned char ) u [ 1 ] ) )		76432	1					
ANR	76583	Condition	* u != '\\t' && ISSPACE ( ( unsigned char ) u [ 1 ] )	1483:9:35030:35073	76432	0	True				
ANR	76584	AndExpression	* u != '\\t' && ISSPACE ( ( unsigned char ) u [ 1 ] )		76432	0		&&			
ANR	76585	EqualityExpression	* u != '\\t'		76432	0		!=			
ANR	76586	UnaryOperationExpression	* u		76432	0					
ANR	76587	UnaryOperator	*		76432	0					
ANR	76588	Identifier	u		76432	1					
ANR	76589	PrimaryExpression	'\\t'		76432	1					
ANR	76590	CallExpression	ISSPACE ( ( unsigned char ) u [ 1 ] )		76432	1					
ANR	76591	Callee	ISSPACE		76432	0					
ANR	76592	Identifier	ISSPACE		76432	0					
ANR	76593	ArgumentList	( unsigned char ) u [ 1 ]		76432	1					
ANR	76594	Argument	( unsigned char ) u [ 1 ]		76432	0					
ANR	76595	CastExpression	( unsigned char ) u [ 1 ]		76432	0					
ANR	76596	CastTarget	unsigned char		76432	0					
ANR	76597	ArrayIndexing	u [ 1 ]		76432	1					
ANR	76598	Identifier	u		76432	0					
ANR	76599	PrimaryExpression	1		76432	1					
ANR	76600	ExpressionStatement	u ++	1484:4:35080:35083	76432	1	True				
ANR	76601	PostIncDecOperationExpression	u ++		76432	0					
ANR	76602	Identifier	u		76432	0					
ANR	76603	IncDec	++		76432	1					
ANR	76604	IfStatement	"if ( * u != '\\t' && ( strchr ( u + 1 , pstamp ? '\\t' : '\\n' ) ) )"		76432	2					
ANR	76605	Condition	"* u != '\\t' && ( strchr ( u + 1 , pstamp ? '\\t' : '\\n' ) )"	1485:6:35091:35142	76432	0	True				
ANR	76606	AndExpression	"* u != '\\t' && ( strchr ( u + 1 , pstamp ? '\\t' : '\\n' ) )"		76432	0		&&			
ANR	76607	EqualityExpression	* u != '\\t'		76432	0		!=			
ANR	76608	UnaryOperationExpression	* u		76432	0					
ANR	76609	UnaryOperator	*		76432	0					
ANR	76610	Identifier	u		76432	1					
ANR	76611	PrimaryExpression	'\\t'		76432	1					
ANR	76612	CallExpression	"strchr ( u + 1 , pstamp ? '\\t' : '\\n' )"		76432	1					
ANR	76613	Callee	strchr		76432	0					
ANR	76614	Identifier	strchr		76432	0					
ANR	76615	ArgumentList	u + 1		76432	1					
ANR	76616	Argument	u + 1		76432	0					
ANR	76617	AdditiveExpression	u + 1		76432	0		+			
ANR	76618	Identifier	u		76432	0					
ANR	76619	PrimaryExpression	1		76432	1					
ANR	76620	Argument	pstamp ? '\\t' : '\\n'		76432	1					
ANR	76621	ConditionalExpression	pstamp ? '\\t' : '\\n'		76432	0					
ANR	76622	Condition	pstamp		76432	0					
ANR	76623	Identifier	pstamp		76432	0					
ANR	76624	PrimaryExpression	'\\t'		76432	1					
ANR	76625	PrimaryExpression	'\\n'		76432	2					
ANR	76626	ContinueStatement	continue ;	1486:4:35149:35157	76432	1	True				
ANR	76627	BreakStatement	break ;	1487:2:35161:35166	76432	3	True				
ANR	76628	ExpressionStatement	"name = xmemdup0 ( at , t - at )"	1490:1:35183:35211	76432	1	True				
ANR	76629	AssignmentExpression	"name = xmemdup0 ( at , t - at )"		76432	0		=			
ANR	76630	Identifier	name		76432	0					
ANR	76631	CallExpression	"xmemdup0 ( at , t - at )"		76432	1					
ANR	76632	Callee	xmemdup0		76432	0					
ANR	76633	Identifier	xmemdup0		76432	0					
ANR	76634	ArgumentList	at		76432	1					
ANR	76635	Argument	at		76432	0					
ANR	76636	Identifier	at		76432	0					
ANR	76637	Argument	t - at		76432	1					
ANR	76638	AdditiveExpression	t - at		76432	0		-			
ANR	76639	Identifier	t		76432	0					
ANR	76640	Identifier	at		76432	1					
ANR	76641	IfStatement	"if ( strcmp ( name , ""/dev/null"" ) == 0 )"		76432	9					
ANR	76642	Condition	"strcmp ( name , ""/dev/null"" ) == 0"	1496:8:35422:35452	76432	0	True				
ANR	76643	EqualityExpression	"strcmp ( name , ""/dev/null"" ) == 0"		76432	0		==			
ANR	76644	CallExpression	"strcmp ( name , ""/dev/null"" )"		76432	0					
ANR	76645	Callee	strcmp		76432	0					
ANR	76646	Identifier	strcmp		76432	0					
ANR	76647	ArgumentList	name		76432	1					
ANR	76648	Argument	name		76432	0					
ANR	76649	Identifier	name		76432	0					
ANR	76650	Argument	"""/dev/null"""		76432	1					
ANR	76651	PrimaryExpression	"""/dev/null"""		76432	0					
ANR	76652	PrimaryExpression	0		76432	1					
ANR	76653	CompoundStatement		48:6:1112:1112	76432	1					
ANR	76654	ExpressionStatement	free ( name )	1498:1:35464:35475	76432	0	True				
ANR	76655	CallExpression	free ( name )		76432	0					
ANR	76656	Callee	free		76432	0					
ANR	76657	Identifier	free		76432	0					
ANR	76658	ArgumentList	name		76432	1					
ANR	76659	Argument	name		76432	0					
ANR	76660	Identifier	name		76432	0					
ANR	76661	IfStatement	if ( pstamp )		76432	1					
ANR	76662	Condition	pstamp	1499:5:35482:35487	76432	0	True				
ANR	76663	Identifier	pstamp		76432	0					
ANR	76664	CompoundStatement		51:3:1144:1144	76432	1					
ANR	76665	ExpressionStatement	pstamp -> tv_sec = 0	1501:5:35500:35518	76432	0	True				
ANR	76666	AssignmentExpression	pstamp -> tv_sec = 0		76432	0		=			
ANR	76667	PtrMemberAccess	pstamp -> tv_sec		76432	0					
ANR	76668	Identifier	pstamp		76432	0					
ANR	76669	Identifier	tv_sec		76432	1					
ANR	76670	PrimaryExpression	0		76432	1					
ANR	76671	ExpressionStatement	pstamp -> tv_nsec = 0	1502:5:35525:35544	76432	1	True				
ANR	76672	AssignmentExpression	pstamp -> tv_nsec = 0		76432	0		=			
ANR	76673	PtrMemberAccess	pstamp -> tv_nsec		76432	0					
ANR	76674	Identifier	pstamp		76432	0					
ANR	76675	Identifier	tv_nsec		76432	1					
ANR	76676	PrimaryExpression	0		76432	1					
ANR	76677	ReturnStatement	return ;	1504:1:35552:35558	76432	2	True				
ANR	76678	IfStatement	"if ( ! strip_leading_slashes ( name , strip_leading ) )"		76432	10					
ANR	76679	Condition	"! strip_leading_slashes ( name , strip_leading )"	1508:8:35652:35696	76432	0	True				
ANR	76680	UnaryOperationExpression	"! strip_leading_slashes ( name , strip_leading )"		76432	0					
ANR	76681	UnaryOperator	!		76432	0					
ANR	76682	CallExpression	"strip_leading_slashes ( name , strip_leading )"		76432	1					
ANR	76683	Callee	strip_leading_slashes		76432	0					
ANR	76684	Identifier	strip_leading_slashes		76432	0					
ANR	76685	ArgumentList	name		76432	1					
ANR	76686	Argument	name		76432	0					
ANR	76687	Identifier	name		76432	0					
ANR	76688	Argument	strip_leading		76432	1					
ANR	76689	Identifier	strip_leading		76432	0					
ANR	76690	CompoundStatement		60:6:1356:1356	76432	1					
ANR	76691	ExpressionStatement	free ( name )	1510:1:35708:35719	76432	0	True				
ANR	76692	CallExpression	free ( name )		76432	0					
ANR	76693	Callee	free		76432	0					
ANR	76694	Identifier	free		76432	0					
ANR	76695	ArgumentList	name		76432	1					
ANR	76696	Argument	name		76432	0					
ANR	76697	Identifier	name		76432	0					
ANR	76698	ReturnStatement	return ;	1511:1:35722:35728	76432	1	True				
ANR	76699	IfStatement	if ( ptimestr )		76432	11					
ANR	76700	Condition	ptimestr	1514:8:35747:35754	76432	0	True				
ANR	76701	Identifier	ptimestr		76432	0					
ANR	76702	CompoundStatement		67:1:1417:1447	76432	1					
ANR	76703	IdentifierDeclStatement	char const * u = t + strlen ( t ) ;	1516:1:35766:35796	76432	0	True				
ANR	76704	IdentifierDecl	* u = t + strlen ( t )		76432	0					
ANR	76705	IdentifierDeclType	char const *		76432	0					
ANR	76706	Identifier	u		76432	1					
ANR	76707	AssignmentExpression	* u = t + strlen ( t )		76432	2		=			
ANR	76708	Identifier	u		76432	0					
ANR	76709	AdditiveExpression	t + strlen ( t )		76432	1		+			
ANR	76710	Identifier	t		76432	0					
ANR	76711	CallExpression	strlen ( t )		76432	1					
ANR	76712	Callee	strlen		76432	0					
ANR	76713	Identifier	strlen		76432	0					
ANR	76714	ArgumentList	t		76432	1					
ANR	76715	Argument	t		76432	0					
ANR	76716	Identifier	t		76432	0					
ANR	76717	IfStatement	if ( u != t && * ( u - 1 ) == '\\n' )		76432	1					
ANR	76718	Condition	u != t && * ( u - 1 ) == '\\n'	1518:5:35804:35827	76432	0	True				
ANR	76719	AndExpression	u != t && * ( u - 1 ) == '\\n'		76432	0		&&			
ANR	76720	EqualityExpression	u != t		76432	0		!=			
ANR	76721	Identifier	u		76432	0					
ANR	76722	Identifier	t		76432	1					
ANR	76723	EqualityExpression	* ( u - 1 ) == '\\n'		76432	1		==			
ANR	76724	UnaryOperationExpression	* ( u - 1 )		76432	0					
ANR	76725	UnaryOperator	*		76432	0					
ANR	76726	AdditiveExpression	u - 1		76432	1		-			
ANR	76727	Identifier	u		76432	0					
ANR	76728	PrimaryExpression	1		76432	1					
ANR	76729	PrimaryExpression	'\\n'		76432	1					
ANR	76730	ExpressionStatement	u --	1519:3:35833:35836	76432	1	True				
ANR	76731	PostIncDecOperationExpression	u --		76432	0					
ANR	76732	Identifier	u		76432	0					
ANR	76733	IncDec	--		76432	1					
ANR	76734	IfStatement	if ( u != t && * ( u - 1 ) == '\\r' )		76432	2					
ANR	76735	Condition	u != t && * ( u - 1 ) == '\\r'	1520:5:35843:35866	76432	0	True				
ANR	76736	AndExpression	u != t && * ( u - 1 ) == '\\r'		76432	0		&&			
ANR	76737	EqualityExpression	u != t		76432	0		!=			
ANR	76738	Identifier	u		76432	0					
ANR	76739	Identifier	t		76432	1					
ANR	76740	EqualityExpression	* ( u - 1 ) == '\\r'		76432	1		==			
ANR	76741	UnaryOperationExpression	* ( u - 1 )		76432	0					
ANR	76742	UnaryOperator	*		76432	0					
ANR	76743	AdditiveExpression	u - 1		76432	1		-			
ANR	76744	Identifier	u		76432	0					
ANR	76745	PrimaryExpression	1		76432	1					
ANR	76746	PrimaryExpression	'\\r'		76432	1					
ANR	76747	ExpressionStatement	u --	1521:3:35872:35875	76432	1	True				
ANR	76748	PostIncDecOperationExpression	u --		76432	0					
ANR	76749	Identifier	u		76432	0					
ANR	76750	IncDec	--		76432	1					
ANR	76751	ExpressionStatement	"timestr = xmemdup0 ( t , u - t )"	1522:1:35878:35907	76432	3	True				
ANR	76752	AssignmentExpression	"timestr = xmemdup0 ( t , u - t )"		76432	0		=			
ANR	76753	Identifier	timestr		76432	0					
ANR	76754	CallExpression	"xmemdup0 ( t , u - t )"		76432	1					
ANR	76755	Callee	xmemdup0		76432	0					
ANR	76756	Identifier	xmemdup0		76432	0					
ANR	76757	ArgumentList	t		76432	1					
ANR	76758	Argument	t		76432	0					
ANR	76759	Identifier	t		76432	0					
ANR	76760	Argument	u - t		76432	1					
ANR	76761	AdditiveExpression	u - t		76432	0		-			
ANR	76762	Identifier	u		76432	0					
ANR	76763	Identifier	t		76432	1					
ANR	76764	IfStatement	if ( * t != '\\n' )		76432	12					
ANR	76765	Condition	* t != '\\n'	1525:10:35928:35937	76432	0	True				
ANR	76766	EqualityExpression	* t != '\\n'		76432	0		!=			
ANR	76767	UnaryOperationExpression	* t		76432	0					
ANR	76768	UnaryOperator	*		76432	0					
ANR	76769	Identifier	t		76432	1					
ANR	76770	PrimaryExpression	'\\n'		76432	1					
ANR	76771	CompoundStatement		77:1:1592:1592	76432	1					
ANR	76772	IfStatement	if ( ! pstamp )		76432	0					
ANR	76773	Condition	! pstamp	1527:7:35950:35957	76432	0	True				
ANR	76774	UnaryOperationExpression	! pstamp		76432	0					
ANR	76775	UnaryOperator	!		76432	0					
ANR	76776	Identifier	pstamp		76432	1					
ANR	76777	CompoundStatement		79:5:1616:1616	76432	1					
ANR	76778	ExpressionStatement	free ( name )	1529:7:35974:35985	76432	0	True				
ANR	76779	CallExpression	free ( name )		76432	0					
ANR	76780	Callee	free		76432	0					
ANR	76781	Identifier	free		76432	0					
ANR	76782	ArgumentList	name		76432	1					
ANR	76783	Argument	name		76432	0					
ANR	76784	Identifier	name		76432	0					
ANR	76785	ExpressionStatement	free ( timestr )	1530:7:35994:36008	76432	1	True				
ANR	76786	CallExpression	free ( timestr )		76432	0					
ANR	76787	Callee	free		76432	0					
ANR	76788	Identifier	free		76432	0					
ANR	76789	ArgumentList	timestr		76432	1					
ANR	76790	Argument	timestr		76432	0					
ANR	76791	Identifier	timestr		76432	0					
ANR	76792	ReturnStatement	return ;	1531:7:36017:36023	76432	2	True				
ANR	76793	IfStatement	if ( set_time | set_utc )		76432	1					
ANR	76794	Condition	set_time | set_utc	1534:7:36040:36057	76432	0	True				
ANR	76795	InclusiveOrExpression	set_time | set_utc		76432	0		|			
ANR	76796	Identifier	set_time		76432	0					
ANR	76797	Identifier	set_utc		76432	1					
ANR	76798	ExpressionStatement	"get_date ( & stamp , t , & initial_time )"	1535:5:36065:36100	76432	1	True				
ANR	76799	CallExpression	"get_date ( & stamp , t , & initial_time )"		76432	0					
ANR	76800	Callee	get_date		76432	0					
ANR	76801	Identifier	get_date		76432	0					
ANR	76802	ArgumentList	& stamp		76432	1					
ANR	76803	Argument	& stamp		76432	0					
ANR	76804	UnaryOperationExpression	& stamp		76432	0					
ANR	76805	UnaryOperator	&		76432	0					
ANR	76806	Identifier	stamp		76432	1					
ANR	76807	Argument	t		76432	1					
ANR	76808	Identifier	t		76432	0					
ANR	76809	Argument	& initial_time		76432	2					
ANR	76810	UnaryOperationExpression	& initial_time		76432	0					
ANR	76811	UnaryOperator	&		76432	0					
ANR	76812	Identifier	initial_time		76432	1					
ANR	76813	ElseStatement	else		76432	0					
ANR	76814	CompoundStatement		94:7:2030:2114	76432	0					
ANR	76815	IdentifierDeclStatement	"const struct timespec lower = { - 25L * 60 * 60 } , upper = { 26L * 60 * 60 } ;"	1543:7:36379:36463	76432	0	True				
ANR	76816	IdentifierDecl	lower = { - 25L * 60 * 60 }		76432	0					
ANR	76817	IdentifierDeclType	const struct timespec		76432	0					
ANR	76818	Identifier	lower		76432	1					
ANR	76819	AssignmentExpression	lower = { - 25L * 60 * 60 }		76432	2		=			
ANR	76820	Identifier	lower		76432	0					
ANR	76821	InitializerList	- 25L * 60 * 60		76432	1					
ANR	76822	MultiplicativeExpression	- 25L * 60 * 60		76432	0		*			
ANR	76823	UnaryOperationExpression	- 25L		76432	0					
ANR	76824	UnaryOperator	-		76432	0					
ANR	76825	PrimaryExpression	25L		76432	1					
ANR	76826	MultiplicativeExpression	60 * 60		76432	1		*			
ANR	76827	PrimaryExpression	60		76432	0					
ANR	76828	PrimaryExpression	60		76432	1					
ANR	76829	IdentifierDecl	upper = { 26L * 60 * 60 }		76432	1					
ANR	76830	IdentifierDeclType	const struct timespec		76432	0					
ANR	76831	Identifier	upper		76432	1					
ANR	76832	AssignmentExpression	upper = { 26L * 60 * 60 }		76432	2		=			
ANR	76833	Identifier	upper		76432	0					
ANR	76834	InitializerList	26L * 60 * 60		76432	1					
ANR	76835	MultiplicativeExpression	26L * 60 * 60		76432	0		*			
ANR	76836	PrimaryExpression	26L		76432	0					
ANR	76837	MultiplicativeExpression	60 * 60		76432	1		*			
ANR	76838	PrimaryExpression	60		76432	0					
ANR	76839	PrimaryExpression	60		76432	1					
ANR	76840	IfStatement	"if ( get_date ( & stamp , t , & initial_time ) && timespec_cmp ( stamp , lower ) > 0 && timespec_cmp ( stamp , upper ) < 0 )"		76432	1					
ANR	76841	Condition	"get_date ( & stamp , t , & initial_time ) && timespec_cmp ( stamp , lower ) > 0 && timespec_cmp ( stamp , upper ) < 0"	1545:11:36476:36588	76432	0	True				
ANR	76842	AndExpression	"get_date ( & stamp , t , & initial_time ) && timespec_cmp ( stamp , lower ) > 0 && timespec_cmp ( stamp , upper ) < 0"		76432	0		&&			
ANR	76843	CallExpression	"get_date ( & stamp , t , & initial_time )"		76432	0					
ANR	76844	Callee	get_date		76432	0					
ANR	76845	Identifier	get_date		76432	0					
ANR	76846	ArgumentList	& stamp		76432	1					
ANR	76847	Argument	& stamp		76432	0					
ANR	76848	UnaryOperationExpression	& stamp		76432	0					
ANR	76849	UnaryOperator	&		76432	0					
ANR	76850	Identifier	stamp		76432	1					
ANR	76851	Argument	t		76432	1					
ANR	76852	Identifier	t		76432	0					
ANR	76853	Argument	& initial_time		76432	2					
ANR	76854	UnaryOperationExpression	& initial_time		76432	0					
ANR	76855	UnaryOperator	&		76432	0					
ANR	76856	Identifier	initial_time		76432	1					
ANR	76857	AndExpression	"timespec_cmp ( stamp , lower ) > 0 && timespec_cmp ( stamp , upper ) < 0"		76432	1		&&			
ANR	76858	RelationalExpression	"timespec_cmp ( stamp , lower ) > 0"		76432	0		>			
ANR	76859	CallExpression	"timespec_cmp ( stamp , lower )"		76432	0					
ANR	76860	Callee	timespec_cmp		76432	0					
ANR	76861	Identifier	timespec_cmp		76432	0					
ANR	76862	ArgumentList	stamp		76432	1					
ANR	76863	Argument	stamp		76432	0					
ANR	76864	Identifier	stamp		76432	0					
ANR	76865	Argument	lower		76432	1					
ANR	76866	Identifier	lower		76432	0					
ANR	76867	PrimaryExpression	0		76432	1					
ANR	76868	RelationalExpression	"timespec_cmp ( stamp , upper ) < 0"		76432	1		<			
ANR	76869	CallExpression	"timespec_cmp ( stamp , upper )"		76432	0					
ANR	76870	Callee	timespec_cmp		76432	0					
ANR	76871	Identifier	timespec_cmp		76432	0					
ANR	76872	ArgumentList	stamp		76432	1					
ANR	76873	Argument	stamp		76432	0					
ANR	76874	Identifier	stamp		76432	0					
ANR	76875	Argument	upper		76432	1					
ANR	76876	Identifier	upper		76432	0					
ANR	76877	PrimaryExpression	0		76432	1					
ANR	76878	CompoundStatement		98:40:2242:2242	76432	1					
ANR	76879	ExpressionStatement	stamp . tv_sec = 0	1548:8:36601:36617	76432	0	True				
ANR	76880	AssignmentExpression	stamp . tv_sec = 0		76432	0		=			
ANR	76881	MemberAccess	stamp . tv_sec		76432	0					
ANR	76882	Identifier	stamp		76432	0					
ANR	76883	Identifier	tv_sec		76432	1					
ANR	76884	PrimaryExpression	0		76432	1					
ANR	76885	ExpressionStatement	stamp . tv_nsec = 0	1549:8:36627:36644	76432	1	True				
ANR	76886	AssignmentExpression	stamp . tv_nsec = 0		76432	0		=			
ANR	76887	MemberAccess	stamp . tv_nsec		76432	0					
ANR	76888	Identifier	stamp		76432	0					
ANR	76889	Identifier	tv_nsec		76432	1					
ANR	76890	PrimaryExpression	0		76432	1					
ANR	76891	ExpressionStatement	free ( * pname )	1554:4:36670:36683	76432	13	True				
ANR	76892	CallExpression	free ( * pname )		76432	0					
ANR	76893	Callee	free		76432	0					
ANR	76894	Identifier	free		76432	0					
ANR	76895	ArgumentList	* pname		76432	1					
ANR	76896	Argument	* pname		76432	0					
ANR	76897	UnaryOperationExpression	* pname		76432	0					
ANR	76898	UnaryOperator	*		76432	0					
ANR	76899	Identifier	pname		76432	1					
ANR	76900	ExpressionStatement	* pname = name	1555:4:36689:36702	76432	14	True				
ANR	76901	AssignmentExpression	* pname = name		76432	0		=			
ANR	76902	UnaryOperationExpression	* pname		76432	0					
ANR	76903	UnaryOperator	*		76432	0					
ANR	76904	Identifier	pname		76432	1					
ANR	76905	Identifier	name		76432	1					
ANR	76906	IfStatement	if ( ptimestr )		76432	15					
ANR	76907	Condition	ptimestr	1556:8:36712:36719	76432	0	True				
ANR	76908	Identifier	ptimestr		76432	0					
ANR	76909	CompoundStatement		108:6:2379:2379	76432	1					
ANR	76910	ExpressionStatement	free ( * ptimestr )	1558:1:36731:36747	76432	0	True				
ANR	76911	CallExpression	free ( * ptimestr )		76432	0					
ANR	76912	Callee	free		76432	0					
ANR	76913	Identifier	free		76432	0					
ANR	76914	ArgumentList	* ptimestr		76432	1					
ANR	76915	Argument	* ptimestr		76432	0					
ANR	76916	UnaryOperationExpression	* ptimestr		76432	0					
ANR	76917	UnaryOperator	*		76432	0					
ANR	76918	Identifier	ptimestr		76432	1					
ANR	76919	ExpressionStatement	* ptimestr = timestr	1559:1:36750:36769	76432	1	True				
ANR	76920	AssignmentExpression	* ptimestr = timestr		76432	0		=			
ANR	76921	UnaryOperationExpression	* ptimestr		76432	0					
ANR	76922	UnaryOperator	*		76432	0					
ANR	76923	Identifier	ptimestr		76432	1					
ANR	76924	Identifier	timestr		76432	1					
ANR	76925	IfStatement	if ( pstamp )		76432	16					
ANR	76926	Condition	pstamp	1561:8:36787:36792	76432	0	True				
ANR	76927	Identifier	pstamp		76432	0					
ANR	76928	ExpressionStatement	* pstamp = stamp	1562:6:36801:36816	76432	1	True				
ANR	76929	AssignmentExpression	* pstamp = stamp		76432	0		=			
ANR	76930	UnaryOperationExpression	* pstamp		76432	0					
ANR	76931	UnaryOperator	*		76432	0					
ANR	76932	Identifier	pstamp		76432	1					
ANR	76933	Identifier	stamp		76432	1					
ANR	76934	ReturnType	void		76432	1					
ANR	76935	Identifier	fetchname		76432	2					
ANR	76936	ParameterList	"char const * at , int strip_leading , char * * pname , char * * ptimestr , struct timespec * pstamp"		76432	3					
ANR	76937	Parameter	char const * at	1448:11:34253:34266	76432	0	True				
ANR	76938	ParameterType	char const *		76432	0					
ANR	76939	Identifier	at		76432	1					
ANR	76940	Parameter	int strip_leading	1448:27:34269:34285	76432	1	True				
ANR	76941	ParameterType	int		76432	0					
ANR	76942	Identifier	strip_leading		76432	1					
ANR	76943	Parameter	char * * pname	1448:46:34288:34299	76432	2	True				
ANR	76944	ParameterType	char * *		76432	0					
ANR	76945	Identifier	pname		76432	1					
ANR	76946	Parameter	char * * ptimestr	1449:4:34306:34320	76432	3	True				
ANR	76947	ParameterType	char * *		76432	0					
ANR	76948	Identifier	ptimestr		76432	1					
ANR	76949	Parameter	struct timespec * pstamp	1449:21:34323:34345	76432	4	True				
ANR	76950	ParameterType	struct timespec *		76432	0					
ANR	76951	Identifier	pstamp		76432	1					
ANR	76952	CFGEntryNode	ENTRY		76432		True				
ANR	76953	CFGExitNode	EXIT		76432		True				
ANR	76954	Symbol	quotearg		76432						
ANR	76955	Symbol	& initial_time		76432						
ANR	76956	Symbol	parse_c_string		76432						
ANR	76957	Symbol	upper		76432						
ANR	76958	Symbol	* ptimestr		76432						
ANR	76959	Symbol	stamp		76432						
ANR	76960	Symbol	strchr		76432						
ANR	76961	Symbol	* ( u - 1 )		76432						
ANR	76962	Symbol	pstamp -> tv_sec		76432						
ANR	76963	Symbol	strip_leading_slashes		76432						
ANR	76964	Symbol	strip_leading		76432						
ANR	76965	Symbol	strlen		76432						
ANR	76966	Symbol	set_utc		76432						
ANR	76967	Symbol	stamp . tv_nsec		76432						
ANR	76968	Symbol	set_time		76432						
ANR	76969	Symbol	pstamp -> tv_nsec		76432						
ANR	76970	Symbol	& stamp		76432						
ANR	76971	Symbol	strcmp		76432						
ANR	76972	Symbol	NULL		76432						
ANR	76973	Symbol	debug		76432						
ANR	76974	Symbol	timespec_cmp		76432						
ANR	76975	Symbol	pname		76432						
ANR	76976	Symbol	ptimestr		76432						
ANR	76977	Symbol	lower		76432						
ANR	76978	Symbol	timestr		76432						
ANR	76979	Symbol	* pstamp		76432						
ANR	76980	Symbol	xmemdup0		76432						
ANR	76981	Symbol	at		76432						
ANR	76982	Symbol	t		76432						
ANR	76983	Symbol	u		76432						
ANR	76984	Symbol	name		76432						
ANR	76985	Symbol	stamp . tv_sec		76432						
ANR	76986	Symbol	pstamp		76432						
ANR	76987	Symbol	* at		76432						
ANR	76988	Symbol	& t		76432						
ANR	76989	Symbol	* pname		76432						
ANR	76990	Symbol	ISSPACE		76432						
ANR	76991	Symbol	get_date		76432						
ANR	76992	Symbol	* t		76432						
ANR	76993	Symbol	* u		76432						
ANR	76994	Function	parse_name	1565:0:36821:37357							
ANR	76995	FunctionDef	"parse_name (char const * s , int strip_leading , char const * * endp)"		76994	0					
ANR	76996	CompoundStatement		1567:0:36893:37357	76994	0					
ANR	76997	IdentifierDeclStatement	char * ret ;	1568:2:36897:36906	76994	0	True				
ANR	76998	IdentifierDecl	* ret		76994	0					
ANR	76999	IdentifierDeclType	char *		76994	0					
ANR	77000	Identifier	ret		76994	1					
ANR	77001	WhileStatement	while ( ISSPACE ( ( unsigned char ) * s ) )		76994	1					
ANR	77002	Condition	ISSPACE ( ( unsigned char ) * s )	1570:9:36918:36945	76994	0	True				
ANR	77003	CallExpression	ISSPACE ( ( unsigned char ) * s )		76994	0					
ANR	77004	Callee	ISSPACE		76994	0					
ANR	77005	Identifier	ISSPACE		76994	0					
ANR	77006	ArgumentList	( unsigned char ) * s		76994	1					
ANR	77007	Argument	( unsigned char ) * s		76994	0					
ANR	77008	CastExpression	( unsigned char ) * s		76994	0					
ANR	77009	CastTarget	unsigned char		76994	0					
ANR	77010	UnaryOperationExpression	* s		76994	1					
ANR	77011	UnaryOperator	*		76994	0					
ANR	77012	Identifier	s		76994	1					
ANR	77013	ExpressionStatement	s ++	1571:4:36952:36955	76994	1	True				
ANR	77014	PostIncDecOperationExpression	s ++		76994	0					
ANR	77015	Identifier	s		76994	0					
ANR	77016	IncDec	++		76994	1					
ANR	77017	IfStatement	"if ( * s == '""' )"		76994	2					
ANR	77018	Condition	"* s == '""'"	1572:6:36963:36971	76994	0	True				
ANR	77019	EqualityExpression	"* s == '""'"		76994	0		==			
ANR	77020	UnaryOperationExpression	* s		76994	0					
ANR	77021	UnaryOperator	*		76994	0					
ANR	77022	Identifier	s		76994	1					
ANR	77023	PrimaryExpression	"'""'"		76994	1					
ANR	77024	CompoundStatement		7:4:84:84	76994	1					
ANR	77025	ExpressionStatement	"ret = parse_c_string ( s , endp )"	1574:6:36986:37016	76994	0	True				
ANR	77026	AssignmentExpression	"ret = parse_c_string ( s , endp )"		76994	0		=			
ANR	77027	Identifier	ret		76994	0					
ANR	77028	CallExpression	"parse_c_string ( s , endp )"		76994	1					
ANR	77029	Callee	parse_c_string		76994	0					
ANR	77030	Identifier	parse_c_string		76994	0					
ANR	77031	ArgumentList	s		76994	1					
ANR	77032	Argument	s		76994	0					
ANR	77033	Identifier	s		76994	0					
ANR	77034	Argument	endp		76994	1					
ANR	77035	Identifier	endp		76994	0					
ANR	77036	IfStatement	if ( ! ret )		76994	1					
ANR	77037	Condition	! ret	1575:10:37028:37031	76994	0	True				
ANR	77038	UnaryOperationExpression	! ret		76994	0					
ANR	77039	UnaryOperator	!		76994	0					
ANR	77040	Identifier	ret		76994	1					
ANR	77041	ReturnStatement	return NULL ;	1576:8:37042:37053	76994	1	True				
ANR	77042	Identifier	NULL		76994	0					
ANR	77043	ElseStatement	else		76994	0					
ANR	77044	CompoundStatement		14:6:186:199	76994	0					
ANR	77045	IdentifierDeclStatement	char const * t ;	1580:6:37080:37093	76994	0	True				
ANR	77046	IdentifierDecl	* t		76994	0					
ANR	77047	IdentifierDeclType	char const *		76994	0					
ANR	77048	Identifier	t		76994	1					
ANR	77049	ForStatement	for ( t = s ; * t && ! ISSPACE ( ( unsigned char ) * t ) ; t ++ )		76994	1					
ANR	77050	ForInit	t = s ;	1582:11:37107:37112	76994	0	True				
ANR	77051	AssignmentExpression	t = s		76994	0		=			
ANR	77052	Identifier	t		76994	0					
ANR	77053	Identifier	s		76994	1					
ANR	77054	Condition	* t && ! ISSPACE ( ( unsigned char ) * t )	1582:18:37114:37149	76994	1	True				
ANR	77055	AndExpression	* t && ! ISSPACE ( ( unsigned char ) * t )		76994	0		&&			
ANR	77056	UnaryOperationExpression	* t		76994	0					
ANR	77057	UnaryOperator	*		76994	0					
ANR	77058	Identifier	t		76994	1					
ANR	77059	UnaryOperationExpression	! ISSPACE ( ( unsigned char ) * t )		76994	1					
ANR	77060	UnaryOperator	!		76994	0					
ANR	77061	CallExpression	ISSPACE ( ( unsigned char ) * t )		76994	1					
ANR	77062	Callee	ISSPACE		76994	0					
ANR	77063	Identifier	ISSPACE		76994	0					
ANR	77064	ArgumentList	( unsigned char ) * t		76994	1					
ANR	77065	Argument	( unsigned char ) * t		76994	0					
ANR	77066	CastExpression	( unsigned char ) * t		76994	0					
ANR	77067	CastTarget	unsigned char		76994	0					
ANR	77068	UnaryOperationExpression	* t		76994	1					
ANR	77069	UnaryOperator	*		76994	0					
ANR	77070	Identifier	t		76994	1					
ANR	77071	PostIncDecOperationExpression	t ++	1582:56:37152:37154	76994	2	True				
ANR	77072	Identifier	t		76994	0					
ANR	77073	IncDec	++		76994	1					
ANR	77074	ExpressionStatement		1583:17:37174:37174	76994	3	True				
ANR	77075	ExpressionStatement	"ret = xmemdup0 ( s , t - s )"	1584:6:37182:37207	76994	2	True				
ANR	77076	AssignmentExpression	"ret = xmemdup0 ( s , t - s )"		76994	0		=			
ANR	77077	Identifier	ret		76994	0					
ANR	77078	CallExpression	"xmemdup0 ( s , t - s )"		76994	1					
ANR	77079	Callee	xmemdup0		76994	0					
ANR	77080	Identifier	xmemdup0		76994	0					
ANR	77081	ArgumentList	s		76994	1					
ANR	77082	Argument	s		76994	0					
ANR	77083	Identifier	s		76994	0					
ANR	77084	Argument	t - s		76994	1					
ANR	77085	AdditiveExpression	t - s		76994	0		-			
ANR	77086	Identifier	t		76994	0					
ANR	77087	Identifier	s		76994	1					
ANR	77088	IfStatement	if ( endp )		76994	3					
ANR	77089	Condition	endp	1585:10:37219:37222	76994	0	True				
ANR	77090	Identifier	endp		76994	0					
ANR	77091	ExpressionStatement	* endp = t	1586:1:37226:37235	76994	1	True				
ANR	77092	AssignmentExpression	* endp = t		76994	0		=			
ANR	77093	UnaryOperationExpression	* endp		76994	0					
ANR	77094	UnaryOperator	*		76994	0					
ANR	77095	Identifier	endp		76994	1					
ANR	77096	Identifier	t		76994	1					
ANR	77097	IfStatement	"if ( ! strip_leading_slashes ( ret , strip_leading ) )"		76994	3					
ANR	77098	Condition	"! strip_leading_slashes ( ret , strip_leading )"	1588:6:37249:37292	76994	0	True				
ANR	77099	UnaryOperationExpression	"! strip_leading_slashes ( ret , strip_leading )"		76994	0					
ANR	77100	UnaryOperator	!		76994	0					
ANR	77101	CallExpression	"strip_leading_slashes ( ret , strip_leading )"		76994	1					
ANR	77102	Callee	strip_leading_slashes		76994	0					
ANR	77103	Identifier	strip_leading_slashes		76994	0					
ANR	77104	ArgumentList	ret		76994	1					
ANR	77105	Argument	ret		76994	0					
ANR	77106	Identifier	ret		76994	0					
ANR	77107	Argument	strip_leading		76994	1					
ANR	77108	Identifier	strip_leading		76994	0					
ANR	77109	CompoundStatement		23:4:405:405	76994	1					
ANR	77110	ExpressionStatement	free ( ret )	1590:6:37307:37317	76994	0	True				
ANR	77111	CallExpression	free ( ret )		76994	0					
ANR	77112	Callee	free		76994	0					
ANR	77113	Identifier	free		76994	0					
ANR	77114	ArgumentList	ret		76994	1					
ANR	77115	Argument	ret		76994	0					
ANR	77116	Identifier	ret		76994	0					
ANR	77117	ExpressionStatement	ret = NULL	1591:6:37325:37335	76994	1	True				
ANR	77118	AssignmentExpression	ret = NULL		76994	0		=			
ANR	77119	Identifier	ret		76994	0					
ANR	77120	Identifier	NULL		76994	1					
ANR	77121	ReturnStatement	return ret ;	1593:2:37345:37355	76994	4	True				
ANR	77122	Identifier	ret		76994	0					
ANR	77123	ReturnType	char *		76994	1					
ANR	77124	Identifier	parse_name		76994	2					
ANR	77125	ParameterList	"char const * s , int strip_leading , char const * * endp"		76994	3					
ANR	77126	Parameter	char const * s	1566:12:36840:36852	76994	0	True				
ANR	77127	ParameterType	char const *		76994	0					
ANR	77128	Identifier	s		76994	1					
ANR	77129	Parameter	int strip_leading	1566:27:36855:36871	76994	1	True				
ANR	77130	ParameterType	int		76994	0					
ANR	77131	Identifier	strip_leading		76994	1					
ANR	77132	Parameter	char const * * endp	1566:46:36874:36890	76994	2	True				
ANR	77133	ParameterType	char const * *		76994	0					
ANR	77134	Identifier	endp		76994	1					
ANR	77135	CFGEntryNode	ENTRY		76994		True				
ANR	77136	CFGExitNode	EXIT		76994		True				
ANR	77137	Symbol	ret		76994						
ANR	77138	Symbol	NULL		76994						
ANR	77139	Symbol	parse_c_string		76994						
ANR	77140	Symbol	strip_leading_slashes		76994						
ANR	77141	Symbol	strip_leading		76994						
ANR	77142	Symbol	xmemdup0		76994						
ANR	77143	Symbol	s		76994						
ANR	77144	Symbol	t		76994						
ANR	77145	Symbol	* endp		76994						
ANR	77146	Symbol	endp		76994						
ANR	77147	Symbol	ISSPACE		76994						
ANR	77148	Symbol	* s		76994						
ANR	77149	Symbol	* t		76994						
ANR	77150	Function	Fseek	1596:0:37360:37491							
ANR	77151	FunctionDef	"Fseek (FILE * stream , file_offset offset , int ptrname)"		77150	0					
ANR	77152	CompoundStatement		1598:0:37419:37491	77150	0					
ANR	77153	IfStatement	"if ( file_seek ( stream , offset , ptrname ) != 0 )"		77150	0					
ANR	77154	Condition	"file_seek ( stream , offset , ptrname ) != 0"	1599:6:37427:37466	77150	0	True				
ANR	77155	EqualityExpression	"file_seek ( stream , offset , ptrname ) != 0"		77150	0		!=			
ANR	77156	CallExpression	"file_seek ( stream , offset , ptrname )"		77150	0					
ANR	77157	Callee	file_seek		77150	0					
ANR	77158	Identifier	file_seek		77150	0					
ANR	77159	ArgumentList	stream		77150	1					
ANR	77160	Argument	stream		77150	0					
ANR	77161	Identifier	stream		77150	0					
ANR	77162	Argument	offset		77150	1					
ANR	77163	Identifier	offset		77150	0					
ANR	77164	Argument	ptrname		77150	2					
ANR	77165	Identifier	ptrname		77150	0					
ANR	77166	PrimaryExpression	0		77150	1					
ANR	77167	ExpressionStatement	"pfatal ( ""fseek"" )"	1600:4:37473:37489	77150	1	True				
ANR	77168	CallExpression	"pfatal ( ""fseek"" )"		77150	0					
ANR	77169	Callee	pfatal		77150	0					
ANR	77170	Identifier	pfatal		77150	0					
ANR	77171	ArgumentList	"""fseek"""		77150	1					
ANR	77172	Argument	"""fseek"""		77150	0					
ANR	77173	PrimaryExpression	"""fseek"""		77150	0					
ANR	77174	ReturnType	void		77150	1					
ANR	77175	Identifier	Fseek		77150	2					
ANR	77176	ParameterList	"FILE * stream , file_offset offset , int ptrname"		77150	3					
ANR	77177	Parameter	FILE * stream	1597:7:37372:37383	77150	0	True				
ANR	77178	ParameterType	FILE *		77150	0					
ANR	77179	Identifier	stream		77150	1					
ANR	77180	Parameter	file_offset offset	1597:21:37386:37403	77150	1	True				
ANR	77181	ParameterType	file_offset		77150	0					
ANR	77182	Identifier	offset		77150	1					
ANR	77183	Parameter	int ptrname	1597:41:37406:37416	77150	2	True				
ANR	77184	ParameterType	int		77150	0					
ANR	77185	Identifier	ptrname		77150	1					
ANR	77186	CFGEntryNode	ENTRY		77150		True				
ANR	77187	CFGExitNode	EXIT		77150		True				
ANR	77188	Symbol	file_seek		77150						
ANR	77189	Symbol	offset		77150						
ANR	77190	Symbol	stream		77150						
ANR	77191	Symbol	ptrname		77150						
ANR	77192	ClassDef	try_safe_open_args	1607:0:37539:37603							
ANR	77193	DeclStmt									
ANR	77194	Decl							int	int	flags
ANR	77195	DeclStmt									
ANR	77196	Decl							mode_t	mode_t	mode
ANR	77197	DeclStmt									
ANR	77198	Decl							struct try_safe_open_args	struct try_safe_open_args *	args
ANR	77199	DeclStmt									
ANR	77200	Decl							int	int	try_makedirs_errno
ANR	77201	DeclStmt									
ANR	77202	Decl							int	int	fd
ANR	77203	Function	make_tempfile	1630:0:37985:39025							
ANR	77204	FunctionDef	"make_tempfile (char const * * name , char letter , char const * real_name , int flags , mode_t mode)"		77203	0					
ANR	77205	CompoundStatement		1633:0:38091:39025	77203	0					
ANR	77206	Statement	char	1634:2:38095:38098	77203	0	True				
ANR	77207	Statement	*	1634:7:38100:38100	77203	1	True				
ANR	77208	Statement	template	1634:8:38101:38108	77203	2	True				
ANR	77209	ExpressionStatement		1634:16:38109:38109	77203	3	True				
ANR	77210	Statement	struct	1635:2:38113:38118	77203	4	True				
ANR	77211	Statement	try_safe_open_args	1635:9:38120:38137	77203	5	True				
ANR	77212	Statement	args	1635:28:38139:38142	77203	6	True				
ANR	77213	Statement	=	1635:33:38144:38144	77203	7	True				
ANR	77214	CompoundStatement		3:35:54:54	77203	8					
ANR	77215	Statement	.	1636:4:38152:38152	77203	0	True				
ANR	77216	Statement	flags	1636:5:38153:38157	77203	1	True				
ANR	77217	Statement	=	1636:11:38159:38159	77203	2	True				
ANR	77218	Statement	flags	1636:13:38161:38165	77203	3	True				
ANR	77219	Statement	","	1636:18:38166:38166	77203	4	True				
ANR	77220	Statement	.	1637:4:38172:38172	77203	5	True				
ANR	77221	Statement	mode	1637:5:38173:38176	77203	6	True				
ANR	77222	Statement	=	1637:10:38178:38178	77203	7	True				
ANR	77223	Statement	mode	1637:12:38180:38183	77203	8	True				
ANR	77224	Statement	","	1637:16:38184:38184	77203	9	True				
ANR	77225	ExpressionStatement		1638:3:38189:38189	77203	9	True				
ANR	77226	IdentifierDeclStatement	int fd ;	1639:2:38193:38199	77203	10	True				
ANR	77227	IdentifierDecl	fd		77203	0					
ANR	77228	IdentifierDeclType	int		77203	0					
ANR	77229	Identifier	fd		77203	1					
ANR	77230	IfStatement	if ( real_name && ! dry_run )		77203	11					
ANR	77231	Condition	real_name && ! dry_run	1641:6:38208:38229	77203	0	True				
ANR	77232	AndExpression	real_name && ! dry_run		77203	0		&&			
ANR	77233	Identifier	real_name		77203	0					
ANR	77234	UnaryOperationExpression	! dry_run		77203	1					
ANR	77235	UnaryOperator	!		77203	0					
ANR	77236	Identifier	dry_run		77203	1					
ANR	77237	CompoundStatement		11:6:152:176	77203	1					
ANR	77238	IdentifierDeclStatement	"char * dirname , * basename ;"	1643:6:38244:38268	77203	0	True				
ANR	77239	IdentifierDecl	* dirname		77203	0					
ANR	77240	IdentifierDeclType	char *		77203	0					
ANR	77241	Identifier	dirname		77203	1					
ANR	77242	IdentifierDecl	* basename		77203	1					
ANR	77243	IdentifierDeclType	char *		77203	0					
ANR	77244	Identifier	basename		77203	1					
ANR	77245	ExpressionStatement	dirname = dir_name ( real_name )	1645:6:38277:38307	77203	1	True				
ANR	77246	AssignmentExpression	dirname = dir_name ( real_name )		77203	0		=			
ANR	77247	Identifier	dirname		77203	0					
ANR	77248	CallExpression	dir_name ( real_name )		77203	1					
ANR	77249	Callee	dir_name		77203	0					
ANR	77250	Identifier	dir_name		77203	0					
ANR	77251	ArgumentList	real_name		77203	1					
ANR	77252	Argument	real_name		77203	0					
ANR	77253	Identifier	real_name		77203	0					
ANR	77254	ExpressionStatement	basename = base_name ( real_name )	1646:6:38315:38347	77203	2	True				
ANR	77255	AssignmentExpression	basename = base_name ( real_name )		77203	0		=			
ANR	77256	Identifier	basename		77203	0					
ANR	77257	CallExpression	base_name ( real_name )		77203	1					
ANR	77258	Callee	base_name		77203	0					
ANR	77259	Identifier	base_name		77203	0					
ANR	77260	ArgumentList	real_name		77203	1					
ANR	77261	Argument	real_name		77203	0					
ANR	77262	Identifier	real_name		77203	0					
ANR	77263	Statement	template	1648:6:38356:38363	77203	3	True				
ANR	77264	Statement	=	1648:15:38365:38365	77203	4	True				
ANR	77265	ExpressionStatement	xmalloc ( strlen ( dirname ) + 1 + strlen ( basename ) + 9 )	1648:17:38367:38421	77203	5	True				
ANR	77266	CallExpression	xmalloc ( strlen ( dirname ) + 1 + strlen ( basename ) + 9 )		77203	0					
ANR	77267	Callee	xmalloc		77203	0					
ANR	77268	Identifier	xmalloc		77203	0					
ANR	77269	ArgumentList	strlen ( dirname ) + 1 + strlen ( basename ) + 9		77203	1					
ANR	77270	Argument	strlen ( dirname ) + 1 + strlen ( basename ) + 9		77203	0					
ANR	77271	AdditiveExpression	strlen ( dirname ) + 1 + strlen ( basename ) + 9		77203	0		+			
ANR	77272	CallExpression	strlen ( dirname )		77203	0					
ANR	77273	Callee	strlen		77203	0					
ANR	77274	Identifier	strlen		77203	0					
ANR	77275	ArgumentList	dirname		77203	1					
ANR	77276	Argument	dirname		77203	0					
ANR	77277	Identifier	dirname		77203	0					
ANR	77278	AdditiveExpression	1 + strlen ( basename ) + 9		77203	1		+			
ANR	77279	PrimaryExpression	1		77203	0					
ANR	77280	AdditiveExpression	strlen ( basename ) + 9		77203	1		+			
ANR	77281	CallExpression	strlen ( basename )		77203	0					
ANR	77282	Callee	strlen		77203	0					
ANR	77283	Identifier	strlen		77203	0					
ANR	77284	ArgumentList	basename		77203	1					
ANR	77285	Argument	basename		77203	0					
ANR	77286	Identifier	basename		77203	0					
ANR	77287	PrimaryExpression	9		77203	1					
ANR	77288	Statement	sprintf	1649:6:38429:38435	77203	6	True				
ANR	77289	Statement	(	1649:14:38437:38437	77203	7	True				
ANR	77290	Statement	template	1649:15:38438:38445	77203	8	True				
ANR	77291	Statement	","	1649:23:38446:38446	77203	9	True				
ANR	77292	Statement	"""%s/%s.%cXXXXXX"""	1649:25:38448:38463	77203	10	True				
ANR	77293	Statement	","	1649:41:38464:38464	77203	11	True				
ANR	77294	Statement	dirname	1649:43:38466:38472	77203	12	True				
ANR	77295	Statement	","	1649:50:38473:38473	77203	13	True				
ANR	77296	Statement	basename	1649:52:38475:38482	77203	14	True				
ANR	77297	Statement	","	1649:60:38483:38483	77203	15	True				
ANR	77298	Statement	letter	1649:62:38485:38490	77203	16	True				
ANR	77299	Statement	)	1649:68:38491:38491	77203	17	True				
ANR	77300	ExpressionStatement		1649:69:38492:38492	77203	18	True				
ANR	77301	ExpressionStatement	free ( dirname )	1650:6:38500:38514	77203	19	True				
ANR	77302	CallExpression	free ( dirname )		77203	0					
ANR	77303	Callee	free		77203	0					
ANR	77304	Identifier	free		77203	0					
ANR	77305	ArgumentList	dirname		77203	1					
ANR	77306	Argument	dirname		77203	0					
ANR	77307	Identifier	dirname		77203	0					
ANR	77308	ExpressionStatement	free ( basename )	1651:6:38522:38537	77203	20	True				
ANR	77309	CallExpression	free ( basename )		77203	0					
ANR	77310	Callee	free		77203	0					
ANR	77311	Identifier	free		77203	0					
ANR	77312	ArgumentList	basename		77203	1					
ANR	77313	Argument	basename		77203	0					
ANR	77314	Identifier	basename		77203	0					
ANR	77315	ElseStatement	else		77203	0					
ANR	77316	CompoundStatement		23:6:472:490	77203	0					
ANR	77317	IdentifierDeclStatement	char const * tmpdir ;	1655:6:38564:38582	77203	0	True				
ANR	77318	IdentifierDecl	* tmpdir		77203	0					
ANR	77319	IdentifierDeclType	char const *		77203	0					
ANR	77320	Identifier	tmpdir		77203	1					
ANR	77321	ExpressionStatement	"tmpdir = getenv ( ""TMPDIR"" )"	1657:6:38591:38617	77203	1	True				
ANR	77322	AssignmentExpression	"tmpdir = getenv ( ""TMPDIR"" )"		77203	0		=			
ANR	77323	Identifier	tmpdir		77203	0					
ANR	77324	CallExpression	"getenv ( ""TMPDIR"" )"		77203	1					
ANR	77325	Callee	getenv		77203	0					
ANR	77326	Identifier	getenv		77203	0					
ANR	77327	ArgumentList	"""TMPDIR"""		77203	1					
ANR	77328	Argument	"""TMPDIR"""		77203	0					
ANR	77329	PrimaryExpression	"""TMPDIR"""		77203	0					
ANR	77330	IfStatement	if ( ! tmpdir )		77203	2					
ANR	77331	Condition	! tmpdir	1658:10:38651:38658	77203	0	True				
ANR	77332	UnaryOperationExpression	! tmpdir		77203	0					
ANR	77333	UnaryOperator	!		77203	0					
ANR	77334	Identifier	tmpdir		77203	1					
ANR	77335	ExpressionStatement	"tmpdir = getenv ( ""TMP"" )"	1659:1:38662:38685	77203	1	True				
ANR	77336	AssignmentExpression	"tmpdir = getenv ( ""TMP"" )"		77203	0		=			
ANR	77337	Identifier	tmpdir		77203	0					
ANR	77338	CallExpression	"getenv ( ""TMP"" )"		77203	1					
ANR	77339	Callee	getenv		77203	0					
ANR	77340	Identifier	getenv		77203	0					
ANR	77341	ArgumentList	"""TMP"""		77203	1					
ANR	77342	Argument	"""TMP"""		77203	0					
ANR	77343	PrimaryExpression	"""TMP"""		77203	0					
ANR	77344	IfStatement	if ( ! tmpdir )		77203	3					
ANR	77345	Condition	! tmpdir	1660:10:38718:38725	77203	0	True				
ANR	77346	UnaryOperationExpression	! tmpdir		77203	0					
ANR	77347	UnaryOperator	!		77203	0					
ANR	77348	Identifier	tmpdir		77203	1					
ANR	77349	ExpressionStatement	"tmpdir = getenv ( ""TEMP"" )"	1661:1:38729:38753	77203	1	True				
ANR	77350	AssignmentExpression	"tmpdir = getenv ( ""TEMP"" )"		77203	0		=			
ANR	77351	Identifier	tmpdir		77203	0					
ANR	77352	CallExpression	"getenv ( ""TEMP"" )"		77203	1					
ANR	77353	Callee	getenv		77203	0					
ANR	77354	Identifier	getenv		77203	0					
ANR	77355	ArgumentList	"""TEMP"""		77203	1					
ANR	77356	Argument	"""TEMP"""		77203	0					
ANR	77357	PrimaryExpression	"""TEMP"""		77203	0					
ANR	77358	IfStatement	if ( ! tmpdir )		77203	4					
ANR	77359	Condition	! tmpdir	1662:10:38794:38801	77203	0	True				
ANR	77360	UnaryOperationExpression	! tmpdir		77203	0					
ANR	77361	UnaryOperator	!		77203	0					
ANR	77362	Identifier	tmpdir		77203	1					
ANR	77363	ExpressionStatement	tmpdir = TMPDIR	1663:1:38805:38820	77203	1	True				
ANR	77364	AssignmentExpression	tmpdir = TMPDIR		77203	0		=			
ANR	77365	Identifier	tmpdir		77203	0					
ANR	77366	Identifier	TMPDIR		77203	1					
ANR	77367	Statement	template	1665:6:38829:38836	77203	5	True				
ANR	77368	Statement	=	1665:15:38838:38838	77203	6	True				
ANR	77369	ExpressionStatement	xmalloc ( strlen ( tmpdir ) + 10 )	1665:17:38840:38870	77203	7	True				
ANR	77370	CallExpression	xmalloc ( strlen ( tmpdir ) + 10 )		77203	0					
ANR	77371	Callee	xmalloc		77203	0					
ANR	77372	Identifier	xmalloc		77203	0					
ANR	77373	ArgumentList	strlen ( tmpdir ) + 10		77203	1					
ANR	77374	Argument	strlen ( tmpdir ) + 10		77203	0					
ANR	77375	AdditiveExpression	strlen ( tmpdir ) + 10		77203	0		+			
ANR	77376	CallExpression	strlen ( tmpdir )		77203	0					
ANR	77377	Callee	strlen		77203	0					
ANR	77378	Identifier	strlen		77203	0					
ANR	77379	ArgumentList	tmpdir		77203	1					
ANR	77380	Argument	tmpdir		77203	0					
ANR	77381	Identifier	tmpdir		77203	0					
ANR	77382	PrimaryExpression	10		77203	1					
ANR	77383	Statement	sprintf	1666:6:38878:38884	77203	8	True				
ANR	77384	Statement	(	1666:14:38886:38886	77203	9	True				
ANR	77385	Statement	template	1666:15:38887:38894	77203	10	True				
ANR	77386	Statement	","	1666:23:38895:38895	77203	11	True				
ANR	77387	Statement	"""%s/p%cXXXXXX"""	1666:25:38897:38910	77203	12	True				
ANR	77388	Statement	","	1666:39:38911:38911	77203	13	True				
ANR	77389	Statement	tmpdir	1666:41:38913:38918	77203	14	True				
ANR	77390	Statement	","	1666:47:38919:38919	77203	15	True				
ANR	77391	Statement	letter	1666:49:38921:38926	77203	16	True				
ANR	77392	Statement	)	1666:55:38927:38927	77203	17	True				
ANR	77393	ExpressionStatement		1666:56:38928:38928	77203	18	True				
ANR	77394	Statement	fd	1668:2:38938:38939	77203	12	True				
ANR	77395	Statement	=	1668:5:38941:38941	77203	13	True				
ANR	77396	Statement	try_tempname	1668:7:38943:38954	77203	14	True				
ANR	77397	Statement	(	1668:19:38955:38955	77203	15	True				
ANR	77398	Statement	template	1668:20:38956:38963	77203	16	True				
ANR	77399	Statement	","	1668:28:38964:38964	77203	17	True				
ANR	77400	Statement	0	1668:30:38966:38966	77203	18	True				
ANR	77401	Statement	","	1668:31:38967:38967	77203	19	True				
ANR	77402	Statement	&	1668:33:38969:38969	77203	20	True				
ANR	77403	Statement	args	1668:34:38970:38973	77203	21	True				
ANR	77404	Statement	","	1668:38:38974:38974	77203	22	True				
ANR	77405	Statement	try_safe_open	1668:40:38976:38988	77203	23	True				
ANR	77406	Statement	)	1668:53:38989:38989	77203	24	True				
ANR	77407	ExpressionStatement		1668:54:38990:38990	77203	25	True				
ANR	77408	Statement	*	1669:2:38994:38994	77203	26	True				
ANR	77409	Statement	name	1669:3:38995:38998	77203	27	True				
ANR	77410	Statement	=	1669:8:39000:39000	77203	28	True				
ANR	77411	Statement	template	1669:10:39002:39009	77203	29	True				
ANR	77412	ExpressionStatement		1669:18:39010:39010	77203	30	True				
ANR	77413	ReturnStatement	return fd ;	1670:2:39014:39023	77203	31	True				
ANR	77414	Identifier	fd		77203	0					
ANR	77415	ReturnType	int		77203	1					
ANR	77416	Identifier	make_tempfile		77203	2					
ANR	77417	ParameterList	"char const * * name , char letter , char const * real_name , int flags , mode_t mode"		77203	3					
ANR	77418	Parameter	char const * * name	1631:15:38004:38020	77203	0	True				
ANR	77419	ParameterType	char const * *		77203	0					
ANR	77420	Identifier	name		77203	1					
ANR	77421	Parameter	char letter	1631:34:38023:38033	77203	1	True				
ANR	77422	ParameterType	char		77203	0					
ANR	77423	Identifier	letter		77203	1					
ANR	77424	Parameter	char const * real_name	1631:47:38036:38056	77203	2	True				
ANR	77425	ParameterType	char const *		77203	0					
ANR	77426	Identifier	real_name		77203	1					
ANR	77427	Parameter	int flags	1632:8:38067:38075	77203	3	True				
ANR	77428	ParameterType	int		77203	0					
ANR	77429	Identifier	flags		77203	1					
ANR	77430	Parameter	mode_t mode	1632:19:38078:38088	77203	4	True				
ANR	77431	ParameterType	mode_t		77203	0					
ANR	77432	Identifier	mode		77203	1					
ANR	77433	CFGEntryNode	ENTRY		77203		True				
ANR	77434	CFGExitNode	EXIT		77203		True				
ANR	77435	Symbol	base_name		77203						
ANR	77436	Symbol	dir_name		77203						
ANR	77437	Symbol	flags		77203						
ANR	77438	Symbol	real_name		77203						
ANR	77439	Symbol	dirname		77203						
ANR	77440	Symbol	TMPDIR		77203						
ANR	77441	Symbol	mode		77203						
ANR	77442	Symbol	tmpdir		77203						
ANR	77443	Symbol	strlen		77203						
ANR	77444	Symbol	basename		77203						
ANR	77445	Symbol	letter		77203						
ANR	77446	Symbol	name		77203						
ANR	77447	Symbol	dry_run		77203						
ANR	77448	Symbol	fd		77203						
ANR	77449	Symbol	getenv		77203						
ANR	77450	Function	stat_file	1673:0:39028:39225							
ANR	77451	FunctionDef	"stat_file (char const * filename , struct stat * st)"		77450	0					
ANR	77452	CompoundStatement		1674:0:39082:39225	77450	0					
ANR	77453	IdentifierDeclStatement	"int ( * xstat ) ( char const * , struct stat * ) = follow_symlinks ? safe_stat : safe_lstat ;"	1675:2:39086:39174	77450	0	True				
ANR	77454	IdentifierDecl	"( * xstat ) ( char const * , struct stat * ) = follow_symlinks ? safe_stat : safe_lstat"		77450	0					
ANR	77455	IdentifierDeclType	"int ( * ) ( char const * , struct stat * )"		77450	0					
ANR	77456	Identifier	xstat		77450	1					
ANR	77457	AssignmentExpression	"( * xstat ) ( char const * , struct stat * ) = follow_symlinks ? safe_stat : safe_lstat"		77450	2		=			
ANR	77458	Identifier	xstat		77450	0					
ANR	77459	ConditionalExpression	follow_symlinks ? safe_stat : safe_lstat		77450	1					
ANR	77460	Condition	follow_symlinks		77450	0					
ANR	77461	Identifier	follow_symlinks		77450	0					
ANR	77462	Identifier	safe_stat		77450	1					
ANR	77463	Identifier	safe_lstat		77450	2					
ANR	77464	ReturnStatement	"return xstat ( filename , st ) == 0 ? 0 : errno ;"	1678:2:39179:39223	77450	1	True				
ANR	77465	ConditionalExpression	"xstat ( filename , st ) == 0 ? 0 : errno"		77450	0					
ANR	77466	Condition	"xstat ( filename , st ) == 0"		77450	0					
ANR	77467	EqualityExpression	"xstat ( filename , st ) == 0"		77450	0		==			
ANR	77468	CallExpression	"xstat ( filename , st )"		77450	0					
ANR	77469	Callee	xstat		77450	0					
ANR	77470	Identifier	xstat		77450	0					
ANR	77471	ArgumentList	filename		77450	1					
ANR	77472	Argument	filename		77450	0					
ANR	77473	Identifier	filename		77450	0					
ANR	77474	Argument	st		77450	1					
ANR	77475	Identifier	st		77450	0					
ANR	77476	PrimaryExpression	0		77450	1					
ANR	77477	PrimaryExpression	0		77450	1					
ANR	77478	Identifier	errno		77450	2					
ANR	77479	ReturnType	int		77450	1					
ANR	77480	Identifier	stat_file		77450	2					
ANR	77481	ParameterList	"char const * filename , struct stat * st"		77450	3					
ANR	77482	Parameter	char const * filename	1673:15:39043:39062	77450	0	True				
ANR	77483	ParameterType	char const *		77450	0					
ANR	77484	Identifier	filename		77450	1					
ANR	77485	Parameter	struct stat * st	1673:37:39065:39079	77450	1	True				
ANR	77486	ParameterType	struct stat *		77450	0					
ANR	77487	Identifier	st		77450	1					
ANR	77488	CFGEntryNode	ENTRY		77450		True				
ANR	77489	CFGExitNode	EXIT		77450		True				
ANR	77490	Symbol	st		77450						
ANR	77491	Symbol	errno		77450						
ANR	77492	Symbol	filename		77450						
ANR	77493	Symbol	safe_stat		77450						
ANR	77494	Symbol	safe_lstat		77450						
ANR	77495	Symbol	xstat		77450						
ANR	77496	Symbol	follow_symlinks		77450						
ANR	77497	Function	filename_is_safe	1685:0:39457:39781							
ANR	77498	FunctionDef	filename_is_safe (char const * name)		77497	0					
ANR	77499	CompoundStatement		1687:0:39498:39781	77497	0					
ANR	77500	IfStatement	if ( IS_ABSOLUTE_FILE_NAME ( name ) )		77497	0					
ANR	77501	Condition	IS_ABSOLUTE_FILE_NAME ( name )	1688:6:39506:39533	77497	0	True				
ANR	77502	CallExpression	IS_ABSOLUTE_FILE_NAME ( name )		77497	0					
ANR	77503	Callee	IS_ABSOLUTE_FILE_NAME		77497	0					
ANR	77504	Identifier	IS_ABSOLUTE_FILE_NAME		77497	0					
ANR	77505	ArgumentList	name		77497	1					
ANR	77506	Argument	name		77497	0					
ANR	77507	Identifier	name		77497	0					
ANR	77508	ReturnStatement	return false ;	1689:4:39540:39552	77497	1	True				
ANR	77509	Identifier	false		77497	0					
ANR	77510	WhileStatement	while ( * name )		77497	1					
ANR	77511	Condition	* name	1690:9:39563:39567	77497	0	True				
ANR	77512	UnaryOperationExpression	* name		77497	0					
ANR	77513	UnaryOperator	*		77497	0					
ANR	77514	Identifier	name		77497	1					
ANR	77515	CompoundStatement		5:4:75:75	77497	1					
ANR	77516	IfStatement	if ( * name == '.' && * ++ name == '.' && ( ! * ++ name || ISSLASH ( * name ) ) )		77497	0					
ANR	77517	Condition	* name == '.' && * ++ name == '.' && ( ! * ++ name || ISSLASH ( * name ) )	1692:10:39586:39653	77497	0	True				
ANR	77518	AndExpression	* name == '.' && * ++ name == '.' && ( ! * ++ name || ISSLASH ( * name ) )		77497	0		&&			
ANR	77519	EqualityExpression	* name == '.'		77497	0		==			
ANR	77520	UnaryOperationExpression	* name		77497	0					
ANR	77521	UnaryOperator	*		77497	0					
ANR	77522	Identifier	name		77497	1					
ANR	77523	PrimaryExpression	'.'		77497	1					
ANR	77524	AndExpression	* ++ name == '.' && ( ! * ++ name || ISSLASH ( * name ) )		77497	1		&&			
ANR	77525	EqualityExpression	* ++ name == '.'		77497	0		==			
ANR	77526	UnaryOperationExpression	* ++ name		77497	0					
ANR	77527	UnaryOperator	*		77497	0					
ANR	77528	UnaryExpression	++ name		77497	1					
ANR	77529	IncDec	++		77497	0					
ANR	77530	Identifier	name		77497	1					
ANR	77531	PrimaryExpression	'.'		77497	1					
ANR	77532	OrExpression	! * ++ name || ISSLASH ( * name )		77497	1		||			
ANR	77533	UnaryOperationExpression	! * ++ name		77497	0					
ANR	77534	UnaryOperator	!		77497	0					
ANR	77535	UnaryOperationExpression	* ++ name		77497	1					
ANR	77536	UnaryOperator	*		77497	0					
ANR	77537	UnaryExpression	++ name		77497	1					
ANR	77538	IncDec	++		77497	0					
ANR	77539	Identifier	name		77497	1					
ANR	77540	CallExpression	ISSLASH ( * name )		77497	1					
ANR	77541	Callee	ISSLASH		77497	0					
ANR	77542	Identifier	ISSLASH		77497	0					
ANR	77543	ArgumentList	* name		77497	1					
ANR	77544	Argument	* name		77497	0					
ANR	77545	UnaryOperationExpression	* name		77497	0					
ANR	77546	UnaryOperator	*		77497	0					
ANR	77547	Identifier	name		77497	1					
ANR	77548	ReturnStatement	return false ;	1694:1:39657:39669	77497	1	True				
ANR	77549	Identifier	false		77497	0					
ANR	77550	WhileStatement	while ( * name && ! ISSLASH ( * name ) )		77497	1					
ANR	77551	Condition	* name && ! ISSLASH ( * name )	1695:13:39684:39709	77497	0	True				
ANR	77552	AndExpression	* name && ! ISSLASH ( * name )		77497	0		&&			
ANR	77553	UnaryOperationExpression	* name		77497	0					
ANR	77554	UnaryOperator	*		77497	0					
ANR	77555	Identifier	name		77497	1					
ANR	77556	UnaryOperationExpression	! ISSLASH ( * name )		77497	1					
ANR	77557	UnaryOperator	!		77497	0					
ANR	77558	CallExpression	ISSLASH ( * name )		77497	1					
ANR	77559	Callee	ISSLASH		77497	0					
ANR	77560	Identifier	ISSLASH		77497	0					
ANR	77561	ArgumentList	* name		77497	1					
ANR	77562	Argument	* name		77497	0					
ANR	77563	UnaryOperationExpression	* name		77497	0					
ANR	77564	UnaryOperator	*		77497	0					
ANR	77565	Identifier	name		77497	1					
ANR	77566	ExpressionStatement	name ++	1696:1:39713:39719	77497	1	True				
ANR	77567	PostIncDecOperationExpression	name ++		77497	0					
ANR	77568	Identifier	name		77497	0					
ANR	77569	IncDec	++		77497	1					
ANR	77570	WhileStatement	while ( ISSLASH ( * name ) )		77497	2					
ANR	77571	Condition	ISSLASH ( * name )	1697:13:39734:39748	77497	0	True				
ANR	77572	CallExpression	ISSLASH ( * name )		77497	0					
ANR	77573	Callee	ISSLASH		77497	0					
ANR	77574	Identifier	ISSLASH		77497	0					
ANR	77575	ArgumentList	* name		77497	1					
ANR	77576	Argument	* name		77497	0					
ANR	77577	UnaryOperationExpression	* name		77497	0					
ANR	77578	UnaryOperator	*		77497	0					
ANR	77579	Identifier	name		77497	1					
ANR	77580	ExpressionStatement	name ++	1698:1:39752:39758	77497	1	True				
ANR	77581	PostIncDecOperationExpression	name ++		77497	0					
ANR	77582	Identifier	name		77497	0					
ANR	77583	IncDec	++		77497	1					
ANR	77584	ReturnStatement	return true ;	1700:2:39768:39779	77497	2	True				
ANR	77585	Identifier	true		77497	0					
ANR	77586	ReturnType	bool		77497	1					
ANR	77587	Identifier	filename_is_safe		77497	2					
ANR	77588	ParameterList	char const * name		77497	3					
ANR	77589	Parameter	char const * name	1686:18:39480:39495	77497	0	True				
ANR	77590	ParameterType	char const *		77497	0					
ANR	77591	Identifier	name		77497	1					
ANR	77592	CFGEntryNode	ENTRY		77497		True				
ANR	77593	CFGExitNode	EXIT		77497		True				
ANR	77594	Symbol	* name		77497						
ANR	77595	Symbol	* ++ name		77497						
ANR	77596	Symbol	name		77497						
ANR	77597	Symbol	false		77497						
ANR	77598	Symbol	true		77497						
ANR	77599	Symbol	IS_ABSOLUTE_FILE_NAME		77497						
ANR	77600	Symbol	ISSLASH		77497						
ANR	77601	Function	cwd_is_root	1705:0:39923:40381							
ANR	77602	FunctionDef	cwd_is_root (char const * name)		77601	0					
ANR	77603	CompoundStatement		1707:0:39959:40381	77601	0					
ANR	77604	IdentifierDeclStatement	unsigned int prefix_len = FILE_SYSTEM_PREFIX_LEN ( name ) ;	1708:2:39963:40018	77601	0	True				
ANR	77605	IdentifierDecl	prefix_len = FILE_SYSTEM_PREFIX_LEN ( name )		77601	0					
ANR	77606	IdentifierDeclType	unsigned int		77601	0					
ANR	77607	Identifier	prefix_len		77601	1					
ANR	77608	AssignmentExpression	prefix_len = FILE_SYSTEM_PREFIX_LEN ( name )		77601	2		=			
ANR	77609	Identifier	prefix_len		77601	0					
ANR	77610	CallExpression	FILE_SYSTEM_PREFIX_LEN ( name )		77601	1					
ANR	77611	Callee	FILE_SYSTEM_PREFIX_LEN		77601	0					
ANR	77612	Identifier	FILE_SYSTEM_PREFIX_LEN		77601	0					
ANR	77613	ArgumentList	name		77601	1					
ANR	77614	Argument	name		77601	0					
ANR	77615	Identifier	name		77601	0					
ANR	77616	IdentifierDeclStatement	char root [ prefix_len + 2 ] ;	1709:2:40022:40047	77601	1	True				
ANR	77617	IdentifierDecl	root [ prefix_len + 2 ]		77601	0					
ANR	77618	IdentifierDeclType	char [ prefix_len + 2 ]		77601	0					
ANR	77619	Identifier	root		77601	1					
ANR	77620	AdditiveExpression	prefix_len + 2		77601	2		+			
ANR	77621	Identifier	prefix_len		77601	0					
ANR	77622	PrimaryExpression	2		77601	1					
ANR	77623	IdentifierDeclStatement	struct stat st ;	1710:2:40051:40065	77601	2	True				
ANR	77624	IdentifierDecl	st		77601	0					
ANR	77625	IdentifierDeclType	struct stat		77601	0					
ANR	77626	Identifier	st		77601	1					
ANR	77627	IdentifierDeclStatement	dev_t root_dev ;	1711:2:40069:40083	77601	3	True				
ANR	77628	IdentifierDecl	root_dev		77601	0					
ANR	77629	IdentifierDeclType	dev_t		77601	0					
ANR	77630	Identifier	root_dev		77601	1					
ANR	77631	IdentifierDeclStatement	ino_t root_ino ;	1712:2:40087:40101	77601	4	True				
ANR	77632	IdentifierDecl	root_ino		77601	0					
ANR	77633	IdentifierDeclType	ino_t		77601	0					
ANR	77634	Identifier	root_ino		77601	1					
ANR	77635	ExpressionStatement	"memcpy ( root , name , prefix_len )"	1714:2:40106:40137	77601	5	True				
ANR	77636	CallExpression	"memcpy ( root , name , prefix_len )"		77601	0					
ANR	77637	Callee	memcpy		77601	0					
ANR	77638	Identifier	memcpy		77601	0					
ANR	77639	ArgumentList	root		77601	1					
ANR	77640	Argument	root		77601	0					
ANR	77641	Identifier	root		77601	0					
ANR	77642	Argument	name		77601	1					
ANR	77643	Identifier	name		77601	0					
ANR	77644	Argument	prefix_len		77601	2					
ANR	77645	Identifier	prefix_len		77601	0					
ANR	77646	ExpressionStatement	root [ prefix_len ] = '/'	1715:2:40141:40163	77601	6	True				
ANR	77647	AssignmentExpression	root [ prefix_len ] = '/'		77601	0		=			
ANR	77648	ArrayIndexing	root [ prefix_len ]		77601	0					
ANR	77649	Identifier	root		77601	0					
ANR	77650	Identifier	prefix_len		77601	1					
ANR	77651	PrimaryExpression	'/'		77601	1					
ANR	77652	ExpressionStatement	root [ prefix_len + 1 ] = 0	1716:2:40167:40191	77601	7	True				
ANR	77653	AssignmentExpression	root [ prefix_len + 1 ] = 0		77601	0		=			
ANR	77654	ArrayIndexing	root [ prefix_len + 1 ]		77601	0					
ANR	77655	Identifier	root		77601	0					
ANR	77656	AdditiveExpression	prefix_len + 1		77601	1		+			
ANR	77657	Identifier	prefix_len		77601	0					
ANR	77658	PrimaryExpression	1		77601	1					
ANR	77659	PrimaryExpression	0		77601	1					
ANR	77660	IfStatement	"if ( stat ( root , & st ) )"		77601	8					
ANR	77661	Condition	"stat ( root , & st )"	1717:6:40199:40214	77601	0	True				
ANR	77662	CallExpression	"stat ( root , & st )"		77601	0					
ANR	77663	Callee	stat		77601	0					
ANR	77664	Identifier	stat		77601	0					
ANR	77665	ArgumentList	root		77601	1					
ANR	77666	Argument	root		77601	0					
ANR	77667	Identifier	root		77601	0					
ANR	77668	Argument	& st		77601	1					
ANR	77669	UnaryOperationExpression	& st		77601	0					
ANR	77670	UnaryOperator	&		77601	0					
ANR	77671	Identifier	st		77601	1					
ANR	77672	ReturnStatement	return false ;	1718:4:40221:40233	77601	1	True				
ANR	77673	Identifier	false		77601	0					
ANR	77674	ExpressionStatement	root_dev = st . st_dev	1719:2:40237:40257	77601	9	True				
ANR	77675	AssignmentExpression	root_dev = st . st_dev		77601	0		=			
ANR	77676	Identifier	root_dev		77601	0					
ANR	77677	MemberAccess	st . st_dev		77601	1					
ANR	77678	Identifier	st		77601	0					
ANR	77679	Identifier	st_dev		77601	1					
ANR	77680	ExpressionStatement	root_ino = st . st_ino	1720:2:40261:40281	77601	10	True				
ANR	77681	AssignmentExpression	root_ino = st . st_ino		77601	0		=			
ANR	77682	Identifier	root_ino		77601	0					
ANR	77683	MemberAccess	st . st_ino		77601	1					
ANR	77684	Identifier	st		77601	0					
ANR	77685	Identifier	st_ino		77601	1					
ANR	77686	IfStatement	"if ( stat ( ""."" , & st ) )"		77601	11					
ANR	77687	Condition	"stat ( ""."" , & st )"	1721:6:40289:40303	77601	0	True				
ANR	77688	CallExpression	"stat ( ""."" , & st )"		77601	0					
ANR	77689	Callee	stat		77601	0					
ANR	77690	Identifier	stat		77601	0					
ANR	77691	ArgumentList	"""."""		77601	1					
ANR	77692	Argument	"""."""		77601	0					
ANR	77693	PrimaryExpression	"""."""		77601	0					
ANR	77694	Argument	& st		77601	1					
ANR	77695	UnaryOperationExpression	& st		77601	0					
ANR	77696	UnaryOperator	&		77601	0					
ANR	77697	Identifier	st		77601	1					
ANR	77698	ReturnStatement	return false ;	1722:4:40310:40322	77601	1	True				
ANR	77699	Identifier	false		77601	0					
ANR	77700	ReturnStatement	return root_dev == st . st_dev && root_ino == st . st_ino ;	1723:2:40326:40379	77601	12	True				
ANR	77701	AndExpression	root_dev == st . st_dev && root_ino == st . st_ino		77601	0		&&			
ANR	77702	EqualityExpression	root_dev == st . st_dev		77601	0		==			
ANR	77703	Identifier	root_dev		77601	0					
ANR	77704	MemberAccess	st . st_dev		77601	1					
ANR	77705	Identifier	st		77601	0					
ANR	77706	Identifier	st_dev		77601	1					
ANR	77707	EqualityExpression	root_ino == st . st_ino		77601	1		==			
ANR	77708	Identifier	root_ino		77601	0					
ANR	77709	MemberAccess	st . st_ino		77601	1					
ANR	77710	Identifier	st		77601	0					
ANR	77711	Identifier	st_ino		77601	1					
ANR	77712	ReturnType	bool		77601	1					
ANR	77713	Identifier	cwd_is_root		77601	2					
ANR	77714	ParameterList	char const * name		77601	3					
ANR	77715	Parameter	char const * name	1706:13:39941:39956	77601	0	True				
ANR	77716	ParameterType	char const *		77601	0					
ANR	77717	Identifier	name		77601	1					
ANR	77718	CFGEntryNode	ENTRY		77601		True				
ANR	77719	CFGExitNode	EXIT		77601		True				
ANR	77720	Symbol	FILE_SYSTEM_PREFIX_LEN		77601						
ANR	77721	Symbol	st		77601						
ANR	77722	Symbol	stat		77601						
ANR	77723	Symbol	* prefix_len		77601						
ANR	77724	Symbol	st . st_ino		77601						
ANR	77725	Symbol	false		77601						
ANR	77726	Symbol	prefix_len		77601						
ANR	77727	Symbol	root_dev		77601						
ANR	77728	Symbol	& st		77601						
ANR	77729	Symbol	st . st_dev		77601						
ANR	77730	Symbol	root		77601						
ANR	77731	Symbol	name		77601						
ANR	77732	Symbol	* root		77601						
ANR	77733	Symbol	root_ino		77601						
