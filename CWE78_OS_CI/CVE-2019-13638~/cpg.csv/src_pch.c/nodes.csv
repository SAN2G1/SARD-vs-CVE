command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	45340	File	data/converged/CVE-2019-13638~_patch/src_pch.c								
ANR	45341	DeclStmt									
ANR	45342	Decl							FILE	FILE *	pfp
ANR	45343	DeclStmt									
ANR	45344	Decl							int	int [ 2 ]	p_says_nonexistent
ANR	45345	DeclStmt									
ANR	45346	Decl							int	int	p_rfc934_nesting
ANR	45347	DeclStmt									
ANR	45348	Decl							char	char * [ 3 ]	p_name
ANR	45349	DeclStmt									
ANR	45350	Decl							char const	char const * [ 2 ]	invalid_names
ANR	45351	DeclStmt									
ANR	45352	Decl							bool	bool [ 2 ]	p_copy
ANR	45353	DeclStmt									
ANR	45354	Decl							bool	bool [ 2 ]	p_rename
ANR	45355	DeclStmt									
ANR	45356	Decl							char	char * [ 2 ]	p_timestr
ANR	45357	DeclStmt									
ANR	45358	Decl							char	char * [ 2 ]	p_sha1
ANR	45359	DeclStmt									
ANR	45360	Decl							mode_t	mode_t [ 2 ]	p_mode
ANR	45361	DeclStmt									
ANR	45362	Decl							off_t	off_t	p_filesize
ANR	45363	DeclStmt									
ANR	45364	Decl							lin	lin	p_first
ANR	45365	DeclStmt									
ANR	45366	Decl							lin	lin	p_newfirst
ANR	45367	DeclStmt									
ANR	45368	Decl							lin	lin	p_ptrn_lines
ANR	45369	DeclStmt									
ANR	45370	Decl							lin	lin	p_repl_lines
ANR	45371	DeclStmt									
ANR	45372	Decl							lin	lin	p_end
ANR	45373	DeclStmt									
ANR	45374	Decl							lin	lin	p_max
ANR	45375	DeclStmt									
ANR	45376	Decl							lin	lin	p_prefix_context
ANR	45377	DeclStmt									
ANR	45378	Decl							lin	lin	p_suffix_context
ANR	45379	DeclStmt									
ANR	45380	Decl							lin	lin	p_input_line
ANR	45381	DeclStmt									
ANR	45382	Decl							char	char * *	p_line
ANR	45383	DeclStmt									
ANR	45384	Decl							size_t	size_t *	p_len
ANR	45385	DeclStmt									
ANR	45386	Decl							char	char *	p_Char
ANR	45387	DeclStmt									
ANR	45388	Decl							lin	lin	hunkmax
ANR	45389	DeclStmt									
ANR	45390	Decl							size_t	size_t	p_indent
ANR	45391	DeclStmt									
ANR	45392	Decl							bool	bool	p_strip_trailing_cr
ANR	45393	DeclStmt									
ANR	45394	Decl							bool	bool	p_pass_comments_through
ANR	45395	DeclStmt									
ANR	45396	Decl							file_offset	file_offset	p_base
ANR	45397	DeclStmt									
ANR	45398	Decl							lin	lin	p_bline
ANR	45399	DeclStmt									
ANR	45400	Decl							file_offset	file_offset	p_start
ANR	45401	DeclStmt									
ANR	45402	Decl							lin	lin	p_sline
ANR	45403	DeclStmt									
ANR	45404	Decl							lin	lin	p_hunk_beg
ANR	45405	DeclStmt									
ANR	45406	Decl							lin	lin	p_efake
ANR	45407	DeclStmt									
ANR	45408	Decl							lin	lin	p_bfake
ANR	45409	DeclStmt									
ANR	45410	Decl							char	char *	p_c_function
ANR	45411	DeclStmt									
ANR	45412	Decl							bool	bool	p_git_diff
ANR	45413	DeclStmt									
ANR	45414	Decl							char	"char * ( char * , lin * )"	scan_linenum
ANR	45415	DeclStmt									
ANR	45416	Decl							enum diff	"enum diff ( bool , mode_t * )"	intuit_diff_type
ANR	45417	DeclStmt									
ANR	45418	Decl							int	"int ( char * , bool )"	prefix_components
ANR	45419	DeclStmt									
ANR	45420	Decl							size_t	"size_t ( size_t , int , bool , bool )"	pget_line
ANR	45421	DeclStmt									
ANR	45422	Decl							size_t	size_t ( void )	get_line
ANR	45423	DeclStmt									
ANR	45424	Decl							bool	bool ( void )	incomplete_line
ANR	45425	DeclStmt									
ANR	45426	Decl							bool	bool ( void )	grow_hunkmax
ANR	45427	DeclStmt									
ANR	45428	Decl							void	"void ( file_offset , lin )"	next_intuit_at
ANR	45429	DeclStmt									
ANR	45430	Decl							void	"void ( file_offset , lin )"	skip_to
ANR	45431	DeclStmt									
ANR	45432	Decl							char	char ( char const * )	get_ed_command_letter
ANR	45433	Function	re_patch	97:0:3947:4133							
ANR	45434	FunctionDef	re_patch ()		45433	0					
ANR	45435	CompoundStatement		99:0:3968:4133	45433	0					
ANR	45436	ExpressionStatement	p_first = 0	100:4:3974:3985	45433	0	True				
ANR	45437	AssignmentExpression	p_first = 0		45433	0		=			
ANR	45438	Identifier	p_first		45433	0					
ANR	45439	PrimaryExpression	0		45433	1					
ANR	45440	ExpressionStatement	p_newfirst = 0	101:4:3991:4005	45433	1	True				
ANR	45441	AssignmentExpression	p_newfirst = 0		45433	0		=			
ANR	45442	Identifier	p_newfirst		45433	0					
ANR	45443	PrimaryExpression	0		45433	1					
ANR	45444	ExpressionStatement	p_ptrn_lines = 0	102:4:4011:4027	45433	2	True				
ANR	45445	AssignmentExpression	p_ptrn_lines = 0		45433	0		=			
ANR	45446	Identifier	p_ptrn_lines		45433	0					
ANR	45447	PrimaryExpression	0		45433	1					
ANR	45448	ExpressionStatement	p_repl_lines = 0	103:4:4033:4049	45433	3	True				
ANR	45449	AssignmentExpression	p_repl_lines = 0		45433	0		=			
ANR	45450	Identifier	p_repl_lines		45433	0					
ANR	45451	PrimaryExpression	0		45433	1					
ANR	45452	ExpressionStatement	p_end = - 1	104:4:4055:4065	45433	4	True				
ANR	45453	AssignmentExpression	p_end = - 1		45433	0		=			
ANR	45454	Identifier	p_end		45433	0					
ANR	45455	UnaryOperationExpression	- 1		45433	1					
ANR	45456	UnaryOperator	-		45433	0					
ANR	45457	PrimaryExpression	1		45433	1					
ANR	45458	ExpressionStatement	p_max = 0	105:4:4071:4080	45433	5	True				
ANR	45459	AssignmentExpression	p_max = 0		45433	0		=			
ANR	45460	Identifier	p_max		45433	0					
ANR	45461	PrimaryExpression	0		45433	1					
ANR	45462	ExpressionStatement	p_indent = 0	106:4:4086:4098	45433	6	True				
ANR	45463	AssignmentExpression	p_indent = 0		45433	0		=			
ANR	45464	Identifier	p_indent		45433	0					
ANR	45465	PrimaryExpression	0		45433	1					
ANR	45466	ExpressionStatement	p_strip_trailing_cr = false	107:4:4104:4131	45433	7	True				
ANR	45467	AssignmentExpression	p_strip_trailing_cr = false		45433	0		=			
ANR	45468	Identifier	p_strip_trailing_cr		45433	0					
ANR	45469	Identifier	false		45433	1					
ANR	45470	ReturnType	void		45433	1					
ANR	45471	Identifier	re_patch		45433	2					
ANR	45472	ParameterList			45433	3					
ANR	45473	CFGEntryNode	ENTRY		45433		True				
ANR	45474	CFGExitNode	EXIT		45433		True				
ANR	45475	Symbol	p_strip_trailing_cr		45433						
ANR	45476	Symbol	p_repl_lines		45433						
ANR	45477	Symbol	p_ptrn_lines		45433						
ANR	45478	Symbol	p_max		45433						
ANR	45479	Symbol	p_newfirst		45433						
ANR	45480	Symbol	p_first		45433						
ANR	45481	Symbol	p_indent		45433						
ANR	45482	Symbol	false		45433						
ANR	45483	Symbol	p_end		45433						
ANR	45484	Function	open_patch_file	112:0:4189:5744							
ANR	45485	FunctionDef	open_patch_file (char const * filename)		45484	0					
ANR	45486	CompoundStatement		114:0:4233:5744	45484	0					
ANR	45487	IdentifierDeclStatement	file_offset file_pos = 0 ;	115:4:4239:4263	45484	0	True				
ANR	45488	IdentifierDecl	file_pos = 0		45484	0					
ANR	45489	IdentifierDeclType	file_offset		45484	0					
ANR	45490	Identifier	file_pos		45484	1					
ANR	45491	AssignmentExpression	file_pos = 0		45484	2		=			
ANR	45492	Identifier	file_pos		45484	0					
ANR	45493	PrimaryExpression	0		45484	1					
ANR	45494	IdentifierDeclStatement	file_offset pos ;	116:4:4269:4284	45484	1	True				
ANR	45495	IdentifierDecl	pos		45484	0					
ANR	45496	IdentifierDeclType	file_offset		45484	0					
ANR	45497	Identifier	pos		45484	1					
ANR	45498	IdentifierDeclStatement	struct stat st ;	117:4:4290:4304	45484	2	True				
ANR	45499	IdentifierDecl	st		45484	0					
ANR	45500	IdentifierDeclType	struct stat		45484	0					
ANR	45501	Identifier	st		45484	1					
ANR	45502	IfStatement	"if ( ! filename || ! * filename || strEQ ( filename , ""-"" ) )"		45484	3					
ANR	45503	Condition	"! filename || ! * filename || strEQ ( filename , ""-"" )"	119:8:4315:4362	45484	0	True				
ANR	45504	OrExpression	"! filename || ! * filename || strEQ ( filename , ""-"" )"		45484	0		||			
ANR	45505	UnaryOperationExpression	! filename		45484	0					
ANR	45506	UnaryOperator	!		45484	0					
ANR	45507	Identifier	filename		45484	1					
ANR	45508	OrExpression	"! * filename || strEQ ( filename , ""-"" )"		45484	1		||			
ANR	45509	UnaryOperationExpression	! * filename		45484	0					
ANR	45510	UnaryOperator	!		45484	0					
ANR	45511	UnaryOperationExpression	* filename		45484	1					
ANR	45512	UnaryOperator	*		45484	0					
ANR	45513	Identifier	filename		45484	1					
ANR	45514	CallExpression	"strEQ ( filename , ""-"" )"		45484	1					
ANR	45515	Callee	strEQ		45484	0					
ANR	45516	Identifier	strEQ		45484	0					
ANR	45517	ArgumentList	filename		45484	1					
ANR	45518	Argument	filename		45484	0					
ANR	45519	Identifier	filename		45484	0					
ANR	45520	Argument	"""-"""		45484	1					
ANR	45521	PrimaryExpression	"""-"""		45484	0					
ANR	45522	ExpressionStatement	pfp = stdin	120:6:4371:4382	45484	1	True				
ANR	45523	AssignmentExpression	pfp = stdin		45484	0		=			
ANR	45524	Identifier	pfp		45484	0					
ANR	45525	Identifier	stdin		45484	1					
ANR	45526	ElseStatement	else		45484	0					
ANR	45527	CompoundStatement		9:6:165:165	45484	0					
ANR	45528	ExpressionStatement	"pfp = fopen ( filename , binary_transput ? ""rb"" : ""r"" )"	123:1:4402:4454	45484	0	True				
ANR	45529	AssignmentExpression	"pfp = fopen ( filename , binary_transput ? ""rb"" : ""r"" )"		45484	0		=			
ANR	45530	Identifier	pfp		45484	0					
ANR	45531	CallExpression	"fopen ( filename , binary_transput ? ""rb"" : ""r"" )"		45484	1					
ANR	45532	Callee	fopen		45484	0					
ANR	45533	Identifier	fopen		45484	0					
ANR	45534	ArgumentList	filename		45484	1					
ANR	45535	Argument	filename		45484	0					
ANR	45536	Identifier	filename		45484	0					
ANR	45537	Argument	"binary_transput ? ""rb"" : ""r"""		45484	1					
ANR	45538	ConditionalExpression	"binary_transput ? ""rb"" : ""r"""		45484	0					
ANR	45539	Condition	binary_transput		45484	0					
ANR	45540	Identifier	binary_transput		45484	0					
ANR	45541	PrimaryExpression	"""rb"""		45484	1					
ANR	45542	PrimaryExpression	"""r"""		45484	2					
ANR	45543	IfStatement	if ( ! pfp )		45484	1					
ANR	45544	Condition	! pfp	124:5:4461:4464	45484	0	True				
ANR	45545	UnaryOperationExpression	! pfp		45484	0					
ANR	45546	UnaryOperator	!		45484	0					
ANR	45547	Identifier	pfp		45484	1					
ANR	45548	ExpressionStatement	"pfatal ( ""Can't open patch file %s"" , quotearg ( filename ) )"	125:3:4470:4526	45484	1	True				
ANR	45549	CallExpression	"pfatal ( ""Can't open patch file %s"" , quotearg ( filename ) )"		45484	0					
ANR	45550	Callee	pfatal		45484	0					
ANR	45551	Identifier	pfatal		45484	0					
ANR	45552	ArgumentList	"""Can't open patch file %s"""		45484	1					
ANR	45553	Argument	"""Can't open patch file %s"""		45484	0					
ANR	45554	PrimaryExpression	"""Can't open patch file %s"""		45484	0					
ANR	45555	Argument	quotearg ( filename )		45484	1					
ANR	45556	CallExpression	quotearg ( filename )		45484	0					
ANR	45557	Callee	quotearg		45484	0					
ANR	45558	Identifier	quotearg		45484	0					
ANR	45559	ArgumentList	filename		45484	1					
ANR	45560	Argument	filename		45484	0					
ANR	45561	Identifier	filename		45484	0					
ANR	45562	IfStatement	if ( binary_transput )		45484	4					
ANR	45563	Condition	binary_transput	128:8:4565:4579	45484	0	True				
ANR	45564	Identifier	binary_transput		45484	0					
ANR	45565	CompoundStatement		16:6:354:354	45484	1					
ANR	45566	IfStatement	if ( isatty ( fileno ( pfp ) ) )		45484	0					
ANR	45567	Condition	isatty ( fileno ( pfp ) )	130:5:4595:4615	45484	0	True				
ANR	45568	CallExpression	isatty ( fileno ( pfp ) )		45484	0					
ANR	45569	Callee	isatty		45484	0					
ANR	45570	Identifier	isatty		45484	0					
ANR	45571	ArgumentList	fileno ( pfp )		45484	1					
ANR	45572	Argument	fileno ( pfp )		45484	0					
ANR	45573	CallExpression	fileno ( pfp )		45484	0					
ANR	45574	Callee	fileno		45484	0					
ANR	45575	Identifier	fileno		45484	0					
ANR	45576	ArgumentList	pfp		45484	1					
ANR	45577	Argument	pfp		45484	0					
ANR	45578	Identifier	pfp		45484	0					
ANR	45579	ExpressionStatement	"fatal ( ""cannot read binary data from tty on this platform"" )"	131:3:4621:4680	45484	1	True				
ANR	45580	CallExpression	"fatal ( ""cannot read binary data from tty on this platform"" )"		45484	0					
ANR	45581	Callee	fatal		45484	0					
ANR	45582	Identifier	fatal		45484	0					
ANR	45583	ArgumentList	"""cannot read binary data from tty on this platform"""		45484	1					
ANR	45584	Argument	"""cannot read binary data from tty on this platform"""		45484	0					
ANR	45585	PrimaryExpression	"""cannot read binary data from tty on this platform"""		45484	0					
ANR	45586	ExpressionStatement	"setmode ( fileno ( pfp ) , O_BINARY )"	132:1:4683:4715	45484	1	True				
ANR	45587	CallExpression	"setmode ( fileno ( pfp ) , O_BINARY )"		45484	0					
ANR	45588	Callee	setmode		45484	0					
ANR	45589	Identifier	setmode		45484	0					
ANR	45590	ArgumentList	fileno ( pfp )		45484	1					
ANR	45591	Argument	fileno ( pfp )		45484	0					
ANR	45592	CallExpression	fileno ( pfp )		45484	0					
ANR	45593	Callee	fileno		45484	0					
ANR	45594	Identifier	fileno		45484	0					
ANR	45595	ArgumentList	pfp		45484	1					
ANR	45596	Argument	pfp		45484	0					
ANR	45597	Identifier	pfp		45484	0					
ANR	45598	Argument	O_BINARY		45484	1					
ANR	45599	Identifier	O_BINARY		45484	0					
ANR	45600	IfStatement	"if ( fstat ( fileno ( pfp ) , & st ) != 0 )"		45484	5					
ANR	45601	Condition	"fstat ( fileno ( pfp ) , & st ) != 0"	135:8:4740:4769	45484	0	True				
ANR	45602	EqualityExpression	"fstat ( fileno ( pfp ) , & st ) != 0"		45484	0		!=			
ANR	45603	CallExpression	"fstat ( fileno ( pfp ) , & st )"		45484	0					
ANR	45604	Callee	fstat		45484	0					
ANR	45605	Identifier	fstat		45484	0					
ANR	45606	ArgumentList	fileno ( pfp )		45484	1					
ANR	45607	Argument	fileno ( pfp )		45484	0					
ANR	45608	CallExpression	fileno ( pfp )		45484	0					
ANR	45609	Callee	fileno		45484	0					
ANR	45610	Identifier	fileno		45484	0					
ANR	45611	ArgumentList	pfp		45484	1					
ANR	45612	Argument	pfp		45484	0					
ANR	45613	Identifier	pfp		45484	0					
ANR	45614	Argument	& st		45484	1					
ANR	45615	UnaryOperationExpression	& st		45484	0					
ANR	45616	UnaryOperator	&		45484	0					
ANR	45617	Identifier	st		45484	1					
ANR	45618	PrimaryExpression	0		45484	1					
ANR	45619	ExpressionStatement	"pfatal ( ""fstat"" )"	136:6:4778:4794	45484	1	True				
ANR	45620	CallExpression	"pfatal ( ""fstat"" )"		45484	0					
ANR	45621	Callee	pfatal		45484	0					
ANR	45622	Identifier	pfatal		45484	0					
ANR	45623	ArgumentList	"""fstat"""		45484	1					
ANR	45624	Argument	"""fstat"""		45484	0					
ANR	45625	PrimaryExpression	"""fstat"""		45484	0					
ANR	45626	IfStatement	if ( S_ISREG ( st . st_mode ) && ( pos = file_tell ( pfp ) ) != - 1 )		45484	6					
ANR	45627	Condition	S_ISREG ( st . st_mode ) && ( pos = file_tell ( pfp ) ) != - 1	137:8:4804:4856	45484	0	True				
ANR	45628	AndExpression	S_ISREG ( st . st_mode ) && ( pos = file_tell ( pfp ) ) != - 1		45484	0		&&			
ANR	45629	CallExpression	S_ISREG ( st . st_mode )		45484	0					
ANR	45630	Callee	S_ISREG		45484	0					
ANR	45631	Identifier	S_ISREG		45484	0					
ANR	45632	ArgumentList	st . st_mode		45484	1					
ANR	45633	Argument	st . st_mode		45484	0					
ANR	45634	MemberAccess	st . st_mode		45484	0					
ANR	45635	Identifier	st		45484	0					
ANR	45636	Identifier	st_mode		45484	1					
ANR	45637	EqualityExpression	( pos = file_tell ( pfp ) ) != - 1		45484	1		!=			
ANR	45638	AssignmentExpression	pos = file_tell ( pfp )		45484	0		=			
ANR	45639	Identifier	pos		45484	0					
ANR	45640	CallExpression	file_tell ( pfp )		45484	1					
ANR	45641	Callee	file_tell		45484	0					
ANR	45642	Identifier	file_tell		45484	0					
ANR	45643	ArgumentList	pfp		45484	1					
ANR	45644	Argument	pfp		45484	0					
ANR	45645	Identifier	pfp		45484	0					
ANR	45646	UnaryOperationExpression	- 1		45484	1					
ANR	45647	UnaryOperator	-		45484	0					
ANR	45648	PrimaryExpression	1		45484	1					
ANR	45649	ExpressionStatement	file_pos = pos	138:6:4865:4879	45484	1	True				
ANR	45650	AssignmentExpression	file_pos = pos		45484	0		=			
ANR	45651	Identifier	file_pos		45484	0					
ANR	45652	Identifier	pos		45484	1					
ANR	45653	ElseStatement	else		45484	0					
ANR	45654	CompoundStatement		30:1:693:713	45484	0					
ANR	45655	IdentifierDeclStatement	size_t charsread ;	141:1:4899:4915	45484	0	True				
ANR	45656	IdentifierDecl	charsread		45484	0					
ANR	45657	IdentifierDeclType	size_t		45484	0					
ANR	45658	Identifier	charsread		45484	1					
ANR	45659	IdentifierDeclStatement	int fd ;	142:1:4918:4924	45484	1	True				
ANR	45660	IdentifierDecl	fd		45484	0					
ANR	45661	IdentifierDeclType	int		45484	0					
ANR	45662	Identifier	fd		45484	1					
ANR	45663	IdentifierDeclStatement	FILE * read_pfp = pfp ;	143:1:4927:4947	45484	2	True				
ANR	45664	IdentifierDecl	* read_pfp = pfp		45484	0					
ANR	45665	IdentifierDeclType	FILE *		45484	0					
ANR	45666	Identifier	read_pfp		45484	1					
ANR	45667	AssignmentExpression	* read_pfp = pfp		45484	2		=			
ANR	45668	Identifier	pfp		45484	0					
ANR	45669	Identifier	pfp		45484	1					
ANR	45670	ExpressionStatement	"fd = make_tempfile ( & TMPPATNAME , 'p' , NULL , O_RDWR | O_BINARY , 0 )"	144:1:4950:5015	45484	3	True				
ANR	45671	AssignmentExpression	"fd = make_tempfile ( & TMPPATNAME , 'p' , NULL , O_RDWR | O_BINARY , 0 )"		45484	0		=			
ANR	45672	Identifier	fd		45484	0					
ANR	45673	CallExpression	"make_tempfile ( & TMPPATNAME , 'p' , NULL , O_RDWR | O_BINARY , 0 )"		45484	1					
ANR	45674	Callee	make_tempfile		45484	0					
ANR	45675	Identifier	make_tempfile		45484	0					
ANR	45676	ArgumentList	& TMPPATNAME		45484	1					
ANR	45677	Argument	& TMPPATNAME		45484	0					
ANR	45678	UnaryOperationExpression	& TMPPATNAME		45484	0					
ANR	45679	UnaryOperator	&		45484	0					
ANR	45680	Identifier	TMPPATNAME		45484	1					
ANR	45681	Argument	'p'		45484	1					
ANR	45682	PrimaryExpression	'p'		45484	0					
ANR	45683	Argument	NULL		45484	2					
ANR	45684	Identifier	NULL		45484	0					
ANR	45685	Argument	O_RDWR | O_BINARY		45484	3					
ANR	45686	InclusiveOrExpression	O_RDWR | O_BINARY		45484	0		|			
ANR	45687	Identifier	O_RDWR		45484	0					
ANR	45688	Identifier	O_BINARY		45484	1					
ANR	45689	Argument	0		45484	4					
ANR	45690	PrimaryExpression	0		45484	0					
ANR	45691	IfStatement	if ( fd == - 1 )		45484	4					
ANR	45692	Condition	fd == - 1	145:5:5022:5029	45484	0	True				
ANR	45693	EqualityExpression	fd == - 1		45484	0		==			
ANR	45694	Identifier	fd		45484	0					
ANR	45695	UnaryOperationExpression	- 1		45484	1					
ANR	45696	UnaryOperator	-		45484	0					
ANR	45697	PrimaryExpression	1		45484	1					
ANR	45698	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , TMPPATNAME )"	146:3:5035:5088	45484	1	True				
ANR	45699	CallExpression	"pfatal ( ""Can't create temporary file %s"" , TMPPATNAME )"		45484	0					
ANR	45700	Callee	pfatal		45484	0					
ANR	45701	Identifier	pfatal		45484	0					
ANR	45702	ArgumentList	"""Can't create temporary file %s"""		45484	1					
ANR	45703	Argument	"""Can't create temporary file %s"""		45484	0					
ANR	45704	PrimaryExpression	"""Can't create temporary file %s"""		45484	0					
ANR	45705	Argument	TMPPATNAME		45484	1					
ANR	45706	Identifier	TMPPATNAME		45484	0					
ANR	45707	ExpressionStatement	TMPPATNAME_needs_removal = true	147:1:5091:5122	45484	5	True				
ANR	45708	AssignmentExpression	TMPPATNAME_needs_removal = true		45484	0		=			
ANR	45709	Identifier	TMPPATNAME_needs_removal		45484	0					
ANR	45710	Identifier	true		45484	1					
ANR	45711	ExpressionStatement	"pfp = fdopen ( fd , ""w+b"" )"	148:1:5125:5149	45484	6	True				
ANR	45712	AssignmentExpression	"pfp = fdopen ( fd , ""w+b"" )"		45484	0		=			
ANR	45713	Identifier	pfp		45484	0					
ANR	45714	CallExpression	"fdopen ( fd , ""w+b"" )"		45484	1					
ANR	45715	Callee	fdopen		45484	0					
ANR	45716	Identifier	fdopen		45484	0					
ANR	45717	ArgumentList	fd		45484	1					
ANR	45718	Argument	fd		45484	0					
ANR	45719	Identifier	fd		45484	0					
ANR	45720	Argument	"""w+b"""		45484	1					
ANR	45721	PrimaryExpression	"""w+b"""		45484	0					
ANR	45722	IfStatement	if ( ! pfp )		45484	7					
ANR	45723	Condition	! pfp	149:5:5156:5160	45484	0	True				
ANR	45724	UnaryOperationExpression	! pfp		45484	0					
ANR	45725	UnaryOperator	!		45484	0					
ANR	45726	Identifier	pfp		45484	1					
ANR	45727	ExpressionStatement	"pfatal ( ""Can't open stream for file %s"" , quotearg ( TMPPATNAME ) )"	150:3:5166:5229	45484	1	True				
ANR	45728	CallExpression	"pfatal ( ""Can't open stream for file %s"" , quotearg ( TMPPATNAME ) )"		45484	0					
ANR	45729	Callee	pfatal		45484	0					
ANR	45730	Identifier	pfatal		45484	0					
ANR	45731	ArgumentList	"""Can't open stream for file %s"""		45484	1					
ANR	45732	Argument	"""Can't open stream for file %s"""		45484	0					
ANR	45733	PrimaryExpression	"""Can't open stream for file %s"""		45484	0					
ANR	45734	Argument	quotearg ( TMPPATNAME )		45484	1					
ANR	45735	CallExpression	quotearg ( TMPPATNAME )		45484	0					
ANR	45736	Callee	quotearg		45484	0					
ANR	45737	Identifier	quotearg		45484	0					
ANR	45738	ArgumentList	TMPPATNAME		45484	1					
ANR	45739	Argument	TMPPATNAME		45484	0					
ANR	45740	Identifier	TMPPATNAME		45484	0					
ANR	45741	ForStatement	"for ( st . st_size = 0 ; ( charsread = fread ( buf , 1 , bufsize , read_pfp ) ) != 0 ; st . st_size += charsread )"		45484	8					
ANR	45742	ForInit	st . st_size = 0 ;	151:6:5237:5251	45484	0	True				
ANR	45743	AssignmentExpression	st . st_size = 0		45484	0		=			
ANR	45744	MemberAccess	st . st_size		45484	0					
ANR	45745	Identifier	st		45484	0					
ANR	45746	Identifier	st_size		45484	1					
ANR	45747	PrimaryExpression	0		45484	1					
ANR	45748	Condition	"( charsread = fread ( buf , 1 , bufsize , read_pfp ) ) != 0"	152:6:5259:5310	45484	1	True				
ANR	45749	EqualityExpression	"( charsread = fread ( buf , 1 , bufsize , read_pfp ) ) != 0"		45484	0		!=			
ANR	45750	AssignmentExpression	"charsread = fread ( buf , 1 , bufsize , read_pfp )"		45484	0		=			
ANR	45751	Identifier	charsread		45484	0					
ANR	45752	CallExpression	"fread ( buf , 1 , bufsize , read_pfp )"		45484	1					
ANR	45753	Callee	fread		45484	0					
ANR	45754	Identifier	fread		45484	0					
ANR	45755	ArgumentList	buf		45484	1					
ANR	45756	Argument	buf		45484	0					
ANR	45757	Identifier	buf		45484	0					
ANR	45758	Argument	1		45484	1					
ANR	45759	PrimaryExpression	1		45484	0					
ANR	45760	Argument	bufsize		45484	2					
ANR	45761	Identifier	bufsize		45484	0					
ANR	45762	Argument	read_pfp		45484	3					
ANR	45763	Identifier	read_pfp		45484	0					
ANR	45764	PrimaryExpression	0		45484	1					
ANR	45765	AssignmentExpression	st . st_size += charsread	153:6:5319:5341	45484	2	True	+=			
ANR	45766	MemberAccess	st . st_size		45484	0					
ANR	45767	Identifier	st		45484	0					
ANR	45768	Identifier	st_size		45484	1					
ANR	45769	Identifier	charsread		45484	1					
ANR	45770	IfStatement	"if ( fwrite ( buf , 1 , charsread , pfp ) != charsread )"		45484	3					
ANR	45771	Condition	"fwrite ( buf , 1 , charsread , pfp ) != charsread"	154:7:5351:5394	45484	0	True				
ANR	45772	EqualityExpression	"fwrite ( buf , 1 , charsread , pfp ) != charsread"		45484	0		!=			
ANR	45773	CallExpression	"fwrite ( buf , 1 , charsread , pfp )"		45484	0					
ANR	45774	Callee	fwrite		45484	0					
ANR	45775	Identifier	fwrite		45484	0					
ANR	45776	ArgumentList	buf		45484	1					
ANR	45777	Argument	buf		45484	0					
ANR	45778	Identifier	buf		45484	0					
ANR	45779	Argument	1		45484	1					
ANR	45780	PrimaryExpression	1		45484	0					
ANR	45781	Argument	charsread		45484	2					
ANR	45782	Identifier	charsread		45484	0					
ANR	45783	Argument	pfp		45484	3					
ANR	45784	Identifier	pfp		45484	0					
ANR	45785	Identifier	charsread		45484	1					
ANR	45786	ExpressionStatement	write_fatal ( )	155:5:5402:5416	45484	1	True				
ANR	45787	CallExpression	write_fatal ( )		45484	0					
ANR	45788	Callee	write_fatal		45484	0					
ANR	45789	Identifier	write_fatal		45484	0					
ANR	45790	ArgumentList			45484	1					
ANR	45791	IfStatement	if ( ferror ( read_pfp ) || fclose ( read_pfp ) != 0 )		45484	9					
ANR	45792	Condition	ferror ( read_pfp ) || fclose ( read_pfp ) != 0	156:5:5423:5465	45484	0	True				
ANR	45793	OrExpression	ferror ( read_pfp ) || fclose ( read_pfp ) != 0		45484	0		||			
ANR	45794	CallExpression	ferror ( read_pfp )		45484	0					
ANR	45795	Callee	ferror		45484	0					
ANR	45796	Identifier	ferror		45484	0					
ANR	45797	ArgumentList	read_pfp		45484	1					
ANR	45798	Argument	read_pfp		45484	0					
ANR	45799	Identifier	read_pfp		45484	0					
ANR	45800	EqualityExpression	fclose ( read_pfp ) != 0		45484	1		!=			
ANR	45801	CallExpression	fclose ( read_pfp )		45484	0					
ANR	45802	Callee	fclose		45484	0					
ANR	45803	Identifier	fclose		45484	0					
ANR	45804	ArgumentList	read_pfp		45484	1					
ANR	45805	Argument	read_pfp		45484	0					
ANR	45806	Identifier	read_pfp		45484	0					
ANR	45807	PrimaryExpression	0		45484	1					
ANR	45808	ExpressionStatement	read_fatal ( )	157:3:5471:5484	45484	1	True				
ANR	45809	CallExpression	read_fatal ( )		45484	0					
ANR	45810	Callee	read_fatal		45484	0					
ANR	45811	Identifier	read_fatal		45484	0					
ANR	45812	ArgumentList			45484	1					
ANR	45813	IfStatement	"if ( fflush ( pfp ) != 0 || file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0 )"		45484	10					
ANR	45814	Condition	"fflush ( pfp ) != 0 || file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0"	158:5:5491:5563	45484	0	True				
ANR	45815	OrExpression	"fflush ( pfp ) != 0 || file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0"		45484	0		||			
ANR	45816	EqualityExpression	fflush ( pfp ) != 0		45484	0		!=			
ANR	45817	CallExpression	fflush ( pfp )		45484	0					
ANR	45818	Callee	fflush		45484	0					
ANR	45819	Identifier	fflush		45484	0					
ANR	45820	ArgumentList	pfp		45484	1					
ANR	45821	Argument	pfp		45484	0					
ANR	45822	Identifier	pfp		45484	0					
ANR	45823	PrimaryExpression	0		45484	1					
ANR	45824	EqualityExpression	"file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0"		45484	1		!=			
ANR	45825	CallExpression	"file_seek ( pfp , ( file_offset ) 0 , SEEK_SET )"		45484	0					
ANR	45826	Callee	file_seek		45484	0					
ANR	45827	Identifier	file_seek		45484	0					
ANR	45828	ArgumentList	pfp		45484	1					
ANR	45829	Argument	pfp		45484	0					
ANR	45830	Identifier	pfp		45484	0					
ANR	45831	Argument	( file_offset ) 0		45484	1					
ANR	45832	CastExpression	( file_offset ) 0		45484	0					
ANR	45833	CastTarget	file_offset		45484	0					
ANR	45834	PrimaryExpression	0		45484	1					
ANR	45835	Argument	SEEK_SET		45484	2					
ANR	45836	Identifier	SEEK_SET		45484	0					
ANR	45837	PrimaryExpression	0		45484	1					
ANR	45838	ExpressionStatement	write_fatal ( )	160:3:5569:5583	45484	1	True				
ANR	45839	CallExpression	write_fatal ( )		45484	0					
ANR	45840	Callee	write_fatal		45484	0					
ANR	45841	Identifier	write_fatal		45484	0					
ANR	45842	ArgumentList			45484	1					
ANR	45843	ExpressionStatement	p_filesize = st . st_size	162:4:5597:5620	45484	7	True				
ANR	45844	AssignmentExpression	p_filesize = st . st_size		45484	0		=			
ANR	45845	Identifier	p_filesize		45484	0					
ANR	45846	MemberAccess	st . st_size		45484	1					
ANR	45847	Identifier	st		45484	0					
ANR	45848	Identifier	st_size		45484	1					
ANR	45849	IfStatement	if ( p_filesize != ( file_offset ) p_filesize )		45484	8					
ANR	45850	Condition	p_filesize != ( file_offset ) p_filesize	163:8:5630:5667	45484	0	True				
ANR	45851	EqualityExpression	p_filesize != ( file_offset ) p_filesize		45484	0		!=			
ANR	45852	Identifier	p_filesize		45484	0					
ANR	45853	CastExpression	( file_offset ) p_filesize		45484	1					
ANR	45854	CastTarget	file_offset		45484	0					
ANR	45855	Identifier	p_filesize		45484	1					
ANR	45856	ExpressionStatement	"fatal ( ""patch file is too long"" )"	164:6:5676:5708	45484	1	True				
ANR	45857	CallExpression	"fatal ( ""patch file is too long"" )"		45484	0					
ANR	45858	Callee	fatal		45484	0					
ANR	45859	Identifier	fatal		45484	0					
ANR	45860	ArgumentList	"""patch file is too long"""		45484	1					
ANR	45861	Argument	"""patch file is too long"""		45484	0					
ANR	45862	PrimaryExpression	"""patch file is too long"""		45484	0					
ANR	45863	ExpressionStatement	"next_intuit_at ( file_pos , 1 )"	165:4:5714:5742	45484	9	True				
ANR	45864	CallExpression	"next_intuit_at ( file_pos , 1 )"		45484	0					
ANR	45865	Callee	next_intuit_at		45484	0					
ANR	45866	Identifier	next_intuit_at		45484	0					
ANR	45867	ArgumentList	file_pos		45484	1					
ANR	45868	Argument	file_pos		45484	0					
ANR	45869	Identifier	file_pos		45484	0					
ANR	45870	Argument	1		45484	1					
ANR	45871	PrimaryExpression	1		45484	0					
ANR	45872	ReturnType	void		45484	1					
ANR	45873	Identifier	open_patch_file		45484	2					
ANR	45874	ParameterList	char const * filename		45484	3					
ANR	45875	Parameter	char const * filename	113:17:4211:4230	45484	0	True				
ANR	45876	ParameterType	char const *		45484	0					
ANR	45877	Identifier	filename		45484	1					
ANR	45878	CFGEntryNode	ENTRY		45484		True				
ANR	45879	CFGExitNode	EXIT		45484		True				
ANR	45880	Symbol	fflush		45484						
ANR	45881	Symbol	stdin		45484						
ANR	45882	Symbol	quotearg		45484						
ANR	45883	Symbol	O_BINARY		45484						
ANR	45884	Symbol	make_tempfile		45484						
ANR	45885	Symbol	& st		45484						
ANR	45886	Symbol	st . st_mode		45484						
ANR	45887	Symbol	fdopen		45484						
ANR	45888	Symbol	charsread		45484						
ANR	45889	Symbol	isatty		45484						
ANR	45890	Symbol	file_seek		45484						
ANR	45891	Symbol	p_filesize		45484						
ANR	45892	Symbol	O_RDWR		45484						
ANR	45893	Symbol	& TMPPATNAME		45484						
ANR	45894	Symbol	pos		45484						
ANR	45895	Symbol	strEQ		45484						
ANR	45896	Symbol	TMPPATNAME		45484						
ANR	45897	Symbol	TMPPATNAME_needs_removal		45484						
ANR	45898	Symbol	read_pfp		45484						
ANR	45899	Symbol	file_tell		45484						
ANR	45900	Symbol	SEEK_SET		45484						
ANR	45901	Symbol	st		45484						
ANR	45902	Symbol	fopen		45484						
ANR	45903	Symbol	NULL		45484						
ANR	45904	Symbol	fclose		45484						
ANR	45905	Symbol	bufsize		45484						
ANR	45906	Symbol	fstat		45484						
ANR	45907	Symbol	fwrite		45484						
ANR	45908	Symbol	fread		45484						
ANR	45909	Symbol	ferror		45484						
ANR	45910	Symbol	buf		45484						
ANR	45911	Symbol	filename		45484						
ANR	45912	Symbol	* filename		45484						
ANR	45913	Symbol	S_ISREG		45484						
ANR	45914	Symbol	st . st_size		45484						
ANR	45915	Symbol	fileno		45484						
ANR	45916	Symbol	true		45484						
ANR	45917	Symbol	pfp		45484						
ANR	45918	Symbol	binary_transput		45484						
ANR	45919	Symbol	file_pos		45484						
ANR	45920	Symbol	fd		45484						
ANR	45921	Function	set_hunkmax	170:0:5825:6044							
ANR	45922	FunctionDef	set_hunkmax ()		45921	0					
ANR	45923	CompoundStatement		172:0:5856:6044	45921	0					
ANR	45924	IfStatement	if ( ! p_line )		45921	0					
ANR	45925	Condition	! p_line	173:8:5866:5872	45921	0	True				
ANR	45926	UnaryOperationExpression	! p_line		45921	0					
ANR	45927	UnaryOperator	!		45921	0					
ANR	45928	Identifier	p_line		45921	1					
ANR	45929	ExpressionStatement	p_line = xmalloc ( hunkmax * sizeof * p_line )	174:1:5876:5919	45921	1	True				
ANR	45930	AssignmentExpression	p_line = xmalloc ( hunkmax * sizeof * p_line )		45921	0		=			
ANR	45931	Identifier	p_line		45921	0					
ANR	45932	CallExpression	xmalloc ( hunkmax * sizeof * p_line )		45921	1					
ANR	45933	Callee	xmalloc		45921	0					
ANR	45934	Identifier	xmalloc		45921	0					
ANR	45935	ArgumentList	hunkmax * sizeof * p_line		45921	1					
ANR	45936	Argument	hunkmax * sizeof * p_line		45921	0					
ANR	45937	MultiplicativeExpression	hunkmax * sizeof * p_line		45921	0		*			
ANR	45938	Identifier	hunkmax		45921	0					
ANR	45939	SizeofExpression	sizeof * p_line		45921	1					
ANR	45940	Sizeof	sizeof		45921	0					
ANR	45941	UnaryOperationExpression	* p_line		45921	1					
ANR	45942	UnaryOperator	*		45921	0					
ANR	45943	Identifier	p_line		45921	1					
ANR	45944	IfStatement	if ( ! p_len )		45921	1					
ANR	45945	Condition	! p_len	175:8:5929:5934	45921	0	True				
ANR	45946	UnaryOperationExpression	! p_len		45921	0					
ANR	45947	UnaryOperator	!		45921	0					
ANR	45948	Identifier	p_len		45921	1					
ANR	45949	ExpressionStatement	p_len = xmalloc ( hunkmax * sizeof * p_len )	176:1:5938:5979	45921	1	True				
ANR	45950	AssignmentExpression	p_len = xmalloc ( hunkmax * sizeof * p_len )		45921	0		=			
ANR	45951	Identifier	p_len		45921	0					
ANR	45952	CallExpression	xmalloc ( hunkmax * sizeof * p_len )		45921	1					
ANR	45953	Callee	xmalloc		45921	0					
ANR	45954	Identifier	xmalloc		45921	0					
ANR	45955	ArgumentList	hunkmax * sizeof * p_len		45921	1					
ANR	45956	Argument	hunkmax * sizeof * p_len		45921	0					
ANR	45957	MultiplicativeExpression	hunkmax * sizeof * p_len		45921	0		*			
ANR	45958	Identifier	hunkmax		45921	0					
ANR	45959	SizeofExpression	sizeof * p_len		45921	1					
ANR	45960	Sizeof	sizeof		45921	0					
ANR	45961	UnaryOperationExpression	* p_len		45921	1					
ANR	45962	UnaryOperator	*		45921	0					
ANR	45963	Identifier	p_len		45921	1					
ANR	45964	IfStatement	if ( ! p_Char )		45921	2					
ANR	45965	Condition	! p_Char	177:8:5989:5995	45921	0	True				
ANR	45966	UnaryOperationExpression	! p_Char		45921	0					
ANR	45967	UnaryOperator	!		45921	0					
ANR	45968	Identifier	p_Char		45921	1					
ANR	45969	ExpressionStatement	p_Char = xmalloc ( hunkmax * sizeof * p_Char )	178:1:5999:6042	45921	1	True				
ANR	45970	AssignmentExpression	p_Char = xmalloc ( hunkmax * sizeof * p_Char )		45921	0		=			
ANR	45971	Identifier	p_Char		45921	0					
ANR	45972	CallExpression	xmalloc ( hunkmax * sizeof * p_Char )		45921	1					
ANR	45973	Callee	xmalloc		45921	0					
ANR	45974	Identifier	xmalloc		45921	0					
ANR	45975	ArgumentList	hunkmax * sizeof * p_Char		45921	1					
ANR	45976	Argument	hunkmax * sizeof * p_Char		45921	0					
ANR	45977	MultiplicativeExpression	hunkmax * sizeof * p_Char		45921	0		*			
ANR	45978	Identifier	hunkmax		45921	0					
ANR	45979	SizeofExpression	sizeof * p_Char		45921	1					
ANR	45980	Sizeof	sizeof		45921	0					
ANR	45981	UnaryOperationExpression	* p_Char		45921	1					
ANR	45982	UnaryOperator	*		45921	0					
ANR	45983	Identifier	p_Char		45921	1					
ANR	45984	ReturnType	static void		45921	1					
ANR	45985	Identifier	set_hunkmax		45921	2					
ANR	45986	ParameterList			45921	3					
ANR	45987	CFGEntryNode	ENTRY		45921		True				
ANR	45988	CFGExitNode	EXIT		45921		True				
ANR	45989	Symbol	p_len		45921						
ANR	45990	Symbol	hunkmax		45921						
ANR	45991	Symbol	xmalloc		45921						
ANR	45992	Symbol	* p_len		45921						
ANR	45993	Symbol	* p_Char		45921						
ANR	45994	Symbol	p_Char		45921						
ANR	45995	Symbol	* p_line		45921						
ANR	45996	Symbol	p_line		45921						
ANR	45997	Function	grow_hunkmax	183:0:6111:6672							
ANR	45998	FunctionDef	grow_hunkmax ()		45997	0					
ANR	45999	CompoundStatement		185:0:6143:6672	45997	0					
ANR	46000	ExpressionStatement	hunkmax *= 2	186:4:6149:6161	45997	0	True				
ANR	46001	AssignmentExpression	hunkmax *= 2		45997	0		*=			
ANR	46002	Identifier	hunkmax		45997	0					
ANR	46003	PrimaryExpression	2		45997	1					
ANR	46004	ExpressionStatement	assert ( p_line && p_len && p_Char )	187:4:6167:6201	45997	1	True				
ANR	46005	CallExpression	assert ( p_line && p_len && p_Char )		45997	0					
ANR	46006	Callee	assert		45997	0					
ANR	46007	Identifier	assert		45997	0					
ANR	46008	ArgumentList	p_line && p_len && p_Char		45997	1					
ANR	46009	Argument	p_line && p_len && p_Char		45997	0					
ANR	46010	AndExpression	p_line && p_len && p_Char		45997	0		&&			
ANR	46011	Identifier	p_line		45997	0					
ANR	46012	AndExpression	p_len && p_Char		45997	1		&&			
ANR	46013	Identifier	p_len		45997	0					
ANR	46014	Identifier	p_Char		45997	1					
ANR	46015	IfStatement	"if ( ( p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) ) ) && ( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) ) )"		45997	2					
ANR	46016	Condition	"( p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) ) ) && ( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) )"	188:8:6211:6382	45997	0	True				
ANR	46017	AndExpression	"( p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) ) ) && ( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) )"		45997	0		&&			
ANR	46018	AssignmentExpression	"p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) )"		45997	0		=			
ANR	46019	Identifier	p_line		45997	0					
ANR	46020	CallExpression	"realloc ( p_line , hunkmax * sizeof ( * p_line ) )"		45997	1					
ANR	46021	Callee	realloc		45997	0					
ANR	46022	Identifier	realloc		45997	0					
ANR	46023	ArgumentList	p_line		45997	1					
ANR	46024	Argument	p_line		45997	0					
ANR	46025	Identifier	p_line		45997	0					
ANR	46026	Argument	hunkmax * sizeof ( * p_line )		45997	1					
ANR	46027	MultiplicativeExpression	hunkmax * sizeof ( * p_line )		45997	0		*			
ANR	46028	Identifier	hunkmax		45997	0					
ANR	46029	SizeofExpression	sizeof ( * p_line )		45997	1					
ANR	46030	Sizeof	sizeof		45997	0					
ANR	46031	UnaryOperationExpression	* p_line		45997	1					
ANR	46032	UnaryOperator	*		45997	0					
ANR	46033	Identifier	p_line		45997	1					
ANR	46034	AndExpression	"( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) )"		45997	1		&&			
ANR	46035	AssignmentExpression	"p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) )"		45997	0		=			
ANR	46036	Identifier	p_len		45997	0					
ANR	46037	CallExpression	"realloc ( p_len , hunkmax * sizeof ( * p_len ) )"		45997	1					
ANR	46038	Callee	realloc		45997	0					
ANR	46039	Identifier	realloc		45997	0					
ANR	46040	ArgumentList	p_len		45997	1					
ANR	46041	Argument	p_len		45997	0					
ANR	46042	Identifier	p_len		45997	0					
ANR	46043	Argument	hunkmax * sizeof ( * p_len )		45997	1					
ANR	46044	MultiplicativeExpression	hunkmax * sizeof ( * p_len )		45997	0		*			
ANR	46045	Identifier	hunkmax		45997	0					
ANR	46046	SizeofExpression	sizeof ( * p_len )		45997	1					
ANR	46047	Sizeof	sizeof		45997	0					
ANR	46048	UnaryOperationExpression	* p_len		45997	1					
ANR	46049	UnaryOperator	*		45997	0					
ANR	46050	Identifier	p_len		45997	1					
ANR	46051	AssignmentExpression	"p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) )"		45997	1		=			
ANR	46052	Identifier	p_Char		45997	0					
ANR	46053	CallExpression	"realloc ( p_Char , hunkmax * sizeof ( * p_Char ) )"		45997	1					
ANR	46054	Callee	realloc		45997	0					
ANR	46055	Identifier	realloc		45997	0					
ANR	46056	ArgumentList	p_Char		45997	1					
ANR	46057	Argument	p_Char		45997	0					
ANR	46058	Identifier	p_Char		45997	0					
ANR	46059	Argument	hunkmax * sizeof ( * p_Char )		45997	1					
ANR	46060	MultiplicativeExpression	hunkmax * sizeof ( * p_Char )		45997	0		*			
ANR	46061	Identifier	hunkmax		45997	0					
ANR	46062	SizeofExpression	sizeof ( * p_Char )		45997	1					
ANR	46063	Sizeof	sizeof		45997	0					
ANR	46064	UnaryOperationExpression	* p_Char		45997	1					
ANR	46065	UnaryOperator	*		45997	0					
ANR	46066	Identifier	p_Char		45997	1					
ANR	46067	ReturnStatement	return true ;	191:6:6391:6402	45997	1	True				
ANR	46068	Identifier	true		45997	0					
ANR	46069	IfStatement	if ( ! using_plan_a )		45997	3					
ANR	46070	Condition	! using_plan_a	192:8:6412:6424	45997	0	True				
ANR	46071	UnaryOperationExpression	! using_plan_a		45997	0					
ANR	46072	UnaryOperator	!		45997	0					
ANR	46073	Identifier	using_plan_a		45997	1					
ANR	46074	ExpressionStatement	xalloc_die ( )	193:6:6433:6446	45997	1	True				
ANR	46075	CallExpression	xalloc_die ( )		45997	0					
ANR	46076	Callee	xalloc_die		45997	0					
ANR	46077	Identifier	xalloc_die		45997	0					
ANR	46078	ArgumentList			45997	1					
ANR	46079	ReturnStatement	return false ;	198:4:6658:6670	45997	4	True				
ANR	46080	Identifier	false		45997	0					
ANR	46081	ReturnType	static bool		45997	1					
ANR	46082	Identifier	grow_hunkmax		45997	2					
ANR	46083	ParameterList			45997	3					
ANR	46084	CFGEntryNode	ENTRY		45997		True				
ANR	46085	CFGExitNode	EXIT		45997		True				
ANR	46086	Symbol	p_len		45997						
ANR	46087	Symbol	hunkmax		45997						
ANR	46088	Symbol	* p_len		45997						
ANR	46089	Symbol	true		45997						
ANR	46090	Symbol	false		45997						
ANR	46091	Symbol	* p_Char		45997						
ANR	46092	Symbol	realloc		45997						
ANR	46093	Symbol	p_Char		45997						
ANR	46094	Symbol	* p_line		45997						
ANR	46095	Symbol	using_plan_a		45997						
ANR	46096	Symbol	p_line		45997						
ANR	46097	Function	maybe_reverse	201:0:6675:7531							
ANR	46098	FunctionDef	"maybe_reverse (char const * name , bool nonexistent , bool is_empty)"		46097	0					
ANR	46099	CompoundStatement		203:0:6753:7531	46097	0					
ANR	46100	IdentifierDeclStatement	bool looks_reversed = ( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ] ;	204:2:6757:6832	46097	0	True				
ANR	46101	IdentifierDecl	looks_reversed = ( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ]		46097	0					
ANR	46102	IdentifierDeclType	bool		46097	0					
ANR	46103	Identifier	looks_reversed		46097	1					
ANR	46104	AssignmentExpression	looks_reversed = ( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ]		46097	2		=			
ANR	46105	Identifier	looks_reversed		46097	0					
ANR	46106	RelationalExpression	( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ]		46097	1		<			
ANR	46107	UnaryOperationExpression	! is_empty		46097	0					
ANR	46108	UnaryOperator	!		46097	0					
ANR	46109	Identifier	is_empty		46097	1					
ANR	46110	ArrayIndexing	p_says_nonexistent [ reverse ^ is_empty ]		46097	1					
ANR	46111	Identifier	p_says_nonexistent		46097	0					
ANR	46112	ExclusiveOrExpression	reverse ^ is_empty		46097	1		^			
ANR	46113	Identifier	reverse		46097	0					
ANR	46114	Identifier	is_empty		46097	1					
ANR	46115	IfStatement	if ( is_empty && p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2 )		46097	1					
ANR	46116	Condition	is_empty && p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2	208:6:6992:7113	46097	0	True				
ANR	46117	AndExpression	is_empty && p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2		46097	0		&&			
ANR	46118	Identifier	is_empty		46097	0					
ANR	46119	AndExpression	p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2		46097	1		&&			
ANR	46120	EqualityExpression	p_says_nonexistent [ reverse ^ nonexistent ] == 1		46097	0		==			
ANR	46121	ArrayIndexing	p_says_nonexistent [ reverse ^ nonexistent ]		46097	0					
ANR	46122	Identifier	p_says_nonexistent		46097	0					
ANR	46123	ExclusiveOrExpression	reverse ^ nonexistent		46097	1		^			
ANR	46124	Identifier	reverse		46097	0					
ANR	46125	Identifier	nonexistent		46097	1					
ANR	46126	PrimaryExpression	1		46097	1					
ANR	46127	EqualityExpression	p_says_nonexistent [ ! reverse ^ nonexistent ] == 2		46097	1		==			
ANR	46128	ArrayIndexing	p_says_nonexistent [ ! reverse ^ nonexistent ]		46097	0					
ANR	46129	Identifier	p_says_nonexistent		46097	0					
ANR	46130	ExclusiveOrExpression	! reverse ^ nonexistent		46097	1		^			
ANR	46131	UnaryOperationExpression	! reverse		46097	0					
ANR	46132	UnaryOperator	!		46097	0					
ANR	46133	Identifier	reverse		46097	1					
ANR	46134	Identifier	nonexistent		46097	1					
ANR	46135	PrimaryExpression	2		46097	1					
ANR	46136	ReturnStatement	return false ;	211:4:7120:7132	46097	1	True				
ANR	46137	Identifier	false		46097	0					
ANR	46138	IfStatement	if ( looks_reversed )		46097	2					
ANR	46139	Condition	looks_reversed	213:6:7141:7154	46097	0	True				
ANR	46140	Identifier	looks_reversed		46097	0					
ANR	46141	ExpressionStatement	"reverse ^= ok_to_reverse ( ""The next patch%s would %s the file %s,\\nwhich %s!"" , reverse ? "", when reversed,"" : """" , ( nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"" ) , quotearg ( name ) , ( nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"" ) )"	214:4:7161:7504	46097	1	True				
ANR	46142	AssignmentExpression	"reverse ^= ok_to_reverse ( ""The next patch%s would %s the file %s,\\nwhich %s!"" , reverse ? "", when reversed,"" : """" , ( nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"" ) , quotearg ( name ) , ( nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"" ) )"		46097	0		^=			
ANR	46143	Identifier	reverse		46097	0					
ANR	46144	CallExpression	"ok_to_reverse ( ""The next patch%s would %s the file %s,\\nwhich %s!"" , reverse ? "", when reversed,"" : """" , ( nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"" ) , quotearg ( name ) , ( nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"" ) )"		46097	1					
ANR	46145	Callee	ok_to_reverse		46097	0					
ANR	46146	Identifier	ok_to_reverse		46097	0					
ANR	46147	ArgumentList	"""The next patch%s would %s the file %s,\\nwhich %s!"""		46097	1					
ANR	46148	Argument	"""The next patch%s would %s the file %s,\\nwhich %s!"""		46097	0					
ANR	46149	PrimaryExpression	"""The next patch%s would %s the file %s,\\nwhich %s!"""		46097	0					
ANR	46150	Argument	"reverse ? "", when reversed,"" : """""		46097	1					
ANR	46151	ConditionalExpression	"reverse ? "", when reversed,"" : """""		46097	0					
ANR	46152	Condition	reverse		46097	0					
ANR	46153	Identifier	reverse		46097	0					
ANR	46154	PrimaryExpression	""", when reversed,"""		46097	1					
ANR	46155	PrimaryExpression	""""""		46097	2					
ANR	46156	Argument	"nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"""		46097	2					
ANR	46157	ConditionalExpression	"nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"""		46097	0					
ANR	46158	Condition	nonexistent		46097	0					
ANR	46159	Identifier	nonexistent		46097	0					
ANR	46160	PrimaryExpression	"""delete"""		46097	1					
ANR	46161	ConditionalExpression	"is_empty ? ""empty out"" : ""create"""		46097	2					
ANR	46162	Condition	is_empty		46097	0					
ANR	46163	Identifier	is_empty		46097	0					
ANR	46164	PrimaryExpression	"""empty out"""		46097	1					
ANR	46165	PrimaryExpression	"""create"""		46097	2					
ANR	46166	Argument	quotearg ( name )		46097	3					
ANR	46167	CallExpression	quotearg ( name )		46097	0					
ANR	46168	Callee	quotearg		46097	0					
ANR	46169	Identifier	quotearg		46097	0					
ANR	46170	ArgumentList	name		46097	1					
ANR	46171	Argument	name		46097	0					
ANR	46172	Identifier	name		46097	0					
ANR	46173	Argument	"nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"""		46097	4					
ANR	46174	ConditionalExpression	"nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"""		46097	0					
ANR	46175	Condition	nonexistent		46097	0					
ANR	46176	Identifier	nonexistent		46097	0					
ANR	46177	PrimaryExpression	"""does not exist"""		46097	1					
ANR	46178	ConditionalExpression	"is_empty ? ""is already empty"" : ""already exists"""		46097	2					
ANR	46179	Condition	is_empty		46097	0					
ANR	46180	Identifier	is_empty		46097	0					
ANR	46181	PrimaryExpression	"""is already empty"""		46097	1					
ANR	46182	PrimaryExpression	"""already exists"""		46097	2					
ANR	46183	ReturnStatement	return looks_reversed ;	224:2:7508:7529	46097	3	True				
ANR	46184	Identifier	looks_reversed		46097	0					
ANR	46185	ReturnType	static bool		46097	1					
ANR	46186	Identifier	maybe_reverse		46097	2					
ANR	46187	ParameterList	"char const * name , bool nonexistent , bool is_empty"		46097	3					
ANR	46188	Parameter	char const * name	202:15:6702:6717	46097	0	True				
ANR	46189	ParameterType	char const *		46097	0					
ANR	46190	Identifier	name		46097	1					
ANR	46191	Parameter	bool nonexistent	202:33:6720:6735	46097	1	True				
ANR	46192	ParameterType	bool		46097	0					
ANR	46193	Identifier	nonexistent		46097	1					
ANR	46194	Parameter	bool is_empty	202:51:6738:6750	46097	2	True				
ANR	46195	ParameterType	bool		46097	0					
ANR	46196	Identifier	is_empty		46097	1					
ANR	46197	CFGEntryNode	ENTRY		46097		True				
ANR	46198	CFGExitNode	EXIT		46097		True				
ANR	46199	Symbol	* reverse		46097						
ANR	46200	Symbol	quotearg		46097						
ANR	46201	Symbol	false		46097						
ANR	46202	Symbol	reverse		46097						
ANR	46203	Symbol	* is_empty		46097						
ANR	46204	Symbol	looks_reversed		46097						
ANR	46205	Symbol	* p_says_nonexistent		46097						
ANR	46206	Symbol	name		46097						
ANR	46207	Symbol	p_says_nonexistent		46097						
ANR	46208	Symbol	* nonexistent		46097						
ANR	46209	Symbol	is_empty		46097						
ANR	46210	Symbol	ok_to_reverse		46097						
ANR	46211	Symbol	nonexistent		46097						
ANR	46212	Function	there_is_another_patch	229:0:7611:10166							
ANR	46213	FunctionDef	"there_is_another_patch (bool need_header , mode_t * file_type)"		46212	0					
ANR	46214	CompoundStatement		231:0:7677:10166	46212	0					
ANR	46215	IfStatement	if ( p_base != 0 && p_base >= p_filesize )		46212	0					
ANR	46216	Condition	p_base != 0 && p_base >= p_filesize	232:8:7687:7721	46212	0	True				
ANR	46217	AndExpression	p_base != 0 && p_base >= p_filesize		46212	0		&&			
ANR	46218	EqualityExpression	p_base != 0		46212	0		!=			
ANR	46219	Identifier	p_base		46212	0					
ANR	46220	PrimaryExpression	0		46212	1					
ANR	46221	RelationalExpression	p_base >= p_filesize		46212	1		>=			
ANR	46222	Identifier	p_base		46212	0					
ANR	46223	Identifier	p_filesize		46212	1					
ANR	46224	CompoundStatement		2:45:46:46	46212	1					
ANR	46225	IfStatement	if ( verbosity == VERBOSE )		46212	0					
ANR	46226	Condition	verbosity == VERBOSE	233:5:7731:7750	46212	0	True				
ANR	46227	EqualityExpression	verbosity == VERBOSE		46212	0		==			
ANR	46228	Identifier	verbosity		46212	0					
ANR	46229	Identifier	VERBOSE		46212	1					
ANR	46230	ExpressionStatement	"say ( ""done\\n"" )"	234:5:7758:7772	46212	1	True				
ANR	46231	CallExpression	"say ( ""done\\n"" )"		46212	0					
ANR	46232	Callee	say		46212	0					
ANR	46233	Identifier	say		46212	0					
ANR	46234	ArgumentList	"""done\\n"""		46212	1					
ANR	46235	Argument	"""done\\n"""		46212	0					
ANR	46236	PrimaryExpression	"""done\\n"""		46212	0					
ANR	46237	ReturnStatement	return false ;	235:1:7775:7787	46212	1	True				
ANR	46238	Identifier	false		46212	0					
ANR	46239	IfStatement	if ( verbosity == VERBOSE )		46212	1					
ANR	46240	Condition	verbosity == VERBOSE	237:8:7803:7822	46212	0	True				
ANR	46241	EqualityExpression	verbosity == VERBOSE		46212	0		==			
ANR	46242	Identifier	verbosity		46212	0					
ANR	46243	Identifier	VERBOSE		46212	1					
ANR	46244	ExpressionStatement	"say ( ""Hmm..."" )"	238:1:7826:7840	46212	1	True				
ANR	46245	CallExpression	"say ( ""Hmm..."" )"		46212	0					
ANR	46246	Callee	say		46212	0					
ANR	46247	Identifier	say		46212	0					
ANR	46248	ArgumentList	"""Hmm..."""		46212	1					
ANR	46249	Argument	"""Hmm..."""		46212	0					
ANR	46250	PrimaryExpression	"""Hmm..."""		46212	0					
ANR	46251	ExpressionStatement	"diff_type = intuit_diff_type ( need_header , file_type )"	239:4:7846:7899	46212	2	True				
ANR	46252	AssignmentExpression	"diff_type = intuit_diff_type ( need_header , file_type )"		46212	0		=			
ANR	46253	Identifier	diff_type		46212	0					
ANR	46254	CallExpression	"intuit_diff_type ( need_header , file_type )"		46212	1					
ANR	46255	Callee	intuit_diff_type		46212	0					
ANR	46256	Identifier	intuit_diff_type		46212	0					
ANR	46257	ArgumentList	need_header		46212	1					
ANR	46258	Argument	need_header		46212	0					
ANR	46259	Identifier	need_header		46212	0					
ANR	46260	Argument	file_type		46212	1					
ANR	46261	Identifier	file_type		46212	0					
ANR	46262	IfStatement	if ( diff_type == NO_DIFF )		46212	3					
ANR	46263	Condition	diff_type == NO_DIFF	240:8:7909:7928	46212	0	True				
ANR	46264	EqualityExpression	diff_type == NO_DIFF		46212	0		==			
ANR	46265	Identifier	diff_type		46212	0					
ANR	46266	Identifier	NO_DIFF		46212	1					
ANR	46267	CompoundStatement		10:30:253:253	46212	1					
ANR	46268	IfStatement	if ( verbosity == VERBOSE )		46212	0					
ANR	46269	Condition	verbosity == VERBOSE	241:5:7938:7957	46212	0	True				
ANR	46270	EqualityExpression	verbosity == VERBOSE		46212	0		==			
ANR	46271	Identifier	verbosity		46212	0					
ANR	46272	Identifier	VERBOSE		46212	1					
ANR	46273	ExpressionStatement	"say ( p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"" )"	242:3:7963:8092	46212	1	True				
ANR	46274	CallExpression	"say ( p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"" )"		46212	0					
ANR	46275	Callee	say		46212	0					
ANR	46276	Identifier	say		46212	0					
ANR	46277	ArgumentList	"p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"""		46212	1					
ANR	46278	Argument	"p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"""		46212	0					
ANR	46279	ConditionalExpression	"p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"""		46212	0					
ANR	46280	Condition	p_base		46212	0					
ANR	46281	Identifier	p_base		46212	0					
ANR	46282	PrimaryExpression	"""  Ignoring the trailing garbage.\\ndone\\n"""		46212	1					
ANR	46283	PrimaryExpression	"""  I can't seem to find a patch in there anywhere.\\n"""		46212	2					
ANR	46284	IfStatement	if ( ! p_base && p_filesize )		46212	1					
ANR	46285	Condition	! p_base && p_filesize	245:5:8099:8120	46212	0	True				
ANR	46286	AndExpression	! p_base && p_filesize		46212	0		&&			
ANR	46287	UnaryOperationExpression	! p_base		46212	0					
ANR	46288	UnaryOperator	!		46212	0					
ANR	46289	Identifier	p_base		46212	1					
ANR	46290	Identifier	p_filesize		46212	1					
ANR	46291	ExpressionStatement	"fatal ( ""Only garbage was found in the patch input."" )"	246:3:8126:8178	46212	1	True				
ANR	46292	CallExpression	"fatal ( ""Only garbage was found in the patch input."" )"		46212	0					
ANR	46293	Callee	fatal		46212	0					
ANR	46294	Identifier	fatal		46212	0					
ANR	46295	ArgumentList	"""Only garbage was found in the patch input."""		46212	1					
ANR	46296	Argument	"""Only garbage was found in the patch input."""		46212	0					
ANR	46297	PrimaryExpression	"""Only garbage was found in the patch input."""		46212	0					
ANR	46298	ReturnStatement	return false ;	247:1:8181:8193	46212	2	True				
ANR	46299	Identifier	false		46212	0					
ANR	46300	IfStatement	if ( skip_rest_of_patch )		46212	4					
ANR	46301	Condition	skip_rest_of_patch	249:8:8209:8226	46212	0	True				
ANR	46302	Identifier	skip_rest_of_patch		46212	0					
ANR	46303	CompoundStatement		20:6:557:557	46212	1					
ANR	46304	ExpressionStatement	"Fseek ( pfp , p_start , SEEK_SET )"	251:1:8238:8268	46212	0	True				
ANR	46305	CallExpression	"Fseek ( pfp , p_start , SEEK_SET )"		46212	0					
ANR	46306	Callee	Fseek		46212	0					
ANR	46307	Identifier	Fseek		46212	0					
ANR	46308	ArgumentList	pfp		46212	1					
ANR	46309	Argument	pfp		46212	0					
ANR	46310	Identifier	pfp		46212	0					
ANR	46311	Argument	p_start		46212	1					
ANR	46312	Identifier	p_start		46212	0					
ANR	46313	Argument	SEEK_SET		46212	2					
ANR	46314	Identifier	SEEK_SET		46212	0					
ANR	46315	ExpressionStatement	p_input_line = p_sline - 1	252:1:8271:8297	46212	1	True				
ANR	46316	AssignmentExpression	p_input_line = p_sline - 1		46212	0		=			
ANR	46317	Identifier	p_input_line		46212	0					
ANR	46318	AdditiveExpression	p_sline - 1		46212	1		-			
ANR	46319	Identifier	p_sline		46212	0					
ANR	46320	PrimaryExpression	1		46212	1					
ANR	46321	ReturnStatement	return true ;	253:1:8300:8311	46212	2	True				
ANR	46322	Identifier	true		46212	0					
ANR	46323	IfStatement	if ( verbosity == VERBOSE )		46212	5					
ANR	46324	Condition	verbosity == VERBOSE	255:8:8329:8348	46212	0	True				
ANR	46325	EqualityExpression	verbosity == VERBOSE		46212	0		==			
ANR	46326	Identifier	verbosity		46212	0					
ANR	46327	Identifier	VERBOSE		46212	1					
ANR	46328	ExpressionStatement	"say ( ""  %sooks like %s to me...\\n"" , ( p_base == 0 ? ""L"" : ""The next patch l"" ) , diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"" )"	256:1:8352:8730	46212	1	True				
ANR	46329	CallExpression	"say ( ""  %sooks like %s to me...\\n"" , ( p_base == 0 ? ""L"" : ""The next patch l"" ) , diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"" )"		46212	0					
ANR	46330	Callee	say		46212	0					
ANR	46331	Identifier	say		46212	0					
ANR	46332	ArgumentList	"""  %sooks like %s to me...\\n"""		46212	1					
ANR	46333	Argument	"""  %sooks like %s to me...\\n"""		46212	0					
ANR	46334	PrimaryExpression	"""  %sooks like %s to me...\\n"""		46212	0					
ANR	46335	Argument	"p_base == 0 ? ""L"" : ""The next patch l"""		46212	1					
ANR	46336	ConditionalExpression	"p_base == 0 ? ""L"" : ""The next patch l"""		46212	0					
ANR	46337	Condition	p_base == 0		46212	0					
ANR	46338	EqualityExpression	p_base == 0		46212	0		==			
ANR	46339	Identifier	p_base		46212	0					
ANR	46340	PrimaryExpression	0		46212	1					
ANR	46341	PrimaryExpression	"""L"""		46212	1					
ANR	46342	PrimaryExpression	"""The next patch l"""		46212	2					
ANR	46343	Argument	"diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		46212	2					
ANR	46344	ConditionalExpression	"diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		46212	0					
ANR	46345	Condition	diff_type == UNI_DIFF		46212	0					
ANR	46346	EqualityExpression	diff_type == UNI_DIFF		46212	0		==			
ANR	46347	Identifier	diff_type		46212	0					
ANR	46348	Identifier	UNI_DIFF		46212	1					
ANR	46349	PrimaryExpression	"""a unified diff"""		46212	1					
ANR	46350	ConditionalExpression	"diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		46212	2					
ANR	46351	Condition	diff_type == CONTEXT_DIFF		46212	0					
ANR	46352	EqualityExpression	diff_type == CONTEXT_DIFF		46212	0		==			
ANR	46353	Identifier	diff_type		46212	0					
ANR	46354	Identifier	CONTEXT_DIFF		46212	1					
ANR	46355	PrimaryExpression	"""a context diff"""		46212	1					
ANR	46356	ConditionalExpression	"diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		46212	2					
ANR	46357	Condition	diff_type == NEW_CONTEXT_DIFF		46212	0					
ANR	46358	EqualityExpression	diff_type == NEW_CONTEXT_DIFF		46212	0		==			
ANR	46359	Identifier	diff_type		46212	0					
ANR	46360	Identifier	NEW_CONTEXT_DIFF		46212	1					
ANR	46361	PrimaryExpression	"""a new-style context diff"""		46212	1					
ANR	46362	ConditionalExpression	"diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		46212	2					
ANR	46363	Condition	diff_type == NORMAL_DIFF		46212	0					
ANR	46364	EqualityExpression	diff_type == NORMAL_DIFF		46212	0		==			
ANR	46365	Identifier	diff_type		46212	0					
ANR	46366	Identifier	NORMAL_DIFF		46212	1					
ANR	46367	PrimaryExpression	"""a normal diff"""		46212	1					
ANR	46368	ConditionalExpression	"diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		46212	2					
ANR	46369	Condition	diff_type == GIT_BINARY_DIFF		46212	0					
ANR	46370	EqualityExpression	diff_type == GIT_BINARY_DIFF		46212	0		==			
ANR	46371	Identifier	diff_type		46212	0					
ANR	46372	Identifier	GIT_BINARY_DIFF		46212	1					
ANR	46373	PrimaryExpression	"""a git binary diff"""		46212	1					
ANR	46374	PrimaryExpression	"""an ed script"""		46212	2					
ANR	46375	IfStatement	if ( no_strip_trailing_cr )		46212	6					
ANR	46376	Condition	no_strip_trailing_cr	265:8:8741:8760	46212	0	True				
ANR	46377	Identifier	no_strip_trailing_cr		46212	0					
ANR	46378	ExpressionStatement	p_strip_trailing_cr = false	266:6:8769:8796	46212	1	True				
ANR	46379	AssignmentExpression	p_strip_trailing_cr = false		46212	0		=			
ANR	46380	Identifier	p_strip_trailing_cr		46212	0					
ANR	46381	Identifier	false		46212	1					
ANR	46382	IfStatement	if ( verbosity != SILENT )		46212	7					
ANR	46383	Condition	verbosity != SILENT	268:8:8807:8825	46212	0	True				
ANR	46384	EqualityExpression	verbosity != SILENT		46212	0		!=			
ANR	46385	Identifier	verbosity		46212	0					
ANR	46386	Identifier	SILENT		46212	1					
ANR	46387	CompoundStatement		39:6:1156:1156	46212	1					
ANR	46388	IfStatement	if ( p_indent )		46212	0					
ANR	46389	Condition	p_indent	270:5:8841:8848	46212	0	True				
ANR	46390	Identifier	p_indent		46212	0					
ANR	46391	ExpressionStatement	"say ( ""(Patch is indented %lu space%s.)\\n"" , ( unsigned long int ) p_indent , p_indent == 1 ? """" : ""s"" )"	271:3:8854:8954	46212	1	True				
ANR	46392	CallExpression	"say ( ""(Patch is indented %lu space%s.)\\n"" , ( unsigned long int ) p_indent , p_indent == 1 ? """" : ""s"" )"		46212	0					
ANR	46393	Callee	say		46212	0					
ANR	46394	Identifier	say		46212	0					
ANR	46395	ArgumentList	"""(Patch is indented %lu space%s.)\\n"""		46212	1					
ANR	46396	Argument	"""(Patch is indented %lu space%s.)\\n"""		46212	0					
ANR	46397	PrimaryExpression	"""(Patch is indented %lu space%s.)\\n"""		46212	0					
ANR	46398	Argument	( unsigned long int ) p_indent		46212	1					
ANR	46399	CastExpression	( unsigned long int ) p_indent		46212	0					
ANR	46400	CastTarget	unsigned long int		46212	0					
ANR	46401	Identifier	p_indent		46212	1					
ANR	46402	Argument	"p_indent == 1 ? """" : ""s"""		46212	2					
ANR	46403	ConditionalExpression	"p_indent == 1 ? """" : ""s"""		46212	0					
ANR	46404	Condition	p_indent == 1		46212	0					
ANR	46405	EqualityExpression	p_indent == 1		46212	0		==			
ANR	46406	Identifier	p_indent		46212	0					
ANR	46407	PrimaryExpression	1		46212	1					
ANR	46408	PrimaryExpression	""""""		46212	1					
ANR	46409	PrimaryExpression	"""s"""		46212	2					
ANR	46410	IfStatement	if ( p_strip_trailing_cr )		46212	1					
ANR	46411	Condition	p_strip_trailing_cr	273:5:8961:8979	46212	0	True				
ANR	46412	Identifier	p_strip_trailing_cr		46212	0					
ANR	46413	ExpressionStatement	"say ( ""(Stripping trailing CRs from patch; use --binary to disable.)\\n"" )"	274:3:8985:9056	46212	1	True				
ANR	46414	CallExpression	"say ( ""(Stripping trailing CRs from patch; use --binary to disable.)\\n"" )"		46212	0					
ANR	46415	Callee	say		46212	0					
ANR	46416	Identifier	say		46212	0					
ANR	46417	ArgumentList	"""(Stripping trailing CRs from patch; use --binary to disable.)\\n"""		46212	1					
ANR	46418	Argument	"""(Stripping trailing CRs from patch; use --binary to disable.)\\n"""		46212	0					
ANR	46419	PrimaryExpression	"""(Stripping trailing CRs from patch; use --binary to disable.)\\n"""		46212	0					
ANR	46420	IfStatement	if ( ! inname )		46212	2					
ANR	46421	Condition	! inname	275:5:9063:9070	46212	0	True				
ANR	46422	UnaryOperationExpression	! inname		46212	0					
ANR	46423	UnaryOperator	!		46212	0					
ANR	46424	Identifier	inname		46212	1					
ANR	46425	CompoundStatement		47:5:1405:1442	46212	1					
ANR	46426	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	277:5:9083:9120	46212	0	True				
ANR	46427	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		46212	0					
ANR	46428	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		46212	0					
ANR	46429	Identifier	numbuf		46212	1					
ANR	46430	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		46212	2		+			
ANR	46431	Identifier	LINENUM_LENGTH_BOUND		46212	0					
ANR	46432	PrimaryExpression	1		46212	1					
ANR	46433	ExpressionStatement	"say ( ""can't find file to patch at input line %s\\n"" , format_linenum ( numbuf , p_sline ) )"	278:5:9127:9215	46212	1	True				
ANR	46434	CallExpression	"say ( ""can't find file to patch at input line %s\\n"" , format_linenum ( numbuf , p_sline ) )"		46212	0					
ANR	46435	Callee	say		46212	0					
ANR	46436	Identifier	say		46212	0					
ANR	46437	ArgumentList	"""can't find file to patch at input line %s\\n"""		46212	1					
ANR	46438	Argument	"""can't find file to patch at input line %s\\n"""		46212	0					
ANR	46439	PrimaryExpression	"""can't find file to patch at input line %s\\n"""		46212	0					
ANR	46440	Argument	"format_linenum ( numbuf , p_sline )"		46212	1					
ANR	46441	CallExpression	"format_linenum ( numbuf , p_sline )"		46212	0					
ANR	46442	Callee	format_linenum		46212	0					
ANR	46443	Identifier	format_linenum		46212	0					
ANR	46444	ArgumentList	numbuf		46212	1					
ANR	46445	Argument	numbuf		46212	0					
ANR	46446	Identifier	numbuf		46212	0					
ANR	46447	Argument	p_sline		46212	1					
ANR	46448	Identifier	p_sline		46212	0					
ANR	46449	IfStatement	if ( diff_type != ED_DIFF && diff_type != NORMAL_DIFF )		46212	2					
ANR	46450	Condition	diff_type != ED_DIFF && diff_type != NORMAL_DIFF	280:9:9226:9273	46212	0	True				
ANR	46451	AndExpression	diff_type != ED_DIFF && diff_type != NORMAL_DIFF		46212	0		&&			
ANR	46452	EqualityExpression	diff_type != ED_DIFF		46212	0		!=			
ANR	46453	Identifier	diff_type		46212	0					
ANR	46454	Identifier	ED_DIFF		46212	1					
ANR	46455	EqualityExpression	diff_type != NORMAL_DIFF		46212	1		!=			
ANR	46456	Identifier	diff_type		46212	0					
ANR	46457	Identifier	NORMAL_DIFF		46212	1					
ANR	46458	ExpressionStatement	"say ( strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"" )"	281:7:9283:9430	46212	1	True				
ANR	46459	CallExpression	"say ( strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"" )"		46212	0					
ANR	46460	Callee	say		46212	0					
ANR	46461	Identifier	say		46212	0					
ANR	46462	ArgumentList	"strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"""		46212	1					
ANR	46463	Argument	"strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"""		46212	0					
ANR	46464	ConditionalExpression	"strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"""		46212	0					
ANR	46465	Condition	strippath == - 1		46212	0					
ANR	46466	EqualityExpression	strippath == - 1		46212	0		==			
ANR	46467	Identifier	strippath		46212	0					
ANR	46468	UnaryOperationExpression	- 1		46212	1					
ANR	46469	UnaryOperator	-		46212	0					
ANR	46470	PrimaryExpression	1		46212	1					
ANR	46471	PrimaryExpression	"""Perhaps you should have used the -p or --strip option?\\n"""		46212	1					
ANR	46472	PrimaryExpression	"""Perhaps you used the wrong -p or --strip option?\\n"""		46212	2					
ANR	46473	ExpressionStatement	"skip_to ( p_start , p_sline )"	287:4:9450:9474	46212	8	True				
ANR	46474	CallExpression	"skip_to ( p_start , p_sline )"		46212	0					
ANR	46475	Callee	skip_to		46212	0					
ANR	46476	Identifier	skip_to		46212	0					
ANR	46477	ArgumentList	p_start		46212	1					
ANR	46478	Argument	p_start		46212	0					
ANR	46479	Identifier	p_start		46212	0					
ANR	46480	Argument	p_sline		46212	1					
ANR	46481	Identifier	p_sline		46212	0					
ANR	46482	WhileStatement	while ( ! inname )		46212	9					
ANR	46483	Condition	! inname	288:11:9487:9493	46212	0	True				
ANR	46484	UnaryOperationExpression	! inname		46212	0					
ANR	46485	UnaryOperator	!		46212	0					
ANR	46486	Identifier	inname		46212	1					
ANR	46487	CompoundStatement		59:1:1821:1828	46212	1					
ANR	46488	IdentifierDeclStatement	char * t ;	289:1:9499:9506	46212	0	True				
ANR	46489	IdentifierDecl	* t		46212	0					
ANR	46490	IdentifierDeclType	char *		46212	0					
ANR	46491	Identifier	t		46212	1					
ANR	46492	IfStatement	if ( force | batch )		46212	1					
ANR	46493	Condition	force | batch	290:5:9513:9525	46212	0	True				
ANR	46494	InclusiveOrExpression	force | batch		46212	0		|			
ANR	46495	Identifier	force		46212	0					
ANR	46496	Identifier	batch		46212	1					
ANR	46497	CompoundStatement		60:20:1850:1850	46212	1					
ANR	46498	ExpressionStatement	"say ( ""No file to patch.  Skipping patch.\\n"" )"	291:5:9535:9579	46212	0	True				
ANR	46499	CallExpression	"say ( ""No file to patch.  Skipping patch.\\n"" )"		46212	0					
ANR	46500	Callee	say		46212	0					
ANR	46501	Identifier	say		46212	0					
ANR	46502	ArgumentList	"""No file to patch.  Skipping patch.\\n"""		46212	1					
ANR	46503	Argument	"""No file to patch.  Skipping patch.\\n"""		46212	0					
ANR	46504	PrimaryExpression	"""No file to patch.  Skipping patch.\\n"""		46212	0					
ANR	46505	ExpressionStatement	skip_rest_of_patch = true	292:5:9586:9611	46212	1	True				
ANR	46506	AssignmentExpression	skip_rest_of_patch = true		46212	0		=			
ANR	46507	Identifier	skip_rest_of_patch		46212	0					
ANR	46508	Identifier	true		46212	1					
ANR	46509	ReturnStatement	return true ;	293:5:9618:9629	46212	2	True				
ANR	46510	Identifier	true		46212	0					
ANR	46511	ExpressionStatement	"ask ( ""File to patch: "" )"	295:1:9635:9658	46212	2	True				
ANR	46512	CallExpression	"ask ( ""File to patch: "" )"		46212	0					
ANR	46513	Callee	ask		46212	0					
ANR	46514	Identifier	ask		46212	0					
ANR	46515	ArgumentList	"""File to patch: """		46212	1					
ANR	46516	Argument	"""File to patch: """		46212	0					
ANR	46517	PrimaryExpression	"""File to patch: """		46212	0					
ANR	46518	ExpressionStatement	t = buf + strlen ( buf )	296:1:9661:9683	46212	3	True				
ANR	46519	AssignmentExpression	t = buf + strlen ( buf )		46212	0		=			
ANR	46520	Identifier	t		46212	0					
ANR	46521	AdditiveExpression	buf + strlen ( buf )		46212	1		+			
ANR	46522	Identifier	buf		46212	0					
ANR	46523	CallExpression	strlen ( buf )		46212	1					
ANR	46524	Callee	strlen		46212	0					
ANR	46525	Identifier	strlen		46212	0					
ANR	46526	ArgumentList	buf		46212	1					
ANR	46527	Argument	buf		46212	0					
ANR	46528	Identifier	buf		46212	0					
ANR	46529	IfStatement	if ( t > buf + 1 && * ( t - 1 ) == '\\n' )		46212	4					
ANR	46530	Condition	t > buf + 1 && * ( t - 1 ) == '\\n'	297:5:9690:9720	46212	0	True				
ANR	46531	AndExpression	t > buf + 1 && * ( t - 1 ) == '\\n'		46212	0		&&			
ANR	46532	RelationalExpression	t > buf + 1		46212	0		>			
ANR	46533	Identifier	t		46212	0					
ANR	46534	AdditiveExpression	buf + 1		46212	1		+			
ANR	46535	Identifier	buf		46212	0					
ANR	46536	PrimaryExpression	1		46212	1					
ANR	46537	EqualityExpression	* ( t - 1 ) == '\\n'		46212	1		==			
ANR	46538	UnaryOperationExpression	* ( t - 1 )		46212	0					
ANR	46539	UnaryOperator	*		46212	0					
ANR	46540	AdditiveExpression	t - 1		46212	1		-			
ANR	46541	Identifier	t		46212	0					
ANR	46542	PrimaryExpression	1		46212	1					
ANR	46543	PrimaryExpression	'\\n'		46212	1					
ANR	46544	CompoundStatement		68:3:2048:2048	46212	1					
ANR	46545	ExpressionStatement	"inname = xmemdup0 ( buf , t - buf - 1 )"	299:5:9733:9769	46212	0	True				
ANR	46546	AssignmentExpression	"inname = xmemdup0 ( buf , t - buf - 1 )"		46212	0		=			
ANR	46547	Identifier	inname		46212	0					
ANR	46548	CallExpression	"xmemdup0 ( buf , t - buf - 1 )"		46212	1					
ANR	46549	Callee	xmemdup0		46212	0					
ANR	46550	Identifier	xmemdup0		46212	0					
ANR	46551	ArgumentList	buf		46212	1					
ANR	46552	Argument	buf		46212	0					
ANR	46553	Identifier	buf		46212	0					
ANR	46554	Argument	t - buf - 1		46212	1					
ANR	46555	AdditiveExpression	t - buf - 1		46212	0		-			
ANR	46556	Identifier	t		46212	0					
ANR	46557	AdditiveExpression	buf - 1		46212	1		-			
ANR	46558	Identifier	buf		46212	0					
ANR	46559	PrimaryExpression	1		46212	1					
ANR	46560	ExpressionStatement	"inerrno = stat_file ( inname , & instat )"	300:5:9776:9813	46212	1	True				
ANR	46561	AssignmentExpression	"inerrno = stat_file ( inname , & instat )"		46212	0		=			
ANR	46562	Identifier	inerrno		46212	0					
ANR	46563	CallExpression	"stat_file ( inname , & instat )"		46212	1					
ANR	46564	Callee	stat_file		46212	0					
ANR	46565	Identifier	stat_file		46212	0					
ANR	46566	ArgumentList	inname		46212	1					
ANR	46567	Argument	inname		46212	0					
ANR	46568	Identifier	inname		46212	0					
ANR	46569	Argument	& instat		46212	1					
ANR	46570	UnaryOperationExpression	& instat		46212	0					
ANR	46571	UnaryOperator	&		46212	0					
ANR	46572	Identifier	instat		46212	1					
ANR	46573	IfStatement	if ( inerrno )		46212	2					
ANR	46574	Condition	inerrno	301:9:9824:9830	46212	0	True				
ANR	46575	Identifier	inerrno		46212	0					
ANR	46576	CompoundStatement		72:7:2162:2162	46212	1					
ANR	46577	ExpressionStatement	perror ( inname )	303:2:9844:9859	46212	0	True				
ANR	46578	CallExpression	perror ( inname )		46212	0					
ANR	46579	Callee	perror		46212	0					
ANR	46580	Identifier	perror		46212	0					
ANR	46581	ArgumentList	inname		46212	1					
ANR	46582	Argument	inname		46212	0					
ANR	46583	Identifier	inname		46212	0					
ANR	46584	ExpressionStatement	fflush ( stderr )	304:2:9863:9878	46212	1	True				
ANR	46585	CallExpression	fflush ( stderr )		46212	0					
ANR	46586	Callee	fflush		46212	0					
ANR	46587	Identifier	fflush		46212	0					
ANR	46588	ArgumentList	stderr		46212	1					
ANR	46589	Argument	stderr		46212	0					
ANR	46590	Identifier	stderr		46212	0					
ANR	46591	ExpressionStatement	free ( inname )	305:2:9882:9895	46212	2	True				
ANR	46592	CallExpression	free ( inname )		46212	0					
ANR	46593	Callee	free		46212	0					
ANR	46594	Identifier	free		46212	0					
ANR	46595	ArgumentList	inname		46212	1					
ANR	46596	Argument	inname		46212	0					
ANR	46597	Identifier	inname		46212	0					
ANR	46598	ExpressionStatement	inname = 0	306:2:9899:9909	46212	3	True				
ANR	46599	AssignmentExpression	inname = 0		46212	0		=			
ANR	46600	Identifier	inname		46212	0					
ANR	46601	PrimaryExpression	0		46212	1					
ANR	46602	ElseStatement	else		46212	0					
ANR	46603	ExpressionStatement	invc = - 1	309:7:9937:9946	46212	0	True				
ANR	46604	AssignmentExpression	invc = - 1		46212	0		=			
ANR	46605	Identifier	invc		46212	0					
ANR	46606	UnaryOperationExpression	- 1		46212	1					
ANR	46607	UnaryOperator	-		46212	0					
ANR	46608	PrimaryExpression	1		46212	1					
ANR	46609	IfStatement	if ( ! inname )		46212	5					
ANR	46610	Condition	! inname	311:5:9958:9964	46212	0	True				
ANR	46611	UnaryOperationExpression	! inname		46212	0					
ANR	46612	UnaryOperator	!		46212	0					
ANR	46613	Identifier	inname		46212	1					
ANR	46614	CompoundStatement		81:14:2289:2289	46212	1					
ANR	46615	ExpressionStatement	"ask ( ""Skip this patch? [y] "" )"	312:5:9974:10003	46212	0	True				
ANR	46616	CallExpression	"ask ( ""Skip this patch? [y] "" )"		46212	0					
ANR	46617	Callee	ask		46212	0					
ANR	46618	Identifier	ask		46212	0					
ANR	46619	ArgumentList	"""Skip this patch? [y] """		46212	1					
ANR	46620	Argument	"""Skip this patch? [y] """		46212	0					
ANR	46621	PrimaryExpression	"""Skip this patch? [y] """		46212	0					
ANR	46622	IfStatement	if ( * buf != 'n' )		46212	1					
ANR	46623	Condition	* buf != 'n'	313:9:10014:10024	46212	0	True				
ANR	46624	EqualityExpression	* buf != 'n'		46212	0		!=			
ANR	46625	UnaryOperationExpression	* buf		46212	0					
ANR	46626	UnaryOperator	*		46212	0					
ANR	46627	Identifier	buf		46212	1					
ANR	46628	PrimaryExpression	'n'		46212	1					
ANR	46629	CompoundStatement		83:22:2349:2349	46212	1					
ANR	46630	IfStatement	if ( verbosity != SILENT )		46212	0					
ANR	46631	Condition	verbosity != SILENT	314:6:10035:10053	46212	0	True				
ANR	46632	EqualityExpression	verbosity != SILENT		46212	0		!=			
ANR	46633	Identifier	verbosity		46212	0					
ANR	46634	Identifier	SILENT		46212	1					
ANR	46635	ExpressionStatement	"say ( ""Skipping patch.\\n"" )"	315:6:10062:10087	46212	1	True				
ANR	46636	CallExpression	"say ( ""Skipping patch.\\n"" )"		46212	0					
ANR	46637	Callee	say		46212	0					
ANR	46638	Identifier	say		46212	0					
ANR	46639	ArgumentList	"""Skipping patch.\\n"""		46212	1					
ANR	46640	Argument	"""Skipping patch.\\n"""		46212	0					
ANR	46641	PrimaryExpression	"""Skipping patch.\\n"""		46212	0					
ANR	46642	ExpressionStatement	skip_rest_of_patch = true	316:2:10091:10116	46212	1	True				
ANR	46643	AssignmentExpression	skip_rest_of_patch = true		46212	0		=			
ANR	46644	Identifier	skip_rest_of_patch		46212	0					
ANR	46645	Identifier	true		46212	1					
ANR	46646	ReturnStatement	return true ;	317:2:10120:10131	46212	2	True				
ANR	46647	Identifier	true		46212	0					
ANR	46648	ReturnStatement	return true ;	321:4:10153:10164	46212	10	True				
ANR	46649	Identifier	true		46212	0					
ANR	46650	ReturnType	bool		46212	1					
ANR	46651	Identifier	there_is_another_patch		46212	2					
ANR	46652	ParameterList	"bool need_header , mode_t * file_type"		46212	3					
ANR	46653	Parameter	bool need_header	230:24:7640:7655	46212	0	True				
ANR	46654	ParameterType	bool		46212	0					
ANR	46655	Identifier	need_header		46212	1					
ANR	46656	Parameter	mode_t * file_type	230:42:7658:7674	46212	1	True				
ANR	46657	ParameterType	mode_t *		46212	0					
ANR	46658	Identifier	file_type		46212	1					
ANR	46659	CFGEntryNode	ENTRY		46212		True				
ANR	46660	CFGExitNode	EXIT		46212		True				
ANR	46661	Symbol	p_input_line		46212						
ANR	46662	Symbol	UNI_DIFF		46212						
ANR	46663	Symbol	p_sline		46212						
ANR	46664	Symbol	no_strip_trailing_cr		46212						
ANR	46665	Symbol	p_indent		46212						
ANR	46666	Symbol	p_base		46212						
ANR	46667	Symbol	inerrno		46212						
ANR	46668	Symbol	intuit_diff_type		46212						
ANR	46669	Symbol	NO_DIFF		46212						
ANR	46670	Symbol	need_header		46212						
ANR	46671	Symbol	p_strip_trailing_cr		46212						
ANR	46672	Symbol	p_filesize		46212						
ANR	46673	Symbol	format_linenum		46212						
ANR	46674	Symbol	strlen		46212						
ANR	46675	Symbol	NEW_CONTEXT_DIFF		46212						
ANR	46676	Symbol	file_type		46212						
ANR	46677	Symbol	& instat		46212						
ANR	46678	Symbol	ED_DIFF		46212						
ANR	46679	Symbol	CONTEXT_DIFF		46212						
ANR	46680	Symbol	stat_file		46212						
ANR	46681	Symbol	VERBOSE		46212						
ANR	46682	Symbol	GIT_BINARY_DIFF		46212						
ANR	46683	Symbol	inname		46212						
ANR	46684	Symbol	SILENT		46212						
ANR	46685	Symbol	SEEK_SET		46212						
ANR	46686	Symbol	* buf		46212						
ANR	46687	Symbol	NORMAL_DIFF		46212						
ANR	46688	Symbol	invc		46212						
ANR	46689	Symbol	diff_type		46212						
ANR	46690	Symbol	strippath		46212						
ANR	46691	Symbol	false		46212						
ANR	46692	Symbol	batch		46212						
ANR	46693	Symbol	* ( t - 1 )		46212						
ANR	46694	Symbol	stderr		46212						
ANR	46695	Symbol	p_start		46212						
ANR	46696	Symbol	buf		46212						
ANR	46697	Symbol	xmemdup0		46212						
ANR	46698	Symbol	t		46212						
ANR	46699	Symbol	numbuf		46212						
ANR	46700	Symbol	skip_rest_of_patch		46212						
ANR	46701	Symbol	true		46212						
ANR	46702	Symbol	force		46212						
ANR	46703	Symbol	pfp		46212						
ANR	46704	Symbol	verbosity		46212						
ANR	46705	Symbol	* t		46212						
ANR	46706	Function	fetchmode	324:0:10169:10778							
ANR	46707	FunctionDef	fetchmode (char const * str)		46706	0					
ANR	46708	CompoundStatement		326:0:10230:10778	46706	0					
ANR	46709	IdentifierDeclStatement	const char * s ;	327:3:10235:10248	46706	0	True				
ANR	46710	IdentifierDecl	* s		46706	0					
ANR	46711	IdentifierDeclType	const char *		46706	0					
ANR	46712	Identifier	s		46706	1					
ANR	46713	IdentifierDeclStatement	mode_t mode ;	328:3:10253:10264	46706	1	True				
ANR	46714	IdentifierDecl	mode		46706	0					
ANR	46715	IdentifierDeclType	mode_t		46706	0					
ANR	46716	Identifier	mode		46706	1					
ANR	46717	WhileStatement	while ( ISSPACE ( ( unsigned char ) * str ) )		46706	2					
ANR	46718	Condition	ISSPACE ( ( unsigned char ) * str )	330:10:10277:10306	46706	0	True				
ANR	46719	CallExpression	ISSPACE ( ( unsigned char ) * str )		46706	0					
ANR	46720	Callee	ISSPACE		46706	0					
ANR	46721	Identifier	ISSPACE		46706	0					
ANR	46722	ArgumentList	( unsigned char ) * str		46706	1					
ANR	46723	Argument	( unsigned char ) * str		46706	0					
ANR	46724	CastExpression	( unsigned char ) * str		46706	0					
ANR	46725	CastTarget	unsigned char		46706	0					
ANR	46726	UnaryOperationExpression	* str		46706	1					
ANR	46727	UnaryOperator	*		46706	0					
ANR	46728	Identifier	str		46706	1					
ANR	46729	ExpressionStatement	str ++	331:5:10314:10319	46706	1	True				
ANR	46730	PostIncDecOperationExpression	str ++		46706	0					
ANR	46731	Identifier	str		46706	0					
ANR	46732	IncDec	++		46706	1					
ANR	46733	ForStatement	"for ( s = str , mode = 0 ; s < str + 6 ; s ++ )"		46706	3					
ANR	46734	ForInit	"s = str , mode = 0 ;"	333:8:10330:10347	46706	0	True				
ANR	46735	Expression	"s = str , mode = 0"		46706	0					
ANR	46736	AssignmentExpression	s = str		46706	0		=			
ANR	46737	Identifier	s		46706	0					
ANR	46738	Identifier	str		46706	1					
ANR	46739	AssignmentExpression	mode = 0		46706	1		=			
ANR	46740	Identifier	mode		46706	0					
ANR	46741	PrimaryExpression	0		46706	1					
ANR	46742	Condition	s < str + 6	333:27:10349:10359	46706	1	True				
ANR	46743	RelationalExpression	s < str + 6		46706	0		<			
ANR	46744	Identifier	s		46706	0					
ANR	46745	AdditiveExpression	str + 6		46706	1		+			
ANR	46746	Identifier	str		46706	0					
ANR	46747	PrimaryExpression	6		46706	1					
ANR	46748	PostIncDecOperationExpression	s ++	333:40:10362:10364	46706	2	True				
ANR	46749	Identifier	s		46706	0					
ANR	46750	IncDec	++		46706	1					
ANR	46751	CompoundStatement		9:5:141:141	46706	3					
ANR	46752	IfStatement	if ( * s >= '0' && * s <= '7' )		46706	0					
ANR	46753	Condition	* s >= '0' && * s <= '7'	335:11:10385:10406	46706	0	True				
ANR	46754	AndExpression	* s >= '0' && * s <= '7'		46706	0		&&			
ANR	46755	RelationalExpression	* s >= '0'		46706	0		>=			
ANR	46756	UnaryOperationExpression	* s		46706	0					
ANR	46757	UnaryOperator	*		46706	0					
ANR	46758	Identifier	s		46706	1					
ANR	46759	PrimaryExpression	'0'		46706	1					
ANR	46760	RelationalExpression	* s <= '7'		46706	1		<=			
ANR	46761	UnaryOperationExpression	* s		46706	0					
ANR	46762	UnaryOperator	*		46706	0					
ANR	46763	Identifier	s		46706	1					
ANR	46764	PrimaryExpression	'7'		46706	1					
ANR	46765	ExpressionStatement	mode = ( mode << 3 ) + ( * s - '0' )	336:1:10410:10441	46706	1	True				
ANR	46766	AssignmentExpression	mode = ( mode << 3 ) + ( * s - '0' )		46706	0		=			
ANR	46767	Identifier	mode		46706	0					
ANR	46768	AdditiveExpression	( mode << 3 ) + ( * s - '0' )		46706	1		+			
ANR	46769	ShiftExpression	mode << 3		46706	0		<<			
ANR	46770	Identifier	mode		46706	0					
ANR	46771	PrimaryExpression	3		46706	1					
ANR	46772	AdditiveExpression	* s - '0'		46706	1		-			
ANR	46773	UnaryOperationExpression	* s		46706	0					
ANR	46774	UnaryOperator	*		46706	0					
ANR	46775	Identifier	s		46706	1					
ANR	46776	PrimaryExpression	'0'		46706	1					
ANR	46777	ElseStatement	else		46706	0					
ANR	46778	CompoundStatement		13:1:225:225	46706	0					
ANR	46779	ExpressionStatement	mode = 0	339:2:10460:10468	46706	0	True				
ANR	46780	AssignmentExpression	mode = 0		46706	0		=			
ANR	46781	Identifier	mode		46706	0					
ANR	46782	PrimaryExpression	0		46706	1					
ANR	46783	BreakStatement	break ;	340:2:10472:10477	46706	1	True				
ANR	46784	IfStatement	if ( * s == '\\r' )		46706	4					
ANR	46785	Condition	* s == '\\r'	343:7:10496:10505	46706	0	True				
ANR	46786	EqualityExpression	* s == '\\r'		46706	0		==			
ANR	46787	UnaryOperationExpression	* s		46706	0					
ANR	46788	UnaryOperator	*		46706	0					
ANR	46789	Identifier	s		46706	1					
ANR	46790	PrimaryExpression	'\\r'		46706	1					
ANR	46791	ExpressionStatement	s ++	344:5:10513:10516	46706	1	True				
ANR	46792	PostIncDecOperationExpression	s ++		46706	0					
ANR	46793	Identifier	s		46706	0					
ANR	46794	IncDec	++		46706	1					
ANR	46795	IfStatement	if ( * s != '\\n' )		46706	5					
ANR	46796	Condition	* s != '\\n'	345:7:10525:10534	46706	0	True				
ANR	46797	EqualityExpression	* s != '\\n'		46706	0		!=			
ANR	46798	UnaryOperationExpression	* s		46706	0					
ANR	46799	UnaryOperator	*		46706	0					
ANR	46800	Identifier	s		46706	1					
ANR	46801	PrimaryExpression	'\\n'		46706	1					
ANR	46802	ExpressionStatement	mode = 0	346:5:10542:10550	46706	1	True				
ANR	46803	AssignmentExpression	mode = 0		46706	0		=			
ANR	46804	Identifier	mode		46706	0					
ANR	46805	PrimaryExpression	0		46706	1					
ANR	46806	ReturnStatement	return mode ;	352:3:10765:10776	46706	6	True				
ANR	46807	Identifier	mode		46706	0					
ANR	46808	ReturnType	static mode_t _GL_ATTRIBUTE_PURE		46706	1					
ANR	46809	Identifier	fetchmode		46706	2					
ANR	46810	ParameterList	char const * str		46706	3					
ANR	46811	Parameter	char const * str	325:11:10213:10227	46706	0	True				
ANR	46812	ParameterType	char const *		46706	0					
ANR	46813	Identifier	str		46706	1					
ANR	46814	CFGEntryNode	ENTRY		46706		True				
ANR	46815	CFGExitNode	EXIT		46706		True				
ANR	46816	Symbol	str		46706						
ANR	46817	Symbol	mode		46706						
ANR	46818	Symbol	s		46706						
ANR	46819	Symbol	* str		46706						
ANR	46820	Symbol	ISSPACE		46706						
ANR	46821	Symbol	* s		46706						
ANR	46822	Function	get_sha1	355:0:10781:10966							
ANR	46823	FunctionDef	"get_sha1 (char * * sha1 , char const * start , char const * end)"		46822	0					
ANR	46824	CompoundStatement		357:0:10851:10966	46822	0					
ANR	46825	IdentifierDeclStatement	unsigned int len = end - start ;	358:2:10855:10885	46822	0	True				
ANR	46826	IdentifierDecl	len = end - start		46822	0					
ANR	46827	IdentifierDeclType	unsigned int		46822	0					
ANR	46828	Identifier	len		46822	1					
ANR	46829	AssignmentExpression	len = end - start		46822	2		=			
ANR	46830	Identifier	len		46822	0					
ANR	46831	AdditiveExpression	end - start		46822	1		-			
ANR	46832	Identifier	end		46822	0					
ANR	46833	Identifier	start		46822	1					
ANR	46834	ExpressionStatement	* sha1 = xmalloc ( len + 1 )	359:2:10889:10914	46822	1	True				
ANR	46835	AssignmentExpression	* sha1 = xmalloc ( len + 1 )		46822	0		=			
ANR	46836	UnaryOperationExpression	* sha1		46822	0					
ANR	46837	UnaryOperator	*		46822	0					
ANR	46838	Identifier	sha1		46822	1					
ANR	46839	CallExpression	xmalloc ( len + 1 )		46822	1					
ANR	46840	Callee	xmalloc		46822	0					
ANR	46841	Identifier	xmalloc		46822	0					
ANR	46842	ArgumentList	len + 1		46822	1					
ANR	46843	Argument	len + 1		46822	0					
ANR	46844	AdditiveExpression	len + 1		46822	0		+			
ANR	46845	Identifier	len		46822	0					
ANR	46846	PrimaryExpression	1		46822	1					
ANR	46847	ExpressionStatement	"memcpy ( * sha1 , start , len )"	360:2:10918:10944	46822	2	True				
ANR	46848	CallExpression	"memcpy ( * sha1 , start , len )"		46822	0					
ANR	46849	Callee	memcpy		46822	0					
ANR	46850	Identifier	memcpy		46822	0					
ANR	46851	ArgumentList	* sha1		46822	1					
ANR	46852	Argument	* sha1		46822	0					
ANR	46853	UnaryOperationExpression	* sha1		46822	0					
ANR	46854	UnaryOperator	*		46822	0					
ANR	46855	Identifier	sha1		46822	1					
ANR	46856	Argument	start		46822	1					
ANR	46857	Identifier	start		46822	0					
ANR	46858	Argument	len		46822	2					
ANR	46859	Identifier	len		46822	0					
ANR	46860	ExpressionStatement	( * sha1 ) [ len ] = 0	361:2:10948:10964	46822	3	True				
ANR	46861	AssignmentExpression	( * sha1 ) [ len ] = 0		46822	0		=			
ANR	46862	ArrayIndexing	( * sha1 ) [ len ]		46822	0					
ANR	46863	UnaryOperationExpression	* sha1		46822	0					
ANR	46864	UnaryOperator	*		46822	0					
ANR	46865	Identifier	sha1		46822	1					
ANR	46866	Identifier	len		46822	1					
ANR	46867	PrimaryExpression	0		46822	1					
ANR	46868	ReturnType	static void		46822	1					
ANR	46869	Identifier	get_sha1		46822	2					
ANR	46870	ParameterList	"char * * sha1 , char const * start , char const * end"		46822	3					
ANR	46871	Parameter	char * * sha1	356:9:10802:10812	46822	0	True				
ANR	46872	ParameterType	char * *		46822	0					
ANR	46873	Identifier	sha1		46822	1					
ANR	46874	Parameter	char const * start	356:22:10815:10831	46822	1	True				
ANR	46875	ParameterType	char const *		46822	0					
ANR	46876	Identifier	start		46822	1					
ANR	46877	Parameter	char const * end	356:41:10834:10848	46822	2	True				
ANR	46878	ParameterType	char const *		46822	0					
ANR	46879	Identifier	end		46822	1					
ANR	46880	CFGEntryNode	ENTRY		46822		True				
ANR	46881	CFGExitNode	EXIT		46822		True				
ANR	46882	Symbol	sha1		46822						
ANR	46883	Symbol	len		46822						
ANR	46884	Symbol	xmalloc		46822						
ANR	46885	Symbol	start		46822						
ANR	46886	Symbol	end		46822						
ANR	46887	Symbol	* * sha1		46822						
ANR	46888	Symbol	* sha1		46822						
ANR	46889	Symbol	* len		46822						
ANR	46890	Function	sha1_says_nonexistent	364:0:10969:11420							
ANR	46891	FunctionDef	sha1_says_nonexistent (char const * sha1)		46890	0					
ANR	46892	CompoundStatement		366:0:11039:11420	46890	0					
ANR	46893	IdentifierDeclStatement	"char const * empty_sha1 = ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"" ;"	367:2:11043:11110	46890	0	True				
ANR	46894	IdentifierDecl	"* empty_sha1 = ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"""		46890	0					
ANR	46895	IdentifierDeclType	char const *		46890	0					
ANR	46896	Identifier	empty_sha1		46890	1					
ANR	46897	AssignmentExpression	"* empty_sha1 = ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"""		46890	2		=			
ANR	46898	Identifier	empty_sha1		46890	0					
ANR	46899	PrimaryExpression	"""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"""		46890	1					
ANR	46900	IdentifierDeclStatement	char const * s ;	368:2:11114:11127	46890	1	True				
ANR	46901	IdentifierDecl	* s		46890	0					
ANR	46902	IdentifierDeclType	char const *		46890	0					
ANR	46903	Identifier	s		46890	1					
ANR	46904	ForStatement	for ( s = sha1 ; * s ; s ++ )		46890	2					
ANR	46905	ForInit	s = sha1 ;	371:7:11191:11199	46890	0	True				
ANR	46906	AssignmentExpression	s = sha1		46890	0		=			
ANR	46907	Identifier	s		46890	0					
ANR	46908	Identifier	sha1		46890	1					
ANR	46909	Condition	* s	371:17:11201:11202	46890	1	True				
ANR	46910	UnaryOperationExpression	* s		46890	0					
ANR	46911	UnaryOperator	*		46890	0					
ANR	46912	Identifier	s		46890	1					
ANR	46913	PostIncDecOperationExpression	s ++	371:21:11205:11207	46890	2	True				
ANR	46914	Identifier	s		46890	0					
ANR	46915	IncDec	++		46890	1					
ANR	46916	IfStatement	if ( * s != '0' )		46890	3					
ANR	46917	Condition	* s != '0'	372:8:11218:11226	46890	0	True				
ANR	46918	EqualityExpression	* s != '0'		46890	0		!=			
ANR	46919	UnaryOperationExpression	* s		46890	0					
ANR	46920	UnaryOperator	*		46890	0					
ANR	46921	Identifier	s		46890	1					
ANR	46922	PrimaryExpression	'0'		46890	1					
ANR	46923	BreakStatement	break ;	373:6:11235:11240	46890	1	True				
ANR	46924	IfStatement	if ( ! * s )		46890	3					
ANR	46925	Condition	! * s	374:6:11248:11251	46890	0	True				
ANR	46926	UnaryOperationExpression	! * s		46890	0					
ANR	46927	UnaryOperator	!		46890	0					
ANR	46928	UnaryOperationExpression	* s		46890	1					
ANR	46929	UnaryOperator	*		46890	0					
ANR	46930	Identifier	s		46890	1					
ANR	46931	ReturnStatement	return 2 ;	375:4:11258:11266	46890	1	True				
ANR	46932	PrimaryExpression	2		46890	0					
ANR	46933	ForStatement	"for ( s = sha1 ; * s ; s ++ , empty_sha1 ++ )"		46890	4					
ANR	46934	ForInit	s = sha1 ;	378:7:11332:11340	46890	0	True				
ANR	46935	AssignmentExpression	s = sha1		46890	0		=			
ANR	46936	Identifier	s		46890	0					
ANR	46937	Identifier	sha1		46890	1					
ANR	46938	Condition	* s	378:17:11342:11343	46890	1	True				
ANR	46939	UnaryOperationExpression	* s		46890	0					
ANR	46940	UnaryOperator	*		46890	0					
ANR	46941	Identifier	s		46890	1					
ANR	46942	Expression	"s ++ , empty_sha1 ++"	378:21:11346:11362	46890	2	True				
ANR	46943	PostIncDecOperationExpression	s ++		46890	0					
ANR	46944	Identifier	s		46890	0					
ANR	46945	IncDec	++		46890	1					
ANR	46946	PostIncDecOperationExpression	empty_sha1 ++		46890	1					
ANR	46947	Identifier	empty_sha1		46890	0					
ANR	46948	IncDec	++		46890	1					
ANR	46949	IfStatement	if ( * s != * empty_sha1 )		46890	3					
ANR	46950	Condition	* s != * empty_sha1	379:8:11373:11389	46890	0	True				
ANR	46951	EqualityExpression	* s != * empty_sha1		46890	0		!=			
ANR	46952	UnaryOperationExpression	* s		46890	0					
ANR	46953	UnaryOperator	*		46890	0					
ANR	46954	Identifier	s		46890	1					
ANR	46955	UnaryOperationExpression	* empty_sha1		46890	1					
ANR	46956	UnaryOperator	*		46890	0					
ANR	46957	Identifier	empty_sha1		46890	1					
ANR	46958	BreakStatement	break ;	380:6:11398:11403	46890	1	True				
ANR	46959	ReturnStatement	return ! * s ;	381:2:11407:11418	46890	5	True				
ANR	46960	UnaryOperationExpression	! * s		46890	0					
ANR	46961	UnaryOperator	!		46890	0					
ANR	46962	UnaryOperationExpression	* s		46890	1					
ANR	46963	UnaryOperator	*		46890	0					
ANR	46964	Identifier	s		46890	1					
ANR	46965	ReturnType	static int _GL_ATTRIBUTE_PURE		46890	1					
ANR	46966	Identifier	sha1_says_nonexistent		46890	2					
ANR	46967	ParameterList	char const * sha1		46890	3					
ANR	46968	Parameter	char const * sha1	365:22:11021:11036	46890	0	True				
ANR	46969	ParameterType	char const *		46890	0					
ANR	46970	Identifier	sha1		46890	1					
ANR	46971	CFGEntryNode	ENTRY		46890		True				
ANR	46972	CFGExitNode	EXIT		46890		True				
ANR	46973	Symbol	sha1		46890						
ANR	46974	Symbol	s		46890						
ANR	46975	Symbol	* empty_sha1		46890						
ANR	46976	Symbol	empty_sha1		46890						
ANR	46977	Symbol	* s		46890						
ANR	46978	Function	skip_hex_digits	384:20:11443:11644							
ANR	46979	FunctionDef	skip_hex_digits (char const * str)		46978	0					
ANR	46980	CompoundStatement		386:0:11496:11644	46978	0					
ANR	46981	IdentifierDeclStatement	char const * s ;	387:2:11500:11513	46978	0	True				
ANR	46982	IdentifierDecl	* s		46978	0					
ANR	46983	IdentifierDeclType	char const *		46978	0					
ANR	46984	Identifier	s		46978	1					
ANR	46985	ForStatement	for ( s = str ; ( * s >= '0' && * s <= '9' ) || ( * s >= 'a' && * s <= 'f' ) ; s ++ )		46978	1					
ANR	46986	ForInit	s = str ;	389:7:11523:11530	46978	0	True				
ANR	46987	AssignmentExpression	s = str		46978	0		=			
ANR	46988	Identifier	s		46978	0					
ANR	46989	Identifier	str		46978	1					
ANR	46990	Condition	( * s >= '0' && * s <= '9' ) || ( * s >= 'a' && * s <= 'f' )	389:16:11532:11583	46978	1	True				
ANR	46991	OrExpression	( * s >= '0' && * s <= '9' ) || ( * s >= 'a' && * s <= 'f' )		46978	0		||			
ANR	46992	AndExpression	* s >= '0' && * s <= '9'		46978	0		&&			
ANR	46993	RelationalExpression	* s >= '0'		46978	0		>=			
ANR	46994	UnaryOperationExpression	* s		46978	0					
ANR	46995	UnaryOperator	*		46978	0					
ANR	46996	Identifier	s		46978	1					
ANR	46997	PrimaryExpression	'0'		46978	1					
ANR	46998	RelationalExpression	* s <= '9'		46978	1		<=			
ANR	46999	UnaryOperationExpression	* s		46978	0					
ANR	47000	UnaryOperator	*		46978	0					
ANR	47001	Identifier	s		46978	1					
ANR	47002	PrimaryExpression	'9'		46978	1					
ANR	47003	AndExpression	* s >= 'a' && * s <= 'f'		46978	1		&&			
ANR	47004	RelationalExpression	* s >= 'a'		46978	0		>=			
ANR	47005	UnaryOperationExpression	* s		46978	0					
ANR	47006	UnaryOperator	*		46978	0					
ANR	47007	Identifier	s		46978	1					
ANR	47008	PrimaryExpression	'a'		46978	1					
ANR	47009	RelationalExpression	* s <= 'f'		46978	1		<=			
ANR	47010	UnaryOperationExpression	* s		46978	0					
ANR	47011	UnaryOperator	*		46978	0					
ANR	47012	Identifier	s		46978	1					
ANR	47013	PrimaryExpression	'f'		46978	1					
ANR	47014	PostIncDecOperationExpression	s ++	389:70:11586:11588	46978	2	True				
ANR	47015	Identifier	s		46978	0					
ANR	47016	IncDec	++		46978	1					
ANR	47017	ExpressionStatement		390:21:11612:11612	46978	3	True				
ANR	47018	ReturnStatement	return s == str ? NULL : s ;	391:2:11616:11642	46978	2	True				
ANR	47019	ConditionalExpression	s == str ? NULL : s		46978	0					
ANR	47020	Condition	s == str		46978	0					
ANR	47021	EqualityExpression	s == str		46978	0		==			
ANR	47022	Identifier	s		46978	0					
ANR	47023	Identifier	str		46978	1					
ANR	47024	Identifier	NULL		46978	1					
ANR	47025	Identifier	s		46978	2					
ANR	47026	ReturnType	_GL_ATTRIBUTE_PURE		46978	1					
ANR	47027	Identifier	skip_hex_digits		46978	2					
ANR	47028	ParameterList	char const * str		46978	3					
ANR	47029	Parameter	char const * str	385:17:11479:11493	46978	0	True				
ANR	47030	ParameterType	char const *		46978	0					
ANR	47031	Identifier	str		46978	1					
ANR	47032	CFGEntryNode	ENTRY		46978		True				
ANR	47033	CFGExitNode	EXIT		46978		True				
ANR	47034	Symbol	str		46978						
ANR	47035	Symbol	s		46978						
ANR	47036	Symbol	NULL		46978						
ANR	47037	Symbol	* s		46978						
ANR	47038	Function	name_is_valid	394:0:11647:12248							
ANR	47039	FunctionDef	name_is_valid (char const * name)		47038	0					
ANR	47040	CompoundStatement		396:0:11692:12248	47038	0					
ANR	47041	IdentifierDeclStatement	int i ;	397:2:11696:11701	47038	0	True				
ANR	47042	IdentifierDecl	i		47038	0					
ANR	47043	IdentifierDeclType	int		47038	0					
ANR	47044	Identifier	i		47038	1					
ANR	47045	IdentifierDeclStatement	bool is_valid = true ;	398:2:11705:11725	47038	1	True				
ANR	47046	IdentifierDecl	is_valid = true		47038	0					
ANR	47047	IdentifierDeclType	bool		47038	0					
ANR	47048	Identifier	is_valid		47038	1					
ANR	47049	AssignmentExpression	is_valid = true		47038	2		=			
ANR	47050	Identifier	true		47038	0					
ANR	47051	Identifier	true		47038	1					
ANR	47052	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( invalid_names ) ; i ++ )		47038	2					
ANR	47053	ForInit	i = 0 ;	400:7:11735:11740	47038	0	True				
ANR	47054	AssignmentExpression	i = 0		47038	0		=			
ANR	47055	Identifier	i		47038	0					
ANR	47056	PrimaryExpression	0		47038	1					
ANR	47057	Condition	i < ARRAY_SIZE ( invalid_names )	400:14:11742:11771	47038	1	True				
ANR	47058	RelationalExpression	i < ARRAY_SIZE ( invalid_names )		47038	0		<			
ANR	47059	Identifier	i		47038	0					
ANR	47060	CallExpression	ARRAY_SIZE ( invalid_names )		47038	1					
ANR	47061	Callee	ARRAY_SIZE		47038	0					
ANR	47062	Identifier	ARRAY_SIZE		47038	0					
ANR	47063	ArgumentList	invalid_names		47038	1					
ANR	47064	Argument	invalid_names		47038	0					
ANR	47065	Identifier	invalid_names		47038	0					
ANR	47066	PostIncDecOperationExpression	i ++	400:46:11774:11776	47038	2	True				
ANR	47067	Identifier	i		47038	0					
ANR	47068	IncDec	++		47038	1					
ANR	47069	CompoundStatement		6:4:90:90	47038	3					
ANR	47070	IfStatement	if ( ! invalid_names [ i ] )		47038	0					
ANR	47071	Condition	! invalid_names [ i ]	402:10:11795:11812	47038	0	True				
ANR	47072	UnaryOperationExpression	! invalid_names [ i ]		47038	0					
ANR	47073	UnaryOperator	!		47038	0					
ANR	47074	ArrayIndexing	invalid_names [ i ]		47038	1					
ANR	47075	Identifier	invalid_names		47038	0					
ANR	47076	Identifier	i		47038	1					
ANR	47077	BreakStatement	break ;	403:1:11816:11821	47038	1	True				
ANR	47078	IfStatement	"if ( ! strcmp ( invalid_names [ i ] , name ) )"		47038	1					
ANR	47079	Condition	"! strcmp ( invalid_names [ i ] , name )"	404:10:11833:11865	47038	0	True				
ANR	47080	UnaryOperationExpression	"! strcmp ( invalid_names [ i ] , name )"		47038	0					
ANR	47081	UnaryOperator	!		47038	0					
ANR	47082	CallExpression	"strcmp ( invalid_names [ i ] , name )"		47038	1					
ANR	47083	Callee	strcmp		47038	0					
ANR	47084	Identifier	strcmp		47038	0					
ANR	47085	ArgumentList	invalid_names [ i ]		47038	1					
ANR	47086	Argument	invalid_names [ i ]		47038	0					
ANR	47087	ArrayIndexing	invalid_names [ i ]		47038	0					
ANR	47088	Identifier	invalid_names		47038	0					
ANR	47089	Identifier	i		47038	1					
ANR	47090	Argument	name		47038	1					
ANR	47091	Identifier	name		47038	0					
ANR	47092	ReturnStatement	return false ;	405:1:11869:11881	47038	1	True				
ANR	47093	Identifier	false		47038	0					
ANR	47094	ExpressionStatement	is_valid = filename_is_safe ( name )	408:2:11892:11926	47038	3	True				
ANR	47095	AssignmentExpression	is_valid = filename_is_safe ( name )		47038	0		=			
ANR	47096	Identifier	is_valid		47038	0					
ANR	47097	CallExpression	filename_is_safe ( name )		47038	1					
ANR	47098	Callee	filename_is_safe		47038	0					
ANR	47099	Identifier	filename_is_safe		47038	0					
ANR	47100	ArgumentList	name		47038	1					
ANR	47101	Argument	name		47038	0					
ANR	47102	Identifier	name		47038	0					
ANR	47103	IfStatement	if ( ! is_valid && cwd_is_root ( name ) )		47038	4					
ANR	47104	Condition	! is_valid && cwd_is_root ( name )	411:6:11997:12028	47038	0	True				
ANR	47105	AndExpression	! is_valid && cwd_is_root ( name )		47038	0		&&			
ANR	47106	UnaryOperationExpression	! is_valid		47038	0					
ANR	47107	UnaryOperator	!		47038	0					
ANR	47108	Identifier	is_valid		47038	1					
ANR	47109	CallExpression	cwd_is_root ( name )		47038	1					
ANR	47110	Callee	cwd_is_root		47038	0					
ANR	47111	Identifier	cwd_is_root		47038	0					
ANR	47112	ArgumentList	name		47038	1					
ANR	47113	Argument	name		47038	0					
ANR	47114	Identifier	name		47038	0					
ANR	47115	ExpressionStatement	is_valid = true	412:4:12035:12050	47038	1	True				
ANR	47116	AssignmentExpression	is_valid = true		47038	0		=			
ANR	47117	Identifier	is_valid		47038	0					
ANR	47118	Identifier	true		47038	1					
ANR	47119	IfStatement	if ( ! is_valid )		47038	5					
ANR	47120	Condition	! is_valid	414:6:12059:12068	47038	0	True				
ANR	47121	UnaryOperationExpression	! is_valid		47038	0					
ANR	47122	UnaryOperator	!		47038	0					
ANR	47123	Identifier	is_valid		47038	1					
ANR	47124	CompoundStatement		20:4:382:382	47038	1					
ANR	47125	ExpressionStatement	"say ( ""Ignoring potentially dangerous file name %s\\n"" , quotearg ( name ) )"	416:6:12083:12153	47038	0	True				
ANR	47126	CallExpression	"say ( ""Ignoring potentially dangerous file name %s\\n"" , quotearg ( name ) )"		47038	0					
ANR	47127	Callee	say		47038	0					
ANR	47128	Identifier	say		47038	0					
ANR	47129	ArgumentList	"""Ignoring potentially dangerous file name %s\\n"""		47038	1					
ANR	47130	Argument	"""Ignoring potentially dangerous file name %s\\n"""		47038	0					
ANR	47131	PrimaryExpression	"""Ignoring potentially dangerous file name %s\\n"""		47038	0					
ANR	47132	Argument	quotearg ( name )		47038	1					
ANR	47133	CallExpression	quotearg ( name )		47038	0					
ANR	47134	Callee	quotearg		47038	0					
ANR	47135	Identifier	quotearg		47038	0					
ANR	47136	ArgumentList	name		47038	1					
ANR	47137	Argument	name		47038	0					
ANR	47138	Identifier	name		47038	0					
ANR	47139	IfStatement	if ( i < ARRAY_SIZE ( invalid_names ) )		47038	1					
ANR	47140	Condition	i < ARRAY_SIZE ( invalid_names )	417:10:12165:12194	47038	0	True				
ANR	47141	RelationalExpression	i < ARRAY_SIZE ( invalid_names )		47038	0		<			
ANR	47142	Identifier	i		47038	0					
ANR	47143	CallExpression	ARRAY_SIZE ( invalid_names )		47038	1					
ANR	47144	Callee	ARRAY_SIZE		47038	0					
ANR	47145	Identifier	ARRAY_SIZE		47038	0					
ANR	47146	ArgumentList	invalid_names		47038	1					
ANR	47147	Argument	invalid_names		47038	0					
ANR	47148	Identifier	invalid_names		47038	0					
ANR	47149	ExpressionStatement	invalid_names [ i ] = name	418:1:12198:12221	47038	1	True				
ANR	47150	AssignmentExpression	invalid_names [ i ] = name		47038	0		=			
ANR	47151	ArrayIndexing	invalid_names [ i ]		47038	0					
ANR	47152	Identifier	invalid_names		47038	0					
ANR	47153	Identifier	i		47038	1					
ANR	47154	Identifier	name		47038	1					
ANR	47155	ReturnStatement	return is_valid ;	420:2:12231:12246	47038	6	True				
ANR	47156	Identifier	is_valid		47038	0					
ANR	47157	ReturnType	static bool		47038	1					
ANR	47158	Identifier	name_is_valid		47038	2					
ANR	47159	ParameterList	char const * name		47038	3					
ANR	47160	Parameter	char const * name	395:15:11674:11689	47038	0	True				
ANR	47161	ParameterType	char const *		47038	0					
ANR	47162	Identifier	name		47038	1					
ANR	47163	CFGEntryNode	ENTRY		47038		True				
ANR	47164	CFGExitNode	EXIT		47038		True				
ANR	47165	Symbol	ARRAY_SIZE		47038						
ANR	47166	Symbol	strcmp		47038						
ANR	47167	Symbol	* invalid_names		47038						
ANR	47168	Symbol	quotearg		47038						
ANR	47169	Symbol	filename_is_safe		47038						
ANR	47170	Symbol	false		47038						
ANR	47171	Symbol	i		47038						
ANR	47172	Symbol	invalid_names		47038						
ANR	47173	Symbol	* i		47038						
ANR	47174	Symbol	cwd_is_root		47038						
ANR	47175	Symbol	is_valid		47038						
ANR	47176	Symbol	name		47038						
ANR	47177	Symbol	true		47038						
ANR	47178	Function	intuit_diff_type	425:0:12330:28426							
ANR	47179	FunctionDef	"intuit_diff_type (bool need_header , mode_t * p_file_type)"		47178	0					
ANR	47180	CompoundStatement		427:0:12404:28426	47178	0					
ANR	47181	IdentifierDeclStatement	file_offset this_line = 0 ;	428:4:12410:12435	47178	0	True				
ANR	47182	IdentifierDecl	this_line = 0		47178	0					
ANR	47183	IdentifierDeclType	file_offset		47178	0					
ANR	47184	Identifier	this_line		47178	1					
ANR	47185	AssignmentExpression	this_line = 0		47178	2		=			
ANR	47186	Identifier	this_line		47178	0					
ANR	47187	PrimaryExpression	0		47178	1					
ANR	47188	IdentifierDeclStatement	file_offset first_command_line = - 1 ;	429:4:12441:12476	47178	1	True				
ANR	47189	IdentifierDecl	first_command_line = - 1		47178	0					
ANR	47190	IdentifierDeclType	file_offset		47178	0					
ANR	47191	Identifier	first_command_line		47178	1					
ANR	47192	AssignmentExpression	first_command_line = - 1		47178	2		=			
ANR	47193	Identifier	first_command_line		47178	0					
ANR	47194	UnaryOperationExpression	- 1		47178	1					
ANR	47195	UnaryOperator	-		47178	0					
ANR	47196	PrimaryExpression	1		47178	1					
ANR	47197	IdentifierDeclStatement	char first_ed_command_letter = 0 ;	430:4:12482:12514	47178	2	True				
ANR	47198	IdentifierDecl	first_ed_command_letter = 0		47178	0					
ANR	47199	IdentifierDeclType	char		47178	0					
ANR	47200	Identifier	first_ed_command_letter		47178	1					
ANR	47201	AssignmentExpression	first_ed_command_letter = 0		47178	2		=			
ANR	47202	Identifier	first_ed_command_letter		47178	0					
ANR	47203	PrimaryExpression	0		47178	1					
ANR	47204	IdentifierDeclStatement	lin fcl_line = 0 ;	431:4:12520:12536	47178	3	True				
ANR	47205	IdentifierDecl	fcl_line = 0		47178	0					
ANR	47206	IdentifierDeclType	lin		47178	0					
ANR	47207	Identifier	fcl_line		47178	1					
ANR	47208	AssignmentExpression	fcl_line = 0		47178	2		=			
ANR	47209	Identifier	fcl_line		47178	0					
ANR	47210	PrimaryExpression	0		47178	1					
ANR	47211	IdentifierDeclStatement	bool this_is_a_command = false ;	432:4:12566:12596	47178	4	True				
ANR	47212	IdentifierDecl	this_is_a_command = false		47178	0					
ANR	47213	IdentifierDeclType	bool		47178	0					
ANR	47214	Identifier	this_is_a_command		47178	1					
ANR	47215	AssignmentExpression	this_is_a_command = false		47178	2		=			
ANR	47216	Identifier	false		47178	0					
ANR	47217	Identifier	false		47178	1					
ANR	47218	IdentifierDeclStatement	bool stars_this_line = false ;	433:4:12602:12630	47178	5	True				
ANR	47219	IdentifierDecl	stars_this_line = false		47178	0					
ANR	47220	IdentifierDeclType	bool		47178	0					
ANR	47221	Identifier	stars_this_line		47178	1					
ANR	47222	AssignmentExpression	stars_this_line = false		47178	2		=			
ANR	47223	Identifier	false		47178	0					
ANR	47224	Identifier	false		47178	1					
ANR	47225	IdentifierDeclStatement	bool extended_headers = false ;	434:4:12636:12665	47178	6	True				
ANR	47226	IdentifierDecl	extended_headers = false		47178	0					
ANR	47227	IdentifierDeclType	bool		47178	0					
ANR	47228	Identifier	extended_headers		47178	1					
ANR	47229	AssignmentExpression	extended_headers = false		47178	2		=			
ANR	47230	Identifier	false		47178	0					
ANR	47231	Identifier	false		47178	1					
ANR	47232	IdentifierDeclStatement	enum nametype i ;	435:4:12671:12686	47178	7	True				
ANR	47233	IdentifierDecl	i		47178	0					
ANR	47234	IdentifierDeclType	enum nametype		47178	0					
ANR	47235	Identifier	i		47178	1					
ANR	47236	IdentifierDeclStatement	struct stat st [ 3 ] ;	436:4:12692:12709	47178	8	True				
ANR	47237	IdentifierDecl	st [ 3 ]		47178	0					
ANR	47238	IdentifierDeclType	struct stat [ 3 ]		47178	0					
ANR	47239	Identifier	st		47178	1					
ANR	47240	PrimaryExpression	3		47178	2					
ANR	47241	IdentifierDeclStatement	int stat_errno [ 3 ] ;	437:4:12715:12732	47178	9	True				
ANR	47242	IdentifierDecl	stat_errno [ 3 ]		47178	0					
ANR	47243	IdentifierDeclType	int [ 3 ]		47178	0					
ANR	47244	Identifier	stat_errno		47178	1					
ANR	47245	PrimaryExpression	3		47178	2					
ANR	47246	IdentifierDeclStatement	int version_controlled [ 3 ] ;	438:4:12738:12763	47178	10	True				
ANR	47247	IdentifierDecl	version_controlled [ 3 ]		47178	0					
ANR	47248	IdentifierDeclType	int [ 3 ]		47178	0					
ANR	47249	Identifier	version_controlled		47178	1					
ANR	47250	PrimaryExpression	3		47178	2					
ANR	47251	IdentifierDeclStatement	enum diff retval ;	439:4:12769:12785	47178	11	True				
ANR	47252	IdentifierDecl	retval		47178	0					
ANR	47253	IdentifierDeclType	enum diff		47178	0					
ANR	47254	Identifier	retval		47178	1					
ANR	47255	IdentifierDeclStatement	mode_t file_type ;	440:4:12791:12807	47178	12	True				
ANR	47256	IdentifierDecl	file_type		47178	0					
ANR	47257	IdentifierDeclType	mode_t		47178	0					
ANR	47258	Identifier	file_type		47178	1					
ANR	47259	IdentifierDeclStatement	size_t indent = 0 ;	441:4:12813:12830	47178	13	True				
ANR	47260	IdentifierDecl	indent = 0		47178	0					
ANR	47261	IdentifierDeclType	size_t		47178	0					
ANR	47262	Identifier	indent		47178	1					
ANR	47263	AssignmentExpression	indent = 0		47178	2		=			
ANR	47264	Identifier	indent		47178	0					
ANR	47265	PrimaryExpression	0		47178	1					
ANR	47266	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		47178	14					
ANR	47267	ForInit	i = OLD ;	443:9:12842:12849	47178	0	True				
ANR	47268	AssignmentExpression	i = OLD		47178	0		=			
ANR	47269	Identifier	i		47178	0					
ANR	47270	Identifier	OLD		47178	1					
ANR	47271	Condition	i <= INDEX	443:19:12852:12861	47178	1	True				
ANR	47272	RelationalExpression	i <= INDEX		47178	0		<=			
ANR	47273	Identifier	i		47178	0					
ANR	47274	Identifier	INDEX		47178	1					
ANR	47275	PostIncDecOperationExpression	i ++	443:32:12865:12867	47178	2	True				
ANR	47276	Identifier	i		47178	0					
ANR	47277	IncDec	++		47178	1					
ANR	47278	IfStatement	if ( p_name [ i ] )		47178	3					
ANR	47279	Condition	p_name [ i ]	444:10:12880:12888	47178	0	True				
ANR	47280	ArrayIndexing	p_name [ i ]		47178	0					
ANR	47281	Identifier	p_name		47178	0					
ANR	47282	Identifier	i		47178	1					
ANR	47283	CompoundStatement		18:21:486:486	47178	1					
ANR	47284	ExpressionStatement	free ( p_name [ i ] )	445:3:12896:12912	47178	0	True				
ANR	47285	CallExpression	free ( p_name [ i ] )		47178	0					
ANR	47286	Callee	free		47178	0					
ANR	47287	Identifier	free		47178	0					
ANR	47288	ArgumentList	p_name [ i ]		47178	1					
ANR	47289	Argument	p_name [ i ]		47178	0					
ANR	47290	ArrayIndexing	p_name [ i ]		47178	0					
ANR	47291	Identifier	p_name		47178	0					
ANR	47292	Identifier	i		47178	1					
ANR	47293	ExpressionStatement	p_name [ i ] = 0	446:3:12917:12930	47178	1	True				
ANR	47294	AssignmentExpression	p_name [ i ] = 0		47178	0		=			
ANR	47295	ArrayIndexing	p_name [ i ]		47178	0					
ANR	47296	Identifier	p_name		47178	0					
ANR	47297	Identifier	i		47178	1					
ANR	47298	PrimaryExpression	0		47178	1					
ANR	47299	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( invalid_names ) ; i ++ )		47178	15					
ANR	47300	ForInit	i = 0 ;	448:9:12951:12956	47178	0	True				
ANR	47301	AssignmentExpression	i = 0		47178	0		=			
ANR	47302	Identifier	i		47178	0					
ANR	47303	PrimaryExpression	0		47178	1					
ANR	47304	Condition	i < ARRAY_SIZE ( invalid_names )	448:16:12958:12987	47178	1	True				
ANR	47305	RelationalExpression	i < ARRAY_SIZE ( invalid_names )		47178	0		<			
ANR	47306	Identifier	i		47178	0					
ANR	47307	CallExpression	ARRAY_SIZE ( invalid_names )		47178	1					
ANR	47308	Callee	ARRAY_SIZE		47178	0					
ANR	47309	Identifier	ARRAY_SIZE		47178	0					
ANR	47310	ArgumentList	invalid_names		47178	1					
ANR	47311	Argument	invalid_names		47178	0					
ANR	47312	Identifier	invalid_names		47178	0					
ANR	47313	PostIncDecOperationExpression	i ++	448:48:12990:12992	47178	2	True				
ANR	47314	Identifier	i		47178	0					
ANR	47315	IncDec	++		47178	1					
ANR	47316	ExpressionStatement	invalid_names [ i ] = NULL	449:1:12996:13019	47178	3	True				
ANR	47317	AssignmentExpression	invalid_names [ i ] = NULL		47178	0		=			
ANR	47318	ArrayIndexing	invalid_names [ i ]		47178	0					
ANR	47319	Identifier	invalid_names		47178	0					
ANR	47320	Identifier	i		47178	1					
ANR	47321	Identifier	NULL		47178	1					
ANR	47322	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		47178	16					
ANR	47323	ForInit	i = OLD ;	450:9:13030:13037	47178	0	True				
ANR	47324	AssignmentExpression	i = OLD		47178	0		=			
ANR	47325	Identifier	i		47178	0					
ANR	47326	Identifier	OLD		47178	1					
ANR	47327	Condition	i <= NEW	450:18:13039:13046	47178	1	True				
ANR	47328	RelationalExpression	i <= NEW		47178	0		<=			
ANR	47329	Identifier	i		47178	0					
ANR	47330	Identifier	NEW		47178	1					
ANR	47331	PostIncDecOperationExpression	i ++	450:28:13049:13051	47178	2	True				
ANR	47332	Identifier	i		47178	0					
ANR	47333	IncDec	++		47178	1					
ANR	47334	IfStatement	if ( p_timestr [ i ] )		47178	3					
ANR	47335	Condition	p_timestr [ i ]	451:10:13064:13075	47178	0	True				
ANR	47336	ArrayIndexing	p_timestr [ i ]		47178	0					
ANR	47337	Identifier	p_timestr		47178	0					
ANR	47338	Identifier	i		47178	1					
ANR	47339	CompoundStatement		26:1:674:674	47178	1					
ANR	47340	ExpressionStatement	free ( p_timestr [ i ] )	453:3:13084:13102	47178	0	True				
ANR	47341	CallExpression	free ( p_timestr [ i ] )		47178	0					
ANR	47342	Callee	free		47178	0					
ANR	47343	Identifier	free		47178	0					
ANR	47344	ArgumentList	p_timestr [ i ]		47178	1					
ANR	47345	Argument	p_timestr [ i ]		47178	0					
ANR	47346	ArrayIndexing	p_timestr [ i ]		47178	0					
ANR	47347	Identifier	p_timestr		47178	0					
ANR	47348	Identifier	i		47178	1					
ANR	47349	ExpressionStatement	p_timestr [ i ] = 0	454:3:13107:13123	47178	1	True				
ANR	47350	AssignmentExpression	p_timestr [ i ] = 0		47178	0		=			
ANR	47351	ArrayIndexing	p_timestr [ i ]		47178	0					
ANR	47352	Identifier	p_timestr		47178	0					
ANR	47353	Identifier	i		47178	1					
ANR	47354	PrimaryExpression	0		47178	1					
ANR	47355	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		47178	17					
ANR	47356	ForInit	i = OLD ;	456:9:13137:13144	47178	0	True				
ANR	47357	AssignmentExpression	i = OLD		47178	0		=			
ANR	47358	Identifier	i		47178	0					
ANR	47359	Identifier	OLD		47178	1					
ANR	47360	Condition	i <= NEW	456:18:13146:13153	47178	1	True				
ANR	47361	RelationalExpression	i <= NEW		47178	0		<=			
ANR	47362	Identifier	i		47178	0					
ANR	47363	Identifier	NEW		47178	1					
ANR	47364	PostIncDecOperationExpression	i ++	456:28:13156:13158	47178	2	True				
ANR	47365	Identifier	i		47178	0					
ANR	47366	IncDec	++		47178	1					
ANR	47367	IfStatement	if ( p_sha1 [ i ] )		47178	3					
ANR	47368	Condition	p_sha1 [ i ]	457:10:13171:13179	47178	0	True				
ANR	47369	ArrayIndexing	p_sha1 [ i ]		47178	0					
ANR	47370	Identifier	p_sha1		47178	0					
ANR	47371	Identifier	i		47178	1					
ANR	47372	CompoundStatement		32:1:778:778	47178	1					
ANR	47373	ExpressionStatement	free ( p_sha1 [ i ] )	459:3:13188:13204	47178	0	True				
ANR	47374	CallExpression	free ( p_sha1 [ i ] )		47178	0					
ANR	47375	Callee	free		47178	0					
ANR	47376	Identifier	free		47178	0					
ANR	47377	ArgumentList	p_sha1 [ i ]		47178	1					
ANR	47378	Argument	p_sha1 [ i ]		47178	0					
ANR	47379	ArrayIndexing	p_sha1 [ i ]		47178	0					
ANR	47380	Identifier	p_sha1		47178	0					
ANR	47381	Identifier	i		47178	1					
ANR	47382	ExpressionStatement	p_sha1 [ i ] = 0	460:3:13209:13222	47178	1	True				
ANR	47383	AssignmentExpression	p_sha1 [ i ] = 0		47178	0		=			
ANR	47384	ArrayIndexing	p_sha1 [ i ]		47178	0					
ANR	47385	Identifier	p_sha1		47178	0					
ANR	47386	Identifier	i		47178	1					
ANR	47387	PrimaryExpression	0		47178	1					
ANR	47388	ExpressionStatement	p_git_diff = false	462:4:13231:13249	47178	18	True				
ANR	47389	AssignmentExpression	p_git_diff = false		47178	0		=			
ANR	47390	Identifier	p_git_diff		47178	0					
ANR	47391	Identifier	false		47178	1					
ANR	47392	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		47178	19					
ANR	47393	ForInit	i = OLD ;	463:9:13260:13267	47178	0	True				
ANR	47394	AssignmentExpression	i = OLD		47178	0		=			
ANR	47395	Identifier	i		47178	0					
ANR	47396	Identifier	OLD		47178	1					
ANR	47397	Condition	i <= NEW	463:18:13269:13276	47178	1	True				
ANR	47398	RelationalExpression	i <= NEW		47178	0		<=			
ANR	47399	Identifier	i		47178	0					
ANR	47400	Identifier	NEW		47178	1					
ANR	47401	PostIncDecOperationExpression	i ++	463:28:13279:13281	47178	2	True				
ANR	47402	Identifier	i		47178	0					
ANR	47403	IncDec	++		47178	1					
ANR	47404	CompoundStatement		38:6:885:885	47178	3					
ANR	47405	ExpressionStatement	p_mode [ i ] = 0	465:1:13293:13306	47178	0	True				
ANR	47406	AssignmentExpression	p_mode [ i ] = 0		47178	0		=			
ANR	47407	ArrayIndexing	p_mode [ i ]		47178	0					
ANR	47408	Identifier	p_mode		47178	0					
ANR	47409	Identifier	i		47178	1					
ANR	47410	PrimaryExpression	0		47178	1					
ANR	47411	ExpressionStatement	p_copy [ i ] = false	466:1:13309:13326	47178	1	True				
ANR	47412	AssignmentExpression	p_copy [ i ] = false		47178	0		=			
ANR	47413	ArrayIndexing	p_copy [ i ]		47178	0					
ANR	47414	Identifier	p_copy		47178	0					
ANR	47415	Identifier	i		47178	1					
ANR	47416	Identifier	false		47178	1					
ANR	47417	ExpressionStatement	p_rename [ i ] = false	467:1:13329:13348	47178	2	True				
ANR	47418	AssignmentExpression	p_rename [ i ] = false		47178	0		=			
ANR	47419	ArrayIndexing	p_rename [ i ]		47178	0					
ANR	47420	Identifier	p_rename		47178	0					
ANR	47421	Identifier	i		47178	1					
ANR	47422	Identifier	false		47178	1					
ANR	47423	IfStatement	if ( diff_type == ED_DIFF || diff_type == NORMAL_DIFF )		47178	20					
ANR	47424	Condition	diff_type == ED_DIFF || diff_type == NORMAL_DIFF	471:8:13436:13483	47178	0	True				
ANR	47425	OrExpression	diff_type == ED_DIFF || diff_type == NORMAL_DIFF		47178	0		||			
ANR	47426	EqualityExpression	diff_type == ED_DIFF		47178	0		==			
ANR	47427	Identifier	diff_type		47178	0					
ANR	47428	Identifier	ED_DIFF		47178	1					
ANR	47429	EqualityExpression	diff_type == NORMAL_DIFF		47178	1		==			
ANR	47430	Identifier	diff_type		47178	0					
ANR	47431	Identifier	NORMAL_DIFF		47178	1					
ANR	47432	ExpressionStatement	need_header = false	472:6:13492:13511	47178	1	True				
ANR	47433	AssignmentExpression	need_header = false		47178	0		=			
ANR	47434	Identifier	need_header		47178	0					
ANR	47435	Identifier	false		47178	1					
ANR	47436	ExpressionStatement	version_controlled [ OLD ] = - 1	474:4:13518:13546	47178	21	True				
ANR	47437	AssignmentExpression	version_controlled [ OLD ] = - 1		47178	0		=			
ANR	47438	ArrayIndexing	version_controlled [ OLD ]		47178	0					
ANR	47439	Identifier	version_controlled		47178	0					
ANR	47440	Identifier	OLD		47178	1					
ANR	47441	UnaryOperationExpression	- 1		47178	1					
ANR	47442	UnaryOperator	-		47178	0					
ANR	47443	PrimaryExpression	1		47178	1					
ANR	47444	ExpressionStatement	version_controlled [ NEW ] = - 1	475:4:13552:13580	47178	22	True				
ANR	47445	AssignmentExpression	version_controlled [ NEW ] = - 1		47178	0		=			
ANR	47446	ArrayIndexing	version_controlled [ NEW ]		47178	0					
ANR	47447	Identifier	version_controlled		47178	0					
ANR	47448	Identifier	NEW		47178	1					
ANR	47449	UnaryOperationExpression	- 1		47178	1					
ANR	47450	UnaryOperator	-		47178	0					
ANR	47451	PrimaryExpression	1		47178	1					
ANR	47452	ExpressionStatement	version_controlled [ INDEX ] = - 1	476:4:13586:13616	47178	23	True				
ANR	47453	AssignmentExpression	version_controlled [ INDEX ] = - 1		47178	0		=			
ANR	47454	ArrayIndexing	version_controlled [ INDEX ]		47178	0					
ANR	47455	Identifier	version_controlled		47178	0					
ANR	47456	Identifier	INDEX		47178	1					
ANR	47457	UnaryOperationExpression	- 1		47178	1					
ANR	47458	UnaryOperator	-		47178	0					
ANR	47459	PrimaryExpression	1		47178	1					
ANR	47460	ExpressionStatement	p_rfc934_nesting = 0	477:4:13622:13642	47178	24	True				
ANR	47461	AssignmentExpression	p_rfc934_nesting = 0		47178	0		=			
ANR	47462	Identifier	p_rfc934_nesting		47178	0					
ANR	47463	PrimaryExpression	0		47178	1					
ANR	47464	ExpressionStatement	p_timestamp [ OLD ] . tv_sec = p_timestamp [ NEW ] . tv_sec = - 1	478:4:13648:13702	47178	25	True				
ANR	47465	AssignmentExpression	p_timestamp [ OLD ] . tv_sec = p_timestamp [ NEW ] . tv_sec = - 1		47178	0		=			
ANR	47466	MemberAccess	p_timestamp [ OLD ] . tv_sec		47178	0					
ANR	47467	ArrayIndexing	p_timestamp [ OLD ]		47178	0					
ANR	47468	Identifier	p_timestamp		47178	0					
ANR	47469	Identifier	OLD		47178	1					
ANR	47470	Identifier	tv_sec		47178	1					
ANR	47471	AssignmentExpression	p_timestamp [ NEW ] . tv_sec = - 1		47178	1		=			
ANR	47472	MemberAccess	p_timestamp [ NEW ] . tv_sec		47178	0					
ANR	47473	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	47474	Identifier	p_timestamp		47178	0					
ANR	47475	Identifier	NEW		47178	1					
ANR	47476	Identifier	tv_sec		47178	1					
ANR	47477	UnaryOperationExpression	- 1		47178	1					
ANR	47478	UnaryOperator	-		47178	0					
ANR	47479	PrimaryExpression	1		47178	1					
ANR	47480	ExpressionStatement	p_says_nonexistent [ OLD ] = p_says_nonexistent [ NEW ] = 0	479:4:13708:13761	47178	26	True				
ANR	47481	AssignmentExpression	p_says_nonexistent [ OLD ] = p_says_nonexistent [ NEW ] = 0		47178	0		=			
ANR	47482	ArrayIndexing	p_says_nonexistent [ OLD ]		47178	0					
ANR	47483	Identifier	p_says_nonexistent		47178	0					
ANR	47484	Identifier	OLD		47178	1					
ANR	47485	AssignmentExpression	p_says_nonexistent [ NEW ] = 0		47178	1		=			
ANR	47486	ArrayIndexing	p_says_nonexistent [ NEW ]		47178	0					
ANR	47487	Identifier	p_says_nonexistent		47178	0					
ANR	47488	Identifier	NEW		47178	1					
ANR	47489	PrimaryExpression	0		47178	1					
ANR	47490	ExpressionStatement	"Fseek ( pfp , p_base , SEEK_SET )"	480:4:13767:13796	47178	27	True				
ANR	47491	CallExpression	"Fseek ( pfp , p_base , SEEK_SET )"		47178	0					
ANR	47492	Callee	Fseek		47178	0					
ANR	47493	Identifier	Fseek		47178	0					
ANR	47494	ArgumentList	pfp		47178	1					
ANR	47495	Argument	pfp		47178	0					
ANR	47496	Identifier	pfp		47178	0					
ANR	47497	Argument	p_base		47178	1					
ANR	47498	Identifier	p_base		47178	0					
ANR	47499	Argument	SEEK_SET		47178	2					
ANR	47500	Identifier	SEEK_SET		47178	0					
ANR	47501	ExpressionStatement	p_input_line = p_bline - 1	481:4:13802:13828	47178	28	True				
ANR	47502	AssignmentExpression	p_input_line = p_bline - 1		47178	0		=			
ANR	47503	Identifier	p_input_line		47178	0					
ANR	47504	AdditiveExpression	p_bline - 1		47178	1		-			
ANR	47505	Identifier	p_bline		47178	0					
ANR	47506	PrimaryExpression	1		47178	1					
ANR	47507	ForStatement	for ( ; ; )		47178	29					
ANR	47508	CompoundStatement		65:1:1676:1693	47178	0					
ANR	47509	IdentifierDeclStatement	char * s ;	483:1:13846:13853	47178	0	True				
ANR	47510	IdentifierDecl	* s		47178	0					
ANR	47511	IdentifierDeclType	char *		47178	0					
ANR	47512	Identifier	s		47178	1					
ANR	47513	IdentifierDeclStatement	char * t ;	484:1:13856:13863	47178	1	True				
ANR	47514	IdentifierDecl	* t		47178	0					
ANR	47515	IdentifierDeclType	char *		47178	0					
ANR	47516	Identifier	t		47178	1					
ANR	47517	IdentifierDeclStatement	file_offset previous_line = this_line ;	485:1:13866:13903	47178	2	True				
ANR	47518	IdentifierDecl	previous_line = this_line		47178	0					
ANR	47519	IdentifierDeclType	file_offset		47178	0					
ANR	47520	Identifier	previous_line		47178	1					
ANR	47521	AssignmentExpression	previous_line = this_line		47178	2		=			
ANR	47522	Identifier	this_line		47178	0					
ANR	47523	Identifier	this_line		47178	1					
ANR	47524	IdentifierDeclStatement	bool last_line_was_command = this_is_a_command ;	486:1:13906:13952	47178	3	True				
ANR	47525	IdentifierDecl	last_line_was_command = this_is_a_command		47178	0					
ANR	47526	IdentifierDeclType	bool		47178	0					
ANR	47527	Identifier	last_line_was_command		47178	1					
ANR	47528	AssignmentExpression	last_line_was_command = this_is_a_command		47178	2		=			
ANR	47529	Identifier	this_is_a_command		47178	0					
ANR	47530	Identifier	this_is_a_command		47178	1					
ANR	47531	IdentifierDeclStatement	bool stars_last_line = stars_this_line ;	487:1:13955:13993	47178	4	True				
ANR	47532	IdentifierDecl	stars_last_line = stars_this_line		47178	0					
ANR	47533	IdentifierDeclType	bool		47178	0					
ANR	47534	Identifier	stars_last_line		47178	1					
ANR	47535	AssignmentExpression	stars_last_line = stars_this_line		47178	2		=			
ANR	47536	Identifier	stars_this_line		47178	0					
ANR	47537	Identifier	stars_this_line		47178	1					
ANR	47538	IdentifierDeclStatement	size_t indent_last_line = indent ;	488:1:13996:14028	47178	5	True				
ANR	47539	IdentifierDecl	indent_last_line = indent		47178	0					
ANR	47540	IdentifierDeclType	size_t		47178	0					
ANR	47541	Identifier	indent_last_line		47178	1					
ANR	47542	AssignmentExpression	indent_last_line = indent		47178	2		=			
ANR	47543	Identifier	indent		47178	0					
ANR	47544	Identifier	indent		47178	1					
ANR	47545	IdentifierDeclStatement	char ed_command_letter ;	489:1:14031:14053	47178	6	True				
ANR	47546	IdentifierDecl	ed_command_letter		47178	0					
ANR	47547	IdentifierDeclType	char		47178	0					
ANR	47548	Identifier	ed_command_letter		47178	1					
ANR	47549	IdentifierDeclStatement	bool strip_trailing_cr ;	490:1:14056:14078	47178	7	True				
ANR	47550	IdentifierDecl	strip_trailing_cr		47178	0					
ANR	47551	IdentifierDeclType	bool		47178	0					
ANR	47552	Identifier	strip_trailing_cr		47178	1					
ANR	47553	IdentifierDeclStatement	size_t chars_read ;	491:1:14081:14098	47178	8	True				
ANR	47554	IdentifierDecl	chars_read		47178	0					
ANR	47555	IdentifierDeclType	size_t		47178	0					
ANR	47556	Identifier	chars_read		47178	1					
ANR	47557	ExpressionStatement	indent = 0	493:1:14102:14112	47178	9	True				
ANR	47558	AssignmentExpression	indent = 0		47178	0		=			
ANR	47559	Identifier	indent		47178	0					
ANR	47560	PrimaryExpression	0		47178	1					
ANR	47561	ExpressionStatement	this_line = file_tell ( pfp )	494:1:14115:14142	47178	10	True				
ANR	47562	AssignmentExpression	this_line = file_tell ( pfp )		47178	0		=			
ANR	47563	Identifier	this_line		47178	0					
ANR	47564	CallExpression	file_tell ( pfp )		47178	1					
ANR	47565	Callee	file_tell		47178	0					
ANR	47566	Identifier	file_tell		47178	0					
ANR	47567	ArgumentList	pfp		47178	1					
ANR	47568	Argument	pfp		47178	0					
ANR	47569	Identifier	pfp		47178	0					
ANR	47570	ExpressionStatement	"chars_read = pget_line ( 0 , 0 , false , false )"	495:1:14145:14188	47178	11	True				
ANR	47571	AssignmentExpression	"chars_read = pget_line ( 0 , 0 , false , false )"		47178	0		=			
ANR	47572	Identifier	chars_read		47178	0					
ANR	47573	CallExpression	"pget_line ( 0 , 0 , false , false )"		47178	1					
ANR	47574	Callee	pget_line		47178	0					
ANR	47575	Identifier	pget_line		47178	0					
ANR	47576	ArgumentList	0		47178	1					
ANR	47577	Argument	0		47178	0					
ANR	47578	PrimaryExpression	0		47178	0					
ANR	47579	Argument	0		47178	1					
ANR	47580	PrimaryExpression	0		47178	0					
ANR	47581	Argument	false		47178	2					
ANR	47582	Identifier	false		47178	0					
ANR	47583	Argument	false		47178	3					
ANR	47584	Identifier	false		47178	0					
ANR	47585	IfStatement	if ( chars_read == ( size_t ) - 1 )		47178	12					
ANR	47586	Condition	chars_read == ( size_t ) - 1	496:5:14195:14219	47178	0	True				
ANR	47587	EqualityExpression	chars_read == ( size_t ) - 1		47178	0		==			
ANR	47588	Identifier	chars_read		47178	0					
ANR	47589	CastExpression	( size_t ) - 1		47178	1					
ANR	47590	CastTarget	size_t		47178	0					
ANR	47591	UnaryOperationExpression	- 1		47178	1					
ANR	47592	UnaryOperator	-		47178	0					
ANR	47593	PrimaryExpression	1		47178	1					
ANR	47594	ExpressionStatement	xalloc_die ( )	497:3:14225:14238	47178	1	True				
ANR	47595	CallExpression	xalloc_die ( )		47178	0					
ANR	47596	Callee	xalloc_die		47178	0					
ANR	47597	Identifier	xalloc_die		47178	0					
ANR	47598	ArgumentList			47178	1					
ANR	47599	IfStatement	if ( ! chars_read )		47178	13					
ANR	47600	Condition	! chars_read	498:5:14245:14256	47178	0	True				
ANR	47601	UnaryOperationExpression	! chars_read		47178	0					
ANR	47602	UnaryOperator	!		47178	0					
ANR	47603	Identifier	chars_read		47178	1					
ANR	47604	CompoundStatement		72:19:1854:1854	47178	1					
ANR	47605	IfStatement	if ( first_ed_command_letter )		47178	0					
ANR	47606	Condition	first_ed_command_letter	499:9:14270:14292	47178	0	True				
ANR	47607	Identifier	first_ed_command_letter		47178	0					
ANR	47608	CompoundStatement		73:34:1890:1890	47178	1					
ANR	47609	ExpressionStatement	p_start = first_command_line	501:2:14332:14360	47178	0	True				
ANR	47610	AssignmentExpression	p_start = first_command_line		47178	0		=			
ANR	47611	Identifier	p_start		47178	0					
ANR	47612	Identifier	first_command_line		47178	1					
ANR	47613	ExpressionStatement	p_sline = fcl_line	502:2:14364:14382	47178	1	True				
ANR	47614	AssignmentExpression	p_sline = fcl_line		47178	0		=			
ANR	47615	Identifier	p_sline		47178	0					
ANR	47616	Identifier	fcl_line		47178	1					
ANR	47617	ExpressionStatement	retval = ED_DIFF	503:2:14386:14402	47178	2	True				
ANR	47618	AssignmentExpression	retval = ED_DIFF		47178	0		=			
ANR	47619	Identifier	retval		47178	0					
ANR	47620	Identifier	ED_DIFF		47178	1					
ANR	47621	GotoStatement	goto scan_exit ;	504:2:14406:14420	47178	3	True				
ANR	47622	Identifier	scan_exit		47178	0					
ANR	47623	ElseStatement	else		47178	0					
ANR	47624	CompoundStatement		80:10:2034:2034	47178	0					
ANR	47625	ExpressionStatement	p_start = this_line	507:2:14443:14462	47178	0	True				
ANR	47626	AssignmentExpression	p_start = this_line		47178	0		=			
ANR	47627	Identifier	p_start		47178	0					
ANR	47628	Identifier	this_line		47178	1					
ANR	47629	ExpressionStatement	p_sline = p_input_line	508:2:14466:14488	47178	1	True				
ANR	47630	AssignmentExpression	p_sline = p_input_line		47178	0		=			
ANR	47631	Identifier	p_sline		47178	0					
ANR	47632	Identifier	p_input_line		47178	1					
ANR	47633	IfStatement	if ( extended_headers )		47178	2					
ANR	47634	Condition	extended_headers	509:6:14496:14511	47178	0	True				
ANR	47635	Identifier	extended_headers		47178	0					
ANR	47636	CompoundStatement		84:4:2113:2113	47178	1					
ANR	47637	ExpressionStatement	retval = UNI_DIFF	512:6:14586:14603	47178	0	True				
ANR	47638	AssignmentExpression	retval = UNI_DIFF		47178	0		=			
ANR	47639	Identifier	retval		47178	0					
ANR	47640	Identifier	UNI_DIFF		47178	1					
ANR	47641	GotoStatement	goto scan_exit ;	513:6:14611:14625	47178	1	True				
ANR	47642	Identifier	scan_exit		47178	0					
ANR	47643	ReturnStatement	return NO_DIFF ;	515:2:14635:14649	47178	3	True				
ANR	47644	Identifier	NO_DIFF		47178	0					
ANR	47645	ExpressionStatement	strip_trailing_cr = 2 <= chars_read && buf [ chars_read - 2 ] == '\\r'	518:1:14662:14728	47178	14	True				
ANR	47646	AssignmentExpression	strip_trailing_cr = 2 <= chars_read && buf [ chars_read - 2 ] == '\\r'		47178	0		=			
ANR	47647	Identifier	strip_trailing_cr		47178	0					
ANR	47648	AndExpression	2 <= chars_read && buf [ chars_read - 2 ] == '\\r'		47178	1		&&			
ANR	47649	RelationalExpression	2 <= chars_read		47178	0		<=			
ANR	47650	PrimaryExpression	2		47178	0					
ANR	47651	Identifier	chars_read		47178	1					
ANR	47652	EqualityExpression	buf [ chars_read - 2 ] == '\\r'		47178	1		==			
ANR	47653	ArrayIndexing	buf [ chars_read - 2 ]		47178	0					
ANR	47654	Identifier	buf		47178	0					
ANR	47655	AdditiveExpression	chars_read - 2		47178	1		-			
ANR	47656	Identifier	chars_read		47178	0					
ANR	47657	PrimaryExpression	2		47178	1					
ANR	47658	PrimaryExpression	'\\r'		47178	1					
ANR	47659	ForStatement	for ( s = buf ; * s == ' ' || * s == '\\t' || * s == 'X' ; s ++ )		47178	15					
ANR	47660	ForInit	s = buf ;	519:6:14736:14743	47178	0	True				
ANR	47661	AssignmentExpression	s = buf		47178	0		=			
ANR	47662	Identifier	s		47178	0					
ANR	47663	Identifier	buf		47178	1					
ANR	47664	Condition	* s == ' ' || * s == '\\t' || * s == 'X'	519:15:14745:14780	47178	1	True				
ANR	47665	OrExpression	* s == ' ' || * s == '\\t' || * s == 'X'		47178	0		||			
ANR	47666	EqualityExpression	* s == ' '		47178	0		==			
ANR	47667	UnaryOperationExpression	* s		47178	0					
ANR	47668	UnaryOperator	*		47178	0					
ANR	47669	Identifier	s		47178	1					
ANR	47670	PrimaryExpression	' '		47178	1					
ANR	47671	OrExpression	* s == '\\t' || * s == 'X'		47178	1		||			
ANR	47672	EqualityExpression	* s == '\\t'		47178	0		==			
ANR	47673	UnaryOperationExpression	* s		47178	0					
ANR	47674	UnaryOperator	*		47178	0					
ANR	47675	Identifier	s		47178	1					
ANR	47676	PrimaryExpression	'\\t'		47178	1					
ANR	47677	EqualityExpression	* s == 'X'		47178	1		==			
ANR	47678	UnaryOperationExpression	* s		47178	0					
ANR	47679	UnaryOperator	*		47178	0					
ANR	47680	Identifier	s		47178	1					
ANR	47681	PrimaryExpression	'X'		47178	1					
ANR	47682	PostIncDecOperationExpression	s ++	519:53:14783:14785	47178	2	True				
ANR	47683	Identifier	s		47178	0					
ANR	47684	IncDec	++		47178	1					
ANR	47685	CompoundStatement		93:58:2383:2383	47178	3					
ANR	47686	IfStatement	if ( * s == '\\t' )		47178	0					
ANR	47687	Condition	* s == '\\t'	520:9:14799:14808	47178	0	True				
ANR	47688	EqualityExpression	* s == '\\t'		47178	0		==			
ANR	47689	UnaryOperationExpression	* s		47178	0					
ANR	47690	UnaryOperator	*		47178	0					
ANR	47691	Identifier	s		47178	1					
ANR	47692	PrimaryExpression	'\\t'		47178	1					
ANR	47693	ExpressionStatement	indent = ( indent + 8 ) & ~7	521:2:14813:14839	47178	1	True				
ANR	47694	AssignmentExpression	indent = ( indent + 8 ) & ~7		47178	0		=			
ANR	47695	Identifier	indent		47178	0					
ANR	47696	BitAndExpression	( indent + 8 ) & ~7		47178	1		&			
ANR	47697	AdditiveExpression	indent + 8		47178	0		+			
ANR	47698	Identifier	indent		47178	0					
ANR	47699	PrimaryExpression	8		47178	1					
ANR	47700	Identifier	~7		47178	1					
ANR	47701	ElseStatement	else		47178	0					
ANR	47702	ExpressionStatement	indent ++	523:2:14853:14861	47178	0	True				
ANR	47703	PostIncDecOperationExpression	indent ++		47178	0					
ANR	47704	Identifier	indent		47178	0					
ANR	47705	IncDec	++		47178	1					
ANR	47706	IfStatement	if ( ISDIGIT ( * s ) )		47178	16					
ANR	47707	Condition	ISDIGIT ( * s )	525:5:14871:14882	47178	0	True				
ANR	47708	CallExpression	ISDIGIT ( * s )		47178	0					
ANR	47709	Callee	ISDIGIT		47178	0					
ANR	47710	Identifier	ISDIGIT		47178	0					
ANR	47711	ArgumentList	* s		47178	1					
ANR	47712	Argument	* s		47178	0					
ANR	47713	UnaryOperationExpression	* s		47178	0					
ANR	47714	UnaryOperator	*		47178	0					
ANR	47715	Identifier	s		47178	1					
ANR	47716	CompoundStatement		100:3:2483:2483	47178	1					
ANR	47717	ForStatement	"for ( t = s + 1 ; ISDIGIT ( * t ) || * t == ',' ; t ++ )"		47178	0					
ANR	47718	ForInit	t = s + 1 ;	527:10:14900:14909	47178	0	True				
ANR	47719	AssignmentExpression	t = s + 1		47178	0		=			
ANR	47720	Identifier	t		47178	0					
ANR	47721	AdditiveExpression	s + 1		47178	1		+			
ANR	47722	Identifier	s		47178	0					
ANR	47723	PrimaryExpression	1		47178	1					
ANR	47724	Condition	"ISDIGIT ( * t ) || * t == ','"	527:21:14911:14935	47178	1	True				
ANR	47725	OrExpression	"ISDIGIT ( * t ) || * t == ','"		47178	0		||			
ANR	47726	CallExpression	ISDIGIT ( * t )		47178	0					
ANR	47727	Callee	ISDIGIT		47178	0					
ANR	47728	Identifier	ISDIGIT		47178	0					
ANR	47729	ArgumentList	* t		47178	1					
ANR	47730	Argument	* t		47178	0					
ANR	47731	UnaryOperationExpression	* t		47178	0					
ANR	47732	UnaryOperator	*		47178	0					
ANR	47733	Identifier	t		47178	1					
ANR	47734	EqualityExpression	"* t == ','"		47178	1		==			
ANR	47735	UnaryOperationExpression	* t		47178	0					
ANR	47736	UnaryOperator	*		47178	0					
ANR	47737	Identifier	t		47178	1					
ANR	47738	PrimaryExpression	"','"		47178	1					
ANR	47739	PostIncDecOperationExpression	t ++	527:49:14939:14941	47178	2	True				
ANR	47740	Identifier	t		47178	0					
ANR	47741	IncDec	++		47178	1					
ANR	47742	ExpressionStatement		528:24:14968:14968	47178	3	True				
ANR	47743	IfStatement	if ( * t == 'd' || * t == 'c' || * t == 'a' )		47178	1					
ANR	47744	Condition	* t == 'd' || * t == 'c' || * t == 'a'	529:9:14979:15013	47178	0	True				
ANR	47745	OrExpression	* t == 'd' || * t == 'c' || * t == 'a'		47178	0		||			
ANR	47746	EqualityExpression	* t == 'd'		47178	0		==			
ANR	47747	UnaryOperationExpression	* t		47178	0					
ANR	47748	UnaryOperator	*		47178	0					
ANR	47749	Identifier	t		47178	1					
ANR	47750	PrimaryExpression	'd'		47178	1					
ANR	47751	OrExpression	* t == 'c' || * t == 'a'		47178	1		||			
ANR	47752	EqualityExpression	* t == 'c'		47178	0		==			
ANR	47753	UnaryOperationExpression	* t		47178	0					
ANR	47754	UnaryOperator	*		47178	0					
ANR	47755	Identifier	t		47178	1					
ANR	47756	PrimaryExpression	'c'		47178	1					
ANR	47757	EqualityExpression	* t == 'a'		47178	1		==			
ANR	47758	UnaryOperationExpression	* t		47178	0					
ANR	47759	UnaryOperator	*		47178	0					
ANR	47760	Identifier	t		47178	1					
ANR	47761	PrimaryExpression	'a'		47178	1					
ANR	47762	CompoundStatement		104:7:2618:2618	47178	1					
ANR	47763	ForStatement	"for ( t ++ ; ISDIGIT ( * t ) || * t == ',' ; t ++ )"		47178	0					
ANR	47764	ForInit	t ++ ;	531:7:15032:15035	47178	0	True				
ANR	47765	PostIncDecOperationExpression	t ++		47178	0					
ANR	47766	Identifier	t		47178	0					
ANR	47767	IncDec	++		47178	1					
ANR	47768	Condition	"ISDIGIT ( * t ) || * t == ','"	531:13:15038:15062	47178	1	True				
ANR	47769	OrExpression	"ISDIGIT ( * t ) || * t == ','"		47178	0		||			
ANR	47770	CallExpression	ISDIGIT ( * t )		47178	0					
ANR	47771	Callee	ISDIGIT		47178	0					
ANR	47772	Identifier	ISDIGIT		47178	0					
ANR	47773	ArgumentList	* t		47178	1					
ANR	47774	Argument	* t		47178	0					
ANR	47775	UnaryOperationExpression	* t		47178	0					
ANR	47776	UnaryOperator	*		47178	0					
ANR	47777	Identifier	t		47178	1					
ANR	47778	EqualityExpression	"* t == ','"		47178	1		==			
ANR	47779	UnaryOperationExpression	* t		47178	0					
ANR	47780	UnaryOperator	*		47178	0					
ANR	47781	Identifier	t		47178	1					
ANR	47782	PrimaryExpression	"','"		47178	1					
ANR	47783	PostIncDecOperationExpression	t ++	531:41:15066:15068	47178	2	True				
ANR	47784	Identifier	t		47178	0					
ANR	47785	IncDec	++		47178	1					
ANR	47786	ExpressionStatement		532:21:15092:15092	47178	3	True				
ANR	47787	ForStatement	for ( ; * t == ' ' || * t == '\\t' ; t ++ )		47178	1					
ANR	47788	Condition	* t == ' ' || * t == '\\t'	533:9:15103:15125	47178	0	True				
ANR	47789	OrExpression	* t == ' ' || * t == '\\t'		47178	0		||			
ANR	47790	EqualityExpression	* t == ' '		47178	0		==			
ANR	47791	UnaryOperationExpression	* t		47178	0					
ANR	47792	UnaryOperator	*		47178	0					
ANR	47793	Identifier	t		47178	1					
ANR	47794	PrimaryExpression	' '		47178	1					
ANR	47795	EqualityExpression	* t == '\\t'		47178	1		==			
ANR	47796	UnaryOperationExpression	* t		47178	0					
ANR	47797	UnaryOperator	*		47178	0					
ANR	47798	Identifier	t		47178	1					
ANR	47799	PrimaryExpression	'\\t'		47178	1					
ANR	47800	PostIncDecOperationExpression	t ++	533:34:15128:15130	47178	1	True				
ANR	47801	Identifier	t		47178	0					
ANR	47802	IncDec	++		47178	1					
ANR	47803	ExpressionStatement		534:21:15154:15154	47178	2	True				
ANR	47804	IfStatement	if ( * t == '\\r' )		47178	2					
ANR	47805	Condition	* t == '\\r'	535:6:15162:15171	47178	0	True				
ANR	47806	EqualityExpression	* t == '\\r'		47178	0		==			
ANR	47807	UnaryOperationExpression	* t		47178	0					
ANR	47808	UnaryOperator	*		47178	0					
ANR	47809	Identifier	t		47178	1					
ANR	47810	PrimaryExpression	'\\r'		47178	1					
ANR	47811	ExpressionStatement	t ++	536:4:15178:15181	47178	1	True				
ANR	47812	PostIncDecOperationExpression	t ++		47178	0					
ANR	47813	Identifier	t		47178	0					
ANR	47814	IncDec	++		47178	1					
ANR	47815	ExpressionStatement	this_is_a_command = ( * t == '\\n' )	537:2:15185:15217	47178	3	True				
ANR	47816	AssignmentExpression	this_is_a_command = ( * t == '\\n' )		47178	0		=			
ANR	47817	Identifier	this_is_a_command		47178	0					
ANR	47818	EqualityExpression	* t == '\\n'		47178	1		==			
ANR	47819	UnaryOperationExpression	* t		47178	0					
ANR	47820	UnaryOperator	*		47178	0					
ANR	47821	Identifier	t		47178	1					
ANR	47822	PrimaryExpression	'\\n'		47178	1					
ANR	47823	IfStatement	if ( ! need_header && first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command ) )		47178	17					
ANR	47824	Condition	! need_header && first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command )	540:5:15238:15362	47178	0	True				
ANR	47825	AndExpression	! need_header && first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command )		47178	0		&&			
ANR	47826	UnaryOperationExpression	! need_header		47178	0					
ANR	47827	UnaryOperator	!		47178	0					
ANR	47828	Identifier	need_header		47178	1					
ANR	47829	AndExpression	first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command )		47178	1		&&			
ANR	47830	RelationalExpression	first_command_line < 0		47178	0		<			
ANR	47831	Identifier	first_command_line		47178	0					
ANR	47832	PrimaryExpression	0		47178	1					
ANR	47833	OrExpression	( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command		47178	1		||			
ANR	47834	AssignmentExpression	ed_command_letter = get_ed_command_letter ( s )		47178	0		=			
ANR	47835	Identifier	ed_command_letter		47178	0					
ANR	47836	CallExpression	get_ed_command_letter ( s )		47178	1					
ANR	47837	Callee	get_ed_command_letter		47178	0					
ANR	47838	Identifier	get_ed_command_letter		47178	0					
ANR	47839	ArgumentList	s		47178	1					
ANR	47840	Argument	s		47178	0					
ANR	47841	Identifier	s		47178	0					
ANR	47842	Identifier	this_is_a_command		47178	1					
ANR	47843	CompoundStatement		117:25:2960:2960	47178	1					
ANR	47844	ExpressionStatement	first_command_line = this_line	544:5:15372:15402	47178	0	True				
ANR	47845	AssignmentExpression	first_command_line = this_line		47178	0		=			
ANR	47846	Identifier	first_command_line		47178	0					
ANR	47847	Identifier	this_line		47178	1					
ANR	47848	ExpressionStatement	first_ed_command_letter = ed_command_letter	545:5:15409:15452	47178	1	True				
ANR	47849	AssignmentExpression	first_ed_command_letter = ed_command_letter		47178	0		=			
ANR	47850	Identifier	first_ed_command_letter		47178	0					
ANR	47851	Identifier	ed_command_letter		47178	1					
ANR	47852	ExpressionStatement	fcl_line = p_input_line	546:5:15459:15482	47178	2	True				
ANR	47853	AssignmentExpression	fcl_line = p_input_line		47178	0		=			
ANR	47854	Identifier	fcl_line		47178	0					
ANR	47855	Identifier	p_input_line		47178	1					
ANR	47856	ExpressionStatement	p_indent = indent	547:5:15489:15506	47178	3	True				
ANR	47857	AssignmentExpression	p_indent = indent		47178	0		=			
ANR	47858	Identifier	p_indent		47178	0					
ANR	47859	Identifier	indent		47178	1					
ANR	47860	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	548:5:15540:15579	47178	4	True				
ANR	47861	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		47178	0		=			
ANR	47862	Identifier	p_strip_trailing_cr		47178	0					
ANR	47863	Identifier	strip_trailing_cr		47178	1					
ANR	47864	IfStatement	"if ( ! stars_last_line && strnEQ ( s , ""*** "" , 4 ) )"		47178	18					
ANR	47865	Condition	"! stars_last_line && strnEQ ( s , ""*** "" , 4 )"	550:5:15589:15628	47178	0	True				
ANR	47866	AndExpression	"! stars_last_line && strnEQ ( s , ""*** "" , 4 )"		47178	0		&&			
ANR	47867	UnaryOperationExpression	! stars_last_line		47178	0					
ANR	47868	UnaryOperator	!		47178	0					
ANR	47869	Identifier	stars_last_line		47178	1					
ANR	47870	CallExpression	"strnEQ ( s , ""*** "" , 4 )"		47178	1					
ANR	47871	Callee	strnEQ		47178	0					
ANR	47872	Identifier	strnEQ		47178	0					
ANR	47873	ArgumentList	s		47178	1					
ANR	47874	Argument	s		47178	0					
ANR	47875	Identifier	s		47178	0					
ANR	47876	Argument	"""*** """		47178	1					
ANR	47877	PrimaryExpression	"""*** """		47178	0					
ANR	47878	Argument	4		47178	2					
ANR	47879	PrimaryExpression	4		47178	0					
ANR	47880	CompoundStatement		125:3:3229:3229	47178	1					
ANR	47881	ExpressionStatement	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"	552:5:15641:15726	47178	0	True				
ANR	47882	CallExpression	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"		47178	0					
ANR	47883	Callee	fetchname		47178	0					
ANR	47884	Identifier	fetchname		47178	0					
ANR	47885	ArgumentList	s + 4		47178	1					
ANR	47886	Argument	s + 4		47178	0					
ANR	47887	AdditiveExpression	s + 4		47178	0		+			
ANR	47888	Identifier	s		47178	0					
ANR	47889	PrimaryExpression	4		47178	1					
ANR	47890	Argument	strippath		47178	1					
ANR	47891	Identifier	strippath		47178	0					
ANR	47892	Argument	& p_name [ OLD ]		47178	2					
ANR	47893	UnaryOperationExpression	& p_name [ OLD ]		47178	0					
ANR	47894	UnaryOperator	&		47178	0					
ANR	47895	ArrayIndexing	p_name [ OLD ]		47178	1					
ANR	47896	Identifier	p_name		47178	0					
ANR	47897	Identifier	OLD		47178	1					
ANR	47898	Argument	& p_timestr [ OLD ]		47178	3					
ANR	47899	UnaryOperationExpression	& p_timestr [ OLD ]		47178	0					
ANR	47900	UnaryOperator	&		47178	0					
ANR	47901	ArrayIndexing	p_timestr [ OLD ]		47178	1					
ANR	47902	Identifier	p_timestr		47178	0					
ANR	47903	Identifier	OLD		47178	1					
ANR	47904	Argument	& p_timestamp [ OLD ]		47178	4					
ANR	47905	UnaryOperationExpression	& p_timestamp [ OLD ]		47178	0					
ANR	47906	UnaryOperator	&		47178	0					
ANR	47907	ArrayIndexing	p_timestamp [ OLD ]		47178	1					
ANR	47908	Identifier	p_timestamp		47178	0					
ANR	47909	Identifier	OLD		47178	1					
ANR	47910	ExpressionStatement	need_header = false	554:5:15733:15752	47178	1	True				
ANR	47911	AssignmentExpression	need_header = false		47178	0		=			
ANR	47912	Identifier	need_header		47178	0					
ANR	47913	Identifier	false		47178	1					
ANR	47914	ElseStatement	else		47178	0					
ANR	47915	IfStatement	"if ( strnEQ ( s , ""+++ "" , 4 ) )"		47178	0					
ANR	47916	Condition	"strnEQ ( s , ""+++ "" , 4 )"	556:10:15769:15788	47178	0	True				
ANR	47917	CallExpression	"strnEQ ( s , ""+++ "" , 4 )"		47178	0					
ANR	47918	Callee	strnEQ		47178	0					
ANR	47919	Identifier	strnEQ		47178	0					
ANR	47920	ArgumentList	s		47178	1					
ANR	47921	Argument	s		47178	0					
ANR	47922	Identifier	s		47178	0					
ANR	47923	Argument	"""+++ """		47178	1					
ANR	47924	PrimaryExpression	"""+++ """		47178	0					
ANR	47925	Argument	4		47178	2					
ANR	47926	PrimaryExpression	4		47178	0					
ANR	47927	CompoundStatement		131:3:3389:3389	47178	1					
ANR	47928	ExpressionStatement	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"	559:5:15834:15919	47178	0	True				
ANR	47929	CallExpression	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"		47178	0					
ANR	47930	Callee	fetchname		47178	0					
ANR	47931	Identifier	fetchname		47178	0					
ANR	47932	ArgumentList	s + 4		47178	1					
ANR	47933	Argument	s + 4		47178	0					
ANR	47934	AdditiveExpression	s + 4		47178	0		+			
ANR	47935	Identifier	s		47178	0					
ANR	47936	PrimaryExpression	4		47178	1					
ANR	47937	Argument	strippath		47178	1					
ANR	47938	Identifier	strippath		47178	0					
ANR	47939	Argument	& p_name [ OLD ]		47178	2					
ANR	47940	UnaryOperationExpression	& p_name [ OLD ]		47178	0					
ANR	47941	UnaryOperator	&		47178	0					
ANR	47942	ArrayIndexing	p_name [ OLD ]		47178	1					
ANR	47943	Identifier	p_name		47178	0					
ANR	47944	Identifier	OLD		47178	1					
ANR	47945	Argument	& p_timestr [ OLD ]		47178	3					
ANR	47946	UnaryOperationExpression	& p_timestr [ OLD ]		47178	0					
ANR	47947	UnaryOperator	&		47178	0					
ANR	47948	ArrayIndexing	p_timestr [ OLD ]		47178	1					
ANR	47949	Identifier	p_timestr		47178	0					
ANR	47950	Identifier	OLD		47178	1					
ANR	47951	Argument	& p_timestamp [ OLD ]		47178	4					
ANR	47952	UnaryOperationExpression	& p_timestamp [ OLD ]		47178	0					
ANR	47953	UnaryOperator	&		47178	0					
ANR	47954	ArrayIndexing	p_timestamp [ OLD ]		47178	1					
ANR	47955	Identifier	p_timestamp		47178	0					
ANR	47956	Identifier	OLD		47178	1					
ANR	47957	ExpressionStatement	need_header = false	561:5:15926:15945	47178	1	True				
ANR	47958	AssignmentExpression	need_header = false		47178	0		=			
ANR	47959	Identifier	need_header		47178	0					
ANR	47960	Identifier	false		47178	1					
ANR	47961	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	562:5:15952:15991	47178	2	True				
ANR	47962	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		47178	0		=			
ANR	47963	Identifier	p_strip_trailing_cr		47178	0					
ANR	47964	Identifier	strip_trailing_cr		47178	1					
ANR	47965	ElseStatement	else		47178	0					
ANR	47966	IfStatement	"if ( strnEQ ( s , ""Index:"" , 6 ) )"		47178	0					
ANR	47967	Condition	"strnEQ ( s , ""Index:"" , 6 )"	564:10:16008:16029	47178	0	True				
ANR	47968	CallExpression	"strnEQ ( s , ""Index:"" , 6 )"		47178	0					
ANR	47969	Callee	strnEQ		47178	0					
ANR	47970	Identifier	strnEQ		47178	0					
ANR	47971	ArgumentList	s		47178	1					
ANR	47972	Argument	s		47178	0					
ANR	47973	Identifier	s		47178	0					
ANR	47974	Argument	"""Index:"""		47178	1					
ANR	47975	PrimaryExpression	"""Index:"""		47178	0					
ANR	47976	Argument	6		47178	2					
ANR	47977	PrimaryExpression	6		47178	0					
ANR	47978	CompoundStatement		139:3:3630:3630	47178	1					
ANR	47979	ExpressionStatement	"fetchname ( s + 6 , strippath , & p_name [ INDEX ] , ( char * * ) 0 , NULL )"	566:5:16042:16103	47178	0	True				
ANR	47980	CallExpression	"fetchname ( s + 6 , strippath , & p_name [ INDEX ] , ( char * * ) 0 , NULL )"		47178	0					
ANR	47981	Callee	fetchname		47178	0					
ANR	47982	Identifier	fetchname		47178	0					
ANR	47983	ArgumentList	s + 6		47178	1					
ANR	47984	Argument	s + 6		47178	0					
ANR	47985	AdditiveExpression	s + 6		47178	0		+			
ANR	47986	Identifier	s		47178	0					
ANR	47987	PrimaryExpression	6		47178	1					
ANR	47988	Argument	strippath		47178	1					
ANR	47989	Identifier	strippath		47178	0					
ANR	47990	Argument	& p_name [ INDEX ]		47178	2					
ANR	47991	UnaryOperationExpression	& p_name [ INDEX ]		47178	0					
ANR	47992	UnaryOperator	&		47178	0					
ANR	47993	ArrayIndexing	p_name [ INDEX ]		47178	1					
ANR	47994	Identifier	p_name		47178	0					
ANR	47995	Identifier	INDEX		47178	1					
ANR	47996	Argument	( char * * ) 0		47178	3					
ANR	47997	CastExpression	( char * * ) 0		47178	0					
ANR	47998	CastTarget	char * *		47178	0					
ANR	47999	PrimaryExpression	0		47178	1					
ANR	48000	Argument	NULL		47178	4					
ANR	48001	Identifier	NULL		47178	0					
ANR	48002	ExpressionStatement	need_header = false	567:5:16110:16129	47178	1	True				
ANR	48003	AssignmentExpression	need_header = false		47178	0		=			
ANR	48004	Identifier	need_header		47178	0					
ANR	48005	Identifier	false		47178	1					
ANR	48006	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	568:5:16136:16175	47178	2	True				
ANR	48007	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		47178	0		=			
ANR	48008	Identifier	p_strip_trailing_cr		47178	0					
ANR	48009	Identifier	strip_trailing_cr		47178	1					
ANR	48010	ElseStatement	else		47178	0					
ANR	48011	IfStatement	"if ( strnEQ ( s , ""Prereq:"" , 7 ) )"		47178	0					
ANR	48012	Condition	"strnEQ ( s , ""Prereq:"" , 7 )"	570:10:16192:16214	47178	0	True				
ANR	48013	CallExpression	"strnEQ ( s , ""Prereq:"" , 7 )"		47178	0					
ANR	48014	Callee	strnEQ		47178	0					
ANR	48015	Identifier	strnEQ		47178	0					
ANR	48016	ArgumentList	s		47178	1					
ANR	48017	Argument	s		47178	0					
ANR	48018	Identifier	s		47178	0					
ANR	48019	Argument	"""Prereq:"""		47178	1					
ANR	48020	PrimaryExpression	"""Prereq:"""		47178	0					
ANR	48021	Argument	7		47178	2					
ANR	48022	PrimaryExpression	7		47178	0					
ANR	48023	CompoundStatement		145:3:3815:3815	47178	1					
ANR	48024	ForStatement	for ( t = s + 7 ; ISSPACE ( ( unsigned char ) * t ) ; t ++ )		47178	0					
ANR	48025	ForInit	t = s + 7 ;	572:10:16232:16241	47178	0	True				
ANR	48026	AssignmentExpression	t = s + 7		47178	0		=			
ANR	48027	Identifier	t		47178	0					
ANR	48028	AdditiveExpression	s + 7		47178	1		+			
ANR	48029	Identifier	s		47178	0					
ANR	48030	PrimaryExpression	7		47178	1					
ANR	48031	Condition	ISSPACE ( ( unsigned char ) * t )	572:22:16244:16271	47178	1	True				
ANR	48032	CallExpression	ISSPACE ( ( unsigned char ) * t )		47178	0					
ANR	48033	Callee	ISSPACE		47178	0					
ANR	48034	Identifier	ISSPACE		47178	0					
ANR	48035	ArgumentList	( unsigned char ) * t		47178	1					
ANR	48036	Argument	( unsigned char ) * t		47178	0					
ANR	48037	CastExpression	( unsigned char ) * t		47178	0					
ANR	48038	CastTarget	unsigned char		47178	0					
ANR	48039	UnaryOperationExpression	* t		47178	1					
ANR	48040	UnaryOperator	*		47178	0					
ANR	48041	Identifier	t		47178	1					
ANR	48042	PostIncDecOperationExpression	t ++	572:53:16275:16277	47178	2	True				
ANR	48043	Identifier	t		47178	0					
ANR	48044	IncDec	++		47178	1					
ANR	48045	ExpressionStatement		573:24:16304:16304	47178	3	True				
ANR	48046	ExpressionStatement	revision = t	574:5:16311:16323	47178	1	True				
ANR	48047	AssignmentExpression	revision = t		47178	0		=			
ANR	48048	Identifier	revision		47178	0					
ANR	48049	Identifier	t		47178	1					
ANR	48050	ForStatement	for ( t = revision ; * t ; t ++ )		47178	2					
ANR	48051	ForInit	t = revision ;	575:10:16335:16347	47178	0	True				
ANR	48052	AssignmentExpression	t = revision		47178	0		=			
ANR	48053	Identifier	t		47178	0					
ANR	48054	Identifier	revision		47178	1					
ANR	48055	Condition	* t	575:25:16350:16351	47178	1	True				
ANR	48056	UnaryOperationExpression	* t		47178	0					
ANR	48057	UnaryOperator	*		47178	0					
ANR	48058	Identifier	t		47178	1					
ANR	48059	PostIncDecOperationExpression	t ++	575:30:16355:16357	47178	2	True				
ANR	48060	Identifier	t		47178	0					
ANR	48061	IncDec	++		47178	1					
ANR	48062	IfStatement	if ( ISSPACE ( ( unsigned char ) * t ) )		47178	3					
ANR	48063	Condition	ISSPACE ( ( unsigned char ) * t )	576:11:16371:16398	47178	0	True				
ANR	48064	CallExpression	ISSPACE ( ( unsigned char ) * t )		47178	0					
ANR	48065	Callee	ISSPACE		47178	0					
ANR	48066	Identifier	ISSPACE		47178	0					
ANR	48067	ArgumentList	( unsigned char ) * t		47178	1					
ANR	48068	Argument	( unsigned char ) * t		47178	0					
ANR	48069	CastExpression	( unsigned char ) * t		47178	0					
ANR	48070	CastTarget	unsigned char		47178	0					
ANR	48071	UnaryOperationExpression	* t		47178	1					
ANR	48072	UnaryOperator	*		47178	0					
ANR	48073	Identifier	t		47178	1					
ANR	48074	CompoundStatement		152:4:4004:4017	47178	1					
ANR	48075	IdentifierDeclStatement	char const * u ;	578:4:16409:16422	47178	0	True				
ANR	48076	IdentifierDecl	* u		47178	0					
ANR	48077	IdentifierDeclType	char const *		47178	0					
ANR	48078	Identifier	u		47178	1					
ANR	48079	ForStatement	for ( u = t + 1 ; ISSPACE ( ( unsigned char ) * u ) ; u ++ )		47178	1					
ANR	48080	ForInit	u = t + 1 ;	579:9:16433:16442	47178	0	True				
ANR	48081	AssignmentExpression	u = t + 1		47178	0		=			
ANR	48082	Identifier	u		47178	0					
ANR	48083	AdditiveExpression	t + 1		47178	1		+			
ANR	48084	Identifier	t		47178	0					
ANR	48085	PrimaryExpression	1		47178	1					
ANR	48086	Condition	ISSPACE ( ( unsigned char ) * u )	579:21:16445:16472	47178	1	True				
ANR	48087	CallExpression	ISSPACE ( ( unsigned char ) * u )		47178	0					
ANR	48088	Callee	ISSPACE		47178	0					
ANR	48089	Identifier	ISSPACE		47178	0					
ANR	48090	ArgumentList	( unsigned char ) * u		47178	1					
ANR	48091	Argument	( unsigned char ) * u		47178	0					
ANR	48092	CastExpression	( unsigned char ) * u		47178	0					
ANR	48093	CastTarget	unsigned char		47178	0					
ANR	48094	UnaryOperationExpression	* u		47178	1					
ANR	48095	UnaryOperator	*		47178	0					
ANR	48096	Identifier	u		47178	1					
ANR	48097	PostIncDecOperationExpression	u ++	579:52:16476:16478	47178	2	True				
ANR	48098	Identifier	u		47178	0					
ANR	48099	IncDec	++		47178	1					
ANR	48100	ExpressionStatement		580:23:16504:16504	47178	3	True				
ANR	48101	IfStatement	if ( * u )		47178	2					
ANR	48102	Condition	* u	581:8:16514:16515	47178	0	True				
ANR	48103	UnaryOperationExpression	* u		47178	0					
ANR	48104	UnaryOperator	*		47178	0					
ANR	48105	Identifier	u		47178	1					
ANR	48106	CompoundStatement		157:8:4129:4166	47178	1					
ANR	48107	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	583:8:16534:16571	47178	0	True				
ANR	48108	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		47178	0					
ANR	48109	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		47178	0					
ANR	48110	Identifier	numbuf		47178	1					
ANR	48111	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		47178	2		+			
ANR	48112	Identifier	LINENUM_LENGTH_BOUND		47178	0					
ANR	48113	PrimaryExpression	1		47178	1					
ANR	48114	ExpressionStatement	"say ( ""Prereq: with multiple words at line %s of patch\\n"" , format_linenum ( numbuf , this_line ) )"	584:8:16581:16680	47178	1	True				
ANR	48115	CallExpression	"say ( ""Prereq: with multiple words at line %s of patch\\n"" , format_linenum ( numbuf , this_line ) )"		47178	0					
ANR	48116	Callee	say		47178	0					
ANR	48117	Identifier	say		47178	0					
ANR	48118	ArgumentList	"""Prereq: with multiple words at line %s of patch\\n"""		47178	1					
ANR	48119	Argument	"""Prereq: with multiple words at line %s of patch\\n"""		47178	0					
ANR	48120	PrimaryExpression	"""Prereq: with multiple words at line %s of patch\\n"""		47178	0					
ANR	48121	Argument	"format_linenum ( numbuf , this_line )"		47178	1					
ANR	48122	CallExpression	"format_linenum ( numbuf , this_line )"		47178	0					
ANR	48123	Callee	format_linenum		47178	0					
ANR	48124	Identifier	format_linenum		47178	0					
ANR	48125	ArgumentList	numbuf		47178	1					
ANR	48126	Argument	numbuf		47178	0					
ANR	48127	Identifier	numbuf		47178	0					
ANR	48128	Argument	this_line		47178	1					
ANR	48129	Identifier	this_line		47178	0					
ANR	48130	BreakStatement	break ;	587:4:16694:16699	47178	3	True				
ANR	48131	IfStatement	if ( t == revision )		47178	3					
ANR	48132	Condition	t == revision	589:9:16714:16726	47178	0	True				
ANR	48133	EqualityExpression	t == revision		47178	0		==			
ANR	48134	Identifier	t		47178	0					
ANR	48135	Identifier	revision		47178	1					
ANR	48136	ExpressionStatement	revision = 0	590:2:16731:16743	47178	1	True				
ANR	48137	AssignmentExpression	revision = 0		47178	0		=			
ANR	48138	Identifier	revision		47178	0					
ANR	48139	PrimaryExpression	0		47178	1					
ANR	48140	ElseStatement	else		47178	0					
ANR	48141	CompoundStatement		166:2:4354:4368	47178	0					
ANR	48142	IdentifierDeclStatement	char oldc = * t ;	592:2:16759:16773	47178	0	True				
ANR	48143	IdentifierDecl	oldc = * t		47178	0					
ANR	48144	IdentifierDeclType	char		47178	0					
ANR	48145	Identifier	oldc		47178	1					
ANR	48146	AssignmentExpression	oldc = * t		47178	2		=			
ANR	48147	Identifier	oldc		47178	0					
ANR	48148	UnaryOperationExpression	* t		47178	1					
ANR	48149	UnaryOperator	*		47178	0					
ANR	48150	Identifier	t		47178	1					
ANR	48151	ExpressionStatement	* t = '\\0'	593:2:16777:16786	47178	1	True				
ANR	48152	AssignmentExpression	* t = '\\0'		47178	0		=			
ANR	48153	UnaryOperationExpression	* t		47178	0					
ANR	48154	UnaryOperator	*		47178	0					
ANR	48155	Identifier	t		47178	1					
ANR	48156	PrimaryExpression	'\\0'		47178	1					
ANR	48157	ExpressionStatement	revision = xstrdup ( revision )	594:2:16790:16819	47178	2	True				
ANR	48158	AssignmentExpression	revision = xstrdup ( revision )		47178	0		=			
ANR	48159	Identifier	revision		47178	0					
ANR	48160	CallExpression	xstrdup ( revision )		47178	1					
ANR	48161	Callee	xstrdup		47178	0					
ANR	48162	Identifier	xstrdup		47178	0					
ANR	48163	ArgumentList	revision		47178	1					
ANR	48164	Argument	revision		47178	0					
ANR	48165	Identifier	revision		47178	0					
ANR	48166	ExpressionStatement	* t = oldc	595:2:16823:16832	47178	3	True				
ANR	48167	AssignmentExpression	* t = oldc		47178	0		=			
ANR	48168	UnaryOperationExpression	* t		47178	0					
ANR	48169	UnaryOperator	*		47178	0					
ANR	48170	Identifier	t		47178	1					
ANR	48171	Identifier	oldc		47178	1					
ANR	48172	ElseStatement	else		47178	0					
ANR	48173	IfStatement	"if ( strnEQ ( s , ""diff --git "" , 11 ) )"		47178	0					
ANR	48174	Condition	"strnEQ ( s , ""diff --git "" , 11 )"	598:10:16856:16884	47178	0	True				
ANR	48175	CallExpression	"strnEQ ( s , ""diff --git "" , 11 )"		47178	0					
ANR	48176	Callee	strnEQ		47178	0					
ANR	48177	Identifier	strnEQ		47178	0					
ANR	48178	ArgumentList	s		47178	1					
ANR	48179	Argument	s		47178	0					
ANR	48180	Identifier	s		47178	0					
ANR	48181	Argument	"""diff --git """		47178	1					
ANR	48182	PrimaryExpression	"""diff --git """		47178	0					
ANR	48183	Argument	11		47178	2					
ANR	48184	PrimaryExpression	11		47178	0					
ANR	48185	CompoundStatement		174:5:4492:4505	47178	1					
ANR	48186	IdentifierDeclStatement	char const * u ;	600:5:16897:16910	47178	0	True				
ANR	48187	IdentifierDecl	* u		47178	0					
ANR	48188	IdentifierDeclType	char const *		47178	0					
ANR	48189	Identifier	u		47178	1					
ANR	48190	IfStatement	if ( extended_headers )		47178	1					
ANR	48191	Condition	extended_headers	602:9:16922:16937	47178	0	True				
ANR	48192	Identifier	extended_headers		47178	0					
ANR	48193	CompoundStatement		177:7:4542:4542	47178	1					
ANR	48194	ExpressionStatement	p_start = this_line	604:2:16951:16970	47178	0	True				
ANR	48195	AssignmentExpression	p_start = this_line		47178	0		=			
ANR	48196	Identifier	p_start		47178	0					
ANR	48197	Identifier	this_line		47178	1					
ANR	48198	ExpressionStatement	p_sline = p_input_line	605:2:16974:16996	47178	1	True				
ANR	48199	AssignmentExpression	p_sline = p_input_line		47178	0		=			
ANR	48200	Identifier	p_sline		47178	0					
ANR	48201	Identifier	p_input_line		47178	1					
ANR	48202	ExpressionStatement	retval = UNI_DIFF	607:2:17056:17073	47178	2	True				
ANR	48203	AssignmentExpression	retval = UNI_DIFF		47178	0		=			
ANR	48204	Identifier	retval		47178	0					
ANR	48205	Identifier	UNI_DIFF		47178	1					
ANR	48206	GotoStatement	goto scan_exit ;	608:2:17077:17091	47178	3	True				
ANR	48207	Identifier	scan_exit		47178	0					
ANR	48208	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		47178	2					
ANR	48209	ForInit	i = OLD ;	611:10:17113:17120	47178	0	True				
ANR	48210	AssignmentExpression	i = OLD		47178	0		=			
ANR	48211	Identifier	i		47178	0					
ANR	48212	Identifier	OLD		47178	1					
ANR	48213	Condition	i <= NEW	611:19:17122:17129	47178	1	True				
ANR	48214	RelationalExpression	i <= NEW		47178	0		<=			
ANR	48215	Identifier	i		47178	0					
ANR	48216	Identifier	NEW		47178	1					
ANR	48217	PostIncDecOperationExpression	i ++	611:29:17132:17134	47178	2	True				
ANR	48218	Identifier	i		47178	0					
ANR	48219	IncDec	++		47178	1					
ANR	48220	CompoundStatement		186:7:4739:4739	47178	3					
ANR	48221	ExpressionStatement	free ( p_name [ i ] )	613:2:17148:17164	47178	0	True				
ANR	48222	CallExpression	free ( p_name [ i ] )		47178	0					
ANR	48223	Callee	free		47178	0					
ANR	48224	Identifier	free		47178	0					
ANR	48225	ArgumentList	p_name [ i ]		47178	1					
ANR	48226	Argument	p_name [ i ]		47178	0					
ANR	48227	ArrayIndexing	p_name [ i ]		47178	0					
ANR	48228	Identifier	p_name		47178	0					
ANR	48229	Identifier	i		47178	1					
ANR	48230	ExpressionStatement	p_name [ i ] = 0	614:2:17168:17181	47178	1	True				
ANR	48231	AssignmentExpression	p_name [ i ] = 0		47178	0		=			
ANR	48232	ArrayIndexing	p_name [ i ]		47178	0					
ANR	48233	Identifier	p_name		47178	0					
ANR	48234	Identifier	i		47178	1					
ANR	48235	PrimaryExpression	0		47178	1					
ANR	48236	IfStatement	"if ( ! ( ( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u ) ) )"		47178	3					
ANR	48237	Condition	"! ( ( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u ) )"	616:9:17201:17381	47178	0	True				
ANR	48238	UnaryOperationExpression	"! ( ( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u ) )"		47178	0					
ANR	48239	UnaryOperator	!		47178	0					
ANR	48240	AndExpression	"( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u )"		47178	1		&&			
ANR	48241	AssignmentExpression	"p_name [ OLD ] = parse_name ( s + 11 , strippath , & u )"		47178	0		=			
ANR	48242	ArrayIndexing	p_name [ OLD ]		47178	0					
ANR	48243	Identifier	p_name		47178	0					
ANR	48244	Identifier	OLD		47178	1					
ANR	48245	CallExpression	"parse_name ( s + 11 , strippath , & u )"		47178	1					
ANR	48246	Callee	parse_name		47178	0					
ANR	48247	Identifier	parse_name		47178	0					
ANR	48248	ArgumentList	s + 11		47178	1					
ANR	48249	Argument	s + 11		47178	0					
ANR	48250	AdditiveExpression	s + 11		47178	0		+			
ANR	48251	Identifier	s		47178	0					
ANR	48252	PrimaryExpression	11		47178	1					
ANR	48253	Argument	strippath		47178	1					
ANR	48254	Identifier	strippath		47178	0					
ANR	48255	Argument	& u		47178	2					
ANR	48256	UnaryOperationExpression	& u		47178	0					
ANR	48257	UnaryOperator	&		47178	0					
ANR	48258	Identifier	u		47178	1					
ANR	48259	AndExpression	"ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u )"		47178	1		&&			
ANR	48260	CallExpression	ISSPACE ( ( unsigned char ) * u )		47178	0					
ANR	48261	Callee	ISSPACE		47178	0					
ANR	48262	Identifier	ISSPACE		47178	0					
ANR	48263	ArgumentList	( unsigned char ) * u		47178	1					
ANR	48264	Argument	( unsigned char ) * u		47178	0					
ANR	48265	CastExpression	( unsigned char ) * u		47178	0					
ANR	48266	CastTarget	unsigned char		47178	0					
ANR	48267	UnaryOperationExpression	* u		47178	1					
ANR	48268	UnaryOperator	*		47178	0					
ANR	48269	Identifier	u		47178	1					
ANR	48270	AndExpression	"( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u )"		47178	1		&&			
ANR	48271	AssignmentExpression	"p_name [ NEW ] = parse_name ( u , strippath , & u )"		47178	0		=			
ANR	48272	ArrayIndexing	p_name [ NEW ]		47178	0					
ANR	48273	Identifier	p_name		47178	0					
ANR	48274	Identifier	NEW		47178	1					
ANR	48275	CallExpression	"parse_name ( u , strippath , & u )"		47178	1					
ANR	48276	Callee	parse_name		47178	0					
ANR	48277	Identifier	parse_name		47178	0					
ANR	48278	ArgumentList	u		47178	1					
ANR	48279	Argument	u		47178	0					
ANR	48280	Identifier	u		47178	0					
ANR	48281	Argument	strippath		47178	1					
ANR	48282	Identifier	strippath		47178	0					
ANR	48283	Argument	& u		47178	2					
ANR	48284	UnaryOperationExpression	& u		47178	0					
ANR	48285	UnaryOperator	&		47178	0					
ANR	48286	Identifier	u		47178	1					
ANR	48287	Expression	"u = skip_spaces ( u ) , ! * u"		47178	1					
ANR	48288	AssignmentExpression	u = skip_spaces ( u )		47178	0		=			
ANR	48289	Identifier	u		47178	0					
ANR	48290	CallExpression	skip_spaces ( u )		47178	1					
ANR	48291	Callee	skip_spaces		47178	0					
ANR	48292	Identifier	skip_spaces		47178	0					
ANR	48293	ArgumentList	u		47178	1					
ANR	48294	Argument	u		47178	0					
ANR	48295	Identifier	u		47178	0					
ANR	48296	UnaryOperationExpression	! * u		47178	1					
ANR	48297	UnaryOperator	!		47178	0					
ANR	48298	UnaryOperationExpression	* u		47178	1					
ANR	48299	UnaryOperator	*		47178	0					
ANR	48300	Identifier	u		47178	1					
ANR	48301	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		47178	1					
ANR	48302	ForInit	i = OLD ;	620:12:17396:17403	47178	0	True				
ANR	48303	AssignmentExpression	i = OLD		47178	0		=			
ANR	48304	Identifier	i		47178	0					
ANR	48305	Identifier	OLD		47178	1					
ANR	48306	Condition	i <= NEW	620:21:17405:17412	47178	1	True				
ANR	48307	RelationalExpression	i <= NEW		47178	0		<=			
ANR	48308	Identifier	i		47178	0					
ANR	48309	Identifier	NEW		47178	1					
ANR	48310	PostIncDecOperationExpression	i ++	620:31:17415:17417	47178	2	True				
ANR	48311	Identifier	i		47178	0					
ANR	48312	IncDec	++		47178	1					
ANR	48313	CompoundStatement		195:2:5017:5017	47178	3					
ANR	48314	ExpressionStatement	free ( p_name [ i ] )	622:4:17428:17444	47178	0	True				
ANR	48315	CallExpression	free ( p_name [ i ] )		47178	0					
ANR	48316	Callee	free		47178	0					
ANR	48317	Identifier	free		47178	0					
ANR	48318	ArgumentList	p_name [ i ]		47178	1					
ANR	48319	Argument	p_name [ i ]		47178	0					
ANR	48320	ArrayIndexing	p_name [ i ]		47178	0					
ANR	48321	Identifier	p_name		47178	0					
ANR	48322	Identifier	i		47178	1					
ANR	48323	ExpressionStatement	p_name [ i ] = 0	623:4:17450:17463	47178	1	True				
ANR	48324	AssignmentExpression	p_name [ i ] = 0		47178	0		=			
ANR	48325	ArrayIndexing	p_name [ i ]		47178	0					
ANR	48326	Identifier	p_name		47178	0					
ANR	48327	Identifier	i		47178	1					
ANR	48328	PrimaryExpression	0		47178	1					
ANR	48329	ExpressionStatement	p_git_diff = true	625:5:17474:17491	47178	4	True				
ANR	48330	AssignmentExpression	p_git_diff = true		47178	0		=			
ANR	48331	Identifier	p_git_diff		47178	0					
ANR	48332	Identifier	true		47178	1					
ANR	48333	ExpressionStatement	need_header = false	626:5:17498:17517	47178	5	True				
ANR	48334	AssignmentExpression	need_header = false		47178	0		=			
ANR	48335	Identifier	need_header		47178	0					
ANR	48336	Identifier	false		47178	1					
ANR	48337	ElseStatement	else		47178	0					
ANR	48338	IfStatement	"if ( p_git_diff && strnEQ ( s , ""index "" , 6 ) )"		47178	0					
ANR	48339	Condition	"p_git_diff && strnEQ ( s , ""index "" , 6 )"	628:10:17534:17570	47178	0	True				
ANR	48340	AndExpression	"p_git_diff && strnEQ ( s , ""index "" , 6 )"		47178	0		&&			
ANR	48341	Identifier	p_git_diff		47178	0					
ANR	48342	CallExpression	"strnEQ ( s , ""index "" , 6 )"		47178	1					
ANR	48343	Callee	strnEQ		47178	0					
ANR	48344	Identifier	strnEQ		47178	0					
ANR	48345	ArgumentList	s		47178	1					
ANR	48346	Argument	s		47178	0					
ANR	48347	Identifier	s		47178	0					
ANR	48348	Argument	"""index """		47178	1					
ANR	48349	PrimaryExpression	"""index """		47178	0					
ANR	48350	Argument	6		47178	2					
ANR	48351	PrimaryExpression	6		47178	0					
ANR	48352	CompoundStatement		204:5:5178:5195	47178	1					
ANR	48353	IdentifierDeclStatement	"char const * u , * v ;"	630:5:17583:17600	47178	0	True				
ANR	48354	IdentifierDecl	* u		47178	0					
ANR	48355	IdentifierDeclType	char const *		47178	0					
ANR	48356	Identifier	u		47178	1					
ANR	48357	IdentifierDecl	* v		47178	1					
ANR	48358	IdentifierDeclType	char const *		47178	0					
ANR	48359	Identifier	v		47178	1					
ANR	48360	IfStatement	if ( ( u = skip_hex_digits ( s + 6 ) ) && u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) ) )		47178	1					
ANR	48361	Condition	( u = skip_hex_digits ( s + 6 ) ) && u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )	631:9:17611:17750	47178	0	True				
ANR	48362	AndExpression	( u = skip_hex_digits ( s + 6 ) ) && u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		47178	0		&&			
ANR	48363	AssignmentExpression	u = skip_hex_digits ( s + 6 )		47178	0		=			
ANR	48364	Identifier	u		47178	0					
ANR	48365	CallExpression	skip_hex_digits ( s + 6 )		47178	1					
ANR	48366	Callee	skip_hex_digits		47178	0					
ANR	48367	Identifier	skip_hex_digits		47178	0					
ANR	48368	ArgumentList	s + 6		47178	1					
ANR	48369	Argument	s + 6		47178	0					
ANR	48370	AdditiveExpression	s + 6		47178	0		+			
ANR	48371	Identifier	s		47178	0					
ANR	48372	PrimaryExpression	6		47178	1					
ANR	48373	AndExpression	u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		47178	1		&&			
ANR	48374	EqualityExpression	u [ 0 ] == '.'		47178	0		==			
ANR	48375	ArrayIndexing	u [ 0 ]		47178	0					
ANR	48376	Identifier	u		47178	0					
ANR	48377	PrimaryExpression	0		47178	1					
ANR	48378	PrimaryExpression	'.'		47178	1					
ANR	48379	AndExpression	u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		47178	1		&&			
ANR	48380	EqualityExpression	u [ 1 ] == '.'		47178	0		==			
ANR	48381	ArrayIndexing	u [ 1 ]		47178	0					
ANR	48382	Identifier	u		47178	0					
ANR	48383	PrimaryExpression	1		47178	1					
ANR	48384	PrimaryExpression	'.'		47178	1					
ANR	48385	AndExpression	( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		47178	1		&&			
ANR	48386	AssignmentExpression	v = skip_hex_digits ( u + 2 )		47178	0		=			
ANR	48387	Identifier	v		47178	0					
ANR	48388	CallExpression	skip_hex_digits ( u + 2 )		47178	1					
ANR	48389	Callee	skip_hex_digits		47178	0					
ANR	48390	Identifier	skip_hex_digits		47178	0					
ANR	48391	ArgumentList	u + 2		47178	1					
ANR	48392	Argument	u + 2		47178	0					
ANR	48393	AdditiveExpression	u + 2		47178	0		+			
ANR	48394	Identifier	u		47178	0					
ANR	48395	PrimaryExpression	2		47178	1					
ANR	48396	OrExpression	! * v || ISSPACE ( ( unsigned char ) * v )		47178	1		||			
ANR	48397	UnaryOperationExpression	! * v		47178	0					
ANR	48398	UnaryOperator	!		47178	0					
ANR	48399	UnaryOperationExpression	* v		47178	1					
ANR	48400	UnaryOperator	*		47178	0					
ANR	48401	Identifier	v		47178	1					
ANR	48402	CallExpression	ISSPACE ( ( unsigned char ) * v )		47178	1					
ANR	48403	Callee	ISSPACE		47178	0					
ANR	48404	Identifier	ISSPACE		47178	0					
ANR	48405	ArgumentList	( unsigned char ) * v		47178	1					
ANR	48406	Argument	( unsigned char ) * v		47178	0					
ANR	48407	CastExpression	( unsigned char ) * v		47178	0					
ANR	48408	CastTarget	unsigned char		47178	0					
ANR	48409	UnaryOperationExpression	* v		47178	1					
ANR	48410	UnaryOperator	*		47178	0					
ANR	48411	Identifier	v		47178	1					
ANR	48412	CompoundStatement		209:7:5355:5355	47178	1					
ANR	48413	ExpressionStatement	"get_sha1 ( & p_sha1 [ OLD ] , s + 6 , u )"	636:2:17764:17796	47178	0	True				
ANR	48414	CallExpression	"get_sha1 ( & p_sha1 [ OLD ] , s + 6 , u )"		47178	0					
ANR	48415	Callee	get_sha1		47178	0					
ANR	48416	Identifier	get_sha1		47178	0					
ANR	48417	ArgumentList	& p_sha1 [ OLD ]		47178	1					
ANR	48418	Argument	& p_sha1 [ OLD ]		47178	0					
ANR	48419	UnaryOperationExpression	& p_sha1 [ OLD ]		47178	0					
ANR	48420	UnaryOperator	&		47178	0					
ANR	48421	ArrayIndexing	p_sha1 [ OLD ]		47178	1					
ANR	48422	Identifier	p_sha1		47178	0					
ANR	48423	Identifier	OLD		47178	1					
ANR	48424	Argument	s + 6		47178	1					
ANR	48425	AdditiveExpression	s + 6		47178	0		+			
ANR	48426	Identifier	s		47178	0					
ANR	48427	PrimaryExpression	6		47178	1					
ANR	48428	Argument	u		47178	2					
ANR	48429	Identifier	u		47178	0					
ANR	48430	ExpressionStatement	"get_sha1 ( & p_sha1 [ NEW ] , u + 2 , v )"	637:2:17800:17832	47178	1	True				
ANR	48431	CallExpression	"get_sha1 ( & p_sha1 [ NEW ] , u + 2 , v )"		47178	0					
ANR	48432	Callee	get_sha1		47178	0					
ANR	48433	Identifier	get_sha1		47178	0					
ANR	48434	ArgumentList	& p_sha1 [ NEW ]		47178	1					
ANR	48435	Argument	& p_sha1 [ NEW ]		47178	0					
ANR	48436	UnaryOperationExpression	& p_sha1 [ NEW ]		47178	0					
ANR	48437	UnaryOperator	&		47178	0					
ANR	48438	ArrayIndexing	p_sha1 [ NEW ]		47178	1					
ANR	48439	Identifier	p_sha1		47178	0					
ANR	48440	Identifier	NEW		47178	1					
ANR	48441	Argument	u + 2		47178	1					
ANR	48442	AdditiveExpression	u + 2		47178	0		+			
ANR	48443	Identifier	u		47178	0					
ANR	48444	PrimaryExpression	2		47178	1					
ANR	48445	Argument	v		47178	2					
ANR	48446	Identifier	v		47178	0					
ANR	48447	ExpressionStatement	p_says_nonexistent [ OLD ] = sha1_says_nonexistent ( p_sha1 [ OLD ] )	638:2:17836:17897	47178	2	True				
ANR	48448	AssignmentExpression	p_says_nonexistent [ OLD ] = sha1_says_nonexistent ( p_sha1 [ OLD ] )		47178	0		=			
ANR	48449	ArrayIndexing	p_says_nonexistent [ OLD ]		47178	0					
ANR	48450	Identifier	p_says_nonexistent		47178	0					
ANR	48451	Identifier	OLD		47178	1					
ANR	48452	CallExpression	sha1_says_nonexistent ( p_sha1 [ OLD ] )		47178	1					
ANR	48453	Callee	sha1_says_nonexistent		47178	0					
ANR	48454	Identifier	sha1_says_nonexistent		47178	0					
ANR	48455	ArgumentList	p_sha1 [ OLD ]		47178	1					
ANR	48456	Argument	p_sha1 [ OLD ]		47178	0					
ANR	48457	ArrayIndexing	p_sha1 [ OLD ]		47178	0					
ANR	48458	Identifier	p_sha1		47178	0					
ANR	48459	Identifier	OLD		47178	1					
ANR	48460	ExpressionStatement	p_says_nonexistent [ NEW ] = sha1_says_nonexistent ( p_sha1 [ NEW ] )	639:2:17901:17962	47178	3	True				
ANR	48461	AssignmentExpression	p_says_nonexistent [ NEW ] = sha1_says_nonexistent ( p_sha1 [ NEW ] )		47178	0		=			
ANR	48462	ArrayIndexing	p_says_nonexistent [ NEW ]		47178	0					
ANR	48463	Identifier	p_says_nonexistent		47178	0					
ANR	48464	Identifier	NEW		47178	1					
ANR	48465	CallExpression	sha1_says_nonexistent ( p_sha1 [ NEW ] )		47178	1					
ANR	48466	Callee	sha1_says_nonexistent		47178	0					
ANR	48467	Identifier	sha1_says_nonexistent		47178	0					
ANR	48468	ArgumentList	p_sha1 [ NEW ]		47178	1					
ANR	48469	Argument	p_sha1 [ NEW ]		47178	0					
ANR	48470	ArrayIndexing	p_sha1 [ NEW ]		47178	0					
ANR	48471	Identifier	p_sha1		47178	0					
ANR	48472	Identifier	NEW		47178	1					
ANR	48473	IfStatement	if ( * ( v = skip_spaces ( v ) ) )		47178	4					
ANR	48474	Condition	* ( v = skip_spaces ( v ) )	640:6:17970:17991	47178	0	True				
ANR	48475	UnaryOperationExpression	* ( v = skip_spaces ( v ) )		47178	0					
ANR	48476	UnaryOperator	*		47178	0					
ANR	48477	AssignmentExpression	v = skip_spaces ( v )		47178	1		=			
ANR	48478	Identifier	v		47178	0					
ANR	48479	CallExpression	skip_spaces ( v )		47178	1					
ANR	48480	Callee	skip_spaces		47178	0					
ANR	48481	Identifier	skip_spaces		47178	0					
ANR	48482	ArgumentList	v		47178	1					
ANR	48483	Argument	v		47178	0					
ANR	48484	Identifier	v		47178	0					
ANR	48485	ExpressionStatement	p_mode [ OLD ] = p_mode [ NEW ] = fetchmode ( v )	641:4:17998:18039	47178	1	True				
ANR	48486	AssignmentExpression	p_mode [ OLD ] = p_mode [ NEW ] = fetchmode ( v )		47178	0		=			
ANR	48487	ArrayIndexing	p_mode [ OLD ]		47178	0					
ANR	48488	Identifier	p_mode		47178	0					
ANR	48489	Identifier	OLD		47178	1					
ANR	48490	AssignmentExpression	p_mode [ NEW ] = fetchmode ( v )		47178	1		=			
ANR	48491	ArrayIndexing	p_mode [ NEW ]		47178	0					
ANR	48492	Identifier	p_mode		47178	0					
ANR	48493	Identifier	NEW		47178	1					
ANR	48494	CallExpression	fetchmode ( v )		47178	1					
ANR	48495	Callee	fetchmode		47178	0					
ANR	48496	Identifier	fetchmode		47178	0					
ANR	48497	ArgumentList	v		47178	1					
ANR	48498	Argument	v		47178	0					
ANR	48499	Identifier	v		47178	0					
ANR	48500	ExpressionStatement	extended_headers = true	642:2:18043:18066	47178	5	True				
ANR	48501	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48502	Identifier	extended_headers		47178	0					
ANR	48503	Identifier	true		47178	1					
ANR	48504	ElseStatement	else		47178	0					
ANR	48505	IfStatement	"if ( p_git_diff && strnEQ ( s , ""old mode "" , 9 ) )"		47178	0					
ANR	48506	Condition	"p_git_diff && strnEQ ( s , ""old mode "" , 9 )"	645:10:18092:18131	47178	0	True				
ANR	48507	AndExpression	"p_git_diff && strnEQ ( s , ""old mode "" , 9 )"		47178	0		&&			
ANR	48508	Identifier	p_git_diff		47178	0					
ANR	48509	CallExpression	"strnEQ ( s , ""old mode "" , 9 )"		47178	1					
ANR	48510	Callee	strnEQ		47178	0					
ANR	48511	Identifier	strnEQ		47178	0					
ANR	48512	ArgumentList	s		47178	1					
ANR	48513	Argument	s		47178	0					
ANR	48514	Identifier	s		47178	0					
ANR	48515	Argument	"""old mode """		47178	1					
ANR	48516	PrimaryExpression	"""old mode """		47178	0					
ANR	48517	Argument	9		47178	2					
ANR	48518	PrimaryExpression	9		47178	0					
ANR	48519	CompoundStatement		220:3:5732:5732	47178	1					
ANR	48520	ExpressionStatement	p_mode [ OLD ] = fetchmode ( s + 9 )	647:5:18144:18175	47178	0	True				
ANR	48521	AssignmentExpression	p_mode [ OLD ] = fetchmode ( s + 9 )		47178	0		=			
ANR	48522	ArrayIndexing	p_mode [ OLD ]		47178	0					
ANR	48523	Identifier	p_mode		47178	0					
ANR	48524	Identifier	OLD		47178	1					
ANR	48525	CallExpression	fetchmode ( s + 9 )		47178	1					
ANR	48526	Callee	fetchmode		47178	0					
ANR	48527	Identifier	fetchmode		47178	0					
ANR	48528	ArgumentList	s + 9		47178	1					
ANR	48529	Argument	s + 9		47178	0					
ANR	48530	AdditiveExpression	s + 9		47178	0		+			
ANR	48531	Identifier	s		47178	0					
ANR	48532	PrimaryExpression	9		47178	1					
ANR	48533	ExpressionStatement	extended_headers = true	648:5:18182:18205	47178	1	True				
ANR	48534	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48535	Identifier	extended_headers		47178	0					
ANR	48536	Identifier	true		47178	1					
ANR	48537	ElseStatement	else		47178	0					
ANR	48538	IfStatement	"if ( p_git_diff && strnEQ ( s , ""new mode "" , 9 ) )"		47178	0					
ANR	48539	Condition	"p_git_diff && strnEQ ( s , ""new mode "" , 9 )"	650:10:18222:18261	47178	0	True				
ANR	48540	AndExpression	"p_git_diff && strnEQ ( s , ""new mode "" , 9 )"		47178	0		&&			
ANR	48541	Identifier	p_git_diff		47178	0					
ANR	48542	CallExpression	"strnEQ ( s , ""new mode "" , 9 )"		47178	1					
ANR	48543	Callee	strnEQ		47178	0					
ANR	48544	Identifier	strnEQ		47178	0					
ANR	48545	ArgumentList	s		47178	1					
ANR	48546	Argument	s		47178	0					
ANR	48547	Identifier	s		47178	0					
ANR	48548	Argument	"""new mode """		47178	1					
ANR	48549	PrimaryExpression	"""new mode """		47178	0					
ANR	48550	Argument	9		47178	2					
ANR	48551	PrimaryExpression	9		47178	0					
ANR	48552	CompoundStatement		225:3:5862:5862	47178	1					
ANR	48553	ExpressionStatement	p_mode [ NEW ] = fetchmode ( s + 9 )	652:5:18274:18305	47178	0	True				
ANR	48554	AssignmentExpression	p_mode [ NEW ] = fetchmode ( s + 9 )		47178	0		=			
ANR	48555	ArrayIndexing	p_mode [ NEW ]		47178	0					
ANR	48556	Identifier	p_mode		47178	0					
ANR	48557	Identifier	NEW		47178	1					
ANR	48558	CallExpression	fetchmode ( s + 9 )		47178	1					
ANR	48559	Callee	fetchmode		47178	0					
ANR	48560	Identifier	fetchmode		47178	0					
ANR	48561	ArgumentList	s + 9		47178	1					
ANR	48562	Argument	s + 9		47178	0					
ANR	48563	AdditiveExpression	s + 9		47178	0		+			
ANR	48564	Identifier	s		47178	0					
ANR	48565	PrimaryExpression	9		47178	1					
ANR	48566	ExpressionStatement	extended_headers = true	653:5:18312:18335	47178	1	True				
ANR	48567	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48568	Identifier	extended_headers		47178	0					
ANR	48569	Identifier	true		47178	1					
ANR	48570	ElseStatement	else		47178	0					
ANR	48571	IfStatement	"if ( p_git_diff && strnEQ ( s , ""deleted file mode "" , 18 ) )"		47178	0					
ANR	48572	Condition	"p_git_diff && strnEQ ( s , ""deleted file mode "" , 18 )"	655:10:18352:18401	47178	0	True				
ANR	48573	AndExpression	"p_git_diff && strnEQ ( s , ""deleted file mode "" , 18 )"		47178	0		&&			
ANR	48574	Identifier	p_git_diff		47178	0					
ANR	48575	CallExpression	"strnEQ ( s , ""deleted file mode "" , 18 )"		47178	1					
ANR	48576	Callee	strnEQ		47178	0					
ANR	48577	Identifier	strnEQ		47178	0					
ANR	48578	ArgumentList	s		47178	1					
ANR	48579	Argument	s		47178	0					
ANR	48580	Identifier	s		47178	0					
ANR	48581	Argument	"""deleted file mode """		47178	1					
ANR	48582	PrimaryExpression	"""deleted file mode """		47178	0					
ANR	48583	Argument	18		47178	2					
ANR	48584	PrimaryExpression	18		47178	0					
ANR	48585	CompoundStatement		230:3:6002:6002	47178	1					
ANR	48586	ExpressionStatement	p_mode [ OLD ] = fetchmode ( s + 18 )	657:5:18414:18446	47178	0	True				
ANR	48587	AssignmentExpression	p_mode [ OLD ] = fetchmode ( s + 18 )		47178	0		=			
ANR	48588	ArrayIndexing	p_mode [ OLD ]		47178	0					
ANR	48589	Identifier	p_mode		47178	0					
ANR	48590	Identifier	OLD		47178	1					
ANR	48591	CallExpression	fetchmode ( s + 18 )		47178	1					
ANR	48592	Callee	fetchmode		47178	0					
ANR	48593	Identifier	fetchmode		47178	0					
ANR	48594	ArgumentList	s + 18		47178	1					
ANR	48595	Argument	s + 18		47178	0					
ANR	48596	AdditiveExpression	s + 18		47178	0		+			
ANR	48597	Identifier	s		47178	0					
ANR	48598	PrimaryExpression	18		47178	1					
ANR	48599	ExpressionStatement	p_says_nonexistent [ NEW ] = 2	658:5:18453:18480	47178	1	True				
ANR	48600	AssignmentExpression	p_says_nonexistent [ NEW ] = 2		47178	0		=			
ANR	48601	ArrayIndexing	p_says_nonexistent [ NEW ]		47178	0					
ANR	48602	Identifier	p_says_nonexistent		47178	0					
ANR	48603	Identifier	NEW		47178	1					
ANR	48604	PrimaryExpression	2		47178	1					
ANR	48605	ExpressionStatement	extended_headers = true	659:5:18487:18510	47178	2	True				
ANR	48606	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48607	Identifier	extended_headers		47178	0					
ANR	48608	Identifier	true		47178	1					
ANR	48609	ElseStatement	else		47178	0					
ANR	48610	IfStatement	"if ( p_git_diff && strnEQ ( s , ""new file mode "" , 14 ) )"		47178	0					
ANR	48611	Condition	"p_git_diff && strnEQ ( s , ""new file mode "" , 14 )"	661:10:18527:18572	47178	0	True				
ANR	48612	AndExpression	"p_git_diff && strnEQ ( s , ""new file mode "" , 14 )"		47178	0		&&			
ANR	48613	Identifier	p_git_diff		47178	0					
ANR	48614	CallExpression	"strnEQ ( s , ""new file mode "" , 14 )"		47178	1					
ANR	48615	Callee	strnEQ		47178	0					
ANR	48616	Identifier	strnEQ		47178	0					
ANR	48617	ArgumentList	s		47178	1					
ANR	48618	Argument	s		47178	0					
ANR	48619	Identifier	s		47178	0					
ANR	48620	Argument	"""new file mode """		47178	1					
ANR	48621	PrimaryExpression	"""new file mode """		47178	0					
ANR	48622	Argument	14		47178	2					
ANR	48623	PrimaryExpression	14		47178	0					
ANR	48624	CompoundStatement		236:3:6173:6173	47178	1					
ANR	48625	ExpressionStatement	p_mode [ NEW ] = fetchmode ( s + 14 )	663:5:18585:18617	47178	0	True				
ANR	48626	AssignmentExpression	p_mode [ NEW ] = fetchmode ( s + 14 )		47178	0		=			
ANR	48627	ArrayIndexing	p_mode [ NEW ]		47178	0					
ANR	48628	Identifier	p_mode		47178	0					
ANR	48629	Identifier	NEW		47178	1					
ANR	48630	CallExpression	fetchmode ( s + 14 )		47178	1					
ANR	48631	Callee	fetchmode		47178	0					
ANR	48632	Identifier	fetchmode		47178	0					
ANR	48633	ArgumentList	s + 14		47178	1					
ANR	48634	Argument	s + 14		47178	0					
ANR	48635	AdditiveExpression	s + 14		47178	0		+			
ANR	48636	Identifier	s		47178	0					
ANR	48637	PrimaryExpression	14		47178	1					
ANR	48638	ExpressionStatement	p_says_nonexistent [ OLD ] = 2	664:5:18624:18651	47178	1	True				
ANR	48639	AssignmentExpression	p_says_nonexistent [ OLD ] = 2		47178	0		=			
ANR	48640	ArrayIndexing	p_says_nonexistent [ OLD ]		47178	0					
ANR	48641	Identifier	p_says_nonexistent		47178	0					
ANR	48642	Identifier	OLD		47178	1					
ANR	48643	PrimaryExpression	2		47178	1					
ANR	48644	ExpressionStatement	extended_headers = true	665:5:18658:18681	47178	2	True				
ANR	48645	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48646	Identifier	extended_headers		47178	0					
ANR	48647	Identifier	true		47178	1					
ANR	48648	ElseStatement	else		47178	0					
ANR	48649	IfStatement	"if ( p_git_diff && strnEQ ( s , ""rename from "" , 12 ) )"		47178	0					
ANR	48650	Condition	"p_git_diff && strnEQ ( s , ""rename from "" , 12 )"	667:10:18698:18741	47178	0	True				
ANR	48651	AndExpression	"p_git_diff && strnEQ ( s , ""rename from "" , 12 )"		47178	0		&&			
ANR	48652	Identifier	p_git_diff		47178	0					
ANR	48653	CallExpression	"strnEQ ( s , ""rename from "" , 12 )"		47178	1					
ANR	48654	Callee	strnEQ		47178	0					
ANR	48655	Identifier	strnEQ		47178	0					
ANR	48656	ArgumentList	s		47178	1					
ANR	48657	Argument	s		47178	0					
ANR	48658	Identifier	s		47178	0					
ANR	48659	Argument	"""rename from """		47178	1					
ANR	48660	PrimaryExpression	"""rename from """		47178	0					
ANR	48661	Argument	12		47178	2					
ANR	48662	PrimaryExpression	12		47178	0					
ANR	48663	CompoundStatement		242:3:6342:6342	47178	1					
ANR	48664	ExpressionStatement	p_rename [ OLD ] = true	671:5:18870:18890	47178	0	True				
ANR	48665	AssignmentExpression	p_rename [ OLD ] = true		47178	0		=			
ANR	48666	ArrayIndexing	p_rename [ OLD ]		47178	0					
ANR	48667	Identifier	p_rename		47178	0					
ANR	48668	Identifier	OLD		47178	1					
ANR	48669	Identifier	true		47178	1					
ANR	48670	ExpressionStatement	extended_headers = true	672:5:18897:18920	47178	1	True				
ANR	48671	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48672	Identifier	extended_headers		47178	0					
ANR	48673	Identifier	true		47178	1					
ANR	48674	ElseStatement	else		47178	0					
ANR	48675	IfStatement	"if ( p_git_diff && strnEQ ( s , ""rename to "" , 10 ) )"		47178	0					
ANR	48676	Condition	"p_git_diff && strnEQ ( s , ""rename to "" , 10 )"	674:10:18937:18978	47178	0	True				
ANR	48677	AndExpression	"p_git_diff && strnEQ ( s , ""rename to "" , 10 )"		47178	0		&&			
ANR	48678	Identifier	p_git_diff		47178	0					
ANR	48679	CallExpression	"strnEQ ( s , ""rename to "" , 10 )"		47178	1					
ANR	48680	Callee	strnEQ		47178	0					
ANR	48681	Identifier	strnEQ		47178	0					
ANR	48682	ArgumentList	s		47178	1					
ANR	48683	Argument	s		47178	0					
ANR	48684	Identifier	s		47178	0					
ANR	48685	Argument	"""rename to """		47178	1					
ANR	48686	PrimaryExpression	"""rename to """		47178	0					
ANR	48687	Argument	10		47178	2					
ANR	48688	PrimaryExpression	10		47178	0					
ANR	48689	CompoundStatement		249:3:6579:6579	47178	1					
ANR	48690	ExpressionStatement	p_rename [ NEW ] = true	678:5:19107:19127	47178	0	True				
ANR	48691	AssignmentExpression	p_rename [ NEW ] = true		47178	0		=			
ANR	48692	ArrayIndexing	p_rename [ NEW ]		47178	0					
ANR	48693	Identifier	p_rename		47178	0					
ANR	48694	Identifier	NEW		47178	1					
ANR	48695	Identifier	true		47178	1					
ANR	48696	ExpressionStatement	extended_headers = true	679:5:19134:19157	47178	1	True				
ANR	48697	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48698	Identifier	extended_headers		47178	0					
ANR	48699	Identifier	true		47178	1					
ANR	48700	ElseStatement	else		47178	0					
ANR	48701	IfStatement	"if ( p_git_diff && strnEQ ( s , ""copy from "" , 10 ) )"		47178	0					
ANR	48702	Condition	"p_git_diff && strnEQ ( s , ""copy from "" , 10 )"	681:10:19174:19215	47178	0	True				
ANR	48703	AndExpression	"p_git_diff && strnEQ ( s , ""copy from "" , 10 )"		47178	0		&&			
ANR	48704	Identifier	p_git_diff		47178	0					
ANR	48705	CallExpression	"strnEQ ( s , ""copy from "" , 10 )"		47178	1					
ANR	48706	Callee	strnEQ		47178	0					
ANR	48707	Identifier	strnEQ		47178	0					
ANR	48708	ArgumentList	s		47178	1					
ANR	48709	Argument	s		47178	0					
ANR	48710	Identifier	s		47178	0					
ANR	48711	Argument	"""copy from """		47178	1					
ANR	48712	PrimaryExpression	"""copy from """		47178	0					
ANR	48713	Argument	10		47178	2					
ANR	48714	PrimaryExpression	10		47178	0					
ANR	48715	CompoundStatement		256:3:6816:6816	47178	1					
ANR	48716	ExpressionStatement	p_copy [ OLD ] = true	685:5:19344:19362	47178	0	True				
ANR	48717	AssignmentExpression	p_copy [ OLD ] = true		47178	0		=			
ANR	48718	ArrayIndexing	p_copy [ OLD ]		47178	0					
ANR	48719	Identifier	p_copy		47178	0					
ANR	48720	Identifier	OLD		47178	1					
ANR	48721	Identifier	true		47178	1					
ANR	48722	ExpressionStatement	extended_headers = true	686:5:19369:19392	47178	1	True				
ANR	48723	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48724	Identifier	extended_headers		47178	0					
ANR	48725	Identifier	true		47178	1					
ANR	48726	ElseStatement	else		47178	0					
ANR	48727	IfStatement	"if ( p_git_diff && strnEQ ( s , ""copy to "" , 8 ) )"		47178	0					
ANR	48728	Condition	"p_git_diff && strnEQ ( s , ""copy to "" , 8 )"	688:10:19409:19447	47178	0	True				
ANR	48729	AndExpression	"p_git_diff && strnEQ ( s , ""copy to "" , 8 )"		47178	0		&&			
ANR	48730	Identifier	p_git_diff		47178	0					
ANR	48731	CallExpression	"strnEQ ( s , ""copy to "" , 8 )"		47178	1					
ANR	48732	Callee	strnEQ		47178	0					
ANR	48733	Identifier	strnEQ		47178	0					
ANR	48734	ArgumentList	s		47178	1					
ANR	48735	Argument	s		47178	0					
ANR	48736	Identifier	s		47178	0					
ANR	48737	Argument	"""copy to """		47178	1					
ANR	48738	PrimaryExpression	"""copy to """		47178	0					
ANR	48739	Argument	8		47178	2					
ANR	48740	PrimaryExpression	8		47178	0					
ANR	48741	CompoundStatement		263:3:7048:7048	47178	1					
ANR	48742	ExpressionStatement	p_copy [ NEW ] = true	692:5:19576:19594	47178	0	True				
ANR	48743	AssignmentExpression	p_copy [ NEW ] = true		47178	0		=			
ANR	48744	ArrayIndexing	p_copy [ NEW ]		47178	0					
ANR	48745	Identifier	p_copy		47178	0					
ANR	48746	Identifier	NEW		47178	1					
ANR	48747	Identifier	true		47178	1					
ANR	48748	ExpressionStatement	extended_headers = true	693:5:19601:19624	47178	1	True				
ANR	48749	AssignmentExpression	extended_headers = true		47178	0		=			
ANR	48750	Identifier	extended_headers		47178	0					
ANR	48751	Identifier	true		47178	1					
ANR	48752	ElseStatement	else		47178	0					
ANR	48753	IfStatement	"if ( p_git_diff && strnEQ ( s , ""GIT binary patch"" , 16 ) )"		47178	0					
ANR	48754	Condition	"p_git_diff && strnEQ ( s , ""GIT binary patch"" , 16 )"	695:10:19641:19688	47178	0	True				
ANR	48755	AndExpression	"p_git_diff && strnEQ ( s , ""GIT binary patch"" , 16 )"		47178	0		&&			
ANR	48756	Identifier	p_git_diff		47178	0					
ANR	48757	CallExpression	"strnEQ ( s , ""GIT binary patch"" , 16 )"		47178	1					
ANR	48758	Callee	strnEQ		47178	0					
ANR	48759	Identifier	strnEQ		47178	0					
ANR	48760	ArgumentList	s		47178	1					
ANR	48761	Argument	s		47178	0					
ANR	48762	Identifier	s		47178	0					
ANR	48763	Argument	"""GIT binary patch"""		47178	1					
ANR	48764	PrimaryExpression	"""GIT binary patch"""		47178	0					
ANR	48765	Argument	16		47178	2					
ANR	48766	PrimaryExpression	16		47178	0					
ANR	48767	CompoundStatement		270:3:7289:7289	47178	1					
ANR	48768	ExpressionStatement	p_start = this_line	697:5:19701:19720	47178	0	True				
ANR	48769	AssignmentExpression	p_start = this_line		47178	0		=			
ANR	48770	Identifier	p_start		47178	0					
ANR	48771	Identifier	this_line		47178	1					
ANR	48772	ExpressionStatement	p_sline = p_input_line	698:5:19727:19749	47178	1	True				
ANR	48773	AssignmentExpression	p_sline = p_input_line		47178	0		=			
ANR	48774	Identifier	p_sline		47178	0					
ANR	48775	Identifier	p_input_line		47178	1					
ANR	48776	ExpressionStatement	retval = GIT_BINARY_DIFF	699:5:19756:19780	47178	2	True				
ANR	48777	AssignmentExpression	retval = GIT_BINARY_DIFF		47178	0		=			
ANR	48778	Identifier	retval		47178	0					
ANR	48779	Identifier	GIT_BINARY_DIFF		47178	1					
ANR	48780	GotoStatement	goto scan_exit ;	700:5:19787:19801	47178	3	True				
ANR	48781	Identifier	scan_exit		47178	0					
ANR	48782	ElseStatement	else		47178	0					
ANR	48783	CompoundStatement		277:3:7412:7412	47178	0					
ANR	48784	ForStatement	for ( t = s ; t [ 0 ] == '-' && t [ 1 ] == ' ' ; t += 2 )		47178	0					
ANR	48785	ForInit	t = s ;	704:10:19829:19834	47178	0	True				
ANR	48786	AssignmentExpression	t = s		47178	0		=			
ANR	48787	Identifier	t		47178	0					
ANR	48788	Identifier	s		47178	1					
ANR	48789	Condition	t [ 0 ] == '-' && t [ 1 ] == ' '	704:18:19837:19862	47178	1	True				
ANR	48790	AndExpression	t [ 0 ] == '-' && t [ 1 ] == ' '		47178	0		&&			
ANR	48791	EqualityExpression	t [ 0 ] == '-'		47178	0		==			
ANR	48792	ArrayIndexing	t [ 0 ]		47178	0					
ANR	48793	Identifier	t		47178	0					
ANR	48794	PrimaryExpression	0		47178	1					
ANR	48795	PrimaryExpression	'-'		47178	1					
ANR	48796	EqualityExpression	t [ 1 ] == ' '		47178	1		==			
ANR	48797	ArrayIndexing	t [ 1 ]		47178	0					
ANR	48798	Identifier	t		47178	0					
ANR	48799	PrimaryExpression	1		47178	1					
ANR	48800	PrimaryExpression	' '		47178	1					
ANR	48801	AssignmentExpression	t += 2	704:47:19866:19871	47178	2	True	+=			
ANR	48802	Identifier	t		47178	0					
ANR	48803	PrimaryExpression	2		47178	1					
ANR	48804	ExpressionStatement		705:24:19898:19898	47178	3	True				
ANR	48805	IfStatement	"if ( strnEQ ( t , ""--- "" , 4 ) )"		47178	1					
ANR	48806	Condition	"strnEQ ( t , ""--- "" , 4 )"	706:9:19909:19928	47178	0	True				
ANR	48807	CallExpression	"strnEQ ( t , ""--- "" , 4 )"		47178	0					
ANR	48808	Callee	strnEQ		47178	0					
ANR	48809	Identifier	strnEQ		47178	0					
ANR	48810	ArgumentList	t		47178	1					
ANR	48811	Argument	t		47178	0					
ANR	48812	Identifier	t		47178	0					
ANR	48813	Argument	"""--- """		47178	1					
ANR	48814	PrimaryExpression	"""--- """		47178	0					
ANR	48815	Argument	4		47178	2					
ANR	48816	PrimaryExpression	4		47178	0					
ANR	48817	CompoundStatement		282:2:7537:7562	47178	1					
ANR	48818	IdentifierDeclStatement	struct timespec timestamp ;	708:2:19942:19967	47178	0	True				
ANR	48819	IdentifierDecl	timestamp		47178	0					
ANR	48820	IdentifierDeclType	struct timespec		47178	0					
ANR	48821	Identifier	timestamp		47178	1					
ANR	48822	ExpressionStatement	timestamp . tv_sec = - 1	709:2:19971:19992	47178	1	True				
ANR	48823	AssignmentExpression	timestamp . tv_sec = - 1		47178	0		=			
ANR	48824	MemberAccess	timestamp . tv_sec		47178	0					
ANR	48825	Identifier	timestamp		47178	0					
ANR	48826	Identifier	tv_sec		47178	1					
ANR	48827	UnaryOperationExpression	- 1		47178	1					
ANR	48828	UnaryOperator	-		47178	0					
ANR	48829	PrimaryExpression	1		47178	1					
ANR	48830	ExpressionStatement	"fetchname ( t + 4 , strippath , & p_name [ NEW ] , & p_timestr [ NEW ] , & timestamp )"	710:2:19996:20071	47178	2	True				
ANR	48831	CallExpression	"fetchname ( t + 4 , strippath , & p_name [ NEW ] , & p_timestr [ NEW ] , & timestamp )"		47178	0					
ANR	48832	Callee	fetchname		47178	0					
ANR	48833	Identifier	fetchname		47178	0					
ANR	48834	ArgumentList	t + 4		47178	1					
ANR	48835	Argument	t + 4		47178	0					
ANR	48836	AdditiveExpression	t + 4		47178	0		+			
ANR	48837	Identifier	t		47178	0					
ANR	48838	PrimaryExpression	4		47178	1					
ANR	48839	Argument	strippath		47178	1					
ANR	48840	Identifier	strippath		47178	0					
ANR	48841	Argument	& p_name [ NEW ]		47178	2					
ANR	48842	UnaryOperationExpression	& p_name [ NEW ]		47178	0					
ANR	48843	UnaryOperator	&		47178	0					
ANR	48844	ArrayIndexing	p_name [ NEW ]		47178	1					
ANR	48845	Identifier	p_name		47178	0					
ANR	48846	Identifier	NEW		47178	1					
ANR	48847	Argument	& p_timestr [ NEW ]		47178	3					
ANR	48848	UnaryOperationExpression	& p_timestr [ NEW ]		47178	0					
ANR	48849	UnaryOperator	&		47178	0					
ANR	48850	ArrayIndexing	p_timestr [ NEW ]		47178	1					
ANR	48851	Identifier	p_timestr		47178	0					
ANR	48852	Identifier	NEW		47178	1					
ANR	48853	Argument	& timestamp		47178	4					
ANR	48854	UnaryOperationExpression	& timestamp		47178	0					
ANR	48855	UnaryOperator	&		47178	0					
ANR	48856	Identifier	timestamp		47178	1					
ANR	48857	ExpressionStatement	need_header = false	712:2:20075:20094	47178	3	True				
ANR	48858	AssignmentExpression	need_header = false		47178	0		=			
ANR	48859	Identifier	need_header		47178	0					
ANR	48860	Identifier	false		47178	1					
ANR	48861	IfStatement	if ( timestamp . tv_sec != - 1 )		47178	4					
ANR	48862	Condition	timestamp . tv_sec != - 1	713:6:20102:20123	47178	0	True				
ANR	48863	EqualityExpression	timestamp . tv_sec != - 1		47178	0		!=			
ANR	48864	MemberAccess	timestamp . tv_sec		47178	0					
ANR	48865	Identifier	timestamp		47178	0					
ANR	48866	Identifier	tv_sec		47178	1					
ANR	48867	UnaryOperationExpression	- 1		47178	1					
ANR	48868	UnaryOperator	-		47178	0					
ANR	48869	PrimaryExpression	1		47178	1					
ANR	48870	CompoundStatement		288:4:7725:7725	47178	1					
ANR	48871	ExpressionStatement	p_timestamp [ NEW ] = timestamp	715:6:20138:20166	47178	0	True				
ANR	48872	AssignmentExpression	p_timestamp [ NEW ] = timestamp		47178	0		=			
ANR	48873	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	48874	Identifier	p_timestamp		47178	0					
ANR	48875	Identifier	NEW		47178	1					
ANR	48876	Identifier	timestamp		47178	1					
ANR	48877	ExpressionStatement	p_rfc934_nesting = ( t - s ) >> 1	716:6:20174:20205	47178	1	True				
ANR	48878	AssignmentExpression	p_rfc934_nesting = ( t - s ) >> 1		47178	0		=			
ANR	48879	Identifier	p_rfc934_nesting		47178	0					
ANR	48880	ShiftExpression	( t - s ) >> 1		47178	1		>>			
ANR	48881	AdditiveExpression	t - s		47178	0		-			
ANR	48882	Identifier	t		47178	0					
ANR	48883	Identifier	s		47178	1					
ANR	48884	PrimaryExpression	1		47178	1					
ANR	48885	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	718:2:20215:20254	47178	5	True				
ANR	48886	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		47178	0		=			
ANR	48887	Identifier	p_strip_trailing_cr		47178	0					
ANR	48888	Identifier	strip_trailing_cr		47178	1					
ANR	48889	IfStatement	if ( need_header )		47178	19					
ANR	48890	Condition	need_header	721:5:20275:20285	47178	0	True				
ANR	48891	Identifier	need_header		47178	0					
ANR	48892	ContinueStatement	continue ;	722:3:20291:20299	47178	1	True				
ANR	48893	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == ED_DIFF ) && first_command_line >= 0 && strEQ ( s , "".\\n"" ) )"		47178	20					
ANR	48894	Condition	"( diff_type == NO_DIFF || diff_type == ED_DIFF ) && first_command_line >= 0 && strEQ ( s , "".\\n"" )"	723:5:20306:20403	47178	0	True				
ANR	48895	AndExpression	"( diff_type == NO_DIFF || diff_type == ED_DIFF ) && first_command_line >= 0 && strEQ ( s , "".\\n"" )"		47178	0		&&			
ANR	48896	OrExpression	diff_type == NO_DIFF || diff_type == ED_DIFF		47178	0		||			
ANR	48897	EqualityExpression	diff_type == NO_DIFF		47178	0		==			
ANR	48898	Identifier	diff_type		47178	0					
ANR	48899	Identifier	NO_DIFF		47178	1					
ANR	48900	EqualityExpression	diff_type == ED_DIFF		47178	1		==			
ANR	48901	Identifier	diff_type		47178	0					
ANR	48902	Identifier	ED_DIFF		47178	1					
ANR	48903	AndExpression	"first_command_line >= 0 && strEQ ( s , "".\\n"" )"		47178	1		&&			
ANR	48904	RelationalExpression	first_command_line >= 0		47178	0		>=			
ANR	48905	Identifier	first_command_line		47178	0					
ANR	48906	PrimaryExpression	0		47178	1					
ANR	48907	CallExpression	"strEQ ( s , "".\\n"" )"		47178	1					
ANR	48908	Callee	strEQ		47178	0					
ANR	48909	Identifier	strEQ		47178	0					
ANR	48910	ArgumentList	s		47178	1					
ANR	48911	Argument	s		47178	0					
ANR	48912	Identifier	s		47178	0					
ANR	48913	Argument	""".\\n"""		47178	1					
ANR	48914	PrimaryExpression	""".\\n"""		47178	0					
ANR	48915	CompoundStatement		299:21:8002:8002	47178	1					
ANR	48916	ExpressionStatement	p_start = first_command_line	726:5:20414:20442	47178	0	True				
ANR	48917	AssignmentExpression	p_start = first_command_line		47178	0		=			
ANR	48918	Identifier	p_start		47178	0					
ANR	48919	Identifier	first_command_line		47178	1					
ANR	48920	ExpressionStatement	p_sline = fcl_line	727:5:20449:20467	47178	1	True				
ANR	48921	AssignmentExpression	p_sline = fcl_line		47178	0		=			
ANR	48922	Identifier	p_sline		47178	0					
ANR	48923	Identifier	fcl_line		47178	1					
ANR	48924	ExpressionStatement	retval = ED_DIFF	728:5:20474:20490	47178	2	True				
ANR	48925	AssignmentExpression	retval = ED_DIFF		47178	0		=			
ANR	48926	Identifier	retval		47178	0					
ANR	48927	Identifier	ED_DIFF		47178	1					
ANR	48928	GotoStatement	goto scan_exit ;	729:5:20497:20511	47178	3	True				
ANR	48929	Identifier	scan_exit		47178	0					
ANR	48930	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == UNI_DIFF ) && strnEQ ( s , ""@@ -"" , 4 ) )"		47178	21					
ANR	48931	Condition	"( diff_type == NO_DIFF || diff_type == UNI_DIFF ) && strnEQ ( s , ""@@ -"" , 4 )"	731:5:20521:20596	47178	0	True				
ANR	48932	AndExpression	"( diff_type == NO_DIFF || diff_type == UNI_DIFF ) && strnEQ ( s , ""@@ -"" , 4 )"		47178	0		&&			
ANR	48933	OrExpression	diff_type == NO_DIFF || diff_type == UNI_DIFF		47178	0		||			
ANR	48934	EqualityExpression	diff_type == NO_DIFF		47178	0		==			
ANR	48935	Identifier	diff_type		47178	0					
ANR	48936	Identifier	NO_DIFF		47178	1					
ANR	48937	EqualityExpression	diff_type == UNI_DIFF		47178	1		==			
ANR	48938	Identifier	diff_type		47178	0					
ANR	48939	Identifier	UNI_DIFF		47178	1					
ANR	48940	CallExpression	"strnEQ ( s , ""@@ -"" , 4 )"		47178	1					
ANR	48941	Callee	strnEQ		47178	0					
ANR	48942	Identifier	strnEQ		47178	0					
ANR	48943	ArgumentList	s		47178	1					
ANR	48944	Argument	s		47178	0					
ANR	48945	Identifier	s		47178	0					
ANR	48946	Argument	"""@@ -"""		47178	1					
ANR	48947	PrimaryExpression	"""@@ -"""		47178	0					
ANR	48948	Argument	4		47178	2					
ANR	48949	PrimaryExpression	4		47178	0					
ANR	48950	CompoundStatement		310:5:8289:8326	47178	1					
ANR	48951	IdentifierDeclStatement	struct timespec ti = p_timestamp [ OLD ] ;	736:5:20694:20731	47178	0	True				
ANR	48952	IdentifierDecl	ti = p_timestamp [ OLD ]		47178	0					
ANR	48953	IdentifierDeclType	struct timespec		47178	0					
ANR	48954	Identifier	ti		47178	1					
ANR	48955	AssignmentExpression	ti = p_timestamp [ OLD ]		47178	2		=			
ANR	48956	Identifier	ti		47178	0					
ANR	48957	ArrayIndexing	p_timestamp [ OLD ]		47178	1					
ANR	48958	Identifier	p_timestamp		47178	0					
ANR	48959	Identifier	OLD		47178	1					
ANR	48960	ExpressionStatement	p_timestamp [ OLD ] = p_timestamp [ NEW ]	737:5:20738:20773	47178	1	True				
ANR	48961	AssignmentExpression	p_timestamp [ OLD ] = p_timestamp [ NEW ]		47178	0		=			
ANR	48962	ArrayIndexing	p_timestamp [ OLD ]		47178	0					
ANR	48963	Identifier	p_timestamp		47178	0					
ANR	48964	Identifier	OLD		47178	1					
ANR	48965	ArrayIndexing	p_timestamp [ NEW ]		47178	1					
ANR	48966	Identifier	p_timestamp		47178	0					
ANR	48967	Identifier	NEW		47178	1					
ANR	48968	ExpressionStatement	p_timestamp [ NEW ] = ti	738:5:20780:20801	47178	2	True				
ANR	48969	AssignmentExpression	p_timestamp [ NEW ] = ti		47178	0		=			
ANR	48970	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	48971	Identifier	p_timestamp		47178	0					
ANR	48972	Identifier	NEW		47178	1					
ANR	48973	Identifier	ti		47178	1					
ANR	48974	ExpressionStatement	t = p_name [ OLD ]	739:5:20808:20823	47178	3	True				
ANR	48975	AssignmentExpression	t = p_name [ OLD ]		47178	0		=			
ANR	48976	Identifier	t		47178	0					
ANR	48977	ArrayIndexing	p_name [ OLD ]		47178	1					
ANR	48978	Identifier	p_name		47178	0					
ANR	48979	Identifier	OLD		47178	1					
ANR	48980	ExpressionStatement	p_name [ OLD ] = p_name [ NEW ]	740:5:20830:20855	47178	4	True				
ANR	48981	AssignmentExpression	p_name [ OLD ] = p_name [ NEW ]		47178	0		=			
ANR	48982	ArrayIndexing	p_name [ OLD ]		47178	0					
ANR	48983	Identifier	p_name		47178	0					
ANR	48984	Identifier	OLD		47178	1					
ANR	48985	ArrayIndexing	p_name [ NEW ]		47178	1					
ANR	48986	Identifier	p_name		47178	0					
ANR	48987	Identifier	NEW		47178	1					
ANR	48988	ExpressionStatement	p_name [ NEW ] = t	741:5:20862:20877	47178	5	True				
ANR	48989	AssignmentExpression	p_name [ NEW ] = t		47178	0		=			
ANR	48990	ArrayIndexing	p_name [ NEW ]		47178	0					
ANR	48991	Identifier	p_name		47178	0					
ANR	48992	Identifier	NEW		47178	1					
ANR	48993	Identifier	t		47178	1					
ANR	48994	ExpressionStatement	t = p_timestr [ OLD ]	742:5:20884:20902	47178	6	True				
ANR	48995	AssignmentExpression	t = p_timestr [ OLD ]		47178	0		=			
ANR	48996	Identifier	t		47178	0					
ANR	48997	ArrayIndexing	p_timestr [ OLD ]		47178	1					
ANR	48998	Identifier	p_timestr		47178	0					
ANR	48999	Identifier	OLD		47178	1					
ANR	49000	ExpressionStatement	p_timestr [ OLD ] = p_timestr [ NEW ]	743:5:20909:20940	47178	7	True				
ANR	49001	AssignmentExpression	p_timestr [ OLD ] = p_timestr [ NEW ]		47178	0		=			
ANR	49002	ArrayIndexing	p_timestr [ OLD ]		47178	0					
ANR	49003	Identifier	p_timestr		47178	0					
ANR	49004	Identifier	OLD		47178	1					
ANR	49005	ArrayIndexing	p_timestr [ NEW ]		47178	1					
ANR	49006	Identifier	p_timestr		47178	0					
ANR	49007	Identifier	NEW		47178	1					
ANR	49008	ExpressionStatement	p_timestr [ NEW ] = t	744:5:20947:20965	47178	8	True				
ANR	49009	AssignmentExpression	p_timestr [ NEW ] = t		47178	0		=			
ANR	49010	ArrayIndexing	p_timestr [ NEW ]		47178	0					
ANR	49011	Identifier	p_timestr		47178	0					
ANR	49012	Identifier	NEW		47178	1					
ANR	49013	Identifier	t		47178	1					
ANR	49014	ExpressionStatement	s += 4	746:5:20973:20979	47178	9	True				
ANR	49015	AssignmentExpression	s += 4		47178	0		+=			
ANR	49016	Identifier	s		47178	0					
ANR	49017	PrimaryExpression	4		47178	1					
ANR	49018	IfStatement	if ( s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] ) )		47178	10					
ANR	49019	Condition	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )	747:9:20990:21019	47178	0	True				
ANR	49020	AndExpression	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )		47178	0		&&			
ANR	49021	EqualityExpression	s [ 0 ] == '0'		47178	0		==			
ANR	49022	ArrayIndexing	s [ 0 ]		47178	0					
ANR	49023	Identifier	s		47178	0					
ANR	49024	PrimaryExpression	0		47178	1					
ANR	49025	PrimaryExpression	'0'		47178	1					
ANR	49026	UnaryOperationExpression	! ISDIGIT ( s [ 1 ] )		47178	1					
ANR	49027	UnaryOperator	!		47178	0					
ANR	49028	CallExpression	ISDIGIT ( s [ 1 ] )		47178	1					
ANR	49029	Callee	ISDIGIT		47178	0					
ANR	49030	Identifier	ISDIGIT		47178	0					
ANR	49031	ArgumentList	s [ 1 ]		47178	1					
ANR	49032	Argument	s [ 1 ]		47178	0					
ANR	49033	ArrayIndexing	s [ 1 ]		47178	0					
ANR	49034	Identifier	s		47178	0					
ANR	49035	PrimaryExpression	1		47178	1					
ANR	49036	ExpressionStatement	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec	748:7:21029:21084	47178	1	True				
ANR	49037	AssignmentExpression	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec		47178	0		=			
ANR	49038	ArrayIndexing	p_says_nonexistent [ OLD ]		47178	0					
ANR	49039	Identifier	p_says_nonexistent		47178	0					
ANR	49040	Identifier	OLD		47178	1					
ANR	49041	AdditiveExpression	1 + ! p_timestamp [ OLD ] . tv_sec		47178	1		+			
ANR	49042	PrimaryExpression	1		47178	0					
ANR	49043	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49044	UnaryOperator	!		47178	0					
ANR	49045	MemberAccess	p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49046	ArrayIndexing	p_timestamp [ OLD ]		47178	0					
ANR	49047	Identifier	p_timestamp		47178	0					
ANR	49048	Identifier	OLD		47178	1					
ANR	49049	Identifier	tv_sec		47178	1					
ANR	49050	WhileStatement	while ( * s != ' ' && * s != '\\n' )		47178	11					
ANR	49051	Condition	* s != ' ' && * s != '\\n'	749:12:21098:21120	47178	0	True				
ANR	49052	AndExpression	* s != ' ' && * s != '\\n'		47178	0		&&			
ANR	49053	EqualityExpression	* s != ' '		47178	0		!=			
ANR	49054	UnaryOperationExpression	* s		47178	0					
ANR	49055	UnaryOperator	*		47178	0					
ANR	49056	Identifier	s		47178	1					
ANR	49057	PrimaryExpression	' '		47178	1					
ANR	49058	EqualityExpression	* s != '\\n'		47178	1		!=			
ANR	49059	UnaryOperationExpression	* s		47178	0					
ANR	49060	UnaryOperator	*		47178	0					
ANR	49061	Identifier	s		47178	1					
ANR	49062	PrimaryExpression	'\\n'		47178	1					
ANR	49063	ExpressionStatement	s ++	750:7:21130:21133	47178	1	True				
ANR	49064	PostIncDecOperationExpression	s ++		47178	0					
ANR	49065	Identifier	s		47178	0					
ANR	49066	IncDec	++		47178	1					
ANR	49067	WhileStatement	while ( * s == ' ' )		47178	12					
ANR	49068	Condition	* s == ' '	751:12:21147:21155	47178	0	True				
ANR	49069	EqualityExpression	* s == ' '		47178	0		==			
ANR	49070	UnaryOperationExpression	* s		47178	0					
ANR	49071	UnaryOperator	*		47178	0					
ANR	49072	Identifier	s		47178	1					
ANR	49073	PrimaryExpression	' '		47178	1					
ANR	49074	ExpressionStatement	s ++	752:7:21165:21168	47178	1	True				
ANR	49075	PostIncDecOperationExpression	s ++		47178	0					
ANR	49076	Identifier	s		47178	0					
ANR	49077	IncDec	++		47178	1					
ANR	49078	IfStatement	if ( s [ 0 ] == '+' && s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] ) )		47178	13					
ANR	49079	Condition	s [ 0 ] == '+' && s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] )	753:9:21179:21223	47178	0	True				
ANR	49080	AndExpression	s [ 0 ] == '+' && s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] )		47178	0		&&			
ANR	49081	EqualityExpression	s [ 0 ] == '+'		47178	0		==			
ANR	49082	ArrayIndexing	s [ 0 ]		47178	0					
ANR	49083	Identifier	s		47178	0					
ANR	49084	PrimaryExpression	0		47178	1					
ANR	49085	PrimaryExpression	'+'		47178	1					
ANR	49086	AndExpression	s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] )		47178	1		&&			
ANR	49087	EqualityExpression	s [ 1 ] == '0'		47178	0		==			
ANR	49088	ArrayIndexing	s [ 1 ]		47178	0					
ANR	49089	Identifier	s		47178	0					
ANR	49090	PrimaryExpression	1		47178	1					
ANR	49091	PrimaryExpression	'0'		47178	1					
ANR	49092	UnaryOperationExpression	! ISDIGIT ( s [ 2 ] )		47178	1					
ANR	49093	UnaryOperator	!		47178	0					
ANR	49094	CallExpression	ISDIGIT ( s [ 2 ] )		47178	1					
ANR	49095	Callee	ISDIGIT		47178	0					
ANR	49096	Identifier	ISDIGIT		47178	0					
ANR	49097	ArgumentList	s [ 2 ]		47178	1					
ANR	49098	Argument	s [ 2 ]		47178	0					
ANR	49099	ArrayIndexing	s [ 2 ]		47178	0					
ANR	49100	Identifier	s		47178	0					
ANR	49101	PrimaryExpression	2		47178	1					
ANR	49102	ExpressionStatement	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec	754:7:21233:21288	47178	1	True				
ANR	49103	AssignmentExpression	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec		47178	0		=			
ANR	49104	ArrayIndexing	p_says_nonexistent [ NEW ]		47178	0					
ANR	49105	Identifier	p_says_nonexistent		47178	0					
ANR	49106	Identifier	NEW		47178	1					
ANR	49107	AdditiveExpression	1 + ! p_timestamp [ NEW ] . tv_sec		47178	1		+			
ANR	49108	PrimaryExpression	1		47178	0					
ANR	49109	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49110	UnaryOperator	!		47178	0					
ANR	49111	MemberAccess	p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49112	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	49113	Identifier	p_timestamp		47178	0					
ANR	49114	Identifier	NEW		47178	1					
ANR	49115	Identifier	tv_sec		47178	1					
ANR	49116	ExpressionStatement	p_indent = indent	755:5:21295:21312	47178	14	True				
ANR	49117	AssignmentExpression	p_indent = indent		47178	0		=			
ANR	49118	Identifier	p_indent		47178	0					
ANR	49119	Identifier	indent		47178	1					
ANR	49120	ExpressionStatement	p_start = this_line	756:5:21319:21338	47178	15	True				
ANR	49121	AssignmentExpression	p_start = this_line		47178	0		=			
ANR	49122	Identifier	p_start		47178	0					
ANR	49123	Identifier	this_line		47178	1					
ANR	49124	ExpressionStatement	p_sline = p_input_line	757:5:21345:21367	47178	16	True				
ANR	49125	AssignmentExpression	p_sline = p_input_line		47178	0		=			
ANR	49126	Identifier	p_sline		47178	0					
ANR	49127	Identifier	p_input_line		47178	1					
ANR	49128	ExpressionStatement	retval = UNI_DIFF	758:5:21374:21391	47178	17	True				
ANR	49129	AssignmentExpression	retval = UNI_DIFF		47178	0		=			
ANR	49130	Identifier	retval		47178	0					
ANR	49131	Identifier	UNI_DIFF		47178	1					
ANR	49132	IfStatement	if ( ! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header )		47178	18					
ANR	49133	Condition	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header	759:9:21402:21534	47178	0	True				
ANR	49134	AndExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header		47178	0		&&			
ANR	49135	UnaryOperationExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) )		47178	0					
ANR	49136	UnaryOperator	!		47178	0					
ANR	49137	AndExpression	( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec )		47178	1		&&			
ANR	49138	OrExpression	p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec		47178	0		||			
ANR	49139	ArrayIndexing	p_name [ OLD ]		47178	0					
ANR	49140	Identifier	p_name		47178	0					
ANR	49141	Identifier	OLD		47178	1					
ANR	49142	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49143	UnaryOperator	!		47178	0					
ANR	49144	MemberAccess	p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49145	ArrayIndexing	p_timestamp [ OLD ]		47178	0					
ANR	49146	Identifier	p_timestamp		47178	0					
ANR	49147	Identifier	OLD		47178	1					
ANR	49148	Identifier	tv_sec		47178	1					
ANR	49149	OrExpression	p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec		47178	1		||			
ANR	49150	ArrayIndexing	p_name [ NEW ]		47178	0					
ANR	49151	Identifier	p_name		47178	0					
ANR	49152	Identifier	NEW		47178	1					
ANR	49153	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49154	UnaryOperator	!		47178	0					
ANR	49155	MemberAccess	p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49156	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	49157	Identifier	p_timestamp		47178	0					
ANR	49158	Identifier	NEW		47178	1					
ANR	49159	Identifier	tv_sec		47178	1					
ANR	49160	AndExpression	! p_name [ INDEX ] && need_header		47178	1		&&			
ANR	49161	UnaryOperationExpression	! p_name [ INDEX ]		47178	0					
ANR	49162	UnaryOperator	!		47178	0					
ANR	49163	ArrayIndexing	p_name [ INDEX ]		47178	1					
ANR	49164	Identifier	p_name		47178	0					
ANR	49165	Identifier	INDEX		47178	1					
ANR	49166	Identifier	need_header		47178	1					
ANR	49167	CompoundStatement		337:2:9143:9180	47178	1					
ANR	49168	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	763:2:21548:21585	47178	0	True				
ANR	49169	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		47178	0					
ANR	49170	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		47178	0					
ANR	49171	Identifier	numbuf		47178	1					
ANR	49172	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		47178	2		+			
ANR	49173	Identifier	LINENUM_LENGTH_BOUND		47178	0					
ANR	49174	PrimaryExpression	1		47178	1					
ANR	49175	ExpressionStatement	"say ( ""missing header for unified diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"	764:2:21589:21691	47178	1	True				
ANR	49176	CallExpression	"say ( ""missing header for unified diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"		47178	0					
ANR	49177	Callee	say		47178	0					
ANR	49178	Identifier	say		47178	0					
ANR	49179	ArgumentList	"""missing header for unified diff at line %s of patch\\n"""		47178	1					
ANR	49180	Argument	"""missing header for unified diff at line %s of patch\\n"""		47178	0					
ANR	49181	PrimaryExpression	"""missing header for unified diff at line %s of patch\\n"""		47178	0					
ANR	49182	Argument	"format_linenum ( numbuf , p_sline )"		47178	1					
ANR	49183	CallExpression	"format_linenum ( numbuf , p_sline )"		47178	0					
ANR	49184	Callee	format_linenum		47178	0					
ANR	49185	Identifier	format_linenum		47178	0					
ANR	49186	ArgumentList	numbuf		47178	1					
ANR	49187	Argument	numbuf		47178	0					
ANR	49188	Identifier	numbuf		47178	0					
ANR	49189	Argument	p_sline		47178	1					
ANR	49190	Identifier	p_sline		47178	0					
ANR	49191	GotoStatement	goto scan_exit ;	767:5:21707:21721	47178	19	True				
ANR	49192	Identifier	scan_exit		47178	0					
ANR	49193	ExpressionStatement	"stars_this_line = strnEQ ( s , ""********"" , 8 )"	769:1:21727:21769	47178	22	True				
ANR	49194	AssignmentExpression	"stars_this_line = strnEQ ( s , ""********"" , 8 )"		47178	0		=			
ANR	49195	Identifier	stars_this_line		47178	0					
ANR	49196	CallExpression	"strnEQ ( s , ""********"" , 8 )"		47178	1					
ANR	49197	Callee	strnEQ		47178	0					
ANR	49198	Identifier	strnEQ		47178	0					
ANR	49199	ArgumentList	s		47178	1					
ANR	49200	Argument	s		47178	0					
ANR	49201	Identifier	s		47178	0					
ANR	49202	Argument	"""********"""		47178	1					
ANR	49203	PrimaryExpression	"""********"""		47178	0					
ANR	49204	Argument	8		47178	2					
ANR	49205	PrimaryExpression	8		47178	0					
ANR	49206	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF ) && stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 ) )"		47178	23					
ANR	49207	Condition	"( diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF ) && stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"	770:5:21776:21955	47178	0	True				
ANR	49208	AndExpression	"( diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF ) && stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"		47178	0		&&			
ANR	49209	OrExpression	diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF		47178	0		||			
ANR	49210	EqualityExpression	diff_type == NO_DIFF		47178	0		==			
ANR	49211	Identifier	diff_type		47178	0					
ANR	49212	Identifier	NO_DIFF		47178	1					
ANR	49213	OrExpression	diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF		47178	1		||			
ANR	49214	EqualityExpression	diff_type == CONTEXT_DIFF		47178	0		==			
ANR	49215	Identifier	diff_type		47178	0					
ANR	49216	Identifier	CONTEXT_DIFF		47178	1					
ANR	49217	EqualityExpression	diff_type == NEW_CONTEXT_DIFF		47178	1		==			
ANR	49218	Identifier	diff_type		47178	0					
ANR	49219	Identifier	NEW_CONTEXT_DIFF		47178	1					
ANR	49220	AndExpression	"stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"		47178	1		&&			
ANR	49221	Identifier	stars_last_line		47178	0					
ANR	49222	AndExpression	"indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"		47178	1		&&			
ANR	49223	EqualityExpression	indent_last_line == indent		47178	0		==			
ANR	49224	Identifier	indent_last_line		47178	0					
ANR	49225	Identifier	indent		47178	1					
ANR	49226	CallExpression	"strnEQ ( s , ""*** "" , 4 )"		47178	1					
ANR	49227	Callee	strnEQ		47178	0					
ANR	49228	Identifier	strnEQ		47178	0					
ANR	49229	ArgumentList	s		47178	1					
ANR	49230	Argument	s		47178	0					
ANR	49231	Identifier	s		47178	0					
ANR	49232	Argument	"""*** """		47178	1					
ANR	49233	PrimaryExpression	"""*** """		47178	0					
ANR	49234	Argument	4		47178	2					
ANR	49235	PrimaryExpression	4		47178	0					
ANR	49236	CompoundStatement		348:31:9553:9553	47178	1					
ANR	49237	ExpressionStatement	s += 4	775:5:21965:21971	47178	0	True				
ANR	49238	AssignmentExpression	s += 4		47178	0		+=			
ANR	49239	Identifier	s		47178	0					
ANR	49240	PrimaryExpression	4		47178	1					
ANR	49241	IfStatement	if ( s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] ) )		47178	1					
ANR	49242	Condition	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )	776:9:21982:22011	47178	0	True				
ANR	49243	AndExpression	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )		47178	0		&&			
ANR	49244	EqualityExpression	s [ 0 ] == '0'		47178	0		==			
ANR	49245	ArrayIndexing	s [ 0 ]		47178	0					
ANR	49246	Identifier	s		47178	0					
ANR	49247	PrimaryExpression	0		47178	1					
ANR	49248	PrimaryExpression	'0'		47178	1					
ANR	49249	UnaryOperationExpression	! ISDIGIT ( s [ 1 ] )		47178	1					
ANR	49250	UnaryOperator	!		47178	0					
ANR	49251	CallExpression	ISDIGIT ( s [ 1 ] )		47178	1					
ANR	49252	Callee	ISDIGIT		47178	0					
ANR	49253	Identifier	ISDIGIT		47178	0					
ANR	49254	ArgumentList	s [ 1 ]		47178	1					
ANR	49255	Argument	s [ 1 ]		47178	0					
ANR	49256	ArrayIndexing	s [ 1 ]		47178	0					
ANR	49257	Identifier	s		47178	0					
ANR	49258	PrimaryExpression	1		47178	1					
ANR	49259	ExpressionStatement	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec	777:7:22021:22076	47178	1	True				
ANR	49260	AssignmentExpression	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec		47178	0		=			
ANR	49261	ArrayIndexing	p_says_nonexistent [ OLD ]		47178	0					
ANR	49262	Identifier	p_says_nonexistent		47178	0					
ANR	49263	Identifier	OLD		47178	1					
ANR	49264	AdditiveExpression	1 + ! p_timestamp [ OLD ] . tv_sec		47178	1		+			
ANR	49265	PrimaryExpression	1		47178	0					
ANR	49266	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49267	UnaryOperator	!		47178	0					
ANR	49268	MemberAccess	p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49269	ArrayIndexing	p_timestamp [ OLD ]		47178	0					
ANR	49270	Identifier	p_timestamp		47178	0					
ANR	49271	Identifier	OLD		47178	1					
ANR	49272	Identifier	tv_sec		47178	1					
ANR	49273	WhileStatement	while ( * s != '\\n' )		47178	2					
ANR	49274	Condition	* s != '\\n'	780:12:22190:22199	47178	0	True				
ANR	49275	EqualityExpression	* s != '\\n'		47178	0		!=			
ANR	49276	UnaryOperationExpression	* s		47178	0					
ANR	49277	UnaryOperator	*		47178	0					
ANR	49278	Identifier	s		47178	1					
ANR	49279	PrimaryExpression	'\\n'		47178	1					
ANR	49280	ExpressionStatement	s ++	781:2:22204:22207	47178	1	True				
ANR	49281	PostIncDecOperationExpression	s ++		47178	0					
ANR	49282	Identifier	s		47178	0					
ANR	49283	IncDec	++		47178	1					
ANR	49284	ExpressionStatement	p_indent = indent	782:5:22214:22231	47178	3	True				
ANR	49285	AssignmentExpression	p_indent = indent		47178	0		=			
ANR	49286	Identifier	p_indent		47178	0					
ANR	49287	Identifier	indent		47178	1					
ANR	49288	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	783:5:22238:22277	47178	4	True				
ANR	49289	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		47178	0		=			
ANR	49290	Identifier	p_strip_trailing_cr		47178	0					
ANR	49291	Identifier	strip_trailing_cr		47178	1					
ANR	49292	ExpressionStatement	p_start = previous_line	784:5:22284:22307	47178	5	True				
ANR	49293	AssignmentExpression	p_start = previous_line		47178	0		=			
ANR	49294	Identifier	p_start		47178	0					
ANR	49295	Identifier	previous_line		47178	1					
ANR	49296	ExpressionStatement	p_sline = p_input_line - 1	785:5:22314:22340	47178	6	True				
ANR	49297	AssignmentExpression	p_sline = p_input_line - 1		47178	0		=			
ANR	49298	Identifier	p_sline		47178	0					
ANR	49299	AdditiveExpression	p_input_line - 1		47178	1		-			
ANR	49300	Identifier	p_input_line		47178	0					
ANR	49301	PrimaryExpression	1		47178	1					
ANR	49302	ExpressionStatement	retval = ( * ( s - 1 ) == '*' ? NEW_CONTEXT_DIFF : CONTEXT_DIFF )	786:5:22347:22405	47178	7	True				
ANR	49303	AssignmentExpression	retval = ( * ( s - 1 ) == '*' ? NEW_CONTEXT_DIFF : CONTEXT_DIFF )		47178	0		=			
ANR	49304	Identifier	retval		47178	0					
ANR	49305	ConditionalExpression	* ( s - 1 ) == '*' ? NEW_CONTEXT_DIFF : CONTEXT_DIFF		47178	1					
ANR	49306	Condition	* ( s - 1 ) == '*'		47178	0					
ANR	49307	EqualityExpression	* ( s - 1 ) == '*'		47178	0		==			
ANR	49308	UnaryOperationExpression	* ( s - 1 )		47178	0					
ANR	49309	UnaryOperator	*		47178	0					
ANR	49310	AdditiveExpression	s - 1		47178	1		-			
ANR	49311	Identifier	s		47178	0					
ANR	49312	PrimaryExpression	1		47178	1					
ANR	49313	PrimaryExpression	'*'		47178	1					
ANR	49314	Identifier	NEW_CONTEXT_DIFF		47178	1					
ANR	49315	Identifier	CONTEXT_DIFF		47178	2					
ANR	49316	CompoundStatement		366:7:10158:10185	47178	8					
ANR	49317	IdentifierDeclStatement	file_offset saved_p_base = p_base ;	791:7:22521:22554	47178	0	True				
ANR	49318	IdentifierDecl	saved_p_base = p_base		47178	0					
ANR	49319	IdentifierDeclType	file_offset		47178	0					
ANR	49320	Identifier	saved_p_base		47178	1					
ANR	49321	AssignmentExpression	saved_p_base = p_base		47178	2		=			
ANR	49322	Identifier	p_base		47178	0					
ANR	49323	Identifier	p_base		47178	1					
ANR	49324	IdentifierDeclStatement	lin saved_p_bline = p_bline ;	792:7:22563:22590	47178	1	True				
ANR	49325	IdentifierDecl	saved_p_bline = p_bline		47178	0					
ANR	49326	IdentifierDeclType	lin		47178	0					
ANR	49327	Identifier	saved_p_bline		47178	1					
ANR	49328	AssignmentExpression	saved_p_bline = p_bline		47178	2		=			
ANR	49329	Identifier	p_bline		47178	0					
ANR	49330	Identifier	p_bline		47178	1					
ANR	49331	ExpressionStatement	"Fseek ( pfp , previous_line , SEEK_SET )"	793:7:22599:22635	47178	2	True				
ANR	49332	CallExpression	"Fseek ( pfp , previous_line , SEEK_SET )"		47178	0					
ANR	49333	Callee	Fseek		47178	0					
ANR	49334	Identifier	Fseek		47178	0					
ANR	49335	ArgumentList	pfp		47178	1					
ANR	49336	Argument	pfp		47178	0					
ANR	49337	Identifier	pfp		47178	0					
ANR	49338	Argument	previous_line		47178	1					
ANR	49339	Identifier	previous_line		47178	0					
ANR	49340	Argument	SEEK_SET		47178	2					
ANR	49341	Identifier	SEEK_SET		47178	0					
ANR	49342	ExpressionStatement	p_input_line -= 2	794:7:22644:22661	47178	3	True				
ANR	49343	AssignmentExpression	p_input_line -= 2		47178	0		-=			
ANR	49344	Identifier	p_input_line		47178	0					
ANR	49345	PrimaryExpression	2		47178	1					
ANR	49346	IfStatement	"if ( another_hunk ( retval , false ) && ! p_repl_lines && p_newfirst == 1 )"		47178	4					
ANR	49347	Condition	"another_hunk ( retval , false ) && ! p_repl_lines && p_newfirst == 1"	795:11:22674:22742	47178	0	True				
ANR	49348	AndExpression	"another_hunk ( retval , false ) && ! p_repl_lines && p_newfirst == 1"		47178	0		&&			
ANR	49349	CallExpression	"another_hunk ( retval , false )"		47178	0					
ANR	49350	Callee	another_hunk		47178	0					
ANR	49351	Identifier	another_hunk		47178	0					
ANR	49352	ArgumentList	retval		47178	1					
ANR	49353	Argument	retval		47178	0					
ANR	49354	Identifier	retval		47178	0					
ANR	49355	Argument	false		47178	1					
ANR	49356	Identifier	false		47178	0					
ANR	49357	AndExpression	! p_repl_lines && p_newfirst == 1		47178	1		&&			
ANR	49358	UnaryOperationExpression	! p_repl_lines		47178	0					
ANR	49359	UnaryOperator	!		47178	0					
ANR	49360	Identifier	p_repl_lines		47178	1					
ANR	49361	EqualityExpression	p_newfirst == 1		47178	1		==			
ANR	49362	Identifier	p_newfirst		47178	0					
ANR	49363	PrimaryExpression	1		47178	1					
ANR	49364	ExpressionStatement	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec	797:2:22747:22802	47178	1	True				
ANR	49365	AssignmentExpression	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec		47178	0		=			
ANR	49366	ArrayIndexing	p_says_nonexistent [ NEW ]		47178	0					
ANR	49367	Identifier	p_says_nonexistent		47178	0					
ANR	49368	Identifier	NEW		47178	1					
ANR	49369	AdditiveExpression	1 + ! p_timestamp [ NEW ] . tv_sec		47178	1		+			
ANR	49370	PrimaryExpression	1		47178	0					
ANR	49371	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49372	UnaryOperator	!		47178	0					
ANR	49373	MemberAccess	p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49374	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	49375	Identifier	p_timestamp		47178	0					
ANR	49376	Identifier	NEW		47178	1					
ANR	49377	Identifier	tv_sec		47178	1					
ANR	49378	ExpressionStatement	"next_intuit_at ( saved_p_base , saved_p_bline )"	798:7:22811:22855	47178	5	True				
ANR	49379	CallExpression	"next_intuit_at ( saved_p_base , saved_p_bline )"		47178	0					
ANR	49380	Callee	next_intuit_at		47178	0					
ANR	49381	Identifier	next_intuit_at		47178	0					
ANR	49382	ArgumentList	saved_p_base		47178	1					
ANR	49383	Argument	saved_p_base		47178	0					
ANR	49384	Identifier	saved_p_base		47178	0					
ANR	49385	Argument	saved_p_bline		47178	1					
ANR	49386	Identifier	saved_p_bline		47178	0					
ANR	49387	IfStatement	if ( ! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header )		47178	9					
ANR	49388	Condition	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header	801:9:22874:23006	47178	0	True				
ANR	49389	AndExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header		47178	0		&&			
ANR	49390	UnaryOperationExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) )		47178	0					
ANR	49391	UnaryOperator	!		47178	0					
ANR	49392	AndExpression	( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec )		47178	1		&&			
ANR	49393	OrExpression	p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec		47178	0		||			
ANR	49394	ArrayIndexing	p_name [ OLD ]		47178	0					
ANR	49395	Identifier	p_name		47178	0					
ANR	49396	Identifier	OLD		47178	1					
ANR	49397	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49398	UnaryOperator	!		47178	0					
ANR	49399	MemberAccess	p_timestamp [ OLD ] . tv_sec		47178	1					
ANR	49400	ArrayIndexing	p_timestamp [ OLD ]		47178	0					
ANR	49401	Identifier	p_timestamp		47178	0					
ANR	49402	Identifier	OLD		47178	1					
ANR	49403	Identifier	tv_sec		47178	1					
ANR	49404	OrExpression	p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec		47178	1		||			
ANR	49405	ArrayIndexing	p_name [ NEW ]		47178	0					
ANR	49406	Identifier	p_name		47178	0					
ANR	49407	Identifier	NEW		47178	1					
ANR	49408	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49409	UnaryOperator	!		47178	0					
ANR	49410	MemberAccess	p_timestamp [ NEW ] . tv_sec		47178	1					
ANR	49411	ArrayIndexing	p_timestamp [ NEW ]		47178	0					
ANR	49412	Identifier	p_timestamp		47178	0					
ANR	49413	Identifier	NEW		47178	1					
ANR	49414	Identifier	tv_sec		47178	1					
ANR	49415	AndExpression	! p_name [ INDEX ] && need_header		47178	1		&&			
ANR	49416	UnaryOperationExpression	! p_name [ INDEX ]		47178	0					
ANR	49417	UnaryOperator	!		47178	0					
ANR	49418	ArrayIndexing	p_name [ INDEX ]		47178	1					
ANR	49419	Identifier	p_name		47178	0					
ANR	49420	Identifier	INDEX		47178	1					
ANR	49421	Identifier	need_header		47178	1					
ANR	49422	CompoundStatement		379:2:10615:10652	47178	1					
ANR	49423	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	805:2:23020:23057	47178	0	True				
ANR	49424	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		47178	0					
ANR	49425	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		47178	0					
ANR	49426	Identifier	numbuf		47178	1					
ANR	49427	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		47178	2		+			
ANR	49428	Identifier	LINENUM_LENGTH_BOUND		47178	0					
ANR	49429	PrimaryExpression	1		47178	1					
ANR	49430	ExpressionStatement	"say ( ""missing header for context diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"	806:2:23061:23163	47178	1	True				
ANR	49431	CallExpression	"say ( ""missing header for context diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"		47178	0					
ANR	49432	Callee	say		47178	0					
ANR	49433	Identifier	say		47178	0					
ANR	49434	ArgumentList	"""missing header for context diff at line %s of patch\\n"""		47178	1					
ANR	49435	Argument	"""missing header for context diff at line %s of patch\\n"""		47178	0					
ANR	49436	PrimaryExpression	"""missing header for context diff at line %s of patch\\n"""		47178	0					
ANR	49437	Argument	"format_linenum ( numbuf , p_sline )"		47178	1					
ANR	49438	CallExpression	"format_linenum ( numbuf , p_sline )"		47178	0					
ANR	49439	Callee	format_linenum		47178	0					
ANR	49440	Identifier	format_linenum		47178	0					
ANR	49441	ArgumentList	numbuf		47178	1					
ANR	49442	Argument	numbuf		47178	0					
ANR	49443	Identifier	numbuf		47178	0					
ANR	49444	Argument	p_sline		47178	1					
ANR	49445	Identifier	p_sline		47178	0					
ANR	49446	GotoStatement	goto scan_exit ;	809:5:23179:23193	47178	10	True				
ANR	49447	Identifier	scan_exit		47178	0					
ANR	49448	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == NORMAL_DIFF ) && last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) ) )"		47178	24					
ANR	49449	Condition	"( diff_type == NO_DIFF || diff_type == NORMAL_DIFF ) && last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) )"	811:5:23203:23329	47178	0	True				
ANR	49450	AndExpression	"( diff_type == NO_DIFF || diff_type == NORMAL_DIFF ) && last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) )"		47178	0		&&			
ANR	49451	OrExpression	diff_type == NO_DIFF || diff_type == NORMAL_DIFF		47178	0		||			
ANR	49452	EqualityExpression	diff_type == NO_DIFF		47178	0		==			
ANR	49453	Identifier	diff_type		47178	0					
ANR	49454	Identifier	NO_DIFF		47178	1					
ANR	49455	EqualityExpression	diff_type == NORMAL_DIFF		47178	1		==			
ANR	49456	Identifier	diff_type		47178	0					
ANR	49457	Identifier	NORMAL_DIFF		47178	1					
ANR	49458	AndExpression	"last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) )"		47178	1		&&			
ANR	49459	Identifier	last_line_was_command		47178	0					
ANR	49460	OrExpression	"strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 )"		47178	1		||			
ANR	49461	CallExpression	"strnEQ ( s , ""< "" , 2 )"		47178	0					
ANR	49462	Callee	strnEQ		47178	0					
ANR	49463	Identifier	strnEQ		47178	0					
ANR	49464	ArgumentList	s		47178	1					
ANR	49465	Argument	s		47178	0					
ANR	49466	Identifier	s		47178	0					
ANR	49467	Argument	"""< """		47178	1					
ANR	49468	PrimaryExpression	"""< """		47178	0					
ANR	49469	Argument	2		47178	2					
ANR	49470	PrimaryExpression	2		47178	0					
ANR	49471	CallExpression	"strnEQ ( s , ""> "" , 2 )"		47178	1					
ANR	49472	Callee	strnEQ		47178	0					
ANR	49473	Identifier	strnEQ		47178	0					
ANR	49474	ArgumentList	s		47178	1					
ANR	49475	Argument	s		47178	0					
ANR	49476	Identifier	s		47178	0					
ANR	49477	Argument	"""> """		47178	1					
ANR	49478	PrimaryExpression	"""> """		47178	0					
ANR	49479	Argument	2		47178	2					
ANR	49480	PrimaryExpression	2		47178	0					
ANR	49481	CompoundStatement		387:48:10928:10928	47178	1					
ANR	49482	ExpressionStatement	p_start = previous_line	814:5:23340:23363	47178	0	True				
ANR	49483	AssignmentExpression	p_start = previous_line		47178	0		=			
ANR	49484	Identifier	p_start		47178	0					
ANR	49485	Identifier	previous_line		47178	1					
ANR	49486	ExpressionStatement	p_sline = p_input_line - 1	815:5:23370:23396	47178	1	True				
ANR	49487	AssignmentExpression	p_sline = p_input_line - 1		47178	0		=			
ANR	49488	Identifier	p_sline		47178	0					
ANR	49489	AdditiveExpression	p_input_line - 1		47178	1		-			
ANR	49490	Identifier	p_input_line		47178	0					
ANR	49491	PrimaryExpression	1		47178	1					
ANR	49492	ExpressionStatement	p_indent = indent	816:5:23403:23420	47178	2	True				
ANR	49493	AssignmentExpression	p_indent = indent		47178	0		=			
ANR	49494	Identifier	p_indent		47178	0					
ANR	49495	Identifier	indent		47178	1					
ANR	49496	ExpressionStatement	retval = NORMAL_DIFF	817:5:23427:23447	47178	3	True				
ANR	49497	AssignmentExpression	retval = NORMAL_DIFF		47178	0		=			
ANR	49498	Identifier	retval		47178	0					
ANR	49499	Identifier	NORMAL_DIFF		47178	1					
ANR	49500	GotoStatement	goto scan_exit ;	818:5:23454:23468	47178	4	True				
ANR	49501	Identifier	scan_exit		47178	0					
ANR	49502	Label	scan_exit :	822:2:23482:23491	47178	30	True				
ANR	49503	Identifier	scan_exit		47178	0					
ANR	49504	ExpressionStatement	file_type = p_mode [ OLD ] & S_IFMT	827:4:23688:23720	47178	31	True				
ANR	49505	AssignmentExpression	file_type = p_mode [ OLD ] & S_IFMT		47178	0		=			
ANR	49506	Identifier	file_type		47178	0					
ANR	49507	BitAndExpression	p_mode [ OLD ] & S_IFMT		47178	1		&			
ANR	49508	ArrayIndexing	p_mode [ OLD ]		47178	0					
ANR	49509	Identifier	p_mode		47178	0					
ANR	49510	Identifier	OLD		47178	1					
ANR	49511	Identifier	S_IFMT		47178	1					
ANR	49512	IfStatement	if ( file_type )		47178	32					
ANR	49513	Condition	file_type	828:8:23730:23738	47178	0	True				
ANR	49514	Identifier	file_type		47178	0					
ANR	49515	CompoundStatement		404:1:11345:11388	47178	1					
ANR	49516	IdentifierDeclStatement	mode_t new_file_type = p_mode [ NEW ] & S_IFMT ;	830:1:23750:23793	47178	0	True				
ANR	49517	IdentifierDecl	new_file_type = p_mode [ NEW ] & S_IFMT		47178	0					
ANR	49518	IdentifierDeclType	mode_t		47178	0					
ANR	49519	Identifier	new_file_type		47178	1					
ANR	49520	AssignmentExpression	new_file_type = p_mode [ NEW ] & S_IFMT		47178	2		=			
ANR	49521	Identifier	new_file_type		47178	0					
ANR	49522	BitAndExpression	p_mode [ NEW ] & S_IFMT		47178	1		&			
ANR	49523	ArrayIndexing	p_mode [ NEW ]		47178	0					
ANR	49524	Identifier	p_mode		47178	0					
ANR	49525	Identifier	NEW		47178	1					
ANR	49526	Identifier	S_IFMT		47178	1					
ANR	49527	IfStatement	if ( new_file_type && file_type != new_file_type )		47178	1					
ANR	49528	Condition	new_file_type && file_type != new_file_type	831:5:23800:23842	47178	0	True				
ANR	49529	AndExpression	new_file_type && file_type != new_file_type		47178	0		&&			
ANR	49530	Identifier	new_file_type		47178	0					
ANR	49531	EqualityExpression	file_type != new_file_type		47178	1		!=			
ANR	49532	Identifier	file_type		47178	0					
ANR	49533	Identifier	new_file_type		47178	1					
ANR	49534	ExpressionStatement	file_type = 0	832:3:23848:23861	47178	1	True				
ANR	49535	AssignmentExpression	file_type = 0		47178	0		=			
ANR	49536	Identifier	file_type		47178	0					
ANR	49537	PrimaryExpression	0		47178	1					
ANR	49538	ElseStatement	else		47178	0					
ANR	49539	CompoundStatement		409:6:11481:11481	47178	0					
ANR	49540	ExpressionStatement	file_type = p_mode [ NEW ] & S_IFMT	836:1:23889:23921	47178	0	True				
ANR	49541	AssignmentExpression	file_type = p_mode [ NEW ] & S_IFMT		47178	0		=			
ANR	49542	Identifier	file_type		47178	0					
ANR	49543	BitAndExpression	p_mode [ NEW ] & S_IFMT		47178	1		&			
ANR	49544	ArrayIndexing	p_mode [ NEW ]		47178	0					
ANR	49545	Identifier	p_mode		47178	0					
ANR	49546	Identifier	NEW		47178	1					
ANR	49547	Identifier	S_IFMT		47178	1					
ANR	49548	IfStatement	if ( ! file_type )		47178	1					
ANR	49549	Condition	! file_type	837:5:23928:23938	47178	0	True				
ANR	49550	UnaryOperationExpression	! file_type		47178	0					
ANR	49551	UnaryOperator	!		47178	0					
ANR	49552	Identifier	file_type		47178	1					
ANR	49553	ExpressionStatement	file_type = S_IFREG	838:3:23944:23963	47178	1	True				
ANR	49554	AssignmentExpression	file_type = S_IFREG		47178	0		=			
ANR	49555	Identifier	file_type		47178	0					
ANR	49556	Identifier	S_IFREG		47178	1					
ANR	49557	ExpressionStatement	* p_file_type = file_type	840:4:23977:24001	47178	33	True				
ANR	49558	AssignmentExpression	* p_file_type = file_type		47178	0		=			
ANR	49559	UnaryOperationExpression	* p_file_type		47178	0					
ANR	49560	UnaryOperator	*		47178	0					
ANR	49561	Identifier	p_file_type		47178	1					
ANR	49562	Identifier	file_type		47178	1					
ANR	49563	ExpressionStatement	i = NONE	863:4:25114:25122	47178	34	True				
ANR	49564	AssignmentExpression	i = NONE		47178	0		=			
ANR	49565	Identifier	i		47178	0					
ANR	49566	Identifier	NONE		47178	1					
ANR	49567	IfStatement	if ( ! inname )		47178	35					
ANR	49568	Condition	! inname	865:8:25133:25139	47178	0	True				
ANR	49569	UnaryOperationExpression	! inname		47178	0					
ANR	49570	UnaryOperator	!		47178	0					
ANR	49571	Identifier	inname		47178	1					
ANR	49572	CompoundStatement		441:1:12746:12769	47178	1					
ANR	49573	IdentifierDeclStatement	enum nametype i0 = NONE ;	867:1:25151:25174	47178	0	True				
ANR	49574	IdentifierDecl	i0 = NONE		47178	0					
ANR	49575	IdentifierDeclType	enum nametype		47178	0					
ANR	49576	Identifier	i0		47178	1					
ANR	49577	AssignmentExpression	i0 = NONE		47178	2		=			
ANR	49578	Identifier	NONE		47178	0					
ANR	49579	Identifier	NONE		47178	1					
ANR	49580	IfStatement	if ( ! posixly_correct && ( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ] )		47178	1					
ANR	49581	Condition	! posixly_correct && ( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ]	869:5:25182:25247	47178	0	True				
ANR	49582	AndExpression	! posixly_correct && ( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ]		47178	0		&&			
ANR	49583	UnaryOperationExpression	! posixly_correct		47178	0					
ANR	49584	UnaryOperator	!		47178	0					
ANR	49585	Identifier	posixly_correct		47178	1					
ANR	49586	AndExpression	( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ]		47178	1		&&			
ANR	49587	OrExpression	p_name [ OLD ] || p_name [ NEW ]		47178	0		||			
ANR	49588	ArrayIndexing	p_name [ OLD ]		47178	0					
ANR	49589	Identifier	p_name		47178	0					
ANR	49590	Identifier	OLD		47178	1					
ANR	49591	ArrayIndexing	p_name [ NEW ]		47178	1					
ANR	49592	Identifier	p_name		47178	0					
ANR	49593	Identifier	NEW		47178	1					
ANR	49594	ArrayIndexing	p_name [ INDEX ]		47178	1					
ANR	49595	Identifier	p_name		47178	0					
ANR	49596	Identifier	INDEX		47178	1					
ANR	49597	CompoundStatement		444:3:12848:12848	47178	1					
ANR	49598	ExpressionStatement	free ( p_name [ INDEX ] )	871:5:25260:25280	47178	0	True				
ANR	49599	CallExpression	free ( p_name [ INDEX ] )		47178	0					
ANR	49600	Callee	free		47178	0					
ANR	49601	Identifier	free		47178	0					
ANR	49602	ArgumentList	p_name [ INDEX ]		47178	1					
ANR	49603	Argument	p_name [ INDEX ]		47178	0					
ANR	49604	ArrayIndexing	p_name [ INDEX ]		47178	0					
ANR	49605	Identifier	p_name		47178	0					
ANR	49606	Identifier	INDEX		47178	1					
ANR	49607	ExpressionStatement	p_name [ INDEX ] = 0	872:5:25287:25304	47178	1	True				
ANR	49608	AssignmentExpression	p_name [ INDEX ] = 0		47178	0		=			
ANR	49609	ArrayIndexing	p_name [ INDEX ]		47178	0					
ANR	49610	Identifier	p_name		47178	0					
ANR	49611	Identifier	INDEX		47178	1					
ANR	49612	PrimaryExpression	0		47178	1					
ANR	49613	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		47178	2					
ANR	49614	ForInit	i = OLD ;	875:6:25318:25325	47178	0	True				
ANR	49615	AssignmentExpression	i = OLD		47178	0		=			
ANR	49616	Identifier	i		47178	0					
ANR	49617	Identifier	OLD		47178	1					
ANR	49618	Condition	i <= INDEX	875:16:25328:25337	47178	1	True				
ANR	49619	RelationalExpression	i <= INDEX		47178	0		<=			
ANR	49620	Identifier	i		47178	0					
ANR	49621	Identifier	INDEX		47178	1					
ANR	49622	PostIncDecOperationExpression	i ++	875:29:25341:25343	47178	2	True				
ANR	49623	Identifier	i		47178	0					
ANR	49624	IncDec	++		47178	1					
ANR	49625	IfStatement	if ( p_name [ i ] )		47178	3					
ANR	49626	Condition	p_name [ i ]	876:7:25353:25361	47178	0	True				
ANR	49627	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49628	Identifier	p_name		47178	0					
ANR	49629	Identifier	i		47178	1					
ANR	49630	CompoundStatement		451:5:12964:12964	47178	1					
ANR	49631	IfStatement	"if ( i0 != NONE && strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0 )"		47178	0					
ANR	49632	Condition	"i0 != NONE && strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0"	878:11:25382:25430	47178	0	True				
ANR	49633	AndExpression	"i0 != NONE && strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0"		47178	0		&&			
ANR	49634	EqualityExpression	i0 != NONE		47178	0		!=			
ANR	49635	Identifier	i0		47178	0					
ANR	49636	Identifier	NONE		47178	1					
ANR	49637	EqualityExpression	"strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0"		47178	1		==			
ANR	49638	CallExpression	"strcmp ( p_name [ i0 ] , p_name [ i ] )"		47178	0					
ANR	49639	Callee	strcmp		47178	0					
ANR	49640	Identifier	strcmp		47178	0					
ANR	49641	ArgumentList	p_name [ i0 ]		47178	1					
ANR	49642	Argument	p_name [ i0 ]		47178	0					
ANR	49643	ArrayIndexing	p_name [ i0 ]		47178	0					
ANR	49644	Identifier	p_name		47178	0					
ANR	49645	Identifier	i0		47178	1					
ANR	49646	Argument	p_name [ i ]		47178	1					
ANR	49647	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49648	Identifier	p_name		47178	0					
ANR	49649	Identifier	i		47178	1					
ANR	49650	PrimaryExpression	0		47178	1					
ANR	49651	CompoundStatement		453:2:13030:13030	47178	1					
ANR	49652	ExpressionStatement	stat_errno [ i ] = stat_errno [ i0 ]	881:4:25502:25532	47178	0	True				
ANR	49653	AssignmentExpression	stat_errno [ i ] = stat_errno [ i0 ]		47178	0		=			
ANR	49654	ArrayIndexing	stat_errno [ i ]		47178	0					
ANR	49655	Identifier	stat_errno		47178	0					
ANR	49656	Identifier	i		47178	1					
ANR	49657	ArrayIndexing	stat_errno [ i0 ]		47178	1					
ANR	49658	Identifier	stat_errno		47178	0					
ANR	49659	Identifier	i0		47178	1					
ANR	49660	IfStatement	if ( ! stat_errno [ i ] )		47178	1					
ANR	49661	Condition	! stat_errno [ i ]	882:8:25542:25556	47178	0	True				
ANR	49662	UnaryOperationExpression	! stat_errno [ i ]		47178	0					
ANR	49663	UnaryOperator	!		47178	0					
ANR	49664	ArrayIndexing	stat_errno [ i ]		47178	1					
ANR	49665	Identifier	stat_errno		47178	0					
ANR	49666	Identifier	i		47178	1					
ANR	49667	ExpressionStatement	st [ i ] = st [ i0 ]	883:6:25565:25579	47178	1	True				
ANR	49668	AssignmentExpression	st [ i ] = st [ i0 ]		47178	0		=			
ANR	49669	ArrayIndexing	st [ i ]		47178	0					
ANR	49670	Identifier	st		47178	0					
ANR	49671	Identifier	i		47178	1					
ANR	49672	ArrayIndexing	st [ i0 ]		47178	1					
ANR	49673	Identifier	st		47178	0					
ANR	49674	Identifier	i0		47178	1					
ANR	49675	ElseStatement	else		47178	0					
ANR	49676	CompoundStatement		460:2:13194:13194	47178	0					
ANR	49677	ExpressionStatement	"stat_errno [ i ] = stat_file ( p_name [ i ] , & st [ i ] )"	887:4:25605:25650	47178	0	True				
ANR	49678	AssignmentExpression	"stat_errno [ i ] = stat_file ( p_name [ i ] , & st [ i ] )"		47178	0		=			
ANR	49679	ArrayIndexing	stat_errno [ i ]		47178	0					
ANR	49680	Identifier	stat_errno		47178	0					
ANR	49681	Identifier	i		47178	1					
ANR	49682	CallExpression	"stat_file ( p_name [ i ] , & st [ i ] )"		47178	1					
ANR	49683	Callee	stat_file		47178	0					
ANR	49684	Identifier	stat_file		47178	0					
ANR	49685	ArgumentList	p_name [ i ]		47178	1					
ANR	49686	Argument	p_name [ i ]		47178	0					
ANR	49687	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49688	Identifier	p_name		47178	0					
ANR	49689	Identifier	i		47178	1					
ANR	49690	Argument	& st [ i ]		47178	1					
ANR	49691	UnaryOperationExpression	& st [ i ]		47178	0					
ANR	49692	UnaryOperator	&		47178	0					
ANR	49693	ArrayIndexing	st [ i ]		47178	1					
ANR	49694	Identifier	st		47178	0					
ANR	49695	Identifier	i		47178	1					
ANR	49696	IfStatement	if ( ! stat_errno [ i ] )		47178	1					
ANR	49697	Condition	! stat_errno [ i ]	888:8:25660:25674	47178	0	True				
ANR	49698	UnaryOperationExpression	! stat_errno [ i ]		47178	0					
ANR	49699	UnaryOperator	!		47178	0					
ANR	49700	ArrayIndexing	stat_errno [ i ]		47178	1					
ANR	49701	Identifier	stat_errno		47178	0					
ANR	49702	Identifier	i		47178	1					
ANR	49703	CompoundStatement		463:6:13278:13278	47178	1					
ANR	49704	IfStatement	if ( lookup_file_id ( & st [ i ] ) == DELETE_LATER )		47178	0					
ANR	49705	Condition	lookup_file_id ( & st [ i ] ) == DELETE_LATER	890:12:25697:25735	47178	0	True				
ANR	49706	EqualityExpression	lookup_file_id ( & st [ i ] ) == DELETE_LATER		47178	0		==			
ANR	49707	CallExpression	lookup_file_id ( & st [ i ] )		47178	0					
ANR	49708	Callee	lookup_file_id		47178	0					
ANR	49709	Identifier	lookup_file_id		47178	0					
ANR	49710	ArgumentList	& st [ i ]		47178	1					
ANR	49711	Argument	& st [ i ]		47178	0					
ANR	49712	UnaryOperationExpression	& st [ i ]		47178	0					
ANR	49713	UnaryOperator	&		47178	0					
ANR	49714	ArrayIndexing	st [ i ]		47178	1					
ANR	49715	Identifier	st		47178	0					
ANR	49716	Identifier	i		47178	1					
ANR	49717	Identifier	DELETE_LATER		47178	1					
ANR	49718	ExpressionStatement	stat_errno [ i ] = ENOENT	891:3:25741:25763	47178	1	True				
ANR	49719	AssignmentExpression	stat_errno [ i ] = ENOENT		47178	0		=			
ANR	49720	ArrayIndexing	stat_errno [ i ]		47178	0					
ANR	49721	Identifier	stat_errno		47178	0					
ANR	49722	Identifier	i		47178	1					
ANR	49723	Identifier	ENOENT		47178	1					
ANR	49724	ElseStatement	else		47178	0					
ANR	49725	IfStatement	if ( posixly_correct && name_is_valid ( p_name [ i ] ) )		47178	0					
ANR	49726	Condition	posixly_correct && name_is_valid ( p_name [ i ] )	892:17:25782:25825	47178	0	True				
ANR	49727	AndExpression	posixly_correct && name_is_valid ( p_name [ i ] )		47178	0		&&			
ANR	49728	Identifier	posixly_correct		47178	0					
ANR	49729	CallExpression	name_is_valid ( p_name [ i ] )		47178	1					
ANR	49730	Callee	name_is_valid		47178	0					
ANR	49731	Identifier	name_is_valid		47178	0					
ANR	49732	ArgumentList	p_name [ i ]		47178	1					
ANR	49733	Argument	p_name [ i ]		47178	0					
ANR	49734	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49735	Identifier	p_name		47178	0					
ANR	49736	Identifier	i		47178	1					
ANR	49737	BreakStatement	break ;	893:3:25831:25836	47178	1	True				
ANR	49738	ExpressionStatement	i0 = i	896:7:25857:25863	47178	1	True				
ANR	49739	AssignmentExpression	i0 = i		47178	0		=			
ANR	49740	Identifier	i0		47178	0					
ANR	49741	Identifier	i		47178	1					
ANR	49742	IfStatement	if ( ! posixly_correct )		47178	3					
ANR	49743	Condition	! posixly_correct	899:5:25878:25894	47178	0	True				
ANR	49744	UnaryOperationExpression	! posixly_correct		47178	0					
ANR	49745	UnaryOperator	!		47178	0					
ANR	49746	Identifier	posixly_correct		47178	1					
ANR	49747	CompoundStatement		474:3:13495:13495	47178	1					
ANR	49748	ExpressionStatement	"i = best_name ( p_name , stat_errno )"	902:5:25950:25984	47178	0	True				
ANR	49749	AssignmentExpression	"i = best_name ( p_name , stat_errno )"		47178	0		=			
ANR	49750	Identifier	i		47178	0					
ANR	49751	CallExpression	"best_name ( p_name , stat_errno )"		47178	1					
ANR	49752	Callee	best_name		47178	0					
ANR	49753	Identifier	best_name		47178	0					
ANR	49754	ArgumentList	p_name		47178	1					
ANR	49755	Argument	p_name		47178	0					
ANR	49756	Identifier	p_name		47178	0					
ANR	49757	Argument	stat_errno		47178	1					
ANR	49758	Identifier	stat_errno		47178	0					
ANR	49759	IfStatement	if ( i == NONE && patch_get )		47178	1					
ANR	49760	Condition	i == NONE && patch_get	904:9:25996:26017	47178	0	True				
ANR	49761	AndExpression	i == NONE && patch_get		47178	0		&&			
ANR	49762	EqualityExpression	i == NONE		47178	0		==			
ANR	49763	Identifier	i		47178	0					
ANR	49764	Identifier	NONE		47178	1					
ANR	49765	Identifier	patch_get		47178	1					
ANR	49766	CompoundStatement		480:2:13626:13651	47178	1					
ANR	49767	IdentifierDeclStatement	enum nametype nope = NONE ;	906:2:26031:26056	47178	0	True				
ANR	49768	IdentifierDecl	nope = NONE		47178	0					
ANR	49769	IdentifierDeclType	enum nametype		47178	0					
ANR	49770	Identifier	nope		47178	1					
ANR	49771	AssignmentExpression	nope = NONE		47178	2		=			
ANR	49772	Identifier	NONE		47178	0					
ANR	49773	Identifier	NONE		47178	1					
ANR	49774	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		47178	1					
ANR	49775	ForInit	i = OLD ;	908:7:26066:26073	47178	0	True				
ANR	49776	AssignmentExpression	i = OLD		47178	0		=			
ANR	49777	Identifier	i		47178	0					
ANR	49778	Identifier	OLD		47178	1					
ANR	49779	Condition	i <= INDEX	908:17:26076:26085	47178	1	True				
ANR	49780	RelationalExpression	i <= INDEX		47178	0		<=			
ANR	49781	Identifier	i		47178	0					
ANR	49782	Identifier	INDEX		47178	1					
ANR	49783	PostIncDecOperationExpression	i ++	908:30:26089:26091	47178	2	True				
ANR	49784	Identifier	i		47178	0					
ANR	49785	IncDec	++		47178	1					
ANR	49786	IfStatement	if ( p_name [ i ] )		47178	3					
ANR	49787	Condition	p_name [ i ]	909:8:26102:26110	47178	0	True				
ANR	49788	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49789	Identifier	p_name		47178	0					
ANR	49790	Identifier	i		47178	1					
ANR	49791	CompoundStatement		488:8:13793:13865	47178	1					
ANR	49792	IdentifierDeclStatement	char const * cs ;	911:8:26129:26143	47178	0	True				
ANR	49793	IdentifierDecl	* cs		47178	0					
ANR	49794	IdentifierDeclType	char const *		47178	0					
ANR	49795	Identifier	cs		47178	1					
ANR	49796	IdentifierDeclStatement	char * getbuf ;	912:8:26153:26165	47178	1	True				
ANR	49797	IdentifierDecl	* getbuf		47178	0					
ANR	49798	IdentifierDeclType	char *		47178	0					
ANR	49799	Identifier	getbuf		47178	1					
ANR	49800	IdentifierDeclStatement	char * diffbuf ;	913:8:26175:26188	47178	2	True				
ANR	49801	IdentifierDecl	* diffbuf		47178	0					
ANR	49802	IdentifierDeclType	char *		47178	0					
ANR	49803	Identifier	diffbuf		47178	1					
ANR	49804	IdentifierDeclStatement	"bool readonly = ( outfile && strcmp ( outfile , p_name [ i ] ) != 0 ) ;"	914:8:26198:26270	47178	3	True				
ANR	49805	IdentifierDecl	"readonly = ( outfile && strcmp ( outfile , p_name [ i ] ) != 0 )"		47178	0					
ANR	49806	IdentifierDeclType	bool		47178	0					
ANR	49807	Identifier	readonly		47178	1					
ANR	49808	AssignmentExpression	"readonly = ( outfile && strcmp ( outfile , p_name [ i ] ) != 0 )"		47178	2		=			
ANR	49809	Identifier	readonly		47178	0					
ANR	49810	AndExpression	"outfile && strcmp ( outfile , p_name [ i ] ) != 0"		47178	1		&&			
ANR	49811	Identifier	outfile		47178	0					
ANR	49812	EqualityExpression	"strcmp ( outfile , p_name [ i ] ) != 0"		47178	1		!=			
ANR	49813	CallExpression	"strcmp ( outfile , p_name [ i ] )"		47178	0					
ANR	49814	Callee	strcmp		47178	0					
ANR	49815	Identifier	strcmp		47178	0					
ANR	49816	ArgumentList	outfile		47178	1					
ANR	49817	Argument	outfile		47178	0					
ANR	49818	Identifier	outfile		47178	0					
ANR	49819	Argument	p_name [ i ]		47178	1					
ANR	49820	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49821	Identifier	p_name		47178	0					
ANR	49822	Identifier	i		47178	1					
ANR	49823	PrimaryExpression	0		47178	1					
ANR	49824	IfStatement	"if ( nope == NONE || strcmp ( p_name [ nope ] , p_name [ i ] ) != 0 )"		47178	4					
ANR	49825	Condition	"nope == NONE || strcmp ( p_name [ nope ] , p_name [ i ] ) != 0"	917:12:26285:26337	47178	0	True				
ANR	49826	OrExpression	"nope == NONE || strcmp ( p_name [ nope ] , p_name [ i ] ) != 0"		47178	0		||			
ANR	49827	EqualityExpression	nope == NONE		47178	0		==			
ANR	49828	Identifier	nope		47178	0					
ANR	49829	Identifier	NONE		47178	1					
ANR	49830	EqualityExpression	"strcmp ( p_name [ nope ] , p_name [ i ] ) != 0"		47178	1		!=			
ANR	49831	CallExpression	"strcmp ( p_name [ nope ] , p_name [ i ] )"		47178	0					
ANR	49832	Callee	strcmp		47178	0					
ANR	49833	Identifier	strcmp		47178	0					
ANR	49834	ArgumentList	p_name [ nope ]		47178	1					
ANR	49835	Argument	p_name [ nope ]		47178	0					
ANR	49836	ArrayIndexing	p_name [ nope ]		47178	0					
ANR	49837	Identifier	p_name		47178	0					
ANR	49838	Identifier	nope		47178	1					
ANR	49839	Argument	p_name [ i ]		47178	1					
ANR	49840	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49841	Identifier	p_name		47178	0					
ANR	49842	Identifier	i		47178	1					
ANR	49843	PrimaryExpression	0		47178	1					
ANR	49844	CompoundStatement		492:3:13938:13938	47178	1					
ANR	49845	ExpressionStatement	"cs = ( version_controller ( p_name [ i ] , readonly , ( struct stat * ) 0 , & getbuf , & diffbuf ) )"	919:5:26350:26451	47178	0	True				
ANR	49846	AssignmentExpression	"cs = ( version_controller ( p_name [ i ] , readonly , ( struct stat * ) 0 , & getbuf , & diffbuf ) )"		47178	0		=			
ANR	49847	Identifier	cs		47178	0					
ANR	49848	CallExpression	"version_controller ( p_name [ i ] , readonly , ( struct stat * ) 0 , & getbuf , & diffbuf )"		47178	1					
ANR	49849	Callee	version_controller		47178	0					
ANR	49850	Identifier	version_controller		47178	0					
ANR	49851	ArgumentList	p_name [ i ]		47178	1					
ANR	49852	Argument	p_name [ i ]		47178	0					
ANR	49853	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49854	Identifier	p_name		47178	0					
ANR	49855	Identifier	i		47178	1					
ANR	49856	Argument	readonly		47178	1					
ANR	49857	Identifier	readonly		47178	0					
ANR	49858	Argument	( struct stat * ) 0		47178	2					
ANR	49859	CastExpression	( struct stat * ) 0		47178	0					
ANR	49860	CastTarget	struct stat *		47178	0					
ANR	49861	PrimaryExpression	0		47178	1					
ANR	49862	Argument	& getbuf		47178	3					
ANR	49863	UnaryOperationExpression	& getbuf		47178	0					
ANR	49864	UnaryOperator	&		47178	0					
ANR	49865	Identifier	getbuf		47178	1					
ANR	49866	Argument	& diffbuf		47178	4					
ANR	49867	UnaryOperationExpression	& diffbuf		47178	0					
ANR	49868	UnaryOperator	&		47178	0					
ANR	49869	Identifier	diffbuf		47178	1					
ANR	49870	ExpressionStatement	version_controlled [ i ] = ! ! cs	922:5:26458:26487	47178	1	True				
ANR	49871	AssignmentExpression	version_controlled [ i ] = ! ! cs		47178	0		=			
ANR	49872	ArrayIndexing	version_controlled [ i ]		47178	0					
ANR	49873	Identifier	version_controlled		47178	0					
ANR	49874	Identifier	i		47178	1					
ANR	49875	UnaryOperationExpression	! ! cs		47178	1					
ANR	49876	UnaryOperator	!		47178	0					
ANR	49877	UnaryOperationExpression	! cs		47178	1					
ANR	49878	UnaryOperator	!		47178	0					
ANR	49879	Identifier	cs		47178	1					
ANR	49880	IfStatement	if ( cs )		47178	2					
ANR	49881	Condition	cs	923:9:26498:26499	47178	0	True				
ANR	49882	Identifier	cs		47178	0					
ANR	49883	CompoundStatement		498:7:14104:14104	47178	1					
ANR	49884	IfStatement	"if ( version_get ( p_name [ i ] , cs , false , readonly , getbuf , & st [ i ] ) )"		47178	0					
ANR	49885	Condition	"version_get ( p_name [ i ] , cs , false , readonly , getbuf , & st [ i ] )"	925:13:26524:26595	47178	0	True				
ANR	49886	CallExpression	"version_get ( p_name [ i ] , cs , false , readonly , getbuf , & st [ i ] )"		47178	0					
ANR	49887	Callee	version_get		47178	0					
ANR	49888	Identifier	version_get		47178	0					
ANR	49889	ArgumentList	p_name [ i ]		47178	1					
ANR	49890	Argument	p_name [ i ]		47178	0					
ANR	49891	ArrayIndexing	p_name [ i ]		47178	0					
ANR	49892	Identifier	p_name		47178	0					
ANR	49893	Identifier	i		47178	1					
ANR	49894	Argument	cs		47178	1					
ANR	49895	Identifier	cs		47178	0					
ANR	49896	Argument	false		47178	2					
ANR	49897	Identifier	false		47178	0					
ANR	49898	Argument	readonly		47178	3					
ANR	49899	Identifier	readonly		47178	0					
ANR	49900	Argument	getbuf		47178	4					
ANR	49901	Identifier	getbuf		47178	0					
ANR	49902	Argument	& st [ i ]		47178	5					
ANR	49903	UnaryOperationExpression	& st [ i ]		47178	0					
ANR	49904	UnaryOperator	&		47178	0					
ANR	49905	ArrayIndexing	st [ i ]		47178	1					
ANR	49906	Identifier	st		47178	0					
ANR	49907	Identifier	i		47178	1					
ANR	49908	ExpressionStatement	stat_errno [ i ] = 0	927:4:26602:26619	47178	1	True				
ANR	49909	AssignmentExpression	stat_errno [ i ] = 0		47178	0		=			
ANR	49910	ArrayIndexing	stat_errno [ i ]		47178	0					
ANR	49911	Identifier	stat_errno		47178	0					
ANR	49912	Identifier	i		47178	1					
ANR	49913	PrimaryExpression	0		47178	1					
ANR	49914	ElseStatement	else		47178	0					
ANR	49915	ExpressionStatement	version_controlled [ i ] = 0	929:4:26639:26664	47178	0	True				
ANR	49916	AssignmentExpression	version_controlled [ i ] = 0		47178	0		=			
ANR	49917	ArrayIndexing	version_controlled [ i ]		47178	0					
ANR	49918	Identifier	version_controlled		47178	0					
ANR	49919	Identifier	i		47178	1					
ANR	49920	PrimaryExpression	0		47178	1					
ANR	49921	ExpressionStatement	free ( getbuf )	931:9:26676:26689	47178	1	True				
ANR	49922	CallExpression	free ( getbuf )		47178	0					
ANR	49923	Callee	free		47178	0					
ANR	49924	Identifier	free		47178	0					
ANR	49925	ArgumentList	getbuf		47178	1					
ANR	49926	Argument	getbuf		47178	0					
ANR	49927	Identifier	getbuf		47178	0					
ANR	49928	ExpressionStatement	free ( diffbuf )	932:9:26700:26714	47178	2	True				
ANR	49929	CallExpression	free ( diffbuf )		47178	0					
ANR	49930	Callee	free		47178	0					
ANR	49931	Identifier	free		47178	0					
ANR	49932	ArgumentList	diffbuf		47178	1					
ANR	49933	Argument	diffbuf		47178	0					
ANR	49934	Identifier	diffbuf		47178	0					
ANR	49935	IfStatement	if ( ! stat_errno [ i ] )		47178	3					
ANR	49936	Condition	! stat_errno [ i ]	934:13:26730:26744	47178	0	True				
ANR	49937	UnaryOperationExpression	! stat_errno [ i ]		47178	0					
ANR	49938	UnaryOperator	!		47178	0					
ANR	49939	ArrayIndexing	stat_errno [ i ]		47178	1					
ANR	49940	Identifier	stat_errno		47178	0					
ANR	49941	Identifier	i		47178	1					
ANR	49942	BreakStatement	break ;	935:4:26751:26756	47178	1	True				
ANR	49943	ExpressionStatement	nope = i	939:8:26781:26789	47178	5	True				
ANR	49944	AssignmentExpression	nope = i		47178	0		=			
ANR	49945	Identifier	nope		47178	0					
ANR	49946	Identifier	i		47178	1					
ANR	49947	IfStatement	"if ( i0 != NONE && ( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE )"		47178	2					
ANR	49948	Condition	"i0 != NONE && ( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"	943:9:26818:26998	47178	0	True				
ANR	49949	AndExpression	"i0 != NONE && ( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"		47178	0		&&			
ANR	49950	EqualityExpression	i0 != NONE		47178	0		!=			
ANR	49951	Identifier	i0		47178	0					
ANR	49952	Identifier	NONE		47178	1					
ANR	49953	AndExpression	"( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"		47178	1		&&			
ANR	49954	OrExpression	i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type		47178	0		||			
ANR	49955	EqualityExpression	i == NONE		47178	0		==			
ANR	49956	Identifier	i		47178	0					
ANR	49957	Identifier	NONE		47178	1					
ANR	49958	EqualityExpression	( st [ i ] . st_mode & S_IFMT ) == file_type		47178	1		==			
ANR	49959	BitAndExpression	st [ i ] . st_mode & S_IFMT		47178	0		&			
ANR	49960	MemberAccess	st [ i ] . st_mode		47178	0					
ANR	49961	ArrayIndexing	st [ i ]		47178	0					
ANR	49962	Identifier	st		47178	0					
ANR	49963	Identifier	i		47178	1					
ANR	49964	Identifier	st_mode		47178	1					
ANR	49965	Identifier	S_IFMT		47178	1					
ANR	49966	Identifier	file_type		47178	1					
ANR	49967	AndExpression	"maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"		47178	1		&&			
ANR	49968	CallExpression	"maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 )"		47178	0					
ANR	49969	Callee	maybe_reverse		47178	0					
ANR	49970	Identifier	maybe_reverse		47178	0					
ANR	49971	ArgumentList	p_name [ i == NONE ? i0 : i ]		47178	1					
ANR	49972	Argument	p_name [ i == NONE ? i0 : i ]		47178	0					
ANR	49973	ArrayIndexing	p_name [ i == NONE ? i0 : i ]		47178	0					
ANR	49974	Identifier	p_name		47178	0					
ANR	49975	ConditionalExpression	i == NONE ? i0 : i		47178	1					
ANR	49976	Condition	i == NONE		47178	0					
ANR	49977	EqualityExpression	i == NONE		47178	0		==			
ANR	49978	Identifier	i		47178	0					
ANR	49979	Identifier	NONE		47178	1					
ANR	49980	Identifier	i0		47178	1					
ANR	49981	Identifier	i		47178	2					
ANR	49982	Argument	i == NONE		47178	1					
ANR	49983	EqualityExpression	i == NONE		47178	0		==			
ANR	49984	Identifier	i		47178	0					
ANR	49985	Identifier	NONE		47178	1					
ANR	49986	Argument	i == NONE || st [ i ] . st_size == 0		47178	2					
ANR	49987	OrExpression	i == NONE || st [ i ] . st_size == 0		47178	0		||			
ANR	49988	EqualityExpression	i == NONE		47178	0		==			
ANR	49989	Identifier	i		47178	0					
ANR	49990	Identifier	NONE		47178	1					
ANR	49991	EqualityExpression	st [ i ] . st_size == 0		47178	1		==			
ANR	49992	MemberAccess	st [ i ] . st_size		47178	0					
ANR	49993	ArrayIndexing	st [ i ]		47178	0					
ANR	49994	Identifier	st		47178	0					
ANR	49995	Identifier	i		47178	1					
ANR	49996	Identifier	st_size		47178	1					
ANR	49997	PrimaryExpression	0		47178	1					
ANR	49998	EqualityExpression	i == NONE		47178	1		==			
ANR	49999	Identifier	i		47178	0					
ANR	50000	Identifier	NONE		47178	1					
ANR	50001	ExpressionStatement	i = i0	948:7:27008:27014	47178	1	True				
ANR	50002	AssignmentExpression	i = i0		47178	0		=			
ANR	50003	Identifier	i		47178	0					
ANR	50004	Identifier	i0		47178	1					
ANR	50005	IfStatement	if ( i == NONE && p_says_nonexistent [ reverse ] )		47178	3					
ANR	50006	Condition	i == NONE && p_says_nonexistent [ reverse ]	950:9:27026:27065	47178	0	True				
ANR	50007	AndExpression	i == NONE && p_says_nonexistent [ reverse ]		47178	0		&&			
ANR	50008	EqualityExpression	i == NONE		47178	0		==			
ANR	50009	Identifier	i		47178	0					
ANR	50010	Identifier	NONE		47178	1					
ANR	50011	ArrayIndexing	p_says_nonexistent [ reverse ]		47178	1					
ANR	50012	Identifier	p_says_nonexistent		47178	0					
ANR	50013	Identifier	reverse		47178	1					
ANR	50014	CompoundStatement		528:2:14721:14749	47178	1					
ANR	50015	IdentifierDeclStatement	int newdirs [ 3 ] ;	952:2:27079:27093	47178	0	True				
ANR	50016	IdentifierDecl	newdirs [ 3 ]		47178	0					
ANR	50017	IdentifierDeclType	int [ 3 ]		47178	0					
ANR	50018	Identifier	newdirs		47178	1					
ANR	50019	PrimaryExpression	3		47178	2					
ANR	50020	IdentifierDeclStatement	int newdirs_min = INT_MAX ;	953:2:27097:27122	47178	1	True				
ANR	50021	IdentifierDecl	newdirs_min = INT_MAX		47178	0					
ANR	50022	IdentifierDeclType	int		47178	0					
ANR	50023	Identifier	newdirs_min		47178	1					
ANR	50024	AssignmentExpression	newdirs_min = INT_MAX		47178	2		=			
ANR	50025	Identifier	INT_MAX		47178	0					
ANR	50026	Identifier	INT_MAX		47178	1					
ANR	50027	IdentifierDeclStatement	int distance_from_minimum [ 3 ] ;	954:2:27126:27154	47178	2	True				
ANR	50028	IdentifierDecl	distance_from_minimum [ 3 ]		47178	0					
ANR	50029	IdentifierDeclType	int [ 3 ]		47178	0					
ANR	50030	Identifier	distance_from_minimum		47178	1					
ANR	50031	PrimaryExpression	3		47178	2					
ANR	50032	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		47178	3					
ANR	50033	ForInit	i = OLD ;	956:7:27164:27171	47178	0	True				
ANR	50034	AssignmentExpression	i = OLD		47178	0		=			
ANR	50035	Identifier	i		47178	0					
ANR	50036	Identifier	OLD		47178	1					
ANR	50037	Condition	i <= INDEX	956:17:27174:27183	47178	1	True				
ANR	50038	RelationalExpression	i <= INDEX		47178	0		<=			
ANR	50039	Identifier	i		47178	0					
ANR	50040	Identifier	INDEX		47178	1					
ANR	50041	PostIncDecOperationExpression	i ++	956:30:27187:27189	47178	2	True				
ANR	50042	Identifier	i		47178	0					
ANR	50043	IncDec	++		47178	1					
ANR	50044	IfStatement	if ( p_name [ i ] )		47178	3					
ANR	50045	Condition	p_name [ i ]	957:8:27200:27208	47178	0	True				
ANR	50046	ArrayIndexing	p_name [ i ]		47178	0					
ANR	50047	Identifier	p_name		47178	0					
ANR	50048	Identifier	i		47178	1					
ANR	50049	CompoundStatement		532:6:14812:14812	47178	1					
ANR	50050	ExpressionStatement	"newdirs [ i ] = ( prefix_components ( p_name [ i ] , false ) - prefix_components ( p_name [ i ] , true ) )"	959:8:27227:27324	47178	0	True				
ANR	50051	AssignmentExpression	"newdirs [ i ] = ( prefix_components ( p_name [ i ] , false ) - prefix_components ( p_name [ i ] , true ) )"		47178	0		=			
ANR	50052	ArrayIndexing	newdirs [ i ]		47178	0					
ANR	50053	Identifier	newdirs		47178	0					
ANR	50054	Identifier	i		47178	1					
ANR	50055	AdditiveExpression	"prefix_components ( p_name [ i ] , false ) - prefix_components ( p_name [ i ] , true )"		47178	1		-			
ANR	50056	CallExpression	"prefix_components ( p_name [ i ] , false )"		47178	0					
ANR	50057	Callee	prefix_components		47178	0					
ANR	50058	Identifier	prefix_components		47178	0					
ANR	50059	ArgumentList	p_name [ i ]		47178	1					
ANR	50060	Argument	p_name [ i ]		47178	0					
ANR	50061	ArrayIndexing	p_name [ i ]		47178	0					
ANR	50062	Identifier	p_name		47178	0					
ANR	50063	Identifier	i		47178	1					
ANR	50064	Argument	false		47178	1					
ANR	50065	Identifier	false		47178	0					
ANR	50066	CallExpression	"prefix_components ( p_name [ i ] , true )"		47178	1					
ANR	50067	Callee	prefix_components		47178	0					
ANR	50068	Identifier	prefix_components		47178	0					
ANR	50069	ArgumentList	p_name [ i ]		47178	1					
ANR	50070	Argument	p_name [ i ]		47178	0					
ANR	50071	ArrayIndexing	p_name [ i ]		47178	0					
ANR	50072	Identifier	p_name		47178	0					
ANR	50073	Identifier	i		47178	1					
ANR	50074	Argument	true		47178	1					
ANR	50075	Identifier	true		47178	0					
ANR	50076	IfStatement	if ( newdirs [ i ] < newdirs_min )		47178	1					
ANR	50077	Condition	newdirs [ i ] < newdirs_min	961:12:27338:27361	47178	0	True				
ANR	50078	RelationalExpression	newdirs [ i ] < newdirs_min		47178	0		<			
ANR	50079	ArrayIndexing	newdirs [ i ]		47178	0					
ANR	50080	Identifier	newdirs		47178	0					
ANR	50081	Identifier	i		47178	1					
ANR	50082	Identifier	newdirs_min		47178	1					
ANR	50083	ExpressionStatement	newdirs_min = newdirs [ i ]	962:3:27367:27391	47178	1	True				
ANR	50084	AssignmentExpression	newdirs_min = newdirs [ i ]		47178	0		=			
ANR	50085	Identifier	newdirs_min		47178	0					
ANR	50086	ArrayIndexing	newdirs [ i ]		47178	1					
ANR	50087	Identifier	newdirs		47178	0					
ANR	50088	Identifier	i		47178	1					
ANR	50089	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		47178	4					
ANR	50090	ForInit	i = OLD ;	965:7:27409:27416	47178	0	True				
ANR	50091	AssignmentExpression	i = OLD		47178	0		=			
ANR	50092	Identifier	i		47178	0					
ANR	50093	Identifier	OLD		47178	1					
ANR	50094	Condition	i <= INDEX	965:17:27419:27428	47178	1	True				
ANR	50095	RelationalExpression	i <= INDEX		47178	0		<=			
ANR	50096	Identifier	i		47178	0					
ANR	50097	Identifier	INDEX		47178	1					
ANR	50098	PostIncDecOperationExpression	i ++	965:30:27432:27434	47178	2	True				
ANR	50099	Identifier	i		47178	0					
ANR	50100	IncDec	++		47178	1					
ANR	50101	IfStatement	if ( p_name [ i ] )		47178	3					
ANR	50102	Condition	p_name [ i ]	966:8:27445:27453	47178	0	True				
ANR	50103	ArrayIndexing	p_name [ i ]		47178	0					
ANR	50104	Identifier	p_name		47178	0					
ANR	50105	Identifier	i		47178	1					
ANR	50106	ExpressionStatement	distance_from_minimum [ i ] = newdirs [ i ] - newdirs_min	967:6:27462:27513	47178	1	True				
ANR	50107	AssignmentExpression	distance_from_minimum [ i ] = newdirs [ i ] - newdirs_min		47178	0		=			
ANR	50108	ArrayIndexing	distance_from_minimum [ i ]		47178	0					
ANR	50109	Identifier	distance_from_minimum		47178	0					
ANR	50110	Identifier	i		47178	1					
ANR	50111	AdditiveExpression	newdirs [ i ] - newdirs_min		47178	1		-			
ANR	50112	ArrayIndexing	newdirs [ i ]		47178	0					
ANR	50113	Identifier	newdirs		47178	0					
ANR	50114	Identifier	i		47178	1					
ANR	50115	Identifier	newdirs_min		47178	1					
ANR	50116	ExpressionStatement	"i = best_name ( p_name , distance_from_minimum )"	970:2:27589:27634	47178	5	True				
ANR	50117	AssignmentExpression	"i = best_name ( p_name , distance_from_minimum )"		47178	0		=			
ANR	50118	Identifier	i		47178	0					
ANR	50119	CallExpression	"best_name ( p_name , distance_from_minimum )"		47178	1					
ANR	50120	Callee	best_name		47178	0					
ANR	50121	Identifier	best_name		47178	0					
ANR	50122	ArgumentList	p_name		47178	1					
ANR	50123	Argument	p_name		47178	0					
ANR	50124	Identifier	p_name		47178	0					
ANR	50125	Argument	distance_from_minimum		47178	1					
ANR	50126	Identifier	distance_from_minimum		47178	0					
ANR	50127	IfStatement	if ( ( pch_rename ( ) || pch_copy ( ) ) && ! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) ) )		47178	36					
ANR	50128	Condition	( pch_rename ( ) || pch_copy ( ) ) && ! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )	975:8:27667:27873	47178	0	True				
ANR	50129	AndExpression	( pch_rename ( ) || pch_copy ( ) ) && ! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )		47178	0		&&			
ANR	50130	OrExpression	pch_rename ( ) || pch_copy ( )		47178	0		||			
ANR	50131	CallExpression	pch_rename ( )		47178	0					
ANR	50132	Callee	pch_rename		47178	0					
ANR	50133	Identifier	pch_rename		47178	0					
ANR	50134	ArgumentList			47178	1					
ANR	50135	CallExpression	pch_copy ( )		47178	1					
ANR	50136	Callee	pch_copy		47178	0					
ANR	50137	Identifier	pch_copy		47178	0					
ANR	50138	ArgumentList			47178	1					
ANR	50139	AndExpression	! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )		47178	1		&&			
ANR	50140	UnaryOperationExpression	! inname		47178	0					
ANR	50141	UnaryOperator	!		47178	0					
ANR	50142	Identifier	inname		47178	1					
ANR	50143	UnaryOperationExpression	! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )		47178	1					
ANR	50144	UnaryOperator	!		47178	0					
ANR	50145	AndExpression	( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		47178	1		&&			
ANR	50146	OrExpression	i == OLD || i == NEW		47178	0		||			
ANR	50147	EqualityExpression	i == OLD		47178	0		==			
ANR	50148	Identifier	i		47178	0					
ANR	50149	Identifier	OLD		47178	1					
ANR	50150	EqualityExpression	i == NEW		47178	1		==			
ANR	50151	Identifier	i		47178	0					
ANR	50152	Identifier	NEW		47178	1					
ANR	50153	AndExpression	p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		47178	1		&&			
ANR	50154	ArrayIndexing	p_name [ reverse ]		47178	0					
ANR	50155	Identifier	p_name		47178	0					
ANR	50156	Identifier	reverse		47178	1					
ANR	50157	AndExpression	p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		47178	1		&&			
ANR	50158	ArrayIndexing	p_name [ ! reverse ]		47178	0					
ANR	50159	Identifier	p_name		47178	0					
ANR	50160	UnaryOperationExpression	! reverse		47178	1					
ANR	50161	UnaryOperator	!		47178	0					
ANR	50162	Identifier	reverse		47178	1					
ANR	50163	AndExpression	name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		47178	1		&&			
ANR	50164	CallExpression	name_is_valid ( p_name [ reverse ] )		47178	0					
ANR	50165	Callee	name_is_valid		47178	0					
ANR	50166	Identifier	name_is_valid		47178	0					
ANR	50167	ArgumentList	p_name [ reverse ]		47178	1					
ANR	50168	Argument	p_name [ reverse ]		47178	0					
ANR	50169	ArrayIndexing	p_name [ reverse ]		47178	0					
ANR	50170	Identifier	p_name		47178	0					
ANR	50171	Identifier	reverse		47178	1					
ANR	50172	CallExpression	name_is_valid ( p_name [ ! reverse ] )		47178	1					
ANR	50173	Callee	name_is_valid		47178	0					
ANR	50174	Identifier	name_is_valid		47178	0					
ANR	50175	ArgumentList	p_name [ ! reverse ]		47178	1					
ANR	50176	Argument	p_name [ ! reverse ]		47178	0					
ANR	50177	ArrayIndexing	p_name [ ! reverse ]		47178	0					
ANR	50178	Identifier	p_name		47178	0					
ANR	50179	UnaryOperationExpression	! reverse		47178	1					
ANR	50180	UnaryOperator	!		47178	0					
ANR	50181	Identifier	reverse		47178	1					
ANR	50182	CompoundStatement		555:6:15477:15477	47178	1					
ANR	50183	ExpressionStatement	"say ( ""Cannot %s file without two valid file names\\n"" , pch_rename ( ) ? ""rename"" : ""copy"" )"	982:1:27885:27973	47178	0	True				
ANR	50184	CallExpression	"say ( ""Cannot %s file without two valid file names\\n"" , pch_rename ( ) ? ""rename"" : ""copy"" )"		47178	0					
ANR	50185	Callee	say		47178	0					
ANR	50186	Identifier	say		47178	0					
ANR	50187	ArgumentList	"""Cannot %s file without two valid file names\\n"""		47178	1					
ANR	50188	Argument	"""Cannot %s file without two valid file names\\n"""		47178	0					
ANR	50189	PrimaryExpression	"""Cannot %s file without two valid file names\\n"""		47178	0					
ANR	50190	Argument	"pch_rename ( ) ? ""rename"" : ""copy"""		47178	1					
ANR	50191	ConditionalExpression	"pch_rename ( ) ? ""rename"" : ""copy"""		47178	0					
ANR	50192	Condition	pch_rename ( )		47178	0					
ANR	50193	CallExpression	pch_rename ( )		47178	0					
ANR	50194	Callee	pch_rename		47178	0					
ANR	50195	Identifier	pch_rename		47178	0					
ANR	50196	ArgumentList			47178	1					
ANR	50197	PrimaryExpression	"""rename"""		47178	1					
ANR	50198	PrimaryExpression	"""copy"""		47178	2					
ANR	50199	ExpressionStatement	skip_rest_of_patch = true	983:1:27976:28001	47178	1	True				
ANR	50200	AssignmentExpression	skip_rest_of_patch = true		47178	0		=			
ANR	50201	Identifier	skip_rest_of_patch		47178	0					
ANR	50202	Identifier	true		47178	1					
ANR	50203	IfStatement	if ( i == NONE )		47178	37					
ANR	50204	Condition	i == NONE	986:8:28020:28028	47178	0	True				
ANR	50205	EqualityExpression	i == NONE		47178	0		==			
ANR	50206	Identifier	i		47178	0					
ANR	50207	Identifier	NONE		47178	1					
ANR	50208	CompoundStatement		561:6:15632:15632	47178	1					
ANR	50209	IfStatement	if ( inname )		47178	0					
ANR	50210	Condition	inname	988:5:28044:28049	47178	0	True				
ANR	50211	Identifier	inname		47178	0					
ANR	50212	CompoundStatement		563:3:15650:15650	47178	1					
ANR	50213	ExpressionStatement	"inerrno = stat_file ( inname , & instat )"	990:5:28062:28099	47178	0	True				
ANR	50214	AssignmentExpression	"inerrno = stat_file ( inname , & instat )"		47178	0		=			
ANR	50215	Identifier	inerrno		47178	0					
ANR	50216	CallExpression	"stat_file ( inname , & instat )"		47178	1					
ANR	50217	Callee	stat_file		47178	0					
ANR	50218	Identifier	stat_file		47178	0					
ANR	50219	ArgumentList	inname		47178	1					
ANR	50220	Argument	inname		47178	0					
ANR	50221	Identifier	inname		47178	0					
ANR	50222	Argument	& instat		47178	1					
ANR	50223	UnaryOperationExpression	& instat		47178	0					
ANR	50224	UnaryOperator	&		47178	0					
ANR	50225	Identifier	instat		47178	1					
ANR	50226	IfStatement	if ( inerrno || ( instat . st_mode & S_IFMT ) == file_type )		47178	1					
ANR	50227	Condition	inerrno || ( instat . st_mode & S_IFMT ) == file_type	991:9:28110:28158	47178	0	True				
ANR	50228	OrExpression	inerrno || ( instat . st_mode & S_IFMT ) == file_type		47178	0		||			
ANR	50229	Identifier	inerrno		47178	0					
ANR	50230	EqualityExpression	( instat . st_mode & S_IFMT ) == file_type		47178	1		==			
ANR	50231	BitAndExpression	instat . st_mode & S_IFMT		47178	0		&			
ANR	50232	MemberAccess	instat . st_mode		47178	0					
ANR	50233	Identifier	instat		47178	0					
ANR	50234	Identifier	st_mode		47178	1					
ANR	50235	Identifier	S_IFMT		47178	1					
ANR	50236	Identifier	file_type		47178	1					
ANR	50237	ExpressionStatement	"maybe_reverse ( inname , inerrno , inerrno || instat . st_size == 0 )"	992:7:28168:28231	47178	1	True				
ANR	50238	CallExpression	"maybe_reverse ( inname , inerrno , inerrno || instat . st_size == 0 )"		47178	0					
ANR	50239	Callee	maybe_reverse		47178	0					
ANR	50240	Identifier	maybe_reverse		47178	0					
ANR	50241	ArgumentList	inname		47178	1					
ANR	50242	Argument	inname		47178	0					
ANR	50243	Identifier	inname		47178	0					
ANR	50244	Argument	inerrno		47178	1					
ANR	50245	Identifier	inerrno		47178	0					
ANR	50246	Argument	inerrno || instat . st_size == 0		47178	2					
ANR	50247	OrExpression	inerrno || instat . st_size == 0		47178	0		||			
ANR	50248	Identifier	inerrno		47178	0					
ANR	50249	EqualityExpression	instat . st_size == 0		47178	1		==			
ANR	50250	MemberAccess	instat . st_size		47178	0					
ANR	50251	Identifier	instat		47178	0					
ANR	50252	Identifier	st_size		47178	1					
ANR	50253	PrimaryExpression	0		47178	1					
ANR	50254	ElseStatement	else		47178	0					
ANR	50255	ExpressionStatement	inerrno = - 1	995:10:28254:28266	47178	0	True				
ANR	50256	AssignmentExpression	inerrno = - 1		47178	0		=			
ANR	50257	Identifier	inerrno		47178	0					
ANR	50258	UnaryOperationExpression	- 1		47178	1					
ANR	50259	UnaryOperator	-		47178	0					
ANR	50260	PrimaryExpression	1		47178	1					
ANR	50261	ElseStatement	else		47178	0					
ANR	50262	CompoundStatement		572:6:15886:15886	47178	0					
ANR	50263	ExpressionStatement	inname = xstrdup ( p_name [ i ] )	999:1:28294:28322	47178	0	True				
ANR	50264	AssignmentExpression	inname = xstrdup ( p_name [ i ] )		47178	0		=			
ANR	50265	Identifier	inname		47178	0					
ANR	50266	CallExpression	xstrdup ( p_name [ i ] )		47178	1					
ANR	50267	Callee	xstrdup		47178	0					
ANR	50268	Identifier	xstrdup		47178	0					
ANR	50269	ArgumentList	p_name [ i ]		47178	1					
ANR	50270	Argument	p_name [ i ]		47178	0					
ANR	50271	ArrayIndexing	p_name [ i ]		47178	0					
ANR	50272	Identifier	p_name		47178	0					
ANR	50273	Identifier	i		47178	1					
ANR	50274	ExpressionStatement	inerrno = stat_errno [ i ]	1000:1:28325:28348	47178	1	True				
ANR	50275	AssignmentExpression	inerrno = stat_errno [ i ]		47178	0		=			
ANR	50276	Identifier	inerrno		47178	0					
ANR	50277	ArrayIndexing	stat_errno [ i ]		47178	1					
ANR	50278	Identifier	stat_errno		47178	0					
ANR	50279	Identifier	i		47178	1					
ANR	50280	ExpressionStatement	invc = version_controlled [ i ]	1001:1:28351:28379	47178	2	True				
ANR	50281	AssignmentExpression	invc = version_controlled [ i ]		47178	0		=			
ANR	50282	Identifier	invc		47178	0					
ANR	50283	ArrayIndexing	version_controlled [ i ]		47178	1					
ANR	50284	Identifier	version_controlled		47178	0					
ANR	50285	Identifier	i		47178	1					
ANR	50286	ExpressionStatement	instat = st [ i ]	1002:1:28382:28396	47178	3	True				
ANR	50287	AssignmentExpression	instat = st [ i ]		47178	0		=			
ANR	50288	Identifier	instat		47178	0					
ANR	50289	ArrayIndexing	st [ i ]		47178	1					
ANR	50290	Identifier	st		47178	0					
ANR	50291	Identifier	i		47178	1					
ANR	50292	ReturnStatement	return retval ;	1005:4:28411:28424	47178	38	True				
ANR	50293	Identifier	retval		47178	0					
ANR	50294	ReturnType	static enum diff		47178	1					
ANR	50295	Identifier	intuit_diff_type		47178	2					
ANR	50296	ParameterList	"bool need_header , mode_t * p_file_type"		47178	3					
ANR	50297	Parameter	bool need_header	426:18:12365:12380	47178	0	True				
ANR	50298	ParameterType	bool		47178	0					
ANR	50299	Identifier	need_header		47178	1					
ANR	50300	Parameter	mode_t * p_file_type	426:36:12383:12401	47178	1	True				
ANR	50301	ParameterType	mode_t *		47178	0					
ANR	50302	Identifier	p_file_type		47178	1					
ANR	50303	CFGEntryNode	ENTRY		47178		True				
ANR	50304	CFGExitNode	EXIT		47178		True				
ANR	50305	InfiniteForNode	true		47178		True				
ANR	50306	Symbol	* v		47178						
ANR	50307	Symbol	* invalid_names		47178						
ANR	50308	Symbol	chars_read		47178						
ANR	50309	Symbol	* reverse		47178						
ANR	50310	Symbol	p_newfirst		47178						
ANR	50311	Symbol	* st		47178						
ANR	50312	Symbol	p_sline		47178						
ANR	50313	Symbol	OLD		47178						
ANR	50314	Symbol	p_indent		47178						
ANR	50315	Symbol	inerrno		47178						
ANR	50316	Symbol	ISDIGIT		47178						
ANR	50317	Symbol	* nope		47178						
ANR	50318	Symbol	S_IFMT		47178						
ANR	50319	Symbol	first_ed_command_letter		47178						
ANR	50320	Symbol	instat . st_mode		47178						
ANR	50321	Symbol	pget_line		47178						
ANR	50322	Symbol	readonly		47178						
ANR	50323	Symbol	NEW_CONTEXT_DIFF		47178						
ANR	50324	Symbol	p_timestamp [ OLD ] . tv_sec		47178						
ANR	50325	Symbol	fetchmode		47178						
ANR	50326	Symbol	strEQ		47178						
ANR	50327	Symbol	* chars_read		47178						
ANR	50328	Symbol	* p_timestr		47178						
ANR	50329	Symbol	strnEQ		47178						
ANR	50330	Symbol	NONE		47178						
ANR	50331	Symbol	parse_name		47178						
ANR	50332	Symbol	file_tell		47178						
ANR	50333	Symbol	ARRAY_SIZE		47178						
ANR	50334	Symbol	* buf		47178						
ANR	50335	Symbol	NORMAL_DIFF		47178						
ANR	50336	Symbol	newdirs		47178						
ANR	50337	Symbol	pch_rename		47178						
ANR	50338	Symbol	previous_line		47178						
ANR	50339	Symbol	oldc		47178						
ANR	50340	Symbol	& getbuf		47178						
ANR	50341	Symbol	p_timestamp [ NEW ] . tv_sec		47178						
ANR	50342	Symbol	* ( s - 1 )		47178						
ANR	50343	Symbol	name_is_valid		47178						
ANR	50344	Symbol	st [ i ] . st_mode		47178						
ANR	50345	Symbol	pfp		47178						
ANR	50346	Symbol	new_file_type		47178						
ANR	50347	Symbol	p_input_line		47178						
ANR	50348	Symbol	nope		47178						
ANR	50349	Symbol	saved_p_bline		47178						
ANR	50350	Symbol	skip_hex_digits		47178						
ANR	50351	Symbol	* OLD		47178						
ANR	50352	Symbol	* distance_from_minimum		47178						
ANR	50353	Symbol	format_linenum		47178						
ANR	50354	Symbol	* newdirs		47178						
ANR	50355	Symbol	stars_last_line		47178						
ANR	50356	Symbol	p_says_nonexistent		47178						
ANR	50357	Symbol	INT_MAX		47178						
ANR	50358	Symbol	p_timestr		47178						
ANR	50359	Symbol	* p_timestamp		47178						
ANR	50360	Symbol	inname		47178						
ANR	50361	Symbol	timestamp		47178						
ANR	50362	Symbol	this_line		47178						
ANR	50363	Symbol	st		47178						
ANR	50364	Symbol	* p_sha1		47178						
ANR	50365	Symbol	& diffbuf		47178						
ANR	50366	Symbol	diff_type		47178						
ANR	50367	Symbol	xstrdup		47178						
ANR	50368	Symbol	maybe_reverse		47178						
ANR	50369	Symbol	i		47178						
ANR	50370	Symbol	ENOENT		47178						
ANR	50371	Symbol	p_copy		47178						
ANR	50372	Symbol	reverse		47178						
ANR	50373	Symbol	extended_headers		47178						
ANR	50374	Symbol	cs		47178						
ANR	50375	Symbol	p_repl_lines		47178						
ANR	50376	Symbol	buf		47178						
ANR	50377	Symbol	s		47178						
ANR	50378	Symbol	t		47178						
ANR	50379	Symbol	u		47178						
ANR	50380	Symbol	numbuf		47178						
ANR	50381	Symbol	ti		47178						
ANR	50382	Symbol	p_name		47178						
ANR	50383	Symbol	v		47178						
ANR	50384	Symbol	version_get		47178						
ANR	50385	Symbol	skip_rest_of_patch		47178						
ANR	50386	Symbol	~7		47178						
ANR	50387	Symbol	NEW		47178						
ANR	50388	Symbol	prefix_components		47178						
ANR	50389	Symbol	instat		47178						
ANR	50390	Symbol	ed_command_letter		47178						
ANR	50391	Symbol	NO_DIFF		47178						
ANR	50392	Symbol	* p_mode		47178						
ANR	50393	Symbol	need_header		47178						
ANR	50394	Symbol	indent_last_line		47178						
ANR	50395	Symbol	* i0		47178						
ANR	50396	Symbol	* version_controlled		47178						
ANR	50397	Symbol	p_strip_trailing_cr		47178						
ANR	50398	Symbol	first_command_line		47178						
ANR	50399	Symbol	version_controlled		47178						
ANR	50400	Symbol	file_type		47178						
ANR	50401	Symbol	* p_file_type		47178						
ANR	50402	Symbol	& instat		47178						
ANR	50403	Symbol	INDEX		47178						
ANR	50404	Symbol	GIT_BINARY_DIFF		47178						
ANR	50405	Symbol	posixly_correct		47178						
ANR	50406	Symbol	fcl_line		47178						
ANR	50407	Symbol	p_mode		47178						
ANR	50408	Symbol	p_timestamp		47178						
ANR	50409	Symbol	strcmp		47178						
ANR	50410	Symbol	version_controller		47178						
ANR	50411	Symbol	NULL		47178						
ANR	50412	Symbol	last_line_was_command		47178						
ANR	50413	Symbol	invc		47178						
ANR	50414	Symbol	diffbuf		47178						
ANR	50415	Symbol	p_git_diff		47178						
ANR	50416	Symbol	p_bline		47178						
ANR	50417	Symbol	S_IFREG		47178						
ANR	50418	Symbol	retval		47178						
ANR	50419	Symbol	revision		47178						
ANR	50420	Symbol	* stat_errno		47178						
ANR	50421	Symbol	p_start		47178						
ANR	50422	Symbol	patch_get		47178						
ANR	50423	Symbol	* INDEX		47178						
ANR	50424	Symbol	strip_trailing_cr		47178						
ANR	50425	Symbol	* ( v = skip_spaces ( v ) )		47178						
ANR	50426	Symbol	DELETE_LATER		47178						
ANR	50427	Symbol	true		47178						
ANR	50428	Symbol	sha1_says_nonexistent		47178						
ANR	50429	Symbol	stat_errno		47178						
ANR	50430	Symbol	timestamp . tv_sec		47178						
ANR	50431	Symbol	instat . st_size		47178						
ANR	50432	Symbol	UNI_DIFF		47178						
ANR	50433	Symbol	newdirs_min		47178						
ANR	50434	Symbol	saved_p_base		47178						
ANR	50435	Symbol	st [ i ] . st_size		47178						
ANR	50436	Symbol	indent		47178						
ANR	50437	Symbol	p_base		47178						
ANR	50438	Symbol	outfile		47178						
ANR	50439	Symbol	best_name		47178						
ANR	50440	Symbol	invalid_names		47178						
ANR	50441	Symbol	p_rename		47178						
ANR	50442	Symbol	p_file_type		47178						
ANR	50443	Symbol	* NEW		47178						
ANR	50444	Symbol	* p_says_nonexistent		47178						
ANR	50445	Symbol	getbuf		47178						
ANR	50446	Symbol	ED_DIFF		47178						
ANR	50447	Symbol	CONTEXT_DIFF		47178						
ANR	50448	Symbol	stat_file		47178						
ANR	50449	Symbol	* p_copy		47178						
ANR	50450	Symbol	SEEK_SET		47178						
ANR	50451	Symbol	get_ed_command_letter		47178						
ANR	50452	Symbol	lookup_file_id		47178						
ANR	50453	Symbol	distance_from_minimum		47178						
ANR	50454	Symbol	strippath		47178						
ANR	50455	Symbol	skip_spaces		47178						
ANR	50456	Symbol	i0		47178						
ANR	50457	Symbol	false		47178						
ANR	50458	Symbol	this_is_a_command		47178						
ANR	50459	Symbol	pch_copy		47178						
ANR	50460	Symbol	stars_this_line		47178						
ANR	50461	Symbol	* i		47178						
ANR	50462	Symbol	another_hunk		47178						
ANR	50463	Symbol	* p_name		47178						
ANR	50464	Symbol	& timestamp		47178						
ANR	50465	Symbol	* p_rename		47178						
ANR	50466	Symbol	p_sha1		47178						
ANR	50467	Symbol	p_rfc934_nesting		47178						
ANR	50468	Symbol	& u		47178						
ANR	50469	Symbol	ISSPACE		47178						
ANR	50470	Symbol	* s		47178						
ANR	50471	Symbol	* NONE		47178						
ANR	50472	Symbol	* t		47178						
ANR	50473	Symbol	* u		47178						
ANR	50474	Function	prefix_components	1010:0:28547:29033							
ANR	50475	FunctionDef	"prefix_components (char * filename , bool checkdirs)"		50474	0					
ANR	50476	CompoundStatement		1012:0:28609:29033	50474	0					
ANR	50477	IdentifierDeclStatement	int count = 0 ;	1013:2:28613:28626	50474	0	True				
ANR	50478	IdentifierDecl	count = 0		50474	0					
ANR	50479	IdentifierDeclType	int		50474	0					
ANR	50480	Identifier	count		50474	1					
ANR	50481	AssignmentExpression	count = 0		50474	2		=			
ANR	50482	Identifier	count		50474	0					
ANR	50483	PrimaryExpression	0		50474	1					
ANR	50484	IdentifierDeclStatement	struct stat stat_buf ;	1014:2:28630:28650	50474	1	True				
ANR	50485	IdentifierDecl	stat_buf		50474	0					
ANR	50486	IdentifierDeclType	struct stat		50474	0					
ANR	50487	Identifier	stat_buf		50474	1					
ANR	50488	IdentifierDeclStatement	int stat_result ;	1015:2:28654:28669	50474	2	True				
ANR	50489	IdentifierDecl	stat_result		50474	0					
ANR	50490	IdentifierDeclType	int		50474	0					
ANR	50491	Identifier	stat_result		50474	1					
ANR	50492	IdentifierDeclStatement	char * f = filename + FILE_SYSTEM_PREFIX_LEN ( filename ) ;	1016:2:28673:28727	50474	3	True				
ANR	50493	IdentifierDecl	* f = filename + FILE_SYSTEM_PREFIX_LEN ( filename )		50474	0					
ANR	50494	IdentifierDeclType	char *		50474	0					
ANR	50495	Identifier	f		50474	1					
ANR	50496	AssignmentExpression	* f = filename + FILE_SYSTEM_PREFIX_LEN ( filename )		50474	2		=			
ANR	50497	Identifier	f		50474	0					
ANR	50498	AdditiveExpression	filename + FILE_SYSTEM_PREFIX_LEN ( filename )		50474	1		+			
ANR	50499	Identifier	filename		50474	0					
ANR	50500	CallExpression	FILE_SYSTEM_PREFIX_LEN ( filename )		50474	1					
ANR	50501	Callee	FILE_SYSTEM_PREFIX_LEN		50474	0					
ANR	50502	Identifier	FILE_SYSTEM_PREFIX_LEN		50474	0					
ANR	50503	ArgumentList	filename		50474	1					
ANR	50504	Argument	filename		50474	0					
ANR	50505	Identifier	filename		50474	0					
ANR	50506	IfStatement	if ( * f )		50474	4					
ANR	50507	Condition	* f	1018:6:28736:28737	50474	0	True				
ANR	50508	UnaryOperationExpression	* f		50474	0					
ANR	50509	UnaryOperator	*		50474	0					
ANR	50510	Identifier	f		50474	1					
ANR	50511	WhileStatement	while ( * ++ f )		50474	1					
ANR	50512	Condition	* ++ f	1019:11:28751:28754	50474	0	True				
ANR	50513	UnaryOperationExpression	* ++ f		50474	0					
ANR	50514	UnaryOperator	*		50474	0					
ANR	50515	UnaryExpression	++ f		50474	1					
ANR	50516	IncDec	++		50474	0					
ANR	50517	Identifier	f		50474	1					
ANR	50518	IfStatement	if ( ISSLASH ( f [ 0 ] ) && ! ISSLASH ( f [ - 1 ] ) )		50474	1					
ANR	50519	Condition	ISSLASH ( f [ 0 ] ) && ! ISSLASH ( f [ - 1 ] )	1020:10:28767:28801	50474	0	True				
ANR	50520	AndExpression	ISSLASH ( f [ 0 ] ) && ! ISSLASH ( f [ - 1 ] )		50474	0		&&			
ANR	50521	CallExpression	ISSLASH ( f [ 0 ] )		50474	0					
ANR	50522	Callee	ISSLASH		50474	0					
ANR	50523	Identifier	ISSLASH		50474	0					
ANR	50524	ArgumentList	f [ 0 ]		50474	1					
ANR	50525	Argument	f [ 0 ]		50474	0					
ANR	50526	ArrayIndexing	f [ 0 ]		50474	0					
ANR	50527	Identifier	f		50474	0					
ANR	50528	PrimaryExpression	0		50474	1					
ANR	50529	UnaryOperationExpression	! ISSLASH ( f [ - 1 ] )		50474	1					
ANR	50530	UnaryOperator	!		50474	0					
ANR	50531	CallExpression	ISSLASH ( f [ - 1 ] )		50474	1					
ANR	50532	Callee	ISSLASH		50474	0					
ANR	50533	Identifier	ISSLASH		50474	0					
ANR	50534	ArgumentList	f [ - 1 ]		50474	1					
ANR	50535	Argument	f [ - 1 ]		50474	0					
ANR	50536	ArrayIndexing	f [ - 1 ]		50474	0					
ANR	50537	Identifier	f		50474	0					
ANR	50538	UnaryOperationExpression	- 1		50474	1					
ANR	50539	UnaryOperator	-		50474	0					
ANR	50540	PrimaryExpression	1		50474	1					
ANR	50541	CompoundStatement		10:1:195:195	50474	1					
ANR	50542	IfStatement	if ( checkdirs )		50474	0					
ANR	50543	Condition	checkdirs	1022:7:28814:28822	50474	0	True				
ANR	50544	Identifier	checkdirs		50474	0					
ANR	50545	CompoundStatement		12:5:220:220	50474	1					
ANR	50546	ExpressionStatement	* f = '\\0'	1024:7:28839:28848	50474	0	True				
ANR	50547	AssignmentExpression	* f = '\\0'		50474	0		=			
ANR	50548	UnaryOperationExpression	* f		50474	0					
ANR	50549	UnaryOperator	*		50474	0					
ANR	50550	Identifier	f		50474	1					
ANR	50551	PrimaryExpression	'\\0'		50474	1					
ANR	50552	ExpressionStatement	"stat_result = safe_stat ( filename , & stat_buf )"	1025:7:28857:28902	50474	1	True				
ANR	50553	AssignmentExpression	"stat_result = safe_stat ( filename , & stat_buf )"		50474	0		=			
ANR	50554	Identifier	stat_result		50474	0					
ANR	50555	CallExpression	"safe_stat ( filename , & stat_buf )"		50474	1					
ANR	50556	Callee	safe_stat		50474	0					
ANR	50557	Identifier	safe_stat		50474	0					
ANR	50558	ArgumentList	filename		50474	1					
ANR	50559	Argument	filename		50474	0					
ANR	50560	Identifier	filename		50474	0					
ANR	50561	Argument	& stat_buf		50474	1					
ANR	50562	UnaryOperationExpression	& stat_buf		50474	0					
ANR	50563	UnaryOperator	&		50474	0					
ANR	50564	Identifier	stat_buf		50474	1					
ANR	50565	ExpressionStatement	* f = '/'	1026:7:28911:28919	50474	2	True				
ANR	50566	AssignmentExpression	* f = '/'		50474	0		=			
ANR	50567	UnaryOperationExpression	* f		50474	0					
ANR	50568	UnaryOperator	*		50474	0					
ANR	50569	Identifier	f		50474	1					
ANR	50570	PrimaryExpression	'/'		50474	1					
ANR	50571	IfStatement	if ( ! ( stat_result == 0 && S_ISDIR ( stat_buf . st_mode ) ) )		50474	3					
ANR	50572	Condition	! ( stat_result == 0 && S_ISDIR ( stat_buf . st_mode ) )	1027:11:28932:28981	50474	0	True				
ANR	50573	UnaryOperationExpression	! ( stat_result == 0 && S_ISDIR ( stat_buf . st_mode ) )		50474	0					
ANR	50574	UnaryOperator	!		50474	0					
ANR	50575	AndExpression	stat_result == 0 && S_ISDIR ( stat_buf . st_mode )		50474	1		&&			
ANR	50576	EqualityExpression	stat_result == 0		50474	0		==			
ANR	50577	Identifier	stat_result		50474	0					
ANR	50578	PrimaryExpression	0		50474	1					
ANR	50579	CallExpression	S_ISDIR ( stat_buf . st_mode )		50474	1					
ANR	50580	Callee	S_ISDIR		50474	0					
ANR	50581	Identifier	S_ISDIR		50474	0					
ANR	50582	ArgumentList	stat_buf . st_mode		50474	1					
ANR	50583	Argument	stat_buf . st_mode		50474	0					
ANR	50584	MemberAccess	stat_buf . st_mode		50474	0					
ANR	50585	Identifier	stat_buf		50474	0					
ANR	50586	Identifier	st_mode		50474	1					
ANR	50587	BreakStatement	break ;	1028:2:28986:28991	50474	1	True				
ANR	50588	ExpressionStatement	count ++	1031:3:29004:29011	50474	1	True				
ANR	50589	PostIncDecOperationExpression	count ++		50474	0					
ANR	50590	Identifier	count		50474	0					
ANR	50591	IncDec	++		50474	1					
ANR	50592	ReturnStatement	return count ;	1034:2:29019:29031	50474	5	True				
ANR	50593	Identifier	count		50474	0					
ANR	50594	ReturnType	static int		50474	1					
ANR	50595	Identifier	prefix_components		50474	2					
ANR	50596	ParameterList	"char * filename , bool checkdirs"		50474	3					
ANR	50597	Parameter	char * filename	1011:19:28577:28590	50474	0	True				
ANR	50598	ParameterType	char *		50474	0					
ANR	50599	Identifier	filename		50474	1					
ANR	50600	Parameter	bool checkdirs	1011:35:28593:28606	50474	1	True				
ANR	50601	ParameterType	bool		50474	0					
ANR	50602	Identifier	checkdirs		50474	1					
ANR	50603	CFGEntryNode	ENTRY		50474		True				
ANR	50604	CFGExitNode	EXIT		50474		True				
ANR	50605	Symbol	FILE_SYSTEM_PREFIX_LEN		50474						
ANR	50606	Symbol	f		50474						
ANR	50607	Symbol	& stat_buf		50474						
ANR	50608	Symbol	checkdirs		50474						
ANR	50609	Symbol	stat_buf		50474						
ANR	50610	Symbol	count		50474						
ANR	50611	Symbol	ISSLASH		50474						
ANR	50612	Symbol	* f		50474						
ANR	50613	Symbol	filename		50474						
ANR	50614	Symbol	safe_stat		50474						
ANR	50615	Symbol	stat_buf . st_mode		50474						
ANR	50616	Symbol	S_ISDIR		50474						
ANR	50617	Symbol	* ++ f		50474						
ANR	50618	Symbol	stat_result		50474						
ANR	50619	DeclStmt									
ANR	50620	Decl							enum nametype	enum nametype	i
ANR	50621	DeclStmt									
ANR	50622	Decl							int	int [ 3 ]	components
ANR	50623	DeclStmt									
ANR	50624	Decl							int	int	components_min
ANR	50625	DeclStmt									
ANR	50626	Decl							size_t	size_t [ 3 ]	basename_len
ANR	50627	DeclStmt									
ANR	50628	Decl							size_t	size_t	basename_len_min
ANR	50629	DeclStmt									
ANR	50630	Decl							size_t	size_t [ 3 ]	len
ANR	50631	DeclStmt									
ANR	50632	Decl							size_t	size_t	len_min
ANR	50633	Function	next_intuit_at	1087:0:30407:30522							
ANR	50634	FunctionDef	"next_intuit_at (file_offset file_pos , lin file_line)"		50633	0					
ANR	50635	CompoundStatement		1089:0:30472:30522	50633	0					
ANR	50636	ExpressionStatement	p_base = file_pos	1090:4:30478:30495	50633	0	True				
ANR	50637	AssignmentExpression	p_base = file_pos		50633	0		=			
ANR	50638	Identifier	p_base		50633	0					
ANR	50639	Identifier	file_pos		50633	1					
ANR	50640	ExpressionStatement	p_bline = file_line	1091:4:30501:30520	50633	1	True				
ANR	50641	AssignmentExpression	p_bline = file_line		50633	0		=			
ANR	50642	Identifier	p_bline		50633	0					
ANR	50643	Identifier	file_line		50633	1					
ANR	50644	ReturnType	static void		50633	1					
ANR	50645	Identifier	next_intuit_at		50633	2					
ANR	50646	ParameterList	"file_offset file_pos , lin file_line"		50633	3					
ANR	50647	Parameter	file_offset file_pos	1088:16:30435:30454	50633	0	True				
ANR	50648	ParameterType	file_offset		50633	0					
ANR	50649	Identifier	file_pos		50633	1					
ANR	50650	Parameter	lin file_line	1088:38:30457:30469	50633	1	True				
ANR	50651	ParameterType	lin		50633	0					
ANR	50652	Identifier	file_line		50633	1					
ANR	50653	CFGEntryNode	ENTRY		50633		True				
ANR	50654	CFGExitNode	EXIT		50633		True				
ANR	50655	Symbol	file_line		50633						
ANR	50656	Symbol	p_base		50633						
ANR	50657	Symbol	p_bline		50633						
ANR	50658	Symbol	file_pos		50633						
ANR	50659	Function	skip_to	1096:0:30588:31201							
ANR	50660	FunctionDef	"skip_to (file_offset file_pos , lin file_line)"		50659	0					
ANR	50661	CompoundStatement		1098:0:30646:31201	50659	0					
ANR	50662	IdentifierDeclStatement	FILE * i = pfp ;	1099:4:30652:30665	50659	0	True				
ANR	50663	IdentifierDecl	* i = pfp		50659	0					
ANR	50664	IdentifierDeclType	FILE *		50659	0					
ANR	50665	Identifier	i		50659	1					
ANR	50666	AssignmentExpression	* i = pfp		50659	2		=			
ANR	50667	Identifier	pfp		50659	0					
ANR	50668	Identifier	pfp		50659	1					
ANR	50669	IdentifierDeclStatement	FILE * o = stdout ;	1100:4:30671:30687	50659	1	True				
ANR	50670	IdentifierDecl	* o = stdout		50659	0					
ANR	50671	IdentifierDeclType	FILE *		50659	0					
ANR	50672	Identifier	o		50659	1					
ANR	50673	AssignmentExpression	* o = stdout		50659	2		=			
ANR	50674	Identifier	stdout		50659	0					
ANR	50675	Identifier	stdout		50659	1					
ANR	50676	IdentifierDeclStatement	int c ;	1101:4:30693:30698	50659	2	True				
ANR	50677	IdentifierDecl	c		50659	0					
ANR	50678	IdentifierDeclType	int		50659	0					
ANR	50679	Identifier	c		50659	1					
ANR	50680	ExpressionStatement	assert ( p_base <= file_pos )	1103:4:30705:30731	50659	3	True				
ANR	50681	CallExpression	assert ( p_base <= file_pos )		50659	0					
ANR	50682	Callee	assert		50659	0					
ANR	50683	Identifier	assert		50659	0					
ANR	50684	ArgumentList	p_base <= file_pos		50659	1					
ANR	50685	Argument	p_base <= file_pos		50659	0					
ANR	50686	RelationalExpression	p_base <= file_pos		50659	0		<=			
ANR	50687	Identifier	p_base		50659	0					
ANR	50688	Identifier	file_pos		50659	1					
ANR	50689	IfStatement	if ( ( verbosity == VERBOSE || ! inname ) && p_base < file_pos )		50659	4					
ANR	50690	Condition	( verbosity == VERBOSE || ! inname ) && p_base < file_pos	1104:8:30741:30794	50659	0	True				
ANR	50691	AndExpression	( verbosity == VERBOSE || ! inname ) && p_base < file_pos		50659	0		&&			
ANR	50692	OrExpression	verbosity == VERBOSE || ! inname		50659	0		||			
ANR	50693	EqualityExpression	verbosity == VERBOSE		50659	0		==			
ANR	50694	Identifier	verbosity		50659	0					
ANR	50695	Identifier	VERBOSE		50659	1					
ANR	50696	UnaryOperationExpression	! inname		50659	1					
ANR	50697	UnaryOperator	!		50659	0					
ANR	50698	Identifier	inname		50659	1					
ANR	50699	RelationalExpression	p_base < file_pos		50659	1		<			
ANR	50700	Identifier	p_base		50659	0					
ANR	50701	Identifier	file_pos		50659	1					
ANR	50702	CompoundStatement		7:64:150:150	50659	1					
ANR	50703	ExpressionStatement	"Fseek ( i , p_base , SEEK_SET )"	1105:1:30800:30827	50659	0	True				
ANR	50704	CallExpression	"Fseek ( i , p_base , SEEK_SET )"		50659	0					
ANR	50705	Callee	Fseek		50659	0					
ANR	50706	Identifier	Fseek		50659	0					
ANR	50707	ArgumentList	i		50659	1					
ANR	50708	Argument	i		50659	0					
ANR	50709	Identifier	i		50659	0					
ANR	50710	Argument	p_base		50659	1					
ANR	50711	Identifier	p_base		50659	0					
ANR	50712	Argument	SEEK_SET		50659	2					
ANR	50713	Identifier	SEEK_SET		50659	0					
ANR	50714	ExpressionStatement	"say ( ""The text leading up to this was:\\n--------------------------\\n"" )"	1106:1:30830:30900	50659	1	True				
ANR	50715	CallExpression	"say ( ""The text leading up to this was:\\n--------------------------\\n"" )"		50659	0					
ANR	50716	Callee	say		50659	0					
ANR	50717	Identifier	say		50659	0					
ANR	50718	ArgumentList	"""The text leading up to this was:\\n--------------------------\\n"""		50659	1					
ANR	50719	Argument	"""The text leading up to this was:\\n--------------------------\\n"""		50659	0					
ANR	50720	PrimaryExpression	"""The text leading up to this was:\\n--------------------------\\n"""		50659	0					
ANR	50721	WhileStatement	while ( file_tell ( i ) < file_pos )		50659	2					
ANR	50722	Condition	file_tell ( i ) < file_pos	1108:8:30911:30934	50659	0	True				
ANR	50723	RelationalExpression	file_tell ( i ) < file_pos		50659	0		<			
ANR	50724	CallExpression	file_tell ( i )		50659	0					
ANR	50725	Callee	file_tell		50659	0					
ANR	50726	Identifier	file_tell		50659	0					
ANR	50727	ArgumentList	i		50659	1					
ANR	50728	Argument	i		50659	0					
ANR	50729	Identifier	i		50659	0					
ANR	50730	Identifier	file_pos		50659	1					
ANR	50731	CompoundStatement		12:3:293:293	50659	1					
ANR	50732	ExpressionStatement	"putc ( '|' , o )"	1110:5:30947:30960	50659	0	True				
ANR	50733	CallExpression	"putc ( '|' , o )"		50659	0					
ANR	50734	Callee	putc		50659	0					
ANR	50735	Identifier	putc		50659	0					
ANR	50736	ArgumentList	'|'		50659	1					
ANR	50737	Argument	'|'		50659	0					
ANR	50738	PrimaryExpression	'|'		50659	0					
ANR	50739	Argument	o		50659	1					
ANR	50740	Identifier	o		50659	0					
ANR	50741	DoStatement	do		50659	1					
ANR	50742	CompoundStatement		15:7:330:330	50659	0					
ANR	50743	IfStatement	if ( ( c = getc ( i ) ) == EOF )		50659	0					
ANR	50744	Condition	( c = getc ( i ) ) == EOF	1113:6:30985:31005	50659	0	True				
ANR	50745	EqualityExpression	( c = getc ( i ) ) == EOF		50659	0		==			
ANR	50746	AssignmentExpression	c = getc ( i )		50659	0		=			
ANR	50747	Identifier	c		50659	0					
ANR	50748	CallExpression	getc ( i )		50659	1					
ANR	50749	Callee	getc		50659	0					
ANR	50750	Identifier	getc		50659	0					
ANR	50751	ArgumentList	i		50659	1					
ANR	50752	Argument	i		50659	0					
ANR	50753	Identifier	i		50659	0					
ANR	50754	Identifier	EOF		50659	1					
ANR	50755	ExpressionStatement	read_fatal ( )	1114:4:31012:31025	50659	1	True				
ANR	50756	CallExpression	read_fatal ( )		50659	0					
ANR	50757	Callee	read_fatal		50659	0					
ANR	50758	Identifier	read_fatal		50659	0					
ANR	50759	ArgumentList			50659	1					
ANR	50760	ExpressionStatement	"putc ( c , o )"	1115:2:31029:31040	50659	1	True				
ANR	50761	CallExpression	"putc ( c , o )"		50659	0					
ANR	50762	Callee	putc		50659	0					
ANR	50763	Identifier	putc		50659	0					
ANR	50764	ArgumentList	c		50659	1					
ANR	50765	Argument	c		50659	0					
ANR	50766	Identifier	c		50659	0					
ANR	50767	Argument	o		50659	1					
ANR	50768	Identifier	o		50659	0					
ANR	50769	Condition	c != '\\n'	1117:12:31063:31071	50659	1	True				
ANR	50770	EqualityExpression	c != '\\n'		50659	0		!=			
ANR	50771	Identifier	c		50659	0					
ANR	50772	PrimaryExpression	'\\n'		50659	1					
ANR	50773	ExpressionStatement	"say ( ""--------------------------\\n"" )"	1120:1:31082:31118	50659	3	True				
ANR	50774	CallExpression	"say ( ""--------------------------\\n"" )"		50659	0					
ANR	50775	Callee	say		50659	0					
ANR	50776	Identifier	say		50659	0					
ANR	50777	ArgumentList	"""--------------------------\\n"""		50659	1					
ANR	50778	Argument	"""--------------------------\\n"""		50659	0					
ANR	50779	PrimaryExpression	"""--------------------------\\n"""		50659	0					
ANR	50780	ElseStatement	else		50659	0					
ANR	50781	ExpressionStatement	"Fseek ( i , file_pos , SEEK_SET )"	1123:1:31136:31165	50659	0	True				
ANR	50782	CallExpression	"Fseek ( i , file_pos , SEEK_SET )"		50659	0					
ANR	50783	Callee	Fseek		50659	0					
ANR	50784	Identifier	Fseek		50659	0					
ANR	50785	ArgumentList	i		50659	1					
ANR	50786	Argument	i		50659	0					
ANR	50787	Identifier	i		50659	0					
ANR	50788	Argument	file_pos		50659	1					
ANR	50789	Identifier	file_pos		50659	0					
ANR	50790	Argument	SEEK_SET		50659	2					
ANR	50791	Identifier	SEEK_SET		50659	0					
ANR	50792	ExpressionStatement	p_input_line = file_line - 1	1124:4:31171:31199	50659	5	True				
ANR	50793	AssignmentExpression	p_input_line = file_line - 1		50659	0		=			
ANR	50794	Identifier	p_input_line		50659	0					
ANR	50795	AdditiveExpression	file_line - 1		50659	1		-			
ANR	50796	Identifier	file_line		50659	0					
ANR	50797	PrimaryExpression	1		50659	1					
ANR	50798	ReturnType	static void		50659	1					
ANR	50799	Identifier	skip_to		50659	2					
ANR	50800	ParameterList	"file_offset file_pos , lin file_line"		50659	3					
ANR	50801	Parameter	file_offset file_pos	1097:9:30609:30628	50659	0	True				
ANR	50802	ParameterType	file_offset		50659	0					
ANR	50803	Identifier	file_pos		50659	1					
ANR	50804	Parameter	lin file_line	1097:31:30631:30643	50659	1	True				
ANR	50805	ParameterType	lin		50659	0					
ANR	50806	Identifier	file_line		50659	1					
ANR	50807	CFGEntryNode	ENTRY		50659		True				
ANR	50808	CFGExitNode	EXIT		50659		True				
ANR	50809	Symbol	SEEK_SET		50659						
ANR	50810	Symbol	p_input_line		50659						
ANR	50811	Symbol	c		50659						
ANR	50812	Symbol	stdout		50659						
ANR	50813	Symbol	p_base		50659						
ANR	50814	Symbol	i		50659						
ANR	50815	Symbol	o		50659						
ANR	50816	Symbol	file_line		50659						
ANR	50817	Symbol	pfp		50659						
ANR	50818	Symbol	VERBOSE		50659						
ANR	50819	Symbol	file_pos		50659						
ANR	50820	Symbol	EOF		50659						
ANR	50821	Symbol	getc		50659						
ANR	50822	Symbol	verbosity		50659						
ANR	50823	Symbol	inname		50659						
ANR	50824	Symbol	file_tell		50659						
ANR	50825	Function	malformed	1128:0:31254:31474							
ANR	50826	FunctionDef	malformed ()		50825	0					
ANR	50827	CompoundStatement		1130:0:31283:31474	50825	0					
ANR	50828	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	1131:4:31289:31326	50825	0	True				
ANR	50829	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		50825	0					
ANR	50830	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		50825	0					
ANR	50831	Identifier	numbuf		50825	1					
ANR	50832	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		50825	2		+			
ANR	50833	Identifier	LINENUM_LENGTH_BOUND		50825	0					
ANR	50834	PrimaryExpression	1		50825	1					
ANR	50835	ExpressionStatement	"fatal ( ""malformed patch at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"	1132:4:31332:31420	50825	1	True				
ANR	50836	CallExpression	"fatal ( ""malformed patch at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"		50825	0					
ANR	50837	Callee	fatal		50825	0					
ANR	50838	Identifier	fatal		50825	0					
ANR	50839	ArgumentList	"""malformed patch at line %s: %s"""		50825	1					
ANR	50840	Argument	"""malformed patch at line %s: %s"""		50825	0					
ANR	50841	PrimaryExpression	"""malformed patch at line %s: %s"""		50825	0					
ANR	50842	Argument	"format_linenum ( numbuf , p_input_line )"		50825	1					
ANR	50843	CallExpression	"format_linenum ( numbuf , p_input_line )"		50825	0					
ANR	50844	Callee	format_linenum		50825	0					
ANR	50845	Identifier	format_linenum		50825	0					
ANR	50846	ArgumentList	numbuf		50825	1					
ANR	50847	Argument	numbuf		50825	0					
ANR	50848	Identifier	numbuf		50825	0					
ANR	50849	Argument	p_input_line		50825	1					
ANR	50850	Identifier	p_input_line		50825	0					
ANR	50851	Argument	buf		50825	2					
ANR	50852	Identifier	buf		50825	0					
ANR	50853	ReturnType	static void		50825	1					
ANR	50854	Identifier	malformed		50825	2					
ANR	50855	ParameterList			50825	3					
ANR	50856	CFGEntryNode	ENTRY		50825		True				
ANR	50857	CFGExitNode	EXIT		50825		True				
ANR	50858	Symbol	format_linenum		50825						
ANR	50859	Symbol	buf		50825						
ANR	50860	Symbol	p_input_line		50825						
ANR	50861	Symbol	numbuf		50825						
ANR	50862	Function	scan_linenum	1139:0:31577:32149							
ANR	50863	FunctionDef	"scan_linenum (char * s0 , lin * linenum)"		50862	0					
ANR	50864	CompoundStatement		1141:0:31629:32149	50862	0					
ANR	50865	IdentifierDeclStatement	char * s ;	1142:2:31633:31640	50862	0	True				
ANR	50866	IdentifierDecl	* s		50862	0					
ANR	50867	IdentifierDeclType	char *		50862	0					
ANR	50868	Identifier	s		50862	1					
ANR	50869	IdentifierDeclStatement	lin n = 0 ;	1143:2:31644:31653	50862	1	True				
ANR	50870	IdentifierDecl	n = 0		50862	0					
ANR	50871	IdentifierDeclType	lin		50862	0					
ANR	50872	Identifier	n		50862	1					
ANR	50873	AssignmentExpression	n = 0		50862	2		=			
ANR	50874	Identifier	n		50862	0					
ANR	50875	PrimaryExpression	0		50862	1					
ANR	50876	IdentifierDeclStatement	bool overflow = false ;	1144:2:31657:31678	50862	2	True				
ANR	50877	IdentifierDecl	overflow = false		50862	0					
ANR	50878	IdentifierDeclType	bool		50862	0					
ANR	50879	Identifier	overflow		50862	1					
ANR	50880	AssignmentExpression	overflow = false		50862	2		=			
ANR	50881	Identifier	false		50862	0					
ANR	50882	Identifier	false		50862	1					
ANR	50883	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	1145:2:31682:31719	50862	3	True				
ANR	50884	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		50862	0					
ANR	50885	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		50862	0					
ANR	50886	Identifier	numbuf		50862	1					
ANR	50887	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		50862	2		+			
ANR	50888	Identifier	LINENUM_LENGTH_BOUND		50862	0					
ANR	50889	PrimaryExpression	1		50862	1					
ANR	50890	ForStatement	for ( s = s0 ; ISDIGIT ( * s ) ; s ++ )		50862	4					
ANR	50891	ForInit	s = s0 ;	1147:7:31729:31735	50862	0	True				
ANR	50892	AssignmentExpression	s = s0		50862	0		=			
ANR	50893	Identifier	s		50862	0					
ANR	50894	Identifier	s0		50862	1					
ANR	50895	Condition	ISDIGIT ( * s )	1147:16:31738:31749	50862	1	True				
ANR	50896	CallExpression	ISDIGIT ( * s )		50862	0					
ANR	50897	Callee	ISDIGIT		50862	0					
ANR	50898	Identifier	ISDIGIT		50862	0					
ANR	50899	ArgumentList	* s		50862	1					
ANR	50900	Argument	* s		50862	0					
ANR	50901	UnaryOperationExpression	* s		50862	0					
ANR	50902	UnaryOperator	*		50862	0					
ANR	50903	Identifier	s		50862	1					
ANR	50904	PostIncDecOperationExpression	s ++	1147:31:31753:31755	50862	2	True				
ANR	50905	Identifier	s		50862	0					
ANR	50906	IncDec	++		50862	1					
ANR	50907	CompoundStatement		9:6:140:171	50862	3					
ANR	50908	IdentifierDeclStatement	lin new_n = 10 * n + ( * s - '0' ) ;	1149:6:31770:31801	50862	0	True				
ANR	50909	IdentifierDecl	new_n = 10 * n + ( * s - '0' )		50862	0					
ANR	50910	IdentifierDeclType	lin		50862	0					
ANR	50911	Identifier	new_n		50862	1					
ANR	50912	AssignmentExpression	new_n = 10 * n + ( * s - '0' )		50862	2		=			
ANR	50913	Identifier	new_n		50862	0					
ANR	50914	AdditiveExpression	10 * n + ( * s - '0' )		50862	1		+			
ANR	50915	MultiplicativeExpression	10 * n		50862	0		*			
ANR	50916	PrimaryExpression	10		50862	0					
ANR	50917	Identifier	n		50862	1					
ANR	50918	AdditiveExpression	* s - '0'		50862	1		-			
ANR	50919	UnaryOperationExpression	* s		50862	0					
ANR	50920	UnaryOperator	*		50862	0					
ANR	50921	Identifier	s		50862	1					
ANR	50922	PrimaryExpression	'0'		50862	1					
ANR	50923	ExpressionStatement	overflow |= new_n / 10 != n	1150:6:31809:31836	50862	1	True				
ANR	50924	AssignmentExpression	overflow |= new_n / 10 != n		50862	0		|=			
ANR	50925	Identifier	overflow		50862	0					
ANR	50926	EqualityExpression	new_n / 10 != n		50862	1		!=			
ANR	50927	MultiplicativeExpression	new_n / 10		50862	0		/			
ANR	50928	Identifier	new_n		50862	0					
ANR	50929	PrimaryExpression	10		50862	1					
ANR	50930	Identifier	n		50862	1					
ANR	50931	ExpressionStatement	n = new_n	1151:6:31844:31853	50862	2	True				
ANR	50932	AssignmentExpression	n = new_n		50862	0		=			
ANR	50933	Identifier	n		50862	0					
ANR	50934	Identifier	new_n		50862	1					
ANR	50935	IfStatement	if ( s == s0 )		50862	5					
ANR	50936	Condition	s == s0	1154:6:31868:31874	50862	0	True				
ANR	50937	EqualityExpression	s == s0		50862	0		==			
ANR	50938	Identifier	s		50862	0					
ANR	50939	Identifier	s0		50862	1					
ANR	50940	ExpressionStatement	"fatal ( ""missing line number at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"	1155:4:31881:31973	50862	1	True				
ANR	50941	CallExpression	"fatal ( ""missing line number at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"		50862	0					
ANR	50942	Callee	fatal		50862	0					
ANR	50943	Identifier	fatal		50862	0					
ANR	50944	ArgumentList	"""missing line number at line %s: %s"""		50862	1					
ANR	50945	Argument	"""missing line number at line %s: %s"""		50862	0					
ANR	50946	PrimaryExpression	"""missing line number at line %s: %s"""		50862	0					
ANR	50947	Argument	"format_linenum ( numbuf , p_input_line )"		50862	1					
ANR	50948	CallExpression	"format_linenum ( numbuf , p_input_line )"		50862	0					
ANR	50949	Callee	format_linenum		50862	0					
ANR	50950	Identifier	format_linenum		50862	0					
ANR	50951	ArgumentList	numbuf		50862	1					
ANR	50952	Argument	numbuf		50862	0					
ANR	50953	Identifier	numbuf		50862	0					
ANR	50954	Argument	p_input_line		50862	1					
ANR	50955	Identifier	p_input_line		50862	0					
ANR	50956	Argument	buf		50862	2					
ANR	50957	Identifier	buf		50862	0					
ANR	50958	IfStatement	if ( overflow )		50862	6					
ANR	50959	Condition	overflow	1158:6:31982:31989	50862	0	True				
ANR	50960	Identifier	overflow		50862	0					
ANR	50961	ExpressionStatement	"fatal ( ""line number %.*s is too large at line %s: %s"" , ( int ) ( s - s0 ) , s0 , format_linenum ( numbuf , p_input_line ) , buf )"	1159:4:31996:32118	50862	1	True				
ANR	50962	CallExpression	"fatal ( ""line number %.*s is too large at line %s: %s"" , ( int ) ( s - s0 ) , s0 , format_linenum ( numbuf , p_input_line ) , buf )"		50862	0					
ANR	50963	Callee	fatal		50862	0					
ANR	50964	Identifier	fatal		50862	0					
ANR	50965	ArgumentList	"""line number %.*s is too large at line %s: %s"""		50862	1					
ANR	50966	Argument	"""line number %.*s is too large at line %s: %s"""		50862	0					
ANR	50967	PrimaryExpression	"""line number %.*s is too large at line %s: %s"""		50862	0					
ANR	50968	Argument	( int ) ( s - s0 )		50862	1					
ANR	50969	CastExpression	( int ) ( s - s0 )		50862	0					
ANR	50970	CastTarget	int		50862	0					
ANR	50971	AdditiveExpression	s - s0		50862	1		-			
ANR	50972	Identifier	s		50862	0					
ANR	50973	Identifier	s0		50862	1					
ANR	50974	Argument	s0		50862	2					
ANR	50975	Identifier	s0		50862	0					
ANR	50976	Argument	"format_linenum ( numbuf , p_input_line )"		50862	3					
ANR	50977	CallExpression	"format_linenum ( numbuf , p_input_line )"		50862	0					
ANR	50978	Callee	format_linenum		50862	0					
ANR	50979	Identifier	format_linenum		50862	0					
ANR	50980	ArgumentList	numbuf		50862	1					
ANR	50981	Argument	numbuf		50862	0					
ANR	50982	Identifier	numbuf		50862	0					
ANR	50983	Argument	p_input_line		50862	1					
ANR	50984	Identifier	p_input_line		50862	0					
ANR	50985	Argument	buf		50862	4					
ANR	50986	Identifier	buf		50862	0					
ANR	50987	ExpressionStatement	* linenum = n	1162:2:32123:32135	50862	7	True				
ANR	50988	AssignmentExpression	* linenum = n		50862	0		=			
ANR	50989	UnaryOperationExpression	* linenum		50862	0					
ANR	50990	UnaryOperator	*		50862	0					
ANR	50991	Identifier	linenum		50862	1					
ANR	50992	Identifier	n		50862	1					
ANR	50993	ReturnStatement	return s ;	1163:2:32139:32147	50862	8	True				
ANR	50994	Identifier	s		50862	0					
ANR	50995	ReturnType	static char *		50862	1					
ANR	50996	Identifier	scan_linenum		50862	2					
ANR	50997	ParameterList	"char * s0 , lin * linenum"		50862	3					
ANR	50998	Parameter	char * s0	1140:14:31605:31612	50862	0	True				
ANR	50999	ParameterType	char *		50862	0					
ANR	51000	Identifier	s0		50862	1					
ANR	51001	Parameter	lin * linenum	1140:24:31615:31626	50862	1	True				
ANR	51002	ParameterType	lin *		50862	0					
ANR	51003	Identifier	linenum		50862	1					
ANR	51004	CFGEntryNode	ENTRY		50862		True				
ANR	51005	CFGExitNode	EXIT		50862		True				
ANR	51006	Symbol	p_input_line		50862						
ANR	51007	Symbol	false		50862						
ANR	51008	Symbol	ISDIGIT		50862						
ANR	51009	Symbol	n		50862						
ANR	51010	Symbol	format_linenum		50862						
ANR	51011	Symbol	new_n		50862						
ANR	51012	Symbol	buf		50862						
ANR	51013	Symbol	s		50862						
ANR	51014	Symbol	overflow		50862						
ANR	51015	Symbol	numbuf		50862						
ANR	51016	Symbol	* linenum		50862						
ANR	51017	Symbol	linenum		50862						
ANR	51018	Symbol	s0		50862						
ANR	51019	Symbol	* s		50862						
ANR	51020	Function	another_hunk	1169:0:32256:53530							
ANR	51021	FunctionDef	"another_hunk (enum diff difftype , bool rev)"		51020	0					
ANR	51022	CompoundStatement		1171:0:32304:53530	51020	0					
ANR	51023	IdentifierDeclStatement	char * s ;	1172:4:32310:32317	51020	0	True				
ANR	51024	IdentifierDecl	* s		51020	0					
ANR	51025	IdentifierDeclType	char *		51020	0					
ANR	51026	Identifier	s		51020	1					
ANR	51027	IdentifierDeclStatement	lin context = 0 ;	1173:4:32323:32338	51020	1	True				
ANR	51028	IdentifierDecl	context = 0		51020	0					
ANR	51029	IdentifierDeclType	lin		51020	0					
ANR	51030	Identifier	context		51020	1					
ANR	51031	AssignmentExpression	context = 0		51020	2		=			
ANR	51032	Identifier	context		51020	0					
ANR	51033	PrimaryExpression	0		51020	1					
ANR	51034	IdentifierDeclStatement	size_t chars_read ;	1174:4:32344:32361	51020	2	True				
ANR	51035	IdentifierDecl	chars_read		51020	0					
ANR	51036	IdentifierDeclType	size_t		51020	0					
ANR	51037	Identifier	chars_read		51020	1					
ANR	51038	IdentifierDeclStatement	char numbuf0 [ LINENUM_LENGTH_BOUND + 1 ] ;	1175:4:32367:32405	51020	3	True				
ANR	51039	IdentifierDecl	numbuf0 [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51040	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51041	Identifier	numbuf0		51020	1					
ANR	51042	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		51020	2		+			
ANR	51043	Identifier	LINENUM_LENGTH_BOUND		51020	0					
ANR	51044	PrimaryExpression	1		51020	1					
ANR	51045	IdentifierDeclStatement	char numbuf1 [ LINENUM_LENGTH_BOUND + 1 ] ;	1176:4:32411:32449	51020	4	True				
ANR	51046	IdentifierDecl	numbuf1 [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51047	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51048	Identifier	numbuf1		51020	1					
ANR	51049	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		51020	2		+			
ANR	51050	Identifier	LINENUM_LENGTH_BOUND		51020	0					
ANR	51051	PrimaryExpression	1		51020	1					
ANR	51052	IdentifierDeclStatement	char numbuf2 [ LINENUM_LENGTH_BOUND + 1 ] ;	1177:4:32455:32493	51020	5	True				
ANR	51053	IdentifierDecl	numbuf2 [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51054	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51055	Identifier	numbuf2		51020	1					
ANR	51056	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		51020	2		+			
ANR	51057	Identifier	LINENUM_LENGTH_BOUND		51020	0					
ANR	51058	PrimaryExpression	1		51020	1					
ANR	51059	IdentifierDeclStatement	char numbuf3 [ LINENUM_LENGTH_BOUND + 1 ] ;	1178:4:32499:32537	51020	6	True				
ANR	51060	IdentifierDecl	numbuf3 [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51061	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		51020	0					
ANR	51062	Identifier	numbuf3		51020	1					
ANR	51063	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		51020	2		+			
ANR	51064	Identifier	LINENUM_LENGTH_BOUND		51020	0					
ANR	51065	PrimaryExpression	1		51020	1					
ANR	51066	ExpressionStatement	set_hunkmax ( )	1180:4:32544:32557	51020	7	True				
ANR	51067	CallExpression	set_hunkmax ( )		51020	0					
ANR	51068	Callee	set_hunkmax		51020	0					
ANR	51069	Identifier	set_hunkmax		51020	0					
ANR	51070	ArgumentList			51020	1					
ANR	51071	WhileStatement	while ( p_end >= 0 )		51020	8					
ANR	51072	Condition	p_end >= 0	1182:11:32571:32580	51020	0	True				
ANR	51073	RelationalExpression	p_end >= 0		51020	0		>=			
ANR	51074	Identifier	p_end		51020	0					
ANR	51075	PrimaryExpression	0		51020	1					
ANR	51076	CompoundStatement		12:23:278:278	51020	1					
ANR	51077	IfStatement	if ( p_end == p_efake )		51020	0					
ANR	51078	Condition	p_end == p_efake	1183:5:32590:32605	51020	0	True				
ANR	51079	EqualityExpression	p_end == p_efake		51020	0		==			
ANR	51080	Identifier	p_end		51020	0					
ANR	51081	Identifier	p_efake		51020	1					
ANR	51082	ExpressionStatement	p_end = p_bfake	1184:5:32613:32628	51020	1	True				
ANR	51083	AssignmentExpression	p_end = p_bfake		51020	0		=			
ANR	51084	Identifier	p_end		51020	0					
ANR	51085	Identifier	p_bfake		51020	1					
ANR	51086	ElseStatement	else		51020	0					
ANR	51087	ExpressionStatement	free ( p_line [ p_end ] )	1186:5:32665:32684	51020	0	True				
ANR	51088	CallExpression	free ( p_line [ p_end ] )		51020	0					
ANR	51089	Callee	free		51020	0					
ANR	51090	Identifier	free		51020	0					
ANR	51091	ArgumentList	p_line [ p_end ]		51020	1					
ANR	51092	Argument	p_line [ p_end ]		51020	0					
ANR	51093	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	51094	Identifier	p_line		51020	0					
ANR	51095	Identifier	p_end		51020	1					
ANR	51096	ExpressionStatement	p_end --	1187:1:32687:32694	51020	1	True				
ANR	51097	PostIncDecOperationExpression	p_end --		51020	0					
ANR	51098	Identifier	p_end		51020	0					
ANR	51099	IncDec	--		51020	1					
ANR	51100	ExpressionStatement	assert ( p_end == - 1 )	1189:4:32706:32725	51020	9	True				
ANR	51101	CallExpression	assert ( p_end == - 1 )		51020	0					
ANR	51102	Callee	assert		51020	0					
ANR	51103	Identifier	assert		51020	0					
ANR	51104	ArgumentList	p_end == - 1		51020	1					
ANR	51105	Argument	p_end == - 1		51020	0					
ANR	51106	EqualityExpression	p_end == - 1		51020	0		==			
ANR	51107	Identifier	p_end		51020	0					
ANR	51108	UnaryOperationExpression	- 1		51020	1					
ANR	51109	UnaryOperator	-		51020	0					
ANR	51110	PrimaryExpression	1		51020	1					
ANR	51111	ExpressionStatement	p_efake = - 1	1190:4:32731:32743	51020	10	True				
ANR	51112	AssignmentExpression	p_efake = - 1		51020	0		=			
ANR	51113	Identifier	p_efake		51020	0					
ANR	51114	UnaryOperationExpression	- 1		51020	1					
ANR	51115	UnaryOperator	-		51020	0					
ANR	51116	PrimaryExpression	1		51020	1					
ANR	51117	IfStatement	if ( p_c_function )		51020	11					
ANR	51118	Condition	p_c_function	1192:8:32754:32765	51020	0	True				
ANR	51119	Identifier	p_c_function		51020	0					
ANR	51120	CompoundStatement		23:6:469:469	51020	1					
ANR	51121	ExpressionStatement	free ( p_c_function )	1194:1:32777:32796	51020	0	True				
ANR	51122	CallExpression	free ( p_c_function )		51020	0					
ANR	51123	Callee	free		51020	0					
ANR	51124	Identifier	free		51020	0					
ANR	51125	ArgumentList	p_c_function		51020	1					
ANR	51126	Argument	p_c_function		51020	0					
ANR	51127	Identifier	p_c_function		51020	0					
ANR	51128	ExpressionStatement	p_c_function = NULL	1195:1:32799:32818	51020	1	True				
ANR	51129	AssignmentExpression	p_c_function = NULL		51020	0		=			
ANR	51130	Identifier	p_c_function		51020	0					
ANR	51131	Identifier	NULL		51020	1					
ANR	51132	ExpressionStatement	p_max = hunkmax	1198:4:32833:32848	51020	12	True				
ANR	51133	AssignmentExpression	p_max = hunkmax		51020	0		=			
ANR	51134	Identifier	p_max		51020	0					
ANR	51135	Identifier	hunkmax		51020	1					
ANR	51136	IfStatement	if ( difftype == CONTEXT_DIFF || difftype == NEW_CONTEXT_DIFF )		51020	13					
ANR	51137	Condition	difftype == CONTEXT_DIFF || difftype == NEW_CONTEXT_DIFF	1199:8:32894:32949	51020	0	True				
ANR	51138	OrExpression	difftype == CONTEXT_DIFF || difftype == NEW_CONTEXT_DIFF		51020	0		||			
ANR	51139	EqualityExpression	difftype == CONTEXT_DIFF		51020	0		==			
ANR	51140	Identifier	difftype		51020	0					
ANR	51141	Identifier	CONTEXT_DIFF		51020	1					
ANR	51142	EqualityExpression	difftype == NEW_CONTEXT_DIFF		51020	1		==			
ANR	51143	Identifier	difftype		51020	0					
ANR	51144	Identifier	NEW_CONTEXT_DIFF		51020	1					
ANR	51145	CompoundStatement		49:1:1676:1697	51020	1					
ANR	51146	IdentifierDeclStatement	file_offset line_beginning = file_tell ( pfp ) ;	1200:1:32955:32999	51020	0	True				
ANR	51147	IdentifierDecl	line_beginning = file_tell ( pfp )		51020	0					
ANR	51148	IdentifierDeclType	file_offset		51020	0					
ANR	51149	Identifier	line_beginning		51020	1					
ANR	51150	AssignmentExpression	line_beginning = file_tell ( pfp )		51020	2		=			
ANR	51151	Identifier	line_beginning		51020	0					
ANR	51152	CallExpression	file_tell ( pfp )		51020	1					
ANR	51153	Callee	file_tell		51020	0					
ANR	51154	Identifier	file_tell		51020	0					
ANR	51155	ArgumentList	pfp		51020	1					
ANR	51156	Argument	pfp		51020	0					
ANR	51157	Identifier	pfp		51020	0					
ANR	51158	IdentifierDeclStatement	lin repl_beginning = 0 ;	1202:1:33042:33064	51020	1	True				
ANR	51159	IdentifierDecl	repl_beginning = 0		51020	0					
ANR	51160	IdentifierDeclType	lin		51020	0					
ANR	51161	Identifier	repl_beginning		51020	1					
ANR	51162	AssignmentExpression	repl_beginning = 0		51020	2		=			
ANR	51163	Identifier	repl_beginning		51020	0					
ANR	51164	PrimaryExpression	0		51020	1					
ANR	51165	IdentifierDeclStatement	lin fillcnt = 0 ;	1203:1:33092:33107	51020	2	True				
ANR	51166	IdentifierDecl	fillcnt = 0		51020	0					
ANR	51167	IdentifierDeclType	lin		51020	0					
ANR	51168	Identifier	fillcnt		51020	1					
ANR	51169	AssignmentExpression	fillcnt = 0		51020	2		=			
ANR	51170	Identifier	fillcnt		51020	0					
ANR	51171	PrimaryExpression	0		51020	1					
ANR	51172	IdentifierDeclStatement	lin fillsrc ;	1204:1:33147:33158	51020	3	True				
ANR	51173	IdentifierDecl	fillsrc		51020	0					
ANR	51174	IdentifierDeclType	lin		51020	0					
ANR	51175	Identifier	fillsrc		51020	1					
ANR	51176	IdentifierDeclStatement	lin filldst ;	1205:1:33196:33207	51020	4	True				
ANR	51177	IdentifierDecl	filldst		51020	0					
ANR	51178	IdentifierDeclType	lin		51020	0					
ANR	51179	Identifier	filldst		51020	1					
ANR	51180	IdentifierDeclStatement	bool ptrn_spaces_eaten = false ;	1206:1:33245:33275	51020	5	True				
ANR	51181	IdentifierDecl	ptrn_spaces_eaten = false		51020	0					
ANR	51182	IdentifierDeclType	bool		51020	0					
ANR	51183	Identifier	ptrn_spaces_eaten		51020	1					
ANR	51184	AssignmentExpression	ptrn_spaces_eaten = false		51020	2		=			
ANR	51185	Identifier	false		51020	0					
ANR	51186	Identifier	false		51020	1					
ANR	51187	IdentifierDeclStatement	bool some_context = false ;	1207:1:33312:33337	51020	6	True				
ANR	51188	IdentifierDecl	some_context = false		51020	0					
ANR	51189	IdentifierDeclType	bool		51020	0					
ANR	51190	Identifier	some_context		51020	1					
ANR	51191	AssignmentExpression	some_context = false		51020	2		=			
ANR	51192	Identifier	false		51020	0					
ANR	51193	Identifier	false		51020	1					
ANR	51194	IdentifierDeclStatement	bool repl_could_be_missing = true ;	1208:1:33378:33411	51020	7	True				
ANR	51195	IdentifierDecl	repl_could_be_missing = true		51020	0					
ANR	51196	IdentifierDeclType	bool		51020	0					
ANR	51197	Identifier	repl_could_be_missing		51020	1					
ANR	51198	AssignmentExpression	repl_could_be_missing = true		51020	2		=			
ANR	51199	Identifier	true		51020	0					
ANR	51200	Identifier	true		51020	1					
ANR	51201	IdentifierDeclStatement	bool ptrn_missing = false ;	1209:1:33414:33439	51020	8	True				
ANR	51202	IdentifierDecl	ptrn_missing = false		51020	0					
ANR	51203	IdentifierDeclType	bool		51020	0					
ANR	51204	Identifier	ptrn_missing		51020	1					
ANR	51205	AssignmentExpression	ptrn_missing = false		51020	2		=			
ANR	51206	Identifier	false		51020	0					
ANR	51207	Identifier	false		51020	1					
ANR	51208	IdentifierDeclStatement	bool repl_missing = false ;	1210:1:33474:33499	51020	9	True				
ANR	51209	IdentifierDecl	repl_missing = false		51020	0					
ANR	51210	IdentifierDeclType	bool		51020	0					
ANR	51211	Identifier	repl_missing		51020	1					
ANR	51212	AssignmentExpression	repl_missing = false		51020	2		=			
ANR	51213	Identifier	false		51020	0					
ANR	51214	Identifier	false		51020	1					
ANR	51215	IdentifierDeclStatement	file_offset repl_backtrack_position = 0 ;	1211:1:33535:33574	51020	10	True				
ANR	51216	IdentifierDecl	repl_backtrack_position = 0		51020	0					
ANR	51217	IdentifierDeclType	file_offset		51020	0					
ANR	51218	Identifier	repl_backtrack_position		51020	1					
ANR	51219	AssignmentExpression	repl_backtrack_position = 0		51020	2		=			
ANR	51220	Identifier	repl_backtrack_position		51020	0					
ANR	51221	PrimaryExpression	0		51020	1					
ANR	51222	IdentifierDeclStatement	lin repl_patch_line ;	1213:1:33616:33635	51020	11	True				
ANR	51223	IdentifierDecl	repl_patch_line		51020	0					
ANR	51224	IdentifierDeclType	lin		51020	0					
ANR	51225	Identifier	repl_patch_line		51020	1					
ANR	51226	IdentifierDeclStatement	lin repl_context ;	1214:1:33672:33688	51020	12	True				
ANR	51227	IdentifierDecl	repl_context		51020	0					
ANR	51228	IdentifierDeclType	lin		51020	0					
ANR	51229	Identifier	repl_context		51020	1					
ANR	51230	IdentifierDeclStatement	lin ptrn_prefix_context = - 1 ;	1215:1:33715:33743	51020	13	True				
ANR	51231	IdentifierDecl	ptrn_prefix_context = - 1		51020	0					
ANR	51232	IdentifierDeclType	lin		51020	0					
ANR	51233	Identifier	ptrn_prefix_context		51020	1					
ANR	51234	AssignmentExpression	ptrn_prefix_context = - 1		51020	2		=			
ANR	51235	Identifier	ptrn_prefix_context		51020	0					
ANR	51236	UnaryOperationExpression	- 1		51020	1					
ANR	51237	UnaryOperator	-		51020	0					
ANR	51238	PrimaryExpression	1		51020	1					
ANR	51239	IdentifierDeclStatement	lin ptrn_suffix_context = - 1 ;	1216:1:33784:33812	51020	14	True				
ANR	51240	IdentifierDecl	ptrn_suffix_context = - 1		51020	0					
ANR	51241	IdentifierDeclType	lin		51020	0					
ANR	51242	Identifier	ptrn_suffix_context		51020	1					
ANR	51243	AssignmentExpression	ptrn_suffix_context = - 1		51020	2		=			
ANR	51244	Identifier	ptrn_suffix_context		51020	0					
ANR	51245	UnaryOperationExpression	- 1		51020	1					
ANR	51246	UnaryOperator	-		51020	0					
ANR	51247	PrimaryExpression	1		51020	1					
ANR	51248	IdentifierDeclStatement	lin repl_prefix_context = - 1 ;	1217:1:33853:33881	51020	15	True				
ANR	51249	IdentifierDecl	repl_prefix_context = - 1		51020	0					
ANR	51250	IdentifierDeclType	lin		51020	0					
ANR	51251	Identifier	repl_prefix_context		51020	1					
ANR	51252	AssignmentExpression	repl_prefix_context = - 1		51020	2		=			
ANR	51253	Identifier	repl_prefix_context		51020	0					
ANR	51254	UnaryOperationExpression	- 1		51020	1					
ANR	51255	UnaryOperator	-		51020	0					
ANR	51256	PrimaryExpression	1		51020	1					
ANR	51257	IdentifierDeclStatement	lin ptrn_copiable = 0 ;	1218:1:33922:33943	51020	16	True				
ANR	51258	IdentifierDecl	ptrn_copiable = 0		51020	0					
ANR	51259	IdentifierDeclType	lin		51020	0					
ANR	51260	Identifier	ptrn_copiable		51020	1					
ANR	51261	AssignmentExpression	ptrn_copiable = 0		51020	2		=			
ANR	51262	Identifier	ptrn_copiable		51020	0					
ANR	51263	PrimaryExpression	0		51020	1					
ANR	51264	IdentifierDeclStatement	lin repl_copiable = 0 ;	1219:1:33981:34002	51020	17	True				
ANR	51265	IdentifierDecl	repl_copiable = 0		51020	0					
ANR	51266	IdentifierDeclType	lin		51020	0					
ANR	51267	Identifier	repl_copiable		51020	1					
ANR	51268	AssignmentExpression	repl_copiable = 0		51020	2		=			
ANR	51269	Identifier	repl_copiable		51020	0					
ANR	51270	PrimaryExpression	0		51020	1					
ANR	51271	ExpressionStatement	fillsrc = filldst = repl_patch_line = repl_context = 0	1222:1:34068:34122	51020	18	True				
ANR	51272	AssignmentExpression	fillsrc = filldst = repl_patch_line = repl_context = 0		51020	0		=			
ANR	51273	Identifier	fillsrc		51020	0					
ANR	51274	AssignmentExpression	filldst = repl_patch_line = repl_context = 0		51020	1		=			
ANR	51275	Identifier	filldst		51020	0					
ANR	51276	AssignmentExpression	repl_patch_line = repl_context = 0		51020	1		=			
ANR	51277	Identifier	repl_patch_line		51020	0					
ANR	51278	AssignmentExpression	repl_context = 0		51020	1		=			
ANR	51279	Identifier	repl_context		51020	0					
ANR	51280	PrimaryExpression	0		51020	1					
ANR	51281	ExpressionStatement	chars_read = get_line ( )	1224:1:34126:34150	51020	19	True				
ANR	51282	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	51283	Identifier	chars_read		51020	0					
ANR	51284	CallExpression	get_line ( )		51020	1					
ANR	51285	Callee	get_line		51020	0					
ANR	51286	Identifier	get_line		51020	0					
ANR	51287	ArgumentList			51020	1					
ANR	51288	IfStatement	"if ( chars_read == ( size_t ) - 1 || chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0 )"		51020	20					
ANR	51289	Condition	"chars_read == ( size_t ) - 1 || chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0"	1225:5:34157:34247	51020	0	True				
ANR	51290	OrExpression	"chars_read == ( size_t ) - 1 || chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0"		51020	0		||			
ANR	51291	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	51292	Identifier	chars_read		51020	0					
ANR	51293	CastExpression	( size_t ) - 1		51020	1					
ANR	51294	CastTarget	size_t		51020	0					
ANR	51295	UnaryOperationExpression	- 1		51020	1					
ANR	51296	UnaryOperator	-		51020	0					
ANR	51297	PrimaryExpression	1		51020	1					
ANR	51298	OrExpression	"chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0"		51020	1		||			
ANR	51299	RelationalExpression	chars_read <= 8		51020	0		<=			
ANR	51300	Identifier	chars_read		51020	0					
ANR	51301	PrimaryExpression	8		51020	1					
ANR	51302	EqualityExpression	"strncmp ( buf , ""********"" , 8 ) != 0"		51020	1		!=			
ANR	51303	CallExpression	"strncmp ( buf , ""********"" , 8 )"		51020	0					
ANR	51304	Callee	strncmp		51020	0					
ANR	51305	Identifier	strncmp		51020	0					
ANR	51306	ArgumentList	buf		51020	1					
ANR	51307	Argument	buf		51020	0					
ANR	51308	Identifier	buf		51020	0					
ANR	51309	Argument	"""********"""		51020	1					
ANR	51310	PrimaryExpression	"""********"""		51020	0					
ANR	51311	Argument	8		51020	2					
ANR	51312	PrimaryExpression	8		51020	0					
ANR	51313	PrimaryExpression	0		51020	1					
ANR	51314	CompoundStatement		57:43:1945:1945	51020	1					
ANR	51315	ExpressionStatement	"next_intuit_at ( line_beginning , p_input_line )"	1228:5:34257:34300	51020	0	True				
ANR	51316	CallExpression	"next_intuit_at ( line_beginning , p_input_line )"		51020	0					
ANR	51317	Callee	next_intuit_at		51020	0					
ANR	51318	Identifier	next_intuit_at		51020	0					
ANR	51319	ArgumentList	line_beginning		51020	1					
ANR	51320	Argument	line_beginning		51020	0					
ANR	51321	Identifier	line_beginning		51020	0					
ANR	51322	Argument	p_input_line		51020	1					
ANR	51323	Identifier	p_input_line		51020	0					
ANR	51324	ReturnStatement	return chars_read == ( size_t ) - 1 ? - 1 : 0 ;	1229:5:34307:34348	51020	1	True				
ANR	51325	ConditionalExpression	chars_read == ( size_t ) - 1 ? - 1 : 0		51020	0					
ANR	51326	Condition	chars_read == ( size_t ) - 1		51020	0					
ANR	51327	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	51328	Identifier	chars_read		51020	0					
ANR	51329	CastExpression	( size_t ) - 1		51020	1					
ANR	51330	CastTarget	size_t		51020	0					
ANR	51331	UnaryOperationExpression	- 1		51020	1					
ANR	51332	UnaryOperator	-		51020	0					
ANR	51333	PrimaryExpression	1		51020	1					
ANR	51334	UnaryOperationExpression	- 1		51020	1					
ANR	51335	UnaryOperator	-		51020	0					
ANR	51336	PrimaryExpression	1		51020	1					
ANR	51337	PrimaryExpression	0		51020	2					
ANR	51338	ExpressionStatement	s = buf	1231:1:34354:34361	51020	21	True				
ANR	51339	AssignmentExpression	s = buf		51020	0		=			
ANR	51340	Identifier	s		51020	0					
ANR	51341	Identifier	buf		51020	1					
ANR	51342	WhileStatement	while ( * s == '*' )		51020	22					
ANR	51343	Condition	* s == '*'	1232:8:34371:34379	51020	0	True				
ANR	51344	EqualityExpression	* s == '*'		51020	0		==			
ANR	51345	UnaryOperationExpression	* s		51020	0					
ANR	51346	UnaryOperator	*		51020	0					
ANR	51347	Identifier	s		51020	1					
ANR	51348	PrimaryExpression	'*'		51020	1					
ANR	51349	ExpressionStatement	s ++	1233:5:34387:34390	51020	1	True				
ANR	51350	PostIncDecOperationExpression	s ++		51020	0					
ANR	51351	Identifier	s		51020	0					
ANR	51352	IncDec	++		51020	1					
ANR	51353	IfStatement	if ( * s == ' ' )		51020	23					
ANR	51354	Condition	* s == ' '	1234:5:34397:34405	51020	0	True				
ANR	51355	EqualityExpression	* s == ' '		51020	0		==			
ANR	51356	UnaryOperationExpression	* s		51020	0					
ANR	51357	UnaryOperator	*		51020	0					
ANR	51358	Identifier	s		51020	1					
ANR	51359	PrimaryExpression	' '		51020	1					
ANR	51360	CompoundStatement		65:3:2106:2106	51020	1					
ANR	51361	ExpressionStatement	p_c_function = s	1236:5:34418:34434	51020	0	True				
ANR	51362	AssignmentExpression	p_c_function = s		51020	0		=			
ANR	51363	Identifier	p_c_function		51020	0					
ANR	51364	Identifier	s		51020	1					
ANR	51365	WhileStatement	while ( * s != '\\n' )		51020	1					
ANR	51366	Condition	* s != '\\n'	1237:12:34448:34457	51020	0	True				
ANR	51367	EqualityExpression	* s != '\\n'		51020	0		!=			
ANR	51368	UnaryOperationExpression	* s		51020	0					
ANR	51369	UnaryOperator	*		51020	0					
ANR	51370	Identifier	s		51020	1					
ANR	51371	PrimaryExpression	'\\n'		51020	1					
ANR	51372	ExpressionStatement	s ++	1238:2:34462:34465	51020	1	True				
ANR	51373	PostIncDecOperationExpression	s ++		51020	0					
ANR	51374	Identifier	s		51020	0					
ANR	51375	IncDec	++		51020	1					
ANR	51376	ExpressionStatement	* s = '\\0'	1239:5:34472:34481	51020	2	True				
ANR	51377	AssignmentExpression	* s = '\\0'		51020	0		=			
ANR	51378	UnaryOperationExpression	* s		51020	0					
ANR	51379	UnaryOperator	*		51020	0					
ANR	51380	Identifier	s		51020	1					
ANR	51381	PrimaryExpression	'\\0'		51020	1					
ANR	51382	ExpressionStatement	p_c_function = savestr ( p_c_function )	1240:5:34488:34525	51020	3	True				
ANR	51383	AssignmentExpression	p_c_function = savestr ( p_c_function )		51020	0		=			
ANR	51384	Identifier	p_c_function		51020	0					
ANR	51385	CallExpression	savestr ( p_c_function )		51020	1					
ANR	51386	Callee	savestr		51020	0					
ANR	51387	Identifier	savestr		51020	0					
ANR	51388	ArgumentList	p_c_function		51020	1					
ANR	51389	Argument	p_c_function		51020	0					
ANR	51390	Identifier	p_c_function		51020	0					
ANR	51391	IfStatement	if ( ! p_c_function )		51020	4					
ANR	51392	Condition	! p_c_function	1241:9:34536:34549	51020	0	True				
ANR	51393	UnaryOperationExpression	! p_c_function		51020	0					
ANR	51394	UnaryOperator	!		51020	0					
ANR	51395	Identifier	p_c_function		51020	1					
ANR	51396	ReturnStatement	return - 1 ;	1242:7:34559:34568	51020	1	True				
ANR	51397	UnaryOperationExpression	- 1		51020	0					
ANR	51398	UnaryOperator	-		51020	0					
ANR	51399	PrimaryExpression	1		51020	1					
ANR	51400	ExpressionStatement	p_hunk_beg = p_input_line + 1	1244:1:34576:34605	51020	24	True				
ANR	51401	AssignmentExpression	p_hunk_beg = p_input_line + 1		51020	0		=			
ANR	51402	Identifier	p_hunk_beg		51020	0					
ANR	51403	AdditiveExpression	p_input_line + 1		51020	1		+			
ANR	51404	Identifier	p_input_line		51020	0					
ANR	51405	PrimaryExpression	1		51020	1					
ANR	51406	WhileStatement	while ( p_end < p_max )		51020	25					
ANR	51407	Condition	p_end < p_max	1245:8:34615:34627	51020	0	True				
ANR	51408	RelationalExpression	p_end < p_max		51020	0		<			
ANR	51409	Identifier	p_end		51020	0					
ANR	51410	Identifier	p_max		51020	1					
ANR	51411	CompoundStatement		75:23:2325:2325	51020	1					
ANR	51412	ExpressionStatement	chars_read = get_line ( )	1246:5:34637:34661	51020	0	True				
ANR	51413	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	51414	Identifier	chars_read		51020	0					
ANR	51415	CallExpression	get_line ( )		51020	1					
ANR	51416	Callee	get_line		51020	0					
ANR	51417	Identifier	get_line		51020	0					
ANR	51418	ArgumentList			51020	1					
ANR	51419	IfStatement	if ( chars_read == ( size_t ) - 1 )		51020	1					
ANR	51420	Condition	chars_read == ( size_t ) - 1	1247:9:34672:34696	51020	0	True				
ANR	51421	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	51422	Identifier	chars_read		51020	0					
ANR	51423	CastExpression	( size_t ) - 1		51020	1					
ANR	51424	CastTarget	size_t		51020	0					
ANR	51425	UnaryOperationExpression	- 1		51020	1					
ANR	51426	UnaryOperator	-		51020	0					
ANR	51427	PrimaryExpression	1		51020	1					
ANR	51428	ReturnStatement	return - 1 ;	1248:7:34706:34715	51020	1	True				
ANR	51429	UnaryOperationExpression	- 1		51020	0					
ANR	51430	UnaryOperator	-		51020	0					
ANR	51431	PrimaryExpression	1		51020	1					
ANR	51432	IfStatement	if ( ! chars_read )		51020	2					
ANR	51433	Condition	! chars_read	1249:9:34726:34736	51020	0	True				
ANR	51434	UnaryOperationExpression	! chars_read		51020	0					
ANR	51435	UnaryOperator	!		51020	0					
ANR	51436	Identifier	chars_read		51020	1					
ANR	51437	CompoundStatement		79:22:2434:2434	51020	1					
ANR	51438	IfStatement	if ( repl_beginning && repl_could_be_missing )		51020	0					
ANR	51439	Condition	repl_beginning && repl_could_be_missing	1250:6:34747:34785	51020	0	True				
ANR	51440	AndExpression	repl_beginning && repl_could_be_missing		51020	0		&&			
ANR	51441	Identifier	repl_beginning		51020	0					
ANR	51442	Identifier	repl_could_be_missing		51020	1					
ANR	51443	CompoundStatement		80:47:2483:2483	51020	1					
ANR	51444	ExpressionStatement	repl_missing = true	1251:6:34796:34815	51020	0	True				
ANR	51445	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	51446	Identifier	repl_missing		51020	0					
ANR	51447	Identifier	true		51020	1					
ANR	51448	GotoStatement	goto hunk_done ;	1252:6:34823:34837	51020	1	True				
ANR	51449	Identifier	hunk_done		51020	0					
ANR	51450	IfStatement	if ( p_max - p_end < 4 )		51020	1					
ANR	51451	Condition	p_max - p_end < 4	1254:6:34849:34865	51020	0	True				
ANR	51452	RelationalExpression	p_max - p_end < 4		51020	0		<			
ANR	51453	AdditiveExpression	p_max - p_end		51020	0		-			
ANR	51454	Identifier	p_max		51020	0					
ANR	51455	Identifier	p_end		51020	1					
ANR	51456	PrimaryExpression	4		51020	1					
ANR	51457	CompoundStatement		84:25:2563:2563	51020	1					
ANR	51458	ExpressionStatement	"strcpy ( buf , ""  \\n"" )"	1255:6:34876:34896	51020	0	True				
ANR	51459	CallExpression	"strcpy ( buf , ""  \\n"" )"		51020	0					
ANR	51460	Callee	strcpy		51020	0					
ANR	51461	Identifier	strcpy		51020	0					
ANR	51462	ArgumentList	buf		51020	1					
ANR	51463	Argument	buf		51020	0					
ANR	51464	Identifier	buf		51020	0					
ANR	51465	Argument	"""  \\n"""		51020	1					
ANR	51466	PrimaryExpression	"""  \\n"""		51020	0					
ANR	51467	ExpressionStatement	chars_read = 3	1256:6:34942:34956	51020	1	True				
ANR	51468	AssignmentExpression	chars_read = 3		51020	0		=			
ANR	51469	Identifier	chars_read		51020	0					
ANR	51470	PrimaryExpression	3		51020	1					
ANR	51471	ElseStatement	else		51020	0					
ANR	51472	CompoundStatement		87:9:2662:2662	51020	0					
ANR	51473	ExpressionStatement	"fatal ( ""unexpected end of file in patch"" )"	1258:6:34975:35016	51020	0	True				
ANR	51474	CallExpression	"fatal ( ""unexpected end of file in patch"" )"		51020	0					
ANR	51475	Callee	fatal		51020	0					
ANR	51476	Identifier	fatal		51020	0					
ANR	51477	ArgumentList	"""unexpected end of file in patch"""		51020	1					
ANR	51478	Argument	"""unexpected end of file in patch"""		51020	0					
ANR	51479	PrimaryExpression	"""unexpected end of file in patch"""		51020	0					
ANR	51480	ExpressionStatement	p_end ++	1261:5:35034:35041	51020	3	True				
ANR	51481	PostIncDecOperationExpression	p_end ++		51020	0					
ANR	51482	Identifier	p_end		51020	0					
ANR	51483	IncDec	++		51020	1					
ANR	51484	IfStatement	if ( p_end == hunkmax )		51020	4					
ANR	51485	Condition	p_end == hunkmax	1262:9:35052:35067	51020	0	True				
ANR	51486	EqualityExpression	p_end == hunkmax		51020	0		==			
ANR	51487	Identifier	p_end		51020	0					
ANR	51488	Identifier	hunkmax		51020	1					
ANR	51489	ExpressionStatement	"fatal ( ""unterminated hunk starting at line %s; giving up at line %s: %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) , format_linenum ( numbuf1 , p_input_line ) , buf )"	1263:7:35077:35252	51020	1	True				
ANR	51490	CallExpression	"fatal ( ""unterminated hunk starting at line %s; giving up at line %s: %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) , format_linenum ( numbuf1 , p_input_line ) , buf )"		51020	0					
ANR	51491	Callee	fatal		51020	0					
ANR	51492	Identifier	fatal		51020	0					
ANR	51493	ArgumentList	"""unterminated hunk starting at line %s; giving up at line %s: %s"""		51020	1					
ANR	51494	Argument	"""unterminated hunk starting at line %s; giving up at line %s: %s"""		51020	0					
ANR	51495	PrimaryExpression	"""unterminated hunk starting at line %s; giving up at line %s: %s"""		51020	0					
ANR	51496	Argument	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		51020	1					
ANR	51497	CallExpression	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		51020	0					
ANR	51498	Callee	format_linenum		51020	0					
ANR	51499	Identifier	format_linenum		51020	0					
ANR	51500	ArgumentList	numbuf0		51020	1					
ANR	51501	Argument	numbuf0		51020	0					
ANR	51502	Identifier	numbuf0		51020	0					
ANR	51503	Argument	pch_hunk_beg ( )		51020	1					
ANR	51504	CallExpression	pch_hunk_beg ( )		51020	0					
ANR	51505	Callee	pch_hunk_beg		51020	0					
ANR	51506	Identifier	pch_hunk_beg		51020	0					
ANR	51507	ArgumentList			51020	1					
ANR	51508	Argument	"format_linenum ( numbuf1 , p_input_line )"		51020	2					
ANR	51509	CallExpression	"format_linenum ( numbuf1 , p_input_line )"		51020	0					
ANR	51510	Callee	format_linenum		51020	0					
ANR	51511	Identifier	format_linenum		51020	0					
ANR	51512	ArgumentList	numbuf1		51020	1					
ANR	51513	Argument	numbuf1		51020	0					
ANR	51514	Identifier	numbuf1		51020	0					
ANR	51515	Argument	p_input_line		51020	1					
ANR	51516	Identifier	p_input_line		51020	0					
ANR	51517	Argument	buf		51020	3					
ANR	51518	Identifier	buf		51020	0					
ANR	51519	ExpressionStatement	assert ( p_end < hunkmax )	1266:5:35259:35282	51020	5	True				
ANR	51520	CallExpression	assert ( p_end < hunkmax )		51020	0					
ANR	51521	Callee	assert		51020	0					
ANR	51522	Identifier	assert		51020	0					
ANR	51523	ArgumentList	p_end < hunkmax		51020	1					
ANR	51524	Argument	p_end < hunkmax		51020	0					
ANR	51525	RelationalExpression	p_end < hunkmax		51020	0		<			
ANR	51526	Identifier	p_end		51020	0					
ANR	51527	Identifier	hunkmax		51020	1					
ANR	51528	ExpressionStatement	p_Char [ p_end ] = * buf	1267:5:35289:35309	51020	6	True				
ANR	51529	AssignmentExpression	p_Char [ p_end ] = * buf		51020	0		=			
ANR	51530	ArrayIndexing	p_Char [ p_end ]		51020	0					
ANR	51531	Identifier	p_Char		51020	0					
ANR	51532	Identifier	p_end		51020	1					
ANR	51533	UnaryOperationExpression	* buf		51020	1					
ANR	51534	UnaryOperator	*		51020	0					
ANR	51535	Identifier	buf		51020	1					
ANR	51536	ExpressionStatement	p_len [ p_end ] = 0	1268:5:35316:35332	51020	7	True				
ANR	51537	AssignmentExpression	p_len [ p_end ] = 0		51020	0		=			
ANR	51538	ArrayIndexing	p_len [ p_end ]		51020	0					
ANR	51539	Identifier	p_len		51020	0					
ANR	51540	Identifier	p_end		51020	1					
ANR	51541	PrimaryExpression	0		51020	1					
ANR	51542	ExpressionStatement	p_line [ p_end ] = 0	1269:5:35339:35356	51020	8	True				
ANR	51543	AssignmentExpression	p_line [ p_end ] = 0		51020	0		=			
ANR	51544	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	51545	Identifier	p_line		51020	0					
ANR	51546	Identifier	p_end		51020	1					
ANR	51547	PrimaryExpression	0		51020	1					
ANR	51548	SwitchStatement	switch ( * buf )		51020	9					
ANR	51549	Condition	* buf	1270:13:35371:35374	51020	0	True				
ANR	51550	UnaryOperationExpression	* buf		51020	0					
ANR	51551	UnaryOperator	*		51020	0					
ANR	51552	Identifier	buf		51020	1					
ANR	51553	CompoundStatement		100:19:3072:3072	51020	1					
ANR	51554	Label	case '*' :	1271:5:35384:35392	51020	0	True				
ANR	51555	IfStatement	"if ( strnEQ ( buf , ""********"" , 8 ) )"		51020	1					
ANR	51556	Condition	"strnEQ ( buf , ""********"" , 8 )"	1272:6:35400:35425	51020	0	True				
ANR	51557	CallExpression	"strnEQ ( buf , ""********"" , 8 )"		51020	0					
ANR	51558	Callee	strnEQ		51020	0					
ANR	51559	Identifier	strnEQ		51020	0					
ANR	51560	ArgumentList	buf		51020	1					
ANR	51561	Argument	buf		51020	0					
ANR	51562	Identifier	buf		51020	0					
ANR	51563	Argument	"""********"""		51020	1					
ANR	51564	PrimaryExpression	"""********"""		51020	0					
ANR	51565	Argument	8		51020	2					
ANR	51566	PrimaryExpression	8		51020	0					
ANR	51567	CompoundStatement		102:34:3123:3123	51020	1					
ANR	51568	IfStatement	if ( repl_beginning && repl_could_be_missing )		51020	0					
ANR	51569	Condition	repl_beginning && repl_could_be_missing	1273:10:35440:35478	51020	0	True				
ANR	51570	AndExpression	repl_beginning && repl_could_be_missing		51020	0		&&			
ANR	51571	Identifier	repl_beginning		51020	0					
ANR	51572	Identifier	repl_could_be_missing		51020	1					
ANR	51573	CompoundStatement		103:51:3176:3176	51020	1					
ANR	51574	ExpressionStatement	repl_missing = true	1274:3:35486:35505	51020	0	True				
ANR	51575	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	51576	Identifier	repl_missing		51020	0					
ANR	51577	Identifier	true		51020	1					
ANR	51578	GotoStatement	goto hunk_done ;	1275:3:35510:35524	51020	1	True				
ANR	51579	Identifier	hunk_done		51020	0					
ANR	51580	ElseStatement	else		51020	0					
ANR	51581	ExpressionStatement	"fatal ( ""unexpected end of hunk at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1278:8:35553:35644	51020	0	True				
ANR	51582	CallExpression	"fatal ( ""unexpected end of hunk at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	51583	Callee	fatal		51020	0					
ANR	51584	Identifier	fatal		51020	0					
ANR	51585	ArgumentList	"""unexpected end of hunk at line %s"""		51020	1					
ANR	51586	Argument	"""unexpected end of hunk at line %s"""		51020	0					
ANR	51587	PrimaryExpression	"""unexpected end of hunk at line %s"""		51020	0					
ANR	51588	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	51589	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	51590	Callee	format_linenum		51020	0					
ANR	51591	Identifier	format_linenum		51020	0					
ANR	51592	ArgumentList	numbuf0		51020	1					
ANR	51593	Argument	numbuf0		51020	0					
ANR	51594	Identifier	numbuf0		51020	0					
ANR	51595	Argument	p_input_line		51020	1					
ANR	51596	Identifier	p_input_line		51020	0					
ANR	51597	IfStatement	if ( p_end != 0 )		51020	2					
ANR	51598	Condition	p_end != 0	1281:6:35656:35665	51020	0	True				
ANR	51599	EqualityExpression	p_end != 0		51020	0		!=			
ANR	51600	Identifier	p_end		51020	0					
ANR	51601	PrimaryExpression	0		51020	1					
ANR	51602	CompoundStatement		111:18:3363:3363	51020	1					
ANR	51603	IfStatement	if ( repl_beginning && repl_could_be_missing )		51020	0					
ANR	51604	Condition	repl_beginning && repl_could_be_missing	1282:10:35680:35718	51020	0	True				
ANR	51605	AndExpression	repl_beginning && repl_could_be_missing		51020	0		&&			
ANR	51606	Identifier	repl_beginning		51020	0					
ANR	51607	Identifier	repl_could_be_missing		51020	1					
ANR	51608	CompoundStatement		112:51:3416:3416	51020	1					
ANR	51609	ExpressionStatement	repl_missing = true	1283:3:35726:35745	51020	0	True				
ANR	51610	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	51611	Identifier	repl_missing		51020	0					
ANR	51612	Identifier	true		51020	1					
ANR	51613	GotoStatement	goto hunk_done ;	1284:3:35750:35764	51020	1	True				
ANR	51614	Identifier	hunk_done		51020	0					
ANR	51615	ExpressionStatement	"fatal ( ""unexpected '***' at line %s: %s"" , format_linenum ( numbuf0 , p_input_line ) , buf )"	1286:6:35780:35872	51020	1	True				
ANR	51616	CallExpression	"fatal ( ""unexpected '***' at line %s: %s"" , format_linenum ( numbuf0 , p_input_line ) , buf )"		51020	0					
ANR	51617	Callee	fatal		51020	0					
ANR	51618	Identifier	fatal		51020	0					
ANR	51619	ArgumentList	"""unexpected '***' at line %s: %s"""		51020	1					
ANR	51620	Argument	"""unexpected '***' at line %s: %s"""		51020	0					
ANR	51621	PrimaryExpression	"""unexpected '***' at line %s: %s"""		51020	0					
ANR	51622	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	51623	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	51624	Callee	format_linenum		51020	0					
ANR	51625	Identifier	format_linenum		51020	0					
ANR	51626	ArgumentList	numbuf0		51020	1					
ANR	51627	Argument	numbuf0		51020	0					
ANR	51628	Identifier	numbuf0		51020	0					
ANR	51629	Argument	p_input_line		51020	1					
ANR	51630	Identifier	p_input_line		51020	0					
ANR	51631	Argument	buf		51020	2					
ANR	51632	Identifier	buf		51020	0					
ANR	51633	ExpressionStatement	context = 0	1289:2:35880:35891	51020	3	True				
ANR	51634	AssignmentExpression	context = 0		51020	0		=			
ANR	51635	Identifier	context		51020	0					
ANR	51636	PrimaryExpression	0		51020	1					
ANR	51637	ExpressionStatement	p_len [ p_end ] = strlen ( buf )	1290:2:35895:35922	51020	4	True				
ANR	51638	AssignmentExpression	p_len [ p_end ] = strlen ( buf )		51020	0		=			
ANR	51639	ArrayIndexing	p_len [ p_end ]		51020	0					
ANR	51640	Identifier	p_len		51020	0					
ANR	51641	Identifier	p_end		51020	1					
ANR	51642	CallExpression	strlen ( buf )		51020	1					
ANR	51643	Callee	strlen		51020	0					
ANR	51644	Identifier	strlen		51020	0					
ANR	51645	ArgumentList	buf		51020	1					
ANR	51646	Argument	buf		51020	0					
ANR	51647	Identifier	buf		51020	0					
ANR	51648	IfStatement	if ( ! ( p_line [ p_end ] = savestr ( buf ) ) )		51020	5					
ANR	51649	Condition	! ( p_line [ p_end ] = savestr ( buf ) )	1291:6:35930:35962	51020	0	True				
ANR	51650	UnaryOperationExpression	! ( p_line [ p_end ] = savestr ( buf ) )		51020	0					
ANR	51651	UnaryOperator	!		51020	0					
ANR	51652	AssignmentExpression	p_line [ p_end ] = savestr ( buf )		51020	1		=			
ANR	51653	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	51654	Identifier	p_line		51020	0					
ANR	51655	Identifier	p_end		51020	1					
ANR	51656	CallExpression	savestr ( buf )		51020	1					
ANR	51657	Callee	savestr		51020	0					
ANR	51658	Identifier	savestr		51020	0					
ANR	51659	ArgumentList	buf		51020	1					
ANR	51660	Argument	buf		51020	0					
ANR	51661	Identifier	buf		51020	0					
ANR	51662	CompoundStatement		121:41:3660:3660	51020	1					
ANR	51663	ExpressionStatement	p_end --	1292:6:35973:35980	51020	0	True				
ANR	51664	PostIncDecOperationExpression	p_end --		51020	0					
ANR	51665	Identifier	p_end		51020	0					
ANR	51666	IncDec	--		51020	1					
ANR	51667	ReturnStatement	return - 1 ;	1293:6:35988:35997	51020	1	True				
ANR	51668	UnaryOperationExpression	- 1		51020	0					
ANR	51669	UnaryOperator	-		51020	0					
ANR	51670	PrimaryExpression	1		51020	1					
ANR	51671	ForStatement	for ( s = buf ; * s && ! ISDIGIT ( * s ) ; s ++ )		51020	6					
ANR	51672	ForInit	s = buf ;	1295:7:36010:36017	51020	0	True				
ANR	51673	AssignmentExpression	s = buf		51020	0		=			
ANR	51674	Identifier	s		51020	0					
ANR	51675	Identifier	buf		51020	1					
ANR	51676	Condition	* s && ! ISDIGIT ( * s )	1295:17:36020:36038	51020	1	True				
ANR	51677	AndExpression	* s && ! ISDIGIT ( * s )		51020	0		&&			
ANR	51678	UnaryOperationExpression	* s		51020	0					
ANR	51679	UnaryOperator	*		51020	0					
ANR	51680	Identifier	s		51020	1					
ANR	51681	UnaryOperationExpression	! ISDIGIT ( * s )		51020	1					
ANR	51682	UnaryOperator	!		51020	0					
ANR	51683	CallExpression	ISDIGIT ( * s )		51020	1					
ANR	51684	Callee	ISDIGIT		51020	0					
ANR	51685	Identifier	ISDIGIT		51020	0					
ANR	51686	ArgumentList	* s		51020	1					
ANR	51687	Argument	* s		51020	0					
ANR	51688	UnaryOperationExpression	* s		51020	0					
ANR	51689	UnaryOperator	*		51020	0					
ANR	51690	Identifier	s		51020	1					
ANR	51691	PostIncDecOperationExpression	s ++	1295:39:36042:36044	51020	2	True				
ANR	51692	Identifier	s		51020	0					
ANR	51693	IncDec	++		51020	1					
ANR	51694	ExpressionStatement		1296:21:36068:36068	51020	3	True				
ANR	51695	IfStatement	"if ( strnEQ ( s , ""0,0"" , 3 ) )"		51020	7					
ANR	51696	Condition	"strnEQ ( s , ""0,0"" , 3 )"	1297:6:36076:36092	51020	0	True				
ANR	51697	CallExpression	"strnEQ ( s , ""0,0"" , 3 )"		51020	0					
ANR	51698	Callee	strnEQ		51020	0					
ANR	51699	Identifier	strnEQ		51020	0					
ANR	51700	ArgumentList	s		51020	1					
ANR	51701	Argument	s		51020	0					
ANR	51702	Identifier	s		51020	0					
ANR	51703	Argument	"""0,0"""		51020	1					
ANR	51704	PrimaryExpression	"""0,0"""		51020	0					
ANR	51705	Argument	3		51020	2					
ANR	51706	PrimaryExpression	3		51020	0					
ANR	51707	ExpressionStatement	"remove_prefix ( s , 2 )"	1298:6:36101:36121	51020	1	True				
ANR	51708	CallExpression	"remove_prefix ( s , 2 )"		51020	0					
ANR	51709	Callee	remove_prefix		51020	0					
ANR	51710	Identifier	remove_prefix		51020	0					
ANR	51711	ArgumentList	s		51020	1					
ANR	51712	Argument	s		51020	0					
ANR	51713	Identifier	s		51020	0					
ANR	51714	Argument	2		51020	1					
ANR	51715	PrimaryExpression	2		51020	0					
ANR	51716	ExpressionStatement	"s = scan_linenum ( s , & p_first )"	1299:2:36125:36155	51020	8	True				
ANR	51717	AssignmentExpression	"s = scan_linenum ( s , & p_first )"		51020	0		=			
ANR	51718	Identifier	s		51020	0					
ANR	51719	CallExpression	"scan_linenum ( s , & p_first )"		51020	1					
ANR	51720	Callee	scan_linenum		51020	0					
ANR	51721	Identifier	scan_linenum		51020	0					
ANR	51722	ArgumentList	s		51020	1					
ANR	51723	Argument	s		51020	0					
ANR	51724	Identifier	s		51020	0					
ANR	51725	Argument	& p_first		51020	1					
ANR	51726	UnaryOperationExpression	& p_first		51020	0					
ANR	51727	UnaryOperator	&		51020	0					
ANR	51728	Identifier	p_first		51020	1					
ANR	51729	IfStatement	"if ( * s == ',' )"		51020	9					
ANR	51730	Condition	"* s == ','"	1300:6:36163:36171	51020	0	True				
ANR	51731	EqualityExpression	"* s == ','"		51020	0		==			
ANR	51732	UnaryOperationExpression	* s		51020	0					
ANR	51733	UnaryOperator	*		51020	0					
ANR	51734	Identifier	s		51020	1					
ANR	51735	PrimaryExpression	"','"		51020	1					
ANR	51736	CompoundStatement		130:17:3869:3869	51020	1					
ANR	51737	WhileStatement	while ( * s && ! ISDIGIT ( * s ) )		51020	0					
ANR	51738	Condition	* s && ! ISDIGIT ( * s )	1301:13:36189:36207	51020	0	True				
ANR	51739	AndExpression	* s && ! ISDIGIT ( * s )		51020	0		&&			
ANR	51740	UnaryOperationExpression	* s		51020	0					
ANR	51741	UnaryOperator	*		51020	0					
ANR	51742	Identifier	s		51020	1					
ANR	51743	UnaryOperationExpression	! ISDIGIT ( * s )		51020	1					
ANR	51744	UnaryOperator	!		51020	0					
ANR	51745	CallExpression	ISDIGIT ( * s )		51020	1					
ANR	51746	Callee	ISDIGIT		51020	0					
ANR	51747	Identifier	ISDIGIT		51020	0					
ANR	51748	ArgumentList	* s		51020	1					
ANR	51749	Argument	* s		51020	0					
ANR	51750	UnaryOperationExpression	* s		51020	0					
ANR	51751	UnaryOperator	*		51020	0					
ANR	51752	Identifier	s		51020	1					
ANR	51753	ExpressionStatement	s ++	1302:8:36218:36221	51020	1	True				
ANR	51754	PostIncDecOperationExpression	s ++		51020	0					
ANR	51755	Identifier	s		51020	0					
ANR	51756	IncDec	++		51020	1					
ANR	51757	ExpressionStatement	"scan_linenum ( s , & p_ptrn_lines )"	1303:6:36229:36260	51020	1	True				
ANR	51758	CallExpression	"scan_linenum ( s , & p_ptrn_lines )"		51020	0					
ANR	51759	Callee	scan_linenum		51020	0					
ANR	51760	Identifier	scan_linenum		51020	0					
ANR	51761	ArgumentList	s		51020	1					
ANR	51762	Argument	s		51020	0					
ANR	51763	Identifier	s		51020	0					
ANR	51764	Argument	& p_ptrn_lines		51020	1					
ANR	51765	UnaryOperationExpression	& p_ptrn_lines		51020	0					
ANR	51766	UnaryOperator	&		51020	0					
ANR	51767	Identifier	p_ptrn_lines		51020	1					
ANR	51768	ExpressionStatement	p_ptrn_lines += 1 - p_first	1304:6:36268:36295	51020	2	True				
ANR	51769	AssignmentExpression	p_ptrn_lines += 1 - p_first		51020	0		+=			
ANR	51770	Identifier	p_ptrn_lines		51020	0					
ANR	51771	AdditiveExpression	1 - p_first		51020	1		-			
ANR	51772	PrimaryExpression	1		51020	0					
ANR	51773	Identifier	p_first		51020	1					
ANR	51774	IfStatement	if ( p_ptrn_lines < 0 )		51020	3					
ANR	51775	Condition	p_ptrn_lines < 0	1305:10:36307:36322	51020	0	True				
ANR	51776	RelationalExpression	p_ptrn_lines < 0		51020	0		<			
ANR	51777	Identifier	p_ptrn_lines		51020	0					
ANR	51778	PrimaryExpression	0		51020	1					
ANR	51779	ExpressionStatement	malformed ( )	1306:8:36333:36345	51020	1	True				
ANR	51780	CallExpression	malformed ( )		51020	0					
ANR	51781	Callee	malformed		51020	0					
ANR	51782	Identifier	malformed		51020	0					
ANR	51783	ArgumentList			51020	1					
ANR	51784	ElseStatement	else		51020	0					
ANR	51785	IfStatement	if ( p_first )		51020	0					
ANR	51786	Condition	p_first	1308:11:36362:36368	51020	0	True				
ANR	51787	Identifier	p_first		51020	0					
ANR	51788	ExpressionStatement	p_ptrn_lines = 1	1309:6:36377:36393	51020	1	True				
ANR	51789	AssignmentExpression	p_ptrn_lines = 1		51020	0		=			
ANR	51790	Identifier	p_ptrn_lines		51020	0					
ANR	51791	PrimaryExpression	1		51020	1					
ANR	51792	ElseStatement	else		51020	0					
ANR	51793	CompoundStatement		140:7:4097:4097	51020	0					
ANR	51794	ExpressionStatement	p_ptrn_lines = 0	1311:6:36410:36426	51020	0	True				
ANR	51795	AssignmentExpression	p_ptrn_lines = 0		51020	0		=			
ANR	51796	Identifier	p_ptrn_lines		51020	0					
ANR	51797	PrimaryExpression	0		51020	1					
ANR	51798	ExpressionStatement	p_first = 1	1312:6:36434:36445	51020	1	True				
ANR	51799	AssignmentExpression	p_first = 1		51020	0		=			
ANR	51800	Identifier	p_first		51020	0					
ANR	51801	PrimaryExpression	1		51020	1					
ANR	51802	IfStatement	if ( p_first >= LINENUM_MAX - p_ptrn_lines || p_ptrn_lines >= LINENUM_MAX - 6 )		51020	10					
ANR	51803	Condition	p_first >= LINENUM_MAX - p_ptrn_lines || p_ptrn_lines >= LINENUM_MAX - 6	1314:6:36457:36534	51020	0	True				
ANR	51804	OrExpression	p_first >= LINENUM_MAX - p_ptrn_lines || p_ptrn_lines >= LINENUM_MAX - 6		51020	0		||			
ANR	51805	RelationalExpression	p_first >= LINENUM_MAX - p_ptrn_lines		51020	0		>=			
ANR	51806	Identifier	p_first		51020	0					
ANR	51807	AdditiveExpression	LINENUM_MAX - p_ptrn_lines		51020	1		-			
ANR	51808	Identifier	LINENUM_MAX		51020	0					
ANR	51809	Identifier	p_ptrn_lines		51020	1					
ANR	51810	RelationalExpression	p_ptrn_lines >= LINENUM_MAX - 6		51020	1		>=			
ANR	51811	Identifier	p_ptrn_lines		51020	0					
ANR	51812	AdditiveExpression	LINENUM_MAX - 6		51020	1		-			
ANR	51813	Identifier	LINENUM_MAX		51020	0					
ANR	51814	PrimaryExpression	6		51020	1					
ANR	51815	ExpressionStatement	malformed ( )	1316:4:36541:36553	51020	1	True				
ANR	51816	CallExpression	malformed ( )		51020	0					
ANR	51817	Callee	malformed		51020	0					
ANR	51818	Identifier	malformed		51020	0					
ANR	51819	ArgumentList			51020	1					
ANR	51820	ExpressionStatement	p_max = p_ptrn_lines + 6	1317:2:36557:36581	51020	11	True				
ANR	51821	AssignmentExpression	p_max = p_ptrn_lines + 6		51020	0		=			
ANR	51822	Identifier	p_max		51020	0					
ANR	51823	AdditiveExpression	p_ptrn_lines + 6		51020	1		+			
ANR	51824	Identifier	p_ptrn_lines		51020	0					
ANR	51825	PrimaryExpression	6		51020	1					
ANR	51826	WhileStatement	while ( p_max + 1 >= hunkmax )		51020	12					
ANR	51827	Condition	p_max + 1 >= hunkmax	1318:9:36625:36644	51020	0	True				
ANR	51828	RelationalExpression	p_max + 1 >= hunkmax		51020	0		>=			
ANR	51829	AdditiveExpression	p_max + 1		51020	0		+			
ANR	51830	Identifier	p_max		51020	0					
ANR	51831	PrimaryExpression	1		51020	1					
ANR	51832	Identifier	hunkmax		51020	1					
ANR	51833	IfStatement	if ( ! grow_hunkmax ( ) )		51020	1					
ANR	51834	Condition	! grow_hunkmax ( )	1319:10:36657:36673	51020	0	True				
ANR	51835	UnaryOperationExpression	! grow_hunkmax ( )		51020	0					
ANR	51836	UnaryOperator	!		51020	0					
ANR	51837	CallExpression	grow_hunkmax ( )		51020	1					
ANR	51838	Callee	grow_hunkmax		51020	0					
ANR	51839	Identifier	grow_hunkmax		51020	0					
ANR	51840	ArgumentList			51020	1					
ANR	51841	ReturnStatement	return - 1 ;	1320:3:36679:36688	51020	1	True				
ANR	51842	UnaryOperationExpression	- 1		51020	0					
ANR	51843	UnaryOperator	-		51020	0					
ANR	51844	PrimaryExpression	1		51020	1					
ANR	51845	ExpressionStatement	p_max = hunkmax	1321:2:36692:36707	51020	13	True				
ANR	51846	AssignmentExpression	p_max = hunkmax		51020	0		=			
ANR	51847	Identifier	p_max		51020	0					
ANR	51848	Identifier	hunkmax		51020	1					
ANR	51849	BreakStatement	break ;	1322:2:36711:36716	51020	14	True				
ANR	51850	Label	case '-' :	1323:5:36723:36731	51020	15	True				
ANR	51851	IfStatement	if ( buf [ 1 ] != '-' )		51020	16					
ANR	51852	Condition	buf [ 1 ] != '-'	1324:6:36739:36751	51020	0	True				
ANR	51853	EqualityExpression	buf [ 1 ] != '-'		51020	0		!=			
ANR	51854	ArrayIndexing	buf [ 1 ]		51020	0					
ANR	51855	Identifier	buf		51020	0					
ANR	51856	PrimaryExpression	1		51020	1					
ANR	51857	PrimaryExpression	'-'		51020	1					
ANR	51858	GotoStatement	goto change_line ;	1325:4:36758:36774	51020	1	True				
ANR	51859	Identifier	change_line		51020	0					
ANR	51860	IfStatement	if ( ptrn_prefix_context == - 1 )		51020	17					
ANR	51861	Condition	ptrn_prefix_context == - 1	1326:6:36782:36806	51020	0	True				
ANR	51862	EqualityExpression	ptrn_prefix_context == - 1		51020	0		==			
ANR	51863	Identifier	ptrn_prefix_context		51020	0					
ANR	51864	UnaryOperationExpression	- 1		51020	1					
ANR	51865	UnaryOperator	-		51020	0					
ANR	51866	PrimaryExpression	1		51020	1					
ANR	51867	ExpressionStatement	ptrn_prefix_context = context	1327:4:36813:36842	51020	1	True				
ANR	51868	AssignmentExpression	ptrn_prefix_context = context		51020	0		=			
ANR	51869	Identifier	ptrn_prefix_context		51020	0					
ANR	51870	Identifier	context		51020	1					
ANR	51871	ExpressionStatement	ptrn_suffix_context = context	1328:2:36846:36875	51020	18	True				
ANR	51872	AssignmentExpression	ptrn_suffix_context = context		51020	0		=			
ANR	51873	Identifier	ptrn_suffix_context		51020	0					
ANR	51874	Identifier	context		51020	1					
ANR	51875	IfStatement	if ( repl_beginning || ( p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' ) ) )		51020	19					
ANR	51876	Condition	repl_beginning || ( p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' ) )	1329:6:36883:36966	51020	0	True				
ANR	51877	OrExpression	repl_beginning || ( p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' ) )		51020	0		||			
ANR	51878	Identifier	repl_beginning		51020	0					
ANR	51879	EqualityExpression	p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' )		51020	1		!=			
ANR	51880	Identifier	p_end		51020	0					
ANR	51881	AdditiveExpression	p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' )		51020	1		+			
ANR	51882	Identifier	p_ptrn_lines		51020	0					
ANR	51883	AdditiveExpression	1 + ( p_Char [ p_end - 1 ] == '\\n' )		51020	1		+			
ANR	51884	PrimaryExpression	1		51020	0					
ANR	51885	EqualityExpression	p_Char [ p_end - 1 ] == '\\n'		51020	1		==			
ANR	51886	ArrayIndexing	p_Char [ p_end - 1 ]		51020	0					
ANR	51887	Identifier	p_Char		51020	0					
ANR	51888	AdditiveExpression	p_end - 1		51020	1		-			
ANR	51889	Identifier	p_end		51020	0					
ANR	51890	PrimaryExpression	1		51020	1					
ANR	51891	PrimaryExpression	'\\n'		51020	1					
ANR	51892	CompoundStatement		162:4:4668:4668	51020	1					
ANR	51893	IfStatement	if ( p_end == 1 )		51020	0					
ANR	51894	Condition	p_end == 1	1333:10:36985:36994	51020	0	True				
ANR	51895	EqualityExpression	p_end == 1		51020	0		==			
ANR	51896	Identifier	p_end		51020	0					
ANR	51897	PrimaryExpression	1		51020	1					
ANR	51898	CompoundStatement		164:8:4700:4700	51020	1					
ANR	51899	ExpressionStatement	ptrn_missing = true	1337:3:37102:37121	51020	0	True				
ANR	51900	AssignmentExpression	ptrn_missing = true		51020	0		=			
ANR	51901	Identifier	ptrn_missing		51020	0					
ANR	51902	Identifier	true		51020	1					
ANR	51903	ExpressionStatement	p_end = p_ptrn_lines + 1	1338:3:37126:37150	51020	1	True				
ANR	51904	AssignmentExpression	p_end = p_ptrn_lines + 1		51020	0		=			
ANR	51905	Identifier	p_end		51020	0					
ANR	51906	AdditiveExpression	p_ptrn_lines + 1		51020	1		+			
ANR	51907	Identifier	p_ptrn_lines		51020	0					
ANR	51908	PrimaryExpression	1		51020	1					
ANR	51909	ExpressionStatement	ptrn_prefix_context = ptrn_suffix_context = - 1	1339:3:37155:37201	51020	2	True				
ANR	51910	AssignmentExpression	ptrn_prefix_context = ptrn_suffix_context = - 1		51020	0		=			
ANR	51911	Identifier	ptrn_prefix_context		51020	0					
ANR	51912	AssignmentExpression	ptrn_suffix_context = - 1		51020	1		=			
ANR	51913	Identifier	ptrn_suffix_context		51020	0					
ANR	51914	UnaryOperationExpression	- 1		51020	1					
ANR	51915	UnaryOperator	-		51020	0					
ANR	51916	PrimaryExpression	1		51020	1					
ANR	51917	ExpressionStatement	fillsrc = p_end + 1	1340:3:37206:37225	51020	3	True				
ANR	51918	AssignmentExpression	fillsrc = p_end + 1		51020	0		=			
ANR	51919	Identifier	fillsrc		51020	0					
ANR	51920	AdditiveExpression	p_end + 1		51020	1		+			
ANR	51921	Identifier	p_end		51020	0					
ANR	51922	PrimaryExpression	1		51020	1					
ANR	51923	ExpressionStatement	filldst = 1	1341:3:37230:37241	51020	4	True				
ANR	51924	AssignmentExpression	filldst = 1		51020	0		=			
ANR	51925	Identifier	filldst		51020	0					
ANR	51926	PrimaryExpression	1		51020	1					
ANR	51927	ExpressionStatement	fillcnt = p_ptrn_lines	1342:3:37246:37268	51020	5	True				
ANR	51928	AssignmentExpression	fillcnt = p_ptrn_lines		51020	0		=			
ANR	51929	Identifier	fillcnt		51020	0					
ANR	51930	Identifier	p_ptrn_lines		51020	1					
ANR	51931	ElseStatement	else		51020	0					
ANR	51932	IfStatement	if ( ! repl_beginning )		51020	0					
ANR	51933	Condition	! repl_beginning	1344:15:37295:37310	51020	0	True				
ANR	51934	UnaryOperationExpression	! repl_beginning		51020	0					
ANR	51935	UnaryOperator	!		51020	0					
ANR	51936	Identifier	repl_beginning		51020	1					
ANR	51937	ExpressionStatement	"fatal ( ""%s '---' at line %s; check line numbers at line %s"" , ( p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"" ) , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg ) )"	1345:8:37321:37552	51020	1	True				
ANR	51938	CallExpression	"fatal ( ""%s '---' at line %s; check line numbers at line %s"" , ( p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"" ) , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg ) )"		51020	0					
ANR	51939	Callee	fatal		51020	0					
ANR	51940	Identifier	fatal		51020	0					
ANR	51941	ArgumentList	"""%s '---' at line %s; check line numbers at line %s"""		51020	1					
ANR	51942	Argument	"""%s '---' at line %s; check line numbers at line %s"""		51020	0					
ANR	51943	PrimaryExpression	"""%s '---' at line %s; check line numbers at line %s"""		51020	0					
ANR	51944	Argument	"p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"""		51020	1					
ANR	51945	ConditionalExpression	"p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"""		51020	0					
ANR	51946	Condition	p_end <= p_ptrn_lines		51020	0					
ANR	51947	RelationalExpression	p_end <= p_ptrn_lines		51020	0		<=			
ANR	51948	Identifier	p_end		51020	0					
ANR	51949	Identifier	p_ptrn_lines		51020	1					
ANR	51950	PrimaryExpression	"""Premature"""		51020	1					
ANR	51951	PrimaryExpression	"""Overdue"""		51020	2					
ANR	51952	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	2					
ANR	51953	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	51954	Callee	format_linenum		51020	0					
ANR	51955	Identifier	format_linenum		51020	0					
ANR	51956	ArgumentList	numbuf0		51020	1					
ANR	51957	Argument	numbuf0		51020	0					
ANR	51958	Identifier	numbuf0		51020	0					
ANR	51959	Argument	p_input_line		51020	1					
ANR	51960	Identifier	p_input_line		51020	0					
ANR	51961	Argument	"format_linenum ( numbuf1 , p_hunk_beg )"		51020	3					
ANR	51962	CallExpression	"format_linenum ( numbuf1 , p_hunk_beg )"		51020	0					
ANR	51963	Callee	format_linenum		51020	0					
ANR	51964	Identifier	format_linenum		51020	0					
ANR	51965	ArgumentList	numbuf1		51020	1					
ANR	51966	Argument	numbuf1		51020	0					
ANR	51967	Identifier	numbuf1		51020	0					
ANR	51968	Argument	p_hunk_beg		51020	1					
ANR	51969	Identifier	p_hunk_beg		51020	0					
ANR	51970	ElseStatement	else		51020	0					
ANR	51971	IfStatement	if ( ! repl_could_be_missing )		51020	0					
ANR	51972	Condition	! repl_could_be_missing	1351:15:37569:37591	51020	0	True				
ANR	51973	UnaryOperationExpression	! repl_could_be_missing		51020	0					
ANR	51974	UnaryOperator	!		51020	0					
ANR	51975	Identifier	repl_could_be_missing		51020	1					
ANR	51976	ExpressionStatement	"fatal ( ""duplicate '---' at line %s; check line numbers at line %s"" , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg + repl_beginning ) )"	1352:8:37602:37790	51020	1	True				
ANR	51977	CallExpression	"fatal ( ""duplicate '---' at line %s; check line numbers at line %s"" , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg + repl_beginning ) )"		51020	0					
ANR	51978	Callee	fatal		51020	0					
ANR	51979	Identifier	fatal		51020	0					
ANR	51980	ArgumentList	"""duplicate '---' at line %s; check line numbers at line %s"""		51020	1					
ANR	51981	Argument	"""duplicate '---' at line %s; check line numbers at line %s"""		51020	0					
ANR	51982	PrimaryExpression	"""duplicate '---' at line %s; check line numbers at line %s"""		51020	0					
ANR	51983	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	51984	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	51985	Callee	format_linenum		51020	0					
ANR	51986	Identifier	format_linenum		51020	0					
ANR	51987	ArgumentList	numbuf0		51020	1					
ANR	51988	Argument	numbuf0		51020	0					
ANR	51989	Identifier	numbuf0		51020	0					
ANR	51990	Argument	p_input_line		51020	1					
ANR	51991	Identifier	p_input_line		51020	0					
ANR	51992	Argument	"format_linenum ( numbuf1 , p_hunk_beg + repl_beginning )"		51020	2					
ANR	51993	CallExpression	"format_linenum ( numbuf1 , p_hunk_beg + repl_beginning )"		51020	0					
ANR	51994	Callee	format_linenum		51020	0					
ANR	51995	Identifier	format_linenum		51020	0					
ANR	51996	ArgumentList	numbuf1		51020	1					
ANR	51997	Argument	numbuf1		51020	0					
ANR	51998	Identifier	numbuf1		51020	0					
ANR	51999	Argument	p_hunk_beg + repl_beginning		51020	1					
ANR	52000	AdditiveExpression	p_hunk_beg + repl_beginning		51020	0		+			
ANR	52001	Identifier	p_hunk_beg		51020	0					
ANR	52002	Identifier	repl_beginning		51020	1					
ANR	52003	ElseStatement	else		51020	0					
ANR	52004	CompoundStatement		187:8:5506:5506	51020	0					
ANR	52005	ExpressionStatement	repl_missing = true	1358:3:37816:37835	51020	0	True				
ANR	52006	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	52007	Identifier	repl_missing		51020	0					
ANR	52008	Identifier	true		51020	1					
ANR	52009	GotoStatement	goto hunk_done ;	1359:3:37840:37854	51020	1	True				
ANR	52010	Identifier	hunk_done		51020	0					
ANR	52011	ExpressionStatement	repl_beginning = p_end	1362:2:37874:37896	51020	20	True				
ANR	52012	AssignmentExpression	repl_beginning = p_end		51020	0		=			
ANR	52013	Identifier	repl_beginning		51020	0					
ANR	52014	Identifier	p_end		51020	1					
ANR	52015	ExpressionStatement	repl_backtrack_position = file_tell ( pfp )	1363:2:37900:37941	51020	21	True				
ANR	52016	AssignmentExpression	repl_backtrack_position = file_tell ( pfp )		51020	0		=			
ANR	52017	Identifier	repl_backtrack_position		51020	0					
ANR	52018	CallExpression	file_tell ( pfp )		51020	1					
ANR	52019	Callee	file_tell		51020	0					
ANR	52020	Identifier	file_tell		51020	0					
ANR	52021	ArgumentList	pfp		51020	1					
ANR	52022	Argument	pfp		51020	0					
ANR	52023	Identifier	pfp		51020	0					
ANR	52024	ExpressionStatement	repl_patch_line = p_input_line	1364:2:37945:37975	51020	22	True				
ANR	52025	AssignmentExpression	repl_patch_line = p_input_line		51020	0		=			
ANR	52026	Identifier	repl_patch_line		51020	0					
ANR	52027	Identifier	p_input_line		51020	1					
ANR	52028	ExpressionStatement	repl_context = context	1365:2:37979:38001	51020	23	True				
ANR	52029	AssignmentExpression	repl_context = context		51020	0		=			
ANR	52030	Identifier	repl_context		51020	0					
ANR	52031	Identifier	context		51020	1					
ANR	52032	ExpressionStatement	p_len [ p_end ] = strlen ( buf )	1366:2:38005:38032	51020	24	True				
ANR	52033	AssignmentExpression	p_len [ p_end ] = strlen ( buf )		51020	0		=			
ANR	52034	ArrayIndexing	p_len [ p_end ]		51020	0					
ANR	52035	Identifier	p_len		51020	0					
ANR	52036	Identifier	p_end		51020	1					
ANR	52037	CallExpression	strlen ( buf )		51020	1					
ANR	52038	Callee	strlen		51020	0					
ANR	52039	Identifier	strlen		51020	0					
ANR	52040	ArgumentList	buf		51020	1					
ANR	52041	Argument	buf		51020	0					
ANR	52042	Identifier	buf		51020	0					
ANR	52043	IfStatement	if ( ! ( p_line [ p_end ] = savestr ( buf ) ) )		51020	25					
ANR	52044	Condition	! ( p_line [ p_end ] = savestr ( buf ) )	1367:6:38040:38072	51020	0	True				
ANR	52045	UnaryOperationExpression	! ( p_line [ p_end ] = savestr ( buf ) )		51020	0					
ANR	52046	UnaryOperator	!		51020	0					
ANR	52047	AssignmentExpression	p_line [ p_end ] = savestr ( buf )		51020	1		=			
ANR	52048	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	52049	Identifier	p_line		51020	0					
ANR	52050	Identifier	p_end		51020	1					
ANR	52051	CallExpression	savestr ( buf )		51020	1					
ANR	52052	Callee	savestr		51020	0					
ANR	52053	Identifier	savestr		51020	0					
ANR	52054	ArgumentList	buf		51020	1					
ANR	52055	Argument	buf		51020	0					
ANR	52056	Identifier	buf		51020	0					
ANR	52057	CompoundStatement		198:4:5774:5774	51020	1					
ANR	52058	ExpressionStatement	p_end --	1369:6:38087:38094	51020	0	True				
ANR	52059	PostIncDecOperationExpression	p_end --		51020	0					
ANR	52060	Identifier	p_end		51020	0					
ANR	52061	IncDec	--		51020	1					
ANR	52062	ReturnStatement	return - 1 ;	1370:6:38102:38111	51020	1	True				
ANR	52063	UnaryOperationExpression	- 1		51020	0					
ANR	52064	UnaryOperator	-		51020	0					
ANR	52065	PrimaryExpression	1		51020	1					
ANR	52066	ExpressionStatement	p_Char [ p_end ] = '='	1372:2:38121:38140	51020	26	True				
ANR	52067	AssignmentExpression	p_Char [ p_end ] = '='		51020	0		=			
ANR	52068	ArrayIndexing	p_Char [ p_end ]		51020	0					
ANR	52069	Identifier	p_Char		51020	0					
ANR	52070	Identifier	p_end		51020	1					
ANR	52071	PrimaryExpression	'='		51020	1					
ANR	52072	ForStatement	for ( s = buf ; * s && ! ISDIGIT ( * s ) ; s ++ )		51020	27					
ANR	52073	ForInit	s = buf ;	1373:7:38149:38156	51020	0	True				
ANR	52074	AssignmentExpression	s = buf		51020	0		=			
ANR	52075	Identifier	s		51020	0					
ANR	52076	Identifier	buf		51020	1					
ANR	52077	Condition	* s && ! ISDIGIT ( * s )	1373:17:38159:38178	51020	1	True				
ANR	52078	AndExpression	* s && ! ISDIGIT ( * s )		51020	0		&&			
ANR	52079	UnaryOperationExpression	* s		51020	0					
ANR	52080	UnaryOperator	*		51020	0					
ANR	52081	Identifier	s		51020	1					
ANR	52082	UnaryOperationExpression	! ISDIGIT ( * s )		51020	1					
ANR	52083	UnaryOperator	!		51020	0					
ANR	52084	CallExpression	ISDIGIT ( * s )		51020	1					
ANR	52085	Callee	ISDIGIT		51020	0					
ANR	52086	Identifier	ISDIGIT		51020	0					
ANR	52087	ArgumentList	* s		51020	1					
ANR	52088	Argument	* s		51020	0					
ANR	52089	UnaryOperationExpression	* s		51020	0					
ANR	52090	UnaryOperator	*		51020	0					
ANR	52091	Identifier	s		51020	1					
ANR	52092	PostIncDecOperationExpression	s ++	1373:40:38182:38184	51020	2	True				
ANR	52093	Identifier	s		51020	0					
ANR	52094	IncDec	++		51020	1					
ANR	52095	ExpressionStatement		1374:21:38208:38208	51020	3	True				
ANR	52096	ExpressionStatement	"s = scan_linenum ( s , & p_newfirst )"	1375:2:38212:38245	51020	28	True				
ANR	52097	AssignmentExpression	"s = scan_linenum ( s , & p_newfirst )"		51020	0		=			
ANR	52098	Identifier	s		51020	0					
ANR	52099	CallExpression	"scan_linenum ( s , & p_newfirst )"		51020	1					
ANR	52100	Callee	scan_linenum		51020	0					
ANR	52101	Identifier	scan_linenum		51020	0					
ANR	52102	ArgumentList	s		51020	1					
ANR	52103	Argument	s		51020	0					
ANR	52104	Identifier	s		51020	0					
ANR	52105	Argument	& p_newfirst		51020	1					
ANR	52106	UnaryOperationExpression	& p_newfirst		51020	0					
ANR	52107	UnaryOperator	&		51020	0					
ANR	52108	Identifier	p_newfirst		51020	1					
ANR	52109	IfStatement	"if ( * s == ',' )"		51020	29					
ANR	52110	Condition	"* s == ','"	1376:6:38253:38261	51020	0	True				
ANR	52111	EqualityExpression	"* s == ','"		51020	0		==			
ANR	52112	UnaryOperationExpression	* s		51020	0					
ANR	52113	UnaryOperator	*		51020	0					
ANR	52114	Identifier	s		51020	1					
ANR	52115	PrimaryExpression	"','"		51020	1					
ANR	52116	CompoundStatement		207:4:5963:5963	51020	1					
ANR	52117	DoStatement	do		51020	0					
ANR	52118	CompoundStatement		209:8:5982:5982	51020	0					
ANR	52119	IfStatement	if ( ! * ++ s )		51020	0					
ANR	52120	Condition	! * ++ s	1380:7:38296:38300	51020	0	True				
ANR	52121	UnaryOperationExpression	! * ++ s		51020	0					
ANR	52122	UnaryOperator	!		51020	0					
ANR	52123	UnaryOperationExpression	* ++ s		51020	1					
ANR	52124	UnaryOperator	*		51020	0					
ANR	52125	UnaryExpression	++ s		51020	1					
ANR	52126	IncDec	++		51020	0					
ANR	52127	Identifier	s		51020	1					
ANR	52128	ExpressionStatement	malformed ( )	1381:5:38308:38320	51020	1	True				
ANR	52129	CallExpression	malformed ( )		51020	0					
ANR	52130	Callee	malformed		51020	0					
ANR	52131	Identifier	malformed		51020	0					
ANR	52132	ArgumentList			51020	1					
ANR	52133	Condition	! ISDIGIT ( * s )	1383:13:38345:38358	51020	1	True				
ANR	52134	UnaryOperationExpression	! ISDIGIT ( * s )		51020	0					
ANR	52135	UnaryOperator	!		51020	0					
ANR	52136	CallExpression	ISDIGIT ( * s )		51020	1					
ANR	52137	Callee	ISDIGIT		51020	0					
ANR	52138	Identifier	ISDIGIT		51020	0					
ANR	52139	ArgumentList	* s		51020	1					
ANR	52140	Argument	* s		51020	0					
ANR	52141	UnaryOperationExpression	* s		51020	0					
ANR	52142	UnaryOperator	*		51020	0					
ANR	52143	Identifier	s		51020	1					
ANR	52144	ExpressionStatement	"scan_linenum ( s , & p_repl_lines )"	1384:6:38368:38399	51020	1	True				
ANR	52145	CallExpression	"scan_linenum ( s , & p_repl_lines )"		51020	0					
ANR	52146	Callee	scan_linenum		51020	0					
ANR	52147	Identifier	scan_linenum		51020	0					
ANR	52148	ArgumentList	s		51020	1					
ANR	52149	Argument	s		51020	0					
ANR	52150	Identifier	s		51020	0					
ANR	52151	Argument	& p_repl_lines		51020	1					
ANR	52152	UnaryOperationExpression	& p_repl_lines		51020	0					
ANR	52153	UnaryOperator	&		51020	0					
ANR	52154	Identifier	p_repl_lines		51020	1					
ANR	52155	ExpressionStatement	p_repl_lines += 1 - p_newfirst	1385:6:38407:38437	51020	2	True				
ANR	52156	AssignmentExpression	p_repl_lines += 1 - p_newfirst		51020	0		+=			
ANR	52157	Identifier	p_repl_lines		51020	0					
ANR	52158	AdditiveExpression	1 - p_newfirst		51020	1		-			
ANR	52159	PrimaryExpression	1		51020	0					
ANR	52160	Identifier	p_newfirst		51020	1					
ANR	52161	IfStatement	if ( p_repl_lines < 0 )		51020	3					
ANR	52162	Condition	p_repl_lines < 0	1386:10:38449:38464	51020	0	True				
ANR	52163	RelationalExpression	p_repl_lines < 0		51020	0		<			
ANR	52164	Identifier	p_repl_lines		51020	0					
ANR	52165	PrimaryExpression	0		51020	1					
ANR	52166	ExpressionStatement	malformed ( )	1387:8:38475:38487	51020	1	True				
ANR	52167	CallExpression	malformed ( )		51020	0					
ANR	52168	Callee	malformed		51020	0					
ANR	52169	Identifier	malformed		51020	0					
ANR	52170	ArgumentList			51020	1					
ANR	52171	ElseStatement	else		51020	0					
ANR	52172	IfStatement	if ( p_newfirst )		51020	0					
ANR	52173	Condition	p_newfirst	1389:11:38506:38515	51020	0	True				
ANR	52174	Identifier	p_newfirst		51020	0					
ANR	52175	ExpressionStatement	p_repl_lines = 1	1390:4:38522:38538	51020	1	True				
ANR	52176	AssignmentExpression	p_repl_lines = 1		51020	0		=			
ANR	52177	Identifier	p_repl_lines		51020	0					
ANR	52178	PrimaryExpression	1		51020	1					
ANR	52179	ElseStatement	else		51020	0					
ANR	52180	CompoundStatement		222:4:6246:6246	51020	0					
ANR	52181	ExpressionStatement	p_repl_lines = 0	1393:6:38559:38575	51020	0	True				
ANR	52182	AssignmentExpression	p_repl_lines = 0		51020	0		=			
ANR	52183	Identifier	p_repl_lines		51020	0					
ANR	52184	PrimaryExpression	0		51020	1					
ANR	52185	ExpressionStatement	p_newfirst = 1	1394:6:38583:38597	51020	1	True				
ANR	52186	AssignmentExpression	p_newfirst = 1		51020	0		=			
ANR	52187	Identifier	p_newfirst		51020	0					
ANR	52188	PrimaryExpression	1		51020	1					
ANR	52189	IfStatement	if ( p_newfirst >= LINENUM_MAX - p_repl_lines || p_repl_lines >= LINENUM_MAX - p_end )		51020	30					
ANR	52190	Condition	p_newfirst >= LINENUM_MAX - p_repl_lines || p_repl_lines >= LINENUM_MAX - p_end	1396:6:38611:38695	51020	0	True				
ANR	52191	OrExpression	p_newfirst >= LINENUM_MAX - p_repl_lines || p_repl_lines >= LINENUM_MAX - p_end		51020	0		||			
ANR	52192	RelationalExpression	p_newfirst >= LINENUM_MAX - p_repl_lines		51020	0		>=			
ANR	52193	Identifier	p_newfirst		51020	0					
ANR	52194	AdditiveExpression	LINENUM_MAX - p_repl_lines		51020	1		-			
ANR	52195	Identifier	LINENUM_MAX		51020	0					
ANR	52196	Identifier	p_repl_lines		51020	1					
ANR	52197	RelationalExpression	p_repl_lines >= LINENUM_MAX - p_end		51020	1		>=			
ANR	52198	Identifier	p_repl_lines		51020	0					
ANR	52199	AdditiveExpression	LINENUM_MAX - p_end		51020	1		-			
ANR	52200	Identifier	LINENUM_MAX		51020	0					
ANR	52201	Identifier	p_end		51020	1					
ANR	52202	ExpressionStatement	malformed ( )	1398:4:38702:38714	51020	1	True				
ANR	52203	CallExpression	malformed ( )		51020	0					
ANR	52204	Callee	malformed		51020	0					
ANR	52205	Identifier	malformed		51020	0					
ANR	52206	ArgumentList			51020	1					
ANR	52207	ExpressionStatement	p_max = p_repl_lines + p_end	1399:2:38718:38746	51020	31	True				
ANR	52208	AssignmentExpression	p_max = p_repl_lines + p_end		51020	0		=			
ANR	52209	Identifier	p_max		51020	0					
ANR	52210	AdditiveExpression	p_repl_lines + p_end		51020	1		+			
ANR	52211	Identifier	p_repl_lines		51020	0					
ANR	52212	Identifier	p_end		51020	1					
ANR	52213	WhileStatement	while ( p_max + 1 >= hunkmax )		51020	32					
ANR	52214	Condition	p_max + 1 >= hunkmax	1400:9:38757:38776	51020	0	True				
ANR	52215	RelationalExpression	p_max + 1 >= hunkmax		51020	0		>=			
ANR	52216	AdditiveExpression	p_max + 1		51020	0		+			
ANR	52217	Identifier	p_max		51020	0					
ANR	52218	PrimaryExpression	1		51020	1					
ANR	52219	Identifier	hunkmax		51020	1					
ANR	52220	IfStatement	if ( ! grow_hunkmax ( ) )		51020	1					
ANR	52221	Condition	! grow_hunkmax ( )	1401:8:38787:38803	51020	0	True				
ANR	52222	UnaryOperationExpression	! grow_hunkmax ( )		51020	0					
ANR	52223	UnaryOperator	!		51020	0					
ANR	52224	CallExpression	grow_hunkmax ( )		51020	1					
ANR	52225	Callee	grow_hunkmax		51020	0					
ANR	52226	Identifier	grow_hunkmax		51020	0					
ANR	52227	ArgumentList			51020	1					
ANR	52228	ReturnStatement	return - 1 ;	1402:6:38812:38821	51020	1	True				
ANR	52229	UnaryOperationExpression	- 1		51020	0					
ANR	52230	UnaryOperator	-		51020	0					
ANR	52231	PrimaryExpression	1		51020	1					
ANR	52232	IfStatement	if ( p_repl_lines != ptrn_copiable && ( p_prefix_context != 0 || context != 0 || p_repl_lines != 1 ) )		51020	33					
ANR	52233	Condition	p_repl_lines != ptrn_copiable && ( p_prefix_context != 0 || context != 0 || p_repl_lines != 1 )	1403:6:38829:38933	51020	0	True				
ANR	52234	AndExpression	p_repl_lines != ptrn_copiable && ( p_prefix_context != 0 || context != 0 || p_repl_lines != 1 )		51020	0		&&			
ANR	52235	EqualityExpression	p_repl_lines != ptrn_copiable		51020	0		!=			
ANR	52236	Identifier	p_repl_lines		51020	0					
ANR	52237	Identifier	ptrn_copiable		51020	1					
ANR	52238	OrExpression	p_prefix_context != 0 || context != 0 || p_repl_lines != 1		51020	1		||			
ANR	52239	EqualityExpression	p_prefix_context != 0		51020	0		!=			
ANR	52240	Identifier	p_prefix_context		51020	0					
ANR	52241	PrimaryExpression	0		51020	1					
ANR	52242	OrExpression	context != 0 || p_repl_lines != 1		51020	1		||			
ANR	52243	EqualityExpression	context != 0		51020	0		!=			
ANR	52244	Identifier	context		51020	0					
ANR	52245	PrimaryExpression	0		51020	1					
ANR	52246	EqualityExpression	p_repl_lines != 1		51020	1		!=			
ANR	52247	Identifier	p_repl_lines		51020	0					
ANR	52248	PrimaryExpression	1		51020	1					
ANR	52249	ExpressionStatement	repl_could_be_missing = false	1407:4:38940:38969	51020	1	True				
ANR	52250	AssignmentExpression	repl_could_be_missing = false		51020	0		=			
ANR	52251	Identifier	repl_could_be_missing		51020	0					
ANR	52252	Identifier	false		51020	1					
ANR	52253	ExpressionStatement	context = 0	1408:2:38973:38984	51020	34	True				
ANR	52254	AssignmentExpression	context = 0		51020	0		=			
ANR	52255	Identifier	context		51020	0					
ANR	52256	PrimaryExpression	0		51020	1					
ANR	52257	BreakStatement	break ;	1409:2:38988:38993	51020	35	True				
ANR	52258	Label	case '+' :	1410:5:39000:39008	51020	36	True				
ANR	52259	Label	case '!' :	1410:16:39011:39019	51020	37	True				
ANR	52260	ExpressionStatement	repl_could_be_missing = false	1411:2:39023:39052	51020	38	True				
ANR	52261	AssignmentExpression	repl_could_be_missing = false		51020	0		=			
ANR	52262	Identifier	repl_could_be_missing		51020	0					
ANR	52263	Identifier	false		51020	1					
ANR	52264	Label	change_line :	1412:7:39061:39072	51020	39	True				
ANR	52265	Identifier	change_line		51020	0					
ANR	52266	ExpressionStatement	s = buf + 1	1413:2:39076:39087	51020	40	True				
ANR	52267	AssignmentExpression	s = buf + 1		51020	0		=			
ANR	52268	Identifier	s		51020	0					
ANR	52269	AdditiveExpression	buf + 1		51020	1		+			
ANR	52270	Identifier	buf		51020	0					
ANR	52271	PrimaryExpression	1		51020	1					
ANR	52272	ExpressionStatement	chars_read --	1414:2:39091:39103	51020	41	True				
ANR	52273	PostIncDecOperationExpression	chars_read --		51020	0					
ANR	52274	Identifier	chars_read		51020	0					
ANR	52275	IncDec	--		51020	1					
ANR	52276	IfStatement	if ( * s == '\\n' && canonicalize_ws )		51020	42					
ANR	52277	Condition	* s == '\\n' && canonicalize_ws	1415:6:39111:39139	51020	0	True				
ANR	52278	AndExpression	* s == '\\n' && canonicalize_ws		51020	0		&&			
ANR	52279	EqualityExpression	* s == '\\n'		51020	0		==			
ANR	52280	UnaryOperationExpression	* s		51020	0					
ANR	52281	UnaryOperator	*		51020	0					
ANR	52282	Identifier	s		51020	1					
ANR	52283	PrimaryExpression	'\\n'		51020	1					
ANR	52284	Identifier	canonicalize_ws		51020	1					
ANR	52285	CompoundStatement		245:37:6837:6837	51020	1					
ANR	52286	ExpressionStatement	"strcpy ( s , "" \\n"" )"	1416:6:39150:39167	51020	0	True				
ANR	52287	CallExpression	"strcpy ( s , "" \\n"" )"		51020	0					
ANR	52288	Callee	strcpy		51020	0					
ANR	52289	Identifier	strcpy		51020	0					
ANR	52290	ArgumentList	s		51020	1					
ANR	52291	Argument	s		51020	0					
ANR	52292	Identifier	s		51020	0					
ANR	52293	Argument	""" \\n"""		51020	1					
ANR	52294	PrimaryExpression	""" \\n"""		51020	0					
ANR	52295	ExpressionStatement	chars_read = 2	1417:6:39175:39189	51020	1	True				
ANR	52296	AssignmentExpression	chars_read = 2		51020	0		=			
ANR	52297	Identifier	chars_read		51020	0					
ANR	52298	PrimaryExpression	2		51020	1					
ANR	52299	IfStatement	if ( * s == ' ' || * s == '\\t' )		51020	43					
ANR	52300	Condition	* s == ' ' || * s == '\\t'	1419:6:39201:39223	51020	0	True				
ANR	52301	OrExpression	* s == ' ' || * s == '\\t'		51020	0		||			
ANR	52302	EqualityExpression	* s == ' '		51020	0		==			
ANR	52303	UnaryOperationExpression	* s		51020	0					
ANR	52304	UnaryOperator	*		51020	0					
ANR	52305	Identifier	s		51020	1					
ANR	52306	PrimaryExpression	' '		51020	1					
ANR	52307	EqualityExpression	* s == '\\t'		51020	1		==			
ANR	52308	UnaryOperationExpression	* s		51020	0					
ANR	52309	UnaryOperator	*		51020	0					
ANR	52310	Identifier	s		51020	1					
ANR	52311	PrimaryExpression	'\\t'		51020	1					
ANR	52312	CompoundStatement		249:31:6921:6921	51020	1					
ANR	52313	ExpressionStatement	s ++	1420:6:39234:39237	51020	0	True				
ANR	52314	PostIncDecOperationExpression	s ++		51020	0					
ANR	52315	Identifier	s		51020	0					
ANR	52316	IncDec	++		51020	1					
ANR	52317	ExpressionStatement	chars_read --	1421:6:39245:39257	51020	1	True				
ANR	52318	PostIncDecOperationExpression	chars_read --		51020	0					
ANR	52319	Identifier	chars_read		51020	0					
ANR	52320	IncDec	--		51020	1					
ANR	52321	ElseStatement	else		51020	0					
ANR	52322	IfStatement	if ( repl_beginning && repl_could_be_missing )		51020	0					
ANR	52323	Condition	repl_beginning && repl_could_be_missing	1422:13:39272:39310	51020	0	True				
ANR	52324	AndExpression	repl_beginning && repl_could_be_missing		51020	0		&&			
ANR	52325	Identifier	repl_beginning		51020	0					
ANR	52326	Identifier	repl_could_be_missing		51020	1					
ANR	52327	CompoundStatement		252:54:7008:7008	51020	1					
ANR	52328	ExpressionStatement	repl_missing = true	1423:6:39321:39340	51020	0	True				
ANR	52329	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	52330	Identifier	repl_missing		51020	0					
ANR	52331	Identifier	true		51020	1					
ANR	52332	GotoStatement	goto hunk_done ;	1424:6:39348:39362	51020	1	True				
ANR	52333	Identifier	hunk_done		51020	0					
ANR	52334	IfStatement	if ( ! repl_beginning )		51020	44					
ANR	52335	Condition	! repl_beginning	1426:6:39374:39389	51020	0	True				
ANR	52336	UnaryOperationExpression	! repl_beginning		51020	0					
ANR	52337	UnaryOperator	!		51020	0					
ANR	52338	Identifier	repl_beginning		51020	1					
ANR	52339	CompoundStatement		257:4:7091:7091	51020	1					
ANR	52340	IfStatement	if ( ptrn_prefix_context == - 1 )		51020	0					
ANR	52341	Condition	ptrn_prefix_context == - 1	1428:10:39408:39432	51020	0	True				
ANR	52342	EqualityExpression	ptrn_prefix_context == - 1		51020	0		==			
ANR	52343	Identifier	ptrn_prefix_context		51020	0					
ANR	52344	UnaryOperationExpression	- 1		51020	1					
ANR	52345	UnaryOperator	-		51020	0					
ANR	52346	PrimaryExpression	1		51020	1					
ANR	52347	ExpressionStatement	ptrn_prefix_context = context	1429:8:39443:39472	51020	1	True				
ANR	52348	AssignmentExpression	ptrn_prefix_context = context		51020	0		=			
ANR	52349	Identifier	ptrn_prefix_context		51020	0					
ANR	52350	Identifier	context		51020	1					
ANR	52351	ElseStatement	else		51020	0					
ANR	52352	CompoundStatement		262:4:7186:7186	51020	0					
ANR	52353	IfStatement	if ( repl_prefix_context == - 1 )		51020	0					
ANR	52354	Condition	repl_prefix_context == - 1	1433:10:39503:39527	51020	0	True				
ANR	52355	EqualityExpression	repl_prefix_context == - 1		51020	0		==			
ANR	52356	Identifier	repl_prefix_context		51020	0					
ANR	52357	UnaryOperationExpression	- 1		51020	1					
ANR	52358	UnaryOperator	-		51020	0					
ANR	52359	PrimaryExpression	1		51020	1					
ANR	52360	ExpressionStatement	repl_prefix_context = context	1434:8:39538:39567	51020	1	True				
ANR	52361	AssignmentExpression	repl_prefix_context = context		51020	0		=			
ANR	52362	Identifier	repl_prefix_context		51020	0					
ANR	52363	Identifier	context		51020	1					
ANR	52364	ExpressionStatement	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )	1436:2:39577:39695	51020	45	True				
ANR	52365	AssignmentExpression	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )		51020	0		-=			
ANR	52366	Identifier	chars_read		51020	0					
ANR	52367	AndExpression	1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		51020	1		&&			
ANR	52368	RelationalExpression	1 < chars_read		51020	0		<			
ANR	52369	PrimaryExpression	1		51020	0					
ANR	52370	Identifier	chars_read		51020	1					
ANR	52371	AndExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		51020	1		&&			
ANR	52372	EqualityExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines )		51020	0		==			
ANR	52373	Identifier	p_end		51020	0					
ANR	52374	ConditionalExpression	repl_beginning ? p_max : p_ptrn_lines		51020	1					
ANR	52375	Condition	repl_beginning		51020	0					
ANR	52376	Identifier	repl_beginning		51020	0					
ANR	52377	Identifier	p_max		51020	1					
ANR	52378	Identifier	p_ptrn_lines		51020	2					
ANR	52379	CallExpression	incomplete_line ( )		51020	1					
ANR	52380	Callee	incomplete_line		51020	0					
ANR	52381	Identifier	incomplete_line		51020	0					
ANR	52382	ArgumentList			51020	1					
ANR	52383	ExpressionStatement	p_len [ p_end ] = chars_read	1440:2:39699:39724	51020	46	True				
ANR	52384	AssignmentExpression	p_len [ p_end ] = chars_read		51020	0		=			
ANR	52385	ArrayIndexing	p_len [ p_end ]		51020	0					
ANR	52386	Identifier	p_len		51020	0					
ANR	52387	Identifier	p_end		51020	1					
ANR	52388	Identifier	chars_read		51020	1					
ANR	52389	ExpressionStatement	"p_line [ p_end ] = savebuf ( s , chars_read )"	1441:2:39728:39767	51020	47	True				
ANR	52390	AssignmentExpression	"p_line [ p_end ] = savebuf ( s , chars_read )"		51020	0		=			
ANR	52391	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	52392	Identifier	p_line		51020	0					
ANR	52393	Identifier	p_end		51020	1					
ANR	52394	CallExpression	"savebuf ( s , chars_read )"		51020	1					
ANR	52395	Callee	savebuf		51020	0					
ANR	52396	Identifier	savebuf		51020	0					
ANR	52397	ArgumentList	s		51020	1					
ANR	52398	Argument	s		51020	0					
ANR	52399	Identifier	s		51020	0					
ANR	52400	Argument	chars_read		51020	1					
ANR	52401	Identifier	chars_read		51020	0					
ANR	52402	IfStatement	if ( chars_read && ! p_line [ p_end ] )		51020	48					
ANR	52403	Condition	chars_read && ! p_line [ p_end ]	1442:6:39775:39803	51020	0	True				
ANR	52404	AndExpression	chars_read && ! p_line [ p_end ]		51020	0		&&			
ANR	52405	Identifier	chars_read		51020	0					
ANR	52406	UnaryOperationExpression	! p_line [ p_end ]		51020	1					
ANR	52407	UnaryOperator	!		51020	0					
ANR	52408	ArrayIndexing	p_line [ p_end ]		51020	1					
ANR	52409	Identifier	p_line		51020	0					
ANR	52410	Identifier	p_end		51020	1					
ANR	52411	CompoundStatement		272:37:7501:7501	51020	1					
ANR	52412	ExpressionStatement	p_end --	1443:6:39814:39821	51020	0	True				
ANR	52413	PostIncDecOperationExpression	p_end --		51020	0					
ANR	52414	Identifier	p_end		51020	0					
ANR	52415	IncDec	--		51020	1					
ANR	52416	ReturnStatement	return - 1 ;	1444:6:39829:39838	51020	1	True				
ANR	52417	UnaryOperationExpression	- 1		51020	0					
ANR	52418	UnaryOperator	-		51020	0					
ANR	52419	PrimaryExpression	1		51020	1					
ANR	52420	ExpressionStatement	context = 0	1446:2:39853:39864	51020	49	True				
ANR	52421	AssignmentExpression	context = 0		51020	0		=			
ANR	52422	Identifier	context		51020	0					
ANR	52423	PrimaryExpression	0		51020	1					
ANR	52424	BreakStatement	break ;	1447:2:39868:39873	51020	50	True				
ANR	52425	Label	case '\\t' :	1448:5:39880:39889	51020	51	True				
ANR	52426	Label	case '\\n' :	1448:16:39891:39900	51020	52	True				
ANR	52427	ExpressionStatement	s = buf	1449:2:39934:39941	51020	53	True				
ANR	52428	AssignmentExpression	s = buf		51020	0		=			
ANR	52429	Identifier	s		51020	0					
ANR	52430	Identifier	buf		51020	1					
ANR	52431	IfStatement	if ( * buf == '\\t' )		51020	54					
ANR	52432	Condition	* buf == '\\t'	1450:6:39949:39960	51020	0	True				
ANR	52433	EqualityExpression	* buf == '\\t'		51020	0		==			
ANR	52434	UnaryOperationExpression	* buf		51020	0					
ANR	52435	UnaryOperator	*		51020	0					
ANR	52436	Identifier	buf		51020	1					
ANR	52437	PrimaryExpression	'\\t'		51020	1					
ANR	52438	CompoundStatement		280:20:7658:7658	51020	1					
ANR	52439	ExpressionStatement	s ++	1451:6:39971:39974	51020	0	True				
ANR	52440	PostIncDecOperationExpression	s ++		51020	0					
ANR	52441	Identifier	s		51020	0					
ANR	52442	IncDec	++		51020	1					
ANR	52443	ExpressionStatement	chars_read --	1452:6:39982:39994	51020	1	True				
ANR	52444	PostIncDecOperationExpression	chars_read --		51020	0					
ANR	52445	Identifier	chars_read		51020	0					
ANR	52446	IncDec	--		51020	1					
ANR	52447	IfStatement	if ( repl_beginning && repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF ) )		51020	55					
ANR	52448	Condition	repl_beginning && repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF )	1454:6:40006:40106	51020	0	True				
ANR	52449	AndExpression	repl_beginning && repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF )		51020	0		&&			
ANR	52450	Identifier	repl_beginning		51020	0					
ANR	52451	AndExpression	repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF )		51020	1		&&			
ANR	52452	Identifier	repl_could_be_missing		51020	0					
ANR	52453	OrExpression	! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF		51020	1		||			
ANR	52454	UnaryOperationExpression	! ptrn_spaces_eaten		51020	0					
ANR	52455	UnaryOperator	!		51020	0					
ANR	52456	Identifier	ptrn_spaces_eaten		51020	1					
ANR	52457	EqualityExpression	difftype == NEW_CONTEXT_DIFF		51020	1		==			
ANR	52458	Identifier	difftype		51020	0					
ANR	52459	Identifier	NEW_CONTEXT_DIFF		51020	1					
ANR	52460	CompoundStatement		285:61:7805:7805	51020	1					
ANR	52461	ExpressionStatement	repl_missing = true	1456:6:40118:40137	51020	0	True				
ANR	52462	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	52463	Identifier	repl_missing		51020	0					
ANR	52464	Identifier	true		51020	1					
ANR	52465	GotoStatement	goto hunk_done ;	1457:6:40145:40159	51020	1	True				
ANR	52466	Identifier	hunk_done		51020	0					
ANR	52467	ExpressionStatement	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )	1459:2:40167:40285	51020	56	True				
ANR	52468	AssignmentExpression	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )		51020	0		-=			
ANR	52469	Identifier	chars_read		51020	0					
ANR	52470	AndExpression	1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		51020	1		&&			
ANR	52471	RelationalExpression	1 < chars_read		51020	0		<			
ANR	52472	PrimaryExpression	1		51020	0					
ANR	52473	Identifier	chars_read		51020	1					
ANR	52474	AndExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		51020	1		&&			
ANR	52475	EqualityExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines )		51020	0		==			
ANR	52476	Identifier	p_end		51020	0					
ANR	52477	ConditionalExpression	repl_beginning ? p_max : p_ptrn_lines		51020	1					
ANR	52478	Condition	repl_beginning		51020	0					
ANR	52479	Identifier	repl_beginning		51020	0					
ANR	52480	Identifier	p_max		51020	1					
ANR	52481	Identifier	p_ptrn_lines		51020	2					
ANR	52482	CallExpression	incomplete_line ( )		51020	1					
ANR	52483	Callee	incomplete_line		51020	0					
ANR	52484	Identifier	incomplete_line		51020	0					
ANR	52485	ArgumentList			51020	1					
ANR	52486	ExpressionStatement	p_len [ p_end ] = chars_read	1463:2:40289:40314	51020	57	True				
ANR	52487	AssignmentExpression	p_len [ p_end ] = chars_read		51020	0		=			
ANR	52488	ArrayIndexing	p_len [ p_end ]		51020	0					
ANR	52489	Identifier	p_len		51020	0					
ANR	52490	Identifier	p_end		51020	1					
ANR	52491	Identifier	chars_read		51020	1					
ANR	52492	ExpressionStatement	"p_line [ p_end ] = savebuf ( buf , chars_read )"	1464:2:40318:40359	51020	58	True				
ANR	52493	AssignmentExpression	"p_line [ p_end ] = savebuf ( buf , chars_read )"		51020	0		=			
ANR	52494	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	52495	Identifier	p_line		51020	0					
ANR	52496	Identifier	p_end		51020	1					
ANR	52497	CallExpression	"savebuf ( buf , chars_read )"		51020	1					
ANR	52498	Callee	savebuf		51020	0					
ANR	52499	Identifier	savebuf		51020	0					
ANR	52500	ArgumentList	buf		51020	1					
ANR	52501	Argument	buf		51020	0					
ANR	52502	Identifier	buf		51020	0					
ANR	52503	Argument	chars_read		51020	1					
ANR	52504	Identifier	chars_read		51020	0					
ANR	52505	IfStatement	if ( chars_read && ! p_line [ p_end ] )		51020	59					
ANR	52506	Condition	chars_read && ! p_line [ p_end ]	1465:6:40367:40395	51020	0	True				
ANR	52507	AndExpression	chars_read && ! p_line [ p_end ]		51020	0		&&			
ANR	52508	Identifier	chars_read		51020	0					
ANR	52509	UnaryOperationExpression	! p_line [ p_end ]		51020	1					
ANR	52510	UnaryOperator	!		51020	0					
ANR	52511	ArrayIndexing	p_line [ p_end ]		51020	1					
ANR	52512	Identifier	p_line		51020	0					
ANR	52513	Identifier	p_end		51020	1					
ANR	52514	CompoundStatement		295:37:8093:8093	51020	1					
ANR	52515	ExpressionStatement	p_end --	1466:6:40406:40413	51020	0	True				
ANR	52516	PostIncDecOperationExpression	p_end --		51020	0					
ANR	52517	Identifier	p_end		51020	0					
ANR	52518	IncDec	--		51020	1					
ANR	52519	ReturnStatement	return - 1 ;	1467:6:40421:40430	51020	1	True				
ANR	52520	UnaryOperationExpression	- 1		51020	0					
ANR	52521	UnaryOperator	-		51020	0					
ANR	52522	PrimaryExpression	1		51020	1					
ANR	52523	IfStatement	if ( p_end != p_ptrn_lines + 1 )		51020	60					
ANR	52524	Condition	p_end != p_ptrn_lines + 1	1469:6:40442:40466	51020	0	True				
ANR	52525	EqualityExpression	p_end != p_ptrn_lines + 1		51020	0		!=			
ANR	52526	Identifier	p_end		51020	0					
ANR	52527	AdditiveExpression	p_ptrn_lines + 1		51020	1		+			
ANR	52528	Identifier	p_ptrn_lines		51020	0					
ANR	52529	PrimaryExpression	1		51020	1					
ANR	52530	CompoundStatement		299:33:8164:8164	51020	1					
ANR	52531	ExpressionStatement	ptrn_spaces_eaten |= ( repl_beginning != 0 )	1470:6:40477:40519	51020	0	True				
ANR	52532	AssignmentExpression	ptrn_spaces_eaten |= ( repl_beginning != 0 )		51020	0		|=			
ANR	52533	Identifier	ptrn_spaces_eaten		51020	0					
ANR	52534	EqualityExpression	repl_beginning != 0		51020	1		!=			
ANR	52535	Identifier	repl_beginning		51020	0					
ANR	52536	PrimaryExpression	0		51020	1					
ANR	52537	ExpressionStatement	some_context = true	1471:6:40527:40546	51020	1	True				
ANR	52538	AssignmentExpression	some_context = true		51020	0		=			
ANR	52539	Identifier	some_context		51020	0					
ANR	52540	Identifier	true		51020	1					
ANR	52541	ExpressionStatement	context ++	1472:6:40554:40563	51020	2	True				
ANR	52542	PostIncDecOperationExpression	context ++		51020	0					
ANR	52543	Identifier	context		51020	0					
ANR	52544	IncDec	++		51020	1					
ANR	52545	IfStatement	if ( repl_beginning )		51020	3					
ANR	52546	Condition	repl_beginning	1473:10:40575:40588	51020	0	True				
ANR	52547	Identifier	repl_beginning		51020	0					
ANR	52548	ExpressionStatement	repl_copiable ++	1474:3:40594:40609	51020	1	True				
ANR	52549	PostIncDecOperationExpression	repl_copiable ++		51020	0					
ANR	52550	Identifier	repl_copiable		51020	0					
ANR	52551	IncDec	++		51020	1					
ANR	52552	ElseStatement	else		51020	0					
ANR	52553	ExpressionStatement	ptrn_copiable ++	1476:3:40625:40640	51020	0	True				
ANR	52554	PostIncDecOperationExpression	ptrn_copiable ++		51020	0					
ANR	52555	Identifier	ptrn_copiable		51020	0					
ANR	52556	IncDec	++		51020	1					
ANR	52557	ExpressionStatement	p_Char [ p_end ] = ' '	1477:6:40648:40667	51020	4	True				
ANR	52558	AssignmentExpression	p_Char [ p_end ] = ' '		51020	0		=			
ANR	52559	ArrayIndexing	p_Char [ p_end ]		51020	0					
ANR	52560	Identifier	p_Char		51020	0					
ANR	52561	Identifier	p_end		51020	1					
ANR	52562	PrimaryExpression	' '		51020	1					
ANR	52563	BreakStatement	break ;	1479:2:40675:40680	51020	61	True				
ANR	52564	Label	case ' ' :	1480:5:40687:40695	51020	62	True				
ANR	52565	ExpressionStatement	s = buf + 1	1481:2:40699:40710	51020	63	True				
ANR	52566	AssignmentExpression	s = buf + 1		51020	0		=			
ANR	52567	Identifier	s		51020	0					
ANR	52568	AdditiveExpression	buf + 1		51020	1		+			
ANR	52569	Identifier	buf		51020	0					
ANR	52570	PrimaryExpression	1		51020	1					
ANR	52571	ExpressionStatement	chars_read --	1482:2:40714:40726	51020	64	True				
ANR	52572	PostIncDecOperationExpression	chars_read --		51020	0					
ANR	52573	Identifier	chars_read		51020	0					
ANR	52574	IncDec	--		51020	1					
ANR	52575	IfStatement	if ( * s == '\\n' && canonicalize_ws )		51020	65					
ANR	52576	Condition	* s == '\\n' && canonicalize_ws	1483:6:40734:40762	51020	0	True				
ANR	52577	AndExpression	* s == '\\n' && canonicalize_ws		51020	0		&&			
ANR	52578	EqualityExpression	* s == '\\n'		51020	0		==			
ANR	52579	UnaryOperationExpression	* s		51020	0					
ANR	52580	UnaryOperator	*		51020	0					
ANR	52581	Identifier	s		51020	1					
ANR	52582	PrimaryExpression	'\\n'		51020	1					
ANR	52583	Identifier	canonicalize_ws		51020	1					
ANR	52584	CompoundStatement		313:37:8460:8460	51020	1					
ANR	52585	ExpressionStatement	"strcpy ( s , ""\\n"" )"	1484:6:40773:40789	51020	0	True				
ANR	52586	CallExpression	"strcpy ( s , ""\\n"" )"		51020	0					
ANR	52587	Callee	strcpy		51020	0					
ANR	52588	Identifier	strcpy		51020	0					
ANR	52589	ArgumentList	s		51020	1					
ANR	52590	Argument	s		51020	0					
ANR	52591	Identifier	s		51020	0					
ANR	52592	Argument	"""\\n"""		51020	1					
ANR	52593	PrimaryExpression	"""\\n"""		51020	0					
ANR	52594	ExpressionStatement	chars_read = 2	1485:6:40797:40811	51020	1	True				
ANR	52595	AssignmentExpression	chars_read = 2		51020	0		=			
ANR	52596	Identifier	chars_read		51020	0					
ANR	52597	PrimaryExpression	2		51020	1					
ANR	52598	IfStatement	if ( * s == ' ' || * s == '\\t' )		51020	66					
ANR	52599	Condition	* s == ' ' || * s == '\\t'	1487:6:40823:40845	51020	0	True				
ANR	52600	OrExpression	* s == ' ' || * s == '\\t'		51020	0		||			
ANR	52601	EqualityExpression	* s == ' '		51020	0		==			
ANR	52602	UnaryOperationExpression	* s		51020	0					
ANR	52603	UnaryOperator	*		51020	0					
ANR	52604	Identifier	s		51020	1					
ANR	52605	PrimaryExpression	' '		51020	1					
ANR	52606	EqualityExpression	* s == '\\t'		51020	1		==			
ANR	52607	UnaryOperationExpression	* s		51020	0					
ANR	52608	UnaryOperator	*		51020	0					
ANR	52609	Identifier	s		51020	1					
ANR	52610	PrimaryExpression	'\\t'		51020	1					
ANR	52611	CompoundStatement		317:31:8543:8543	51020	1					
ANR	52612	ExpressionStatement	s ++	1488:6:40856:40859	51020	0	True				
ANR	52613	PostIncDecOperationExpression	s ++		51020	0					
ANR	52614	Identifier	s		51020	0					
ANR	52615	IncDec	++		51020	1					
ANR	52616	ExpressionStatement	chars_read --	1489:6:40867:40879	51020	1	True				
ANR	52617	PostIncDecOperationExpression	chars_read --		51020	0					
ANR	52618	Identifier	chars_read		51020	0					
ANR	52619	IncDec	--		51020	1					
ANR	52620	ElseStatement	else		51020	0					
ANR	52621	IfStatement	if ( repl_beginning && repl_could_be_missing )		51020	0					
ANR	52622	Condition	repl_beginning && repl_could_be_missing	1490:13:40894:40932	51020	0	True				
ANR	52623	AndExpression	repl_beginning && repl_could_be_missing		51020	0		&&			
ANR	52624	Identifier	repl_beginning		51020	0					
ANR	52625	Identifier	repl_could_be_missing		51020	1					
ANR	52626	CompoundStatement		320:54:8630:8630	51020	1					
ANR	52627	ExpressionStatement	repl_missing = true	1491:6:40943:40962	51020	0	True				
ANR	52628	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	52629	Identifier	repl_missing		51020	0					
ANR	52630	Identifier	true		51020	1					
ANR	52631	GotoStatement	goto hunk_done ;	1492:6:40970:40984	51020	1	True				
ANR	52632	Identifier	hunk_done		51020	0					
ANR	52633	ExpressionStatement	some_context = true	1494:2:40992:41011	51020	67	True				
ANR	52634	AssignmentExpression	some_context = true		51020	0		=			
ANR	52635	Identifier	some_context		51020	0					
ANR	52636	Identifier	true		51020	1					
ANR	52637	ExpressionStatement	context ++	1495:2:41015:41024	51020	68	True				
ANR	52638	PostIncDecOperationExpression	context ++		51020	0					
ANR	52639	Identifier	context		51020	0					
ANR	52640	IncDec	++		51020	1					
ANR	52641	IfStatement	if ( repl_beginning )		51020	69					
ANR	52642	Condition	repl_beginning	1496:6:41032:41045	51020	0	True				
ANR	52643	Identifier	repl_beginning		51020	0					
ANR	52644	ExpressionStatement	repl_copiable ++	1497:6:41054:41069	51020	1	True				
ANR	52645	PostIncDecOperationExpression	repl_copiable ++		51020	0					
ANR	52646	Identifier	repl_copiable		51020	0					
ANR	52647	IncDec	++		51020	1					
ANR	52648	ElseStatement	else		51020	0					
ANR	52649	ExpressionStatement	ptrn_copiable ++	1499:6:41084:41099	51020	0	True				
ANR	52650	PostIncDecOperationExpression	ptrn_copiable ++		51020	0					
ANR	52651	Identifier	ptrn_copiable		51020	0					
ANR	52652	IncDec	++		51020	1					
ANR	52653	ExpressionStatement	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )	1500:2:41103:41221	51020	70	True				
ANR	52654	AssignmentExpression	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )		51020	0		-=			
ANR	52655	Identifier	chars_read		51020	0					
ANR	52656	AndExpression	1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		51020	1		&&			
ANR	52657	RelationalExpression	1 < chars_read		51020	0		<			
ANR	52658	PrimaryExpression	1		51020	0					
ANR	52659	Identifier	chars_read		51020	1					
ANR	52660	AndExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		51020	1		&&			
ANR	52661	EqualityExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines )		51020	0		==			
ANR	52662	Identifier	p_end		51020	0					
ANR	52663	ConditionalExpression	repl_beginning ? p_max : p_ptrn_lines		51020	1					
ANR	52664	Condition	repl_beginning		51020	0					
ANR	52665	Identifier	repl_beginning		51020	0					
ANR	52666	Identifier	p_max		51020	1					
ANR	52667	Identifier	p_ptrn_lines		51020	2					
ANR	52668	CallExpression	incomplete_line ( )		51020	1					
ANR	52669	Callee	incomplete_line		51020	0					
ANR	52670	Identifier	incomplete_line		51020	0					
ANR	52671	ArgumentList			51020	1					
ANR	52672	ExpressionStatement	p_len [ p_end ] = chars_read	1504:2:41225:41250	51020	71	True				
ANR	52673	AssignmentExpression	p_len [ p_end ] = chars_read		51020	0		=			
ANR	52674	ArrayIndexing	p_len [ p_end ]		51020	0					
ANR	52675	Identifier	p_len		51020	0					
ANR	52676	Identifier	p_end		51020	1					
ANR	52677	Identifier	chars_read		51020	1					
ANR	52678	ExpressionStatement	"p_line [ p_end ] = savebuf ( s , chars_read )"	1505:2:41254:41293	51020	72	True				
ANR	52679	AssignmentExpression	"p_line [ p_end ] = savebuf ( s , chars_read )"		51020	0		=			
ANR	52680	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	52681	Identifier	p_line		51020	0					
ANR	52682	Identifier	p_end		51020	1					
ANR	52683	CallExpression	"savebuf ( s , chars_read )"		51020	1					
ANR	52684	Callee	savebuf		51020	0					
ANR	52685	Identifier	savebuf		51020	0					
ANR	52686	ArgumentList	s		51020	1					
ANR	52687	Argument	s		51020	0					
ANR	52688	Identifier	s		51020	0					
ANR	52689	Argument	chars_read		51020	1					
ANR	52690	Identifier	chars_read		51020	0					
ANR	52691	IfStatement	if ( chars_read && ! p_line [ p_end ] )		51020	73					
ANR	52692	Condition	chars_read && ! p_line [ p_end ]	1506:6:41301:41329	51020	0	True				
ANR	52693	AndExpression	chars_read && ! p_line [ p_end ]		51020	0		&&			
ANR	52694	Identifier	chars_read		51020	0					
ANR	52695	UnaryOperationExpression	! p_line [ p_end ]		51020	1					
ANR	52696	UnaryOperator	!		51020	0					
ANR	52697	ArrayIndexing	p_line [ p_end ]		51020	1					
ANR	52698	Identifier	p_line		51020	0					
ANR	52699	Identifier	p_end		51020	1					
ANR	52700	CompoundStatement		336:37:9027:9027	51020	1					
ANR	52701	ExpressionStatement	p_end --	1507:6:41340:41347	51020	0	True				
ANR	52702	PostIncDecOperationExpression	p_end --		51020	0					
ANR	52703	Identifier	p_end		51020	0					
ANR	52704	IncDec	--		51020	1					
ANR	52705	ReturnStatement	return - 1 ;	1508:6:41355:41364	51020	1	True				
ANR	52706	UnaryOperationExpression	- 1		51020	0					
ANR	52707	UnaryOperator	-		51020	0					
ANR	52708	PrimaryExpression	1		51020	1					
ANR	52709	BreakStatement	break ;	1510:2:41372:41377	51020	74	True				
ANR	52710	Label	default :	1511:5:41384:41391	51020	75	True				
ANR	52711	Identifier	default		51020	0					
ANR	52712	IfStatement	if ( repl_beginning && repl_could_be_missing )		51020	76					
ANR	52713	Condition	repl_beginning && repl_could_be_missing	1512:6:41399:41437	51020	0	True				
ANR	52714	AndExpression	repl_beginning && repl_could_be_missing		51020	0		&&			
ANR	52715	Identifier	repl_beginning		51020	0					
ANR	52716	Identifier	repl_could_be_missing		51020	1					
ANR	52717	CompoundStatement		342:47:9135:9135	51020	1					
ANR	52718	ExpressionStatement	repl_missing = true	1513:6:41448:41467	51020	0	True				
ANR	52719	AssignmentExpression	repl_missing = true		51020	0		=			
ANR	52720	Identifier	repl_missing		51020	0					
ANR	52721	Identifier	true		51020	1					
ANR	52722	GotoStatement	goto hunk_done ;	1514:6:41475:41489	51020	1	True				
ANR	52723	Identifier	hunk_done		51020	0					
ANR	52724	ExpressionStatement	malformed ( )	1516:2:41497:41509	51020	77	True				
ANR	52725	CallExpression	malformed ( )		51020	0					
ANR	52726	Callee	malformed		51020	0					
ANR	52727	Identifier	malformed		51020	0					
ANR	52728	ArgumentList			51020	1					
ANR	52729	Label	hunk_done :	1520:4:41526:41535	51020	26	True				
ANR	52730	Identifier	hunk_done		51020	0					
ANR	52731	IfStatement	if ( p_end >= 0 && ! repl_beginning )		51020	27					
ANR	52732	Condition	p_end >= 0 && ! repl_beginning	1521:5:41542:41569	51020	0	True				
ANR	52733	AndExpression	p_end >= 0 && ! repl_beginning		51020	0		&&			
ANR	52734	RelationalExpression	p_end >= 0		51020	0		>=			
ANR	52735	Identifier	p_end		51020	0					
ANR	52736	PrimaryExpression	0		51020	1					
ANR	52737	UnaryOperationExpression	! repl_beginning		51020	1					
ANR	52738	UnaryOperator	!		51020	0					
ANR	52739	Identifier	repl_beginning		51020	1					
ANR	52740	ExpressionStatement	"fatal ( ""no '---' found in patch at line %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) )"	1522:3:41575:41665	51020	1	True				
ANR	52741	CallExpression	"fatal ( ""no '---' found in patch at line %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) )"		51020	0					
ANR	52742	Callee	fatal		51020	0					
ANR	52743	Identifier	fatal		51020	0					
ANR	52744	ArgumentList	"""no '---' found in patch at line %s"""		51020	1					
ANR	52745	Argument	"""no '---' found in patch at line %s"""		51020	0					
ANR	52746	PrimaryExpression	"""no '---' found in patch at line %s"""		51020	0					
ANR	52747	Argument	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		51020	1					
ANR	52748	CallExpression	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		51020	0					
ANR	52749	Callee	format_linenum		51020	0					
ANR	52750	Identifier	format_linenum		51020	0					
ANR	52751	ArgumentList	numbuf0		51020	1					
ANR	52752	Argument	numbuf0		51020	0					
ANR	52753	Identifier	numbuf0		51020	0					
ANR	52754	Argument	pch_hunk_beg ( )		51020	1					
ANR	52755	CallExpression	pch_hunk_beg ( )		51020	0					
ANR	52756	Callee	pch_hunk_beg		51020	0					
ANR	52757	Identifier	pch_hunk_beg		51020	0					
ANR	52758	ArgumentList			51020	1					
ANR	52759	IfStatement	if ( repl_missing )		51020	28					
ANR	52760	Condition	repl_missing	1525:5:41673:41684	51020	0	True				
ANR	52761	Identifier	repl_missing		51020	0					
ANR	52762	CompoundStatement		355:19:9382:9382	51020	1					
ANR	52763	ExpressionStatement	p_input_line = repl_patch_line	1528:5:41741:41771	51020	0	True				
ANR	52764	AssignmentExpression	p_input_line = repl_patch_line		51020	0		=			
ANR	52765	Identifier	p_input_line		51020	0					
ANR	52766	Identifier	repl_patch_line		51020	1					
ANR	52767	ExpressionStatement	context = repl_context	1529:5:41778:41800	51020	1	True				
ANR	52768	AssignmentExpression	context = repl_context		51020	0		=			
ANR	52769	Identifier	context		51020	0					
ANR	52770	Identifier	repl_context		51020	1					
ANR	52771	ForStatement	for ( p_end -- ; p_end > repl_beginning ; p_end -- )		51020	2					
ANR	52772	ForInit	p_end -- ;	1530:10:41812:41819	51020	0	True				
ANR	52773	PostIncDecOperationExpression	p_end --		51020	0					
ANR	52774	Identifier	p_end		51020	0					
ANR	52775	IncDec	--		51020	1					
ANR	52776	Condition	p_end > repl_beginning	1530:19:41821:41842	51020	1	True				
ANR	52777	RelationalExpression	p_end > repl_beginning		51020	0		>			
ANR	52778	Identifier	p_end		51020	0					
ANR	52779	Identifier	repl_beginning		51020	1					
ANR	52780	PostIncDecOperationExpression	p_end --	1530:43:41845:41851	51020	2	True				
ANR	52781	Identifier	p_end		51020	0					
ANR	52782	IncDec	--		51020	1					
ANR	52783	ExpressionStatement	free ( p_line [ p_end ] )	1531:2:41856:41875	51020	3	True				
ANR	52784	CallExpression	free ( p_line [ p_end ] )		51020	0					
ANR	52785	Callee	free		51020	0					
ANR	52786	Identifier	free		51020	0					
ANR	52787	ArgumentList	p_line [ p_end ]		51020	1					
ANR	52788	Argument	p_line [ p_end ]		51020	0					
ANR	52789	ArrayIndexing	p_line [ p_end ]		51020	0					
ANR	52790	Identifier	p_line		51020	0					
ANR	52791	Identifier	p_end		51020	1					
ANR	52792	ExpressionStatement	"Fseek ( pfp , repl_backtrack_position , SEEK_SET )"	1532:5:41882:41928	51020	3	True				
ANR	52793	CallExpression	"Fseek ( pfp , repl_backtrack_position , SEEK_SET )"		51020	0					
ANR	52794	Callee	Fseek		51020	0					
ANR	52795	Identifier	Fseek		51020	0					
ANR	52796	ArgumentList	pfp		51020	1					
ANR	52797	Argument	pfp		51020	0					
ANR	52798	Identifier	pfp		51020	0					
ANR	52799	Argument	repl_backtrack_position		51020	1					
ANR	52800	Identifier	repl_backtrack_position		51020	0					
ANR	52801	Argument	SEEK_SET		51020	2					
ANR	52802	Identifier	SEEK_SET		51020	0					
ANR	52803	ExpressionStatement	fillsrc = 1	1536:5:42052:42063	51020	4	True				
ANR	52804	AssignmentExpression	fillsrc = 1		51020	0		=			
ANR	52805	Identifier	fillsrc		51020	0					
ANR	52806	PrimaryExpression	1		51020	1					
ANR	52807	ExpressionStatement	filldst = repl_beginning + 1	1537:5:42070:42096	51020	5	True				
ANR	52808	AssignmentExpression	filldst = repl_beginning + 1		51020	0		=			
ANR	52809	Identifier	filldst		51020	0					
ANR	52810	AdditiveExpression	repl_beginning + 1		51020	1		+			
ANR	52811	Identifier	repl_beginning		51020	0					
ANR	52812	PrimaryExpression	1		51020	1					
ANR	52813	ExpressionStatement	fillcnt = p_repl_lines	1538:5:42103:42125	51020	6	True				
ANR	52814	AssignmentExpression	fillcnt = p_repl_lines		51020	0		=			
ANR	52815	Identifier	fillcnt		51020	0					
ANR	52816	Identifier	p_repl_lines		51020	1					
ANR	52817	ExpressionStatement	p_end = p_max	1539:5:42132:42145	51020	7	True				
ANR	52818	AssignmentExpression	p_end = p_max		51020	0		=			
ANR	52819	Identifier	p_end		51020	0					
ANR	52820	Identifier	p_max		51020	1					
ANR	52821	ElseStatement	else		51020	0					
ANR	52822	IfStatement	if ( ! ptrn_missing && ptrn_copiable != repl_copiable )		51020	0					
ANR	52823	Condition	! ptrn_missing && ptrn_copiable != repl_copiable	1541:10:42160:42207	51020	0	True				
ANR	52824	AndExpression	! ptrn_missing && ptrn_copiable != repl_copiable		51020	0		&&			
ANR	52825	UnaryOperationExpression	! ptrn_missing		51020	0					
ANR	52826	UnaryOperator	!		51020	0					
ANR	52827	Identifier	ptrn_missing		51020	1					
ANR	52828	EqualityExpression	ptrn_copiable != repl_copiable		51020	1		!=			
ANR	52829	Identifier	ptrn_copiable		51020	0					
ANR	52830	Identifier	repl_copiable		51020	1					
ANR	52831	ExpressionStatement	"fatal ( ""context mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1542:3:42213:42298	51020	1	True				
ANR	52832	CallExpression	"fatal ( ""context mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		51020	0					
ANR	52833	Callee	fatal		51020	0					
ANR	52834	Identifier	fatal		51020	0					
ANR	52835	ArgumentList	"""context mangled in hunk at line %s"""		51020	1					
ANR	52836	Argument	"""context mangled in hunk at line %s"""		51020	0					
ANR	52837	PrimaryExpression	"""context mangled in hunk at line %s"""		51020	0					
ANR	52838	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	1					
ANR	52839	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	0					
ANR	52840	Callee	format_linenum		51020	0					
ANR	52841	Identifier	format_linenum		51020	0					
ANR	52842	ArgumentList	numbuf0		51020	1					
ANR	52843	Argument	numbuf0		51020	0					
ANR	52844	Identifier	numbuf0		51020	0					
ANR	52845	Argument	p_hunk_beg		51020	1					
ANR	52846	Identifier	p_hunk_beg		51020	0					
ANR	52847	ElseStatement	else		51020	0					
ANR	52848	IfStatement	if ( ! some_context && fillcnt == 1 )		51020	0					
ANR	52849	Condition	! some_context && fillcnt == 1	1544:10:42310:42338	51020	0	True				
ANR	52850	AndExpression	! some_context && fillcnt == 1		51020	0		&&			
ANR	52851	UnaryOperationExpression	! some_context		51020	0					
ANR	52852	UnaryOperator	!		51020	0					
ANR	52853	Identifier	some_context		51020	1					
ANR	52854	EqualityExpression	fillcnt == 1		51020	1		==			
ANR	52855	Identifier	fillcnt		51020	0					
ANR	52856	PrimaryExpression	1		51020	1					
ANR	52857	CompoundStatement		374:41:10036:10036	51020	1					
ANR	52858	WhileStatement	while ( filldst < p_end )		51020	0					
ANR	52859	Condition	filldst < p_end	1547:12:42469:42483	51020	0	True				
ANR	52860	RelationalExpression	filldst < p_end		51020	0		<			
ANR	52861	Identifier	filldst		51020	0					
ANR	52862	Identifier	p_end		51020	1					
ANR	52863	CompoundStatement		377:29:10181:10181	51020	1					
ANR	52864	ExpressionStatement	p_line [ filldst ] = p_line [ filldst + 1 ]	1548:2:42490:42525	51020	0	True				
ANR	52865	AssignmentExpression	p_line [ filldst ] = p_line [ filldst + 1 ]		51020	0		=			
ANR	52866	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	52867	Identifier	p_line		51020	0					
ANR	52868	Identifier	filldst		51020	1					
ANR	52869	ArrayIndexing	p_line [ filldst + 1 ]		51020	1					
ANR	52870	Identifier	p_line		51020	0					
ANR	52871	AdditiveExpression	filldst + 1		51020	1		+			
ANR	52872	Identifier	filldst		51020	0					
ANR	52873	PrimaryExpression	1		51020	1					
ANR	52874	ExpressionStatement	p_Char [ filldst ] = p_Char [ filldst + 1 ]	1549:2:42529:42564	51020	1	True				
ANR	52875	AssignmentExpression	p_Char [ filldst ] = p_Char [ filldst + 1 ]		51020	0		=			
ANR	52876	ArrayIndexing	p_Char [ filldst ]		51020	0					
ANR	52877	Identifier	p_Char		51020	0					
ANR	52878	Identifier	filldst		51020	1					
ANR	52879	ArrayIndexing	p_Char [ filldst + 1 ]		51020	1					
ANR	52880	Identifier	p_Char		51020	0					
ANR	52881	AdditiveExpression	filldst + 1		51020	1		+			
ANR	52882	Identifier	filldst		51020	0					
ANR	52883	PrimaryExpression	1		51020	1					
ANR	52884	ExpressionStatement	p_len [ filldst ] = p_len [ filldst + 1 ]	1550:2:42568:42601	51020	2	True				
ANR	52885	AssignmentExpression	p_len [ filldst ] = p_len [ filldst + 1 ]		51020	0		=			
ANR	52886	ArrayIndexing	p_len [ filldst ]		51020	0					
ANR	52887	Identifier	p_len		51020	0					
ANR	52888	Identifier	filldst		51020	1					
ANR	52889	ArrayIndexing	p_len [ filldst + 1 ]		51020	1					
ANR	52890	Identifier	p_len		51020	0					
ANR	52891	AdditiveExpression	filldst + 1		51020	1		+			
ANR	52892	Identifier	filldst		51020	0					
ANR	52893	PrimaryExpression	1		51020	1					
ANR	52894	ExpressionStatement	filldst ++	1551:2:42605:42614	51020	3	True				
ANR	52895	PostIncDecOperationExpression	filldst ++		51020	0					
ANR	52896	Identifier	filldst		51020	0					
ANR	52897	IncDec	++		51020	1					
ANR	52898	ExpressionStatement	repl_beginning --	1554:5:42634:42650	51020	1	True				
ANR	52899	PostIncDecOperationExpression	repl_beginning --		51020	0					
ANR	52900	Identifier	repl_beginning		51020	0					
ANR	52901	IncDec	--		51020	1					
ANR	52902	ExpressionStatement	p_end --	1556:5:42701:42708	51020	2	True				
ANR	52903	PostIncDecOperationExpression	p_end --		51020	0					
ANR	52904	Identifier	p_end		51020	0					
ANR	52905	IncDec	--		51020	1					
ANR	52906	ExpressionStatement	p_first ++	1557:5:42715:42724	51020	3	True				
ANR	52907	PostIncDecOperationExpression	p_first ++		51020	0					
ANR	52908	Identifier	p_first		51020	0					
ANR	52909	IncDec	++		51020	1					
ANR	52910	ExpressionStatement	fillcnt = 0	1558:5:42768:42779	51020	4	True				
ANR	52911	AssignmentExpression	fillcnt = 0		51020	0		=			
ANR	52912	Identifier	fillcnt		51020	0					
ANR	52913	PrimaryExpression	0		51020	1					
ANR	52914	ExpressionStatement	p_ptrn_lines = 0	1559:5:42786:42802	51020	5	True				
ANR	52915	AssignmentExpression	p_ptrn_lines = 0		51020	0		=			
ANR	52916	Identifier	p_ptrn_lines		51020	0					
ANR	52917	PrimaryExpression	0		51020	1					
ANR	52918	ExpressionStatement	p_prefix_context = ( ( repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context ) ) ? ptrn_prefix_context : repl_prefix_context )	1562:1:42809:42997	51020	29	True				
ANR	52919	AssignmentExpression	p_prefix_context = ( ( repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context ) ) ? ptrn_prefix_context : repl_prefix_context )		51020	0		=			
ANR	52920	Identifier	p_prefix_context		51020	0					
ANR	52921	ConditionalExpression	( repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context ) ) ? ptrn_prefix_context : repl_prefix_context		51020	1					
ANR	52922	Condition	repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context )		51020	0					
ANR	52923	OrExpression	repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context )		51020	0		||			
ANR	52924	EqualityExpression	repl_prefix_context == - 1		51020	0		==			
ANR	52925	Identifier	repl_prefix_context		51020	0					
ANR	52926	UnaryOperationExpression	- 1		51020	1					
ANR	52927	UnaryOperator	-		51020	0					
ANR	52928	PrimaryExpression	1		51020	1					
ANR	52929	AndExpression	ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context		51020	1		&&			
ANR	52930	EqualityExpression	ptrn_prefix_context != - 1		51020	0		!=			
ANR	52931	Identifier	ptrn_prefix_context		51020	0					
ANR	52932	UnaryOperationExpression	- 1		51020	1					
ANR	52933	UnaryOperator	-		51020	0					
ANR	52934	PrimaryExpression	1		51020	1					
ANR	52935	RelationalExpression	ptrn_prefix_context < repl_prefix_context		51020	1		<			
ANR	52936	Identifier	ptrn_prefix_context		51020	0					
ANR	52937	Identifier	repl_prefix_context		51020	1					
ANR	52938	Identifier	ptrn_prefix_context		51020	1					
ANR	52939	Identifier	repl_prefix_context		51020	2					
ANR	52940	ExpressionStatement	p_suffix_context = ( ( ptrn_suffix_context != - 1 && ptrn_suffix_context < context ) ? ptrn_suffix_context : context )	1566:1:43000:43128	51020	30	True				
ANR	52941	AssignmentExpression	p_suffix_context = ( ( ptrn_suffix_context != - 1 && ptrn_suffix_context < context ) ? ptrn_suffix_context : context )		51020	0		=			
ANR	52942	Identifier	p_suffix_context		51020	0					
ANR	52943	ConditionalExpression	( ptrn_suffix_context != - 1 && ptrn_suffix_context < context ) ? ptrn_suffix_context : context		51020	1					
ANR	52944	Condition	ptrn_suffix_context != - 1 && ptrn_suffix_context < context		51020	0					
ANR	52945	AndExpression	ptrn_suffix_context != - 1 && ptrn_suffix_context < context		51020	0		&&			
ANR	52946	EqualityExpression	ptrn_suffix_context != - 1		51020	0		!=			
ANR	52947	Identifier	ptrn_suffix_context		51020	0					
ANR	52948	UnaryOperationExpression	- 1		51020	1					
ANR	52949	UnaryOperator	-		51020	0					
ANR	52950	PrimaryExpression	1		51020	1					
ANR	52951	RelationalExpression	ptrn_suffix_context < context		51020	1		<			
ANR	52952	Identifier	ptrn_suffix_context		51020	0					
ANR	52953	Identifier	context		51020	1					
ANR	52954	Identifier	ptrn_suffix_context		51020	1					
ANR	52955	Identifier	context		51020	2					
ANR	52956	IfStatement	if ( p_prefix_context == - 1 || p_suffix_context == - 1 )		51020	31					
ANR	52957	Condition	p_prefix_context == - 1 || p_suffix_context == - 1	1569:5:43135:43182	51020	0	True				
ANR	52958	OrExpression	p_prefix_context == - 1 || p_suffix_context == - 1		51020	0		||			
ANR	52959	EqualityExpression	p_prefix_context == - 1		51020	0		==			
ANR	52960	Identifier	p_prefix_context		51020	0					
ANR	52961	UnaryOperationExpression	- 1		51020	1					
ANR	52962	UnaryOperator	-		51020	0					
ANR	52963	PrimaryExpression	1		51020	1					
ANR	52964	EqualityExpression	p_suffix_context == - 1		51020	1		==			
ANR	52965	Identifier	p_suffix_context		51020	0					
ANR	52966	UnaryOperationExpression	- 1		51020	1					
ANR	52967	UnaryOperator	-		51020	0					
ANR	52968	PrimaryExpression	1		51020	1					
ANR	52969	ExpressionStatement	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1570:5:43190:43302	51020	1	True				
ANR	52970	CallExpression	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		51020	0					
ANR	52971	Callee	fatal		51020	0					
ANR	52972	Identifier	fatal		51020	0					
ANR	52973	ArgumentList	"""replacement text or line numbers mangled in hunk at line %s"""		51020	1					
ANR	52974	Argument	"""replacement text or line numbers mangled in hunk at line %s"""		51020	0					
ANR	52975	PrimaryExpression	"""replacement text or line numbers mangled in hunk at line %s"""		51020	0					
ANR	52976	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	1					
ANR	52977	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	0					
ANR	52978	Callee	format_linenum		51020	0					
ANR	52979	Identifier	format_linenum		51020	0					
ANR	52980	ArgumentList	numbuf0		51020	1					
ANR	52981	Argument	numbuf0		51020	0					
ANR	52982	Identifier	numbuf0		51020	0					
ANR	52983	Argument	p_hunk_beg		51020	1					
ANR	52984	Identifier	p_hunk_beg		51020	0					
ANR	52985	IfStatement	if ( difftype == CONTEXT_DIFF && ( fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable ) ) )		51020	32					
ANR	52986	Condition	difftype == CONTEXT_DIFF && ( fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable ) )	1573:5:43310:43431	51020	0	True				
ANR	52987	AndExpression	difftype == CONTEXT_DIFF && ( fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable ) )		51020	0		&&			
ANR	52988	EqualityExpression	difftype == CONTEXT_DIFF		51020	0		==			
ANR	52989	Identifier	difftype		51020	0					
ANR	52990	Identifier	CONTEXT_DIFF		51020	1					
ANR	52991	OrExpression	fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable )		51020	1		||			
ANR	52992	Identifier	fillcnt		51020	0					
ANR	52993	AndExpression	p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable		51020	1		&&			
ANR	52994	RelationalExpression	p_first > 1		51020	0		>			
ANR	52995	Identifier	p_first		51020	0					
ANR	52996	PrimaryExpression	1		51020	1					
ANR	52997	RelationalExpression	p_prefix_context + p_suffix_context < ptrn_copiable		51020	1		<			
ANR	52998	AdditiveExpression	p_prefix_context + p_suffix_context		51020	0		+			
ANR	52999	Identifier	p_prefix_context		51020	0					
ANR	53000	Identifier	p_suffix_context		51020	1					
ANR	53001	Identifier	ptrn_copiable		51020	1					
ANR	53002	CompoundStatement		406:64:11129:11129	51020	1					
ANR	53003	IfStatement	if ( verbosity == VERBOSE )		51020	0					
ANR	53004	Condition	verbosity == VERBOSE	1577:9:43445:43464	51020	0	True				
ANR	53005	EqualityExpression	verbosity == VERBOSE		51020	0		==			
ANR	53006	Identifier	verbosity		51020	0					
ANR	53007	Identifier	VERBOSE		51020	1					
ANR	53008	ExpressionStatement	"say ( ""%s\\n%s\\n%s\\n"" , ""(Fascinating -- this is really a new-style context diff but without"" , ""the telltale extra asterisks on the *** line that usually indicate"" , ""the new style...)"" )"	1578:2:43469:43651	51020	1	True				
ANR	53009	CallExpression	"say ( ""%s\\n%s\\n%s\\n"" , ""(Fascinating -- this is really a new-style context diff but without"" , ""the telltale extra asterisks on the *** line that usually indicate"" , ""the new style...)"" )"		51020	0					
ANR	53010	Callee	say		51020	0					
ANR	53011	Identifier	say		51020	0					
ANR	53012	ArgumentList	"""%s\\n%s\\n%s\\n"""		51020	1					
ANR	53013	Argument	"""%s\\n%s\\n%s\\n"""		51020	0					
ANR	53014	PrimaryExpression	"""%s\\n%s\\n%s\\n"""		51020	0					
ANR	53015	Argument	"""(Fascinating -- this is really a new-style context diff but without"""		51020	1					
ANR	53016	PrimaryExpression	"""(Fascinating -- this is really a new-style context diff but without"""		51020	0					
ANR	53017	Argument	"""the telltale extra asterisks on the *** line that usually indicate"""		51020	2					
ANR	53018	PrimaryExpression	"""the telltale extra asterisks on the *** line that usually indicate"""		51020	0					
ANR	53019	Argument	"""the new style...)"""		51020	3					
ANR	53020	PrimaryExpression	"""the new style...)"""		51020	0					
ANR	53021	ExpressionStatement	diff_type = difftype = NEW_CONTEXT_DIFF	1582:5:43658:43697	51020	1	True				
ANR	53022	AssignmentExpression	diff_type = difftype = NEW_CONTEXT_DIFF		51020	0		=			
ANR	53023	Identifier	diff_type		51020	0					
ANR	53024	AssignmentExpression	difftype = NEW_CONTEXT_DIFF		51020	1		=			
ANR	53025	Identifier	difftype		51020	0					
ANR	53026	Identifier	NEW_CONTEXT_DIFF		51020	1					
ANR	53027	IfStatement	if ( fillcnt )		51020	33					
ANR	53028	Condition	fillcnt	1586:5:43769:43775	51020	0	True				
ANR	53029	Identifier	fillcnt		51020	0					
ANR	53030	CompoundStatement		416:14:11473:11473	51020	1					
ANR	53031	ExpressionStatement	p_bfake = filldst	1587:5:43785:43802	51020	0	True				
ANR	53032	AssignmentExpression	p_bfake = filldst		51020	0		=			
ANR	53033	Identifier	p_bfake		51020	0					
ANR	53034	Identifier	filldst		51020	1					
ANR	53035	ExpressionStatement	p_efake = filldst + fillcnt - 1	1588:5:43845:43876	51020	1	True				
ANR	53036	AssignmentExpression	p_efake = filldst + fillcnt - 1		51020	0		=			
ANR	53037	Identifier	p_efake		51020	0					
ANR	53038	AdditiveExpression	filldst + fillcnt - 1		51020	1		+			
ANR	53039	Identifier	filldst		51020	0					
ANR	53040	AdditiveExpression	fillcnt - 1		51020	1		-			
ANR	53041	Identifier	fillcnt		51020	0					
ANR	53042	PrimaryExpression	1		51020	1					
ANR	53043	WhileStatement	while ( fillcnt -- > 0 )		51020	2					
ANR	53044	Condition	fillcnt -- > 0	1589:12:43890:43902	51020	0	True				
ANR	53045	RelationalExpression	fillcnt -- > 0		51020	0		>			
ANR	53046	PostIncDecOperationExpression	fillcnt --		51020	0					
ANR	53047	Identifier	fillcnt		51020	0					
ANR	53048	IncDec	--		51020	1					
ANR	53049	PrimaryExpression	0		51020	1					
ANR	53050	CompoundStatement		419:27:11600:11600	51020	1					
ANR	53051	WhileStatement	while ( fillsrc <= p_end && fillsrc != repl_beginning && p_Char [ fillsrc ] != ' ' )		51020	0					
ANR	53052	Condition	fillsrc <= p_end && fillsrc != repl_beginning && p_Char [ fillsrc ] != ' '	1590:9:43916:43995	51020	0	True				
ANR	53053	AndExpression	fillsrc <= p_end && fillsrc != repl_beginning && p_Char [ fillsrc ] != ' '		51020	0		&&			
ANR	53054	RelationalExpression	fillsrc <= p_end		51020	0		<=			
ANR	53055	Identifier	fillsrc		51020	0					
ANR	53056	Identifier	p_end		51020	1					
ANR	53057	AndExpression	fillsrc != repl_beginning && p_Char [ fillsrc ] != ' '		51020	1		&&			
ANR	53058	EqualityExpression	fillsrc != repl_beginning		51020	0		!=			
ANR	53059	Identifier	fillsrc		51020	0					
ANR	53060	Identifier	repl_beginning		51020	1					
ANR	53061	EqualityExpression	p_Char [ fillsrc ] != ' '		51020	1		!=			
ANR	53062	ArrayIndexing	p_Char [ fillsrc ]		51020	0					
ANR	53063	Identifier	p_Char		51020	0					
ANR	53064	Identifier	fillsrc		51020	1					
ANR	53065	PrimaryExpression	' '		51020	1					
ANR	53066	ExpressionStatement	fillsrc ++	1592:6:44004:44013	51020	1	True				
ANR	53067	PostIncDecOperationExpression	fillsrc ++		51020	0					
ANR	53068	Identifier	fillsrc		51020	0					
ANR	53069	IncDec	++		51020	1					
ANR	53070	IfStatement	if ( p_end < fillsrc || fillsrc == repl_beginning )		51020	1					
ANR	53071	Condition	p_end < fillsrc || fillsrc == repl_beginning	1593:6:44021:44064	51020	0	True				
ANR	53072	OrExpression	p_end < fillsrc || fillsrc == repl_beginning		51020	0		||			
ANR	53073	RelationalExpression	p_end < fillsrc		51020	0		<			
ANR	53074	Identifier	p_end		51020	0					
ANR	53075	Identifier	fillsrc		51020	1					
ANR	53076	EqualityExpression	fillsrc == repl_beginning		51020	1		==			
ANR	53077	Identifier	fillsrc		51020	0					
ANR	53078	Identifier	repl_beginning		51020	1					
ANR	53079	CompoundStatement		424:4:11766:11766	51020	1					
ANR	53080	ExpressionStatement	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1595:6:44079:44192	51020	0	True				
ANR	53081	CallExpression	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		51020	0					
ANR	53082	Callee	fatal		51020	0					
ANR	53083	Identifier	fatal		51020	0					
ANR	53084	ArgumentList	"""replacement text or line numbers mangled in hunk at line %s"""		51020	1					
ANR	53085	Argument	"""replacement text or line numbers mangled in hunk at line %s"""		51020	0					
ANR	53086	PrimaryExpression	"""replacement text or line numbers mangled in hunk at line %s"""		51020	0					
ANR	53087	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	1					
ANR	53088	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	0					
ANR	53089	Callee	format_linenum		51020	0					
ANR	53090	Identifier	format_linenum		51020	0					
ANR	53091	ArgumentList	numbuf0		51020	1					
ANR	53092	Argument	numbuf0		51020	0					
ANR	53093	Identifier	numbuf0		51020	0					
ANR	53094	Argument	p_hunk_beg		51020	1					
ANR	53095	Identifier	p_hunk_beg		51020	0					
ANR	53096	ExpressionStatement	p_line [ filldst ] = p_line [ fillsrc ]	1598:2:44202:44235	51020	2	True				
ANR	53097	AssignmentExpression	p_line [ filldst ] = p_line [ fillsrc ]		51020	0		=			
ANR	53098	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	53099	Identifier	p_line		51020	0					
ANR	53100	Identifier	filldst		51020	1					
ANR	53101	ArrayIndexing	p_line [ fillsrc ]		51020	1					
ANR	53102	Identifier	p_line		51020	0					
ANR	53103	Identifier	fillsrc		51020	1					
ANR	53104	ExpressionStatement	p_Char [ filldst ] = p_Char [ fillsrc ]	1599:2:44239:44272	51020	3	True				
ANR	53105	AssignmentExpression	p_Char [ filldst ] = p_Char [ fillsrc ]		51020	0		=			
ANR	53106	ArrayIndexing	p_Char [ filldst ]		51020	0					
ANR	53107	Identifier	p_Char		51020	0					
ANR	53108	Identifier	filldst		51020	1					
ANR	53109	ArrayIndexing	p_Char [ fillsrc ]		51020	1					
ANR	53110	Identifier	p_Char		51020	0					
ANR	53111	Identifier	fillsrc		51020	1					
ANR	53112	ExpressionStatement	p_len [ filldst ] = p_len [ fillsrc ]	1600:2:44276:44307	51020	4	True				
ANR	53113	AssignmentExpression	p_len [ filldst ] = p_len [ fillsrc ]		51020	0		=			
ANR	53114	ArrayIndexing	p_len [ filldst ]		51020	0					
ANR	53115	Identifier	p_len		51020	0					
ANR	53116	Identifier	filldst		51020	1					
ANR	53117	ArrayIndexing	p_len [ fillsrc ]		51020	1					
ANR	53118	Identifier	p_len		51020	0					
ANR	53119	Identifier	fillsrc		51020	1					
ANR	53120	ExpressionStatement	fillsrc ++	1601:2:44311:44320	51020	5	True				
ANR	53121	PostIncDecOperationExpression	fillsrc ++		51020	0					
ANR	53122	Identifier	fillsrc		51020	0					
ANR	53123	IncDec	++		51020	1					
ANR	53124	ExpressionStatement	filldst ++	1601:13:44322:44331	51020	6	True				
ANR	53125	PostIncDecOperationExpression	filldst ++		51020	0					
ANR	53126	Identifier	filldst		51020	0					
ANR	53127	IncDec	++		51020	1					
ANR	53128	WhileStatement	while ( fillsrc <= p_end && fillsrc != repl_beginning )		51020	3					
ANR	53129	Condition	fillsrc <= p_end && fillsrc != repl_beginning	1603:12:44352:44396	51020	0	True				
ANR	53130	AndExpression	fillsrc <= p_end && fillsrc != repl_beginning		51020	0		&&			
ANR	53131	RelationalExpression	fillsrc <= p_end		51020	0		<=			
ANR	53132	Identifier	fillsrc		51020	0					
ANR	53133	Identifier	p_end		51020	1					
ANR	53134	EqualityExpression	fillsrc != repl_beginning		51020	1		!=			
ANR	53135	Identifier	fillsrc		51020	0					
ANR	53136	Identifier	repl_beginning		51020	1					
ANR	53137	CompoundStatement		434:7:12101:12101	51020	1					
ANR	53138	IfStatement	if ( p_Char [ fillsrc ] == ' ' )		51020	0					
ANR	53139	Condition	p_Char [ fillsrc ] == ' '	1605:6:44414:44435	51020	0	True				
ANR	53140	EqualityExpression	p_Char [ fillsrc ] == ' '		51020	0		==			
ANR	53141	ArrayIndexing	p_Char [ fillsrc ]		51020	0					
ANR	53142	Identifier	p_Char		51020	0					
ANR	53143	Identifier	fillsrc		51020	1					
ANR	53144	PrimaryExpression	' '		51020	1					
ANR	53145	ExpressionStatement	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1606:4:44442:44553	51020	1	True				
ANR	53146	CallExpression	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		51020	0					
ANR	53147	Callee	fatal		51020	0					
ANR	53148	Identifier	fatal		51020	0					
ANR	53149	ArgumentList	"""replacement text or line numbers mangled in hunk at line %s"""		51020	1					
ANR	53150	Argument	"""replacement text or line numbers mangled in hunk at line %s"""		51020	0					
ANR	53151	PrimaryExpression	"""replacement text or line numbers mangled in hunk at line %s"""		51020	0					
ANR	53152	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	1					
ANR	53153	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		51020	0					
ANR	53154	Callee	format_linenum		51020	0					
ANR	53155	Identifier	format_linenum		51020	0					
ANR	53156	ArgumentList	numbuf0		51020	1					
ANR	53157	Argument	numbuf0		51020	0					
ANR	53158	Identifier	numbuf0		51020	0					
ANR	53159	Argument	p_hunk_beg		51020	1					
ANR	53160	Identifier	p_hunk_beg		51020	0					
ANR	53161	ExpressionStatement	fillsrc ++	1608:2:44557:44566	51020	1	True				
ANR	53162	PostIncDecOperationExpression	fillsrc ++		51020	0					
ANR	53163	Identifier	fillsrc		51020	0					
ANR	53164	IncDec	++		51020	1					
ANR	53165	IfStatement	if ( debug & 64 )		51020	4					
ANR	53166	Condition	debug & 64	1610:9:44586:44595	51020	0	True				
ANR	53167	BitAndExpression	debug & 64		51020	0		&			
ANR	53168	Identifier	debug		51020	0					
ANR	53169	PrimaryExpression	64		51020	1					
ANR	53170	ExpressionStatement	"printf ( ""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"" , format_linenum ( numbuf0 , fillsrc ) , format_linenum ( numbuf1 , filldst ) , format_linenum ( numbuf2 , repl_beginning ) , format_linenum ( numbuf3 , p_end + 1 ) )"	1611:7:44605:44836	51020	1	True				
ANR	53171	CallExpression	"printf ( ""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"" , format_linenum ( numbuf0 , fillsrc ) , format_linenum ( numbuf1 , filldst ) , format_linenum ( numbuf2 , repl_beginning ) , format_linenum ( numbuf3 , p_end + 1 ) )"		51020	0					
ANR	53172	Callee	printf		51020	0					
ANR	53173	Identifier	printf		51020	0					
ANR	53174	ArgumentList	"""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"""		51020	1					
ANR	53175	Argument	"""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"""		51020	0					
ANR	53176	PrimaryExpression	"""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"""		51020	0					
ANR	53177	Argument	"format_linenum ( numbuf0 , fillsrc )"		51020	1					
ANR	53178	CallExpression	"format_linenum ( numbuf0 , fillsrc )"		51020	0					
ANR	53179	Callee	format_linenum		51020	0					
ANR	53180	Identifier	format_linenum		51020	0					
ANR	53181	ArgumentList	numbuf0		51020	1					
ANR	53182	Argument	numbuf0		51020	0					
ANR	53183	Identifier	numbuf0		51020	0					
ANR	53184	Argument	fillsrc		51020	1					
ANR	53185	Identifier	fillsrc		51020	0					
ANR	53186	Argument	"format_linenum ( numbuf1 , filldst )"		51020	2					
ANR	53187	CallExpression	"format_linenum ( numbuf1 , filldst )"		51020	0					
ANR	53188	Callee	format_linenum		51020	0					
ANR	53189	Identifier	format_linenum		51020	0					
ANR	53190	ArgumentList	numbuf1		51020	1					
ANR	53191	Argument	numbuf1		51020	0					
ANR	53192	Identifier	numbuf1		51020	0					
ANR	53193	Argument	filldst		51020	1					
ANR	53194	Identifier	filldst		51020	0					
ANR	53195	Argument	"format_linenum ( numbuf2 , repl_beginning )"		51020	3					
ANR	53196	CallExpression	"format_linenum ( numbuf2 , repl_beginning )"		51020	0					
ANR	53197	Callee	format_linenum		51020	0					
ANR	53198	Identifier	format_linenum		51020	0					
ANR	53199	ArgumentList	numbuf2		51020	1					
ANR	53200	Argument	numbuf2		51020	0					
ANR	53201	Identifier	numbuf2		51020	0					
ANR	53202	Argument	repl_beginning		51020	1					
ANR	53203	Identifier	repl_beginning		51020	0					
ANR	53204	Argument	"format_linenum ( numbuf3 , p_end + 1 )"		51020	4					
ANR	53205	CallExpression	"format_linenum ( numbuf3 , p_end + 1 )"		51020	0					
ANR	53206	Callee	format_linenum		51020	0					
ANR	53207	Identifier	format_linenum		51020	0					
ANR	53208	ArgumentList	numbuf3		51020	1					
ANR	53209	Argument	numbuf3		51020	0					
ANR	53210	Identifier	numbuf3		51020	0					
ANR	53211	Argument	p_end + 1		51020	1					
ANR	53212	AdditiveExpression	p_end + 1		51020	0		+			
ANR	53213	Identifier	p_end		51020	0					
ANR	53214	PrimaryExpression	1		51020	1					
ANR	53215	ExpressionStatement	assert ( fillsrc == p_end + 1 || fillsrc == repl_beginning )	1616:5:44843:44894	51020	5	True				
ANR	53216	CallExpression	assert ( fillsrc == p_end + 1 || fillsrc == repl_beginning )		51020	0					
ANR	53217	Callee	assert		51020	0					
ANR	53218	Identifier	assert		51020	0					
ANR	53219	ArgumentList	fillsrc == p_end + 1 || fillsrc == repl_beginning		51020	1					
ANR	53220	Argument	fillsrc == p_end + 1 || fillsrc == repl_beginning		51020	0					
ANR	53221	OrExpression	fillsrc == p_end + 1 || fillsrc == repl_beginning		51020	0		||			
ANR	53222	EqualityExpression	fillsrc == p_end + 1		51020	0		==			
ANR	53223	Identifier	fillsrc		51020	0					
ANR	53224	AdditiveExpression	p_end + 1		51020	1		+			
ANR	53225	Identifier	p_end		51020	0					
ANR	53226	PrimaryExpression	1		51020	1					
ANR	53227	EqualityExpression	fillsrc == repl_beginning		51020	1		==			
ANR	53228	Identifier	fillsrc		51020	0					
ANR	53229	Identifier	repl_beginning		51020	1					
ANR	53230	ExpressionStatement	assert ( filldst == p_end + 1 || filldst == repl_beginning )	1617:5:44901:44952	51020	6	True				
ANR	53231	CallExpression	assert ( filldst == p_end + 1 || filldst == repl_beginning )		51020	0					
ANR	53232	Callee	assert		51020	0					
ANR	53233	Identifier	assert		51020	0					
ANR	53234	ArgumentList	filldst == p_end + 1 || filldst == repl_beginning		51020	1					
ANR	53235	Argument	filldst == p_end + 1 || filldst == repl_beginning		51020	0					
ANR	53236	OrExpression	filldst == p_end + 1 || filldst == repl_beginning		51020	0		||			
ANR	53237	EqualityExpression	filldst == p_end + 1		51020	0		==			
ANR	53238	Identifier	filldst		51020	0					
ANR	53239	AdditiveExpression	p_end + 1		51020	1		+			
ANR	53240	Identifier	p_end		51020	0					
ANR	53241	PrimaryExpression	1		51020	1					
ANR	53242	EqualityExpression	filldst == repl_beginning		51020	1		==			
ANR	53243	Identifier	filldst		51020	0					
ANR	53244	Identifier	repl_beginning		51020	1					
ANR	53245	ElseStatement	else		51020	0					
ANR	53246	IfStatement	if ( difftype == UNI_DIFF )		51020	0					
ANR	53247	Condition	difftype == UNI_DIFF	1620:13:44976:44995	51020	0	True				
ANR	53248	EqualityExpression	difftype == UNI_DIFF		51020	0		==			
ANR	53249	Identifier	difftype		51020	0					
ANR	53250	Identifier	UNI_DIFF		51020	1					
ANR	53251	CompoundStatement		454:1:12859:12873	51020	1					
ANR	53252	IdentifierDeclStatement	file_offset line_beginning = file_tell ( pfp ) ;	1621:1:45001:45045	51020	0	True				
ANR	53253	IdentifierDecl	line_beginning = file_tell ( pfp )		51020	0					
ANR	53254	IdentifierDeclType	file_offset		51020	0					
ANR	53255	Identifier	line_beginning		51020	1					
ANR	53256	AssignmentExpression	line_beginning = file_tell ( pfp )		51020	2		=			
ANR	53257	Identifier	line_beginning		51020	0					
ANR	53258	CallExpression	file_tell ( pfp )		51020	1					
ANR	53259	Callee	file_tell		51020	0					
ANR	53260	Identifier	file_tell		51020	0					
ANR	53261	ArgumentList	pfp		51020	1					
ANR	53262	Argument	pfp		51020	0					
ANR	53263	Identifier	pfp		51020	0					
ANR	53264	IdentifierDeclStatement	lin fillsrc ;	1622:1:45084:45095	51020	1	True				
ANR	53265	IdentifierDecl	fillsrc		51020	0					
ANR	53266	IdentifierDeclType	lin		51020	0					
ANR	53267	Identifier	fillsrc		51020	1					
ANR	53268	IdentifierDeclStatement	lin filldst ;	1623:1:45124:45135	51020	2	True				
ANR	53269	IdentifierDecl	filldst		51020	0					
ANR	53270	IdentifierDeclType	lin		51020	0					
ANR	53271	Identifier	filldst		51020	1					
ANR	53272	IdentifierDeclStatement	char ch = '\\0' ;	1624:1:45164:45178	51020	3	True				
ANR	53273	IdentifierDecl	ch = '\\0'		51020	0					
ANR	53274	IdentifierDeclType	char		51020	0					
ANR	53275	Identifier	ch		51020	1					
ANR	53276	AssignmentExpression	ch = '\\0'		51020	2		=			
ANR	53277	Identifier	ch		51020	0					
ANR	53278	PrimaryExpression	'\\0'		51020	1					
ANR	53279	ExpressionStatement	chars_read = get_line ( )	1626:1:45182:45206	51020	4	True				
ANR	53280	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	53281	Identifier	chars_read		51020	0					
ANR	53282	CallExpression	get_line ( )		51020	1					
ANR	53283	Callee	get_line		51020	0					
ANR	53284	Identifier	get_line		51020	0					
ANR	53285	ArgumentList			51020	1					
ANR	53286	IfStatement	"if ( chars_read == ( size_t ) - 1 || chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0 )"		51020	5					
ANR	53287	Condition	"chars_read == ( size_t ) - 1 || chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0"	1627:5:45213:45299	51020	0	True				
ANR	53288	OrExpression	"chars_read == ( size_t ) - 1 || chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0"		51020	0		||			
ANR	53289	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	53290	Identifier	chars_read		51020	0					
ANR	53291	CastExpression	( size_t ) - 1		51020	1					
ANR	53292	CastTarget	size_t		51020	0					
ANR	53293	UnaryOperationExpression	- 1		51020	1					
ANR	53294	UnaryOperator	-		51020	0					
ANR	53295	PrimaryExpression	1		51020	1					
ANR	53296	OrExpression	"chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0"		51020	1		||			
ANR	53297	RelationalExpression	chars_read <= 4		51020	0		<=			
ANR	53298	Identifier	chars_read		51020	0					
ANR	53299	PrimaryExpression	4		51020	1					
ANR	53300	EqualityExpression	"strncmp ( buf , ""@@ -"" , 4 ) != 0"		51020	1		!=			
ANR	53301	CallExpression	"strncmp ( buf , ""@@ -"" , 4 )"		51020	0					
ANR	53302	Callee	strncmp		51020	0					
ANR	53303	Identifier	strncmp		51020	0					
ANR	53304	ArgumentList	buf		51020	1					
ANR	53305	Argument	buf		51020	0					
ANR	53306	Identifier	buf		51020	0					
ANR	53307	Argument	"""@@ -"""		51020	1					
ANR	53308	PrimaryExpression	"""@@ -"""		51020	0					
ANR	53309	Argument	4		51020	2					
ANR	53310	PrimaryExpression	4		51020	0					
ANR	53311	PrimaryExpression	0		51020	1					
ANR	53312	CompoundStatement		459:39:12997:12997	51020	1					
ANR	53313	ExpressionStatement	"next_intuit_at ( line_beginning , p_input_line )"	1630:5:45309:45352	51020	0	True				
ANR	53314	CallExpression	"next_intuit_at ( line_beginning , p_input_line )"		51020	0					
ANR	53315	Callee	next_intuit_at		51020	0					
ANR	53316	Identifier	next_intuit_at		51020	0					
ANR	53317	ArgumentList	line_beginning		51020	1					
ANR	53318	Argument	line_beginning		51020	0					
ANR	53319	Identifier	line_beginning		51020	0					
ANR	53320	Argument	p_input_line		51020	1					
ANR	53321	Identifier	p_input_line		51020	0					
ANR	53322	ReturnStatement	return chars_read == ( size_t ) - 1 ? - 1 : 0 ;	1631:5:45359:45400	51020	1	True				
ANR	53323	ConditionalExpression	chars_read == ( size_t ) - 1 ? - 1 : 0		51020	0					
ANR	53324	Condition	chars_read == ( size_t ) - 1		51020	0					
ANR	53325	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	53326	Identifier	chars_read		51020	0					
ANR	53327	CastExpression	( size_t ) - 1		51020	1					
ANR	53328	CastTarget	size_t		51020	0					
ANR	53329	UnaryOperationExpression	- 1		51020	1					
ANR	53330	UnaryOperator	-		51020	0					
ANR	53331	PrimaryExpression	1		51020	1					
ANR	53332	UnaryOperationExpression	- 1		51020	1					
ANR	53333	UnaryOperator	-		51020	0					
ANR	53334	PrimaryExpression	1		51020	1					
ANR	53335	PrimaryExpression	0		51020	2					
ANR	53336	ExpressionStatement	"s = scan_linenum ( buf + 4 , & p_first )"	1633:1:45406:45442	51020	6	True				
ANR	53337	AssignmentExpression	"s = scan_linenum ( buf + 4 , & p_first )"		51020	0		=			
ANR	53338	Identifier	s		51020	0					
ANR	53339	CallExpression	"scan_linenum ( buf + 4 , & p_first )"		51020	1					
ANR	53340	Callee	scan_linenum		51020	0					
ANR	53341	Identifier	scan_linenum		51020	0					
ANR	53342	ArgumentList	buf + 4		51020	1					
ANR	53343	Argument	buf + 4		51020	0					
ANR	53344	AdditiveExpression	buf + 4		51020	0		+			
ANR	53345	Identifier	buf		51020	0					
ANR	53346	PrimaryExpression	4		51020	1					
ANR	53347	Argument	& p_first		51020	1					
ANR	53348	UnaryOperationExpression	& p_first		51020	0					
ANR	53349	UnaryOperator	&		51020	0					
ANR	53350	Identifier	p_first		51020	1					
ANR	53351	IfStatement	"if ( * s == ',' )"		51020	7					
ANR	53352	Condition	"* s == ','"	1634:5:45449:45457	51020	0	True				
ANR	53353	EqualityExpression	"* s == ','"		51020	0		==			
ANR	53354	UnaryOperationExpression	* s		51020	0					
ANR	53355	UnaryOperator	*		51020	0					
ANR	53356	Identifier	s		51020	1					
ANR	53357	PrimaryExpression	"','"		51020	1					
ANR	53358	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"	1635:5:45465:45504	51020	1	True				
ANR	53359	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"		51020	0		=			
ANR	53360	Identifier	s		51020	0					
ANR	53361	CallExpression	"scan_linenum ( s + 1 , & p_ptrn_lines )"		51020	1					
ANR	53362	Callee	scan_linenum		51020	0					
ANR	53363	Identifier	scan_linenum		51020	0					
ANR	53364	ArgumentList	s + 1		51020	1					
ANR	53365	Argument	s + 1		51020	0					
ANR	53366	AdditiveExpression	s + 1		51020	0		+			
ANR	53367	Identifier	s		51020	0					
ANR	53368	PrimaryExpression	1		51020	1					
ANR	53369	Argument	& p_ptrn_lines		51020	1					
ANR	53370	UnaryOperationExpression	& p_ptrn_lines		51020	0					
ANR	53371	UnaryOperator	&		51020	0					
ANR	53372	Identifier	p_ptrn_lines		51020	1					
ANR	53373	ElseStatement	else		51020	0					
ANR	53374	ExpressionStatement	p_ptrn_lines = 1	1637:5:45517:45533	51020	0	True				
ANR	53375	AssignmentExpression	p_ptrn_lines = 1		51020	0		=			
ANR	53376	Identifier	p_ptrn_lines		51020	0					
ANR	53377	PrimaryExpression	1		51020	1					
ANR	53378	IfStatement	if ( p_first >= LINENUM_MAX - p_ptrn_lines )		51020	8					
ANR	53379	Condition	p_first >= LINENUM_MAX - p_ptrn_lines	1638:5:45540:45576	51020	0	True				
ANR	53380	RelationalExpression	p_first >= LINENUM_MAX - p_ptrn_lines		51020	0		>=			
ANR	53381	Identifier	p_first		51020	0					
ANR	53382	AdditiveExpression	LINENUM_MAX - p_ptrn_lines		51020	1		-			
ANR	53383	Identifier	LINENUM_MAX		51020	0					
ANR	53384	Identifier	p_ptrn_lines		51020	1					
ANR	53385	ExpressionStatement	malformed ( )	1639:3:45582:45594	51020	1	True				
ANR	53386	CallExpression	malformed ( )		51020	0					
ANR	53387	Callee	malformed		51020	0					
ANR	53388	Identifier	malformed		51020	0					
ANR	53389	ArgumentList			51020	1					
ANR	53390	IfStatement	if ( * s == ' ' )		51020	9					
ANR	53391	Condition	* s == ' '	1640:5:45601:45609	51020	0	True				
ANR	53392	EqualityExpression	* s == ' '		51020	0		==			
ANR	53393	UnaryOperationExpression	* s		51020	0					
ANR	53394	UnaryOperator	*		51020	0					
ANR	53395	Identifier	s		51020	1					
ANR	53396	PrimaryExpression	' '		51020	1					
ANR	53397	ExpressionStatement	s ++	1640:16:45612:45615	51020	1	True				
ANR	53398	PostIncDecOperationExpression	s ++		51020	0					
ANR	53399	Identifier	s		51020	0					
ANR	53400	IncDec	++		51020	1					
ANR	53401	IfStatement	if ( * s != '+' )		51020	10					
ANR	53402	Condition	* s != '+'	1641:5:45622:45630	51020	0	True				
ANR	53403	EqualityExpression	* s != '+'		51020	0		!=			
ANR	53404	UnaryOperationExpression	* s		51020	0					
ANR	53405	UnaryOperator	*		51020	0					
ANR	53406	Identifier	s		51020	1					
ANR	53407	PrimaryExpression	'+'		51020	1					
ANR	53408	ExpressionStatement	malformed ( )	1642:5:45638:45650	51020	1	True				
ANR	53409	CallExpression	malformed ( )		51020	0					
ANR	53410	Callee	malformed		51020	0					
ANR	53411	Identifier	malformed		51020	0					
ANR	53412	ArgumentList			51020	1					
ANR	53413	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_newfirst )"	1643:1:45653:45690	51020	11	True				
ANR	53414	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_newfirst )"		51020	0		=			
ANR	53415	Identifier	s		51020	0					
ANR	53416	CallExpression	"scan_linenum ( s + 1 , & p_newfirst )"		51020	1					
ANR	53417	Callee	scan_linenum		51020	0					
ANR	53418	Identifier	scan_linenum		51020	0					
ANR	53419	ArgumentList	s + 1		51020	1					
ANR	53420	Argument	s + 1		51020	0					
ANR	53421	AdditiveExpression	s + 1		51020	0		+			
ANR	53422	Identifier	s		51020	0					
ANR	53423	PrimaryExpression	1		51020	1					
ANR	53424	Argument	& p_newfirst		51020	1					
ANR	53425	UnaryOperationExpression	& p_newfirst		51020	0					
ANR	53426	UnaryOperator	&		51020	0					
ANR	53427	Identifier	p_newfirst		51020	1					
ANR	53428	IfStatement	"if ( * s == ',' )"		51020	12					
ANR	53429	Condition	"* s == ','"	1644:5:45697:45705	51020	0	True				
ANR	53430	EqualityExpression	"* s == ','"		51020	0		==			
ANR	53431	UnaryOperationExpression	* s		51020	0					
ANR	53432	UnaryOperator	*		51020	0					
ANR	53433	Identifier	s		51020	1					
ANR	53434	PrimaryExpression	"','"		51020	1					
ANR	53435	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_repl_lines )"	1645:5:45713:45752	51020	1	True				
ANR	53436	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_repl_lines )"		51020	0		=			
ANR	53437	Identifier	s		51020	0					
ANR	53438	CallExpression	"scan_linenum ( s + 1 , & p_repl_lines )"		51020	1					
ANR	53439	Callee	scan_linenum		51020	0					
ANR	53440	Identifier	scan_linenum		51020	0					
ANR	53441	ArgumentList	s + 1		51020	1					
ANR	53442	Argument	s + 1		51020	0					
ANR	53443	AdditiveExpression	s + 1		51020	0		+			
ANR	53444	Identifier	s		51020	0					
ANR	53445	PrimaryExpression	1		51020	1					
ANR	53446	Argument	& p_repl_lines		51020	1					
ANR	53447	UnaryOperationExpression	& p_repl_lines		51020	0					
ANR	53448	UnaryOperator	&		51020	0					
ANR	53449	Identifier	p_repl_lines		51020	1					
ANR	53450	ElseStatement	else		51020	0					
ANR	53451	ExpressionStatement	p_repl_lines = 1	1647:5:45765:45781	51020	0	True				
ANR	53452	AssignmentExpression	p_repl_lines = 1		51020	0		=			
ANR	53453	Identifier	p_repl_lines		51020	0					
ANR	53454	PrimaryExpression	1		51020	1					
ANR	53455	IfStatement	if ( p_newfirst >= LINENUM_MAX - p_repl_lines )		51020	13					
ANR	53456	Condition	p_newfirst >= LINENUM_MAX - p_repl_lines	1648:5:45788:45827	51020	0	True				
ANR	53457	RelationalExpression	p_newfirst >= LINENUM_MAX - p_repl_lines		51020	0		>=			
ANR	53458	Identifier	p_newfirst		51020	0					
ANR	53459	AdditiveExpression	LINENUM_MAX - p_repl_lines		51020	1		-			
ANR	53460	Identifier	LINENUM_MAX		51020	0					
ANR	53461	Identifier	p_repl_lines		51020	1					
ANR	53462	ExpressionStatement	malformed ( )	1649:3:45833:45845	51020	1	True				
ANR	53463	CallExpression	malformed ( )		51020	0					
ANR	53464	Callee	malformed		51020	0					
ANR	53465	Identifier	malformed		51020	0					
ANR	53466	ArgumentList			51020	1					
ANR	53467	IfStatement	if ( * s == ' ' )		51020	14					
ANR	53468	Condition	* s == ' '	1650:5:45852:45860	51020	0	True				
ANR	53469	EqualityExpression	* s == ' '		51020	0		==			
ANR	53470	UnaryOperationExpression	* s		51020	0					
ANR	53471	UnaryOperator	*		51020	0					
ANR	53472	Identifier	s		51020	1					
ANR	53473	PrimaryExpression	' '		51020	1					
ANR	53474	ExpressionStatement	s ++	1650:16:45863:45866	51020	1	True				
ANR	53475	PostIncDecOperationExpression	s ++		51020	0					
ANR	53476	Identifier	s		51020	0					
ANR	53477	IncDec	++		51020	1					
ANR	53478	IfStatement	if ( * s ++ != '@' )		51020	15					
ANR	53479	Condition	* s ++ != '@'	1651:5:45873:45883	51020	0	True				
ANR	53480	EqualityExpression	* s ++ != '@'		51020	0		!=			
ANR	53481	UnaryOperationExpression	* s ++		51020	0					
ANR	53482	UnaryOperator	*		51020	0					
ANR	53483	PostIncDecOperationExpression	s ++		51020	1					
ANR	53484	Identifier	s		51020	0					
ANR	53485	IncDec	++		51020	1					
ANR	53486	PrimaryExpression	'@'		51020	1					
ANR	53487	ExpressionStatement	malformed ( )	1652:5:45891:45903	51020	1	True				
ANR	53488	CallExpression	malformed ( )		51020	0					
ANR	53489	Callee	malformed		51020	0					
ANR	53490	Identifier	malformed		51020	0					
ANR	53491	ArgumentList			51020	1					
ANR	53492	IfStatement	if ( * s ++ == '@' && * s == ' ' )		51020	16					
ANR	53493	Condition	* s ++ == '@' && * s == ' '	1653:5:45910:45933	51020	0	True				
ANR	53494	AndExpression	* s ++ == '@' && * s == ' '		51020	0		&&			
ANR	53495	EqualityExpression	* s ++ == '@'		51020	0		==			
ANR	53496	UnaryOperationExpression	* s ++		51020	0					
ANR	53497	UnaryOperator	*		51020	0					
ANR	53498	PostIncDecOperationExpression	s ++		51020	1					
ANR	53499	Identifier	s		51020	0					
ANR	53500	IncDec	++		51020	1					
ANR	53501	PrimaryExpression	'@'		51020	1					
ANR	53502	EqualityExpression	* s == ' '		51020	1		==			
ANR	53503	UnaryOperationExpression	* s		51020	0					
ANR	53504	UnaryOperator	*		51020	0					
ANR	53505	Identifier	s		51020	1					
ANR	53506	PrimaryExpression	' '		51020	1					
ANR	53507	CompoundStatement		484:3:13634:13634	51020	1					
ANR	53508	ExpressionStatement	p_c_function = s	1655:5:45946:45962	51020	0	True				
ANR	53509	AssignmentExpression	p_c_function = s		51020	0		=			
ANR	53510	Identifier	p_c_function		51020	0					
ANR	53511	Identifier	s		51020	1					
ANR	53512	WhileStatement	while ( * s != '\\n' )		51020	1					
ANR	53513	Condition	* s != '\\n'	1656:12:45976:45985	51020	0	True				
ANR	53514	EqualityExpression	* s != '\\n'		51020	0		!=			
ANR	53515	UnaryOperationExpression	* s		51020	0					
ANR	53516	UnaryOperator	*		51020	0					
ANR	53517	Identifier	s		51020	1					
ANR	53518	PrimaryExpression	'\\n'		51020	1					
ANR	53519	ExpressionStatement	s ++	1657:2:45990:45993	51020	1	True				
ANR	53520	PostIncDecOperationExpression	s ++		51020	0					
ANR	53521	Identifier	s		51020	0					
ANR	53522	IncDec	++		51020	1					
ANR	53523	ExpressionStatement	* s = '\\0'	1658:5:46000:46009	51020	2	True				
ANR	53524	AssignmentExpression	* s = '\\0'		51020	0		=			
ANR	53525	UnaryOperationExpression	* s		51020	0					
ANR	53526	UnaryOperator	*		51020	0					
ANR	53527	Identifier	s		51020	1					
ANR	53528	PrimaryExpression	'\\0'		51020	1					
ANR	53529	ExpressionStatement	p_c_function = savestr ( p_c_function )	1659:5:46016:46053	51020	3	True				
ANR	53530	AssignmentExpression	p_c_function = savestr ( p_c_function )		51020	0		=			
ANR	53531	Identifier	p_c_function		51020	0					
ANR	53532	CallExpression	savestr ( p_c_function )		51020	1					
ANR	53533	Callee	savestr		51020	0					
ANR	53534	Identifier	savestr		51020	0					
ANR	53535	ArgumentList	p_c_function		51020	1					
ANR	53536	Argument	p_c_function		51020	0					
ANR	53537	Identifier	p_c_function		51020	0					
ANR	53538	IfStatement	if ( ! p_c_function )		51020	4					
ANR	53539	Condition	! p_c_function	1660:9:46064:46077	51020	0	True				
ANR	53540	UnaryOperationExpression	! p_c_function		51020	0					
ANR	53541	UnaryOperator	!		51020	0					
ANR	53542	Identifier	p_c_function		51020	1					
ANR	53543	ReturnStatement	return - 1 ;	1661:7:46087:46096	51020	1	True				
ANR	53544	UnaryOperationExpression	- 1		51020	0					
ANR	53545	UnaryOperator	-		51020	0					
ANR	53546	PrimaryExpression	1		51020	1					
ANR	53547	IfStatement	if ( ! p_ptrn_lines )		51020	17					
ANR	53548	Condition	! p_ptrn_lines	1663:5:46108:46120	51020	0	True				
ANR	53549	UnaryOperationExpression	! p_ptrn_lines		51020	0					
ANR	53550	UnaryOperator	!		51020	0					
ANR	53551	Identifier	p_ptrn_lines		51020	1					
ANR	53552	ExpressionStatement	p_first ++	1664:5:46128:46137	51020	1	True				
ANR	53553	PostIncDecOperationExpression	p_first ++		51020	0					
ANR	53554	Identifier	p_first		51020	0					
ANR	53555	IncDec	++		51020	1					
ANR	53556	IfStatement	if ( ! p_repl_lines )		51020	18					
ANR	53557	Condition	! p_repl_lines	1665:5:46181:46193	51020	0	True				
ANR	53558	UnaryOperationExpression	! p_repl_lines		51020	0					
ANR	53559	UnaryOperator	!		51020	0					
ANR	53560	Identifier	p_repl_lines		51020	1					
ANR	53561	ExpressionStatement	p_newfirst ++	1666:5:46201:46213	51020	1	True				
ANR	53562	PostIncDecOperationExpression	p_newfirst ++		51020	0					
ANR	53563	Identifier	p_newfirst		51020	0					
ANR	53564	IncDec	++		51020	1					
ANR	53565	IfStatement	if ( p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 ) )		51020	19					
ANR	53566	Condition	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )	1667:5:46220:46267	51020	0	True				
ANR	53567	RelationalExpression	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )		51020	0		>=			
ANR	53568	Identifier	p_ptrn_lines		51020	0					
ANR	53569	AdditiveExpression	LINENUM_MAX - ( p_repl_lines + 1 )		51020	1		-			
ANR	53570	Identifier	LINENUM_MAX		51020	0					
ANR	53571	AdditiveExpression	p_repl_lines + 1		51020	1		+			
ANR	53572	Identifier	p_repl_lines		51020	0					
ANR	53573	PrimaryExpression	1		51020	1					
ANR	53574	ExpressionStatement	malformed ( )	1668:3:46273:46285	51020	1	True				
ANR	53575	CallExpression	malformed ( )		51020	0					
ANR	53576	Callee	malformed		51020	0					
ANR	53577	Identifier	malformed		51020	0					
ANR	53578	ArgumentList			51020	1					
ANR	53579	ExpressionStatement	p_max = p_ptrn_lines + p_repl_lines + 1	1669:1:46288:46327	51020	20	True				
ANR	53580	AssignmentExpression	p_max = p_ptrn_lines + p_repl_lines + 1		51020	0		=			
ANR	53581	Identifier	p_max		51020	0					
ANR	53582	AdditiveExpression	p_ptrn_lines + p_repl_lines + 1		51020	1		+			
ANR	53583	Identifier	p_ptrn_lines		51020	0					
ANR	53584	AdditiveExpression	p_repl_lines + 1		51020	1		+			
ANR	53585	Identifier	p_repl_lines		51020	0					
ANR	53586	PrimaryExpression	1		51020	1					
ANR	53587	WhileStatement	while ( p_max + 1 >= hunkmax )		51020	21					
ANR	53588	Condition	p_max + 1 >= hunkmax	1670:8:46337:46356	51020	0	True				
ANR	53589	RelationalExpression	p_max + 1 >= hunkmax		51020	0		>=			
ANR	53590	AdditiveExpression	p_max + 1		51020	0		+			
ANR	53591	Identifier	p_max		51020	0					
ANR	53592	PrimaryExpression	1		51020	1					
ANR	53593	Identifier	hunkmax		51020	1					
ANR	53594	IfStatement	if ( ! grow_hunkmax ( ) )		51020	1					
ANR	53595	Condition	! grow_hunkmax ( )	1671:9:46368:46384	51020	0	True				
ANR	53596	UnaryOperationExpression	! grow_hunkmax ( )		51020	0					
ANR	53597	UnaryOperator	!		51020	0					
ANR	53598	CallExpression	grow_hunkmax ( )		51020	1					
ANR	53599	Callee	grow_hunkmax		51020	0					
ANR	53600	Identifier	grow_hunkmax		51020	0					
ANR	53601	ArgumentList			51020	1					
ANR	53602	ReturnStatement	return - 1 ;	1672:2:46389:46398	51020	1	True				
ANR	53603	UnaryOperationExpression	- 1		51020	0					
ANR	53604	UnaryOperator	-		51020	0					
ANR	53605	PrimaryExpression	1		51020	1					
ANR	53606	ExpressionStatement	fillsrc = 1	1673:1:46401:46412	51020	22	True				
ANR	53607	AssignmentExpression	fillsrc = 1		51020	0		=			
ANR	53608	Identifier	fillsrc		51020	0					
ANR	53609	PrimaryExpression	1		51020	1					
ANR	53610	ExpressionStatement	filldst = fillsrc + p_ptrn_lines	1674:1:46415:46447	51020	23	True				
ANR	53611	AssignmentExpression	filldst = fillsrc + p_ptrn_lines		51020	0		=			
ANR	53612	Identifier	filldst		51020	0					
ANR	53613	AdditiveExpression	fillsrc + p_ptrn_lines		51020	1		+			
ANR	53614	Identifier	fillsrc		51020	0					
ANR	53615	Identifier	p_ptrn_lines		51020	1					
ANR	53616	ExpressionStatement	p_end = filldst + p_repl_lines	1675:1:46450:46480	51020	24	True				
ANR	53617	AssignmentExpression	p_end = filldst + p_repl_lines		51020	0		=			
ANR	53618	Identifier	p_end		51020	0					
ANR	53619	AdditiveExpression	filldst + p_repl_lines		51020	1		+			
ANR	53620	Identifier	filldst		51020	0					
ANR	53621	Identifier	p_repl_lines		51020	1					
ANR	53622	ExpressionStatement	"sprintf ( buf , ""*** %s,%s ****\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"	1676:1:46483:46611	51020	25	True				
ANR	53623	CallExpression	"sprintf ( buf , ""*** %s,%s ****\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"		51020	0					
ANR	53624	Callee	sprintf		51020	0					
ANR	53625	Identifier	sprintf		51020	0					
ANR	53626	ArgumentList	buf		51020	1					
ANR	53627	Argument	buf		51020	0					
ANR	53628	Identifier	buf		51020	0					
ANR	53629	Argument	"""*** %s,%s ****\\n"""		51020	1					
ANR	53630	PrimaryExpression	"""*** %s,%s ****\\n"""		51020	0					
ANR	53631	Argument	"format_linenum ( numbuf0 , p_first )"		51020	2					
ANR	53632	CallExpression	"format_linenum ( numbuf0 , p_first )"		51020	0					
ANR	53633	Callee	format_linenum		51020	0					
ANR	53634	Identifier	format_linenum		51020	0					
ANR	53635	ArgumentList	numbuf0		51020	1					
ANR	53636	Argument	numbuf0		51020	0					
ANR	53637	Identifier	numbuf0		51020	0					
ANR	53638	Argument	p_first		51020	1					
ANR	53639	Identifier	p_first		51020	0					
ANR	53640	Argument	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		51020	3					
ANR	53641	CallExpression	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		51020	0					
ANR	53642	Callee	format_linenum		51020	0					
ANR	53643	Identifier	format_linenum		51020	0					
ANR	53644	ArgumentList	numbuf1		51020	1					
ANR	53645	Argument	numbuf1		51020	0					
ANR	53646	Identifier	numbuf1		51020	0					
ANR	53647	Argument	p_first + p_ptrn_lines - 1		51020	1					
ANR	53648	AdditiveExpression	p_first + p_ptrn_lines - 1		51020	0		+			
ANR	53649	Identifier	p_first		51020	0					
ANR	53650	AdditiveExpression	p_ptrn_lines - 1		51020	1		-			
ANR	53651	Identifier	p_ptrn_lines		51020	0					
ANR	53652	PrimaryExpression	1		51020	1					
ANR	53653	ExpressionStatement	p_len [ 0 ] = strlen ( buf )	1679:1:46614:46637	51020	26	True				
ANR	53654	AssignmentExpression	p_len [ 0 ] = strlen ( buf )		51020	0		=			
ANR	53655	ArrayIndexing	p_len [ 0 ]		51020	0					
ANR	53656	Identifier	p_len		51020	0					
ANR	53657	PrimaryExpression	0		51020	1					
ANR	53658	CallExpression	strlen ( buf )		51020	1					
ANR	53659	Callee	strlen		51020	0					
ANR	53660	Identifier	strlen		51020	0					
ANR	53661	ArgumentList	buf		51020	1					
ANR	53662	Argument	buf		51020	0					
ANR	53663	Identifier	buf		51020	0					
ANR	53664	IfStatement	if ( ! ( p_line [ 0 ] = savestr ( buf ) ) )		51020	27					
ANR	53665	Condition	! ( p_line [ 0 ] = savestr ( buf ) )	1680:5:46644:46672	51020	0	True				
ANR	53666	UnaryOperationExpression	! ( p_line [ 0 ] = savestr ( buf ) )		51020	0					
ANR	53667	UnaryOperator	!		51020	0					
ANR	53668	AssignmentExpression	p_line [ 0 ] = savestr ( buf )		51020	1		=			
ANR	53669	ArrayIndexing	p_line [ 0 ]		51020	0					
ANR	53670	Identifier	p_line		51020	0					
ANR	53671	PrimaryExpression	0		51020	1					
ANR	53672	CallExpression	savestr ( buf )		51020	1					
ANR	53673	Callee	savestr		51020	0					
ANR	53674	Identifier	savestr		51020	0					
ANR	53675	ArgumentList	buf		51020	1					
ANR	53676	Argument	buf		51020	0					
ANR	53677	Identifier	buf		51020	0					
ANR	53678	CompoundStatement		510:36:14370:14370	51020	1					
ANR	53679	ExpressionStatement	p_end = - 1	1681:5:46682:46692	51020	0	True				
ANR	53680	AssignmentExpression	p_end = - 1		51020	0		=			
ANR	53681	Identifier	p_end		51020	0					
ANR	53682	UnaryOperationExpression	- 1		51020	1					
ANR	53683	UnaryOperator	-		51020	0					
ANR	53684	PrimaryExpression	1		51020	1					
ANR	53685	ReturnStatement	return - 1 ;	1682:5:46699:46708	51020	1	True				
ANR	53686	UnaryOperationExpression	- 1		51020	0					
ANR	53687	UnaryOperator	-		51020	0					
ANR	53688	PrimaryExpression	1		51020	1					
ANR	53689	ExpressionStatement	p_Char [ 0 ] = '*'	1684:1:46714:46729	51020	28	True				
ANR	53690	AssignmentExpression	p_Char [ 0 ] = '*'		51020	0		=			
ANR	53691	ArrayIndexing	p_Char [ 0 ]		51020	0					
ANR	53692	Identifier	p_Char		51020	0					
ANR	53693	PrimaryExpression	0		51020	1					
ANR	53694	PrimaryExpression	'*'		51020	1					
ANR	53695	ExpressionStatement	"sprintf ( buf , ""--- %s,%s ----\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 ) )"	1685:1:46732:46866	51020	29	True				
ANR	53696	CallExpression	"sprintf ( buf , ""--- %s,%s ----\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 ) )"		51020	0					
ANR	53697	Callee	sprintf		51020	0					
ANR	53698	Identifier	sprintf		51020	0					
ANR	53699	ArgumentList	buf		51020	1					
ANR	53700	Argument	buf		51020	0					
ANR	53701	Identifier	buf		51020	0					
ANR	53702	Argument	"""--- %s,%s ----\\n"""		51020	1					
ANR	53703	PrimaryExpression	"""--- %s,%s ----\\n"""		51020	0					
ANR	53704	Argument	"format_linenum ( numbuf0 , p_newfirst )"		51020	2					
ANR	53705	CallExpression	"format_linenum ( numbuf0 , p_newfirst )"		51020	0					
ANR	53706	Callee	format_linenum		51020	0					
ANR	53707	Identifier	format_linenum		51020	0					
ANR	53708	ArgumentList	numbuf0		51020	1					
ANR	53709	Argument	numbuf0		51020	0					
ANR	53710	Identifier	numbuf0		51020	0					
ANR	53711	Argument	p_newfirst		51020	1					
ANR	53712	Identifier	p_newfirst		51020	0					
ANR	53713	Argument	"format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 )"		51020	3					
ANR	53714	CallExpression	"format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 )"		51020	0					
ANR	53715	Callee	format_linenum		51020	0					
ANR	53716	Identifier	format_linenum		51020	0					
ANR	53717	ArgumentList	numbuf1		51020	1					
ANR	53718	Argument	numbuf1		51020	0					
ANR	53719	Identifier	numbuf1		51020	0					
ANR	53720	Argument	p_newfirst + p_repl_lines - 1		51020	1					
ANR	53721	AdditiveExpression	p_newfirst + p_repl_lines - 1		51020	0		+			
ANR	53722	Identifier	p_newfirst		51020	0					
ANR	53723	AdditiveExpression	p_repl_lines - 1		51020	1		-			
ANR	53724	Identifier	p_repl_lines		51020	0					
ANR	53725	PrimaryExpression	1		51020	1					
ANR	53726	ExpressionStatement	p_len [ filldst ] = strlen ( buf )	1688:1:46869:46898	51020	30	True				
ANR	53727	AssignmentExpression	p_len [ filldst ] = strlen ( buf )		51020	0		=			
ANR	53728	ArrayIndexing	p_len [ filldst ]		51020	0					
ANR	53729	Identifier	p_len		51020	0					
ANR	53730	Identifier	filldst		51020	1					
ANR	53731	CallExpression	strlen ( buf )		51020	1					
ANR	53732	Callee	strlen		51020	0					
ANR	53733	Identifier	strlen		51020	0					
ANR	53734	ArgumentList	buf		51020	1					
ANR	53735	Argument	buf		51020	0					
ANR	53736	Identifier	buf		51020	0					
ANR	53737	IfStatement	if ( ! ( p_line [ filldst ] = savestr ( buf ) ) )		51020	31					
ANR	53738	Condition	! ( p_line [ filldst ] = savestr ( buf ) )	1689:5:46905:46939	51020	0	True				
ANR	53739	UnaryOperationExpression	! ( p_line [ filldst ] = savestr ( buf ) )		51020	0					
ANR	53740	UnaryOperator	!		51020	0					
ANR	53741	AssignmentExpression	p_line [ filldst ] = savestr ( buf )		51020	1		=			
ANR	53742	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	53743	Identifier	p_line		51020	0					
ANR	53744	Identifier	filldst		51020	1					
ANR	53745	CallExpression	savestr ( buf )		51020	1					
ANR	53746	Callee	savestr		51020	0					
ANR	53747	Identifier	savestr		51020	0					
ANR	53748	ArgumentList	buf		51020	1					
ANR	53749	Argument	buf		51020	0					
ANR	53750	Identifier	buf		51020	0					
ANR	53751	CompoundStatement		519:42:14637:14637	51020	1					
ANR	53752	ExpressionStatement	p_end = 0	1690:5:46949:46958	51020	0	True				
ANR	53753	AssignmentExpression	p_end = 0		51020	0		=			
ANR	53754	Identifier	p_end		51020	0					
ANR	53755	PrimaryExpression	0		51020	1					
ANR	53756	ReturnStatement	return - 1 ;	1691:5:46965:46974	51020	1	True				
ANR	53757	UnaryOperationExpression	- 1		51020	0					
ANR	53758	UnaryOperator	-		51020	0					
ANR	53759	PrimaryExpression	1		51020	1					
ANR	53760	ExpressionStatement	p_Char [ filldst ++ ] = '='	1693:1:46980:47003	51020	32	True				
ANR	53761	AssignmentExpression	p_Char [ filldst ++ ] = '='		51020	0		=			
ANR	53762	ArrayIndexing	p_Char [ filldst ++ ]		51020	0					
ANR	53763	Identifier	p_Char		51020	0					
ANR	53764	PostIncDecOperationExpression	filldst ++		51020	1					
ANR	53765	Identifier	filldst		51020	0					
ANR	53766	IncDec	++		51020	1					
ANR	53767	PrimaryExpression	'='		51020	1					
ANR	53768	ExpressionStatement	p_prefix_context = - 1	1694:1:47006:47027	51020	33	True				
ANR	53769	AssignmentExpression	p_prefix_context = - 1		51020	0		=			
ANR	53770	Identifier	p_prefix_context		51020	0					
ANR	53771	UnaryOperationExpression	- 1		51020	1					
ANR	53772	UnaryOperator	-		51020	0					
ANR	53773	PrimaryExpression	1		51020	1					
ANR	53774	ExpressionStatement	p_hunk_beg = p_input_line + 1	1695:1:47030:47059	51020	34	True				
ANR	53775	AssignmentExpression	p_hunk_beg = p_input_line + 1		51020	0		=			
ANR	53776	Identifier	p_hunk_beg		51020	0					
ANR	53777	AdditiveExpression	p_input_line + 1		51020	1		+			
ANR	53778	Identifier	p_input_line		51020	0					
ANR	53779	PrimaryExpression	1		51020	1					
ANR	53780	WhileStatement	while ( fillsrc <= p_ptrn_lines || filldst <= p_end )		51020	35					
ANR	53781	Condition	fillsrc <= p_ptrn_lines || filldst <= p_end	1696:8:47069:47111	51020	0	True				
ANR	53782	OrExpression	fillsrc <= p_ptrn_lines || filldst <= p_end		51020	0		||			
ANR	53783	RelationalExpression	fillsrc <= p_ptrn_lines		51020	0		<=			
ANR	53784	Identifier	fillsrc		51020	0					
ANR	53785	Identifier	p_ptrn_lines		51020	1					
ANR	53786	RelationalExpression	filldst <= p_end		51020	1		<=			
ANR	53787	Identifier	filldst		51020	0					
ANR	53788	Identifier	p_end		51020	1					
ANR	53789	CompoundStatement		526:53:14809:14809	51020	1					
ANR	53790	ExpressionStatement	chars_read = get_line ( )	1697:5:47121:47145	51020	0	True				
ANR	53791	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	53792	Identifier	chars_read		51020	0					
ANR	53793	CallExpression	get_line ( )		51020	1					
ANR	53794	Callee	get_line		51020	0					
ANR	53795	Identifier	get_line		51020	0					
ANR	53796	ArgumentList			51020	1					
ANR	53797	IfStatement	if ( ! chars_read )		51020	1					
ANR	53798	Condition	! chars_read	1698:9:47156:47166	51020	0	True				
ANR	53799	UnaryOperationExpression	! chars_read		51020	0					
ANR	53800	UnaryOperator	!		51020	0					
ANR	53801	Identifier	chars_read		51020	1					
ANR	53802	CompoundStatement		528:22:14864:14864	51020	1					
ANR	53803	IfStatement	if ( p_max - filldst < 3 )		51020	0					
ANR	53804	Condition	p_max - filldst < 3	1699:6:47177:47195	51020	0	True				
ANR	53805	RelationalExpression	p_max - filldst < 3		51020	0		<			
ANR	53806	AdditiveExpression	p_max - filldst		51020	0		-			
ANR	53807	Identifier	p_max		51020	0					
ANR	53808	Identifier	filldst		51020	1					
ANR	53809	PrimaryExpression	3		51020	1					
ANR	53810	CompoundStatement		529:27:14893:14893	51020	1					
ANR	53811	ExpressionStatement	"strcpy ( buf , "" \\n"" )"	1700:6:47206:47225	51020	0	True				
ANR	53812	CallExpression	"strcpy ( buf , "" \\n"" )"		51020	0					
ANR	53813	Callee	strcpy		51020	0					
ANR	53814	Identifier	strcpy		51020	0					
ANR	53815	ArgumentList	buf		51020	1					
ANR	53816	Argument	buf		51020	0					
ANR	53817	Identifier	buf		51020	0					
ANR	53818	Argument	""" \\n"""		51020	1					
ANR	53819	PrimaryExpression	""" \\n"""		51020	0					
ANR	53820	ExpressionStatement	chars_read = 2	1701:6:47271:47285	51020	1	True				
ANR	53821	AssignmentExpression	chars_read = 2		51020	0		=			
ANR	53822	Identifier	chars_read		51020	0					
ANR	53823	PrimaryExpression	2		51020	1					
ANR	53824	ElseStatement	else		51020	0					
ANR	53825	CompoundStatement		532:9:14991:14991	51020	0					
ANR	53826	ExpressionStatement	"fatal ( ""unexpected end of file in patch"" )"	1703:6:47304:47345	51020	0	True				
ANR	53827	CallExpression	"fatal ( ""unexpected end of file in patch"" )"		51020	0					
ANR	53828	Callee	fatal		51020	0					
ANR	53829	Identifier	fatal		51020	0					
ANR	53830	ArgumentList	"""unexpected end of file in patch"""		51020	1					
ANR	53831	Argument	"""unexpected end of file in patch"""		51020	0					
ANR	53832	PrimaryExpression	"""unexpected end of file in patch"""		51020	0					
ANR	53833	IfStatement	if ( chars_read == ( size_t ) - 1 )		51020	2					
ANR	53834	Condition	chars_read == ( size_t ) - 1	1706:9:47367:47391	51020	0	True				
ANR	53835	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	53836	Identifier	chars_read		51020	0					
ANR	53837	CastExpression	( size_t ) - 1		51020	1					
ANR	53838	CastTarget	size_t		51020	0					
ANR	53839	UnaryOperationExpression	- 1		51020	1					
ANR	53840	UnaryOperator	-		51020	0					
ANR	53841	PrimaryExpression	1		51020	1					
ANR	53842	ExpressionStatement	s = 0	1707:2:47396:47401	51020	1	True				
ANR	53843	AssignmentExpression	s = 0		51020	0		=			
ANR	53844	Identifier	s		51020	0					
ANR	53845	PrimaryExpression	0		51020	1					
ANR	53846	ElseStatement	else		51020	0					
ANR	53847	IfStatement	if ( * buf == '\\t' || * buf == '\\n' )		51020	0					
ANR	53848	Condition	* buf == '\\t' || * buf == '\\n'	1708:14:47417:47444	51020	0	True				
ANR	53849	OrExpression	* buf == '\\t' || * buf == '\\n'		51020	0		||			
ANR	53850	EqualityExpression	* buf == '\\t'		51020	0		==			
ANR	53851	UnaryOperationExpression	* buf		51020	0					
ANR	53852	UnaryOperator	*		51020	0					
ANR	53853	Identifier	buf		51020	1					
ANR	53854	PrimaryExpression	'\\t'		51020	1					
ANR	53855	EqualityExpression	* buf == '\\n'		51020	1		==			
ANR	53856	UnaryOperationExpression	* buf		51020	0					
ANR	53857	UnaryOperator	*		51020	0					
ANR	53858	Identifier	buf		51020	1					
ANR	53859	PrimaryExpression	'\\n'		51020	1					
ANR	53860	CompoundStatement		538:44:15142:15142	51020	1					
ANR	53861	ExpressionStatement	ch = ' '	1709:2:47451:47459	51020	0	True				
ANR	53862	AssignmentExpression	ch = ' '		51020	0		=			
ANR	53863	Identifier	ch		51020	0					
ANR	53864	PrimaryExpression	' '		51020	1					
ANR	53865	ExpressionStatement	"s = savebuf ( buf , chars_read )"	1710:2:47497:47526	51020	1	True				
ANR	53866	AssignmentExpression	"s = savebuf ( buf , chars_read )"		51020	0		=			
ANR	53867	Identifier	s		51020	0					
ANR	53868	CallExpression	"savebuf ( buf , chars_read )"		51020	1					
ANR	53869	Callee	savebuf		51020	0					
ANR	53870	Identifier	savebuf		51020	0					
ANR	53871	ArgumentList	buf		51020	1					
ANR	53872	Argument	buf		51020	0					
ANR	53873	Identifier	buf		51020	0					
ANR	53874	Argument	chars_read		51020	1					
ANR	53875	Identifier	chars_read		51020	0					
ANR	53876	ElseStatement	else		51020	0					
ANR	53877	CompoundStatement		542:10:15240:15240	51020	0					
ANR	53878	ExpressionStatement	ch = * buf	1713:2:47549:47558	51020	0	True				
ANR	53879	AssignmentExpression	ch = * buf		51020	0		=			
ANR	53880	Identifier	ch		51020	0					
ANR	53881	UnaryOperationExpression	* buf		51020	1					
ANR	53882	UnaryOperator	*		51020	0					
ANR	53883	Identifier	buf		51020	1					
ANR	53884	ExpressionStatement	"s = savebuf ( buf + 1 , -- chars_read )"	1714:2:47562:47595	51020	1	True				
ANR	53885	AssignmentExpression	"s = savebuf ( buf + 1 , -- chars_read )"		51020	0		=			
ANR	53886	Identifier	s		51020	0					
ANR	53887	CallExpression	"savebuf ( buf + 1 , -- chars_read )"		51020	1					
ANR	53888	Callee	savebuf		51020	0					
ANR	53889	Identifier	savebuf		51020	0					
ANR	53890	ArgumentList	buf + 1		51020	1					
ANR	53891	Argument	buf + 1		51020	0					
ANR	53892	AdditiveExpression	buf + 1		51020	0		+			
ANR	53893	Identifier	buf		51020	0					
ANR	53894	PrimaryExpression	1		51020	1					
ANR	53895	Argument	-- chars_read		51020	1					
ANR	53896	UnaryExpression	-- chars_read		51020	0					
ANR	53897	IncDec	--		51020	0					
ANR	53898	Identifier	chars_read		51020	1					
ANR	53899	IfStatement	if ( chars_read && ! s )		51020	3					
ANR	53900	Condition	chars_read && ! s	1716:9:47613:47629	51020	0	True				
ANR	53901	AndExpression	chars_read && ! s		51020	0		&&			
ANR	53902	Identifier	chars_read		51020	0					
ANR	53903	UnaryOperationExpression	! s		51020	1					
ANR	53904	UnaryOperator	!		51020	0					
ANR	53905	Identifier	s		51020	1					
ANR	53906	CompoundStatement		547:7:15334:15334	51020	1					
ANR	53907	WhileStatement	while ( -- filldst > p_ptrn_lines )		51020	0					
ANR	53908	Condition	-- filldst > p_ptrn_lines	1718:9:47650:47673	51020	0	True				
ANR	53909	RelationalExpression	-- filldst > p_ptrn_lines		51020	0		>			
ANR	53910	UnaryExpression	-- filldst		51020	0					
ANR	53911	IncDec	--		51020	0					
ANR	53912	Identifier	filldst		51020	1					
ANR	53913	Identifier	p_ptrn_lines		51020	1					
ANR	53914	ExpressionStatement	free ( p_line [ filldst ] )	1719:6:47682:47703	51020	1	True				
ANR	53915	CallExpression	free ( p_line [ filldst ] )		51020	0					
ANR	53916	Callee	free		51020	0					
ANR	53917	Identifier	free		51020	0					
ANR	53918	ArgumentList	p_line [ filldst ]		51020	1					
ANR	53919	Argument	p_line [ filldst ]		51020	0					
ANR	53920	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	53921	Identifier	p_line		51020	0					
ANR	53922	Identifier	filldst		51020	1					
ANR	53923	ExpressionStatement	p_end = fillsrc - 1	1720:2:47707:47724	51020	1	True				
ANR	53924	AssignmentExpression	p_end = fillsrc - 1		51020	0		=			
ANR	53925	Identifier	p_end		51020	0					
ANR	53926	AdditiveExpression	fillsrc - 1		51020	1		-			
ANR	53927	Identifier	fillsrc		51020	0					
ANR	53928	PrimaryExpression	1		51020	1					
ANR	53929	ReturnStatement	return - 1 ;	1721:2:47728:47737	51020	2	True				
ANR	53930	UnaryOperationExpression	- 1		51020	0					
ANR	53931	UnaryOperator	-		51020	0					
ANR	53932	PrimaryExpression	1		51020	1					
ANR	53933	SwitchStatement	switch ( ch )		51020	4					
ANR	53934	Condition	ch	1723:13:47761:47762	51020	0	True				
ANR	53935	Identifier	ch		51020	0					
ANR	53936	CompoundStatement		553:17:15460:15460	51020	1					
ANR	53937	Label	case '-' :	1724:5:47772:47780	51020	0	True				
ANR	53938	IfStatement	if ( fillsrc > p_ptrn_lines )		51020	1					
ANR	53939	Condition	fillsrc > p_ptrn_lines	1725:6:47788:47809	51020	0	True				
ANR	53940	RelationalExpression	fillsrc > p_ptrn_lines		51020	0		>			
ANR	53941	Identifier	fillsrc		51020	0					
ANR	53942	Identifier	p_ptrn_lines		51020	1					
ANR	53943	CompoundStatement		555:30:15507:15507	51020	1					
ANR	53944	ExpressionStatement	free ( s )	1726:6:47820:47827	51020	0	True				
ANR	53945	CallExpression	free ( s )		51020	0					
ANR	53946	Callee	free		51020	0					
ANR	53947	Identifier	free		51020	0					
ANR	53948	ArgumentList	s		51020	1					
ANR	53949	Argument	s		51020	0					
ANR	53950	Identifier	s		51020	0					
ANR	53951	ExpressionStatement	p_end = filldst - 1	1727:6:47835:47852	51020	1	True				
ANR	53952	AssignmentExpression	p_end = filldst - 1		51020	0		=			
ANR	53953	Identifier	p_end		51020	0					
ANR	53954	AdditiveExpression	filldst - 1		51020	1		-			
ANR	53955	Identifier	filldst		51020	0					
ANR	53956	PrimaryExpression	1		51020	1					
ANR	53957	ExpressionStatement	malformed ( )	1728:6:47860:47872	51020	2	True				
ANR	53958	CallExpression	malformed ( )		51020	0					
ANR	53959	Callee	malformed		51020	0					
ANR	53960	Identifier	malformed		51020	0					
ANR	53961	ArgumentList			51020	1					
ANR	53962	ExpressionStatement	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )	1730:2:47880:47939	51020	2	True				
ANR	53963	AssignmentExpression	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )		51020	0		-=			
ANR	53964	Identifier	chars_read		51020	0					
ANR	53965	AndExpression	fillsrc == p_ptrn_lines && incomplete_line ( )		51020	1		&&			
ANR	53966	EqualityExpression	fillsrc == p_ptrn_lines		51020	0		==			
ANR	53967	Identifier	fillsrc		51020	0					
ANR	53968	Identifier	p_ptrn_lines		51020	1					
ANR	53969	CallExpression	incomplete_line ( )		51020	1					
ANR	53970	Callee	incomplete_line		51020	0					
ANR	53971	Identifier	incomplete_line		51020	0					
ANR	53972	ArgumentList			51020	1					
ANR	53973	ExpressionStatement	p_Char [ fillsrc ] = ch	1731:2:47943:47963	51020	3	True				
ANR	53974	AssignmentExpression	p_Char [ fillsrc ] = ch		51020	0		=			
ANR	53975	ArrayIndexing	p_Char [ fillsrc ]		51020	0					
ANR	53976	Identifier	p_Char		51020	0					
ANR	53977	Identifier	fillsrc		51020	1					
ANR	53978	Identifier	ch		51020	1					
ANR	53979	ExpressionStatement	p_line [ fillsrc ] = s	1732:2:47967:47986	51020	4	True				
ANR	53980	AssignmentExpression	p_line [ fillsrc ] = s		51020	0		=			
ANR	53981	ArrayIndexing	p_line [ fillsrc ]		51020	0					
ANR	53982	Identifier	p_line		51020	0					
ANR	53983	Identifier	fillsrc		51020	1					
ANR	53984	Identifier	s		51020	1					
ANR	53985	ExpressionStatement	p_len [ fillsrc ++ ] = chars_read	1733:2:47990:48019	51020	5	True				
ANR	53986	AssignmentExpression	p_len [ fillsrc ++ ] = chars_read		51020	0		=			
ANR	53987	ArrayIndexing	p_len [ fillsrc ++ ]		51020	0					
ANR	53988	Identifier	p_len		51020	0					
ANR	53989	PostIncDecOperationExpression	fillsrc ++		51020	1					
ANR	53990	Identifier	fillsrc		51020	0					
ANR	53991	IncDec	++		51020	1					
ANR	53992	Identifier	chars_read		51020	1					
ANR	53993	BreakStatement	break ;	1734:2:48023:48028	51020	6	True				
ANR	53994	Label	case '=' :	1735:5:48035:48043	51020	7	True				
ANR	53995	ExpressionStatement	ch = ' '	1736:2:48047:48055	51020	8	True				
ANR	53996	AssignmentExpression	ch = ' '		51020	0		=			
ANR	53997	Identifier	ch		51020	0					
ANR	53998	PrimaryExpression	' '		51020	1					
ANR	53999	Label	case ' ' :	1738:5:48083:48091	51020	9	True				
ANR	54000	IfStatement	if ( fillsrc > p_ptrn_lines )		51020	10					
ANR	54001	Condition	fillsrc > p_ptrn_lines	1739:6:48099:48120	51020	0	True				
ANR	54002	RelationalExpression	fillsrc > p_ptrn_lines		51020	0		>			
ANR	54003	Identifier	fillsrc		51020	0					
ANR	54004	Identifier	p_ptrn_lines		51020	1					
ANR	54005	CompoundStatement		569:30:15818:15818	51020	1					
ANR	54006	ExpressionStatement	free ( s )	1740:6:48131:48138	51020	0	True				
ANR	54007	CallExpression	free ( s )		51020	0					
ANR	54008	Callee	free		51020	0					
ANR	54009	Identifier	free		51020	0					
ANR	54010	ArgumentList	s		51020	1					
ANR	54011	Argument	s		51020	0					
ANR	54012	Identifier	s		51020	0					
ANR	54013	WhileStatement	while ( -- filldst > p_ptrn_lines )		51020	1					
ANR	54014	Condition	-- filldst > p_ptrn_lines	1741:13:48153:48176	51020	0	True				
ANR	54015	RelationalExpression	-- filldst > p_ptrn_lines		51020	0		>			
ANR	54016	UnaryExpression	-- filldst		51020	0					
ANR	54017	IncDec	--		51020	0					
ANR	54018	Identifier	filldst		51020	1					
ANR	54019	Identifier	p_ptrn_lines		51020	1					
ANR	54020	ExpressionStatement	free ( p_line [ filldst ] )	1742:3:48182:48203	51020	1	True				
ANR	54021	CallExpression	free ( p_line [ filldst ] )		51020	0					
ANR	54022	Callee	free		51020	0					
ANR	54023	Identifier	free		51020	0					
ANR	54024	ArgumentList	p_line [ filldst ]		51020	1					
ANR	54025	Argument	p_line [ filldst ]		51020	0					
ANR	54026	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	54027	Identifier	p_line		51020	0					
ANR	54028	Identifier	filldst		51020	1					
ANR	54029	ExpressionStatement	p_end = fillsrc - 1	1743:6:48211:48228	51020	2	True				
ANR	54030	AssignmentExpression	p_end = fillsrc - 1		51020	0		=			
ANR	54031	Identifier	p_end		51020	0					
ANR	54032	AdditiveExpression	fillsrc - 1		51020	1		-			
ANR	54033	Identifier	fillsrc		51020	0					
ANR	54034	PrimaryExpression	1		51020	1					
ANR	54035	ExpressionStatement	malformed ( )	1744:6:48236:48248	51020	3	True				
ANR	54036	CallExpression	malformed ( )		51020	0					
ANR	54037	Callee	malformed		51020	0					
ANR	54038	Identifier	malformed		51020	0					
ANR	54039	ArgumentList			51020	1					
ANR	54040	ExpressionStatement	context ++	1746:2:48256:48265	51020	11	True				
ANR	54041	PostIncDecOperationExpression	context ++		51020	0					
ANR	54042	Identifier	context		51020	0					
ANR	54043	IncDec	++		51020	1					
ANR	54044	ExpressionStatement	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )	1747:2:48269:48328	51020	12	True				
ANR	54045	AssignmentExpression	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )		51020	0		-=			
ANR	54046	Identifier	chars_read		51020	0					
ANR	54047	AndExpression	fillsrc == p_ptrn_lines && incomplete_line ( )		51020	1		&&			
ANR	54048	EqualityExpression	fillsrc == p_ptrn_lines		51020	0		==			
ANR	54049	Identifier	fillsrc		51020	0					
ANR	54050	Identifier	p_ptrn_lines		51020	1					
ANR	54051	CallExpression	incomplete_line ( )		51020	1					
ANR	54052	Callee	incomplete_line		51020	0					
ANR	54053	Identifier	incomplete_line		51020	0					
ANR	54054	ArgumentList			51020	1					
ANR	54055	ExpressionStatement	p_Char [ fillsrc ] = ch	1748:2:48332:48352	51020	13	True				
ANR	54056	AssignmentExpression	p_Char [ fillsrc ] = ch		51020	0		=			
ANR	54057	ArrayIndexing	p_Char [ fillsrc ]		51020	0					
ANR	54058	Identifier	p_Char		51020	0					
ANR	54059	Identifier	fillsrc		51020	1					
ANR	54060	Identifier	ch		51020	1					
ANR	54061	ExpressionStatement	p_line [ fillsrc ] = s	1749:2:48356:48375	51020	14	True				
ANR	54062	AssignmentExpression	p_line [ fillsrc ] = s		51020	0		=			
ANR	54063	ArrayIndexing	p_line [ fillsrc ]		51020	0					
ANR	54064	Identifier	p_line		51020	0					
ANR	54065	Identifier	fillsrc		51020	1					
ANR	54066	Identifier	s		51020	1					
ANR	54067	ExpressionStatement	p_len [ fillsrc ++ ] = chars_read	1750:2:48379:48408	51020	15	True				
ANR	54068	AssignmentExpression	p_len [ fillsrc ++ ] = chars_read		51020	0		=			
ANR	54069	ArrayIndexing	p_len [ fillsrc ++ ]		51020	0					
ANR	54070	Identifier	p_len		51020	0					
ANR	54071	PostIncDecOperationExpression	fillsrc ++		51020	1					
ANR	54072	Identifier	fillsrc		51020	0					
ANR	54073	IncDec	++		51020	1					
ANR	54074	Identifier	chars_read		51020	1					
ANR	54075	ExpressionStatement	"s = savebuf ( s , chars_read )"	1751:2:48412:48439	51020	16	True				
ANR	54076	AssignmentExpression	"s = savebuf ( s , chars_read )"		51020	0		=			
ANR	54077	Identifier	s		51020	0					
ANR	54078	CallExpression	"savebuf ( s , chars_read )"		51020	1					
ANR	54079	Callee	savebuf		51020	0					
ANR	54080	Identifier	savebuf		51020	0					
ANR	54081	ArgumentList	s		51020	1					
ANR	54082	Argument	s		51020	0					
ANR	54083	Identifier	s		51020	0					
ANR	54084	Argument	chars_read		51020	1					
ANR	54085	Identifier	chars_read		51020	0					
ANR	54086	IfStatement	if ( chars_read && ! s )		51020	17					
ANR	54087	Condition	chars_read && ! s	1752:6:48447:48463	51020	0	True				
ANR	54088	AndExpression	chars_read && ! s		51020	0		&&			
ANR	54089	Identifier	chars_read		51020	0					
ANR	54090	UnaryOperationExpression	! s		51020	1					
ANR	54091	UnaryOperator	!		51020	0					
ANR	54092	Identifier	s		51020	1					
ANR	54093	CompoundStatement		582:25:16161:16161	51020	1					
ANR	54094	WhileStatement	while ( -- filldst > p_ptrn_lines )		51020	0					
ANR	54095	Condition	-- filldst > p_ptrn_lines	1753:13:48481:48504	51020	0	True				
ANR	54096	RelationalExpression	-- filldst > p_ptrn_lines		51020	0		>			
ANR	54097	UnaryExpression	-- filldst		51020	0					
ANR	54098	IncDec	--		51020	0					
ANR	54099	Identifier	filldst		51020	1					
ANR	54100	Identifier	p_ptrn_lines		51020	1					
ANR	54101	ExpressionStatement	free ( p_line [ filldst ] )	1754:3:48510:48531	51020	1	True				
ANR	54102	CallExpression	free ( p_line [ filldst ] )		51020	0					
ANR	54103	Callee	free		51020	0					
ANR	54104	Identifier	free		51020	0					
ANR	54105	ArgumentList	p_line [ filldst ]		51020	1					
ANR	54106	Argument	p_line [ filldst ]		51020	0					
ANR	54107	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	54108	Identifier	p_line		51020	0					
ANR	54109	Identifier	filldst		51020	1					
ANR	54110	ExpressionStatement	p_end = fillsrc - 1	1755:6:48539:48556	51020	1	True				
ANR	54111	AssignmentExpression	p_end = fillsrc - 1		51020	0		=			
ANR	54112	Identifier	p_end		51020	0					
ANR	54113	AdditiveExpression	fillsrc - 1		51020	1		-			
ANR	54114	Identifier	fillsrc		51020	0					
ANR	54115	PrimaryExpression	1		51020	1					
ANR	54116	ReturnStatement	return - 1 ;	1756:6:48564:48573	51020	2	True				
ANR	54117	UnaryOperationExpression	- 1		51020	0					
ANR	54118	UnaryOperator	-		51020	0					
ANR	54119	PrimaryExpression	1		51020	1					
ANR	54120	Label	case '+' :	1759:5:48605:48613	51020	18	True				
ANR	54121	IfStatement	if ( filldst > p_end )		51020	19					
ANR	54122	Condition	filldst > p_end	1760:6:48621:48635	51020	0	True				
ANR	54123	RelationalExpression	filldst > p_end		51020	0		>			
ANR	54124	Identifier	filldst		51020	0					
ANR	54125	Identifier	p_end		51020	1					
ANR	54126	CompoundStatement		590:23:16333:16333	51020	1					
ANR	54127	ExpressionStatement	free ( s )	1761:6:48646:48653	51020	0	True				
ANR	54128	CallExpression	free ( s )		51020	0					
ANR	54129	Callee	free		51020	0					
ANR	54130	Identifier	free		51020	0					
ANR	54131	ArgumentList	s		51020	1					
ANR	54132	Argument	s		51020	0					
ANR	54133	Identifier	s		51020	0					
ANR	54134	WhileStatement	while ( -- filldst > p_ptrn_lines )		51020	1					
ANR	54135	Condition	-- filldst > p_ptrn_lines	1762:13:48668:48691	51020	0	True				
ANR	54136	RelationalExpression	-- filldst > p_ptrn_lines		51020	0		>			
ANR	54137	UnaryExpression	-- filldst		51020	0					
ANR	54138	IncDec	--		51020	0					
ANR	54139	Identifier	filldst		51020	1					
ANR	54140	Identifier	p_ptrn_lines		51020	1					
ANR	54141	ExpressionStatement	free ( p_line [ filldst ] )	1763:3:48697:48718	51020	1	True				
ANR	54142	CallExpression	free ( p_line [ filldst ] )		51020	0					
ANR	54143	Callee	free		51020	0					
ANR	54144	Identifier	free		51020	0					
ANR	54145	ArgumentList	p_line [ filldst ]		51020	1					
ANR	54146	Argument	p_line [ filldst ]		51020	0					
ANR	54147	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	54148	Identifier	p_line		51020	0					
ANR	54149	Identifier	filldst		51020	1					
ANR	54150	ExpressionStatement	p_end = fillsrc - 1	1764:6:48726:48743	51020	2	True				
ANR	54151	AssignmentExpression	p_end = fillsrc - 1		51020	0		=			
ANR	54152	Identifier	p_end		51020	0					
ANR	54153	AdditiveExpression	fillsrc - 1		51020	1		-			
ANR	54154	Identifier	fillsrc		51020	0					
ANR	54155	PrimaryExpression	1		51020	1					
ANR	54156	ExpressionStatement	malformed ( )	1765:6:48751:48763	51020	3	True				
ANR	54157	CallExpression	malformed ( )		51020	0					
ANR	54158	Callee	malformed		51020	0					
ANR	54159	Identifier	malformed		51020	0					
ANR	54160	ArgumentList			51020	1					
ANR	54161	ExpressionStatement	chars_read -= filldst == p_end && incomplete_line ( )	1767:2:48771:48823	51020	20	True				
ANR	54162	AssignmentExpression	chars_read -= filldst == p_end && incomplete_line ( )		51020	0		-=			
ANR	54163	Identifier	chars_read		51020	0					
ANR	54164	AndExpression	filldst == p_end && incomplete_line ( )		51020	1		&&			
ANR	54165	EqualityExpression	filldst == p_end		51020	0		==			
ANR	54166	Identifier	filldst		51020	0					
ANR	54167	Identifier	p_end		51020	1					
ANR	54168	CallExpression	incomplete_line ( )		51020	1					
ANR	54169	Callee	incomplete_line		51020	0					
ANR	54170	Identifier	incomplete_line		51020	0					
ANR	54171	ArgumentList			51020	1					
ANR	54172	ExpressionStatement	p_Char [ filldst ] = ch	1768:2:48827:48847	51020	21	True				
ANR	54173	AssignmentExpression	p_Char [ filldst ] = ch		51020	0		=			
ANR	54174	ArrayIndexing	p_Char [ filldst ]		51020	0					
ANR	54175	Identifier	p_Char		51020	0					
ANR	54176	Identifier	filldst		51020	1					
ANR	54177	Identifier	ch		51020	1					
ANR	54178	ExpressionStatement	p_line [ filldst ] = s	1769:2:48851:48870	51020	22	True				
ANR	54179	AssignmentExpression	p_line [ filldst ] = s		51020	0		=			
ANR	54180	ArrayIndexing	p_line [ filldst ]		51020	0					
ANR	54181	Identifier	p_line		51020	0					
ANR	54182	Identifier	filldst		51020	1					
ANR	54183	Identifier	s		51020	1					
ANR	54184	ExpressionStatement	p_len [ filldst ++ ] = chars_read	1770:2:48874:48903	51020	23	True				
ANR	54185	AssignmentExpression	p_len [ filldst ++ ] = chars_read		51020	0		=			
ANR	54186	ArrayIndexing	p_len [ filldst ++ ]		51020	0					
ANR	54187	Identifier	p_len		51020	0					
ANR	54188	PostIncDecOperationExpression	filldst ++		51020	1					
ANR	54189	Identifier	filldst		51020	0					
ANR	54190	IncDec	++		51020	1					
ANR	54191	Identifier	chars_read		51020	1					
ANR	54192	BreakStatement	break ;	1771:2:48907:48912	51020	24	True				
ANR	54193	Label	default :	1772:5:48919:48926	51020	25	True				
ANR	54194	Identifier	default		51020	0					
ANR	54195	ExpressionStatement	p_end = filldst	1773:2:48930:48945	51020	26	True				
ANR	54196	AssignmentExpression	p_end = filldst		51020	0		=			
ANR	54197	Identifier	p_end		51020	0					
ANR	54198	Identifier	filldst		51020	1					
ANR	54199	ExpressionStatement	malformed ( )	1774:2:48949:48961	51020	27	True				
ANR	54200	CallExpression	malformed ( )		51020	0					
ANR	54201	Callee	malformed		51020	0					
ANR	54202	Identifier	malformed		51020	0					
ANR	54203	ArgumentList			51020	1					
ANR	54204	IfStatement	if ( ch != ' ' )		51020	5					
ANR	54205	Condition	ch != ' '	1776:9:48979:48987	51020	0	True				
ANR	54206	EqualityExpression	ch != ' '		51020	0		!=			
ANR	54207	Identifier	ch		51020	0					
ANR	54208	PrimaryExpression	' '		51020	1					
ANR	54209	CompoundStatement		606:20:16685:16685	51020	1					
ANR	54210	IfStatement	if ( p_prefix_context == - 1 )		51020	0					
ANR	54211	Condition	p_prefix_context == - 1	1777:6:48998:49019	51020	0	True				
ANR	54212	EqualityExpression	p_prefix_context == - 1		51020	0		==			
ANR	54213	Identifier	p_prefix_context		51020	0					
ANR	54214	UnaryOperationExpression	- 1		51020	1					
ANR	54215	UnaryOperator	-		51020	0					
ANR	54216	PrimaryExpression	1		51020	1					
ANR	54217	ExpressionStatement	p_prefix_context = context	1778:6:49028:49054	51020	1	True				
ANR	54218	AssignmentExpression	p_prefix_context = context		51020	0		=			
ANR	54219	Identifier	p_prefix_context		51020	0					
ANR	54220	Identifier	context		51020	1					
ANR	54221	ExpressionStatement	context = 0	1779:2:49058:49069	51020	1	True				
ANR	54222	AssignmentExpression	context = 0		51020	0		=			
ANR	54223	Identifier	context		51020	0					
ANR	54224	PrimaryExpression	0		51020	1					
ANR	54225	IfStatement	if ( p_prefix_context == - 1 )		51020	36					
ANR	54226	Condition	p_prefix_context == - 1	1782:5:49097:49118	51020	0	True				
ANR	54227	EqualityExpression	p_prefix_context == - 1		51020	0		==			
ANR	54228	Identifier	p_prefix_context		51020	0					
ANR	54229	UnaryOperationExpression	- 1		51020	1					
ANR	54230	UnaryOperator	-		51020	0					
ANR	54231	PrimaryExpression	1		51020	1					
ANR	54232	ExpressionStatement	malformed ( )	1783:3:49124:49136	51020	1	True				
ANR	54233	CallExpression	malformed ( )		51020	0					
ANR	54234	Callee	malformed		51020	0					
ANR	54235	Identifier	malformed		51020	0					
ANR	54236	ArgumentList			51020	1					
ANR	54237	ExpressionStatement	p_suffix_context = context	1784:1:49139:49165	51020	37	True				
ANR	54238	AssignmentExpression	p_suffix_context = context		51020	0		=			
ANR	54239	Identifier	p_suffix_context		51020	0					
ANR	54240	Identifier	context		51020	1					
ANR	54241	ElseStatement	else		51020	0					
ANR	54242	CompoundStatement		620:1:16953:16997	51020	0					
ANR	54243	IdentifierDeclStatement	char hunk_type ;	1787:1:49218:49232	51020	0	True				
ANR	54244	IdentifierDecl	hunk_type		51020	0					
ANR	54245	IdentifierDeclType	char		51020	0					
ANR	54246	Identifier	hunk_type		51020	1					
ANR	54247	IdentifierDeclStatement	int i ;	1788:1:49235:49240	51020	1	True				
ANR	54248	IdentifierDecl	i		51020	0					
ANR	54249	IdentifierDeclType	int		51020	0					
ANR	54250	Identifier	i		51020	1					
ANR	54251	IdentifierDeclStatement	"lin min , max ;"	1789:1:49243:49255	51020	2	True				
ANR	54252	IdentifierDecl	min		51020	0					
ANR	54253	IdentifierDeclType	lin		51020	0					
ANR	54254	Identifier	min		51020	1					
ANR	54255	IdentifierDecl	max		51020	1					
ANR	54256	IdentifierDeclType	lin		51020	0					
ANR	54257	Identifier	max		51020	1					
ANR	54258	IdentifierDeclStatement	file_offset line_beginning = file_tell ( pfp ) ;	1790:1:49258:49302	51020	3	True				
ANR	54259	IdentifierDecl	line_beginning = file_tell ( pfp )		51020	0					
ANR	54260	IdentifierDeclType	file_offset		51020	0					
ANR	54261	Identifier	line_beginning		51020	1					
ANR	54262	AssignmentExpression	line_beginning = file_tell ( pfp )		51020	2		=			
ANR	54263	Identifier	line_beginning		51020	0					
ANR	54264	CallExpression	file_tell ( pfp )		51020	1					
ANR	54265	Callee	file_tell		51020	0					
ANR	54266	Identifier	file_tell		51020	0					
ANR	54267	ArgumentList	pfp		51020	1					
ANR	54268	Argument	pfp		51020	0					
ANR	54269	Identifier	pfp		51020	0					
ANR	54270	ExpressionStatement	p_prefix_context = p_suffix_context = 0	1792:1:49306:49345	51020	4	True				
ANR	54271	AssignmentExpression	p_prefix_context = p_suffix_context = 0		51020	0		=			
ANR	54272	Identifier	p_prefix_context		51020	0					
ANR	54273	AssignmentExpression	p_suffix_context = 0		51020	1		=			
ANR	54274	Identifier	p_suffix_context		51020	0					
ANR	54275	PrimaryExpression	0		51020	1					
ANR	54276	ExpressionStatement	chars_read = get_line ( )	1793:1:49348:49372	51020	5	True				
ANR	54277	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	54278	Identifier	chars_read		51020	0					
ANR	54279	CallExpression	get_line ( )		51020	1					
ANR	54280	Callee	get_line		51020	0					
ANR	54281	Identifier	get_line		51020	0					
ANR	54282	ArgumentList			51020	1					
ANR	54283	IfStatement	if ( chars_read == ( size_t ) - 1 || ! chars_read || ! ISDIGIT ( * buf ) )		51020	6					
ANR	54284	Condition	chars_read == ( size_t ) - 1 || ! chars_read || ! ISDIGIT ( * buf )	1794:5:49379:49437	51020	0	True				
ANR	54285	OrExpression	chars_read == ( size_t ) - 1 || ! chars_read || ! ISDIGIT ( * buf )		51020	0		||			
ANR	54286	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	54287	Identifier	chars_read		51020	0					
ANR	54288	CastExpression	( size_t ) - 1		51020	1					
ANR	54289	CastTarget	size_t		51020	0					
ANR	54290	UnaryOperationExpression	- 1		51020	1					
ANR	54291	UnaryOperator	-		51020	0					
ANR	54292	PrimaryExpression	1		51020	1					
ANR	54293	OrExpression	! chars_read || ! ISDIGIT ( * buf )		51020	1		||			
ANR	54294	UnaryOperationExpression	! chars_read		51020	0					
ANR	54295	UnaryOperator	!		51020	0					
ANR	54296	Identifier	chars_read		51020	1					
ANR	54297	UnaryOperationExpression	! ISDIGIT ( * buf )		51020	1					
ANR	54298	UnaryOperator	!		51020	0					
ANR	54299	CallExpression	ISDIGIT ( * buf )		51020	1					
ANR	54300	Callee	ISDIGIT		51020	0					
ANR	54301	Identifier	ISDIGIT		51020	0					
ANR	54302	ArgumentList	* buf		51020	1					
ANR	54303	Argument	* buf		51020	0					
ANR	54304	UnaryOperationExpression	* buf		51020	0					
ANR	54305	UnaryOperator	*		51020	0					
ANR	54306	Identifier	buf		51020	1					
ANR	54307	CompoundStatement		624:66:17135:17135	51020	1					
ANR	54308	ExpressionStatement	"next_intuit_at ( line_beginning , p_input_line )"	1795:5:49447:49490	51020	0	True				
ANR	54309	CallExpression	"next_intuit_at ( line_beginning , p_input_line )"		51020	0					
ANR	54310	Callee	next_intuit_at		51020	0					
ANR	54311	Identifier	next_intuit_at		51020	0					
ANR	54312	ArgumentList	line_beginning		51020	1					
ANR	54313	Argument	line_beginning		51020	0					
ANR	54314	Identifier	line_beginning		51020	0					
ANR	54315	Argument	p_input_line		51020	1					
ANR	54316	Identifier	p_input_line		51020	0					
ANR	54317	ReturnStatement	return chars_read == ( size_t ) - 1 ? - 1 : 0 ;	1796:5:49497:49538	51020	1	True				
ANR	54318	ConditionalExpression	chars_read == ( size_t ) - 1 ? - 1 : 0		51020	0					
ANR	54319	Condition	chars_read == ( size_t ) - 1		51020	0					
ANR	54320	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	54321	Identifier	chars_read		51020	0					
ANR	54322	CastExpression	( size_t ) - 1		51020	1					
ANR	54323	CastTarget	size_t		51020	0					
ANR	54324	UnaryOperationExpression	- 1		51020	1					
ANR	54325	UnaryOperator	-		51020	0					
ANR	54326	PrimaryExpression	1		51020	1					
ANR	54327	UnaryOperationExpression	- 1		51020	1					
ANR	54328	UnaryOperator	-		51020	0					
ANR	54329	PrimaryExpression	1		51020	1					
ANR	54330	PrimaryExpression	0		51020	2					
ANR	54331	ExpressionStatement	"s = scan_linenum ( buf , & p_first )"	1798:1:49544:49576	51020	7	True				
ANR	54332	AssignmentExpression	"s = scan_linenum ( buf , & p_first )"		51020	0		=			
ANR	54333	Identifier	s		51020	0					
ANR	54334	CallExpression	"scan_linenum ( buf , & p_first )"		51020	1					
ANR	54335	Callee	scan_linenum		51020	0					
ANR	54336	Identifier	scan_linenum		51020	0					
ANR	54337	ArgumentList	buf		51020	1					
ANR	54338	Argument	buf		51020	0					
ANR	54339	Identifier	buf		51020	0					
ANR	54340	Argument	& p_first		51020	1					
ANR	54341	UnaryOperationExpression	& p_first		51020	0					
ANR	54342	UnaryOperator	&		51020	0					
ANR	54343	Identifier	p_first		51020	1					
ANR	54344	IfStatement	"if ( * s == ',' )"		51020	8					
ANR	54345	Condition	"* s == ','"	1799:5:49583:49591	51020	0	True				
ANR	54346	EqualityExpression	"* s == ','"		51020	0		==			
ANR	54347	UnaryOperationExpression	* s		51020	0					
ANR	54348	UnaryOperator	*		51020	0					
ANR	54349	Identifier	s		51020	1					
ANR	54350	PrimaryExpression	"','"		51020	1					
ANR	54351	CompoundStatement		629:16:17289:17289	51020	1					
ANR	54352	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"	1800:5:49601:49640	51020	0	True				
ANR	54353	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"		51020	0		=			
ANR	54354	Identifier	s		51020	0					
ANR	54355	CallExpression	"scan_linenum ( s + 1 , & p_ptrn_lines )"		51020	1					
ANR	54356	Callee	scan_linenum		51020	0					
ANR	54357	Identifier	scan_linenum		51020	0					
ANR	54358	ArgumentList	s + 1		51020	1					
ANR	54359	Argument	s + 1		51020	0					
ANR	54360	AdditiveExpression	s + 1		51020	0		+			
ANR	54361	Identifier	s		51020	0					
ANR	54362	PrimaryExpression	1		51020	1					
ANR	54363	Argument	& p_ptrn_lines		51020	1					
ANR	54364	UnaryOperationExpression	& p_ptrn_lines		51020	0					
ANR	54365	UnaryOperator	&		51020	0					
ANR	54366	Identifier	p_ptrn_lines		51020	1					
ANR	54367	ExpressionStatement	p_ptrn_lines += 1 - p_first	1801:5:49647:49674	51020	1	True				
ANR	54368	AssignmentExpression	p_ptrn_lines += 1 - p_first		51020	0		+=			
ANR	54369	Identifier	p_ptrn_lines		51020	0					
ANR	54370	AdditiveExpression	1 - p_first		51020	1		-			
ANR	54371	PrimaryExpression	1		51020	0					
ANR	54372	Identifier	p_first		51020	1					
ANR	54373	ElseStatement	else		51020	0					
ANR	54374	ExpressionStatement	p_ptrn_lines = ( * s != 'a' )	1804:5:49690:49716	51020	0	True				
ANR	54375	AssignmentExpression	p_ptrn_lines = ( * s != 'a' )		51020	0		=			
ANR	54376	Identifier	p_ptrn_lines		51020	0					
ANR	54377	EqualityExpression	* s != 'a'		51020	1		!=			
ANR	54378	UnaryOperationExpression	* s		51020	0					
ANR	54379	UnaryOperator	*		51020	0					
ANR	54380	Identifier	s		51020	1					
ANR	54381	PrimaryExpression	'a'		51020	1					
ANR	54382	IfStatement	if ( p_first >= LINENUM_MAX - p_ptrn_lines )		51020	9					
ANR	54383	Condition	p_first >= LINENUM_MAX - p_ptrn_lines	1805:5:49723:49759	51020	0	True				
ANR	54384	RelationalExpression	p_first >= LINENUM_MAX - p_ptrn_lines		51020	0		>=			
ANR	54385	Identifier	p_first		51020	0					
ANR	54386	AdditiveExpression	LINENUM_MAX - p_ptrn_lines		51020	1		-			
ANR	54387	Identifier	LINENUM_MAX		51020	0					
ANR	54388	Identifier	p_ptrn_lines		51020	1					
ANR	54389	ExpressionStatement	malformed ( )	1806:3:49765:49777	51020	1	True				
ANR	54390	CallExpression	malformed ( )		51020	0					
ANR	54391	Callee	malformed		51020	0					
ANR	54392	Identifier	malformed		51020	0					
ANR	54393	ArgumentList			51020	1					
ANR	54394	ExpressionStatement	hunk_type = * s	1807:1:49780:49794	51020	10	True				
ANR	54395	AssignmentExpression	hunk_type = * s		51020	0		=			
ANR	54396	Identifier	hunk_type		51020	0					
ANR	54397	UnaryOperationExpression	* s		51020	1					
ANR	54398	UnaryOperator	*		51020	0					
ANR	54399	Identifier	s		51020	1					
ANR	54400	IfStatement	if ( hunk_type == 'a' )		51020	11					
ANR	54401	Condition	hunk_type == 'a'	1808:5:49801:49816	51020	0	True				
ANR	54402	EqualityExpression	hunk_type == 'a'		51020	0		==			
ANR	54403	Identifier	hunk_type		51020	0					
ANR	54404	PrimaryExpression	'a'		51020	1					
ANR	54405	ExpressionStatement	p_first ++	1809:5:49824:49833	51020	1	True				
ANR	54406	PostIncDecOperationExpression	p_first ++		51020	0					
ANR	54407	Identifier	p_first		51020	0					
ANR	54408	IncDec	++		51020	1					
ANR	54409	ExpressionStatement	"s = scan_linenum ( s + 1 , & min )"	1810:1:49873:49903	51020	12	True				
ANR	54410	AssignmentExpression	"s = scan_linenum ( s + 1 , & min )"		51020	0		=			
ANR	54411	Identifier	s		51020	0					
ANR	54412	CallExpression	"scan_linenum ( s + 1 , & min )"		51020	1					
ANR	54413	Callee	scan_linenum		51020	0					
ANR	54414	Identifier	scan_linenum		51020	0					
ANR	54415	ArgumentList	s + 1		51020	1					
ANR	54416	Argument	s + 1		51020	0					
ANR	54417	AdditiveExpression	s + 1		51020	0		+			
ANR	54418	Identifier	s		51020	0					
ANR	54419	PrimaryExpression	1		51020	1					
ANR	54420	Argument	& min		51020	1					
ANR	54421	UnaryOperationExpression	& min		51020	0					
ANR	54422	UnaryOperator	&		51020	0					
ANR	54423	Identifier	min		51020	1					
ANR	54424	IfStatement	"if ( * s == ',' )"		51020	13					
ANR	54425	Condition	"* s == ','"	1811:5:49910:49918	51020	0	True				
ANR	54426	EqualityExpression	"* s == ','"		51020	0		==			
ANR	54427	UnaryOperationExpression	* s		51020	0					
ANR	54428	UnaryOperator	*		51020	0					
ANR	54429	Identifier	s		51020	1					
ANR	54430	PrimaryExpression	"','"		51020	1					
ANR	54431	ExpressionStatement	"scan_linenum ( s + 1 , & max )"	1812:5:49926:49952	51020	1	True				
ANR	54432	CallExpression	"scan_linenum ( s + 1 , & max )"		51020	0					
ANR	54433	Callee	scan_linenum		51020	0					
ANR	54434	Identifier	scan_linenum		51020	0					
ANR	54435	ArgumentList	s + 1		51020	1					
ANR	54436	Argument	s + 1		51020	0					
ANR	54437	AdditiveExpression	s + 1		51020	0		+			
ANR	54438	Identifier	s		51020	0					
ANR	54439	PrimaryExpression	1		51020	1					
ANR	54440	Argument	& max		51020	1					
ANR	54441	UnaryOperationExpression	& max		51020	0					
ANR	54442	UnaryOperator	&		51020	0					
ANR	54443	Identifier	max		51020	1					
ANR	54444	ElseStatement	else		51020	0					
ANR	54445	ExpressionStatement	max = min	1814:5:49965:49974	51020	0	True				
ANR	54446	AssignmentExpression	max = min		51020	0		=			
ANR	54447	Identifier	max		51020	0					
ANR	54448	Identifier	min		51020	1					
ANR	54449	IfStatement	if ( min > max || max - min == LINENUM_MAX )		51020	14					
ANR	54450	Condition	min > max || max - min == LINENUM_MAX	1815:5:49981:50017	51020	0	True				
ANR	54451	OrExpression	min > max || max - min == LINENUM_MAX		51020	0		||			
ANR	54452	RelationalExpression	min > max		51020	0		>			
ANR	54453	Identifier	min		51020	0					
ANR	54454	Identifier	max		51020	1					
ANR	54455	EqualityExpression	max - min == LINENUM_MAX		51020	1		==			
ANR	54456	AdditiveExpression	max - min		51020	0		-			
ANR	54457	Identifier	max		51020	0					
ANR	54458	Identifier	min		51020	1					
ANR	54459	Identifier	LINENUM_MAX		51020	1					
ANR	54460	ExpressionStatement	malformed ( )	1816:3:50023:50035	51020	1	True				
ANR	54461	CallExpression	malformed ( )		51020	0					
ANR	54462	Callee	malformed		51020	0					
ANR	54463	Identifier	malformed		51020	0					
ANR	54464	ArgumentList			51020	1					
ANR	54465	IfStatement	if ( hunk_type == 'd' )		51020	15					
ANR	54466	Condition	hunk_type == 'd'	1817:5:50042:50057	51020	0	True				
ANR	54467	EqualityExpression	hunk_type == 'd'		51020	0		==			
ANR	54468	Identifier	hunk_type		51020	0					
ANR	54469	PrimaryExpression	'd'		51020	1					
ANR	54470	ExpressionStatement	min ++	1818:5:50065:50070	51020	1	True				
ANR	54471	PostIncDecOperationExpression	min ++		51020	0					
ANR	54472	Identifier	min		51020	0					
ANR	54473	IncDec	++		51020	1					
ANR	54474	ExpressionStatement	p_newfirst = min	1819:1:50073:50089	51020	16	True				
ANR	54475	AssignmentExpression	p_newfirst = min		51020	0		=			
ANR	54476	Identifier	p_newfirst		51020	0					
ANR	54477	Identifier	min		51020	1					
ANR	54478	ExpressionStatement	p_repl_lines = max - min + 1	1820:1:50092:50120	51020	17	True				
ANR	54479	AssignmentExpression	p_repl_lines = max - min + 1		51020	0		=			
ANR	54480	Identifier	p_repl_lines		51020	0					
ANR	54481	AdditiveExpression	max - min + 1		51020	1		-			
ANR	54482	Identifier	max		51020	0					
ANR	54483	AdditiveExpression	min + 1		51020	1		+			
ANR	54484	Identifier	min		51020	0					
ANR	54485	PrimaryExpression	1		51020	1					
ANR	54486	IfStatement	if ( p_newfirst >= LINENUM_MAX - p_repl_lines )		51020	18					
ANR	54487	Condition	p_newfirst >= LINENUM_MAX - p_repl_lines	1821:5:50127:50166	51020	0	True				
ANR	54488	RelationalExpression	p_newfirst >= LINENUM_MAX - p_repl_lines		51020	0		>=			
ANR	54489	Identifier	p_newfirst		51020	0					
ANR	54490	AdditiveExpression	LINENUM_MAX - p_repl_lines		51020	1		-			
ANR	54491	Identifier	LINENUM_MAX		51020	0					
ANR	54492	Identifier	p_repl_lines		51020	1					
ANR	54493	ExpressionStatement	malformed ( )	1822:3:50172:50184	51020	1	True				
ANR	54494	CallExpression	malformed ( )		51020	0					
ANR	54495	Callee	malformed		51020	0					
ANR	54496	Identifier	malformed		51020	0					
ANR	54497	ArgumentList			51020	1					
ANR	54498	IfStatement	if ( p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 ) )		51020	19					
ANR	54499	Condition	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )	1823:5:50191:50238	51020	0	True				
ANR	54500	RelationalExpression	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )		51020	0		>=			
ANR	54501	Identifier	p_ptrn_lines		51020	0					
ANR	54502	AdditiveExpression	LINENUM_MAX - ( p_repl_lines + 1 )		51020	1		-			
ANR	54503	Identifier	LINENUM_MAX		51020	0					
ANR	54504	AdditiveExpression	p_repl_lines + 1		51020	1		+			
ANR	54505	Identifier	p_repl_lines		51020	0					
ANR	54506	PrimaryExpression	1		51020	1					
ANR	54507	ExpressionStatement	malformed ( )	1824:3:50244:50256	51020	1	True				
ANR	54508	CallExpression	malformed ( )		51020	0					
ANR	54509	Callee	malformed		51020	0					
ANR	54510	Identifier	malformed		51020	0					
ANR	54511	ArgumentList			51020	1					
ANR	54512	ExpressionStatement	p_end = p_ptrn_lines + p_repl_lines + 1	1825:1:50259:50298	51020	20	True				
ANR	54513	AssignmentExpression	p_end = p_ptrn_lines + p_repl_lines + 1		51020	0		=			
ANR	54514	Identifier	p_end		51020	0					
ANR	54515	AdditiveExpression	p_ptrn_lines + p_repl_lines + 1		51020	1		+			
ANR	54516	Identifier	p_ptrn_lines		51020	0					
ANR	54517	AdditiveExpression	p_repl_lines + 1		51020	1		+			
ANR	54518	Identifier	p_repl_lines		51020	0					
ANR	54519	PrimaryExpression	1		51020	1					
ANR	54520	WhileStatement	while ( p_end + 1 >= hunkmax )		51020	21					
ANR	54521	Condition	p_end + 1 >= hunkmax	1826:8:50308:50327	51020	0	True				
ANR	54522	RelationalExpression	p_end + 1 >= hunkmax		51020	0		>=			
ANR	54523	AdditiveExpression	p_end + 1		51020	0		+			
ANR	54524	Identifier	p_end		51020	0					
ANR	54525	PrimaryExpression	1		51020	1					
ANR	54526	Identifier	hunkmax		51020	1					
ANR	54527	IfStatement	if ( ! grow_hunkmax ( ) )		51020	1					
ANR	54528	Condition	! grow_hunkmax ( )	1827:7:50337:50353	51020	0	True				
ANR	54529	UnaryOperationExpression	! grow_hunkmax ( )		51020	0					
ANR	54530	UnaryOperator	!		51020	0					
ANR	54531	CallExpression	grow_hunkmax ( )		51020	1					
ANR	54532	Callee	grow_hunkmax		51020	0					
ANR	54533	Identifier	grow_hunkmax		51020	0					
ANR	54534	ArgumentList			51020	1					
ANR	54535	CompoundStatement		658:5:18056:18056	51020	1					
ANR	54536	ExpressionStatement	p_end = - 1	1829:7:50370:50380	51020	0	True				
ANR	54537	AssignmentExpression	p_end = - 1		51020	0		=			
ANR	54538	Identifier	p_end		51020	0					
ANR	54539	UnaryOperationExpression	- 1		51020	1					
ANR	54540	UnaryOperator	-		51020	0					
ANR	54541	PrimaryExpression	1		51020	1					
ANR	54542	ReturnStatement	return - 1 ;	1830:7:50389:50398	51020	1	True				
ANR	54543	UnaryOperationExpression	- 1		51020	0					
ANR	54544	UnaryOperator	-		51020	0					
ANR	54545	PrimaryExpression	1		51020	1					
ANR	54546	ExpressionStatement	"sprintf ( buf , ""*** %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"	1832:1:50408:50531	51020	22	True				
ANR	54547	CallExpression	"sprintf ( buf , ""*** %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"		51020	0					
ANR	54548	Callee	sprintf		51020	0					
ANR	54549	Identifier	sprintf		51020	0					
ANR	54550	ArgumentList	buf		51020	1					
ANR	54551	Argument	buf		51020	0					
ANR	54552	Identifier	buf		51020	0					
ANR	54553	Argument	"""*** %s,%s\\n"""		51020	1					
ANR	54554	PrimaryExpression	"""*** %s,%s\\n"""		51020	0					
ANR	54555	Argument	"format_linenum ( numbuf0 , p_first )"		51020	2					
ANR	54556	CallExpression	"format_linenum ( numbuf0 , p_first )"		51020	0					
ANR	54557	Callee	format_linenum		51020	0					
ANR	54558	Identifier	format_linenum		51020	0					
ANR	54559	ArgumentList	numbuf0		51020	1					
ANR	54560	Argument	numbuf0		51020	0					
ANR	54561	Identifier	numbuf0		51020	0					
ANR	54562	Argument	p_first		51020	1					
ANR	54563	Identifier	p_first		51020	0					
ANR	54564	Argument	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		51020	3					
ANR	54565	CallExpression	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		51020	0					
ANR	54566	Callee	format_linenum		51020	0					
ANR	54567	Identifier	format_linenum		51020	0					
ANR	54568	ArgumentList	numbuf1		51020	1					
ANR	54569	Argument	numbuf1		51020	0					
ANR	54570	Identifier	numbuf1		51020	0					
ANR	54571	Argument	p_first + p_ptrn_lines - 1		51020	1					
ANR	54572	AdditiveExpression	p_first + p_ptrn_lines - 1		51020	0		+			
ANR	54573	Identifier	p_first		51020	0					
ANR	54574	AdditiveExpression	p_ptrn_lines - 1		51020	1		-			
ANR	54575	Identifier	p_ptrn_lines		51020	0					
ANR	54576	PrimaryExpression	1		51020	1					
ANR	54577	ExpressionStatement	p_len [ 0 ] = strlen ( buf )	1835:1:50534:50557	51020	23	True				
ANR	54578	AssignmentExpression	p_len [ 0 ] = strlen ( buf )		51020	0		=			
ANR	54579	ArrayIndexing	p_len [ 0 ]		51020	0					
ANR	54580	Identifier	p_len		51020	0					
ANR	54581	PrimaryExpression	0		51020	1					
ANR	54582	CallExpression	strlen ( buf )		51020	1					
ANR	54583	Callee	strlen		51020	0					
ANR	54584	Identifier	strlen		51020	0					
ANR	54585	ArgumentList	buf		51020	1					
ANR	54586	Argument	buf		51020	0					
ANR	54587	Identifier	buf		51020	0					
ANR	54588	IfStatement	if ( ! ( p_line [ 0 ] = savestr ( buf ) ) )		51020	24					
ANR	54589	Condition	! ( p_line [ 0 ] = savestr ( buf ) )	1836:5:50564:50592	51020	0	True				
ANR	54590	UnaryOperationExpression	! ( p_line [ 0 ] = savestr ( buf ) )		51020	0					
ANR	54591	UnaryOperator	!		51020	0					
ANR	54592	AssignmentExpression	p_line [ 0 ] = savestr ( buf )		51020	1		=			
ANR	54593	ArrayIndexing	p_line [ 0 ]		51020	0					
ANR	54594	Identifier	p_line		51020	0					
ANR	54595	PrimaryExpression	0		51020	1					
ANR	54596	CallExpression	savestr ( buf )		51020	1					
ANR	54597	Callee	savestr		51020	0					
ANR	54598	Identifier	savestr		51020	0					
ANR	54599	ArgumentList	buf		51020	1					
ANR	54600	Argument	buf		51020	0					
ANR	54601	Identifier	buf		51020	0					
ANR	54602	CompoundStatement		666:36:18290:18290	51020	1					
ANR	54603	ExpressionStatement	p_end = - 1	1837:5:50602:50612	51020	0	True				
ANR	54604	AssignmentExpression	p_end = - 1		51020	0		=			
ANR	54605	Identifier	p_end		51020	0					
ANR	54606	UnaryOperationExpression	- 1		51020	1					
ANR	54607	UnaryOperator	-		51020	0					
ANR	54608	PrimaryExpression	1		51020	1					
ANR	54609	ReturnStatement	return - 1 ;	1838:5:50619:50628	51020	1	True				
ANR	54610	UnaryOperationExpression	- 1		51020	0					
ANR	54611	UnaryOperator	-		51020	0					
ANR	54612	PrimaryExpression	1		51020	1					
ANR	54613	ExpressionStatement	p_Char [ 0 ] = '*'	1840:1:50634:50649	51020	25	True				
ANR	54614	AssignmentExpression	p_Char [ 0 ] = '*'		51020	0		=			
ANR	54615	ArrayIndexing	p_Char [ 0 ]		51020	0					
ANR	54616	Identifier	p_Char		51020	0					
ANR	54617	PrimaryExpression	0		51020	1					
ANR	54618	PrimaryExpression	'*'		51020	1					
ANR	54619	ForStatement	for ( i = 1 ; i <= p_ptrn_lines ; i ++ )		51020	26					
ANR	54620	ForInit	i = 1 ;	1841:6:50657:50660	51020	0	True				
ANR	54621	AssignmentExpression	i = 1		51020	0		=			
ANR	54622	Identifier	i		51020	0					
ANR	54623	PrimaryExpression	1		51020	1					
ANR	54624	Condition	i <= p_ptrn_lines	1841:11:50662:50676	51020	1	True				
ANR	54625	RelationalExpression	i <= p_ptrn_lines		51020	0		<=			
ANR	54626	Identifier	i		51020	0					
ANR	54627	Identifier	p_ptrn_lines		51020	1					
ANR	54628	PostIncDecOperationExpression	i ++	1841:28:50679:50681	51020	2	True				
ANR	54629	Identifier	i		51020	0					
ANR	54630	IncDec	++		51020	1					
ANR	54631	CompoundStatement		671:33:18379:18379	51020	3					
ANR	54632	ExpressionStatement	chars_read = get_line ( )	1842:5:50691:50715	51020	0	True				
ANR	54633	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	54634	Identifier	chars_read		51020	0					
ANR	54635	CallExpression	get_line ( )		51020	1					
ANR	54636	Callee	get_line		51020	0					
ANR	54637	Identifier	get_line		51020	0					
ANR	54638	ArgumentList			51020	1					
ANR	54639	IfStatement	if ( chars_read == ( size_t ) - 1 )		51020	1					
ANR	54640	Condition	chars_read == ( size_t ) - 1	1843:9:50726:50750	51020	0	True				
ANR	54641	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	54642	Identifier	chars_read		51020	0					
ANR	54643	CastExpression	( size_t ) - 1		51020	1					
ANR	54644	CastTarget	size_t		51020	0					
ANR	54645	UnaryOperationExpression	- 1		51020	1					
ANR	54646	UnaryOperator	-		51020	0					
ANR	54647	PrimaryExpression	1		51020	1					
ANR	54648	CompoundStatement		674:7:18455:18455	51020	1					
ANR	54649	ExpressionStatement	p_end = i - 1	1845:2:50764:50777	51020	0	True				
ANR	54650	AssignmentExpression	p_end = i - 1		51020	0		=			
ANR	54651	Identifier	p_end		51020	0					
ANR	54652	AdditiveExpression	i - 1		51020	1		-			
ANR	54653	Identifier	i		51020	0					
ANR	54654	PrimaryExpression	1		51020	1					
ANR	54655	ReturnStatement	return - 1 ;	1846:2:50781:50790	51020	1	True				
ANR	54656	UnaryOperationExpression	- 1		51020	0					
ANR	54657	UnaryOperator	-		51020	0					
ANR	54658	PrimaryExpression	1		51020	1					
ANR	54659	IfStatement	if ( ! chars_read )		51020	2					
ANR	54660	Condition	! chars_read	1848:9:50810:50820	51020	0	True				
ANR	54661	UnaryOperationExpression	! chars_read		51020	0					
ANR	54662	UnaryOperator	!		51020	0					
ANR	54663	Identifier	chars_read		51020	1					
ANR	54664	ExpressionStatement	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1849:7:50830:50929	51020	1	True				
ANR	54665	CallExpression	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	54666	Callee	fatal		51020	0					
ANR	54667	Identifier	fatal		51020	0					
ANR	54668	ArgumentList	"""unexpected end of file in patch at line %s"""		51020	1					
ANR	54669	Argument	"""unexpected end of file in patch at line %s"""		51020	0					
ANR	54670	PrimaryExpression	"""unexpected end of file in patch at line %s"""		51020	0					
ANR	54671	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	54672	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	54673	Callee	format_linenum		51020	0					
ANR	54674	Identifier	format_linenum		51020	0					
ANR	54675	ArgumentList	numbuf0		51020	1					
ANR	54676	Argument	numbuf0		51020	0					
ANR	54677	Identifier	numbuf0		51020	0					
ANR	54678	Argument	p_input_line		51020	1					
ANR	54679	Identifier	p_input_line		51020	0					
ANR	54680	IfStatement	if ( buf [ 0 ] != '<' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' ) )		51020	3					
ANR	54681	Condition	buf [ 0 ] != '<' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )	1851:9:50940:50989	51020	0	True				
ANR	54682	OrExpression	buf [ 0 ] != '<' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )		51020	0		||			
ANR	54683	EqualityExpression	buf [ 0 ] != '<'		51020	0		!=			
ANR	54684	ArrayIndexing	buf [ 0 ]		51020	0					
ANR	54685	Identifier	buf		51020	0					
ANR	54686	PrimaryExpression	0		51020	1					
ANR	54687	PrimaryExpression	'<'		51020	1					
ANR	54688	AndExpression	buf [ 1 ] != ' ' && buf [ 1 ] != '\\t'		51020	1		&&			
ANR	54689	EqualityExpression	buf [ 1 ] != ' '		51020	0		!=			
ANR	54690	ArrayIndexing	buf [ 1 ]		51020	0					
ANR	54691	Identifier	buf		51020	0					
ANR	54692	PrimaryExpression	1		51020	1					
ANR	54693	PrimaryExpression	' '		51020	1					
ANR	54694	EqualityExpression	buf [ 1 ] != '\\t'		51020	1		!=			
ANR	54695	ArrayIndexing	buf [ 1 ]		51020	0					
ANR	54696	Identifier	buf		51020	0					
ANR	54697	PrimaryExpression	1		51020	1					
ANR	54698	PrimaryExpression	'\\t'		51020	1					
ANR	54699	ExpressionStatement	"fatal ( ""'<' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"	1852:7:50999:51113	51020	1	True				
ANR	54700	CallExpression	"fatal ( ""'<' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	54701	Callee	fatal		51020	0					
ANR	54702	Identifier	fatal		51020	0					
ANR	54703	ArgumentList	"""'<' followed by space or tab expected at line %s of patch"""		51020	1					
ANR	54704	Argument	"""'<' followed by space or tab expected at line %s of patch"""		51020	0					
ANR	54705	PrimaryExpression	"""'<' followed by space or tab expected at line %s of patch"""		51020	0					
ANR	54706	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	54707	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	54708	Callee	format_linenum		51020	0					
ANR	54709	Identifier	format_linenum		51020	0					
ANR	54710	ArgumentList	numbuf0		51020	1					
ANR	54711	Argument	numbuf0		51020	0					
ANR	54712	Identifier	numbuf0		51020	0					
ANR	54713	Argument	p_input_line		51020	1					
ANR	54714	Identifier	p_input_line		51020	0					
ANR	54715	ExpressionStatement	chars_read -= 2 + ( i == p_ptrn_lines && incomplete_line ( ) )	1854:5:51120:51179	51020	4	True				
ANR	54716	AssignmentExpression	chars_read -= 2 + ( i == p_ptrn_lines && incomplete_line ( ) )		51020	0		-=			
ANR	54717	Identifier	chars_read		51020	0					
ANR	54718	AdditiveExpression	2 + ( i == p_ptrn_lines && incomplete_line ( ) )		51020	1		+			
ANR	54719	PrimaryExpression	2		51020	0					
ANR	54720	AndExpression	i == p_ptrn_lines && incomplete_line ( )		51020	1		&&			
ANR	54721	EqualityExpression	i == p_ptrn_lines		51020	0		==			
ANR	54722	Identifier	i		51020	0					
ANR	54723	Identifier	p_ptrn_lines		51020	1					
ANR	54724	CallExpression	incomplete_line ( )		51020	1					
ANR	54725	Callee	incomplete_line		51020	0					
ANR	54726	Identifier	incomplete_line		51020	0					
ANR	54727	ArgumentList			51020	1					
ANR	54728	ExpressionStatement	p_len [ i ] = chars_read	1855:5:51186:51207	51020	5	True				
ANR	54729	AssignmentExpression	p_len [ i ] = chars_read		51020	0		=			
ANR	54730	ArrayIndexing	p_len [ i ]		51020	0					
ANR	54731	Identifier	p_len		51020	0					
ANR	54732	Identifier	i		51020	1					
ANR	54733	Identifier	chars_read		51020	1					
ANR	54734	ExpressionStatement	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"	1856:5:51214:51255	51020	6	True				
ANR	54735	AssignmentExpression	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"		51020	0		=			
ANR	54736	ArrayIndexing	p_line [ i ]		51020	0					
ANR	54737	Identifier	p_line		51020	0					
ANR	54738	Identifier	i		51020	1					
ANR	54739	CallExpression	"savebuf ( buf + 2 , chars_read )"		51020	1					
ANR	54740	Callee	savebuf		51020	0					
ANR	54741	Identifier	savebuf		51020	0					
ANR	54742	ArgumentList	buf + 2		51020	1					
ANR	54743	Argument	buf + 2		51020	0					
ANR	54744	AdditiveExpression	buf + 2		51020	0		+			
ANR	54745	Identifier	buf		51020	0					
ANR	54746	PrimaryExpression	2		51020	1					
ANR	54747	Argument	chars_read		51020	1					
ANR	54748	Identifier	chars_read		51020	0					
ANR	54749	IfStatement	if ( chars_read && ! p_line [ i ] )		51020	7					
ANR	54750	Condition	chars_read && ! p_line [ i ]	1857:9:51266:51290	51020	0	True				
ANR	54751	AndExpression	chars_read && ! p_line [ i ]		51020	0		&&			
ANR	54752	Identifier	chars_read		51020	0					
ANR	54753	UnaryOperationExpression	! p_line [ i ]		51020	1					
ANR	54754	UnaryOperator	!		51020	0					
ANR	54755	ArrayIndexing	p_line [ i ]		51020	1					
ANR	54756	Identifier	p_line		51020	0					
ANR	54757	Identifier	i		51020	1					
ANR	54758	CompoundStatement		687:36:18988:18988	51020	1					
ANR	54759	ExpressionStatement	p_end = i - 1	1858:2:51297:51308	51020	0	True				
ANR	54760	AssignmentExpression	p_end = i - 1		51020	0		=			
ANR	54761	Identifier	p_end		51020	0					
ANR	54762	AdditiveExpression	i - 1		51020	1		-			
ANR	54763	Identifier	i		51020	0					
ANR	54764	PrimaryExpression	1		51020	1					
ANR	54765	ReturnStatement	return - 1 ;	1859:2:51312:51321	51020	1	True				
ANR	54766	UnaryOperationExpression	- 1		51020	0					
ANR	54767	UnaryOperator	-		51020	0					
ANR	54768	PrimaryExpression	1		51020	1					
ANR	54769	ExpressionStatement	p_Char [ i ] = '-'	1861:5:51335:51350	51020	8	True				
ANR	54770	AssignmentExpression	p_Char [ i ] = '-'		51020	0		=			
ANR	54771	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	54772	Identifier	p_Char		51020	0					
ANR	54773	Identifier	i		51020	1					
ANR	54774	PrimaryExpression	'-'		51020	1					
ANR	54775	IfStatement	if ( hunk_type == 'c' )		51020	27					
ANR	54776	Condition	hunk_type == 'c'	1863:5:51360:51375	51020	0	True				
ANR	54777	EqualityExpression	hunk_type == 'c'		51020	0		==			
ANR	54778	Identifier	hunk_type		51020	0					
ANR	54779	PrimaryExpression	'c'		51020	1					
ANR	54780	CompoundStatement		693:23:19073:19073	51020	1					
ANR	54781	ExpressionStatement	chars_read = get_line ( )	1864:5:51385:51409	51020	0	True				
ANR	54782	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	54783	Identifier	chars_read		51020	0					
ANR	54784	CallExpression	get_line ( )		51020	1					
ANR	54785	Callee	get_line		51020	0					
ANR	54786	Identifier	get_line		51020	0					
ANR	54787	ArgumentList			51020	1					
ANR	54788	IfStatement	if ( chars_read == ( size_t ) - 1 )		51020	1					
ANR	54789	Condition	chars_read == ( size_t ) - 1	1865:9:51420:51444	51020	0	True				
ANR	54790	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	54791	Identifier	chars_read		51020	0					
ANR	54792	CastExpression	( size_t ) - 1		51020	1					
ANR	54793	CastTarget	size_t		51020	0					
ANR	54794	UnaryOperationExpression	- 1		51020	1					
ANR	54795	UnaryOperator	-		51020	0					
ANR	54796	PrimaryExpression	1		51020	1					
ANR	54797	CompoundStatement		696:7:19149:19149	51020	1					
ANR	54798	ExpressionStatement	p_end = i - 1	1867:2:51458:51471	51020	0	True				
ANR	54799	AssignmentExpression	p_end = i - 1		51020	0		=			
ANR	54800	Identifier	p_end		51020	0					
ANR	54801	AdditiveExpression	i - 1		51020	1		-			
ANR	54802	Identifier	i		51020	0					
ANR	54803	PrimaryExpression	1		51020	1					
ANR	54804	ReturnStatement	return - 1 ;	1868:2:51475:51484	51020	1	True				
ANR	54805	UnaryOperationExpression	- 1		51020	0					
ANR	54806	UnaryOperator	-		51020	0					
ANR	54807	PrimaryExpression	1		51020	1					
ANR	54808	IfStatement	if ( ! chars_read )		51020	2					
ANR	54809	Condition	! chars_read	1870:9:51504:51515	51020	0	True				
ANR	54810	UnaryOperationExpression	! chars_read		51020	0					
ANR	54811	UnaryOperator	!		51020	0					
ANR	54812	Identifier	chars_read		51020	1					
ANR	54813	ExpressionStatement	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1871:7:51525:51624	51020	1	True				
ANR	54814	CallExpression	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	54815	Callee	fatal		51020	0					
ANR	54816	Identifier	fatal		51020	0					
ANR	54817	ArgumentList	"""unexpected end of file in patch at line %s"""		51020	1					
ANR	54818	Argument	"""unexpected end of file in patch at line %s"""		51020	0					
ANR	54819	PrimaryExpression	"""unexpected end of file in patch at line %s"""		51020	0					
ANR	54820	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	54821	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	54822	Callee	format_linenum		51020	0					
ANR	54823	Identifier	format_linenum		51020	0					
ANR	54824	ArgumentList	numbuf0		51020	1					
ANR	54825	Argument	numbuf0		51020	0					
ANR	54826	Identifier	numbuf0		51020	0					
ANR	54827	Argument	p_input_line		51020	1					
ANR	54828	Identifier	p_input_line		51020	0					
ANR	54829	IfStatement	if ( * buf != '-' )		51020	3					
ANR	54830	Condition	* buf != '-'	1873:9:51635:51645	51020	0	True				
ANR	54831	EqualityExpression	* buf != '-'		51020	0		!=			
ANR	54832	UnaryOperationExpression	* buf		51020	0					
ANR	54833	UnaryOperator	*		51020	0					
ANR	54834	Identifier	buf		51020	1					
ANR	54835	PrimaryExpression	'-'		51020	1					
ANR	54836	ExpressionStatement	"fatal ( ""'---' expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"	1874:7:51655:51746	51020	1	True				
ANR	54837	CallExpression	"fatal ( ""'---' expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	54838	Callee	fatal		51020	0					
ANR	54839	Identifier	fatal		51020	0					
ANR	54840	ArgumentList	"""'---' expected at line %s of patch"""		51020	1					
ANR	54841	Argument	"""'---' expected at line %s of patch"""		51020	0					
ANR	54842	PrimaryExpression	"""'---' expected at line %s of patch"""		51020	0					
ANR	54843	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	54844	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	54845	Callee	format_linenum		51020	0					
ANR	54846	Identifier	format_linenum		51020	0					
ANR	54847	ArgumentList	numbuf0		51020	1					
ANR	54848	Argument	numbuf0		51020	0					
ANR	54849	Identifier	numbuf0		51020	0					
ANR	54850	Argument	p_input_line		51020	1					
ANR	54851	Identifier	p_input_line		51020	0					
ANR	54852	ExpressionStatement	"sprintf ( buf , ""--- %s,%s\\n"" , format_linenum ( numbuf0 , min ) , format_linenum ( numbuf1 , max ) )"	1877:1:51752:51848	51020	28	True				
ANR	54853	CallExpression	"sprintf ( buf , ""--- %s,%s\\n"" , format_linenum ( numbuf0 , min ) , format_linenum ( numbuf1 , max ) )"		51020	0					
ANR	54854	Callee	sprintf		51020	0					
ANR	54855	Identifier	sprintf		51020	0					
ANR	54856	ArgumentList	buf		51020	1					
ANR	54857	Argument	buf		51020	0					
ANR	54858	Identifier	buf		51020	0					
ANR	54859	Argument	"""--- %s,%s\\n"""		51020	1					
ANR	54860	PrimaryExpression	"""--- %s,%s\\n"""		51020	0					
ANR	54861	Argument	"format_linenum ( numbuf0 , min )"		51020	2					
ANR	54862	CallExpression	"format_linenum ( numbuf0 , min )"		51020	0					
ANR	54863	Callee	format_linenum		51020	0					
ANR	54864	Identifier	format_linenum		51020	0					
ANR	54865	ArgumentList	numbuf0		51020	1					
ANR	54866	Argument	numbuf0		51020	0					
ANR	54867	Identifier	numbuf0		51020	0					
ANR	54868	Argument	min		51020	1					
ANR	54869	Identifier	min		51020	0					
ANR	54870	Argument	"format_linenum ( numbuf1 , max )"		51020	3					
ANR	54871	CallExpression	"format_linenum ( numbuf1 , max )"		51020	0					
ANR	54872	Callee	format_linenum		51020	0					
ANR	54873	Identifier	format_linenum		51020	0					
ANR	54874	ArgumentList	numbuf1		51020	1					
ANR	54875	Argument	numbuf1		51020	0					
ANR	54876	Identifier	numbuf1		51020	0					
ANR	54877	Argument	max		51020	1					
ANR	54878	Identifier	max		51020	0					
ANR	54879	ExpressionStatement	p_len [ i ] = strlen ( buf )	1880:1:51851:51874	51020	29	True				
ANR	54880	AssignmentExpression	p_len [ i ] = strlen ( buf )		51020	0		=			
ANR	54881	ArrayIndexing	p_len [ i ]		51020	0					
ANR	54882	Identifier	p_len		51020	0					
ANR	54883	Identifier	i		51020	1					
ANR	54884	CallExpression	strlen ( buf )		51020	1					
ANR	54885	Callee	strlen		51020	0					
ANR	54886	Identifier	strlen		51020	0					
ANR	54887	ArgumentList	buf		51020	1					
ANR	54888	Argument	buf		51020	0					
ANR	54889	Identifier	buf		51020	0					
ANR	54890	IfStatement	if ( ! ( p_line [ i ] = savestr ( buf ) ) )		51020	30					
ANR	54891	Condition	! ( p_line [ i ] = savestr ( buf ) )	1881:5:51881:51909	51020	0	True				
ANR	54892	UnaryOperationExpression	! ( p_line [ i ] = savestr ( buf ) )		51020	0					
ANR	54893	UnaryOperator	!		51020	0					
ANR	54894	AssignmentExpression	p_line [ i ] = savestr ( buf )		51020	1		=			
ANR	54895	ArrayIndexing	p_line [ i ]		51020	0					
ANR	54896	Identifier	p_line		51020	0					
ANR	54897	Identifier	i		51020	1					
ANR	54898	CallExpression	savestr ( buf )		51020	1					
ANR	54899	Callee	savestr		51020	0					
ANR	54900	Identifier	savestr		51020	0					
ANR	54901	ArgumentList	buf		51020	1					
ANR	54902	Argument	buf		51020	0					
ANR	54903	Identifier	buf		51020	0					
ANR	54904	CompoundStatement		711:36:19607:19607	51020	1					
ANR	54905	ExpressionStatement	p_end = i - 1	1882:5:51919:51930	51020	0	True				
ANR	54906	AssignmentExpression	p_end = i - 1		51020	0		=			
ANR	54907	Identifier	p_end		51020	0					
ANR	54908	AdditiveExpression	i - 1		51020	1		-			
ANR	54909	Identifier	i		51020	0					
ANR	54910	PrimaryExpression	1		51020	1					
ANR	54911	ReturnStatement	return - 1 ;	1883:5:51937:51946	51020	1	True				
ANR	54912	UnaryOperationExpression	- 1		51020	0					
ANR	54913	UnaryOperator	-		51020	0					
ANR	54914	PrimaryExpression	1		51020	1					
ANR	54915	ExpressionStatement	p_Char [ i ] = '='	1885:1:51952:51967	51020	31	True				
ANR	54916	AssignmentExpression	p_Char [ i ] = '='		51020	0		=			
ANR	54917	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	54918	Identifier	p_Char		51020	0					
ANR	54919	Identifier	i		51020	1					
ANR	54920	PrimaryExpression	'='		51020	1					
ANR	54921	ForStatement	for ( i ++ ; i <= p_end ; i ++ )		51020	32					
ANR	54922	ForInit	i ++ ;	1886:6:51975:51978	51020	0	True				
ANR	54923	PostIncDecOperationExpression	i ++		51020	0					
ANR	54924	Identifier	i		51020	0					
ANR	54925	IncDec	++		51020	1					
ANR	54926	Condition	i <= p_end	1886:11:51980:51987	51020	1	True				
ANR	54927	RelationalExpression	i <= p_end		51020	0		<=			
ANR	54928	Identifier	i		51020	0					
ANR	54929	Identifier	p_end		51020	1					
ANR	54930	PostIncDecOperationExpression	i ++	1886:21:51990:51992	51020	2	True				
ANR	54931	Identifier	i		51020	0					
ANR	54932	IncDec	++		51020	1					
ANR	54933	CompoundStatement		716:26:19690:19690	51020	3					
ANR	54934	ExpressionStatement	chars_read = get_line ( )	1887:5:52002:52026	51020	0	True				
ANR	54935	AssignmentExpression	chars_read = get_line ( )		51020	0		=			
ANR	54936	Identifier	chars_read		51020	0					
ANR	54937	CallExpression	get_line ( )		51020	1					
ANR	54938	Callee	get_line		51020	0					
ANR	54939	Identifier	get_line		51020	0					
ANR	54940	ArgumentList			51020	1					
ANR	54941	IfStatement	if ( chars_read == ( size_t ) - 1 )		51020	1					
ANR	54942	Condition	chars_read == ( size_t ) - 1	1888:9:52037:52061	51020	0	True				
ANR	54943	EqualityExpression	chars_read == ( size_t ) - 1		51020	0		==			
ANR	54944	Identifier	chars_read		51020	0					
ANR	54945	CastExpression	( size_t ) - 1		51020	1					
ANR	54946	CastTarget	size_t		51020	0					
ANR	54947	UnaryOperationExpression	- 1		51020	1					
ANR	54948	UnaryOperator	-		51020	0					
ANR	54949	PrimaryExpression	1		51020	1					
ANR	54950	CompoundStatement		719:7:19766:19766	51020	1					
ANR	54951	ExpressionStatement	p_end = i - 1	1890:2:52075:52088	51020	0	True				
ANR	54952	AssignmentExpression	p_end = i - 1		51020	0		=			
ANR	54953	Identifier	p_end		51020	0					
ANR	54954	AdditiveExpression	i - 1		51020	1		-			
ANR	54955	Identifier	i		51020	0					
ANR	54956	PrimaryExpression	1		51020	1					
ANR	54957	ReturnStatement	return - 1 ;	1891:2:52092:52101	51020	1	True				
ANR	54958	UnaryOperationExpression	- 1		51020	0					
ANR	54959	UnaryOperator	-		51020	0					
ANR	54960	PrimaryExpression	1		51020	1					
ANR	54961	IfStatement	if ( ! chars_read )		51020	2					
ANR	54962	Condition	! chars_read	1893:9:52121:52131	51020	0	True				
ANR	54963	UnaryOperationExpression	! chars_read		51020	0					
ANR	54964	UnaryOperator	!		51020	0					
ANR	54965	Identifier	chars_read		51020	1					
ANR	54966	ExpressionStatement	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1894:7:52141:52240	51020	1	True				
ANR	54967	CallExpression	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	54968	Callee	fatal		51020	0					
ANR	54969	Identifier	fatal		51020	0					
ANR	54970	ArgumentList	"""unexpected end of file in patch at line %s"""		51020	1					
ANR	54971	Argument	"""unexpected end of file in patch at line %s"""		51020	0					
ANR	54972	PrimaryExpression	"""unexpected end of file in patch at line %s"""		51020	0					
ANR	54973	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	54974	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	54975	Callee	format_linenum		51020	0					
ANR	54976	Identifier	format_linenum		51020	0					
ANR	54977	ArgumentList	numbuf0		51020	1					
ANR	54978	Argument	numbuf0		51020	0					
ANR	54979	Identifier	numbuf0		51020	0					
ANR	54980	Argument	p_input_line		51020	1					
ANR	54981	Identifier	p_input_line		51020	0					
ANR	54982	IfStatement	if ( buf [ 0 ] != '>' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' ) )		51020	3					
ANR	54983	Condition	buf [ 0 ] != '>' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )	1896:9:52251:52300	51020	0	True				
ANR	54984	OrExpression	buf [ 0 ] != '>' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )		51020	0		||			
ANR	54985	EqualityExpression	buf [ 0 ] != '>'		51020	0		!=			
ANR	54986	ArrayIndexing	buf [ 0 ]		51020	0					
ANR	54987	Identifier	buf		51020	0					
ANR	54988	PrimaryExpression	0		51020	1					
ANR	54989	PrimaryExpression	'>'		51020	1					
ANR	54990	AndExpression	buf [ 1 ] != ' ' && buf [ 1 ] != '\\t'		51020	1		&&			
ANR	54991	EqualityExpression	buf [ 1 ] != ' '		51020	0		!=			
ANR	54992	ArrayIndexing	buf [ 1 ]		51020	0					
ANR	54993	Identifier	buf		51020	0					
ANR	54994	PrimaryExpression	1		51020	1					
ANR	54995	PrimaryExpression	' '		51020	1					
ANR	54996	EqualityExpression	buf [ 1 ] != '\\t'		51020	1		!=			
ANR	54997	ArrayIndexing	buf [ 1 ]		51020	0					
ANR	54998	Identifier	buf		51020	0					
ANR	54999	PrimaryExpression	1		51020	1					
ANR	55000	PrimaryExpression	'\\t'		51020	1					
ANR	55001	ExpressionStatement	"fatal ( ""'>' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"	1897:7:52310:52424	51020	1	True				
ANR	55002	CallExpression	"fatal ( ""'>' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"		51020	0					
ANR	55003	Callee	fatal		51020	0					
ANR	55004	Identifier	fatal		51020	0					
ANR	55005	ArgumentList	"""'>' followed by space or tab expected at line %s of patch"""		51020	1					
ANR	55006	Argument	"""'>' followed by space or tab expected at line %s of patch"""		51020	0					
ANR	55007	PrimaryExpression	"""'>' followed by space or tab expected at line %s of patch"""		51020	0					
ANR	55008	Argument	"format_linenum ( numbuf0 , p_input_line )"		51020	1					
ANR	55009	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		51020	0					
ANR	55010	Callee	format_linenum		51020	0					
ANR	55011	Identifier	format_linenum		51020	0					
ANR	55012	ArgumentList	numbuf0		51020	1					
ANR	55013	Argument	numbuf0		51020	0					
ANR	55014	Identifier	numbuf0		51020	0					
ANR	55015	Argument	p_input_line		51020	1					
ANR	55016	Identifier	p_input_line		51020	0					
ANR	55017	ExpressionStatement	chars_read -= 2 + ( i == p_end && incomplete_line ( ) )	1899:5:52431:52483	51020	4	True				
ANR	55018	AssignmentExpression	chars_read -= 2 + ( i == p_end && incomplete_line ( ) )		51020	0		-=			
ANR	55019	Identifier	chars_read		51020	0					
ANR	55020	AdditiveExpression	2 + ( i == p_end && incomplete_line ( ) )		51020	1		+			
ANR	55021	PrimaryExpression	2		51020	0					
ANR	55022	AndExpression	i == p_end && incomplete_line ( )		51020	1		&&			
ANR	55023	EqualityExpression	i == p_end		51020	0		==			
ANR	55024	Identifier	i		51020	0					
ANR	55025	Identifier	p_end		51020	1					
ANR	55026	CallExpression	incomplete_line ( )		51020	1					
ANR	55027	Callee	incomplete_line		51020	0					
ANR	55028	Identifier	incomplete_line		51020	0					
ANR	55029	ArgumentList			51020	1					
ANR	55030	ExpressionStatement	p_len [ i ] = chars_read	1900:5:52490:52511	51020	5	True				
ANR	55031	AssignmentExpression	p_len [ i ] = chars_read		51020	0		=			
ANR	55032	ArrayIndexing	p_len [ i ]		51020	0					
ANR	55033	Identifier	p_len		51020	0					
ANR	55034	Identifier	i		51020	1					
ANR	55035	Identifier	chars_read		51020	1					
ANR	55036	ExpressionStatement	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"	1901:5:52518:52559	51020	6	True				
ANR	55037	AssignmentExpression	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"		51020	0		=			
ANR	55038	ArrayIndexing	p_line [ i ]		51020	0					
ANR	55039	Identifier	p_line		51020	0					
ANR	55040	Identifier	i		51020	1					
ANR	55041	CallExpression	"savebuf ( buf + 2 , chars_read )"		51020	1					
ANR	55042	Callee	savebuf		51020	0					
ANR	55043	Identifier	savebuf		51020	0					
ANR	55044	ArgumentList	buf + 2		51020	1					
ANR	55045	Argument	buf + 2		51020	0					
ANR	55046	AdditiveExpression	buf + 2		51020	0		+			
ANR	55047	Identifier	buf		51020	0					
ANR	55048	PrimaryExpression	2		51020	1					
ANR	55049	Argument	chars_read		51020	1					
ANR	55050	Identifier	chars_read		51020	0					
ANR	55051	IfStatement	if ( chars_read && ! p_line [ i ] )		51020	7					
ANR	55052	Condition	chars_read && ! p_line [ i ]	1902:9:52570:52594	51020	0	True				
ANR	55053	AndExpression	chars_read && ! p_line [ i ]		51020	0		&&			
ANR	55054	Identifier	chars_read		51020	0					
ANR	55055	UnaryOperationExpression	! p_line [ i ]		51020	1					
ANR	55056	UnaryOperator	!		51020	0					
ANR	55057	ArrayIndexing	p_line [ i ]		51020	1					
ANR	55058	Identifier	p_line		51020	0					
ANR	55059	Identifier	i		51020	1					
ANR	55060	CompoundStatement		732:36:20292:20292	51020	1					
ANR	55061	ExpressionStatement	p_end = i - 1	1903:2:52601:52612	51020	0	True				
ANR	55062	AssignmentExpression	p_end = i - 1		51020	0		=			
ANR	55063	Identifier	p_end		51020	0					
ANR	55064	AdditiveExpression	i - 1		51020	1		-			
ANR	55065	Identifier	i		51020	0					
ANR	55066	PrimaryExpression	1		51020	1					
ANR	55067	ReturnStatement	return - 1 ;	1904:2:52616:52625	51020	1	True				
ANR	55068	UnaryOperationExpression	- 1		51020	0					
ANR	55069	UnaryOperator	-		51020	0					
ANR	55070	PrimaryExpression	1		51020	1					
ANR	55071	ExpressionStatement	p_Char [ i ] = '+'	1906:5:52639:52654	51020	8	True				
ANR	55072	AssignmentExpression	p_Char [ i ] = '+'		51020	0		=			
ANR	55073	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	55074	Identifier	p_Char		51020	0					
ANR	55075	Identifier	i		51020	1					
ANR	55076	PrimaryExpression	'+'		51020	1					
ANR	55077	IfStatement	if ( rev )		51020	14					
ANR	55078	Condition	rev	1909:8:52673:52675	51020	0	True				
ANR	55079	Identifier	rev		51020	0					
ANR	55080	IfStatement	if ( ! pch_swap ( ) )		51020	1					
ANR	55081	Condition	! pch_swap ( )	1910:5:52709:52719	51020	0	True				
ANR	55082	UnaryOperationExpression	! pch_swap ( )		51020	0					
ANR	55083	UnaryOperator	!		51020	0					
ANR	55084	CallExpression	pch_swap ( )		51020	1					
ANR	55085	Callee	pch_swap		51020	0					
ANR	55086	Identifier	pch_swap		51020	0					
ANR	55087	ArgumentList			51020	1					
ANR	55088	ExpressionStatement	"say ( ""Not enough memory to swap next hunk!\\n"" )"	1911:5:52727:52773	51020	1	True				
ANR	55089	CallExpression	"say ( ""Not enough memory to swap next hunk!\\n"" )"		51020	0					
ANR	55090	Callee	say		51020	0					
ANR	55091	Identifier	say		51020	0					
ANR	55092	ArgumentList	"""Not enough memory to swap next hunk!\\n"""		51020	1					
ANR	55093	Argument	"""Not enough memory to swap next hunk!\\n"""		51020	0					
ANR	55094	PrimaryExpression	"""Not enough memory to swap next hunk!\\n"""		51020	0					
ANR	55095	ExpressionStatement	assert ( p_end + 1 < hunkmax )	1912:4:52779:52807	51020	15	True				
ANR	55096	CallExpression	assert ( p_end + 1 < hunkmax )		51020	0					
ANR	55097	Callee	assert		51020	0					
ANR	55098	Identifier	assert		51020	0					
ANR	55099	ArgumentList	p_end + 1 < hunkmax		51020	1					
ANR	55100	Argument	p_end + 1 < hunkmax		51020	0					
ANR	55101	RelationalExpression	p_end + 1 < hunkmax		51020	0		<			
ANR	55102	AdditiveExpression	p_end + 1		51020	0		+			
ANR	55103	Identifier	p_end		51020	0					
ANR	55104	PrimaryExpression	1		51020	1					
ANR	55105	Identifier	hunkmax		51020	1					
ANR	55106	ExpressionStatement	p_Char [ p_end + 1 ] = '^'	1913:4:52813:52836	51020	16	True				
ANR	55107	AssignmentExpression	p_Char [ p_end + 1 ] = '^'		51020	0		=			
ANR	55108	ArrayIndexing	p_Char [ p_end + 1 ]		51020	0					
ANR	55109	Identifier	p_Char		51020	0					
ANR	55110	AdditiveExpression	p_end + 1		51020	1		+			
ANR	55111	Identifier	p_end		51020	0					
ANR	55112	PrimaryExpression	1		51020	1					
ANR	55113	PrimaryExpression	'^'		51020	1					
ANR	55114	IfStatement	if ( debug & 2 )		51020	17					
ANR	55115	Condition	debug & 2	1914:8:52882:52890	51020	0	True				
ANR	55116	BitAndExpression	debug & 2		51020	0		&			
ANR	55117	Identifier	debug		51020	0					
ANR	55118	PrimaryExpression	2		51020	1					
ANR	55119	CompoundStatement		745:1:20591:20596	51020	1					
ANR	55120	IdentifierDeclStatement	lin i ;	1915:1:52896:52901	51020	0	True				
ANR	55121	IdentifierDecl	i		51020	0					
ANR	55122	IdentifierDeclType	lin		51020	0					
ANR	55123	Identifier	i		51020	1					
ANR	55124	ForStatement	for ( i = 0 ; i <= p_end + 1 ; i ++ )		51020	1					
ANR	55125	ForInit	i = 0 ;	1917:6:52910:52915	51020	0	True				
ANR	55126	AssignmentExpression	i = 0		51020	0		=			
ANR	55127	Identifier	i		51020	0					
ANR	55128	PrimaryExpression	0		51020	1					
ANR	55129	Condition	i <= p_end + 1	1917:13:52917:52930	51020	1	True				
ANR	55130	RelationalExpression	i <= p_end + 1		51020	0		<=			
ANR	55131	Identifier	i		51020	0					
ANR	55132	AdditiveExpression	p_end + 1		51020	1		+			
ANR	55133	Identifier	p_end		51020	0					
ANR	55134	PrimaryExpression	1		51020	1					
ANR	55135	PostIncDecOperationExpression	i ++	1917:29:52933:52935	51020	2	True				
ANR	55136	Identifier	i		51020	0					
ANR	55137	IncDec	++		51020	1					
ANR	55138	CompoundStatement		747:34:20633:20633	51020	3					
ANR	55139	ExpressionStatement	"fprintf ( stderr , ""%s %c"" , format_linenum ( numbuf0 , i ) , p_Char [ i ] )"	1918:5:52945:53024	51020	0	True				
ANR	55140	CallExpression	"fprintf ( stderr , ""%s %c"" , format_linenum ( numbuf0 , i ) , p_Char [ i ] )"		51020	0					
ANR	55141	Callee	fprintf		51020	0					
ANR	55142	Identifier	fprintf		51020	0					
ANR	55143	ArgumentList	stderr		51020	1					
ANR	55144	Argument	stderr		51020	0					
ANR	55145	Identifier	stderr		51020	0					
ANR	55146	Argument	"""%s %c"""		51020	1					
ANR	55147	PrimaryExpression	"""%s %c"""		51020	0					
ANR	55148	Argument	"format_linenum ( numbuf0 , i )"		51020	2					
ANR	55149	CallExpression	"format_linenum ( numbuf0 , i )"		51020	0					
ANR	55150	Callee	format_linenum		51020	0					
ANR	55151	Identifier	format_linenum		51020	0					
ANR	55152	ArgumentList	numbuf0		51020	1					
ANR	55153	Argument	numbuf0		51020	0					
ANR	55154	Identifier	numbuf0		51020	0					
ANR	55155	Argument	i		51020	1					
ANR	55156	Identifier	i		51020	0					
ANR	55157	Argument	p_Char [ i ]		51020	3					
ANR	55158	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	55159	Identifier	p_Char		51020	0					
ANR	55160	Identifier	i		51020	1					
ANR	55161	IfStatement	if ( p_Char [ i ] == '*' )		51020	1					
ANR	55162	Condition	p_Char [ i ] == '*'	1921:9:53035:53050	51020	0	True				
ANR	55163	EqualityExpression	p_Char [ i ] == '*'		51020	0		==			
ANR	55164	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	55165	Identifier	p_Char		51020	0					
ANR	55166	Identifier	i		51020	1					
ANR	55167	PrimaryExpression	'*'		51020	1					
ANR	55168	ExpressionStatement	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_ptrn_lines ) )"	1922:7:53060:53181	51020	1	True				
ANR	55169	CallExpression	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_ptrn_lines ) )"		51020	0					
ANR	55170	Callee	fprintf		51020	0					
ANR	55171	Identifier	fprintf		51020	0					
ANR	55172	ArgumentList	stderr		51020	1					
ANR	55173	Argument	stderr		51020	0					
ANR	55174	Identifier	stderr		51020	0					
ANR	55175	Argument	""" %s,%s\\n"""		51020	1					
ANR	55176	PrimaryExpression	""" %s,%s\\n"""		51020	0					
ANR	55177	Argument	"format_linenum ( numbuf0 , p_first )"		51020	2					
ANR	55178	CallExpression	"format_linenum ( numbuf0 , p_first )"		51020	0					
ANR	55179	Callee	format_linenum		51020	0					
ANR	55180	Identifier	format_linenum		51020	0					
ANR	55181	ArgumentList	numbuf0		51020	1					
ANR	55182	Argument	numbuf0		51020	0					
ANR	55183	Identifier	numbuf0		51020	0					
ANR	55184	Argument	p_first		51020	1					
ANR	55185	Identifier	p_first		51020	0					
ANR	55186	Argument	"format_linenum ( numbuf1 , p_ptrn_lines )"		51020	3					
ANR	55187	CallExpression	"format_linenum ( numbuf1 , p_ptrn_lines )"		51020	0					
ANR	55188	Callee	format_linenum		51020	0					
ANR	55189	Identifier	format_linenum		51020	0					
ANR	55190	ArgumentList	numbuf1		51020	1					
ANR	55191	Argument	numbuf1		51020	0					
ANR	55192	Identifier	numbuf1		51020	0					
ANR	55193	Argument	p_ptrn_lines		51020	1					
ANR	55194	Identifier	p_ptrn_lines		51020	0					
ANR	55195	ElseStatement	else		51020	0					
ANR	55196	IfStatement	if ( p_Char [ i ] == '=' )		51020	0					
ANR	55197	Condition	p_Char [ i ] == '='	1925:14:53197:53212	51020	0	True				
ANR	55198	EqualityExpression	p_Char [ i ] == '='		51020	0		==			
ANR	55199	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	55200	Identifier	p_Char		51020	0					
ANR	55201	Identifier	i		51020	1					
ANR	55202	PrimaryExpression	'='		51020	1					
ANR	55203	ExpressionStatement	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_repl_lines ) )"	1926:7:53222:53346	51020	1	True				
ANR	55204	CallExpression	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_repl_lines ) )"		51020	0					
ANR	55205	Callee	fprintf		51020	0					
ANR	55206	Identifier	fprintf		51020	0					
ANR	55207	ArgumentList	stderr		51020	1					
ANR	55208	Argument	stderr		51020	0					
ANR	55209	Identifier	stderr		51020	0					
ANR	55210	Argument	""" %s,%s\\n"""		51020	1					
ANR	55211	PrimaryExpression	""" %s,%s\\n"""		51020	0					
ANR	55212	Argument	"format_linenum ( numbuf0 , p_newfirst )"		51020	2					
ANR	55213	CallExpression	"format_linenum ( numbuf0 , p_newfirst )"		51020	0					
ANR	55214	Callee	format_linenum		51020	0					
ANR	55215	Identifier	format_linenum		51020	0					
ANR	55216	ArgumentList	numbuf0		51020	1					
ANR	55217	Argument	numbuf0		51020	0					
ANR	55218	Identifier	numbuf0		51020	0					
ANR	55219	Argument	p_newfirst		51020	1					
ANR	55220	Identifier	p_newfirst		51020	0					
ANR	55221	Argument	"format_linenum ( numbuf1 , p_repl_lines )"		51020	3					
ANR	55222	CallExpression	"format_linenum ( numbuf1 , p_repl_lines )"		51020	0					
ANR	55223	Callee	format_linenum		51020	0					
ANR	55224	Identifier	format_linenum		51020	0					
ANR	55225	ArgumentList	numbuf1		51020	1					
ANR	55226	Argument	numbuf1		51020	0					
ANR	55227	Identifier	numbuf1		51020	0					
ANR	55228	Argument	p_repl_lines		51020	1					
ANR	55229	Identifier	p_repl_lines		51020	0					
ANR	55230	ElseStatement	else		51020	0					
ANR	55231	IfStatement	if ( p_Char [ i ] != '^' )		51020	0					
ANR	55232	Condition	p_Char [ i ] != '^'	1929:14:53362:53377	51020	0	True				
ANR	55233	EqualityExpression	p_Char [ i ] != '^'		51020	0		!=			
ANR	55234	ArrayIndexing	p_Char [ i ]		51020	0					
ANR	55235	Identifier	p_Char		51020	0					
ANR	55236	Identifier	i		51020	1					
ANR	55237	PrimaryExpression	'^'		51020	1					
ANR	55238	CompoundStatement		760:7:21082:21082	51020	1					
ANR	55239	ExpressionStatement	"fputs ( "" |"" , stderr )"	1931:2:53391:53410	51020	0	True				
ANR	55240	CallExpression	"fputs ( "" |"" , stderr )"		51020	0					
ANR	55241	Callee	fputs		51020	0					
ANR	55242	Identifier	fputs		51020	0					
ANR	55243	ArgumentList	""" |"""		51020	1					
ANR	55244	Argument	""" |"""		51020	0					
ANR	55245	PrimaryExpression	""" |"""		51020	0					
ANR	55246	Argument	stderr		51020	1					
ANR	55247	Identifier	stderr		51020	0					
ANR	55248	ExpressionStatement	"pch_write_line ( i , stderr )"	1932:2:53414:53440	51020	1	True				
ANR	55249	CallExpression	"pch_write_line ( i , stderr )"		51020	0					
ANR	55250	Callee	pch_write_line		51020	0					
ANR	55251	Identifier	pch_write_line		51020	0					
ANR	55252	ArgumentList	i		51020	1					
ANR	55253	Argument	i		51020	0					
ANR	55254	Identifier	i		51020	0					
ANR	55255	Argument	stderr		51020	1					
ANR	55256	Identifier	stderr		51020	0					
ANR	55257	ElseStatement	else		51020	0					
ANR	55258	ExpressionStatement	"fputc ( '\\n' , stderr )"	1935:7:53468:53487	51020	0	True				
ANR	55259	CallExpression	"fputc ( '\\n' , stderr )"		51020	0					
ANR	55260	Callee	fputc		51020	0					
ANR	55261	Identifier	fputc		51020	0					
ANR	55262	ArgumentList	'\\n'		51020	1					
ANR	55263	Argument	'\\n'		51020	0					
ANR	55264	PrimaryExpression	'\\n'		51020	0					
ANR	55265	Argument	stderr		51020	1					
ANR	55266	Identifier	stderr		51020	0					
ANR	55267	ExpressionStatement	fflush ( stderr )	1937:1:53493:53508	51020	2	True				
ANR	55268	CallExpression	fflush ( stderr )		51020	0					
ANR	55269	Callee	fflush		51020	0					
ANR	55270	Identifier	fflush		51020	0					
ANR	55271	ArgumentList	stderr		51020	1					
ANR	55272	Argument	stderr		51020	0					
ANR	55273	Identifier	stderr		51020	0					
ANR	55274	ReturnStatement	return 1 ;	1939:4:53520:53528	51020	18	True				
ANR	55275	PrimaryExpression	1		51020	0					
ANR	55276	ReturnType	int		51020	1					
ANR	55277	Identifier	another_hunk		51020	2					
ANR	55278	ParameterList	"enum diff difftype , bool rev"		51020	3					
ANR	55279	Parameter	enum diff difftype	1170:14:32274:32291	51020	0	True				
ANR	55280	ParameterType	enum diff		51020	0					
ANR	55281	Identifier	difftype		51020	1					
ANR	55282	Parameter	bool rev	1170:34:32294:32301	51020	1	True				
ANR	55283	ParameterType	bool		51020	0					
ANR	55284	Identifier	rev		51020	1					
ANR	55285	CFGEntryNode	ENTRY		51020		True				
ANR	55286	CFGExitNode	EXIT		51020		True				
ANR	55287	Symbol	* filldst		51020						
ANR	55288	Symbol	chars_read		51020						
ANR	55289	Symbol	p_newfirst		51020						
ANR	55290	Symbol	canonicalize_ws		51020						
ANR	55291	Symbol	repl_patch_line		51020						
ANR	55292	Symbol	p_first		51020						
ANR	55293	Symbol	fillcnt		51020						
ANR	55294	Symbol	ISDIGIT		51020						
ANR	55295	Symbol	LINENUM_MAX		51020						
ANR	55296	Symbol	fillsrc		51020						
ANR	55297	Symbol	repl_could_be_missing		51020						
ANR	55298	Symbol	repl_beginning		51020						
ANR	55299	Symbol	strncmp		51020						
ANR	55300	Symbol	p_len		51020						
ANR	55301	Symbol	strlen		51020						
ANR	55302	Symbol	NEW_CONTEXT_DIFF		51020						
ANR	55303	Symbol	ptrn_prefix_context		51020						
ANR	55304	Symbol	repl_prefix_context		51020						
ANR	55305	Symbol	context		51020						
ANR	55306	Symbol	grow_hunkmax		51020						
ANR	55307	Symbol	p_Char		51020						
ANR	55308	Symbol	strnEQ		51020						
ANR	55309	Symbol	file_tell		51020						
ANR	55310	Symbol	* p_end		51020						
ANR	55311	Symbol	rev		51020						
ANR	55312	Symbol	* buf		51020						
ANR	55313	Symbol	NULL		51020						
ANR	55314	Symbol	ptrn_missing		51020						
ANR	55315	Symbol	pch_hunk_beg		51020						
ANR	55316	Symbol	* p_Char		51020						
ANR	55317	Symbol	stderr		51020						
ANR	55318	Symbol	repl_missing		51020						
ANR	55319	Symbol	savestr		51020						
ANR	55320	Symbol	true		51020						
ANR	55321	Symbol	pfp		51020						
ANR	55322	Symbol	p_efake		51020						
ANR	55323	Symbol	ptrn_spaces_eaten		51020						
ANR	55324	Symbol	* s ++		51020						
ANR	55325	Symbol	p_hunk_beg		51020						
ANR	55326	Symbol	p_max		51020						
ANR	55327	Symbol	repl_context		51020						
ANR	55328	Symbol	p_input_line		51020						
ANR	55329	Symbol	p_ptrn_lines		51020						
ANR	55330	Symbol	UNI_DIFF		51020						
ANR	55331	Symbol	p_bfake		51020						
ANR	55332	Symbol	scan_linenum		51020						
ANR	55333	Symbol	ptrn_copiable		51020						
ANR	55334	Symbol	repl_backtrack_position		51020						
ANR	55335	Symbol	& p_newfirst		51020						
ANR	55336	Symbol	pch_swap		51020						
ANR	55337	Symbol	& max		51020						
ANR	55338	Symbol	p_c_function		51020						
ANR	55339	Symbol	format_linenum		51020						
ANR	55340	Symbol	p_suffix_context		51020						
ANR	55341	Symbol	& p_ptrn_lines		51020						
ANR	55342	Symbol	min		51020						
ANR	55343	Symbol	& p_first		51020						
ANR	55344	Symbol	repl_copiable		51020						
ANR	55345	Symbol	CONTEXT_DIFF		51020						
ANR	55346	Symbol	p_end		51020						
ANR	55347	Symbol	VERBOSE		51020						
ANR	55348	Symbol	* p_line		51020						
ANR	55349	Symbol	SEEK_SET		51020						
ANR	55350	Symbol	numbuf0		51020						
ANR	55351	Symbol	& p_repl_lines		51020						
ANR	55352	Symbol	debug		51020						
ANR	55353	Symbol	numbuf3		51020						
ANR	55354	Symbol	hunk_type		51020						
ANR	55355	Symbol	diff_type		51020						
ANR	55356	Symbol	ch		51020						
ANR	55357	Symbol	max		51020						
ANR	55358	Symbol	numbuf1		51020						
ANR	55359	Symbol	some_context		51020						
ANR	55360	Symbol	* fillsrc		51020						
ANR	55361	Symbol	numbuf2		51020						
ANR	55362	Symbol	* p_len		51020						
ANR	55363	Symbol	false		51020						
ANR	55364	Symbol	ptrn_suffix_context		51020						
ANR	55365	Symbol	i		51020						
ANR	55366	Symbol	line_beginning		51020						
ANR	55367	Symbol	* ++ s		51020						
ANR	55368	Symbol	filldst		51020						
ANR	55369	Symbol	p_line		51020						
ANR	55370	Symbol	get_line		51020						
ANR	55371	Symbol	p_repl_lines		51020						
ANR	55372	Symbol	buf		51020						
ANR	55373	Symbol	s		51020						
ANR	55374	Symbol	* i		51020						
ANR	55375	Symbol	hunkmax		51020						
ANR	55376	Symbol	savebuf		51020						
ANR	55377	Symbol	difftype		51020						
ANR	55378	Symbol	incomplete_line		51020						
ANR	55379	Symbol	* s		51020						
ANR	55380	Symbol	verbosity		51020						
ANR	55381	Symbol	p_prefix_context		51020						
ANR	55382	Symbol	& min		51020						
ANR	55383	Function	get_line	1942:0:53533:53668							
ANR	55384	FunctionDef	get_line ()		55383	0					
ANR	55385	CompoundStatement		1944:0:53563:53668	55383	0					
ANR	55386	ReturnStatement	"return pget_line ( p_indent , p_rfc934_nesting , p_strip_trailing_cr , p_pass_comments_through ) ;"	1945:3:53568:53666	55383	0	True				
ANR	55387	CallExpression	"pget_line ( p_indent , p_rfc934_nesting , p_strip_trailing_cr , p_pass_comments_through )"		55383	0					
ANR	55388	Callee	pget_line		55383	0					
ANR	55389	Identifier	pget_line		55383	0					
ANR	55390	ArgumentList	p_indent		55383	1					
ANR	55391	Argument	p_indent		55383	0					
ANR	55392	Identifier	p_indent		55383	0					
ANR	55393	Argument	p_rfc934_nesting		55383	1					
ANR	55394	Identifier	p_rfc934_nesting		55383	0					
ANR	55395	Argument	p_strip_trailing_cr		55383	2					
ANR	55396	Identifier	p_strip_trailing_cr		55383	0					
ANR	55397	Argument	p_pass_comments_through		55383	3					
ANR	55398	Identifier	p_pass_comments_through		55383	0					
ANR	55399	ReturnType	static size_t		55383	1					
ANR	55400	Identifier	get_line		55383	2					
ANR	55401	ParameterList			55383	3					
ANR	55402	CFGEntryNode	ENTRY		55383		True				
ANR	55403	CFGExitNode	EXIT		55383		True				
ANR	55404	Symbol	p_strip_trailing_cr		55383						
ANR	55405	Symbol	pget_line		55383						
ANR	55406	Symbol	p_indent		55383						
ANR	55407	Symbol	p_rfc934_nesting		55383						
ANR	55408	Symbol	p_pass_comments_through		55383						
ANR	55409	Function	pget_line	1960:0:54297:55762							
ANR	55410	FunctionDef	"pget_line (size_t indent , int rfc934_nesting , bool strip_trailing_cr , bool pass_comments_through)"		55409	0					
ANR	55411	CompoundStatement		1963:0:54413:55762	55409	0					
ANR	55412	IdentifierDeclStatement	FILE * fp = pfp ;	1964:2:54417:54431	55409	0	True				
ANR	55413	IdentifierDecl	* fp = pfp		55409	0					
ANR	55414	IdentifierDeclType	FILE *		55409	0					
ANR	55415	Identifier	fp		55409	1					
ANR	55416	AssignmentExpression	* fp = pfp		55409	2		=			
ANR	55417	Identifier	pfp		55409	0					
ANR	55418	Identifier	pfp		55409	1					
ANR	55419	IdentifierDeclStatement	int c ;	1965:2:54435:54440	55409	1	True				
ANR	55420	IdentifierDecl	c		55409	0					
ANR	55421	IdentifierDeclType	int		55409	0					
ANR	55422	Identifier	c		55409	1					
ANR	55423	IdentifierDeclStatement	size_t i ;	1966:2:54444:54452	55409	2	True				
ANR	55424	IdentifierDecl	i		55409	0					
ANR	55425	IdentifierDeclType	size_t		55409	0					
ANR	55426	Identifier	i		55409	1					
ANR	55427	IdentifierDeclStatement	char * b ;	1967:2:54456:54463	55409	3	True				
ANR	55428	IdentifierDecl	* b		55409	0					
ANR	55429	IdentifierDeclType	char *		55409	0					
ANR	55430	Identifier	b		55409	1					
ANR	55431	IdentifierDeclStatement	size_t s ;	1968:2:54467:54475	55409	4	True				
ANR	55432	IdentifierDecl	s		55409	0					
ANR	55433	IdentifierDeclType	size_t		55409	0					
ANR	55434	Identifier	s		55409	1					
ANR	55435	DoStatement	do		55409	5					
ANR	55436	CompoundStatement		9:4:73:73	55409	0					
ANR	55437	ExpressionStatement	i = 0	1972:6:54495:54500	55409	0	True				
ANR	55438	AssignmentExpression	i = 0		55409	0		=			
ANR	55439	Identifier	i		55409	0					
ANR	55440	PrimaryExpression	0		55409	1					
ANR	55441	ForStatement	for ( ; ; )		55409	1					
ANR	55442	CompoundStatement		12:1:104:104	55409	0					
ANR	55443	ExpressionStatement	c = getc ( fp )	1975:3:54523:54536	55409	0	True				
ANR	55444	AssignmentExpression	c = getc ( fp )		55409	0		=			
ANR	55445	Identifier	c		55409	0					
ANR	55446	CallExpression	getc ( fp )		55409	1					
ANR	55447	Callee	getc		55409	0					
ANR	55448	Identifier	getc		55409	0					
ANR	55449	ArgumentList	fp		55409	1					
ANR	55450	Argument	fp		55409	0					
ANR	55451	Identifier	fp		55409	0					
ANR	55452	IfStatement	if ( c == EOF )		55409	1					
ANR	55453	Condition	c == EOF	1976:7:54545:54552	55409	0	True				
ANR	55454	EqualityExpression	c == EOF		55409	0		==			
ANR	55455	Identifier	c		55409	0					
ANR	55456	Identifier	EOF		55409	1					
ANR	55457	CompoundStatement		15:5:146:146	55409	1					
ANR	55458	IfStatement	if ( ferror ( fp ) )		55409	0					
ANR	55459	Condition	ferror ( fp )	1978:11:54573:54583	55409	0	True				
ANR	55460	CallExpression	ferror ( fp )		55409	0					
ANR	55461	Callee	ferror		55409	0					
ANR	55462	Identifier	ferror		55409	0					
ANR	55463	ArgumentList	fp		55409	1					
ANR	55464	Argument	fp		55409	0					
ANR	55465	Identifier	fp		55409	0					
ANR	55466	ExpressionStatement	read_fatal ( )	1979:2:54588:54601	55409	1	True				
ANR	55467	CallExpression	read_fatal ( )		55409	0					
ANR	55468	Callee	read_fatal		55409	0					
ANR	55469	Identifier	read_fatal		55409	0					
ANR	55470	ArgumentList			55409	1					
ANR	55471	ReturnStatement	return 0 ;	1980:7:54610:54618	55409	1	True				
ANR	55472	PrimaryExpression	0		55409	0					
ANR	55473	IfStatement	if ( indent <= i )		55409	2					
ANR	55474	Condition	indent <= i	1982:7:54634:54644	55409	0	True				
ANR	55475	RelationalExpression	indent <= i		55409	0		<=			
ANR	55476	Identifier	indent		55409	0					
ANR	55477	Identifier	i		55409	1					
ANR	55478	BreakStatement	break ;	1983:5:54652:54657	55409	1	True				
ANR	55479	IfStatement	if ( c == ' ' || c == 'X' )		55409	3					
ANR	55480	Condition	c == ' ' || c == 'X'	1984:7:54666:54685	55409	0	True				
ANR	55481	OrExpression	c == ' ' || c == 'X'		55409	0		||			
ANR	55482	EqualityExpression	c == ' '		55409	0		==			
ANR	55483	Identifier	c		55409	0					
ANR	55484	PrimaryExpression	' '		55409	1					
ANR	55485	EqualityExpression	c == 'X'		55409	1		==			
ANR	55486	Identifier	c		55409	0					
ANR	55487	PrimaryExpression	'X'		55409	1					
ANR	55488	ExpressionStatement	i ++	1985:5:54693:54696	55409	1	True				
ANR	55489	PostIncDecOperationExpression	i ++		55409	0					
ANR	55490	Identifier	i		55409	0					
ANR	55491	IncDec	++		55409	1					
ANR	55492	ElseStatement	else		55409	0					
ANR	55493	IfStatement	if ( c == '\\t' )		55409	0					
ANR	55494	Condition	c == '\\t'	1986:12:54710:54718	55409	0	True				
ANR	55495	EqualityExpression	c == '\\t'		55409	0		==			
ANR	55496	Identifier	c		55409	0					
ANR	55497	PrimaryExpression	'\\t'		55409	1					
ANR	55498	ExpressionStatement	i = ( i + 8 ) & ~7	1987:5:54726:54742	55409	1	True				
ANR	55499	AssignmentExpression	i = ( i + 8 ) & ~7		55409	0		=			
ANR	55500	Identifier	i		55409	0					
ANR	55501	BitAndExpression	( i + 8 ) & ~7		55409	1		&			
ANR	55502	AdditiveExpression	i + 8		55409	0		+			
ANR	55503	Identifier	i		55409	0					
ANR	55504	PrimaryExpression	8		55409	1					
ANR	55505	Identifier	~7		55409	1					
ANR	55506	ElseStatement	else		55409	0					
ANR	55507	BreakStatement	break ;	1989:5:54757:54762	55409	0	True				
ANR	55508	ExpressionStatement	i = 0	1992:6:54774:54779	55409	2	True				
ANR	55509	AssignmentExpression	i = 0		55409	0		=			
ANR	55510	Identifier	i		55409	0					
ANR	55511	PrimaryExpression	0		55409	1					
ANR	55512	ExpressionStatement	b = buf	1993:6:54787:54794	55409	3	True				
ANR	55513	AssignmentExpression	b = buf		55409	0		=			
ANR	55514	Identifier	b		55409	0					
ANR	55515	Identifier	buf		55409	1					
ANR	55516	WhileStatement	while ( c == '-' && 0 <= -- rfc934_nesting )		55409	4					
ANR	55517	Condition	c == '-' && 0 <= -- rfc934_nesting	1995:13:54810:54842	55409	0	True				
ANR	55518	AndExpression	c == '-' && 0 <= -- rfc934_nesting		55409	0		&&			
ANR	55519	EqualityExpression	c == '-'		55409	0		==			
ANR	55520	Identifier	c		55409	0					
ANR	55521	PrimaryExpression	'-'		55409	1					
ANR	55522	RelationalExpression	0 <= -- rfc934_nesting		55409	1		<=			
ANR	55523	PrimaryExpression	0		55409	0					
ANR	55524	UnaryExpression	-- rfc934_nesting		55409	1					
ANR	55525	IncDec	--		55409	0					
ANR	55526	Identifier	rfc934_nesting		55409	1					
ANR	55527	CompoundStatement		34:1:432:432	55409	1					
ANR	55528	ExpressionStatement	c = getc ( fp )	1997:3:54851:54864	55409	0	True				
ANR	55529	AssignmentExpression	c = getc ( fp )		55409	0		=			
ANR	55530	Identifier	c		55409	0					
ANR	55531	CallExpression	getc ( fp )		55409	1					
ANR	55532	Callee	getc		55409	0					
ANR	55533	Identifier	getc		55409	0					
ANR	55534	ArgumentList	fp		55409	1					
ANR	55535	Argument	fp		55409	0					
ANR	55536	Identifier	fp		55409	0					
ANR	55537	IfStatement	if ( c == EOF )		55409	1					
ANR	55538	Condition	c == EOF	1998:7:54873:54880	55409	0	True				
ANR	55539	EqualityExpression	c == EOF		55409	0		==			
ANR	55540	Identifier	c		55409	0					
ANR	55541	Identifier	EOF		55409	1					
ANR	55542	GotoStatement	goto patch_ends_in_middle_of_line ;	1999:5:54888:54921	55409	1	True				
ANR	55543	Identifier	patch_ends_in_middle_of_line		55409	0					
ANR	55544	IfStatement	if ( c != ' ' )		55409	2					
ANR	55545	Condition	c != ' '	2000:7:54930:54937	55409	0	True				
ANR	55546	EqualityExpression	c != ' '		55409	0		!=			
ANR	55547	Identifier	c		55409	0					
ANR	55548	PrimaryExpression	' '		55409	1					
ANR	55549	CompoundStatement		39:5:531:531	55409	1					
ANR	55550	ExpressionStatement	i = 1	2002:7:54954:54959	55409	0	True				
ANR	55551	AssignmentExpression	i = 1		55409	0		=			
ANR	55552	Identifier	i		55409	0					
ANR	55553	PrimaryExpression	1		55409	1					
ANR	55554	ExpressionStatement	b [ 0 ] = '-'	2003:7:54968:54978	55409	1	True				
ANR	55555	AssignmentExpression	b [ 0 ] = '-'		55409	0		=			
ANR	55556	ArrayIndexing	b [ 0 ]		55409	0					
ANR	55557	Identifier	b		55409	0					
ANR	55558	PrimaryExpression	0		55409	1					
ANR	55559	PrimaryExpression	'-'		55409	1					
ANR	55560	BreakStatement	break ;	2004:7:54987:54992	55409	2	True				
ANR	55561	ExpressionStatement	c = getc ( fp )	2006:3:55004:55017	55409	3	True				
ANR	55562	AssignmentExpression	c = getc ( fp )		55409	0		=			
ANR	55563	Identifier	c		55409	0					
ANR	55564	CallExpression	getc ( fp )		55409	1					
ANR	55565	Callee	getc		55409	0					
ANR	55566	Identifier	getc		55409	0					
ANR	55567	ArgumentList	fp		55409	1					
ANR	55568	Argument	fp		55409	0					
ANR	55569	Identifier	fp		55409	0					
ANR	55570	IfStatement	if ( c == EOF )		55409	4					
ANR	55571	Condition	c == EOF	2007:7:55026:55033	55409	0	True				
ANR	55572	EqualityExpression	c == EOF		55409	0		==			
ANR	55573	Identifier	c		55409	0					
ANR	55574	Identifier	EOF		55409	1					
ANR	55575	GotoStatement	goto patch_ends_in_middle_of_line ;	2008:5:55041:55074	55409	1	True				
ANR	55576	Identifier	patch_ends_in_middle_of_line		55409	0					
ANR	55577	ExpressionStatement	s = bufsize	2011:6:55086:55097	55409	5	True				
ANR	55578	AssignmentExpression	s = bufsize		55409	0		=			
ANR	55579	Identifier	s		55409	0					
ANR	55580	Identifier	bufsize		55409	1					
ANR	55581	ForStatement	for ( ; ; )		55409	6					
ANR	55582	CompoundStatement		52:1:702:702	55409	0					
ANR	55583	IfStatement	if ( i == s - 1 )		55409	0					
ANR	55584	Condition	i == s - 1	2015:7:55125:55134	55409	0	True				
ANR	55585	EqualityExpression	i == s - 1		55409	0		==			
ANR	55586	Identifier	i		55409	0					
ANR	55587	AdditiveExpression	s - 1		55409	1		-			
ANR	55588	Identifier	s		55409	0					
ANR	55589	PrimaryExpression	1		55409	1					
ANR	55590	CompoundStatement		54:5:728:728	55409	1					
ANR	55591	ExpressionStatement	s *= 2	2017:7:55151:55157	55409	0	True				
ANR	55592	AssignmentExpression	s *= 2		55409	0		*=			
ANR	55593	Identifier	s		55409	0					
ANR	55594	PrimaryExpression	2		55409	1					
ANR	55595	ExpressionStatement	"b = realloc ( b , s )"	2018:7:55166:55184	55409	1	True				
ANR	55596	AssignmentExpression	"b = realloc ( b , s )"		55409	0		=			
ANR	55597	Identifier	b		55409	0					
ANR	55598	CallExpression	"realloc ( b , s )"		55409	1					
ANR	55599	Callee	realloc		55409	0					
ANR	55600	Identifier	realloc		55409	0					
ANR	55601	ArgumentList	b		55409	1					
ANR	55602	Argument	b		55409	0					
ANR	55603	Identifier	b		55409	0					
ANR	55604	Argument	s		55409	1					
ANR	55605	Identifier	s		55409	0					
ANR	55606	IfStatement	if ( ! b )		55409	2					
ANR	55607	Condition	! b	2019:11:55197:55198	55409	0	True				
ANR	55608	UnaryOperationExpression	! b		55409	0					
ANR	55609	UnaryOperator	!		55409	0					
ANR	55610	Identifier	b		55409	1					
ANR	55611	CompoundStatement		58:2:789:789	55409	1					
ANR	55612	IfStatement	if ( ! using_plan_a )		55409	0					
ANR	55613	Condition	! using_plan_a	2021:8:55213:55225	55409	0	True				
ANR	55614	UnaryOperationExpression	! using_plan_a		55409	0					
ANR	55615	UnaryOperator	!		55409	0					
ANR	55616	Identifier	using_plan_a		55409	1					
ANR	55617	ExpressionStatement	xalloc_die ( )	2022:6:55234:55247	55409	1	True				
ANR	55618	CallExpression	xalloc_die ( )		55409	0					
ANR	55619	Callee	xalloc_die		55409	0					
ANR	55620	Identifier	xalloc_die		55409	0					
ANR	55621	ArgumentList			55409	1					
ANR	55622	ReturnStatement	return ( size_t ) - 1 ;	2023:4:55253:55271	55409	1	True				
ANR	55623	CastExpression	( size_t ) - 1		55409	0					
ANR	55624	CastTarget	size_t		55409	0					
ANR	55625	UnaryOperationExpression	- 1		55409	1					
ANR	55626	UnaryOperator	-		55409	0					
ANR	55627	PrimaryExpression	1		55409	1					
ANR	55628	ExpressionStatement	buf = b	2025:7:55284:55291	55409	3	True				
ANR	55629	AssignmentExpression	buf = b		55409	0		=			
ANR	55630	Identifier	buf		55409	0					
ANR	55631	Identifier	b		55409	1					
ANR	55632	ExpressionStatement	bufsize = s	2026:7:55300:55311	55409	4	True				
ANR	55633	AssignmentExpression	bufsize = s		55409	0		=			
ANR	55634	Identifier	bufsize		55409	0					
ANR	55635	Identifier	s		55409	1					
ANR	55636	ExpressionStatement	b [ i ++ ] = c	2028:3:55323:55333	55409	1	True				
ANR	55637	AssignmentExpression	b [ i ++ ] = c		55409	0		=			
ANR	55638	ArrayIndexing	b [ i ++ ]		55409	0					
ANR	55639	Identifier	b		55409	0					
ANR	55640	PostIncDecOperationExpression	i ++		55409	1					
ANR	55641	Identifier	i		55409	0					
ANR	55642	IncDec	++		55409	1					
ANR	55643	Identifier	c		55409	1					
ANR	55644	IfStatement	if ( c == '\\n' )		55409	2					
ANR	55645	Condition	c == '\\n'	2029:7:55342:55350	55409	0	True				
ANR	55646	EqualityExpression	c == '\\n'		55409	0		==			
ANR	55647	Identifier	c		55409	0					
ANR	55648	PrimaryExpression	'\\n'		55409	1					
ANR	55649	BreakStatement	break ;	2030:5:55358:55363	55409	1	True				
ANR	55650	ExpressionStatement	c = getc ( fp )	2031:3:55368:55381	55409	3	True				
ANR	55651	AssignmentExpression	c = getc ( fp )		55409	0		=			
ANR	55652	Identifier	c		55409	0					
ANR	55653	CallExpression	getc ( fp )		55409	1					
ANR	55654	Callee	getc		55409	0					
ANR	55655	Identifier	getc		55409	0					
ANR	55656	ArgumentList	fp		55409	1					
ANR	55657	Argument	fp		55409	0					
ANR	55658	Identifier	fp		55409	0					
ANR	55659	IfStatement	if ( c == EOF )		55409	4					
ANR	55660	Condition	c == EOF	2032:7:55390:55397	55409	0	True				
ANR	55661	EqualityExpression	c == EOF		55409	0		==			
ANR	55662	Identifier	c		55409	0					
ANR	55663	Identifier	EOF		55409	1					
ANR	55664	GotoStatement	goto patch_ends_in_middle_of_line ;	2033:5:55405:55438	55409	1	True				
ANR	55665	Identifier	patch_ends_in_middle_of_line		55409	0					
ANR	55666	ExpressionStatement	p_input_line ++	2036:6:55450:55464	55409	7	True				
ANR	55667	PostIncDecOperationExpression	p_input_line ++		55409	0					
ANR	55668	Identifier	p_input_line		55409	0					
ANR	55669	IncDec	++		55409	1					
ANR	55670	Condition	* b == '#' && ! pass_comments_through	2038:9:55481:55515	55409	1	True				
ANR	55671	AndExpression	* b == '#' && ! pass_comments_through		55409	0		&&			
ANR	55672	EqualityExpression	* b == '#'		55409	0		==			
ANR	55673	UnaryOperationExpression	* b		55409	0					
ANR	55674	UnaryOperator	*		55409	0					
ANR	55675	Identifier	b		55409	1					
ANR	55676	PrimaryExpression	'#'		55409	1					
ANR	55677	UnaryOperationExpression	! pass_comments_through		55409	1					
ANR	55678	UnaryOperator	!		55409	0					
ANR	55679	Identifier	pass_comments_through		55409	1					
ANR	55680	IfStatement	if ( strip_trailing_cr && 2 <= i && b [ i - 2 ] == '\\r' )		55409	6					
ANR	55681	Condition	strip_trailing_cr && 2 <= i && b [ i - 2 ] == '\\r'	2040:6:55526:55572	55409	0	True				
ANR	55682	AndExpression	strip_trailing_cr && 2 <= i && b [ i - 2 ] == '\\r'		55409	0		&&			
ANR	55683	Identifier	strip_trailing_cr		55409	0					
ANR	55684	AndExpression	2 <= i && b [ i - 2 ] == '\\r'		55409	1		&&			
ANR	55685	RelationalExpression	2 <= i		55409	0		<=			
ANR	55686	PrimaryExpression	2		55409	0					
ANR	55687	Identifier	i		55409	1					
ANR	55688	EqualityExpression	b [ i - 2 ] == '\\r'		55409	1		==			
ANR	55689	ArrayIndexing	b [ i - 2 ]		55409	0					
ANR	55690	Identifier	b		55409	0					
ANR	55691	AdditiveExpression	i - 2		55409	1		-			
ANR	55692	Identifier	i		55409	0					
ANR	55693	PrimaryExpression	2		55409	1					
ANR	55694	PrimaryExpression	'\\r'		55409	1					
ANR	55695	ExpressionStatement	b [ i -- - 2 ] = '\\n'	2041:4:55579:55596	55409	1	True				
ANR	55696	AssignmentExpression	b [ i -- - 2 ] = '\\n'		55409	0		=			
ANR	55697	ArrayIndexing	b [ i -- - 2 ]		55409	0					
ANR	55698	Identifier	b		55409	0					
ANR	55699	AdditiveExpression	i -- - 2		55409	1		-			
ANR	55700	PostIncDecOperationExpression	i --		55409	0					
ANR	55701	Identifier	i		55409	0					
ANR	55702	IncDec	--		55409	1					
ANR	55703	PrimaryExpression	2		55409	1					
ANR	55704	PrimaryExpression	'\\n'		55409	1					
ANR	55705	ExpressionStatement	b [ i ] = '\\0'	2042:2:55600:55611	55409	7	True				
ANR	55706	AssignmentExpression	b [ i ] = '\\0'		55409	0		=			
ANR	55707	ArrayIndexing	b [ i ]		55409	0					
ANR	55708	Identifier	b		55409	0					
ANR	55709	Identifier	i		55409	1					
ANR	55710	PrimaryExpression	'\\0'		55409	1					
ANR	55711	ReturnStatement	return i ;	2043:2:55615:55623	55409	8	True				
ANR	55712	Identifier	i		55409	0					
ANR	55713	Label	patch_ends_in_middle_of_line :	2045:1:55627:55655	55409	9	True				
ANR	55714	Identifier	patch_ends_in_middle_of_line		55409	0					
ANR	55715	IfStatement	if ( ferror ( fp ) )		55409	10					
ANR	55716	Condition	ferror ( fp )	2046:6:55663:55673	55409	0	True				
ANR	55717	CallExpression	ferror ( fp )		55409	0					
ANR	55718	Callee	ferror		55409	0					
ANR	55719	Identifier	ferror		55409	0					
ANR	55720	ArgumentList	fp		55409	1					
ANR	55721	Argument	fp		55409	0					
ANR	55722	Identifier	fp		55409	0					
ANR	55723	ExpressionStatement	read_fatal ( )	2047:4:55680:55693	55409	1	True				
ANR	55724	CallExpression	read_fatal ( )		55409	0					
ANR	55725	Callee	read_fatal		55409	0					
ANR	55726	Identifier	read_fatal		55409	0					
ANR	55727	ArgumentList			55409	1					
ANR	55728	ExpressionStatement	"say ( ""patch unexpectedly ends in middle of line\\n"" )"	2048:2:55697:55748	55409	11	True				
ANR	55729	CallExpression	"say ( ""patch unexpectedly ends in middle of line\\n"" )"		55409	0					
ANR	55730	Callee	say		55409	0					
ANR	55731	Identifier	say		55409	0					
ANR	55732	ArgumentList	"""patch unexpectedly ends in middle of line\\n"""		55409	1					
ANR	55733	Argument	"""patch unexpectedly ends in middle of line\\n"""		55409	0					
ANR	55734	PrimaryExpression	"""patch unexpectedly ends in middle of line\\n"""		55409	0					
ANR	55735	ReturnStatement	return 0 ;	2049:2:55752:55760	55409	12	True				
ANR	55736	PrimaryExpression	0		55409	0					
ANR	55737	ReturnType	static size_t		55409	1					
ANR	55738	Identifier	pget_line		55409	2					
ANR	55739	ParameterList	"size_t indent , int rfc934_nesting , bool strip_trailing_cr , bool pass_comments_through"		55409	3					
ANR	55740	Parameter	size_t indent	1961:11:54322:54334	55409	0	True				
ANR	55741	ParameterType	size_t		55409	0					
ANR	55742	Identifier	indent		55409	1					
ANR	55743	Parameter	int rfc934_nesting	1961:26:54337:54354	55409	1	True				
ANR	55744	ParameterType	int		55409	0					
ANR	55745	Identifier	rfc934_nesting		55409	1					
ANR	55746	Parameter	bool strip_trailing_cr	1961:46:54357:54378	55409	2	True				
ANR	55747	ParameterType	bool		55409	0					
ANR	55748	Identifier	strip_trailing_cr		55409	1					
ANR	55749	Parameter	bool pass_comments_through	1962:4:54385:54410	55409	3	True				
ANR	55750	ParameterType	bool		55409	0					
ANR	55751	Identifier	pass_comments_through		55409	1					
ANR	55752	CFGEntryNode	ENTRY		55409		True				
ANR	55753	CFGExitNode	EXIT		55409		True				
ANR	55754	InfiniteForNode	true		55409		True				
ANR	55755	InfiniteForNode	true		55409		True				
ANR	55756	Symbol	b		55409						
ANR	55757	Symbol	p_input_line		55409						
ANR	55758	Symbol	c		55409						
ANR	55759	Symbol	indent		55409						
ANR	55760	Symbol	bufsize		55409						
ANR	55761	Symbol	i		55409						
ANR	55762	Symbol	fp		55409						
ANR	55763	Symbol	realloc		55409						
ANR	55764	Symbol	* b		55409						
ANR	55765	Symbol	ferror		55409						
ANR	55766	Symbol	buf		55409						
ANR	55767	Symbol	s		55409						
ANR	55768	Symbol	* i		55409						
ANR	55769	Symbol	strip_trailing_cr		55409						
ANR	55770	Symbol	rfc934_nesting		55409						
ANR	55771	Symbol	~7		55409						
ANR	55772	Symbol	pass_comments_through		55409						
ANR	55773	Symbol	pfp		55409						
ANR	55774	Symbol	getc		55409						
ANR	55775	Symbol	EOF		55409						
ANR	55776	Symbol	using_plan_a		55409						
ANR	55777	Function	incomplete_line	2052:0:55765:56125							
ANR	55778	FunctionDef	incomplete_line ()		55777	0					
ANR	55779	CompoundStatement		2054:0:55800:56125	55777	0					
ANR	55780	IdentifierDeclStatement	FILE * fp = pfp ;	2055:2:55804:55818	55777	0	True				
ANR	55781	IdentifierDecl	* fp = pfp		55777	0					
ANR	55782	IdentifierDeclType	FILE *		55777	0					
ANR	55783	Identifier	fp		55777	1					
ANR	55784	AssignmentExpression	* fp = pfp		55777	2		=			
ANR	55785	Identifier	pfp		55777	0					
ANR	55786	Identifier	pfp		55777	1					
ANR	55787	IdentifierDeclStatement	int c ;	2056:2:55822:55827	55777	1	True				
ANR	55788	IdentifierDecl	c		55777	0					
ANR	55789	IdentifierDeclType	int		55777	0					
ANR	55790	Identifier	c		55777	1					
ANR	55791	IdentifierDeclStatement	file_offset line_beginning = file_tell ( fp ) ;	2057:2:55831:55874	55777	2	True				
ANR	55792	IdentifierDecl	line_beginning = file_tell ( fp )		55777	0					
ANR	55793	IdentifierDeclType	file_offset		55777	0					
ANR	55794	Identifier	line_beginning		55777	1					
ANR	55795	AssignmentExpression	line_beginning = file_tell ( fp )		55777	2		=			
ANR	55796	Identifier	line_beginning		55777	0					
ANR	55797	CallExpression	file_tell ( fp )		55777	1					
ANR	55798	Callee	file_tell		55777	0					
ANR	55799	Identifier	file_tell		55777	0					
ANR	55800	ArgumentList	fp		55777	1					
ANR	55801	Argument	fp		55777	0					
ANR	55802	Identifier	fp		55777	0					
ANR	55803	IfStatement	if ( getc ( fp ) == '\\\\' )		55777	3					
ANR	55804	Condition	getc ( fp ) == '\\\\'	2059:6:55883:55899	55777	0	True				
ANR	55805	EqualityExpression	getc ( fp ) == '\\\\'		55777	0		==			
ANR	55806	CallExpression	getc ( fp )		55777	0					
ANR	55807	Callee	getc		55777	0					
ANR	55808	Identifier	getc		55777	0					
ANR	55809	ArgumentList	fp		55777	1					
ANR	55810	Argument	fp		55777	0					
ANR	55811	Identifier	fp		55777	0					
ANR	55812	PrimaryExpression	'\\\\'		55777	1					
ANR	55813	CompoundStatement		7:4:105:105	55777	1					
ANR	55814	WhileStatement	while ( ( c = getc ( fp ) ) != '\\n' && c != EOF )		55777	0					
ANR	55815	Condition	( c = getc ( fp ) ) != '\\n' && c != EOF	2061:13:55921:55957	55777	0	True				
ANR	55816	AndExpression	( c = getc ( fp ) ) != '\\n' && c != EOF		55777	0		&&			
ANR	55817	EqualityExpression	( c = getc ( fp ) ) != '\\n'		55777	0		!=			
ANR	55818	AssignmentExpression	c = getc ( fp )		55777	0		=			
ANR	55819	Identifier	c		55777	0					
ANR	55820	CallExpression	getc ( fp )		55777	1					
ANR	55821	Callee	getc		55777	0					
ANR	55822	Identifier	getc		55777	0					
ANR	55823	ArgumentList	fp		55777	1					
ANR	55824	Argument	fp		55777	0					
ANR	55825	Identifier	fp		55777	0					
ANR	55826	PrimaryExpression	'\\n'		55777	1					
ANR	55827	EqualityExpression	c != EOF		55777	1		!=			
ANR	55828	Identifier	c		55777	0					
ANR	55829	Identifier	EOF		55777	1					
ANR	55830	ExpressionStatement		2062:18:55978:55978	55777	1	True				
ANR	55831	ReturnStatement	return true ;	2063:6:55986:55997	55777	1	True				
ANR	55832	Identifier	true		55777	0					
ANR	55833	ElseStatement	else		55777	0					
ANR	55834	CompoundStatement		13:4:215:215	55777	0					
ANR	55835	ExpressionStatement	"Fseek ( pfp , line_beginning , SEEK_SET )"	2068:6:56060:56097	55777	0	True				
ANR	55836	CallExpression	"Fseek ( pfp , line_beginning , SEEK_SET )"		55777	0					
ANR	55837	Callee	Fseek		55777	0					
ANR	55838	Identifier	Fseek		55777	0					
ANR	55839	ArgumentList	pfp		55777	1					
ANR	55840	Argument	pfp		55777	0					
ANR	55841	Identifier	pfp		55777	0					
ANR	55842	Argument	line_beginning		55777	1					
ANR	55843	Identifier	line_beginning		55777	0					
ANR	55844	Argument	SEEK_SET		55777	2					
ANR	55845	Identifier	SEEK_SET		55777	0					
ANR	55846	ReturnStatement	return false ;	2069:6:56105:56117	55777	1	True				
ANR	55847	Identifier	false		55777	0					
ANR	55848	ReturnType	static bool		55777	1					
ANR	55849	Identifier	incomplete_line		55777	2					
ANR	55850	ParameterList			55777	3					
ANR	55851	CFGEntryNode	ENTRY		55777		True				
ANR	55852	CFGExitNode	EXIT		55777		True				
ANR	55853	Symbol	SEEK_SET		55777						
ANR	55854	Symbol	c		55777						
ANR	55855	Symbol	true		55777						
ANR	55856	Symbol	false		55777						
ANR	55857	Symbol	fp		55777						
ANR	55858	Symbol	line_beginning		55777						
ANR	55859	Symbol	pfp		55777						
ANR	55860	Symbol	getc		55777						
ANR	55861	Symbol	EOF		55777						
ANR	55862	Symbol	file_tell		55777						
ANR	55863	Function	pch_swap	2075:0:56189:58142							
ANR	55864	FunctionDef	pch_swap ()		55863	0					
ANR	55865	CompoundStatement		2077:0:56210:58142	55863	0					
ANR	55866	IdentifierDeclStatement	char * * tp_line ;	2078:4:56216:56230	55863	0	True				
ANR	55867	IdentifierDecl	* * tp_line		55863	0					
ANR	55868	IdentifierDeclType	char * *		55863	0					
ANR	55869	Identifier	tp_line		55863	1					
ANR	55870	IdentifierDeclStatement	size_t * tp_len ;	2079:4:56264:56278	55863	1	True				
ANR	55871	IdentifierDecl	* tp_len		55863	0					
ANR	55872	IdentifierDeclType	size_t *		55863	0					
ANR	55873	Identifier	tp_len		55863	1					
ANR	55874	IdentifierDeclStatement	char * tp_char ;	2080:4:56311:56324	55863	2	True				
ANR	55875	IdentifierDecl	* tp_char		55863	0					
ANR	55876	IdentifierDeclType	char *		55863	0					
ANR	55877	Identifier	tp_char		55863	1					
ANR	55878	IdentifierDeclStatement	lin i ;	2081:4:56349:56354	55863	3	True				
ANR	55879	IdentifierDecl	i		55863	0					
ANR	55880	IdentifierDeclType	lin		55863	0					
ANR	55881	Identifier	i		55863	1					
ANR	55882	IdentifierDeclStatement	lin n ;	2082:4:56360:56365	55863	4	True				
ANR	55883	IdentifierDecl	n		55863	0					
ANR	55884	IdentifierDeclType	lin		55863	0					
ANR	55885	Identifier	n		55863	1					
ANR	55886	IdentifierDeclStatement	bool blankline = false ;	2083:4:56371:56393	55863	5	True				
ANR	55887	IdentifierDecl	blankline = false		55863	0					
ANR	55888	IdentifierDeclType	bool		55863	0					
ANR	55889	Identifier	blankline		55863	1					
ANR	55890	AssignmentExpression	blankline = false		55863	2		=			
ANR	55891	Identifier	false		55863	0					
ANR	55892	Identifier	false		55863	1					
ANR	55893	IdentifierDeclStatement	char * s ;	2084:4:56399:56406	55863	6	True				
ANR	55894	IdentifierDecl	* s		55863	0					
ANR	55895	IdentifierDeclType	char *		55863	0					
ANR	55896	Identifier	s		55863	1					
ANR	55897	ExpressionStatement	i = p_first	2086:4:56413:56424	55863	7	True				
ANR	55898	AssignmentExpression	i = p_first		55863	0		=			
ANR	55899	Identifier	i		55863	0					
ANR	55900	Identifier	p_first		55863	1					
ANR	55901	ExpressionStatement	p_first = p_newfirst	2087:4:56430:56450	55863	8	True				
ANR	55902	AssignmentExpression	p_first = p_newfirst		55863	0		=			
ANR	55903	Identifier	p_first		55863	0					
ANR	55904	Identifier	p_newfirst		55863	1					
ANR	55905	ExpressionStatement	p_newfirst = i	2088:4:56456:56470	55863	9	True				
ANR	55906	AssignmentExpression	p_newfirst = i		55863	0		=			
ANR	55907	Identifier	p_newfirst		55863	0					
ANR	55908	Identifier	i		55863	1					
ANR	55909	ExpressionStatement	tp_line = p_line	2092:4:56508:56524	55863	10	True				
ANR	55910	AssignmentExpression	tp_line = p_line		55863	0		=			
ANR	55911	Identifier	tp_line		55863	0					
ANR	55912	Identifier	p_line		55863	1					
ANR	55913	ExpressionStatement	tp_len = p_len	2093:4:56530:56544	55863	11	True				
ANR	55914	AssignmentExpression	tp_len = p_len		55863	0		=			
ANR	55915	Identifier	tp_len		55863	0					
ANR	55916	Identifier	p_len		55863	1					
ANR	55917	ExpressionStatement	tp_char = p_Char	2094:4:56550:56566	55863	12	True				
ANR	55918	AssignmentExpression	tp_char = p_Char		55863	0		=			
ANR	55919	Identifier	tp_char		55863	0					
ANR	55920	Identifier	p_Char		55863	1					
ANR	55921	ExpressionStatement	p_line = 0	2095:4:56572:56582	55863	13	True				
ANR	55922	AssignmentExpression	p_line = 0		55863	0		=			
ANR	55923	Identifier	p_line		55863	0					
ANR	55924	PrimaryExpression	0		55863	1					
ANR	55925	ExpressionStatement	p_len = 0	2096:4:56630:56639	55863	14	True				
ANR	55926	AssignmentExpression	p_len = 0		55863	0		=			
ANR	55927	Identifier	p_len		55863	0					
ANR	55928	PrimaryExpression	0		55863	1					
ANR	55929	ExpressionStatement	p_Char = 0	2097:4:56645:56655	55863	15	True				
ANR	55930	AssignmentExpression	p_Char = 0		55863	0		=			
ANR	55931	Identifier	p_Char		55863	0					
ANR	55932	PrimaryExpression	0		55863	1					
ANR	55933	ExpressionStatement	set_hunkmax ( )	2098:4:56661:56674	55863	16	True				
ANR	55934	CallExpression	set_hunkmax ( )		55863	0					
ANR	55935	Callee	set_hunkmax		55863	0					
ANR	55936	Identifier	set_hunkmax		55863	0					
ANR	55937	ArgumentList			55863	1					
ANR	55938	IfStatement	if ( ! p_line || ! p_len || ! p_Char )		55863	17					
ANR	55939	Condition	! p_line || ! p_len || ! p_Char	2099:8:56684:56711	55863	0	True				
ANR	55940	OrExpression	! p_line || ! p_len || ! p_Char		55863	0		||			
ANR	55941	UnaryOperationExpression	! p_line		55863	0					
ANR	55942	UnaryOperator	!		55863	0					
ANR	55943	Identifier	p_line		55863	1					
ANR	55944	OrExpression	! p_len || ! p_Char		55863	1		||			
ANR	55945	UnaryOperationExpression	! p_len		55863	0					
ANR	55946	UnaryOperator	!		55863	0					
ANR	55947	Identifier	p_len		55863	1					
ANR	55948	UnaryOperationExpression	! p_Char		55863	1					
ANR	55949	UnaryOperator	!		55863	0					
ANR	55950	Identifier	p_Char		55863	1					
ANR	55951	CompoundStatement		23:38:503:503	55863	1					
ANR	55952	ExpressionStatement	free ( p_line )	2100:1:56717:56730	55863	0	True				
ANR	55953	CallExpression	free ( p_line )		55863	0					
ANR	55954	Callee	free		55863	0					
ANR	55955	Identifier	free		55863	0					
ANR	55956	ArgumentList	p_line		55863	1					
ANR	55957	Argument	p_line		55863	0					
ANR	55958	Identifier	p_line		55863	0					
ANR	55959	ExpressionStatement	p_line = tp_line	2101:1:56733:56749	55863	1	True				
ANR	55960	AssignmentExpression	p_line = tp_line		55863	0		=			
ANR	55961	Identifier	p_line		55863	0					
ANR	55962	Identifier	tp_line		55863	1					
ANR	55963	ExpressionStatement	free ( p_len )	2102:1:56752:56764	55863	2	True				
ANR	55964	CallExpression	free ( p_len )		55863	0					
ANR	55965	Callee	free		55863	0					
ANR	55966	Identifier	free		55863	0					
ANR	55967	ArgumentList	p_len		55863	1					
ANR	55968	Argument	p_len		55863	0					
ANR	55969	Identifier	p_len		55863	0					
ANR	55970	ExpressionStatement	p_len = tp_len	2103:1:56767:56781	55863	3	True				
ANR	55971	AssignmentExpression	p_len = tp_len		55863	0		=			
ANR	55972	Identifier	p_len		55863	0					
ANR	55973	Identifier	tp_len		55863	1					
ANR	55974	ExpressionStatement	free ( p_Char )	2104:1:56784:56797	55863	4	True				
ANR	55975	CallExpression	free ( p_Char )		55863	0					
ANR	55976	Callee	free		55863	0					
ANR	55977	Identifier	free		55863	0					
ANR	55978	ArgumentList	p_Char		55863	1					
ANR	55979	Argument	p_Char		55863	0					
ANR	55980	Identifier	p_Char		55863	0					
ANR	55981	ExpressionStatement	p_Char = tp_char	2105:1:56800:56816	55863	5	True				
ANR	55982	AssignmentExpression	p_Char = tp_char		55863	0		=			
ANR	55983	Identifier	p_Char		55863	0					
ANR	55984	Identifier	tp_char		55863	1					
ANR	55985	ReturnStatement	return false ;	2106:1:56819:56831	55863	6	True				
ANR	55986	Identifier	false		55863	0					
ANR	55987	ExpressionStatement	i = p_ptrn_lines + 1	2111:4:56924:56944	55863	18	True				
ANR	55988	AssignmentExpression	i = p_ptrn_lines + 1		55863	0		=			
ANR	55989	Identifier	i		55863	0					
ANR	55990	AdditiveExpression	p_ptrn_lines + 1		55863	1		+			
ANR	55991	Identifier	p_ptrn_lines		55863	0					
ANR	55992	PrimaryExpression	1		55863	1					
ANR	55993	IfStatement	if ( tp_char [ i ] == '\\n' )		55863	19					
ANR	55994	Condition	tp_char [ i ] == '\\n'	2112:8:56954:56971	55863	0	True				
ANR	55995	EqualityExpression	tp_char [ i ] == '\\n'		55863	0		==			
ANR	55996	ArrayIndexing	tp_char [ i ]		55863	0					
ANR	55997	Identifier	tp_char		55863	0					
ANR	55998	Identifier	i		55863	1					
ANR	55999	PrimaryExpression	'\\n'		55863	1					
ANR	56000	CompoundStatement		36:28:763:763	55863	1					
ANR	56001	ExpressionStatement	blankline = true	2113:1:57016:57032	55863	0	True				
ANR	56002	AssignmentExpression	blankline = true		55863	0		=			
ANR	56003	Identifier	blankline		55863	0					
ANR	56004	Identifier	true		55863	1					
ANR	56005	ExpressionStatement	i ++	2114:1:57035:57038	55863	1	True				
ANR	56006	PostIncDecOperationExpression	i ++		55863	0					
ANR	56007	Identifier	i		55863	0					
ANR	56008	IncDec	++		55863	1					
ANR	56009	IfStatement	if ( p_efake >= 0 )		55863	20					
ANR	56010	Condition	p_efake >= 0	2116:8:57054:57065	55863	0	True				
ANR	56011	RelationalExpression	p_efake >= 0		55863	0		>=			
ANR	56012	Identifier	p_efake		55863	0					
ANR	56013	PrimaryExpression	0		55863	1					
ANR	56014	CompoundStatement		40:22:857:857	55863	1					
ANR	56015	IfStatement	if ( p_efake <= i )		55863	0					
ANR	56016	Condition	p_efake <= i	2117:5:57110:57121	55863	0	True				
ANR	56017	RelationalExpression	p_efake <= i		55863	0		<=			
ANR	56018	Identifier	p_efake		55863	0					
ANR	56019	Identifier	i		55863	1					
ANR	56020	ExpressionStatement	n = p_end - i + 1	2118:5:57129:57146	55863	1	True				
ANR	56021	AssignmentExpression	n = p_end - i + 1		55863	0		=			
ANR	56022	Identifier	n		55863	0					
ANR	56023	AdditiveExpression	p_end - i + 1		55863	1		-			
ANR	56024	Identifier	p_end		55863	0					
ANR	56025	AdditiveExpression	i + 1		55863	1		+			
ANR	56026	Identifier	i		55863	0					
ANR	56027	PrimaryExpression	1		55863	1					
ANR	56028	ElseStatement	else		55863	0					
ANR	56029	ExpressionStatement	n = - i	2120:5:57159:57165	55863	0	True				
ANR	56030	AssignmentExpression	n = - i		55863	0		=			
ANR	56031	Identifier	n		55863	0					
ANR	56032	UnaryOperationExpression	- i		55863	1					
ANR	56033	UnaryOperator	-		55863	0					
ANR	56034	Identifier	i		55863	1					
ANR	56035	ExpressionStatement	p_efake += n	2121:1:57168:57180	55863	1	True				
ANR	56036	AssignmentExpression	p_efake += n		55863	0		+=			
ANR	56037	Identifier	p_efake		55863	0					
ANR	56038	Identifier	n		55863	1					
ANR	56039	ExpressionStatement	p_bfake += n	2122:1:57183:57195	55863	2	True				
ANR	56040	AssignmentExpression	p_bfake += n		55863	0		+=			
ANR	56041	Identifier	p_bfake		55863	0					
ANR	56042	Identifier	n		55863	1					
ANR	56043	ForStatement	"for ( n = 0 ; i <= p_end ; i ++ , n ++ )"		55863	21					
ANR	56044	ForInit	n = 0 ;	2124:9:57212:57215	55863	0	True				
ANR	56045	AssignmentExpression	n = 0		55863	0		=			
ANR	56046	Identifier	n		55863	0					
ANR	56047	PrimaryExpression	0		55863	1					
ANR	56048	Condition	i <= p_end	2124:14:57217:57226	55863	1	True				
ANR	56049	RelationalExpression	i <= p_end		55863	0		<=			
ANR	56050	Identifier	i		55863	0					
ANR	56051	Identifier	p_end		55863	1					
ANR	56052	Expression	"i ++ , n ++"	2124:26:57229:57235	55863	2	True				
ANR	56053	PostIncDecOperationExpression	i ++		55863	0					
ANR	56054	Identifier	i		55863	0					
ANR	56055	IncDec	++		55863	1					
ANR	56056	PostIncDecOperationExpression	n ++		55863	1					
ANR	56057	Identifier	n		55863	0					
ANR	56058	IncDec	++		55863	1					
ANR	56059	CompoundStatement		48:35:1027:1027	55863	3					
ANR	56060	ExpressionStatement	p_line [ n ] = tp_line [ i ]	2125:1:57241:57263	55863	0	True				
ANR	56061	AssignmentExpression	p_line [ n ] = tp_line [ i ]		55863	0		=			
ANR	56062	ArrayIndexing	p_line [ n ]		55863	0					
ANR	56063	Identifier	p_line		55863	0					
ANR	56064	Identifier	n		55863	1					
ANR	56065	ArrayIndexing	tp_line [ i ]		55863	1					
ANR	56066	Identifier	tp_line		55863	0					
ANR	56067	Identifier	i		55863	1					
ANR	56068	ExpressionStatement	p_Char [ n ] = tp_char [ i ]	2126:1:57266:57288	55863	1	True				
ANR	56069	AssignmentExpression	p_Char [ n ] = tp_char [ i ]		55863	0		=			
ANR	56070	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56071	Identifier	p_Char		55863	0					
ANR	56072	Identifier	n		55863	1					
ANR	56073	ArrayIndexing	tp_char [ i ]		55863	1					
ANR	56074	Identifier	tp_char		55863	0					
ANR	56075	Identifier	i		55863	1					
ANR	56076	IfStatement	if ( p_Char [ n ] == '+' )		55863	2					
ANR	56077	Condition	p_Char [ n ] == '+'	2127:5:57295:57310	55863	0	True				
ANR	56078	EqualityExpression	p_Char [ n ] == '+'		55863	0		==			
ANR	56079	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56080	Identifier	p_Char		55863	0					
ANR	56081	Identifier	n		55863	1					
ANR	56082	PrimaryExpression	'+'		55863	1					
ANR	56083	ExpressionStatement	p_Char [ n ] = '-'	2128:5:57318:57333	55863	1	True				
ANR	56084	AssignmentExpression	p_Char [ n ] = '-'		55863	0		=			
ANR	56085	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56086	Identifier	p_Char		55863	0					
ANR	56087	Identifier	n		55863	1					
ANR	56088	PrimaryExpression	'-'		55863	1					
ANR	56089	ExpressionStatement	p_len [ n ] = tp_len [ i ]	2129:1:57336:57356	55863	3	True				
ANR	56090	AssignmentExpression	p_len [ n ] = tp_len [ i ]		55863	0		=			
ANR	56091	ArrayIndexing	p_len [ n ]		55863	0					
ANR	56092	Identifier	p_len		55863	0					
ANR	56093	Identifier	n		55863	1					
ANR	56094	ArrayIndexing	tp_len [ i ]		55863	1					
ANR	56095	Identifier	tp_len		55863	0					
ANR	56096	Identifier	i		55863	1					
ANR	56097	IfStatement	if ( blankline )		55863	22					
ANR	56098	Condition	blankline	2131:8:57372:57380	55863	0	True				
ANR	56099	Identifier	blankline		55863	0					
ANR	56100	CompoundStatement		55:19:1172:1172	55863	1					
ANR	56101	ExpressionStatement	i = p_ptrn_lines + 1	2132:1:57386:57406	55863	0	True				
ANR	56102	AssignmentExpression	i = p_ptrn_lines + 1		55863	0		=			
ANR	56103	Identifier	i		55863	0					
ANR	56104	AdditiveExpression	p_ptrn_lines + 1		55863	1		+			
ANR	56105	Identifier	p_ptrn_lines		55863	0					
ANR	56106	PrimaryExpression	1		55863	1					
ANR	56107	ExpressionStatement	p_line [ n ] = tp_line [ i ]	2133:1:57409:57431	55863	1	True				
ANR	56108	AssignmentExpression	p_line [ n ] = tp_line [ i ]		55863	0		=			
ANR	56109	ArrayIndexing	p_line [ n ]		55863	0					
ANR	56110	Identifier	p_line		55863	0					
ANR	56111	Identifier	n		55863	1					
ANR	56112	ArrayIndexing	tp_line [ i ]		55863	1					
ANR	56113	Identifier	tp_line		55863	0					
ANR	56114	Identifier	i		55863	1					
ANR	56115	ExpressionStatement	p_Char [ n ] = tp_char [ i ]	2134:1:57434:57456	55863	2	True				
ANR	56116	AssignmentExpression	p_Char [ n ] = tp_char [ i ]		55863	0		=			
ANR	56117	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56118	Identifier	p_Char		55863	0					
ANR	56119	Identifier	n		55863	1					
ANR	56120	ArrayIndexing	tp_char [ i ]		55863	1					
ANR	56121	Identifier	tp_char		55863	0					
ANR	56122	Identifier	i		55863	1					
ANR	56123	ExpressionStatement	p_len [ n ] = tp_len [ i ]	2135:1:57459:57479	55863	3	True				
ANR	56124	AssignmentExpression	p_len [ n ] = tp_len [ i ]		55863	0		=			
ANR	56125	ArrayIndexing	p_len [ n ]		55863	0					
ANR	56126	Identifier	p_len		55863	0					
ANR	56127	Identifier	n		55863	1					
ANR	56128	ArrayIndexing	tp_len [ i ]		55863	1					
ANR	56129	Identifier	tp_len		55863	0					
ANR	56130	Identifier	i		55863	1					
ANR	56131	ExpressionStatement	n ++	2136:1:57482:57485	55863	4	True				
ANR	56132	PostIncDecOperationExpression	n ++		55863	0					
ANR	56133	Identifier	n		55863	0					
ANR	56134	IncDec	++		55863	1					
ANR	56135	ExpressionStatement	assert ( p_Char [ 0 ] == '=' )	2138:4:57497:57521	55863	23	True				
ANR	56136	CallExpression	assert ( p_Char [ 0 ] == '=' )		55863	0					
ANR	56137	Callee	assert		55863	0					
ANR	56138	Identifier	assert		55863	0					
ANR	56139	ArgumentList	p_Char [ 0 ] == '='		55863	1					
ANR	56140	Argument	p_Char [ 0 ] == '='		55863	0					
ANR	56141	EqualityExpression	p_Char [ 0 ] == '='		55863	0		==			
ANR	56142	ArrayIndexing	p_Char [ 0 ]		55863	0					
ANR	56143	Identifier	p_Char		55863	0					
ANR	56144	PrimaryExpression	0		55863	1					
ANR	56145	PrimaryExpression	'='		55863	1					
ANR	56146	ExpressionStatement	p_Char [ 0 ] = '*'	2139:4:57527:57542	55863	24	True				
ANR	56147	AssignmentExpression	p_Char [ 0 ] = '*'		55863	0		=			
ANR	56148	ArrayIndexing	p_Char [ 0 ]		55863	0					
ANR	56149	Identifier	p_Char		55863	0					
ANR	56150	PrimaryExpression	0		55863	1					
ANR	56151	PrimaryExpression	'*'		55863	1					
ANR	56152	ForStatement	for ( s = p_line [ 0 ] ; * s ; s ++ )		55863	25					
ANR	56153	ForInit	s = p_line [ 0 ] ;	2140:9:57553:57564	55863	0	True				
ANR	56154	AssignmentExpression	s = p_line [ 0 ]		55863	0		=			
ANR	56155	Identifier	s		55863	0					
ANR	56156	ArrayIndexing	p_line [ 0 ]		55863	1					
ANR	56157	Identifier	p_line		55863	0					
ANR	56158	PrimaryExpression	0		55863	1					
ANR	56159	Condition	* s	2140:22:57566:57567	55863	1	True				
ANR	56160	UnaryOperationExpression	* s		55863	0					
ANR	56161	UnaryOperator	*		55863	0					
ANR	56162	Identifier	s		55863	1					
ANR	56163	PostIncDecOperationExpression	s ++	2140:26:57570:57572	55863	2	True				
ANR	56164	Identifier	s		55863	0					
ANR	56165	IncDec	++		55863	1					
ANR	56166	IfStatement	if ( * s == '-' )		55863	3					
ANR	56167	Condition	* s == '-'	2141:5:57580:57588	55863	0	True				
ANR	56168	EqualityExpression	* s == '-'		55863	0		==			
ANR	56169	UnaryOperationExpression	* s		55863	0					
ANR	56170	UnaryOperator	*		55863	0					
ANR	56171	Identifier	s		55863	1					
ANR	56172	PrimaryExpression	'-'		55863	1					
ANR	56173	ExpressionStatement	* s = '*'	2142:5:57596:57604	55863	1	True				
ANR	56174	AssignmentExpression	* s = '*'		55863	0		=			
ANR	56175	UnaryOperationExpression	* s		55863	0					
ANR	56176	UnaryOperator	*		55863	0					
ANR	56177	Identifier	s		55863	1					
ANR	56178	PrimaryExpression	'*'		55863	1					
ANR	56179	ExpressionStatement	assert ( tp_char [ 0 ] == '*' )	2146:4:57652:57677	55863	26	True				
ANR	56180	CallExpression	assert ( tp_char [ 0 ] == '*' )		55863	0					
ANR	56181	Callee	assert		55863	0					
ANR	56182	Identifier	assert		55863	0					
ANR	56183	ArgumentList	tp_char [ 0 ] == '*'		55863	1					
ANR	56184	Argument	tp_char [ 0 ] == '*'		55863	0					
ANR	56185	EqualityExpression	tp_char [ 0 ] == '*'		55863	0		==			
ANR	56186	ArrayIndexing	tp_char [ 0 ]		55863	0					
ANR	56187	Identifier	tp_char		55863	0					
ANR	56188	PrimaryExpression	0		55863	1					
ANR	56189	PrimaryExpression	'*'		55863	1					
ANR	56190	ExpressionStatement	tp_char [ 0 ] = '='	2147:4:57683:57699	55863	27	True				
ANR	56191	AssignmentExpression	tp_char [ 0 ] = '='		55863	0		=			
ANR	56192	ArrayIndexing	tp_char [ 0 ]		55863	0					
ANR	56193	Identifier	tp_char		55863	0					
ANR	56194	PrimaryExpression	0		55863	1					
ANR	56195	PrimaryExpression	'='		55863	1					
ANR	56196	ForStatement	for ( s = tp_line [ 0 ] ; * s ; s ++ )		55863	28					
ANR	56197	ForInit	s = tp_line [ 0 ] ;	2148:9:57710:57722	55863	0	True				
ANR	56198	AssignmentExpression	s = tp_line [ 0 ]		55863	0		=			
ANR	56199	Identifier	s		55863	0					
ANR	56200	ArrayIndexing	tp_line [ 0 ]		55863	1					
ANR	56201	Identifier	tp_line		55863	0					
ANR	56202	PrimaryExpression	0		55863	1					
ANR	56203	Condition	* s	2148:23:57724:57725	55863	1	True				
ANR	56204	UnaryOperationExpression	* s		55863	0					
ANR	56205	UnaryOperator	*		55863	0					
ANR	56206	Identifier	s		55863	1					
ANR	56207	PostIncDecOperationExpression	s ++	2148:27:57728:57730	55863	2	True				
ANR	56208	Identifier	s		55863	0					
ANR	56209	IncDec	++		55863	1					
ANR	56210	IfStatement	if ( * s == '*' )		55863	3					
ANR	56211	Condition	* s == '*'	2149:5:57738:57746	55863	0	True				
ANR	56212	EqualityExpression	* s == '*'		55863	0		==			
ANR	56213	UnaryOperationExpression	* s		55863	0					
ANR	56214	UnaryOperator	*		55863	0					
ANR	56215	Identifier	s		55863	1					
ANR	56216	PrimaryExpression	'*'		55863	1					
ANR	56217	ExpressionStatement	* s = '-'	2150:5:57754:57762	55863	1	True				
ANR	56218	AssignmentExpression	* s = '-'		55863	0		=			
ANR	56219	UnaryOperationExpression	* s		55863	0					
ANR	56220	UnaryOperator	*		55863	0					
ANR	56221	Identifier	s		55863	1					
ANR	56222	PrimaryExpression	'-'		55863	1					
ANR	56223	ForStatement	"for ( i = 0 ; n <= p_end ; i ++ , n ++ )"		55863	29					
ANR	56224	ForInit	i = 0 ;	2151:9:57773:57776	55863	0	True				
ANR	56225	AssignmentExpression	i = 0		55863	0		=			
ANR	56226	Identifier	i		55863	0					
ANR	56227	PrimaryExpression	0		55863	1					
ANR	56228	Condition	n <= p_end	2151:14:57778:57787	55863	1	True				
ANR	56229	RelationalExpression	n <= p_end		55863	0		<=			
ANR	56230	Identifier	n		55863	0					
ANR	56231	Identifier	p_end		55863	1					
ANR	56232	Expression	"i ++ , n ++"	2151:26:57790:57796	55863	2	True				
ANR	56233	PostIncDecOperationExpression	i ++		55863	0					
ANR	56234	Identifier	i		55863	0					
ANR	56235	IncDec	++		55863	1					
ANR	56236	PostIncDecOperationExpression	n ++		55863	1					
ANR	56237	Identifier	n		55863	0					
ANR	56238	IncDec	++		55863	1					
ANR	56239	CompoundStatement		75:35:1588:1588	55863	3					
ANR	56240	ExpressionStatement	p_line [ n ] = tp_line [ i ]	2152:1:57802:57824	55863	0	True				
ANR	56241	AssignmentExpression	p_line [ n ] = tp_line [ i ]		55863	0		=			
ANR	56242	ArrayIndexing	p_line [ n ]		55863	0					
ANR	56243	Identifier	p_line		55863	0					
ANR	56244	Identifier	n		55863	1					
ANR	56245	ArrayIndexing	tp_line [ i ]		55863	1					
ANR	56246	Identifier	tp_line		55863	0					
ANR	56247	Identifier	i		55863	1					
ANR	56248	ExpressionStatement	p_Char [ n ] = tp_char [ i ]	2153:1:57827:57849	55863	1	True				
ANR	56249	AssignmentExpression	p_Char [ n ] = tp_char [ i ]		55863	0		=			
ANR	56250	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56251	Identifier	p_Char		55863	0					
ANR	56252	Identifier	n		55863	1					
ANR	56253	ArrayIndexing	tp_char [ i ]		55863	1					
ANR	56254	Identifier	tp_char		55863	0					
ANR	56255	Identifier	i		55863	1					
ANR	56256	IfStatement	if ( p_Char [ n ] == '-' )		55863	2					
ANR	56257	Condition	p_Char [ n ] == '-'	2154:5:57856:57871	55863	0	True				
ANR	56258	EqualityExpression	p_Char [ n ] == '-'		55863	0		==			
ANR	56259	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56260	Identifier	p_Char		55863	0					
ANR	56261	Identifier	n		55863	1					
ANR	56262	PrimaryExpression	'-'		55863	1					
ANR	56263	ExpressionStatement	p_Char [ n ] = '+'	2155:5:57879:57894	55863	1	True				
ANR	56264	AssignmentExpression	p_Char [ n ] = '+'		55863	0		=			
ANR	56265	ArrayIndexing	p_Char [ n ]		55863	0					
ANR	56266	Identifier	p_Char		55863	0					
ANR	56267	Identifier	n		55863	1					
ANR	56268	PrimaryExpression	'+'		55863	1					
ANR	56269	ExpressionStatement	p_len [ n ] = tp_len [ i ]	2156:1:57897:57917	55863	3	True				
ANR	56270	AssignmentExpression	p_len [ n ] = tp_len [ i ]		55863	0		=			
ANR	56271	ArrayIndexing	p_len [ n ]		55863	0					
ANR	56272	Identifier	p_len		55863	0					
ANR	56273	Identifier	n		55863	1					
ANR	56274	ArrayIndexing	tp_len [ i ]		55863	1					
ANR	56275	Identifier	tp_len		55863	0					
ANR	56276	Identifier	i		55863	1					
ANR	56277	ExpressionStatement	assert ( i == p_ptrn_lines + 1 )	2158:4:57929:57958	55863	30	True				
ANR	56278	CallExpression	assert ( i == p_ptrn_lines + 1 )		55863	0					
ANR	56279	Callee	assert		55863	0					
ANR	56280	Identifier	assert		55863	0					
ANR	56281	ArgumentList	i == p_ptrn_lines + 1		55863	1					
ANR	56282	Argument	i == p_ptrn_lines + 1		55863	0					
ANR	56283	EqualityExpression	i == p_ptrn_lines + 1		55863	0		==			
ANR	56284	Identifier	i		55863	0					
ANR	56285	AdditiveExpression	p_ptrn_lines + 1		55863	1		+			
ANR	56286	Identifier	p_ptrn_lines		55863	0					
ANR	56287	PrimaryExpression	1		55863	1					
ANR	56288	ExpressionStatement	i = p_ptrn_lines	2159:4:57964:57980	55863	31	True				
ANR	56289	AssignmentExpression	i = p_ptrn_lines		55863	0		=			
ANR	56290	Identifier	i		55863	0					
ANR	56291	Identifier	p_ptrn_lines		55863	1					
ANR	56292	ExpressionStatement	p_ptrn_lines = p_repl_lines	2160:4:57986:58013	55863	32	True				
ANR	56293	AssignmentExpression	p_ptrn_lines = p_repl_lines		55863	0		=			
ANR	56294	Identifier	p_ptrn_lines		55863	0					
ANR	56295	Identifier	p_repl_lines		55863	1					
ANR	56296	ExpressionStatement	p_repl_lines = i	2161:4:58019:58035	55863	33	True				
ANR	56297	AssignmentExpression	p_repl_lines = i		55863	0		=			
ANR	56298	Identifier	p_repl_lines		55863	0					
ANR	56299	Identifier	i		55863	1					
ANR	56300	ExpressionStatement	p_Char [ p_end + 1 ] = '^'	2162:4:58041:58064	55863	34	True				
ANR	56301	AssignmentExpression	p_Char [ p_end + 1 ] = '^'		55863	0		=			
ANR	56302	ArrayIndexing	p_Char [ p_end + 1 ]		55863	0					
ANR	56303	Identifier	p_Char		55863	0					
ANR	56304	AdditiveExpression	p_end + 1		55863	1		+			
ANR	56305	Identifier	p_end		55863	0					
ANR	56306	PrimaryExpression	1		55863	1					
ANR	56307	PrimaryExpression	'^'		55863	1					
ANR	56308	ExpressionStatement	free ( tp_line )	2163:4:58070:58084	55863	35	True				
ANR	56309	CallExpression	free ( tp_line )		55863	0					
ANR	56310	Callee	free		55863	0					
ANR	56311	Identifier	free		55863	0					
ANR	56312	ArgumentList	tp_line		55863	1					
ANR	56313	Argument	tp_line		55863	0					
ANR	56314	Identifier	tp_line		55863	0					
ANR	56315	ExpressionStatement	free ( tp_len )	2164:4:58090:58103	55863	36	True				
ANR	56316	CallExpression	free ( tp_len )		55863	0					
ANR	56317	Callee	free		55863	0					
ANR	56318	Identifier	free		55863	0					
ANR	56319	ArgumentList	tp_len		55863	1					
ANR	56320	Argument	tp_len		55863	0					
ANR	56321	Identifier	tp_len		55863	0					
ANR	56322	ExpressionStatement	free ( tp_char )	2165:4:58109:58123	55863	37	True				
ANR	56323	CallExpression	free ( tp_char )		55863	0					
ANR	56324	Callee	free		55863	0					
ANR	56325	Identifier	free		55863	0					
ANR	56326	ArgumentList	tp_char		55863	1					
ANR	56327	Argument	tp_char		55863	0					
ANR	56328	Identifier	tp_char		55863	0					
ANR	56329	ReturnStatement	return true ;	2166:4:58129:58140	55863	38	True				
ANR	56330	Identifier	true		55863	0					
ANR	56331	ReturnType	bool		55863	1					
ANR	56332	Identifier	pch_swap		55863	2					
ANR	56333	ParameterList			55863	3					
ANR	56334	CFGEntryNode	ENTRY		55863		True				
ANR	56335	CFGExitNode	EXIT		55863		True				
ANR	56336	Symbol	p_ptrn_lines		55863						
ANR	56337	Symbol	p_newfirst		55863						
ANR	56338	Symbol	p_bfake		55863						
ANR	56339	Symbol	p_first		55863						
ANR	56340	Symbol	tp_line		55863						
ANR	56341	Symbol	* tp_len		55863						
ANR	56342	Symbol	p_len		55863						
ANR	56343	Symbol	tp_len		55863						
ANR	56344	Symbol	p_end		55863						
ANR	56345	Symbol	p_Char		55863						
ANR	56346	Symbol	* p_line		55863						
ANR	56347	Symbol	* tp_line		55863						
ANR	56348	Symbol	* p_end		55863						
ANR	56349	Symbol	tp_char		55863						
ANR	56350	Symbol	* p_len		55863						
ANR	56351	Symbol	false		55863						
ANR	56352	Symbol	i		55863						
ANR	56353	Symbol	* p_Char		55863						
ANR	56354	Symbol	n		55863						
ANR	56355	Symbol	p_line		55863						
ANR	56356	Symbol	blankline		55863						
ANR	56357	Symbol	p_repl_lines		55863						
ANR	56358	Symbol	s		55863						
ANR	56359	Symbol	* i		55863						
ANR	56360	Symbol	true		55863						
ANR	56361	Symbol	* n		55863						
ANR	56362	Symbol	* tp_char		55863						
ANR	56363	Symbol	* s		55863						
ANR	56364	Symbol	p_efake		55863						
ANR	56365	Function	pch_says_nonexistent	2172:0:58271:58347							
ANR	56366	FunctionDef	pch_says_nonexistent (bool which)		56365	0					
ANR	56367	CompoundStatement		2174:0:58309:58347	56365	0					
ANR	56368	ReturnStatement	return p_says_nonexistent [ which ] ;	2175:2:58313:58345	56365	0	True				
ANR	56369	ArrayIndexing	p_says_nonexistent [ which ]		56365	0					
ANR	56370	Identifier	p_says_nonexistent		56365	0					
ANR	56371	Identifier	which		56365	1					
ANR	56372	ReturnType	int		56365	1					
ANR	56373	Identifier	pch_says_nonexistent		56365	2					
ANR	56374	ParameterList	bool which		56365	3					
ANR	56375	Parameter	bool which	2173:22:58297:58306	56365	0	True				
ANR	56376	ParameterType	bool		56365	0					
ANR	56377	Identifier	which		56365	1					
ANR	56378	CFGEntryNode	ENTRY		56365		True				
ANR	56379	CFGExitNode	EXIT		56365		True				
ANR	56380	Symbol	which		56365						
ANR	56381	Symbol	* p_says_nonexistent		56365						
ANR	56382	Symbol	p_says_nonexistent		56365						
ANR	56383	Symbol	* which		56365						
ANR	56384	Function	pch_name	2178:0:58350:58440							
ANR	56385	FunctionDef	pch_name (enum nametype type)		56384	0					
ANR	56386	CompoundStatement		2180:0:58393:58440	56384	0					
ANR	56387	ReturnStatement	return type == NONE ? NULL : p_name [ type ] ;	2181:2:58397:58438	56384	0	True				
ANR	56388	ConditionalExpression	type == NONE ? NULL : p_name [ type ]		56384	0					
ANR	56389	Condition	type == NONE		56384	0					
ANR	56390	EqualityExpression	type == NONE		56384	0		==			
ANR	56391	Identifier	type		56384	0					
ANR	56392	Identifier	NONE		56384	1					
ANR	56393	Identifier	NULL		56384	1					
ANR	56394	ArrayIndexing	p_name [ type ]		56384	2					
ANR	56395	Identifier	p_name		56384	0					
ANR	56396	Identifier	type		56384	1					
ANR	56397	ReturnType	const char *		56384	1					
ANR	56398	Identifier	pch_name		56384	2					
ANR	56399	ParameterList	enum nametype type		56384	3					
ANR	56400	Parameter	enum nametype type	2179:10:58373:58390	56384	0	True				
ANR	56401	ParameterType	enum nametype		56384	0					
ANR	56402	Identifier	type		56384	1					
ANR	56403	CFGEntryNode	ENTRY		56384		True				
ANR	56404	CFGExitNode	EXIT		56384		True				
ANR	56405	Symbol	NULL		56384						
ANR	56406	Symbol	* p_name		56384						
ANR	56407	Symbol	* type		56384						
ANR	56408	Symbol	p_name		56384						
ANR	56409	Symbol	type		56384						
ANR	56410	Symbol	NONE		56384						
ANR	56411	Function	pch_copy	2184:0:58443:58503							
ANR	56412	FunctionDef	pch_copy ()		56411	0					
ANR	56413	CompoundStatement		2185:0:58464:58503	56411	0					
ANR	56414	ReturnStatement	return p_copy [ OLD ] && p_copy [ NEW ] ;	2186:2:58468:58501	56411	0	True				
ANR	56415	AndExpression	p_copy [ OLD ] && p_copy [ NEW ]		56411	0		&&			
ANR	56416	ArrayIndexing	p_copy [ OLD ]		56411	0					
ANR	56417	Identifier	p_copy		56411	0					
ANR	56418	Identifier	OLD		56411	1					
ANR	56419	ArrayIndexing	p_copy [ NEW ]		56411	1					
ANR	56420	Identifier	p_copy		56411	0					
ANR	56421	Identifier	NEW		56411	1					
ANR	56422	ReturnType	bool		56411	1					
ANR	56423	Identifier	pch_copy		56411	2					
ANR	56424	ParameterList			56411	3					
ANR	56425	CFGEntryNode	ENTRY		56411		True				
ANR	56426	CFGExitNode	EXIT		56411		True				
ANR	56427	Symbol	NEW		56411						
ANR	56428	Symbol	* NEW		56411						
ANR	56429	Symbol	OLD		56411						
ANR	56430	Symbol	* p_copy		56411						
ANR	56431	Symbol	p_copy		56411						
ANR	56432	Symbol	* OLD		56411						
ANR	56433	Function	pch_rename	2189:0:58506:58572							
ANR	56434	FunctionDef	pch_rename ()		56433	0					
ANR	56435	CompoundStatement		2190:0:58529:58572	56433	0					
ANR	56436	ReturnStatement	return p_rename [ OLD ] && p_rename [ NEW ] ;	2191:2:58533:58570	56433	0	True				
ANR	56437	AndExpression	p_rename [ OLD ] && p_rename [ NEW ]		56433	0		&&			
ANR	56438	ArrayIndexing	p_rename [ OLD ]		56433	0					
ANR	56439	Identifier	p_rename		56433	0					
ANR	56440	Identifier	OLD		56433	1					
ANR	56441	ArrayIndexing	p_rename [ NEW ]		56433	1					
ANR	56442	Identifier	p_rename		56433	0					
ANR	56443	Identifier	NEW		56433	1					
ANR	56444	ReturnType	bool		56433	1					
ANR	56445	Identifier	pch_rename		56433	2					
ANR	56446	ParameterList			56433	3					
ANR	56447	CFGEntryNode	ENTRY		56433		True				
ANR	56448	CFGExitNode	EXIT		56433		True				
ANR	56449	Symbol	NEW		56433						
ANR	56450	Symbol	p_rename		56433						
ANR	56451	Symbol	* NEW		56433						
ANR	56452	Symbol	OLD		56433						
ANR	56453	Symbol	* p_rename		56433						
ANR	56454	Symbol	* OLD		56433						
ANR	56455	Function	pch_first	2196:0:58653:58696							
ANR	56456	FunctionDef	pch_first ()		56455	0					
ANR	56457	CompoundStatement		2198:0:58674:58696	56455	0					
ANR	56458	ReturnStatement	return p_first ;	2199:4:58680:58694	56455	0	True				
ANR	56459	Identifier	p_first		56455	0					
ANR	56460	ReturnType	lin		56455	1					
ANR	56461	Identifier	pch_first		56455	2					
ANR	56462	ParameterList			56455	3					
ANR	56463	CFGEntryNode	ENTRY		56455		True				
ANR	56464	CFGExitNode	EXIT		56455		True				
ANR	56465	Symbol	p_first		56455						
ANR	56466	Function	pch_ptrn_lines	2204:0:58749:58802							
ANR	56467	FunctionDef	pch_ptrn_lines ()		56466	0					
ANR	56468	CompoundStatement		2206:0:58775:58802	56466	0					
ANR	56469	ReturnStatement	return p_ptrn_lines ;	2207:4:58781:58800	56466	0	True				
ANR	56470	Identifier	p_ptrn_lines		56466	0					
ANR	56471	ReturnType	lin		56466	1					
ANR	56472	Identifier	pch_ptrn_lines		56466	2					
ANR	56473	ParameterList			56466	3					
ANR	56474	CFGEntryNode	ENTRY		56466		True				
ANR	56475	CFGExitNode	EXIT		56466		True				
ANR	56476	Symbol	p_ptrn_lines		56466						
ANR	56477	Function	pch_newfirst	2212:0:58881:58930							
ANR	56478	FunctionDef	pch_newfirst ()		56477	0					
ANR	56479	CompoundStatement		2214:0:58905:58930	56477	0					
ANR	56480	ReturnStatement	return p_newfirst ;	2215:4:58911:58928	56477	0	True				
ANR	56481	Identifier	p_newfirst		56477	0					
ANR	56482	ReturnType	lin		56477	1					
ANR	56483	Identifier	pch_newfirst		56477	2					
ANR	56484	ParameterList			56477	3					
ANR	56485	CFGEntryNode	ENTRY		56477		True				
ANR	56486	CFGExitNode	EXIT		56477		True				
ANR	56487	Symbol	p_newfirst		56477						
ANR	56488	Function	pch_repl_lines	2220:0:59010:59063							
ANR	56489	FunctionDef	pch_repl_lines ()		56488	0					
ANR	56490	CompoundStatement		2222:0:59036:59063	56488	0					
ANR	56491	ReturnStatement	return p_repl_lines ;	2223:4:59042:59061	56488	0	True				
ANR	56492	Identifier	p_repl_lines		56488	0					
ANR	56493	ReturnType	lin		56488	1					
ANR	56494	Identifier	pch_repl_lines		56488	2					
ANR	56495	ParameterList			56488	3					
ANR	56496	CFGEntryNode	ENTRY		56488		True				
ANR	56497	CFGExitNode	EXIT		56488		True				
ANR	56498	Symbol	p_repl_lines		56488						
ANR	56499	Function	pch_end	2228:0:59119:59158							
ANR	56500	FunctionDef	pch_end ()		56499	0					
ANR	56501	CompoundStatement		2230:0:59138:59158	56499	0					
ANR	56502	ReturnStatement	return p_end ;	2231:4:59144:59156	56499	0	True				
ANR	56503	Identifier	p_end		56499	0					
ANR	56504	ReturnType	lin		56499	1					
ANR	56505	Identifier	pch_end		56499	2					
ANR	56506	ParameterList			56499	3					
ANR	56507	CFGEntryNode	ENTRY		56499		True				
ANR	56508	CFGExitNode	EXIT		56499		True				
ANR	56509	Symbol	p_end		56499						
ANR	56510	Function	pch_prefix_context	2236:0:59234:59295							
ANR	56511	FunctionDef	pch_prefix_context ()		56510	0					
ANR	56512	CompoundStatement		2238:0:59264:59295	56510	0					
ANR	56513	ReturnStatement	return p_prefix_context ;	2239:4:59270:59293	56510	0	True				
ANR	56514	Identifier	p_prefix_context		56510	0					
ANR	56515	ReturnType	lin		56510	1					
ANR	56516	Identifier	pch_prefix_context		56510	2					
ANR	56517	ParameterList			56510	3					
ANR	56518	CFGEntryNode	ENTRY		56510		True				
ANR	56519	CFGExitNode	EXIT		56510		True				
ANR	56520	Symbol	p_prefix_context		56510						
ANR	56521	Function	pch_suffix_context	2244:0:59369:59430							
ANR	56522	FunctionDef	pch_suffix_context ()		56521	0					
ANR	56523	CompoundStatement		2246:0:59399:59430	56521	0					
ANR	56524	ReturnStatement	return p_suffix_context ;	2247:4:59405:59428	56521	0	True				
ANR	56525	Identifier	p_suffix_context		56521	0					
ANR	56526	ReturnType	lin		56521	1					
ANR	56527	Identifier	pch_suffix_context		56521	2					
ANR	56528	ParameterList			56521	3					
ANR	56529	CFGEntryNode	ENTRY		56521		True				
ANR	56530	CFGExitNode	EXIT		56521		True				
ANR	56531	Symbol	p_suffix_context		56521						
ANR	56532	Function	pch_line_len	2252:0:59486:59543							
ANR	56533	FunctionDef	pch_line_len (lin line)		56532	0					
ANR	56534	CompoundStatement		2254:0:59517:59543	56532	0					
ANR	56535	ReturnStatement	return p_len [ line ] ;	2255:4:59523:59541	56532	0	True				
ANR	56536	ArrayIndexing	p_len [ line ]		56532	0					
ANR	56537	Identifier	p_len		56532	0					
ANR	56538	Identifier	line		56532	1					
ANR	56539	ReturnType	size_t		56532	1					
ANR	56540	Identifier	pch_line_len		56532	2					
ANR	56541	ParameterList	lin line		56532	3					
ANR	56542	Parameter	lin line	2253:14:59507:59514	56532	0	True				
ANR	56543	ParameterType	lin		56532	0					
ANR	56544	Identifier	line		56532	1					
ANR	56545	CFGEntryNode	ENTRY		56532		True				
ANR	56546	CFGExitNode	EXIT		56532		True				
ANR	56547	Symbol	p_len		56532						
ANR	56548	Symbol	line		56532						
ANR	56549	Symbol	* p_len		56532						
ANR	56550	Symbol	* line		56532						
ANR	56551	Function	pch_char	2262:0:59774:59826							
ANR	56552	FunctionDef	pch_char (lin line)		56551	0					
ANR	56553	CompoundStatement		2264:0:59799:59826	56551	0					
ANR	56554	ReturnStatement	return p_Char [ line ] ;	2265:4:59805:59824	56551	0	True				
ANR	56555	ArrayIndexing	p_Char [ line ]		56551	0					
ANR	56556	Identifier	p_Char		56551	0					
ANR	56557	Identifier	line		56551	1					
ANR	56558	ReturnType	char		56551	1					
ANR	56559	Identifier	pch_char		56551	2					
ANR	56560	ParameterList	lin line		56551	3					
ANR	56561	Parameter	lin line	2263:10:59789:59796	56551	0	True				
ANR	56562	ParameterType	lin		56551	0					
ANR	56563	Identifier	line		56551	1					
ANR	56564	CFGEntryNode	ENTRY		56551		True				
ANR	56565	CFGExitNode	EXIT		56551		True				
ANR	56566	Symbol	line		56551						
ANR	56567	Symbol	* p_Char		56551						
ANR	56568	Symbol	* line		56551						
ANR	56569	Symbol	p_Char		56551						
ANR	56570	Function	pfetch	2270:0:59881:59933							
ANR	56571	FunctionDef	pfetch (lin line)		56570	0					
ANR	56572	CompoundStatement		2272:0:59906:59933	56570	0					
ANR	56573	ReturnStatement	return p_line [ line ] ;	2273:4:59912:59931	56570	0	True				
ANR	56574	ArrayIndexing	p_line [ line ]		56570	0					
ANR	56575	Identifier	p_line		56570	0					
ANR	56576	Identifier	line		56570	1					
ANR	56577	ReturnType	char *		56570	1					
ANR	56578	Identifier	pfetch		56570	2					
ANR	56579	ParameterList	lin line		56570	3					
ANR	56580	Parameter	lin line	2271:8:59896:59903	56570	0	True				
ANR	56581	ParameterType	lin		56570	0					
ANR	56582	Identifier	line		56570	1					
ANR	56583	CFGEntryNode	ENTRY		56570		True				
ANR	56584	CFGExitNode	EXIT		56570		True				
ANR	56585	Symbol	line		56570						
ANR	56586	Symbol	* line		56570						
ANR	56587	Symbol	* p_line		56570						
ANR	56588	Symbol	p_line		56570						
ANR	56589	Function	pch_write_line	2278:0:59965:60213							
ANR	56590	FunctionDef	"pch_write_line (lin line , FILE * file)"		56589	0					
ANR	56591	CompoundStatement		2280:0:60008:60213	56589	0					
ANR	56592	IdentifierDeclStatement	bool after_newline = ( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' ) ;	2281:2:60012:60093	56589	0	True				
ANR	56593	IdentifierDecl	after_newline = ( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' )		56589	0					
ANR	56594	IdentifierDeclType	bool		56589	0					
ANR	56595	Identifier	after_newline		56589	1					
ANR	56596	AssignmentExpression	after_newline = ( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' )		56589	2		=			
ANR	56597	Identifier	after_newline		56589	0					
ANR	56598	AndExpression	( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' )		56589	1		&&			
ANR	56599	RelationalExpression	p_len [ line ] > 0		56589	0		>			
ANR	56600	ArrayIndexing	p_len [ line ]		56589	0					
ANR	56601	Identifier	p_len		56589	0					
ANR	56602	Identifier	line		56589	1					
ANR	56603	PrimaryExpression	0		56589	1					
ANR	56604	EqualityExpression	p_line [ line ] [ p_len [ line ] - 1 ] == '\\n'		56589	1		==			
ANR	56605	ArrayIndexing	p_line [ line ] [ p_len [ line ] - 1 ]		56589	0					
ANR	56606	ArrayIndexing	p_line [ line ]		56589	0					
ANR	56607	Identifier	p_line		56589	0					
ANR	56608	Identifier	line		56589	1					
ANR	56609	AdditiveExpression	p_len [ line ] - 1		56589	1		-			
ANR	56610	ArrayIndexing	p_len [ line ]		56589	0					
ANR	56611	Identifier	p_len		56589	0					
ANR	56612	Identifier	line		56589	1					
ANR	56613	PrimaryExpression	1		56589	1					
ANR	56614	PrimaryExpression	'\\n'		56589	1					
ANR	56615	IfStatement	"if ( ! fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file ) )"		56589	1					
ANR	56616	Condition	"! fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file )"	2282:6:60101:60166	56589	0	True				
ANR	56617	UnaryOperationExpression	"! fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file )"		56589	0					
ANR	56618	UnaryOperator	!		56589	0					
ANR	56619	CallExpression	"fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file )"		56589	1					
ANR	56620	Callee	fwrite		56589	0					
ANR	56621	Identifier	fwrite		56589	0					
ANR	56622	ArgumentList	p_line [ line ]		56589	1					
ANR	56623	Argument	p_line [ line ]		56589	0					
ANR	56624	ArrayIndexing	p_line [ line ]		56589	0					
ANR	56625	Identifier	p_line		56589	0					
ANR	56626	Identifier	line		56589	1					
ANR	56627	Argument	sizeof ( * p_line [ line ] )		56589	1					
ANR	56628	SizeofExpression	sizeof ( * p_line [ line ] )		56589	0					
ANR	56629	Sizeof	sizeof		56589	0					
ANR	56630	UnaryOperationExpression	* p_line [ line ]		56589	1					
ANR	56631	UnaryOperator	*		56589	0					
ANR	56632	ArrayIndexing	p_line [ line ]		56589	1					
ANR	56633	Identifier	p_line		56589	0					
ANR	56634	Identifier	line		56589	1					
ANR	56635	Argument	p_len [ line ]		56589	2					
ANR	56636	ArrayIndexing	p_len [ line ]		56589	0					
ANR	56637	Identifier	p_len		56589	0					
ANR	56638	Identifier	line		56589	1					
ANR	56639	Argument	file		56589	3					
ANR	56640	Identifier	file		56589	0					
ANR	56641	ExpressionStatement	write_fatal ( )	2283:4:60173:60187	56589	1	True				
ANR	56642	CallExpression	write_fatal ( )		56589	0					
ANR	56643	Callee	write_fatal		56589	0					
ANR	56644	Identifier	write_fatal		56589	0					
ANR	56645	ArgumentList			56589	1					
ANR	56646	ReturnStatement	return after_newline ;	2284:2:60191:60211	56589	2	True				
ANR	56647	Identifier	after_newline		56589	0					
ANR	56648	ReturnType	bool		56589	1					
ANR	56649	Identifier	pch_write_line		56589	2					
ANR	56650	ParameterList	"lin line , FILE * file"		56589	3					
ANR	56651	Parameter	lin line	2279:16:59986:59993	56589	0	True				
ANR	56652	ParameterType	lin		56589	0					
ANR	56653	Identifier	line		56589	1					
ANR	56654	Parameter	FILE * file	2279:26:59996:60005	56589	1	True				
ANR	56655	ParameterType	FILE *		56589	0					
ANR	56656	Identifier	file		56589	1					
ANR	56657	CFGEntryNode	ENTRY		56589		True				
ANR	56658	CFGExitNode	EXIT		56589		True				
ANR	56659	Symbol	line		56589						
ANR	56660	Symbol	after_newline		56589						
ANR	56661	Symbol	* p_len		56589						
ANR	56662	Symbol	fwrite		56589						
ANR	56663	Symbol	* line		56589						
ANR	56664	Symbol	* * p_len		56589						
ANR	56665	Symbol	p_line		56589						
ANR	56666	Symbol	* * p_line		56589						
ANR	56667	Symbol	p_len		56589						
ANR	56668	Symbol	* p_line [ line ]		56589						
ANR	56669	Symbol	file		56589						
ANR	56670	Symbol	* * line		56589						
ANR	56671	Symbol	* p_line		56589						
ANR	56672	Function	pch_hunk_beg	2289:0:60291:60340							
ANR	56673	FunctionDef	pch_hunk_beg ()		56672	0					
ANR	56674	CompoundStatement		2291:0:60315:60340	56672	0					
ANR	56675	ReturnStatement	return p_hunk_beg ;	2292:4:60321:60338	56672	0	True				
ANR	56676	Identifier	p_hunk_beg		56672	0					
ANR	56677	ReturnType	lin		56672	1					
ANR	56678	Identifier	pch_hunk_beg		56672	2					
ANR	56679	ParameterList			56672	3					
ANR	56680	CFGEntryNode	ENTRY		56672		True				
ANR	56681	CFGExitNode	EXIT		56672		True				
ANR	56682	Symbol	p_hunk_beg		56672						
ANR	56683	Function	pch_c_function	2295:0:60343:60405							
ANR	56684	FunctionDef	pch_c_function ()		56683	0					
ANR	56685	CompoundStatement		2297:0:60378:60405	56683	0					
ANR	56686	ReturnStatement	return p_c_function ;	2298:4:60384:60403	56683	0	True				
ANR	56687	Identifier	p_c_function		56683	0					
ANR	56688	ReturnType	char const *		56683	1					
ANR	56689	Identifier	pch_c_function		56683	2					
ANR	56690	ParameterList			56683	3					
ANR	56691	CFGEntryNode	ENTRY		56683		True				
ANR	56692	CFGExitNode	EXIT		56683		True				
ANR	56693	Symbol	p_c_function		56683						
ANR	56694	Function	pch_git_diff	2303:0:60452:60500							
ANR	56695	FunctionDef	pch_git_diff ()		56694	0					
ANR	56696	CompoundStatement		2305:0:60477:60500	56694	0					
ANR	56697	ReturnStatement	return p_git_diff ;	2306:2:60481:60498	56694	0	True				
ANR	56698	Identifier	p_git_diff		56694	0					
ANR	56699	ReturnType	bool		56694	1					
ANR	56700	Identifier	pch_git_diff		56694	2					
ANR	56701	ParameterList			56694	3					
ANR	56702	CFGEntryNode	ENTRY		56694		True				
ANR	56703	CFGExitNode	EXIT		56694		True				
ANR	56704	Symbol	p_git_diff		56694						
ANR	56705	Function	pch_timestr	2309:0:60503:60570							
ANR	56706	FunctionDef	pch_timestr (bool which)		56705	0					
ANR	56707	CompoundStatement		2311:0:60541:60570	56705	0					
ANR	56708	ReturnStatement	return p_timestr [ which ] ;	2312:2:60545:60568	56705	0	True				
ANR	56709	ArrayIndexing	p_timestr [ which ]		56705	0					
ANR	56710	Identifier	p_timestr		56705	0					
ANR	56711	Identifier	which		56705	1					
ANR	56712	ReturnType	char const *		56705	1					
ANR	56713	Identifier	pch_timestr		56705	2					
ANR	56714	ParameterList	bool which		56705	3					
ANR	56715	Parameter	bool which	2310:13:60529:60538	56705	0	True				
ANR	56716	ParameterType	bool		56705	0					
ANR	56717	Identifier	which		56705	1					
ANR	56718	CFGEntryNode	ENTRY		56705		True				
ANR	56719	CFGExitNode	EXIT		56705		True				
ANR	56720	Symbol	which		56705						
ANR	56721	Symbol	* which		56705						
ANR	56722	Symbol	p_timestr		56705						
ANR	56723	Symbol	* p_timestr		56705						
ANR	56724	Function	pch_sha1	2315:0:60573:60634							
ANR	56725	FunctionDef	pch_sha1 (bool which)		56724	0					
ANR	56726	CompoundStatement		2317:0:60608:60634	56724	0					
ANR	56727	ReturnStatement	return p_sha1 [ which ] ;	2318:2:60612:60632	56724	0	True				
ANR	56728	ArrayIndexing	p_sha1 [ which ]		56724	0					
ANR	56729	Identifier	p_sha1		56724	0					
ANR	56730	Identifier	which		56724	1					
ANR	56731	ReturnType	char const *		56724	1					
ANR	56732	Identifier	pch_sha1		56724	2					
ANR	56733	ParameterList	bool which		56724	3					
ANR	56734	Parameter	bool which	2316:10:60596:60605	56724	0	True				
ANR	56735	ParameterType	bool		56724	0					
ANR	56736	Identifier	which		56724	1					
ANR	56737	CFGEntryNode	ENTRY		56724		True				
ANR	56738	CFGExitNode	EXIT		56724		True				
ANR	56739	Symbol	which		56724						
ANR	56740	Symbol	* p_sha1		56724						
ANR	56741	Symbol	* which		56724						
ANR	56742	Symbol	p_sha1		56724						
ANR	56743	Function	pch_mode	2321:0:60637:60692							
ANR	56744	FunctionDef	pch_mode (bool which)		56743	0					
ANR	56745	CompoundStatement		2323:0:60666:60692	56743	0					
ANR	56746	ReturnStatement	return p_mode [ which ] ;	2324:2:60670:60690	56743	0	True				
ANR	56747	ArrayIndexing	p_mode [ which ]		56743	0					
ANR	56748	Identifier	p_mode		56743	0					
ANR	56749	Identifier	which		56743	1					
ANR	56750	ReturnType	mode_t		56743	1					
ANR	56751	Identifier	pch_mode		56743	2					
ANR	56752	ParameterList	bool which		56743	3					
ANR	56753	Parameter	bool which	2322:10:60654:60663	56743	0	True				
ANR	56754	ParameterType	bool		56743	0					
ANR	56755	Identifier	which		56743	1					
ANR	56756	CFGEntryNode	ENTRY		56743		True				
ANR	56757	CFGExitNode	EXIT		56743		True				
ANR	56758	Symbol	which		56743						
ANR	56759	Symbol	* which		56743						
ANR	56760	Symbol	* p_mode		56743						
ANR	56761	Symbol	p_mode		56743						
ANR	56762	Function	get_ed_command_letter	2332:0:60921:61644							
ANR	56763	FunctionDef	get_ed_command_letter (char const * line)		56762	0					
ANR	56764	CompoundStatement		2334:0:60993:61644	56762	0					
ANR	56765	IdentifierDeclStatement	char const * p = line ;	2335:2:60997:61017	56762	0	True				
ANR	56766	IdentifierDecl	* p = line		56762	0					
ANR	56767	IdentifierDeclType	char const *		56762	0					
ANR	56768	Identifier	p		56762	1					
ANR	56769	AssignmentExpression	* p = line		56762	2		=			
ANR	56770	Identifier	line		56762	0					
ANR	56771	Identifier	line		56762	1					
ANR	56772	IdentifierDeclStatement	char letter ;	2336:2:61021:61032	56762	1	True				
ANR	56773	IdentifierDecl	letter		56762	0					
ANR	56774	IdentifierDeclType	char		56762	0					
ANR	56775	Identifier	letter		56762	1					
ANR	56776	IdentifierDeclStatement	bool pair = false ;	2337:2:61036:61053	56762	2	True				
ANR	56777	IdentifierDecl	pair = false		56762	0					
ANR	56778	IdentifierDeclType	bool		56762	0					
ANR	56779	Identifier	pair		56762	1					
ANR	56780	AssignmentExpression	pair = false		56762	2		=			
ANR	56781	Identifier	false		56762	0					
ANR	56782	Identifier	false		56762	1					
ANR	56783	IfStatement	if ( ISDIGIT ( * p ) )		56762	3					
ANR	56784	Condition	ISDIGIT ( * p )	2339:6:61062:61073	56762	0	True				
ANR	56785	CallExpression	ISDIGIT ( * p )		56762	0					
ANR	56786	Callee	ISDIGIT		56762	0					
ANR	56787	Identifier	ISDIGIT		56762	0					
ANR	56788	ArgumentList	* p		56762	1					
ANR	56789	Argument	* p		56762	0					
ANR	56790	UnaryOperationExpression	* p		56762	0					
ANR	56791	UnaryOperator	*		56762	0					
ANR	56792	Identifier	p		56762	1					
ANR	56793	CompoundStatement		7:4:86:86	56762	1					
ANR	56794	WhileStatement	while ( ISDIGIT ( * ++ p ) )		56762	0					
ANR	56795	Condition	ISDIGIT ( * ++ p )	2341:13:61095:61108	56762	0	True				
ANR	56796	CallExpression	ISDIGIT ( * ++ p )		56762	0					
ANR	56797	Callee	ISDIGIT		56762	0					
ANR	56798	Identifier	ISDIGIT		56762	0					
ANR	56799	ArgumentList	* ++ p		56762	1					
ANR	56800	Argument	* ++ p		56762	0					
ANR	56801	UnaryOperationExpression	* ++ p		56762	0					
ANR	56802	UnaryOperator	*		56762	0					
ANR	56803	UnaryExpression	++ p		56762	1					
ANR	56804	IncDec	++		56762	0					
ANR	56805	Identifier	p		56762	1					
ANR	56806	ExpressionStatement		2342:18:61129:61129	56762	1	True				
ANR	56807	IfStatement	"if ( * p == ',' )"		56762	1					
ANR	56808	Condition	"* p == ','"	2343:10:61141:61149	56762	0	True				
ANR	56809	EqualityExpression	"* p == ','"		56762	0		==			
ANR	56810	UnaryOperationExpression	* p		56762	0					
ANR	56811	UnaryOperator	*		56762	0					
ANR	56812	Identifier	p		56762	1					
ANR	56813	PrimaryExpression	"','"		56762	1					
ANR	56814	CompoundStatement		11:1:159:159	56762	1					
ANR	56815	IfStatement	if ( ! ISDIGIT ( * ++ p ) )		56762	0					
ANR	56816	Condition	! ISDIGIT ( * ++ p )	2345:7:61162:61177	56762	0	True				
ANR	56817	UnaryOperationExpression	! ISDIGIT ( * ++ p )		56762	0					
ANR	56818	UnaryOperator	!		56762	0					
ANR	56819	CallExpression	ISDIGIT ( * ++ p )		56762	1					
ANR	56820	Callee	ISDIGIT		56762	0					
ANR	56821	Identifier	ISDIGIT		56762	0					
ANR	56822	ArgumentList	* ++ p		56762	1					
ANR	56823	Argument	* ++ p		56762	0					
ANR	56824	UnaryOperationExpression	* ++ p		56762	0					
ANR	56825	UnaryOperator	*		56762	0					
ANR	56826	UnaryExpression	++ p		56762	1					
ANR	56827	IncDec	++		56762	0					
ANR	56828	Identifier	p		56762	1					
ANR	56829	ReturnStatement	return 0 ;	2346:5:61185:61193	56762	1	True				
ANR	56830	PrimaryExpression	0		56762	0					
ANR	56831	WhileStatement	while ( ISDIGIT ( * ++ p ) )		56762	1					
ANR	56832	Condition	ISDIGIT ( * ++ p )	2347:10:61205:61218	56762	0	True				
ANR	56833	CallExpression	ISDIGIT ( * ++ p )		56762	0					
ANR	56834	Callee	ISDIGIT		56762	0					
ANR	56835	Identifier	ISDIGIT		56762	0					
ANR	56836	ArgumentList	* ++ p		56762	1					
ANR	56837	Argument	* ++ p		56762	0					
ANR	56838	UnaryOperationExpression	* ++ p		56762	0					
ANR	56839	UnaryOperator	*		56762	0					
ANR	56840	UnaryExpression	++ p		56762	1					
ANR	56841	IncDec	++		56762	0					
ANR	56842	Identifier	p		56762	1					
ANR	56843	ExpressionStatement		2348:22:61243:61243	56762	1	True				
ANR	56844	ExpressionStatement	pair = true	2349:3:61248:61259	56762	2	True				
ANR	56845	AssignmentExpression	pair = true		56762	0		=			
ANR	56846	Identifier	pair		56762	0					
ANR	56847	Identifier	true		56762	1					
ANR	56848	ExpressionStatement	letter = * p ++	2353:2:61273:61286	56762	4	True				
ANR	56849	AssignmentExpression	letter = * p ++		56762	0		=			
ANR	56850	Identifier	letter		56762	0					
ANR	56851	UnaryOperationExpression	* p ++		56762	1					
ANR	56852	UnaryOperator	*		56762	0					
ANR	56853	PostIncDecOperationExpression	p ++		56762	1					
ANR	56854	Identifier	p		56762	0					
ANR	56855	IncDec	++		56762	1					
ANR	56856	SwitchStatement	switch ( letter )		56762	5					
ANR	56857	Condition	letter	2355:10:61299:61304	56762	0	True				
ANR	56858	Identifier	letter		56762	0					
ANR	56859	CompoundStatement		23:4:317:317	56762	1					
ANR	56860	Label	case 'a' :	2357:4:61317:61325	56762	0	True				
ANR	56861	Label	case 'i' :	2358:4:61331:61339	56762	1	True				
ANR	56862	IfStatement	if ( pair )		56762	2					
ANR	56863	Condition	pair	2359:10:61351:61354	56762	0	True				
ANR	56864	Identifier	pair		56762	0					
ANR	56865	ReturnStatement	return 0 ;	2360:1:61358:61366	56762	1	True				
ANR	56866	PrimaryExpression	0		56762	0					
ANR	56867	BreakStatement	break ;	2361:6:61374:61379	56762	3	True				
ANR	56868	Label	case 'c' :	2363:4:61386:61394	56762	4	True				
ANR	56869	Label	case 'd' :	2364:4:61400:61408	56762	5	True				
ANR	56870	BreakStatement	break ;	2365:6:61416:61421	56762	6	True				
ANR	56871	Label	case 's' :	2367:4:61428:61436	56762	7	True				
ANR	56872	IfStatement	"if ( strncmp ( p , ""/.//"" , 4 ) != 0 )"		56762	8					
ANR	56873	Condition	"strncmp ( p , ""/.//"" , 4 ) != 0"	2368:10:61448:61474	56762	0	True				
ANR	56874	EqualityExpression	"strncmp ( p , ""/.//"" , 4 ) != 0"		56762	0		!=			
ANR	56875	CallExpression	"strncmp ( p , ""/.//"" , 4 )"		56762	0					
ANR	56876	Callee	strncmp		56762	0					
ANR	56877	Identifier	strncmp		56762	0					
ANR	56878	ArgumentList	p		56762	1					
ANR	56879	Argument	p		56762	0					
ANR	56880	Identifier	p		56762	0					
ANR	56881	Argument	"""/.//"""		56762	1					
ANR	56882	PrimaryExpression	"""/.//"""		56762	0					
ANR	56883	Argument	4		56762	2					
ANR	56884	PrimaryExpression	4		56762	0					
ANR	56885	PrimaryExpression	0		56762	1					
ANR	56886	ReturnStatement	return 0 ;	2369:1:61478:61486	56762	1	True				
ANR	56887	PrimaryExpression	0		56762	0					
ANR	56888	ExpressionStatement	p += 4	2370:6:61494:61500	56762	9	True				
ANR	56889	AssignmentExpression	p += 4		56762	0		+=			
ANR	56890	Identifier	p		56762	0					
ANR	56891	PrimaryExpression	4		56762	1					
ANR	56892	BreakStatement	break ;	2371:6:61508:61513	56762	10	True				
ANR	56893	Label	default :	2373:4:61520:61527	56762	11	True				
ANR	56894	Identifier	default		56762	0					
ANR	56895	ReturnStatement	return 0 ;	2374:6:61535:61543	56762	12	True				
ANR	56896	PrimaryExpression	0		56762	0					
ANR	56897	WhileStatement	while ( * p == ' ' || * p == '\\t' )		56762	6					
ANR	56898	Condition	* p == ' ' || * p == '\\t'	2377:9:61561:61583	56762	0	True				
ANR	56899	OrExpression	* p == ' ' || * p == '\\t'		56762	0		||			
ANR	56900	EqualityExpression	* p == ' '		56762	0		==			
ANR	56901	UnaryOperationExpression	* p		56762	0					
ANR	56902	UnaryOperator	*		56762	0					
ANR	56903	Identifier	p		56762	1					
ANR	56904	PrimaryExpression	' '		56762	1					
ANR	56905	EqualityExpression	* p == '\\t'		56762	1		==			
ANR	56906	UnaryOperationExpression	* p		56762	0					
ANR	56907	UnaryOperator	*		56762	0					
ANR	56908	Identifier	p		56762	1					
ANR	56909	PrimaryExpression	'\\t'		56762	1					
ANR	56910	ExpressionStatement	p ++	2378:4:61590:61593	56762	1	True				
ANR	56911	PostIncDecOperationExpression	p ++		56762	0					
ANR	56912	Identifier	p		56762	0					
ANR	56913	IncDec	++		56762	1					
ANR	56914	IfStatement	if ( * p == '\\n' )		56762	7					
ANR	56915	Condition	* p == '\\n'	2379:6:61601:61610	56762	0	True				
ANR	56916	EqualityExpression	* p == '\\n'		56762	0		==			
ANR	56917	UnaryOperationExpression	* p		56762	0					
ANR	56918	UnaryOperator	*		56762	0					
ANR	56919	Identifier	p		56762	1					
ANR	56920	PrimaryExpression	'\\n'		56762	1					
ANR	56921	ReturnStatement	return letter ;	2380:4:61617:61630	56762	1	True				
ANR	56922	Identifier	letter		56762	0					
ANR	56923	ReturnStatement	return 0 ;	2381:2:61634:61642	56762	8	True				
ANR	56924	PrimaryExpression	0		56762	0					
ANR	56925	ReturnType	static char _GL_ATTRIBUTE_PURE		56762	1					
ANR	56926	Identifier	get_ed_command_letter		56762	2					
ANR	56927	ParameterList	char const * line		56762	3					
ANR	56928	Parameter	char const * line	2333:23:60975:60990	56762	0	True				
ANR	56929	ParameterType	char const *		56762	0					
ANR	56930	Identifier	line		56762	1					
ANR	56931	CFGEntryNode	ENTRY		56762		True				
ANR	56932	CFGExitNode	EXIT		56762		True				
ANR	56933	Symbol	p		56762						
ANR	56934	Symbol	strncmp		56762						
ANR	56935	Symbol	* ++ p		56762						
ANR	56936	Symbol	line		56762						
ANR	56937	Symbol	letter		56762						
ANR	56938	Symbol	* p ++		56762						
ANR	56939	Symbol	false		56762						
ANR	56940	Symbol	true		56762						
ANR	56941	Symbol	* p		56762						
ANR	56942	Symbol	ISDIGIT		56762						
ANR	56943	Symbol	pair		56762						
ANR	56944	Function	do_ed_script	2386:0:61695:64822							
ANR	56945	FunctionDef	"do_ed_script (char const * inname , char const * outname , bool * outname_needs_removal , FILE * ofp)"		56944	0					
ANR	56946	CompoundStatement		2389:0:61802:64822	56944	0					
ANR	56947	Statement	static	2390:4:61808:61813	56944	0	True				
ANR	56948	IdentifierDeclStatement	char const editor_program [ ] = EDITOR_PROGRAM ;	2390:11:61815:61859	56944	1	True				
ANR	56949	IdentifierDecl	editor_program [ ] = EDITOR_PROGRAM		56944	0					
ANR	56950	IdentifierDeclType	char const [ ]		56944	0					
ANR	56951	Identifier	editor_program		56944	1					
ANR	56952	AssignmentExpression	editor_program [ ] = EDITOR_PROGRAM		56944	2		=			
ANR	56953	Identifier	EDITOR_PROGRAM		56944	0					
ANR	56954	Identifier	EDITOR_PROGRAM		56944	1					
ANR	56955	IdentifierDeclStatement	file_offset beginning_of_this_line ;	2392:4:61866:61900	56944	2	True				
ANR	56956	IdentifierDecl	beginning_of_this_line		56944	0					
ANR	56957	IdentifierDeclType	file_offset		56944	0					
ANR	56958	Identifier	beginning_of_this_line		56944	1					
ANR	56959	IdentifierDeclStatement	size_t chars_read ;	2393:4:61906:61923	56944	3	True				
ANR	56960	IdentifierDecl	chars_read		56944	0					
ANR	56961	IdentifierDeclType	size_t		56944	0					
ANR	56962	Identifier	chars_read		56944	1					
ANR	56963	IdentifierDeclStatement	FILE * tmpfp = 0 ;	2394:4:61929:61944	56944	4	True				
ANR	56964	IdentifierDecl	* tmpfp = 0		56944	0					
ANR	56965	IdentifierDeclType	FILE *		56944	0					
ANR	56966	Identifier	tmpfp		56944	1					
ANR	56967	AssignmentExpression	* tmpfp = 0		56944	2		=			
ANR	56968	Identifier	tmpfp		56944	0					
ANR	56969	PrimaryExpression	0		56944	1					
ANR	56970	IdentifierDeclStatement	char const * tmpname ;	2395:4:61950:61969	56944	5	True				
ANR	56971	IdentifierDecl	* tmpname		56944	0					
ANR	56972	IdentifierDeclType	char const *		56944	0					
ANR	56973	Identifier	tmpname		56944	1					
ANR	56974	IdentifierDeclStatement	int tmpfd ;	2396:4:61975:61984	56944	6	True				
ANR	56975	IdentifierDecl	tmpfd		56944	0					
ANR	56976	IdentifierDeclType	int		56944	0					
ANR	56977	Identifier	tmpfd		56944	1					
ANR	56978	IdentifierDeclStatement	pid_t pid ;	2397:4:61990:61999	56944	7	True				
ANR	56979	IdentifierDecl	pid		56944	0					
ANR	56980	IdentifierDeclType	pid_t		56944	0					
ANR	56981	Identifier	pid		56944	1					
ANR	56982	IfStatement	if ( ! dry_run && ! skip_rest_of_patch )		56944	8					
ANR	56983	Condition	! dry_run && ! skip_rest_of_patch	2399:8:62010:62042	56944	0	True				
ANR	56984	AndExpression	! dry_run && ! skip_rest_of_patch		56944	0		&&			
ANR	56985	UnaryOperationExpression	! dry_run		56944	0					
ANR	56986	UnaryOperator	!		56944	0					
ANR	56987	Identifier	dry_run		56944	1					
ANR	56988	UnaryOperationExpression	! skip_rest_of_patch		56944	1					
ANR	56989	UnaryOperator	!		56944	0					
ANR	56990	Identifier	skip_rest_of_patch		56944	1					
ANR	56991	CompoundStatement		12:6:248:248	56944	1					
ANR	56992	ExpressionStatement	"tmpfd = make_tempfile ( & tmpname , 'e' , NULL , O_RDWR | O_BINARY , 0 )"	2407:1:62381:62446	56944	0	True				
ANR	56993	AssignmentExpression	"tmpfd = make_tempfile ( & tmpname , 'e' , NULL , O_RDWR | O_BINARY , 0 )"		56944	0		=			
ANR	56994	Identifier	tmpfd		56944	0					
ANR	56995	CallExpression	"make_tempfile ( & tmpname , 'e' , NULL , O_RDWR | O_BINARY , 0 )"		56944	1					
ANR	56996	Callee	make_tempfile		56944	0					
ANR	56997	Identifier	make_tempfile		56944	0					
ANR	56998	ArgumentList	& tmpname		56944	1					
ANR	56999	Argument	& tmpname		56944	0					
ANR	57000	UnaryOperationExpression	& tmpname		56944	0					
ANR	57001	UnaryOperator	&		56944	0					
ANR	57002	Identifier	tmpname		56944	1					
ANR	57003	Argument	'e'		56944	1					
ANR	57004	PrimaryExpression	'e'		56944	0					
ANR	57005	Argument	NULL		56944	2					
ANR	57006	Identifier	NULL		56944	0					
ANR	57007	Argument	O_RDWR | O_BINARY		56944	3					
ANR	57008	InclusiveOrExpression	O_RDWR | O_BINARY		56944	0		|			
ANR	57009	Identifier	O_RDWR		56944	0					
ANR	57010	Identifier	O_BINARY		56944	1					
ANR	57011	Argument	0		56944	4					
ANR	57012	PrimaryExpression	0		56944	0					
ANR	57013	IfStatement	if ( tmpfd == - 1 )		56944	1					
ANR	57014	Condition	tmpfd == - 1	2408:5:62453:62463	56944	0	True				
ANR	57015	EqualityExpression	tmpfd == - 1		56944	0		==			
ANR	57016	Identifier	tmpfd		56944	0					
ANR	57017	UnaryOperationExpression	- 1		56944	1					
ANR	57018	UnaryOperator	-		56944	0					
ANR	57019	PrimaryExpression	1		56944	1					
ANR	57020	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , quotearg ( tmpname ) )"	2409:3:62469:62530	56944	1	True				
ANR	57021	CallExpression	"pfatal ( ""Can't create temporary file %s"" , quotearg ( tmpname ) )"		56944	0					
ANR	57022	Callee	pfatal		56944	0					
ANR	57023	Identifier	pfatal		56944	0					
ANR	57024	ArgumentList	"""Can't create temporary file %s"""		56944	1					
ANR	57025	Argument	"""Can't create temporary file %s"""		56944	0					
ANR	57026	PrimaryExpression	"""Can't create temporary file %s"""		56944	0					
ANR	57027	Argument	quotearg ( tmpname )		56944	1					
ANR	57028	CallExpression	quotearg ( tmpname )		56944	0					
ANR	57029	Callee	quotearg		56944	0					
ANR	57030	Identifier	quotearg		56944	0					
ANR	57031	ArgumentList	tmpname		56944	1					
ANR	57032	Argument	tmpname		56944	0					
ANR	57033	Identifier	tmpname		56944	0					
ANR	57034	ExpressionStatement	"tmpfp = fdopen ( tmpfd , ""w+b"" )"	2410:1:62533:62562	56944	2	True				
ANR	57035	AssignmentExpression	"tmpfp = fdopen ( tmpfd , ""w+b"" )"		56944	0		=			
ANR	57036	Identifier	tmpfp		56944	0					
ANR	57037	CallExpression	"fdopen ( tmpfd , ""w+b"" )"		56944	1					
ANR	57038	Callee	fdopen		56944	0					
ANR	57039	Identifier	fdopen		56944	0					
ANR	57040	ArgumentList	tmpfd		56944	1					
ANR	57041	Argument	tmpfd		56944	0					
ANR	57042	Identifier	tmpfd		56944	0					
ANR	57043	Argument	"""w+b"""		56944	1					
ANR	57044	PrimaryExpression	"""w+b"""		56944	0					
ANR	57045	IfStatement	if ( ! tmpfp )		56944	3					
ANR	57046	Condition	! tmpfp	2411:5:62569:62575	56944	0	True				
ANR	57047	UnaryOperationExpression	! tmpfp		56944	0					
ANR	57048	UnaryOperator	!		56944	0					
ANR	57049	Identifier	tmpfp		56944	1					
ANR	57050	ExpressionStatement	"pfatal ( ""Can't open stream for file %s"" , quotearg ( tmpname ) )"	2412:3:62581:62641	56944	1	True				
ANR	57051	CallExpression	"pfatal ( ""Can't open stream for file %s"" , quotearg ( tmpname ) )"		56944	0					
ANR	57052	Callee	pfatal		56944	0					
ANR	57053	Identifier	pfatal		56944	0					
ANR	57054	ArgumentList	"""Can't open stream for file %s"""		56944	1					
ANR	57055	Argument	"""Can't open stream for file %s"""		56944	0					
ANR	57056	PrimaryExpression	"""Can't open stream for file %s"""		56944	0					
ANR	57057	Argument	quotearg ( tmpname )		56944	1					
ANR	57058	CallExpression	quotearg ( tmpname )		56944	0					
ANR	57059	Callee	quotearg		56944	0					
ANR	57060	Identifier	quotearg		56944	0					
ANR	57061	ArgumentList	tmpname		56944	1					
ANR	57062	Argument	tmpname		56944	0					
ANR	57063	Identifier	tmpname		56944	0					
ANR	57064	ForStatement	for ( ; ; )		56944	9					
ANR	57065	CompoundStatement		28:1:865:887	56944	0					
ANR	57066	IdentifierDeclStatement	char ed_command_letter ;	2416:1:62668:62690	56944	0	True				
ANR	57067	IdentifierDecl	ed_command_letter		56944	0					
ANR	57068	IdentifierDeclType	char		56944	0					
ANR	57069	Identifier	ed_command_letter		56944	1					
ANR	57070	ExpressionStatement	beginning_of_this_line = file_tell ( pfp )	2417:1:62693:62733	56944	1	True				
ANR	57071	AssignmentExpression	beginning_of_this_line = file_tell ( pfp )		56944	0		=			
ANR	57072	Identifier	beginning_of_this_line		56944	0					
ANR	57073	CallExpression	file_tell ( pfp )		56944	1					
ANR	57074	Callee	file_tell		56944	0					
ANR	57075	Identifier	file_tell		56944	0					
ANR	57076	ArgumentList	pfp		56944	1					
ANR	57077	Argument	pfp		56944	0					
ANR	57078	Identifier	pfp		56944	0					
ANR	57079	ExpressionStatement	chars_read = get_line ( )	2418:1:62736:62760	56944	2	True				
ANR	57080	AssignmentExpression	chars_read = get_line ( )		56944	0		=			
ANR	57081	Identifier	chars_read		56944	0					
ANR	57082	CallExpression	get_line ( )		56944	1					
ANR	57083	Callee	get_line		56944	0					
ANR	57084	Identifier	get_line		56944	0					
ANR	57085	ArgumentList			56944	1					
ANR	57086	IfStatement	if ( ! chars_read )		56944	3					
ANR	57087	Condition	! chars_read	2419:5:62767:62778	56944	0	True				
ANR	57088	UnaryOperationExpression	! chars_read		56944	0					
ANR	57089	UnaryOperator	!		56944	0					
ANR	57090	Identifier	chars_read		56944	1					
ANR	57091	CompoundStatement		31:19:978:978	56944	1					
ANR	57092	ExpressionStatement	"next_intuit_at ( beginning_of_this_line , p_input_line )"	2420:5:62788:62839	56944	0	True				
ANR	57093	CallExpression	"next_intuit_at ( beginning_of_this_line , p_input_line )"		56944	0					
ANR	57094	Callee	next_intuit_at		56944	0					
ANR	57095	Identifier	next_intuit_at		56944	0					
ANR	57096	ArgumentList	beginning_of_this_line		56944	1					
ANR	57097	Argument	beginning_of_this_line		56944	0					
ANR	57098	Identifier	beginning_of_this_line		56944	0					
ANR	57099	Argument	p_input_line		56944	1					
ANR	57100	Identifier	p_input_line		56944	0					
ANR	57101	BreakStatement	break ;	2421:5:62846:62851	56944	1	True				
ANR	57102	ExpressionStatement	ed_command_letter = get_ed_command_letter ( buf )	2423:1:62857:62904	56944	4	True				
ANR	57103	AssignmentExpression	ed_command_letter = get_ed_command_letter ( buf )		56944	0		=			
ANR	57104	Identifier	ed_command_letter		56944	0					
ANR	57105	CallExpression	get_ed_command_letter ( buf )		56944	1					
ANR	57106	Callee	get_ed_command_letter		56944	0					
ANR	57107	Identifier	get_ed_command_letter		56944	0					
ANR	57108	ArgumentList	buf		56944	1					
ANR	57109	Argument	buf		56944	0					
ANR	57110	Identifier	buf		56944	0					
ANR	57111	IfStatement	if ( ed_command_letter )		56944	5					
ANR	57112	Condition	ed_command_letter	2424:5:62911:62927	56944	0	True				
ANR	57113	Identifier	ed_command_letter		56944	0					
ANR	57114	CompoundStatement		36:24:1127:1127	56944	1					
ANR	57115	IfStatement	if ( tmpfp )		56944	0					
ANR	57116	Condition	tmpfp	2425:9:62941:62945	56944	0	True				
ANR	57117	Identifier	tmpfp		56944	0					
ANR	57118	IfStatement	"if ( ! fwrite ( buf , sizeof * buf , chars_read , tmpfp ) )"		56944	1					
ANR	57119	Condition	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"	2426:6:62954:62999	56944	0	True				
ANR	57120	UnaryOperationExpression	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		56944	0					
ANR	57121	UnaryOperator	!		56944	0					
ANR	57122	CallExpression	"fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		56944	1					
ANR	57123	Callee	fwrite		56944	0					
ANR	57124	Identifier	fwrite		56944	0					
ANR	57125	ArgumentList	buf		56944	1					
ANR	57126	Argument	buf		56944	0					
ANR	57127	Identifier	buf		56944	0					
ANR	57128	Argument	sizeof * buf		56944	1					
ANR	57129	SizeofExpression	sizeof * buf		56944	0					
ANR	57130	Sizeof	sizeof		56944	0					
ANR	57131	UnaryOperationExpression	* buf		56944	1					
ANR	57132	UnaryOperator	*		56944	0					
ANR	57133	Identifier	buf		56944	1					
ANR	57134	Argument	chars_read		56944	2					
ANR	57135	Identifier	chars_read		56944	0					
ANR	57136	Argument	tmpfp		56944	3					
ANR	57137	Identifier	tmpfp		56944	0					
ANR	57138	ExpressionStatement	write_fatal ( )	2427:6:63008:63022	56944	1	True				
ANR	57139	CallExpression	write_fatal ( )		56944	0					
ANR	57140	Callee	write_fatal		56944	0					
ANR	57141	Identifier	write_fatal		56944	0					
ANR	57142	ArgumentList			56944	1					
ANR	57143	IfStatement	if ( ed_command_letter != 'd' && ed_command_letter != 's' )		56944	1					
ANR	57144	Condition	ed_command_letter != 'd' && ed_command_letter != 's'	2428:9:63033:63084	56944	0	True				
ANR	57145	AndExpression	ed_command_letter != 'd' && ed_command_letter != 's'		56944	0		&&			
ANR	57146	EqualityExpression	ed_command_letter != 'd'		56944	0		!=			
ANR	57147	Identifier	ed_command_letter		56944	0					
ANR	57148	PrimaryExpression	'd'		56944	1					
ANR	57149	EqualityExpression	ed_command_letter != 's'		56944	1		!=			
ANR	57150	Identifier	ed_command_letter		56944	0					
ANR	57151	PrimaryExpression	's'		56944	1					
ANR	57152	CompoundStatement		40:63:1284:1284	56944	1					
ANR	57153	ExpressionStatement	p_pass_comments_through = true	2429:9:63098:63128	56944	0	True				
ANR	57154	AssignmentExpression	p_pass_comments_through = true		56944	0		=			
ANR	57155	Identifier	p_pass_comments_through		56944	0					
ANR	57156	Identifier	true		56944	1					
ANR	57157	WhileStatement	while ( ( chars_read = get_line ( ) ) != 0 )		56944	1					
ANR	57158	Condition	( chars_read = get_line ( ) ) != 0	2430:9:63139:63169	56944	0	True				
ANR	57159	EqualityExpression	( chars_read = get_line ( ) ) != 0		56944	0		!=			
ANR	57160	AssignmentExpression	chars_read = get_line ( )		56944	0		=			
ANR	57161	Identifier	chars_read		56944	0					
ANR	57162	CallExpression	get_line ( )		56944	1					
ANR	57163	Callee	get_line		56944	0					
ANR	57164	Identifier	get_line		56944	0					
ANR	57165	ArgumentList			56944	1					
ANR	57166	PrimaryExpression	0		56944	1					
ANR	57167	CompoundStatement		42:42:1369:1369	56944	1					
ANR	57168	IfStatement	if ( tmpfp )		56944	0					
ANR	57169	Condition	tmpfp	2431:10:63184:63188	56944	0	True				
ANR	57170	Identifier	tmpfp		56944	0					
ANR	57171	IfStatement	"if ( ! fwrite ( buf , sizeof * buf , chars_read , tmpfp ) )"		56944	1					
ANR	57172	Condition	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"	2432:7:63198:63243	56944	0	True				
ANR	57173	UnaryOperationExpression	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		56944	0					
ANR	57174	UnaryOperator	!		56944	0					
ANR	57175	CallExpression	"fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		56944	1					
ANR	57176	Callee	fwrite		56944	0					
ANR	57177	Identifier	fwrite		56944	0					
ANR	57178	ArgumentList	buf		56944	1					
ANR	57179	Argument	buf		56944	0					
ANR	57180	Identifier	buf		56944	0					
ANR	57181	Argument	sizeof * buf		56944	1					
ANR	57182	SizeofExpression	sizeof * buf		56944	0					
ANR	57183	Sizeof	sizeof		56944	0					
ANR	57184	UnaryOperationExpression	* buf		56944	1					
ANR	57185	UnaryOperator	*		56944	0					
ANR	57186	Identifier	buf		56944	1					
ANR	57187	Argument	chars_read		56944	2					
ANR	57188	Identifier	chars_read		56944	0					
ANR	57189	Argument	tmpfp		56944	3					
ANR	57190	Identifier	tmpfp		56944	0					
ANR	57191	ExpressionStatement	write_fatal ( )	2433:7:63253:63267	56944	1	True				
ANR	57192	CallExpression	write_fatal ( )		56944	0					
ANR	57193	Callee	write_fatal		56944	0					
ANR	57194	Identifier	write_fatal		56944	0					
ANR	57195	ArgumentList			56944	1					
ANR	57196	IfStatement	"if ( chars_read == 2 && strEQ ( buf , "".\\n"" ) )"		56944	1					
ANR	57197	Condition	"chars_read == 2 && strEQ ( buf , "".\\n"" )"	2434:10:63279:63317	56944	0	True				
ANR	57198	AndExpression	"chars_read == 2 && strEQ ( buf , "".\\n"" )"		56944	0		&&			
ANR	57199	EqualityExpression	chars_read == 2		56944	0		==			
ANR	57200	Identifier	chars_read		56944	0					
ANR	57201	PrimaryExpression	2		56944	1					
ANR	57202	CallExpression	"strEQ ( buf , "".\\n"" )"		56944	1					
ANR	57203	Callee	strEQ		56944	0					
ANR	57204	Identifier	strEQ		56944	0					
ANR	57205	ArgumentList	buf		56944	1					
ANR	57206	Argument	buf		56944	0					
ANR	57207	Identifier	buf		56944	0					
ANR	57208	Argument	""".\\n"""		56944	1					
ANR	57209	PrimaryExpression	""".\\n"""		56944	0					
ANR	57210	BreakStatement	break ;	2435:3:63323:63328	56944	1	True				
ANR	57211	ExpressionStatement	p_pass_comments_through = false	2437:2:63336:63367	56944	2	True				
ANR	57212	AssignmentExpression	p_pass_comments_through = false		56944	0		=			
ANR	57213	Identifier	p_pass_comments_through		56944	0					
ANR	57214	Identifier	false		56944	1					
ANR	57215	ElseStatement	else		56944	0					
ANR	57216	CompoundStatement		52:6:1582:1582	56944	0					
ANR	57217	ExpressionStatement	"next_intuit_at ( beginning_of_this_line , p_input_line )"	2441:5:63392:63443	56944	0	True				
ANR	57218	CallExpression	"next_intuit_at ( beginning_of_this_line , p_input_line )"		56944	0					
ANR	57219	Callee	next_intuit_at		56944	0					
ANR	57220	Identifier	next_intuit_at		56944	0					
ANR	57221	ArgumentList	beginning_of_this_line		56944	1					
ANR	57222	Argument	beginning_of_this_line		56944	0					
ANR	57223	Identifier	beginning_of_this_line		56944	0					
ANR	57224	Argument	p_input_line		56944	1					
ANR	57225	Identifier	p_input_line		56944	0					
ANR	57226	BreakStatement	break ;	2442:5:63450:63455	56944	1	True				
ANR	57227	IfStatement	if ( ! tmpfp )		56944	10					
ANR	57228	Condition	! tmpfp	2445:8:63474:63479	56944	0	True				
ANR	57229	UnaryOperationExpression	! tmpfp		56944	0					
ANR	57230	UnaryOperator	!		56944	0					
ANR	57231	Identifier	tmpfp		56944	1					
ANR	57232	ReturnStatement	return ;	2446:6:63488:63494	56944	1	True				
ANR	57233	IfStatement	"if ( fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0 || fflush ( tmpfp ) != 0 )"		56944	11					
ANR	57234	Condition	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0 || fflush ( tmpfp ) != 0"	2447:8:63504:63583	56944	0	True				
ANR	57235	OrExpression	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0 || fflush ( tmpfp ) != 0"		56944	0		||			
ANR	57236	EqualityExpression	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0"		56944	0		==			
ANR	57237	CallExpression	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp )"		56944	0					
ANR	57238	Callee	fwrite		56944	0					
ANR	57239	Identifier	fwrite		56944	0					
ANR	57240	ArgumentList	"""w\\nq\\n"""		56944	1					
ANR	57241	Argument	"""w\\nq\\n"""		56944	0					
ANR	57242	PrimaryExpression	"""w\\nq\\n"""		56944	0					
ANR	57243	Argument	sizeof ( char )		56944	1					
ANR	57244	SizeofExpression	sizeof ( char )		56944	0					
ANR	57245	Sizeof	sizeof		56944	0					
ANR	57246	SizeofOperand	char		56944	1					
ANR	57247	Argument	( size_t ) 4		56944	2					
ANR	57248	CastExpression	( size_t ) 4		56944	0					
ANR	57249	CastTarget	size_t		56944	0					
ANR	57250	PrimaryExpression	4		56944	1					
ANR	57251	Argument	tmpfp		56944	3					
ANR	57252	Identifier	tmpfp		56944	0					
ANR	57253	PrimaryExpression	0		56944	1					
ANR	57254	EqualityExpression	fflush ( tmpfp ) != 0		56944	1		!=			
ANR	57255	CallExpression	fflush ( tmpfp )		56944	0					
ANR	57256	Callee	fflush		56944	0					
ANR	57257	Identifier	fflush		56944	0					
ANR	57258	ArgumentList	tmpfp		56944	1					
ANR	57259	Argument	tmpfp		56944	0					
ANR	57260	Identifier	tmpfp		56944	0					
ANR	57261	PrimaryExpression	0		56944	1					
ANR	57262	ExpressionStatement	write_fatal ( )	2449:6:63592:63606	56944	1	True				
ANR	57263	CallExpression	write_fatal ( )		56944	0					
ANR	57264	Callee	write_fatal		56944	0					
ANR	57265	Identifier	write_fatal		56944	0					
ANR	57266	ArgumentList			56944	1					
ANR	57267	IfStatement	"if ( lseek ( tmpfd , 0 , SEEK_SET ) == - 1 )"		56944	12					
ANR	57268	Condition	"lseek ( tmpfd , 0 , SEEK_SET ) == - 1"	2451:8:63617:63648	56944	0	True				
ANR	57269	EqualityExpression	"lseek ( tmpfd , 0 , SEEK_SET ) == - 1"		56944	0		==			
ANR	57270	CallExpression	"lseek ( tmpfd , 0 , SEEK_SET )"		56944	0					
ANR	57271	Callee	lseek		56944	0					
ANR	57272	Identifier	lseek		56944	0					
ANR	57273	ArgumentList	tmpfd		56944	1					
ANR	57274	Argument	tmpfd		56944	0					
ANR	57275	Identifier	tmpfd		56944	0					
ANR	57276	Argument	0		56944	1					
ANR	57277	PrimaryExpression	0		56944	0					
ANR	57278	Argument	SEEK_SET		56944	2					
ANR	57279	Identifier	SEEK_SET		56944	0					
ANR	57280	UnaryOperationExpression	- 1		56944	1					
ANR	57281	UnaryOperator	-		56944	0					
ANR	57282	PrimaryExpression	1		56944	1					
ANR	57283	ExpressionStatement	"pfatal ( ""Can't rewind to the beginning of file %s"" , quotearg ( tmpname ) )"	2452:6:63657:63728	56944	1	True				
ANR	57284	CallExpression	"pfatal ( ""Can't rewind to the beginning of file %s"" , quotearg ( tmpname ) )"		56944	0					
ANR	57285	Callee	pfatal		56944	0					
ANR	57286	Identifier	pfatal		56944	0					
ANR	57287	ArgumentList	"""Can't rewind to the beginning of file %s"""		56944	1					
ANR	57288	Argument	"""Can't rewind to the beginning of file %s"""		56944	0					
ANR	57289	PrimaryExpression	"""Can't rewind to the beginning of file %s"""		56944	0					
ANR	57290	Argument	quotearg ( tmpname )		56944	1					
ANR	57291	CallExpression	quotearg ( tmpname )		56944	0					
ANR	57292	Callee	quotearg		56944	0					
ANR	57293	Identifier	quotearg		56944	0					
ANR	57294	ArgumentList	tmpname		56944	1					
ANR	57295	Argument	tmpname		56944	0					
ANR	57296	Identifier	tmpname		56944	0					
ANR	57297	IfStatement	if ( ! dry_run && ! skip_rest_of_patch )		56944	13					
ANR	57298	Condition	! dry_run && ! skip_rest_of_patch	2454:8:63739:63771	56944	0	True				
ANR	57299	AndExpression	! dry_run && ! skip_rest_of_patch		56944	0		&&			
ANR	57300	UnaryOperationExpression	! dry_run		56944	0					
ANR	57301	UnaryOperator	!		56944	0					
ANR	57302	Identifier	dry_run		56944	1					
ANR	57303	UnaryOperationExpression	! skip_rest_of_patch		56944	1					
ANR	57304	UnaryOperator	!		56944	0					
ANR	57305	Identifier	skip_rest_of_patch		56944	1					
ANR	57306	CompoundStatement		67:1:1974:2025	56944	1					
ANR	57307	IdentifierDeclStatement	int exclusive = * outname_needs_removal ? 0 : O_EXCL ;	2455:1:63777:63828	56944	0	True				
ANR	57308	IdentifierDecl	exclusive = * outname_needs_removal ? 0 : O_EXCL		56944	0					
ANR	57309	IdentifierDeclType	int		56944	0					
ANR	57310	Identifier	exclusive		56944	1					
ANR	57311	AssignmentExpression	exclusive = * outname_needs_removal ? 0 : O_EXCL		56944	2		=			
ANR	57312	Identifier	exclusive		56944	0					
ANR	57313	ConditionalExpression	* outname_needs_removal ? 0 : O_EXCL		56944	1					
ANR	57314	Condition	* outname_needs_removal		56944	0					
ANR	57315	UnaryOperationExpression	* outname_needs_removal		56944	0					
ANR	57316	UnaryOperator	*		56944	0					
ANR	57317	Identifier	outname_needs_removal		56944	1					
ANR	57318	PrimaryExpression	0		56944	1					
ANR	57319	Identifier	O_EXCL		56944	2					
ANR	57320	ExpressionStatement	* outname_needs_removal = true	2456:1:63831:63860	56944	1	True				
ANR	57321	AssignmentExpression	* outname_needs_removal = true		56944	0		=			
ANR	57322	UnaryOperationExpression	* outname_needs_removal		56944	0					
ANR	57323	UnaryOperator	*		56944	0					
ANR	57324	Identifier	outname_needs_removal		56944	1					
ANR	57325	Identifier	true		56944	1					
ANR	57326	IfStatement	if ( inerrno != ENOENT )		56944	2					
ANR	57327	Condition	inerrno != ENOENT	2457:5:63867:63883	56944	0	True				
ANR	57328	EqualityExpression	inerrno != ENOENT		56944	0		!=			
ANR	57329	Identifier	inerrno		56944	0					
ANR	57330	Identifier	ENOENT		56944	1					
ANR	57331	CompoundStatement		70:3:2086:2086	56944	1					
ANR	57332	ExpressionStatement	* outname_needs_removal = true	2459:5:63896:63925	56944	0	True				
ANR	57333	AssignmentExpression	* outname_needs_removal = true		56944	0		=			
ANR	57334	UnaryOperationExpression	* outname_needs_removal		56944	0					
ANR	57335	UnaryOperator	*		56944	0					
ANR	57336	Identifier	outname_needs_removal		56944	1					
ANR	57337	Identifier	true		56944	1					
ANR	57338	ExpressionStatement	"copy_file ( inname , outname , 0 , exclusive , instat . st_mode , true )"	2460:5:63932:63995	56944	1	True				
ANR	57339	CallExpression	"copy_file ( inname , outname , 0 , exclusive , instat . st_mode , true )"		56944	0					
ANR	57340	Callee	copy_file		56944	0					
ANR	57341	Identifier	copy_file		56944	0					
ANR	57342	ArgumentList	inname		56944	1					
ANR	57343	Argument	inname		56944	0					
ANR	57344	Identifier	inname		56944	0					
ANR	57345	Argument	outname		56944	1					
ANR	57346	Identifier	outname		56944	0					
ANR	57347	Argument	0		56944	2					
ANR	57348	PrimaryExpression	0		56944	0					
ANR	57349	Argument	exclusive		56944	3					
ANR	57350	Identifier	exclusive		56944	0					
ANR	57351	Argument	instat . st_mode		56944	4					
ANR	57352	MemberAccess	instat . st_mode		56944	0					
ANR	57353	Identifier	instat		56944	0					
ANR	57354	Identifier	st_mode		56944	1					
ANR	57355	Argument	true		56944	5					
ANR	57356	Identifier	true		56944	0					
ANR	57357	ExpressionStatement	"sprintf ( buf , ""%s %s%s"" , editor_program , verbosity == VERBOSE ? """" : ""- "" , outname )"	2462:1:64003:64092	56944	3	True				
ANR	57358	CallExpression	"sprintf ( buf , ""%s %s%s"" , editor_program , verbosity == VERBOSE ? """" : ""- "" , outname )"		56944	0					
ANR	57359	Callee	sprintf		56944	0					
ANR	57360	Identifier	sprintf		56944	0					
ANR	57361	ArgumentList	buf		56944	1					
ANR	57362	Argument	buf		56944	0					
ANR	57363	Identifier	buf		56944	0					
ANR	57364	Argument	"""%s %s%s"""		56944	1					
ANR	57365	PrimaryExpression	"""%s %s%s"""		56944	0					
ANR	57366	Argument	editor_program		56944	2					
ANR	57367	Identifier	editor_program		56944	0					
ANR	57368	Argument	"verbosity == VERBOSE ? """" : ""- """		56944	3					
ANR	57369	ConditionalExpression	"verbosity == VERBOSE ? """" : ""- """		56944	0					
ANR	57370	Condition	verbosity == VERBOSE		56944	0					
ANR	57371	EqualityExpression	verbosity == VERBOSE		56944	0		==			
ANR	57372	Identifier	verbosity		56944	0					
ANR	57373	Identifier	VERBOSE		56944	1					
ANR	57374	PrimaryExpression	""""""		56944	1					
ANR	57375	PrimaryExpression	"""- """		56944	2					
ANR	57376	Argument	outname		56944	4					
ANR	57377	Identifier	outname		56944	0					
ANR	57378	ExpressionStatement	fflush ( stdout )	2465:1:64095:64110	56944	4	True				
ANR	57379	CallExpression	fflush ( stdout )		56944	0					
ANR	57380	Callee	fflush		56944	0					
ANR	57381	Identifier	fflush		56944	0					
ANR	57382	ArgumentList	stdout		56944	1					
ANR	57383	Argument	stdout		56944	0					
ANR	57384	Identifier	stdout		56944	0					
ANR	57385	ExpressionStatement	pid = fork ( )	2467:1:64114:64126	56944	5	True				
ANR	57386	AssignmentExpression	pid = fork ( )		56944	0		=			
ANR	57387	Identifier	pid		56944	0					
ANR	57388	CallExpression	fork ( )		56944	1					
ANR	57389	Callee	fork		56944	0					
ANR	57390	Identifier	fork		56944	0					
ANR	57391	ArgumentList			56944	1					
ANR	57392	IfStatement	if ( pid == - 1 )		56944	6					
ANR	57393	Condition	pid == - 1	2468:5:64133:64141	56944	0	True				
ANR	57394	EqualityExpression	pid == - 1		56944	0		==			
ANR	57395	Identifier	pid		56944	0					
ANR	57396	UnaryOperationExpression	- 1		56944	1					
ANR	57397	UnaryOperator	-		56944	0					
ANR	57398	PrimaryExpression	1		56944	1					
ANR	57399	ExpressionStatement	"pfatal ( ""Can't fork"" )"	2469:3:64147:64168	56944	1	True				
ANR	57400	CallExpression	"pfatal ( ""Can't fork"" )"		56944	0					
ANR	57401	Callee	pfatal		56944	0					
ANR	57402	Identifier	pfatal		56944	0					
ANR	57403	ArgumentList	"""Can't fork"""		56944	1					
ANR	57404	Argument	"""Can't fork"""		56944	0					
ANR	57405	PrimaryExpression	"""Can't fork"""		56944	0					
ANR	57406	ElseStatement	else		56944	0					
ANR	57407	IfStatement	if ( pid == 0 )		56944	0					
ANR	57408	Condition	pid == 0	2470:10:64180:64187	56944	0	True				
ANR	57409	EqualityExpression	pid == 0		56944	0		==			
ANR	57410	Identifier	pid		56944	0					
ANR	57411	PrimaryExpression	0		56944	1					
ANR	57412	CompoundStatement		83:3:2390:2390	56944	1					
ANR	57413	ExpressionStatement	"dup2 ( tmpfd , 0 )"	2472:5:64200:64215	56944	0	True				
ANR	57414	CallExpression	"dup2 ( tmpfd , 0 )"		56944	0					
ANR	57415	Callee	dup2		56944	0					
ANR	57416	Identifier	dup2		56944	0					
ANR	57417	ArgumentList	tmpfd		56944	1					
ANR	57418	Argument	tmpfd		56944	0					
ANR	57419	Identifier	tmpfd		56944	0					
ANR	57420	Argument	0		56944	1					
ANR	57421	PrimaryExpression	0		56944	0					
ANR	57422	ExpressionStatement	"execl ( ""/bin/sh"" , ""sh"" , ""-c"" , buf , ( char * ) 0 )"	2473:5:64222:64268	56944	1	True				
ANR	57423	CallExpression	"execl ( ""/bin/sh"" , ""sh"" , ""-c"" , buf , ( char * ) 0 )"		56944	0					
ANR	57424	Callee	execl		56944	0					
ANR	57425	Identifier	execl		56944	0					
ANR	57426	ArgumentList	"""/bin/sh"""		56944	1					
ANR	57427	Argument	"""/bin/sh"""		56944	0					
ANR	57428	PrimaryExpression	"""/bin/sh"""		56944	0					
ANR	57429	Argument	"""sh"""		56944	1					
ANR	57430	PrimaryExpression	"""sh"""		56944	0					
ANR	57431	Argument	"""-c"""		56944	2					
ANR	57432	PrimaryExpression	"""-c"""		56944	0					
ANR	57433	Argument	buf		56944	3					
ANR	57434	Identifier	buf		56944	0					
ANR	57435	Argument	( char * ) 0		56944	4					
ANR	57436	CastExpression	( char * ) 0		56944	0					
ANR	57437	CastTarget	char *		56944	0					
ANR	57438	PrimaryExpression	0		56944	1					
ANR	57439	ExpressionStatement	_exit ( 2 )	2474:5:64275:64284	56944	2	True				
ANR	57440	CallExpression	_exit ( 2 )		56944	0					
ANR	57441	Callee	_exit		56944	0					
ANR	57442	Identifier	_exit		56944	0					
ANR	57443	ArgumentList	2		56944	1					
ANR	57444	Argument	2		56944	0					
ANR	57445	PrimaryExpression	2		56944	0					
ANR	57446	ElseStatement	else		56944	0					
ANR	57447	CompoundStatement		90:5:2504:2515	56944	0					
ANR	57448	IdentifierDeclStatement	int wstatus ;	2478:5:64307:64318	56944	0	True				
ANR	57449	IdentifierDecl	wstatus		56944	0					
ANR	57450	IdentifierDeclType	int		56944	0					
ANR	57451	Identifier	wstatus		56944	1					
ANR	57452	IfStatement	"if ( waitpid ( pid , & wstatus , 0 ) == - 1 || ! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0 )"		56944	1					
ANR	57453	Condition	"waitpid ( pid , & wstatus , 0 ) == - 1 || ! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0"	2479:9:64329:64426	56944	0	True				
ANR	57454	OrExpression	"waitpid ( pid , & wstatus , 0 ) == - 1 || ! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0"		56944	0		||			
ANR	57455	EqualityExpression	"waitpid ( pid , & wstatus , 0 ) == - 1"		56944	0		==			
ANR	57456	CallExpression	"waitpid ( pid , & wstatus , 0 )"		56944	0					
ANR	57457	Callee	waitpid		56944	0					
ANR	57458	Identifier	waitpid		56944	0					
ANR	57459	ArgumentList	pid		56944	1					
ANR	57460	Argument	pid		56944	0					
ANR	57461	Identifier	pid		56944	0					
ANR	57462	Argument	& wstatus		56944	1					
ANR	57463	UnaryOperationExpression	& wstatus		56944	0					
ANR	57464	UnaryOperator	&		56944	0					
ANR	57465	Identifier	wstatus		56944	1					
ANR	57466	Argument	0		56944	2					
ANR	57467	PrimaryExpression	0		56944	0					
ANR	57468	UnaryOperationExpression	- 1		56944	1					
ANR	57469	UnaryOperator	-		56944	0					
ANR	57470	PrimaryExpression	1		56944	1					
ANR	57471	OrExpression	! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0		56944	1		||			
ANR	57472	UnaryOperationExpression	! WIFEXITED ( wstatus )		56944	0					
ANR	57473	UnaryOperator	!		56944	0					
ANR	57474	CallExpression	WIFEXITED ( wstatus )		56944	1					
ANR	57475	Callee	WIFEXITED		56944	0					
ANR	57476	Identifier	WIFEXITED		56944	0					
ANR	57477	ArgumentList	wstatus		56944	1					
ANR	57478	Argument	wstatus		56944	0					
ANR	57479	Identifier	wstatus		56944	0					
ANR	57480	EqualityExpression	WEXITSTATUS ( wstatus ) != 0		56944	1		!=			
ANR	57481	CallExpression	WEXITSTATUS ( wstatus )		56944	0					
ANR	57482	Callee	WEXITSTATUS		56944	0					
ANR	57483	Identifier	WEXITSTATUS		56944	0					
ANR	57484	ArgumentList	wstatus		56944	1					
ANR	57485	Argument	wstatus		56944	0					
ANR	57486	Identifier	wstatus		56944	0					
ANR	57487	PrimaryExpression	0		56944	1					
ANR	57488	ExpressionStatement	"fatal ( ""%s FAILED"" , editor_program )"	2482:7:64436:64471	56944	1	True				
ANR	57489	CallExpression	"fatal ( ""%s FAILED"" , editor_program )"		56944	0					
ANR	57490	Callee	fatal		56944	0					
ANR	57491	Identifier	fatal		56944	0					
ANR	57492	ArgumentList	"""%s FAILED"""		56944	1					
ANR	57493	Argument	"""%s FAILED"""		56944	0					
ANR	57494	PrimaryExpression	"""%s FAILED"""		56944	0					
ANR	57495	Argument	editor_program		56944	1					
ANR	57496	Identifier	editor_program		56944	0					
ANR	57497	ExpressionStatement	fclose ( tmpfp )	2486:4:64489:64503	56944	14	True				
ANR	57498	CallExpression	fclose ( tmpfp )		56944	0					
ANR	57499	Callee	fclose		56944	0					
ANR	57500	Identifier	fclose		56944	0					
ANR	57501	ArgumentList	tmpfp		56944	1					
ANR	57502	Argument	tmpfp		56944	0					
ANR	57503	Identifier	tmpfp		56944	0					
ANR	57504	ExpressionStatement	safe_unlink ( tmpname )	2487:4:64509:64530	56944	15	True				
ANR	57505	CallExpression	safe_unlink ( tmpname )		56944	0					
ANR	57506	Callee	safe_unlink		56944	0					
ANR	57507	Identifier	safe_unlink		56944	0					
ANR	57508	ArgumentList	tmpname		56944	1					
ANR	57509	Argument	tmpname		56944	0					
ANR	57510	Identifier	tmpname		56944	0					
ANR	57511	IfStatement	if ( ofp )		56944	16					
ANR	57512	Condition	ofp	2489:8:64541:64543	56944	0	True				
ANR	57513	Identifier	ofp		56944	0					
ANR	57514	CompoundStatement		104:1:2812:2817	56944	1					
ANR	57515	IdentifierDeclStatement	"FILE * ifp = fopen ( outname , binary_transput ? ""rb"" : ""r"" ) ;"	2491:1:64555:64612	56944	0	True				
ANR	57516	IdentifierDecl	"* ifp = fopen ( outname , binary_transput ? ""rb"" : ""r"" )"		56944	0					
ANR	57517	IdentifierDeclType	FILE *		56944	0					
ANR	57518	Identifier	ifp		56944	1					
ANR	57519	AssignmentExpression	"* ifp = fopen ( outname , binary_transput ? ""rb"" : ""r"" )"		56944	2		=			
ANR	57520	Identifier	ifp		56944	0					
ANR	57521	CallExpression	"fopen ( outname , binary_transput ? ""rb"" : ""r"" )"		56944	1					
ANR	57522	Callee	fopen		56944	0					
ANR	57523	Identifier	fopen		56944	0					
ANR	57524	ArgumentList	outname		56944	1					
ANR	57525	Argument	outname		56944	0					
ANR	57526	Identifier	outname		56944	0					
ANR	57527	Argument	"binary_transput ? ""rb"" : ""r"""		56944	1					
ANR	57528	ConditionalExpression	"binary_transput ? ""rb"" : ""r"""		56944	0					
ANR	57529	Condition	binary_transput		56944	0					
ANR	57530	Identifier	binary_transput		56944	0					
ANR	57531	PrimaryExpression	"""rb"""		56944	1					
ANR	57532	PrimaryExpression	"""r"""		56944	2					
ANR	57533	IdentifierDeclStatement	int c ;	2492:1:64615:64620	56944	1	True				
ANR	57534	IdentifierDecl	c		56944	0					
ANR	57535	IdentifierDeclType	int		56944	0					
ANR	57536	Identifier	c		56944	1					
ANR	57537	IfStatement	if ( ! ifp )		56944	2					
ANR	57538	Condition	! ifp	2493:5:64627:64630	56944	0	True				
ANR	57539	UnaryOperationExpression	! ifp		56944	0					
ANR	57540	UnaryOperator	!		56944	0					
ANR	57541	Identifier	ifp		56944	1					
ANR	57542	ExpressionStatement	"pfatal ( ""can't open '%s'"" , outname )"	2494:3:64636:64671	56944	1	True				
ANR	57543	CallExpression	"pfatal ( ""can't open '%s'"" , outname )"		56944	0					
ANR	57544	Callee	pfatal		56944	0					
ANR	57545	Identifier	pfatal		56944	0					
ANR	57546	ArgumentList	"""can't open '%s'"""		56944	1					
ANR	57547	Argument	"""can't open '%s'"""		56944	0					
ANR	57548	PrimaryExpression	"""can't open '%s'"""		56944	0					
ANR	57549	Argument	outname		56944	1					
ANR	57550	Identifier	outname		56944	0					
ANR	57551	WhileStatement	while ( ( c = getc ( ifp ) ) != EOF )		56944	3					
ANR	57552	Condition	( c = getc ( ifp ) ) != EOF	2495:8:64681:64703	56944	0	True				
ANR	57553	EqualityExpression	( c = getc ( ifp ) ) != EOF		56944	0		!=			
ANR	57554	AssignmentExpression	c = getc ( ifp )		56944	0		=			
ANR	57555	Identifier	c		56944	0					
ANR	57556	CallExpression	getc ( ifp )		56944	1					
ANR	57557	Callee	getc		56944	0					
ANR	57558	Identifier	getc		56944	0					
ANR	57559	ArgumentList	ifp		56944	1					
ANR	57560	Argument	ifp		56944	0					
ANR	57561	Identifier	ifp		56944	0					
ANR	57562	Identifier	EOF		56944	1					
ANR	57563	IfStatement	"if ( putc ( c , ofp ) == EOF )"		56944	1					
ANR	57564	Condition	"putc ( c , ofp ) == EOF"	2496:7:64713:64732	56944	0	True				
ANR	57565	EqualityExpression	"putc ( c , ofp ) == EOF"		56944	0		==			
ANR	57566	CallExpression	"putc ( c , ofp )"		56944	0					
ANR	57567	Callee	putc		56944	0					
ANR	57568	Identifier	putc		56944	0					
ANR	57569	ArgumentList	c		56944	1					
ANR	57570	Argument	c		56944	0					
ANR	57571	Identifier	c		56944	0					
ANR	57572	Argument	ofp		56944	1					
ANR	57573	Identifier	ofp		56944	0					
ANR	57574	Identifier	EOF		56944	1					
ANR	57575	ExpressionStatement	write_fatal ( )	2497:5:64740:64754	56944	1	True				
ANR	57576	CallExpression	write_fatal ( )		56944	0					
ANR	57577	Callee	write_fatal		56944	0					
ANR	57578	Identifier	write_fatal		56944	0					
ANR	57579	ArgumentList			56944	1					
ANR	57580	IfStatement	if ( ferror ( ifp ) || fclose ( ifp ) != 0 )		56944	4					
ANR	57581	Condition	ferror ( ifp ) || fclose ( ifp ) != 0	2498:5:64761:64793	56944	0	True				
ANR	57582	OrExpression	ferror ( ifp ) || fclose ( ifp ) != 0		56944	0		||			
ANR	57583	CallExpression	ferror ( ifp )		56944	0					
ANR	57584	Callee	ferror		56944	0					
ANR	57585	Identifier	ferror		56944	0					
ANR	57586	ArgumentList	ifp		56944	1					
ANR	57587	Argument	ifp		56944	0					
ANR	57588	Identifier	ifp		56944	0					
ANR	57589	EqualityExpression	fclose ( ifp ) != 0		56944	1		!=			
ANR	57590	CallExpression	fclose ( ifp )		56944	0					
ANR	57591	Callee	fclose		56944	0					
ANR	57592	Identifier	fclose		56944	0					
ANR	57593	ArgumentList	ifp		56944	1					
ANR	57594	Argument	ifp		56944	0					
ANR	57595	Identifier	ifp		56944	0					
ANR	57596	PrimaryExpression	0		56944	1					
ANR	57597	ExpressionStatement	read_fatal ( )	2499:3:64799:64812	56944	1	True				
ANR	57598	CallExpression	read_fatal ( )		56944	0					
ANR	57599	Callee	read_fatal		56944	0					
ANR	57600	Identifier	read_fatal		56944	0					
ANR	57601	ArgumentList			56944	1					
ANR	57602	ReturnType	void		56944	1					
ANR	57603	Identifier	do_ed_script		56944	2					
ANR	57604	ParameterList	"char const * inname , char const * outname , bool * outname_needs_removal , FILE * ofp"		56944	3					
ANR	57605	Parameter	char const * inname	2387:14:61714:61731	56944	0	True				
ANR	57606	ParameterType	char const *		56944	0					
ANR	57607	Identifier	inname		56944	1					
ANR	57608	Parameter	char const * outname	2387:34:61734:61752	56944	1	True				
ANR	57609	ParameterType	char const *		56944	0					
ANR	57610	Identifier	outname		56944	1					
ANR	57611	Parameter	bool * outname_needs_removal	2388:7:61762:61788	56944	2	True				
ANR	57612	ParameterType	bool *		56944	0					
ANR	57613	Identifier	outname_needs_removal		56944	1					
ANR	57614	Parameter	FILE * ofp	2388:36:61791:61799	56944	3	True				
ANR	57615	ParameterType	FILE *		56944	0					
ANR	57616	Identifier	ofp		56944	1					
ANR	57617	CFGEntryNode	ENTRY		56944		True				
ANR	57618	CFGExitNode	EXIT		56944		True				
ANR	57619	InfiniteForNode	true		56944		True				
ANR	57620	Symbol	tmpfd		56944						
ANR	57621	Symbol	fflush		56944						
ANR	57622	Symbol	putc		56944						
ANR	57623	Symbol	chars_read		56944						
ANR	57624	Symbol	stdout		56944						
ANR	57625	Symbol	beginning_of_this_line		56944						
ANR	57626	Symbol	inerrno		56944						
ANR	57627	Symbol	instat		56944						
ANR	57628	Symbol	pid		56944						
ANR	57629	Symbol	WEXITSTATUS		56944						
ANR	57630	Symbol	ed_command_letter		56944						
ANR	57631	Symbol	& wstatus		56944						
ANR	57632	Symbol	instat . st_mode		56944						
ANR	57633	Symbol	tmpname		56944						
ANR	57634	Symbol	strEQ		56944						
ANR	57635	Symbol	exclusive		56944						
ANR	57636	Symbol	file_tell		56944						
ANR	57637	Symbol	* buf		56944						
ANR	57638	Symbol	NULL		56944						
ANR	57639	Symbol	editor_program		56944						
ANR	57640	Symbol	ferror		56944						
ANR	57641	Symbol	tmpfp		56944						
ANR	57642	Symbol	true		56944						
ANR	57643	Symbol	dry_run		56944						
ANR	57644	Symbol	pfp		56944						
ANR	57645	Symbol	binary_transput		56944						
ANR	57646	Symbol	p_input_line		56944						
ANR	57647	Symbol	quotearg		56944						
ANR	57648	Symbol	lseek		56944						
ANR	57649	Symbol	O_BINARY		56944						
ANR	57650	Symbol	make_tempfile		56944						
ANR	57651	Symbol	outname		56944						
ANR	57652	Symbol	fdopen		56944						
ANR	57653	Symbol	O_RDWR		56944						
ANR	57654	Symbol	EDITOR_PROGRAM		56944						
ANR	57655	Symbol	WIFEXITED		56944						
ANR	57656	Symbol	& tmpname		56944						
ANR	57657	Symbol	outname_needs_removal		56944						
ANR	57658	Symbol	VERBOSE		56944						
ANR	57659	Symbol	EOF		56944						
ANR	57660	Symbol	inname		56944						
ANR	57661	Symbol	get_ed_command_letter		56944						
ANR	57662	Symbol	SEEK_SET		56944						
ANR	57663	Symbol	* outname_needs_removal		56944						
ANR	57664	Symbol	fopen		56944						
ANR	57665	Symbol	c		56944						
ANR	57666	Symbol	O_EXCL		56944						
ANR	57667	Symbol	fclose		56944						
ANR	57668	Symbol	false		56944						
ANR	57669	Symbol	fwrite		56944						
ANR	57670	Symbol	ENOENT		56944						
ANR	57671	Symbol	get_line		56944						
ANR	57672	Symbol	buf		56944						
ANR	57673	Symbol	fork		56944						
ANR	57674	Symbol	ifp		56944						
ANR	57675	Symbol	ofp		56944						
ANR	57676	Symbol	skip_rest_of_patch		56944						
ANR	57677	Symbol	wstatus		56944						
ANR	57678	Symbol	getc		56944						
ANR	57679	Symbol	verbosity		56944						
ANR	57680	Symbol	p_pass_comments_through		56944						
ANR	57681	Symbol	waitpid		56944						
ANR	57682	Function	pch_normalize	2503:0:64825:66054							
ANR	57683	FunctionDef	pch_normalize (enum diff format)		57682	0					
ANR	57684	CompoundStatement		2505:0:64863:66054	57682	0					
ANR	57685	IdentifierDeclStatement	lin old = 1 ;	2506:2:64867:64878	57682	0	True				
ANR	57686	IdentifierDecl	old = 1		57682	0					
ANR	57687	IdentifierDeclType	lin		57682	0					
ANR	57688	Identifier	old		57682	1					
ANR	57689	AssignmentExpression	old = 1		57682	2		=			
ANR	57690	Identifier	old		57682	0					
ANR	57691	PrimaryExpression	1		57682	1					
ANR	57692	Statement	lin	2507:2:64882:64884	57682	1	True				
ANR	57693	Statement	new	2507:6:64886:64888	57682	2	True				
ANR	57694	Statement	=	2507:10:64890:64890	57682	3	True				
ANR	57695	ExpressionStatement	p_ptrn_lines + 1	2507:12:64892:64908	57682	4	True				
ANR	57696	AdditiveExpression	p_ptrn_lines + 1		57682	0		+			
ANR	57697	Identifier	p_ptrn_lines		57682	0					
ANR	57698	PrimaryExpression	1		57682	1					
ANR	57699	Statement	while	2509:2:64913:64917	57682	5	True				
ANR	57700	Statement	(	2509:8:64919:64919	57682	6	True				
ANR	57701	Statement	p_Char	2509:9:64920:64925	57682	7	True				
ANR	57702	Statement	[	2509:15:64926:64926	57682	8	True				
ANR	57703	Statement	new	2509:16:64927:64929	57682	9	True				
ANR	57704	Statement	]	2509:19:64930:64930	57682	10	True				
ANR	57705	Statement	==	2509:21:64932:64933	57682	11	True				
ANR	57706	Statement	'='	2509:24:64935:64937	57682	12	True				
ANR	57707	Statement	||	2509:28:64939:64940	57682	13	True				
ANR	57708	Statement	p_Char	2509:31:64942:64947	57682	14	True				
ANR	57709	Statement	[	2509:37:64948:64948	57682	15	True				
ANR	57710	Statement	new	2509:38:64949:64951	57682	16	True				
ANR	57711	Statement	]	2509:41:64952:64952	57682	17	True				
ANR	57712	Statement	==	2509:43:64954:64955	57682	18	True				
ANR	57713	Statement	'\\n'	2509:46:64957:64960	57682	19	True				
ANR	57714	Statement	)	2509:50:64961:64961	57682	20	True				
ANR	57715	Statement	new	2510:4:64967:64969	57682	21	True				
ANR	57716	Statement	++	2510:7:64970:64971	57682	22	True				
ANR	57717	ExpressionStatement		2510:9:64972:64972	57682	23	True				
ANR	57718	IfStatement	if ( format == UNI_DIFF )		57682	24					
ANR	57719	Condition	format == UNI_DIFF	2512:6:64981:64998	57682	0	True				
ANR	57720	EqualityExpression	format == UNI_DIFF		57682	0		==			
ANR	57721	Identifier	format		57682	0					
ANR	57722	Identifier	UNI_DIFF		57682	1					
ANR	57723	CompoundStatement		9:4:141:141	57682	1					
ANR	57724	ForStatement	for ( ; old <= p_ptrn_lines ; old ++ )		57682	0					
ANR	57725	Condition	old <= p_ptrn_lines	2517:13:65114:65132	57682	0	True				
ANR	57726	RelationalExpression	old <= p_ptrn_lines		57682	0		<=			
ANR	57727	Identifier	old		57682	0					
ANR	57728	Identifier	p_ptrn_lines		57682	1					
ANR	57729	PostIncDecOperationExpression	old ++	2517:34:65135:65139	57682	1	True				
ANR	57730	Identifier	old		57682	0					
ANR	57731	IncDec	++		57682	1					
ANR	57732	IfStatement	if ( p_Char [ old ] == '!' )		57682	2					
ANR	57733	Condition	p_Char [ old ] == '!'	2518:5:65147:65164	57682	0	True				
ANR	57734	EqualityExpression	p_Char [ old ] == '!'		57682	0		==			
ANR	57735	ArrayIndexing	p_Char [ old ]		57682	0					
ANR	57736	Identifier	p_Char		57682	0					
ANR	57737	Identifier	old		57682	1					
ANR	57738	PrimaryExpression	'!'		57682	1					
ANR	57739	ExpressionStatement	p_Char [ old ] = '-'	2519:3:65170:65187	57682	1	True				
ANR	57740	AssignmentExpression	p_Char [ old ] = '-'		57682	0		=			
ANR	57741	ArrayIndexing	p_Char [ old ]		57682	0					
ANR	57742	Identifier	p_Char		57682	0					
ANR	57743	Identifier	old		57682	1					
ANR	57744	PrimaryExpression	'-'		57682	1					
ANR	57745	Statement	for	2520:6:65195:65197	57682	1	True				
ANR	57746	Statement	(	2520:10:65199:65199	57682	2	True				
ANR	57747	ExpressionStatement		2520:11:65200:65200	57682	3	True				
ANR	57748	Statement	new	2520:13:65202:65204	57682	4	True				
ANR	57749	Statement	<=	2520:17:65206:65207	57682	5	True				
ANR	57750	ExpressionStatement	p_end	2520:20:65209:65214	57682	6	True				
ANR	57751	Identifier	p_end		57682	0					
ANR	57752	Statement	new	2520:27:65216:65218	57682	7	True				
ANR	57753	Statement	++	2520:30:65219:65220	57682	8	True				
ANR	57754	Statement	)	2520:32:65221:65221	57682	9	True				
ANR	57755	Statement	if	2521:1:65224:65225	57682	10	True				
ANR	57756	Statement	(	2521:4:65227:65227	57682	11	True				
ANR	57757	Statement	p_Char	2521:5:65228:65233	57682	12	True				
ANR	57758	Statement	[	2521:11:65234:65234	57682	13	True				
ANR	57759	Statement	new	2521:12:65235:65237	57682	14	True				
ANR	57760	Statement	]	2521:15:65238:65238	57682	15	True				
ANR	57761	Statement	==	2521:17:65240:65241	57682	16	True				
ANR	57762	Statement	'!'	2521:20:65243:65245	57682	17	True				
ANR	57763	Statement	)	2521:23:65246:65246	57682	18	True				
ANR	57764	Statement	p_Char	2522:3:65251:65256	57682	19	True				
ANR	57765	Statement	[	2522:9:65257:65257	57682	20	True				
ANR	57766	Statement	new	2522:10:65258:65260	57682	21	True				
ANR	57767	Statement	]	2522:13:65261:65261	57682	22	True				
ANR	57768	Statement	=	2522:15:65263:65263	57682	23	True				
ANR	57769	ExpressionStatement	'+'	2522:17:65265:65268	57682	24	True				
ANR	57770	PrimaryExpression	'+'		57682	0					
ANR	57771	ElseStatement	else		57682	0					
ANR	57772	Statement	if	2555:8:65871:65872	57682	0	True				
ANR	57773	ReturnType	void		57682	1					
ANR	57774	Identifier	pch_normalize		57682	2					
ANR	57775	ParameterList	enum diff format		57682	3					
ANR	57776	Parameter	enum diff format	2504:15:64845:64860	57682	0	True				
ANR	57777	ParameterType	enum diff		57682	0					
ANR	57778	Identifier	format		57682	1					
ANR	57779	CFGEntryNode	ENTRY		57682		True				
ANR	57780	CFGExitNode	EXIT		57682		True				
ANR	57781	Symbol	* old		57682						
ANR	57782	Symbol	UNI_DIFF		57682						
ANR	57783	Symbol	p_ptrn_lines		57682						
ANR	57784	Symbol	old		57682						
ANR	57785	Symbol	format		57682						
ANR	57786	Symbol	* p_Char		57682						
ANR	57787	Symbol	p_Char		57682						
