command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	27187	File	data/converged/CVE-2019-13638~_patch/safe.c								
ANR	27188	DeclStmt									
ANR	27189	Decl							const unsigned int	const unsigned int	MAX_PATH_COMPONENTS
ANR	27190	DeclStmt									
ANR	27191	Decl							bool	bool	unsafe
ANR	27192	DeclStmt									
ANR	27193	Decl							unsigned int	unsigned int	dirfd_cache_misses
ANR	27194	ClassDef	cached_dirfd	60:0:1652:1803							
ANR	27195	DeclStmt									
ANR	27196	Decl							struct list_head	struct list_head	lru_link
ANR	27197	DeclStmt									
ANR	27198	Decl							struct list_head	struct list_head	children_link
ANR	27199	Decl							struct list_head	struct list_head	children
ANR	27200	DeclStmt									
ANR	27201	Decl							struct cached_dirfd	struct cached_dirfd *	parent
ANR	27202	DeclStmt									
ANR	27203	Decl							char	char *	name
ANR	27204	DeclStmt									
ANR	27205	Decl							int	int	fd
ANR	27206	DeclStmt									
ANR	27207	Decl							Hash_table	Hash_table *	cached_dirfds
ANR	27208	DeclStmt									
ANR	27209	Decl							size_t	size_t	max_cached_fds
ANR	27210	Function	hash_cached_dirfd	73:0:1901:2122							
ANR	27211	FunctionDef	"hash_cached_dirfd (const void * entry , size_t table_size)"		27210	0					
ANR	27212	CompoundStatement		74:0:1972:2122	27210	0					
ANR	27213	IdentifierDeclStatement	const struct cached_dirfd * d = entry ;	75:2:1976:2012	27210	0	True				
ANR	27214	IdentifierDecl	* d = entry		27210	0					
ANR	27215	IdentifierDeclType	const struct cached_dirfd *		27210	0					
ANR	27216	Identifier	d		27210	1					
ANR	27217	AssignmentExpression	* d = entry		27210	2		=			
ANR	27218	Identifier	entry		27210	0					
ANR	27219	Identifier	entry		27210	1					
ANR	27220	IdentifierDeclStatement	"size_t strhash = hash_string ( d -> name , table_size ) ;"	76:2:2016:2066	27210	1	True				
ANR	27221	IdentifierDecl	"strhash = hash_string ( d -> name , table_size )"		27210	0					
ANR	27222	IdentifierDeclType	size_t		27210	0					
ANR	27223	Identifier	strhash		27210	1					
ANR	27224	AssignmentExpression	"strhash = hash_string ( d -> name , table_size )"		27210	2		=			
ANR	27225	Identifier	strhash		27210	0					
ANR	27226	CallExpression	"hash_string ( d -> name , table_size )"		27210	1					
ANR	27227	Callee	hash_string		27210	0					
ANR	27228	Identifier	hash_string		27210	0					
ANR	27229	ArgumentList	d -> name		27210	1					
ANR	27230	Argument	d -> name		27210	0					
ANR	27231	PtrMemberAccess	d -> name		27210	0					
ANR	27232	Identifier	d		27210	0					
ANR	27233	Identifier	name		27210	1					
ANR	27234	Argument	table_size		27210	1					
ANR	27235	Identifier	table_size		27210	0					
ANR	27236	ReturnStatement	return ( strhash * 31 + d -> parent -> fd ) % table_size ;	77:2:2070:2120	27210	2	True				
ANR	27237	MultiplicativeExpression	( strhash * 31 + d -> parent -> fd ) % table_size		27210	0		%			
ANR	27238	AdditiveExpression	strhash * 31 + d -> parent -> fd		27210	0		+			
ANR	27239	MultiplicativeExpression	strhash * 31		27210	0		*			
ANR	27240	Identifier	strhash		27210	0					
ANR	27241	PrimaryExpression	31		27210	1					
ANR	27242	PtrMemberAccess	d -> parent -> fd		27210	1					
ANR	27243	PtrMemberAccess	d -> parent		27210	0					
ANR	27244	Identifier	d		27210	0					
ANR	27245	Identifier	parent		27210	1					
ANR	27246	Identifier	fd		27210	1					
ANR	27247	Identifier	table_size		27210	1					
ANR	27248	ReturnType	static size_t		27210	1					
ANR	27249	Identifier	hash_cached_dirfd		27210	2					
ANR	27250	ParameterList	"const void * entry , size_t table_size"		27210	3					
ANR	27251	Parameter	const void * entry	73:33:1934:1950	27210	0	True				
ANR	27252	ParameterType	const void *		27210	0					
ANR	27253	Identifier	entry		27210	1					
ANR	27254	Parameter	size_t table_size	73:52:1953:1969	27210	1	True				
ANR	27255	ParameterType	size_t		27210	0					
ANR	27256	Identifier	table_size		27210	1					
ANR	27257	CFGEntryNode	ENTRY		27210		True				
ANR	27258	CFGExitNode	EXIT		27210		True				
ANR	27259	Symbol	d -> parent -> fd		27210						
ANR	27260	Symbol	entry		27210						
ANR	27261	Symbol	table_size		27210						
ANR	27262	Symbol	d -> name		27210						
ANR	27263	Symbol	d		27210						
ANR	27264	Symbol	* * d		27210						
ANR	27265	Symbol	strhash		27210						
ANR	27266	Symbol	hash_string		27210						
ANR	27267	Symbol	d -> parent		27210						
ANR	27268	Symbol	* d -> parent		27210						
ANR	27269	Symbol	* d		27210						
ANR	27270	Function	compare_cached_dirfds	80:0:2125:2352							
ANR	27271	FunctionDef	"compare_cached_dirfds (const void * _a , const void * _b)"		27270	0					
ANR	27272	CompoundStatement		82:0:2199:2352	27270	0					
ANR	27273	IdentifierDeclStatement	const struct cached_dirfd * a = _a ;	83:2:2203:2236	27270	0	True				
ANR	27274	IdentifierDecl	* a = _a		27270	0					
ANR	27275	IdentifierDeclType	const struct cached_dirfd *		27270	0					
ANR	27276	Identifier	a		27270	1					
ANR	27277	AssignmentExpression	* a = _a		27270	2		=			
ANR	27278	Identifier	_a		27270	0					
ANR	27279	Identifier	_a		27270	1					
ANR	27280	IdentifierDeclStatement	const struct cached_dirfd * b = _b ;	84:2:2240:2273	27270	1	True				
ANR	27281	IdentifierDecl	* b = _b		27270	0					
ANR	27282	IdentifierDeclType	const struct cached_dirfd *		27270	0					
ANR	27283	Identifier	b		27270	1					
ANR	27284	AssignmentExpression	* b = _b		27270	2		=			
ANR	27285	Identifier	_b		27270	0					
ANR	27286	Identifier	_b		27270	1					
ANR	27287	ReturnStatement	"return ( a -> parent -> fd == b -> parent -> fd && ! strcmp ( a -> name , b -> name ) ) ;"	86:2:2278:2350	27270	2	True				
ANR	27288	AndExpression	"a -> parent -> fd == b -> parent -> fd && ! strcmp ( a -> name , b -> name )"		27270	0		&&			
ANR	27289	EqualityExpression	a -> parent -> fd == b -> parent -> fd		27270	0		==			
ANR	27290	PtrMemberAccess	a -> parent -> fd		27270	0					
ANR	27291	PtrMemberAccess	a -> parent		27270	0					
ANR	27292	Identifier	a		27270	0					
ANR	27293	Identifier	parent		27270	1					
ANR	27294	Identifier	fd		27270	1					
ANR	27295	PtrMemberAccess	b -> parent -> fd		27270	1					
ANR	27296	PtrMemberAccess	b -> parent		27270	0					
ANR	27297	Identifier	b		27270	0					
ANR	27298	Identifier	parent		27270	1					
ANR	27299	Identifier	fd		27270	1					
ANR	27300	UnaryOperationExpression	"! strcmp ( a -> name , b -> name )"		27270	1					
ANR	27301	UnaryOperator	!		27270	0					
ANR	27302	CallExpression	"strcmp ( a -> name , b -> name )"		27270	1					
ANR	27303	Callee	strcmp		27270	0					
ANR	27304	Identifier	strcmp		27270	0					
ANR	27305	ArgumentList	a -> name		27270	1					
ANR	27306	Argument	a -> name		27270	0					
ANR	27307	PtrMemberAccess	a -> name		27270	0					
ANR	27308	Identifier	a		27270	0					
ANR	27309	Identifier	name		27270	1					
ANR	27310	Argument	b -> name		27270	1					
ANR	27311	PtrMemberAccess	b -> name		27270	0					
ANR	27312	Identifier	b		27270	0					
ANR	27313	Identifier	name		27270	1					
ANR	27314	ReturnType	static bool		27270	1					
ANR	27315	Identifier	compare_cached_dirfds		27270	2					
ANR	27316	ParameterList	"const void * _a , const void * _b"		27270	3					
ANR	27317	Parameter	const void * _a	80:35:2160:2173	27270	0	True				
ANR	27318	ParameterType	const void *		27270	0					
ANR	27319	Identifier	_a		27270	1					
ANR	27320	Parameter	const void * _b	81:7:2183:2196	27270	1	True				
ANR	27321	ParameterType	const void *		27270	0					
ANR	27322	Identifier	_b		27270	1					
ANR	27323	CFGEntryNode	ENTRY		27270		True				
ANR	27324	CFGExitNode	EXIT		27270		True				
ANR	27325	Symbol	strcmp		27270						
ANR	27326	Symbol	a		27270						
ANR	27327	Symbol	_a		27270						
ANR	27328	Symbol	b		27270						
ANR	27329	Symbol	a -> parent		27270						
ANR	27330	Symbol	_b		27270						
ANR	27331	Symbol	b -> parent		27270						
ANR	27332	Symbol	* a -> parent		27270						
ANR	27333	Symbol	* * b		27270						
ANR	27334	Symbol	* * a		27270						
ANR	27335	Symbol	* a		27270						
ANR	27336	Symbol	* b		27270						
ANR	27337	Symbol	b -> parent -> fd		27270						
ANR	27338	Symbol	b -> name		27270						
ANR	27339	Symbol	* b -> parent		27270						
ANR	27340	Symbol	a -> name		27270						
ANR	27341	Symbol	a -> parent -> fd		27270						
ANR	27342	Function	free_cached_dirfd	90:0:2355:2490							
ANR	27343	FunctionDef	free_cached_dirfd (struct cached_dirfd * entry)		27342	0					
ANR	27344	CompoundStatement		91:0:2414:2490	27342	0					
ANR	27345	ExpressionStatement	list_del ( & entry -> children_link )	92:2:2418:2450	27342	0	True				
ANR	27346	CallExpression	list_del ( & entry -> children_link )		27342	0					
ANR	27347	Callee	list_del		27342	0					
ANR	27348	Identifier	list_del		27342	0					
ANR	27349	ArgumentList	& entry -> children_link		27342	1					
ANR	27350	Argument	& entry -> children_link		27342	0					
ANR	27351	UnaryOperationExpression	& entry -> children_link		27342	0					
ANR	27352	UnaryOperator	&		27342	0					
ANR	27353	PtrMemberAccess	entry -> children_link		27342	1					
ANR	27354	Identifier	entry		27342	0					
ANR	27355	Identifier	children_link		27342	1					
ANR	27356	ExpressionStatement	free ( entry -> name )	93:2:2454:2472	27342	1	True				
ANR	27357	CallExpression	free ( entry -> name )		27342	0					
ANR	27358	Callee	free		27342	0					
ANR	27359	Identifier	free		27342	0					
ANR	27360	ArgumentList	entry -> name		27342	1					
ANR	27361	Argument	entry -> name		27342	0					
ANR	27362	PtrMemberAccess	entry -> name		27342	0					
ANR	27363	Identifier	entry		27342	0					
ANR	27364	Identifier	name		27342	1					
ANR	27365	ExpressionStatement	free ( entry )	94:2:2476:2488	27342	2	True				
ANR	27366	CallExpression	free ( entry )		27342	0					
ANR	27367	Callee	free		27342	0					
ANR	27368	Identifier	free		27342	0					
ANR	27369	ArgumentList	entry		27342	1					
ANR	27370	Argument	entry		27342	0					
ANR	27371	Identifier	entry		27342	0					
ANR	27372	ReturnType	static void		27342	1					
ANR	27373	Identifier	free_cached_dirfd		27342	2					
ANR	27374	ParameterList	struct cached_dirfd * entry		27342	3					
ANR	27375	Parameter	struct cached_dirfd * entry	90:31:2386:2411	27342	0	True				
ANR	27376	ParameterType	struct cached_dirfd *		27342	0					
ANR	27377	Identifier	entry		27342	1					
ANR	27378	CFGEntryNode	ENTRY		27342		True				
ANR	27379	CFGExitNode	EXIT		27342		True				
ANR	27380	Symbol	entry		27342						
ANR	27381	Symbol	entry -> name		27342						
ANR	27382	Symbol	& entry -> children_link		27342						
ANR	27383	Symbol	* entry		27342						
ANR	27384	Function	init_dirfd_cache	97:0:2493:2866							
ANR	27385	FunctionDef	init_dirfd_cache ()		27384	0					
ANR	27386	CompoundStatement		98:0:2529:2866	27384	0					
ANR	27387	IdentifierDeclStatement	struct rlimit nofile ;	99:2:2533:2553	27384	0	True				
ANR	27388	IdentifierDecl	nofile		27384	0					
ANR	27389	IdentifierDeclType	struct rlimit		27384	0					
ANR	27390	Identifier	nofile		27384	1					
ANR	27391	ExpressionStatement	max_cached_fds = 8	101:2:2558:2576	27384	1	True				
ANR	27392	AssignmentExpression	max_cached_fds = 8		27384	0		=			
ANR	27393	Identifier	max_cached_fds		27384	0					
ANR	27394	PrimaryExpression	8		27384	1					
ANR	27395	IfStatement	"if ( getrlimit ( RLIMIT_NOFILE , & nofile ) == 0 )"		27384	2					
ANR	27396	Condition	"getrlimit ( RLIMIT_NOFILE , & nofile ) == 0"	102:6:2584:2622	27384	0	True				
ANR	27397	EqualityExpression	"getrlimit ( RLIMIT_NOFILE , & nofile ) == 0"		27384	0		==			
ANR	27398	CallExpression	"getrlimit ( RLIMIT_NOFILE , & nofile )"		27384	0					
ANR	27399	Callee	getrlimit		27384	0					
ANR	27400	Identifier	getrlimit		27384	0					
ANR	27401	ArgumentList	RLIMIT_NOFILE		27384	1					
ANR	27402	Argument	RLIMIT_NOFILE		27384	0					
ANR	27403	Identifier	RLIMIT_NOFILE		27384	0					
ANR	27404	Argument	& nofile		27384	1					
ANR	27405	UnaryOperationExpression	& nofile		27384	0					
ANR	27406	UnaryOperator	&		27384	0					
ANR	27407	Identifier	nofile		27384	1					
ANR	27408	PrimaryExpression	0		27384	1					
ANR	27409	ExpressionStatement	"max_cached_fds = MAX ( nofile . rlim_cur / 4 , max_cached_fds )"	103:4:2629:2687	27384	1	True				
ANR	27410	AssignmentExpression	"max_cached_fds = MAX ( nofile . rlim_cur / 4 , max_cached_fds )"		27384	0		=			
ANR	27411	Identifier	max_cached_fds		27384	0					
ANR	27412	CallExpression	"MAX ( nofile . rlim_cur / 4 , max_cached_fds )"		27384	1					
ANR	27413	Callee	MAX		27384	0					
ANR	27414	Identifier	MAX		27384	0					
ANR	27415	ArgumentList	nofile . rlim_cur / 4		27384	1					
ANR	27416	Argument	nofile . rlim_cur / 4		27384	0					
ANR	27417	MultiplicativeExpression	nofile . rlim_cur / 4		27384	0		/			
ANR	27418	MemberAccess	nofile . rlim_cur		27384	0					
ANR	27419	Identifier	nofile		27384	0					
ANR	27420	Identifier	rlim_cur		27384	1					
ANR	27421	PrimaryExpression	4		27384	1					
ANR	27422	Argument	max_cached_fds		27384	1					
ANR	27423	Identifier	max_cached_fds		27384	0					
ANR	27424	ExpressionStatement	"cached_dirfds = hash_initialize ( max_cached_fds , NULL , hash_cached_dirfd , compare_cached_dirfds , NULL )"	105:2:2692:2822	27384	3	True				
ANR	27425	AssignmentExpression	"cached_dirfds = hash_initialize ( max_cached_fds , NULL , hash_cached_dirfd , compare_cached_dirfds , NULL )"		27384	0		=			
ANR	27426	Identifier	cached_dirfds		27384	0					
ANR	27427	CallExpression	"hash_initialize ( max_cached_fds , NULL , hash_cached_dirfd , compare_cached_dirfds , NULL )"		27384	1					
ANR	27428	Callee	hash_initialize		27384	0					
ANR	27429	Identifier	hash_initialize		27384	0					
ANR	27430	ArgumentList	max_cached_fds		27384	1					
ANR	27431	Argument	max_cached_fds		27384	0					
ANR	27432	Identifier	max_cached_fds		27384	0					
ANR	27433	Argument	NULL		27384	1					
ANR	27434	Identifier	NULL		27384	0					
ANR	27435	Argument	hash_cached_dirfd		27384	2					
ANR	27436	Identifier	hash_cached_dirfd		27384	0					
ANR	27437	Argument	compare_cached_dirfds		27384	3					
ANR	27438	Identifier	compare_cached_dirfds		27384	0					
ANR	27439	Argument	NULL		27384	4					
ANR	27440	Identifier	NULL		27384	0					
ANR	27441	IfStatement	if ( ! cached_dirfds )		27384	4					
ANR	27442	Condition	! cached_dirfds	111:6:2831:2844	27384	0	True				
ANR	27443	UnaryOperationExpression	! cached_dirfds		27384	0					
ANR	27444	UnaryOperator	!		27384	0					
ANR	27445	Identifier	cached_dirfds		27384	1					
ANR	27446	ExpressionStatement	xalloc_die ( )	112:4:2851:2864	27384	1	True				
ANR	27447	CallExpression	xalloc_die ( )		27384	0					
ANR	27448	Callee	xalloc_die		27384	0					
ANR	27449	Identifier	xalloc_die		27384	0					
ANR	27450	ArgumentList			27384	1					
ANR	27451	ReturnType	static void		27384	1					
ANR	27452	Identifier	init_dirfd_cache		27384	2					
ANR	27453	ParameterList			27384	3					
ANR	27454	CFGEntryNode	ENTRY		27384		True				
ANR	27455	CFGExitNode	EXIT		27384		True				
ANR	27456	Symbol	nofile . rlim_cur		27384						
ANR	27457	Symbol	compare_cached_dirfds		27384						
ANR	27458	Symbol	getrlimit		27384						
ANR	27459	Symbol	& nofile		27384						
ANR	27460	Symbol	max_cached_fds		27384						
ANR	27461	Symbol	NULL		27384						
ANR	27462	Symbol	MAX		27384						
ANR	27463	Symbol	hash_cached_dirfd		27384						
ANR	27464	Symbol	nofile		27384						
ANR	27465	Symbol	cached_dirfds		27384						
ANR	27466	Symbol	hash_initialize		27384						
ANR	27467	Symbol	RLIMIT_NOFILE		27384						
ANR	27468	Function	lookup_cached_dirfd	115:0:2869:3188							
ANR	27469	FunctionDef	"lookup_cached_dirfd (struct cached_dirfd * dir , const char * name)"		27468	0					
ANR	27470	CompoundStatement		116:0:2962:3188	27468	0					
ANR	27471	IdentifierDeclStatement	struct cached_dirfd * entry = NULL ;	117:2:2966:2999	27468	0	True				
ANR	27472	IdentifierDecl	* entry = NULL		27468	0					
ANR	27473	IdentifierDeclType	struct cached_dirfd *		27468	0					
ANR	27474	Identifier	entry		27468	1					
ANR	27475	AssignmentExpression	* entry = NULL		27468	2		=			
ANR	27476	Identifier	NULL		27468	0					
ANR	27477	Identifier	NULL		27468	1					
ANR	27478	IfStatement	if ( cached_dirfds )		27468	1					
ANR	27479	Condition	cached_dirfds	119:6:3008:3020	27468	0	True				
ANR	27480	Identifier	cached_dirfds		27468	0					
ANR	27481	CompoundStatement		6:6:72:95	27468	1					
ANR	27482	IdentifierDeclStatement	struct cached_dirfd key ;	121:6:3035:3058	27468	0	True				
ANR	27483	IdentifierDecl	key		27468	0					
ANR	27484	IdentifierDeclType	struct cached_dirfd		27468	0					
ANR	27485	Identifier	key		27468	1					
ANR	27486	ExpressionStatement	key . parent = dir	122:6:3066:3082	27468	1	True				
ANR	27487	AssignmentExpression	key . parent = dir		27468	0		=			
ANR	27488	MemberAccess	key . parent		27468	0					
ANR	27489	Identifier	key		27468	0					
ANR	27490	Identifier	parent		27468	1					
ANR	27491	Identifier	dir		27468	1					
ANR	27492	ExpressionStatement	key . name = ( char * ) name	123:6:3090:3114	27468	2	True				
ANR	27493	AssignmentExpression	key . name = ( char * ) name		27468	0		=			
ANR	27494	MemberAccess	key . name		27468	0					
ANR	27495	Identifier	key		27468	0					
ANR	27496	Identifier	name		27468	1					
ANR	27497	CastExpression	( char * ) name		27468	1					
ANR	27498	CastTarget	char *		27468	0					
ANR	27499	Identifier	name		27468	1					
ANR	27500	ExpressionStatement	"entry = hash_lookup ( cached_dirfds , & key )"	124:6:3122:3163	27468	3	True				
ANR	27501	AssignmentExpression	"entry = hash_lookup ( cached_dirfds , & key )"		27468	0		=			
ANR	27502	Identifier	entry		27468	0					
ANR	27503	CallExpression	"hash_lookup ( cached_dirfds , & key )"		27468	1					
ANR	27504	Callee	hash_lookup		27468	0					
ANR	27505	Identifier	hash_lookup		27468	0					
ANR	27506	ArgumentList	cached_dirfds		27468	1					
ANR	27507	Argument	cached_dirfds		27468	0					
ANR	27508	Identifier	cached_dirfds		27468	0					
ANR	27509	Argument	& key		27468	1					
ANR	27510	UnaryOperationExpression	& key		27468	0					
ANR	27511	UnaryOperator	&		27468	0					
ANR	27512	Identifier	key		27468	1					
ANR	27513	ReturnStatement	return entry ;	127:2:3174:3186	27468	2	True				
ANR	27514	Identifier	entry		27468	0					
ANR	27515	ReturnType	static struct cached_dirfd *		27468	1					
ANR	27516	Identifier	lookup_cached_dirfd		27468	2					
ANR	27517	ParameterList	"struct cached_dirfd * dir , const char * name"		27468	3					
ANR	27518	Parameter	struct cached_dirfd * dir	115:49:2918:2941	27468	0	True				
ANR	27519	ParameterType	struct cached_dirfd *		27468	0					
ANR	27520	Identifier	dir		27468	1					
ANR	27521	Parameter	const char * name	115:75:2944:2959	27468	1	True				
ANR	27522	ParameterType	const char *		27468	0					
ANR	27523	Identifier	name		27468	1					
ANR	27524	CFGEntryNode	ENTRY		27468		True				
ANR	27525	CFGExitNode	EXIT		27468		True				
ANR	27526	Symbol	entry		27468						
ANR	27527	Symbol	& key		27468						
ANR	27528	Symbol	NULL		27468						
ANR	27529	Symbol	key . name		27468						
ANR	27530	Symbol	name		27468						
ANR	27531	Symbol	key . parent		27468						
ANR	27532	Symbol	hash_lookup		27468						
ANR	27533	Symbol	dir		27468						
ANR	27534	Symbol	cached_dirfds		27468						
ANR	27535	Symbol	key		27468						
ANR	27536	Function	remove_cached_dirfd	130:0:3191:3734							
ANR	27537	FunctionDef	remove_cached_dirfd (struct cached_dirfd * entry)		27536	0					
ANR	27538	CompoundStatement		131:0:3252:3734	27536	0					
ANR	27539	WhileStatement	while ( ! list_empty ( & entry -> children ) )		27536	0					
ANR	27540	Condition	! list_empty ( & entry -> children )	132:9:3263:3293	27536	0	True				
ANR	27541	UnaryOperationExpression	! list_empty ( & entry -> children )		27536	0					
ANR	27542	UnaryOperator	!		27536	0					
ANR	27543	CallExpression	list_empty ( & entry -> children )		27536	1					
ANR	27544	Callee	list_empty		27536	0					
ANR	27545	Identifier	list_empty		27536	0					
ANR	27546	ArgumentList	& entry -> children		27536	1					
ANR	27547	Argument	& entry -> children		27536	0					
ANR	27548	UnaryOperationExpression	& entry -> children		27536	0					
ANR	27549	UnaryOperator	&		27536	0					
ANR	27550	PtrMemberAccess	entry -> children		27536	1					
ANR	27551	Identifier	entry		27536	0					
ANR	27552	Identifier	children		27536	1					
ANR	27553	CompoundStatement		3:4:47:47	27536	1					
ANR	27554	Statement	struct	134:6:3308:3313	27536	0	True				
ANR	27555	Statement	cached_dirfd	134:13:3315:3326	27536	1	True				
ANR	27556	Statement	*	134:26:3328:3328	27536	2	True				
ANR	27557	Statement	child	134:27:3329:3333	27536	3	True				
ANR	27558	Statement	=	134:33:3335:3335	27536	4	True				
ANR	27559	Statement	list_entry	135:1:3338:3347	27536	5	True				
ANR	27560	Statement	(	135:12:3349:3349	27536	6	True				
ANR	27561	Statement	entry	135:13:3350:3354	27536	7	True				
ANR	27562	Statement	->	135:18:3355:3356	27536	8	True				
ANR	27563	Statement	children	135:20:3357:3364	27536	9	True				
ANR	27564	Statement	.	135:28:3365:3365	27536	10	True				
ANR	27565	Statement	next	135:29:3366:3369	27536	11	True				
ANR	27566	Statement	","	135:33:3370:3370	27536	12	True				
ANR	27567	Statement	struct	135:35:3372:3377	27536	13	True				
ANR	27568	Statement	cached_dirfd	135:42:3379:3390	27536	14	True				
ANR	27569	Statement	","	135:54:3391:3391	27536	15	True				
ANR	27570	Statement	children_link	135:56:3393:3405	27536	16	True				
ANR	27571	Statement	)	135:69:3406:3406	27536	17	True				
ANR	27572	ExpressionStatement		135:70:3407:3407	27536	18	True				
ANR	27573	ExpressionStatement	list_del_init ( & child -> children_link )	136:6:3415:3452	27536	19	True				
ANR	27574	CallExpression	list_del_init ( & child -> children_link )		27536	0					
ANR	27575	Callee	list_del_init		27536	0					
ANR	27576	Identifier	list_del_init		27536	0					
ANR	27577	ArgumentList	& child -> children_link		27536	1					
ANR	27578	Argument	& child -> children_link		27536	0					
ANR	27579	UnaryOperationExpression	& child -> children_link		27536	0					
ANR	27580	UnaryOperator	&		27536	0					
ANR	27581	PtrMemberAccess	child -> children_link		27536	1					
ANR	27582	Identifier	child		27536	0					
ANR	27583	Identifier	children_link		27536	1					
ANR	27584	ExpressionStatement	"hash_delete ( cached_dirfds , child )"	138:6:3517:3551	27536	20	True				
ANR	27585	CallExpression	"hash_delete ( cached_dirfds , child )"		27536	0					
ANR	27586	Callee	hash_delete		27536	0					
ANR	27587	Identifier	hash_delete		27536	0					
ANR	27588	ArgumentList	cached_dirfds		27536	1					
ANR	27589	Argument	cached_dirfds		27536	0					
ANR	27590	Identifier	cached_dirfds		27536	0					
ANR	27591	Argument	child		27536	1					
ANR	27592	Identifier	child		27536	0					
ANR	27593	ExpressionStatement	list_del ( & entry -> lru_link )	140:2:3589:3616	27536	1	True				
ANR	27594	CallExpression	list_del ( & entry -> lru_link )		27536	0					
ANR	27595	Callee	list_del		27536	0					
ANR	27596	Identifier	list_del		27536	0					
ANR	27597	ArgumentList	& entry -> lru_link		27536	1					
ANR	27598	Argument	& entry -> lru_link		27536	0					
ANR	27599	UnaryOperationExpression	& entry -> lru_link		27536	0					
ANR	27600	UnaryOperator	&		27536	0					
ANR	27601	PtrMemberAccess	entry -> lru_link		27536	1					
ANR	27602	Identifier	entry		27536	0					
ANR	27603	Identifier	lru_link		27536	1					
ANR	27604	ExpressionStatement	"hash_delete ( cached_dirfds , entry )"	141:2:3620:3654	27536	2	True				
ANR	27605	CallExpression	"hash_delete ( cached_dirfds , entry )"		27536	0					
ANR	27606	Callee	hash_delete		27536	0					
ANR	27607	Identifier	hash_delete		27536	0					
ANR	27608	ArgumentList	cached_dirfds		27536	1					
ANR	27609	Argument	cached_dirfds		27536	0					
ANR	27610	Identifier	cached_dirfds		27536	0					
ANR	27611	Argument	entry		27536	1					
ANR	27612	Identifier	entry		27536	0					
ANR	27613	ExpressionStatement	close ( entry -> fd )	142:2:3686:3703	27536	3	True				
ANR	27614	CallExpression	close ( entry -> fd )		27536	0					
ANR	27615	Callee	close		27536	0					
ANR	27616	Identifier	close		27536	0					
ANR	27617	ArgumentList	entry -> fd		27536	1					
ANR	27618	Argument	entry -> fd		27536	0					
ANR	27619	PtrMemberAccess	entry -> fd		27536	0					
ANR	27620	Identifier	entry		27536	0					
ANR	27621	Identifier	fd		27536	1					
ANR	27622	ExpressionStatement	free_cached_dirfd ( entry )	143:2:3707:3732	27536	4	True				
ANR	27623	CallExpression	free_cached_dirfd ( entry )		27536	0					
ANR	27624	Callee	free_cached_dirfd		27536	0					
ANR	27625	Identifier	free_cached_dirfd		27536	0					
ANR	27626	ArgumentList	entry		27536	1					
ANR	27627	Argument	entry		27536	0					
ANR	27628	Identifier	entry		27536	0					
ANR	27629	ReturnType	static void		27536	1					
ANR	27630	Identifier	remove_cached_dirfd		27536	2					
ANR	27631	ParameterList	struct cached_dirfd * entry		27536	3					
ANR	27632	Parameter	struct cached_dirfd * entry	130:33:3224:3249	27536	0	True				
ANR	27633	ParameterType	struct cached_dirfd *		27536	0					
ANR	27634	Identifier	entry		27536	1					
ANR	27635	CFGEntryNode	ENTRY		27536		True				
ANR	27636	CFGExitNode	EXIT		27536		True				
ANR	27637	Symbol	entry		27536						
ANR	27638	Symbol	& child -> children_link		27536						
ANR	27639	Symbol	& entry -> children		27536						
ANR	27640	Symbol	list_empty		27536						
ANR	27641	Symbol	entry -> fd		27536						
ANR	27642	Symbol	cached_dirfds		27536						
ANR	27643	Symbol	& entry -> lru_link		27536						
ANR	27644	Symbol	child		27536						
ANR	27645	Symbol	* entry		27536						
ANR	27646	Function	insert_cached_dirfd	146:0:3737:4478							
ANR	27647	FunctionDef	"insert_cached_dirfd (struct cached_dirfd * entry , int keepfd)"		27646	0					
ANR	27648	CompoundStatement		147:0:3810:4478	27646	0					
ANR	27649	IfStatement	if ( cached_dirfds == NULL )		27646	0					
ANR	27650	Condition	cached_dirfds == NULL	148:6:3818:3838	27646	0	True				
ANR	27651	EqualityExpression	cached_dirfds == NULL		27646	0		==			
ANR	27652	Identifier	cached_dirfds		27646	0					
ANR	27653	Identifier	NULL		27646	1					
ANR	27654	ExpressionStatement	init_dirfd_cache ( )	149:4:3845:3864	27646	1	True				
ANR	27655	CallExpression	init_dirfd_cache ( )		27646	0					
ANR	27656	Callee	init_dirfd_cache		27646	0					
ANR	27657	Identifier	init_dirfd_cache		27646	0					
ANR	27658	ArgumentList			27646	1					
ANR	27659	WhileStatement	while ( hash_get_n_entries ( cached_dirfds ) >= max_cached_fds )		27646	1					
ANR	27660	Condition	hash_get_n_entries ( cached_dirfds ) >= max_cached_fds	152:9:3925:3976	27646	0	True				
ANR	27661	RelationalExpression	hash_get_n_entries ( cached_dirfds ) >= max_cached_fds		27646	0		>=			
ANR	27662	CallExpression	hash_get_n_entries ( cached_dirfds )		27646	0					
ANR	27663	Callee	hash_get_n_entries		27646	0					
ANR	27664	Identifier	hash_get_n_entries		27646	0					
ANR	27665	ArgumentList	cached_dirfds		27646	1					
ANR	27666	Argument	cached_dirfds		27646	0					
ANR	27667	Identifier	cached_dirfds		27646	0					
ANR	27668	Identifier	max_cached_fds		27646	1					
ANR	27669	CompoundStatement		7:4:172:172	27646	1					
ANR	27670	Statement	struct	154:6:3991:3996	27646	0	True				
ANR	27671	Statement	cached_dirfd	154:13:3998:4009	27646	1	True				
ANR	27672	Statement	*	154:26:4011:4011	27646	2	True				
ANR	27673	Statement	last	154:27:4012:4015	27646	3	True				
ANR	27674	Statement	=	154:32:4017:4017	27646	4	True				
ANR	27675	Statement	list_entry	155:1:4020:4029	27646	5	True				
ANR	27676	Statement	(	155:12:4031:4031	27646	6	True				
ANR	27677	Statement	lru_list	155:13:4032:4039	27646	7	True				
ANR	27678	Statement	.	155:21:4040:4040	27646	8	True				
ANR	27679	Statement	prev	155:22:4041:4044	27646	9	True				
ANR	27680	Statement	","	155:26:4045:4045	27646	10	True				
ANR	27681	Statement	struct	155:28:4047:4052	27646	11	True				
ANR	27682	Statement	cached_dirfd	155:35:4054:4065	27646	12	True				
ANR	27683	Statement	","	155:47:4066:4066	27646	13	True				
ANR	27684	Statement	lru_link	155:49:4068:4075	27646	14	True				
ANR	27685	Statement	)	155:57:4076:4076	27646	15	True				
ANR	27686	ExpressionStatement		155:58:4077:4077	27646	16	True				
ANR	27687	IfStatement	if ( & last -> lru_link == & lru_list )		27646	17					
ANR	27688	Condition	& last -> lru_link == & lru_list	156:10:4089:4116	27646	0	True				
ANR	27689	EqualityExpression	& last -> lru_link == & lru_list		27646	0		==			
ANR	27690	UnaryOperationExpression	& last -> lru_link		27646	0					
ANR	27691	UnaryOperator	&		27646	0					
ANR	27692	PtrMemberAccess	last -> lru_link		27646	1					
ANR	27693	Identifier	last		27646	0					
ANR	27694	Identifier	lru_link		27646	1					
ANR	27695	UnaryOperationExpression	& lru_list		27646	1					
ANR	27696	UnaryOperator	&		27646	0					
ANR	27697	Identifier	lru_list		27646	1					
ANR	27698	BreakStatement	break ;	157:1:4120:4125	27646	1	True				
ANR	27699	IfStatement	if ( last -> fd == keepfd )		27646	18					
ANR	27700	Condition	last -> fd == keepfd	158:10:4137:4154	27646	0	True				
ANR	27701	EqualityExpression	last -> fd == keepfd		27646	0		==			
ANR	27702	PtrMemberAccess	last -> fd		27646	0					
ANR	27703	Identifier	last		27646	0					
ANR	27704	Identifier	fd		27646	1					
ANR	27705	Identifier	keepfd		27646	1					
ANR	27706	CompoundStatement		13:1:347:347	27646	1					
ANR	27707	Statement	last	160:3:4163:4166	27646	0	True				
ANR	27708	Statement	=	160:8:4168:4168	27646	1	True				
ANR	27709	Statement	list_entry	160:10:4170:4179	27646	2	True				
ANR	27710	Statement	(	160:21:4181:4181	27646	3	True				
ANR	27711	Statement	last	160:22:4182:4185	27646	4	True				
ANR	27712	Statement	->	160:26:4186:4187	27646	5	True				
ANR	27713	Statement	lru_link	160:28:4188:4195	27646	6	True				
ANR	27714	Statement	.	160:36:4196:4196	27646	7	True				
ANR	27715	Statement	prev	160:37:4197:4200	27646	8	True				
ANR	27716	Statement	","	160:41:4201:4201	27646	9	True				
ANR	27717	Statement	struct	160:43:4203:4208	27646	10	True				
ANR	27718	Statement	cached_dirfd	160:50:4210:4221	27646	11	True				
ANR	27719	Statement	","	160:62:4222:4222	27646	12	True				
ANR	27720	Statement	lru_link	160:64:4224:4231	27646	13	True				
ANR	27721	Statement	)	160:72:4232:4232	27646	14	True				
ANR	27722	ExpressionStatement		160:73:4233:4233	27646	15	True				
ANR	27723	IfStatement	if ( & last -> lru_link == & lru_list )		27646	16					
ANR	27724	Condition	& last -> lru_link == & lru_list	161:7:4242:4269	27646	0	True				
ANR	27725	EqualityExpression	& last -> lru_link == & lru_list		27646	0		==			
ANR	27726	UnaryOperationExpression	& last -> lru_link		27646	0					
ANR	27727	UnaryOperator	&		27646	0					
ANR	27728	PtrMemberAccess	last -> lru_link		27646	1					
ANR	27729	Identifier	last		27646	0					
ANR	27730	Identifier	lru_link		27646	1					
ANR	27731	UnaryOperationExpression	& lru_list		27646	1					
ANR	27732	UnaryOperator	&		27646	0					
ANR	27733	Identifier	lru_list		27646	1					
ANR	27734	BreakStatement	break ;	162:5:4277:4282	27646	1	True				
ANR	27735	ExpressionStatement	remove_cached_dirfd ( last )	164:6:4293:4319	27646	19	True				
ANR	27736	CallExpression	remove_cached_dirfd ( last )		27646	0					
ANR	27737	Callee	remove_cached_dirfd		27646	0					
ANR	27738	Identifier	remove_cached_dirfd		27646	0					
ANR	27739	ArgumentList	last		27646	1					
ANR	27740	Argument	last		27646	0					
ANR	27741	Identifier	last		27646	0					
ANR	27742	IfStatement	if ( ! list_empty ( & entry -> children_link ) )		27646	2					
ANR	27743	Condition	! list_empty ( & entry -> children_link )	168:6:4382:4417	27646	0	True				
ANR	27744	UnaryOperationExpression	! list_empty ( & entry -> children_link )		27646	0					
ANR	27745	UnaryOperator	!		27646	0					
ANR	27746	CallExpression	list_empty ( & entry -> children_link )		27646	1					
ANR	27747	Callee	list_empty		27646	0					
ANR	27748	Identifier	list_empty		27646	0					
ANR	27749	ArgumentList	& entry -> children_link		27646	1					
ANR	27750	Argument	& entry -> children_link		27646	0					
ANR	27751	UnaryOperationExpression	& entry -> children_link		27646	0					
ANR	27752	UnaryOperator	&		27646	0					
ANR	27753	PtrMemberAccess	entry -> children_link		27646	1					
ANR	27754	Identifier	entry		27646	0					
ANR	27755	Identifier	children_link		27646	1					
ANR	27756	ExpressionStatement	"assert ( hash_insert ( cached_dirfds , entry ) == entry )"	169:4:4424:4476	27646	1	True				
ANR	27757	CallExpression	"assert ( hash_insert ( cached_dirfds , entry ) == entry )"		27646	0					
ANR	27758	Callee	assert		27646	0					
ANR	27759	Identifier	assert		27646	0					
ANR	27760	ArgumentList	"hash_insert ( cached_dirfds , entry ) == entry"		27646	1					
ANR	27761	Argument	"hash_insert ( cached_dirfds , entry ) == entry"		27646	0					
ANR	27762	EqualityExpression	"hash_insert ( cached_dirfds , entry ) == entry"		27646	0		==			
ANR	27763	CallExpression	"hash_insert ( cached_dirfds , entry )"		27646	0					
ANR	27764	Callee	hash_insert		27646	0					
ANR	27765	Identifier	hash_insert		27646	0					
ANR	27766	ArgumentList	cached_dirfds		27646	1					
ANR	27767	Argument	cached_dirfds		27646	0					
ANR	27768	Identifier	cached_dirfds		27646	0					
ANR	27769	Argument	entry		27646	1					
ANR	27770	Identifier	entry		27646	0					
ANR	27771	Identifier	entry		27646	1					
ANR	27772	ReturnType	static void		27646	1					
ANR	27773	Identifier	insert_cached_dirfd		27646	2					
ANR	27774	ParameterList	"struct cached_dirfd * entry , int keepfd"		27646	3					
ANR	27775	Parameter	struct cached_dirfd * entry	146:33:3770:3795	27646	0	True				
ANR	27776	ParameterType	struct cached_dirfd *		27646	0					
ANR	27777	Identifier	entry		27646	1					
ANR	27778	Parameter	int keepfd	146:61:3798:3807	27646	1	True				
ANR	27779	ParameterType	int		27646	0					
ANR	27780	Identifier	keepfd		27646	1					
ANR	27781	CFGEntryNode	ENTRY		27646		True				
ANR	27782	CFGExitNode	EXIT		27646		True				
ANR	27783	Symbol	& last -> lru_link		27646						
ANR	27784	Symbol	NULL		27646						
ANR	27785	Symbol	max_cached_fds		27646						
ANR	27786	Symbol	last		27646						
ANR	27787	Symbol	& lru_list		27646						
ANR	27788	Symbol	hash_get_n_entries		27646						
ANR	27789	Symbol	list_empty		27646						
ANR	27790	Symbol	cached_dirfds		27646						
ANR	27791	Symbol	* last		27646						
ANR	27792	Symbol	entry		27646						
ANR	27793	Symbol	keepfd		27646						
ANR	27794	Symbol	last -> fd		27646						
ANR	27795	Symbol	& entry -> children_link		27646						
ANR	27796	Symbol	hash_insert		27646						
ANR	27797	Function	invalidate_cached_dirfd	172:0:4481:4782							
ANR	27798	FunctionDef	"invalidate_cached_dirfd (int dirfd , const char * name)"		27797	0					
ANR	27799	CompoundStatement		173:0:4547:4782	27797	0					
ANR	27800	IdentifierDeclStatement	"struct cached_dirfd dir , key , * entry ;"	174:2:4551:4587	27797	0	True				
ANR	27801	IdentifierDecl	dir		27797	0					
ANR	27802	IdentifierDeclType	struct cached_dirfd		27797	0					
ANR	27803	Identifier	dir		27797	1					
ANR	27804	IdentifierDecl	key		27797	1					
ANR	27805	IdentifierDeclType	struct cached_dirfd		27797	0					
ANR	27806	Identifier	key		27797	1					
ANR	27807	IdentifierDecl	* entry		27797	2					
ANR	27808	IdentifierDeclType	struct cached_dirfd *		27797	0					
ANR	27809	Identifier	entry		27797	1					
ANR	27810	IfStatement	if ( ! cached_dirfds )		27797	1					
ANR	27811	Condition	! cached_dirfds	175:6:4595:4608	27797	0	True				
ANR	27812	UnaryOperationExpression	! cached_dirfds		27797	0					
ANR	27813	UnaryOperator	!		27797	0					
ANR	27814	Identifier	cached_dirfds		27797	1					
ANR	27815	ReturnStatement	return ;	176:4:4615:4621	27797	1	True				
ANR	27816	ExpressionStatement	dir . fd = dirfd	178:2:4626:4640	27797	2	True				
ANR	27817	AssignmentExpression	dir . fd = dirfd		27797	0		=			
ANR	27818	MemberAccess	dir . fd		27797	0					
ANR	27819	Identifier	dir		27797	0					
ANR	27820	Identifier	fd		27797	1					
ANR	27821	Identifier	dirfd		27797	1					
ANR	27822	ExpressionStatement	key . parent = & dir	179:2:4644:4661	27797	3	True				
ANR	27823	AssignmentExpression	key . parent = & dir		27797	0		=			
ANR	27824	MemberAccess	key . parent		27797	0					
ANR	27825	Identifier	key		27797	0					
ANR	27826	Identifier	parent		27797	1					
ANR	27827	UnaryOperationExpression	& dir		27797	1					
ANR	27828	UnaryOperator	&		27797	0					
ANR	27829	Identifier	dir		27797	1					
ANR	27830	ExpressionStatement	key . name = ( char * ) name	180:2:4665:4689	27797	4	True				
ANR	27831	AssignmentExpression	key . name = ( char * ) name		27797	0		=			
ANR	27832	MemberAccess	key . name		27797	0					
ANR	27833	Identifier	key		27797	0					
ANR	27834	Identifier	name		27797	1					
ANR	27835	CastExpression	( char * ) name		27797	1					
ANR	27836	CastTarget	char *		27797	0					
ANR	27837	Identifier	name		27797	1					
ANR	27838	ExpressionStatement	"entry = hash_lookup ( cached_dirfds , & key )"	181:2:4693:4734	27797	5	True				
ANR	27839	AssignmentExpression	"entry = hash_lookup ( cached_dirfds , & key )"		27797	0		=			
ANR	27840	Identifier	entry		27797	0					
ANR	27841	CallExpression	"hash_lookup ( cached_dirfds , & key )"		27797	1					
ANR	27842	Callee	hash_lookup		27797	0					
ANR	27843	Identifier	hash_lookup		27797	0					
ANR	27844	ArgumentList	cached_dirfds		27797	1					
ANR	27845	Argument	cached_dirfds		27797	0					
ANR	27846	Identifier	cached_dirfds		27797	0					
ANR	27847	Argument	& key		27797	1					
ANR	27848	UnaryOperationExpression	& key		27797	0					
ANR	27849	UnaryOperator	&		27797	0					
ANR	27850	Identifier	key		27797	1					
ANR	27851	IfStatement	if ( entry )		27797	6					
ANR	27852	Condition	entry	182:6:4742:4746	27797	0	True				
ANR	27853	Identifier	entry		27797	0					
ANR	27854	ExpressionStatement	remove_cached_dirfd ( entry )	183:4:4753:4780	27797	1	True				
ANR	27855	CallExpression	remove_cached_dirfd ( entry )		27797	0					
ANR	27856	Callee	remove_cached_dirfd		27797	0					
ANR	27857	Identifier	remove_cached_dirfd		27797	0					
ANR	27858	ArgumentList	entry		27797	1					
ANR	27859	Argument	entry		27797	0					
ANR	27860	Identifier	entry		27797	0					
ANR	27861	ReturnType	static void		27797	1					
ANR	27862	Identifier	invalidate_cached_dirfd		27797	2					
ANR	27863	ParameterList	"int dirfd , const char * name"		27797	3					
ANR	27864	Parameter	int dirfd	172:37:4518:4526	27797	0	True				
ANR	27865	ParameterType	int		27797	0					
ANR	27866	Identifier	dirfd		27797	1					
ANR	27867	Parameter	const char * name	172:48:4529:4544	27797	1	True				
ANR	27868	ParameterType	const char *		27797	0					
ANR	27869	Identifier	name		27797	1					
ANR	27870	CFGEntryNode	ENTRY		27797		True				
ANR	27871	CFGExitNode	EXIT		27797		True				
ANR	27872	Symbol	entry		27797						
ANR	27873	Symbol	& key		27797						
ANR	27874	Symbol	key . name		27797						
ANR	27875	Symbol	& dir		27797						
ANR	27876	Symbol	dir . fd		27797						
ANR	27877	Symbol	name		27797						
ANR	27878	Symbol	dirfd		27797						
ANR	27879	Symbol	key . parent		27797						
ANR	27880	Symbol	hash_lookup		27797						
ANR	27881	Symbol	dir		27797						
ANR	27882	Symbol	cached_dirfds		27797						
ANR	27883	Symbol	key		27797						
ANR	27884	Function	put_path	188:0:4888:5151							
ANR	27885	FunctionDef	put_path (struct cached_dirfd * entry)		27884	0					
ANR	27886	CompoundStatement		189:0:4937:5151	27884	0					
ANR	27887	IdentifierDeclStatement	int fd = entry -> fd ;	190:2:4941:4959	27884	0	True				
ANR	27888	IdentifierDecl	fd = entry -> fd		27884	0					
ANR	27889	IdentifierDeclType	int		27884	0					
ANR	27890	Identifier	fd		27884	1					
ANR	27891	AssignmentExpression	fd = entry -> fd		27884	2		=			
ANR	27892	Identifier	fd		27884	0					
ANR	27893	PtrMemberAccess	entry -> fd		27884	1					
ANR	27894	Identifier	entry		27884	0					
ANR	27895	Identifier	fd		27884	1					
ANR	27896	WhileStatement	while ( entry )		27884	1					
ANR	27897	Condition	entry	192:9:4971:4975	27884	0	True				
ANR	27898	Identifier	entry		27884	0					
ANR	27899	CompoundStatement		6:6:52:95	27884	1					
ANR	27900	IdentifierDeclStatement	struct cached_dirfd * parent = entry -> parent ;	194:6:4990:5033	27884	0	True				
ANR	27901	IdentifierDecl	* parent = entry -> parent		27884	0					
ANR	27902	IdentifierDeclType	struct cached_dirfd *		27884	0					
ANR	27903	Identifier	parent		27884	1					
ANR	27904	AssignmentExpression	* parent = entry -> parent		27884	2		=			
ANR	27905	Identifier	parent		27884	0					
ANR	27906	PtrMemberAccess	entry -> parent		27884	1					
ANR	27907	Identifier	entry		27884	0					
ANR	27908	Identifier	parent		27884	1					
ANR	27909	IfStatement	if ( ! parent )		27884	1					
ANR	27910	Condition	! parent	195:10:5045:5052	27884	0	True				
ANR	27911	UnaryOperationExpression	! parent		27884	0					
ANR	27912	UnaryOperator	!		27884	0					
ANR	27913	Identifier	parent		27884	1					
ANR	27914	BreakStatement	break ;	196:1:5056:5061	27884	1	True				
ANR	27915	ExpressionStatement	"list_add ( & entry -> lru_link , & lru_list )"	197:6:5069:5107	27884	2	True				
ANR	27916	CallExpression	"list_add ( & entry -> lru_link , & lru_list )"		27884	0					
ANR	27917	Callee	list_add		27884	0					
ANR	27918	Identifier	list_add		27884	0					
ANR	27919	ArgumentList	& entry -> lru_link		27884	1					
ANR	27920	Argument	& entry -> lru_link		27884	0					
ANR	27921	UnaryOperationExpression	& entry -> lru_link		27884	0					
ANR	27922	UnaryOperator	&		27884	0					
ANR	27923	PtrMemberAccess	entry -> lru_link		27884	1					
ANR	27924	Identifier	entry		27884	0					
ANR	27925	Identifier	lru_link		27884	1					
ANR	27926	Argument	& lru_list		27884	1					
ANR	27927	UnaryOperationExpression	& lru_list		27884	0					
ANR	27928	UnaryOperator	&		27884	0					
ANR	27929	Identifier	lru_list		27884	1					
ANR	27930	ExpressionStatement	entry = parent	198:6:5115:5129	27884	3	True				
ANR	27931	AssignmentExpression	entry = parent		27884	0		=			
ANR	27932	Identifier	entry		27884	0					
ANR	27933	Identifier	parent		27884	1					
ANR	27934	ReturnStatement	return fd ;	201:2:5140:5149	27884	2	True				
ANR	27935	Identifier	fd		27884	0					
ANR	27936	ReturnType	static int		27884	1					
ANR	27937	Identifier	put_path		27884	2					
ANR	27938	ParameterList	struct cached_dirfd * entry		27884	3					
ANR	27939	Parameter	struct cached_dirfd * entry	188:21:4909:4934	27884	0	True				
ANR	27940	ParameterType	struct cached_dirfd *		27884	0					
ANR	27941	Identifier	entry		27884	1					
ANR	27942	CFGEntryNode	ENTRY		27884		True				
ANR	27943	CFGExitNode	EXIT		27884		True				
ANR	27944	Symbol	entry		27884						
ANR	27945	Symbol	parent		27884						
ANR	27946	Symbol	& lru_list		27884						
ANR	27947	Symbol	entry -> fd		27884						
ANR	27948	Symbol	entry -> parent		27884						
ANR	27949	Symbol	fd		27884						
ANR	27950	Symbol	& entry -> lru_link		27884						
ANR	27951	Symbol	* entry		27884						
ANR	27952	Function	new_cached_dirfd	204:0:5154:5541							
ANR	27953	FunctionDef	"new_cached_dirfd (struct cached_dirfd * dir , const char * name , int fd)"		27952	0					
ANR	27954	CompoundStatement		205:0:5252:5541	27952	0					
ANR	27955	IdentifierDeclStatement	struct cached_dirfd * entry = xmalloc ( sizeof ( struct cached_dirfd ) ) ;	206:2:5256:5323	27952	0	True				
ANR	27956	IdentifierDecl	* entry = xmalloc ( sizeof ( struct cached_dirfd ) )		27952	0					
ANR	27957	IdentifierDeclType	struct cached_dirfd *		27952	0					
ANR	27958	Identifier	entry		27952	1					
ANR	27959	AssignmentExpression	* entry = xmalloc ( sizeof ( struct cached_dirfd ) )		27952	2		=			
ANR	27960	Identifier	entry		27952	0					
ANR	27961	CallExpression	xmalloc ( sizeof ( struct cached_dirfd ) )		27952	1					
ANR	27962	Callee	xmalloc		27952	0					
ANR	27963	Identifier	xmalloc		27952	0					
ANR	27964	ArgumentList	sizeof ( struct cached_dirfd )		27952	1					
ANR	27965	Argument	sizeof ( struct cached_dirfd )		27952	0					
ANR	27966	SizeofExpression	sizeof ( struct cached_dirfd )		27952	0					
ANR	27967	Sizeof	sizeof		27952	0					
ANR	27968	SizeofOperand	struct cached_dirfd		27952	1					
ANR	27969	ExpressionStatement	INIT_LIST_HEAD ( & entry -> lru_link )	208:2:5328:5361	27952	1	True				
ANR	27970	CallExpression	INIT_LIST_HEAD ( & entry -> lru_link )		27952	0					
ANR	27971	Callee	INIT_LIST_HEAD		27952	0					
ANR	27972	Identifier	INIT_LIST_HEAD		27952	0					
ANR	27973	ArgumentList	& entry -> lru_link		27952	1					
ANR	27974	Argument	& entry -> lru_link		27952	0					
ANR	27975	UnaryOperationExpression	& entry -> lru_link		27952	0					
ANR	27976	UnaryOperator	&		27952	0					
ANR	27977	PtrMemberAccess	entry -> lru_link		27952	1					
ANR	27978	Identifier	entry		27952	0					
ANR	27979	Identifier	lru_link		27952	1					
ANR	27980	ExpressionStatement	"list_add ( & entry -> children_link , & dir -> children )"	209:2:5365:5413	27952	2	True				
ANR	27981	CallExpression	"list_add ( & entry -> children_link , & dir -> children )"		27952	0					
ANR	27982	Callee	list_add		27952	0					
ANR	27983	Identifier	list_add		27952	0					
ANR	27984	ArgumentList	& entry -> children_link		27952	1					
ANR	27985	Argument	& entry -> children_link		27952	0					
ANR	27986	UnaryOperationExpression	& entry -> children_link		27952	0					
ANR	27987	UnaryOperator	&		27952	0					
ANR	27988	PtrMemberAccess	entry -> children_link		27952	1					
ANR	27989	Identifier	entry		27952	0					
ANR	27990	Identifier	children_link		27952	1					
ANR	27991	Argument	& dir -> children		27952	1					
ANR	27992	UnaryOperationExpression	& dir -> children		27952	0					
ANR	27993	UnaryOperator	&		27952	0					
ANR	27994	PtrMemberAccess	dir -> children		27952	1					
ANR	27995	Identifier	dir		27952	0					
ANR	27996	Identifier	children		27952	1					
ANR	27997	ExpressionStatement	INIT_LIST_HEAD ( & entry -> children )	210:2:5417:5450	27952	3	True				
ANR	27998	CallExpression	INIT_LIST_HEAD ( & entry -> children )		27952	0					
ANR	27999	Callee	INIT_LIST_HEAD		27952	0					
ANR	28000	Identifier	INIT_LIST_HEAD		27952	0					
ANR	28001	ArgumentList	& entry -> children		27952	1					
ANR	28002	Argument	& entry -> children		27952	0					
ANR	28003	UnaryOperationExpression	& entry -> children		27952	0					
ANR	28004	UnaryOperator	&		27952	0					
ANR	28005	PtrMemberAccess	entry -> children		27952	1					
ANR	28006	Identifier	entry		27952	0					
ANR	28007	Identifier	children		27952	1					
ANR	28008	ExpressionStatement	entry -> parent = dir	211:2:5454:5473	27952	4	True				
ANR	28009	AssignmentExpression	entry -> parent = dir		27952	0		=			
ANR	28010	PtrMemberAccess	entry -> parent		27952	0					
ANR	28011	Identifier	entry		27952	0					
ANR	28012	Identifier	parent		27952	1					
ANR	28013	Identifier	dir		27952	1					
ANR	28014	ExpressionStatement	entry -> name = xstrdup ( name )	212:2:5477:5505	27952	5	True				
ANR	28015	AssignmentExpression	entry -> name = xstrdup ( name )		27952	0		=			
ANR	28016	PtrMemberAccess	entry -> name		27952	0					
ANR	28017	Identifier	entry		27952	0					
ANR	28018	Identifier	name		27952	1					
ANR	28019	CallExpression	xstrdup ( name )		27952	1					
ANR	28020	Callee	xstrdup		27952	0					
ANR	28021	Identifier	xstrdup		27952	0					
ANR	28022	ArgumentList	name		27952	1					
ANR	28023	Argument	name		27952	0					
ANR	28024	Identifier	name		27952	0					
ANR	28025	ExpressionStatement	entry -> fd = fd	213:2:5509:5523	27952	6	True				
ANR	28026	AssignmentExpression	entry -> fd = fd		27952	0		=			
ANR	28027	PtrMemberAccess	entry -> fd		27952	0					
ANR	28028	Identifier	entry		27952	0					
ANR	28029	Identifier	fd		27952	1					
ANR	28030	Identifier	fd		27952	1					
ANR	28031	ReturnStatement	return entry ;	214:2:5527:5539	27952	7	True				
ANR	28032	Identifier	entry		27952	0					
ANR	28033	ReturnType	static struct cached_dirfd *		27952	1					
ANR	28034	Identifier	new_cached_dirfd		27952	2					
ANR	28035	ParameterList	"struct cached_dirfd * dir , const char * name , int fd"		27952	3					
ANR	28036	Parameter	struct cached_dirfd * dir	204:46:5200:5223	27952	0	True				
ANR	28037	ParameterType	struct cached_dirfd *		27952	0					
ANR	28038	Identifier	dir		27952	1					
ANR	28039	Parameter	const char * name	204:72:5226:5241	27952	1	True				
ANR	28040	ParameterType	const char *		27952	0					
ANR	28041	Identifier	name		27952	1					
ANR	28042	Parameter	int fd	204:90:5244:5249	27952	2	True				
ANR	28043	ParameterType	int		27952	0					
ANR	28044	Identifier	fd		27952	1					
ANR	28045	CFGEntryNode	ENTRY		27952		True				
ANR	28046	CFGExitNode	EXIT		27952		True				
ANR	28047	Symbol	& dir -> children		27952						
ANR	28048	Symbol	& entry -> children		27952						
ANR	28049	Symbol	xstrdup		27952						
ANR	28050	Symbol	entry -> parent		27952						
ANR	28051	Symbol	entry -> fd		27952						
ANR	28052	Symbol	dir		27952						
ANR	28053	Symbol	entry		27952						
ANR	28054	Symbol	xmalloc		27952						
ANR	28055	Symbol	name		27952						
ANR	28056	Symbol	entry -> name		27952						
ANR	28057	Symbol	& entry -> children_link		27952						
ANR	28058	Symbol	fd		27952						
ANR	28059	Symbol	& entry -> lru_link		27952						
ANR	28060	Symbol	* entry		27952						
ANR	28061	Function	openat_cached	217:0:5544:6221							
ANR	28062	FunctionDef	"openat_cached (struct cached_dirfd * dir , const char * name , int keepfd)"		28061	0					
ANR	28063	CompoundStatement		218:0:5643:6221	28061	0					
ANR	28064	IdentifierDeclStatement	int fd ;	219:2:5647:5653	28061	0	True				
ANR	28065	IdentifierDecl	fd		28061	0					
ANR	28066	IdentifierDeclType	int		28061	0					
ANR	28067	Identifier	fd		28061	1					
ANR	28068	IdentifierDeclStatement	"struct cached_dirfd * entry = lookup_cached_dirfd ( dir , name ) ;"	220:2:5657:5717	28061	1	True				
ANR	28069	IdentifierDecl	"* entry = lookup_cached_dirfd ( dir , name )"		28061	0					
ANR	28070	IdentifierDeclType	struct cached_dirfd *		28061	0					
ANR	28071	Identifier	entry		28061	1					
ANR	28072	AssignmentExpression	"* entry = lookup_cached_dirfd ( dir , name )"		28061	2		=			
ANR	28073	Identifier	entry		28061	0					
ANR	28074	CallExpression	"lookup_cached_dirfd ( dir , name )"		28061	1					
ANR	28075	Callee	lookup_cached_dirfd		28061	0					
ANR	28076	Identifier	lookup_cached_dirfd		28061	0					
ANR	28077	ArgumentList	dir		28061	1					
ANR	28078	Argument	dir		28061	0					
ANR	28079	Identifier	dir		28061	0					
ANR	28080	Argument	name		28061	1					
ANR	28081	Identifier	name		28061	0					
ANR	28082	IfStatement	if ( entry )		28061	2					
ANR	28083	Condition	entry	222:6:5726:5730	28061	0	True				
ANR	28084	Identifier	entry		28061	0					
ANR	28085	CompoundStatement		6:4:93:93	28061	1					
ANR	28086	ExpressionStatement	list_del_init ( & entry -> lru_link )	224:6:5745:5777	28061	0	True				
ANR	28087	CallExpression	list_del_init ( & entry -> lru_link )		28061	0					
ANR	28088	Callee	list_del_init		28061	0					
ANR	28089	Identifier	list_del_init		28061	0					
ANR	28090	ArgumentList	& entry -> lru_link		28061	1					
ANR	28091	Argument	& entry -> lru_link		28061	0					
ANR	28092	UnaryOperationExpression	& entry -> lru_link		28061	0					
ANR	28093	UnaryOperator	&		28061	0					
ANR	28094	PtrMemberAccess	entry -> lru_link		28061	1					
ANR	28095	Identifier	entry		28061	0					
ANR	28096	Identifier	lru_link		28061	1					
ANR	28097	GotoStatement	goto out ;	226:6:5837:5845	28061	1	True				
ANR	28098	Identifier	out		28061	0					
ANR	28099	ExpressionStatement	dirfd_cache_misses ++	228:2:5855:5875	28061	3	True				
ANR	28100	PostIncDecOperationExpression	dirfd_cache_misses ++		28061	0					
ANR	28101	Identifier	dirfd_cache_misses		28061	0					
ANR	28102	IncDec	++		28061	1					
ANR	28103	ExpressionStatement	"fd = openat ( dir -> fd , name , O_DIRECTORY | O_NOFOLLOW )"	232:2:5970:6023	28061	4	True				
ANR	28104	AssignmentExpression	"fd = openat ( dir -> fd , name , O_DIRECTORY | O_NOFOLLOW )"		28061	0		=			
ANR	28105	Identifier	fd		28061	0					
ANR	28106	CallExpression	"openat ( dir -> fd , name , O_DIRECTORY | O_NOFOLLOW )"		28061	1					
ANR	28107	Callee	openat		28061	0					
ANR	28108	Identifier	openat		28061	0					
ANR	28109	ArgumentList	dir -> fd		28061	1					
ANR	28110	Argument	dir -> fd		28061	0					
ANR	28111	PtrMemberAccess	dir -> fd		28061	0					
ANR	28112	Identifier	dir		28061	0					
ANR	28113	Identifier	fd		28061	1					
ANR	28114	Argument	name		28061	1					
ANR	28115	Identifier	name		28061	0					
ANR	28116	Argument	O_DIRECTORY | O_NOFOLLOW		28061	2					
ANR	28117	InclusiveOrExpression	O_DIRECTORY | O_NOFOLLOW		28061	0		|			
ANR	28118	Identifier	O_DIRECTORY		28061	0					
ANR	28119	Identifier	O_NOFOLLOW		28061	1					
ANR	28120	IfStatement	if ( fd < 0 )		28061	5					
ANR	28121	Condition	fd < 0	235:6:6060:6065	28061	0	True				
ANR	28122	RelationalExpression	fd < 0		28061	0		<			
ANR	28123	Identifier	fd		28061	0					
ANR	28124	PrimaryExpression	0		28061	1					
ANR	28125	ReturnStatement	return NULL ;	236:4:6072:6083	28061	1	True				
ANR	28126	Identifier	NULL		28061	0					
ANR	28127	ExpressionStatement	"entry = new_cached_dirfd ( dir , name , fd )"	239:2:6118:6158	28061	6	True				
ANR	28128	AssignmentExpression	"entry = new_cached_dirfd ( dir , name , fd )"		28061	0		=			
ANR	28129	Identifier	entry		28061	0					
ANR	28130	CallExpression	"new_cached_dirfd ( dir , name , fd )"		28061	1					
ANR	28131	Callee	new_cached_dirfd		28061	0					
ANR	28132	Identifier	new_cached_dirfd		28061	0					
ANR	28133	ArgumentList	dir		28061	1					
ANR	28134	Argument	dir		28061	0					
ANR	28135	Identifier	dir		28061	0					
ANR	28136	Argument	name		28061	1					
ANR	28137	Identifier	name		28061	0					
ANR	28138	Argument	fd		28061	2					
ANR	28139	Identifier	fd		28061	0					
ANR	28140	ExpressionStatement	"insert_cached_dirfd ( entry , keepfd )"	240:2:6162:6197	28061	7	True				
ANR	28141	CallExpression	"insert_cached_dirfd ( entry , keepfd )"		28061	0					
ANR	28142	Callee	insert_cached_dirfd		28061	0					
ANR	28143	Identifier	insert_cached_dirfd		28061	0					
ANR	28144	ArgumentList	entry		28061	1					
ANR	28145	Argument	entry		28061	0					
ANR	28146	Identifier	entry		28061	0					
ANR	28147	Argument	keepfd		28061	1					
ANR	28148	Identifier	keepfd		28061	0					
ANR	28149	Label	out :	242:0:6200:6203	28061	8	True				
ANR	28150	Identifier	out		28061	0					
ANR	28151	ReturnStatement	return entry ;	243:2:6207:6219	28061	9	True				
ANR	28152	Identifier	entry		28061	0					
ANR	28153	ReturnType	static struct cached_dirfd *		28061	1					
ANR	28154	Identifier	openat_cached		28061	2					
ANR	28155	ParameterList	"struct cached_dirfd * dir , const char * name , int keepfd"		28061	3					
ANR	28156	Parameter	struct cached_dirfd * dir	217:43:5587:5610	28061	0	True				
ANR	28157	ParameterType	struct cached_dirfd *		28061	0					
ANR	28158	Identifier	dir		28061	1					
ANR	28159	Parameter	const char * name	217:69:5613:5628	28061	1	True				
ANR	28160	ParameterType	const char *		28061	0					
ANR	28161	Identifier	name		28061	1					
ANR	28162	Parameter	int keepfd	217:87:5631:5640	28061	2	True				
ANR	28163	ParameterType	int		28061	0					
ANR	28164	Identifier	keepfd		28061	1					
ANR	28165	CFGEntryNode	ENTRY		28061		True				
ANR	28166	CFGExitNode	EXIT		28061		True				
ANR	28167	Symbol	lookup_cached_dirfd		28061						
ANR	28168	Symbol	NULL		28061						
ANR	28169	Symbol	dirfd_cache_misses		28061						
ANR	28170	Symbol	O_NOFOLLOW		28061						
ANR	28171	Symbol	* dir		28061						
ANR	28172	Symbol	dir		28061						
ANR	28173	Symbol	entry		28061						
ANR	28174	Symbol	O_DIRECTORY		28061						
ANR	28175	Symbol	new_cached_dirfd		28061						
ANR	28176	Symbol	dir -> fd		28061						
ANR	28177	Symbol	keepfd		28061						
ANR	28178	Symbol	name		28061						
ANR	28179	Symbol	fd		28061						
ANR	28180	Symbol	& entry -> lru_link		28061						
ANR	28181	Symbol	openat		28061						
ANR	28182	Function	count_path_components	247:0:6243:6567							
ANR	28183	FunctionDef	count_path_components (const char * path)		28182	0					
ANR	28184	CompoundStatement		248:0:6304:6567	28182	0					
ANR	28185	IdentifierDeclStatement	unsigned int components ;	249:2:6308:6331	28182	0	True				
ANR	28186	IdentifierDecl	components		28182	0					
ANR	28187	IdentifierDeclType	unsigned int		28182	0					
ANR	28188	Identifier	components		28182	1					
ANR	28189	WhileStatement	while ( ISSLASH ( * path ) )		28182	1					
ANR	28190	Condition	ISSLASH ( * path )	251:9:6343:6357	28182	0	True				
ANR	28191	CallExpression	ISSLASH ( * path )		28182	0					
ANR	28192	Callee	ISSLASH		28182	0					
ANR	28193	Identifier	ISSLASH		28182	0					
ANR	28194	ArgumentList	* path		28182	1					
ANR	28195	Argument	* path		28182	0					
ANR	28196	UnaryOperationExpression	* path		28182	0					
ANR	28197	UnaryOperator	*		28182	0					
ANR	28198	Identifier	path		28182	1					
ANR	28199	ExpressionStatement	path ++	252:4:6364:6370	28182	1	True				
ANR	28200	PostIncDecOperationExpression	path ++		28182	0					
ANR	28201	Identifier	path		28182	0					
ANR	28202	IncDec	++		28182	1					
ANR	28203	IfStatement	if ( ! * path )		28182	2					
ANR	28204	Condition	! * path	253:6:6378:6384	28182	0	True				
ANR	28205	UnaryOperationExpression	! * path		28182	0					
ANR	28206	UnaryOperator	!		28182	0					
ANR	28207	UnaryOperationExpression	* path		28182	1					
ANR	28208	UnaryOperator	*		28182	0					
ANR	28209	Identifier	path		28182	1					
ANR	28210	ReturnStatement	return 1 ;	254:4:6391:6399	28182	1	True				
ANR	28211	PrimaryExpression	1		28182	0					
ANR	28212	ForStatement	for ( components = 0 ; * path ; components ++ )		28182	3					
ANR	28213	ForInit	components = 0 ;	255:7:6408:6422	28182	0	True				
ANR	28214	AssignmentExpression	components = 0		28182	0		=			
ANR	28215	Identifier	components		28182	0					
ANR	28216	PrimaryExpression	0		28182	1					
ANR	28217	Condition	* path	255:23:6424:6428	28182	1	True				
ANR	28218	UnaryOperationExpression	* path		28182	0					
ANR	28219	UnaryOperator	*		28182	0					
ANR	28220	Identifier	path		28182	1					
ANR	28221	PostIncDecOperationExpression	components ++	255:30:6431:6442	28182	2	True				
ANR	28222	Identifier	components		28182	0					
ANR	28223	IncDec	++		28182	1					
ANR	28224	CompoundStatement		9:4:144:144	28182	3					
ANR	28225	WhileStatement	while ( * path && ! ISSLASH ( * path ) )		28182	0					
ANR	28226	Condition	* path && ! ISSLASH ( * path )	257:13:6464:6489	28182	0	True				
ANR	28227	AndExpression	* path && ! ISSLASH ( * path )		28182	0		&&			
ANR	28228	UnaryOperationExpression	* path		28182	0					
ANR	28229	UnaryOperator	*		28182	0					
ANR	28230	Identifier	path		28182	1					
ANR	28231	UnaryOperationExpression	! ISSLASH ( * path )		28182	1					
ANR	28232	UnaryOperator	!		28182	0					
ANR	28233	CallExpression	ISSLASH ( * path )		28182	1					
ANR	28234	Callee	ISSLASH		28182	0					
ANR	28235	Identifier	ISSLASH		28182	0					
ANR	28236	ArgumentList	* path		28182	1					
ANR	28237	Argument	* path		28182	0					
ANR	28238	UnaryOperationExpression	* path		28182	0					
ANR	28239	UnaryOperator	*		28182	0					
ANR	28240	Identifier	path		28182	1					
ANR	28241	ExpressionStatement	path ++	258:1:6493:6499	28182	1	True				
ANR	28242	PostIncDecOperationExpression	path ++		28182	0					
ANR	28243	Identifier	path		28182	0					
ANR	28244	IncDec	++		28182	1					
ANR	28245	WhileStatement	while ( ISSLASH ( * path ) )		28182	1					
ANR	28246	Condition	ISSLASH ( * path )	259:13:6514:6528	28182	0	True				
ANR	28247	CallExpression	ISSLASH ( * path )		28182	0					
ANR	28248	Callee	ISSLASH		28182	0					
ANR	28249	Identifier	ISSLASH		28182	0					
ANR	28250	ArgumentList	* path		28182	1					
ANR	28251	Argument	* path		28182	0					
ANR	28252	UnaryOperationExpression	* path		28182	0					
ANR	28253	UnaryOperator	*		28182	0					
ANR	28254	Identifier	path		28182	1					
ANR	28255	ExpressionStatement	path ++	260:1:6532:6538	28182	1	True				
ANR	28256	PostIncDecOperationExpression	path ++		28182	0					
ANR	28257	Identifier	path		28182	0					
ANR	28258	IncDec	++		28182	1					
ANR	28259	ReturnStatement	return components ;	262:2:6548:6565	28182	4	True				
ANR	28260	Identifier	components		28182	0					
ANR	28261	ReturnType	static unsigned int		28182	1					
ANR	28262	Identifier	count_path_components		28182	2					
ANR	28263	ParameterList	const char * path		28182	3					
ANR	28264	Parameter	const char * path	247:43:6286:6301	28182	0	True				
ANR	28265	ParameterType	const char *		28182	0					
ANR	28266	Identifier	path		28182	1					
ANR	28267	CFGEntryNode	ENTRY		28182		True				
ANR	28268	CFGExitNode	EXIT		28182		True				
ANR	28269	Symbol	path		28182						
ANR	28270	Symbol	components		28182						
ANR	28271	Symbol	* path		28182						
ANR	28272	Symbol	ISSLASH		28182						
ANR	28273	ClassDef	symlink	266:0:6598:6659							
ANR	28274	DeclStmt									
ANR	28275	Decl							struct symlink	struct symlink *	prev
ANR	28276	DeclStmt									
ANR	28277	Decl							const char	const char *	path
ANR	28278	Function	push_symlink	271:0:6663:6786							
ANR	28279	FunctionDef	"push_symlink (struct symlink * * stack , struct symlink * symlink)"		28278	0					
ANR	28280	CompoundStatement		272:0:6738:6786	28278	0					
ANR	28281	ExpressionStatement	symlink -> prev = * stack	273:2:6742:6764	28278	0	True				
ANR	28282	AssignmentExpression	symlink -> prev = * stack		28278	0		=			
ANR	28283	PtrMemberAccess	symlink -> prev		28278	0					
ANR	28284	Identifier	symlink		28278	0					
ANR	28285	Identifier	prev		28278	1					
ANR	28286	UnaryOperationExpression	* stack		28278	1					
ANR	28287	UnaryOperator	*		28278	0					
ANR	28288	Identifier	stack		28278	1					
ANR	28289	ExpressionStatement	* stack = symlink	274:2:6768:6784	28278	1	True				
ANR	28290	AssignmentExpression	* stack = symlink		28278	0		=			
ANR	28291	UnaryOperationExpression	* stack		28278	0					
ANR	28292	UnaryOperator	*		28278	0					
ANR	28293	Identifier	stack		28278	1					
ANR	28294	Identifier	symlink		28278	1					
ANR	28295	ReturnType	static void		28278	1					
ANR	28296	Identifier	push_symlink		28278	2					
ANR	28297	ParameterList	"struct symlink * * stack , struct symlink * symlink"		28278	3					
ANR	28298	Parameter	struct symlink * * stack	271:26:6689:6710	28278	0	True				
ANR	28299	ParameterType	struct symlink * *		28278	0					
ANR	28300	Identifier	stack		28278	1					
ANR	28301	Parameter	struct symlink * symlink	271:50:6713:6735	28278	1	True				
ANR	28302	ParameterType	struct symlink *		28278	0					
ANR	28303	Identifier	symlink		28278	1					
ANR	28304	CFGEntryNode	ENTRY		28278		True				
ANR	28305	CFGExitNode	EXIT		28278		True				
ANR	28306	Symbol	stack		28278						
ANR	28307	Symbol	* symlink		28278						
ANR	28308	Symbol	symlink		28278						
ANR	28309	Symbol	* stack		28278						
ANR	28310	Symbol	symlink -> prev		28278						
ANR	28311	Function	pop_symlink	277:0:6789:6908							
ANR	28312	FunctionDef	pop_symlink (struct symlink * * stack)		28311	0					
ANR	28313	CompoundStatement		278:0:6838:6908	28311	0					
ANR	28314	IdentifierDeclStatement	struct symlink * top = * stack ;	279:2:6842:6870	28311	0	True				
ANR	28315	IdentifierDecl	* top = * stack		28311	0					
ANR	28316	IdentifierDeclType	struct symlink *		28311	0					
ANR	28317	Identifier	top		28311	1					
ANR	28318	AssignmentExpression	* top = * stack		28311	2		=			
ANR	28319	Identifier	top		28311	0					
ANR	28320	UnaryOperationExpression	* stack		28311	1					
ANR	28321	UnaryOperator	*		28311	0					
ANR	28322	Identifier	stack		28311	1					
ANR	28323	ExpressionStatement	* stack = top -> prev	280:2:6874:6892	28311	1	True				
ANR	28324	AssignmentExpression	* stack = top -> prev		28311	0		=			
ANR	28325	UnaryOperationExpression	* stack		28311	0					
ANR	28326	UnaryOperator	*		28311	0					
ANR	28327	Identifier	stack		28311	1					
ANR	28328	PtrMemberAccess	top -> prev		28311	1					
ANR	28329	Identifier	top		28311	0					
ANR	28330	Identifier	prev		28311	1					
ANR	28331	ExpressionStatement	free ( top )	281:2:6896:6906	28311	2	True				
ANR	28332	CallExpression	free ( top )		28311	0					
ANR	28333	Callee	free		28311	0					
ANR	28334	Identifier	free		28311	0					
ANR	28335	ArgumentList	top		28311	1					
ANR	28336	Argument	top		28311	0					
ANR	28337	Identifier	top		28311	0					
ANR	28338	ReturnType	static void		28311	1					
ANR	28339	Identifier	pop_symlink		28311	2					
ANR	28340	ParameterList	struct symlink * * stack		28311	3					
ANR	28341	Parameter	struct symlink * * stack	277:25:6814:6835	28311	0	True				
ANR	28342	ParameterType	struct symlink * *		28311	0					
ANR	28343	Identifier	stack		28311	1					
ANR	28344	CFGEntryNode	ENTRY		28311		True				
ANR	28345	CFGExitNode	EXIT		28311		True				
ANR	28346	Symbol	stack		28311						
ANR	28347	Symbol	top		28311						
ANR	28348	Symbol	* stack		28311						
ANR	28349	Symbol	top -> prev		28311						
ANR	28350	Symbol	* top		28311						
ANR	28351	DeclStmt									
ANR	28352	Decl							int	int	cwd_stat_errno
ANR	28353	DeclStmt									
ANR	28354	Decl							struct stat	struct stat	cwd_stat
ANR	28355	Function	read_symlink	287:0:6959:8348							
ANR	28356	FunctionDef	"read_symlink (int dirfd , const char * name)"		28355	0					
ANR	28357	CompoundStatement		288:0:7024:8348	28355	0					
ANR	28358	IdentifierDeclStatement	int saved_errno = errno ;	289:2:7028:7051	28355	0	True				
ANR	28359	IdentifierDecl	saved_errno = errno		28355	0					
ANR	28360	IdentifierDeclType	int		28355	0					
ANR	28361	Identifier	saved_errno		28355	1					
ANR	28362	AssignmentExpression	saved_errno = errno		28355	2		=			
ANR	28363	Identifier	errno		28355	0					
ANR	28364	Identifier	errno		28355	1					
ANR	28365	IdentifierDeclStatement	struct stat st ;	290:2:7055:7069	28355	1	True				
ANR	28366	IdentifierDecl	st		28355	0					
ANR	28367	IdentifierDeclType	struct stat		28355	0					
ANR	28368	Identifier	st		28355	1					
ANR	28369	IdentifierDeclStatement	struct symlink * symlink ;	291:2:7073:7096	28355	2	True				
ANR	28370	IdentifierDecl	* symlink		28355	0					
ANR	28371	IdentifierDeclType	struct symlink *		28355	0					
ANR	28372	Identifier	symlink		28355	1					
ANR	28373	IdentifierDeclStatement	char * buffer ;	292:2:7100:7112	28355	3	True				
ANR	28374	IdentifierDecl	* buffer		28355	0					
ANR	28375	IdentifierDeclType	char *		28355	0					
ANR	28376	Identifier	buffer		28355	1					
ANR	28377	IdentifierDeclStatement	ssize_t ret ;	293:2:7116:7127	28355	4	True				
ANR	28378	IdentifierDecl	ret		28355	0					
ANR	28379	IdentifierDeclType	ssize_t		28355	0					
ANR	28380	Identifier	ret		28355	1					
ANR	28381	IfStatement	"if ( fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW ) || ! S_ISLNK ( st . st_mode ) )"		28355	5					
ANR	28382	Condition	"fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW ) || ! S_ISLNK ( st . st_mode )"	295:6:7136:7214	28355	0	True				
ANR	28383	OrExpression	"fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW ) || ! S_ISLNK ( st . st_mode )"		28355	0		||			
ANR	28384	CallExpression	"fstatat ( dirfd , name , & st , AT_SYMLINK_NOFOLLOW )"		28355	0					
ANR	28385	Callee	fstatat		28355	0					
ANR	28386	Identifier	fstatat		28355	0					
ANR	28387	ArgumentList	dirfd		28355	1					
ANR	28388	Argument	dirfd		28355	0					
ANR	28389	Identifier	dirfd		28355	0					
ANR	28390	Argument	name		28355	1					
ANR	28391	Identifier	name		28355	0					
ANR	28392	Argument	& st		28355	2					
ANR	28393	UnaryOperationExpression	& st		28355	0					
ANR	28394	UnaryOperator	&		28355	0					
ANR	28395	Identifier	st		28355	1					
ANR	28396	Argument	AT_SYMLINK_NOFOLLOW		28355	3					
ANR	28397	Identifier	AT_SYMLINK_NOFOLLOW		28355	0					
ANR	28398	UnaryOperationExpression	! S_ISLNK ( st . st_mode )		28355	1					
ANR	28399	UnaryOperator	!		28355	0					
ANR	28400	CallExpression	S_ISLNK ( st . st_mode )		28355	1					
ANR	28401	Callee	S_ISLNK		28355	0					
ANR	28402	Identifier	S_ISLNK		28355	0					
ANR	28403	ArgumentList	st . st_mode		28355	1					
ANR	28404	Argument	st . st_mode		28355	0					
ANR	28405	MemberAccess	st . st_mode		28355	0					
ANR	28406	Identifier	st		28355	0					
ANR	28407	Identifier	st_mode		28355	1					
ANR	28408	CompoundStatement		10:4:196:196	28355	1					
ANR	28409	ExpressionStatement	errno = saved_errno	298:6:7229:7248	28355	0	True				
ANR	28410	AssignmentExpression	errno = saved_errno		28355	0		=			
ANR	28411	Identifier	errno		28355	0					
ANR	28412	Identifier	saved_errno		28355	1					
ANR	28413	ReturnStatement	return NULL ;	299:6:7256:7267	28355	1	True				
ANR	28414	Identifier	NULL		28355	0					
ANR	28415	ExpressionStatement	symlink = xmalloc ( sizeof ( * symlink ) + st . st_size + 1 )	301:2:7277:7331	28355	6	True				
ANR	28416	AssignmentExpression	symlink = xmalloc ( sizeof ( * symlink ) + st . st_size + 1 )		28355	0		=			
ANR	28417	Identifier	symlink		28355	0					
ANR	28418	CallExpression	xmalloc ( sizeof ( * symlink ) + st . st_size + 1 )		28355	1					
ANR	28419	Callee	xmalloc		28355	0					
ANR	28420	Identifier	xmalloc		28355	0					
ANR	28421	ArgumentList	sizeof ( * symlink ) + st . st_size + 1		28355	1					
ANR	28422	Argument	sizeof ( * symlink ) + st . st_size + 1		28355	0					
ANR	28423	AdditiveExpression	sizeof ( * symlink ) + st . st_size + 1		28355	0		+			
ANR	28424	SizeofExpression	sizeof ( * symlink )		28355	0					
ANR	28425	Sizeof	sizeof		28355	0					
ANR	28426	UnaryOperationExpression	* symlink		28355	1					
ANR	28427	UnaryOperator	*		28355	0					
ANR	28428	Identifier	symlink		28355	1					
ANR	28429	AdditiveExpression	st . st_size + 1		28355	1		+			
ANR	28430	MemberAccess	st . st_size		28355	0					
ANR	28431	Identifier	st		28355	0					
ANR	28432	Identifier	st_size		28355	1					
ANR	28433	PrimaryExpression	1		28355	1					
ANR	28434	ExpressionStatement	buffer = ( char * ) ( symlink + 1 )	302:2:7335:7365	28355	7	True				
ANR	28435	AssignmentExpression	buffer = ( char * ) ( symlink + 1 )		28355	0		=			
ANR	28436	Identifier	buffer		28355	0					
ANR	28437	CastExpression	( char * ) ( symlink + 1 )		28355	1					
ANR	28438	CastTarget	char *		28355	0					
ANR	28439	AdditiveExpression	symlink + 1		28355	1		+			
ANR	28440	Identifier	symlink		28355	0					
ANR	28441	PrimaryExpression	1		28355	1					
ANR	28442	ExpressionStatement	"ret = readlinkat ( dirfd , name , buffer , st . st_size )"	303:2:7369:7419	28355	8	True				
ANR	28443	AssignmentExpression	"ret = readlinkat ( dirfd , name , buffer , st . st_size )"		28355	0		=			
ANR	28444	Identifier	ret		28355	0					
ANR	28445	CallExpression	"readlinkat ( dirfd , name , buffer , st . st_size )"		28355	1					
ANR	28446	Callee	readlinkat		28355	0					
ANR	28447	Identifier	readlinkat		28355	0					
ANR	28448	ArgumentList	dirfd		28355	1					
ANR	28449	Argument	dirfd		28355	0					
ANR	28450	Identifier	dirfd		28355	0					
ANR	28451	Argument	name		28355	1					
ANR	28452	Identifier	name		28355	0					
ANR	28453	Argument	buffer		28355	2					
ANR	28454	Identifier	buffer		28355	0					
ANR	28455	Argument	st . st_size		28355	3					
ANR	28456	MemberAccess	st . st_size		28355	0					
ANR	28457	Identifier	st		28355	0					
ANR	28458	Identifier	st_size		28355	1					
ANR	28459	IfStatement	if ( ret <= 0 )		28355	9					
ANR	28460	Condition	ret <= 0	304:6:7427:7434	28355	0	True				
ANR	28461	RelationalExpression	ret <= 0		28355	0		<=			
ANR	28462	Identifier	ret		28355	0					
ANR	28463	PrimaryExpression	0		28355	1					
ANR	28464	GotoStatement	goto fail ;	305:4:7441:7450	28355	1	True				
ANR	28465	Identifier	fail		28355	0					
ANR	28466	ExpressionStatement	buffer [ ret ] = 0	306:2:7454:7469	28355	10	True				
ANR	28467	AssignmentExpression	buffer [ ret ] = 0		28355	0		=			
ANR	28468	ArrayIndexing	buffer [ ret ]		28355	0					
ANR	28469	Identifier	buffer		28355	0					
ANR	28470	Identifier	ret		28355	1					
ANR	28471	PrimaryExpression	0		28355	1					
ANR	28472	ExpressionStatement	symlink -> path = buffer	307:2:7473:7495	28355	11	True				
ANR	28473	AssignmentExpression	symlink -> path = buffer		28355	0		=			
ANR	28474	PtrMemberAccess	symlink -> path		28355	0					
ANR	28475	Identifier	symlink		28355	0					
ANR	28476	Identifier	path		28355	1					
ANR	28477	Identifier	buffer		28355	1					
ANR	28478	IfStatement	if ( ISSLASH ( * buffer ) )		28355	12					
ANR	28479	Condition	ISSLASH ( * buffer )	308:6:7503:7519	28355	0	True				
ANR	28480	CallExpression	ISSLASH ( * buffer )		28355	0					
ANR	28481	Callee	ISSLASH		28355	0					
ANR	28482	Identifier	ISSLASH		28355	0					
ANR	28483	ArgumentList	* buffer		28355	1					
ANR	28484	Argument	* buffer		28355	0					
ANR	28485	UnaryOperationExpression	* buffer		28355	0					
ANR	28486	UnaryOperator	*		28355	0					
ANR	28487	Identifier	buffer		28355	1					
ANR	28488	CompoundStatement		23:6:509:518	28355	1					
ANR	28489	IdentifierDeclStatement	char * end ;	310:6:7534:7543	28355	0	True				
ANR	28490	IdentifierDecl	* end		28355	0					
ANR	28491	IdentifierDeclType	char *		28355	0					
ANR	28492	Identifier	end		28355	1					
ANR	28493	IfStatement	if ( cwd_stat_errno == - 1 )		28355	1					
ANR	28494	Condition	cwd_stat_errno == - 1	312:10:7556:7575	28355	0	True				
ANR	28495	EqualityExpression	cwd_stat_errno == - 1		28355	0		==			
ANR	28496	Identifier	cwd_stat_errno		28355	0					
ANR	28497	UnaryOperationExpression	- 1		28355	1					
ANR	28498	UnaryOperator	-		28355	0					
ANR	28499	PrimaryExpression	1		28355	1					
ANR	28500	CompoundStatement		26:1:554:554	28355	1					
ANR	28501	ExpressionStatement	"cwd_stat_errno = stat ( ""."" , & cwd_stat ) == 0 ? 0 : errno"	314:3:7584:7639	28355	0	True				
ANR	28502	AssignmentExpression	"cwd_stat_errno = stat ( ""."" , & cwd_stat ) == 0 ? 0 : errno"		28355	0		=			
ANR	28503	Identifier	cwd_stat_errno		28355	0					
ANR	28504	ConditionalExpression	"stat ( ""."" , & cwd_stat ) == 0 ? 0 : errno"		28355	1					
ANR	28505	Condition	"stat ( ""."" , & cwd_stat ) == 0"		28355	0					
ANR	28506	EqualityExpression	"stat ( ""."" , & cwd_stat ) == 0"		28355	0		==			
ANR	28507	CallExpression	"stat ( ""."" , & cwd_stat )"		28355	0					
ANR	28508	Callee	stat		28355	0					
ANR	28509	Identifier	stat		28355	0					
ANR	28510	ArgumentList	"""."""		28355	1					
ANR	28511	Argument	"""."""		28355	0					
ANR	28512	PrimaryExpression	"""."""		28355	0					
ANR	28513	Argument	& cwd_stat		28355	1					
ANR	28514	UnaryOperationExpression	& cwd_stat		28355	0					
ANR	28515	UnaryOperator	&		28355	0					
ANR	28516	Identifier	cwd_stat		28355	1					
ANR	28517	PrimaryExpression	0		28355	1					
ANR	28518	PrimaryExpression	0		28355	1					
ANR	28519	Identifier	errno		28355	2					
ANR	28520	IfStatement	if ( cwd_stat_errno )		28355	1					
ANR	28521	Condition	cwd_stat_errno	315:7:7648:7661	28355	0	True				
ANR	28522	Identifier	cwd_stat_errno		28355	0					
ANR	28523	GotoStatement	goto fail_exdev ;	316:5:7669:7684	28355	1	True				
ANR	28524	Identifier	fail_exdev		28355	0					
ANR	28525	ExpressionStatement	end = buffer + ret	318:6:7695:7713	28355	2	True				
ANR	28526	AssignmentExpression	end = buffer + ret		28355	0		=			
ANR	28527	Identifier	end		28355	0					
ANR	28528	AdditiveExpression	buffer + ret		28355	1		+			
ANR	28529	Identifier	buffer		28355	0					
ANR	28530	Identifier	ret		28355	1					
ANR	28531	ForStatement	for ( ; ; )		28355	3					
ANR	28532	CompoundStatement		35:3:726:732	28355	0					
ANR	28533	IdentifierDeclStatement	char slash ;	321:3:7736:7746	28355	0	True				
ANR	28534	IdentifierDecl	slash		28355	0					
ANR	28535	IdentifierDeclType	char		28355	0					
ANR	28536	Identifier	slash		28355	1					
ANR	28537	IdentifierDeclStatement	int rv ;	322:3:7751:7757	28355	1	True				
ANR	28538	IdentifierDecl	rv		28355	0					
ANR	28539	IdentifierDeclType	int		28355	0					
ANR	28540	Identifier	rv		28355	1					
ANR	28541	ExpressionStatement	slash = * end	324:3:7763:7775	28355	2	True				
ANR	28542	AssignmentExpression	slash = * end		28355	0		=			
ANR	28543	Identifier	slash		28355	0					
ANR	28544	UnaryOperationExpression	* end		28355	1					
ANR	28545	UnaryOperator	*		28355	0					
ANR	28546	Identifier	end		28355	1					
ANR	28547	ExpressionStatement	* end = 0	324:17:7777:7785	28355	3	True				
ANR	28548	AssignmentExpression	* end = 0		28355	0		=			
ANR	28549	UnaryOperationExpression	* end		28355	0					
ANR	28550	UnaryOperator	*		28355	0					
ANR	28551	Identifier	end		28355	1					
ANR	28552	PrimaryExpression	0		28355	1					
ANR	28553	ExpressionStatement	"rv = stat ( symlink -> path , & st )"	325:3:7790:7820	28355	4	True				
ANR	28554	AssignmentExpression	"rv = stat ( symlink -> path , & st )"		28355	0		=			
ANR	28555	Identifier	rv		28355	0					
ANR	28556	CallExpression	"stat ( symlink -> path , & st )"		28355	1					
ANR	28557	Callee	stat		28355	0					
ANR	28558	Identifier	stat		28355	0					
ANR	28559	ArgumentList	symlink -> path		28355	1					
ANR	28560	Argument	symlink -> path		28355	0					
ANR	28561	PtrMemberAccess	symlink -> path		28355	0					
ANR	28562	Identifier	symlink		28355	0					
ANR	28563	Identifier	path		28355	1					
ANR	28564	Argument	& st		28355	1					
ANR	28565	UnaryOperationExpression	& st		28355	0					
ANR	28566	UnaryOperator	&		28355	0					
ANR	28567	Identifier	st		28355	1					
ANR	28568	ExpressionStatement	* end = slash	326:3:7825:7837	28355	5	True				
ANR	28569	AssignmentExpression	* end = slash		28355	0		=			
ANR	28570	UnaryOperationExpression	* end		28355	0					
ANR	28571	UnaryOperator	*		28355	0					
ANR	28572	Identifier	end		28355	1					
ANR	28573	Identifier	slash		28355	1					
ANR	28574	IfStatement	if ( rv == 0 && st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino )		28355	6					
ANR	28575	Condition	rv == 0 && st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino	328:7:7847:7931	28355	0	True				
ANR	28576	AndExpression	rv == 0 && st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino		28355	0		&&			
ANR	28577	EqualityExpression	rv == 0		28355	0		==			
ANR	28578	Identifier	rv		28355	0					
ANR	28579	PrimaryExpression	0		28355	1					
ANR	28580	AndExpression	st . st_dev == cwd_stat . st_dev && st . st_ino == cwd_stat . st_ino		28355	1		&&			
ANR	28581	EqualityExpression	st . st_dev == cwd_stat . st_dev		28355	0		==			
ANR	28582	MemberAccess	st . st_dev		28355	0					
ANR	28583	Identifier	st		28355	0					
ANR	28584	Identifier	st_dev		28355	1					
ANR	28585	MemberAccess	cwd_stat . st_dev		28355	1					
ANR	28586	Identifier	cwd_stat		28355	0					
ANR	28587	Identifier	st_dev		28355	1					
ANR	28588	EqualityExpression	st . st_ino == cwd_stat . st_ino		28355	1		==			
ANR	28589	MemberAccess	st . st_ino		28355	0					
ANR	28590	Identifier	st		28355	0					
ANR	28591	Identifier	st_ino		28355	1					
ANR	28592	MemberAccess	cwd_stat . st_ino		28355	1					
ANR	28593	Identifier	cwd_stat		28355	0					
ANR	28594	Identifier	st_ino		28355	1					
ANR	28595	CompoundStatement		44:5:914:914	28355	1					
ANR	28596	WhileStatement	while ( ISSLASH ( * end ) )		28355	0					
ANR	28597	Condition	ISSLASH ( * end )	332:14:7955:7968	28355	0	True				
ANR	28598	CallExpression	ISSLASH ( * end )		28355	0					
ANR	28599	Callee	ISSLASH		28355	0					
ANR	28600	Identifier	ISSLASH		28355	0					
ANR	28601	ArgumentList	* end		28355	1					
ANR	28602	Argument	* end		28355	0					
ANR	28603	UnaryOperationExpression	* end		28355	0					
ANR	28604	UnaryOperator	*		28355	0					
ANR	28605	Identifier	end		28355	1					
ANR	28606	ExpressionStatement	end ++	333:2:7973:7978	28355	1	True				
ANR	28607	PostIncDecOperationExpression	end ++		28355	0					
ANR	28608	Identifier	end		28355	0					
ANR	28609	IncDec	++		28355	1					
ANR	28610	ExpressionStatement	symlink -> path = end	334:7:7987:8006	28355	1	True				
ANR	28611	AssignmentExpression	symlink -> path = end		28355	0		=			
ANR	28612	PtrMemberAccess	symlink -> path		28355	0					
ANR	28613	Identifier	symlink		28355	0					
ANR	28614	Identifier	path		28355	1					
ANR	28615	Identifier	end		28355	1					
ANR	28616	ReturnStatement	return symlink ;	335:7:8015:8029	28355	2	True				
ANR	28617	Identifier	symlink		28355	0					
ANR	28618	ExpressionStatement	end --	337:3:8041:8046	28355	7	True				
ANR	28619	PostIncDecOperationExpression	end --		28355	0					
ANR	28620	Identifier	end		28355	0					
ANR	28621	IncDec	--		28355	1					
ANR	28622	IfStatement	if ( end == symlink -> path )		28355	8					
ANR	28623	Condition	end == symlink -> path	338:7:8055:8074	28355	0	True				
ANR	28624	EqualityExpression	end == symlink -> path		28355	0		==			
ANR	28625	Identifier	end		28355	0					
ANR	28626	PtrMemberAccess	symlink -> path		28355	1					
ANR	28627	Identifier	symlink		28355	0					
ANR	28628	Identifier	path		28355	1					
ANR	28629	BreakStatement	break ;	339:5:8082:8087	28355	1	True				
ANR	28630	WhileStatement	while ( end != symlink -> path + 1 && ! ISSLASH ( * end ) )		28355	9					
ANR	28631	Condition	end != symlink -> path + 1 && ! ISSLASH ( * end )	340:10:8099:8142	28355	0	True				
ANR	28632	AndExpression	end != symlink -> path + 1 && ! ISSLASH ( * end )		28355	0		&&			
ANR	28633	EqualityExpression	end != symlink -> path + 1		28355	0		!=			
ANR	28634	Identifier	end		28355	0					
ANR	28635	AdditiveExpression	symlink -> path + 1		28355	1		+			
ANR	28636	PtrMemberAccess	symlink -> path		28355	0					
ANR	28637	Identifier	symlink		28355	0					
ANR	28638	Identifier	path		28355	1					
ANR	28639	PrimaryExpression	1		28355	1					
ANR	28640	UnaryOperationExpression	! ISSLASH ( * end )		28355	1					
ANR	28641	UnaryOperator	!		28355	0					
ANR	28642	CallExpression	ISSLASH ( * end )		28355	1					
ANR	28643	Callee	ISSLASH		28355	0					
ANR	28644	Identifier	ISSLASH		28355	0					
ANR	28645	ArgumentList	* end		28355	1					
ANR	28646	Argument	* end		28355	0					
ANR	28647	UnaryOperationExpression	* end		28355	0					
ANR	28648	UnaryOperator	*		28355	0					
ANR	28649	Identifier	end		28355	1					
ANR	28650	ExpressionStatement	end --	341:5:8150:8155	28355	1	True				
ANR	28651	PostIncDecOperationExpression	end --		28355	0					
ANR	28652	Identifier	end		28355	0					
ANR	28653	IncDec	--		28355	1					
ANR	28654	WhileStatement	while ( end != symlink -> path + 1 && ISSLASH ( * ( end - 1 ) ) )		28355	10					
ANR	28655	Condition	end != symlink -> path + 1 && ISSLASH ( * ( end - 1 ) )	342:10:8167:8214	28355	0	True				
ANR	28656	AndExpression	end != symlink -> path + 1 && ISSLASH ( * ( end - 1 ) )		28355	0		&&			
ANR	28657	EqualityExpression	end != symlink -> path + 1		28355	0		!=			
ANR	28658	Identifier	end		28355	0					
ANR	28659	AdditiveExpression	symlink -> path + 1		28355	1		+			
ANR	28660	PtrMemberAccess	symlink -> path		28355	0					
ANR	28661	Identifier	symlink		28355	0					
ANR	28662	Identifier	path		28355	1					
ANR	28663	PrimaryExpression	1		28355	1					
ANR	28664	CallExpression	ISSLASH ( * ( end - 1 ) )		28355	1					
ANR	28665	Callee	ISSLASH		28355	0					
ANR	28666	Identifier	ISSLASH		28355	0					
ANR	28667	ArgumentList	* ( end - 1 )		28355	1					
ANR	28668	Argument	* ( end - 1 )		28355	0					
ANR	28669	UnaryOperationExpression	* ( end - 1 )		28355	0					
ANR	28670	UnaryOperator	*		28355	0					
ANR	28671	AdditiveExpression	end - 1		28355	1		-			
ANR	28672	Identifier	end		28355	0					
ANR	28673	PrimaryExpression	1		28355	1					
ANR	28674	ExpressionStatement	end --	343:5:8222:8227	28355	1	True				
ANR	28675	PostIncDecOperationExpression	end --		28355	0					
ANR	28676	Identifier	end		28355	0					
ANR	28677	IncDec	--		28355	1					
ANR	28678	GotoStatement	goto fail_exdev ;	345:6:8238:8253	28355	4	True				
ANR	28679	Identifier	fail_exdev		28355	0					
ANR	28680	ReturnStatement	return symlink ;	347:2:8263:8277	28355	13	True				
ANR	28681	Identifier	symlink		28355	0					
ANR	28682	Label	fail_exdev :	349:0:8280:8290	28355	14	True				
ANR	28683	Identifier	fail_exdev		28355	0					
ANR	28684	ExpressionStatement	errno = EXDEV	350:2:8294:8307	28355	15	True				
ANR	28685	AssignmentExpression	errno = EXDEV		28355	0		=			
ANR	28686	Identifier	errno		28355	0					
ANR	28687	Identifier	EXDEV		28355	1					
ANR	28688	Label	fail :	351:0:8309:8313	28355	16	True				
ANR	28689	Identifier	fail		28355	0					
ANR	28690	ExpressionStatement	free ( symlink )	352:2:8317:8331	28355	17	True				
ANR	28691	CallExpression	free ( symlink )		28355	0					
ANR	28692	Callee	free		28355	0					
ANR	28693	Identifier	free		28355	0					
ANR	28694	ArgumentList	symlink		28355	1					
ANR	28695	Argument	symlink		28355	0					
ANR	28696	Identifier	symlink		28355	0					
ANR	28697	ReturnStatement	return NULL ;	353:2:8335:8346	28355	18	True				
ANR	28698	Identifier	NULL		28355	0					
ANR	28699	ReturnType	static struct symlink *		28355	1					
ANR	28700	Identifier	read_symlink		28355	2					
ANR	28701	ParameterList	"int dirfd , const char * name"		28355	3					
ANR	28702	Parameter	int dirfd	287:36:6995:7003	28355	0	True				
ANR	28703	ParameterType	int		28355	0					
ANR	28704	Identifier	dirfd		28355	1					
ANR	28705	Parameter	const char * name	287:47:7006:7021	28355	1	True				
ANR	28706	ParameterType	const char *		28355	0					
ANR	28707	Identifier	name		28355	1					
ANR	28708	CFGEntryNode	ENTRY		28355		True				
ANR	28709	CFGExitNode	EXIT		28355		True				
ANR	28710	InfiniteForNode	true		28355		True				
ANR	28711	Symbol	cwd_stat . st_dev		28355						
ANR	28712	Symbol	rv		28355						
ANR	28713	Symbol	st . st_ino		28355						
ANR	28714	Symbol	& st		28355						
ANR	28715	Symbol	st . st_mode		28355						
ANR	28716	Symbol	* ret		28355						
ANR	28717	Symbol	ISSLASH		28355						
ANR	28718	Symbol	st . st_dev		28355						
ANR	28719	Symbol	xmalloc		28355						
ANR	28720	Symbol	EXDEV		28355						
ANR	28721	Symbol	symlink		28355						
ANR	28722	Symbol	end		28355						
ANR	28723	Symbol	buffer		28355						
ANR	28724	Symbol	cwd_stat_errno		28355						
ANR	28725	Symbol	S_ISLNK		28355						
ANR	28726	Symbol	& cwd_stat		28355						
ANR	28727	Symbol	cwd_stat . st_ino		28355						
ANR	28728	Symbol	ret		28355						
ANR	28729	Symbol	st		28355						
ANR	28730	Symbol	errno		28355						
ANR	28731	Symbol	* buffer		28355						
ANR	28732	Symbol	stat		28355						
ANR	28733	Symbol	NULL		28355						
ANR	28734	Symbol	fstatat		28355						
ANR	28735	Symbol	* ( end - 1 )		28355						
ANR	28736	Symbol	saved_errno		28355						
ANR	28737	Symbol	AT_SYMLINK_NOFOLLOW		28355						
ANR	28738	Symbol	cwd_stat		28355						
ANR	28739	Symbol	symlink -> path		28355						
ANR	28740	Symbol	* symlink		28355						
ANR	28741	Symbol	st . st_size		28355						
ANR	28742	Symbol	name		28355						
ANR	28743	Symbol	readlinkat		28355						
ANR	28744	Symbol	dirfd		28355						
ANR	28745	Symbol	slash		28355						
ANR	28746	Symbol	* end		28355						
ANR	28747	Function	traverse_next	358:0:8465:9635							
ANR	28748	FunctionDef	"traverse_next (struct cached_dirfd * dir , const char * * path , int keepfd , struct symlink * * symlink)"		28747	0					
ANR	28749	CompoundStatement		361:0:8600:9635	28747	0					
ANR	28750	IdentifierDeclStatement	const char * p = * path ;	362:2:8604:8625	28747	0	True				
ANR	28751	IdentifierDecl	* p = * path		28747	0					
ANR	28752	IdentifierDeclType	const char *		28747	0					
ANR	28753	Identifier	p		28747	1					
ANR	28754	AssignmentExpression	* p = * path		28747	2		=			
ANR	28755	Identifier	p		28747	0					
ANR	28756	UnaryOperationExpression	* path		28747	1					
ANR	28757	UnaryOperator	*		28747	0					
ANR	28758	Identifier	path		28747	1					
ANR	28759	IdentifierDeclStatement	struct cached_dirfd * entry = dir ;	363:2:8629:8661	28747	1	True				
ANR	28760	IdentifierDecl	* entry = dir		28747	0					
ANR	28761	IdentifierDeclType	struct cached_dirfd *		28747	0					
ANR	28762	Identifier	entry		28747	1					
ANR	28763	AssignmentExpression	* entry = dir		28747	2		=			
ANR	28764	Identifier	dir		28747	0					
ANR	28765	Identifier	dir		28747	1					
ANR	28766	IdentifierDeclStatement	char * name ;	364:2:8665:8675	28747	2	True				
ANR	28767	IdentifierDecl	* name		28747	0					
ANR	28768	IdentifierDeclType	char *		28747	0					
ANR	28769	Identifier	name		28747	1					
ANR	28770	WhileStatement	while ( * p && ! ISSLASH ( * p ) )		28747	3					
ANR	28771	Condition	* p && ! ISSLASH ( * p )	366:9:8687:8706	28747	0	True				
ANR	28772	AndExpression	* p && ! ISSLASH ( * p )		28747	0		&&			
ANR	28773	UnaryOperationExpression	* p		28747	0					
ANR	28774	UnaryOperator	*		28747	0					
ANR	28775	Identifier	p		28747	1					
ANR	28776	UnaryOperationExpression	! ISSLASH ( * p )		28747	1					
ANR	28777	UnaryOperator	!		28747	0					
ANR	28778	CallExpression	ISSLASH ( * p )		28747	1					
ANR	28779	Callee	ISSLASH		28747	0					
ANR	28780	Identifier	ISSLASH		28747	0					
ANR	28781	ArgumentList	* p		28747	1					
ANR	28782	Argument	* p		28747	0					
ANR	28783	UnaryOperationExpression	* p		28747	0					
ANR	28784	UnaryOperator	*		28747	0					
ANR	28785	Identifier	p		28747	1					
ANR	28786	ExpressionStatement	p ++	367:4:8713:8716	28747	1	True				
ANR	28787	PostIncDecOperationExpression	p ++		28747	0					
ANR	28788	Identifier	p		28747	0					
ANR	28789	IncDec	++		28747	1					
ANR	28790	IfStatement	if ( * * path == '.' && * path + 1 == p )		28747	4					
ANR	28791	Condition	* * path == '.' && * path + 1 == p	368:6:8724:8754	28747	0	True				
ANR	28792	AndExpression	* * path == '.' && * path + 1 == p		28747	0		&&			
ANR	28793	EqualityExpression	* * path == '.'		28747	0		==			
ANR	28794	UnaryOperationExpression	* * path		28747	0					
ANR	28795	UnaryOperator	*		28747	0					
ANR	28796	UnaryOperationExpression	* path		28747	1					
ANR	28797	UnaryOperator	*		28747	0					
ANR	28798	Identifier	path		28747	1					
ANR	28799	PrimaryExpression	'.'		28747	1					
ANR	28800	EqualityExpression	* path + 1 == p		28747	1		==			
ANR	28801	AdditiveExpression	* path + 1		28747	0		+			
ANR	28802	UnaryOperationExpression	* path		28747	0					
ANR	28803	UnaryOperator	*		28747	0					
ANR	28804	Identifier	path		28747	1					
ANR	28805	PrimaryExpression	1		28747	1					
ANR	28806	Identifier	p		28747	1					
ANR	28807	GotoStatement	goto skip ;	369:4:8761:8770	28747	1	True				
ANR	28808	Identifier	skip		28747	0					
ANR	28809	IfStatement	if ( * * path == '.' && * ( * path + 1 ) == '.' && * path + 2 == p )		28747	5					
ANR	28810	Condition	* * path == '.' && * ( * path + 1 ) == '.' && * path + 2 == p	370:6:8778:8831	28747	0	True				
ANR	28811	AndExpression	* * path == '.' && * ( * path + 1 ) == '.' && * path + 2 == p		28747	0		&&			
ANR	28812	EqualityExpression	* * path == '.'		28747	0		==			
ANR	28813	UnaryOperationExpression	* * path		28747	0					
ANR	28814	UnaryOperator	*		28747	0					
ANR	28815	UnaryOperationExpression	* path		28747	1					
ANR	28816	UnaryOperator	*		28747	0					
ANR	28817	Identifier	path		28747	1					
ANR	28818	PrimaryExpression	'.'		28747	1					
ANR	28819	AndExpression	* ( * path + 1 ) == '.' && * path + 2 == p		28747	1		&&			
ANR	28820	EqualityExpression	* ( * path + 1 ) == '.'		28747	0		==			
ANR	28821	UnaryOperationExpression	* ( * path + 1 )		28747	0					
ANR	28822	UnaryOperator	*		28747	0					
ANR	28823	AdditiveExpression	* path + 1		28747	1		+			
ANR	28824	UnaryOperationExpression	* path		28747	0					
ANR	28825	UnaryOperator	*		28747	0					
ANR	28826	Identifier	path		28747	1					
ANR	28827	PrimaryExpression	1		28747	1					
ANR	28828	PrimaryExpression	'.'		28747	1					
ANR	28829	EqualityExpression	* path + 2 == p		28747	1		==			
ANR	28830	AdditiveExpression	* path + 2		28747	0		+			
ANR	28831	UnaryOperationExpression	* path		28747	0					
ANR	28832	UnaryOperator	*		28747	0					
ANR	28833	Identifier	path		28747	1					
ANR	28834	PrimaryExpression	2		28747	1					
ANR	28835	Identifier	p		28747	1					
ANR	28836	CompoundStatement		11:4:237:237	28747	1					
ANR	28837	ExpressionStatement	entry = dir -> parent	372:6:8846:8865	28747	0	True				
ANR	28838	AssignmentExpression	entry = dir -> parent		28747	0		=			
ANR	28839	Identifier	entry		28747	0					
ANR	28840	PtrMemberAccess	dir -> parent		28747	1					
ANR	28841	Identifier	dir		28747	0					
ANR	28842	Identifier	parent		28747	1					
ANR	28843	IfStatement	if ( ! entry )		28747	1					
ANR	28844	Condition	! entry	373:10:8877:8883	28747	0	True				
ANR	28845	UnaryOperationExpression	! entry		28747	0					
ANR	28846	UnaryOperator	!		28747	0					
ANR	28847	Identifier	entry		28747	1					
ANR	28848	CompoundStatement		14:1:286:286	28747	1					
ANR	28849	ExpressionStatement	errno = EXDEV	376:3:8934:8947	28747	0	True				
ANR	28850	AssignmentExpression	errno = EXDEV		28747	0		=			
ANR	28851	Identifier	errno		28747	0					
ANR	28852	Identifier	EXDEV		28747	1					
ANR	28853	GotoStatement	goto out ;	377:3:8952:8960	28747	1	True				
ANR	28854	Identifier	out		28747	0					
ANR	28855	ExpressionStatement	assert ( list_empty ( & dir -> lru_link ) )	379:6:8971:9007	28747	2	True				
ANR	28856	CallExpression	assert ( list_empty ( & dir -> lru_link ) )		28747	0					
ANR	28857	Callee	assert		28747	0					
ANR	28858	Identifier	assert		28747	0					
ANR	28859	ArgumentList	list_empty ( & dir -> lru_link )		28747	1					
ANR	28860	Argument	list_empty ( & dir -> lru_link )		28747	0					
ANR	28861	CallExpression	list_empty ( & dir -> lru_link )		28747	0					
ANR	28862	Callee	list_empty		28747	0					
ANR	28863	Identifier	list_empty		28747	0					
ANR	28864	ArgumentList	& dir -> lru_link		28747	1					
ANR	28865	Argument	& dir -> lru_link		28747	0					
ANR	28866	UnaryOperationExpression	& dir -> lru_link		28747	0					
ANR	28867	UnaryOperator	&		28747	0					
ANR	28868	PtrMemberAccess	dir -> lru_link		28747	1					
ANR	28869	Identifier	dir		28747	0					
ANR	28870	Identifier	lru_link		28747	1					
ANR	28871	ExpressionStatement	"list_add ( & dir -> lru_link , & lru_list )"	380:6:9015:9051	28747	3	True				
ANR	28872	CallExpression	"list_add ( & dir -> lru_link , & lru_list )"		28747	0					
ANR	28873	Callee	list_add		28747	0					
ANR	28874	Identifier	list_add		28747	0					
ANR	28875	ArgumentList	& dir -> lru_link		28747	1					
ANR	28876	Argument	& dir -> lru_link		28747	0					
ANR	28877	UnaryOperationExpression	& dir -> lru_link		28747	0					
ANR	28878	UnaryOperator	&		28747	0					
ANR	28879	PtrMemberAccess	dir -> lru_link		28747	1					
ANR	28880	Identifier	dir		28747	0					
ANR	28881	Identifier	lru_link		28747	1					
ANR	28882	Argument	& lru_list		28747	1					
ANR	28883	UnaryOperationExpression	& lru_list		28747	0					
ANR	28884	UnaryOperator	&		28747	0					
ANR	28885	Identifier	lru_list		28747	1					
ANR	28886	GotoStatement	goto skip ;	381:6:9059:9068	28747	4	True				
ANR	28887	Identifier	skip		28747	0					
ANR	28888	ExpressionStatement	name = alloca ( p - * path + 1 )	383:2:9078:9107	28747	6	True				
ANR	28889	AssignmentExpression	name = alloca ( p - * path + 1 )		28747	0		=			
ANR	28890	Identifier	name		28747	0					
ANR	28891	CallExpression	alloca ( p - * path + 1 )		28747	1					
ANR	28892	Callee	alloca		28747	0					
ANR	28893	Identifier	alloca		28747	0					
ANR	28894	ArgumentList	p - * path + 1		28747	1					
ANR	28895	Argument	p - * path + 1		28747	0					
ANR	28896	AdditiveExpression	p - * path + 1		28747	0		-			
ANR	28897	Identifier	p		28747	0					
ANR	28898	AdditiveExpression	* path + 1		28747	1		+			
ANR	28899	UnaryOperationExpression	* path		28747	0					
ANR	28900	UnaryOperator	*		28747	0					
ANR	28901	Identifier	path		28747	1					
ANR	28902	PrimaryExpression	1		28747	1					
ANR	28903	ExpressionStatement	"memcpy ( name , * path , p - * path )"	384:2:9111:9141	28747	7	True				
ANR	28904	CallExpression	"memcpy ( name , * path , p - * path )"		28747	0					
ANR	28905	Callee	memcpy		28747	0					
ANR	28906	Identifier	memcpy		28747	0					
ANR	28907	ArgumentList	name		28747	1					
ANR	28908	Argument	name		28747	0					
ANR	28909	Identifier	name		28747	0					
ANR	28910	Argument	* path		28747	1					
ANR	28911	UnaryOperationExpression	* path		28747	0					
ANR	28912	UnaryOperator	*		28747	0					
ANR	28913	Identifier	path		28747	1					
ANR	28914	Argument	p - * path		28747	2					
ANR	28915	AdditiveExpression	p - * path		28747	0		-			
ANR	28916	Identifier	p		28747	0					
ANR	28917	UnaryOperationExpression	* path		28747	1					
ANR	28918	UnaryOperator	*		28747	0					
ANR	28919	Identifier	path		28747	1					
ANR	28920	ExpressionStatement	name [ p - * path ] = 0	385:2:9145:9164	28747	8	True				
ANR	28921	AssignmentExpression	name [ p - * path ] = 0		28747	0		=			
ANR	28922	ArrayIndexing	name [ p - * path ]		28747	0					
ANR	28923	Identifier	name		28747	0					
ANR	28924	AdditiveExpression	p - * path		28747	1		-			
ANR	28925	Identifier	p		28747	0					
ANR	28926	UnaryOperationExpression	* path		28747	1					
ANR	28927	UnaryOperator	*		28747	0					
ANR	28928	Identifier	path		28747	1					
ANR	28929	PrimaryExpression	0		28747	1					
ANR	28930	ExpressionStatement	"entry = openat_cached ( dir , name , keepfd )"	387:2:9169:9210	28747	9	True				
ANR	28931	AssignmentExpression	"entry = openat_cached ( dir , name , keepfd )"		28747	0		=			
ANR	28932	Identifier	entry		28747	0					
ANR	28933	CallExpression	"openat_cached ( dir , name , keepfd )"		28747	1					
ANR	28934	Callee	openat_cached		28747	0					
ANR	28935	Identifier	openat_cached		28747	0					
ANR	28936	ArgumentList	dir		28747	1					
ANR	28937	Argument	dir		28747	0					
ANR	28938	Identifier	dir		28747	0					
ANR	28939	Argument	name		28747	1					
ANR	28940	Identifier	name		28747	0					
ANR	28941	Argument	keepfd		28747	2					
ANR	28942	Identifier	keepfd		28747	0					
ANR	28943	IfStatement	if ( ! entry )		28747	10					
ANR	28944	Condition	! entry	388:6:9218:9224	28747	0	True				
ANR	28945	UnaryOperationExpression	! entry		28747	0					
ANR	28946	UnaryOperator	!		28747	0					
ANR	28947	Identifier	entry		28747	1					
ANR	28948	CompoundStatement		29:4:630:630	28747	1					
ANR	28949	IfStatement	if ( errno == ELOOP || errno == EMLINK || errno == EFTYPE || errno == ENOTDIR )		28747	0					
ANR	28950	Condition	errno == ELOOP || errno == EMLINK || errno == EFTYPE || errno == ENOTDIR	390:10:9243:9412	28747	0	True				
ANR	28951	OrExpression	errno == ELOOP || errno == EMLINK || errno == EFTYPE || errno == ENOTDIR		28747	0		||			
ANR	28952	EqualityExpression	errno == ELOOP		28747	0		==			
ANR	28953	Identifier	errno		28747	0					
ANR	28954	Identifier	ELOOP		28747	1					
ANR	28955	OrExpression	errno == EMLINK || errno == EFTYPE || errno == ENOTDIR		28747	1		||			
ANR	28956	EqualityExpression	errno == EMLINK		28747	0		==			
ANR	28957	Identifier	errno		28747	0					
ANR	28958	Identifier	EMLINK		28747	1					
ANR	28959	OrExpression	errno == EFTYPE || errno == ENOTDIR		28747	1		||			
ANR	28960	EqualityExpression	errno == EFTYPE		28747	0		==			
ANR	28961	Identifier	errno		28747	0					
ANR	28962	Identifier	EFTYPE		28747	1					
ANR	28963	EqualityExpression	errno == ENOTDIR		28747	1		==			
ANR	28964	Identifier	errno		28747	0					
ANR	28965	Identifier	ENOTDIR		28747	1					
ANR	28966	CompoundStatement		34:1:815:815	28747	1					
ANR	28967	IfStatement	"if ( ( * symlink = read_symlink ( dir -> fd , name ) ) )"		28747	0					
ANR	28968	Condition	"* symlink = read_symlink ( dir -> fd , name )"	395:7:9425:9465	28747	0	True				
ANR	28969	AssignmentExpression	"* symlink = read_symlink ( dir -> fd , name )"		28747	0		=			
ANR	28970	UnaryOperationExpression	* symlink		28747	0					
ANR	28971	UnaryOperator	*		28747	0					
ANR	28972	Identifier	symlink		28747	1					
ANR	28973	CallExpression	"read_symlink ( dir -> fd , name )"		28747	1					
ANR	28974	Callee	read_symlink		28747	0					
ANR	28975	Identifier	read_symlink		28747	0					
ANR	28976	ArgumentList	dir -> fd		28747	1					
ANR	28977	Argument	dir -> fd		28747	0					
ANR	28978	PtrMemberAccess	dir -> fd		28747	0					
ANR	28979	Identifier	dir		28747	0					
ANR	28980	Identifier	fd		28747	1					
ANR	28981	Argument	name		28747	1					
ANR	28982	Identifier	name		28747	0					
ANR	28983	CompoundStatement		36:5:872:872	28747	1					
ANR	28984	ExpressionStatement	entry = dir	397:7:9482:9493	28747	0	True				
ANR	28985	AssignmentExpression	entry = dir		28747	0		=			
ANR	28986	Identifier	entry		28747	0					
ANR	28987	Identifier	dir		28747	1					
ANR	28988	GotoStatement	goto skip ;	398:7:9502:9511	28747	1	True				
ANR	28989	Identifier	skip		28747	0					
ANR	28990	ExpressionStatement	errno = ELOOP	400:3:9523:9536	28747	1	True				
ANR	28991	AssignmentExpression	errno = ELOOP		28747	0		=			
ANR	28992	Identifier	errno		28747	0					
ANR	28993	Identifier	ELOOP		28747	1					
ANR	28994	GotoStatement	goto out ;	402:6:9547:9555	28747	1	True				
ANR	28995	Identifier	out		28747	0					
ANR	28996	Label	skip :	404:0:9563:9567	28747	11	True				
ANR	28997	Identifier	skip		28747	0					
ANR	28998	WhileStatement	while ( ISSLASH ( * p ) )		28747	12					
ANR	28999	Condition	ISSLASH ( * p )	405:9:9578:9589	28747	0	True				
ANR	29000	CallExpression	ISSLASH ( * p )		28747	0					
ANR	29001	Callee	ISSLASH		28747	0					
ANR	29002	Identifier	ISSLASH		28747	0					
ANR	29003	ArgumentList	* p		28747	1					
ANR	29004	Argument	* p		28747	0					
ANR	29005	UnaryOperationExpression	* p		28747	0					
ANR	29006	UnaryOperator	*		28747	0					
ANR	29007	Identifier	p		28747	1					
ANR	29008	ExpressionStatement	p ++	406:4:9596:9599	28747	1	True				
ANR	29009	PostIncDecOperationExpression	p ++		28747	0					
ANR	29010	Identifier	p		28747	0					
ANR	29011	IncDec	++		28747	1					
ANR	29012	Label	out :	407:0:9601:9604	28747	13	True				
ANR	29013	Identifier	out		28747	0					
ANR	29014	ExpressionStatement	* path = p	408:2:9608:9617	28747	14	True				
ANR	29015	AssignmentExpression	* path = p		28747	0		=			
ANR	29016	UnaryOperationExpression	* path		28747	0					
ANR	29017	UnaryOperator	*		28747	0					
ANR	29018	Identifier	path		28747	1					
ANR	29019	Identifier	p		28747	1					
ANR	29020	ReturnStatement	return entry ;	409:2:9621:9633	28747	15	True				
ANR	29021	Identifier	entry		28747	0					
ANR	29022	ReturnType	static struct cached_dirfd *		28747	1					
ANR	29023	Identifier	traverse_next		28747	2					
ANR	29024	ParameterList	"struct cached_dirfd * dir , const char * * path , int keepfd , struct symlink * * symlink"		28747	3					
ANR	29025	Parameter	struct cached_dirfd * dir	359:15:8509:8532	28747	0	True				
ANR	29026	ParameterType	struct cached_dirfd *		28747	0					
ANR	29027	Identifier	dir		28747	1					
ANR	29028	Parameter	const char * * path	359:41:8535:8551	28747	1	True				
ANR	29029	ParameterType	const char * *		28747	0					
ANR	29030	Identifier	path		28747	1					
ANR	29031	Parameter	int keepfd	359:60:8554:8563	28747	2	True				
ANR	29032	ParameterType	int		28747	0					
ANR	29033	Identifier	keepfd		28747	1					
ANR	29034	Parameter	struct symlink * * symlink	360:8:8574:8597	28747	3	True				
ANR	29035	ParameterType	struct symlink * *		28747	0					
ANR	29036	Identifier	symlink		28747	1					
ANR	29037	CFGEntryNode	ENTRY		28747		True				
ANR	29038	CFGExitNode	EXIT		28747		True				
ANR	29039	Symbol	* dir		28747						
ANR	29040	Symbol	openat_cached		28747						
ANR	29041	Symbol	* * path		28747						
ANR	29042	Symbol	list_empty		28747						
ANR	29043	Symbol	dir		28747						
ANR	29044	Symbol	ISSLASH		28747						
ANR	29045	Symbol	path		28747						
ANR	29046	Symbol	keepfd		28747						
ANR	29047	Symbol	read_symlink		28747						
ANR	29048	Symbol	EXDEV		28747						
ANR	29049	Symbol	symlink		28747						
ANR	29050	Symbol	ELOOP		28747						
ANR	29051	Symbol	EFTYPE		28747						
ANR	29052	Symbol	& dir -> lru_link		28747						
ANR	29053	Symbol	* name		28747						
ANR	29054	Symbol	errno		28747						
ANR	29055	Symbol	& lru_list		28747						
ANR	29056	Symbol	alloca		28747						
ANR	29057	Symbol	* ( * path + 1 )		28747						
ANR	29058	Symbol	p		28747						
ANR	29059	Symbol	entry		28747						
ANR	29060	Symbol	* symlink		28747						
ANR	29061	Symbol	dir -> parent		28747						
ANR	29062	Symbol	dir -> fd		28747						
ANR	29063	Symbol	ENOTDIR		28747						
ANR	29064	Symbol	name		28747						
ANR	29065	Symbol	* path		28747						
ANR	29066	Symbol	* p		28747						
ANR	29067	Symbol	EMLINK		28747						
ANR	29068	Function	traverse_another_path	422:0:10214:12930							
ANR	29069	FunctionDef	"traverse_another_path (const char * * pathname , int keepfd)"		29068	0					
ANR	29070	CompoundStatement		423:0:10283:12930	29068	0					
ANR	29071	Statement	static	424:2:10287:10292	29068	0	True				
ANR	29072	Statement	struct	424:9:10294:10299	29068	1	True				
ANR	29073	Statement	cached_dirfd	424:16:10301:10312	29068	2	True				
ANR	29074	Statement	cwd	424:29:10314:10316	29068	3	True				
ANR	29075	Statement	=	424:33:10318:10318	29068	4	True				
ANR	29076	CompoundStatement		2:35:36:36	29068	5					
ANR	29077	Statement	.	425:4:10326:10326	29068	0	True				
ANR	29078	Statement	fd	425:5:10327:10328	29068	1	True				
ANR	29079	Statement	=	425:8:10330:10330	29068	2	True				
ANR	29080	Statement	AT_FDCWD	425:10:10332:10339	29068	3	True				
ANR	29081	Statement	","	425:18:10340:10340	29068	4	True				
ANR	29082	ExpressionStatement		426:3:10345:10345	29068	6	True				
ANR	29083	IdentifierDeclStatement	unsigned int misses = dirfd_cache_misses ;	428:2:10350:10390	29068	7	True				
ANR	29084	IdentifierDecl	misses = dirfd_cache_misses		29068	0					
ANR	29085	IdentifierDeclType	unsigned int		29068	0					
ANR	29086	Identifier	misses		29068	1					
ANR	29087	AssignmentExpression	misses = dirfd_cache_misses		29068	2		=			
ANR	29088	Identifier	dirfd_cache_misses		29068	0					
ANR	29089	Identifier	dirfd_cache_misses		29068	1					
ANR	29090	IdentifierDeclStatement	"const char * path = * pathname , * last ;"	429:2:10394:10429	29068	8	True				
ANR	29091	IdentifierDecl	* path = * pathname		29068	0					
ANR	29092	IdentifierDeclType	const char *		29068	0					
ANR	29093	Identifier	path		29068	1					
ANR	29094	AssignmentExpression	* path = * pathname		29068	2		=			
ANR	29095	Identifier	path		29068	0					
ANR	29096	UnaryOperationExpression	* pathname		29068	1					
ANR	29097	UnaryOperator	*		29068	0					
ANR	29098	Identifier	pathname		29068	1					
ANR	29099	IdentifierDecl	* last		29068	1					
ANR	29100	IdentifierDeclType	const char *		29068	0					
ANR	29101	Identifier	last		29068	1					
ANR	29102	IdentifierDeclStatement	struct cached_dirfd * dir = & cwd ;	430:2:10433:10464	29068	9	True				
ANR	29103	IdentifierDecl	* dir = & cwd		29068	0					
ANR	29104	IdentifierDeclType	struct cached_dirfd *		29068	0					
ANR	29105	Identifier	dir		29068	1					
ANR	29106	AssignmentExpression	* dir = & cwd		29068	2		=			
ANR	29107	Identifier	dir		29068	0					
ANR	29108	UnaryOperationExpression	& cwd		29068	1					
ANR	29109	UnaryOperator	&		29068	0					
ANR	29110	Identifier	cwd		29068	1					
ANR	29111	IdentifierDeclStatement	struct symlink * stack = NULL ;	431:2:10468:10496	29068	10	True				
ANR	29112	IdentifierDecl	* stack = NULL		29068	0					
ANR	29113	IdentifierDeclType	struct symlink *		29068	0					
ANR	29114	Identifier	stack		29068	1					
ANR	29115	AssignmentExpression	* stack = NULL		29068	2		=			
ANR	29116	Identifier	NULL		29068	0					
ANR	29117	Identifier	NULL		29068	1					
ANR	29118	IdentifierDeclStatement	unsigned int steps = count_path_components ( path ) ;	432:2:10500:10549	29068	11	True				
ANR	29119	IdentifierDecl	steps = count_path_components ( path )		29068	0					
ANR	29120	IdentifierDeclType	unsigned int		29068	0					
ANR	29121	Identifier	steps		29068	1					
ANR	29122	AssignmentExpression	steps = count_path_components ( path )		29068	2		=			
ANR	29123	Identifier	steps		29068	0					
ANR	29124	CallExpression	count_path_components ( path )		29068	1					
ANR	29125	Callee	count_path_components		29068	0					
ANR	29126	Identifier	count_path_components		29068	0					
ANR	29127	ArgumentList	path		29068	1					
ANR	29128	Argument	path		29068	0					
ANR	29129	Identifier	path		29068	0					
ANR	29130	IdentifierDeclStatement	struct cached_dirfd * traversed_symlink = NULL ;	433:2:10553:10598	29068	12	True				
ANR	29131	IdentifierDecl	* traversed_symlink = NULL		29068	0					
ANR	29132	IdentifierDeclType	struct cached_dirfd *		29068	0					
ANR	29133	Identifier	traversed_symlink		29068	1					
ANR	29134	AssignmentExpression	* traversed_symlink = NULL		29068	2		=			
ANR	29135	Identifier	NULL		29068	0					
ANR	29136	Identifier	NULL		29068	1					
ANR	29137	ExpressionStatement	INIT_LIST_HEAD ( & cwd . children )	435:2:10603:10633	29068	13	True				
ANR	29138	CallExpression	INIT_LIST_HEAD ( & cwd . children )		29068	0					
ANR	29139	Callee	INIT_LIST_HEAD		29068	0					
ANR	29140	Identifier	INIT_LIST_HEAD		29068	0					
ANR	29141	ArgumentList	& cwd . children		29068	1					
ANR	29142	Argument	& cwd . children		29068	0					
ANR	29143	UnaryOperationExpression	& cwd . children		29068	0					
ANR	29144	UnaryOperator	&		29068	0					
ANR	29145	MemberAccess	cwd . children		29068	1					
ANR	29146	Identifier	cwd		29068	0					
ANR	29147	Identifier	children		29068	1					
ANR	29148	IfStatement	if ( steps > MAX_PATH_COMPONENTS )		29068	14					
ANR	29149	Condition	steps > MAX_PATH_COMPONENTS	437:6:10642:10668	29068	0	True				
ANR	29150	RelationalExpression	steps > MAX_PATH_COMPONENTS		29068	0		>			
ANR	29151	Identifier	steps		29068	0					
ANR	29152	Identifier	MAX_PATH_COMPONENTS		29068	1					
ANR	29153	CompoundStatement		16:4:391:391	29068	1					
ANR	29154	ExpressionStatement	errno = ELOOP	439:6:10683:10696	29068	0	True				
ANR	29155	AssignmentExpression	errno = ELOOP		29068	0		=			
ANR	29156	Identifier	errno		29068	0					
ANR	29157	Identifier	ELOOP		29068	1					
ANR	29158	ReturnStatement	return - 1 ;	440:6:10704:10713	29068	1	True				
ANR	29159	UnaryOperationExpression	- 1		29068	0					
ANR	29160	UnaryOperator	-		29068	0					
ANR	29161	PrimaryExpression	1		29068	1					
ANR	29162	IfStatement	if ( ! * path || IS_ABSOLUTE_FILE_NAME ( path ) )		29068	15					
ANR	29163	Condition	! * path || IS_ABSOLUTE_FILE_NAME ( path )	443:6:10728:10766	29068	0	True				
ANR	29164	OrExpression	! * path || IS_ABSOLUTE_FILE_NAME ( path )		29068	0		||			
ANR	29165	UnaryOperationExpression	! * path		29068	0					
ANR	29166	UnaryOperator	!		29068	0					
ANR	29167	UnaryOperationExpression	* path		29068	1					
ANR	29168	UnaryOperator	*		29068	0					
ANR	29169	Identifier	path		29068	1					
ANR	29170	CallExpression	IS_ABSOLUTE_FILE_NAME ( path )		29068	1					
ANR	29171	Callee	IS_ABSOLUTE_FILE_NAME		29068	0					
ANR	29172	Identifier	IS_ABSOLUTE_FILE_NAME		29068	0					
ANR	29173	ArgumentList	path		29068	1					
ANR	29174	Argument	path		29068	0					
ANR	29175	Identifier	path		29068	0					
ANR	29176	ReturnStatement	return AT_FDCWD ;	444:4:10773:10788	29068	1	True				
ANR	29177	Identifier	AT_FDCWD		29068	0					
ANR	29178	ExpressionStatement	"last = strrchr ( path , 0 ) - 1"	447:2:10834:10862	29068	16	True				
ANR	29179	AssignmentExpression	"last = strrchr ( path , 0 ) - 1"		29068	0		=			
ANR	29180	Identifier	last		29068	0					
ANR	29181	AdditiveExpression	"strrchr ( path , 0 ) - 1"		29068	1		-			
ANR	29182	CallExpression	"strrchr ( path , 0 )"		29068	0					
ANR	29183	Callee	strrchr		29068	0					
ANR	29184	Identifier	strrchr		29068	0					
ANR	29185	ArgumentList	path		29068	1					
ANR	29186	Argument	path		29068	0					
ANR	29187	Identifier	path		29068	0					
ANR	29188	Argument	0		29068	1					
ANR	29189	PrimaryExpression	0		29068	0					
ANR	29190	PrimaryExpression	1		29068	1					
ANR	29191	IfStatement	if ( ISSLASH ( * last ) )		29068	17					
ANR	29192	Condition	ISSLASH ( * last )	448:6:10870:10884	29068	0	True				
ANR	29193	CallExpression	ISSLASH ( * last )		29068	0					
ANR	29194	Callee	ISSLASH		29068	0					
ANR	29195	Identifier	ISSLASH		29068	0					
ANR	29196	ArgumentList	* last		29068	1					
ANR	29197	Argument	* last		29068	0					
ANR	29198	UnaryOperationExpression	* last		29068	0					
ANR	29199	UnaryOperator	*		29068	0					
ANR	29200	Identifier	last		29068	1					
ANR	29201	CompoundStatement		27:4:607:607	29068	1					
ANR	29202	WhileStatement	while ( last != path )		29068	0					
ANR	29203	Condition	last != path	450:13:10906:10917	29068	0	True				
ANR	29204	EqualityExpression	last != path		29068	0		!=			
ANR	29205	Identifier	last		29068	0					
ANR	29206	Identifier	path		29068	1					
ANR	29207	IfStatement	if ( ! ISSLASH ( * -- last ) )		29068	1					
ANR	29208	Condition	! ISSLASH ( * -- last )	451:5:10925:10943	29068	0	True				
ANR	29209	UnaryOperationExpression	! ISSLASH ( * -- last )		29068	0					
ANR	29210	UnaryOperator	!		29068	0					
ANR	29211	CallExpression	ISSLASH ( * -- last )		29068	1					
ANR	29212	Callee	ISSLASH		29068	0					
ANR	29213	Identifier	ISSLASH		29068	0					
ANR	29214	ArgumentList	* -- last		29068	1					
ANR	29215	Argument	* -- last		29068	0					
ANR	29216	UnaryOperationExpression	* -- last		29068	0					
ANR	29217	UnaryOperator	*		29068	0					
ANR	29218	UnaryExpression	-- last		29068	1					
ANR	29219	IncDec	--		29068	0					
ANR	29220	Identifier	last		29068	1					
ANR	29221	BreakStatement	break ;	452:3:10949:10954	29068	1	True				
ANR	29222	WhileStatement	while ( last != path && ! ISSLASH ( * ( last - 1 ) ) )		29068	18					
ANR	29223	Condition	last != path && ! ISSLASH ( * ( last - 1 ) )	454:9:10971:11009	29068	0	True				
ANR	29224	AndExpression	last != path && ! ISSLASH ( * ( last - 1 ) )		29068	0		&&			
ANR	29225	EqualityExpression	last != path		29068	0		!=			
ANR	29226	Identifier	last		29068	0					
ANR	29227	Identifier	path		29068	1					
ANR	29228	UnaryOperationExpression	! ISSLASH ( * ( last - 1 ) )		29068	1					
ANR	29229	UnaryOperator	!		29068	0					
ANR	29230	CallExpression	ISSLASH ( * ( last - 1 ) )		29068	1					
ANR	29231	Callee	ISSLASH		29068	0					
ANR	29232	Identifier	ISSLASH		29068	0					
ANR	29233	ArgumentList	* ( last - 1 )		29068	1					
ANR	29234	Argument	* ( last - 1 )		29068	0					
ANR	29235	UnaryOperationExpression	* ( last - 1 )		29068	0					
ANR	29236	UnaryOperator	*		29068	0					
ANR	29237	AdditiveExpression	last - 1		29068	1		-			
ANR	29238	Identifier	last		29068	0					
ANR	29239	PrimaryExpression	1		29068	1					
ANR	29240	ExpressionStatement	last --	455:4:11016:11022	29068	1	True				
ANR	29241	PostIncDecOperationExpression	last --		29068	0					
ANR	29242	Identifier	last		29068	0					
ANR	29243	IncDec	--		29068	1					
ANR	29244	IfStatement	if ( last == path )		29068	19					
ANR	29245	Condition	last == path	456:6:11030:11041	29068	0	True				
ANR	29246	EqualityExpression	last == path		29068	0		==			
ANR	29247	Identifier	last		29068	0					
ANR	29248	Identifier	path		29068	1					
ANR	29249	ReturnStatement	return AT_FDCWD ;	457:4:11048:11063	29068	1	True				
ANR	29250	Identifier	AT_FDCWD		29068	0					
ANR	29251	IfStatement	if ( debug & 32 )		29068	20					
ANR	29252	Condition	debug & 32	459:6:11072:11081	29068	0	True				
ANR	29253	BitAndExpression	debug & 32		29068	0		&			
ANR	29254	Identifier	debug		29068	0					
ANR	29255	PrimaryExpression	32		29068	1					
ANR	29256	ExpressionStatement	"printf ( ""Resolving path \\""%.*s\\"""" , ( int ) ( last - path ) , path )"	460:4:11088:11149	29068	1	True				
ANR	29257	CallExpression	"printf ( ""Resolving path \\""%.*s\\"""" , ( int ) ( last - path ) , path )"		29068	0					
ANR	29258	Callee	printf		29068	0					
ANR	29259	Identifier	printf		29068	0					
ANR	29260	ArgumentList	"""Resolving path \\""%.*s\\"""""		29068	1					
ANR	29261	Argument	"""Resolving path \\""%.*s\\"""""		29068	0					
ANR	29262	PrimaryExpression	"""Resolving path \\""%.*s\\"""""		29068	0					
ANR	29263	Argument	( int ) ( last - path )		29068	1					
ANR	29264	CastExpression	( int ) ( last - path )		29068	0					
ANR	29265	CastTarget	int		29068	0					
ANR	29266	AdditiveExpression	last - path		29068	1		-			
ANR	29267	Identifier	last		29068	0					
ANR	29268	Identifier	path		29068	1					
ANR	29269	Argument	path		29068	2					
ANR	29270	Identifier	path		29068	0					
ANR	29271	WhileStatement	while ( stack || path != last )		29068	21					
ANR	29272	Condition	stack || path != last	462:9:11161:11181	29068	0	True				
ANR	29273	OrExpression	stack || path != last		29068	0		||			
ANR	29274	Identifier	stack		29068	0					
ANR	29275	EqualityExpression	path != last		29068	1		!=			
ANR	29276	Identifier	path		29068	0					
ANR	29277	Identifier	last		29068	1					
ANR	29278	CompoundStatement		44:6:984:1007	29068	1					
ANR	29279	IdentifierDeclStatement	struct cached_dirfd * entry ;	464:6:11196:11222	29068	0	True				
ANR	29280	IdentifierDecl	* entry		29068	0					
ANR	29281	IdentifierDeclType	struct cached_dirfd *		29068	0					
ANR	29282	Identifier	entry		29068	1					
ANR	29283	IdentifierDeclStatement	struct symlink * symlink = NULL ;	465:6:11230:11260	29068	1	True				
ANR	29284	IdentifierDecl	* symlink = NULL		29068	0					
ANR	29285	IdentifierDeclType	struct symlink *		29068	0					
ANR	29286	Identifier	symlink		29068	1					
ANR	29287	AssignmentExpression	* symlink = NULL		29068	2		=			
ANR	29288	Identifier	NULL		29068	0					
ANR	29289	Identifier	NULL		29068	1					
ANR	29290	IdentifierDeclStatement	const char * prev = path ;	466:6:11268:11291	29068	2	True				
ANR	29291	IdentifierDecl	* prev = path		29068	0					
ANR	29292	IdentifierDeclType	const char *		29068	0					
ANR	29293	Identifier	prev		29068	1					
ANR	29294	AssignmentExpression	* prev = path		29068	2		=			
ANR	29295	Identifier	path		29068	0					
ANR	29296	Identifier	path		29068	1					
ANR	29297	ExpressionStatement	"entry = traverse_next ( dir , stack ? & stack -> path : & path , keepfd , & symlink )"	468:6:11300:11375	29068	3	True				
ANR	29298	AssignmentExpression	"entry = traverse_next ( dir , stack ? & stack -> path : & path , keepfd , & symlink )"		29068	0		=			
ANR	29299	Identifier	entry		29068	0					
ANR	29300	CallExpression	"traverse_next ( dir , stack ? & stack -> path : & path , keepfd , & symlink )"		29068	1					
ANR	29301	Callee	traverse_next		29068	0					
ANR	29302	Identifier	traverse_next		29068	0					
ANR	29303	ArgumentList	dir		29068	1					
ANR	29304	Argument	dir		29068	0					
ANR	29305	Identifier	dir		29068	0					
ANR	29306	Argument	stack ? & stack -> path : & path		29068	1					
ANR	29307	ConditionalExpression	stack ? & stack -> path : & path		29068	0					
ANR	29308	Condition	stack		29068	0					
ANR	29309	Identifier	stack		29068	0					
ANR	29310	UnaryOperationExpression	& stack -> path		29068	1					
ANR	29311	UnaryOperator	&		29068	0					
ANR	29312	PtrMemberAccess	stack -> path		29068	1					
ANR	29313	Identifier	stack		29068	0					
ANR	29314	Identifier	path		29068	1					
ANR	29315	UnaryOperationExpression	& path		29068	2					
ANR	29316	UnaryOperator	&		29068	0					
ANR	29317	Identifier	path		29068	1					
ANR	29318	Argument	keepfd		29068	2					
ANR	29319	Identifier	keepfd		29068	0					
ANR	29320	Argument	& symlink		29068	3					
ANR	29321	UnaryOperationExpression	& symlink		29068	0					
ANR	29322	UnaryOperator	&		29068	0					
ANR	29323	Identifier	symlink		29068	1					
ANR	29324	IfStatement	if ( ! entry )		29068	4					
ANR	29325	Condition	! entry	469:10:11387:11393	29068	0	True				
ANR	29326	UnaryOperationExpression	! entry		29068	0					
ANR	29327	UnaryOperator	!		29068	0					
ANR	29328	Identifier	entry		29068	1					
ANR	29329	CompoundStatement		48:1:1113:1113	29068	1					
ANR	29330	IfStatement	if ( debug & 32 )		29068	0					
ANR	29331	Condition	debug & 32	471:7:11406:11415	29068	0	True				
ANR	29332	BitAndExpression	debug & 32		29068	0		&			
ANR	29333	Identifier	debug		29068	0					
ANR	29334	PrimaryExpression	32		29068	1					
ANR	29335	CompoundStatement		50:5:1139:1139	29068	1					
ANR	29336	ExpressionStatement	"printf ( "" (failed)\\n"" )"	473:7:11432:11454	29068	0	True				
ANR	29337	CallExpression	"printf ( "" (failed)\\n"" )"		29068	0					
ANR	29338	Callee	printf		29068	0					
ANR	29339	Identifier	printf		29068	0					
ANR	29340	ArgumentList	""" (failed)\\n"""		29068	1					
ANR	29341	Argument	""" (failed)\\n"""		29068	0					
ANR	29342	PrimaryExpression	""" (failed)\\n"""		29068	0					
ANR	29343	ExpressionStatement	fflush ( stdout )	474:7:11463:11478	29068	1	True				
ANR	29344	CallExpression	fflush ( stdout )		29068	0					
ANR	29345	Callee	fflush		29068	0					
ANR	29346	Identifier	fflush		29068	0					
ANR	29347	ArgumentList	stdout		29068	1					
ANR	29348	Argument	stdout		29068	0					
ANR	29349	Identifier	stdout		29068	0					
ANR	29350	GotoStatement	goto fail ;	476:3:11490:11499	29068	1	True				
ANR	29351	Identifier	fail		29068	0					
ANR	29352	ExpressionStatement	dir = entry	478:6:11510:11521	29068	5	True				
ANR	29353	AssignmentExpression	dir = entry		29068	0		=			
ANR	29354	Identifier	dir		29068	0					
ANR	29355	Identifier	entry		29068	1					
ANR	29356	IfStatement	if ( ! stack && symlink )		29068	6					
ANR	29357	Condition	! stack && symlink	479:10:11533:11550	29068	0	True				
ANR	29358	AndExpression	! stack && symlink		29068	0		&&			
ANR	29359	UnaryOperationExpression	! stack		29068	0					
ANR	29360	UnaryOperator	!		29068	0					
ANR	29361	Identifier	stack		29068	1					
ANR	29362	Identifier	symlink		29068	1					
ANR	29363	CompoundStatement		60:3:1300:1310	29068	1					
ANR	29364	IdentifierDeclStatement	const char * p = prev ;	481:3:11559:11579	29068	0	True				
ANR	29365	IdentifierDecl	* p = prev		29068	0					
ANR	29366	IdentifierDeclType	const char *		29068	0					
ANR	29367	Identifier	p		29068	1					
ANR	29368	AssignmentExpression	* p = prev		29068	2		=			
ANR	29369	Identifier	prev		29068	0					
ANR	29370	Identifier	prev		29068	1					
ANR	29371	IdentifierDeclStatement	char * name ;	482:3:11584:11594	29068	1	True				
ANR	29372	IdentifierDecl	* name		29068	0					
ANR	29373	IdentifierDeclType	char *		29068	0					
ANR	29374	Identifier	name		29068	1					
ANR	29375	WhileStatement	while ( * p && ! ISSLASH ( * p ) )		29068	2					
ANR	29376	Condition	* p && ! ISSLASH ( * p )	484:10:11607:11626	29068	0	True				
ANR	29377	AndExpression	* p && ! ISSLASH ( * p )		29068	0		&&			
ANR	29378	UnaryOperationExpression	* p		29068	0					
ANR	29379	UnaryOperator	*		29068	0					
ANR	29380	Identifier	p		29068	1					
ANR	29381	UnaryOperationExpression	! ISSLASH ( * p )		29068	1					
ANR	29382	UnaryOperator	!		29068	0					
ANR	29383	CallExpression	ISSLASH ( * p )		29068	1					
ANR	29384	Callee	ISSLASH		29068	0					
ANR	29385	Identifier	ISSLASH		29068	0					
ANR	29386	ArgumentList	* p		29068	1					
ANR	29387	Argument	* p		29068	0					
ANR	29388	UnaryOperationExpression	* p		29068	0					
ANR	29389	UnaryOperator	*		29068	0					
ANR	29390	Identifier	p		29068	1					
ANR	29391	ExpressionStatement	p ++	485:5:11634:11637	29068	1	True				
ANR	29392	PostIncDecOperationExpression	p ++		29068	0					
ANR	29393	Identifier	p		29068	0					
ANR	29394	IncDec	++		29068	1					
ANR	29395	ExpressionStatement	name = alloca ( p - prev + 1 )	486:3:11642:11670	29068	3	True				
ANR	29396	AssignmentExpression	name = alloca ( p - prev + 1 )		29068	0		=			
ANR	29397	Identifier	name		29068	0					
ANR	29398	CallExpression	alloca ( p - prev + 1 )		29068	1					
ANR	29399	Callee	alloca		29068	0					
ANR	29400	Identifier	alloca		29068	0					
ANR	29401	ArgumentList	p - prev + 1		29068	1					
ANR	29402	Argument	p - prev + 1		29068	0					
ANR	29403	AdditiveExpression	p - prev + 1		29068	0		-			
ANR	29404	Identifier	p		29068	0					
ANR	29405	AdditiveExpression	prev + 1		29068	1		+			
ANR	29406	Identifier	prev		29068	0					
ANR	29407	PrimaryExpression	1		29068	1					
ANR	29408	ExpressionStatement	"memcpy ( name , prev , p - prev )"	487:3:11675:11704	29068	4	True				
ANR	29409	CallExpression	"memcpy ( name , prev , p - prev )"		29068	0					
ANR	29410	Callee	memcpy		29068	0					
ANR	29411	Identifier	memcpy		29068	0					
ANR	29412	ArgumentList	name		29068	1					
ANR	29413	Argument	name		29068	0					
ANR	29414	Identifier	name		29068	0					
ANR	29415	Argument	prev		29068	1					
ANR	29416	Identifier	prev		29068	0					
ANR	29417	Argument	p - prev		29068	2					
ANR	29418	AdditiveExpression	p - prev		29068	0		-			
ANR	29419	Identifier	p		29068	0					
ANR	29420	Identifier	prev		29068	1					
ANR	29421	ExpressionStatement	name [ p - prev ] = 0	488:3:11709:11727	29068	5	True				
ANR	29422	AssignmentExpression	name [ p - prev ] = 0		29068	0		=			
ANR	29423	ArrayIndexing	name [ p - prev ]		29068	0					
ANR	29424	Identifier	name		29068	0					
ANR	29425	AdditiveExpression	p - prev		29068	1		-			
ANR	29426	Identifier	p		29068	0					
ANR	29427	Identifier	prev		29068	1					
ANR	29428	PrimaryExpression	0		29068	1					
ANR	29429	ExpressionStatement	"traversed_symlink = new_cached_dirfd ( dir , name , - 1 )"	490:3:11733:11785	29068	6	True				
ANR	29430	AssignmentExpression	"traversed_symlink = new_cached_dirfd ( dir , name , - 1 )"		29068	0		=			
ANR	29431	Identifier	traversed_symlink		29068	0					
ANR	29432	CallExpression	"new_cached_dirfd ( dir , name , - 1 )"		29068	1					
ANR	29433	Callee	new_cached_dirfd		29068	0					
ANR	29434	Identifier	new_cached_dirfd		29068	0					
ANR	29435	ArgumentList	dir		29068	1					
ANR	29436	Argument	dir		29068	0					
ANR	29437	Identifier	dir		29068	0					
ANR	29438	Argument	name		29068	1					
ANR	29439	Identifier	name		29068	0					
ANR	29440	Argument	- 1		29068	2					
ANR	29441	UnaryOperationExpression	- 1		29068	0					
ANR	29442	UnaryOperator	-		29068	0					
ANR	29443	PrimaryExpression	1		29068	1					
ANR	29444	IfStatement	if ( stack && ! * stack -> path )		29068	7					
ANR	29445	Condition	stack && ! * stack -> path	492:10:11800:11822	29068	0	True				
ANR	29446	AndExpression	stack && ! * stack -> path		29068	0		&&			
ANR	29447	Identifier	stack		29068	0					
ANR	29448	UnaryOperationExpression	! * stack -> path		29068	1					
ANR	29449	UnaryOperator	!		29068	0					
ANR	29450	UnaryOperationExpression	* stack -> path		29068	1					
ANR	29451	UnaryOperator	*		29068	0					
ANR	29452	PtrMemberAccess	stack -> path		29068	1					
ANR	29453	Identifier	stack		29068	0					
ANR	29454	Identifier	path		29068	1					
ANR	29455	ExpressionStatement	pop_symlink ( & stack )	493:1:11826:11846	29068	1	True				
ANR	29456	CallExpression	pop_symlink ( & stack )		29068	0					
ANR	29457	Callee	pop_symlink		29068	0					
ANR	29458	Identifier	pop_symlink		29068	0					
ANR	29459	ArgumentList	& stack		29068	1					
ANR	29460	Argument	& stack		29068	0					
ANR	29461	UnaryOperationExpression	& stack		29068	0					
ANR	29462	UnaryOperator	&		29068	0					
ANR	29463	Identifier	stack		29068	1					
ANR	29464	IfStatement	if ( symlink && * symlink -> path )		29068	8					
ANR	29465	Condition	symlink && * symlink -> path	494:10:11858:11882	29068	0	True				
ANR	29466	AndExpression	symlink && * symlink -> path		29068	0		&&			
ANR	29467	Identifier	symlink		29068	0					
ANR	29468	UnaryOperationExpression	* symlink -> path		29068	1					
ANR	29469	UnaryOperator	*		29068	0					
ANR	29470	PtrMemberAccess	symlink -> path		29068	1					
ANR	29471	Identifier	symlink		29068	0					
ANR	29472	Identifier	path		29068	1					
ANR	29473	CompoundStatement		73:1:1602:1602	29068	1					
ANR	29474	ExpressionStatement	"push_symlink ( & stack , symlink )"	496:3:11891:11921	29068	0	True				
ANR	29475	CallExpression	"push_symlink ( & stack , symlink )"		29068	0					
ANR	29476	Callee	push_symlink		29068	0					
ANR	29477	Identifier	push_symlink		29068	0					
ANR	29478	ArgumentList	& stack		29068	1					
ANR	29479	Argument	& stack		29068	0					
ANR	29480	UnaryOperationExpression	& stack		29068	0					
ANR	29481	UnaryOperator	&		29068	0					
ANR	29482	Identifier	stack		29068	1					
ANR	29483	Argument	symlink		29068	1					
ANR	29484	Identifier	symlink		29068	0					
ANR	29485	ExpressionStatement	steps += count_path_components ( symlink -> path )	497:3:11926:11972	29068	1	True				
ANR	29486	AssignmentExpression	steps += count_path_components ( symlink -> path )		29068	0		+=			
ANR	29487	Identifier	steps		29068	0					
ANR	29488	CallExpression	count_path_components ( symlink -> path )		29068	1					
ANR	29489	Callee	count_path_components		29068	0					
ANR	29490	Identifier	count_path_components		29068	0					
ANR	29491	ArgumentList	symlink -> path		29068	1					
ANR	29492	Argument	symlink -> path		29068	0					
ANR	29493	PtrMemberAccess	symlink -> path		29068	0					
ANR	29494	Identifier	symlink		29068	0					
ANR	29495	Identifier	path		29068	1					
ANR	29496	IfStatement	if ( steps > MAX_PATH_COMPONENTS )		29068	2					
ANR	29497	Condition	steps > MAX_PATH_COMPONENTS	498:7:11981:12007	29068	0	True				
ANR	29498	RelationalExpression	steps > MAX_PATH_COMPONENTS		29068	0		>			
ANR	29499	Identifier	steps		29068	0					
ANR	29500	Identifier	MAX_PATH_COMPONENTS		29068	1					
ANR	29501	CompoundStatement		77:5:1731:1731	29068	1					
ANR	29502	ExpressionStatement	errno = ELOOP	500:7:12024:12037	29068	0	True				
ANR	29503	AssignmentExpression	errno = ELOOP		29068	0		=			
ANR	29504	Identifier	errno		29068	0					
ANR	29505	Identifier	ELOOP		29068	1					
ANR	29506	GotoStatement	goto fail ;	501:7:12046:12055	29068	1	True				
ANR	29507	Identifier	fail		29068	0					
ANR	29508	ElseStatement	else		29068	0					
ANR	29509	IfStatement	if ( symlink )		29068	0					
ANR	29510	Condition	symlink	504:15:12082:12088	29068	0	True				
ANR	29511	Identifier	symlink		29068	0					
ANR	29512	ExpressionStatement	pop_symlink ( & symlink )	505:1:12092:12114	29068	1	True				
ANR	29513	CallExpression	pop_symlink ( & symlink )		29068	0					
ANR	29514	Callee	pop_symlink		29068	0					
ANR	29515	Identifier	pop_symlink		29068	0					
ANR	29516	ArgumentList	& symlink		29068	1					
ANR	29517	Argument	& symlink		29068	0					
ANR	29518	UnaryOperationExpression	& symlink		29068	0					
ANR	29519	UnaryOperator	&		29068	0					
ANR	29520	Identifier	symlink		29068	1					
ANR	29521	IfStatement	if ( traversed_symlink && ! stack )		29068	9					
ANR	29522	Condition	traversed_symlink && ! stack	506:10:12126:12153	29068	0	True				
ANR	29523	AndExpression	traversed_symlink && ! stack		29068	0		&&			
ANR	29524	Identifier	traversed_symlink		29068	0					
ANR	29525	UnaryOperationExpression	! stack		29068	1					
ANR	29526	UnaryOperator	!		29068	0					
ANR	29527	Identifier	stack		29068	1					
ANR	29528	CompoundStatement		85:1:1873:1873	29068	1					
ANR	29529	ExpressionStatement	traversed_symlink -> fd = entry -> fd == AT_FDCWD ? AT_FDCWD : dup ( entry -> fd )	508:3:12162:12241	29068	0	True				
ANR	29530	AssignmentExpression	traversed_symlink -> fd = entry -> fd == AT_FDCWD ? AT_FDCWD : dup ( entry -> fd )		29068	0		=			
ANR	29531	PtrMemberAccess	traversed_symlink -> fd		29068	0					
ANR	29532	Identifier	traversed_symlink		29068	0					
ANR	29533	Identifier	fd		29068	1					
ANR	29534	ConditionalExpression	entry -> fd == AT_FDCWD ? AT_FDCWD : dup ( entry -> fd )		29068	1					
ANR	29535	Condition	entry -> fd == AT_FDCWD		29068	0					
ANR	29536	EqualityExpression	entry -> fd == AT_FDCWD		29068	0		==			
ANR	29537	PtrMemberAccess	entry -> fd		29068	0					
ANR	29538	Identifier	entry		29068	0					
ANR	29539	Identifier	fd		29068	1					
ANR	29540	Identifier	AT_FDCWD		29068	1					
ANR	29541	Identifier	AT_FDCWD		29068	1					
ANR	29542	CallExpression	dup ( entry -> fd )		29068	2					
ANR	29543	Callee	dup		29068	0					
ANR	29544	Identifier	dup		29068	0					
ANR	29545	ArgumentList	entry -> fd		29068	1					
ANR	29546	Argument	entry -> fd		29068	0					
ANR	29547	PtrMemberAccess	entry -> fd		29068	0					
ANR	29548	Identifier	entry		29068	0					
ANR	29549	Identifier	fd		29068	1					
ANR	29550	IfStatement	if ( traversed_symlink -> fd != - 1 )		29068	1					
ANR	29551	Condition	traversed_symlink -> fd != - 1	510:7:12250:12276	29068	0	True				
ANR	29552	EqualityExpression	traversed_symlink -> fd != - 1		29068	0		!=			
ANR	29553	PtrMemberAccess	traversed_symlink -> fd		29068	0					
ANR	29554	Identifier	traversed_symlink		29068	0					
ANR	29555	Identifier	fd		29068	1					
ANR	29556	UnaryOperationExpression	- 1		29068	1					
ANR	29557	UnaryOperator	-		29068	0					
ANR	29558	PrimaryExpression	1		29068	1					
ANR	29559	CompoundStatement		89:5:2000:2000	29068	1					
ANR	29560	ExpressionStatement	"insert_cached_dirfd ( traversed_symlink , keepfd )"	512:7:12293:12340	29068	0	True				
ANR	29561	CallExpression	"insert_cached_dirfd ( traversed_symlink , keepfd )"		29068	0					
ANR	29562	Callee	insert_cached_dirfd		29068	0					
ANR	29563	Identifier	insert_cached_dirfd		29068	0					
ANR	29564	ArgumentList	traversed_symlink		29068	1					
ANR	29565	Argument	traversed_symlink		29068	0					
ANR	29566	Identifier	traversed_symlink		29068	0					
ANR	29567	Argument	keepfd		29068	1					
ANR	29568	Identifier	keepfd		29068	0					
ANR	29569	ExpressionStatement	"list_add ( & traversed_symlink -> lru_link , & lru_list )"	513:7:12349:12399	29068	1	True				
ANR	29570	CallExpression	"list_add ( & traversed_symlink -> lru_link , & lru_list )"		29068	0					
ANR	29571	Callee	list_add		29068	0					
ANR	29572	Identifier	list_add		29068	0					
ANR	29573	ArgumentList	& traversed_symlink -> lru_link		29068	1					
ANR	29574	Argument	& traversed_symlink -> lru_link		29068	0					
ANR	29575	UnaryOperationExpression	& traversed_symlink -> lru_link		29068	0					
ANR	29576	UnaryOperator	&		29068	0					
ANR	29577	PtrMemberAccess	traversed_symlink -> lru_link		29068	1					
ANR	29578	Identifier	traversed_symlink		29068	0					
ANR	29579	Identifier	lru_link		29068	1					
ANR	29580	Argument	& lru_list		29068	1					
ANR	29581	UnaryOperationExpression	& lru_list		29068	0					
ANR	29582	UnaryOperator	&		29068	0					
ANR	29583	Identifier	lru_list		29068	1					
ANR	29584	ElseStatement	else		29068	0					
ANR	29585	ExpressionStatement	free_cached_dirfd ( traversed_symlink )	516:5:12421:12458	29068	0	True				
ANR	29586	CallExpression	free_cached_dirfd ( traversed_symlink )		29068	0					
ANR	29587	Callee	free_cached_dirfd		29068	0					
ANR	29588	Identifier	free_cached_dirfd		29068	0					
ANR	29589	ArgumentList	traversed_symlink		29068	1					
ANR	29590	Argument	traversed_symlink		29068	0					
ANR	29591	Identifier	traversed_symlink		29068	0					
ANR	29592	ExpressionStatement	traversed_symlink = NULL	517:3:12463:12487	29068	2	True				
ANR	29593	AssignmentExpression	traversed_symlink = NULL		29068	0		=			
ANR	29594	Identifier	traversed_symlink		29068	0					
ANR	29595	Identifier	NULL		29068	1					
ANR	29596	ExpressionStatement	* pathname = last	520:2:12500:12516	29068	22	True				
ANR	29597	AssignmentExpression	* pathname = last		29068	0		=			
ANR	29598	UnaryOperationExpression	* pathname		29068	0					
ANR	29599	UnaryOperator	*		29068	0					
ANR	29600	Identifier	pathname		29068	1					
ANR	29601	Identifier	last		29068	1					
ANR	29602	IfStatement	if ( debug & 32 )		29068	23					
ANR	29603	Condition	debug & 32	521:6:12524:12533	29068	0	True				
ANR	29604	BitAndExpression	debug & 32		29068	0		&			
ANR	29605	Identifier	debug		29068	0					
ANR	29606	PrimaryExpression	32		29068	1					
ANR	29607	CompoundStatement		100:4:2256:2256	29068	1					
ANR	29608	ExpressionStatement	misses = ( signed int ) dirfd_cache_misses - ( signed int ) misses	523:6:12548:12610	29068	0	True				
ANR	29609	AssignmentExpression	misses = ( signed int ) dirfd_cache_misses - ( signed int ) misses		29068	0		=			
ANR	29610	Identifier	misses		29068	0					
ANR	29611	AdditiveExpression	( signed int ) dirfd_cache_misses - ( signed int ) misses		29068	1		-			
ANR	29612	CastExpression	( signed int ) dirfd_cache_misses		29068	0					
ANR	29613	CastTarget	signed int		29068	0					
ANR	29614	Identifier	dirfd_cache_misses		29068	1					
ANR	29615	CastExpression	( signed int ) misses		29068	1					
ANR	29616	CastTarget	signed int		29068	0					
ANR	29617	Identifier	misses		29068	1					
ANR	29618	IfStatement	if ( ! misses )		29068	1					
ANR	29619	Condition	! misses	524:10:12622:12629	29068	0	True				
ANR	29620	UnaryOperationExpression	! misses		29068	0					
ANR	29621	UnaryOperator	!		29068	0					
ANR	29622	Identifier	misses		29068	1					
ANR	29623	ExpressionStatement	"printf ( "" (cached)\\n"" )"	525:1:12633:12654	29068	1	True				
ANR	29624	CallExpression	"printf ( "" (cached)\\n"" )"		29068	0					
ANR	29625	Callee	printf		29068	0					
ANR	29626	Identifier	printf		29068	0					
ANR	29627	ArgumentList	""" (cached)\\n"""		29068	1					
ANR	29628	Argument	""" (cached)\\n"""		29068	0					
ANR	29629	PrimaryExpression	""" (cached)\\n"""		29068	0					
ANR	29630	ElseStatement	else		29068	0					
ANR	29631	ExpressionStatement	"printf ( "" (%u miss%s)\\n"" , misses , misses == 1 ? """" : ""es"" )"	527:1:12668:12726	29068	0	True				
ANR	29632	CallExpression	"printf ( "" (%u miss%s)\\n"" , misses , misses == 1 ? """" : ""es"" )"		29068	0					
ANR	29633	Callee	printf		29068	0					
ANR	29634	Identifier	printf		29068	0					
ANR	29635	ArgumentList	""" (%u miss%s)\\n"""		29068	1					
ANR	29636	Argument	""" (%u miss%s)\\n"""		29068	0					
ANR	29637	PrimaryExpression	""" (%u miss%s)\\n"""		29068	0					
ANR	29638	Argument	misses		29068	1					
ANR	29639	Identifier	misses		29068	0					
ANR	29640	Argument	"misses == 1 ? """" : ""es"""		29068	2					
ANR	29641	ConditionalExpression	"misses == 1 ? """" : ""es"""		29068	0					
ANR	29642	Condition	misses == 1		29068	0					
ANR	29643	EqualityExpression	misses == 1		29068	0		==			
ANR	29644	Identifier	misses		29068	0					
ANR	29645	PrimaryExpression	1		29068	1					
ANR	29646	PrimaryExpression	""""""		29068	1					
ANR	29647	PrimaryExpression	"""es"""		29068	2					
ANR	29648	ExpressionStatement	fflush ( stdout )	528:6:12734:12749	29068	2	True				
ANR	29649	CallExpression	fflush ( stdout )		29068	0					
ANR	29650	Callee	fflush		29068	0					
ANR	29651	Identifier	fflush		29068	0					
ANR	29652	ArgumentList	stdout		29068	1					
ANR	29653	Argument	stdout		29068	0					
ANR	29654	Identifier	stdout		29068	0					
ANR	29655	ReturnStatement	return put_path ( dir ) ;	530:2:12759:12780	29068	24	True				
ANR	29656	CallExpression	put_path ( dir )		29068	0					
ANR	29657	Callee	put_path		29068	0					
ANR	29658	Identifier	put_path		29068	0					
ANR	29659	ArgumentList	dir		29068	1					
ANR	29660	Argument	dir		29068	0					
ANR	29661	Identifier	dir		29068	0					
ANR	29662	Label	fail :	532:0:12783:12787	29068	25	True				
ANR	29663	Identifier	fail		29068	0					
ANR	29664	IfStatement	if ( traversed_symlink )		29068	26					
ANR	29665	Condition	traversed_symlink	533:6:12795:12811	29068	0	True				
ANR	29666	Identifier	traversed_symlink		29068	0					
ANR	29667	ExpressionStatement	free_cached_dirfd ( traversed_symlink )	534:4:12818:12855	29068	1	True				
ANR	29668	CallExpression	free_cached_dirfd ( traversed_symlink )		29068	0					
ANR	29669	Callee	free_cached_dirfd		29068	0					
ANR	29670	Identifier	free_cached_dirfd		29068	0					
ANR	29671	ArgumentList	traversed_symlink		29068	1					
ANR	29672	Argument	traversed_symlink		29068	0					
ANR	29673	Identifier	traversed_symlink		29068	0					
ANR	29674	ExpressionStatement	put_path ( dir )	535:2:12859:12873	29068	27	True				
ANR	29675	CallExpression	put_path ( dir )		29068	0					
ANR	29676	Callee	put_path		29068	0					
ANR	29677	Identifier	put_path		29068	0					
ANR	29678	ArgumentList	dir		29068	1					
ANR	29679	Argument	dir		29068	0					
ANR	29680	Identifier	dir		29068	0					
ANR	29681	WhileStatement	while ( stack )		29068	28					
ANR	29682	Condition	stack	536:9:12884:12888	29068	0	True				
ANR	29683	Identifier	stack		29068	0					
ANR	29684	ExpressionStatement	pop_symlink ( & stack )	537:4:12895:12915	29068	1	True				
ANR	29685	CallExpression	pop_symlink ( & stack )		29068	0					
ANR	29686	Callee	pop_symlink		29068	0					
ANR	29687	Identifier	pop_symlink		29068	0					
ANR	29688	ArgumentList	& stack		29068	1					
ANR	29689	Argument	& stack		29068	0					
ANR	29690	UnaryOperationExpression	& stack		29068	0					
ANR	29691	UnaryOperator	&		29068	0					
ANR	29692	Identifier	stack		29068	1					
ANR	29693	ReturnStatement	return - 1 ;	538:2:12919:12928	29068	29	True				
ANR	29694	UnaryOperationExpression	- 1		29068	0					
ANR	29695	UnaryOperator	-		29068	0					
ANR	29696	PrimaryExpression	1		29068	1					
ANR	29697	ReturnType	static int		29068	1					
ANR	29698	Identifier	traverse_another_path		29068	2					
ANR	29699	ParameterList	"const char * * pathname , int keepfd"		29068	3					
ANR	29700	Parameter	const char * * pathname	422:34:10248:10268	29068	0	True				
ANR	29701	ParameterType	const char * *		29068	0					
ANR	29702	Identifier	pathname		29068	1					
ANR	29703	Parameter	int keepfd	422:57:10271:10280	29068	1	True				
ANR	29704	ParameterType	int		29068	0					
ANR	29705	Identifier	keepfd		29068	1					
ANR	29706	CFGEntryNode	ENTRY		29068		True				
ANR	29707	CFGExitNode	EXIT		29068		True				
ANR	29708	Symbol	stack		29068						
ANR	29709	Symbol	stdout		29068						
ANR	29710	Symbol	traversed_symlink		29068						
ANR	29711	Symbol	prev		29068						
ANR	29712	Symbol	AT_FDCWD		29068						
ANR	29713	Symbol	dir		29068						
ANR	29714	Symbol	ISSLASH		29068						
ANR	29715	Symbol	* ( last - 1 )		29068						
ANR	29716	Symbol	& path		29068						
ANR	29717	Symbol	path		29068						
ANR	29718	Symbol	& stack -> path		29068						
ANR	29719	Symbol	& traversed_symlink -> lru_link		29068						
ANR	29720	Symbol	ELOOP		29068						
ANR	29721	Symbol	& symlink		29068						
ANR	29722	Symbol	errno		29068						
ANR	29723	Symbol	NULL		29068						
ANR	29724	Symbol	last		29068						
ANR	29725	Symbol	dirfd_cache_misses		29068						
ANR	29726	Symbol	steps		29068						
ANR	29727	Symbol	symlink -> path		29068						
ANR	29728	Symbol	pathname		29068						
ANR	29729	Symbol	entry		29068						
ANR	29730	Symbol	traversed_symlink -> fd		29068						
ANR	29731	Symbol	* symlink		29068						
ANR	29732	Symbol	MAX_PATH_COMPONENTS		29068						
ANR	29733	Symbol	* -- last		29068						
ANR	29734	Symbol	name		29068						
ANR	29735	Symbol	* stack -> path		29068						
ANR	29736	Symbol	put_path		29068						
ANR	29737	Symbol	IS_ABSOLUTE_FILE_NAME		29068						
ANR	29738	Symbol	* prev		29068						
ANR	29739	Symbol	entry -> fd		29068						
ANR	29740	Symbol	* symlink -> path		29068						
ANR	29741	Symbol	& cwd		29068						
ANR	29742	Symbol	keepfd		29068						
ANR	29743	Symbol	traverse_next		29068						
ANR	29744	Symbol	misses		29068						
ANR	29745	Symbol	* * stack		29068						
ANR	29746	Symbol	symlink		29068						
ANR	29747	Symbol	& stack		29068						
ANR	29748	Symbol	* traversed_symlink		29068						
ANR	29749	Symbol	* pathname		29068						
ANR	29750	Symbol	* entry		29068						
ANR	29751	Symbol	* name		29068						
ANR	29752	Symbol	debug		29068						
ANR	29753	Symbol	alloca		29068						
ANR	29754	Symbol	& lru_list		29068						
ANR	29755	Symbol	* last		29068						
ANR	29756	Symbol	p		29068						
ANR	29757	Symbol	cwd		29068						
ANR	29758	Symbol	new_cached_dirfd		29068						
ANR	29759	Symbol	strrchr		29068						
ANR	29760	Symbol	* path		29068						
ANR	29761	Symbol	* stack		29068						
ANR	29762	Symbol	stack -> path		29068						
ANR	29763	Symbol	* * symlink		29068						
ANR	29764	Symbol	* p		29068						
ANR	29765	Symbol	& cwd . children		29068						
ANR	29766	Symbol	dup		29068						
ANR	29767	Symbol	count_path_components		29068						
ANR	29768	Function	traverse_path	542:0:12992:13090							
ANR	29769	FunctionDef	traverse_path (const char * * pathname)		29768	0					
ANR	29770	CompoundStatement		543:0:13041:13090	29768	0					
ANR	29771	ReturnStatement	"return traverse_another_path ( pathname , - 1 ) ;"	544:2:13045:13088	29768	0	True				
ANR	29772	CallExpression	"traverse_another_path ( pathname , - 1 )"		29768	0					
ANR	29773	Callee	traverse_another_path		29768	0					
ANR	29774	Identifier	traverse_another_path		29768	0					
ANR	29775	ArgumentList	pathname		29768	1					
ANR	29776	Argument	pathname		29768	0					
ANR	29777	Identifier	pathname		29768	0					
ANR	29778	Argument	- 1		29768	1					
ANR	29779	UnaryOperationExpression	- 1		29768	0					
ANR	29780	UnaryOperator	-		29768	0					
ANR	29781	PrimaryExpression	1		29768	1					
ANR	29782	ReturnType	static int		29768	1					
ANR	29783	Identifier	traverse_path		29768	2					
ANR	29784	ParameterList	const char * * pathname		29768	3					
ANR	29785	Parameter	const char * * pathname	542:26:13018:13038	29768	0	True				
ANR	29786	ParameterType	const char * *		29768	0					
ANR	29787	Identifier	pathname		29768	1					
ANR	29788	CFGEntryNode	ENTRY		29768		True				
ANR	29789	CFGExitNode	EXIT		29768		True				
ANR	29790	Symbol	traverse_another_path		29768						
ANR	29791	Symbol	pathname		29768						
ANR	29792	Function	safe_xstat	547:0:13093:13392							
ANR	29793	FunctionDef	"safe_xstat (const char * pathname , struct stat * buf , int flags)"		29792	0					
ANR	29794	CompoundStatement		548:0:13167:13392	29792	0					
ANR	29795	IdentifierDeclStatement	int dirfd ;	549:2:13171:13180	29792	0	True				
ANR	29796	IdentifierDecl	dirfd		29792	0					
ANR	29797	IdentifierDeclType	int		29792	0					
ANR	29798	Identifier	dirfd		29792	1					
ANR	29799	IfStatement	if ( unsafe )		29792	1					
ANR	29800	Condition	unsafe	551:6:13189:13194	29792	0	True				
ANR	29801	Identifier	unsafe		29792	0					
ANR	29802	ReturnStatement	"return fstatat ( AT_FDCWD , pathname , buf , flags ) ;"	552:4:13201:13248	29792	1	True				
ANR	29803	CallExpression	"fstatat ( AT_FDCWD , pathname , buf , flags )"		29792	0					
ANR	29804	Callee	fstatat		29792	0					
ANR	29805	Identifier	fstatat		29792	0					
ANR	29806	ArgumentList	AT_FDCWD		29792	1					
ANR	29807	Argument	AT_FDCWD		29792	0					
ANR	29808	Identifier	AT_FDCWD		29792	0					
ANR	29809	Argument	pathname		29792	1					
ANR	29810	Identifier	pathname		29792	0					
ANR	29811	Argument	buf		29792	2					
ANR	29812	Identifier	buf		29792	0					
ANR	29813	Argument	flags		29792	3					
ANR	29814	Identifier	flags		29792	0					
ANR	29815	ExpressionStatement	dirfd = traverse_path ( & pathname )	554:2:13253:13286	29792	2	True				
ANR	29816	AssignmentExpression	dirfd = traverse_path ( & pathname )		29792	0		=			
ANR	29817	Identifier	dirfd		29792	0					
ANR	29818	CallExpression	traverse_path ( & pathname )		29792	1					
ANR	29819	Callee	traverse_path		29792	0					
ANR	29820	Identifier	traverse_path		29792	0					
ANR	29821	ArgumentList	& pathname		29792	1					
ANR	29822	Argument	& pathname		29792	0					
ANR	29823	UnaryOperationExpression	& pathname		29792	0					
ANR	29824	UnaryOperator	&		29792	0					
ANR	29825	Identifier	pathname		29792	1					
ANR	29826	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		29792	3					
ANR	29827	Condition	dirfd < 0 && dirfd != AT_FDCWD	555:6:13294:13323	29792	0	True				
ANR	29828	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		29792	0		&&			
ANR	29829	RelationalExpression	dirfd < 0		29792	0		<			
ANR	29830	Identifier	dirfd		29792	0					
ANR	29831	PrimaryExpression	0		29792	1					
ANR	29832	EqualityExpression	dirfd != AT_FDCWD		29792	1		!=			
ANR	29833	Identifier	dirfd		29792	0					
ANR	29834	Identifier	AT_FDCWD		29792	1					
ANR	29835	ReturnStatement	return dirfd ;	556:4:13330:13342	29792	1	True				
ANR	29836	Identifier	dirfd		29792	0					
ANR	29837	ReturnStatement	"return fstatat ( dirfd , pathname , buf , flags ) ;"	557:2:13346:13390	29792	4	True				
ANR	29838	CallExpression	"fstatat ( dirfd , pathname , buf , flags )"		29792	0					
ANR	29839	Callee	fstatat		29792	0					
ANR	29840	Identifier	fstatat		29792	0					
ANR	29841	ArgumentList	dirfd		29792	1					
ANR	29842	Argument	dirfd		29792	0					
ANR	29843	Identifier	dirfd		29792	0					
ANR	29844	Argument	pathname		29792	1					
ANR	29845	Identifier	pathname		29792	0					
ANR	29846	Argument	buf		29792	2					
ANR	29847	Identifier	buf		29792	0					
ANR	29848	Argument	flags		29792	3					
ANR	29849	Identifier	flags		29792	0					
ANR	29850	ReturnType	static int		29792	1					
ANR	29851	Identifier	safe_xstat		29792	2					
ANR	29852	ParameterList	"const char * pathname , struct stat * buf , int flags"		29792	3					
ANR	29853	Parameter	const char * pathname	547:23:13116:13135	29792	0	True				
ANR	29854	ParameterType	const char *		29792	0					
ANR	29855	Identifier	pathname		29792	1					
ANR	29856	Parameter	struct stat * buf	547:45:13138:13153	29792	1	True				
ANR	29857	ParameterType	struct stat *		29792	0					
ANR	29858	Identifier	buf		29792	1					
ANR	29859	Parameter	int flags	547:63:13156:13164	29792	2	True				
ANR	29860	ParameterType	int		29792	0					
ANR	29861	Identifier	flags		29792	1					
ANR	29862	CFGEntryNode	ENTRY		29792		True				
ANR	29863	CFGExitNode	EXIT		29792		True				
ANR	29864	Symbol	buf		29792						
ANR	29865	Symbol	fstatat		29792						
ANR	29866	Symbol	traverse_path		29792						
ANR	29867	Symbol	flags		29792						
ANR	29868	Symbol	AT_FDCWD		29792						
ANR	29869	Symbol	dirfd		29792						
ANR	29870	Symbol	& pathname		29792						
ANR	29871	Symbol	unsafe		29792						
ANR	29872	Symbol	pathname		29792						
ANR	29873	Function	safe_stat	561:0:13424:13521							
ANR	29874	FunctionDef	"safe_stat (const char * pathname , struct stat * buf)"		29873	0					
ANR	29875	CompoundStatement		562:0:13479:13521	29873	0					
ANR	29876	ReturnStatement	"return safe_xstat ( pathname , buf , 0 ) ;"	563:2:13483:13519	29873	0	True				
ANR	29877	CallExpression	"safe_xstat ( pathname , buf , 0 )"		29873	0					
ANR	29878	Callee	safe_xstat		29873	0					
ANR	29879	Identifier	safe_xstat		29873	0					
ANR	29880	ArgumentList	pathname		29873	1					
ANR	29881	Argument	pathname		29873	0					
ANR	29882	Identifier	pathname		29873	0					
ANR	29883	Argument	buf		29873	1					
ANR	29884	Identifier	buf		29873	0					
ANR	29885	Argument	0		29873	2					
ANR	29886	PrimaryExpression	0		29873	0					
ANR	29887	ReturnType	int		29873	1					
ANR	29888	Identifier	safe_stat		29873	2					
ANR	29889	ParameterList	"const char * pathname , struct stat * buf"		29873	3					
ANR	29890	Parameter	const char * pathname	561:15:13439:13458	29873	0	True				
ANR	29891	ParameterType	const char *		29873	0					
ANR	29892	Identifier	pathname		29873	1					
ANR	29893	Parameter	struct stat * buf	561:37:13461:13476	29873	1	True				
ANR	29894	ParameterType	struct stat *		29873	0					
ANR	29895	Identifier	buf		29873	1					
ANR	29896	CFGEntryNode	ENTRY		29873		True				
ANR	29897	CFGExitNode	EXIT		29873		True				
ANR	29898	Symbol	buf		29873						
ANR	29899	Symbol	safe_xstat		29873						
ANR	29900	Symbol	pathname		29873						
ANR	29901	Function	safe_lstat	567:0:13554:13670							
ANR	29902	FunctionDef	"safe_lstat (const char * pathname , struct stat * buf)"		29901	0					
ANR	29903	CompoundStatement		568:0:13610:13670	29901	0					
ANR	29904	ReturnStatement	"return safe_xstat ( pathname , buf , AT_SYMLINK_NOFOLLOW ) ;"	569:2:13614:13668	29901	0	True				
ANR	29905	CallExpression	"safe_xstat ( pathname , buf , AT_SYMLINK_NOFOLLOW )"		29901	0					
ANR	29906	Callee	safe_xstat		29901	0					
ANR	29907	Identifier	safe_xstat		29901	0					
ANR	29908	ArgumentList	pathname		29901	1					
ANR	29909	Argument	pathname		29901	0					
ANR	29910	Identifier	pathname		29901	0					
ANR	29911	Argument	buf		29901	1					
ANR	29912	Identifier	buf		29901	0					
ANR	29913	Argument	AT_SYMLINK_NOFOLLOW		29901	2					
ANR	29914	Identifier	AT_SYMLINK_NOFOLLOW		29901	0					
ANR	29915	ReturnType	int		29901	1					
ANR	29916	Identifier	safe_lstat		29901	2					
ANR	29917	ParameterList	"const char * pathname , struct stat * buf"		29901	3					
ANR	29918	Parameter	const char * pathname	567:16:13570:13589	29901	0	True				
ANR	29919	ParameterType	const char *		29901	0					
ANR	29920	Identifier	pathname		29901	1					
ANR	29921	Parameter	struct stat * buf	567:38:13592:13607	29901	1	True				
ANR	29922	ParameterType	struct stat *		29901	0					
ANR	29923	Identifier	buf		29901	1					
ANR	29924	CFGEntryNode	ENTRY		29901		True				
ANR	29925	CFGExitNode	EXIT		29901		True				
ANR	29926	Symbol	buf		29901						
ANR	29927	Symbol	safe_xstat		29901						
ANR	29928	Symbol	AT_SYMLINK_NOFOLLOW		29901						
ANR	29929	Symbol	pathname		29901						
ANR	29930	Function	safe_open	573:0:13702:13976							
ANR	29931	FunctionDef	"safe_open (const char * pathname , int flags , mode_t mode)"		29930	0					
ANR	29932	CompoundStatement		574:0:13763:13976	29930	0					
ANR	29933	IdentifierDeclStatement	int dirfd ;	575:2:13767:13776	29930	0	True				
ANR	29934	IdentifierDecl	dirfd		29930	0					
ANR	29935	IdentifierDeclType	int		29930	0					
ANR	29936	Identifier	dirfd		29930	1					
ANR	29937	IfStatement	if ( unsafe )		29930	1					
ANR	29938	Condition	unsafe	577:6:13785:13790	29930	0	True				
ANR	29939	Identifier	unsafe		29930	0					
ANR	29940	ReturnStatement	"return open ( pathname , flags , mode ) ;"	578:4:13797:13832	29930	1	True				
ANR	29941	CallExpression	"open ( pathname , flags , mode )"		29930	0					
ANR	29942	Callee	open		29930	0					
ANR	29943	Identifier	open		29930	0					
ANR	29944	ArgumentList	pathname		29930	1					
ANR	29945	Argument	pathname		29930	0					
ANR	29946	Identifier	pathname		29930	0					
ANR	29947	Argument	flags		29930	1					
ANR	29948	Identifier	flags		29930	0					
ANR	29949	Argument	mode		29930	2					
ANR	29950	Identifier	mode		29930	0					
ANR	29951	ExpressionStatement	dirfd = traverse_path ( & pathname )	580:2:13837:13870	29930	2	True				
ANR	29952	AssignmentExpression	dirfd = traverse_path ( & pathname )		29930	0		=			
ANR	29953	Identifier	dirfd		29930	0					
ANR	29954	CallExpression	traverse_path ( & pathname )		29930	1					
ANR	29955	Callee	traverse_path		29930	0					
ANR	29956	Identifier	traverse_path		29930	0					
ANR	29957	ArgumentList	& pathname		29930	1					
ANR	29958	Argument	& pathname		29930	0					
ANR	29959	UnaryOperationExpression	& pathname		29930	0					
ANR	29960	UnaryOperator	&		29930	0					
ANR	29961	Identifier	pathname		29930	1					
ANR	29962	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		29930	3					
ANR	29963	Condition	dirfd < 0 && dirfd != AT_FDCWD	581:6:13878:13907	29930	0	True				
ANR	29964	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		29930	0		&&			
ANR	29965	RelationalExpression	dirfd < 0		29930	0		<			
ANR	29966	Identifier	dirfd		29930	0					
ANR	29967	PrimaryExpression	0		29930	1					
ANR	29968	EqualityExpression	dirfd != AT_FDCWD		29930	1		!=			
ANR	29969	Identifier	dirfd		29930	0					
ANR	29970	Identifier	AT_FDCWD		29930	1					
ANR	29971	ReturnStatement	return dirfd ;	582:4:13914:13926	29930	1	True				
ANR	29972	Identifier	dirfd		29930	0					
ANR	29973	ReturnStatement	"return openat ( dirfd , pathname , flags , mode ) ;"	583:2:13930:13974	29930	4	True				
ANR	29974	CallExpression	"openat ( dirfd , pathname , flags , mode )"		29930	0					
ANR	29975	Callee	openat		29930	0					
ANR	29976	Identifier	openat		29930	0					
ANR	29977	ArgumentList	dirfd		29930	1					
ANR	29978	Argument	dirfd		29930	0					
ANR	29979	Identifier	dirfd		29930	0					
ANR	29980	Argument	pathname		29930	1					
ANR	29981	Identifier	pathname		29930	0					
ANR	29982	Argument	flags		29930	2					
ANR	29983	Identifier	flags		29930	0					
ANR	29984	Argument	mode		29930	3					
ANR	29985	Identifier	mode		29930	0					
ANR	29986	ReturnType	int		29930	1					
ANR	29987	Identifier	safe_open		29930	2					
ANR	29988	ParameterList	"const char * pathname , int flags , mode_t mode"		29930	3					
ANR	29989	Parameter	const char * pathname	573:15:13717:13736	29930	0	True				
ANR	29990	ParameterType	const char *		29930	0					
ANR	29991	Identifier	pathname		29930	1					
ANR	29992	Parameter	int flags	573:37:13739:13747	29930	1	True				
ANR	29993	ParameterType	int		29930	0					
ANR	29994	Identifier	flags		29930	1					
ANR	29995	Parameter	mode_t mode	573:48:13750:13760	29930	2	True				
ANR	29996	ParameterType	mode_t		29930	0					
ANR	29997	Identifier	mode		29930	1					
ANR	29998	CFGEntryNode	ENTRY		29930		True				
ANR	29999	CFGExitNode	EXIT		29930		True				
ANR	30000	Symbol	mode		29930						
ANR	30001	Symbol	traverse_path		29930						
ANR	30002	Symbol	flags		29930						
ANR	30003	Symbol	AT_FDCWD		29930						
ANR	30004	Symbol	dirfd		29930						
ANR	30005	Symbol	& pathname		29930						
ANR	30006	Symbol	unsafe		29930						
ANR	30007	Symbol	open		29930						
ANR	30008	Symbol	openat		29930						
ANR	30009	Symbol	pathname		29930						
ANR	30010	Function	safe_rename	587:0:14010:14588							
ANR	30011	FunctionDef	"safe_rename (const char * oldpath , const char * newpath)"		30010	0					
ANR	30012	CompoundStatement		588:0:14069:14588	30010	0					
ANR	30013	IdentifierDeclStatement	"int olddirfd , newdirfd ;"	589:2:14073:14095	30010	0	True				
ANR	30014	IdentifierDecl	olddirfd		30010	0					
ANR	30015	IdentifierDeclType	int		30010	0					
ANR	30016	Identifier	olddirfd		30010	1					
ANR	30017	IdentifierDecl	newdirfd		30010	1					
ANR	30018	IdentifierDeclType	int		30010	0					
ANR	30019	Identifier	newdirfd		30010	1					
ANR	30020	IdentifierDeclStatement	int ret ;	590:2:14099:14106	30010	1	True				
ANR	30021	IdentifierDecl	ret		30010	0					
ANR	30022	IdentifierDeclType	int		30010	0					
ANR	30023	Identifier	ret		30010	1					
ANR	30024	IfStatement	if ( unsafe )		30010	2					
ANR	30025	Condition	unsafe	592:6:14115:14120	30010	0	True				
ANR	30026	Identifier	unsafe		30010	0					
ANR	30027	ReturnStatement	"return rename ( oldpath , newpath ) ;"	593:4:14127:14159	30010	1	True				
ANR	30028	CallExpression	"rename ( oldpath , newpath )"		30010	0					
ANR	30029	Callee	rename		30010	0					
ANR	30030	Identifier	rename		30010	0					
ANR	30031	ArgumentList	oldpath		30010	1					
ANR	30032	Argument	oldpath		30010	0					
ANR	30033	Identifier	oldpath		30010	0					
ANR	30034	Argument	newpath		30010	1					
ANR	30035	Identifier	newpath		30010	0					
ANR	30036	ExpressionStatement	olddirfd = traverse_path ( & oldpath )	595:2:14164:14199	30010	3	True				
ANR	30037	AssignmentExpression	olddirfd = traverse_path ( & oldpath )		30010	0		=			
ANR	30038	Identifier	olddirfd		30010	0					
ANR	30039	CallExpression	traverse_path ( & oldpath )		30010	1					
ANR	30040	Callee	traverse_path		30010	0					
ANR	30041	Identifier	traverse_path		30010	0					
ANR	30042	ArgumentList	& oldpath		30010	1					
ANR	30043	Argument	& oldpath		30010	0					
ANR	30044	UnaryOperationExpression	& oldpath		30010	0					
ANR	30045	UnaryOperator	&		30010	0					
ANR	30046	Identifier	oldpath		30010	1					
ANR	30047	IfStatement	if ( olddirfd < 0 && olddirfd != AT_FDCWD )		30010	4					
ANR	30048	Condition	olddirfd < 0 && olddirfd != AT_FDCWD	596:6:14207:14242	30010	0	True				
ANR	30049	AndExpression	olddirfd < 0 && olddirfd != AT_FDCWD		30010	0		&&			
ANR	30050	RelationalExpression	olddirfd < 0		30010	0		<			
ANR	30051	Identifier	olddirfd		30010	0					
ANR	30052	PrimaryExpression	0		30010	1					
ANR	30053	EqualityExpression	olddirfd != AT_FDCWD		30010	1		!=			
ANR	30054	Identifier	olddirfd		30010	0					
ANR	30055	Identifier	AT_FDCWD		30010	1					
ANR	30056	ReturnStatement	return olddirfd ;	597:4:14249:14264	30010	1	True				
ANR	30057	Identifier	olddirfd		30010	0					
ANR	30058	ExpressionStatement	"newdirfd = traverse_another_path ( & newpath , olddirfd )"	599:2:14269:14322	30010	5	True				
ANR	30059	AssignmentExpression	"newdirfd = traverse_another_path ( & newpath , olddirfd )"		30010	0		=			
ANR	30060	Identifier	newdirfd		30010	0					
ANR	30061	CallExpression	"traverse_another_path ( & newpath , olddirfd )"		30010	1					
ANR	30062	Callee	traverse_another_path		30010	0					
ANR	30063	Identifier	traverse_another_path		30010	0					
ANR	30064	ArgumentList	& newpath		30010	1					
ANR	30065	Argument	& newpath		30010	0					
ANR	30066	UnaryOperationExpression	& newpath		30010	0					
ANR	30067	UnaryOperator	&		30010	0					
ANR	30068	Identifier	newpath		30010	1					
ANR	30069	Argument	olddirfd		30010	1					
ANR	30070	Identifier	olddirfd		30010	0					
ANR	30071	IfStatement	if ( newdirfd < 0 && newdirfd != AT_FDCWD )		30010	6					
ANR	30072	Condition	newdirfd < 0 && newdirfd != AT_FDCWD	600:6:14330:14365	30010	0	True				
ANR	30073	AndExpression	newdirfd < 0 && newdirfd != AT_FDCWD		30010	0		&&			
ANR	30074	RelationalExpression	newdirfd < 0		30010	0		<			
ANR	30075	Identifier	newdirfd		30010	0					
ANR	30076	PrimaryExpression	0		30010	1					
ANR	30077	EqualityExpression	newdirfd != AT_FDCWD		30010	1		!=			
ANR	30078	Identifier	newdirfd		30010	0					
ANR	30079	Identifier	AT_FDCWD		30010	1					
ANR	30080	ReturnStatement	return newdirfd ;	601:4:14372:14387	30010	1	True				
ANR	30081	Identifier	newdirfd		30010	0					
ANR	30082	ExpressionStatement	"ret = renameat ( olddirfd , oldpath , newdirfd , newpath )"	603:2:14392:14445	30010	7	True				
ANR	30083	AssignmentExpression	"ret = renameat ( olddirfd , oldpath , newdirfd , newpath )"		30010	0		=			
ANR	30084	Identifier	ret		30010	0					
ANR	30085	CallExpression	"renameat ( olddirfd , oldpath , newdirfd , newpath )"		30010	1					
ANR	30086	Callee	renameat		30010	0					
ANR	30087	Identifier	renameat		30010	0					
ANR	30088	ArgumentList	olddirfd		30010	1					
ANR	30089	Argument	olddirfd		30010	0					
ANR	30090	Identifier	olddirfd		30010	0					
ANR	30091	Argument	oldpath		30010	1					
ANR	30092	Identifier	oldpath		30010	0					
ANR	30093	Argument	newdirfd		30010	2					
ANR	30094	Identifier	newdirfd		30010	0					
ANR	30095	Argument	newpath		30010	3					
ANR	30096	Identifier	newpath		30010	0					
ANR	30097	IfStatement	if ( ! ret )		30010	8					
ANR	30098	Condition	! ret	604:6:14453:14457	30010	0	True				
ANR	30099	UnaryOperationExpression	! ret		30010	0					
ANR	30100	UnaryOperator	!		30010	0					
ANR	30101	Identifier	ret		30010	1					
ANR	30102	CompoundStatement		18:4:394:394	30010	1					
ANR	30103	ExpressionStatement	"invalidate_cached_dirfd ( olddirfd , oldpath )"	606:6:14472:14515	30010	0	True				
ANR	30104	CallExpression	"invalidate_cached_dirfd ( olddirfd , oldpath )"		30010	0					
ANR	30105	Callee	invalidate_cached_dirfd		30010	0					
ANR	30106	Identifier	invalidate_cached_dirfd		30010	0					
ANR	30107	ArgumentList	olddirfd		30010	1					
ANR	30108	Argument	olddirfd		30010	0					
ANR	30109	Identifier	olddirfd		30010	0					
ANR	30110	Argument	oldpath		30010	1					
ANR	30111	Identifier	oldpath		30010	0					
ANR	30112	ExpressionStatement	"invalidate_cached_dirfd ( newdirfd , newpath )"	607:6:14523:14566	30010	1	True				
ANR	30113	CallExpression	"invalidate_cached_dirfd ( newdirfd , newpath )"		30010	0					
ANR	30114	Callee	invalidate_cached_dirfd		30010	0					
ANR	30115	Identifier	invalidate_cached_dirfd		30010	0					
ANR	30116	ArgumentList	newdirfd		30010	1					
ANR	30117	Argument	newdirfd		30010	0					
ANR	30118	Identifier	newdirfd		30010	0					
ANR	30119	Argument	newpath		30010	1					
ANR	30120	Identifier	newpath		30010	0					
ANR	30121	ReturnStatement	return ret ;	609:2:14576:14586	30010	9	True				
ANR	30122	Identifier	ret		30010	0					
ANR	30123	ReturnType	int		30010	1					
ANR	30124	Identifier	safe_rename		30010	2					
ANR	30125	ParameterList	"const char * oldpath , const char * newpath"		30010	3					
ANR	30126	Parameter	const char * oldpath	587:17:14027:14045	30010	0	True				
ANR	30127	ParameterType	const char *		30010	0					
ANR	30128	Identifier	oldpath		30010	1					
ANR	30129	Parameter	const char * newpath	587:38:14048:14066	30010	1	True				
ANR	30130	ParameterType	const char *		30010	0					
ANR	30131	Identifier	newpath		30010	1					
ANR	30132	CFGEntryNode	ENTRY		30010		True				
ANR	30133	CFGExitNode	EXIT		30010		True				
ANR	30134	Symbol	ret		30010						
ANR	30135	Symbol	traverse_another_path		30010						
ANR	30136	Symbol	traverse_path		30010						
ANR	30137	Symbol	AT_FDCWD		30010						
ANR	30138	Symbol	renameat		30010						
ANR	30139	Symbol	unsafe		30010						
ANR	30140	Symbol	newpath		30010						
ANR	30141	Symbol	& oldpath		30010						
ANR	30142	Symbol	newdirfd		30010						
ANR	30143	Symbol	rename		30010						
ANR	30144	Symbol	oldpath		30010						
ANR	30145	Symbol	& newpath		30010						
ANR	30146	Symbol	olddirfd		30010						
ANR	30147	Function	safe_mkdir	613:0:14621:14873							
ANR	30148	FunctionDef	"safe_mkdir (const char * pathname , mode_t mode)"		30147	0					
ANR	30149	CompoundStatement		614:0:14672:14873	30147	0					
ANR	30150	IdentifierDeclStatement	int dirfd ;	615:2:14676:14685	30147	0	True				
ANR	30151	IdentifierDecl	dirfd		30147	0					
ANR	30152	IdentifierDeclType	int		30147	0					
ANR	30153	Identifier	dirfd		30147	1					
ANR	30154	IfStatement	if ( unsafe )		30147	1					
ANR	30155	Condition	unsafe	617:6:14694:14699	30147	0	True				
ANR	30156	Identifier	unsafe		30147	0					
ANR	30157	ReturnStatement	"return mkdir ( pathname , mode ) ;"	618:4:14706:14735	30147	1	True				
ANR	30158	CallExpression	"mkdir ( pathname , mode )"		30147	0					
ANR	30159	Callee	mkdir		30147	0					
ANR	30160	Identifier	mkdir		30147	0					
ANR	30161	ArgumentList	pathname		30147	1					
ANR	30162	Argument	pathname		30147	0					
ANR	30163	Identifier	pathname		30147	0					
ANR	30164	Argument	mode		30147	1					
ANR	30165	Identifier	mode		30147	0					
ANR	30166	ExpressionStatement	dirfd = traverse_path ( & pathname )	620:2:14740:14773	30147	2	True				
ANR	30167	AssignmentExpression	dirfd = traverse_path ( & pathname )		30147	0		=			
ANR	30168	Identifier	dirfd		30147	0					
ANR	30169	CallExpression	traverse_path ( & pathname )		30147	1					
ANR	30170	Callee	traverse_path		30147	0					
ANR	30171	Identifier	traverse_path		30147	0					
ANR	30172	ArgumentList	& pathname		30147	1					
ANR	30173	Argument	& pathname		30147	0					
ANR	30174	UnaryOperationExpression	& pathname		30147	0					
ANR	30175	UnaryOperator	&		30147	0					
ANR	30176	Identifier	pathname		30147	1					
ANR	30177	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30147	3					
ANR	30178	Condition	dirfd < 0 && dirfd != AT_FDCWD	621:6:14781:14810	30147	0	True				
ANR	30179	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30147	0		&&			
ANR	30180	RelationalExpression	dirfd < 0		30147	0		<			
ANR	30181	Identifier	dirfd		30147	0					
ANR	30182	PrimaryExpression	0		30147	1					
ANR	30183	EqualityExpression	dirfd != AT_FDCWD		30147	1		!=			
ANR	30184	Identifier	dirfd		30147	0					
ANR	30185	Identifier	AT_FDCWD		30147	1					
ANR	30186	ReturnStatement	return dirfd ;	622:4:14817:14829	30147	1	True				
ANR	30187	Identifier	dirfd		30147	0					
ANR	30188	ReturnStatement	"return mkdirat ( dirfd , pathname , mode ) ;"	623:2:14833:14871	30147	4	True				
ANR	30189	CallExpression	"mkdirat ( dirfd , pathname , mode )"		30147	0					
ANR	30190	Callee	mkdirat		30147	0					
ANR	30191	Identifier	mkdirat		30147	0					
ANR	30192	ArgumentList	dirfd		30147	1					
ANR	30193	Argument	dirfd		30147	0					
ANR	30194	Identifier	dirfd		30147	0					
ANR	30195	Argument	pathname		30147	1					
ANR	30196	Identifier	pathname		30147	0					
ANR	30197	Argument	mode		30147	2					
ANR	30198	Identifier	mode		30147	0					
ANR	30199	ReturnType	int		30147	1					
ANR	30200	Identifier	safe_mkdir		30147	2					
ANR	30201	ParameterList	"const char * pathname , mode_t mode"		30147	3					
ANR	30202	Parameter	const char * pathname	613:16:14637:14656	30147	0	True				
ANR	30203	ParameterType	const char *		30147	0					
ANR	30204	Identifier	pathname		30147	1					
ANR	30205	Parameter	mode_t mode	613:38:14659:14669	30147	1	True				
ANR	30206	ParameterType	mode_t		30147	0					
ANR	30207	Identifier	mode		30147	1					
ANR	30208	CFGEntryNode	ENTRY		30147		True				
ANR	30209	CFGExitNode	EXIT		30147		True				
ANR	30210	Symbol	mode		30147						
ANR	30211	Symbol	mkdirat		30147						
ANR	30212	Symbol	traverse_path		30147						
ANR	30213	Symbol	AT_FDCWD		30147						
ANR	30214	Symbol	dirfd		30147						
ANR	30215	Symbol	& pathname		30147						
ANR	30216	Symbol	unsafe		30147						
ANR	30217	Symbol	mkdir		30147						
ANR	30218	Symbol	pathname		30147						
ANR	30219	Function	safe_rmdir	627:0:14906:15233							
ANR	30220	FunctionDef	safe_rmdir (const char * pathname)		30219	0					
ANR	30221	CompoundStatement		628:0:14944:15233	30219	0					
ANR	30222	IdentifierDeclStatement	int dirfd ;	629:2:14948:14957	30219	0	True				
ANR	30223	IdentifierDecl	dirfd		30219	0					
ANR	30224	IdentifierDeclType	int		30219	0					
ANR	30225	Identifier	dirfd		30219	1					
ANR	30226	IdentifierDeclStatement	int ret ;	630:2:14961:14968	30219	1	True				
ANR	30227	IdentifierDecl	ret		30219	0					
ANR	30228	IdentifierDeclType	int		30219	0					
ANR	30229	Identifier	ret		30219	1					
ANR	30230	IfStatement	if ( unsafe )		30219	2					
ANR	30231	Condition	unsafe	632:6:14977:14982	30219	0	True				
ANR	30232	Identifier	unsafe		30219	0					
ANR	30233	ReturnStatement	return rmdir ( pathname ) ;	633:4:14989:15012	30219	1	True				
ANR	30234	CallExpression	rmdir ( pathname )		30219	0					
ANR	30235	Callee	rmdir		30219	0					
ANR	30236	Identifier	rmdir		30219	0					
ANR	30237	ArgumentList	pathname		30219	1					
ANR	30238	Argument	pathname		30219	0					
ANR	30239	Identifier	pathname		30219	0					
ANR	30240	ExpressionStatement	dirfd = traverse_path ( & pathname )	635:2:15017:15050	30219	3	True				
ANR	30241	AssignmentExpression	dirfd = traverse_path ( & pathname )		30219	0		=			
ANR	30242	Identifier	dirfd		30219	0					
ANR	30243	CallExpression	traverse_path ( & pathname )		30219	1					
ANR	30244	Callee	traverse_path		30219	0					
ANR	30245	Identifier	traverse_path		30219	0					
ANR	30246	ArgumentList	& pathname		30219	1					
ANR	30247	Argument	& pathname		30219	0					
ANR	30248	UnaryOperationExpression	& pathname		30219	0					
ANR	30249	UnaryOperator	&		30219	0					
ANR	30250	Identifier	pathname		30219	1					
ANR	30251	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30219	4					
ANR	30252	Condition	dirfd < 0 && dirfd != AT_FDCWD	636:6:15058:15087	30219	0	True				
ANR	30253	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30219	0		&&			
ANR	30254	RelationalExpression	dirfd < 0		30219	0		<			
ANR	30255	Identifier	dirfd		30219	0					
ANR	30256	PrimaryExpression	0		30219	1					
ANR	30257	EqualityExpression	dirfd != AT_FDCWD		30219	1		!=			
ANR	30258	Identifier	dirfd		30219	0					
ANR	30259	Identifier	AT_FDCWD		30219	1					
ANR	30260	ReturnStatement	return dirfd ;	637:4:15094:15106	30219	1	True				
ANR	30261	Identifier	dirfd		30219	0					
ANR	30262	ExpressionStatement	"ret = unlinkat ( dirfd , pathname , AT_REMOVEDIR )"	639:2:15111:15157	30219	5	True				
ANR	30263	AssignmentExpression	"ret = unlinkat ( dirfd , pathname , AT_REMOVEDIR )"		30219	0		=			
ANR	30264	Identifier	ret		30219	0					
ANR	30265	CallExpression	"unlinkat ( dirfd , pathname , AT_REMOVEDIR )"		30219	1					
ANR	30266	Callee	unlinkat		30219	0					
ANR	30267	Identifier	unlinkat		30219	0					
ANR	30268	ArgumentList	dirfd		30219	1					
ANR	30269	Argument	dirfd		30219	0					
ANR	30270	Identifier	dirfd		30219	0					
ANR	30271	Argument	pathname		30219	1					
ANR	30272	Identifier	pathname		30219	0					
ANR	30273	Argument	AT_REMOVEDIR		30219	2					
ANR	30274	Identifier	AT_REMOVEDIR		30219	0					
ANR	30275	IfStatement	if ( ! ret )		30219	6					
ANR	30276	Condition	! ret	640:6:15165:15169	30219	0	True				
ANR	30277	UnaryOperationExpression	! ret		30219	0					
ANR	30278	UnaryOperator	!		30219	0					
ANR	30279	Identifier	ret		30219	1					
ANR	30280	ExpressionStatement	"invalidate_cached_dirfd ( dirfd , pathname )"	641:4:15176:15217	30219	1	True				
ANR	30281	CallExpression	"invalidate_cached_dirfd ( dirfd , pathname )"		30219	0					
ANR	30282	Callee	invalidate_cached_dirfd		30219	0					
ANR	30283	Identifier	invalidate_cached_dirfd		30219	0					
ANR	30284	ArgumentList	dirfd		30219	1					
ANR	30285	Argument	dirfd		30219	0					
ANR	30286	Identifier	dirfd		30219	0					
ANR	30287	Argument	pathname		30219	1					
ANR	30288	Identifier	pathname		30219	0					
ANR	30289	ReturnStatement	return ret ;	642:2:15221:15231	30219	7	True				
ANR	30290	Identifier	ret		30219	0					
ANR	30291	ReturnType	int		30219	1					
ANR	30292	Identifier	safe_rmdir		30219	2					
ANR	30293	ParameterList	const char * pathname		30219	3					
ANR	30294	Parameter	const char * pathname	627:16:14922:14941	30219	0	True				
ANR	30295	ParameterType	const char *		30219	0					
ANR	30296	Identifier	pathname		30219	1					
ANR	30297	CFGEntryNode	ENTRY		30219		True				
ANR	30298	CFGExitNode	EXIT		30219		True				
ANR	30299	Symbol	ret		30219						
ANR	30300	Symbol	AT_REMOVEDIR		30219						
ANR	30301	Symbol	traverse_path		30219						
ANR	30302	Symbol	AT_FDCWD		30219						
ANR	30303	Symbol	dirfd		30219						
ANR	30304	Symbol	& pathname		30219						
ANR	30305	Symbol	rmdir		30219						
ANR	30306	Symbol	unlinkat		30219						
ANR	30307	Symbol	unsafe		30219						
ANR	30308	Symbol	pathname		30219						
ANR	30309	Function	safe_unlink	646:0:15267:15500							
ANR	30310	FunctionDef	safe_unlink (const char * pathname)		30309	0					
ANR	30311	CompoundStatement		647:0:15306:15500	30309	0					
ANR	30312	IdentifierDeclStatement	int dirfd ;	648:2:15310:15319	30309	0	True				
ANR	30313	IdentifierDecl	dirfd		30309	0					
ANR	30314	IdentifierDeclType	int		30309	0					
ANR	30315	Identifier	dirfd		30309	1					
ANR	30316	IfStatement	if ( unsafe )		30309	1					
ANR	30317	Condition	unsafe	650:6:15328:15333	30309	0	True				
ANR	30318	Identifier	unsafe		30309	0					
ANR	30319	ReturnStatement	return unlink ( pathname ) ;	651:4:15340:15364	30309	1	True				
ANR	30320	CallExpression	unlink ( pathname )		30309	0					
ANR	30321	Callee	unlink		30309	0					
ANR	30322	Identifier	unlink		30309	0					
ANR	30323	ArgumentList	pathname		30309	1					
ANR	30324	Argument	pathname		30309	0					
ANR	30325	Identifier	pathname		30309	0					
ANR	30326	ExpressionStatement	dirfd = traverse_path ( & pathname )	653:2:15369:15402	30309	2	True				
ANR	30327	AssignmentExpression	dirfd = traverse_path ( & pathname )		30309	0		=			
ANR	30328	Identifier	dirfd		30309	0					
ANR	30329	CallExpression	traverse_path ( & pathname )		30309	1					
ANR	30330	Callee	traverse_path		30309	0					
ANR	30331	Identifier	traverse_path		30309	0					
ANR	30332	ArgumentList	& pathname		30309	1					
ANR	30333	Argument	& pathname		30309	0					
ANR	30334	UnaryOperationExpression	& pathname		30309	0					
ANR	30335	UnaryOperator	&		30309	0					
ANR	30336	Identifier	pathname		30309	1					
ANR	30337	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30309	3					
ANR	30338	Condition	dirfd < 0 && dirfd != AT_FDCWD	654:6:15410:15439	30309	0	True				
ANR	30339	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30309	0		&&			
ANR	30340	RelationalExpression	dirfd < 0		30309	0		<			
ANR	30341	Identifier	dirfd		30309	0					
ANR	30342	PrimaryExpression	0		30309	1					
ANR	30343	EqualityExpression	dirfd != AT_FDCWD		30309	1		!=			
ANR	30344	Identifier	dirfd		30309	0					
ANR	30345	Identifier	AT_FDCWD		30309	1					
ANR	30346	ReturnStatement	return dirfd ;	655:4:15446:15458	30309	1	True				
ANR	30347	Identifier	dirfd		30309	0					
ANR	30348	ReturnStatement	"return unlinkat ( dirfd , pathname , 0 ) ;"	656:2:15462:15498	30309	4	True				
ANR	30349	CallExpression	"unlinkat ( dirfd , pathname , 0 )"		30309	0					
ANR	30350	Callee	unlinkat		30309	0					
ANR	30351	Identifier	unlinkat		30309	0					
ANR	30352	ArgumentList	dirfd		30309	1					
ANR	30353	Argument	dirfd		30309	0					
ANR	30354	Identifier	dirfd		30309	0					
ANR	30355	Argument	pathname		30309	1					
ANR	30356	Identifier	pathname		30309	0					
ANR	30357	Argument	0		30309	2					
ANR	30358	PrimaryExpression	0		30309	0					
ANR	30359	ReturnType	int		30309	1					
ANR	30360	Identifier	safe_unlink		30309	2					
ANR	30361	ParameterList	const char * pathname		30309	3					
ANR	30362	Parameter	const char * pathname	646:17:15284:15303	30309	0	True				
ANR	30363	ParameterType	const char *		30309	0					
ANR	30364	Identifier	pathname		30309	1					
ANR	30365	CFGEntryNode	ENTRY		30309		True				
ANR	30366	CFGExitNode	EXIT		30309		True				
ANR	30367	Symbol	unlink		30309						
ANR	30368	Symbol	traverse_path		30309						
ANR	30369	Symbol	AT_FDCWD		30309						
ANR	30370	Symbol	dirfd		30309						
ANR	30371	Symbol	& pathname		30309						
ANR	30372	Symbol	unlinkat		30309						
ANR	30373	Symbol	unsafe		30309						
ANR	30374	Symbol	pathname		30309						
ANR	30375	Function	safe_symlink	660:0:15535:15804							
ANR	30376	FunctionDef	"safe_symlink (const char * target , const char * linkpath)"		30375	0					
ANR	30377	CompoundStatement		661:0:15595:15804	30375	0					
ANR	30378	IdentifierDeclStatement	int dirfd ;	662:2:15599:15608	30375	0	True				
ANR	30379	IdentifierDecl	dirfd		30375	0					
ANR	30380	IdentifierDeclType	int		30375	0					
ANR	30381	Identifier	dirfd		30375	1					
ANR	30382	IfStatement	if ( unsafe )		30375	1					
ANR	30383	Condition	unsafe	664:6:15617:15622	30375	0	True				
ANR	30384	Identifier	unsafe		30375	0					
ANR	30385	ReturnStatement	"return symlink ( target , linkpath ) ;"	665:4:15629:15662	30375	1	True				
ANR	30386	CallExpression	"symlink ( target , linkpath )"		30375	0					
ANR	30387	Callee	symlink		30375	0					
ANR	30388	Identifier	symlink		30375	0					
ANR	30389	ArgumentList	target		30375	1					
ANR	30390	Argument	target		30375	0					
ANR	30391	Identifier	target		30375	0					
ANR	30392	Argument	linkpath		30375	1					
ANR	30393	Identifier	linkpath		30375	0					
ANR	30394	ExpressionStatement	dirfd = traverse_path ( & linkpath )	667:2:15667:15700	30375	2	True				
ANR	30395	AssignmentExpression	dirfd = traverse_path ( & linkpath )		30375	0		=			
ANR	30396	Identifier	dirfd		30375	0					
ANR	30397	CallExpression	traverse_path ( & linkpath )		30375	1					
ANR	30398	Callee	traverse_path		30375	0					
ANR	30399	Identifier	traverse_path		30375	0					
ANR	30400	ArgumentList	& linkpath		30375	1					
ANR	30401	Argument	& linkpath		30375	0					
ANR	30402	UnaryOperationExpression	& linkpath		30375	0					
ANR	30403	UnaryOperator	&		30375	0					
ANR	30404	Identifier	linkpath		30375	1					
ANR	30405	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30375	3					
ANR	30406	Condition	dirfd < 0 && dirfd != AT_FDCWD	668:6:15708:15737	30375	0	True				
ANR	30407	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30375	0		&&			
ANR	30408	RelationalExpression	dirfd < 0		30375	0		<			
ANR	30409	Identifier	dirfd		30375	0					
ANR	30410	PrimaryExpression	0		30375	1					
ANR	30411	EqualityExpression	dirfd != AT_FDCWD		30375	1		!=			
ANR	30412	Identifier	dirfd		30375	0					
ANR	30413	Identifier	AT_FDCWD		30375	1					
ANR	30414	ReturnStatement	return dirfd ;	669:4:15744:15756	30375	1	True				
ANR	30415	Identifier	dirfd		30375	0					
ANR	30416	ReturnStatement	"return symlinkat ( target , dirfd , linkpath ) ;"	670:2:15760:15802	30375	4	True				
ANR	30417	CallExpression	"symlinkat ( target , dirfd , linkpath )"		30375	0					
ANR	30418	Callee	symlinkat		30375	0					
ANR	30419	Identifier	symlinkat		30375	0					
ANR	30420	ArgumentList	target		30375	1					
ANR	30421	Argument	target		30375	0					
ANR	30422	Identifier	target		30375	0					
ANR	30423	Argument	dirfd		30375	1					
ANR	30424	Identifier	dirfd		30375	0					
ANR	30425	Argument	linkpath		30375	2					
ANR	30426	Identifier	linkpath		30375	0					
ANR	30427	ReturnType	int		30375	1					
ANR	30428	Identifier	safe_symlink		30375	2					
ANR	30429	ParameterList	"const char * target , const char * linkpath"		30375	3					
ANR	30430	Parameter	const char * target	660:18:15553:15570	30375	0	True				
ANR	30431	ParameterType	const char *		30375	0					
ANR	30432	Identifier	target		30375	1					
ANR	30433	Parameter	const char * linkpath	660:38:15573:15592	30375	1	True				
ANR	30434	ParameterType	const char *		30375	0					
ANR	30435	Identifier	linkpath		30375	1					
ANR	30436	CFGEntryNode	ENTRY		30375		True				
ANR	30437	CFGExitNode	EXIT		30375		True				
ANR	30438	Symbol	linkpath		30375						
ANR	30439	Symbol	traverse_path		30375						
ANR	30440	Symbol	& linkpath		30375						
ANR	30441	Symbol	symlink		30375						
ANR	30442	Symbol	AT_FDCWD		30375						
ANR	30443	Symbol	dirfd		30375						
ANR	30444	Symbol	unsafe		30375						
ANR	30445	Symbol	symlinkat		30375						
ANR	30446	Symbol	target		30375						
ANR	30447	Function	safe_chmod	674:0:15837:16093							
ANR	30448	FunctionDef	"safe_chmod (const char * pathname , mode_t mode)"		30447	0					
ANR	30449	CompoundStatement		675:0:15888:16093	30447	0					
ANR	30450	IdentifierDeclStatement	int dirfd ;	676:2:15892:15901	30447	0	True				
ANR	30451	IdentifierDecl	dirfd		30447	0					
ANR	30452	IdentifierDeclType	int		30447	0					
ANR	30453	Identifier	dirfd		30447	1					
ANR	30454	IfStatement	if ( unsafe )		30447	1					
ANR	30455	Condition	unsafe	678:6:15910:15915	30447	0	True				
ANR	30456	Identifier	unsafe		30447	0					
ANR	30457	ReturnStatement	"return chmod ( pathname , mode ) ;"	679:4:15922:15951	30447	1	True				
ANR	30458	CallExpression	"chmod ( pathname , mode )"		30447	0					
ANR	30459	Callee	chmod		30447	0					
ANR	30460	Identifier	chmod		30447	0					
ANR	30461	ArgumentList	pathname		30447	1					
ANR	30462	Argument	pathname		30447	0					
ANR	30463	Identifier	pathname		30447	0					
ANR	30464	Argument	mode		30447	1					
ANR	30465	Identifier	mode		30447	0					
ANR	30466	ExpressionStatement	dirfd = traverse_path ( & pathname )	681:2:15956:15989	30447	2	True				
ANR	30467	AssignmentExpression	dirfd = traverse_path ( & pathname )		30447	0		=			
ANR	30468	Identifier	dirfd		30447	0					
ANR	30469	CallExpression	traverse_path ( & pathname )		30447	1					
ANR	30470	Callee	traverse_path		30447	0					
ANR	30471	Identifier	traverse_path		30447	0					
ANR	30472	ArgumentList	& pathname		30447	1					
ANR	30473	Argument	& pathname		30447	0					
ANR	30474	UnaryOperationExpression	& pathname		30447	0					
ANR	30475	UnaryOperator	&		30447	0					
ANR	30476	Identifier	pathname		30447	1					
ANR	30477	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30447	3					
ANR	30478	Condition	dirfd < 0 && dirfd != AT_FDCWD	682:6:15997:16026	30447	0	True				
ANR	30479	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30447	0		&&			
ANR	30480	RelationalExpression	dirfd < 0		30447	0		<			
ANR	30481	Identifier	dirfd		30447	0					
ANR	30482	PrimaryExpression	0		30447	1					
ANR	30483	EqualityExpression	dirfd != AT_FDCWD		30447	1		!=			
ANR	30484	Identifier	dirfd		30447	0					
ANR	30485	Identifier	AT_FDCWD		30447	1					
ANR	30486	ReturnStatement	return dirfd ;	683:4:16033:16045	30447	1	True				
ANR	30487	Identifier	dirfd		30447	0					
ANR	30488	ReturnStatement	"return fchmodat ( dirfd , pathname , mode , 0 ) ;"	684:2:16049:16091	30447	4	True				
ANR	30489	CallExpression	"fchmodat ( dirfd , pathname , mode , 0 )"		30447	0					
ANR	30490	Callee	fchmodat		30447	0					
ANR	30491	Identifier	fchmodat		30447	0					
ANR	30492	ArgumentList	dirfd		30447	1					
ANR	30493	Argument	dirfd		30447	0					
ANR	30494	Identifier	dirfd		30447	0					
ANR	30495	Argument	pathname		30447	1					
ANR	30496	Identifier	pathname		30447	0					
ANR	30497	Argument	mode		30447	2					
ANR	30498	Identifier	mode		30447	0					
ANR	30499	Argument	0		30447	3					
ANR	30500	PrimaryExpression	0		30447	0					
ANR	30501	ReturnType	int		30447	1					
ANR	30502	Identifier	safe_chmod		30447	2					
ANR	30503	ParameterList	"const char * pathname , mode_t mode"		30447	3					
ANR	30504	Parameter	const char * pathname	674:16:15853:15872	30447	0	True				
ANR	30505	ParameterType	const char *		30447	0					
ANR	30506	Identifier	pathname		30447	1					
ANR	30507	Parameter	mode_t mode	674:38:15875:15885	30447	1	True				
ANR	30508	ParameterType	mode_t		30447	0					
ANR	30509	Identifier	mode		30447	1					
ANR	30510	CFGEntryNode	ENTRY		30447		True				
ANR	30511	CFGExitNode	EXIT		30447		True				
ANR	30512	Symbol	mode		30447						
ANR	30513	Symbol	traverse_path		30447						
ANR	30514	Symbol	fchmodat		30447						
ANR	30515	Symbol	AT_FDCWD		30447						
ANR	30516	Symbol	dirfd		30447						
ANR	30517	Symbol	chmod		30447						
ANR	30518	Symbol	& pathname		30447						
ANR	30519	Symbol	unsafe		30447						
ANR	30520	Symbol	pathname		30447						
ANR	30521	Function	safe_lchown	688:0:16127:16432							
ANR	30522	FunctionDef	"safe_lchown (const char * pathname , uid_t owner , gid_t group)"		30521	0					
ANR	30523	CompoundStatement		689:0:16192:16432	30521	0					
ANR	30524	IdentifierDeclStatement	int dirfd ;	690:2:16196:16205	30521	0	True				
ANR	30525	IdentifierDecl	dirfd		30521	0					
ANR	30526	IdentifierDeclType	int		30521	0					
ANR	30527	Identifier	dirfd		30521	1					
ANR	30528	IfStatement	if ( unsafe )		30521	1					
ANR	30529	Condition	unsafe	692:6:16214:16219	30521	0	True				
ANR	30530	Identifier	unsafe		30521	0					
ANR	30531	ReturnStatement	"return lchown ( pathname , owner , group ) ;"	693:4:16226:16264	30521	1	True				
ANR	30532	CallExpression	"lchown ( pathname , owner , group )"		30521	0					
ANR	30533	Callee	lchown		30521	0					
ANR	30534	Identifier	lchown		30521	0					
ANR	30535	ArgumentList	pathname		30521	1					
ANR	30536	Argument	pathname		30521	0					
ANR	30537	Identifier	pathname		30521	0					
ANR	30538	Argument	owner		30521	1					
ANR	30539	Identifier	owner		30521	0					
ANR	30540	Argument	group		30521	2					
ANR	30541	Identifier	group		30521	0					
ANR	30542	ExpressionStatement	dirfd = traverse_path ( & pathname )	695:2:16269:16302	30521	2	True				
ANR	30543	AssignmentExpression	dirfd = traverse_path ( & pathname )		30521	0		=			
ANR	30544	Identifier	dirfd		30521	0					
ANR	30545	CallExpression	traverse_path ( & pathname )		30521	1					
ANR	30546	Callee	traverse_path		30521	0					
ANR	30547	Identifier	traverse_path		30521	0					
ANR	30548	ArgumentList	& pathname		30521	1					
ANR	30549	Argument	& pathname		30521	0					
ANR	30550	UnaryOperationExpression	& pathname		30521	0					
ANR	30551	UnaryOperator	&		30521	0					
ANR	30552	Identifier	pathname		30521	1					
ANR	30553	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30521	3					
ANR	30554	Condition	dirfd < 0 && dirfd != AT_FDCWD	696:6:16310:16339	30521	0	True				
ANR	30555	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30521	0		&&			
ANR	30556	RelationalExpression	dirfd < 0		30521	0		<			
ANR	30557	Identifier	dirfd		30521	0					
ANR	30558	PrimaryExpression	0		30521	1					
ANR	30559	EqualityExpression	dirfd != AT_FDCWD		30521	1		!=			
ANR	30560	Identifier	dirfd		30521	0					
ANR	30561	Identifier	AT_FDCWD		30521	1					
ANR	30562	ReturnStatement	return dirfd ;	697:4:16346:16358	30521	1	True				
ANR	30563	Identifier	dirfd		30521	0					
ANR	30564	ReturnStatement	"return fchownat ( dirfd , pathname , owner , group , AT_SYMLINK_NOFOLLOW ) ;"	698:2:16362:16430	30521	4	True				
ANR	30565	CallExpression	"fchownat ( dirfd , pathname , owner , group , AT_SYMLINK_NOFOLLOW )"		30521	0					
ANR	30566	Callee	fchownat		30521	0					
ANR	30567	Identifier	fchownat		30521	0					
ANR	30568	ArgumentList	dirfd		30521	1					
ANR	30569	Argument	dirfd		30521	0					
ANR	30570	Identifier	dirfd		30521	0					
ANR	30571	Argument	pathname		30521	1					
ANR	30572	Identifier	pathname		30521	0					
ANR	30573	Argument	owner		30521	2					
ANR	30574	Identifier	owner		30521	0					
ANR	30575	Argument	group		30521	3					
ANR	30576	Identifier	group		30521	0					
ANR	30577	Argument	AT_SYMLINK_NOFOLLOW		30521	4					
ANR	30578	Identifier	AT_SYMLINK_NOFOLLOW		30521	0					
ANR	30579	ReturnType	int		30521	1					
ANR	30580	Identifier	safe_lchown		30521	2					
ANR	30581	ParameterList	"const char * pathname , uid_t owner , gid_t group"		30521	3					
ANR	30582	Parameter	const char * pathname	688:17:16144:16163	30521	0	True				
ANR	30583	ParameterType	const char *		30521	0					
ANR	30584	Identifier	pathname		30521	1					
ANR	30585	Parameter	uid_t owner	688:39:16166:16176	30521	1	True				
ANR	30586	ParameterType	uid_t		30521	0					
ANR	30587	Identifier	owner		30521	1					
ANR	30588	Parameter	gid_t group	688:52:16179:16189	30521	2	True				
ANR	30589	ParameterType	gid_t		30521	0					
ANR	30590	Identifier	group		30521	1					
ANR	30591	CFGEntryNode	ENTRY		30521		True				
ANR	30592	CFGExitNode	EXIT		30521		True				
ANR	30593	Symbol	owner		30521						
ANR	30594	Symbol	fchownat		30521						
ANR	30595	Symbol	traverse_path		30521						
ANR	30596	Symbol	AT_FDCWD		30521						
ANR	30597	Symbol	dirfd		30521						
ANR	30598	Symbol	& pathname		30521						
ANR	30599	Symbol	lchown		30521						
ANR	30600	Symbol	unsafe		30521						
ANR	30601	Symbol	AT_SYMLINK_NOFOLLOW		30521						
ANR	30602	Symbol	pathname		30521						
ANR	30603	Symbol	group		30521						
ANR	30604	Function	safe_lutimens	702:0:16468:16802							
ANR	30605	FunctionDef	"safe_lutimens (const char * pathname , struct timespec const times [ 2 ])"		30604	0					
ANR	30606	CompoundStatement		703:0:16541:16802	30604	0					
ANR	30607	IdentifierDeclStatement	int dirfd ;	704:2:16545:16554	30604	0	True				
ANR	30608	IdentifierDecl	dirfd		30604	0					
ANR	30609	IdentifierDeclType	int		30604	0					
ANR	30610	Identifier	dirfd		30604	1					
ANR	30611	IfStatement	if ( unsafe )		30604	1					
ANR	30612	Condition	unsafe	706:6:16563:16568	30604	0	True				
ANR	30613	Identifier	unsafe		30604	0					
ANR	30614	ReturnStatement	"return utimensat ( AT_FDCWD , pathname , times , AT_SYMLINK_NOFOLLOW ) ;"	707:4:16575:16640	30604	1	True				
ANR	30615	CallExpression	"utimensat ( AT_FDCWD , pathname , times , AT_SYMLINK_NOFOLLOW )"		30604	0					
ANR	30616	Callee	utimensat		30604	0					
ANR	30617	Identifier	utimensat		30604	0					
ANR	30618	ArgumentList	AT_FDCWD		30604	1					
ANR	30619	Argument	AT_FDCWD		30604	0					
ANR	30620	Identifier	AT_FDCWD		30604	0					
ANR	30621	Argument	pathname		30604	1					
ANR	30622	Identifier	pathname		30604	0					
ANR	30623	Argument	times		30604	2					
ANR	30624	Identifier	times		30604	0					
ANR	30625	Argument	AT_SYMLINK_NOFOLLOW		30604	3					
ANR	30626	Identifier	AT_SYMLINK_NOFOLLOW		30604	0					
ANR	30627	ExpressionStatement	dirfd = traverse_path ( & pathname )	709:2:16645:16678	30604	2	True				
ANR	30628	AssignmentExpression	dirfd = traverse_path ( & pathname )		30604	0		=			
ANR	30629	Identifier	dirfd		30604	0					
ANR	30630	CallExpression	traverse_path ( & pathname )		30604	1					
ANR	30631	Callee	traverse_path		30604	0					
ANR	30632	Identifier	traverse_path		30604	0					
ANR	30633	ArgumentList	& pathname		30604	1					
ANR	30634	Argument	& pathname		30604	0					
ANR	30635	UnaryOperationExpression	& pathname		30604	0					
ANR	30636	UnaryOperator	&		30604	0					
ANR	30637	Identifier	pathname		30604	1					
ANR	30638	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30604	3					
ANR	30639	Condition	dirfd < 0 && dirfd != AT_FDCWD	710:6:16686:16715	30604	0	True				
ANR	30640	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30604	0		&&			
ANR	30641	RelationalExpression	dirfd < 0		30604	0		<			
ANR	30642	Identifier	dirfd		30604	0					
ANR	30643	PrimaryExpression	0		30604	1					
ANR	30644	EqualityExpression	dirfd != AT_FDCWD		30604	1		!=			
ANR	30645	Identifier	dirfd		30604	0					
ANR	30646	Identifier	AT_FDCWD		30604	1					
ANR	30647	ReturnStatement	return dirfd ;	711:4:16722:16734	30604	1	True				
ANR	30648	Identifier	dirfd		30604	0					
ANR	30649	ReturnStatement	"return utimensat ( dirfd , pathname , times , AT_SYMLINK_NOFOLLOW ) ;"	712:2:16738:16800	30604	4	True				
ANR	30650	CallExpression	"utimensat ( dirfd , pathname , times , AT_SYMLINK_NOFOLLOW )"		30604	0					
ANR	30651	Callee	utimensat		30604	0					
ANR	30652	Identifier	utimensat		30604	0					
ANR	30653	ArgumentList	dirfd		30604	1					
ANR	30654	Argument	dirfd		30604	0					
ANR	30655	Identifier	dirfd		30604	0					
ANR	30656	Argument	pathname		30604	1					
ANR	30657	Identifier	pathname		30604	0					
ANR	30658	Argument	times		30604	2					
ANR	30659	Identifier	times		30604	0					
ANR	30660	Argument	AT_SYMLINK_NOFOLLOW		30604	3					
ANR	30661	Identifier	AT_SYMLINK_NOFOLLOW		30604	0					
ANR	30662	ReturnType	int		30604	1					
ANR	30663	Identifier	safe_lutimens		30604	2					
ANR	30664	ParameterList	"const char * pathname , struct timespec const times [ 2 ]"		30604	3					
ANR	30665	Parameter	const char * pathname	702:19:16487:16506	30604	0	True				
ANR	30666	ParameterType	const char *		30604	0					
ANR	30667	Identifier	pathname		30604	1					
ANR	30668	Parameter	struct timespec const times [ 2 ]	702:41:16509:16538	30604	1	True				
ANR	30669	ParameterType	struct timespec const [ 2 ]		30604	0					
ANR	30670	Identifier	times		30604	1					
ANR	30671	CFGEntryNode	ENTRY		30604		True				
ANR	30672	CFGExitNode	EXIT		30604		True				
ANR	30673	Symbol	times		30604						
ANR	30674	Symbol	traverse_path		30604						
ANR	30675	Symbol	AT_FDCWD		30604						
ANR	30676	Symbol	dirfd		30604						
ANR	30677	Symbol	& pathname		30604						
ANR	30678	Symbol	utimensat		30604						
ANR	30679	Symbol	unsafe		30604						
ANR	30680	Symbol	AT_SYMLINK_NOFOLLOW		30604						
ANR	30681	Symbol	pathname		30604						
ANR	30682	Function	safe_readlink	716:0:16838:17130							
ANR	30683	FunctionDef	"safe_readlink (const char * pathname , char * buf , size_t bufsiz)"		30682	0					
ANR	30684	CompoundStatement		717:0:16909:17130	30682	0					
ANR	30685	IdentifierDeclStatement	int dirfd ;	718:2:16913:16922	30682	0	True				
ANR	30686	IdentifierDecl	dirfd		30682	0					
ANR	30687	IdentifierDeclType	int		30682	0					
ANR	30688	Identifier	dirfd		30682	1					
ANR	30689	IfStatement	if ( unsafe )		30682	1					
ANR	30690	Condition	unsafe	720:6:16931:16936	30682	0	True				
ANR	30691	Identifier	unsafe		30682	0					
ANR	30692	ReturnStatement	"return readlink ( pathname , buf , bufsiz ) ;"	721:4:16943:16982	30682	1	True				
ANR	30693	CallExpression	"readlink ( pathname , buf , bufsiz )"		30682	0					
ANR	30694	Callee	readlink		30682	0					
ANR	30695	Identifier	readlink		30682	0					
ANR	30696	ArgumentList	pathname		30682	1					
ANR	30697	Argument	pathname		30682	0					
ANR	30698	Identifier	pathname		30682	0					
ANR	30699	Argument	buf		30682	1					
ANR	30700	Identifier	buf		30682	0					
ANR	30701	Argument	bufsiz		30682	2					
ANR	30702	Identifier	bufsiz		30682	0					
ANR	30703	ExpressionStatement	dirfd = traverse_path ( & pathname )	723:2:16987:17020	30682	2	True				
ANR	30704	AssignmentExpression	dirfd = traverse_path ( & pathname )		30682	0		=			
ANR	30705	Identifier	dirfd		30682	0					
ANR	30706	CallExpression	traverse_path ( & pathname )		30682	1					
ANR	30707	Callee	traverse_path		30682	0					
ANR	30708	Identifier	traverse_path		30682	0					
ANR	30709	ArgumentList	& pathname		30682	1					
ANR	30710	Argument	& pathname		30682	0					
ANR	30711	UnaryOperationExpression	& pathname		30682	0					
ANR	30712	UnaryOperator	&		30682	0					
ANR	30713	Identifier	pathname		30682	1					
ANR	30714	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30682	3					
ANR	30715	Condition	dirfd < 0 && dirfd != AT_FDCWD	724:6:17028:17057	30682	0	True				
ANR	30716	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30682	0		&&			
ANR	30717	RelationalExpression	dirfd < 0		30682	0		<			
ANR	30718	Identifier	dirfd		30682	0					
ANR	30719	PrimaryExpression	0		30682	1					
ANR	30720	EqualityExpression	dirfd != AT_FDCWD		30682	1		!=			
ANR	30721	Identifier	dirfd		30682	0					
ANR	30722	Identifier	AT_FDCWD		30682	1					
ANR	30723	ReturnStatement	return dirfd ;	725:4:17064:17076	30682	1	True				
ANR	30724	Identifier	dirfd		30682	0					
ANR	30725	ReturnStatement	"return readlinkat ( dirfd , pathname , buf , bufsiz ) ;"	726:2:17080:17128	30682	4	True				
ANR	30726	CallExpression	"readlinkat ( dirfd , pathname , buf , bufsiz )"		30682	0					
ANR	30727	Callee	readlinkat		30682	0					
ANR	30728	Identifier	readlinkat		30682	0					
ANR	30729	ArgumentList	dirfd		30682	1					
ANR	30730	Argument	dirfd		30682	0					
ANR	30731	Identifier	dirfd		30682	0					
ANR	30732	Argument	pathname		30682	1					
ANR	30733	Identifier	pathname		30682	0					
ANR	30734	Argument	buf		30682	2					
ANR	30735	Identifier	buf		30682	0					
ANR	30736	Argument	bufsiz		30682	3					
ANR	30737	Identifier	bufsiz		30682	0					
ANR	30738	ReturnType	ssize_t		30682	1					
ANR	30739	Identifier	safe_readlink		30682	2					
ANR	30740	ParameterList	"const char * pathname , char * buf , size_t bufsiz"		30682	3					
ANR	30741	Parameter	const char * pathname	716:23:16861:16880	30682	0	True				
ANR	30742	ParameterType	const char *		30682	0					
ANR	30743	Identifier	pathname		30682	1					
ANR	30744	Parameter	char * buf	716:45:16883:16891	30682	1	True				
ANR	30745	ParameterType	char *		30682	0					
ANR	30746	Identifier	buf		30682	1					
ANR	30747	Parameter	size_t bufsiz	716:56:16894:16906	30682	2	True				
ANR	30748	ParameterType	size_t		30682	0					
ANR	30749	Identifier	bufsiz		30682	1					
ANR	30750	CFGEntryNode	ENTRY		30682		True				
ANR	30751	CFGExitNode	EXIT		30682		True				
ANR	30752	Symbol	buf		30682						
ANR	30753	Symbol	readlink		30682						
ANR	30754	Symbol	traverse_path		30682						
ANR	30755	Symbol	AT_FDCWD		30682						
ANR	30756	Symbol	readlinkat		30682						
ANR	30757	Symbol	dirfd		30682						
ANR	30758	Symbol	& pathname		30682						
ANR	30759	Symbol	bufsiz		30682						
ANR	30760	Symbol	unsafe		30682						
ANR	30761	Symbol	pathname		30682						
ANR	30762	Function	safe_access	730:0:17164:17420							
ANR	30763	FunctionDef	"safe_access (const char * pathname , int mode)"		30762	0					
ANR	30764	CompoundStatement		731:0:17213:17420	30762	0					
ANR	30765	IdentifierDeclStatement	int dirfd ;	732:2:17217:17226	30762	0	True				
ANR	30766	IdentifierDecl	dirfd		30762	0					
ANR	30767	IdentifierDeclType	int		30762	0					
ANR	30768	Identifier	dirfd		30762	1					
ANR	30769	IfStatement	if ( unsafe )		30762	1					
ANR	30770	Condition	unsafe	734:6:17235:17240	30762	0	True				
ANR	30771	Identifier	unsafe		30762	0					
ANR	30772	ReturnStatement	"return access ( pathname , mode ) ;"	735:4:17247:17277	30762	1	True				
ANR	30773	CallExpression	"access ( pathname , mode )"		30762	0					
ANR	30774	Callee	access		30762	0					
ANR	30775	Identifier	access		30762	0					
ANR	30776	ArgumentList	pathname		30762	1					
ANR	30777	Argument	pathname		30762	0					
ANR	30778	Identifier	pathname		30762	0					
ANR	30779	Argument	mode		30762	1					
ANR	30780	Identifier	mode		30762	0					
ANR	30781	ExpressionStatement	dirfd = traverse_path ( & pathname )	737:2:17282:17315	30762	2	True				
ANR	30782	AssignmentExpression	dirfd = traverse_path ( & pathname )		30762	0		=			
ANR	30783	Identifier	dirfd		30762	0					
ANR	30784	CallExpression	traverse_path ( & pathname )		30762	1					
ANR	30785	Callee	traverse_path		30762	0					
ANR	30786	Identifier	traverse_path		30762	0					
ANR	30787	ArgumentList	& pathname		30762	1					
ANR	30788	Argument	& pathname		30762	0					
ANR	30789	UnaryOperationExpression	& pathname		30762	0					
ANR	30790	UnaryOperator	&		30762	0					
ANR	30791	Identifier	pathname		30762	1					
ANR	30792	IfStatement	if ( dirfd < 0 && dirfd != AT_FDCWD )		30762	3					
ANR	30793	Condition	dirfd < 0 && dirfd != AT_FDCWD	738:6:17323:17352	30762	0	True				
ANR	30794	AndExpression	dirfd < 0 && dirfd != AT_FDCWD		30762	0		&&			
ANR	30795	RelationalExpression	dirfd < 0		30762	0		<			
ANR	30796	Identifier	dirfd		30762	0					
ANR	30797	PrimaryExpression	0		30762	1					
ANR	30798	EqualityExpression	dirfd != AT_FDCWD		30762	1		!=			
ANR	30799	Identifier	dirfd		30762	0					
ANR	30800	Identifier	AT_FDCWD		30762	1					
ANR	30801	ReturnStatement	return dirfd ;	739:4:17359:17371	30762	1	True				
ANR	30802	Identifier	dirfd		30762	0					
ANR	30803	ReturnStatement	"return faccessat ( dirfd , pathname , mode , 0 ) ;"	740:2:17375:17418	30762	4	True				
ANR	30804	CallExpression	"faccessat ( dirfd , pathname , mode , 0 )"		30762	0					
ANR	30805	Callee	faccessat		30762	0					
ANR	30806	Identifier	faccessat		30762	0					
ANR	30807	ArgumentList	dirfd		30762	1					
ANR	30808	Argument	dirfd		30762	0					
ANR	30809	Identifier	dirfd		30762	0					
ANR	30810	Argument	pathname		30762	1					
ANR	30811	Identifier	pathname		30762	0					
ANR	30812	Argument	mode		30762	2					
ANR	30813	Identifier	mode		30762	0					
ANR	30814	Argument	0		30762	3					
ANR	30815	PrimaryExpression	0		30762	0					
ANR	30816	ReturnType	int		30762	1					
ANR	30817	Identifier	safe_access		30762	2					
ANR	30818	ParameterList	"const char * pathname , int mode"		30762	3					
ANR	30819	Parameter	const char * pathname	730:17:17181:17200	30762	0	True				
ANR	30820	ParameterType	const char *		30762	0					
ANR	30821	Identifier	pathname		30762	1					
ANR	30822	Parameter	int mode	730:39:17203:17210	30762	1	True				
ANR	30823	ParameterType	int		30762	0					
ANR	30824	Identifier	mode		30762	1					
ANR	30825	CFGEntryNode	ENTRY		30762		True				
ANR	30826	CFGExitNode	EXIT		30762		True				
ANR	30827	Symbol	mode		30762						
ANR	30828	Symbol	access		30762						
ANR	30829	Symbol	traverse_path		30762						
ANR	30830	Symbol	AT_FDCWD		30762						
ANR	30831	Symbol	dirfd		30762						
ANR	30832	Symbol	& pathname		30762						
ANR	30833	Symbol	faccessat		30762						
ANR	30834	Symbol	unsafe		30762						
ANR	30835	Symbol	pathname		30762						
