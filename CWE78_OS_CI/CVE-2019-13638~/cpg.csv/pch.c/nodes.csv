command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	14700	File	data/converged/CVE-2019-13638~_patch/pch.c								
ANR	14701	DeclStmt									
ANR	14702	Decl							FILE	FILE *	pfp
ANR	14703	DeclStmt									
ANR	14704	Decl							int	int [ 2 ]	p_says_nonexistent
ANR	14705	DeclStmt									
ANR	14706	Decl							int	int	p_rfc934_nesting
ANR	14707	DeclStmt									
ANR	14708	Decl							char	char * [ 3 ]	p_name
ANR	14709	DeclStmt									
ANR	14710	Decl							char const	char const * [ 2 ]	invalid_names
ANR	14711	DeclStmt									
ANR	14712	Decl							bool	bool [ 2 ]	p_copy
ANR	14713	DeclStmt									
ANR	14714	Decl							bool	bool [ 2 ]	p_rename
ANR	14715	DeclStmt									
ANR	14716	Decl							char	char * [ 2 ]	p_timestr
ANR	14717	DeclStmt									
ANR	14718	Decl							char	char * [ 2 ]	p_sha1
ANR	14719	DeclStmt									
ANR	14720	Decl							mode_t	mode_t [ 2 ]	p_mode
ANR	14721	DeclStmt									
ANR	14722	Decl							off_t	off_t	p_filesize
ANR	14723	DeclStmt									
ANR	14724	Decl							lin	lin	p_first
ANR	14725	DeclStmt									
ANR	14726	Decl							lin	lin	p_newfirst
ANR	14727	DeclStmt									
ANR	14728	Decl							lin	lin	p_ptrn_lines
ANR	14729	DeclStmt									
ANR	14730	Decl							lin	lin	p_repl_lines
ANR	14731	DeclStmt									
ANR	14732	Decl							lin	lin	p_end
ANR	14733	DeclStmt									
ANR	14734	Decl							lin	lin	p_max
ANR	14735	DeclStmt									
ANR	14736	Decl							lin	lin	p_prefix_context
ANR	14737	DeclStmt									
ANR	14738	Decl							lin	lin	p_suffix_context
ANR	14739	DeclStmt									
ANR	14740	Decl							lin	lin	p_input_line
ANR	14741	DeclStmt									
ANR	14742	Decl							char	char * *	p_line
ANR	14743	DeclStmt									
ANR	14744	Decl							size_t	size_t *	p_len
ANR	14745	DeclStmt									
ANR	14746	Decl							char	char *	p_Char
ANR	14747	DeclStmt									
ANR	14748	Decl							lin	lin	hunkmax
ANR	14749	DeclStmt									
ANR	14750	Decl							size_t	size_t	p_indent
ANR	14751	DeclStmt									
ANR	14752	Decl							bool	bool	p_strip_trailing_cr
ANR	14753	DeclStmt									
ANR	14754	Decl							bool	bool	p_pass_comments_through
ANR	14755	DeclStmt									
ANR	14756	Decl							file_offset	file_offset	p_base
ANR	14757	DeclStmt									
ANR	14758	Decl							lin	lin	p_bline
ANR	14759	DeclStmt									
ANR	14760	Decl							file_offset	file_offset	p_start
ANR	14761	DeclStmt									
ANR	14762	Decl							lin	lin	p_sline
ANR	14763	DeclStmt									
ANR	14764	Decl							lin	lin	p_hunk_beg
ANR	14765	DeclStmt									
ANR	14766	Decl							lin	lin	p_efake
ANR	14767	DeclStmt									
ANR	14768	Decl							lin	lin	p_bfake
ANR	14769	DeclStmt									
ANR	14770	Decl							char	char *	p_c_function
ANR	14771	DeclStmt									
ANR	14772	Decl							bool	bool	p_git_diff
ANR	14773	DeclStmt									
ANR	14774	Decl							char	"char * ( char * , lin * )"	scan_linenum
ANR	14775	DeclStmt									
ANR	14776	Decl							enum diff	"enum diff ( bool , mode_t * )"	intuit_diff_type
ANR	14777	DeclStmt									
ANR	14778	Decl							int	"int ( char * , bool )"	prefix_components
ANR	14779	DeclStmt									
ANR	14780	Decl							size_t	"size_t ( size_t , int , bool , bool )"	pget_line
ANR	14781	DeclStmt									
ANR	14782	Decl							size_t	size_t ( void )	get_line
ANR	14783	DeclStmt									
ANR	14784	Decl							bool	bool ( void )	incomplete_line
ANR	14785	DeclStmt									
ANR	14786	Decl							bool	bool ( void )	grow_hunkmax
ANR	14787	DeclStmt									
ANR	14788	Decl							void	"void ( file_offset , lin )"	next_intuit_at
ANR	14789	DeclStmt									
ANR	14790	Decl							void	"void ( file_offset , lin )"	skip_to
ANR	14791	DeclStmt									
ANR	14792	Decl							char	char ( char const * )	get_ed_command_letter
ANR	14793	Function	re_patch	97:0:3947:4133							
ANR	14794	FunctionDef	re_patch ()		14793	0					
ANR	14795	CompoundStatement		99:0:3968:4133	14793	0					
ANR	14796	ExpressionStatement	p_first = 0	100:4:3974:3985	14793	0	True				
ANR	14797	AssignmentExpression	p_first = 0		14793	0		=			
ANR	14798	Identifier	p_first		14793	0					
ANR	14799	PrimaryExpression	0		14793	1					
ANR	14800	ExpressionStatement	p_newfirst = 0	101:4:3991:4005	14793	1	True				
ANR	14801	AssignmentExpression	p_newfirst = 0		14793	0		=			
ANR	14802	Identifier	p_newfirst		14793	0					
ANR	14803	PrimaryExpression	0		14793	1					
ANR	14804	ExpressionStatement	p_ptrn_lines = 0	102:4:4011:4027	14793	2	True				
ANR	14805	AssignmentExpression	p_ptrn_lines = 0		14793	0		=			
ANR	14806	Identifier	p_ptrn_lines		14793	0					
ANR	14807	PrimaryExpression	0		14793	1					
ANR	14808	ExpressionStatement	p_repl_lines = 0	103:4:4033:4049	14793	3	True				
ANR	14809	AssignmentExpression	p_repl_lines = 0		14793	0		=			
ANR	14810	Identifier	p_repl_lines		14793	0					
ANR	14811	PrimaryExpression	0		14793	1					
ANR	14812	ExpressionStatement	p_end = - 1	104:4:4055:4065	14793	4	True				
ANR	14813	AssignmentExpression	p_end = - 1		14793	0		=			
ANR	14814	Identifier	p_end		14793	0					
ANR	14815	UnaryOperationExpression	- 1		14793	1					
ANR	14816	UnaryOperator	-		14793	0					
ANR	14817	PrimaryExpression	1		14793	1					
ANR	14818	ExpressionStatement	p_max = 0	105:4:4071:4080	14793	5	True				
ANR	14819	AssignmentExpression	p_max = 0		14793	0		=			
ANR	14820	Identifier	p_max		14793	0					
ANR	14821	PrimaryExpression	0		14793	1					
ANR	14822	ExpressionStatement	p_indent = 0	106:4:4086:4098	14793	6	True				
ANR	14823	AssignmentExpression	p_indent = 0		14793	0		=			
ANR	14824	Identifier	p_indent		14793	0					
ANR	14825	PrimaryExpression	0		14793	1					
ANR	14826	ExpressionStatement	p_strip_trailing_cr = false	107:4:4104:4131	14793	7	True				
ANR	14827	AssignmentExpression	p_strip_trailing_cr = false		14793	0		=			
ANR	14828	Identifier	p_strip_trailing_cr		14793	0					
ANR	14829	Identifier	false		14793	1					
ANR	14830	ReturnType	void		14793	1					
ANR	14831	Identifier	re_patch		14793	2					
ANR	14832	ParameterList			14793	3					
ANR	14833	CFGEntryNode	ENTRY		14793		True				
ANR	14834	CFGExitNode	EXIT		14793		True				
ANR	14835	Symbol	p_strip_trailing_cr		14793						
ANR	14836	Symbol	p_repl_lines		14793						
ANR	14837	Symbol	p_ptrn_lines		14793						
ANR	14838	Symbol	p_max		14793						
ANR	14839	Symbol	p_newfirst		14793						
ANR	14840	Symbol	p_first		14793						
ANR	14841	Symbol	p_indent		14793						
ANR	14842	Symbol	false		14793						
ANR	14843	Symbol	p_end		14793						
ANR	14844	Function	open_patch_file	112:0:4189:5744							
ANR	14845	FunctionDef	open_patch_file (char const * filename)		14844	0					
ANR	14846	CompoundStatement		114:0:4233:5744	14844	0					
ANR	14847	IdentifierDeclStatement	file_offset file_pos = 0 ;	115:4:4239:4263	14844	0	True				
ANR	14848	IdentifierDecl	file_pos = 0		14844	0					
ANR	14849	IdentifierDeclType	file_offset		14844	0					
ANR	14850	Identifier	file_pos		14844	1					
ANR	14851	AssignmentExpression	file_pos = 0		14844	2		=			
ANR	14852	Identifier	file_pos		14844	0					
ANR	14853	PrimaryExpression	0		14844	1					
ANR	14854	IdentifierDeclStatement	file_offset pos ;	116:4:4269:4284	14844	1	True				
ANR	14855	IdentifierDecl	pos		14844	0					
ANR	14856	IdentifierDeclType	file_offset		14844	0					
ANR	14857	Identifier	pos		14844	1					
ANR	14858	IdentifierDeclStatement	struct stat st ;	117:4:4290:4304	14844	2	True				
ANR	14859	IdentifierDecl	st		14844	0					
ANR	14860	IdentifierDeclType	struct stat		14844	0					
ANR	14861	Identifier	st		14844	1					
ANR	14862	IfStatement	"if ( ! filename || ! * filename || strEQ ( filename , ""-"" ) )"		14844	3					
ANR	14863	Condition	"! filename || ! * filename || strEQ ( filename , ""-"" )"	119:8:4315:4362	14844	0	True				
ANR	14864	OrExpression	"! filename || ! * filename || strEQ ( filename , ""-"" )"		14844	0		||			
ANR	14865	UnaryOperationExpression	! filename		14844	0					
ANR	14866	UnaryOperator	!		14844	0					
ANR	14867	Identifier	filename		14844	1					
ANR	14868	OrExpression	"! * filename || strEQ ( filename , ""-"" )"		14844	1		||			
ANR	14869	UnaryOperationExpression	! * filename		14844	0					
ANR	14870	UnaryOperator	!		14844	0					
ANR	14871	UnaryOperationExpression	* filename		14844	1					
ANR	14872	UnaryOperator	*		14844	0					
ANR	14873	Identifier	filename		14844	1					
ANR	14874	CallExpression	"strEQ ( filename , ""-"" )"		14844	1					
ANR	14875	Callee	strEQ		14844	0					
ANR	14876	Identifier	strEQ		14844	0					
ANR	14877	ArgumentList	filename		14844	1					
ANR	14878	Argument	filename		14844	0					
ANR	14879	Identifier	filename		14844	0					
ANR	14880	Argument	"""-"""		14844	1					
ANR	14881	PrimaryExpression	"""-"""		14844	0					
ANR	14882	ExpressionStatement	pfp = stdin	120:6:4371:4382	14844	1	True				
ANR	14883	AssignmentExpression	pfp = stdin		14844	0		=			
ANR	14884	Identifier	pfp		14844	0					
ANR	14885	Identifier	stdin		14844	1					
ANR	14886	ElseStatement	else		14844	0					
ANR	14887	CompoundStatement		9:6:165:165	14844	0					
ANR	14888	ExpressionStatement	"pfp = fopen ( filename , binary_transput ? ""rb"" : ""r"" )"	123:1:4402:4454	14844	0	True				
ANR	14889	AssignmentExpression	"pfp = fopen ( filename , binary_transput ? ""rb"" : ""r"" )"		14844	0		=			
ANR	14890	Identifier	pfp		14844	0					
ANR	14891	CallExpression	"fopen ( filename , binary_transput ? ""rb"" : ""r"" )"		14844	1					
ANR	14892	Callee	fopen		14844	0					
ANR	14893	Identifier	fopen		14844	0					
ANR	14894	ArgumentList	filename		14844	1					
ANR	14895	Argument	filename		14844	0					
ANR	14896	Identifier	filename		14844	0					
ANR	14897	Argument	"binary_transput ? ""rb"" : ""r"""		14844	1					
ANR	14898	ConditionalExpression	"binary_transput ? ""rb"" : ""r"""		14844	0					
ANR	14899	Condition	binary_transput		14844	0					
ANR	14900	Identifier	binary_transput		14844	0					
ANR	14901	PrimaryExpression	"""rb"""		14844	1					
ANR	14902	PrimaryExpression	"""r"""		14844	2					
ANR	14903	IfStatement	if ( ! pfp )		14844	1					
ANR	14904	Condition	! pfp	124:5:4461:4464	14844	0	True				
ANR	14905	UnaryOperationExpression	! pfp		14844	0					
ANR	14906	UnaryOperator	!		14844	0					
ANR	14907	Identifier	pfp		14844	1					
ANR	14908	ExpressionStatement	"pfatal ( ""Can't open patch file %s"" , quotearg ( filename ) )"	125:3:4470:4526	14844	1	True				
ANR	14909	CallExpression	"pfatal ( ""Can't open patch file %s"" , quotearg ( filename ) )"		14844	0					
ANR	14910	Callee	pfatal		14844	0					
ANR	14911	Identifier	pfatal		14844	0					
ANR	14912	ArgumentList	"""Can't open patch file %s"""		14844	1					
ANR	14913	Argument	"""Can't open patch file %s"""		14844	0					
ANR	14914	PrimaryExpression	"""Can't open patch file %s"""		14844	0					
ANR	14915	Argument	quotearg ( filename )		14844	1					
ANR	14916	CallExpression	quotearg ( filename )		14844	0					
ANR	14917	Callee	quotearg		14844	0					
ANR	14918	Identifier	quotearg		14844	0					
ANR	14919	ArgumentList	filename		14844	1					
ANR	14920	Argument	filename		14844	0					
ANR	14921	Identifier	filename		14844	0					
ANR	14922	IfStatement	if ( binary_transput )		14844	4					
ANR	14923	Condition	binary_transput	128:8:4565:4579	14844	0	True				
ANR	14924	Identifier	binary_transput		14844	0					
ANR	14925	CompoundStatement		16:6:354:354	14844	1					
ANR	14926	IfStatement	if ( isatty ( fileno ( pfp ) ) )		14844	0					
ANR	14927	Condition	isatty ( fileno ( pfp ) )	130:5:4595:4615	14844	0	True				
ANR	14928	CallExpression	isatty ( fileno ( pfp ) )		14844	0					
ANR	14929	Callee	isatty		14844	0					
ANR	14930	Identifier	isatty		14844	0					
ANR	14931	ArgumentList	fileno ( pfp )		14844	1					
ANR	14932	Argument	fileno ( pfp )		14844	0					
ANR	14933	CallExpression	fileno ( pfp )		14844	0					
ANR	14934	Callee	fileno		14844	0					
ANR	14935	Identifier	fileno		14844	0					
ANR	14936	ArgumentList	pfp		14844	1					
ANR	14937	Argument	pfp		14844	0					
ANR	14938	Identifier	pfp		14844	0					
ANR	14939	ExpressionStatement	"fatal ( ""cannot read binary data from tty on this platform"" )"	131:3:4621:4680	14844	1	True				
ANR	14940	CallExpression	"fatal ( ""cannot read binary data from tty on this platform"" )"		14844	0					
ANR	14941	Callee	fatal		14844	0					
ANR	14942	Identifier	fatal		14844	0					
ANR	14943	ArgumentList	"""cannot read binary data from tty on this platform"""		14844	1					
ANR	14944	Argument	"""cannot read binary data from tty on this platform"""		14844	0					
ANR	14945	PrimaryExpression	"""cannot read binary data from tty on this platform"""		14844	0					
ANR	14946	ExpressionStatement	"setmode ( fileno ( pfp ) , O_BINARY )"	132:1:4683:4715	14844	1	True				
ANR	14947	CallExpression	"setmode ( fileno ( pfp ) , O_BINARY )"		14844	0					
ANR	14948	Callee	setmode		14844	0					
ANR	14949	Identifier	setmode		14844	0					
ANR	14950	ArgumentList	fileno ( pfp )		14844	1					
ANR	14951	Argument	fileno ( pfp )		14844	0					
ANR	14952	CallExpression	fileno ( pfp )		14844	0					
ANR	14953	Callee	fileno		14844	0					
ANR	14954	Identifier	fileno		14844	0					
ANR	14955	ArgumentList	pfp		14844	1					
ANR	14956	Argument	pfp		14844	0					
ANR	14957	Identifier	pfp		14844	0					
ANR	14958	Argument	O_BINARY		14844	1					
ANR	14959	Identifier	O_BINARY		14844	0					
ANR	14960	IfStatement	"if ( fstat ( fileno ( pfp ) , & st ) != 0 )"		14844	5					
ANR	14961	Condition	"fstat ( fileno ( pfp ) , & st ) != 0"	135:8:4740:4769	14844	0	True				
ANR	14962	EqualityExpression	"fstat ( fileno ( pfp ) , & st ) != 0"		14844	0		!=			
ANR	14963	CallExpression	"fstat ( fileno ( pfp ) , & st )"		14844	0					
ANR	14964	Callee	fstat		14844	0					
ANR	14965	Identifier	fstat		14844	0					
ANR	14966	ArgumentList	fileno ( pfp )		14844	1					
ANR	14967	Argument	fileno ( pfp )		14844	0					
ANR	14968	CallExpression	fileno ( pfp )		14844	0					
ANR	14969	Callee	fileno		14844	0					
ANR	14970	Identifier	fileno		14844	0					
ANR	14971	ArgumentList	pfp		14844	1					
ANR	14972	Argument	pfp		14844	0					
ANR	14973	Identifier	pfp		14844	0					
ANR	14974	Argument	& st		14844	1					
ANR	14975	UnaryOperationExpression	& st		14844	0					
ANR	14976	UnaryOperator	&		14844	0					
ANR	14977	Identifier	st		14844	1					
ANR	14978	PrimaryExpression	0		14844	1					
ANR	14979	ExpressionStatement	"pfatal ( ""fstat"" )"	136:6:4778:4794	14844	1	True				
ANR	14980	CallExpression	"pfatal ( ""fstat"" )"		14844	0					
ANR	14981	Callee	pfatal		14844	0					
ANR	14982	Identifier	pfatal		14844	0					
ANR	14983	ArgumentList	"""fstat"""		14844	1					
ANR	14984	Argument	"""fstat"""		14844	0					
ANR	14985	PrimaryExpression	"""fstat"""		14844	0					
ANR	14986	IfStatement	if ( S_ISREG ( st . st_mode ) && ( pos = file_tell ( pfp ) ) != - 1 )		14844	6					
ANR	14987	Condition	S_ISREG ( st . st_mode ) && ( pos = file_tell ( pfp ) ) != - 1	137:8:4804:4856	14844	0	True				
ANR	14988	AndExpression	S_ISREG ( st . st_mode ) && ( pos = file_tell ( pfp ) ) != - 1		14844	0		&&			
ANR	14989	CallExpression	S_ISREG ( st . st_mode )		14844	0					
ANR	14990	Callee	S_ISREG		14844	0					
ANR	14991	Identifier	S_ISREG		14844	0					
ANR	14992	ArgumentList	st . st_mode		14844	1					
ANR	14993	Argument	st . st_mode		14844	0					
ANR	14994	MemberAccess	st . st_mode		14844	0					
ANR	14995	Identifier	st		14844	0					
ANR	14996	Identifier	st_mode		14844	1					
ANR	14997	EqualityExpression	( pos = file_tell ( pfp ) ) != - 1		14844	1		!=			
ANR	14998	AssignmentExpression	pos = file_tell ( pfp )		14844	0		=			
ANR	14999	Identifier	pos		14844	0					
ANR	15000	CallExpression	file_tell ( pfp )		14844	1					
ANR	15001	Callee	file_tell		14844	0					
ANR	15002	Identifier	file_tell		14844	0					
ANR	15003	ArgumentList	pfp		14844	1					
ANR	15004	Argument	pfp		14844	0					
ANR	15005	Identifier	pfp		14844	0					
ANR	15006	UnaryOperationExpression	- 1		14844	1					
ANR	15007	UnaryOperator	-		14844	0					
ANR	15008	PrimaryExpression	1		14844	1					
ANR	15009	ExpressionStatement	file_pos = pos	138:6:4865:4879	14844	1	True				
ANR	15010	AssignmentExpression	file_pos = pos		14844	0		=			
ANR	15011	Identifier	file_pos		14844	0					
ANR	15012	Identifier	pos		14844	1					
ANR	15013	ElseStatement	else		14844	0					
ANR	15014	CompoundStatement		30:1:693:713	14844	0					
ANR	15015	IdentifierDeclStatement	size_t charsread ;	141:1:4899:4915	14844	0	True				
ANR	15016	IdentifierDecl	charsread		14844	0					
ANR	15017	IdentifierDeclType	size_t		14844	0					
ANR	15018	Identifier	charsread		14844	1					
ANR	15019	IdentifierDeclStatement	int fd ;	142:1:4918:4924	14844	1	True				
ANR	15020	IdentifierDecl	fd		14844	0					
ANR	15021	IdentifierDeclType	int		14844	0					
ANR	15022	Identifier	fd		14844	1					
ANR	15023	IdentifierDeclStatement	FILE * read_pfp = pfp ;	143:1:4927:4947	14844	2	True				
ANR	15024	IdentifierDecl	* read_pfp = pfp		14844	0					
ANR	15025	IdentifierDeclType	FILE *		14844	0					
ANR	15026	Identifier	read_pfp		14844	1					
ANR	15027	AssignmentExpression	* read_pfp = pfp		14844	2		=			
ANR	15028	Identifier	pfp		14844	0					
ANR	15029	Identifier	pfp		14844	1					
ANR	15030	ExpressionStatement	"fd = make_tempfile ( & TMPPATNAME , 'p' , NULL , O_RDWR | O_BINARY , 0 )"	144:1:4950:5015	14844	3	True				
ANR	15031	AssignmentExpression	"fd = make_tempfile ( & TMPPATNAME , 'p' , NULL , O_RDWR | O_BINARY , 0 )"		14844	0		=			
ANR	15032	Identifier	fd		14844	0					
ANR	15033	CallExpression	"make_tempfile ( & TMPPATNAME , 'p' , NULL , O_RDWR | O_BINARY , 0 )"		14844	1					
ANR	15034	Callee	make_tempfile		14844	0					
ANR	15035	Identifier	make_tempfile		14844	0					
ANR	15036	ArgumentList	& TMPPATNAME		14844	1					
ANR	15037	Argument	& TMPPATNAME		14844	0					
ANR	15038	UnaryOperationExpression	& TMPPATNAME		14844	0					
ANR	15039	UnaryOperator	&		14844	0					
ANR	15040	Identifier	TMPPATNAME		14844	1					
ANR	15041	Argument	'p'		14844	1					
ANR	15042	PrimaryExpression	'p'		14844	0					
ANR	15043	Argument	NULL		14844	2					
ANR	15044	Identifier	NULL		14844	0					
ANR	15045	Argument	O_RDWR | O_BINARY		14844	3					
ANR	15046	InclusiveOrExpression	O_RDWR | O_BINARY		14844	0		|			
ANR	15047	Identifier	O_RDWR		14844	0					
ANR	15048	Identifier	O_BINARY		14844	1					
ANR	15049	Argument	0		14844	4					
ANR	15050	PrimaryExpression	0		14844	0					
ANR	15051	IfStatement	if ( fd == - 1 )		14844	4					
ANR	15052	Condition	fd == - 1	145:5:5022:5029	14844	0	True				
ANR	15053	EqualityExpression	fd == - 1		14844	0		==			
ANR	15054	Identifier	fd		14844	0					
ANR	15055	UnaryOperationExpression	- 1		14844	1					
ANR	15056	UnaryOperator	-		14844	0					
ANR	15057	PrimaryExpression	1		14844	1					
ANR	15058	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , TMPPATNAME )"	146:3:5035:5088	14844	1	True				
ANR	15059	CallExpression	"pfatal ( ""Can't create temporary file %s"" , TMPPATNAME )"		14844	0					
ANR	15060	Callee	pfatal		14844	0					
ANR	15061	Identifier	pfatal		14844	0					
ANR	15062	ArgumentList	"""Can't create temporary file %s"""		14844	1					
ANR	15063	Argument	"""Can't create temporary file %s"""		14844	0					
ANR	15064	PrimaryExpression	"""Can't create temporary file %s"""		14844	0					
ANR	15065	Argument	TMPPATNAME		14844	1					
ANR	15066	Identifier	TMPPATNAME		14844	0					
ANR	15067	ExpressionStatement	TMPPATNAME_needs_removal = true	147:1:5091:5122	14844	5	True				
ANR	15068	AssignmentExpression	TMPPATNAME_needs_removal = true		14844	0		=			
ANR	15069	Identifier	TMPPATNAME_needs_removal		14844	0					
ANR	15070	Identifier	true		14844	1					
ANR	15071	ExpressionStatement	"pfp = fdopen ( fd , ""w+b"" )"	148:1:5125:5149	14844	6	True				
ANR	15072	AssignmentExpression	"pfp = fdopen ( fd , ""w+b"" )"		14844	0		=			
ANR	15073	Identifier	pfp		14844	0					
ANR	15074	CallExpression	"fdopen ( fd , ""w+b"" )"		14844	1					
ANR	15075	Callee	fdopen		14844	0					
ANR	15076	Identifier	fdopen		14844	0					
ANR	15077	ArgumentList	fd		14844	1					
ANR	15078	Argument	fd		14844	0					
ANR	15079	Identifier	fd		14844	0					
ANR	15080	Argument	"""w+b"""		14844	1					
ANR	15081	PrimaryExpression	"""w+b"""		14844	0					
ANR	15082	IfStatement	if ( ! pfp )		14844	7					
ANR	15083	Condition	! pfp	149:5:5156:5160	14844	0	True				
ANR	15084	UnaryOperationExpression	! pfp		14844	0					
ANR	15085	UnaryOperator	!		14844	0					
ANR	15086	Identifier	pfp		14844	1					
ANR	15087	ExpressionStatement	"pfatal ( ""Can't open stream for file %s"" , quotearg ( TMPPATNAME ) )"	150:3:5166:5229	14844	1	True				
ANR	15088	CallExpression	"pfatal ( ""Can't open stream for file %s"" , quotearg ( TMPPATNAME ) )"		14844	0					
ANR	15089	Callee	pfatal		14844	0					
ANR	15090	Identifier	pfatal		14844	0					
ANR	15091	ArgumentList	"""Can't open stream for file %s"""		14844	1					
ANR	15092	Argument	"""Can't open stream for file %s"""		14844	0					
ANR	15093	PrimaryExpression	"""Can't open stream for file %s"""		14844	0					
ANR	15094	Argument	quotearg ( TMPPATNAME )		14844	1					
ANR	15095	CallExpression	quotearg ( TMPPATNAME )		14844	0					
ANR	15096	Callee	quotearg		14844	0					
ANR	15097	Identifier	quotearg		14844	0					
ANR	15098	ArgumentList	TMPPATNAME		14844	1					
ANR	15099	Argument	TMPPATNAME		14844	0					
ANR	15100	Identifier	TMPPATNAME		14844	0					
ANR	15101	ForStatement	"for ( st . st_size = 0 ; ( charsread = fread ( buf , 1 , bufsize , read_pfp ) ) != 0 ; st . st_size += charsread )"		14844	8					
ANR	15102	ForInit	st . st_size = 0 ;	151:6:5237:5251	14844	0	True				
ANR	15103	AssignmentExpression	st . st_size = 0		14844	0		=			
ANR	15104	MemberAccess	st . st_size		14844	0					
ANR	15105	Identifier	st		14844	0					
ANR	15106	Identifier	st_size		14844	1					
ANR	15107	PrimaryExpression	0		14844	1					
ANR	15108	Condition	"( charsread = fread ( buf , 1 , bufsize , read_pfp ) ) != 0"	152:6:5259:5310	14844	1	True				
ANR	15109	EqualityExpression	"( charsread = fread ( buf , 1 , bufsize , read_pfp ) ) != 0"		14844	0		!=			
ANR	15110	AssignmentExpression	"charsread = fread ( buf , 1 , bufsize , read_pfp )"		14844	0		=			
ANR	15111	Identifier	charsread		14844	0					
ANR	15112	CallExpression	"fread ( buf , 1 , bufsize , read_pfp )"		14844	1					
ANR	15113	Callee	fread		14844	0					
ANR	15114	Identifier	fread		14844	0					
ANR	15115	ArgumentList	buf		14844	1					
ANR	15116	Argument	buf		14844	0					
ANR	15117	Identifier	buf		14844	0					
ANR	15118	Argument	1		14844	1					
ANR	15119	PrimaryExpression	1		14844	0					
ANR	15120	Argument	bufsize		14844	2					
ANR	15121	Identifier	bufsize		14844	0					
ANR	15122	Argument	read_pfp		14844	3					
ANR	15123	Identifier	read_pfp		14844	0					
ANR	15124	PrimaryExpression	0		14844	1					
ANR	15125	AssignmentExpression	st . st_size += charsread	153:6:5319:5341	14844	2	True	+=			
ANR	15126	MemberAccess	st . st_size		14844	0					
ANR	15127	Identifier	st		14844	0					
ANR	15128	Identifier	st_size		14844	1					
ANR	15129	Identifier	charsread		14844	1					
ANR	15130	IfStatement	"if ( fwrite ( buf , 1 , charsread , pfp ) != charsread )"		14844	3					
ANR	15131	Condition	"fwrite ( buf , 1 , charsread , pfp ) != charsread"	154:7:5351:5394	14844	0	True				
ANR	15132	EqualityExpression	"fwrite ( buf , 1 , charsread , pfp ) != charsread"		14844	0		!=			
ANR	15133	CallExpression	"fwrite ( buf , 1 , charsread , pfp )"		14844	0					
ANR	15134	Callee	fwrite		14844	0					
ANR	15135	Identifier	fwrite		14844	0					
ANR	15136	ArgumentList	buf		14844	1					
ANR	15137	Argument	buf		14844	0					
ANR	15138	Identifier	buf		14844	0					
ANR	15139	Argument	1		14844	1					
ANR	15140	PrimaryExpression	1		14844	0					
ANR	15141	Argument	charsread		14844	2					
ANR	15142	Identifier	charsread		14844	0					
ANR	15143	Argument	pfp		14844	3					
ANR	15144	Identifier	pfp		14844	0					
ANR	15145	Identifier	charsread		14844	1					
ANR	15146	ExpressionStatement	write_fatal ( )	155:5:5402:5416	14844	1	True				
ANR	15147	CallExpression	write_fatal ( )		14844	0					
ANR	15148	Callee	write_fatal		14844	0					
ANR	15149	Identifier	write_fatal		14844	0					
ANR	15150	ArgumentList			14844	1					
ANR	15151	IfStatement	if ( ferror ( read_pfp ) || fclose ( read_pfp ) != 0 )		14844	9					
ANR	15152	Condition	ferror ( read_pfp ) || fclose ( read_pfp ) != 0	156:5:5423:5465	14844	0	True				
ANR	15153	OrExpression	ferror ( read_pfp ) || fclose ( read_pfp ) != 0		14844	0		||			
ANR	15154	CallExpression	ferror ( read_pfp )		14844	0					
ANR	15155	Callee	ferror		14844	0					
ANR	15156	Identifier	ferror		14844	0					
ANR	15157	ArgumentList	read_pfp		14844	1					
ANR	15158	Argument	read_pfp		14844	0					
ANR	15159	Identifier	read_pfp		14844	0					
ANR	15160	EqualityExpression	fclose ( read_pfp ) != 0		14844	1		!=			
ANR	15161	CallExpression	fclose ( read_pfp )		14844	0					
ANR	15162	Callee	fclose		14844	0					
ANR	15163	Identifier	fclose		14844	0					
ANR	15164	ArgumentList	read_pfp		14844	1					
ANR	15165	Argument	read_pfp		14844	0					
ANR	15166	Identifier	read_pfp		14844	0					
ANR	15167	PrimaryExpression	0		14844	1					
ANR	15168	ExpressionStatement	read_fatal ( )	157:3:5471:5484	14844	1	True				
ANR	15169	CallExpression	read_fatal ( )		14844	0					
ANR	15170	Callee	read_fatal		14844	0					
ANR	15171	Identifier	read_fatal		14844	0					
ANR	15172	ArgumentList			14844	1					
ANR	15173	IfStatement	"if ( fflush ( pfp ) != 0 || file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0 )"		14844	10					
ANR	15174	Condition	"fflush ( pfp ) != 0 || file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0"	158:5:5491:5563	14844	0	True				
ANR	15175	OrExpression	"fflush ( pfp ) != 0 || file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0"		14844	0		||			
ANR	15176	EqualityExpression	fflush ( pfp ) != 0		14844	0		!=			
ANR	15177	CallExpression	fflush ( pfp )		14844	0					
ANR	15178	Callee	fflush		14844	0					
ANR	15179	Identifier	fflush		14844	0					
ANR	15180	ArgumentList	pfp		14844	1					
ANR	15181	Argument	pfp		14844	0					
ANR	15182	Identifier	pfp		14844	0					
ANR	15183	PrimaryExpression	0		14844	1					
ANR	15184	EqualityExpression	"file_seek ( pfp , ( file_offset ) 0 , SEEK_SET ) != 0"		14844	1		!=			
ANR	15185	CallExpression	"file_seek ( pfp , ( file_offset ) 0 , SEEK_SET )"		14844	0					
ANR	15186	Callee	file_seek		14844	0					
ANR	15187	Identifier	file_seek		14844	0					
ANR	15188	ArgumentList	pfp		14844	1					
ANR	15189	Argument	pfp		14844	0					
ANR	15190	Identifier	pfp		14844	0					
ANR	15191	Argument	( file_offset ) 0		14844	1					
ANR	15192	CastExpression	( file_offset ) 0		14844	0					
ANR	15193	CastTarget	file_offset		14844	0					
ANR	15194	PrimaryExpression	0		14844	1					
ANR	15195	Argument	SEEK_SET		14844	2					
ANR	15196	Identifier	SEEK_SET		14844	0					
ANR	15197	PrimaryExpression	0		14844	1					
ANR	15198	ExpressionStatement	write_fatal ( )	160:3:5569:5583	14844	1	True				
ANR	15199	CallExpression	write_fatal ( )		14844	0					
ANR	15200	Callee	write_fatal		14844	0					
ANR	15201	Identifier	write_fatal		14844	0					
ANR	15202	ArgumentList			14844	1					
ANR	15203	ExpressionStatement	p_filesize = st . st_size	162:4:5597:5620	14844	7	True				
ANR	15204	AssignmentExpression	p_filesize = st . st_size		14844	0		=			
ANR	15205	Identifier	p_filesize		14844	0					
ANR	15206	MemberAccess	st . st_size		14844	1					
ANR	15207	Identifier	st		14844	0					
ANR	15208	Identifier	st_size		14844	1					
ANR	15209	IfStatement	if ( p_filesize != ( file_offset ) p_filesize )		14844	8					
ANR	15210	Condition	p_filesize != ( file_offset ) p_filesize	163:8:5630:5667	14844	0	True				
ANR	15211	EqualityExpression	p_filesize != ( file_offset ) p_filesize		14844	0		!=			
ANR	15212	Identifier	p_filesize		14844	0					
ANR	15213	CastExpression	( file_offset ) p_filesize		14844	1					
ANR	15214	CastTarget	file_offset		14844	0					
ANR	15215	Identifier	p_filesize		14844	1					
ANR	15216	ExpressionStatement	"fatal ( ""patch file is too long"" )"	164:6:5676:5708	14844	1	True				
ANR	15217	CallExpression	"fatal ( ""patch file is too long"" )"		14844	0					
ANR	15218	Callee	fatal		14844	0					
ANR	15219	Identifier	fatal		14844	0					
ANR	15220	ArgumentList	"""patch file is too long"""		14844	1					
ANR	15221	Argument	"""patch file is too long"""		14844	0					
ANR	15222	PrimaryExpression	"""patch file is too long"""		14844	0					
ANR	15223	ExpressionStatement	"next_intuit_at ( file_pos , 1 )"	165:4:5714:5742	14844	9	True				
ANR	15224	CallExpression	"next_intuit_at ( file_pos , 1 )"		14844	0					
ANR	15225	Callee	next_intuit_at		14844	0					
ANR	15226	Identifier	next_intuit_at		14844	0					
ANR	15227	ArgumentList	file_pos		14844	1					
ANR	15228	Argument	file_pos		14844	0					
ANR	15229	Identifier	file_pos		14844	0					
ANR	15230	Argument	1		14844	1					
ANR	15231	PrimaryExpression	1		14844	0					
ANR	15232	ReturnType	void		14844	1					
ANR	15233	Identifier	open_patch_file		14844	2					
ANR	15234	ParameterList	char const * filename		14844	3					
ANR	15235	Parameter	char const * filename	113:17:4211:4230	14844	0	True				
ANR	15236	ParameterType	char const *		14844	0					
ANR	15237	Identifier	filename		14844	1					
ANR	15238	CFGEntryNode	ENTRY		14844		True				
ANR	15239	CFGExitNode	EXIT		14844		True				
ANR	15240	Symbol	fflush		14844						
ANR	15241	Symbol	stdin		14844						
ANR	15242	Symbol	quotearg		14844						
ANR	15243	Symbol	O_BINARY		14844						
ANR	15244	Symbol	make_tempfile		14844						
ANR	15245	Symbol	& st		14844						
ANR	15246	Symbol	st . st_mode		14844						
ANR	15247	Symbol	fdopen		14844						
ANR	15248	Symbol	charsread		14844						
ANR	15249	Symbol	isatty		14844						
ANR	15250	Symbol	file_seek		14844						
ANR	15251	Symbol	p_filesize		14844						
ANR	15252	Symbol	O_RDWR		14844						
ANR	15253	Symbol	& TMPPATNAME		14844						
ANR	15254	Symbol	pos		14844						
ANR	15255	Symbol	strEQ		14844						
ANR	15256	Symbol	TMPPATNAME		14844						
ANR	15257	Symbol	TMPPATNAME_needs_removal		14844						
ANR	15258	Symbol	read_pfp		14844						
ANR	15259	Symbol	file_tell		14844						
ANR	15260	Symbol	SEEK_SET		14844						
ANR	15261	Symbol	st		14844						
ANR	15262	Symbol	fopen		14844						
ANR	15263	Symbol	NULL		14844						
ANR	15264	Symbol	fclose		14844						
ANR	15265	Symbol	bufsize		14844						
ANR	15266	Symbol	fstat		14844						
ANR	15267	Symbol	fwrite		14844						
ANR	15268	Symbol	fread		14844						
ANR	15269	Symbol	ferror		14844						
ANR	15270	Symbol	buf		14844						
ANR	15271	Symbol	filename		14844						
ANR	15272	Symbol	* filename		14844						
ANR	15273	Symbol	S_ISREG		14844						
ANR	15274	Symbol	st . st_size		14844						
ANR	15275	Symbol	fileno		14844						
ANR	15276	Symbol	true		14844						
ANR	15277	Symbol	pfp		14844						
ANR	15278	Symbol	binary_transput		14844						
ANR	15279	Symbol	file_pos		14844						
ANR	15280	Symbol	fd		14844						
ANR	15281	Function	set_hunkmax	170:0:5825:6044							
ANR	15282	FunctionDef	set_hunkmax ()		15281	0					
ANR	15283	CompoundStatement		172:0:5856:6044	15281	0					
ANR	15284	IfStatement	if ( ! p_line )		15281	0					
ANR	15285	Condition	! p_line	173:8:5866:5872	15281	0	True				
ANR	15286	UnaryOperationExpression	! p_line		15281	0					
ANR	15287	UnaryOperator	!		15281	0					
ANR	15288	Identifier	p_line		15281	1					
ANR	15289	ExpressionStatement	p_line = xmalloc ( hunkmax * sizeof * p_line )	174:1:5876:5919	15281	1	True				
ANR	15290	AssignmentExpression	p_line = xmalloc ( hunkmax * sizeof * p_line )		15281	0		=			
ANR	15291	Identifier	p_line		15281	0					
ANR	15292	CallExpression	xmalloc ( hunkmax * sizeof * p_line )		15281	1					
ANR	15293	Callee	xmalloc		15281	0					
ANR	15294	Identifier	xmalloc		15281	0					
ANR	15295	ArgumentList	hunkmax * sizeof * p_line		15281	1					
ANR	15296	Argument	hunkmax * sizeof * p_line		15281	0					
ANR	15297	MultiplicativeExpression	hunkmax * sizeof * p_line		15281	0		*			
ANR	15298	Identifier	hunkmax		15281	0					
ANR	15299	SizeofExpression	sizeof * p_line		15281	1					
ANR	15300	Sizeof	sizeof		15281	0					
ANR	15301	UnaryOperationExpression	* p_line		15281	1					
ANR	15302	UnaryOperator	*		15281	0					
ANR	15303	Identifier	p_line		15281	1					
ANR	15304	IfStatement	if ( ! p_len )		15281	1					
ANR	15305	Condition	! p_len	175:8:5929:5934	15281	0	True				
ANR	15306	UnaryOperationExpression	! p_len		15281	0					
ANR	15307	UnaryOperator	!		15281	0					
ANR	15308	Identifier	p_len		15281	1					
ANR	15309	ExpressionStatement	p_len = xmalloc ( hunkmax * sizeof * p_len )	176:1:5938:5979	15281	1	True				
ANR	15310	AssignmentExpression	p_len = xmalloc ( hunkmax * sizeof * p_len )		15281	0		=			
ANR	15311	Identifier	p_len		15281	0					
ANR	15312	CallExpression	xmalloc ( hunkmax * sizeof * p_len )		15281	1					
ANR	15313	Callee	xmalloc		15281	0					
ANR	15314	Identifier	xmalloc		15281	0					
ANR	15315	ArgumentList	hunkmax * sizeof * p_len		15281	1					
ANR	15316	Argument	hunkmax * sizeof * p_len		15281	0					
ANR	15317	MultiplicativeExpression	hunkmax * sizeof * p_len		15281	0		*			
ANR	15318	Identifier	hunkmax		15281	0					
ANR	15319	SizeofExpression	sizeof * p_len		15281	1					
ANR	15320	Sizeof	sizeof		15281	0					
ANR	15321	UnaryOperationExpression	* p_len		15281	1					
ANR	15322	UnaryOperator	*		15281	0					
ANR	15323	Identifier	p_len		15281	1					
ANR	15324	IfStatement	if ( ! p_Char )		15281	2					
ANR	15325	Condition	! p_Char	177:8:5989:5995	15281	0	True				
ANR	15326	UnaryOperationExpression	! p_Char		15281	0					
ANR	15327	UnaryOperator	!		15281	0					
ANR	15328	Identifier	p_Char		15281	1					
ANR	15329	ExpressionStatement	p_Char = xmalloc ( hunkmax * sizeof * p_Char )	178:1:5999:6042	15281	1	True				
ANR	15330	AssignmentExpression	p_Char = xmalloc ( hunkmax * sizeof * p_Char )		15281	0		=			
ANR	15331	Identifier	p_Char		15281	0					
ANR	15332	CallExpression	xmalloc ( hunkmax * sizeof * p_Char )		15281	1					
ANR	15333	Callee	xmalloc		15281	0					
ANR	15334	Identifier	xmalloc		15281	0					
ANR	15335	ArgumentList	hunkmax * sizeof * p_Char		15281	1					
ANR	15336	Argument	hunkmax * sizeof * p_Char		15281	0					
ANR	15337	MultiplicativeExpression	hunkmax * sizeof * p_Char		15281	0		*			
ANR	15338	Identifier	hunkmax		15281	0					
ANR	15339	SizeofExpression	sizeof * p_Char		15281	1					
ANR	15340	Sizeof	sizeof		15281	0					
ANR	15341	UnaryOperationExpression	* p_Char		15281	1					
ANR	15342	UnaryOperator	*		15281	0					
ANR	15343	Identifier	p_Char		15281	1					
ANR	15344	ReturnType	static void		15281	1					
ANR	15345	Identifier	set_hunkmax		15281	2					
ANR	15346	ParameterList			15281	3					
ANR	15347	CFGEntryNode	ENTRY		15281		True				
ANR	15348	CFGExitNode	EXIT		15281		True				
ANR	15349	Symbol	p_len		15281						
ANR	15350	Symbol	hunkmax		15281						
ANR	15351	Symbol	xmalloc		15281						
ANR	15352	Symbol	* p_len		15281						
ANR	15353	Symbol	* p_Char		15281						
ANR	15354	Symbol	p_Char		15281						
ANR	15355	Symbol	* p_line		15281						
ANR	15356	Symbol	p_line		15281						
ANR	15357	Function	grow_hunkmax	183:0:6111:6672							
ANR	15358	FunctionDef	grow_hunkmax ()		15357	0					
ANR	15359	CompoundStatement		185:0:6143:6672	15357	0					
ANR	15360	ExpressionStatement	hunkmax *= 2	186:4:6149:6161	15357	0	True				
ANR	15361	AssignmentExpression	hunkmax *= 2		15357	0		*=			
ANR	15362	Identifier	hunkmax		15357	0					
ANR	15363	PrimaryExpression	2		15357	1					
ANR	15364	ExpressionStatement	assert ( p_line && p_len && p_Char )	187:4:6167:6201	15357	1	True				
ANR	15365	CallExpression	assert ( p_line && p_len && p_Char )		15357	0					
ANR	15366	Callee	assert		15357	0					
ANR	15367	Identifier	assert		15357	0					
ANR	15368	ArgumentList	p_line && p_len && p_Char		15357	1					
ANR	15369	Argument	p_line && p_len && p_Char		15357	0					
ANR	15370	AndExpression	p_line && p_len && p_Char		15357	0		&&			
ANR	15371	Identifier	p_line		15357	0					
ANR	15372	AndExpression	p_len && p_Char		15357	1		&&			
ANR	15373	Identifier	p_len		15357	0					
ANR	15374	Identifier	p_Char		15357	1					
ANR	15375	IfStatement	"if ( ( p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) ) ) && ( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) ) )"		15357	2					
ANR	15376	Condition	"( p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) ) ) && ( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) )"	188:8:6211:6382	15357	0	True				
ANR	15377	AndExpression	"( p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) ) ) && ( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) )"		15357	0		&&			
ANR	15378	AssignmentExpression	"p_line = realloc ( p_line , hunkmax * sizeof ( * p_line ) )"		15357	0		=			
ANR	15379	Identifier	p_line		15357	0					
ANR	15380	CallExpression	"realloc ( p_line , hunkmax * sizeof ( * p_line ) )"		15357	1					
ANR	15381	Callee	realloc		15357	0					
ANR	15382	Identifier	realloc		15357	0					
ANR	15383	ArgumentList	p_line		15357	1					
ANR	15384	Argument	p_line		15357	0					
ANR	15385	Identifier	p_line		15357	0					
ANR	15386	Argument	hunkmax * sizeof ( * p_line )		15357	1					
ANR	15387	MultiplicativeExpression	hunkmax * sizeof ( * p_line )		15357	0		*			
ANR	15388	Identifier	hunkmax		15357	0					
ANR	15389	SizeofExpression	sizeof ( * p_line )		15357	1					
ANR	15390	Sizeof	sizeof		15357	0					
ANR	15391	UnaryOperationExpression	* p_line		15357	1					
ANR	15392	UnaryOperator	*		15357	0					
ANR	15393	Identifier	p_line		15357	1					
ANR	15394	AndExpression	"( p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) ) ) && ( p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) ) )"		15357	1		&&			
ANR	15395	AssignmentExpression	"p_len = realloc ( p_len , hunkmax * sizeof ( * p_len ) )"		15357	0		=			
ANR	15396	Identifier	p_len		15357	0					
ANR	15397	CallExpression	"realloc ( p_len , hunkmax * sizeof ( * p_len ) )"		15357	1					
ANR	15398	Callee	realloc		15357	0					
ANR	15399	Identifier	realloc		15357	0					
ANR	15400	ArgumentList	p_len		15357	1					
ANR	15401	Argument	p_len		15357	0					
ANR	15402	Identifier	p_len		15357	0					
ANR	15403	Argument	hunkmax * sizeof ( * p_len )		15357	1					
ANR	15404	MultiplicativeExpression	hunkmax * sizeof ( * p_len )		15357	0		*			
ANR	15405	Identifier	hunkmax		15357	0					
ANR	15406	SizeofExpression	sizeof ( * p_len )		15357	1					
ANR	15407	Sizeof	sizeof		15357	0					
ANR	15408	UnaryOperationExpression	* p_len		15357	1					
ANR	15409	UnaryOperator	*		15357	0					
ANR	15410	Identifier	p_len		15357	1					
ANR	15411	AssignmentExpression	"p_Char = realloc ( p_Char , hunkmax * sizeof ( * p_Char ) )"		15357	1		=			
ANR	15412	Identifier	p_Char		15357	0					
ANR	15413	CallExpression	"realloc ( p_Char , hunkmax * sizeof ( * p_Char ) )"		15357	1					
ANR	15414	Callee	realloc		15357	0					
ANR	15415	Identifier	realloc		15357	0					
ANR	15416	ArgumentList	p_Char		15357	1					
ANR	15417	Argument	p_Char		15357	0					
ANR	15418	Identifier	p_Char		15357	0					
ANR	15419	Argument	hunkmax * sizeof ( * p_Char )		15357	1					
ANR	15420	MultiplicativeExpression	hunkmax * sizeof ( * p_Char )		15357	0		*			
ANR	15421	Identifier	hunkmax		15357	0					
ANR	15422	SizeofExpression	sizeof ( * p_Char )		15357	1					
ANR	15423	Sizeof	sizeof		15357	0					
ANR	15424	UnaryOperationExpression	* p_Char		15357	1					
ANR	15425	UnaryOperator	*		15357	0					
ANR	15426	Identifier	p_Char		15357	1					
ANR	15427	ReturnStatement	return true ;	191:6:6391:6402	15357	1	True				
ANR	15428	Identifier	true		15357	0					
ANR	15429	IfStatement	if ( ! using_plan_a )		15357	3					
ANR	15430	Condition	! using_plan_a	192:8:6412:6424	15357	0	True				
ANR	15431	UnaryOperationExpression	! using_plan_a		15357	0					
ANR	15432	UnaryOperator	!		15357	0					
ANR	15433	Identifier	using_plan_a		15357	1					
ANR	15434	ExpressionStatement	xalloc_die ( )	193:6:6433:6446	15357	1	True				
ANR	15435	CallExpression	xalloc_die ( )		15357	0					
ANR	15436	Callee	xalloc_die		15357	0					
ANR	15437	Identifier	xalloc_die		15357	0					
ANR	15438	ArgumentList			15357	1					
ANR	15439	ReturnStatement	return false ;	198:4:6658:6670	15357	4	True				
ANR	15440	Identifier	false		15357	0					
ANR	15441	ReturnType	static bool		15357	1					
ANR	15442	Identifier	grow_hunkmax		15357	2					
ANR	15443	ParameterList			15357	3					
ANR	15444	CFGEntryNode	ENTRY		15357		True				
ANR	15445	CFGExitNode	EXIT		15357		True				
ANR	15446	Symbol	p_len		15357						
ANR	15447	Symbol	hunkmax		15357						
ANR	15448	Symbol	* p_len		15357						
ANR	15449	Symbol	true		15357						
ANR	15450	Symbol	false		15357						
ANR	15451	Symbol	* p_Char		15357						
ANR	15452	Symbol	realloc		15357						
ANR	15453	Symbol	p_Char		15357						
ANR	15454	Symbol	* p_line		15357						
ANR	15455	Symbol	using_plan_a		15357						
ANR	15456	Symbol	p_line		15357						
ANR	15457	Function	maybe_reverse	201:0:6675:7531							
ANR	15458	FunctionDef	"maybe_reverse (char const * name , bool nonexistent , bool is_empty)"		15457	0					
ANR	15459	CompoundStatement		203:0:6753:7531	15457	0					
ANR	15460	IdentifierDeclStatement	bool looks_reversed = ( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ] ;	204:2:6757:6832	15457	0	True				
ANR	15461	IdentifierDecl	looks_reversed = ( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ]		15457	0					
ANR	15462	IdentifierDeclType	bool		15457	0					
ANR	15463	Identifier	looks_reversed		15457	1					
ANR	15464	AssignmentExpression	looks_reversed = ( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ]		15457	2		=			
ANR	15465	Identifier	looks_reversed		15457	0					
ANR	15466	RelationalExpression	( ! is_empty ) < p_says_nonexistent [ reverse ^ is_empty ]		15457	1		<			
ANR	15467	UnaryOperationExpression	! is_empty		15457	0					
ANR	15468	UnaryOperator	!		15457	0					
ANR	15469	Identifier	is_empty		15457	1					
ANR	15470	ArrayIndexing	p_says_nonexistent [ reverse ^ is_empty ]		15457	1					
ANR	15471	Identifier	p_says_nonexistent		15457	0					
ANR	15472	ExclusiveOrExpression	reverse ^ is_empty		15457	1		^			
ANR	15473	Identifier	reverse		15457	0					
ANR	15474	Identifier	is_empty		15457	1					
ANR	15475	IfStatement	if ( is_empty && p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2 )		15457	1					
ANR	15476	Condition	is_empty && p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2	208:6:6992:7113	15457	0	True				
ANR	15477	AndExpression	is_empty && p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2		15457	0		&&			
ANR	15478	Identifier	is_empty		15457	0					
ANR	15479	AndExpression	p_says_nonexistent [ reverse ^ nonexistent ] == 1 && p_says_nonexistent [ ! reverse ^ nonexistent ] == 2		15457	1		&&			
ANR	15480	EqualityExpression	p_says_nonexistent [ reverse ^ nonexistent ] == 1		15457	0		==			
ANR	15481	ArrayIndexing	p_says_nonexistent [ reverse ^ nonexistent ]		15457	0					
ANR	15482	Identifier	p_says_nonexistent		15457	0					
ANR	15483	ExclusiveOrExpression	reverse ^ nonexistent		15457	1		^			
ANR	15484	Identifier	reverse		15457	0					
ANR	15485	Identifier	nonexistent		15457	1					
ANR	15486	PrimaryExpression	1		15457	1					
ANR	15487	EqualityExpression	p_says_nonexistent [ ! reverse ^ nonexistent ] == 2		15457	1		==			
ANR	15488	ArrayIndexing	p_says_nonexistent [ ! reverse ^ nonexistent ]		15457	0					
ANR	15489	Identifier	p_says_nonexistent		15457	0					
ANR	15490	ExclusiveOrExpression	! reverse ^ nonexistent		15457	1		^			
ANR	15491	UnaryOperationExpression	! reverse		15457	0					
ANR	15492	UnaryOperator	!		15457	0					
ANR	15493	Identifier	reverse		15457	1					
ANR	15494	Identifier	nonexistent		15457	1					
ANR	15495	PrimaryExpression	2		15457	1					
ANR	15496	ReturnStatement	return false ;	211:4:7120:7132	15457	1	True				
ANR	15497	Identifier	false		15457	0					
ANR	15498	IfStatement	if ( looks_reversed )		15457	2					
ANR	15499	Condition	looks_reversed	213:6:7141:7154	15457	0	True				
ANR	15500	Identifier	looks_reversed		15457	0					
ANR	15501	ExpressionStatement	"reverse ^= ok_to_reverse ( ""The next patch%s would %s the file %s,\\nwhich %s!"" , reverse ? "", when reversed,"" : """" , ( nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"" ) , quotearg ( name ) , ( nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"" ) )"	214:4:7161:7504	15457	1	True				
ANR	15502	AssignmentExpression	"reverse ^= ok_to_reverse ( ""The next patch%s would %s the file %s,\\nwhich %s!"" , reverse ? "", when reversed,"" : """" , ( nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"" ) , quotearg ( name ) , ( nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"" ) )"		15457	0		^=			
ANR	15503	Identifier	reverse		15457	0					
ANR	15504	CallExpression	"ok_to_reverse ( ""The next patch%s would %s the file %s,\\nwhich %s!"" , reverse ? "", when reversed,"" : """" , ( nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"" ) , quotearg ( name ) , ( nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"" ) )"		15457	1					
ANR	15505	Callee	ok_to_reverse		15457	0					
ANR	15506	Identifier	ok_to_reverse		15457	0					
ANR	15507	ArgumentList	"""The next patch%s would %s the file %s,\\nwhich %s!"""		15457	1					
ANR	15508	Argument	"""The next patch%s would %s the file %s,\\nwhich %s!"""		15457	0					
ANR	15509	PrimaryExpression	"""The next patch%s would %s the file %s,\\nwhich %s!"""		15457	0					
ANR	15510	Argument	"reverse ? "", when reversed,"" : """""		15457	1					
ANR	15511	ConditionalExpression	"reverse ? "", when reversed,"" : """""		15457	0					
ANR	15512	Condition	reverse		15457	0					
ANR	15513	Identifier	reverse		15457	0					
ANR	15514	PrimaryExpression	""", when reversed,"""		15457	1					
ANR	15515	PrimaryExpression	""""""		15457	2					
ANR	15516	Argument	"nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"""		15457	2					
ANR	15517	ConditionalExpression	"nonexistent ? ""delete"" : is_empty ? ""empty out"" : ""create"""		15457	0					
ANR	15518	Condition	nonexistent		15457	0					
ANR	15519	Identifier	nonexistent		15457	0					
ANR	15520	PrimaryExpression	"""delete"""		15457	1					
ANR	15521	ConditionalExpression	"is_empty ? ""empty out"" : ""create"""		15457	2					
ANR	15522	Condition	is_empty		15457	0					
ANR	15523	Identifier	is_empty		15457	0					
ANR	15524	PrimaryExpression	"""empty out"""		15457	1					
ANR	15525	PrimaryExpression	"""create"""		15457	2					
ANR	15526	Argument	quotearg ( name )		15457	3					
ANR	15527	CallExpression	quotearg ( name )		15457	0					
ANR	15528	Callee	quotearg		15457	0					
ANR	15529	Identifier	quotearg		15457	0					
ANR	15530	ArgumentList	name		15457	1					
ANR	15531	Argument	name		15457	0					
ANR	15532	Identifier	name		15457	0					
ANR	15533	Argument	"nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"""		15457	4					
ANR	15534	ConditionalExpression	"nonexistent ? ""does not exist"" : is_empty ? ""is already empty"" : ""already exists"""		15457	0					
ANR	15535	Condition	nonexistent		15457	0					
ANR	15536	Identifier	nonexistent		15457	0					
ANR	15537	PrimaryExpression	"""does not exist"""		15457	1					
ANR	15538	ConditionalExpression	"is_empty ? ""is already empty"" : ""already exists"""		15457	2					
ANR	15539	Condition	is_empty		15457	0					
ANR	15540	Identifier	is_empty		15457	0					
ANR	15541	PrimaryExpression	"""is already empty"""		15457	1					
ANR	15542	PrimaryExpression	"""already exists"""		15457	2					
ANR	15543	ReturnStatement	return looks_reversed ;	224:2:7508:7529	15457	3	True				
ANR	15544	Identifier	looks_reversed		15457	0					
ANR	15545	ReturnType	static bool		15457	1					
ANR	15546	Identifier	maybe_reverse		15457	2					
ANR	15547	ParameterList	"char const * name , bool nonexistent , bool is_empty"		15457	3					
ANR	15548	Parameter	char const * name	202:15:6702:6717	15457	0	True				
ANR	15549	ParameterType	char const *		15457	0					
ANR	15550	Identifier	name		15457	1					
ANR	15551	Parameter	bool nonexistent	202:33:6720:6735	15457	1	True				
ANR	15552	ParameterType	bool		15457	0					
ANR	15553	Identifier	nonexistent		15457	1					
ANR	15554	Parameter	bool is_empty	202:51:6738:6750	15457	2	True				
ANR	15555	ParameterType	bool		15457	0					
ANR	15556	Identifier	is_empty		15457	1					
ANR	15557	CFGEntryNode	ENTRY		15457		True				
ANR	15558	CFGExitNode	EXIT		15457		True				
ANR	15559	Symbol	* reverse		15457						
ANR	15560	Symbol	quotearg		15457						
ANR	15561	Symbol	false		15457						
ANR	15562	Symbol	reverse		15457						
ANR	15563	Symbol	* is_empty		15457						
ANR	15564	Symbol	looks_reversed		15457						
ANR	15565	Symbol	* p_says_nonexistent		15457						
ANR	15566	Symbol	name		15457						
ANR	15567	Symbol	p_says_nonexistent		15457						
ANR	15568	Symbol	* nonexistent		15457						
ANR	15569	Symbol	is_empty		15457						
ANR	15570	Symbol	ok_to_reverse		15457						
ANR	15571	Symbol	nonexistent		15457						
ANR	15572	Function	there_is_another_patch	229:0:7611:10166							
ANR	15573	FunctionDef	"there_is_another_patch (bool need_header , mode_t * file_type)"		15572	0					
ANR	15574	CompoundStatement		231:0:7677:10166	15572	0					
ANR	15575	IfStatement	if ( p_base != 0 && p_base >= p_filesize )		15572	0					
ANR	15576	Condition	p_base != 0 && p_base >= p_filesize	232:8:7687:7721	15572	0	True				
ANR	15577	AndExpression	p_base != 0 && p_base >= p_filesize		15572	0		&&			
ANR	15578	EqualityExpression	p_base != 0		15572	0		!=			
ANR	15579	Identifier	p_base		15572	0					
ANR	15580	PrimaryExpression	0		15572	1					
ANR	15581	RelationalExpression	p_base >= p_filesize		15572	1		>=			
ANR	15582	Identifier	p_base		15572	0					
ANR	15583	Identifier	p_filesize		15572	1					
ANR	15584	CompoundStatement		2:45:46:46	15572	1					
ANR	15585	IfStatement	if ( verbosity == VERBOSE )		15572	0					
ANR	15586	Condition	verbosity == VERBOSE	233:5:7731:7750	15572	0	True				
ANR	15587	EqualityExpression	verbosity == VERBOSE		15572	0		==			
ANR	15588	Identifier	verbosity		15572	0					
ANR	15589	Identifier	VERBOSE		15572	1					
ANR	15590	ExpressionStatement	"say ( ""done\\n"" )"	234:5:7758:7772	15572	1	True				
ANR	15591	CallExpression	"say ( ""done\\n"" )"		15572	0					
ANR	15592	Callee	say		15572	0					
ANR	15593	Identifier	say		15572	0					
ANR	15594	ArgumentList	"""done\\n"""		15572	1					
ANR	15595	Argument	"""done\\n"""		15572	0					
ANR	15596	PrimaryExpression	"""done\\n"""		15572	0					
ANR	15597	ReturnStatement	return false ;	235:1:7775:7787	15572	1	True				
ANR	15598	Identifier	false		15572	0					
ANR	15599	IfStatement	if ( verbosity == VERBOSE )		15572	1					
ANR	15600	Condition	verbosity == VERBOSE	237:8:7803:7822	15572	0	True				
ANR	15601	EqualityExpression	verbosity == VERBOSE		15572	0		==			
ANR	15602	Identifier	verbosity		15572	0					
ANR	15603	Identifier	VERBOSE		15572	1					
ANR	15604	ExpressionStatement	"say ( ""Hmm..."" )"	238:1:7826:7840	15572	1	True				
ANR	15605	CallExpression	"say ( ""Hmm..."" )"		15572	0					
ANR	15606	Callee	say		15572	0					
ANR	15607	Identifier	say		15572	0					
ANR	15608	ArgumentList	"""Hmm..."""		15572	1					
ANR	15609	Argument	"""Hmm..."""		15572	0					
ANR	15610	PrimaryExpression	"""Hmm..."""		15572	0					
ANR	15611	ExpressionStatement	"diff_type = intuit_diff_type ( need_header , file_type )"	239:4:7846:7899	15572	2	True				
ANR	15612	AssignmentExpression	"diff_type = intuit_diff_type ( need_header , file_type )"		15572	0		=			
ANR	15613	Identifier	diff_type		15572	0					
ANR	15614	CallExpression	"intuit_diff_type ( need_header , file_type )"		15572	1					
ANR	15615	Callee	intuit_diff_type		15572	0					
ANR	15616	Identifier	intuit_diff_type		15572	0					
ANR	15617	ArgumentList	need_header		15572	1					
ANR	15618	Argument	need_header		15572	0					
ANR	15619	Identifier	need_header		15572	0					
ANR	15620	Argument	file_type		15572	1					
ANR	15621	Identifier	file_type		15572	0					
ANR	15622	IfStatement	if ( diff_type == NO_DIFF )		15572	3					
ANR	15623	Condition	diff_type == NO_DIFF	240:8:7909:7928	15572	0	True				
ANR	15624	EqualityExpression	diff_type == NO_DIFF		15572	0		==			
ANR	15625	Identifier	diff_type		15572	0					
ANR	15626	Identifier	NO_DIFF		15572	1					
ANR	15627	CompoundStatement		10:30:253:253	15572	1					
ANR	15628	IfStatement	if ( verbosity == VERBOSE )		15572	0					
ANR	15629	Condition	verbosity == VERBOSE	241:5:7938:7957	15572	0	True				
ANR	15630	EqualityExpression	verbosity == VERBOSE		15572	0		==			
ANR	15631	Identifier	verbosity		15572	0					
ANR	15632	Identifier	VERBOSE		15572	1					
ANR	15633	ExpressionStatement	"say ( p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"" )"	242:3:7963:8092	15572	1	True				
ANR	15634	CallExpression	"say ( p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"" )"		15572	0					
ANR	15635	Callee	say		15572	0					
ANR	15636	Identifier	say		15572	0					
ANR	15637	ArgumentList	"p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"""		15572	1					
ANR	15638	Argument	"p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"""		15572	0					
ANR	15639	ConditionalExpression	"p_base ? ""  Ignoring the trailing garbage.\\ndone\\n"" : ""  I can't seem to find a patch in there anywhere.\\n"""		15572	0					
ANR	15640	Condition	p_base		15572	0					
ANR	15641	Identifier	p_base		15572	0					
ANR	15642	PrimaryExpression	"""  Ignoring the trailing garbage.\\ndone\\n"""		15572	1					
ANR	15643	PrimaryExpression	"""  I can't seem to find a patch in there anywhere.\\n"""		15572	2					
ANR	15644	IfStatement	if ( ! p_base && p_filesize )		15572	1					
ANR	15645	Condition	! p_base && p_filesize	245:5:8099:8120	15572	0	True				
ANR	15646	AndExpression	! p_base && p_filesize		15572	0		&&			
ANR	15647	UnaryOperationExpression	! p_base		15572	0					
ANR	15648	UnaryOperator	!		15572	0					
ANR	15649	Identifier	p_base		15572	1					
ANR	15650	Identifier	p_filesize		15572	1					
ANR	15651	ExpressionStatement	"fatal ( ""Only garbage was found in the patch input."" )"	246:3:8126:8178	15572	1	True				
ANR	15652	CallExpression	"fatal ( ""Only garbage was found in the patch input."" )"		15572	0					
ANR	15653	Callee	fatal		15572	0					
ANR	15654	Identifier	fatal		15572	0					
ANR	15655	ArgumentList	"""Only garbage was found in the patch input."""		15572	1					
ANR	15656	Argument	"""Only garbage was found in the patch input."""		15572	0					
ANR	15657	PrimaryExpression	"""Only garbage was found in the patch input."""		15572	0					
ANR	15658	ReturnStatement	return false ;	247:1:8181:8193	15572	2	True				
ANR	15659	Identifier	false		15572	0					
ANR	15660	IfStatement	if ( skip_rest_of_patch )		15572	4					
ANR	15661	Condition	skip_rest_of_patch	249:8:8209:8226	15572	0	True				
ANR	15662	Identifier	skip_rest_of_patch		15572	0					
ANR	15663	CompoundStatement		20:6:557:557	15572	1					
ANR	15664	ExpressionStatement	"Fseek ( pfp , p_start , SEEK_SET )"	251:1:8238:8268	15572	0	True				
ANR	15665	CallExpression	"Fseek ( pfp , p_start , SEEK_SET )"		15572	0					
ANR	15666	Callee	Fseek		15572	0					
ANR	15667	Identifier	Fseek		15572	0					
ANR	15668	ArgumentList	pfp		15572	1					
ANR	15669	Argument	pfp		15572	0					
ANR	15670	Identifier	pfp		15572	0					
ANR	15671	Argument	p_start		15572	1					
ANR	15672	Identifier	p_start		15572	0					
ANR	15673	Argument	SEEK_SET		15572	2					
ANR	15674	Identifier	SEEK_SET		15572	0					
ANR	15675	ExpressionStatement	p_input_line = p_sline - 1	252:1:8271:8297	15572	1	True				
ANR	15676	AssignmentExpression	p_input_line = p_sline - 1		15572	0		=			
ANR	15677	Identifier	p_input_line		15572	0					
ANR	15678	AdditiveExpression	p_sline - 1		15572	1		-			
ANR	15679	Identifier	p_sline		15572	0					
ANR	15680	PrimaryExpression	1		15572	1					
ANR	15681	ReturnStatement	return true ;	253:1:8300:8311	15572	2	True				
ANR	15682	Identifier	true		15572	0					
ANR	15683	IfStatement	if ( verbosity == VERBOSE )		15572	5					
ANR	15684	Condition	verbosity == VERBOSE	255:8:8329:8348	15572	0	True				
ANR	15685	EqualityExpression	verbosity == VERBOSE		15572	0		==			
ANR	15686	Identifier	verbosity		15572	0					
ANR	15687	Identifier	VERBOSE		15572	1					
ANR	15688	ExpressionStatement	"say ( ""  %sooks like %s to me...\\n"" , ( p_base == 0 ? ""L"" : ""The next patch l"" ) , diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"" )"	256:1:8352:8730	15572	1	True				
ANR	15689	CallExpression	"say ( ""  %sooks like %s to me...\\n"" , ( p_base == 0 ? ""L"" : ""The next patch l"" ) , diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"" )"		15572	0					
ANR	15690	Callee	say		15572	0					
ANR	15691	Identifier	say		15572	0					
ANR	15692	ArgumentList	"""  %sooks like %s to me...\\n"""		15572	1					
ANR	15693	Argument	"""  %sooks like %s to me...\\n"""		15572	0					
ANR	15694	PrimaryExpression	"""  %sooks like %s to me...\\n"""		15572	0					
ANR	15695	Argument	"p_base == 0 ? ""L"" : ""The next patch l"""		15572	1					
ANR	15696	ConditionalExpression	"p_base == 0 ? ""L"" : ""The next patch l"""		15572	0					
ANR	15697	Condition	p_base == 0		15572	0					
ANR	15698	EqualityExpression	p_base == 0		15572	0		==			
ANR	15699	Identifier	p_base		15572	0					
ANR	15700	PrimaryExpression	0		15572	1					
ANR	15701	PrimaryExpression	"""L"""		15572	1					
ANR	15702	PrimaryExpression	"""The next patch l"""		15572	2					
ANR	15703	Argument	"diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		15572	2					
ANR	15704	ConditionalExpression	"diff_type == UNI_DIFF ? ""a unified diff"" : diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		15572	0					
ANR	15705	Condition	diff_type == UNI_DIFF		15572	0					
ANR	15706	EqualityExpression	diff_type == UNI_DIFF		15572	0		==			
ANR	15707	Identifier	diff_type		15572	0					
ANR	15708	Identifier	UNI_DIFF		15572	1					
ANR	15709	PrimaryExpression	"""a unified diff"""		15572	1					
ANR	15710	ConditionalExpression	"diff_type == CONTEXT_DIFF ? ""a context diff"" : diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		15572	2					
ANR	15711	Condition	diff_type == CONTEXT_DIFF		15572	0					
ANR	15712	EqualityExpression	diff_type == CONTEXT_DIFF		15572	0		==			
ANR	15713	Identifier	diff_type		15572	0					
ANR	15714	Identifier	CONTEXT_DIFF		15572	1					
ANR	15715	PrimaryExpression	"""a context diff"""		15572	1					
ANR	15716	ConditionalExpression	"diff_type == NEW_CONTEXT_DIFF ? ""a new-style context diff"" : diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		15572	2					
ANR	15717	Condition	diff_type == NEW_CONTEXT_DIFF		15572	0					
ANR	15718	EqualityExpression	diff_type == NEW_CONTEXT_DIFF		15572	0		==			
ANR	15719	Identifier	diff_type		15572	0					
ANR	15720	Identifier	NEW_CONTEXT_DIFF		15572	1					
ANR	15721	PrimaryExpression	"""a new-style context diff"""		15572	1					
ANR	15722	ConditionalExpression	"diff_type == NORMAL_DIFF ? ""a normal diff"" : diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		15572	2					
ANR	15723	Condition	diff_type == NORMAL_DIFF		15572	0					
ANR	15724	EqualityExpression	diff_type == NORMAL_DIFF		15572	0		==			
ANR	15725	Identifier	diff_type		15572	0					
ANR	15726	Identifier	NORMAL_DIFF		15572	1					
ANR	15727	PrimaryExpression	"""a normal diff"""		15572	1					
ANR	15728	ConditionalExpression	"diff_type == GIT_BINARY_DIFF ? ""a git binary diff"" : ""an ed script"""		15572	2					
ANR	15729	Condition	diff_type == GIT_BINARY_DIFF		15572	0					
ANR	15730	EqualityExpression	diff_type == GIT_BINARY_DIFF		15572	0		==			
ANR	15731	Identifier	diff_type		15572	0					
ANR	15732	Identifier	GIT_BINARY_DIFF		15572	1					
ANR	15733	PrimaryExpression	"""a git binary diff"""		15572	1					
ANR	15734	PrimaryExpression	"""an ed script"""		15572	2					
ANR	15735	IfStatement	if ( no_strip_trailing_cr )		15572	6					
ANR	15736	Condition	no_strip_trailing_cr	265:8:8741:8760	15572	0	True				
ANR	15737	Identifier	no_strip_trailing_cr		15572	0					
ANR	15738	ExpressionStatement	p_strip_trailing_cr = false	266:6:8769:8796	15572	1	True				
ANR	15739	AssignmentExpression	p_strip_trailing_cr = false		15572	0		=			
ANR	15740	Identifier	p_strip_trailing_cr		15572	0					
ANR	15741	Identifier	false		15572	1					
ANR	15742	IfStatement	if ( verbosity != SILENT )		15572	7					
ANR	15743	Condition	verbosity != SILENT	268:8:8807:8825	15572	0	True				
ANR	15744	EqualityExpression	verbosity != SILENT		15572	0		!=			
ANR	15745	Identifier	verbosity		15572	0					
ANR	15746	Identifier	SILENT		15572	1					
ANR	15747	CompoundStatement		39:6:1156:1156	15572	1					
ANR	15748	IfStatement	if ( p_indent )		15572	0					
ANR	15749	Condition	p_indent	270:5:8841:8848	15572	0	True				
ANR	15750	Identifier	p_indent		15572	0					
ANR	15751	ExpressionStatement	"say ( ""(Patch is indented %lu space%s.)\\n"" , ( unsigned long int ) p_indent , p_indent == 1 ? """" : ""s"" )"	271:3:8854:8954	15572	1	True				
ANR	15752	CallExpression	"say ( ""(Patch is indented %lu space%s.)\\n"" , ( unsigned long int ) p_indent , p_indent == 1 ? """" : ""s"" )"		15572	0					
ANR	15753	Callee	say		15572	0					
ANR	15754	Identifier	say		15572	0					
ANR	15755	ArgumentList	"""(Patch is indented %lu space%s.)\\n"""		15572	1					
ANR	15756	Argument	"""(Patch is indented %lu space%s.)\\n"""		15572	0					
ANR	15757	PrimaryExpression	"""(Patch is indented %lu space%s.)\\n"""		15572	0					
ANR	15758	Argument	( unsigned long int ) p_indent		15572	1					
ANR	15759	CastExpression	( unsigned long int ) p_indent		15572	0					
ANR	15760	CastTarget	unsigned long int		15572	0					
ANR	15761	Identifier	p_indent		15572	1					
ANR	15762	Argument	"p_indent == 1 ? """" : ""s"""		15572	2					
ANR	15763	ConditionalExpression	"p_indent == 1 ? """" : ""s"""		15572	0					
ANR	15764	Condition	p_indent == 1		15572	0					
ANR	15765	EqualityExpression	p_indent == 1		15572	0		==			
ANR	15766	Identifier	p_indent		15572	0					
ANR	15767	PrimaryExpression	1		15572	1					
ANR	15768	PrimaryExpression	""""""		15572	1					
ANR	15769	PrimaryExpression	"""s"""		15572	2					
ANR	15770	IfStatement	if ( p_strip_trailing_cr )		15572	1					
ANR	15771	Condition	p_strip_trailing_cr	273:5:8961:8979	15572	0	True				
ANR	15772	Identifier	p_strip_trailing_cr		15572	0					
ANR	15773	ExpressionStatement	"say ( ""(Stripping trailing CRs from patch; use --binary to disable.)\\n"" )"	274:3:8985:9056	15572	1	True				
ANR	15774	CallExpression	"say ( ""(Stripping trailing CRs from patch; use --binary to disable.)\\n"" )"		15572	0					
ANR	15775	Callee	say		15572	0					
ANR	15776	Identifier	say		15572	0					
ANR	15777	ArgumentList	"""(Stripping trailing CRs from patch; use --binary to disable.)\\n"""		15572	1					
ANR	15778	Argument	"""(Stripping trailing CRs from patch; use --binary to disable.)\\n"""		15572	0					
ANR	15779	PrimaryExpression	"""(Stripping trailing CRs from patch; use --binary to disable.)\\n"""		15572	0					
ANR	15780	IfStatement	if ( ! inname )		15572	2					
ANR	15781	Condition	! inname	275:5:9063:9070	15572	0	True				
ANR	15782	UnaryOperationExpression	! inname		15572	0					
ANR	15783	UnaryOperator	!		15572	0					
ANR	15784	Identifier	inname		15572	1					
ANR	15785	CompoundStatement		47:5:1405:1442	15572	1					
ANR	15786	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	277:5:9083:9120	15572	0	True				
ANR	15787	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		15572	0					
ANR	15788	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		15572	0					
ANR	15789	Identifier	numbuf		15572	1					
ANR	15790	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		15572	2		+			
ANR	15791	Identifier	LINENUM_LENGTH_BOUND		15572	0					
ANR	15792	PrimaryExpression	1		15572	1					
ANR	15793	ExpressionStatement	"say ( ""can't find file to patch at input line %s\\n"" , format_linenum ( numbuf , p_sline ) )"	278:5:9127:9215	15572	1	True				
ANR	15794	CallExpression	"say ( ""can't find file to patch at input line %s\\n"" , format_linenum ( numbuf , p_sline ) )"		15572	0					
ANR	15795	Callee	say		15572	0					
ANR	15796	Identifier	say		15572	0					
ANR	15797	ArgumentList	"""can't find file to patch at input line %s\\n"""		15572	1					
ANR	15798	Argument	"""can't find file to patch at input line %s\\n"""		15572	0					
ANR	15799	PrimaryExpression	"""can't find file to patch at input line %s\\n"""		15572	0					
ANR	15800	Argument	"format_linenum ( numbuf , p_sline )"		15572	1					
ANR	15801	CallExpression	"format_linenum ( numbuf , p_sline )"		15572	0					
ANR	15802	Callee	format_linenum		15572	0					
ANR	15803	Identifier	format_linenum		15572	0					
ANR	15804	ArgumentList	numbuf		15572	1					
ANR	15805	Argument	numbuf		15572	0					
ANR	15806	Identifier	numbuf		15572	0					
ANR	15807	Argument	p_sline		15572	1					
ANR	15808	Identifier	p_sline		15572	0					
ANR	15809	IfStatement	if ( diff_type != ED_DIFF && diff_type != NORMAL_DIFF )		15572	2					
ANR	15810	Condition	diff_type != ED_DIFF && diff_type != NORMAL_DIFF	280:9:9226:9273	15572	0	True				
ANR	15811	AndExpression	diff_type != ED_DIFF && diff_type != NORMAL_DIFF		15572	0		&&			
ANR	15812	EqualityExpression	diff_type != ED_DIFF		15572	0		!=			
ANR	15813	Identifier	diff_type		15572	0					
ANR	15814	Identifier	ED_DIFF		15572	1					
ANR	15815	EqualityExpression	diff_type != NORMAL_DIFF		15572	1		!=			
ANR	15816	Identifier	diff_type		15572	0					
ANR	15817	Identifier	NORMAL_DIFF		15572	1					
ANR	15818	ExpressionStatement	"say ( strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"" )"	281:7:9283:9430	15572	1	True				
ANR	15819	CallExpression	"say ( strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"" )"		15572	0					
ANR	15820	Callee	say		15572	0					
ANR	15821	Identifier	say		15572	0					
ANR	15822	ArgumentList	"strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"""		15572	1					
ANR	15823	Argument	"strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"""		15572	0					
ANR	15824	ConditionalExpression	"strippath == - 1 ? ""Perhaps you should have used the -p or --strip option?\\n"" : ""Perhaps you used the wrong -p or --strip option?\\n"""		15572	0					
ANR	15825	Condition	strippath == - 1		15572	0					
ANR	15826	EqualityExpression	strippath == - 1		15572	0		==			
ANR	15827	Identifier	strippath		15572	0					
ANR	15828	UnaryOperationExpression	- 1		15572	1					
ANR	15829	UnaryOperator	-		15572	0					
ANR	15830	PrimaryExpression	1		15572	1					
ANR	15831	PrimaryExpression	"""Perhaps you should have used the -p or --strip option?\\n"""		15572	1					
ANR	15832	PrimaryExpression	"""Perhaps you used the wrong -p or --strip option?\\n"""		15572	2					
ANR	15833	ExpressionStatement	"skip_to ( p_start , p_sline )"	287:4:9450:9474	15572	8	True				
ANR	15834	CallExpression	"skip_to ( p_start , p_sline )"		15572	0					
ANR	15835	Callee	skip_to		15572	0					
ANR	15836	Identifier	skip_to		15572	0					
ANR	15837	ArgumentList	p_start		15572	1					
ANR	15838	Argument	p_start		15572	0					
ANR	15839	Identifier	p_start		15572	0					
ANR	15840	Argument	p_sline		15572	1					
ANR	15841	Identifier	p_sline		15572	0					
ANR	15842	WhileStatement	while ( ! inname )		15572	9					
ANR	15843	Condition	! inname	288:11:9487:9493	15572	0	True				
ANR	15844	UnaryOperationExpression	! inname		15572	0					
ANR	15845	UnaryOperator	!		15572	0					
ANR	15846	Identifier	inname		15572	1					
ANR	15847	CompoundStatement		59:1:1821:1828	15572	1					
ANR	15848	IdentifierDeclStatement	char * t ;	289:1:9499:9506	15572	0	True				
ANR	15849	IdentifierDecl	* t		15572	0					
ANR	15850	IdentifierDeclType	char *		15572	0					
ANR	15851	Identifier	t		15572	1					
ANR	15852	IfStatement	if ( force | batch )		15572	1					
ANR	15853	Condition	force | batch	290:5:9513:9525	15572	0	True				
ANR	15854	InclusiveOrExpression	force | batch		15572	0		|			
ANR	15855	Identifier	force		15572	0					
ANR	15856	Identifier	batch		15572	1					
ANR	15857	CompoundStatement		60:20:1850:1850	15572	1					
ANR	15858	ExpressionStatement	"say ( ""No file to patch.  Skipping patch.\\n"" )"	291:5:9535:9579	15572	0	True				
ANR	15859	CallExpression	"say ( ""No file to patch.  Skipping patch.\\n"" )"		15572	0					
ANR	15860	Callee	say		15572	0					
ANR	15861	Identifier	say		15572	0					
ANR	15862	ArgumentList	"""No file to patch.  Skipping patch.\\n"""		15572	1					
ANR	15863	Argument	"""No file to patch.  Skipping patch.\\n"""		15572	0					
ANR	15864	PrimaryExpression	"""No file to patch.  Skipping patch.\\n"""		15572	0					
ANR	15865	ExpressionStatement	skip_rest_of_patch = true	292:5:9586:9611	15572	1	True				
ANR	15866	AssignmentExpression	skip_rest_of_patch = true		15572	0		=			
ANR	15867	Identifier	skip_rest_of_patch		15572	0					
ANR	15868	Identifier	true		15572	1					
ANR	15869	ReturnStatement	return true ;	293:5:9618:9629	15572	2	True				
ANR	15870	Identifier	true		15572	0					
ANR	15871	ExpressionStatement	"ask ( ""File to patch: "" )"	295:1:9635:9658	15572	2	True				
ANR	15872	CallExpression	"ask ( ""File to patch: "" )"		15572	0					
ANR	15873	Callee	ask		15572	0					
ANR	15874	Identifier	ask		15572	0					
ANR	15875	ArgumentList	"""File to patch: """		15572	1					
ANR	15876	Argument	"""File to patch: """		15572	0					
ANR	15877	PrimaryExpression	"""File to patch: """		15572	0					
ANR	15878	ExpressionStatement	t = buf + strlen ( buf )	296:1:9661:9683	15572	3	True				
ANR	15879	AssignmentExpression	t = buf + strlen ( buf )		15572	0		=			
ANR	15880	Identifier	t		15572	0					
ANR	15881	AdditiveExpression	buf + strlen ( buf )		15572	1		+			
ANR	15882	Identifier	buf		15572	0					
ANR	15883	CallExpression	strlen ( buf )		15572	1					
ANR	15884	Callee	strlen		15572	0					
ANR	15885	Identifier	strlen		15572	0					
ANR	15886	ArgumentList	buf		15572	1					
ANR	15887	Argument	buf		15572	0					
ANR	15888	Identifier	buf		15572	0					
ANR	15889	IfStatement	if ( t > buf + 1 && * ( t - 1 ) == '\\n' )		15572	4					
ANR	15890	Condition	t > buf + 1 && * ( t - 1 ) == '\\n'	297:5:9690:9720	15572	0	True				
ANR	15891	AndExpression	t > buf + 1 && * ( t - 1 ) == '\\n'		15572	0		&&			
ANR	15892	RelationalExpression	t > buf + 1		15572	0		>			
ANR	15893	Identifier	t		15572	0					
ANR	15894	AdditiveExpression	buf + 1		15572	1		+			
ANR	15895	Identifier	buf		15572	0					
ANR	15896	PrimaryExpression	1		15572	1					
ANR	15897	EqualityExpression	* ( t - 1 ) == '\\n'		15572	1		==			
ANR	15898	UnaryOperationExpression	* ( t - 1 )		15572	0					
ANR	15899	UnaryOperator	*		15572	0					
ANR	15900	AdditiveExpression	t - 1		15572	1		-			
ANR	15901	Identifier	t		15572	0					
ANR	15902	PrimaryExpression	1		15572	1					
ANR	15903	PrimaryExpression	'\\n'		15572	1					
ANR	15904	CompoundStatement		68:3:2048:2048	15572	1					
ANR	15905	ExpressionStatement	"inname = xmemdup0 ( buf , t - buf - 1 )"	299:5:9733:9769	15572	0	True				
ANR	15906	AssignmentExpression	"inname = xmemdup0 ( buf , t - buf - 1 )"		15572	0		=			
ANR	15907	Identifier	inname		15572	0					
ANR	15908	CallExpression	"xmemdup0 ( buf , t - buf - 1 )"		15572	1					
ANR	15909	Callee	xmemdup0		15572	0					
ANR	15910	Identifier	xmemdup0		15572	0					
ANR	15911	ArgumentList	buf		15572	1					
ANR	15912	Argument	buf		15572	0					
ANR	15913	Identifier	buf		15572	0					
ANR	15914	Argument	t - buf - 1		15572	1					
ANR	15915	AdditiveExpression	t - buf - 1		15572	0		-			
ANR	15916	Identifier	t		15572	0					
ANR	15917	AdditiveExpression	buf - 1		15572	1		-			
ANR	15918	Identifier	buf		15572	0					
ANR	15919	PrimaryExpression	1		15572	1					
ANR	15920	ExpressionStatement	"inerrno = stat_file ( inname , & instat )"	300:5:9776:9813	15572	1	True				
ANR	15921	AssignmentExpression	"inerrno = stat_file ( inname , & instat )"		15572	0		=			
ANR	15922	Identifier	inerrno		15572	0					
ANR	15923	CallExpression	"stat_file ( inname , & instat )"		15572	1					
ANR	15924	Callee	stat_file		15572	0					
ANR	15925	Identifier	stat_file		15572	0					
ANR	15926	ArgumentList	inname		15572	1					
ANR	15927	Argument	inname		15572	0					
ANR	15928	Identifier	inname		15572	0					
ANR	15929	Argument	& instat		15572	1					
ANR	15930	UnaryOperationExpression	& instat		15572	0					
ANR	15931	UnaryOperator	&		15572	0					
ANR	15932	Identifier	instat		15572	1					
ANR	15933	IfStatement	if ( inerrno )		15572	2					
ANR	15934	Condition	inerrno	301:9:9824:9830	15572	0	True				
ANR	15935	Identifier	inerrno		15572	0					
ANR	15936	CompoundStatement		72:7:2162:2162	15572	1					
ANR	15937	ExpressionStatement	perror ( inname )	303:2:9844:9859	15572	0	True				
ANR	15938	CallExpression	perror ( inname )		15572	0					
ANR	15939	Callee	perror		15572	0					
ANR	15940	Identifier	perror		15572	0					
ANR	15941	ArgumentList	inname		15572	1					
ANR	15942	Argument	inname		15572	0					
ANR	15943	Identifier	inname		15572	0					
ANR	15944	ExpressionStatement	fflush ( stderr )	304:2:9863:9878	15572	1	True				
ANR	15945	CallExpression	fflush ( stderr )		15572	0					
ANR	15946	Callee	fflush		15572	0					
ANR	15947	Identifier	fflush		15572	0					
ANR	15948	ArgumentList	stderr		15572	1					
ANR	15949	Argument	stderr		15572	0					
ANR	15950	Identifier	stderr		15572	0					
ANR	15951	ExpressionStatement	free ( inname )	305:2:9882:9895	15572	2	True				
ANR	15952	CallExpression	free ( inname )		15572	0					
ANR	15953	Callee	free		15572	0					
ANR	15954	Identifier	free		15572	0					
ANR	15955	ArgumentList	inname		15572	1					
ANR	15956	Argument	inname		15572	0					
ANR	15957	Identifier	inname		15572	0					
ANR	15958	ExpressionStatement	inname = 0	306:2:9899:9909	15572	3	True				
ANR	15959	AssignmentExpression	inname = 0		15572	0		=			
ANR	15960	Identifier	inname		15572	0					
ANR	15961	PrimaryExpression	0		15572	1					
ANR	15962	ElseStatement	else		15572	0					
ANR	15963	ExpressionStatement	invc = - 1	309:7:9937:9946	15572	0	True				
ANR	15964	AssignmentExpression	invc = - 1		15572	0		=			
ANR	15965	Identifier	invc		15572	0					
ANR	15966	UnaryOperationExpression	- 1		15572	1					
ANR	15967	UnaryOperator	-		15572	0					
ANR	15968	PrimaryExpression	1		15572	1					
ANR	15969	IfStatement	if ( ! inname )		15572	5					
ANR	15970	Condition	! inname	311:5:9958:9964	15572	0	True				
ANR	15971	UnaryOperationExpression	! inname		15572	0					
ANR	15972	UnaryOperator	!		15572	0					
ANR	15973	Identifier	inname		15572	1					
ANR	15974	CompoundStatement		81:14:2289:2289	15572	1					
ANR	15975	ExpressionStatement	"ask ( ""Skip this patch? [y] "" )"	312:5:9974:10003	15572	0	True				
ANR	15976	CallExpression	"ask ( ""Skip this patch? [y] "" )"		15572	0					
ANR	15977	Callee	ask		15572	0					
ANR	15978	Identifier	ask		15572	0					
ANR	15979	ArgumentList	"""Skip this patch? [y] """		15572	1					
ANR	15980	Argument	"""Skip this patch? [y] """		15572	0					
ANR	15981	PrimaryExpression	"""Skip this patch? [y] """		15572	0					
ANR	15982	IfStatement	if ( * buf != 'n' )		15572	1					
ANR	15983	Condition	* buf != 'n'	313:9:10014:10024	15572	0	True				
ANR	15984	EqualityExpression	* buf != 'n'		15572	0		!=			
ANR	15985	UnaryOperationExpression	* buf		15572	0					
ANR	15986	UnaryOperator	*		15572	0					
ANR	15987	Identifier	buf		15572	1					
ANR	15988	PrimaryExpression	'n'		15572	1					
ANR	15989	CompoundStatement		83:22:2349:2349	15572	1					
ANR	15990	IfStatement	if ( verbosity != SILENT )		15572	0					
ANR	15991	Condition	verbosity != SILENT	314:6:10035:10053	15572	0	True				
ANR	15992	EqualityExpression	verbosity != SILENT		15572	0		!=			
ANR	15993	Identifier	verbosity		15572	0					
ANR	15994	Identifier	SILENT		15572	1					
ANR	15995	ExpressionStatement	"say ( ""Skipping patch.\\n"" )"	315:6:10062:10087	15572	1	True				
ANR	15996	CallExpression	"say ( ""Skipping patch.\\n"" )"		15572	0					
ANR	15997	Callee	say		15572	0					
ANR	15998	Identifier	say		15572	0					
ANR	15999	ArgumentList	"""Skipping patch.\\n"""		15572	1					
ANR	16000	Argument	"""Skipping patch.\\n"""		15572	0					
ANR	16001	PrimaryExpression	"""Skipping patch.\\n"""		15572	0					
ANR	16002	ExpressionStatement	skip_rest_of_patch = true	316:2:10091:10116	15572	1	True				
ANR	16003	AssignmentExpression	skip_rest_of_patch = true		15572	0		=			
ANR	16004	Identifier	skip_rest_of_patch		15572	0					
ANR	16005	Identifier	true		15572	1					
ANR	16006	ReturnStatement	return true ;	317:2:10120:10131	15572	2	True				
ANR	16007	Identifier	true		15572	0					
ANR	16008	ReturnStatement	return true ;	321:4:10153:10164	15572	10	True				
ANR	16009	Identifier	true		15572	0					
ANR	16010	ReturnType	bool		15572	1					
ANR	16011	Identifier	there_is_another_patch		15572	2					
ANR	16012	ParameterList	"bool need_header , mode_t * file_type"		15572	3					
ANR	16013	Parameter	bool need_header	230:24:7640:7655	15572	0	True				
ANR	16014	ParameterType	bool		15572	0					
ANR	16015	Identifier	need_header		15572	1					
ANR	16016	Parameter	mode_t * file_type	230:42:7658:7674	15572	1	True				
ANR	16017	ParameterType	mode_t *		15572	0					
ANR	16018	Identifier	file_type		15572	1					
ANR	16019	CFGEntryNode	ENTRY		15572		True				
ANR	16020	CFGExitNode	EXIT		15572		True				
ANR	16021	Symbol	p_input_line		15572						
ANR	16022	Symbol	UNI_DIFF		15572						
ANR	16023	Symbol	p_sline		15572						
ANR	16024	Symbol	no_strip_trailing_cr		15572						
ANR	16025	Symbol	p_indent		15572						
ANR	16026	Symbol	p_base		15572						
ANR	16027	Symbol	inerrno		15572						
ANR	16028	Symbol	intuit_diff_type		15572						
ANR	16029	Symbol	NO_DIFF		15572						
ANR	16030	Symbol	need_header		15572						
ANR	16031	Symbol	p_strip_trailing_cr		15572						
ANR	16032	Symbol	p_filesize		15572						
ANR	16033	Symbol	format_linenum		15572						
ANR	16034	Symbol	strlen		15572						
ANR	16035	Symbol	NEW_CONTEXT_DIFF		15572						
ANR	16036	Symbol	file_type		15572						
ANR	16037	Symbol	& instat		15572						
ANR	16038	Symbol	ED_DIFF		15572						
ANR	16039	Symbol	CONTEXT_DIFF		15572						
ANR	16040	Symbol	stat_file		15572						
ANR	16041	Symbol	VERBOSE		15572						
ANR	16042	Symbol	GIT_BINARY_DIFF		15572						
ANR	16043	Symbol	inname		15572						
ANR	16044	Symbol	SILENT		15572						
ANR	16045	Symbol	SEEK_SET		15572						
ANR	16046	Symbol	* buf		15572						
ANR	16047	Symbol	NORMAL_DIFF		15572						
ANR	16048	Symbol	invc		15572						
ANR	16049	Symbol	diff_type		15572						
ANR	16050	Symbol	strippath		15572						
ANR	16051	Symbol	false		15572						
ANR	16052	Symbol	batch		15572						
ANR	16053	Symbol	* ( t - 1 )		15572						
ANR	16054	Symbol	stderr		15572						
ANR	16055	Symbol	p_start		15572						
ANR	16056	Symbol	buf		15572						
ANR	16057	Symbol	xmemdup0		15572						
ANR	16058	Symbol	t		15572						
ANR	16059	Symbol	numbuf		15572						
ANR	16060	Symbol	skip_rest_of_patch		15572						
ANR	16061	Symbol	true		15572						
ANR	16062	Symbol	force		15572						
ANR	16063	Symbol	pfp		15572						
ANR	16064	Symbol	verbosity		15572						
ANR	16065	Symbol	* t		15572						
ANR	16066	Function	fetchmode	324:0:10169:10778							
ANR	16067	FunctionDef	fetchmode (char const * str)		16066	0					
ANR	16068	CompoundStatement		326:0:10230:10778	16066	0					
ANR	16069	IdentifierDeclStatement	const char * s ;	327:3:10235:10248	16066	0	True				
ANR	16070	IdentifierDecl	* s		16066	0					
ANR	16071	IdentifierDeclType	const char *		16066	0					
ANR	16072	Identifier	s		16066	1					
ANR	16073	IdentifierDeclStatement	mode_t mode ;	328:3:10253:10264	16066	1	True				
ANR	16074	IdentifierDecl	mode		16066	0					
ANR	16075	IdentifierDeclType	mode_t		16066	0					
ANR	16076	Identifier	mode		16066	1					
ANR	16077	WhileStatement	while ( ISSPACE ( ( unsigned char ) * str ) )		16066	2					
ANR	16078	Condition	ISSPACE ( ( unsigned char ) * str )	330:10:10277:10306	16066	0	True				
ANR	16079	CallExpression	ISSPACE ( ( unsigned char ) * str )		16066	0					
ANR	16080	Callee	ISSPACE		16066	0					
ANR	16081	Identifier	ISSPACE		16066	0					
ANR	16082	ArgumentList	( unsigned char ) * str		16066	1					
ANR	16083	Argument	( unsigned char ) * str		16066	0					
ANR	16084	CastExpression	( unsigned char ) * str		16066	0					
ANR	16085	CastTarget	unsigned char		16066	0					
ANR	16086	UnaryOperationExpression	* str		16066	1					
ANR	16087	UnaryOperator	*		16066	0					
ANR	16088	Identifier	str		16066	1					
ANR	16089	ExpressionStatement	str ++	331:5:10314:10319	16066	1	True				
ANR	16090	PostIncDecOperationExpression	str ++		16066	0					
ANR	16091	Identifier	str		16066	0					
ANR	16092	IncDec	++		16066	1					
ANR	16093	ForStatement	"for ( s = str , mode = 0 ; s < str + 6 ; s ++ )"		16066	3					
ANR	16094	ForInit	"s = str , mode = 0 ;"	333:8:10330:10347	16066	0	True				
ANR	16095	Expression	"s = str , mode = 0"		16066	0					
ANR	16096	AssignmentExpression	s = str		16066	0		=			
ANR	16097	Identifier	s		16066	0					
ANR	16098	Identifier	str		16066	1					
ANR	16099	AssignmentExpression	mode = 0		16066	1		=			
ANR	16100	Identifier	mode		16066	0					
ANR	16101	PrimaryExpression	0		16066	1					
ANR	16102	Condition	s < str + 6	333:27:10349:10359	16066	1	True				
ANR	16103	RelationalExpression	s < str + 6		16066	0		<			
ANR	16104	Identifier	s		16066	0					
ANR	16105	AdditiveExpression	str + 6		16066	1		+			
ANR	16106	Identifier	str		16066	0					
ANR	16107	PrimaryExpression	6		16066	1					
ANR	16108	PostIncDecOperationExpression	s ++	333:40:10362:10364	16066	2	True				
ANR	16109	Identifier	s		16066	0					
ANR	16110	IncDec	++		16066	1					
ANR	16111	CompoundStatement		9:5:141:141	16066	3					
ANR	16112	IfStatement	if ( * s >= '0' && * s <= '7' )		16066	0					
ANR	16113	Condition	* s >= '0' && * s <= '7'	335:11:10385:10406	16066	0	True				
ANR	16114	AndExpression	* s >= '0' && * s <= '7'		16066	0		&&			
ANR	16115	RelationalExpression	* s >= '0'		16066	0		>=			
ANR	16116	UnaryOperationExpression	* s		16066	0					
ANR	16117	UnaryOperator	*		16066	0					
ANR	16118	Identifier	s		16066	1					
ANR	16119	PrimaryExpression	'0'		16066	1					
ANR	16120	RelationalExpression	* s <= '7'		16066	1		<=			
ANR	16121	UnaryOperationExpression	* s		16066	0					
ANR	16122	UnaryOperator	*		16066	0					
ANR	16123	Identifier	s		16066	1					
ANR	16124	PrimaryExpression	'7'		16066	1					
ANR	16125	ExpressionStatement	mode = ( mode << 3 ) + ( * s - '0' )	336:1:10410:10441	16066	1	True				
ANR	16126	AssignmentExpression	mode = ( mode << 3 ) + ( * s - '0' )		16066	0		=			
ANR	16127	Identifier	mode		16066	0					
ANR	16128	AdditiveExpression	( mode << 3 ) + ( * s - '0' )		16066	1		+			
ANR	16129	ShiftExpression	mode << 3		16066	0		<<			
ANR	16130	Identifier	mode		16066	0					
ANR	16131	PrimaryExpression	3		16066	1					
ANR	16132	AdditiveExpression	* s - '0'		16066	1		-			
ANR	16133	UnaryOperationExpression	* s		16066	0					
ANR	16134	UnaryOperator	*		16066	0					
ANR	16135	Identifier	s		16066	1					
ANR	16136	PrimaryExpression	'0'		16066	1					
ANR	16137	ElseStatement	else		16066	0					
ANR	16138	CompoundStatement		13:1:225:225	16066	0					
ANR	16139	ExpressionStatement	mode = 0	339:2:10460:10468	16066	0	True				
ANR	16140	AssignmentExpression	mode = 0		16066	0		=			
ANR	16141	Identifier	mode		16066	0					
ANR	16142	PrimaryExpression	0		16066	1					
ANR	16143	BreakStatement	break ;	340:2:10472:10477	16066	1	True				
ANR	16144	IfStatement	if ( * s == '\\r' )		16066	4					
ANR	16145	Condition	* s == '\\r'	343:7:10496:10505	16066	0	True				
ANR	16146	EqualityExpression	* s == '\\r'		16066	0		==			
ANR	16147	UnaryOperationExpression	* s		16066	0					
ANR	16148	UnaryOperator	*		16066	0					
ANR	16149	Identifier	s		16066	1					
ANR	16150	PrimaryExpression	'\\r'		16066	1					
ANR	16151	ExpressionStatement	s ++	344:5:10513:10516	16066	1	True				
ANR	16152	PostIncDecOperationExpression	s ++		16066	0					
ANR	16153	Identifier	s		16066	0					
ANR	16154	IncDec	++		16066	1					
ANR	16155	IfStatement	if ( * s != '\\n' )		16066	5					
ANR	16156	Condition	* s != '\\n'	345:7:10525:10534	16066	0	True				
ANR	16157	EqualityExpression	* s != '\\n'		16066	0		!=			
ANR	16158	UnaryOperationExpression	* s		16066	0					
ANR	16159	UnaryOperator	*		16066	0					
ANR	16160	Identifier	s		16066	1					
ANR	16161	PrimaryExpression	'\\n'		16066	1					
ANR	16162	ExpressionStatement	mode = 0	346:5:10542:10550	16066	1	True				
ANR	16163	AssignmentExpression	mode = 0		16066	0		=			
ANR	16164	Identifier	mode		16066	0					
ANR	16165	PrimaryExpression	0		16066	1					
ANR	16166	ReturnStatement	return mode ;	352:3:10765:10776	16066	6	True				
ANR	16167	Identifier	mode		16066	0					
ANR	16168	ReturnType	static mode_t _GL_ATTRIBUTE_PURE		16066	1					
ANR	16169	Identifier	fetchmode		16066	2					
ANR	16170	ParameterList	char const * str		16066	3					
ANR	16171	Parameter	char const * str	325:11:10213:10227	16066	0	True				
ANR	16172	ParameterType	char const *		16066	0					
ANR	16173	Identifier	str		16066	1					
ANR	16174	CFGEntryNode	ENTRY		16066		True				
ANR	16175	CFGExitNode	EXIT		16066		True				
ANR	16176	Symbol	str		16066						
ANR	16177	Symbol	mode		16066						
ANR	16178	Symbol	s		16066						
ANR	16179	Symbol	* str		16066						
ANR	16180	Symbol	ISSPACE		16066						
ANR	16181	Symbol	* s		16066						
ANR	16182	Function	get_sha1	355:0:10781:10966							
ANR	16183	FunctionDef	"get_sha1 (char * * sha1 , char const * start , char const * end)"		16182	0					
ANR	16184	CompoundStatement		357:0:10851:10966	16182	0					
ANR	16185	IdentifierDeclStatement	unsigned int len = end - start ;	358:2:10855:10885	16182	0	True				
ANR	16186	IdentifierDecl	len = end - start		16182	0					
ANR	16187	IdentifierDeclType	unsigned int		16182	0					
ANR	16188	Identifier	len		16182	1					
ANR	16189	AssignmentExpression	len = end - start		16182	2		=			
ANR	16190	Identifier	len		16182	0					
ANR	16191	AdditiveExpression	end - start		16182	1		-			
ANR	16192	Identifier	end		16182	0					
ANR	16193	Identifier	start		16182	1					
ANR	16194	ExpressionStatement	* sha1 = xmalloc ( len + 1 )	359:2:10889:10914	16182	1	True				
ANR	16195	AssignmentExpression	* sha1 = xmalloc ( len + 1 )		16182	0		=			
ANR	16196	UnaryOperationExpression	* sha1		16182	0					
ANR	16197	UnaryOperator	*		16182	0					
ANR	16198	Identifier	sha1		16182	1					
ANR	16199	CallExpression	xmalloc ( len + 1 )		16182	1					
ANR	16200	Callee	xmalloc		16182	0					
ANR	16201	Identifier	xmalloc		16182	0					
ANR	16202	ArgumentList	len + 1		16182	1					
ANR	16203	Argument	len + 1		16182	0					
ANR	16204	AdditiveExpression	len + 1		16182	0		+			
ANR	16205	Identifier	len		16182	0					
ANR	16206	PrimaryExpression	1		16182	1					
ANR	16207	ExpressionStatement	"memcpy ( * sha1 , start , len )"	360:2:10918:10944	16182	2	True				
ANR	16208	CallExpression	"memcpy ( * sha1 , start , len )"		16182	0					
ANR	16209	Callee	memcpy		16182	0					
ANR	16210	Identifier	memcpy		16182	0					
ANR	16211	ArgumentList	* sha1		16182	1					
ANR	16212	Argument	* sha1		16182	0					
ANR	16213	UnaryOperationExpression	* sha1		16182	0					
ANR	16214	UnaryOperator	*		16182	0					
ANR	16215	Identifier	sha1		16182	1					
ANR	16216	Argument	start		16182	1					
ANR	16217	Identifier	start		16182	0					
ANR	16218	Argument	len		16182	2					
ANR	16219	Identifier	len		16182	0					
ANR	16220	ExpressionStatement	( * sha1 ) [ len ] = 0	361:2:10948:10964	16182	3	True				
ANR	16221	AssignmentExpression	( * sha1 ) [ len ] = 0		16182	0		=			
ANR	16222	ArrayIndexing	( * sha1 ) [ len ]		16182	0					
ANR	16223	UnaryOperationExpression	* sha1		16182	0					
ANR	16224	UnaryOperator	*		16182	0					
ANR	16225	Identifier	sha1		16182	1					
ANR	16226	Identifier	len		16182	1					
ANR	16227	PrimaryExpression	0		16182	1					
ANR	16228	ReturnType	static void		16182	1					
ANR	16229	Identifier	get_sha1		16182	2					
ANR	16230	ParameterList	"char * * sha1 , char const * start , char const * end"		16182	3					
ANR	16231	Parameter	char * * sha1	356:9:10802:10812	16182	0	True				
ANR	16232	ParameterType	char * *		16182	0					
ANR	16233	Identifier	sha1		16182	1					
ANR	16234	Parameter	char const * start	356:22:10815:10831	16182	1	True				
ANR	16235	ParameterType	char const *		16182	0					
ANR	16236	Identifier	start		16182	1					
ANR	16237	Parameter	char const * end	356:41:10834:10848	16182	2	True				
ANR	16238	ParameterType	char const *		16182	0					
ANR	16239	Identifier	end		16182	1					
ANR	16240	CFGEntryNode	ENTRY		16182		True				
ANR	16241	CFGExitNode	EXIT		16182		True				
ANR	16242	Symbol	sha1		16182						
ANR	16243	Symbol	len		16182						
ANR	16244	Symbol	xmalloc		16182						
ANR	16245	Symbol	start		16182						
ANR	16246	Symbol	end		16182						
ANR	16247	Symbol	* * sha1		16182						
ANR	16248	Symbol	* sha1		16182						
ANR	16249	Symbol	* len		16182						
ANR	16250	Function	sha1_says_nonexistent	364:0:10969:11420							
ANR	16251	FunctionDef	sha1_says_nonexistent (char const * sha1)		16250	0					
ANR	16252	CompoundStatement		366:0:11039:11420	16250	0					
ANR	16253	IdentifierDeclStatement	"char const * empty_sha1 = ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"" ;"	367:2:11043:11110	16250	0	True				
ANR	16254	IdentifierDecl	"* empty_sha1 = ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"""		16250	0					
ANR	16255	IdentifierDeclType	char const *		16250	0					
ANR	16256	Identifier	empty_sha1		16250	1					
ANR	16257	AssignmentExpression	"* empty_sha1 = ""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"""		16250	2		=			
ANR	16258	Identifier	empty_sha1		16250	0					
ANR	16259	PrimaryExpression	"""e69de29bb2d1d6434b8b29ae775ad8c2e48c5391"""		16250	1					
ANR	16260	IdentifierDeclStatement	char const * s ;	368:2:11114:11127	16250	1	True				
ANR	16261	IdentifierDecl	* s		16250	0					
ANR	16262	IdentifierDeclType	char const *		16250	0					
ANR	16263	Identifier	s		16250	1					
ANR	16264	ForStatement	for ( s = sha1 ; * s ; s ++ )		16250	2					
ANR	16265	ForInit	s = sha1 ;	371:7:11191:11199	16250	0	True				
ANR	16266	AssignmentExpression	s = sha1		16250	0		=			
ANR	16267	Identifier	s		16250	0					
ANR	16268	Identifier	sha1		16250	1					
ANR	16269	Condition	* s	371:17:11201:11202	16250	1	True				
ANR	16270	UnaryOperationExpression	* s		16250	0					
ANR	16271	UnaryOperator	*		16250	0					
ANR	16272	Identifier	s		16250	1					
ANR	16273	PostIncDecOperationExpression	s ++	371:21:11205:11207	16250	2	True				
ANR	16274	Identifier	s		16250	0					
ANR	16275	IncDec	++		16250	1					
ANR	16276	IfStatement	if ( * s != '0' )		16250	3					
ANR	16277	Condition	* s != '0'	372:8:11218:11226	16250	0	True				
ANR	16278	EqualityExpression	* s != '0'		16250	0		!=			
ANR	16279	UnaryOperationExpression	* s		16250	0					
ANR	16280	UnaryOperator	*		16250	0					
ANR	16281	Identifier	s		16250	1					
ANR	16282	PrimaryExpression	'0'		16250	1					
ANR	16283	BreakStatement	break ;	373:6:11235:11240	16250	1	True				
ANR	16284	IfStatement	if ( ! * s )		16250	3					
ANR	16285	Condition	! * s	374:6:11248:11251	16250	0	True				
ANR	16286	UnaryOperationExpression	! * s		16250	0					
ANR	16287	UnaryOperator	!		16250	0					
ANR	16288	UnaryOperationExpression	* s		16250	1					
ANR	16289	UnaryOperator	*		16250	0					
ANR	16290	Identifier	s		16250	1					
ANR	16291	ReturnStatement	return 2 ;	375:4:11258:11266	16250	1	True				
ANR	16292	PrimaryExpression	2		16250	0					
ANR	16293	ForStatement	"for ( s = sha1 ; * s ; s ++ , empty_sha1 ++ )"		16250	4					
ANR	16294	ForInit	s = sha1 ;	378:7:11332:11340	16250	0	True				
ANR	16295	AssignmentExpression	s = sha1		16250	0		=			
ANR	16296	Identifier	s		16250	0					
ANR	16297	Identifier	sha1		16250	1					
ANR	16298	Condition	* s	378:17:11342:11343	16250	1	True				
ANR	16299	UnaryOperationExpression	* s		16250	0					
ANR	16300	UnaryOperator	*		16250	0					
ANR	16301	Identifier	s		16250	1					
ANR	16302	Expression	"s ++ , empty_sha1 ++"	378:21:11346:11362	16250	2	True				
ANR	16303	PostIncDecOperationExpression	s ++		16250	0					
ANR	16304	Identifier	s		16250	0					
ANR	16305	IncDec	++		16250	1					
ANR	16306	PostIncDecOperationExpression	empty_sha1 ++		16250	1					
ANR	16307	Identifier	empty_sha1		16250	0					
ANR	16308	IncDec	++		16250	1					
ANR	16309	IfStatement	if ( * s != * empty_sha1 )		16250	3					
ANR	16310	Condition	* s != * empty_sha1	379:8:11373:11389	16250	0	True				
ANR	16311	EqualityExpression	* s != * empty_sha1		16250	0		!=			
ANR	16312	UnaryOperationExpression	* s		16250	0					
ANR	16313	UnaryOperator	*		16250	0					
ANR	16314	Identifier	s		16250	1					
ANR	16315	UnaryOperationExpression	* empty_sha1		16250	1					
ANR	16316	UnaryOperator	*		16250	0					
ANR	16317	Identifier	empty_sha1		16250	1					
ANR	16318	BreakStatement	break ;	380:6:11398:11403	16250	1	True				
ANR	16319	ReturnStatement	return ! * s ;	381:2:11407:11418	16250	5	True				
ANR	16320	UnaryOperationExpression	! * s		16250	0					
ANR	16321	UnaryOperator	!		16250	0					
ANR	16322	UnaryOperationExpression	* s		16250	1					
ANR	16323	UnaryOperator	*		16250	0					
ANR	16324	Identifier	s		16250	1					
ANR	16325	ReturnType	static int _GL_ATTRIBUTE_PURE		16250	1					
ANR	16326	Identifier	sha1_says_nonexistent		16250	2					
ANR	16327	ParameterList	char const * sha1		16250	3					
ANR	16328	Parameter	char const * sha1	365:22:11021:11036	16250	0	True				
ANR	16329	ParameterType	char const *		16250	0					
ANR	16330	Identifier	sha1		16250	1					
ANR	16331	CFGEntryNode	ENTRY		16250		True				
ANR	16332	CFGExitNode	EXIT		16250		True				
ANR	16333	Symbol	sha1		16250						
ANR	16334	Symbol	s		16250						
ANR	16335	Symbol	* empty_sha1		16250						
ANR	16336	Symbol	empty_sha1		16250						
ANR	16337	Symbol	* s		16250						
ANR	16338	Function	skip_hex_digits	384:20:11443:11644							
ANR	16339	FunctionDef	skip_hex_digits (char const * str)		16338	0					
ANR	16340	CompoundStatement		386:0:11496:11644	16338	0					
ANR	16341	IdentifierDeclStatement	char const * s ;	387:2:11500:11513	16338	0	True				
ANR	16342	IdentifierDecl	* s		16338	0					
ANR	16343	IdentifierDeclType	char const *		16338	0					
ANR	16344	Identifier	s		16338	1					
ANR	16345	ForStatement	for ( s = str ; ( * s >= '0' && * s <= '9' ) || ( * s >= 'a' && * s <= 'f' ) ; s ++ )		16338	1					
ANR	16346	ForInit	s = str ;	389:7:11523:11530	16338	0	True				
ANR	16347	AssignmentExpression	s = str		16338	0		=			
ANR	16348	Identifier	s		16338	0					
ANR	16349	Identifier	str		16338	1					
ANR	16350	Condition	( * s >= '0' && * s <= '9' ) || ( * s >= 'a' && * s <= 'f' )	389:16:11532:11583	16338	1	True				
ANR	16351	OrExpression	( * s >= '0' && * s <= '9' ) || ( * s >= 'a' && * s <= 'f' )		16338	0		||			
ANR	16352	AndExpression	* s >= '0' && * s <= '9'		16338	0		&&			
ANR	16353	RelationalExpression	* s >= '0'		16338	0		>=			
ANR	16354	UnaryOperationExpression	* s		16338	0					
ANR	16355	UnaryOperator	*		16338	0					
ANR	16356	Identifier	s		16338	1					
ANR	16357	PrimaryExpression	'0'		16338	1					
ANR	16358	RelationalExpression	* s <= '9'		16338	1		<=			
ANR	16359	UnaryOperationExpression	* s		16338	0					
ANR	16360	UnaryOperator	*		16338	0					
ANR	16361	Identifier	s		16338	1					
ANR	16362	PrimaryExpression	'9'		16338	1					
ANR	16363	AndExpression	* s >= 'a' && * s <= 'f'		16338	1		&&			
ANR	16364	RelationalExpression	* s >= 'a'		16338	0		>=			
ANR	16365	UnaryOperationExpression	* s		16338	0					
ANR	16366	UnaryOperator	*		16338	0					
ANR	16367	Identifier	s		16338	1					
ANR	16368	PrimaryExpression	'a'		16338	1					
ANR	16369	RelationalExpression	* s <= 'f'		16338	1		<=			
ANR	16370	UnaryOperationExpression	* s		16338	0					
ANR	16371	UnaryOperator	*		16338	0					
ANR	16372	Identifier	s		16338	1					
ANR	16373	PrimaryExpression	'f'		16338	1					
ANR	16374	PostIncDecOperationExpression	s ++	389:70:11586:11588	16338	2	True				
ANR	16375	Identifier	s		16338	0					
ANR	16376	IncDec	++		16338	1					
ANR	16377	ExpressionStatement		390:21:11612:11612	16338	3	True				
ANR	16378	ReturnStatement	return s == str ? NULL : s ;	391:2:11616:11642	16338	2	True				
ANR	16379	ConditionalExpression	s == str ? NULL : s		16338	0					
ANR	16380	Condition	s == str		16338	0					
ANR	16381	EqualityExpression	s == str		16338	0		==			
ANR	16382	Identifier	s		16338	0					
ANR	16383	Identifier	str		16338	1					
ANR	16384	Identifier	NULL		16338	1					
ANR	16385	Identifier	s		16338	2					
ANR	16386	ReturnType	_GL_ATTRIBUTE_PURE		16338	1					
ANR	16387	Identifier	skip_hex_digits		16338	2					
ANR	16388	ParameterList	char const * str		16338	3					
ANR	16389	Parameter	char const * str	385:17:11479:11493	16338	0	True				
ANR	16390	ParameterType	char const *		16338	0					
ANR	16391	Identifier	str		16338	1					
ANR	16392	CFGEntryNode	ENTRY		16338		True				
ANR	16393	CFGExitNode	EXIT		16338		True				
ANR	16394	Symbol	str		16338						
ANR	16395	Symbol	s		16338						
ANR	16396	Symbol	NULL		16338						
ANR	16397	Symbol	* s		16338						
ANR	16398	Function	name_is_valid	394:0:11647:12248							
ANR	16399	FunctionDef	name_is_valid (char const * name)		16398	0					
ANR	16400	CompoundStatement		396:0:11692:12248	16398	0					
ANR	16401	IdentifierDeclStatement	int i ;	397:2:11696:11701	16398	0	True				
ANR	16402	IdentifierDecl	i		16398	0					
ANR	16403	IdentifierDeclType	int		16398	0					
ANR	16404	Identifier	i		16398	1					
ANR	16405	IdentifierDeclStatement	bool is_valid = true ;	398:2:11705:11725	16398	1	True				
ANR	16406	IdentifierDecl	is_valid = true		16398	0					
ANR	16407	IdentifierDeclType	bool		16398	0					
ANR	16408	Identifier	is_valid		16398	1					
ANR	16409	AssignmentExpression	is_valid = true		16398	2		=			
ANR	16410	Identifier	true		16398	0					
ANR	16411	Identifier	true		16398	1					
ANR	16412	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( invalid_names ) ; i ++ )		16398	2					
ANR	16413	ForInit	i = 0 ;	400:7:11735:11740	16398	0	True				
ANR	16414	AssignmentExpression	i = 0		16398	0		=			
ANR	16415	Identifier	i		16398	0					
ANR	16416	PrimaryExpression	0		16398	1					
ANR	16417	Condition	i < ARRAY_SIZE ( invalid_names )	400:14:11742:11771	16398	1	True				
ANR	16418	RelationalExpression	i < ARRAY_SIZE ( invalid_names )		16398	0		<			
ANR	16419	Identifier	i		16398	0					
ANR	16420	CallExpression	ARRAY_SIZE ( invalid_names )		16398	1					
ANR	16421	Callee	ARRAY_SIZE		16398	0					
ANR	16422	Identifier	ARRAY_SIZE		16398	0					
ANR	16423	ArgumentList	invalid_names		16398	1					
ANR	16424	Argument	invalid_names		16398	0					
ANR	16425	Identifier	invalid_names		16398	0					
ANR	16426	PostIncDecOperationExpression	i ++	400:46:11774:11776	16398	2	True				
ANR	16427	Identifier	i		16398	0					
ANR	16428	IncDec	++		16398	1					
ANR	16429	CompoundStatement		6:4:90:90	16398	3					
ANR	16430	IfStatement	if ( ! invalid_names [ i ] )		16398	0					
ANR	16431	Condition	! invalid_names [ i ]	402:10:11795:11812	16398	0	True				
ANR	16432	UnaryOperationExpression	! invalid_names [ i ]		16398	0					
ANR	16433	UnaryOperator	!		16398	0					
ANR	16434	ArrayIndexing	invalid_names [ i ]		16398	1					
ANR	16435	Identifier	invalid_names		16398	0					
ANR	16436	Identifier	i		16398	1					
ANR	16437	BreakStatement	break ;	403:1:11816:11821	16398	1	True				
ANR	16438	IfStatement	"if ( ! strcmp ( invalid_names [ i ] , name ) )"		16398	1					
ANR	16439	Condition	"! strcmp ( invalid_names [ i ] , name )"	404:10:11833:11865	16398	0	True				
ANR	16440	UnaryOperationExpression	"! strcmp ( invalid_names [ i ] , name )"		16398	0					
ANR	16441	UnaryOperator	!		16398	0					
ANR	16442	CallExpression	"strcmp ( invalid_names [ i ] , name )"		16398	1					
ANR	16443	Callee	strcmp		16398	0					
ANR	16444	Identifier	strcmp		16398	0					
ANR	16445	ArgumentList	invalid_names [ i ]		16398	1					
ANR	16446	Argument	invalid_names [ i ]		16398	0					
ANR	16447	ArrayIndexing	invalid_names [ i ]		16398	0					
ANR	16448	Identifier	invalid_names		16398	0					
ANR	16449	Identifier	i		16398	1					
ANR	16450	Argument	name		16398	1					
ANR	16451	Identifier	name		16398	0					
ANR	16452	ReturnStatement	return false ;	405:1:11869:11881	16398	1	True				
ANR	16453	Identifier	false		16398	0					
ANR	16454	ExpressionStatement	is_valid = filename_is_safe ( name )	408:2:11892:11926	16398	3	True				
ANR	16455	AssignmentExpression	is_valid = filename_is_safe ( name )		16398	0		=			
ANR	16456	Identifier	is_valid		16398	0					
ANR	16457	CallExpression	filename_is_safe ( name )		16398	1					
ANR	16458	Callee	filename_is_safe		16398	0					
ANR	16459	Identifier	filename_is_safe		16398	0					
ANR	16460	ArgumentList	name		16398	1					
ANR	16461	Argument	name		16398	0					
ANR	16462	Identifier	name		16398	0					
ANR	16463	IfStatement	if ( ! is_valid && cwd_is_root ( name ) )		16398	4					
ANR	16464	Condition	! is_valid && cwd_is_root ( name )	411:6:11997:12028	16398	0	True				
ANR	16465	AndExpression	! is_valid && cwd_is_root ( name )		16398	0		&&			
ANR	16466	UnaryOperationExpression	! is_valid		16398	0					
ANR	16467	UnaryOperator	!		16398	0					
ANR	16468	Identifier	is_valid		16398	1					
ANR	16469	CallExpression	cwd_is_root ( name )		16398	1					
ANR	16470	Callee	cwd_is_root		16398	0					
ANR	16471	Identifier	cwd_is_root		16398	0					
ANR	16472	ArgumentList	name		16398	1					
ANR	16473	Argument	name		16398	0					
ANR	16474	Identifier	name		16398	0					
ANR	16475	ExpressionStatement	is_valid = true	412:4:12035:12050	16398	1	True				
ANR	16476	AssignmentExpression	is_valid = true		16398	0		=			
ANR	16477	Identifier	is_valid		16398	0					
ANR	16478	Identifier	true		16398	1					
ANR	16479	IfStatement	if ( ! is_valid )		16398	5					
ANR	16480	Condition	! is_valid	414:6:12059:12068	16398	0	True				
ANR	16481	UnaryOperationExpression	! is_valid		16398	0					
ANR	16482	UnaryOperator	!		16398	0					
ANR	16483	Identifier	is_valid		16398	1					
ANR	16484	CompoundStatement		20:4:382:382	16398	1					
ANR	16485	ExpressionStatement	"say ( ""Ignoring potentially dangerous file name %s\\n"" , quotearg ( name ) )"	416:6:12083:12153	16398	0	True				
ANR	16486	CallExpression	"say ( ""Ignoring potentially dangerous file name %s\\n"" , quotearg ( name ) )"		16398	0					
ANR	16487	Callee	say		16398	0					
ANR	16488	Identifier	say		16398	0					
ANR	16489	ArgumentList	"""Ignoring potentially dangerous file name %s\\n"""		16398	1					
ANR	16490	Argument	"""Ignoring potentially dangerous file name %s\\n"""		16398	0					
ANR	16491	PrimaryExpression	"""Ignoring potentially dangerous file name %s\\n"""		16398	0					
ANR	16492	Argument	quotearg ( name )		16398	1					
ANR	16493	CallExpression	quotearg ( name )		16398	0					
ANR	16494	Callee	quotearg		16398	0					
ANR	16495	Identifier	quotearg		16398	0					
ANR	16496	ArgumentList	name		16398	1					
ANR	16497	Argument	name		16398	0					
ANR	16498	Identifier	name		16398	0					
ANR	16499	IfStatement	if ( i < ARRAY_SIZE ( invalid_names ) )		16398	1					
ANR	16500	Condition	i < ARRAY_SIZE ( invalid_names )	417:10:12165:12194	16398	0	True				
ANR	16501	RelationalExpression	i < ARRAY_SIZE ( invalid_names )		16398	0		<			
ANR	16502	Identifier	i		16398	0					
ANR	16503	CallExpression	ARRAY_SIZE ( invalid_names )		16398	1					
ANR	16504	Callee	ARRAY_SIZE		16398	0					
ANR	16505	Identifier	ARRAY_SIZE		16398	0					
ANR	16506	ArgumentList	invalid_names		16398	1					
ANR	16507	Argument	invalid_names		16398	0					
ANR	16508	Identifier	invalid_names		16398	0					
ANR	16509	ExpressionStatement	invalid_names [ i ] = name	418:1:12198:12221	16398	1	True				
ANR	16510	AssignmentExpression	invalid_names [ i ] = name		16398	0		=			
ANR	16511	ArrayIndexing	invalid_names [ i ]		16398	0					
ANR	16512	Identifier	invalid_names		16398	0					
ANR	16513	Identifier	i		16398	1					
ANR	16514	Identifier	name		16398	1					
ANR	16515	ReturnStatement	return is_valid ;	420:2:12231:12246	16398	6	True				
ANR	16516	Identifier	is_valid		16398	0					
ANR	16517	ReturnType	static bool		16398	1					
ANR	16518	Identifier	name_is_valid		16398	2					
ANR	16519	ParameterList	char const * name		16398	3					
ANR	16520	Parameter	char const * name	395:15:11674:11689	16398	0	True				
ANR	16521	ParameterType	char const *		16398	0					
ANR	16522	Identifier	name		16398	1					
ANR	16523	CFGEntryNode	ENTRY		16398		True				
ANR	16524	CFGExitNode	EXIT		16398		True				
ANR	16525	Symbol	ARRAY_SIZE		16398						
ANR	16526	Symbol	strcmp		16398						
ANR	16527	Symbol	* invalid_names		16398						
ANR	16528	Symbol	quotearg		16398						
ANR	16529	Symbol	filename_is_safe		16398						
ANR	16530	Symbol	false		16398						
ANR	16531	Symbol	i		16398						
ANR	16532	Symbol	invalid_names		16398						
ANR	16533	Symbol	* i		16398						
ANR	16534	Symbol	cwd_is_root		16398						
ANR	16535	Symbol	is_valid		16398						
ANR	16536	Symbol	name		16398						
ANR	16537	Symbol	true		16398						
ANR	16538	Function	intuit_diff_type	425:0:12330:28426							
ANR	16539	FunctionDef	"intuit_diff_type (bool need_header , mode_t * p_file_type)"		16538	0					
ANR	16540	CompoundStatement		427:0:12404:28426	16538	0					
ANR	16541	IdentifierDeclStatement	file_offset this_line = 0 ;	428:4:12410:12435	16538	0	True				
ANR	16542	IdentifierDecl	this_line = 0		16538	0					
ANR	16543	IdentifierDeclType	file_offset		16538	0					
ANR	16544	Identifier	this_line		16538	1					
ANR	16545	AssignmentExpression	this_line = 0		16538	2		=			
ANR	16546	Identifier	this_line		16538	0					
ANR	16547	PrimaryExpression	0		16538	1					
ANR	16548	IdentifierDeclStatement	file_offset first_command_line = - 1 ;	429:4:12441:12476	16538	1	True				
ANR	16549	IdentifierDecl	first_command_line = - 1		16538	0					
ANR	16550	IdentifierDeclType	file_offset		16538	0					
ANR	16551	Identifier	first_command_line		16538	1					
ANR	16552	AssignmentExpression	first_command_line = - 1		16538	2		=			
ANR	16553	Identifier	first_command_line		16538	0					
ANR	16554	UnaryOperationExpression	- 1		16538	1					
ANR	16555	UnaryOperator	-		16538	0					
ANR	16556	PrimaryExpression	1		16538	1					
ANR	16557	IdentifierDeclStatement	char first_ed_command_letter = 0 ;	430:4:12482:12514	16538	2	True				
ANR	16558	IdentifierDecl	first_ed_command_letter = 0		16538	0					
ANR	16559	IdentifierDeclType	char		16538	0					
ANR	16560	Identifier	first_ed_command_letter		16538	1					
ANR	16561	AssignmentExpression	first_ed_command_letter = 0		16538	2		=			
ANR	16562	Identifier	first_ed_command_letter		16538	0					
ANR	16563	PrimaryExpression	0		16538	1					
ANR	16564	IdentifierDeclStatement	lin fcl_line = 0 ;	431:4:12520:12536	16538	3	True				
ANR	16565	IdentifierDecl	fcl_line = 0		16538	0					
ANR	16566	IdentifierDeclType	lin		16538	0					
ANR	16567	Identifier	fcl_line		16538	1					
ANR	16568	AssignmentExpression	fcl_line = 0		16538	2		=			
ANR	16569	Identifier	fcl_line		16538	0					
ANR	16570	PrimaryExpression	0		16538	1					
ANR	16571	IdentifierDeclStatement	bool this_is_a_command = false ;	432:4:12566:12596	16538	4	True				
ANR	16572	IdentifierDecl	this_is_a_command = false		16538	0					
ANR	16573	IdentifierDeclType	bool		16538	0					
ANR	16574	Identifier	this_is_a_command		16538	1					
ANR	16575	AssignmentExpression	this_is_a_command = false		16538	2		=			
ANR	16576	Identifier	false		16538	0					
ANR	16577	Identifier	false		16538	1					
ANR	16578	IdentifierDeclStatement	bool stars_this_line = false ;	433:4:12602:12630	16538	5	True				
ANR	16579	IdentifierDecl	stars_this_line = false		16538	0					
ANR	16580	IdentifierDeclType	bool		16538	0					
ANR	16581	Identifier	stars_this_line		16538	1					
ANR	16582	AssignmentExpression	stars_this_line = false		16538	2		=			
ANR	16583	Identifier	false		16538	0					
ANR	16584	Identifier	false		16538	1					
ANR	16585	IdentifierDeclStatement	bool extended_headers = false ;	434:4:12636:12665	16538	6	True				
ANR	16586	IdentifierDecl	extended_headers = false		16538	0					
ANR	16587	IdentifierDeclType	bool		16538	0					
ANR	16588	Identifier	extended_headers		16538	1					
ANR	16589	AssignmentExpression	extended_headers = false		16538	2		=			
ANR	16590	Identifier	false		16538	0					
ANR	16591	Identifier	false		16538	1					
ANR	16592	IdentifierDeclStatement	enum nametype i ;	435:4:12671:12686	16538	7	True				
ANR	16593	IdentifierDecl	i		16538	0					
ANR	16594	IdentifierDeclType	enum nametype		16538	0					
ANR	16595	Identifier	i		16538	1					
ANR	16596	IdentifierDeclStatement	struct stat st [ 3 ] ;	436:4:12692:12709	16538	8	True				
ANR	16597	IdentifierDecl	st [ 3 ]		16538	0					
ANR	16598	IdentifierDeclType	struct stat [ 3 ]		16538	0					
ANR	16599	Identifier	st		16538	1					
ANR	16600	PrimaryExpression	3		16538	2					
ANR	16601	IdentifierDeclStatement	int stat_errno [ 3 ] ;	437:4:12715:12732	16538	9	True				
ANR	16602	IdentifierDecl	stat_errno [ 3 ]		16538	0					
ANR	16603	IdentifierDeclType	int [ 3 ]		16538	0					
ANR	16604	Identifier	stat_errno		16538	1					
ANR	16605	PrimaryExpression	3		16538	2					
ANR	16606	IdentifierDeclStatement	int version_controlled [ 3 ] ;	438:4:12738:12763	16538	10	True				
ANR	16607	IdentifierDecl	version_controlled [ 3 ]		16538	0					
ANR	16608	IdentifierDeclType	int [ 3 ]		16538	0					
ANR	16609	Identifier	version_controlled		16538	1					
ANR	16610	PrimaryExpression	3		16538	2					
ANR	16611	IdentifierDeclStatement	enum diff retval ;	439:4:12769:12785	16538	11	True				
ANR	16612	IdentifierDecl	retval		16538	0					
ANR	16613	IdentifierDeclType	enum diff		16538	0					
ANR	16614	Identifier	retval		16538	1					
ANR	16615	IdentifierDeclStatement	mode_t file_type ;	440:4:12791:12807	16538	12	True				
ANR	16616	IdentifierDecl	file_type		16538	0					
ANR	16617	IdentifierDeclType	mode_t		16538	0					
ANR	16618	Identifier	file_type		16538	1					
ANR	16619	IdentifierDeclStatement	size_t indent = 0 ;	441:4:12813:12830	16538	13	True				
ANR	16620	IdentifierDecl	indent = 0		16538	0					
ANR	16621	IdentifierDeclType	size_t		16538	0					
ANR	16622	Identifier	indent		16538	1					
ANR	16623	AssignmentExpression	indent = 0		16538	2		=			
ANR	16624	Identifier	indent		16538	0					
ANR	16625	PrimaryExpression	0		16538	1					
ANR	16626	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		16538	14					
ANR	16627	ForInit	i = OLD ;	443:9:12842:12849	16538	0	True				
ANR	16628	AssignmentExpression	i = OLD		16538	0		=			
ANR	16629	Identifier	i		16538	0					
ANR	16630	Identifier	OLD		16538	1					
ANR	16631	Condition	i <= INDEX	443:19:12852:12861	16538	1	True				
ANR	16632	RelationalExpression	i <= INDEX		16538	0		<=			
ANR	16633	Identifier	i		16538	0					
ANR	16634	Identifier	INDEX		16538	1					
ANR	16635	PostIncDecOperationExpression	i ++	443:32:12865:12867	16538	2	True				
ANR	16636	Identifier	i		16538	0					
ANR	16637	IncDec	++		16538	1					
ANR	16638	IfStatement	if ( p_name [ i ] )		16538	3					
ANR	16639	Condition	p_name [ i ]	444:10:12880:12888	16538	0	True				
ANR	16640	ArrayIndexing	p_name [ i ]		16538	0					
ANR	16641	Identifier	p_name		16538	0					
ANR	16642	Identifier	i		16538	1					
ANR	16643	CompoundStatement		18:21:486:486	16538	1					
ANR	16644	ExpressionStatement	free ( p_name [ i ] )	445:3:12896:12912	16538	0	True				
ANR	16645	CallExpression	free ( p_name [ i ] )		16538	0					
ANR	16646	Callee	free		16538	0					
ANR	16647	Identifier	free		16538	0					
ANR	16648	ArgumentList	p_name [ i ]		16538	1					
ANR	16649	Argument	p_name [ i ]		16538	0					
ANR	16650	ArrayIndexing	p_name [ i ]		16538	0					
ANR	16651	Identifier	p_name		16538	0					
ANR	16652	Identifier	i		16538	1					
ANR	16653	ExpressionStatement	p_name [ i ] = 0	446:3:12917:12930	16538	1	True				
ANR	16654	AssignmentExpression	p_name [ i ] = 0		16538	0		=			
ANR	16655	ArrayIndexing	p_name [ i ]		16538	0					
ANR	16656	Identifier	p_name		16538	0					
ANR	16657	Identifier	i		16538	1					
ANR	16658	PrimaryExpression	0		16538	1					
ANR	16659	ForStatement	for ( i = 0 ; i < ARRAY_SIZE ( invalid_names ) ; i ++ )		16538	15					
ANR	16660	ForInit	i = 0 ;	448:9:12951:12956	16538	0	True				
ANR	16661	AssignmentExpression	i = 0		16538	0		=			
ANR	16662	Identifier	i		16538	0					
ANR	16663	PrimaryExpression	0		16538	1					
ANR	16664	Condition	i < ARRAY_SIZE ( invalid_names )	448:16:12958:12987	16538	1	True				
ANR	16665	RelationalExpression	i < ARRAY_SIZE ( invalid_names )		16538	0		<			
ANR	16666	Identifier	i		16538	0					
ANR	16667	CallExpression	ARRAY_SIZE ( invalid_names )		16538	1					
ANR	16668	Callee	ARRAY_SIZE		16538	0					
ANR	16669	Identifier	ARRAY_SIZE		16538	0					
ANR	16670	ArgumentList	invalid_names		16538	1					
ANR	16671	Argument	invalid_names		16538	0					
ANR	16672	Identifier	invalid_names		16538	0					
ANR	16673	PostIncDecOperationExpression	i ++	448:48:12990:12992	16538	2	True				
ANR	16674	Identifier	i		16538	0					
ANR	16675	IncDec	++		16538	1					
ANR	16676	ExpressionStatement	invalid_names [ i ] = NULL	449:1:12996:13019	16538	3	True				
ANR	16677	AssignmentExpression	invalid_names [ i ] = NULL		16538	0		=			
ANR	16678	ArrayIndexing	invalid_names [ i ]		16538	0					
ANR	16679	Identifier	invalid_names		16538	0					
ANR	16680	Identifier	i		16538	1					
ANR	16681	Identifier	NULL		16538	1					
ANR	16682	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		16538	16					
ANR	16683	ForInit	i = OLD ;	450:9:13030:13037	16538	0	True				
ANR	16684	AssignmentExpression	i = OLD		16538	0		=			
ANR	16685	Identifier	i		16538	0					
ANR	16686	Identifier	OLD		16538	1					
ANR	16687	Condition	i <= NEW	450:18:13039:13046	16538	1	True				
ANR	16688	RelationalExpression	i <= NEW		16538	0		<=			
ANR	16689	Identifier	i		16538	0					
ANR	16690	Identifier	NEW		16538	1					
ANR	16691	PostIncDecOperationExpression	i ++	450:28:13049:13051	16538	2	True				
ANR	16692	Identifier	i		16538	0					
ANR	16693	IncDec	++		16538	1					
ANR	16694	IfStatement	if ( p_timestr [ i ] )		16538	3					
ANR	16695	Condition	p_timestr [ i ]	451:10:13064:13075	16538	0	True				
ANR	16696	ArrayIndexing	p_timestr [ i ]		16538	0					
ANR	16697	Identifier	p_timestr		16538	0					
ANR	16698	Identifier	i		16538	1					
ANR	16699	CompoundStatement		26:1:674:674	16538	1					
ANR	16700	ExpressionStatement	free ( p_timestr [ i ] )	453:3:13084:13102	16538	0	True				
ANR	16701	CallExpression	free ( p_timestr [ i ] )		16538	0					
ANR	16702	Callee	free		16538	0					
ANR	16703	Identifier	free		16538	0					
ANR	16704	ArgumentList	p_timestr [ i ]		16538	1					
ANR	16705	Argument	p_timestr [ i ]		16538	0					
ANR	16706	ArrayIndexing	p_timestr [ i ]		16538	0					
ANR	16707	Identifier	p_timestr		16538	0					
ANR	16708	Identifier	i		16538	1					
ANR	16709	ExpressionStatement	p_timestr [ i ] = 0	454:3:13107:13123	16538	1	True				
ANR	16710	AssignmentExpression	p_timestr [ i ] = 0		16538	0		=			
ANR	16711	ArrayIndexing	p_timestr [ i ]		16538	0					
ANR	16712	Identifier	p_timestr		16538	0					
ANR	16713	Identifier	i		16538	1					
ANR	16714	PrimaryExpression	0		16538	1					
ANR	16715	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		16538	17					
ANR	16716	ForInit	i = OLD ;	456:9:13137:13144	16538	0	True				
ANR	16717	AssignmentExpression	i = OLD		16538	0		=			
ANR	16718	Identifier	i		16538	0					
ANR	16719	Identifier	OLD		16538	1					
ANR	16720	Condition	i <= NEW	456:18:13146:13153	16538	1	True				
ANR	16721	RelationalExpression	i <= NEW		16538	0		<=			
ANR	16722	Identifier	i		16538	0					
ANR	16723	Identifier	NEW		16538	1					
ANR	16724	PostIncDecOperationExpression	i ++	456:28:13156:13158	16538	2	True				
ANR	16725	Identifier	i		16538	0					
ANR	16726	IncDec	++		16538	1					
ANR	16727	IfStatement	if ( p_sha1 [ i ] )		16538	3					
ANR	16728	Condition	p_sha1 [ i ]	457:10:13171:13179	16538	0	True				
ANR	16729	ArrayIndexing	p_sha1 [ i ]		16538	0					
ANR	16730	Identifier	p_sha1		16538	0					
ANR	16731	Identifier	i		16538	1					
ANR	16732	CompoundStatement		32:1:778:778	16538	1					
ANR	16733	ExpressionStatement	free ( p_sha1 [ i ] )	459:3:13188:13204	16538	0	True				
ANR	16734	CallExpression	free ( p_sha1 [ i ] )		16538	0					
ANR	16735	Callee	free		16538	0					
ANR	16736	Identifier	free		16538	0					
ANR	16737	ArgumentList	p_sha1 [ i ]		16538	1					
ANR	16738	Argument	p_sha1 [ i ]		16538	0					
ANR	16739	ArrayIndexing	p_sha1 [ i ]		16538	0					
ANR	16740	Identifier	p_sha1		16538	0					
ANR	16741	Identifier	i		16538	1					
ANR	16742	ExpressionStatement	p_sha1 [ i ] = 0	460:3:13209:13222	16538	1	True				
ANR	16743	AssignmentExpression	p_sha1 [ i ] = 0		16538	0		=			
ANR	16744	ArrayIndexing	p_sha1 [ i ]		16538	0					
ANR	16745	Identifier	p_sha1		16538	0					
ANR	16746	Identifier	i		16538	1					
ANR	16747	PrimaryExpression	0		16538	1					
ANR	16748	ExpressionStatement	p_git_diff = false	462:4:13231:13249	16538	18	True				
ANR	16749	AssignmentExpression	p_git_diff = false		16538	0		=			
ANR	16750	Identifier	p_git_diff		16538	0					
ANR	16751	Identifier	false		16538	1					
ANR	16752	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		16538	19					
ANR	16753	ForInit	i = OLD ;	463:9:13260:13267	16538	0	True				
ANR	16754	AssignmentExpression	i = OLD		16538	0		=			
ANR	16755	Identifier	i		16538	0					
ANR	16756	Identifier	OLD		16538	1					
ANR	16757	Condition	i <= NEW	463:18:13269:13276	16538	1	True				
ANR	16758	RelationalExpression	i <= NEW		16538	0		<=			
ANR	16759	Identifier	i		16538	0					
ANR	16760	Identifier	NEW		16538	1					
ANR	16761	PostIncDecOperationExpression	i ++	463:28:13279:13281	16538	2	True				
ANR	16762	Identifier	i		16538	0					
ANR	16763	IncDec	++		16538	1					
ANR	16764	CompoundStatement		38:6:885:885	16538	3					
ANR	16765	ExpressionStatement	p_mode [ i ] = 0	465:1:13293:13306	16538	0	True				
ANR	16766	AssignmentExpression	p_mode [ i ] = 0		16538	0		=			
ANR	16767	ArrayIndexing	p_mode [ i ]		16538	0					
ANR	16768	Identifier	p_mode		16538	0					
ANR	16769	Identifier	i		16538	1					
ANR	16770	PrimaryExpression	0		16538	1					
ANR	16771	ExpressionStatement	p_copy [ i ] = false	466:1:13309:13326	16538	1	True				
ANR	16772	AssignmentExpression	p_copy [ i ] = false		16538	0		=			
ANR	16773	ArrayIndexing	p_copy [ i ]		16538	0					
ANR	16774	Identifier	p_copy		16538	0					
ANR	16775	Identifier	i		16538	1					
ANR	16776	Identifier	false		16538	1					
ANR	16777	ExpressionStatement	p_rename [ i ] = false	467:1:13329:13348	16538	2	True				
ANR	16778	AssignmentExpression	p_rename [ i ] = false		16538	0		=			
ANR	16779	ArrayIndexing	p_rename [ i ]		16538	0					
ANR	16780	Identifier	p_rename		16538	0					
ANR	16781	Identifier	i		16538	1					
ANR	16782	Identifier	false		16538	1					
ANR	16783	IfStatement	if ( diff_type == ED_DIFF || diff_type == NORMAL_DIFF )		16538	20					
ANR	16784	Condition	diff_type == ED_DIFF || diff_type == NORMAL_DIFF	471:8:13436:13483	16538	0	True				
ANR	16785	OrExpression	diff_type == ED_DIFF || diff_type == NORMAL_DIFF		16538	0		||			
ANR	16786	EqualityExpression	diff_type == ED_DIFF		16538	0		==			
ANR	16787	Identifier	diff_type		16538	0					
ANR	16788	Identifier	ED_DIFF		16538	1					
ANR	16789	EqualityExpression	diff_type == NORMAL_DIFF		16538	1		==			
ANR	16790	Identifier	diff_type		16538	0					
ANR	16791	Identifier	NORMAL_DIFF		16538	1					
ANR	16792	ExpressionStatement	need_header = false	472:6:13492:13511	16538	1	True				
ANR	16793	AssignmentExpression	need_header = false		16538	0		=			
ANR	16794	Identifier	need_header		16538	0					
ANR	16795	Identifier	false		16538	1					
ANR	16796	ExpressionStatement	version_controlled [ OLD ] = - 1	474:4:13518:13546	16538	21	True				
ANR	16797	AssignmentExpression	version_controlled [ OLD ] = - 1		16538	0		=			
ANR	16798	ArrayIndexing	version_controlled [ OLD ]		16538	0					
ANR	16799	Identifier	version_controlled		16538	0					
ANR	16800	Identifier	OLD		16538	1					
ANR	16801	UnaryOperationExpression	- 1		16538	1					
ANR	16802	UnaryOperator	-		16538	0					
ANR	16803	PrimaryExpression	1		16538	1					
ANR	16804	ExpressionStatement	version_controlled [ NEW ] = - 1	475:4:13552:13580	16538	22	True				
ANR	16805	AssignmentExpression	version_controlled [ NEW ] = - 1		16538	0		=			
ANR	16806	ArrayIndexing	version_controlled [ NEW ]		16538	0					
ANR	16807	Identifier	version_controlled		16538	0					
ANR	16808	Identifier	NEW		16538	1					
ANR	16809	UnaryOperationExpression	- 1		16538	1					
ANR	16810	UnaryOperator	-		16538	0					
ANR	16811	PrimaryExpression	1		16538	1					
ANR	16812	ExpressionStatement	version_controlled [ INDEX ] = - 1	476:4:13586:13616	16538	23	True				
ANR	16813	AssignmentExpression	version_controlled [ INDEX ] = - 1		16538	0		=			
ANR	16814	ArrayIndexing	version_controlled [ INDEX ]		16538	0					
ANR	16815	Identifier	version_controlled		16538	0					
ANR	16816	Identifier	INDEX		16538	1					
ANR	16817	UnaryOperationExpression	- 1		16538	1					
ANR	16818	UnaryOperator	-		16538	0					
ANR	16819	PrimaryExpression	1		16538	1					
ANR	16820	ExpressionStatement	p_rfc934_nesting = 0	477:4:13622:13642	16538	24	True				
ANR	16821	AssignmentExpression	p_rfc934_nesting = 0		16538	0		=			
ANR	16822	Identifier	p_rfc934_nesting		16538	0					
ANR	16823	PrimaryExpression	0		16538	1					
ANR	16824	ExpressionStatement	p_timestamp [ OLD ] . tv_sec = p_timestamp [ NEW ] . tv_sec = - 1	478:4:13648:13702	16538	25	True				
ANR	16825	AssignmentExpression	p_timestamp [ OLD ] . tv_sec = p_timestamp [ NEW ] . tv_sec = - 1		16538	0		=			
ANR	16826	MemberAccess	p_timestamp [ OLD ] . tv_sec		16538	0					
ANR	16827	ArrayIndexing	p_timestamp [ OLD ]		16538	0					
ANR	16828	Identifier	p_timestamp		16538	0					
ANR	16829	Identifier	OLD		16538	1					
ANR	16830	Identifier	tv_sec		16538	1					
ANR	16831	AssignmentExpression	p_timestamp [ NEW ] . tv_sec = - 1		16538	1		=			
ANR	16832	MemberAccess	p_timestamp [ NEW ] . tv_sec		16538	0					
ANR	16833	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	16834	Identifier	p_timestamp		16538	0					
ANR	16835	Identifier	NEW		16538	1					
ANR	16836	Identifier	tv_sec		16538	1					
ANR	16837	UnaryOperationExpression	- 1		16538	1					
ANR	16838	UnaryOperator	-		16538	0					
ANR	16839	PrimaryExpression	1		16538	1					
ANR	16840	ExpressionStatement	p_says_nonexistent [ OLD ] = p_says_nonexistent [ NEW ] = 0	479:4:13708:13761	16538	26	True				
ANR	16841	AssignmentExpression	p_says_nonexistent [ OLD ] = p_says_nonexistent [ NEW ] = 0		16538	0		=			
ANR	16842	ArrayIndexing	p_says_nonexistent [ OLD ]		16538	0					
ANR	16843	Identifier	p_says_nonexistent		16538	0					
ANR	16844	Identifier	OLD		16538	1					
ANR	16845	AssignmentExpression	p_says_nonexistent [ NEW ] = 0		16538	1		=			
ANR	16846	ArrayIndexing	p_says_nonexistent [ NEW ]		16538	0					
ANR	16847	Identifier	p_says_nonexistent		16538	0					
ANR	16848	Identifier	NEW		16538	1					
ANR	16849	PrimaryExpression	0		16538	1					
ANR	16850	ExpressionStatement	"Fseek ( pfp , p_base , SEEK_SET )"	480:4:13767:13796	16538	27	True				
ANR	16851	CallExpression	"Fseek ( pfp , p_base , SEEK_SET )"		16538	0					
ANR	16852	Callee	Fseek		16538	0					
ANR	16853	Identifier	Fseek		16538	0					
ANR	16854	ArgumentList	pfp		16538	1					
ANR	16855	Argument	pfp		16538	0					
ANR	16856	Identifier	pfp		16538	0					
ANR	16857	Argument	p_base		16538	1					
ANR	16858	Identifier	p_base		16538	0					
ANR	16859	Argument	SEEK_SET		16538	2					
ANR	16860	Identifier	SEEK_SET		16538	0					
ANR	16861	ExpressionStatement	p_input_line = p_bline - 1	481:4:13802:13828	16538	28	True				
ANR	16862	AssignmentExpression	p_input_line = p_bline - 1		16538	0		=			
ANR	16863	Identifier	p_input_line		16538	0					
ANR	16864	AdditiveExpression	p_bline - 1		16538	1		-			
ANR	16865	Identifier	p_bline		16538	0					
ANR	16866	PrimaryExpression	1		16538	1					
ANR	16867	ForStatement	for ( ; ; )		16538	29					
ANR	16868	CompoundStatement		65:1:1676:1693	16538	0					
ANR	16869	IdentifierDeclStatement	char * s ;	483:1:13846:13853	16538	0	True				
ANR	16870	IdentifierDecl	* s		16538	0					
ANR	16871	IdentifierDeclType	char *		16538	0					
ANR	16872	Identifier	s		16538	1					
ANR	16873	IdentifierDeclStatement	char * t ;	484:1:13856:13863	16538	1	True				
ANR	16874	IdentifierDecl	* t		16538	0					
ANR	16875	IdentifierDeclType	char *		16538	0					
ANR	16876	Identifier	t		16538	1					
ANR	16877	IdentifierDeclStatement	file_offset previous_line = this_line ;	485:1:13866:13903	16538	2	True				
ANR	16878	IdentifierDecl	previous_line = this_line		16538	0					
ANR	16879	IdentifierDeclType	file_offset		16538	0					
ANR	16880	Identifier	previous_line		16538	1					
ANR	16881	AssignmentExpression	previous_line = this_line		16538	2		=			
ANR	16882	Identifier	this_line		16538	0					
ANR	16883	Identifier	this_line		16538	1					
ANR	16884	IdentifierDeclStatement	bool last_line_was_command = this_is_a_command ;	486:1:13906:13952	16538	3	True				
ANR	16885	IdentifierDecl	last_line_was_command = this_is_a_command		16538	0					
ANR	16886	IdentifierDeclType	bool		16538	0					
ANR	16887	Identifier	last_line_was_command		16538	1					
ANR	16888	AssignmentExpression	last_line_was_command = this_is_a_command		16538	2		=			
ANR	16889	Identifier	this_is_a_command		16538	0					
ANR	16890	Identifier	this_is_a_command		16538	1					
ANR	16891	IdentifierDeclStatement	bool stars_last_line = stars_this_line ;	487:1:13955:13993	16538	4	True				
ANR	16892	IdentifierDecl	stars_last_line = stars_this_line		16538	0					
ANR	16893	IdentifierDeclType	bool		16538	0					
ANR	16894	Identifier	stars_last_line		16538	1					
ANR	16895	AssignmentExpression	stars_last_line = stars_this_line		16538	2		=			
ANR	16896	Identifier	stars_this_line		16538	0					
ANR	16897	Identifier	stars_this_line		16538	1					
ANR	16898	IdentifierDeclStatement	size_t indent_last_line = indent ;	488:1:13996:14028	16538	5	True				
ANR	16899	IdentifierDecl	indent_last_line = indent		16538	0					
ANR	16900	IdentifierDeclType	size_t		16538	0					
ANR	16901	Identifier	indent_last_line		16538	1					
ANR	16902	AssignmentExpression	indent_last_line = indent		16538	2		=			
ANR	16903	Identifier	indent		16538	0					
ANR	16904	Identifier	indent		16538	1					
ANR	16905	IdentifierDeclStatement	char ed_command_letter ;	489:1:14031:14053	16538	6	True				
ANR	16906	IdentifierDecl	ed_command_letter		16538	0					
ANR	16907	IdentifierDeclType	char		16538	0					
ANR	16908	Identifier	ed_command_letter		16538	1					
ANR	16909	IdentifierDeclStatement	bool strip_trailing_cr ;	490:1:14056:14078	16538	7	True				
ANR	16910	IdentifierDecl	strip_trailing_cr		16538	0					
ANR	16911	IdentifierDeclType	bool		16538	0					
ANR	16912	Identifier	strip_trailing_cr		16538	1					
ANR	16913	IdentifierDeclStatement	size_t chars_read ;	491:1:14081:14098	16538	8	True				
ANR	16914	IdentifierDecl	chars_read		16538	0					
ANR	16915	IdentifierDeclType	size_t		16538	0					
ANR	16916	Identifier	chars_read		16538	1					
ANR	16917	ExpressionStatement	indent = 0	493:1:14102:14112	16538	9	True				
ANR	16918	AssignmentExpression	indent = 0		16538	0		=			
ANR	16919	Identifier	indent		16538	0					
ANR	16920	PrimaryExpression	0		16538	1					
ANR	16921	ExpressionStatement	this_line = file_tell ( pfp )	494:1:14115:14142	16538	10	True				
ANR	16922	AssignmentExpression	this_line = file_tell ( pfp )		16538	0		=			
ANR	16923	Identifier	this_line		16538	0					
ANR	16924	CallExpression	file_tell ( pfp )		16538	1					
ANR	16925	Callee	file_tell		16538	0					
ANR	16926	Identifier	file_tell		16538	0					
ANR	16927	ArgumentList	pfp		16538	1					
ANR	16928	Argument	pfp		16538	0					
ANR	16929	Identifier	pfp		16538	0					
ANR	16930	ExpressionStatement	"chars_read = pget_line ( 0 , 0 , false , false )"	495:1:14145:14188	16538	11	True				
ANR	16931	AssignmentExpression	"chars_read = pget_line ( 0 , 0 , false , false )"		16538	0		=			
ANR	16932	Identifier	chars_read		16538	0					
ANR	16933	CallExpression	"pget_line ( 0 , 0 , false , false )"		16538	1					
ANR	16934	Callee	pget_line		16538	0					
ANR	16935	Identifier	pget_line		16538	0					
ANR	16936	ArgumentList	0		16538	1					
ANR	16937	Argument	0		16538	0					
ANR	16938	PrimaryExpression	0		16538	0					
ANR	16939	Argument	0		16538	1					
ANR	16940	PrimaryExpression	0		16538	0					
ANR	16941	Argument	false		16538	2					
ANR	16942	Identifier	false		16538	0					
ANR	16943	Argument	false		16538	3					
ANR	16944	Identifier	false		16538	0					
ANR	16945	IfStatement	if ( chars_read == ( size_t ) - 1 )		16538	12					
ANR	16946	Condition	chars_read == ( size_t ) - 1	496:5:14195:14219	16538	0	True				
ANR	16947	EqualityExpression	chars_read == ( size_t ) - 1		16538	0		==			
ANR	16948	Identifier	chars_read		16538	0					
ANR	16949	CastExpression	( size_t ) - 1		16538	1					
ANR	16950	CastTarget	size_t		16538	0					
ANR	16951	UnaryOperationExpression	- 1		16538	1					
ANR	16952	UnaryOperator	-		16538	0					
ANR	16953	PrimaryExpression	1		16538	1					
ANR	16954	ExpressionStatement	xalloc_die ( )	497:3:14225:14238	16538	1	True				
ANR	16955	CallExpression	xalloc_die ( )		16538	0					
ANR	16956	Callee	xalloc_die		16538	0					
ANR	16957	Identifier	xalloc_die		16538	0					
ANR	16958	ArgumentList			16538	1					
ANR	16959	IfStatement	if ( ! chars_read )		16538	13					
ANR	16960	Condition	! chars_read	498:5:14245:14256	16538	0	True				
ANR	16961	UnaryOperationExpression	! chars_read		16538	0					
ANR	16962	UnaryOperator	!		16538	0					
ANR	16963	Identifier	chars_read		16538	1					
ANR	16964	CompoundStatement		72:19:1854:1854	16538	1					
ANR	16965	IfStatement	if ( first_ed_command_letter )		16538	0					
ANR	16966	Condition	first_ed_command_letter	499:9:14270:14292	16538	0	True				
ANR	16967	Identifier	first_ed_command_letter		16538	0					
ANR	16968	CompoundStatement		73:34:1890:1890	16538	1					
ANR	16969	ExpressionStatement	p_start = first_command_line	501:2:14332:14360	16538	0	True				
ANR	16970	AssignmentExpression	p_start = first_command_line		16538	0		=			
ANR	16971	Identifier	p_start		16538	0					
ANR	16972	Identifier	first_command_line		16538	1					
ANR	16973	ExpressionStatement	p_sline = fcl_line	502:2:14364:14382	16538	1	True				
ANR	16974	AssignmentExpression	p_sline = fcl_line		16538	0		=			
ANR	16975	Identifier	p_sline		16538	0					
ANR	16976	Identifier	fcl_line		16538	1					
ANR	16977	ExpressionStatement	retval = ED_DIFF	503:2:14386:14402	16538	2	True				
ANR	16978	AssignmentExpression	retval = ED_DIFF		16538	0		=			
ANR	16979	Identifier	retval		16538	0					
ANR	16980	Identifier	ED_DIFF		16538	1					
ANR	16981	GotoStatement	goto scan_exit ;	504:2:14406:14420	16538	3	True				
ANR	16982	Identifier	scan_exit		16538	0					
ANR	16983	ElseStatement	else		16538	0					
ANR	16984	CompoundStatement		80:10:2034:2034	16538	0					
ANR	16985	ExpressionStatement	p_start = this_line	507:2:14443:14462	16538	0	True				
ANR	16986	AssignmentExpression	p_start = this_line		16538	0		=			
ANR	16987	Identifier	p_start		16538	0					
ANR	16988	Identifier	this_line		16538	1					
ANR	16989	ExpressionStatement	p_sline = p_input_line	508:2:14466:14488	16538	1	True				
ANR	16990	AssignmentExpression	p_sline = p_input_line		16538	0		=			
ANR	16991	Identifier	p_sline		16538	0					
ANR	16992	Identifier	p_input_line		16538	1					
ANR	16993	IfStatement	if ( extended_headers )		16538	2					
ANR	16994	Condition	extended_headers	509:6:14496:14511	16538	0	True				
ANR	16995	Identifier	extended_headers		16538	0					
ANR	16996	CompoundStatement		84:4:2113:2113	16538	1					
ANR	16997	ExpressionStatement	retval = UNI_DIFF	512:6:14586:14603	16538	0	True				
ANR	16998	AssignmentExpression	retval = UNI_DIFF		16538	0		=			
ANR	16999	Identifier	retval		16538	0					
ANR	17000	Identifier	UNI_DIFF		16538	1					
ANR	17001	GotoStatement	goto scan_exit ;	513:6:14611:14625	16538	1	True				
ANR	17002	Identifier	scan_exit		16538	0					
ANR	17003	ReturnStatement	return NO_DIFF ;	515:2:14635:14649	16538	3	True				
ANR	17004	Identifier	NO_DIFF		16538	0					
ANR	17005	ExpressionStatement	strip_trailing_cr = 2 <= chars_read && buf [ chars_read - 2 ] == '\\r'	518:1:14662:14728	16538	14	True				
ANR	17006	AssignmentExpression	strip_trailing_cr = 2 <= chars_read && buf [ chars_read - 2 ] == '\\r'		16538	0		=			
ANR	17007	Identifier	strip_trailing_cr		16538	0					
ANR	17008	AndExpression	2 <= chars_read && buf [ chars_read - 2 ] == '\\r'		16538	1		&&			
ANR	17009	RelationalExpression	2 <= chars_read		16538	0		<=			
ANR	17010	PrimaryExpression	2		16538	0					
ANR	17011	Identifier	chars_read		16538	1					
ANR	17012	EqualityExpression	buf [ chars_read - 2 ] == '\\r'		16538	1		==			
ANR	17013	ArrayIndexing	buf [ chars_read - 2 ]		16538	0					
ANR	17014	Identifier	buf		16538	0					
ANR	17015	AdditiveExpression	chars_read - 2		16538	1		-			
ANR	17016	Identifier	chars_read		16538	0					
ANR	17017	PrimaryExpression	2		16538	1					
ANR	17018	PrimaryExpression	'\\r'		16538	1					
ANR	17019	ForStatement	for ( s = buf ; * s == ' ' || * s == '\\t' || * s == 'X' ; s ++ )		16538	15					
ANR	17020	ForInit	s = buf ;	519:6:14736:14743	16538	0	True				
ANR	17021	AssignmentExpression	s = buf		16538	0		=			
ANR	17022	Identifier	s		16538	0					
ANR	17023	Identifier	buf		16538	1					
ANR	17024	Condition	* s == ' ' || * s == '\\t' || * s == 'X'	519:15:14745:14780	16538	1	True				
ANR	17025	OrExpression	* s == ' ' || * s == '\\t' || * s == 'X'		16538	0		||			
ANR	17026	EqualityExpression	* s == ' '		16538	0		==			
ANR	17027	UnaryOperationExpression	* s		16538	0					
ANR	17028	UnaryOperator	*		16538	0					
ANR	17029	Identifier	s		16538	1					
ANR	17030	PrimaryExpression	' '		16538	1					
ANR	17031	OrExpression	* s == '\\t' || * s == 'X'		16538	1		||			
ANR	17032	EqualityExpression	* s == '\\t'		16538	0		==			
ANR	17033	UnaryOperationExpression	* s		16538	0					
ANR	17034	UnaryOperator	*		16538	0					
ANR	17035	Identifier	s		16538	1					
ANR	17036	PrimaryExpression	'\\t'		16538	1					
ANR	17037	EqualityExpression	* s == 'X'		16538	1		==			
ANR	17038	UnaryOperationExpression	* s		16538	0					
ANR	17039	UnaryOperator	*		16538	0					
ANR	17040	Identifier	s		16538	1					
ANR	17041	PrimaryExpression	'X'		16538	1					
ANR	17042	PostIncDecOperationExpression	s ++	519:53:14783:14785	16538	2	True				
ANR	17043	Identifier	s		16538	0					
ANR	17044	IncDec	++		16538	1					
ANR	17045	CompoundStatement		93:58:2383:2383	16538	3					
ANR	17046	IfStatement	if ( * s == '\\t' )		16538	0					
ANR	17047	Condition	* s == '\\t'	520:9:14799:14808	16538	0	True				
ANR	17048	EqualityExpression	* s == '\\t'		16538	0		==			
ANR	17049	UnaryOperationExpression	* s		16538	0					
ANR	17050	UnaryOperator	*		16538	0					
ANR	17051	Identifier	s		16538	1					
ANR	17052	PrimaryExpression	'\\t'		16538	1					
ANR	17053	ExpressionStatement	indent = ( indent + 8 ) & ~7	521:2:14813:14839	16538	1	True				
ANR	17054	AssignmentExpression	indent = ( indent + 8 ) & ~7		16538	0		=			
ANR	17055	Identifier	indent		16538	0					
ANR	17056	BitAndExpression	( indent + 8 ) & ~7		16538	1		&			
ANR	17057	AdditiveExpression	indent + 8		16538	0		+			
ANR	17058	Identifier	indent		16538	0					
ANR	17059	PrimaryExpression	8		16538	1					
ANR	17060	Identifier	~7		16538	1					
ANR	17061	ElseStatement	else		16538	0					
ANR	17062	ExpressionStatement	indent ++	523:2:14853:14861	16538	0	True				
ANR	17063	PostIncDecOperationExpression	indent ++		16538	0					
ANR	17064	Identifier	indent		16538	0					
ANR	17065	IncDec	++		16538	1					
ANR	17066	IfStatement	if ( ISDIGIT ( * s ) )		16538	16					
ANR	17067	Condition	ISDIGIT ( * s )	525:5:14871:14882	16538	0	True				
ANR	17068	CallExpression	ISDIGIT ( * s )		16538	0					
ANR	17069	Callee	ISDIGIT		16538	0					
ANR	17070	Identifier	ISDIGIT		16538	0					
ANR	17071	ArgumentList	* s		16538	1					
ANR	17072	Argument	* s		16538	0					
ANR	17073	UnaryOperationExpression	* s		16538	0					
ANR	17074	UnaryOperator	*		16538	0					
ANR	17075	Identifier	s		16538	1					
ANR	17076	CompoundStatement		100:3:2483:2483	16538	1					
ANR	17077	ForStatement	"for ( t = s + 1 ; ISDIGIT ( * t ) || * t == ',' ; t ++ )"		16538	0					
ANR	17078	ForInit	t = s + 1 ;	527:10:14900:14909	16538	0	True				
ANR	17079	AssignmentExpression	t = s + 1		16538	0		=			
ANR	17080	Identifier	t		16538	0					
ANR	17081	AdditiveExpression	s + 1		16538	1		+			
ANR	17082	Identifier	s		16538	0					
ANR	17083	PrimaryExpression	1		16538	1					
ANR	17084	Condition	"ISDIGIT ( * t ) || * t == ','"	527:21:14911:14935	16538	1	True				
ANR	17085	OrExpression	"ISDIGIT ( * t ) || * t == ','"		16538	0		||			
ANR	17086	CallExpression	ISDIGIT ( * t )		16538	0					
ANR	17087	Callee	ISDIGIT		16538	0					
ANR	17088	Identifier	ISDIGIT		16538	0					
ANR	17089	ArgumentList	* t		16538	1					
ANR	17090	Argument	* t		16538	0					
ANR	17091	UnaryOperationExpression	* t		16538	0					
ANR	17092	UnaryOperator	*		16538	0					
ANR	17093	Identifier	t		16538	1					
ANR	17094	EqualityExpression	"* t == ','"		16538	1		==			
ANR	17095	UnaryOperationExpression	* t		16538	0					
ANR	17096	UnaryOperator	*		16538	0					
ANR	17097	Identifier	t		16538	1					
ANR	17098	PrimaryExpression	"','"		16538	1					
ANR	17099	PostIncDecOperationExpression	t ++	527:49:14939:14941	16538	2	True				
ANR	17100	Identifier	t		16538	0					
ANR	17101	IncDec	++		16538	1					
ANR	17102	ExpressionStatement		528:24:14968:14968	16538	3	True				
ANR	17103	IfStatement	if ( * t == 'd' || * t == 'c' || * t == 'a' )		16538	1					
ANR	17104	Condition	* t == 'd' || * t == 'c' || * t == 'a'	529:9:14979:15013	16538	0	True				
ANR	17105	OrExpression	* t == 'd' || * t == 'c' || * t == 'a'		16538	0		||			
ANR	17106	EqualityExpression	* t == 'd'		16538	0		==			
ANR	17107	UnaryOperationExpression	* t		16538	0					
ANR	17108	UnaryOperator	*		16538	0					
ANR	17109	Identifier	t		16538	1					
ANR	17110	PrimaryExpression	'd'		16538	1					
ANR	17111	OrExpression	* t == 'c' || * t == 'a'		16538	1		||			
ANR	17112	EqualityExpression	* t == 'c'		16538	0		==			
ANR	17113	UnaryOperationExpression	* t		16538	0					
ANR	17114	UnaryOperator	*		16538	0					
ANR	17115	Identifier	t		16538	1					
ANR	17116	PrimaryExpression	'c'		16538	1					
ANR	17117	EqualityExpression	* t == 'a'		16538	1		==			
ANR	17118	UnaryOperationExpression	* t		16538	0					
ANR	17119	UnaryOperator	*		16538	0					
ANR	17120	Identifier	t		16538	1					
ANR	17121	PrimaryExpression	'a'		16538	1					
ANR	17122	CompoundStatement		104:7:2618:2618	16538	1					
ANR	17123	ForStatement	"for ( t ++ ; ISDIGIT ( * t ) || * t == ',' ; t ++ )"		16538	0					
ANR	17124	ForInit	t ++ ;	531:7:15032:15035	16538	0	True				
ANR	17125	PostIncDecOperationExpression	t ++		16538	0					
ANR	17126	Identifier	t		16538	0					
ANR	17127	IncDec	++		16538	1					
ANR	17128	Condition	"ISDIGIT ( * t ) || * t == ','"	531:13:15038:15062	16538	1	True				
ANR	17129	OrExpression	"ISDIGIT ( * t ) || * t == ','"		16538	0		||			
ANR	17130	CallExpression	ISDIGIT ( * t )		16538	0					
ANR	17131	Callee	ISDIGIT		16538	0					
ANR	17132	Identifier	ISDIGIT		16538	0					
ANR	17133	ArgumentList	* t		16538	1					
ANR	17134	Argument	* t		16538	0					
ANR	17135	UnaryOperationExpression	* t		16538	0					
ANR	17136	UnaryOperator	*		16538	0					
ANR	17137	Identifier	t		16538	1					
ANR	17138	EqualityExpression	"* t == ','"		16538	1		==			
ANR	17139	UnaryOperationExpression	* t		16538	0					
ANR	17140	UnaryOperator	*		16538	0					
ANR	17141	Identifier	t		16538	1					
ANR	17142	PrimaryExpression	"','"		16538	1					
ANR	17143	PostIncDecOperationExpression	t ++	531:41:15066:15068	16538	2	True				
ANR	17144	Identifier	t		16538	0					
ANR	17145	IncDec	++		16538	1					
ANR	17146	ExpressionStatement		532:21:15092:15092	16538	3	True				
ANR	17147	ForStatement	for ( ; * t == ' ' || * t == '\\t' ; t ++ )		16538	1					
ANR	17148	Condition	* t == ' ' || * t == '\\t'	533:9:15103:15125	16538	0	True				
ANR	17149	OrExpression	* t == ' ' || * t == '\\t'		16538	0		||			
ANR	17150	EqualityExpression	* t == ' '		16538	0		==			
ANR	17151	UnaryOperationExpression	* t		16538	0					
ANR	17152	UnaryOperator	*		16538	0					
ANR	17153	Identifier	t		16538	1					
ANR	17154	PrimaryExpression	' '		16538	1					
ANR	17155	EqualityExpression	* t == '\\t'		16538	1		==			
ANR	17156	UnaryOperationExpression	* t		16538	0					
ANR	17157	UnaryOperator	*		16538	0					
ANR	17158	Identifier	t		16538	1					
ANR	17159	PrimaryExpression	'\\t'		16538	1					
ANR	17160	PostIncDecOperationExpression	t ++	533:34:15128:15130	16538	1	True				
ANR	17161	Identifier	t		16538	0					
ANR	17162	IncDec	++		16538	1					
ANR	17163	ExpressionStatement		534:21:15154:15154	16538	2	True				
ANR	17164	IfStatement	if ( * t == '\\r' )		16538	2					
ANR	17165	Condition	* t == '\\r'	535:6:15162:15171	16538	0	True				
ANR	17166	EqualityExpression	* t == '\\r'		16538	0		==			
ANR	17167	UnaryOperationExpression	* t		16538	0					
ANR	17168	UnaryOperator	*		16538	0					
ANR	17169	Identifier	t		16538	1					
ANR	17170	PrimaryExpression	'\\r'		16538	1					
ANR	17171	ExpressionStatement	t ++	536:4:15178:15181	16538	1	True				
ANR	17172	PostIncDecOperationExpression	t ++		16538	0					
ANR	17173	Identifier	t		16538	0					
ANR	17174	IncDec	++		16538	1					
ANR	17175	ExpressionStatement	this_is_a_command = ( * t == '\\n' )	537:2:15185:15217	16538	3	True				
ANR	17176	AssignmentExpression	this_is_a_command = ( * t == '\\n' )		16538	0		=			
ANR	17177	Identifier	this_is_a_command		16538	0					
ANR	17178	EqualityExpression	* t == '\\n'		16538	1		==			
ANR	17179	UnaryOperationExpression	* t		16538	0					
ANR	17180	UnaryOperator	*		16538	0					
ANR	17181	Identifier	t		16538	1					
ANR	17182	PrimaryExpression	'\\n'		16538	1					
ANR	17183	IfStatement	if ( ! need_header && first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command ) )		16538	17					
ANR	17184	Condition	! need_header && first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command )	540:5:15238:15362	16538	0	True				
ANR	17185	AndExpression	! need_header && first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command )		16538	0		&&			
ANR	17186	UnaryOperationExpression	! need_header		16538	0					
ANR	17187	UnaryOperator	!		16538	0					
ANR	17188	Identifier	need_header		16538	1					
ANR	17189	AndExpression	first_command_line < 0 && ( ( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command )		16538	1		&&			
ANR	17190	RelationalExpression	first_command_line < 0		16538	0		<			
ANR	17191	Identifier	first_command_line		16538	0					
ANR	17192	PrimaryExpression	0		16538	1					
ANR	17193	OrExpression	( ed_command_letter = get_ed_command_letter ( s ) ) || this_is_a_command		16538	1		||			
ANR	17194	AssignmentExpression	ed_command_letter = get_ed_command_letter ( s )		16538	0		=			
ANR	17195	Identifier	ed_command_letter		16538	0					
ANR	17196	CallExpression	get_ed_command_letter ( s )		16538	1					
ANR	17197	Callee	get_ed_command_letter		16538	0					
ANR	17198	Identifier	get_ed_command_letter		16538	0					
ANR	17199	ArgumentList	s		16538	1					
ANR	17200	Argument	s		16538	0					
ANR	17201	Identifier	s		16538	0					
ANR	17202	Identifier	this_is_a_command		16538	1					
ANR	17203	CompoundStatement		117:25:2960:2960	16538	1					
ANR	17204	ExpressionStatement	first_command_line = this_line	544:5:15372:15402	16538	0	True				
ANR	17205	AssignmentExpression	first_command_line = this_line		16538	0		=			
ANR	17206	Identifier	first_command_line		16538	0					
ANR	17207	Identifier	this_line		16538	1					
ANR	17208	ExpressionStatement	first_ed_command_letter = ed_command_letter	545:5:15409:15452	16538	1	True				
ANR	17209	AssignmentExpression	first_ed_command_letter = ed_command_letter		16538	0		=			
ANR	17210	Identifier	first_ed_command_letter		16538	0					
ANR	17211	Identifier	ed_command_letter		16538	1					
ANR	17212	ExpressionStatement	fcl_line = p_input_line	546:5:15459:15482	16538	2	True				
ANR	17213	AssignmentExpression	fcl_line = p_input_line		16538	0		=			
ANR	17214	Identifier	fcl_line		16538	0					
ANR	17215	Identifier	p_input_line		16538	1					
ANR	17216	ExpressionStatement	p_indent = indent	547:5:15489:15506	16538	3	True				
ANR	17217	AssignmentExpression	p_indent = indent		16538	0		=			
ANR	17218	Identifier	p_indent		16538	0					
ANR	17219	Identifier	indent		16538	1					
ANR	17220	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	548:5:15540:15579	16538	4	True				
ANR	17221	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		16538	0		=			
ANR	17222	Identifier	p_strip_trailing_cr		16538	0					
ANR	17223	Identifier	strip_trailing_cr		16538	1					
ANR	17224	IfStatement	"if ( ! stars_last_line && strnEQ ( s , ""*** "" , 4 ) )"		16538	18					
ANR	17225	Condition	"! stars_last_line && strnEQ ( s , ""*** "" , 4 )"	550:5:15589:15628	16538	0	True				
ANR	17226	AndExpression	"! stars_last_line && strnEQ ( s , ""*** "" , 4 )"		16538	0		&&			
ANR	17227	UnaryOperationExpression	! stars_last_line		16538	0					
ANR	17228	UnaryOperator	!		16538	0					
ANR	17229	Identifier	stars_last_line		16538	1					
ANR	17230	CallExpression	"strnEQ ( s , ""*** "" , 4 )"		16538	1					
ANR	17231	Callee	strnEQ		16538	0					
ANR	17232	Identifier	strnEQ		16538	0					
ANR	17233	ArgumentList	s		16538	1					
ANR	17234	Argument	s		16538	0					
ANR	17235	Identifier	s		16538	0					
ANR	17236	Argument	"""*** """		16538	1					
ANR	17237	PrimaryExpression	"""*** """		16538	0					
ANR	17238	Argument	4		16538	2					
ANR	17239	PrimaryExpression	4		16538	0					
ANR	17240	CompoundStatement		125:3:3229:3229	16538	1					
ANR	17241	ExpressionStatement	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"	552:5:15641:15726	16538	0	True				
ANR	17242	CallExpression	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"		16538	0					
ANR	17243	Callee	fetchname		16538	0					
ANR	17244	Identifier	fetchname		16538	0					
ANR	17245	ArgumentList	s + 4		16538	1					
ANR	17246	Argument	s + 4		16538	0					
ANR	17247	AdditiveExpression	s + 4		16538	0		+			
ANR	17248	Identifier	s		16538	0					
ANR	17249	PrimaryExpression	4		16538	1					
ANR	17250	Argument	strippath		16538	1					
ANR	17251	Identifier	strippath		16538	0					
ANR	17252	Argument	& p_name [ OLD ]		16538	2					
ANR	17253	UnaryOperationExpression	& p_name [ OLD ]		16538	0					
ANR	17254	UnaryOperator	&		16538	0					
ANR	17255	ArrayIndexing	p_name [ OLD ]		16538	1					
ANR	17256	Identifier	p_name		16538	0					
ANR	17257	Identifier	OLD		16538	1					
ANR	17258	Argument	& p_timestr [ OLD ]		16538	3					
ANR	17259	UnaryOperationExpression	& p_timestr [ OLD ]		16538	0					
ANR	17260	UnaryOperator	&		16538	0					
ANR	17261	ArrayIndexing	p_timestr [ OLD ]		16538	1					
ANR	17262	Identifier	p_timestr		16538	0					
ANR	17263	Identifier	OLD		16538	1					
ANR	17264	Argument	& p_timestamp [ OLD ]		16538	4					
ANR	17265	UnaryOperationExpression	& p_timestamp [ OLD ]		16538	0					
ANR	17266	UnaryOperator	&		16538	0					
ANR	17267	ArrayIndexing	p_timestamp [ OLD ]		16538	1					
ANR	17268	Identifier	p_timestamp		16538	0					
ANR	17269	Identifier	OLD		16538	1					
ANR	17270	ExpressionStatement	need_header = false	554:5:15733:15752	16538	1	True				
ANR	17271	AssignmentExpression	need_header = false		16538	0		=			
ANR	17272	Identifier	need_header		16538	0					
ANR	17273	Identifier	false		16538	1					
ANR	17274	ElseStatement	else		16538	0					
ANR	17275	IfStatement	"if ( strnEQ ( s , ""+++ "" , 4 ) )"		16538	0					
ANR	17276	Condition	"strnEQ ( s , ""+++ "" , 4 )"	556:10:15769:15788	16538	0	True				
ANR	17277	CallExpression	"strnEQ ( s , ""+++ "" , 4 )"		16538	0					
ANR	17278	Callee	strnEQ		16538	0					
ANR	17279	Identifier	strnEQ		16538	0					
ANR	17280	ArgumentList	s		16538	1					
ANR	17281	Argument	s		16538	0					
ANR	17282	Identifier	s		16538	0					
ANR	17283	Argument	"""+++ """		16538	1					
ANR	17284	PrimaryExpression	"""+++ """		16538	0					
ANR	17285	Argument	4		16538	2					
ANR	17286	PrimaryExpression	4		16538	0					
ANR	17287	CompoundStatement		131:3:3389:3389	16538	1					
ANR	17288	ExpressionStatement	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"	559:5:15834:15919	16538	0	True				
ANR	17289	CallExpression	"fetchname ( s + 4 , strippath , & p_name [ OLD ] , & p_timestr [ OLD ] , & p_timestamp [ OLD ] )"		16538	0					
ANR	17290	Callee	fetchname		16538	0					
ANR	17291	Identifier	fetchname		16538	0					
ANR	17292	ArgumentList	s + 4		16538	1					
ANR	17293	Argument	s + 4		16538	0					
ANR	17294	AdditiveExpression	s + 4		16538	0		+			
ANR	17295	Identifier	s		16538	0					
ANR	17296	PrimaryExpression	4		16538	1					
ANR	17297	Argument	strippath		16538	1					
ANR	17298	Identifier	strippath		16538	0					
ANR	17299	Argument	& p_name [ OLD ]		16538	2					
ANR	17300	UnaryOperationExpression	& p_name [ OLD ]		16538	0					
ANR	17301	UnaryOperator	&		16538	0					
ANR	17302	ArrayIndexing	p_name [ OLD ]		16538	1					
ANR	17303	Identifier	p_name		16538	0					
ANR	17304	Identifier	OLD		16538	1					
ANR	17305	Argument	& p_timestr [ OLD ]		16538	3					
ANR	17306	UnaryOperationExpression	& p_timestr [ OLD ]		16538	0					
ANR	17307	UnaryOperator	&		16538	0					
ANR	17308	ArrayIndexing	p_timestr [ OLD ]		16538	1					
ANR	17309	Identifier	p_timestr		16538	0					
ANR	17310	Identifier	OLD		16538	1					
ANR	17311	Argument	& p_timestamp [ OLD ]		16538	4					
ANR	17312	UnaryOperationExpression	& p_timestamp [ OLD ]		16538	0					
ANR	17313	UnaryOperator	&		16538	0					
ANR	17314	ArrayIndexing	p_timestamp [ OLD ]		16538	1					
ANR	17315	Identifier	p_timestamp		16538	0					
ANR	17316	Identifier	OLD		16538	1					
ANR	17317	ExpressionStatement	need_header = false	561:5:15926:15945	16538	1	True				
ANR	17318	AssignmentExpression	need_header = false		16538	0		=			
ANR	17319	Identifier	need_header		16538	0					
ANR	17320	Identifier	false		16538	1					
ANR	17321	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	562:5:15952:15991	16538	2	True				
ANR	17322	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		16538	0		=			
ANR	17323	Identifier	p_strip_trailing_cr		16538	0					
ANR	17324	Identifier	strip_trailing_cr		16538	1					
ANR	17325	ElseStatement	else		16538	0					
ANR	17326	IfStatement	"if ( strnEQ ( s , ""Index:"" , 6 ) )"		16538	0					
ANR	17327	Condition	"strnEQ ( s , ""Index:"" , 6 )"	564:10:16008:16029	16538	0	True				
ANR	17328	CallExpression	"strnEQ ( s , ""Index:"" , 6 )"		16538	0					
ANR	17329	Callee	strnEQ		16538	0					
ANR	17330	Identifier	strnEQ		16538	0					
ANR	17331	ArgumentList	s		16538	1					
ANR	17332	Argument	s		16538	0					
ANR	17333	Identifier	s		16538	0					
ANR	17334	Argument	"""Index:"""		16538	1					
ANR	17335	PrimaryExpression	"""Index:"""		16538	0					
ANR	17336	Argument	6		16538	2					
ANR	17337	PrimaryExpression	6		16538	0					
ANR	17338	CompoundStatement		139:3:3630:3630	16538	1					
ANR	17339	ExpressionStatement	"fetchname ( s + 6 , strippath , & p_name [ INDEX ] , ( char * * ) 0 , NULL )"	566:5:16042:16103	16538	0	True				
ANR	17340	CallExpression	"fetchname ( s + 6 , strippath , & p_name [ INDEX ] , ( char * * ) 0 , NULL )"		16538	0					
ANR	17341	Callee	fetchname		16538	0					
ANR	17342	Identifier	fetchname		16538	0					
ANR	17343	ArgumentList	s + 6		16538	1					
ANR	17344	Argument	s + 6		16538	0					
ANR	17345	AdditiveExpression	s + 6		16538	0		+			
ANR	17346	Identifier	s		16538	0					
ANR	17347	PrimaryExpression	6		16538	1					
ANR	17348	Argument	strippath		16538	1					
ANR	17349	Identifier	strippath		16538	0					
ANR	17350	Argument	& p_name [ INDEX ]		16538	2					
ANR	17351	UnaryOperationExpression	& p_name [ INDEX ]		16538	0					
ANR	17352	UnaryOperator	&		16538	0					
ANR	17353	ArrayIndexing	p_name [ INDEX ]		16538	1					
ANR	17354	Identifier	p_name		16538	0					
ANR	17355	Identifier	INDEX		16538	1					
ANR	17356	Argument	( char * * ) 0		16538	3					
ANR	17357	CastExpression	( char * * ) 0		16538	0					
ANR	17358	CastTarget	char * *		16538	0					
ANR	17359	PrimaryExpression	0		16538	1					
ANR	17360	Argument	NULL		16538	4					
ANR	17361	Identifier	NULL		16538	0					
ANR	17362	ExpressionStatement	need_header = false	567:5:16110:16129	16538	1	True				
ANR	17363	AssignmentExpression	need_header = false		16538	0		=			
ANR	17364	Identifier	need_header		16538	0					
ANR	17365	Identifier	false		16538	1					
ANR	17366	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	568:5:16136:16175	16538	2	True				
ANR	17367	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		16538	0		=			
ANR	17368	Identifier	p_strip_trailing_cr		16538	0					
ANR	17369	Identifier	strip_trailing_cr		16538	1					
ANR	17370	ElseStatement	else		16538	0					
ANR	17371	IfStatement	"if ( strnEQ ( s , ""Prereq:"" , 7 ) )"		16538	0					
ANR	17372	Condition	"strnEQ ( s , ""Prereq:"" , 7 )"	570:10:16192:16214	16538	0	True				
ANR	17373	CallExpression	"strnEQ ( s , ""Prereq:"" , 7 )"		16538	0					
ANR	17374	Callee	strnEQ		16538	0					
ANR	17375	Identifier	strnEQ		16538	0					
ANR	17376	ArgumentList	s		16538	1					
ANR	17377	Argument	s		16538	0					
ANR	17378	Identifier	s		16538	0					
ANR	17379	Argument	"""Prereq:"""		16538	1					
ANR	17380	PrimaryExpression	"""Prereq:"""		16538	0					
ANR	17381	Argument	7		16538	2					
ANR	17382	PrimaryExpression	7		16538	0					
ANR	17383	CompoundStatement		145:3:3815:3815	16538	1					
ANR	17384	ForStatement	for ( t = s + 7 ; ISSPACE ( ( unsigned char ) * t ) ; t ++ )		16538	0					
ANR	17385	ForInit	t = s + 7 ;	572:10:16232:16241	16538	0	True				
ANR	17386	AssignmentExpression	t = s + 7		16538	0		=			
ANR	17387	Identifier	t		16538	0					
ANR	17388	AdditiveExpression	s + 7		16538	1		+			
ANR	17389	Identifier	s		16538	0					
ANR	17390	PrimaryExpression	7		16538	1					
ANR	17391	Condition	ISSPACE ( ( unsigned char ) * t )	572:22:16244:16271	16538	1	True				
ANR	17392	CallExpression	ISSPACE ( ( unsigned char ) * t )		16538	0					
ANR	17393	Callee	ISSPACE		16538	0					
ANR	17394	Identifier	ISSPACE		16538	0					
ANR	17395	ArgumentList	( unsigned char ) * t		16538	1					
ANR	17396	Argument	( unsigned char ) * t		16538	0					
ANR	17397	CastExpression	( unsigned char ) * t		16538	0					
ANR	17398	CastTarget	unsigned char		16538	0					
ANR	17399	UnaryOperationExpression	* t		16538	1					
ANR	17400	UnaryOperator	*		16538	0					
ANR	17401	Identifier	t		16538	1					
ANR	17402	PostIncDecOperationExpression	t ++	572:53:16275:16277	16538	2	True				
ANR	17403	Identifier	t		16538	0					
ANR	17404	IncDec	++		16538	1					
ANR	17405	ExpressionStatement		573:24:16304:16304	16538	3	True				
ANR	17406	ExpressionStatement	revision = t	574:5:16311:16323	16538	1	True				
ANR	17407	AssignmentExpression	revision = t		16538	0		=			
ANR	17408	Identifier	revision		16538	0					
ANR	17409	Identifier	t		16538	1					
ANR	17410	ForStatement	for ( t = revision ; * t ; t ++ )		16538	2					
ANR	17411	ForInit	t = revision ;	575:10:16335:16347	16538	0	True				
ANR	17412	AssignmentExpression	t = revision		16538	0		=			
ANR	17413	Identifier	t		16538	0					
ANR	17414	Identifier	revision		16538	1					
ANR	17415	Condition	* t	575:25:16350:16351	16538	1	True				
ANR	17416	UnaryOperationExpression	* t		16538	0					
ANR	17417	UnaryOperator	*		16538	0					
ANR	17418	Identifier	t		16538	1					
ANR	17419	PostIncDecOperationExpression	t ++	575:30:16355:16357	16538	2	True				
ANR	17420	Identifier	t		16538	0					
ANR	17421	IncDec	++		16538	1					
ANR	17422	IfStatement	if ( ISSPACE ( ( unsigned char ) * t ) )		16538	3					
ANR	17423	Condition	ISSPACE ( ( unsigned char ) * t )	576:11:16371:16398	16538	0	True				
ANR	17424	CallExpression	ISSPACE ( ( unsigned char ) * t )		16538	0					
ANR	17425	Callee	ISSPACE		16538	0					
ANR	17426	Identifier	ISSPACE		16538	0					
ANR	17427	ArgumentList	( unsigned char ) * t		16538	1					
ANR	17428	Argument	( unsigned char ) * t		16538	0					
ANR	17429	CastExpression	( unsigned char ) * t		16538	0					
ANR	17430	CastTarget	unsigned char		16538	0					
ANR	17431	UnaryOperationExpression	* t		16538	1					
ANR	17432	UnaryOperator	*		16538	0					
ANR	17433	Identifier	t		16538	1					
ANR	17434	CompoundStatement		152:4:4004:4017	16538	1					
ANR	17435	IdentifierDeclStatement	char const * u ;	578:4:16409:16422	16538	0	True				
ANR	17436	IdentifierDecl	* u		16538	0					
ANR	17437	IdentifierDeclType	char const *		16538	0					
ANR	17438	Identifier	u		16538	1					
ANR	17439	ForStatement	for ( u = t + 1 ; ISSPACE ( ( unsigned char ) * u ) ; u ++ )		16538	1					
ANR	17440	ForInit	u = t + 1 ;	579:9:16433:16442	16538	0	True				
ANR	17441	AssignmentExpression	u = t + 1		16538	0		=			
ANR	17442	Identifier	u		16538	0					
ANR	17443	AdditiveExpression	t + 1		16538	1		+			
ANR	17444	Identifier	t		16538	0					
ANR	17445	PrimaryExpression	1		16538	1					
ANR	17446	Condition	ISSPACE ( ( unsigned char ) * u )	579:21:16445:16472	16538	1	True				
ANR	17447	CallExpression	ISSPACE ( ( unsigned char ) * u )		16538	0					
ANR	17448	Callee	ISSPACE		16538	0					
ANR	17449	Identifier	ISSPACE		16538	0					
ANR	17450	ArgumentList	( unsigned char ) * u		16538	1					
ANR	17451	Argument	( unsigned char ) * u		16538	0					
ANR	17452	CastExpression	( unsigned char ) * u		16538	0					
ANR	17453	CastTarget	unsigned char		16538	0					
ANR	17454	UnaryOperationExpression	* u		16538	1					
ANR	17455	UnaryOperator	*		16538	0					
ANR	17456	Identifier	u		16538	1					
ANR	17457	PostIncDecOperationExpression	u ++	579:52:16476:16478	16538	2	True				
ANR	17458	Identifier	u		16538	0					
ANR	17459	IncDec	++		16538	1					
ANR	17460	ExpressionStatement		580:23:16504:16504	16538	3	True				
ANR	17461	IfStatement	if ( * u )		16538	2					
ANR	17462	Condition	* u	581:8:16514:16515	16538	0	True				
ANR	17463	UnaryOperationExpression	* u		16538	0					
ANR	17464	UnaryOperator	*		16538	0					
ANR	17465	Identifier	u		16538	1					
ANR	17466	CompoundStatement		157:8:4129:4166	16538	1					
ANR	17467	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	583:8:16534:16571	16538	0	True				
ANR	17468	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		16538	0					
ANR	17469	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		16538	0					
ANR	17470	Identifier	numbuf		16538	1					
ANR	17471	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		16538	2		+			
ANR	17472	Identifier	LINENUM_LENGTH_BOUND		16538	0					
ANR	17473	PrimaryExpression	1		16538	1					
ANR	17474	ExpressionStatement	"say ( ""Prereq: with multiple words at line %s of patch\\n"" , format_linenum ( numbuf , this_line ) )"	584:8:16581:16680	16538	1	True				
ANR	17475	CallExpression	"say ( ""Prereq: with multiple words at line %s of patch\\n"" , format_linenum ( numbuf , this_line ) )"		16538	0					
ANR	17476	Callee	say		16538	0					
ANR	17477	Identifier	say		16538	0					
ANR	17478	ArgumentList	"""Prereq: with multiple words at line %s of patch\\n"""		16538	1					
ANR	17479	Argument	"""Prereq: with multiple words at line %s of patch\\n"""		16538	0					
ANR	17480	PrimaryExpression	"""Prereq: with multiple words at line %s of patch\\n"""		16538	0					
ANR	17481	Argument	"format_linenum ( numbuf , this_line )"		16538	1					
ANR	17482	CallExpression	"format_linenum ( numbuf , this_line )"		16538	0					
ANR	17483	Callee	format_linenum		16538	0					
ANR	17484	Identifier	format_linenum		16538	0					
ANR	17485	ArgumentList	numbuf		16538	1					
ANR	17486	Argument	numbuf		16538	0					
ANR	17487	Identifier	numbuf		16538	0					
ANR	17488	Argument	this_line		16538	1					
ANR	17489	Identifier	this_line		16538	0					
ANR	17490	BreakStatement	break ;	587:4:16694:16699	16538	3	True				
ANR	17491	IfStatement	if ( t == revision )		16538	3					
ANR	17492	Condition	t == revision	589:9:16714:16726	16538	0	True				
ANR	17493	EqualityExpression	t == revision		16538	0		==			
ANR	17494	Identifier	t		16538	0					
ANR	17495	Identifier	revision		16538	1					
ANR	17496	ExpressionStatement	revision = 0	590:2:16731:16743	16538	1	True				
ANR	17497	AssignmentExpression	revision = 0		16538	0		=			
ANR	17498	Identifier	revision		16538	0					
ANR	17499	PrimaryExpression	0		16538	1					
ANR	17500	ElseStatement	else		16538	0					
ANR	17501	CompoundStatement		166:2:4354:4368	16538	0					
ANR	17502	IdentifierDeclStatement	char oldc = * t ;	592:2:16759:16773	16538	0	True				
ANR	17503	IdentifierDecl	oldc = * t		16538	0					
ANR	17504	IdentifierDeclType	char		16538	0					
ANR	17505	Identifier	oldc		16538	1					
ANR	17506	AssignmentExpression	oldc = * t		16538	2		=			
ANR	17507	Identifier	oldc		16538	0					
ANR	17508	UnaryOperationExpression	* t		16538	1					
ANR	17509	UnaryOperator	*		16538	0					
ANR	17510	Identifier	t		16538	1					
ANR	17511	ExpressionStatement	* t = '\\0'	593:2:16777:16786	16538	1	True				
ANR	17512	AssignmentExpression	* t = '\\0'		16538	0		=			
ANR	17513	UnaryOperationExpression	* t		16538	0					
ANR	17514	UnaryOperator	*		16538	0					
ANR	17515	Identifier	t		16538	1					
ANR	17516	PrimaryExpression	'\\0'		16538	1					
ANR	17517	ExpressionStatement	revision = xstrdup ( revision )	594:2:16790:16819	16538	2	True				
ANR	17518	AssignmentExpression	revision = xstrdup ( revision )		16538	0		=			
ANR	17519	Identifier	revision		16538	0					
ANR	17520	CallExpression	xstrdup ( revision )		16538	1					
ANR	17521	Callee	xstrdup		16538	0					
ANR	17522	Identifier	xstrdup		16538	0					
ANR	17523	ArgumentList	revision		16538	1					
ANR	17524	Argument	revision		16538	0					
ANR	17525	Identifier	revision		16538	0					
ANR	17526	ExpressionStatement	* t = oldc	595:2:16823:16832	16538	3	True				
ANR	17527	AssignmentExpression	* t = oldc		16538	0		=			
ANR	17528	UnaryOperationExpression	* t		16538	0					
ANR	17529	UnaryOperator	*		16538	0					
ANR	17530	Identifier	t		16538	1					
ANR	17531	Identifier	oldc		16538	1					
ANR	17532	ElseStatement	else		16538	0					
ANR	17533	IfStatement	"if ( strnEQ ( s , ""diff --git "" , 11 ) )"		16538	0					
ANR	17534	Condition	"strnEQ ( s , ""diff --git "" , 11 )"	598:10:16856:16884	16538	0	True				
ANR	17535	CallExpression	"strnEQ ( s , ""diff --git "" , 11 )"		16538	0					
ANR	17536	Callee	strnEQ		16538	0					
ANR	17537	Identifier	strnEQ		16538	0					
ANR	17538	ArgumentList	s		16538	1					
ANR	17539	Argument	s		16538	0					
ANR	17540	Identifier	s		16538	0					
ANR	17541	Argument	"""diff --git """		16538	1					
ANR	17542	PrimaryExpression	"""diff --git """		16538	0					
ANR	17543	Argument	11		16538	2					
ANR	17544	PrimaryExpression	11		16538	0					
ANR	17545	CompoundStatement		174:5:4492:4505	16538	1					
ANR	17546	IdentifierDeclStatement	char const * u ;	600:5:16897:16910	16538	0	True				
ANR	17547	IdentifierDecl	* u		16538	0					
ANR	17548	IdentifierDeclType	char const *		16538	0					
ANR	17549	Identifier	u		16538	1					
ANR	17550	IfStatement	if ( extended_headers )		16538	1					
ANR	17551	Condition	extended_headers	602:9:16922:16937	16538	0	True				
ANR	17552	Identifier	extended_headers		16538	0					
ANR	17553	CompoundStatement		177:7:4542:4542	16538	1					
ANR	17554	ExpressionStatement	p_start = this_line	604:2:16951:16970	16538	0	True				
ANR	17555	AssignmentExpression	p_start = this_line		16538	0		=			
ANR	17556	Identifier	p_start		16538	0					
ANR	17557	Identifier	this_line		16538	1					
ANR	17558	ExpressionStatement	p_sline = p_input_line	605:2:16974:16996	16538	1	True				
ANR	17559	AssignmentExpression	p_sline = p_input_line		16538	0		=			
ANR	17560	Identifier	p_sline		16538	0					
ANR	17561	Identifier	p_input_line		16538	1					
ANR	17562	ExpressionStatement	retval = UNI_DIFF	607:2:17056:17073	16538	2	True				
ANR	17563	AssignmentExpression	retval = UNI_DIFF		16538	0		=			
ANR	17564	Identifier	retval		16538	0					
ANR	17565	Identifier	UNI_DIFF		16538	1					
ANR	17566	GotoStatement	goto scan_exit ;	608:2:17077:17091	16538	3	True				
ANR	17567	Identifier	scan_exit		16538	0					
ANR	17568	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		16538	2					
ANR	17569	ForInit	i = OLD ;	611:10:17113:17120	16538	0	True				
ANR	17570	AssignmentExpression	i = OLD		16538	0		=			
ANR	17571	Identifier	i		16538	0					
ANR	17572	Identifier	OLD		16538	1					
ANR	17573	Condition	i <= NEW	611:19:17122:17129	16538	1	True				
ANR	17574	RelationalExpression	i <= NEW		16538	0		<=			
ANR	17575	Identifier	i		16538	0					
ANR	17576	Identifier	NEW		16538	1					
ANR	17577	PostIncDecOperationExpression	i ++	611:29:17132:17134	16538	2	True				
ANR	17578	Identifier	i		16538	0					
ANR	17579	IncDec	++		16538	1					
ANR	17580	CompoundStatement		186:7:4739:4739	16538	3					
ANR	17581	ExpressionStatement	free ( p_name [ i ] )	613:2:17148:17164	16538	0	True				
ANR	17582	CallExpression	free ( p_name [ i ] )		16538	0					
ANR	17583	Callee	free		16538	0					
ANR	17584	Identifier	free		16538	0					
ANR	17585	ArgumentList	p_name [ i ]		16538	1					
ANR	17586	Argument	p_name [ i ]		16538	0					
ANR	17587	ArrayIndexing	p_name [ i ]		16538	0					
ANR	17588	Identifier	p_name		16538	0					
ANR	17589	Identifier	i		16538	1					
ANR	17590	ExpressionStatement	p_name [ i ] = 0	614:2:17168:17181	16538	1	True				
ANR	17591	AssignmentExpression	p_name [ i ] = 0		16538	0		=			
ANR	17592	ArrayIndexing	p_name [ i ]		16538	0					
ANR	17593	Identifier	p_name		16538	0					
ANR	17594	Identifier	i		16538	1					
ANR	17595	PrimaryExpression	0		16538	1					
ANR	17596	IfStatement	"if ( ! ( ( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u ) ) )"		16538	3					
ANR	17597	Condition	"! ( ( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u ) )"	616:9:17201:17381	16538	0	True				
ANR	17598	UnaryOperationExpression	"! ( ( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u ) )"		16538	0					
ANR	17599	UnaryOperator	!		16538	0					
ANR	17600	AndExpression	"( p_name [ OLD ] = parse_name ( s + 11 , strippath , & u ) ) && ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u )"		16538	1		&&			
ANR	17601	AssignmentExpression	"p_name [ OLD ] = parse_name ( s + 11 , strippath , & u )"		16538	0		=			
ANR	17602	ArrayIndexing	p_name [ OLD ]		16538	0					
ANR	17603	Identifier	p_name		16538	0					
ANR	17604	Identifier	OLD		16538	1					
ANR	17605	CallExpression	"parse_name ( s + 11 , strippath , & u )"		16538	1					
ANR	17606	Callee	parse_name		16538	0					
ANR	17607	Identifier	parse_name		16538	0					
ANR	17608	ArgumentList	s + 11		16538	1					
ANR	17609	Argument	s + 11		16538	0					
ANR	17610	AdditiveExpression	s + 11		16538	0		+			
ANR	17611	Identifier	s		16538	0					
ANR	17612	PrimaryExpression	11		16538	1					
ANR	17613	Argument	strippath		16538	1					
ANR	17614	Identifier	strippath		16538	0					
ANR	17615	Argument	& u		16538	2					
ANR	17616	UnaryOperationExpression	& u		16538	0					
ANR	17617	UnaryOperator	&		16538	0					
ANR	17618	Identifier	u		16538	1					
ANR	17619	AndExpression	"ISSPACE ( ( unsigned char ) * u ) && ( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u )"		16538	1		&&			
ANR	17620	CallExpression	ISSPACE ( ( unsigned char ) * u )		16538	0					
ANR	17621	Callee	ISSPACE		16538	0					
ANR	17622	Identifier	ISSPACE		16538	0					
ANR	17623	ArgumentList	( unsigned char ) * u		16538	1					
ANR	17624	Argument	( unsigned char ) * u		16538	0					
ANR	17625	CastExpression	( unsigned char ) * u		16538	0					
ANR	17626	CastTarget	unsigned char		16538	0					
ANR	17627	UnaryOperationExpression	* u		16538	1					
ANR	17628	UnaryOperator	*		16538	0					
ANR	17629	Identifier	u		16538	1					
ANR	17630	AndExpression	"( p_name [ NEW ] = parse_name ( u , strippath , & u ) ) && ( u = skip_spaces ( u ) , ! * u )"		16538	1		&&			
ANR	17631	AssignmentExpression	"p_name [ NEW ] = parse_name ( u , strippath , & u )"		16538	0		=			
ANR	17632	ArrayIndexing	p_name [ NEW ]		16538	0					
ANR	17633	Identifier	p_name		16538	0					
ANR	17634	Identifier	NEW		16538	1					
ANR	17635	CallExpression	"parse_name ( u , strippath , & u )"		16538	1					
ANR	17636	Callee	parse_name		16538	0					
ANR	17637	Identifier	parse_name		16538	0					
ANR	17638	ArgumentList	u		16538	1					
ANR	17639	Argument	u		16538	0					
ANR	17640	Identifier	u		16538	0					
ANR	17641	Argument	strippath		16538	1					
ANR	17642	Identifier	strippath		16538	0					
ANR	17643	Argument	& u		16538	2					
ANR	17644	UnaryOperationExpression	& u		16538	0					
ANR	17645	UnaryOperator	&		16538	0					
ANR	17646	Identifier	u		16538	1					
ANR	17647	Expression	"u = skip_spaces ( u ) , ! * u"		16538	1					
ANR	17648	AssignmentExpression	u = skip_spaces ( u )		16538	0		=			
ANR	17649	Identifier	u		16538	0					
ANR	17650	CallExpression	skip_spaces ( u )		16538	1					
ANR	17651	Callee	skip_spaces		16538	0					
ANR	17652	Identifier	skip_spaces		16538	0					
ANR	17653	ArgumentList	u		16538	1					
ANR	17654	Argument	u		16538	0					
ANR	17655	Identifier	u		16538	0					
ANR	17656	UnaryOperationExpression	! * u		16538	1					
ANR	17657	UnaryOperator	!		16538	0					
ANR	17658	UnaryOperationExpression	* u		16538	1					
ANR	17659	UnaryOperator	*		16538	0					
ANR	17660	Identifier	u		16538	1					
ANR	17661	ForStatement	for ( i = OLD ; i <= NEW ; i ++ )		16538	1					
ANR	17662	ForInit	i = OLD ;	620:12:17396:17403	16538	0	True				
ANR	17663	AssignmentExpression	i = OLD		16538	0		=			
ANR	17664	Identifier	i		16538	0					
ANR	17665	Identifier	OLD		16538	1					
ANR	17666	Condition	i <= NEW	620:21:17405:17412	16538	1	True				
ANR	17667	RelationalExpression	i <= NEW		16538	0		<=			
ANR	17668	Identifier	i		16538	0					
ANR	17669	Identifier	NEW		16538	1					
ANR	17670	PostIncDecOperationExpression	i ++	620:31:17415:17417	16538	2	True				
ANR	17671	Identifier	i		16538	0					
ANR	17672	IncDec	++		16538	1					
ANR	17673	CompoundStatement		195:2:5017:5017	16538	3					
ANR	17674	ExpressionStatement	free ( p_name [ i ] )	622:4:17428:17444	16538	0	True				
ANR	17675	CallExpression	free ( p_name [ i ] )		16538	0					
ANR	17676	Callee	free		16538	0					
ANR	17677	Identifier	free		16538	0					
ANR	17678	ArgumentList	p_name [ i ]		16538	1					
ANR	17679	Argument	p_name [ i ]		16538	0					
ANR	17680	ArrayIndexing	p_name [ i ]		16538	0					
ANR	17681	Identifier	p_name		16538	0					
ANR	17682	Identifier	i		16538	1					
ANR	17683	ExpressionStatement	p_name [ i ] = 0	623:4:17450:17463	16538	1	True				
ANR	17684	AssignmentExpression	p_name [ i ] = 0		16538	0		=			
ANR	17685	ArrayIndexing	p_name [ i ]		16538	0					
ANR	17686	Identifier	p_name		16538	0					
ANR	17687	Identifier	i		16538	1					
ANR	17688	PrimaryExpression	0		16538	1					
ANR	17689	ExpressionStatement	p_git_diff = true	625:5:17474:17491	16538	4	True				
ANR	17690	AssignmentExpression	p_git_diff = true		16538	0		=			
ANR	17691	Identifier	p_git_diff		16538	0					
ANR	17692	Identifier	true		16538	1					
ANR	17693	ExpressionStatement	need_header = false	626:5:17498:17517	16538	5	True				
ANR	17694	AssignmentExpression	need_header = false		16538	0		=			
ANR	17695	Identifier	need_header		16538	0					
ANR	17696	Identifier	false		16538	1					
ANR	17697	ElseStatement	else		16538	0					
ANR	17698	IfStatement	"if ( p_git_diff && strnEQ ( s , ""index "" , 6 ) )"		16538	0					
ANR	17699	Condition	"p_git_diff && strnEQ ( s , ""index "" , 6 )"	628:10:17534:17570	16538	0	True				
ANR	17700	AndExpression	"p_git_diff && strnEQ ( s , ""index "" , 6 )"		16538	0		&&			
ANR	17701	Identifier	p_git_diff		16538	0					
ANR	17702	CallExpression	"strnEQ ( s , ""index "" , 6 )"		16538	1					
ANR	17703	Callee	strnEQ		16538	0					
ANR	17704	Identifier	strnEQ		16538	0					
ANR	17705	ArgumentList	s		16538	1					
ANR	17706	Argument	s		16538	0					
ANR	17707	Identifier	s		16538	0					
ANR	17708	Argument	"""index """		16538	1					
ANR	17709	PrimaryExpression	"""index """		16538	0					
ANR	17710	Argument	6		16538	2					
ANR	17711	PrimaryExpression	6		16538	0					
ANR	17712	CompoundStatement		204:5:5178:5195	16538	1					
ANR	17713	IdentifierDeclStatement	"char const * u , * v ;"	630:5:17583:17600	16538	0	True				
ANR	17714	IdentifierDecl	* u		16538	0					
ANR	17715	IdentifierDeclType	char const *		16538	0					
ANR	17716	Identifier	u		16538	1					
ANR	17717	IdentifierDecl	* v		16538	1					
ANR	17718	IdentifierDeclType	char const *		16538	0					
ANR	17719	Identifier	v		16538	1					
ANR	17720	IfStatement	if ( ( u = skip_hex_digits ( s + 6 ) ) && u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) ) )		16538	1					
ANR	17721	Condition	( u = skip_hex_digits ( s + 6 ) ) && u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )	631:9:17611:17750	16538	0	True				
ANR	17722	AndExpression	( u = skip_hex_digits ( s + 6 ) ) && u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		16538	0		&&			
ANR	17723	AssignmentExpression	u = skip_hex_digits ( s + 6 )		16538	0		=			
ANR	17724	Identifier	u		16538	0					
ANR	17725	CallExpression	skip_hex_digits ( s + 6 )		16538	1					
ANR	17726	Callee	skip_hex_digits		16538	0					
ANR	17727	Identifier	skip_hex_digits		16538	0					
ANR	17728	ArgumentList	s + 6		16538	1					
ANR	17729	Argument	s + 6		16538	0					
ANR	17730	AdditiveExpression	s + 6		16538	0		+			
ANR	17731	Identifier	s		16538	0					
ANR	17732	PrimaryExpression	6		16538	1					
ANR	17733	AndExpression	u [ 0 ] == '.' && u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		16538	1		&&			
ANR	17734	EqualityExpression	u [ 0 ] == '.'		16538	0		==			
ANR	17735	ArrayIndexing	u [ 0 ]		16538	0					
ANR	17736	Identifier	u		16538	0					
ANR	17737	PrimaryExpression	0		16538	1					
ANR	17738	PrimaryExpression	'.'		16538	1					
ANR	17739	AndExpression	u [ 1 ] == '.' && ( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		16538	1		&&			
ANR	17740	EqualityExpression	u [ 1 ] == '.'		16538	0		==			
ANR	17741	ArrayIndexing	u [ 1 ]		16538	0					
ANR	17742	Identifier	u		16538	0					
ANR	17743	PrimaryExpression	1		16538	1					
ANR	17744	PrimaryExpression	'.'		16538	1					
ANR	17745	AndExpression	( v = skip_hex_digits ( u + 2 ) ) && ( ! * v || ISSPACE ( ( unsigned char ) * v ) )		16538	1		&&			
ANR	17746	AssignmentExpression	v = skip_hex_digits ( u + 2 )		16538	0		=			
ANR	17747	Identifier	v		16538	0					
ANR	17748	CallExpression	skip_hex_digits ( u + 2 )		16538	1					
ANR	17749	Callee	skip_hex_digits		16538	0					
ANR	17750	Identifier	skip_hex_digits		16538	0					
ANR	17751	ArgumentList	u + 2		16538	1					
ANR	17752	Argument	u + 2		16538	0					
ANR	17753	AdditiveExpression	u + 2		16538	0		+			
ANR	17754	Identifier	u		16538	0					
ANR	17755	PrimaryExpression	2		16538	1					
ANR	17756	OrExpression	! * v || ISSPACE ( ( unsigned char ) * v )		16538	1		||			
ANR	17757	UnaryOperationExpression	! * v		16538	0					
ANR	17758	UnaryOperator	!		16538	0					
ANR	17759	UnaryOperationExpression	* v		16538	1					
ANR	17760	UnaryOperator	*		16538	0					
ANR	17761	Identifier	v		16538	1					
ANR	17762	CallExpression	ISSPACE ( ( unsigned char ) * v )		16538	1					
ANR	17763	Callee	ISSPACE		16538	0					
ANR	17764	Identifier	ISSPACE		16538	0					
ANR	17765	ArgumentList	( unsigned char ) * v		16538	1					
ANR	17766	Argument	( unsigned char ) * v		16538	0					
ANR	17767	CastExpression	( unsigned char ) * v		16538	0					
ANR	17768	CastTarget	unsigned char		16538	0					
ANR	17769	UnaryOperationExpression	* v		16538	1					
ANR	17770	UnaryOperator	*		16538	0					
ANR	17771	Identifier	v		16538	1					
ANR	17772	CompoundStatement		209:7:5355:5355	16538	1					
ANR	17773	ExpressionStatement	"get_sha1 ( & p_sha1 [ OLD ] , s + 6 , u )"	636:2:17764:17796	16538	0	True				
ANR	17774	CallExpression	"get_sha1 ( & p_sha1 [ OLD ] , s + 6 , u )"		16538	0					
ANR	17775	Callee	get_sha1		16538	0					
ANR	17776	Identifier	get_sha1		16538	0					
ANR	17777	ArgumentList	& p_sha1 [ OLD ]		16538	1					
ANR	17778	Argument	& p_sha1 [ OLD ]		16538	0					
ANR	17779	UnaryOperationExpression	& p_sha1 [ OLD ]		16538	0					
ANR	17780	UnaryOperator	&		16538	0					
ANR	17781	ArrayIndexing	p_sha1 [ OLD ]		16538	1					
ANR	17782	Identifier	p_sha1		16538	0					
ANR	17783	Identifier	OLD		16538	1					
ANR	17784	Argument	s + 6		16538	1					
ANR	17785	AdditiveExpression	s + 6		16538	0		+			
ANR	17786	Identifier	s		16538	0					
ANR	17787	PrimaryExpression	6		16538	1					
ANR	17788	Argument	u		16538	2					
ANR	17789	Identifier	u		16538	0					
ANR	17790	ExpressionStatement	"get_sha1 ( & p_sha1 [ NEW ] , u + 2 , v )"	637:2:17800:17832	16538	1	True				
ANR	17791	CallExpression	"get_sha1 ( & p_sha1 [ NEW ] , u + 2 , v )"		16538	0					
ANR	17792	Callee	get_sha1		16538	0					
ANR	17793	Identifier	get_sha1		16538	0					
ANR	17794	ArgumentList	& p_sha1 [ NEW ]		16538	1					
ANR	17795	Argument	& p_sha1 [ NEW ]		16538	0					
ANR	17796	UnaryOperationExpression	& p_sha1 [ NEW ]		16538	0					
ANR	17797	UnaryOperator	&		16538	0					
ANR	17798	ArrayIndexing	p_sha1 [ NEW ]		16538	1					
ANR	17799	Identifier	p_sha1		16538	0					
ANR	17800	Identifier	NEW		16538	1					
ANR	17801	Argument	u + 2		16538	1					
ANR	17802	AdditiveExpression	u + 2		16538	0		+			
ANR	17803	Identifier	u		16538	0					
ANR	17804	PrimaryExpression	2		16538	1					
ANR	17805	Argument	v		16538	2					
ANR	17806	Identifier	v		16538	0					
ANR	17807	ExpressionStatement	p_says_nonexistent [ OLD ] = sha1_says_nonexistent ( p_sha1 [ OLD ] )	638:2:17836:17897	16538	2	True				
ANR	17808	AssignmentExpression	p_says_nonexistent [ OLD ] = sha1_says_nonexistent ( p_sha1 [ OLD ] )		16538	0		=			
ANR	17809	ArrayIndexing	p_says_nonexistent [ OLD ]		16538	0					
ANR	17810	Identifier	p_says_nonexistent		16538	0					
ANR	17811	Identifier	OLD		16538	1					
ANR	17812	CallExpression	sha1_says_nonexistent ( p_sha1 [ OLD ] )		16538	1					
ANR	17813	Callee	sha1_says_nonexistent		16538	0					
ANR	17814	Identifier	sha1_says_nonexistent		16538	0					
ANR	17815	ArgumentList	p_sha1 [ OLD ]		16538	1					
ANR	17816	Argument	p_sha1 [ OLD ]		16538	0					
ANR	17817	ArrayIndexing	p_sha1 [ OLD ]		16538	0					
ANR	17818	Identifier	p_sha1		16538	0					
ANR	17819	Identifier	OLD		16538	1					
ANR	17820	ExpressionStatement	p_says_nonexistent [ NEW ] = sha1_says_nonexistent ( p_sha1 [ NEW ] )	639:2:17901:17962	16538	3	True				
ANR	17821	AssignmentExpression	p_says_nonexistent [ NEW ] = sha1_says_nonexistent ( p_sha1 [ NEW ] )		16538	0		=			
ANR	17822	ArrayIndexing	p_says_nonexistent [ NEW ]		16538	0					
ANR	17823	Identifier	p_says_nonexistent		16538	0					
ANR	17824	Identifier	NEW		16538	1					
ANR	17825	CallExpression	sha1_says_nonexistent ( p_sha1 [ NEW ] )		16538	1					
ANR	17826	Callee	sha1_says_nonexistent		16538	0					
ANR	17827	Identifier	sha1_says_nonexistent		16538	0					
ANR	17828	ArgumentList	p_sha1 [ NEW ]		16538	1					
ANR	17829	Argument	p_sha1 [ NEW ]		16538	0					
ANR	17830	ArrayIndexing	p_sha1 [ NEW ]		16538	0					
ANR	17831	Identifier	p_sha1		16538	0					
ANR	17832	Identifier	NEW		16538	1					
ANR	17833	IfStatement	if ( * ( v = skip_spaces ( v ) ) )		16538	4					
ANR	17834	Condition	* ( v = skip_spaces ( v ) )	640:6:17970:17991	16538	0	True				
ANR	17835	UnaryOperationExpression	* ( v = skip_spaces ( v ) )		16538	0					
ANR	17836	UnaryOperator	*		16538	0					
ANR	17837	AssignmentExpression	v = skip_spaces ( v )		16538	1		=			
ANR	17838	Identifier	v		16538	0					
ANR	17839	CallExpression	skip_spaces ( v )		16538	1					
ANR	17840	Callee	skip_spaces		16538	0					
ANR	17841	Identifier	skip_spaces		16538	0					
ANR	17842	ArgumentList	v		16538	1					
ANR	17843	Argument	v		16538	0					
ANR	17844	Identifier	v		16538	0					
ANR	17845	ExpressionStatement	p_mode [ OLD ] = p_mode [ NEW ] = fetchmode ( v )	641:4:17998:18039	16538	1	True				
ANR	17846	AssignmentExpression	p_mode [ OLD ] = p_mode [ NEW ] = fetchmode ( v )		16538	0		=			
ANR	17847	ArrayIndexing	p_mode [ OLD ]		16538	0					
ANR	17848	Identifier	p_mode		16538	0					
ANR	17849	Identifier	OLD		16538	1					
ANR	17850	AssignmentExpression	p_mode [ NEW ] = fetchmode ( v )		16538	1		=			
ANR	17851	ArrayIndexing	p_mode [ NEW ]		16538	0					
ANR	17852	Identifier	p_mode		16538	0					
ANR	17853	Identifier	NEW		16538	1					
ANR	17854	CallExpression	fetchmode ( v )		16538	1					
ANR	17855	Callee	fetchmode		16538	0					
ANR	17856	Identifier	fetchmode		16538	0					
ANR	17857	ArgumentList	v		16538	1					
ANR	17858	Argument	v		16538	0					
ANR	17859	Identifier	v		16538	0					
ANR	17860	ExpressionStatement	extended_headers = true	642:2:18043:18066	16538	5	True				
ANR	17861	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	17862	Identifier	extended_headers		16538	0					
ANR	17863	Identifier	true		16538	1					
ANR	17864	ElseStatement	else		16538	0					
ANR	17865	IfStatement	"if ( p_git_diff && strnEQ ( s , ""old mode "" , 9 ) )"		16538	0					
ANR	17866	Condition	"p_git_diff && strnEQ ( s , ""old mode "" , 9 )"	645:10:18092:18131	16538	0	True				
ANR	17867	AndExpression	"p_git_diff && strnEQ ( s , ""old mode "" , 9 )"		16538	0		&&			
ANR	17868	Identifier	p_git_diff		16538	0					
ANR	17869	CallExpression	"strnEQ ( s , ""old mode "" , 9 )"		16538	1					
ANR	17870	Callee	strnEQ		16538	0					
ANR	17871	Identifier	strnEQ		16538	0					
ANR	17872	ArgumentList	s		16538	1					
ANR	17873	Argument	s		16538	0					
ANR	17874	Identifier	s		16538	0					
ANR	17875	Argument	"""old mode """		16538	1					
ANR	17876	PrimaryExpression	"""old mode """		16538	0					
ANR	17877	Argument	9		16538	2					
ANR	17878	PrimaryExpression	9		16538	0					
ANR	17879	CompoundStatement		220:3:5732:5732	16538	1					
ANR	17880	ExpressionStatement	p_mode [ OLD ] = fetchmode ( s + 9 )	647:5:18144:18175	16538	0	True				
ANR	17881	AssignmentExpression	p_mode [ OLD ] = fetchmode ( s + 9 )		16538	0		=			
ANR	17882	ArrayIndexing	p_mode [ OLD ]		16538	0					
ANR	17883	Identifier	p_mode		16538	0					
ANR	17884	Identifier	OLD		16538	1					
ANR	17885	CallExpression	fetchmode ( s + 9 )		16538	1					
ANR	17886	Callee	fetchmode		16538	0					
ANR	17887	Identifier	fetchmode		16538	0					
ANR	17888	ArgumentList	s + 9		16538	1					
ANR	17889	Argument	s + 9		16538	0					
ANR	17890	AdditiveExpression	s + 9		16538	0		+			
ANR	17891	Identifier	s		16538	0					
ANR	17892	PrimaryExpression	9		16538	1					
ANR	17893	ExpressionStatement	extended_headers = true	648:5:18182:18205	16538	1	True				
ANR	17894	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	17895	Identifier	extended_headers		16538	0					
ANR	17896	Identifier	true		16538	1					
ANR	17897	ElseStatement	else		16538	0					
ANR	17898	IfStatement	"if ( p_git_diff && strnEQ ( s , ""new mode "" , 9 ) )"		16538	0					
ANR	17899	Condition	"p_git_diff && strnEQ ( s , ""new mode "" , 9 )"	650:10:18222:18261	16538	0	True				
ANR	17900	AndExpression	"p_git_diff && strnEQ ( s , ""new mode "" , 9 )"		16538	0		&&			
ANR	17901	Identifier	p_git_diff		16538	0					
ANR	17902	CallExpression	"strnEQ ( s , ""new mode "" , 9 )"		16538	1					
ANR	17903	Callee	strnEQ		16538	0					
ANR	17904	Identifier	strnEQ		16538	0					
ANR	17905	ArgumentList	s		16538	1					
ANR	17906	Argument	s		16538	0					
ANR	17907	Identifier	s		16538	0					
ANR	17908	Argument	"""new mode """		16538	1					
ANR	17909	PrimaryExpression	"""new mode """		16538	0					
ANR	17910	Argument	9		16538	2					
ANR	17911	PrimaryExpression	9		16538	0					
ANR	17912	CompoundStatement		225:3:5862:5862	16538	1					
ANR	17913	ExpressionStatement	p_mode [ NEW ] = fetchmode ( s + 9 )	652:5:18274:18305	16538	0	True				
ANR	17914	AssignmentExpression	p_mode [ NEW ] = fetchmode ( s + 9 )		16538	0		=			
ANR	17915	ArrayIndexing	p_mode [ NEW ]		16538	0					
ANR	17916	Identifier	p_mode		16538	0					
ANR	17917	Identifier	NEW		16538	1					
ANR	17918	CallExpression	fetchmode ( s + 9 )		16538	1					
ANR	17919	Callee	fetchmode		16538	0					
ANR	17920	Identifier	fetchmode		16538	0					
ANR	17921	ArgumentList	s + 9		16538	1					
ANR	17922	Argument	s + 9		16538	0					
ANR	17923	AdditiveExpression	s + 9		16538	0		+			
ANR	17924	Identifier	s		16538	0					
ANR	17925	PrimaryExpression	9		16538	1					
ANR	17926	ExpressionStatement	extended_headers = true	653:5:18312:18335	16538	1	True				
ANR	17927	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	17928	Identifier	extended_headers		16538	0					
ANR	17929	Identifier	true		16538	1					
ANR	17930	ElseStatement	else		16538	0					
ANR	17931	IfStatement	"if ( p_git_diff && strnEQ ( s , ""deleted file mode "" , 18 ) )"		16538	0					
ANR	17932	Condition	"p_git_diff && strnEQ ( s , ""deleted file mode "" , 18 )"	655:10:18352:18401	16538	0	True				
ANR	17933	AndExpression	"p_git_diff && strnEQ ( s , ""deleted file mode "" , 18 )"		16538	0		&&			
ANR	17934	Identifier	p_git_diff		16538	0					
ANR	17935	CallExpression	"strnEQ ( s , ""deleted file mode "" , 18 )"		16538	1					
ANR	17936	Callee	strnEQ		16538	0					
ANR	17937	Identifier	strnEQ		16538	0					
ANR	17938	ArgumentList	s		16538	1					
ANR	17939	Argument	s		16538	0					
ANR	17940	Identifier	s		16538	0					
ANR	17941	Argument	"""deleted file mode """		16538	1					
ANR	17942	PrimaryExpression	"""deleted file mode """		16538	0					
ANR	17943	Argument	18		16538	2					
ANR	17944	PrimaryExpression	18		16538	0					
ANR	17945	CompoundStatement		230:3:6002:6002	16538	1					
ANR	17946	ExpressionStatement	p_mode [ OLD ] = fetchmode ( s + 18 )	657:5:18414:18446	16538	0	True				
ANR	17947	AssignmentExpression	p_mode [ OLD ] = fetchmode ( s + 18 )		16538	0		=			
ANR	17948	ArrayIndexing	p_mode [ OLD ]		16538	0					
ANR	17949	Identifier	p_mode		16538	0					
ANR	17950	Identifier	OLD		16538	1					
ANR	17951	CallExpression	fetchmode ( s + 18 )		16538	1					
ANR	17952	Callee	fetchmode		16538	0					
ANR	17953	Identifier	fetchmode		16538	0					
ANR	17954	ArgumentList	s + 18		16538	1					
ANR	17955	Argument	s + 18		16538	0					
ANR	17956	AdditiveExpression	s + 18		16538	0		+			
ANR	17957	Identifier	s		16538	0					
ANR	17958	PrimaryExpression	18		16538	1					
ANR	17959	ExpressionStatement	p_says_nonexistent [ NEW ] = 2	658:5:18453:18480	16538	1	True				
ANR	17960	AssignmentExpression	p_says_nonexistent [ NEW ] = 2		16538	0		=			
ANR	17961	ArrayIndexing	p_says_nonexistent [ NEW ]		16538	0					
ANR	17962	Identifier	p_says_nonexistent		16538	0					
ANR	17963	Identifier	NEW		16538	1					
ANR	17964	PrimaryExpression	2		16538	1					
ANR	17965	ExpressionStatement	extended_headers = true	659:5:18487:18510	16538	2	True				
ANR	17966	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	17967	Identifier	extended_headers		16538	0					
ANR	17968	Identifier	true		16538	1					
ANR	17969	ElseStatement	else		16538	0					
ANR	17970	IfStatement	"if ( p_git_diff && strnEQ ( s , ""new file mode "" , 14 ) )"		16538	0					
ANR	17971	Condition	"p_git_diff && strnEQ ( s , ""new file mode "" , 14 )"	661:10:18527:18572	16538	0	True				
ANR	17972	AndExpression	"p_git_diff && strnEQ ( s , ""new file mode "" , 14 )"		16538	0		&&			
ANR	17973	Identifier	p_git_diff		16538	0					
ANR	17974	CallExpression	"strnEQ ( s , ""new file mode "" , 14 )"		16538	1					
ANR	17975	Callee	strnEQ		16538	0					
ANR	17976	Identifier	strnEQ		16538	0					
ANR	17977	ArgumentList	s		16538	1					
ANR	17978	Argument	s		16538	0					
ANR	17979	Identifier	s		16538	0					
ANR	17980	Argument	"""new file mode """		16538	1					
ANR	17981	PrimaryExpression	"""new file mode """		16538	0					
ANR	17982	Argument	14		16538	2					
ANR	17983	PrimaryExpression	14		16538	0					
ANR	17984	CompoundStatement		236:3:6173:6173	16538	1					
ANR	17985	ExpressionStatement	p_mode [ NEW ] = fetchmode ( s + 14 )	663:5:18585:18617	16538	0	True				
ANR	17986	AssignmentExpression	p_mode [ NEW ] = fetchmode ( s + 14 )		16538	0		=			
ANR	17987	ArrayIndexing	p_mode [ NEW ]		16538	0					
ANR	17988	Identifier	p_mode		16538	0					
ANR	17989	Identifier	NEW		16538	1					
ANR	17990	CallExpression	fetchmode ( s + 14 )		16538	1					
ANR	17991	Callee	fetchmode		16538	0					
ANR	17992	Identifier	fetchmode		16538	0					
ANR	17993	ArgumentList	s + 14		16538	1					
ANR	17994	Argument	s + 14		16538	0					
ANR	17995	AdditiveExpression	s + 14		16538	0		+			
ANR	17996	Identifier	s		16538	0					
ANR	17997	PrimaryExpression	14		16538	1					
ANR	17998	ExpressionStatement	p_says_nonexistent [ OLD ] = 2	664:5:18624:18651	16538	1	True				
ANR	17999	AssignmentExpression	p_says_nonexistent [ OLD ] = 2		16538	0		=			
ANR	18000	ArrayIndexing	p_says_nonexistent [ OLD ]		16538	0					
ANR	18001	Identifier	p_says_nonexistent		16538	0					
ANR	18002	Identifier	OLD		16538	1					
ANR	18003	PrimaryExpression	2		16538	1					
ANR	18004	ExpressionStatement	extended_headers = true	665:5:18658:18681	16538	2	True				
ANR	18005	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	18006	Identifier	extended_headers		16538	0					
ANR	18007	Identifier	true		16538	1					
ANR	18008	ElseStatement	else		16538	0					
ANR	18009	IfStatement	"if ( p_git_diff && strnEQ ( s , ""rename from "" , 12 ) )"		16538	0					
ANR	18010	Condition	"p_git_diff && strnEQ ( s , ""rename from "" , 12 )"	667:10:18698:18741	16538	0	True				
ANR	18011	AndExpression	"p_git_diff && strnEQ ( s , ""rename from "" , 12 )"		16538	0		&&			
ANR	18012	Identifier	p_git_diff		16538	0					
ANR	18013	CallExpression	"strnEQ ( s , ""rename from "" , 12 )"		16538	1					
ANR	18014	Callee	strnEQ		16538	0					
ANR	18015	Identifier	strnEQ		16538	0					
ANR	18016	ArgumentList	s		16538	1					
ANR	18017	Argument	s		16538	0					
ANR	18018	Identifier	s		16538	0					
ANR	18019	Argument	"""rename from """		16538	1					
ANR	18020	PrimaryExpression	"""rename from """		16538	0					
ANR	18021	Argument	12		16538	2					
ANR	18022	PrimaryExpression	12		16538	0					
ANR	18023	CompoundStatement		242:3:6342:6342	16538	1					
ANR	18024	ExpressionStatement	p_rename [ OLD ] = true	671:5:18870:18890	16538	0	True				
ANR	18025	AssignmentExpression	p_rename [ OLD ] = true		16538	0		=			
ANR	18026	ArrayIndexing	p_rename [ OLD ]		16538	0					
ANR	18027	Identifier	p_rename		16538	0					
ANR	18028	Identifier	OLD		16538	1					
ANR	18029	Identifier	true		16538	1					
ANR	18030	ExpressionStatement	extended_headers = true	672:5:18897:18920	16538	1	True				
ANR	18031	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	18032	Identifier	extended_headers		16538	0					
ANR	18033	Identifier	true		16538	1					
ANR	18034	ElseStatement	else		16538	0					
ANR	18035	IfStatement	"if ( p_git_diff && strnEQ ( s , ""rename to "" , 10 ) )"		16538	0					
ANR	18036	Condition	"p_git_diff && strnEQ ( s , ""rename to "" , 10 )"	674:10:18937:18978	16538	0	True				
ANR	18037	AndExpression	"p_git_diff && strnEQ ( s , ""rename to "" , 10 )"		16538	0		&&			
ANR	18038	Identifier	p_git_diff		16538	0					
ANR	18039	CallExpression	"strnEQ ( s , ""rename to "" , 10 )"		16538	1					
ANR	18040	Callee	strnEQ		16538	0					
ANR	18041	Identifier	strnEQ		16538	0					
ANR	18042	ArgumentList	s		16538	1					
ANR	18043	Argument	s		16538	0					
ANR	18044	Identifier	s		16538	0					
ANR	18045	Argument	"""rename to """		16538	1					
ANR	18046	PrimaryExpression	"""rename to """		16538	0					
ANR	18047	Argument	10		16538	2					
ANR	18048	PrimaryExpression	10		16538	0					
ANR	18049	CompoundStatement		249:3:6579:6579	16538	1					
ANR	18050	ExpressionStatement	p_rename [ NEW ] = true	678:5:19107:19127	16538	0	True				
ANR	18051	AssignmentExpression	p_rename [ NEW ] = true		16538	0		=			
ANR	18052	ArrayIndexing	p_rename [ NEW ]		16538	0					
ANR	18053	Identifier	p_rename		16538	0					
ANR	18054	Identifier	NEW		16538	1					
ANR	18055	Identifier	true		16538	1					
ANR	18056	ExpressionStatement	extended_headers = true	679:5:19134:19157	16538	1	True				
ANR	18057	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	18058	Identifier	extended_headers		16538	0					
ANR	18059	Identifier	true		16538	1					
ANR	18060	ElseStatement	else		16538	0					
ANR	18061	IfStatement	"if ( p_git_diff && strnEQ ( s , ""copy from "" , 10 ) )"		16538	0					
ANR	18062	Condition	"p_git_diff && strnEQ ( s , ""copy from "" , 10 )"	681:10:19174:19215	16538	0	True				
ANR	18063	AndExpression	"p_git_diff && strnEQ ( s , ""copy from "" , 10 )"		16538	0		&&			
ANR	18064	Identifier	p_git_diff		16538	0					
ANR	18065	CallExpression	"strnEQ ( s , ""copy from "" , 10 )"		16538	1					
ANR	18066	Callee	strnEQ		16538	0					
ANR	18067	Identifier	strnEQ		16538	0					
ANR	18068	ArgumentList	s		16538	1					
ANR	18069	Argument	s		16538	0					
ANR	18070	Identifier	s		16538	0					
ANR	18071	Argument	"""copy from """		16538	1					
ANR	18072	PrimaryExpression	"""copy from """		16538	0					
ANR	18073	Argument	10		16538	2					
ANR	18074	PrimaryExpression	10		16538	0					
ANR	18075	CompoundStatement		256:3:6816:6816	16538	1					
ANR	18076	ExpressionStatement	p_copy [ OLD ] = true	685:5:19344:19362	16538	0	True				
ANR	18077	AssignmentExpression	p_copy [ OLD ] = true		16538	0		=			
ANR	18078	ArrayIndexing	p_copy [ OLD ]		16538	0					
ANR	18079	Identifier	p_copy		16538	0					
ANR	18080	Identifier	OLD		16538	1					
ANR	18081	Identifier	true		16538	1					
ANR	18082	ExpressionStatement	extended_headers = true	686:5:19369:19392	16538	1	True				
ANR	18083	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	18084	Identifier	extended_headers		16538	0					
ANR	18085	Identifier	true		16538	1					
ANR	18086	ElseStatement	else		16538	0					
ANR	18087	IfStatement	"if ( p_git_diff && strnEQ ( s , ""copy to "" , 8 ) )"		16538	0					
ANR	18088	Condition	"p_git_diff && strnEQ ( s , ""copy to "" , 8 )"	688:10:19409:19447	16538	0	True				
ANR	18089	AndExpression	"p_git_diff && strnEQ ( s , ""copy to "" , 8 )"		16538	0		&&			
ANR	18090	Identifier	p_git_diff		16538	0					
ANR	18091	CallExpression	"strnEQ ( s , ""copy to "" , 8 )"		16538	1					
ANR	18092	Callee	strnEQ		16538	0					
ANR	18093	Identifier	strnEQ		16538	0					
ANR	18094	ArgumentList	s		16538	1					
ANR	18095	Argument	s		16538	0					
ANR	18096	Identifier	s		16538	0					
ANR	18097	Argument	"""copy to """		16538	1					
ANR	18098	PrimaryExpression	"""copy to """		16538	0					
ANR	18099	Argument	8		16538	2					
ANR	18100	PrimaryExpression	8		16538	0					
ANR	18101	CompoundStatement		263:3:7048:7048	16538	1					
ANR	18102	ExpressionStatement	p_copy [ NEW ] = true	692:5:19576:19594	16538	0	True				
ANR	18103	AssignmentExpression	p_copy [ NEW ] = true		16538	0		=			
ANR	18104	ArrayIndexing	p_copy [ NEW ]		16538	0					
ANR	18105	Identifier	p_copy		16538	0					
ANR	18106	Identifier	NEW		16538	1					
ANR	18107	Identifier	true		16538	1					
ANR	18108	ExpressionStatement	extended_headers = true	693:5:19601:19624	16538	1	True				
ANR	18109	AssignmentExpression	extended_headers = true		16538	0		=			
ANR	18110	Identifier	extended_headers		16538	0					
ANR	18111	Identifier	true		16538	1					
ANR	18112	ElseStatement	else		16538	0					
ANR	18113	IfStatement	"if ( p_git_diff && strnEQ ( s , ""GIT binary patch"" , 16 ) )"		16538	0					
ANR	18114	Condition	"p_git_diff && strnEQ ( s , ""GIT binary patch"" , 16 )"	695:10:19641:19688	16538	0	True				
ANR	18115	AndExpression	"p_git_diff && strnEQ ( s , ""GIT binary patch"" , 16 )"		16538	0		&&			
ANR	18116	Identifier	p_git_diff		16538	0					
ANR	18117	CallExpression	"strnEQ ( s , ""GIT binary patch"" , 16 )"		16538	1					
ANR	18118	Callee	strnEQ		16538	0					
ANR	18119	Identifier	strnEQ		16538	0					
ANR	18120	ArgumentList	s		16538	1					
ANR	18121	Argument	s		16538	0					
ANR	18122	Identifier	s		16538	0					
ANR	18123	Argument	"""GIT binary patch"""		16538	1					
ANR	18124	PrimaryExpression	"""GIT binary patch"""		16538	0					
ANR	18125	Argument	16		16538	2					
ANR	18126	PrimaryExpression	16		16538	0					
ANR	18127	CompoundStatement		270:3:7289:7289	16538	1					
ANR	18128	ExpressionStatement	p_start = this_line	697:5:19701:19720	16538	0	True				
ANR	18129	AssignmentExpression	p_start = this_line		16538	0		=			
ANR	18130	Identifier	p_start		16538	0					
ANR	18131	Identifier	this_line		16538	1					
ANR	18132	ExpressionStatement	p_sline = p_input_line	698:5:19727:19749	16538	1	True				
ANR	18133	AssignmentExpression	p_sline = p_input_line		16538	0		=			
ANR	18134	Identifier	p_sline		16538	0					
ANR	18135	Identifier	p_input_line		16538	1					
ANR	18136	ExpressionStatement	retval = GIT_BINARY_DIFF	699:5:19756:19780	16538	2	True				
ANR	18137	AssignmentExpression	retval = GIT_BINARY_DIFF		16538	0		=			
ANR	18138	Identifier	retval		16538	0					
ANR	18139	Identifier	GIT_BINARY_DIFF		16538	1					
ANR	18140	GotoStatement	goto scan_exit ;	700:5:19787:19801	16538	3	True				
ANR	18141	Identifier	scan_exit		16538	0					
ANR	18142	ElseStatement	else		16538	0					
ANR	18143	CompoundStatement		277:3:7412:7412	16538	0					
ANR	18144	ForStatement	for ( t = s ; t [ 0 ] == '-' && t [ 1 ] == ' ' ; t += 2 )		16538	0					
ANR	18145	ForInit	t = s ;	704:10:19829:19834	16538	0	True				
ANR	18146	AssignmentExpression	t = s		16538	0		=			
ANR	18147	Identifier	t		16538	0					
ANR	18148	Identifier	s		16538	1					
ANR	18149	Condition	t [ 0 ] == '-' && t [ 1 ] == ' '	704:18:19837:19862	16538	1	True				
ANR	18150	AndExpression	t [ 0 ] == '-' && t [ 1 ] == ' '		16538	0		&&			
ANR	18151	EqualityExpression	t [ 0 ] == '-'		16538	0		==			
ANR	18152	ArrayIndexing	t [ 0 ]		16538	0					
ANR	18153	Identifier	t		16538	0					
ANR	18154	PrimaryExpression	0		16538	1					
ANR	18155	PrimaryExpression	'-'		16538	1					
ANR	18156	EqualityExpression	t [ 1 ] == ' '		16538	1		==			
ANR	18157	ArrayIndexing	t [ 1 ]		16538	0					
ANR	18158	Identifier	t		16538	0					
ANR	18159	PrimaryExpression	1		16538	1					
ANR	18160	PrimaryExpression	' '		16538	1					
ANR	18161	AssignmentExpression	t += 2	704:47:19866:19871	16538	2	True	+=			
ANR	18162	Identifier	t		16538	0					
ANR	18163	PrimaryExpression	2		16538	1					
ANR	18164	ExpressionStatement		705:24:19898:19898	16538	3	True				
ANR	18165	IfStatement	"if ( strnEQ ( t , ""--- "" , 4 ) )"		16538	1					
ANR	18166	Condition	"strnEQ ( t , ""--- "" , 4 )"	706:9:19909:19928	16538	0	True				
ANR	18167	CallExpression	"strnEQ ( t , ""--- "" , 4 )"		16538	0					
ANR	18168	Callee	strnEQ		16538	0					
ANR	18169	Identifier	strnEQ		16538	0					
ANR	18170	ArgumentList	t		16538	1					
ANR	18171	Argument	t		16538	0					
ANR	18172	Identifier	t		16538	0					
ANR	18173	Argument	"""--- """		16538	1					
ANR	18174	PrimaryExpression	"""--- """		16538	0					
ANR	18175	Argument	4		16538	2					
ANR	18176	PrimaryExpression	4		16538	0					
ANR	18177	CompoundStatement		282:2:7537:7562	16538	1					
ANR	18178	IdentifierDeclStatement	struct timespec timestamp ;	708:2:19942:19967	16538	0	True				
ANR	18179	IdentifierDecl	timestamp		16538	0					
ANR	18180	IdentifierDeclType	struct timespec		16538	0					
ANR	18181	Identifier	timestamp		16538	1					
ANR	18182	ExpressionStatement	timestamp . tv_sec = - 1	709:2:19971:19992	16538	1	True				
ANR	18183	AssignmentExpression	timestamp . tv_sec = - 1		16538	0		=			
ANR	18184	MemberAccess	timestamp . tv_sec		16538	0					
ANR	18185	Identifier	timestamp		16538	0					
ANR	18186	Identifier	tv_sec		16538	1					
ANR	18187	UnaryOperationExpression	- 1		16538	1					
ANR	18188	UnaryOperator	-		16538	0					
ANR	18189	PrimaryExpression	1		16538	1					
ANR	18190	ExpressionStatement	"fetchname ( t + 4 , strippath , & p_name [ NEW ] , & p_timestr [ NEW ] , & timestamp )"	710:2:19996:20071	16538	2	True				
ANR	18191	CallExpression	"fetchname ( t + 4 , strippath , & p_name [ NEW ] , & p_timestr [ NEW ] , & timestamp )"		16538	0					
ANR	18192	Callee	fetchname		16538	0					
ANR	18193	Identifier	fetchname		16538	0					
ANR	18194	ArgumentList	t + 4		16538	1					
ANR	18195	Argument	t + 4		16538	0					
ANR	18196	AdditiveExpression	t + 4		16538	0		+			
ANR	18197	Identifier	t		16538	0					
ANR	18198	PrimaryExpression	4		16538	1					
ANR	18199	Argument	strippath		16538	1					
ANR	18200	Identifier	strippath		16538	0					
ANR	18201	Argument	& p_name [ NEW ]		16538	2					
ANR	18202	UnaryOperationExpression	& p_name [ NEW ]		16538	0					
ANR	18203	UnaryOperator	&		16538	0					
ANR	18204	ArrayIndexing	p_name [ NEW ]		16538	1					
ANR	18205	Identifier	p_name		16538	0					
ANR	18206	Identifier	NEW		16538	1					
ANR	18207	Argument	& p_timestr [ NEW ]		16538	3					
ANR	18208	UnaryOperationExpression	& p_timestr [ NEW ]		16538	0					
ANR	18209	UnaryOperator	&		16538	0					
ANR	18210	ArrayIndexing	p_timestr [ NEW ]		16538	1					
ANR	18211	Identifier	p_timestr		16538	0					
ANR	18212	Identifier	NEW		16538	1					
ANR	18213	Argument	& timestamp		16538	4					
ANR	18214	UnaryOperationExpression	& timestamp		16538	0					
ANR	18215	UnaryOperator	&		16538	0					
ANR	18216	Identifier	timestamp		16538	1					
ANR	18217	ExpressionStatement	need_header = false	712:2:20075:20094	16538	3	True				
ANR	18218	AssignmentExpression	need_header = false		16538	0		=			
ANR	18219	Identifier	need_header		16538	0					
ANR	18220	Identifier	false		16538	1					
ANR	18221	IfStatement	if ( timestamp . tv_sec != - 1 )		16538	4					
ANR	18222	Condition	timestamp . tv_sec != - 1	713:6:20102:20123	16538	0	True				
ANR	18223	EqualityExpression	timestamp . tv_sec != - 1		16538	0		!=			
ANR	18224	MemberAccess	timestamp . tv_sec		16538	0					
ANR	18225	Identifier	timestamp		16538	0					
ANR	18226	Identifier	tv_sec		16538	1					
ANR	18227	UnaryOperationExpression	- 1		16538	1					
ANR	18228	UnaryOperator	-		16538	0					
ANR	18229	PrimaryExpression	1		16538	1					
ANR	18230	CompoundStatement		288:4:7725:7725	16538	1					
ANR	18231	ExpressionStatement	p_timestamp [ NEW ] = timestamp	715:6:20138:20166	16538	0	True				
ANR	18232	AssignmentExpression	p_timestamp [ NEW ] = timestamp		16538	0		=			
ANR	18233	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	18234	Identifier	p_timestamp		16538	0					
ANR	18235	Identifier	NEW		16538	1					
ANR	18236	Identifier	timestamp		16538	1					
ANR	18237	ExpressionStatement	p_rfc934_nesting = ( t - s ) >> 1	716:6:20174:20205	16538	1	True				
ANR	18238	AssignmentExpression	p_rfc934_nesting = ( t - s ) >> 1		16538	0		=			
ANR	18239	Identifier	p_rfc934_nesting		16538	0					
ANR	18240	ShiftExpression	( t - s ) >> 1		16538	1		>>			
ANR	18241	AdditiveExpression	t - s		16538	0		-			
ANR	18242	Identifier	t		16538	0					
ANR	18243	Identifier	s		16538	1					
ANR	18244	PrimaryExpression	1		16538	1					
ANR	18245	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	718:2:20215:20254	16538	5	True				
ANR	18246	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		16538	0		=			
ANR	18247	Identifier	p_strip_trailing_cr		16538	0					
ANR	18248	Identifier	strip_trailing_cr		16538	1					
ANR	18249	IfStatement	if ( need_header )		16538	19					
ANR	18250	Condition	need_header	721:5:20275:20285	16538	0	True				
ANR	18251	Identifier	need_header		16538	0					
ANR	18252	ContinueStatement	continue ;	722:3:20291:20299	16538	1	True				
ANR	18253	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == ED_DIFF ) && first_command_line >= 0 && strEQ ( s , "".\\n"" ) )"		16538	20					
ANR	18254	Condition	"( diff_type == NO_DIFF || diff_type == ED_DIFF ) && first_command_line >= 0 && strEQ ( s , "".\\n"" )"	723:5:20306:20403	16538	0	True				
ANR	18255	AndExpression	"( diff_type == NO_DIFF || diff_type == ED_DIFF ) && first_command_line >= 0 && strEQ ( s , "".\\n"" )"		16538	0		&&			
ANR	18256	OrExpression	diff_type == NO_DIFF || diff_type == ED_DIFF		16538	0		||			
ANR	18257	EqualityExpression	diff_type == NO_DIFF		16538	0		==			
ANR	18258	Identifier	diff_type		16538	0					
ANR	18259	Identifier	NO_DIFF		16538	1					
ANR	18260	EqualityExpression	diff_type == ED_DIFF		16538	1		==			
ANR	18261	Identifier	diff_type		16538	0					
ANR	18262	Identifier	ED_DIFF		16538	1					
ANR	18263	AndExpression	"first_command_line >= 0 && strEQ ( s , "".\\n"" )"		16538	1		&&			
ANR	18264	RelationalExpression	first_command_line >= 0		16538	0		>=			
ANR	18265	Identifier	first_command_line		16538	0					
ANR	18266	PrimaryExpression	0		16538	1					
ANR	18267	CallExpression	"strEQ ( s , "".\\n"" )"		16538	1					
ANR	18268	Callee	strEQ		16538	0					
ANR	18269	Identifier	strEQ		16538	0					
ANR	18270	ArgumentList	s		16538	1					
ANR	18271	Argument	s		16538	0					
ANR	18272	Identifier	s		16538	0					
ANR	18273	Argument	""".\\n"""		16538	1					
ANR	18274	PrimaryExpression	""".\\n"""		16538	0					
ANR	18275	CompoundStatement		299:21:8002:8002	16538	1					
ANR	18276	ExpressionStatement	p_start = first_command_line	726:5:20414:20442	16538	0	True				
ANR	18277	AssignmentExpression	p_start = first_command_line		16538	0		=			
ANR	18278	Identifier	p_start		16538	0					
ANR	18279	Identifier	first_command_line		16538	1					
ANR	18280	ExpressionStatement	p_sline = fcl_line	727:5:20449:20467	16538	1	True				
ANR	18281	AssignmentExpression	p_sline = fcl_line		16538	0		=			
ANR	18282	Identifier	p_sline		16538	0					
ANR	18283	Identifier	fcl_line		16538	1					
ANR	18284	ExpressionStatement	retval = ED_DIFF	728:5:20474:20490	16538	2	True				
ANR	18285	AssignmentExpression	retval = ED_DIFF		16538	0		=			
ANR	18286	Identifier	retval		16538	0					
ANR	18287	Identifier	ED_DIFF		16538	1					
ANR	18288	GotoStatement	goto scan_exit ;	729:5:20497:20511	16538	3	True				
ANR	18289	Identifier	scan_exit		16538	0					
ANR	18290	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == UNI_DIFF ) && strnEQ ( s , ""@@ -"" , 4 ) )"		16538	21					
ANR	18291	Condition	"( diff_type == NO_DIFF || diff_type == UNI_DIFF ) && strnEQ ( s , ""@@ -"" , 4 )"	731:5:20521:20596	16538	0	True				
ANR	18292	AndExpression	"( diff_type == NO_DIFF || diff_type == UNI_DIFF ) && strnEQ ( s , ""@@ -"" , 4 )"		16538	0		&&			
ANR	18293	OrExpression	diff_type == NO_DIFF || diff_type == UNI_DIFF		16538	0		||			
ANR	18294	EqualityExpression	diff_type == NO_DIFF		16538	0		==			
ANR	18295	Identifier	diff_type		16538	0					
ANR	18296	Identifier	NO_DIFF		16538	1					
ANR	18297	EqualityExpression	diff_type == UNI_DIFF		16538	1		==			
ANR	18298	Identifier	diff_type		16538	0					
ANR	18299	Identifier	UNI_DIFF		16538	1					
ANR	18300	CallExpression	"strnEQ ( s , ""@@ -"" , 4 )"		16538	1					
ANR	18301	Callee	strnEQ		16538	0					
ANR	18302	Identifier	strnEQ		16538	0					
ANR	18303	ArgumentList	s		16538	1					
ANR	18304	Argument	s		16538	0					
ANR	18305	Identifier	s		16538	0					
ANR	18306	Argument	"""@@ -"""		16538	1					
ANR	18307	PrimaryExpression	"""@@ -"""		16538	0					
ANR	18308	Argument	4		16538	2					
ANR	18309	PrimaryExpression	4		16538	0					
ANR	18310	CompoundStatement		310:5:8289:8326	16538	1					
ANR	18311	IdentifierDeclStatement	struct timespec ti = p_timestamp [ OLD ] ;	736:5:20694:20731	16538	0	True				
ANR	18312	IdentifierDecl	ti = p_timestamp [ OLD ]		16538	0					
ANR	18313	IdentifierDeclType	struct timespec		16538	0					
ANR	18314	Identifier	ti		16538	1					
ANR	18315	AssignmentExpression	ti = p_timestamp [ OLD ]		16538	2		=			
ANR	18316	Identifier	ti		16538	0					
ANR	18317	ArrayIndexing	p_timestamp [ OLD ]		16538	1					
ANR	18318	Identifier	p_timestamp		16538	0					
ANR	18319	Identifier	OLD		16538	1					
ANR	18320	ExpressionStatement	p_timestamp [ OLD ] = p_timestamp [ NEW ]	737:5:20738:20773	16538	1	True				
ANR	18321	AssignmentExpression	p_timestamp [ OLD ] = p_timestamp [ NEW ]		16538	0		=			
ANR	18322	ArrayIndexing	p_timestamp [ OLD ]		16538	0					
ANR	18323	Identifier	p_timestamp		16538	0					
ANR	18324	Identifier	OLD		16538	1					
ANR	18325	ArrayIndexing	p_timestamp [ NEW ]		16538	1					
ANR	18326	Identifier	p_timestamp		16538	0					
ANR	18327	Identifier	NEW		16538	1					
ANR	18328	ExpressionStatement	p_timestamp [ NEW ] = ti	738:5:20780:20801	16538	2	True				
ANR	18329	AssignmentExpression	p_timestamp [ NEW ] = ti		16538	0		=			
ANR	18330	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	18331	Identifier	p_timestamp		16538	0					
ANR	18332	Identifier	NEW		16538	1					
ANR	18333	Identifier	ti		16538	1					
ANR	18334	ExpressionStatement	t = p_name [ OLD ]	739:5:20808:20823	16538	3	True				
ANR	18335	AssignmentExpression	t = p_name [ OLD ]		16538	0		=			
ANR	18336	Identifier	t		16538	0					
ANR	18337	ArrayIndexing	p_name [ OLD ]		16538	1					
ANR	18338	Identifier	p_name		16538	0					
ANR	18339	Identifier	OLD		16538	1					
ANR	18340	ExpressionStatement	p_name [ OLD ] = p_name [ NEW ]	740:5:20830:20855	16538	4	True				
ANR	18341	AssignmentExpression	p_name [ OLD ] = p_name [ NEW ]		16538	0		=			
ANR	18342	ArrayIndexing	p_name [ OLD ]		16538	0					
ANR	18343	Identifier	p_name		16538	0					
ANR	18344	Identifier	OLD		16538	1					
ANR	18345	ArrayIndexing	p_name [ NEW ]		16538	1					
ANR	18346	Identifier	p_name		16538	0					
ANR	18347	Identifier	NEW		16538	1					
ANR	18348	ExpressionStatement	p_name [ NEW ] = t	741:5:20862:20877	16538	5	True				
ANR	18349	AssignmentExpression	p_name [ NEW ] = t		16538	0		=			
ANR	18350	ArrayIndexing	p_name [ NEW ]		16538	0					
ANR	18351	Identifier	p_name		16538	0					
ANR	18352	Identifier	NEW		16538	1					
ANR	18353	Identifier	t		16538	1					
ANR	18354	ExpressionStatement	t = p_timestr [ OLD ]	742:5:20884:20902	16538	6	True				
ANR	18355	AssignmentExpression	t = p_timestr [ OLD ]		16538	0		=			
ANR	18356	Identifier	t		16538	0					
ANR	18357	ArrayIndexing	p_timestr [ OLD ]		16538	1					
ANR	18358	Identifier	p_timestr		16538	0					
ANR	18359	Identifier	OLD		16538	1					
ANR	18360	ExpressionStatement	p_timestr [ OLD ] = p_timestr [ NEW ]	743:5:20909:20940	16538	7	True				
ANR	18361	AssignmentExpression	p_timestr [ OLD ] = p_timestr [ NEW ]		16538	0		=			
ANR	18362	ArrayIndexing	p_timestr [ OLD ]		16538	0					
ANR	18363	Identifier	p_timestr		16538	0					
ANR	18364	Identifier	OLD		16538	1					
ANR	18365	ArrayIndexing	p_timestr [ NEW ]		16538	1					
ANR	18366	Identifier	p_timestr		16538	0					
ANR	18367	Identifier	NEW		16538	1					
ANR	18368	ExpressionStatement	p_timestr [ NEW ] = t	744:5:20947:20965	16538	8	True				
ANR	18369	AssignmentExpression	p_timestr [ NEW ] = t		16538	0		=			
ANR	18370	ArrayIndexing	p_timestr [ NEW ]		16538	0					
ANR	18371	Identifier	p_timestr		16538	0					
ANR	18372	Identifier	NEW		16538	1					
ANR	18373	Identifier	t		16538	1					
ANR	18374	ExpressionStatement	s += 4	746:5:20973:20979	16538	9	True				
ANR	18375	AssignmentExpression	s += 4		16538	0		+=			
ANR	18376	Identifier	s		16538	0					
ANR	18377	PrimaryExpression	4		16538	1					
ANR	18378	IfStatement	if ( s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] ) )		16538	10					
ANR	18379	Condition	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )	747:9:20990:21019	16538	0	True				
ANR	18380	AndExpression	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )		16538	0		&&			
ANR	18381	EqualityExpression	s [ 0 ] == '0'		16538	0		==			
ANR	18382	ArrayIndexing	s [ 0 ]		16538	0					
ANR	18383	Identifier	s		16538	0					
ANR	18384	PrimaryExpression	0		16538	1					
ANR	18385	PrimaryExpression	'0'		16538	1					
ANR	18386	UnaryOperationExpression	! ISDIGIT ( s [ 1 ] )		16538	1					
ANR	18387	UnaryOperator	!		16538	0					
ANR	18388	CallExpression	ISDIGIT ( s [ 1 ] )		16538	1					
ANR	18389	Callee	ISDIGIT		16538	0					
ANR	18390	Identifier	ISDIGIT		16538	0					
ANR	18391	ArgumentList	s [ 1 ]		16538	1					
ANR	18392	Argument	s [ 1 ]		16538	0					
ANR	18393	ArrayIndexing	s [ 1 ]		16538	0					
ANR	18394	Identifier	s		16538	0					
ANR	18395	PrimaryExpression	1		16538	1					
ANR	18396	ExpressionStatement	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec	748:7:21029:21084	16538	1	True				
ANR	18397	AssignmentExpression	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec		16538	0		=			
ANR	18398	ArrayIndexing	p_says_nonexistent [ OLD ]		16538	0					
ANR	18399	Identifier	p_says_nonexistent		16538	0					
ANR	18400	Identifier	OLD		16538	1					
ANR	18401	AdditiveExpression	1 + ! p_timestamp [ OLD ] . tv_sec		16538	1		+			
ANR	18402	PrimaryExpression	1		16538	0					
ANR	18403	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18404	UnaryOperator	!		16538	0					
ANR	18405	MemberAccess	p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18406	ArrayIndexing	p_timestamp [ OLD ]		16538	0					
ANR	18407	Identifier	p_timestamp		16538	0					
ANR	18408	Identifier	OLD		16538	1					
ANR	18409	Identifier	tv_sec		16538	1					
ANR	18410	WhileStatement	while ( * s != ' ' && * s != '\\n' )		16538	11					
ANR	18411	Condition	* s != ' ' && * s != '\\n'	749:12:21098:21120	16538	0	True				
ANR	18412	AndExpression	* s != ' ' && * s != '\\n'		16538	0		&&			
ANR	18413	EqualityExpression	* s != ' '		16538	0		!=			
ANR	18414	UnaryOperationExpression	* s		16538	0					
ANR	18415	UnaryOperator	*		16538	0					
ANR	18416	Identifier	s		16538	1					
ANR	18417	PrimaryExpression	' '		16538	1					
ANR	18418	EqualityExpression	* s != '\\n'		16538	1		!=			
ANR	18419	UnaryOperationExpression	* s		16538	0					
ANR	18420	UnaryOperator	*		16538	0					
ANR	18421	Identifier	s		16538	1					
ANR	18422	PrimaryExpression	'\\n'		16538	1					
ANR	18423	ExpressionStatement	s ++	750:7:21130:21133	16538	1	True				
ANR	18424	PostIncDecOperationExpression	s ++		16538	0					
ANR	18425	Identifier	s		16538	0					
ANR	18426	IncDec	++		16538	1					
ANR	18427	WhileStatement	while ( * s == ' ' )		16538	12					
ANR	18428	Condition	* s == ' '	751:12:21147:21155	16538	0	True				
ANR	18429	EqualityExpression	* s == ' '		16538	0		==			
ANR	18430	UnaryOperationExpression	* s		16538	0					
ANR	18431	UnaryOperator	*		16538	0					
ANR	18432	Identifier	s		16538	1					
ANR	18433	PrimaryExpression	' '		16538	1					
ANR	18434	ExpressionStatement	s ++	752:7:21165:21168	16538	1	True				
ANR	18435	PostIncDecOperationExpression	s ++		16538	0					
ANR	18436	Identifier	s		16538	0					
ANR	18437	IncDec	++		16538	1					
ANR	18438	IfStatement	if ( s [ 0 ] == '+' && s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] ) )		16538	13					
ANR	18439	Condition	s [ 0 ] == '+' && s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] )	753:9:21179:21223	16538	0	True				
ANR	18440	AndExpression	s [ 0 ] == '+' && s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] )		16538	0		&&			
ANR	18441	EqualityExpression	s [ 0 ] == '+'		16538	0		==			
ANR	18442	ArrayIndexing	s [ 0 ]		16538	0					
ANR	18443	Identifier	s		16538	0					
ANR	18444	PrimaryExpression	0		16538	1					
ANR	18445	PrimaryExpression	'+'		16538	1					
ANR	18446	AndExpression	s [ 1 ] == '0' && ! ISDIGIT ( s [ 2 ] )		16538	1		&&			
ANR	18447	EqualityExpression	s [ 1 ] == '0'		16538	0		==			
ANR	18448	ArrayIndexing	s [ 1 ]		16538	0					
ANR	18449	Identifier	s		16538	0					
ANR	18450	PrimaryExpression	1		16538	1					
ANR	18451	PrimaryExpression	'0'		16538	1					
ANR	18452	UnaryOperationExpression	! ISDIGIT ( s [ 2 ] )		16538	1					
ANR	18453	UnaryOperator	!		16538	0					
ANR	18454	CallExpression	ISDIGIT ( s [ 2 ] )		16538	1					
ANR	18455	Callee	ISDIGIT		16538	0					
ANR	18456	Identifier	ISDIGIT		16538	0					
ANR	18457	ArgumentList	s [ 2 ]		16538	1					
ANR	18458	Argument	s [ 2 ]		16538	0					
ANR	18459	ArrayIndexing	s [ 2 ]		16538	0					
ANR	18460	Identifier	s		16538	0					
ANR	18461	PrimaryExpression	2		16538	1					
ANR	18462	ExpressionStatement	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec	754:7:21233:21288	16538	1	True				
ANR	18463	AssignmentExpression	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec		16538	0		=			
ANR	18464	ArrayIndexing	p_says_nonexistent [ NEW ]		16538	0					
ANR	18465	Identifier	p_says_nonexistent		16538	0					
ANR	18466	Identifier	NEW		16538	1					
ANR	18467	AdditiveExpression	1 + ! p_timestamp [ NEW ] . tv_sec		16538	1		+			
ANR	18468	PrimaryExpression	1		16538	0					
ANR	18469	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18470	UnaryOperator	!		16538	0					
ANR	18471	MemberAccess	p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18472	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	18473	Identifier	p_timestamp		16538	0					
ANR	18474	Identifier	NEW		16538	1					
ANR	18475	Identifier	tv_sec		16538	1					
ANR	18476	ExpressionStatement	p_indent = indent	755:5:21295:21312	16538	14	True				
ANR	18477	AssignmentExpression	p_indent = indent		16538	0		=			
ANR	18478	Identifier	p_indent		16538	0					
ANR	18479	Identifier	indent		16538	1					
ANR	18480	ExpressionStatement	p_start = this_line	756:5:21319:21338	16538	15	True				
ANR	18481	AssignmentExpression	p_start = this_line		16538	0		=			
ANR	18482	Identifier	p_start		16538	0					
ANR	18483	Identifier	this_line		16538	1					
ANR	18484	ExpressionStatement	p_sline = p_input_line	757:5:21345:21367	16538	16	True				
ANR	18485	AssignmentExpression	p_sline = p_input_line		16538	0		=			
ANR	18486	Identifier	p_sline		16538	0					
ANR	18487	Identifier	p_input_line		16538	1					
ANR	18488	ExpressionStatement	retval = UNI_DIFF	758:5:21374:21391	16538	17	True				
ANR	18489	AssignmentExpression	retval = UNI_DIFF		16538	0		=			
ANR	18490	Identifier	retval		16538	0					
ANR	18491	Identifier	UNI_DIFF		16538	1					
ANR	18492	IfStatement	if ( ! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header )		16538	18					
ANR	18493	Condition	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header	759:9:21402:21534	16538	0	True				
ANR	18494	AndExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header		16538	0		&&			
ANR	18495	UnaryOperationExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) )		16538	0					
ANR	18496	UnaryOperator	!		16538	0					
ANR	18497	AndExpression	( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec )		16538	1		&&			
ANR	18498	OrExpression	p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec		16538	0		||			
ANR	18499	ArrayIndexing	p_name [ OLD ]		16538	0					
ANR	18500	Identifier	p_name		16538	0					
ANR	18501	Identifier	OLD		16538	1					
ANR	18502	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18503	UnaryOperator	!		16538	0					
ANR	18504	MemberAccess	p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18505	ArrayIndexing	p_timestamp [ OLD ]		16538	0					
ANR	18506	Identifier	p_timestamp		16538	0					
ANR	18507	Identifier	OLD		16538	1					
ANR	18508	Identifier	tv_sec		16538	1					
ANR	18509	OrExpression	p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec		16538	1		||			
ANR	18510	ArrayIndexing	p_name [ NEW ]		16538	0					
ANR	18511	Identifier	p_name		16538	0					
ANR	18512	Identifier	NEW		16538	1					
ANR	18513	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18514	UnaryOperator	!		16538	0					
ANR	18515	MemberAccess	p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18516	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	18517	Identifier	p_timestamp		16538	0					
ANR	18518	Identifier	NEW		16538	1					
ANR	18519	Identifier	tv_sec		16538	1					
ANR	18520	AndExpression	! p_name [ INDEX ] && need_header		16538	1		&&			
ANR	18521	UnaryOperationExpression	! p_name [ INDEX ]		16538	0					
ANR	18522	UnaryOperator	!		16538	0					
ANR	18523	ArrayIndexing	p_name [ INDEX ]		16538	1					
ANR	18524	Identifier	p_name		16538	0					
ANR	18525	Identifier	INDEX		16538	1					
ANR	18526	Identifier	need_header		16538	1					
ANR	18527	CompoundStatement		337:2:9143:9180	16538	1					
ANR	18528	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	763:2:21548:21585	16538	0	True				
ANR	18529	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		16538	0					
ANR	18530	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		16538	0					
ANR	18531	Identifier	numbuf		16538	1					
ANR	18532	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		16538	2		+			
ANR	18533	Identifier	LINENUM_LENGTH_BOUND		16538	0					
ANR	18534	PrimaryExpression	1		16538	1					
ANR	18535	ExpressionStatement	"say ( ""missing header for unified diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"	764:2:21589:21691	16538	1	True				
ANR	18536	CallExpression	"say ( ""missing header for unified diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"		16538	0					
ANR	18537	Callee	say		16538	0					
ANR	18538	Identifier	say		16538	0					
ANR	18539	ArgumentList	"""missing header for unified diff at line %s of patch\\n"""		16538	1					
ANR	18540	Argument	"""missing header for unified diff at line %s of patch\\n"""		16538	0					
ANR	18541	PrimaryExpression	"""missing header for unified diff at line %s of patch\\n"""		16538	0					
ANR	18542	Argument	"format_linenum ( numbuf , p_sline )"		16538	1					
ANR	18543	CallExpression	"format_linenum ( numbuf , p_sline )"		16538	0					
ANR	18544	Callee	format_linenum		16538	0					
ANR	18545	Identifier	format_linenum		16538	0					
ANR	18546	ArgumentList	numbuf		16538	1					
ANR	18547	Argument	numbuf		16538	0					
ANR	18548	Identifier	numbuf		16538	0					
ANR	18549	Argument	p_sline		16538	1					
ANR	18550	Identifier	p_sline		16538	0					
ANR	18551	GotoStatement	goto scan_exit ;	767:5:21707:21721	16538	19	True				
ANR	18552	Identifier	scan_exit		16538	0					
ANR	18553	ExpressionStatement	"stars_this_line = strnEQ ( s , ""********"" , 8 )"	769:1:21727:21769	16538	22	True				
ANR	18554	AssignmentExpression	"stars_this_line = strnEQ ( s , ""********"" , 8 )"		16538	0		=			
ANR	18555	Identifier	stars_this_line		16538	0					
ANR	18556	CallExpression	"strnEQ ( s , ""********"" , 8 )"		16538	1					
ANR	18557	Callee	strnEQ		16538	0					
ANR	18558	Identifier	strnEQ		16538	0					
ANR	18559	ArgumentList	s		16538	1					
ANR	18560	Argument	s		16538	0					
ANR	18561	Identifier	s		16538	0					
ANR	18562	Argument	"""********"""		16538	1					
ANR	18563	PrimaryExpression	"""********"""		16538	0					
ANR	18564	Argument	8		16538	2					
ANR	18565	PrimaryExpression	8		16538	0					
ANR	18566	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF ) && stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 ) )"		16538	23					
ANR	18567	Condition	"( diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF ) && stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"	770:5:21776:21955	16538	0	True				
ANR	18568	AndExpression	"( diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF ) && stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"		16538	0		&&			
ANR	18569	OrExpression	diff_type == NO_DIFF || diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF		16538	0		||			
ANR	18570	EqualityExpression	diff_type == NO_DIFF		16538	0		==			
ANR	18571	Identifier	diff_type		16538	0					
ANR	18572	Identifier	NO_DIFF		16538	1					
ANR	18573	OrExpression	diff_type == CONTEXT_DIFF || diff_type == NEW_CONTEXT_DIFF		16538	1		||			
ANR	18574	EqualityExpression	diff_type == CONTEXT_DIFF		16538	0		==			
ANR	18575	Identifier	diff_type		16538	0					
ANR	18576	Identifier	CONTEXT_DIFF		16538	1					
ANR	18577	EqualityExpression	diff_type == NEW_CONTEXT_DIFF		16538	1		==			
ANR	18578	Identifier	diff_type		16538	0					
ANR	18579	Identifier	NEW_CONTEXT_DIFF		16538	1					
ANR	18580	AndExpression	"stars_last_line && indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"		16538	1		&&			
ANR	18581	Identifier	stars_last_line		16538	0					
ANR	18582	AndExpression	"indent_last_line == indent && strnEQ ( s , ""*** "" , 4 )"		16538	1		&&			
ANR	18583	EqualityExpression	indent_last_line == indent		16538	0		==			
ANR	18584	Identifier	indent_last_line		16538	0					
ANR	18585	Identifier	indent		16538	1					
ANR	18586	CallExpression	"strnEQ ( s , ""*** "" , 4 )"		16538	1					
ANR	18587	Callee	strnEQ		16538	0					
ANR	18588	Identifier	strnEQ		16538	0					
ANR	18589	ArgumentList	s		16538	1					
ANR	18590	Argument	s		16538	0					
ANR	18591	Identifier	s		16538	0					
ANR	18592	Argument	"""*** """		16538	1					
ANR	18593	PrimaryExpression	"""*** """		16538	0					
ANR	18594	Argument	4		16538	2					
ANR	18595	PrimaryExpression	4		16538	0					
ANR	18596	CompoundStatement		348:31:9553:9553	16538	1					
ANR	18597	ExpressionStatement	s += 4	775:5:21965:21971	16538	0	True				
ANR	18598	AssignmentExpression	s += 4		16538	0		+=			
ANR	18599	Identifier	s		16538	0					
ANR	18600	PrimaryExpression	4		16538	1					
ANR	18601	IfStatement	if ( s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] ) )		16538	1					
ANR	18602	Condition	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )	776:9:21982:22011	16538	0	True				
ANR	18603	AndExpression	s [ 0 ] == '0' && ! ISDIGIT ( s [ 1 ] )		16538	0		&&			
ANR	18604	EqualityExpression	s [ 0 ] == '0'		16538	0		==			
ANR	18605	ArrayIndexing	s [ 0 ]		16538	0					
ANR	18606	Identifier	s		16538	0					
ANR	18607	PrimaryExpression	0		16538	1					
ANR	18608	PrimaryExpression	'0'		16538	1					
ANR	18609	UnaryOperationExpression	! ISDIGIT ( s [ 1 ] )		16538	1					
ANR	18610	UnaryOperator	!		16538	0					
ANR	18611	CallExpression	ISDIGIT ( s [ 1 ] )		16538	1					
ANR	18612	Callee	ISDIGIT		16538	0					
ANR	18613	Identifier	ISDIGIT		16538	0					
ANR	18614	ArgumentList	s [ 1 ]		16538	1					
ANR	18615	Argument	s [ 1 ]		16538	0					
ANR	18616	ArrayIndexing	s [ 1 ]		16538	0					
ANR	18617	Identifier	s		16538	0					
ANR	18618	PrimaryExpression	1		16538	1					
ANR	18619	ExpressionStatement	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec	777:7:22021:22076	16538	1	True				
ANR	18620	AssignmentExpression	p_says_nonexistent [ OLD ] = 1 + ! p_timestamp [ OLD ] . tv_sec		16538	0		=			
ANR	18621	ArrayIndexing	p_says_nonexistent [ OLD ]		16538	0					
ANR	18622	Identifier	p_says_nonexistent		16538	0					
ANR	18623	Identifier	OLD		16538	1					
ANR	18624	AdditiveExpression	1 + ! p_timestamp [ OLD ] . tv_sec		16538	1		+			
ANR	18625	PrimaryExpression	1		16538	0					
ANR	18626	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18627	UnaryOperator	!		16538	0					
ANR	18628	MemberAccess	p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18629	ArrayIndexing	p_timestamp [ OLD ]		16538	0					
ANR	18630	Identifier	p_timestamp		16538	0					
ANR	18631	Identifier	OLD		16538	1					
ANR	18632	Identifier	tv_sec		16538	1					
ANR	18633	WhileStatement	while ( * s != '\\n' )		16538	2					
ANR	18634	Condition	* s != '\\n'	780:12:22190:22199	16538	0	True				
ANR	18635	EqualityExpression	* s != '\\n'		16538	0		!=			
ANR	18636	UnaryOperationExpression	* s		16538	0					
ANR	18637	UnaryOperator	*		16538	0					
ANR	18638	Identifier	s		16538	1					
ANR	18639	PrimaryExpression	'\\n'		16538	1					
ANR	18640	ExpressionStatement	s ++	781:2:22204:22207	16538	1	True				
ANR	18641	PostIncDecOperationExpression	s ++		16538	0					
ANR	18642	Identifier	s		16538	0					
ANR	18643	IncDec	++		16538	1					
ANR	18644	ExpressionStatement	p_indent = indent	782:5:22214:22231	16538	3	True				
ANR	18645	AssignmentExpression	p_indent = indent		16538	0		=			
ANR	18646	Identifier	p_indent		16538	0					
ANR	18647	Identifier	indent		16538	1					
ANR	18648	ExpressionStatement	p_strip_trailing_cr = strip_trailing_cr	783:5:22238:22277	16538	4	True				
ANR	18649	AssignmentExpression	p_strip_trailing_cr = strip_trailing_cr		16538	0		=			
ANR	18650	Identifier	p_strip_trailing_cr		16538	0					
ANR	18651	Identifier	strip_trailing_cr		16538	1					
ANR	18652	ExpressionStatement	p_start = previous_line	784:5:22284:22307	16538	5	True				
ANR	18653	AssignmentExpression	p_start = previous_line		16538	0		=			
ANR	18654	Identifier	p_start		16538	0					
ANR	18655	Identifier	previous_line		16538	1					
ANR	18656	ExpressionStatement	p_sline = p_input_line - 1	785:5:22314:22340	16538	6	True				
ANR	18657	AssignmentExpression	p_sline = p_input_line - 1		16538	0		=			
ANR	18658	Identifier	p_sline		16538	0					
ANR	18659	AdditiveExpression	p_input_line - 1		16538	1		-			
ANR	18660	Identifier	p_input_line		16538	0					
ANR	18661	PrimaryExpression	1		16538	1					
ANR	18662	ExpressionStatement	retval = ( * ( s - 1 ) == '*' ? NEW_CONTEXT_DIFF : CONTEXT_DIFF )	786:5:22347:22405	16538	7	True				
ANR	18663	AssignmentExpression	retval = ( * ( s - 1 ) == '*' ? NEW_CONTEXT_DIFF : CONTEXT_DIFF )		16538	0		=			
ANR	18664	Identifier	retval		16538	0					
ANR	18665	ConditionalExpression	* ( s - 1 ) == '*' ? NEW_CONTEXT_DIFF : CONTEXT_DIFF		16538	1					
ANR	18666	Condition	* ( s - 1 ) == '*'		16538	0					
ANR	18667	EqualityExpression	* ( s - 1 ) == '*'		16538	0		==			
ANR	18668	UnaryOperationExpression	* ( s - 1 )		16538	0					
ANR	18669	UnaryOperator	*		16538	0					
ANR	18670	AdditiveExpression	s - 1		16538	1		-			
ANR	18671	Identifier	s		16538	0					
ANR	18672	PrimaryExpression	1		16538	1					
ANR	18673	PrimaryExpression	'*'		16538	1					
ANR	18674	Identifier	NEW_CONTEXT_DIFF		16538	1					
ANR	18675	Identifier	CONTEXT_DIFF		16538	2					
ANR	18676	CompoundStatement		366:7:10158:10185	16538	8					
ANR	18677	IdentifierDeclStatement	file_offset saved_p_base = p_base ;	791:7:22521:22554	16538	0	True				
ANR	18678	IdentifierDecl	saved_p_base = p_base		16538	0					
ANR	18679	IdentifierDeclType	file_offset		16538	0					
ANR	18680	Identifier	saved_p_base		16538	1					
ANR	18681	AssignmentExpression	saved_p_base = p_base		16538	2		=			
ANR	18682	Identifier	p_base		16538	0					
ANR	18683	Identifier	p_base		16538	1					
ANR	18684	IdentifierDeclStatement	lin saved_p_bline = p_bline ;	792:7:22563:22590	16538	1	True				
ANR	18685	IdentifierDecl	saved_p_bline = p_bline		16538	0					
ANR	18686	IdentifierDeclType	lin		16538	0					
ANR	18687	Identifier	saved_p_bline		16538	1					
ANR	18688	AssignmentExpression	saved_p_bline = p_bline		16538	2		=			
ANR	18689	Identifier	p_bline		16538	0					
ANR	18690	Identifier	p_bline		16538	1					
ANR	18691	ExpressionStatement	"Fseek ( pfp , previous_line , SEEK_SET )"	793:7:22599:22635	16538	2	True				
ANR	18692	CallExpression	"Fseek ( pfp , previous_line , SEEK_SET )"		16538	0					
ANR	18693	Callee	Fseek		16538	0					
ANR	18694	Identifier	Fseek		16538	0					
ANR	18695	ArgumentList	pfp		16538	1					
ANR	18696	Argument	pfp		16538	0					
ANR	18697	Identifier	pfp		16538	0					
ANR	18698	Argument	previous_line		16538	1					
ANR	18699	Identifier	previous_line		16538	0					
ANR	18700	Argument	SEEK_SET		16538	2					
ANR	18701	Identifier	SEEK_SET		16538	0					
ANR	18702	ExpressionStatement	p_input_line -= 2	794:7:22644:22661	16538	3	True				
ANR	18703	AssignmentExpression	p_input_line -= 2		16538	0		-=			
ANR	18704	Identifier	p_input_line		16538	0					
ANR	18705	PrimaryExpression	2		16538	1					
ANR	18706	IfStatement	"if ( another_hunk ( retval , false ) && ! p_repl_lines && p_newfirst == 1 )"		16538	4					
ANR	18707	Condition	"another_hunk ( retval , false ) && ! p_repl_lines && p_newfirst == 1"	795:11:22674:22742	16538	0	True				
ANR	18708	AndExpression	"another_hunk ( retval , false ) && ! p_repl_lines && p_newfirst == 1"		16538	0		&&			
ANR	18709	CallExpression	"another_hunk ( retval , false )"		16538	0					
ANR	18710	Callee	another_hunk		16538	0					
ANR	18711	Identifier	another_hunk		16538	0					
ANR	18712	ArgumentList	retval		16538	1					
ANR	18713	Argument	retval		16538	0					
ANR	18714	Identifier	retval		16538	0					
ANR	18715	Argument	false		16538	1					
ANR	18716	Identifier	false		16538	0					
ANR	18717	AndExpression	! p_repl_lines && p_newfirst == 1		16538	1		&&			
ANR	18718	UnaryOperationExpression	! p_repl_lines		16538	0					
ANR	18719	UnaryOperator	!		16538	0					
ANR	18720	Identifier	p_repl_lines		16538	1					
ANR	18721	EqualityExpression	p_newfirst == 1		16538	1		==			
ANR	18722	Identifier	p_newfirst		16538	0					
ANR	18723	PrimaryExpression	1		16538	1					
ANR	18724	ExpressionStatement	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec	797:2:22747:22802	16538	1	True				
ANR	18725	AssignmentExpression	p_says_nonexistent [ NEW ] = 1 + ! p_timestamp [ NEW ] . tv_sec		16538	0		=			
ANR	18726	ArrayIndexing	p_says_nonexistent [ NEW ]		16538	0					
ANR	18727	Identifier	p_says_nonexistent		16538	0					
ANR	18728	Identifier	NEW		16538	1					
ANR	18729	AdditiveExpression	1 + ! p_timestamp [ NEW ] . tv_sec		16538	1		+			
ANR	18730	PrimaryExpression	1		16538	0					
ANR	18731	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18732	UnaryOperator	!		16538	0					
ANR	18733	MemberAccess	p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18734	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	18735	Identifier	p_timestamp		16538	0					
ANR	18736	Identifier	NEW		16538	1					
ANR	18737	Identifier	tv_sec		16538	1					
ANR	18738	ExpressionStatement	"next_intuit_at ( saved_p_base , saved_p_bline )"	798:7:22811:22855	16538	5	True				
ANR	18739	CallExpression	"next_intuit_at ( saved_p_base , saved_p_bline )"		16538	0					
ANR	18740	Callee	next_intuit_at		16538	0					
ANR	18741	Identifier	next_intuit_at		16538	0					
ANR	18742	ArgumentList	saved_p_base		16538	1					
ANR	18743	Argument	saved_p_base		16538	0					
ANR	18744	Identifier	saved_p_base		16538	0					
ANR	18745	Argument	saved_p_bline		16538	1					
ANR	18746	Identifier	saved_p_bline		16538	0					
ANR	18747	IfStatement	if ( ! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header )		16538	9					
ANR	18748	Condition	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header	801:9:22874:23006	16538	0	True				
ANR	18749	AndExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) ) && ! p_name [ INDEX ] && need_header		16538	0		&&			
ANR	18750	UnaryOperationExpression	! ( ( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec ) )		16538	0					
ANR	18751	UnaryOperator	!		16538	0					
ANR	18752	AndExpression	( p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec ) && ( p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec )		16538	1		&&			
ANR	18753	OrExpression	p_name [ OLD ] || ! p_timestamp [ OLD ] . tv_sec		16538	0		||			
ANR	18754	ArrayIndexing	p_name [ OLD ]		16538	0					
ANR	18755	Identifier	p_name		16538	0					
ANR	18756	Identifier	OLD		16538	1					
ANR	18757	UnaryOperationExpression	! p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18758	UnaryOperator	!		16538	0					
ANR	18759	MemberAccess	p_timestamp [ OLD ] . tv_sec		16538	1					
ANR	18760	ArrayIndexing	p_timestamp [ OLD ]		16538	0					
ANR	18761	Identifier	p_timestamp		16538	0					
ANR	18762	Identifier	OLD		16538	1					
ANR	18763	Identifier	tv_sec		16538	1					
ANR	18764	OrExpression	p_name [ NEW ] || ! p_timestamp [ NEW ] . tv_sec		16538	1		||			
ANR	18765	ArrayIndexing	p_name [ NEW ]		16538	0					
ANR	18766	Identifier	p_name		16538	0					
ANR	18767	Identifier	NEW		16538	1					
ANR	18768	UnaryOperationExpression	! p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18769	UnaryOperator	!		16538	0					
ANR	18770	MemberAccess	p_timestamp [ NEW ] . tv_sec		16538	1					
ANR	18771	ArrayIndexing	p_timestamp [ NEW ]		16538	0					
ANR	18772	Identifier	p_timestamp		16538	0					
ANR	18773	Identifier	NEW		16538	1					
ANR	18774	Identifier	tv_sec		16538	1					
ANR	18775	AndExpression	! p_name [ INDEX ] && need_header		16538	1		&&			
ANR	18776	UnaryOperationExpression	! p_name [ INDEX ]		16538	0					
ANR	18777	UnaryOperator	!		16538	0					
ANR	18778	ArrayIndexing	p_name [ INDEX ]		16538	1					
ANR	18779	Identifier	p_name		16538	0					
ANR	18780	Identifier	INDEX		16538	1					
ANR	18781	Identifier	need_header		16538	1					
ANR	18782	CompoundStatement		379:2:10615:10652	16538	1					
ANR	18783	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	805:2:23020:23057	16538	0	True				
ANR	18784	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		16538	0					
ANR	18785	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		16538	0					
ANR	18786	Identifier	numbuf		16538	1					
ANR	18787	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		16538	2		+			
ANR	18788	Identifier	LINENUM_LENGTH_BOUND		16538	0					
ANR	18789	PrimaryExpression	1		16538	1					
ANR	18790	ExpressionStatement	"say ( ""missing header for context diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"	806:2:23061:23163	16538	1	True				
ANR	18791	CallExpression	"say ( ""missing header for context diff at line %s of patch\\n"" , format_linenum ( numbuf , p_sline ) )"		16538	0					
ANR	18792	Callee	say		16538	0					
ANR	18793	Identifier	say		16538	0					
ANR	18794	ArgumentList	"""missing header for context diff at line %s of patch\\n"""		16538	1					
ANR	18795	Argument	"""missing header for context diff at line %s of patch\\n"""		16538	0					
ANR	18796	PrimaryExpression	"""missing header for context diff at line %s of patch\\n"""		16538	0					
ANR	18797	Argument	"format_linenum ( numbuf , p_sline )"		16538	1					
ANR	18798	CallExpression	"format_linenum ( numbuf , p_sline )"		16538	0					
ANR	18799	Callee	format_linenum		16538	0					
ANR	18800	Identifier	format_linenum		16538	0					
ANR	18801	ArgumentList	numbuf		16538	1					
ANR	18802	Argument	numbuf		16538	0					
ANR	18803	Identifier	numbuf		16538	0					
ANR	18804	Argument	p_sline		16538	1					
ANR	18805	Identifier	p_sline		16538	0					
ANR	18806	GotoStatement	goto scan_exit ;	809:5:23179:23193	16538	10	True				
ANR	18807	Identifier	scan_exit		16538	0					
ANR	18808	IfStatement	"if ( ( diff_type == NO_DIFF || diff_type == NORMAL_DIFF ) && last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) ) )"		16538	24					
ANR	18809	Condition	"( diff_type == NO_DIFF || diff_type == NORMAL_DIFF ) && last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) )"	811:5:23203:23329	16538	0	True				
ANR	18810	AndExpression	"( diff_type == NO_DIFF || diff_type == NORMAL_DIFF ) && last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) )"		16538	0		&&			
ANR	18811	OrExpression	diff_type == NO_DIFF || diff_type == NORMAL_DIFF		16538	0		||			
ANR	18812	EqualityExpression	diff_type == NO_DIFF		16538	0		==			
ANR	18813	Identifier	diff_type		16538	0					
ANR	18814	Identifier	NO_DIFF		16538	1					
ANR	18815	EqualityExpression	diff_type == NORMAL_DIFF		16538	1		==			
ANR	18816	Identifier	diff_type		16538	0					
ANR	18817	Identifier	NORMAL_DIFF		16538	1					
ANR	18818	AndExpression	"last_line_was_command && ( strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 ) )"		16538	1		&&			
ANR	18819	Identifier	last_line_was_command		16538	0					
ANR	18820	OrExpression	"strnEQ ( s , ""< "" , 2 ) || strnEQ ( s , ""> "" , 2 )"		16538	1		||			
ANR	18821	CallExpression	"strnEQ ( s , ""< "" , 2 )"		16538	0					
ANR	18822	Callee	strnEQ		16538	0					
ANR	18823	Identifier	strnEQ		16538	0					
ANR	18824	ArgumentList	s		16538	1					
ANR	18825	Argument	s		16538	0					
ANR	18826	Identifier	s		16538	0					
ANR	18827	Argument	"""< """		16538	1					
ANR	18828	PrimaryExpression	"""< """		16538	0					
ANR	18829	Argument	2		16538	2					
ANR	18830	PrimaryExpression	2		16538	0					
ANR	18831	CallExpression	"strnEQ ( s , ""> "" , 2 )"		16538	1					
ANR	18832	Callee	strnEQ		16538	0					
ANR	18833	Identifier	strnEQ		16538	0					
ANR	18834	ArgumentList	s		16538	1					
ANR	18835	Argument	s		16538	0					
ANR	18836	Identifier	s		16538	0					
ANR	18837	Argument	"""> """		16538	1					
ANR	18838	PrimaryExpression	"""> """		16538	0					
ANR	18839	Argument	2		16538	2					
ANR	18840	PrimaryExpression	2		16538	0					
ANR	18841	CompoundStatement		387:48:10928:10928	16538	1					
ANR	18842	ExpressionStatement	p_start = previous_line	814:5:23340:23363	16538	0	True				
ANR	18843	AssignmentExpression	p_start = previous_line		16538	0		=			
ANR	18844	Identifier	p_start		16538	0					
ANR	18845	Identifier	previous_line		16538	1					
ANR	18846	ExpressionStatement	p_sline = p_input_line - 1	815:5:23370:23396	16538	1	True				
ANR	18847	AssignmentExpression	p_sline = p_input_line - 1		16538	0		=			
ANR	18848	Identifier	p_sline		16538	0					
ANR	18849	AdditiveExpression	p_input_line - 1		16538	1		-			
ANR	18850	Identifier	p_input_line		16538	0					
ANR	18851	PrimaryExpression	1		16538	1					
ANR	18852	ExpressionStatement	p_indent = indent	816:5:23403:23420	16538	2	True				
ANR	18853	AssignmentExpression	p_indent = indent		16538	0		=			
ANR	18854	Identifier	p_indent		16538	0					
ANR	18855	Identifier	indent		16538	1					
ANR	18856	ExpressionStatement	retval = NORMAL_DIFF	817:5:23427:23447	16538	3	True				
ANR	18857	AssignmentExpression	retval = NORMAL_DIFF		16538	0		=			
ANR	18858	Identifier	retval		16538	0					
ANR	18859	Identifier	NORMAL_DIFF		16538	1					
ANR	18860	GotoStatement	goto scan_exit ;	818:5:23454:23468	16538	4	True				
ANR	18861	Identifier	scan_exit		16538	0					
ANR	18862	Label	scan_exit :	822:2:23482:23491	16538	30	True				
ANR	18863	Identifier	scan_exit		16538	0					
ANR	18864	ExpressionStatement	file_type = p_mode [ OLD ] & S_IFMT	827:4:23688:23720	16538	31	True				
ANR	18865	AssignmentExpression	file_type = p_mode [ OLD ] & S_IFMT		16538	0		=			
ANR	18866	Identifier	file_type		16538	0					
ANR	18867	BitAndExpression	p_mode [ OLD ] & S_IFMT		16538	1		&			
ANR	18868	ArrayIndexing	p_mode [ OLD ]		16538	0					
ANR	18869	Identifier	p_mode		16538	0					
ANR	18870	Identifier	OLD		16538	1					
ANR	18871	Identifier	S_IFMT		16538	1					
ANR	18872	IfStatement	if ( file_type )		16538	32					
ANR	18873	Condition	file_type	828:8:23730:23738	16538	0	True				
ANR	18874	Identifier	file_type		16538	0					
ANR	18875	CompoundStatement		404:1:11345:11388	16538	1					
ANR	18876	IdentifierDeclStatement	mode_t new_file_type = p_mode [ NEW ] & S_IFMT ;	830:1:23750:23793	16538	0	True				
ANR	18877	IdentifierDecl	new_file_type = p_mode [ NEW ] & S_IFMT		16538	0					
ANR	18878	IdentifierDeclType	mode_t		16538	0					
ANR	18879	Identifier	new_file_type		16538	1					
ANR	18880	AssignmentExpression	new_file_type = p_mode [ NEW ] & S_IFMT		16538	2		=			
ANR	18881	Identifier	new_file_type		16538	0					
ANR	18882	BitAndExpression	p_mode [ NEW ] & S_IFMT		16538	1		&			
ANR	18883	ArrayIndexing	p_mode [ NEW ]		16538	0					
ANR	18884	Identifier	p_mode		16538	0					
ANR	18885	Identifier	NEW		16538	1					
ANR	18886	Identifier	S_IFMT		16538	1					
ANR	18887	IfStatement	if ( new_file_type && file_type != new_file_type )		16538	1					
ANR	18888	Condition	new_file_type && file_type != new_file_type	831:5:23800:23842	16538	0	True				
ANR	18889	AndExpression	new_file_type && file_type != new_file_type		16538	0		&&			
ANR	18890	Identifier	new_file_type		16538	0					
ANR	18891	EqualityExpression	file_type != new_file_type		16538	1		!=			
ANR	18892	Identifier	file_type		16538	0					
ANR	18893	Identifier	new_file_type		16538	1					
ANR	18894	ExpressionStatement	file_type = 0	832:3:23848:23861	16538	1	True				
ANR	18895	AssignmentExpression	file_type = 0		16538	0		=			
ANR	18896	Identifier	file_type		16538	0					
ANR	18897	PrimaryExpression	0		16538	1					
ANR	18898	ElseStatement	else		16538	0					
ANR	18899	CompoundStatement		409:6:11481:11481	16538	0					
ANR	18900	ExpressionStatement	file_type = p_mode [ NEW ] & S_IFMT	836:1:23889:23921	16538	0	True				
ANR	18901	AssignmentExpression	file_type = p_mode [ NEW ] & S_IFMT		16538	0		=			
ANR	18902	Identifier	file_type		16538	0					
ANR	18903	BitAndExpression	p_mode [ NEW ] & S_IFMT		16538	1		&			
ANR	18904	ArrayIndexing	p_mode [ NEW ]		16538	0					
ANR	18905	Identifier	p_mode		16538	0					
ANR	18906	Identifier	NEW		16538	1					
ANR	18907	Identifier	S_IFMT		16538	1					
ANR	18908	IfStatement	if ( ! file_type )		16538	1					
ANR	18909	Condition	! file_type	837:5:23928:23938	16538	0	True				
ANR	18910	UnaryOperationExpression	! file_type		16538	0					
ANR	18911	UnaryOperator	!		16538	0					
ANR	18912	Identifier	file_type		16538	1					
ANR	18913	ExpressionStatement	file_type = S_IFREG	838:3:23944:23963	16538	1	True				
ANR	18914	AssignmentExpression	file_type = S_IFREG		16538	0		=			
ANR	18915	Identifier	file_type		16538	0					
ANR	18916	Identifier	S_IFREG		16538	1					
ANR	18917	ExpressionStatement	* p_file_type = file_type	840:4:23977:24001	16538	33	True				
ANR	18918	AssignmentExpression	* p_file_type = file_type		16538	0		=			
ANR	18919	UnaryOperationExpression	* p_file_type		16538	0					
ANR	18920	UnaryOperator	*		16538	0					
ANR	18921	Identifier	p_file_type		16538	1					
ANR	18922	Identifier	file_type		16538	1					
ANR	18923	ExpressionStatement	i = NONE	863:4:25114:25122	16538	34	True				
ANR	18924	AssignmentExpression	i = NONE		16538	0		=			
ANR	18925	Identifier	i		16538	0					
ANR	18926	Identifier	NONE		16538	1					
ANR	18927	IfStatement	if ( ! inname )		16538	35					
ANR	18928	Condition	! inname	865:8:25133:25139	16538	0	True				
ANR	18929	UnaryOperationExpression	! inname		16538	0					
ANR	18930	UnaryOperator	!		16538	0					
ANR	18931	Identifier	inname		16538	1					
ANR	18932	CompoundStatement		441:1:12746:12769	16538	1					
ANR	18933	IdentifierDeclStatement	enum nametype i0 = NONE ;	867:1:25151:25174	16538	0	True				
ANR	18934	IdentifierDecl	i0 = NONE		16538	0					
ANR	18935	IdentifierDeclType	enum nametype		16538	0					
ANR	18936	Identifier	i0		16538	1					
ANR	18937	AssignmentExpression	i0 = NONE		16538	2		=			
ANR	18938	Identifier	NONE		16538	0					
ANR	18939	Identifier	NONE		16538	1					
ANR	18940	IfStatement	if ( ! posixly_correct && ( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ] )		16538	1					
ANR	18941	Condition	! posixly_correct && ( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ]	869:5:25182:25247	16538	0	True				
ANR	18942	AndExpression	! posixly_correct && ( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ]		16538	0		&&			
ANR	18943	UnaryOperationExpression	! posixly_correct		16538	0					
ANR	18944	UnaryOperator	!		16538	0					
ANR	18945	Identifier	posixly_correct		16538	1					
ANR	18946	AndExpression	( p_name [ OLD ] || p_name [ NEW ] ) && p_name [ INDEX ]		16538	1		&&			
ANR	18947	OrExpression	p_name [ OLD ] || p_name [ NEW ]		16538	0		||			
ANR	18948	ArrayIndexing	p_name [ OLD ]		16538	0					
ANR	18949	Identifier	p_name		16538	0					
ANR	18950	Identifier	OLD		16538	1					
ANR	18951	ArrayIndexing	p_name [ NEW ]		16538	1					
ANR	18952	Identifier	p_name		16538	0					
ANR	18953	Identifier	NEW		16538	1					
ANR	18954	ArrayIndexing	p_name [ INDEX ]		16538	1					
ANR	18955	Identifier	p_name		16538	0					
ANR	18956	Identifier	INDEX		16538	1					
ANR	18957	CompoundStatement		444:3:12848:12848	16538	1					
ANR	18958	ExpressionStatement	free ( p_name [ INDEX ] )	871:5:25260:25280	16538	0	True				
ANR	18959	CallExpression	free ( p_name [ INDEX ] )		16538	0					
ANR	18960	Callee	free		16538	0					
ANR	18961	Identifier	free		16538	0					
ANR	18962	ArgumentList	p_name [ INDEX ]		16538	1					
ANR	18963	Argument	p_name [ INDEX ]		16538	0					
ANR	18964	ArrayIndexing	p_name [ INDEX ]		16538	0					
ANR	18965	Identifier	p_name		16538	0					
ANR	18966	Identifier	INDEX		16538	1					
ANR	18967	ExpressionStatement	p_name [ INDEX ] = 0	872:5:25287:25304	16538	1	True				
ANR	18968	AssignmentExpression	p_name [ INDEX ] = 0		16538	0		=			
ANR	18969	ArrayIndexing	p_name [ INDEX ]		16538	0					
ANR	18970	Identifier	p_name		16538	0					
ANR	18971	Identifier	INDEX		16538	1					
ANR	18972	PrimaryExpression	0		16538	1					
ANR	18973	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		16538	2					
ANR	18974	ForInit	i = OLD ;	875:6:25318:25325	16538	0	True				
ANR	18975	AssignmentExpression	i = OLD		16538	0		=			
ANR	18976	Identifier	i		16538	0					
ANR	18977	Identifier	OLD		16538	1					
ANR	18978	Condition	i <= INDEX	875:16:25328:25337	16538	1	True				
ANR	18979	RelationalExpression	i <= INDEX		16538	0		<=			
ANR	18980	Identifier	i		16538	0					
ANR	18981	Identifier	INDEX		16538	1					
ANR	18982	PostIncDecOperationExpression	i ++	875:29:25341:25343	16538	2	True				
ANR	18983	Identifier	i		16538	0					
ANR	18984	IncDec	++		16538	1					
ANR	18985	IfStatement	if ( p_name [ i ] )		16538	3					
ANR	18986	Condition	p_name [ i ]	876:7:25353:25361	16538	0	True				
ANR	18987	ArrayIndexing	p_name [ i ]		16538	0					
ANR	18988	Identifier	p_name		16538	0					
ANR	18989	Identifier	i		16538	1					
ANR	18990	CompoundStatement		451:5:12964:12964	16538	1					
ANR	18991	IfStatement	"if ( i0 != NONE && strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0 )"		16538	0					
ANR	18992	Condition	"i0 != NONE && strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0"	878:11:25382:25430	16538	0	True				
ANR	18993	AndExpression	"i0 != NONE && strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0"		16538	0		&&			
ANR	18994	EqualityExpression	i0 != NONE		16538	0		!=			
ANR	18995	Identifier	i0		16538	0					
ANR	18996	Identifier	NONE		16538	1					
ANR	18997	EqualityExpression	"strcmp ( p_name [ i0 ] , p_name [ i ] ) == 0"		16538	1		==			
ANR	18998	CallExpression	"strcmp ( p_name [ i0 ] , p_name [ i ] )"		16538	0					
ANR	18999	Callee	strcmp		16538	0					
ANR	19000	Identifier	strcmp		16538	0					
ANR	19001	ArgumentList	p_name [ i0 ]		16538	1					
ANR	19002	Argument	p_name [ i0 ]		16538	0					
ANR	19003	ArrayIndexing	p_name [ i0 ]		16538	0					
ANR	19004	Identifier	p_name		16538	0					
ANR	19005	Identifier	i0		16538	1					
ANR	19006	Argument	p_name [ i ]		16538	1					
ANR	19007	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19008	Identifier	p_name		16538	0					
ANR	19009	Identifier	i		16538	1					
ANR	19010	PrimaryExpression	0		16538	1					
ANR	19011	CompoundStatement		453:2:13030:13030	16538	1					
ANR	19012	ExpressionStatement	stat_errno [ i ] = stat_errno [ i0 ]	881:4:25502:25532	16538	0	True				
ANR	19013	AssignmentExpression	stat_errno [ i ] = stat_errno [ i0 ]		16538	0		=			
ANR	19014	ArrayIndexing	stat_errno [ i ]		16538	0					
ANR	19015	Identifier	stat_errno		16538	0					
ANR	19016	Identifier	i		16538	1					
ANR	19017	ArrayIndexing	stat_errno [ i0 ]		16538	1					
ANR	19018	Identifier	stat_errno		16538	0					
ANR	19019	Identifier	i0		16538	1					
ANR	19020	IfStatement	if ( ! stat_errno [ i ] )		16538	1					
ANR	19021	Condition	! stat_errno [ i ]	882:8:25542:25556	16538	0	True				
ANR	19022	UnaryOperationExpression	! stat_errno [ i ]		16538	0					
ANR	19023	UnaryOperator	!		16538	0					
ANR	19024	ArrayIndexing	stat_errno [ i ]		16538	1					
ANR	19025	Identifier	stat_errno		16538	0					
ANR	19026	Identifier	i		16538	1					
ANR	19027	ExpressionStatement	st [ i ] = st [ i0 ]	883:6:25565:25579	16538	1	True				
ANR	19028	AssignmentExpression	st [ i ] = st [ i0 ]		16538	0		=			
ANR	19029	ArrayIndexing	st [ i ]		16538	0					
ANR	19030	Identifier	st		16538	0					
ANR	19031	Identifier	i		16538	1					
ANR	19032	ArrayIndexing	st [ i0 ]		16538	1					
ANR	19033	Identifier	st		16538	0					
ANR	19034	Identifier	i0		16538	1					
ANR	19035	ElseStatement	else		16538	0					
ANR	19036	CompoundStatement		460:2:13194:13194	16538	0					
ANR	19037	ExpressionStatement	"stat_errno [ i ] = stat_file ( p_name [ i ] , & st [ i ] )"	887:4:25605:25650	16538	0	True				
ANR	19038	AssignmentExpression	"stat_errno [ i ] = stat_file ( p_name [ i ] , & st [ i ] )"		16538	0		=			
ANR	19039	ArrayIndexing	stat_errno [ i ]		16538	0					
ANR	19040	Identifier	stat_errno		16538	0					
ANR	19041	Identifier	i		16538	1					
ANR	19042	CallExpression	"stat_file ( p_name [ i ] , & st [ i ] )"		16538	1					
ANR	19043	Callee	stat_file		16538	0					
ANR	19044	Identifier	stat_file		16538	0					
ANR	19045	ArgumentList	p_name [ i ]		16538	1					
ANR	19046	Argument	p_name [ i ]		16538	0					
ANR	19047	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19048	Identifier	p_name		16538	0					
ANR	19049	Identifier	i		16538	1					
ANR	19050	Argument	& st [ i ]		16538	1					
ANR	19051	UnaryOperationExpression	& st [ i ]		16538	0					
ANR	19052	UnaryOperator	&		16538	0					
ANR	19053	ArrayIndexing	st [ i ]		16538	1					
ANR	19054	Identifier	st		16538	0					
ANR	19055	Identifier	i		16538	1					
ANR	19056	IfStatement	if ( ! stat_errno [ i ] )		16538	1					
ANR	19057	Condition	! stat_errno [ i ]	888:8:25660:25674	16538	0	True				
ANR	19058	UnaryOperationExpression	! stat_errno [ i ]		16538	0					
ANR	19059	UnaryOperator	!		16538	0					
ANR	19060	ArrayIndexing	stat_errno [ i ]		16538	1					
ANR	19061	Identifier	stat_errno		16538	0					
ANR	19062	Identifier	i		16538	1					
ANR	19063	CompoundStatement		463:6:13278:13278	16538	1					
ANR	19064	IfStatement	if ( lookup_file_id ( & st [ i ] ) == DELETE_LATER )		16538	0					
ANR	19065	Condition	lookup_file_id ( & st [ i ] ) == DELETE_LATER	890:12:25697:25735	16538	0	True				
ANR	19066	EqualityExpression	lookup_file_id ( & st [ i ] ) == DELETE_LATER		16538	0		==			
ANR	19067	CallExpression	lookup_file_id ( & st [ i ] )		16538	0					
ANR	19068	Callee	lookup_file_id		16538	0					
ANR	19069	Identifier	lookup_file_id		16538	0					
ANR	19070	ArgumentList	& st [ i ]		16538	1					
ANR	19071	Argument	& st [ i ]		16538	0					
ANR	19072	UnaryOperationExpression	& st [ i ]		16538	0					
ANR	19073	UnaryOperator	&		16538	0					
ANR	19074	ArrayIndexing	st [ i ]		16538	1					
ANR	19075	Identifier	st		16538	0					
ANR	19076	Identifier	i		16538	1					
ANR	19077	Identifier	DELETE_LATER		16538	1					
ANR	19078	ExpressionStatement	stat_errno [ i ] = ENOENT	891:3:25741:25763	16538	1	True				
ANR	19079	AssignmentExpression	stat_errno [ i ] = ENOENT		16538	0		=			
ANR	19080	ArrayIndexing	stat_errno [ i ]		16538	0					
ANR	19081	Identifier	stat_errno		16538	0					
ANR	19082	Identifier	i		16538	1					
ANR	19083	Identifier	ENOENT		16538	1					
ANR	19084	ElseStatement	else		16538	0					
ANR	19085	IfStatement	if ( posixly_correct && name_is_valid ( p_name [ i ] ) )		16538	0					
ANR	19086	Condition	posixly_correct && name_is_valid ( p_name [ i ] )	892:17:25782:25825	16538	0	True				
ANR	19087	AndExpression	posixly_correct && name_is_valid ( p_name [ i ] )		16538	0		&&			
ANR	19088	Identifier	posixly_correct		16538	0					
ANR	19089	CallExpression	name_is_valid ( p_name [ i ] )		16538	1					
ANR	19090	Callee	name_is_valid		16538	0					
ANR	19091	Identifier	name_is_valid		16538	0					
ANR	19092	ArgumentList	p_name [ i ]		16538	1					
ANR	19093	Argument	p_name [ i ]		16538	0					
ANR	19094	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19095	Identifier	p_name		16538	0					
ANR	19096	Identifier	i		16538	1					
ANR	19097	BreakStatement	break ;	893:3:25831:25836	16538	1	True				
ANR	19098	ExpressionStatement	i0 = i	896:7:25857:25863	16538	1	True				
ANR	19099	AssignmentExpression	i0 = i		16538	0		=			
ANR	19100	Identifier	i0		16538	0					
ANR	19101	Identifier	i		16538	1					
ANR	19102	IfStatement	if ( ! posixly_correct )		16538	3					
ANR	19103	Condition	! posixly_correct	899:5:25878:25894	16538	0	True				
ANR	19104	UnaryOperationExpression	! posixly_correct		16538	0					
ANR	19105	UnaryOperator	!		16538	0					
ANR	19106	Identifier	posixly_correct		16538	1					
ANR	19107	CompoundStatement		474:3:13495:13495	16538	1					
ANR	19108	ExpressionStatement	"i = best_name ( p_name , stat_errno )"	902:5:25950:25984	16538	0	True				
ANR	19109	AssignmentExpression	"i = best_name ( p_name , stat_errno )"		16538	0		=			
ANR	19110	Identifier	i		16538	0					
ANR	19111	CallExpression	"best_name ( p_name , stat_errno )"		16538	1					
ANR	19112	Callee	best_name		16538	0					
ANR	19113	Identifier	best_name		16538	0					
ANR	19114	ArgumentList	p_name		16538	1					
ANR	19115	Argument	p_name		16538	0					
ANR	19116	Identifier	p_name		16538	0					
ANR	19117	Argument	stat_errno		16538	1					
ANR	19118	Identifier	stat_errno		16538	0					
ANR	19119	IfStatement	if ( i == NONE && patch_get )		16538	1					
ANR	19120	Condition	i == NONE && patch_get	904:9:25996:26017	16538	0	True				
ANR	19121	AndExpression	i == NONE && patch_get		16538	0		&&			
ANR	19122	EqualityExpression	i == NONE		16538	0		==			
ANR	19123	Identifier	i		16538	0					
ANR	19124	Identifier	NONE		16538	1					
ANR	19125	Identifier	patch_get		16538	1					
ANR	19126	CompoundStatement		480:2:13626:13651	16538	1					
ANR	19127	IdentifierDeclStatement	enum nametype nope = NONE ;	906:2:26031:26056	16538	0	True				
ANR	19128	IdentifierDecl	nope = NONE		16538	0					
ANR	19129	IdentifierDeclType	enum nametype		16538	0					
ANR	19130	Identifier	nope		16538	1					
ANR	19131	AssignmentExpression	nope = NONE		16538	2		=			
ANR	19132	Identifier	NONE		16538	0					
ANR	19133	Identifier	NONE		16538	1					
ANR	19134	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		16538	1					
ANR	19135	ForInit	i = OLD ;	908:7:26066:26073	16538	0	True				
ANR	19136	AssignmentExpression	i = OLD		16538	0		=			
ANR	19137	Identifier	i		16538	0					
ANR	19138	Identifier	OLD		16538	1					
ANR	19139	Condition	i <= INDEX	908:17:26076:26085	16538	1	True				
ANR	19140	RelationalExpression	i <= INDEX		16538	0		<=			
ANR	19141	Identifier	i		16538	0					
ANR	19142	Identifier	INDEX		16538	1					
ANR	19143	PostIncDecOperationExpression	i ++	908:30:26089:26091	16538	2	True				
ANR	19144	Identifier	i		16538	0					
ANR	19145	IncDec	++		16538	1					
ANR	19146	IfStatement	if ( p_name [ i ] )		16538	3					
ANR	19147	Condition	p_name [ i ]	909:8:26102:26110	16538	0	True				
ANR	19148	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19149	Identifier	p_name		16538	0					
ANR	19150	Identifier	i		16538	1					
ANR	19151	CompoundStatement		488:8:13793:13865	16538	1					
ANR	19152	IdentifierDeclStatement	char const * cs ;	911:8:26129:26143	16538	0	True				
ANR	19153	IdentifierDecl	* cs		16538	0					
ANR	19154	IdentifierDeclType	char const *		16538	0					
ANR	19155	Identifier	cs		16538	1					
ANR	19156	IdentifierDeclStatement	char * getbuf ;	912:8:26153:26165	16538	1	True				
ANR	19157	IdentifierDecl	* getbuf		16538	0					
ANR	19158	IdentifierDeclType	char *		16538	0					
ANR	19159	Identifier	getbuf		16538	1					
ANR	19160	IdentifierDeclStatement	char * diffbuf ;	913:8:26175:26188	16538	2	True				
ANR	19161	IdentifierDecl	* diffbuf		16538	0					
ANR	19162	IdentifierDeclType	char *		16538	0					
ANR	19163	Identifier	diffbuf		16538	1					
ANR	19164	IdentifierDeclStatement	"bool readonly = ( outfile && strcmp ( outfile , p_name [ i ] ) != 0 ) ;"	914:8:26198:26270	16538	3	True				
ANR	19165	IdentifierDecl	"readonly = ( outfile && strcmp ( outfile , p_name [ i ] ) != 0 )"		16538	0					
ANR	19166	IdentifierDeclType	bool		16538	0					
ANR	19167	Identifier	readonly		16538	1					
ANR	19168	AssignmentExpression	"readonly = ( outfile && strcmp ( outfile , p_name [ i ] ) != 0 )"		16538	2		=			
ANR	19169	Identifier	readonly		16538	0					
ANR	19170	AndExpression	"outfile && strcmp ( outfile , p_name [ i ] ) != 0"		16538	1		&&			
ANR	19171	Identifier	outfile		16538	0					
ANR	19172	EqualityExpression	"strcmp ( outfile , p_name [ i ] ) != 0"		16538	1		!=			
ANR	19173	CallExpression	"strcmp ( outfile , p_name [ i ] )"		16538	0					
ANR	19174	Callee	strcmp		16538	0					
ANR	19175	Identifier	strcmp		16538	0					
ANR	19176	ArgumentList	outfile		16538	1					
ANR	19177	Argument	outfile		16538	0					
ANR	19178	Identifier	outfile		16538	0					
ANR	19179	Argument	p_name [ i ]		16538	1					
ANR	19180	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19181	Identifier	p_name		16538	0					
ANR	19182	Identifier	i		16538	1					
ANR	19183	PrimaryExpression	0		16538	1					
ANR	19184	IfStatement	"if ( nope == NONE || strcmp ( p_name [ nope ] , p_name [ i ] ) != 0 )"		16538	4					
ANR	19185	Condition	"nope == NONE || strcmp ( p_name [ nope ] , p_name [ i ] ) != 0"	917:12:26285:26337	16538	0	True				
ANR	19186	OrExpression	"nope == NONE || strcmp ( p_name [ nope ] , p_name [ i ] ) != 0"		16538	0		||			
ANR	19187	EqualityExpression	nope == NONE		16538	0		==			
ANR	19188	Identifier	nope		16538	0					
ANR	19189	Identifier	NONE		16538	1					
ANR	19190	EqualityExpression	"strcmp ( p_name [ nope ] , p_name [ i ] ) != 0"		16538	1		!=			
ANR	19191	CallExpression	"strcmp ( p_name [ nope ] , p_name [ i ] )"		16538	0					
ANR	19192	Callee	strcmp		16538	0					
ANR	19193	Identifier	strcmp		16538	0					
ANR	19194	ArgumentList	p_name [ nope ]		16538	1					
ANR	19195	Argument	p_name [ nope ]		16538	0					
ANR	19196	ArrayIndexing	p_name [ nope ]		16538	0					
ANR	19197	Identifier	p_name		16538	0					
ANR	19198	Identifier	nope		16538	1					
ANR	19199	Argument	p_name [ i ]		16538	1					
ANR	19200	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19201	Identifier	p_name		16538	0					
ANR	19202	Identifier	i		16538	1					
ANR	19203	PrimaryExpression	0		16538	1					
ANR	19204	CompoundStatement		492:3:13938:13938	16538	1					
ANR	19205	ExpressionStatement	"cs = ( version_controller ( p_name [ i ] , readonly , ( struct stat * ) 0 , & getbuf , & diffbuf ) )"	919:5:26350:26451	16538	0	True				
ANR	19206	AssignmentExpression	"cs = ( version_controller ( p_name [ i ] , readonly , ( struct stat * ) 0 , & getbuf , & diffbuf ) )"		16538	0		=			
ANR	19207	Identifier	cs		16538	0					
ANR	19208	CallExpression	"version_controller ( p_name [ i ] , readonly , ( struct stat * ) 0 , & getbuf , & diffbuf )"		16538	1					
ANR	19209	Callee	version_controller		16538	0					
ANR	19210	Identifier	version_controller		16538	0					
ANR	19211	ArgumentList	p_name [ i ]		16538	1					
ANR	19212	Argument	p_name [ i ]		16538	0					
ANR	19213	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19214	Identifier	p_name		16538	0					
ANR	19215	Identifier	i		16538	1					
ANR	19216	Argument	readonly		16538	1					
ANR	19217	Identifier	readonly		16538	0					
ANR	19218	Argument	( struct stat * ) 0		16538	2					
ANR	19219	CastExpression	( struct stat * ) 0		16538	0					
ANR	19220	CastTarget	struct stat *		16538	0					
ANR	19221	PrimaryExpression	0		16538	1					
ANR	19222	Argument	& getbuf		16538	3					
ANR	19223	UnaryOperationExpression	& getbuf		16538	0					
ANR	19224	UnaryOperator	&		16538	0					
ANR	19225	Identifier	getbuf		16538	1					
ANR	19226	Argument	& diffbuf		16538	4					
ANR	19227	UnaryOperationExpression	& diffbuf		16538	0					
ANR	19228	UnaryOperator	&		16538	0					
ANR	19229	Identifier	diffbuf		16538	1					
ANR	19230	ExpressionStatement	version_controlled [ i ] = ! ! cs	922:5:26458:26487	16538	1	True				
ANR	19231	AssignmentExpression	version_controlled [ i ] = ! ! cs		16538	0		=			
ANR	19232	ArrayIndexing	version_controlled [ i ]		16538	0					
ANR	19233	Identifier	version_controlled		16538	0					
ANR	19234	Identifier	i		16538	1					
ANR	19235	UnaryOperationExpression	! ! cs		16538	1					
ANR	19236	UnaryOperator	!		16538	0					
ANR	19237	UnaryOperationExpression	! cs		16538	1					
ANR	19238	UnaryOperator	!		16538	0					
ANR	19239	Identifier	cs		16538	1					
ANR	19240	IfStatement	if ( cs )		16538	2					
ANR	19241	Condition	cs	923:9:26498:26499	16538	0	True				
ANR	19242	Identifier	cs		16538	0					
ANR	19243	CompoundStatement		498:7:14104:14104	16538	1					
ANR	19244	IfStatement	"if ( version_get ( p_name [ i ] , cs , false , readonly , getbuf , & st [ i ] ) )"		16538	0					
ANR	19245	Condition	"version_get ( p_name [ i ] , cs , false , readonly , getbuf , & st [ i ] )"	925:13:26524:26595	16538	0	True				
ANR	19246	CallExpression	"version_get ( p_name [ i ] , cs , false , readonly , getbuf , & st [ i ] )"		16538	0					
ANR	19247	Callee	version_get		16538	0					
ANR	19248	Identifier	version_get		16538	0					
ANR	19249	ArgumentList	p_name [ i ]		16538	1					
ANR	19250	Argument	p_name [ i ]		16538	0					
ANR	19251	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19252	Identifier	p_name		16538	0					
ANR	19253	Identifier	i		16538	1					
ANR	19254	Argument	cs		16538	1					
ANR	19255	Identifier	cs		16538	0					
ANR	19256	Argument	false		16538	2					
ANR	19257	Identifier	false		16538	0					
ANR	19258	Argument	readonly		16538	3					
ANR	19259	Identifier	readonly		16538	0					
ANR	19260	Argument	getbuf		16538	4					
ANR	19261	Identifier	getbuf		16538	0					
ANR	19262	Argument	& st [ i ]		16538	5					
ANR	19263	UnaryOperationExpression	& st [ i ]		16538	0					
ANR	19264	UnaryOperator	&		16538	0					
ANR	19265	ArrayIndexing	st [ i ]		16538	1					
ANR	19266	Identifier	st		16538	0					
ANR	19267	Identifier	i		16538	1					
ANR	19268	ExpressionStatement	stat_errno [ i ] = 0	927:4:26602:26619	16538	1	True				
ANR	19269	AssignmentExpression	stat_errno [ i ] = 0		16538	0		=			
ANR	19270	ArrayIndexing	stat_errno [ i ]		16538	0					
ANR	19271	Identifier	stat_errno		16538	0					
ANR	19272	Identifier	i		16538	1					
ANR	19273	PrimaryExpression	0		16538	1					
ANR	19274	ElseStatement	else		16538	0					
ANR	19275	ExpressionStatement	version_controlled [ i ] = 0	929:4:26639:26664	16538	0	True				
ANR	19276	AssignmentExpression	version_controlled [ i ] = 0		16538	0		=			
ANR	19277	ArrayIndexing	version_controlled [ i ]		16538	0					
ANR	19278	Identifier	version_controlled		16538	0					
ANR	19279	Identifier	i		16538	1					
ANR	19280	PrimaryExpression	0		16538	1					
ANR	19281	ExpressionStatement	free ( getbuf )	931:9:26676:26689	16538	1	True				
ANR	19282	CallExpression	free ( getbuf )		16538	0					
ANR	19283	Callee	free		16538	0					
ANR	19284	Identifier	free		16538	0					
ANR	19285	ArgumentList	getbuf		16538	1					
ANR	19286	Argument	getbuf		16538	0					
ANR	19287	Identifier	getbuf		16538	0					
ANR	19288	ExpressionStatement	free ( diffbuf )	932:9:26700:26714	16538	2	True				
ANR	19289	CallExpression	free ( diffbuf )		16538	0					
ANR	19290	Callee	free		16538	0					
ANR	19291	Identifier	free		16538	0					
ANR	19292	ArgumentList	diffbuf		16538	1					
ANR	19293	Argument	diffbuf		16538	0					
ANR	19294	Identifier	diffbuf		16538	0					
ANR	19295	IfStatement	if ( ! stat_errno [ i ] )		16538	3					
ANR	19296	Condition	! stat_errno [ i ]	934:13:26730:26744	16538	0	True				
ANR	19297	UnaryOperationExpression	! stat_errno [ i ]		16538	0					
ANR	19298	UnaryOperator	!		16538	0					
ANR	19299	ArrayIndexing	stat_errno [ i ]		16538	1					
ANR	19300	Identifier	stat_errno		16538	0					
ANR	19301	Identifier	i		16538	1					
ANR	19302	BreakStatement	break ;	935:4:26751:26756	16538	1	True				
ANR	19303	ExpressionStatement	nope = i	939:8:26781:26789	16538	5	True				
ANR	19304	AssignmentExpression	nope = i		16538	0		=			
ANR	19305	Identifier	nope		16538	0					
ANR	19306	Identifier	i		16538	1					
ANR	19307	IfStatement	"if ( i0 != NONE && ( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE )"		16538	2					
ANR	19308	Condition	"i0 != NONE && ( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"	943:9:26818:26998	16538	0	True				
ANR	19309	AndExpression	"i0 != NONE && ( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"		16538	0		&&			
ANR	19310	EqualityExpression	i0 != NONE		16538	0		!=			
ANR	19311	Identifier	i0		16538	0					
ANR	19312	Identifier	NONE		16538	1					
ANR	19313	AndExpression	"( i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type ) && maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"		16538	1		&&			
ANR	19314	OrExpression	i == NONE || ( st [ i ] . st_mode & S_IFMT ) == file_type		16538	0		||			
ANR	19315	EqualityExpression	i == NONE		16538	0		==			
ANR	19316	Identifier	i		16538	0					
ANR	19317	Identifier	NONE		16538	1					
ANR	19318	EqualityExpression	( st [ i ] . st_mode & S_IFMT ) == file_type		16538	1		==			
ANR	19319	BitAndExpression	st [ i ] . st_mode & S_IFMT		16538	0		&			
ANR	19320	MemberAccess	st [ i ] . st_mode		16538	0					
ANR	19321	ArrayIndexing	st [ i ]		16538	0					
ANR	19322	Identifier	st		16538	0					
ANR	19323	Identifier	i		16538	1					
ANR	19324	Identifier	st_mode		16538	1					
ANR	19325	Identifier	S_IFMT		16538	1					
ANR	19326	Identifier	file_type		16538	1					
ANR	19327	AndExpression	"maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 ) && i == NONE"		16538	1		&&			
ANR	19328	CallExpression	"maybe_reverse ( p_name [ i == NONE ? i0 : i ] , i == NONE , i == NONE || st [ i ] . st_size == 0 )"		16538	0					
ANR	19329	Callee	maybe_reverse		16538	0					
ANR	19330	Identifier	maybe_reverse		16538	0					
ANR	19331	ArgumentList	p_name [ i == NONE ? i0 : i ]		16538	1					
ANR	19332	Argument	p_name [ i == NONE ? i0 : i ]		16538	0					
ANR	19333	ArrayIndexing	p_name [ i == NONE ? i0 : i ]		16538	0					
ANR	19334	Identifier	p_name		16538	0					
ANR	19335	ConditionalExpression	i == NONE ? i0 : i		16538	1					
ANR	19336	Condition	i == NONE		16538	0					
ANR	19337	EqualityExpression	i == NONE		16538	0		==			
ANR	19338	Identifier	i		16538	0					
ANR	19339	Identifier	NONE		16538	1					
ANR	19340	Identifier	i0		16538	1					
ANR	19341	Identifier	i		16538	2					
ANR	19342	Argument	i == NONE		16538	1					
ANR	19343	EqualityExpression	i == NONE		16538	0		==			
ANR	19344	Identifier	i		16538	0					
ANR	19345	Identifier	NONE		16538	1					
ANR	19346	Argument	i == NONE || st [ i ] . st_size == 0		16538	2					
ANR	19347	OrExpression	i == NONE || st [ i ] . st_size == 0		16538	0		||			
ANR	19348	EqualityExpression	i == NONE		16538	0		==			
ANR	19349	Identifier	i		16538	0					
ANR	19350	Identifier	NONE		16538	1					
ANR	19351	EqualityExpression	st [ i ] . st_size == 0		16538	1		==			
ANR	19352	MemberAccess	st [ i ] . st_size		16538	0					
ANR	19353	ArrayIndexing	st [ i ]		16538	0					
ANR	19354	Identifier	st		16538	0					
ANR	19355	Identifier	i		16538	1					
ANR	19356	Identifier	st_size		16538	1					
ANR	19357	PrimaryExpression	0		16538	1					
ANR	19358	EqualityExpression	i == NONE		16538	1		==			
ANR	19359	Identifier	i		16538	0					
ANR	19360	Identifier	NONE		16538	1					
ANR	19361	ExpressionStatement	i = i0	948:7:27008:27014	16538	1	True				
ANR	19362	AssignmentExpression	i = i0		16538	0		=			
ANR	19363	Identifier	i		16538	0					
ANR	19364	Identifier	i0		16538	1					
ANR	19365	IfStatement	if ( i == NONE && p_says_nonexistent [ reverse ] )		16538	3					
ANR	19366	Condition	i == NONE && p_says_nonexistent [ reverse ]	950:9:27026:27065	16538	0	True				
ANR	19367	AndExpression	i == NONE && p_says_nonexistent [ reverse ]		16538	0		&&			
ANR	19368	EqualityExpression	i == NONE		16538	0		==			
ANR	19369	Identifier	i		16538	0					
ANR	19370	Identifier	NONE		16538	1					
ANR	19371	ArrayIndexing	p_says_nonexistent [ reverse ]		16538	1					
ANR	19372	Identifier	p_says_nonexistent		16538	0					
ANR	19373	Identifier	reverse		16538	1					
ANR	19374	CompoundStatement		528:2:14721:14749	16538	1					
ANR	19375	IdentifierDeclStatement	int newdirs [ 3 ] ;	952:2:27079:27093	16538	0	True				
ANR	19376	IdentifierDecl	newdirs [ 3 ]		16538	0					
ANR	19377	IdentifierDeclType	int [ 3 ]		16538	0					
ANR	19378	Identifier	newdirs		16538	1					
ANR	19379	PrimaryExpression	3		16538	2					
ANR	19380	IdentifierDeclStatement	int newdirs_min = INT_MAX ;	953:2:27097:27122	16538	1	True				
ANR	19381	IdentifierDecl	newdirs_min = INT_MAX		16538	0					
ANR	19382	IdentifierDeclType	int		16538	0					
ANR	19383	Identifier	newdirs_min		16538	1					
ANR	19384	AssignmentExpression	newdirs_min = INT_MAX		16538	2		=			
ANR	19385	Identifier	INT_MAX		16538	0					
ANR	19386	Identifier	INT_MAX		16538	1					
ANR	19387	IdentifierDeclStatement	int distance_from_minimum [ 3 ] ;	954:2:27126:27154	16538	2	True				
ANR	19388	IdentifierDecl	distance_from_minimum [ 3 ]		16538	0					
ANR	19389	IdentifierDeclType	int [ 3 ]		16538	0					
ANR	19390	Identifier	distance_from_minimum		16538	1					
ANR	19391	PrimaryExpression	3		16538	2					
ANR	19392	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		16538	3					
ANR	19393	ForInit	i = OLD ;	956:7:27164:27171	16538	0	True				
ANR	19394	AssignmentExpression	i = OLD		16538	0		=			
ANR	19395	Identifier	i		16538	0					
ANR	19396	Identifier	OLD		16538	1					
ANR	19397	Condition	i <= INDEX	956:17:27174:27183	16538	1	True				
ANR	19398	RelationalExpression	i <= INDEX		16538	0		<=			
ANR	19399	Identifier	i		16538	0					
ANR	19400	Identifier	INDEX		16538	1					
ANR	19401	PostIncDecOperationExpression	i ++	956:30:27187:27189	16538	2	True				
ANR	19402	Identifier	i		16538	0					
ANR	19403	IncDec	++		16538	1					
ANR	19404	IfStatement	if ( p_name [ i ] )		16538	3					
ANR	19405	Condition	p_name [ i ]	957:8:27200:27208	16538	0	True				
ANR	19406	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19407	Identifier	p_name		16538	0					
ANR	19408	Identifier	i		16538	1					
ANR	19409	CompoundStatement		532:6:14812:14812	16538	1					
ANR	19410	ExpressionStatement	"newdirs [ i ] = ( prefix_components ( p_name [ i ] , false ) - prefix_components ( p_name [ i ] , true ) )"	959:8:27227:27324	16538	0	True				
ANR	19411	AssignmentExpression	"newdirs [ i ] = ( prefix_components ( p_name [ i ] , false ) - prefix_components ( p_name [ i ] , true ) )"		16538	0		=			
ANR	19412	ArrayIndexing	newdirs [ i ]		16538	0					
ANR	19413	Identifier	newdirs		16538	0					
ANR	19414	Identifier	i		16538	1					
ANR	19415	AdditiveExpression	"prefix_components ( p_name [ i ] , false ) - prefix_components ( p_name [ i ] , true )"		16538	1		-			
ANR	19416	CallExpression	"prefix_components ( p_name [ i ] , false )"		16538	0					
ANR	19417	Callee	prefix_components		16538	0					
ANR	19418	Identifier	prefix_components		16538	0					
ANR	19419	ArgumentList	p_name [ i ]		16538	1					
ANR	19420	Argument	p_name [ i ]		16538	0					
ANR	19421	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19422	Identifier	p_name		16538	0					
ANR	19423	Identifier	i		16538	1					
ANR	19424	Argument	false		16538	1					
ANR	19425	Identifier	false		16538	0					
ANR	19426	CallExpression	"prefix_components ( p_name [ i ] , true )"		16538	1					
ANR	19427	Callee	prefix_components		16538	0					
ANR	19428	Identifier	prefix_components		16538	0					
ANR	19429	ArgumentList	p_name [ i ]		16538	1					
ANR	19430	Argument	p_name [ i ]		16538	0					
ANR	19431	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19432	Identifier	p_name		16538	0					
ANR	19433	Identifier	i		16538	1					
ANR	19434	Argument	true		16538	1					
ANR	19435	Identifier	true		16538	0					
ANR	19436	IfStatement	if ( newdirs [ i ] < newdirs_min )		16538	1					
ANR	19437	Condition	newdirs [ i ] < newdirs_min	961:12:27338:27361	16538	0	True				
ANR	19438	RelationalExpression	newdirs [ i ] < newdirs_min		16538	0		<			
ANR	19439	ArrayIndexing	newdirs [ i ]		16538	0					
ANR	19440	Identifier	newdirs		16538	0					
ANR	19441	Identifier	i		16538	1					
ANR	19442	Identifier	newdirs_min		16538	1					
ANR	19443	ExpressionStatement	newdirs_min = newdirs [ i ]	962:3:27367:27391	16538	1	True				
ANR	19444	AssignmentExpression	newdirs_min = newdirs [ i ]		16538	0		=			
ANR	19445	Identifier	newdirs_min		16538	0					
ANR	19446	ArrayIndexing	newdirs [ i ]		16538	1					
ANR	19447	Identifier	newdirs		16538	0					
ANR	19448	Identifier	i		16538	1					
ANR	19449	ForStatement	for ( i = OLD ; i <= INDEX ; i ++ )		16538	4					
ANR	19450	ForInit	i = OLD ;	965:7:27409:27416	16538	0	True				
ANR	19451	AssignmentExpression	i = OLD		16538	0		=			
ANR	19452	Identifier	i		16538	0					
ANR	19453	Identifier	OLD		16538	1					
ANR	19454	Condition	i <= INDEX	965:17:27419:27428	16538	1	True				
ANR	19455	RelationalExpression	i <= INDEX		16538	0		<=			
ANR	19456	Identifier	i		16538	0					
ANR	19457	Identifier	INDEX		16538	1					
ANR	19458	PostIncDecOperationExpression	i ++	965:30:27432:27434	16538	2	True				
ANR	19459	Identifier	i		16538	0					
ANR	19460	IncDec	++		16538	1					
ANR	19461	IfStatement	if ( p_name [ i ] )		16538	3					
ANR	19462	Condition	p_name [ i ]	966:8:27445:27453	16538	0	True				
ANR	19463	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19464	Identifier	p_name		16538	0					
ANR	19465	Identifier	i		16538	1					
ANR	19466	ExpressionStatement	distance_from_minimum [ i ] = newdirs [ i ] - newdirs_min	967:6:27462:27513	16538	1	True				
ANR	19467	AssignmentExpression	distance_from_minimum [ i ] = newdirs [ i ] - newdirs_min		16538	0		=			
ANR	19468	ArrayIndexing	distance_from_minimum [ i ]		16538	0					
ANR	19469	Identifier	distance_from_minimum		16538	0					
ANR	19470	Identifier	i		16538	1					
ANR	19471	AdditiveExpression	newdirs [ i ] - newdirs_min		16538	1		-			
ANR	19472	ArrayIndexing	newdirs [ i ]		16538	0					
ANR	19473	Identifier	newdirs		16538	0					
ANR	19474	Identifier	i		16538	1					
ANR	19475	Identifier	newdirs_min		16538	1					
ANR	19476	ExpressionStatement	"i = best_name ( p_name , distance_from_minimum )"	970:2:27589:27634	16538	5	True				
ANR	19477	AssignmentExpression	"i = best_name ( p_name , distance_from_minimum )"		16538	0		=			
ANR	19478	Identifier	i		16538	0					
ANR	19479	CallExpression	"best_name ( p_name , distance_from_minimum )"		16538	1					
ANR	19480	Callee	best_name		16538	0					
ANR	19481	Identifier	best_name		16538	0					
ANR	19482	ArgumentList	p_name		16538	1					
ANR	19483	Argument	p_name		16538	0					
ANR	19484	Identifier	p_name		16538	0					
ANR	19485	Argument	distance_from_minimum		16538	1					
ANR	19486	Identifier	distance_from_minimum		16538	0					
ANR	19487	IfStatement	if ( ( pch_rename ( ) || pch_copy ( ) ) && ! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) ) )		16538	36					
ANR	19488	Condition	( pch_rename ( ) || pch_copy ( ) ) && ! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )	975:8:27667:27873	16538	0	True				
ANR	19489	AndExpression	( pch_rename ( ) || pch_copy ( ) ) && ! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )		16538	0		&&			
ANR	19490	OrExpression	pch_rename ( ) || pch_copy ( )		16538	0		||			
ANR	19491	CallExpression	pch_rename ( )		16538	0					
ANR	19492	Callee	pch_rename		16538	0					
ANR	19493	Identifier	pch_rename		16538	0					
ANR	19494	ArgumentList			16538	1					
ANR	19495	CallExpression	pch_copy ( )		16538	1					
ANR	19496	Callee	pch_copy		16538	0					
ANR	19497	Identifier	pch_copy		16538	0					
ANR	19498	ArgumentList			16538	1					
ANR	19499	AndExpression	! inname && ! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )		16538	1		&&			
ANR	19500	UnaryOperationExpression	! inname		16538	0					
ANR	19501	UnaryOperator	!		16538	0					
ANR	19502	Identifier	inname		16538	1					
ANR	19503	UnaryOperationExpression	! ( ( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] ) )		16538	1					
ANR	19504	UnaryOperator	!		16538	0					
ANR	19505	AndExpression	( i == OLD || i == NEW ) && p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		16538	1		&&			
ANR	19506	OrExpression	i == OLD || i == NEW		16538	0		||			
ANR	19507	EqualityExpression	i == OLD		16538	0		==			
ANR	19508	Identifier	i		16538	0					
ANR	19509	Identifier	OLD		16538	1					
ANR	19510	EqualityExpression	i == NEW		16538	1		==			
ANR	19511	Identifier	i		16538	0					
ANR	19512	Identifier	NEW		16538	1					
ANR	19513	AndExpression	p_name [ reverse ] && p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		16538	1		&&			
ANR	19514	ArrayIndexing	p_name [ reverse ]		16538	0					
ANR	19515	Identifier	p_name		16538	0					
ANR	19516	Identifier	reverse		16538	1					
ANR	19517	AndExpression	p_name [ ! reverse ] && name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		16538	1		&&			
ANR	19518	ArrayIndexing	p_name [ ! reverse ]		16538	0					
ANR	19519	Identifier	p_name		16538	0					
ANR	19520	UnaryOperationExpression	! reverse		16538	1					
ANR	19521	UnaryOperator	!		16538	0					
ANR	19522	Identifier	reverse		16538	1					
ANR	19523	AndExpression	name_is_valid ( p_name [ reverse ] ) && name_is_valid ( p_name [ ! reverse ] )		16538	1		&&			
ANR	19524	CallExpression	name_is_valid ( p_name [ reverse ] )		16538	0					
ANR	19525	Callee	name_is_valid		16538	0					
ANR	19526	Identifier	name_is_valid		16538	0					
ANR	19527	ArgumentList	p_name [ reverse ]		16538	1					
ANR	19528	Argument	p_name [ reverse ]		16538	0					
ANR	19529	ArrayIndexing	p_name [ reverse ]		16538	0					
ANR	19530	Identifier	p_name		16538	0					
ANR	19531	Identifier	reverse		16538	1					
ANR	19532	CallExpression	name_is_valid ( p_name [ ! reverse ] )		16538	1					
ANR	19533	Callee	name_is_valid		16538	0					
ANR	19534	Identifier	name_is_valid		16538	0					
ANR	19535	ArgumentList	p_name [ ! reverse ]		16538	1					
ANR	19536	Argument	p_name [ ! reverse ]		16538	0					
ANR	19537	ArrayIndexing	p_name [ ! reverse ]		16538	0					
ANR	19538	Identifier	p_name		16538	0					
ANR	19539	UnaryOperationExpression	! reverse		16538	1					
ANR	19540	UnaryOperator	!		16538	0					
ANR	19541	Identifier	reverse		16538	1					
ANR	19542	CompoundStatement		555:6:15477:15477	16538	1					
ANR	19543	ExpressionStatement	"say ( ""Cannot %s file without two valid file names\\n"" , pch_rename ( ) ? ""rename"" : ""copy"" )"	982:1:27885:27973	16538	0	True				
ANR	19544	CallExpression	"say ( ""Cannot %s file without two valid file names\\n"" , pch_rename ( ) ? ""rename"" : ""copy"" )"		16538	0					
ANR	19545	Callee	say		16538	0					
ANR	19546	Identifier	say		16538	0					
ANR	19547	ArgumentList	"""Cannot %s file without two valid file names\\n"""		16538	1					
ANR	19548	Argument	"""Cannot %s file without two valid file names\\n"""		16538	0					
ANR	19549	PrimaryExpression	"""Cannot %s file without two valid file names\\n"""		16538	0					
ANR	19550	Argument	"pch_rename ( ) ? ""rename"" : ""copy"""		16538	1					
ANR	19551	ConditionalExpression	"pch_rename ( ) ? ""rename"" : ""copy"""		16538	0					
ANR	19552	Condition	pch_rename ( )		16538	0					
ANR	19553	CallExpression	pch_rename ( )		16538	0					
ANR	19554	Callee	pch_rename		16538	0					
ANR	19555	Identifier	pch_rename		16538	0					
ANR	19556	ArgumentList			16538	1					
ANR	19557	PrimaryExpression	"""rename"""		16538	1					
ANR	19558	PrimaryExpression	"""copy"""		16538	2					
ANR	19559	ExpressionStatement	skip_rest_of_patch = true	983:1:27976:28001	16538	1	True				
ANR	19560	AssignmentExpression	skip_rest_of_patch = true		16538	0		=			
ANR	19561	Identifier	skip_rest_of_patch		16538	0					
ANR	19562	Identifier	true		16538	1					
ANR	19563	IfStatement	if ( i == NONE )		16538	37					
ANR	19564	Condition	i == NONE	986:8:28020:28028	16538	0	True				
ANR	19565	EqualityExpression	i == NONE		16538	0		==			
ANR	19566	Identifier	i		16538	0					
ANR	19567	Identifier	NONE		16538	1					
ANR	19568	CompoundStatement		561:6:15632:15632	16538	1					
ANR	19569	IfStatement	if ( inname )		16538	0					
ANR	19570	Condition	inname	988:5:28044:28049	16538	0	True				
ANR	19571	Identifier	inname		16538	0					
ANR	19572	CompoundStatement		563:3:15650:15650	16538	1					
ANR	19573	ExpressionStatement	"inerrno = stat_file ( inname , & instat )"	990:5:28062:28099	16538	0	True				
ANR	19574	AssignmentExpression	"inerrno = stat_file ( inname , & instat )"		16538	0		=			
ANR	19575	Identifier	inerrno		16538	0					
ANR	19576	CallExpression	"stat_file ( inname , & instat )"		16538	1					
ANR	19577	Callee	stat_file		16538	0					
ANR	19578	Identifier	stat_file		16538	0					
ANR	19579	ArgumentList	inname		16538	1					
ANR	19580	Argument	inname		16538	0					
ANR	19581	Identifier	inname		16538	0					
ANR	19582	Argument	& instat		16538	1					
ANR	19583	UnaryOperationExpression	& instat		16538	0					
ANR	19584	UnaryOperator	&		16538	0					
ANR	19585	Identifier	instat		16538	1					
ANR	19586	IfStatement	if ( inerrno || ( instat . st_mode & S_IFMT ) == file_type )		16538	1					
ANR	19587	Condition	inerrno || ( instat . st_mode & S_IFMT ) == file_type	991:9:28110:28158	16538	0	True				
ANR	19588	OrExpression	inerrno || ( instat . st_mode & S_IFMT ) == file_type		16538	0		||			
ANR	19589	Identifier	inerrno		16538	0					
ANR	19590	EqualityExpression	( instat . st_mode & S_IFMT ) == file_type		16538	1		==			
ANR	19591	BitAndExpression	instat . st_mode & S_IFMT		16538	0		&			
ANR	19592	MemberAccess	instat . st_mode		16538	0					
ANR	19593	Identifier	instat		16538	0					
ANR	19594	Identifier	st_mode		16538	1					
ANR	19595	Identifier	S_IFMT		16538	1					
ANR	19596	Identifier	file_type		16538	1					
ANR	19597	ExpressionStatement	"maybe_reverse ( inname , inerrno , inerrno || instat . st_size == 0 )"	992:7:28168:28231	16538	1	True				
ANR	19598	CallExpression	"maybe_reverse ( inname , inerrno , inerrno || instat . st_size == 0 )"		16538	0					
ANR	19599	Callee	maybe_reverse		16538	0					
ANR	19600	Identifier	maybe_reverse		16538	0					
ANR	19601	ArgumentList	inname		16538	1					
ANR	19602	Argument	inname		16538	0					
ANR	19603	Identifier	inname		16538	0					
ANR	19604	Argument	inerrno		16538	1					
ANR	19605	Identifier	inerrno		16538	0					
ANR	19606	Argument	inerrno || instat . st_size == 0		16538	2					
ANR	19607	OrExpression	inerrno || instat . st_size == 0		16538	0		||			
ANR	19608	Identifier	inerrno		16538	0					
ANR	19609	EqualityExpression	instat . st_size == 0		16538	1		==			
ANR	19610	MemberAccess	instat . st_size		16538	0					
ANR	19611	Identifier	instat		16538	0					
ANR	19612	Identifier	st_size		16538	1					
ANR	19613	PrimaryExpression	0		16538	1					
ANR	19614	ElseStatement	else		16538	0					
ANR	19615	ExpressionStatement	inerrno = - 1	995:10:28254:28266	16538	0	True				
ANR	19616	AssignmentExpression	inerrno = - 1		16538	0		=			
ANR	19617	Identifier	inerrno		16538	0					
ANR	19618	UnaryOperationExpression	- 1		16538	1					
ANR	19619	UnaryOperator	-		16538	0					
ANR	19620	PrimaryExpression	1		16538	1					
ANR	19621	ElseStatement	else		16538	0					
ANR	19622	CompoundStatement		572:6:15886:15886	16538	0					
ANR	19623	ExpressionStatement	inname = xstrdup ( p_name [ i ] )	999:1:28294:28322	16538	0	True				
ANR	19624	AssignmentExpression	inname = xstrdup ( p_name [ i ] )		16538	0		=			
ANR	19625	Identifier	inname		16538	0					
ANR	19626	CallExpression	xstrdup ( p_name [ i ] )		16538	1					
ANR	19627	Callee	xstrdup		16538	0					
ANR	19628	Identifier	xstrdup		16538	0					
ANR	19629	ArgumentList	p_name [ i ]		16538	1					
ANR	19630	Argument	p_name [ i ]		16538	0					
ANR	19631	ArrayIndexing	p_name [ i ]		16538	0					
ANR	19632	Identifier	p_name		16538	0					
ANR	19633	Identifier	i		16538	1					
ANR	19634	ExpressionStatement	inerrno = stat_errno [ i ]	1000:1:28325:28348	16538	1	True				
ANR	19635	AssignmentExpression	inerrno = stat_errno [ i ]		16538	0		=			
ANR	19636	Identifier	inerrno		16538	0					
ANR	19637	ArrayIndexing	stat_errno [ i ]		16538	1					
ANR	19638	Identifier	stat_errno		16538	0					
ANR	19639	Identifier	i		16538	1					
ANR	19640	ExpressionStatement	invc = version_controlled [ i ]	1001:1:28351:28379	16538	2	True				
ANR	19641	AssignmentExpression	invc = version_controlled [ i ]		16538	0		=			
ANR	19642	Identifier	invc		16538	0					
ANR	19643	ArrayIndexing	version_controlled [ i ]		16538	1					
ANR	19644	Identifier	version_controlled		16538	0					
ANR	19645	Identifier	i		16538	1					
ANR	19646	ExpressionStatement	instat = st [ i ]	1002:1:28382:28396	16538	3	True				
ANR	19647	AssignmentExpression	instat = st [ i ]		16538	0		=			
ANR	19648	Identifier	instat		16538	0					
ANR	19649	ArrayIndexing	st [ i ]		16538	1					
ANR	19650	Identifier	st		16538	0					
ANR	19651	Identifier	i		16538	1					
ANR	19652	ReturnStatement	return retval ;	1005:4:28411:28424	16538	38	True				
ANR	19653	Identifier	retval		16538	0					
ANR	19654	ReturnType	static enum diff		16538	1					
ANR	19655	Identifier	intuit_diff_type		16538	2					
ANR	19656	ParameterList	"bool need_header , mode_t * p_file_type"		16538	3					
ANR	19657	Parameter	bool need_header	426:18:12365:12380	16538	0	True				
ANR	19658	ParameterType	bool		16538	0					
ANR	19659	Identifier	need_header		16538	1					
ANR	19660	Parameter	mode_t * p_file_type	426:36:12383:12401	16538	1	True				
ANR	19661	ParameterType	mode_t *		16538	0					
ANR	19662	Identifier	p_file_type		16538	1					
ANR	19663	CFGEntryNode	ENTRY		16538		True				
ANR	19664	CFGExitNode	EXIT		16538		True				
ANR	19665	InfiniteForNode	true		16538		True				
ANR	19666	Symbol	* v		16538						
ANR	19667	Symbol	* invalid_names		16538						
ANR	19668	Symbol	chars_read		16538						
ANR	19669	Symbol	* reverse		16538						
ANR	19670	Symbol	p_newfirst		16538						
ANR	19671	Symbol	* st		16538						
ANR	19672	Symbol	p_sline		16538						
ANR	19673	Symbol	OLD		16538						
ANR	19674	Symbol	p_indent		16538						
ANR	19675	Symbol	inerrno		16538						
ANR	19676	Symbol	ISDIGIT		16538						
ANR	19677	Symbol	* nope		16538						
ANR	19678	Symbol	S_IFMT		16538						
ANR	19679	Symbol	first_ed_command_letter		16538						
ANR	19680	Symbol	instat . st_mode		16538						
ANR	19681	Symbol	pget_line		16538						
ANR	19682	Symbol	readonly		16538						
ANR	19683	Symbol	NEW_CONTEXT_DIFF		16538						
ANR	19684	Symbol	p_timestamp [ OLD ] . tv_sec		16538						
ANR	19685	Symbol	fetchmode		16538						
ANR	19686	Symbol	strEQ		16538						
ANR	19687	Symbol	* chars_read		16538						
ANR	19688	Symbol	* p_timestr		16538						
ANR	19689	Symbol	strnEQ		16538						
ANR	19690	Symbol	NONE		16538						
ANR	19691	Symbol	parse_name		16538						
ANR	19692	Symbol	file_tell		16538						
ANR	19693	Symbol	ARRAY_SIZE		16538						
ANR	19694	Symbol	* buf		16538						
ANR	19695	Symbol	NORMAL_DIFF		16538						
ANR	19696	Symbol	newdirs		16538						
ANR	19697	Symbol	pch_rename		16538						
ANR	19698	Symbol	previous_line		16538						
ANR	19699	Symbol	oldc		16538						
ANR	19700	Symbol	& getbuf		16538						
ANR	19701	Symbol	p_timestamp [ NEW ] . tv_sec		16538						
ANR	19702	Symbol	* ( s - 1 )		16538						
ANR	19703	Symbol	name_is_valid		16538						
ANR	19704	Symbol	st [ i ] . st_mode		16538						
ANR	19705	Symbol	pfp		16538						
ANR	19706	Symbol	new_file_type		16538						
ANR	19707	Symbol	p_input_line		16538						
ANR	19708	Symbol	nope		16538						
ANR	19709	Symbol	saved_p_bline		16538						
ANR	19710	Symbol	skip_hex_digits		16538						
ANR	19711	Symbol	* OLD		16538						
ANR	19712	Symbol	* distance_from_minimum		16538						
ANR	19713	Symbol	format_linenum		16538						
ANR	19714	Symbol	* newdirs		16538						
ANR	19715	Symbol	stars_last_line		16538						
ANR	19716	Symbol	p_says_nonexistent		16538						
ANR	19717	Symbol	INT_MAX		16538						
ANR	19718	Symbol	p_timestr		16538						
ANR	19719	Symbol	* p_timestamp		16538						
ANR	19720	Symbol	inname		16538						
ANR	19721	Symbol	timestamp		16538						
ANR	19722	Symbol	this_line		16538						
ANR	19723	Symbol	st		16538						
ANR	19724	Symbol	* p_sha1		16538						
ANR	19725	Symbol	& diffbuf		16538						
ANR	19726	Symbol	diff_type		16538						
ANR	19727	Symbol	xstrdup		16538						
ANR	19728	Symbol	maybe_reverse		16538						
ANR	19729	Symbol	i		16538						
ANR	19730	Symbol	ENOENT		16538						
ANR	19731	Symbol	p_copy		16538						
ANR	19732	Symbol	reverse		16538						
ANR	19733	Symbol	extended_headers		16538						
ANR	19734	Symbol	cs		16538						
ANR	19735	Symbol	p_repl_lines		16538						
ANR	19736	Symbol	buf		16538						
ANR	19737	Symbol	s		16538						
ANR	19738	Symbol	t		16538						
ANR	19739	Symbol	u		16538						
ANR	19740	Symbol	numbuf		16538						
ANR	19741	Symbol	ti		16538						
ANR	19742	Symbol	p_name		16538						
ANR	19743	Symbol	v		16538						
ANR	19744	Symbol	version_get		16538						
ANR	19745	Symbol	skip_rest_of_patch		16538						
ANR	19746	Symbol	~7		16538						
ANR	19747	Symbol	NEW		16538						
ANR	19748	Symbol	prefix_components		16538						
ANR	19749	Symbol	instat		16538						
ANR	19750	Symbol	ed_command_letter		16538						
ANR	19751	Symbol	NO_DIFF		16538						
ANR	19752	Symbol	* p_mode		16538						
ANR	19753	Symbol	need_header		16538						
ANR	19754	Symbol	indent_last_line		16538						
ANR	19755	Symbol	* i0		16538						
ANR	19756	Symbol	* version_controlled		16538						
ANR	19757	Symbol	p_strip_trailing_cr		16538						
ANR	19758	Symbol	first_command_line		16538						
ANR	19759	Symbol	version_controlled		16538						
ANR	19760	Symbol	file_type		16538						
ANR	19761	Symbol	* p_file_type		16538						
ANR	19762	Symbol	& instat		16538						
ANR	19763	Symbol	INDEX		16538						
ANR	19764	Symbol	GIT_BINARY_DIFF		16538						
ANR	19765	Symbol	posixly_correct		16538						
ANR	19766	Symbol	fcl_line		16538						
ANR	19767	Symbol	p_mode		16538						
ANR	19768	Symbol	p_timestamp		16538						
ANR	19769	Symbol	strcmp		16538						
ANR	19770	Symbol	version_controller		16538						
ANR	19771	Symbol	NULL		16538						
ANR	19772	Symbol	last_line_was_command		16538						
ANR	19773	Symbol	invc		16538						
ANR	19774	Symbol	diffbuf		16538						
ANR	19775	Symbol	p_git_diff		16538						
ANR	19776	Symbol	p_bline		16538						
ANR	19777	Symbol	S_IFREG		16538						
ANR	19778	Symbol	retval		16538						
ANR	19779	Symbol	revision		16538						
ANR	19780	Symbol	* stat_errno		16538						
ANR	19781	Symbol	p_start		16538						
ANR	19782	Symbol	patch_get		16538						
ANR	19783	Symbol	* INDEX		16538						
ANR	19784	Symbol	strip_trailing_cr		16538						
ANR	19785	Symbol	* ( v = skip_spaces ( v ) )		16538						
ANR	19786	Symbol	DELETE_LATER		16538						
ANR	19787	Symbol	true		16538						
ANR	19788	Symbol	sha1_says_nonexistent		16538						
ANR	19789	Symbol	stat_errno		16538						
ANR	19790	Symbol	timestamp . tv_sec		16538						
ANR	19791	Symbol	instat . st_size		16538						
ANR	19792	Symbol	UNI_DIFF		16538						
ANR	19793	Symbol	newdirs_min		16538						
ANR	19794	Symbol	saved_p_base		16538						
ANR	19795	Symbol	st [ i ] . st_size		16538						
ANR	19796	Symbol	indent		16538						
ANR	19797	Symbol	p_base		16538						
ANR	19798	Symbol	outfile		16538						
ANR	19799	Symbol	best_name		16538						
ANR	19800	Symbol	invalid_names		16538						
ANR	19801	Symbol	p_rename		16538						
ANR	19802	Symbol	p_file_type		16538						
ANR	19803	Symbol	* NEW		16538						
ANR	19804	Symbol	* p_says_nonexistent		16538						
ANR	19805	Symbol	getbuf		16538						
ANR	19806	Symbol	ED_DIFF		16538						
ANR	19807	Symbol	CONTEXT_DIFF		16538						
ANR	19808	Symbol	stat_file		16538						
ANR	19809	Symbol	* p_copy		16538						
ANR	19810	Symbol	SEEK_SET		16538						
ANR	19811	Symbol	get_ed_command_letter		16538						
ANR	19812	Symbol	lookup_file_id		16538						
ANR	19813	Symbol	distance_from_minimum		16538						
ANR	19814	Symbol	strippath		16538						
ANR	19815	Symbol	skip_spaces		16538						
ANR	19816	Symbol	i0		16538						
ANR	19817	Symbol	false		16538						
ANR	19818	Symbol	this_is_a_command		16538						
ANR	19819	Symbol	pch_copy		16538						
ANR	19820	Symbol	stars_this_line		16538						
ANR	19821	Symbol	* i		16538						
ANR	19822	Symbol	another_hunk		16538						
ANR	19823	Symbol	* p_name		16538						
ANR	19824	Symbol	& timestamp		16538						
ANR	19825	Symbol	* p_rename		16538						
ANR	19826	Symbol	p_sha1		16538						
ANR	19827	Symbol	p_rfc934_nesting		16538						
ANR	19828	Symbol	& u		16538						
ANR	19829	Symbol	ISSPACE		16538						
ANR	19830	Symbol	* s		16538						
ANR	19831	Symbol	* NONE		16538						
ANR	19832	Symbol	* t		16538						
ANR	19833	Symbol	* u		16538						
ANR	19834	Function	prefix_components	1010:0:28547:29033							
ANR	19835	FunctionDef	"prefix_components (char * filename , bool checkdirs)"		19834	0					
ANR	19836	CompoundStatement		1012:0:28609:29033	19834	0					
ANR	19837	IdentifierDeclStatement	int count = 0 ;	1013:2:28613:28626	19834	0	True				
ANR	19838	IdentifierDecl	count = 0		19834	0					
ANR	19839	IdentifierDeclType	int		19834	0					
ANR	19840	Identifier	count		19834	1					
ANR	19841	AssignmentExpression	count = 0		19834	2		=			
ANR	19842	Identifier	count		19834	0					
ANR	19843	PrimaryExpression	0		19834	1					
ANR	19844	IdentifierDeclStatement	struct stat stat_buf ;	1014:2:28630:28650	19834	1	True				
ANR	19845	IdentifierDecl	stat_buf		19834	0					
ANR	19846	IdentifierDeclType	struct stat		19834	0					
ANR	19847	Identifier	stat_buf		19834	1					
ANR	19848	IdentifierDeclStatement	int stat_result ;	1015:2:28654:28669	19834	2	True				
ANR	19849	IdentifierDecl	stat_result		19834	0					
ANR	19850	IdentifierDeclType	int		19834	0					
ANR	19851	Identifier	stat_result		19834	1					
ANR	19852	IdentifierDeclStatement	char * f = filename + FILE_SYSTEM_PREFIX_LEN ( filename ) ;	1016:2:28673:28727	19834	3	True				
ANR	19853	IdentifierDecl	* f = filename + FILE_SYSTEM_PREFIX_LEN ( filename )		19834	0					
ANR	19854	IdentifierDeclType	char *		19834	0					
ANR	19855	Identifier	f		19834	1					
ANR	19856	AssignmentExpression	* f = filename + FILE_SYSTEM_PREFIX_LEN ( filename )		19834	2		=			
ANR	19857	Identifier	f		19834	0					
ANR	19858	AdditiveExpression	filename + FILE_SYSTEM_PREFIX_LEN ( filename )		19834	1		+			
ANR	19859	Identifier	filename		19834	0					
ANR	19860	CallExpression	FILE_SYSTEM_PREFIX_LEN ( filename )		19834	1					
ANR	19861	Callee	FILE_SYSTEM_PREFIX_LEN		19834	0					
ANR	19862	Identifier	FILE_SYSTEM_PREFIX_LEN		19834	0					
ANR	19863	ArgumentList	filename		19834	1					
ANR	19864	Argument	filename		19834	0					
ANR	19865	Identifier	filename		19834	0					
ANR	19866	IfStatement	if ( * f )		19834	4					
ANR	19867	Condition	* f	1018:6:28736:28737	19834	0	True				
ANR	19868	UnaryOperationExpression	* f		19834	0					
ANR	19869	UnaryOperator	*		19834	0					
ANR	19870	Identifier	f		19834	1					
ANR	19871	WhileStatement	while ( * ++ f )		19834	1					
ANR	19872	Condition	* ++ f	1019:11:28751:28754	19834	0	True				
ANR	19873	UnaryOperationExpression	* ++ f		19834	0					
ANR	19874	UnaryOperator	*		19834	0					
ANR	19875	UnaryExpression	++ f		19834	1					
ANR	19876	IncDec	++		19834	0					
ANR	19877	Identifier	f		19834	1					
ANR	19878	IfStatement	if ( ISSLASH ( f [ 0 ] ) && ! ISSLASH ( f [ - 1 ] ) )		19834	1					
ANR	19879	Condition	ISSLASH ( f [ 0 ] ) && ! ISSLASH ( f [ - 1 ] )	1020:10:28767:28801	19834	0	True				
ANR	19880	AndExpression	ISSLASH ( f [ 0 ] ) && ! ISSLASH ( f [ - 1 ] )		19834	0		&&			
ANR	19881	CallExpression	ISSLASH ( f [ 0 ] )		19834	0					
ANR	19882	Callee	ISSLASH		19834	0					
ANR	19883	Identifier	ISSLASH		19834	0					
ANR	19884	ArgumentList	f [ 0 ]		19834	1					
ANR	19885	Argument	f [ 0 ]		19834	0					
ANR	19886	ArrayIndexing	f [ 0 ]		19834	0					
ANR	19887	Identifier	f		19834	0					
ANR	19888	PrimaryExpression	0		19834	1					
ANR	19889	UnaryOperationExpression	! ISSLASH ( f [ - 1 ] )		19834	1					
ANR	19890	UnaryOperator	!		19834	0					
ANR	19891	CallExpression	ISSLASH ( f [ - 1 ] )		19834	1					
ANR	19892	Callee	ISSLASH		19834	0					
ANR	19893	Identifier	ISSLASH		19834	0					
ANR	19894	ArgumentList	f [ - 1 ]		19834	1					
ANR	19895	Argument	f [ - 1 ]		19834	0					
ANR	19896	ArrayIndexing	f [ - 1 ]		19834	0					
ANR	19897	Identifier	f		19834	0					
ANR	19898	UnaryOperationExpression	- 1		19834	1					
ANR	19899	UnaryOperator	-		19834	0					
ANR	19900	PrimaryExpression	1		19834	1					
ANR	19901	CompoundStatement		10:1:195:195	19834	1					
ANR	19902	IfStatement	if ( checkdirs )		19834	0					
ANR	19903	Condition	checkdirs	1022:7:28814:28822	19834	0	True				
ANR	19904	Identifier	checkdirs		19834	0					
ANR	19905	CompoundStatement		12:5:220:220	19834	1					
ANR	19906	ExpressionStatement	* f = '\\0'	1024:7:28839:28848	19834	0	True				
ANR	19907	AssignmentExpression	* f = '\\0'		19834	0		=			
ANR	19908	UnaryOperationExpression	* f		19834	0					
ANR	19909	UnaryOperator	*		19834	0					
ANR	19910	Identifier	f		19834	1					
ANR	19911	PrimaryExpression	'\\0'		19834	1					
ANR	19912	ExpressionStatement	"stat_result = safe_stat ( filename , & stat_buf )"	1025:7:28857:28902	19834	1	True				
ANR	19913	AssignmentExpression	"stat_result = safe_stat ( filename , & stat_buf )"		19834	0		=			
ANR	19914	Identifier	stat_result		19834	0					
ANR	19915	CallExpression	"safe_stat ( filename , & stat_buf )"		19834	1					
ANR	19916	Callee	safe_stat		19834	0					
ANR	19917	Identifier	safe_stat		19834	0					
ANR	19918	ArgumentList	filename		19834	1					
ANR	19919	Argument	filename		19834	0					
ANR	19920	Identifier	filename		19834	0					
ANR	19921	Argument	& stat_buf		19834	1					
ANR	19922	UnaryOperationExpression	& stat_buf		19834	0					
ANR	19923	UnaryOperator	&		19834	0					
ANR	19924	Identifier	stat_buf		19834	1					
ANR	19925	ExpressionStatement	* f = '/'	1026:7:28911:28919	19834	2	True				
ANR	19926	AssignmentExpression	* f = '/'		19834	0		=			
ANR	19927	UnaryOperationExpression	* f		19834	0					
ANR	19928	UnaryOperator	*		19834	0					
ANR	19929	Identifier	f		19834	1					
ANR	19930	PrimaryExpression	'/'		19834	1					
ANR	19931	IfStatement	if ( ! ( stat_result == 0 && S_ISDIR ( stat_buf . st_mode ) ) )		19834	3					
ANR	19932	Condition	! ( stat_result == 0 && S_ISDIR ( stat_buf . st_mode ) )	1027:11:28932:28981	19834	0	True				
ANR	19933	UnaryOperationExpression	! ( stat_result == 0 && S_ISDIR ( stat_buf . st_mode ) )		19834	0					
ANR	19934	UnaryOperator	!		19834	0					
ANR	19935	AndExpression	stat_result == 0 && S_ISDIR ( stat_buf . st_mode )		19834	1		&&			
ANR	19936	EqualityExpression	stat_result == 0		19834	0		==			
ANR	19937	Identifier	stat_result		19834	0					
ANR	19938	PrimaryExpression	0		19834	1					
ANR	19939	CallExpression	S_ISDIR ( stat_buf . st_mode )		19834	1					
ANR	19940	Callee	S_ISDIR		19834	0					
ANR	19941	Identifier	S_ISDIR		19834	0					
ANR	19942	ArgumentList	stat_buf . st_mode		19834	1					
ANR	19943	Argument	stat_buf . st_mode		19834	0					
ANR	19944	MemberAccess	stat_buf . st_mode		19834	0					
ANR	19945	Identifier	stat_buf		19834	0					
ANR	19946	Identifier	st_mode		19834	1					
ANR	19947	BreakStatement	break ;	1028:2:28986:28991	19834	1	True				
ANR	19948	ExpressionStatement	count ++	1031:3:29004:29011	19834	1	True				
ANR	19949	PostIncDecOperationExpression	count ++		19834	0					
ANR	19950	Identifier	count		19834	0					
ANR	19951	IncDec	++		19834	1					
ANR	19952	ReturnStatement	return count ;	1034:2:29019:29031	19834	5	True				
ANR	19953	Identifier	count		19834	0					
ANR	19954	ReturnType	static int		19834	1					
ANR	19955	Identifier	prefix_components		19834	2					
ANR	19956	ParameterList	"char * filename , bool checkdirs"		19834	3					
ANR	19957	Parameter	char * filename	1011:19:28577:28590	19834	0	True				
ANR	19958	ParameterType	char *		19834	0					
ANR	19959	Identifier	filename		19834	1					
ANR	19960	Parameter	bool checkdirs	1011:35:28593:28606	19834	1	True				
ANR	19961	ParameterType	bool		19834	0					
ANR	19962	Identifier	checkdirs		19834	1					
ANR	19963	CFGEntryNode	ENTRY		19834		True				
ANR	19964	CFGExitNode	EXIT		19834		True				
ANR	19965	Symbol	FILE_SYSTEM_PREFIX_LEN		19834						
ANR	19966	Symbol	f		19834						
ANR	19967	Symbol	& stat_buf		19834						
ANR	19968	Symbol	checkdirs		19834						
ANR	19969	Symbol	stat_buf		19834						
ANR	19970	Symbol	count		19834						
ANR	19971	Symbol	ISSLASH		19834						
ANR	19972	Symbol	* f		19834						
ANR	19973	Symbol	filename		19834						
ANR	19974	Symbol	safe_stat		19834						
ANR	19975	Symbol	stat_buf . st_mode		19834						
ANR	19976	Symbol	S_ISDIR		19834						
ANR	19977	Symbol	* ++ f		19834						
ANR	19978	Symbol	stat_result		19834						
ANR	19979	DeclStmt									
ANR	19980	Decl							enum nametype	enum nametype	i
ANR	19981	DeclStmt									
ANR	19982	Decl							int	int [ 3 ]	components
ANR	19983	DeclStmt									
ANR	19984	Decl							int	int	components_min
ANR	19985	DeclStmt									
ANR	19986	Decl							size_t	size_t [ 3 ]	basename_len
ANR	19987	DeclStmt									
ANR	19988	Decl							size_t	size_t	basename_len_min
ANR	19989	DeclStmt									
ANR	19990	Decl							size_t	size_t [ 3 ]	len
ANR	19991	DeclStmt									
ANR	19992	Decl							size_t	size_t	len_min
ANR	19993	Function	next_intuit_at	1087:0:30407:30522							
ANR	19994	FunctionDef	"next_intuit_at (file_offset file_pos , lin file_line)"		19993	0					
ANR	19995	CompoundStatement		1089:0:30472:30522	19993	0					
ANR	19996	ExpressionStatement	p_base = file_pos	1090:4:30478:30495	19993	0	True				
ANR	19997	AssignmentExpression	p_base = file_pos		19993	0		=			
ANR	19998	Identifier	p_base		19993	0					
ANR	19999	Identifier	file_pos		19993	1					
ANR	20000	ExpressionStatement	p_bline = file_line	1091:4:30501:30520	19993	1	True				
ANR	20001	AssignmentExpression	p_bline = file_line		19993	0		=			
ANR	20002	Identifier	p_bline		19993	0					
ANR	20003	Identifier	file_line		19993	1					
ANR	20004	ReturnType	static void		19993	1					
ANR	20005	Identifier	next_intuit_at		19993	2					
ANR	20006	ParameterList	"file_offset file_pos , lin file_line"		19993	3					
ANR	20007	Parameter	file_offset file_pos	1088:16:30435:30454	19993	0	True				
ANR	20008	ParameterType	file_offset		19993	0					
ANR	20009	Identifier	file_pos		19993	1					
ANR	20010	Parameter	lin file_line	1088:38:30457:30469	19993	1	True				
ANR	20011	ParameterType	lin		19993	0					
ANR	20012	Identifier	file_line		19993	1					
ANR	20013	CFGEntryNode	ENTRY		19993		True				
ANR	20014	CFGExitNode	EXIT		19993		True				
ANR	20015	Symbol	file_line		19993						
ANR	20016	Symbol	p_base		19993						
ANR	20017	Symbol	p_bline		19993						
ANR	20018	Symbol	file_pos		19993						
ANR	20019	Function	skip_to	1096:0:30588:31201							
ANR	20020	FunctionDef	"skip_to (file_offset file_pos , lin file_line)"		20019	0					
ANR	20021	CompoundStatement		1098:0:30646:31201	20019	0					
ANR	20022	IdentifierDeclStatement	FILE * i = pfp ;	1099:4:30652:30665	20019	0	True				
ANR	20023	IdentifierDecl	* i = pfp		20019	0					
ANR	20024	IdentifierDeclType	FILE *		20019	0					
ANR	20025	Identifier	i		20019	1					
ANR	20026	AssignmentExpression	* i = pfp		20019	2		=			
ANR	20027	Identifier	pfp		20019	0					
ANR	20028	Identifier	pfp		20019	1					
ANR	20029	IdentifierDeclStatement	FILE * o = stdout ;	1100:4:30671:30687	20019	1	True				
ANR	20030	IdentifierDecl	* o = stdout		20019	0					
ANR	20031	IdentifierDeclType	FILE *		20019	0					
ANR	20032	Identifier	o		20019	1					
ANR	20033	AssignmentExpression	* o = stdout		20019	2		=			
ANR	20034	Identifier	stdout		20019	0					
ANR	20035	Identifier	stdout		20019	1					
ANR	20036	IdentifierDeclStatement	int c ;	1101:4:30693:30698	20019	2	True				
ANR	20037	IdentifierDecl	c		20019	0					
ANR	20038	IdentifierDeclType	int		20019	0					
ANR	20039	Identifier	c		20019	1					
ANR	20040	ExpressionStatement	assert ( p_base <= file_pos )	1103:4:30705:30731	20019	3	True				
ANR	20041	CallExpression	assert ( p_base <= file_pos )		20019	0					
ANR	20042	Callee	assert		20019	0					
ANR	20043	Identifier	assert		20019	0					
ANR	20044	ArgumentList	p_base <= file_pos		20019	1					
ANR	20045	Argument	p_base <= file_pos		20019	0					
ANR	20046	RelationalExpression	p_base <= file_pos		20019	0		<=			
ANR	20047	Identifier	p_base		20019	0					
ANR	20048	Identifier	file_pos		20019	1					
ANR	20049	IfStatement	if ( ( verbosity == VERBOSE || ! inname ) && p_base < file_pos )		20019	4					
ANR	20050	Condition	( verbosity == VERBOSE || ! inname ) && p_base < file_pos	1104:8:30741:30794	20019	0	True				
ANR	20051	AndExpression	( verbosity == VERBOSE || ! inname ) && p_base < file_pos		20019	0		&&			
ANR	20052	OrExpression	verbosity == VERBOSE || ! inname		20019	0		||			
ANR	20053	EqualityExpression	verbosity == VERBOSE		20019	0		==			
ANR	20054	Identifier	verbosity		20019	0					
ANR	20055	Identifier	VERBOSE		20019	1					
ANR	20056	UnaryOperationExpression	! inname		20019	1					
ANR	20057	UnaryOperator	!		20019	0					
ANR	20058	Identifier	inname		20019	1					
ANR	20059	RelationalExpression	p_base < file_pos		20019	1		<			
ANR	20060	Identifier	p_base		20019	0					
ANR	20061	Identifier	file_pos		20019	1					
ANR	20062	CompoundStatement		7:64:150:150	20019	1					
ANR	20063	ExpressionStatement	"Fseek ( i , p_base , SEEK_SET )"	1105:1:30800:30827	20019	0	True				
ANR	20064	CallExpression	"Fseek ( i , p_base , SEEK_SET )"		20019	0					
ANR	20065	Callee	Fseek		20019	0					
ANR	20066	Identifier	Fseek		20019	0					
ANR	20067	ArgumentList	i		20019	1					
ANR	20068	Argument	i		20019	0					
ANR	20069	Identifier	i		20019	0					
ANR	20070	Argument	p_base		20019	1					
ANR	20071	Identifier	p_base		20019	0					
ANR	20072	Argument	SEEK_SET		20019	2					
ANR	20073	Identifier	SEEK_SET		20019	0					
ANR	20074	ExpressionStatement	"say ( ""The text leading up to this was:\\n--------------------------\\n"" )"	1106:1:30830:30900	20019	1	True				
ANR	20075	CallExpression	"say ( ""The text leading up to this was:\\n--------------------------\\n"" )"		20019	0					
ANR	20076	Callee	say		20019	0					
ANR	20077	Identifier	say		20019	0					
ANR	20078	ArgumentList	"""The text leading up to this was:\\n--------------------------\\n"""		20019	1					
ANR	20079	Argument	"""The text leading up to this was:\\n--------------------------\\n"""		20019	0					
ANR	20080	PrimaryExpression	"""The text leading up to this was:\\n--------------------------\\n"""		20019	0					
ANR	20081	WhileStatement	while ( file_tell ( i ) < file_pos )		20019	2					
ANR	20082	Condition	file_tell ( i ) < file_pos	1108:8:30911:30934	20019	0	True				
ANR	20083	RelationalExpression	file_tell ( i ) < file_pos		20019	0		<			
ANR	20084	CallExpression	file_tell ( i )		20019	0					
ANR	20085	Callee	file_tell		20019	0					
ANR	20086	Identifier	file_tell		20019	0					
ANR	20087	ArgumentList	i		20019	1					
ANR	20088	Argument	i		20019	0					
ANR	20089	Identifier	i		20019	0					
ANR	20090	Identifier	file_pos		20019	1					
ANR	20091	CompoundStatement		12:3:293:293	20019	1					
ANR	20092	ExpressionStatement	"putc ( '|' , o )"	1110:5:30947:30960	20019	0	True				
ANR	20093	CallExpression	"putc ( '|' , o )"		20019	0					
ANR	20094	Callee	putc		20019	0					
ANR	20095	Identifier	putc		20019	0					
ANR	20096	ArgumentList	'|'		20019	1					
ANR	20097	Argument	'|'		20019	0					
ANR	20098	PrimaryExpression	'|'		20019	0					
ANR	20099	Argument	o		20019	1					
ANR	20100	Identifier	o		20019	0					
ANR	20101	DoStatement	do		20019	1					
ANR	20102	CompoundStatement		15:7:330:330	20019	0					
ANR	20103	IfStatement	if ( ( c = getc ( i ) ) == EOF )		20019	0					
ANR	20104	Condition	( c = getc ( i ) ) == EOF	1113:6:30985:31005	20019	0	True				
ANR	20105	EqualityExpression	( c = getc ( i ) ) == EOF		20019	0		==			
ANR	20106	AssignmentExpression	c = getc ( i )		20019	0		=			
ANR	20107	Identifier	c		20019	0					
ANR	20108	CallExpression	getc ( i )		20019	1					
ANR	20109	Callee	getc		20019	0					
ANR	20110	Identifier	getc		20019	0					
ANR	20111	ArgumentList	i		20019	1					
ANR	20112	Argument	i		20019	0					
ANR	20113	Identifier	i		20019	0					
ANR	20114	Identifier	EOF		20019	1					
ANR	20115	ExpressionStatement	read_fatal ( )	1114:4:31012:31025	20019	1	True				
ANR	20116	CallExpression	read_fatal ( )		20019	0					
ANR	20117	Callee	read_fatal		20019	0					
ANR	20118	Identifier	read_fatal		20019	0					
ANR	20119	ArgumentList			20019	1					
ANR	20120	ExpressionStatement	"putc ( c , o )"	1115:2:31029:31040	20019	1	True				
ANR	20121	CallExpression	"putc ( c , o )"		20019	0					
ANR	20122	Callee	putc		20019	0					
ANR	20123	Identifier	putc		20019	0					
ANR	20124	ArgumentList	c		20019	1					
ANR	20125	Argument	c		20019	0					
ANR	20126	Identifier	c		20019	0					
ANR	20127	Argument	o		20019	1					
ANR	20128	Identifier	o		20019	0					
ANR	20129	Condition	c != '\\n'	1117:12:31063:31071	20019	1	True				
ANR	20130	EqualityExpression	c != '\\n'		20019	0		!=			
ANR	20131	Identifier	c		20019	0					
ANR	20132	PrimaryExpression	'\\n'		20019	1					
ANR	20133	ExpressionStatement	"say ( ""--------------------------\\n"" )"	1120:1:31082:31118	20019	3	True				
ANR	20134	CallExpression	"say ( ""--------------------------\\n"" )"		20019	0					
ANR	20135	Callee	say		20019	0					
ANR	20136	Identifier	say		20019	0					
ANR	20137	ArgumentList	"""--------------------------\\n"""		20019	1					
ANR	20138	Argument	"""--------------------------\\n"""		20019	0					
ANR	20139	PrimaryExpression	"""--------------------------\\n"""		20019	0					
ANR	20140	ElseStatement	else		20019	0					
ANR	20141	ExpressionStatement	"Fseek ( i , file_pos , SEEK_SET )"	1123:1:31136:31165	20019	0	True				
ANR	20142	CallExpression	"Fseek ( i , file_pos , SEEK_SET )"		20019	0					
ANR	20143	Callee	Fseek		20019	0					
ANR	20144	Identifier	Fseek		20019	0					
ANR	20145	ArgumentList	i		20019	1					
ANR	20146	Argument	i		20019	0					
ANR	20147	Identifier	i		20019	0					
ANR	20148	Argument	file_pos		20019	1					
ANR	20149	Identifier	file_pos		20019	0					
ANR	20150	Argument	SEEK_SET		20019	2					
ANR	20151	Identifier	SEEK_SET		20019	0					
ANR	20152	ExpressionStatement	p_input_line = file_line - 1	1124:4:31171:31199	20019	5	True				
ANR	20153	AssignmentExpression	p_input_line = file_line - 1		20019	0		=			
ANR	20154	Identifier	p_input_line		20019	0					
ANR	20155	AdditiveExpression	file_line - 1		20019	1		-			
ANR	20156	Identifier	file_line		20019	0					
ANR	20157	PrimaryExpression	1		20019	1					
ANR	20158	ReturnType	static void		20019	1					
ANR	20159	Identifier	skip_to		20019	2					
ANR	20160	ParameterList	"file_offset file_pos , lin file_line"		20019	3					
ANR	20161	Parameter	file_offset file_pos	1097:9:30609:30628	20019	0	True				
ANR	20162	ParameterType	file_offset		20019	0					
ANR	20163	Identifier	file_pos		20019	1					
ANR	20164	Parameter	lin file_line	1097:31:30631:30643	20019	1	True				
ANR	20165	ParameterType	lin		20019	0					
ANR	20166	Identifier	file_line		20019	1					
ANR	20167	CFGEntryNode	ENTRY		20019		True				
ANR	20168	CFGExitNode	EXIT		20019		True				
ANR	20169	Symbol	SEEK_SET		20019						
ANR	20170	Symbol	p_input_line		20019						
ANR	20171	Symbol	c		20019						
ANR	20172	Symbol	stdout		20019						
ANR	20173	Symbol	p_base		20019						
ANR	20174	Symbol	i		20019						
ANR	20175	Symbol	o		20019						
ANR	20176	Symbol	file_line		20019						
ANR	20177	Symbol	pfp		20019						
ANR	20178	Symbol	VERBOSE		20019						
ANR	20179	Symbol	file_pos		20019						
ANR	20180	Symbol	getc		20019						
ANR	20181	Symbol	EOF		20019						
ANR	20182	Symbol	verbosity		20019						
ANR	20183	Symbol	inname		20019						
ANR	20184	Symbol	file_tell		20019						
ANR	20185	Function	malformed	1128:0:31254:31474							
ANR	20186	FunctionDef	malformed ()		20185	0					
ANR	20187	CompoundStatement		1130:0:31283:31474	20185	0					
ANR	20188	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	1131:4:31289:31326	20185	0	True				
ANR	20189	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		20185	0					
ANR	20190	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		20185	0					
ANR	20191	Identifier	numbuf		20185	1					
ANR	20192	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		20185	2		+			
ANR	20193	Identifier	LINENUM_LENGTH_BOUND		20185	0					
ANR	20194	PrimaryExpression	1		20185	1					
ANR	20195	ExpressionStatement	"fatal ( ""malformed patch at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"	1132:4:31332:31420	20185	1	True				
ANR	20196	CallExpression	"fatal ( ""malformed patch at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"		20185	0					
ANR	20197	Callee	fatal		20185	0					
ANR	20198	Identifier	fatal		20185	0					
ANR	20199	ArgumentList	"""malformed patch at line %s: %s"""		20185	1					
ANR	20200	Argument	"""malformed patch at line %s: %s"""		20185	0					
ANR	20201	PrimaryExpression	"""malformed patch at line %s: %s"""		20185	0					
ANR	20202	Argument	"format_linenum ( numbuf , p_input_line )"		20185	1					
ANR	20203	CallExpression	"format_linenum ( numbuf , p_input_line )"		20185	0					
ANR	20204	Callee	format_linenum		20185	0					
ANR	20205	Identifier	format_linenum		20185	0					
ANR	20206	ArgumentList	numbuf		20185	1					
ANR	20207	Argument	numbuf		20185	0					
ANR	20208	Identifier	numbuf		20185	0					
ANR	20209	Argument	p_input_line		20185	1					
ANR	20210	Identifier	p_input_line		20185	0					
ANR	20211	Argument	buf		20185	2					
ANR	20212	Identifier	buf		20185	0					
ANR	20213	ReturnType	static void		20185	1					
ANR	20214	Identifier	malformed		20185	2					
ANR	20215	ParameterList			20185	3					
ANR	20216	CFGEntryNode	ENTRY		20185		True				
ANR	20217	CFGExitNode	EXIT		20185		True				
ANR	20218	Symbol	format_linenum		20185						
ANR	20219	Symbol	buf		20185						
ANR	20220	Symbol	p_input_line		20185						
ANR	20221	Symbol	numbuf		20185						
ANR	20222	Function	scan_linenum	1139:0:31577:32149							
ANR	20223	FunctionDef	"scan_linenum (char * s0 , lin * linenum)"		20222	0					
ANR	20224	CompoundStatement		1141:0:31629:32149	20222	0					
ANR	20225	IdentifierDeclStatement	char * s ;	1142:2:31633:31640	20222	0	True				
ANR	20226	IdentifierDecl	* s		20222	0					
ANR	20227	IdentifierDeclType	char *		20222	0					
ANR	20228	Identifier	s		20222	1					
ANR	20229	IdentifierDeclStatement	lin n = 0 ;	1143:2:31644:31653	20222	1	True				
ANR	20230	IdentifierDecl	n = 0		20222	0					
ANR	20231	IdentifierDeclType	lin		20222	0					
ANR	20232	Identifier	n		20222	1					
ANR	20233	AssignmentExpression	n = 0		20222	2		=			
ANR	20234	Identifier	n		20222	0					
ANR	20235	PrimaryExpression	0		20222	1					
ANR	20236	IdentifierDeclStatement	bool overflow = false ;	1144:2:31657:31678	20222	2	True				
ANR	20237	IdentifierDecl	overflow = false		20222	0					
ANR	20238	IdentifierDeclType	bool		20222	0					
ANR	20239	Identifier	overflow		20222	1					
ANR	20240	AssignmentExpression	overflow = false		20222	2		=			
ANR	20241	Identifier	false		20222	0					
ANR	20242	Identifier	false		20222	1					
ANR	20243	IdentifierDeclStatement	char numbuf [ LINENUM_LENGTH_BOUND + 1 ] ;	1145:2:31682:31719	20222	3	True				
ANR	20244	IdentifierDecl	numbuf [ LINENUM_LENGTH_BOUND + 1 ]		20222	0					
ANR	20245	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		20222	0					
ANR	20246	Identifier	numbuf		20222	1					
ANR	20247	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		20222	2		+			
ANR	20248	Identifier	LINENUM_LENGTH_BOUND		20222	0					
ANR	20249	PrimaryExpression	1		20222	1					
ANR	20250	ForStatement	for ( s = s0 ; ISDIGIT ( * s ) ; s ++ )		20222	4					
ANR	20251	ForInit	s = s0 ;	1147:7:31729:31735	20222	0	True				
ANR	20252	AssignmentExpression	s = s0		20222	0		=			
ANR	20253	Identifier	s		20222	0					
ANR	20254	Identifier	s0		20222	1					
ANR	20255	Condition	ISDIGIT ( * s )	1147:16:31738:31749	20222	1	True				
ANR	20256	CallExpression	ISDIGIT ( * s )		20222	0					
ANR	20257	Callee	ISDIGIT		20222	0					
ANR	20258	Identifier	ISDIGIT		20222	0					
ANR	20259	ArgumentList	* s		20222	1					
ANR	20260	Argument	* s		20222	0					
ANR	20261	UnaryOperationExpression	* s		20222	0					
ANR	20262	UnaryOperator	*		20222	0					
ANR	20263	Identifier	s		20222	1					
ANR	20264	PostIncDecOperationExpression	s ++	1147:31:31753:31755	20222	2	True				
ANR	20265	Identifier	s		20222	0					
ANR	20266	IncDec	++		20222	1					
ANR	20267	CompoundStatement		9:6:140:171	20222	3					
ANR	20268	IdentifierDeclStatement	lin new_n = 10 * n + ( * s - '0' ) ;	1149:6:31770:31801	20222	0	True				
ANR	20269	IdentifierDecl	new_n = 10 * n + ( * s - '0' )		20222	0					
ANR	20270	IdentifierDeclType	lin		20222	0					
ANR	20271	Identifier	new_n		20222	1					
ANR	20272	AssignmentExpression	new_n = 10 * n + ( * s - '0' )		20222	2		=			
ANR	20273	Identifier	new_n		20222	0					
ANR	20274	AdditiveExpression	10 * n + ( * s - '0' )		20222	1		+			
ANR	20275	MultiplicativeExpression	10 * n		20222	0		*			
ANR	20276	PrimaryExpression	10		20222	0					
ANR	20277	Identifier	n		20222	1					
ANR	20278	AdditiveExpression	* s - '0'		20222	1		-			
ANR	20279	UnaryOperationExpression	* s		20222	0					
ANR	20280	UnaryOperator	*		20222	0					
ANR	20281	Identifier	s		20222	1					
ANR	20282	PrimaryExpression	'0'		20222	1					
ANR	20283	ExpressionStatement	overflow |= new_n / 10 != n	1150:6:31809:31836	20222	1	True				
ANR	20284	AssignmentExpression	overflow |= new_n / 10 != n		20222	0		|=			
ANR	20285	Identifier	overflow		20222	0					
ANR	20286	EqualityExpression	new_n / 10 != n		20222	1		!=			
ANR	20287	MultiplicativeExpression	new_n / 10		20222	0		/			
ANR	20288	Identifier	new_n		20222	0					
ANR	20289	PrimaryExpression	10		20222	1					
ANR	20290	Identifier	n		20222	1					
ANR	20291	ExpressionStatement	n = new_n	1151:6:31844:31853	20222	2	True				
ANR	20292	AssignmentExpression	n = new_n		20222	0		=			
ANR	20293	Identifier	n		20222	0					
ANR	20294	Identifier	new_n		20222	1					
ANR	20295	IfStatement	if ( s == s0 )		20222	5					
ANR	20296	Condition	s == s0	1154:6:31868:31874	20222	0	True				
ANR	20297	EqualityExpression	s == s0		20222	0		==			
ANR	20298	Identifier	s		20222	0					
ANR	20299	Identifier	s0		20222	1					
ANR	20300	ExpressionStatement	"fatal ( ""missing line number at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"	1155:4:31881:31973	20222	1	True				
ANR	20301	CallExpression	"fatal ( ""missing line number at line %s: %s"" , format_linenum ( numbuf , p_input_line ) , buf )"		20222	0					
ANR	20302	Callee	fatal		20222	0					
ANR	20303	Identifier	fatal		20222	0					
ANR	20304	ArgumentList	"""missing line number at line %s: %s"""		20222	1					
ANR	20305	Argument	"""missing line number at line %s: %s"""		20222	0					
ANR	20306	PrimaryExpression	"""missing line number at line %s: %s"""		20222	0					
ANR	20307	Argument	"format_linenum ( numbuf , p_input_line )"		20222	1					
ANR	20308	CallExpression	"format_linenum ( numbuf , p_input_line )"		20222	0					
ANR	20309	Callee	format_linenum		20222	0					
ANR	20310	Identifier	format_linenum		20222	0					
ANR	20311	ArgumentList	numbuf		20222	1					
ANR	20312	Argument	numbuf		20222	0					
ANR	20313	Identifier	numbuf		20222	0					
ANR	20314	Argument	p_input_line		20222	1					
ANR	20315	Identifier	p_input_line		20222	0					
ANR	20316	Argument	buf		20222	2					
ANR	20317	Identifier	buf		20222	0					
ANR	20318	IfStatement	if ( overflow )		20222	6					
ANR	20319	Condition	overflow	1158:6:31982:31989	20222	0	True				
ANR	20320	Identifier	overflow		20222	0					
ANR	20321	ExpressionStatement	"fatal ( ""line number %.*s is too large at line %s: %s"" , ( int ) ( s - s0 ) , s0 , format_linenum ( numbuf , p_input_line ) , buf )"	1159:4:31996:32118	20222	1	True				
ANR	20322	CallExpression	"fatal ( ""line number %.*s is too large at line %s: %s"" , ( int ) ( s - s0 ) , s0 , format_linenum ( numbuf , p_input_line ) , buf )"		20222	0					
ANR	20323	Callee	fatal		20222	0					
ANR	20324	Identifier	fatal		20222	0					
ANR	20325	ArgumentList	"""line number %.*s is too large at line %s: %s"""		20222	1					
ANR	20326	Argument	"""line number %.*s is too large at line %s: %s"""		20222	0					
ANR	20327	PrimaryExpression	"""line number %.*s is too large at line %s: %s"""		20222	0					
ANR	20328	Argument	( int ) ( s - s0 )		20222	1					
ANR	20329	CastExpression	( int ) ( s - s0 )		20222	0					
ANR	20330	CastTarget	int		20222	0					
ANR	20331	AdditiveExpression	s - s0		20222	1		-			
ANR	20332	Identifier	s		20222	0					
ANR	20333	Identifier	s0		20222	1					
ANR	20334	Argument	s0		20222	2					
ANR	20335	Identifier	s0		20222	0					
ANR	20336	Argument	"format_linenum ( numbuf , p_input_line )"		20222	3					
ANR	20337	CallExpression	"format_linenum ( numbuf , p_input_line )"		20222	0					
ANR	20338	Callee	format_linenum		20222	0					
ANR	20339	Identifier	format_linenum		20222	0					
ANR	20340	ArgumentList	numbuf		20222	1					
ANR	20341	Argument	numbuf		20222	0					
ANR	20342	Identifier	numbuf		20222	0					
ANR	20343	Argument	p_input_line		20222	1					
ANR	20344	Identifier	p_input_line		20222	0					
ANR	20345	Argument	buf		20222	4					
ANR	20346	Identifier	buf		20222	0					
ANR	20347	ExpressionStatement	* linenum = n	1162:2:32123:32135	20222	7	True				
ANR	20348	AssignmentExpression	* linenum = n		20222	0		=			
ANR	20349	UnaryOperationExpression	* linenum		20222	0					
ANR	20350	UnaryOperator	*		20222	0					
ANR	20351	Identifier	linenum		20222	1					
ANR	20352	Identifier	n		20222	1					
ANR	20353	ReturnStatement	return s ;	1163:2:32139:32147	20222	8	True				
ANR	20354	Identifier	s		20222	0					
ANR	20355	ReturnType	static char *		20222	1					
ANR	20356	Identifier	scan_linenum		20222	2					
ANR	20357	ParameterList	"char * s0 , lin * linenum"		20222	3					
ANR	20358	Parameter	char * s0	1140:14:31605:31612	20222	0	True				
ANR	20359	ParameterType	char *		20222	0					
ANR	20360	Identifier	s0		20222	1					
ANR	20361	Parameter	lin * linenum	1140:24:31615:31626	20222	1	True				
ANR	20362	ParameterType	lin *		20222	0					
ANR	20363	Identifier	linenum		20222	1					
ANR	20364	CFGEntryNode	ENTRY		20222		True				
ANR	20365	CFGExitNode	EXIT		20222		True				
ANR	20366	Symbol	p_input_line		20222						
ANR	20367	Symbol	false		20222						
ANR	20368	Symbol	ISDIGIT		20222						
ANR	20369	Symbol	n		20222						
ANR	20370	Symbol	format_linenum		20222						
ANR	20371	Symbol	new_n		20222						
ANR	20372	Symbol	buf		20222						
ANR	20373	Symbol	s		20222						
ANR	20374	Symbol	overflow		20222						
ANR	20375	Symbol	numbuf		20222						
ANR	20376	Symbol	* linenum		20222						
ANR	20377	Symbol	linenum		20222						
ANR	20378	Symbol	s0		20222						
ANR	20379	Symbol	* s		20222						
ANR	20380	Function	another_hunk	1169:0:32256:53530							
ANR	20381	FunctionDef	"another_hunk (enum diff difftype , bool rev)"		20380	0					
ANR	20382	CompoundStatement		1171:0:32304:53530	20380	0					
ANR	20383	IdentifierDeclStatement	char * s ;	1172:4:32310:32317	20380	0	True				
ANR	20384	IdentifierDecl	* s		20380	0					
ANR	20385	IdentifierDeclType	char *		20380	0					
ANR	20386	Identifier	s		20380	1					
ANR	20387	IdentifierDeclStatement	lin context = 0 ;	1173:4:32323:32338	20380	1	True				
ANR	20388	IdentifierDecl	context = 0		20380	0					
ANR	20389	IdentifierDeclType	lin		20380	0					
ANR	20390	Identifier	context		20380	1					
ANR	20391	AssignmentExpression	context = 0		20380	2		=			
ANR	20392	Identifier	context		20380	0					
ANR	20393	PrimaryExpression	0		20380	1					
ANR	20394	IdentifierDeclStatement	size_t chars_read ;	1174:4:32344:32361	20380	2	True				
ANR	20395	IdentifierDecl	chars_read		20380	0					
ANR	20396	IdentifierDeclType	size_t		20380	0					
ANR	20397	Identifier	chars_read		20380	1					
ANR	20398	IdentifierDeclStatement	char numbuf0 [ LINENUM_LENGTH_BOUND + 1 ] ;	1175:4:32367:32405	20380	3	True				
ANR	20399	IdentifierDecl	numbuf0 [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20400	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20401	Identifier	numbuf0		20380	1					
ANR	20402	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		20380	2		+			
ANR	20403	Identifier	LINENUM_LENGTH_BOUND		20380	0					
ANR	20404	PrimaryExpression	1		20380	1					
ANR	20405	IdentifierDeclStatement	char numbuf1 [ LINENUM_LENGTH_BOUND + 1 ] ;	1176:4:32411:32449	20380	4	True				
ANR	20406	IdentifierDecl	numbuf1 [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20407	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20408	Identifier	numbuf1		20380	1					
ANR	20409	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		20380	2		+			
ANR	20410	Identifier	LINENUM_LENGTH_BOUND		20380	0					
ANR	20411	PrimaryExpression	1		20380	1					
ANR	20412	IdentifierDeclStatement	char numbuf2 [ LINENUM_LENGTH_BOUND + 1 ] ;	1177:4:32455:32493	20380	5	True				
ANR	20413	IdentifierDecl	numbuf2 [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20414	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20415	Identifier	numbuf2		20380	1					
ANR	20416	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		20380	2		+			
ANR	20417	Identifier	LINENUM_LENGTH_BOUND		20380	0					
ANR	20418	PrimaryExpression	1		20380	1					
ANR	20419	IdentifierDeclStatement	char numbuf3 [ LINENUM_LENGTH_BOUND + 1 ] ;	1178:4:32499:32537	20380	6	True				
ANR	20420	IdentifierDecl	numbuf3 [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20421	IdentifierDeclType	char [ LINENUM_LENGTH_BOUND + 1 ]		20380	0					
ANR	20422	Identifier	numbuf3		20380	1					
ANR	20423	AdditiveExpression	LINENUM_LENGTH_BOUND + 1		20380	2		+			
ANR	20424	Identifier	LINENUM_LENGTH_BOUND		20380	0					
ANR	20425	PrimaryExpression	1		20380	1					
ANR	20426	ExpressionStatement	set_hunkmax ( )	1180:4:32544:32557	20380	7	True				
ANR	20427	CallExpression	set_hunkmax ( )		20380	0					
ANR	20428	Callee	set_hunkmax		20380	0					
ANR	20429	Identifier	set_hunkmax		20380	0					
ANR	20430	ArgumentList			20380	1					
ANR	20431	WhileStatement	while ( p_end >= 0 )		20380	8					
ANR	20432	Condition	p_end >= 0	1182:11:32571:32580	20380	0	True				
ANR	20433	RelationalExpression	p_end >= 0		20380	0		>=			
ANR	20434	Identifier	p_end		20380	0					
ANR	20435	PrimaryExpression	0		20380	1					
ANR	20436	CompoundStatement		12:23:278:278	20380	1					
ANR	20437	IfStatement	if ( p_end == p_efake )		20380	0					
ANR	20438	Condition	p_end == p_efake	1183:5:32590:32605	20380	0	True				
ANR	20439	EqualityExpression	p_end == p_efake		20380	0		==			
ANR	20440	Identifier	p_end		20380	0					
ANR	20441	Identifier	p_efake		20380	1					
ANR	20442	ExpressionStatement	p_end = p_bfake	1184:5:32613:32628	20380	1	True				
ANR	20443	AssignmentExpression	p_end = p_bfake		20380	0		=			
ANR	20444	Identifier	p_end		20380	0					
ANR	20445	Identifier	p_bfake		20380	1					
ANR	20446	ElseStatement	else		20380	0					
ANR	20447	ExpressionStatement	free ( p_line [ p_end ] )	1186:5:32665:32684	20380	0	True				
ANR	20448	CallExpression	free ( p_line [ p_end ] )		20380	0					
ANR	20449	Callee	free		20380	0					
ANR	20450	Identifier	free		20380	0					
ANR	20451	ArgumentList	p_line [ p_end ]		20380	1					
ANR	20452	Argument	p_line [ p_end ]		20380	0					
ANR	20453	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	20454	Identifier	p_line		20380	0					
ANR	20455	Identifier	p_end		20380	1					
ANR	20456	ExpressionStatement	p_end --	1187:1:32687:32694	20380	1	True				
ANR	20457	PostIncDecOperationExpression	p_end --		20380	0					
ANR	20458	Identifier	p_end		20380	0					
ANR	20459	IncDec	--		20380	1					
ANR	20460	ExpressionStatement	assert ( p_end == - 1 )	1189:4:32706:32725	20380	9	True				
ANR	20461	CallExpression	assert ( p_end == - 1 )		20380	0					
ANR	20462	Callee	assert		20380	0					
ANR	20463	Identifier	assert		20380	0					
ANR	20464	ArgumentList	p_end == - 1		20380	1					
ANR	20465	Argument	p_end == - 1		20380	0					
ANR	20466	EqualityExpression	p_end == - 1		20380	0		==			
ANR	20467	Identifier	p_end		20380	0					
ANR	20468	UnaryOperationExpression	- 1		20380	1					
ANR	20469	UnaryOperator	-		20380	0					
ANR	20470	PrimaryExpression	1		20380	1					
ANR	20471	ExpressionStatement	p_efake = - 1	1190:4:32731:32743	20380	10	True				
ANR	20472	AssignmentExpression	p_efake = - 1		20380	0		=			
ANR	20473	Identifier	p_efake		20380	0					
ANR	20474	UnaryOperationExpression	- 1		20380	1					
ANR	20475	UnaryOperator	-		20380	0					
ANR	20476	PrimaryExpression	1		20380	1					
ANR	20477	IfStatement	if ( p_c_function )		20380	11					
ANR	20478	Condition	p_c_function	1192:8:32754:32765	20380	0	True				
ANR	20479	Identifier	p_c_function		20380	0					
ANR	20480	CompoundStatement		23:6:469:469	20380	1					
ANR	20481	ExpressionStatement	free ( p_c_function )	1194:1:32777:32796	20380	0	True				
ANR	20482	CallExpression	free ( p_c_function )		20380	0					
ANR	20483	Callee	free		20380	0					
ANR	20484	Identifier	free		20380	0					
ANR	20485	ArgumentList	p_c_function		20380	1					
ANR	20486	Argument	p_c_function		20380	0					
ANR	20487	Identifier	p_c_function		20380	0					
ANR	20488	ExpressionStatement	p_c_function = NULL	1195:1:32799:32818	20380	1	True				
ANR	20489	AssignmentExpression	p_c_function = NULL		20380	0		=			
ANR	20490	Identifier	p_c_function		20380	0					
ANR	20491	Identifier	NULL		20380	1					
ANR	20492	ExpressionStatement	p_max = hunkmax	1198:4:32833:32848	20380	12	True				
ANR	20493	AssignmentExpression	p_max = hunkmax		20380	0		=			
ANR	20494	Identifier	p_max		20380	0					
ANR	20495	Identifier	hunkmax		20380	1					
ANR	20496	IfStatement	if ( difftype == CONTEXT_DIFF || difftype == NEW_CONTEXT_DIFF )		20380	13					
ANR	20497	Condition	difftype == CONTEXT_DIFF || difftype == NEW_CONTEXT_DIFF	1199:8:32894:32949	20380	0	True				
ANR	20498	OrExpression	difftype == CONTEXT_DIFF || difftype == NEW_CONTEXT_DIFF		20380	0		||			
ANR	20499	EqualityExpression	difftype == CONTEXT_DIFF		20380	0		==			
ANR	20500	Identifier	difftype		20380	0					
ANR	20501	Identifier	CONTEXT_DIFF		20380	1					
ANR	20502	EqualityExpression	difftype == NEW_CONTEXT_DIFF		20380	1		==			
ANR	20503	Identifier	difftype		20380	0					
ANR	20504	Identifier	NEW_CONTEXT_DIFF		20380	1					
ANR	20505	CompoundStatement		49:1:1676:1697	20380	1					
ANR	20506	IdentifierDeclStatement	file_offset line_beginning = file_tell ( pfp ) ;	1200:1:32955:32999	20380	0	True				
ANR	20507	IdentifierDecl	line_beginning = file_tell ( pfp )		20380	0					
ANR	20508	IdentifierDeclType	file_offset		20380	0					
ANR	20509	Identifier	line_beginning		20380	1					
ANR	20510	AssignmentExpression	line_beginning = file_tell ( pfp )		20380	2		=			
ANR	20511	Identifier	line_beginning		20380	0					
ANR	20512	CallExpression	file_tell ( pfp )		20380	1					
ANR	20513	Callee	file_tell		20380	0					
ANR	20514	Identifier	file_tell		20380	0					
ANR	20515	ArgumentList	pfp		20380	1					
ANR	20516	Argument	pfp		20380	0					
ANR	20517	Identifier	pfp		20380	0					
ANR	20518	IdentifierDeclStatement	lin repl_beginning = 0 ;	1202:1:33042:33064	20380	1	True				
ANR	20519	IdentifierDecl	repl_beginning = 0		20380	0					
ANR	20520	IdentifierDeclType	lin		20380	0					
ANR	20521	Identifier	repl_beginning		20380	1					
ANR	20522	AssignmentExpression	repl_beginning = 0		20380	2		=			
ANR	20523	Identifier	repl_beginning		20380	0					
ANR	20524	PrimaryExpression	0		20380	1					
ANR	20525	IdentifierDeclStatement	lin fillcnt = 0 ;	1203:1:33092:33107	20380	2	True				
ANR	20526	IdentifierDecl	fillcnt = 0		20380	0					
ANR	20527	IdentifierDeclType	lin		20380	0					
ANR	20528	Identifier	fillcnt		20380	1					
ANR	20529	AssignmentExpression	fillcnt = 0		20380	2		=			
ANR	20530	Identifier	fillcnt		20380	0					
ANR	20531	PrimaryExpression	0		20380	1					
ANR	20532	IdentifierDeclStatement	lin fillsrc ;	1204:1:33147:33158	20380	3	True				
ANR	20533	IdentifierDecl	fillsrc		20380	0					
ANR	20534	IdentifierDeclType	lin		20380	0					
ANR	20535	Identifier	fillsrc		20380	1					
ANR	20536	IdentifierDeclStatement	lin filldst ;	1205:1:33196:33207	20380	4	True				
ANR	20537	IdentifierDecl	filldst		20380	0					
ANR	20538	IdentifierDeclType	lin		20380	0					
ANR	20539	Identifier	filldst		20380	1					
ANR	20540	IdentifierDeclStatement	bool ptrn_spaces_eaten = false ;	1206:1:33245:33275	20380	5	True				
ANR	20541	IdentifierDecl	ptrn_spaces_eaten = false		20380	0					
ANR	20542	IdentifierDeclType	bool		20380	0					
ANR	20543	Identifier	ptrn_spaces_eaten		20380	1					
ANR	20544	AssignmentExpression	ptrn_spaces_eaten = false		20380	2		=			
ANR	20545	Identifier	false		20380	0					
ANR	20546	Identifier	false		20380	1					
ANR	20547	IdentifierDeclStatement	bool some_context = false ;	1207:1:33312:33337	20380	6	True				
ANR	20548	IdentifierDecl	some_context = false		20380	0					
ANR	20549	IdentifierDeclType	bool		20380	0					
ANR	20550	Identifier	some_context		20380	1					
ANR	20551	AssignmentExpression	some_context = false		20380	2		=			
ANR	20552	Identifier	false		20380	0					
ANR	20553	Identifier	false		20380	1					
ANR	20554	IdentifierDeclStatement	bool repl_could_be_missing = true ;	1208:1:33378:33411	20380	7	True				
ANR	20555	IdentifierDecl	repl_could_be_missing = true		20380	0					
ANR	20556	IdentifierDeclType	bool		20380	0					
ANR	20557	Identifier	repl_could_be_missing		20380	1					
ANR	20558	AssignmentExpression	repl_could_be_missing = true		20380	2		=			
ANR	20559	Identifier	true		20380	0					
ANR	20560	Identifier	true		20380	1					
ANR	20561	IdentifierDeclStatement	bool ptrn_missing = false ;	1209:1:33414:33439	20380	8	True				
ANR	20562	IdentifierDecl	ptrn_missing = false		20380	0					
ANR	20563	IdentifierDeclType	bool		20380	0					
ANR	20564	Identifier	ptrn_missing		20380	1					
ANR	20565	AssignmentExpression	ptrn_missing = false		20380	2		=			
ANR	20566	Identifier	false		20380	0					
ANR	20567	Identifier	false		20380	1					
ANR	20568	IdentifierDeclStatement	bool repl_missing = false ;	1210:1:33474:33499	20380	9	True				
ANR	20569	IdentifierDecl	repl_missing = false		20380	0					
ANR	20570	IdentifierDeclType	bool		20380	0					
ANR	20571	Identifier	repl_missing		20380	1					
ANR	20572	AssignmentExpression	repl_missing = false		20380	2		=			
ANR	20573	Identifier	false		20380	0					
ANR	20574	Identifier	false		20380	1					
ANR	20575	IdentifierDeclStatement	file_offset repl_backtrack_position = 0 ;	1211:1:33535:33574	20380	10	True				
ANR	20576	IdentifierDecl	repl_backtrack_position = 0		20380	0					
ANR	20577	IdentifierDeclType	file_offset		20380	0					
ANR	20578	Identifier	repl_backtrack_position		20380	1					
ANR	20579	AssignmentExpression	repl_backtrack_position = 0		20380	2		=			
ANR	20580	Identifier	repl_backtrack_position		20380	0					
ANR	20581	PrimaryExpression	0		20380	1					
ANR	20582	IdentifierDeclStatement	lin repl_patch_line ;	1213:1:33616:33635	20380	11	True				
ANR	20583	IdentifierDecl	repl_patch_line		20380	0					
ANR	20584	IdentifierDeclType	lin		20380	0					
ANR	20585	Identifier	repl_patch_line		20380	1					
ANR	20586	IdentifierDeclStatement	lin repl_context ;	1214:1:33672:33688	20380	12	True				
ANR	20587	IdentifierDecl	repl_context		20380	0					
ANR	20588	IdentifierDeclType	lin		20380	0					
ANR	20589	Identifier	repl_context		20380	1					
ANR	20590	IdentifierDeclStatement	lin ptrn_prefix_context = - 1 ;	1215:1:33715:33743	20380	13	True				
ANR	20591	IdentifierDecl	ptrn_prefix_context = - 1		20380	0					
ANR	20592	IdentifierDeclType	lin		20380	0					
ANR	20593	Identifier	ptrn_prefix_context		20380	1					
ANR	20594	AssignmentExpression	ptrn_prefix_context = - 1		20380	2		=			
ANR	20595	Identifier	ptrn_prefix_context		20380	0					
ANR	20596	UnaryOperationExpression	- 1		20380	1					
ANR	20597	UnaryOperator	-		20380	0					
ANR	20598	PrimaryExpression	1		20380	1					
ANR	20599	IdentifierDeclStatement	lin ptrn_suffix_context = - 1 ;	1216:1:33784:33812	20380	14	True				
ANR	20600	IdentifierDecl	ptrn_suffix_context = - 1		20380	0					
ANR	20601	IdentifierDeclType	lin		20380	0					
ANR	20602	Identifier	ptrn_suffix_context		20380	1					
ANR	20603	AssignmentExpression	ptrn_suffix_context = - 1		20380	2		=			
ANR	20604	Identifier	ptrn_suffix_context		20380	0					
ANR	20605	UnaryOperationExpression	- 1		20380	1					
ANR	20606	UnaryOperator	-		20380	0					
ANR	20607	PrimaryExpression	1		20380	1					
ANR	20608	IdentifierDeclStatement	lin repl_prefix_context = - 1 ;	1217:1:33853:33881	20380	15	True				
ANR	20609	IdentifierDecl	repl_prefix_context = - 1		20380	0					
ANR	20610	IdentifierDeclType	lin		20380	0					
ANR	20611	Identifier	repl_prefix_context		20380	1					
ANR	20612	AssignmentExpression	repl_prefix_context = - 1		20380	2		=			
ANR	20613	Identifier	repl_prefix_context		20380	0					
ANR	20614	UnaryOperationExpression	- 1		20380	1					
ANR	20615	UnaryOperator	-		20380	0					
ANR	20616	PrimaryExpression	1		20380	1					
ANR	20617	IdentifierDeclStatement	lin ptrn_copiable = 0 ;	1218:1:33922:33943	20380	16	True				
ANR	20618	IdentifierDecl	ptrn_copiable = 0		20380	0					
ANR	20619	IdentifierDeclType	lin		20380	0					
ANR	20620	Identifier	ptrn_copiable		20380	1					
ANR	20621	AssignmentExpression	ptrn_copiable = 0		20380	2		=			
ANR	20622	Identifier	ptrn_copiable		20380	0					
ANR	20623	PrimaryExpression	0		20380	1					
ANR	20624	IdentifierDeclStatement	lin repl_copiable = 0 ;	1219:1:33981:34002	20380	17	True				
ANR	20625	IdentifierDecl	repl_copiable = 0		20380	0					
ANR	20626	IdentifierDeclType	lin		20380	0					
ANR	20627	Identifier	repl_copiable		20380	1					
ANR	20628	AssignmentExpression	repl_copiable = 0		20380	2		=			
ANR	20629	Identifier	repl_copiable		20380	0					
ANR	20630	PrimaryExpression	0		20380	1					
ANR	20631	ExpressionStatement	fillsrc = filldst = repl_patch_line = repl_context = 0	1222:1:34068:34122	20380	18	True				
ANR	20632	AssignmentExpression	fillsrc = filldst = repl_patch_line = repl_context = 0		20380	0		=			
ANR	20633	Identifier	fillsrc		20380	0					
ANR	20634	AssignmentExpression	filldst = repl_patch_line = repl_context = 0		20380	1		=			
ANR	20635	Identifier	filldst		20380	0					
ANR	20636	AssignmentExpression	repl_patch_line = repl_context = 0		20380	1		=			
ANR	20637	Identifier	repl_patch_line		20380	0					
ANR	20638	AssignmentExpression	repl_context = 0		20380	1		=			
ANR	20639	Identifier	repl_context		20380	0					
ANR	20640	PrimaryExpression	0		20380	1					
ANR	20641	ExpressionStatement	chars_read = get_line ( )	1224:1:34126:34150	20380	19	True				
ANR	20642	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	20643	Identifier	chars_read		20380	0					
ANR	20644	CallExpression	get_line ( )		20380	1					
ANR	20645	Callee	get_line		20380	0					
ANR	20646	Identifier	get_line		20380	0					
ANR	20647	ArgumentList			20380	1					
ANR	20648	IfStatement	"if ( chars_read == ( size_t ) - 1 || chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0 )"		20380	20					
ANR	20649	Condition	"chars_read == ( size_t ) - 1 || chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0"	1225:5:34157:34247	20380	0	True				
ANR	20650	OrExpression	"chars_read == ( size_t ) - 1 || chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0"		20380	0		||			
ANR	20651	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	20652	Identifier	chars_read		20380	0					
ANR	20653	CastExpression	( size_t ) - 1		20380	1					
ANR	20654	CastTarget	size_t		20380	0					
ANR	20655	UnaryOperationExpression	- 1		20380	1					
ANR	20656	UnaryOperator	-		20380	0					
ANR	20657	PrimaryExpression	1		20380	1					
ANR	20658	OrExpression	"chars_read <= 8 || strncmp ( buf , ""********"" , 8 ) != 0"		20380	1		||			
ANR	20659	RelationalExpression	chars_read <= 8		20380	0		<=			
ANR	20660	Identifier	chars_read		20380	0					
ANR	20661	PrimaryExpression	8		20380	1					
ANR	20662	EqualityExpression	"strncmp ( buf , ""********"" , 8 ) != 0"		20380	1		!=			
ANR	20663	CallExpression	"strncmp ( buf , ""********"" , 8 )"		20380	0					
ANR	20664	Callee	strncmp		20380	0					
ANR	20665	Identifier	strncmp		20380	0					
ANR	20666	ArgumentList	buf		20380	1					
ANR	20667	Argument	buf		20380	0					
ANR	20668	Identifier	buf		20380	0					
ANR	20669	Argument	"""********"""		20380	1					
ANR	20670	PrimaryExpression	"""********"""		20380	0					
ANR	20671	Argument	8		20380	2					
ANR	20672	PrimaryExpression	8		20380	0					
ANR	20673	PrimaryExpression	0		20380	1					
ANR	20674	CompoundStatement		57:43:1945:1945	20380	1					
ANR	20675	ExpressionStatement	"next_intuit_at ( line_beginning , p_input_line )"	1228:5:34257:34300	20380	0	True				
ANR	20676	CallExpression	"next_intuit_at ( line_beginning , p_input_line )"		20380	0					
ANR	20677	Callee	next_intuit_at		20380	0					
ANR	20678	Identifier	next_intuit_at		20380	0					
ANR	20679	ArgumentList	line_beginning		20380	1					
ANR	20680	Argument	line_beginning		20380	0					
ANR	20681	Identifier	line_beginning		20380	0					
ANR	20682	Argument	p_input_line		20380	1					
ANR	20683	Identifier	p_input_line		20380	0					
ANR	20684	ReturnStatement	return chars_read == ( size_t ) - 1 ? - 1 : 0 ;	1229:5:34307:34348	20380	1	True				
ANR	20685	ConditionalExpression	chars_read == ( size_t ) - 1 ? - 1 : 0		20380	0					
ANR	20686	Condition	chars_read == ( size_t ) - 1		20380	0					
ANR	20687	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	20688	Identifier	chars_read		20380	0					
ANR	20689	CastExpression	( size_t ) - 1		20380	1					
ANR	20690	CastTarget	size_t		20380	0					
ANR	20691	UnaryOperationExpression	- 1		20380	1					
ANR	20692	UnaryOperator	-		20380	0					
ANR	20693	PrimaryExpression	1		20380	1					
ANR	20694	UnaryOperationExpression	- 1		20380	1					
ANR	20695	UnaryOperator	-		20380	0					
ANR	20696	PrimaryExpression	1		20380	1					
ANR	20697	PrimaryExpression	0		20380	2					
ANR	20698	ExpressionStatement	s = buf	1231:1:34354:34361	20380	21	True				
ANR	20699	AssignmentExpression	s = buf		20380	0		=			
ANR	20700	Identifier	s		20380	0					
ANR	20701	Identifier	buf		20380	1					
ANR	20702	WhileStatement	while ( * s == '*' )		20380	22					
ANR	20703	Condition	* s == '*'	1232:8:34371:34379	20380	0	True				
ANR	20704	EqualityExpression	* s == '*'		20380	0		==			
ANR	20705	UnaryOperationExpression	* s		20380	0					
ANR	20706	UnaryOperator	*		20380	0					
ANR	20707	Identifier	s		20380	1					
ANR	20708	PrimaryExpression	'*'		20380	1					
ANR	20709	ExpressionStatement	s ++	1233:5:34387:34390	20380	1	True				
ANR	20710	PostIncDecOperationExpression	s ++		20380	0					
ANR	20711	Identifier	s		20380	0					
ANR	20712	IncDec	++		20380	1					
ANR	20713	IfStatement	if ( * s == ' ' )		20380	23					
ANR	20714	Condition	* s == ' '	1234:5:34397:34405	20380	0	True				
ANR	20715	EqualityExpression	* s == ' '		20380	0		==			
ANR	20716	UnaryOperationExpression	* s		20380	0					
ANR	20717	UnaryOperator	*		20380	0					
ANR	20718	Identifier	s		20380	1					
ANR	20719	PrimaryExpression	' '		20380	1					
ANR	20720	CompoundStatement		65:3:2106:2106	20380	1					
ANR	20721	ExpressionStatement	p_c_function = s	1236:5:34418:34434	20380	0	True				
ANR	20722	AssignmentExpression	p_c_function = s		20380	0		=			
ANR	20723	Identifier	p_c_function		20380	0					
ANR	20724	Identifier	s		20380	1					
ANR	20725	WhileStatement	while ( * s != '\\n' )		20380	1					
ANR	20726	Condition	* s != '\\n'	1237:12:34448:34457	20380	0	True				
ANR	20727	EqualityExpression	* s != '\\n'		20380	0		!=			
ANR	20728	UnaryOperationExpression	* s		20380	0					
ANR	20729	UnaryOperator	*		20380	0					
ANR	20730	Identifier	s		20380	1					
ANR	20731	PrimaryExpression	'\\n'		20380	1					
ANR	20732	ExpressionStatement	s ++	1238:2:34462:34465	20380	1	True				
ANR	20733	PostIncDecOperationExpression	s ++		20380	0					
ANR	20734	Identifier	s		20380	0					
ANR	20735	IncDec	++		20380	1					
ANR	20736	ExpressionStatement	* s = '\\0'	1239:5:34472:34481	20380	2	True				
ANR	20737	AssignmentExpression	* s = '\\0'		20380	0		=			
ANR	20738	UnaryOperationExpression	* s		20380	0					
ANR	20739	UnaryOperator	*		20380	0					
ANR	20740	Identifier	s		20380	1					
ANR	20741	PrimaryExpression	'\\0'		20380	1					
ANR	20742	ExpressionStatement	p_c_function = savestr ( p_c_function )	1240:5:34488:34525	20380	3	True				
ANR	20743	AssignmentExpression	p_c_function = savestr ( p_c_function )		20380	0		=			
ANR	20744	Identifier	p_c_function		20380	0					
ANR	20745	CallExpression	savestr ( p_c_function )		20380	1					
ANR	20746	Callee	savestr		20380	0					
ANR	20747	Identifier	savestr		20380	0					
ANR	20748	ArgumentList	p_c_function		20380	1					
ANR	20749	Argument	p_c_function		20380	0					
ANR	20750	Identifier	p_c_function		20380	0					
ANR	20751	IfStatement	if ( ! p_c_function )		20380	4					
ANR	20752	Condition	! p_c_function	1241:9:34536:34549	20380	0	True				
ANR	20753	UnaryOperationExpression	! p_c_function		20380	0					
ANR	20754	UnaryOperator	!		20380	0					
ANR	20755	Identifier	p_c_function		20380	1					
ANR	20756	ReturnStatement	return - 1 ;	1242:7:34559:34568	20380	1	True				
ANR	20757	UnaryOperationExpression	- 1		20380	0					
ANR	20758	UnaryOperator	-		20380	0					
ANR	20759	PrimaryExpression	1		20380	1					
ANR	20760	ExpressionStatement	p_hunk_beg = p_input_line + 1	1244:1:34576:34605	20380	24	True				
ANR	20761	AssignmentExpression	p_hunk_beg = p_input_line + 1		20380	0		=			
ANR	20762	Identifier	p_hunk_beg		20380	0					
ANR	20763	AdditiveExpression	p_input_line + 1		20380	1		+			
ANR	20764	Identifier	p_input_line		20380	0					
ANR	20765	PrimaryExpression	1		20380	1					
ANR	20766	WhileStatement	while ( p_end < p_max )		20380	25					
ANR	20767	Condition	p_end < p_max	1245:8:34615:34627	20380	0	True				
ANR	20768	RelationalExpression	p_end < p_max		20380	0		<			
ANR	20769	Identifier	p_end		20380	0					
ANR	20770	Identifier	p_max		20380	1					
ANR	20771	CompoundStatement		75:23:2325:2325	20380	1					
ANR	20772	ExpressionStatement	chars_read = get_line ( )	1246:5:34637:34661	20380	0	True				
ANR	20773	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	20774	Identifier	chars_read		20380	0					
ANR	20775	CallExpression	get_line ( )		20380	1					
ANR	20776	Callee	get_line		20380	0					
ANR	20777	Identifier	get_line		20380	0					
ANR	20778	ArgumentList			20380	1					
ANR	20779	IfStatement	if ( chars_read == ( size_t ) - 1 )		20380	1					
ANR	20780	Condition	chars_read == ( size_t ) - 1	1247:9:34672:34696	20380	0	True				
ANR	20781	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	20782	Identifier	chars_read		20380	0					
ANR	20783	CastExpression	( size_t ) - 1		20380	1					
ANR	20784	CastTarget	size_t		20380	0					
ANR	20785	UnaryOperationExpression	- 1		20380	1					
ANR	20786	UnaryOperator	-		20380	0					
ANR	20787	PrimaryExpression	1		20380	1					
ANR	20788	ReturnStatement	return - 1 ;	1248:7:34706:34715	20380	1	True				
ANR	20789	UnaryOperationExpression	- 1		20380	0					
ANR	20790	UnaryOperator	-		20380	0					
ANR	20791	PrimaryExpression	1		20380	1					
ANR	20792	IfStatement	if ( ! chars_read )		20380	2					
ANR	20793	Condition	! chars_read	1249:9:34726:34736	20380	0	True				
ANR	20794	UnaryOperationExpression	! chars_read		20380	0					
ANR	20795	UnaryOperator	!		20380	0					
ANR	20796	Identifier	chars_read		20380	1					
ANR	20797	CompoundStatement		79:22:2434:2434	20380	1					
ANR	20798	IfStatement	if ( repl_beginning && repl_could_be_missing )		20380	0					
ANR	20799	Condition	repl_beginning && repl_could_be_missing	1250:6:34747:34785	20380	0	True				
ANR	20800	AndExpression	repl_beginning && repl_could_be_missing		20380	0		&&			
ANR	20801	Identifier	repl_beginning		20380	0					
ANR	20802	Identifier	repl_could_be_missing		20380	1					
ANR	20803	CompoundStatement		80:47:2483:2483	20380	1					
ANR	20804	ExpressionStatement	repl_missing = true	1251:6:34796:34815	20380	0	True				
ANR	20805	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	20806	Identifier	repl_missing		20380	0					
ANR	20807	Identifier	true		20380	1					
ANR	20808	GotoStatement	goto hunk_done ;	1252:6:34823:34837	20380	1	True				
ANR	20809	Identifier	hunk_done		20380	0					
ANR	20810	IfStatement	if ( p_max - p_end < 4 )		20380	1					
ANR	20811	Condition	p_max - p_end < 4	1254:6:34849:34865	20380	0	True				
ANR	20812	RelationalExpression	p_max - p_end < 4		20380	0		<			
ANR	20813	AdditiveExpression	p_max - p_end		20380	0		-			
ANR	20814	Identifier	p_max		20380	0					
ANR	20815	Identifier	p_end		20380	1					
ANR	20816	PrimaryExpression	4		20380	1					
ANR	20817	CompoundStatement		84:25:2563:2563	20380	1					
ANR	20818	ExpressionStatement	"strcpy ( buf , ""  \\n"" )"	1255:6:34876:34896	20380	0	True				
ANR	20819	CallExpression	"strcpy ( buf , ""  \\n"" )"		20380	0					
ANR	20820	Callee	strcpy		20380	0					
ANR	20821	Identifier	strcpy		20380	0					
ANR	20822	ArgumentList	buf		20380	1					
ANR	20823	Argument	buf		20380	0					
ANR	20824	Identifier	buf		20380	0					
ANR	20825	Argument	"""  \\n"""		20380	1					
ANR	20826	PrimaryExpression	"""  \\n"""		20380	0					
ANR	20827	ExpressionStatement	chars_read = 3	1256:6:34942:34956	20380	1	True				
ANR	20828	AssignmentExpression	chars_read = 3		20380	0		=			
ANR	20829	Identifier	chars_read		20380	0					
ANR	20830	PrimaryExpression	3		20380	1					
ANR	20831	ElseStatement	else		20380	0					
ANR	20832	CompoundStatement		87:9:2662:2662	20380	0					
ANR	20833	ExpressionStatement	"fatal ( ""unexpected end of file in patch"" )"	1258:6:34975:35016	20380	0	True				
ANR	20834	CallExpression	"fatal ( ""unexpected end of file in patch"" )"		20380	0					
ANR	20835	Callee	fatal		20380	0					
ANR	20836	Identifier	fatal		20380	0					
ANR	20837	ArgumentList	"""unexpected end of file in patch"""		20380	1					
ANR	20838	Argument	"""unexpected end of file in patch"""		20380	0					
ANR	20839	PrimaryExpression	"""unexpected end of file in patch"""		20380	0					
ANR	20840	ExpressionStatement	p_end ++	1261:5:35034:35041	20380	3	True				
ANR	20841	PostIncDecOperationExpression	p_end ++		20380	0					
ANR	20842	Identifier	p_end		20380	0					
ANR	20843	IncDec	++		20380	1					
ANR	20844	IfStatement	if ( p_end == hunkmax )		20380	4					
ANR	20845	Condition	p_end == hunkmax	1262:9:35052:35067	20380	0	True				
ANR	20846	EqualityExpression	p_end == hunkmax		20380	0		==			
ANR	20847	Identifier	p_end		20380	0					
ANR	20848	Identifier	hunkmax		20380	1					
ANR	20849	ExpressionStatement	"fatal ( ""unterminated hunk starting at line %s; giving up at line %s: %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) , format_linenum ( numbuf1 , p_input_line ) , buf )"	1263:7:35077:35252	20380	1	True				
ANR	20850	CallExpression	"fatal ( ""unterminated hunk starting at line %s; giving up at line %s: %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) , format_linenum ( numbuf1 , p_input_line ) , buf )"		20380	0					
ANR	20851	Callee	fatal		20380	0					
ANR	20852	Identifier	fatal		20380	0					
ANR	20853	ArgumentList	"""unterminated hunk starting at line %s; giving up at line %s: %s"""		20380	1					
ANR	20854	Argument	"""unterminated hunk starting at line %s; giving up at line %s: %s"""		20380	0					
ANR	20855	PrimaryExpression	"""unterminated hunk starting at line %s; giving up at line %s: %s"""		20380	0					
ANR	20856	Argument	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		20380	1					
ANR	20857	CallExpression	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		20380	0					
ANR	20858	Callee	format_linenum		20380	0					
ANR	20859	Identifier	format_linenum		20380	0					
ANR	20860	ArgumentList	numbuf0		20380	1					
ANR	20861	Argument	numbuf0		20380	0					
ANR	20862	Identifier	numbuf0		20380	0					
ANR	20863	Argument	pch_hunk_beg ( )		20380	1					
ANR	20864	CallExpression	pch_hunk_beg ( )		20380	0					
ANR	20865	Callee	pch_hunk_beg		20380	0					
ANR	20866	Identifier	pch_hunk_beg		20380	0					
ANR	20867	ArgumentList			20380	1					
ANR	20868	Argument	"format_linenum ( numbuf1 , p_input_line )"		20380	2					
ANR	20869	CallExpression	"format_linenum ( numbuf1 , p_input_line )"		20380	0					
ANR	20870	Callee	format_linenum		20380	0					
ANR	20871	Identifier	format_linenum		20380	0					
ANR	20872	ArgumentList	numbuf1		20380	1					
ANR	20873	Argument	numbuf1		20380	0					
ANR	20874	Identifier	numbuf1		20380	0					
ANR	20875	Argument	p_input_line		20380	1					
ANR	20876	Identifier	p_input_line		20380	0					
ANR	20877	Argument	buf		20380	3					
ANR	20878	Identifier	buf		20380	0					
ANR	20879	ExpressionStatement	assert ( p_end < hunkmax )	1266:5:35259:35282	20380	5	True				
ANR	20880	CallExpression	assert ( p_end < hunkmax )		20380	0					
ANR	20881	Callee	assert		20380	0					
ANR	20882	Identifier	assert		20380	0					
ANR	20883	ArgumentList	p_end < hunkmax		20380	1					
ANR	20884	Argument	p_end < hunkmax		20380	0					
ANR	20885	RelationalExpression	p_end < hunkmax		20380	0		<			
ANR	20886	Identifier	p_end		20380	0					
ANR	20887	Identifier	hunkmax		20380	1					
ANR	20888	ExpressionStatement	p_Char [ p_end ] = * buf	1267:5:35289:35309	20380	6	True				
ANR	20889	AssignmentExpression	p_Char [ p_end ] = * buf		20380	0		=			
ANR	20890	ArrayIndexing	p_Char [ p_end ]		20380	0					
ANR	20891	Identifier	p_Char		20380	0					
ANR	20892	Identifier	p_end		20380	1					
ANR	20893	UnaryOperationExpression	* buf		20380	1					
ANR	20894	UnaryOperator	*		20380	0					
ANR	20895	Identifier	buf		20380	1					
ANR	20896	ExpressionStatement	p_len [ p_end ] = 0	1268:5:35316:35332	20380	7	True				
ANR	20897	AssignmentExpression	p_len [ p_end ] = 0		20380	0		=			
ANR	20898	ArrayIndexing	p_len [ p_end ]		20380	0					
ANR	20899	Identifier	p_len		20380	0					
ANR	20900	Identifier	p_end		20380	1					
ANR	20901	PrimaryExpression	0		20380	1					
ANR	20902	ExpressionStatement	p_line [ p_end ] = 0	1269:5:35339:35356	20380	8	True				
ANR	20903	AssignmentExpression	p_line [ p_end ] = 0		20380	0		=			
ANR	20904	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	20905	Identifier	p_line		20380	0					
ANR	20906	Identifier	p_end		20380	1					
ANR	20907	PrimaryExpression	0		20380	1					
ANR	20908	SwitchStatement	switch ( * buf )		20380	9					
ANR	20909	Condition	* buf	1270:13:35371:35374	20380	0	True				
ANR	20910	UnaryOperationExpression	* buf		20380	0					
ANR	20911	UnaryOperator	*		20380	0					
ANR	20912	Identifier	buf		20380	1					
ANR	20913	CompoundStatement		100:19:3072:3072	20380	1					
ANR	20914	Label	case '*' :	1271:5:35384:35392	20380	0	True				
ANR	20915	IfStatement	"if ( strnEQ ( buf , ""********"" , 8 ) )"		20380	1					
ANR	20916	Condition	"strnEQ ( buf , ""********"" , 8 )"	1272:6:35400:35425	20380	0	True				
ANR	20917	CallExpression	"strnEQ ( buf , ""********"" , 8 )"		20380	0					
ANR	20918	Callee	strnEQ		20380	0					
ANR	20919	Identifier	strnEQ		20380	0					
ANR	20920	ArgumentList	buf		20380	1					
ANR	20921	Argument	buf		20380	0					
ANR	20922	Identifier	buf		20380	0					
ANR	20923	Argument	"""********"""		20380	1					
ANR	20924	PrimaryExpression	"""********"""		20380	0					
ANR	20925	Argument	8		20380	2					
ANR	20926	PrimaryExpression	8		20380	0					
ANR	20927	CompoundStatement		102:34:3123:3123	20380	1					
ANR	20928	IfStatement	if ( repl_beginning && repl_could_be_missing )		20380	0					
ANR	20929	Condition	repl_beginning && repl_could_be_missing	1273:10:35440:35478	20380	0	True				
ANR	20930	AndExpression	repl_beginning && repl_could_be_missing		20380	0		&&			
ANR	20931	Identifier	repl_beginning		20380	0					
ANR	20932	Identifier	repl_could_be_missing		20380	1					
ANR	20933	CompoundStatement		103:51:3176:3176	20380	1					
ANR	20934	ExpressionStatement	repl_missing = true	1274:3:35486:35505	20380	0	True				
ANR	20935	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	20936	Identifier	repl_missing		20380	0					
ANR	20937	Identifier	true		20380	1					
ANR	20938	GotoStatement	goto hunk_done ;	1275:3:35510:35524	20380	1	True				
ANR	20939	Identifier	hunk_done		20380	0					
ANR	20940	ElseStatement	else		20380	0					
ANR	20941	ExpressionStatement	"fatal ( ""unexpected end of hunk at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1278:8:35553:35644	20380	0	True				
ANR	20942	CallExpression	"fatal ( ""unexpected end of hunk at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	20943	Callee	fatal		20380	0					
ANR	20944	Identifier	fatal		20380	0					
ANR	20945	ArgumentList	"""unexpected end of hunk at line %s"""		20380	1					
ANR	20946	Argument	"""unexpected end of hunk at line %s"""		20380	0					
ANR	20947	PrimaryExpression	"""unexpected end of hunk at line %s"""		20380	0					
ANR	20948	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	20949	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	20950	Callee	format_linenum		20380	0					
ANR	20951	Identifier	format_linenum		20380	0					
ANR	20952	ArgumentList	numbuf0		20380	1					
ANR	20953	Argument	numbuf0		20380	0					
ANR	20954	Identifier	numbuf0		20380	0					
ANR	20955	Argument	p_input_line		20380	1					
ANR	20956	Identifier	p_input_line		20380	0					
ANR	20957	IfStatement	if ( p_end != 0 )		20380	2					
ANR	20958	Condition	p_end != 0	1281:6:35656:35665	20380	0	True				
ANR	20959	EqualityExpression	p_end != 0		20380	0		!=			
ANR	20960	Identifier	p_end		20380	0					
ANR	20961	PrimaryExpression	0		20380	1					
ANR	20962	CompoundStatement		111:18:3363:3363	20380	1					
ANR	20963	IfStatement	if ( repl_beginning && repl_could_be_missing )		20380	0					
ANR	20964	Condition	repl_beginning && repl_could_be_missing	1282:10:35680:35718	20380	0	True				
ANR	20965	AndExpression	repl_beginning && repl_could_be_missing		20380	0		&&			
ANR	20966	Identifier	repl_beginning		20380	0					
ANR	20967	Identifier	repl_could_be_missing		20380	1					
ANR	20968	CompoundStatement		112:51:3416:3416	20380	1					
ANR	20969	ExpressionStatement	repl_missing = true	1283:3:35726:35745	20380	0	True				
ANR	20970	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	20971	Identifier	repl_missing		20380	0					
ANR	20972	Identifier	true		20380	1					
ANR	20973	GotoStatement	goto hunk_done ;	1284:3:35750:35764	20380	1	True				
ANR	20974	Identifier	hunk_done		20380	0					
ANR	20975	ExpressionStatement	"fatal ( ""unexpected '***' at line %s: %s"" , format_linenum ( numbuf0 , p_input_line ) , buf )"	1286:6:35780:35872	20380	1	True				
ANR	20976	CallExpression	"fatal ( ""unexpected '***' at line %s: %s"" , format_linenum ( numbuf0 , p_input_line ) , buf )"		20380	0					
ANR	20977	Callee	fatal		20380	0					
ANR	20978	Identifier	fatal		20380	0					
ANR	20979	ArgumentList	"""unexpected '***' at line %s: %s"""		20380	1					
ANR	20980	Argument	"""unexpected '***' at line %s: %s"""		20380	0					
ANR	20981	PrimaryExpression	"""unexpected '***' at line %s: %s"""		20380	0					
ANR	20982	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	20983	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	20984	Callee	format_linenum		20380	0					
ANR	20985	Identifier	format_linenum		20380	0					
ANR	20986	ArgumentList	numbuf0		20380	1					
ANR	20987	Argument	numbuf0		20380	0					
ANR	20988	Identifier	numbuf0		20380	0					
ANR	20989	Argument	p_input_line		20380	1					
ANR	20990	Identifier	p_input_line		20380	0					
ANR	20991	Argument	buf		20380	2					
ANR	20992	Identifier	buf		20380	0					
ANR	20993	ExpressionStatement	context = 0	1289:2:35880:35891	20380	3	True				
ANR	20994	AssignmentExpression	context = 0		20380	0		=			
ANR	20995	Identifier	context		20380	0					
ANR	20996	PrimaryExpression	0		20380	1					
ANR	20997	ExpressionStatement	p_len [ p_end ] = strlen ( buf )	1290:2:35895:35922	20380	4	True				
ANR	20998	AssignmentExpression	p_len [ p_end ] = strlen ( buf )		20380	0		=			
ANR	20999	ArrayIndexing	p_len [ p_end ]		20380	0					
ANR	21000	Identifier	p_len		20380	0					
ANR	21001	Identifier	p_end		20380	1					
ANR	21002	CallExpression	strlen ( buf )		20380	1					
ANR	21003	Callee	strlen		20380	0					
ANR	21004	Identifier	strlen		20380	0					
ANR	21005	ArgumentList	buf		20380	1					
ANR	21006	Argument	buf		20380	0					
ANR	21007	Identifier	buf		20380	0					
ANR	21008	IfStatement	if ( ! ( p_line [ p_end ] = savestr ( buf ) ) )		20380	5					
ANR	21009	Condition	! ( p_line [ p_end ] = savestr ( buf ) )	1291:6:35930:35962	20380	0	True				
ANR	21010	UnaryOperationExpression	! ( p_line [ p_end ] = savestr ( buf ) )		20380	0					
ANR	21011	UnaryOperator	!		20380	0					
ANR	21012	AssignmentExpression	p_line [ p_end ] = savestr ( buf )		20380	1		=			
ANR	21013	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	21014	Identifier	p_line		20380	0					
ANR	21015	Identifier	p_end		20380	1					
ANR	21016	CallExpression	savestr ( buf )		20380	1					
ANR	21017	Callee	savestr		20380	0					
ANR	21018	Identifier	savestr		20380	0					
ANR	21019	ArgumentList	buf		20380	1					
ANR	21020	Argument	buf		20380	0					
ANR	21021	Identifier	buf		20380	0					
ANR	21022	CompoundStatement		121:41:3660:3660	20380	1					
ANR	21023	ExpressionStatement	p_end --	1292:6:35973:35980	20380	0	True				
ANR	21024	PostIncDecOperationExpression	p_end --		20380	0					
ANR	21025	Identifier	p_end		20380	0					
ANR	21026	IncDec	--		20380	1					
ANR	21027	ReturnStatement	return - 1 ;	1293:6:35988:35997	20380	1	True				
ANR	21028	UnaryOperationExpression	- 1		20380	0					
ANR	21029	UnaryOperator	-		20380	0					
ANR	21030	PrimaryExpression	1		20380	1					
ANR	21031	ForStatement	for ( s = buf ; * s && ! ISDIGIT ( * s ) ; s ++ )		20380	6					
ANR	21032	ForInit	s = buf ;	1295:7:36010:36017	20380	0	True				
ANR	21033	AssignmentExpression	s = buf		20380	0		=			
ANR	21034	Identifier	s		20380	0					
ANR	21035	Identifier	buf		20380	1					
ANR	21036	Condition	* s && ! ISDIGIT ( * s )	1295:17:36020:36038	20380	1	True				
ANR	21037	AndExpression	* s && ! ISDIGIT ( * s )		20380	0		&&			
ANR	21038	UnaryOperationExpression	* s		20380	0					
ANR	21039	UnaryOperator	*		20380	0					
ANR	21040	Identifier	s		20380	1					
ANR	21041	UnaryOperationExpression	! ISDIGIT ( * s )		20380	1					
ANR	21042	UnaryOperator	!		20380	0					
ANR	21043	CallExpression	ISDIGIT ( * s )		20380	1					
ANR	21044	Callee	ISDIGIT		20380	0					
ANR	21045	Identifier	ISDIGIT		20380	0					
ANR	21046	ArgumentList	* s		20380	1					
ANR	21047	Argument	* s		20380	0					
ANR	21048	UnaryOperationExpression	* s		20380	0					
ANR	21049	UnaryOperator	*		20380	0					
ANR	21050	Identifier	s		20380	1					
ANR	21051	PostIncDecOperationExpression	s ++	1295:39:36042:36044	20380	2	True				
ANR	21052	Identifier	s		20380	0					
ANR	21053	IncDec	++		20380	1					
ANR	21054	ExpressionStatement		1296:21:36068:36068	20380	3	True				
ANR	21055	IfStatement	"if ( strnEQ ( s , ""0,0"" , 3 ) )"		20380	7					
ANR	21056	Condition	"strnEQ ( s , ""0,0"" , 3 )"	1297:6:36076:36092	20380	0	True				
ANR	21057	CallExpression	"strnEQ ( s , ""0,0"" , 3 )"		20380	0					
ANR	21058	Callee	strnEQ		20380	0					
ANR	21059	Identifier	strnEQ		20380	0					
ANR	21060	ArgumentList	s		20380	1					
ANR	21061	Argument	s		20380	0					
ANR	21062	Identifier	s		20380	0					
ANR	21063	Argument	"""0,0"""		20380	1					
ANR	21064	PrimaryExpression	"""0,0"""		20380	0					
ANR	21065	Argument	3		20380	2					
ANR	21066	PrimaryExpression	3		20380	0					
ANR	21067	ExpressionStatement	"remove_prefix ( s , 2 )"	1298:6:36101:36121	20380	1	True				
ANR	21068	CallExpression	"remove_prefix ( s , 2 )"		20380	0					
ANR	21069	Callee	remove_prefix		20380	0					
ANR	21070	Identifier	remove_prefix		20380	0					
ANR	21071	ArgumentList	s		20380	1					
ANR	21072	Argument	s		20380	0					
ANR	21073	Identifier	s		20380	0					
ANR	21074	Argument	2		20380	1					
ANR	21075	PrimaryExpression	2		20380	0					
ANR	21076	ExpressionStatement	"s = scan_linenum ( s , & p_first )"	1299:2:36125:36155	20380	8	True				
ANR	21077	AssignmentExpression	"s = scan_linenum ( s , & p_first )"		20380	0		=			
ANR	21078	Identifier	s		20380	0					
ANR	21079	CallExpression	"scan_linenum ( s , & p_first )"		20380	1					
ANR	21080	Callee	scan_linenum		20380	0					
ANR	21081	Identifier	scan_linenum		20380	0					
ANR	21082	ArgumentList	s		20380	1					
ANR	21083	Argument	s		20380	0					
ANR	21084	Identifier	s		20380	0					
ANR	21085	Argument	& p_first		20380	1					
ANR	21086	UnaryOperationExpression	& p_first		20380	0					
ANR	21087	UnaryOperator	&		20380	0					
ANR	21088	Identifier	p_first		20380	1					
ANR	21089	IfStatement	"if ( * s == ',' )"		20380	9					
ANR	21090	Condition	"* s == ','"	1300:6:36163:36171	20380	0	True				
ANR	21091	EqualityExpression	"* s == ','"		20380	0		==			
ANR	21092	UnaryOperationExpression	* s		20380	0					
ANR	21093	UnaryOperator	*		20380	0					
ANR	21094	Identifier	s		20380	1					
ANR	21095	PrimaryExpression	"','"		20380	1					
ANR	21096	CompoundStatement		130:17:3869:3869	20380	1					
ANR	21097	WhileStatement	while ( * s && ! ISDIGIT ( * s ) )		20380	0					
ANR	21098	Condition	* s && ! ISDIGIT ( * s )	1301:13:36189:36207	20380	0	True				
ANR	21099	AndExpression	* s && ! ISDIGIT ( * s )		20380	0		&&			
ANR	21100	UnaryOperationExpression	* s		20380	0					
ANR	21101	UnaryOperator	*		20380	0					
ANR	21102	Identifier	s		20380	1					
ANR	21103	UnaryOperationExpression	! ISDIGIT ( * s )		20380	1					
ANR	21104	UnaryOperator	!		20380	0					
ANR	21105	CallExpression	ISDIGIT ( * s )		20380	1					
ANR	21106	Callee	ISDIGIT		20380	0					
ANR	21107	Identifier	ISDIGIT		20380	0					
ANR	21108	ArgumentList	* s		20380	1					
ANR	21109	Argument	* s		20380	0					
ANR	21110	UnaryOperationExpression	* s		20380	0					
ANR	21111	UnaryOperator	*		20380	0					
ANR	21112	Identifier	s		20380	1					
ANR	21113	ExpressionStatement	s ++	1302:8:36218:36221	20380	1	True				
ANR	21114	PostIncDecOperationExpression	s ++		20380	0					
ANR	21115	Identifier	s		20380	0					
ANR	21116	IncDec	++		20380	1					
ANR	21117	ExpressionStatement	"scan_linenum ( s , & p_ptrn_lines )"	1303:6:36229:36260	20380	1	True				
ANR	21118	CallExpression	"scan_linenum ( s , & p_ptrn_lines )"		20380	0					
ANR	21119	Callee	scan_linenum		20380	0					
ANR	21120	Identifier	scan_linenum		20380	0					
ANR	21121	ArgumentList	s		20380	1					
ANR	21122	Argument	s		20380	0					
ANR	21123	Identifier	s		20380	0					
ANR	21124	Argument	& p_ptrn_lines		20380	1					
ANR	21125	UnaryOperationExpression	& p_ptrn_lines		20380	0					
ANR	21126	UnaryOperator	&		20380	0					
ANR	21127	Identifier	p_ptrn_lines		20380	1					
ANR	21128	ExpressionStatement	p_ptrn_lines += 1 - p_first	1304:6:36268:36295	20380	2	True				
ANR	21129	AssignmentExpression	p_ptrn_lines += 1 - p_first		20380	0		+=			
ANR	21130	Identifier	p_ptrn_lines		20380	0					
ANR	21131	AdditiveExpression	1 - p_first		20380	1		-			
ANR	21132	PrimaryExpression	1		20380	0					
ANR	21133	Identifier	p_first		20380	1					
ANR	21134	IfStatement	if ( p_ptrn_lines < 0 )		20380	3					
ANR	21135	Condition	p_ptrn_lines < 0	1305:10:36307:36322	20380	0	True				
ANR	21136	RelationalExpression	p_ptrn_lines < 0		20380	0		<			
ANR	21137	Identifier	p_ptrn_lines		20380	0					
ANR	21138	PrimaryExpression	0		20380	1					
ANR	21139	ExpressionStatement	malformed ( )	1306:8:36333:36345	20380	1	True				
ANR	21140	CallExpression	malformed ( )		20380	0					
ANR	21141	Callee	malformed		20380	0					
ANR	21142	Identifier	malformed		20380	0					
ANR	21143	ArgumentList			20380	1					
ANR	21144	ElseStatement	else		20380	0					
ANR	21145	IfStatement	if ( p_first )		20380	0					
ANR	21146	Condition	p_first	1308:11:36362:36368	20380	0	True				
ANR	21147	Identifier	p_first		20380	0					
ANR	21148	ExpressionStatement	p_ptrn_lines = 1	1309:6:36377:36393	20380	1	True				
ANR	21149	AssignmentExpression	p_ptrn_lines = 1		20380	0		=			
ANR	21150	Identifier	p_ptrn_lines		20380	0					
ANR	21151	PrimaryExpression	1		20380	1					
ANR	21152	ElseStatement	else		20380	0					
ANR	21153	CompoundStatement		140:7:4097:4097	20380	0					
ANR	21154	ExpressionStatement	p_ptrn_lines = 0	1311:6:36410:36426	20380	0	True				
ANR	21155	AssignmentExpression	p_ptrn_lines = 0		20380	0		=			
ANR	21156	Identifier	p_ptrn_lines		20380	0					
ANR	21157	PrimaryExpression	0		20380	1					
ANR	21158	ExpressionStatement	p_first = 1	1312:6:36434:36445	20380	1	True				
ANR	21159	AssignmentExpression	p_first = 1		20380	0		=			
ANR	21160	Identifier	p_first		20380	0					
ANR	21161	PrimaryExpression	1		20380	1					
ANR	21162	IfStatement	if ( p_first >= LINENUM_MAX - p_ptrn_lines || p_ptrn_lines >= LINENUM_MAX - 6 )		20380	10					
ANR	21163	Condition	p_first >= LINENUM_MAX - p_ptrn_lines || p_ptrn_lines >= LINENUM_MAX - 6	1314:6:36457:36534	20380	0	True				
ANR	21164	OrExpression	p_first >= LINENUM_MAX - p_ptrn_lines || p_ptrn_lines >= LINENUM_MAX - 6		20380	0		||			
ANR	21165	RelationalExpression	p_first >= LINENUM_MAX - p_ptrn_lines		20380	0		>=			
ANR	21166	Identifier	p_first		20380	0					
ANR	21167	AdditiveExpression	LINENUM_MAX - p_ptrn_lines		20380	1		-			
ANR	21168	Identifier	LINENUM_MAX		20380	0					
ANR	21169	Identifier	p_ptrn_lines		20380	1					
ANR	21170	RelationalExpression	p_ptrn_lines >= LINENUM_MAX - 6		20380	1		>=			
ANR	21171	Identifier	p_ptrn_lines		20380	0					
ANR	21172	AdditiveExpression	LINENUM_MAX - 6		20380	1		-			
ANR	21173	Identifier	LINENUM_MAX		20380	0					
ANR	21174	PrimaryExpression	6		20380	1					
ANR	21175	ExpressionStatement	malformed ( )	1316:4:36541:36553	20380	1	True				
ANR	21176	CallExpression	malformed ( )		20380	0					
ANR	21177	Callee	malformed		20380	0					
ANR	21178	Identifier	malformed		20380	0					
ANR	21179	ArgumentList			20380	1					
ANR	21180	ExpressionStatement	p_max = p_ptrn_lines + 6	1317:2:36557:36581	20380	11	True				
ANR	21181	AssignmentExpression	p_max = p_ptrn_lines + 6		20380	0		=			
ANR	21182	Identifier	p_max		20380	0					
ANR	21183	AdditiveExpression	p_ptrn_lines + 6		20380	1		+			
ANR	21184	Identifier	p_ptrn_lines		20380	0					
ANR	21185	PrimaryExpression	6		20380	1					
ANR	21186	WhileStatement	while ( p_max + 1 >= hunkmax )		20380	12					
ANR	21187	Condition	p_max + 1 >= hunkmax	1318:9:36625:36644	20380	0	True				
ANR	21188	RelationalExpression	p_max + 1 >= hunkmax		20380	0		>=			
ANR	21189	AdditiveExpression	p_max + 1		20380	0		+			
ANR	21190	Identifier	p_max		20380	0					
ANR	21191	PrimaryExpression	1		20380	1					
ANR	21192	Identifier	hunkmax		20380	1					
ANR	21193	IfStatement	if ( ! grow_hunkmax ( ) )		20380	1					
ANR	21194	Condition	! grow_hunkmax ( )	1319:10:36657:36673	20380	0	True				
ANR	21195	UnaryOperationExpression	! grow_hunkmax ( )		20380	0					
ANR	21196	UnaryOperator	!		20380	0					
ANR	21197	CallExpression	grow_hunkmax ( )		20380	1					
ANR	21198	Callee	grow_hunkmax		20380	0					
ANR	21199	Identifier	grow_hunkmax		20380	0					
ANR	21200	ArgumentList			20380	1					
ANR	21201	ReturnStatement	return - 1 ;	1320:3:36679:36688	20380	1	True				
ANR	21202	UnaryOperationExpression	- 1		20380	0					
ANR	21203	UnaryOperator	-		20380	0					
ANR	21204	PrimaryExpression	1		20380	1					
ANR	21205	ExpressionStatement	p_max = hunkmax	1321:2:36692:36707	20380	13	True				
ANR	21206	AssignmentExpression	p_max = hunkmax		20380	0		=			
ANR	21207	Identifier	p_max		20380	0					
ANR	21208	Identifier	hunkmax		20380	1					
ANR	21209	BreakStatement	break ;	1322:2:36711:36716	20380	14	True				
ANR	21210	Label	case '-' :	1323:5:36723:36731	20380	15	True				
ANR	21211	IfStatement	if ( buf [ 1 ] != '-' )		20380	16					
ANR	21212	Condition	buf [ 1 ] != '-'	1324:6:36739:36751	20380	0	True				
ANR	21213	EqualityExpression	buf [ 1 ] != '-'		20380	0		!=			
ANR	21214	ArrayIndexing	buf [ 1 ]		20380	0					
ANR	21215	Identifier	buf		20380	0					
ANR	21216	PrimaryExpression	1		20380	1					
ANR	21217	PrimaryExpression	'-'		20380	1					
ANR	21218	GotoStatement	goto change_line ;	1325:4:36758:36774	20380	1	True				
ANR	21219	Identifier	change_line		20380	0					
ANR	21220	IfStatement	if ( ptrn_prefix_context == - 1 )		20380	17					
ANR	21221	Condition	ptrn_prefix_context == - 1	1326:6:36782:36806	20380	0	True				
ANR	21222	EqualityExpression	ptrn_prefix_context == - 1		20380	0		==			
ANR	21223	Identifier	ptrn_prefix_context		20380	0					
ANR	21224	UnaryOperationExpression	- 1		20380	1					
ANR	21225	UnaryOperator	-		20380	0					
ANR	21226	PrimaryExpression	1		20380	1					
ANR	21227	ExpressionStatement	ptrn_prefix_context = context	1327:4:36813:36842	20380	1	True				
ANR	21228	AssignmentExpression	ptrn_prefix_context = context		20380	0		=			
ANR	21229	Identifier	ptrn_prefix_context		20380	0					
ANR	21230	Identifier	context		20380	1					
ANR	21231	ExpressionStatement	ptrn_suffix_context = context	1328:2:36846:36875	20380	18	True				
ANR	21232	AssignmentExpression	ptrn_suffix_context = context		20380	0		=			
ANR	21233	Identifier	ptrn_suffix_context		20380	0					
ANR	21234	Identifier	context		20380	1					
ANR	21235	IfStatement	if ( repl_beginning || ( p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' ) ) )		20380	19					
ANR	21236	Condition	repl_beginning || ( p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' ) )	1329:6:36883:36966	20380	0	True				
ANR	21237	OrExpression	repl_beginning || ( p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' ) )		20380	0		||			
ANR	21238	Identifier	repl_beginning		20380	0					
ANR	21239	EqualityExpression	p_end != p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' )		20380	1		!=			
ANR	21240	Identifier	p_end		20380	0					
ANR	21241	AdditiveExpression	p_ptrn_lines + 1 + ( p_Char [ p_end - 1 ] == '\\n' )		20380	1		+			
ANR	21242	Identifier	p_ptrn_lines		20380	0					
ANR	21243	AdditiveExpression	1 + ( p_Char [ p_end - 1 ] == '\\n' )		20380	1		+			
ANR	21244	PrimaryExpression	1		20380	0					
ANR	21245	EqualityExpression	p_Char [ p_end - 1 ] == '\\n'		20380	1		==			
ANR	21246	ArrayIndexing	p_Char [ p_end - 1 ]		20380	0					
ANR	21247	Identifier	p_Char		20380	0					
ANR	21248	AdditiveExpression	p_end - 1		20380	1		-			
ANR	21249	Identifier	p_end		20380	0					
ANR	21250	PrimaryExpression	1		20380	1					
ANR	21251	PrimaryExpression	'\\n'		20380	1					
ANR	21252	CompoundStatement		162:4:4668:4668	20380	1					
ANR	21253	IfStatement	if ( p_end == 1 )		20380	0					
ANR	21254	Condition	p_end == 1	1333:10:36985:36994	20380	0	True				
ANR	21255	EqualityExpression	p_end == 1		20380	0		==			
ANR	21256	Identifier	p_end		20380	0					
ANR	21257	PrimaryExpression	1		20380	1					
ANR	21258	CompoundStatement		164:8:4700:4700	20380	1					
ANR	21259	ExpressionStatement	ptrn_missing = true	1337:3:37102:37121	20380	0	True				
ANR	21260	AssignmentExpression	ptrn_missing = true		20380	0		=			
ANR	21261	Identifier	ptrn_missing		20380	0					
ANR	21262	Identifier	true		20380	1					
ANR	21263	ExpressionStatement	p_end = p_ptrn_lines + 1	1338:3:37126:37150	20380	1	True				
ANR	21264	AssignmentExpression	p_end = p_ptrn_lines + 1		20380	0		=			
ANR	21265	Identifier	p_end		20380	0					
ANR	21266	AdditiveExpression	p_ptrn_lines + 1		20380	1		+			
ANR	21267	Identifier	p_ptrn_lines		20380	0					
ANR	21268	PrimaryExpression	1		20380	1					
ANR	21269	ExpressionStatement	ptrn_prefix_context = ptrn_suffix_context = - 1	1339:3:37155:37201	20380	2	True				
ANR	21270	AssignmentExpression	ptrn_prefix_context = ptrn_suffix_context = - 1		20380	0		=			
ANR	21271	Identifier	ptrn_prefix_context		20380	0					
ANR	21272	AssignmentExpression	ptrn_suffix_context = - 1		20380	1		=			
ANR	21273	Identifier	ptrn_suffix_context		20380	0					
ANR	21274	UnaryOperationExpression	- 1		20380	1					
ANR	21275	UnaryOperator	-		20380	0					
ANR	21276	PrimaryExpression	1		20380	1					
ANR	21277	ExpressionStatement	fillsrc = p_end + 1	1340:3:37206:37225	20380	3	True				
ANR	21278	AssignmentExpression	fillsrc = p_end + 1		20380	0		=			
ANR	21279	Identifier	fillsrc		20380	0					
ANR	21280	AdditiveExpression	p_end + 1		20380	1		+			
ANR	21281	Identifier	p_end		20380	0					
ANR	21282	PrimaryExpression	1		20380	1					
ANR	21283	ExpressionStatement	filldst = 1	1341:3:37230:37241	20380	4	True				
ANR	21284	AssignmentExpression	filldst = 1		20380	0		=			
ANR	21285	Identifier	filldst		20380	0					
ANR	21286	PrimaryExpression	1		20380	1					
ANR	21287	ExpressionStatement	fillcnt = p_ptrn_lines	1342:3:37246:37268	20380	5	True				
ANR	21288	AssignmentExpression	fillcnt = p_ptrn_lines		20380	0		=			
ANR	21289	Identifier	fillcnt		20380	0					
ANR	21290	Identifier	p_ptrn_lines		20380	1					
ANR	21291	ElseStatement	else		20380	0					
ANR	21292	IfStatement	if ( ! repl_beginning )		20380	0					
ANR	21293	Condition	! repl_beginning	1344:15:37295:37310	20380	0	True				
ANR	21294	UnaryOperationExpression	! repl_beginning		20380	0					
ANR	21295	UnaryOperator	!		20380	0					
ANR	21296	Identifier	repl_beginning		20380	1					
ANR	21297	ExpressionStatement	"fatal ( ""%s '---' at line %s; check line numbers at line %s"" , ( p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"" ) , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg ) )"	1345:8:37321:37552	20380	1	True				
ANR	21298	CallExpression	"fatal ( ""%s '---' at line %s; check line numbers at line %s"" , ( p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"" ) , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg ) )"		20380	0					
ANR	21299	Callee	fatal		20380	0					
ANR	21300	Identifier	fatal		20380	0					
ANR	21301	ArgumentList	"""%s '---' at line %s; check line numbers at line %s"""		20380	1					
ANR	21302	Argument	"""%s '---' at line %s; check line numbers at line %s"""		20380	0					
ANR	21303	PrimaryExpression	"""%s '---' at line %s; check line numbers at line %s"""		20380	0					
ANR	21304	Argument	"p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"""		20380	1					
ANR	21305	ConditionalExpression	"p_end <= p_ptrn_lines ? ""Premature"" : ""Overdue"""		20380	0					
ANR	21306	Condition	p_end <= p_ptrn_lines		20380	0					
ANR	21307	RelationalExpression	p_end <= p_ptrn_lines		20380	0		<=			
ANR	21308	Identifier	p_end		20380	0					
ANR	21309	Identifier	p_ptrn_lines		20380	1					
ANR	21310	PrimaryExpression	"""Premature"""		20380	1					
ANR	21311	PrimaryExpression	"""Overdue"""		20380	2					
ANR	21312	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	2					
ANR	21313	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	21314	Callee	format_linenum		20380	0					
ANR	21315	Identifier	format_linenum		20380	0					
ANR	21316	ArgumentList	numbuf0		20380	1					
ANR	21317	Argument	numbuf0		20380	0					
ANR	21318	Identifier	numbuf0		20380	0					
ANR	21319	Argument	p_input_line		20380	1					
ANR	21320	Identifier	p_input_line		20380	0					
ANR	21321	Argument	"format_linenum ( numbuf1 , p_hunk_beg )"		20380	3					
ANR	21322	CallExpression	"format_linenum ( numbuf1 , p_hunk_beg )"		20380	0					
ANR	21323	Callee	format_linenum		20380	0					
ANR	21324	Identifier	format_linenum		20380	0					
ANR	21325	ArgumentList	numbuf1		20380	1					
ANR	21326	Argument	numbuf1		20380	0					
ANR	21327	Identifier	numbuf1		20380	0					
ANR	21328	Argument	p_hunk_beg		20380	1					
ANR	21329	Identifier	p_hunk_beg		20380	0					
ANR	21330	ElseStatement	else		20380	0					
ANR	21331	IfStatement	if ( ! repl_could_be_missing )		20380	0					
ANR	21332	Condition	! repl_could_be_missing	1351:15:37569:37591	20380	0	True				
ANR	21333	UnaryOperationExpression	! repl_could_be_missing		20380	0					
ANR	21334	UnaryOperator	!		20380	0					
ANR	21335	Identifier	repl_could_be_missing		20380	1					
ANR	21336	ExpressionStatement	"fatal ( ""duplicate '---' at line %s; check line numbers at line %s"" , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg + repl_beginning ) )"	1352:8:37602:37790	20380	1	True				
ANR	21337	CallExpression	"fatal ( ""duplicate '---' at line %s; check line numbers at line %s"" , format_linenum ( numbuf0 , p_input_line ) , format_linenum ( numbuf1 , p_hunk_beg + repl_beginning ) )"		20380	0					
ANR	21338	Callee	fatal		20380	0					
ANR	21339	Identifier	fatal		20380	0					
ANR	21340	ArgumentList	"""duplicate '---' at line %s; check line numbers at line %s"""		20380	1					
ANR	21341	Argument	"""duplicate '---' at line %s; check line numbers at line %s"""		20380	0					
ANR	21342	PrimaryExpression	"""duplicate '---' at line %s; check line numbers at line %s"""		20380	0					
ANR	21343	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	21344	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	21345	Callee	format_linenum		20380	0					
ANR	21346	Identifier	format_linenum		20380	0					
ANR	21347	ArgumentList	numbuf0		20380	1					
ANR	21348	Argument	numbuf0		20380	0					
ANR	21349	Identifier	numbuf0		20380	0					
ANR	21350	Argument	p_input_line		20380	1					
ANR	21351	Identifier	p_input_line		20380	0					
ANR	21352	Argument	"format_linenum ( numbuf1 , p_hunk_beg + repl_beginning )"		20380	2					
ANR	21353	CallExpression	"format_linenum ( numbuf1 , p_hunk_beg + repl_beginning )"		20380	0					
ANR	21354	Callee	format_linenum		20380	0					
ANR	21355	Identifier	format_linenum		20380	0					
ANR	21356	ArgumentList	numbuf1		20380	1					
ANR	21357	Argument	numbuf1		20380	0					
ANR	21358	Identifier	numbuf1		20380	0					
ANR	21359	Argument	p_hunk_beg + repl_beginning		20380	1					
ANR	21360	AdditiveExpression	p_hunk_beg + repl_beginning		20380	0		+			
ANR	21361	Identifier	p_hunk_beg		20380	0					
ANR	21362	Identifier	repl_beginning		20380	1					
ANR	21363	ElseStatement	else		20380	0					
ANR	21364	CompoundStatement		187:8:5506:5506	20380	0					
ANR	21365	ExpressionStatement	repl_missing = true	1358:3:37816:37835	20380	0	True				
ANR	21366	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	21367	Identifier	repl_missing		20380	0					
ANR	21368	Identifier	true		20380	1					
ANR	21369	GotoStatement	goto hunk_done ;	1359:3:37840:37854	20380	1	True				
ANR	21370	Identifier	hunk_done		20380	0					
ANR	21371	ExpressionStatement	repl_beginning = p_end	1362:2:37874:37896	20380	20	True				
ANR	21372	AssignmentExpression	repl_beginning = p_end		20380	0		=			
ANR	21373	Identifier	repl_beginning		20380	0					
ANR	21374	Identifier	p_end		20380	1					
ANR	21375	ExpressionStatement	repl_backtrack_position = file_tell ( pfp )	1363:2:37900:37941	20380	21	True				
ANR	21376	AssignmentExpression	repl_backtrack_position = file_tell ( pfp )		20380	0		=			
ANR	21377	Identifier	repl_backtrack_position		20380	0					
ANR	21378	CallExpression	file_tell ( pfp )		20380	1					
ANR	21379	Callee	file_tell		20380	0					
ANR	21380	Identifier	file_tell		20380	0					
ANR	21381	ArgumentList	pfp		20380	1					
ANR	21382	Argument	pfp		20380	0					
ANR	21383	Identifier	pfp		20380	0					
ANR	21384	ExpressionStatement	repl_patch_line = p_input_line	1364:2:37945:37975	20380	22	True				
ANR	21385	AssignmentExpression	repl_patch_line = p_input_line		20380	0		=			
ANR	21386	Identifier	repl_patch_line		20380	0					
ANR	21387	Identifier	p_input_line		20380	1					
ANR	21388	ExpressionStatement	repl_context = context	1365:2:37979:38001	20380	23	True				
ANR	21389	AssignmentExpression	repl_context = context		20380	0		=			
ANR	21390	Identifier	repl_context		20380	0					
ANR	21391	Identifier	context		20380	1					
ANR	21392	ExpressionStatement	p_len [ p_end ] = strlen ( buf )	1366:2:38005:38032	20380	24	True				
ANR	21393	AssignmentExpression	p_len [ p_end ] = strlen ( buf )		20380	0		=			
ANR	21394	ArrayIndexing	p_len [ p_end ]		20380	0					
ANR	21395	Identifier	p_len		20380	0					
ANR	21396	Identifier	p_end		20380	1					
ANR	21397	CallExpression	strlen ( buf )		20380	1					
ANR	21398	Callee	strlen		20380	0					
ANR	21399	Identifier	strlen		20380	0					
ANR	21400	ArgumentList	buf		20380	1					
ANR	21401	Argument	buf		20380	0					
ANR	21402	Identifier	buf		20380	0					
ANR	21403	IfStatement	if ( ! ( p_line [ p_end ] = savestr ( buf ) ) )		20380	25					
ANR	21404	Condition	! ( p_line [ p_end ] = savestr ( buf ) )	1367:6:38040:38072	20380	0	True				
ANR	21405	UnaryOperationExpression	! ( p_line [ p_end ] = savestr ( buf ) )		20380	0					
ANR	21406	UnaryOperator	!		20380	0					
ANR	21407	AssignmentExpression	p_line [ p_end ] = savestr ( buf )		20380	1		=			
ANR	21408	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	21409	Identifier	p_line		20380	0					
ANR	21410	Identifier	p_end		20380	1					
ANR	21411	CallExpression	savestr ( buf )		20380	1					
ANR	21412	Callee	savestr		20380	0					
ANR	21413	Identifier	savestr		20380	0					
ANR	21414	ArgumentList	buf		20380	1					
ANR	21415	Argument	buf		20380	0					
ANR	21416	Identifier	buf		20380	0					
ANR	21417	CompoundStatement		198:4:5774:5774	20380	1					
ANR	21418	ExpressionStatement	p_end --	1369:6:38087:38094	20380	0	True				
ANR	21419	PostIncDecOperationExpression	p_end --		20380	0					
ANR	21420	Identifier	p_end		20380	0					
ANR	21421	IncDec	--		20380	1					
ANR	21422	ReturnStatement	return - 1 ;	1370:6:38102:38111	20380	1	True				
ANR	21423	UnaryOperationExpression	- 1		20380	0					
ANR	21424	UnaryOperator	-		20380	0					
ANR	21425	PrimaryExpression	1		20380	1					
ANR	21426	ExpressionStatement	p_Char [ p_end ] = '='	1372:2:38121:38140	20380	26	True				
ANR	21427	AssignmentExpression	p_Char [ p_end ] = '='		20380	0		=			
ANR	21428	ArrayIndexing	p_Char [ p_end ]		20380	0					
ANR	21429	Identifier	p_Char		20380	0					
ANR	21430	Identifier	p_end		20380	1					
ANR	21431	PrimaryExpression	'='		20380	1					
ANR	21432	ForStatement	for ( s = buf ; * s && ! ISDIGIT ( * s ) ; s ++ )		20380	27					
ANR	21433	ForInit	s = buf ;	1373:7:38149:38156	20380	0	True				
ANR	21434	AssignmentExpression	s = buf		20380	0		=			
ANR	21435	Identifier	s		20380	0					
ANR	21436	Identifier	buf		20380	1					
ANR	21437	Condition	* s && ! ISDIGIT ( * s )	1373:17:38159:38178	20380	1	True				
ANR	21438	AndExpression	* s && ! ISDIGIT ( * s )		20380	0		&&			
ANR	21439	UnaryOperationExpression	* s		20380	0					
ANR	21440	UnaryOperator	*		20380	0					
ANR	21441	Identifier	s		20380	1					
ANR	21442	UnaryOperationExpression	! ISDIGIT ( * s )		20380	1					
ANR	21443	UnaryOperator	!		20380	0					
ANR	21444	CallExpression	ISDIGIT ( * s )		20380	1					
ANR	21445	Callee	ISDIGIT		20380	0					
ANR	21446	Identifier	ISDIGIT		20380	0					
ANR	21447	ArgumentList	* s		20380	1					
ANR	21448	Argument	* s		20380	0					
ANR	21449	UnaryOperationExpression	* s		20380	0					
ANR	21450	UnaryOperator	*		20380	0					
ANR	21451	Identifier	s		20380	1					
ANR	21452	PostIncDecOperationExpression	s ++	1373:40:38182:38184	20380	2	True				
ANR	21453	Identifier	s		20380	0					
ANR	21454	IncDec	++		20380	1					
ANR	21455	ExpressionStatement		1374:21:38208:38208	20380	3	True				
ANR	21456	ExpressionStatement	"s = scan_linenum ( s , & p_newfirst )"	1375:2:38212:38245	20380	28	True				
ANR	21457	AssignmentExpression	"s = scan_linenum ( s , & p_newfirst )"		20380	0		=			
ANR	21458	Identifier	s		20380	0					
ANR	21459	CallExpression	"scan_linenum ( s , & p_newfirst )"		20380	1					
ANR	21460	Callee	scan_linenum		20380	0					
ANR	21461	Identifier	scan_linenum		20380	0					
ANR	21462	ArgumentList	s		20380	1					
ANR	21463	Argument	s		20380	0					
ANR	21464	Identifier	s		20380	0					
ANR	21465	Argument	& p_newfirst		20380	1					
ANR	21466	UnaryOperationExpression	& p_newfirst		20380	0					
ANR	21467	UnaryOperator	&		20380	0					
ANR	21468	Identifier	p_newfirst		20380	1					
ANR	21469	IfStatement	"if ( * s == ',' )"		20380	29					
ANR	21470	Condition	"* s == ','"	1376:6:38253:38261	20380	0	True				
ANR	21471	EqualityExpression	"* s == ','"		20380	0		==			
ANR	21472	UnaryOperationExpression	* s		20380	0					
ANR	21473	UnaryOperator	*		20380	0					
ANR	21474	Identifier	s		20380	1					
ANR	21475	PrimaryExpression	"','"		20380	1					
ANR	21476	CompoundStatement		207:4:5963:5963	20380	1					
ANR	21477	DoStatement	do		20380	0					
ANR	21478	CompoundStatement		209:8:5982:5982	20380	0					
ANR	21479	IfStatement	if ( ! * ++ s )		20380	0					
ANR	21480	Condition	! * ++ s	1380:7:38296:38300	20380	0	True				
ANR	21481	UnaryOperationExpression	! * ++ s		20380	0					
ANR	21482	UnaryOperator	!		20380	0					
ANR	21483	UnaryOperationExpression	* ++ s		20380	1					
ANR	21484	UnaryOperator	*		20380	0					
ANR	21485	UnaryExpression	++ s		20380	1					
ANR	21486	IncDec	++		20380	0					
ANR	21487	Identifier	s		20380	1					
ANR	21488	ExpressionStatement	malformed ( )	1381:5:38308:38320	20380	1	True				
ANR	21489	CallExpression	malformed ( )		20380	0					
ANR	21490	Callee	malformed		20380	0					
ANR	21491	Identifier	malformed		20380	0					
ANR	21492	ArgumentList			20380	1					
ANR	21493	Condition	! ISDIGIT ( * s )	1383:13:38345:38358	20380	1	True				
ANR	21494	UnaryOperationExpression	! ISDIGIT ( * s )		20380	0					
ANR	21495	UnaryOperator	!		20380	0					
ANR	21496	CallExpression	ISDIGIT ( * s )		20380	1					
ANR	21497	Callee	ISDIGIT		20380	0					
ANR	21498	Identifier	ISDIGIT		20380	0					
ANR	21499	ArgumentList	* s		20380	1					
ANR	21500	Argument	* s		20380	0					
ANR	21501	UnaryOperationExpression	* s		20380	0					
ANR	21502	UnaryOperator	*		20380	0					
ANR	21503	Identifier	s		20380	1					
ANR	21504	ExpressionStatement	"scan_linenum ( s , & p_repl_lines )"	1384:6:38368:38399	20380	1	True				
ANR	21505	CallExpression	"scan_linenum ( s , & p_repl_lines )"		20380	0					
ANR	21506	Callee	scan_linenum		20380	0					
ANR	21507	Identifier	scan_linenum		20380	0					
ANR	21508	ArgumentList	s		20380	1					
ANR	21509	Argument	s		20380	0					
ANR	21510	Identifier	s		20380	0					
ANR	21511	Argument	& p_repl_lines		20380	1					
ANR	21512	UnaryOperationExpression	& p_repl_lines		20380	0					
ANR	21513	UnaryOperator	&		20380	0					
ANR	21514	Identifier	p_repl_lines		20380	1					
ANR	21515	ExpressionStatement	p_repl_lines += 1 - p_newfirst	1385:6:38407:38437	20380	2	True				
ANR	21516	AssignmentExpression	p_repl_lines += 1 - p_newfirst		20380	0		+=			
ANR	21517	Identifier	p_repl_lines		20380	0					
ANR	21518	AdditiveExpression	1 - p_newfirst		20380	1		-			
ANR	21519	PrimaryExpression	1		20380	0					
ANR	21520	Identifier	p_newfirst		20380	1					
ANR	21521	IfStatement	if ( p_repl_lines < 0 )		20380	3					
ANR	21522	Condition	p_repl_lines < 0	1386:10:38449:38464	20380	0	True				
ANR	21523	RelationalExpression	p_repl_lines < 0		20380	0		<			
ANR	21524	Identifier	p_repl_lines		20380	0					
ANR	21525	PrimaryExpression	0		20380	1					
ANR	21526	ExpressionStatement	malformed ( )	1387:8:38475:38487	20380	1	True				
ANR	21527	CallExpression	malformed ( )		20380	0					
ANR	21528	Callee	malformed		20380	0					
ANR	21529	Identifier	malformed		20380	0					
ANR	21530	ArgumentList			20380	1					
ANR	21531	ElseStatement	else		20380	0					
ANR	21532	IfStatement	if ( p_newfirst )		20380	0					
ANR	21533	Condition	p_newfirst	1389:11:38506:38515	20380	0	True				
ANR	21534	Identifier	p_newfirst		20380	0					
ANR	21535	ExpressionStatement	p_repl_lines = 1	1390:4:38522:38538	20380	1	True				
ANR	21536	AssignmentExpression	p_repl_lines = 1		20380	0		=			
ANR	21537	Identifier	p_repl_lines		20380	0					
ANR	21538	PrimaryExpression	1		20380	1					
ANR	21539	ElseStatement	else		20380	0					
ANR	21540	CompoundStatement		222:4:6246:6246	20380	0					
ANR	21541	ExpressionStatement	p_repl_lines = 0	1393:6:38559:38575	20380	0	True				
ANR	21542	AssignmentExpression	p_repl_lines = 0		20380	0		=			
ANR	21543	Identifier	p_repl_lines		20380	0					
ANR	21544	PrimaryExpression	0		20380	1					
ANR	21545	ExpressionStatement	p_newfirst = 1	1394:6:38583:38597	20380	1	True				
ANR	21546	AssignmentExpression	p_newfirst = 1		20380	0		=			
ANR	21547	Identifier	p_newfirst		20380	0					
ANR	21548	PrimaryExpression	1		20380	1					
ANR	21549	IfStatement	if ( p_newfirst >= LINENUM_MAX - p_repl_lines || p_repl_lines >= LINENUM_MAX - p_end )		20380	30					
ANR	21550	Condition	p_newfirst >= LINENUM_MAX - p_repl_lines || p_repl_lines >= LINENUM_MAX - p_end	1396:6:38611:38695	20380	0	True				
ANR	21551	OrExpression	p_newfirst >= LINENUM_MAX - p_repl_lines || p_repl_lines >= LINENUM_MAX - p_end		20380	0		||			
ANR	21552	RelationalExpression	p_newfirst >= LINENUM_MAX - p_repl_lines		20380	0		>=			
ANR	21553	Identifier	p_newfirst		20380	0					
ANR	21554	AdditiveExpression	LINENUM_MAX - p_repl_lines		20380	1		-			
ANR	21555	Identifier	LINENUM_MAX		20380	0					
ANR	21556	Identifier	p_repl_lines		20380	1					
ANR	21557	RelationalExpression	p_repl_lines >= LINENUM_MAX - p_end		20380	1		>=			
ANR	21558	Identifier	p_repl_lines		20380	0					
ANR	21559	AdditiveExpression	LINENUM_MAX - p_end		20380	1		-			
ANR	21560	Identifier	LINENUM_MAX		20380	0					
ANR	21561	Identifier	p_end		20380	1					
ANR	21562	ExpressionStatement	malformed ( )	1398:4:38702:38714	20380	1	True				
ANR	21563	CallExpression	malformed ( )		20380	0					
ANR	21564	Callee	malformed		20380	0					
ANR	21565	Identifier	malformed		20380	0					
ANR	21566	ArgumentList			20380	1					
ANR	21567	ExpressionStatement	p_max = p_repl_lines + p_end	1399:2:38718:38746	20380	31	True				
ANR	21568	AssignmentExpression	p_max = p_repl_lines + p_end		20380	0		=			
ANR	21569	Identifier	p_max		20380	0					
ANR	21570	AdditiveExpression	p_repl_lines + p_end		20380	1		+			
ANR	21571	Identifier	p_repl_lines		20380	0					
ANR	21572	Identifier	p_end		20380	1					
ANR	21573	WhileStatement	while ( p_max + 1 >= hunkmax )		20380	32					
ANR	21574	Condition	p_max + 1 >= hunkmax	1400:9:38757:38776	20380	0	True				
ANR	21575	RelationalExpression	p_max + 1 >= hunkmax		20380	0		>=			
ANR	21576	AdditiveExpression	p_max + 1		20380	0		+			
ANR	21577	Identifier	p_max		20380	0					
ANR	21578	PrimaryExpression	1		20380	1					
ANR	21579	Identifier	hunkmax		20380	1					
ANR	21580	IfStatement	if ( ! grow_hunkmax ( ) )		20380	1					
ANR	21581	Condition	! grow_hunkmax ( )	1401:8:38787:38803	20380	0	True				
ANR	21582	UnaryOperationExpression	! grow_hunkmax ( )		20380	0					
ANR	21583	UnaryOperator	!		20380	0					
ANR	21584	CallExpression	grow_hunkmax ( )		20380	1					
ANR	21585	Callee	grow_hunkmax		20380	0					
ANR	21586	Identifier	grow_hunkmax		20380	0					
ANR	21587	ArgumentList			20380	1					
ANR	21588	ReturnStatement	return - 1 ;	1402:6:38812:38821	20380	1	True				
ANR	21589	UnaryOperationExpression	- 1		20380	0					
ANR	21590	UnaryOperator	-		20380	0					
ANR	21591	PrimaryExpression	1		20380	1					
ANR	21592	IfStatement	if ( p_repl_lines != ptrn_copiable && ( p_prefix_context != 0 || context != 0 || p_repl_lines != 1 ) )		20380	33					
ANR	21593	Condition	p_repl_lines != ptrn_copiable && ( p_prefix_context != 0 || context != 0 || p_repl_lines != 1 )	1403:6:38829:38933	20380	0	True				
ANR	21594	AndExpression	p_repl_lines != ptrn_copiable && ( p_prefix_context != 0 || context != 0 || p_repl_lines != 1 )		20380	0		&&			
ANR	21595	EqualityExpression	p_repl_lines != ptrn_copiable		20380	0		!=			
ANR	21596	Identifier	p_repl_lines		20380	0					
ANR	21597	Identifier	ptrn_copiable		20380	1					
ANR	21598	OrExpression	p_prefix_context != 0 || context != 0 || p_repl_lines != 1		20380	1		||			
ANR	21599	EqualityExpression	p_prefix_context != 0		20380	0		!=			
ANR	21600	Identifier	p_prefix_context		20380	0					
ANR	21601	PrimaryExpression	0		20380	1					
ANR	21602	OrExpression	context != 0 || p_repl_lines != 1		20380	1		||			
ANR	21603	EqualityExpression	context != 0		20380	0		!=			
ANR	21604	Identifier	context		20380	0					
ANR	21605	PrimaryExpression	0		20380	1					
ANR	21606	EqualityExpression	p_repl_lines != 1		20380	1		!=			
ANR	21607	Identifier	p_repl_lines		20380	0					
ANR	21608	PrimaryExpression	1		20380	1					
ANR	21609	ExpressionStatement	repl_could_be_missing = false	1407:4:38940:38969	20380	1	True				
ANR	21610	AssignmentExpression	repl_could_be_missing = false		20380	0		=			
ANR	21611	Identifier	repl_could_be_missing		20380	0					
ANR	21612	Identifier	false		20380	1					
ANR	21613	ExpressionStatement	context = 0	1408:2:38973:38984	20380	34	True				
ANR	21614	AssignmentExpression	context = 0		20380	0		=			
ANR	21615	Identifier	context		20380	0					
ANR	21616	PrimaryExpression	0		20380	1					
ANR	21617	BreakStatement	break ;	1409:2:38988:38993	20380	35	True				
ANR	21618	Label	case '+' :	1410:5:39000:39008	20380	36	True				
ANR	21619	Label	case '!' :	1410:16:39011:39019	20380	37	True				
ANR	21620	ExpressionStatement	repl_could_be_missing = false	1411:2:39023:39052	20380	38	True				
ANR	21621	AssignmentExpression	repl_could_be_missing = false		20380	0		=			
ANR	21622	Identifier	repl_could_be_missing		20380	0					
ANR	21623	Identifier	false		20380	1					
ANR	21624	Label	change_line :	1412:7:39061:39072	20380	39	True				
ANR	21625	Identifier	change_line		20380	0					
ANR	21626	ExpressionStatement	s = buf + 1	1413:2:39076:39087	20380	40	True				
ANR	21627	AssignmentExpression	s = buf + 1		20380	0		=			
ANR	21628	Identifier	s		20380	0					
ANR	21629	AdditiveExpression	buf + 1		20380	1		+			
ANR	21630	Identifier	buf		20380	0					
ANR	21631	PrimaryExpression	1		20380	1					
ANR	21632	ExpressionStatement	chars_read --	1414:2:39091:39103	20380	41	True				
ANR	21633	PostIncDecOperationExpression	chars_read --		20380	0					
ANR	21634	Identifier	chars_read		20380	0					
ANR	21635	IncDec	--		20380	1					
ANR	21636	IfStatement	if ( * s == '\\n' && canonicalize_ws )		20380	42					
ANR	21637	Condition	* s == '\\n' && canonicalize_ws	1415:6:39111:39139	20380	0	True				
ANR	21638	AndExpression	* s == '\\n' && canonicalize_ws		20380	0		&&			
ANR	21639	EqualityExpression	* s == '\\n'		20380	0		==			
ANR	21640	UnaryOperationExpression	* s		20380	0					
ANR	21641	UnaryOperator	*		20380	0					
ANR	21642	Identifier	s		20380	1					
ANR	21643	PrimaryExpression	'\\n'		20380	1					
ANR	21644	Identifier	canonicalize_ws		20380	1					
ANR	21645	CompoundStatement		245:37:6837:6837	20380	1					
ANR	21646	ExpressionStatement	"strcpy ( s , "" \\n"" )"	1416:6:39150:39167	20380	0	True				
ANR	21647	CallExpression	"strcpy ( s , "" \\n"" )"		20380	0					
ANR	21648	Callee	strcpy		20380	0					
ANR	21649	Identifier	strcpy		20380	0					
ANR	21650	ArgumentList	s		20380	1					
ANR	21651	Argument	s		20380	0					
ANR	21652	Identifier	s		20380	0					
ANR	21653	Argument	""" \\n"""		20380	1					
ANR	21654	PrimaryExpression	""" \\n"""		20380	0					
ANR	21655	ExpressionStatement	chars_read = 2	1417:6:39175:39189	20380	1	True				
ANR	21656	AssignmentExpression	chars_read = 2		20380	0		=			
ANR	21657	Identifier	chars_read		20380	0					
ANR	21658	PrimaryExpression	2		20380	1					
ANR	21659	IfStatement	if ( * s == ' ' || * s == '\\t' )		20380	43					
ANR	21660	Condition	* s == ' ' || * s == '\\t'	1419:6:39201:39223	20380	0	True				
ANR	21661	OrExpression	* s == ' ' || * s == '\\t'		20380	0		||			
ANR	21662	EqualityExpression	* s == ' '		20380	0		==			
ANR	21663	UnaryOperationExpression	* s		20380	0					
ANR	21664	UnaryOperator	*		20380	0					
ANR	21665	Identifier	s		20380	1					
ANR	21666	PrimaryExpression	' '		20380	1					
ANR	21667	EqualityExpression	* s == '\\t'		20380	1		==			
ANR	21668	UnaryOperationExpression	* s		20380	0					
ANR	21669	UnaryOperator	*		20380	0					
ANR	21670	Identifier	s		20380	1					
ANR	21671	PrimaryExpression	'\\t'		20380	1					
ANR	21672	CompoundStatement		249:31:6921:6921	20380	1					
ANR	21673	ExpressionStatement	s ++	1420:6:39234:39237	20380	0	True				
ANR	21674	PostIncDecOperationExpression	s ++		20380	0					
ANR	21675	Identifier	s		20380	0					
ANR	21676	IncDec	++		20380	1					
ANR	21677	ExpressionStatement	chars_read --	1421:6:39245:39257	20380	1	True				
ANR	21678	PostIncDecOperationExpression	chars_read --		20380	0					
ANR	21679	Identifier	chars_read		20380	0					
ANR	21680	IncDec	--		20380	1					
ANR	21681	ElseStatement	else		20380	0					
ANR	21682	IfStatement	if ( repl_beginning && repl_could_be_missing )		20380	0					
ANR	21683	Condition	repl_beginning && repl_could_be_missing	1422:13:39272:39310	20380	0	True				
ANR	21684	AndExpression	repl_beginning && repl_could_be_missing		20380	0		&&			
ANR	21685	Identifier	repl_beginning		20380	0					
ANR	21686	Identifier	repl_could_be_missing		20380	1					
ANR	21687	CompoundStatement		252:54:7008:7008	20380	1					
ANR	21688	ExpressionStatement	repl_missing = true	1423:6:39321:39340	20380	0	True				
ANR	21689	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	21690	Identifier	repl_missing		20380	0					
ANR	21691	Identifier	true		20380	1					
ANR	21692	GotoStatement	goto hunk_done ;	1424:6:39348:39362	20380	1	True				
ANR	21693	Identifier	hunk_done		20380	0					
ANR	21694	IfStatement	if ( ! repl_beginning )		20380	44					
ANR	21695	Condition	! repl_beginning	1426:6:39374:39389	20380	0	True				
ANR	21696	UnaryOperationExpression	! repl_beginning		20380	0					
ANR	21697	UnaryOperator	!		20380	0					
ANR	21698	Identifier	repl_beginning		20380	1					
ANR	21699	CompoundStatement		257:4:7091:7091	20380	1					
ANR	21700	IfStatement	if ( ptrn_prefix_context == - 1 )		20380	0					
ANR	21701	Condition	ptrn_prefix_context == - 1	1428:10:39408:39432	20380	0	True				
ANR	21702	EqualityExpression	ptrn_prefix_context == - 1		20380	0		==			
ANR	21703	Identifier	ptrn_prefix_context		20380	0					
ANR	21704	UnaryOperationExpression	- 1		20380	1					
ANR	21705	UnaryOperator	-		20380	0					
ANR	21706	PrimaryExpression	1		20380	1					
ANR	21707	ExpressionStatement	ptrn_prefix_context = context	1429:8:39443:39472	20380	1	True				
ANR	21708	AssignmentExpression	ptrn_prefix_context = context		20380	0		=			
ANR	21709	Identifier	ptrn_prefix_context		20380	0					
ANR	21710	Identifier	context		20380	1					
ANR	21711	ElseStatement	else		20380	0					
ANR	21712	CompoundStatement		262:4:7186:7186	20380	0					
ANR	21713	IfStatement	if ( repl_prefix_context == - 1 )		20380	0					
ANR	21714	Condition	repl_prefix_context == - 1	1433:10:39503:39527	20380	0	True				
ANR	21715	EqualityExpression	repl_prefix_context == - 1		20380	0		==			
ANR	21716	Identifier	repl_prefix_context		20380	0					
ANR	21717	UnaryOperationExpression	- 1		20380	1					
ANR	21718	UnaryOperator	-		20380	0					
ANR	21719	PrimaryExpression	1		20380	1					
ANR	21720	ExpressionStatement	repl_prefix_context = context	1434:8:39538:39567	20380	1	True				
ANR	21721	AssignmentExpression	repl_prefix_context = context		20380	0		=			
ANR	21722	Identifier	repl_prefix_context		20380	0					
ANR	21723	Identifier	context		20380	1					
ANR	21724	ExpressionStatement	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )	1436:2:39577:39695	20380	45	True				
ANR	21725	AssignmentExpression	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )		20380	0		-=			
ANR	21726	Identifier	chars_read		20380	0					
ANR	21727	AndExpression	1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		20380	1		&&			
ANR	21728	RelationalExpression	1 < chars_read		20380	0		<			
ANR	21729	PrimaryExpression	1		20380	0					
ANR	21730	Identifier	chars_read		20380	1					
ANR	21731	AndExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		20380	1		&&			
ANR	21732	EqualityExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines )		20380	0		==			
ANR	21733	Identifier	p_end		20380	0					
ANR	21734	ConditionalExpression	repl_beginning ? p_max : p_ptrn_lines		20380	1					
ANR	21735	Condition	repl_beginning		20380	0					
ANR	21736	Identifier	repl_beginning		20380	0					
ANR	21737	Identifier	p_max		20380	1					
ANR	21738	Identifier	p_ptrn_lines		20380	2					
ANR	21739	CallExpression	incomplete_line ( )		20380	1					
ANR	21740	Callee	incomplete_line		20380	0					
ANR	21741	Identifier	incomplete_line		20380	0					
ANR	21742	ArgumentList			20380	1					
ANR	21743	ExpressionStatement	p_len [ p_end ] = chars_read	1440:2:39699:39724	20380	46	True				
ANR	21744	AssignmentExpression	p_len [ p_end ] = chars_read		20380	0		=			
ANR	21745	ArrayIndexing	p_len [ p_end ]		20380	0					
ANR	21746	Identifier	p_len		20380	0					
ANR	21747	Identifier	p_end		20380	1					
ANR	21748	Identifier	chars_read		20380	1					
ANR	21749	ExpressionStatement	"p_line [ p_end ] = savebuf ( s , chars_read )"	1441:2:39728:39767	20380	47	True				
ANR	21750	AssignmentExpression	"p_line [ p_end ] = savebuf ( s , chars_read )"		20380	0		=			
ANR	21751	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	21752	Identifier	p_line		20380	0					
ANR	21753	Identifier	p_end		20380	1					
ANR	21754	CallExpression	"savebuf ( s , chars_read )"		20380	1					
ANR	21755	Callee	savebuf		20380	0					
ANR	21756	Identifier	savebuf		20380	0					
ANR	21757	ArgumentList	s		20380	1					
ANR	21758	Argument	s		20380	0					
ANR	21759	Identifier	s		20380	0					
ANR	21760	Argument	chars_read		20380	1					
ANR	21761	Identifier	chars_read		20380	0					
ANR	21762	IfStatement	if ( chars_read && ! p_line [ p_end ] )		20380	48					
ANR	21763	Condition	chars_read && ! p_line [ p_end ]	1442:6:39775:39803	20380	0	True				
ANR	21764	AndExpression	chars_read && ! p_line [ p_end ]		20380	0		&&			
ANR	21765	Identifier	chars_read		20380	0					
ANR	21766	UnaryOperationExpression	! p_line [ p_end ]		20380	1					
ANR	21767	UnaryOperator	!		20380	0					
ANR	21768	ArrayIndexing	p_line [ p_end ]		20380	1					
ANR	21769	Identifier	p_line		20380	0					
ANR	21770	Identifier	p_end		20380	1					
ANR	21771	CompoundStatement		272:37:7501:7501	20380	1					
ANR	21772	ExpressionStatement	p_end --	1443:6:39814:39821	20380	0	True				
ANR	21773	PostIncDecOperationExpression	p_end --		20380	0					
ANR	21774	Identifier	p_end		20380	0					
ANR	21775	IncDec	--		20380	1					
ANR	21776	ReturnStatement	return - 1 ;	1444:6:39829:39838	20380	1	True				
ANR	21777	UnaryOperationExpression	- 1		20380	0					
ANR	21778	UnaryOperator	-		20380	0					
ANR	21779	PrimaryExpression	1		20380	1					
ANR	21780	ExpressionStatement	context = 0	1446:2:39853:39864	20380	49	True				
ANR	21781	AssignmentExpression	context = 0		20380	0		=			
ANR	21782	Identifier	context		20380	0					
ANR	21783	PrimaryExpression	0		20380	1					
ANR	21784	BreakStatement	break ;	1447:2:39868:39873	20380	50	True				
ANR	21785	Label	case '\\t' :	1448:5:39880:39889	20380	51	True				
ANR	21786	Label	case '\\n' :	1448:16:39891:39900	20380	52	True				
ANR	21787	ExpressionStatement	s = buf	1449:2:39934:39941	20380	53	True				
ANR	21788	AssignmentExpression	s = buf		20380	0		=			
ANR	21789	Identifier	s		20380	0					
ANR	21790	Identifier	buf		20380	1					
ANR	21791	IfStatement	if ( * buf == '\\t' )		20380	54					
ANR	21792	Condition	* buf == '\\t'	1450:6:39949:39960	20380	0	True				
ANR	21793	EqualityExpression	* buf == '\\t'		20380	0		==			
ANR	21794	UnaryOperationExpression	* buf		20380	0					
ANR	21795	UnaryOperator	*		20380	0					
ANR	21796	Identifier	buf		20380	1					
ANR	21797	PrimaryExpression	'\\t'		20380	1					
ANR	21798	CompoundStatement		280:20:7658:7658	20380	1					
ANR	21799	ExpressionStatement	s ++	1451:6:39971:39974	20380	0	True				
ANR	21800	PostIncDecOperationExpression	s ++		20380	0					
ANR	21801	Identifier	s		20380	0					
ANR	21802	IncDec	++		20380	1					
ANR	21803	ExpressionStatement	chars_read --	1452:6:39982:39994	20380	1	True				
ANR	21804	PostIncDecOperationExpression	chars_read --		20380	0					
ANR	21805	Identifier	chars_read		20380	0					
ANR	21806	IncDec	--		20380	1					
ANR	21807	IfStatement	if ( repl_beginning && repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF ) )		20380	55					
ANR	21808	Condition	repl_beginning && repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF )	1454:6:40006:40106	20380	0	True				
ANR	21809	AndExpression	repl_beginning && repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF )		20380	0		&&			
ANR	21810	Identifier	repl_beginning		20380	0					
ANR	21811	AndExpression	repl_could_be_missing && ( ! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF )		20380	1		&&			
ANR	21812	Identifier	repl_could_be_missing		20380	0					
ANR	21813	OrExpression	! ptrn_spaces_eaten || difftype == NEW_CONTEXT_DIFF		20380	1		||			
ANR	21814	UnaryOperationExpression	! ptrn_spaces_eaten		20380	0					
ANR	21815	UnaryOperator	!		20380	0					
ANR	21816	Identifier	ptrn_spaces_eaten		20380	1					
ANR	21817	EqualityExpression	difftype == NEW_CONTEXT_DIFF		20380	1		==			
ANR	21818	Identifier	difftype		20380	0					
ANR	21819	Identifier	NEW_CONTEXT_DIFF		20380	1					
ANR	21820	CompoundStatement		285:61:7805:7805	20380	1					
ANR	21821	ExpressionStatement	repl_missing = true	1456:6:40118:40137	20380	0	True				
ANR	21822	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	21823	Identifier	repl_missing		20380	0					
ANR	21824	Identifier	true		20380	1					
ANR	21825	GotoStatement	goto hunk_done ;	1457:6:40145:40159	20380	1	True				
ANR	21826	Identifier	hunk_done		20380	0					
ANR	21827	ExpressionStatement	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )	1459:2:40167:40285	20380	56	True				
ANR	21828	AssignmentExpression	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )		20380	0		-=			
ANR	21829	Identifier	chars_read		20380	0					
ANR	21830	AndExpression	1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		20380	1		&&			
ANR	21831	RelationalExpression	1 < chars_read		20380	0		<			
ANR	21832	PrimaryExpression	1		20380	0					
ANR	21833	Identifier	chars_read		20380	1					
ANR	21834	AndExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		20380	1		&&			
ANR	21835	EqualityExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines )		20380	0		==			
ANR	21836	Identifier	p_end		20380	0					
ANR	21837	ConditionalExpression	repl_beginning ? p_max : p_ptrn_lines		20380	1					
ANR	21838	Condition	repl_beginning		20380	0					
ANR	21839	Identifier	repl_beginning		20380	0					
ANR	21840	Identifier	p_max		20380	1					
ANR	21841	Identifier	p_ptrn_lines		20380	2					
ANR	21842	CallExpression	incomplete_line ( )		20380	1					
ANR	21843	Callee	incomplete_line		20380	0					
ANR	21844	Identifier	incomplete_line		20380	0					
ANR	21845	ArgumentList			20380	1					
ANR	21846	ExpressionStatement	p_len [ p_end ] = chars_read	1463:2:40289:40314	20380	57	True				
ANR	21847	AssignmentExpression	p_len [ p_end ] = chars_read		20380	0		=			
ANR	21848	ArrayIndexing	p_len [ p_end ]		20380	0					
ANR	21849	Identifier	p_len		20380	0					
ANR	21850	Identifier	p_end		20380	1					
ANR	21851	Identifier	chars_read		20380	1					
ANR	21852	ExpressionStatement	"p_line [ p_end ] = savebuf ( buf , chars_read )"	1464:2:40318:40359	20380	58	True				
ANR	21853	AssignmentExpression	"p_line [ p_end ] = savebuf ( buf , chars_read )"		20380	0		=			
ANR	21854	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	21855	Identifier	p_line		20380	0					
ANR	21856	Identifier	p_end		20380	1					
ANR	21857	CallExpression	"savebuf ( buf , chars_read )"		20380	1					
ANR	21858	Callee	savebuf		20380	0					
ANR	21859	Identifier	savebuf		20380	0					
ANR	21860	ArgumentList	buf		20380	1					
ANR	21861	Argument	buf		20380	0					
ANR	21862	Identifier	buf		20380	0					
ANR	21863	Argument	chars_read		20380	1					
ANR	21864	Identifier	chars_read		20380	0					
ANR	21865	IfStatement	if ( chars_read && ! p_line [ p_end ] )		20380	59					
ANR	21866	Condition	chars_read && ! p_line [ p_end ]	1465:6:40367:40395	20380	0	True				
ANR	21867	AndExpression	chars_read && ! p_line [ p_end ]		20380	0		&&			
ANR	21868	Identifier	chars_read		20380	0					
ANR	21869	UnaryOperationExpression	! p_line [ p_end ]		20380	1					
ANR	21870	UnaryOperator	!		20380	0					
ANR	21871	ArrayIndexing	p_line [ p_end ]		20380	1					
ANR	21872	Identifier	p_line		20380	0					
ANR	21873	Identifier	p_end		20380	1					
ANR	21874	CompoundStatement		295:37:8093:8093	20380	1					
ANR	21875	ExpressionStatement	p_end --	1466:6:40406:40413	20380	0	True				
ANR	21876	PostIncDecOperationExpression	p_end --		20380	0					
ANR	21877	Identifier	p_end		20380	0					
ANR	21878	IncDec	--		20380	1					
ANR	21879	ReturnStatement	return - 1 ;	1467:6:40421:40430	20380	1	True				
ANR	21880	UnaryOperationExpression	- 1		20380	0					
ANR	21881	UnaryOperator	-		20380	0					
ANR	21882	PrimaryExpression	1		20380	1					
ANR	21883	IfStatement	if ( p_end != p_ptrn_lines + 1 )		20380	60					
ANR	21884	Condition	p_end != p_ptrn_lines + 1	1469:6:40442:40466	20380	0	True				
ANR	21885	EqualityExpression	p_end != p_ptrn_lines + 1		20380	0		!=			
ANR	21886	Identifier	p_end		20380	0					
ANR	21887	AdditiveExpression	p_ptrn_lines + 1		20380	1		+			
ANR	21888	Identifier	p_ptrn_lines		20380	0					
ANR	21889	PrimaryExpression	1		20380	1					
ANR	21890	CompoundStatement		299:33:8164:8164	20380	1					
ANR	21891	ExpressionStatement	ptrn_spaces_eaten |= ( repl_beginning != 0 )	1470:6:40477:40519	20380	0	True				
ANR	21892	AssignmentExpression	ptrn_spaces_eaten |= ( repl_beginning != 0 )		20380	0		|=			
ANR	21893	Identifier	ptrn_spaces_eaten		20380	0					
ANR	21894	EqualityExpression	repl_beginning != 0		20380	1		!=			
ANR	21895	Identifier	repl_beginning		20380	0					
ANR	21896	PrimaryExpression	0		20380	1					
ANR	21897	ExpressionStatement	some_context = true	1471:6:40527:40546	20380	1	True				
ANR	21898	AssignmentExpression	some_context = true		20380	0		=			
ANR	21899	Identifier	some_context		20380	0					
ANR	21900	Identifier	true		20380	1					
ANR	21901	ExpressionStatement	context ++	1472:6:40554:40563	20380	2	True				
ANR	21902	PostIncDecOperationExpression	context ++		20380	0					
ANR	21903	Identifier	context		20380	0					
ANR	21904	IncDec	++		20380	1					
ANR	21905	IfStatement	if ( repl_beginning )		20380	3					
ANR	21906	Condition	repl_beginning	1473:10:40575:40588	20380	0	True				
ANR	21907	Identifier	repl_beginning		20380	0					
ANR	21908	ExpressionStatement	repl_copiable ++	1474:3:40594:40609	20380	1	True				
ANR	21909	PostIncDecOperationExpression	repl_copiable ++		20380	0					
ANR	21910	Identifier	repl_copiable		20380	0					
ANR	21911	IncDec	++		20380	1					
ANR	21912	ElseStatement	else		20380	0					
ANR	21913	ExpressionStatement	ptrn_copiable ++	1476:3:40625:40640	20380	0	True				
ANR	21914	PostIncDecOperationExpression	ptrn_copiable ++		20380	0					
ANR	21915	Identifier	ptrn_copiable		20380	0					
ANR	21916	IncDec	++		20380	1					
ANR	21917	ExpressionStatement	p_Char [ p_end ] = ' '	1477:6:40648:40667	20380	4	True				
ANR	21918	AssignmentExpression	p_Char [ p_end ] = ' '		20380	0		=			
ANR	21919	ArrayIndexing	p_Char [ p_end ]		20380	0					
ANR	21920	Identifier	p_Char		20380	0					
ANR	21921	Identifier	p_end		20380	1					
ANR	21922	PrimaryExpression	' '		20380	1					
ANR	21923	BreakStatement	break ;	1479:2:40675:40680	20380	61	True				
ANR	21924	Label	case ' ' :	1480:5:40687:40695	20380	62	True				
ANR	21925	ExpressionStatement	s = buf + 1	1481:2:40699:40710	20380	63	True				
ANR	21926	AssignmentExpression	s = buf + 1		20380	0		=			
ANR	21927	Identifier	s		20380	0					
ANR	21928	AdditiveExpression	buf + 1		20380	1		+			
ANR	21929	Identifier	buf		20380	0					
ANR	21930	PrimaryExpression	1		20380	1					
ANR	21931	ExpressionStatement	chars_read --	1482:2:40714:40726	20380	64	True				
ANR	21932	PostIncDecOperationExpression	chars_read --		20380	0					
ANR	21933	Identifier	chars_read		20380	0					
ANR	21934	IncDec	--		20380	1					
ANR	21935	IfStatement	if ( * s == '\\n' && canonicalize_ws )		20380	65					
ANR	21936	Condition	* s == '\\n' && canonicalize_ws	1483:6:40734:40762	20380	0	True				
ANR	21937	AndExpression	* s == '\\n' && canonicalize_ws		20380	0		&&			
ANR	21938	EqualityExpression	* s == '\\n'		20380	0		==			
ANR	21939	UnaryOperationExpression	* s		20380	0					
ANR	21940	UnaryOperator	*		20380	0					
ANR	21941	Identifier	s		20380	1					
ANR	21942	PrimaryExpression	'\\n'		20380	1					
ANR	21943	Identifier	canonicalize_ws		20380	1					
ANR	21944	CompoundStatement		313:37:8460:8460	20380	1					
ANR	21945	ExpressionStatement	"strcpy ( s , ""\\n"" )"	1484:6:40773:40789	20380	0	True				
ANR	21946	CallExpression	"strcpy ( s , ""\\n"" )"		20380	0					
ANR	21947	Callee	strcpy		20380	0					
ANR	21948	Identifier	strcpy		20380	0					
ANR	21949	ArgumentList	s		20380	1					
ANR	21950	Argument	s		20380	0					
ANR	21951	Identifier	s		20380	0					
ANR	21952	Argument	"""\\n"""		20380	1					
ANR	21953	PrimaryExpression	"""\\n"""		20380	0					
ANR	21954	ExpressionStatement	chars_read = 2	1485:6:40797:40811	20380	1	True				
ANR	21955	AssignmentExpression	chars_read = 2		20380	0		=			
ANR	21956	Identifier	chars_read		20380	0					
ANR	21957	PrimaryExpression	2		20380	1					
ANR	21958	IfStatement	if ( * s == ' ' || * s == '\\t' )		20380	66					
ANR	21959	Condition	* s == ' ' || * s == '\\t'	1487:6:40823:40845	20380	0	True				
ANR	21960	OrExpression	* s == ' ' || * s == '\\t'		20380	0		||			
ANR	21961	EqualityExpression	* s == ' '		20380	0		==			
ANR	21962	UnaryOperationExpression	* s		20380	0					
ANR	21963	UnaryOperator	*		20380	0					
ANR	21964	Identifier	s		20380	1					
ANR	21965	PrimaryExpression	' '		20380	1					
ANR	21966	EqualityExpression	* s == '\\t'		20380	1		==			
ANR	21967	UnaryOperationExpression	* s		20380	0					
ANR	21968	UnaryOperator	*		20380	0					
ANR	21969	Identifier	s		20380	1					
ANR	21970	PrimaryExpression	'\\t'		20380	1					
ANR	21971	CompoundStatement		317:31:8543:8543	20380	1					
ANR	21972	ExpressionStatement	s ++	1488:6:40856:40859	20380	0	True				
ANR	21973	PostIncDecOperationExpression	s ++		20380	0					
ANR	21974	Identifier	s		20380	0					
ANR	21975	IncDec	++		20380	1					
ANR	21976	ExpressionStatement	chars_read --	1489:6:40867:40879	20380	1	True				
ANR	21977	PostIncDecOperationExpression	chars_read --		20380	0					
ANR	21978	Identifier	chars_read		20380	0					
ANR	21979	IncDec	--		20380	1					
ANR	21980	ElseStatement	else		20380	0					
ANR	21981	IfStatement	if ( repl_beginning && repl_could_be_missing )		20380	0					
ANR	21982	Condition	repl_beginning && repl_could_be_missing	1490:13:40894:40932	20380	0	True				
ANR	21983	AndExpression	repl_beginning && repl_could_be_missing		20380	0		&&			
ANR	21984	Identifier	repl_beginning		20380	0					
ANR	21985	Identifier	repl_could_be_missing		20380	1					
ANR	21986	CompoundStatement		320:54:8630:8630	20380	1					
ANR	21987	ExpressionStatement	repl_missing = true	1491:6:40943:40962	20380	0	True				
ANR	21988	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	21989	Identifier	repl_missing		20380	0					
ANR	21990	Identifier	true		20380	1					
ANR	21991	GotoStatement	goto hunk_done ;	1492:6:40970:40984	20380	1	True				
ANR	21992	Identifier	hunk_done		20380	0					
ANR	21993	ExpressionStatement	some_context = true	1494:2:40992:41011	20380	67	True				
ANR	21994	AssignmentExpression	some_context = true		20380	0		=			
ANR	21995	Identifier	some_context		20380	0					
ANR	21996	Identifier	true		20380	1					
ANR	21997	ExpressionStatement	context ++	1495:2:41015:41024	20380	68	True				
ANR	21998	PostIncDecOperationExpression	context ++		20380	0					
ANR	21999	Identifier	context		20380	0					
ANR	22000	IncDec	++		20380	1					
ANR	22001	IfStatement	if ( repl_beginning )		20380	69					
ANR	22002	Condition	repl_beginning	1496:6:41032:41045	20380	0	True				
ANR	22003	Identifier	repl_beginning		20380	0					
ANR	22004	ExpressionStatement	repl_copiable ++	1497:6:41054:41069	20380	1	True				
ANR	22005	PostIncDecOperationExpression	repl_copiable ++		20380	0					
ANR	22006	Identifier	repl_copiable		20380	0					
ANR	22007	IncDec	++		20380	1					
ANR	22008	ElseStatement	else		20380	0					
ANR	22009	ExpressionStatement	ptrn_copiable ++	1499:6:41084:41099	20380	0	True				
ANR	22010	PostIncDecOperationExpression	ptrn_copiable ++		20380	0					
ANR	22011	Identifier	ptrn_copiable		20380	0					
ANR	22012	IncDec	++		20380	1					
ANR	22013	ExpressionStatement	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )	1500:2:41103:41221	20380	70	True				
ANR	22014	AssignmentExpression	chars_read -= ( 1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( ) )		20380	0		-=			
ANR	22015	Identifier	chars_read		20380	0					
ANR	22016	AndExpression	1 < chars_read && p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		20380	1		&&			
ANR	22017	RelationalExpression	1 < chars_read		20380	0		<			
ANR	22018	PrimaryExpression	1		20380	0					
ANR	22019	Identifier	chars_read		20380	1					
ANR	22020	AndExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines ) && incomplete_line ( )		20380	1		&&			
ANR	22021	EqualityExpression	p_end == ( repl_beginning ? p_max : p_ptrn_lines )		20380	0		==			
ANR	22022	Identifier	p_end		20380	0					
ANR	22023	ConditionalExpression	repl_beginning ? p_max : p_ptrn_lines		20380	1					
ANR	22024	Condition	repl_beginning		20380	0					
ANR	22025	Identifier	repl_beginning		20380	0					
ANR	22026	Identifier	p_max		20380	1					
ANR	22027	Identifier	p_ptrn_lines		20380	2					
ANR	22028	CallExpression	incomplete_line ( )		20380	1					
ANR	22029	Callee	incomplete_line		20380	0					
ANR	22030	Identifier	incomplete_line		20380	0					
ANR	22031	ArgumentList			20380	1					
ANR	22032	ExpressionStatement	p_len [ p_end ] = chars_read	1504:2:41225:41250	20380	71	True				
ANR	22033	AssignmentExpression	p_len [ p_end ] = chars_read		20380	0		=			
ANR	22034	ArrayIndexing	p_len [ p_end ]		20380	0					
ANR	22035	Identifier	p_len		20380	0					
ANR	22036	Identifier	p_end		20380	1					
ANR	22037	Identifier	chars_read		20380	1					
ANR	22038	ExpressionStatement	"p_line [ p_end ] = savebuf ( s , chars_read )"	1505:2:41254:41293	20380	72	True				
ANR	22039	AssignmentExpression	"p_line [ p_end ] = savebuf ( s , chars_read )"		20380	0		=			
ANR	22040	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	22041	Identifier	p_line		20380	0					
ANR	22042	Identifier	p_end		20380	1					
ANR	22043	CallExpression	"savebuf ( s , chars_read )"		20380	1					
ANR	22044	Callee	savebuf		20380	0					
ANR	22045	Identifier	savebuf		20380	0					
ANR	22046	ArgumentList	s		20380	1					
ANR	22047	Argument	s		20380	0					
ANR	22048	Identifier	s		20380	0					
ANR	22049	Argument	chars_read		20380	1					
ANR	22050	Identifier	chars_read		20380	0					
ANR	22051	IfStatement	if ( chars_read && ! p_line [ p_end ] )		20380	73					
ANR	22052	Condition	chars_read && ! p_line [ p_end ]	1506:6:41301:41329	20380	0	True				
ANR	22053	AndExpression	chars_read && ! p_line [ p_end ]		20380	0		&&			
ANR	22054	Identifier	chars_read		20380	0					
ANR	22055	UnaryOperationExpression	! p_line [ p_end ]		20380	1					
ANR	22056	UnaryOperator	!		20380	0					
ANR	22057	ArrayIndexing	p_line [ p_end ]		20380	1					
ANR	22058	Identifier	p_line		20380	0					
ANR	22059	Identifier	p_end		20380	1					
ANR	22060	CompoundStatement		336:37:9027:9027	20380	1					
ANR	22061	ExpressionStatement	p_end --	1507:6:41340:41347	20380	0	True				
ANR	22062	PostIncDecOperationExpression	p_end --		20380	0					
ANR	22063	Identifier	p_end		20380	0					
ANR	22064	IncDec	--		20380	1					
ANR	22065	ReturnStatement	return - 1 ;	1508:6:41355:41364	20380	1	True				
ANR	22066	UnaryOperationExpression	- 1		20380	0					
ANR	22067	UnaryOperator	-		20380	0					
ANR	22068	PrimaryExpression	1		20380	1					
ANR	22069	BreakStatement	break ;	1510:2:41372:41377	20380	74	True				
ANR	22070	Label	default :	1511:5:41384:41391	20380	75	True				
ANR	22071	Identifier	default		20380	0					
ANR	22072	IfStatement	if ( repl_beginning && repl_could_be_missing )		20380	76					
ANR	22073	Condition	repl_beginning && repl_could_be_missing	1512:6:41399:41437	20380	0	True				
ANR	22074	AndExpression	repl_beginning && repl_could_be_missing		20380	0		&&			
ANR	22075	Identifier	repl_beginning		20380	0					
ANR	22076	Identifier	repl_could_be_missing		20380	1					
ANR	22077	CompoundStatement		342:47:9135:9135	20380	1					
ANR	22078	ExpressionStatement	repl_missing = true	1513:6:41448:41467	20380	0	True				
ANR	22079	AssignmentExpression	repl_missing = true		20380	0		=			
ANR	22080	Identifier	repl_missing		20380	0					
ANR	22081	Identifier	true		20380	1					
ANR	22082	GotoStatement	goto hunk_done ;	1514:6:41475:41489	20380	1	True				
ANR	22083	Identifier	hunk_done		20380	0					
ANR	22084	ExpressionStatement	malformed ( )	1516:2:41497:41509	20380	77	True				
ANR	22085	CallExpression	malformed ( )		20380	0					
ANR	22086	Callee	malformed		20380	0					
ANR	22087	Identifier	malformed		20380	0					
ANR	22088	ArgumentList			20380	1					
ANR	22089	Label	hunk_done :	1520:4:41526:41535	20380	26	True				
ANR	22090	Identifier	hunk_done		20380	0					
ANR	22091	IfStatement	if ( p_end >= 0 && ! repl_beginning )		20380	27					
ANR	22092	Condition	p_end >= 0 && ! repl_beginning	1521:5:41542:41569	20380	0	True				
ANR	22093	AndExpression	p_end >= 0 && ! repl_beginning		20380	0		&&			
ANR	22094	RelationalExpression	p_end >= 0		20380	0		>=			
ANR	22095	Identifier	p_end		20380	0					
ANR	22096	PrimaryExpression	0		20380	1					
ANR	22097	UnaryOperationExpression	! repl_beginning		20380	1					
ANR	22098	UnaryOperator	!		20380	0					
ANR	22099	Identifier	repl_beginning		20380	1					
ANR	22100	ExpressionStatement	"fatal ( ""no '---' found in patch at line %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) )"	1522:3:41575:41665	20380	1	True				
ANR	22101	CallExpression	"fatal ( ""no '---' found in patch at line %s"" , format_linenum ( numbuf0 , pch_hunk_beg ( ) ) )"		20380	0					
ANR	22102	Callee	fatal		20380	0					
ANR	22103	Identifier	fatal		20380	0					
ANR	22104	ArgumentList	"""no '---' found in patch at line %s"""		20380	1					
ANR	22105	Argument	"""no '---' found in patch at line %s"""		20380	0					
ANR	22106	PrimaryExpression	"""no '---' found in patch at line %s"""		20380	0					
ANR	22107	Argument	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		20380	1					
ANR	22108	CallExpression	"format_linenum ( numbuf0 , pch_hunk_beg ( ) )"		20380	0					
ANR	22109	Callee	format_linenum		20380	0					
ANR	22110	Identifier	format_linenum		20380	0					
ANR	22111	ArgumentList	numbuf0		20380	1					
ANR	22112	Argument	numbuf0		20380	0					
ANR	22113	Identifier	numbuf0		20380	0					
ANR	22114	Argument	pch_hunk_beg ( )		20380	1					
ANR	22115	CallExpression	pch_hunk_beg ( )		20380	0					
ANR	22116	Callee	pch_hunk_beg		20380	0					
ANR	22117	Identifier	pch_hunk_beg		20380	0					
ANR	22118	ArgumentList			20380	1					
ANR	22119	IfStatement	if ( repl_missing )		20380	28					
ANR	22120	Condition	repl_missing	1525:5:41673:41684	20380	0	True				
ANR	22121	Identifier	repl_missing		20380	0					
ANR	22122	CompoundStatement		355:19:9382:9382	20380	1					
ANR	22123	ExpressionStatement	p_input_line = repl_patch_line	1528:5:41741:41771	20380	0	True				
ANR	22124	AssignmentExpression	p_input_line = repl_patch_line		20380	0		=			
ANR	22125	Identifier	p_input_line		20380	0					
ANR	22126	Identifier	repl_patch_line		20380	1					
ANR	22127	ExpressionStatement	context = repl_context	1529:5:41778:41800	20380	1	True				
ANR	22128	AssignmentExpression	context = repl_context		20380	0		=			
ANR	22129	Identifier	context		20380	0					
ANR	22130	Identifier	repl_context		20380	1					
ANR	22131	ForStatement	for ( p_end -- ; p_end > repl_beginning ; p_end -- )		20380	2					
ANR	22132	ForInit	p_end -- ;	1530:10:41812:41819	20380	0	True				
ANR	22133	PostIncDecOperationExpression	p_end --		20380	0					
ANR	22134	Identifier	p_end		20380	0					
ANR	22135	IncDec	--		20380	1					
ANR	22136	Condition	p_end > repl_beginning	1530:19:41821:41842	20380	1	True				
ANR	22137	RelationalExpression	p_end > repl_beginning		20380	0		>			
ANR	22138	Identifier	p_end		20380	0					
ANR	22139	Identifier	repl_beginning		20380	1					
ANR	22140	PostIncDecOperationExpression	p_end --	1530:43:41845:41851	20380	2	True				
ANR	22141	Identifier	p_end		20380	0					
ANR	22142	IncDec	--		20380	1					
ANR	22143	ExpressionStatement	free ( p_line [ p_end ] )	1531:2:41856:41875	20380	3	True				
ANR	22144	CallExpression	free ( p_line [ p_end ] )		20380	0					
ANR	22145	Callee	free		20380	0					
ANR	22146	Identifier	free		20380	0					
ANR	22147	ArgumentList	p_line [ p_end ]		20380	1					
ANR	22148	Argument	p_line [ p_end ]		20380	0					
ANR	22149	ArrayIndexing	p_line [ p_end ]		20380	0					
ANR	22150	Identifier	p_line		20380	0					
ANR	22151	Identifier	p_end		20380	1					
ANR	22152	ExpressionStatement	"Fseek ( pfp , repl_backtrack_position , SEEK_SET )"	1532:5:41882:41928	20380	3	True				
ANR	22153	CallExpression	"Fseek ( pfp , repl_backtrack_position , SEEK_SET )"		20380	0					
ANR	22154	Callee	Fseek		20380	0					
ANR	22155	Identifier	Fseek		20380	0					
ANR	22156	ArgumentList	pfp		20380	1					
ANR	22157	Argument	pfp		20380	0					
ANR	22158	Identifier	pfp		20380	0					
ANR	22159	Argument	repl_backtrack_position		20380	1					
ANR	22160	Identifier	repl_backtrack_position		20380	0					
ANR	22161	Argument	SEEK_SET		20380	2					
ANR	22162	Identifier	SEEK_SET		20380	0					
ANR	22163	ExpressionStatement	fillsrc = 1	1536:5:42052:42063	20380	4	True				
ANR	22164	AssignmentExpression	fillsrc = 1		20380	0		=			
ANR	22165	Identifier	fillsrc		20380	0					
ANR	22166	PrimaryExpression	1		20380	1					
ANR	22167	ExpressionStatement	filldst = repl_beginning + 1	1537:5:42070:42096	20380	5	True				
ANR	22168	AssignmentExpression	filldst = repl_beginning + 1		20380	0		=			
ANR	22169	Identifier	filldst		20380	0					
ANR	22170	AdditiveExpression	repl_beginning + 1		20380	1		+			
ANR	22171	Identifier	repl_beginning		20380	0					
ANR	22172	PrimaryExpression	1		20380	1					
ANR	22173	ExpressionStatement	fillcnt = p_repl_lines	1538:5:42103:42125	20380	6	True				
ANR	22174	AssignmentExpression	fillcnt = p_repl_lines		20380	0		=			
ANR	22175	Identifier	fillcnt		20380	0					
ANR	22176	Identifier	p_repl_lines		20380	1					
ANR	22177	ExpressionStatement	p_end = p_max	1539:5:42132:42145	20380	7	True				
ANR	22178	AssignmentExpression	p_end = p_max		20380	0		=			
ANR	22179	Identifier	p_end		20380	0					
ANR	22180	Identifier	p_max		20380	1					
ANR	22181	ElseStatement	else		20380	0					
ANR	22182	IfStatement	if ( ! ptrn_missing && ptrn_copiable != repl_copiable )		20380	0					
ANR	22183	Condition	! ptrn_missing && ptrn_copiable != repl_copiable	1541:10:42160:42207	20380	0	True				
ANR	22184	AndExpression	! ptrn_missing && ptrn_copiable != repl_copiable		20380	0		&&			
ANR	22185	UnaryOperationExpression	! ptrn_missing		20380	0					
ANR	22186	UnaryOperator	!		20380	0					
ANR	22187	Identifier	ptrn_missing		20380	1					
ANR	22188	EqualityExpression	ptrn_copiable != repl_copiable		20380	1		!=			
ANR	22189	Identifier	ptrn_copiable		20380	0					
ANR	22190	Identifier	repl_copiable		20380	1					
ANR	22191	ExpressionStatement	"fatal ( ""context mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1542:3:42213:42298	20380	1	True				
ANR	22192	CallExpression	"fatal ( ""context mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		20380	0					
ANR	22193	Callee	fatal		20380	0					
ANR	22194	Identifier	fatal		20380	0					
ANR	22195	ArgumentList	"""context mangled in hunk at line %s"""		20380	1					
ANR	22196	Argument	"""context mangled in hunk at line %s"""		20380	0					
ANR	22197	PrimaryExpression	"""context mangled in hunk at line %s"""		20380	0					
ANR	22198	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	1					
ANR	22199	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	0					
ANR	22200	Callee	format_linenum		20380	0					
ANR	22201	Identifier	format_linenum		20380	0					
ANR	22202	ArgumentList	numbuf0		20380	1					
ANR	22203	Argument	numbuf0		20380	0					
ANR	22204	Identifier	numbuf0		20380	0					
ANR	22205	Argument	p_hunk_beg		20380	1					
ANR	22206	Identifier	p_hunk_beg		20380	0					
ANR	22207	ElseStatement	else		20380	0					
ANR	22208	IfStatement	if ( ! some_context && fillcnt == 1 )		20380	0					
ANR	22209	Condition	! some_context && fillcnt == 1	1544:10:42310:42338	20380	0	True				
ANR	22210	AndExpression	! some_context && fillcnt == 1		20380	0		&&			
ANR	22211	UnaryOperationExpression	! some_context		20380	0					
ANR	22212	UnaryOperator	!		20380	0					
ANR	22213	Identifier	some_context		20380	1					
ANR	22214	EqualityExpression	fillcnt == 1		20380	1		==			
ANR	22215	Identifier	fillcnt		20380	0					
ANR	22216	PrimaryExpression	1		20380	1					
ANR	22217	CompoundStatement		374:41:10036:10036	20380	1					
ANR	22218	WhileStatement	while ( filldst < p_end )		20380	0					
ANR	22219	Condition	filldst < p_end	1547:12:42469:42483	20380	0	True				
ANR	22220	RelationalExpression	filldst < p_end		20380	0		<			
ANR	22221	Identifier	filldst		20380	0					
ANR	22222	Identifier	p_end		20380	1					
ANR	22223	CompoundStatement		377:29:10181:10181	20380	1					
ANR	22224	ExpressionStatement	p_line [ filldst ] = p_line [ filldst + 1 ]	1548:2:42490:42525	20380	0	True				
ANR	22225	AssignmentExpression	p_line [ filldst ] = p_line [ filldst + 1 ]		20380	0		=			
ANR	22226	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	22227	Identifier	p_line		20380	0					
ANR	22228	Identifier	filldst		20380	1					
ANR	22229	ArrayIndexing	p_line [ filldst + 1 ]		20380	1					
ANR	22230	Identifier	p_line		20380	0					
ANR	22231	AdditiveExpression	filldst + 1		20380	1		+			
ANR	22232	Identifier	filldst		20380	0					
ANR	22233	PrimaryExpression	1		20380	1					
ANR	22234	ExpressionStatement	p_Char [ filldst ] = p_Char [ filldst + 1 ]	1549:2:42529:42564	20380	1	True				
ANR	22235	AssignmentExpression	p_Char [ filldst ] = p_Char [ filldst + 1 ]		20380	0		=			
ANR	22236	ArrayIndexing	p_Char [ filldst ]		20380	0					
ANR	22237	Identifier	p_Char		20380	0					
ANR	22238	Identifier	filldst		20380	1					
ANR	22239	ArrayIndexing	p_Char [ filldst + 1 ]		20380	1					
ANR	22240	Identifier	p_Char		20380	0					
ANR	22241	AdditiveExpression	filldst + 1		20380	1		+			
ANR	22242	Identifier	filldst		20380	0					
ANR	22243	PrimaryExpression	1		20380	1					
ANR	22244	ExpressionStatement	p_len [ filldst ] = p_len [ filldst + 1 ]	1550:2:42568:42601	20380	2	True				
ANR	22245	AssignmentExpression	p_len [ filldst ] = p_len [ filldst + 1 ]		20380	0		=			
ANR	22246	ArrayIndexing	p_len [ filldst ]		20380	0					
ANR	22247	Identifier	p_len		20380	0					
ANR	22248	Identifier	filldst		20380	1					
ANR	22249	ArrayIndexing	p_len [ filldst + 1 ]		20380	1					
ANR	22250	Identifier	p_len		20380	0					
ANR	22251	AdditiveExpression	filldst + 1		20380	1		+			
ANR	22252	Identifier	filldst		20380	0					
ANR	22253	PrimaryExpression	1		20380	1					
ANR	22254	ExpressionStatement	filldst ++	1551:2:42605:42614	20380	3	True				
ANR	22255	PostIncDecOperationExpression	filldst ++		20380	0					
ANR	22256	Identifier	filldst		20380	0					
ANR	22257	IncDec	++		20380	1					
ANR	22258	ExpressionStatement	repl_beginning --	1554:5:42634:42650	20380	1	True				
ANR	22259	PostIncDecOperationExpression	repl_beginning --		20380	0					
ANR	22260	Identifier	repl_beginning		20380	0					
ANR	22261	IncDec	--		20380	1					
ANR	22262	ExpressionStatement	p_end --	1556:5:42701:42708	20380	2	True				
ANR	22263	PostIncDecOperationExpression	p_end --		20380	0					
ANR	22264	Identifier	p_end		20380	0					
ANR	22265	IncDec	--		20380	1					
ANR	22266	ExpressionStatement	p_first ++	1557:5:42715:42724	20380	3	True				
ANR	22267	PostIncDecOperationExpression	p_first ++		20380	0					
ANR	22268	Identifier	p_first		20380	0					
ANR	22269	IncDec	++		20380	1					
ANR	22270	ExpressionStatement	fillcnt = 0	1558:5:42768:42779	20380	4	True				
ANR	22271	AssignmentExpression	fillcnt = 0		20380	0		=			
ANR	22272	Identifier	fillcnt		20380	0					
ANR	22273	PrimaryExpression	0		20380	1					
ANR	22274	ExpressionStatement	p_ptrn_lines = 0	1559:5:42786:42802	20380	5	True				
ANR	22275	AssignmentExpression	p_ptrn_lines = 0		20380	0		=			
ANR	22276	Identifier	p_ptrn_lines		20380	0					
ANR	22277	PrimaryExpression	0		20380	1					
ANR	22278	ExpressionStatement	p_prefix_context = ( ( repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context ) ) ? ptrn_prefix_context : repl_prefix_context )	1562:1:42809:42997	20380	29	True				
ANR	22279	AssignmentExpression	p_prefix_context = ( ( repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context ) ) ? ptrn_prefix_context : repl_prefix_context )		20380	0		=			
ANR	22280	Identifier	p_prefix_context		20380	0					
ANR	22281	ConditionalExpression	( repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context ) ) ? ptrn_prefix_context : repl_prefix_context		20380	1					
ANR	22282	Condition	repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context )		20380	0					
ANR	22283	OrExpression	repl_prefix_context == - 1 || ( ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context )		20380	0		||			
ANR	22284	EqualityExpression	repl_prefix_context == - 1		20380	0		==			
ANR	22285	Identifier	repl_prefix_context		20380	0					
ANR	22286	UnaryOperationExpression	- 1		20380	1					
ANR	22287	UnaryOperator	-		20380	0					
ANR	22288	PrimaryExpression	1		20380	1					
ANR	22289	AndExpression	ptrn_prefix_context != - 1 && ptrn_prefix_context < repl_prefix_context		20380	1		&&			
ANR	22290	EqualityExpression	ptrn_prefix_context != - 1		20380	0		!=			
ANR	22291	Identifier	ptrn_prefix_context		20380	0					
ANR	22292	UnaryOperationExpression	- 1		20380	1					
ANR	22293	UnaryOperator	-		20380	0					
ANR	22294	PrimaryExpression	1		20380	1					
ANR	22295	RelationalExpression	ptrn_prefix_context < repl_prefix_context		20380	1		<			
ANR	22296	Identifier	ptrn_prefix_context		20380	0					
ANR	22297	Identifier	repl_prefix_context		20380	1					
ANR	22298	Identifier	ptrn_prefix_context		20380	1					
ANR	22299	Identifier	repl_prefix_context		20380	2					
ANR	22300	ExpressionStatement	p_suffix_context = ( ( ptrn_suffix_context != - 1 && ptrn_suffix_context < context ) ? ptrn_suffix_context : context )	1566:1:43000:43128	20380	30	True				
ANR	22301	AssignmentExpression	p_suffix_context = ( ( ptrn_suffix_context != - 1 && ptrn_suffix_context < context ) ? ptrn_suffix_context : context )		20380	0		=			
ANR	22302	Identifier	p_suffix_context		20380	0					
ANR	22303	ConditionalExpression	( ptrn_suffix_context != - 1 && ptrn_suffix_context < context ) ? ptrn_suffix_context : context		20380	1					
ANR	22304	Condition	ptrn_suffix_context != - 1 && ptrn_suffix_context < context		20380	0					
ANR	22305	AndExpression	ptrn_suffix_context != - 1 && ptrn_suffix_context < context		20380	0		&&			
ANR	22306	EqualityExpression	ptrn_suffix_context != - 1		20380	0		!=			
ANR	22307	Identifier	ptrn_suffix_context		20380	0					
ANR	22308	UnaryOperationExpression	- 1		20380	1					
ANR	22309	UnaryOperator	-		20380	0					
ANR	22310	PrimaryExpression	1		20380	1					
ANR	22311	RelationalExpression	ptrn_suffix_context < context		20380	1		<			
ANR	22312	Identifier	ptrn_suffix_context		20380	0					
ANR	22313	Identifier	context		20380	1					
ANR	22314	Identifier	ptrn_suffix_context		20380	1					
ANR	22315	Identifier	context		20380	2					
ANR	22316	IfStatement	if ( p_prefix_context == - 1 || p_suffix_context == - 1 )		20380	31					
ANR	22317	Condition	p_prefix_context == - 1 || p_suffix_context == - 1	1569:5:43135:43182	20380	0	True				
ANR	22318	OrExpression	p_prefix_context == - 1 || p_suffix_context == - 1		20380	0		||			
ANR	22319	EqualityExpression	p_prefix_context == - 1		20380	0		==			
ANR	22320	Identifier	p_prefix_context		20380	0					
ANR	22321	UnaryOperationExpression	- 1		20380	1					
ANR	22322	UnaryOperator	-		20380	0					
ANR	22323	PrimaryExpression	1		20380	1					
ANR	22324	EqualityExpression	p_suffix_context == - 1		20380	1		==			
ANR	22325	Identifier	p_suffix_context		20380	0					
ANR	22326	UnaryOperationExpression	- 1		20380	1					
ANR	22327	UnaryOperator	-		20380	0					
ANR	22328	PrimaryExpression	1		20380	1					
ANR	22329	ExpressionStatement	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1570:5:43190:43302	20380	1	True				
ANR	22330	CallExpression	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		20380	0					
ANR	22331	Callee	fatal		20380	0					
ANR	22332	Identifier	fatal		20380	0					
ANR	22333	ArgumentList	"""replacement text or line numbers mangled in hunk at line %s"""		20380	1					
ANR	22334	Argument	"""replacement text or line numbers mangled in hunk at line %s"""		20380	0					
ANR	22335	PrimaryExpression	"""replacement text or line numbers mangled in hunk at line %s"""		20380	0					
ANR	22336	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	1					
ANR	22337	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	0					
ANR	22338	Callee	format_linenum		20380	0					
ANR	22339	Identifier	format_linenum		20380	0					
ANR	22340	ArgumentList	numbuf0		20380	1					
ANR	22341	Argument	numbuf0		20380	0					
ANR	22342	Identifier	numbuf0		20380	0					
ANR	22343	Argument	p_hunk_beg		20380	1					
ANR	22344	Identifier	p_hunk_beg		20380	0					
ANR	22345	IfStatement	if ( difftype == CONTEXT_DIFF && ( fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable ) ) )		20380	32					
ANR	22346	Condition	difftype == CONTEXT_DIFF && ( fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable ) )	1573:5:43310:43431	20380	0	True				
ANR	22347	AndExpression	difftype == CONTEXT_DIFF && ( fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable ) )		20380	0		&&			
ANR	22348	EqualityExpression	difftype == CONTEXT_DIFF		20380	0		==			
ANR	22349	Identifier	difftype		20380	0					
ANR	22350	Identifier	CONTEXT_DIFF		20380	1					
ANR	22351	OrExpression	fillcnt || ( p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable )		20380	1		||			
ANR	22352	Identifier	fillcnt		20380	0					
ANR	22353	AndExpression	p_first > 1 && p_prefix_context + p_suffix_context < ptrn_copiable		20380	1		&&			
ANR	22354	RelationalExpression	p_first > 1		20380	0		>			
ANR	22355	Identifier	p_first		20380	0					
ANR	22356	PrimaryExpression	1		20380	1					
ANR	22357	RelationalExpression	p_prefix_context + p_suffix_context < ptrn_copiable		20380	1		<			
ANR	22358	AdditiveExpression	p_prefix_context + p_suffix_context		20380	0		+			
ANR	22359	Identifier	p_prefix_context		20380	0					
ANR	22360	Identifier	p_suffix_context		20380	1					
ANR	22361	Identifier	ptrn_copiable		20380	1					
ANR	22362	CompoundStatement		406:64:11129:11129	20380	1					
ANR	22363	IfStatement	if ( verbosity == VERBOSE )		20380	0					
ANR	22364	Condition	verbosity == VERBOSE	1577:9:43445:43464	20380	0	True				
ANR	22365	EqualityExpression	verbosity == VERBOSE		20380	0		==			
ANR	22366	Identifier	verbosity		20380	0					
ANR	22367	Identifier	VERBOSE		20380	1					
ANR	22368	ExpressionStatement	"say ( ""%s\\n%s\\n%s\\n"" , ""(Fascinating -- this is really a new-style context diff but without"" , ""the telltale extra asterisks on the *** line that usually indicate"" , ""the new style...)"" )"	1578:2:43469:43651	20380	1	True				
ANR	22369	CallExpression	"say ( ""%s\\n%s\\n%s\\n"" , ""(Fascinating -- this is really a new-style context diff but without"" , ""the telltale extra asterisks on the *** line that usually indicate"" , ""the new style...)"" )"		20380	0					
ANR	22370	Callee	say		20380	0					
ANR	22371	Identifier	say		20380	0					
ANR	22372	ArgumentList	"""%s\\n%s\\n%s\\n"""		20380	1					
ANR	22373	Argument	"""%s\\n%s\\n%s\\n"""		20380	0					
ANR	22374	PrimaryExpression	"""%s\\n%s\\n%s\\n"""		20380	0					
ANR	22375	Argument	"""(Fascinating -- this is really a new-style context diff but without"""		20380	1					
ANR	22376	PrimaryExpression	"""(Fascinating -- this is really a new-style context diff but without"""		20380	0					
ANR	22377	Argument	"""the telltale extra asterisks on the *** line that usually indicate"""		20380	2					
ANR	22378	PrimaryExpression	"""the telltale extra asterisks on the *** line that usually indicate"""		20380	0					
ANR	22379	Argument	"""the new style...)"""		20380	3					
ANR	22380	PrimaryExpression	"""the new style...)"""		20380	0					
ANR	22381	ExpressionStatement	diff_type = difftype = NEW_CONTEXT_DIFF	1582:5:43658:43697	20380	1	True				
ANR	22382	AssignmentExpression	diff_type = difftype = NEW_CONTEXT_DIFF		20380	0		=			
ANR	22383	Identifier	diff_type		20380	0					
ANR	22384	AssignmentExpression	difftype = NEW_CONTEXT_DIFF		20380	1		=			
ANR	22385	Identifier	difftype		20380	0					
ANR	22386	Identifier	NEW_CONTEXT_DIFF		20380	1					
ANR	22387	IfStatement	if ( fillcnt )		20380	33					
ANR	22388	Condition	fillcnt	1586:5:43769:43775	20380	0	True				
ANR	22389	Identifier	fillcnt		20380	0					
ANR	22390	CompoundStatement		416:14:11473:11473	20380	1					
ANR	22391	ExpressionStatement	p_bfake = filldst	1587:5:43785:43802	20380	0	True				
ANR	22392	AssignmentExpression	p_bfake = filldst		20380	0		=			
ANR	22393	Identifier	p_bfake		20380	0					
ANR	22394	Identifier	filldst		20380	1					
ANR	22395	ExpressionStatement	p_efake = filldst + fillcnt - 1	1588:5:43845:43876	20380	1	True				
ANR	22396	AssignmentExpression	p_efake = filldst + fillcnt - 1		20380	0		=			
ANR	22397	Identifier	p_efake		20380	0					
ANR	22398	AdditiveExpression	filldst + fillcnt - 1		20380	1		+			
ANR	22399	Identifier	filldst		20380	0					
ANR	22400	AdditiveExpression	fillcnt - 1		20380	1		-			
ANR	22401	Identifier	fillcnt		20380	0					
ANR	22402	PrimaryExpression	1		20380	1					
ANR	22403	WhileStatement	while ( fillcnt -- > 0 )		20380	2					
ANR	22404	Condition	fillcnt -- > 0	1589:12:43890:43902	20380	0	True				
ANR	22405	RelationalExpression	fillcnt -- > 0		20380	0		>			
ANR	22406	PostIncDecOperationExpression	fillcnt --		20380	0					
ANR	22407	Identifier	fillcnt		20380	0					
ANR	22408	IncDec	--		20380	1					
ANR	22409	PrimaryExpression	0		20380	1					
ANR	22410	CompoundStatement		419:27:11600:11600	20380	1					
ANR	22411	WhileStatement	while ( fillsrc <= p_end && fillsrc != repl_beginning && p_Char [ fillsrc ] != ' ' )		20380	0					
ANR	22412	Condition	fillsrc <= p_end && fillsrc != repl_beginning && p_Char [ fillsrc ] != ' '	1590:9:43916:43995	20380	0	True				
ANR	22413	AndExpression	fillsrc <= p_end && fillsrc != repl_beginning && p_Char [ fillsrc ] != ' '		20380	0		&&			
ANR	22414	RelationalExpression	fillsrc <= p_end		20380	0		<=			
ANR	22415	Identifier	fillsrc		20380	0					
ANR	22416	Identifier	p_end		20380	1					
ANR	22417	AndExpression	fillsrc != repl_beginning && p_Char [ fillsrc ] != ' '		20380	1		&&			
ANR	22418	EqualityExpression	fillsrc != repl_beginning		20380	0		!=			
ANR	22419	Identifier	fillsrc		20380	0					
ANR	22420	Identifier	repl_beginning		20380	1					
ANR	22421	EqualityExpression	p_Char [ fillsrc ] != ' '		20380	1		!=			
ANR	22422	ArrayIndexing	p_Char [ fillsrc ]		20380	0					
ANR	22423	Identifier	p_Char		20380	0					
ANR	22424	Identifier	fillsrc		20380	1					
ANR	22425	PrimaryExpression	' '		20380	1					
ANR	22426	ExpressionStatement	fillsrc ++	1592:6:44004:44013	20380	1	True				
ANR	22427	PostIncDecOperationExpression	fillsrc ++		20380	0					
ANR	22428	Identifier	fillsrc		20380	0					
ANR	22429	IncDec	++		20380	1					
ANR	22430	IfStatement	if ( p_end < fillsrc || fillsrc == repl_beginning )		20380	1					
ANR	22431	Condition	p_end < fillsrc || fillsrc == repl_beginning	1593:6:44021:44064	20380	0	True				
ANR	22432	OrExpression	p_end < fillsrc || fillsrc == repl_beginning		20380	0		||			
ANR	22433	RelationalExpression	p_end < fillsrc		20380	0		<			
ANR	22434	Identifier	p_end		20380	0					
ANR	22435	Identifier	fillsrc		20380	1					
ANR	22436	EqualityExpression	fillsrc == repl_beginning		20380	1		==			
ANR	22437	Identifier	fillsrc		20380	0					
ANR	22438	Identifier	repl_beginning		20380	1					
ANR	22439	CompoundStatement		424:4:11766:11766	20380	1					
ANR	22440	ExpressionStatement	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1595:6:44079:44192	20380	0	True				
ANR	22441	CallExpression	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		20380	0					
ANR	22442	Callee	fatal		20380	0					
ANR	22443	Identifier	fatal		20380	0					
ANR	22444	ArgumentList	"""replacement text or line numbers mangled in hunk at line %s"""		20380	1					
ANR	22445	Argument	"""replacement text or line numbers mangled in hunk at line %s"""		20380	0					
ANR	22446	PrimaryExpression	"""replacement text or line numbers mangled in hunk at line %s"""		20380	0					
ANR	22447	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	1					
ANR	22448	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	0					
ANR	22449	Callee	format_linenum		20380	0					
ANR	22450	Identifier	format_linenum		20380	0					
ANR	22451	ArgumentList	numbuf0		20380	1					
ANR	22452	Argument	numbuf0		20380	0					
ANR	22453	Identifier	numbuf0		20380	0					
ANR	22454	Argument	p_hunk_beg		20380	1					
ANR	22455	Identifier	p_hunk_beg		20380	0					
ANR	22456	ExpressionStatement	p_line [ filldst ] = p_line [ fillsrc ]	1598:2:44202:44235	20380	2	True				
ANR	22457	AssignmentExpression	p_line [ filldst ] = p_line [ fillsrc ]		20380	0		=			
ANR	22458	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	22459	Identifier	p_line		20380	0					
ANR	22460	Identifier	filldst		20380	1					
ANR	22461	ArrayIndexing	p_line [ fillsrc ]		20380	1					
ANR	22462	Identifier	p_line		20380	0					
ANR	22463	Identifier	fillsrc		20380	1					
ANR	22464	ExpressionStatement	p_Char [ filldst ] = p_Char [ fillsrc ]	1599:2:44239:44272	20380	3	True				
ANR	22465	AssignmentExpression	p_Char [ filldst ] = p_Char [ fillsrc ]		20380	0		=			
ANR	22466	ArrayIndexing	p_Char [ filldst ]		20380	0					
ANR	22467	Identifier	p_Char		20380	0					
ANR	22468	Identifier	filldst		20380	1					
ANR	22469	ArrayIndexing	p_Char [ fillsrc ]		20380	1					
ANR	22470	Identifier	p_Char		20380	0					
ANR	22471	Identifier	fillsrc		20380	1					
ANR	22472	ExpressionStatement	p_len [ filldst ] = p_len [ fillsrc ]	1600:2:44276:44307	20380	4	True				
ANR	22473	AssignmentExpression	p_len [ filldst ] = p_len [ fillsrc ]		20380	0		=			
ANR	22474	ArrayIndexing	p_len [ filldst ]		20380	0					
ANR	22475	Identifier	p_len		20380	0					
ANR	22476	Identifier	filldst		20380	1					
ANR	22477	ArrayIndexing	p_len [ fillsrc ]		20380	1					
ANR	22478	Identifier	p_len		20380	0					
ANR	22479	Identifier	fillsrc		20380	1					
ANR	22480	ExpressionStatement	fillsrc ++	1601:2:44311:44320	20380	5	True				
ANR	22481	PostIncDecOperationExpression	fillsrc ++		20380	0					
ANR	22482	Identifier	fillsrc		20380	0					
ANR	22483	IncDec	++		20380	1					
ANR	22484	ExpressionStatement	filldst ++	1601:13:44322:44331	20380	6	True				
ANR	22485	PostIncDecOperationExpression	filldst ++		20380	0					
ANR	22486	Identifier	filldst		20380	0					
ANR	22487	IncDec	++		20380	1					
ANR	22488	WhileStatement	while ( fillsrc <= p_end && fillsrc != repl_beginning )		20380	3					
ANR	22489	Condition	fillsrc <= p_end && fillsrc != repl_beginning	1603:12:44352:44396	20380	0	True				
ANR	22490	AndExpression	fillsrc <= p_end && fillsrc != repl_beginning		20380	0		&&			
ANR	22491	RelationalExpression	fillsrc <= p_end		20380	0		<=			
ANR	22492	Identifier	fillsrc		20380	0					
ANR	22493	Identifier	p_end		20380	1					
ANR	22494	EqualityExpression	fillsrc != repl_beginning		20380	1		!=			
ANR	22495	Identifier	fillsrc		20380	0					
ANR	22496	Identifier	repl_beginning		20380	1					
ANR	22497	CompoundStatement		434:7:12101:12101	20380	1					
ANR	22498	IfStatement	if ( p_Char [ fillsrc ] == ' ' )		20380	0					
ANR	22499	Condition	p_Char [ fillsrc ] == ' '	1605:6:44414:44435	20380	0	True				
ANR	22500	EqualityExpression	p_Char [ fillsrc ] == ' '		20380	0		==			
ANR	22501	ArrayIndexing	p_Char [ fillsrc ]		20380	0					
ANR	22502	Identifier	p_Char		20380	0					
ANR	22503	Identifier	fillsrc		20380	1					
ANR	22504	PrimaryExpression	' '		20380	1					
ANR	22505	ExpressionStatement	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"	1606:4:44442:44553	20380	1	True				
ANR	22506	CallExpression	"fatal ( ""replacement text or line numbers mangled in hunk at line %s"" , format_linenum ( numbuf0 , p_hunk_beg ) )"		20380	0					
ANR	22507	Callee	fatal		20380	0					
ANR	22508	Identifier	fatal		20380	0					
ANR	22509	ArgumentList	"""replacement text or line numbers mangled in hunk at line %s"""		20380	1					
ANR	22510	Argument	"""replacement text or line numbers mangled in hunk at line %s"""		20380	0					
ANR	22511	PrimaryExpression	"""replacement text or line numbers mangled in hunk at line %s"""		20380	0					
ANR	22512	Argument	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	1					
ANR	22513	CallExpression	"format_linenum ( numbuf0 , p_hunk_beg )"		20380	0					
ANR	22514	Callee	format_linenum		20380	0					
ANR	22515	Identifier	format_linenum		20380	0					
ANR	22516	ArgumentList	numbuf0		20380	1					
ANR	22517	Argument	numbuf0		20380	0					
ANR	22518	Identifier	numbuf0		20380	0					
ANR	22519	Argument	p_hunk_beg		20380	1					
ANR	22520	Identifier	p_hunk_beg		20380	0					
ANR	22521	ExpressionStatement	fillsrc ++	1608:2:44557:44566	20380	1	True				
ANR	22522	PostIncDecOperationExpression	fillsrc ++		20380	0					
ANR	22523	Identifier	fillsrc		20380	0					
ANR	22524	IncDec	++		20380	1					
ANR	22525	IfStatement	if ( debug & 64 )		20380	4					
ANR	22526	Condition	debug & 64	1610:9:44586:44595	20380	0	True				
ANR	22527	BitAndExpression	debug & 64		20380	0		&			
ANR	22528	Identifier	debug		20380	0					
ANR	22529	PrimaryExpression	64		20380	1					
ANR	22530	ExpressionStatement	"printf ( ""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"" , format_linenum ( numbuf0 , fillsrc ) , format_linenum ( numbuf1 , filldst ) , format_linenum ( numbuf2 , repl_beginning ) , format_linenum ( numbuf3 , p_end + 1 ) )"	1611:7:44605:44836	20380	1	True				
ANR	22531	CallExpression	"printf ( ""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"" , format_linenum ( numbuf0 , fillsrc ) , format_linenum ( numbuf1 , filldst ) , format_linenum ( numbuf2 , repl_beginning ) , format_linenum ( numbuf3 , p_end + 1 ) )"		20380	0					
ANR	22532	Callee	printf		20380	0					
ANR	22533	Identifier	printf		20380	0					
ANR	22534	ArgumentList	"""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"""		20380	1					
ANR	22535	Argument	"""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"""		20380	0					
ANR	22536	PrimaryExpression	"""fillsrc %s, filldst %s, rb %s, e+1 %s\\n"""		20380	0					
ANR	22537	Argument	"format_linenum ( numbuf0 , fillsrc )"		20380	1					
ANR	22538	CallExpression	"format_linenum ( numbuf0 , fillsrc )"		20380	0					
ANR	22539	Callee	format_linenum		20380	0					
ANR	22540	Identifier	format_linenum		20380	0					
ANR	22541	ArgumentList	numbuf0		20380	1					
ANR	22542	Argument	numbuf0		20380	0					
ANR	22543	Identifier	numbuf0		20380	0					
ANR	22544	Argument	fillsrc		20380	1					
ANR	22545	Identifier	fillsrc		20380	0					
ANR	22546	Argument	"format_linenum ( numbuf1 , filldst )"		20380	2					
ANR	22547	CallExpression	"format_linenum ( numbuf1 , filldst )"		20380	0					
ANR	22548	Callee	format_linenum		20380	0					
ANR	22549	Identifier	format_linenum		20380	0					
ANR	22550	ArgumentList	numbuf1		20380	1					
ANR	22551	Argument	numbuf1		20380	0					
ANR	22552	Identifier	numbuf1		20380	0					
ANR	22553	Argument	filldst		20380	1					
ANR	22554	Identifier	filldst		20380	0					
ANR	22555	Argument	"format_linenum ( numbuf2 , repl_beginning )"		20380	3					
ANR	22556	CallExpression	"format_linenum ( numbuf2 , repl_beginning )"		20380	0					
ANR	22557	Callee	format_linenum		20380	0					
ANR	22558	Identifier	format_linenum		20380	0					
ANR	22559	ArgumentList	numbuf2		20380	1					
ANR	22560	Argument	numbuf2		20380	0					
ANR	22561	Identifier	numbuf2		20380	0					
ANR	22562	Argument	repl_beginning		20380	1					
ANR	22563	Identifier	repl_beginning		20380	0					
ANR	22564	Argument	"format_linenum ( numbuf3 , p_end + 1 )"		20380	4					
ANR	22565	CallExpression	"format_linenum ( numbuf3 , p_end + 1 )"		20380	0					
ANR	22566	Callee	format_linenum		20380	0					
ANR	22567	Identifier	format_linenum		20380	0					
ANR	22568	ArgumentList	numbuf3		20380	1					
ANR	22569	Argument	numbuf3		20380	0					
ANR	22570	Identifier	numbuf3		20380	0					
ANR	22571	Argument	p_end + 1		20380	1					
ANR	22572	AdditiveExpression	p_end + 1		20380	0		+			
ANR	22573	Identifier	p_end		20380	0					
ANR	22574	PrimaryExpression	1		20380	1					
ANR	22575	ExpressionStatement	assert ( fillsrc == p_end + 1 || fillsrc == repl_beginning )	1616:5:44843:44894	20380	5	True				
ANR	22576	CallExpression	assert ( fillsrc == p_end + 1 || fillsrc == repl_beginning )		20380	0					
ANR	22577	Callee	assert		20380	0					
ANR	22578	Identifier	assert		20380	0					
ANR	22579	ArgumentList	fillsrc == p_end + 1 || fillsrc == repl_beginning		20380	1					
ANR	22580	Argument	fillsrc == p_end + 1 || fillsrc == repl_beginning		20380	0					
ANR	22581	OrExpression	fillsrc == p_end + 1 || fillsrc == repl_beginning		20380	0		||			
ANR	22582	EqualityExpression	fillsrc == p_end + 1		20380	0		==			
ANR	22583	Identifier	fillsrc		20380	0					
ANR	22584	AdditiveExpression	p_end + 1		20380	1		+			
ANR	22585	Identifier	p_end		20380	0					
ANR	22586	PrimaryExpression	1		20380	1					
ANR	22587	EqualityExpression	fillsrc == repl_beginning		20380	1		==			
ANR	22588	Identifier	fillsrc		20380	0					
ANR	22589	Identifier	repl_beginning		20380	1					
ANR	22590	ExpressionStatement	assert ( filldst == p_end + 1 || filldst == repl_beginning )	1617:5:44901:44952	20380	6	True				
ANR	22591	CallExpression	assert ( filldst == p_end + 1 || filldst == repl_beginning )		20380	0					
ANR	22592	Callee	assert		20380	0					
ANR	22593	Identifier	assert		20380	0					
ANR	22594	ArgumentList	filldst == p_end + 1 || filldst == repl_beginning		20380	1					
ANR	22595	Argument	filldst == p_end + 1 || filldst == repl_beginning		20380	0					
ANR	22596	OrExpression	filldst == p_end + 1 || filldst == repl_beginning		20380	0		||			
ANR	22597	EqualityExpression	filldst == p_end + 1		20380	0		==			
ANR	22598	Identifier	filldst		20380	0					
ANR	22599	AdditiveExpression	p_end + 1		20380	1		+			
ANR	22600	Identifier	p_end		20380	0					
ANR	22601	PrimaryExpression	1		20380	1					
ANR	22602	EqualityExpression	filldst == repl_beginning		20380	1		==			
ANR	22603	Identifier	filldst		20380	0					
ANR	22604	Identifier	repl_beginning		20380	1					
ANR	22605	ElseStatement	else		20380	0					
ANR	22606	IfStatement	if ( difftype == UNI_DIFF )		20380	0					
ANR	22607	Condition	difftype == UNI_DIFF	1620:13:44976:44995	20380	0	True				
ANR	22608	EqualityExpression	difftype == UNI_DIFF		20380	0		==			
ANR	22609	Identifier	difftype		20380	0					
ANR	22610	Identifier	UNI_DIFF		20380	1					
ANR	22611	CompoundStatement		454:1:12859:12873	20380	1					
ANR	22612	IdentifierDeclStatement	file_offset line_beginning = file_tell ( pfp ) ;	1621:1:45001:45045	20380	0	True				
ANR	22613	IdentifierDecl	line_beginning = file_tell ( pfp )		20380	0					
ANR	22614	IdentifierDeclType	file_offset		20380	0					
ANR	22615	Identifier	line_beginning		20380	1					
ANR	22616	AssignmentExpression	line_beginning = file_tell ( pfp )		20380	2		=			
ANR	22617	Identifier	line_beginning		20380	0					
ANR	22618	CallExpression	file_tell ( pfp )		20380	1					
ANR	22619	Callee	file_tell		20380	0					
ANR	22620	Identifier	file_tell		20380	0					
ANR	22621	ArgumentList	pfp		20380	1					
ANR	22622	Argument	pfp		20380	0					
ANR	22623	Identifier	pfp		20380	0					
ANR	22624	IdentifierDeclStatement	lin fillsrc ;	1622:1:45084:45095	20380	1	True				
ANR	22625	IdentifierDecl	fillsrc		20380	0					
ANR	22626	IdentifierDeclType	lin		20380	0					
ANR	22627	Identifier	fillsrc		20380	1					
ANR	22628	IdentifierDeclStatement	lin filldst ;	1623:1:45124:45135	20380	2	True				
ANR	22629	IdentifierDecl	filldst		20380	0					
ANR	22630	IdentifierDeclType	lin		20380	0					
ANR	22631	Identifier	filldst		20380	1					
ANR	22632	IdentifierDeclStatement	char ch = '\\0' ;	1624:1:45164:45178	20380	3	True				
ANR	22633	IdentifierDecl	ch = '\\0'		20380	0					
ANR	22634	IdentifierDeclType	char		20380	0					
ANR	22635	Identifier	ch		20380	1					
ANR	22636	AssignmentExpression	ch = '\\0'		20380	2		=			
ANR	22637	Identifier	ch		20380	0					
ANR	22638	PrimaryExpression	'\\0'		20380	1					
ANR	22639	ExpressionStatement	chars_read = get_line ( )	1626:1:45182:45206	20380	4	True				
ANR	22640	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	22641	Identifier	chars_read		20380	0					
ANR	22642	CallExpression	get_line ( )		20380	1					
ANR	22643	Callee	get_line		20380	0					
ANR	22644	Identifier	get_line		20380	0					
ANR	22645	ArgumentList			20380	1					
ANR	22646	IfStatement	"if ( chars_read == ( size_t ) - 1 || chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0 )"		20380	5					
ANR	22647	Condition	"chars_read == ( size_t ) - 1 || chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0"	1627:5:45213:45299	20380	0	True				
ANR	22648	OrExpression	"chars_read == ( size_t ) - 1 || chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0"		20380	0		||			
ANR	22649	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	22650	Identifier	chars_read		20380	0					
ANR	22651	CastExpression	( size_t ) - 1		20380	1					
ANR	22652	CastTarget	size_t		20380	0					
ANR	22653	UnaryOperationExpression	- 1		20380	1					
ANR	22654	UnaryOperator	-		20380	0					
ANR	22655	PrimaryExpression	1		20380	1					
ANR	22656	OrExpression	"chars_read <= 4 || strncmp ( buf , ""@@ -"" , 4 ) != 0"		20380	1		||			
ANR	22657	RelationalExpression	chars_read <= 4		20380	0		<=			
ANR	22658	Identifier	chars_read		20380	0					
ANR	22659	PrimaryExpression	4		20380	1					
ANR	22660	EqualityExpression	"strncmp ( buf , ""@@ -"" , 4 ) != 0"		20380	1		!=			
ANR	22661	CallExpression	"strncmp ( buf , ""@@ -"" , 4 )"		20380	0					
ANR	22662	Callee	strncmp		20380	0					
ANR	22663	Identifier	strncmp		20380	0					
ANR	22664	ArgumentList	buf		20380	1					
ANR	22665	Argument	buf		20380	0					
ANR	22666	Identifier	buf		20380	0					
ANR	22667	Argument	"""@@ -"""		20380	1					
ANR	22668	PrimaryExpression	"""@@ -"""		20380	0					
ANR	22669	Argument	4		20380	2					
ANR	22670	PrimaryExpression	4		20380	0					
ANR	22671	PrimaryExpression	0		20380	1					
ANR	22672	CompoundStatement		459:39:12997:12997	20380	1					
ANR	22673	ExpressionStatement	"next_intuit_at ( line_beginning , p_input_line )"	1630:5:45309:45352	20380	0	True				
ANR	22674	CallExpression	"next_intuit_at ( line_beginning , p_input_line )"		20380	0					
ANR	22675	Callee	next_intuit_at		20380	0					
ANR	22676	Identifier	next_intuit_at		20380	0					
ANR	22677	ArgumentList	line_beginning		20380	1					
ANR	22678	Argument	line_beginning		20380	0					
ANR	22679	Identifier	line_beginning		20380	0					
ANR	22680	Argument	p_input_line		20380	1					
ANR	22681	Identifier	p_input_line		20380	0					
ANR	22682	ReturnStatement	return chars_read == ( size_t ) - 1 ? - 1 : 0 ;	1631:5:45359:45400	20380	1	True				
ANR	22683	ConditionalExpression	chars_read == ( size_t ) - 1 ? - 1 : 0		20380	0					
ANR	22684	Condition	chars_read == ( size_t ) - 1		20380	0					
ANR	22685	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	22686	Identifier	chars_read		20380	0					
ANR	22687	CastExpression	( size_t ) - 1		20380	1					
ANR	22688	CastTarget	size_t		20380	0					
ANR	22689	UnaryOperationExpression	- 1		20380	1					
ANR	22690	UnaryOperator	-		20380	0					
ANR	22691	PrimaryExpression	1		20380	1					
ANR	22692	UnaryOperationExpression	- 1		20380	1					
ANR	22693	UnaryOperator	-		20380	0					
ANR	22694	PrimaryExpression	1		20380	1					
ANR	22695	PrimaryExpression	0		20380	2					
ANR	22696	ExpressionStatement	"s = scan_linenum ( buf + 4 , & p_first )"	1633:1:45406:45442	20380	6	True				
ANR	22697	AssignmentExpression	"s = scan_linenum ( buf + 4 , & p_first )"		20380	0		=			
ANR	22698	Identifier	s		20380	0					
ANR	22699	CallExpression	"scan_linenum ( buf + 4 , & p_first )"		20380	1					
ANR	22700	Callee	scan_linenum		20380	0					
ANR	22701	Identifier	scan_linenum		20380	0					
ANR	22702	ArgumentList	buf + 4		20380	1					
ANR	22703	Argument	buf + 4		20380	0					
ANR	22704	AdditiveExpression	buf + 4		20380	0		+			
ANR	22705	Identifier	buf		20380	0					
ANR	22706	PrimaryExpression	4		20380	1					
ANR	22707	Argument	& p_first		20380	1					
ANR	22708	UnaryOperationExpression	& p_first		20380	0					
ANR	22709	UnaryOperator	&		20380	0					
ANR	22710	Identifier	p_first		20380	1					
ANR	22711	IfStatement	"if ( * s == ',' )"		20380	7					
ANR	22712	Condition	"* s == ','"	1634:5:45449:45457	20380	0	True				
ANR	22713	EqualityExpression	"* s == ','"		20380	0		==			
ANR	22714	UnaryOperationExpression	* s		20380	0					
ANR	22715	UnaryOperator	*		20380	0					
ANR	22716	Identifier	s		20380	1					
ANR	22717	PrimaryExpression	"','"		20380	1					
ANR	22718	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"	1635:5:45465:45504	20380	1	True				
ANR	22719	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"		20380	0		=			
ANR	22720	Identifier	s		20380	0					
ANR	22721	CallExpression	"scan_linenum ( s + 1 , & p_ptrn_lines )"		20380	1					
ANR	22722	Callee	scan_linenum		20380	0					
ANR	22723	Identifier	scan_linenum		20380	0					
ANR	22724	ArgumentList	s + 1		20380	1					
ANR	22725	Argument	s + 1		20380	0					
ANR	22726	AdditiveExpression	s + 1		20380	0		+			
ANR	22727	Identifier	s		20380	0					
ANR	22728	PrimaryExpression	1		20380	1					
ANR	22729	Argument	& p_ptrn_lines		20380	1					
ANR	22730	UnaryOperationExpression	& p_ptrn_lines		20380	0					
ANR	22731	UnaryOperator	&		20380	0					
ANR	22732	Identifier	p_ptrn_lines		20380	1					
ANR	22733	ElseStatement	else		20380	0					
ANR	22734	ExpressionStatement	p_ptrn_lines = 1	1637:5:45517:45533	20380	0	True				
ANR	22735	AssignmentExpression	p_ptrn_lines = 1		20380	0		=			
ANR	22736	Identifier	p_ptrn_lines		20380	0					
ANR	22737	PrimaryExpression	1		20380	1					
ANR	22738	IfStatement	if ( p_first >= LINENUM_MAX - p_ptrn_lines )		20380	8					
ANR	22739	Condition	p_first >= LINENUM_MAX - p_ptrn_lines	1638:5:45540:45576	20380	0	True				
ANR	22740	RelationalExpression	p_first >= LINENUM_MAX - p_ptrn_lines		20380	0		>=			
ANR	22741	Identifier	p_first		20380	0					
ANR	22742	AdditiveExpression	LINENUM_MAX - p_ptrn_lines		20380	1		-			
ANR	22743	Identifier	LINENUM_MAX		20380	0					
ANR	22744	Identifier	p_ptrn_lines		20380	1					
ANR	22745	ExpressionStatement	malformed ( )	1639:3:45582:45594	20380	1	True				
ANR	22746	CallExpression	malformed ( )		20380	0					
ANR	22747	Callee	malformed		20380	0					
ANR	22748	Identifier	malformed		20380	0					
ANR	22749	ArgumentList			20380	1					
ANR	22750	IfStatement	if ( * s == ' ' )		20380	9					
ANR	22751	Condition	* s == ' '	1640:5:45601:45609	20380	0	True				
ANR	22752	EqualityExpression	* s == ' '		20380	0		==			
ANR	22753	UnaryOperationExpression	* s		20380	0					
ANR	22754	UnaryOperator	*		20380	0					
ANR	22755	Identifier	s		20380	1					
ANR	22756	PrimaryExpression	' '		20380	1					
ANR	22757	ExpressionStatement	s ++	1640:16:45612:45615	20380	1	True				
ANR	22758	PostIncDecOperationExpression	s ++		20380	0					
ANR	22759	Identifier	s		20380	0					
ANR	22760	IncDec	++		20380	1					
ANR	22761	IfStatement	if ( * s != '+' )		20380	10					
ANR	22762	Condition	* s != '+'	1641:5:45622:45630	20380	0	True				
ANR	22763	EqualityExpression	* s != '+'		20380	0		!=			
ANR	22764	UnaryOperationExpression	* s		20380	0					
ANR	22765	UnaryOperator	*		20380	0					
ANR	22766	Identifier	s		20380	1					
ANR	22767	PrimaryExpression	'+'		20380	1					
ANR	22768	ExpressionStatement	malformed ( )	1642:5:45638:45650	20380	1	True				
ANR	22769	CallExpression	malformed ( )		20380	0					
ANR	22770	Callee	malformed		20380	0					
ANR	22771	Identifier	malformed		20380	0					
ANR	22772	ArgumentList			20380	1					
ANR	22773	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_newfirst )"	1643:1:45653:45690	20380	11	True				
ANR	22774	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_newfirst )"		20380	0		=			
ANR	22775	Identifier	s		20380	0					
ANR	22776	CallExpression	"scan_linenum ( s + 1 , & p_newfirst )"		20380	1					
ANR	22777	Callee	scan_linenum		20380	0					
ANR	22778	Identifier	scan_linenum		20380	0					
ANR	22779	ArgumentList	s + 1		20380	1					
ANR	22780	Argument	s + 1		20380	0					
ANR	22781	AdditiveExpression	s + 1		20380	0		+			
ANR	22782	Identifier	s		20380	0					
ANR	22783	PrimaryExpression	1		20380	1					
ANR	22784	Argument	& p_newfirst		20380	1					
ANR	22785	UnaryOperationExpression	& p_newfirst		20380	0					
ANR	22786	UnaryOperator	&		20380	0					
ANR	22787	Identifier	p_newfirst		20380	1					
ANR	22788	IfStatement	"if ( * s == ',' )"		20380	12					
ANR	22789	Condition	"* s == ','"	1644:5:45697:45705	20380	0	True				
ANR	22790	EqualityExpression	"* s == ','"		20380	0		==			
ANR	22791	UnaryOperationExpression	* s		20380	0					
ANR	22792	UnaryOperator	*		20380	0					
ANR	22793	Identifier	s		20380	1					
ANR	22794	PrimaryExpression	"','"		20380	1					
ANR	22795	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_repl_lines )"	1645:5:45713:45752	20380	1	True				
ANR	22796	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_repl_lines )"		20380	0		=			
ANR	22797	Identifier	s		20380	0					
ANR	22798	CallExpression	"scan_linenum ( s + 1 , & p_repl_lines )"		20380	1					
ANR	22799	Callee	scan_linenum		20380	0					
ANR	22800	Identifier	scan_linenum		20380	0					
ANR	22801	ArgumentList	s + 1		20380	1					
ANR	22802	Argument	s + 1		20380	0					
ANR	22803	AdditiveExpression	s + 1		20380	0		+			
ANR	22804	Identifier	s		20380	0					
ANR	22805	PrimaryExpression	1		20380	1					
ANR	22806	Argument	& p_repl_lines		20380	1					
ANR	22807	UnaryOperationExpression	& p_repl_lines		20380	0					
ANR	22808	UnaryOperator	&		20380	0					
ANR	22809	Identifier	p_repl_lines		20380	1					
ANR	22810	ElseStatement	else		20380	0					
ANR	22811	ExpressionStatement	p_repl_lines = 1	1647:5:45765:45781	20380	0	True				
ANR	22812	AssignmentExpression	p_repl_lines = 1		20380	0		=			
ANR	22813	Identifier	p_repl_lines		20380	0					
ANR	22814	PrimaryExpression	1		20380	1					
ANR	22815	IfStatement	if ( p_newfirst >= LINENUM_MAX - p_repl_lines )		20380	13					
ANR	22816	Condition	p_newfirst >= LINENUM_MAX - p_repl_lines	1648:5:45788:45827	20380	0	True				
ANR	22817	RelationalExpression	p_newfirst >= LINENUM_MAX - p_repl_lines		20380	0		>=			
ANR	22818	Identifier	p_newfirst		20380	0					
ANR	22819	AdditiveExpression	LINENUM_MAX - p_repl_lines		20380	1		-			
ANR	22820	Identifier	LINENUM_MAX		20380	0					
ANR	22821	Identifier	p_repl_lines		20380	1					
ANR	22822	ExpressionStatement	malformed ( )	1649:3:45833:45845	20380	1	True				
ANR	22823	CallExpression	malformed ( )		20380	0					
ANR	22824	Callee	malformed		20380	0					
ANR	22825	Identifier	malformed		20380	0					
ANR	22826	ArgumentList			20380	1					
ANR	22827	IfStatement	if ( * s == ' ' )		20380	14					
ANR	22828	Condition	* s == ' '	1650:5:45852:45860	20380	0	True				
ANR	22829	EqualityExpression	* s == ' '		20380	0		==			
ANR	22830	UnaryOperationExpression	* s		20380	0					
ANR	22831	UnaryOperator	*		20380	0					
ANR	22832	Identifier	s		20380	1					
ANR	22833	PrimaryExpression	' '		20380	1					
ANR	22834	ExpressionStatement	s ++	1650:16:45863:45866	20380	1	True				
ANR	22835	PostIncDecOperationExpression	s ++		20380	0					
ANR	22836	Identifier	s		20380	0					
ANR	22837	IncDec	++		20380	1					
ANR	22838	IfStatement	if ( * s ++ != '@' )		20380	15					
ANR	22839	Condition	* s ++ != '@'	1651:5:45873:45883	20380	0	True				
ANR	22840	EqualityExpression	* s ++ != '@'		20380	0		!=			
ANR	22841	UnaryOperationExpression	* s ++		20380	0					
ANR	22842	UnaryOperator	*		20380	0					
ANR	22843	PostIncDecOperationExpression	s ++		20380	1					
ANR	22844	Identifier	s		20380	0					
ANR	22845	IncDec	++		20380	1					
ANR	22846	PrimaryExpression	'@'		20380	1					
ANR	22847	ExpressionStatement	malformed ( )	1652:5:45891:45903	20380	1	True				
ANR	22848	CallExpression	malformed ( )		20380	0					
ANR	22849	Callee	malformed		20380	0					
ANR	22850	Identifier	malformed		20380	0					
ANR	22851	ArgumentList			20380	1					
ANR	22852	IfStatement	if ( * s ++ == '@' && * s == ' ' )		20380	16					
ANR	22853	Condition	* s ++ == '@' && * s == ' '	1653:5:45910:45933	20380	0	True				
ANR	22854	AndExpression	* s ++ == '@' && * s == ' '		20380	0		&&			
ANR	22855	EqualityExpression	* s ++ == '@'		20380	0		==			
ANR	22856	UnaryOperationExpression	* s ++		20380	0					
ANR	22857	UnaryOperator	*		20380	0					
ANR	22858	PostIncDecOperationExpression	s ++		20380	1					
ANR	22859	Identifier	s		20380	0					
ANR	22860	IncDec	++		20380	1					
ANR	22861	PrimaryExpression	'@'		20380	1					
ANR	22862	EqualityExpression	* s == ' '		20380	1		==			
ANR	22863	UnaryOperationExpression	* s		20380	0					
ANR	22864	UnaryOperator	*		20380	0					
ANR	22865	Identifier	s		20380	1					
ANR	22866	PrimaryExpression	' '		20380	1					
ANR	22867	CompoundStatement		484:3:13634:13634	20380	1					
ANR	22868	ExpressionStatement	p_c_function = s	1655:5:45946:45962	20380	0	True				
ANR	22869	AssignmentExpression	p_c_function = s		20380	0		=			
ANR	22870	Identifier	p_c_function		20380	0					
ANR	22871	Identifier	s		20380	1					
ANR	22872	WhileStatement	while ( * s != '\\n' )		20380	1					
ANR	22873	Condition	* s != '\\n'	1656:12:45976:45985	20380	0	True				
ANR	22874	EqualityExpression	* s != '\\n'		20380	0		!=			
ANR	22875	UnaryOperationExpression	* s		20380	0					
ANR	22876	UnaryOperator	*		20380	0					
ANR	22877	Identifier	s		20380	1					
ANR	22878	PrimaryExpression	'\\n'		20380	1					
ANR	22879	ExpressionStatement	s ++	1657:2:45990:45993	20380	1	True				
ANR	22880	PostIncDecOperationExpression	s ++		20380	0					
ANR	22881	Identifier	s		20380	0					
ANR	22882	IncDec	++		20380	1					
ANR	22883	ExpressionStatement	* s = '\\0'	1658:5:46000:46009	20380	2	True				
ANR	22884	AssignmentExpression	* s = '\\0'		20380	0		=			
ANR	22885	UnaryOperationExpression	* s		20380	0					
ANR	22886	UnaryOperator	*		20380	0					
ANR	22887	Identifier	s		20380	1					
ANR	22888	PrimaryExpression	'\\0'		20380	1					
ANR	22889	ExpressionStatement	p_c_function = savestr ( p_c_function )	1659:5:46016:46053	20380	3	True				
ANR	22890	AssignmentExpression	p_c_function = savestr ( p_c_function )		20380	0		=			
ANR	22891	Identifier	p_c_function		20380	0					
ANR	22892	CallExpression	savestr ( p_c_function )		20380	1					
ANR	22893	Callee	savestr		20380	0					
ANR	22894	Identifier	savestr		20380	0					
ANR	22895	ArgumentList	p_c_function		20380	1					
ANR	22896	Argument	p_c_function		20380	0					
ANR	22897	Identifier	p_c_function		20380	0					
ANR	22898	IfStatement	if ( ! p_c_function )		20380	4					
ANR	22899	Condition	! p_c_function	1660:9:46064:46077	20380	0	True				
ANR	22900	UnaryOperationExpression	! p_c_function		20380	0					
ANR	22901	UnaryOperator	!		20380	0					
ANR	22902	Identifier	p_c_function		20380	1					
ANR	22903	ReturnStatement	return - 1 ;	1661:7:46087:46096	20380	1	True				
ANR	22904	UnaryOperationExpression	- 1		20380	0					
ANR	22905	UnaryOperator	-		20380	0					
ANR	22906	PrimaryExpression	1		20380	1					
ANR	22907	IfStatement	if ( ! p_ptrn_lines )		20380	17					
ANR	22908	Condition	! p_ptrn_lines	1663:5:46108:46120	20380	0	True				
ANR	22909	UnaryOperationExpression	! p_ptrn_lines		20380	0					
ANR	22910	UnaryOperator	!		20380	0					
ANR	22911	Identifier	p_ptrn_lines		20380	1					
ANR	22912	ExpressionStatement	p_first ++	1664:5:46128:46137	20380	1	True				
ANR	22913	PostIncDecOperationExpression	p_first ++		20380	0					
ANR	22914	Identifier	p_first		20380	0					
ANR	22915	IncDec	++		20380	1					
ANR	22916	IfStatement	if ( ! p_repl_lines )		20380	18					
ANR	22917	Condition	! p_repl_lines	1665:5:46181:46193	20380	0	True				
ANR	22918	UnaryOperationExpression	! p_repl_lines		20380	0					
ANR	22919	UnaryOperator	!		20380	0					
ANR	22920	Identifier	p_repl_lines		20380	1					
ANR	22921	ExpressionStatement	p_newfirst ++	1666:5:46201:46213	20380	1	True				
ANR	22922	PostIncDecOperationExpression	p_newfirst ++		20380	0					
ANR	22923	Identifier	p_newfirst		20380	0					
ANR	22924	IncDec	++		20380	1					
ANR	22925	IfStatement	if ( p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 ) )		20380	19					
ANR	22926	Condition	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )	1667:5:46220:46267	20380	0	True				
ANR	22927	RelationalExpression	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )		20380	0		>=			
ANR	22928	Identifier	p_ptrn_lines		20380	0					
ANR	22929	AdditiveExpression	LINENUM_MAX - ( p_repl_lines + 1 )		20380	1		-			
ANR	22930	Identifier	LINENUM_MAX		20380	0					
ANR	22931	AdditiveExpression	p_repl_lines + 1		20380	1		+			
ANR	22932	Identifier	p_repl_lines		20380	0					
ANR	22933	PrimaryExpression	1		20380	1					
ANR	22934	ExpressionStatement	malformed ( )	1668:3:46273:46285	20380	1	True				
ANR	22935	CallExpression	malformed ( )		20380	0					
ANR	22936	Callee	malformed		20380	0					
ANR	22937	Identifier	malformed		20380	0					
ANR	22938	ArgumentList			20380	1					
ANR	22939	ExpressionStatement	p_max = p_ptrn_lines + p_repl_lines + 1	1669:1:46288:46327	20380	20	True				
ANR	22940	AssignmentExpression	p_max = p_ptrn_lines + p_repl_lines + 1		20380	0		=			
ANR	22941	Identifier	p_max		20380	0					
ANR	22942	AdditiveExpression	p_ptrn_lines + p_repl_lines + 1		20380	1		+			
ANR	22943	Identifier	p_ptrn_lines		20380	0					
ANR	22944	AdditiveExpression	p_repl_lines + 1		20380	1		+			
ANR	22945	Identifier	p_repl_lines		20380	0					
ANR	22946	PrimaryExpression	1		20380	1					
ANR	22947	WhileStatement	while ( p_max + 1 >= hunkmax )		20380	21					
ANR	22948	Condition	p_max + 1 >= hunkmax	1670:8:46337:46356	20380	0	True				
ANR	22949	RelationalExpression	p_max + 1 >= hunkmax		20380	0		>=			
ANR	22950	AdditiveExpression	p_max + 1		20380	0		+			
ANR	22951	Identifier	p_max		20380	0					
ANR	22952	PrimaryExpression	1		20380	1					
ANR	22953	Identifier	hunkmax		20380	1					
ANR	22954	IfStatement	if ( ! grow_hunkmax ( ) )		20380	1					
ANR	22955	Condition	! grow_hunkmax ( )	1671:9:46368:46384	20380	0	True				
ANR	22956	UnaryOperationExpression	! grow_hunkmax ( )		20380	0					
ANR	22957	UnaryOperator	!		20380	0					
ANR	22958	CallExpression	grow_hunkmax ( )		20380	1					
ANR	22959	Callee	grow_hunkmax		20380	0					
ANR	22960	Identifier	grow_hunkmax		20380	0					
ANR	22961	ArgumentList			20380	1					
ANR	22962	ReturnStatement	return - 1 ;	1672:2:46389:46398	20380	1	True				
ANR	22963	UnaryOperationExpression	- 1		20380	0					
ANR	22964	UnaryOperator	-		20380	0					
ANR	22965	PrimaryExpression	1		20380	1					
ANR	22966	ExpressionStatement	fillsrc = 1	1673:1:46401:46412	20380	22	True				
ANR	22967	AssignmentExpression	fillsrc = 1		20380	0		=			
ANR	22968	Identifier	fillsrc		20380	0					
ANR	22969	PrimaryExpression	1		20380	1					
ANR	22970	ExpressionStatement	filldst = fillsrc + p_ptrn_lines	1674:1:46415:46447	20380	23	True				
ANR	22971	AssignmentExpression	filldst = fillsrc + p_ptrn_lines		20380	0		=			
ANR	22972	Identifier	filldst		20380	0					
ANR	22973	AdditiveExpression	fillsrc + p_ptrn_lines		20380	1		+			
ANR	22974	Identifier	fillsrc		20380	0					
ANR	22975	Identifier	p_ptrn_lines		20380	1					
ANR	22976	ExpressionStatement	p_end = filldst + p_repl_lines	1675:1:46450:46480	20380	24	True				
ANR	22977	AssignmentExpression	p_end = filldst + p_repl_lines		20380	0		=			
ANR	22978	Identifier	p_end		20380	0					
ANR	22979	AdditiveExpression	filldst + p_repl_lines		20380	1		+			
ANR	22980	Identifier	filldst		20380	0					
ANR	22981	Identifier	p_repl_lines		20380	1					
ANR	22982	ExpressionStatement	"sprintf ( buf , ""*** %s,%s ****\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"	1676:1:46483:46611	20380	25	True				
ANR	22983	CallExpression	"sprintf ( buf , ""*** %s,%s ****\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"		20380	0					
ANR	22984	Callee	sprintf		20380	0					
ANR	22985	Identifier	sprintf		20380	0					
ANR	22986	ArgumentList	buf		20380	1					
ANR	22987	Argument	buf		20380	0					
ANR	22988	Identifier	buf		20380	0					
ANR	22989	Argument	"""*** %s,%s ****\\n"""		20380	1					
ANR	22990	PrimaryExpression	"""*** %s,%s ****\\n"""		20380	0					
ANR	22991	Argument	"format_linenum ( numbuf0 , p_first )"		20380	2					
ANR	22992	CallExpression	"format_linenum ( numbuf0 , p_first )"		20380	0					
ANR	22993	Callee	format_linenum		20380	0					
ANR	22994	Identifier	format_linenum		20380	0					
ANR	22995	ArgumentList	numbuf0		20380	1					
ANR	22996	Argument	numbuf0		20380	0					
ANR	22997	Identifier	numbuf0		20380	0					
ANR	22998	Argument	p_first		20380	1					
ANR	22999	Identifier	p_first		20380	0					
ANR	23000	Argument	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		20380	3					
ANR	23001	CallExpression	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		20380	0					
ANR	23002	Callee	format_linenum		20380	0					
ANR	23003	Identifier	format_linenum		20380	0					
ANR	23004	ArgumentList	numbuf1		20380	1					
ANR	23005	Argument	numbuf1		20380	0					
ANR	23006	Identifier	numbuf1		20380	0					
ANR	23007	Argument	p_first + p_ptrn_lines - 1		20380	1					
ANR	23008	AdditiveExpression	p_first + p_ptrn_lines - 1		20380	0		+			
ANR	23009	Identifier	p_first		20380	0					
ANR	23010	AdditiveExpression	p_ptrn_lines - 1		20380	1		-			
ANR	23011	Identifier	p_ptrn_lines		20380	0					
ANR	23012	PrimaryExpression	1		20380	1					
ANR	23013	ExpressionStatement	p_len [ 0 ] = strlen ( buf )	1679:1:46614:46637	20380	26	True				
ANR	23014	AssignmentExpression	p_len [ 0 ] = strlen ( buf )		20380	0		=			
ANR	23015	ArrayIndexing	p_len [ 0 ]		20380	0					
ANR	23016	Identifier	p_len		20380	0					
ANR	23017	PrimaryExpression	0		20380	1					
ANR	23018	CallExpression	strlen ( buf )		20380	1					
ANR	23019	Callee	strlen		20380	0					
ANR	23020	Identifier	strlen		20380	0					
ANR	23021	ArgumentList	buf		20380	1					
ANR	23022	Argument	buf		20380	0					
ANR	23023	Identifier	buf		20380	0					
ANR	23024	IfStatement	if ( ! ( p_line [ 0 ] = savestr ( buf ) ) )		20380	27					
ANR	23025	Condition	! ( p_line [ 0 ] = savestr ( buf ) )	1680:5:46644:46672	20380	0	True				
ANR	23026	UnaryOperationExpression	! ( p_line [ 0 ] = savestr ( buf ) )		20380	0					
ANR	23027	UnaryOperator	!		20380	0					
ANR	23028	AssignmentExpression	p_line [ 0 ] = savestr ( buf )		20380	1		=			
ANR	23029	ArrayIndexing	p_line [ 0 ]		20380	0					
ANR	23030	Identifier	p_line		20380	0					
ANR	23031	PrimaryExpression	0		20380	1					
ANR	23032	CallExpression	savestr ( buf )		20380	1					
ANR	23033	Callee	savestr		20380	0					
ANR	23034	Identifier	savestr		20380	0					
ANR	23035	ArgumentList	buf		20380	1					
ANR	23036	Argument	buf		20380	0					
ANR	23037	Identifier	buf		20380	0					
ANR	23038	CompoundStatement		510:36:14370:14370	20380	1					
ANR	23039	ExpressionStatement	p_end = - 1	1681:5:46682:46692	20380	0	True				
ANR	23040	AssignmentExpression	p_end = - 1		20380	0		=			
ANR	23041	Identifier	p_end		20380	0					
ANR	23042	UnaryOperationExpression	- 1		20380	1					
ANR	23043	UnaryOperator	-		20380	0					
ANR	23044	PrimaryExpression	1		20380	1					
ANR	23045	ReturnStatement	return - 1 ;	1682:5:46699:46708	20380	1	True				
ANR	23046	UnaryOperationExpression	- 1		20380	0					
ANR	23047	UnaryOperator	-		20380	0					
ANR	23048	PrimaryExpression	1		20380	1					
ANR	23049	ExpressionStatement	p_Char [ 0 ] = '*'	1684:1:46714:46729	20380	28	True				
ANR	23050	AssignmentExpression	p_Char [ 0 ] = '*'		20380	0		=			
ANR	23051	ArrayIndexing	p_Char [ 0 ]		20380	0					
ANR	23052	Identifier	p_Char		20380	0					
ANR	23053	PrimaryExpression	0		20380	1					
ANR	23054	PrimaryExpression	'*'		20380	1					
ANR	23055	ExpressionStatement	"sprintf ( buf , ""--- %s,%s ----\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 ) )"	1685:1:46732:46866	20380	29	True				
ANR	23056	CallExpression	"sprintf ( buf , ""--- %s,%s ----\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 ) )"		20380	0					
ANR	23057	Callee	sprintf		20380	0					
ANR	23058	Identifier	sprintf		20380	0					
ANR	23059	ArgumentList	buf		20380	1					
ANR	23060	Argument	buf		20380	0					
ANR	23061	Identifier	buf		20380	0					
ANR	23062	Argument	"""--- %s,%s ----\\n"""		20380	1					
ANR	23063	PrimaryExpression	"""--- %s,%s ----\\n"""		20380	0					
ANR	23064	Argument	"format_linenum ( numbuf0 , p_newfirst )"		20380	2					
ANR	23065	CallExpression	"format_linenum ( numbuf0 , p_newfirst )"		20380	0					
ANR	23066	Callee	format_linenum		20380	0					
ANR	23067	Identifier	format_linenum		20380	0					
ANR	23068	ArgumentList	numbuf0		20380	1					
ANR	23069	Argument	numbuf0		20380	0					
ANR	23070	Identifier	numbuf0		20380	0					
ANR	23071	Argument	p_newfirst		20380	1					
ANR	23072	Identifier	p_newfirst		20380	0					
ANR	23073	Argument	"format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 )"		20380	3					
ANR	23074	CallExpression	"format_linenum ( numbuf1 , p_newfirst + p_repl_lines - 1 )"		20380	0					
ANR	23075	Callee	format_linenum		20380	0					
ANR	23076	Identifier	format_linenum		20380	0					
ANR	23077	ArgumentList	numbuf1		20380	1					
ANR	23078	Argument	numbuf1		20380	0					
ANR	23079	Identifier	numbuf1		20380	0					
ANR	23080	Argument	p_newfirst + p_repl_lines - 1		20380	1					
ANR	23081	AdditiveExpression	p_newfirst + p_repl_lines - 1		20380	0		+			
ANR	23082	Identifier	p_newfirst		20380	0					
ANR	23083	AdditiveExpression	p_repl_lines - 1		20380	1		-			
ANR	23084	Identifier	p_repl_lines		20380	0					
ANR	23085	PrimaryExpression	1		20380	1					
ANR	23086	ExpressionStatement	p_len [ filldst ] = strlen ( buf )	1688:1:46869:46898	20380	30	True				
ANR	23087	AssignmentExpression	p_len [ filldst ] = strlen ( buf )		20380	0		=			
ANR	23088	ArrayIndexing	p_len [ filldst ]		20380	0					
ANR	23089	Identifier	p_len		20380	0					
ANR	23090	Identifier	filldst		20380	1					
ANR	23091	CallExpression	strlen ( buf )		20380	1					
ANR	23092	Callee	strlen		20380	0					
ANR	23093	Identifier	strlen		20380	0					
ANR	23094	ArgumentList	buf		20380	1					
ANR	23095	Argument	buf		20380	0					
ANR	23096	Identifier	buf		20380	0					
ANR	23097	IfStatement	if ( ! ( p_line [ filldst ] = savestr ( buf ) ) )		20380	31					
ANR	23098	Condition	! ( p_line [ filldst ] = savestr ( buf ) )	1689:5:46905:46939	20380	0	True				
ANR	23099	UnaryOperationExpression	! ( p_line [ filldst ] = savestr ( buf ) )		20380	0					
ANR	23100	UnaryOperator	!		20380	0					
ANR	23101	AssignmentExpression	p_line [ filldst ] = savestr ( buf )		20380	1		=			
ANR	23102	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	23103	Identifier	p_line		20380	0					
ANR	23104	Identifier	filldst		20380	1					
ANR	23105	CallExpression	savestr ( buf )		20380	1					
ANR	23106	Callee	savestr		20380	0					
ANR	23107	Identifier	savestr		20380	0					
ANR	23108	ArgumentList	buf		20380	1					
ANR	23109	Argument	buf		20380	0					
ANR	23110	Identifier	buf		20380	0					
ANR	23111	CompoundStatement		519:42:14637:14637	20380	1					
ANR	23112	ExpressionStatement	p_end = 0	1690:5:46949:46958	20380	0	True				
ANR	23113	AssignmentExpression	p_end = 0		20380	0		=			
ANR	23114	Identifier	p_end		20380	0					
ANR	23115	PrimaryExpression	0		20380	1					
ANR	23116	ReturnStatement	return - 1 ;	1691:5:46965:46974	20380	1	True				
ANR	23117	UnaryOperationExpression	- 1		20380	0					
ANR	23118	UnaryOperator	-		20380	0					
ANR	23119	PrimaryExpression	1		20380	1					
ANR	23120	ExpressionStatement	p_Char [ filldst ++ ] = '='	1693:1:46980:47003	20380	32	True				
ANR	23121	AssignmentExpression	p_Char [ filldst ++ ] = '='		20380	0		=			
ANR	23122	ArrayIndexing	p_Char [ filldst ++ ]		20380	0					
ANR	23123	Identifier	p_Char		20380	0					
ANR	23124	PostIncDecOperationExpression	filldst ++		20380	1					
ANR	23125	Identifier	filldst		20380	0					
ANR	23126	IncDec	++		20380	1					
ANR	23127	PrimaryExpression	'='		20380	1					
ANR	23128	ExpressionStatement	p_prefix_context = - 1	1694:1:47006:47027	20380	33	True				
ANR	23129	AssignmentExpression	p_prefix_context = - 1		20380	0		=			
ANR	23130	Identifier	p_prefix_context		20380	0					
ANR	23131	UnaryOperationExpression	- 1		20380	1					
ANR	23132	UnaryOperator	-		20380	0					
ANR	23133	PrimaryExpression	1		20380	1					
ANR	23134	ExpressionStatement	p_hunk_beg = p_input_line + 1	1695:1:47030:47059	20380	34	True				
ANR	23135	AssignmentExpression	p_hunk_beg = p_input_line + 1		20380	0		=			
ANR	23136	Identifier	p_hunk_beg		20380	0					
ANR	23137	AdditiveExpression	p_input_line + 1		20380	1		+			
ANR	23138	Identifier	p_input_line		20380	0					
ANR	23139	PrimaryExpression	1		20380	1					
ANR	23140	WhileStatement	while ( fillsrc <= p_ptrn_lines || filldst <= p_end )		20380	35					
ANR	23141	Condition	fillsrc <= p_ptrn_lines || filldst <= p_end	1696:8:47069:47111	20380	0	True				
ANR	23142	OrExpression	fillsrc <= p_ptrn_lines || filldst <= p_end		20380	0		||			
ANR	23143	RelationalExpression	fillsrc <= p_ptrn_lines		20380	0		<=			
ANR	23144	Identifier	fillsrc		20380	0					
ANR	23145	Identifier	p_ptrn_lines		20380	1					
ANR	23146	RelationalExpression	filldst <= p_end		20380	1		<=			
ANR	23147	Identifier	filldst		20380	0					
ANR	23148	Identifier	p_end		20380	1					
ANR	23149	CompoundStatement		526:53:14809:14809	20380	1					
ANR	23150	ExpressionStatement	chars_read = get_line ( )	1697:5:47121:47145	20380	0	True				
ANR	23151	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	23152	Identifier	chars_read		20380	0					
ANR	23153	CallExpression	get_line ( )		20380	1					
ANR	23154	Callee	get_line		20380	0					
ANR	23155	Identifier	get_line		20380	0					
ANR	23156	ArgumentList			20380	1					
ANR	23157	IfStatement	if ( ! chars_read )		20380	1					
ANR	23158	Condition	! chars_read	1698:9:47156:47166	20380	0	True				
ANR	23159	UnaryOperationExpression	! chars_read		20380	0					
ANR	23160	UnaryOperator	!		20380	0					
ANR	23161	Identifier	chars_read		20380	1					
ANR	23162	CompoundStatement		528:22:14864:14864	20380	1					
ANR	23163	IfStatement	if ( p_max - filldst < 3 )		20380	0					
ANR	23164	Condition	p_max - filldst < 3	1699:6:47177:47195	20380	0	True				
ANR	23165	RelationalExpression	p_max - filldst < 3		20380	0		<			
ANR	23166	AdditiveExpression	p_max - filldst		20380	0		-			
ANR	23167	Identifier	p_max		20380	0					
ANR	23168	Identifier	filldst		20380	1					
ANR	23169	PrimaryExpression	3		20380	1					
ANR	23170	CompoundStatement		529:27:14893:14893	20380	1					
ANR	23171	ExpressionStatement	"strcpy ( buf , "" \\n"" )"	1700:6:47206:47225	20380	0	True				
ANR	23172	CallExpression	"strcpy ( buf , "" \\n"" )"		20380	0					
ANR	23173	Callee	strcpy		20380	0					
ANR	23174	Identifier	strcpy		20380	0					
ANR	23175	ArgumentList	buf		20380	1					
ANR	23176	Argument	buf		20380	0					
ANR	23177	Identifier	buf		20380	0					
ANR	23178	Argument	""" \\n"""		20380	1					
ANR	23179	PrimaryExpression	""" \\n"""		20380	0					
ANR	23180	ExpressionStatement	chars_read = 2	1701:6:47271:47285	20380	1	True				
ANR	23181	AssignmentExpression	chars_read = 2		20380	0		=			
ANR	23182	Identifier	chars_read		20380	0					
ANR	23183	PrimaryExpression	2		20380	1					
ANR	23184	ElseStatement	else		20380	0					
ANR	23185	CompoundStatement		532:9:14991:14991	20380	0					
ANR	23186	ExpressionStatement	"fatal ( ""unexpected end of file in patch"" )"	1703:6:47304:47345	20380	0	True				
ANR	23187	CallExpression	"fatal ( ""unexpected end of file in patch"" )"		20380	0					
ANR	23188	Callee	fatal		20380	0					
ANR	23189	Identifier	fatal		20380	0					
ANR	23190	ArgumentList	"""unexpected end of file in patch"""		20380	1					
ANR	23191	Argument	"""unexpected end of file in patch"""		20380	0					
ANR	23192	PrimaryExpression	"""unexpected end of file in patch"""		20380	0					
ANR	23193	IfStatement	if ( chars_read == ( size_t ) - 1 )		20380	2					
ANR	23194	Condition	chars_read == ( size_t ) - 1	1706:9:47367:47391	20380	0	True				
ANR	23195	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	23196	Identifier	chars_read		20380	0					
ANR	23197	CastExpression	( size_t ) - 1		20380	1					
ANR	23198	CastTarget	size_t		20380	0					
ANR	23199	UnaryOperationExpression	- 1		20380	1					
ANR	23200	UnaryOperator	-		20380	0					
ANR	23201	PrimaryExpression	1		20380	1					
ANR	23202	ExpressionStatement	s = 0	1707:2:47396:47401	20380	1	True				
ANR	23203	AssignmentExpression	s = 0		20380	0		=			
ANR	23204	Identifier	s		20380	0					
ANR	23205	PrimaryExpression	0		20380	1					
ANR	23206	ElseStatement	else		20380	0					
ANR	23207	IfStatement	if ( * buf == '\\t' || * buf == '\\n' )		20380	0					
ANR	23208	Condition	* buf == '\\t' || * buf == '\\n'	1708:14:47417:47444	20380	0	True				
ANR	23209	OrExpression	* buf == '\\t' || * buf == '\\n'		20380	0		||			
ANR	23210	EqualityExpression	* buf == '\\t'		20380	0		==			
ANR	23211	UnaryOperationExpression	* buf		20380	0					
ANR	23212	UnaryOperator	*		20380	0					
ANR	23213	Identifier	buf		20380	1					
ANR	23214	PrimaryExpression	'\\t'		20380	1					
ANR	23215	EqualityExpression	* buf == '\\n'		20380	1		==			
ANR	23216	UnaryOperationExpression	* buf		20380	0					
ANR	23217	UnaryOperator	*		20380	0					
ANR	23218	Identifier	buf		20380	1					
ANR	23219	PrimaryExpression	'\\n'		20380	1					
ANR	23220	CompoundStatement		538:44:15142:15142	20380	1					
ANR	23221	ExpressionStatement	ch = ' '	1709:2:47451:47459	20380	0	True				
ANR	23222	AssignmentExpression	ch = ' '		20380	0		=			
ANR	23223	Identifier	ch		20380	0					
ANR	23224	PrimaryExpression	' '		20380	1					
ANR	23225	ExpressionStatement	"s = savebuf ( buf , chars_read )"	1710:2:47497:47526	20380	1	True				
ANR	23226	AssignmentExpression	"s = savebuf ( buf , chars_read )"		20380	0		=			
ANR	23227	Identifier	s		20380	0					
ANR	23228	CallExpression	"savebuf ( buf , chars_read )"		20380	1					
ANR	23229	Callee	savebuf		20380	0					
ANR	23230	Identifier	savebuf		20380	0					
ANR	23231	ArgumentList	buf		20380	1					
ANR	23232	Argument	buf		20380	0					
ANR	23233	Identifier	buf		20380	0					
ANR	23234	Argument	chars_read		20380	1					
ANR	23235	Identifier	chars_read		20380	0					
ANR	23236	ElseStatement	else		20380	0					
ANR	23237	CompoundStatement		542:10:15240:15240	20380	0					
ANR	23238	ExpressionStatement	ch = * buf	1713:2:47549:47558	20380	0	True				
ANR	23239	AssignmentExpression	ch = * buf		20380	0		=			
ANR	23240	Identifier	ch		20380	0					
ANR	23241	UnaryOperationExpression	* buf		20380	1					
ANR	23242	UnaryOperator	*		20380	0					
ANR	23243	Identifier	buf		20380	1					
ANR	23244	ExpressionStatement	"s = savebuf ( buf + 1 , -- chars_read )"	1714:2:47562:47595	20380	1	True				
ANR	23245	AssignmentExpression	"s = savebuf ( buf + 1 , -- chars_read )"		20380	0		=			
ANR	23246	Identifier	s		20380	0					
ANR	23247	CallExpression	"savebuf ( buf + 1 , -- chars_read )"		20380	1					
ANR	23248	Callee	savebuf		20380	0					
ANR	23249	Identifier	savebuf		20380	0					
ANR	23250	ArgumentList	buf + 1		20380	1					
ANR	23251	Argument	buf + 1		20380	0					
ANR	23252	AdditiveExpression	buf + 1		20380	0		+			
ANR	23253	Identifier	buf		20380	0					
ANR	23254	PrimaryExpression	1		20380	1					
ANR	23255	Argument	-- chars_read		20380	1					
ANR	23256	UnaryExpression	-- chars_read		20380	0					
ANR	23257	IncDec	--		20380	0					
ANR	23258	Identifier	chars_read		20380	1					
ANR	23259	IfStatement	if ( chars_read && ! s )		20380	3					
ANR	23260	Condition	chars_read && ! s	1716:9:47613:47629	20380	0	True				
ANR	23261	AndExpression	chars_read && ! s		20380	0		&&			
ANR	23262	Identifier	chars_read		20380	0					
ANR	23263	UnaryOperationExpression	! s		20380	1					
ANR	23264	UnaryOperator	!		20380	0					
ANR	23265	Identifier	s		20380	1					
ANR	23266	CompoundStatement		547:7:15334:15334	20380	1					
ANR	23267	WhileStatement	while ( -- filldst > p_ptrn_lines )		20380	0					
ANR	23268	Condition	-- filldst > p_ptrn_lines	1718:9:47650:47673	20380	0	True				
ANR	23269	RelationalExpression	-- filldst > p_ptrn_lines		20380	0		>			
ANR	23270	UnaryExpression	-- filldst		20380	0					
ANR	23271	IncDec	--		20380	0					
ANR	23272	Identifier	filldst		20380	1					
ANR	23273	Identifier	p_ptrn_lines		20380	1					
ANR	23274	ExpressionStatement	free ( p_line [ filldst ] )	1719:6:47682:47703	20380	1	True				
ANR	23275	CallExpression	free ( p_line [ filldst ] )		20380	0					
ANR	23276	Callee	free		20380	0					
ANR	23277	Identifier	free		20380	0					
ANR	23278	ArgumentList	p_line [ filldst ]		20380	1					
ANR	23279	Argument	p_line [ filldst ]		20380	0					
ANR	23280	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	23281	Identifier	p_line		20380	0					
ANR	23282	Identifier	filldst		20380	1					
ANR	23283	ExpressionStatement	p_end = fillsrc - 1	1720:2:47707:47724	20380	1	True				
ANR	23284	AssignmentExpression	p_end = fillsrc - 1		20380	0		=			
ANR	23285	Identifier	p_end		20380	0					
ANR	23286	AdditiveExpression	fillsrc - 1		20380	1		-			
ANR	23287	Identifier	fillsrc		20380	0					
ANR	23288	PrimaryExpression	1		20380	1					
ANR	23289	ReturnStatement	return - 1 ;	1721:2:47728:47737	20380	2	True				
ANR	23290	UnaryOperationExpression	- 1		20380	0					
ANR	23291	UnaryOperator	-		20380	0					
ANR	23292	PrimaryExpression	1		20380	1					
ANR	23293	SwitchStatement	switch ( ch )		20380	4					
ANR	23294	Condition	ch	1723:13:47761:47762	20380	0	True				
ANR	23295	Identifier	ch		20380	0					
ANR	23296	CompoundStatement		553:17:15460:15460	20380	1					
ANR	23297	Label	case '-' :	1724:5:47772:47780	20380	0	True				
ANR	23298	IfStatement	if ( fillsrc > p_ptrn_lines )		20380	1					
ANR	23299	Condition	fillsrc > p_ptrn_lines	1725:6:47788:47809	20380	0	True				
ANR	23300	RelationalExpression	fillsrc > p_ptrn_lines		20380	0		>			
ANR	23301	Identifier	fillsrc		20380	0					
ANR	23302	Identifier	p_ptrn_lines		20380	1					
ANR	23303	CompoundStatement		555:30:15507:15507	20380	1					
ANR	23304	ExpressionStatement	free ( s )	1726:6:47820:47827	20380	0	True				
ANR	23305	CallExpression	free ( s )		20380	0					
ANR	23306	Callee	free		20380	0					
ANR	23307	Identifier	free		20380	0					
ANR	23308	ArgumentList	s		20380	1					
ANR	23309	Argument	s		20380	0					
ANR	23310	Identifier	s		20380	0					
ANR	23311	ExpressionStatement	p_end = filldst - 1	1727:6:47835:47852	20380	1	True				
ANR	23312	AssignmentExpression	p_end = filldst - 1		20380	0		=			
ANR	23313	Identifier	p_end		20380	0					
ANR	23314	AdditiveExpression	filldst - 1		20380	1		-			
ANR	23315	Identifier	filldst		20380	0					
ANR	23316	PrimaryExpression	1		20380	1					
ANR	23317	ExpressionStatement	malformed ( )	1728:6:47860:47872	20380	2	True				
ANR	23318	CallExpression	malformed ( )		20380	0					
ANR	23319	Callee	malformed		20380	0					
ANR	23320	Identifier	malformed		20380	0					
ANR	23321	ArgumentList			20380	1					
ANR	23322	ExpressionStatement	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )	1730:2:47880:47939	20380	2	True				
ANR	23323	AssignmentExpression	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )		20380	0		-=			
ANR	23324	Identifier	chars_read		20380	0					
ANR	23325	AndExpression	fillsrc == p_ptrn_lines && incomplete_line ( )		20380	1		&&			
ANR	23326	EqualityExpression	fillsrc == p_ptrn_lines		20380	0		==			
ANR	23327	Identifier	fillsrc		20380	0					
ANR	23328	Identifier	p_ptrn_lines		20380	1					
ANR	23329	CallExpression	incomplete_line ( )		20380	1					
ANR	23330	Callee	incomplete_line		20380	0					
ANR	23331	Identifier	incomplete_line		20380	0					
ANR	23332	ArgumentList			20380	1					
ANR	23333	ExpressionStatement	p_Char [ fillsrc ] = ch	1731:2:47943:47963	20380	3	True				
ANR	23334	AssignmentExpression	p_Char [ fillsrc ] = ch		20380	0		=			
ANR	23335	ArrayIndexing	p_Char [ fillsrc ]		20380	0					
ANR	23336	Identifier	p_Char		20380	0					
ANR	23337	Identifier	fillsrc		20380	1					
ANR	23338	Identifier	ch		20380	1					
ANR	23339	ExpressionStatement	p_line [ fillsrc ] = s	1732:2:47967:47986	20380	4	True				
ANR	23340	AssignmentExpression	p_line [ fillsrc ] = s		20380	0		=			
ANR	23341	ArrayIndexing	p_line [ fillsrc ]		20380	0					
ANR	23342	Identifier	p_line		20380	0					
ANR	23343	Identifier	fillsrc		20380	1					
ANR	23344	Identifier	s		20380	1					
ANR	23345	ExpressionStatement	p_len [ fillsrc ++ ] = chars_read	1733:2:47990:48019	20380	5	True				
ANR	23346	AssignmentExpression	p_len [ fillsrc ++ ] = chars_read		20380	0		=			
ANR	23347	ArrayIndexing	p_len [ fillsrc ++ ]		20380	0					
ANR	23348	Identifier	p_len		20380	0					
ANR	23349	PostIncDecOperationExpression	fillsrc ++		20380	1					
ANR	23350	Identifier	fillsrc		20380	0					
ANR	23351	IncDec	++		20380	1					
ANR	23352	Identifier	chars_read		20380	1					
ANR	23353	BreakStatement	break ;	1734:2:48023:48028	20380	6	True				
ANR	23354	Label	case '=' :	1735:5:48035:48043	20380	7	True				
ANR	23355	ExpressionStatement	ch = ' '	1736:2:48047:48055	20380	8	True				
ANR	23356	AssignmentExpression	ch = ' '		20380	0		=			
ANR	23357	Identifier	ch		20380	0					
ANR	23358	PrimaryExpression	' '		20380	1					
ANR	23359	Label	case ' ' :	1738:5:48083:48091	20380	9	True				
ANR	23360	IfStatement	if ( fillsrc > p_ptrn_lines )		20380	10					
ANR	23361	Condition	fillsrc > p_ptrn_lines	1739:6:48099:48120	20380	0	True				
ANR	23362	RelationalExpression	fillsrc > p_ptrn_lines		20380	0		>			
ANR	23363	Identifier	fillsrc		20380	0					
ANR	23364	Identifier	p_ptrn_lines		20380	1					
ANR	23365	CompoundStatement		569:30:15818:15818	20380	1					
ANR	23366	ExpressionStatement	free ( s )	1740:6:48131:48138	20380	0	True				
ANR	23367	CallExpression	free ( s )		20380	0					
ANR	23368	Callee	free		20380	0					
ANR	23369	Identifier	free		20380	0					
ANR	23370	ArgumentList	s		20380	1					
ANR	23371	Argument	s		20380	0					
ANR	23372	Identifier	s		20380	0					
ANR	23373	WhileStatement	while ( -- filldst > p_ptrn_lines )		20380	1					
ANR	23374	Condition	-- filldst > p_ptrn_lines	1741:13:48153:48176	20380	0	True				
ANR	23375	RelationalExpression	-- filldst > p_ptrn_lines		20380	0		>			
ANR	23376	UnaryExpression	-- filldst		20380	0					
ANR	23377	IncDec	--		20380	0					
ANR	23378	Identifier	filldst		20380	1					
ANR	23379	Identifier	p_ptrn_lines		20380	1					
ANR	23380	ExpressionStatement	free ( p_line [ filldst ] )	1742:3:48182:48203	20380	1	True				
ANR	23381	CallExpression	free ( p_line [ filldst ] )		20380	0					
ANR	23382	Callee	free		20380	0					
ANR	23383	Identifier	free		20380	0					
ANR	23384	ArgumentList	p_line [ filldst ]		20380	1					
ANR	23385	Argument	p_line [ filldst ]		20380	0					
ANR	23386	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	23387	Identifier	p_line		20380	0					
ANR	23388	Identifier	filldst		20380	1					
ANR	23389	ExpressionStatement	p_end = fillsrc - 1	1743:6:48211:48228	20380	2	True				
ANR	23390	AssignmentExpression	p_end = fillsrc - 1		20380	0		=			
ANR	23391	Identifier	p_end		20380	0					
ANR	23392	AdditiveExpression	fillsrc - 1		20380	1		-			
ANR	23393	Identifier	fillsrc		20380	0					
ANR	23394	PrimaryExpression	1		20380	1					
ANR	23395	ExpressionStatement	malformed ( )	1744:6:48236:48248	20380	3	True				
ANR	23396	CallExpression	malformed ( )		20380	0					
ANR	23397	Callee	malformed		20380	0					
ANR	23398	Identifier	malformed		20380	0					
ANR	23399	ArgumentList			20380	1					
ANR	23400	ExpressionStatement	context ++	1746:2:48256:48265	20380	11	True				
ANR	23401	PostIncDecOperationExpression	context ++		20380	0					
ANR	23402	Identifier	context		20380	0					
ANR	23403	IncDec	++		20380	1					
ANR	23404	ExpressionStatement	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )	1747:2:48269:48328	20380	12	True				
ANR	23405	AssignmentExpression	chars_read -= fillsrc == p_ptrn_lines && incomplete_line ( )		20380	0		-=			
ANR	23406	Identifier	chars_read		20380	0					
ANR	23407	AndExpression	fillsrc == p_ptrn_lines && incomplete_line ( )		20380	1		&&			
ANR	23408	EqualityExpression	fillsrc == p_ptrn_lines		20380	0		==			
ANR	23409	Identifier	fillsrc		20380	0					
ANR	23410	Identifier	p_ptrn_lines		20380	1					
ANR	23411	CallExpression	incomplete_line ( )		20380	1					
ANR	23412	Callee	incomplete_line		20380	0					
ANR	23413	Identifier	incomplete_line		20380	0					
ANR	23414	ArgumentList			20380	1					
ANR	23415	ExpressionStatement	p_Char [ fillsrc ] = ch	1748:2:48332:48352	20380	13	True				
ANR	23416	AssignmentExpression	p_Char [ fillsrc ] = ch		20380	0		=			
ANR	23417	ArrayIndexing	p_Char [ fillsrc ]		20380	0					
ANR	23418	Identifier	p_Char		20380	0					
ANR	23419	Identifier	fillsrc		20380	1					
ANR	23420	Identifier	ch		20380	1					
ANR	23421	ExpressionStatement	p_line [ fillsrc ] = s	1749:2:48356:48375	20380	14	True				
ANR	23422	AssignmentExpression	p_line [ fillsrc ] = s		20380	0		=			
ANR	23423	ArrayIndexing	p_line [ fillsrc ]		20380	0					
ANR	23424	Identifier	p_line		20380	0					
ANR	23425	Identifier	fillsrc		20380	1					
ANR	23426	Identifier	s		20380	1					
ANR	23427	ExpressionStatement	p_len [ fillsrc ++ ] = chars_read	1750:2:48379:48408	20380	15	True				
ANR	23428	AssignmentExpression	p_len [ fillsrc ++ ] = chars_read		20380	0		=			
ANR	23429	ArrayIndexing	p_len [ fillsrc ++ ]		20380	0					
ANR	23430	Identifier	p_len		20380	0					
ANR	23431	PostIncDecOperationExpression	fillsrc ++		20380	1					
ANR	23432	Identifier	fillsrc		20380	0					
ANR	23433	IncDec	++		20380	1					
ANR	23434	Identifier	chars_read		20380	1					
ANR	23435	ExpressionStatement	"s = savebuf ( s , chars_read )"	1751:2:48412:48439	20380	16	True				
ANR	23436	AssignmentExpression	"s = savebuf ( s , chars_read )"		20380	0		=			
ANR	23437	Identifier	s		20380	0					
ANR	23438	CallExpression	"savebuf ( s , chars_read )"		20380	1					
ANR	23439	Callee	savebuf		20380	0					
ANR	23440	Identifier	savebuf		20380	0					
ANR	23441	ArgumentList	s		20380	1					
ANR	23442	Argument	s		20380	0					
ANR	23443	Identifier	s		20380	0					
ANR	23444	Argument	chars_read		20380	1					
ANR	23445	Identifier	chars_read		20380	0					
ANR	23446	IfStatement	if ( chars_read && ! s )		20380	17					
ANR	23447	Condition	chars_read && ! s	1752:6:48447:48463	20380	0	True				
ANR	23448	AndExpression	chars_read && ! s		20380	0		&&			
ANR	23449	Identifier	chars_read		20380	0					
ANR	23450	UnaryOperationExpression	! s		20380	1					
ANR	23451	UnaryOperator	!		20380	0					
ANR	23452	Identifier	s		20380	1					
ANR	23453	CompoundStatement		582:25:16161:16161	20380	1					
ANR	23454	WhileStatement	while ( -- filldst > p_ptrn_lines )		20380	0					
ANR	23455	Condition	-- filldst > p_ptrn_lines	1753:13:48481:48504	20380	0	True				
ANR	23456	RelationalExpression	-- filldst > p_ptrn_lines		20380	0		>			
ANR	23457	UnaryExpression	-- filldst		20380	0					
ANR	23458	IncDec	--		20380	0					
ANR	23459	Identifier	filldst		20380	1					
ANR	23460	Identifier	p_ptrn_lines		20380	1					
ANR	23461	ExpressionStatement	free ( p_line [ filldst ] )	1754:3:48510:48531	20380	1	True				
ANR	23462	CallExpression	free ( p_line [ filldst ] )		20380	0					
ANR	23463	Callee	free		20380	0					
ANR	23464	Identifier	free		20380	0					
ANR	23465	ArgumentList	p_line [ filldst ]		20380	1					
ANR	23466	Argument	p_line [ filldst ]		20380	0					
ANR	23467	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	23468	Identifier	p_line		20380	0					
ANR	23469	Identifier	filldst		20380	1					
ANR	23470	ExpressionStatement	p_end = fillsrc - 1	1755:6:48539:48556	20380	1	True				
ANR	23471	AssignmentExpression	p_end = fillsrc - 1		20380	0		=			
ANR	23472	Identifier	p_end		20380	0					
ANR	23473	AdditiveExpression	fillsrc - 1		20380	1		-			
ANR	23474	Identifier	fillsrc		20380	0					
ANR	23475	PrimaryExpression	1		20380	1					
ANR	23476	ReturnStatement	return - 1 ;	1756:6:48564:48573	20380	2	True				
ANR	23477	UnaryOperationExpression	- 1		20380	0					
ANR	23478	UnaryOperator	-		20380	0					
ANR	23479	PrimaryExpression	1		20380	1					
ANR	23480	Label	case '+' :	1759:5:48605:48613	20380	18	True				
ANR	23481	IfStatement	if ( filldst > p_end )		20380	19					
ANR	23482	Condition	filldst > p_end	1760:6:48621:48635	20380	0	True				
ANR	23483	RelationalExpression	filldst > p_end		20380	0		>			
ANR	23484	Identifier	filldst		20380	0					
ANR	23485	Identifier	p_end		20380	1					
ANR	23486	CompoundStatement		590:23:16333:16333	20380	1					
ANR	23487	ExpressionStatement	free ( s )	1761:6:48646:48653	20380	0	True				
ANR	23488	CallExpression	free ( s )		20380	0					
ANR	23489	Callee	free		20380	0					
ANR	23490	Identifier	free		20380	0					
ANR	23491	ArgumentList	s		20380	1					
ANR	23492	Argument	s		20380	0					
ANR	23493	Identifier	s		20380	0					
ANR	23494	WhileStatement	while ( -- filldst > p_ptrn_lines )		20380	1					
ANR	23495	Condition	-- filldst > p_ptrn_lines	1762:13:48668:48691	20380	0	True				
ANR	23496	RelationalExpression	-- filldst > p_ptrn_lines		20380	0		>			
ANR	23497	UnaryExpression	-- filldst		20380	0					
ANR	23498	IncDec	--		20380	0					
ANR	23499	Identifier	filldst		20380	1					
ANR	23500	Identifier	p_ptrn_lines		20380	1					
ANR	23501	ExpressionStatement	free ( p_line [ filldst ] )	1763:3:48697:48718	20380	1	True				
ANR	23502	CallExpression	free ( p_line [ filldst ] )		20380	0					
ANR	23503	Callee	free		20380	0					
ANR	23504	Identifier	free		20380	0					
ANR	23505	ArgumentList	p_line [ filldst ]		20380	1					
ANR	23506	Argument	p_line [ filldst ]		20380	0					
ANR	23507	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	23508	Identifier	p_line		20380	0					
ANR	23509	Identifier	filldst		20380	1					
ANR	23510	ExpressionStatement	p_end = fillsrc - 1	1764:6:48726:48743	20380	2	True				
ANR	23511	AssignmentExpression	p_end = fillsrc - 1		20380	0		=			
ANR	23512	Identifier	p_end		20380	0					
ANR	23513	AdditiveExpression	fillsrc - 1		20380	1		-			
ANR	23514	Identifier	fillsrc		20380	0					
ANR	23515	PrimaryExpression	1		20380	1					
ANR	23516	ExpressionStatement	malformed ( )	1765:6:48751:48763	20380	3	True				
ANR	23517	CallExpression	malformed ( )		20380	0					
ANR	23518	Callee	malformed		20380	0					
ANR	23519	Identifier	malformed		20380	0					
ANR	23520	ArgumentList			20380	1					
ANR	23521	ExpressionStatement	chars_read -= filldst == p_end && incomplete_line ( )	1767:2:48771:48823	20380	20	True				
ANR	23522	AssignmentExpression	chars_read -= filldst == p_end && incomplete_line ( )		20380	0		-=			
ANR	23523	Identifier	chars_read		20380	0					
ANR	23524	AndExpression	filldst == p_end && incomplete_line ( )		20380	1		&&			
ANR	23525	EqualityExpression	filldst == p_end		20380	0		==			
ANR	23526	Identifier	filldst		20380	0					
ANR	23527	Identifier	p_end		20380	1					
ANR	23528	CallExpression	incomplete_line ( )		20380	1					
ANR	23529	Callee	incomplete_line		20380	0					
ANR	23530	Identifier	incomplete_line		20380	0					
ANR	23531	ArgumentList			20380	1					
ANR	23532	ExpressionStatement	p_Char [ filldst ] = ch	1768:2:48827:48847	20380	21	True				
ANR	23533	AssignmentExpression	p_Char [ filldst ] = ch		20380	0		=			
ANR	23534	ArrayIndexing	p_Char [ filldst ]		20380	0					
ANR	23535	Identifier	p_Char		20380	0					
ANR	23536	Identifier	filldst		20380	1					
ANR	23537	Identifier	ch		20380	1					
ANR	23538	ExpressionStatement	p_line [ filldst ] = s	1769:2:48851:48870	20380	22	True				
ANR	23539	AssignmentExpression	p_line [ filldst ] = s		20380	0		=			
ANR	23540	ArrayIndexing	p_line [ filldst ]		20380	0					
ANR	23541	Identifier	p_line		20380	0					
ANR	23542	Identifier	filldst		20380	1					
ANR	23543	Identifier	s		20380	1					
ANR	23544	ExpressionStatement	p_len [ filldst ++ ] = chars_read	1770:2:48874:48903	20380	23	True				
ANR	23545	AssignmentExpression	p_len [ filldst ++ ] = chars_read		20380	0		=			
ANR	23546	ArrayIndexing	p_len [ filldst ++ ]		20380	0					
ANR	23547	Identifier	p_len		20380	0					
ANR	23548	PostIncDecOperationExpression	filldst ++		20380	1					
ANR	23549	Identifier	filldst		20380	0					
ANR	23550	IncDec	++		20380	1					
ANR	23551	Identifier	chars_read		20380	1					
ANR	23552	BreakStatement	break ;	1771:2:48907:48912	20380	24	True				
ANR	23553	Label	default :	1772:5:48919:48926	20380	25	True				
ANR	23554	Identifier	default		20380	0					
ANR	23555	ExpressionStatement	p_end = filldst	1773:2:48930:48945	20380	26	True				
ANR	23556	AssignmentExpression	p_end = filldst		20380	0		=			
ANR	23557	Identifier	p_end		20380	0					
ANR	23558	Identifier	filldst		20380	1					
ANR	23559	ExpressionStatement	malformed ( )	1774:2:48949:48961	20380	27	True				
ANR	23560	CallExpression	malformed ( )		20380	0					
ANR	23561	Callee	malformed		20380	0					
ANR	23562	Identifier	malformed		20380	0					
ANR	23563	ArgumentList			20380	1					
ANR	23564	IfStatement	if ( ch != ' ' )		20380	5					
ANR	23565	Condition	ch != ' '	1776:9:48979:48987	20380	0	True				
ANR	23566	EqualityExpression	ch != ' '		20380	0		!=			
ANR	23567	Identifier	ch		20380	0					
ANR	23568	PrimaryExpression	' '		20380	1					
ANR	23569	CompoundStatement		606:20:16685:16685	20380	1					
ANR	23570	IfStatement	if ( p_prefix_context == - 1 )		20380	0					
ANR	23571	Condition	p_prefix_context == - 1	1777:6:48998:49019	20380	0	True				
ANR	23572	EqualityExpression	p_prefix_context == - 1		20380	0		==			
ANR	23573	Identifier	p_prefix_context		20380	0					
ANR	23574	UnaryOperationExpression	- 1		20380	1					
ANR	23575	UnaryOperator	-		20380	0					
ANR	23576	PrimaryExpression	1		20380	1					
ANR	23577	ExpressionStatement	p_prefix_context = context	1778:6:49028:49054	20380	1	True				
ANR	23578	AssignmentExpression	p_prefix_context = context		20380	0		=			
ANR	23579	Identifier	p_prefix_context		20380	0					
ANR	23580	Identifier	context		20380	1					
ANR	23581	ExpressionStatement	context = 0	1779:2:49058:49069	20380	1	True				
ANR	23582	AssignmentExpression	context = 0		20380	0		=			
ANR	23583	Identifier	context		20380	0					
ANR	23584	PrimaryExpression	0		20380	1					
ANR	23585	IfStatement	if ( p_prefix_context == - 1 )		20380	36					
ANR	23586	Condition	p_prefix_context == - 1	1782:5:49097:49118	20380	0	True				
ANR	23587	EqualityExpression	p_prefix_context == - 1		20380	0		==			
ANR	23588	Identifier	p_prefix_context		20380	0					
ANR	23589	UnaryOperationExpression	- 1		20380	1					
ANR	23590	UnaryOperator	-		20380	0					
ANR	23591	PrimaryExpression	1		20380	1					
ANR	23592	ExpressionStatement	malformed ( )	1783:3:49124:49136	20380	1	True				
ANR	23593	CallExpression	malformed ( )		20380	0					
ANR	23594	Callee	malformed		20380	0					
ANR	23595	Identifier	malformed		20380	0					
ANR	23596	ArgumentList			20380	1					
ANR	23597	ExpressionStatement	p_suffix_context = context	1784:1:49139:49165	20380	37	True				
ANR	23598	AssignmentExpression	p_suffix_context = context		20380	0		=			
ANR	23599	Identifier	p_suffix_context		20380	0					
ANR	23600	Identifier	context		20380	1					
ANR	23601	ElseStatement	else		20380	0					
ANR	23602	CompoundStatement		620:1:16953:16997	20380	0					
ANR	23603	IdentifierDeclStatement	char hunk_type ;	1787:1:49218:49232	20380	0	True				
ANR	23604	IdentifierDecl	hunk_type		20380	0					
ANR	23605	IdentifierDeclType	char		20380	0					
ANR	23606	Identifier	hunk_type		20380	1					
ANR	23607	IdentifierDeclStatement	int i ;	1788:1:49235:49240	20380	1	True				
ANR	23608	IdentifierDecl	i		20380	0					
ANR	23609	IdentifierDeclType	int		20380	0					
ANR	23610	Identifier	i		20380	1					
ANR	23611	IdentifierDeclStatement	"lin min , max ;"	1789:1:49243:49255	20380	2	True				
ANR	23612	IdentifierDecl	min		20380	0					
ANR	23613	IdentifierDeclType	lin		20380	0					
ANR	23614	Identifier	min		20380	1					
ANR	23615	IdentifierDecl	max		20380	1					
ANR	23616	IdentifierDeclType	lin		20380	0					
ANR	23617	Identifier	max		20380	1					
ANR	23618	IdentifierDeclStatement	file_offset line_beginning = file_tell ( pfp ) ;	1790:1:49258:49302	20380	3	True				
ANR	23619	IdentifierDecl	line_beginning = file_tell ( pfp )		20380	0					
ANR	23620	IdentifierDeclType	file_offset		20380	0					
ANR	23621	Identifier	line_beginning		20380	1					
ANR	23622	AssignmentExpression	line_beginning = file_tell ( pfp )		20380	2		=			
ANR	23623	Identifier	line_beginning		20380	0					
ANR	23624	CallExpression	file_tell ( pfp )		20380	1					
ANR	23625	Callee	file_tell		20380	0					
ANR	23626	Identifier	file_tell		20380	0					
ANR	23627	ArgumentList	pfp		20380	1					
ANR	23628	Argument	pfp		20380	0					
ANR	23629	Identifier	pfp		20380	0					
ANR	23630	ExpressionStatement	p_prefix_context = p_suffix_context = 0	1792:1:49306:49345	20380	4	True				
ANR	23631	AssignmentExpression	p_prefix_context = p_suffix_context = 0		20380	0		=			
ANR	23632	Identifier	p_prefix_context		20380	0					
ANR	23633	AssignmentExpression	p_suffix_context = 0		20380	1		=			
ANR	23634	Identifier	p_suffix_context		20380	0					
ANR	23635	PrimaryExpression	0		20380	1					
ANR	23636	ExpressionStatement	chars_read = get_line ( )	1793:1:49348:49372	20380	5	True				
ANR	23637	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	23638	Identifier	chars_read		20380	0					
ANR	23639	CallExpression	get_line ( )		20380	1					
ANR	23640	Callee	get_line		20380	0					
ANR	23641	Identifier	get_line		20380	0					
ANR	23642	ArgumentList			20380	1					
ANR	23643	IfStatement	if ( chars_read == ( size_t ) - 1 || ! chars_read || ! ISDIGIT ( * buf ) )		20380	6					
ANR	23644	Condition	chars_read == ( size_t ) - 1 || ! chars_read || ! ISDIGIT ( * buf )	1794:5:49379:49437	20380	0	True				
ANR	23645	OrExpression	chars_read == ( size_t ) - 1 || ! chars_read || ! ISDIGIT ( * buf )		20380	0		||			
ANR	23646	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	23647	Identifier	chars_read		20380	0					
ANR	23648	CastExpression	( size_t ) - 1		20380	1					
ANR	23649	CastTarget	size_t		20380	0					
ANR	23650	UnaryOperationExpression	- 1		20380	1					
ANR	23651	UnaryOperator	-		20380	0					
ANR	23652	PrimaryExpression	1		20380	1					
ANR	23653	OrExpression	! chars_read || ! ISDIGIT ( * buf )		20380	1		||			
ANR	23654	UnaryOperationExpression	! chars_read		20380	0					
ANR	23655	UnaryOperator	!		20380	0					
ANR	23656	Identifier	chars_read		20380	1					
ANR	23657	UnaryOperationExpression	! ISDIGIT ( * buf )		20380	1					
ANR	23658	UnaryOperator	!		20380	0					
ANR	23659	CallExpression	ISDIGIT ( * buf )		20380	1					
ANR	23660	Callee	ISDIGIT		20380	0					
ANR	23661	Identifier	ISDIGIT		20380	0					
ANR	23662	ArgumentList	* buf		20380	1					
ANR	23663	Argument	* buf		20380	0					
ANR	23664	UnaryOperationExpression	* buf		20380	0					
ANR	23665	UnaryOperator	*		20380	0					
ANR	23666	Identifier	buf		20380	1					
ANR	23667	CompoundStatement		624:66:17135:17135	20380	1					
ANR	23668	ExpressionStatement	"next_intuit_at ( line_beginning , p_input_line )"	1795:5:49447:49490	20380	0	True				
ANR	23669	CallExpression	"next_intuit_at ( line_beginning , p_input_line )"		20380	0					
ANR	23670	Callee	next_intuit_at		20380	0					
ANR	23671	Identifier	next_intuit_at		20380	0					
ANR	23672	ArgumentList	line_beginning		20380	1					
ANR	23673	Argument	line_beginning		20380	0					
ANR	23674	Identifier	line_beginning		20380	0					
ANR	23675	Argument	p_input_line		20380	1					
ANR	23676	Identifier	p_input_line		20380	0					
ANR	23677	ReturnStatement	return chars_read == ( size_t ) - 1 ? - 1 : 0 ;	1796:5:49497:49538	20380	1	True				
ANR	23678	ConditionalExpression	chars_read == ( size_t ) - 1 ? - 1 : 0		20380	0					
ANR	23679	Condition	chars_read == ( size_t ) - 1		20380	0					
ANR	23680	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	23681	Identifier	chars_read		20380	0					
ANR	23682	CastExpression	( size_t ) - 1		20380	1					
ANR	23683	CastTarget	size_t		20380	0					
ANR	23684	UnaryOperationExpression	- 1		20380	1					
ANR	23685	UnaryOperator	-		20380	0					
ANR	23686	PrimaryExpression	1		20380	1					
ANR	23687	UnaryOperationExpression	- 1		20380	1					
ANR	23688	UnaryOperator	-		20380	0					
ANR	23689	PrimaryExpression	1		20380	1					
ANR	23690	PrimaryExpression	0		20380	2					
ANR	23691	ExpressionStatement	"s = scan_linenum ( buf , & p_first )"	1798:1:49544:49576	20380	7	True				
ANR	23692	AssignmentExpression	"s = scan_linenum ( buf , & p_first )"		20380	0		=			
ANR	23693	Identifier	s		20380	0					
ANR	23694	CallExpression	"scan_linenum ( buf , & p_first )"		20380	1					
ANR	23695	Callee	scan_linenum		20380	0					
ANR	23696	Identifier	scan_linenum		20380	0					
ANR	23697	ArgumentList	buf		20380	1					
ANR	23698	Argument	buf		20380	0					
ANR	23699	Identifier	buf		20380	0					
ANR	23700	Argument	& p_first		20380	1					
ANR	23701	UnaryOperationExpression	& p_first		20380	0					
ANR	23702	UnaryOperator	&		20380	0					
ANR	23703	Identifier	p_first		20380	1					
ANR	23704	IfStatement	"if ( * s == ',' )"		20380	8					
ANR	23705	Condition	"* s == ','"	1799:5:49583:49591	20380	0	True				
ANR	23706	EqualityExpression	"* s == ','"		20380	0		==			
ANR	23707	UnaryOperationExpression	* s		20380	0					
ANR	23708	UnaryOperator	*		20380	0					
ANR	23709	Identifier	s		20380	1					
ANR	23710	PrimaryExpression	"','"		20380	1					
ANR	23711	CompoundStatement		629:16:17289:17289	20380	1					
ANR	23712	ExpressionStatement	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"	1800:5:49601:49640	20380	0	True				
ANR	23713	AssignmentExpression	"s = scan_linenum ( s + 1 , & p_ptrn_lines )"		20380	0		=			
ANR	23714	Identifier	s		20380	0					
ANR	23715	CallExpression	"scan_linenum ( s + 1 , & p_ptrn_lines )"		20380	1					
ANR	23716	Callee	scan_linenum		20380	0					
ANR	23717	Identifier	scan_linenum		20380	0					
ANR	23718	ArgumentList	s + 1		20380	1					
ANR	23719	Argument	s + 1		20380	0					
ANR	23720	AdditiveExpression	s + 1		20380	0		+			
ANR	23721	Identifier	s		20380	0					
ANR	23722	PrimaryExpression	1		20380	1					
ANR	23723	Argument	& p_ptrn_lines		20380	1					
ANR	23724	UnaryOperationExpression	& p_ptrn_lines		20380	0					
ANR	23725	UnaryOperator	&		20380	0					
ANR	23726	Identifier	p_ptrn_lines		20380	1					
ANR	23727	ExpressionStatement	p_ptrn_lines += 1 - p_first	1801:5:49647:49674	20380	1	True				
ANR	23728	AssignmentExpression	p_ptrn_lines += 1 - p_first		20380	0		+=			
ANR	23729	Identifier	p_ptrn_lines		20380	0					
ANR	23730	AdditiveExpression	1 - p_first		20380	1		-			
ANR	23731	PrimaryExpression	1		20380	0					
ANR	23732	Identifier	p_first		20380	1					
ANR	23733	ElseStatement	else		20380	0					
ANR	23734	ExpressionStatement	p_ptrn_lines = ( * s != 'a' )	1804:5:49690:49716	20380	0	True				
ANR	23735	AssignmentExpression	p_ptrn_lines = ( * s != 'a' )		20380	0		=			
ANR	23736	Identifier	p_ptrn_lines		20380	0					
ANR	23737	EqualityExpression	* s != 'a'		20380	1		!=			
ANR	23738	UnaryOperationExpression	* s		20380	0					
ANR	23739	UnaryOperator	*		20380	0					
ANR	23740	Identifier	s		20380	1					
ANR	23741	PrimaryExpression	'a'		20380	1					
ANR	23742	IfStatement	if ( p_first >= LINENUM_MAX - p_ptrn_lines )		20380	9					
ANR	23743	Condition	p_first >= LINENUM_MAX - p_ptrn_lines	1805:5:49723:49759	20380	0	True				
ANR	23744	RelationalExpression	p_first >= LINENUM_MAX - p_ptrn_lines		20380	0		>=			
ANR	23745	Identifier	p_first		20380	0					
ANR	23746	AdditiveExpression	LINENUM_MAX - p_ptrn_lines		20380	1		-			
ANR	23747	Identifier	LINENUM_MAX		20380	0					
ANR	23748	Identifier	p_ptrn_lines		20380	1					
ANR	23749	ExpressionStatement	malformed ( )	1806:3:49765:49777	20380	1	True				
ANR	23750	CallExpression	malformed ( )		20380	0					
ANR	23751	Callee	malformed		20380	0					
ANR	23752	Identifier	malformed		20380	0					
ANR	23753	ArgumentList			20380	1					
ANR	23754	ExpressionStatement	hunk_type = * s	1807:1:49780:49794	20380	10	True				
ANR	23755	AssignmentExpression	hunk_type = * s		20380	0		=			
ANR	23756	Identifier	hunk_type		20380	0					
ANR	23757	UnaryOperationExpression	* s		20380	1					
ANR	23758	UnaryOperator	*		20380	0					
ANR	23759	Identifier	s		20380	1					
ANR	23760	IfStatement	if ( hunk_type == 'a' )		20380	11					
ANR	23761	Condition	hunk_type == 'a'	1808:5:49801:49816	20380	0	True				
ANR	23762	EqualityExpression	hunk_type == 'a'		20380	0		==			
ANR	23763	Identifier	hunk_type		20380	0					
ANR	23764	PrimaryExpression	'a'		20380	1					
ANR	23765	ExpressionStatement	p_first ++	1809:5:49824:49833	20380	1	True				
ANR	23766	PostIncDecOperationExpression	p_first ++		20380	0					
ANR	23767	Identifier	p_first		20380	0					
ANR	23768	IncDec	++		20380	1					
ANR	23769	ExpressionStatement	"s = scan_linenum ( s + 1 , & min )"	1810:1:49873:49903	20380	12	True				
ANR	23770	AssignmentExpression	"s = scan_linenum ( s + 1 , & min )"		20380	0		=			
ANR	23771	Identifier	s		20380	0					
ANR	23772	CallExpression	"scan_linenum ( s + 1 , & min )"		20380	1					
ANR	23773	Callee	scan_linenum		20380	0					
ANR	23774	Identifier	scan_linenum		20380	0					
ANR	23775	ArgumentList	s + 1		20380	1					
ANR	23776	Argument	s + 1		20380	0					
ANR	23777	AdditiveExpression	s + 1		20380	0		+			
ANR	23778	Identifier	s		20380	0					
ANR	23779	PrimaryExpression	1		20380	1					
ANR	23780	Argument	& min		20380	1					
ANR	23781	UnaryOperationExpression	& min		20380	0					
ANR	23782	UnaryOperator	&		20380	0					
ANR	23783	Identifier	min		20380	1					
ANR	23784	IfStatement	"if ( * s == ',' )"		20380	13					
ANR	23785	Condition	"* s == ','"	1811:5:49910:49918	20380	0	True				
ANR	23786	EqualityExpression	"* s == ','"		20380	0		==			
ANR	23787	UnaryOperationExpression	* s		20380	0					
ANR	23788	UnaryOperator	*		20380	0					
ANR	23789	Identifier	s		20380	1					
ANR	23790	PrimaryExpression	"','"		20380	1					
ANR	23791	ExpressionStatement	"scan_linenum ( s + 1 , & max )"	1812:5:49926:49952	20380	1	True				
ANR	23792	CallExpression	"scan_linenum ( s + 1 , & max )"		20380	0					
ANR	23793	Callee	scan_linenum		20380	0					
ANR	23794	Identifier	scan_linenum		20380	0					
ANR	23795	ArgumentList	s + 1		20380	1					
ANR	23796	Argument	s + 1		20380	0					
ANR	23797	AdditiveExpression	s + 1		20380	0		+			
ANR	23798	Identifier	s		20380	0					
ANR	23799	PrimaryExpression	1		20380	1					
ANR	23800	Argument	& max		20380	1					
ANR	23801	UnaryOperationExpression	& max		20380	0					
ANR	23802	UnaryOperator	&		20380	0					
ANR	23803	Identifier	max		20380	1					
ANR	23804	ElseStatement	else		20380	0					
ANR	23805	ExpressionStatement	max = min	1814:5:49965:49974	20380	0	True				
ANR	23806	AssignmentExpression	max = min		20380	0		=			
ANR	23807	Identifier	max		20380	0					
ANR	23808	Identifier	min		20380	1					
ANR	23809	IfStatement	if ( min > max || max - min == LINENUM_MAX )		20380	14					
ANR	23810	Condition	min > max || max - min == LINENUM_MAX	1815:5:49981:50017	20380	0	True				
ANR	23811	OrExpression	min > max || max - min == LINENUM_MAX		20380	0		||			
ANR	23812	RelationalExpression	min > max		20380	0		>			
ANR	23813	Identifier	min		20380	0					
ANR	23814	Identifier	max		20380	1					
ANR	23815	EqualityExpression	max - min == LINENUM_MAX		20380	1		==			
ANR	23816	AdditiveExpression	max - min		20380	0		-			
ANR	23817	Identifier	max		20380	0					
ANR	23818	Identifier	min		20380	1					
ANR	23819	Identifier	LINENUM_MAX		20380	1					
ANR	23820	ExpressionStatement	malformed ( )	1816:3:50023:50035	20380	1	True				
ANR	23821	CallExpression	malformed ( )		20380	0					
ANR	23822	Callee	malformed		20380	0					
ANR	23823	Identifier	malformed		20380	0					
ANR	23824	ArgumentList			20380	1					
ANR	23825	IfStatement	if ( hunk_type == 'd' )		20380	15					
ANR	23826	Condition	hunk_type == 'd'	1817:5:50042:50057	20380	0	True				
ANR	23827	EqualityExpression	hunk_type == 'd'		20380	0		==			
ANR	23828	Identifier	hunk_type		20380	0					
ANR	23829	PrimaryExpression	'd'		20380	1					
ANR	23830	ExpressionStatement	min ++	1818:5:50065:50070	20380	1	True				
ANR	23831	PostIncDecOperationExpression	min ++		20380	0					
ANR	23832	Identifier	min		20380	0					
ANR	23833	IncDec	++		20380	1					
ANR	23834	ExpressionStatement	p_newfirst = min	1819:1:50073:50089	20380	16	True				
ANR	23835	AssignmentExpression	p_newfirst = min		20380	0		=			
ANR	23836	Identifier	p_newfirst		20380	0					
ANR	23837	Identifier	min		20380	1					
ANR	23838	ExpressionStatement	p_repl_lines = max - min + 1	1820:1:50092:50120	20380	17	True				
ANR	23839	AssignmentExpression	p_repl_lines = max - min + 1		20380	0		=			
ANR	23840	Identifier	p_repl_lines		20380	0					
ANR	23841	AdditiveExpression	max - min + 1		20380	1		-			
ANR	23842	Identifier	max		20380	0					
ANR	23843	AdditiveExpression	min + 1		20380	1		+			
ANR	23844	Identifier	min		20380	0					
ANR	23845	PrimaryExpression	1		20380	1					
ANR	23846	IfStatement	if ( p_newfirst >= LINENUM_MAX - p_repl_lines )		20380	18					
ANR	23847	Condition	p_newfirst >= LINENUM_MAX - p_repl_lines	1821:5:50127:50166	20380	0	True				
ANR	23848	RelationalExpression	p_newfirst >= LINENUM_MAX - p_repl_lines		20380	0		>=			
ANR	23849	Identifier	p_newfirst		20380	0					
ANR	23850	AdditiveExpression	LINENUM_MAX - p_repl_lines		20380	1		-			
ANR	23851	Identifier	LINENUM_MAX		20380	0					
ANR	23852	Identifier	p_repl_lines		20380	1					
ANR	23853	ExpressionStatement	malformed ( )	1822:3:50172:50184	20380	1	True				
ANR	23854	CallExpression	malformed ( )		20380	0					
ANR	23855	Callee	malformed		20380	0					
ANR	23856	Identifier	malformed		20380	0					
ANR	23857	ArgumentList			20380	1					
ANR	23858	IfStatement	if ( p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 ) )		20380	19					
ANR	23859	Condition	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )	1823:5:50191:50238	20380	0	True				
ANR	23860	RelationalExpression	p_ptrn_lines >= LINENUM_MAX - ( p_repl_lines + 1 )		20380	0		>=			
ANR	23861	Identifier	p_ptrn_lines		20380	0					
ANR	23862	AdditiveExpression	LINENUM_MAX - ( p_repl_lines + 1 )		20380	1		-			
ANR	23863	Identifier	LINENUM_MAX		20380	0					
ANR	23864	AdditiveExpression	p_repl_lines + 1		20380	1		+			
ANR	23865	Identifier	p_repl_lines		20380	0					
ANR	23866	PrimaryExpression	1		20380	1					
ANR	23867	ExpressionStatement	malformed ( )	1824:3:50244:50256	20380	1	True				
ANR	23868	CallExpression	malformed ( )		20380	0					
ANR	23869	Callee	malformed		20380	0					
ANR	23870	Identifier	malformed		20380	0					
ANR	23871	ArgumentList			20380	1					
ANR	23872	ExpressionStatement	p_end = p_ptrn_lines + p_repl_lines + 1	1825:1:50259:50298	20380	20	True				
ANR	23873	AssignmentExpression	p_end = p_ptrn_lines + p_repl_lines + 1		20380	0		=			
ANR	23874	Identifier	p_end		20380	0					
ANR	23875	AdditiveExpression	p_ptrn_lines + p_repl_lines + 1		20380	1		+			
ANR	23876	Identifier	p_ptrn_lines		20380	0					
ANR	23877	AdditiveExpression	p_repl_lines + 1		20380	1		+			
ANR	23878	Identifier	p_repl_lines		20380	0					
ANR	23879	PrimaryExpression	1		20380	1					
ANR	23880	WhileStatement	while ( p_end + 1 >= hunkmax )		20380	21					
ANR	23881	Condition	p_end + 1 >= hunkmax	1826:8:50308:50327	20380	0	True				
ANR	23882	RelationalExpression	p_end + 1 >= hunkmax		20380	0		>=			
ANR	23883	AdditiveExpression	p_end + 1		20380	0		+			
ANR	23884	Identifier	p_end		20380	0					
ANR	23885	PrimaryExpression	1		20380	1					
ANR	23886	Identifier	hunkmax		20380	1					
ANR	23887	IfStatement	if ( ! grow_hunkmax ( ) )		20380	1					
ANR	23888	Condition	! grow_hunkmax ( )	1827:7:50337:50353	20380	0	True				
ANR	23889	UnaryOperationExpression	! grow_hunkmax ( )		20380	0					
ANR	23890	UnaryOperator	!		20380	0					
ANR	23891	CallExpression	grow_hunkmax ( )		20380	1					
ANR	23892	Callee	grow_hunkmax		20380	0					
ANR	23893	Identifier	grow_hunkmax		20380	0					
ANR	23894	ArgumentList			20380	1					
ANR	23895	CompoundStatement		658:5:18056:18056	20380	1					
ANR	23896	ExpressionStatement	p_end = - 1	1829:7:50370:50380	20380	0	True				
ANR	23897	AssignmentExpression	p_end = - 1		20380	0		=			
ANR	23898	Identifier	p_end		20380	0					
ANR	23899	UnaryOperationExpression	- 1		20380	1					
ANR	23900	UnaryOperator	-		20380	0					
ANR	23901	PrimaryExpression	1		20380	1					
ANR	23902	ReturnStatement	return - 1 ;	1830:7:50389:50398	20380	1	True				
ANR	23903	UnaryOperationExpression	- 1		20380	0					
ANR	23904	UnaryOperator	-		20380	0					
ANR	23905	PrimaryExpression	1		20380	1					
ANR	23906	ExpressionStatement	"sprintf ( buf , ""*** %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"	1832:1:50408:50531	20380	22	True				
ANR	23907	CallExpression	"sprintf ( buf , ""*** %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 ) )"		20380	0					
ANR	23908	Callee	sprintf		20380	0					
ANR	23909	Identifier	sprintf		20380	0					
ANR	23910	ArgumentList	buf		20380	1					
ANR	23911	Argument	buf		20380	0					
ANR	23912	Identifier	buf		20380	0					
ANR	23913	Argument	"""*** %s,%s\\n"""		20380	1					
ANR	23914	PrimaryExpression	"""*** %s,%s\\n"""		20380	0					
ANR	23915	Argument	"format_linenum ( numbuf0 , p_first )"		20380	2					
ANR	23916	CallExpression	"format_linenum ( numbuf0 , p_first )"		20380	0					
ANR	23917	Callee	format_linenum		20380	0					
ANR	23918	Identifier	format_linenum		20380	0					
ANR	23919	ArgumentList	numbuf0		20380	1					
ANR	23920	Argument	numbuf0		20380	0					
ANR	23921	Identifier	numbuf0		20380	0					
ANR	23922	Argument	p_first		20380	1					
ANR	23923	Identifier	p_first		20380	0					
ANR	23924	Argument	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		20380	3					
ANR	23925	CallExpression	"format_linenum ( numbuf1 , p_first + p_ptrn_lines - 1 )"		20380	0					
ANR	23926	Callee	format_linenum		20380	0					
ANR	23927	Identifier	format_linenum		20380	0					
ANR	23928	ArgumentList	numbuf1		20380	1					
ANR	23929	Argument	numbuf1		20380	0					
ANR	23930	Identifier	numbuf1		20380	0					
ANR	23931	Argument	p_first + p_ptrn_lines - 1		20380	1					
ANR	23932	AdditiveExpression	p_first + p_ptrn_lines - 1		20380	0		+			
ANR	23933	Identifier	p_first		20380	0					
ANR	23934	AdditiveExpression	p_ptrn_lines - 1		20380	1		-			
ANR	23935	Identifier	p_ptrn_lines		20380	0					
ANR	23936	PrimaryExpression	1		20380	1					
ANR	23937	ExpressionStatement	p_len [ 0 ] = strlen ( buf )	1835:1:50534:50557	20380	23	True				
ANR	23938	AssignmentExpression	p_len [ 0 ] = strlen ( buf )		20380	0		=			
ANR	23939	ArrayIndexing	p_len [ 0 ]		20380	0					
ANR	23940	Identifier	p_len		20380	0					
ANR	23941	PrimaryExpression	0		20380	1					
ANR	23942	CallExpression	strlen ( buf )		20380	1					
ANR	23943	Callee	strlen		20380	0					
ANR	23944	Identifier	strlen		20380	0					
ANR	23945	ArgumentList	buf		20380	1					
ANR	23946	Argument	buf		20380	0					
ANR	23947	Identifier	buf		20380	0					
ANR	23948	IfStatement	if ( ! ( p_line [ 0 ] = savestr ( buf ) ) )		20380	24					
ANR	23949	Condition	! ( p_line [ 0 ] = savestr ( buf ) )	1836:5:50564:50592	20380	0	True				
ANR	23950	UnaryOperationExpression	! ( p_line [ 0 ] = savestr ( buf ) )		20380	0					
ANR	23951	UnaryOperator	!		20380	0					
ANR	23952	AssignmentExpression	p_line [ 0 ] = savestr ( buf )		20380	1		=			
ANR	23953	ArrayIndexing	p_line [ 0 ]		20380	0					
ANR	23954	Identifier	p_line		20380	0					
ANR	23955	PrimaryExpression	0		20380	1					
ANR	23956	CallExpression	savestr ( buf )		20380	1					
ANR	23957	Callee	savestr		20380	0					
ANR	23958	Identifier	savestr		20380	0					
ANR	23959	ArgumentList	buf		20380	1					
ANR	23960	Argument	buf		20380	0					
ANR	23961	Identifier	buf		20380	0					
ANR	23962	CompoundStatement		666:36:18290:18290	20380	1					
ANR	23963	ExpressionStatement	p_end = - 1	1837:5:50602:50612	20380	0	True				
ANR	23964	AssignmentExpression	p_end = - 1		20380	0		=			
ANR	23965	Identifier	p_end		20380	0					
ANR	23966	UnaryOperationExpression	- 1		20380	1					
ANR	23967	UnaryOperator	-		20380	0					
ANR	23968	PrimaryExpression	1		20380	1					
ANR	23969	ReturnStatement	return - 1 ;	1838:5:50619:50628	20380	1	True				
ANR	23970	UnaryOperationExpression	- 1		20380	0					
ANR	23971	UnaryOperator	-		20380	0					
ANR	23972	PrimaryExpression	1		20380	1					
ANR	23973	ExpressionStatement	p_Char [ 0 ] = '*'	1840:1:50634:50649	20380	25	True				
ANR	23974	AssignmentExpression	p_Char [ 0 ] = '*'		20380	0		=			
ANR	23975	ArrayIndexing	p_Char [ 0 ]		20380	0					
ANR	23976	Identifier	p_Char		20380	0					
ANR	23977	PrimaryExpression	0		20380	1					
ANR	23978	PrimaryExpression	'*'		20380	1					
ANR	23979	ForStatement	for ( i = 1 ; i <= p_ptrn_lines ; i ++ )		20380	26					
ANR	23980	ForInit	i = 1 ;	1841:6:50657:50660	20380	0	True				
ANR	23981	AssignmentExpression	i = 1		20380	0		=			
ANR	23982	Identifier	i		20380	0					
ANR	23983	PrimaryExpression	1		20380	1					
ANR	23984	Condition	i <= p_ptrn_lines	1841:11:50662:50676	20380	1	True				
ANR	23985	RelationalExpression	i <= p_ptrn_lines		20380	0		<=			
ANR	23986	Identifier	i		20380	0					
ANR	23987	Identifier	p_ptrn_lines		20380	1					
ANR	23988	PostIncDecOperationExpression	i ++	1841:28:50679:50681	20380	2	True				
ANR	23989	Identifier	i		20380	0					
ANR	23990	IncDec	++		20380	1					
ANR	23991	CompoundStatement		671:33:18379:18379	20380	3					
ANR	23992	ExpressionStatement	chars_read = get_line ( )	1842:5:50691:50715	20380	0	True				
ANR	23993	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	23994	Identifier	chars_read		20380	0					
ANR	23995	CallExpression	get_line ( )		20380	1					
ANR	23996	Callee	get_line		20380	0					
ANR	23997	Identifier	get_line		20380	0					
ANR	23998	ArgumentList			20380	1					
ANR	23999	IfStatement	if ( chars_read == ( size_t ) - 1 )		20380	1					
ANR	24000	Condition	chars_read == ( size_t ) - 1	1843:9:50726:50750	20380	0	True				
ANR	24001	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	24002	Identifier	chars_read		20380	0					
ANR	24003	CastExpression	( size_t ) - 1		20380	1					
ANR	24004	CastTarget	size_t		20380	0					
ANR	24005	UnaryOperationExpression	- 1		20380	1					
ANR	24006	UnaryOperator	-		20380	0					
ANR	24007	PrimaryExpression	1		20380	1					
ANR	24008	CompoundStatement		674:7:18455:18455	20380	1					
ANR	24009	ExpressionStatement	p_end = i - 1	1845:2:50764:50777	20380	0	True				
ANR	24010	AssignmentExpression	p_end = i - 1		20380	0		=			
ANR	24011	Identifier	p_end		20380	0					
ANR	24012	AdditiveExpression	i - 1		20380	1		-			
ANR	24013	Identifier	i		20380	0					
ANR	24014	PrimaryExpression	1		20380	1					
ANR	24015	ReturnStatement	return - 1 ;	1846:2:50781:50790	20380	1	True				
ANR	24016	UnaryOperationExpression	- 1		20380	0					
ANR	24017	UnaryOperator	-		20380	0					
ANR	24018	PrimaryExpression	1		20380	1					
ANR	24019	IfStatement	if ( ! chars_read )		20380	2					
ANR	24020	Condition	! chars_read	1848:9:50810:50820	20380	0	True				
ANR	24021	UnaryOperationExpression	! chars_read		20380	0					
ANR	24022	UnaryOperator	!		20380	0					
ANR	24023	Identifier	chars_read		20380	1					
ANR	24024	ExpressionStatement	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1849:7:50830:50929	20380	1	True				
ANR	24025	CallExpression	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	24026	Callee	fatal		20380	0					
ANR	24027	Identifier	fatal		20380	0					
ANR	24028	ArgumentList	"""unexpected end of file in patch at line %s"""		20380	1					
ANR	24029	Argument	"""unexpected end of file in patch at line %s"""		20380	0					
ANR	24030	PrimaryExpression	"""unexpected end of file in patch at line %s"""		20380	0					
ANR	24031	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	24032	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	24033	Callee	format_linenum		20380	0					
ANR	24034	Identifier	format_linenum		20380	0					
ANR	24035	ArgumentList	numbuf0		20380	1					
ANR	24036	Argument	numbuf0		20380	0					
ANR	24037	Identifier	numbuf0		20380	0					
ANR	24038	Argument	p_input_line		20380	1					
ANR	24039	Identifier	p_input_line		20380	0					
ANR	24040	IfStatement	if ( buf [ 0 ] != '<' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' ) )		20380	3					
ANR	24041	Condition	buf [ 0 ] != '<' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )	1851:9:50940:50989	20380	0	True				
ANR	24042	OrExpression	buf [ 0 ] != '<' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )		20380	0		||			
ANR	24043	EqualityExpression	buf [ 0 ] != '<'		20380	0		!=			
ANR	24044	ArrayIndexing	buf [ 0 ]		20380	0					
ANR	24045	Identifier	buf		20380	0					
ANR	24046	PrimaryExpression	0		20380	1					
ANR	24047	PrimaryExpression	'<'		20380	1					
ANR	24048	AndExpression	buf [ 1 ] != ' ' && buf [ 1 ] != '\\t'		20380	1		&&			
ANR	24049	EqualityExpression	buf [ 1 ] != ' '		20380	0		!=			
ANR	24050	ArrayIndexing	buf [ 1 ]		20380	0					
ANR	24051	Identifier	buf		20380	0					
ANR	24052	PrimaryExpression	1		20380	1					
ANR	24053	PrimaryExpression	' '		20380	1					
ANR	24054	EqualityExpression	buf [ 1 ] != '\\t'		20380	1		!=			
ANR	24055	ArrayIndexing	buf [ 1 ]		20380	0					
ANR	24056	Identifier	buf		20380	0					
ANR	24057	PrimaryExpression	1		20380	1					
ANR	24058	PrimaryExpression	'\\t'		20380	1					
ANR	24059	ExpressionStatement	"fatal ( ""'<' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"	1852:7:50999:51113	20380	1	True				
ANR	24060	CallExpression	"fatal ( ""'<' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	24061	Callee	fatal		20380	0					
ANR	24062	Identifier	fatal		20380	0					
ANR	24063	ArgumentList	"""'<' followed by space or tab expected at line %s of patch"""		20380	1					
ANR	24064	Argument	"""'<' followed by space or tab expected at line %s of patch"""		20380	0					
ANR	24065	PrimaryExpression	"""'<' followed by space or tab expected at line %s of patch"""		20380	0					
ANR	24066	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	24067	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	24068	Callee	format_linenum		20380	0					
ANR	24069	Identifier	format_linenum		20380	0					
ANR	24070	ArgumentList	numbuf0		20380	1					
ANR	24071	Argument	numbuf0		20380	0					
ANR	24072	Identifier	numbuf0		20380	0					
ANR	24073	Argument	p_input_line		20380	1					
ANR	24074	Identifier	p_input_line		20380	0					
ANR	24075	ExpressionStatement	chars_read -= 2 + ( i == p_ptrn_lines && incomplete_line ( ) )	1854:5:51120:51179	20380	4	True				
ANR	24076	AssignmentExpression	chars_read -= 2 + ( i == p_ptrn_lines && incomplete_line ( ) )		20380	0		-=			
ANR	24077	Identifier	chars_read		20380	0					
ANR	24078	AdditiveExpression	2 + ( i == p_ptrn_lines && incomplete_line ( ) )		20380	1		+			
ANR	24079	PrimaryExpression	2		20380	0					
ANR	24080	AndExpression	i == p_ptrn_lines && incomplete_line ( )		20380	1		&&			
ANR	24081	EqualityExpression	i == p_ptrn_lines		20380	0		==			
ANR	24082	Identifier	i		20380	0					
ANR	24083	Identifier	p_ptrn_lines		20380	1					
ANR	24084	CallExpression	incomplete_line ( )		20380	1					
ANR	24085	Callee	incomplete_line		20380	0					
ANR	24086	Identifier	incomplete_line		20380	0					
ANR	24087	ArgumentList			20380	1					
ANR	24088	ExpressionStatement	p_len [ i ] = chars_read	1855:5:51186:51207	20380	5	True				
ANR	24089	AssignmentExpression	p_len [ i ] = chars_read		20380	0		=			
ANR	24090	ArrayIndexing	p_len [ i ]		20380	0					
ANR	24091	Identifier	p_len		20380	0					
ANR	24092	Identifier	i		20380	1					
ANR	24093	Identifier	chars_read		20380	1					
ANR	24094	ExpressionStatement	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"	1856:5:51214:51255	20380	6	True				
ANR	24095	AssignmentExpression	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"		20380	0		=			
ANR	24096	ArrayIndexing	p_line [ i ]		20380	0					
ANR	24097	Identifier	p_line		20380	0					
ANR	24098	Identifier	i		20380	1					
ANR	24099	CallExpression	"savebuf ( buf + 2 , chars_read )"		20380	1					
ANR	24100	Callee	savebuf		20380	0					
ANR	24101	Identifier	savebuf		20380	0					
ANR	24102	ArgumentList	buf + 2		20380	1					
ANR	24103	Argument	buf + 2		20380	0					
ANR	24104	AdditiveExpression	buf + 2		20380	0		+			
ANR	24105	Identifier	buf		20380	0					
ANR	24106	PrimaryExpression	2		20380	1					
ANR	24107	Argument	chars_read		20380	1					
ANR	24108	Identifier	chars_read		20380	0					
ANR	24109	IfStatement	if ( chars_read && ! p_line [ i ] )		20380	7					
ANR	24110	Condition	chars_read && ! p_line [ i ]	1857:9:51266:51290	20380	0	True				
ANR	24111	AndExpression	chars_read && ! p_line [ i ]		20380	0		&&			
ANR	24112	Identifier	chars_read		20380	0					
ANR	24113	UnaryOperationExpression	! p_line [ i ]		20380	1					
ANR	24114	UnaryOperator	!		20380	0					
ANR	24115	ArrayIndexing	p_line [ i ]		20380	1					
ANR	24116	Identifier	p_line		20380	0					
ANR	24117	Identifier	i		20380	1					
ANR	24118	CompoundStatement		687:36:18988:18988	20380	1					
ANR	24119	ExpressionStatement	p_end = i - 1	1858:2:51297:51308	20380	0	True				
ANR	24120	AssignmentExpression	p_end = i - 1		20380	0		=			
ANR	24121	Identifier	p_end		20380	0					
ANR	24122	AdditiveExpression	i - 1		20380	1		-			
ANR	24123	Identifier	i		20380	0					
ANR	24124	PrimaryExpression	1		20380	1					
ANR	24125	ReturnStatement	return - 1 ;	1859:2:51312:51321	20380	1	True				
ANR	24126	UnaryOperationExpression	- 1		20380	0					
ANR	24127	UnaryOperator	-		20380	0					
ANR	24128	PrimaryExpression	1		20380	1					
ANR	24129	ExpressionStatement	p_Char [ i ] = '-'	1861:5:51335:51350	20380	8	True				
ANR	24130	AssignmentExpression	p_Char [ i ] = '-'		20380	0		=			
ANR	24131	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24132	Identifier	p_Char		20380	0					
ANR	24133	Identifier	i		20380	1					
ANR	24134	PrimaryExpression	'-'		20380	1					
ANR	24135	IfStatement	if ( hunk_type == 'c' )		20380	27					
ANR	24136	Condition	hunk_type == 'c'	1863:5:51360:51375	20380	0	True				
ANR	24137	EqualityExpression	hunk_type == 'c'		20380	0		==			
ANR	24138	Identifier	hunk_type		20380	0					
ANR	24139	PrimaryExpression	'c'		20380	1					
ANR	24140	CompoundStatement		693:23:19073:19073	20380	1					
ANR	24141	ExpressionStatement	chars_read = get_line ( )	1864:5:51385:51409	20380	0	True				
ANR	24142	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	24143	Identifier	chars_read		20380	0					
ANR	24144	CallExpression	get_line ( )		20380	1					
ANR	24145	Callee	get_line		20380	0					
ANR	24146	Identifier	get_line		20380	0					
ANR	24147	ArgumentList			20380	1					
ANR	24148	IfStatement	if ( chars_read == ( size_t ) - 1 )		20380	1					
ANR	24149	Condition	chars_read == ( size_t ) - 1	1865:9:51420:51444	20380	0	True				
ANR	24150	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	24151	Identifier	chars_read		20380	0					
ANR	24152	CastExpression	( size_t ) - 1		20380	1					
ANR	24153	CastTarget	size_t		20380	0					
ANR	24154	UnaryOperationExpression	- 1		20380	1					
ANR	24155	UnaryOperator	-		20380	0					
ANR	24156	PrimaryExpression	1		20380	1					
ANR	24157	CompoundStatement		696:7:19149:19149	20380	1					
ANR	24158	ExpressionStatement	p_end = i - 1	1867:2:51458:51471	20380	0	True				
ANR	24159	AssignmentExpression	p_end = i - 1		20380	0		=			
ANR	24160	Identifier	p_end		20380	0					
ANR	24161	AdditiveExpression	i - 1		20380	1		-			
ANR	24162	Identifier	i		20380	0					
ANR	24163	PrimaryExpression	1		20380	1					
ANR	24164	ReturnStatement	return - 1 ;	1868:2:51475:51484	20380	1	True				
ANR	24165	UnaryOperationExpression	- 1		20380	0					
ANR	24166	UnaryOperator	-		20380	0					
ANR	24167	PrimaryExpression	1		20380	1					
ANR	24168	IfStatement	if ( ! chars_read )		20380	2					
ANR	24169	Condition	! chars_read	1870:9:51504:51515	20380	0	True				
ANR	24170	UnaryOperationExpression	! chars_read		20380	0					
ANR	24171	UnaryOperator	!		20380	0					
ANR	24172	Identifier	chars_read		20380	1					
ANR	24173	ExpressionStatement	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1871:7:51525:51624	20380	1	True				
ANR	24174	CallExpression	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	24175	Callee	fatal		20380	0					
ANR	24176	Identifier	fatal		20380	0					
ANR	24177	ArgumentList	"""unexpected end of file in patch at line %s"""		20380	1					
ANR	24178	Argument	"""unexpected end of file in patch at line %s"""		20380	0					
ANR	24179	PrimaryExpression	"""unexpected end of file in patch at line %s"""		20380	0					
ANR	24180	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	24181	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	24182	Callee	format_linenum		20380	0					
ANR	24183	Identifier	format_linenum		20380	0					
ANR	24184	ArgumentList	numbuf0		20380	1					
ANR	24185	Argument	numbuf0		20380	0					
ANR	24186	Identifier	numbuf0		20380	0					
ANR	24187	Argument	p_input_line		20380	1					
ANR	24188	Identifier	p_input_line		20380	0					
ANR	24189	IfStatement	if ( * buf != '-' )		20380	3					
ANR	24190	Condition	* buf != '-'	1873:9:51635:51645	20380	0	True				
ANR	24191	EqualityExpression	* buf != '-'		20380	0		!=			
ANR	24192	UnaryOperationExpression	* buf		20380	0					
ANR	24193	UnaryOperator	*		20380	0					
ANR	24194	Identifier	buf		20380	1					
ANR	24195	PrimaryExpression	'-'		20380	1					
ANR	24196	ExpressionStatement	"fatal ( ""'---' expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"	1874:7:51655:51746	20380	1	True				
ANR	24197	CallExpression	"fatal ( ""'---' expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	24198	Callee	fatal		20380	0					
ANR	24199	Identifier	fatal		20380	0					
ANR	24200	ArgumentList	"""'---' expected at line %s of patch"""		20380	1					
ANR	24201	Argument	"""'---' expected at line %s of patch"""		20380	0					
ANR	24202	PrimaryExpression	"""'---' expected at line %s of patch"""		20380	0					
ANR	24203	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	24204	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	24205	Callee	format_linenum		20380	0					
ANR	24206	Identifier	format_linenum		20380	0					
ANR	24207	ArgumentList	numbuf0		20380	1					
ANR	24208	Argument	numbuf0		20380	0					
ANR	24209	Identifier	numbuf0		20380	0					
ANR	24210	Argument	p_input_line		20380	1					
ANR	24211	Identifier	p_input_line		20380	0					
ANR	24212	ExpressionStatement	"sprintf ( buf , ""--- %s,%s\\n"" , format_linenum ( numbuf0 , min ) , format_linenum ( numbuf1 , max ) )"	1877:1:51752:51848	20380	28	True				
ANR	24213	CallExpression	"sprintf ( buf , ""--- %s,%s\\n"" , format_linenum ( numbuf0 , min ) , format_linenum ( numbuf1 , max ) )"		20380	0					
ANR	24214	Callee	sprintf		20380	0					
ANR	24215	Identifier	sprintf		20380	0					
ANR	24216	ArgumentList	buf		20380	1					
ANR	24217	Argument	buf		20380	0					
ANR	24218	Identifier	buf		20380	0					
ANR	24219	Argument	"""--- %s,%s\\n"""		20380	1					
ANR	24220	PrimaryExpression	"""--- %s,%s\\n"""		20380	0					
ANR	24221	Argument	"format_linenum ( numbuf0 , min )"		20380	2					
ANR	24222	CallExpression	"format_linenum ( numbuf0 , min )"		20380	0					
ANR	24223	Callee	format_linenum		20380	0					
ANR	24224	Identifier	format_linenum		20380	0					
ANR	24225	ArgumentList	numbuf0		20380	1					
ANR	24226	Argument	numbuf0		20380	0					
ANR	24227	Identifier	numbuf0		20380	0					
ANR	24228	Argument	min		20380	1					
ANR	24229	Identifier	min		20380	0					
ANR	24230	Argument	"format_linenum ( numbuf1 , max )"		20380	3					
ANR	24231	CallExpression	"format_linenum ( numbuf1 , max )"		20380	0					
ANR	24232	Callee	format_linenum		20380	0					
ANR	24233	Identifier	format_linenum		20380	0					
ANR	24234	ArgumentList	numbuf1		20380	1					
ANR	24235	Argument	numbuf1		20380	0					
ANR	24236	Identifier	numbuf1		20380	0					
ANR	24237	Argument	max		20380	1					
ANR	24238	Identifier	max		20380	0					
ANR	24239	ExpressionStatement	p_len [ i ] = strlen ( buf )	1880:1:51851:51874	20380	29	True				
ANR	24240	AssignmentExpression	p_len [ i ] = strlen ( buf )		20380	0		=			
ANR	24241	ArrayIndexing	p_len [ i ]		20380	0					
ANR	24242	Identifier	p_len		20380	0					
ANR	24243	Identifier	i		20380	1					
ANR	24244	CallExpression	strlen ( buf )		20380	1					
ANR	24245	Callee	strlen		20380	0					
ANR	24246	Identifier	strlen		20380	0					
ANR	24247	ArgumentList	buf		20380	1					
ANR	24248	Argument	buf		20380	0					
ANR	24249	Identifier	buf		20380	0					
ANR	24250	IfStatement	if ( ! ( p_line [ i ] = savestr ( buf ) ) )		20380	30					
ANR	24251	Condition	! ( p_line [ i ] = savestr ( buf ) )	1881:5:51881:51909	20380	0	True				
ANR	24252	UnaryOperationExpression	! ( p_line [ i ] = savestr ( buf ) )		20380	0					
ANR	24253	UnaryOperator	!		20380	0					
ANR	24254	AssignmentExpression	p_line [ i ] = savestr ( buf )		20380	1		=			
ANR	24255	ArrayIndexing	p_line [ i ]		20380	0					
ANR	24256	Identifier	p_line		20380	0					
ANR	24257	Identifier	i		20380	1					
ANR	24258	CallExpression	savestr ( buf )		20380	1					
ANR	24259	Callee	savestr		20380	0					
ANR	24260	Identifier	savestr		20380	0					
ANR	24261	ArgumentList	buf		20380	1					
ANR	24262	Argument	buf		20380	0					
ANR	24263	Identifier	buf		20380	0					
ANR	24264	CompoundStatement		711:36:19607:19607	20380	1					
ANR	24265	ExpressionStatement	p_end = i - 1	1882:5:51919:51930	20380	0	True				
ANR	24266	AssignmentExpression	p_end = i - 1		20380	0		=			
ANR	24267	Identifier	p_end		20380	0					
ANR	24268	AdditiveExpression	i - 1		20380	1		-			
ANR	24269	Identifier	i		20380	0					
ANR	24270	PrimaryExpression	1		20380	1					
ANR	24271	ReturnStatement	return - 1 ;	1883:5:51937:51946	20380	1	True				
ANR	24272	UnaryOperationExpression	- 1		20380	0					
ANR	24273	UnaryOperator	-		20380	0					
ANR	24274	PrimaryExpression	1		20380	1					
ANR	24275	ExpressionStatement	p_Char [ i ] = '='	1885:1:51952:51967	20380	31	True				
ANR	24276	AssignmentExpression	p_Char [ i ] = '='		20380	0		=			
ANR	24277	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24278	Identifier	p_Char		20380	0					
ANR	24279	Identifier	i		20380	1					
ANR	24280	PrimaryExpression	'='		20380	1					
ANR	24281	ForStatement	for ( i ++ ; i <= p_end ; i ++ )		20380	32					
ANR	24282	ForInit	i ++ ;	1886:6:51975:51978	20380	0	True				
ANR	24283	PostIncDecOperationExpression	i ++		20380	0					
ANR	24284	Identifier	i		20380	0					
ANR	24285	IncDec	++		20380	1					
ANR	24286	Condition	i <= p_end	1886:11:51980:51987	20380	1	True				
ANR	24287	RelationalExpression	i <= p_end		20380	0		<=			
ANR	24288	Identifier	i		20380	0					
ANR	24289	Identifier	p_end		20380	1					
ANR	24290	PostIncDecOperationExpression	i ++	1886:21:51990:51992	20380	2	True				
ANR	24291	Identifier	i		20380	0					
ANR	24292	IncDec	++		20380	1					
ANR	24293	CompoundStatement		716:26:19690:19690	20380	3					
ANR	24294	ExpressionStatement	chars_read = get_line ( )	1887:5:52002:52026	20380	0	True				
ANR	24295	AssignmentExpression	chars_read = get_line ( )		20380	0		=			
ANR	24296	Identifier	chars_read		20380	0					
ANR	24297	CallExpression	get_line ( )		20380	1					
ANR	24298	Callee	get_line		20380	0					
ANR	24299	Identifier	get_line		20380	0					
ANR	24300	ArgumentList			20380	1					
ANR	24301	IfStatement	if ( chars_read == ( size_t ) - 1 )		20380	1					
ANR	24302	Condition	chars_read == ( size_t ) - 1	1888:9:52037:52061	20380	0	True				
ANR	24303	EqualityExpression	chars_read == ( size_t ) - 1		20380	0		==			
ANR	24304	Identifier	chars_read		20380	0					
ANR	24305	CastExpression	( size_t ) - 1		20380	1					
ANR	24306	CastTarget	size_t		20380	0					
ANR	24307	UnaryOperationExpression	- 1		20380	1					
ANR	24308	UnaryOperator	-		20380	0					
ANR	24309	PrimaryExpression	1		20380	1					
ANR	24310	CompoundStatement		719:7:19766:19766	20380	1					
ANR	24311	ExpressionStatement	p_end = i - 1	1890:2:52075:52088	20380	0	True				
ANR	24312	AssignmentExpression	p_end = i - 1		20380	0		=			
ANR	24313	Identifier	p_end		20380	0					
ANR	24314	AdditiveExpression	i - 1		20380	1		-			
ANR	24315	Identifier	i		20380	0					
ANR	24316	PrimaryExpression	1		20380	1					
ANR	24317	ReturnStatement	return - 1 ;	1891:2:52092:52101	20380	1	True				
ANR	24318	UnaryOperationExpression	- 1		20380	0					
ANR	24319	UnaryOperator	-		20380	0					
ANR	24320	PrimaryExpression	1		20380	1					
ANR	24321	IfStatement	if ( ! chars_read )		20380	2					
ANR	24322	Condition	! chars_read	1893:9:52121:52131	20380	0	True				
ANR	24323	UnaryOperationExpression	! chars_read		20380	0					
ANR	24324	UnaryOperator	!		20380	0					
ANR	24325	Identifier	chars_read		20380	1					
ANR	24326	ExpressionStatement	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"	1894:7:52141:52240	20380	1	True				
ANR	24327	CallExpression	"fatal ( ""unexpected end of file in patch at line %s"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	24328	Callee	fatal		20380	0					
ANR	24329	Identifier	fatal		20380	0					
ANR	24330	ArgumentList	"""unexpected end of file in patch at line %s"""		20380	1					
ANR	24331	Argument	"""unexpected end of file in patch at line %s"""		20380	0					
ANR	24332	PrimaryExpression	"""unexpected end of file in patch at line %s"""		20380	0					
ANR	24333	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	24334	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	24335	Callee	format_linenum		20380	0					
ANR	24336	Identifier	format_linenum		20380	0					
ANR	24337	ArgumentList	numbuf0		20380	1					
ANR	24338	Argument	numbuf0		20380	0					
ANR	24339	Identifier	numbuf0		20380	0					
ANR	24340	Argument	p_input_line		20380	1					
ANR	24341	Identifier	p_input_line		20380	0					
ANR	24342	IfStatement	if ( buf [ 0 ] != '>' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' ) )		20380	3					
ANR	24343	Condition	buf [ 0 ] != '>' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )	1896:9:52251:52300	20380	0	True				
ANR	24344	OrExpression	buf [ 0 ] != '>' || ( buf [ 1 ] != ' ' && buf [ 1 ] != '\\t' )		20380	0		||			
ANR	24345	EqualityExpression	buf [ 0 ] != '>'		20380	0		!=			
ANR	24346	ArrayIndexing	buf [ 0 ]		20380	0					
ANR	24347	Identifier	buf		20380	0					
ANR	24348	PrimaryExpression	0		20380	1					
ANR	24349	PrimaryExpression	'>'		20380	1					
ANR	24350	AndExpression	buf [ 1 ] != ' ' && buf [ 1 ] != '\\t'		20380	1		&&			
ANR	24351	EqualityExpression	buf [ 1 ] != ' '		20380	0		!=			
ANR	24352	ArrayIndexing	buf [ 1 ]		20380	0					
ANR	24353	Identifier	buf		20380	0					
ANR	24354	PrimaryExpression	1		20380	1					
ANR	24355	PrimaryExpression	' '		20380	1					
ANR	24356	EqualityExpression	buf [ 1 ] != '\\t'		20380	1		!=			
ANR	24357	ArrayIndexing	buf [ 1 ]		20380	0					
ANR	24358	Identifier	buf		20380	0					
ANR	24359	PrimaryExpression	1		20380	1					
ANR	24360	PrimaryExpression	'\\t'		20380	1					
ANR	24361	ExpressionStatement	"fatal ( ""'>' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"	1897:7:52310:52424	20380	1	True				
ANR	24362	CallExpression	"fatal ( ""'>' followed by space or tab expected at line %s of patch"" , format_linenum ( numbuf0 , p_input_line ) )"		20380	0					
ANR	24363	Callee	fatal		20380	0					
ANR	24364	Identifier	fatal		20380	0					
ANR	24365	ArgumentList	"""'>' followed by space or tab expected at line %s of patch"""		20380	1					
ANR	24366	Argument	"""'>' followed by space or tab expected at line %s of patch"""		20380	0					
ANR	24367	PrimaryExpression	"""'>' followed by space or tab expected at line %s of patch"""		20380	0					
ANR	24368	Argument	"format_linenum ( numbuf0 , p_input_line )"		20380	1					
ANR	24369	CallExpression	"format_linenum ( numbuf0 , p_input_line )"		20380	0					
ANR	24370	Callee	format_linenum		20380	0					
ANR	24371	Identifier	format_linenum		20380	0					
ANR	24372	ArgumentList	numbuf0		20380	1					
ANR	24373	Argument	numbuf0		20380	0					
ANR	24374	Identifier	numbuf0		20380	0					
ANR	24375	Argument	p_input_line		20380	1					
ANR	24376	Identifier	p_input_line		20380	0					
ANR	24377	ExpressionStatement	chars_read -= 2 + ( i == p_end && incomplete_line ( ) )	1899:5:52431:52483	20380	4	True				
ANR	24378	AssignmentExpression	chars_read -= 2 + ( i == p_end && incomplete_line ( ) )		20380	0		-=			
ANR	24379	Identifier	chars_read		20380	0					
ANR	24380	AdditiveExpression	2 + ( i == p_end && incomplete_line ( ) )		20380	1		+			
ANR	24381	PrimaryExpression	2		20380	0					
ANR	24382	AndExpression	i == p_end && incomplete_line ( )		20380	1		&&			
ANR	24383	EqualityExpression	i == p_end		20380	0		==			
ANR	24384	Identifier	i		20380	0					
ANR	24385	Identifier	p_end		20380	1					
ANR	24386	CallExpression	incomplete_line ( )		20380	1					
ANR	24387	Callee	incomplete_line		20380	0					
ANR	24388	Identifier	incomplete_line		20380	0					
ANR	24389	ArgumentList			20380	1					
ANR	24390	ExpressionStatement	p_len [ i ] = chars_read	1900:5:52490:52511	20380	5	True				
ANR	24391	AssignmentExpression	p_len [ i ] = chars_read		20380	0		=			
ANR	24392	ArrayIndexing	p_len [ i ]		20380	0					
ANR	24393	Identifier	p_len		20380	0					
ANR	24394	Identifier	i		20380	1					
ANR	24395	Identifier	chars_read		20380	1					
ANR	24396	ExpressionStatement	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"	1901:5:52518:52559	20380	6	True				
ANR	24397	AssignmentExpression	"p_line [ i ] = savebuf ( buf + 2 , chars_read )"		20380	0		=			
ANR	24398	ArrayIndexing	p_line [ i ]		20380	0					
ANR	24399	Identifier	p_line		20380	0					
ANR	24400	Identifier	i		20380	1					
ANR	24401	CallExpression	"savebuf ( buf + 2 , chars_read )"		20380	1					
ANR	24402	Callee	savebuf		20380	0					
ANR	24403	Identifier	savebuf		20380	0					
ANR	24404	ArgumentList	buf + 2		20380	1					
ANR	24405	Argument	buf + 2		20380	0					
ANR	24406	AdditiveExpression	buf + 2		20380	0		+			
ANR	24407	Identifier	buf		20380	0					
ANR	24408	PrimaryExpression	2		20380	1					
ANR	24409	Argument	chars_read		20380	1					
ANR	24410	Identifier	chars_read		20380	0					
ANR	24411	IfStatement	if ( chars_read && ! p_line [ i ] )		20380	7					
ANR	24412	Condition	chars_read && ! p_line [ i ]	1902:9:52570:52594	20380	0	True				
ANR	24413	AndExpression	chars_read && ! p_line [ i ]		20380	0		&&			
ANR	24414	Identifier	chars_read		20380	0					
ANR	24415	UnaryOperationExpression	! p_line [ i ]		20380	1					
ANR	24416	UnaryOperator	!		20380	0					
ANR	24417	ArrayIndexing	p_line [ i ]		20380	1					
ANR	24418	Identifier	p_line		20380	0					
ANR	24419	Identifier	i		20380	1					
ANR	24420	CompoundStatement		732:36:20292:20292	20380	1					
ANR	24421	ExpressionStatement	p_end = i - 1	1903:2:52601:52612	20380	0	True				
ANR	24422	AssignmentExpression	p_end = i - 1		20380	0		=			
ANR	24423	Identifier	p_end		20380	0					
ANR	24424	AdditiveExpression	i - 1		20380	1		-			
ANR	24425	Identifier	i		20380	0					
ANR	24426	PrimaryExpression	1		20380	1					
ANR	24427	ReturnStatement	return - 1 ;	1904:2:52616:52625	20380	1	True				
ANR	24428	UnaryOperationExpression	- 1		20380	0					
ANR	24429	UnaryOperator	-		20380	0					
ANR	24430	PrimaryExpression	1		20380	1					
ANR	24431	ExpressionStatement	p_Char [ i ] = '+'	1906:5:52639:52654	20380	8	True				
ANR	24432	AssignmentExpression	p_Char [ i ] = '+'		20380	0		=			
ANR	24433	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24434	Identifier	p_Char		20380	0					
ANR	24435	Identifier	i		20380	1					
ANR	24436	PrimaryExpression	'+'		20380	1					
ANR	24437	IfStatement	if ( rev )		20380	14					
ANR	24438	Condition	rev	1909:8:52673:52675	20380	0	True				
ANR	24439	Identifier	rev		20380	0					
ANR	24440	IfStatement	if ( ! pch_swap ( ) )		20380	1					
ANR	24441	Condition	! pch_swap ( )	1910:5:52709:52719	20380	0	True				
ANR	24442	UnaryOperationExpression	! pch_swap ( )		20380	0					
ANR	24443	UnaryOperator	!		20380	0					
ANR	24444	CallExpression	pch_swap ( )		20380	1					
ANR	24445	Callee	pch_swap		20380	0					
ANR	24446	Identifier	pch_swap		20380	0					
ANR	24447	ArgumentList			20380	1					
ANR	24448	ExpressionStatement	"say ( ""Not enough memory to swap next hunk!\\n"" )"	1911:5:52727:52773	20380	1	True				
ANR	24449	CallExpression	"say ( ""Not enough memory to swap next hunk!\\n"" )"		20380	0					
ANR	24450	Callee	say		20380	0					
ANR	24451	Identifier	say		20380	0					
ANR	24452	ArgumentList	"""Not enough memory to swap next hunk!\\n"""		20380	1					
ANR	24453	Argument	"""Not enough memory to swap next hunk!\\n"""		20380	0					
ANR	24454	PrimaryExpression	"""Not enough memory to swap next hunk!\\n"""		20380	0					
ANR	24455	ExpressionStatement	assert ( p_end + 1 < hunkmax )	1912:4:52779:52807	20380	15	True				
ANR	24456	CallExpression	assert ( p_end + 1 < hunkmax )		20380	0					
ANR	24457	Callee	assert		20380	0					
ANR	24458	Identifier	assert		20380	0					
ANR	24459	ArgumentList	p_end + 1 < hunkmax		20380	1					
ANR	24460	Argument	p_end + 1 < hunkmax		20380	0					
ANR	24461	RelationalExpression	p_end + 1 < hunkmax		20380	0		<			
ANR	24462	AdditiveExpression	p_end + 1		20380	0		+			
ANR	24463	Identifier	p_end		20380	0					
ANR	24464	PrimaryExpression	1		20380	1					
ANR	24465	Identifier	hunkmax		20380	1					
ANR	24466	ExpressionStatement	p_Char [ p_end + 1 ] = '^'	1913:4:52813:52836	20380	16	True				
ANR	24467	AssignmentExpression	p_Char [ p_end + 1 ] = '^'		20380	0		=			
ANR	24468	ArrayIndexing	p_Char [ p_end + 1 ]		20380	0					
ANR	24469	Identifier	p_Char		20380	0					
ANR	24470	AdditiveExpression	p_end + 1		20380	1		+			
ANR	24471	Identifier	p_end		20380	0					
ANR	24472	PrimaryExpression	1		20380	1					
ANR	24473	PrimaryExpression	'^'		20380	1					
ANR	24474	IfStatement	if ( debug & 2 )		20380	17					
ANR	24475	Condition	debug & 2	1914:8:52882:52890	20380	0	True				
ANR	24476	BitAndExpression	debug & 2		20380	0		&			
ANR	24477	Identifier	debug		20380	0					
ANR	24478	PrimaryExpression	2		20380	1					
ANR	24479	CompoundStatement		745:1:20591:20596	20380	1					
ANR	24480	IdentifierDeclStatement	lin i ;	1915:1:52896:52901	20380	0	True				
ANR	24481	IdentifierDecl	i		20380	0					
ANR	24482	IdentifierDeclType	lin		20380	0					
ANR	24483	Identifier	i		20380	1					
ANR	24484	ForStatement	for ( i = 0 ; i <= p_end + 1 ; i ++ )		20380	1					
ANR	24485	ForInit	i = 0 ;	1917:6:52910:52915	20380	0	True				
ANR	24486	AssignmentExpression	i = 0		20380	0		=			
ANR	24487	Identifier	i		20380	0					
ANR	24488	PrimaryExpression	0		20380	1					
ANR	24489	Condition	i <= p_end + 1	1917:13:52917:52930	20380	1	True				
ANR	24490	RelationalExpression	i <= p_end + 1		20380	0		<=			
ANR	24491	Identifier	i		20380	0					
ANR	24492	AdditiveExpression	p_end + 1		20380	1		+			
ANR	24493	Identifier	p_end		20380	0					
ANR	24494	PrimaryExpression	1		20380	1					
ANR	24495	PostIncDecOperationExpression	i ++	1917:29:52933:52935	20380	2	True				
ANR	24496	Identifier	i		20380	0					
ANR	24497	IncDec	++		20380	1					
ANR	24498	CompoundStatement		747:34:20633:20633	20380	3					
ANR	24499	ExpressionStatement	"fprintf ( stderr , ""%s %c"" , format_linenum ( numbuf0 , i ) , p_Char [ i ] )"	1918:5:52945:53024	20380	0	True				
ANR	24500	CallExpression	"fprintf ( stderr , ""%s %c"" , format_linenum ( numbuf0 , i ) , p_Char [ i ] )"		20380	0					
ANR	24501	Callee	fprintf		20380	0					
ANR	24502	Identifier	fprintf		20380	0					
ANR	24503	ArgumentList	stderr		20380	1					
ANR	24504	Argument	stderr		20380	0					
ANR	24505	Identifier	stderr		20380	0					
ANR	24506	Argument	"""%s %c"""		20380	1					
ANR	24507	PrimaryExpression	"""%s %c"""		20380	0					
ANR	24508	Argument	"format_linenum ( numbuf0 , i )"		20380	2					
ANR	24509	CallExpression	"format_linenum ( numbuf0 , i )"		20380	0					
ANR	24510	Callee	format_linenum		20380	0					
ANR	24511	Identifier	format_linenum		20380	0					
ANR	24512	ArgumentList	numbuf0		20380	1					
ANR	24513	Argument	numbuf0		20380	0					
ANR	24514	Identifier	numbuf0		20380	0					
ANR	24515	Argument	i		20380	1					
ANR	24516	Identifier	i		20380	0					
ANR	24517	Argument	p_Char [ i ]		20380	3					
ANR	24518	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24519	Identifier	p_Char		20380	0					
ANR	24520	Identifier	i		20380	1					
ANR	24521	IfStatement	if ( p_Char [ i ] == '*' )		20380	1					
ANR	24522	Condition	p_Char [ i ] == '*'	1921:9:53035:53050	20380	0	True				
ANR	24523	EqualityExpression	p_Char [ i ] == '*'		20380	0		==			
ANR	24524	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24525	Identifier	p_Char		20380	0					
ANR	24526	Identifier	i		20380	1					
ANR	24527	PrimaryExpression	'*'		20380	1					
ANR	24528	ExpressionStatement	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_ptrn_lines ) )"	1922:7:53060:53181	20380	1	True				
ANR	24529	CallExpression	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_first ) , format_linenum ( numbuf1 , p_ptrn_lines ) )"		20380	0					
ANR	24530	Callee	fprintf		20380	0					
ANR	24531	Identifier	fprintf		20380	0					
ANR	24532	ArgumentList	stderr		20380	1					
ANR	24533	Argument	stderr		20380	0					
ANR	24534	Identifier	stderr		20380	0					
ANR	24535	Argument	""" %s,%s\\n"""		20380	1					
ANR	24536	PrimaryExpression	""" %s,%s\\n"""		20380	0					
ANR	24537	Argument	"format_linenum ( numbuf0 , p_first )"		20380	2					
ANR	24538	CallExpression	"format_linenum ( numbuf0 , p_first )"		20380	0					
ANR	24539	Callee	format_linenum		20380	0					
ANR	24540	Identifier	format_linenum		20380	0					
ANR	24541	ArgumentList	numbuf0		20380	1					
ANR	24542	Argument	numbuf0		20380	0					
ANR	24543	Identifier	numbuf0		20380	0					
ANR	24544	Argument	p_first		20380	1					
ANR	24545	Identifier	p_first		20380	0					
ANR	24546	Argument	"format_linenum ( numbuf1 , p_ptrn_lines )"		20380	3					
ANR	24547	CallExpression	"format_linenum ( numbuf1 , p_ptrn_lines )"		20380	0					
ANR	24548	Callee	format_linenum		20380	0					
ANR	24549	Identifier	format_linenum		20380	0					
ANR	24550	ArgumentList	numbuf1		20380	1					
ANR	24551	Argument	numbuf1		20380	0					
ANR	24552	Identifier	numbuf1		20380	0					
ANR	24553	Argument	p_ptrn_lines		20380	1					
ANR	24554	Identifier	p_ptrn_lines		20380	0					
ANR	24555	ElseStatement	else		20380	0					
ANR	24556	IfStatement	if ( p_Char [ i ] == '=' )		20380	0					
ANR	24557	Condition	p_Char [ i ] == '='	1925:14:53197:53212	20380	0	True				
ANR	24558	EqualityExpression	p_Char [ i ] == '='		20380	0		==			
ANR	24559	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24560	Identifier	p_Char		20380	0					
ANR	24561	Identifier	i		20380	1					
ANR	24562	PrimaryExpression	'='		20380	1					
ANR	24563	ExpressionStatement	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_repl_lines ) )"	1926:7:53222:53346	20380	1	True				
ANR	24564	CallExpression	"fprintf ( stderr , "" %s,%s\\n"" , format_linenum ( numbuf0 , p_newfirst ) , format_linenum ( numbuf1 , p_repl_lines ) )"		20380	0					
ANR	24565	Callee	fprintf		20380	0					
ANR	24566	Identifier	fprintf		20380	0					
ANR	24567	ArgumentList	stderr		20380	1					
ANR	24568	Argument	stderr		20380	0					
ANR	24569	Identifier	stderr		20380	0					
ANR	24570	Argument	""" %s,%s\\n"""		20380	1					
ANR	24571	PrimaryExpression	""" %s,%s\\n"""		20380	0					
ANR	24572	Argument	"format_linenum ( numbuf0 , p_newfirst )"		20380	2					
ANR	24573	CallExpression	"format_linenum ( numbuf0 , p_newfirst )"		20380	0					
ANR	24574	Callee	format_linenum		20380	0					
ANR	24575	Identifier	format_linenum		20380	0					
ANR	24576	ArgumentList	numbuf0		20380	1					
ANR	24577	Argument	numbuf0		20380	0					
ANR	24578	Identifier	numbuf0		20380	0					
ANR	24579	Argument	p_newfirst		20380	1					
ANR	24580	Identifier	p_newfirst		20380	0					
ANR	24581	Argument	"format_linenum ( numbuf1 , p_repl_lines )"		20380	3					
ANR	24582	CallExpression	"format_linenum ( numbuf1 , p_repl_lines )"		20380	0					
ANR	24583	Callee	format_linenum		20380	0					
ANR	24584	Identifier	format_linenum		20380	0					
ANR	24585	ArgumentList	numbuf1		20380	1					
ANR	24586	Argument	numbuf1		20380	0					
ANR	24587	Identifier	numbuf1		20380	0					
ANR	24588	Argument	p_repl_lines		20380	1					
ANR	24589	Identifier	p_repl_lines		20380	0					
ANR	24590	ElseStatement	else		20380	0					
ANR	24591	IfStatement	if ( p_Char [ i ] != '^' )		20380	0					
ANR	24592	Condition	p_Char [ i ] != '^'	1929:14:53362:53377	20380	0	True				
ANR	24593	EqualityExpression	p_Char [ i ] != '^'		20380	0		!=			
ANR	24594	ArrayIndexing	p_Char [ i ]		20380	0					
ANR	24595	Identifier	p_Char		20380	0					
ANR	24596	Identifier	i		20380	1					
ANR	24597	PrimaryExpression	'^'		20380	1					
ANR	24598	CompoundStatement		760:7:21082:21082	20380	1					
ANR	24599	ExpressionStatement	"fputs ( "" |"" , stderr )"	1931:2:53391:53410	20380	0	True				
ANR	24600	CallExpression	"fputs ( "" |"" , stderr )"		20380	0					
ANR	24601	Callee	fputs		20380	0					
ANR	24602	Identifier	fputs		20380	0					
ANR	24603	ArgumentList	""" |"""		20380	1					
ANR	24604	Argument	""" |"""		20380	0					
ANR	24605	PrimaryExpression	""" |"""		20380	0					
ANR	24606	Argument	stderr		20380	1					
ANR	24607	Identifier	stderr		20380	0					
ANR	24608	ExpressionStatement	"pch_write_line ( i , stderr )"	1932:2:53414:53440	20380	1	True				
ANR	24609	CallExpression	"pch_write_line ( i , stderr )"		20380	0					
ANR	24610	Callee	pch_write_line		20380	0					
ANR	24611	Identifier	pch_write_line		20380	0					
ANR	24612	ArgumentList	i		20380	1					
ANR	24613	Argument	i		20380	0					
ANR	24614	Identifier	i		20380	0					
ANR	24615	Argument	stderr		20380	1					
ANR	24616	Identifier	stderr		20380	0					
ANR	24617	ElseStatement	else		20380	0					
ANR	24618	ExpressionStatement	"fputc ( '\\n' , stderr )"	1935:7:53468:53487	20380	0	True				
ANR	24619	CallExpression	"fputc ( '\\n' , stderr )"		20380	0					
ANR	24620	Callee	fputc		20380	0					
ANR	24621	Identifier	fputc		20380	0					
ANR	24622	ArgumentList	'\\n'		20380	1					
ANR	24623	Argument	'\\n'		20380	0					
ANR	24624	PrimaryExpression	'\\n'		20380	0					
ANR	24625	Argument	stderr		20380	1					
ANR	24626	Identifier	stderr		20380	0					
ANR	24627	ExpressionStatement	fflush ( stderr )	1937:1:53493:53508	20380	2	True				
ANR	24628	CallExpression	fflush ( stderr )		20380	0					
ANR	24629	Callee	fflush		20380	0					
ANR	24630	Identifier	fflush		20380	0					
ANR	24631	ArgumentList	stderr		20380	1					
ANR	24632	Argument	stderr		20380	0					
ANR	24633	Identifier	stderr		20380	0					
ANR	24634	ReturnStatement	return 1 ;	1939:4:53520:53528	20380	18	True				
ANR	24635	PrimaryExpression	1		20380	0					
ANR	24636	ReturnType	int		20380	1					
ANR	24637	Identifier	another_hunk		20380	2					
ANR	24638	ParameterList	"enum diff difftype , bool rev"		20380	3					
ANR	24639	Parameter	enum diff difftype	1170:14:32274:32291	20380	0	True				
ANR	24640	ParameterType	enum diff		20380	0					
ANR	24641	Identifier	difftype		20380	1					
ANR	24642	Parameter	bool rev	1170:34:32294:32301	20380	1	True				
ANR	24643	ParameterType	bool		20380	0					
ANR	24644	Identifier	rev		20380	1					
ANR	24645	CFGEntryNode	ENTRY		20380		True				
ANR	24646	CFGExitNode	EXIT		20380		True				
ANR	24647	Symbol	* filldst		20380						
ANR	24648	Symbol	chars_read		20380						
ANR	24649	Symbol	p_newfirst		20380						
ANR	24650	Symbol	canonicalize_ws		20380						
ANR	24651	Symbol	repl_patch_line		20380						
ANR	24652	Symbol	p_first		20380						
ANR	24653	Symbol	fillcnt		20380						
ANR	24654	Symbol	ISDIGIT		20380						
ANR	24655	Symbol	LINENUM_MAX		20380						
ANR	24656	Symbol	fillsrc		20380						
ANR	24657	Symbol	repl_could_be_missing		20380						
ANR	24658	Symbol	repl_beginning		20380						
ANR	24659	Symbol	strncmp		20380						
ANR	24660	Symbol	p_len		20380						
ANR	24661	Symbol	strlen		20380						
ANR	24662	Symbol	NEW_CONTEXT_DIFF		20380						
ANR	24663	Symbol	ptrn_prefix_context		20380						
ANR	24664	Symbol	repl_prefix_context		20380						
ANR	24665	Symbol	context		20380						
ANR	24666	Symbol	grow_hunkmax		20380						
ANR	24667	Symbol	p_Char		20380						
ANR	24668	Symbol	strnEQ		20380						
ANR	24669	Symbol	file_tell		20380						
ANR	24670	Symbol	* p_end		20380						
ANR	24671	Symbol	rev		20380						
ANR	24672	Symbol	* buf		20380						
ANR	24673	Symbol	NULL		20380						
ANR	24674	Symbol	ptrn_missing		20380						
ANR	24675	Symbol	pch_hunk_beg		20380						
ANR	24676	Symbol	* p_Char		20380						
ANR	24677	Symbol	stderr		20380						
ANR	24678	Symbol	repl_missing		20380						
ANR	24679	Symbol	savestr		20380						
ANR	24680	Symbol	true		20380						
ANR	24681	Symbol	pfp		20380						
ANR	24682	Symbol	p_efake		20380						
ANR	24683	Symbol	ptrn_spaces_eaten		20380						
ANR	24684	Symbol	* s ++		20380						
ANR	24685	Symbol	p_hunk_beg		20380						
ANR	24686	Symbol	p_max		20380						
ANR	24687	Symbol	repl_context		20380						
ANR	24688	Symbol	p_input_line		20380						
ANR	24689	Symbol	p_ptrn_lines		20380						
ANR	24690	Symbol	UNI_DIFF		20380						
ANR	24691	Symbol	p_bfake		20380						
ANR	24692	Symbol	scan_linenum		20380						
ANR	24693	Symbol	ptrn_copiable		20380						
ANR	24694	Symbol	repl_backtrack_position		20380						
ANR	24695	Symbol	& p_newfirst		20380						
ANR	24696	Symbol	pch_swap		20380						
ANR	24697	Symbol	& max		20380						
ANR	24698	Symbol	p_c_function		20380						
ANR	24699	Symbol	format_linenum		20380						
ANR	24700	Symbol	p_suffix_context		20380						
ANR	24701	Symbol	& p_ptrn_lines		20380						
ANR	24702	Symbol	min		20380						
ANR	24703	Symbol	& p_first		20380						
ANR	24704	Symbol	repl_copiable		20380						
ANR	24705	Symbol	CONTEXT_DIFF		20380						
ANR	24706	Symbol	p_end		20380						
ANR	24707	Symbol	VERBOSE		20380						
ANR	24708	Symbol	* p_line		20380						
ANR	24709	Symbol	SEEK_SET		20380						
ANR	24710	Symbol	numbuf0		20380						
ANR	24711	Symbol	& p_repl_lines		20380						
ANR	24712	Symbol	debug		20380						
ANR	24713	Symbol	numbuf3		20380						
ANR	24714	Symbol	hunk_type		20380						
ANR	24715	Symbol	diff_type		20380						
ANR	24716	Symbol	ch		20380						
ANR	24717	Symbol	max		20380						
ANR	24718	Symbol	numbuf1		20380						
ANR	24719	Symbol	some_context		20380						
ANR	24720	Symbol	* fillsrc		20380						
ANR	24721	Symbol	numbuf2		20380						
ANR	24722	Symbol	* p_len		20380						
ANR	24723	Symbol	false		20380						
ANR	24724	Symbol	ptrn_suffix_context		20380						
ANR	24725	Symbol	i		20380						
ANR	24726	Symbol	line_beginning		20380						
ANR	24727	Symbol	* ++ s		20380						
ANR	24728	Symbol	filldst		20380						
ANR	24729	Symbol	p_line		20380						
ANR	24730	Symbol	get_line		20380						
ANR	24731	Symbol	p_repl_lines		20380						
ANR	24732	Symbol	buf		20380						
ANR	24733	Symbol	s		20380						
ANR	24734	Symbol	* i		20380						
ANR	24735	Symbol	hunkmax		20380						
ANR	24736	Symbol	savebuf		20380						
ANR	24737	Symbol	difftype		20380						
ANR	24738	Symbol	incomplete_line		20380						
ANR	24739	Symbol	* s		20380						
ANR	24740	Symbol	verbosity		20380						
ANR	24741	Symbol	p_prefix_context		20380						
ANR	24742	Symbol	& min		20380						
ANR	24743	Function	get_line	1942:0:53533:53668							
ANR	24744	FunctionDef	get_line ()		24743	0					
ANR	24745	CompoundStatement		1944:0:53563:53668	24743	0					
ANR	24746	ReturnStatement	"return pget_line ( p_indent , p_rfc934_nesting , p_strip_trailing_cr , p_pass_comments_through ) ;"	1945:3:53568:53666	24743	0	True				
ANR	24747	CallExpression	"pget_line ( p_indent , p_rfc934_nesting , p_strip_trailing_cr , p_pass_comments_through )"		24743	0					
ANR	24748	Callee	pget_line		24743	0					
ANR	24749	Identifier	pget_line		24743	0					
ANR	24750	ArgumentList	p_indent		24743	1					
ANR	24751	Argument	p_indent		24743	0					
ANR	24752	Identifier	p_indent		24743	0					
ANR	24753	Argument	p_rfc934_nesting		24743	1					
ANR	24754	Identifier	p_rfc934_nesting		24743	0					
ANR	24755	Argument	p_strip_trailing_cr		24743	2					
ANR	24756	Identifier	p_strip_trailing_cr		24743	0					
ANR	24757	Argument	p_pass_comments_through		24743	3					
ANR	24758	Identifier	p_pass_comments_through		24743	0					
ANR	24759	ReturnType	static size_t		24743	1					
ANR	24760	Identifier	get_line		24743	2					
ANR	24761	ParameterList			24743	3					
ANR	24762	CFGEntryNode	ENTRY		24743		True				
ANR	24763	CFGExitNode	EXIT		24743		True				
ANR	24764	Symbol	p_strip_trailing_cr		24743						
ANR	24765	Symbol	pget_line		24743						
ANR	24766	Symbol	p_indent		24743						
ANR	24767	Symbol	p_rfc934_nesting		24743						
ANR	24768	Symbol	p_pass_comments_through		24743						
ANR	24769	Function	pget_line	1960:0:54297:55762							
ANR	24770	FunctionDef	"pget_line (size_t indent , int rfc934_nesting , bool strip_trailing_cr , bool pass_comments_through)"		24769	0					
ANR	24771	CompoundStatement		1963:0:54413:55762	24769	0					
ANR	24772	IdentifierDeclStatement	FILE * fp = pfp ;	1964:2:54417:54431	24769	0	True				
ANR	24773	IdentifierDecl	* fp = pfp		24769	0					
ANR	24774	IdentifierDeclType	FILE *		24769	0					
ANR	24775	Identifier	fp		24769	1					
ANR	24776	AssignmentExpression	* fp = pfp		24769	2		=			
ANR	24777	Identifier	pfp		24769	0					
ANR	24778	Identifier	pfp		24769	1					
ANR	24779	IdentifierDeclStatement	int c ;	1965:2:54435:54440	24769	1	True				
ANR	24780	IdentifierDecl	c		24769	0					
ANR	24781	IdentifierDeclType	int		24769	0					
ANR	24782	Identifier	c		24769	1					
ANR	24783	IdentifierDeclStatement	size_t i ;	1966:2:54444:54452	24769	2	True				
ANR	24784	IdentifierDecl	i		24769	0					
ANR	24785	IdentifierDeclType	size_t		24769	0					
ANR	24786	Identifier	i		24769	1					
ANR	24787	IdentifierDeclStatement	char * b ;	1967:2:54456:54463	24769	3	True				
ANR	24788	IdentifierDecl	* b		24769	0					
ANR	24789	IdentifierDeclType	char *		24769	0					
ANR	24790	Identifier	b		24769	1					
ANR	24791	IdentifierDeclStatement	size_t s ;	1968:2:54467:54475	24769	4	True				
ANR	24792	IdentifierDecl	s		24769	0					
ANR	24793	IdentifierDeclType	size_t		24769	0					
ANR	24794	Identifier	s		24769	1					
ANR	24795	DoStatement	do		24769	5					
ANR	24796	CompoundStatement		9:4:73:73	24769	0					
ANR	24797	ExpressionStatement	i = 0	1972:6:54495:54500	24769	0	True				
ANR	24798	AssignmentExpression	i = 0		24769	0		=			
ANR	24799	Identifier	i		24769	0					
ANR	24800	PrimaryExpression	0		24769	1					
ANR	24801	ForStatement	for ( ; ; )		24769	1					
ANR	24802	CompoundStatement		12:1:104:104	24769	0					
ANR	24803	ExpressionStatement	c = getc ( fp )	1975:3:54523:54536	24769	0	True				
ANR	24804	AssignmentExpression	c = getc ( fp )		24769	0		=			
ANR	24805	Identifier	c		24769	0					
ANR	24806	CallExpression	getc ( fp )		24769	1					
ANR	24807	Callee	getc		24769	0					
ANR	24808	Identifier	getc		24769	0					
ANR	24809	ArgumentList	fp		24769	1					
ANR	24810	Argument	fp		24769	0					
ANR	24811	Identifier	fp		24769	0					
ANR	24812	IfStatement	if ( c == EOF )		24769	1					
ANR	24813	Condition	c == EOF	1976:7:54545:54552	24769	0	True				
ANR	24814	EqualityExpression	c == EOF		24769	0		==			
ANR	24815	Identifier	c		24769	0					
ANR	24816	Identifier	EOF		24769	1					
ANR	24817	CompoundStatement		15:5:146:146	24769	1					
ANR	24818	IfStatement	if ( ferror ( fp ) )		24769	0					
ANR	24819	Condition	ferror ( fp )	1978:11:54573:54583	24769	0	True				
ANR	24820	CallExpression	ferror ( fp )		24769	0					
ANR	24821	Callee	ferror		24769	0					
ANR	24822	Identifier	ferror		24769	0					
ANR	24823	ArgumentList	fp		24769	1					
ANR	24824	Argument	fp		24769	0					
ANR	24825	Identifier	fp		24769	0					
ANR	24826	ExpressionStatement	read_fatal ( )	1979:2:54588:54601	24769	1	True				
ANR	24827	CallExpression	read_fatal ( )		24769	0					
ANR	24828	Callee	read_fatal		24769	0					
ANR	24829	Identifier	read_fatal		24769	0					
ANR	24830	ArgumentList			24769	1					
ANR	24831	ReturnStatement	return 0 ;	1980:7:54610:54618	24769	1	True				
ANR	24832	PrimaryExpression	0		24769	0					
ANR	24833	IfStatement	if ( indent <= i )		24769	2					
ANR	24834	Condition	indent <= i	1982:7:54634:54644	24769	0	True				
ANR	24835	RelationalExpression	indent <= i		24769	0		<=			
ANR	24836	Identifier	indent		24769	0					
ANR	24837	Identifier	i		24769	1					
ANR	24838	BreakStatement	break ;	1983:5:54652:54657	24769	1	True				
ANR	24839	IfStatement	if ( c == ' ' || c == 'X' )		24769	3					
ANR	24840	Condition	c == ' ' || c == 'X'	1984:7:54666:54685	24769	0	True				
ANR	24841	OrExpression	c == ' ' || c == 'X'		24769	0		||			
ANR	24842	EqualityExpression	c == ' '		24769	0		==			
ANR	24843	Identifier	c		24769	0					
ANR	24844	PrimaryExpression	' '		24769	1					
ANR	24845	EqualityExpression	c == 'X'		24769	1		==			
ANR	24846	Identifier	c		24769	0					
ANR	24847	PrimaryExpression	'X'		24769	1					
ANR	24848	ExpressionStatement	i ++	1985:5:54693:54696	24769	1	True				
ANR	24849	PostIncDecOperationExpression	i ++		24769	0					
ANR	24850	Identifier	i		24769	0					
ANR	24851	IncDec	++		24769	1					
ANR	24852	ElseStatement	else		24769	0					
ANR	24853	IfStatement	if ( c == '\\t' )		24769	0					
ANR	24854	Condition	c == '\\t'	1986:12:54710:54718	24769	0	True				
ANR	24855	EqualityExpression	c == '\\t'		24769	0		==			
ANR	24856	Identifier	c		24769	0					
ANR	24857	PrimaryExpression	'\\t'		24769	1					
ANR	24858	ExpressionStatement	i = ( i + 8 ) & ~7	1987:5:54726:54742	24769	1	True				
ANR	24859	AssignmentExpression	i = ( i + 8 ) & ~7		24769	0		=			
ANR	24860	Identifier	i		24769	0					
ANR	24861	BitAndExpression	( i + 8 ) & ~7		24769	1		&			
ANR	24862	AdditiveExpression	i + 8		24769	0		+			
ANR	24863	Identifier	i		24769	0					
ANR	24864	PrimaryExpression	8		24769	1					
ANR	24865	Identifier	~7		24769	1					
ANR	24866	ElseStatement	else		24769	0					
ANR	24867	BreakStatement	break ;	1989:5:54757:54762	24769	0	True				
ANR	24868	ExpressionStatement	i = 0	1992:6:54774:54779	24769	2	True				
ANR	24869	AssignmentExpression	i = 0		24769	0		=			
ANR	24870	Identifier	i		24769	0					
ANR	24871	PrimaryExpression	0		24769	1					
ANR	24872	ExpressionStatement	b = buf	1993:6:54787:54794	24769	3	True				
ANR	24873	AssignmentExpression	b = buf		24769	0		=			
ANR	24874	Identifier	b		24769	0					
ANR	24875	Identifier	buf		24769	1					
ANR	24876	WhileStatement	while ( c == '-' && 0 <= -- rfc934_nesting )		24769	4					
ANR	24877	Condition	c == '-' && 0 <= -- rfc934_nesting	1995:13:54810:54842	24769	0	True				
ANR	24878	AndExpression	c == '-' && 0 <= -- rfc934_nesting		24769	0		&&			
ANR	24879	EqualityExpression	c == '-'		24769	0		==			
ANR	24880	Identifier	c		24769	0					
ANR	24881	PrimaryExpression	'-'		24769	1					
ANR	24882	RelationalExpression	0 <= -- rfc934_nesting		24769	1		<=			
ANR	24883	PrimaryExpression	0		24769	0					
ANR	24884	UnaryExpression	-- rfc934_nesting		24769	1					
ANR	24885	IncDec	--		24769	0					
ANR	24886	Identifier	rfc934_nesting		24769	1					
ANR	24887	CompoundStatement		34:1:432:432	24769	1					
ANR	24888	ExpressionStatement	c = getc ( fp )	1997:3:54851:54864	24769	0	True				
ANR	24889	AssignmentExpression	c = getc ( fp )		24769	0		=			
ANR	24890	Identifier	c		24769	0					
ANR	24891	CallExpression	getc ( fp )		24769	1					
ANR	24892	Callee	getc		24769	0					
ANR	24893	Identifier	getc		24769	0					
ANR	24894	ArgumentList	fp		24769	1					
ANR	24895	Argument	fp		24769	0					
ANR	24896	Identifier	fp		24769	0					
ANR	24897	IfStatement	if ( c == EOF )		24769	1					
ANR	24898	Condition	c == EOF	1998:7:54873:54880	24769	0	True				
ANR	24899	EqualityExpression	c == EOF		24769	0		==			
ANR	24900	Identifier	c		24769	0					
ANR	24901	Identifier	EOF		24769	1					
ANR	24902	GotoStatement	goto patch_ends_in_middle_of_line ;	1999:5:54888:54921	24769	1	True				
ANR	24903	Identifier	patch_ends_in_middle_of_line		24769	0					
ANR	24904	IfStatement	if ( c != ' ' )		24769	2					
ANR	24905	Condition	c != ' '	2000:7:54930:54937	24769	0	True				
ANR	24906	EqualityExpression	c != ' '		24769	0		!=			
ANR	24907	Identifier	c		24769	0					
ANR	24908	PrimaryExpression	' '		24769	1					
ANR	24909	CompoundStatement		39:5:531:531	24769	1					
ANR	24910	ExpressionStatement	i = 1	2002:7:54954:54959	24769	0	True				
ANR	24911	AssignmentExpression	i = 1		24769	0		=			
ANR	24912	Identifier	i		24769	0					
ANR	24913	PrimaryExpression	1		24769	1					
ANR	24914	ExpressionStatement	b [ 0 ] = '-'	2003:7:54968:54978	24769	1	True				
ANR	24915	AssignmentExpression	b [ 0 ] = '-'		24769	0		=			
ANR	24916	ArrayIndexing	b [ 0 ]		24769	0					
ANR	24917	Identifier	b		24769	0					
ANR	24918	PrimaryExpression	0		24769	1					
ANR	24919	PrimaryExpression	'-'		24769	1					
ANR	24920	BreakStatement	break ;	2004:7:54987:54992	24769	2	True				
ANR	24921	ExpressionStatement	c = getc ( fp )	2006:3:55004:55017	24769	3	True				
ANR	24922	AssignmentExpression	c = getc ( fp )		24769	0		=			
ANR	24923	Identifier	c		24769	0					
ANR	24924	CallExpression	getc ( fp )		24769	1					
ANR	24925	Callee	getc		24769	0					
ANR	24926	Identifier	getc		24769	0					
ANR	24927	ArgumentList	fp		24769	1					
ANR	24928	Argument	fp		24769	0					
ANR	24929	Identifier	fp		24769	0					
ANR	24930	IfStatement	if ( c == EOF )		24769	4					
ANR	24931	Condition	c == EOF	2007:7:55026:55033	24769	0	True				
ANR	24932	EqualityExpression	c == EOF		24769	0		==			
ANR	24933	Identifier	c		24769	0					
ANR	24934	Identifier	EOF		24769	1					
ANR	24935	GotoStatement	goto patch_ends_in_middle_of_line ;	2008:5:55041:55074	24769	1	True				
ANR	24936	Identifier	patch_ends_in_middle_of_line		24769	0					
ANR	24937	ExpressionStatement	s = bufsize	2011:6:55086:55097	24769	5	True				
ANR	24938	AssignmentExpression	s = bufsize		24769	0		=			
ANR	24939	Identifier	s		24769	0					
ANR	24940	Identifier	bufsize		24769	1					
ANR	24941	ForStatement	for ( ; ; )		24769	6					
ANR	24942	CompoundStatement		52:1:702:702	24769	0					
ANR	24943	IfStatement	if ( i == s - 1 )		24769	0					
ANR	24944	Condition	i == s - 1	2015:7:55125:55134	24769	0	True				
ANR	24945	EqualityExpression	i == s - 1		24769	0		==			
ANR	24946	Identifier	i		24769	0					
ANR	24947	AdditiveExpression	s - 1		24769	1		-			
ANR	24948	Identifier	s		24769	0					
ANR	24949	PrimaryExpression	1		24769	1					
ANR	24950	CompoundStatement		54:5:728:728	24769	1					
ANR	24951	ExpressionStatement	s *= 2	2017:7:55151:55157	24769	0	True				
ANR	24952	AssignmentExpression	s *= 2		24769	0		*=			
ANR	24953	Identifier	s		24769	0					
ANR	24954	PrimaryExpression	2		24769	1					
ANR	24955	ExpressionStatement	"b = realloc ( b , s )"	2018:7:55166:55184	24769	1	True				
ANR	24956	AssignmentExpression	"b = realloc ( b , s )"		24769	0		=			
ANR	24957	Identifier	b		24769	0					
ANR	24958	CallExpression	"realloc ( b , s )"		24769	1					
ANR	24959	Callee	realloc		24769	0					
ANR	24960	Identifier	realloc		24769	0					
ANR	24961	ArgumentList	b		24769	1					
ANR	24962	Argument	b		24769	0					
ANR	24963	Identifier	b		24769	0					
ANR	24964	Argument	s		24769	1					
ANR	24965	Identifier	s		24769	0					
ANR	24966	IfStatement	if ( ! b )		24769	2					
ANR	24967	Condition	! b	2019:11:55197:55198	24769	0	True				
ANR	24968	UnaryOperationExpression	! b		24769	0					
ANR	24969	UnaryOperator	!		24769	0					
ANR	24970	Identifier	b		24769	1					
ANR	24971	CompoundStatement		58:2:789:789	24769	1					
ANR	24972	IfStatement	if ( ! using_plan_a )		24769	0					
ANR	24973	Condition	! using_plan_a	2021:8:55213:55225	24769	0	True				
ANR	24974	UnaryOperationExpression	! using_plan_a		24769	0					
ANR	24975	UnaryOperator	!		24769	0					
ANR	24976	Identifier	using_plan_a		24769	1					
ANR	24977	ExpressionStatement	xalloc_die ( )	2022:6:55234:55247	24769	1	True				
ANR	24978	CallExpression	xalloc_die ( )		24769	0					
ANR	24979	Callee	xalloc_die		24769	0					
ANR	24980	Identifier	xalloc_die		24769	0					
ANR	24981	ArgumentList			24769	1					
ANR	24982	ReturnStatement	return ( size_t ) - 1 ;	2023:4:55253:55271	24769	1	True				
ANR	24983	CastExpression	( size_t ) - 1		24769	0					
ANR	24984	CastTarget	size_t		24769	0					
ANR	24985	UnaryOperationExpression	- 1		24769	1					
ANR	24986	UnaryOperator	-		24769	0					
ANR	24987	PrimaryExpression	1		24769	1					
ANR	24988	ExpressionStatement	buf = b	2025:7:55284:55291	24769	3	True				
ANR	24989	AssignmentExpression	buf = b		24769	0		=			
ANR	24990	Identifier	buf		24769	0					
ANR	24991	Identifier	b		24769	1					
ANR	24992	ExpressionStatement	bufsize = s	2026:7:55300:55311	24769	4	True				
ANR	24993	AssignmentExpression	bufsize = s		24769	0		=			
ANR	24994	Identifier	bufsize		24769	0					
ANR	24995	Identifier	s		24769	1					
ANR	24996	ExpressionStatement	b [ i ++ ] = c	2028:3:55323:55333	24769	1	True				
ANR	24997	AssignmentExpression	b [ i ++ ] = c		24769	0		=			
ANR	24998	ArrayIndexing	b [ i ++ ]		24769	0					
ANR	24999	Identifier	b		24769	0					
ANR	25000	PostIncDecOperationExpression	i ++		24769	1					
ANR	25001	Identifier	i		24769	0					
ANR	25002	IncDec	++		24769	1					
ANR	25003	Identifier	c		24769	1					
ANR	25004	IfStatement	if ( c == '\\n' )		24769	2					
ANR	25005	Condition	c == '\\n'	2029:7:55342:55350	24769	0	True				
ANR	25006	EqualityExpression	c == '\\n'		24769	0		==			
ANR	25007	Identifier	c		24769	0					
ANR	25008	PrimaryExpression	'\\n'		24769	1					
ANR	25009	BreakStatement	break ;	2030:5:55358:55363	24769	1	True				
ANR	25010	ExpressionStatement	c = getc ( fp )	2031:3:55368:55381	24769	3	True				
ANR	25011	AssignmentExpression	c = getc ( fp )		24769	0		=			
ANR	25012	Identifier	c		24769	0					
ANR	25013	CallExpression	getc ( fp )		24769	1					
ANR	25014	Callee	getc		24769	0					
ANR	25015	Identifier	getc		24769	0					
ANR	25016	ArgumentList	fp		24769	1					
ANR	25017	Argument	fp		24769	0					
ANR	25018	Identifier	fp		24769	0					
ANR	25019	IfStatement	if ( c == EOF )		24769	4					
ANR	25020	Condition	c == EOF	2032:7:55390:55397	24769	0	True				
ANR	25021	EqualityExpression	c == EOF		24769	0		==			
ANR	25022	Identifier	c		24769	0					
ANR	25023	Identifier	EOF		24769	1					
ANR	25024	GotoStatement	goto patch_ends_in_middle_of_line ;	2033:5:55405:55438	24769	1	True				
ANR	25025	Identifier	patch_ends_in_middle_of_line		24769	0					
ANR	25026	ExpressionStatement	p_input_line ++	2036:6:55450:55464	24769	7	True				
ANR	25027	PostIncDecOperationExpression	p_input_line ++		24769	0					
ANR	25028	Identifier	p_input_line		24769	0					
ANR	25029	IncDec	++		24769	1					
ANR	25030	Condition	* b == '#' && ! pass_comments_through	2038:9:55481:55515	24769	1	True				
ANR	25031	AndExpression	* b == '#' && ! pass_comments_through		24769	0		&&			
ANR	25032	EqualityExpression	* b == '#'		24769	0		==			
ANR	25033	UnaryOperationExpression	* b		24769	0					
ANR	25034	UnaryOperator	*		24769	0					
ANR	25035	Identifier	b		24769	1					
ANR	25036	PrimaryExpression	'#'		24769	1					
ANR	25037	UnaryOperationExpression	! pass_comments_through		24769	1					
ANR	25038	UnaryOperator	!		24769	0					
ANR	25039	Identifier	pass_comments_through		24769	1					
ANR	25040	IfStatement	if ( strip_trailing_cr && 2 <= i && b [ i - 2 ] == '\\r' )		24769	6					
ANR	25041	Condition	strip_trailing_cr && 2 <= i && b [ i - 2 ] == '\\r'	2040:6:55526:55572	24769	0	True				
ANR	25042	AndExpression	strip_trailing_cr && 2 <= i && b [ i - 2 ] == '\\r'		24769	0		&&			
ANR	25043	Identifier	strip_trailing_cr		24769	0					
ANR	25044	AndExpression	2 <= i && b [ i - 2 ] == '\\r'		24769	1		&&			
ANR	25045	RelationalExpression	2 <= i		24769	0		<=			
ANR	25046	PrimaryExpression	2		24769	0					
ANR	25047	Identifier	i		24769	1					
ANR	25048	EqualityExpression	b [ i - 2 ] == '\\r'		24769	1		==			
ANR	25049	ArrayIndexing	b [ i - 2 ]		24769	0					
ANR	25050	Identifier	b		24769	0					
ANR	25051	AdditiveExpression	i - 2		24769	1		-			
ANR	25052	Identifier	i		24769	0					
ANR	25053	PrimaryExpression	2		24769	1					
ANR	25054	PrimaryExpression	'\\r'		24769	1					
ANR	25055	ExpressionStatement	b [ i -- - 2 ] = '\\n'	2041:4:55579:55596	24769	1	True				
ANR	25056	AssignmentExpression	b [ i -- - 2 ] = '\\n'		24769	0		=			
ANR	25057	ArrayIndexing	b [ i -- - 2 ]		24769	0					
ANR	25058	Identifier	b		24769	0					
ANR	25059	AdditiveExpression	i -- - 2		24769	1		-			
ANR	25060	PostIncDecOperationExpression	i --		24769	0					
ANR	25061	Identifier	i		24769	0					
ANR	25062	IncDec	--		24769	1					
ANR	25063	PrimaryExpression	2		24769	1					
ANR	25064	PrimaryExpression	'\\n'		24769	1					
ANR	25065	ExpressionStatement	b [ i ] = '\\0'	2042:2:55600:55611	24769	7	True				
ANR	25066	AssignmentExpression	b [ i ] = '\\0'		24769	0		=			
ANR	25067	ArrayIndexing	b [ i ]		24769	0					
ANR	25068	Identifier	b		24769	0					
ANR	25069	Identifier	i		24769	1					
ANR	25070	PrimaryExpression	'\\0'		24769	1					
ANR	25071	ReturnStatement	return i ;	2043:2:55615:55623	24769	8	True				
ANR	25072	Identifier	i		24769	0					
ANR	25073	Label	patch_ends_in_middle_of_line :	2045:1:55627:55655	24769	9	True				
ANR	25074	Identifier	patch_ends_in_middle_of_line		24769	0					
ANR	25075	IfStatement	if ( ferror ( fp ) )		24769	10					
ANR	25076	Condition	ferror ( fp )	2046:6:55663:55673	24769	0	True				
ANR	25077	CallExpression	ferror ( fp )		24769	0					
ANR	25078	Callee	ferror		24769	0					
ANR	25079	Identifier	ferror		24769	0					
ANR	25080	ArgumentList	fp		24769	1					
ANR	25081	Argument	fp		24769	0					
ANR	25082	Identifier	fp		24769	0					
ANR	25083	ExpressionStatement	read_fatal ( )	2047:4:55680:55693	24769	1	True				
ANR	25084	CallExpression	read_fatal ( )		24769	0					
ANR	25085	Callee	read_fatal		24769	0					
ANR	25086	Identifier	read_fatal		24769	0					
ANR	25087	ArgumentList			24769	1					
ANR	25088	ExpressionStatement	"say ( ""patch unexpectedly ends in middle of line\\n"" )"	2048:2:55697:55748	24769	11	True				
ANR	25089	CallExpression	"say ( ""patch unexpectedly ends in middle of line\\n"" )"		24769	0					
ANR	25090	Callee	say		24769	0					
ANR	25091	Identifier	say		24769	0					
ANR	25092	ArgumentList	"""patch unexpectedly ends in middle of line\\n"""		24769	1					
ANR	25093	Argument	"""patch unexpectedly ends in middle of line\\n"""		24769	0					
ANR	25094	PrimaryExpression	"""patch unexpectedly ends in middle of line\\n"""		24769	0					
ANR	25095	ReturnStatement	return 0 ;	2049:2:55752:55760	24769	12	True				
ANR	25096	PrimaryExpression	0		24769	0					
ANR	25097	ReturnType	static size_t		24769	1					
ANR	25098	Identifier	pget_line		24769	2					
ANR	25099	ParameterList	"size_t indent , int rfc934_nesting , bool strip_trailing_cr , bool pass_comments_through"		24769	3					
ANR	25100	Parameter	size_t indent	1961:11:54322:54334	24769	0	True				
ANR	25101	ParameterType	size_t		24769	0					
ANR	25102	Identifier	indent		24769	1					
ANR	25103	Parameter	int rfc934_nesting	1961:26:54337:54354	24769	1	True				
ANR	25104	ParameterType	int		24769	0					
ANR	25105	Identifier	rfc934_nesting		24769	1					
ANR	25106	Parameter	bool strip_trailing_cr	1961:46:54357:54378	24769	2	True				
ANR	25107	ParameterType	bool		24769	0					
ANR	25108	Identifier	strip_trailing_cr		24769	1					
ANR	25109	Parameter	bool pass_comments_through	1962:4:54385:54410	24769	3	True				
ANR	25110	ParameterType	bool		24769	0					
ANR	25111	Identifier	pass_comments_through		24769	1					
ANR	25112	CFGEntryNode	ENTRY		24769		True				
ANR	25113	CFGExitNode	EXIT		24769		True				
ANR	25114	InfiniteForNode	true		24769		True				
ANR	25115	InfiniteForNode	true		24769		True				
ANR	25116	Symbol	b		24769						
ANR	25117	Symbol	p_input_line		24769						
ANR	25118	Symbol	c		24769						
ANR	25119	Symbol	indent		24769						
ANR	25120	Symbol	bufsize		24769						
ANR	25121	Symbol	i		24769						
ANR	25122	Symbol	fp		24769						
ANR	25123	Symbol	realloc		24769						
ANR	25124	Symbol	* b		24769						
ANR	25125	Symbol	ferror		24769						
ANR	25126	Symbol	buf		24769						
ANR	25127	Symbol	s		24769						
ANR	25128	Symbol	* i		24769						
ANR	25129	Symbol	strip_trailing_cr		24769						
ANR	25130	Symbol	rfc934_nesting		24769						
ANR	25131	Symbol	~7		24769						
ANR	25132	Symbol	pass_comments_through		24769						
ANR	25133	Symbol	pfp		24769						
ANR	25134	Symbol	getc		24769						
ANR	25135	Symbol	EOF		24769						
ANR	25136	Symbol	using_plan_a		24769						
ANR	25137	Function	incomplete_line	2052:0:55765:56125							
ANR	25138	FunctionDef	incomplete_line ()		25137	0					
ANR	25139	CompoundStatement		2054:0:55800:56125	25137	0					
ANR	25140	IdentifierDeclStatement	FILE * fp = pfp ;	2055:2:55804:55818	25137	0	True				
ANR	25141	IdentifierDecl	* fp = pfp		25137	0					
ANR	25142	IdentifierDeclType	FILE *		25137	0					
ANR	25143	Identifier	fp		25137	1					
ANR	25144	AssignmentExpression	* fp = pfp		25137	2		=			
ANR	25145	Identifier	pfp		25137	0					
ANR	25146	Identifier	pfp		25137	1					
ANR	25147	IdentifierDeclStatement	int c ;	2056:2:55822:55827	25137	1	True				
ANR	25148	IdentifierDecl	c		25137	0					
ANR	25149	IdentifierDeclType	int		25137	0					
ANR	25150	Identifier	c		25137	1					
ANR	25151	IdentifierDeclStatement	file_offset line_beginning = file_tell ( fp ) ;	2057:2:55831:55874	25137	2	True				
ANR	25152	IdentifierDecl	line_beginning = file_tell ( fp )		25137	0					
ANR	25153	IdentifierDeclType	file_offset		25137	0					
ANR	25154	Identifier	line_beginning		25137	1					
ANR	25155	AssignmentExpression	line_beginning = file_tell ( fp )		25137	2		=			
ANR	25156	Identifier	line_beginning		25137	0					
ANR	25157	CallExpression	file_tell ( fp )		25137	1					
ANR	25158	Callee	file_tell		25137	0					
ANR	25159	Identifier	file_tell		25137	0					
ANR	25160	ArgumentList	fp		25137	1					
ANR	25161	Argument	fp		25137	0					
ANR	25162	Identifier	fp		25137	0					
ANR	25163	IfStatement	if ( getc ( fp ) == '\\\\' )		25137	3					
ANR	25164	Condition	getc ( fp ) == '\\\\'	2059:6:55883:55899	25137	0	True				
ANR	25165	EqualityExpression	getc ( fp ) == '\\\\'		25137	0		==			
ANR	25166	CallExpression	getc ( fp )		25137	0					
ANR	25167	Callee	getc		25137	0					
ANR	25168	Identifier	getc		25137	0					
ANR	25169	ArgumentList	fp		25137	1					
ANR	25170	Argument	fp		25137	0					
ANR	25171	Identifier	fp		25137	0					
ANR	25172	PrimaryExpression	'\\\\'		25137	1					
ANR	25173	CompoundStatement		7:4:105:105	25137	1					
ANR	25174	WhileStatement	while ( ( c = getc ( fp ) ) != '\\n' && c != EOF )		25137	0					
ANR	25175	Condition	( c = getc ( fp ) ) != '\\n' && c != EOF	2061:13:55921:55957	25137	0	True				
ANR	25176	AndExpression	( c = getc ( fp ) ) != '\\n' && c != EOF		25137	0		&&			
ANR	25177	EqualityExpression	( c = getc ( fp ) ) != '\\n'		25137	0		!=			
ANR	25178	AssignmentExpression	c = getc ( fp )		25137	0		=			
ANR	25179	Identifier	c		25137	0					
ANR	25180	CallExpression	getc ( fp )		25137	1					
ANR	25181	Callee	getc		25137	0					
ANR	25182	Identifier	getc		25137	0					
ANR	25183	ArgumentList	fp		25137	1					
ANR	25184	Argument	fp		25137	0					
ANR	25185	Identifier	fp		25137	0					
ANR	25186	PrimaryExpression	'\\n'		25137	1					
ANR	25187	EqualityExpression	c != EOF		25137	1		!=			
ANR	25188	Identifier	c		25137	0					
ANR	25189	Identifier	EOF		25137	1					
ANR	25190	ExpressionStatement		2062:18:55978:55978	25137	1	True				
ANR	25191	ReturnStatement	return true ;	2063:6:55986:55997	25137	1	True				
ANR	25192	Identifier	true		25137	0					
ANR	25193	ElseStatement	else		25137	0					
ANR	25194	CompoundStatement		13:4:215:215	25137	0					
ANR	25195	ExpressionStatement	"Fseek ( pfp , line_beginning , SEEK_SET )"	2068:6:56060:56097	25137	0	True				
ANR	25196	CallExpression	"Fseek ( pfp , line_beginning , SEEK_SET )"		25137	0					
ANR	25197	Callee	Fseek		25137	0					
ANR	25198	Identifier	Fseek		25137	0					
ANR	25199	ArgumentList	pfp		25137	1					
ANR	25200	Argument	pfp		25137	0					
ANR	25201	Identifier	pfp		25137	0					
ANR	25202	Argument	line_beginning		25137	1					
ANR	25203	Identifier	line_beginning		25137	0					
ANR	25204	Argument	SEEK_SET		25137	2					
ANR	25205	Identifier	SEEK_SET		25137	0					
ANR	25206	ReturnStatement	return false ;	2069:6:56105:56117	25137	1	True				
ANR	25207	Identifier	false		25137	0					
ANR	25208	ReturnType	static bool		25137	1					
ANR	25209	Identifier	incomplete_line		25137	2					
ANR	25210	ParameterList			25137	3					
ANR	25211	CFGEntryNode	ENTRY		25137		True				
ANR	25212	CFGExitNode	EXIT		25137		True				
ANR	25213	Symbol	SEEK_SET		25137						
ANR	25214	Symbol	c		25137						
ANR	25215	Symbol	true		25137						
ANR	25216	Symbol	false		25137						
ANR	25217	Symbol	fp		25137						
ANR	25218	Symbol	line_beginning		25137						
ANR	25219	Symbol	pfp		25137						
ANR	25220	Symbol	getc		25137						
ANR	25221	Symbol	EOF		25137						
ANR	25222	Symbol	file_tell		25137						
ANR	25223	Function	pch_swap	2075:0:56189:58142							
ANR	25224	FunctionDef	pch_swap ()		25223	0					
ANR	25225	CompoundStatement		2077:0:56210:58142	25223	0					
ANR	25226	IdentifierDeclStatement	char * * tp_line ;	2078:4:56216:56230	25223	0	True				
ANR	25227	IdentifierDecl	* * tp_line		25223	0					
ANR	25228	IdentifierDeclType	char * *		25223	0					
ANR	25229	Identifier	tp_line		25223	1					
ANR	25230	IdentifierDeclStatement	size_t * tp_len ;	2079:4:56264:56278	25223	1	True				
ANR	25231	IdentifierDecl	* tp_len		25223	0					
ANR	25232	IdentifierDeclType	size_t *		25223	0					
ANR	25233	Identifier	tp_len		25223	1					
ANR	25234	IdentifierDeclStatement	char * tp_char ;	2080:4:56311:56324	25223	2	True				
ANR	25235	IdentifierDecl	* tp_char		25223	0					
ANR	25236	IdentifierDeclType	char *		25223	0					
ANR	25237	Identifier	tp_char		25223	1					
ANR	25238	IdentifierDeclStatement	lin i ;	2081:4:56349:56354	25223	3	True				
ANR	25239	IdentifierDecl	i		25223	0					
ANR	25240	IdentifierDeclType	lin		25223	0					
ANR	25241	Identifier	i		25223	1					
ANR	25242	IdentifierDeclStatement	lin n ;	2082:4:56360:56365	25223	4	True				
ANR	25243	IdentifierDecl	n		25223	0					
ANR	25244	IdentifierDeclType	lin		25223	0					
ANR	25245	Identifier	n		25223	1					
ANR	25246	IdentifierDeclStatement	bool blankline = false ;	2083:4:56371:56393	25223	5	True				
ANR	25247	IdentifierDecl	blankline = false		25223	0					
ANR	25248	IdentifierDeclType	bool		25223	0					
ANR	25249	Identifier	blankline		25223	1					
ANR	25250	AssignmentExpression	blankline = false		25223	2		=			
ANR	25251	Identifier	false		25223	0					
ANR	25252	Identifier	false		25223	1					
ANR	25253	IdentifierDeclStatement	char * s ;	2084:4:56399:56406	25223	6	True				
ANR	25254	IdentifierDecl	* s		25223	0					
ANR	25255	IdentifierDeclType	char *		25223	0					
ANR	25256	Identifier	s		25223	1					
ANR	25257	ExpressionStatement	i = p_first	2086:4:56413:56424	25223	7	True				
ANR	25258	AssignmentExpression	i = p_first		25223	0		=			
ANR	25259	Identifier	i		25223	0					
ANR	25260	Identifier	p_first		25223	1					
ANR	25261	ExpressionStatement	p_first = p_newfirst	2087:4:56430:56450	25223	8	True				
ANR	25262	AssignmentExpression	p_first = p_newfirst		25223	0		=			
ANR	25263	Identifier	p_first		25223	0					
ANR	25264	Identifier	p_newfirst		25223	1					
ANR	25265	ExpressionStatement	p_newfirst = i	2088:4:56456:56470	25223	9	True				
ANR	25266	AssignmentExpression	p_newfirst = i		25223	0		=			
ANR	25267	Identifier	p_newfirst		25223	0					
ANR	25268	Identifier	i		25223	1					
ANR	25269	ExpressionStatement	tp_line = p_line	2092:4:56508:56524	25223	10	True				
ANR	25270	AssignmentExpression	tp_line = p_line		25223	0		=			
ANR	25271	Identifier	tp_line		25223	0					
ANR	25272	Identifier	p_line		25223	1					
ANR	25273	ExpressionStatement	tp_len = p_len	2093:4:56530:56544	25223	11	True				
ANR	25274	AssignmentExpression	tp_len = p_len		25223	0		=			
ANR	25275	Identifier	tp_len		25223	0					
ANR	25276	Identifier	p_len		25223	1					
ANR	25277	ExpressionStatement	tp_char = p_Char	2094:4:56550:56566	25223	12	True				
ANR	25278	AssignmentExpression	tp_char = p_Char		25223	0		=			
ANR	25279	Identifier	tp_char		25223	0					
ANR	25280	Identifier	p_Char		25223	1					
ANR	25281	ExpressionStatement	p_line = 0	2095:4:56572:56582	25223	13	True				
ANR	25282	AssignmentExpression	p_line = 0		25223	0		=			
ANR	25283	Identifier	p_line		25223	0					
ANR	25284	PrimaryExpression	0		25223	1					
ANR	25285	ExpressionStatement	p_len = 0	2096:4:56630:56639	25223	14	True				
ANR	25286	AssignmentExpression	p_len = 0		25223	0		=			
ANR	25287	Identifier	p_len		25223	0					
ANR	25288	PrimaryExpression	0		25223	1					
ANR	25289	ExpressionStatement	p_Char = 0	2097:4:56645:56655	25223	15	True				
ANR	25290	AssignmentExpression	p_Char = 0		25223	0		=			
ANR	25291	Identifier	p_Char		25223	0					
ANR	25292	PrimaryExpression	0		25223	1					
ANR	25293	ExpressionStatement	set_hunkmax ( )	2098:4:56661:56674	25223	16	True				
ANR	25294	CallExpression	set_hunkmax ( )		25223	0					
ANR	25295	Callee	set_hunkmax		25223	0					
ANR	25296	Identifier	set_hunkmax		25223	0					
ANR	25297	ArgumentList			25223	1					
ANR	25298	IfStatement	if ( ! p_line || ! p_len || ! p_Char )		25223	17					
ANR	25299	Condition	! p_line || ! p_len || ! p_Char	2099:8:56684:56711	25223	0	True				
ANR	25300	OrExpression	! p_line || ! p_len || ! p_Char		25223	0		||			
ANR	25301	UnaryOperationExpression	! p_line		25223	0					
ANR	25302	UnaryOperator	!		25223	0					
ANR	25303	Identifier	p_line		25223	1					
ANR	25304	OrExpression	! p_len || ! p_Char		25223	1		||			
ANR	25305	UnaryOperationExpression	! p_len		25223	0					
ANR	25306	UnaryOperator	!		25223	0					
ANR	25307	Identifier	p_len		25223	1					
ANR	25308	UnaryOperationExpression	! p_Char		25223	1					
ANR	25309	UnaryOperator	!		25223	0					
ANR	25310	Identifier	p_Char		25223	1					
ANR	25311	CompoundStatement		23:38:503:503	25223	1					
ANR	25312	ExpressionStatement	free ( p_line )	2100:1:56717:56730	25223	0	True				
ANR	25313	CallExpression	free ( p_line )		25223	0					
ANR	25314	Callee	free		25223	0					
ANR	25315	Identifier	free		25223	0					
ANR	25316	ArgumentList	p_line		25223	1					
ANR	25317	Argument	p_line		25223	0					
ANR	25318	Identifier	p_line		25223	0					
ANR	25319	ExpressionStatement	p_line = tp_line	2101:1:56733:56749	25223	1	True				
ANR	25320	AssignmentExpression	p_line = tp_line		25223	0		=			
ANR	25321	Identifier	p_line		25223	0					
ANR	25322	Identifier	tp_line		25223	1					
ANR	25323	ExpressionStatement	free ( p_len )	2102:1:56752:56764	25223	2	True				
ANR	25324	CallExpression	free ( p_len )		25223	0					
ANR	25325	Callee	free		25223	0					
ANR	25326	Identifier	free		25223	0					
ANR	25327	ArgumentList	p_len		25223	1					
ANR	25328	Argument	p_len		25223	0					
ANR	25329	Identifier	p_len		25223	0					
ANR	25330	ExpressionStatement	p_len = tp_len	2103:1:56767:56781	25223	3	True				
ANR	25331	AssignmentExpression	p_len = tp_len		25223	0		=			
ANR	25332	Identifier	p_len		25223	0					
ANR	25333	Identifier	tp_len		25223	1					
ANR	25334	ExpressionStatement	free ( p_Char )	2104:1:56784:56797	25223	4	True				
ANR	25335	CallExpression	free ( p_Char )		25223	0					
ANR	25336	Callee	free		25223	0					
ANR	25337	Identifier	free		25223	0					
ANR	25338	ArgumentList	p_Char		25223	1					
ANR	25339	Argument	p_Char		25223	0					
ANR	25340	Identifier	p_Char		25223	0					
ANR	25341	ExpressionStatement	p_Char = tp_char	2105:1:56800:56816	25223	5	True				
ANR	25342	AssignmentExpression	p_Char = tp_char		25223	0		=			
ANR	25343	Identifier	p_Char		25223	0					
ANR	25344	Identifier	tp_char		25223	1					
ANR	25345	ReturnStatement	return false ;	2106:1:56819:56831	25223	6	True				
ANR	25346	Identifier	false		25223	0					
ANR	25347	ExpressionStatement	i = p_ptrn_lines + 1	2111:4:56924:56944	25223	18	True				
ANR	25348	AssignmentExpression	i = p_ptrn_lines + 1		25223	0		=			
ANR	25349	Identifier	i		25223	0					
ANR	25350	AdditiveExpression	p_ptrn_lines + 1		25223	1		+			
ANR	25351	Identifier	p_ptrn_lines		25223	0					
ANR	25352	PrimaryExpression	1		25223	1					
ANR	25353	IfStatement	if ( tp_char [ i ] == '\\n' )		25223	19					
ANR	25354	Condition	tp_char [ i ] == '\\n'	2112:8:56954:56971	25223	0	True				
ANR	25355	EqualityExpression	tp_char [ i ] == '\\n'		25223	0		==			
ANR	25356	ArrayIndexing	tp_char [ i ]		25223	0					
ANR	25357	Identifier	tp_char		25223	0					
ANR	25358	Identifier	i		25223	1					
ANR	25359	PrimaryExpression	'\\n'		25223	1					
ANR	25360	CompoundStatement		36:28:763:763	25223	1					
ANR	25361	ExpressionStatement	blankline = true	2113:1:57016:57032	25223	0	True				
ANR	25362	AssignmentExpression	blankline = true		25223	0		=			
ANR	25363	Identifier	blankline		25223	0					
ANR	25364	Identifier	true		25223	1					
ANR	25365	ExpressionStatement	i ++	2114:1:57035:57038	25223	1	True				
ANR	25366	PostIncDecOperationExpression	i ++		25223	0					
ANR	25367	Identifier	i		25223	0					
ANR	25368	IncDec	++		25223	1					
ANR	25369	IfStatement	if ( p_efake >= 0 )		25223	20					
ANR	25370	Condition	p_efake >= 0	2116:8:57054:57065	25223	0	True				
ANR	25371	RelationalExpression	p_efake >= 0		25223	0		>=			
ANR	25372	Identifier	p_efake		25223	0					
ANR	25373	PrimaryExpression	0		25223	1					
ANR	25374	CompoundStatement		40:22:857:857	25223	1					
ANR	25375	IfStatement	if ( p_efake <= i )		25223	0					
ANR	25376	Condition	p_efake <= i	2117:5:57110:57121	25223	0	True				
ANR	25377	RelationalExpression	p_efake <= i		25223	0		<=			
ANR	25378	Identifier	p_efake		25223	0					
ANR	25379	Identifier	i		25223	1					
ANR	25380	ExpressionStatement	n = p_end - i + 1	2118:5:57129:57146	25223	1	True				
ANR	25381	AssignmentExpression	n = p_end - i + 1		25223	0		=			
ANR	25382	Identifier	n		25223	0					
ANR	25383	AdditiveExpression	p_end - i + 1		25223	1		-			
ANR	25384	Identifier	p_end		25223	0					
ANR	25385	AdditiveExpression	i + 1		25223	1		+			
ANR	25386	Identifier	i		25223	0					
ANR	25387	PrimaryExpression	1		25223	1					
ANR	25388	ElseStatement	else		25223	0					
ANR	25389	ExpressionStatement	n = - i	2120:5:57159:57165	25223	0	True				
ANR	25390	AssignmentExpression	n = - i		25223	0		=			
ANR	25391	Identifier	n		25223	0					
ANR	25392	UnaryOperationExpression	- i		25223	1					
ANR	25393	UnaryOperator	-		25223	0					
ANR	25394	Identifier	i		25223	1					
ANR	25395	ExpressionStatement	p_efake += n	2121:1:57168:57180	25223	1	True				
ANR	25396	AssignmentExpression	p_efake += n		25223	0		+=			
ANR	25397	Identifier	p_efake		25223	0					
ANR	25398	Identifier	n		25223	1					
ANR	25399	ExpressionStatement	p_bfake += n	2122:1:57183:57195	25223	2	True				
ANR	25400	AssignmentExpression	p_bfake += n		25223	0		+=			
ANR	25401	Identifier	p_bfake		25223	0					
ANR	25402	Identifier	n		25223	1					
ANR	25403	ForStatement	"for ( n = 0 ; i <= p_end ; i ++ , n ++ )"		25223	21					
ANR	25404	ForInit	n = 0 ;	2124:9:57212:57215	25223	0	True				
ANR	25405	AssignmentExpression	n = 0		25223	0		=			
ANR	25406	Identifier	n		25223	0					
ANR	25407	PrimaryExpression	0		25223	1					
ANR	25408	Condition	i <= p_end	2124:14:57217:57226	25223	1	True				
ANR	25409	RelationalExpression	i <= p_end		25223	0		<=			
ANR	25410	Identifier	i		25223	0					
ANR	25411	Identifier	p_end		25223	1					
ANR	25412	Expression	"i ++ , n ++"	2124:26:57229:57235	25223	2	True				
ANR	25413	PostIncDecOperationExpression	i ++		25223	0					
ANR	25414	Identifier	i		25223	0					
ANR	25415	IncDec	++		25223	1					
ANR	25416	PostIncDecOperationExpression	n ++		25223	1					
ANR	25417	Identifier	n		25223	0					
ANR	25418	IncDec	++		25223	1					
ANR	25419	CompoundStatement		48:35:1027:1027	25223	3					
ANR	25420	ExpressionStatement	p_line [ n ] = tp_line [ i ]	2125:1:57241:57263	25223	0	True				
ANR	25421	AssignmentExpression	p_line [ n ] = tp_line [ i ]		25223	0		=			
ANR	25422	ArrayIndexing	p_line [ n ]		25223	0					
ANR	25423	Identifier	p_line		25223	0					
ANR	25424	Identifier	n		25223	1					
ANR	25425	ArrayIndexing	tp_line [ i ]		25223	1					
ANR	25426	Identifier	tp_line		25223	0					
ANR	25427	Identifier	i		25223	1					
ANR	25428	ExpressionStatement	p_Char [ n ] = tp_char [ i ]	2126:1:57266:57288	25223	1	True				
ANR	25429	AssignmentExpression	p_Char [ n ] = tp_char [ i ]		25223	0		=			
ANR	25430	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25431	Identifier	p_Char		25223	0					
ANR	25432	Identifier	n		25223	1					
ANR	25433	ArrayIndexing	tp_char [ i ]		25223	1					
ANR	25434	Identifier	tp_char		25223	0					
ANR	25435	Identifier	i		25223	1					
ANR	25436	IfStatement	if ( p_Char [ n ] == '+' )		25223	2					
ANR	25437	Condition	p_Char [ n ] == '+'	2127:5:57295:57310	25223	0	True				
ANR	25438	EqualityExpression	p_Char [ n ] == '+'		25223	0		==			
ANR	25439	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25440	Identifier	p_Char		25223	0					
ANR	25441	Identifier	n		25223	1					
ANR	25442	PrimaryExpression	'+'		25223	1					
ANR	25443	ExpressionStatement	p_Char [ n ] = '-'	2128:5:57318:57333	25223	1	True				
ANR	25444	AssignmentExpression	p_Char [ n ] = '-'		25223	0		=			
ANR	25445	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25446	Identifier	p_Char		25223	0					
ANR	25447	Identifier	n		25223	1					
ANR	25448	PrimaryExpression	'-'		25223	1					
ANR	25449	ExpressionStatement	p_len [ n ] = tp_len [ i ]	2129:1:57336:57356	25223	3	True				
ANR	25450	AssignmentExpression	p_len [ n ] = tp_len [ i ]		25223	0		=			
ANR	25451	ArrayIndexing	p_len [ n ]		25223	0					
ANR	25452	Identifier	p_len		25223	0					
ANR	25453	Identifier	n		25223	1					
ANR	25454	ArrayIndexing	tp_len [ i ]		25223	1					
ANR	25455	Identifier	tp_len		25223	0					
ANR	25456	Identifier	i		25223	1					
ANR	25457	IfStatement	if ( blankline )		25223	22					
ANR	25458	Condition	blankline	2131:8:57372:57380	25223	0	True				
ANR	25459	Identifier	blankline		25223	0					
ANR	25460	CompoundStatement		55:19:1172:1172	25223	1					
ANR	25461	ExpressionStatement	i = p_ptrn_lines + 1	2132:1:57386:57406	25223	0	True				
ANR	25462	AssignmentExpression	i = p_ptrn_lines + 1		25223	0		=			
ANR	25463	Identifier	i		25223	0					
ANR	25464	AdditiveExpression	p_ptrn_lines + 1		25223	1		+			
ANR	25465	Identifier	p_ptrn_lines		25223	0					
ANR	25466	PrimaryExpression	1		25223	1					
ANR	25467	ExpressionStatement	p_line [ n ] = tp_line [ i ]	2133:1:57409:57431	25223	1	True				
ANR	25468	AssignmentExpression	p_line [ n ] = tp_line [ i ]		25223	0		=			
ANR	25469	ArrayIndexing	p_line [ n ]		25223	0					
ANR	25470	Identifier	p_line		25223	0					
ANR	25471	Identifier	n		25223	1					
ANR	25472	ArrayIndexing	tp_line [ i ]		25223	1					
ANR	25473	Identifier	tp_line		25223	0					
ANR	25474	Identifier	i		25223	1					
ANR	25475	ExpressionStatement	p_Char [ n ] = tp_char [ i ]	2134:1:57434:57456	25223	2	True				
ANR	25476	AssignmentExpression	p_Char [ n ] = tp_char [ i ]		25223	0		=			
ANR	25477	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25478	Identifier	p_Char		25223	0					
ANR	25479	Identifier	n		25223	1					
ANR	25480	ArrayIndexing	tp_char [ i ]		25223	1					
ANR	25481	Identifier	tp_char		25223	0					
ANR	25482	Identifier	i		25223	1					
ANR	25483	ExpressionStatement	p_len [ n ] = tp_len [ i ]	2135:1:57459:57479	25223	3	True				
ANR	25484	AssignmentExpression	p_len [ n ] = tp_len [ i ]		25223	0		=			
ANR	25485	ArrayIndexing	p_len [ n ]		25223	0					
ANR	25486	Identifier	p_len		25223	0					
ANR	25487	Identifier	n		25223	1					
ANR	25488	ArrayIndexing	tp_len [ i ]		25223	1					
ANR	25489	Identifier	tp_len		25223	0					
ANR	25490	Identifier	i		25223	1					
ANR	25491	ExpressionStatement	n ++	2136:1:57482:57485	25223	4	True				
ANR	25492	PostIncDecOperationExpression	n ++		25223	0					
ANR	25493	Identifier	n		25223	0					
ANR	25494	IncDec	++		25223	1					
ANR	25495	ExpressionStatement	assert ( p_Char [ 0 ] == '=' )	2138:4:57497:57521	25223	23	True				
ANR	25496	CallExpression	assert ( p_Char [ 0 ] == '=' )		25223	0					
ANR	25497	Callee	assert		25223	0					
ANR	25498	Identifier	assert		25223	0					
ANR	25499	ArgumentList	p_Char [ 0 ] == '='		25223	1					
ANR	25500	Argument	p_Char [ 0 ] == '='		25223	0					
ANR	25501	EqualityExpression	p_Char [ 0 ] == '='		25223	0		==			
ANR	25502	ArrayIndexing	p_Char [ 0 ]		25223	0					
ANR	25503	Identifier	p_Char		25223	0					
ANR	25504	PrimaryExpression	0		25223	1					
ANR	25505	PrimaryExpression	'='		25223	1					
ANR	25506	ExpressionStatement	p_Char [ 0 ] = '*'	2139:4:57527:57542	25223	24	True				
ANR	25507	AssignmentExpression	p_Char [ 0 ] = '*'		25223	0		=			
ANR	25508	ArrayIndexing	p_Char [ 0 ]		25223	0					
ANR	25509	Identifier	p_Char		25223	0					
ANR	25510	PrimaryExpression	0		25223	1					
ANR	25511	PrimaryExpression	'*'		25223	1					
ANR	25512	ForStatement	for ( s = p_line [ 0 ] ; * s ; s ++ )		25223	25					
ANR	25513	ForInit	s = p_line [ 0 ] ;	2140:9:57553:57564	25223	0	True				
ANR	25514	AssignmentExpression	s = p_line [ 0 ]		25223	0		=			
ANR	25515	Identifier	s		25223	0					
ANR	25516	ArrayIndexing	p_line [ 0 ]		25223	1					
ANR	25517	Identifier	p_line		25223	0					
ANR	25518	PrimaryExpression	0		25223	1					
ANR	25519	Condition	* s	2140:22:57566:57567	25223	1	True				
ANR	25520	UnaryOperationExpression	* s		25223	0					
ANR	25521	UnaryOperator	*		25223	0					
ANR	25522	Identifier	s		25223	1					
ANR	25523	PostIncDecOperationExpression	s ++	2140:26:57570:57572	25223	2	True				
ANR	25524	Identifier	s		25223	0					
ANR	25525	IncDec	++		25223	1					
ANR	25526	IfStatement	if ( * s == '-' )		25223	3					
ANR	25527	Condition	* s == '-'	2141:5:57580:57588	25223	0	True				
ANR	25528	EqualityExpression	* s == '-'		25223	0		==			
ANR	25529	UnaryOperationExpression	* s		25223	0					
ANR	25530	UnaryOperator	*		25223	0					
ANR	25531	Identifier	s		25223	1					
ANR	25532	PrimaryExpression	'-'		25223	1					
ANR	25533	ExpressionStatement	* s = '*'	2142:5:57596:57604	25223	1	True				
ANR	25534	AssignmentExpression	* s = '*'		25223	0		=			
ANR	25535	UnaryOperationExpression	* s		25223	0					
ANR	25536	UnaryOperator	*		25223	0					
ANR	25537	Identifier	s		25223	1					
ANR	25538	PrimaryExpression	'*'		25223	1					
ANR	25539	ExpressionStatement	assert ( tp_char [ 0 ] == '*' )	2146:4:57652:57677	25223	26	True				
ANR	25540	CallExpression	assert ( tp_char [ 0 ] == '*' )		25223	0					
ANR	25541	Callee	assert		25223	0					
ANR	25542	Identifier	assert		25223	0					
ANR	25543	ArgumentList	tp_char [ 0 ] == '*'		25223	1					
ANR	25544	Argument	tp_char [ 0 ] == '*'		25223	0					
ANR	25545	EqualityExpression	tp_char [ 0 ] == '*'		25223	0		==			
ANR	25546	ArrayIndexing	tp_char [ 0 ]		25223	0					
ANR	25547	Identifier	tp_char		25223	0					
ANR	25548	PrimaryExpression	0		25223	1					
ANR	25549	PrimaryExpression	'*'		25223	1					
ANR	25550	ExpressionStatement	tp_char [ 0 ] = '='	2147:4:57683:57699	25223	27	True				
ANR	25551	AssignmentExpression	tp_char [ 0 ] = '='		25223	0		=			
ANR	25552	ArrayIndexing	tp_char [ 0 ]		25223	0					
ANR	25553	Identifier	tp_char		25223	0					
ANR	25554	PrimaryExpression	0		25223	1					
ANR	25555	PrimaryExpression	'='		25223	1					
ANR	25556	ForStatement	for ( s = tp_line [ 0 ] ; * s ; s ++ )		25223	28					
ANR	25557	ForInit	s = tp_line [ 0 ] ;	2148:9:57710:57722	25223	0	True				
ANR	25558	AssignmentExpression	s = tp_line [ 0 ]		25223	0		=			
ANR	25559	Identifier	s		25223	0					
ANR	25560	ArrayIndexing	tp_line [ 0 ]		25223	1					
ANR	25561	Identifier	tp_line		25223	0					
ANR	25562	PrimaryExpression	0		25223	1					
ANR	25563	Condition	* s	2148:23:57724:57725	25223	1	True				
ANR	25564	UnaryOperationExpression	* s		25223	0					
ANR	25565	UnaryOperator	*		25223	0					
ANR	25566	Identifier	s		25223	1					
ANR	25567	PostIncDecOperationExpression	s ++	2148:27:57728:57730	25223	2	True				
ANR	25568	Identifier	s		25223	0					
ANR	25569	IncDec	++		25223	1					
ANR	25570	IfStatement	if ( * s == '*' )		25223	3					
ANR	25571	Condition	* s == '*'	2149:5:57738:57746	25223	0	True				
ANR	25572	EqualityExpression	* s == '*'		25223	0		==			
ANR	25573	UnaryOperationExpression	* s		25223	0					
ANR	25574	UnaryOperator	*		25223	0					
ANR	25575	Identifier	s		25223	1					
ANR	25576	PrimaryExpression	'*'		25223	1					
ANR	25577	ExpressionStatement	* s = '-'	2150:5:57754:57762	25223	1	True				
ANR	25578	AssignmentExpression	* s = '-'		25223	0		=			
ANR	25579	UnaryOperationExpression	* s		25223	0					
ANR	25580	UnaryOperator	*		25223	0					
ANR	25581	Identifier	s		25223	1					
ANR	25582	PrimaryExpression	'-'		25223	1					
ANR	25583	ForStatement	"for ( i = 0 ; n <= p_end ; i ++ , n ++ )"		25223	29					
ANR	25584	ForInit	i = 0 ;	2151:9:57773:57776	25223	0	True				
ANR	25585	AssignmentExpression	i = 0		25223	0		=			
ANR	25586	Identifier	i		25223	0					
ANR	25587	PrimaryExpression	0		25223	1					
ANR	25588	Condition	n <= p_end	2151:14:57778:57787	25223	1	True				
ANR	25589	RelationalExpression	n <= p_end		25223	0		<=			
ANR	25590	Identifier	n		25223	0					
ANR	25591	Identifier	p_end		25223	1					
ANR	25592	Expression	"i ++ , n ++"	2151:26:57790:57796	25223	2	True				
ANR	25593	PostIncDecOperationExpression	i ++		25223	0					
ANR	25594	Identifier	i		25223	0					
ANR	25595	IncDec	++		25223	1					
ANR	25596	PostIncDecOperationExpression	n ++		25223	1					
ANR	25597	Identifier	n		25223	0					
ANR	25598	IncDec	++		25223	1					
ANR	25599	CompoundStatement		75:35:1588:1588	25223	3					
ANR	25600	ExpressionStatement	p_line [ n ] = tp_line [ i ]	2152:1:57802:57824	25223	0	True				
ANR	25601	AssignmentExpression	p_line [ n ] = tp_line [ i ]		25223	0		=			
ANR	25602	ArrayIndexing	p_line [ n ]		25223	0					
ANR	25603	Identifier	p_line		25223	0					
ANR	25604	Identifier	n		25223	1					
ANR	25605	ArrayIndexing	tp_line [ i ]		25223	1					
ANR	25606	Identifier	tp_line		25223	0					
ANR	25607	Identifier	i		25223	1					
ANR	25608	ExpressionStatement	p_Char [ n ] = tp_char [ i ]	2153:1:57827:57849	25223	1	True				
ANR	25609	AssignmentExpression	p_Char [ n ] = tp_char [ i ]		25223	0		=			
ANR	25610	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25611	Identifier	p_Char		25223	0					
ANR	25612	Identifier	n		25223	1					
ANR	25613	ArrayIndexing	tp_char [ i ]		25223	1					
ANR	25614	Identifier	tp_char		25223	0					
ANR	25615	Identifier	i		25223	1					
ANR	25616	IfStatement	if ( p_Char [ n ] == '-' )		25223	2					
ANR	25617	Condition	p_Char [ n ] == '-'	2154:5:57856:57871	25223	0	True				
ANR	25618	EqualityExpression	p_Char [ n ] == '-'		25223	0		==			
ANR	25619	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25620	Identifier	p_Char		25223	0					
ANR	25621	Identifier	n		25223	1					
ANR	25622	PrimaryExpression	'-'		25223	1					
ANR	25623	ExpressionStatement	p_Char [ n ] = '+'	2155:5:57879:57894	25223	1	True				
ANR	25624	AssignmentExpression	p_Char [ n ] = '+'		25223	0		=			
ANR	25625	ArrayIndexing	p_Char [ n ]		25223	0					
ANR	25626	Identifier	p_Char		25223	0					
ANR	25627	Identifier	n		25223	1					
ANR	25628	PrimaryExpression	'+'		25223	1					
ANR	25629	ExpressionStatement	p_len [ n ] = tp_len [ i ]	2156:1:57897:57917	25223	3	True				
ANR	25630	AssignmentExpression	p_len [ n ] = tp_len [ i ]		25223	0		=			
ANR	25631	ArrayIndexing	p_len [ n ]		25223	0					
ANR	25632	Identifier	p_len		25223	0					
ANR	25633	Identifier	n		25223	1					
ANR	25634	ArrayIndexing	tp_len [ i ]		25223	1					
ANR	25635	Identifier	tp_len		25223	0					
ANR	25636	Identifier	i		25223	1					
ANR	25637	ExpressionStatement	assert ( i == p_ptrn_lines + 1 )	2158:4:57929:57958	25223	30	True				
ANR	25638	CallExpression	assert ( i == p_ptrn_lines + 1 )		25223	0					
ANR	25639	Callee	assert		25223	0					
ANR	25640	Identifier	assert		25223	0					
ANR	25641	ArgumentList	i == p_ptrn_lines + 1		25223	1					
ANR	25642	Argument	i == p_ptrn_lines + 1		25223	0					
ANR	25643	EqualityExpression	i == p_ptrn_lines + 1		25223	0		==			
ANR	25644	Identifier	i		25223	0					
ANR	25645	AdditiveExpression	p_ptrn_lines + 1		25223	1		+			
ANR	25646	Identifier	p_ptrn_lines		25223	0					
ANR	25647	PrimaryExpression	1		25223	1					
ANR	25648	ExpressionStatement	i = p_ptrn_lines	2159:4:57964:57980	25223	31	True				
ANR	25649	AssignmentExpression	i = p_ptrn_lines		25223	0		=			
ANR	25650	Identifier	i		25223	0					
ANR	25651	Identifier	p_ptrn_lines		25223	1					
ANR	25652	ExpressionStatement	p_ptrn_lines = p_repl_lines	2160:4:57986:58013	25223	32	True				
ANR	25653	AssignmentExpression	p_ptrn_lines = p_repl_lines		25223	0		=			
ANR	25654	Identifier	p_ptrn_lines		25223	0					
ANR	25655	Identifier	p_repl_lines		25223	1					
ANR	25656	ExpressionStatement	p_repl_lines = i	2161:4:58019:58035	25223	33	True				
ANR	25657	AssignmentExpression	p_repl_lines = i		25223	0		=			
ANR	25658	Identifier	p_repl_lines		25223	0					
ANR	25659	Identifier	i		25223	1					
ANR	25660	ExpressionStatement	p_Char [ p_end + 1 ] = '^'	2162:4:58041:58064	25223	34	True				
ANR	25661	AssignmentExpression	p_Char [ p_end + 1 ] = '^'		25223	0		=			
ANR	25662	ArrayIndexing	p_Char [ p_end + 1 ]		25223	0					
ANR	25663	Identifier	p_Char		25223	0					
ANR	25664	AdditiveExpression	p_end + 1		25223	1		+			
ANR	25665	Identifier	p_end		25223	0					
ANR	25666	PrimaryExpression	1		25223	1					
ANR	25667	PrimaryExpression	'^'		25223	1					
ANR	25668	ExpressionStatement	free ( tp_line )	2163:4:58070:58084	25223	35	True				
ANR	25669	CallExpression	free ( tp_line )		25223	0					
ANR	25670	Callee	free		25223	0					
ANR	25671	Identifier	free		25223	0					
ANR	25672	ArgumentList	tp_line		25223	1					
ANR	25673	Argument	tp_line		25223	0					
ANR	25674	Identifier	tp_line		25223	0					
ANR	25675	ExpressionStatement	free ( tp_len )	2164:4:58090:58103	25223	36	True				
ANR	25676	CallExpression	free ( tp_len )		25223	0					
ANR	25677	Callee	free		25223	0					
ANR	25678	Identifier	free		25223	0					
ANR	25679	ArgumentList	tp_len		25223	1					
ANR	25680	Argument	tp_len		25223	0					
ANR	25681	Identifier	tp_len		25223	0					
ANR	25682	ExpressionStatement	free ( tp_char )	2165:4:58109:58123	25223	37	True				
ANR	25683	CallExpression	free ( tp_char )		25223	0					
ANR	25684	Callee	free		25223	0					
ANR	25685	Identifier	free		25223	0					
ANR	25686	ArgumentList	tp_char		25223	1					
ANR	25687	Argument	tp_char		25223	0					
ANR	25688	Identifier	tp_char		25223	0					
ANR	25689	ReturnStatement	return true ;	2166:4:58129:58140	25223	38	True				
ANR	25690	Identifier	true		25223	0					
ANR	25691	ReturnType	bool		25223	1					
ANR	25692	Identifier	pch_swap		25223	2					
ANR	25693	ParameterList			25223	3					
ANR	25694	CFGEntryNode	ENTRY		25223		True				
ANR	25695	CFGExitNode	EXIT		25223		True				
ANR	25696	Symbol	p_ptrn_lines		25223						
ANR	25697	Symbol	p_newfirst		25223						
ANR	25698	Symbol	p_bfake		25223						
ANR	25699	Symbol	p_first		25223						
ANR	25700	Symbol	tp_line		25223						
ANR	25701	Symbol	* tp_len		25223						
ANR	25702	Symbol	p_len		25223						
ANR	25703	Symbol	tp_len		25223						
ANR	25704	Symbol	p_end		25223						
ANR	25705	Symbol	p_Char		25223						
ANR	25706	Symbol	* p_line		25223						
ANR	25707	Symbol	* tp_line		25223						
ANR	25708	Symbol	* p_end		25223						
ANR	25709	Symbol	tp_char		25223						
ANR	25710	Symbol	* p_len		25223						
ANR	25711	Symbol	false		25223						
ANR	25712	Symbol	i		25223						
ANR	25713	Symbol	* p_Char		25223						
ANR	25714	Symbol	n		25223						
ANR	25715	Symbol	p_line		25223						
ANR	25716	Symbol	blankline		25223						
ANR	25717	Symbol	p_repl_lines		25223						
ANR	25718	Symbol	s		25223						
ANR	25719	Symbol	* i		25223						
ANR	25720	Symbol	true		25223						
ANR	25721	Symbol	* n		25223						
ANR	25722	Symbol	* tp_char		25223						
ANR	25723	Symbol	* s		25223						
ANR	25724	Symbol	p_efake		25223						
ANR	25725	Function	pch_says_nonexistent	2172:0:58271:58347							
ANR	25726	FunctionDef	pch_says_nonexistent (bool which)		25725	0					
ANR	25727	CompoundStatement		2174:0:58309:58347	25725	0					
ANR	25728	ReturnStatement	return p_says_nonexistent [ which ] ;	2175:2:58313:58345	25725	0	True				
ANR	25729	ArrayIndexing	p_says_nonexistent [ which ]		25725	0					
ANR	25730	Identifier	p_says_nonexistent		25725	0					
ANR	25731	Identifier	which		25725	1					
ANR	25732	ReturnType	int		25725	1					
ANR	25733	Identifier	pch_says_nonexistent		25725	2					
ANR	25734	ParameterList	bool which		25725	3					
ANR	25735	Parameter	bool which	2173:22:58297:58306	25725	0	True				
ANR	25736	ParameterType	bool		25725	0					
ANR	25737	Identifier	which		25725	1					
ANR	25738	CFGEntryNode	ENTRY		25725		True				
ANR	25739	CFGExitNode	EXIT		25725		True				
ANR	25740	Symbol	which		25725						
ANR	25741	Symbol	* p_says_nonexistent		25725						
ANR	25742	Symbol	p_says_nonexistent		25725						
ANR	25743	Symbol	* which		25725						
ANR	25744	Function	pch_name	2178:0:58350:58440							
ANR	25745	FunctionDef	pch_name (enum nametype type)		25744	0					
ANR	25746	CompoundStatement		2180:0:58393:58440	25744	0					
ANR	25747	ReturnStatement	return type == NONE ? NULL : p_name [ type ] ;	2181:2:58397:58438	25744	0	True				
ANR	25748	ConditionalExpression	type == NONE ? NULL : p_name [ type ]		25744	0					
ANR	25749	Condition	type == NONE		25744	0					
ANR	25750	EqualityExpression	type == NONE		25744	0		==			
ANR	25751	Identifier	type		25744	0					
ANR	25752	Identifier	NONE		25744	1					
ANR	25753	Identifier	NULL		25744	1					
ANR	25754	ArrayIndexing	p_name [ type ]		25744	2					
ANR	25755	Identifier	p_name		25744	0					
ANR	25756	Identifier	type		25744	1					
ANR	25757	ReturnType	const char *		25744	1					
ANR	25758	Identifier	pch_name		25744	2					
ANR	25759	ParameterList	enum nametype type		25744	3					
ANR	25760	Parameter	enum nametype type	2179:10:58373:58390	25744	0	True				
ANR	25761	ParameterType	enum nametype		25744	0					
ANR	25762	Identifier	type		25744	1					
ANR	25763	CFGEntryNode	ENTRY		25744		True				
ANR	25764	CFGExitNode	EXIT		25744		True				
ANR	25765	Symbol	NULL		25744						
ANR	25766	Symbol	* p_name		25744						
ANR	25767	Symbol	* type		25744						
ANR	25768	Symbol	p_name		25744						
ANR	25769	Symbol	type		25744						
ANR	25770	Symbol	NONE		25744						
ANR	25771	Function	pch_copy	2184:0:58443:58503							
ANR	25772	FunctionDef	pch_copy ()		25771	0					
ANR	25773	CompoundStatement		2185:0:58464:58503	25771	0					
ANR	25774	ReturnStatement	return p_copy [ OLD ] && p_copy [ NEW ] ;	2186:2:58468:58501	25771	0	True				
ANR	25775	AndExpression	p_copy [ OLD ] && p_copy [ NEW ]		25771	0		&&			
ANR	25776	ArrayIndexing	p_copy [ OLD ]		25771	0					
ANR	25777	Identifier	p_copy		25771	0					
ANR	25778	Identifier	OLD		25771	1					
ANR	25779	ArrayIndexing	p_copy [ NEW ]		25771	1					
ANR	25780	Identifier	p_copy		25771	0					
ANR	25781	Identifier	NEW		25771	1					
ANR	25782	ReturnType	bool		25771	1					
ANR	25783	Identifier	pch_copy		25771	2					
ANR	25784	ParameterList			25771	3					
ANR	25785	CFGEntryNode	ENTRY		25771		True				
ANR	25786	CFGExitNode	EXIT		25771		True				
ANR	25787	Symbol	NEW		25771						
ANR	25788	Symbol	* NEW		25771						
ANR	25789	Symbol	OLD		25771						
ANR	25790	Symbol	* p_copy		25771						
ANR	25791	Symbol	p_copy		25771						
ANR	25792	Symbol	* OLD		25771						
ANR	25793	Function	pch_rename	2189:0:58506:58572							
ANR	25794	FunctionDef	pch_rename ()		25793	0					
ANR	25795	CompoundStatement		2190:0:58529:58572	25793	0					
ANR	25796	ReturnStatement	return p_rename [ OLD ] && p_rename [ NEW ] ;	2191:2:58533:58570	25793	0	True				
ANR	25797	AndExpression	p_rename [ OLD ] && p_rename [ NEW ]		25793	0		&&			
ANR	25798	ArrayIndexing	p_rename [ OLD ]		25793	0					
ANR	25799	Identifier	p_rename		25793	0					
ANR	25800	Identifier	OLD		25793	1					
ANR	25801	ArrayIndexing	p_rename [ NEW ]		25793	1					
ANR	25802	Identifier	p_rename		25793	0					
ANR	25803	Identifier	NEW		25793	1					
ANR	25804	ReturnType	bool		25793	1					
ANR	25805	Identifier	pch_rename		25793	2					
ANR	25806	ParameterList			25793	3					
ANR	25807	CFGEntryNode	ENTRY		25793		True				
ANR	25808	CFGExitNode	EXIT		25793		True				
ANR	25809	Symbol	NEW		25793						
ANR	25810	Symbol	p_rename		25793						
ANR	25811	Symbol	* NEW		25793						
ANR	25812	Symbol	OLD		25793						
ANR	25813	Symbol	* p_rename		25793						
ANR	25814	Symbol	* OLD		25793						
ANR	25815	Function	pch_first	2196:0:58653:58696							
ANR	25816	FunctionDef	pch_first ()		25815	0					
ANR	25817	CompoundStatement		2198:0:58674:58696	25815	0					
ANR	25818	ReturnStatement	return p_first ;	2199:4:58680:58694	25815	0	True				
ANR	25819	Identifier	p_first		25815	0					
ANR	25820	ReturnType	lin		25815	1					
ANR	25821	Identifier	pch_first		25815	2					
ANR	25822	ParameterList			25815	3					
ANR	25823	CFGEntryNode	ENTRY		25815		True				
ANR	25824	CFGExitNode	EXIT		25815		True				
ANR	25825	Symbol	p_first		25815						
ANR	25826	Function	pch_ptrn_lines	2204:0:58749:58802							
ANR	25827	FunctionDef	pch_ptrn_lines ()		25826	0					
ANR	25828	CompoundStatement		2206:0:58775:58802	25826	0					
ANR	25829	ReturnStatement	return p_ptrn_lines ;	2207:4:58781:58800	25826	0	True				
ANR	25830	Identifier	p_ptrn_lines		25826	0					
ANR	25831	ReturnType	lin		25826	1					
ANR	25832	Identifier	pch_ptrn_lines		25826	2					
ANR	25833	ParameterList			25826	3					
ANR	25834	CFGEntryNode	ENTRY		25826		True				
ANR	25835	CFGExitNode	EXIT		25826		True				
ANR	25836	Symbol	p_ptrn_lines		25826						
ANR	25837	Function	pch_newfirst	2212:0:58881:58930							
ANR	25838	FunctionDef	pch_newfirst ()		25837	0					
ANR	25839	CompoundStatement		2214:0:58905:58930	25837	0					
ANR	25840	ReturnStatement	return p_newfirst ;	2215:4:58911:58928	25837	0	True				
ANR	25841	Identifier	p_newfirst		25837	0					
ANR	25842	ReturnType	lin		25837	1					
ANR	25843	Identifier	pch_newfirst		25837	2					
ANR	25844	ParameterList			25837	3					
ANR	25845	CFGEntryNode	ENTRY		25837		True				
ANR	25846	CFGExitNode	EXIT		25837		True				
ANR	25847	Symbol	p_newfirst		25837						
ANR	25848	Function	pch_repl_lines	2220:0:59010:59063							
ANR	25849	FunctionDef	pch_repl_lines ()		25848	0					
ANR	25850	CompoundStatement		2222:0:59036:59063	25848	0					
ANR	25851	ReturnStatement	return p_repl_lines ;	2223:4:59042:59061	25848	0	True				
ANR	25852	Identifier	p_repl_lines		25848	0					
ANR	25853	ReturnType	lin		25848	1					
ANR	25854	Identifier	pch_repl_lines		25848	2					
ANR	25855	ParameterList			25848	3					
ANR	25856	CFGEntryNode	ENTRY		25848		True				
ANR	25857	CFGExitNode	EXIT		25848		True				
ANR	25858	Symbol	p_repl_lines		25848						
ANR	25859	Function	pch_end	2228:0:59119:59158							
ANR	25860	FunctionDef	pch_end ()		25859	0					
ANR	25861	CompoundStatement		2230:0:59138:59158	25859	0					
ANR	25862	ReturnStatement	return p_end ;	2231:4:59144:59156	25859	0	True				
ANR	25863	Identifier	p_end		25859	0					
ANR	25864	ReturnType	lin		25859	1					
ANR	25865	Identifier	pch_end		25859	2					
ANR	25866	ParameterList			25859	3					
ANR	25867	CFGEntryNode	ENTRY		25859		True				
ANR	25868	CFGExitNode	EXIT		25859		True				
ANR	25869	Symbol	p_end		25859						
ANR	25870	Function	pch_prefix_context	2236:0:59234:59295							
ANR	25871	FunctionDef	pch_prefix_context ()		25870	0					
ANR	25872	CompoundStatement		2238:0:59264:59295	25870	0					
ANR	25873	ReturnStatement	return p_prefix_context ;	2239:4:59270:59293	25870	0	True				
ANR	25874	Identifier	p_prefix_context		25870	0					
ANR	25875	ReturnType	lin		25870	1					
ANR	25876	Identifier	pch_prefix_context		25870	2					
ANR	25877	ParameterList			25870	3					
ANR	25878	CFGEntryNode	ENTRY		25870		True				
ANR	25879	CFGExitNode	EXIT		25870		True				
ANR	25880	Symbol	p_prefix_context		25870						
ANR	25881	Function	pch_suffix_context	2244:0:59369:59430							
ANR	25882	FunctionDef	pch_suffix_context ()		25881	0					
ANR	25883	CompoundStatement		2246:0:59399:59430	25881	0					
ANR	25884	ReturnStatement	return p_suffix_context ;	2247:4:59405:59428	25881	0	True				
ANR	25885	Identifier	p_suffix_context		25881	0					
ANR	25886	ReturnType	lin		25881	1					
ANR	25887	Identifier	pch_suffix_context		25881	2					
ANR	25888	ParameterList			25881	3					
ANR	25889	CFGEntryNode	ENTRY		25881		True				
ANR	25890	CFGExitNode	EXIT		25881		True				
ANR	25891	Symbol	p_suffix_context		25881						
ANR	25892	Function	pch_line_len	2252:0:59486:59543							
ANR	25893	FunctionDef	pch_line_len (lin line)		25892	0					
ANR	25894	CompoundStatement		2254:0:59517:59543	25892	0					
ANR	25895	ReturnStatement	return p_len [ line ] ;	2255:4:59523:59541	25892	0	True				
ANR	25896	ArrayIndexing	p_len [ line ]		25892	0					
ANR	25897	Identifier	p_len		25892	0					
ANR	25898	Identifier	line		25892	1					
ANR	25899	ReturnType	size_t		25892	1					
ANR	25900	Identifier	pch_line_len		25892	2					
ANR	25901	ParameterList	lin line		25892	3					
ANR	25902	Parameter	lin line	2253:14:59507:59514	25892	0	True				
ANR	25903	ParameterType	lin		25892	0					
ANR	25904	Identifier	line		25892	1					
ANR	25905	CFGEntryNode	ENTRY		25892		True				
ANR	25906	CFGExitNode	EXIT		25892		True				
ANR	25907	Symbol	p_len		25892						
ANR	25908	Symbol	line		25892						
ANR	25909	Symbol	* p_len		25892						
ANR	25910	Symbol	* line		25892						
ANR	25911	Function	pch_char	2262:0:59774:59826							
ANR	25912	FunctionDef	pch_char (lin line)		25911	0					
ANR	25913	CompoundStatement		2264:0:59799:59826	25911	0					
ANR	25914	ReturnStatement	return p_Char [ line ] ;	2265:4:59805:59824	25911	0	True				
ANR	25915	ArrayIndexing	p_Char [ line ]		25911	0					
ANR	25916	Identifier	p_Char		25911	0					
ANR	25917	Identifier	line		25911	1					
ANR	25918	ReturnType	char		25911	1					
ANR	25919	Identifier	pch_char		25911	2					
ANR	25920	ParameterList	lin line		25911	3					
ANR	25921	Parameter	lin line	2263:10:59789:59796	25911	0	True				
ANR	25922	ParameterType	lin		25911	0					
ANR	25923	Identifier	line		25911	1					
ANR	25924	CFGEntryNode	ENTRY		25911		True				
ANR	25925	CFGExitNode	EXIT		25911		True				
ANR	25926	Symbol	line		25911						
ANR	25927	Symbol	* p_Char		25911						
ANR	25928	Symbol	* line		25911						
ANR	25929	Symbol	p_Char		25911						
ANR	25930	Function	pfetch	2270:0:59881:59933							
ANR	25931	FunctionDef	pfetch (lin line)		25930	0					
ANR	25932	CompoundStatement		2272:0:59906:59933	25930	0					
ANR	25933	ReturnStatement	return p_line [ line ] ;	2273:4:59912:59931	25930	0	True				
ANR	25934	ArrayIndexing	p_line [ line ]		25930	0					
ANR	25935	Identifier	p_line		25930	0					
ANR	25936	Identifier	line		25930	1					
ANR	25937	ReturnType	char *		25930	1					
ANR	25938	Identifier	pfetch		25930	2					
ANR	25939	ParameterList	lin line		25930	3					
ANR	25940	Parameter	lin line	2271:8:59896:59903	25930	0	True				
ANR	25941	ParameterType	lin		25930	0					
ANR	25942	Identifier	line		25930	1					
ANR	25943	CFGEntryNode	ENTRY		25930		True				
ANR	25944	CFGExitNode	EXIT		25930		True				
ANR	25945	Symbol	line		25930						
ANR	25946	Symbol	* line		25930						
ANR	25947	Symbol	* p_line		25930						
ANR	25948	Symbol	p_line		25930						
ANR	25949	Function	pch_write_line	2278:0:59965:60213							
ANR	25950	FunctionDef	"pch_write_line (lin line , FILE * file)"		25949	0					
ANR	25951	CompoundStatement		2280:0:60008:60213	25949	0					
ANR	25952	IdentifierDeclStatement	bool after_newline = ( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' ) ;	2281:2:60012:60093	25949	0	True				
ANR	25953	IdentifierDecl	after_newline = ( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' )		25949	0					
ANR	25954	IdentifierDeclType	bool		25949	0					
ANR	25955	Identifier	after_newline		25949	1					
ANR	25956	AssignmentExpression	after_newline = ( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' )		25949	2		=			
ANR	25957	Identifier	after_newline		25949	0					
ANR	25958	AndExpression	( p_len [ line ] > 0 ) && ( p_line [ line ] [ p_len [ line ] - 1 ] == '\\n' )		25949	1		&&			
ANR	25959	RelationalExpression	p_len [ line ] > 0		25949	0		>			
ANR	25960	ArrayIndexing	p_len [ line ]		25949	0					
ANR	25961	Identifier	p_len		25949	0					
ANR	25962	Identifier	line		25949	1					
ANR	25963	PrimaryExpression	0		25949	1					
ANR	25964	EqualityExpression	p_line [ line ] [ p_len [ line ] - 1 ] == '\\n'		25949	1		==			
ANR	25965	ArrayIndexing	p_line [ line ] [ p_len [ line ] - 1 ]		25949	0					
ANR	25966	ArrayIndexing	p_line [ line ]		25949	0					
ANR	25967	Identifier	p_line		25949	0					
ANR	25968	Identifier	line		25949	1					
ANR	25969	AdditiveExpression	p_len [ line ] - 1		25949	1		-			
ANR	25970	ArrayIndexing	p_len [ line ]		25949	0					
ANR	25971	Identifier	p_len		25949	0					
ANR	25972	Identifier	line		25949	1					
ANR	25973	PrimaryExpression	1		25949	1					
ANR	25974	PrimaryExpression	'\\n'		25949	1					
ANR	25975	IfStatement	"if ( ! fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file ) )"		25949	1					
ANR	25976	Condition	"! fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file )"	2282:6:60101:60166	25949	0	True				
ANR	25977	UnaryOperationExpression	"! fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file )"		25949	0					
ANR	25978	UnaryOperator	!		25949	0					
ANR	25979	CallExpression	"fwrite ( p_line [ line ] , sizeof ( * p_line [ line ] ) , p_len [ line ] , file )"		25949	1					
ANR	25980	Callee	fwrite		25949	0					
ANR	25981	Identifier	fwrite		25949	0					
ANR	25982	ArgumentList	p_line [ line ]		25949	1					
ANR	25983	Argument	p_line [ line ]		25949	0					
ANR	25984	ArrayIndexing	p_line [ line ]		25949	0					
ANR	25985	Identifier	p_line		25949	0					
ANR	25986	Identifier	line		25949	1					
ANR	25987	Argument	sizeof ( * p_line [ line ] )		25949	1					
ANR	25988	SizeofExpression	sizeof ( * p_line [ line ] )		25949	0					
ANR	25989	Sizeof	sizeof		25949	0					
ANR	25990	UnaryOperationExpression	* p_line [ line ]		25949	1					
ANR	25991	UnaryOperator	*		25949	0					
ANR	25992	ArrayIndexing	p_line [ line ]		25949	1					
ANR	25993	Identifier	p_line		25949	0					
ANR	25994	Identifier	line		25949	1					
ANR	25995	Argument	p_len [ line ]		25949	2					
ANR	25996	ArrayIndexing	p_len [ line ]		25949	0					
ANR	25997	Identifier	p_len		25949	0					
ANR	25998	Identifier	line		25949	1					
ANR	25999	Argument	file		25949	3					
ANR	26000	Identifier	file		25949	0					
ANR	26001	ExpressionStatement	write_fatal ( )	2283:4:60173:60187	25949	1	True				
ANR	26002	CallExpression	write_fatal ( )		25949	0					
ANR	26003	Callee	write_fatal		25949	0					
ANR	26004	Identifier	write_fatal		25949	0					
ANR	26005	ArgumentList			25949	1					
ANR	26006	ReturnStatement	return after_newline ;	2284:2:60191:60211	25949	2	True				
ANR	26007	Identifier	after_newline		25949	0					
ANR	26008	ReturnType	bool		25949	1					
ANR	26009	Identifier	pch_write_line		25949	2					
ANR	26010	ParameterList	"lin line , FILE * file"		25949	3					
ANR	26011	Parameter	lin line	2279:16:59986:59993	25949	0	True				
ANR	26012	ParameterType	lin		25949	0					
ANR	26013	Identifier	line		25949	1					
ANR	26014	Parameter	FILE * file	2279:26:59996:60005	25949	1	True				
ANR	26015	ParameterType	FILE *		25949	0					
ANR	26016	Identifier	file		25949	1					
ANR	26017	CFGEntryNode	ENTRY		25949		True				
ANR	26018	CFGExitNode	EXIT		25949		True				
ANR	26019	Symbol	line		25949						
ANR	26020	Symbol	after_newline		25949						
ANR	26021	Symbol	* p_len		25949						
ANR	26022	Symbol	fwrite		25949						
ANR	26023	Symbol	* line		25949						
ANR	26024	Symbol	* * p_len		25949						
ANR	26025	Symbol	p_line		25949						
ANR	26026	Symbol	* * p_line		25949						
ANR	26027	Symbol	p_len		25949						
ANR	26028	Symbol	* p_line [ line ]		25949						
ANR	26029	Symbol	file		25949						
ANR	26030	Symbol	* * line		25949						
ANR	26031	Symbol	* p_line		25949						
ANR	26032	Function	pch_hunk_beg	2289:0:60291:60340							
ANR	26033	FunctionDef	pch_hunk_beg ()		26032	0					
ANR	26034	CompoundStatement		2291:0:60315:60340	26032	0					
ANR	26035	ReturnStatement	return p_hunk_beg ;	2292:4:60321:60338	26032	0	True				
ANR	26036	Identifier	p_hunk_beg		26032	0					
ANR	26037	ReturnType	lin		26032	1					
ANR	26038	Identifier	pch_hunk_beg		26032	2					
ANR	26039	ParameterList			26032	3					
ANR	26040	CFGEntryNode	ENTRY		26032		True				
ANR	26041	CFGExitNode	EXIT		26032		True				
ANR	26042	Symbol	p_hunk_beg		26032						
ANR	26043	Function	pch_c_function	2295:0:60343:60405							
ANR	26044	FunctionDef	pch_c_function ()		26043	0					
ANR	26045	CompoundStatement		2297:0:60378:60405	26043	0					
ANR	26046	ReturnStatement	return p_c_function ;	2298:4:60384:60403	26043	0	True				
ANR	26047	Identifier	p_c_function		26043	0					
ANR	26048	ReturnType	char const *		26043	1					
ANR	26049	Identifier	pch_c_function		26043	2					
ANR	26050	ParameterList			26043	3					
ANR	26051	CFGEntryNode	ENTRY		26043		True				
ANR	26052	CFGExitNode	EXIT		26043		True				
ANR	26053	Symbol	p_c_function		26043						
ANR	26054	Function	pch_git_diff	2303:0:60452:60500							
ANR	26055	FunctionDef	pch_git_diff ()		26054	0					
ANR	26056	CompoundStatement		2305:0:60477:60500	26054	0					
ANR	26057	ReturnStatement	return p_git_diff ;	2306:2:60481:60498	26054	0	True				
ANR	26058	Identifier	p_git_diff		26054	0					
ANR	26059	ReturnType	bool		26054	1					
ANR	26060	Identifier	pch_git_diff		26054	2					
ANR	26061	ParameterList			26054	3					
ANR	26062	CFGEntryNode	ENTRY		26054		True				
ANR	26063	CFGExitNode	EXIT		26054		True				
ANR	26064	Symbol	p_git_diff		26054						
ANR	26065	Function	pch_timestr	2309:0:60503:60570							
ANR	26066	FunctionDef	pch_timestr (bool which)		26065	0					
ANR	26067	CompoundStatement		2311:0:60541:60570	26065	0					
ANR	26068	ReturnStatement	return p_timestr [ which ] ;	2312:2:60545:60568	26065	0	True				
ANR	26069	ArrayIndexing	p_timestr [ which ]		26065	0					
ANR	26070	Identifier	p_timestr		26065	0					
ANR	26071	Identifier	which		26065	1					
ANR	26072	ReturnType	char const *		26065	1					
ANR	26073	Identifier	pch_timestr		26065	2					
ANR	26074	ParameterList	bool which		26065	3					
ANR	26075	Parameter	bool which	2310:13:60529:60538	26065	0	True				
ANR	26076	ParameterType	bool		26065	0					
ANR	26077	Identifier	which		26065	1					
ANR	26078	CFGEntryNode	ENTRY		26065		True				
ANR	26079	CFGExitNode	EXIT		26065		True				
ANR	26080	Symbol	which		26065						
ANR	26081	Symbol	* which		26065						
ANR	26082	Symbol	p_timestr		26065						
ANR	26083	Symbol	* p_timestr		26065						
ANR	26084	Function	pch_sha1	2315:0:60573:60634							
ANR	26085	FunctionDef	pch_sha1 (bool which)		26084	0					
ANR	26086	CompoundStatement		2317:0:60608:60634	26084	0					
ANR	26087	ReturnStatement	return p_sha1 [ which ] ;	2318:2:60612:60632	26084	0	True				
ANR	26088	ArrayIndexing	p_sha1 [ which ]		26084	0					
ANR	26089	Identifier	p_sha1		26084	0					
ANR	26090	Identifier	which		26084	1					
ANR	26091	ReturnType	char const *		26084	1					
ANR	26092	Identifier	pch_sha1		26084	2					
ANR	26093	ParameterList	bool which		26084	3					
ANR	26094	Parameter	bool which	2316:10:60596:60605	26084	0	True				
ANR	26095	ParameterType	bool		26084	0					
ANR	26096	Identifier	which		26084	1					
ANR	26097	CFGEntryNode	ENTRY		26084		True				
ANR	26098	CFGExitNode	EXIT		26084		True				
ANR	26099	Symbol	which		26084						
ANR	26100	Symbol	* p_sha1		26084						
ANR	26101	Symbol	* which		26084						
ANR	26102	Symbol	p_sha1		26084						
ANR	26103	Function	pch_mode	2321:0:60637:60692							
ANR	26104	FunctionDef	pch_mode (bool which)		26103	0					
ANR	26105	CompoundStatement		2323:0:60666:60692	26103	0					
ANR	26106	ReturnStatement	return p_mode [ which ] ;	2324:2:60670:60690	26103	0	True				
ANR	26107	ArrayIndexing	p_mode [ which ]		26103	0					
ANR	26108	Identifier	p_mode		26103	0					
ANR	26109	Identifier	which		26103	1					
ANR	26110	ReturnType	mode_t		26103	1					
ANR	26111	Identifier	pch_mode		26103	2					
ANR	26112	ParameterList	bool which		26103	3					
ANR	26113	Parameter	bool which	2322:10:60654:60663	26103	0	True				
ANR	26114	ParameterType	bool		26103	0					
ANR	26115	Identifier	which		26103	1					
ANR	26116	CFGEntryNode	ENTRY		26103		True				
ANR	26117	CFGExitNode	EXIT		26103		True				
ANR	26118	Symbol	which		26103						
ANR	26119	Symbol	* which		26103						
ANR	26120	Symbol	* p_mode		26103						
ANR	26121	Symbol	p_mode		26103						
ANR	26122	Function	get_ed_command_letter	2332:0:60921:61644							
ANR	26123	FunctionDef	get_ed_command_letter (char const * line)		26122	0					
ANR	26124	CompoundStatement		2334:0:60993:61644	26122	0					
ANR	26125	IdentifierDeclStatement	char const * p = line ;	2335:2:60997:61017	26122	0	True				
ANR	26126	IdentifierDecl	* p = line		26122	0					
ANR	26127	IdentifierDeclType	char const *		26122	0					
ANR	26128	Identifier	p		26122	1					
ANR	26129	AssignmentExpression	* p = line		26122	2		=			
ANR	26130	Identifier	line		26122	0					
ANR	26131	Identifier	line		26122	1					
ANR	26132	IdentifierDeclStatement	char letter ;	2336:2:61021:61032	26122	1	True				
ANR	26133	IdentifierDecl	letter		26122	0					
ANR	26134	IdentifierDeclType	char		26122	0					
ANR	26135	Identifier	letter		26122	1					
ANR	26136	IdentifierDeclStatement	bool pair = false ;	2337:2:61036:61053	26122	2	True				
ANR	26137	IdentifierDecl	pair = false		26122	0					
ANR	26138	IdentifierDeclType	bool		26122	0					
ANR	26139	Identifier	pair		26122	1					
ANR	26140	AssignmentExpression	pair = false		26122	2		=			
ANR	26141	Identifier	false		26122	0					
ANR	26142	Identifier	false		26122	1					
ANR	26143	IfStatement	if ( ISDIGIT ( * p ) )		26122	3					
ANR	26144	Condition	ISDIGIT ( * p )	2339:6:61062:61073	26122	0	True				
ANR	26145	CallExpression	ISDIGIT ( * p )		26122	0					
ANR	26146	Callee	ISDIGIT		26122	0					
ANR	26147	Identifier	ISDIGIT		26122	0					
ANR	26148	ArgumentList	* p		26122	1					
ANR	26149	Argument	* p		26122	0					
ANR	26150	UnaryOperationExpression	* p		26122	0					
ANR	26151	UnaryOperator	*		26122	0					
ANR	26152	Identifier	p		26122	1					
ANR	26153	CompoundStatement		7:4:86:86	26122	1					
ANR	26154	WhileStatement	while ( ISDIGIT ( * ++ p ) )		26122	0					
ANR	26155	Condition	ISDIGIT ( * ++ p )	2341:13:61095:61108	26122	0	True				
ANR	26156	CallExpression	ISDIGIT ( * ++ p )		26122	0					
ANR	26157	Callee	ISDIGIT		26122	0					
ANR	26158	Identifier	ISDIGIT		26122	0					
ANR	26159	ArgumentList	* ++ p		26122	1					
ANR	26160	Argument	* ++ p		26122	0					
ANR	26161	UnaryOperationExpression	* ++ p		26122	0					
ANR	26162	UnaryOperator	*		26122	0					
ANR	26163	UnaryExpression	++ p		26122	1					
ANR	26164	IncDec	++		26122	0					
ANR	26165	Identifier	p		26122	1					
ANR	26166	ExpressionStatement		2342:18:61129:61129	26122	1	True				
ANR	26167	IfStatement	"if ( * p == ',' )"		26122	1					
ANR	26168	Condition	"* p == ','"	2343:10:61141:61149	26122	0	True				
ANR	26169	EqualityExpression	"* p == ','"		26122	0		==			
ANR	26170	UnaryOperationExpression	* p		26122	0					
ANR	26171	UnaryOperator	*		26122	0					
ANR	26172	Identifier	p		26122	1					
ANR	26173	PrimaryExpression	"','"		26122	1					
ANR	26174	CompoundStatement		11:1:159:159	26122	1					
ANR	26175	IfStatement	if ( ! ISDIGIT ( * ++ p ) )		26122	0					
ANR	26176	Condition	! ISDIGIT ( * ++ p )	2345:7:61162:61177	26122	0	True				
ANR	26177	UnaryOperationExpression	! ISDIGIT ( * ++ p )		26122	0					
ANR	26178	UnaryOperator	!		26122	0					
ANR	26179	CallExpression	ISDIGIT ( * ++ p )		26122	1					
ANR	26180	Callee	ISDIGIT		26122	0					
ANR	26181	Identifier	ISDIGIT		26122	0					
ANR	26182	ArgumentList	* ++ p		26122	1					
ANR	26183	Argument	* ++ p		26122	0					
ANR	26184	UnaryOperationExpression	* ++ p		26122	0					
ANR	26185	UnaryOperator	*		26122	0					
ANR	26186	UnaryExpression	++ p		26122	1					
ANR	26187	IncDec	++		26122	0					
ANR	26188	Identifier	p		26122	1					
ANR	26189	ReturnStatement	return 0 ;	2346:5:61185:61193	26122	1	True				
ANR	26190	PrimaryExpression	0		26122	0					
ANR	26191	WhileStatement	while ( ISDIGIT ( * ++ p ) )		26122	1					
ANR	26192	Condition	ISDIGIT ( * ++ p )	2347:10:61205:61218	26122	0	True				
ANR	26193	CallExpression	ISDIGIT ( * ++ p )		26122	0					
ANR	26194	Callee	ISDIGIT		26122	0					
ANR	26195	Identifier	ISDIGIT		26122	0					
ANR	26196	ArgumentList	* ++ p		26122	1					
ANR	26197	Argument	* ++ p		26122	0					
ANR	26198	UnaryOperationExpression	* ++ p		26122	0					
ANR	26199	UnaryOperator	*		26122	0					
ANR	26200	UnaryExpression	++ p		26122	1					
ANR	26201	IncDec	++		26122	0					
ANR	26202	Identifier	p		26122	1					
ANR	26203	ExpressionStatement		2348:22:61243:61243	26122	1	True				
ANR	26204	ExpressionStatement	pair = true	2349:3:61248:61259	26122	2	True				
ANR	26205	AssignmentExpression	pair = true		26122	0		=			
ANR	26206	Identifier	pair		26122	0					
ANR	26207	Identifier	true		26122	1					
ANR	26208	ExpressionStatement	letter = * p ++	2353:2:61273:61286	26122	4	True				
ANR	26209	AssignmentExpression	letter = * p ++		26122	0		=			
ANR	26210	Identifier	letter		26122	0					
ANR	26211	UnaryOperationExpression	* p ++		26122	1					
ANR	26212	UnaryOperator	*		26122	0					
ANR	26213	PostIncDecOperationExpression	p ++		26122	1					
ANR	26214	Identifier	p		26122	0					
ANR	26215	IncDec	++		26122	1					
ANR	26216	SwitchStatement	switch ( letter )		26122	5					
ANR	26217	Condition	letter	2355:10:61299:61304	26122	0	True				
ANR	26218	Identifier	letter		26122	0					
ANR	26219	CompoundStatement		23:4:317:317	26122	1					
ANR	26220	Label	case 'a' :	2357:4:61317:61325	26122	0	True				
ANR	26221	Label	case 'i' :	2358:4:61331:61339	26122	1	True				
ANR	26222	IfStatement	if ( pair )		26122	2					
ANR	26223	Condition	pair	2359:10:61351:61354	26122	0	True				
ANR	26224	Identifier	pair		26122	0					
ANR	26225	ReturnStatement	return 0 ;	2360:1:61358:61366	26122	1	True				
ANR	26226	PrimaryExpression	0		26122	0					
ANR	26227	BreakStatement	break ;	2361:6:61374:61379	26122	3	True				
ANR	26228	Label	case 'c' :	2363:4:61386:61394	26122	4	True				
ANR	26229	Label	case 'd' :	2364:4:61400:61408	26122	5	True				
ANR	26230	BreakStatement	break ;	2365:6:61416:61421	26122	6	True				
ANR	26231	Label	case 's' :	2367:4:61428:61436	26122	7	True				
ANR	26232	IfStatement	"if ( strncmp ( p , ""/.//"" , 4 ) != 0 )"		26122	8					
ANR	26233	Condition	"strncmp ( p , ""/.//"" , 4 ) != 0"	2368:10:61448:61474	26122	0	True				
ANR	26234	EqualityExpression	"strncmp ( p , ""/.//"" , 4 ) != 0"		26122	0		!=			
ANR	26235	CallExpression	"strncmp ( p , ""/.//"" , 4 )"		26122	0					
ANR	26236	Callee	strncmp		26122	0					
ANR	26237	Identifier	strncmp		26122	0					
ANR	26238	ArgumentList	p		26122	1					
ANR	26239	Argument	p		26122	0					
ANR	26240	Identifier	p		26122	0					
ANR	26241	Argument	"""/.//"""		26122	1					
ANR	26242	PrimaryExpression	"""/.//"""		26122	0					
ANR	26243	Argument	4		26122	2					
ANR	26244	PrimaryExpression	4		26122	0					
ANR	26245	PrimaryExpression	0		26122	1					
ANR	26246	ReturnStatement	return 0 ;	2369:1:61478:61486	26122	1	True				
ANR	26247	PrimaryExpression	0		26122	0					
ANR	26248	ExpressionStatement	p += 4	2370:6:61494:61500	26122	9	True				
ANR	26249	AssignmentExpression	p += 4		26122	0		+=			
ANR	26250	Identifier	p		26122	0					
ANR	26251	PrimaryExpression	4		26122	1					
ANR	26252	BreakStatement	break ;	2371:6:61508:61513	26122	10	True				
ANR	26253	Label	default :	2373:4:61520:61527	26122	11	True				
ANR	26254	Identifier	default		26122	0					
ANR	26255	ReturnStatement	return 0 ;	2374:6:61535:61543	26122	12	True				
ANR	26256	PrimaryExpression	0		26122	0					
ANR	26257	WhileStatement	while ( * p == ' ' || * p == '\\t' )		26122	6					
ANR	26258	Condition	* p == ' ' || * p == '\\t'	2377:9:61561:61583	26122	0	True				
ANR	26259	OrExpression	* p == ' ' || * p == '\\t'		26122	0		||			
ANR	26260	EqualityExpression	* p == ' '		26122	0		==			
ANR	26261	UnaryOperationExpression	* p		26122	0					
ANR	26262	UnaryOperator	*		26122	0					
ANR	26263	Identifier	p		26122	1					
ANR	26264	PrimaryExpression	' '		26122	1					
ANR	26265	EqualityExpression	* p == '\\t'		26122	1		==			
ANR	26266	UnaryOperationExpression	* p		26122	0					
ANR	26267	UnaryOperator	*		26122	0					
ANR	26268	Identifier	p		26122	1					
ANR	26269	PrimaryExpression	'\\t'		26122	1					
ANR	26270	ExpressionStatement	p ++	2378:4:61590:61593	26122	1	True				
ANR	26271	PostIncDecOperationExpression	p ++		26122	0					
ANR	26272	Identifier	p		26122	0					
ANR	26273	IncDec	++		26122	1					
ANR	26274	IfStatement	if ( * p == '\\n' )		26122	7					
ANR	26275	Condition	* p == '\\n'	2379:6:61601:61610	26122	0	True				
ANR	26276	EqualityExpression	* p == '\\n'		26122	0		==			
ANR	26277	UnaryOperationExpression	* p		26122	0					
ANR	26278	UnaryOperator	*		26122	0					
ANR	26279	Identifier	p		26122	1					
ANR	26280	PrimaryExpression	'\\n'		26122	1					
ANR	26281	ReturnStatement	return letter ;	2380:4:61617:61630	26122	1	True				
ANR	26282	Identifier	letter		26122	0					
ANR	26283	ReturnStatement	return 0 ;	2381:2:61634:61642	26122	8	True				
ANR	26284	PrimaryExpression	0		26122	0					
ANR	26285	ReturnType	static char _GL_ATTRIBUTE_PURE		26122	1					
ANR	26286	Identifier	get_ed_command_letter		26122	2					
ANR	26287	ParameterList	char const * line		26122	3					
ANR	26288	Parameter	char const * line	2333:23:60975:60990	26122	0	True				
ANR	26289	ParameterType	char const *		26122	0					
ANR	26290	Identifier	line		26122	1					
ANR	26291	CFGEntryNode	ENTRY		26122		True				
ANR	26292	CFGExitNode	EXIT		26122		True				
ANR	26293	Symbol	p		26122						
ANR	26294	Symbol	strncmp		26122						
ANR	26295	Symbol	* ++ p		26122						
ANR	26296	Symbol	line		26122						
ANR	26297	Symbol	letter		26122						
ANR	26298	Symbol	* p ++		26122						
ANR	26299	Symbol	false		26122						
ANR	26300	Symbol	true		26122						
ANR	26301	Symbol	* p		26122						
ANR	26302	Symbol	ISDIGIT		26122						
ANR	26303	Symbol	pair		26122						
ANR	26304	Function	do_ed_script	2386:0:61695:64822							
ANR	26305	FunctionDef	"do_ed_script (char const * inname , char const * outname , bool * outname_needs_removal , FILE * ofp)"		26304	0					
ANR	26306	CompoundStatement		2389:0:61802:64822	26304	0					
ANR	26307	Statement	static	2390:4:61808:61813	26304	0	True				
ANR	26308	IdentifierDeclStatement	char const editor_program [ ] = EDITOR_PROGRAM ;	2390:11:61815:61859	26304	1	True				
ANR	26309	IdentifierDecl	editor_program [ ] = EDITOR_PROGRAM		26304	0					
ANR	26310	IdentifierDeclType	char const [ ]		26304	0					
ANR	26311	Identifier	editor_program		26304	1					
ANR	26312	AssignmentExpression	editor_program [ ] = EDITOR_PROGRAM		26304	2		=			
ANR	26313	Identifier	EDITOR_PROGRAM		26304	0					
ANR	26314	Identifier	EDITOR_PROGRAM		26304	1					
ANR	26315	IdentifierDeclStatement	file_offset beginning_of_this_line ;	2392:4:61866:61900	26304	2	True				
ANR	26316	IdentifierDecl	beginning_of_this_line		26304	0					
ANR	26317	IdentifierDeclType	file_offset		26304	0					
ANR	26318	Identifier	beginning_of_this_line		26304	1					
ANR	26319	IdentifierDeclStatement	size_t chars_read ;	2393:4:61906:61923	26304	3	True				
ANR	26320	IdentifierDecl	chars_read		26304	0					
ANR	26321	IdentifierDeclType	size_t		26304	0					
ANR	26322	Identifier	chars_read		26304	1					
ANR	26323	IdentifierDeclStatement	FILE * tmpfp = 0 ;	2394:4:61929:61944	26304	4	True				
ANR	26324	IdentifierDecl	* tmpfp = 0		26304	0					
ANR	26325	IdentifierDeclType	FILE *		26304	0					
ANR	26326	Identifier	tmpfp		26304	1					
ANR	26327	AssignmentExpression	* tmpfp = 0		26304	2		=			
ANR	26328	Identifier	tmpfp		26304	0					
ANR	26329	PrimaryExpression	0		26304	1					
ANR	26330	IdentifierDeclStatement	char const * tmpname ;	2395:4:61950:61969	26304	5	True				
ANR	26331	IdentifierDecl	* tmpname		26304	0					
ANR	26332	IdentifierDeclType	char const *		26304	0					
ANR	26333	Identifier	tmpname		26304	1					
ANR	26334	IdentifierDeclStatement	int tmpfd ;	2396:4:61975:61984	26304	6	True				
ANR	26335	IdentifierDecl	tmpfd		26304	0					
ANR	26336	IdentifierDeclType	int		26304	0					
ANR	26337	Identifier	tmpfd		26304	1					
ANR	26338	IdentifierDeclStatement	pid_t pid ;	2397:4:61990:61999	26304	7	True				
ANR	26339	IdentifierDecl	pid		26304	0					
ANR	26340	IdentifierDeclType	pid_t		26304	0					
ANR	26341	Identifier	pid		26304	1					
ANR	26342	IfStatement	if ( ! dry_run && ! skip_rest_of_patch )		26304	8					
ANR	26343	Condition	! dry_run && ! skip_rest_of_patch	2399:8:62010:62042	26304	0	True				
ANR	26344	AndExpression	! dry_run && ! skip_rest_of_patch		26304	0		&&			
ANR	26345	UnaryOperationExpression	! dry_run		26304	0					
ANR	26346	UnaryOperator	!		26304	0					
ANR	26347	Identifier	dry_run		26304	1					
ANR	26348	UnaryOperationExpression	! skip_rest_of_patch		26304	1					
ANR	26349	UnaryOperator	!		26304	0					
ANR	26350	Identifier	skip_rest_of_patch		26304	1					
ANR	26351	CompoundStatement		12:6:248:248	26304	1					
ANR	26352	ExpressionStatement	"tmpfd = make_tempfile ( & tmpname , 'e' , NULL , O_RDWR | O_BINARY , 0 )"	2407:1:62381:62446	26304	0	True				
ANR	26353	AssignmentExpression	"tmpfd = make_tempfile ( & tmpname , 'e' , NULL , O_RDWR | O_BINARY , 0 )"		26304	0		=			
ANR	26354	Identifier	tmpfd		26304	0					
ANR	26355	CallExpression	"make_tempfile ( & tmpname , 'e' , NULL , O_RDWR | O_BINARY , 0 )"		26304	1					
ANR	26356	Callee	make_tempfile		26304	0					
ANR	26357	Identifier	make_tempfile		26304	0					
ANR	26358	ArgumentList	& tmpname		26304	1					
ANR	26359	Argument	& tmpname		26304	0					
ANR	26360	UnaryOperationExpression	& tmpname		26304	0					
ANR	26361	UnaryOperator	&		26304	0					
ANR	26362	Identifier	tmpname		26304	1					
ANR	26363	Argument	'e'		26304	1					
ANR	26364	PrimaryExpression	'e'		26304	0					
ANR	26365	Argument	NULL		26304	2					
ANR	26366	Identifier	NULL		26304	0					
ANR	26367	Argument	O_RDWR | O_BINARY		26304	3					
ANR	26368	InclusiveOrExpression	O_RDWR | O_BINARY		26304	0		|			
ANR	26369	Identifier	O_RDWR		26304	0					
ANR	26370	Identifier	O_BINARY		26304	1					
ANR	26371	Argument	0		26304	4					
ANR	26372	PrimaryExpression	0		26304	0					
ANR	26373	IfStatement	if ( tmpfd == - 1 )		26304	1					
ANR	26374	Condition	tmpfd == - 1	2408:5:62453:62463	26304	0	True				
ANR	26375	EqualityExpression	tmpfd == - 1		26304	0		==			
ANR	26376	Identifier	tmpfd		26304	0					
ANR	26377	UnaryOperationExpression	- 1		26304	1					
ANR	26378	UnaryOperator	-		26304	0					
ANR	26379	PrimaryExpression	1		26304	1					
ANR	26380	ExpressionStatement	"pfatal ( ""Can't create temporary file %s"" , quotearg ( tmpname ) )"	2409:3:62469:62530	26304	1	True				
ANR	26381	CallExpression	"pfatal ( ""Can't create temporary file %s"" , quotearg ( tmpname ) )"		26304	0					
ANR	26382	Callee	pfatal		26304	0					
ANR	26383	Identifier	pfatal		26304	0					
ANR	26384	ArgumentList	"""Can't create temporary file %s"""		26304	1					
ANR	26385	Argument	"""Can't create temporary file %s"""		26304	0					
ANR	26386	PrimaryExpression	"""Can't create temporary file %s"""		26304	0					
ANR	26387	Argument	quotearg ( tmpname )		26304	1					
ANR	26388	CallExpression	quotearg ( tmpname )		26304	0					
ANR	26389	Callee	quotearg		26304	0					
ANR	26390	Identifier	quotearg		26304	0					
ANR	26391	ArgumentList	tmpname		26304	1					
ANR	26392	Argument	tmpname		26304	0					
ANR	26393	Identifier	tmpname		26304	0					
ANR	26394	ExpressionStatement	"tmpfp = fdopen ( tmpfd , ""w+b"" )"	2410:1:62533:62562	26304	2	True				
ANR	26395	AssignmentExpression	"tmpfp = fdopen ( tmpfd , ""w+b"" )"		26304	0		=			
ANR	26396	Identifier	tmpfp		26304	0					
ANR	26397	CallExpression	"fdopen ( tmpfd , ""w+b"" )"		26304	1					
ANR	26398	Callee	fdopen		26304	0					
ANR	26399	Identifier	fdopen		26304	0					
ANR	26400	ArgumentList	tmpfd		26304	1					
ANR	26401	Argument	tmpfd		26304	0					
ANR	26402	Identifier	tmpfd		26304	0					
ANR	26403	Argument	"""w+b"""		26304	1					
ANR	26404	PrimaryExpression	"""w+b"""		26304	0					
ANR	26405	IfStatement	if ( ! tmpfp )		26304	3					
ANR	26406	Condition	! tmpfp	2411:5:62569:62575	26304	0	True				
ANR	26407	UnaryOperationExpression	! tmpfp		26304	0					
ANR	26408	UnaryOperator	!		26304	0					
ANR	26409	Identifier	tmpfp		26304	1					
ANR	26410	ExpressionStatement	"pfatal ( ""Can't open stream for file %s"" , quotearg ( tmpname ) )"	2412:3:62581:62641	26304	1	True				
ANR	26411	CallExpression	"pfatal ( ""Can't open stream for file %s"" , quotearg ( tmpname ) )"		26304	0					
ANR	26412	Callee	pfatal		26304	0					
ANR	26413	Identifier	pfatal		26304	0					
ANR	26414	ArgumentList	"""Can't open stream for file %s"""		26304	1					
ANR	26415	Argument	"""Can't open stream for file %s"""		26304	0					
ANR	26416	PrimaryExpression	"""Can't open stream for file %s"""		26304	0					
ANR	26417	Argument	quotearg ( tmpname )		26304	1					
ANR	26418	CallExpression	quotearg ( tmpname )		26304	0					
ANR	26419	Callee	quotearg		26304	0					
ANR	26420	Identifier	quotearg		26304	0					
ANR	26421	ArgumentList	tmpname		26304	1					
ANR	26422	Argument	tmpname		26304	0					
ANR	26423	Identifier	tmpname		26304	0					
ANR	26424	ForStatement	for ( ; ; )		26304	9					
ANR	26425	CompoundStatement		28:1:865:887	26304	0					
ANR	26426	IdentifierDeclStatement	char ed_command_letter ;	2416:1:62668:62690	26304	0	True				
ANR	26427	IdentifierDecl	ed_command_letter		26304	0					
ANR	26428	IdentifierDeclType	char		26304	0					
ANR	26429	Identifier	ed_command_letter		26304	1					
ANR	26430	ExpressionStatement	beginning_of_this_line = file_tell ( pfp )	2417:1:62693:62733	26304	1	True				
ANR	26431	AssignmentExpression	beginning_of_this_line = file_tell ( pfp )		26304	0		=			
ANR	26432	Identifier	beginning_of_this_line		26304	0					
ANR	26433	CallExpression	file_tell ( pfp )		26304	1					
ANR	26434	Callee	file_tell		26304	0					
ANR	26435	Identifier	file_tell		26304	0					
ANR	26436	ArgumentList	pfp		26304	1					
ANR	26437	Argument	pfp		26304	0					
ANR	26438	Identifier	pfp		26304	0					
ANR	26439	ExpressionStatement	chars_read = get_line ( )	2418:1:62736:62760	26304	2	True				
ANR	26440	AssignmentExpression	chars_read = get_line ( )		26304	0		=			
ANR	26441	Identifier	chars_read		26304	0					
ANR	26442	CallExpression	get_line ( )		26304	1					
ANR	26443	Callee	get_line		26304	0					
ANR	26444	Identifier	get_line		26304	0					
ANR	26445	ArgumentList			26304	1					
ANR	26446	IfStatement	if ( ! chars_read )		26304	3					
ANR	26447	Condition	! chars_read	2419:5:62767:62778	26304	0	True				
ANR	26448	UnaryOperationExpression	! chars_read		26304	0					
ANR	26449	UnaryOperator	!		26304	0					
ANR	26450	Identifier	chars_read		26304	1					
ANR	26451	CompoundStatement		31:19:978:978	26304	1					
ANR	26452	ExpressionStatement	"next_intuit_at ( beginning_of_this_line , p_input_line )"	2420:5:62788:62839	26304	0	True				
ANR	26453	CallExpression	"next_intuit_at ( beginning_of_this_line , p_input_line )"		26304	0					
ANR	26454	Callee	next_intuit_at		26304	0					
ANR	26455	Identifier	next_intuit_at		26304	0					
ANR	26456	ArgumentList	beginning_of_this_line		26304	1					
ANR	26457	Argument	beginning_of_this_line		26304	0					
ANR	26458	Identifier	beginning_of_this_line		26304	0					
ANR	26459	Argument	p_input_line		26304	1					
ANR	26460	Identifier	p_input_line		26304	0					
ANR	26461	BreakStatement	break ;	2421:5:62846:62851	26304	1	True				
ANR	26462	ExpressionStatement	ed_command_letter = get_ed_command_letter ( buf )	2423:1:62857:62904	26304	4	True				
ANR	26463	AssignmentExpression	ed_command_letter = get_ed_command_letter ( buf )		26304	0		=			
ANR	26464	Identifier	ed_command_letter		26304	0					
ANR	26465	CallExpression	get_ed_command_letter ( buf )		26304	1					
ANR	26466	Callee	get_ed_command_letter		26304	0					
ANR	26467	Identifier	get_ed_command_letter		26304	0					
ANR	26468	ArgumentList	buf		26304	1					
ANR	26469	Argument	buf		26304	0					
ANR	26470	Identifier	buf		26304	0					
ANR	26471	IfStatement	if ( ed_command_letter )		26304	5					
ANR	26472	Condition	ed_command_letter	2424:5:62911:62927	26304	0	True				
ANR	26473	Identifier	ed_command_letter		26304	0					
ANR	26474	CompoundStatement		36:24:1127:1127	26304	1					
ANR	26475	IfStatement	if ( tmpfp )		26304	0					
ANR	26476	Condition	tmpfp	2425:9:62941:62945	26304	0	True				
ANR	26477	Identifier	tmpfp		26304	0					
ANR	26478	IfStatement	"if ( ! fwrite ( buf , sizeof * buf , chars_read , tmpfp ) )"		26304	1					
ANR	26479	Condition	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"	2426:6:62954:62999	26304	0	True				
ANR	26480	UnaryOperationExpression	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		26304	0					
ANR	26481	UnaryOperator	!		26304	0					
ANR	26482	CallExpression	"fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		26304	1					
ANR	26483	Callee	fwrite		26304	0					
ANR	26484	Identifier	fwrite		26304	0					
ANR	26485	ArgumentList	buf		26304	1					
ANR	26486	Argument	buf		26304	0					
ANR	26487	Identifier	buf		26304	0					
ANR	26488	Argument	sizeof * buf		26304	1					
ANR	26489	SizeofExpression	sizeof * buf		26304	0					
ANR	26490	Sizeof	sizeof		26304	0					
ANR	26491	UnaryOperationExpression	* buf		26304	1					
ANR	26492	UnaryOperator	*		26304	0					
ANR	26493	Identifier	buf		26304	1					
ANR	26494	Argument	chars_read		26304	2					
ANR	26495	Identifier	chars_read		26304	0					
ANR	26496	Argument	tmpfp		26304	3					
ANR	26497	Identifier	tmpfp		26304	0					
ANR	26498	ExpressionStatement	write_fatal ( )	2427:6:63008:63022	26304	1	True				
ANR	26499	CallExpression	write_fatal ( )		26304	0					
ANR	26500	Callee	write_fatal		26304	0					
ANR	26501	Identifier	write_fatal		26304	0					
ANR	26502	ArgumentList			26304	1					
ANR	26503	IfStatement	if ( ed_command_letter != 'd' && ed_command_letter != 's' )		26304	1					
ANR	26504	Condition	ed_command_letter != 'd' && ed_command_letter != 's'	2428:9:63033:63084	26304	0	True				
ANR	26505	AndExpression	ed_command_letter != 'd' && ed_command_letter != 's'		26304	0		&&			
ANR	26506	EqualityExpression	ed_command_letter != 'd'		26304	0		!=			
ANR	26507	Identifier	ed_command_letter		26304	0					
ANR	26508	PrimaryExpression	'd'		26304	1					
ANR	26509	EqualityExpression	ed_command_letter != 's'		26304	1		!=			
ANR	26510	Identifier	ed_command_letter		26304	0					
ANR	26511	PrimaryExpression	's'		26304	1					
ANR	26512	CompoundStatement		40:63:1284:1284	26304	1					
ANR	26513	ExpressionStatement	p_pass_comments_through = true	2429:9:63098:63128	26304	0	True				
ANR	26514	AssignmentExpression	p_pass_comments_through = true		26304	0		=			
ANR	26515	Identifier	p_pass_comments_through		26304	0					
ANR	26516	Identifier	true		26304	1					
ANR	26517	WhileStatement	while ( ( chars_read = get_line ( ) ) != 0 )		26304	1					
ANR	26518	Condition	( chars_read = get_line ( ) ) != 0	2430:9:63139:63169	26304	0	True				
ANR	26519	EqualityExpression	( chars_read = get_line ( ) ) != 0		26304	0		!=			
ANR	26520	AssignmentExpression	chars_read = get_line ( )		26304	0		=			
ANR	26521	Identifier	chars_read		26304	0					
ANR	26522	CallExpression	get_line ( )		26304	1					
ANR	26523	Callee	get_line		26304	0					
ANR	26524	Identifier	get_line		26304	0					
ANR	26525	ArgumentList			26304	1					
ANR	26526	PrimaryExpression	0		26304	1					
ANR	26527	CompoundStatement		42:42:1369:1369	26304	1					
ANR	26528	IfStatement	if ( tmpfp )		26304	0					
ANR	26529	Condition	tmpfp	2431:10:63184:63188	26304	0	True				
ANR	26530	Identifier	tmpfp		26304	0					
ANR	26531	IfStatement	"if ( ! fwrite ( buf , sizeof * buf , chars_read , tmpfp ) )"		26304	1					
ANR	26532	Condition	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"	2432:7:63198:63243	26304	0	True				
ANR	26533	UnaryOperationExpression	"! fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		26304	0					
ANR	26534	UnaryOperator	!		26304	0					
ANR	26535	CallExpression	"fwrite ( buf , sizeof * buf , chars_read , tmpfp )"		26304	1					
ANR	26536	Callee	fwrite		26304	0					
ANR	26537	Identifier	fwrite		26304	0					
ANR	26538	ArgumentList	buf		26304	1					
ANR	26539	Argument	buf		26304	0					
ANR	26540	Identifier	buf		26304	0					
ANR	26541	Argument	sizeof * buf		26304	1					
ANR	26542	SizeofExpression	sizeof * buf		26304	0					
ANR	26543	Sizeof	sizeof		26304	0					
ANR	26544	UnaryOperationExpression	* buf		26304	1					
ANR	26545	UnaryOperator	*		26304	0					
ANR	26546	Identifier	buf		26304	1					
ANR	26547	Argument	chars_read		26304	2					
ANR	26548	Identifier	chars_read		26304	0					
ANR	26549	Argument	tmpfp		26304	3					
ANR	26550	Identifier	tmpfp		26304	0					
ANR	26551	ExpressionStatement	write_fatal ( )	2433:7:63253:63267	26304	1	True				
ANR	26552	CallExpression	write_fatal ( )		26304	0					
ANR	26553	Callee	write_fatal		26304	0					
ANR	26554	Identifier	write_fatal		26304	0					
ANR	26555	ArgumentList			26304	1					
ANR	26556	IfStatement	"if ( chars_read == 2 && strEQ ( buf , "".\\n"" ) )"		26304	1					
ANR	26557	Condition	"chars_read == 2 && strEQ ( buf , "".\\n"" )"	2434:10:63279:63317	26304	0	True				
ANR	26558	AndExpression	"chars_read == 2 && strEQ ( buf , "".\\n"" )"		26304	0		&&			
ANR	26559	EqualityExpression	chars_read == 2		26304	0		==			
ANR	26560	Identifier	chars_read		26304	0					
ANR	26561	PrimaryExpression	2		26304	1					
ANR	26562	CallExpression	"strEQ ( buf , "".\\n"" )"		26304	1					
ANR	26563	Callee	strEQ		26304	0					
ANR	26564	Identifier	strEQ		26304	0					
ANR	26565	ArgumentList	buf		26304	1					
ANR	26566	Argument	buf		26304	0					
ANR	26567	Identifier	buf		26304	0					
ANR	26568	Argument	""".\\n"""		26304	1					
ANR	26569	PrimaryExpression	""".\\n"""		26304	0					
ANR	26570	BreakStatement	break ;	2435:3:63323:63328	26304	1	True				
ANR	26571	ExpressionStatement	p_pass_comments_through = false	2437:2:63336:63367	26304	2	True				
ANR	26572	AssignmentExpression	p_pass_comments_through = false		26304	0		=			
ANR	26573	Identifier	p_pass_comments_through		26304	0					
ANR	26574	Identifier	false		26304	1					
ANR	26575	ElseStatement	else		26304	0					
ANR	26576	CompoundStatement		52:6:1582:1582	26304	0					
ANR	26577	ExpressionStatement	"next_intuit_at ( beginning_of_this_line , p_input_line )"	2441:5:63392:63443	26304	0	True				
ANR	26578	CallExpression	"next_intuit_at ( beginning_of_this_line , p_input_line )"		26304	0					
ANR	26579	Callee	next_intuit_at		26304	0					
ANR	26580	Identifier	next_intuit_at		26304	0					
ANR	26581	ArgumentList	beginning_of_this_line		26304	1					
ANR	26582	Argument	beginning_of_this_line		26304	0					
ANR	26583	Identifier	beginning_of_this_line		26304	0					
ANR	26584	Argument	p_input_line		26304	1					
ANR	26585	Identifier	p_input_line		26304	0					
ANR	26586	BreakStatement	break ;	2442:5:63450:63455	26304	1	True				
ANR	26587	IfStatement	if ( ! tmpfp )		26304	10					
ANR	26588	Condition	! tmpfp	2445:8:63474:63479	26304	0	True				
ANR	26589	UnaryOperationExpression	! tmpfp		26304	0					
ANR	26590	UnaryOperator	!		26304	0					
ANR	26591	Identifier	tmpfp		26304	1					
ANR	26592	ReturnStatement	return ;	2446:6:63488:63494	26304	1	True				
ANR	26593	IfStatement	"if ( fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0 || fflush ( tmpfp ) != 0 )"		26304	11					
ANR	26594	Condition	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0 || fflush ( tmpfp ) != 0"	2447:8:63504:63583	26304	0	True				
ANR	26595	OrExpression	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0 || fflush ( tmpfp ) != 0"		26304	0		||			
ANR	26596	EqualityExpression	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp ) == 0"		26304	0		==			
ANR	26597	CallExpression	"fwrite ( ""w\\nq\\n"" , sizeof ( char ) , ( size_t ) 4 , tmpfp )"		26304	0					
ANR	26598	Callee	fwrite		26304	0					
ANR	26599	Identifier	fwrite		26304	0					
ANR	26600	ArgumentList	"""w\\nq\\n"""		26304	1					
ANR	26601	Argument	"""w\\nq\\n"""		26304	0					
ANR	26602	PrimaryExpression	"""w\\nq\\n"""		26304	0					
ANR	26603	Argument	sizeof ( char )		26304	1					
ANR	26604	SizeofExpression	sizeof ( char )		26304	0					
ANR	26605	Sizeof	sizeof		26304	0					
ANR	26606	SizeofOperand	char		26304	1					
ANR	26607	Argument	( size_t ) 4		26304	2					
ANR	26608	CastExpression	( size_t ) 4		26304	0					
ANR	26609	CastTarget	size_t		26304	0					
ANR	26610	PrimaryExpression	4		26304	1					
ANR	26611	Argument	tmpfp		26304	3					
ANR	26612	Identifier	tmpfp		26304	0					
ANR	26613	PrimaryExpression	0		26304	1					
ANR	26614	EqualityExpression	fflush ( tmpfp ) != 0		26304	1		!=			
ANR	26615	CallExpression	fflush ( tmpfp )		26304	0					
ANR	26616	Callee	fflush		26304	0					
ANR	26617	Identifier	fflush		26304	0					
ANR	26618	ArgumentList	tmpfp		26304	1					
ANR	26619	Argument	tmpfp		26304	0					
ANR	26620	Identifier	tmpfp		26304	0					
ANR	26621	PrimaryExpression	0		26304	1					
ANR	26622	ExpressionStatement	write_fatal ( )	2449:6:63592:63606	26304	1	True				
ANR	26623	CallExpression	write_fatal ( )		26304	0					
ANR	26624	Callee	write_fatal		26304	0					
ANR	26625	Identifier	write_fatal		26304	0					
ANR	26626	ArgumentList			26304	1					
ANR	26627	IfStatement	"if ( lseek ( tmpfd , 0 , SEEK_SET ) == - 1 )"		26304	12					
ANR	26628	Condition	"lseek ( tmpfd , 0 , SEEK_SET ) == - 1"	2451:8:63617:63648	26304	0	True				
ANR	26629	EqualityExpression	"lseek ( tmpfd , 0 , SEEK_SET ) == - 1"		26304	0		==			
ANR	26630	CallExpression	"lseek ( tmpfd , 0 , SEEK_SET )"		26304	0					
ANR	26631	Callee	lseek		26304	0					
ANR	26632	Identifier	lseek		26304	0					
ANR	26633	ArgumentList	tmpfd		26304	1					
ANR	26634	Argument	tmpfd		26304	0					
ANR	26635	Identifier	tmpfd		26304	0					
ANR	26636	Argument	0		26304	1					
ANR	26637	PrimaryExpression	0		26304	0					
ANR	26638	Argument	SEEK_SET		26304	2					
ANR	26639	Identifier	SEEK_SET		26304	0					
ANR	26640	UnaryOperationExpression	- 1		26304	1					
ANR	26641	UnaryOperator	-		26304	0					
ANR	26642	PrimaryExpression	1		26304	1					
ANR	26643	ExpressionStatement	"pfatal ( ""Can't rewind to the beginning of file %s"" , quotearg ( tmpname ) )"	2452:6:63657:63728	26304	1	True				
ANR	26644	CallExpression	"pfatal ( ""Can't rewind to the beginning of file %s"" , quotearg ( tmpname ) )"		26304	0					
ANR	26645	Callee	pfatal		26304	0					
ANR	26646	Identifier	pfatal		26304	0					
ANR	26647	ArgumentList	"""Can't rewind to the beginning of file %s"""		26304	1					
ANR	26648	Argument	"""Can't rewind to the beginning of file %s"""		26304	0					
ANR	26649	PrimaryExpression	"""Can't rewind to the beginning of file %s"""		26304	0					
ANR	26650	Argument	quotearg ( tmpname )		26304	1					
ANR	26651	CallExpression	quotearg ( tmpname )		26304	0					
ANR	26652	Callee	quotearg		26304	0					
ANR	26653	Identifier	quotearg		26304	0					
ANR	26654	ArgumentList	tmpname		26304	1					
ANR	26655	Argument	tmpname		26304	0					
ANR	26656	Identifier	tmpname		26304	0					
ANR	26657	IfStatement	if ( ! dry_run && ! skip_rest_of_patch )		26304	13					
ANR	26658	Condition	! dry_run && ! skip_rest_of_patch	2454:8:63739:63771	26304	0	True				
ANR	26659	AndExpression	! dry_run && ! skip_rest_of_patch		26304	0		&&			
ANR	26660	UnaryOperationExpression	! dry_run		26304	0					
ANR	26661	UnaryOperator	!		26304	0					
ANR	26662	Identifier	dry_run		26304	1					
ANR	26663	UnaryOperationExpression	! skip_rest_of_patch		26304	1					
ANR	26664	UnaryOperator	!		26304	0					
ANR	26665	Identifier	skip_rest_of_patch		26304	1					
ANR	26666	CompoundStatement		67:1:1974:2025	26304	1					
ANR	26667	IdentifierDeclStatement	int exclusive = * outname_needs_removal ? 0 : O_EXCL ;	2455:1:63777:63828	26304	0	True				
ANR	26668	IdentifierDecl	exclusive = * outname_needs_removal ? 0 : O_EXCL		26304	0					
ANR	26669	IdentifierDeclType	int		26304	0					
ANR	26670	Identifier	exclusive		26304	1					
ANR	26671	AssignmentExpression	exclusive = * outname_needs_removal ? 0 : O_EXCL		26304	2		=			
ANR	26672	Identifier	exclusive		26304	0					
ANR	26673	ConditionalExpression	* outname_needs_removal ? 0 : O_EXCL		26304	1					
ANR	26674	Condition	* outname_needs_removal		26304	0					
ANR	26675	UnaryOperationExpression	* outname_needs_removal		26304	0					
ANR	26676	UnaryOperator	*		26304	0					
ANR	26677	Identifier	outname_needs_removal		26304	1					
ANR	26678	PrimaryExpression	0		26304	1					
ANR	26679	Identifier	O_EXCL		26304	2					
ANR	26680	ExpressionStatement	* outname_needs_removal = true	2456:1:63831:63860	26304	1	True				
ANR	26681	AssignmentExpression	* outname_needs_removal = true		26304	0		=			
ANR	26682	UnaryOperationExpression	* outname_needs_removal		26304	0					
ANR	26683	UnaryOperator	*		26304	0					
ANR	26684	Identifier	outname_needs_removal		26304	1					
ANR	26685	Identifier	true		26304	1					
ANR	26686	IfStatement	if ( inerrno != ENOENT )		26304	2					
ANR	26687	Condition	inerrno != ENOENT	2457:5:63867:63883	26304	0	True				
ANR	26688	EqualityExpression	inerrno != ENOENT		26304	0		!=			
ANR	26689	Identifier	inerrno		26304	0					
ANR	26690	Identifier	ENOENT		26304	1					
ANR	26691	CompoundStatement		70:3:2086:2086	26304	1					
ANR	26692	ExpressionStatement	* outname_needs_removal = true	2459:5:63896:63925	26304	0	True				
ANR	26693	AssignmentExpression	* outname_needs_removal = true		26304	0		=			
ANR	26694	UnaryOperationExpression	* outname_needs_removal		26304	0					
ANR	26695	UnaryOperator	*		26304	0					
ANR	26696	Identifier	outname_needs_removal		26304	1					
ANR	26697	Identifier	true		26304	1					
ANR	26698	ExpressionStatement	"copy_file ( inname , outname , 0 , exclusive , instat . st_mode , true )"	2460:5:63932:63995	26304	1	True				
ANR	26699	CallExpression	"copy_file ( inname , outname , 0 , exclusive , instat . st_mode , true )"		26304	0					
ANR	26700	Callee	copy_file		26304	0					
ANR	26701	Identifier	copy_file		26304	0					
ANR	26702	ArgumentList	inname		26304	1					
ANR	26703	Argument	inname		26304	0					
ANR	26704	Identifier	inname		26304	0					
ANR	26705	Argument	outname		26304	1					
ANR	26706	Identifier	outname		26304	0					
ANR	26707	Argument	0		26304	2					
ANR	26708	PrimaryExpression	0		26304	0					
ANR	26709	Argument	exclusive		26304	3					
ANR	26710	Identifier	exclusive		26304	0					
ANR	26711	Argument	instat . st_mode		26304	4					
ANR	26712	MemberAccess	instat . st_mode		26304	0					
ANR	26713	Identifier	instat		26304	0					
ANR	26714	Identifier	st_mode		26304	1					
ANR	26715	Argument	true		26304	5					
ANR	26716	Identifier	true		26304	0					
ANR	26717	ExpressionStatement	"sprintf ( buf , ""%s %s%s"" , editor_program , verbosity == VERBOSE ? """" : ""- "" , outname )"	2462:1:64003:64092	26304	3	True				
ANR	26718	CallExpression	"sprintf ( buf , ""%s %s%s"" , editor_program , verbosity == VERBOSE ? """" : ""- "" , outname )"		26304	0					
ANR	26719	Callee	sprintf		26304	0					
ANR	26720	Identifier	sprintf		26304	0					
ANR	26721	ArgumentList	buf		26304	1					
ANR	26722	Argument	buf		26304	0					
ANR	26723	Identifier	buf		26304	0					
ANR	26724	Argument	"""%s %s%s"""		26304	1					
ANR	26725	PrimaryExpression	"""%s %s%s"""		26304	0					
ANR	26726	Argument	editor_program		26304	2					
ANR	26727	Identifier	editor_program		26304	0					
ANR	26728	Argument	"verbosity == VERBOSE ? """" : ""- """		26304	3					
ANR	26729	ConditionalExpression	"verbosity == VERBOSE ? """" : ""- """		26304	0					
ANR	26730	Condition	verbosity == VERBOSE		26304	0					
ANR	26731	EqualityExpression	verbosity == VERBOSE		26304	0		==			
ANR	26732	Identifier	verbosity		26304	0					
ANR	26733	Identifier	VERBOSE		26304	1					
ANR	26734	PrimaryExpression	""""""		26304	1					
ANR	26735	PrimaryExpression	"""- """		26304	2					
ANR	26736	Argument	outname		26304	4					
ANR	26737	Identifier	outname		26304	0					
ANR	26738	ExpressionStatement	fflush ( stdout )	2465:1:64095:64110	26304	4	True				
ANR	26739	CallExpression	fflush ( stdout )		26304	0					
ANR	26740	Callee	fflush		26304	0					
ANR	26741	Identifier	fflush		26304	0					
ANR	26742	ArgumentList	stdout		26304	1					
ANR	26743	Argument	stdout		26304	0					
ANR	26744	Identifier	stdout		26304	0					
ANR	26745	ExpressionStatement	pid = fork ( )	2467:1:64114:64126	26304	5	True				
ANR	26746	AssignmentExpression	pid = fork ( )		26304	0		=			
ANR	26747	Identifier	pid		26304	0					
ANR	26748	CallExpression	fork ( )		26304	1					
ANR	26749	Callee	fork		26304	0					
ANR	26750	Identifier	fork		26304	0					
ANR	26751	ArgumentList			26304	1					
ANR	26752	IfStatement	if ( pid == - 1 )		26304	6					
ANR	26753	Condition	pid == - 1	2468:5:64133:64141	26304	0	True				
ANR	26754	EqualityExpression	pid == - 1		26304	0		==			
ANR	26755	Identifier	pid		26304	0					
ANR	26756	UnaryOperationExpression	- 1		26304	1					
ANR	26757	UnaryOperator	-		26304	0					
ANR	26758	PrimaryExpression	1		26304	1					
ANR	26759	ExpressionStatement	"pfatal ( ""Can't fork"" )"	2469:3:64147:64168	26304	1	True				
ANR	26760	CallExpression	"pfatal ( ""Can't fork"" )"		26304	0					
ANR	26761	Callee	pfatal		26304	0					
ANR	26762	Identifier	pfatal		26304	0					
ANR	26763	ArgumentList	"""Can't fork"""		26304	1					
ANR	26764	Argument	"""Can't fork"""		26304	0					
ANR	26765	PrimaryExpression	"""Can't fork"""		26304	0					
ANR	26766	ElseStatement	else		26304	0					
ANR	26767	IfStatement	if ( pid == 0 )		26304	0					
ANR	26768	Condition	pid == 0	2470:10:64180:64187	26304	0	True				
ANR	26769	EqualityExpression	pid == 0		26304	0		==			
ANR	26770	Identifier	pid		26304	0					
ANR	26771	PrimaryExpression	0		26304	1					
ANR	26772	CompoundStatement		83:3:2390:2390	26304	1					
ANR	26773	ExpressionStatement	"dup2 ( tmpfd , 0 )"	2472:5:64200:64215	26304	0	True				
ANR	26774	CallExpression	"dup2 ( tmpfd , 0 )"		26304	0					
ANR	26775	Callee	dup2		26304	0					
ANR	26776	Identifier	dup2		26304	0					
ANR	26777	ArgumentList	tmpfd		26304	1					
ANR	26778	Argument	tmpfd		26304	0					
ANR	26779	Identifier	tmpfd		26304	0					
ANR	26780	Argument	0		26304	1					
ANR	26781	PrimaryExpression	0		26304	0					
ANR	26782	ExpressionStatement	"execl ( ""/bin/sh"" , ""sh"" , ""-c"" , buf , ( char * ) 0 )"	2473:5:64222:64268	26304	1	True				
ANR	26783	CallExpression	"execl ( ""/bin/sh"" , ""sh"" , ""-c"" , buf , ( char * ) 0 )"		26304	0					
ANR	26784	Callee	execl		26304	0					
ANR	26785	Identifier	execl		26304	0					
ANR	26786	ArgumentList	"""/bin/sh"""		26304	1					
ANR	26787	Argument	"""/bin/sh"""		26304	0					
ANR	26788	PrimaryExpression	"""/bin/sh"""		26304	0					
ANR	26789	Argument	"""sh"""		26304	1					
ANR	26790	PrimaryExpression	"""sh"""		26304	0					
ANR	26791	Argument	"""-c"""		26304	2					
ANR	26792	PrimaryExpression	"""-c"""		26304	0					
ANR	26793	Argument	buf		26304	3					
ANR	26794	Identifier	buf		26304	0					
ANR	26795	Argument	( char * ) 0		26304	4					
ANR	26796	CastExpression	( char * ) 0		26304	0					
ANR	26797	CastTarget	char *		26304	0					
ANR	26798	PrimaryExpression	0		26304	1					
ANR	26799	ExpressionStatement	_exit ( 2 )	2474:5:64275:64284	26304	2	True				
ANR	26800	CallExpression	_exit ( 2 )		26304	0					
ANR	26801	Callee	_exit		26304	0					
ANR	26802	Identifier	_exit		26304	0					
ANR	26803	ArgumentList	2		26304	1					
ANR	26804	Argument	2		26304	0					
ANR	26805	PrimaryExpression	2		26304	0					
ANR	26806	ElseStatement	else		26304	0					
ANR	26807	CompoundStatement		90:5:2504:2515	26304	0					
ANR	26808	IdentifierDeclStatement	int wstatus ;	2478:5:64307:64318	26304	0	True				
ANR	26809	IdentifierDecl	wstatus		26304	0					
ANR	26810	IdentifierDeclType	int		26304	0					
ANR	26811	Identifier	wstatus		26304	1					
ANR	26812	IfStatement	"if ( waitpid ( pid , & wstatus , 0 ) == - 1 || ! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0 )"		26304	1					
ANR	26813	Condition	"waitpid ( pid , & wstatus , 0 ) == - 1 || ! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0"	2479:9:64329:64426	26304	0	True				
ANR	26814	OrExpression	"waitpid ( pid , & wstatus , 0 ) == - 1 || ! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0"		26304	0		||			
ANR	26815	EqualityExpression	"waitpid ( pid , & wstatus , 0 ) == - 1"		26304	0		==			
ANR	26816	CallExpression	"waitpid ( pid , & wstatus , 0 )"		26304	0					
ANR	26817	Callee	waitpid		26304	0					
ANR	26818	Identifier	waitpid		26304	0					
ANR	26819	ArgumentList	pid		26304	1					
ANR	26820	Argument	pid		26304	0					
ANR	26821	Identifier	pid		26304	0					
ANR	26822	Argument	& wstatus		26304	1					
ANR	26823	UnaryOperationExpression	& wstatus		26304	0					
ANR	26824	UnaryOperator	&		26304	0					
ANR	26825	Identifier	wstatus		26304	1					
ANR	26826	Argument	0		26304	2					
ANR	26827	PrimaryExpression	0		26304	0					
ANR	26828	UnaryOperationExpression	- 1		26304	1					
ANR	26829	UnaryOperator	-		26304	0					
ANR	26830	PrimaryExpression	1		26304	1					
ANR	26831	OrExpression	! WIFEXITED ( wstatus ) || WEXITSTATUS ( wstatus ) != 0		26304	1		||			
ANR	26832	UnaryOperationExpression	! WIFEXITED ( wstatus )		26304	0					
ANR	26833	UnaryOperator	!		26304	0					
ANR	26834	CallExpression	WIFEXITED ( wstatus )		26304	1					
ANR	26835	Callee	WIFEXITED		26304	0					
ANR	26836	Identifier	WIFEXITED		26304	0					
ANR	26837	ArgumentList	wstatus		26304	1					
ANR	26838	Argument	wstatus		26304	0					
ANR	26839	Identifier	wstatus		26304	0					
ANR	26840	EqualityExpression	WEXITSTATUS ( wstatus ) != 0		26304	1		!=			
ANR	26841	CallExpression	WEXITSTATUS ( wstatus )		26304	0					
ANR	26842	Callee	WEXITSTATUS		26304	0					
ANR	26843	Identifier	WEXITSTATUS		26304	0					
ANR	26844	ArgumentList	wstatus		26304	1					
ANR	26845	Argument	wstatus		26304	0					
ANR	26846	Identifier	wstatus		26304	0					
ANR	26847	PrimaryExpression	0		26304	1					
ANR	26848	ExpressionStatement	"fatal ( ""%s FAILED"" , editor_program )"	2482:7:64436:64471	26304	1	True				
ANR	26849	CallExpression	"fatal ( ""%s FAILED"" , editor_program )"		26304	0					
ANR	26850	Callee	fatal		26304	0					
ANR	26851	Identifier	fatal		26304	0					
ANR	26852	ArgumentList	"""%s FAILED"""		26304	1					
ANR	26853	Argument	"""%s FAILED"""		26304	0					
ANR	26854	PrimaryExpression	"""%s FAILED"""		26304	0					
ANR	26855	Argument	editor_program		26304	1					
ANR	26856	Identifier	editor_program		26304	0					
ANR	26857	ExpressionStatement	fclose ( tmpfp )	2486:4:64489:64503	26304	14	True				
ANR	26858	CallExpression	fclose ( tmpfp )		26304	0					
ANR	26859	Callee	fclose		26304	0					
ANR	26860	Identifier	fclose		26304	0					
ANR	26861	ArgumentList	tmpfp		26304	1					
ANR	26862	Argument	tmpfp		26304	0					
ANR	26863	Identifier	tmpfp		26304	0					
ANR	26864	ExpressionStatement	safe_unlink ( tmpname )	2487:4:64509:64530	26304	15	True				
ANR	26865	CallExpression	safe_unlink ( tmpname )		26304	0					
ANR	26866	Callee	safe_unlink		26304	0					
ANR	26867	Identifier	safe_unlink		26304	0					
ANR	26868	ArgumentList	tmpname		26304	1					
ANR	26869	Argument	tmpname		26304	0					
ANR	26870	Identifier	tmpname		26304	0					
ANR	26871	IfStatement	if ( ofp )		26304	16					
ANR	26872	Condition	ofp	2489:8:64541:64543	26304	0	True				
ANR	26873	Identifier	ofp		26304	0					
ANR	26874	CompoundStatement		104:1:2812:2817	26304	1					
ANR	26875	IdentifierDeclStatement	"FILE * ifp = fopen ( outname , binary_transput ? ""rb"" : ""r"" ) ;"	2491:1:64555:64612	26304	0	True				
ANR	26876	IdentifierDecl	"* ifp = fopen ( outname , binary_transput ? ""rb"" : ""r"" )"		26304	0					
ANR	26877	IdentifierDeclType	FILE *		26304	0					
ANR	26878	Identifier	ifp		26304	1					
ANR	26879	AssignmentExpression	"* ifp = fopen ( outname , binary_transput ? ""rb"" : ""r"" )"		26304	2		=			
ANR	26880	Identifier	ifp		26304	0					
ANR	26881	CallExpression	"fopen ( outname , binary_transput ? ""rb"" : ""r"" )"		26304	1					
ANR	26882	Callee	fopen		26304	0					
ANR	26883	Identifier	fopen		26304	0					
ANR	26884	ArgumentList	outname		26304	1					
ANR	26885	Argument	outname		26304	0					
ANR	26886	Identifier	outname		26304	0					
ANR	26887	Argument	"binary_transput ? ""rb"" : ""r"""		26304	1					
ANR	26888	ConditionalExpression	"binary_transput ? ""rb"" : ""r"""		26304	0					
ANR	26889	Condition	binary_transput		26304	0					
ANR	26890	Identifier	binary_transput		26304	0					
ANR	26891	PrimaryExpression	"""rb"""		26304	1					
ANR	26892	PrimaryExpression	"""r"""		26304	2					
ANR	26893	IdentifierDeclStatement	int c ;	2492:1:64615:64620	26304	1	True				
ANR	26894	IdentifierDecl	c		26304	0					
ANR	26895	IdentifierDeclType	int		26304	0					
ANR	26896	Identifier	c		26304	1					
ANR	26897	IfStatement	if ( ! ifp )		26304	2					
ANR	26898	Condition	! ifp	2493:5:64627:64630	26304	0	True				
ANR	26899	UnaryOperationExpression	! ifp		26304	0					
ANR	26900	UnaryOperator	!		26304	0					
ANR	26901	Identifier	ifp		26304	1					
ANR	26902	ExpressionStatement	"pfatal ( ""can't open '%s'"" , outname )"	2494:3:64636:64671	26304	1	True				
ANR	26903	CallExpression	"pfatal ( ""can't open '%s'"" , outname )"		26304	0					
ANR	26904	Callee	pfatal		26304	0					
ANR	26905	Identifier	pfatal		26304	0					
ANR	26906	ArgumentList	"""can't open '%s'"""		26304	1					
ANR	26907	Argument	"""can't open '%s'"""		26304	0					
ANR	26908	PrimaryExpression	"""can't open '%s'"""		26304	0					
ANR	26909	Argument	outname		26304	1					
ANR	26910	Identifier	outname		26304	0					
ANR	26911	WhileStatement	while ( ( c = getc ( ifp ) ) != EOF )		26304	3					
ANR	26912	Condition	( c = getc ( ifp ) ) != EOF	2495:8:64681:64703	26304	0	True				
ANR	26913	EqualityExpression	( c = getc ( ifp ) ) != EOF		26304	0		!=			
ANR	26914	AssignmentExpression	c = getc ( ifp )		26304	0		=			
ANR	26915	Identifier	c		26304	0					
ANR	26916	CallExpression	getc ( ifp )		26304	1					
ANR	26917	Callee	getc		26304	0					
ANR	26918	Identifier	getc		26304	0					
ANR	26919	ArgumentList	ifp		26304	1					
ANR	26920	Argument	ifp		26304	0					
ANR	26921	Identifier	ifp		26304	0					
ANR	26922	Identifier	EOF		26304	1					
ANR	26923	IfStatement	"if ( putc ( c , ofp ) == EOF )"		26304	1					
ANR	26924	Condition	"putc ( c , ofp ) == EOF"	2496:7:64713:64732	26304	0	True				
ANR	26925	EqualityExpression	"putc ( c , ofp ) == EOF"		26304	0		==			
ANR	26926	CallExpression	"putc ( c , ofp )"		26304	0					
ANR	26927	Callee	putc		26304	0					
ANR	26928	Identifier	putc		26304	0					
ANR	26929	ArgumentList	c		26304	1					
ANR	26930	Argument	c		26304	0					
ANR	26931	Identifier	c		26304	0					
ANR	26932	Argument	ofp		26304	1					
ANR	26933	Identifier	ofp		26304	0					
ANR	26934	Identifier	EOF		26304	1					
ANR	26935	ExpressionStatement	write_fatal ( )	2497:5:64740:64754	26304	1	True				
ANR	26936	CallExpression	write_fatal ( )		26304	0					
ANR	26937	Callee	write_fatal		26304	0					
ANR	26938	Identifier	write_fatal		26304	0					
ANR	26939	ArgumentList			26304	1					
ANR	26940	IfStatement	if ( ferror ( ifp ) || fclose ( ifp ) != 0 )		26304	4					
ANR	26941	Condition	ferror ( ifp ) || fclose ( ifp ) != 0	2498:5:64761:64793	26304	0	True				
ANR	26942	OrExpression	ferror ( ifp ) || fclose ( ifp ) != 0		26304	0		||			
ANR	26943	CallExpression	ferror ( ifp )		26304	0					
ANR	26944	Callee	ferror		26304	0					
ANR	26945	Identifier	ferror		26304	0					
ANR	26946	ArgumentList	ifp		26304	1					
ANR	26947	Argument	ifp		26304	0					
ANR	26948	Identifier	ifp		26304	0					
ANR	26949	EqualityExpression	fclose ( ifp ) != 0		26304	1		!=			
ANR	26950	CallExpression	fclose ( ifp )		26304	0					
ANR	26951	Callee	fclose		26304	0					
ANR	26952	Identifier	fclose		26304	0					
ANR	26953	ArgumentList	ifp		26304	1					
ANR	26954	Argument	ifp		26304	0					
ANR	26955	Identifier	ifp		26304	0					
ANR	26956	PrimaryExpression	0		26304	1					
ANR	26957	ExpressionStatement	read_fatal ( )	2499:3:64799:64812	26304	1	True				
ANR	26958	CallExpression	read_fatal ( )		26304	0					
ANR	26959	Callee	read_fatal		26304	0					
ANR	26960	Identifier	read_fatal		26304	0					
ANR	26961	ArgumentList			26304	1					
ANR	26962	ReturnType	void		26304	1					
ANR	26963	Identifier	do_ed_script		26304	2					
ANR	26964	ParameterList	"char const * inname , char const * outname , bool * outname_needs_removal , FILE * ofp"		26304	3					
ANR	26965	Parameter	char const * inname	2387:14:61714:61731	26304	0	True				
ANR	26966	ParameterType	char const *		26304	0					
ANR	26967	Identifier	inname		26304	1					
ANR	26968	Parameter	char const * outname	2387:34:61734:61752	26304	1	True				
ANR	26969	ParameterType	char const *		26304	0					
ANR	26970	Identifier	outname		26304	1					
ANR	26971	Parameter	bool * outname_needs_removal	2388:7:61762:61788	26304	2	True				
ANR	26972	ParameterType	bool *		26304	0					
ANR	26973	Identifier	outname_needs_removal		26304	1					
ANR	26974	Parameter	FILE * ofp	2388:36:61791:61799	26304	3	True				
ANR	26975	ParameterType	FILE *		26304	0					
ANR	26976	Identifier	ofp		26304	1					
ANR	26977	CFGEntryNode	ENTRY		26304		True				
ANR	26978	CFGExitNode	EXIT		26304		True				
ANR	26979	InfiniteForNode	true		26304		True				
ANR	26980	Symbol	tmpfd		26304						
ANR	26981	Symbol	fflush		26304						
ANR	26982	Symbol	putc		26304						
ANR	26983	Symbol	chars_read		26304						
ANR	26984	Symbol	stdout		26304						
ANR	26985	Symbol	beginning_of_this_line		26304						
ANR	26986	Symbol	inerrno		26304						
ANR	26987	Symbol	instat		26304						
ANR	26988	Symbol	pid		26304						
ANR	26989	Symbol	WEXITSTATUS		26304						
ANR	26990	Symbol	ed_command_letter		26304						
ANR	26991	Symbol	& wstatus		26304						
ANR	26992	Symbol	instat . st_mode		26304						
ANR	26993	Symbol	tmpname		26304						
ANR	26994	Symbol	strEQ		26304						
ANR	26995	Symbol	exclusive		26304						
ANR	26996	Symbol	file_tell		26304						
ANR	26997	Symbol	* buf		26304						
ANR	26998	Symbol	NULL		26304						
ANR	26999	Symbol	editor_program		26304						
ANR	27000	Symbol	ferror		26304						
ANR	27001	Symbol	tmpfp		26304						
ANR	27002	Symbol	true		26304						
ANR	27003	Symbol	dry_run		26304						
ANR	27004	Symbol	pfp		26304						
ANR	27005	Symbol	binary_transput		26304						
ANR	27006	Symbol	p_input_line		26304						
ANR	27007	Symbol	quotearg		26304						
ANR	27008	Symbol	lseek		26304						
ANR	27009	Symbol	O_BINARY		26304						
ANR	27010	Symbol	make_tempfile		26304						
ANR	27011	Symbol	outname		26304						
ANR	27012	Symbol	fdopen		26304						
ANR	27013	Symbol	O_RDWR		26304						
ANR	27014	Symbol	EDITOR_PROGRAM		26304						
ANR	27015	Symbol	WIFEXITED		26304						
ANR	27016	Symbol	& tmpname		26304						
ANR	27017	Symbol	outname_needs_removal		26304						
ANR	27018	Symbol	VERBOSE		26304						
ANR	27019	Symbol	EOF		26304						
ANR	27020	Symbol	inname		26304						
ANR	27021	Symbol	get_ed_command_letter		26304						
ANR	27022	Symbol	SEEK_SET		26304						
ANR	27023	Symbol	* outname_needs_removal		26304						
ANR	27024	Symbol	fopen		26304						
ANR	27025	Symbol	c		26304						
ANR	27026	Symbol	O_EXCL		26304						
ANR	27027	Symbol	fclose		26304						
ANR	27028	Symbol	false		26304						
ANR	27029	Symbol	fwrite		26304						
ANR	27030	Symbol	ENOENT		26304						
ANR	27031	Symbol	get_line		26304						
ANR	27032	Symbol	buf		26304						
ANR	27033	Symbol	fork		26304						
ANR	27034	Symbol	ifp		26304						
ANR	27035	Symbol	ofp		26304						
ANR	27036	Symbol	skip_rest_of_patch		26304						
ANR	27037	Symbol	wstatus		26304						
ANR	27038	Symbol	getc		26304						
ANR	27039	Symbol	verbosity		26304						
ANR	27040	Symbol	p_pass_comments_through		26304						
ANR	27041	Symbol	waitpid		26304						
ANR	27042	Function	pch_normalize	2503:0:64825:66054							
ANR	27043	FunctionDef	pch_normalize (enum diff format)		27042	0					
ANR	27044	CompoundStatement		2505:0:64863:66054	27042	0					
ANR	27045	IdentifierDeclStatement	lin old = 1 ;	2506:2:64867:64878	27042	0	True				
ANR	27046	IdentifierDecl	old = 1		27042	0					
ANR	27047	IdentifierDeclType	lin		27042	0					
ANR	27048	Identifier	old		27042	1					
ANR	27049	AssignmentExpression	old = 1		27042	2		=			
ANR	27050	Identifier	old		27042	0					
ANR	27051	PrimaryExpression	1		27042	1					
ANR	27052	Statement	lin	2507:2:64882:64884	27042	1	True				
ANR	27053	Statement	new	2507:6:64886:64888	27042	2	True				
ANR	27054	Statement	=	2507:10:64890:64890	27042	3	True				
ANR	27055	ExpressionStatement	p_ptrn_lines + 1	2507:12:64892:64908	27042	4	True				
ANR	27056	AdditiveExpression	p_ptrn_lines + 1		27042	0		+			
ANR	27057	Identifier	p_ptrn_lines		27042	0					
ANR	27058	PrimaryExpression	1		27042	1					
ANR	27059	Statement	while	2509:2:64913:64917	27042	5	True				
ANR	27060	Statement	(	2509:8:64919:64919	27042	6	True				
ANR	27061	Statement	p_Char	2509:9:64920:64925	27042	7	True				
ANR	27062	Statement	[	2509:15:64926:64926	27042	8	True				
ANR	27063	Statement	new	2509:16:64927:64929	27042	9	True				
ANR	27064	Statement	]	2509:19:64930:64930	27042	10	True				
ANR	27065	Statement	==	2509:21:64932:64933	27042	11	True				
ANR	27066	Statement	'='	2509:24:64935:64937	27042	12	True				
ANR	27067	Statement	||	2509:28:64939:64940	27042	13	True				
ANR	27068	Statement	p_Char	2509:31:64942:64947	27042	14	True				
ANR	27069	Statement	[	2509:37:64948:64948	27042	15	True				
ANR	27070	Statement	new	2509:38:64949:64951	27042	16	True				
ANR	27071	Statement	]	2509:41:64952:64952	27042	17	True				
ANR	27072	Statement	==	2509:43:64954:64955	27042	18	True				
ANR	27073	Statement	'\\n'	2509:46:64957:64960	27042	19	True				
ANR	27074	Statement	)	2509:50:64961:64961	27042	20	True				
ANR	27075	Statement	new	2510:4:64967:64969	27042	21	True				
ANR	27076	Statement	++	2510:7:64970:64971	27042	22	True				
ANR	27077	ExpressionStatement		2510:9:64972:64972	27042	23	True				
ANR	27078	IfStatement	if ( format == UNI_DIFF )		27042	24					
ANR	27079	Condition	format == UNI_DIFF	2512:6:64981:64998	27042	0	True				
ANR	27080	EqualityExpression	format == UNI_DIFF		27042	0		==			
ANR	27081	Identifier	format		27042	0					
ANR	27082	Identifier	UNI_DIFF		27042	1					
ANR	27083	CompoundStatement		9:4:141:141	27042	1					
ANR	27084	ForStatement	for ( ; old <= p_ptrn_lines ; old ++ )		27042	0					
ANR	27085	Condition	old <= p_ptrn_lines	2517:13:65114:65132	27042	0	True				
ANR	27086	RelationalExpression	old <= p_ptrn_lines		27042	0		<=			
ANR	27087	Identifier	old		27042	0					
ANR	27088	Identifier	p_ptrn_lines		27042	1					
ANR	27089	PostIncDecOperationExpression	old ++	2517:34:65135:65139	27042	1	True				
ANR	27090	Identifier	old		27042	0					
ANR	27091	IncDec	++		27042	1					
ANR	27092	IfStatement	if ( p_Char [ old ] == '!' )		27042	2					
ANR	27093	Condition	p_Char [ old ] == '!'	2518:5:65147:65164	27042	0	True				
ANR	27094	EqualityExpression	p_Char [ old ] == '!'		27042	0		==			
ANR	27095	ArrayIndexing	p_Char [ old ]		27042	0					
ANR	27096	Identifier	p_Char		27042	0					
ANR	27097	Identifier	old		27042	1					
ANR	27098	PrimaryExpression	'!'		27042	1					
ANR	27099	ExpressionStatement	p_Char [ old ] = '-'	2519:3:65170:65187	27042	1	True				
ANR	27100	AssignmentExpression	p_Char [ old ] = '-'		27042	0		=			
ANR	27101	ArrayIndexing	p_Char [ old ]		27042	0					
ANR	27102	Identifier	p_Char		27042	0					
ANR	27103	Identifier	old		27042	1					
ANR	27104	PrimaryExpression	'-'		27042	1					
ANR	27105	Statement	for	2520:6:65195:65197	27042	1	True				
ANR	27106	Statement	(	2520:10:65199:65199	27042	2	True				
ANR	27107	ExpressionStatement		2520:11:65200:65200	27042	3	True				
ANR	27108	Statement	new	2520:13:65202:65204	27042	4	True				
ANR	27109	Statement	<=	2520:17:65206:65207	27042	5	True				
ANR	27110	ExpressionStatement	p_end	2520:20:65209:65214	27042	6	True				
ANR	27111	Identifier	p_end		27042	0					
ANR	27112	Statement	new	2520:27:65216:65218	27042	7	True				
ANR	27113	Statement	++	2520:30:65219:65220	27042	8	True				
ANR	27114	Statement	)	2520:32:65221:65221	27042	9	True				
ANR	27115	Statement	if	2521:1:65224:65225	27042	10	True				
ANR	27116	Statement	(	2521:4:65227:65227	27042	11	True				
ANR	27117	Statement	p_Char	2521:5:65228:65233	27042	12	True				
ANR	27118	Statement	[	2521:11:65234:65234	27042	13	True				
ANR	27119	Statement	new	2521:12:65235:65237	27042	14	True				
ANR	27120	Statement	]	2521:15:65238:65238	27042	15	True				
ANR	27121	Statement	==	2521:17:65240:65241	27042	16	True				
ANR	27122	Statement	'!'	2521:20:65243:65245	27042	17	True				
ANR	27123	Statement	)	2521:23:65246:65246	27042	18	True				
ANR	27124	Statement	p_Char	2522:3:65251:65256	27042	19	True				
ANR	27125	Statement	[	2522:9:65257:65257	27042	20	True				
ANR	27126	Statement	new	2522:10:65258:65260	27042	21	True				
ANR	27127	Statement	]	2522:13:65261:65261	27042	22	True				
ANR	27128	Statement	=	2522:15:65263:65263	27042	23	True				
ANR	27129	ExpressionStatement	'+'	2522:17:65265:65268	27042	24	True				
ANR	27130	PrimaryExpression	'+'		27042	0					
ANR	27131	ElseStatement	else		27042	0					
ANR	27132	Statement	if	2555:8:65871:65872	27042	0	True				
ANR	27133	ReturnType	void		27042	1					
ANR	27134	Identifier	pch_normalize		27042	2					
ANR	27135	ParameterList	enum diff format		27042	3					
ANR	27136	Parameter	enum diff format	2504:15:64845:64860	27042	0	True				
ANR	27137	ParameterType	enum diff		27042	0					
ANR	27138	Identifier	format		27042	1					
ANR	27139	CFGEntryNode	ENTRY		27042		True				
ANR	27140	CFGExitNode	EXIT		27042		True				
ANR	27141	Symbol	* old		27042						
ANR	27142	Symbol	UNI_DIFF		27042						
ANR	27143	Symbol	p_ptrn_lines		27042						
ANR	27144	Symbol	old		27042						
ANR	27145	Symbol	format		27042						
ANR	27146	Symbol	* p_Char		27042						
ANR	27147	Symbol	p_Char		27042						
