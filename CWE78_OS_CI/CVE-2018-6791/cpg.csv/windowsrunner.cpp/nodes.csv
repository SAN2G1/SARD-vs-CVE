command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	865693	File	data/converged/CVE-2018-6791_plasma-workspace/windowsrunner.cpp								
ANR	865694	Function	WindowsRunner :: WindowsRunner	37:0:1668:3729							
ANR	865695	FunctionDef	"WindowsRunner :: WindowsRunner (QObject * parent , const QVariantList & args)"		865694	0					
ANR	865696	CompoundStatement		41:0:1823:3729	865694	0					
ANR	865697	Statement	Q_UNUSED	42:4:1829:1836	865694	0	True				
ANR	865698	ExpressionStatement	"( args ) setObjectName ( QLatin1String ( ""Windows"" ) )"	42:12:1837:1889	865694	1	True				
ANR	865699	CastExpression	"( args ) setObjectName ( QLatin1String ( ""Windows"" ) )"		865694	0					
ANR	865700	CastTarget	args		865694	0					
ANR	865701	CallExpression	"setObjectName ( QLatin1String ( ""Windows"" ) )"		865694	1					
ANR	865702	Callee	setObjectName		865694	0					
ANR	865703	Identifier	setObjectName		865694	0					
ANR	865704	ArgumentList	"QLatin1String ( ""Windows"" )"		865694	1					
ANR	865705	Argument	"QLatin1String ( ""Windows"" )"		865694	0					
ANR	865706	CallExpression	"QLatin1String ( ""Windows"" )"		865694	0					
ANR	865707	Callee	QLatin1String		865694	0					
ANR	865708	Identifier	QLatin1String		865694	0					
ANR	865709	ArgumentList	"""Windows"""		865694	1					
ANR	865710	Argument	"""Windows"""		865694	0					
ANR	865711	PrimaryExpression	"""Windows"""		865694	0					
ANR	865712	Statement	addSyntax	45:4:1896:1904	865694	2	True				
ANR	865713	Statement	(	45:13:1905:1905	865694	3	True				
ANR	865714	Statement	Plasma	45:14:1906:1911	865694	4	True				
ANR	865715	Statement	::	45:20:1912:1913	865694	5	True				
ANR	865716	Statement	RunnerSyntax	45:22:1914:1925	865694	6	True				
ANR	865717	Statement	(	45:34:1926:1926	865694	7	True				
ANR	865718	Statement	QStringLiteral	45:35:1927:1940	865694	8	True				
ANR	865719	Statement	(	45:49:1941:1941	865694	9	True				
ANR	865720	Statement	""":q:"""	45:50:1942:1946	865694	10	True				
ANR	865721	Statement	)	45:55:1947:1947	865694	11	True				
ANR	865722	Statement	","	45:56:1948:1948	865694	12	True				
ANR	865723	Statement	i18n	45:58:1950:1953	865694	13	True				
ANR	865724	Statement	(	45:62:1954:1954	865694	14	True				
ANR	865725	Statement	"""Finds windows whose name, window class or window role match :q:. """	45:63:1955:2021	865694	15	True				
ANR	865726	Statement	"""It is possible to interact with the windows by using one of the following keywords: """	46:35:2058:2143	865694	16	True				
ANR	865727	Statement	"""activate, close, min(imize), max(imize), fullscreen, shade, keep above and keep below."""	47:35:2180:2267	865694	17	True				
ANR	865728	Statement	)	47:123:2268:2268	865694	18	True				
ANR	865729	Statement	)	47:124:2269:2269	865694	19	True				
ANR	865730	Statement	)	47:125:2270:2270	865694	20	True				
ANR	865731	ExpressionStatement		47:126:2271:2271	865694	21	True				
ANR	865732	Statement	addSyntax	48:4:2277:2285	865694	22	True				
ANR	865733	Statement	(	48:13:2286:2286	865694	23	True				
ANR	865734	Statement	Plasma	48:14:2287:2292	865694	24	True				
ANR	865735	Statement	::	48:20:2293:2294	865694	25	True				
ANR	865736	Statement	RunnerSyntax	48:22:2295:2306	865694	26	True				
ANR	865737	Statement	(	48:34:2307:2307	865694	27	True				
ANR	865738	Statement	QStringLiteral	48:35:2308:2321	865694	28	True				
ANR	865739	Statement	(	48:49:2322:2322	865694	29	True				
ANR	865740	Statement	""":q:"""	48:50:2323:2327	865694	30	True				
ANR	865741	Statement	)	48:55:2328:2328	865694	31	True				
ANR	865742	Statement	","	48:56:2329:2329	865694	32	True				
ANR	865743	Statement	i18n	48:58:2331:2334	865694	33	True				
ANR	865744	Statement	(	48:62:2335:2335	865694	34	True				
ANR	865745	Statement	"""Finds windows which are on desktop named :q: """	48:63:2336:2382	865694	35	True				
ANR	865746	Statement	"""It is possible to interact with the windows by using one of the following keywords: """	49:35:2419:2504	865694	36	True				
ANR	865747	Statement	"""activate, close, min(imize), max(imize), fullscreen, shade, keep above and keep below."""	50:35:2541:2628	865694	37	True				
ANR	865748	Statement	)	50:123:2629:2629	865694	38	True				
ANR	865749	Statement	)	50:124:2630:2630	865694	39	True				
ANR	865750	Statement	)	50:125:2631:2631	865694	40	True				
ANR	865751	ExpressionStatement		50:126:2632:2632	865694	41	True				
ANR	865752	ExpressionStatement	"addSyntax ( Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) ) )"	51:4:2638:2729	865694	42	True				
ANR	865753	CallExpression	"addSyntax ( Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) ) )"		865694	0					
ANR	865754	Callee	addSyntax		865694	0					
ANR	865755	Identifier	addSyntax		865694	0					
ANR	865756	ArgumentList	"Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) )"		865694	1					
ANR	865757	Argument	"Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) )"		865694	0					
ANR	865758	CallExpression	"Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) )"		865694	0					
ANR	865759	Callee	Plasma :: RunnerSyntax		865694	0					
ANR	865760	Identifier	Plasma :: RunnerSyntax		865694	0					
ANR	865761	ArgumentList	"QStringLiteral ( "":q:"" )"		865694	1					
ANR	865762	Argument	"QStringLiteral ( "":q:"" )"		865694	0					
ANR	865763	CallExpression	"QStringLiteral ( "":q:"" )"		865694	0					
ANR	865764	Callee	QStringLiteral		865694	0					
ANR	865765	Identifier	QStringLiteral		865694	0					
ANR	865766	ArgumentList	""":q:"""		865694	1					
ANR	865767	Argument	""":q:"""		865694	0					
ANR	865768	PrimaryExpression	""":q:"""		865694	0					
ANR	865769	Argument	"i18n ( ""Switch to desktop named :q:"" )"		865694	1					
ANR	865770	CallExpression	"i18n ( ""Switch to desktop named :q:"" )"		865694	0					
ANR	865771	Callee	i18n		865694	0					
ANR	865772	Identifier	i18n		865694	0					
ANR	865773	ArgumentList	"""Switch to desktop named :q:"""		865694	1					
ANR	865774	Argument	"""Switch to desktop named :q:"""		865694	0					
ANR	865775	PrimaryExpression	"""Switch to desktop named :q:"""		865694	0					
ANR	865776	Statement	setDefaultSyntax	52:4:2735:2750	865694	43	True				
ANR	865777	Statement	(	52:20:2751:2751	865694	44	True				
ANR	865778	Statement	Plasma	52:21:2752:2757	865694	45	True				
ANR	865779	Statement	::	52:27:2758:2759	865694	46	True				
ANR	865780	Statement	RunnerSyntax	52:29:2760:2771	865694	47	True				
ANR	865781	Statement	(	52:41:2772:2772	865694	48	True				
ANR	865782	Statement	i18nc	52:42:2773:2777	865694	49	True				
ANR	865783	Statement	(	52:47:2778:2778	865694	50	True				
ANR	865784	Statement	"""Note this is a KRunner keyword"""	52:48:2779:2810	865694	51	True				
ANR	865785	Statement	","	52:80:2811:2811	865694	52	True				
ANR	865786	Statement	"""window"""	52:82:2813:2820	865694	53	True				
ANR	865787	Statement	)	52:90:2821:2821	865694	54	True				
ANR	865788	Statement	","	52:91:2822:2822	865694	55	True				
ANR	865789	Statement	i18n	53:35:2859:2862	865694	56	True				
ANR	865790	Statement	(	53:39:2863:2863	865694	57	True				
ANR	865791	Statement	"""Lists all windows and allows to activate them. """	53:40:2864:2912	865694	58	True				
ANR	865792	Statement	"""With name=, class=, role= and desktop= the list can be reduced to """	54:35:2949:3016	865694	59	True				
ANR	865793	Statement	"""windows matching these restrictions. """	55:35:3053:3091	865694	60	True				
ANR	865794	Statement	"""It is possible to interact with the windows by using one of the following keywords: """	56:35:3128:3213	865694	61	True				
ANR	865795	Statement	"""activate, close, min(imize), max(imize), fullscreen, shade, keep above and keep below."""	57:35:3250:3337	865694	62	True				
ANR	865796	Statement	)	57:123:3338:3338	865694	63	True				
ANR	865797	Statement	)	57:124:3339:3339	865694	64	True				
ANR	865798	Statement	)	57:125:3340:3340	865694	65	True				
ANR	865799	ExpressionStatement		57:126:3341:3341	865694	66	True				
ANR	865800	ExpressionStatement	"addSyntax ( Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) ) )"	58:4:3347:3529	865694	67	True				
ANR	865801	CallExpression	"addSyntax ( Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) ) )"		865694	0					
ANR	865802	Callee	addSyntax		865694	0					
ANR	865803	Identifier	addSyntax		865694	0					
ANR	865804	ArgumentList	"Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) )"		865694	1					
ANR	865805	Argument	"Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) )"		865694	0					
ANR	865806	CallExpression	"Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) )"		865694	0					
ANR	865807	Callee	Plasma :: RunnerSyntax		865694	0					
ANR	865808	Identifier	Plasma :: RunnerSyntax		865694	0					
ANR	865809	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		865694	1					
ANR	865810	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		865694	0					
ANR	865811	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		865694	0					
ANR	865812	Callee	i18nc		865694	0					
ANR	865813	Identifier	i18nc		865694	0					
ANR	865814	ArgumentList	"""Note this is a KRunner keyword"""		865694	1					
ANR	865815	Argument	"""Note this is a KRunner keyword"""		865694	0					
ANR	865816	PrimaryExpression	"""Note this is a KRunner keyword"""		865694	0					
ANR	865817	Argument	"""desktop"""		865694	1					
ANR	865818	PrimaryExpression	"""desktop"""		865694	0					
ANR	865819	Argument	"i18n ( ""Lists all other desktops and allows to switch to them."" )"		865694	1					
ANR	865820	CallExpression	"i18n ( ""Lists all other desktops and allows to switch to them."" )"		865694	0					
ANR	865821	Callee	i18n		865694	0					
ANR	865822	Identifier	i18n		865694	0					
ANR	865823	ArgumentList	"""Lists all other desktops and allows to switch to them."""		865694	1					
ANR	865824	Argument	"""Lists all other desktops and allows to switch to them."""		865694	0					
ANR	865825	PrimaryExpression	"""Lists all other desktops and allows to switch to them."""		865694	0					
ANR	865826	ExpressionStatement	"connect ( this , & Plasma :: AbstractRunner :: prepare , this , & WindowsRunner :: prepareForMatchSession )"	61:4:3536:3629	865694	68	True				
ANR	865827	CallExpression	"connect ( this , & Plasma :: AbstractRunner :: prepare , this , & WindowsRunner :: prepareForMatchSession )"		865694	0					
ANR	865828	Callee	connect		865694	0					
ANR	865829	Identifier	connect		865694	0					
ANR	865830	ArgumentList	this		865694	1					
ANR	865831	Argument	this		865694	0					
ANR	865832	Identifier	this		865694	0					
ANR	865833	Argument	& Plasma :: AbstractRunner :: prepare		865694	1					
ANR	865834	UnaryOperationExpression	& Plasma :: AbstractRunner :: prepare		865694	0					
ANR	865835	UnaryOperator	&		865694	0					
ANR	865836	Identifier	Plasma :: AbstractRunner :: prepare		865694	1					
ANR	865837	Argument	this		865694	2					
ANR	865838	Identifier	this		865694	0					
ANR	865839	Argument	& WindowsRunner :: prepareForMatchSession		865694	3					
ANR	865840	UnaryOperationExpression	& WindowsRunner :: prepareForMatchSession		865694	0					
ANR	865841	UnaryOperator	&		865694	0					
ANR	865842	Identifier	WindowsRunner :: prepareForMatchSession		865694	1					
ANR	865843	ExpressionStatement	"connect ( this , & Plasma :: AbstractRunner :: teardown , this , & WindowsRunner :: matchSessionComplete )"	62:4:3635:3727	865694	69	True				
ANR	865844	CallExpression	"connect ( this , & Plasma :: AbstractRunner :: teardown , this , & WindowsRunner :: matchSessionComplete )"		865694	0					
ANR	865845	Callee	connect		865694	0					
ANR	865846	Identifier	connect		865694	0					
ANR	865847	ArgumentList	this		865694	1					
ANR	865848	Argument	this		865694	0					
ANR	865849	Identifier	this		865694	0					
ANR	865850	Argument	& Plasma :: AbstractRunner :: teardown		865694	1					
ANR	865851	UnaryOperationExpression	& Plasma :: AbstractRunner :: teardown		865694	0					
ANR	865852	UnaryOperator	&		865694	0					
ANR	865853	Identifier	Plasma :: AbstractRunner :: teardown		865694	1					
ANR	865854	Argument	this		865694	2					
ANR	865855	Identifier	this		865694	0					
ANR	865856	Argument	& WindowsRunner :: matchSessionComplete		865694	3					
ANR	865857	UnaryOperationExpression	& WindowsRunner :: matchSessionComplete		865694	0					
ANR	865858	UnaryOperator	&		865694	0					
ANR	865859	Identifier	WindowsRunner :: matchSessionComplete		865694	1					
ANR	865860	Identifier	WindowsRunner :: WindowsRunner		865694	1					
ANR	865861	ParameterList	"QObject * parent , const QVariantList & args"		865694	2					
ANR	865862	Parameter	QObject * parent	37:29:1697:1711	865694	0	True				
ANR	865863	ParameterType	QObject *		865694	0					
ANR	865864	Identifier	parent		865694	1					
ANR	865865	Parameter	const QVariantList & args	37:46:1714:1737	865694	1	True				
ANR	865866	ParameterType	const QVariantList &		865694	0					
ANR	865867	Identifier	args		865694	1					
ANR	865868	CFGEntryNode	ENTRY		865694		True				
ANR	865869	CFGExitNode	EXIT		865694		True				
ANR	865870	Symbol	args		865694						
ANR	865871	Symbol	QLatin1String		865694						
ANR	865872	Symbol	parent		865694						
ANR	865873	Symbol	& Plasma :: AbstractRunner :: prepare		865694						
ANR	865874	Symbol	& WindowsRunner :: matchSessionComplete		865694						
ANR	865875	Symbol	this		865694						
ANR	865876	Symbol	QStringLiteral		865694						
ANR	865877	Symbol	i18nc		865694						
ANR	865878	Symbol	Plasma :: RunnerSyntax		865694						
ANR	865879	Symbol	& WindowsRunner :: prepareForMatchSession		865694						
ANR	865880	Symbol	& Plasma :: AbstractRunner :: teardown		865694						
ANR	865881	Symbol	i18n		865694						
ANR	865882	Function	WindowsRunner :: ~WindowsRunner	65:0:3732:3766							
ANR	865883	FunctionDef	WindowsRunner :: ~WindowsRunner ()		865882	0					
ANR	865884	CompoundStatement		66:0:3764:3766	865882	0					
ANR	865885	Identifier	WindowsRunner :: ~WindowsRunner		865882	1					
ANR	865886	ParameterList			865882	2					
ANR	865887	CFGEntryNode	ENTRY		865882		True				
ANR	865888	CFGExitNode	EXIT		865882		True				
ANR	865889	Function	WindowsRunner :: gatherInfo	70:0:3798:5282							
ANR	865890	FunctionDef	WindowsRunner :: gatherInfo ()		865889	0					
ANR	865891	CompoundStatement		71:0:3831:5282	865889	0					
ANR	865892	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	72:4:3837:3866	865889	0	True				
ANR	865893	IdentifierDecl	locker ( & m_mutex )		865889	0					
ANR	865894	IdentifierDeclType	QMutexLocker		865889	0					
ANR	865895	Identifier	locker		865889	1					
ANR	865896	UnaryOperationExpression	& m_mutex		865889	2					
ANR	865897	UnaryOperator	&		865889	0					
ANR	865898	Identifier	m_mutex		865889	1					
ANR	865899	IfStatement	if ( ! m_inSession )		865889	1					
ANR	865900	Condition	! m_inSession	73:8:3876:3887	865889	0	True				
ANR	865901	UnaryOperationExpression	! m_inSession		865889	0					
ANR	865902	UnaryOperator	!		865889	0					
ANR	865903	Identifier	m_inSession		865889	1					
ANR	865904	CompoundStatement		3:22:58:58	865889	1					
ANR	865905	ReturnStatement	return ;	74:8:3900:3906	865889	0	True				
ANR	865906	Statement	foreach	77:4:3919:3925	865889	2	True				
ANR	865907	Statement	(	77:12:3927:3927	865889	3	True				
ANR	865908	Statement	const	77:13:3928:3932	865889	4	True				
ANR	865909	Statement	WId	77:19:3934:3936	865889	5	True				
ANR	865910	Statement	w	77:23:3938:3938	865889	6	True				
ANR	865911	Statement	","	77:24:3939:3939	865889	7	True				
ANR	865912	Statement	KWindowSystem	77:26:3941:3953	865889	8	True				
ANR	865913	Statement	::	77:39:3954:3955	865889	9	True				
ANR	865914	Statement	windows	77:41:3956:3962	865889	10	True				
ANR	865915	Statement	(	77:48:3963:3963	865889	11	True				
ANR	865916	Statement	)	77:49:3964:3964	865889	12	True				
ANR	865917	Statement	)	77:50:3965:3965	865889	13	True				
ANR	865918	CompoundStatement		8:8:145:505	865889	14					
ANR	865919	IdentifierDeclStatement	"KWindowInfo info = KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions ) ;"	78:8:3977:4337	865889	0	True				
ANR	865920	IdentifierDecl	"info = KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions )"		865889	0					
ANR	865921	IdentifierDeclType	KWindowInfo		865889	0					
ANR	865922	Identifier	info		865889	1					
ANR	865923	AssignmentExpression	"info = KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions )"		865889	2		=			
ANR	865924	Identifier	info		865889	0					
ANR	865925	CallExpression	"KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions )"		865889	1					
ANR	865926	Callee	KWindowSystem :: windowInfo		865889	0					
ANR	865927	Identifier	KWindowSystem :: windowInfo		865889	0					
ANR	865928	ArgumentList	w		865889	1					
ANR	865929	Argument	w		865889	0					
ANR	865930	Identifier	w		865889	0					
ANR	865931	Argument	NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName		865889	1					
ANR	865932	InclusiveOrExpression	NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName		865889	0		|			
ANR	865933	Identifier	NET :: WMWindowType		865889	0					
ANR	865934	InclusiveOrExpression	NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName		865889	1		|			
ANR	865935	Identifier	NET :: WMDesktop		865889	0					
ANR	865936	InclusiveOrExpression	NET :: WMState | NET :: XAWMState | NET :: WMName		865889	1		|			
ANR	865937	Identifier	NET :: WMState		865889	0					
ANR	865938	InclusiveOrExpression	NET :: XAWMState | NET :: WMName		865889	1		|			
ANR	865939	Identifier	NET :: XAWMState		865889	0					
ANR	865940	Identifier	NET :: WMName		865889	1					
ANR	865941	Argument	NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions		865889	2					
ANR	865942	InclusiveOrExpression	NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions		865889	0		|			
ANR	865943	Identifier	NET :: WM2WindowClass		865889	0					
ANR	865944	InclusiveOrExpression	NET :: WM2WindowRole | NET :: WM2AllowedActions		865889	1		|			
ANR	865945	Identifier	NET :: WM2WindowRole		865889	0					
ANR	865946	Identifier	NET :: WM2AllowedActions		865889	1					
ANR	865947	IfStatement	if ( info . valid ( ) )		865889	1					
ANR	865948	Condition	info . valid ( )	82:12:4351:4362	865889	0	True				
ANR	865949	CallExpression	info . valid ( )		865889	0					
ANR	865950	Callee	info . valid		865889	0					
ANR	865951	MemberAccess	info . valid		865889	0					
ANR	865952	Identifier	info		865889	0					
ANR	865953	Identifier	valid		865889	1					
ANR	865954	ArgumentList			865889	1					
ANR	865955	CompoundStatement		14:12:610:986	865889	1					
ANR	865956	IdentifierDeclStatement	NET :: WindowType wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask ) ;	84:12:4442:4818	865889	0	True				
ANR	865957	IdentifierDecl	wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		865889	0					
ANR	865958	IdentifierDeclType	NET :: WindowType		865889	0					
ANR	865959	Identifier	wType		865889	1					
ANR	865960	AssignmentExpression	wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		865889	2		=			
ANR	865961	Identifier	wType		865889	0					
ANR	865962	CallExpression	info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		865889	1					
ANR	865963	Callee	info . windowType		865889	0					
ANR	865964	MemberAccess	info . windowType		865889	0					
ANR	865965	Identifier	info		865889	0					
ANR	865966	Identifier	windowType		865889	1					
ANR	865967	ArgumentList	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1					
ANR	865968	Argument	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	0					
ANR	865969	InclusiveOrExpression	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	0		|			
ANR	865970	Identifier	NET :: NormalMask		865889	0					
ANR	865971	InclusiveOrExpression	NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865972	Identifier	NET :: DesktopMask		865889	0					
ANR	865973	InclusiveOrExpression	NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865974	Identifier	NET :: DockMask		865889	0					
ANR	865975	InclusiveOrExpression	NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865976	Identifier	NET :: ToolbarMask		865889	0					
ANR	865977	InclusiveOrExpression	NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865978	Identifier	NET :: MenuMask		865889	0					
ANR	865979	InclusiveOrExpression	NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865980	Identifier	NET :: DialogMask		865889	0					
ANR	865981	InclusiveOrExpression	NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865982	Identifier	NET :: OverrideMask		865889	0					
ANR	865983	InclusiveOrExpression	NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865984	Identifier	NET :: TopMenuMask		865889	0					
ANR	865985	InclusiveOrExpression	NET :: UtilityMask | NET :: SplashMask		865889	1		|			
ANR	865986	Identifier	NET :: UtilityMask		865889	0					
ANR	865987	Identifier	NET :: SplashMask		865889	1					
ANR	865988	IfStatement	if ( wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility )		865889	1					
ANR	865989	Condition	wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility	89:16:4837:4972	865889	0	True				
ANR	865990	AndExpression	wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		865889	0		&&			
ANR	865991	EqualityExpression	wType != NET :: Normal		865889	0		!=			
ANR	865992	Identifier	wType		865889	0					
ANR	865993	Identifier	NET :: Normal		865889	1					
ANR	865994	AndExpression	wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		865889	1		&&			
ANR	865995	EqualityExpression	wType != NET :: Override		865889	0		!=			
ANR	865996	Identifier	wType		865889	0					
ANR	865997	Identifier	NET :: Override		865889	1					
ANR	865998	AndExpression	wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		865889	1		&&			
ANR	865999	EqualityExpression	wType != NET :: Unknown		865889	0		!=			
ANR	866000	Identifier	wType		865889	0					
ANR	866001	Identifier	NET :: Unknown		865889	1					
ANR	866002	AndExpression	wType != NET :: Dialog && wType != NET :: Utility		865889	1		&&			
ANR	866003	EqualityExpression	wType != NET :: Dialog		865889	0		!=			
ANR	866004	Identifier	wType		865889	0					
ANR	866005	Identifier	NET :: Dialog		865889	1					
ANR	866006	EqualityExpression	wType != NET :: Utility		865889	1		!=			
ANR	866007	Identifier	wType		865889	0					
ANR	866008	Identifier	NET :: Utility		865889	1					
ANR	866009	CompoundStatement		20:63:1143:1143	865889	1					
ANR	866010	ContinueStatement	continue ;	91:16:4993:5001	865889	0	True				
ANR	866011	ExpressionStatement	"m_windows . insert ( w , info )"	93:12:5029:5054	865889	2	True				
ANR	866012	CallExpression	"m_windows . insert ( w , info )"		865889	0					
ANR	866013	Callee	m_windows . insert		865889	0					
ANR	866014	MemberAccess	m_windows . insert		865889	0					
ANR	866015	Identifier	m_windows		865889	0					
ANR	866016	Identifier	insert		865889	1					
ANR	866017	ArgumentList	w		865889	1					
ANR	866018	Argument	w		865889	0					
ANR	866019	Identifier	w		865889	0					
ANR	866020	Argument	info		865889	1					
ANR	866021	Identifier	info		865889	0					
ANR	866022	ExpressionStatement	"m_icons . insert ( w , QIcon ( KWindowSystem :: icon ( w ) ) )"	94:12:5068:5116	865889	3	True				
ANR	866023	CallExpression	"m_icons . insert ( w , QIcon ( KWindowSystem :: icon ( w ) ) )"		865889	0					
ANR	866024	Callee	m_icons . insert		865889	0					
ANR	866025	MemberAccess	m_icons . insert		865889	0					
ANR	866026	Identifier	m_icons		865889	0					
ANR	866027	Identifier	insert		865889	1					
ANR	866028	ArgumentList	w		865889	1					
ANR	866029	Argument	w		865889	0					
ANR	866030	Identifier	w		865889	0					
ANR	866031	Argument	QIcon ( KWindowSystem :: icon ( w ) )		865889	1					
ANR	866032	CallExpression	QIcon ( KWindowSystem :: icon ( w ) )		865889	0					
ANR	866033	Callee	QIcon		865889	0					
ANR	866034	Identifier	QIcon		865889	0					
ANR	866035	ArgumentList	KWindowSystem :: icon ( w )		865889	1					
ANR	866036	Argument	KWindowSystem :: icon ( w )		865889	0					
ANR	866037	CallExpression	KWindowSystem :: icon ( w )		865889	0					
ANR	866038	Callee	KWindowSystem :: icon		865889	0					
ANR	866039	Identifier	KWindowSystem :: icon		865889	0					
ANR	866040	ArgumentList	w		865889	1					
ANR	866041	Argument	w		865889	0					
ANR	866042	Identifier	w		865889	0					
ANR	866043	ForStatement	for ( int i = 1 ; i <= KWindowSystem :: numberOfDesktops ( ) ; i ++ )		865889	15					
ANR	866044	ForInit	int i = 1 ;	98:9:5144:5151	865889	0	True				
ANR	866045	IdentifierDeclStatement	int i = 1 ;		865889	0					
ANR	866046	IdentifierDecl	i = 1		865889	0					
ANR	866047	IdentifierDeclType	int		865889	0					
ANR	866048	Identifier	i		865889	1					
ANR	866049	AssignmentExpression	i = 1		865889	2		=			
ANR	866050	Identifier	i		865889	0					
ANR	866051	PrimaryExpression	1		865889	1					
ANR	866052	Condition	i <= KWindowSystem :: numberOfDesktops ( )	98:18:5153:5188	865889	1	True				
ANR	866053	RelationalExpression	i <= KWindowSystem :: numberOfDesktops ( )		865889	0		<=			
ANR	866054	Identifier	i		865889	0					
ANR	866055	CallExpression	KWindowSystem :: numberOfDesktops ( )		865889	1					
ANR	866056	Callee	KWindowSystem :: numberOfDesktops		865889	0					
ANR	866057	Identifier	KWindowSystem :: numberOfDesktops		865889	0					
ANR	866058	ArgumentList			865889	1					
ANR	866059	PostIncDecOperationExpression	i ++	98:56:5191:5193	865889	2	True				
ANR	866060	Identifier	i		865889	0					
ANR	866061	IncDec	++		865889	1					
ANR	866062	CompoundStatement		28:61:1364:1364	865889	3					
ANR	866063	ExpressionStatement	m_desktopNames << KWindowSystem :: desktopName ( i )	99:8:5206:5253	865889	0	True				
ANR	866064	ShiftExpression	m_desktopNames << KWindowSystem :: desktopName ( i )		865889	0		<<			
ANR	866065	Identifier	m_desktopNames		865889	0					
ANR	866066	CallExpression	KWindowSystem :: desktopName ( i )		865889	1					
ANR	866067	Callee	KWindowSystem :: desktopName		865889	0					
ANR	866068	Identifier	KWindowSystem :: desktopName		865889	0					
ANR	866069	ArgumentList	i		865889	1					
ANR	866070	Argument	i		865889	0					
ANR	866071	Identifier	i		865889	0					
ANR	866072	ExpressionStatement	m_ready = true	102:4:5266:5280	865889	16	True				
ANR	866073	AssignmentExpression	m_ready = true		865889	0		=			
ANR	866074	Identifier	m_ready		865889	0					
ANR	866075	Identifier	true		865889	1					
ANR	866076	ReturnType	void		865889	1					
ANR	866077	Identifier	WindowsRunner :: gatherInfo		865889	2					
ANR	866078	ParameterList			865889	3					
ANR	866079	CFGEntryNode	ENTRY		865889		True				
ANR	866080	CFGExitNode	EXIT		865889		True				
ANR	866081	CFGErrorNode	ERROR		865889		True				
ANR	866082	Symbol	NET :: Unknown		865889						
ANR	866083	Symbol	NET :: ToolbarMask		865889						
ANR	866084	Symbol	NET :: Utility		865889						
ANR	866085	Symbol	NET :: WMState		865889						
ANR	866086	Symbol	info . valid		865889						
ANR	866087	Symbol	NET :: WM2AllowedActions		865889						
ANR	866088	Symbol	KWindowSystem :: numberOfDesktops		865889						
ANR	866089	Symbol	m_ready		865889						
ANR	866090	Symbol	locker		865889						
ANR	866091	Symbol	m_icons		865889						
ANR	866092	Symbol	m_windows		865889						
ANR	866093	Symbol	NET :: WMName		865889						
ANR	866094	Symbol	NET :: NormalMask		865889						
ANR	866095	Symbol	info		865889						
ANR	866096	Symbol	NET :: DialogMask		865889						
ANR	866097	Symbol	NET :: Override		865889						
ANR	866098	Symbol	m_inSession		865889						
ANR	866099	Symbol	NET :: WM2WindowClass		865889						
ANR	866100	Symbol	NET :: WM2WindowRole		865889						
ANR	866101	Symbol	NET :: XAWMState		865889						
ANR	866102	Symbol	NET :: DesktopMask		865889						
ANR	866103	Symbol	NET :: UtilityMask		865889						
ANR	866104	Symbol	wType		865889						
ANR	866105	Symbol	i		865889						
ANR	866106	Symbol	KWindowSystem :: windowInfo		865889						
ANR	866107	Symbol	NET :: DockMask		865889						
ANR	866108	Symbol	NET :: OverrideMask		865889						
ANR	866109	Symbol	QIcon		865889						
ANR	866110	Symbol	NET :: TopMenuMask		865889						
ANR	866111	Symbol	NET :: Dialog		865889						
ANR	866112	Symbol	KWindowSystem :: icon		865889						
ANR	866113	Symbol	NET :: SplashMask		865889						
ANR	866114	Symbol	w		865889						
ANR	866115	Symbol	NET :: WMDesktop		865889						
ANR	866116	Symbol	NET :: WMWindowType		865889						
ANR	866117	Symbol	NET :: MenuMask		865889						
ANR	866118	Symbol	true		865889						
ANR	866119	Symbol	info . windowType		865889						
ANR	866120	Symbol	NET :: Normal		865889						
ANR	866121	Function	WindowsRunner :: prepareForMatchSession	106:0:5314:5502							
ANR	866122	FunctionDef	WindowsRunner :: prepareForMatchSession ()		866121	0					
ANR	866123	CompoundStatement		107:0:5359:5502	866121	0					
ANR	866124	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	108:4:5365:5394	866121	0	True				
ANR	866125	IdentifierDecl	locker ( & m_mutex )		866121	0					
ANR	866126	IdentifierDeclType	QMutexLocker		866121	0					
ANR	866127	Identifier	locker		866121	1					
ANR	866128	UnaryOperationExpression	& m_mutex		866121	2					
ANR	866129	UnaryOperator	&		866121	0					
ANR	866130	Identifier	m_mutex		866121	1					
ANR	866131	ExpressionStatement	m_inSession = true	109:4:5400:5418	866121	1	True				
ANR	866132	AssignmentExpression	m_inSession = true		866121	0		=			
ANR	866133	Identifier	m_inSession		866121	0					
ANR	866134	Identifier	true		866121	1					
ANR	866135	ExpressionStatement	m_ready = false	110:4:5424:5439	866121	2	True				
ANR	866136	AssignmentExpression	m_ready = false		866121	0		=			
ANR	866137	Identifier	m_ready		866121	0					
ANR	866138	Identifier	false		866121	1					
ANR	866139	ExpressionStatement	"QTimer :: singleShot ( 0 , this , & WindowsRunner :: gatherInfo )"	111:4:5445:5500	866121	3	True				
ANR	866140	CallExpression	"QTimer :: singleShot ( 0 , this , & WindowsRunner :: gatherInfo )"		866121	0					
ANR	866141	Callee	QTimer :: singleShot		866121	0					
ANR	866142	Identifier	QTimer :: singleShot		866121	0					
ANR	866143	ArgumentList	0		866121	1					
ANR	866144	Argument	0		866121	0					
ANR	866145	PrimaryExpression	0		866121	0					
ANR	866146	Argument	this		866121	1					
ANR	866147	Identifier	this		866121	0					
ANR	866148	Argument	& WindowsRunner :: gatherInfo		866121	2					
ANR	866149	UnaryOperationExpression	& WindowsRunner :: gatherInfo		866121	0					
ANR	866150	UnaryOperator	&		866121	0					
ANR	866151	Identifier	WindowsRunner :: gatherInfo		866121	1					
ANR	866152	ReturnType	void		866121	1					
ANR	866153	Identifier	WindowsRunner :: prepareForMatchSession		866121	2					
ANR	866154	ParameterList			866121	3					
ANR	866155	CFGEntryNode	ENTRY		866121		True				
ANR	866156	CFGExitNode	EXIT		866121		True				
ANR	866157	Symbol	m_inSession		866121						
ANR	866158	Symbol	true		866121						
ANR	866159	Symbol	m_ready		866121						
ANR	866160	Symbol	false		866121						
ANR	866161	Symbol	& WindowsRunner :: gatherInfo		866121						
ANR	866162	Symbol	this		866121						
ANR	866163	Symbol	locker		866121						
ANR	866164	Function	WindowsRunner :: matchSessionComplete	115:0:5534:5732							
ANR	866165	FunctionDef	WindowsRunner :: matchSessionComplete ()		866164	0					
ANR	866166	CompoundStatement		116:0:5577:5732	866164	0					
ANR	866167	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	117:4:5583:5612	866164	0	True				
ANR	866168	IdentifierDecl	locker ( & m_mutex )		866164	0					
ANR	866169	IdentifierDeclType	QMutexLocker		866164	0					
ANR	866170	Identifier	locker		866164	1					
ANR	866171	UnaryOperationExpression	& m_mutex		866164	2					
ANR	866172	UnaryOperator	&		866164	0					
ANR	866173	Identifier	m_mutex		866164	1					
ANR	866174	ExpressionStatement	m_inSession = false	118:4:5618:5637	866164	1	True				
ANR	866175	AssignmentExpression	m_inSession = false		866164	0		=			
ANR	866176	Identifier	m_inSession		866164	0					
ANR	866177	Identifier	false		866164	1					
ANR	866178	ExpressionStatement	m_ready = false	119:4:5643:5658	866164	2	True				
ANR	866179	AssignmentExpression	m_ready = false		866164	0		=			
ANR	866180	Identifier	m_ready		866164	0					
ANR	866181	Identifier	false		866164	1					
ANR	866182	ExpressionStatement	m_desktopNames . clear ( )	120:4:5664:5686	866164	3	True				
ANR	866183	CallExpression	m_desktopNames . clear ( )		866164	0					
ANR	866184	Callee	m_desktopNames . clear		866164	0					
ANR	866185	MemberAccess	m_desktopNames . clear		866164	0					
ANR	866186	Identifier	m_desktopNames		866164	0					
ANR	866187	Identifier	clear		866164	1					
ANR	866188	ArgumentList			866164	1					
ANR	866189	ExpressionStatement	m_icons . clear ( )	121:4:5692:5707	866164	4	True				
ANR	866190	CallExpression	m_icons . clear ( )		866164	0					
ANR	866191	Callee	m_icons . clear		866164	0					
ANR	866192	MemberAccess	m_icons . clear		866164	0					
ANR	866193	Identifier	m_icons		866164	0					
ANR	866194	Identifier	clear		866164	1					
ANR	866195	ArgumentList			866164	1					
ANR	866196	ExpressionStatement	m_windows . clear ( )	122:4:5713:5730	866164	5	True				
ANR	866197	CallExpression	m_windows . clear ( )		866164	0					
ANR	866198	Callee	m_windows . clear		866164	0					
ANR	866199	MemberAccess	m_windows . clear		866164	0					
ANR	866200	Identifier	m_windows		866164	0					
ANR	866201	Identifier	clear		866164	1					
ANR	866202	ArgumentList			866164	1					
ANR	866203	ReturnType	void		866164	1					
ANR	866204	Identifier	WindowsRunner :: matchSessionComplete		866164	2					
ANR	866205	ParameterList			866164	3					
ANR	866206	CFGEntryNode	ENTRY		866164		True				
ANR	866207	CFGExitNode	EXIT		866164		True				
ANR	866208	Symbol	m_icons		866164						
ANR	866209	Symbol	m_inSession		866164						
ANR	866210	Symbol	m_windows		866164						
ANR	866211	Symbol	m_desktopNames		866164						
ANR	866212	Symbol	false		866164						
ANR	866213	Symbol	m_ready		866164						
ANR	866214	Symbol	locker		866164						
ANR	866215	Function	WindowsRunner :: match	126:0:5769:15438							
ANR	866216	FunctionDef	WindowsRunner :: match (Plasma :: RunnerContext & context)		866215	0					
ANR	866217	CompoundStatement		127:0:5827:15438	866215	0					
ANR	866218	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	128:4:5833:5862	866215	0	True				
ANR	866219	IdentifierDecl	locker ( & m_mutex )		866215	0					
ANR	866220	IdentifierDeclType	QMutexLocker		866215	0					
ANR	866221	Identifier	locker		866215	1					
ANR	866222	UnaryOperationExpression	& m_mutex		866215	2					
ANR	866223	UnaryOperator	&		866215	0					
ANR	866224	Identifier	m_mutex		866215	1					
ANR	866225	IfStatement	if ( ! m_ready )		866215	1					
ANR	866226	Condition	! m_ready	129:8:5872:5879	866215	0	True				
ANR	866227	UnaryOperationExpression	! m_ready		866215	0					
ANR	866228	UnaryOperator	!		866215	0					
ANR	866229	Identifier	m_ready		866215	1					
ANR	866230	CompoundStatement		3:18:54:54	866215	1					
ANR	866231	ReturnStatement	return ;	130:8:5892:5898	866215	0	True				
ANR	866232	IdentifierDeclStatement	QString term = context . query ( ) ;	133:4:5911:5941	866215	2	True				
ANR	866233	IdentifierDecl	term = context . query ( )		866215	0					
ANR	866234	IdentifierDeclType	QString		866215	0					
ANR	866235	Identifier	term		866215	1					
ANR	866236	AssignmentExpression	term = context . query ( )		866215	2		=			
ANR	866237	Identifier	term		866215	0					
ANR	866238	CallExpression	context . query ( )		866215	1					
ANR	866239	Callee	context . query		866215	0					
ANR	866240	MemberAccess	context . query		866215	0					
ANR	866241	Identifier	context		866215	0					
ANR	866242	Identifier	query		866215	1					
ANR	866243	ArgumentList			866215	1					
ANR	866244	IfStatement	if ( ! context . singleRunnerQueryMode ( ) && ( term . length ( ) < 3 ) )		866215	3					
ANR	866245	Condition	! context . singleRunnerQueryMode ( ) && ( term . length ( ) < 3 )	135:8:5952:6006	866215	0	True				
ANR	866246	AndExpression	! context . singleRunnerQueryMode ( ) && ( term . length ( ) < 3 )		866215	0		&&			
ANR	866247	UnaryOperationExpression	! context . singleRunnerQueryMode ( )		866215	0					
ANR	866248	UnaryOperator	!		866215	0					
ANR	866249	CallExpression	context . singleRunnerQueryMode ( )		866215	1					
ANR	866250	Callee	context . singleRunnerQueryMode		866215	0					
ANR	866251	MemberAccess	context . singleRunnerQueryMode		866215	0					
ANR	866252	Identifier	context		866215	0					
ANR	866253	Identifier	singleRunnerQueryMode		866215	1					
ANR	866254	ArgumentList			866215	1					
ANR	866255	RelationalExpression	term . length ( ) < 3		866215	1		<			
ANR	866256	CallExpression	term . length ( )		866215	0					
ANR	866257	Callee	term . length		866215	0					
ANR	866258	MemberAccess	term . length		866215	0					
ANR	866259	Identifier	term		866215	0					
ANR	866260	Identifier	length		866215	1					
ANR	866261	ArgumentList			866215	1					
ANR	866262	PrimaryExpression	3		866215	1					
ANR	866263	CompoundStatement		9:65:181:181	866215	1					
ANR	866264	ReturnStatement	return ;	136:8:6019:6025	866215	0	True				
ANR	866265	IdentifierDeclStatement	QList < Plasma :: QueryMatch > matches ;	138:4:6037:6070	866215	4	True				
ANR	866266	IdentifierDecl	matches		866215	0					
ANR	866267	IdentifierDeclType	QList < Plasma :: QueryMatch >		866215	0					
ANR	866268	Identifier	matches		866215	1					
ANR	866269	IdentifierDeclStatement	WindowAction action = ActivateAction ;	141:4:6137:6173	866215	5	True				
ANR	866270	IdentifierDecl	action = ActivateAction		866215	0					
ANR	866271	IdentifierDeclType	WindowAction		866215	0					
ANR	866272	Identifier	action		866215	1					
ANR	866273	AssignmentExpression	action = ActivateAction		866215	2		=			
ANR	866274	Identifier	ActivateAction		866215	0					
ANR	866275	Identifier	ActivateAction		866215	1					
ANR	866276	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) , Qt :: CaseInsensitive ) )"		866215	6					
ANR	866277	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) , Qt :: CaseInsensitive )"	142:8:6183:6270	866215	0	True				
ANR	866278	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866279	Callee	term . endsWith		866215	0					
ANR	866280	MemberAccess	term . endsWith		866215	0					
ANR	866281	Identifier	term		866215	0					
ANR	866282	Identifier	endsWith		866215	1					
ANR	866283	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		866215	1					
ANR	866284	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		866215	0					
ANR	866285	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		866215	0					
ANR	866286	Callee	i18nc		866215	0					
ANR	866287	Identifier	i18nc		866215	0					
ANR	866288	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866289	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866290	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866291	Argument	"""activate"""		866215	1					
ANR	866292	PrimaryExpression	"""activate"""		866215	0					
ANR	866293	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866294	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866295	CompoundStatement		16:98:445:445	866215	1					
ANR	866296	ExpressionStatement	action = ActivateAction	143:8:6283:6306	866215	0	True				
ANR	866297	AssignmentExpression	action = ActivateAction		866215	0		=			
ANR	866298	Identifier	action		866215	0					
ANR	866299	Identifier	ActivateAction		866215	1					
ANR	866300	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1 )"	144:8:6316:6407	866215	1	True				
ANR	866301	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1 )"		866215	0		=			
ANR	866302	Identifier	term		866215	0					
ANR	866303	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1 )"		866215	1					
ANR	866304	Callee	term . left		866215	0					
ANR	866305	MemberAccess	term . left		866215	0					
ANR	866306	Identifier	term		866215	0					
ANR	866307	Identifier	left		866215	1					
ANR	866308	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1"		866215	1					
ANR	866309	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1"		866215	0					
ANR	866310	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1"		866215	0		-			
ANR	866311	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) )"		866215	0					
ANR	866312	Callee	term . lastIndexOf		866215	0					
ANR	866313	MemberAccess	term . lastIndexOf		866215	0					
ANR	866314	Identifier	term		866215	0					
ANR	866315	Identifier	lastIndexOf		866215	1					
ANR	866316	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		866215	1					
ANR	866317	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		866215	0					
ANR	866318	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		866215	0					
ANR	866319	Callee	i18nc		866215	0					
ANR	866320	Identifier	i18nc		866215	0					
ANR	866321	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866322	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866323	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866324	Argument	"""activate"""		866215	1					
ANR	866325	PrimaryExpression	"""activate"""		866215	0					
ANR	866326	PrimaryExpression	1		866215	1					
ANR	866327	ElseStatement	else		866215	0					
ANR	866328	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866329	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) , Qt :: CaseInsensitive )"	145:15:6424:6508	866215	0	True				
ANR	866330	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866331	Callee	term . endsWith		866215	0					
ANR	866332	MemberAccess	term . endsWith		866215	0					
ANR	866333	Identifier	term		866215	0					
ANR	866334	Identifier	endsWith		866215	1					
ANR	866335	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		866215	1					
ANR	866336	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		866215	0					
ANR	866337	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		866215	0					
ANR	866338	Callee	i18nc		866215	0					
ANR	866339	Identifier	i18nc		866215	0					
ANR	866340	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866341	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866342	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866343	Argument	"""close"""		866215	1					
ANR	866344	PrimaryExpression	"""close"""		866215	0					
ANR	866345	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866346	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866347	CompoundStatement		19:102:683:683	866215	1					
ANR	866348	ExpressionStatement	action = CloseAction	146:8:6521:6541	866215	0	True				
ANR	866349	AssignmentExpression	action = CloseAction		866215	0		=			
ANR	866350	Identifier	action		866215	0					
ANR	866351	Identifier	CloseAction		866215	1					
ANR	866352	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1 )"	147:8:6551:6639	866215	1	True				
ANR	866353	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1 )"		866215	0		=			
ANR	866354	Identifier	term		866215	0					
ANR	866355	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1 )"		866215	1					
ANR	866356	Callee	term . left		866215	0					
ANR	866357	MemberAccess	term . left		866215	0					
ANR	866358	Identifier	term		866215	0					
ANR	866359	Identifier	left		866215	1					
ANR	866360	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1"		866215	1					
ANR	866361	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1"		866215	0					
ANR	866362	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1"		866215	0		-			
ANR	866363	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) )"		866215	0					
ANR	866364	Callee	term . lastIndexOf		866215	0					
ANR	866365	MemberAccess	term . lastIndexOf		866215	0					
ANR	866366	Identifier	term		866215	0					
ANR	866367	Identifier	lastIndexOf		866215	1					
ANR	866368	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		866215	1					
ANR	866369	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		866215	0					
ANR	866370	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		866215	0					
ANR	866371	Callee	i18nc		866215	0					
ANR	866372	Identifier	i18nc		866215	0					
ANR	866373	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866374	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866375	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866376	Argument	"""close"""		866215	1					
ANR	866377	PrimaryExpression	"""close"""		866215	0					
ANR	866378	PrimaryExpression	1		866215	1					
ANR	866379	ElseStatement	else		866215	0					
ANR	866380	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866381	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) , Qt :: CaseInsensitive )"	148:15:6656:6738	866215	0	True				
ANR	866382	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866383	Callee	term . endsWith		866215	0					
ANR	866384	MemberAccess	term . endsWith		866215	0					
ANR	866385	Identifier	term		866215	0					
ANR	866386	Identifier	endsWith		866215	1					
ANR	866387	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		866215	1					
ANR	866388	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		866215	0					
ANR	866389	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		866215	0					
ANR	866390	Callee	i18nc		866215	0					
ANR	866391	Identifier	i18nc		866215	0					
ANR	866392	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866393	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866394	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866395	Argument	"""min"""		866215	1					
ANR	866396	PrimaryExpression	"""min"""		866215	0					
ANR	866397	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866398	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866399	CompoundStatement		22:100:913:913	866215	1					
ANR	866400	ExpressionStatement	action = MinimizeAction	149:8:6751:6774	866215	0	True				
ANR	866401	AssignmentExpression	action = MinimizeAction		866215	0		=			
ANR	866402	Identifier	action		866215	0					
ANR	866403	Identifier	MinimizeAction		866215	1					
ANR	866404	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1 )"	150:8:6784:6870	866215	1	True				
ANR	866405	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1 )"		866215	0		=			
ANR	866406	Identifier	term		866215	0					
ANR	866407	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1 )"		866215	1					
ANR	866408	Callee	term . left		866215	0					
ANR	866409	MemberAccess	term . left		866215	0					
ANR	866410	Identifier	term		866215	0					
ANR	866411	Identifier	left		866215	1					
ANR	866412	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1"		866215	1					
ANR	866413	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1"		866215	0					
ANR	866414	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1"		866215	0		-			
ANR	866415	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) )"		866215	0					
ANR	866416	Callee	term . lastIndexOf		866215	0					
ANR	866417	MemberAccess	term . lastIndexOf		866215	0					
ANR	866418	Identifier	term		866215	0					
ANR	866419	Identifier	lastIndexOf		866215	1					
ANR	866420	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		866215	1					
ANR	866421	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		866215	0					
ANR	866422	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		866215	0					
ANR	866423	Callee	i18nc		866215	0					
ANR	866424	Identifier	i18nc		866215	0					
ANR	866425	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866426	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866427	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866428	Argument	"""min"""		866215	1					
ANR	866429	PrimaryExpression	"""min"""		866215	0					
ANR	866430	PrimaryExpression	1		866215	1					
ANR	866431	ElseStatement	else		866215	0					
ANR	866432	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866433	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) , Qt :: CaseInsensitive )"	151:15:6887:6974	866215	0	True				
ANR	866434	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866435	Callee	term . endsWith		866215	0					
ANR	866436	MemberAccess	term . endsWith		866215	0					
ANR	866437	Identifier	term		866215	0					
ANR	866438	Identifier	endsWith		866215	1					
ANR	866439	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		866215	1					
ANR	866440	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		866215	0					
ANR	866441	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		866215	0					
ANR	866442	Callee	i18nc		866215	0					
ANR	866443	Identifier	i18nc		866215	0					
ANR	866444	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866445	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866446	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866447	Argument	"""minimize"""		866215	1					
ANR	866448	PrimaryExpression	"""minimize"""		866215	0					
ANR	866449	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866450	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866451	CompoundStatement		25:105:1149:1149	866215	1					
ANR	866452	ExpressionStatement	action = MinimizeAction	152:8:6987:7010	866215	0	True				
ANR	866453	AssignmentExpression	action = MinimizeAction		866215	0		=			
ANR	866454	Identifier	action		866215	0					
ANR	866455	Identifier	MinimizeAction		866215	1					
ANR	866456	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1 )"	153:8:7020:7111	866215	1	True				
ANR	866457	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1 )"		866215	0		=			
ANR	866458	Identifier	term		866215	0					
ANR	866459	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1 )"		866215	1					
ANR	866460	Callee	term . left		866215	0					
ANR	866461	MemberAccess	term . left		866215	0					
ANR	866462	Identifier	term		866215	0					
ANR	866463	Identifier	left		866215	1					
ANR	866464	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1"		866215	1					
ANR	866465	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1"		866215	0					
ANR	866466	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1"		866215	0		-			
ANR	866467	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) )"		866215	0					
ANR	866468	Callee	term . lastIndexOf		866215	0					
ANR	866469	MemberAccess	term . lastIndexOf		866215	0					
ANR	866470	Identifier	term		866215	0					
ANR	866471	Identifier	lastIndexOf		866215	1					
ANR	866472	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		866215	1					
ANR	866473	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		866215	0					
ANR	866474	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		866215	0					
ANR	866475	Callee	i18nc		866215	0					
ANR	866476	Identifier	i18nc		866215	0					
ANR	866477	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866478	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866479	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866480	Argument	"""minimize"""		866215	1					
ANR	866481	PrimaryExpression	"""minimize"""		866215	0					
ANR	866482	PrimaryExpression	1		866215	1					
ANR	866483	ElseStatement	else		866215	0					
ANR	866484	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866485	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) , Qt :: CaseInsensitive )"	154:15:7128:7210	866215	0	True				
ANR	866486	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866487	Callee	term . endsWith		866215	0					
ANR	866488	MemberAccess	term . endsWith		866215	0					
ANR	866489	Identifier	term		866215	0					
ANR	866490	Identifier	endsWith		866215	1					
ANR	866491	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		866215	1					
ANR	866492	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		866215	0					
ANR	866493	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		866215	0					
ANR	866494	Callee	i18nc		866215	0					
ANR	866495	Identifier	i18nc		866215	0					
ANR	866496	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866497	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866498	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866499	Argument	"""max"""		866215	1					
ANR	866500	PrimaryExpression	"""max"""		866215	0					
ANR	866501	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866502	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866503	CompoundStatement		28:100:1385:1385	866215	1					
ANR	866504	ExpressionStatement	action = MaximizeAction	155:8:7223:7246	866215	0	True				
ANR	866505	AssignmentExpression	action = MaximizeAction		866215	0		=			
ANR	866506	Identifier	action		866215	0					
ANR	866507	Identifier	MaximizeAction		866215	1					
ANR	866508	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1 )"	156:8:7256:7342	866215	1	True				
ANR	866509	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1 )"		866215	0		=			
ANR	866510	Identifier	term		866215	0					
ANR	866511	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1 )"		866215	1					
ANR	866512	Callee	term . left		866215	0					
ANR	866513	MemberAccess	term . left		866215	0					
ANR	866514	Identifier	term		866215	0					
ANR	866515	Identifier	left		866215	1					
ANR	866516	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1"		866215	1					
ANR	866517	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1"		866215	0					
ANR	866518	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1"		866215	0		-			
ANR	866519	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) )"		866215	0					
ANR	866520	Callee	term . lastIndexOf		866215	0					
ANR	866521	MemberAccess	term . lastIndexOf		866215	0					
ANR	866522	Identifier	term		866215	0					
ANR	866523	Identifier	lastIndexOf		866215	1					
ANR	866524	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		866215	1					
ANR	866525	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		866215	0					
ANR	866526	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		866215	0					
ANR	866527	Callee	i18nc		866215	0					
ANR	866528	Identifier	i18nc		866215	0					
ANR	866529	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866530	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866531	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866532	Argument	"""max"""		866215	1					
ANR	866533	PrimaryExpression	"""max"""		866215	0					
ANR	866534	PrimaryExpression	1		866215	1					
ANR	866535	ElseStatement	else		866215	0					
ANR	866536	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866537	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) , Qt :: CaseInsensitive )"	157:15:7359:7446	866215	0	True				
ANR	866538	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866539	Callee	term . endsWith		866215	0					
ANR	866540	MemberAccess	term . endsWith		866215	0					
ANR	866541	Identifier	term		866215	0					
ANR	866542	Identifier	endsWith		866215	1					
ANR	866543	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		866215	1					
ANR	866544	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		866215	0					
ANR	866545	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		866215	0					
ANR	866546	Callee	i18nc		866215	0					
ANR	866547	Identifier	i18nc		866215	0					
ANR	866548	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866549	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866550	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866551	Argument	"""maximize"""		866215	1					
ANR	866552	PrimaryExpression	"""maximize"""		866215	0					
ANR	866553	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866554	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866555	CompoundStatement		31:105:1621:1621	866215	1					
ANR	866556	ExpressionStatement	action = MaximizeAction	158:8:7459:7482	866215	0	True				
ANR	866557	AssignmentExpression	action = MaximizeAction		866215	0		=			
ANR	866558	Identifier	action		866215	0					
ANR	866559	Identifier	MaximizeAction		866215	1					
ANR	866560	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1 )"	159:8:7492:7583	866215	1	True				
ANR	866561	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1 )"		866215	0		=			
ANR	866562	Identifier	term		866215	0					
ANR	866563	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1 )"		866215	1					
ANR	866564	Callee	term . left		866215	0					
ANR	866565	MemberAccess	term . left		866215	0					
ANR	866566	Identifier	term		866215	0					
ANR	866567	Identifier	left		866215	1					
ANR	866568	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1"		866215	1					
ANR	866569	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1"		866215	0					
ANR	866570	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1"		866215	0		-			
ANR	866571	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) )"		866215	0					
ANR	866572	Callee	term . lastIndexOf		866215	0					
ANR	866573	MemberAccess	term . lastIndexOf		866215	0					
ANR	866574	Identifier	term		866215	0					
ANR	866575	Identifier	lastIndexOf		866215	1					
ANR	866576	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		866215	1					
ANR	866577	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		866215	0					
ANR	866578	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		866215	0					
ANR	866579	Callee	i18nc		866215	0					
ANR	866580	Identifier	i18nc		866215	0					
ANR	866581	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866582	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866583	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866584	Argument	"""maximize"""		866215	1					
ANR	866585	PrimaryExpression	"""maximize"""		866215	0					
ANR	866586	PrimaryExpression	1		866215	1					
ANR	866587	ElseStatement	else		866215	0					
ANR	866588	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866589	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) , Qt :: CaseInsensitive )"	160:15:7600:7689	866215	0	True				
ANR	866590	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866591	Callee	term . endsWith		866215	0					
ANR	866592	MemberAccess	term . endsWith		866215	0					
ANR	866593	Identifier	term		866215	0					
ANR	866594	Identifier	endsWith		866215	1					
ANR	866595	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		866215	1					
ANR	866596	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		866215	0					
ANR	866597	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		866215	0					
ANR	866598	Callee	i18nc		866215	0					
ANR	866599	Identifier	i18nc		866215	0					
ANR	866600	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866601	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866602	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866603	Argument	"""fullscreen"""		866215	1					
ANR	866604	PrimaryExpression	"""fullscreen"""		866215	0					
ANR	866605	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866606	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866607	CompoundStatement		34:107:1864:1864	866215	1					
ANR	866608	ExpressionStatement	action = FullscreenAction	161:8:7702:7727	866215	0	True				
ANR	866609	AssignmentExpression	action = FullscreenAction		866215	0		=			
ANR	866610	Identifier	action		866215	0					
ANR	866611	Identifier	FullscreenAction		866215	1					
ANR	866612	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1 )"	162:8:7737:7830	866215	1	True				
ANR	866613	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1 )"		866215	0		=			
ANR	866614	Identifier	term		866215	0					
ANR	866615	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1 )"		866215	1					
ANR	866616	Callee	term . left		866215	0					
ANR	866617	MemberAccess	term . left		866215	0					
ANR	866618	Identifier	term		866215	0					
ANR	866619	Identifier	left		866215	1					
ANR	866620	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1"		866215	1					
ANR	866621	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1"		866215	0					
ANR	866622	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1"		866215	0		-			
ANR	866623	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) )"		866215	0					
ANR	866624	Callee	term . lastIndexOf		866215	0					
ANR	866625	MemberAccess	term . lastIndexOf		866215	0					
ANR	866626	Identifier	term		866215	0					
ANR	866627	Identifier	lastIndexOf		866215	1					
ANR	866628	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		866215	1					
ANR	866629	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		866215	0					
ANR	866630	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		866215	0					
ANR	866631	Callee	i18nc		866215	0					
ANR	866632	Identifier	i18nc		866215	0					
ANR	866633	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866634	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866635	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866636	Argument	"""fullscreen"""		866215	1					
ANR	866637	PrimaryExpression	"""fullscreen"""		866215	0					
ANR	866638	PrimaryExpression	1		866215	1					
ANR	866639	ElseStatement	else		866215	0					
ANR	866640	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866641	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) , Qt :: CaseInsensitive )"	163:15:7847:7931	866215	0	True				
ANR	866642	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866643	Callee	term . endsWith		866215	0					
ANR	866644	MemberAccess	term . endsWith		866215	0					
ANR	866645	Identifier	term		866215	0					
ANR	866646	Identifier	endsWith		866215	1					
ANR	866647	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		866215	1					
ANR	866648	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		866215	0					
ANR	866649	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		866215	0					
ANR	866650	Callee	i18nc		866215	0					
ANR	866651	Identifier	i18nc		866215	0					
ANR	866652	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866653	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866654	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866655	Argument	"""shade"""		866215	1					
ANR	866656	PrimaryExpression	"""shade"""		866215	0					
ANR	866657	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866658	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866659	CompoundStatement		37:102:2106:2106	866215	1					
ANR	866660	ExpressionStatement	action = ShadeAction	164:8:7944:7964	866215	0	True				
ANR	866661	AssignmentExpression	action = ShadeAction		866215	0		=			
ANR	866662	Identifier	action		866215	0					
ANR	866663	Identifier	ShadeAction		866215	1					
ANR	866664	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1 )"	165:8:7974:8062	866215	1	True				
ANR	866665	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1 )"		866215	0		=			
ANR	866666	Identifier	term		866215	0					
ANR	866667	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1 )"		866215	1					
ANR	866668	Callee	term . left		866215	0					
ANR	866669	MemberAccess	term . left		866215	0					
ANR	866670	Identifier	term		866215	0					
ANR	866671	Identifier	left		866215	1					
ANR	866672	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1"		866215	1					
ANR	866673	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1"		866215	0					
ANR	866674	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1"		866215	0		-			
ANR	866675	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) )"		866215	0					
ANR	866676	Callee	term . lastIndexOf		866215	0					
ANR	866677	MemberAccess	term . lastIndexOf		866215	0					
ANR	866678	Identifier	term		866215	0					
ANR	866679	Identifier	lastIndexOf		866215	1					
ANR	866680	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		866215	1					
ANR	866681	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		866215	0					
ANR	866682	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		866215	0					
ANR	866683	Callee	i18nc		866215	0					
ANR	866684	Identifier	i18nc		866215	0					
ANR	866685	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866686	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866687	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866688	Argument	"""shade"""		866215	1					
ANR	866689	PrimaryExpression	"""shade"""		866215	0					
ANR	866690	PrimaryExpression	1		866215	1					
ANR	866691	ElseStatement	else		866215	0					
ANR	866692	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866693	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) , Qt :: CaseInsensitive )"	166:15:8079:8168	866215	0	True				
ANR	866694	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866695	Callee	term . endsWith		866215	0					
ANR	866696	MemberAccess	term . endsWith		866215	0					
ANR	866697	Identifier	term		866215	0					
ANR	866698	Identifier	endsWith		866215	1					
ANR	866699	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		866215	1					
ANR	866700	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		866215	0					
ANR	866701	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		866215	0					
ANR	866702	Callee	i18nc		866215	0					
ANR	866703	Identifier	i18nc		866215	0					
ANR	866704	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866705	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866706	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866707	Argument	"""keep above"""		866215	1					
ANR	866708	PrimaryExpression	"""keep above"""		866215	0					
ANR	866709	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866710	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866711	CompoundStatement		40:107:2343:2343	866215	1					
ANR	866712	ExpressionStatement	action = KeepAboveAction	167:8:8181:8205	866215	0	True				
ANR	866713	AssignmentExpression	action = KeepAboveAction		866215	0		=			
ANR	866714	Identifier	action		866215	0					
ANR	866715	Identifier	KeepAboveAction		866215	1					
ANR	866716	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1 )"	168:8:8215:8308	866215	1	True				
ANR	866717	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1 )"		866215	0		=			
ANR	866718	Identifier	term		866215	0					
ANR	866719	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1 )"		866215	1					
ANR	866720	Callee	term . left		866215	0					
ANR	866721	MemberAccess	term . left		866215	0					
ANR	866722	Identifier	term		866215	0					
ANR	866723	Identifier	left		866215	1					
ANR	866724	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1"		866215	1					
ANR	866725	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1"		866215	0					
ANR	866726	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1"		866215	0		-			
ANR	866727	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) )"		866215	0					
ANR	866728	Callee	term . lastIndexOf		866215	0					
ANR	866729	MemberAccess	term . lastIndexOf		866215	0					
ANR	866730	Identifier	term		866215	0					
ANR	866731	Identifier	lastIndexOf		866215	1					
ANR	866732	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		866215	1					
ANR	866733	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		866215	0					
ANR	866734	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		866215	0					
ANR	866735	Callee	i18nc		866215	0					
ANR	866736	Identifier	i18nc		866215	0					
ANR	866737	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866738	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866739	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866740	Argument	"""keep above"""		866215	1					
ANR	866741	PrimaryExpression	"""keep above"""		866215	0					
ANR	866742	PrimaryExpression	1		866215	1					
ANR	866743	ElseStatement	else		866215	0					
ANR	866744	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866745	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) , Qt :: CaseInsensitive )"	169:15:8325:8414	866215	0	True				
ANR	866746	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866747	Callee	term . endsWith		866215	0					
ANR	866748	MemberAccess	term . endsWith		866215	0					
ANR	866749	Identifier	term		866215	0					
ANR	866750	Identifier	endsWith		866215	1					
ANR	866751	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		866215	1					
ANR	866752	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		866215	0					
ANR	866753	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		866215	0					
ANR	866754	Callee	i18nc		866215	0					
ANR	866755	Identifier	i18nc		866215	0					
ANR	866756	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866757	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866758	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866759	Argument	"""keep below"""		866215	1					
ANR	866760	PrimaryExpression	"""keep below"""		866215	0					
ANR	866761	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866762	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866763	CompoundStatement		43:107:2589:2589	866215	1					
ANR	866764	ExpressionStatement	action = KeepBelowAction	170:8:8427:8451	866215	0	True				
ANR	866765	AssignmentExpression	action = KeepBelowAction		866215	0		=			
ANR	866766	Identifier	action		866215	0					
ANR	866767	Identifier	KeepBelowAction		866215	1					
ANR	866768	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1 )"	171:8:8461:8554	866215	1	True				
ANR	866769	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1 )"		866215	0		=			
ANR	866770	Identifier	term		866215	0					
ANR	866771	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1 )"		866215	1					
ANR	866772	Callee	term . left		866215	0					
ANR	866773	MemberAccess	term . left		866215	0					
ANR	866774	Identifier	term		866215	0					
ANR	866775	Identifier	left		866215	1					
ANR	866776	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1"		866215	1					
ANR	866777	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1"		866215	0					
ANR	866778	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1"		866215	0		-			
ANR	866779	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) )"		866215	0					
ANR	866780	Callee	term . lastIndexOf		866215	0					
ANR	866781	MemberAccess	term . lastIndexOf		866215	0					
ANR	866782	Identifier	term		866215	0					
ANR	866783	Identifier	lastIndexOf		866215	1					
ANR	866784	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		866215	1					
ANR	866785	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		866215	0					
ANR	866786	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		866215	0					
ANR	866787	Callee	i18nc		866215	0					
ANR	866788	Identifier	i18nc		866215	0					
ANR	866789	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866790	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866791	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866792	Argument	"""keep below"""		866215	1					
ANR	866793	PrimaryExpression	"""keep below"""		866215	0					
ANR	866794	PrimaryExpression	1		866215	1					
ANR	866795	IfStatement	"if ( term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""window"" ) , Qt :: CaseInsensitive ) )"		866215	7					
ANR	866796	Condition	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""window"" ) , Qt :: CaseInsensitive )"	176:8:8735:8822	866215	0	True				
ANR	866797	CallExpression	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""window"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	866798	Callee	term . startsWith		866215	0					
ANR	866799	MemberAccess	term . startsWith		866215	0					
ANR	866800	Identifier	term		866215	0					
ANR	866801	Identifier	startsWith		866215	1					
ANR	866802	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""window"" )"		866215	1					
ANR	866803	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""window"" )"		866215	0					
ANR	866804	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""window"" )"		866215	0					
ANR	866805	Callee	i18nc		866215	0					
ANR	866806	Identifier	i18nc		866215	0					
ANR	866807	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866808	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866809	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866810	Argument	"""window"""		866215	1					
ANR	866811	PrimaryExpression	"""window"""		866215	0					
ANR	866812	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866813	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866814	CompoundStatement		80:8:4612:4657	866215	1					
ANR	866815	IdentifierDeclStatement	"const QStringList keywords = term . split ( QStringLiteral ( "" "" ) ) ;"	177:8:8835:8895	866215	0	True				
ANR	866816	IdentifierDecl	"keywords = term . split ( QStringLiteral ( "" "" ) )"		866215	0					
ANR	866817	IdentifierDeclType	const QStringList		866215	0					
ANR	866818	Identifier	keywords		866215	1					
ANR	866819	AssignmentExpression	"keywords = term . split ( QStringLiteral ( "" "" ) )"		866215	2		=			
ANR	866820	Identifier	keywords		866215	0					
ANR	866821	CallExpression	"term . split ( QStringLiteral ( "" "" ) )"		866215	1					
ANR	866822	Callee	term . split		866215	0					
ANR	866823	MemberAccess	term . split		866215	0					
ANR	866824	Identifier	term		866215	0					
ANR	866825	Identifier	split		866215	1					
ANR	866826	ArgumentList	"QStringLiteral ( "" "" )"		866215	1					
ANR	866827	Argument	"QStringLiteral ( "" "" )"		866215	0					
ANR	866828	CallExpression	"QStringLiteral ( "" "" )"		866215	0					
ANR	866829	Callee	QStringLiteral		866215	0					
ANR	866830	Identifier	QStringLiteral		866215	0					
ANR	866831	ArgumentList	""" """		866215	1					
ANR	866832	Argument	""" """		866215	0					
ANR	866833	PrimaryExpression	""" """		866215	0					
ANR	866834	IdentifierDeclStatement	QString windowName ;	178:8:8905:8923	866215	1	True				
ANR	866835	IdentifierDecl	windowName		866215	0					
ANR	866836	IdentifierDeclType	QString		866215	0					
ANR	866837	Identifier	windowName		866215	1					
ANR	866838	IdentifierDeclStatement	QString windowClass ;	179:8:8933:8952	866215	2	True				
ANR	866839	IdentifierDecl	windowClass		866215	0					
ANR	866840	IdentifierDeclType	QString		866215	0					
ANR	866841	Identifier	windowClass		866215	1					
ANR	866842	IdentifierDeclStatement	QString windowRole ;	180:8:8962:8980	866215	3	True				
ANR	866843	IdentifierDecl	windowRole		866215	0					
ANR	866844	IdentifierDeclType	QString		866215	0					
ANR	866845	Identifier	windowRole		866215	1					
ANR	866846	IdentifierDeclStatement	int desktop = - 1 ;	181:8:8990:9006	866215	4	True				
ANR	866847	IdentifierDecl	desktop = - 1		866215	0					
ANR	866848	IdentifierDeclType	int		866215	0					
ANR	866849	Identifier	desktop		866215	1					
ANR	866850	AssignmentExpression	desktop = - 1		866215	2		=			
ANR	866851	Identifier	desktop		866215	0					
ANR	866852	UnaryOperationExpression	- 1		866215	1					
ANR	866853	UnaryOperator	-		866215	0					
ANR	866854	PrimaryExpression	1		866215	1					
ANR	866855	Statement	foreach	182:8:9016:9022	866215	5	True				
ANR	866856	Statement	(	182:16:9024:9024	866215	6	True				
ANR	866857	Statement	const	182:17:9025:9029	866215	7	True				
ANR	866858	Statement	QString	182:23:9031:9037	866215	8	True				
ANR	866859	Statement	&	182:30:9038:9038	866215	9	True				
ANR	866860	Statement	keyword	182:32:9040:9046	866215	10	True				
ANR	866861	Statement	","	182:39:9047:9047	866215	11	True				
ANR	866862	Statement	keywords	182:41:9049:9056	866215	12	True				
ANR	866863	Statement	)	182:49:9057:9057	866215	13	True				
ANR	866864	CompoundStatement		56:51:3231:3231	866215	14					
ANR	866865	IfStatement	if ( keyword . endsWith ( '=' ) )		866215	0					
ANR	866866	Condition	keyword . endsWith ( '=' )	183:16:9077:9097	866215	0	True				
ANR	866867	CallExpression	keyword . endsWith ( '=' )		866215	0					
ANR	866868	Callee	keyword . endsWith		866215	0					
ANR	866869	MemberAccess	keyword . endsWith		866215	0					
ANR	866870	Identifier	keyword		866215	0					
ANR	866871	Identifier	endsWith		866215	1					
ANR	866872	ArgumentList	'='		866215	1					
ANR	866873	Argument	'='		866215	0					
ANR	866874	PrimaryExpression	'='		866215	0					
ANR	866875	CompoundStatement		57:39:3272:3272	866215	1					
ANR	866876	ContinueStatement	continue ;	184:16:9118:9126	866215	0	True				
ANR	866877	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="" , Qt :: CaseInsensitive ) )"		866215	1					
ANR	866878	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="" , Qt :: CaseInsensitive )"	186:16:9158:9252	866215	0	True				
ANR	866879	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="" , Qt :: CaseInsensitive )"		866215	0					
ANR	866880	Callee	keyword . startsWith		866215	0					
ANR	866881	MemberAccess	keyword . startsWith		866215	0					
ANR	866882	Identifier	keyword		866215	0					
ANR	866883	Identifier	startsWith		866215	1					
ANR	866884	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="""		866215	1					
ANR	866885	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="""		866215	0					
ANR	866886	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="""		866215	0		+			
ANR	866887	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" )"		866215	0					
ANR	866888	Callee	i18nc		866215	0					
ANR	866889	Identifier	i18nc		866215	0					
ANR	866890	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866891	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866892	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866893	Argument	"""name"""		866215	1					
ANR	866894	PrimaryExpression	"""name"""		866215	0					
ANR	866895	PrimaryExpression	"""="""		866215	1					
ANR	866896	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866897	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866898	CompoundStatement		60:113:3427:3427	866215	1					
ANR	866899	ExpressionStatement	"windowName = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"	187:16:9273:9323	866215	0	True				
ANR	866900	AssignmentExpression	"windowName = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	0		=			
ANR	866901	Identifier	windowName		866215	0					
ANR	866902	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	1					
ANR	866903	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		866215	0					
ANR	866904	Callee	keyword . split		866215	0					
ANR	866905	MemberAccess	keyword . split		866215	0					
ANR	866906	Identifier	keyword		866215	0					
ANR	866907	Identifier	split		866215	1					
ANR	866908	ArgumentList	"QStringLiteral ( ""="" )"		866215	1					
ANR	866909	Argument	"QStringLiteral ( ""="" )"		866215	0					
ANR	866910	CallExpression	"QStringLiteral ( ""="" )"		866215	0					
ANR	866911	Callee	QStringLiteral		866215	0					
ANR	866912	Identifier	QStringLiteral		866215	0					
ANR	866913	ArgumentList	"""="""		866215	1					
ANR	866914	Argument	"""="""		866215	0					
ANR	866915	PrimaryExpression	"""="""		866215	0					
ANR	866916	PrimaryExpression	1		866215	1					
ANR	866917	ElseStatement	else		866215	0					
ANR	866918	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="" , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866919	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="" , Qt :: CaseInsensitive )"	188:23:9348:9443	866215	0	True				
ANR	866920	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="" , Qt :: CaseInsensitive )"		866215	0					
ANR	866921	Callee	keyword . startsWith		866215	0					
ANR	866922	MemberAccess	keyword . startsWith		866215	0					
ANR	866923	Identifier	keyword		866215	0					
ANR	866924	Identifier	startsWith		866215	1					
ANR	866925	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="""		866215	1					
ANR	866926	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="""		866215	0					
ANR	866927	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="""		866215	0		+			
ANR	866928	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" )"		866215	0					
ANR	866929	Callee	i18nc		866215	0					
ANR	866930	Identifier	i18nc		866215	0					
ANR	866931	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866932	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866933	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866934	Argument	"""class"""		866215	1					
ANR	866935	PrimaryExpression	"""class"""		866215	0					
ANR	866936	PrimaryExpression	"""="""		866215	1					
ANR	866937	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866938	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866939	CompoundStatement		62:121:3618:3618	866215	1					
ANR	866940	ExpressionStatement	"windowClass = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"	189:16:9464:9515	866215	0	True				
ANR	866941	AssignmentExpression	"windowClass = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	0		=			
ANR	866942	Identifier	windowClass		866215	0					
ANR	866943	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	1					
ANR	866944	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		866215	0					
ANR	866945	Callee	keyword . split		866215	0					
ANR	866946	MemberAccess	keyword . split		866215	0					
ANR	866947	Identifier	keyword		866215	0					
ANR	866948	Identifier	split		866215	1					
ANR	866949	ArgumentList	"QStringLiteral ( ""="" )"		866215	1					
ANR	866950	Argument	"QStringLiteral ( ""="" )"		866215	0					
ANR	866951	CallExpression	"QStringLiteral ( ""="" )"		866215	0					
ANR	866952	Callee	QStringLiteral		866215	0					
ANR	866953	Identifier	QStringLiteral		866215	0					
ANR	866954	ArgumentList	"""="""		866215	1					
ANR	866955	Argument	"""="""		866215	0					
ANR	866956	PrimaryExpression	"""="""		866215	0					
ANR	866957	PrimaryExpression	1		866215	1					
ANR	866958	ElseStatement	else		866215	0					
ANR	866959	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="" , Qt :: CaseInsensitive ) )"		866215	0					
ANR	866960	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="" , Qt :: CaseInsensitive )"	190:23:9540:9634	866215	0	True				
ANR	866961	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="" , Qt :: CaseInsensitive )"		866215	0					
ANR	866962	Callee	keyword . startsWith		866215	0					
ANR	866963	MemberAccess	keyword . startsWith		866215	0					
ANR	866964	Identifier	keyword		866215	0					
ANR	866965	Identifier	startsWith		866215	1					
ANR	866966	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="""		866215	1					
ANR	866967	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="""		866215	0					
ANR	866968	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="""		866215	0		+			
ANR	866969	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" )"		866215	0					
ANR	866970	Callee	i18nc		866215	0					
ANR	866971	Identifier	i18nc		866215	0					
ANR	866972	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	866973	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	866974	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	866975	Argument	"""role"""		866215	1					
ANR	866976	PrimaryExpression	"""role"""		866215	0					
ANR	866977	PrimaryExpression	"""="""		866215	1					
ANR	866978	Argument	Qt :: CaseInsensitive		866215	1					
ANR	866979	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	866980	CompoundStatement		64:120:3809:3809	866215	1					
ANR	866981	ExpressionStatement	"windowRole = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"	191:16:9655:9705	866215	0	True				
ANR	866982	AssignmentExpression	"windowRole = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	0		=			
ANR	866983	Identifier	windowRole		866215	0					
ANR	866984	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	1					
ANR	866985	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		866215	0					
ANR	866986	Callee	keyword . split		866215	0					
ANR	866987	MemberAccess	keyword . split		866215	0					
ANR	866988	Identifier	keyword		866215	0					
ANR	866989	Identifier	split		866215	1					
ANR	866990	ArgumentList	"QStringLiteral ( ""="" )"		866215	1					
ANR	866991	Argument	"QStringLiteral ( ""="" )"		866215	0					
ANR	866992	CallExpression	"QStringLiteral ( ""="" )"		866215	0					
ANR	866993	Callee	QStringLiteral		866215	0					
ANR	866994	Identifier	QStringLiteral		866215	0					
ANR	866995	ArgumentList	"""="""		866215	1					
ANR	866996	Argument	"""="""		866215	0					
ANR	866997	PrimaryExpression	"""="""		866215	0					
ANR	866998	PrimaryExpression	1		866215	1					
ANR	866999	ElseStatement	else		866215	0					
ANR	867000	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="" , Qt :: CaseInsensitive ) )"		866215	0					
ANR	867001	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="" , Qt :: CaseInsensitive )"	192:23:9730:9827	866215	0	True				
ANR	867002	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="" , Qt :: CaseInsensitive )"		866215	0					
ANR	867003	Callee	keyword . startsWith		866215	0					
ANR	867004	MemberAccess	keyword . startsWith		866215	0					
ANR	867005	Identifier	keyword		866215	0					
ANR	867006	Identifier	startsWith		866215	1					
ANR	867007	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="""		866215	1					
ANR	867008	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="""		866215	0					
ANR	867009	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="""		866215	0		+			
ANR	867010	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		866215	0					
ANR	867011	Callee	i18nc		866215	0					
ANR	867012	Identifier	i18nc		866215	0					
ANR	867013	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	867014	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	867015	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	867016	Argument	"""desktop"""		866215	1					
ANR	867017	PrimaryExpression	"""desktop"""		866215	0					
ANR	867018	PrimaryExpression	"""="""		866215	1					
ANR	867019	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867020	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867021	CompoundStatement		67:16:4020:4027	866215	1					
ANR	867022	IdentifierDeclStatement	bool ok ;	193:16:9848:9855	866215	0	True				
ANR	867023	IdentifierDecl	ok		866215	0					
ANR	867024	IdentifierDeclType	bool		866215	0					
ANR	867025	Identifier	ok		866215	1					
ANR	867026	ExpressionStatement	"desktop = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt ( & ok )"	194:16:9873:9931	866215	1	True				
ANR	867027	AssignmentExpression	"desktop = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt ( & ok )"		866215	0		=			
ANR	867028	Identifier	desktop		866215	0					
ANR	867029	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt ( & ok )"		866215	1					
ANR	867030	Callee	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt"		866215	0					
ANR	867031	MemberAccess	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt"		866215	0					
ANR	867032	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		866215	0					
ANR	867033	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		866215	0					
ANR	867034	Callee	keyword . split		866215	0					
ANR	867035	MemberAccess	keyword . split		866215	0					
ANR	867036	Identifier	keyword		866215	0					
ANR	867037	Identifier	split		866215	1					
ANR	867038	ArgumentList	"QStringLiteral ( ""="" )"		866215	1					
ANR	867039	Argument	"QStringLiteral ( ""="" )"		866215	0					
ANR	867040	CallExpression	"QStringLiteral ( ""="" )"		866215	0					
ANR	867041	Callee	QStringLiteral		866215	0					
ANR	867042	Identifier	QStringLiteral		866215	0					
ANR	867043	ArgumentList	"""="""		866215	1					
ANR	867044	Argument	"""="""		866215	0					
ANR	867045	PrimaryExpression	"""="""		866215	0					
ANR	867046	PrimaryExpression	1		866215	1					
ANR	867047	Identifier	toInt		866215	1					
ANR	867048	ArgumentList	& ok		866215	1					
ANR	867049	Argument	& ok		866215	0					
ANR	867050	UnaryOperationExpression	& ok		866215	0					
ANR	867051	UnaryOperator	&		866215	0					
ANR	867052	Identifier	ok		866215	1					
ANR	867053	IfStatement	if ( ! ok || desktop > KWindowSystem :: numberOfDesktops ( ) )		866215	2					
ANR	867054	Condition	! ok || desktop > KWindowSystem :: numberOfDesktops ( )	195:20:9953:10002	866215	0	True				
ANR	867055	OrExpression	! ok || desktop > KWindowSystem :: numberOfDesktops ( )		866215	0		||			
ANR	867056	UnaryOperationExpression	! ok		866215	0					
ANR	867057	UnaryOperator	!		866215	0					
ANR	867058	Identifier	ok		866215	1					
ANR	867059	RelationalExpression	desktop > KWindowSystem :: numberOfDesktops ( )		866215	1		>			
ANR	867060	Identifier	desktop		866215	0					
ANR	867061	CallExpression	KWindowSystem :: numberOfDesktops ( )		866215	1					
ANR	867062	Callee	KWindowSystem :: numberOfDesktops		866215	0					
ANR	867063	Identifier	KWindowSystem :: numberOfDesktops		866215	0					
ANR	867064	ArgumentList			866215	1					
ANR	867065	CompoundStatement		69:72:4177:4177	866215	1					
ANR	867066	ExpressionStatement	desktop = - 1	196:20:10027:10039	866215	0	True				
ANR	867067	AssignmentExpression	desktop = - 1		866215	0		=			
ANR	867068	Identifier	desktop		866215	0					
ANR	867069	UnaryOperationExpression	- 1		866215	1					
ANR	867070	UnaryOperator	-		866215	0					
ANR	867071	PrimaryExpression	1		866215	1					
ANR	867072	ElseStatement	else		866215	0					
ANR	867073	CompoundStatement		72:19:4266:4266	866215	0					
ANR	867074	IfStatement	if ( windowName . isEmpty ( ) && ! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 ) )		866215	0					
ANR	867075	Condition	windowName . isEmpty ( ) && ! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 )	200:20:10208:10343	866215	0	True				
ANR	867076	AndExpression	windowName . isEmpty ( ) && ! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 )		866215	0		&&			
ANR	867077	CallExpression	windowName . isEmpty ( )		866215	0					
ANR	867078	Callee	windowName . isEmpty		866215	0					
ANR	867079	MemberAccess	windowName . isEmpty		866215	0					
ANR	867080	Identifier	windowName		866215	0					
ANR	867081	Identifier	isEmpty		866215	1					
ANR	867082	ArgumentList			866215	1					
ANR	867083	AndExpression	! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 )		866215	1		&&			
ANR	867084	UnaryOperationExpression	! keyword . contains ( '=' )		866215	0					
ANR	867085	UnaryOperator	!		866215	0					
ANR	867086	CallExpression	keyword . contains ( '=' )		866215	1					
ANR	867087	Callee	keyword . contains		866215	0					
ANR	867088	MemberAccess	keyword . contains		866215	0					
ANR	867089	Identifier	keyword		866215	0					
ANR	867090	Identifier	contains		866215	1					
ANR	867091	ArgumentList	'='		866215	1					
ANR	867092	Argument	'='		866215	0					
ANR	867093	PrimaryExpression	'='		866215	0					
ANR	867094	OrExpression	! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1		866215	1		||			
ANR	867095	UnaryOperationExpression	! windowRole . isEmpty ( )		866215	0					
ANR	867096	UnaryOperator	!		866215	0					
ANR	867097	CallExpression	windowRole . isEmpty ( )		866215	1					
ANR	867098	Callee	windowRole . isEmpty		866215	0					
ANR	867099	MemberAccess	windowRole . isEmpty		866215	0					
ANR	867100	Identifier	windowRole		866215	0					
ANR	867101	Identifier	isEmpty		866215	1					
ANR	867102	ArgumentList			866215	1					
ANR	867103	OrExpression	! windowClass . isEmpty ( ) || desktop != - 1		866215	1		||			
ANR	867104	UnaryOperationExpression	! windowClass . isEmpty ( )		866215	0					
ANR	867105	UnaryOperator	!		866215	0					
ANR	867106	CallExpression	windowClass . isEmpty ( )		866215	1					
ANR	867107	Callee	windowClass . isEmpty		866215	0					
ANR	867108	MemberAccess	windowClass . isEmpty		866215	0					
ANR	867109	Identifier	windowClass		866215	0					
ANR	867110	Identifier	isEmpty		866215	1					
ANR	867111	ArgumentList			866215	1					
ANR	867112	EqualityExpression	desktop != - 1		866215	1		!=			
ANR	867113	Identifier	desktop		866215	0					
ANR	867114	UnaryOperationExpression	- 1		866215	1					
ANR	867115	UnaryOperator	-		866215	0					
ANR	867116	PrimaryExpression	1		866215	1					
ANR	867117	CompoundStatement		75:88:4518:4518	866215	1					
ANR	867118	ExpressionStatement	windowName = keyword	202:20:10368:10388	866215	0	True				
ANR	867119	AssignmentExpression	windowName = keyword		866215	0		=			
ANR	867120	Identifier	windowName		866215	0					
ANR	867121	Identifier	keyword		866215	1					
ANR	867122	IdentifierDeclStatement	"QHashIterator < WId , KWindowInfo > it ( m_windows ) ;"	206:8:10440:10485	866215	15	True				
ANR	867123	IdentifierDecl	it ( m_windows )		866215	0					
ANR	867124	IdentifierDeclType	"QHashIterator < WId , KWindowInfo >"		866215	0					
ANR	867125	Identifier	it		866215	1					
ANR	867126	Identifier	m_windows		866215	2					
ANR	867127	WhileStatement	while ( it . hasNext ( ) )		866215	16					
ANR	867128	Condition	it . hasNext ( )	207:14:10501:10512	866215	0	True				
ANR	867129	CallExpression	it . hasNext ( )		866215	0					
ANR	867130	Callee	it . hasNext		866215	0					
ANR	867131	MemberAccess	it . hasNext		866215	0					
ANR	867132	Identifier	it		866215	0					
ANR	867133	Identifier	hasNext		866215	1					
ANR	867134	ArgumentList			866215	1					
ANR	867135	CompoundStatement		85:12:4797:4959	866215	1					
ANR	867136	ExpressionStatement	it . next ( )	208:12:10529:10538	866215	0	True				
ANR	867137	CallExpression	it . next ( )		866215	0					
ANR	867138	Callee	it . next		866215	0					
ANR	867139	MemberAccess	it . next		866215	0					
ANR	867140	Identifier	it		866215	0					
ANR	867141	Identifier	next		866215	1					
ANR	867142	ArgumentList			866215	1					
ANR	867143	IdentifierDeclStatement	WId w = it . key ( ) ;	209:12:10552:10568	866215	1	True				
ANR	867144	IdentifierDecl	w = it . key ( )		866215	0					
ANR	867145	IdentifierDeclType	WId		866215	0					
ANR	867146	Identifier	w		866215	1					
ANR	867147	AssignmentExpression	w = it . key ( )		866215	2		=			
ANR	867148	Identifier	w		866215	0					
ANR	867149	CallExpression	it . key ( )		866215	1					
ANR	867150	Callee	it . key		866215	0					
ANR	867151	MemberAccess	it . key		866215	0					
ANR	867152	Identifier	it		866215	0					
ANR	867153	Identifier	key		866215	1					
ANR	867154	ArgumentList			866215	1					
ANR	867155	IdentifierDeclStatement	KWindowInfo info = it . value ( ) ;	210:12:10582:10611	866215	2	True				
ANR	867156	IdentifierDecl	info = it . value ( )		866215	0					
ANR	867157	IdentifierDeclType	KWindowInfo		866215	0					
ANR	867158	Identifier	info		866215	1					
ANR	867159	AssignmentExpression	info = it . value ( )		866215	2		=			
ANR	867160	Identifier	info		866215	0					
ANR	867161	CallExpression	it . value ( )		866215	1					
ANR	867162	Callee	it . value		866215	0					
ANR	867163	MemberAccess	it . value		866215	0					
ANR	867164	Identifier	it		866215	0					
ANR	867165	Identifier	value		866215	1					
ANR	867166	ArgumentList			866215	1					
ANR	867167	IdentifierDeclStatement	"QString windowClassCompare = QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) ) ;"	211:12:10625:10787	866215	3	True				
ANR	867168	IdentifierDecl	"windowClassCompare = QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		866215	0					
ANR	867169	IdentifierDeclType	QString		866215	0					
ANR	867170	Identifier	windowClassCompare		866215	1					
ANR	867171	AssignmentExpression	"windowClassCompare = QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		866215	2		=			
ANR	867172	Identifier	windowClassCompare		866215	0					
ANR	867173	AdditiveExpression	"QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		866215	1		+			
ANR	867174	CallExpression	QString :: fromUtf8 ( info . windowClassName ( ) )		866215	0					
ANR	867175	Callee	QString :: fromUtf8		866215	0					
ANR	867176	Identifier	QString :: fromUtf8		866215	0					
ANR	867177	ArgumentList	info . windowClassName ( )		866215	1					
ANR	867178	Argument	info . windowClassName ( )		866215	0					
ANR	867179	CallExpression	info . windowClassName ( )		866215	0					
ANR	867180	Callee	info . windowClassName		866215	0					
ANR	867181	MemberAccess	info . windowClassName		866215	0					
ANR	867182	Identifier	info		866215	0					
ANR	867183	Identifier	windowClassName		866215	1					
ANR	867184	ArgumentList			866215	1					
ANR	867185	AdditiveExpression	""" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		866215	1		+			
ANR	867186	PrimaryExpression	""" """		866215	0					
ANR	867187	CallExpression	QString :: fromUtf8 ( info . windowClassClass ( ) )		866215	1					
ANR	867188	Callee	QString :: fromUtf8		866215	0					
ANR	867189	Identifier	QString :: fromUtf8		866215	0					
ANR	867190	ArgumentList	info . windowClassClass ( )		866215	1					
ANR	867191	Argument	info . windowClassClass ( )		866215	0					
ANR	867192	CallExpression	info . windowClassClass ( )		866215	0					
ANR	867193	Callee	info . windowClassClass		866215	0					
ANR	867194	MemberAccess	info . windowClassClass		866215	0					
ANR	867195	Identifier	info		866215	0					
ANR	867196	Identifier	windowClassClass		866215	1					
ANR	867197	ArgumentList			866215	1					
ANR	867198	IfStatement	if ( ! KWindowSystem :: hasWId ( w ) )		866215	4					
ANR	867199	Condition	! KWindowSystem :: hasWId ( w )	214:16:10849:10873	866215	0	True				
ANR	867200	UnaryOperationExpression	! KWindowSystem :: hasWId ( w )		866215	0					
ANR	867201	UnaryOperator	!		866215	0					
ANR	867202	CallExpression	KWindowSystem :: hasWId ( w )		866215	1					
ANR	867203	Callee	KWindowSystem :: hasWId		866215	0					
ANR	867204	Identifier	KWindowSystem :: hasWId		866215	0					
ANR	867205	ArgumentList	w		866215	1					
ANR	867206	Argument	w		866215	0					
ANR	867207	Identifier	w		866215	0					
ANR	867208	CompoundStatement		88:43:5048:5048	866215	1					
ANR	867209	ContinueStatement	continue ;	215:16:10894:10902	866215	0	True				
ANR	867210	IfStatement	"if ( ! windowName . isEmpty ( ) && ! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive ) )"		866215	5					
ANR	867211	Condition	"! windowName . isEmpty ( ) && ! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"	217:16:10934:11012	866215	0	True				
ANR	867212	AndExpression	"! windowName . isEmpty ( ) && ! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"		866215	0		&&			
ANR	867213	UnaryOperationExpression	! windowName . isEmpty ( )		866215	0					
ANR	867214	UnaryOperator	!		866215	0					
ANR	867215	CallExpression	windowName . isEmpty ( )		866215	1					
ANR	867216	Callee	windowName . isEmpty		866215	0					
ANR	867217	MemberAccess	windowName . isEmpty		866215	0					
ANR	867218	Identifier	windowName		866215	0					
ANR	867219	Identifier	isEmpty		866215	1					
ANR	867220	ArgumentList			866215	1					
ANR	867221	UnaryOperationExpression	"! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"		866215	1					
ANR	867222	UnaryOperator	!		866215	0					
ANR	867223	CallExpression	"info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"		866215	1					
ANR	867224	Callee	info . name ( ) . contains		866215	0					
ANR	867225	MemberAccess	info . name ( ) . contains		866215	0					
ANR	867226	CallExpression	info . name ( )		866215	0					
ANR	867227	Callee	info . name		866215	0					
ANR	867228	MemberAccess	info . name		866215	0					
ANR	867229	Identifier	info		866215	0					
ANR	867230	Identifier	name		866215	1					
ANR	867231	ArgumentList			866215	1					
ANR	867232	Identifier	contains		866215	1					
ANR	867233	ArgumentList	windowName		866215	1					
ANR	867234	Argument	windowName		866215	0					
ANR	867235	Identifier	windowName		866215	0					
ANR	867236	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867237	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867238	CompoundStatement		91:97:5187:5187	866215	1					
ANR	867239	ContinueStatement	continue ;	218:16:11033:11041	866215	0	True				
ANR	867240	IfStatement	"if ( ! windowClass . isEmpty ( ) && ! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive ) )"		866215	6					
ANR	867241	Condition	"! windowClass . isEmpty ( ) && ! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"	220:16:11073:11160	866215	0	True				
ANR	867242	AndExpression	"! windowClass . isEmpty ( ) && ! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"		866215	0		&&			
ANR	867243	UnaryOperationExpression	! windowClass . isEmpty ( )		866215	0					
ANR	867244	UnaryOperator	!		866215	0					
ANR	867245	CallExpression	windowClass . isEmpty ( )		866215	1					
ANR	867246	Callee	windowClass . isEmpty		866215	0					
ANR	867247	MemberAccess	windowClass . isEmpty		866215	0					
ANR	867248	Identifier	windowClass		866215	0					
ANR	867249	Identifier	isEmpty		866215	1					
ANR	867250	ArgumentList			866215	1					
ANR	867251	UnaryOperationExpression	"! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"		866215	1					
ANR	867252	UnaryOperator	!		866215	0					
ANR	867253	CallExpression	"windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"		866215	1					
ANR	867254	Callee	windowClassCompare . contains		866215	0					
ANR	867255	MemberAccess	windowClassCompare . contains		866215	0					
ANR	867256	Identifier	windowClassCompare		866215	0					
ANR	867257	Identifier	contains		866215	1					
ANR	867258	ArgumentList	windowClass		866215	1					
ANR	867259	Argument	windowClass		866215	0					
ANR	867260	Identifier	windowClass		866215	0					
ANR	867261	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867262	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867263	CompoundStatement		94:106:5335:5335	866215	1					
ANR	867264	ContinueStatement	continue ;	221:16:11181:11189	866215	0	True				
ANR	867265	IfStatement	"if ( ! windowRole . isEmpty ( ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive ) )"		866215	7					
ANR	867266	Condition	"! windowRole . isEmpty ( ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"	223:16:11221:11324	866215	0	True				
ANR	867267	AndExpression	"! windowRole . isEmpty ( ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"		866215	0		&&			
ANR	867268	UnaryOperationExpression	! windowRole . isEmpty ( )		866215	0					
ANR	867269	UnaryOperator	!		866215	0					
ANR	867270	CallExpression	windowRole . isEmpty ( )		866215	1					
ANR	867271	Callee	windowRole . isEmpty		866215	0					
ANR	867272	MemberAccess	windowRole . isEmpty		866215	0					
ANR	867273	Identifier	windowRole		866215	0					
ANR	867274	Identifier	isEmpty		866215	1					
ANR	867275	ArgumentList			866215	1					
ANR	867276	UnaryOperationExpression	"! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"		866215	1					
ANR	867277	UnaryOperator	!		866215	0					
ANR	867278	CallExpression	"QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"		866215	1					
ANR	867279	Callee	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		866215	0					
ANR	867280	MemberAccess	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		866215	0					
ANR	867281	CallExpression	QString :: fromUtf8 ( info . windowRole ( ) )		866215	0					
ANR	867282	Callee	QString :: fromUtf8		866215	0					
ANR	867283	Identifier	QString :: fromUtf8		866215	0					
ANR	867284	ArgumentList	info . windowRole ( )		866215	1					
ANR	867285	Argument	info . windowRole ( )		866215	0					
ANR	867286	CallExpression	info . windowRole ( )		866215	0					
ANR	867287	Callee	info . windowRole		866215	0					
ANR	867288	MemberAccess	info . windowRole		866215	0					
ANR	867289	Identifier	info		866215	0					
ANR	867290	Identifier	windowRole		866215	1					
ANR	867291	ArgumentList			866215	1					
ANR	867292	Identifier	contains		866215	1					
ANR	867293	ArgumentList	windowRole		866215	1					
ANR	867294	Argument	windowRole		866215	0					
ANR	867295	Identifier	windowRole		866215	0					
ANR	867296	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867297	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867298	CompoundStatement		97:122:5499:5499	866215	1					
ANR	867299	ContinueStatement	continue ;	224:16:11345:11353	866215	0	True				
ANR	867300	IfStatement	if ( desktop != - 1 && ! info . isOnDesktop ( desktop ) )		866215	8					
ANR	867301	Condition	desktop != - 1 && ! info . isOnDesktop ( desktop )	226:16:11385:11427	866215	0	True				
ANR	867302	AndExpression	desktop != - 1 && ! info . isOnDesktop ( desktop )		866215	0		&&			
ANR	867303	EqualityExpression	desktop != - 1		866215	0		!=			
ANR	867304	Identifier	desktop		866215	0					
ANR	867305	UnaryOperationExpression	- 1		866215	1					
ANR	867306	UnaryOperator	-		866215	0					
ANR	867307	PrimaryExpression	1		866215	1					
ANR	867308	UnaryOperationExpression	! info . isOnDesktop ( desktop )		866215	1					
ANR	867309	UnaryOperator	!		866215	0					
ANR	867310	CallExpression	info . isOnDesktop ( desktop )		866215	1					
ANR	867311	Callee	info . isOnDesktop		866215	0					
ANR	867312	MemberAccess	info . isOnDesktop		866215	0					
ANR	867313	Identifier	info		866215	0					
ANR	867314	Identifier	isOnDesktop		866215	1					
ANR	867315	ArgumentList	desktop		866215	1					
ANR	867316	Argument	desktop		866215	0					
ANR	867317	Identifier	desktop		866215	0					
ANR	867318	CompoundStatement		100:61:5602:5602	866215	1					
ANR	867319	ContinueStatement	continue ;	227:16:11448:11456	866215	0	True				
ANR	867320	IfStatement	if ( windowName . isEmpty ( ) && windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1 )		866215	9					
ANR	867321	Condition	windowName . isEmpty ( ) && windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1	231:16:11639:11724	866215	0	True				
ANR	867322	AndExpression	windowName . isEmpty ( ) && windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1		866215	0		&&			
ANR	867323	CallExpression	windowName . isEmpty ( )		866215	0					
ANR	867324	Callee	windowName . isEmpty		866215	0					
ANR	867325	MemberAccess	windowName . isEmpty		866215	0					
ANR	867326	Identifier	windowName		866215	0					
ANR	867327	Identifier	isEmpty		866215	1					
ANR	867328	ArgumentList			866215	1					
ANR	867329	AndExpression	windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1		866215	1		&&			
ANR	867330	CallExpression	windowClass . isEmpty ( )		866215	0					
ANR	867331	Callee	windowClass . isEmpty		866215	0					
ANR	867332	MemberAccess	windowClass . isEmpty		866215	0					
ANR	867333	Identifier	windowClass		866215	0					
ANR	867334	Identifier	isEmpty		866215	1					
ANR	867335	ArgumentList			866215	1					
ANR	867336	AndExpression	windowRole . isEmpty ( ) && desktop == - 1		866215	1		&&			
ANR	867337	CallExpression	windowRole . isEmpty ( )		866215	0					
ANR	867338	Callee	windowRole . isEmpty		866215	0					
ANR	867339	MemberAccess	windowRole . isEmpty		866215	0					
ANR	867340	Identifier	windowRole		866215	0					
ANR	867341	Identifier	isEmpty		866215	1					
ANR	867342	ArgumentList			866215	1					
ANR	867343	EqualityExpression	desktop == - 1		866215	1		==			
ANR	867344	Identifier	desktop		866215	0					
ANR	867345	UnaryOperationExpression	- 1		866215	1					
ANR	867346	UnaryOperator	-		866215	0					
ANR	867347	PrimaryExpression	1		866215	1					
ANR	867348	CompoundStatement		106:16:5917:5973	866215	1					
ANR	867349	IdentifierDeclStatement	const QString & test = term . mid ( keywords [ 0 ] . length ( ) + 1 ) ;	232:16:11745:11801	866215	0	True				
ANR	867350	IdentifierDecl	& test = term . mid ( keywords [ 0 ] . length ( ) + 1 )		866215	0					
ANR	867351	IdentifierDeclType	const QString &		866215	0					
ANR	867352	Identifier	test		866215	1					
ANR	867353	AssignmentExpression	& test = term . mid ( keywords [ 0 ] . length ( ) + 1 )		866215	2		=			
ANR	867354	Identifier	test		866215	0					
ANR	867355	CallExpression	term . mid ( keywords [ 0 ] . length ( ) + 1 )		866215	1					
ANR	867356	Callee	term . mid		866215	0					
ANR	867357	MemberAccess	term . mid		866215	0					
ANR	867358	Identifier	term		866215	0					
ANR	867359	Identifier	mid		866215	1					
ANR	867360	ArgumentList	keywords [ 0 ] . length ( ) + 1		866215	1					
ANR	867361	Argument	keywords [ 0 ] . length ( ) + 1		866215	0					
ANR	867362	AdditiveExpression	keywords [ 0 ] . length ( ) + 1		866215	0		+			
ANR	867363	CallExpression	keywords [ 0 ] . length ( )		866215	0					
ANR	867364	Callee	keywords [ 0 ] . length		866215	0					
ANR	867365	MemberAccess	keywords [ 0 ] . length		866215	0					
ANR	867366	ArrayIndexing	keywords [ 0 ]		866215	0					
ANR	867367	Identifier	keywords		866215	0					
ANR	867368	PrimaryExpression	0		866215	1					
ANR	867369	Identifier	length		866215	1					
ANR	867370	ArgumentList			866215	1					
ANR	867371	PrimaryExpression	1		866215	1					
ANR	867372	IfStatement	"if ( ! info . name ( ) . contains ( test , Qt :: CaseInsensitive ) && ! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive ) )"		866215	1					
ANR	867373	Condition	"! info . name ( ) . contains ( test , Qt :: CaseInsensitive ) && ! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"	233:20:11823:12046	866215	0	True				
ANR	867374	AndExpression	"! info . name ( ) . contains ( test , Qt :: CaseInsensitive ) && ! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		866215	0		&&			
ANR	867375	UnaryOperationExpression	"! info . name ( ) . contains ( test , Qt :: CaseInsensitive )"		866215	0					
ANR	867376	UnaryOperator	!		866215	0					
ANR	867377	CallExpression	"info . name ( ) . contains ( test , Qt :: CaseInsensitive )"		866215	1					
ANR	867378	Callee	info . name ( ) . contains		866215	0					
ANR	867379	MemberAccess	info . name ( ) . contains		866215	0					
ANR	867380	CallExpression	info . name ( )		866215	0					
ANR	867381	Callee	info . name		866215	0					
ANR	867382	MemberAccess	info . name		866215	0					
ANR	867383	Identifier	info		866215	0					
ANR	867384	Identifier	name		866215	1					
ANR	867385	ArgumentList			866215	1					
ANR	867386	Identifier	contains		866215	1					
ANR	867387	ArgumentList	test		866215	1					
ANR	867388	Argument	test		866215	0					
ANR	867389	Identifier	test		866215	0					
ANR	867390	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867391	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867392	AndExpression	"! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		866215	1		&&			
ANR	867393	UnaryOperationExpression	"! windowClassCompare . contains ( test , Qt :: CaseInsensitive )"		866215	0					
ANR	867394	UnaryOperator	!		866215	0					
ANR	867395	CallExpression	"windowClassCompare . contains ( test , Qt :: CaseInsensitive )"		866215	1					
ANR	867396	Callee	windowClassCompare . contains		866215	0					
ANR	867397	MemberAccess	windowClassCompare . contains		866215	0					
ANR	867398	Identifier	windowClassCompare		866215	0					
ANR	867399	Identifier	contains		866215	1					
ANR	867400	ArgumentList	test		866215	1					
ANR	867401	Argument	test		866215	0					
ANR	867402	Identifier	test		866215	0					
ANR	867403	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867404	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867405	UnaryOperationExpression	"! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		866215	1					
ANR	867406	UnaryOperator	!		866215	0					
ANR	867407	CallExpression	"QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		866215	1					
ANR	867408	Callee	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		866215	0					
ANR	867409	MemberAccess	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		866215	0					
ANR	867410	CallExpression	QString :: fromUtf8 ( info . windowRole ( ) )		866215	0					
ANR	867411	Callee	QString :: fromUtf8		866215	0					
ANR	867412	Identifier	QString :: fromUtf8		866215	0					
ANR	867413	ArgumentList	info . windowRole ( )		866215	1					
ANR	867414	Argument	info . windowRole ( )		866215	0					
ANR	867415	CallExpression	info . windowRole ( )		866215	0					
ANR	867416	Callee	info . windowRole		866215	0					
ANR	867417	MemberAccess	info . windowRole		866215	0					
ANR	867418	Identifier	info		866215	0					
ANR	867419	Identifier	windowRole		866215	1					
ANR	867420	ArgumentList			866215	1					
ANR	867421	Identifier	contains		866215	1					
ANR	867422	ArgumentList	test		866215	1					
ANR	867423	Argument	test		866215	0					
ANR	867424	Identifier	test		866215	0					
ANR	867425	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867426	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867427	CompoundStatement		109:95:6221:6221	866215	1					
ANR	867428	ContinueStatement	continue ;	236:20:12071:12079	866215	0	True				
ANR	867429	IfStatement	"if ( actionSupported ( info , action ) )"		866215	10					
ANR	867430	Condition	"actionSupported ( info , action )"	240:16:12189:12217	866215	0	True				
ANR	867431	CallExpression	"actionSupported ( info , action )"		866215	0					
ANR	867432	Callee	actionSupported		866215	0					
ANR	867433	Identifier	actionSupported		866215	0					
ANR	867434	ArgumentList	info		866215	1					
ANR	867435	Argument	info		866215	0					
ANR	867436	Identifier	info		866215	0					
ANR	867437	Argument	action		866215	1					
ANR	867438	Identifier	action		866215	0					
ANR	867439	CompoundStatement		114:46:6391:6391	866215	1					
ANR	867440	ExpressionStatement	"matches << windowMatch ( info , action )"	241:16:12237:12273	866215	0	True				
ANR	867441	ShiftExpression	"matches << windowMatch ( info , action )"		866215	0		<<			
ANR	867442	Identifier	matches		866215	0					
ANR	867443	CallExpression	"windowMatch ( info , action )"		866215	1					
ANR	867444	Callee	windowMatch		866215	0					
ANR	867445	Identifier	windowMatch		866215	0					
ANR	867446	ArgumentList	info		866215	1					
ANR	867447	Argument	info		866215	0					
ANR	867448	Identifier	info		866215	0					
ANR	867449	Argument	action		866215	1					
ANR	867450	Identifier	action		866215	0					
ANR	867451	IfStatement	if ( ! matches . isEmpty ( ) )		866215	17					
ANR	867452	Condition	! matches . isEmpty ( )	245:12:12312:12329	866215	0	True				
ANR	867453	UnaryOperationExpression	! matches . isEmpty ( )		866215	0					
ANR	867454	UnaryOperator	!		866215	0					
ANR	867455	CallExpression	matches . isEmpty ( )		866215	1					
ANR	867456	Callee	matches . isEmpty		866215	0					
ANR	867457	MemberAccess	matches . isEmpty		866215	0					
ANR	867458	Identifier	matches		866215	0					
ANR	867459	Identifier	isEmpty		866215	1					
ANR	867460	ArgumentList			866215	1					
ANR	867461	CompoundStatement		119:32:6504:6504	866215	1					
ANR	867462	ExpressionStatement	context . addMatches ( matches )	247:12:12438:12465	866215	0	True				
ANR	867463	CallExpression	context . addMatches ( matches )		866215	0					
ANR	867464	Callee	context . addMatches		866215	0					
ANR	867465	MemberAccess	context . addMatches		866215	0					
ANR	867466	Identifier	context		866215	0					
ANR	867467	Identifier	addMatches		866215	1					
ANR	867468	ArgumentList	matches		866215	1					
ANR	867469	Argument	matches		866215	0					
ANR	867470	Identifier	matches		866215	0					
ANR	867471	ReturnStatement	return ;	248:12:12479:12485	866215	1	True				
ANR	867472	IdentifierDeclStatement	bool desktopAdded = false ;	252:4:12508:12533	866215	8	True				
ANR	867473	IdentifierDecl	desktopAdded = false		866215	0					
ANR	867474	IdentifierDeclType	bool		866215	0					
ANR	867475	Identifier	desktopAdded		866215	1					
ANR	867476	AssignmentExpression	desktopAdded = false		866215	2		=			
ANR	867477	Identifier	false		866215	0					
ANR	867478	Identifier	false		866215	1					
ANR	867479	IfStatement	"if ( term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , Qt :: CaseInsensitive ) )"		866215	9					
ANR	867480	Condition	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , Qt :: CaseInsensitive )"	254:8:12576:12664	866215	0	True				
ANR	867481	CallExpression	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , Qt :: CaseInsensitive )"		866215	0					
ANR	867482	Callee	term . startsWith		866215	0					
ANR	867483	MemberAccess	term . startsWith		866215	0					
ANR	867484	Identifier	term		866215	0					
ANR	867485	Identifier	startsWith		866215	1					
ANR	867486	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		866215	1					
ANR	867487	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		866215	0					
ANR	867488	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		866215	0					
ANR	867489	Callee	i18nc		866215	0					
ANR	867490	Identifier	i18nc		866215	0					
ANR	867491	ArgumentList	"""Note this is a KRunner keyword"""		866215	1					
ANR	867492	Argument	"""Note this is a KRunner keyword"""		866215	0					
ANR	867493	PrimaryExpression	"""Note this is a KRunner keyword"""		866215	0					
ANR	867494	Argument	"""desktop"""		866215	1					
ANR	867495	PrimaryExpression	"""desktop"""		866215	0					
ANR	867496	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867497	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867498	CompoundStatement		129:8:6849:6906	866215	1					
ANR	867499	IdentifierDeclStatement	"const QStringList parts = term . split ( QStringLiteral ( "" "" ) ) ;"	255:8:12677:12734	866215	0	True				
ANR	867500	IdentifierDecl	"parts = term . split ( QStringLiteral ( "" "" ) )"		866215	0					
ANR	867501	IdentifierDeclType	const QStringList		866215	0					
ANR	867502	Identifier	parts		866215	1					
ANR	867503	AssignmentExpression	"parts = term . split ( QStringLiteral ( "" "" ) )"		866215	2		=			
ANR	867504	Identifier	parts		866215	0					
ANR	867505	CallExpression	"term . split ( QStringLiteral ( "" "" ) )"		866215	1					
ANR	867506	Callee	term . split		866215	0					
ANR	867507	MemberAccess	term . split		866215	0					
ANR	867508	Identifier	term		866215	0					
ANR	867509	Identifier	split		866215	1					
ANR	867510	ArgumentList	"QStringLiteral ( "" "" )"		866215	1					
ANR	867511	Argument	"QStringLiteral ( "" "" )"		866215	0					
ANR	867512	CallExpression	"QStringLiteral ( "" "" )"		866215	0					
ANR	867513	Callee	QStringLiteral		866215	0					
ANR	867514	Identifier	QStringLiteral		866215	0					
ANR	867515	ArgumentList	""" """		866215	1					
ANR	867516	Argument	""" """		866215	0					
ANR	867517	PrimaryExpression	""" """		866215	0					
ANR	867518	IfStatement	if ( parts . size ( ) == 1 )		866215	1					
ANR	867519	Condition	parts . size ( ) == 1	256:12:12748:12764	866215	0	True				
ANR	867520	EqualityExpression	parts . size ( ) == 1		866215	0		==			
ANR	867521	CallExpression	parts . size ( )		866215	0					
ANR	867522	Callee	parts . size		866215	0					
ANR	867523	MemberAccess	parts . size		866215	0					
ANR	867524	Identifier	parts		866215	0					
ANR	867525	Identifier	size		866215	1					
ANR	867526	ArgumentList			866215	1					
ANR	867527	PrimaryExpression	1		866215	1					
ANR	867528	CompoundStatement		130:31:6939:6939	866215	1					
ANR	867529	ForStatement	for ( int i = 1 ; i <= KWindowSystem :: numberOfDesktops ( ) ; i ++ )		866215	0					
ANR	867530	ForInit	int i = 1 ;	258:17:12834:12841	866215	0	True				
ANR	867531	IdentifierDeclStatement	int i = 1 ;		866215	0					
ANR	867532	IdentifierDecl	i = 1		866215	0					
ANR	867533	IdentifierDeclType	int		866215	0					
ANR	867534	Identifier	i		866215	1					
ANR	867535	AssignmentExpression	i = 1		866215	2		=			
ANR	867536	Identifier	i		866215	0					
ANR	867537	PrimaryExpression	1		866215	1					
ANR	867538	Condition	i <= KWindowSystem :: numberOfDesktops ( )	258:26:12843:12878	866215	1	True				
ANR	867539	RelationalExpression	i <= KWindowSystem :: numberOfDesktops ( )		866215	0		<=			
ANR	867540	Identifier	i		866215	0					
ANR	867541	CallExpression	KWindowSystem :: numberOfDesktops ( )		866215	1					
ANR	867542	Callee	KWindowSystem :: numberOfDesktops		866215	0					
ANR	867543	Identifier	KWindowSystem :: numberOfDesktops		866215	0					
ANR	867544	ArgumentList			866215	1					
ANR	867545	PostIncDecOperationExpression	i ++	258:64:12881:12883	866215	2	True				
ANR	867546	Identifier	i		866215	0					
ANR	867547	IncDec	++		866215	1					
ANR	867548	CompoundStatement		132:69:7058:7058	866215	3					
ANR	867549	IfStatement	if ( i == KWindowSystem :: currentDesktop ( ) )		866215	0					
ANR	867550	Condition	i == KWindowSystem :: currentDesktop ( )	259:20:12908:12943	866215	0	True				
ANR	867551	EqualityExpression	i == KWindowSystem :: currentDesktop ( )		866215	0		==			
ANR	867552	Identifier	i		866215	0					
ANR	867553	CallExpression	KWindowSystem :: currentDesktop ( )		866215	1					
ANR	867554	Callee	KWindowSystem :: currentDesktop		866215	0					
ANR	867555	Identifier	KWindowSystem :: currentDesktop		866215	0					
ANR	867556	ArgumentList			866215	1					
ANR	867557	CompoundStatement		133:58:7118:7118	866215	1					
ANR	867558	ContinueStatement	continue ;	260:20:12968:12976	866215	0	True				
ANR	867559	ExpressionStatement	matches << desktopMatch ( i )	262:16:13012:13038	866215	1	True				
ANR	867560	ShiftExpression	matches << desktopMatch ( i )		866215	0		<<			
ANR	867561	Identifier	matches		866215	0					
ANR	867562	CallExpression	desktopMatch ( i )		866215	1					
ANR	867563	Callee	desktopMatch		866215	0					
ANR	867564	Identifier	desktopMatch		866215	0					
ANR	867565	ArgumentList	i		866215	1					
ANR	867566	Argument	i		866215	0					
ANR	867567	Identifier	i		866215	0					
ANR	867568	ExpressionStatement	desktopAdded = true	263:16:13056:13075	866215	2	True				
ANR	867569	AssignmentExpression	desktopAdded = true		866215	0		=			
ANR	867570	Identifier	desktopAdded		866215	0					
ANR	867571	Identifier	true		866215	1					
ANR	867572	ElseStatement	else		866215	0					
ANR	867573	CompoundStatement		142:12:7368:7430	866215	0					
ANR	867574	IdentifierDeclStatement	bool isInt ;	267:12:13172:13182	866215	0	True				
ANR	867575	IdentifierDecl	isInt		866215	0					
ANR	867576	IdentifierDeclType	bool		866215	0					
ANR	867577	Identifier	isInt		866215	1					
ANR	867578	IdentifierDeclStatement	int desktop = term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt ) ;	268:12:13196:13258	866215	1	True				
ANR	867579	IdentifierDecl	desktop = term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt )		866215	0					
ANR	867580	IdentifierDeclType	int		866215	0					
ANR	867581	Identifier	desktop		866215	1					
ANR	867582	AssignmentExpression	desktop = term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt )		866215	2		=			
ANR	867583	Identifier	desktop		866215	0					
ANR	867584	CallExpression	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt )		866215	1					
ANR	867585	Callee	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt		866215	0					
ANR	867586	MemberAccess	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt		866215	0					
ANR	867587	CallExpression	term . midRef ( parts [ 0 ] . length ( ) + 1 )		866215	0					
ANR	867588	Callee	term . midRef		866215	0					
ANR	867589	MemberAccess	term . midRef		866215	0					
ANR	867590	Identifier	term		866215	0					
ANR	867591	Identifier	midRef		866215	1					
ANR	867592	ArgumentList	parts [ 0 ] . length ( ) + 1		866215	1					
ANR	867593	Argument	parts [ 0 ] . length ( ) + 1		866215	0					
ANR	867594	AdditiveExpression	parts [ 0 ] . length ( ) + 1		866215	0		+			
ANR	867595	CallExpression	parts [ 0 ] . length ( )		866215	0					
ANR	867596	Callee	parts [ 0 ] . length		866215	0					
ANR	867597	MemberAccess	parts [ 0 ] . length		866215	0					
ANR	867598	ArrayIndexing	parts [ 0 ]		866215	0					
ANR	867599	Identifier	parts		866215	0					
ANR	867600	PrimaryExpression	0		866215	1					
ANR	867601	Identifier	length		866215	1					
ANR	867602	ArgumentList			866215	1					
ANR	867603	PrimaryExpression	1		866215	1					
ANR	867604	Identifier	toInt		866215	1					
ANR	867605	ArgumentList	& isInt		866215	1					
ANR	867606	Argument	& isInt		866215	0					
ANR	867607	UnaryOperationExpression	& isInt		866215	0					
ANR	867608	UnaryOperator	&		866215	0					
ANR	867609	Identifier	isInt		866215	1					
ANR	867610	IfStatement	if ( isInt && desktop != KWindowSystem :: currentDesktop ( ) )		866215	2					
ANR	867611	Condition	isInt && desktop != KWindowSystem :: currentDesktop ( )	269:16:13276:13326	866215	0	True				
ANR	867612	AndExpression	isInt && desktop != KWindowSystem :: currentDesktop ( )		866215	0		&&			
ANR	867613	Identifier	isInt		866215	0					
ANR	867614	EqualityExpression	desktop != KWindowSystem :: currentDesktop ( )		866215	1		!=			
ANR	867615	Identifier	desktop		866215	0					
ANR	867616	CallExpression	KWindowSystem :: currentDesktop ( )		866215	1					
ANR	867617	Callee	KWindowSystem :: currentDesktop		866215	0					
ANR	867618	Identifier	KWindowSystem :: currentDesktop		866215	0					
ANR	867619	ArgumentList			866215	1					
ANR	867620	CompoundStatement		143:69:7501:7501	866215	1					
ANR	867621	ExpressionStatement	matches << desktopMatch ( desktop )	270:16:13347:13379	866215	0	True				
ANR	867622	ShiftExpression	matches << desktopMatch ( desktop )		866215	0		<<			
ANR	867623	Identifier	matches		866215	0					
ANR	867624	CallExpression	desktopMatch ( desktop )		866215	1					
ANR	867625	Callee	desktopMatch		866215	0					
ANR	867626	Identifier	desktopMatch		866215	0					
ANR	867627	ArgumentList	desktop		866215	1					
ANR	867628	Argument	desktop		866215	0					
ANR	867629	Identifier	desktop		866215	0					
ANR	867630	ExpressionStatement	desktopAdded = true	271:16:13397:13416	866215	1	True				
ANR	867631	AssignmentExpression	desktopAdded = true		866215	0		=			
ANR	867632	Identifier	desktopAdded		866215	0					
ANR	867633	Identifier	true		866215	1					
ANR	867634	IdentifierDeclStatement	"QHashIterator < WId , KWindowInfo > it ( m_windows ) ;"	277:4:13495:13540	866215	10	True				
ANR	867635	IdentifierDecl	it ( m_windows )		866215	0					
ANR	867636	IdentifierDeclType	"QHashIterator < WId , KWindowInfo >"		866215	0					
ANR	867637	Identifier	it		866215	1					
ANR	867638	Identifier	m_windows		866215	2					
ANR	867639	WhileStatement	while ( it . hasNext ( ) )		866215	11					
ANR	867640	Condition	it . hasNext ( )	278:11:13553:13564	866215	0	True				
ANR	867641	CallExpression	it . hasNext ( )		866215	0					
ANR	867642	Callee	it . hasNext		866215	0					
ANR	867643	MemberAccess	it . hasNext		866215	0					
ANR	867644	Identifier	it		866215	0					
ANR	867645	Identifier	hasNext		866215	1					
ANR	867646	ArgumentList			866215	1					
ANR	867647	CompoundStatement		160:8:7972:8033	866215	1					
ANR	867648	ExpressionStatement	it . next ( )	279:8:13577:13586	866215	0	True				
ANR	867649	CallExpression	it . next ( )		866215	0					
ANR	867650	Callee	it . next		866215	0					
ANR	867651	MemberAccess	it . next		866215	0					
ANR	867652	Identifier	it		866215	0					
ANR	867653	Identifier	next		866215	1					
ANR	867654	ArgumentList			866215	1					
ANR	867655	IdentifierDeclStatement	WId w = it . key ( ) ;	280:8:13596:13612	866215	1	True				
ANR	867656	IdentifierDecl	w = it . key ( )		866215	0					
ANR	867657	IdentifierDeclType	WId		866215	0					
ANR	867658	Identifier	w		866215	1					
ANR	867659	AssignmentExpression	w = it . key ( )		866215	2		=			
ANR	867660	Identifier	w		866215	0					
ANR	867661	CallExpression	it . key ( )		866215	1					
ANR	867662	Callee	it . key		866215	0					
ANR	867663	MemberAccess	it . key		866215	0					
ANR	867664	Identifier	it		866215	0					
ANR	867665	Identifier	key		866215	1					
ANR	867666	ArgumentList			866215	1					
ANR	867667	IfStatement	if ( ! KWindowSystem :: hasWId ( w ) )		866215	2					
ANR	867668	Condition	! KWindowSystem :: hasWId ( w )	281:12:13626:13650	866215	0	True				
ANR	867669	UnaryOperationExpression	! KWindowSystem :: hasWId ( w )		866215	0					
ANR	867670	UnaryOperator	!		866215	0					
ANR	867671	CallExpression	KWindowSystem :: hasWId ( w )		866215	1					
ANR	867672	Callee	KWindowSystem :: hasWId		866215	0					
ANR	867673	Identifier	KWindowSystem :: hasWId		866215	0					
ANR	867674	ArgumentList	w		866215	1					
ANR	867675	Argument	w		866215	0					
ANR	867676	Identifier	w		866215	0					
ANR	867677	CompoundStatement		155:39:7825:7825	866215	1					
ANR	867678	ContinueStatement	continue ;	282:12:13667:13675	866215	0	True				
ANR	867679	IdentifierDeclStatement	KWindowInfo info = it . value ( ) ;	285:8:13761:13790	866215	3	True				
ANR	867680	IdentifierDecl	info = it . value ( )		866215	0					
ANR	867681	IdentifierDeclType	KWindowInfo		866215	0					
ANR	867682	Identifier	info		866215	1					
ANR	867683	AssignmentExpression	info = it . value ( )		866215	2		=			
ANR	867684	Identifier	info		866215	0					
ANR	867685	CallExpression	it . value ( )		866215	1					
ANR	867686	Callee	it . value		866215	0					
ANR	867687	MemberAccess	it . value		866215	0					
ANR	867688	Identifier	it		866215	0					
ANR	867689	Identifier	value		866215	1					
ANR	867690	ArgumentList			866215	1					
ANR	867691	IdentifierDeclStatement	QString className = QString :: fromUtf8 ( info . windowClassName ( ) ) ;	286:8:13800:13861	866215	4	True				
ANR	867692	IdentifierDecl	className = QString :: fromUtf8 ( info . windowClassName ( ) )		866215	0					
ANR	867693	IdentifierDeclType	QString		866215	0					
ANR	867694	Identifier	className		866215	1					
ANR	867695	AssignmentExpression	className = QString :: fromUtf8 ( info . windowClassName ( ) )		866215	2		=			
ANR	867696	Identifier	className		866215	0					
ANR	867697	CallExpression	QString :: fromUtf8 ( info . windowClassName ( ) )		866215	1					
ANR	867698	Callee	QString :: fromUtf8		866215	0					
ANR	867699	Identifier	QString :: fromUtf8		866215	0					
ANR	867700	ArgumentList	info . windowClassName ( )		866215	1					
ANR	867701	Argument	info . windowClassName ( )		866215	0					
ANR	867702	CallExpression	info . windowClassName ( )		866215	0					
ANR	867703	Callee	info . windowClassName		866215	0					
ANR	867704	MemberAccess	info . windowClassName		866215	0					
ANR	867705	Identifier	info		866215	0					
ANR	867706	Identifier	windowClassName		866215	1					
ANR	867707	ArgumentList			866215	1					
ANR	867708	IfStatement	"if ( info . name ( ) . startsWith ( term , Qt :: CaseInsensitive ) || className . startsWith ( term , Qt :: CaseInsensitive ) )"		866215	5					
ANR	867709	Condition	"info . name ( ) . startsWith ( term , Qt :: CaseInsensitive ) || className . startsWith ( term , Qt :: CaseInsensitive )"	287:12:13875:13986	866215	0	True				
ANR	867710	OrExpression	"info . name ( ) . startsWith ( term , Qt :: CaseInsensitive ) || className . startsWith ( term , Qt :: CaseInsensitive )"		866215	0		||			
ANR	867711	CallExpression	"info . name ( ) . startsWith ( term , Qt :: CaseInsensitive )"		866215	0					
ANR	867712	Callee	info . name ( ) . startsWith		866215	0					
ANR	867713	MemberAccess	info . name ( ) . startsWith		866215	0					
ANR	867714	CallExpression	info . name ( )		866215	0					
ANR	867715	Callee	info . name		866215	0					
ANR	867716	MemberAccess	info . name		866215	0					
ANR	867717	Identifier	info		866215	0					
ANR	867718	Identifier	name		866215	1					
ANR	867719	ArgumentList			866215	1					
ANR	867720	Identifier	startsWith		866215	1					
ANR	867721	ArgumentList	term		866215	1					
ANR	867722	Argument	term		866215	0					
ANR	867723	Identifier	term		866215	0					
ANR	867724	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867725	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867726	CallExpression	"className . startsWith ( term , Qt :: CaseInsensitive )"		866215	1					
ANR	867727	Callee	className . startsWith		866215	0					
ANR	867728	MemberAccess	className . startsWith		866215	0					
ANR	867729	Identifier	className		866215	0					
ANR	867730	Identifier	startsWith		866215	1					
ANR	867731	ArgumentList	term		866215	1					
ANR	867732	Argument	term		866215	0					
ANR	867733	Identifier	term		866215	0					
ANR	867734	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867735	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867736	CompoundStatement		162:61:8161:8161	866215	1					
ANR	867737	ExpressionStatement	"matches << windowMatch ( info , action , 0.8 , Plasma :: QueryMatch :: ExactMatch )"	289:12:14003:14076	866215	0	True				
ANR	867738	ShiftExpression	"matches << windowMatch ( info , action , 0.8 , Plasma :: QueryMatch :: ExactMatch )"		866215	0		<<			
ANR	867739	Identifier	matches		866215	0					
ANR	867740	CallExpression	"windowMatch ( info , action , 0.8 , Plasma :: QueryMatch :: ExactMatch )"		866215	1					
ANR	867741	Callee	windowMatch		866215	0					
ANR	867742	Identifier	windowMatch		866215	0					
ANR	867743	ArgumentList	info		866215	1					
ANR	867744	Argument	info		866215	0					
ANR	867745	Identifier	info		866215	0					
ANR	867746	Argument	action		866215	1					
ANR	867747	Identifier	action		866215	0					
ANR	867748	Argument	0.8		866215	2					
ANR	867749	PrimaryExpression	0.8		866215	0					
ANR	867750	Argument	Plasma :: QueryMatch :: ExactMatch		866215	3					
ANR	867751	Identifier	Plasma :: QueryMatch :: ExactMatch		866215	0					
ANR	867752	ElseStatement	else		866215	0					
ANR	867753	IfStatement	"if ( ( info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive ) ) && actionSupported ( info , action ) )"		866215	0					
ANR	867754	Condition	"( info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive ) ) && actionSupported ( info , action )"	290:19:14097:14253	866215	0	True				
ANR	867755	AndExpression	"( info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive ) ) && actionSupported ( info , action )"		866215	0		&&			
ANR	867756	OrExpression	"info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive )"		866215	0		||			
ANR	867757	CallExpression	"info . name ( ) . contains ( term , Qt :: CaseInsensitive )"		866215	0					
ANR	867758	Callee	info . name ( ) . contains		866215	0					
ANR	867759	MemberAccess	info . name ( ) . contains		866215	0					
ANR	867760	CallExpression	info . name ( )		866215	0					
ANR	867761	Callee	info . name		866215	0					
ANR	867762	MemberAccess	info . name		866215	0					
ANR	867763	Identifier	info		866215	0					
ANR	867764	Identifier	name		866215	1					
ANR	867765	ArgumentList			866215	1					
ANR	867766	Identifier	contains		866215	1					
ANR	867767	ArgumentList	term		866215	1					
ANR	867768	Argument	term		866215	0					
ANR	867769	Identifier	term		866215	0					
ANR	867770	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867771	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867772	CallExpression	"className . contains ( term , Qt :: CaseInsensitive )"		866215	1					
ANR	867773	Callee	className . contains		866215	0					
ANR	867774	MemberAccess	className . contains		866215	0					
ANR	867775	Identifier	className		866215	0					
ANR	867776	Identifier	contains		866215	1					
ANR	867777	ArgumentList	term		866215	1					
ANR	867778	Argument	term		866215	0					
ANR	867779	Identifier	term		866215	0					
ANR	867780	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867781	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867782	CallExpression	"actionSupported ( info , action )"		866215	1					
ANR	867783	Callee	actionSupported		866215	0					
ANR	867784	Identifier	actionSupported		866215	0					
ANR	867785	ArgumentList	info		866215	1					
ANR	867786	Argument	info		866215	0					
ANR	867787	Identifier	info		866215	0					
ANR	867788	Argument	action		866215	1					
ANR	867789	Identifier	action		866215	0					
ANR	867790	CompoundStatement		166:43:8428:8428	866215	1					
ANR	867791	ExpressionStatement	"matches << windowMatch ( info , action , 0.7 , Plasma :: QueryMatch :: PossibleMatch )"	293:12:14270:14346	866215	0	True				
ANR	867792	ShiftExpression	"matches << windowMatch ( info , action , 0.7 , Plasma :: QueryMatch :: PossibleMatch )"		866215	0		<<			
ANR	867793	Identifier	matches		866215	0					
ANR	867794	CallExpression	"windowMatch ( info , action , 0.7 , Plasma :: QueryMatch :: PossibleMatch )"		866215	1					
ANR	867795	Callee	windowMatch		866215	0					
ANR	867796	Identifier	windowMatch		866215	0					
ANR	867797	ArgumentList	info		866215	1					
ANR	867798	Argument	info		866215	0					
ANR	867799	Identifier	info		866215	0					
ANR	867800	Argument	action		866215	1					
ANR	867801	Identifier	action		866215	0					
ANR	867802	Argument	0.7		866215	2					
ANR	867803	PrimaryExpression	0.7		866215	0					
ANR	867804	Argument	Plasma :: QueryMatch :: PossibleMatch		866215	3					
ANR	867805	Identifier	Plasma :: QueryMatch :: PossibleMatch		866215	0					
ANR	867806	Statement	foreach	298:4:14412:14418	866215	12	True				
ANR	867807	Statement	(	298:12:14420:14420	866215	13	True				
ANR	867808	Statement	const	298:13:14421:14425	866215	14	True				
ANR	867809	Statement	QString	298:19:14427:14433	866215	15	True				
ANR	867810	Statement	&	298:26:14434:14434	866215	16	True				
ANR	867811	Statement	desktopName	298:28:14436:14446	866215	17	True				
ANR	867812	Statement	","	298:39:14447:14447	866215	18	True				
ANR	867813	Statement	m_desktopNames	298:41:14449:14462	866215	19	True				
ANR	867814	Statement	)	298:55:14463:14463	866215	20	True				
ANR	867815	CompoundStatement		173:8:8647:8699	866215	21					
ANR	867816	IdentifierDeclStatement	int desktop = m_desktopNames . indexOf ( desktopName ) + 1 ;	299:8:14475:14527	866215	0	True				
ANR	867817	IdentifierDecl	desktop = m_desktopNames . indexOf ( desktopName ) + 1		866215	0					
ANR	867818	IdentifierDeclType	int		866215	0					
ANR	867819	Identifier	desktop		866215	1					
ANR	867820	AssignmentExpression	desktop = m_desktopNames . indexOf ( desktopName ) + 1		866215	2		=			
ANR	867821	Identifier	desktop		866215	0					
ANR	867822	AdditiveExpression	m_desktopNames . indexOf ( desktopName ) + 1		866215	1		+			
ANR	867823	CallExpression	m_desktopNames . indexOf ( desktopName )		866215	0					
ANR	867824	Callee	m_desktopNames . indexOf		866215	0					
ANR	867825	MemberAccess	m_desktopNames . indexOf		866215	0					
ANR	867826	Identifier	m_desktopNames		866215	0					
ANR	867827	Identifier	indexOf		866215	1					
ANR	867828	ArgumentList	desktopName		866215	1					
ANR	867829	Argument	desktopName		866215	0					
ANR	867830	Identifier	desktopName		866215	0					
ANR	867831	PrimaryExpression	1		866215	1					
ANR	867832	IfStatement	"if ( desktopName . contains ( term , Qt :: CaseInsensitive ) )"		866215	1					
ANR	867833	Condition	"desktopName . contains ( term , Qt :: CaseInsensitive )"	300:12:14541:14587	866215	0	True				
ANR	867834	CallExpression	"desktopName . contains ( term , Qt :: CaseInsensitive )"		866215	0					
ANR	867835	Callee	desktopName . contains		866215	0					
ANR	867836	MemberAccess	desktopName . contains		866215	0					
ANR	867837	Identifier	desktopName		866215	0					
ANR	867838	Identifier	contains		866215	1					
ANR	867839	ArgumentList	term		866215	1					
ANR	867840	Argument	term		866215	0					
ANR	867841	Identifier	term		866215	0					
ANR	867842	Argument	Qt :: CaseInsensitive		866215	1					
ANR	867843	Identifier	Qt :: CaseInsensitive		866215	0					
ANR	867844	CompoundStatement		182:12:9152:9197	866215	1					
ANR	867845	IfStatement	if ( ! desktopAdded && desktop != KWindowSystem :: currentDesktop ( ) )		866215	0					
ANR	867846	Condition	! desktopAdded && desktop != KWindowSystem :: currentDesktop ( )	303:16:14756:14814	866215	0	True				
ANR	867847	AndExpression	! desktopAdded && desktop != KWindowSystem :: currentDesktop ( )		866215	0		&&			
ANR	867848	UnaryOperationExpression	! desktopAdded		866215	0					
ANR	867849	UnaryOperator	!		866215	0					
ANR	867850	Identifier	desktopAdded		866215	1					
ANR	867851	EqualityExpression	desktop != KWindowSystem :: currentDesktop ( )		866215	1		!=			
ANR	867852	Identifier	desktop		866215	0					
ANR	867853	CallExpression	KWindowSystem :: currentDesktop ( )		866215	1					
ANR	867854	Callee	KWindowSystem :: currentDesktop		866215	0					
ANR	867855	Identifier	KWindowSystem :: currentDesktop		866215	0					
ANR	867856	ArgumentList			866215	1					
ANR	867857	CompoundStatement		177:77:8989:8989	866215	1					
ANR	867858	ExpressionStatement	"matches << desktopMatch ( desktop , 0.8 )"	304:16:14835:14872	866215	0	True				
ANR	867859	ShiftExpression	"matches << desktopMatch ( desktop , 0.8 )"		866215	0		<<			
ANR	867860	Identifier	matches		866215	0					
ANR	867861	CallExpression	"desktopMatch ( desktop , 0.8 )"		866215	1					
ANR	867862	Callee	desktopMatch		866215	0					
ANR	867863	Identifier	desktopMatch		866215	0					
ANR	867864	ArgumentList	desktop		866215	1					
ANR	867865	Argument	desktop		866215	0					
ANR	867866	Identifier	desktop		866215	0					
ANR	867867	Argument	0.8		866215	1					
ANR	867868	PrimaryExpression	0.8		866215	0					
ANR	867869	IdentifierDeclStatement	"QHashIterator < WId , KWindowInfo > it ( m_windows ) ;"	308:12:14980:15025	866215	1	True				
ANR	867870	IdentifierDecl	it ( m_windows )		866215	0					
ANR	867871	IdentifierDeclType	"QHashIterator < WId , KWindowInfo >"		866215	0					
ANR	867872	Identifier	it		866215	1					
ANR	867873	Identifier	m_windows		866215	2					
ANR	867874	WhileStatement	while ( it . hasNext ( ) )		866215	2					
ANR	867875	Condition	it . hasNext ( )	309:19:15046:15057	866215	0	True				
ANR	867876	CallExpression	it . hasNext ( )		866215	0					
ANR	867877	Callee	it . hasNext		866215	0					
ANR	867878	MemberAccess	it . hasNext		866215	0					
ANR	867879	Identifier	it		866215	0					
ANR	867880	Identifier	hasNext		866215	1					
ANR	867881	ArgumentList			866215	1					
ANR	867882	CompoundStatement		185:16:9277:9306	866215	1					
ANR	867883	ExpressionStatement	it . next ( )	310:16:15078:15087	866215	0	True				
ANR	867884	CallExpression	it . next ( )		866215	0					
ANR	867885	Callee	it . next		866215	0					
ANR	867886	MemberAccess	it . next		866215	0					
ANR	867887	Identifier	it		866215	0					
ANR	867888	Identifier	next		866215	1					
ANR	867889	ArgumentList			866215	1					
ANR	867890	IdentifierDeclStatement	KWindowInfo info = it . value ( ) ;	311:16:15105:15134	866215	1	True				
ANR	867891	IdentifierDecl	info = it . value ( )		866215	0					
ANR	867892	IdentifierDeclType	KWindowInfo		866215	0					
ANR	867893	Identifier	info		866215	1					
ANR	867894	AssignmentExpression	info = it . value ( )		866215	2		=			
ANR	867895	Identifier	info		866215	0					
ANR	867896	CallExpression	it . value ( )		866215	1					
ANR	867897	Callee	it . value		866215	0					
ANR	867898	MemberAccess	it . value		866215	0					
ANR	867899	Identifier	it		866215	0					
ANR	867900	Identifier	value		866215	1					
ANR	867901	ArgumentList			866215	1					
ANR	867902	IfStatement	"if ( info . isOnDesktop ( desktop ) && actionSupported ( info , action ) )"		866215	2					
ANR	867903	Condition	"info . isOnDesktop ( desktop ) && actionSupported ( info , action )"	312:20:15156:15213	866215	0	True				
ANR	867904	AndExpression	"info . isOnDesktop ( desktop ) && actionSupported ( info , action )"		866215	0		&&			
ANR	867905	CallExpression	info . isOnDesktop ( desktop )		866215	0					
ANR	867906	Callee	info . isOnDesktop		866215	0					
ANR	867907	MemberAccess	info . isOnDesktop		866215	0					
ANR	867908	Identifier	info		866215	0					
ANR	867909	Identifier	isOnDesktop		866215	1					
ANR	867910	ArgumentList	desktop		866215	1					
ANR	867911	Argument	desktop		866215	0					
ANR	867912	Identifier	desktop		866215	0					
ANR	867913	CallExpression	"actionSupported ( info , action )"		866215	1					
ANR	867914	Callee	actionSupported		866215	0					
ANR	867915	Identifier	actionSupported		866215	0					
ANR	867916	ArgumentList	info		866215	1					
ANR	867917	Argument	info		866215	0					
ANR	867918	Identifier	info		866215	0					
ANR	867919	Argument	action		866215	1					
ANR	867920	Identifier	action		866215	0					
ANR	867921	CompoundStatement		186:80:9388:9388	866215	1					
ANR	867922	ExpressionStatement	"matches << windowMatch ( info , action , 0.5 , Plasma :: QueryMatch :: PossibleMatch )"	313:20:15238:15314	866215	0	True				
ANR	867923	ShiftExpression	"matches << windowMatch ( info , action , 0.5 , Plasma :: QueryMatch :: PossibleMatch )"		866215	0		<<			
ANR	867924	Identifier	matches		866215	0					
ANR	867925	CallExpression	"windowMatch ( info , action , 0.5 , Plasma :: QueryMatch :: PossibleMatch )"		866215	1					
ANR	867926	Callee	windowMatch		866215	0					
ANR	867927	Identifier	windowMatch		866215	0					
ANR	867928	ArgumentList	info		866215	1					
ANR	867929	Argument	info		866215	0					
ANR	867930	Identifier	info		866215	0					
ANR	867931	Argument	action		866215	1					
ANR	867932	Identifier	action		866215	0					
ANR	867933	Argument	0.5		866215	2					
ANR	867934	PrimaryExpression	0.5		866215	0					
ANR	867935	Argument	Plasma :: QueryMatch :: PossibleMatch		866215	3					
ANR	867936	Identifier	Plasma :: QueryMatch :: PossibleMatch		866215	0					
ANR	867937	IfStatement	if ( ! matches . isEmpty ( ) )		866215	22					
ANR	867938	Condition	! matches . isEmpty ( )	319:8:15373:15390	866215	0	True				
ANR	867939	UnaryOperationExpression	! matches . isEmpty ( )		866215	0					
ANR	867940	UnaryOperator	!		866215	0					
ANR	867941	CallExpression	matches . isEmpty ( )		866215	1					
ANR	867942	Callee	matches . isEmpty		866215	0					
ANR	867943	MemberAccess	matches . isEmpty		866215	0					
ANR	867944	Identifier	matches		866215	0					
ANR	867945	Identifier	isEmpty		866215	1					
ANR	867946	ArgumentList			866215	1					
ANR	867947	CompoundStatement		193:28:9565:9565	866215	1					
ANR	867948	ExpressionStatement	context . addMatches ( matches )	320:8:15403:15430	866215	0	True				
ANR	867949	CallExpression	context . addMatches ( matches )		866215	0					
ANR	867950	Callee	context . addMatches		866215	0					
ANR	867951	MemberAccess	context . addMatches		866215	0					
ANR	867952	Identifier	context		866215	0					
ANR	867953	Identifier	addMatches		866215	1					
ANR	867954	ArgumentList	matches		866215	1					
ANR	867955	Argument	matches		866215	0					
ANR	867956	Identifier	matches		866215	0					
ANR	867957	ReturnType	void		866215	1					
ANR	867958	Identifier	WindowsRunner :: match		866215	2					
ANR	867959	ParameterList	Plasma :: RunnerContext & context		866215	3					
ANR	867960	Parameter	Plasma :: RunnerContext & context	126:26:5795:5824	866215	0	True				
ANR	867961	ParameterType	Plasma :: RunnerContext &		866215	0					
ANR	867962	Identifier	context		866215	1					
ANR	867963	CFGEntryNode	ENTRY		866215		True				
ANR	867964	CFGExitNode	EXIT		866215		True				
ANR	867965	CFGErrorNode	ERROR		866215		True				
ANR	867966	Symbol	windowRole . isEmpty		866215						
ANR	867967	Symbol	windowClass . isEmpty		866215						
ANR	867968	Symbol	keywords		866215						
ANR	867969	Symbol	className . startsWith		866215						
ANR	867970	Symbol	windowRole		866215						
ANR	867971	Symbol	matches . isEmpty		866215						
ANR	867972	Symbol	KWindowSystem :: currentDesktop		866215						
ANR	867973	Symbol	& ok		866215						
ANR	867974	Symbol	Plasma :: QueryMatch :: ExactMatch		866215						
ANR	867975	Symbol	keyword . split		866215						
ANR	867976	Symbol	keywords [ 0 ] . length		866215						
ANR	867977	Symbol	Qt :: CaseInsensitive		866215						
ANR	867978	Symbol	locker		866215						
ANR	867979	Symbol	parts . size		866215						
ANR	867980	Symbol	KeepAboveAction		866215						
ANR	867981	Symbol	info . isOnDesktop		866215						
ANR	867982	Symbol	info . name		866215						
ANR	867983	Symbol	desktopName . contains		866215						
ANR	867984	Symbol	QString :: fromUtf8		866215						
ANR	867985	Symbol	info . windowClassName		866215						
ANR	867986	Symbol	context		866215						
ANR	867987	Symbol	isInt		866215						
ANR	867988	Symbol	action		866215						
ANR	867989	Symbol	windowName		866215						
ANR	867990	Symbol	keyword		866215						
ANR	867991	Symbol	KWindowSystem :: hasWId		866215						
ANR	867992	Symbol	info		866215						
ANR	867993	Symbol	it . hasNext		866215						
ANR	867994	Symbol	test		866215						
ANR	867995	Symbol	term . length		866215						
ANR	867996	Symbol	* keyword		866215						
ANR	867997	Symbol	m_desktopNames		866215						
ANR	867998	Symbol	* keywords		866215						
ANR	867999	Symbol	ActivateAction		866215						
ANR	868000	Symbol	it		866215						
ANR	868001	Symbol	matches		866215						
ANR	868002	Symbol	& isInt		866215						
ANR	868003	Symbol	MinimizeAction		866215						
ANR	868004	Symbol	desktopAdded		866215						
ANR	868005	Symbol	keyword . contains		866215						
ANR	868006	Symbol	windowClassCompare . contains		866215						
ANR	868007	Symbol	keyword . endsWith		866215						
ANR	868008	Symbol	parts [ 0 ] . length		866215						
ANR	868009	Symbol	className . contains		866215						
ANR	868010	Symbol	term . lastIndexOf		866215						
ANR	868011	Symbol	Plasma :: QueryMatch :: PossibleMatch		866215						
ANR	868012	Symbol	actionSupported		866215						
ANR	868013	Symbol	parts		866215						
ANR	868014	Symbol	true		866215						
ANR	868015	Symbol	QStringLiteral		866215						
ANR	868016	Symbol	FullscreenAction		866215						
ANR	868017	Symbol	info . windowRole		866215						
ANR	868018	Symbol	CloseAction		866215						
ANR	868019	Symbol	MaximizeAction		866215						
ANR	868020	Symbol	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt		866215						
ANR	868021	Symbol	info . name ( ) . startsWith		866215						
ANR	868022	Symbol	term . midRef		866215						
ANR	868023	Symbol	m_ready		866215						
ANR	868024	Symbol	KWindowSystem :: numberOfDesktops		866215						
ANR	868025	Symbol	term . startsWith		866215						
ANR	868026	Symbol	keyword . startsWith		866215						
ANR	868027	Symbol	windowName . isEmpty		866215						
ANR	868028	Symbol	className		866215						
ANR	868029	Symbol	term . split		866215						
ANR	868030	Symbol	info . name ( ) . contains		866215						
ANR	868031	Symbol	m_desktopNames . indexOf		866215						
ANR	868032	Symbol	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		866215						
ANR	868033	Symbol	* parts		866215						
ANR	868034	Symbol	desktop		866215						
ANR	868035	Symbol	context . singleRunnerQueryMode		866215						
ANR	868036	Symbol	it . key		866215						
ANR	868037	Symbol	term		866215						
ANR	868038	Symbol	i18nc		866215						
ANR	868039	Symbol	ok		866215						
ANR	868040	Symbol	term . left		866215						
ANR	868041	Symbol	windowClassCompare		866215						
ANR	868042	Symbol	KeepBelowAction		866215						
ANR	868043	Symbol	term . endsWith		866215						
ANR	868044	Symbol	term . mid		866215						
ANR	868045	Symbol	it . value		866215						
ANR	868046	Symbol	* keyword . split		866215						
ANR	868047	Symbol	false		866215						
ANR	868048	Symbol	i		866215						
ANR	868049	Symbol	ShadeAction		866215						
ANR	868050	Symbol	info . windowClassClass		866215						
ANR	868051	Symbol	context . query		866215						
ANR	868052	Symbol	desktopName		866215						
ANR	868053	Symbol	w		866215						
ANR	868054	Symbol	windowClass		866215						
ANR	868055	Symbol	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt"		866215						
ANR	868056	Function	WindowsRunner :: run	325:0:15470:17729							
ANR	868057	FunctionDef	"WindowsRunner :: run (const Plasma :: RunnerContext & context , const Plasma :: QueryMatch & match)"		868056	0					
ANR	868058	CompoundStatement		326:0:15565:17729	868056	0					
ANR	868059	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	327:4:15571:15600	868056	0	True				
ANR	868060	IdentifierDecl	locker ( & m_mutex )		868056	0					
ANR	868061	IdentifierDeclType	QMutexLocker		868056	0					
ANR	868062	Identifier	locker		868056	1					
ANR	868063	UnaryOperationExpression	& m_mutex		868056	2					
ANR	868064	UnaryOperator	&		868056	0					
ANR	868065	Identifier	m_mutex		868056	1					
ANR	868066	Statement	Q_UNUSED	328:4:15606:15613	868056	1	True				
ANR	868067	Statement	(	328:12:15614:15614	868056	2	True				
ANR	868068	Statement	context	328:13:15615:15621	868056	3	True				
ANR	868069	Statement	)	328:20:15622:15622	868056	4	True				
ANR	868070	IfStatement	"if ( match . id ( ) . startsWith ( QLatin1String ( ""windows_desktop"" ) ) )"		868056	5					
ANR	868071	Condition	"match . id ( ) . startsWith ( QLatin1String ( ""windows_desktop"" ) )"	330:8:15663:15717	868056	0	True				
ANR	868072	CallExpression	"match . id ( ) . startsWith ( QLatin1String ( ""windows_desktop"" ) )"		868056	0					
ANR	868073	Callee	match . id ( ) . startsWith		868056	0					
ANR	868074	MemberAccess	match . id ( ) . startsWith		868056	0					
ANR	868075	CallExpression	match . id ( )		868056	0					
ANR	868076	Callee	match . id		868056	0					
ANR	868077	MemberAccess	match . id		868056	0					
ANR	868078	Identifier	match		868056	0					
ANR	868079	Identifier	id		868056	1					
ANR	868080	ArgumentList			868056	1					
ANR	868081	Identifier	startsWith		868056	1					
ANR	868082	ArgumentList	"QLatin1String ( ""windows_desktop"" )"		868056	1					
ANR	868083	Argument	"QLatin1String ( ""windows_desktop"" )"		868056	0					
ANR	868084	CallExpression	"QLatin1String ( ""windows_desktop"" )"		868056	0					
ANR	868085	Callee	QLatin1String		868056	0					
ANR	868086	Identifier	QLatin1String		868056	0					
ANR	868087	ArgumentList	"""windows_desktop"""		868056	1					
ANR	868088	Argument	"""windows_desktop"""		868056	0					
ANR	868089	PrimaryExpression	"""windows_desktop"""		868056	0					
ANR	868090	CompoundStatement		5:65:154:154	868056	1					
ANR	868091	ExpressionStatement	KWindowSystem :: setCurrentDesktop ( match . data ( ) . toInt ( ) )	331:8:15730:15784	868056	0	True				
ANR	868092	CallExpression	KWindowSystem :: setCurrentDesktop ( match . data ( ) . toInt ( ) )		868056	0					
ANR	868093	Callee	KWindowSystem :: setCurrentDesktop		868056	0					
ANR	868094	Identifier	KWindowSystem :: setCurrentDesktop		868056	0					
ANR	868095	ArgumentList	match . data ( ) . toInt ( )		868056	1					
ANR	868096	Argument	match . data ( ) . toInt ( )		868056	0					
ANR	868097	CallExpression	match . data ( ) . toInt ( )		868056	0					
ANR	868098	Callee	match . data ( ) . toInt		868056	0					
ANR	868099	MemberAccess	match . data ( ) . toInt		868056	0					
ANR	868100	CallExpression	match . data ( )		868056	0					
ANR	868101	Callee	match . data		868056	0					
ANR	868102	MemberAccess	match . data		868056	0					
ANR	868103	Identifier	match		868056	0					
ANR	868104	Identifier	data		868056	1					
ANR	868105	ArgumentList			868056	1					
ANR	868106	Identifier	toInt		868056	1					
ANR	868107	ArgumentList			868056	1					
ANR	868108	ReturnStatement	return ;	332:8:15794:15800	868056	1	True				
ANR	868109	IdentifierDeclStatement	"const QStringList parts = match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) ) ;"	335:4:15813:15889	868056	6	True				
ANR	868110	IdentifierDecl	"parts = match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) )"		868056	0					
ANR	868111	IdentifierDeclType	const QStringList		868056	0					
ANR	868112	Identifier	parts		868056	1					
ANR	868113	AssignmentExpression	"parts = match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) )"		868056	2		=			
ANR	868114	Identifier	parts		868056	0					
ANR	868115	CallExpression	"match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) )"		868056	1					
ANR	868116	Callee	match . data ( ) . toString ( ) . split		868056	0					
ANR	868117	MemberAccess	match . data ( ) . toString ( ) . split		868056	0					
ANR	868118	CallExpression	match . data ( ) . toString ( )		868056	0					
ANR	868119	Callee	match . data ( ) . toString		868056	0					
ANR	868120	MemberAccess	match . data ( ) . toString		868056	0					
ANR	868121	CallExpression	match . data ( )		868056	0					
ANR	868122	Callee	match . data		868056	0					
ANR	868123	MemberAccess	match . data		868056	0					
ANR	868124	Identifier	match		868056	0					
ANR	868125	Identifier	data		868056	1					
ANR	868126	ArgumentList			868056	1					
ANR	868127	Identifier	toString		868056	1					
ANR	868128	ArgumentList			868056	1					
ANR	868129	Identifier	split		868056	1					
ANR	868130	ArgumentList	"QStringLiteral ( ""_"" )"		868056	1					
ANR	868131	Argument	"QStringLiteral ( ""_"" )"		868056	0					
ANR	868132	CallExpression	"QStringLiteral ( ""_"" )"		868056	0					
ANR	868133	Callee	QStringLiteral		868056	0					
ANR	868134	Identifier	QStringLiteral		868056	0					
ANR	868135	ArgumentList	"""_"""		868056	1					
ANR	868136	Argument	"""_"""		868056	0					
ANR	868137	PrimaryExpression	"""_"""		868056	0					
ANR	868138	IdentifierDeclStatement	WindowAction action = WindowAction ( parts [ 0 ] . toInt ( ) ) ;	336:4:15895:15947	868056	7	True				
ANR	868139	IdentifierDecl	action = WindowAction ( parts [ 0 ] . toInt ( ) )		868056	0					
ANR	868140	IdentifierDeclType	WindowAction		868056	0					
ANR	868141	Identifier	action		868056	1					
ANR	868142	AssignmentExpression	action = WindowAction ( parts [ 0 ] . toInt ( ) )		868056	2		=			
ANR	868143	Identifier	action		868056	0					
ANR	868144	CallExpression	WindowAction ( parts [ 0 ] . toInt ( ) )		868056	1					
ANR	868145	Callee	WindowAction		868056	0					
ANR	868146	Identifier	WindowAction		868056	0					
ANR	868147	ArgumentList	parts [ 0 ] . toInt ( )		868056	1					
ANR	868148	Argument	parts [ 0 ] . toInt ( )		868056	0					
ANR	868149	CallExpression	parts [ 0 ] . toInt ( )		868056	0					
ANR	868150	Callee	parts [ 0 ] . toInt		868056	0					
ANR	868151	MemberAccess	parts [ 0 ] . toInt		868056	0					
ANR	868152	ArrayIndexing	parts [ 0 ]		868056	0					
ANR	868153	Identifier	parts		868056	0					
ANR	868154	PrimaryExpression	0		868056	1					
ANR	868155	Identifier	toInt		868056	1					
ANR	868156	ArgumentList			868056	1					
ANR	868157	IdentifierDeclStatement	WId w ( parts [ 1 ] . toULong ( ) ) ;	337:4:15953:15978	868056	8	True				
ANR	868158	IdentifierDecl	w ( parts [ 1 ] . toULong ( ) )		868056	0					
ANR	868159	IdentifierDeclType	WId		868056	0					
ANR	868160	Identifier	w		868056	1					
ANR	868161	CallExpression	parts [ 1 ] . toULong ( )		868056	2					
ANR	868162	Callee	parts [ 1 ] . toULong		868056	0					
ANR	868163	MemberAccess	parts [ 1 ] . toULong		868056	0					
ANR	868164	ArrayIndexing	parts [ 1 ]		868056	0					
ANR	868165	Identifier	parts		868056	0					
ANR	868166	PrimaryExpression	1		868056	1					
ANR	868167	Identifier	toULong		868056	1					
ANR	868168	ArgumentList			868056	1					
ANR	868169	IdentifierDeclStatement	"QHash < WId , KWindowInfo > :: iterator i = m_windows . find ( w ) ;"	339:4:16066:16121	868056	9	True				
ANR	868170	IdentifierDecl	i = m_windows . find ( w )		868056	0					
ANR	868171	IdentifierDeclType	"QHash < WId , KWindowInfo > :: iterator"		868056	0					
ANR	868172	Identifier	i		868056	1					
ANR	868173	AssignmentExpression	i = m_windows . find ( w )		868056	2		=			
ANR	868174	Identifier	i		868056	0					
ANR	868175	CallExpression	m_windows . find ( w )		868056	1					
ANR	868176	Callee	m_windows . find		868056	0					
ANR	868177	MemberAccess	m_windows . find		868056	0					
ANR	868178	Identifier	m_windows		868056	0					
ANR	868179	Identifier	find		868056	1					
ANR	868180	ArgumentList	w		868056	1					
ANR	868181	Argument	w		868056	0					
ANR	868182	Identifier	w		868056	0					
ANR	868183	IdentifierDeclStatement	KWindowInfo info = i . value ( ) ;	340:4:16127:16155	868056	10	True				
ANR	868184	IdentifierDecl	info = i . value ( )		868056	0					
ANR	868185	IdentifierDeclType	KWindowInfo		868056	0					
ANR	868186	Identifier	info		868056	1					
ANR	868187	AssignmentExpression	info = i . value ( )		868056	2		=			
ANR	868188	Identifier	info		868056	0					
ANR	868189	CallExpression	i . value ( )		868056	1					
ANR	868190	Callee	i . value		868056	0					
ANR	868191	MemberAccess	i . value		868056	0					
ANR	868192	Identifier	i		868056	0					
ANR	868193	Identifier	value		868056	1					
ANR	868194	ArgumentList			868056	1					
ANR	868195	SwitchStatement	switch ( action )		868056	11					
ANR	868196	Condition	action	341:12:16169:16174	868056	0	True				
ANR	868197	Identifier	action		868056	0					
ANR	868198	CompoundStatement		16:20:611:611	868056	1					
ANR	868199	Label	case ActivateAction :	342:4:16183:16202	868056	0	True				
ANR	868200	Identifier	ActivateAction		868056	0					
ANR	868201	ExpressionStatement	KWindowSystem :: forceActiveWindow ( w )	343:8:16212:16247	868056	1	True				
ANR	868202	CallExpression	KWindowSystem :: forceActiveWindow ( w )		868056	0					
ANR	868203	Callee	KWindowSystem :: forceActiveWindow		868056	0					
ANR	868204	Identifier	KWindowSystem :: forceActiveWindow		868056	0					
ANR	868205	ArgumentList	w		868056	1					
ANR	868206	Argument	w		868056	0					
ANR	868207	Identifier	w		868056	0					
ANR	868208	BreakStatement	break ;	344:8:16257:16262	868056	2	True				
ANR	868209	Label	case CloseAction :	345:4:16268:16284	868056	3	True				
ANR	868210	Identifier	CloseAction		868056	0					
ANR	868211	CompoundStatement		22:8:738:794	868056	4					
ANR	868212	IdentifierDeclStatement	"NETRootInfo ri ( QX11Info :: connection ( ) , NET :: CloseWindow ) ;"	347:8:16304:16360	868056	0	True				
ANR	868213	IdentifierDecl	"ri ( QX11Info :: connection ( ) , NET :: CloseWindow )"		868056	0					
ANR	868214	IdentifierDeclType	NETRootInfo		868056	0					
ANR	868215	Identifier	ri		868056	1					
ANR	868216	Expression	"QX11Info :: connection ( ) , NET :: CloseWindow"		868056	2					
ANR	868217	CallExpression	QX11Info :: connection ( )		868056	0					
ANR	868218	Callee	QX11Info :: connection		868056	0					
ANR	868219	Identifier	QX11Info :: connection		868056	0					
ANR	868220	ArgumentList			868056	1					
ANR	868221	Identifier	NET :: CloseWindow		868056	1					
ANR	868222	ExpressionStatement	ri . closeWindowRequest ( w )	348:8:16370:16394	868056	1	True				
ANR	868223	CallExpression	ri . closeWindowRequest ( w )		868056	0					
ANR	868224	Callee	ri . closeWindowRequest		868056	0					
ANR	868225	MemberAccess	ri . closeWindowRequest		868056	0					
ANR	868226	Identifier	ri		868056	0					
ANR	868227	Identifier	closeWindowRequest		868056	1					
ANR	868228	ArgumentList	w		868056	1					
ANR	868229	Argument	w		868056	0					
ANR	868230	Identifier	w		868056	0					
ANR	868231	BreakStatement	break ;	349:8:16404:16409	868056	2	True				
ANR	868232	Label	case MinimizeAction :	351:4:16425:16444	868056	5	True				
ANR	868233	Identifier	MinimizeAction		868056	0					
ANR	868234	IfStatement	if ( info . isMinimized ( ) )		868056	6					
ANR	868235	Condition	info . isMinimized ( )	352:12:16458:16475	868056	0	True				
ANR	868236	CallExpression	info . isMinimized ( )		868056	0					
ANR	868237	Callee	info . isMinimized		868056	0					
ANR	868238	MemberAccess	info . isMinimized		868056	0					
ANR	868239	Identifier	info		868056	0					
ANR	868240	Identifier	isMinimized		868056	1					
ANR	868241	ArgumentList			868056	1					
ANR	868242	CompoundStatement		27:32:912:912	868056	1					
ANR	868243	ExpressionStatement	KWindowSystem :: unminimizeWindow ( w )	353:12:16492:16526	868056	0	True				
ANR	868244	CallExpression	KWindowSystem :: unminimizeWindow ( w )		868056	0					
ANR	868245	Callee	KWindowSystem :: unminimizeWindow		868056	0					
ANR	868246	Identifier	KWindowSystem :: unminimizeWindow		868056	0					
ANR	868247	ArgumentList	w		868056	1					
ANR	868248	Argument	w		868056	0					
ANR	868249	Identifier	w		868056	0					
ANR	868250	ElseStatement	else		868056	0					
ANR	868251	CompoundStatement		29:15:977:977	868056	0					
ANR	868252	ExpressionStatement	KWindowSystem :: minimizeWindow ( w )	355:12:16557:16589	868056	0	True				
ANR	868253	CallExpression	KWindowSystem :: minimizeWindow ( w )		868056	0					
ANR	868254	Callee	KWindowSystem :: minimizeWindow		868056	0					
ANR	868255	Identifier	KWindowSystem :: minimizeWindow		868056	0					
ANR	868256	ArgumentList	w		868056	1					
ANR	868257	Argument	w		868056	0					
ANR	868258	Identifier	w		868056	0					
ANR	868259	BreakStatement	break ;	357:8:16609:16614	868056	7	True				
ANR	868260	Label	case MaximizeAction :	358:4:16620:16639	868056	8	True				
ANR	868261	Identifier	MaximizeAction		868056	0					
ANR	868262	IfStatement	if ( info . hasState ( NET :: Max ) )		868056	9					
ANR	868263	Condition	info . hasState ( NET :: Max )	359:12:16653:16675	868056	0	True				
ANR	868264	CallExpression	info . hasState ( NET :: Max )		868056	0					
ANR	868265	Callee	info . hasState		868056	0					
ANR	868266	MemberAccess	info . hasState		868056	0					
ANR	868267	Identifier	info		868056	0					
ANR	868268	Identifier	hasState		868056	1					
ANR	868269	ArgumentList	NET :: Max		868056	1					
ANR	868270	Argument	NET :: Max		868056	0					
ANR	868271	Identifier	NET :: Max		868056	0					
ANR	868272	CompoundStatement		34:37:1112:1112	868056	1					
ANR	868273	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: Max )"	360:12:16692:16730	868056	0	True				
ANR	868274	CallExpression	"KWindowSystem :: clearState ( w , NET :: Max )"		868056	0					
ANR	868275	Callee	KWindowSystem :: clearState		868056	0					
ANR	868276	Identifier	KWindowSystem :: clearState		868056	0					
ANR	868277	ArgumentList	w		868056	1					
ANR	868278	Argument	w		868056	0					
ANR	868279	Identifier	w		868056	0					
ANR	868280	Argument	NET :: Max		868056	1					
ANR	868281	Identifier	NET :: Max		868056	0					
ANR	868282	ElseStatement	else		868056	0					
ANR	868283	CompoundStatement		36:15:1181:1181	868056	0					
ANR	868284	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: Max )"	362:12:16761:16797	868056	0	True				
ANR	868285	CallExpression	"KWindowSystem :: setState ( w , NET :: Max )"		868056	0					
ANR	868286	Callee	KWindowSystem :: setState		868056	0					
ANR	868287	Identifier	KWindowSystem :: setState		868056	0					
ANR	868288	ArgumentList	w		868056	1					
ANR	868289	Argument	w		868056	0					
ANR	868290	Identifier	w		868056	0					
ANR	868291	Argument	NET :: Max		868056	1					
ANR	868292	Identifier	NET :: Max		868056	0					
ANR	868293	BreakStatement	break ;	364:8:16817:16822	868056	10	True				
ANR	868294	Label	case FullscreenAction :	365:4:16828:16849	868056	11	True				
ANR	868295	Identifier	FullscreenAction		868056	0					
ANR	868296	IfStatement	if ( info . hasState ( NET :: FullScreen ) )		868056	12					
ANR	868297	Condition	info . hasState ( NET :: FullScreen )	366:12:16863:16892	868056	0	True				
ANR	868298	CallExpression	info . hasState ( NET :: FullScreen )		868056	0					
ANR	868299	Callee	info . hasState		868056	0					
ANR	868300	MemberAccess	info . hasState		868056	0					
ANR	868301	Identifier	info		868056	0					
ANR	868302	Identifier	hasState		868056	1					
ANR	868303	ArgumentList	NET :: FullScreen		868056	1					
ANR	868304	Argument	NET :: FullScreen		868056	0					
ANR	868305	Identifier	NET :: FullScreen		868056	0					
ANR	868306	CompoundStatement		41:44:1329:1329	868056	1					
ANR	868307	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: FullScreen )"	367:12:16909:16954	868056	0	True				
ANR	868308	CallExpression	"KWindowSystem :: clearState ( w , NET :: FullScreen )"		868056	0					
ANR	868309	Callee	KWindowSystem :: clearState		868056	0					
ANR	868310	Identifier	KWindowSystem :: clearState		868056	0					
ANR	868311	ArgumentList	w		868056	1					
ANR	868312	Argument	w		868056	0					
ANR	868313	Identifier	w		868056	0					
ANR	868314	Argument	NET :: FullScreen		868056	1					
ANR	868315	Identifier	NET :: FullScreen		868056	0					
ANR	868316	ElseStatement	else		868056	0					
ANR	868317	CompoundStatement		43:15:1405:1405	868056	0					
ANR	868318	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: FullScreen )"	369:12:16985:17028	868056	0	True				
ANR	868319	CallExpression	"KWindowSystem :: setState ( w , NET :: FullScreen )"		868056	0					
ANR	868320	Callee	KWindowSystem :: setState		868056	0					
ANR	868321	Identifier	KWindowSystem :: setState		868056	0					
ANR	868322	ArgumentList	w		868056	1					
ANR	868323	Argument	w		868056	0					
ANR	868324	Identifier	w		868056	0					
ANR	868325	Argument	NET :: FullScreen		868056	1					
ANR	868326	Identifier	NET :: FullScreen		868056	0					
ANR	868327	BreakStatement	break ;	371:8:17048:17053	868056	13	True				
ANR	868328	Label	case ShadeAction :	372:4:17059:17075	868056	14	True				
ANR	868329	Identifier	ShadeAction		868056	0					
ANR	868330	IfStatement	if ( info . hasState ( NET :: Shaded ) )		868056	15					
ANR	868331	Condition	info . hasState ( NET :: Shaded )	373:12:17089:17114	868056	0	True				
ANR	868332	CallExpression	info . hasState ( NET :: Shaded )		868056	0					
ANR	868333	Callee	info . hasState		868056	0					
ANR	868334	MemberAccess	info . hasState		868056	0					
ANR	868335	Identifier	info		868056	0					
ANR	868336	Identifier	hasState		868056	1					
ANR	868337	ArgumentList	NET :: Shaded		868056	1					
ANR	868338	Argument	NET :: Shaded		868056	0					
ANR	868339	Identifier	NET :: Shaded		868056	0					
ANR	868340	CompoundStatement		48:40:1551:1551	868056	1					
ANR	868341	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: Shaded )"	374:12:17131:17172	868056	0	True				
ANR	868342	CallExpression	"KWindowSystem :: clearState ( w , NET :: Shaded )"		868056	0					
ANR	868343	Callee	KWindowSystem :: clearState		868056	0					
ANR	868344	Identifier	KWindowSystem :: clearState		868056	0					
ANR	868345	ArgumentList	w		868056	1					
ANR	868346	Argument	w		868056	0					
ANR	868347	Identifier	w		868056	0					
ANR	868348	Argument	NET :: Shaded		868056	1					
ANR	868349	Identifier	NET :: Shaded		868056	0					
ANR	868350	ElseStatement	else		868056	0					
ANR	868351	CompoundStatement		50:15:1623:1623	868056	0					
ANR	868352	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: Shaded )"	376:12:17203:17242	868056	0	True				
ANR	868353	CallExpression	"KWindowSystem :: setState ( w , NET :: Shaded )"		868056	0					
ANR	868354	Callee	KWindowSystem :: setState		868056	0					
ANR	868355	Identifier	KWindowSystem :: setState		868056	0					
ANR	868356	ArgumentList	w		868056	1					
ANR	868357	Argument	w		868056	0					
ANR	868358	Identifier	w		868056	0					
ANR	868359	Argument	NET :: Shaded		868056	1					
ANR	868360	Identifier	NET :: Shaded		868056	0					
ANR	868361	BreakStatement	break ;	378:8:17262:17267	868056	16	True				
ANR	868362	Label	case KeepAboveAction :	379:4:17273:17293	868056	17	True				
ANR	868363	Identifier	KeepAboveAction		868056	0					
ANR	868364	IfStatement	if ( info . hasState ( NET :: KeepAbove ) )		868056	18					
ANR	868365	Condition	info . hasState ( NET :: KeepAbove )	380:12:17307:17335	868056	0	True				
ANR	868366	CallExpression	info . hasState ( NET :: KeepAbove )		868056	0					
ANR	868367	Callee	info . hasState		868056	0					
ANR	868368	MemberAccess	info . hasState		868056	0					
ANR	868369	Identifier	info		868056	0					
ANR	868370	Identifier	hasState		868056	1					
ANR	868371	ArgumentList	NET :: KeepAbove		868056	1					
ANR	868372	Argument	NET :: KeepAbove		868056	0					
ANR	868373	Identifier	NET :: KeepAbove		868056	0					
ANR	868374	CompoundStatement		55:43:1772:1772	868056	1					
ANR	868375	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: KeepAbove )"	381:12:17352:17396	868056	0	True				
ANR	868376	CallExpression	"KWindowSystem :: clearState ( w , NET :: KeepAbove )"		868056	0					
ANR	868377	Callee	KWindowSystem :: clearState		868056	0					
ANR	868378	Identifier	KWindowSystem :: clearState		868056	0					
ANR	868379	ArgumentList	w		868056	1					
ANR	868380	Argument	w		868056	0					
ANR	868381	Identifier	w		868056	0					
ANR	868382	Argument	NET :: KeepAbove		868056	1					
ANR	868383	Identifier	NET :: KeepAbove		868056	0					
ANR	868384	ElseStatement	else		868056	0					
ANR	868385	CompoundStatement		57:15:1847:1847	868056	0					
ANR	868386	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: KeepAbove )"	383:12:17427:17469	868056	0	True				
ANR	868387	CallExpression	"KWindowSystem :: setState ( w , NET :: KeepAbove )"		868056	0					
ANR	868388	Callee	KWindowSystem :: setState		868056	0					
ANR	868389	Identifier	KWindowSystem :: setState		868056	0					
ANR	868390	ArgumentList	w		868056	1					
ANR	868391	Argument	w		868056	0					
ANR	868392	Identifier	w		868056	0					
ANR	868393	Argument	NET :: KeepAbove		868056	1					
ANR	868394	Identifier	NET :: KeepAbove		868056	0					
ANR	868395	BreakStatement	break ;	385:8:17489:17494	868056	19	True				
ANR	868396	Label	case KeepBelowAction :	386:4:17500:17520	868056	20	True				
ANR	868397	Identifier	KeepBelowAction		868056	0					
ANR	868398	IfStatement	if ( info . hasState ( NET :: KeepBelow ) )		868056	21					
ANR	868399	Condition	info . hasState ( NET :: KeepBelow )	387:12:17534:17562	868056	0	True				
ANR	868400	CallExpression	info . hasState ( NET :: KeepBelow )		868056	0					
ANR	868401	Callee	info . hasState		868056	0					
ANR	868402	MemberAccess	info . hasState		868056	0					
ANR	868403	Identifier	info		868056	0					
ANR	868404	Identifier	hasState		868056	1					
ANR	868405	ArgumentList	NET :: KeepBelow		868056	1					
ANR	868406	Argument	NET :: KeepBelow		868056	0					
ANR	868407	Identifier	NET :: KeepBelow		868056	0					
ANR	868408	CompoundStatement		62:43:1999:1999	868056	1					
ANR	868409	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: KeepBelow )"	388:12:17579:17623	868056	0	True				
ANR	868410	CallExpression	"KWindowSystem :: clearState ( w , NET :: KeepBelow )"		868056	0					
ANR	868411	Callee	KWindowSystem :: clearState		868056	0					
ANR	868412	Identifier	KWindowSystem :: clearState		868056	0					
ANR	868413	ArgumentList	w		868056	1					
ANR	868414	Argument	w		868056	0					
ANR	868415	Identifier	w		868056	0					
ANR	868416	Argument	NET :: KeepBelow		868056	1					
ANR	868417	Identifier	NET :: KeepBelow		868056	0					
ANR	868418	ElseStatement	else		868056	0					
ANR	868419	CompoundStatement		64:15:2074:2074	868056	0					
ANR	868420	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: KeepBelow )"	390:12:17654:17696	868056	0	True				
ANR	868421	CallExpression	"KWindowSystem :: setState ( w , NET :: KeepBelow )"		868056	0					
ANR	868422	Callee	KWindowSystem :: setState		868056	0					
ANR	868423	Identifier	KWindowSystem :: setState		868056	0					
ANR	868424	ArgumentList	w		868056	1					
ANR	868425	Argument	w		868056	0					
ANR	868426	Identifier	w		868056	0					
ANR	868427	Argument	NET :: KeepBelow		868056	1					
ANR	868428	Identifier	NET :: KeepBelow		868056	0					
ANR	868429	BreakStatement	break ;	392:8:17716:17721	868056	22	True				
ANR	868430	ReturnType	void		868056	1					
ANR	868431	Identifier	WindowsRunner :: run		868056	2					
ANR	868432	ParameterList	"const Plasma :: RunnerContext & context , const Plasma :: QueryMatch & match"		868056	3					
ANR	868433	Parameter	const Plasma :: RunnerContext & context	325:24:15494:15529	868056	0	True				
ANR	868434	ParameterType	const Plasma :: RunnerContext &		868056	0					
ANR	868435	Identifier	context		868056	1					
ANR	868436	Parameter	const Plasma :: QueryMatch & match	325:62:15532:15562	868056	1	True				
ANR	868437	ParameterType	const Plasma :: QueryMatch &		868056	0					
ANR	868438	Identifier	match		868056	1					
ANR	868439	CFGEntryNode	ENTRY		868056		True				
ANR	868440	CFGExitNode	EXIT		868056		True				
ANR	868441	Symbol	match . data ( ) . toString		868056						
ANR	868442	Symbol	parts [ 0 ] . toInt		868056						
ANR	868443	Symbol	NET :: KeepAbove		868056						
ANR	868444	Symbol	NET :: KeepBelow		868056						
ANR	868445	Symbol	info . isMinimized		868056						
ANR	868446	Symbol	locker		868056						
ANR	868447	Symbol	NET :: Max		868056						
ANR	868448	Symbol	* parts		868056						
ANR	868449	Symbol	m_windows		868056						
ANR	868450	Symbol	WindowAction		868056						
ANR	868451	Symbol	i . value		868056						
ANR	868452	Symbol	context		868056						
ANR	868453	Symbol	action		868056						
ANR	868454	Symbol	match . id		868056						
ANR	868455	Symbol	match . data ( ) . toString ( ) . split		868056						
ANR	868456	Symbol	info		868056						
ANR	868457	Symbol	match . id ( ) . startsWith		868056						
ANR	868458	Symbol	info . hasState		868056						
ANR	868459	Symbol	match		868056						
ANR	868460	Symbol	NET :: Shaded		868056						
ANR	868461	Symbol	i		868056						
ANR	868462	Symbol	m_windows . find		868056						
ANR	868463	Symbol	match . data		868056						
ANR	868464	Symbol	NET :: FullScreen		868056						
ANR	868465	Symbol	QLatin1String		868056						
ANR	868466	Symbol	match . data ( ) . toInt		868056						
ANR	868467	Symbol	w		868056						
ANR	868468	Symbol	ri		868056						
ANR	868469	Symbol	parts		868056						
ANR	868470	Symbol	QStringLiteral		868056						
ANR	868471	Function	WindowsRunner :: desktopMatch	396:0:17732:18381							
ANR	868472	FunctionDef	"WindowsRunner :: desktopMatch (int desktop , qreal relevance)"		868471	0					
ANR	868473	CompoundStatement		397:0:17809:18381	868471	0					
ANR	868474	IdentifierDeclStatement	Plasma :: QueryMatch match ( this ) ;	398:4:17815:17845	868471	0	True				
ANR	868475	IdentifierDecl	match ( this )		868471	0					
ANR	868476	IdentifierDeclType	Plasma :: QueryMatch		868471	0					
ANR	868477	Identifier	match		868471	1					
ANR	868478	Identifier	this		868471	2					
ANR	868479	ExpressionStatement	match . setType ( Plasma :: QueryMatch :: ExactMatch )	399:4:17851:17896	868471	1	True				
ANR	868480	CallExpression	match . setType ( Plasma :: QueryMatch :: ExactMatch )		868471	0					
ANR	868481	Callee	match . setType		868471	0					
ANR	868482	MemberAccess	match . setType		868471	0					
ANR	868483	Identifier	match		868471	0					
ANR	868484	Identifier	setType		868471	1					
ANR	868485	ArgumentList	Plasma :: QueryMatch :: ExactMatch		868471	1					
ANR	868486	Argument	Plasma :: QueryMatch :: ExactMatch		868471	0					
ANR	868487	Identifier	Plasma :: QueryMatch :: ExactMatch		868471	0					
ANR	868488	ExpressionStatement	match . setData ( desktop )	400:4:17902:17924	868471	2	True				
ANR	868489	CallExpression	match . setData ( desktop )		868471	0					
ANR	868490	Callee	match . setData		868471	0					
ANR	868491	MemberAccess	match . setData		868471	0					
ANR	868492	Identifier	match		868471	0					
ANR	868493	Identifier	setData		868471	1					
ANR	868494	ArgumentList	desktop		868471	1					
ANR	868495	Argument	desktop		868471	0					
ANR	868496	Identifier	desktop		868471	0					
ANR	868497	ExpressionStatement	"match . setId ( ""desktop-"" + QString :: number ( desktop ) )"	401:4:17930:17980	868471	3	True				
ANR	868498	CallExpression	"match . setId ( ""desktop-"" + QString :: number ( desktop ) )"		868471	0					
ANR	868499	Callee	match . setId		868471	0					
ANR	868500	MemberAccess	match . setId		868471	0					
ANR	868501	Identifier	match		868471	0					
ANR	868502	Identifier	setId		868471	1					
ANR	868503	ArgumentList	"""desktop-"" + QString :: number ( desktop )"		868471	1					
ANR	868504	Argument	"""desktop-"" + QString :: number ( desktop )"		868471	0					
ANR	868505	AdditiveExpression	"""desktop-"" + QString :: number ( desktop )"		868471	0		+			
ANR	868506	PrimaryExpression	"""desktop-"""		868471	0					
ANR	868507	CallExpression	QString :: number ( desktop )		868471	1					
ANR	868508	Callee	QString :: number		868471	0					
ANR	868509	Identifier	QString :: number		868471	0					
ANR	868510	ArgumentList	desktop		868471	1					
ANR	868511	Argument	desktop		868471	0					
ANR	868512	Identifier	desktop		868471	0					
ANR	868513	ExpressionStatement	"match . setIconName ( QStringLiteral ( ""user-desktop"" ) )"	402:4:17986:18035	868471	4	True				
ANR	868514	CallExpression	"match . setIconName ( QStringLiteral ( ""user-desktop"" ) )"		868471	0					
ANR	868515	Callee	match . setIconName		868471	0					
ANR	868516	MemberAccess	match . setIconName		868471	0					
ANR	868517	Identifier	match		868471	0					
ANR	868518	Identifier	setIconName		868471	1					
ANR	868519	ArgumentList	"QStringLiteral ( ""user-desktop"" )"		868471	1					
ANR	868520	Argument	"QStringLiteral ( ""user-desktop"" )"		868471	0					
ANR	868521	CallExpression	"QStringLiteral ( ""user-desktop"" )"		868471	0					
ANR	868522	Callee	QStringLiteral		868471	0					
ANR	868523	Identifier	QStringLiteral		868471	0					
ANR	868524	ArgumentList	"""user-desktop"""		868471	1					
ANR	868525	Argument	"""user-desktop"""		868471	0					
ANR	868526	PrimaryExpression	"""user-desktop"""		868471	0					
ANR	868527	IdentifierDeclStatement	QString desktopName ;	403:4:18041:18060	868471	5	True				
ANR	868528	IdentifierDecl	desktopName		868471	0					
ANR	868529	IdentifierDeclType	QString		868471	0					
ANR	868530	Identifier	desktopName		868471	1					
ANR	868531	IfStatement	if ( desktop <= m_desktopNames . size ( ) )		868471	6					
ANR	868532	Condition	desktop <= m_desktopNames . size ( )	404:8:18070:18101	868471	0	True				
ANR	868533	RelationalExpression	desktop <= m_desktopNames . size ( )		868471	0		<=			
ANR	868534	Identifier	desktop		868471	0					
ANR	868535	CallExpression	m_desktopNames . size ( )		868471	1					
ANR	868536	Callee	m_desktopNames . size		868471	0					
ANR	868537	MemberAccess	m_desktopNames . size		868471	0					
ANR	868538	Identifier	m_desktopNames		868471	0					
ANR	868539	Identifier	size		868471	1					
ANR	868540	ArgumentList			868471	1					
ANR	868541	CompoundStatement		8:42:294:294	868471	1					
ANR	868542	ExpressionStatement	desktopName = m_desktopNames [ desktop - 1 ]	405:8:18114:18155	868471	0	True				
ANR	868543	AssignmentExpression	desktopName = m_desktopNames [ desktop - 1 ]		868471	0		=			
ANR	868544	Identifier	desktopName		868471	0					
ANR	868545	ArrayIndexing	m_desktopNames [ desktop - 1 ]		868471	1					
ANR	868546	Identifier	m_desktopNames		868471	0					
ANR	868547	AdditiveExpression	desktop - 1		868471	1		-			
ANR	868548	Identifier	desktop		868471	0					
ANR	868549	PrimaryExpression	1		868471	1					
ANR	868550	ElseStatement	else		868471	0					
ANR	868551	CompoundStatement		10:11:358:358	868471	0					
ANR	868552	ExpressionStatement	desktopName = KWindowSystem :: desktopName ( desktop )	407:8:18178:18227	868471	0	True				
ANR	868553	AssignmentExpression	desktopName = KWindowSystem :: desktopName ( desktop )		868471	0		=			
ANR	868554	Identifier	desktopName		868471	0					
ANR	868555	CallExpression	KWindowSystem :: desktopName ( desktop )		868471	1					
ANR	868556	Callee	KWindowSystem :: desktopName		868471	0					
ANR	868557	Identifier	KWindowSystem :: desktopName		868471	0					
ANR	868558	ArgumentList	desktop		868471	1					
ANR	868559	Argument	desktop		868471	0					
ANR	868560	Identifier	desktop		868471	0					
ANR	868561	ExpressionStatement	match . setText ( desktopName )	409:4:18239:18265	868471	7	True				
ANR	868562	CallExpression	match . setText ( desktopName )		868471	0					
ANR	868563	Callee	match . setText		868471	0					
ANR	868564	MemberAccess	match . setText		868471	0					
ANR	868565	Identifier	match		868471	0					
ANR	868566	Identifier	setText		868471	1					
ANR	868567	ArgumentList	desktopName		868471	1					
ANR	868568	Argument	desktopName		868471	0					
ANR	868569	Identifier	desktopName		868471	0					
ANR	868570	ExpressionStatement	"match . setSubtext ( i18n ( ""Switch to desktop %1"" , desktop ) )"	410:4:18271:18326	868471	8	True				
ANR	868571	CallExpression	"match . setSubtext ( i18n ( ""Switch to desktop %1"" , desktop ) )"		868471	0					
ANR	868572	Callee	match . setSubtext		868471	0					
ANR	868573	MemberAccess	match . setSubtext		868471	0					
ANR	868574	Identifier	match		868471	0					
ANR	868575	Identifier	setSubtext		868471	1					
ANR	868576	ArgumentList	"i18n ( ""Switch to desktop %1"" , desktop )"		868471	1					
ANR	868577	Argument	"i18n ( ""Switch to desktop %1"" , desktop )"		868471	0					
ANR	868578	CallExpression	"i18n ( ""Switch to desktop %1"" , desktop )"		868471	0					
ANR	868579	Callee	i18n		868471	0					
ANR	868580	Identifier	i18n		868471	0					
ANR	868581	ArgumentList	"""Switch to desktop %1"""		868471	1					
ANR	868582	Argument	"""Switch to desktop %1"""		868471	0					
ANR	868583	PrimaryExpression	"""Switch to desktop %1"""		868471	0					
ANR	868584	Argument	desktop		868471	1					
ANR	868585	Identifier	desktop		868471	0					
ANR	868586	ExpressionStatement	match . setRelevance ( relevance )	411:4:18332:18361	868471	9	True				
ANR	868587	CallExpression	match . setRelevance ( relevance )		868471	0					
ANR	868588	Callee	match . setRelevance		868471	0					
ANR	868589	MemberAccess	match . setRelevance		868471	0					
ANR	868590	Identifier	match		868471	0					
ANR	868591	Identifier	setRelevance		868471	1					
ANR	868592	ArgumentList	relevance		868471	1					
ANR	868593	Argument	relevance		868471	0					
ANR	868594	Identifier	relevance		868471	0					
ANR	868595	ReturnStatement	return match ;	412:4:18367:18379	868471	10	True				
ANR	868596	Identifier	match		868471	0					
ANR	868597	ReturnType	Plasma :: QueryMatch		868471	1					
ANR	868598	Identifier	WindowsRunner :: desktopMatch		868471	2					
ANR	868599	ParameterList	"int desktop , qreal relevance"		868471	3					
ANR	868600	Parameter	int desktop	396:47:17779:17789	868471	0	True				
ANR	868601	ParameterType	int		868471	0					
ANR	868602	Identifier	desktop		868471	1					
ANR	868603	Parameter	qreal relevance	396:60:17792:17806	868471	1	True				
ANR	868604	ParameterType	qreal		868471	0					
ANR	868605	Identifier	relevance		868471	1					
ANR	868606	CFGEntryNode	ENTRY		868471		True				
ANR	868607	CFGExitNode	EXIT		868471		True				
ANR	868608	Symbol	* m_desktopNames		868471						
ANR	868609	Symbol	Plasma :: QueryMatch :: ExactMatch		868471						
ANR	868610	Symbol	m_desktopNames		868471						
ANR	868611	Symbol	match		868471						
ANR	868612	Symbol	* desktop		868471						
ANR	868613	Symbol	KWindowSystem :: desktopName		868471						
ANR	868614	Symbol	relevance		868471						
ANR	868615	Symbol	i18n		868471						
ANR	868616	Symbol	QString :: number		868471						
ANR	868617	Symbol	desktopName		868471						
ANR	868618	Symbol	desktop		868471						
ANR	868619	Symbol	QStringLiteral		868471						
ANR	868620	Symbol	m_desktopNames . size		868471						
ANR	868621	Function	WindowsRunner :: windowMatch	415:0:18384:20164							
ANR	868622	FunctionDef	"WindowsRunner :: windowMatch (const KWindowInfo & info , WindowAction action , qreal relevance , Plasma :: QueryMatch :: Type type)"		868621	0					
ANR	868623	CompoundStatement		416:0:18524:20164	868621	0					
ANR	868624	IdentifierDeclStatement	Plasma :: QueryMatch match ( this ) ;	417:4:18530:18560	868621	0	True				
ANR	868625	IdentifierDecl	match ( this )		868621	0					
ANR	868626	IdentifierDeclType	Plasma :: QueryMatch		868621	0					
ANR	868627	Identifier	match		868621	1					
ANR	868628	Identifier	this		868621	2					
ANR	868629	ExpressionStatement	match . setType ( type )	418:4:18566:18585	868621	1	True				
ANR	868630	CallExpression	match . setType ( type )		868621	0					
ANR	868631	Callee	match . setType		868621	0					
ANR	868632	MemberAccess	match . setType		868621	0					
ANR	868633	Identifier	match		868621	0					
ANR	868634	Identifier	setType		868621	1					
ANR	868635	ArgumentList	type		868621	1					
ANR	868636	Argument	type		868621	0					
ANR	868637	Identifier	type		868621	0					
ANR	868638	ExpressionStatement	"match . setData ( QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) ) )"	419:4:18591:18679	868621	2	True				
ANR	868639	CallExpression	"match . setData ( QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) ) )"		868621	0					
ANR	868640	Callee	match . setData		868621	0					
ANR	868641	MemberAccess	match . setData		868621	0					
ANR	868642	Identifier	match		868621	0					
ANR	868643	Identifier	setData		868621	1					
ANR	868644	ArgumentList	"QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) )"		868621	1					
ANR	868645	Argument	"QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) )"		868621	0					
ANR	868646	CallExpression	"QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) )"		868621	0					
ANR	868647	Callee	QString		868621	0					
ANR	868648	Identifier	QString		868621	0					
ANR	868649	ArgumentList	"QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) )"		868621	1					
ANR	868650	Argument	"QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) )"		868621	0					
ANR	868651	AdditiveExpression	"QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) )"		868621	0		+			
ANR	868652	CallExpression	QString :: number ( ( int ) action )		868621	0					
ANR	868653	Callee	QString :: number		868621	0					
ANR	868654	Identifier	QString :: number		868621	0					
ANR	868655	ArgumentList	( int ) action		868621	1					
ANR	868656	Argument	( int ) action		868621	0					
ANR	868657	CastExpression	( int ) action		868621	0					
ANR	868658	CastTarget	int		868621	0					
ANR	868659	Identifier	action		868621	1					
ANR	868660	AdditiveExpression	"""_"" + QString :: number ( info . win ( ) )"		868621	1		+			
ANR	868661	PrimaryExpression	"""_"""		868621	0					
ANR	868662	CallExpression	QString :: number ( info . win ( ) )		868621	1					
ANR	868663	Callee	QString :: number		868621	0					
ANR	868664	Identifier	QString :: number		868621	0					
ANR	868665	ArgumentList	info . win ( )		868621	1					
ANR	868666	Argument	info . win ( )		868621	0					
ANR	868667	CallExpression	info . win ( )		868621	0					
ANR	868668	Callee	info . win		868621	0					
ANR	868669	MemberAccess	info . win		868621	0					
ANR	868670	Identifier	info		868621	0					
ANR	868671	Identifier	win		868621	1					
ANR	868672	ArgumentList			868621	1					
ANR	868673	ExpressionStatement	match . setIcon ( m_icons [ info . win ( ) ] )	420:4:18685:18719	868621	3	True				
ANR	868674	CallExpression	match . setIcon ( m_icons [ info . win ( ) ] )		868621	0					
ANR	868675	Callee	match . setIcon		868621	0					
ANR	868676	MemberAccess	match . setIcon		868621	0					
ANR	868677	Identifier	match		868621	0					
ANR	868678	Identifier	setIcon		868621	1					
ANR	868679	ArgumentList	m_icons [ info . win ( ) ]		868621	1					
ANR	868680	Argument	m_icons [ info . win ( ) ]		868621	0					
ANR	868681	ArrayIndexing	m_icons [ info . win ( ) ]		868621	0					
ANR	868682	Identifier	m_icons		868621	0					
ANR	868683	CallExpression	info . win ( )		868621	1					
ANR	868684	Callee	info . win		868621	0					
ANR	868685	MemberAccess	info . win		868621	0					
ANR	868686	Identifier	info		868621	0					
ANR	868687	Identifier	win		868621	1					
ANR	868688	ArgumentList			868621	1					
ANR	868689	ExpressionStatement	match . setText ( info . name ( ) )	421:4:18725:18751	868621	4	True				
ANR	868690	CallExpression	match . setText ( info . name ( ) )		868621	0					
ANR	868691	Callee	match . setText		868621	0					
ANR	868692	MemberAccess	match . setText		868621	0					
ANR	868693	Identifier	match		868621	0					
ANR	868694	Identifier	setText		868621	1					
ANR	868695	ArgumentList	info . name ( )		868621	1					
ANR	868696	Argument	info . name ( )		868621	0					
ANR	868697	CallExpression	info . name ( )		868621	0					
ANR	868698	Callee	info . name		868621	0					
ANR	868699	MemberAccess	info . name		868621	0					
ANR	868700	Identifier	info		868621	0					
ANR	868701	Identifier	name		868621	1					
ANR	868702	ArgumentList			868621	1					
ANR	868703	IdentifierDeclStatement	QString desktopName ;	422:4:18757:18776	868621	5	True				
ANR	868704	IdentifierDecl	desktopName		868621	0					
ANR	868705	IdentifierDeclType	QString		868621	0					
ANR	868706	Identifier	desktopName		868621	1					
ANR	868707	IdentifierDeclStatement	int desktop = info . desktop ( ) ;	423:4:18782:18810	868621	6	True				
ANR	868708	IdentifierDecl	desktop = info . desktop ( )		868621	0					
ANR	868709	IdentifierDeclType	int		868621	0					
ANR	868710	Identifier	desktop		868621	1					
ANR	868711	AssignmentExpression	desktop = info . desktop ( )		868621	2		=			
ANR	868712	Identifier	desktop		868621	0					
ANR	868713	CallExpression	info . desktop ( )		868621	1					
ANR	868714	Callee	info . desktop		868621	0					
ANR	868715	MemberAccess	info . desktop		868621	0					
ANR	868716	Identifier	info		868621	0					
ANR	868717	Identifier	desktop		868621	1					
ANR	868718	ArgumentList			868621	1					
ANR	868719	IfStatement	if ( desktop == NET :: OnAllDesktops )		868621	7					
ANR	868720	Condition	desktop == NET :: OnAllDesktops	424:8:18820:18848	868621	0	True				
ANR	868721	EqualityExpression	desktop == NET :: OnAllDesktops		868621	0		==			
ANR	868722	Identifier	desktop		868621	0					
ANR	868723	Identifier	NET :: OnAllDesktops		868621	1					
ANR	868724	CompoundStatement		9:39:326:326	868621	1					
ANR	868725	ExpressionStatement	desktop = KWindowSystem :: currentDesktop ( )	425:8:18861:18902	868621	0	True				
ANR	868726	AssignmentExpression	desktop = KWindowSystem :: currentDesktop ( )		868621	0		=			
ANR	868727	Identifier	desktop		868621	0					
ANR	868728	CallExpression	KWindowSystem :: currentDesktop ( )		868621	1					
ANR	868729	Callee	KWindowSystem :: currentDesktop		868621	0					
ANR	868730	Identifier	KWindowSystem :: currentDesktop		868621	0					
ANR	868731	ArgumentList			868621	1					
ANR	868732	IfStatement	if ( desktop <= m_desktopNames . size ( ) )		868621	8					
ANR	868733	Condition	desktop <= m_desktopNames . size ( )	427:8:18918:18949	868621	0	True				
ANR	868734	RelationalExpression	desktop <= m_desktopNames . size ( )		868621	0		<=			
ANR	868735	Identifier	desktop		868621	0					
ANR	868736	CallExpression	m_desktopNames . size ( )		868621	1					
ANR	868737	Callee	m_desktopNames . size		868621	0					
ANR	868738	MemberAccess	m_desktopNames . size		868621	0					
ANR	868739	Identifier	m_desktopNames		868621	0					
ANR	868740	Identifier	size		868621	1					
ANR	868741	ArgumentList			868621	1					
ANR	868742	CompoundStatement		12:42:427:427	868621	1					
ANR	868743	ExpressionStatement	desktopName = m_desktopNames [ desktop - 1 ]	428:8:18962:19003	868621	0	True				
ANR	868744	AssignmentExpression	desktopName = m_desktopNames [ desktop - 1 ]		868621	0		=			
ANR	868745	Identifier	desktopName		868621	0					
ANR	868746	ArrayIndexing	m_desktopNames [ desktop - 1 ]		868621	1					
ANR	868747	Identifier	m_desktopNames		868621	0					
ANR	868748	AdditiveExpression	desktop - 1		868621	1		-			
ANR	868749	Identifier	desktop		868621	0					
ANR	868750	PrimaryExpression	1		868621	1					
ANR	868751	ElseStatement	else		868621	0					
ANR	868752	CompoundStatement		14:11:491:491	868621	0					
ANR	868753	ExpressionStatement	desktopName = KWindowSystem :: desktopName ( desktop )	430:8:19026:19075	868621	0	True				
ANR	868754	AssignmentExpression	desktopName = KWindowSystem :: desktopName ( desktop )		868621	0		=			
ANR	868755	Identifier	desktopName		868621	0					
ANR	868756	CallExpression	KWindowSystem :: desktopName ( desktop )		868621	1					
ANR	868757	Callee	KWindowSystem :: desktopName		868621	0					
ANR	868758	Identifier	KWindowSystem :: desktopName		868621	0					
ANR	868759	ArgumentList	desktop		868621	1					
ANR	868760	Argument	desktop		868621	0					
ANR	868761	Identifier	desktop		868621	0					
ANR	868762	SwitchStatement	switch ( action )		868621	9					
ANR	868763	Condition	action	432:12:19095:19100	868621	0	True				
ANR	868764	Identifier	action		868621	0					
ANR	868765	CompoundStatement		17:20:578:578	868621	1					
ANR	868766	Label	case CloseAction :	433:4:19109:19125	868621	0	True				
ANR	868767	Identifier	CloseAction		868621	0					
ANR	868768	ExpressionStatement	"match . setSubtext ( i18n ( ""Close running window on %1"" , desktopName ) )"	434:8:19135:19200	868621	1	True				
ANR	868769	CallExpression	"match . setSubtext ( i18n ( ""Close running window on %1"" , desktopName ) )"		868621	0					
ANR	868770	Callee	match . setSubtext		868621	0					
ANR	868771	MemberAccess	match . setSubtext		868621	0					
ANR	868772	Identifier	match		868621	0					
ANR	868773	Identifier	setSubtext		868621	1					
ANR	868774	ArgumentList	"i18n ( ""Close running window on %1"" , desktopName )"		868621	1					
ANR	868775	Argument	"i18n ( ""Close running window on %1"" , desktopName )"		868621	0					
ANR	868776	CallExpression	"i18n ( ""Close running window on %1"" , desktopName )"		868621	0					
ANR	868777	Callee	i18n		868621	0					
ANR	868778	Identifier	i18n		868621	0					
ANR	868779	ArgumentList	"""Close running window on %1"""		868621	1					
ANR	868780	Argument	"""Close running window on %1"""		868621	0					
ANR	868781	PrimaryExpression	"""Close running window on %1"""		868621	0					
ANR	868782	Argument	desktopName		868621	1					
ANR	868783	Identifier	desktopName		868621	0					
ANR	868784	BreakStatement	break ;	435:8:19210:19215	868621	2	True				
ANR	868785	Label	case MinimizeAction :	436:4:19221:19240	868621	3	True				
ANR	868786	Identifier	MinimizeAction		868621	0					
ANR	868787	ExpressionStatement	"match . setSubtext ( i18n ( ""(Un)minimize running window on %1"" , desktopName ) )"	437:8:19250:19322	868621	4	True				
ANR	868788	CallExpression	"match . setSubtext ( i18n ( ""(Un)minimize running window on %1"" , desktopName ) )"		868621	0					
ANR	868789	Callee	match . setSubtext		868621	0					
ANR	868790	MemberAccess	match . setSubtext		868621	0					
ANR	868791	Identifier	match		868621	0					
ANR	868792	Identifier	setSubtext		868621	1					
ANR	868793	ArgumentList	"i18n ( ""(Un)minimize running window on %1"" , desktopName )"		868621	1					
ANR	868794	Argument	"i18n ( ""(Un)minimize running window on %1"" , desktopName )"		868621	0					
ANR	868795	CallExpression	"i18n ( ""(Un)minimize running window on %1"" , desktopName )"		868621	0					
ANR	868796	Callee	i18n		868621	0					
ANR	868797	Identifier	i18n		868621	0					
ANR	868798	ArgumentList	"""(Un)minimize running window on %1"""		868621	1					
ANR	868799	Argument	"""(Un)minimize running window on %1"""		868621	0					
ANR	868800	PrimaryExpression	"""(Un)minimize running window on %1"""		868621	0					
ANR	868801	Argument	desktopName		868621	1					
ANR	868802	Identifier	desktopName		868621	0					
ANR	868803	BreakStatement	break ;	438:8:19332:19337	868621	5	True				
ANR	868804	Label	case MaximizeAction :	439:4:19343:19362	868621	6	True				
ANR	868805	Identifier	MaximizeAction		868621	0					
ANR	868806	ExpressionStatement	"match . setSubtext ( i18n ( ""Maximize/restore running window on %1"" , desktopName ) )"	440:8:19372:19448	868621	7	True				
ANR	868807	CallExpression	"match . setSubtext ( i18n ( ""Maximize/restore running window on %1"" , desktopName ) )"		868621	0					
ANR	868808	Callee	match . setSubtext		868621	0					
ANR	868809	MemberAccess	match . setSubtext		868621	0					
ANR	868810	Identifier	match		868621	0					
ANR	868811	Identifier	setSubtext		868621	1					
ANR	868812	ArgumentList	"i18n ( ""Maximize/restore running window on %1"" , desktopName )"		868621	1					
ANR	868813	Argument	"i18n ( ""Maximize/restore running window on %1"" , desktopName )"		868621	0					
ANR	868814	CallExpression	"i18n ( ""Maximize/restore running window on %1"" , desktopName )"		868621	0					
ANR	868815	Callee	i18n		868621	0					
ANR	868816	Identifier	i18n		868621	0					
ANR	868817	ArgumentList	"""Maximize/restore running window on %1"""		868621	1					
ANR	868818	Argument	"""Maximize/restore running window on %1"""		868621	0					
ANR	868819	PrimaryExpression	"""Maximize/restore running window on %1"""		868621	0					
ANR	868820	Argument	desktopName		868621	1					
ANR	868821	Identifier	desktopName		868621	0					
ANR	868822	BreakStatement	break ;	441:8:19458:19463	868621	8	True				
ANR	868823	Label	case FullscreenAction :	442:4:19469:19490	868621	9	True				
ANR	868824	Identifier	FullscreenAction		868621	0					
ANR	868825	ExpressionStatement	"match . setSubtext ( i18n ( ""Toggle fullscreen for running window on %1"" , desktopName ) )"	443:8:19500:19581	868621	10	True				
ANR	868826	CallExpression	"match . setSubtext ( i18n ( ""Toggle fullscreen for running window on %1"" , desktopName ) )"		868621	0					
ANR	868827	Callee	match . setSubtext		868621	0					
ANR	868828	MemberAccess	match . setSubtext		868621	0					
ANR	868829	Identifier	match		868621	0					
ANR	868830	Identifier	setSubtext		868621	1					
ANR	868831	ArgumentList	"i18n ( ""Toggle fullscreen for running window on %1"" , desktopName )"		868621	1					
ANR	868832	Argument	"i18n ( ""Toggle fullscreen for running window on %1"" , desktopName )"		868621	0					
ANR	868833	CallExpression	"i18n ( ""Toggle fullscreen for running window on %1"" , desktopName )"		868621	0					
ANR	868834	Callee	i18n		868621	0					
ANR	868835	Identifier	i18n		868621	0					
ANR	868836	ArgumentList	"""Toggle fullscreen for running window on %1"""		868621	1					
ANR	868837	Argument	"""Toggle fullscreen for running window on %1"""		868621	0					
ANR	868838	PrimaryExpression	"""Toggle fullscreen for running window on %1"""		868621	0					
ANR	868839	Argument	desktopName		868621	1					
ANR	868840	Identifier	desktopName		868621	0					
ANR	868841	BreakStatement	break ;	444:8:19591:19596	868621	11	True				
ANR	868842	Label	case ShadeAction :	445:4:19602:19618	868621	12	True				
ANR	868843	Identifier	ShadeAction		868621	0					
ANR	868844	ExpressionStatement	"match . setSubtext ( i18n ( ""(Un)shade running window on %1"" , desktopName ) )"	446:8:19628:19697	868621	13	True				
ANR	868845	CallExpression	"match . setSubtext ( i18n ( ""(Un)shade running window on %1"" , desktopName ) )"		868621	0					
ANR	868846	Callee	match . setSubtext		868621	0					
ANR	868847	MemberAccess	match . setSubtext		868621	0					
ANR	868848	Identifier	match		868621	0					
ANR	868849	Identifier	setSubtext		868621	1					
ANR	868850	ArgumentList	"i18n ( ""(Un)shade running window on %1"" , desktopName )"		868621	1					
ANR	868851	Argument	"i18n ( ""(Un)shade running window on %1"" , desktopName )"		868621	0					
ANR	868852	CallExpression	"i18n ( ""(Un)shade running window on %1"" , desktopName )"		868621	0					
ANR	868853	Callee	i18n		868621	0					
ANR	868854	Identifier	i18n		868621	0					
ANR	868855	ArgumentList	"""(Un)shade running window on %1"""		868621	1					
ANR	868856	Argument	"""(Un)shade running window on %1"""		868621	0					
ANR	868857	PrimaryExpression	"""(Un)shade running window on %1"""		868621	0					
ANR	868858	Argument	desktopName		868621	1					
ANR	868859	Identifier	desktopName		868621	0					
ANR	868860	BreakStatement	break ;	447:8:19707:19712	868621	14	True				
ANR	868861	Label	case KeepAboveAction :	448:4:19718:19738	868621	15	True				
ANR	868862	Identifier	KeepAboveAction		868621	0					
ANR	868863	ExpressionStatement	"match . setSubtext ( i18n ( ""Toggle keep above for running window on %1"" , desktopName ) )"	449:8:19748:19829	868621	16	True				
ANR	868864	CallExpression	"match . setSubtext ( i18n ( ""Toggle keep above for running window on %1"" , desktopName ) )"		868621	0					
ANR	868865	Callee	match . setSubtext		868621	0					
ANR	868866	MemberAccess	match . setSubtext		868621	0					
ANR	868867	Identifier	match		868621	0					
ANR	868868	Identifier	setSubtext		868621	1					
ANR	868869	ArgumentList	"i18n ( ""Toggle keep above for running window on %1"" , desktopName )"		868621	1					
ANR	868870	Argument	"i18n ( ""Toggle keep above for running window on %1"" , desktopName )"		868621	0					
ANR	868871	CallExpression	"i18n ( ""Toggle keep above for running window on %1"" , desktopName )"		868621	0					
ANR	868872	Callee	i18n		868621	0					
ANR	868873	Identifier	i18n		868621	0					
ANR	868874	ArgumentList	"""Toggle keep above for running window on %1"""		868621	1					
ANR	868875	Argument	"""Toggle keep above for running window on %1"""		868621	0					
ANR	868876	PrimaryExpression	"""Toggle keep above for running window on %1"""		868621	0					
ANR	868877	Argument	desktopName		868621	1					
ANR	868878	Identifier	desktopName		868621	0					
ANR	868879	BreakStatement	break ;	450:8:19839:19844	868621	17	True				
ANR	868880	Label	case KeepBelowAction :	451:4:19850:19870	868621	18	True				
ANR	868881	Identifier	KeepBelowAction		868621	0					
ANR	868882	ExpressionStatement	"match . setSubtext ( i18n ( ""Toggle keep below running window on %1"" , desktopName ) )"	452:8:19880:19957	868621	19	True				
ANR	868883	CallExpression	"match . setSubtext ( i18n ( ""Toggle keep below running window on %1"" , desktopName ) )"		868621	0					
ANR	868884	Callee	match . setSubtext		868621	0					
ANR	868885	MemberAccess	match . setSubtext		868621	0					
ANR	868886	Identifier	match		868621	0					
ANR	868887	Identifier	setSubtext		868621	1					
ANR	868888	ArgumentList	"i18n ( ""Toggle keep below running window on %1"" , desktopName )"		868621	1					
ANR	868889	Argument	"i18n ( ""Toggle keep below running window on %1"" , desktopName )"		868621	0					
ANR	868890	CallExpression	"i18n ( ""Toggle keep below running window on %1"" , desktopName )"		868621	0					
ANR	868891	Callee	i18n		868621	0					
ANR	868892	Identifier	i18n		868621	0					
ANR	868893	ArgumentList	"""Toggle keep below running window on %1"""		868621	1					
ANR	868894	Argument	"""Toggle keep below running window on %1"""		868621	0					
ANR	868895	PrimaryExpression	"""Toggle keep below running window on %1"""		868621	0					
ANR	868896	Argument	desktopName		868621	1					
ANR	868897	Identifier	desktopName		868621	0					
ANR	868898	BreakStatement	break ;	453:8:19967:19972	868621	20	True				
ANR	868899	Label	case ActivateAction :	454:4:19978:19997	868621	21	True				
ANR	868900	Identifier	ActivateAction		868621	0					
ANR	868901	Label	default :	455:4:20003:20010	868621	22	True				
ANR	868902	Identifier	default		868621	0					
ANR	868903	ExpressionStatement	"match . setSubtext ( i18n ( ""Activate running window on %1"" , desktopName ) )"	456:8:20020:20088	868621	23	True				
ANR	868904	CallExpression	"match . setSubtext ( i18n ( ""Activate running window on %1"" , desktopName ) )"		868621	0					
ANR	868905	Callee	match . setSubtext		868621	0					
ANR	868906	MemberAccess	match . setSubtext		868621	0					
ANR	868907	Identifier	match		868621	0					
ANR	868908	Identifier	setSubtext		868621	1					
ANR	868909	ArgumentList	"i18n ( ""Activate running window on %1"" , desktopName )"		868621	1					
ANR	868910	Argument	"i18n ( ""Activate running window on %1"" , desktopName )"		868621	0					
ANR	868911	CallExpression	"i18n ( ""Activate running window on %1"" , desktopName )"		868621	0					
ANR	868912	Callee	i18n		868621	0					
ANR	868913	Identifier	i18n		868621	0					
ANR	868914	ArgumentList	"""Activate running window on %1"""		868621	1					
ANR	868915	Argument	"""Activate running window on %1"""		868621	0					
ANR	868916	PrimaryExpression	"""Activate running window on %1"""		868621	0					
ANR	868917	Argument	desktopName		868621	1					
ANR	868918	Identifier	desktopName		868621	0					
ANR	868919	BreakStatement	break ;	457:8:20098:20103	868621	24	True				
ANR	868920	ExpressionStatement	match . setRelevance ( relevance )	459:4:20115:20144	868621	10	True				
ANR	868921	CallExpression	match . setRelevance ( relevance )		868621	0					
ANR	868922	Callee	match . setRelevance		868621	0					
ANR	868923	MemberAccess	match . setRelevance		868621	0					
ANR	868924	Identifier	match		868621	0					
ANR	868925	Identifier	setRelevance		868621	1					
ANR	868926	ArgumentList	relevance		868621	1					
ANR	868927	Argument	relevance		868621	0					
ANR	868928	Identifier	relevance		868621	0					
ANR	868929	ReturnStatement	return match ;	460:4:20150:20162	868621	11	True				
ANR	868930	Identifier	match		868621	0					
ANR	868931	ReturnType	Plasma :: QueryMatch		868621	1					
ANR	868932	Identifier	WindowsRunner :: windowMatch		868621	2					
ANR	868933	ParameterList	"const KWindowInfo & info , WindowAction action , qreal relevance , Plasma :: QueryMatch :: Type type"		868621	3					
ANR	868934	Parameter	const KWindowInfo & info	415:46:18430:18452	868621	0	True				
ANR	868935	ParameterType	const KWindowInfo &		868621	0					
ANR	868936	Identifier	info		868621	1					
ANR	868937	Parameter	WindowAction action	415:71:18455:18473	868621	1	True				
ANR	868938	ParameterType	WindowAction		868621	0					
ANR	868939	Identifier	action		868621	1					
ANR	868940	Parameter	qreal relevance	415:92:18476:18490	868621	2	True				
ANR	868941	ParameterType	qreal		868621	0					
ANR	868942	Identifier	relevance		868621	1					
ANR	868943	Parameter	Plasma :: QueryMatch :: Type type	415:109:18493:18521	868621	3	True				
ANR	868944	ParameterType	Plasma :: QueryMatch :: Type		868621	0					
ANR	868945	Identifier	type		868621	1					
ANR	868946	CFGEntryNode	ENTRY		868621		True				
ANR	868947	CFGExitNode	EXIT		868621		True				
ANR	868948	Symbol	* m_desktopNames		868621						
ANR	868949	Symbol	NET :: OnAllDesktops		868621						
ANR	868950	Symbol	KWindowSystem :: currentDesktop		868621						
ANR	868951	Symbol	m_desktopNames		868621						
ANR	868952	Symbol	match		868621						
ANR	868953	Symbol	* desktop		868621						
ANR	868954	Symbol	KWindowSystem :: desktopName		868621						
ANR	868955	Symbol	* m_icons		868621						
ANR	868956	Symbol	type		868621						
ANR	868957	Symbol	relevance		868621						
ANR	868958	Symbol	i18n		868621						
ANR	868959	Symbol	QString :: number		868621						
ANR	868960	Symbol	* info . win		868621						
ANR	868961	Symbol	info . name		868621						
ANR	868962	Symbol	desktopName		868621						
ANR	868963	Symbol	QString		868621						
ANR	868964	Symbol	m_icons		868621						
ANR	868965	Symbol	desktop		868621						
ANR	868966	Symbol	action		868621						
ANR	868967	Symbol	* info		868621						
ANR	868968	Symbol	m_desktopNames . size		868621						
ANR	868969	Symbol	info . desktop		868621						
ANR	868970	Symbol	info . win		868621						
ANR	868971	Symbol	info		868621						
ANR	868972	Function	WindowsRunner :: actionSupported	463:0:20167:20792							
ANR	868973	FunctionDef	"WindowsRunner :: actionSupported (const KWindowInfo & info , WindowAction action)"		868972	0					
ANR	868974	CompoundStatement		464:0:20249:20792	868972	0					
ANR	868975	SwitchStatement	switch ( action )		868972	0					
ANR	868976	Condition	action	465:12:20263:20268	868972	0	True				
ANR	868977	Identifier	action		868972	0					
ANR	868978	CompoundStatement		2:20:21:21	868972	1					
ANR	868979	Label	case CloseAction :	466:4:20277:20293	868972	0	True				
ANR	868980	Identifier	CloseAction		868972	0					
ANR	868981	ReturnStatement	return info . actionSupported ( NET :: ActionClose ) ;	467:8:20303:20348	868972	1	True				
ANR	868982	CallExpression	info . actionSupported ( NET :: ActionClose )		868972	0					
ANR	868983	Callee	info . actionSupported		868972	0					
ANR	868984	MemberAccess	info . actionSupported		868972	0					
ANR	868985	Identifier	info		868972	0					
ANR	868986	Identifier	actionSupported		868972	1					
ANR	868987	ArgumentList	NET :: ActionClose		868972	1					
ANR	868988	Argument	NET :: ActionClose		868972	0					
ANR	868989	Identifier	NET :: ActionClose		868972	0					
ANR	868990	Label	case MinimizeAction :	468:4:20354:20373	868972	2	True				
ANR	868991	Identifier	MinimizeAction		868972	0					
ANR	868992	ReturnStatement	return info . actionSupported ( NET :: ActionMinimize ) ;	469:8:20383:20431	868972	3	True				
ANR	868993	CallExpression	info . actionSupported ( NET :: ActionMinimize )		868972	0					
ANR	868994	Callee	info . actionSupported		868972	0					
ANR	868995	MemberAccess	info . actionSupported		868972	0					
ANR	868996	Identifier	info		868972	0					
ANR	868997	Identifier	actionSupported		868972	1					
ANR	868998	ArgumentList	NET :: ActionMinimize		868972	1					
ANR	868999	Argument	NET :: ActionMinimize		868972	0					
ANR	869000	Identifier	NET :: ActionMinimize		868972	0					
ANR	869001	Label	case MaximizeAction :	470:4:20437:20456	868972	4	True				
ANR	869002	Identifier	MaximizeAction		868972	0					
ANR	869003	ReturnStatement	return info . actionSupported ( NET :: ActionMax ) ;	471:8:20466:20509	868972	5	True				
ANR	869004	CallExpression	info . actionSupported ( NET :: ActionMax )		868972	0					
ANR	869005	Callee	info . actionSupported		868972	0					
ANR	869006	MemberAccess	info . actionSupported		868972	0					
ANR	869007	Identifier	info		868972	0					
ANR	869008	Identifier	actionSupported		868972	1					
ANR	869009	ArgumentList	NET :: ActionMax		868972	1					
ANR	869010	Argument	NET :: ActionMax		868972	0					
ANR	869011	Identifier	NET :: ActionMax		868972	0					
ANR	869012	Label	case ShadeAction :	472:4:20515:20531	868972	6	True				
ANR	869013	Identifier	ShadeAction		868972	0					
ANR	869014	ReturnStatement	return info . actionSupported ( NET :: ActionShade ) ;	473:8:20541:20586	868972	7	True				
ANR	869015	CallExpression	info . actionSupported ( NET :: ActionShade )		868972	0					
ANR	869016	Callee	info . actionSupported		868972	0					
ANR	869017	MemberAccess	info . actionSupported		868972	0					
ANR	869018	Identifier	info		868972	0					
ANR	869019	Identifier	actionSupported		868972	1					
ANR	869020	ArgumentList	NET :: ActionShade		868972	1					
ANR	869021	Argument	NET :: ActionShade		868972	0					
ANR	869022	Identifier	NET :: ActionShade		868972	0					
ANR	869023	Label	case FullscreenAction :	474:4:20592:20613	868972	8	True				
ANR	869024	Identifier	FullscreenAction		868972	0					
ANR	869025	ReturnStatement	return info . actionSupported ( NET :: ActionFullScreen ) ;	475:8:20623:20673	868972	9	True				
ANR	869026	CallExpression	info . actionSupported ( NET :: ActionFullScreen )		868972	0					
ANR	869027	Callee	info . actionSupported		868972	0					
ANR	869028	MemberAccess	info . actionSupported		868972	0					
ANR	869029	Identifier	info		868972	0					
ANR	869030	Identifier	actionSupported		868972	1					
ANR	869031	ArgumentList	NET :: ActionFullScreen		868972	1					
ANR	869032	Argument	NET :: ActionFullScreen		868972	0					
ANR	869033	Identifier	NET :: ActionFullScreen		868972	0					
ANR	869034	Label	case KeepAboveAction :	476:4:20679:20699	868972	10	True				
ANR	869035	Identifier	KeepAboveAction		868972	0					
ANR	869036	Label	case KeepBelowAction :	477:4:20705:20725	868972	11	True				
ANR	869037	Identifier	KeepBelowAction		868972	0					
ANR	869038	Label	case ActivateAction :	478:4:20731:20750	868972	12	True				
ANR	869039	Identifier	ActivateAction		868972	0					
ANR	869040	Label	default :	479:4:20756:20763	868972	13	True				
ANR	869041	Identifier	default		868972	0					
ANR	869042	ReturnStatement	return true ;	480:8:20773:20784	868972	14	True				
ANR	869043	Identifier	true		868972	0					
ANR	869044	ReturnType	bool		868972	1					
ANR	869045	Identifier	WindowsRunner :: actionSupported		868972	2					
ANR	869046	ParameterList	"const KWindowInfo & info , WindowAction action"		868972	3					
ANR	869047	Parameter	const KWindowInfo & info	463:36:20203:20225	868972	0	True				
ANR	869048	ParameterType	const KWindowInfo &		868972	0					
ANR	869049	Identifier	info		868972	1					
ANR	869050	Parameter	WindowAction action	463:61:20228:20246	868972	1	True				
ANR	869051	ParameterType	WindowAction		868972	0					
ANR	869052	Identifier	action		868972	1					
ANR	869053	CFGEntryNode	ENTRY		868972		True				
ANR	869054	CFGExitNode	EXIT		868972		True				
ANR	869055	Symbol	NET :: ActionShade		868972						
ANR	869056	Symbol	NET :: ActionMinimize		868972						
ANR	869057	Symbol	NET :: ActionFullScreen		868972						
ANR	869058	Symbol	info . actionSupported		868972						
ANR	869059	Symbol	true		868972						
ANR	869060	Symbol	action		868972						
ANR	869061	Symbol	NET :: ActionMax		868972						
ANR	869062	Symbol	NET :: ActionClose		868972						
ANR	869063	Symbol	info		868972						
