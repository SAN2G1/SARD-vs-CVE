command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3280	File	data/converged/CVE-2018-6791_plasma-workspace/abstract_generator.cpp								
ANR	3281	Function	AbstractBTGenerator :: AbstractBTGenerator	29:1:1210:1356							
ANR	3282	FunctionDef	AbstractBTGenerator :: AbstractBTGenerator (const Process & process)		3281	0					
ANR	3283	CompoundStatement		33:0:1323:1356	3281	0					
ANR	3284	ExpressionStatement	assert ( process . IsValid ( ) )	34:4:1329:1354	3281	0	True				
ANR	3285	CallExpression	assert ( process . IsValid ( ) )		3281	0					
ANR	3286	Callee	assert		3281	0					
ANR	3287	Identifier	assert		3281	0					
ANR	3288	ArgumentList	process . IsValid ( )		3281	1					
ANR	3289	Argument	process . IsValid ( )		3281	0					
ANR	3290	CallExpression	process . IsValid ( )		3281	0					
ANR	3291	Callee	process . IsValid		3281	0					
ANR	3292	MemberAccess	process . IsValid		3281	0					
ANR	3293	Identifier	process		3281	0					
ANR	3294	Identifier	IsValid		3281	1					
ANR	3295	ArgumentList			3281	1					
ANR	3296	ReturnType	include < QStringList >		3281	1					
ANR	3297	Identifier	AbstractBTGenerator :: AbstractBTGenerator		3281	2					
ANR	3298	ParameterList	const Process & process		3281	3					
ANR	3299	Parameter	const Process & process	31:41:1274:1295	3281	0	True				
ANR	3300	ParameterType	const Process &		3281	0					
ANR	3301	Identifier	process		3281	1					
ANR	3302	CFGEntryNode	ENTRY		3281		True				
ANR	3303	CFGExitNode	EXIT		3281		True				
ANR	3304	Symbol	process		3281						
ANR	3305	Symbol	process . IsValid		3281						
ANR	3306	Function	AbstractBTGenerator :: ~AbstractBTGenerator	37:0:1359:1405							
ANR	3307	FunctionDef	AbstractBTGenerator :: ~AbstractBTGenerator ()		3306	0					
ANR	3308	CompoundStatement		38:0:1403:1405	3306	0					
ANR	3309	Identifier	AbstractBTGenerator :: ~AbstractBTGenerator		3306	1					
ANR	3310	ParameterList			3306	2					
ANR	3311	CFGEntryNode	ENTRY		3306		True				
ANR	3312	CFGExitNode	EXIT		3306		True				
ANR	3313	Function	AbstractBTGenerator :: GetModuleName	41:0:1408:1895							
ANR	3314	FunctionDef	AbstractBTGenerator :: GetModuleName ()		3313	0					
ANR	3315	CompoundStatement		42:0:1453:1895	3313	0					
ANR	3316	IdentifierDeclStatement	IMAGEHLP_MODULE64 module ;	43:4:1459:1483	3313	0	True				
ANR	3317	IdentifierDecl	module		3313	0					
ANR	3318	IdentifierDeclType	IMAGEHLP_MODULE64		3313	0					
ANR	3319	Identifier	module		3313	1					
ANR	3320	ExpressionStatement	"ZeroMemory ( & module , sizeof ( module ) )"	44:4:1489:1524	3313	1	True				
ANR	3321	CallExpression	"ZeroMemory ( & module , sizeof ( module ) )"		3313	0					
ANR	3322	Callee	ZeroMemory		3313	0					
ANR	3323	Identifier	ZeroMemory		3313	0					
ANR	3324	ArgumentList	& module		3313	1					
ANR	3325	Argument	& module		3313	0					
ANR	3326	UnaryOperationExpression	& module		3313	0					
ANR	3327	UnaryOperator	&		3313	0					
ANR	3328	Identifier	module		3313	1					
ANR	3329	Argument	sizeof ( module )		3313	1					
ANR	3330	SizeofExpression	sizeof ( module )		3313	0					
ANR	3331	Sizeof	sizeof		3313	0					
ANR	3332	SizeofOperand	module		3313	1					
ANR	3333	ExpressionStatement	module . SizeOfStruct = sizeof ( IMAGEHLP_MODULE64 )	45:4:1530:1577	3313	2	True				
ANR	3334	AssignmentExpression	module . SizeOfStruct = sizeof ( IMAGEHLP_MODULE64 )		3313	0		=			
ANR	3335	MemberAccess	module . SizeOfStruct		3313	0					
ANR	3336	Identifier	module		3313	0					
ANR	3337	Identifier	SizeOfStruct		3313	1					
ANR	3338	SizeofExpression	sizeof ( IMAGEHLP_MODULE64 )		3313	1					
ANR	3339	Sizeof	sizeof		3313	0					
ANR	3340	SizeofOperand	IMAGEHLP_MODULE64		3313	1					
ANR	3341	IfStatement	"if ( ! SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module ) )"		3313	3					
ANR	3342	Condition	"! SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module )"	47:8:1588:1668	3313	0	True				
ANR	3343	UnaryOperationExpression	"! SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module )"		3313	0					
ANR	3344	UnaryOperator	!		3313	0					
ANR	3345	CallExpression	"SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module )"		3313	1					
ANR	3346	Callee	SymGetModuleInfo64		3313	0					
ANR	3347	Identifier	SymGetModuleInfo64		3313	0					
ANR	3348	ArgumentList	m_process . GetHandle ( )		3313	1					
ANR	3349	Argument	m_process . GetHandle ( )		3313	0					
ANR	3350	CallExpression	m_process . GetHandle ( )		3313	0					
ANR	3351	Callee	m_process . GetHandle		3313	0					
ANR	3352	MemberAccess	m_process . GetHandle		3313	0					
ANR	3353	Identifier	m_process		3313	0					
ANR	3354	Identifier	GetHandle		3313	1					
ANR	3355	ArgumentList			3313	1					
ANR	3356	Argument	m_currentFrame . AddrPC . Offset		3313	1					
ANR	3357	MemberAccess	m_currentFrame . AddrPC . Offset		3313	0					
ANR	3358	MemberAccess	m_currentFrame . AddrPC		3313	0					
ANR	3359	Identifier	m_currentFrame		3313	0					
ANR	3360	Identifier	AddrPC		3313	1					
ANR	3361	Identifier	Offset		3313	1					
ANR	3362	Argument	& module		3313	2					
ANR	3363	UnaryOperationExpression	& module		3313	0					
ANR	3364	UnaryOperator	&		3313	0					
ANR	3365	Identifier	module		3313	1					
ANR	3366	CompoundStatement		7:4:221:221	3313	1					
ANR	3367	ExpressionStatement	"kError ( ) << ""SymGetModuleInfo64 failed: "" << GetLastError ( )"	49:8:1685:1744	3313	0	True				
ANR	3368	ShiftExpression	"kError ( ) << ""SymGetModuleInfo64 failed: "" << GetLastError ( )"		3313	0		<<			
ANR	3369	CallExpression	kError ( )		3313	0					
ANR	3370	Callee	kError		3313	0					
ANR	3371	Identifier	kError		3313	0					
ANR	3372	ArgumentList			3313	1					
ANR	3373	ShiftExpression	"""SymGetModuleInfo64 failed: "" << GetLastError ( )"		3313	1		<<			
ANR	3374	PrimaryExpression	"""SymGetModuleInfo64 failed: """		3313	0					
ANR	3375	CallExpression	GetLastError ( )		3313	1					
ANR	3376	Callee	GetLastError		3313	0					
ANR	3377	Identifier	GetLastError		3313	0					
ANR	3378	ArgumentList			3313	1					
ANR	3379	ReturnStatement	return QLatin1String ( DEFAULT_MODULE ) ;	50:8:1754:1790	3313	1	True				
ANR	3380	CallExpression	QLatin1String ( DEFAULT_MODULE )		3313	0					
ANR	3381	Callee	QLatin1String		3313	0					
ANR	3382	Identifier	QLatin1String		3313	0					
ANR	3383	ArgumentList	DEFAULT_MODULE		3313	1					
ANR	3384	Argument	DEFAULT_MODULE		3313	0					
ANR	3385	Identifier	DEFAULT_MODULE		3313	0					
ANR	3386	IdentifierDeclStatement	"QStringList list = QString ( module . ImageName ) . split ( ""\\\\"" ) ;"	53:4:1803:1859	3313	4	True				
ANR	3387	IdentifierDecl	"list = QString ( module . ImageName ) . split ( ""\\\\"" )"		3313	0					
ANR	3388	IdentifierDeclType	QStringList		3313	0					
ANR	3389	Identifier	list		3313	1					
ANR	3390	AssignmentExpression	"list = QString ( module . ImageName ) . split ( ""\\\\"" )"		3313	2		=			
ANR	3391	Identifier	list		3313	0					
ANR	3392	CallExpression	"QString ( module . ImageName ) . split ( ""\\\\"" )"		3313	1					
ANR	3393	Callee	QString ( module . ImageName ) . split		3313	0					
ANR	3394	MemberAccess	QString ( module . ImageName ) . split		3313	0					
ANR	3395	CallExpression	QString ( module . ImageName )		3313	0					
ANR	3396	Callee	QString		3313	0					
ANR	3397	Identifier	QString		3313	0					
ANR	3398	ArgumentList	module . ImageName		3313	1					
ANR	3399	Argument	module . ImageName		3313	0					
ANR	3400	MemberAccess	module . ImageName		3313	0					
ANR	3401	Identifier	module		3313	0					
ANR	3402	Identifier	ImageName		3313	1					
ANR	3403	Identifier	split		3313	1					
ANR	3404	ArgumentList	"""\\\\"""		3313	1					
ANR	3405	Argument	"""\\\\"""		3313	0					
ANR	3406	PrimaryExpression	"""\\\\"""		3313	0					
ANR	3407	ReturnStatement	return list [ list . size ( ) - 1 ] ;	54:4:1865:1893	3313	5	True				
ANR	3408	ArrayIndexing	list [ list . size ( ) - 1 ]		3313	0					
ANR	3409	Identifier	list		3313	0					
ANR	3410	AdditiveExpression	list . size ( ) - 1		3313	1		-			
ANR	3411	CallExpression	list . size ( )		3313	0					
ANR	3412	Callee	list . size		3313	0					
ANR	3413	MemberAccess	list . size		3313	0					
ANR	3414	Identifier	list		3313	0					
ANR	3415	Identifier	size		3313	1					
ANR	3416	ArgumentList			3313	1					
ANR	3417	PrimaryExpression	1		3313	1					
ANR	3418	ReturnType	QString		3313	1					
ANR	3419	Identifier	AbstractBTGenerator :: GetModuleName		3313	2					
ANR	3420	ParameterList			3313	3					
ANR	3421	CFGEntryNode	ENTRY		3313		True				
ANR	3422	CFGExitNode	EXIT		3313		True				
ANR	3423	Symbol	QString ( module . ImageName ) . split		3313						
ANR	3424	Symbol	module		3313						
ANR	3425	Symbol	DEFAULT_MODULE		3313						
ANR	3426	Symbol	list		3313						
ANR	3427	Symbol	* list . size		3313						
ANR	3428	Symbol	module . SizeOfStruct		3313						
ANR	3429	Symbol	m_currentFrame . AddrPC		3313						
ANR	3430	Symbol	m_currentFrame . AddrPC . Offset		3313						
ANR	3431	Symbol	QLatin1String		3313						
ANR	3432	Symbol	QString		3313						
ANR	3433	Symbol	list . size		3313						
ANR	3434	Symbol	* list		3313						
ANR	3435	Symbol	SymGetModuleInfo64		3313						
ANR	3436	Symbol	& module		3313						
ANR	3437	Symbol	module . ImageName		3313						
ANR	3438	Symbol	m_currentFrame		3313						
ANR	3439	Symbol	m_process . GetHandle		3313						
ANR	3440	Symbol	m_process		3313						
ANR	3441	Function	AbstractBTGenerator :: GetModulePath	57:0:1898:2327							
ANR	3442	FunctionDef	AbstractBTGenerator :: GetModulePath ()		3441	0					
ANR	3443	CompoundStatement		58:0:1943:2327	3441	0					
ANR	3444	IdentifierDeclStatement	IMAGEHLP_MODULE64 module ;	59:4:1949:1973	3441	0	True				
ANR	3445	IdentifierDecl	module		3441	0					
ANR	3446	IdentifierDeclType	IMAGEHLP_MODULE64		3441	0					
ANR	3447	Identifier	module		3441	1					
ANR	3448	ExpressionStatement	"ZeroMemory ( & module , sizeof ( module ) )"	60:4:1979:2014	3441	1	True				
ANR	3449	CallExpression	"ZeroMemory ( & module , sizeof ( module ) )"		3441	0					
ANR	3450	Callee	ZeroMemory		3441	0					
ANR	3451	Identifier	ZeroMemory		3441	0					
ANR	3452	ArgumentList	& module		3441	1					
ANR	3453	Argument	& module		3441	0					
ANR	3454	UnaryOperationExpression	& module		3441	0					
ANR	3455	UnaryOperator	&		3441	0					
ANR	3456	Identifier	module		3441	1					
ANR	3457	Argument	sizeof ( module )		3441	1					
ANR	3458	SizeofExpression	sizeof ( module )		3441	0					
ANR	3459	Sizeof	sizeof		3441	0					
ANR	3460	SizeofOperand	module		3441	1					
ANR	3461	ExpressionStatement	module . SizeOfStruct = sizeof ( IMAGEHLP_MODULE64 )	61:4:2020:2067	3441	2	True				
ANR	3462	AssignmentExpression	module . SizeOfStruct = sizeof ( IMAGEHLP_MODULE64 )		3441	0		=			
ANR	3463	MemberAccess	module . SizeOfStruct		3441	0					
ANR	3464	Identifier	module		3441	0					
ANR	3465	Identifier	SizeOfStruct		3441	1					
ANR	3466	SizeofExpression	sizeof ( IMAGEHLP_MODULE64 )		3441	1					
ANR	3467	Sizeof	sizeof		3441	0					
ANR	3468	SizeofOperand	IMAGEHLP_MODULE64		3441	1					
ANR	3469	IfStatement	"if ( ! SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module ) )"		3441	3					
ANR	3470	Condition	"! SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module )"	63:8:2078:2158	3441	0	True				
ANR	3471	UnaryOperationExpression	"! SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module )"		3441	0					
ANR	3472	UnaryOperator	!		3441	0					
ANR	3473	CallExpression	"SymGetModuleInfo64 ( m_process . GetHandle ( ) , m_currentFrame . AddrPC . Offset , & module )"		3441	1					
ANR	3474	Callee	SymGetModuleInfo64		3441	0					
ANR	3475	Identifier	SymGetModuleInfo64		3441	0					
ANR	3476	ArgumentList	m_process . GetHandle ( )		3441	1					
ANR	3477	Argument	m_process . GetHandle ( )		3441	0					
ANR	3478	CallExpression	m_process . GetHandle ( )		3441	0					
ANR	3479	Callee	m_process . GetHandle		3441	0					
ANR	3480	MemberAccess	m_process . GetHandle		3441	0					
ANR	3481	Identifier	m_process		3441	0					
ANR	3482	Identifier	GetHandle		3441	1					
ANR	3483	ArgumentList			3441	1					
ANR	3484	Argument	m_currentFrame . AddrPC . Offset		3441	1					
ANR	3485	MemberAccess	m_currentFrame . AddrPC . Offset		3441	0					
ANR	3486	MemberAccess	m_currentFrame . AddrPC		3441	0					
ANR	3487	Identifier	m_currentFrame		3441	0					
ANR	3488	Identifier	AddrPC		3441	1					
ANR	3489	Identifier	Offset		3441	1					
ANR	3490	Argument	& module		3441	2					
ANR	3491	UnaryOperationExpression	& module		3441	0					
ANR	3492	UnaryOperator	&		3441	0					
ANR	3493	Identifier	module		3441	1					
ANR	3494	CompoundStatement		7:4:221:221	3441	1					
ANR	3495	ExpressionStatement	"kError ( ) << ""SymGetModuleInfo64 failed: "" << GetLastError ( )"	65:8:2175:2234	3441	0	True				
ANR	3496	ShiftExpression	"kError ( ) << ""SymGetModuleInfo64 failed: "" << GetLastError ( )"		3441	0		<<			
ANR	3497	CallExpression	kError ( )		3441	0					
ANR	3498	Callee	kError		3441	0					
ANR	3499	Identifier	kError		3441	0					
ANR	3500	ArgumentList			3441	1					
ANR	3501	ShiftExpression	"""SymGetModuleInfo64 failed: "" << GetLastError ( )"		3441	1		<<			
ANR	3502	PrimaryExpression	"""SymGetModuleInfo64 failed: """		3441	0					
ANR	3503	CallExpression	GetLastError ( )		3441	1					
ANR	3504	Callee	GetLastError		3441	0					
ANR	3505	Identifier	GetLastError		3441	0					
ANR	3506	ArgumentList			3441	1					
ANR	3507	ReturnStatement	return QLatin1String ( DEFAULT_MODULE ) ;	66:8:2244:2280	3441	1	True				
ANR	3508	CallExpression	QLatin1String ( DEFAULT_MODULE )		3441	0					
ANR	3509	Callee	QLatin1String		3441	0					
ANR	3510	Identifier	QLatin1String		3441	0					
ANR	3511	ArgumentList	DEFAULT_MODULE		3441	1					
ANR	3512	Argument	DEFAULT_MODULE		3441	0					
ANR	3513	Identifier	DEFAULT_MODULE		3441	0					
ANR	3514	ReturnStatement	return QString ( module . ImageName ) ;	69:4:2293:2325	3441	4	True				
ANR	3515	CallExpression	QString ( module . ImageName )		3441	0					
ANR	3516	Callee	QString		3441	0					
ANR	3517	Identifier	QString		3441	0					
ANR	3518	ArgumentList	module . ImageName		3441	1					
ANR	3519	Argument	module . ImageName		3441	0					
ANR	3520	MemberAccess	module . ImageName		3441	0					
ANR	3521	Identifier	module		3441	0					
ANR	3522	Identifier	ImageName		3441	1					
ANR	3523	ReturnType	QString		3441	1					
ANR	3524	Identifier	AbstractBTGenerator :: GetModulePath		3441	2					
ANR	3525	ParameterList			3441	3					
ANR	3526	CFGEntryNode	ENTRY		3441		True				
ANR	3527	CFGExitNode	EXIT		3441		True				
ANR	3528	Symbol	module		3441						
ANR	3529	Symbol	DEFAULT_MODULE		3441						
ANR	3530	Symbol	module . SizeOfStruct		3441						
ANR	3531	Symbol	m_currentFrame . AddrPC		3441						
ANR	3532	Symbol	m_currentFrame . AddrPC . Offset		3441						
ANR	3533	Symbol	QLatin1String		3441						
ANR	3534	Symbol	QString		3441						
ANR	3535	Symbol	SymGetModuleInfo64		3441						
ANR	3536	Symbol	& module		3441						
ANR	3537	Symbol	module . ImageName		3441						
ANR	3538	Symbol	m_process . GetHandle		3441						
ANR	3539	Symbol	m_currentFrame		3441						
ANR	3540	Symbol	m_process		3441						
ANR	3541	Function	AbstractBTGenerator :: Run	72:0:2330:6405							
ANR	3542	FunctionDef	"AbstractBTGenerator :: Run (HANDLE hThread , bool bFaultingThread)"		3541	0					
ANR	3543	CompoundStatement		73:0:2398:6405	3541	0					
ANR	3544	ExpressionStatement	assert ( m_process . IsValid ( ) )	74:4:2404:2431	3541	0	True				
ANR	3545	CallExpression	assert ( m_process . IsValid ( ) )		3541	0					
ANR	3546	Callee	assert		3541	0					
ANR	3547	Identifier	assert		3541	0					
ANR	3548	ArgumentList	m_process . IsValid ( )		3541	1					
ANR	3549	Argument	m_process . IsValid ( )		3541	0					
ANR	3550	CallExpression	m_process . IsValid ( )		3541	0					
ANR	3551	Callee	m_process . IsValid		3541	0					
ANR	3552	MemberAccess	m_process . IsValid		3541	0					
ANR	3553	Identifier	m_process		3541	0					
ANR	3554	Identifier	IsValid		3541	1					
ANR	3555	ArgumentList			3541	1					
ANR	3556	ExpressionStatement	assert ( hThread )	75:4:2437:2452	3541	1	True				
ANR	3557	CallExpression	assert ( hThread )		3541	0					
ANR	3558	Callee	assert		3541	0					
ANR	3559	Identifier	assert		3541	0					
ANR	3560	ArgumentList	hThread		3541	1					
ANR	3561	Argument	hThread		3541	0					
ANR	3562	Identifier	hThread		3541	0					
ANR	3563	IfStatement	if ( ! Init ( ) )		3541	2					
ANR	3564	Condition	! Init ( )	77:8:2463:2469	3541	0	True				
ANR	3565	UnaryOperationExpression	! Init ( )		3541	0					
ANR	3566	UnaryOperator	!		3541	0					
ANR	3567	CallExpression	Init ( )		3541	1					
ANR	3568	Callee	Init		3541	0					
ANR	3569	Identifier	Init		3541	0					
ANR	3570	ArgumentList			3541	1					
ANR	3571	CompoundStatement		6:4:77:77	3541	1					
ANR	3572	ExpressionStatement	assert ( false )	79:8:2486:2499	3541	0	True				
ANR	3573	CallExpression	assert ( false )		3541	0					
ANR	3574	Callee	assert		3541	0					
ANR	3575	Identifier	assert		3541	0					
ANR	3576	ArgumentList	false		3541	1					
ANR	3577	Argument	false		3541	0					
ANR	3578	Identifier	false		3541	0					
ANR	3579	ReturnStatement	return ;	80:8:2509:2515	3541	1	True				
ANR	3580	IdentifierDeclStatement	DWORD dw = SuspendThread ( hThread ) ;	92:4:2922:2955	3541	3	True				
ANR	3581	IdentifierDecl	dw = SuspendThread ( hThread )		3541	0					
ANR	3582	IdentifierDeclType	DWORD		3541	0					
ANR	3583	Identifier	dw		3541	1					
ANR	3584	AssignmentExpression	dw = SuspendThread ( hThread )		3541	2		=			
ANR	3585	Identifier	dw		3541	0					
ANR	3586	CallExpression	SuspendThread ( hThread )		3541	1					
ANR	3587	Callee	SuspendThread		3541	0					
ANR	3588	Identifier	SuspendThread		3541	0					
ANR	3589	ArgumentList	hThread		3541	1					
ANR	3590	Argument	hThread		3541	0					
ANR	3591	Identifier	hThread		3541	0					
ANR	3592	ExpressionStatement	assert ( dw != DWORD ( - 1 ) )	93:4:2961:2984	3541	4	True				
ANR	3593	CallExpression	assert ( dw != DWORD ( - 1 ) )		3541	0					
ANR	3594	Callee	assert		3541	0					
ANR	3595	Identifier	assert		3541	0					
ANR	3596	ArgumentList	dw != DWORD ( - 1 )		3541	1					
ANR	3597	Argument	dw != DWORD ( - 1 )		3541	0					
ANR	3598	EqualityExpression	dw != DWORD ( - 1 )		3541	0		!=			
ANR	3599	Identifier	dw		3541	0					
ANR	3600	CallExpression	DWORD ( - 1 )		3541	1					
ANR	3601	Callee	DWORD		3541	0					
ANR	3602	Identifier	DWORD		3541	0					
ANR	3603	ArgumentList	- 1		3541	1					
ANR	3604	Argument	- 1		3541	0					
ANR	3605	UnaryOperationExpression	- 1		3541	0					
ANR	3606	UnaryOperator	-		3541	0					
ANR	3607	PrimaryExpression	1		3541	1					
ANR	3608	IfStatement	if ( dw == DWORD ( - 1 ) )		3541	5					
ANR	3609	Condition	dw == DWORD ( - 1 )	94:8:2994:3008	3541	0	True				
ANR	3610	EqualityExpression	dw == DWORD ( - 1 )		3541	0		==			
ANR	3611	Identifier	dw		3541	0					
ANR	3612	CallExpression	DWORD ( - 1 )		3541	1					
ANR	3613	Callee	DWORD		3541	0					
ANR	3614	Identifier	DWORD		3541	0					
ANR	3615	ArgumentList	- 1		3541	1					
ANR	3616	Argument	- 1		3541	0					
ANR	3617	UnaryOperationExpression	- 1		3541	0					
ANR	3618	UnaryOperator	-		3541	0					
ANR	3619	PrimaryExpression	1		3541	1					
ANR	3620	CompoundStatement		23:4:616:616	3541	1					
ANR	3621	ExpressionStatement	"kError ( ) << ""SuspendThread() failed: "" << GetLastError ( )"	96:8:3025:3081	3541	0	True				
ANR	3622	ShiftExpression	"kError ( ) << ""SuspendThread() failed: "" << GetLastError ( )"		3541	0		<<			
ANR	3623	CallExpression	kError ( )		3541	0					
ANR	3624	Callee	kError		3541	0					
ANR	3625	Identifier	kError		3541	0					
ANR	3626	ArgumentList			3541	1					
ANR	3627	ShiftExpression	"""SuspendThread() failed: "" << GetLastError ( )"		3541	1		<<			
ANR	3628	PrimaryExpression	"""SuspendThread() failed: """		3541	0					
ANR	3629	CallExpression	GetLastError ( )		3541	1					
ANR	3630	Callee	GetLastError		3541	0					
ANR	3631	Identifier	GetLastError		3541	0					
ANR	3632	ArgumentList			3541	1					
ANR	3633	ReturnStatement	return ;	97:8:3091:3097	3541	1	True				
ANR	3634	IdentifierDeclStatement	CONTEXT context ;	100:4:3110:3125	3541	6	True				
ANR	3635	IdentifierDecl	context		3541	0					
ANR	3636	IdentifierDeclType	CONTEXT		3541	0					
ANR	3637	Identifier	context		3541	1					
ANR	3638	ExpressionStatement	"ZeroMemory ( & context , sizeof ( context ) )"	101:4:3131:3168	3541	7	True				
ANR	3639	CallExpression	"ZeroMemory ( & context , sizeof ( context ) )"		3541	0					
ANR	3640	Callee	ZeroMemory		3541	0					
ANR	3641	Identifier	ZeroMemory		3541	0					
ANR	3642	ArgumentList	& context		3541	1					
ANR	3643	Argument	& context		3541	0					
ANR	3644	UnaryOperationExpression	& context		3541	0					
ANR	3645	UnaryOperator	&		3541	0					
ANR	3646	Identifier	context		3541	1					
ANR	3647	Argument	sizeof ( context )		3541	1					
ANR	3648	SizeofExpression	sizeof ( context )		3541	0					
ANR	3649	Sizeof	sizeof		3541	0					
ANR	3650	SizeofOperand	context		3541	1					
ANR	3651	IfStatement	if ( ! bFaultingThread )		3541	8					
ANR	3652	Condition	! bFaultingThread	102:8:3178:3193	3541	0	True				
ANR	3653	UnaryOperationExpression	! bFaultingThread		3541	0					
ANR	3654	UnaryOperator	!		3541	0					
ANR	3655	Identifier	bFaultingThread		3541	1					
ANR	3656	CompoundStatement		31:4:801:801	3541	1					
ANR	3657	ExpressionStatement	context . ContextFlags = CONTEXT_FULL	105:8:3270:3305	3541	0	True				
ANR	3658	AssignmentExpression	context . ContextFlags = CONTEXT_FULL		3541	0		=			
ANR	3659	MemberAccess	context . ContextFlags		3541	0					
ANR	3660	Identifier	context		3541	0					
ANR	3661	Identifier	ContextFlags		3541	1					
ANR	3662	Identifier	CONTEXT_FULL		3541	1					
ANR	3663	IfStatement	"if ( ! GetThreadContext ( hThread , & context ) )"		3541	1					
ANR	3664	Condition	"! GetThreadContext ( hThread , & context )"	106:12:3319:3354	3541	0	True				
ANR	3665	UnaryOperationExpression	"! GetThreadContext ( hThread , & context )"		3541	0					
ANR	3666	UnaryOperator	!		3541	0					
ANR	3667	CallExpression	"GetThreadContext ( hThread , & context )"		3541	1					
ANR	3668	Callee	GetThreadContext		3541	0					
ANR	3669	Identifier	GetThreadContext		3541	0					
ANR	3670	ArgumentList	hThread		3541	1					
ANR	3671	Argument	hThread		3541	0					
ANR	3672	Identifier	hThread		3541	0					
ANR	3673	Argument	& context		3541	1					
ANR	3674	UnaryOperationExpression	& context		3541	0					
ANR	3675	UnaryOperator	&		3541	0					
ANR	3676	Identifier	context		3541	1					
ANR	3677	CompoundStatement		35:8:966:966	3541	1					
ANR	3678	ExpressionStatement	ResumeThread ( hThread )	108:12:3379:3400	3541	0	True				
ANR	3679	CallExpression	ResumeThread ( hThread )		3541	0					
ANR	3680	Callee	ResumeThread		3541	0					
ANR	3681	Identifier	ResumeThread		3541	0					
ANR	3682	ArgumentList	hThread		3541	1					
ANR	3683	Argument	hThread		3541	0					
ANR	3684	Identifier	hThread		3541	0					
ANR	3685	ExpressionStatement	assert ( false )	109:12:3414:3427	3541	1	True				
ANR	3686	CallExpression	assert ( false )		3541	0					
ANR	3687	Callee	assert		3541	0					
ANR	3688	Identifier	assert		3541	0					
ANR	3689	ArgumentList	false		3541	1					
ANR	3690	Argument	false		3541	0					
ANR	3691	Identifier	false		3541	0					
ANR	3692	ExpressionStatement	"kError ( ) << ""GetThreadContext() failed: "" << GetLastError ( )"	110:12:3441:3500	3541	2	True				
ANR	3693	ShiftExpression	"kError ( ) << ""GetThreadContext() failed: "" << GetLastError ( )"		3541	0		<<			
ANR	3694	CallExpression	kError ( )		3541	0					
ANR	3695	Callee	kError		3541	0					
ANR	3696	Identifier	kError		3541	0					
ANR	3697	ArgumentList			3541	1					
ANR	3698	ShiftExpression	"""GetThreadContext() failed: "" << GetLastError ( )"		3541	1		<<			
ANR	3699	PrimaryExpression	"""GetThreadContext() failed: """		3541	0					
ANR	3700	CallExpression	GetLastError ( )		3541	1					
ANR	3701	Callee	GetLastError		3541	0					
ANR	3702	Identifier	GetLastError		3541	0					
ANR	3703	ArgumentList			3541	1					
ANR	3704	ReturnStatement	return ;	111:12:3514:3520	3541	3	True				
ANR	3705	ElseStatement	else		3541	0					
ANR	3706	CompoundStatement		51:8:1439:1541	3541	0					
ANR	3707	Statement	HANDLE	117:8:3601:3606	3541	0	True				
ANR	3708	Statement	hMapFile	117:15:3608:3615	3541	1	True				
ANR	3709	Statement	=	117:24:3617:3617	3541	2	True				
ANR	3710	Statement	OpenFileMapping	117:26:3619:3633	3541	3	True				
ANR	3711	Statement	(	117:41:3634:3634	3541	4	True				
ANR	3712	Statement	FILE_MAP_ALL_ACCESS	117:42:3635:3653	3541	5	True				
ANR	3713	Statement	","	117:61:3654:3654	3541	6	True				
ANR	3714	Statement	FALSE	117:63:3656:3660	3541	7	True				
ANR	3715	Statement	","	117:68:3661:3661	3541	8	True				
ANR	3716	Statement	L	117:70:3663:3663	3541	9	True				
ANR	3717	Statement	"""Local\\\\KCrashShared"""	117:71:3664:3684	3541	10	True				
ANR	3718	Statement	)	117:92:3685:3685	3541	11	True				
ANR	3719	ExpressionStatement		117:93:3686:3686	3541	12	True				
ANR	3720	IfStatement	if ( hMapFile == NULL )		3541	13					
ANR	3721	Condition	hMapFile == NULL	118:12:3700:3715	3541	0	True				
ANR	3722	EqualityExpression	hMapFile == NULL		3541	0		==			
ANR	3723	Identifier	hMapFile		3541	0					
ANR	3724	Identifier	NULL		3541	1					
ANR	3725	CompoundStatement		47:8:1327:1327	3541	1					
ANR	3726	ExpressionStatement	"kError ( ) << ""OpenFileMapping() failed: "" << GetLastError ( )"	120:12:3740:3798	3541	0	True				
ANR	3727	ShiftExpression	"kError ( ) << ""OpenFileMapping() failed: "" << GetLastError ( )"		3541	0		<<			
ANR	3728	CallExpression	kError ( )		3541	0					
ANR	3729	Callee	kError		3541	0					
ANR	3730	Identifier	kError		3541	0					
ANR	3731	ArgumentList			3541	1					
ANR	3732	ShiftExpression	"""OpenFileMapping() failed: "" << GetLastError ( )"		3541	1		<<			
ANR	3733	PrimaryExpression	"""OpenFileMapping() failed: """		3541	0					
ANR	3734	CallExpression	GetLastError ( )		3541	1					
ANR	3735	Callee	GetLastError		3541	0					
ANR	3736	Identifier	GetLastError		3541	0					
ANR	3737	ArgumentList			3541	1					
ANR	3738	ReturnStatement	return ;	121:12:3812:3818	3541	1	True				
ANR	3739	IdentifierDeclStatement	"CONTEXT * othercontext = ( CONTEXT * ) MapViewOfFile ( hMapFile , FILE_MAP_ALL_ACCESS , 0 , 0 , sizeof ( CONTEXT ) ) ;"	123:8:3838:3940	3541	14	True				
ANR	3740	IdentifierDecl	"* othercontext = ( CONTEXT * ) MapViewOfFile ( hMapFile , FILE_MAP_ALL_ACCESS , 0 , 0 , sizeof ( CONTEXT ) )"		3541	0					
ANR	3741	IdentifierDeclType	CONTEXT *		3541	0					
ANR	3742	Identifier	othercontext		3541	1					
ANR	3743	AssignmentExpression	"* othercontext = ( CONTEXT * ) MapViewOfFile ( hMapFile , FILE_MAP_ALL_ACCESS , 0 , 0 , sizeof ( CONTEXT ) )"		3541	2		=			
ANR	3744	Identifier	othercontext		3541	0					
ANR	3745	CastExpression	"( CONTEXT * ) MapViewOfFile ( hMapFile , FILE_MAP_ALL_ACCESS , 0 , 0 , sizeof ( CONTEXT ) )"		3541	1					
ANR	3746	CastTarget	CONTEXT *		3541	0					
ANR	3747	CallExpression	"MapViewOfFile ( hMapFile , FILE_MAP_ALL_ACCESS , 0 , 0 , sizeof ( CONTEXT ) )"		3541	1					
ANR	3748	Callee	MapViewOfFile		3541	0					
ANR	3749	Identifier	MapViewOfFile		3541	0					
ANR	3750	ArgumentList	hMapFile		3541	1					
ANR	3751	Argument	hMapFile		3541	0					
ANR	3752	Identifier	hMapFile		3541	0					
ANR	3753	Argument	FILE_MAP_ALL_ACCESS		3541	1					
ANR	3754	Identifier	FILE_MAP_ALL_ACCESS		3541	0					
ANR	3755	Argument	0		3541	2					
ANR	3756	PrimaryExpression	0		3541	0					
ANR	3757	Argument	0		3541	3					
ANR	3758	PrimaryExpression	0		3541	0					
ANR	3759	Argument	sizeof ( CONTEXT )		3541	4					
ANR	3760	SizeofExpression	sizeof ( CONTEXT )		3541	0					
ANR	3761	Sizeof	sizeof		3541	0					
ANR	3762	SizeofOperand	CONTEXT		3541	1					
ANR	3763	IfStatement	if ( othercontext == NULL )		3541	15					
ANR	3764	Condition	othercontext == NULL	124:12:3954:3973	3541	0	True				
ANR	3765	EqualityExpression	othercontext == NULL		3541	0		==			
ANR	3766	Identifier	othercontext		3541	0					
ANR	3767	Identifier	NULL		3541	1					
ANR	3768	CompoundStatement		53:8:1585:1585	3541	1					
ANR	3769	ExpressionStatement	"kError ( ) << ""MapViewOfFile() failed: "" << GetLastError ( )"	126:12:3998:4054	3541	0	True				
ANR	3770	ShiftExpression	"kError ( ) << ""MapViewOfFile() failed: "" << GetLastError ( )"		3541	0		<<			
ANR	3771	CallExpression	kError ( )		3541	0					
ANR	3772	Callee	kError		3541	0					
ANR	3773	Identifier	kError		3541	0					
ANR	3774	ArgumentList			3541	1					
ANR	3775	ShiftExpression	"""MapViewOfFile() failed: "" << GetLastError ( )"		3541	1		<<			
ANR	3776	PrimaryExpression	"""MapViewOfFile() failed: """		3541	0					
ANR	3777	CallExpression	GetLastError ( )		3541	1					
ANR	3778	Callee	GetLastError		3541	0					
ANR	3779	Identifier	GetLastError		3541	0					
ANR	3780	ArgumentList			3541	1					
ANR	3781	ExpressionStatement	SafeCloseHandle ( hMapFile )	127:12:4068:4093	3541	1	True				
ANR	3782	CallExpression	SafeCloseHandle ( hMapFile )		3541	0					
ANR	3783	Callee	SafeCloseHandle		3541	0					
ANR	3784	Identifier	SafeCloseHandle		3541	0					
ANR	3785	ArgumentList	hMapFile		3541	1					
ANR	3786	Argument	hMapFile		3541	0					
ANR	3787	Identifier	hMapFile		3541	0					
ANR	3788	ReturnStatement	return ;	128:12:4107:4113	3541	2	True				
ANR	3789	ExpressionStatement	"CopyMemory ( & context , othercontext , sizeof ( CONTEXT ) )"	130:8:4133:4184	3541	16	True				
ANR	3790	CallExpression	"CopyMemory ( & context , othercontext , sizeof ( CONTEXT ) )"		3541	0					
ANR	3791	Callee	CopyMemory		3541	0					
ANR	3792	Identifier	CopyMemory		3541	0					
ANR	3793	ArgumentList	& context		3541	1					
ANR	3794	Argument	& context		3541	0					
ANR	3795	UnaryOperationExpression	& context		3541	0					
ANR	3796	UnaryOperator	&		3541	0					
ANR	3797	Identifier	context		3541	1					
ANR	3798	Argument	othercontext		3541	1					
ANR	3799	Identifier	othercontext		3541	0					
ANR	3800	Argument	sizeof ( CONTEXT )		3541	2					
ANR	3801	SizeofExpression	sizeof ( CONTEXT )		3541	0					
ANR	3802	Sizeof	sizeof		3541	0					
ANR	3803	SizeofOperand	CONTEXT		3541	1					
ANR	3804	ExpressionStatement	UnmapViewOfFile ( othercontext )	131:8:4194:4223	3541	17	True				
ANR	3805	CallExpression	UnmapViewOfFile ( othercontext )		3541	0					
ANR	3806	Callee	UnmapViewOfFile		3541	0					
ANR	3807	Identifier	UnmapViewOfFile		3541	0					
ANR	3808	ArgumentList	othercontext		3541	1					
ANR	3809	Argument	othercontext		3541	0					
ANR	3810	Identifier	othercontext		3541	0					
ANR	3811	ExpressionStatement	SafeCloseHandle ( hMapFile )	132:8:4262:4287	3541	18	True				
ANR	3812	CallExpression	SafeCloseHandle ( hMapFile )		3541	0					
ANR	3813	Callee	SafeCloseHandle		3541	0					
ANR	3814	Identifier	SafeCloseHandle		3541	0					
ANR	3815	ArgumentList	hMapFile		3541	1					
ANR	3816	Argument	hMapFile		3541	0					
ANR	3817	Identifier	hMapFile		3541	0					
ANR	3818	ExpressionStatement	"ZeroMemory ( & m_currentFrame , sizeof ( m_currentFrame ) )"	136:4:4352:4403	3541	9	True				
ANR	3819	CallExpression	"ZeroMemory ( & m_currentFrame , sizeof ( m_currentFrame ) )"		3541	0					
ANR	3820	Callee	ZeroMemory		3541	0					
ANR	3821	Identifier	ZeroMemory		3541	0					
ANR	3822	ArgumentList	& m_currentFrame		3541	1					
ANR	3823	Argument	& m_currentFrame		3541	0					
ANR	3824	UnaryOperationExpression	& m_currentFrame		3541	0					
ANR	3825	UnaryOperator	&		3541	0					
ANR	3826	Identifier	m_currentFrame		3541	1					
ANR	3827	Argument	sizeof ( m_currentFrame )		3541	1					
ANR	3828	SizeofExpression	sizeof ( m_currentFrame )		3541	0					
ANR	3829	Sizeof	sizeof		3541	0					
ANR	3830	SizeofOperand	m_currentFrame		3541	1					
ANR	3831	IdentifierDeclStatement	DWORD machineType = IMAGE_FILE_MACHINE_UNKNOWN ;	137:4:4409:4455	3541	10	True				
ANR	3832	IdentifierDecl	machineType = IMAGE_FILE_MACHINE_UNKNOWN		3541	0					
ANR	3833	IdentifierDeclType	DWORD		3541	0					
ANR	3834	Identifier	machineType		3541	1					
ANR	3835	AssignmentExpression	machineType = IMAGE_FILE_MACHINE_UNKNOWN		3541	2		=			
ANR	3836	Identifier	IMAGE_FILE_MACHINE_UNKNOWN		3541	0					
ANR	3837	Identifier	IMAGE_FILE_MACHINE_UNKNOWN		3541	1					
ANR	3838	ExpressionStatement	machineType = IMAGE_FILE_MACHINE_I386	139:4:4482:4519	3541	11	True				
ANR	3839	AssignmentExpression	machineType = IMAGE_FILE_MACHINE_I386		3541	0		=			
ANR	3840	Identifier	machineType		3541	0					
ANR	3841	Identifier	IMAGE_FILE_MACHINE_I386		3541	1					
ANR	3842	ExpressionStatement	m_currentFrame . AddrPC . Offset = context . Eip	140:4:4525:4567	3541	12	True				
ANR	3843	AssignmentExpression	m_currentFrame . AddrPC . Offset = context . Eip		3541	0		=			
ANR	3844	MemberAccess	m_currentFrame . AddrPC . Offset		3541	0					
ANR	3845	MemberAccess	m_currentFrame . AddrPC		3541	0					
ANR	3846	Identifier	m_currentFrame		3541	0					
ANR	3847	Identifier	AddrPC		3541	1					
ANR	3848	Identifier	Offset		3541	1					
ANR	3849	MemberAccess	context . Eip		3541	1					
ANR	3850	Identifier	context		3541	0					
ANR	3851	Identifier	Eip		3541	1					
ANR	3852	ExpressionStatement	m_currentFrame . AddrFrame . Offset = context . Ebp	141:4:4573:4618	3541	13	True				
ANR	3853	AssignmentExpression	m_currentFrame . AddrFrame . Offset = context . Ebp		3541	0		=			
ANR	3854	MemberAccess	m_currentFrame . AddrFrame . Offset		3541	0					
ANR	3855	MemberAccess	m_currentFrame . AddrFrame		3541	0					
ANR	3856	Identifier	m_currentFrame		3541	0					
ANR	3857	Identifier	AddrFrame		3541	1					
ANR	3858	Identifier	Offset		3541	1					
ANR	3859	MemberAccess	context . Ebp		3541	1					
ANR	3860	Identifier	context		3541	0					
ANR	3861	Identifier	Ebp		3541	1					
ANR	3862	ExpressionStatement	m_currentFrame . AddrStack . Offset = context . Esp	142:4:4624:4669	3541	14	True				
ANR	3863	AssignmentExpression	m_currentFrame . AddrStack . Offset = context . Esp		3541	0		=			
ANR	3864	MemberAccess	m_currentFrame . AddrStack . Offset		3541	0					
ANR	3865	MemberAccess	m_currentFrame . AddrStack		3541	0					
ANR	3866	Identifier	m_currentFrame		3541	0					
ANR	3867	Identifier	AddrStack		3541	1					
ANR	3868	Identifier	Offset		3541	1					
ANR	3869	MemberAccess	context . Esp		3541	1					
ANR	3870	Identifier	context		3541	0					
ANR	3871	Identifier	Esp		3541	1					
ANR	3872	ExpressionStatement	m_currentFrame . AddrPC . Mode = AddrModeFlat	151:4:4948:4989	3541	15	True				
ANR	3873	AssignmentExpression	m_currentFrame . AddrPC . Mode = AddrModeFlat		3541	0		=			
ANR	3874	MemberAccess	m_currentFrame . AddrPC . Mode		3541	0					
ANR	3875	MemberAccess	m_currentFrame . AddrPC		3541	0					
ANR	3876	Identifier	m_currentFrame		3541	0					
ANR	3877	Identifier	AddrPC		3541	1					
ANR	3878	Identifier	Mode		3541	1					
ANR	3879	Identifier	AddrModeFlat		3541	1					
ANR	3880	ExpressionStatement	m_currentFrame . AddrFrame . Mode = AddrModeFlat	152:4:4995:5039	3541	16	True				
ANR	3881	AssignmentExpression	m_currentFrame . AddrFrame . Mode = AddrModeFlat		3541	0		=			
ANR	3882	MemberAccess	m_currentFrame . AddrFrame . Mode		3541	0					
ANR	3883	MemberAccess	m_currentFrame . AddrFrame		3541	0					
ANR	3884	Identifier	m_currentFrame		3541	0					
ANR	3885	Identifier	AddrFrame		3541	1					
ANR	3886	Identifier	Mode		3541	1					
ANR	3887	Identifier	AddrModeFlat		3541	1					
ANR	3888	ExpressionStatement	m_currentFrame . AddrStack . Mode = AddrModeFlat	153:4:5045:5089	3541	17	True				
ANR	3889	AssignmentExpression	m_currentFrame . AddrStack . Mode = AddrModeFlat		3541	0		=			
ANR	3890	MemberAccess	m_currentFrame . AddrStack . Mode		3541	0					
ANR	3891	MemberAccess	m_currentFrame . AddrStack		3541	0					
ANR	3892	Identifier	m_currentFrame		3541	0					
ANR	3893	Identifier	AddrStack		3541	1					
ANR	3894	Identifier	Mode		3541	1					
ANR	3895	Identifier	AddrModeFlat		3541	1					
ANR	3896	ExpressionStatement	SymSetOptions ( SymGetOptions ( ) | SYMOPT_UNDNAME | SYMOPT_LOAD_LINES )	155:4:5096:5163	3541	18	True				
ANR	3897	CallExpression	SymSetOptions ( SymGetOptions ( ) | SYMOPT_UNDNAME | SYMOPT_LOAD_LINES )		3541	0					
ANR	3898	Callee	SymSetOptions		3541	0					
ANR	3899	Identifier	SymSetOptions		3541	0					
ANR	3900	ArgumentList	SymGetOptions ( ) | SYMOPT_UNDNAME | SYMOPT_LOAD_LINES		3541	1					
ANR	3901	Argument	SymGetOptions ( ) | SYMOPT_UNDNAME | SYMOPT_LOAD_LINES		3541	0					
ANR	3902	InclusiveOrExpression	SymGetOptions ( ) | SYMOPT_UNDNAME | SYMOPT_LOAD_LINES		3541	0		|			
ANR	3903	CallExpression	SymGetOptions ( )		3541	0					
ANR	3904	Callee	SymGetOptions		3541	0					
ANR	3905	Identifier	SymGetOptions		3541	0					
ANR	3906	ArgumentList			3541	1					
ANR	3907	InclusiveOrExpression	SYMOPT_UNDNAME | SYMOPT_LOAD_LINES		3541	1		|			
ANR	3908	Identifier	SYMOPT_UNDNAME		3541	0					
ANR	3909	Identifier	SYMOPT_LOAD_LINES		3541	1					
ANR	3910	ExpressionStatement	"SymInitialize ( m_process . GetHandle ( ) , NULL , FALSE )"	156:4:5169:5218	3541	19	True				
ANR	3911	CallExpression	"SymInitialize ( m_process . GetHandle ( ) , NULL , FALSE )"		3541	0					
ANR	3912	Callee	SymInitialize		3541	0					
ANR	3913	Identifier	SymInitialize		3541	0					
ANR	3914	ArgumentList	m_process . GetHandle ( )		3541	1					
ANR	3915	Argument	m_process . GetHandle ( )		3541	0					
ANR	3916	CallExpression	m_process . GetHandle ( )		3541	0					
ANR	3917	Callee	m_process . GetHandle		3541	0					
ANR	3918	MemberAccess	m_process . GetHandle		3541	0					
ANR	3919	Identifier	m_process		3541	0					
ANR	3920	Identifier	GetHandle		3541	1					
ANR	3921	ArgumentList			3541	1					
ANR	3922	Argument	NULL		3541	1					
ANR	3923	Identifier	NULL		3541	0					
ANR	3924	Argument	FALSE		3541	2					
ANR	3925	Identifier	FALSE		3541	0					
ANR	3926	ExpressionStatement	LoadSymbols ( )	158:4:5225:5238	3541	20	True				
ANR	3927	CallExpression	LoadSymbols ( )		3541	0					
ANR	3928	Callee	LoadSymbols		3541	0					
ANR	3929	Identifier	LoadSymbols		3541	0					
ANR	3930	ArgumentList			3541	1					
ANR	3931	ForStatement	for ( int i = 0 ; ; i ++ )		3541	21					
ANR	3932	ForInit	int i = 0 ;	160:9:5250:5259	3541	0	True				
ANR	3933	IdentifierDeclStatement	int i = 0 ;		3541	0					
ANR	3934	IdentifierDecl	i = 0		3541	0					
ANR	3935	IdentifierDeclType	int		3541	0					
ANR	3936	Identifier	i		3541	1					
ANR	3937	AssignmentExpression	i = 0		3541	2		=			
ANR	3938	Identifier	i		3541	0					
ANR	3939	PrimaryExpression	0		3541	1					
ANR	3940	PostIncDecOperationExpression	i ++	160:33:5274:5276	3541	1	True				
ANR	3941	Identifier	i		3541	0					
ANR	3942	IncDec	++		3541	1					
ANR	3943	CompoundStatement		119:8:3809:3834	3541	2					
ANR	3944	ExpressionStatement	SetLastError ( 0 )	162:8:5293:5308	3541	0	True				
ANR	3945	CallExpression	SetLastError ( 0 )		3541	0					
ANR	3946	Callee	SetLastError		3541	0					
ANR	3947	Identifier	SetLastError		3541	0					
ANR	3948	ArgumentList	0		3541	1					
ANR	3949	Argument	0		3541	0					
ANR	3950	PrimaryExpression	0		3541	0					
ANR	3951	IfStatement	"if ( ! StackWalk64 ( machineType , m_process . GetHandle ( ) , hThread , & m_currentFrame , & context , & Callbacks :: ReadProcessMemory , & Callbacks :: SymFunctionTableAccess64 , & Callbacks :: SymGetModuleBase64 , NULL ) )"		3541	1					
ANR	3952	Condition	"! StackWalk64 ( machineType , m_process . GetHandle ( ) , hThread , & m_currentFrame , & context , & Callbacks :: ReadProcessMemory , & Callbacks :: SymFunctionTableAccess64 , & Callbacks :: SymGetModuleBase64 , NULL )"	164:12:5323:5622	3541	0	True				
ANR	3953	UnaryOperationExpression	"! StackWalk64 ( machineType , m_process . GetHandle ( ) , hThread , & m_currentFrame , & context , & Callbacks :: ReadProcessMemory , & Callbacks :: SymFunctionTableAccess64 , & Callbacks :: SymGetModuleBase64 , NULL )"		3541	0					
ANR	3954	UnaryOperator	!		3541	0					
ANR	3955	CallExpression	"StackWalk64 ( machineType , m_process . GetHandle ( ) , hThread , & m_currentFrame , & context , & Callbacks :: ReadProcessMemory , & Callbacks :: SymFunctionTableAccess64 , & Callbacks :: SymGetModuleBase64 , NULL )"		3541	1					
ANR	3956	Callee	StackWalk64		3541	0					
ANR	3957	Identifier	StackWalk64		3541	0					
ANR	3958	ArgumentList	machineType		3541	1					
ANR	3959	Argument	machineType		3541	0					
ANR	3960	Identifier	machineType		3541	0					
ANR	3961	Argument	m_process . GetHandle ( )		3541	1					
ANR	3962	CallExpression	m_process . GetHandle ( )		3541	0					
ANR	3963	Callee	m_process . GetHandle		3541	0					
ANR	3964	MemberAccess	m_process . GetHandle		3541	0					
ANR	3965	Identifier	m_process		3541	0					
ANR	3966	Identifier	GetHandle		3541	1					
ANR	3967	ArgumentList			3541	1					
ANR	3968	Argument	hThread		3541	2					
ANR	3969	Identifier	hThread		3541	0					
ANR	3970	Argument	& m_currentFrame		3541	3					
ANR	3971	UnaryOperationExpression	& m_currentFrame		3541	0					
ANR	3972	UnaryOperator	&		3541	0					
ANR	3973	Identifier	m_currentFrame		3541	1					
ANR	3974	Argument	& context		3541	4					
ANR	3975	UnaryOperationExpression	& context		3541	0					
ANR	3976	UnaryOperator	&		3541	0					
ANR	3977	Identifier	context		3541	1					
ANR	3978	Argument	& Callbacks :: ReadProcessMemory		3541	5					
ANR	3979	UnaryOperationExpression	& Callbacks :: ReadProcessMemory		3541	0					
ANR	3980	UnaryOperator	&		3541	0					
ANR	3981	Identifier	Callbacks :: ReadProcessMemory		3541	1					
ANR	3982	Argument	& Callbacks :: SymFunctionTableAccess64		3541	6					
ANR	3983	UnaryOperationExpression	& Callbacks :: SymFunctionTableAccess64		3541	0					
ANR	3984	UnaryOperator	&		3541	0					
ANR	3985	Identifier	Callbacks :: SymFunctionTableAccess64		3541	1					
ANR	3986	Argument	& Callbacks :: SymGetModuleBase64		3541	7					
ANR	3987	UnaryOperationExpression	& Callbacks :: SymGetModuleBase64		3541	0					
ANR	3988	UnaryOperator	&		3541	0					
ANR	3989	Identifier	Callbacks :: SymGetModuleBase64		3541	1					
ANR	3990	Argument	NULL		3541	8					
ANR	3991	Identifier	NULL		3541	0					
ANR	3992	CompoundStatement		103:12:3248:3263	3541	1					
ANR	3993	IdentifierDeclStatement	emit Finished ( ) ;	175:12:5647:5662	3541	0	True				
ANR	3994	IdentifierDecl	Finished ( )		3541	0					
ANR	3995	IdentifierDeclType	emit		3541	0					
ANR	3996	Identifier	Finished		3541	1					
ANR	3997	ExpressionStatement	"kDebug ( ) << ""Stackwalk finished; GetLastError="" << GetLastError ( )"	176:12:5676:5741	3541	1	True				
ANR	3998	ShiftExpression	"kDebug ( ) << ""Stackwalk finished; GetLastError="" << GetLastError ( )"		3541	0		<<			
ANR	3999	CallExpression	kDebug ( )		3541	0					
ANR	4000	Callee	kDebug		3541	0					
ANR	4001	Identifier	kDebug		3541	0					
ANR	4002	ArgumentList			3541	1					
ANR	4003	ShiftExpression	"""Stackwalk finished; GetLastError="" << GetLastError ( )"		3541	1		<<			
ANR	4004	PrimaryExpression	"""Stackwalk finished; GetLastError="""		3541	0					
ANR	4005	CallExpression	GetLastError ( )		3541	1					
ANR	4006	Callee	GetLastError		3541	0					
ANR	4007	Identifier	GetLastError		3541	0					
ANR	4008	ArgumentList			3541	1					
ANR	4009	BreakStatement	break ;	177:12:5755:5760	3541	2	True				
ANR	4010	ExpressionStatement	FrameChanged ( )	180:8:5789:5803	3541	2	True				
ANR	4011	CallExpression	FrameChanged ( )		3541	0					
ANR	4012	Callee	FrameChanged		3541	0					
ANR	4013	Identifier	FrameChanged		3541	0					
ANR	4014	ArgumentList			3541	1					
ANR	4015	IdentifierDeclStatement	QString modulename = GetModuleName ( ) ;	182:8:5814:5850	3541	3	True				
ANR	4016	IdentifierDecl	modulename = GetModuleName ( )		3541	0					
ANR	4017	IdentifierDeclType	QString		3541	0					
ANR	4018	Identifier	modulename		3541	1					
ANR	4019	AssignmentExpression	modulename = GetModuleName ( )		3541	2		=			
ANR	4020	Identifier	modulename		3541	0					
ANR	4021	CallExpression	GetModuleName ( )		3541	1					
ANR	4022	Callee	GetModuleName		3541	0					
ANR	4023	Identifier	GetModuleName		3541	0					
ANR	4024	ArgumentList			3541	1					
ANR	4025	IdentifierDeclStatement	QString functionname = GetFunctionName ( ) ;	183:8:5860:5900	3541	4	True				
ANR	4026	IdentifierDecl	functionname = GetFunctionName ( )		3541	0					
ANR	4027	IdentifierDeclType	QString		3541	0					
ANR	4028	Identifier	functionname		3541	1					
ANR	4029	AssignmentExpression	functionname = GetFunctionName ( )		3541	2		=			
ANR	4030	Identifier	functionname		3541	0					
ANR	4031	CallExpression	GetFunctionName ( )		3541	1					
ANR	4032	Callee	GetFunctionName		3541	0					
ANR	4033	Identifier	GetFunctionName		3541	0					
ANR	4034	ArgumentList			3541	1					
ANR	4035	IdentifierDeclStatement	QString file = GetFile ( ) ;	184:8:5910:5934	3541	5	True				
ANR	4036	IdentifierDecl	file = GetFile ( )		3541	0					
ANR	4037	IdentifierDeclType	QString		3541	0					
ANR	4038	Identifier	file		3541	1					
ANR	4039	AssignmentExpression	file = GetFile ( )		3541	2		=			
ANR	4040	Identifier	file		3541	0					
ANR	4041	CallExpression	GetFile ( )		3541	1					
ANR	4042	Callee	GetFile		3541	0					
ANR	4043	Identifier	GetFile		3541	0					
ANR	4044	ArgumentList			3541	1					
ANR	4045	IdentifierDeclStatement	int line = GetLine ( ) ;	185:8:5944:5964	3541	6	True				
ANR	4046	IdentifierDecl	line = GetLine ( )		3541	0					
ANR	4047	IdentifierDeclType	int		3541	0					
ANR	4048	Identifier	line		3541	1					
ANR	4049	AssignmentExpression	line = GetLine ( )		3541	2		=			
ANR	4050	Identifier	line		3541	0					
ANR	4051	CallExpression	GetLine ( )		3541	1					
ANR	4052	Callee	GetLine		3541	0					
ANR	4053	Identifier	GetLine		3541	0					
ANR	4054	ArgumentList			3541	1					
ANR	4055	IdentifierDeclStatement	"QString address = QString :: number ( m_currentFrame . AddrPC . Offset , 16 ) ;"	186:8:5974:6041	3541	7	True				
ANR	4056	IdentifierDecl	"address = QString :: number ( m_currentFrame . AddrPC . Offset , 16 )"		3541	0					
ANR	4057	IdentifierDeclType	QString		3541	0					
ANR	4058	Identifier	address		3541	1					
ANR	4059	AssignmentExpression	"address = QString :: number ( m_currentFrame . AddrPC . Offset , 16 )"		3541	2		=			
ANR	4060	Identifier	address		3541	0					
ANR	4061	CallExpression	"QString :: number ( m_currentFrame . AddrPC . Offset , 16 )"		3541	1					
ANR	4062	Callee	QString :: number		3541	0					
ANR	4063	Identifier	QString :: number		3541	0					
ANR	4064	ArgumentList	m_currentFrame . AddrPC . Offset		3541	1					
ANR	4065	Argument	m_currentFrame . AddrPC . Offset		3541	0					
ANR	4066	MemberAccess	m_currentFrame . AddrPC . Offset		3541	0					
ANR	4067	MemberAccess	m_currentFrame . AddrPC		3541	0					
ANR	4068	Identifier	m_currentFrame		3541	0					
ANR	4069	Identifier	AddrPC		3541	1					
ANR	4070	Identifier	Offset		3541	1					
ANR	4071	Argument	16		3541	1					
ANR	4072	PrimaryExpression	16		3541	0					
ANR	4073	IdentifierDeclStatement	QString debugLine = QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg ( address ) ;	188:8:6052:6189	3541	8	True				
ANR	4074	IdentifierDecl	debugLine = QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg ( address )		3541	0					
ANR	4075	IdentifierDeclType	QString		3541	0					
ANR	4076	Identifier	debugLine		3541	1					
ANR	4077	AssignmentExpression	debugLine = QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg ( address )		3541	2		=			
ANR	4078	Identifier	debugLine		3541	0					
ANR	4079	CallExpression	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg ( address )		3541	1					
ANR	4080	Callee	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg		3541	0					
ANR	4081	MemberAccess	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg		3541	0					
ANR	4082	CallExpression	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line )		3541	0					
ANR	4083	Callee	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg		3541	0					
ANR	4084	MemberAccess	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg		3541	0					
ANR	4085	CallExpression	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file )		3541	0					
ANR	4086	Callee	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg		3541	0					
ANR	4087	MemberAccess	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg		3541	0					
ANR	4088	CallExpression	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname )		3541	0					
ANR	4089	Callee	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg		3541	0					
ANR	4090	MemberAccess	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg		3541	0					
ANR	4091	CallExpression	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename )		3541	0					
ANR	4092	Callee	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg		3541	0					
ANR	4093	MemberAccess	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg		3541	0					
ANR	4094	CallExpression	QString :: fromLatin1 ( BACKTRACE_FORMAT )		3541	0					
ANR	4095	Callee	QString :: fromLatin1		3541	0					
ANR	4096	Identifier	QString :: fromLatin1		3541	0					
ANR	4097	ArgumentList	BACKTRACE_FORMAT		3541	1					
ANR	4098	Argument	BACKTRACE_FORMAT		3541	0					
ANR	4099	Identifier	BACKTRACE_FORMAT		3541	0					
ANR	4100	Identifier	arg		3541	1					
ANR	4101	ArgumentList	modulename		3541	1					
ANR	4102	Argument	modulename		3541	0					
ANR	4103	Identifier	modulename		3541	0					
ANR	4104	Identifier	arg		3541	1					
ANR	4105	ArgumentList	functionname		3541	1					
ANR	4106	Argument	functionname		3541	0					
ANR	4107	Identifier	functionname		3541	0					
ANR	4108	Identifier	arg		3541	1					
ANR	4109	ArgumentList	file		3541	1					
ANR	4110	Argument	file		3541	0					
ANR	4111	Identifier	file		3541	0					
ANR	4112	Identifier	arg		3541	1					
ANR	4113	ArgumentList	line		3541	1					
ANR	4114	Argument	line		3541	0					
ANR	4115	Identifier	line		3541	0					
ANR	4116	Identifier	arg		3541	1					
ANR	4117	ArgumentList	address		3541	1					
ANR	4118	Argument	address		3541	0					
ANR	4119	Identifier	address		3541	0					
ANR	4120	IdentifierDeclStatement	emit DebugLine ( debugLine ) ;	191:8:6208:6233	3541	9	True				
ANR	4121	IdentifierDecl	DebugLine ( debugLine )		3541	0					
ANR	4122	IdentifierDeclType	emit		3541	0					
ANR	4123	Identifier	DebugLine		3541	1					
ANR	4124	Identifier	debugLine		3541	2					
ANR	4125	ExpressionStatement	ResumeThread ( hThread )	196:4:6342:6363	3541	22	True				
ANR	4126	CallExpression	ResumeThread ( hThread )		3541	0					
ANR	4127	Callee	ResumeThread		3541	0					
ANR	4128	Identifier	ResumeThread		3541	0					
ANR	4129	ArgumentList	hThread		3541	1					
ANR	4130	Argument	hThread		3541	0					
ANR	4131	Identifier	hThread		3541	0					
ANR	4132	ExpressionStatement	SymCleanup ( m_process . GetHandle ( ) )	198:4:6370:6403	3541	23	True				
ANR	4133	CallExpression	SymCleanup ( m_process . GetHandle ( ) )		3541	0					
ANR	4134	Callee	SymCleanup		3541	0					
ANR	4135	Identifier	SymCleanup		3541	0					
ANR	4136	ArgumentList	m_process . GetHandle ( )		3541	1					
ANR	4137	Argument	m_process . GetHandle ( )		3541	0					
ANR	4138	CallExpression	m_process . GetHandle ( )		3541	0					
ANR	4139	Callee	m_process . GetHandle		3541	0					
ANR	4140	MemberAccess	m_process . GetHandle		3541	0					
ANR	4141	Identifier	m_process		3541	0					
ANR	4142	Identifier	GetHandle		3541	1					
ANR	4143	ArgumentList			3541	1					
ANR	4144	ReturnType	void		3541	1					
ANR	4145	Identifier	AbstractBTGenerator :: Run		3541	2					
ANR	4146	ParameterList	"HANDLE hThread , bool bFaultingThread"		3541	3					
ANR	4147	Parameter	HANDLE hThread	72:30:2360:2373	3541	0	True				
ANR	4148	ParameterType	HANDLE		3541	0					
ANR	4149	Identifier	hThread		3541	1					
ANR	4150	Parameter	bool bFaultingThread	72:46:2376:2395	3541	1	True				
ANR	4151	ParameterType	bool		3541	0					
ANR	4152	Identifier	bFaultingThread		3541	1					
ANR	4153	CFGEntryNode	ENTRY		3541		True				
ANR	4154	CFGExitNode	EXIT		3541		True				
ANR	4155	InfiniteForNode	true		3541		True				
ANR	4156	Symbol	& Callbacks :: SymGetModuleBase64		3541						
ANR	4157	Symbol	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg		3541						
ANR	4158	Symbol	m_currentFrame . AddrFrame . Offset		3541						
ANR	4159	Symbol	& m_currentFrame		3541						
ANR	4160	Symbol	m_currentFrame . AddrPC		3541						
ANR	4161	Symbol	AddrModeFlat		3541						
ANR	4162	Symbol	Init		3541						
ANR	4163	Symbol	GetModuleName		3541						
ANR	4164	Symbol	dw		3541						
ANR	4165	Symbol	functionname		3541						
ANR	4166	Symbol	SymGetOptions		3541						
ANR	4167	Symbol	& Callbacks :: SymFunctionTableAccess64		3541						
ANR	4168	Symbol	m_process . IsValid		3541						
ANR	4169	Symbol	context		3541						
ANR	4170	Symbol	Finished		3541						
ANR	4171	Symbol	m_currentFrame . AddrStack		3541						
ANR	4172	Symbol	NULL		3541						
ANR	4173	Symbol	DWORD		3541						
ANR	4174	Symbol	IMAGE_FILE_MACHINE_UNKNOWN		3541						
ANR	4175	Symbol	& context		3541						
ANR	4176	Symbol	m_currentFrame . AddrPC . Offset		3541						
ANR	4177	Symbol	m_currentFrame . AddrStack . Offset		3541						
ANR	4178	Symbol	GetFunctionName		3541						
ANR	4179	Symbol	SuspendThread		3541						
ANR	4180	Symbol	MapViewOfFile		3541						
ANR	4181	Symbol	m_currentFrame		3541						
ANR	4182	Symbol	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg		3541						
ANR	4183	Symbol	m_currentFrame . AddrFrame		3541						
ANR	4184	Symbol	m_currentFrame . AddrPC . Mode		3541						
ANR	4185	Symbol	m_currentFrame . AddrStack . Mode		3541						
ANR	4186	Symbol	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg ( line ) . arg		3541						
ANR	4187	Symbol	line		3541						
ANR	4188	Symbol	context . ContextFlags		3541						
ANR	4189	Symbol	debugLine		3541						
ANR	4190	Symbol	CONTEXT_FULL		3541						
ANR	4191	Symbol	file		3541						
ANR	4192	Symbol	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg		3541						
ANR	4193	Symbol	IMAGE_FILE_MACHINE_I386		3541						
ANR	4194	Symbol	BACKTRACE_FORMAT		3541						
ANR	4195	Symbol	SYMOPT_LOAD_LINES		3541						
ANR	4196	Symbol	context . Eip		3541						
ANR	4197	Symbol	modulename		3541						
ANR	4198	Symbol	FILE_MAP_ALL_ACCESS		3541						
ANR	4199	Symbol	DebugLine		3541						
ANR	4200	Symbol	bFaultingThread		3541						
ANR	4201	Symbol	hThread		3541						
ANR	4202	Symbol	m_process . GetHandle		3541						
ANR	4203	Symbol	m_process		3541						
ANR	4204	Symbol	machineType		3541						
ANR	4205	Symbol	context . Ebp		3541						
ANR	4206	Symbol	m_currentFrame . AddrFrame . Mode		3541						
ANR	4207	Symbol	address		3541						
ANR	4208	Symbol	othercontext		3541						
ANR	4209	Symbol	GetFile		3541						
ANR	4210	Symbol	StackWalk64		3541						
ANR	4211	Symbol	false		3541						
ANR	4212	Symbol	i		3541						
ANR	4213	Symbol	QString :: fromLatin1 ( BACKTRACE_FORMAT ) . arg ( modulename ) . arg ( functionname ) . arg ( file ) . arg		3541						
ANR	4214	Symbol	context . Esp		3541						
ANR	4215	Symbol	QString :: number		3541						
ANR	4216	Symbol	& Callbacks :: ReadProcessMemory		3541						
ANR	4217	Symbol	GetLine		3541						
ANR	4218	Symbol	QString :: fromLatin1		3541						
ANR	4219	Symbol	FALSE		3541						
ANR	4220	Symbol	hMapFile		3541						
ANR	4221	Symbol	GetThreadContext		3541						
ANR	4222	Symbol	SYMOPT_UNDNAME		3541						
ANR	4223	Function	AbstractBTGenerator :: IsSymbolLoaded	201:0:6408:6580							
ANR	4224	FunctionDef	AbstractBTGenerator :: IsSymbolLoaded (const QString & module)		4223	0					
ANR	4225	CompoundStatement		202:0:6472:6580	4223	0					
ANR	4226	IfStatement	if ( m_symbolsMap . contains ( module ) )		4223	0					
ANR	4227	Condition	m_symbolsMap . contains ( module )	203:8:6482:6510	4223	0	True				
ANR	4228	CallExpression	m_symbolsMap . contains ( module )		4223	0					
ANR	4229	Callee	m_symbolsMap . contains		4223	0					
ANR	4230	MemberAccess	m_symbolsMap . contains		4223	0					
ANR	4231	Identifier	m_symbolsMap		4223	0					
ANR	4232	Identifier	contains		4223	1					
ANR	4233	ArgumentList	module		4223	1					
ANR	4234	Argument	module		4223	0					
ANR	4235	Identifier	module		4223	0					
ANR	4236	CompoundStatement		3:4:44:44	4223	1					
ANR	4237	ReturnStatement	return m_symbolsMap [ module ] ;	205:8:6527:6554	4223	0	True				
ANR	4238	ArrayIndexing	m_symbolsMap [ module ]		4223	0					
ANR	4239	Identifier	m_symbolsMap		4223	0					
ANR	4240	Identifier	module		4223	1					
ANR	4241	ReturnStatement	return false ;	207:4:6566:6578	4223	1	True				
ANR	4242	Identifier	false		4223	0					
ANR	4243	ReturnType	bool		4223	1					
ANR	4244	Identifier	AbstractBTGenerator :: IsSymbolLoaded		4223	2					
ANR	4245	ParameterList	const QString & module		4223	3					
ANR	4246	Parameter	const QString & module	201:41:6449:6469	4223	0	True				
ANR	4247	ParameterType	const QString &		4223	0					
ANR	4248	Identifier	module		4223	1					
ANR	4249	CFGEntryNode	ENTRY		4223		True				
ANR	4250	CFGExitNode	EXIT		4223		True				
ANR	4251	Symbol	* module		4223						
ANR	4252	Symbol	module		4223						
ANR	4253	Symbol	false		4223						
ANR	4254	Symbol	* m_symbolsMap		4223						
ANR	4255	Symbol	m_symbolsMap . contains		4223						
ANR	4256	Symbol	m_symbolsMap		4223						
ANR	4257	Function	AbstractBTGenerator :: LoadSymbols	210:0:6583:7490							
ANR	4258	FunctionDef	AbstractBTGenerator :: LoadSymbols ()		4257	0					
ANR	4259	CompoundStatement		211:0:6623:7490	4257	0					
ANR	4260	IdentifierDeclStatement	TModulesMap modules = m_process . GetModules ( ) ;	212:4:6629:6673	4257	0	True				
ANR	4261	IdentifierDecl	modules = m_process . GetModules ( )		4257	0					
ANR	4262	IdentifierDeclType	TModulesMap		4257	0					
ANR	4263	Identifier	modules		4257	1					
ANR	4264	AssignmentExpression	modules = m_process . GetModules ( )		4257	2		=			
ANR	4265	Identifier	modules		4257	0					
ANR	4266	CallExpression	m_process . GetModules ( )		4257	1					
ANR	4267	Callee	m_process . GetModules		4257	0					
ANR	4268	MemberAccess	m_process . GetModules		4257	0					
ANR	4269	Identifier	m_process		4257	0					
ANR	4270	Identifier	GetModules		4257	1					
ANR	4271	ArgumentList			4257	1					
ANR	4272	ForStatement	for ( TModulesMap :: iterator i = modules . begin ( ) ; i != modules . end ( ) ; i ++ )		4257	1					
ANR	4273	ForInit	TModulesMap :: iterator i = modules . begin ( ) ;	213:9:6684:6725	4257	0	True				
ANR	4274	IdentifierDeclStatement	TModulesMap :: iterator i = modules . begin ( ) ;		4257	0					
ANR	4275	IdentifierDecl	i = modules . begin ( )		4257	0					
ANR	4276	IdentifierDeclType	TModulesMap :: iterator		4257	0					
ANR	4277	Identifier	i		4257	1					
ANR	4278	AssignmentExpression	i = modules . begin ( )		4257	2		=			
ANR	4279	Identifier	i		4257	0					
ANR	4280	CallExpression	modules . begin ( )		4257	1					
ANR	4281	Callee	modules . begin		4257	0					
ANR	4282	MemberAccess	modules . begin		4257	0					
ANR	4283	Identifier	modules		4257	0					
ANR	4284	Identifier	begin		4257	1					
ANR	4285	ArgumentList			4257	1					
ANR	4286	Condition	i != modules . end ( )	213:52:6727:6744	4257	1	True				
ANR	4287	EqualityExpression	i != modules . end ( )		4257	0		!=			
ANR	4288	Identifier	i		4257	0					
ANR	4289	CallExpression	modules . end ( )		4257	1					
ANR	4290	Callee	modules . end		4257	0					
ANR	4291	MemberAccess	modules . end		4257	0					
ANR	4292	Identifier	modules		4257	0					
ANR	4293	Identifier	end		4257	1					
ANR	4294	ArgumentList			4257	1					
ANR	4295	PostIncDecOperationExpression	i ++	213:72:6747:6749	4257	2	True				
ANR	4296	Identifier	i		4257	0					
ANR	4297	IncDec	++		4257	1					
ANR	4298	CompoundStatement		8:8:218:245	4257	3					
ANR	4299	IdentifierDeclStatement	MODULEINFO modInfo ;	215:8:6766:6784	4257	0	True				
ANR	4300	IdentifierDecl	modInfo		4257	0					
ANR	4301	IdentifierDeclType	MODULEINFO		4257	0					
ANR	4302	Identifier	modInfo		4257	1					
ANR	4303	ExpressionStatement	"ZeroMemory ( & modInfo , sizeof ( modInfo ) )"	216:8:6794:6831	4257	1	True				
ANR	4304	CallExpression	"ZeroMemory ( & modInfo , sizeof ( modInfo ) )"		4257	0					
ANR	4305	Callee	ZeroMemory		4257	0					
ANR	4306	Identifier	ZeroMemory		4257	0					
ANR	4307	ArgumentList	& modInfo		4257	1					
ANR	4308	Argument	& modInfo		4257	0					
ANR	4309	UnaryOperationExpression	& modInfo		4257	0					
ANR	4310	UnaryOperator	&		4257	0					
ANR	4311	Identifier	modInfo		4257	1					
ANR	4312	Argument	sizeof ( modInfo )		4257	1					
ANR	4313	SizeofExpression	sizeof ( modInfo )		4257	0					
ANR	4314	Sizeof	sizeof		4257	0					
ANR	4315	SizeofOperand	modInfo		4257	1					
ANR	4316	IdentifierDeclStatement	QString strModule = i . key ( ) ;	218:8:6842:6869	4257	2	True				
ANR	4317	IdentifierDecl	strModule = i . key ( )		4257	0					
ANR	4318	IdentifierDeclType	QString		4257	0					
ANR	4319	Identifier	strModule		4257	1					
ANR	4320	AssignmentExpression	strModule = i . key ( )		4257	2		=			
ANR	4321	Identifier	strModule		4257	0					
ANR	4322	CallExpression	i . key ( )		4257	1					
ANR	4323	Callee	i . key		4257	0					
ANR	4324	MemberAccess	i . key		4257	0					
ANR	4325	Identifier	i		4257	0					
ANR	4326	Identifier	key		4257	1					
ANR	4327	ArgumentList			4257	1					
ANR	4328	ExpressionStatement	"GetModuleInformation ( m_process . GetHandle ( ) , i . value ( ) , & modInfo , sizeof ( modInfo ) )"	220:8:6880:6961	4257	3	True				
ANR	4329	CallExpression	"GetModuleInformation ( m_process . GetHandle ( ) , i . value ( ) , & modInfo , sizeof ( modInfo ) )"		4257	0					
ANR	4330	Callee	GetModuleInformation		4257	0					
ANR	4331	Identifier	GetModuleInformation		4257	0					
ANR	4332	ArgumentList	m_process . GetHandle ( )		4257	1					
ANR	4333	Argument	m_process . GetHandle ( )		4257	0					
ANR	4334	CallExpression	m_process . GetHandle ( )		4257	0					
ANR	4335	Callee	m_process . GetHandle		4257	0					
ANR	4336	MemberAccess	m_process . GetHandle		4257	0					
ANR	4337	Identifier	m_process		4257	0					
ANR	4338	Identifier	GetHandle		4257	1					
ANR	4339	ArgumentList			4257	1					
ANR	4340	Argument	i . value ( )		4257	1					
ANR	4341	CallExpression	i . value ( )		4257	0					
ANR	4342	Callee	i . value		4257	0					
ANR	4343	MemberAccess	i . value		4257	0					
ANR	4344	Identifier	i		4257	0					
ANR	4345	Identifier	value		4257	1					
ANR	4346	ArgumentList			4257	1					
ANR	4347	Argument	& modInfo		4257	2					
ANR	4348	UnaryOperationExpression	& modInfo		4257	0					
ANR	4349	UnaryOperator	&		4257	0					
ANR	4350	Identifier	modInfo		4257	1					
ANR	4351	Argument	sizeof ( modInfo )		4257	3					
ANR	4352	SizeofExpression	sizeof ( modInfo )		4257	0					
ANR	4353	Sizeof	sizeof		4257	0					
ANR	4354	SizeofOperand	modInfo		4257	1					
ANR	4355	ExpressionStatement	"SymLoadModuleEx ( m_process . GetHandle ( ) , NULL , ( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( ) , ( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( ) , ( DWORD64 ) modInfo . lpBaseOfDll , modInfo . SizeOfImage , NULL , 0 )"	221:8:6971:7253	4257	4	True				
ANR	4356	CallExpression	"SymLoadModuleEx ( m_process . GetHandle ( ) , NULL , ( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( ) , ( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( ) , ( DWORD64 ) modInfo . lpBaseOfDll , modInfo . SizeOfImage , NULL , 0 )"		4257	0					
ANR	4357	Callee	SymLoadModuleEx		4257	0					
ANR	4358	Identifier	SymLoadModuleEx		4257	0					
ANR	4359	ArgumentList	m_process . GetHandle ( )		4257	1					
ANR	4360	Argument	m_process . GetHandle ( )		4257	0					
ANR	4361	CallExpression	m_process . GetHandle ( )		4257	0					
ANR	4362	Callee	m_process . GetHandle		4257	0					
ANR	4363	MemberAccess	m_process . GetHandle		4257	0					
ANR	4364	Identifier	m_process		4257	0					
ANR	4365	Identifier	GetHandle		4257	1					
ANR	4366	ArgumentList			4257	1					
ANR	4367	Argument	NULL		4257	1					
ANR	4368	Identifier	NULL		4257	0					
ANR	4369	Argument	( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( )		4257	2					
ANR	4370	CastExpression	( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( )		4257	0					
ANR	4371	CastTarget	CHAR *		4257	0					
ANR	4372	CallExpression	i . key ( ) . toLatin1 ( ) . constData ( )		4257	1					
ANR	4373	Callee	i . key ( ) . toLatin1 ( ) . constData		4257	0					
ANR	4374	MemberAccess	i . key ( ) . toLatin1 ( ) . constData		4257	0					
ANR	4375	CallExpression	i . key ( ) . toLatin1 ( )		4257	0					
ANR	4376	Callee	i . key ( ) . toLatin1		4257	0					
ANR	4377	MemberAccess	i . key ( ) . toLatin1		4257	0					
ANR	4378	CallExpression	i . key ( )		4257	0					
ANR	4379	Callee	i . key		4257	0					
ANR	4380	MemberAccess	i . key		4257	0					
ANR	4381	Identifier	i		4257	0					
ANR	4382	Identifier	key		4257	1					
ANR	4383	ArgumentList			4257	1					
ANR	4384	Identifier	toLatin1		4257	1					
ANR	4385	ArgumentList			4257	1					
ANR	4386	Identifier	constData		4257	1					
ANR	4387	ArgumentList			4257	1					
ANR	4388	Argument	( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( )		4257	3					
ANR	4389	CastExpression	( CHAR * ) i . key ( ) . toLatin1 ( ) . constData ( )		4257	0					
ANR	4390	CastTarget	CHAR *		4257	0					
ANR	4391	CallExpression	i . key ( ) . toLatin1 ( ) . constData ( )		4257	1					
ANR	4392	Callee	i . key ( ) . toLatin1 ( ) . constData		4257	0					
ANR	4393	MemberAccess	i . key ( ) . toLatin1 ( ) . constData		4257	0					
ANR	4394	CallExpression	i . key ( ) . toLatin1 ( )		4257	0					
ANR	4395	Callee	i . key ( ) . toLatin1		4257	0					
ANR	4396	MemberAccess	i . key ( ) . toLatin1		4257	0					
ANR	4397	CallExpression	i . key ( )		4257	0					
ANR	4398	Callee	i . key		4257	0					
ANR	4399	MemberAccess	i . key		4257	0					
ANR	4400	Identifier	i		4257	0					
ANR	4401	Identifier	key		4257	1					
ANR	4402	ArgumentList			4257	1					
ANR	4403	Identifier	toLatin1		4257	1					
ANR	4404	ArgumentList			4257	1					
ANR	4405	Identifier	constData		4257	1					
ANR	4406	ArgumentList			4257	1					
ANR	4407	Argument	( DWORD64 ) modInfo . lpBaseOfDll		4257	4					
ANR	4408	CastExpression	( DWORD64 ) modInfo . lpBaseOfDll		4257	0					
ANR	4409	CastTarget	DWORD64		4257	0					
ANR	4410	MemberAccess	modInfo . lpBaseOfDll		4257	1					
ANR	4411	Identifier	modInfo		4257	0					
ANR	4412	Identifier	lpBaseOfDll		4257	1					
ANR	4413	Argument	modInfo . SizeOfImage		4257	5					
ANR	4414	MemberAccess	modInfo . SizeOfImage		4257	0					
ANR	4415	Identifier	modInfo		4257	0					
ANR	4416	Identifier	SizeOfImage		4257	1					
ANR	4417	Argument	NULL		4257	6					
ANR	4418	Identifier	NULL		4257	0					
ANR	4419	Argument	0		4257	7					
ANR	4420	PrimaryExpression	0		4257	0					
ANR	4421	ExpressionStatement	"LoadSymbol ( strModule , ( DWORD64 ) modInfo . lpBaseOfDll )"	231:8:7264:7316	4257	5	True				
ANR	4422	CallExpression	"LoadSymbol ( strModule , ( DWORD64 ) modInfo . lpBaseOfDll )"		4257	0					
ANR	4423	Callee	LoadSymbol		4257	0					
ANR	4424	Identifier	LoadSymbol		4257	0					
ANR	4425	ArgumentList	strModule		4257	1					
ANR	4426	Argument	strModule		4257	0					
ANR	4427	Identifier	strModule		4257	0					
ANR	4428	Argument	( DWORD64 ) modInfo . lpBaseOfDll		4257	1					
ANR	4429	CastExpression	( DWORD64 ) modInfo . lpBaseOfDll		4257	0					
ANR	4430	CastTarget	DWORD64		4257	0					
ANR	4431	MemberAccess	modInfo . lpBaseOfDll		4257	1					
ANR	4432	Identifier	modInfo		4257	0					
ANR	4433	Identifier	lpBaseOfDll		4257	1					
ANR	4434	IfStatement	if ( ! IsSymbolLoaded ( strModule ) )		4257	6					
ANR	4435	Condition	! IsSymbolLoaded ( strModule )	233:12:7331:7356	4257	0	True				
ANR	4436	UnaryOperationExpression	! IsSymbolLoaded ( strModule )		4257	0					
ANR	4437	UnaryOperator	!		4257	0					
ANR	4438	CallExpression	IsSymbolLoaded ( strModule )		4257	1					
ANR	4439	Callee	IsSymbolLoaded		4257	0					
ANR	4440	Identifier	IsSymbolLoaded		4257	0					
ANR	4441	ArgumentList	strModule		4257	1					
ANR	4442	Argument	strModule		4257	0					
ANR	4443	Identifier	strModule		4257	0					
ANR	4444	CompoundStatement		25:12:757:786	4257	1					
ANR	4445	IdentifierDeclStatement	emit MissingSymbol ( strModule ) ;	235:12:7381:7410	4257	0	True				
ANR	4446	IdentifierDecl	MissingSymbol ( strModule )		4257	0					
ANR	4447	IdentifierDeclType	emit		4257	0					
ANR	4448	Identifier	MissingSymbol		4257	1					
ANR	4449	Identifier	strModule		4257	2					
ANR	4450	IdentifierDeclStatement	emit DebugLine ( QString ( ) ) ;	238:4:7432:7457	4257	2	True				
ANR	4451	IdentifierDecl	DebugLine ( QString ( ) )		4257	0					
ANR	4452	IdentifierDeclType	emit		4257	0					
ANR	4453	Identifier	DebugLine		4257	1					
ANR	4454	CallExpression	QString ( )		4257	2					
ANR	4455	Callee	QString		4257	0					
ANR	4456	Identifier	QString		4257	0					
ANR	4457	ArgumentList			4257	1					
ANR	4458	IdentifierDeclStatement	emit DebugLine ( QString ( ) ) ;	239:4:7463:7488	4257	3	True				
ANR	4459	IdentifierDecl	DebugLine ( QString ( ) )		4257	0					
ANR	4460	IdentifierDeclType	emit		4257	0					
ANR	4461	Identifier	DebugLine		4257	1					
ANR	4462	CallExpression	QString ( )		4257	2					
ANR	4463	Callee	QString		4257	0					
ANR	4464	Identifier	QString		4257	0					
ANR	4465	ArgumentList			4257	1					
ANR	4466	ReturnType	void		4257	1					
ANR	4467	Identifier	AbstractBTGenerator :: LoadSymbols		4257	2					
ANR	4468	ParameterList			4257	3					
ANR	4469	CFGEntryNode	ENTRY		4257		True				
ANR	4470	CFGExitNode	EXIT		4257		True				
ANR	4471	Symbol	strModule		4257						
ANR	4472	Symbol	modules . begin		4257						
ANR	4473	Symbol	NULL		4257						
ANR	4474	Symbol	modInfo		4257						
ANR	4475	Symbol	IsSymbolLoaded		4257						
ANR	4476	Symbol	i		4257						
ANR	4477	Symbol	MissingSymbol		4257						
ANR	4478	Symbol	modules		4257						
ANR	4479	Symbol	i . key ( ) . toLatin1		4257						
ANR	4480	Symbol	& modInfo		4257						
ANR	4481	Symbol	i . value		4257						
ANR	4482	Symbol	i . key ( ) . toLatin1 ( ) . constData		4257						
ANR	4483	Symbol	modInfo . SizeOfImage		4257						
ANR	4484	Symbol	i . key		4257						
ANR	4485	Symbol	modInfo . lpBaseOfDll		4257						
ANR	4486	Symbol	m_process . GetModules		4257						
ANR	4487	Symbol	DebugLine		4257						
ANR	4488	Symbol	modules . end		4257						
ANR	4489	Symbol	m_process . GetHandle		4257						
ANR	4490	Symbol	m_process		4257						
