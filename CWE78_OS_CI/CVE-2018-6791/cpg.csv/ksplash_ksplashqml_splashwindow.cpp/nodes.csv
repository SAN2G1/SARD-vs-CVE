command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	454959	File	data/converged/CVE-2018-6791_plasma-workspace/ksplash_ksplashqml_splashwindow.cpp								
ANR	454960	Function	SplashWindow :: SplashWindow	39:1:1220:2366							
ANR	454961	FunctionDef	"SplashWindow :: SplashWindow (bool testing , bool window)"		454960	0					
ANR	454962	CompoundStatement		46:0:1411:2366	454960	0					
ANR	454963	ExpressionStatement	setColor ( Qt :: transparent )	47:4:1417:1442	454960	0	True				
ANR	454964	CallExpression	setColor ( Qt :: transparent )		454960	0					
ANR	454965	Callee	setColor		454960	0					
ANR	454966	Identifier	setColor		454960	0					
ANR	454967	ArgumentList	Qt :: transparent		454960	1					
ANR	454968	Argument	Qt :: transparent		454960	0					
ANR	454969	Identifier	Qt :: transparent		454960	0					
ANR	454970	ExpressionStatement	setDefaultAlphaBuffer ( true )	48:4:1448:1475	454960	1	True				
ANR	454971	CallExpression	setDefaultAlphaBuffer ( true )		454960	0					
ANR	454972	Callee	setDefaultAlphaBuffer		454960	0					
ANR	454973	Identifier	setDefaultAlphaBuffer		454960	0					
ANR	454974	ArgumentList	true		454960	1					
ANR	454975	Argument	true		454960	0					
ANR	454976	Identifier	true		454960	0					
ANR	454977	ExpressionStatement	setClearBeforeRendering ( true )	49:4:1481:1510	454960	2	True				
ANR	454978	CallExpression	setClearBeforeRendering ( true )		454960	0					
ANR	454979	Callee	setClearBeforeRendering		454960	0					
ANR	454980	Identifier	setClearBeforeRendering		454960	0					
ANR	454981	ArgumentList	true		454960	1					
ANR	454982	Argument	true		454960	0					
ANR	454983	Identifier	true		454960	0					
ANR	454984	ExpressionStatement	setResizeMode ( KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView )	50:4:1516:1588	454960	3	True				
ANR	454985	CallExpression	setResizeMode ( KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView )		454960	0					
ANR	454986	Callee	setResizeMode		454960	0					
ANR	454987	Identifier	setResizeMode		454960	0					
ANR	454988	ArgumentList	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		454960	1					
ANR	454989	Argument	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		454960	0					
ANR	454990	Identifier	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		454960	0					
ANR	454991	IfStatement	if ( ! m_window )		454960	4					
ANR	454992	Condition	! m_window	52:8:1599:1607	454960	0	True				
ANR	454993	UnaryOperationExpression	! m_window		454960	0					
ANR	454994	UnaryOperator	!		454960	0					
ANR	454995	Identifier	m_window		454960	1					
ANR	454996	CompoundStatement		7:19:198:198	454960	1					
ANR	454997	ExpressionStatement	setFlags ( Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint )	53:8:1620:1680	454960	0	True				
ANR	454998	CallExpression	setFlags ( Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint )		454960	0					
ANR	454999	Callee	setFlags		454960	0					
ANR	455000	Identifier	setFlags		454960	0					
ANR	455001	ArgumentList	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		454960	1					
ANR	455002	Argument	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		454960	0					
ANR	455003	InclusiveOrExpression	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		454960	0		|			
ANR	455004	Identifier	Qt :: FramelessWindowHint		454960	0					
ANR	455005	Identifier	Qt :: WindowStaysOnTopHint		454960	1					
ANR	455006	IfStatement	if ( ! m_testing && ! m_window )		454960	5					
ANR	455007	Condition	! m_testing && ! m_window	56:8:1697:1719	454960	0	True				
ANR	455008	AndExpression	! m_testing && ! m_window		454960	0		&&			
ANR	455009	UnaryOperationExpression	! m_testing		454960	0					
ANR	455010	UnaryOperator	!		454960	0					
ANR	455011	Identifier	m_testing		454960	1					
ANR	455012	UnaryOperationExpression	! m_window		454960	1					
ANR	455013	UnaryOperator	!		454960	0					
ANR	455014	Identifier	m_window		454960	1					
ANR	455015	CompoundStatement		11:33:310:310	454960	1					
ANR	455016	IfStatement	if ( KWindowSystem :: isPlatformX11 ( ) )		454960	0					
ANR	455017	Condition	KWindowSystem :: isPlatformX11 ( )	57:12:1736:1765	454960	0	True				
ANR	455018	CallExpression	KWindowSystem :: isPlatformX11 ( )		454960	0					
ANR	455019	Callee	KWindowSystem :: isPlatformX11		454960	0					
ANR	455020	Identifier	KWindowSystem :: isPlatformX11		454960	0					
ANR	455021	ArgumentList			454960	1					
ANR	455022	CompoundStatement		12:44:356:356	454960	1					
ANR	455023	ExpressionStatement	setFlags ( Qt :: BypassWindowManagerHint )	59:12:1827:1864	454960	0	True				
ANR	455024	CallExpression	setFlags ( Qt :: BypassWindowManagerHint )		454960	0					
ANR	455025	Callee	setFlags		454960	0					
ANR	455026	Identifier	setFlags		454960	0					
ANR	455027	ArgumentList	Qt :: BypassWindowManagerHint		454960	1					
ANR	455028	Argument	Qt :: BypassWindowManagerHint		454960	0					
ANR	455029	Identifier	Qt :: BypassWindowManagerHint		454960	0					
ANR	455030	ElseStatement	else		454960	0					
ANR	455031	IfStatement	if ( ! KWindowSystem :: isPlatformWayland ( ) )		454960	0					
ANR	455032	Condition	! KWindowSystem :: isPlatformWayland ( )	60:19:1885:1919	454960	0	True				
ANR	455033	UnaryOperationExpression	! KWindowSystem :: isPlatformWayland ( )		454960	0					
ANR	455034	UnaryOperator	!		454960	0					
ANR	455035	CallExpression	KWindowSystem :: isPlatformWayland ( )		454960	1					
ANR	455036	Callee	KWindowSystem :: isPlatformWayland		454960	0					
ANR	455037	Identifier	KWindowSystem :: isPlatformWayland		454960	0					
ANR	455038	ArgumentList			454960	1					
ANR	455039	CompoundStatement		15:56:510:510	454960	1					
ANR	455040	ExpressionStatement	setWindowState ( Qt :: WindowFullScreen )	63:12:2053:2089	454960	0	True				
ANR	455041	CallExpression	setWindowState ( Qt :: WindowFullScreen )		454960	0					
ANR	455042	Callee	setWindowState		454960	0					
ANR	455043	Identifier	setWindowState		454960	0					
ANR	455044	ArgumentList	Qt :: WindowFullScreen		454960	1					
ANR	455045	Argument	Qt :: WindowFullScreen		454960	0					
ANR	455046	Identifier	Qt :: WindowFullScreen		454960	0					
ANR	455047	IfStatement	if ( m_testing && ! m_window && ! KWindowSystem :: isPlatformWayland ( ) )		454960	6					
ANR	455048	Condition	m_testing && ! m_window && ! KWindowSystem :: isPlatformWayland ( )	67:8:2116:2176	454960	0	True				
ANR	455049	AndExpression	m_testing && ! m_window && ! KWindowSystem :: isPlatformWayland ( )		454960	0		&&			
ANR	455050	Identifier	m_testing		454960	0					
ANR	455051	AndExpression	! m_window && ! KWindowSystem :: isPlatformWayland ( )		454960	1		&&			
ANR	455052	UnaryOperationExpression	! m_window		454960	0					
ANR	455053	UnaryOperator	!		454960	0					
ANR	455054	Identifier	m_window		454960	1					
ANR	455055	UnaryOperationExpression	! KWindowSystem :: isPlatformWayland ( )		454960	1					
ANR	455056	UnaryOperator	!		454960	0					
ANR	455057	CallExpression	KWindowSystem :: isPlatformWayland ( )		454960	1					
ANR	455058	Callee	KWindowSystem :: isPlatformWayland		454960	0					
ANR	455059	Identifier	KWindowSystem :: isPlatformWayland		454960	0					
ANR	455060	ArgumentList			454960	1					
ANR	455061	CompoundStatement		22:71:767:767	454960	1					
ANR	455062	ExpressionStatement	setWindowState ( Qt :: WindowFullScreen )	68:8:2189:2225	454960	0	True				
ANR	455063	CallExpression	setWindowState ( Qt :: WindowFullScreen )		454960	0					
ANR	455064	Callee	setWindowState		454960	0					
ANR	455065	Identifier	setWindowState		454960	0					
ANR	455066	ArgumentList	Qt :: WindowFullScreen		454960	1					
ANR	455067	Argument	Qt :: WindowFullScreen		454960	0					
ANR	455068	Identifier	Qt :: WindowFullScreen		454960	0					
ANR	455069	ExpressionStatement	"QTimer :: singleShot ( 30000 , this , & QWindow :: close )"	73:4:2316:2364	454960	7	True				
ANR	455070	CallExpression	"QTimer :: singleShot ( 30000 , this , & QWindow :: close )"		454960	0					
ANR	455071	Callee	QTimer :: singleShot		454960	0					
ANR	455072	Identifier	QTimer :: singleShot		454960	0					
ANR	455073	ArgumentList	30000		454960	1					
ANR	455074	Argument	30000		454960	0					
ANR	455075	PrimaryExpression	30000		454960	0					
ANR	455076	Argument	this		454960	1					
ANR	455077	Identifier	this		454960	0					
ANR	455078	Argument	& QWindow :: close		454960	2					
ANR	455079	UnaryOperationExpression	& QWindow :: close		454960	0					
ANR	455080	UnaryOperator	&		454960	0					
ANR	455081	Identifier	QWindow :: close		454960	1					
ANR	455082	ReturnType	include < KWindowSystem >		454960	1					
ANR	455083	Identifier	SplashWindow :: SplashWindow		454960	2					
ANR	455084	ParameterList	"bool testing , bool window"		454960	3					
ANR	455085	Parameter	bool testing	41:27:1272:1283	454960	0	True				
ANR	455086	ParameterType	bool		454960	0					
ANR	455087	Identifier	testing		454960	1					
ANR	455088	Parameter	bool window	41:41:1286:1296	454960	1	True				
ANR	455089	ParameterType	bool		454960	0					
ANR	455090	Identifier	window		454960	1					
ANR	455091	CFGEntryNode	ENTRY		454960		True				
ANR	455092	CFGExitNode	EXIT		454960		True				
ANR	455093	Symbol	Qt :: WindowStaysOnTopHint		454960						
ANR	455094	Symbol	KWindowSystem :: isPlatformX11		454960						
ANR	455095	Symbol	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		454960						
ANR	455096	Symbol	testing		454960						
ANR	455097	Symbol	Qt :: FramelessWindowHint		454960						
ANR	455098	Symbol	this		454960						
ANR	455099	Symbol	Qt :: transparent		454960						
ANR	455100	Symbol	Qt :: WindowFullScreen		454960						
ANR	455101	Symbol	m_testing		454960						
ANR	455102	Symbol	KWindowSystem :: isPlatformWayland		454960						
ANR	455103	Symbol	true		454960						
ANR	455104	Symbol	m_window		454960						
ANR	455105	Symbol	window		454960						
ANR	455106	Symbol	Qt :: BypassWindowManagerHint		454960						
ANR	455107	Symbol	& QWindow :: close		454960						
ANR	455108	Function	SplashWindow :: setStage	76:0:2369:2479							
ANR	455109	FunctionDef	SplashWindow :: setStage (int stage)		455108	0					
ANR	455110	CompoundStatement		77:0:2408:2479	455108	0					
ANR	455111	ExpressionStatement	m_stage = stage	78:4:2414:2429	455108	0	True				
ANR	455112	AssignmentExpression	m_stage = stage		455108	0		=			
ANR	455113	Identifier	m_stage		455108	0					
ANR	455114	Identifier	stage		455108	1					
ANR	455115	ExpressionStatement	"rootObject ( ) -> setProperty ( ""stage"" , stage )"	80:4:2436:2477	455108	1	True				
ANR	455116	CallExpression	"rootObject ( ) -> setProperty ( ""stage"" , stage )"		455108	0					
ANR	455117	Callee	rootObject ( ) -> setProperty		455108	0					
ANR	455118	PtrMemberAccess	rootObject ( ) -> setProperty		455108	0					
ANR	455119	CallExpression	rootObject ( )		455108	0					
ANR	455120	Callee	rootObject		455108	0					
ANR	455121	Identifier	rootObject		455108	0					
ANR	455122	ArgumentList			455108	1					
ANR	455123	Identifier	setProperty		455108	1					
ANR	455124	ArgumentList	"""stage"""		455108	1					
ANR	455125	Argument	"""stage"""		455108	0					
ANR	455126	PrimaryExpression	"""stage"""		455108	0					
ANR	455127	Argument	stage		455108	1					
ANR	455128	Identifier	stage		455108	0					
ANR	455129	ReturnType	void		455108	1					
ANR	455130	Identifier	SplashWindow :: setStage		455108	2					
ANR	455131	ParameterList	int stage		455108	3					
ANR	455132	Parameter	int stage	76:28:2397:2405	455108	0	True				
ANR	455133	ParameterType	int		455108	0					
ANR	455134	Identifier	stage		455108	1					
ANR	455135	CFGEntryNode	ENTRY		455108		True				
ANR	455136	CFGExitNode	EXIT		455108		True				
ANR	455137	Symbol	m_stage		455108						
ANR	455138	Symbol	stage		455108						
ANR	455139	Symbol	rootObject		455108						
ANR	455140	Function	SplashWindow :: event	83:0:2482:3060							
ANR	455141	FunctionDef	SplashWindow :: event (QEvent * e)		455140	0					
ANR	455142	CompoundStatement		84:0:2518:3060	455140	0					
ANR	455143	IfStatement	if ( e -> type ( ) == QEvent :: PlatformSurface )		455140	0					
ANR	455144	Condition	e -> type ( ) == QEvent :: PlatformSurface	85:8:2528:2563	455140	0	True				
ANR	455145	EqualityExpression	e -> type ( ) == QEvent :: PlatformSurface		455140	0		==			
ANR	455146	CallExpression	e -> type ( )		455140	0					
ANR	455147	Callee	e -> type		455140	0					
ANR	455148	PtrMemberAccess	e -> type		455140	0					
ANR	455149	Identifier	e		455140	0					
ANR	455150	Identifier	type		455140	1					
ANR	455151	ArgumentList			455140	1					
ANR	455152	Identifier	QEvent :: PlatformSurface		455140	1					
ANR	455153	CompoundStatement		2:46:47:47	455140	1					
ANR	455154	Statement	if	86:8:2576:2577	455140	0	True				
ANR	455155	Statement	(	86:11:2579:2579	455140	1	True				
ANR	455156	Statement	auto	86:12:2580:2583	455140	2	True				
ANR	455157	Statement	pe	86:17:2585:2586	455140	3	True				
ANR	455158	Statement	=	86:20:2588:2588	455140	4	True				
ANR	455159	Statement	dynamic_cast	86:22:2590:2601	455140	5	True				
ANR	455160	Statement	<	86:34:2602:2602	455140	6	True				
ANR	455161	Statement	QPlatformSurfaceEvent	86:35:2603:2623	455140	7	True				
ANR	455162	Statement	*	86:56:2624:2624	455140	8	True				
ANR	455163	Statement	>	86:57:2625:2625	455140	9	True				
ANR	455164	Statement	(	86:58:2626:2626	455140	10	True				
ANR	455165	Statement	e	86:59:2627:2627	455140	11	True				
ANR	455166	Statement	)	86:60:2628:2628	455140	12	True				
ANR	455167	Statement	)	86:61:2629:2629	455140	13	True				
ANR	455168	CompoundStatement		3:63:112:112	455140	14					
ANR	455169	SwitchStatement	switch ( pe -> surfaceEventType ( ) )		455140	0					
ANR	455170	Condition	pe -> surfaceEventType ( )	87:20:2653:2674	455140	0	True				
ANR	455171	CallExpression	pe -> surfaceEventType ( )		455140	0					
ANR	455172	Callee	pe -> surfaceEventType		455140	0					
ANR	455173	PtrMemberAccess	pe -> surfaceEventType		455140	0					
ANR	455174	Identifier	pe		455140	0					
ANR	455175	Identifier	surfaceEventType		455140	1					
ANR	455176	ArgumentList			455140	1					
ANR	455177	CompoundStatement		4:44:158:158	455140	1					
ANR	455178	Label	case QPlatformSurfaceEvent :: SurfaceCreated :	88:12:2691:2733	455140	0	True				
ANR	455179	Identifier	QPlatformSurfaceEvent :: SurfaceCreated		455140	0					
ANR	455180	ExpressionStatement	setupWaylandIntegration ( )	89:16:2751:2776	455140	1	True				
ANR	455181	CallExpression	setupWaylandIntegration ( )		455140	0					
ANR	455182	Callee	setupWaylandIntegration		455140	0					
ANR	455183	Identifier	setupWaylandIntegration		455140	0					
ANR	455184	ArgumentList			455140	1					
ANR	455185	BreakStatement	break ;	90:16:2794:2799	455140	2	True				
ANR	455186	Label	case QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed :	91:12:2813:2866	455140	3	True				
ANR	455187	Identifier	QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed		455140	0					
ANR	455188	Statement	delete	92:16:2884:2889	455140	4	True				
ANR	455189	ExpressionStatement	m_shellSurface	92:23:2891:2905	455140	5	True				
ANR	455190	Identifier	m_shellSurface		455140	0					
ANR	455191	ExpressionStatement	m_shellSurface = nullptr	93:16:2923:2947	455140	6	True				
ANR	455192	AssignmentExpression	m_shellSurface = nullptr		455140	0		=			
ANR	455193	Identifier	m_shellSurface		455140	0					
ANR	455194	Identifier	nullptr		455140	1					
ANR	455195	BreakStatement	break ;	94:16:2965:2970	455140	7	True				
ANR	455196	ReturnStatement	return KQuickAddons :: QuickViewSharedEngine :: event ( e ) ;	98:4:3006:3058	455140	1	True				
ANR	455197	CallExpression	KQuickAddons :: QuickViewSharedEngine :: event ( e )		455140	0					
ANR	455198	Callee	KQuickAddons :: QuickViewSharedEngine :: event		455140	0					
ANR	455199	Identifier	KQuickAddons :: QuickViewSharedEngine :: event		455140	0					
ANR	455200	ArgumentList	e		455140	1					
ANR	455201	Argument	e		455140	0					
ANR	455202	Identifier	e		455140	0					
ANR	455203	ReturnType	bool		455140	1					
ANR	455204	Identifier	SplashWindow :: event		455140	2					
ANR	455205	ParameterList	QEvent * e		455140	3					
ANR	455206	Parameter	QEvent * e	83:25:2507:2515	455140	0	True				
ANR	455207	ParameterType	QEvent *		455140	0					
ANR	455208	Identifier	e		455140	1					
ANR	455209	CFGEntryNode	ENTRY		455140		True				
ANR	455210	CFGExitNode	EXIT		455140		True				
ANR	455211	Symbol	pe -> surfaceEventType		455140						
ANR	455212	Symbol	m_shellSurface		455140						
ANR	455213	Symbol	e		455140						
ANR	455214	Symbol	pe		455140						
ANR	455215	Symbol	* pe		455140						
ANR	455216	Symbol	KQuickAddons :: QuickViewSharedEngine :: event		455140						
ANR	455217	Symbol	QEvent :: PlatformSurface		455140						
ANR	455218	Symbol	e -> type		455140						
ANR	455219	Symbol	nullptr		455140						
ANR	455220	Symbol	* e		455140						
ANR	455221	Function	SplashWindow :: keyPressEvent	101:0:3063:3281							
ANR	455222	FunctionDef	SplashWindow :: keyPressEvent (QKeyEvent * event)		455221	0					
ANR	455223	CompoundStatement		102:0:3114:3281	455221	0					
ANR	455224	ExpressionStatement	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent ( event )	103:4:3120:3177	455221	0	True				
ANR	455225	CallExpression	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent ( event )		455221	0					
ANR	455226	Callee	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent		455221	0					
ANR	455227	Identifier	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent		455221	0					
ANR	455228	ArgumentList	event		455221	1					
ANR	455229	Argument	event		455221	0					
ANR	455230	Identifier	event		455221	0					
ANR	455231	IfStatement	if ( m_testing && ! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape )		455221	1					
ANR	455232	Condition	m_testing && ! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape	104:8:3187:3253	455221	0	True				
ANR	455233	AndExpression	m_testing && ! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape		455221	0		&&			
ANR	455234	Identifier	m_testing		455221	0					
ANR	455235	AndExpression	! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape		455221	1		&&			
ANR	455236	UnaryOperationExpression	! event -> isAccepted ( )		455221	0					
ANR	455237	UnaryOperator	!		455221	0					
ANR	455238	CallExpression	event -> isAccepted ( )		455221	1					
ANR	455239	Callee	event -> isAccepted		455221	0					
ANR	455240	PtrMemberAccess	event -> isAccepted		455221	0					
ANR	455241	Identifier	event		455221	0					
ANR	455242	Identifier	isAccepted		455221	1					
ANR	455243	ArgumentList			455221	1					
ANR	455244	EqualityExpression	event -> key ( ) == Qt :: Key_Escape		455221	1		==			
ANR	455245	CallExpression	event -> key ( )		455221	0					
ANR	455246	Callee	event -> key		455221	0					
ANR	455247	PtrMemberAccess	event -> key		455221	0					
ANR	455248	Identifier	event		455221	0					
ANR	455249	Identifier	key		455221	1					
ANR	455250	ArgumentList			455221	1					
ANR	455251	Identifier	Qt :: Key_Escape		455221	1					
ANR	455252	CompoundStatement		3:77:141:141	455221	1					
ANR	455253	ExpressionStatement	close ( )	105:8:3266:3273	455221	0	True				
ANR	455254	CallExpression	close ( )		455221	0					
ANR	455255	Callee	close		455221	0					
ANR	455256	Identifier	close		455221	0					
ANR	455257	ArgumentList			455221	1					
ANR	455258	ReturnType	void		455221	1					
ANR	455259	Identifier	SplashWindow :: keyPressEvent		455221	2					
ANR	455260	ParameterList	QKeyEvent * event		455221	3					
ANR	455261	Parameter	QKeyEvent * event	101:33:3096:3111	455221	0	True				
ANR	455262	ParameterType	QKeyEvent *		455221	0					
ANR	455263	Identifier	event		455221	1					
ANR	455264	CFGEntryNode	ENTRY		455221		True				
ANR	455265	CFGExitNode	EXIT		455221		True				
ANR	455266	Symbol	Qt :: Key_Escape		455221						
ANR	455267	Symbol	event -> isAccepted		455221						
ANR	455268	Symbol	event -> key		455221						
ANR	455269	Symbol	* event		455221						
ANR	455270	Symbol	m_testing		455221						
ANR	455271	Symbol	event		455221						
ANR	455272	Function	SplashWindow :: mousePressEvent	109:0:3284:3474							
ANR	455273	FunctionDef	SplashWindow :: mousePressEvent (QMouseEvent * event)		455272	0					
ANR	455274	CompoundStatement		110:0:3339:3474	455272	0					
ANR	455275	ExpressionStatement	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent ( event )	111:4:3345:3404	455272	0	True				
ANR	455276	CallExpression	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent ( event )		455272	0					
ANR	455277	Callee	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent		455272	0					
ANR	455278	Identifier	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent		455272	0					
ANR	455279	ArgumentList	event		455272	1					
ANR	455280	Argument	event		455272	0					
ANR	455281	Identifier	event		455272	0					
ANR	455282	IfStatement	if ( m_testing && ! event -> isAccepted ( ) )		455272	1					
ANR	455283	Condition	m_testing && ! event -> isAccepted ( )	112:8:3414:3446	455272	0	True				
ANR	455284	AndExpression	m_testing && ! event -> isAccepted ( )		455272	0		&&			
ANR	455285	Identifier	m_testing		455272	0					
ANR	455286	UnaryOperationExpression	! event -> isAccepted ( )		455272	1					
ANR	455287	UnaryOperator	!		455272	0					
ANR	455288	CallExpression	event -> isAccepted ( )		455272	1					
ANR	455289	Callee	event -> isAccepted		455272	0					
ANR	455290	PtrMemberAccess	event -> isAccepted		455272	0					
ANR	455291	Identifier	event		455272	0					
ANR	455292	Identifier	isAccepted		455272	1					
ANR	455293	ArgumentList			455272	1					
ANR	455294	CompoundStatement		3:43:109:109	455272	1					
ANR	455295	ExpressionStatement	close ( )	113:8:3459:3466	455272	0	True				
ANR	455296	CallExpression	close ( )		455272	0					
ANR	455297	Callee	close		455272	0					
ANR	455298	Identifier	close		455272	0					
ANR	455299	ArgumentList			455272	1					
ANR	455300	ReturnType	void		455272	1					
ANR	455301	Identifier	SplashWindow :: mousePressEvent		455272	2					
ANR	455302	ParameterList	QMouseEvent * event		455272	3					
ANR	455303	Parameter	QMouseEvent * event	109:35:3319:3336	455272	0	True				
ANR	455304	ParameterType	QMouseEvent *		455272	0					
ANR	455305	Identifier	event		455272	1					
ANR	455306	CFGEntryNode	ENTRY		455272		True				
ANR	455307	CFGExitNode	EXIT		455272		True				
ANR	455308	Symbol	event -> isAccepted		455272						
ANR	455309	Symbol	* event		455272						
ANR	455310	Symbol	m_testing		455272						
ANR	455311	Symbol	event		455272						
ANR	455312	Function	SplashWindow :: setGeometry	117:0:3477:4395							
ANR	455313	FunctionDef	SplashWindow :: setGeometry (const QRect & rect)		455312	0					
ANR	455314	CompoundStatement		118:0:3527:4395	455312	0					
ANR	455315	IdentifierDeclStatement	bool oldGeometryEmpty = geometry ( ) . isNull ( ) ;	119:4:3533:3576	455312	0	True				
ANR	455316	IdentifierDecl	oldGeometryEmpty = geometry ( ) . isNull ( )		455312	0					
ANR	455317	IdentifierDeclType	bool		455312	0					
ANR	455318	Identifier	oldGeometryEmpty		455312	1					
ANR	455319	AssignmentExpression	oldGeometryEmpty = geometry ( ) . isNull ( )		455312	2		=			
ANR	455320	Identifier	oldGeometryEmpty		455312	0					
ANR	455321	CallExpression	geometry ( ) . isNull ( )		455312	1					
ANR	455322	Callee	geometry ( ) . isNull		455312	0					
ANR	455323	MemberAccess	geometry ( ) . isNull		455312	0					
ANR	455324	CallExpression	geometry ( )		455312	0					
ANR	455325	Callee	geometry		455312	0					
ANR	455326	Identifier	geometry		455312	0					
ANR	455327	ArgumentList			455312	1					
ANR	455328	Identifier	isNull		455312	1					
ANR	455329	ArgumentList			455312	1					
ANR	455330	ExpressionStatement	KQuickAddons :: QuickViewSharedEngine :: setGeometry ( rect )	120:4:3582:3636	455312	1	True				
ANR	455331	CallExpression	KQuickAddons :: QuickViewSharedEngine :: setGeometry ( rect )		455312	0					
ANR	455332	Callee	KQuickAddons :: QuickViewSharedEngine :: setGeometry		455312	0					
ANR	455333	Identifier	KQuickAddons :: QuickViewSharedEngine :: setGeometry		455312	0					
ANR	455334	ArgumentList	rect		455312	1					
ANR	455335	Argument	rect		455312	0					
ANR	455336	Identifier	rect		455312	0					
ANR	455337	IfStatement	if ( oldGeometryEmpty )		455312	2					
ANR	455338	Condition	oldGeometryEmpty	122:8:3647:3662	455312	0	True				
ANR	455339	Identifier	oldGeometryEmpty		455312	0					
ANR	455340	CompoundStatement		14:8:532:588	455312	1					
ANR	455341	IdentifierDeclStatement	"KPackage :: Package package = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) ) ;"	124:8:3676:3786	455312	0	True				
ANR	455342	IdentifierDecl	"package = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) )"		455312	0					
ANR	455343	IdentifierDeclType	KPackage :: Package		455312	0					
ANR	455344	Identifier	package		455312	1					
ANR	455345	AssignmentExpression	"package = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) )"		455312	2		=			
ANR	455346	Identifier	package		455312	0					
ANR	455347	CallExpression	"KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) )"		455312	1					
ANR	455348	Callee	KPackage :: PackageLoader :: self ( ) -> loadPackage		455312	0					
ANR	455349	PtrMemberAccess	KPackage :: PackageLoader :: self ( ) -> loadPackage		455312	0					
ANR	455350	CallExpression	KPackage :: PackageLoader :: self ( )		455312	0					
ANR	455351	Callee	KPackage :: PackageLoader :: self		455312	0					
ANR	455352	Identifier	KPackage :: PackageLoader :: self		455312	0					
ANR	455353	ArgumentList			455312	1					
ANR	455354	Identifier	loadPackage		455312	1					
ANR	455355	ArgumentList	"QStringLiteral ( ""Plasma/LookAndFeel"" )"		455312	1					
ANR	455356	Argument	"QStringLiteral ( ""Plasma/LookAndFeel"" )"		455312	0					
ANR	455357	CallExpression	"QStringLiteral ( ""Plasma/LookAndFeel"" )"		455312	0					
ANR	455358	Callee	QStringLiteral		455312	0					
ANR	455359	Identifier	QStringLiteral		455312	0					
ANR	455360	ArgumentList	"""Plasma/LookAndFeel"""		455312	1					
ANR	455361	Argument	"""Plasma/LookAndFeel"""		455312	0					
ANR	455362	PrimaryExpression	"""Plasma/LookAndFeel"""		455312	0					
ANR	455363	IdentifierDeclStatement	"KConfigGroup cg ( KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) ) , ""KDE"" ) ;"	125:8:3796:3875	455312	1	True				
ANR	455364	IdentifierDecl	"cg ( KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) ) , ""KDE"" )"		455312	0					
ANR	455365	IdentifierDeclType	KConfigGroup		455312	0					
ANR	455366	Identifier	cg		455312	1					
ANR	455367	Expression	"KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) ) , ""KDE"""		455312	2					
ANR	455368	CallExpression	"KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) )"		455312	0					
ANR	455369	Callee	KSharedConfig :: openConfig		455312	0					
ANR	455370	Identifier	KSharedConfig :: openConfig		455312	0					
ANR	455371	ArgumentList	"QStringLiteral ( ""kdeglobals"" )"		455312	1					
ANR	455372	Argument	"QStringLiteral ( ""kdeglobals"" )"		455312	0					
ANR	455373	CallExpression	"QStringLiteral ( ""kdeglobals"" )"		455312	0					
ANR	455374	Callee	QStringLiteral		455312	0					
ANR	455375	Identifier	QStringLiteral		455312	0					
ANR	455376	ArgumentList	"""kdeglobals"""		455312	1					
ANR	455377	Argument	"""kdeglobals"""		455312	0					
ANR	455378	PrimaryExpression	"""kdeglobals"""		455312	0					
ANR	455379	PrimaryExpression	"""KDE"""		455312	1					
ANR	455380	IdentifierDeclStatement	"const QString packageName = cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) ) ;"	126:8:3885:3958	455312	2	True				
ANR	455381	IdentifierDecl	"packageName = cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) )"		455312	0					
ANR	455382	IdentifierDeclType	const QString		455312	0					
ANR	455383	Identifier	packageName		455312	1					
ANR	455384	AssignmentExpression	"packageName = cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) )"		455312	2		=			
ANR	455385	Identifier	packageName		455312	0					
ANR	455386	CallExpression	"cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) )"		455312	1					
ANR	455387	Callee	cg . readEntry		455312	0					
ANR	455388	MemberAccess	cg . readEntry		455312	0					
ANR	455389	Identifier	cg		455312	0					
ANR	455390	Identifier	readEntry		455312	1					
ANR	455391	ArgumentList	"""LookAndFeelPackage"""		455312	1					
ANR	455392	Argument	"""LookAndFeelPackage"""		455312	0					
ANR	455393	PrimaryExpression	"""LookAndFeelPackage"""		455312	0					
ANR	455394	Argument	QString ( )		455312	1					
ANR	455395	CallExpression	QString ( )		455312	0					
ANR	455396	Callee	QString		455312	0					
ANR	455397	Identifier	QString		455312	0					
ANR	455398	ArgumentList			455312	1					
ANR	455399	IfStatement	if ( ! packageName . isEmpty ( ) )		455312	3					
ANR	455400	Condition	! packageName . isEmpty ( )	127:12:3972:3993	455312	0	True				
ANR	455401	UnaryOperationExpression	! packageName . isEmpty ( )		455312	0					
ANR	455402	UnaryOperator	!		455312	0					
ANR	455403	CallExpression	packageName . isEmpty ( )		455312	1					
ANR	455404	Callee	packageName . isEmpty		455312	0					
ANR	455405	MemberAccess	packageName . isEmpty		455312	0					
ANR	455406	Identifier	packageName		455312	0					
ANR	455407	Identifier	isEmpty		455312	1					
ANR	455408	ArgumentList			455312	1					
ANR	455409	CompoundStatement		10:36:468:468	455312	1					
ANR	455410	ExpressionStatement	package . setPath ( packageName )	128:12:4010:4038	455312	0	True				
ANR	455411	CallExpression	package . setPath ( packageName )		455312	0					
ANR	455412	Callee	package . setPath		455312	0					
ANR	455413	MemberAccess	package . setPath		455312	0					
ANR	455414	Identifier	package		455312	0					
ANR	455415	Identifier	setPath		455312	1					
ANR	455416	ArgumentList	packageName		455312	1					
ANR	455417	Argument	packageName		455312	0					
ANR	455418	Identifier	packageName		455312	0					
ANR	455419	ExpressionStatement		129:9:4049:4049	455312	4	True				
ANR	455420	IdentifierDeclStatement	const QString theme = QGuiApplication :: arguments ( ) . at ( 1 ) ;	131:8:4060:4116	455312	5	True				
ANR	455421	IdentifierDecl	theme = QGuiApplication :: arguments ( ) . at ( 1 )		455312	0					
ANR	455422	IdentifierDeclType	const QString		455312	0					
ANR	455423	Identifier	theme		455312	1					
ANR	455424	AssignmentExpression	theme = QGuiApplication :: arguments ( ) . at ( 1 )		455312	2		=			
ANR	455425	Identifier	theme		455312	0					
ANR	455426	CallExpression	QGuiApplication :: arguments ( ) . at ( 1 )		455312	1					
ANR	455427	Callee	QGuiApplication :: arguments ( ) . at		455312	0					
ANR	455428	MemberAccess	QGuiApplication :: arguments ( ) . at		455312	0					
ANR	455429	CallExpression	QGuiApplication :: arguments ( )		455312	0					
ANR	455430	Callee	QGuiApplication :: arguments		455312	0					
ANR	455431	Identifier	QGuiApplication :: arguments		455312	0					
ANR	455432	ArgumentList			455312	1					
ANR	455433	Identifier	at		455312	1					
ANR	455434	ArgumentList	1		455312	1					
ANR	455435	Argument	1		455312	0					
ANR	455436	PrimaryExpression	1		455312	0					
ANR	455437	IfStatement	"if ( ! theme . startsWith ( QLatin1String ( ""--"" ) ) )"		455312	6					
ANR	455438	Condition	"! theme . startsWith ( QLatin1String ( ""--"" ) )"	132:12:4130:4167	455312	0	True				
ANR	455439	UnaryOperationExpression	"! theme . startsWith ( QLatin1String ( ""--"" ) )"		455312	0					
ANR	455440	UnaryOperator	!		455312	0					
ANR	455441	CallExpression	"theme . startsWith ( QLatin1String ( ""--"" ) )"		455312	1					
ANR	455442	Callee	theme . startsWith		455312	0					
ANR	455443	MemberAccess	theme . startsWith		455312	0					
ANR	455444	Identifier	theme		455312	0					
ANR	455445	Identifier	startsWith		455312	1					
ANR	455446	ArgumentList	"QLatin1String ( ""--"" )"		455312	1					
ANR	455447	Argument	"QLatin1String ( ""--"" )"		455312	0					
ANR	455448	CallExpression	"QLatin1String ( ""--"" )"		455312	0					
ANR	455449	Callee	QLatin1String		455312	0					
ANR	455450	Identifier	QLatin1String		455312	0					
ANR	455451	ArgumentList	"""--"""		455312	1					
ANR	455452	Argument	"""--"""		455312	0					
ANR	455453	PrimaryExpression	"""--"""		455312	0					
ANR	455454	CompoundStatement		15:52:642:642	455312	1					
ANR	455455	ExpressionStatement	package . setPath ( theme )	133:12:4184:4206	455312	0	True				
ANR	455456	CallExpression	package . setPath ( theme )		455312	0					
ANR	455457	Callee	package . setPath		455312	0					
ANR	455458	MemberAccess	package . setPath		455312	0					
ANR	455459	Identifier	package		455312	0					
ANR	455460	Identifier	setPath		455312	1					
ANR	455461	ArgumentList	theme		455312	1					
ANR	455462	Argument	theme		455312	0					
ANR	455463	Identifier	theme		455312	0					
ANR	455464	ExpressionStatement	"setSource ( QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) ) )"	136:8:4227:4295	455312	7	True				
ANR	455465	CallExpression	"setSource ( QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) ) )"		455312	0					
ANR	455466	Callee	setSource		455312	0					
ANR	455467	Identifier	setSource		455312	0					
ANR	455468	ArgumentList	"QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) )"		455312	1					
ANR	455469	Argument	"QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) )"		455312	0					
ANR	455470	CallExpression	"QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) )"		455312	0					
ANR	455471	Callee	QUrl :: fromLocalFile		455312	0					
ANR	455472	Identifier	QUrl :: fromLocalFile		455312	0					
ANR	455473	ArgumentList	"package . filePath ( ""splashmainscript"" )"		455312	1					
ANR	455474	Argument	"package . filePath ( ""splashmainscript"" )"		455312	0					
ANR	455475	CallExpression	"package . filePath ( ""splashmainscript"" )"		455312	0					
ANR	455476	Callee	package . filePath		455312	0					
ANR	455477	MemberAccess	package . filePath		455312	0					
ANR	455478	Identifier	package		455312	0					
ANR	455479	Identifier	filePath		455312	1					
ANR	455480	ArgumentList	"""splashmainscript"""		455312	1					
ANR	455481	Argument	"""splashmainscript"""		455312	0					
ANR	455482	PrimaryExpression	"""splashmainscript"""		455312	0					
ANR	455483	IfStatement	if ( m_shellSurface )		455312	3					
ANR	455484	Condition	m_shellSurface	139:8:4312:4325	455312	0	True				
ANR	455485	Identifier	m_shellSurface		455312	0					
ANR	455486	CompoundStatement		22:24:800:800	455312	1					
ANR	455487	ExpressionStatement	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )	140:8:4338:4387	455312	0	True				
ANR	455488	CallExpression	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )		455312	0					
ANR	455489	Callee	m_shellSurface -> setPosition		455312	0					
ANR	455490	PtrMemberAccess	m_shellSurface -> setPosition		455312	0					
ANR	455491	Identifier	m_shellSurface		455312	0					
ANR	455492	Identifier	setPosition		455312	1					
ANR	455493	ArgumentList	geometry ( ) . topLeft ( )		455312	1					
ANR	455494	Argument	geometry ( ) . topLeft ( )		455312	0					
ANR	455495	CallExpression	geometry ( ) . topLeft ( )		455312	0					
ANR	455496	Callee	geometry ( ) . topLeft		455312	0					
ANR	455497	MemberAccess	geometry ( ) . topLeft		455312	0					
ANR	455498	CallExpression	geometry ( )		455312	0					
ANR	455499	Callee	geometry		455312	0					
ANR	455500	Identifier	geometry		455312	0					
ANR	455501	ArgumentList			455312	1					
ANR	455502	Identifier	topLeft		455312	1					
ANR	455503	ArgumentList			455312	1					
ANR	455504	ReturnType	void		455312	1					
ANR	455505	Identifier	SplashWindow :: setGeometry		455312	2					
ANR	455506	ParameterList	const QRect & rect		455312	3					
ANR	455507	Parameter	const QRect & rect	117:31:3508:3524	455312	0	True				
ANR	455508	ParameterType	const QRect &		455312	0					
ANR	455509	Identifier	rect		455312	1					
ANR	455510	CFGEntryNode	ENTRY		455312		True				
ANR	455511	CFGExitNode	EXIT		455312		True				
ANR	455512	Symbol	QGuiApplication :: arguments ( ) . at		455312						
ANR	455513	Symbol	theme . startsWith		455312						
ANR	455514	Symbol	oldGeometryEmpty		455312						
ANR	455515	Symbol	package		455312						
ANR	455516	Symbol	KPackage :: PackageLoader :: self		455312						
ANR	455517	Symbol	cg		455312						
ANR	455518	Symbol	* KPackage :: PackageLoader :: self		455312						
ANR	455519	Symbol	cg . readEntry		455312						
ANR	455520	Symbol	QGuiApplication :: arguments		455312						
ANR	455521	Symbol	QUrl :: fromLocalFile		455312						
ANR	455522	Symbol	geometry ( ) . topLeft		455312						
ANR	455523	Symbol	package . filePath		455312						
ANR	455524	Symbol	QLatin1String		455312						
ANR	455525	Symbol	rect		455312						
ANR	455526	Symbol	QString		455312						
ANR	455527	Symbol	m_shellSurface		455312						
ANR	455528	Symbol	geometry ( ) . isNull		455312						
ANR	455529	Symbol	packageName . isEmpty		455312						
ANR	455530	Symbol	geometry		455312						
ANR	455531	Symbol	QStringLiteral		455312						
ANR	455532	Symbol	theme		455312						
ANR	455533	Symbol	packageName		455312						
ANR	455534	Symbol	KPackage :: PackageLoader :: self ( ) -> loadPackage		455312						
ANR	455535	Function	SplashWindow :: setupWaylandIntegration	144:0:4398:5177							
ANR	455536	FunctionDef	SplashWindow :: setupWaylandIntegration ()		455535	0					
ANR	455537	CompoundStatement		145:0:4443:5177	455535	0					
ANR	455538	IfStatement	if ( m_shellSurface )		455535	0					
ANR	455539	Condition	m_shellSurface	146:8:4453:4466	455535	0	True				
ANR	455540	Identifier	m_shellSurface		455535	0					
ANR	455541	CompoundStatement		2:24:25:25	455535	1					
ANR	455542	ReturnStatement	return ;	148:8:4504:4510	455535	0	True				
ANR	455543	Statement	if	150:4:4522:4523	455535	1	True				
ANR	455544	Statement	(	150:7:4525:4525	455535	2	True				
ANR	455545	Statement	SplashApp	150:8:4526:4534	455535	3	True				
ANR	455546	Statement	*	150:18:4536:4536	455535	4	True				
ANR	455547	Statement	a	150:19:4537:4537	455535	5	True				
ANR	455548	Statement	=	150:21:4539:4539	455535	6	True				
ANR	455549	Statement	qobject_cast	150:23:4541:4552	455535	7	True				
ANR	455550	Statement	<	150:35:4553:4553	455535	8	True				
ANR	455551	Statement	SplashApp	150:36:4554:4562	455535	9	True				
ANR	455552	Statement	*	150:45:4563:4563	455535	10	True				
ANR	455553	Statement	>	150:46:4564:4564	455535	11	True				
ANR	455554	Statement	(	150:47:4565:4565	455535	12	True				
ANR	455555	Statement	qApp	150:48:4566:4569	455535	13	True				
ANR	455556	Statement	)	150:52:4570:4570	455535	14	True				
ANR	455557	Statement	)	150:53:4571:4571	455535	15	True				
ANR	455558	CompoundStatement		12:8:304:342	455535	16					
ANR	455559	Statement	using	151:8:4583:4587	455535	0	True				
ANR	455560	Statement	namespace	151:14:4589:4597	455535	1	True				
ANR	455561	ExpressionStatement	KWayland :: Client	151:24:4599:4615	455535	2	True				
ANR	455562	Identifier	KWayland :: Client		455535	0					
ANR	455563	IdentifierDeclStatement	PlasmaShell * interface = a -> waylandPlasmaShellInterface ( ) ;	152:8:4625:4682	455535	3	True				
ANR	455564	IdentifierDecl	* interface = a -> waylandPlasmaShellInterface ( )		455535	0					
ANR	455565	IdentifierDeclType	PlasmaShell *		455535	0					
ANR	455566	Identifier	interface		455535	1					
ANR	455567	AssignmentExpression	* interface = a -> waylandPlasmaShellInterface ( )		455535	2		=			
ANR	455568	Identifier	interface		455535	0					
ANR	455569	CallExpression	a -> waylandPlasmaShellInterface ( )		455535	1					
ANR	455570	Callee	a -> waylandPlasmaShellInterface		455535	0					
ANR	455571	PtrMemberAccess	a -> waylandPlasmaShellInterface		455535	0					
ANR	455572	Identifier	a		455535	0					
ANR	455573	Identifier	waylandPlasmaShellInterface		455535	1					
ANR	455574	ArgumentList			455535	1					
ANR	455575	IfStatement	if ( ! interface )		455535	4					
ANR	455576	Condition	! interface	153:12:4696:4705	455535	0	True				
ANR	455577	UnaryOperationExpression	! interface		455535	0					
ANR	455578	UnaryOperator	!		455535	0					
ANR	455579	Identifier	interface		455535	1					
ANR	455580	CompoundStatement		9:24:264:264	455535	1					
ANR	455581	ReturnStatement	return ;	154:12:4722:4728	455535	0	True				
ANR	455582	IdentifierDeclStatement	Surface * s = Surface :: fromWindow ( this ) ;	156:8:4748:4786	455535	5	True				
ANR	455583	IdentifierDecl	* s = Surface :: fromWindow ( this )		455535	0					
ANR	455584	IdentifierDeclType	Surface *		455535	0					
ANR	455585	Identifier	s		455535	1					
ANR	455586	AssignmentExpression	* s = Surface :: fromWindow ( this )		455535	2		=			
ANR	455587	Identifier	s		455535	0					
ANR	455588	CallExpression	Surface :: fromWindow ( this )		455535	1					
ANR	455589	Callee	Surface :: fromWindow		455535	0					
ANR	455590	Identifier	Surface :: fromWindow		455535	0					
ANR	455591	ArgumentList	this		455535	1					
ANR	455592	Argument	this		455535	0					
ANR	455593	Identifier	this		455535	0					
ANR	455594	IfStatement	if ( ! s )		455535	6					
ANR	455595	Condition	! s	157:12:4800:4801	455535	0	True				
ANR	455596	UnaryOperationExpression	! s		455535	0					
ANR	455597	UnaryOperator	!		455535	0					
ANR	455598	Identifier	s		455535	1					
ANR	455599	CompoundStatement		13:16:360:360	455535	1					
ANR	455600	ReturnStatement	return ;	158:12:4818:4824	455535	0	True				
ANR	455601	ExpressionStatement	"m_shellSurface = interface -> createSurface ( s , this )"	160:8:4844:4894	455535	7	True				
ANR	455602	AssignmentExpression	"m_shellSurface = interface -> createSurface ( s , this )"		455535	0		=			
ANR	455603	Identifier	m_shellSurface		455535	0					
ANR	455604	CallExpression	"interface -> createSurface ( s , this )"		455535	1					
ANR	455605	Callee	interface -> createSurface		455535	0					
ANR	455606	PtrMemberAccess	interface -> createSurface		455535	0					
ANR	455607	Identifier	interface		455535	0					
ANR	455608	Identifier	createSurface		455535	1					
ANR	455609	ArgumentList	s		455535	1					
ANR	455610	Argument	s		455535	0					
ANR	455611	Identifier	s		455535	0					
ANR	455612	Argument	this		455535	1					
ANR	455613	Identifier	this		455535	0					
ANR	455614	ExpressionStatement	m_shellSurface -> setRole ( PlasmaShellSurface :: Role :: OnScreenDisplay )	163:8:5044:5110	455535	8	True				
ANR	455615	CallExpression	m_shellSurface -> setRole ( PlasmaShellSurface :: Role :: OnScreenDisplay )		455535	0					
ANR	455616	Callee	m_shellSurface -> setRole		455535	0					
ANR	455617	PtrMemberAccess	m_shellSurface -> setRole		455535	0					
ANR	455618	Identifier	m_shellSurface		455535	0					
ANR	455619	Identifier	setRole		455535	1					
ANR	455620	ArgumentList	PlasmaShellSurface :: Role :: OnScreenDisplay		455535	1					
ANR	455621	Argument	PlasmaShellSurface :: Role :: OnScreenDisplay		455535	0					
ANR	455622	Identifier	PlasmaShellSurface :: Role :: OnScreenDisplay		455535	0					
ANR	455623	ExpressionStatement	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )	164:8:5120:5169	455535	9	True				
ANR	455624	CallExpression	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )		455535	0					
ANR	455625	Callee	m_shellSurface -> setPosition		455535	0					
ANR	455626	PtrMemberAccess	m_shellSurface -> setPosition		455535	0					
ANR	455627	Identifier	m_shellSurface		455535	0					
ANR	455628	Identifier	setPosition		455535	1					
ANR	455629	ArgumentList	geometry ( ) . topLeft ( )		455535	1					
ANR	455630	Argument	geometry ( ) . topLeft ( )		455535	0					
ANR	455631	CallExpression	geometry ( ) . topLeft ( )		455535	0					
ANR	455632	Callee	geometry ( ) . topLeft		455535	0					
ANR	455633	MemberAccess	geometry ( ) . topLeft		455535	0					
ANR	455634	CallExpression	geometry ( )		455535	0					
ANR	455635	Callee	geometry		455535	0					
ANR	455636	Identifier	geometry		455535	0					
ANR	455637	ArgumentList			455535	1					
ANR	455638	Identifier	topLeft		455535	1					
ANR	455639	ArgumentList			455535	1					
ANR	455640	ReturnType	void		455535	1					
ANR	455641	Identifier	SplashWindow :: setupWaylandIntegration		455535	2					
ANR	455642	ParameterList			455535	3					
ANR	455643	CFGEntryNode	ENTRY		455535		True				
ANR	455644	CFGExitNode	EXIT		455535		True				
ANR	455645	Symbol	a		455535						
ANR	455646	Symbol	this		455535						
ANR	455647	Symbol	* a		455535						
ANR	455648	Symbol	* interface		455535						
ANR	455649	Symbol	interface		455535						
ANR	455650	Symbol	geometry ( ) . topLeft		455535						
ANR	455651	Symbol	a -> waylandPlasmaShellInterface		455535						
ANR	455652	Symbol	m_shellSurface		455535						
ANR	455653	Symbol	interface -> createSurface		455535						
ANR	455654	Symbol	s		455535						
ANR	455655	Symbol	PlasmaShellSurface :: Role :: OnScreenDisplay		455535						
ANR	455656	Symbol	geometry		455535						
ANR	455657	Symbol	Surface :: fromWindow		455535						
