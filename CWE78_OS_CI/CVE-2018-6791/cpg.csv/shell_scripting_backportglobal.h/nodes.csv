command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	707272	File	data/converged/CVE-2018-6791_plasma-workspace/shell_scripting_backportglobal.h								
ANR	707273	DeclStmt									
ANR	707274	Decl							Class	Class *	self
ANR	707275	DeclStmt									
ANR	707276	Decl							Class	Class *	self
ANR	707277	Function	__mtd__	82:0:3044:3183							
ANR	707278	FunctionDef	"__mtd__ (QScriptContext * ctx , QScriptEngine * eng)"		707277	0					
ANR	707279	CompoundStatement		83:0:3115:3183	707277	0					
ANR	707280	ExpressionStatement	"DECLARE_SELF ( Class , __mtd__ )"	84:4:3123:3151	707277	0	True				
ANR	707281	CallExpression	"DECLARE_SELF ( Class , __mtd__ )"		707277	0					
ANR	707282	Callee	DECLARE_SELF		707277	0					
ANR	707283	Identifier	DECLARE_SELF		707277	0					
ANR	707284	ArgumentList	Class		707277	1					
ANR	707285	Argument	Class		707277	0					
ANR	707286	Identifier	Class		707277	0					
ANR	707287	Argument	__mtd__		707277	1					
ANR	707288	Identifier	__mtd__		707277	0					
ANR	707289	Statement	define	86:1:3155:3160	707277	1	True				
ANR	707290	Statement	END_DECLARE_METHOD	86:8:3162:3179	707277	2	True				
ANR	707291	ReturnType	static QScriptValue		707277	1					
ANR	707292	Identifier	__mtd__		707277	2					
ANR	707293	ParameterList	"QScriptContext * ctx , QScriptEngine * eng"		707277	3					
ANR	707294	Parameter	QScriptContext * ctx	82:28:3072:3090	707277	0	True				
ANR	707295	ParameterType	QScriptContext *		707277	0					
ANR	707296	Identifier	ctx		707277	1					
ANR	707297	Parameter	QScriptEngine * eng	82:49:3093:3110	707277	1	True				
ANR	707298	ParameterType	QScriptEngine *		707277	0					
ANR	707299	Identifier	eng		707277	1					
ANR	707300	CFGEntryNode	ENTRY		707277		True				
ANR	707301	CFGExitNode	EXIT		707277		True				
ANR	707302	Symbol	ctx		707277						
ANR	707303	Symbol	Class		707277						
ANR	707304	Symbol	eng		707277						
ANR	707305	Symbol	__mtd__		707277						
ANR	707306	ClassDef	<unnamed>	209:0:7482:7511							
ANR	707307	ClassDef	Pointer	214:0:7537:10292							
ANR	707308	DeclStmt									
ANR	707309	Decl							T	T *	pointer_type
ANR	707310	DeclStmt									
ANR	707311	Decl							QExplicitlySharedDataPointer < Pointer < T > >	QExplicitlySharedDataPointer < Pointer < T > >	wrapped_pointer_type
ANR	707312	Function	~Pointer	220:4:7692:7781							
ANR	707313	FunctionDef	~Pointer ()		707312	2					
ANR	707314	CompoundStatement		221:4:7707:7781	707312	0					
ANR	707315	IfStatement	if ( ! ( m_flags & UserOwnership ) )		707312	0					
ANR	707316	Condition	! ( m_flags & UserOwnership )	222:12:7721:7746	707312	0	True				
ANR	707317	UnaryOperationExpression	! ( m_flags & UserOwnership )		707312	0					
ANR	707318	UnaryOperator	!		707312	0					
ANR	707319	BitAndExpression	m_flags & UserOwnership		707312	1		&			
ANR	707320	Identifier	m_flags		707312	0					
ANR	707321	Identifier	UserOwnership		707312	1					
ANR	707322	Statement	delete	223:12:7761:7766	707312	1	True				
ANR	707323	ExpressionStatement	m_value	223:19:7768:7775	707312	1	True				
ANR	707324	Identifier	m_value		707312	0					
ANR	707325	Identifier	~Pointer		707312	1					
ANR	707326	ParameterList			707312	2					
ANR	707327	CFGEntryNode	ENTRY		707312		True				
ANR	707328	CFGExitNode	EXIT		707312		True				
ANR	707329	Symbol	m_flags		707312						
ANR	707330	Symbol	UserOwnership		707312						
ANR	707331	Function	fromScriptValue	248:4:8267:9990							
ANR	707332	FunctionDef	"fromScriptValue (const QScriptValue & value , T * & target)"		707331	3					
ANR	707333	CompoundStatement		249:4:8338:9990	707331	0					
ANR	707334	ReturnType	static void		707331	1					
ANR	707335	Identifier	fromScriptValue		707331	2					
ANR	707336	ParameterList	"const QScriptValue & value , T * & target"		707331	3					
ANR	707337	Parameter	const QScriptValue & value	248:32:8295:8319	707331	0	True				
ANR	707338	ParameterType	const QScriptValue &		707331	0					
ANR	707339	Identifier	value		707331	1					
ANR	707340	Parameter	T * & target	248:59:8322:8331	707331	1	True				
ANR	707341	ParameterType	T * &		707331	0					
ANR	707342	Identifier	target		707331	1					
ANR	707343	CFGEntryNode	ENTRY		707331		True				
ANR	707344	CFGExitNode	EXIT		707331		True				
ANR	707345	Symbol	value		707331						
ANR	707346	Symbol	target		707331						
ANR	707347	Function	flags	286:4:9997:10038							
ANR	707348	FunctionDef	flags ()		707347	4					
ANR	707349	CompoundStatement		287:4:10020:10038	707347	0					
ANR	707350	ReturnStatement	return m_flags ;	287:1:10022:10036	707347	0	True				
ANR	707351	Identifier	m_flags		707347	0					
ANR	707352	ReturnType	uint		707347	1					
ANR	707353	Identifier	flags		707347	2					
ANR	707354	ParameterList			707347	3					
ANR	707355	CFGEntryNode	ENTRY		707347		True				
ANR	707356	CFGExitNode	EXIT		707347		True				
ANR	707357	Symbol	m_flags		707347						
ANR	707358	Function	setFlags	288:4:10044:10093							
ANR	707359	FunctionDef	setFlags (uint flags)		707358	5					
ANR	707360	CompoundStatement		289:4:10074:10093	707358	0					
ANR	707361	ExpressionStatement	m_flags = flags	289:1:10076:10091	707358	0	True				
ANR	707362	AssignmentExpression	m_flags = flags		707358	0		=			
ANR	707363	Identifier	m_flags		707358	0					
ANR	707364	Identifier	flags		707358	1					
ANR	707365	ReturnType	void		707358	1					
ANR	707366	Identifier	setFlags		707358	2					
ANR	707367	ParameterList	uint flags		707358	3					
ANR	707368	Parameter	uint flags	288:18:10058:10067	707358	0	True				
ANR	707369	ParameterType	uint		707358	0					
ANR	707370	Identifier	flags		707358	1					
ANR	707371	CFGEntryNode	ENTRY		707358		True				
ANR	707372	CFGExitNode	EXIT		707358		True				
ANR	707373	Symbol	m_flags		707358						
ANR	707374	Symbol	flags		707358						
ANR	707375	Function	unsetFlags	290:4:10099:10152							
ANR	707376	FunctionDef	unsetFlags (uint flags)		707375	6					
ANR	707377	CompoundStatement		291:4:10131:10152	707375	0					
ANR	707378	ExpressionStatement	m_flags &= ~flags	291:1:10133:10150	707375	0	True				
ANR	707379	AssignmentExpression	m_flags &= ~flags		707375	0		&=			
ANR	707380	Identifier	m_flags		707375	0					
ANR	707381	Identifier	~flags		707375	1					
ANR	707382	ReturnType	void		707375	1					
ANR	707383	Identifier	unsetFlags		707375	2					
ANR	707384	ParameterList	uint flags		707375	3					
ANR	707385	Parameter	uint flags	290:20:10115:10124	707375	0	True				
ANR	707386	ParameterType	uint		707375	0					
ANR	707387	Identifier	flags		707375	1					
ANR	707388	CFGEntryNode	ENTRY		707375		True				
ANR	707389	CFGExitNode	EXIT		707375		True				
ANR	707390	Symbol	m_flags		707375						
ANR	707391	Symbol	flags		707375						
ANR	707392	Symbol	~flags		707375						
ANR	707393	Function	Pointer	294:4:10170:10246							
ANR	707394	FunctionDef	"Pointer (T * value , uint flags)"		707393	7					
ANR	707395	CompoundStatement		296:4:10245:10246	707393	0					
ANR	707396	Identifier	Pointer		707393	1					
ANR	707397	ParameterList	"T * value , uint flags"		707393	2					
ANR	707398	Parameter	T * value	294:12:10178:10185	707393	0	True				
ANR	707399	ParameterType	T *		707393	0					
ANR	707400	Identifier	value		707393	1					
ANR	707401	Parameter	uint flags	294:22:10188:10197	707393	1	True				
ANR	707402	ParameterType	uint		707393	0					
ANR	707403	Identifier	flags		707393	1					
ANR	707404	CFGEntryNode	ENTRY		707393		True				
ANR	707405	CFGExitNode	EXIT		707393		True				
ANR	707406	Symbol	flags		707393						
ANR	707407	Symbol	value		707393						
ANR	707408	DeclStmt									
ANR	707409	Decl							uint	uint	m_flags
ANR	707410	DeclStmt									
ANR	707411	Decl							T	T *	m_value
ANR	707412	DeclStmt									
ANR	707413	Decl							"void ( * ) ( const QScriptValue & , T * & )"	"void ( * ) ( const QScriptValue & , T * & )"	df
ANR	707414	DeclStmt									
ANR	707415	Decl							const int	const int	id
ANR	707416	Function	maybeReleaseOwnership	321:0:10952:11315							
ANR	707417	FunctionDef	maybeReleaseOwnership (const QScriptValue & value)		707416	0					
ANR	707418	CompoundStatement		322:0:11013:11315	707416	0					
ANR	707419	IfStatement	if ( value . isVariant ( ) )		707416	0					
ANR	707420	Condition	value . isVariant ( )	323:8:11023:11039	707416	0	True				
ANR	707421	CallExpression	value . isVariant ( )		707416	0					
ANR	707422	Callee	value . isVariant		707416	0					
ANR	707423	MemberAccess	value . isVariant		707416	0					
ANR	707424	Identifier	value		707416	0					
ANR	707425	Identifier	isVariant		707416	1					
ANR	707426	ArgumentList			707416	1					
ANR	707427	CompoundStatement		4:8:80:133	707416	1					
ANR	707428	IdentifierDeclStatement	QVariant var = value . toVariant ( ) ;	324:8:11052:11084	707416	0	True				
ANR	707429	IdentifierDecl	var = value . toVariant ( )		707416	0					
ANR	707430	IdentifierDeclType	QVariant		707416	0					
ANR	707431	Identifier	var		707416	1					
ANR	707432	AssignmentExpression	var = value . toVariant ( )		707416	2		=			
ANR	707433	Identifier	var		707416	0					
ANR	707434	CallExpression	value . toVariant ( )		707416	1					
ANR	707435	Callee	value . toVariant		707416	0					
ANR	707436	MemberAccess	value . toVariant		707416	0					
ANR	707437	Identifier	value		707416	0					
ANR	707438	Identifier	toVariant		707416	1					
ANR	707439	ArgumentList			707416	1					
ANR	707440	IdentifierDeclStatement	QByteArray name = QMetaType :: typeName ( var . userType ( ) ) ;	325:8:11094:11147	707416	1	True				
ANR	707441	IdentifierDecl	name = QMetaType :: typeName ( var . userType ( ) )		707416	0					
ANR	707442	IdentifierDeclType	QByteArray		707416	0					
ANR	707443	Identifier	name		707416	1					
ANR	707444	AssignmentExpression	name = QMetaType :: typeName ( var . userType ( ) )		707416	2		=			
ANR	707445	Identifier	name		707416	0					
ANR	707446	CallExpression	QMetaType :: typeName ( var . userType ( ) )		707416	1					
ANR	707447	Callee	QMetaType :: typeName		707416	0					
ANR	707448	Identifier	QMetaType :: typeName		707416	0					
ANR	707449	ArgumentList	var . userType ( )		707416	1					
ANR	707450	Argument	var . userType ( )		707416	0					
ANR	707451	CallExpression	var . userType ( )		707416	0					
ANR	707452	Callee	var . userType		707416	0					
ANR	707453	MemberAccess	var . userType		707416	0					
ANR	707454	Identifier	var		707416	0					
ANR	707455	Identifier	userType		707416	1					
ANR	707456	ArgumentList			707416	1					
ANR	707457	IfStatement	"if ( name . startsWith ( ""QScript::Pointer<"" ) )"		707416	2					
ANR	707458	Condition	"name . startsWith ( ""QScript::Pointer<"" )"	326:12:11161:11196	707416	0	True				
ANR	707459	CallExpression	"name . startsWith ( ""QScript::Pointer<"" )"		707416	0					
ANR	707460	Callee	name . startsWith		707416	0					
ANR	707461	MemberAccess	name . startsWith		707416	0					
ANR	707462	Identifier	name		707416	0					
ANR	707463	Identifier	startsWith		707416	1					
ANR	707464	ArgumentList	"""QScript::Pointer<"""		707416	1					
ANR	707465	Argument	"""QScript::Pointer<"""		707416	0					
ANR	707466	PrimaryExpression	"""QScript::Pointer<"""		707416	0					
ANR	707467	Statement	(	327:12:11211:11211	707416	1	True				
ANR	707468	Statement	*	327:13:11212:11212	707416	3	True				
ANR	707469	Statement	reinterpret_cast	327:14:11213:11228	707416	4	True				
ANR	707470	Statement	<	327:30:11229:11229	707416	5	True				
ANR	707471	Statement	Pointer	327:31:11230:11236	707416	6	True				
ANR	707472	Statement	<	327:38:11237:11237	707416	7	True				
ANR	707473	Statement	void	327:39:11238:11241	707416	8	True				
ANR	707474	Statement	*	327:43:11242:11242	707416	9	True				
ANR	707475	Statement	>	327:44:11243:11243	707416	10	True				
ANR	707476	Statement	::	327:45:11244:11245	707416	11	True				
ANR	707477	Statement	wrapped_pointer_type	327:47:11246:11265	707416	12	True				
ANR	707478	Statement	*	327:68:11267:11267	707416	13	True				
ANR	707479	Statement	>	327:69:11268:11268	707416	14	True				
ANR	707480	Statement	(	327:70:11269:11269	707416	15	True				
ANR	707481	Statement	var	327:71:11270:11272	707416	16	True				
ANR	707482	Statement	.	327:74:11273:11273	707416	17	True				
ANR	707483	Statement	data	327:75:11274:11277	707416	18	True				
ANR	707484	Statement	(	327:79:11278:11278	707416	19	True				
ANR	707485	Statement	)	327:80:11279:11279	707416	20	True				
ANR	707486	Statement	)	327:81:11280:11280	707416	21	True				
ANR	707487	Statement	)	327:82:11281:11281	707416	22	True				
ANR	707488	Statement	->	327:83:11282:11283	707416	23	True				
ANR	707489	ExpressionStatement	setFlags ( UserOwnership )	327:85:11284:11307	707416	24	True				
ANR	707490	CallExpression	setFlags ( UserOwnership )		707416	0					
ANR	707491	Callee	setFlags		707416	0					
ANR	707492	Identifier	setFlags		707416	0					
ANR	707493	ArgumentList	UserOwnership		707416	1					
ANR	707494	Argument	UserOwnership		707416	0					
ANR	707495	Identifier	UserOwnership		707416	0					
ANR	707496	ReturnType	inline void		707416	1					
ANR	707497	Identifier	maybeReleaseOwnership		707416	2					
ANR	707498	ParameterList	const QScriptValue & value		707416	3					
ANR	707499	Parameter	const QScriptValue & value	321:34:10986:11010	707416	0	True				
ANR	707500	ParameterType	const QScriptValue &		707416	0					
ANR	707501	Identifier	value		707416	1					
ANR	707502	CFGEntryNode	ENTRY		707416		True				
ANR	707503	CFGExitNode	EXIT		707416		True				
ANR	707504	Symbol	value . isVariant		707416						
ANR	707505	Symbol	var . userType		707416						
ANR	707506	Symbol	name . startsWith		707416						
ANR	707507	Symbol	var		707416						
ANR	707508	Symbol	QMetaType :: typeName		707416						
ANR	707509	Symbol	name		707416						
ANR	707510	Symbol	value		707416						
ANR	707511	Symbol	UserOwnership		707416						
ANR	707512	Symbol	value . toVariant		707416						
ANR	707513	Function	maybeTakeOwnership	331:0:11318:11680							
ANR	707514	FunctionDef	maybeTakeOwnership (const QScriptValue & value)		707513	0					
ANR	707515	CompoundStatement		332:0:11376:11680	707513	0					
ANR	707516	IfStatement	if ( value . isVariant ( ) )		707513	0					
ANR	707517	Condition	value . isVariant ( )	333:8:11386:11402	707513	0	True				
ANR	707518	CallExpression	value . isVariant ( )		707513	0					
ANR	707519	Callee	value . isVariant		707513	0					
ANR	707520	MemberAccess	value . isVariant		707513	0					
ANR	707521	Identifier	value		707513	0					
ANR	707522	Identifier	isVariant		707513	1					
ANR	707523	ArgumentList			707513	1					
ANR	707524	CompoundStatement		4:8:80:133	707513	1					
ANR	707525	IdentifierDeclStatement	QVariant var = value . toVariant ( ) ;	334:8:11415:11447	707513	0	True				
ANR	707526	IdentifierDecl	var = value . toVariant ( )		707513	0					
ANR	707527	IdentifierDeclType	QVariant		707513	0					
ANR	707528	Identifier	var		707513	1					
ANR	707529	AssignmentExpression	var = value . toVariant ( )		707513	2		=			
ANR	707530	Identifier	var		707513	0					
ANR	707531	CallExpression	value . toVariant ( )		707513	1					
ANR	707532	Callee	value . toVariant		707513	0					
ANR	707533	MemberAccess	value . toVariant		707513	0					
ANR	707534	Identifier	value		707513	0					
ANR	707535	Identifier	toVariant		707513	1					
ANR	707536	ArgumentList			707513	1					
ANR	707537	IdentifierDeclStatement	QByteArray name = QMetaType :: typeName ( var . userType ( ) ) ;	335:8:11457:11510	707513	1	True				
ANR	707538	IdentifierDecl	name = QMetaType :: typeName ( var . userType ( ) )		707513	0					
ANR	707539	IdentifierDeclType	QByteArray		707513	0					
ANR	707540	Identifier	name		707513	1					
ANR	707541	AssignmentExpression	name = QMetaType :: typeName ( var . userType ( ) )		707513	2		=			
ANR	707542	Identifier	name		707513	0					
ANR	707543	CallExpression	QMetaType :: typeName ( var . userType ( ) )		707513	1					
ANR	707544	Callee	QMetaType :: typeName		707513	0					
ANR	707545	Identifier	QMetaType :: typeName		707513	0					
ANR	707546	ArgumentList	var . userType ( )		707513	1					
ANR	707547	Argument	var . userType ( )		707513	0					
ANR	707548	CallExpression	var . userType ( )		707513	0					
ANR	707549	Callee	var . userType		707513	0					
ANR	707550	MemberAccess	var . userType		707513	0					
ANR	707551	Identifier	var		707513	0					
ANR	707552	Identifier	userType		707513	1					
ANR	707553	ArgumentList			707513	1					
ANR	707554	IfStatement	"if ( name . startsWith ( ""QScript::Pointer<"" ) )"		707513	2					
ANR	707555	Condition	"name . startsWith ( ""QScript::Pointer<"" )"	336:12:11524:11559	707513	0	True				
ANR	707556	CallExpression	"name . startsWith ( ""QScript::Pointer<"" )"		707513	0					
ANR	707557	Callee	name . startsWith		707513	0					
ANR	707558	MemberAccess	name . startsWith		707513	0					
ANR	707559	Identifier	name		707513	0					
ANR	707560	Identifier	startsWith		707513	1					
ANR	707561	ArgumentList	"""QScript::Pointer<"""		707513	1					
ANR	707562	Argument	"""QScript::Pointer<"""		707513	0					
ANR	707563	PrimaryExpression	"""QScript::Pointer<"""		707513	0					
ANR	707564	Statement	(	337:12:11574:11574	707513	1	True				
ANR	707565	Statement	*	337:13:11575:11575	707513	3	True				
ANR	707566	Statement	reinterpret_cast	337:14:11576:11591	707513	4	True				
ANR	707567	Statement	<	337:30:11592:11592	707513	5	True				
ANR	707568	Statement	Pointer	337:31:11593:11599	707513	6	True				
ANR	707569	Statement	<	337:38:11600:11600	707513	7	True				
ANR	707570	Statement	void	337:39:11601:11604	707513	8	True				
ANR	707571	Statement	*	337:43:11605:11605	707513	9	True				
ANR	707572	Statement	>	337:44:11606:11606	707513	10	True				
ANR	707573	Statement	::	337:45:11607:11608	707513	11	True				
ANR	707574	Statement	wrapped_pointer_type	337:47:11609:11628	707513	12	True				
ANR	707575	Statement	*	337:68:11630:11630	707513	13	True				
ANR	707576	Statement	>	337:69:11631:11631	707513	14	True				
ANR	707577	Statement	(	337:70:11632:11632	707513	15	True				
ANR	707578	Statement	var	337:71:11633:11635	707513	16	True				
ANR	707579	Statement	.	337:74:11636:11636	707513	17	True				
ANR	707580	Statement	data	337:75:11637:11640	707513	18	True				
ANR	707581	Statement	(	337:79:11641:11641	707513	19	True				
ANR	707582	Statement	)	337:80:11642:11642	707513	20	True				
ANR	707583	Statement	)	337:81:11643:11643	707513	21	True				
ANR	707584	Statement	)	337:82:11644:11644	707513	22	True				
ANR	707585	Statement	->	337:83:11645:11646	707513	23	True				
ANR	707586	ExpressionStatement	unsetFlags ( UserOwnership )	337:85:11647:11672	707513	24	True				
ANR	707587	CallExpression	unsetFlags ( UserOwnership )		707513	0					
ANR	707588	Callee	unsetFlags		707513	0					
ANR	707589	Identifier	unsetFlags		707513	0					
ANR	707590	ArgumentList	UserOwnership		707513	1					
ANR	707591	Argument	UserOwnership		707513	0					
ANR	707592	Identifier	UserOwnership		707513	0					
ANR	707593	ReturnType	inline void		707513	1					
ANR	707594	Identifier	maybeTakeOwnership		707513	2					
ANR	707595	ParameterList	const QScriptValue & value		707513	3					
ANR	707596	Parameter	const QScriptValue & value	331:31:11349:11373	707513	0	True				
ANR	707597	ParameterType	const QScriptValue &		707513	0					
ANR	707598	Identifier	value		707513	1					
ANR	707599	CFGEntryNode	ENTRY		707513		True				
ANR	707600	CFGExitNode	EXIT		707513		True				
ANR	707601	Symbol	value . isVariant		707513						
ANR	707602	Symbol	var . userType		707513						
ANR	707603	Symbol	name . startsWith		707513						
ANR	707604	Symbol	var		707513						
ANR	707605	Symbol	QMetaType :: typeName		707513						
ANR	707606	Symbol	name		707513						
ANR	707607	Symbol	value		707513						
ANR	707608	Symbol	UserOwnership		707513						
ANR	707609	Symbol	value . toVariant		707513						
