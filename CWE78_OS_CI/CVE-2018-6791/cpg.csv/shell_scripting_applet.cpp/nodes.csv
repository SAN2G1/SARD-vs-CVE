command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	706031	File	data/converged/CVE-2018-6791_plasma-workspace/shell_scripting_applet.cpp								
ANR	706032	ClassDef	Applet :: Private	35:0:1054:1374							
ANR	706033	Function	Private	38:4:1090:1175							
ANR	706034	FunctionDef	Private ()		706033	0					
ANR	706035	CompoundStatement		41:4:1169:1175	706033	0					
ANR	706036	Identifier	Private		706033	1					
ANR	706037	ParameterList			706033	2					
ANR	706038	CFGEntryNode	ENTRY		706033		True				
ANR	706039	CFGExitNode	EXIT		706033		True				
ANR	706040	DeclStmt									
ANR	706041	Decl							KConfigGroup	KConfigGroup	configGroup
ANR	706042	DeclStmt									
ANR	706043	Decl							QStringList	QStringList	configGroupPath
ANR	706044	DeclStmt									
ANR	706045	Decl							KConfigGroup	KConfigGroup	globalConfigGroup
ANR	706046	DeclStmt									
ANR	706047	Decl							QStringList	QStringList	globalConfigGroupPath
ANR	706048	Function	Applet :: ~Applet	58:0:1467:1501							
ANR	706049	FunctionDef	Applet :: ~Applet ()		706048	0					
ANR	706050	CompoundStatement		59:0:1485:1501	706048	0					
ANR	706051	Statement	delete	60:4:1491:1496	706048	0	True				
ANR	706052	ExpressionStatement	d	60:11:1498:1499	706048	1	True				
ANR	706053	Identifier	d		706048	0					
ANR	706054	Identifier	Applet :: ~Applet		706048	1					
ANR	706055	ParameterList			706048	2					
ANR	706056	CFGEntryNode	ENTRY		706048		True				
ANR	706057	CFGExitNode	EXIT		706048		True				
ANR	706058	Function	Applet :: setCurrentConfigGroup	63:0:1504:2027							
ANR	706059	FunctionDef	Applet :: setCurrentConfigGroup (const QStringList & groupNames)		706058	0					
ANR	706060	CompoundStatement		64:0:1570:2027	706058	0					
ANR	706061	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	65:4:1576:1606	706058	0	True				
ANR	706062	IdentifierDecl	* app = applet ( )		706058	0					
ANR	706063	IdentifierDeclType	Plasma :: Applet *		706058	0					
ANR	706064	Identifier	app		706058	1					
ANR	706065	AssignmentExpression	* app = applet ( )		706058	2		=			
ANR	706066	Identifier	app		706058	0					
ANR	706067	CallExpression	applet ( )		706058	1					
ANR	706068	Callee	applet		706058	0					
ANR	706069	Identifier	applet		706058	0					
ANR	706070	ArgumentList			706058	1					
ANR	706071	IfStatement	if ( ! app )		706058	1					
ANR	706072	Condition	! app	66:8:1616:1619	706058	0	True				
ANR	706073	UnaryOperationExpression	! app		706058	0					
ANR	706074	UnaryOperator	!		706058	0					
ANR	706075	Identifier	app		706058	1					
ANR	706076	CompoundStatement		3:14:51:51	706058	1					
ANR	706077	ExpressionStatement	d -> configGroup = KConfigGroup ( )	67:8:1632:1663	706058	0	True				
ANR	706078	AssignmentExpression	d -> configGroup = KConfigGroup ( )		706058	0		=			
ANR	706079	PtrMemberAccess	d -> configGroup		706058	0					
ANR	706080	Identifier	d		706058	0					
ANR	706081	Identifier	configGroup		706058	1					
ANR	706082	CallExpression	KConfigGroup ( )		706058	1					
ANR	706083	Callee	KConfigGroup		706058	0					
ANR	706084	Identifier	KConfigGroup		706058	0					
ANR	706085	ArgumentList			706058	1					
ANR	706086	ExpressionStatement	d -> configGroupPath . clear ( )	68:8:1673:1699	706058	1	True				
ANR	706087	CallExpression	d -> configGroupPath . clear ( )		706058	0					
ANR	706088	Callee	d -> configGroupPath . clear		706058	0					
ANR	706089	MemberAccess	d -> configGroupPath . clear		706058	0					
ANR	706090	PtrMemberAccess	d -> configGroupPath		706058	0					
ANR	706091	Identifier	d		706058	0					
ANR	706092	Identifier	configGroupPath		706058	1					
ANR	706093	Identifier	clear		706058	1					
ANR	706094	ArgumentList			706058	1					
ANR	706095	ReturnStatement	return ;	69:8:1709:1715	706058	2	True				
ANR	706096	ExpressionStatement	d -> configGroup = app -> config ( )	72:4:1728:1758	706058	2	True				
ANR	706097	AssignmentExpression	d -> configGroup = app -> config ( )		706058	0		=			
ANR	706098	PtrMemberAccess	d -> configGroup		706058	0					
ANR	706099	Identifier	d		706058	0					
ANR	706100	Identifier	configGroup		706058	1					
ANR	706101	CallExpression	app -> config ( )		706058	1					
ANR	706102	Callee	app -> config		706058	0					
ANR	706103	PtrMemberAccess	app -> config		706058	0					
ANR	706104	Identifier	app		706058	0					
ANR	706105	Identifier	config		706058	1					
ANR	706106	ArgumentList			706058	1					
ANR	706107	ExpressionStatement	d -> configGroupPath = groupNames	73:4:1764:1795	706058	3	True				
ANR	706108	AssignmentExpression	d -> configGroupPath = groupNames		706058	0		=			
ANR	706109	PtrMemberAccess	d -> configGroupPath		706058	0					
ANR	706110	Identifier	d		706058	0					
ANR	706111	Identifier	configGroupPath		706058	1					
ANR	706112	Identifier	groupNames		706058	1					
ANR	706113	Statement	foreach	75:4:1802:1808	706058	4	True				
ANR	706114	Statement	(	75:12:1810:1810	706058	5	True				
ANR	706115	Statement	const	75:13:1811:1815	706058	6	True				
ANR	706116	Statement	QString	75:19:1817:1823	706058	7	True				
ANR	706117	Statement	&	75:27:1825:1825	706058	8	True				
ANR	706118	Statement	groupName	75:28:1826:1834	706058	9	True				
ANR	706119	Statement	","	75:37:1835:1835	706058	10	True				
ANR	706120	Statement	groupNames	75:39:1837:1846	706058	11	True				
ANR	706121	Statement	)	75:49:1847:1847	706058	12	True				
ANR	706122	CompoundStatement		12:51:278:278	706058	13					
ANR	706123	ExpressionStatement	"d -> configGroup = KConfigGroup ( & d -> configGroup , groupName )"	76:8:1859:1916	706058	0	True				
ANR	706124	AssignmentExpression	"d -> configGroup = KConfigGroup ( & d -> configGroup , groupName )"		706058	0		=			
ANR	706125	PtrMemberAccess	d -> configGroup		706058	0					
ANR	706126	Identifier	d		706058	0					
ANR	706127	Identifier	configGroup		706058	1					
ANR	706128	CallExpression	"KConfigGroup ( & d -> configGroup , groupName )"		706058	1					
ANR	706129	Callee	KConfigGroup		706058	0					
ANR	706130	Identifier	KConfigGroup		706058	0					
ANR	706131	ArgumentList	& d -> configGroup		706058	1					
ANR	706132	Argument	& d -> configGroup		706058	0					
ANR	706133	UnaryOperationExpression	& d -> configGroup		706058	0					
ANR	706134	UnaryOperator	&		706058	0					
ANR	706135	PtrMemberAccess	d -> configGroup		706058	1					
ANR	706136	Identifier	d		706058	0					
ANR	706137	Identifier	configGroup		706058	1					
ANR	706138	Argument	groupName		706058	1					
ANR	706139	Identifier	groupName		706058	0					
ANR	706140	ExpressionStatement	"d -> inWallpaperConfig = ! groupNames . isEmpty ( ) && groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"	79:4:1929:2025	706058	14	True				
ANR	706141	AssignmentExpression	"d -> inWallpaperConfig = ! groupNames . isEmpty ( ) && groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"		706058	0		=			
ANR	706142	PtrMemberAccess	d -> inWallpaperConfig		706058	0					
ANR	706143	Identifier	d		706058	0					
ANR	706144	Identifier	inWallpaperConfig		706058	1					
ANR	706145	AndExpression	"! groupNames . isEmpty ( ) && groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"		706058	1		&&			
ANR	706146	UnaryOperationExpression	! groupNames . isEmpty ( )		706058	0					
ANR	706147	UnaryOperator	!		706058	0					
ANR	706148	CallExpression	groupNames . isEmpty ( )		706058	1					
ANR	706149	Callee	groupNames . isEmpty		706058	0					
ANR	706150	MemberAccess	groupNames . isEmpty		706058	0					
ANR	706151	Identifier	groupNames		706058	0					
ANR	706152	Identifier	isEmpty		706058	1					
ANR	706153	ArgumentList			706058	1					
ANR	706154	EqualityExpression	"groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"		706058	1		==			
ANR	706155	CallExpression	groupNames . first ( )		706058	0					
ANR	706156	Callee	groupNames . first		706058	0					
ANR	706157	MemberAccess	groupNames . first		706058	0					
ANR	706158	Identifier	groupNames		706058	0					
ANR	706159	Identifier	first		706058	1					
ANR	706160	ArgumentList			706058	1					
ANR	706161	CallExpression	"QLatin1String ( ""Wallpaper"" )"		706058	1					
ANR	706162	Callee	QLatin1String		706058	0					
ANR	706163	Identifier	QLatin1String		706058	0					
ANR	706164	ArgumentList	"""Wallpaper"""		706058	1					
ANR	706165	Argument	"""Wallpaper"""		706058	0					
ANR	706166	PrimaryExpression	"""Wallpaper"""		706058	0					
ANR	706167	ReturnType	void		706058	1					
ANR	706168	Identifier	Applet :: setCurrentConfigGroup		706058	2					
ANR	706169	ParameterList	const QStringList & groupNames		706058	3					
ANR	706170	Parameter	const QStringList & groupNames	63:35:1539:1567	706058	0	True				
ANR	706171	ParameterType	const QStringList &		706058	0					
ANR	706172	Identifier	groupNames		706058	1					
ANR	706173	CFGEntryNode	ENTRY		706058		True				
ANR	706174	CFGExitNode	EXIT		706058		True				
ANR	706175	Symbol	app		706058						
ANR	706176	Symbol	groupNames . first		706058						
ANR	706177	Symbol	d -> inWallpaperConfig		706058						
ANR	706178	Symbol	app -> config		706058						
ANR	706179	Symbol	d		706058						
ANR	706180	Symbol	d -> configGroup		706058						
ANR	706181	Symbol	groupNames . isEmpty		706058						
ANR	706182	Symbol	d -> configGroupPath		706058						
ANR	706183	Symbol	* d		706058						
ANR	706184	Symbol	groupNames		706058						
ANR	706185	Symbol	QLatin1String		706058						
ANR	706186	Symbol	groupName		706058						
ANR	706187	Symbol	* app		706058						
ANR	706188	Symbol	& d -> configGroup		706058						
ANR	706189	Symbol	applet		706058						
ANR	706190	Symbol	KConfigGroup		706058						
ANR	706191	Function	Applet :: currentConfigGroup	82:0:2030:2110							
ANR	706192	FunctionDef	Applet :: currentConfigGroup ()		706191	0					
ANR	706193	CompoundStatement		83:0:2077:2110	706191	0					
ANR	706194	ReturnStatement	return d -> configGroupPath ;	84:4:2083:2108	706191	0	True				
ANR	706195	PtrMemberAccess	d -> configGroupPath		706191	0					
ANR	706196	Identifier	d		706191	0					
ANR	706197	Identifier	configGroupPath		706191	1					
ANR	706198	ReturnType	QStringList		706191	1					
ANR	706199	Identifier	Applet :: currentConfigGroup		706191	2					
ANR	706200	ParameterList			706191	3					
ANR	706201	CFGEntryNode	ENTRY		706191		True				
ANR	706202	CFGExitNode	EXIT		706191		True				
ANR	706203	Symbol	d		706191						
ANR	706204	Symbol	d -> configGroupPath		706191						
ANR	706205	Symbol	* d		706191						
ANR	706206	Function	Applet :: configKeys	87:0:2113:2264							
ANR	706207	FunctionDef	Applet :: configKeys ()		706206	0					
ANR	706208	CompoundStatement		88:0:2152:2264	706206	0					
ANR	706209	IfStatement	if ( d -> configGroup . isValid ( ) )		706206	0					
ANR	706210	Condition	d -> configGroup . isValid ( )	89:8:2162:2185	706206	0	True				
ANR	706211	CallExpression	d -> configGroup . isValid ( )		706206	0					
ANR	706212	Callee	d -> configGroup . isValid		706206	0					
ANR	706213	MemberAccess	d -> configGroup . isValid		706206	0					
ANR	706214	PtrMemberAccess	d -> configGroup		706206	0					
ANR	706215	Identifier	d		706206	0					
ANR	706216	Identifier	configGroup		706206	1					
ANR	706217	Identifier	isValid		706206	1					
ANR	706218	ArgumentList			706206	1					
ANR	706219	CompoundStatement		2:34:35:35	706206	1					
ANR	706220	ReturnStatement	return d -> configGroup . keyList ( ) ;	90:8:2198:2229	706206	0	True				
ANR	706221	CallExpression	d -> configGroup . keyList ( )		706206	0					
ANR	706222	Callee	d -> configGroup . keyList		706206	0					
ANR	706223	MemberAccess	d -> configGroup . keyList		706206	0					
ANR	706224	PtrMemberAccess	d -> configGroup		706206	0					
ANR	706225	Identifier	d		706206	0					
ANR	706226	Identifier	configGroup		706206	1					
ANR	706227	Identifier	keyList		706206	1					
ANR	706228	ArgumentList			706206	1					
ANR	706229	ReturnStatement	return QStringList ( ) ;	93:4:2242:2262	706206	1	True				
ANR	706230	CallExpression	QStringList ( )		706206	0					
ANR	706231	Callee	QStringList		706206	0					
ANR	706232	Identifier	QStringList		706206	0					
ANR	706233	ArgumentList			706206	1					
ANR	706234	ReturnType	QStringList		706206	1					
ANR	706235	Identifier	Applet :: configKeys		706206	2					
ANR	706236	ParameterList			706206	3					
ANR	706237	CFGEntryNode	ENTRY		706206		True				
ANR	706238	CFGExitNode	EXIT		706206		True				
ANR	706239	Symbol	d		706206						
ANR	706240	Symbol	d -> configGroup		706206						
ANR	706241	Symbol	d -> configGroup . keyList		706206						
ANR	706242	Symbol	QStringList		706206						
ANR	706243	Symbol	* d		706206						
ANR	706244	Symbol	d -> configGroup . isValid		706206						
ANR	706245	Function	Applet :: configGroups	96:0:2267:2422							
ANR	706246	FunctionDef	Applet :: configGroups ()		706245	0					
ANR	706247	CompoundStatement		97:0:2308:2422	706245	0					
ANR	706248	IfStatement	if ( d -> configGroup . isValid ( ) )		706245	0					
ANR	706249	Condition	d -> configGroup . isValid ( )	98:8:2318:2341	706245	0	True				
ANR	706250	CallExpression	d -> configGroup . isValid ( )		706245	0					
ANR	706251	Callee	d -> configGroup . isValid		706245	0					
ANR	706252	MemberAccess	d -> configGroup . isValid		706245	0					
ANR	706253	PtrMemberAccess	d -> configGroup		706245	0					
ANR	706254	Identifier	d		706245	0					
ANR	706255	Identifier	configGroup		706245	1					
ANR	706256	Identifier	isValid		706245	1					
ANR	706257	ArgumentList			706245	1					
ANR	706258	CompoundStatement		2:34:35:35	706245	1					
ANR	706259	ReturnStatement	return d -> configGroup . groupList ( ) ;	99:8:2354:2387	706245	0	True				
ANR	706260	CallExpression	d -> configGroup . groupList ( )		706245	0					
ANR	706261	Callee	d -> configGroup . groupList		706245	0					
ANR	706262	MemberAccess	d -> configGroup . groupList		706245	0					
ANR	706263	PtrMemberAccess	d -> configGroup		706245	0					
ANR	706264	Identifier	d		706245	0					
ANR	706265	Identifier	configGroup		706245	1					
ANR	706266	Identifier	groupList		706245	1					
ANR	706267	ArgumentList			706245	1					
ANR	706268	ReturnStatement	return QStringList ( ) ;	102:4:2400:2420	706245	1	True				
ANR	706269	CallExpression	QStringList ( )		706245	0					
ANR	706270	Callee	QStringList		706245	0					
ANR	706271	Identifier	QStringList		706245	0					
ANR	706272	ArgumentList			706245	1					
ANR	706273	ReturnType	QStringList		706245	1					
ANR	706274	Identifier	Applet :: configGroups		706245	2					
ANR	706275	ParameterList			706245	3					
ANR	706276	CFGEntryNode	ENTRY		706245		True				
ANR	706277	CFGExitNode	EXIT		706245		True				
ANR	706278	Symbol	d		706245						
ANR	706279	Symbol	d -> configGroup		706245						
ANR	706280	Symbol	QStringList		706245						
ANR	706281	Symbol	* d		706245						
ANR	706282	Symbol	d -> configGroup . groupList		706245						
ANR	706283	Symbol	d -> configGroup . isValid		706245						
ANR	706284	Function	Applet :: readConfig	105:0:2425:2635							
ANR	706285	FunctionDef	"Applet :: readConfig (const QString & key , const QVariant & def)"		706284	0					
ANR	706286	CompoundStatement		106:0:2500:2635	706284	0					
ANR	706287	IfStatement	if ( d -> configGroup . isValid ( ) )		706284	0					
ANR	706288	Condition	d -> configGroup . isValid ( )	107:8:2510:2533	706284	0	True				
ANR	706289	CallExpression	d -> configGroup . isValid ( )		706284	0					
ANR	706290	Callee	d -> configGroup . isValid		706284	0					
ANR	706291	MemberAccess	d -> configGroup . isValid		706284	0					
ANR	706292	PtrMemberAccess	d -> configGroup		706284	0					
ANR	706293	Identifier	d		706284	0					
ANR	706294	Identifier	configGroup		706284	1					
ANR	706295	Identifier	isValid		706284	1					
ANR	706296	ArgumentList			706284	1					
ANR	706297	CompoundStatement		2:34:35:35	706284	1					
ANR	706298	ReturnStatement	"return d -> configGroup . readEntry ( key , def ) ;"	108:8:2546:2587	706284	0	True				
ANR	706299	CallExpression	"d -> configGroup . readEntry ( key , def )"		706284	0					
ANR	706300	Callee	d -> configGroup . readEntry		706284	0					
ANR	706301	MemberAccess	d -> configGroup . readEntry		706284	0					
ANR	706302	PtrMemberAccess	d -> configGroup		706284	0					
ANR	706303	Identifier	d		706284	0					
ANR	706304	Identifier	configGroup		706284	1					
ANR	706305	Identifier	readEntry		706284	1					
ANR	706306	ArgumentList	key		706284	1					
ANR	706307	Argument	key		706284	0					
ANR	706308	Identifier	key		706284	0					
ANR	706309	Argument	def		706284	1					
ANR	706310	Identifier	def		706284	0					
ANR	706311	ElseStatement	else		706284	0					
ANR	706312	CompoundStatement		4:11:99:99	706284	0					
ANR	706313	ReturnStatement	return QVariant ( ) ;	110:8:2610:2627	706284	0	True				
ANR	706314	CallExpression	QVariant ( )		706284	0					
ANR	706315	Callee	QVariant		706284	0					
ANR	706316	Identifier	QVariant		706284	0					
ANR	706317	ArgumentList			706284	1					
ANR	706318	ReturnType	QVariant		706284	1					
ANR	706319	Identifier	Applet :: readConfig		706284	2					
ANR	706320	ParameterList	"const QString & key , const QVariant & def"		706284	3					
ANR	706321	Parameter	const QString & key	105:28:2453:2470	706284	0	True				
ANR	706322	ParameterType	const QString &		706284	0					
ANR	706323	Identifier	key		706284	1					
ANR	706324	Parameter	const QVariant & def	105:48:2473:2491	706284	1	True				
ANR	706325	ParameterType	const QVariant &		706284	0					
ANR	706326	Identifier	def		706284	1					
ANR	706327	CFGEntryNode	ENTRY		706284		True				
ANR	706328	CFGExitNode	EXIT		706284		True				
ANR	706329	Symbol	d -> configGroup . readEntry		706284						
ANR	706330	Symbol	QVariant		706284						
ANR	706331	Symbol	def		706284						
ANR	706332	Symbol	d		706284						
ANR	706333	Symbol	d -> configGroup		706284						
ANR	706334	Symbol	key		706284						
ANR	706335	Symbol	* d		706284						
ANR	706336	Symbol	d -> configGroup . isValid		706284						
ANR	706337	Function	Applet :: writeConfig	114:0:2638:4080							
ANR	706338	FunctionDef	"Applet :: writeConfig (const QString & key , const QVariant & value)"		706337	0					
ANR	706339	CompoundStatement		115:0:2706:4080	706337	0					
ANR	706340	IfStatement	if ( d -> configGroup . isValid ( ) )		706337	0					
ANR	706341	Condition	d -> configGroup . isValid ( )	116:8:2716:2739	706337	0	True				
ANR	706342	CallExpression	d -> configGroup . isValid ( )		706337	0					
ANR	706343	Callee	d -> configGroup . isValid		706337	0					
ANR	706344	MemberAccess	d -> configGroup . isValid		706337	0					
ANR	706345	PtrMemberAccess	d -> configGroup		706337	0					
ANR	706346	Identifier	d		706337	0					
ANR	706347	Identifier	configGroup		706337	1					
ANR	706348	Identifier	isValid		706337	1					
ANR	706349	ArgumentList			706337	1					
ANR	706350	CompoundStatement		2:34:35:35	706337	1					
ANR	706351	IfStatement	if ( d -> inWallpaperConfig )		706337	0					
ANR	706352	Condition	d -> inWallpaperConfig	117:12:2756:2775	706337	0	True				
ANR	706353	PtrMemberAccess	d -> inWallpaperConfig		706337	0					
ANR	706354	Identifier	d		706337	0					
ANR	706355	Identifier	inWallpaperConfig		706337	1					
ANR	706356	CompoundStatement		3:34:71:71	706337	1					
ANR	706357	Statement	QObject	119:12:2866:2872	706337	0	True				
ANR	706358	Statement	*	119:20:2874:2874	706337	1	True				
ANR	706359	Statement	wallpaperGraphicsObject	119:21:2875:2897	706337	2	True				
ANR	706360	Statement	=	119:45:2899:2899	706337	3	True				
ANR	706361	Statement	applet	119:47:2901:2906	706337	4	True				
ANR	706362	Statement	(	119:53:2907:2907	706337	5	True				
ANR	706363	Statement	)	119:54:2908:2908	706337	6	True				
ANR	706364	Statement	->	119:55:2909:2910	706337	7	True				
ANR	706365	Statement	property	119:57:2911:2918	706337	8	True				
ANR	706366	Statement	(	119:65:2919:2919	706337	9	True				
ANR	706367	Statement	"""wallpaperGraphicsObject"""	119:66:2920:2944	706337	10	True				
ANR	706368	Statement	)	119:91:2945:2945	706337	11	True				
ANR	706369	Statement	.	119:92:2946:2946	706337	12	True				
ANR	706370	Statement	value	119:93:2947:2951	706337	13	True				
ANR	706371	Statement	<	119:98:2952:2952	706337	14	True				
ANR	706372	Statement	QObject	119:99:2953:2959	706337	15	True				
ANR	706373	Statement	*	119:107:2961:2961	706337	16	True				
ANR	706374	Statement	>	119:108:2962:2962	706337	17	True				
ANR	706375	Statement	(	119:109:2963:2963	706337	18	True				
ANR	706376	Statement	)	119:110:2964:2964	706337	19	True				
ANR	706377	ExpressionStatement		119:111:2965:2965	706337	20	True				
ANR	706378	IfStatement	if ( wallpaperGraphicsObject )		706337	21					
ANR	706379	Condition	wallpaperGraphicsObject	120:16:2983:3005	706337	0	True				
ANR	706380	Identifier	wallpaperGraphicsObject		706337	0					
ANR	706381	CompoundStatement		6:41:301:301	706337	1					
ANR	706382	Statement	KDeclarative	121:16:3026:3037	706337	0	True				
ANR	706383	Statement	::	121:28:3038:3039	706337	1	True				
ANR	706384	Statement	ConfigPropertyMap	121:30:3040:3056	706337	2	True				
ANR	706385	Statement	*	121:48:3058:3058	706337	3	True				
ANR	706386	Statement	config	121:49:3059:3064	706337	4	True				
ANR	706387	Statement	=	121:56:3066:3066	706337	5	True				
ANR	706388	Statement	static_cast	121:58:3068:3078	706337	6	True				
ANR	706389	Statement	<	121:69:3079:3079	706337	7	True				
ANR	706390	Statement	KDeclarative	121:70:3080:3091	706337	8	True				
ANR	706391	Statement	::	121:82:3092:3093	706337	9	True				
ANR	706392	Statement	ConfigPropertyMap	121:84:3094:3110	706337	10	True				
ANR	706393	Statement	*	121:102:3112:3112	706337	11	True				
ANR	706394	Statement	>	121:103:3113:3113	706337	12	True				
ANR	706395	Statement	(	121:104:3114:3114	706337	13	True				
ANR	706396	Statement	wallpaperGraphicsObject	121:105:3115:3137	706337	14	True				
ANR	706397	Statement	->	121:128:3138:3139	706337	15	True				
ANR	706398	Statement	property	121:130:3140:3147	706337	16	True				
ANR	706399	Statement	(	121:138:3148:3148	706337	17	True				
ANR	706400	Statement	"""configuration"""	121:139:3149:3163	706337	18	True				
ANR	706401	Statement	)	121:154:3164:3164	706337	19	True				
ANR	706402	Statement	.	121:155:3165:3165	706337	20	True				
ANR	706403	Statement	value	121:156:3166:3170	706337	21	True				
ANR	706404	Statement	<	121:161:3171:3171	706337	22	True				
ANR	706405	Statement	QObject	121:162:3172:3178	706337	23	True				
ANR	706406	Statement	*	121:170:3180:3180	706337	24	True				
ANR	706407	Statement	>	121:171:3181:3181	706337	25	True				
ANR	706408	Statement	(	121:172:3182:3182	706337	26	True				
ANR	706409	Statement	)	121:173:3183:3183	706337	27	True				
ANR	706410	Statement	)	121:174:3184:3184	706337	28	True				
ANR	706411	ExpressionStatement		121:175:3185:3185	706337	29	True				
ANR	706412	ExpressionStatement	"config -> setProperty ( key . toLatin1 ( ) , value )"	122:16:3203:3245	706337	30	True				
ANR	706413	CallExpression	"config -> setProperty ( key . toLatin1 ( ) , value )"		706337	0					
ANR	706414	Callee	config -> setProperty		706337	0					
ANR	706415	PtrMemberAccess	config -> setProperty		706337	0					
ANR	706416	Identifier	config		706337	0					
ANR	706417	Identifier	setProperty		706337	1					
ANR	706418	ArgumentList	key . toLatin1 ( )		706337	1					
ANR	706419	Argument	key . toLatin1 ( )		706337	0					
ANR	706420	CallExpression	key . toLatin1 ( )		706337	0					
ANR	706421	Callee	key . toLatin1		706337	0					
ANR	706422	MemberAccess	key . toLatin1		706337	0					
ANR	706423	Identifier	key		706337	0					
ANR	706424	Identifier	toLatin1		706337	1					
ANR	706425	ArgumentList			706337	1					
ANR	706426	Argument	value		706337	1					
ANR	706427	Identifier	value		706337	0					
ANR	706428	ElseStatement	else		706337	0					
ANR	706429	IfStatement	if ( applet ( ) -> configScheme ( ) )		706337	0					
ANR	706430	Condition	applet ( ) -> configScheme ( )	124:19:3280:3303	706337	0	True				
ANR	706431	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706432	Callee	applet ( ) -> configScheme		706337	0					
ANR	706433	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706434	CallExpression	applet ( )		706337	0					
ANR	706435	Callee	applet		706337	0					
ANR	706436	Identifier	applet		706337	0					
ANR	706437	ArgumentList			706337	1					
ANR	706438	Identifier	configScheme		706337	1					
ANR	706439	ArgumentList			706337	1					
ANR	706440	CompoundStatement		12:12:683:756	706337	1					
ANR	706441	IdentifierDeclStatement	KConfigSkeletonItem * item = applet ( ) -> configScheme ( ) -> findItemByName ( key ) ;	126:12:3390:3463	706337	0	True				
ANR	706442	IdentifierDecl	* item = applet ( ) -> configScheme ( ) -> findItemByName ( key )		706337	0					
ANR	706443	IdentifierDeclType	KConfigSkeletonItem *		706337	0					
ANR	706444	Identifier	item		706337	1					
ANR	706445	AssignmentExpression	* item = applet ( ) -> configScheme ( ) -> findItemByName ( key )		706337	2		=			
ANR	706446	Identifier	item		706337	0					
ANR	706447	CallExpression	applet ( ) -> configScheme ( ) -> findItemByName ( key )		706337	1					
ANR	706448	Callee	applet ( ) -> configScheme ( ) -> findItemByName		706337	0					
ANR	706449	PtrMemberAccess	applet ( ) -> configScheme ( ) -> findItemByName		706337	0					
ANR	706450	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706451	Callee	applet ( ) -> configScheme		706337	0					
ANR	706452	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706453	CallExpression	applet ( )		706337	0					
ANR	706454	Callee	applet		706337	0					
ANR	706455	Identifier	applet		706337	0					
ANR	706456	ArgumentList			706337	1					
ANR	706457	Identifier	configScheme		706337	1					
ANR	706458	ArgumentList			706337	1					
ANR	706459	Identifier	findItemByName		706337	1					
ANR	706460	ArgumentList	key		706337	1					
ANR	706461	Argument	key		706337	0					
ANR	706462	Identifier	key		706337	0					
ANR	706463	IfStatement	if ( item )		706337	1					
ANR	706464	Condition	item	127:16:3481:3484	706337	0	True				
ANR	706465	Identifier	item		706337	0					
ANR	706466	CompoundStatement		13:22:780:780	706337	1					
ANR	706467	ExpressionStatement	item -> setProperty ( value )	128:16:3505:3529	706337	0	True				
ANR	706468	CallExpression	item -> setProperty ( value )		706337	0					
ANR	706469	Callee	item -> setProperty		706337	0					
ANR	706470	PtrMemberAccess	item -> setProperty		706337	0					
ANR	706471	Identifier	item		706337	0					
ANR	706472	Identifier	setProperty		706337	1					
ANR	706473	ArgumentList	value		706337	1					
ANR	706474	Argument	value		706337	0					
ANR	706475	Identifier	value		706337	0					
ANR	706476	ExpressionStatement	applet ( ) -> configScheme ( ) -> blockSignals ( true )	129:16:3547:3591	706337	1	True				
ANR	706477	CallExpression	applet ( ) -> configScheme ( ) -> blockSignals ( true )		706337	0					
ANR	706478	Callee	applet ( ) -> configScheme ( ) -> blockSignals		706337	0					
ANR	706479	PtrMemberAccess	applet ( ) -> configScheme ( ) -> blockSignals		706337	0					
ANR	706480	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706481	Callee	applet ( ) -> configScheme		706337	0					
ANR	706482	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706483	CallExpression	applet ( )		706337	0					
ANR	706484	Callee	applet		706337	0					
ANR	706485	Identifier	applet		706337	0					
ANR	706486	ArgumentList			706337	1					
ANR	706487	Identifier	configScheme		706337	1					
ANR	706488	ArgumentList			706337	1					
ANR	706489	Identifier	blockSignals		706337	1					
ANR	706490	ArgumentList	true		706337	1					
ANR	706491	Argument	true		706337	0					
ANR	706492	Identifier	true		706337	0					
ANR	706493	ExpressionStatement	applet ( ) -> configScheme ( ) -> save ( )	130:16:3609:3641	706337	2	True				
ANR	706494	CallExpression	applet ( ) -> configScheme ( ) -> save ( )		706337	0					
ANR	706495	Callee	applet ( ) -> configScheme ( ) -> save		706337	0					
ANR	706496	PtrMemberAccess	applet ( ) -> configScheme ( ) -> save		706337	0					
ANR	706497	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706498	Callee	applet ( ) -> configScheme		706337	0					
ANR	706499	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706500	CallExpression	applet ( )		706337	0					
ANR	706501	Callee	applet		706337	0					
ANR	706502	Identifier	applet		706337	0					
ANR	706503	ArgumentList			706337	1					
ANR	706504	Identifier	configScheme		706337	1					
ANR	706505	ArgumentList			706337	1					
ANR	706506	Identifier	save		706337	1					
ANR	706507	ArgumentList			706337	1					
ANR	706508	ExpressionStatement	applet ( ) -> configScheme ( ) -> read ( )	133:16:3810:3842	706337	3	True				
ANR	706509	CallExpression	applet ( ) -> configScheme ( ) -> read ( )		706337	0					
ANR	706510	Callee	applet ( ) -> configScheme ( ) -> read		706337	0					
ANR	706511	PtrMemberAccess	applet ( ) -> configScheme ( ) -> read		706337	0					
ANR	706512	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706513	Callee	applet ( ) -> configScheme		706337	0					
ANR	706514	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706515	CallExpression	applet ( )		706337	0					
ANR	706516	Callee	applet		706337	0					
ANR	706517	Identifier	applet		706337	0					
ANR	706518	ArgumentList			706337	1					
ANR	706519	Identifier	configScheme		706337	1					
ANR	706520	ArgumentList			706337	1					
ANR	706521	Identifier	read		706337	1					
ANR	706522	ArgumentList			706337	1					
ANR	706523	ExpressionStatement	applet ( ) -> configScheme ( ) -> blockSignals ( false )	134:16:3860:3905	706337	4	True				
ANR	706524	CallExpression	applet ( ) -> configScheme ( ) -> blockSignals ( false )		706337	0					
ANR	706525	Callee	applet ( ) -> configScheme ( ) -> blockSignals		706337	0					
ANR	706526	PtrMemberAccess	applet ( ) -> configScheme ( ) -> blockSignals		706337	0					
ANR	706527	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706528	Callee	applet ( ) -> configScheme		706337	0					
ANR	706529	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706530	CallExpression	applet ( )		706337	0					
ANR	706531	Callee	applet		706337	0					
ANR	706532	Identifier	applet		706337	0					
ANR	706533	ArgumentList			706337	1					
ANR	706534	Identifier	configScheme		706337	1					
ANR	706535	ArgumentList			706337	1					
ANR	706536	Identifier	blockSignals		706337	1					
ANR	706537	ArgumentList	false		706337	1					
ANR	706538	Argument	false		706337	0					
ANR	706539	Identifier	false		706337	0					
ANR	706540	Statement	emit	135:16:3923:3926	706337	5	True				
ANR	706541	ExpressionStatement	applet ( ) -> configScheme ( ) -> configChanged ( )	135:21:3928:3969	706337	6	True				
ANR	706542	CallExpression	applet ( ) -> configScheme ( ) -> configChanged ( )		706337	0					
ANR	706543	Callee	applet ( ) -> configScheme ( ) -> configChanged		706337	0					
ANR	706544	PtrMemberAccess	applet ( ) -> configScheme ( ) -> configChanged		706337	0					
ANR	706545	CallExpression	applet ( ) -> configScheme ( )		706337	0					
ANR	706546	Callee	applet ( ) -> configScheme		706337	0					
ANR	706547	PtrMemberAccess	applet ( ) -> configScheme		706337	0					
ANR	706548	CallExpression	applet ( )		706337	0					
ANR	706549	Callee	applet		706337	0					
ANR	706550	Identifier	applet		706337	0					
ANR	706551	ArgumentList			706337	1					
ANR	706552	Identifier	configScheme		706337	1					
ANR	706553	ArgumentList			706337	1					
ANR	706554	Identifier	configChanged		706337	1					
ANR	706555	ArgumentList			706337	1					
ANR	706556	ExpressionStatement	"d -> configGroup . writeEntry ( key , value )"	139:8:4004:4041	706337	1	True				
ANR	706557	CallExpression	"d -> configGroup . writeEntry ( key , value )"		706337	0					
ANR	706558	Callee	d -> configGroup . writeEntry		706337	0					
ANR	706559	MemberAccess	d -> configGroup . writeEntry		706337	0					
ANR	706560	PtrMemberAccess	d -> configGroup		706337	0					
ANR	706561	Identifier	d		706337	0					
ANR	706562	Identifier	configGroup		706337	1					
ANR	706563	Identifier	writeEntry		706337	1					
ANR	706564	ArgumentList	key		706337	1					
ANR	706565	Argument	key		706337	0					
ANR	706566	Identifier	key		706337	0					
ANR	706567	Argument	value		706337	1					
ANR	706568	Identifier	value		706337	0					
ANR	706569	ExpressionStatement	d -> configDirty = true	140:8:4051:4072	706337	2	True				
ANR	706570	AssignmentExpression	d -> configDirty = true		706337	0		=			
ANR	706571	PtrMemberAccess	d -> configDirty		706337	0					
ANR	706572	Identifier	d		706337	0					
ANR	706573	Identifier	configDirty		706337	1					
ANR	706574	Identifier	true		706337	1					
ANR	706575	ReturnType	void		706337	1					
ANR	706576	Identifier	Applet :: writeConfig		706337	2					
ANR	706577	ParameterList	"const QString & key , const QVariant & value"		706337	3					
ANR	706578	Parameter	const QString & key	114:25:2663:2680	706337	0	True				
ANR	706579	ParameterType	const QString &		706337	0					
ANR	706580	Identifier	key		706337	1					
ANR	706581	Parameter	const QVariant & value	114:45:2683:2703	706337	1	True				
ANR	706582	ParameterType	const QVariant &		706337	0					
ANR	706583	Identifier	value		706337	1					
ANR	706584	CFGEntryNode	ENTRY		706337		True				
ANR	706585	CFGExitNode	EXIT		706337		True				
ANR	706586	Symbol	* applet ( ) -> configScheme		706337						
ANR	706587	Symbol	d -> inWallpaperConfig		706337						
ANR	706588	Symbol	item		706337						
ANR	706589	Symbol	applet ( ) -> configScheme ( ) -> findItemByName		706337						
ANR	706590	Symbol	d -> configDirty		706337						
ANR	706591	Symbol	d		706337						
ANR	706592	Symbol	d -> configGroup		706337						
ANR	706593	Symbol	applet ( ) -> configScheme		706337						
ANR	706594	Symbol	false		706337						
ANR	706595	Symbol	* applet		706337						
ANR	706596	Symbol	* d		706337						
ANR	706597	Symbol	key . toLatin1		706337						
ANR	706598	Symbol	wallpaperGraphicsObject		706337						
ANR	706599	Symbol	true		706337						
ANR	706600	Symbol	value		706337						
ANR	706601	Symbol	config		706337						
ANR	706602	Symbol	key		706337						
ANR	706603	Symbol	applet		706337						
ANR	706604	Symbol	* * applet		706337						
ANR	706605	Symbol	d -> configGroup . isValid		706337						
ANR	706606	Function	Applet :: setCurrentGlobalConfigGroup	144:0:4083:4551							
ANR	706607	FunctionDef	Applet :: setCurrentGlobalConfigGroup (const QStringList & groupNames)		706606	0					
ANR	706608	CompoundStatement		145:0:4155:4551	706606	0					
ANR	706609	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	146:4:4161:4191	706606	0	True				
ANR	706610	IdentifierDecl	* app = applet ( )		706606	0					
ANR	706611	IdentifierDeclType	Plasma :: Applet *		706606	0					
ANR	706612	Identifier	app		706606	1					
ANR	706613	AssignmentExpression	* app = applet ( )		706606	2		=			
ANR	706614	Identifier	app		706606	0					
ANR	706615	CallExpression	applet ( )		706606	1					
ANR	706616	Callee	applet		706606	0					
ANR	706617	Identifier	applet		706606	0					
ANR	706618	ArgumentList			706606	1					
ANR	706619	IfStatement	if ( ! app )		706606	1					
ANR	706620	Condition	! app	147:8:4201:4204	706606	0	True				
ANR	706621	UnaryOperationExpression	! app		706606	0					
ANR	706622	UnaryOperator	!		706606	0					
ANR	706623	Identifier	app		706606	1					
ANR	706624	CompoundStatement		3:14:51:51	706606	1					
ANR	706625	ExpressionStatement	d -> globalConfigGroup = KConfigGroup ( )	148:8:4217:4254	706606	0	True				
ANR	706626	AssignmentExpression	d -> globalConfigGroup = KConfigGroup ( )		706606	0		=			
ANR	706627	PtrMemberAccess	d -> globalConfigGroup		706606	0					
ANR	706628	Identifier	d		706606	0					
ANR	706629	Identifier	globalConfigGroup		706606	1					
ANR	706630	CallExpression	KConfigGroup ( )		706606	1					
ANR	706631	Callee	KConfigGroup		706606	0					
ANR	706632	Identifier	KConfigGroup		706606	0					
ANR	706633	ArgumentList			706606	1					
ANR	706634	ExpressionStatement	d -> globalConfigGroupPath . clear ( )	149:8:4264:4296	706606	1	True				
ANR	706635	CallExpression	d -> globalConfigGroupPath . clear ( )		706606	0					
ANR	706636	Callee	d -> globalConfigGroupPath . clear		706606	0					
ANR	706637	MemberAccess	d -> globalConfigGroupPath . clear		706606	0					
ANR	706638	PtrMemberAccess	d -> globalConfigGroupPath		706606	0					
ANR	706639	Identifier	d		706606	0					
ANR	706640	Identifier	globalConfigGroupPath		706606	1					
ANR	706641	Identifier	clear		706606	1					
ANR	706642	ArgumentList			706606	1					
ANR	706643	ReturnStatement	return ;	150:8:4306:4312	706606	2	True				
ANR	706644	ExpressionStatement	d -> globalConfigGroup = app -> globalConfig ( )	153:4:4325:4367	706606	2	True				
ANR	706645	AssignmentExpression	d -> globalConfigGroup = app -> globalConfig ( )		706606	0		=			
ANR	706646	PtrMemberAccess	d -> globalConfigGroup		706606	0					
ANR	706647	Identifier	d		706606	0					
ANR	706648	Identifier	globalConfigGroup		706606	1					
ANR	706649	CallExpression	app -> globalConfig ( )		706606	1					
ANR	706650	Callee	app -> globalConfig		706606	0					
ANR	706651	PtrMemberAccess	app -> globalConfig		706606	0					
ANR	706652	Identifier	app		706606	0					
ANR	706653	Identifier	globalConfig		706606	1					
ANR	706654	ArgumentList			706606	1					
ANR	706655	ExpressionStatement	d -> globalConfigGroupPath = groupNames	154:4:4373:4410	706606	3	True				
ANR	706656	AssignmentExpression	d -> globalConfigGroupPath = groupNames		706606	0		=			
ANR	706657	PtrMemberAccess	d -> globalConfigGroupPath		706606	0					
ANR	706658	Identifier	d		706606	0					
ANR	706659	Identifier	globalConfigGroupPath		706606	1					
ANR	706660	Identifier	groupNames		706606	1					
ANR	706661	Statement	foreach	156:4:4417:4423	706606	4	True				
ANR	706662	Statement	(	156:12:4425:4425	706606	5	True				
ANR	706663	Statement	const	156:13:4426:4430	706606	6	True				
ANR	706664	Statement	QString	156:19:4432:4438	706606	7	True				
ANR	706665	Statement	&	156:27:4440:4440	706606	8	True				
ANR	706666	Statement	groupName	156:28:4441:4449	706606	9	True				
ANR	706667	Statement	","	156:37:4450:4450	706606	10	True				
ANR	706668	Statement	groupNames	156:39:4452:4461	706606	11	True				
ANR	706669	Statement	)	156:49:4462:4462	706606	12	True				
ANR	706670	CompoundStatement		12:51:308:308	706606	13					
ANR	706671	ExpressionStatement	"d -> globalConfigGroup = KConfigGroup ( & d -> globalConfigGroup , groupName )"	157:8:4474:4543	706606	0	True				
ANR	706672	AssignmentExpression	"d -> globalConfigGroup = KConfigGroup ( & d -> globalConfigGroup , groupName )"		706606	0		=			
ANR	706673	PtrMemberAccess	d -> globalConfigGroup		706606	0					
ANR	706674	Identifier	d		706606	0					
ANR	706675	Identifier	globalConfigGroup		706606	1					
ANR	706676	CallExpression	"KConfigGroup ( & d -> globalConfigGroup , groupName )"		706606	1					
ANR	706677	Callee	KConfigGroup		706606	0					
ANR	706678	Identifier	KConfigGroup		706606	0					
ANR	706679	ArgumentList	& d -> globalConfigGroup		706606	1					
ANR	706680	Argument	& d -> globalConfigGroup		706606	0					
ANR	706681	UnaryOperationExpression	& d -> globalConfigGroup		706606	0					
ANR	706682	UnaryOperator	&		706606	0					
ANR	706683	PtrMemberAccess	d -> globalConfigGroup		706606	1					
ANR	706684	Identifier	d		706606	0					
ANR	706685	Identifier	globalConfigGroup		706606	1					
ANR	706686	Argument	groupName		706606	1					
ANR	706687	Identifier	groupName		706606	0					
ANR	706688	ReturnType	void		706606	1					
ANR	706689	Identifier	Applet :: setCurrentGlobalConfigGroup		706606	2					
ANR	706690	ParameterList	const QStringList & groupNames		706606	3					
ANR	706691	Parameter	const QStringList & groupNames	144:41:4124:4152	706606	0	True				
ANR	706692	ParameterType	const QStringList &		706606	0					
ANR	706693	Identifier	groupNames		706606	1					
ANR	706694	CFGEntryNode	ENTRY		706606		True				
ANR	706695	CFGExitNode	EXIT		706606		True				
ANR	706696	Symbol	groupNames		706606						
ANR	706697	Symbol	app		706606						
ANR	706698	Symbol	& d -> globalConfigGroup		706606						
ANR	706699	Symbol	groupName		706606						
ANR	706700	Symbol	d -> globalConfigGroup		706606						
ANR	706701	Symbol	d		706606						
ANR	706702	Symbol	* app		706606						
ANR	706703	Symbol	app -> globalConfig		706606						
ANR	706704	Symbol	d -> globalConfigGroupPath		706606						
ANR	706705	Symbol	applet		706606						
ANR	706706	Symbol	* d		706606						
ANR	706707	Symbol	KConfigGroup		706606						
ANR	706708	Function	Applet :: currentGlobalConfigGroup	161:0:4554:4646							
ANR	706709	FunctionDef	Applet :: currentGlobalConfigGroup ()		706708	0					
ANR	706710	CompoundStatement		162:0:4607:4646	706708	0					
ANR	706711	ReturnStatement	return d -> globalConfigGroupPath ;	163:4:4613:4644	706708	0	True				
ANR	706712	PtrMemberAccess	d -> globalConfigGroupPath		706708	0					
ANR	706713	Identifier	d		706708	0					
ANR	706714	Identifier	globalConfigGroupPath		706708	1					
ANR	706715	ReturnType	QStringList		706708	1					
ANR	706716	Identifier	Applet :: currentGlobalConfigGroup		706708	2					
ANR	706717	ParameterList			706708	3					
ANR	706718	CFGEntryNode	ENTRY		706708		True				
ANR	706719	CFGExitNode	EXIT		706708		True				
ANR	706720	Symbol	d		706708						
ANR	706721	Symbol	d -> globalConfigGroupPath		706708						
ANR	706722	Symbol	* d		706708						
ANR	706723	Function	Applet :: globalConfigKeys	166:0:4649:4818							
ANR	706724	FunctionDef	Applet :: globalConfigKeys ()		706723	0					
ANR	706725	CompoundStatement		167:0:4694:4818	706723	0					
ANR	706726	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		706723	0					
ANR	706727	Condition	d -> globalConfigGroup . isValid ( )	168:8:4704:4733	706723	0	True				
ANR	706728	CallExpression	d -> globalConfigGroup . isValid ( )		706723	0					
ANR	706729	Callee	d -> globalConfigGroup . isValid		706723	0					
ANR	706730	MemberAccess	d -> globalConfigGroup . isValid		706723	0					
ANR	706731	PtrMemberAccess	d -> globalConfigGroup		706723	0					
ANR	706732	Identifier	d		706723	0					
ANR	706733	Identifier	globalConfigGroup		706723	1					
ANR	706734	Identifier	isValid		706723	1					
ANR	706735	ArgumentList			706723	1					
ANR	706736	CompoundStatement		2:40:41:41	706723	1					
ANR	706737	ReturnStatement	return d -> globalConfigGroup . keyList ( ) ;	169:8:4746:4783	706723	0	True				
ANR	706738	CallExpression	d -> globalConfigGroup . keyList ( )		706723	0					
ANR	706739	Callee	d -> globalConfigGroup . keyList		706723	0					
ANR	706740	MemberAccess	d -> globalConfigGroup . keyList		706723	0					
ANR	706741	PtrMemberAccess	d -> globalConfigGroup		706723	0					
ANR	706742	Identifier	d		706723	0					
ANR	706743	Identifier	globalConfigGroup		706723	1					
ANR	706744	Identifier	keyList		706723	1					
ANR	706745	ArgumentList			706723	1					
ANR	706746	ReturnStatement	return QStringList ( ) ;	172:4:4796:4816	706723	1	True				
ANR	706747	CallExpression	QStringList ( )		706723	0					
ANR	706748	Callee	QStringList		706723	0					
ANR	706749	Identifier	QStringList		706723	0					
ANR	706750	ArgumentList			706723	1					
ANR	706751	ReturnType	QStringList		706723	1					
ANR	706752	Identifier	Applet :: globalConfigKeys		706723	2					
ANR	706753	ParameterList			706723	3					
ANR	706754	CFGEntryNode	ENTRY		706723		True				
ANR	706755	CFGExitNode	EXIT		706723		True				
ANR	706756	Symbol	d -> globalConfigGroup		706723						
ANR	706757	Symbol	d		706723						
ANR	706758	Symbol	d -> globalConfigGroup . keyList		706723						
ANR	706759	Symbol	QStringList		706723						
ANR	706760	Symbol	d -> globalConfigGroup . isValid		706723						
ANR	706761	Symbol	* d		706723						
ANR	706762	Function	Applet :: globalConfigGroups	175:0:4821:4994							
ANR	706763	FunctionDef	Applet :: globalConfigGroups ()		706762	0					
ANR	706764	CompoundStatement		176:0:4868:4994	706762	0					
ANR	706765	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		706762	0					
ANR	706766	Condition	d -> globalConfigGroup . isValid ( )	177:8:4878:4907	706762	0	True				
ANR	706767	CallExpression	d -> globalConfigGroup . isValid ( )		706762	0					
ANR	706768	Callee	d -> globalConfigGroup . isValid		706762	0					
ANR	706769	MemberAccess	d -> globalConfigGroup . isValid		706762	0					
ANR	706770	PtrMemberAccess	d -> globalConfigGroup		706762	0					
ANR	706771	Identifier	d		706762	0					
ANR	706772	Identifier	globalConfigGroup		706762	1					
ANR	706773	Identifier	isValid		706762	1					
ANR	706774	ArgumentList			706762	1					
ANR	706775	CompoundStatement		2:40:41:41	706762	1					
ANR	706776	ReturnStatement	return d -> globalConfigGroup . groupList ( ) ;	178:8:4920:4959	706762	0	True				
ANR	706777	CallExpression	d -> globalConfigGroup . groupList ( )		706762	0					
ANR	706778	Callee	d -> globalConfigGroup . groupList		706762	0					
ANR	706779	MemberAccess	d -> globalConfigGroup . groupList		706762	0					
ANR	706780	PtrMemberAccess	d -> globalConfigGroup		706762	0					
ANR	706781	Identifier	d		706762	0					
ANR	706782	Identifier	globalConfigGroup		706762	1					
ANR	706783	Identifier	groupList		706762	1					
ANR	706784	ArgumentList			706762	1					
ANR	706785	ReturnStatement	return QStringList ( ) ;	181:4:4972:4992	706762	1	True				
ANR	706786	CallExpression	QStringList ( )		706762	0					
ANR	706787	Callee	QStringList		706762	0					
ANR	706788	Identifier	QStringList		706762	0					
ANR	706789	ArgumentList			706762	1					
ANR	706790	ReturnType	QStringList		706762	1					
ANR	706791	Identifier	Applet :: globalConfigGroups		706762	2					
ANR	706792	ParameterList			706762	3					
ANR	706793	CFGEntryNode	ENTRY		706762		True				
ANR	706794	CFGExitNode	EXIT		706762		True				
ANR	706795	Symbol	d		706762						
ANR	706796	Symbol	d -> globalConfigGroup		706762						
ANR	706797	Symbol	QStringList		706762						
ANR	706798	Symbol	d -> globalConfigGroup . groupList		706762						
ANR	706799	Symbol	d -> globalConfigGroup . isValid		706762						
ANR	706800	Symbol	* d		706762						
ANR	706801	Function	Applet :: readGlobalConfig	184:0:4997:5225							
ANR	706802	FunctionDef	"Applet :: readGlobalConfig (const QString & key , const QVariant & def)"		706801	0					
ANR	706803	CompoundStatement		185:0:5078:5225	706801	0					
ANR	706804	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		706801	0					
ANR	706805	Condition	d -> globalConfigGroup . isValid ( )	186:8:5088:5117	706801	0	True				
ANR	706806	CallExpression	d -> globalConfigGroup . isValid ( )		706801	0					
ANR	706807	Callee	d -> globalConfigGroup . isValid		706801	0					
ANR	706808	MemberAccess	d -> globalConfigGroup . isValid		706801	0					
ANR	706809	PtrMemberAccess	d -> globalConfigGroup		706801	0					
ANR	706810	Identifier	d		706801	0					
ANR	706811	Identifier	globalConfigGroup		706801	1					
ANR	706812	Identifier	isValid		706801	1					
ANR	706813	ArgumentList			706801	1					
ANR	706814	CompoundStatement		2:40:41:41	706801	1					
ANR	706815	ReturnStatement	"return d -> globalConfigGroup . readEntry ( key , def ) ;"	187:8:5130:5177	706801	0	True				
ANR	706816	CallExpression	"d -> globalConfigGroup . readEntry ( key , def )"		706801	0					
ANR	706817	Callee	d -> globalConfigGroup . readEntry		706801	0					
ANR	706818	MemberAccess	d -> globalConfigGroup . readEntry		706801	0					
ANR	706819	PtrMemberAccess	d -> globalConfigGroup		706801	0					
ANR	706820	Identifier	d		706801	0					
ANR	706821	Identifier	globalConfigGroup		706801	1					
ANR	706822	Identifier	readEntry		706801	1					
ANR	706823	ArgumentList	key		706801	1					
ANR	706824	Argument	key		706801	0					
ANR	706825	Identifier	key		706801	0					
ANR	706826	Argument	def		706801	1					
ANR	706827	Identifier	def		706801	0					
ANR	706828	ElseStatement	else		706801	0					
ANR	706829	CompoundStatement		4:11:111:111	706801	0					
ANR	706830	ReturnStatement	return QVariant ( ) ;	189:8:5200:5217	706801	0	True				
ANR	706831	CallExpression	QVariant ( )		706801	0					
ANR	706832	Callee	QVariant		706801	0					
ANR	706833	Identifier	QVariant		706801	0					
ANR	706834	ArgumentList			706801	1					
ANR	706835	ReturnType	QVariant		706801	1					
ANR	706836	Identifier	Applet :: readGlobalConfig		706801	2					
ANR	706837	ParameterList	"const QString & key , const QVariant & def"		706801	3					
ANR	706838	Parameter	const QString & key	184:34:5031:5048	706801	0	True				
ANR	706839	ParameterType	const QString &		706801	0					
ANR	706840	Identifier	key		706801	1					
ANR	706841	Parameter	const QVariant & def	184:54:5051:5069	706801	1	True				
ANR	706842	ParameterType	const QVariant &		706801	0					
ANR	706843	Identifier	def		706801	1					
ANR	706844	CFGEntryNode	ENTRY		706801		True				
ANR	706845	CFGExitNode	EXIT		706801		True				
ANR	706846	Symbol	QVariant		706801						
ANR	706847	Symbol	d -> globalConfigGroup . readEntry		706801						
ANR	706848	Symbol	def		706801						
ANR	706849	Symbol	d -> globalConfigGroup		706801						
ANR	706850	Symbol	d		706801						
ANR	706851	Symbol	d -> globalConfigGroup . isValid		706801						
ANR	706852	Symbol	key		706801						
ANR	706853	Symbol	* d		706801						
ANR	706854	Function	Applet :: writeGlobalConfig	193:0:5228:5436							
ANR	706855	FunctionDef	"Applet :: writeGlobalConfig (const QString & key , const QVariant & value)"		706854	0					
ANR	706856	CompoundStatement		194:0:5302:5436	706854	0					
ANR	706857	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		706854	0					
ANR	706858	Condition	d -> globalConfigGroup . isValid ( )	195:8:5312:5341	706854	0	True				
ANR	706859	CallExpression	d -> globalConfigGroup . isValid ( )		706854	0					
ANR	706860	Callee	d -> globalConfigGroup . isValid		706854	0					
ANR	706861	MemberAccess	d -> globalConfigGroup . isValid		706854	0					
ANR	706862	PtrMemberAccess	d -> globalConfigGroup		706854	0					
ANR	706863	Identifier	d		706854	0					
ANR	706864	Identifier	globalConfigGroup		706854	1					
ANR	706865	Identifier	isValid		706854	1					
ANR	706866	ArgumentList			706854	1					
ANR	706867	CompoundStatement		2:40:41:41	706854	1					
ANR	706868	ExpressionStatement	"d -> globalConfigGroup . writeEntry ( key , value )"	196:8:5354:5397	706854	0	True				
ANR	706869	CallExpression	"d -> globalConfigGroup . writeEntry ( key , value )"		706854	0					
ANR	706870	Callee	d -> globalConfigGroup . writeEntry		706854	0					
ANR	706871	MemberAccess	d -> globalConfigGroup . writeEntry		706854	0					
ANR	706872	PtrMemberAccess	d -> globalConfigGroup		706854	0					
ANR	706873	Identifier	d		706854	0					
ANR	706874	Identifier	globalConfigGroup		706854	1					
ANR	706875	Identifier	writeEntry		706854	1					
ANR	706876	ArgumentList	key		706854	1					
ANR	706877	Argument	key		706854	0					
ANR	706878	Identifier	key		706854	0					
ANR	706879	Argument	value		706854	1					
ANR	706880	Identifier	value		706854	0					
ANR	706881	ExpressionStatement	d -> configDirty = true	197:8:5407:5428	706854	1	True				
ANR	706882	AssignmentExpression	d -> configDirty = true		706854	0		=			
ANR	706883	PtrMemberAccess	d -> configDirty		706854	0					
ANR	706884	Identifier	d		706854	0					
ANR	706885	Identifier	configDirty		706854	1					
ANR	706886	Identifier	true		706854	1					
ANR	706887	ReturnType	void		706854	1					
ANR	706888	Identifier	Applet :: writeGlobalConfig		706854	2					
ANR	706889	ParameterList	"const QString & key , const QVariant & value"		706854	3					
ANR	706890	Parameter	const QString & key	193:31:5259:5276	706854	0	True				
ANR	706891	ParameterType	const QString &		706854	0					
ANR	706892	Identifier	key		706854	1					
ANR	706893	Parameter	const QVariant & value	193:51:5279:5299	706854	1	True				
ANR	706894	ParameterType	const QVariant &		706854	0					
ANR	706895	Identifier	value		706854	1					
ANR	706896	CFGEntryNode	ENTRY		706854		True				
ANR	706897	CFGExitNode	EXIT		706854		True				
ANR	706898	Symbol	d -> configDirty		706854						
ANR	706899	Symbol	d		706854						
ANR	706900	Symbol	d -> globalConfigGroup		706854						
ANR	706901	Symbol	true		706854						
ANR	706902	Symbol	d -> globalConfigGroup . isValid		706854						
ANR	706903	Symbol	value		706854						
ANR	706904	Symbol	key		706854						
ANR	706905	Symbol	* d		706854						
ANR	706906	Function	Applet :: reloadConfigIfNeeded	201:0:5439:5533							
ANR	706907	FunctionDef	Applet :: reloadConfigIfNeeded ()		706906	0					
ANR	706908	CompoundStatement		202:0:5475:5533	706906	0					
ANR	706909	IfStatement	if ( d -> configDirty )		706906	0					
ANR	706910	Condition	d -> configDirty	203:8:5485:5498	706906	0	True				
ANR	706911	PtrMemberAccess	d -> configDirty		706906	0					
ANR	706912	Identifier	d		706906	0					
ANR	706913	Identifier	configDirty		706906	1					
ANR	706914	CompoundStatement		2:24:25:25	706906	1					
ANR	706915	ExpressionStatement	reloadConfig ( )	204:8:5511:5525	706906	0	True				
ANR	706916	CallExpression	reloadConfig ( )		706906	0					
ANR	706917	Callee	reloadConfig		706906	0					
ANR	706918	Identifier	reloadConfig		706906	0					
ANR	706919	ArgumentList			706906	1					
ANR	706920	ReturnType	void		706906	1					
ANR	706921	Identifier	Applet :: reloadConfigIfNeeded		706906	2					
ANR	706922	ParameterList			706906	3					
ANR	706923	CFGEntryNode	ENTRY		706906		True				
ANR	706924	CFGExitNode	EXIT		706906		True				
ANR	706925	Symbol	d -> configDirty		706906						
ANR	706926	Symbol	d		706906						
ANR	706927	Symbol	* d		706906						
ANR	706928	Function	Applet :: reloadConfig	208:0:5536:5946							
ANR	706929	FunctionDef	Applet :: reloadConfig ()		706928	0					
ANR	706930	CompoundStatement		209:0:5564:5946	706928	0					
ANR	706931	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	210:4:5570:5600	706928	0	True				
ANR	706932	IdentifierDecl	* app = applet ( )		706928	0					
ANR	706933	IdentifierDeclType	Plasma :: Applet *		706928	0					
ANR	706934	Identifier	app		706928	1					
ANR	706935	AssignmentExpression	* app = applet ( )		706928	2		=			
ANR	706936	Identifier	app		706928	0					
ANR	706937	CallExpression	applet ( )		706928	1					
ANR	706938	Callee	applet		706928	0					
ANR	706939	Identifier	applet		706928	0					
ANR	706940	ArgumentList			706928	1					
ANR	706941	IfStatement	if ( app )		706928	1					
ANR	706942	Condition	app	211:8:5610:5612	706928	0	True				
ANR	706943	Identifier	app		706928	0					
ANR	706944	CompoundStatement		4:8:60:91	706928	1					
ANR	706945	IdentifierDeclStatement	KConfigGroup cg = app -> config ( ) ;	212:8:5625:5656	706928	0	True				
ANR	706946	IdentifierDecl	cg = app -> config ( )		706928	0					
ANR	706947	IdentifierDeclType	KConfigGroup		706928	0					
ANR	706948	Identifier	cg		706928	1					
ANR	706949	AssignmentExpression	cg = app -> config ( )		706928	2		=			
ANR	706950	Identifier	cg		706928	0					
ANR	706951	CallExpression	app -> config ( )		706928	1					
ANR	706952	Callee	app -> config		706928	0					
ANR	706953	PtrMemberAccess	app -> config		706928	0					
ANR	706954	Identifier	app		706928	0					
ANR	706955	Identifier	config		706928	1					
ANR	706956	ArgumentList			706928	1					
ANR	706957	IfStatement	if ( ! app -> isContainment ( ) )		706928	1					
ANR	706958	Condition	! app -> isContainment ( )	214:12:5671:5691	706928	0	True				
ANR	706959	UnaryOperationExpression	! app -> isContainment ( )		706928	0					
ANR	706960	UnaryOperator	!		706928	0					
ANR	706961	CallExpression	app -> isContainment ( )		706928	1					
ANR	706962	Callee	app -> isContainment		706928	0					
ANR	706963	PtrMemberAccess	app -> isContainment		706928	0					
ANR	706964	Identifier	app		706928	0					
ANR	706965	Identifier	isContainment		706928	1					
ANR	706966	ArgumentList			706928	1					
ANR	706967	CompoundStatement		6:35:129:129	706928	1					
ANR	706968	ExpressionStatement	app -> restore ( cg )	215:12:5708:5724	706928	0	True				
ANR	706969	CallExpression	app -> restore ( cg )		706928	0					
ANR	706970	Callee	app -> restore		706928	0					
ANR	706971	PtrMemberAccess	app -> restore		706928	0					
ANR	706972	Identifier	app		706928	0					
ANR	706973	Identifier	restore		706928	1					
ANR	706974	ArgumentList	cg		706928	1					
ANR	706975	Argument	cg		706928	0					
ANR	706976	Identifier	cg		706928	0					
ANR	706977	ExpressionStatement	app -> configChanged ( )	218:8:5745:5765	706928	2	True				
ANR	706978	CallExpression	app -> configChanged ( )		706928	0					
ANR	706979	Callee	app -> configChanged		706928	0					
ANR	706980	PtrMemberAccess	app -> configChanged		706928	0					
ANR	706981	Identifier	app		706928	0					
ANR	706982	Identifier	configChanged		706928	1					
ANR	706983	ArgumentList			706928	1					
ANR	706984	IfStatement	if ( app -> containment ( ) && app -> containment ( ) -> corona ( ) )		706928	3					
ANR	706985	Condition	app -> containment ( ) && app -> containment ( ) -> corona ( )	220:12:5780:5829	706928	0	True				
ANR	706986	AndExpression	app -> containment ( ) && app -> containment ( ) -> corona ( )		706928	0		&&			
ANR	706987	CallExpression	app -> containment ( )		706928	0					
ANR	706988	Callee	app -> containment		706928	0					
ANR	706989	PtrMemberAccess	app -> containment		706928	0					
ANR	706990	Identifier	app		706928	0					
ANR	706991	Identifier	containment		706928	1					
ANR	706992	ArgumentList			706928	1					
ANR	706993	CallExpression	app -> containment ( ) -> corona ( )		706928	1					
ANR	706994	Callee	app -> containment ( ) -> corona		706928	0					
ANR	706995	PtrMemberAccess	app -> containment ( ) -> corona		706928	0					
ANR	706996	CallExpression	app -> containment ( )		706928	0					
ANR	706997	Callee	app -> containment		706928	0					
ANR	706998	PtrMemberAccess	app -> containment		706928	0					
ANR	706999	Identifier	app		706928	0					
ANR	707000	Identifier	containment		706928	1					
ANR	707001	ArgumentList			706928	1					
ANR	707002	Identifier	corona		706928	1					
ANR	707003	ArgumentList			706928	1					
ANR	707004	CompoundStatement		12:64:267:267	706928	1					
ANR	707005	ExpressionStatement	app -> containment ( ) -> corona ( ) -> requestConfigSync ( )	221:12:5846:5895	706928	0	True				
ANR	707006	CallExpression	app -> containment ( ) -> corona ( ) -> requestConfigSync ( )		706928	0					
ANR	707007	Callee	app -> containment ( ) -> corona ( ) -> requestConfigSync		706928	0					
ANR	707008	PtrMemberAccess	app -> containment ( ) -> corona ( ) -> requestConfigSync		706928	0					
ANR	707009	CallExpression	app -> containment ( ) -> corona ( )		706928	0					
ANR	707010	Callee	app -> containment ( ) -> corona		706928	0					
ANR	707011	PtrMemberAccess	app -> containment ( ) -> corona		706928	0					
ANR	707012	CallExpression	app -> containment ( )		706928	0					
ANR	707013	Callee	app -> containment		706928	0					
ANR	707014	PtrMemberAccess	app -> containment		706928	0					
ANR	707015	Identifier	app		706928	0					
ANR	707016	Identifier	containment		706928	1					
ANR	707017	ArgumentList			706928	1					
ANR	707018	Identifier	corona		706928	1					
ANR	707019	ArgumentList			706928	1					
ANR	707020	Identifier	requestConfigSync		706928	1					
ANR	707021	ArgumentList			706928	1					
ANR	707022	ExpressionStatement	d -> configDirty = false	224:8:5916:5938	706928	4	True				
ANR	707023	AssignmentExpression	d -> configDirty = false		706928	0		=			
ANR	707024	PtrMemberAccess	d -> configDirty		706928	0					
ANR	707025	Identifier	d		706928	0					
ANR	707026	Identifier	configDirty		706928	1					
ANR	707027	Identifier	false		706928	1					
ANR	707028	ReturnType	void		706928	1					
ANR	707029	Identifier	Applet :: reloadConfig		706928	2					
ANR	707030	ParameterList			706928	3					
ANR	707031	CFGEntryNode	ENTRY		706928		True				
ANR	707032	CFGExitNode	EXIT		706928		True				
ANR	707033	Symbol	app		706928						
ANR	707034	Symbol	app -> config		706928						
ANR	707035	Symbol	d -> configDirty		706928						
ANR	707036	Symbol	cg		706928						
ANR	707037	Symbol	app -> containment		706928						
ANR	707038	Symbol	d		706928						
ANR	707039	Symbol	* app -> containment		706928						
ANR	707040	Symbol	false		706928						
ANR	707041	Symbol	* d		706928						
ANR	707042	Symbol	* app		706928						
ANR	707043	Symbol	* * app		706928						
ANR	707044	Symbol	app -> containment ( ) -> corona		706928						
ANR	707045	Symbol	app -> isContainment		706928						
ANR	707046	Symbol	applet		706928						
ANR	707047	Function	Applet :: version	228:0:5949:6108							
ANR	707048	FunctionDef	Applet :: version ()		707047	0					
ANR	707049	CompoundStatement		229:0:5981:6108	707047	0					
ANR	707050	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	230:4:5987:6017	707047	0	True				
ANR	707051	IdentifierDecl	* app = applet ( )		707047	0					
ANR	707052	IdentifierDeclType	Plasma :: Applet *		707047	0					
ANR	707053	Identifier	app		707047	1					
ANR	707054	AssignmentExpression	* app = applet ( )		707047	2		=			
ANR	707055	Identifier	app		707047	0					
ANR	707056	CallExpression	applet ( )		707047	1					
ANR	707057	Callee	applet		707047	0					
ANR	707058	Identifier	applet		707047	0					
ANR	707059	ArgumentList			707047	1					
ANR	707060	IfStatement	if ( ! app )		707047	1					
ANR	707061	Condition	! app	231:8:6027:6030	707047	0	True				
ANR	707062	UnaryOperationExpression	! app		707047	0					
ANR	707063	UnaryOperator	!		707047	0					
ANR	707064	Identifier	app		707047	1					
ANR	707065	CompoundStatement		3:14:51:51	707047	1					
ANR	707066	ReturnStatement	return QString ( ) ;	232:8:6043:6059	707047	0	True				
ANR	707067	CallExpression	QString ( )		707047	0					
ANR	707068	Callee	QString		707047	0					
ANR	707069	Identifier	QString		707047	0					
ANR	707070	ArgumentList			707047	1					
ANR	707071	ReturnStatement	return app -> pluginInfo ( ) . version ( ) ;	235:4:6072:6106	707047	2	True				
ANR	707072	CallExpression	app -> pluginInfo ( ) . version ( )		707047	0					
ANR	707073	Callee	app -> pluginInfo ( ) . version		707047	0					
ANR	707074	MemberAccess	app -> pluginInfo ( ) . version		707047	0					
ANR	707075	CallExpression	app -> pluginInfo ( )		707047	0					
ANR	707076	Callee	app -> pluginInfo		707047	0					
ANR	707077	PtrMemberAccess	app -> pluginInfo		707047	0					
ANR	707078	Identifier	app		707047	0					
ANR	707079	Identifier	pluginInfo		707047	1					
ANR	707080	ArgumentList			707047	1					
ANR	707081	Identifier	version		707047	1					
ANR	707082	ArgumentList			707047	1					
ANR	707083	ReturnType	QString		707047	1					
ANR	707084	Identifier	Applet :: version		707047	2					
ANR	707085	ParameterList			707047	3					
ANR	707086	CFGEntryNode	ENTRY		707047		True				
ANR	707087	CFGExitNode	EXIT		707047		True				
ANR	707088	Symbol	app		707047						
ANR	707089	Symbol	QString		707047						
ANR	707090	Symbol	app -> pluginInfo		707047						
ANR	707091	Symbol	* app		707047						
ANR	707092	Symbol	app -> pluginInfo ( ) . version		707047						
ANR	707093	Symbol	applet		707047						
ANR	707094	Function	Applet :: setLocked	238:0:6111:6512							
ANR	707095	FunctionDef	Applet :: setLocked (bool locked)		707094	0					
ANR	707096	CompoundStatement		239:0:6147:6512	707094	0					
ANR	707097	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	240:4:6153:6183	707094	0	True				
ANR	707098	IdentifierDecl	* app = applet ( )		707094	0					
ANR	707099	IdentifierDeclType	Plasma :: Applet *		707094	0					
ANR	707100	Identifier	app		707094	1					
ANR	707101	AssignmentExpression	* app = applet ( )		707094	2		=			
ANR	707102	Identifier	app		707094	0					
ANR	707103	CallExpression	applet ( )		707094	1					
ANR	707104	Callee	applet		707094	0					
ANR	707105	Identifier	applet		707094	0					
ANR	707106	ArgumentList			707094	1					
ANR	707107	IfStatement	if ( ! app )		707094	1					
ANR	707108	Condition	! app	241:8:6193:6196	707094	0	True				
ANR	707109	UnaryOperationExpression	! app		707094	0					
ANR	707110	UnaryOperator	!		707094	0					
ANR	707111	Identifier	app		707094	1					
ANR	707112	CompoundStatement		3:14:51:51	707094	1					
ANR	707113	ReturnStatement	return ;	242:8:6209:6215	707094	0	True				
ANR	707114	ExpressionStatement	app -> setImmutability ( locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable )	245:4:6228:6312	707094	2	True				
ANR	707115	CallExpression	app -> setImmutability ( locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable )		707094	0					
ANR	707116	Callee	app -> setImmutability		707094	0					
ANR	707117	PtrMemberAccess	app -> setImmutability		707094	0					
ANR	707118	Identifier	app		707094	0					
ANR	707119	Identifier	setImmutability		707094	1					
ANR	707120	ArgumentList	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		707094	1					
ANR	707121	Argument	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		707094	0					
ANR	707122	ConditionalExpression	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		707094	0					
ANR	707123	Condition	locked		707094	0					
ANR	707124	Identifier	locked		707094	0					
ANR	707125	Identifier	Plasma :: Types :: UserImmutable		707094	1					
ANR	707126	Identifier	Plasma :: Types :: Mutable		707094	2					
ANR	707127	IdentifierDeclStatement	KConfigGroup cg = app -> config ( ) ;	246:4:6318:6349	707094	3	True				
ANR	707128	IdentifierDecl	cg = app -> config ( )		707094	0					
ANR	707129	IdentifierDeclType	KConfigGroup		707094	0					
ANR	707130	Identifier	cg		707094	1					
ANR	707131	AssignmentExpression	cg = app -> config ( )		707094	2		=			
ANR	707132	Identifier	cg		707094	0					
ANR	707133	CallExpression	app -> config ( )		707094	1					
ANR	707134	Callee	app -> config		707094	0					
ANR	707135	PtrMemberAccess	app -> config		707094	0					
ANR	707136	Identifier	app		707094	0					
ANR	707137	Identifier	config		707094	1					
ANR	707138	ArgumentList			707094	1					
ANR	707139	IfStatement	if ( ! app -> isContainment ( ) )		707094	4					
ANR	707140	Condition	! app -> isContainment ( )	247:8:6359:6379	707094	0	True				
ANR	707141	UnaryOperationExpression	! app -> isContainment ( )		707094	0					
ANR	707142	UnaryOperator	!		707094	0					
ANR	707143	CallExpression	app -> isContainment ( )		707094	1					
ANR	707144	Callee	app -> isContainment		707094	0					
ANR	707145	PtrMemberAccess	app -> isContainment		707094	0					
ANR	707146	Identifier	app		707094	0					
ANR	707147	Identifier	isContainment		707094	1					
ANR	707148	ArgumentList			707094	1					
ANR	707149	CompoundStatement		9:31:234:234	707094	1					
ANR	707150	ExpressionStatement	cg = cg . parent ( )	248:8:6392:6408	707094	0	True				
ANR	707151	AssignmentExpression	cg = cg . parent ( )		707094	0		=			
ANR	707152	Identifier	cg		707094	0					
ANR	707153	CallExpression	cg . parent ( )		707094	1					
ANR	707154	Callee	cg . parent		707094	0					
ANR	707155	MemberAccess	cg . parent		707094	0					
ANR	707156	Identifier	cg		707094	0					
ANR	707157	Identifier	parent		707094	1					
ANR	707158	ArgumentList			707094	1					
ANR	707159	IfStatement	if ( cg . isValid ( ) )		707094	5					
ANR	707160	Condition	cg . isValid ( )	251:8:6425:6436	707094	0	True				
ANR	707161	CallExpression	cg . isValid ( )		707094	0					
ANR	707162	Callee	cg . isValid		707094	0					
ANR	707163	MemberAccess	cg . isValid		707094	0					
ANR	707164	Identifier	cg		707094	0					
ANR	707165	Identifier	isValid		707094	1					
ANR	707166	ArgumentList			707094	1					
ANR	707167	CompoundStatement		13:22:291:291	707094	1					
ANR	707168	ExpressionStatement	"cg . writeEntry ( ""immutability"" , ( int ) app -> immutability ( ) )"	252:8:6449:6504	707094	0	True				
ANR	707169	CallExpression	"cg . writeEntry ( ""immutability"" , ( int ) app -> immutability ( ) )"		707094	0					
ANR	707170	Callee	cg . writeEntry		707094	0					
ANR	707171	MemberAccess	cg . writeEntry		707094	0					
ANR	707172	Identifier	cg		707094	0					
ANR	707173	Identifier	writeEntry		707094	1					
ANR	707174	ArgumentList	"""immutability"""		707094	1					
ANR	707175	Argument	"""immutability"""		707094	0					
ANR	707176	PrimaryExpression	"""immutability"""		707094	0					
ANR	707177	Argument	( int ) app -> immutability ( )		707094	1					
ANR	707178	CastExpression	( int ) app -> immutability ( )		707094	0					
ANR	707179	CastTarget	int		707094	0					
ANR	707180	CallExpression	app -> immutability ( )		707094	1					
ANR	707181	Callee	app -> immutability		707094	0					
ANR	707182	PtrMemberAccess	app -> immutability		707094	0					
ANR	707183	Identifier	app		707094	0					
ANR	707184	Identifier	immutability		707094	1					
ANR	707185	ArgumentList			707094	1					
ANR	707186	ReturnType	void		707094	1					
ANR	707187	Identifier	Applet :: setLocked		707094	2					
ANR	707188	ParameterList	bool locked		707094	3					
ANR	707189	Parameter	bool locked	238:23:6134:6144	707094	0	True				
ANR	707190	ParameterType	bool		707094	0					
ANR	707191	Identifier	locked		707094	1					
ANR	707192	CFGEntryNode	ENTRY		707094		True				
ANR	707193	CFGExitNode	EXIT		707094		True				
ANR	707194	Symbol	app		707094						
ANR	707195	Symbol	Plasma :: Types :: Mutable		707094						
ANR	707196	Symbol	app -> config		707094						
ANR	707197	Symbol	cg		707094						
ANR	707198	Symbol	* app		707094						
ANR	707199	Symbol	app -> immutability		707094						
ANR	707200	Symbol	locked		707094						
ANR	707201	Symbol	app -> isContainment		707094						
ANR	707202	Symbol	cg . parent		707094						
ANR	707203	Symbol	Plasma :: Types :: UserImmutable		707094						
ANR	707204	Symbol	applet		707094						
ANR	707205	Symbol	cg . isValid		707094						
ANR	707206	Function	Applet :: locked	256:0:6515:6701							
ANR	707207	FunctionDef	Applet :: locked ()		707206	0					
ANR	707208	CompoundStatement		257:0:6543:6701	707206	0					
ANR	707209	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	258:4:6549:6579	707206	0	True				
ANR	707210	IdentifierDecl	* app = applet ( )		707206	0					
ANR	707211	IdentifierDeclType	Plasma :: Applet *		707206	0					
ANR	707212	Identifier	app		707206	1					
ANR	707213	AssignmentExpression	* app = applet ( )		707206	2		=			
ANR	707214	Identifier	app		707206	0					
ANR	707215	CallExpression	applet ( )		707206	1					
ANR	707216	Callee	applet		707206	0					
ANR	707217	Identifier	applet		707206	0					
ANR	707218	ArgumentList			707206	1					
ANR	707219	IfStatement	if ( ! app )		707206	1					
ANR	707220	Condition	! app	259:8:6589:6592	707206	0	True				
ANR	707221	UnaryOperationExpression	! app		707206	0					
ANR	707222	UnaryOperator	!		707206	0					
ANR	707223	Identifier	app		707206	1					
ANR	707224	CompoundStatement		3:14:51:51	707206	1					
ANR	707225	ReturnStatement	return Plasma :: Types :: Mutable ;	260:8:6605:6634	707206	0	True				
ANR	707226	Identifier	Plasma :: Types :: Mutable		707206	0					
ANR	707227	ReturnStatement	return app -> immutability ( ) != Plasma :: Types :: Mutable ;	263:4:6647:6699	707206	2	True				
ANR	707228	EqualityExpression	app -> immutability ( ) != Plasma :: Types :: Mutable		707206	0		!=			
ANR	707229	CallExpression	app -> immutability ( )		707206	0					
ANR	707230	Callee	app -> immutability		707206	0					
ANR	707231	PtrMemberAccess	app -> immutability		707206	0					
ANR	707232	Identifier	app		707206	0					
ANR	707233	Identifier	immutability		707206	1					
ANR	707234	ArgumentList			707206	1					
ANR	707235	Identifier	Plasma :: Types :: Mutable		707206	1					
ANR	707236	ReturnType	bool		707206	1					
ANR	707237	Identifier	Applet :: locked		707206	2					
ANR	707238	ParameterList			707206	3					
ANR	707239	CFGEntryNode	ENTRY		707206		True				
ANR	707240	CFGExitNode	EXIT		707206		True				
ANR	707241	Symbol	app		707206						
ANR	707242	Symbol	Plasma :: Types :: Mutable		707206						
ANR	707243	Symbol	* app		707206						
ANR	707244	Symbol	app -> immutability		707206						
ANR	707245	Symbol	applet		707206						
ANR	707246	Function	Applet :: applet	266:0:6704:6759							
ANR	707247	FunctionDef	Applet :: applet ()		707246	0					
ANR	707248	CompoundStatement		267:0:6743:6759	707246	0					
ANR	707249	ReturnStatement	return 0 ;	268:4:6749:6757	707246	0	True				
ANR	707250	PrimaryExpression	0		707246	0					
ANR	707251	ReturnType	Plasma :: Applet *		707246	1					
ANR	707252	Identifier	Applet :: applet		707246	2					
ANR	707253	ParameterList			707246	3					
ANR	707254	CFGEntryNode	ENTRY		707246		True				
ANR	707255	CFGExitNode	EXIT		707246		True				
