command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	97784	File	data/converged/CVE-2018-6791_plasma-workspace/containmentactions_switchwindow_switch.cpp								
ANR	97785	Function	SwitchWindow :: SwitchWindow	35:0:1073:1712							
ANR	97786	FunctionDef	"SwitchWindow :: SwitchWindow (QObject * parent , const QVariantList & args)"		97785	0					
ANR	97787	CompoundStatement		41:0:1355:1712	97785	0					
ANR	97788	ExpressionStatement	m_tasksModel -> setGroupMode ( TaskManager :: TasksModel :: GroupDisabled )	42:4:1361:1427	97785	0	True				
ANR	97789	CallExpression	m_tasksModel -> setGroupMode ( TaskManager :: TasksModel :: GroupDisabled )		97785	0					
ANR	97790	Callee	m_tasksModel -> setGroupMode		97785	0					
ANR	97791	PtrMemberAccess	m_tasksModel -> setGroupMode		97785	0					
ANR	97792	Identifier	m_tasksModel		97785	0					
ANR	97793	Identifier	setGroupMode		97785	1					
ANR	97794	ArgumentList	TaskManager :: TasksModel :: GroupDisabled		97785	1					
ANR	97795	Argument	TaskManager :: TasksModel :: GroupDisabled		97785	0					
ANR	97796	Identifier	TaskManager :: TasksModel :: GroupDisabled		97785	0					
ANR	97797	ExpressionStatement	m_tasksModel -> setActivity ( m_activityInfo -> currentActivity ( ) )	44:4:1434:1494	97785	1	True				
ANR	97798	CallExpression	m_tasksModel -> setActivity ( m_activityInfo -> currentActivity ( ) )		97785	0					
ANR	97799	Callee	m_tasksModel -> setActivity		97785	0					
ANR	97800	PtrMemberAccess	m_tasksModel -> setActivity		97785	0					
ANR	97801	Identifier	m_tasksModel		97785	0					
ANR	97802	Identifier	setActivity		97785	1					
ANR	97803	ArgumentList	m_activityInfo -> currentActivity ( )		97785	1					
ANR	97804	Argument	m_activityInfo -> currentActivity ( )		97785	0					
ANR	97805	CallExpression	m_activityInfo -> currentActivity ( )		97785	0					
ANR	97806	Callee	m_activityInfo -> currentActivity		97785	0					
ANR	97807	PtrMemberAccess	m_activityInfo -> currentActivity		97785	0					
ANR	97808	Identifier	m_activityInfo		97785	0					
ANR	97809	Identifier	currentActivity		97785	1					
ANR	97810	ArgumentList			97785	1					
ANR	97811	ExpressionStatement	m_tasksModel -> setFilterByActivity ( true )	45:4:1500:1539	97785	2	True				
ANR	97812	CallExpression	m_tasksModel -> setFilterByActivity ( true )		97785	0					
ANR	97813	Callee	m_tasksModel -> setFilterByActivity		97785	0					
ANR	97814	PtrMemberAccess	m_tasksModel -> setFilterByActivity		97785	0					
ANR	97815	Identifier	m_tasksModel		97785	0					
ANR	97816	Identifier	setFilterByActivity		97785	1					
ANR	97817	ArgumentList	true		97785	1					
ANR	97818	Argument	true		97785	0					
ANR	97819	Identifier	true		97785	0					
ANR	97820	Statement	connect	46:4:1545:1551	97785	3	True				
ANR	97821	Statement	(	46:11:1552:1552	97785	4	True				
ANR	97822	Statement	m_activityInfo	46:12:1553:1566	97785	5	True				
ANR	97823	Statement	","	46:26:1567:1567	97785	6	True				
ANR	97824	Statement	&	46:28:1569:1569	97785	7	True				
ANR	97825	Statement	TaskManager	46:29:1570:1580	97785	8	True				
ANR	97826	Statement	::	46:40:1581:1582	97785	9	True				
ANR	97827	Statement	ActivityInfo	46:42:1583:1594	97785	10	True				
ANR	97828	Statement	::	46:54:1595:1596	97785	11	True				
ANR	97829	Statement	currentActivityChanged	46:56:1597:1618	97785	12	True				
ANR	97830	Statement	","	46:78:1619:1619	97785	13	True				
ANR	97831	Statement	this	47:8:1629:1632	97785	14	True				
ANR	97832	Statement	","	47:12:1633:1633	97785	15	True				
ANR	97833	Statement	[	47:14:1635:1635	97785	16	True				
ANR	97834	Statement	this	47:15:1636:1639	97785	17	True				
ANR	97835	Statement	]	47:19:1640:1640	97785	18	True				
ANR	97836	Statement	(	47:20:1641:1641	97785	19	True				
ANR	97837	Statement	)	47:21:1642:1642	97785	20	True				
ANR	97838	CompoundStatement		7:23:288:288	97785	21					
ANR	97839	ExpressionStatement	m_tasksModel -> setActivity ( m_activityInfo -> currentActivity ( ) )	47:25:1646:1706	97785	0	True				
ANR	97840	CallExpression	m_tasksModel -> setActivity ( m_activityInfo -> currentActivity ( ) )		97785	0					
ANR	97841	Callee	m_tasksModel -> setActivity		97785	0					
ANR	97842	PtrMemberAccess	m_tasksModel -> setActivity		97785	0					
ANR	97843	Identifier	m_tasksModel		97785	0					
ANR	97844	Identifier	setActivity		97785	1					
ANR	97845	ArgumentList	m_activityInfo -> currentActivity ( )		97785	1					
ANR	97846	Argument	m_activityInfo -> currentActivity ( )		97785	0					
ANR	97847	CallExpression	m_activityInfo -> currentActivity ( )		97785	0					
ANR	97848	Callee	m_activityInfo -> currentActivity		97785	0					
ANR	97849	PtrMemberAccess	m_activityInfo -> currentActivity		97785	0					
ANR	97850	Identifier	m_activityInfo		97785	0					
ANR	97851	Identifier	currentActivity		97785	1					
ANR	97852	ArgumentList			97785	1					
ANR	97853	Statement	)	47:88:1709:1709	97785	22	True				
ANR	97854	ExpressionStatement		47:89:1710:1710	97785	23	True				
ANR	97855	Identifier	SwitchWindow :: SwitchWindow		97785	1					
ANR	97856	ParameterList	"QObject * parent , const QVariantList & args"		97785	2					
ANR	97857	Parameter	QObject * parent	35:27:1100:1114	97785	0	True				
ANR	97858	ParameterType	QObject *		97785	0					
ANR	97859	Identifier	parent		97785	1					
ANR	97860	Parameter	const QVariantList & args	35:44:1117:1140	97785	1	True				
ANR	97861	ParameterType	const QVariantList &		97785	0					
ANR	97862	Identifier	args		97785	1					
ANR	97863	CFGEntryNode	ENTRY		97785		True				
ANR	97864	CFGExitNode	EXIT		97785		True				
ANR	97865	Symbol	args		97785						
ANR	97866	Symbol	parent		97785						
ANR	97867	Symbol	m_activityInfo		97785						
ANR	97868	Symbol	TaskManager :: TasksModel :: GroupDisabled		97785						
ANR	97869	Symbol	true		97785						
ANR	97870	Symbol	m_activityInfo -> currentActivity		97785						
ANR	97871	Symbol	m_tasksModel		97785						
ANR	97872	Symbol	* m_activityInfo		97785						
ANR	97873	Function	SwitchWindow :: ~SwitchWindow	50:0:1715:1747							
ANR	97874	FunctionDef	SwitchWindow :: ~SwitchWindow ()		97873	0					
ANR	97875	CompoundStatement		51:0:1745:1747	97873	0					
ANR	97876	Identifier	SwitchWindow :: ~SwitchWindow		97873	1					
ANR	97877	ParameterList			97873	2					
ANR	97878	CFGEntryNode	ENTRY		97873		True				
ANR	97879	CFGExitNode	EXIT		97873		True				
ANR	97880	Function	SwitchWindow :: restore	54:0:1750:1870							
ANR	97881	FunctionDef	SwitchWindow :: restore (const KConfigGroup & config)		97880	0					
ANR	97882	CompoundStatement		55:0:1805:1870	97880	0					
ANR	97883	ExpressionStatement	"m_mode = ( MenuMode ) config . readEntry ( ""mode"" , ( int ) AllFlat )"	56:4:1811:1868	97880	0	True				
ANR	97884	AssignmentExpression	"m_mode = ( MenuMode ) config . readEntry ( ""mode"" , ( int ) AllFlat )"		97880	0		=			
ANR	97885	Identifier	m_mode		97880	0					
ANR	97886	CastExpression	"( MenuMode ) config . readEntry ( ""mode"" , ( int ) AllFlat )"		97880	1					
ANR	97887	CastTarget	MenuMode		97880	0					
ANR	97888	CallExpression	"config . readEntry ( ""mode"" , ( int ) AllFlat )"		97880	1					
ANR	97889	Callee	config . readEntry		97880	0					
ANR	97890	MemberAccess	config . readEntry		97880	0					
ANR	97891	Identifier	config		97880	0					
ANR	97892	Identifier	readEntry		97880	1					
ANR	97893	ArgumentList	"""mode"""		97880	1					
ANR	97894	Argument	"""mode"""		97880	0					
ANR	97895	PrimaryExpression	"""mode"""		97880	0					
ANR	97896	Argument	( int ) AllFlat		97880	1					
ANR	97897	CastExpression	( int ) AllFlat		97880	0					
ANR	97898	CastTarget	int		97880	0					
ANR	97899	Identifier	AllFlat		97880	1					
ANR	97900	ReturnType	void		97880	1					
ANR	97901	Identifier	SwitchWindow :: restore		97880	2					
ANR	97902	ParameterList	const KConfigGroup & config		97880	3					
ANR	97903	Parameter	const KConfigGroup & config	54:27:1777:1802	97880	0	True				
ANR	97904	ParameterType	const KConfigGroup &		97880	0					
ANR	97905	Identifier	config		97880	1					
ANR	97906	CFGEntryNode	ENTRY		97880		True				
ANR	97907	CFGExitNode	EXIT		97880		True				
ANR	97908	Symbol	AllFlat		97880						
ANR	97909	Symbol	config . readEntry		97880						
ANR	97910	Symbol	m_mode		97880						
ANR	97911	Symbol	config		97880						
ANR	97912	Function	SwitchWindow :: createConfigurationInterface	59:0:1873:2448							
ANR	97913	FunctionDef	SwitchWindow :: createConfigurationInterface (QWidget * parent)		97912	0					
ANR	97914	CompoundStatement		60:0:1942:2448	97912	0					
ANR	97915	IdentifierDeclStatement	QWidget * widget = new QWidget ( parent ) ;	61:4:1948:1985	97912	0	True				
ANR	97916	IdentifierDecl	* widget = new QWidget ( parent )		97912	0					
ANR	97917	IdentifierDeclType	QWidget *		97912	0					
ANR	97918	Identifier	widget		97912	1					
ANR	97919	AssignmentExpression	* widget = new QWidget ( parent )		97912	2		=			
ANR	97920	Identifier	parent		97912	0					
ANR	97921	Identifier	parent		97912	1					
ANR	97922	ExpressionStatement	m_ui . setupUi ( widget )	62:4:1991:2011	97912	1	True				
ANR	97923	CallExpression	m_ui . setupUi ( widget )		97912	0					
ANR	97924	Callee	m_ui . setupUi		97912	0					
ANR	97925	MemberAccess	m_ui . setupUi		97912	0					
ANR	97926	Identifier	m_ui		97912	0					
ANR	97927	Identifier	setupUi		97912	1					
ANR	97928	ArgumentList	widget		97912	1					
ANR	97929	Argument	widget		97912	0					
ANR	97930	Identifier	widget		97912	0					
ANR	97931	ExpressionStatement	"widget -> setWindowTitle ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""Configure Switch Window Plugin"" ) )"	63:4:2017:2122	97912	2	True				
ANR	97932	CallExpression	"widget -> setWindowTitle ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""Configure Switch Window Plugin"" ) )"		97912	0					
ANR	97933	Callee	widget -> setWindowTitle		97912	0					
ANR	97934	PtrMemberAccess	widget -> setWindowTitle		97912	0					
ANR	97935	Identifier	widget		97912	0					
ANR	97936	Identifier	setWindowTitle		97912	1					
ANR	97937	ArgumentList	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""Configure Switch Window Plugin"" )"		97912	1					
ANR	97938	Argument	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""Configure Switch Window Plugin"" )"		97912	0					
ANR	97939	CallExpression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""Configure Switch Window Plugin"" )"		97912	0					
ANR	97940	Callee	i18nc		97912	0					
ANR	97941	Identifier	i18nc		97912	0					
ANR	97942	ArgumentList	"""plasma_containmentactions_switchwindow"""		97912	1					
ANR	97943	Argument	"""plasma_containmentactions_switchwindow"""		97912	0					
ANR	97944	PrimaryExpression	"""plasma_containmentactions_switchwindow"""		97912	0					
ANR	97945	Argument	"""Configure Switch Window Plugin"""		97912	1					
ANR	97946	PrimaryExpression	"""Configure Switch Window Plugin"""		97912	0					
ANR	97947	SwitchStatement	switch ( m_mode )		97912	3					
ANR	97948	Condition	m_mode	64:12:2136:2141	97912	0	True				
ANR	97949	Identifier	m_mode		97912	0					
ANR	97950	CompoundStatement		5:20:201:201	97912	1					
ANR	97951	Label	case AllFlat :	65:8:2154:2166	97912	0	True				
ANR	97952	Identifier	AllFlat		97912	0					
ANR	97953	ExpressionStatement	m_ui . flatButton -> setChecked ( true )	66:12:2180:2213	97912	1	True				
ANR	97954	CallExpression	m_ui . flatButton -> setChecked ( true )		97912	0					
ANR	97955	Callee	m_ui . flatButton -> setChecked		97912	0					
ANR	97956	PtrMemberAccess	m_ui . flatButton -> setChecked		97912	0					
ANR	97957	MemberAccess	m_ui . flatButton		97912	0					
ANR	97958	Identifier	m_ui		97912	0					
ANR	97959	Identifier	flatButton		97912	1					
ANR	97960	Identifier	setChecked		97912	1					
ANR	97961	ArgumentList	true		97912	1					
ANR	97962	Argument	true		97912	0					
ANR	97963	Identifier	true		97912	0					
ANR	97964	BreakStatement	break ;	67:12:2227:2232	97912	2	True				
ANR	97965	Label	case DesktopSubmenus :	68:8:2242:2262	97912	3	True				
ANR	97966	Identifier	DesktopSubmenus		97912	0					
ANR	97967	ExpressionStatement	m_ui . subButton -> setChecked ( true )	69:12:2276:2308	97912	4	True				
ANR	97968	CallExpression	m_ui . subButton -> setChecked ( true )		97912	0					
ANR	97969	Callee	m_ui . subButton -> setChecked		97912	0					
ANR	97970	PtrMemberAccess	m_ui . subButton -> setChecked		97912	0					
ANR	97971	MemberAccess	m_ui . subButton		97912	0					
ANR	97972	Identifier	m_ui		97912	0					
ANR	97973	Identifier	subButton		97912	1					
ANR	97974	Identifier	setChecked		97912	1					
ANR	97975	ArgumentList	true		97912	1					
ANR	97976	Argument	true		97912	0					
ANR	97977	Identifier	true		97912	0					
ANR	97978	BreakStatement	break ;	70:12:2322:2327	97912	5	True				
ANR	97979	Label	case CurrentDesktop :	71:8:2337:2356	97912	6	True				
ANR	97980	Identifier	CurrentDesktop		97912	0					
ANR	97981	ExpressionStatement	m_ui . curButton -> setChecked ( true )	72:12:2370:2402	97912	7	True				
ANR	97982	CallExpression	m_ui . curButton -> setChecked ( true )		97912	0					
ANR	97983	Callee	m_ui . curButton -> setChecked		97912	0					
ANR	97984	PtrMemberAccess	m_ui . curButton -> setChecked		97912	0					
ANR	97985	MemberAccess	m_ui . curButton		97912	0					
ANR	97986	Identifier	m_ui		97912	0					
ANR	97987	Identifier	curButton		97912	1					
ANR	97988	Identifier	setChecked		97912	1					
ANR	97989	ArgumentList	true		97912	1					
ANR	97990	Argument	true		97912	0					
ANR	97991	Identifier	true		97912	0					
ANR	97992	BreakStatement	break ;	73:12:2416:2421	97912	8	True				
ANR	97993	ReturnStatement	return widget ;	75:4:2433:2446	97912	4	True				
ANR	97994	Identifier	widget		97912	0					
ANR	97995	ReturnType	QWidget *		97912	1					
ANR	97996	Identifier	SwitchWindow :: createConfigurationInterface		97912	2					
ANR	97997	ParameterList	QWidget * parent		97912	3					
ANR	97998	Parameter	QWidget * parent	59:52:1925:1939	97912	0	True				
ANR	97999	ParameterType	QWidget *		97912	0					
ANR	98000	Identifier	parent		97912	1					
ANR	98001	CFGEntryNode	ENTRY		97912		True				
ANR	98002	CFGExitNode	EXIT		97912		True				
ANR	98003	Symbol	parent		97912						
ANR	98004	Symbol	widget		97912						
ANR	98005	Symbol	m_ui . flatButton		97912						
ANR	98006	Symbol	m_ui		97912						
ANR	98007	Symbol	true		97912						
ANR	98008	Symbol	m_ui . subButton		97912						
ANR	98009	Symbol	i18nc		97912						
ANR	98010	Symbol	m_mode		97912						
ANR	98011	Symbol	m_ui . curButton		97912						
ANR	98012	Function	SwitchWindow :: configurationAccepted	78:0:2451:2694							
ANR	98013	FunctionDef	SwitchWindow :: configurationAccepted ()		98012	0					
ANR	98014	CompoundStatement		79:0:2494:2694	98012	0					
ANR	98015	IfStatement	if ( m_ui . flatButton -> isChecked ( ) )		98012	0					
ANR	98016	Condition	m_ui . flatButton -> isChecked ( )	80:8:2504:2531	98012	0	True				
ANR	98017	CallExpression	m_ui . flatButton -> isChecked ( )		98012	0					
ANR	98018	Callee	m_ui . flatButton -> isChecked		98012	0					
ANR	98019	PtrMemberAccess	m_ui . flatButton -> isChecked		98012	0					
ANR	98020	MemberAccess	m_ui . flatButton		98012	0					
ANR	98021	Identifier	m_ui		98012	0					
ANR	98022	Identifier	flatButton		98012	1					
ANR	98023	Identifier	isChecked		98012	1					
ANR	98024	ArgumentList			98012	1					
ANR	98025	CompoundStatement		2:38:39:39	98012	1					
ANR	98026	ExpressionStatement	m_mode = AllFlat	81:8:2544:2560	98012	0	True				
ANR	98027	AssignmentExpression	m_mode = AllFlat		98012	0		=			
ANR	98028	Identifier	m_mode		98012	0					
ANR	98029	Identifier	AllFlat		98012	1					
ANR	98030	ElseStatement	else		98012	0					
ANR	98031	IfStatement	if ( m_ui . subButton -> isChecked ( ) )		98012	0					
ANR	98032	Condition	m_ui . subButton -> isChecked ( )	82:15:2577:2603	98012	0	True				
ANR	98033	CallExpression	m_ui . subButton -> isChecked ( )		98012	0					
ANR	98034	Callee	m_ui . subButton -> isChecked		98012	0					
ANR	98035	PtrMemberAccess	m_ui . subButton -> isChecked		98012	0					
ANR	98036	MemberAccess	m_ui . subButton		98012	0					
ANR	98037	Identifier	m_ui		98012	0					
ANR	98038	Identifier	subButton		98012	1					
ANR	98039	Identifier	isChecked		98012	1					
ANR	98040	ArgumentList			98012	1					
ANR	98041	CompoundStatement		4:44:111:111	98012	1					
ANR	98042	ExpressionStatement	m_mode = DesktopSubmenus	83:8:2616:2640	98012	0	True				
ANR	98043	AssignmentExpression	m_mode = DesktopSubmenus		98012	0		=			
ANR	98044	Identifier	m_mode		98012	0					
ANR	98045	Identifier	DesktopSubmenus		98012	1					
ANR	98046	ElseStatement	else		98012	0					
ANR	98047	CompoundStatement		6:11:158:158	98012	0					
ANR	98048	ExpressionStatement	m_mode = CurrentDesktop	85:8:2663:2686	98012	0	True				
ANR	98049	AssignmentExpression	m_mode = CurrentDesktop		98012	0		=			
ANR	98050	Identifier	m_mode		98012	0					
ANR	98051	Identifier	CurrentDesktop		98012	1					
ANR	98052	ReturnType	void		98012	1					
ANR	98053	Identifier	SwitchWindow :: configurationAccepted		98012	2					
ANR	98054	ParameterList			98012	3					
ANR	98055	CFGEntryNode	ENTRY		98012		True				
ANR	98056	CFGExitNode	EXIT		98012		True				
ANR	98057	Symbol	CurrentDesktop		98012						
ANR	98058	Symbol	m_ui . flatButton		98012						
ANR	98059	Symbol	DesktopSubmenus		98012						
ANR	98060	Symbol	m_ui		98012						
ANR	98061	Symbol	* m_ui . flatButton		98012						
ANR	98062	Symbol	* m_ui . subButton		98012						
ANR	98063	Symbol	m_ui . subButton -> isChecked		98012						
ANR	98064	Symbol	m_ui . subButton		98012						
ANR	98065	Symbol	AllFlat		98012						
ANR	98066	Symbol	m_mode		98012						
ANR	98067	Symbol	m_ui . flatButton -> isChecked		98012						
ANR	98068	Symbol	* m_ui		98012						
ANR	98069	Function	SwitchWindow :: save	89:0:2697:2789							
ANR	98070	FunctionDef	SwitchWindow :: save (KConfigGroup & config)		98069	0					
ANR	98071	CompoundStatement		90:0:2743:2789	98069	0					
ANR	98072	ExpressionStatement	"config . writeEntry ( ""mode"" , ( int ) m_mode )"	91:4:2749:2787	98069	0	True				
ANR	98073	CallExpression	"config . writeEntry ( ""mode"" , ( int ) m_mode )"		98069	0					
ANR	98074	Callee	config . writeEntry		98069	0					
ANR	98075	MemberAccess	config . writeEntry		98069	0					
ANR	98076	Identifier	config		98069	0					
ANR	98077	Identifier	writeEntry		98069	1					
ANR	98078	ArgumentList	"""mode"""		98069	1					
ANR	98079	Argument	"""mode"""		98069	0					
ANR	98080	PrimaryExpression	"""mode"""		98069	0					
ANR	98081	Argument	( int ) m_mode		98069	1					
ANR	98082	CastExpression	( int ) m_mode		98069	0					
ANR	98083	CastTarget	int		98069	0					
ANR	98084	Identifier	m_mode		98069	1					
ANR	98085	ReturnType	void		98069	1					
ANR	98086	Identifier	SwitchWindow :: save		98069	2					
ANR	98087	ParameterList	KConfigGroup & config		98069	3					
ANR	98088	Parameter	KConfigGroup & config	89:24:2721:2740	98069	0	True				
ANR	98089	ParameterType	KConfigGroup &		98069	0					
ANR	98090	Identifier	config		98069	1					
ANR	98091	CFGEntryNode	ENTRY		98069		True				
ANR	98092	CFGExitNode	EXIT		98069		True				
ANR	98093	Symbol	m_mode		98069						
ANR	98094	Symbol	config		98069						
ANR	98095	Function	SwitchWindow :: makeMenu	94:0:2792:6257							
ANR	98096	FunctionDef	SwitchWindow :: makeMenu ()		98095	0					
ANR	98097	CompoundStatement		95:0:2822:6257	98095	0					
ANR	98098	ExpressionStatement	qDeleteAll ( m_actions )	96:4:2828:2849	98095	0	True				
ANR	98099	CallExpression	qDeleteAll ( m_actions )		98095	0					
ANR	98100	Callee	qDeleteAll		98095	0					
ANR	98101	Identifier	qDeleteAll		98095	0					
ANR	98102	ArgumentList	m_actions		98095	1					
ANR	98103	Argument	m_actions		98095	0					
ANR	98104	Identifier	m_actions		98095	0					
ANR	98105	ExpressionStatement	m_actions . clear ( )	97:4:2855:2872	98095	1	True				
ANR	98106	CallExpression	m_actions . clear ( )		98095	0					
ANR	98107	Callee	m_actions . clear		98095	0					
ANR	98108	MemberAccess	m_actions . clear		98095	0					
ANR	98109	Identifier	m_actions		98095	0					
ANR	98110	Identifier	clear		98095	1					
ANR	98111	ArgumentList			98095	1					
ANR	98112	IfStatement	if ( m_tasksModel -> rowCount ( ) == 0 )		98095	2					
ANR	98113	Condition	m_tasksModel -> rowCount ( ) == 0	99:8:2883:2911	98095	0	True				
ANR	98114	EqualityExpression	m_tasksModel -> rowCount ( ) == 0		98095	0		==			
ANR	98115	CallExpression	m_tasksModel -> rowCount ( )		98095	0					
ANR	98116	Callee	m_tasksModel -> rowCount		98095	0					
ANR	98117	PtrMemberAccess	m_tasksModel -> rowCount		98095	0					
ANR	98118	Identifier	m_tasksModel		98095	0					
ANR	98119	Identifier	rowCount		98095	1					
ANR	98120	ArgumentList			98095	1					
ANR	98121	PrimaryExpression	0		98095	1					
ANR	98122	CompoundStatement		5:39:91:91	98095	1					
ANR	98123	ReturnStatement	return ;	100:8:2924:2930	98095	0	True				
ANR	98124	IdentifierDeclStatement	"QMultiHash < int , QAction * > desktops ;"	103:4:2943:2977	98095	3	True				
ANR	98125	IdentifierDecl	desktops		98095	0					
ANR	98126	IdentifierDeclType	"QMultiHash < int , QAction * >"		98095	0					
ANR	98127	Identifier	desktops		98095	1					
ANR	98128	ForStatement	for ( int i = 0 ; i < m_tasksModel -> rowCount ( ) ; ++ i )		98095	4					
ANR	98129	ForInit	int i = 0 ;	106:9:3023:3032	98095	0	True				
ANR	98130	IdentifierDeclStatement	int i = 0 ;		98095	0					
ANR	98131	IdentifierDecl	i = 0		98095	0					
ANR	98132	IdentifierDeclType	int		98095	0					
ANR	98133	Identifier	i		98095	1					
ANR	98134	AssignmentExpression	i = 0		98095	2		=			
ANR	98135	Identifier	i		98095	0					
ANR	98136	PrimaryExpression	0		98095	1					
ANR	98137	Condition	i < m_tasksModel -> rowCount ( )	106:20:3034:3061	98095	1	True				
ANR	98138	RelationalExpression	i < m_tasksModel -> rowCount ( )		98095	0		<			
ANR	98139	Identifier	i		98095	0					
ANR	98140	CallExpression	m_tasksModel -> rowCount ( )		98095	1					
ANR	98141	Callee	m_tasksModel -> rowCount		98095	0					
ANR	98142	PtrMemberAccess	m_tasksModel -> rowCount		98095	0					
ANR	98143	Identifier	m_tasksModel		98095	0					
ANR	98144	Identifier	rowCount		98095	1					
ANR	98145	ArgumentList			98095	1					
ANR	98146	UnaryExpression	++ i	106:50:3064:3066	98095	2	True				
ANR	98147	IncDec	++		98095	0					
ANR	98148	Identifier	i		98095	1					
ANR	98149	CompoundStatement		30:8:818:859	98095	3					
ANR	98150	IfStatement	"if ( m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup ) . toBool ( ) )"		98095	0					
ANR	98151	Condition	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup ) . toBool ( )"	107:12:3083:3180	98095	0	True				
ANR	98152	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup ) . toBool ( )"		98095	0					
ANR	98153	Callee	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup ) . toBool"		98095	0					
ANR	98154	MemberAccess	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup ) . toBool"		98095	0					
ANR	98155	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup )"		98095	0					
ANR	98156	Callee	m_tasksModel -> data		98095	0					
ANR	98157	PtrMemberAccess	m_tasksModel -> data		98095	0					
ANR	98158	Identifier	m_tasksModel		98095	0					
ANR	98159	Identifier	data		98095	1					
ANR	98160	ArgumentList	"m_tasksModel -> index ( i , 0 )"		98095	1					
ANR	98161	Argument	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98162	CallExpression	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98163	Callee	m_tasksModel -> index		98095	0					
ANR	98164	PtrMemberAccess	m_tasksModel -> index		98095	0					
ANR	98165	Identifier	m_tasksModel		98095	0					
ANR	98166	Identifier	index		98095	1					
ANR	98167	ArgumentList	i		98095	1					
ANR	98168	Argument	i		98095	0					
ANR	98169	Identifier	i		98095	0					
ANR	98170	Argument	0		98095	1					
ANR	98171	PrimaryExpression	0		98095	0					
ANR	98172	Argument	TaskManager :: AbstractTasksModel :: IsStartup		98095	1					
ANR	98173	Identifier	TaskManager :: AbstractTasksModel :: IsStartup		98095	0					
ANR	98174	Identifier	toBool		98095	1					
ANR	98175	ArgumentList			98095	1					
ANR	98176	CompoundStatement		13:112:360:360	98095	1					
ANR	98177	ExpressionStatement	"qDebug ( ) << ""skipped fake task"""	108:12:3197:3228	98095	0	True				
ANR	98178	ShiftExpression	"qDebug ( ) << ""skipped fake task"""		98095	0		<<			
ANR	98179	CallExpression	qDebug ( )		98095	0					
ANR	98180	Callee	qDebug		98095	0					
ANR	98181	Identifier	qDebug		98095	0					
ANR	98182	ArgumentList			98095	1					
ANR	98183	PrimaryExpression	"""skipped fake task"""		98095	1					
ANR	98184	ContinueStatement	continue ;	109:12:3242:3250	98095	1	True				
ANR	98185	IdentifierDeclStatement	"QString name = m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString ( ) ;"	112:8:3271:3359	98095	1	True				
ANR	98186	IdentifierDecl	"name = m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString ( )"		98095	0					
ANR	98187	IdentifierDeclType	QString		98095	0					
ANR	98188	Identifier	name		98095	1					
ANR	98189	AssignmentExpression	"name = m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString ( )"		98095	2		=			
ANR	98190	Identifier	name		98095	0					
ANR	98191	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString ( )"		98095	1					
ANR	98192	Callee	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString"		98095	0					
ANR	98193	MemberAccess	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString"		98095	0					
ANR	98194	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole )"		98095	0					
ANR	98195	Callee	m_tasksModel -> data		98095	0					
ANR	98196	PtrMemberAccess	m_tasksModel -> data		98095	0					
ANR	98197	Identifier	m_tasksModel		98095	0					
ANR	98198	Identifier	data		98095	1					
ANR	98199	ArgumentList	"m_tasksModel -> index ( i , 0 )"		98095	1					
ANR	98200	Argument	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98201	CallExpression	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98202	Callee	m_tasksModel -> index		98095	0					
ANR	98203	PtrMemberAccess	m_tasksModel -> index		98095	0					
ANR	98204	Identifier	m_tasksModel		98095	0					
ANR	98205	Identifier	index		98095	1					
ANR	98206	ArgumentList	i		98095	1					
ANR	98207	Argument	i		98095	0					
ANR	98208	Identifier	i		98095	0					
ANR	98209	Argument	0		98095	1					
ANR	98210	PrimaryExpression	0		98095	0					
ANR	98211	Argument	Qt :: DisplayRole		98095	1					
ANR	98212	Identifier	Qt :: DisplayRole		98095	0					
ANR	98213	Identifier	toString		98095	1					
ANR	98214	ArgumentList			98095	1					
ANR	98215	IfStatement	if ( name . isEmpty ( ) )		98095	2					
ANR	98216	Condition	name . isEmpty ( )	114:12:3374:3387	98095	0	True				
ANR	98217	CallExpression	name . isEmpty ( )		98095	0					
ANR	98218	Callee	name . isEmpty		98095	0					
ANR	98219	MemberAccess	name . isEmpty		98095	0					
ANR	98220	Identifier	name		98095	0					
ANR	98221	Identifier	isEmpty		98095	1					
ANR	98222	ArgumentList			98095	1					
ANR	98223	CompoundStatement		20:28:567:567	98095	1					
ANR	98224	ContinueStatement	continue ;	115:12:3404:3412	98095	0	True				
ANR	98225	IdentifierDeclStatement	"const QVariantList & idList = m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList ( ) ;"	118:8:3433:3566	98095	3	True				
ANR	98226	IdentifierDecl	"& idList = m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList ( )"		98095	0					
ANR	98227	IdentifierDeclType	const QVariantList &		98095	0					
ANR	98228	Identifier	idList		98095	1					
ANR	98229	AssignmentExpression	"& idList = m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList ( )"		98095	2		=			
ANR	98230	Identifier	idList		98095	0					
ANR	98231	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList ( )"		98095	1					
ANR	98232	Callee	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList"		98095	0					
ANR	98233	MemberAccess	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList"		98095	0					
ANR	98234	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList )"		98095	0					
ANR	98235	Callee	m_tasksModel -> data		98095	0					
ANR	98236	PtrMemberAccess	m_tasksModel -> data		98095	0					
ANR	98237	Identifier	m_tasksModel		98095	0					
ANR	98238	Identifier	data		98095	1					
ANR	98239	ArgumentList	"m_tasksModel -> index ( i , 0 )"		98095	1					
ANR	98240	Argument	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98241	CallExpression	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98242	Callee	m_tasksModel -> index		98095	0					
ANR	98243	PtrMemberAccess	m_tasksModel -> index		98095	0					
ANR	98244	Identifier	m_tasksModel		98095	0					
ANR	98245	Identifier	index		98095	1					
ANR	98246	ArgumentList	i		98095	1					
ANR	98247	Argument	i		98095	0					
ANR	98248	Identifier	i		98095	0					
ANR	98249	Argument	0		98095	1					
ANR	98250	PrimaryExpression	0		98095	0					
ANR	98251	Argument	TaskManager :: AbstractTasksModel :: LegacyWinIdList		98095	1					
ANR	98252	Identifier	TaskManager :: AbstractTasksModel :: LegacyWinIdList		98095	0					
ANR	98253	Identifier	toList		98095	1					
ANR	98254	ArgumentList			98095	1					
ANR	98255	IfStatement	if ( ! idList . count ( ) )		98095	4					
ANR	98256	Condition	! idList . count ( )	120:12:3581:3595	98095	0	True				
ANR	98257	UnaryOperationExpression	! idList . count ( )		98095	0					
ANR	98258	UnaryOperator	!		98095	0					
ANR	98259	CallExpression	idList . count ( )		98095	1					
ANR	98260	Callee	idList . count		98095	0					
ANR	98261	MemberAccess	idList . count		98095	0					
ANR	98262	Identifier	idList		98095	0					
ANR	98263	Identifier	count		98095	1					
ANR	98264	ArgumentList			98095	1					
ANR	98265	CompoundStatement		26:29:775:775	98095	1					
ANR	98266	ContinueStatement	continue ;	121:12:3612:3620	98095	0	True				
ANR	98267	IdentifierDeclStatement	"QAction * action = new QAction ( name , this ) ;"	124:8:3641:3682	98095	5	True				
ANR	98268	IdentifierDecl	"* action = new QAction ( name , this )"		98095	0					
ANR	98269	IdentifierDeclType	QAction *		98095	0					
ANR	98270	Identifier	action		98095	1					
ANR	98271	AssignmentExpression	"* action = new QAction ( name , this )"		98095	2		=			
ANR	98272	Identifier	action		98095	0					
ANR	98273	Expression	"name , this"		98095	1					
ANR	98274	Identifier	name		98095	0					
ANR	98275	Identifier	this		98095	1					
ANR	98276	Statement	action	125:8:3692:3697	98095	6	True				
ANR	98277	Statement	->	125:14:3698:3699	98095	7	True				
ANR	98278	Statement	setIcon	125:16:3700:3706	98095	8	True				
ANR	98279	Statement	(	125:23:3707:3707	98095	9	True				
ANR	98280	Statement	m_tasksModel	125:24:3708:3719	98095	10	True				
ANR	98281	Statement	->	125:36:3720:3721	98095	11	True				
ANR	98282	Statement	data	125:38:3722:3725	98095	12	True				
ANR	98283	Statement	(	125:42:3726:3726	98095	13	True				
ANR	98284	Statement	m_tasksModel	125:43:3727:3738	98095	14	True				
ANR	98285	Statement	->	125:55:3739:3740	98095	15	True				
ANR	98286	Statement	index	125:57:3741:3745	98095	16	True				
ANR	98287	Statement	(	125:62:3746:3746	98095	17	True				
ANR	98288	Statement	i	125:63:3747:3747	98095	18	True				
ANR	98289	Statement	","	125:64:3748:3748	98095	19	True				
ANR	98290	Statement	0	125:66:3750:3750	98095	20	True				
ANR	98291	Statement	)	125:67:3751:3751	98095	21	True				
ANR	98292	Statement	","	125:68:3752:3752	98095	22	True				
ANR	98293	Statement	Qt	125:70:3754:3755	98095	23	True				
ANR	98294	Statement	::	125:72:3756:3757	98095	24	True				
ANR	98295	Statement	DecorationRole	125:74:3758:3771	98095	25	True				
ANR	98296	Statement	)	125:88:3772:3772	98095	26	True				
ANR	98297	Statement	.	125:89:3773:3773	98095	27	True				
ANR	98298	Statement	value	125:90:3774:3778	98095	28	True				
ANR	98299	Statement	<	125:95:3779:3779	98095	29	True				
ANR	98300	Statement	QIcon	125:96:3780:3784	98095	30	True				
ANR	98301	Statement	>	125:101:3785:3785	98095	31	True				
ANR	98302	Statement	(	125:102:3786:3786	98095	32	True				
ANR	98303	Statement	)	125:103:3787:3787	98095	33	True				
ANR	98304	Statement	)	125:104:3788:3788	98095	34	True				
ANR	98305	ExpressionStatement		125:105:3789:3789	98095	35	True				
ANR	98306	ExpressionStatement	action -> setData ( idList . at ( 0 ) )	126:8:3799:3828	98095	36	True				
ANR	98307	CallExpression	action -> setData ( idList . at ( 0 ) )		98095	0					
ANR	98308	Callee	action -> setData		98095	0					
ANR	98309	PtrMemberAccess	action -> setData		98095	0					
ANR	98310	Identifier	action		98095	0					
ANR	98311	Identifier	setData		98095	1					
ANR	98312	ArgumentList	idList . at ( 0 )		98095	1					
ANR	98313	Argument	idList . at ( 0 )		98095	0					
ANR	98314	CallExpression	idList . at ( 0 )		98095	0					
ANR	98315	Callee	idList . at		98095	0					
ANR	98316	MemberAccess	idList . at		98095	0					
ANR	98317	Identifier	idList		98095	0					
ANR	98318	Identifier	at		98095	1					
ANR	98319	ArgumentList	0		98095	1					
ANR	98320	Argument	0		98095	0					
ANR	98321	PrimaryExpression	0		98095	0					
ANR	98322	ExpressionStatement	"desktops . insert ( m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt ( ) , action )"	127:8:3838:3965	98095	37	True				
ANR	98323	CallExpression	"desktops . insert ( m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt ( ) , action )"		98095	0					
ANR	98324	Callee	desktops . insert		98095	0					
ANR	98325	MemberAccess	desktops . insert		98095	0					
ANR	98326	Identifier	desktops		98095	0					
ANR	98327	Identifier	insert		98095	1					
ANR	98328	ArgumentList	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt ( )"		98095	1					
ANR	98329	Argument	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt ( )"		98095	0					
ANR	98330	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt ( )"		98095	0					
ANR	98331	Callee	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt"		98095	0					
ANR	98332	MemberAccess	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt"		98095	0					
ANR	98333	CallExpression	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop )"		98095	0					
ANR	98334	Callee	m_tasksModel -> data		98095	0					
ANR	98335	PtrMemberAccess	m_tasksModel -> data		98095	0					
ANR	98336	Identifier	m_tasksModel		98095	0					
ANR	98337	Identifier	data		98095	1					
ANR	98338	ArgumentList	"m_tasksModel -> index ( i , 0 )"		98095	1					
ANR	98339	Argument	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98340	CallExpression	"m_tasksModel -> index ( i , 0 )"		98095	0					
ANR	98341	Callee	m_tasksModel -> index		98095	0					
ANR	98342	PtrMemberAccess	m_tasksModel -> index		98095	0					
ANR	98343	Identifier	m_tasksModel		98095	0					
ANR	98344	Identifier	index		98095	1					
ANR	98345	ArgumentList	i		98095	1					
ANR	98346	Argument	i		98095	0					
ANR	98347	Identifier	i		98095	0					
ANR	98348	Argument	0		98095	1					
ANR	98349	PrimaryExpression	0		98095	0					
ANR	98350	Argument	TaskManager :: AbstractTasksModel :: VirtualDesktop		98095	1					
ANR	98351	Identifier	TaskManager :: AbstractTasksModel :: VirtualDesktop		98095	0					
ANR	98352	Identifier	toInt		98095	1					
ANR	98353	ArgumentList			98095	1					
ANR	98354	Argument	action		98095	1					
ANR	98355	Identifier	action		98095	0					
ANR	98356	Statement	connect	128:8:3975:3981	98095	38	True				
ANR	98357	Statement	(	128:15:3982:3982	98095	39	True				
ANR	98358	Statement	action	128:16:3983:3988	98095	40	True				
ANR	98359	Statement	","	128:22:3989:3989	98095	41	True				
ANR	98360	Statement	&	128:24:3991:3991	98095	42	True				
ANR	98361	Statement	QAction	128:25:3992:3998	98095	43	True				
ANR	98362	Statement	::	128:32:3999:4000	98095	44	True				
ANR	98363	Statement	triggered	128:34:4001:4009	98095	45	True				
ANR	98364	Statement	","	128:43:4010:4010	98095	46	True				
ANR	98365	Statement	[	128:45:4012:4012	98095	47	True				
ANR	98366	Statement	=	128:46:4013:4013	98095	48	True				
ANR	98367	Statement	]	128:47:4014:4014	98095	49	True				
ANR	98368	Statement	(	128:48:4015:4015	98095	50	True				
ANR	98369	Statement	)	128:49:4016:4016	98095	51	True				
ANR	98370	CompoundStatement		34:51:1195:1195	98095	52					
ANR	98371	ExpressionStatement	switchTo ( action )	129:12:4032:4048	98095	0	True				
ANR	98372	CallExpression	switchTo ( action )		98095	0					
ANR	98373	Callee	switchTo		98095	0					
ANR	98374	Identifier	switchTo		98095	0					
ANR	98375	ArgumentList	action		98095	1					
ANR	98376	Argument	action		98095	0					
ANR	98377	Identifier	action		98095	0					
ANR	98378	Statement	)	130:9:4059:4059	98095	53	True				
ANR	98379	ExpressionStatement		130:10:4060:4060	98095	54	True				
ANR	98380	IfStatement	if ( m_mode == CurrentDesktop )		98095	5					
ANR	98381	Condition	m_mode == CurrentDesktop	134:8:4098:4121	98095	0	True				
ANR	98382	EqualityExpression	m_mode == CurrentDesktop		98095	0		==			
ANR	98383	Identifier	m_mode		98095	0					
ANR	98384	Identifier	CurrentDesktop		98095	1					
ANR	98385	CompoundStatement		43:8:1374:1464	98095	1					
ANR	98386	IdentifierDeclStatement	int currentDesktop = KWindowSystem :: currentDesktop ( ) ;	135:8:4134:4186	98095	0	True				
ANR	98387	IdentifierDecl	currentDesktop = KWindowSystem :: currentDesktop ( )		98095	0					
ANR	98388	IdentifierDeclType	int		98095	0					
ANR	98389	Identifier	currentDesktop		98095	1					
ANR	98390	AssignmentExpression	currentDesktop = KWindowSystem :: currentDesktop ( )		98095	2		=			
ANR	98391	Identifier	currentDesktop		98095	0					
ANR	98392	CallExpression	KWindowSystem :: currentDesktop ( )		98095	1					
ANR	98393	Callee	KWindowSystem :: currentDesktop		98095	0					
ANR	98394	Identifier	KWindowSystem :: currentDesktop		98095	0					
ANR	98395	ArgumentList			98095	1					
ANR	98396	IdentifierDeclStatement	"QAction * a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""Windows"" ) , this ) ;"	137:8:4197:4287	98095	1	True				
ANR	98397	IdentifierDecl	"* a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""Windows"" ) , this )"		98095	0					
ANR	98398	IdentifierDeclType	QAction *		98095	0					
ANR	98399	Identifier	a		98095	1					
ANR	98400	AssignmentExpression	"* a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""Windows"" ) , this )"		98095	2		=			
ANR	98401	Identifier	a		98095	0					
ANR	98402	Expression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""Windows"" ) , this"		98095	1					
ANR	98403	CallExpression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""Windows"" )"		98095	0					
ANR	98404	Callee	i18nc		98095	0					
ANR	98405	Identifier	i18nc		98095	0					
ANR	98406	ArgumentList	"""plasma_containmentactions_switchwindow"""		98095	1					
ANR	98407	Argument	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98408	PrimaryExpression	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98409	Argument	"""Windows"""		98095	1					
ANR	98410	PrimaryExpression	"""Windows"""		98095	0					
ANR	98411	Identifier	this		98095	1					
ANR	98412	ExpressionStatement	a -> setSeparator ( true )	138:8:4297:4318	98095	2	True				
ANR	98413	CallExpression	a -> setSeparator ( true )		98095	0					
ANR	98414	Callee	a -> setSeparator		98095	0					
ANR	98415	PtrMemberAccess	a -> setSeparator		98095	0					
ANR	98416	Identifier	a		98095	0					
ANR	98417	Identifier	setSeparator		98095	1					
ANR	98418	ArgumentList	true		98095	1					
ANR	98419	Argument	true		98095	0					
ANR	98420	Identifier	true		98095	0					
ANR	98421	ExpressionStatement	m_actions << a	139:8:4328:4342	98095	3	True				
ANR	98422	ShiftExpression	m_actions << a		98095	0		<<			
ANR	98423	Identifier	m_actions		98095	0					
ANR	98424	Identifier	a		98095	1					
ANR	98425	ExpressionStatement	m_actions << desktops . values ( currentDesktop )	140:8:4352:4396	98095	4	True				
ANR	98426	ShiftExpression	m_actions << desktops . values ( currentDesktop )		98095	0		<<			
ANR	98427	Identifier	m_actions		98095	0					
ANR	98428	CallExpression	desktops . values ( currentDesktop )		98095	1					
ANR	98429	Callee	desktops . values		98095	0					
ANR	98430	MemberAccess	desktops . values		98095	0					
ANR	98431	Identifier	desktops		98095	0					
ANR	98432	Identifier	values		98095	1					
ANR	98433	ArgumentList	currentDesktop		98095	1					
ANR	98434	Argument	currentDesktop		98095	0					
ANR	98435	Identifier	currentDesktop		98095	0					
ANR	98436	ExpressionStatement	m_actions << desktops . values ( - 1 )	141:8:4406:4438	98095	5	True				
ANR	98437	ShiftExpression	m_actions << desktops . values ( - 1 )		98095	0		<<			
ANR	98438	Identifier	m_actions		98095	0					
ANR	98439	CallExpression	desktops . values ( - 1 )		98095	1					
ANR	98440	Callee	desktops . values		98095	0					
ANR	98441	MemberAccess	desktops . values		98095	0					
ANR	98442	Identifier	desktops		98095	0					
ANR	98443	Identifier	values		98095	1					
ANR	98444	ArgumentList	- 1		98095	1					
ANR	98445	Argument	- 1		98095	0					
ANR	98446	UnaryOperationExpression	- 1		98095	0					
ANR	98447	UnaryOperator	-		98095	0					
ANR	98448	PrimaryExpression	1		98095	1					
ANR	98449	ElseStatement	else		98095	0					
ANR	98450	CompoundStatement		50:8:1639:1690	98095	0					
ANR	98451	IdentifierDeclStatement	int numDesktops = KWindowSystem :: numberOfDesktops ( ) ;	144:8:4462:4513	98095	0	True				
ANR	98452	IdentifierDecl	numDesktops = KWindowSystem :: numberOfDesktops ( )		98095	0					
ANR	98453	IdentifierDeclType	int		98095	0					
ANR	98454	Identifier	numDesktops		98095	1					
ANR	98455	AssignmentExpression	numDesktops = KWindowSystem :: numberOfDesktops ( )		98095	2		=			
ANR	98456	Identifier	numDesktops		98095	0					
ANR	98457	CallExpression	KWindowSystem :: numberOfDesktops ( )		98095	1					
ANR	98458	Callee	KWindowSystem :: numberOfDesktops		98095	0					
ANR	98459	Identifier	KWindowSystem :: numberOfDesktops		98095	0					
ANR	98460	ArgumentList			98095	1					
ANR	98461	IfStatement	if ( m_mode == AllFlat )		98095	1					
ANR	98462	Condition	m_mode == AllFlat	145:12:4527:4543	98095	0	True				
ANR	98463	EqualityExpression	m_mode == AllFlat		98095	0		==			
ANR	98464	Identifier	m_mode		98095	0					
ANR	98465	Identifier	AllFlat		98095	1					
ANR	98466	CompoundStatement		51:31:1723:1723	98095	1					
ANR	98467	ForStatement	for ( int i = 1 ; i <= numDesktops ; ++ i )		98095	0					
ANR	98468	ForInit	int i = 1 ;	146:17:4565:4574	98095	0	True				
ANR	98469	IdentifierDeclStatement	int i = 1 ;		98095	0					
ANR	98470	IdentifierDecl	i = 1		98095	0					
ANR	98471	IdentifierDeclType	int		98095	0					
ANR	98472	Identifier	i		98095	1					
ANR	98473	AssignmentExpression	i = 1		98095	2		=			
ANR	98474	Identifier	i		98095	0					
ANR	98475	PrimaryExpression	1		98095	1					
ANR	98476	Condition	i <= numDesktops	146:28:4576:4591	98095	1	True				
ANR	98477	RelationalExpression	i <= numDesktops		98095	0		<=			
ANR	98478	Identifier	i		98095	0					
ANR	98479	Identifier	numDesktops		98095	1					
ANR	98480	UnaryExpression	++ i	146:46:4594:4596	98095	2	True				
ANR	98481	IncDec	++		98095	0					
ANR	98482	Identifier	i		98095	1					
ANR	98483	CompoundStatement		52:51:1776:1776	98095	3					
ANR	98484	IfStatement	if ( desktops . contains ( i ) )		98095	0					
ANR	98485	Condition	desktops . contains ( i )	147:20:4621:4640	98095	0	True				
ANR	98486	CallExpression	desktops . contains ( i )		98095	0					
ANR	98487	Callee	desktops . contains		98095	0					
ANR	98488	MemberAccess	desktops . contains		98095	0					
ANR	98489	Identifier	desktops		98095	0					
ANR	98490	Identifier	contains		98095	1					
ANR	98491	ArgumentList	i		98095	1					
ANR	98492	Argument	i		98095	0					
ANR	98493	Identifier	i		98095	0					
ANR	98494	CompoundStatement		56:20:1978:2014	98095	1					
ANR	98495	IdentifierDeclStatement	QString name = KWindowSystem :: desktopName ( i ) ;	148:20:4665:4709	98095	0	True				
ANR	98496	IdentifierDecl	name = KWindowSystem :: desktopName ( i )		98095	0					
ANR	98497	IdentifierDeclType	QString		98095	0					
ANR	98498	Identifier	name		98095	1					
ANR	98499	AssignmentExpression	name = KWindowSystem :: desktopName ( i )		98095	2		=			
ANR	98500	Identifier	name		98095	0					
ANR	98501	CallExpression	KWindowSystem :: desktopName ( i )		98095	1					
ANR	98502	Callee	KWindowSystem :: desktopName		98095	0					
ANR	98503	Identifier	KWindowSystem :: desktopName		98095	0					
ANR	98504	ArgumentList	i		98095	1					
ANR	98505	Argument	i		98095	0					
ANR	98506	Identifier	i		98095	0					
ANR	98507	ExpressionStatement	"name = QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg ( name )"	149:20:4731:4779	98095	1	True				
ANR	98508	AssignmentExpression	"name = QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg ( name )"		98095	0		=			
ANR	98509	Identifier	name		98095	0					
ANR	98510	CallExpression	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg ( name )"		98095	1					
ANR	98511	Callee	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg"		98095	0					
ANR	98512	MemberAccess	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg"		98095	0					
ANR	98513	CallExpression	"QStringLiteral ( ""%1: %2"" ) . arg ( i )"		98095	0					
ANR	98514	Callee	"QStringLiteral ( ""%1: %2"" ) . arg"		98095	0					
ANR	98515	MemberAccess	"QStringLiteral ( ""%1: %2"" ) . arg"		98095	0					
ANR	98516	CallExpression	"QStringLiteral ( ""%1: %2"" )"		98095	0					
ANR	98517	Callee	QStringLiteral		98095	0					
ANR	98518	Identifier	QStringLiteral		98095	0					
ANR	98519	ArgumentList	"""%1: %2"""		98095	1					
ANR	98520	Argument	"""%1: %2"""		98095	0					
ANR	98521	PrimaryExpression	"""%1: %2"""		98095	0					
ANR	98522	Identifier	arg		98095	1					
ANR	98523	ArgumentList	i		98095	1					
ANR	98524	Argument	i		98095	0					
ANR	98525	Identifier	i		98095	0					
ANR	98526	Identifier	arg		98095	1					
ANR	98527	ArgumentList	name		98095	1					
ANR	98528	Argument	name		98095	0					
ANR	98529	Identifier	name		98095	0					
ANR	98530	IdentifierDeclStatement	"QAction * a = new QAction ( name , this ) ;"	150:20:4801:4837	98095	2	True				
ANR	98531	IdentifierDecl	"* a = new QAction ( name , this )"		98095	0					
ANR	98532	IdentifierDeclType	QAction *		98095	0					
ANR	98533	Identifier	a		98095	1					
ANR	98534	AssignmentExpression	"* a = new QAction ( name , this )"		98095	2		=			
ANR	98535	Identifier	a		98095	0					
ANR	98536	Expression	"name , this"		98095	1					
ANR	98537	Identifier	name		98095	0					
ANR	98538	Identifier	this		98095	1					
ANR	98539	ExpressionStatement	a -> setSeparator ( true )	151:20:4859:4880	98095	3	True				
ANR	98540	CallExpression	a -> setSeparator ( true )		98095	0					
ANR	98541	Callee	a -> setSeparator		98095	0					
ANR	98542	PtrMemberAccess	a -> setSeparator		98095	0					
ANR	98543	Identifier	a		98095	0					
ANR	98544	Identifier	setSeparator		98095	1					
ANR	98545	ArgumentList	true		98095	1					
ANR	98546	Argument	true		98095	0					
ANR	98547	Identifier	true		98095	0					
ANR	98548	ExpressionStatement	m_actions << a	152:20:4902:4916	98095	4	True				
ANR	98549	ShiftExpression	m_actions << a		98095	0		<<			
ANR	98550	Identifier	m_actions		98095	0					
ANR	98551	Identifier	a		98095	1					
ANR	98552	ExpressionStatement	m_actions << desktops . values ( i )	153:20:4938:4969	98095	5	True				
ANR	98553	ShiftExpression	m_actions << desktops . values ( i )		98095	0		<<			
ANR	98554	Identifier	m_actions		98095	0					
ANR	98555	CallExpression	desktops . values ( i )		98095	1					
ANR	98556	Callee	desktops . values		98095	0					
ANR	98557	MemberAccess	desktops . values		98095	0					
ANR	98558	Identifier	desktops		98095	0					
ANR	98559	Identifier	values		98095	1					
ANR	98560	ArgumentList	i		98095	1					
ANR	98561	Argument	i		98095	0					
ANR	98562	Identifier	i		98095	0					
ANR	98563	IfStatement	if ( desktops . contains ( - 1 ) )		98095	1					
ANR	98564	Condition	desktops . contains ( - 1 )	156:16:5019:5039	98095	0	True				
ANR	98565	CallExpression	desktops . contains ( - 1 )		98095	0					
ANR	98566	Callee	desktops . contains		98095	0					
ANR	98567	MemberAccess	desktops . contains		98095	0					
ANR	98568	Identifier	desktops		98095	0					
ANR	98569	Identifier	contains		98095	1					
ANR	98570	ArgumentList	- 1		98095	1					
ANR	98571	Argument	- 1		98095	0					
ANR	98572	UnaryOperationExpression	- 1		98095	0					
ANR	98573	UnaryOperator	-		98095	0					
ANR	98574	PrimaryExpression	1		98095	1					
ANR	98575	CompoundStatement		63:16:2237:2332	98095	1					
ANR	98576	IdentifierDeclStatement	"QAction * a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this ) ;"	157:16:5060:5155	98095	0	True				
ANR	98577	IdentifierDecl	"* a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this )"		98095	0					
ANR	98578	IdentifierDeclType	QAction *		98095	0					
ANR	98579	Identifier	a		98095	1					
ANR	98580	AssignmentExpression	"* a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this )"		98095	2		=			
ANR	98581	Identifier	a		98095	0					
ANR	98582	Expression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this"		98095	1					
ANR	98583	CallExpression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" )"		98095	0					
ANR	98584	Callee	i18nc		98095	0					
ANR	98585	Identifier	i18nc		98095	0					
ANR	98586	ArgumentList	"""plasma_containmentactions_switchwindow"""		98095	1					
ANR	98587	Argument	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98588	PrimaryExpression	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98589	Argument	"""All Desktops"""		98095	1					
ANR	98590	PrimaryExpression	"""All Desktops"""		98095	0					
ANR	98591	Identifier	this		98095	1					
ANR	98592	ExpressionStatement	a -> setSeparator ( true )	158:16:5173:5194	98095	1	True				
ANR	98593	CallExpression	a -> setSeparator ( true )		98095	0					
ANR	98594	Callee	a -> setSeparator		98095	0					
ANR	98595	PtrMemberAccess	a -> setSeparator		98095	0					
ANR	98596	Identifier	a		98095	0					
ANR	98597	Identifier	setSeparator		98095	1					
ANR	98598	ArgumentList	true		98095	1					
ANR	98599	Argument	true		98095	0					
ANR	98600	Identifier	true		98095	0					
ANR	98601	ExpressionStatement	m_actions << a	159:16:5212:5226	98095	2	True				
ANR	98602	ShiftExpression	m_actions << a		98095	0		<<			
ANR	98603	Identifier	m_actions		98095	0					
ANR	98604	Identifier	a		98095	1					
ANR	98605	ExpressionStatement	m_actions << desktops . values ( - 1 )	160:16:5244:5276	98095	3	True				
ANR	98606	ShiftExpression	m_actions << desktops . values ( - 1 )		98095	0		<<			
ANR	98607	Identifier	m_actions		98095	0					
ANR	98608	CallExpression	desktops . values ( - 1 )		98095	1					
ANR	98609	Callee	desktops . values		98095	0					
ANR	98610	MemberAccess	desktops . values		98095	0					
ANR	98611	Identifier	desktops		98095	0					
ANR	98612	Identifier	values		98095	1					
ANR	98613	ArgumentList	- 1		98095	1					
ANR	98614	Argument	- 1		98095	0					
ANR	98615	UnaryOperationExpression	- 1		98095	0					
ANR	98616	UnaryOperator	-		98095	0					
ANR	98617	PrimaryExpression	1		98095	1					
ANR	98618	ElseStatement	else		98095	0					
ANR	98619	CompoundStatement		69:15:2485:2485	98095	0					
ANR	98620	ForStatement	for ( int i = 1 ; i <= numDesktops ; ++ i )		98095	0					
ANR	98621	ForInit	int i = 1 ;	164:17:5338:5347	98095	0	True				
ANR	98622	IdentifierDeclStatement	int i = 1 ;		98095	0					
ANR	98623	IdentifierDecl	i = 1		98095	0					
ANR	98624	IdentifierDeclType	int		98095	0					
ANR	98625	Identifier	i		98095	1					
ANR	98626	AssignmentExpression	i = 1		98095	2		=			
ANR	98627	Identifier	i		98095	0					
ANR	98628	PrimaryExpression	1		98095	1					
ANR	98629	Condition	i <= numDesktops	164:28:5349:5364	98095	1	True				
ANR	98630	RelationalExpression	i <= numDesktops		98095	0		<=			
ANR	98631	Identifier	i		98095	0					
ANR	98632	Identifier	numDesktops		98095	1					
ANR	98633	UnaryExpression	++ i	164:46:5367:5369	98095	2	True				
ANR	98634	IncDec	++		98095	0					
ANR	98635	Identifier	i		98095	1					
ANR	98636	CompoundStatement		70:51:2549:2549	98095	3					
ANR	98637	IfStatement	if ( desktops . contains ( i ) )		98095	0					
ANR	98638	Condition	desktops . contains ( i )	165:20:5394:5413	98095	0	True				
ANR	98639	CallExpression	desktops . contains ( i )		98095	0					
ANR	98640	Callee	desktops . contains		98095	0					
ANR	98641	MemberAccess	desktops . contains		98095	0					
ANR	98642	Identifier	desktops		98095	0					
ANR	98643	Identifier	contains		98095	1					
ANR	98644	ArgumentList	i		98095	1					
ANR	98645	Argument	i		98095	0					
ANR	98646	Identifier	i		98095	0					
ANR	98647	CompoundStatement		77:20:2867:2903	98095	1					
ANR	98648	IdentifierDeclStatement	QString name = KWindowSystem :: desktopName ( i ) ;	166:20:5438:5482	98095	0	True				
ANR	98649	IdentifierDecl	name = KWindowSystem :: desktopName ( i )		98095	0					
ANR	98650	IdentifierDeclType	QString		98095	0					
ANR	98651	Identifier	name		98095	1					
ANR	98652	AssignmentExpression	name = KWindowSystem :: desktopName ( i )		98095	2		=			
ANR	98653	Identifier	name		98095	0					
ANR	98654	CallExpression	KWindowSystem :: desktopName ( i )		98095	1					
ANR	98655	Callee	KWindowSystem :: desktopName		98095	0					
ANR	98656	Identifier	KWindowSystem :: desktopName		98095	0					
ANR	98657	ArgumentList	i		98095	1					
ANR	98658	Argument	i		98095	0					
ANR	98659	Identifier	i		98095	0					
ANR	98660	ExpressionStatement	"name = QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg ( name )"	167:20:5504:5552	98095	1	True				
ANR	98661	AssignmentExpression	"name = QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg ( name )"		98095	0		=			
ANR	98662	Identifier	name		98095	0					
ANR	98663	CallExpression	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg ( name )"		98095	1					
ANR	98664	Callee	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg"		98095	0					
ANR	98665	MemberAccess	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg"		98095	0					
ANR	98666	CallExpression	"QStringLiteral ( ""%1: %2"" ) . arg ( i )"		98095	0					
ANR	98667	Callee	"QStringLiteral ( ""%1: %2"" ) . arg"		98095	0					
ANR	98668	MemberAccess	"QStringLiteral ( ""%1: %2"" ) . arg"		98095	0					
ANR	98669	CallExpression	"QStringLiteral ( ""%1: %2"" )"		98095	0					
ANR	98670	Callee	QStringLiteral		98095	0					
ANR	98671	Identifier	QStringLiteral		98095	0					
ANR	98672	ArgumentList	"""%1: %2"""		98095	1					
ANR	98673	Argument	"""%1: %2"""		98095	0					
ANR	98674	PrimaryExpression	"""%1: %2"""		98095	0					
ANR	98675	Identifier	arg		98095	1					
ANR	98676	ArgumentList	i		98095	1					
ANR	98677	Argument	i		98095	0					
ANR	98678	Identifier	i		98095	0					
ANR	98679	Identifier	arg		98095	1					
ANR	98680	ArgumentList	name		98095	1					
ANR	98681	Argument	name		98095	0					
ANR	98682	Identifier	name		98095	0					
ANR	98683	IdentifierDeclStatement	QMenu * subMenu = new QMenu ( name ) ;	168:20:5574:5606	98095	2	True				
ANR	98684	IdentifierDecl	* subMenu = new QMenu ( name )		98095	0					
ANR	98685	IdentifierDeclType	QMenu *		98095	0					
ANR	98686	Identifier	subMenu		98095	1					
ANR	98687	AssignmentExpression	* subMenu = new QMenu ( name )		98095	2		=			
ANR	98688	Identifier	name		98095	0					
ANR	98689	Identifier	name		98095	1					
ANR	98690	ExpressionStatement	subMenu -> addActions ( desktops . values ( i ) )	169:20:5628:5667	98095	3	True				
ANR	98691	CallExpression	subMenu -> addActions ( desktops . values ( i ) )		98095	0					
ANR	98692	Callee	subMenu -> addActions		98095	0					
ANR	98693	PtrMemberAccess	subMenu -> addActions		98095	0					
ANR	98694	Identifier	subMenu		98095	0					
ANR	98695	Identifier	addActions		98095	1					
ANR	98696	ArgumentList	desktops . values ( i )		98095	1					
ANR	98697	Argument	desktops . values ( i )		98095	0					
ANR	98698	CallExpression	desktops . values ( i )		98095	0					
ANR	98699	Callee	desktops . values		98095	0					
ANR	98700	MemberAccess	desktops . values		98095	0					
ANR	98701	Identifier	desktops		98095	0					
ANR	98702	Identifier	values		98095	1					
ANR	98703	ArgumentList	i		98095	1					
ANR	98704	Argument	i		98095	0					
ANR	98705	Identifier	i		98095	0					
ANR	98706	IdentifierDeclStatement	"QAction * a = new QAction ( name , this ) ;"	171:20:5690:5726	98095	4	True				
ANR	98707	IdentifierDecl	"* a = new QAction ( name , this )"		98095	0					
ANR	98708	IdentifierDeclType	QAction *		98095	0					
ANR	98709	Identifier	a		98095	1					
ANR	98710	AssignmentExpression	"* a = new QAction ( name , this )"		98095	2		=			
ANR	98711	Identifier	a		98095	0					
ANR	98712	Expression	"name , this"		98095	1					
ANR	98713	Identifier	name		98095	0					
ANR	98714	Identifier	this		98095	1					
ANR	98715	ExpressionStatement	a -> setMenu ( subMenu )	172:20:5748:5767	98095	5	True				
ANR	98716	CallExpression	a -> setMenu ( subMenu )		98095	0					
ANR	98717	Callee	a -> setMenu		98095	0					
ANR	98718	PtrMemberAccess	a -> setMenu		98095	0					
ANR	98719	Identifier	a		98095	0					
ANR	98720	Identifier	setMenu		98095	1					
ANR	98721	ArgumentList	subMenu		98095	1					
ANR	98722	Argument	subMenu		98095	0					
ANR	98723	Identifier	subMenu		98095	0					
ANR	98724	ExpressionStatement	m_actions << a	173:20:5789:5803	98095	6	True				
ANR	98725	ShiftExpression	m_actions << a		98095	0		<<			
ANR	98726	Identifier	m_actions		98095	0					
ANR	98727	Identifier	a		98095	1					
ANR	98728	IfStatement	if ( desktops . contains ( - 1 ) )		98095	1					
ANR	98729	Condition	desktops . contains ( - 1 )	176:16:5853:5873	98095	0	True				
ANR	98730	CallExpression	desktops . contains ( - 1 )		98095	0					
ANR	98731	Callee	desktops . contains		98095	0					
ANR	98732	MemberAccess	desktops . contains		98095	0					
ANR	98733	Identifier	desktops		98095	0					
ANR	98734	Identifier	contains		98095	1					
ANR	98735	ArgumentList	- 1		98095	1					
ANR	98736	Argument	- 1		98095	0					
ANR	98737	UnaryOperationExpression	- 1		98095	0					
ANR	98738	UnaryOperator	-		98095	0					
ANR	98739	PrimaryExpression	1		98095	1					
ANR	98740	CompoundStatement		85:16:3238:3333	98095	1					
ANR	98741	IdentifierDeclStatement	"QMenu * subMenu = new QMenu ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) ) ;"	177:16:5894:5985	98095	0	True				
ANR	98742	IdentifierDecl	"* subMenu = new QMenu ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) )"		98095	0					
ANR	98743	IdentifierDeclType	QMenu *		98095	0					
ANR	98744	Identifier	subMenu		98095	1					
ANR	98745	AssignmentExpression	"* subMenu = new QMenu ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) )"		98095	2		=			
ANR	98746	Identifier	subMenu		98095	0					
ANR	98747	CallExpression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" )"		98095	1					
ANR	98748	Callee	i18nc		98095	0					
ANR	98749	Identifier	i18nc		98095	0					
ANR	98750	ArgumentList	"""plasma_containmentactions_switchwindow"""		98095	1					
ANR	98751	Argument	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98752	PrimaryExpression	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98753	Argument	"""All Desktops"""		98095	1					
ANR	98754	PrimaryExpression	"""All Desktops"""		98095	0					
ANR	98755	ExpressionStatement	subMenu -> addActions ( desktops . values ( - 1 ) )	178:16:6003:6043	98095	1	True				
ANR	98756	CallExpression	subMenu -> addActions ( desktops . values ( - 1 ) )		98095	0					
ANR	98757	Callee	subMenu -> addActions		98095	0					
ANR	98758	PtrMemberAccess	subMenu -> addActions		98095	0					
ANR	98759	Identifier	subMenu		98095	0					
ANR	98760	Identifier	addActions		98095	1					
ANR	98761	ArgumentList	desktops . values ( - 1 )		98095	1					
ANR	98762	Argument	desktops . values ( - 1 )		98095	0					
ANR	98763	CallExpression	desktops . values ( - 1 )		98095	0					
ANR	98764	Callee	desktops . values		98095	0					
ANR	98765	MemberAccess	desktops . values		98095	0					
ANR	98766	Identifier	desktops		98095	0					
ANR	98767	Identifier	values		98095	1					
ANR	98768	ArgumentList	- 1		98095	1					
ANR	98769	Argument	- 1		98095	0					
ANR	98770	UnaryOperationExpression	- 1		98095	0					
ANR	98771	UnaryOperator	-		98095	0					
ANR	98772	PrimaryExpression	1		98095	1					
ANR	98773	IdentifierDeclStatement	"QAction * a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this ) ;"	179:16:6061:6156	98095	2	True				
ANR	98774	IdentifierDecl	"* a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this )"		98095	0					
ANR	98775	IdentifierDeclType	QAction *		98095	0					
ANR	98776	Identifier	a		98095	1					
ANR	98777	AssignmentExpression	"* a = new QAction ( i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this )"		98095	2		=			
ANR	98778	Identifier	a		98095	0					
ANR	98779	Expression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" ) , this"		98095	1					
ANR	98780	CallExpression	"i18nc ( ""plasma_containmentactions_switchwindow"" , ""All Desktops"" )"		98095	0					
ANR	98781	Callee	i18nc		98095	0					
ANR	98782	Identifier	i18nc		98095	0					
ANR	98783	ArgumentList	"""plasma_containmentactions_switchwindow"""		98095	1					
ANR	98784	Argument	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98785	PrimaryExpression	"""plasma_containmentactions_switchwindow"""		98095	0					
ANR	98786	Argument	"""All Desktops"""		98095	1					
ANR	98787	PrimaryExpression	"""All Desktops"""		98095	0					
ANR	98788	Identifier	this		98095	1					
ANR	98789	ExpressionStatement	a -> setMenu ( subMenu )	180:16:6174:6193	98095	3	True				
ANR	98790	CallExpression	a -> setMenu ( subMenu )		98095	0					
ANR	98791	Callee	a -> setMenu		98095	0					
ANR	98792	PtrMemberAccess	a -> setMenu		98095	0					
ANR	98793	Identifier	a		98095	0					
ANR	98794	Identifier	setMenu		98095	1					
ANR	98795	ArgumentList	subMenu		98095	1					
ANR	98796	Argument	subMenu		98095	0					
ANR	98797	Identifier	subMenu		98095	0					
ANR	98798	ExpressionStatement	m_actions << a	181:16:6211:6225	98095	4	True				
ANR	98799	ShiftExpression	m_actions << a		98095	0		<<			
ANR	98800	Identifier	m_actions		98095	0					
ANR	98801	Identifier	a		98095	1					
ANR	98802	ReturnType	void		98095	1					
ANR	98803	Identifier	SwitchWindow :: makeMenu		98095	2					
ANR	98804	ParameterList			98095	3					
ANR	98805	CFGEntryNode	ENTRY		98095		True				
ANR	98806	CFGExitNode	EXIT		98095		True				
ANR	98807	Symbol	KWindowSystem :: currentDesktop		98095						
ANR	98808	Symbol	* m_tasksModel		98095						
ANR	98809	Symbol	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: IsStartup ) . toBool"		98095						
ANR	98810	Symbol	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , Qt :: DisplayRole ) . toString"		98095						
ANR	98811	Symbol	KWindowSystem :: numberOfDesktops		98095						
ANR	98812	Symbol	numDesktops		98095						
ANR	98813	Symbol	AllFlat		98095						
ANR	98814	Symbol	m_tasksModel		98095						
ANR	98815	Symbol	m_tasksModel -> index		98095						
ANR	98816	Symbol	KWindowSystem :: desktopName		98095						
ANR	98817	Symbol	idList		98095						
ANR	98818	Symbol	"QStringLiteral ( ""%1: %2"" ) . arg"		98095						
ANR	98819	Symbol	TaskManager :: AbstractTasksModel :: LegacyWinIdList		98095						
ANR	98820	Symbol	CurrentDesktop		98095						
ANR	98821	Symbol	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: VirtualDesktop ) . toInt"		98095						
ANR	98822	Symbol	m_tasksModel -> data		98095						
ANR	98823	Symbol	Qt :: DisplayRole		98095						
ANR	98824	Symbol	m_actions		98095						
ANR	98825	Symbol	action		98095						
ANR	98826	Symbol	m_mode		98095						
ANR	98827	Symbol	i18nc		98095						
ANR	98828	Symbol	idList . count		98095						
ANR	98829	Symbol	a		98095						
ANR	98830	Symbol	m_tasksModel -> rowCount		98095						
ANR	98831	Symbol	subMenu		98095						
ANR	98832	Symbol	TaskManager :: AbstractTasksModel :: IsStartup		98095						
ANR	98833	Symbol	name . isEmpty		98095						
ANR	98834	Symbol	desktops . contains		98095						
ANR	98835	Symbol	this		98095						
ANR	98836	Symbol	i		98095						
ANR	98837	Symbol	TaskManager :: AbstractTasksModel :: VirtualDesktop		98095						
ANR	98838	Symbol	"QStringLiteral ( ""%1: %2"" ) . arg ( i ) . arg"		98095						
ANR	98839	Symbol	idList . at		98095						
ANR	98840	Symbol	currentDesktop		98095						
ANR	98841	Symbol	desktops . values		98095						
ANR	98842	Symbol	"m_tasksModel -> data ( m_tasksModel -> index ( i , 0 ) , TaskManager :: AbstractTasksModel :: LegacyWinIdList ) . toList"		98095						
ANR	98843	Symbol	desktops		98095						
ANR	98844	Symbol	name		98095						
ANR	98845	Symbol	true		98095						
ANR	98846	Symbol	QStringLiteral		98095						
ANR	98847	Function	SwitchWindow :: contextualActions	187:0:6260:6350							
ANR	98848	FunctionDef	SwitchWindow :: contextualActions ()		98847	0					
ANR	98849	CompoundStatement		188:0:6310:6350	98847	0					
ANR	98850	ExpressionStatement	makeMenu ( )	189:4:6316:6326	98847	0	True				
ANR	98851	CallExpression	makeMenu ( )		98847	0					
ANR	98852	Callee	makeMenu		98847	0					
ANR	98853	Identifier	makeMenu		98847	0					
ANR	98854	ArgumentList			98847	1					
ANR	98855	ReturnStatement	return m_actions ;	190:4:6332:6348	98847	1	True				
ANR	98856	Identifier	m_actions		98847	0					
ANR	98857	ReturnType	QList < QAction * >		98847	1					
ANR	98858	Identifier	SwitchWindow :: contextualActions		98847	2					
ANR	98859	ParameterList			98847	3					
ANR	98860	CFGEntryNode	ENTRY		98847		True				
ANR	98861	CFGExitNode	EXIT		98847		True				
ANR	98862	Symbol	m_actions		98847						
ANR	98863	Function	SwitchWindow :: switchTo	193:0:6353:6480							
ANR	98864	FunctionDef	SwitchWindow :: switchTo (QAction * action)		98863	0					
ANR	98865	CompoundStatement		194:0:6398:6480	98863	0					
ANR	98866	IdentifierDeclStatement	int id = action -> data ( ) . toInt ( ) ;	195:4:6404:6435	98863	0	True				
ANR	98867	IdentifierDecl	id = action -> data ( ) . toInt ( )		98863	0					
ANR	98868	IdentifierDeclType	int		98863	0					
ANR	98869	Identifier	id		98863	1					
ANR	98870	AssignmentExpression	id = action -> data ( ) . toInt ( )		98863	2		=			
ANR	98871	Identifier	id		98863	0					
ANR	98872	CallExpression	action -> data ( ) . toInt ( )		98863	1					
ANR	98873	Callee	action -> data ( ) . toInt		98863	0					
ANR	98874	MemberAccess	action -> data ( ) . toInt		98863	0					
ANR	98875	CallExpression	action -> data ( )		98863	0					
ANR	98876	Callee	action -> data		98863	0					
ANR	98877	PtrMemberAccess	action -> data		98863	0					
ANR	98878	Identifier	action		98863	0					
ANR	98879	Identifier	data		98863	1					
ANR	98880	ArgumentList			98863	1					
ANR	98881	Identifier	toInt		98863	1					
ANR	98882	ArgumentList			98863	1					
ANR	98883	ExpressionStatement	KWindowSystem :: forceActiveWindow ( id )	197:4:6442:6478	98863	1	True				
ANR	98884	CallExpression	KWindowSystem :: forceActiveWindow ( id )		98863	0					
ANR	98885	Callee	KWindowSystem :: forceActiveWindow		98863	0					
ANR	98886	Identifier	KWindowSystem :: forceActiveWindow		98863	0					
ANR	98887	ArgumentList	id		98863	1					
ANR	98888	Argument	id		98863	0					
ANR	98889	Identifier	id		98863	0					
ANR	98890	ReturnType	void		98863	1					
ANR	98891	Identifier	SwitchWindow :: switchTo		98863	2					
ANR	98892	ParameterList	QAction * action		98863	3					
ANR	98893	Parameter	QAction * action	193:28:6381:6395	98863	0	True				
ANR	98894	ParameterType	QAction *		98863	0					
ANR	98895	Identifier	action		98863	1					
ANR	98896	CFGEntryNode	ENTRY		98863		True				
ANR	98897	CFGExitNode	EXIT		98863		True				
ANR	98898	Symbol	action -> data ( ) . toInt		98863						
ANR	98899	Symbol	action -> data		98863						
ANR	98900	Symbol	* action		98863						
ANR	98901	Symbol	action		98863						
ANR	98902	Symbol	id		98863						
ANR	98903	Function	SwitchWindow :: clearWindowsOrder	200:0:6483:6604							
ANR	98904	FunctionDef	SwitchWindow :: clearWindowsOrder ()		98903	0					
ANR	98905	CompoundStatement		201:0:6522:6604	98903	0					
ANR	98906	ExpressionStatement	"qDebug ( ) << ""CLEARING>......................."""	202:4:6528:6574	98903	0	True				
ANR	98907	ShiftExpression	"qDebug ( ) << ""CLEARING>......................."""		98903	0		<<			
ANR	98908	CallExpression	qDebug ( )		98903	0					
ANR	98909	Callee	qDebug		98903	0					
ANR	98910	Identifier	qDebug		98903	0					
ANR	98911	ArgumentList			98903	1					
ANR	98912	PrimaryExpression	"""CLEARING>......................."""		98903	1					
ANR	98913	ExpressionStatement	m_windowsOrder . clear ( )	203:4:6580:6602	98903	1	True				
ANR	98914	CallExpression	m_windowsOrder . clear ( )		98903	0					
ANR	98915	Callee	m_windowsOrder . clear		98903	0					
ANR	98916	MemberAccess	m_windowsOrder . clear		98903	0					
ANR	98917	Identifier	m_windowsOrder		98903	0					
ANR	98918	Identifier	clear		98903	1					
ANR	98919	ArgumentList			98903	1					
ANR	98920	ReturnType	void		98903	1					
ANR	98921	Identifier	SwitchWindow :: clearWindowsOrder		98903	2					
ANR	98922	ParameterList			98903	3					
ANR	98923	CFGEntryNode	ENTRY		98903		True				
ANR	98924	CFGExitNode	EXIT		98903		True				
ANR	98925	Symbol	m_windowsOrder		98903						
ANR	98926	Function	SwitchWindow :: performNextAction	206:0:6607:6668							
ANR	98927	FunctionDef	SwitchWindow :: performNextAction ()		98926	0					
ANR	98928	CompoundStatement		207:0:6646:6668	98926	0					
ANR	98929	ExpressionStatement	doSwitch ( true )	208:4:6652:6666	98926	0	True				
ANR	98930	CallExpression	doSwitch ( true )		98926	0					
ANR	98931	Callee	doSwitch		98926	0					
ANR	98932	Identifier	doSwitch		98926	0					
ANR	98933	ArgumentList	true		98926	1					
ANR	98934	Argument	true		98926	0					
ANR	98935	Identifier	true		98926	0					
ANR	98936	ReturnType	void		98926	1					
ANR	98937	Identifier	SwitchWindow :: performNextAction		98926	2					
ANR	98938	ParameterList			98926	3					
ANR	98939	CFGEntryNode	ENTRY		98926		True				
ANR	98940	CFGExitNode	EXIT		98926		True				
ANR	98941	Symbol	true		98926						
ANR	98942	Function	SwitchWindow :: performPreviousAction	211:0:6671:6737							
ANR	98943	FunctionDef	SwitchWindow :: performPreviousAction ()		98942	0					
ANR	98944	CompoundStatement		212:0:6714:6737	98942	0					
ANR	98945	ExpressionStatement	doSwitch ( false )	213:4:6720:6735	98942	0	True				
ANR	98946	CallExpression	doSwitch ( false )		98942	0					
ANR	98947	Callee	doSwitch		98942	0					
ANR	98948	Identifier	doSwitch		98942	0					
ANR	98949	ArgumentList	false		98942	1					
ANR	98950	Argument	false		98942	0					
ANR	98951	Identifier	false		98942	0					
ANR	98952	ReturnType	void		98942	1					
ANR	98953	Identifier	SwitchWindow :: performPreviousAction		98942	2					
ANR	98954	ParameterList			98942	3					
ANR	98955	CFGEntryNode	ENTRY		98942		True				
ANR	98956	CFGExitNode	EXIT		98942		True				
ANR	98957	Symbol	false		98942						
ANR	98958	Function	SwitchWindow :: doSwitch	216:0:6740:8338							
ANR	98959	FunctionDef	SwitchWindow :: doSwitch (bool up)		98958	0					
ANR	98960	CompoundStatement		217:0:6777:8338	98958	0					
ANR	98961	IfStatement	if ( m_windowsOrder . isEmpty ( ) )		98958	0					
ANR	98962	Condition	m_windowsOrder . isEmpty ( )	220:8:6929:6952	98958	0	True				
ANR	98963	CallExpression	m_windowsOrder . isEmpty ( )		98958	0					
ANR	98964	Callee	m_windowsOrder . isEmpty		98958	0					
ANR	98965	MemberAccess	m_windowsOrder . isEmpty		98958	0					
ANR	98966	Identifier	m_windowsOrder		98958	0					
ANR	98967	Identifier	isEmpty		98958	1					
ANR	98968	ArgumentList			98958	1					
ANR	98969	CompoundStatement		4:34:177:177	98958	1					
ANR	98970	ExpressionStatement	m_windowsOrder = KWindowSystem :: stackingOrder ( )	221:8:6965:7012	98958	0	True				
ANR	98971	AssignmentExpression	m_windowsOrder = KWindowSystem :: stackingOrder ( )		98958	0		=			
ANR	98972	Identifier	m_windowsOrder		98958	0					
ANR	98973	CallExpression	KWindowSystem :: stackingOrder ( )		98958	1					
ANR	98974	Callee	KWindowSystem :: stackingOrder		98958	0					
ANR	98975	Identifier	KWindowSystem :: stackingOrder		98958	0					
ANR	98976	ArgumentList			98958	1					
ANR	98977	ElseStatement	else		98958	0					
ANR	98978	CompoundStatement		6:11:247:247	98958	0					
ANR	98979	IfStatement	if ( ! m_clearOrderTimer )		98958	0					
ANR	98980	Condition	! m_clearOrderTimer	223:12:7039:7056	98958	0	True				
ANR	98981	UnaryOperationExpression	! m_clearOrderTimer		98958	0					
ANR	98982	UnaryOperator	!		98958	0					
ANR	98983	Identifier	m_clearOrderTimer		98958	1					
ANR	98984	CompoundStatement		7:32:281:281	98958	1					
ANR	98985	ExpressionStatement	m_clearOrderTimer = new QTimer ( this )	224:12:7073:7109	98958	0	True				
ANR	98986	AssignmentExpression	m_clearOrderTimer = new QTimer ( this )		98958	0		=			
ANR	98987	Identifier	m_clearOrderTimer		98958	0					
ANR	98988	Identifier	this		98958	1					
ANR	98989	ExpressionStatement	"connect ( m_clearOrderTimer , & QTimer :: timeout , this , & SwitchWindow :: clearWindowsOrder )"	225:12:7123:7207	98958	1	True				
ANR	98990	CallExpression	"connect ( m_clearOrderTimer , & QTimer :: timeout , this , & SwitchWindow :: clearWindowsOrder )"		98958	0					
ANR	98991	Callee	connect		98958	0					
ANR	98992	Identifier	connect		98958	0					
ANR	98993	ArgumentList	m_clearOrderTimer		98958	1					
ANR	98994	Argument	m_clearOrderTimer		98958	0					
ANR	98995	Identifier	m_clearOrderTimer		98958	0					
ANR	98996	Argument	& QTimer :: timeout		98958	1					
ANR	98997	UnaryOperationExpression	& QTimer :: timeout		98958	0					
ANR	98998	UnaryOperator	&		98958	0					
ANR	98999	Identifier	QTimer :: timeout		98958	1					
ANR	99000	Argument	this		98958	2					
ANR	99001	Identifier	this		98958	0					
ANR	99002	Argument	& SwitchWindow :: clearWindowsOrder		98958	3					
ANR	99003	UnaryOperationExpression	& SwitchWindow :: clearWindowsOrder		98958	0					
ANR	99004	UnaryOperator	&		98958	0					
ANR	99005	Identifier	SwitchWindow :: clearWindowsOrder		98958	1					
ANR	99006	ExpressionStatement	m_clearOrderTimer -> setSingleShot ( true )	226:12:7221:7259	98958	2	True				
ANR	99007	CallExpression	m_clearOrderTimer -> setSingleShot ( true )		98958	0					
ANR	99008	Callee	m_clearOrderTimer -> setSingleShot		98958	0					
ANR	99009	PtrMemberAccess	m_clearOrderTimer -> setSingleShot		98958	0					
ANR	99010	Identifier	m_clearOrderTimer		98958	0					
ANR	99011	Identifier	setSingleShot		98958	1					
ANR	99012	ArgumentList	true		98958	1					
ANR	99013	Argument	true		98958	0					
ANR	99014	Identifier	true		98958	0					
ANR	99015	ExpressionStatement	m_clearOrderTimer -> setInterval ( 1000 )	227:12:7273:7309	98958	3	True				
ANR	99016	CallExpression	m_clearOrderTimer -> setInterval ( 1000 )		98958	0					
ANR	99017	Callee	m_clearOrderTimer -> setInterval		98958	0					
ANR	99018	PtrMemberAccess	m_clearOrderTimer -> setInterval		98958	0					
ANR	99019	Identifier	m_clearOrderTimer		98958	0					
ANR	99020	Identifier	setInterval		98958	1					
ANR	99021	ArgumentList	1000		98958	1					
ANR	99022	Argument	1000		98958	0					
ANR	99023	PrimaryExpression	1000		98958	0					
ANR	99024	ExpressionStatement	m_clearOrderTimer -> start ( )	230:8:7330:7356	98958	1	True				
ANR	99025	CallExpression	m_clearOrderTimer -> start ( )		98958	0					
ANR	99026	Callee	m_clearOrderTimer -> start		98958	0					
ANR	99027	PtrMemberAccess	m_clearOrderTimer -> start		98958	0					
ANR	99028	Identifier	m_clearOrderTimer		98958	0					
ANR	99029	Identifier	start		98958	1					
ANR	99030	ArgumentList			98958	1					
ANR	99031	IdentifierDeclStatement	const WId activeWindow = KWindowSystem :: activeWindow ( ) ;	233:4:7369:7423	98958	1	True				
ANR	99032	IdentifierDecl	activeWindow = KWindowSystem :: activeWindow ( )		98958	0					
ANR	99033	IdentifierDeclType	const WId		98958	0					
ANR	99034	Identifier	activeWindow		98958	1					
ANR	99035	AssignmentExpression	activeWindow = KWindowSystem :: activeWindow ( )		98958	2		=			
ANR	99036	Identifier	activeWindow		98958	0					
ANR	99037	CallExpression	KWindowSystem :: activeWindow ( )		98958	1					
ANR	99038	Callee	KWindowSystem :: activeWindow		98958	0					
ANR	99039	Identifier	KWindowSystem :: activeWindow		98958	0					
ANR	99040	ArgumentList			98958	1					
ANR	99041	IdentifierDeclStatement	bool next = false ;	234:4:7429:7446	98958	2	True				
ANR	99042	IdentifierDecl	next = false		98958	0					
ANR	99043	IdentifierDeclType	bool		98958	0					
ANR	99044	Identifier	next		98958	1					
ANR	99045	AssignmentExpression	next = false		98958	2		=			
ANR	99046	Identifier	false		98958	0					
ANR	99047	Identifier	false		98958	1					
ANR	99048	IdentifierDeclStatement	WId first = 0 ;	235:4:7452:7465	98958	3	True				
ANR	99049	IdentifierDecl	first = 0		98958	0					
ANR	99050	IdentifierDeclType	WId		98958	0					
ANR	99051	Identifier	first		98958	1					
ANR	99052	AssignmentExpression	first = 0		98958	2		=			
ANR	99053	Identifier	first		98958	0					
ANR	99054	PrimaryExpression	0		98958	1					
ANR	99055	IdentifierDeclStatement	WId last = 0 ;	236:4:7471:7483	98958	4	True				
ANR	99056	IdentifierDecl	last = 0		98958	0					
ANR	99057	IdentifierDeclType	WId		98958	0					
ANR	99058	Identifier	last		98958	1					
ANR	99059	AssignmentExpression	last = 0		98958	2		=			
ANR	99060	Identifier	last		98958	0					
ANR	99061	PrimaryExpression	0		98958	1					
ANR	99062	ForStatement	for ( int i = 0 ; i < m_windowsOrder . count ( ) ; ++ i )		98958	5					
ANR	99063	ForInit	int i = 0 ;	237:9:7494:7503	98958	0	True				
ANR	99064	IdentifierDeclStatement	int i = 0 ;		98958	0					
ANR	99065	IdentifierDecl	i = 0		98958	0					
ANR	99066	IdentifierDeclType	int		98958	0					
ANR	99067	Identifier	i		98958	1					
ANR	99068	AssignmentExpression	i = 0		98958	2		=			
ANR	99069	Identifier	i		98958	0					
ANR	99070	PrimaryExpression	0		98958	1					
ANR	99071	Condition	i < m_windowsOrder . count ( )	237:20:7505:7530	98958	1	True				
ANR	99072	RelationalExpression	i < m_windowsOrder . count ( )		98958	0		<			
ANR	99073	Identifier	i		98958	0					
ANR	99074	CallExpression	m_windowsOrder . count ( )		98958	1					
ANR	99075	Callee	m_windowsOrder . count		98958	0					
ANR	99076	MemberAccess	m_windowsOrder . count		98958	0					
ANR	99077	Identifier	m_windowsOrder		98958	0					
ANR	99078	Identifier	count		98958	1					
ANR	99079	ArgumentList			98958	1					
ANR	99080	UnaryExpression	++ i	237:48:7533:7535	98958	2	True				
ANR	99081	IncDec	++		98958	0					
ANR	99082	Identifier	i		98958	1					
ANR	99083	CompoundStatement		23:8:815:898	98958	3					
ANR	99084	IdentifierDeclStatement	const WId id = m_windowsOrder . at ( i ) ;	238:8:7548:7583	98958	0	True				
ANR	99085	IdentifierDecl	id = m_windowsOrder . at ( i )		98958	0					
ANR	99086	IdentifierDeclType	const WId		98958	0					
ANR	99087	Identifier	id		98958	1					
ANR	99088	AssignmentExpression	id = m_windowsOrder . at ( i )		98958	2		=			
ANR	99089	Identifier	id		98958	0					
ANR	99090	CallExpression	m_windowsOrder . at ( i )		98958	1					
ANR	99091	Callee	m_windowsOrder . at		98958	0					
ANR	99092	MemberAccess	m_windowsOrder . at		98958	0					
ANR	99093	Identifier	m_windowsOrder		98958	0					
ANR	99094	Identifier	at		98958	1					
ANR	99095	ArgumentList	i		98958	1					
ANR	99096	Argument	i		98958	0					
ANR	99097	Identifier	i		98958	0					
ANR	99098	IdentifierDeclStatement	"const KWindowInfo info ( id , NET :: WMDesktop | NET :: WMVisibleName | NET :: WMWindowType ) ;"	239:8:7593:7676	98958	1	True				
ANR	99099	IdentifierDecl	"info ( id , NET :: WMDesktop | NET :: WMVisibleName | NET :: WMWindowType )"		98958	0					
ANR	99100	IdentifierDeclType	const KWindowInfo		98958	0					
ANR	99101	Identifier	info		98958	1					
ANR	99102	Expression	"id , NET :: WMDesktop | NET :: WMVisibleName | NET :: WMWindowType"		98958	2					
ANR	99103	Identifier	id		98958	0					
ANR	99104	InclusiveOrExpression	NET :: WMDesktop | NET :: WMVisibleName | NET :: WMWindowType		98958	1		|			
ANR	99105	Identifier	NET :: WMDesktop		98958	0					
ANR	99106	InclusiveOrExpression	NET :: WMVisibleName | NET :: WMWindowType		98958	1		|			
ANR	99107	Identifier	NET :: WMVisibleName		98958	0					
ANR	99108	Identifier	NET :: WMWindowType		98958	1					
ANR	99109	IfStatement	if ( info . windowType ( NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask ) != - 1 && info . isOnCurrentDesktop ( ) )		98958	2					
ANR	99110	Condition	info . windowType ( NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask ) != - 1 && info . isOnCurrentDesktop ( )	240:12:7690:7793	98958	0	True				
ANR	99111	AndExpression	info . windowType ( NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask ) != - 1 && info . isOnCurrentDesktop ( )		98958	0		&&			
ANR	99112	EqualityExpression	info . windowType ( NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask ) != - 1		98958	0		!=			
ANR	99113	CallExpression	info . windowType ( NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask )		98958	0					
ANR	99114	Callee	info . windowType		98958	0					
ANR	99115	MemberAccess	info . windowType		98958	0					
ANR	99116	Identifier	info		98958	0					
ANR	99117	Identifier	windowType		98958	1					
ANR	99118	ArgumentList	NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask		98958	1					
ANR	99119	Argument	NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask		98958	0					
ANR	99120	InclusiveOrExpression	NET :: NormalMask | NET :: DialogMask | NET :: UtilityMask		98958	0		|			
ANR	99121	Identifier	NET :: NormalMask		98958	0					
ANR	99122	InclusiveOrExpression	NET :: DialogMask | NET :: UtilityMask		98958	1		|			
ANR	99123	Identifier	NET :: DialogMask		98958	0					
ANR	99124	Identifier	NET :: UtilityMask		98958	1					
ANR	99125	UnaryOperationExpression	- 1		98958	1					
ANR	99126	UnaryOperator	-		98958	0					
ANR	99127	PrimaryExpression	1		98958	1					
ANR	99128	CallExpression	info . isOnCurrentDesktop ( )		98958	1					
ANR	99129	Callee	info . isOnCurrentDesktop		98958	0					
ANR	99130	MemberAccess	info . isOnCurrentDesktop		98958	0					
ANR	99131	Identifier	info		98958	0					
ANR	99132	Identifier	isOnCurrentDesktop		98958	1					
ANR	99133	ArgumentList			98958	1					
ANR	99134	CompoundStatement		24:118:1018:1018	98958	1					
ANR	99135	IfStatement	if ( next )		98958	0					
ANR	99136	Condition	next	241:16:7814:7817	98958	0	True				
ANR	99137	Identifier	next		98958	0					
ANR	99138	CompoundStatement		25:22:1042:1042	98958	1					
ANR	99139	ExpressionStatement	KWindowSystem :: forceActiveWindow ( id )	242:16:7838:7874	98958	0	True				
ANR	99140	CallExpression	KWindowSystem :: forceActiveWindow ( id )		98958	0					
ANR	99141	Callee	KWindowSystem :: forceActiveWindow		98958	0					
ANR	99142	Identifier	KWindowSystem :: forceActiveWindow		98958	0					
ANR	99143	ArgumentList	id		98958	1					
ANR	99144	Argument	id		98958	0					
ANR	99145	Identifier	id		98958	0					
ANR	99146	ReturnStatement	return ;	243:16:7892:7898	98958	1	True				
ANR	99147	IfStatement	if ( first == 0 )		98958	1					
ANR	99148	Condition	first == 0	246:16:7931:7940	98958	0	True				
ANR	99149	EqualityExpression	first == 0		98958	0		==			
ANR	99150	Identifier	first		98958	0					
ANR	99151	PrimaryExpression	0		98958	1					
ANR	99152	CompoundStatement		30:28:1165:1165	98958	1					
ANR	99153	ExpressionStatement	first = id	247:16:7961:7971	98958	0	True				
ANR	99154	AssignmentExpression	first = id		98958	0		=			
ANR	99155	Identifier	first		98958	0					
ANR	99156	Identifier	id		98958	1					
ANR	99157	IfStatement	if ( id == activeWindow )		98958	2					
ANR	99158	Condition	id == activeWindow	250:16:8004:8021	98958	0	True				
ANR	99159	EqualityExpression	id == activeWindow		98958	0		==			
ANR	99160	Identifier	id		98958	0					
ANR	99161	Identifier	activeWindow		98958	1					
ANR	99162	CompoundStatement		34:36:1246:1246	98958	1					
ANR	99163	IfStatement	if ( up )		98958	0					
ANR	99164	Condition	up	251:20:8046:8047	98958	0	True				
ANR	99165	Identifier	up		98958	0					
ANR	99166	CompoundStatement		35:24:1272:1272	98958	1					
ANR	99167	ExpressionStatement	next = true	252:20:8072:8083	98958	0	True				
ANR	99168	AssignmentExpression	next = true		98958	0		=			
ANR	99169	Identifier	next		98958	0					
ANR	99170	Identifier	true		98958	1					
ANR	99171	ElseStatement	else		98958	0					
ANR	99172	IfStatement	if ( last )		98958	0					
ANR	99173	Condition	last	253:27:8112:8115	98958	0	True				
ANR	99174	Identifier	last		98958	0					
ANR	99175	CompoundStatement		37:33:1340:1340	98958	1					
ANR	99176	ExpressionStatement	KWindowSystem :: forceActiveWindow ( last )	254:20:8140:8178	98958	0	True				
ANR	99177	CallExpression	KWindowSystem :: forceActiveWindow ( last )		98958	0					
ANR	99178	Callee	KWindowSystem :: forceActiveWindow		98958	0					
ANR	99179	Identifier	KWindowSystem :: forceActiveWindow		98958	0					
ANR	99180	ArgumentList	last		98958	1					
ANR	99181	Argument	last		98958	0					
ANR	99182	Identifier	last		98958	0					
ANR	99183	ReturnStatement	return ;	255:20:8200:8206	98958	1	True				
ANR	99184	ExpressionStatement	last = id	259:12:8253:8262	98958	3	True				
ANR	99185	AssignmentExpression	last = id		98958	0		=			
ANR	99186	Identifier	last		98958	0					
ANR	99187	Identifier	id		98958	1					
ANR	99188	ExpressionStatement	KWindowSystem :: forceActiveWindow ( up ? first : last )	263:4:8285:8336	98958	6	True				
ANR	99189	CallExpression	KWindowSystem :: forceActiveWindow ( up ? first : last )		98958	0					
ANR	99190	Callee	KWindowSystem :: forceActiveWindow		98958	0					
ANR	99191	Identifier	KWindowSystem :: forceActiveWindow		98958	0					
ANR	99192	ArgumentList	up ? first : last		98958	1					
ANR	99193	Argument	up ? first : last		98958	0					
ANR	99194	ConditionalExpression	up ? first : last		98958	0					
ANR	99195	Condition	up		98958	0					
ANR	99196	Identifier	up		98958	0					
ANR	99197	Identifier	first		98958	1					
ANR	99198	Identifier	last		98958	2					
ANR	99199	ReturnType	void		98958	1					
ANR	99200	Identifier	SwitchWindow :: doSwitch		98958	2					
ANR	99201	ParameterList	bool up		98958	3					
ANR	99202	Parameter	bool up	216:28:6768:6774	98958	0	True				
ANR	99203	ParameterType	bool		98958	0					
ANR	99204	Identifier	up		98958	1					
ANR	99205	CFGEntryNode	ENTRY		98958		True				
ANR	99206	CFGExitNode	EXIT		98958		True				
ANR	99207	Symbol	next		98958						
ANR	99208	Symbol	m_windowsOrder . count		98958						
ANR	99209	Symbol	NET :: NormalMask		98958						
ANR	99210	Symbol	KWindowSystem :: activeWindow		98958						
ANR	99211	Symbol	m_windowsOrder . at		98958						
ANR	99212	Symbol	up		98958						
ANR	99213	Symbol	id		98958						
ANR	99214	Symbol	& QTimer :: timeout		98958						
ANR	99215	Symbol	info		98958						
ANR	99216	Symbol	m_windowsOrder . isEmpty		98958						
ANR	99217	Symbol	NET :: DialogMask		98958						
ANR	99218	Symbol	last		98958						
ANR	99219	Symbol	NET :: UtilityMask		98958						
ANR	99220	Symbol	& SwitchWindow :: clearWindowsOrder		98958						
ANR	99221	Symbol	this		98958						
ANR	99222	Symbol	false		98958						
ANR	99223	Symbol	i		98958						
ANR	99224	Symbol	info . isOnCurrentDesktop		98958						
ANR	99225	Symbol	m_windowsOrder		98958						
ANR	99226	Symbol	m_clearOrderTimer		98958						
ANR	99227	Symbol	KWindowSystem :: stackingOrder		98958						
ANR	99228	Symbol	true		98958						
ANR	99229	Symbol	info . windowType		98958						
ANR	99230	Symbol	activeWindow		98958						
ANR	99231	Symbol	first		98958						
