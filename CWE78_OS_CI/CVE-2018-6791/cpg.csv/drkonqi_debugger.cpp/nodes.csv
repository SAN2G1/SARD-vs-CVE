command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	258072	File	data/converged/CVE-2018-6791_plasma-workspace/drkonqi_debugger.cpp								
ANR	258073	Function	Debugger :: availableInternalDebuggers	28:0:906:1064							
ANR	258074	FunctionDef	Debugger :: availableInternalDebuggers (const QString & backend)		258073	0					
ANR	258075	CompoundStatement		29:0:984:1064	258073	0					
ANR	258076	ReturnStatement	"return availableDebuggers ( QStringLiteral ( ""debuggers/internal"" ) , backend ) ;"	30:4:990:1062	258073	0	True				
ANR	258077	CallExpression	"availableDebuggers ( QStringLiteral ( ""debuggers/internal"" ) , backend )"		258073	0					
ANR	258078	Callee	availableDebuggers		258073	0					
ANR	258079	Identifier	availableDebuggers		258073	0					
ANR	258080	ArgumentList	"QStringLiteral ( ""debuggers/internal"" )"		258073	1					
ANR	258081	Argument	"QStringLiteral ( ""debuggers/internal"" )"		258073	0					
ANR	258082	CallExpression	"QStringLiteral ( ""debuggers/internal"" )"		258073	0					
ANR	258083	Callee	QStringLiteral		258073	0					
ANR	258084	Identifier	QStringLiteral		258073	0					
ANR	258085	ArgumentList	"""debuggers/internal"""		258073	1					
ANR	258086	Argument	"""debuggers/internal"""		258073	0					
ANR	258087	PrimaryExpression	"""debuggers/internal"""		258073	0					
ANR	258088	Argument	backend		258073	1					
ANR	258089	Identifier	backend		258073	0					
ANR	258090	ReturnType	QList < Debugger >		258073	1					
ANR	258091	Identifier	Debugger :: availableInternalDebuggers		258073	2					
ANR	258092	ParameterList	const QString & backend		258073	3					
ANR	258093	Parameter	const QString & backend	28:53:959:981	258073	0	True				
ANR	258094	ParameterType	const QString &		258073	0					
ANR	258095	Identifier	backend		258073	1					
ANR	258096	CFGEntryNode	ENTRY		258073		True				
ANR	258097	CFGExitNode	EXIT		258073		True				
ANR	258098	Symbol	availableDebuggers		258073						
ANR	258099	Symbol	backend		258073						
ANR	258100	Symbol	QStringLiteral		258073						
ANR	258101	Function	Debugger :: availableExternalDebuggers	34:0:1076:1234							
ANR	258102	FunctionDef	Debugger :: availableExternalDebuggers (const QString & backend)		258101	0					
ANR	258103	CompoundStatement		35:0:1154:1234	258101	0					
ANR	258104	ReturnStatement	"return availableDebuggers ( QStringLiteral ( ""debuggers/external"" ) , backend ) ;"	36:4:1160:1232	258101	0	True				
ANR	258105	CallExpression	"availableDebuggers ( QStringLiteral ( ""debuggers/external"" ) , backend )"		258101	0					
ANR	258106	Callee	availableDebuggers		258101	0					
ANR	258107	Identifier	availableDebuggers		258101	0					
ANR	258108	ArgumentList	"QStringLiteral ( ""debuggers/external"" )"		258101	1					
ANR	258109	Argument	"QStringLiteral ( ""debuggers/external"" )"		258101	0					
ANR	258110	CallExpression	"QStringLiteral ( ""debuggers/external"" )"		258101	0					
ANR	258111	Callee	QStringLiteral		258101	0					
ANR	258112	Identifier	QStringLiteral		258101	0					
ANR	258113	ArgumentList	"""debuggers/external"""		258101	1					
ANR	258114	Argument	"""debuggers/external"""		258101	0					
ANR	258115	PrimaryExpression	"""debuggers/external"""		258101	0					
ANR	258116	Argument	backend		258101	1					
ANR	258117	Identifier	backend		258101	0					
ANR	258118	ReturnType	QList < Debugger >		258101	1					
ANR	258119	Identifier	Debugger :: availableExternalDebuggers		258101	2					
ANR	258120	ParameterList	const QString & backend		258101	3					
ANR	258121	Parameter	const QString & backend	34:53:1129:1151	258101	0	True				
ANR	258122	ParameterType	const QString &		258101	0					
ANR	258123	Identifier	backend		258101	1					
ANR	258124	CFGEntryNode	ENTRY		258101		True				
ANR	258125	CFGExitNode	EXIT		258101		True				
ANR	258126	Symbol	availableDebuggers		258101						
ANR	258127	Symbol	backend		258101						
ANR	258128	Symbol	QStringLiteral		258101						
ANR	258129	Function	Debugger :: isValid	39:0:1237:1291							
ANR	258130	FunctionDef	Debugger :: isValid ()		258129	0					
ANR	258131	CompoundStatement		40:0:1268:1291	258129	0					
ANR	258132	ReturnStatement	return m_config ;	41:4:1274:1289	258129	0	True				
ANR	258133	Identifier	m_config		258129	0					
ANR	258134	ReturnType	bool		258129	1					
ANR	258135	Identifier	Debugger :: isValid		258129	2					
ANR	258136	ParameterList			258129	3					
ANR	258137	CFGEntryNode	ENTRY		258129		True				
ANR	258138	CFGExitNode	EXIT		258129		True				
ANR	258139	Symbol	m_config		258129						
ANR	258140	Function	Debugger :: isInstalled	44:0:1294:1449							
ANR	258141	FunctionDef	Debugger :: isInstalled ()		258140	0					
ANR	258142	CompoundStatement		45:0:1329:1449	258140	0					
ANR	258143	IdentifierDeclStatement	QString tryexec = tryExec ( ) ;	46:4:1335:1362	258140	0	True				
ANR	258144	IdentifierDecl	tryexec = tryExec ( )		258140	0					
ANR	258145	IdentifierDeclType	QString		258140	0					
ANR	258146	Identifier	tryexec		258140	1					
ANR	258147	AssignmentExpression	tryexec = tryExec ( )		258140	2		=			
ANR	258148	Identifier	tryexec		258140	0					
ANR	258149	CallExpression	tryExec ( )		258140	1					
ANR	258150	Callee	tryExec		258140	0					
ANR	258151	Identifier	tryExec		258140	0					
ANR	258152	ArgumentList			258140	1					
ANR	258153	ReturnStatement	return ! tryexec . isEmpty ( ) && ! QStandardPaths :: findExecutable ( tryexec ) . isEmpty ( ) ;	47:4:1368:1447	258140	1	True				
ANR	258154	AndExpression	! tryexec . isEmpty ( ) && ! QStandardPaths :: findExecutable ( tryexec ) . isEmpty ( )		258140	0		&&			
ANR	258155	UnaryOperationExpression	! tryexec . isEmpty ( )		258140	0					
ANR	258156	UnaryOperator	!		258140	0					
ANR	258157	CallExpression	tryexec . isEmpty ( )		258140	1					
ANR	258158	Callee	tryexec . isEmpty		258140	0					
ANR	258159	MemberAccess	tryexec . isEmpty		258140	0					
ANR	258160	Identifier	tryexec		258140	0					
ANR	258161	Identifier	isEmpty		258140	1					
ANR	258162	ArgumentList			258140	1					
ANR	258163	UnaryOperationExpression	! QStandardPaths :: findExecutable ( tryexec ) . isEmpty ( )		258140	1					
ANR	258164	UnaryOperator	!		258140	0					
ANR	258165	CallExpression	QStandardPaths :: findExecutable ( tryexec ) . isEmpty ( )		258140	1					
ANR	258166	Callee	QStandardPaths :: findExecutable ( tryexec ) . isEmpty		258140	0					
ANR	258167	MemberAccess	QStandardPaths :: findExecutable ( tryexec ) . isEmpty		258140	0					
ANR	258168	CallExpression	QStandardPaths :: findExecutable ( tryexec )		258140	0					
ANR	258169	Callee	QStandardPaths :: findExecutable		258140	0					
ANR	258170	Identifier	QStandardPaths :: findExecutable		258140	0					
ANR	258171	ArgumentList	tryexec		258140	1					
ANR	258172	Argument	tryexec		258140	0					
ANR	258173	Identifier	tryexec		258140	0					
ANR	258174	Identifier	isEmpty		258140	1					
ANR	258175	ArgumentList			258140	1					
ANR	258176	ReturnType	bool		258140	1					
ANR	258177	Identifier	Debugger :: isInstalled		258140	2					
ANR	258178	ParameterList			258140	3					
ANR	258179	CFGEntryNode	ENTRY		258140		True				
ANR	258180	CFGExitNode	EXIT		258140		True				
ANR	258181	Symbol	QStandardPaths :: findExecutable		258140						
ANR	258182	Symbol	QStandardPaths :: findExecutable ( tryexec ) . isEmpty		258140						
ANR	258183	Symbol	tryexec		258140						
ANR	258184	Symbol	tryExec		258140						
ANR	258185	Symbol	tryexec . isEmpty		258140						
ANR	258186	Function	Debugger :: name	50:0:1452:1566							
ANR	258187	FunctionDef	Debugger :: name ()		258186	0					
ANR	258188	CompoundStatement		51:0:1483:1566	258186	0					
ANR	258189	ReturnStatement	"return isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""Name"" ) : QString ( ) ;"	52:4:1489:1564	258186	0	True				
ANR	258190	ConditionalExpression	"isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""Name"" ) : QString ( )"		258186	0					
ANR	258191	Condition	isValid ( )		258186	0					
ANR	258192	CallExpression	isValid ( )		258186	0					
ANR	258193	Callee	isValid		258186	0					
ANR	258194	Identifier	isValid		258186	0					
ANR	258195	ArgumentList			258186	1					
ANR	258196	CallExpression	"m_config -> group ( ""General"" ) . readEntry ( ""Name"" )"		258186	1					
ANR	258197	Callee	"m_config -> group ( ""General"" ) . readEntry"		258186	0					
ANR	258198	MemberAccess	"m_config -> group ( ""General"" ) . readEntry"		258186	0					
ANR	258199	CallExpression	"m_config -> group ( ""General"" )"		258186	0					
ANR	258200	Callee	m_config -> group		258186	0					
ANR	258201	PtrMemberAccess	m_config -> group		258186	0					
ANR	258202	Identifier	m_config		258186	0					
ANR	258203	Identifier	group		258186	1					
ANR	258204	ArgumentList	"""General"""		258186	1					
ANR	258205	Argument	"""General"""		258186	0					
ANR	258206	PrimaryExpression	"""General"""		258186	0					
ANR	258207	Identifier	readEntry		258186	1					
ANR	258208	ArgumentList	"""Name"""		258186	1					
ANR	258209	Argument	"""Name"""		258186	0					
ANR	258210	PrimaryExpression	"""Name"""		258186	0					
ANR	258211	CallExpression	QString ( )		258186	2					
ANR	258212	Callee	QString		258186	0					
ANR	258213	Identifier	QString		258186	0					
ANR	258214	ArgumentList			258186	1					
ANR	258215	ReturnType	QString		258186	1					
ANR	258216	Identifier	Debugger :: name		258186	2					
ANR	258217	ParameterList			258186	3					
ANR	258218	CFGEntryNode	ENTRY		258186		True				
ANR	258219	CFGExitNode	EXIT		258186		True				
ANR	258220	Symbol	* m_config		258186						
ANR	258221	Symbol	QString		258186						
ANR	258222	Symbol	m_config -> group		258186						
ANR	258223	Symbol	isValid		258186						
ANR	258224	Symbol	"m_config -> group ( ""General"" ) . readEntry"		258186						
ANR	258225	Symbol	m_config		258186						
ANR	258226	Function	Debugger :: codeName	55:0:1569:1832							
ANR	258227	FunctionDef	Debugger :: codeName ()		258226	0					
ANR	258228	CompoundStatement		56:0:1604:1832	258226	0					
ANR	258229	ReturnStatement	"return isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""CodeName"" , tryExec ( ) ) : QString ( ) ;"	59:4:1740:1830	258226	0	True				
ANR	258230	ConditionalExpression	"isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""CodeName"" , tryExec ( ) ) : QString ( )"		258226	0					
ANR	258231	Condition	isValid ( )		258226	0					
ANR	258232	CallExpression	isValid ( )		258226	0					
ANR	258233	Callee	isValid		258226	0					
ANR	258234	Identifier	isValid		258226	0					
ANR	258235	ArgumentList			258226	1					
ANR	258236	CallExpression	"m_config -> group ( ""General"" ) . readEntry ( ""CodeName"" , tryExec ( ) )"		258226	1					
ANR	258237	Callee	"m_config -> group ( ""General"" ) . readEntry"		258226	0					
ANR	258238	MemberAccess	"m_config -> group ( ""General"" ) . readEntry"		258226	0					
ANR	258239	CallExpression	"m_config -> group ( ""General"" )"		258226	0					
ANR	258240	Callee	m_config -> group		258226	0					
ANR	258241	PtrMemberAccess	m_config -> group		258226	0					
ANR	258242	Identifier	m_config		258226	0					
ANR	258243	Identifier	group		258226	1					
ANR	258244	ArgumentList	"""General"""		258226	1					
ANR	258245	Argument	"""General"""		258226	0					
ANR	258246	PrimaryExpression	"""General"""		258226	0					
ANR	258247	Identifier	readEntry		258226	1					
ANR	258248	ArgumentList	"""CodeName"""		258226	1					
ANR	258249	Argument	"""CodeName"""		258226	0					
ANR	258250	PrimaryExpression	"""CodeName"""		258226	0					
ANR	258251	Argument	tryExec ( )		258226	1					
ANR	258252	CallExpression	tryExec ( )		258226	0					
ANR	258253	Callee	tryExec		258226	0					
ANR	258254	Identifier	tryExec		258226	0					
ANR	258255	ArgumentList			258226	1					
ANR	258256	CallExpression	QString ( )		258226	2					
ANR	258257	Callee	QString		258226	0					
ANR	258258	Identifier	QString		258226	0					
ANR	258259	ArgumentList			258226	1					
ANR	258260	ReturnType	QString		258226	1					
ANR	258261	Identifier	Debugger :: codeName		258226	2					
ANR	258262	ParameterList			258226	3					
ANR	258263	CFGEntryNode	ENTRY		258226		True				
ANR	258264	CFGExitNode	EXIT		258226		True				
ANR	258265	Symbol	* m_config		258226						
ANR	258266	Symbol	QString		258226						
ANR	258267	Symbol	m_config -> group		258226						
ANR	258268	Symbol	isValid		258226						
ANR	258269	Symbol	tryExec		258226						
ANR	258270	Symbol	"m_config -> group ( ""General"" ) . readEntry"		258226						
ANR	258271	Symbol	m_config		258226						
ANR	258272	Function	Debugger :: tryExec	62:0:1835:1955							
ANR	258273	FunctionDef	Debugger :: tryExec ()		258272	0					
ANR	258274	CompoundStatement		63:0:1869:1955	258272	0					
ANR	258275	ReturnStatement	"return isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""TryExec"" ) : QString ( ) ;"	64:4:1875:1953	258272	0	True				
ANR	258276	ConditionalExpression	"isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""TryExec"" ) : QString ( )"		258272	0					
ANR	258277	Condition	isValid ( )		258272	0					
ANR	258278	CallExpression	isValid ( )		258272	0					
ANR	258279	Callee	isValid		258272	0					
ANR	258280	Identifier	isValid		258272	0					
ANR	258281	ArgumentList			258272	1					
ANR	258282	CallExpression	"m_config -> group ( ""General"" ) . readEntry ( ""TryExec"" )"		258272	1					
ANR	258283	Callee	"m_config -> group ( ""General"" ) . readEntry"		258272	0					
ANR	258284	MemberAccess	"m_config -> group ( ""General"" ) . readEntry"		258272	0					
ANR	258285	CallExpression	"m_config -> group ( ""General"" )"		258272	0					
ANR	258286	Callee	m_config -> group		258272	0					
ANR	258287	PtrMemberAccess	m_config -> group		258272	0					
ANR	258288	Identifier	m_config		258272	0					
ANR	258289	Identifier	group		258272	1					
ANR	258290	ArgumentList	"""General"""		258272	1					
ANR	258291	Argument	"""General"""		258272	0					
ANR	258292	PrimaryExpression	"""General"""		258272	0					
ANR	258293	Identifier	readEntry		258272	1					
ANR	258294	ArgumentList	"""TryExec"""		258272	1					
ANR	258295	Argument	"""TryExec"""		258272	0					
ANR	258296	PrimaryExpression	"""TryExec"""		258272	0					
ANR	258297	CallExpression	QString ( )		258272	2					
ANR	258298	Callee	QString		258272	0					
ANR	258299	Identifier	QString		258272	0					
ANR	258300	ArgumentList			258272	1					
ANR	258301	ReturnType	QString		258272	1					
ANR	258302	Identifier	Debugger :: tryExec		258272	2					
ANR	258303	ParameterList			258272	3					
ANR	258304	CFGEntryNode	ENTRY		258272		True				
ANR	258305	CFGExitNode	EXIT		258272		True				
ANR	258306	Symbol	* m_config		258272						
ANR	258307	Symbol	QString		258272						
ANR	258308	Symbol	m_config -> group		258272						
ANR	258309	Symbol	isValid		258272						
ANR	258310	Symbol	"m_config -> group ( ""General"" ) . readEntry"		258272						
ANR	258311	Symbol	m_config		258272						
ANR	258312	Function	Debugger :: supportedBackends	67:0:1958:2169							
ANR	258313	FunctionDef	Debugger :: supportedBackends ()		258312	0					
ANR	258314	CompoundStatement		68:0:2006:2169	258312	0					
ANR	258315	ReturnStatement	"return isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""Backends"" ) . split ( '|' , QString :: SkipEmptyParts ) : QStringList ( ) ;"	69:4:2012:2167	258312	0	True				
ANR	258316	ConditionalExpression	"isValid ( ) ? m_config -> group ( ""General"" ) . readEntry ( ""Backends"" ) . split ( '|' , QString :: SkipEmptyParts ) : QStringList ( )"		258312	0					
ANR	258317	Condition	isValid ( )		258312	0					
ANR	258318	CallExpression	isValid ( )		258312	0					
ANR	258319	Callee	isValid		258312	0					
ANR	258320	Identifier	isValid		258312	0					
ANR	258321	ArgumentList			258312	1					
ANR	258322	CallExpression	"m_config -> group ( ""General"" ) . readEntry ( ""Backends"" ) . split ( '|' , QString :: SkipEmptyParts )"		258312	1					
ANR	258323	Callee	"m_config -> group ( ""General"" ) . readEntry ( ""Backends"" ) . split"		258312	0					
ANR	258324	MemberAccess	"m_config -> group ( ""General"" ) . readEntry ( ""Backends"" ) . split"		258312	0					
ANR	258325	CallExpression	"m_config -> group ( ""General"" ) . readEntry ( ""Backends"" )"		258312	0					
ANR	258326	Callee	"m_config -> group ( ""General"" ) . readEntry"		258312	0					
ANR	258327	MemberAccess	"m_config -> group ( ""General"" ) . readEntry"		258312	0					
ANR	258328	CallExpression	"m_config -> group ( ""General"" )"		258312	0					
ANR	258329	Callee	m_config -> group		258312	0					
ANR	258330	PtrMemberAccess	m_config -> group		258312	0					
ANR	258331	Identifier	m_config		258312	0					
ANR	258332	Identifier	group		258312	1					
ANR	258333	ArgumentList	"""General"""		258312	1					
ANR	258334	Argument	"""General"""		258312	0					
ANR	258335	PrimaryExpression	"""General"""		258312	0					
ANR	258336	Identifier	readEntry		258312	1					
ANR	258337	ArgumentList	"""Backends"""		258312	1					
ANR	258338	Argument	"""Backends"""		258312	0					
ANR	258339	PrimaryExpression	"""Backends"""		258312	0					
ANR	258340	Identifier	split		258312	1					
ANR	258341	ArgumentList	'|'		258312	1					
ANR	258342	Argument	'|'		258312	0					
ANR	258343	PrimaryExpression	'|'		258312	0					
ANR	258344	Argument	QString :: SkipEmptyParts		258312	1					
ANR	258345	Identifier	QString :: SkipEmptyParts		258312	0					
ANR	258346	CallExpression	QStringList ( )		258312	2					
ANR	258347	Callee	QStringList		258312	0					
ANR	258348	Identifier	QStringList		258312	0					
ANR	258349	ArgumentList			258312	1					
ANR	258350	ReturnType	QStringList		258312	1					
ANR	258351	Identifier	Debugger :: supportedBackends		258312	2					
ANR	258352	ParameterList			258312	3					
ANR	258353	CFGEntryNode	ENTRY		258312		True				
ANR	258354	CFGExitNode	EXIT		258312		True				
ANR	258355	Symbol	* m_config		258312						
ANR	258356	Symbol	m_config -> group		258312						
ANR	258357	Symbol	QString :: SkipEmptyParts		258312						
ANR	258358	Symbol	isValid		258312						
ANR	258359	Symbol	QStringList		258312						
ANR	258360	Symbol	"m_config -> group ( ""General"" ) . readEntry"		258312						
ANR	258361	Symbol	"m_config -> group ( ""General"" ) . readEntry ( ""Backends"" ) . split"		258312						
ANR	258362	Symbol	m_config		258312						
ANR	258363	Function	Debugger :: setUsedBackend	73:0:2172:2325							
ANR	258364	FunctionDef	Debugger :: setUsedBackend (const QString & backendName)		258363	0					
ANR	258365	CompoundStatement		74:0:2231:2325	258363	0					
ANR	258366	IfStatement	if ( supportedBackends ( ) . contains ( backendName ) )		258363	0					
ANR	258367	Condition	supportedBackends ( ) . contains ( backendName )	75:8:2241:2281	258363	0	True				
ANR	258368	CallExpression	supportedBackends ( ) . contains ( backendName )		258363	0					
ANR	258369	Callee	supportedBackends ( ) . contains		258363	0					
ANR	258370	MemberAccess	supportedBackends ( ) . contains		258363	0					
ANR	258371	CallExpression	supportedBackends ( )		258363	0					
ANR	258372	Callee	supportedBackends		258363	0					
ANR	258373	Identifier	supportedBackends		258363	0					
ANR	258374	ArgumentList			258363	1					
ANR	258375	Identifier	contains		258363	1					
ANR	258376	ArgumentList	backendName		258363	1					
ANR	258377	Argument	backendName		258363	0					
ANR	258378	Identifier	backendName		258363	0					
ANR	258379	CompoundStatement		2:51:52:52	258363	1					
ANR	258380	ExpressionStatement	m_backend = backendName	76:8:2294:2317	258363	0	True				
ANR	258381	AssignmentExpression	m_backend = backendName		258363	0		=			
ANR	258382	Identifier	m_backend		258363	0					
ANR	258383	Identifier	backendName		258363	1					
ANR	258384	ReturnType	void		258363	1					
ANR	258385	Identifier	Debugger :: setUsedBackend		258363	2					
ANR	258386	ParameterList	const QString & backendName		258363	3					
ANR	258387	Parameter	const QString & backendName	73:30:2202:2228	258363	0	True				
ANR	258388	ParameterType	const QString &		258363	0					
ANR	258389	Identifier	backendName		258363	1					
ANR	258390	CFGEntryNode	ENTRY		258363		True				
ANR	258391	CFGExitNode	EXIT		258363		True				
ANR	258392	Symbol	m_backend		258363						
ANR	258393	Symbol	supportedBackends		258363						
ANR	258394	Symbol	supportedBackends ( ) . contains		258363						
ANR	258395	Symbol	backendName		258363						
ANR	258396	Function	Debugger :: command	80:0:2328:2541							
ANR	258397	FunctionDef	Debugger :: command ()		258396	0					
ANR	258398	CompoundStatement		81:0:2362:2541	258396	0					
ANR	258399	IfStatement	if ( ! isValid ( ) || ! m_config -> hasGroup ( m_backend ) )		258396	0					
ANR	258400	Condition	! isValid ( ) || ! m_config -> hasGroup ( m_backend )	82:8:2372:2415	258396	0	True				
ANR	258401	OrExpression	! isValid ( ) || ! m_config -> hasGroup ( m_backend )		258396	0		||			
ANR	258402	UnaryOperationExpression	! isValid ( )		258396	0					
ANR	258403	UnaryOperator	!		258396	0					
ANR	258404	CallExpression	isValid ( )		258396	1					
ANR	258405	Callee	isValid		258396	0					
ANR	258406	Identifier	isValid		258396	0					
ANR	258407	ArgumentList			258396	1					
ANR	258408	UnaryOperationExpression	! m_config -> hasGroup ( m_backend )		258396	1					
ANR	258409	UnaryOperator	!		258396	0					
ANR	258410	CallExpression	m_config -> hasGroup ( m_backend )		258396	1					
ANR	258411	Callee	m_config -> hasGroup		258396	0					
ANR	258412	PtrMemberAccess	m_config -> hasGroup		258396	0					
ANR	258413	Identifier	m_config		258396	0					
ANR	258414	Identifier	hasGroup		258396	1					
ANR	258415	ArgumentList	m_backend		258396	1					
ANR	258416	Argument	m_backend		258396	0					
ANR	258417	Identifier	m_backend		258396	0					
ANR	258418	CompoundStatement		2:54:55:55	258396	1					
ANR	258419	ReturnStatement	return QString ( ) ;	83:8:2428:2444	258396	0	True				
ANR	258420	CallExpression	QString ( )		258396	0					
ANR	258421	Callee	QString		258396	0					
ANR	258422	Identifier	QString		258396	0					
ANR	258423	ArgumentList			258396	1					
ANR	258424	ElseStatement	else		258396	0					
ANR	258425	CompoundStatement		4:11:94:94	258396	0					
ANR	258426	ReturnStatement	"return m_config -> group ( m_backend ) . readPathEntry ( ""Exec"" , QString ( ) ) ;"	85:8:2467:2533	258396	0	True				
ANR	258427	CallExpression	"m_config -> group ( m_backend ) . readPathEntry ( ""Exec"" , QString ( ) )"		258396	0					
ANR	258428	Callee	m_config -> group ( m_backend ) . readPathEntry		258396	0					
ANR	258429	MemberAccess	m_config -> group ( m_backend ) . readPathEntry		258396	0					
ANR	258430	CallExpression	m_config -> group ( m_backend )		258396	0					
ANR	258431	Callee	m_config -> group		258396	0					
ANR	258432	PtrMemberAccess	m_config -> group		258396	0					
ANR	258433	Identifier	m_config		258396	0					
ANR	258434	Identifier	group		258396	1					
ANR	258435	ArgumentList	m_backend		258396	1					
ANR	258436	Argument	m_backend		258396	0					
ANR	258437	Identifier	m_backend		258396	0					
ANR	258438	Identifier	readPathEntry		258396	1					
ANR	258439	ArgumentList	"""Exec"""		258396	1					
ANR	258440	Argument	"""Exec"""		258396	0					
ANR	258441	PrimaryExpression	"""Exec"""		258396	0					
ANR	258442	Argument	QString ( )		258396	1					
ANR	258443	CallExpression	QString ( )		258396	0					
ANR	258444	Callee	QString		258396	0					
ANR	258445	Identifier	QString		258396	0					
ANR	258446	ArgumentList			258396	1					
ANR	258447	ReturnType	QString		258396	1					
ANR	258448	Identifier	Debugger :: command		258396	2					
ANR	258449	ParameterList			258396	3					
ANR	258450	CFGEntryNode	ENTRY		258396		True				
ANR	258451	CFGExitNode	EXIT		258396		True				
ANR	258452	Symbol	* m_config		258396						
ANR	258453	Symbol	m_config -> group ( m_backend ) . readPathEntry		258396						
ANR	258454	Symbol	QString		258396						
ANR	258455	Symbol	m_backend		258396						
ANR	258456	Symbol	m_config -> group		258396						
ANR	258457	Symbol	m_config -> hasGroup		258396						
ANR	258458	Symbol	isValid		258396						
ANR	258459	Symbol	m_config		258396						
ANR	258460	Function	Debugger :: backtraceBatchCommands	89:0:2544:2766							
ANR	258461	FunctionDef	Debugger :: backtraceBatchCommands ()		258460	0					
ANR	258462	CompoundStatement		90:0:2593:2766	258460	0					
ANR	258463	IfStatement	if ( ! isValid ( ) || ! m_config -> hasGroup ( m_backend ) )		258460	0					
ANR	258464	Condition	! isValid ( ) || ! m_config -> hasGroup ( m_backend )	91:8:2603:2646	258460	0	True				
ANR	258465	OrExpression	! isValid ( ) || ! m_config -> hasGroup ( m_backend )		258460	0		||			
ANR	258466	UnaryOperationExpression	! isValid ( )		258460	0					
ANR	258467	UnaryOperator	!		258460	0					
ANR	258468	CallExpression	isValid ( )		258460	1					
ANR	258469	Callee	isValid		258460	0					
ANR	258470	Identifier	isValid		258460	0					
ANR	258471	ArgumentList			258460	1					
ANR	258472	UnaryOperationExpression	! m_config -> hasGroup ( m_backend )		258460	1					
ANR	258473	UnaryOperator	!		258460	0					
ANR	258474	CallExpression	m_config -> hasGroup ( m_backend )		258460	1					
ANR	258475	Callee	m_config -> hasGroup		258460	0					
ANR	258476	PtrMemberAccess	m_config -> hasGroup		258460	0					
ANR	258477	Identifier	m_config		258460	0					
ANR	258478	Identifier	hasGroup		258460	1					
ANR	258479	ArgumentList	m_backend		258460	1					
ANR	258480	Argument	m_backend		258460	0					
ANR	258481	Identifier	m_backend		258460	0					
ANR	258482	CompoundStatement		2:54:55:55	258460	1					
ANR	258483	ReturnStatement	return QString ( ) ;	92:8:2659:2675	258460	0	True				
ANR	258484	CallExpression	QString ( )		258460	0					
ANR	258485	Callee	QString		258460	0					
ANR	258486	Identifier	QString		258460	0					
ANR	258487	ArgumentList			258460	1					
ANR	258488	ElseStatement	else		258460	0					
ANR	258489	CompoundStatement		4:11:94:94	258460	0					
ANR	258490	ReturnStatement	"return m_config -> group ( m_backend ) . readEntry ( ""BatchCommands"" ) ;"	94:8:2698:2758	258460	0	True				
ANR	258491	CallExpression	"m_config -> group ( m_backend ) . readEntry ( ""BatchCommands"" )"		258460	0					
ANR	258492	Callee	m_config -> group ( m_backend ) . readEntry		258460	0					
ANR	258493	MemberAccess	m_config -> group ( m_backend ) . readEntry		258460	0					
ANR	258494	CallExpression	m_config -> group ( m_backend )		258460	0					
ANR	258495	Callee	m_config -> group		258460	0					
ANR	258496	PtrMemberAccess	m_config -> group		258460	0					
ANR	258497	Identifier	m_config		258460	0					
ANR	258498	Identifier	group		258460	1					
ANR	258499	ArgumentList	m_backend		258460	1					
ANR	258500	Argument	m_backend		258460	0					
ANR	258501	Identifier	m_backend		258460	0					
ANR	258502	Identifier	readEntry		258460	1					
ANR	258503	ArgumentList	"""BatchCommands"""		258460	1					
ANR	258504	Argument	"""BatchCommands"""		258460	0					
ANR	258505	PrimaryExpression	"""BatchCommands"""		258460	0					
ANR	258506	ReturnType	QString		258460	1					
ANR	258507	Identifier	Debugger :: backtraceBatchCommands		258460	2					
ANR	258508	ParameterList			258460	3					
ANR	258509	CFGEntryNode	ENTRY		258460		True				
ANR	258510	CFGExitNode	EXIT		258460		True				
ANR	258511	Symbol	* m_config		258460						
ANR	258512	Symbol	QString		258460						
ANR	258513	Symbol	m_backend		258460						
ANR	258514	Symbol	m_config -> group		258460						
ANR	258515	Symbol	m_config -> hasGroup		258460						
ANR	258516	Symbol	isValid		258460						
ANR	258517	Symbol	m_config -> group ( m_backend ) . readEntry		258460						
ANR	258518	Symbol	m_config		258460						
ANR	258519	Function	Debugger :: runInTerminal	98:0:2769:2977							
ANR	258520	FunctionDef	Debugger :: runInTerminal ()		258519	0					
ANR	258521	CompoundStatement		99:0:2806:2977	258519	0					
ANR	258522	IfStatement	if ( ! isValid ( ) || ! m_config -> hasGroup ( m_backend ) )		258519	0					
ANR	258523	Condition	! isValid ( ) || ! m_config -> hasGroup ( m_backend )	100:8:2816:2859	258519	0	True				
ANR	258524	OrExpression	! isValid ( ) || ! m_config -> hasGroup ( m_backend )		258519	0		||			
ANR	258525	UnaryOperationExpression	! isValid ( )		258519	0					
ANR	258526	UnaryOperator	!		258519	0					
ANR	258527	CallExpression	isValid ( )		258519	1					
ANR	258528	Callee	isValid		258519	0					
ANR	258529	Identifier	isValid		258519	0					
ANR	258530	ArgumentList			258519	1					
ANR	258531	UnaryOperationExpression	! m_config -> hasGroup ( m_backend )		258519	1					
ANR	258532	UnaryOperator	!		258519	0					
ANR	258533	CallExpression	m_config -> hasGroup ( m_backend )		258519	1					
ANR	258534	Callee	m_config -> hasGroup		258519	0					
ANR	258535	PtrMemberAccess	m_config -> hasGroup		258519	0					
ANR	258536	Identifier	m_config		258519	0					
ANR	258537	Identifier	hasGroup		258519	1					
ANR	258538	ArgumentList	m_backend		258519	1					
ANR	258539	Argument	m_backend		258519	0					
ANR	258540	Identifier	m_backend		258519	0					
ANR	258541	CompoundStatement		2:54:55:55	258519	1					
ANR	258542	ReturnStatement	return false ;	101:8:2872:2884	258519	0	True				
ANR	258543	Identifier	false		258519	0					
ANR	258544	ElseStatement	else		258519	0					
ANR	258545	CompoundStatement		4:11:90:90	258519	0					
ANR	258546	ReturnStatement	"return m_config -> group ( m_backend ) . readEntry ( ""Terminal"" , false ) ;"	103:8:2907:2969	258519	0	True				
ANR	258547	CallExpression	"m_config -> group ( m_backend ) . readEntry ( ""Terminal"" , false )"		258519	0					
ANR	258548	Callee	m_config -> group ( m_backend ) . readEntry		258519	0					
ANR	258549	MemberAccess	m_config -> group ( m_backend ) . readEntry		258519	0					
ANR	258550	CallExpression	m_config -> group ( m_backend )		258519	0					
ANR	258551	Callee	m_config -> group		258519	0					
ANR	258552	PtrMemberAccess	m_config -> group		258519	0					
ANR	258553	Identifier	m_config		258519	0					
ANR	258554	Identifier	group		258519	1					
ANR	258555	ArgumentList	m_backend		258519	1					
ANR	258556	Argument	m_backend		258519	0					
ANR	258557	Identifier	m_backend		258519	0					
ANR	258558	Identifier	readEntry		258519	1					
ANR	258559	ArgumentList	"""Terminal"""		258519	1					
ANR	258560	Argument	"""Terminal"""		258519	0					
ANR	258561	PrimaryExpression	"""Terminal"""		258519	0					
ANR	258562	Argument	false		258519	1					
ANR	258563	Identifier	false		258519	0					
ANR	258564	ReturnType	bool		258519	1					
ANR	258565	Identifier	Debugger :: runInTerminal		258519	2					
ANR	258566	ParameterList			258519	3					
ANR	258567	CFGEntryNode	ENTRY		258519		True				
ANR	258568	CFGExitNode	EXIT		258519		True				
ANR	258569	Symbol	* m_config		258519						
ANR	258570	Symbol	m_backend		258519						
ANR	258571	Symbol	m_config -> group		258519						
ANR	258572	Symbol	m_config -> hasGroup		258519						
ANR	258573	Symbol	isValid		258519						
ANR	258574	Symbol	false		258519						
ANR	258575	Symbol	m_config -> group ( m_backend ) . readEntry		258519						
ANR	258576	Symbol	m_config		258519						
ANR	258577	Function	Debugger :: expandString	108:0:2989:3891							
ANR	258578	FunctionDef	"Debugger :: expandString (QString & str , ExpandStringUsage usage , const QString & tempFile)"		258577	0					
ANR	258579	CompoundStatement		109:0:3083:3891	258577	0					
ANR	258580	IdentifierDeclStatement	const CrashedApplication * appInfo = DrKonqi :: crashedApplication ( ) ;	110:4:3089:3154	258577	0	True				
ANR	258581	IdentifierDecl	* appInfo = DrKonqi :: crashedApplication ( )		258577	0					
ANR	258582	IdentifierDeclType	const CrashedApplication *		258577	0					
ANR	258583	Identifier	appInfo		258577	1					
ANR	258584	AssignmentExpression	* appInfo = DrKonqi :: crashedApplication ( )		258577	2		=			
ANR	258585	Identifier	appInfo		258577	0					
ANR	258586	CallExpression	DrKonqi :: crashedApplication ( )		258577	1					
ANR	258587	Callee	DrKonqi :: crashedApplication		258577	0					
ANR	258588	Identifier	DrKonqi :: crashedApplication		258577	0					
ANR	258589	ArgumentList			258577	1					
ANR	258590	IdentifierDeclStatement	"QHash < QString , QString > map ;"	111:4:3160:3187	258577	1	True				
ANR	258591	IdentifierDecl	map		258577	0					
ANR	258592	IdentifierDeclType	"QHash < QString , QString >"		258577	0					
ANR	258593	Identifier	map		258577	1					
ANR	258594	ExpressionStatement	"map [ QLatin1String ( ""progname"" ) ] = appInfo -> name ( )"	112:4:3193:3241	258577	2	True				
ANR	258595	AssignmentExpression	"map [ QLatin1String ( ""progname"" ) ] = appInfo -> name ( )"		258577	0		=			
ANR	258596	ArrayIndexing	"map [ QLatin1String ( ""progname"" ) ]"		258577	0					
ANR	258597	Identifier	map		258577	0					
ANR	258598	CallExpression	"QLatin1String ( ""progname"" )"		258577	1					
ANR	258599	Callee	QLatin1String		258577	0					
ANR	258600	Identifier	QLatin1String		258577	0					
ANR	258601	ArgumentList	"""progname"""		258577	1					
ANR	258602	Argument	"""progname"""		258577	0					
ANR	258603	PrimaryExpression	"""progname"""		258577	0					
ANR	258604	CallExpression	appInfo -> name ( )		258577	1					
ANR	258605	Callee	appInfo -> name		258577	0					
ANR	258606	PtrMemberAccess	appInfo -> name		258577	0					
ANR	258607	Identifier	appInfo		258577	0					
ANR	258608	Identifier	name		258577	1					
ANR	258609	ArgumentList			258577	1					
ANR	258610	ExpressionStatement	"map [ QLatin1String ( ""execname"" ) ] = appInfo -> fakeExecutableBaseName ( )"	113:4:3247:3313	258577	3	True				
ANR	258611	AssignmentExpression	"map [ QLatin1String ( ""execname"" ) ] = appInfo -> fakeExecutableBaseName ( )"		258577	0		=			
ANR	258612	ArrayIndexing	"map [ QLatin1String ( ""execname"" ) ]"		258577	0					
ANR	258613	Identifier	map		258577	0					
ANR	258614	CallExpression	"QLatin1String ( ""execname"" )"		258577	1					
ANR	258615	Callee	QLatin1String		258577	0					
ANR	258616	Identifier	QLatin1String		258577	0					
ANR	258617	ArgumentList	"""execname"""		258577	1					
ANR	258618	Argument	"""execname"""		258577	0					
ANR	258619	PrimaryExpression	"""execname"""		258577	0					
ANR	258620	CallExpression	appInfo -> fakeExecutableBaseName ( )		258577	1					
ANR	258621	Callee	appInfo -> fakeExecutableBaseName		258577	0					
ANR	258622	PtrMemberAccess	appInfo -> fakeExecutableBaseName		258577	0					
ANR	258623	Identifier	appInfo		258577	0					
ANR	258624	Identifier	fakeExecutableBaseName		258577	1					
ANR	258625	ArgumentList			258577	1					
ANR	258626	ExpressionStatement	"map [ QLatin1String ( ""execpath"" ) ] = appInfo -> executable ( ) . absoluteFilePath ( )"	114:4:3319:3392	258577	4	True				
ANR	258627	AssignmentExpression	"map [ QLatin1String ( ""execpath"" ) ] = appInfo -> executable ( ) . absoluteFilePath ( )"		258577	0		=			
ANR	258628	ArrayIndexing	"map [ QLatin1String ( ""execpath"" ) ]"		258577	0					
ANR	258629	Identifier	map		258577	0					
ANR	258630	CallExpression	"QLatin1String ( ""execpath"" )"		258577	1					
ANR	258631	Callee	QLatin1String		258577	0					
ANR	258632	Identifier	QLatin1String		258577	0					
ANR	258633	ArgumentList	"""execpath"""		258577	1					
ANR	258634	Argument	"""execpath"""		258577	0					
ANR	258635	PrimaryExpression	"""execpath"""		258577	0					
ANR	258636	CallExpression	appInfo -> executable ( ) . absoluteFilePath ( )		258577	1					
ANR	258637	Callee	appInfo -> executable ( ) . absoluteFilePath		258577	0					
ANR	258638	MemberAccess	appInfo -> executable ( ) . absoluteFilePath		258577	0					
ANR	258639	CallExpression	appInfo -> executable ( )		258577	0					
ANR	258640	Callee	appInfo -> executable		258577	0					
ANR	258641	PtrMemberAccess	appInfo -> executable		258577	0					
ANR	258642	Identifier	appInfo		258577	0					
ANR	258643	Identifier	executable		258577	1					
ANR	258644	ArgumentList			258577	1					
ANR	258645	Identifier	absoluteFilePath		258577	1					
ANR	258646	ArgumentList			258577	1					
ANR	258647	ExpressionStatement	"map [ QLatin1String ( ""signum"" ) ] = QString :: number ( appInfo -> signalNumber ( ) )"	115:4:3398:3469	258577	5	True				
ANR	258648	AssignmentExpression	"map [ QLatin1String ( ""signum"" ) ] = QString :: number ( appInfo -> signalNumber ( ) )"		258577	0		=			
ANR	258649	ArrayIndexing	"map [ QLatin1String ( ""signum"" ) ]"		258577	0					
ANR	258650	Identifier	map		258577	0					
ANR	258651	CallExpression	"QLatin1String ( ""signum"" )"		258577	1					
ANR	258652	Callee	QLatin1String		258577	0					
ANR	258653	Identifier	QLatin1String		258577	0					
ANR	258654	ArgumentList	"""signum"""		258577	1					
ANR	258655	Argument	"""signum"""		258577	0					
ANR	258656	PrimaryExpression	"""signum"""		258577	0					
ANR	258657	CallExpression	QString :: number ( appInfo -> signalNumber ( ) )		258577	1					
ANR	258658	Callee	QString :: number		258577	0					
ANR	258659	Identifier	QString :: number		258577	0					
ANR	258660	ArgumentList	appInfo -> signalNumber ( )		258577	1					
ANR	258661	Argument	appInfo -> signalNumber ( )		258577	0					
ANR	258662	CallExpression	appInfo -> signalNumber ( )		258577	0					
ANR	258663	Callee	appInfo -> signalNumber		258577	0					
ANR	258664	PtrMemberAccess	appInfo -> signalNumber		258577	0					
ANR	258665	Identifier	appInfo		258577	0					
ANR	258666	Identifier	signalNumber		258577	1					
ANR	258667	ArgumentList			258577	1					
ANR	258668	ExpressionStatement	"map [ QLatin1String ( ""signame"" ) ] = appInfo -> signalName ( )"	116:4:3475:3528	258577	6	True				
ANR	258669	AssignmentExpression	"map [ QLatin1String ( ""signame"" ) ] = appInfo -> signalName ( )"		258577	0		=			
ANR	258670	ArrayIndexing	"map [ QLatin1String ( ""signame"" ) ]"		258577	0					
ANR	258671	Identifier	map		258577	0					
ANR	258672	CallExpression	"QLatin1String ( ""signame"" )"		258577	1					
ANR	258673	Callee	QLatin1String		258577	0					
ANR	258674	Identifier	QLatin1String		258577	0					
ANR	258675	ArgumentList	"""signame"""		258577	1					
ANR	258676	Argument	"""signame"""		258577	0					
ANR	258677	PrimaryExpression	"""signame"""		258577	0					
ANR	258678	CallExpression	appInfo -> signalName ( )		258577	1					
ANR	258679	Callee	appInfo -> signalName		258577	0					
ANR	258680	PtrMemberAccess	appInfo -> signalName		258577	0					
ANR	258681	Identifier	appInfo		258577	0					
ANR	258682	Identifier	signalName		258577	1					
ANR	258683	ArgumentList			258577	1					
ANR	258684	ExpressionStatement	"map [ QLatin1String ( ""pid"" ) ] = QString :: number ( appInfo -> pid ( ) )"	117:4:3534:3593	258577	7	True				
ANR	258685	AssignmentExpression	"map [ QLatin1String ( ""pid"" ) ] = QString :: number ( appInfo -> pid ( ) )"		258577	0		=			
ANR	258686	ArrayIndexing	"map [ QLatin1String ( ""pid"" ) ]"		258577	0					
ANR	258687	Identifier	map		258577	0					
ANR	258688	CallExpression	"QLatin1String ( ""pid"" )"		258577	1					
ANR	258689	Callee	QLatin1String		258577	0					
ANR	258690	Identifier	QLatin1String		258577	0					
ANR	258691	ArgumentList	"""pid"""		258577	1					
ANR	258692	Argument	"""pid"""		258577	0					
ANR	258693	PrimaryExpression	"""pid"""		258577	0					
ANR	258694	CallExpression	QString :: number ( appInfo -> pid ( ) )		258577	1					
ANR	258695	Callee	QString :: number		258577	0					
ANR	258696	Identifier	QString :: number		258577	0					
ANR	258697	ArgumentList	appInfo -> pid ( )		258577	1					
ANR	258698	Argument	appInfo -> pid ( )		258577	0					
ANR	258699	CallExpression	appInfo -> pid ( )		258577	0					
ANR	258700	Callee	appInfo -> pid		258577	0					
ANR	258701	PtrMemberAccess	appInfo -> pid		258577	0					
ANR	258702	Identifier	appInfo		258577	0					
ANR	258703	Identifier	pid		258577	1					
ANR	258704	ArgumentList			258577	1					
ANR	258705	ExpressionStatement	"map [ QLatin1String ( ""tempfile"" ) ] = tempFile"	118:4:3599:3640	258577	8	True				
ANR	258706	AssignmentExpression	"map [ QLatin1String ( ""tempfile"" ) ] = tempFile"		258577	0		=			
ANR	258707	ArrayIndexing	"map [ QLatin1String ( ""tempfile"" ) ]"		258577	0					
ANR	258708	Identifier	map		258577	0					
ANR	258709	CallExpression	"QLatin1String ( ""tempfile"" )"		258577	1					
ANR	258710	Callee	QLatin1String		258577	0					
ANR	258711	Identifier	QLatin1String		258577	0					
ANR	258712	ArgumentList	"""tempfile"""		258577	1					
ANR	258713	Argument	"""tempfile"""		258577	0					
ANR	258714	PrimaryExpression	"""tempfile"""		258577	0					
ANR	258715	Identifier	tempFile		258577	1					
ANR	258716	ExpressionStatement	"map [ QLatin1String ( ""thread"" ) ] = QString :: number ( appInfo -> thread ( ) )"	119:4:3646:3711	258577	9	True				
ANR	258717	AssignmentExpression	"map [ QLatin1String ( ""thread"" ) ] = QString :: number ( appInfo -> thread ( ) )"		258577	0		=			
ANR	258718	ArrayIndexing	"map [ QLatin1String ( ""thread"" ) ]"		258577	0					
ANR	258719	Identifier	map		258577	0					
ANR	258720	CallExpression	"QLatin1String ( ""thread"" )"		258577	1					
ANR	258721	Callee	QLatin1String		258577	0					
ANR	258722	Identifier	QLatin1String		258577	0					
ANR	258723	ArgumentList	"""thread"""		258577	1					
ANR	258724	Argument	"""thread"""		258577	0					
ANR	258725	PrimaryExpression	"""thread"""		258577	0					
ANR	258726	CallExpression	QString :: number ( appInfo -> thread ( ) )		258577	1					
ANR	258727	Callee	QString :: number		258577	0					
ANR	258728	Identifier	QString :: number		258577	0					
ANR	258729	ArgumentList	appInfo -> thread ( )		258577	1					
ANR	258730	Argument	appInfo -> thread ( )		258577	0					
ANR	258731	CallExpression	appInfo -> thread ( )		258577	0					
ANR	258732	Callee	appInfo -> thread		258577	0					
ANR	258733	PtrMemberAccess	appInfo -> thread		258577	0					
ANR	258734	Identifier	appInfo		258577	0					
ANR	258735	Identifier	thread		258577	1					
ANR	258736	ArgumentList			258577	1					
ANR	258737	IfStatement	if ( usage == ExpansionUsageShell )		258577	10					
ANR	258738	Condition	usage == ExpansionUsageShell	121:8:3722:3749	258577	0	True				
ANR	258739	EqualityExpression	usage == ExpansionUsageShell		258577	0		==			
ANR	258740	Identifier	usage		258577	0					
ANR	258741	Identifier	ExpansionUsageShell		258577	1					
ANR	258742	CompoundStatement		13:38:668:668	258577	1					
ANR	258743	ExpressionStatement	"str = KMacroExpander :: expandMacrosShellQuote ( str , map )"	122:8:3762:3816	258577	0	True				
ANR	258744	AssignmentExpression	"str = KMacroExpander :: expandMacrosShellQuote ( str , map )"		258577	0		=			
ANR	258745	Identifier	str		258577	0					
ANR	258746	CallExpression	"KMacroExpander :: expandMacrosShellQuote ( str , map )"		258577	1					
ANR	258747	Callee	KMacroExpander :: expandMacrosShellQuote		258577	0					
ANR	258748	Identifier	KMacroExpander :: expandMacrosShellQuote		258577	0					
ANR	258749	ArgumentList	str		258577	1					
ANR	258750	Argument	str		258577	0					
ANR	258751	Identifier	str		258577	0					
ANR	258752	Argument	map		258577	1					
ANR	258753	Identifier	map		258577	0					
ANR	258754	ElseStatement	else		258577	0					
ANR	258755	CompoundStatement		15:11:745:745	258577	0					
ANR	258756	ExpressionStatement	"str = KMacroExpander :: expandMacros ( str , map )"	124:8:3839:3883	258577	0	True				
ANR	258757	AssignmentExpression	"str = KMacroExpander :: expandMacros ( str , map )"		258577	0		=			
ANR	258758	Identifier	str		258577	0					
ANR	258759	CallExpression	"KMacroExpander :: expandMacros ( str , map )"		258577	1					
ANR	258760	Callee	KMacroExpander :: expandMacros		258577	0					
ANR	258761	Identifier	KMacroExpander :: expandMacros		258577	0					
ANR	258762	ArgumentList	str		258577	1					
ANR	258763	Argument	str		258577	0					
ANR	258764	Identifier	str		258577	0					
ANR	258765	Argument	map		258577	1					
ANR	258766	Identifier	map		258577	0					
ANR	258767	ReturnType	void		258577	1					
ANR	258768	Identifier	Debugger :: expandString		258577	2					
ANR	258769	ParameterList	"QString & str , ExpandStringUsage usage , const QString & tempFile"		258577	3					
ANR	258770	Parameter	QString & str	108:28:3017:3029	258577	0	True				
ANR	258771	ParameterType	QString &		258577	0					
ANR	258772	Identifier	str		258577	1					
ANR	258773	Parameter	ExpandStringUsage usage	108:43:3032:3054	258577	1	True				
ANR	258774	ParameterType	ExpandStringUsage		258577	0					
ANR	258775	Identifier	usage		258577	1					
ANR	258776	Parameter	const QString & tempFile	108:68:3057:3080	258577	2	True				
ANR	258777	ParameterType	const QString &		258577	0					
ANR	258778	Identifier	tempFile		258577	1					
ANR	258779	CFGEntryNode	ENTRY		258577		True				
ANR	258780	CFGExitNode	EXIT		258577		True				
ANR	258781	Symbol	appInfo -> executable		258577						
ANR	258782	Symbol	* QLatin1String		258577						
ANR	258783	Symbol	appInfo -> pid		258577						
ANR	258784	Symbol	KMacroExpander :: expandMacrosShellQuote		258577						
ANR	258785	Symbol	* map		258577						
ANR	258786	Symbol	usage		258577						
ANR	258787	Symbol	appInfo		258577						
ANR	258788	Symbol	appInfo -> signalName		258577						
ANR	258789	Symbol	appInfo -> fakeExecutableBaseName		258577						
ANR	258790	Symbol	appInfo -> executable ( ) . absoluteFilePath		258577						
ANR	258791	Symbol	ExpansionUsageShell		258577						
ANR	258792	Symbol	QString :: number		258577						
ANR	258793	Symbol	appInfo -> signalNumber		258577						
ANR	258794	Symbol	str		258577						
ANR	258795	Symbol	QLatin1String		258577						
ANR	258796	Symbol	* appInfo		258577						
ANR	258797	Symbol	KMacroExpander :: expandMacros		258577						
ANR	258798	Symbol	appInfo -> name		258577						
ANR	258799	Symbol	DrKonqi :: crashedApplication		258577						
ANR	258800	Symbol	appInfo -> thread		258577						
ANR	258801	Symbol	tempFile		258577						
ANR	258802	Symbol	map		258577						
ANR	258803	Function	Debugger :: availableDebuggers	129:0:3903:4565							
ANR	258804	FunctionDef	"Debugger :: availableDebuggers (const QString & path , const QString & backend)"		258803	0					
ANR	258805	CompoundStatement		130:0:3995:4565	258803	0					
ANR	258806	IdentifierDeclStatement	"QString debuggerDir = QStandardPaths :: locate ( QStandardPaths :: DataLocation , path , QStandardPaths :: LocateDirectory ) ;"	131:4:4001:4114	258803	0	True				
ANR	258807	IdentifierDecl	"debuggerDir = QStandardPaths :: locate ( QStandardPaths :: DataLocation , path , QStandardPaths :: LocateDirectory )"		258803	0					
ANR	258808	IdentifierDeclType	QString		258803	0					
ANR	258809	Identifier	debuggerDir		258803	1					
ANR	258810	AssignmentExpression	"debuggerDir = QStandardPaths :: locate ( QStandardPaths :: DataLocation , path , QStandardPaths :: LocateDirectory )"		258803	2		=			
ANR	258811	Identifier	debuggerDir		258803	0					
ANR	258812	CallExpression	"QStandardPaths :: locate ( QStandardPaths :: DataLocation , path , QStandardPaths :: LocateDirectory )"		258803	1					
ANR	258813	Callee	QStandardPaths :: locate		258803	0					
ANR	258814	Identifier	QStandardPaths :: locate		258803	0					
ANR	258815	ArgumentList	QStandardPaths :: DataLocation		258803	1					
ANR	258816	Argument	QStandardPaths :: DataLocation		258803	0					
ANR	258817	Identifier	QStandardPaths :: DataLocation		258803	0					
ANR	258818	Argument	path		258803	1					
ANR	258819	Identifier	path		258803	0					
ANR	258820	Argument	QStandardPaths :: LocateDirectory		258803	2					
ANR	258821	Identifier	QStandardPaths :: LocateDirectory		258803	0					
ANR	258822	IdentifierDeclStatement	QStringList debuggers = QDir ( debuggerDir ) . entryList ( QDir :: Files ) ;	132:4:4120:4184	258803	1	True				
ANR	258823	IdentifierDecl	debuggers = QDir ( debuggerDir ) . entryList ( QDir :: Files )		258803	0					
ANR	258824	IdentifierDeclType	QStringList		258803	0					
ANR	258825	Identifier	debuggers		258803	1					
ANR	258826	AssignmentExpression	debuggers = QDir ( debuggerDir ) . entryList ( QDir :: Files )		258803	2		=			
ANR	258827	Identifier	debuggers		258803	0					
ANR	258828	CallExpression	QDir ( debuggerDir ) . entryList ( QDir :: Files )		258803	1					
ANR	258829	Callee	QDir ( debuggerDir ) . entryList		258803	0					
ANR	258830	MemberAccess	QDir ( debuggerDir ) . entryList		258803	0					
ANR	258831	CallExpression	QDir ( debuggerDir )		258803	0					
ANR	258832	Callee	QDir		258803	0					
ANR	258833	Identifier	QDir		258803	0					
ANR	258834	ArgumentList	debuggerDir		258803	1					
ANR	258835	Argument	debuggerDir		258803	0					
ANR	258836	Identifier	debuggerDir		258803	0					
ANR	258837	Identifier	entryList		258803	1					
ANR	258838	ArgumentList	QDir :: Files		258803	1					
ANR	258839	Argument	QDir :: Files		258803	0					
ANR	258840	Identifier	QDir :: Files		258803	0					
ANR	258841	IdentifierDeclStatement	QList < Debugger > result ;	134:4:4191:4213	258803	2	True				
ANR	258842	IdentifierDecl	result		258803	0					
ANR	258843	IdentifierDeclType	QList < Debugger >		258803	0					
ANR	258844	Identifier	result		258803	1					
ANR	258845	Statement	foreach	135:4:4219:4225	258803	3	True				
ANR	258846	Statement	(	135:12:4227:4227	258803	4	True				
ANR	258847	Statement	const	135:13:4228:4232	258803	5	True				
ANR	258848	Statement	QString	135:19:4234:4240	258803	6	True				
ANR	258849	Statement	&	135:27:4242:4242	258803	7	True				
ANR	258850	Statement	debuggerFile	135:29:4244:4255	258803	8	True				
ANR	258851	Statement	","	135:41:4256:4256	258803	9	True				
ANR	258852	Statement	debuggers	135:43:4258:4266	258803	10	True				
ANR	258853	Statement	)	135:52:4267:4267	258803	11	True				
ANR	258854	CompoundStatement		7:8:283:300	258803	12					
ANR	258855	IdentifierDeclStatement	Debugger debugger ;	136:8:4279:4296	258803	0	True				
ANR	258856	IdentifierDecl	debugger		258803	0					
ANR	258857	IdentifierDeclType	Debugger		258803	0					
ANR	258858	Identifier	debugger		258803	1					
ANR	258859	ExpressionStatement	debugger . m_config = KSharedConfig :: openConfig ( debuggerDir + '/' + debuggerFile )	137:8:4306:4383	258803	1	True				
ANR	258860	AssignmentExpression	debugger . m_config = KSharedConfig :: openConfig ( debuggerDir + '/' + debuggerFile )		258803	0		=			
ANR	258861	MemberAccess	debugger . m_config		258803	0					
ANR	258862	Identifier	debugger		258803	0					
ANR	258863	Identifier	m_config		258803	1					
ANR	258864	CallExpression	KSharedConfig :: openConfig ( debuggerDir + '/' + debuggerFile )		258803	1					
ANR	258865	Callee	KSharedConfig :: openConfig		258803	0					
ANR	258866	Identifier	KSharedConfig :: openConfig		258803	0					
ANR	258867	ArgumentList	debuggerDir + '/' + debuggerFile		258803	1					
ANR	258868	Argument	debuggerDir + '/' + debuggerFile		258803	0					
ANR	258869	AdditiveExpression	debuggerDir + '/' + debuggerFile		258803	0		+			
ANR	258870	Identifier	debuggerDir		258803	0					
ANR	258871	AdditiveExpression	'/' + debuggerFile		258803	1		+			
ANR	258872	PrimaryExpression	'/'		258803	0					
ANR	258873	Identifier	debuggerFile		258803	1					
ANR	258874	IfStatement	if ( debugger . supportedBackends ( ) . contains ( backend ) )		258803	2					
ANR	258875	Condition	debugger . supportedBackends ( ) . contains ( backend )	138:12:4397:4442	258803	0	True				
ANR	258876	CallExpression	debugger . supportedBackends ( ) . contains ( backend )		258803	0					
ANR	258877	Callee	debugger . supportedBackends ( ) . contains		258803	0					
ANR	258878	MemberAccess	debugger . supportedBackends ( ) . contains		258803	0					
ANR	258879	CallExpression	debugger . supportedBackends ( )		258803	0					
ANR	258880	Callee	debugger . supportedBackends		258803	0					
ANR	258881	MemberAccess	debugger . supportedBackends		258803	0					
ANR	258882	Identifier	debugger		258803	0					
ANR	258883	Identifier	supportedBackends		258803	1					
ANR	258884	ArgumentList			258803	1					
ANR	258885	Identifier	contains		258803	1					
ANR	258886	ArgumentList	backend		258803	1					
ANR	258887	Argument	backend		258803	0					
ANR	258888	Identifier	backend		258803	0					
ANR	258889	CompoundStatement		9:60:449:449	258803	1					
ANR	258890	ExpressionStatement	debugger . setUsedBackend ( backend )	139:12:4459:4491	258803	0	True				
ANR	258891	CallExpression	debugger . setUsedBackend ( backend )		258803	0					
ANR	258892	Callee	debugger . setUsedBackend		258803	0					
ANR	258893	MemberAccess	debugger . setUsedBackend		258803	0					
ANR	258894	Identifier	debugger		258803	0					
ANR	258895	Identifier	setUsedBackend		258803	1					
ANR	258896	ArgumentList	backend		258803	1					
ANR	258897	Argument	backend		258803	0					
ANR	258898	Identifier	backend		258803	0					
ANR	258899	ExpressionStatement	result . append ( debugger )	140:12:4505:4528	258803	1	True				
ANR	258900	CallExpression	result . append ( debugger )		258803	0					
ANR	258901	Callee	result . append		258803	0					
ANR	258902	MemberAccess	result . append		258803	0					
ANR	258903	Identifier	result		258803	0					
ANR	258904	Identifier	append		258803	1					
ANR	258905	ArgumentList	debugger		258803	1					
ANR	258906	Argument	debugger		258803	0					
ANR	258907	Identifier	debugger		258803	0					
ANR	258908	ReturnStatement	return result ;	143:4:4550:4563	258803	13	True				
ANR	258909	Identifier	result		258803	0					
ANR	258910	ReturnType	QList < Debugger >		258803	1					
ANR	258911	Identifier	Debugger :: availableDebuggers		258803	2					
ANR	258912	ParameterList	"const QString & path , const QString & backend"		258803	3					
ANR	258913	Parameter	const QString & path	129:45:3948:3967	258803	0	True				
ANR	258914	ParameterType	const QString &		258803	0					
ANR	258915	Identifier	path		258803	1					
ANR	258916	Parameter	const QString & backend	129:67:3970:3992	258803	1	True				
ANR	258917	ParameterType	const QString &		258803	0					
ANR	258918	Identifier	backend		258803	1					
ANR	258919	CFGEntryNode	ENTRY		258803		True				
ANR	258920	CFGExitNode	EXIT		258803		True				
ANR	258921	Symbol	debugger . m_config		258803						
ANR	258922	Symbol	debugger . supportedBackends ( ) . contains		258803						
ANR	258923	Symbol	QStandardPaths :: locate		258803						
ANR	258924	Symbol	debuggerFile		258803						
ANR	258925	Symbol	debugger . supportedBackends		258803						
ANR	258926	Symbol	debuggers		258803						
ANR	258927	Symbol	debugger		258803						
ANR	258928	Symbol	QStandardPaths :: DataLocation		258803						
ANR	258929	Symbol	result		258803						
ANR	258930	Symbol	path		258803						
ANR	258931	Symbol	QDir :: Files		258803						
ANR	258932	Symbol	QDir ( debuggerDir ) . entryList		258803						
ANR	258933	Symbol	KSharedConfig :: openConfig		258803						
ANR	258934	Symbol	debuggerDir		258803						
ANR	258935	Symbol	QDir		258803						
ANR	258936	Symbol	backend		258803						
ANR	258937	Symbol	QStandardPaths :: LocateDirectory		258803						
