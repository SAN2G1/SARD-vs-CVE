command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	680641	File	data/converged/CVE-2018-6791_plasma-workspace/shell_containmentconfigview.cpp								
ANR	680642	Function	ContainmentConfigView :: ContainmentConfigView	45:1:1374:2289							
ANR	680643	FunctionDef	"ContainmentConfigView :: ContainmentConfigView (Plasma :: Containment * cont , QWindow * parent)"		680642	0					
ANR	680644	CompoundStatement		57:0:1832:2289	680642	0					
ANR	680645	Statement	qmlRegisterType	58:4:1838:1852	680642	0	True				
ANR	680646	Statement	<	58:19:1853:1853	680642	1	True				
ANR	680647	Statement	QAbstractItemModel	58:20:1854:1871	680642	2	True				
ANR	680648	Statement	>	58:38:1872:1872	680642	3	True				
ANR	680649	Statement	(	58:39:1873:1873	680642	4	True				
ANR	680650	Statement	)	58:40:1874:1874	680642	5	True				
ANR	680651	ExpressionStatement		58:41:1875:1875	680642	6	True				
ANR	680652	ExpressionStatement	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""configDialog"" ) , this )"	59:4:1881:1952	680642	7	True				
ANR	680653	CallExpression	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""configDialog"" ) , this )"		680642	0					
ANR	680654	Callee	rootContext ( ) -> setContextProperty		680642	0					
ANR	680655	PtrMemberAccess	rootContext ( ) -> setContextProperty		680642	0					
ANR	680656	CallExpression	rootContext ( )		680642	0					
ANR	680657	Callee	rootContext		680642	0					
ANR	680658	Identifier	rootContext		680642	0					
ANR	680659	ArgumentList			680642	1					
ANR	680660	Identifier	setContextProperty		680642	1					
ANR	680661	ArgumentList	"QStringLiteral ( ""configDialog"" )"		680642	1					
ANR	680662	Argument	"QStringLiteral ( ""configDialog"" )"		680642	0					
ANR	680663	CallExpression	"QStringLiteral ( ""configDialog"" )"		680642	0					
ANR	680664	Callee	QStringLiteral		680642	0					
ANR	680665	Identifier	QStringLiteral		680642	0					
ANR	680666	ArgumentList	"""configDialog"""		680642	1					
ANR	680667	Argument	"""configDialog"""		680642	0					
ANR	680668	PrimaryExpression	"""configDialog"""		680642	0					
ANR	680669	Argument	this		680642	1					
ANR	680670	Identifier	this		680642	0					
ANR	680671	ExpressionStatement	setCurrentWallpaper ( cont -> containment ( ) -> wallpaper ( ) )	60:4:1958:2011	680642	8	True				
ANR	680672	CallExpression	setCurrentWallpaper ( cont -> containment ( ) -> wallpaper ( ) )		680642	0					
ANR	680673	Callee	setCurrentWallpaper		680642	0					
ANR	680674	Identifier	setCurrentWallpaper		680642	0					
ANR	680675	ArgumentList	cont -> containment ( ) -> wallpaper ( )		680642	1					
ANR	680676	Argument	cont -> containment ( ) -> wallpaper ( )		680642	0					
ANR	680677	CallExpression	cont -> containment ( ) -> wallpaper ( )		680642	0					
ANR	680678	Callee	cont -> containment ( ) -> wallpaper		680642	0					
ANR	680679	PtrMemberAccess	cont -> containment ( ) -> wallpaper		680642	0					
ANR	680680	CallExpression	cont -> containment ( )		680642	0					
ANR	680681	Callee	cont -> containment		680642	0					
ANR	680682	PtrMemberAccess	cont -> containment		680642	0					
ANR	680683	Identifier	cont		680642	0					
ANR	680684	Identifier	containment		680642	1					
ANR	680685	ArgumentList			680642	1					
ANR	680686	Identifier	wallpaper		680642	1					
ANR	680687	ArgumentList			680642	1					
ANR	680688	IdentifierDeclStatement	"KPackage :: Package pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Wallpaper"" ) ) ;"	62:4:2018:2122	680642	9	True				
ANR	680689	IdentifierDecl	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Wallpaper"" ) )"		680642	0					
ANR	680690	IdentifierDeclType	KPackage :: Package		680642	0					
ANR	680691	Identifier	pkg		680642	1					
ANR	680692	AssignmentExpression	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Wallpaper"" ) )"		680642	2		=			
ANR	680693	Identifier	pkg		680642	0					
ANR	680694	CallExpression	"KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Wallpaper"" ) )"		680642	1					
ANR	680695	Callee	KPackage :: PackageLoader :: self ( ) -> loadPackage		680642	0					
ANR	680696	PtrMemberAccess	KPackage :: PackageLoader :: self ( ) -> loadPackage		680642	0					
ANR	680697	CallExpression	KPackage :: PackageLoader :: self ( )		680642	0					
ANR	680698	Callee	KPackage :: PackageLoader :: self		680642	0					
ANR	680699	Identifier	KPackage :: PackageLoader :: self		680642	0					
ANR	680700	ArgumentList			680642	1					
ANR	680701	Identifier	loadPackage		680642	1					
ANR	680702	ArgumentList	"QStringLiteral ( ""Plasma/Wallpaper"" )"		680642	1					
ANR	680703	Argument	"QStringLiteral ( ""Plasma/Wallpaper"" )"		680642	0					
ANR	680704	CallExpression	"QStringLiteral ( ""Plasma/Wallpaper"" )"		680642	0					
ANR	680705	Callee	QStringLiteral		680642	0					
ANR	680706	Identifier	QStringLiteral		680642	0					
ANR	680707	ArgumentList	"""Plasma/Wallpaper"""		680642	1					
ANR	680708	Argument	"""Plasma/Wallpaper"""		680642	0					
ANR	680709	PrimaryExpression	"""Plasma/Wallpaper"""		680642	0					
ANR	680710	ExpressionStatement	pkg . setPath ( m_containment -> wallpaper ( ) )	63:4:2128:2167	680642	10	True				
ANR	680711	CallExpression	pkg . setPath ( m_containment -> wallpaper ( ) )		680642	0					
ANR	680712	Callee	pkg . setPath		680642	0					
ANR	680713	MemberAccess	pkg . setPath		680642	0					
ANR	680714	Identifier	pkg		680642	0					
ANR	680715	Identifier	setPath		680642	1					
ANR	680716	ArgumentList	m_containment -> wallpaper ( )		680642	1					
ANR	680717	Argument	m_containment -> wallpaper ( )		680642	0					
ANR	680718	CallExpression	m_containment -> wallpaper ( )		680642	0					
ANR	680719	Callee	m_containment -> wallpaper		680642	0					
ANR	680720	PtrMemberAccess	m_containment -> wallpaper		680642	0					
ANR	680721	Identifier	m_containment		680642	0					
ANR	680722	Identifier	wallpaper		680642	1					
ANR	680723	ArgumentList			680642	1					
ANR	680724	IdentifierDeclStatement	KConfigGroup cfg = m_containment -> config ( ) ;	64:4:2173:2215	680642	11	True				
ANR	680725	IdentifierDecl	cfg = m_containment -> config ( )		680642	0					
ANR	680726	IdentifierDeclType	KConfigGroup		680642	0					
ANR	680727	Identifier	cfg		680642	1					
ANR	680728	AssignmentExpression	cfg = m_containment -> config ( )		680642	2		=			
ANR	680729	Identifier	cfg		680642	0					
ANR	680730	CallExpression	m_containment -> config ( )		680642	1					
ANR	680731	Callee	m_containment -> config		680642	0					
ANR	680732	PtrMemberAccess	m_containment -> config		680642	0					
ANR	680733	Identifier	m_containment		680642	0					
ANR	680734	Identifier	config		680642	1					
ANR	680735	ArgumentList			680642	1					
ANR	680736	ExpressionStatement	"cfg = KConfigGroup ( & cfg , ""Wallpaper"" )"	65:4:2221:2258	680642	12	True				
ANR	680737	AssignmentExpression	"cfg = KConfigGroup ( & cfg , ""Wallpaper"" )"		680642	0		=			
ANR	680738	Identifier	cfg		680642	0					
ANR	680739	CallExpression	"KConfigGroup ( & cfg , ""Wallpaper"" )"		680642	1					
ANR	680740	Callee	KConfigGroup		680642	0					
ANR	680741	Identifier	KConfigGroup		680642	0					
ANR	680742	ArgumentList	& cfg		680642	1					
ANR	680743	Argument	& cfg		680642	0					
ANR	680744	UnaryOperationExpression	& cfg		680642	0					
ANR	680745	UnaryOperator	&		680642	0					
ANR	680746	Identifier	cfg		680642	1					
ANR	680747	Argument	"""Wallpaper"""		680642	1					
ANR	680748	PrimaryExpression	"""Wallpaper"""		680642	0					
ANR	680749	ExpressionStatement	syncWallpaperObjects ( )	67:4:2265:2287	680642	13	True				
ANR	680750	CallExpression	syncWallpaperObjects ( )		680642	0					
ANR	680751	Callee	syncWallpaperObjects		680642	0					
ANR	680752	Identifier	syncWallpaperObjects		680642	0					
ANR	680753	ArgumentList			680642	1					
ANR	680754	ReturnType	include < KPackage / PackageLoader >		680642	1					
ANR	680755	Identifier	ContainmentConfigView :: ContainmentConfigView		680642	2					
ANR	680756	ParameterList	"Plasma :: Containment * cont , QWindow * parent"		680642	3					
ANR	680757	Parameter	Plasma :: Containment * cont	48:45:1505:1529	680642	0	True				
ANR	680758	ParameterType	Plasma :: Containment *		680642	0					
ANR	680759	Identifier	cont		680642	1					
ANR	680760	Parameter	QWindow * parent	48:72:1532:1546	680642	1	True				
ANR	680761	ParameterType	QWindow *		680642	0					
ANR	680762	Identifier	parent		680642	1					
ANR	680763	CFGEntryNode	ENTRY		680642		True				
ANR	680764	CFGExitNode	EXIT		680642		True				
ANR	680765	Symbol	m_containment -> wallpaper		680642						
ANR	680766	Symbol	parent		680642						
ANR	680767	Symbol	cont -> containment ( ) -> wallpaper		680642						
ANR	680768	Symbol	KPackage :: PackageLoader :: self		680642						
ANR	680769	Symbol	* KPackage :: PackageLoader :: self		680642						
ANR	680770	Symbol	cfg		680642						
ANR	680771	Symbol	m_containment -> config		680642						
ANR	680772	Symbol	this		680642						
ANR	680773	Symbol	cont -> containment		680642						
ANR	680774	Symbol	* * cont		680642						
ANR	680775	Symbol	pkg		680642						
ANR	680776	Symbol	& cfg		680642						
ANR	680777	Symbol	* cont -> containment		680642						
ANR	680778	Symbol	* cont		680642						
ANR	680779	Symbol	* m_containment		680642						
ANR	680780	Symbol	m_containment		680642						
ANR	680781	Symbol	QStringLiteral		680642						
ANR	680782	Symbol	cont		680642						
ANR	680783	Symbol	KPackage :: PackageLoader :: self ( ) -> loadPackage		680642						
ANR	680784	Symbol	rootContext		680642						
ANR	680785	Symbol	KConfigGroup		680642						
ANR	680786	Function	ContainmentConfigView :: ~ContainmentConfigView	70:0:2292:2342							
ANR	680787	FunctionDef	ContainmentConfigView :: ~ContainmentConfigView ()		680786	0					
ANR	680788	CompoundStatement		71:0:2340:2342	680786	0					
ANR	680789	Identifier	ContainmentConfigView :: ~ContainmentConfigView		680786	1					
ANR	680790	ParameterList			680786	2					
ANR	680791	CFGEntryNode	ENTRY		680786		True				
ANR	680792	CFGExitNode	EXIT		680786		True				
ANR	680793	Function	ContainmentConfigView :: init	74:0:2345:2494							
ANR	680794	FunctionDef	ContainmentConfigView :: init ()		680793	0					
ANR	680795	CompoundStatement		75:0:2380:2494	680793	0					
ANR	680796	ExpressionStatement	"setSource ( QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" ) ) )"	76:4:2386:2492	680793	0	True				
ANR	680797	CallExpression	"setSource ( QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" ) ) )"		680793	0					
ANR	680798	Callee	setSource		680793	0					
ANR	680799	Identifier	setSource		680793	0					
ANR	680800	ArgumentList	"QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" ) )"		680793	1					
ANR	680801	Argument	"QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" ) )"		680793	0					
ANR	680802	CallExpression	"QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" ) )"		680793	0					
ANR	680803	Callee	QUrl :: fromLocalFile		680793	0					
ANR	680804	Identifier	QUrl :: fromLocalFile		680793	0					
ANR	680805	ArgumentList	"m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" )"		680793	1					
ANR	680806	Argument	"m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" )"		680793	0					
ANR	680807	CallExpression	"m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""containmentconfigurationui"" )"		680793	0					
ANR	680808	Callee	m_containment -> corona ( ) -> kPackage ( ) . filePath		680793	0					
ANR	680809	MemberAccess	m_containment -> corona ( ) -> kPackage ( ) . filePath		680793	0					
ANR	680810	CallExpression	m_containment -> corona ( ) -> kPackage ( )		680793	0					
ANR	680811	Callee	m_containment -> corona ( ) -> kPackage		680793	0					
ANR	680812	PtrMemberAccess	m_containment -> corona ( ) -> kPackage		680793	0					
ANR	680813	CallExpression	m_containment -> corona ( )		680793	0					
ANR	680814	Callee	m_containment -> corona		680793	0					
ANR	680815	PtrMemberAccess	m_containment -> corona		680793	0					
ANR	680816	Identifier	m_containment		680793	0					
ANR	680817	Identifier	corona		680793	1					
ANR	680818	ArgumentList			680793	1					
ANR	680819	Identifier	kPackage		680793	1					
ANR	680820	ArgumentList			680793	1					
ANR	680821	Identifier	filePath		680793	1					
ANR	680822	ArgumentList	"""containmentconfigurationui"""		680793	1					
ANR	680823	Argument	"""containmentconfigurationui"""		680793	0					
ANR	680824	PrimaryExpression	"""containmentconfigurationui"""		680793	0					
ANR	680825	ReturnType	void		680793	1					
ANR	680826	Identifier	ContainmentConfigView :: init		680793	2					
ANR	680827	ParameterList			680793	3					
ANR	680828	CFGEntryNode	ENTRY		680793		True				
ANR	680829	CFGExitNode	EXIT		680793		True				
ANR	680830	Symbol	m_containment -> corona ( ) -> kPackage		680793						
ANR	680831	Symbol	* m_containment -> corona		680793						
ANR	680832	Symbol	m_containment -> corona		680793						
ANR	680833	Symbol	QUrl :: fromLocalFile		680793						
ANR	680834	Symbol	* m_containment		680793						
ANR	680835	Symbol	* * m_containment		680793						
ANR	680836	Symbol	m_containment		680793						
ANR	680837	Symbol	m_containment -> corona ( ) -> kPackage ( ) . filePath		680793						
ANR	680838	Function	ContainmentConfigView :: containmentActionConfigModel	79:0:2497:3376							
ANR	680839	FunctionDef	ContainmentConfigView :: containmentActionConfigModel ()		680838	0					
ANR	680840	CompoundStatement		80:0:2577:3376	680838	0					
ANR	680841	IfStatement	if ( ! m_containmentActionConfigModel )		680838	0					
ANR	680842	Condition	! m_containmentActionConfigModel	81:8:2587:2617	680838	0	True				
ANR	680843	UnaryOperationExpression	! m_containmentActionConfigModel		680838	0					
ANR	680844	UnaryOperator	!		680838	0					
ANR	680845	Identifier	m_containmentActionConfigModel		680838	1					
ANR	680846	CompoundStatement		7:8:236:338	680838	1					
ANR	680847	ExpressionStatement	m_containmentActionConfigModel = new PlasmaQuick :: ConfigModel ( this )	82:8:2630:2697	680838	0	True				
ANR	680848	AssignmentExpression	m_containmentActionConfigModel = new PlasmaQuick :: ConfigModel ( this )		680838	0		=			
ANR	680849	Identifier	m_containmentActionConfigModel		680838	0					
ANR	680850	Identifier	this		680838	1					
ANR	680851	IdentifierDeclStatement	KPluginInfo :: List actions = Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo ( QString ( ) ) ;	84:8:2708:2803	680838	1	True				
ANR	680852	IdentifierDecl	actions = Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo ( QString ( ) )		680838	0					
ANR	680853	IdentifierDeclType	KPluginInfo :: List		680838	0					
ANR	680854	Identifier	actions		680838	1					
ANR	680855	AssignmentExpression	actions = Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo ( QString ( ) )		680838	2		=			
ANR	680856	Identifier	actions		680838	0					
ANR	680857	CallExpression	Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo ( QString ( ) )		680838	1					
ANR	680858	Callee	Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo		680838	0					
ANR	680859	PtrMemberAccess	Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo		680838	0					
ANR	680860	CallExpression	Plasma :: PluginLoader :: self ( )		680838	0					
ANR	680861	Callee	Plasma :: PluginLoader :: self		680838	0					
ANR	680862	Identifier	Plasma :: PluginLoader :: self		680838	0					
ANR	680863	ArgumentList			680838	1					
ANR	680864	Identifier	listContainmentActionsInfo		680838	1					
ANR	680865	ArgumentList	QString ( )		680838	1					
ANR	680866	Argument	QString ( )		680838	0					
ANR	680867	CallExpression	QString ( )		680838	0					
ANR	680868	Callee	QString		680838	0					
ANR	680869	Identifier	QString		680838	0					
ANR	680870	ArgumentList			680838	1					
ANR	680871	IdentifierDeclStatement	"KPackage :: Package pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) ) ;"	86:8:2814:2916	680838	2	True				
ANR	680872	IdentifierDecl	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) )"		680838	0					
ANR	680873	IdentifierDeclType	KPackage :: Package		680838	0					
ANR	680874	Identifier	pkg		680838	1					
ANR	680875	AssignmentExpression	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) )"		680838	2		=			
ANR	680876	Identifier	pkg		680838	0					
ANR	680877	CallExpression	"KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) )"		680838	1					
ANR	680878	Callee	KPackage :: PackageLoader :: self ( ) -> loadPackage		680838	0					
ANR	680879	PtrMemberAccess	KPackage :: PackageLoader :: self ( ) -> loadPackage		680838	0					
ANR	680880	CallExpression	KPackage :: PackageLoader :: self ( )		680838	0					
ANR	680881	Callee	KPackage :: PackageLoader :: self		680838	0					
ANR	680882	Identifier	KPackage :: PackageLoader :: self		680838	0					
ANR	680883	ArgumentList			680838	1					
ANR	680884	Identifier	loadPackage		680838	1					
ANR	680885	ArgumentList	"QStringLiteral ( ""Plasma/Generic"" )"		680838	1					
ANR	680886	Argument	"QStringLiteral ( ""Plasma/Generic"" )"		680838	0					
ANR	680887	CallExpression	"QStringLiteral ( ""Plasma/Generic"" )"		680838	0					
ANR	680888	Callee	QStringLiteral		680838	0					
ANR	680889	Identifier	QStringLiteral		680838	0					
ANR	680890	ArgumentList	"""Plasma/Generic"""		680838	1					
ANR	680891	Argument	"""Plasma/Generic"""		680838	0					
ANR	680892	PrimaryExpression	"""Plasma/Generic"""		680838	0					
ANR	680893	Statement	foreach	88:8:2927:2933	680838	3	True				
ANR	680894	Statement	(	88:16:2935:2935	680838	4	True				
ANR	680895	Statement	const	88:17:2936:2940	680838	5	True				
ANR	680896	Statement	KPluginInfo	88:23:2942:2952	680838	6	True				
ANR	680897	Statement	&	88:35:2954:2954	680838	7	True				
ANR	680898	Statement	info	88:36:2955:2958	680838	8	True				
ANR	680899	Statement	","	88:40:2959:2959	680838	9	True				
ANR	680900	Statement	actions	88:42:2961:2967	680838	10	True				
ANR	680901	Statement	)	88:49:2968:2968	680838	11	True				
ANR	680902	CompoundStatement		9:51:392:392	680838	12					
ANR	680903	Statement	pkg	89:12:2984:2986	680838	0	True				
ANR	680904	Statement	.	89:15:2987:2987	680838	1	True				
ANR	680905	Statement	setDefaultPackageRoot	89:16:2988:3008	680838	2	True				
ANR	680906	Statement	(	89:37:3009:3009	680838	3	True				
ANR	680907	Statement	QStandardPaths	89:38:3010:3023	680838	4	True				
ANR	680908	Statement	::	89:52:3024:3025	680838	5	True				
ANR	680909	Statement	locate	89:54:3026:3031	680838	6	True				
ANR	680910	Statement	(	89:60:3032:3032	680838	7	True				
ANR	680911	Statement	QStandardPaths	89:61:3033:3046	680838	8	True				
ANR	680912	Statement	::	89:75:3047:3048	680838	9	True				
ANR	680913	Statement	GenericDataLocation	89:77:3049:3067	680838	10	True				
ANR	680914	Statement	","	89:96:3068:3068	680838	11	True				
ANR	680915	Statement	PLASMA_RELATIVE_DATA_INSTALL_DIR	89:98:3070:3101	680838	12	True				
ANR	680916	Statement	"""/containmentactions"""	89:131:3103:3123	680838	13	True				
ANR	680917	Statement	","	89:152:3124:3124	680838	14	True				
ANR	680918	Statement	QStandardPaths	89:154:3126:3139	680838	15	True				
ANR	680919	Statement	::	89:168:3140:3141	680838	16	True				
ANR	680920	Statement	LocateDirectory	89:170:3142:3156	680838	17	True				
ANR	680921	Statement	)	89:185:3157:3157	680838	18	True				
ANR	680922	Statement	)	89:186:3158:3158	680838	19	True				
ANR	680923	ExpressionStatement		89:187:3159:3159	680838	20	True				
ANR	680924	ExpressionStatement	"m_containmentActionConfigModel -> appendCategory ( info . icon ( ) , info . name ( ) , pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) ) , info . pluginName ( ) )"	90:12:3173:3314	680838	21	True				
ANR	680925	CallExpression	"m_containmentActionConfigModel -> appendCategory ( info . icon ( ) , info . name ( ) , pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) ) , info . pluginName ( ) )"		680838	0					
ANR	680926	Callee	m_containmentActionConfigModel -> appendCategory		680838	0					
ANR	680927	PtrMemberAccess	m_containmentActionConfigModel -> appendCategory		680838	0					
ANR	680928	Identifier	m_containmentActionConfigModel		680838	0					
ANR	680929	Identifier	appendCategory		680838	1					
ANR	680930	ArgumentList	info . icon ( )		680838	1					
ANR	680931	Argument	info . icon ( )		680838	0					
ANR	680932	CallExpression	info . icon ( )		680838	0					
ANR	680933	Callee	info . icon		680838	0					
ANR	680934	MemberAccess	info . icon		680838	0					
ANR	680935	Identifier	info		680838	0					
ANR	680936	Identifier	icon		680838	1					
ANR	680937	ArgumentList			680838	1					
ANR	680938	Argument	info . name ( )		680838	1					
ANR	680939	CallExpression	info . name ( )		680838	0					
ANR	680940	Callee	info . name		680838	0					
ANR	680941	MemberAccess	info . name		680838	0					
ANR	680942	Identifier	info		680838	0					
ANR	680943	Identifier	name		680838	1					
ANR	680944	ArgumentList			680838	1					
ANR	680945	Argument	"pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) )"		680838	2					
ANR	680946	CallExpression	"pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) )"		680838	0					
ANR	680947	Callee	pkg . filePath		680838	0					
ANR	680948	MemberAccess	pkg . filePath		680838	0					
ANR	680949	Identifier	pkg		680838	0					
ANR	680950	Identifier	filePath		680838	1					
ANR	680951	ArgumentList	"""ui"""		680838	1					
ANR	680952	Argument	"""ui"""		680838	0					
ANR	680953	PrimaryExpression	"""ui"""		680838	0					
ANR	680954	Argument	"QStringLiteral ( ""config.qml"" )"		680838	1					
ANR	680955	CallExpression	"QStringLiteral ( ""config.qml"" )"		680838	0					
ANR	680956	Callee	QStringLiteral		680838	0					
ANR	680957	Identifier	QStringLiteral		680838	0					
ANR	680958	ArgumentList	"""config.qml"""		680838	1					
ANR	680959	Argument	"""config.qml"""		680838	0					
ANR	680960	PrimaryExpression	"""config.qml"""		680838	0					
ANR	680961	Argument	info . pluginName ( )		680838	3					
ANR	680962	CallExpression	info . pluginName ( )		680838	0					
ANR	680963	Callee	info . pluginName		680838	0					
ANR	680964	MemberAccess	info . pluginName		680838	0					
ANR	680965	Identifier	info		680838	0					
ANR	680966	Identifier	pluginName		680838	1					
ANR	680967	ArgumentList			680838	1					
ANR	680968	ReturnStatement	return m_containmentActionConfigModel ;	94:4:3337:3374	680838	1	True				
ANR	680969	Identifier	m_containmentActionConfigModel		680838	0					
ANR	680970	ReturnType	PlasmaQuick :: ConfigModel *		680838	1					
ANR	680971	Identifier	ContainmentConfigView :: containmentActionConfigModel		680838	2					
ANR	680972	ParameterList			680838	3					
ANR	680973	CFGEntryNode	ENTRY		680838		True				
ANR	680974	CFGExitNode	EXIT		680838		True				
ANR	680975	Symbol	info . icon		680838						
ANR	680976	Symbol	Plasma :: PluginLoader :: self ( ) -> listContainmentActionsInfo		680838						
ANR	680977	Symbol	KPackage :: PackageLoader :: self		680838						
ANR	680978	Symbol	* KPackage :: PackageLoader :: self		680838						
ANR	680979	Symbol	pkg . filePath		680838						
ANR	680980	Symbol	this		680838						
ANR	680981	Symbol	pkg		680838						
ANR	680982	Symbol	info . name		680838						
ANR	680983	Symbol	QString		680838						
ANR	680984	Symbol	m_containmentActionConfigModel		680838						
ANR	680985	Symbol	Plasma :: PluginLoader :: self		680838						
ANR	680986	Symbol	* Plasma :: PluginLoader :: self		680838						
ANR	680987	Symbol	QStringLiteral		680838						
ANR	680988	Symbol	info . pluginName		680838						
ANR	680989	Symbol	actions		680838						
ANR	680990	Symbol	KPackage :: PackageLoader :: self ( ) -> loadPackage		680838						
ANR	680991	Symbol	info		680838						
ANR	680992	Function	ContainmentConfigView :: currentContainmentActionsModel	97:0:3379:3653							
ANR	680993	FunctionDef	ContainmentConfigView :: currentContainmentActionsModel ()		680992	0					
ANR	680994	CompoundStatement		98:0:3455:3653	680992	0					
ANR	680995	IfStatement	if ( ! m_currentContainmentActionsModel )		680992	0					
ANR	680996	Condition	! m_currentContainmentActionsModel	99:8:3465:3497	680992	0	True				
ANR	680997	UnaryOperationExpression	! m_currentContainmentActionsModel		680992	0					
ANR	680998	UnaryOperator	!		680992	0					
ANR	680999	Identifier	m_currentContainmentActionsModel		680992	1					
ANR	681000	CompoundStatement		2:43:44:44	680992	1					
ANR	681001	ExpressionStatement	"m_currentContainmentActionsModel = new CurrentContainmentActionsModel ( m_containment , this )"	100:8:3510:3600	680992	0	True				
ANR	681002	AssignmentExpression	"m_currentContainmentActionsModel = new CurrentContainmentActionsModel ( m_containment , this )"		680992	0		=			
ANR	681003	Identifier	m_currentContainmentActionsModel		680992	0					
ANR	681004	Expression	"m_containment , this"		680992	1					
ANR	681005	Identifier	m_containment		680992	0					
ANR	681006	Identifier	this		680992	1					
ANR	681007	ReturnStatement	return m_currentContainmentActionsModel ;	102:4:3612:3651	680992	1	True				
ANR	681008	Identifier	m_currentContainmentActionsModel		680992	0					
ANR	681009	ReturnType	QAbstractItemModel *		680992	1					
ANR	681010	Identifier	ContainmentConfigView :: currentContainmentActionsModel		680992	2					
ANR	681011	ParameterList			680992	3					
ANR	681012	CFGEntryNode	ENTRY		680992		True				
ANR	681013	CFGExitNode	EXIT		680992		True				
ANR	681014	Symbol	this		680992						
ANR	681015	Symbol	m_containment		680992						
ANR	681016	Symbol	m_currentContainmentActionsModel		680992						
ANR	681017	Function	ContainmentConfigView :: containmentPlugin	105:0:3656:3768							
ANR	681018	FunctionDef	ContainmentConfigView :: containmentPlugin ()		681017	0					
ANR	681019	CompoundStatement		106:0:3713:3768	681017	0					
ANR	681020	ReturnStatement	return m_containment -> pluginInfo ( ) . pluginName ( ) ;	107:4:3719:3766	681017	0	True				
ANR	681021	CallExpression	m_containment -> pluginInfo ( ) . pluginName ( )		681017	0					
ANR	681022	Callee	m_containment -> pluginInfo ( ) . pluginName		681017	0					
ANR	681023	MemberAccess	m_containment -> pluginInfo ( ) . pluginName		681017	0					
ANR	681024	CallExpression	m_containment -> pluginInfo ( )		681017	0					
ANR	681025	Callee	m_containment -> pluginInfo		681017	0					
ANR	681026	PtrMemberAccess	m_containment -> pluginInfo		681017	0					
ANR	681027	Identifier	m_containment		681017	0					
ANR	681028	Identifier	pluginInfo		681017	1					
ANR	681029	ArgumentList			681017	1					
ANR	681030	Identifier	pluginName		681017	1					
ANR	681031	ArgumentList			681017	1					
ANR	681032	ReturnType	QString		681017	1					
ANR	681033	Identifier	ContainmentConfigView :: containmentPlugin		681017	2					
ANR	681034	ParameterList			681017	3					
ANR	681035	CFGEntryNode	ENTRY		681017		True				
ANR	681036	CFGExitNode	EXIT		681017		True				
ANR	681037	Symbol	m_containment -> pluginInfo ( ) . pluginName		681017						
ANR	681038	Symbol	* m_containment		681017						
ANR	681039	Symbol	m_containment		681017						
ANR	681040	Symbol	m_containment -> pluginInfo		681017						
ANR	681041	Function	ContainmentConfigView :: setContainmentPlugin	110:0:3771:4101							
ANR	681042	FunctionDef	ContainmentConfigView :: setContainmentPlugin (const QString & plugin)		681041	0					
ANR	681043	CompoundStatement		111:0:3843:4101	681041	0					
ANR	681044	IfStatement	if ( plugin . isEmpty ( ) || containmentPlugin ( ) == plugin )		681041	0					
ANR	681045	Condition	plugin . isEmpty ( ) || containmentPlugin ( ) == plugin	112:8:3853:3901	681041	0	True				
ANR	681046	OrExpression	plugin . isEmpty ( ) || containmentPlugin ( ) == plugin		681041	0		||			
ANR	681047	CallExpression	plugin . isEmpty ( )		681041	0					
ANR	681048	Callee	plugin . isEmpty		681041	0					
ANR	681049	MemberAccess	plugin . isEmpty		681041	0					
ANR	681050	Identifier	plugin		681041	0					
ANR	681051	Identifier	isEmpty		681041	1					
ANR	681052	ArgumentList			681041	1					
ANR	681053	EqualityExpression	containmentPlugin ( ) == plugin		681041	1		==			
ANR	681054	CallExpression	containmentPlugin ( )		681041	0					
ANR	681055	Callee	containmentPlugin		681041	0					
ANR	681056	Identifier	containmentPlugin		681041	0					
ANR	681057	ArgumentList			681041	1					
ANR	681058	Identifier	plugin		681041	1					
ANR	681059	CompoundStatement		2:59:60:60	681041	1					
ANR	681060	ReturnStatement	return ;	113:8:3914:3920	681041	0	True				
ANR	681061	Statement	m_containment	116:4:3933:3945	681041	1	True				
ANR	681062	Statement	=	116:18:3947:3947	681041	2	True				
ANR	681063	Statement	static_cast	116:20:3949:3959	681041	3	True				
ANR	681064	Statement	<	116:31:3960:3960	681041	4	True				
ANR	681065	Statement	ShellCorona	116:32:3961:3971	681041	5	True				
ANR	681066	Statement	*	116:44:3973:3973	681041	6	True				
ANR	681067	Statement	>	116:45:3974:3974	681041	7	True				
ANR	681068	ExpressionStatement	"( m_containment -> corona ( ) ) -> setContainmentTypeForScreen ( m_containment -> screen ( ) , plugin )"	116:46:3975:4062	681041	8	True				
ANR	681069	CallExpression	"( m_containment -> corona ( ) ) -> setContainmentTypeForScreen ( m_containment -> screen ( ) , plugin )"		681041	0					
ANR	681070	Callee	( m_containment -> corona ( ) ) -> setContainmentTypeForScreen		681041	0					
ANR	681071	PtrMemberAccess	( m_containment -> corona ( ) ) -> setContainmentTypeForScreen		681041	0					
ANR	681072	CallExpression	m_containment -> corona ( )		681041	0					
ANR	681073	Callee	m_containment -> corona		681041	0					
ANR	681074	PtrMemberAccess	m_containment -> corona		681041	0					
ANR	681075	Identifier	m_containment		681041	0					
ANR	681076	Identifier	corona		681041	1					
ANR	681077	ArgumentList			681041	1					
ANR	681078	Identifier	setContainmentTypeForScreen		681041	1					
ANR	681079	ArgumentList	m_containment -> screen ( )		681041	1					
ANR	681080	Argument	m_containment -> screen ( )		681041	0					
ANR	681081	CallExpression	m_containment -> screen ( )		681041	0					
ANR	681082	Callee	m_containment -> screen		681041	0					
ANR	681083	PtrMemberAccess	m_containment -> screen		681041	0					
ANR	681084	Identifier	m_containment		681041	0					
ANR	681085	Identifier	screen		681041	1					
ANR	681086	ArgumentList			681041	1					
ANR	681087	Argument	plugin		681041	1					
ANR	681088	Identifier	plugin		681041	0					
ANR	681089	IdentifierDeclStatement	emit containmentPluginChanged ( ) ;	117:4:4068:4099	681041	9	True				
ANR	681090	IdentifierDecl	containmentPluginChanged ( )		681041	0					
ANR	681091	IdentifierDeclType	emit		681041	0					
ANR	681092	Identifier	containmentPluginChanged		681041	1					
ANR	681093	ReturnType	void		681041	1					
ANR	681094	Identifier	ContainmentConfigView :: setContainmentPlugin		681041	2					
ANR	681095	ParameterList	const QString & plugin		681041	3					
ANR	681096	Parameter	const QString & plugin	110:49:3820:3840	681041	0	True				
ANR	681097	ParameterType	const QString &		681041	0					
ANR	681098	Identifier	plugin		681041	1					
ANR	681099	CFGEntryNode	ENTRY		681041		True				
ANR	681100	CFGExitNode	EXIT		681041		True				
ANR	681101	Symbol	m_containment -> corona		681041						
ANR	681102	Symbol	plugin		681041						
ANR	681103	Symbol	containmentPlugin		681041						
ANR	681104	Symbol	plugin . isEmpty		681041						
ANR	681105	Symbol	m_containment -> screen		681041						
ANR	681106	Symbol	containmentPluginChanged		681041						
ANR	681107	Symbol	* m_containment		681041						
ANR	681108	Symbol	m_containment		681041						
ANR	681109	Function	ContainmentConfigView :: wallpaperConfigModel	120:0:4104:6006							
ANR	681110	FunctionDef	ContainmentConfigView :: wallpaperConfigModel ()		681109	0					
ANR	681111	CompoundStatement		121:0:4176:6006	681109	0					
ANR	681112	IfStatement	if ( ! m_wallpaperConfigModel )		681109	0					
ANR	681113	Condition	! m_wallpaperConfigModel	122:8:4186:4208	681109	0	True				
ANR	681114	UnaryOperationExpression	! m_wallpaperConfigModel		681109	0					
ANR	681115	UnaryOperator	!		681109	0					
ANR	681116	Identifier	m_wallpaperConfigModel		681109	1					
ANR	681117	CompoundStatement		6:8:398:466	681109	1					
ANR	681118	ExpressionStatement	m_wallpaperConfigModel = new PlasmaQuick :: ConfigModel ( this )	123:8:4221:4280	681109	0	True				
ANR	681119	AssignmentExpression	m_wallpaperConfigModel = new PlasmaQuick :: ConfigModel ( this )		681109	0		=			
ANR	681120	Identifier	m_wallpaperConfigModel		681109	0					
ANR	681121	Identifier	this		681109	1					
ANR	681122	Statement	QStringList	124:8:4290:4300	681109	1	True				
ANR	681123	Statement	dirs	124:20:4302:4305	681109	2	True				
ANR	681124	Statement	(	124:24:4306:4306	681109	3	True				
ANR	681125	Statement	QStandardPaths	124:25:4307:4320	681109	4	True				
ANR	681126	Statement	::	124:39:4321:4322	681109	5	True				
ANR	681127	Statement	locateAll	124:41:4323:4331	681109	6	True				
ANR	681128	Statement	(	124:50:4332:4332	681109	7	True				
ANR	681129	Statement	QStandardPaths	124:51:4333:4346	681109	8	True				
ANR	681130	Statement	::	124:65:4347:4348	681109	9	True				
ANR	681131	Statement	GenericDataLocation	124:67:4349:4367	681109	10	True				
ANR	681132	Statement	","	124:86:4368:4368	681109	11	True				
ANR	681133	Statement	PLASMA_RELATIVE_DATA_INSTALL_DIR	124:88:4370:4401	681109	12	True				
ANR	681134	Statement	"""/wallpapers"""	124:121:4403:4415	681109	13	True				
ANR	681135	Statement	","	124:134:4416:4416	681109	14	True				
ANR	681136	Statement	QStandardPaths	124:136:4418:4431	681109	15	True				
ANR	681137	Statement	::	124:150:4432:4433	681109	16	True				
ANR	681138	Statement	LocateDirectory	124:152:4434:4448	681109	17	True				
ANR	681139	Statement	)	124:167:4449:4449	681109	18	True				
ANR	681140	Statement	)	124:168:4450:4450	681109	19	True				
ANR	681141	ExpressionStatement		124:169:4451:4451	681109	20	True				
ANR	681142	IdentifierDeclStatement	"KPackage :: Package pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""KPackage/Generic"" ) ) ;"	125:8:4461:4565	681109	21	True				
ANR	681143	IdentifierDecl	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""KPackage/Generic"" ) )"		681109	0					
ANR	681144	IdentifierDeclType	KPackage :: Package		681109	0					
ANR	681145	Identifier	pkg		681109	1					
ANR	681146	AssignmentExpression	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""KPackage/Generic"" ) )"		681109	2		=			
ANR	681147	Identifier	pkg		681109	0					
ANR	681148	CallExpression	"KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""KPackage/Generic"" ) )"		681109	1					
ANR	681149	Callee	KPackage :: PackageLoader :: self ( ) -> loadPackage		681109	0					
ANR	681150	PtrMemberAccess	KPackage :: PackageLoader :: self ( ) -> loadPackage		681109	0					
ANR	681151	CallExpression	KPackage :: PackageLoader :: self ( )		681109	0					
ANR	681152	Callee	KPackage :: PackageLoader :: self		681109	0					
ANR	681153	Identifier	KPackage :: PackageLoader :: self		681109	0					
ANR	681154	ArgumentList			681109	1					
ANR	681155	Identifier	loadPackage		681109	1					
ANR	681156	ArgumentList	"QStringLiteral ( ""KPackage/Generic"" )"		681109	1					
ANR	681157	Argument	"QStringLiteral ( ""KPackage/Generic"" )"		681109	0					
ANR	681158	CallExpression	"QStringLiteral ( ""KPackage/Generic"" )"		681109	0					
ANR	681159	Callee	QStringLiteral		681109	0					
ANR	681160	Identifier	QStringLiteral		681109	0					
ANR	681161	ArgumentList	"""KPackage/Generic"""		681109	1					
ANR	681162	Argument	"""KPackage/Generic"""		681109	0					
ANR	681163	PrimaryExpression	"""KPackage/Generic"""		681109	0					
ANR	681164	IdentifierDeclStatement	QStringList platform = KDeclarative :: KDeclarative :: runtimePlatform ( ) ;	126:8:4575:4643	681109	22	True				
ANR	681165	IdentifierDecl	platform = KDeclarative :: KDeclarative :: runtimePlatform ( )		681109	0					
ANR	681166	IdentifierDeclType	QStringList		681109	0					
ANR	681167	Identifier	platform		681109	1					
ANR	681168	AssignmentExpression	platform = KDeclarative :: KDeclarative :: runtimePlatform ( )		681109	2		=			
ANR	681169	Identifier	platform		681109	0					
ANR	681170	CallExpression	KDeclarative :: KDeclarative :: runtimePlatform ( )		681109	1					
ANR	681171	Callee	KDeclarative :: KDeclarative :: runtimePlatform		681109	0					
ANR	681172	Identifier	KDeclarative :: KDeclarative :: runtimePlatform		681109	0					
ANR	681173	ArgumentList			681109	1					
ANR	681174	IfStatement	if ( ! platform . isEmpty ( ) )		681109	23					
ANR	681175	Condition	! platform . isEmpty ( )	127:12:4657:4675	681109	0	True				
ANR	681176	UnaryOperationExpression	! platform . isEmpty ( )		681109	0					
ANR	681177	UnaryOperator	!		681109	0					
ANR	681178	CallExpression	platform . isEmpty ( )		681109	1					
ANR	681179	Callee	platform . isEmpty		681109	0					
ANR	681180	MemberAccess	platform . isEmpty		681109	0					
ANR	681181	Identifier	platform		681109	0					
ANR	681182	Identifier	isEmpty		681109	1					
ANR	681183	ArgumentList			681109	1					
ANR	681184	CompoundStatement		8:12:515:554	681109	1					
ANR	681185	IdentifierDeclStatement	QMutableStringListIterator it ( platform ) ;	128:12:4692:4731	681109	0	True				
ANR	681186	IdentifierDecl	it ( platform )		681109	0					
ANR	681187	IdentifierDeclType	QMutableStringListIterator		681109	0					
ANR	681188	Identifier	it		681109	1					
ANR	681189	Identifier	platform		681109	2					
ANR	681190	WhileStatement	while ( it . hasNext ( ) )		681109	1					
ANR	681191	Condition	it . hasNext ( )	129:19:4752:4763	681109	0	True				
ANR	681192	CallExpression	it . hasNext ( )		681109	0					
ANR	681193	Callee	it . hasNext		681109	0					
ANR	681194	MemberAccess	it . hasNext		681109	0					
ANR	681195	Identifier	it		681109	0					
ANR	681196	Identifier	hasNext		681109	1					
ANR	681197	ArgumentList			681109	1					
ANR	681198	CompoundStatement		9:33:589:589	681109	1					
ANR	681199	ExpressionStatement	it . next ( )	130:16:4784:4793	681109	0	True				
ANR	681200	CallExpression	it . next ( )		681109	0					
ANR	681201	Callee	it . next		681109	0					
ANR	681202	MemberAccess	it . next		681109	0					
ANR	681203	Identifier	it		681109	0					
ANR	681204	Identifier	next		681109	1					
ANR	681205	ArgumentList			681109	1					
ANR	681206	ExpressionStatement	"it . setValue ( ""platformcontents/"" + it . value ( ) )"	131:16:4811:4856	681109	1	True				
ANR	681207	CallExpression	"it . setValue ( ""platformcontents/"" + it . value ( ) )"		681109	0					
ANR	681208	Callee	it . setValue		681109	0					
ANR	681209	MemberAccess	it . setValue		681109	0					
ANR	681210	Identifier	it		681109	0					
ANR	681211	Identifier	setValue		681109	1					
ANR	681212	ArgumentList	"""platformcontents/"" + it . value ( )"		681109	1					
ANR	681213	Argument	"""platformcontents/"" + it . value ( )"		681109	0					
ANR	681214	AdditiveExpression	"""platformcontents/"" + it . value ( )"		681109	0		+			
ANR	681215	PrimaryExpression	"""platformcontents/"""		681109	0					
ANR	681216	CallExpression	it . value ( )		681109	1					
ANR	681217	Callee	it . value		681109	0					
ANR	681218	MemberAccess	it . value		681109	0					
ANR	681219	Identifier	it		681109	0					
ANR	681220	Identifier	value		681109	1					
ANR	681221	ArgumentList			681109	1					
ANR	681222	ExpressionStatement	"platform . append ( QStringLiteral ( ""contents"" ) )"	134:12:4885:4928	681109	2	True				
ANR	681223	CallExpression	"platform . append ( QStringLiteral ( ""contents"" ) )"		681109	0					
ANR	681224	Callee	platform . append		681109	0					
ANR	681225	MemberAccess	platform . append		681109	0					
ANR	681226	Identifier	platform		681109	0					
ANR	681227	Identifier	append		681109	1					
ANR	681228	ArgumentList	"QStringLiteral ( ""contents"" )"		681109	1					
ANR	681229	Argument	"QStringLiteral ( ""contents"" )"		681109	0					
ANR	681230	CallExpression	"QStringLiteral ( ""contents"" )"		681109	0					
ANR	681231	Callee	QStringLiteral		681109	0					
ANR	681232	Identifier	QStringLiteral		681109	0					
ANR	681233	ArgumentList	"""contents"""		681109	1					
ANR	681234	Argument	"""contents"""		681109	0					
ANR	681235	PrimaryExpression	"""contents"""		681109	0					
ANR	681236	ExpressionStatement	pkg . setContentsPrefixPaths ( platform )	135:12:4942:4978	681109	3	True				
ANR	681237	CallExpression	pkg . setContentsPrefixPaths ( platform )		681109	0					
ANR	681238	Callee	pkg . setContentsPrefixPaths		681109	0					
ANR	681239	MemberAccess	pkg . setContentsPrefixPaths		681109	0					
ANR	681240	Identifier	pkg		681109	0					
ANR	681241	Identifier	setContentsPrefixPaths		681109	1					
ANR	681242	ArgumentList	platform		681109	1					
ANR	681243	Argument	platform		681109	0					
ANR	681244	Identifier	platform		681109	0					
ANR	681245	ExpressionStatement	"pkg . addFileDefinition ( ""mainscript"" , QStringLiteral ( ""ui/main.qml"" ) , i18n ( ""Main Script File"" ) )"	137:8:4998:5090	681109	24	True				
ANR	681246	CallExpression	"pkg . addFileDefinition ( ""mainscript"" , QStringLiteral ( ""ui/main.qml"" ) , i18n ( ""Main Script File"" ) )"		681109	0					
ANR	681247	Callee	pkg . addFileDefinition		681109	0					
ANR	681248	MemberAccess	pkg . addFileDefinition		681109	0					
ANR	681249	Identifier	pkg		681109	0					
ANR	681250	Identifier	addFileDefinition		681109	1					
ANR	681251	ArgumentList	"""mainscript"""		681109	1					
ANR	681252	Argument	"""mainscript"""		681109	0					
ANR	681253	PrimaryExpression	"""mainscript"""		681109	0					
ANR	681254	Argument	"QStringLiteral ( ""ui/main.qml"" )"		681109	1					
ANR	681255	CallExpression	"QStringLiteral ( ""ui/main.qml"" )"		681109	0					
ANR	681256	Callee	QStringLiteral		681109	0					
ANR	681257	Identifier	QStringLiteral		681109	0					
ANR	681258	ArgumentList	"""ui/main.qml"""		681109	1					
ANR	681259	Argument	"""ui/main.qml"""		681109	0					
ANR	681260	PrimaryExpression	"""ui/main.qml"""		681109	0					
ANR	681261	Argument	"i18n ( ""Main Script File"" )"		681109	2					
ANR	681262	CallExpression	"i18n ( ""Main Script File"" )"		681109	0					
ANR	681263	Callee	i18n		681109	0					
ANR	681264	Identifier	i18n		681109	0					
ANR	681265	ArgumentList	"""Main Script File"""		681109	1					
ANR	681266	Argument	"""Main Script File"""		681109	0					
ANR	681267	PrimaryExpression	"""Main Script File"""		681109	0					
ANR	681268	Statement	foreach	138:8:5100:5106	681109	25	True				
ANR	681269	Statement	(	138:16:5108:5108	681109	26	True				
ANR	681270	Statement	const	138:17:5109:5113	681109	27	True				
ANR	681271	Statement	QString	138:23:5115:5121	681109	28	True				
ANR	681272	Statement	&	138:31:5123:5123	681109	29	True				
ANR	681273	Statement	dirPath	138:32:5124:5130	681109	30	True				
ANR	681274	Statement	","	138:39:5131:5131	681109	31	True				
ANR	681275	Statement	dirs	138:41:5133:5136	681109	32	True				
ANR	681276	Statement	)	138:45:5137:5137	681109	33	True				
ANR	681277	CompoundStatement		21:12:1055:1075	681109	34					
ANR	681278	IdentifierDeclStatement	QDir dir ( dirPath ) ;	139:12:5153:5170	681109	0	True				
ANR	681279	IdentifierDecl	dir ( dirPath )		681109	0					
ANR	681280	IdentifierDeclType	QDir		681109	0					
ANR	681281	Identifier	dir		681109	1					
ANR	681282	Identifier	dirPath		681109	2					
ANR	681283	ExpressionStatement	pkg . setDefaultPackageRoot ( dirPath )	140:12:5184:5218	681109	1	True				
ANR	681284	CallExpression	pkg . setDefaultPackageRoot ( dirPath )		681109	0					
ANR	681285	Callee	pkg . setDefaultPackageRoot		681109	0					
ANR	681286	MemberAccess	pkg . setDefaultPackageRoot		681109	0					
ANR	681287	Identifier	pkg		681109	0					
ANR	681288	Identifier	setDefaultPackageRoot		681109	1					
ANR	681289	ArgumentList	dirPath		681109	1					
ANR	681290	Argument	dirPath		681109	0					
ANR	681291	Identifier	dirPath		681109	0					
ANR	681292	IdentifierDeclStatement	QStringList packages ;	141:12:5232:5252	681109	2	True				
ANR	681293	IdentifierDecl	packages		681109	0					
ANR	681294	IdentifierDeclType	QStringList		681109	0					
ANR	681295	Identifier	packages		681109	1					
ANR	681296	Statement	foreach	143:12:5267:5273	681109	3	True				
ANR	681297	Statement	(	143:20:5275:5275	681109	4	True				
ANR	681298	Statement	const	143:21:5276:5280	681109	5	True				
ANR	681299	Statement	QString	143:27:5282:5288	681109	6	True				
ANR	681300	Statement	&	143:35:5290:5290	681109	7	True				
ANR	681301	Statement	sdir	143:36:5291:5294	681109	8	True				
ANR	681302	Statement	","	143:40:5295:5295	681109	9	True				
ANR	681303	Statement	dir	143:42:5297:5299	681109	10	True				
ANR	681304	Statement	.	143:45:5300:5300	681109	11	True				
ANR	681305	Statement	entryList	143:46:5301:5309	681109	12	True				
ANR	681306	Statement	(	143:55:5310:5310	681109	13	True				
ANR	681307	Statement	QDir	143:56:5311:5314	681109	14	True				
ANR	681308	Statement	::	143:60:5315:5316	681109	15	True				
ANR	681309	Statement	AllDirs	143:62:5317:5323	681109	16	True				
ANR	681310	Statement	|	143:70:5325:5325	681109	17	True				
ANR	681311	Statement	QDir	143:72:5327:5330	681109	18	True				
ANR	681312	Statement	::	143:76:5331:5332	681109	19	True				
ANR	681313	Statement	Readable	143:78:5333:5340	681109	20	True				
ANR	681314	Statement	)	143:86:5341:5341	681109	21	True				
ANR	681315	Statement	)	143:87:5342:5342	681109	22	True				
ANR	681316	CompoundStatement		24:16:1185:1230	681109	23					
ANR	681317	IdentifierDeclStatement	const QString metadata = dirPath + '/' + sdir ;	144:16:5362:5407	681109	0	True				
ANR	681318	IdentifierDecl	metadata = dirPath + '/' + sdir		681109	0					
ANR	681319	IdentifierDeclType	const QString		681109	0					
ANR	681320	Identifier	metadata		681109	1					
ANR	681321	AssignmentExpression	metadata = dirPath + '/' + sdir		681109	2		=			
ANR	681322	Identifier	metadata		681109	0					
ANR	681323	AdditiveExpression	dirPath + '/' + sdir		681109	1		+			
ANR	681324	Identifier	dirPath		681109	0					
ANR	681325	AdditiveExpression	'/' + sdir		681109	1		+			
ANR	681326	PrimaryExpression	'/'		681109	0					
ANR	681327	Identifier	sdir		681109	1					
ANR	681328	IfStatement	"if ( QFile :: exists ( metadata + ""/metadata.json"" ) || QFile :: exists ( metadata + ""/metadata.desktop"" ) )"		681109	1					
ANR	681329	Condition	"QFile :: exists ( metadata + ""/metadata.json"" ) || QFile :: exists ( metadata + ""/metadata.desktop"" )"	145:20:5429:5519	681109	0	True				
ANR	681330	OrExpression	"QFile :: exists ( metadata + ""/metadata.json"" ) || QFile :: exists ( metadata + ""/metadata.desktop"" )"		681109	0		||			
ANR	681331	CallExpression	"QFile :: exists ( metadata + ""/metadata.json"" )"		681109	0					
ANR	681332	Callee	QFile :: exists		681109	0					
ANR	681333	Identifier	QFile :: exists		681109	0					
ANR	681334	ArgumentList	"metadata + ""/metadata.json"""		681109	1					
ANR	681335	Argument	"metadata + ""/metadata.json"""		681109	0					
ANR	681336	AdditiveExpression	"metadata + ""/metadata.json"""		681109	0		+			
ANR	681337	Identifier	metadata		681109	0					
ANR	681338	PrimaryExpression	"""/metadata.json"""		681109	1					
ANR	681339	CallExpression	"QFile :: exists ( metadata + ""/metadata.desktop"" )"		681109	1					
ANR	681340	Callee	QFile :: exists		681109	0					
ANR	681341	Identifier	QFile :: exists		681109	0					
ANR	681342	ArgumentList	"metadata + ""/metadata.desktop"""		681109	1					
ANR	681343	Argument	"metadata + ""/metadata.desktop"""		681109	0					
ANR	681344	AdditiveExpression	"metadata + ""/metadata.desktop"""		681109	0		+			
ANR	681345	Identifier	metadata		681109	0					
ANR	681346	PrimaryExpression	"""/metadata.desktop"""		681109	1					
ANR	681347	CompoundStatement		25:113:1345:1345	681109	1					
ANR	681348	ExpressionStatement	packages << sdir	146:20:5544:5560	681109	0	True				
ANR	681349	ShiftExpression	packages << sdir		681109	0		<<			
ANR	681350	Identifier	packages		681109	0					
ANR	681351	Identifier	sdir		681109	1					
ANR	681352	Statement	foreach	150:12:5607:5613	681109	24	True				
ANR	681353	Statement	(	150:20:5615:5615	681109	25	True				
ANR	681354	Statement	const	150:21:5616:5620	681109	26	True				
ANR	681355	Statement	QString	150:27:5622:5628	681109	27	True				
ANR	681356	Statement	&	150:35:5630:5630	681109	28	True				
ANR	681357	Statement	package	150:36:5631:5637	681109	29	True				
ANR	681358	Statement	","	150:43:5638:5638	681109	30	True				
ANR	681359	Statement	packages	150:45:5640:5647	681109	31	True				
ANR	681360	Statement	)	150:53:5648:5648	681109	32	True				
ANR	681361	CompoundStatement		30:55:1473:1473	681109	33					
ANR	681362	ExpressionStatement	pkg . setPath ( package )	151:16:5668:5688	681109	0	True				
ANR	681363	CallExpression	pkg . setPath ( package )		681109	0					
ANR	681364	Callee	pkg . setPath		681109	0					
ANR	681365	MemberAccess	pkg . setPath		681109	0					
ANR	681366	Identifier	pkg		681109	0					
ANR	681367	Identifier	setPath		681109	1					
ANR	681368	ArgumentList	package		681109	1					
ANR	681369	Argument	package		681109	0					
ANR	681370	Identifier	package		681109	0					
ANR	681371	IfStatement	if ( ! pkg . isValid ( ) )		681109	1					
ANR	681372	Condition	! pkg . isValid ( )	152:20:5710:5723	681109	0	True				
ANR	681373	UnaryOperationExpression	! pkg . isValid ( )		681109	0					
ANR	681374	UnaryOperator	!		681109	0					
ANR	681375	CallExpression	pkg . isValid ( )		681109	1					
ANR	681376	Callee	pkg . isValid		681109	0					
ANR	681377	MemberAccess	pkg . isValid		681109	0					
ANR	681378	Identifier	pkg		681109	0					
ANR	681379	Identifier	isValid		681109	1					
ANR	681380	ArgumentList			681109	1					
ANR	681381	CompoundStatement		32:36:1549:1549	681109	1					
ANR	681382	ContinueStatement	continue ;	153:20:5748:5756	681109	0	True				
ANR	681383	ExpressionStatement	"m_wallpaperConfigModel -> appendCategory ( pkg . metadata ( ) . iconName ( ) , pkg . metadata ( ) . name ( ) , pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) ) , package )"	155:16:5792:5939	681109	2	True				
ANR	681384	CallExpression	"m_wallpaperConfigModel -> appendCategory ( pkg . metadata ( ) . iconName ( ) , pkg . metadata ( ) . name ( ) , pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) ) , package )"		681109	0					
ANR	681385	Callee	m_wallpaperConfigModel -> appendCategory		681109	0					
ANR	681386	PtrMemberAccess	m_wallpaperConfigModel -> appendCategory		681109	0					
ANR	681387	Identifier	m_wallpaperConfigModel		681109	0					
ANR	681388	Identifier	appendCategory		681109	1					
ANR	681389	ArgumentList	pkg . metadata ( ) . iconName ( )		681109	1					
ANR	681390	Argument	pkg . metadata ( ) . iconName ( )		681109	0					
ANR	681391	CallExpression	pkg . metadata ( ) . iconName ( )		681109	0					
ANR	681392	Callee	pkg . metadata ( ) . iconName		681109	0					
ANR	681393	MemberAccess	pkg . metadata ( ) . iconName		681109	0					
ANR	681394	CallExpression	pkg . metadata ( )		681109	0					
ANR	681395	Callee	pkg . metadata		681109	0					
ANR	681396	MemberAccess	pkg . metadata		681109	0					
ANR	681397	Identifier	pkg		681109	0					
ANR	681398	Identifier	metadata		681109	1					
ANR	681399	ArgumentList			681109	1					
ANR	681400	Identifier	iconName		681109	1					
ANR	681401	ArgumentList			681109	1					
ANR	681402	Argument	pkg . metadata ( ) . name ( )		681109	1					
ANR	681403	CallExpression	pkg . metadata ( ) . name ( )		681109	0					
ANR	681404	Callee	pkg . metadata ( ) . name		681109	0					
ANR	681405	MemberAccess	pkg . metadata ( ) . name		681109	0					
ANR	681406	CallExpression	pkg . metadata ( )		681109	0					
ANR	681407	Callee	pkg . metadata		681109	0					
ANR	681408	MemberAccess	pkg . metadata		681109	0					
ANR	681409	Identifier	pkg		681109	0					
ANR	681410	Identifier	metadata		681109	1					
ANR	681411	ArgumentList			681109	1					
ANR	681412	Identifier	name		681109	1					
ANR	681413	ArgumentList			681109	1					
ANR	681414	Argument	"pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) )"		681109	2					
ANR	681415	CallExpression	"pkg . filePath ( ""ui"" , QStringLiteral ( ""config.qml"" ) )"		681109	0					
ANR	681416	Callee	pkg . filePath		681109	0					
ANR	681417	MemberAccess	pkg . filePath		681109	0					
ANR	681418	Identifier	pkg		681109	0					
ANR	681419	Identifier	filePath		681109	1					
ANR	681420	ArgumentList	"""ui"""		681109	1					
ANR	681421	Argument	"""ui"""		681109	0					
ANR	681422	PrimaryExpression	"""ui"""		681109	0					
ANR	681423	Argument	"QStringLiteral ( ""config.qml"" )"		681109	1					
ANR	681424	CallExpression	"QStringLiteral ( ""config.qml"" )"		681109	0					
ANR	681425	Callee	QStringLiteral		681109	0					
ANR	681426	Identifier	QStringLiteral		681109	0					
ANR	681427	ArgumentList	"""config.qml"""		681109	1					
ANR	681428	Argument	"""config.qml"""		681109	0					
ANR	681429	PrimaryExpression	"""config.qml"""		681109	0					
ANR	681430	Argument	package		681109	3					
ANR	681431	Identifier	package		681109	0					
ANR	681432	ReturnStatement	return m_wallpaperConfigModel ;	159:4:5975:6004	681109	1	True				
ANR	681433	Identifier	m_wallpaperConfigModel		681109	0					
ANR	681434	ReturnType	PlasmaQuick :: ConfigModel *		681109	1					
ANR	681435	Identifier	ContainmentConfigView :: wallpaperConfigModel		681109	2					
ANR	681436	ParameterList			681109	3					
ANR	681437	CFGEntryNode	ENTRY		681109		True				
ANR	681438	CFGExitNode	EXIT		681109		True				
ANR	681439	CFGErrorNode	ERROR		681109		True				
ANR	681440	Symbol	KDeclarative :: KDeclarative :: runtimePlatform		681109						
ANR	681441	Symbol	metadata		681109						
ANR	681442	Symbol	pkg . filePath		681109						
ANR	681443	Symbol	platform . isEmpty		681109						
ANR	681444	Symbol	m_wallpaperConfigModel		681109						
ANR	681445	Symbol	dir		681109						
ANR	681446	Symbol	pkg . metadata ( ) . name		681109						
ANR	681447	Symbol	pkg		681109						
ANR	681448	Symbol	platform		681109						
ANR	681449	Symbol	sdir		681109						
ANR	681450	Symbol	QFile :: exists		681109						
ANR	681451	Symbol	dirPath		681109						
ANR	681452	Symbol	KPackage :: PackageLoader :: self ( ) -> loadPackage		681109						
ANR	681453	Symbol	KPackage :: PackageLoader :: self		681109						
ANR	681454	Symbol	it . hasNext		681109						
ANR	681455	Symbol	package		681109						
ANR	681456	Symbol	* KPackage :: PackageLoader :: self		681109						
ANR	681457	Symbol	it . value		681109						
ANR	681458	Symbol	pkg . isValid		681109						
ANR	681459	Symbol	this		681109						
ANR	681460	Symbol	it		681109						
ANR	681461	Symbol	packages		681109						
ANR	681462	Symbol	i18n		681109						
ANR	681463	Symbol	QStringLiteral		681109						
ANR	681464	Symbol	pkg . metadata		681109						
ANR	681465	Symbol	pkg . metadata ( ) . iconName		681109						
ANR	681466	Function	ContainmentConfigView :: containmentPluginsConfigModel	162:0:6009:6564							
ANR	681467	FunctionDef	ContainmentConfigView :: containmentPluginsConfigModel ()		681466	0					
ANR	681468	CompoundStatement		163:0:6090:6564	681466	0					
ANR	681469	IfStatement	if ( ! m_containmentPluginsConfigModel )		681466	0					
ANR	681470	Condition	! m_containmentPluginsConfigModel	164:8:6100:6131	681466	0	True				
ANR	681471	UnaryOperationExpression	! m_containmentPluginsConfigModel		681466	0					
ANR	681472	UnaryOperator	!		681466	0					
ANR	681473	Identifier	m_containmentPluginsConfigModel		681466	1					
ANR	681474	CompoundStatement		5:8:132:239	681466	1					
ANR	681475	ExpressionStatement	m_containmentPluginsConfigModel = new PlasmaQuick :: ConfigModel ( this )	165:8:6144:6212	681466	0	True				
ANR	681476	AssignmentExpression	m_containmentPluginsConfigModel = new PlasmaQuick :: ConfigModel ( this )		681466	0		=			
ANR	681477	Identifier	m_containmentPluginsConfigModel		681466	0					
ANR	681478	Identifier	this		681466	1					
ANR	681479	IdentifierDeclStatement	"KPluginInfo :: List actions = Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType ( QStringLiteral ( ""Desktop"" ) ) ;"	167:8:6223:6330	681466	1	True				
ANR	681480	IdentifierDecl	"actions = Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType ( QStringLiteral ( ""Desktop"" ) )"		681466	0					
ANR	681481	IdentifierDeclType	KPluginInfo :: List		681466	0					
ANR	681482	Identifier	actions		681466	1					
ANR	681483	AssignmentExpression	"actions = Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType ( QStringLiteral ( ""Desktop"" ) )"		681466	2		=			
ANR	681484	Identifier	actions		681466	0					
ANR	681485	CallExpression	"Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType ( QStringLiteral ( ""Desktop"" ) )"		681466	1					
ANR	681486	Callee	Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType		681466	0					
ANR	681487	PtrMemberAccess	Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType		681466	0					
ANR	681488	CallExpression	Plasma :: PluginLoader :: self ( )		681466	0					
ANR	681489	Callee	Plasma :: PluginLoader :: self		681466	0					
ANR	681490	Identifier	Plasma :: PluginLoader :: self		681466	0					
ANR	681491	ArgumentList			681466	1					
ANR	681492	Identifier	listContainmentsOfType		681466	1					
ANR	681493	ArgumentList	"QStringLiteral ( ""Desktop"" )"		681466	1					
ANR	681494	Argument	"QStringLiteral ( ""Desktop"" )"		681466	0					
ANR	681495	CallExpression	"QStringLiteral ( ""Desktop"" )"		681466	0					
ANR	681496	Callee	QStringLiteral		681466	0					
ANR	681497	Identifier	QStringLiteral		681466	0					
ANR	681498	ArgumentList	"""Desktop"""		681466	1					
ANR	681499	Argument	"""Desktop"""		681466	0					
ANR	681500	PrimaryExpression	"""Desktop"""		681466	0					
ANR	681501	Statement	foreach	169:8:6341:6347	681466	2	True				
ANR	681502	Statement	(	169:16:6349:6349	681466	3	True				
ANR	681503	Statement	const	169:17:6350:6354	681466	4	True				
ANR	681504	Statement	KPluginInfo	169:23:6356:6366	681466	5	True				
ANR	681505	Statement	&	169:35:6368:6368	681466	6	True				
ANR	681506	Statement	info	169:36:6369:6372	681466	7	True				
ANR	681507	Statement	","	169:40:6373:6373	681466	8	True				
ANR	681508	Statement	actions	169:42:6375:6381	681466	9	True				
ANR	681509	Statement	)	169:49:6382:6382	681466	10	True				
ANR	681510	CompoundStatement		7:51:293:293	681466	11					
ANR	681511	ExpressionStatement	"m_containmentPluginsConfigModel -> appendCategory ( info . icon ( ) , info . name ( ) , QString ( ) , info . pluginName ( ) )"	170:12:6398:6501	681466	0	True				
ANR	681512	CallExpression	"m_containmentPluginsConfigModel -> appendCategory ( info . icon ( ) , info . name ( ) , QString ( ) , info . pluginName ( ) )"		681466	0					
ANR	681513	Callee	m_containmentPluginsConfigModel -> appendCategory		681466	0					
ANR	681514	PtrMemberAccess	m_containmentPluginsConfigModel -> appendCategory		681466	0					
ANR	681515	Identifier	m_containmentPluginsConfigModel		681466	0					
ANR	681516	Identifier	appendCategory		681466	1					
ANR	681517	ArgumentList	info . icon ( )		681466	1					
ANR	681518	Argument	info . icon ( )		681466	0					
ANR	681519	CallExpression	info . icon ( )		681466	0					
ANR	681520	Callee	info . icon		681466	0					
ANR	681521	MemberAccess	info . icon		681466	0					
ANR	681522	Identifier	info		681466	0					
ANR	681523	Identifier	icon		681466	1					
ANR	681524	ArgumentList			681466	1					
ANR	681525	Argument	info . name ( )		681466	1					
ANR	681526	CallExpression	info . name ( )		681466	0					
ANR	681527	Callee	info . name		681466	0					
ANR	681528	MemberAccess	info . name		681466	0					
ANR	681529	Identifier	info		681466	0					
ANR	681530	Identifier	name		681466	1					
ANR	681531	ArgumentList			681466	1					
ANR	681532	Argument	QString ( )		681466	2					
ANR	681533	CallExpression	QString ( )		681466	0					
ANR	681534	Callee	QString		681466	0					
ANR	681535	Identifier	QString		681466	0					
ANR	681536	ArgumentList			681466	1					
ANR	681537	Argument	info . pluginName ( )		681466	3					
ANR	681538	CallExpression	info . pluginName ( )		681466	0					
ANR	681539	Callee	info . pluginName		681466	0					
ANR	681540	MemberAccess	info . pluginName		681466	0					
ANR	681541	Identifier	info		681466	0					
ANR	681542	Identifier	pluginName		681466	1					
ANR	681543	ArgumentList			681466	1					
ANR	681544	ReturnStatement	return m_containmentPluginsConfigModel ;	174:4:6524:6562	681466	1	True				
ANR	681545	Identifier	m_containmentPluginsConfigModel		681466	0					
ANR	681546	ReturnType	PlasmaQuick :: ConfigModel *		681466	1					
ANR	681547	Identifier	ContainmentConfigView :: containmentPluginsConfigModel		681466	2					
ANR	681548	ParameterList			681466	3					
ANR	681549	CFGEntryNode	ENTRY		681466		True				
ANR	681550	CFGExitNode	EXIT		681466		True				
ANR	681551	Symbol	Plasma :: PluginLoader :: self ( ) -> listContainmentsOfType		681466						
ANR	681552	Symbol	info . name		681466						
ANR	681553	Symbol	info . icon		681466						
ANR	681554	Symbol	QString		681466						
ANR	681555	Symbol	this		681466						
ANR	681556	Symbol	Plasma :: PluginLoader :: self		681466						
ANR	681557	Symbol	* Plasma :: PluginLoader :: self		681466						
ANR	681558	Symbol	QStringLiteral		681466						
ANR	681559	Symbol	info . pluginName		681466						
ANR	681560	Symbol	actions		681466						
ANR	681561	Symbol	m_containmentPluginsConfigModel		681466						
ANR	681562	Symbol	info		681466						
ANR	681563	Function	ContainmentConfigView :: wallpaperConfiguration	177:0:6567:6693							
ANR	681564	FunctionDef	ContainmentConfigView :: wallpaperConfiguration ()		681563	0					
ANR	681565	CompoundStatement		178:0:6654:6693	681563	0					
ANR	681566	ReturnStatement	return m_currentWallpaperConfig ;	179:4:6660:6691	681563	0	True				
ANR	681567	Identifier	m_currentWallpaperConfig		681563	0					
ANR	681568	ReturnType	KDeclarative :: ConfigPropertyMap *		681563	1					
ANR	681569	Identifier	ContainmentConfigView :: wallpaperConfiguration		681563	2					
ANR	681570	ParameterList			681563	3					
ANR	681571	CFGEntryNode	ENTRY		681563		True				
ANR	681572	CFGExitNode	EXIT		681563		True				
ANR	681573	Symbol	m_currentWallpaperConfig		681563						
ANR	681574	Function	ContainmentConfigView :: currentWallpaper	182:0:6696:6785							
ANR	681575	FunctionDef	ContainmentConfigView :: currentWallpaper ()		681574	0					
ANR	681576	CompoundStatement		183:0:6752:6785	681574	0					
ANR	681577	ReturnStatement	return m_currentWallpaper ;	184:4:6758:6783	681574	0	True				
ANR	681578	Identifier	m_currentWallpaper		681574	0					
ANR	681579	ReturnType	QString		681574	1					
ANR	681580	Identifier	ContainmentConfigView :: currentWallpaper		681574	2					
ANR	681581	ParameterList			681574	3					
ANR	681582	CFGEntryNode	ENTRY		681574		True				
ANR	681583	CFGExitNode	EXIT		681574		True				
ANR	681584	Symbol	m_currentWallpaper		681574						
ANR	681585	Function	ContainmentConfigView :: setCurrentWallpaper	187:0:6788:7872							
ANR	681586	FunctionDef	ContainmentConfigView :: setCurrentWallpaper (const QString & wallpaper)		681585	0					
ANR	681587	CompoundStatement		188:0:6862:7872	681585	0					
ANR	681588	IfStatement	if ( m_currentWallpaper == wallpaper )		681585	0					
ANR	681589	Condition	m_currentWallpaper == wallpaper	189:8:6872:6902	681585	0	True				
ANR	681590	EqualityExpression	m_currentWallpaper == wallpaper		681585	0		==			
ANR	681591	Identifier	m_currentWallpaper		681585	0					
ANR	681592	Identifier	wallpaper		681585	1					
ANR	681593	CompoundStatement		2:41:42:42	681585	1					
ANR	681594	ReturnStatement	return ;	190:8:6915:6921	681585	0	True				
ANR	681595	Statement	delete	193:4:6934:6939	681585	1	True				
ANR	681596	ExpressionStatement	m_ownWallpaperConfig	193:11:6941:6961	681585	2	True				
ANR	681597	Identifier	m_ownWallpaperConfig		681585	0					
ANR	681598	ExpressionStatement	m_ownWallpaperConfig = 0	194:4:6967:6991	681585	3	True				
ANR	681599	AssignmentExpression	m_ownWallpaperConfig = 0		681585	0		=			
ANR	681600	Identifier	m_ownWallpaperConfig		681585	0					
ANR	681601	PrimaryExpression	0		681585	1					
ANR	681602	IfStatement	if ( m_containment -> wallpaper ( ) == wallpaper )		681585	4					
ANR	681603	Condition	m_containment -> wallpaper ( ) == wallpaper	196:8:7002:7040	681585	0	True				
ANR	681604	EqualityExpression	m_containment -> wallpaper ( ) == wallpaper		681585	0		==			
ANR	681605	CallExpression	m_containment -> wallpaper ( )		681585	0					
ANR	681606	Callee	m_containment -> wallpaper		681585	0					
ANR	681607	PtrMemberAccess	m_containment -> wallpaper		681585	0					
ANR	681608	Identifier	m_containment		681585	0					
ANR	681609	Identifier	wallpaper		681585	1					
ANR	681610	ArgumentList			681585	1					
ANR	681611	Identifier	wallpaper		681585	1					
ANR	681612	CompoundStatement		9:49:180:180	681585	1					
ANR	681613	ExpressionStatement	syncWallpaperObjects ( )	197:8:7053:7075	681585	0	True				
ANR	681614	CallExpression	syncWallpaperObjects ( )		681585	0					
ANR	681615	Callee	syncWallpaperObjects		681585	0					
ANR	681616	Identifier	syncWallpaperObjects		681585	0					
ANR	681617	ArgumentList			681585	1					
ANR	681618	ElseStatement	else		681585	0					
ANR	681619	CompoundStatement		18:8:665:707	681585	0					
ANR	681620	IdentifierDeclStatement	"KPackage :: Package pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) ) ;"	201:8:7229:7331	681585	0	True				
ANR	681621	IdentifierDecl	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) )"		681585	0					
ANR	681622	IdentifierDeclType	KPackage :: Package		681585	0					
ANR	681623	Identifier	pkg		681585	1					
ANR	681624	AssignmentExpression	"pkg = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) )"		681585	2		=			
ANR	681625	Identifier	pkg		681585	0					
ANR	681626	CallExpression	"KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/Generic"" ) )"		681585	1					
ANR	681627	Callee	KPackage :: PackageLoader :: self ( ) -> loadPackage		681585	0					
ANR	681628	PtrMemberAccess	KPackage :: PackageLoader :: self ( ) -> loadPackage		681585	0					
ANR	681629	CallExpression	KPackage :: PackageLoader :: self ( )		681585	0					
ANR	681630	Callee	KPackage :: PackageLoader :: self		681585	0					
ANR	681631	Identifier	KPackage :: PackageLoader :: self		681585	0					
ANR	681632	ArgumentList			681585	1					
ANR	681633	Identifier	loadPackage		681585	1					
ANR	681634	ArgumentList	"QStringLiteral ( ""Plasma/Generic"" )"		681585	1					
ANR	681635	Argument	"QStringLiteral ( ""Plasma/Generic"" )"		681585	0					
ANR	681636	CallExpression	"QStringLiteral ( ""Plasma/Generic"" )"		681585	0					
ANR	681637	Callee	QStringLiteral		681585	0					
ANR	681638	Identifier	QStringLiteral		681585	0					
ANR	681639	ArgumentList	"""Plasma/Generic"""		681585	1					
ANR	681640	Argument	"""Plasma/Generic"""		681585	0					
ANR	681641	PrimaryExpression	"""Plasma/Generic"""		681585	0					
ANR	681642	Statement	pkg	202:8:7341:7343	681585	1	True				
ANR	681643	Statement	.	202:11:7344:7344	681585	2	True				
ANR	681644	Statement	setDefaultPackageRoot	202:12:7345:7365	681585	3	True				
ANR	681645	Statement	(	202:33:7366:7366	681585	4	True				
ANR	681646	Statement	PLASMA_RELATIVE_DATA_INSTALL_DIR	202:34:7367:7398	681585	5	True				
ANR	681647	Statement	"""/wallpapers"""	202:67:7400:7412	681585	6	True				
ANR	681648	Statement	)	202:80:7413:7413	681585	7	True				
ANR	681649	ExpressionStatement		202:81:7414:7414	681585	8	True				
ANR	681650	ExpressionStatement	pkg . setPath ( wallpaper )	203:8:7424:7446	681585	9	True				
ANR	681651	CallExpression	pkg . setPath ( wallpaper )		681585	0					
ANR	681652	Callee	pkg . setPath		681585	0					
ANR	681653	MemberAccess	pkg . setPath		681585	0					
ANR	681654	Identifier	pkg		681585	0					
ANR	681655	Identifier	setPath		681585	1					
ANR	681656	ArgumentList	wallpaper		681585	1					
ANR	681657	Argument	wallpaper		681585	0					
ANR	681658	Identifier	wallpaper		681585	0					
ANR	681659	IdentifierDeclStatement	"QFile file ( pkg . filePath ( ""config"" , QStringLiteral ( ""main.xml"" ) ) ) ;"	204:8:7456:7518	681585	10	True				
ANR	681660	IdentifierDecl	"file ( pkg . filePath ( ""config"" , QStringLiteral ( ""main.xml"" ) ) )"		681585	0					
ANR	681661	IdentifierDeclType	QFile		681585	0					
ANR	681662	Identifier	file		681585	1					
ANR	681663	CallExpression	"pkg . filePath ( ""config"" , QStringLiteral ( ""main.xml"" ) )"		681585	2					
ANR	681664	Callee	pkg . filePath		681585	0					
ANR	681665	MemberAccess	pkg . filePath		681585	0					
ANR	681666	Identifier	pkg		681585	0					
ANR	681667	Identifier	filePath		681585	1					
ANR	681668	ArgumentList	"""config"""		681585	1					
ANR	681669	Argument	"""config"""		681585	0					
ANR	681670	PrimaryExpression	"""config"""		681585	0					
ANR	681671	Argument	"QStringLiteral ( ""main.xml"" )"		681585	1					
ANR	681672	CallExpression	"QStringLiteral ( ""main.xml"" )"		681585	0					
ANR	681673	Callee	QStringLiteral		681585	0					
ANR	681674	Identifier	QStringLiteral		681585	0					
ANR	681675	ArgumentList	"""main.xml"""		681585	1					
ANR	681676	Argument	"""main.xml"""		681585	0					
ANR	681677	PrimaryExpression	"""main.xml"""		681585	0					
ANR	681678	IdentifierDeclStatement	KConfigGroup cfg = m_containment -> config ( ) ;	205:8:7528:7570	681585	11	True				
ANR	681679	IdentifierDecl	cfg = m_containment -> config ( )		681585	0					
ANR	681680	IdentifierDeclType	KConfigGroup		681585	0					
ANR	681681	Identifier	cfg		681585	1					
ANR	681682	AssignmentExpression	cfg = m_containment -> config ( )		681585	2		=			
ANR	681683	Identifier	cfg		681585	0					
ANR	681684	CallExpression	m_containment -> config ( )		681585	1					
ANR	681685	Callee	m_containment -> config		681585	0					
ANR	681686	PtrMemberAccess	m_containment -> config		681585	0					
ANR	681687	Identifier	m_containment		681585	0					
ANR	681688	Identifier	config		681585	1					
ANR	681689	ArgumentList			681585	1					
ANR	681690	ExpressionStatement	"cfg = KConfigGroup ( & cfg , ""Wallpaper"" )"	206:8:7580:7617	681585	12	True				
ANR	681691	AssignmentExpression	"cfg = KConfigGroup ( & cfg , ""Wallpaper"" )"		681585	0		=			
ANR	681692	Identifier	cfg		681585	0					
ANR	681693	CallExpression	"KConfigGroup ( & cfg , ""Wallpaper"" )"		681585	1					
ANR	681694	Callee	KConfigGroup		681585	0					
ANR	681695	Identifier	KConfigGroup		681585	0					
ANR	681696	ArgumentList	& cfg		681585	1					
ANR	681697	Argument	& cfg		681585	0					
ANR	681698	UnaryOperationExpression	& cfg		681585	0					
ANR	681699	UnaryOperator	&		681585	0					
ANR	681700	Identifier	cfg		681585	1					
ANR	681701	Argument	"""Wallpaper"""		681585	1					
ANR	681702	PrimaryExpression	"""Wallpaper"""		681585	0					
ANR	681703	ExpressionStatement	"m_currentWallpaperConfig = m_ownWallpaperConfig = new KDeclarative :: ConfigPropertyMap ( new KConfigLoader ( cfg , & file ) , this )"	207:8:7627:7749	681585	13	True				
ANR	681704	AssignmentExpression	"m_currentWallpaperConfig = m_ownWallpaperConfig = new KDeclarative :: ConfigPropertyMap ( new KConfigLoader ( cfg , & file ) , this )"		681585	0		=			
ANR	681705	Identifier	m_currentWallpaperConfig		681585	0					
ANR	681706	AssignmentExpression	"m_ownWallpaperConfig = new KDeclarative :: ConfigPropertyMap ( new KConfigLoader ( cfg , & file ) , this )"		681585	1		=			
ANR	681707	Identifier	m_ownWallpaperConfig		681585	0					
ANR	681708	Expression	"new KConfigLoader ( cfg , & file ) , this"		681585	1					
ANR	681709	Expression	"cfg , & file"		681585	0					
ANR	681710	Identifier	cfg		681585	0					
ANR	681711	UnaryOperationExpression	& file		681585	1					
ANR	681712	UnaryOperator	&		681585	0					
ANR	681713	Identifier	file		681585	1					
ANR	681714	Identifier	this		681585	1					
ANR	681715	ExpressionStatement	m_currentWallpaper = wallpaper	210:4:7762:7792	681585	5	True				
ANR	681716	AssignmentExpression	m_currentWallpaper = wallpaper		681585	0		=			
ANR	681717	Identifier	m_currentWallpaper		681585	0					
ANR	681718	Identifier	wallpaper		681585	1					
ANR	681719	IdentifierDeclStatement	emit currentWallpaperChanged ( ) ;	211:4:7798:7828	681585	6	True				
ANR	681720	IdentifierDecl	currentWallpaperChanged ( )		681585	0					
ANR	681721	IdentifierDeclType	emit		681585	0					
ANR	681722	Identifier	currentWallpaperChanged		681585	1					
ANR	681723	IdentifierDeclStatement	emit wallpaperConfigurationChanged ( ) ;	212:4:7834:7870	681585	7	True				
ANR	681724	IdentifierDecl	wallpaperConfigurationChanged ( )		681585	0					
ANR	681725	IdentifierDeclType	emit		681585	0					
ANR	681726	Identifier	wallpaperConfigurationChanged		681585	1					
ANR	681727	ReturnType	void		681585	1					
ANR	681728	Identifier	ContainmentConfigView :: setCurrentWallpaper		681585	2					
ANR	681729	ParameterList	const QString & wallpaper		681585	3					
ANR	681730	Parameter	const QString & wallpaper	187:48:6836:6859	681585	0	True				
ANR	681731	ParameterType	const QString &		681585	0					
ANR	681732	Identifier	wallpaper		681585	1					
ANR	681733	CFGEntryNode	ENTRY		681585		True				
ANR	681734	CFGExitNode	EXIT		681585		True				
ANR	681735	Symbol	m_containment -> wallpaper		681585						
ANR	681736	Symbol	KPackage :: PackageLoader :: self		681585						
ANR	681737	Symbol	wallpaper		681585						
ANR	681738	Symbol	* KPackage :: PackageLoader :: self		681585						
ANR	681739	Symbol	cfg		681585						
ANR	681740	Symbol	m_containment -> config		681585						
ANR	681741	Symbol	this		681585						
ANR	681742	Symbol	pkg		681585						
ANR	681743	Symbol	& cfg		681585						
ANR	681744	Symbol	m_currentWallpaperConfig		681585						
ANR	681745	Symbol	wallpaperConfigurationChanged		681585						
ANR	681746	Symbol	file		681585						
ANR	681747	Symbol	m_currentWallpaper		681585						
ANR	681748	Symbol	* m_containment		681585						
ANR	681749	Symbol	m_containment		681585						
ANR	681750	Symbol	QStringLiteral		681585						
ANR	681751	Symbol	KPackage :: PackageLoader :: self ( ) -> loadPackage		681585						
ANR	681752	Symbol	& file		681585						
ANR	681753	Symbol	m_ownWallpaperConfig		681585						
ANR	681754	Symbol	KConfigGroup		681585						
ANR	681755	Symbol	currentWallpaperChanged		681585						
ANR	681756	Function	ContainmentConfigView :: applyWallpaper	215:0:7875:8336							
ANR	681757	FunctionDef	ContainmentConfigView :: applyWallpaper ()		681756	0					
ANR	681758	CompoundStatement		216:0:7920:8336	681756	0					
ANR	681759	ExpressionStatement	m_containment -> setWallpaper ( m_currentWallpaper )	217:4:7926:7973	681756	0	True				
ANR	681760	CallExpression	m_containment -> setWallpaper ( m_currentWallpaper )		681756	0					
ANR	681761	Callee	m_containment -> setWallpaper		681756	0					
ANR	681762	PtrMemberAccess	m_containment -> setWallpaper		681756	0					
ANR	681763	Identifier	m_containment		681756	0					
ANR	681764	Identifier	setWallpaper		681756	1					
ANR	681765	ArgumentList	m_currentWallpaper		681756	1					
ANR	681766	Argument	m_currentWallpaper		681756	0					
ANR	681767	Identifier	m_currentWallpaper		681756	0					
ANR	681768	ExpressionStatement	syncWallpaperObjects ( )	219:4:7980:8002	681756	1	True				
ANR	681769	CallExpression	syncWallpaperObjects ( )		681756	0					
ANR	681770	Callee	syncWallpaperObjects		681756	0					
ANR	681771	Identifier	syncWallpaperObjects		681756	0					
ANR	681772	ArgumentList			681756	1					
ANR	681773	IfStatement	if ( m_currentWallpaperConfig && m_ownWallpaperConfig )		681756	2					
ANR	681774	Condition	m_currentWallpaperConfig && m_ownWallpaperConfig	221:8:8013:8060	681756	0	True				
ANR	681775	AndExpression	m_currentWallpaperConfig && m_ownWallpaperConfig		681756	0		&&			
ANR	681776	Identifier	m_currentWallpaperConfig		681756	0					
ANR	681777	Identifier	m_ownWallpaperConfig		681756	1					
ANR	681778	CompoundStatement		6:58:142:142	681756	1					
ANR	681779	Statement	for	222:8:8073:8075	681756	0	True				
ANR	681780	Statement	(	222:12:8077:8077	681756	1	True				
ANR	681781	Statement	const	222:13:8078:8082	681756	2	True				
ANR	681782	Statement	auto	222:19:8084:8087	681756	3	True				
ANR	681783	Statement	&	222:24:8089:8089	681756	4	True				
ANR	681784	Label	key :	222:25:8090:8094	681756	5	True				
ANR	681785	Identifier	key		681756	0					
ANR	681786	Statement	m_ownWallpaperConfig	222:31:8096:8115	681756	6	True				
ANR	681787	Statement	->	222:51:8116:8117	681756	7	True				
ANR	681788	Statement	keys	222:53:8118:8121	681756	8	True				
ANR	681789	Statement	(	222:57:8122:8122	681756	9	True				
ANR	681790	Statement	)	222:58:8123:8123	681756	10	True				
ANR	681791	Statement	)	222:59:8124:8124	681756	11	True				
ANR	681792	CompoundStatement		7:61:205:205	681756	12					
ANR	681793	ExpressionStatement	"m_currentWallpaperConfig -> insert ( key , m_ownWallpaperConfig -> value ( key ) )"	223:12:8140:8211	681756	0	True				
ANR	681794	CallExpression	"m_currentWallpaperConfig -> insert ( key , m_ownWallpaperConfig -> value ( key ) )"		681756	0					
ANR	681795	Callee	m_currentWallpaperConfig -> insert		681756	0					
ANR	681796	PtrMemberAccess	m_currentWallpaperConfig -> insert		681756	0					
ANR	681797	Identifier	m_currentWallpaperConfig		681756	0					
ANR	681798	Identifier	insert		681756	1					
ANR	681799	ArgumentList	key		681756	1					
ANR	681800	Argument	key		681756	0					
ANR	681801	Identifier	key		681756	0					
ANR	681802	Argument	m_ownWallpaperConfig -> value ( key )		681756	1					
ANR	681803	CallExpression	m_ownWallpaperConfig -> value ( key )		681756	0					
ANR	681804	Callee	m_ownWallpaperConfig -> value		681756	0					
ANR	681805	PtrMemberAccess	m_ownWallpaperConfig -> value		681756	0					
ANR	681806	Identifier	m_ownWallpaperConfig		681756	0					
ANR	681807	Identifier	value		681756	1					
ANR	681808	ArgumentList	key		681756	1					
ANR	681809	Argument	key		681756	0					
ANR	681810	Identifier	key		681756	0					
ANR	681811	Statement	delete	227:4:8234:8239	681756	3	True				
ANR	681812	ExpressionStatement	m_ownWallpaperConfig	227:11:8241:8261	681756	4	True				
ANR	681813	Identifier	m_ownWallpaperConfig		681756	0					
ANR	681814	ExpressionStatement	m_ownWallpaperConfig = 0	228:4:8267:8291	681756	5	True				
ANR	681815	AssignmentExpression	m_ownWallpaperConfig = 0		681756	0		=			
ANR	681816	Identifier	m_ownWallpaperConfig		681756	0					
ANR	681817	PrimaryExpression	0		681756	1					
ANR	681818	IdentifierDeclStatement	emit wallpaperConfigurationChanged ( ) ;	230:4:8298:8334	681756	6	True				
ANR	681819	IdentifierDecl	wallpaperConfigurationChanged ( )		681756	0					
ANR	681820	IdentifierDeclType	emit		681756	0					
ANR	681821	Identifier	wallpaperConfigurationChanged		681756	1					
ANR	681822	ReturnType	void		681756	1					
ANR	681823	Identifier	ContainmentConfigView :: applyWallpaper		681756	2					
ANR	681824	ParameterList			681756	3					
ANR	681825	CFGEntryNode	ENTRY		681756		True				
ANR	681826	CFGExitNode	EXIT		681756		True				
ANR	681827	Symbol	m_currentWallpaperConfig		681756						
ANR	681828	Symbol	m_ownWallpaperConfig -> value		681756						
ANR	681829	Symbol	wallpaperConfigurationChanged		681756						
ANR	681830	Symbol	m_currentWallpaper		681756						
ANR	681831	Symbol	m_containment		681756						
ANR	681832	Symbol	* m_ownWallpaperConfig		681756						
ANR	681833	Symbol	m_ownWallpaperConfig		681756						
ANR	681834	Symbol	key		681756						
ANR	681835	Function	ContainmentConfigView :: syncWallpaperObjects	233:0:8339:8918							
ANR	681836	FunctionDef	ContainmentConfigView :: syncWallpaperObjects ()		681835	0					
ANR	681837	CompoundStatement		234:0:8390:8918	681835	0					
ANR	681838	Statement	QObject	235:4:8396:8402	681835	0	True				
ANR	681839	Statement	*	235:12:8404:8404	681835	1	True				
ANR	681840	Statement	wallpaperGraphicsObject	235:13:8405:8427	681835	2	True				
ANR	681841	Statement	=	235:37:8429:8429	681835	3	True				
ANR	681842	Statement	m_containment	235:39:8431:8443	681835	4	True				
ANR	681843	Statement	->	235:52:8444:8445	681835	5	True				
ANR	681844	Statement	property	235:54:8446:8453	681835	6	True				
ANR	681845	Statement	(	235:62:8454:8454	681835	7	True				
ANR	681846	Statement	"""wallpaperGraphicsObject"""	235:63:8455:8479	681835	8	True				
ANR	681847	Statement	)	235:88:8480:8480	681835	9	True				
ANR	681848	Statement	.	235:89:8481:8481	681835	10	True				
ANR	681849	Statement	value	235:90:8482:8486	681835	11	True				
ANR	681850	Statement	<	235:95:8487:8487	681835	12	True				
ANR	681851	Statement	QObject	235:96:8488:8494	681835	13	True				
ANR	681852	Statement	*	235:104:8496:8496	681835	14	True				
ANR	681853	Statement	>	235:105:8497:8497	681835	15	True				
ANR	681854	Statement	(	235:106:8498:8498	681835	16	True				
ANR	681855	Statement	)	235:107:8499:8499	681835	17	True				
ANR	681856	ExpressionStatement		235:108:8500:8500	681835	18	True				
ANR	681857	IfStatement	if ( ! wallpaperGraphicsObject )		681835	19					
ANR	681858	Condition	! wallpaperGraphicsObject	237:8:8511:8534	681835	0	True				
ANR	681859	UnaryOperationExpression	! wallpaperGraphicsObject		681835	0					
ANR	681860	UnaryOperator	!		681835	0					
ANR	681861	Identifier	wallpaperGraphicsObject		681835	1					
ANR	681862	CompoundStatement		4:34:146:146	681835	1					
ANR	681863	ReturnStatement	return ;	238:8:8547:8553	681835	0	True				
ANR	681864	ExpressionStatement	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""wallpaper"" ) , wallpaperGraphicsObject )"	240:4:8565:8652	681835	20	True				
ANR	681865	CallExpression	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""wallpaper"" ) , wallpaperGraphicsObject )"		681835	0					
ANR	681866	Callee	rootContext ( ) -> setContextProperty		681835	0					
ANR	681867	PtrMemberAccess	rootContext ( ) -> setContextProperty		681835	0					
ANR	681868	CallExpression	rootContext ( )		681835	0					
ANR	681869	Callee	rootContext		681835	0					
ANR	681870	Identifier	rootContext		681835	0					
ANR	681871	ArgumentList			681835	1					
ANR	681872	Identifier	setContextProperty		681835	1					
ANR	681873	ArgumentList	"QStringLiteral ( ""wallpaper"" )"		681835	1					
ANR	681874	Argument	"QStringLiteral ( ""wallpaper"" )"		681835	0					
ANR	681875	CallExpression	"QStringLiteral ( ""wallpaper"" )"		681835	0					
ANR	681876	Callee	QStringLiteral		681835	0					
ANR	681877	Identifier	QStringLiteral		681835	0					
ANR	681878	ArgumentList	"""wallpaper"""		681835	1					
ANR	681879	Argument	"""wallpaper"""		681835	0					
ANR	681880	PrimaryExpression	"""wallpaper"""		681835	0					
ANR	681881	Argument	wallpaperGraphicsObject		681835	1					
ANR	681882	Identifier	wallpaperGraphicsObject		681835	0					
ANR	681883	Statement	m_currentWallpaperConfig	243:4:8772:8795	681835	21	True				
ANR	681884	Statement	=	243:29:8797:8797	681835	22	True				
ANR	681885	Statement	static_cast	243:31:8799:8809	681835	23	True				
ANR	681886	Statement	<	243:42:8810:8810	681835	24	True				
ANR	681887	Statement	KDeclarative	243:43:8811:8822	681835	25	True				
ANR	681888	Statement	::	243:55:8823:8824	681835	26	True				
ANR	681889	Statement	ConfigPropertyMap	243:57:8825:8841	681835	27	True				
ANR	681890	Statement	*	243:75:8843:8843	681835	28	True				
ANR	681891	Statement	>	243:76:8844:8844	681835	29	True				
ANR	681892	Statement	(	243:77:8845:8845	681835	30	True				
ANR	681893	Statement	wallpaperGraphicsObject	243:78:8846:8868	681835	31	True				
ANR	681894	Statement	->	243:101:8869:8870	681835	32	True				
ANR	681895	Statement	property	243:103:8871:8878	681835	33	True				
ANR	681896	Statement	(	243:111:8879:8879	681835	34	True				
ANR	681897	Statement	"""configuration"""	243:112:8880:8894	681835	35	True				
ANR	681898	Statement	)	243:127:8895:8895	681835	36	True				
ANR	681899	Statement	.	243:128:8896:8896	681835	37	True				
ANR	681900	Statement	value	243:129:8897:8901	681835	38	True				
ANR	681901	Statement	<	243:134:8902:8902	681835	39	True				
ANR	681902	Statement	QObject	243:135:8903:8909	681835	40	True				
ANR	681903	Statement	*	243:143:8911:8911	681835	41	True				
ANR	681904	Statement	>	243:144:8912:8912	681835	42	True				
ANR	681905	Statement	(	243:145:8913:8913	681835	43	True				
ANR	681906	Statement	)	243:146:8914:8914	681835	44	True				
ANR	681907	Statement	)	243:147:8915:8915	681835	45	True				
ANR	681908	ExpressionStatement		243:148:8916:8916	681835	46	True				
ANR	681909	ReturnType	void		681835	1					
ANR	681910	Identifier	ContainmentConfigView :: syncWallpaperObjects		681835	2					
ANR	681911	ParameterList			681835	3					
ANR	681912	CFGEntryNode	ENTRY		681835		True				
ANR	681913	CFGExitNode	EXIT		681835		True				
ANR	681914	Symbol	wallpaperGraphicsObject		681835						
ANR	681915	Symbol	QStringLiteral		681835						
ANR	681916	Symbol	rootContext		681835						
