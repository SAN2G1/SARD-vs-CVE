command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	553245	File	data/converged/CVE-2018-6791_plasma-workspace/panel.cpp								
ANR	553246	Function	Panel :: Panel	37:0:1070:1242							
ANR	553247	FunctionDef	"Panel :: Panel (Plasma :: Containment * containment , QObject * parent)"		553246	0					
ANR	553248	CompoundStatement		39:0:1173:1242	553246	0					
ANR	553249	Statement	m_corona	40:4:1179:1186	553246	0	True				
ANR	553250	Statement	=	40:13:1188:1188	553246	1	True				
ANR	553251	Statement	qobject_cast	40:15:1190:1201	553246	2	True				
ANR	553252	Statement	<	40:27:1202:1202	553246	3	True				
ANR	553253	Statement	ShellCorona	40:28:1203:1213	553246	4	True				
ANR	553254	Statement	*	40:40:1215:1215	553246	5	True				
ANR	553255	Statement	>	40:41:1216:1216	553246	6	True				
ANR	553256	ExpressionStatement	containment -> corona ( )	40:42:1217:1240	553246	7	True				
ANR	553257	CallExpression	containment -> corona ( )		553246	0					
ANR	553258	Callee	containment -> corona		553246	0					
ANR	553259	PtrMemberAccess	containment -> corona		553246	0					
ANR	553260	Identifier	containment		553246	0					
ANR	553261	Identifier	corona		553246	1					
ANR	553262	ArgumentList			553246	1					
ANR	553263	Identifier	Panel :: Panel		553246	1					
ANR	553264	ParameterList	"Plasma :: Containment * containment , QObject * parent"		553246	2					
ANR	553265	Parameter	Plasma :: Containment * containment	37:13:1083:1114	553246	0	True				
ANR	553266	ParameterType	Plasma :: Containment *		553246	0					
ANR	553267	Identifier	containment		553246	1					
ANR	553268	Parameter	QObject * parent	37:47:1117:1131	553246	1	True				
ANR	553269	ParameterType	QObject *		553246	0					
ANR	553270	Identifier	parent		553246	1					
ANR	553271	CFGEntryNode	ENTRY		553246		True				
ANR	553272	CFGExitNode	EXIT		553246		True				
ANR	553273	Symbol	containment		553246						
ANR	553274	Symbol	parent		553246						
ANR	553275	Function	Panel :: ~Panel	43:0:1245:1263							
ANR	553276	FunctionDef	Panel :: ~Panel ()		553275	0					
ANR	553277	CompoundStatement		44:0:1261:1263	553275	0					
ANR	553278	Identifier	Panel :: ~Panel		553275	1					
ANR	553279	ParameterList			553275	2					
ANR	553280	CFGEntryNode	ENTRY		553275		True				
ANR	553281	CFGExitNode	EXIT		553275		True				
ANR	553282	Function	Panel :: location	47:0:1266:2057							
ANR	553283	FunctionDef	Panel :: location ()		553282	0					
ANR	553284	CompoundStatement		48:0:1298:2057	553282	0					
ANR	553285	IdentifierDeclStatement	Plasma :: Containment * c = containment ( ) ;	49:4:1304:1342	553282	0	True				
ANR	553286	IdentifierDecl	* c = containment ( )		553282	0					
ANR	553287	IdentifierDeclType	Plasma :: Containment *		553282	0					
ANR	553288	Identifier	c		553282	1					
ANR	553289	AssignmentExpression	* c = containment ( )		553282	2		=			
ANR	553290	Identifier	c		553282	0					
ANR	553291	CallExpression	containment ( )		553282	1					
ANR	553292	Callee	containment		553282	0					
ANR	553293	Identifier	containment		553282	0					
ANR	553294	ArgumentList			553282	1					
ANR	553295	IfStatement	if ( ! c )		553282	1					
ANR	553296	Condition	! c	50:8:1352:1353	553282	0	True				
ANR	553297	UnaryOperationExpression	! c		553282	0					
ANR	553298	UnaryOperator	!		553282	0					
ANR	553299	Identifier	c		553282	1					
ANR	553300	CompoundStatement		3:12:57:57	553282	1					
ANR	553301	ReturnStatement	"return ""floating"" ;"	51:8:1366:1383	553282	0	True				
ANR	553302	PrimaryExpression	"""floating"""		553282	0					
ANR	553303	SwitchStatement	switch ( c -> location ( ) )		553282	2					
ANR	553304	Condition	c -> location ( )	54:12:1404:1416	553282	0	True				
ANR	553305	CallExpression	c -> location ( )		553282	0					
ANR	553306	Callee	c -> location		553282	0					
ANR	553307	PtrMemberAccess	c -> location		553282	0					
ANR	553308	Identifier	c		553282	0					
ANR	553309	Identifier	location		553282	1					
ANR	553310	ArgumentList			553282	1					
ANR	553311	CompoundStatement		7:27:120:120	553282	1					
ANR	553312	Label	case Plasma :: Types :: Floating :	55:8:1429:1457	553282	0	True				
ANR	553313	Identifier	Plasma :: Types :: Floating		553282	0					
ANR	553314	ReturnStatement	"return ""floating"" ;"	56:12:1471:1488	553282	1	True				
ANR	553315	PrimaryExpression	"""floating"""		553282	0					
ANR	553316	BreakStatement	break ;	57:12:1502:1507	553282	2	True				
ANR	553317	Label	case Plasma :: Types :: Desktop :	58:8:1517:1544	553282	3	True				
ANR	553318	Identifier	Plasma :: Types :: Desktop		553282	0					
ANR	553319	ReturnStatement	"return ""desktop"" ;"	59:12:1558:1574	553282	4	True				
ANR	553320	PrimaryExpression	"""desktop"""		553282	0					
ANR	553321	BreakStatement	break ;	60:12:1588:1593	553282	5	True				
ANR	553322	Label	case Plasma :: Types :: FullScreen :	61:8:1603:1633	553282	6	True				
ANR	553323	Identifier	Plasma :: Types :: FullScreen		553282	0					
ANR	553324	ReturnStatement	"return ""fullscreen"" ;"	62:12:1647:1666	553282	7	True				
ANR	553325	PrimaryExpression	"""fullscreen"""		553282	0					
ANR	553326	BreakStatement	break ;	63:12:1680:1685	553282	8	True				
ANR	553327	Label	case Plasma :: Types :: TopEdge :	64:8:1695:1722	553282	9	True				
ANR	553328	Identifier	Plasma :: Types :: TopEdge		553282	0					
ANR	553329	ReturnStatement	"return ""top"" ;"	65:12:1736:1748	553282	10	True				
ANR	553330	PrimaryExpression	"""top"""		553282	0					
ANR	553331	BreakStatement	break ;	66:12:1762:1767	553282	11	True				
ANR	553332	Label	case Plasma :: Types :: BottomEdge :	67:8:1777:1807	553282	12	True				
ANR	553333	Identifier	Plasma :: Types :: BottomEdge		553282	0					
ANR	553334	ReturnStatement	"return ""bottom"" ;"	68:12:1821:1836	553282	13	True				
ANR	553335	PrimaryExpression	"""bottom"""		553282	0					
ANR	553336	BreakStatement	break ;	69:12:1850:1855	553282	14	True				
ANR	553337	Label	case Plasma :: Types :: LeftEdge :	70:8:1865:1893	553282	15	True				
ANR	553338	Identifier	Plasma :: Types :: LeftEdge		553282	0					
ANR	553339	ReturnStatement	"return ""left"" ;"	71:12:1907:1920	553282	16	True				
ANR	553340	PrimaryExpression	"""left"""		553282	0					
ANR	553341	BreakStatement	break ;	72:12:1934:1939	553282	17	True				
ANR	553342	Label	case Plasma :: Types :: RightEdge :	73:8:1949:1978	553282	18	True				
ANR	553343	Identifier	Plasma :: Types :: RightEdge		553282	0					
ANR	553344	ReturnStatement	"return ""right"" ;"	74:12:1992:2006	553282	19	True				
ANR	553345	PrimaryExpression	"""right"""		553282	0					
ANR	553346	BreakStatement	break ;	75:12:2020:2025	553282	20	True				
ANR	553347	ReturnStatement	"return ""floating"" ;"	78:4:2038:2055	553282	3	True				
ANR	553348	PrimaryExpression	"""floating"""		553282	0					
ANR	553349	ReturnType	QString		553282	1					
ANR	553350	Identifier	Panel :: location		553282	2					
ANR	553351	ParameterList			553282	3					
ANR	553352	CFGEntryNode	ENTRY		553282		True				
ANR	553353	CFGExitNode	EXIT		553282		True				
ANR	553354	Symbol	containment		553282						
ANR	553355	Symbol	c		553282						
ANR	553356	Symbol	* c		553282						
ANR	553357	Symbol	c -> location		553282						
ANR	553358	Function	Panel :: setLocation	81:0:2060:3026							
ANR	553359	FunctionDef	Panel :: setLocation (const QString & locationString)		553358	0					
ANR	553360	CompoundStatement		82:0:2115:3026	553358	0					
ANR	553361	IdentifierDeclStatement	Plasma :: Containment * c = containment ( ) ;	83:4:2121:2159	553358	0	True				
ANR	553362	IdentifierDecl	* c = containment ( )		553358	0					
ANR	553363	IdentifierDeclType	Plasma :: Containment *		553358	0					
ANR	553364	Identifier	c		553358	1					
ANR	553365	AssignmentExpression	* c = containment ( )		553358	2		=			
ANR	553366	Identifier	c		553358	0					
ANR	553367	CallExpression	containment ( )		553358	1					
ANR	553368	Callee	containment		553358	0					
ANR	553369	Identifier	containment		553358	0					
ANR	553370	ArgumentList			553358	1					
ANR	553371	IfStatement	if ( ! c )		553358	1					
ANR	553372	Condition	! c	84:8:2169:2170	553358	0	True				
ANR	553373	UnaryOperationExpression	! c		553358	0					
ANR	553374	UnaryOperator	!		553358	0					
ANR	553375	Identifier	c		553358	1					
ANR	553376	CompoundStatement		3:12:57:57	553358	1					
ANR	553377	ReturnStatement	return ;	85:8:2183:2189	553358	0	True				
ANR	553378	IdentifierDeclStatement	const QString lower = locationString . toLower ( ) ;	88:4:2202:2248	553358	2	True				
ANR	553379	IdentifierDecl	lower = locationString . toLower ( )		553358	0					
ANR	553380	IdentifierDeclType	const QString		553358	0					
ANR	553381	Identifier	lower		553358	1					
ANR	553382	AssignmentExpression	lower = locationString . toLower ( )		553358	2		=			
ANR	553383	Identifier	lower		553358	0					
ANR	553384	CallExpression	locationString . toLower ( )		553358	1					
ANR	553385	Callee	locationString . toLower		553358	0					
ANR	553386	MemberAccess	locationString . toLower		553358	0					
ANR	553387	Identifier	locationString		553358	0					
ANR	553388	Identifier	toLower		553358	1					
ANR	553389	ArgumentList			553358	1					
ANR	553390	IdentifierDeclStatement	Plasma :: Types :: Location loc = Plasma :: Types :: Floating ;	89:4:2254:2307	553358	3	True				
ANR	553391	IdentifierDecl	loc = Plasma :: Types :: Floating		553358	0					
ANR	553392	IdentifierDeclType	Plasma :: Types :: Location		553358	0					
ANR	553393	Identifier	loc		553358	1					
ANR	553394	AssignmentExpression	loc = Plasma :: Types :: Floating		553358	2		=			
ANR	553395	Identifier	Plasma :: Types :: Floating		553358	0					
ANR	553396	Identifier	Plasma :: Types :: Floating		553358	1					
ANR	553397	IdentifierDeclStatement	Plasma :: Types :: FormFactor ff = Plasma :: Types :: Planar ;	90:4:2313:2365	553358	4	True				
ANR	553398	IdentifierDecl	ff = Plasma :: Types :: Planar		553358	0					
ANR	553399	IdentifierDeclType	Plasma :: Types :: FormFactor		553358	0					
ANR	553400	Identifier	ff		553358	1					
ANR	553401	AssignmentExpression	ff = Plasma :: Types :: Planar		553358	2		=			
ANR	553402	Identifier	Plasma :: Types :: Planar		553358	0					
ANR	553403	Identifier	Plasma :: Types :: Planar		553358	1					
ANR	553404	IfStatement	"if ( lower == ""desktop"" )"		553358	5					
ANR	553405	Condition	"lower == ""desktop"""	91:8:2375:2392	553358	0	True				
ANR	553406	EqualityExpression	"lower == ""desktop"""		553358	0		==			
ANR	553407	Identifier	lower		553358	0					
ANR	553408	PrimaryExpression	"""desktop"""		553358	1					
ANR	553409	CompoundStatement		10:28:279:279	553358	1					
ANR	553410	ExpressionStatement	loc = Plasma :: Types :: Desktop	92:8:2405:2433	553358	0	True				
ANR	553411	AssignmentExpression	loc = Plasma :: Types :: Desktop		553358	0		=			
ANR	553412	Identifier	loc		553358	0					
ANR	553413	Identifier	Plasma :: Types :: Desktop		553358	1					
ANR	553414	ElseStatement	else		553358	0					
ANR	553415	IfStatement	"if ( lower == ""fullscreen"" )"		553358	0					
ANR	553416	Condition	"lower == ""fullscreen"""	93:15:2450:2470	553358	0	True				
ANR	553417	EqualityExpression	"lower == ""fullscreen"""		553358	0		==			
ANR	553418	Identifier	lower		553358	0					
ANR	553419	PrimaryExpression	"""fullscreen"""		553358	1					
ANR	553420	CompoundStatement		12:38:357:357	553358	1					
ANR	553421	ExpressionStatement	loc = Plasma :: Types :: FullScreen	94:8:2483:2514	553358	0	True				
ANR	553422	AssignmentExpression	loc = Plasma :: Types :: FullScreen		553358	0		=			
ANR	553423	Identifier	loc		553358	0					
ANR	553424	Identifier	Plasma :: Types :: FullScreen		553358	1					
ANR	553425	ElseStatement	else		553358	0					
ANR	553426	IfStatement	"if ( lower == ""top"" )"		553358	0					
ANR	553427	Condition	"lower == ""top"""	95:15:2531:2544	553358	0	True				
ANR	553428	EqualityExpression	"lower == ""top"""		553358	0		==			
ANR	553429	Identifier	lower		553358	0					
ANR	553430	PrimaryExpression	"""top"""		553358	1					
ANR	553431	CompoundStatement		14:31:431:431	553358	1					
ANR	553432	ExpressionStatement	loc = Plasma :: Types :: TopEdge	96:8:2557:2585	553358	0	True				
ANR	553433	AssignmentExpression	loc = Plasma :: Types :: TopEdge		553358	0		=			
ANR	553434	Identifier	loc		553358	0					
ANR	553435	Identifier	Plasma :: Types :: TopEdge		553358	1					
ANR	553436	ExpressionStatement	ff = Plasma :: Types :: Horizontal	97:8:2595:2625	553358	1	True				
ANR	553437	AssignmentExpression	ff = Plasma :: Types :: Horizontal		553358	0		=			
ANR	553438	Identifier	ff		553358	0					
ANR	553439	Identifier	Plasma :: Types :: Horizontal		553358	1					
ANR	553440	ElseStatement	else		553358	0					
ANR	553441	IfStatement	"if ( lower == ""bottom"" )"		553358	0					
ANR	553442	Condition	"lower == ""bottom"""	98:15:2642:2658	553358	0	True				
ANR	553443	EqualityExpression	"lower == ""bottom"""		553358	0		==			
ANR	553444	Identifier	lower		553358	0					
ANR	553445	PrimaryExpression	"""bottom"""		553358	1					
ANR	553446	CompoundStatement		17:34:545:545	553358	1					
ANR	553447	ExpressionStatement	loc = Plasma :: Types :: BottomEdge	99:8:2671:2702	553358	0	True				
ANR	553448	AssignmentExpression	loc = Plasma :: Types :: BottomEdge		553358	0		=			
ANR	553449	Identifier	loc		553358	0					
ANR	553450	Identifier	Plasma :: Types :: BottomEdge		553358	1					
ANR	553451	ExpressionStatement	ff = Plasma :: Types :: Horizontal	100:8:2712:2742	553358	1	True				
ANR	553452	AssignmentExpression	ff = Plasma :: Types :: Horizontal		553358	0		=			
ANR	553453	Identifier	ff		553358	0					
ANR	553454	Identifier	Plasma :: Types :: Horizontal		553358	1					
ANR	553455	ElseStatement	else		553358	0					
ANR	553456	IfStatement	"if ( lower == ""left"" )"		553358	0					
ANR	553457	Condition	"lower == ""left"""	101:15:2759:2773	553358	0	True				
ANR	553458	EqualityExpression	"lower == ""left"""		553358	0		==			
ANR	553459	Identifier	lower		553358	0					
ANR	553460	PrimaryExpression	"""left"""		553358	1					
ANR	553461	CompoundStatement		20:32:660:660	553358	1					
ANR	553462	ExpressionStatement	loc = Plasma :: Types :: LeftEdge	102:8:2786:2815	553358	0	True				
ANR	553463	AssignmentExpression	loc = Plasma :: Types :: LeftEdge		553358	0		=			
ANR	553464	Identifier	loc		553358	0					
ANR	553465	Identifier	Plasma :: Types :: LeftEdge		553358	1					
ANR	553466	ExpressionStatement	ff = Plasma :: Types :: Vertical	103:8:2825:2853	553358	1	True				
ANR	553467	AssignmentExpression	ff = Plasma :: Types :: Vertical		553358	0		=			
ANR	553468	Identifier	ff		553358	0					
ANR	553469	Identifier	Plasma :: Types :: Vertical		553358	1					
ANR	553470	ElseStatement	else		553358	0					
ANR	553471	IfStatement	"if ( lower == ""right"" )"		553358	0					
ANR	553472	Condition	"lower == ""right"""	104:15:2870:2885	553358	0	True				
ANR	553473	EqualityExpression	"lower == ""right"""		553358	0		==			
ANR	553474	Identifier	lower		553358	0					
ANR	553475	PrimaryExpression	"""right"""		553358	1					
ANR	553476	CompoundStatement		23:33:772:772	553358	1					
ANR	553477	ExpressionStatement	loc = Plasma :: Types :: RightEdge	105:8:2898:2928	553358	0	True				
ANR	553478	AssignmentExpression	loc = Plasma :: Types :: RightEdge		553358	0		=			
ANR	553479	Identifier	loc		553358	0					
ANR	553480	Identifier	Plasma :: Types :: RightEdge		553358	1					
ANR	553481	ExpressionStatement	ff = Plasma :: Types :: Vertical	106:8:2938:2966	553358	1	True				
ANR	553482	AssignmentExpression	ff = Plasma :: Types :: Vertical		553358	0		=			
ANR	553483	Identifier	ff		553358	0					
ANR	553484	Identifier	Plasma :: Types :: Vertical		553358	1					
ANR	553485	ExpressionStatement	c -> setLocation ( loc )	109:4:2979:2998	553358	6	True				
ANR	553486	CallExpression	c -> setLocation ( loc )		553358	0					
ANR	553487	Callee	c -> setLocation		553358	0					
ANR	553488	PtrMemberAccess	c -> setLocation		553358	0					
ANR	553489	Identifier	c		553358	0					
ANR	553490	Identifier	setLocation		553358	1					
ANR	553491	ArgumentList	loc		553358	1					
ANR	553492	Argument	loc		553358	0					
ANR	553493	Identifier	loc		553358	0					
ANR	553494	ExpressionStatement	c -> setFormFactor ( ff )	110:4:3004:3024	553358	7	True				
ANR	553495	CallExpression	c -> setFormFactor ( ff )		553358	0					
ANR	553496	Callee	c -> setFormFactor		553358	0					
ANR	553497	PtrMemberAccess	c -> setFormFactor		553358	0					
ANR	553498	Identifier	c		553358	0					
ANR	553499	Identifier	setFormFactor		553358	1					
ANR	553500	ArgumentList	ff		553358	1					
ANR	553501	Argument	ff		553358	0					
ANR	553502	Identifier	ff		553358	0					
ANR	553503	ReturnType	void		553358	1					
ANR	553504	Identifier	Panel :: setLocation		553358	2					
ANR	553505	ParameterList	const QString & locationString		553358	3					
ANR	553506	Parameter	const QString & locationString	81:24:2084:2112	553358	0	True				
ANR	553507	ParameterType	const QString &		553358	0					
ANR	553508	Identifier	locationString		553358	1					
ANR	553509	CFGEntryNode	ENTRY		553358		True				
ANR	553510	CFGExitNode	EXIT		553358		True				
ANR	553511	Symbol	ff		553358						
ANR	553512	Symbol	loc		553358						
ANR	553513	Symbol	c		553358						
ANR	553514	Symbol	Plasma :: Types :: Horizontal		553358						
ANR	553515	Symbol	Plasma :: Types :: Floating		553358						
ANR	553516	Symbol	Plasma :: Types :: FullScreen		553358						
ANR	553517	Symbol	locationString . toLower		553358						
ANR	553518	Symbol	lower		553358						
ANR	553519	Symbol	Plasma :: Types :: Planar		553358						
ANR	553520	Symbol	Plasma :: Types :: Vertical		553358						
ANR	553521	Symbol	Plasma :: Types :: RightEdge		553358						
ANR	553522	Symbol	Plasma :: Types :: Desktop		553358						
ANR	553523	Symbol	Plasma :: Types :: BottomEdge		553358						
ANR	553524	Symbol	containment		553358						
ANR	553525	Symbol	Plasma :: Types :: LeftEdge		553358						
ANR	553526	Symbol	locationString		553358						
ANR	553527	Symbol	Plasma :: Types :: TopEdge		553358						
ANR	553528	Function	Panel :: panel	113:0:3029:3194							
ANR	553529	FunctionDef	Panel :: panel ()		553528	0					
ANR	553530	CompoundStatement		114:0:3061:3194	553528	0					
ANR	553531	IdentifierDeclStatement	Plasma :: Containment * c = containment ( ) ;	115:4:3067:3105	553528	0	True				
ANR	553532	IdentifierDecl	* c = containment ( )		553528	0					
ANR	553533	IdentifierDeclType	Plasma :: Containment *		553528	0					
ANR	553534	Identifier	c		553528	1					
ANR	553535	AssignmentExpression	* c = containment ( )		553528	2		=			
ANR	553536	Identifier	c		553528	0					
ANR	553537	CallExpression	containment ( )		553528	1					
ANR	553538	Callee	containment		553528	0					
ANR	553539	Identifier	containment		553528	0					
ANR	553540	ArgumentList			553528	1					
ANR	553541	IfStatement	if ( ! c || ! m_corona )		553528	1					
ANR	553542	Condition	! c || ! m_corona	116:8:3115:3129	553528	0	True				
ANR	553543	OrExpression	! c || ! m_corona		553528	0		||			
ANR	553544	UnaryOperationExpression	! c		553528	0					
ANR	553545	UnaryOperator	!		553528	0					
ANR	553546	Identifier	c		553528	1					
ANR	553547	UnaryOperationExpression	! m_corona		553528	1					
ANR	553548	UnaryOperator	!		553528	0					
ANR	553549	Identifier	m_corona		553528	1					
ANR	553550	CompoundStatement		3:25:70:70	553528	1					
ANR	553551	ReturnStatement	return 0 ;	117:8:3142:3150	553528	0	True				
ANR	553552	PrimaryExpression	0		553528	0					
ANR	553553	ReturnStatement	return m_corona -> panelView ( c ) ;	120:4:3163:3192	553528	2	True				
ANR	553554	CallExpression	m_corona -> panelView ( c )		553528	0					
ANR	553555	Callee	m_corona -> panelView		553528	0					
ANR	553556	PtrMemberAccess	m_corona -> panelView		553528	0					
ANR	553557	Identifier	m_corona		553528	0					
ANR	553558	Identifier	panelView		553528	1					
ANR	553559	ArgumentList	c		553528	1					
ANR	553560	Argument	c		553528	0					
ANR	553561	Identifier	c		553528	0					
ANR	553562	ReturnType	PanelView *		553528	1					
ANR	553563	Identifier	Panel :: panel		553528	2					
ANR	553564	ParameterList			553528	3					
ANR	553565	CFGEntryNode	ENTRY		553528		True				
ANR	553566	CFGExitNode	EXIT		553528		True				
ANR	553567	Symbol	containment		553528						
ANR	553568	Symbol	c		553528						
ANR	553569	Symbol	m_corona -> panelView		553528						
ANR	553570	Symbol	m_corona		553528						
ANR	553571	Symbol	* m_corona		553528						
ANR	553572	Function	Panel :: panelConfig	124:0:3198:3554							
ANR	553573	FunctionDef	Panel :: panelConfig ()		553572	0					
ANR	553574	CompoundStatement		125:0:3238:3554	553572	0					
ANR	553575	IdentifierDeclStatement	"int screenNum = qMax ( screen ( ) , 0 ) ;"	126:4:3244:3277	553572	0	True				
ANR	553576	IdentifierDecl	"screenNum = qMax ( screen ( ) , 0 )"		553572	0					
ANR	553577	IdentifierDeclType	int		553572	0					
ANR	553578	Identifier	screenNum		553572	1					
ANR	553579	AssignmentExpression	"screenNum = qMax ( screen ( ) , 0 )"		553572	2		=			
ANR	553580	Identifier	screenNum		553572	0					
ANR	553581	CallExpression	"qMax ( screen ( ) , 0 )"		553572	1					
ANR	553582	Callee	qMax		553572	0					
ANR	553583	Identifier	qMax		553572	0					
ANR	553584	ArgumentList	screen ( )		553572	1					
ANR	553585	Argument	screen ( )		553572	0					
ANR	553586	CallExpression	screen ( )		553572	0					
ANR	553587	Callee	screen		553572	0					
ANR	553588	Identifier	screen		553572	0					
ANR	553589	ArgumentList			553572	1					
ANR	553590	Argument	0		553572	1					
ANR	553591	PrimaryExpression	0		553572	0					
ANR	553592	IfStatement	if ( QGuiApplication :: screens ( ) . size ( ) < screenNum )		553572	1					
ANR	553593	Condition	QGuiApplication :: screens ( ) . size ( ) < screenNum	128:8:3346:3390	553572	0	True				
ANR	553594	RelationalExpression	QGuiApplication :: screens ( ) . size ( ) < screenNum		553572	0		<			
ANR	553595	CallExpression	QGuiApplication :: screens ( ) . size ( )		553572	0					
ANR	553596	Callee	QGuiApplication :: screens ( ) . size		553572	0					
ANR	553597	MemberAccess	QGuiApplication :: screens ( ) . size		553572	0					
ANR	553598	CallExpression	QGuiApplication :: screens ( )		553572	0					
ANR	553599	Callee	QGuiApplication :: screens		553572	0					
ANR	553600	Identifier	QGuiApplication :: screens		553572	0					
ANR	553601	ArgumentList			553572	1					
ANR	553602	Identifier	size		553572	1					
ANR	553603	ArgumentList			553572	1					
ANR	553604	Identifier	screenNum		553572	1					
ANR	553605	CompoundStatement		4:55:154:154	553572	1					
ANR	553606	ReturnStatement	return KConfigGroup ( ) ;	129:8:3403:3424	553572	0	True				
ANR	553607	CallExpression	KConfigGroup ( )		553572	0					
ANR	553608	Callee	KConfigGroup		553572	0					
ANR	553609	Identifier	KConfigGroup		553572	0					
ANR	553610	ArgumentList			553572	1					
ANR	553611	IdentifierDeclStatement	QScreen * s = QGuiApplication :: screens ( ) . at ( screenNum ) ;	131:4:3436:3489	553572	2	True				
ANR	553612	IdentifierDecl	* s = QGuiApplication :: screens ( ) . at ( screenNum )		553572	0					
ANR	553613	IdentifierDeclType	QScreen *		553572	0					
ANR	553614	Identifier	s		553572	1					
ANR	553615	AssignmentExpression	* s = QGuiApplication :: screens ( ) . at ( screenNum )		553572	2		=			
ANR	553616	Identifier	s		553572	0					
ANR	553617	CallExpression	QGuiApplication :: screens ( ) . at ( screenNum )		553572	1					
ANR	553618	Callee	QGuiApplication :: screens ( ) . at		553572	0					
ANR	553619	MemberAccess	QGuiApplication :: screens ( ) . at		553572	0					
ANR	553620	CallExpression	QGuiApplication :: screens ( )		553572	0					
ANR	553621	Callee	QGuiApplication :: screens		553572	0					
ANR	553622	Identifier	QGuiApplication :: screens		553572	0					
ANR	553623	ArgumentList			553572	1					
ANR	553624	Identifier	at		553572	1					
ANR	553625	ArgumentList	screenNum		553572	1					
ANR	553626	Argument	screenNum		553572	0					
ANR	553627	Identifier	screenNum		553572	0					
ANR	553628	ReturnStatement	"return PanelView :: panelConfig ( m_corona , containment ( ) , s ) ;"	132:4:3495:3552	553572	3	True				
ANR	553629	CallExpression	"PanelView :: panelConfig ( m_corona , containment ( ) , s )"		553572	0					
ANR	553630	Callee	PanelView :: panelConfig		553572	0					
ANR	553631	Identifier	PanelView :: panelConfig		553572	0					
ANR	553632	ArgumentList	m_corona		553572	1					
ANR	553633	Argument	m_corona		553572	0					
ANR	553634	Identifier	m_corona		553572	0					
ANR	553635	Argument	containment ( )		553572	1					
ANR	553636	CallExpression	containment ( )		553572	0					
ANR	553637	Callee	containment		553572	0					
ANR	553638	Identifier	containment		553572	0					
ANR	553639	ArgumentList			553572	1					
ANR	553640	Argument	s		553572	2					
ANR	553641	Identifier	s		553572	0					
ANR	553642	ReturnType	KConfigGroup		553572	1					
ANR	553643	Identifier	Panel :: panelConfig		553572	2					
ANR	553644	ParameterList			553572	3					
ANR	553645	CFGEntryNode	ENTRY		553572		True				
ANR	553646	CFGExitNode	EXIT		553572		True				
ANR	553647	Symbol	QGuiApplication :: screens ( ) . size		553572						
ANR	553648	Symbol	containment		553572						
ANR	553649	Symbol	s		553572						
ANR	553650	Symbol	PanelView :: panelConfig		553572						
ANR	553651	Symbol	qMax		553572						
ANR	553652	Symbol	screen		553572						
ANR	553653	Symbol	QGuiApplication :: screens ( ) . at		553572						
ANR	553654	Symbol	QGuiApplication :: screens		553572						
ANR	553655	Symbol	screenNum		553572						
ANR	553656	Symbol	KConfigGroup		553572						
ANR	553657	Symbol	m_corona		553572						
ANR	553658	Function	Panel :: alignment	135:0:3557:3890							
ANR	553659	FunctionDef	Panel :: alignment ()		553658	0					
ANR	553660	CompoundStatement		136:0:3590:3890	553658	0					
ANR	553661	SwitchStatement	"switch ( panelConfig ( ) . readEntry ( ""alignment"" , 0 ) )"		553658	0					
ANR	553662	Condition	"panelConfig ( ) . readEntry ( ""alignment"" , 0 )"	137:12:3604:3642	553658	0	True				
ANR	553663	CallExpression	"panelConfig ( ) . readEntry ( ""alignment"" , 0 )"		553658	0					
ANR	553664	Callee	panelConfig ( ) . readEntry		553658	0					
ANR	553665	MemberAccess	panelConfig ( ) . readEntry		553658	0					
ANR	553666	CallExpression	panelConfig ( )		553658	0					
ANR	553667	Callee	panelConfig		553658	0					
ANR	553668	Identifier	panelConfig		553658	0					
ANR	553669	ArgumentList			553658	1					
ANR	553670	Identifier	readEntry		553658	1					
ANR	553671	ArgumentList	"""alignment"""		553658	1					
ANR	553672	Argument	"""alignment"""		553658	0					
ANR	553673	PrimaryExpression	"""alignment"""		553658	0					
ANR	553674	Argument	0		553658	1					
ANR	553675	PrimaryExpression	0		553658	0					
ANR	553676	CompoundStatement		2:53:54:54	553658	1					
ANR	553677	Label	case Qt :: AlignRight :	138:8:3655:3674	553658	0	True				
ANR	553678	Identifier	Qt :: AlignRight		553658	0					
ANR	553679	ReturnStatement	"return ""right"" ;"	139:12:3688:3702	553658	1	True				
ANR	553680	PrimaryExpression	"""right"""		553658	0					
ANR	553681	BreakStatement	break ;	140:12:3716:3721	553658	2	True				
ANR	553682	Label	case Qt :: AlignCenter :	141:8:3731:3751	553658	3	True				
ANR	553683	Identifier	Qt :: AlignCenter		553658	0					
ANR	553684	ReturnStatement	"return ""center"" ;"	142:12:3765:3780	553658	4	True				
ANR	553685	PrimaryExpression	"""center"""		553658	0					
ANR	553686	BreakStatement	break ;	143:12:3794:3799	553658	5	True				
ANR	553687	Label	default :	144:8:3809:3816	553658	6	True				
ANR	553688	Identifier	default		553658	0					
ANR	553689	ReturnStatement	"return ""left"" ;"	145:12:3830:3843	553658	7	True				
ANR	553690	PrimaryExpression	"""left"""		553658	0					
ANR	553691	BreakStatement	break ;	146:12:3857:3862	553658	8	True				
ANR	553692	ReturnStatement	"return ""left"" ;"	149:4:3875:3888	553658	1	True				
ANR	553693	PrimaryExpression	"""left"""		553658	0					
ANR	553694	ReturnType	QString		553658	1					
ANR	553695	Identifier	Panel :: alignment		553658	2					
ANR	553696	ParameterList			553658	3					
ANR	553697	CFGEntryNode	ENTRY		553658		True				
ANR	553698	CFGExitNode	EXIT		553658		True				
ANR	553699	Symbol	panelConfig		553658						
ANR	553700	Symbol	panelConfig ( ) . readEntry		553658						
ANR	553701	Function	Panel :: setAlignment	152:0:3893:4299							
ANR	553702	FunctionDef	Panel :: setAlignment (const QString & alignment)		553701	0					
ANR	553703	CompoundStatement		153:0:3944:4299	553701	0					
ANR	553704	IdentifierDeclStatement	int a = Qt :: AlignLeft ;	154:4:3950:3971	553701	0	True				
ANR	553705	IdentifierDecl	a = Qt :: AlignLeft		553701	0					
ANR	553706	IdentifierDeclType	int		553701	0					
ANR	553707	Identifier	a		553701	1					
ANR	553708	AssignmentExpression	a = Qt :: AlignLeft		553701	2		=			
ANR	553709	Identifier	Qt :: AlignLeft		553701	0					
ANR	553710	Identifier	Qt :: AlignLeft		553701	1					
ANR	553711	IfStatement	"if ( alignment . compare ( ""right"" , Qt :: CaseInsensitive ) == 0 )"		553701	1					
ANR	553712	Condition	"alignment . compare ( ""right"" , Qt :: CaseInsensitive ) == 0"	155:8:3981:4032	553701	0	True				
ANR	553713	EqualityExpression	"alignment . compare ( ""right"" , Qt :: CaseInsensitive ) == 0"		553701	0		==			
ANR	553714	CallExpression	"alignment . compare ( ""right"" , Qt :: CaseInsensitive )"		553701	0					
ANR	553715	Callee	alignment . compare		553701	0					
ANR	553716	MemberAccess	alignment . compare		553701	0					
ANR	553717	Identifier	alignment		553701	0					
ANR	553718	Identifier	compare		553701	1					
ANR	553719	ArgumentList	"""right"""		553701	1					
ANR	553720	Argument	"""right"""		553701	0					
ANR	553721	PrimaryExpression	"""right"""		553701	0					
ANR	553722	Argument	Qt :: CaseInsensitive		553701	1					
ANR	553723	Identifier	Qt :: CaseInsensitive		553701	0					
ANR	553724	PrimaryExpression	0		553701	1					
ANR	553725	CompoundStatement		3:62:90:90	553701	1					
ANR	553726	ExpressionStatement	a = Qt :: AlignRight	156:8:4045:4063	553701	0	True				
ANR	553727	AssignmentExpression	a = Qt :: AlignRight		553701	0		=			
ANR	553728	Identifier	a		553701	0					
ANR	553729	Identifier	Qt :: AlignRight		553701	1					
ANR	553730	ElseStatement	else		553701	0					
ANR	553731	IfStatement	"if ( alignment . compare ( ""center"" , Qt :: CaseInsensitive ) == 0 )"		553701	0					
ANR	553732	Condition	"alignment . compare ( ""center"" , Qt :: CaseInsensitive ) == 0"	157:15:4080:4132	553701	0	True				
ANR	553733	EqualityExpression	"alignment . compare ( ""center"" , Qt :: CaseInsensitive ) == 0"		553701	0		==			
ANR	553734	CallExpression	"alignment . compare ( ""center"" , Qt :: CaseInsensitive )"		553701	0					
ANR	553735	Callee	alignment . compare		553701	0					
ANR	553736	MemberAccess	alignment . compare		553701	0					
ANR	553737	Identifier	alignment		553701	0					
ANR	553738	Identifier	compare		553701	1					
ANR	553739	ArgumentList	"""center"""		553701	1					
ANR	553740	Argument	"""center"""		553701	0					
ANR	553741	PrimaryExpression	"""center"""		553701	0					
ANR	553742	Argument	Qt :: CaseInsensitive		553701	1					
ANR	553743	Identifier	Qt :: CaseInsensitive		553701	0					
ANR	553744	PrimaryExpression	0		553701	1					
ANR	553745	CompoundStatement		5:70:190:190	553701	1					
ANR	553746	ExpressionStatement	a = Qt :: AlignCenter	158:8:4145:4164	553701	0	True				
ANR	553747	AssignmentExpression	a = Qt :: AlignCenter		553701	0		=			
ANR	553748	Identifier	a		553701	0					
ANR	553749	Identifier	Qt :: AlignCenter		553701	1					
ANR	553750	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""alignment"" , a )"	161:4:4177:4217	553701	2	True				
ANR	553751	CallExpression	"panelConfig ( ) . writeEntry ( ""alignment"" , a )"		553701	0					
ANR	553752	Callee	panelConfig ( ) . writeEntry		553701	0					
ANR	553753	MemberAccess	panelConfig ( ) . writeEntry		553701	0					
ANR	553754	CallExpression	panelConfig ( )		553701	0					
ANR	553755	Callee	panelConfig		553701	0					
ANR	553756	Identifier	panelConfig		553701	0					
ANR	553757	ArgumentList			553701	1					
ANR	553758	Identifier	writeEntry		553701	1					
ANR	553759	ArgumentList	"""alignment"""		553701	1					
ANR	553760	Argument	"""alignment"""		553701	0					
ANR	553761	PrimaryExpression	"""alignment"""		553701	0					
ANR	553762	Argument	a		553701	1					
ANR	553763	Identifier	a		553701	0					
ANR	553764	IfStatement	if ( panel ( ) )		553701	3					
ANR	553765	Condition	panel ( )	162:8:4227:4233	553701	0	True				
ANR	553766	CallExpression	panel ( )		553701	0					
ANR	553767	Callee	panel		553701	0					
ANR	553768	Identifier	panel		553701	0					
ANR	553769	ArgumentList			553701	1					
ANR	553770	CompoundStatement		10:17:291:291	553701	1					
ANR	553771	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	163:8:4246:4291	553701	0	True				
ANR	553772	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		553701	0					
ANR	553773	Callee	QMetaObject :: invokeMethod		553701	0					
ANR	553774	Identifier	QMetaObject :: invokeMethod		553701	0					
ANR	553775	ArgumentList	panel ( )		553701	1					
ANR	553776	Argument	panel ( )		553701	0					
ANR	553777	CallExpression	panel ( )		553701	0					
ANR	553778	Callee	panel		553701	0					
ANR	553779	Identifier	panel		553701	0					
ANR	553780	ArgumentList			553701	1					
ANR	553781	Argument	"""restore"""		553701	1					
ANR	553782	PrimaryExpression	"""restore"""		553701	0					
ANR	553783	ReturnType	void		553701	1					
ANR	553784	Identifier	Panel :: setAlignment		553701	2					
ANR	553785	ParameterList	const QString & alignment		553701	3					
ANR	553786	Parameter	const QString & alignment	152:25:3918:3941	553701	0	True				
ANR	553787	ParameterType	const QString &		553701	0					
ANR	553788	Identifier	alignment		553701	1					
ANR	553789	CFGEntryNode	ENTRY		553701		True				
ANR	553790	CFGExitNode	EXIT		553701		True				
ANR	553791	Symbol	a		553701						
ANR	553792	Symbol	Qt :: AlignCenter		553701						
ANR	553793	Symbol	panelConfig		553701						
ANR	553794	Symbol	Qt :: AlignLeft		553701						
ANR	553795	Symbol	Qt :: AlignRight		553701						
ANR	553796	Symbol	Qt :: CaseInsensitive		553701						
ANR	553797	Symbol	alignment		553701						
ANR	553798	Symbol	panel		553701						
ANR	553799	Symbol	alignment . compare		553701						
ANR	553800	Function	Panel :: offset	167:0:4302:4379							
ANR	553801	FunctionDef	Panel :: offset ()		553800	0					
ANR	553802	CompoundStatement		168:0:4328:4379	553800	0					
ANR	553803	ReturnStatement	"return panelConfig ( ) . readEntry ( ""offset"" , 0 ) ;"	169:4:4334:4377	553800	0	True				
ANR	553804	CallExpression	"panelConfig ( ) . readEntry ( ""offset"" , 0 )"		553800	0					
ANR	553805	Callee	panelConfig ( ) . readEntry		553800	0					
ANR	553806	MemberAccess	panelConfig ( ) . readEntry		553800	0					
ANR	553807	CallExpression	panelConfig ( )		553800	0					
ANR	553808	Callee	panelConfig		553800	0					
ANR	553809	Identifier	panelConfig		553800	0					
ANR	553810	ArgumentList			553800	1					
ANR	553811	Identifier	readEntry		553800	1					
ANR	553812	ArgumentList	"""offset"""		553800	1					
ANR	553813	Argument	"""offset"""		553800	0					
ANR	553814	PrimaryExpression	"""offset"""		553800	0					
ANR	553815	Argument	0		553800	1					
ANR	553816	PrimaryExpression	0		553800	0					
ANR	553817	ReturnType	int		553800	1					
ANR	553818	Identifier	Panel :: offset		553800	2					
ANR	553819	ParameterList			553800	3					
ANR	553820	CFGEntryNode	ENTRY		553800		True				
ANR	553821	CFGExitNode	EXIT		553800		True				
ANR	553822	Symbol	panelConfig		553800						
ANR	553823	Symbol	panelConfig ( ) . readEntry		553800						
ANR	553824	Function	Panel :: setOffset	172:0:4382:4542							
ANR	553825	FunctionDef	Panel :: setOffset (int pixels)		553824	0					
ANR	553826	CompoundStatement		173:0:4416:4542	553824	0					
ANR	553827	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""offset"" , pixels )"	174:3:4421:4463	553824	0	True				
ANR	553828	CallExpression	"panelConfig ( ) . writeEntry ( ""offset"" , pixels )"		553824	0					
ANR	553829	Callee	panelConfig ( ) . writeEntry		553824	0					
ANR	553830	MemberAccess	panelConfig ( ) . writeEntry		553824	0					
ANR	553831	CallExpression	panelConfig ( )		553824	0					
ANR	553832	Callee	panelConfig		553824	0					
ANR	553833	Identifier	panelConfig		553824	0					
ANR	553834	ArgumentList			553824	1					
ANR	553835	Identifier	writeEntry		553824	1					
ANR	553836	ArgumentList	"""offset"""		553824	1					
ANR	553837	Argument	"""offset"""		553824	0					
ANR	553838	PrimaryExpression	"""offset"""		553824	0					
ANR	553839	Argument	pixels		553824	1					
ANR	553840	Identifier	pixels		553824	0					
ANR	553841	IfStatement	if ( panel ( ) )		553824	1					
ANR	553842	Condition	panel ( )	175:7:4472:4478	553824	0	True				
ANR	553843	CallExpression	panel ( )		553824	0					
ANR	553844	Callee	panel		553824	0					
ANR	553845	Identifier	panel		553824	0					
ANR	553846	ArgumentList			553824	1					
ANR	553847	CompoundStatement		3:16:64:64	553824	1					
ANR	553848	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	176:7:4490:4535	553824	0	True				
ANR	553849	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		553824	0					
ANR	553850	Callee	QMetaObject :: invokeMethod		553824	0					
ANR	553851	Identifier	QMetaObject :: invokeMethod		553824	0					
ANR	553852	ArgumentList	panel ( )		553824	1					
ANR	553853	Argument	panel ( )		553824	0					
ANR	553854	CallExpression	panel ( )		553824	0					
ANR	553855	Callee	panel		553824	0					
ANR	553856	Identifier	panel		553824	0					
ANR	553857	ArgumentList			553824	1					
ANR	553858	Argument	"""restore"""		553824	1					
ANR	553859	PrimaryExpression	"""restore"""		553824	0					
ANR	553860	ReturnType	void		553824	1					
ANR	553861	Identifier	Panel :: setOffset		553824	2					
ANR	553862	ParameterList	int pixels		553824	3					
ANR	553863	Parameter	int pixels	172:22:4404:4413	553824	0	True				
ANR	553864	ParameterType	int		553824	0					
ANR	553865	Identifier	pixels		553824	1					
ANR	553866	CFGEntryNode	ENTRY		553824		True				
ANR	553867	CFGExitNode	EXIT		553824		True				
ANR	553868	Symbol	pixels		553824						
ANR	553869	Symbol	panelConfig		553824						
ANR	553870	Symbol	panel		553824						
ANR	553871	Function	Panel :: length	180:0:4545:4622							
ANR	553872	FunctionDef	Panel :: length ()		553871	0					
ANR	553873	CompoundStatement		181:0:4571:4622	553871	0					
ANR	553874	ReturnStatement	"return panelConfig ( ) . readEntry ( ""length"" , 0 ) ;"	182:4:4577:4620	553871	0	True				
ANR	553875	CallExpression	"panelConfig ( ) . readEntry ( ""length"" , 0 )"		553871	0					
ANR	553876	Callee	panelConfig ( ) . readEntry		553871	0					
ANR	553877	MemberAccess	panelConfig ( ) . readEntry		553871	0					
ANR	553878	CallExpression	panelConfig ( )		553871	0					
ANR	553879	Callee	panelConfig		553871	0					
ANR	553880	Identifier	panelConfig		553871	0					
ANR	553881	ArgumentList			553871	1					
ANR	553882	Identifier	readEntry		553871	1					
ANR	553883	ArgumentList	"""length"""		553871	1					
ANR	553884	Argument	"""length"""		553871	0					
ANR	553885	PrimaryExpression	"""length"""		553871	0					
ANR	553886	Argument	0		553871	1					
ANR	553887	PrimaryExpression	0		553871	0					
ANR	553888	ReturnType	int		553871	1					
ANR	553889	Identifier	Panel :: length		553871	2					
ANR	553890	ParameterList			553871	3					
ANR	553891	CFGEntryNode	ENTRY		553871		True				
ANR	553892	CFGExitNode	EXIT		553871		True				
ANR	553893	Symbol	panelConfig		553871						
ANR	553894	Symbol	panelConfig ( ) . readEntry		553871						
ANR	553895	Function	Panel :: setLength	185:0:4625:4785							
ANR	553896	FunctionDef	Panel :: setLength (int pixels)		553895	0					
ANR	553897	CompoundStatement		186:0:4659:4785	553895	0					
ANR	553898	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""length"" , pixels )"	187:3:4664:4706	553895	0	True				
ANR	553899	CallExpression	"panelConfig ( ) . writeEntry ( ""length"" , pixels )"		553895	0					
ANR	553900	Callee	panelConfig ( ) . writeEntry		553895	0					
ANR	553901	MemberAccess	panelConfig ( ) . writeEntry		553895	0					
ANR	553902	CallExpression	panelConfig ( )		553895	0					
ANR	553903	Callee	panelConfig		553895	0					
ANR	553904	Identifier	panelConfig		553895	0					
ANR	553905	ArgumentList			553895	1					
ANR	553906	Identifier	writeEntry		553895	1					
ANR	553907	ArgumentList	"""length"""		553895	1					
ANR	553908	Argument	"""length"""		553895	0					
ANR	553909	PrimaryExpression	"""length"""		553895	0					
ANR	553910	Argument	pixels		553895	1					
ANR	553911	Identifier	pixels		553895	0					
ANR	553912	IfStatement	if ( panel ( ) )		553895	1					
ANR	553913	Condition	panel ( )	188:7:4715:4721	553895	0	True				
ANR	553914	CallExpression	panel ( )		553895	0					
ANR	553915	Callee	panel		553895	0					
ANR	553916	Identifier	panel		553895	0					
ANR	553917	ArgumentList			553895	1					
ANR	553918	CompoundStatement		3:16:64:64	553895	1					
ANR	553919	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	189:7:4733:4778	553895	0	True				
ANR	553920	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		553895	0					
ANR	553921	Callee	QMetaObject :: invokeMethod		553895	0					
ANR	553922	Identifier	QMetaObject :: invokeMethod		553895	0					
ANR	553923	ArgumentList	panel ( )		553895	1					
ANR	553924	Argument	panel ( )		553895	0					
ANR	553925	CallExpression	panel ( )		553895	0					
ANR	553926	Callee	panel		553895	0					
ANR	553927	Identifier	panel		553895	0					
ANR	553928	ArgumentList			553895	1					
ANR	553929	Argument	"""restore"""		553895	1					
ANR	553930	PrimaryExpression	"""restore"""		553895	0					
ANR	553931	ReturnType	void		553895	1					
ANR	553932	Identifier	Panel :: setLength		553895	2					
ANR	553933	ParameterList	int pixels		553895	3					
ANR	553934	Parameter	int pixels	185:22:4647:4656	553895	0	True				
ANR	553935	ParameterType	int		553895	0					
ANR	553936	Identifier	pixels		553895	1					
ANR	553937	CFGEntryNode	ENTRY		553895		True				
ANR	553938	CFGExitNode	EXIT		553895		True				
ANR	553939	Symbol	pixels		553895						
ANR	553940	Symbol	panelConfig		553895						
ANR	553941	Symbol	panel		553895						
ANR	553942	Function	Panel :: minimumLength	193:0:4788:4875							
ANR	553943	FunctionDef	Panel :: minimumLength ()		553942	0					
ANR	553944	CompoundStatement		194:0:4821:4875	553942	0					
ANR	553945	ReturnStatement	"return panelConfig ( ) . readEntry ( ""minLength"" , 0 ) ;"	195:4:4827:4873	553942	0	True				
ANR	553946	CallExpression	"panelConfig ( ) . readEntry ( ""minLength"" , 0 )"		553942	0					
ANR	553947	Callee	panelConfig ( ) . readEntry		553942	0					
ANR	553948	MemberAccess	panelConfig ( ) . readEntry		553942	0					
ANR	553949	CallExpression	panelConfig ( )		553942	0					
ANR	553950	Callee	panelConfig		553942	0					
ANR	553951	Identifier	panelConfig		553942	0					
ANR	553952	ArgumentList			553942	1					
ANR	553953	Identifier	readEntry		553942	1					
ANR	553954	ArgumentList	"""minLength"""		553942	1					
ANR	553955	Argument	"""minLength"""		553942	0					
ANR	553956	PrimaryExpression	"""minLength"""		553942	0					
ANR	553957	Argument	0		553942	1					
ANR	553958	PrimaryExpression	0		553942	0					
ANR	553959	ReturnType	int		553942	1					
ANR	553960	Identifier	Panel :: minimumLength		553942	2					
ANR	553961	ParameterList			553942	3					
ANR	553962	CFGEntryNode	ENTRY		553942		True				
ANR	553963	CFGExitNode	EXIT		553942		True				
ANR	553964	Symbol	panelConfig		553942						
ANR	553965	Symbol	panelConfig ( ) . readEntry		553942						
ANR	553966	Function	Panel :: setMinimumLength	198:0:4878:5048							
ANR	553967	FunctionDef	Panel :: setMinimumLength (int pixels)		553966	0					
ANR	553968	CompoundStatement		199:0:4919:5048	553966	0					
ANR	553969	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""minLength"" , pixels )"	200:3:4924:4969	553966	0	True				
ANR	553970	CallExpression	"panelConfig ( ) . writeEntry ( ""minLength"" , pixels )"		553966	0					
ANR	553971	Callee	panelConfig ( ) . writeEntry		553966	0					
ANR	553972	MemberAccess	panelConfig ( ) . writeEntry		553966	0					
ANR	553973	CallExpression	panelConfig ( )		553966	0					
ANR	553974	Callee	panelConfig		553966	0					
ANR	553975	Identifier	panelConfig		553966	0					
ANR	553976	ArgumentList			553966	1					
ANR	553977	Identifier	writeEntry		553966	1					
ANR	553978	ArgumentList	"""minLength"""		553966	1					
ANR	553979	Argument	"""minLength"""		553966	0					
ANR	553980	PrimaryExpression	"""minLength"""		553966	0					
ANR	553981	Argument	pixels		553966	1					
ANR	553982	Identifier	pixels		553966	0					
ANR	553983	IfStatement	if ( panel ( ) )		553966	1					
ANR	553984	Condition	panel ( )	201:7:4978:4984	553966	0	True				
ANR	553985	CallExpression	panel ( )		553966	0					
ANR	553986	Callee	panel		553966	0					
ANR	553987	Identifier	panel		553966	0					
ANR	553988	ArgumentList			553966	1					
ANR	553989	CompoundStatement		3:16:67:67	553966	1					
ANR	553990	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	202:7:4996:5041	553966	0	True				
ANR	553991	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		553966	0					
ANR	553992	Callee	QMetaObject :: invokeMethod		553966	0					
ANR	553993	Identifier	QMetaObject :: invokeMethod		553966	0					
ANR	553994	ArgumentList	panel ( )		553966	1					
ANR	553995	Argument	panel ( )		553966	0					
ANR	553996	CallExpression	panel ( )		553966	0					
ANR	553997	Callee	panel		553966	0					
ANR	553998	Identifier	panel		553966	0					
ANR	553999	ArgumentList			553966	1					
ANR	554000	Argument	"""restore"""		553966	1					
ANR	554001	PrimaryExpression	"""restore"""		553966	0					
ANR	554002	ReturnType	void		553966	1					
ANR	554003	Identifier	Panel :: setMinimumLength		553966	2					
ANR	554004	ParameterList	int pixels		553966	3					
ANR	554005	Parameter	int pixels	198:29:4907:4916	553966	0	True				
ANR	554006	ParameterType	int		553966	0					
ANR	554007	Identifier	pixels		553966	1					
ANR	554008	CFGEntryNode	ENTRY		553966		True				
ANR	554009	CFGExitNode	EXIT		553966		True				
ANR	554010	Symbol	pixels		553966						
ANR	554011	Symbol	panelConfig		553966						
ANR	554012	Symbol	panel		553966						
ANR	554013	Function	Panel :: maximumLength	206:0:5051:5138							
ANR	554014	FunctionDef	Panel :: maximumLength ()		554013	0					
ANR	554015	CompoundStatement		207:0:5084:5138	554013	0					
ANR	554016	ReturnStatement	"return panelConfig ( ) . readEntry ( ""maxLength"" , 0 ) ;"	208:4:5090:5136	554013	0	True				
ANR	554017	CallExpression	"panelConfig ( ) . readEntry ( ""maxLength"" , 0 )"		554013	0					
ANR	554018	Callee	panelConfig ( ) . readEntry		554013	0					
ANR	554019	MemberAccess	panelConfig ( ) . readEntry		554013	0					
ANR	554020	CallExpression	panelConfig ( )		554013	0					
ANR	554021	Callee	panelConfig		554013	0					
ANR	554022	Identifier	panelConfig		554013	0					
ANR	554023	ArgumentList			554013	1					
ANR	554024	Identifier	readEntry		554013	1					
ANR	554025	ArgumentList	"""maxLength"""		554013	1					
ANR	554026	Argument	"""maxLength"""		554013	0					
ANR	554027	PrimaryExpression	"""maxLength"""		554013	0					
ANR	554028	Argument	0		554013	1					
ANR	554029	PrimaryExpression	0		554013	0					
ANR	554030	ReturnType	int		554013	1					
ANR	554031	Identifier	Panel :: maximumLength		554013	2					
ANR	554032	ParameterList			554013	3					
ANR	554033	CFGEntryNode	ENTRY		554013		True				
ANR	554034	CFGExitNode	EXIT		554013		True				
ANR	554035	Symbol	panelConfig		554013						
ANR	554036	Symbol	panelConfig ( ) . readEntry		554013						
ANR	554037	Function	Panel :: setMaximumLength	211:0:5141:5311							
ANR	554038	FunctionDef	Panel :: setMaximumLength (int pixels)		554037	0					
ANR	554039	CompoundStatement		212:0:5182:5311	554037	0					
ANR	554040	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""maxLength"" , pixels )"	213:3:5187:5232	554037	0	True				
ANR	554041	CallExpression	"panelConfig ( ) . writeEntry ( ""maxLength"" , pixels )"		554037	0					
ANR	554042	Callee	panelConfig ( ) . writeEntry		554037	0					
ANR	554043	MemberAccess	panelConfig ( ) . writeEntry		554037	0					
ANR	554044	CallExpression	panelConfig ( )		554037	0					
ANR	554045	Callee	panelConfig		554037	0					
ANR	554046	Identifier	panelConfig		554037	0					
ANR	554047	ArgumentList			554037	1					
ANR	554048	Identifier	writeEntry		554037	1					
ANR	554049	ArgumentList	"""maxLength"""		554037	1					
ANR	554050	Argument	"""maxLength"""		554037	0					
ANR	554051	PrimaryExpression	"""maxLength"""		554037	0					
ANR	554052	Argument	pixels		554037	1					
ANR	554053	Identifier	pixels		554037	0					
ANR	554054	IfStatement	if ( panel ( ) )		554037	1					
ANR	554055	Condition	panel ( )	214:7:5241:5247	554037	0	True				
ANR	554056	CallExpression	panel ( )		554037	0					
ANR	554057	Callee	panel		554037	0					
ANR	554058	Identifier	panel		554037	0					
ANR	554059	ArgumentList			554037	1					
ANR	554060	CompoundStatement		3:16:67:67	554037	1					
ANR	554061	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	215:7:5259:5304	554037	0	True				
ANR	554062	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		554037	0					
ANR	554063	Callee	QMetaObject :: invokeMethod		554037	0					
ANR	554064	Identifier	QMetaObject :: invokeMethod		554037	0					
ANR	554065	ArgumentList	panel ( )		554037	1					
ANR	554066	Argument	panel ( )		554037	0					
ANR	554067	CallExpression	panel ( )		554037	0					
ANR	554068	Callee	panel		554037	0					
ANR	554069	Identifier	panel		554037	0					
ANR	554070	ArgumentList			554037	1					
ANR	554071	Argument	"""restore"""		554037	1					
ANR	554072	PrimaryExpression	"""restore"""		554037	0					
ANR	554073	ReturnType	void		554037	1					
ANR	554074	Identifier	Panel :: setMaximumLength		554037	2					
ANR	554075	ParameterList	int pixels		554037	3					
ANR	554076	Parameter	int pixels	211:29:5170:5179	554037	0	True				
ANR	554077	ParameterType	int		554037	0					
ANR	554078	Identifier	pixels		554037	1					
ANR	554079	CFGEntryNode	ENTRY		554037		True				
ANR	554080	CFGExitNode	EXIT		554037		True				
ANR	554081	Symbol	pixels		554037						
ANR	554082	Symbol	panelConfig		554037						
ANR	554083	Symbol	panel		554037						
ANR	554084	Function	Panel :: height	219:0:5314:5394							
ANR	554085	FunctionDef	Panel :: height ()		554084	0					
ANR	554086	CompoundStatement		220:0:5340:5394	554084	0					
ANR	554087	ReturnStatement	"return panelConfig ( ) . readEntry ( ""thickness"" , 0 ) ;"	221:4:5346:5392	554084	0	True				
ANR	554088	CallExpression	"panelConfig ( ) . readEntry ( ""thickness"" , 0 )"		554084	0					
ANR	554089	Callee	panelConfig ( ) . readEntry		554084	0					
ANR	554090	MemberAccess	panelConfig ( ) . readEntry		554084	0					
ANR	554091	CallExpression	panelConfig ( )		554084	0					
ANR	554092	Callee	panelConfig		554084	0					
ANR	554093	Identifier	panelConfig		554084	0					
ANR	554094	ArgumentList			554084	1					
ANR	554095	Identifier	readEntry		554084	1					
ANR	554096	ArgumentList	"""thickness"""		554084	1					
ANR	554097	Argument	"""thickness"""		554084	0					
ANR	554098	PrimaryExpression	"""thickness"""		554084	0					
ANR	554099	Argument	0		554084	1					
ANR	554100	PrimaryExpression	0		554084	0					
ANR	554101	ReturnType	int		554084	1					
ANR	554102	Identifier	Panel :: height		554084	2					
ANR	554103	ParameterList			554084	3					
ANR	554104	CFGEntryNode	ENTRY		554084		True				
ANR	554105	CFGExitNode	EXIT		554084		True				
ANR	554106	Symbol	panelConfig		554084						
ANR	554107	Symbol	panelConfig ( ) . readEntry		554084						
ANR	554108	Function	Panel :: setHeight	224:0:5397:5564							
ANR	554109	FunctionDef	Panel :: setHeight (int height)		554108	0					
ANR	554110	CompoundStatement		225:0:5431:5564	554108	0					
ANR	554111	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""thickness"" , height )"	226:4:5437:5482	554108	0	True				
ANR	554112	CallExpression	"panelConfig ( ) . writeEntry ( ""thickness"" , height )"		554108	0					
ANR	554113	Callee	panelConfig ( ) . writeEntry		554108	0					
ANR	554114	MemberAccess	panelConfig ( ) . writeEntry		554108	0					
ANR	554115	CallExpression	panelConfig ( )		554108	0					
ANR	554116	Callee	panelConfig		554108	0					
ANR	554117	Identifier	panelConfig		554108	0					
ANR	554118	ArgumentList			554108	1					
ANR	554119	Identifier	writeEntry		554108	1					
ANR	554120	ArgumentList	"""thickness"""		554108	1					
ANR	554121	Argument	"""thickness"""		554108	0					
ANR	554122	PrimaryExpression	"""thickness"""		554108	0					
ANR	554123	Argument	height		554108	1					
ANR	554124	Identifier	height		554108	0					
ANR	554125	IfStatement	if ( panel ( ) )		554108	1					
ANR	554126	Condition	panel ( )	227:8:5492:5498	554108	0	True				
ANR	554127	CallExpression	panel ( )		554108	0					
ANR	554128	Callee	panel		554108	0					
ANR	554129	Identifier	panel		554108	0					
ANR	554130	ArgumentList			554108	1					
ANR	554131	CompoundStatement		3:17:69:69	554108	1					
ANR	554132	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	228:8:5511:5556	554108	0	True				
ANR	554133	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		554108	0					
ANR	554134	Callee	QMetaObject :: invokeMethod		554108	0					
ANR	554135	Identifier	QMetaObject :: invokeMethod		554108	0					
ANR	554136	ArgumentList	panel ( )		554108	1					
ANR	554137	Argument	panel ( )		554108	0					
ANR	554138	CallExpression	panel ( )		554108	0					
ANR	554139	Callee	panel		554108	0					
ANR	554140	Identifier	panel		554108	0					
ANR	554141	ArgumentList			554108	1					
ANR	554142	Argument	"""restore"""		554108	1					
ANR	554143	PrimaryExpression	"""restore"""		554108	0					
ANR	554144	ReturnType	void		554108	1					
ANR	554145	Identifier	Panel :: setHeight		554108	2					
ANR	554146	ParameterList	int height		554108	3					
ANR	554147	Parameter	int height	224:22:5419:5428	554108	0	True				
ANR	554148	ParameterType	int		554108	0					
ANR	554149	Identifier	height		554108	1					
ANR	554150	CFGEntryNode	ENTRY		554108		True				
ANR	554151	CFGExitNode	EXIT		554108		True				
ANR	554152	Symbol	panelConfig		554108						
ANR	554153	Symbol	panel		554108						
ANR	554154	Symbol	height		554108						
ANR	554155	Function	Panel :: hiding	232:0:5567:6041							
ANR	554156	FunctionDef	Panel :: hiding ()		554155	0					
ANR	554157	CompoundStatement		233:0:5597:6041	554155	0					
ANR	554158	SwitchStatement	"switch ( panelConfig ( ) . readEntry ( ""panelVisibility"" , 0 ) )"		554155	0					
ANR	554159	Condition	"panelConfig ( ) . readEntry ( ""panelVisibility"" , 0 )"	234:12:5611:5655	554155	0	True				
ANR	554160	CallExpression	"panelConfig ( ) . readEntry ( ""panelVisibility"" , 0 )"		554155	0					
ANR	554161	Callee	panelConfig ( ) . readEntry		554155	0					
ANR	554162	MemberAccess	panelConfig ( ) . readEntry		554155	0					
ANR	554163	CallExpression	panelConfig ( )		554155	0					
ANR	554164	Callee	panelConfig		554155	0					
ANR	554165	Identifier	panelConfig		554155	0					
ANR	554166	ArgumentList			554155	1					
ANR	554167	Identifier	readEntry		554155	1					
ANR	554168	ArgumentList	"""panelVisibility"""		554155	1					
ANR	554169	Argument	"""panelVisibility"""		554155	0					
ANR	554170	PrimaryExpression	"""panelVisibility"""		554155	0					
ANR	554171	Argument	0		554155	1					
ANR	554172	PrimaryExpression	0		554155	0					
ANR	554173	CompoundStatement		2:59:60:60	554155	1					
ANR	554174	Label	case PanelView :: NormalPanel :	235:8:5668:5695	554155	0	True				
ANR	554175	Identifier	PanelView :: NormalPanel		554155	0					
ANR	554176	ReturnStatement	"return ""none"" ;"	236:12:5709:5722	554155	1	True				
ANR	554177	PrimaryExpression	"""none"""		554155	0					
ANR	554178	BreakStatement	break ;	237:12:5736:5741	554155	2	True				
ANR	554179	Label	case PanelView :: AutoHide :	238:8:5751:5775	554155	3	True				
ANR	554180	Identifier	PanelView :: AutoHide		554155	0					
ANR	554181	ReturnStatement	"return ""autohide"" ;"	239:12:5789:5806	554155	4	True				
ANR	554182	PrimaryExpression	"""autohide"""		554155	0					
ANR	554183	BreakStatement	break ;	240:12:5820:5825	554155	5	True				
ANR	554184	Label	case PanelView :: LetWindowsCover :	241:8:5835:5866	554155	6	True				
ANR	554185	Identifier	PanelView :: LetWindowsCover		554155	0					
ANR	554186	ReturnStatement	"return ""windowscover"" ;"	242:12:5880:5901	554155	7	True				
ANR	554187	PrimaryExpression	"""windowscover"""		554155	0					
ANR	554188	BreakStatement	break ;	243:12:5915:5920	554155	8	True				
ANR	554189	Label	case PanelView :: WindowsGoBelow :	244:8:5930:5960	554155	9	True				
ANR	554190	Identifier	PanelView :: WindowsGoBelow		554155	0					
ANR	554191	ReturnStatement	"return ""windowsbelow"" ;"	245:12:5974:5995	554155	10	True				
ANR	554192	PrimaryExpression	"""windowsbelow"""		554155	0					
ANR	554193	BreakStatement	break ;	246:12:6009:6014	554155	11	True				
ANR	554194	ReturnStatement	"return ""none"" ;"	248:4:6026:6039	554155	1	True				
ANR	554195	PrimaryExpression	"""none"""		554155	0					
ANR	554196	ReturnType	QString		554155	1					
ANR	554197	Identifier	Panel :: hiding		554155	2					
ANR	554198	ParameterList			554155	3					
ANR	554199	CFGEntryNode	ENTRY		554155		True				
ANR	554200	CFGExitNode	EXIT		554155		True				
ANR	554201	Symbol	panelConfig		554155						
ANR	554202	Symbol	panelConfig ( ) . readEntry		554155						
ANR	554203	Function	Panel :: setHiding	251:0:6044:6676							
ANR	554204	FunctionDef	Panel :: setHiding (const QString & mode)		554203	0					
ANR	554205	CompoundStatement		252:0:6087:6676	554203	0					
ANR	554206	IdentifierDeclStatement	PanelView :: VisibilityMode visibilityMode = PanelView :: NormalPanel ;	253:4:6093:6158	554203	0	True				
ANR	554207	IdentifierDecl	visibilityMode = PanelView :: NormalPanel		554203	0					
ANR	554208	IdentifierDeclType	PanelView :: VisibilityMode		554203	0					
ANR	554209	Identifier	visibilityMode		554203	1					
ANR	554210	AssignmentExpression	visibilityMode = PanelView :: NormalPanel		554203	2		=			
ANR	554211	Identifier	PanelView :: NormalPanel		554203	0					
ANR	554212	Identifier	PanelView :: NormalPanel		554203	1					
ANR	554213	IfStatement	"if ( mode . compare ( ""autohide"" , Qt :: CaseInsensitive ) == 0 )"		554203	1					
ANR	554214	Condition	"mode . compare ( ""autohide"" , Qt :: CaseInsensitive ) == 0"	254:8:6168:6217	554203	0	True				
ANR	554215	EqualityExpression	"mode . compare ( ""autohide"" , Qt :: CaseInsensitive ) == 0"		554203	0		==			
ANR	554216	CallExpression	"mode . compare ( ""autohide"" , Qt :: CaseInsensitive )"		554203	0					
ANR	554217	Callee	mode . compare		554203	0					
ANR	554218	MemberAccess	mode . compare		554203	0					
ANR	554219	Identifier	mode		554203	0					
ANR	554220	Identifier	compare		554203	1					
ANR	554221	ArgumentList	"""autohide"""		554203	1					
ANR	554222	Argument	"""autohide"""		554203	0					
ANR	554223	PrimaryExpression	"""autohide"""		554203	0					
ANR	554224	Argument	Qt :: CaseInsensitive		554203	1					
ANR	554225	Identifier	Qt :: CaseInsensitive		554203	0					
ANR	554226	PrimaryExpression	0		554203	1					
ANR	554227	CompoundStatement		3:60:132:132	554203	1					
ANR	554228	ExpressionStatement	visibilityMode = PanelView :: AutoHide	255:8:6230:6266	554203	0	True				
ANR	554229	AssignmentExpression	visibilityMode = PanelView :: AutoHide		554203	0		=			
ANR	554230	Identifier	visibilityMode		554203	0					
ANR	554231	Identifier	PanelView :: AutoHide		554203	1					
ANR	554232	ElseStatement	else		554203	0					
ANR	554233	IfStatement	"if ( mode . compare ( ""windowscover"" , Qt :: CaseInsensitive ) == 0 )"		554203	0					
ANR	554234	Condition	"mode . compare ( ""windowscover"" , Qt :: CaseInsensitive ) == 0"	256:15:6283:6336	554203	0	True				
ANR	554235	EqualityExpression	"mode . compare ( ""windowscover"" , Qt :: CaseInsensitive ) == 0"		554203	0		==			
ANR	554236	CallExpression	"mode . compare ( ""windowscover"" , Qt :: CaseInsensitive )"		554203	0					
ANR	554237	Callee	mode . compare		554203	0					
ANR	554238	MemberAccess	mode . compare		554203	0					
ANR	554239	Identifier	mode		554203	0					
ANR	554240	Identifier	compare		554203	1					
ANR	554241	ArgumentList	"""windowscover"""		554203	1					
ANR	554242	Argument	"""windowscover"""		554203	0					
ANR	554243	PrimaryExpression	"""windowscover"""		554203	0					
ANR	554244	Argument	Qt :: CaseInsensitive		554203	1					
ANR	554245	Identifier	Qt :: CaseInsensitive		554203	0					
ANR	554246	PrimaryExpression	0		554203	1					
ANR	554247	CompoundStatement		5:71:251:251	554203	1					
ANR	554248	ExpressionStatement	visibilityMode = PanelView :: LetWindowsCover	257:8:6349:6392	554203	0	True				
ANR	554249	AssignmentExpression	visibilityMode = PanelView :: LetWindowsCover		554203	0		=			
ANR	554250	Identifier	visibilityMode		554203	0					
ANR	554251	Identifier	PanelView :: LetWindowsCover		554203	1					
ANR	554252	ElseStatement	else		554203	0					
ANR	554253	IfStatement	"if ( mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive ) == 0 )"		554203	0					
ANR	554254	Condition	"mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive ) == 0"	258:15:6409:6462	554203	0	True				
ANR	554255	EqualityExpression	"mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive ) == 0"		554203	0		==			
ANR	554256	CallExpression	"mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive )"		554203	0					
ANR	554257	Callee	mode . compare		554203	0					
ANR	554258	MemberAccess	mode . compare		554203	0					
ANR	554259	Identifier	mode		554203	0					
ANR	554260	Identifier	compare		554203	1					
ANR	554261	ArgumentList	"""windowsbelow"""		554203	1					
ANR	554262	Argument	"""windowsbelow"""		554203	0					
ANR	554263	PrimaryExpression	"""windowsbelow"""		554203	0					
ANR	554264	Argument	Qt :: CaseInsensitive		554203	1					
ANR	554265	Identifier	Qt :: CaseInsensitive		554203	0					
ANR	554266	PrimaryExpression	0		554203	1					
ANR	554267	CompoundStatement		7:71:377:377	554203	1					
ANR	554268	ExpressionStatement	visibilityMode = PanelView :: WindowsGoBelow	259:8:6475:6517	554203	0	True				
ANR	554269	AssignmentExpression	visibilityMode = PanelView :: WindowsGoBelow		554203	0		=			
ANR	554270	Identifier	visibilityMode		554203	0					
ANR	554271	Identifier	PanelView :: WindowsGoBelow		554203	1					
ANR	554272	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""panelVisibility"" , ( int ) visibilityMode )"	262:4:6530:6594	554203	2	True				
ANR	554273	CallExpression	"panelConfig ( ) . writeEntry ( ""panelVisibility"" , ( int ) visibilityMode )"		554203	0					
ANR	554274	Callee	panelConfig ( ) . writeEntry		554203	0					
ANR	554275	MemberAccess	panelConfig ( ) . writeEntry		554203	0					
ANR	554276	CallExpression	panelConfig ( )		554203	0					
ANR	554277	Callee	panelConfig		554203	0					
ANR	554278	Identifier	panelConfig		554203	0					
ANR	554279	ArgumentList			554203	1					
ANR	554280	Identifier	writeEntry		554203	1					
ANR	554281	ArgumentList	"""panelVisibility"""		554203	1					
ANR	554282	Argument	"""panelVisibility"""		554203	0					
ANR	554283	PrimaryExpression	"""panelVisibility"""		554203	0					
ANR	554284	Argument	( int ) visibilityMode		554203	1					
ANR	554285	CastExpression	( int ) visibilityMode		554203	0					
ANR	554286	CastTarget	int		554203	0					
ANR	554287	Identifier	visibilityMode		554203	1					
ANR	554288	IfStatement	if ( panel ( ) )		554203	3					
ANR	554289	Condition	panel ( )	263:8:6604:6610	554203	0	True				
ANR	554290	CallExpression	panel ( )		554203	0					
ANR	554291	Callee	panel		554203	0					
ANR	554292	Identifier	panel		554203	0					
ANR	554293	ArgumentList			554203	1					
ANR	554294	CompoundStatement		12:17:525:525	554203	1					
ANR	554295	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	264:8:6623:6668	554203	0	True				
ANR	554296	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		554203	0					
ANR	554297	Callee	QMetaObject :: invokeMethod		554203	0					
ANR	554298	Identifier	QMetaObject :: invokeMethod		554203	0					
ANR	554299	ArgumentList	panel ( )		554203	1					
ANR	554300	Argument	panel ( )		554203	0					
ANR	554301	CallExpression	panel ( )		554203	0					
ANR	554302	Callee	panel		554203	0					
ANR	554303	Identifier	panel		554203	0					
ANR	554304	ArgumentList			554203	1					
ANR	554305	Argument	"""restore"""		554203	1					
ANR	554306	PrimaryExpression	"""restore"""		554203	0					
ANR	554307	ReturnType	void		554203	1					
ANR	554308	Identifier	Panel :: setHiding		554203	2					
ANR	554309	ParameterList	const QString & mode		554203	3					
ANR	554310	Parameter	const QString & mode	251:22:6066:6084	554203	0	True				
ANR	554311	ParameterType	const QString &		554203	0					
ANR	554312	Identifier	mode		554203	1					
ANR	554313	CFGEntryNode	ENTRY		554203		True				
ANR	554314	CFGExitNode	EXIT		554203		True				
ANR	554315	Symbol	mode		554203						
ANR	554316	Symbol	PanelView :: WindowsGoBelow		554203						
ANR	554317	Symbol	mode . compare		554203						
ANR	554318	Symbol	panelConfig		554203						
ANR	554319	Symbol	PanelView :: NormalPanel		554203						
ANR	554320	Symbol	Qt :: CaseInsensitive		554203						
ANR	554321	Symbol	visibilityMode		554203						
ANR	554322	Symbol	PanelView :: AutoHide		554203						
ANR	554323	Symbol	PanelView :: LetWindowsCover		554203						
ANR	554324	Symbol	panel		554203						
