command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	41923	File	data/converged/CVE-2018-6791_plasma-workspace/appmenu_shadows.cpp								
ANR	41924	ClassDef	Shadows :: Private	34:0:950:2008							
ANR	41925	Function	Private	37:4:987:1078							
ANR	41926	FunctionDef	Private (Shadows * shadows)		41925	0					
ANR	41927	CompoundStatement		40:4:1072:1078	41925	0					
ANR	41928	Identifier	Private		41925	1					
ANR	41929	ParameterList	Shadows * shadows		41925	2					
ANR	41930	Parameter	Shadows * shadows	37:12:995:1010	41925	0	True				
ANR	41931	ParameterType	Shadows *		41925	0					
ANR	41932	Identifier	shadows		41925	1					
ANR	41933	CFGEntryNode	ENTRY		41925		True				
ANR	41934	CFGExitNode	EXIT		41925		True				
ANR	41935	Symbol	shadows		41925						
ANR	41936	Function	~Private	43:4:1085:1130							
ANR	41937	FunctionDef	~Private ()		41936	1					
ANR	41938	CompoundStatement		44:4:1100:1130	41936	0					
ANR	41939	ExpressionStatement	clearPixmaps ( )	45:8:1110:1124	41936	0	True				
ANR	41940	CallExpression	clearPixmaps ( )		41936	0					
ANR	41941	Callee	clearPixmaps		41936	0					
ANR	41942	Identifier	clearPixmaps		41936	0					
ANR	41943	ArgumentList			41936	1					
ANR	41944	Identifier	~Private		41936	1					
ANR	41945	ParameterList			41936	2					
ANR	41946	CFGEntryNode	ENTRY		41936		True				
ANR	41947	CFGExitNode	EXIT		41936		True				
ANR	41948	DeclStmt									
ANR	41949	Decl							void	void ( )	clearPixmaps
ANR	41950	DeclStmt									
ANR	41951	Decl							void	void ( )	setupPixmaps
ANR	41952	DeclStmt									
ANR	41953	Decl							void	void ( const QString & element )	initPixmap
ANR	41954	DeclStmt									
ANR	41955	Decl							QPixmap	QPixmap ( const QSize & size )	initEmptyPixmap
ANR	41956	DeclStmt									
ANR	41957	Decl							void	"void ( const QWidget * window , Plasma :: FrameSvg :: EnabledBorders )"	updateShadow
ANR	41958	DeclStmt									
ANR	41959	Decl							void	void ( const QWidget * window )	clearShadow
ANR	41960	DeclStmt									
ANR	41961	Decl							void	void ( )	updateShadows
ANR	41962	DeclStmt									
ANR	41963	Decl							void	void ( QObject * deletedObject )	windowDestroyed
ANR	41964	DeclStmt									
ANR	41965	Decl							void	void ( Plasma :: FrameSvg :: EnabledBorders enabledBorders )	setupData
ANR	41966	DeclStmt									
ANR	41967	Decl							Shadows	Shadows *	q
ANR	41968	DeclStmt									
ANR	41969	Decl							QList < QPixmap >	QList < QPixmap >	m_shadowPixmaps
ANR	41970	DeclStmt									
ANR	41971	Decl							QPixmap	QPixmap	m_emptyCornerPix
ANR	41972	DeclStmt									
ANR	41973	Decl							QPixmap	QPixmap	m_emptyCornerLeftPix
ANR	41974	DeclStmt									
ANR	41975	Decl							QPixmap	QPixmap	m_emptyCornerTopPix
ANR	41976	DeclStmt									
ANR	41977	Decl							QPixmap	QPixmap	m_emptyCornerRightPix
ANR	41978	DeclStmt									
ANR	41979	Decl							QPixmap	QPixmap	m_emptyCornerBottomPix
ANR	41980	DeclStmt									
ANR	41981	Decl							QPixmap	QPixmap	m_emptyVerticalPix
ANR	41982	DeclStmt									
ANR	41983	Decl							QPixmap	QPixmap	m_emptyHorizontalPix
ANR	41984	DeclStmt									
ANR	41985	Decl							"QHash < Plasma :: FrameSvg :: EnabledBorders , QVector < unsigned long > >"	"QHash < Plasma :: FrameSvg :: EnabledBorders , QVector < unsigned long > >"	data
ANR	41986	DeclStmt									
ANR	41987	Decl							"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders >"	"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders >"	m_windows
ANR	41988	DeclStmt									
ANR	41989	Decl							bool	bool	m_managePixmaps
ANR	41990	ClassDef	ShadowsSingleton	74:0:2012:2098							
ANR	41991	Function	ShadowsSingleton	77:4:2049:2078							
ANR	41992	FunctionDef	ShadowsSingleton ()		41991	0					
ANR	41993	CompoundStatement		78:4:2072:2078	41991	0					
ANR	41994	Identifier	ShadowsSingleton		41991	1					
ANR	41995	ParameterList			41991	2					
ANR	41996	CFGEntryNode	ENTRY		41991		True				
ANR	41997	CFGExitNode	EXIT		41991		True				
ANR	41998	DeclStmt									
ANR	41999	Decl							Shadows	Shadows	self
ANR	42000	Function	Shadows :: Shadows	86:0:2157:2369							
ANR	42001	FunctionDef	"Shadows :: Shadows (QObject * parent , const QString & prefix)"		42000	0					
ANR	42002	CompoundStatement		89:0:2268:2369	42000	0					
ANR	42003	ExpressionStatement	setImagePath ( prefix )	90:4:2274:2294	42000	0	True				
ANR	42004	CallExpression	setImagePath ( prefix )		42000	0					
ANR	42005	Callee	setImagePath		42000	0					
ANR	42006	Identifier	setImagePath		42000	0					
ANR	42007	ArgumentList	prefix		42000	1					
ANR	42008	Argument	prefix		42000	0					
ANR	42009	Identifier	prefix		42000	0					
ANR	42010	ExpressionStatement	"connect ( this , SIGNAL ( repaintNeeded ( ) ) , this , SLOT ( updateShadows ( ) ) )"	91:4:2300:2367	42000	1	True				
ANR	42011	CallExpression	"connect ( this , SIGNAL ( repaintNeeded ( ) ) , this , SLOT ( updateShadows ( ) ) )"		42000	0					
ANR	42012	Callee	connect		42000	0					
ANR	42013	Identifier	connect		42000	0					
ANR	42014	ArgumentList	this		42000	1					
ANR	42015	Argument	this		42000	0					
ANR	42016	Identifier	this		42000	0					
ANR	42017	Argument	SIGNAL ( repaintNeeded ( ) )		42000	1					
ANR	42018	CallExpression	SIGNAL ( repaintNeeded ( ) )		42000	0					
ANR	42019	Callee	SIGNAL		42000	0					
ANR	42020	Identifier	SIGNAL		42000	0					
ANR	42021	ArgumentList	repaintNeeded ( )		42000	1					
ANR	42022	Argument	repaintNeeded ( )		42000	0					
ANR	42023	CallExpression	repaintNeeded ( )		42000	0					
ANR	42024	Callee	repaintNeeded		42000	0					
ANR	42025	Identifier	repaintNeeded		42000	0					
ANR	42026	ArgumentList			42000	1					
ANR	42027	Argument	this		42000	2					
ANR	42028	Identifier	this		42000	0					
ANR	42029	Argument	SLOT ( updateShadows ( ) )		42000	3					
ANR	42030	CallExpression	SLOT ( updateShadows ( ) )		42000	0					
ANR	42031	Callee	SLOT		42000	0					
ANR	42032	Identifier	SLOT		42000	0					
ANR	42033	ArgumentList	updateShadows ( )		42000	1					
ANR	42034	Argument	updateShadows ( )		42000	0					
ANR	42035	CallExpression	updateShadows ( )		42000	0					
ANR	42036	Callee	updateShadows		42000	0					
ANR	42037	Identifier	updateShadows		42000	0					
ANR	42038	ArgumentList			42000	1					
ANR	42039	Identifier	Shadows :: Shadows		42000	1					
ANR	42040	ParameterList	"QObject * parent , const QString & prefix"		42000	2					
ANR	42041	Parameter	QObject * parent	86:17:2174:2188	42000	0	True				
ANR	42042	ParameterType	QObject *		42000	0					
ANR	42043	Identifier	parent		42000	1					
ANR	42044	Parameter	const QString & prefix	86:34:2191:2211	42000	1	True				
ANR	42045	ParameterType	const QString &		42000	0					
ANR	42046	Identifier	prefix		42000	1					
ANR	42047	CFGEntryNode	ENTRY		42000		True				
ANR	42048	CFGExitNode	EXIT		42000		True				
ANR	42049	Symbol	SIGNAL		42000						
ANR	42050	Symbol	parent		42000						
ANR	42051	Symbol	prefix		42000						
ANR	42052	Symbol	this		42000						
ANR	42053	Symbol	SLOT		42000						
ANR	42054	Symbol	updateShadows		42000						
ANR	42055	Symbol	repaintNeeded		42000						
ANR	42056	Function	Shadows :: self	94:0:2372:2437							
ANR	42057	FunctionDef	Shadows :: self ()		42056	0					
ANR	42058	CompoundStatement		95:0:2397:2437	42056	0					
ANR	42059	ReturnStatement	return & privateShadowsSelf -> self ;	96:4:2403:2435	42056	0	True				
ANR	42060	UnaryOperationExpression	& privateShadowsSelf -> self		42056	0					
ANR	42061	UnaryOperator	&		42056	0					
ANR	42062	PtrMemberAccess	privateShadowsSelf -> self		42056	1					
ANR	42063	Identifier	privateShadowsSelf		42056	0					
ANR	42064	Identifier	self		42056	1					
ANR	42065	ReturnType	Shadows *		42056	1					
ANR	42066	Identifier	Shadows :: self		42056	2					
ANR	42067	ParameterList			42056	3					
ANR	42068	CFGEntryNode	ENTRY		42056		True				
ANR	42069	CFGExitNode	EXIT		42056		True				
ANR	42070	Symbol	privateShadowsSelf		42056						
ANR	42071	Symbol	& privateShadowsSelf -> self		42056						
ANR	42072	Function	Shadows :: addWindow	99:0:2440:2814							
ANR	42073	FunctionDef	"Shadows :: addWindow (const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders)"		42072	0					
ANR	42074	CompoundStatement		100:0:2536:2814	42072	0					
ANR	42075	IfStatement	if ( ! window || ! window -> isWindow ( ) )		42072	0					
ANR	42076	Condition	! window || ! window -> isWindow ( )	101:8:2546:2575	42072	0	True				
ANR	42077	OrExpression	! window || ! window -> isWindow ( )		42072	0		||			
ANR	42078	UnaryOperationExpression	! window		42072	0					
ANR	42079	UnaryOperator	!		42072	0					
ANR	42080	Identifier	window		42072	1					
ANR	42081	UnaryOperationExpression	! window -> isWindow ( )		42072	1					
ANR	42082	UnaryOperator	!		42072	0					
ANR	42083	CallExpression	window -> isWindow ( )		42072	1					
ANR	42084	Callee	window -> isWindow		42072	0					
ANR	42085	PtrMemberAccess	window -> isWindow		42072	0					
ANR	42086	Identifier	window		42072	0					
ANR	42087	Identifier	isWindow		42072	1					
ANR	42088	ArgumentList			42072	1					
ANR	42089	CompoundStatement		2:40:41:41	42072	1					
ANR	42090	ReturnStatement	return ;	102:8:2588:2594	42072	0	True				
ANR	42091	ExpressionStatement	d -> m_windows [ window ] = enabledBorders	105:4:2607:2644	42072	1	True				
ANR	42092	AssignmentExpression	d -> m_windows [ window ] = enabledBorders		42072	0		=			
ANR	42093	ArrayIndexing	d -> m_windows [ window ]		42072	0					
ANR	42094	PtrMemberAccess	d -> m_windows		42072	0					
ANR	42095	Identifier	d		42072	0					
ANR	42096	Identifier	m_windows		42072	1					
ANR	42097	Identifier	window		42072	1					
ANR	42098	Identifier	enabledBorders		42072	1					
ANR	42099	ExpressionStatement	"d -> updateShadow ( window , enabledBorders )"	106:4:2650:2689	42072	2	True				
ANR	42100	CallExpression	"d -> updateShadow ( window , enabledBorders )"		42072	0					
ANR	42101	Callee	d -> updateShadow		42072	0					
ANR	42102	PtrMemberAccess	d -> updateShadow		42072	0					
ANR	42103	Identifier	d		42072	0					
ANR	42104	Identifier	updateShadow		42072	1					
ANR	42105	ArgumentList	window		42072	1					
ANR	42106	Argument	window		42072	0					
ANR	42107	Identifier	window		42072	0					
ANR	42108	Argument	enabledBorders		42072	1					
ANR	42109	Identifier	enabledBorders		42072	0					
ANR	42110	Statement	connect	107:4:2695:2701	42072	3	True				
ANR	42111	Statement	(	107:11:2702:2702	42072	4	True				
ANR	42112	Statement	window	107:12:2703:2708	42072	5	True				
ANR	42113	Statement	","	107:18:2709:2709	42072	6	True				
ANR	42114	Statement	SIGNAL	107:20:2711:2716	42072	7	True				
ANR	42115	Statement	(	107:26:2717:2717	42072	8	True				
ANR	42116	Statement	destroyed	107:27:2718:2726	42072	9	True				
ANR	42117	Statement	(	107:36:2727:2727	42072	10	True				
ANR	42118	Statement	QObject	107:37:2728:2734	42072	11	True				
ANR	42119	Statement	*	107:44:2735:2735	42072	12	True				
ANR	42120	Statement	)	107:45:2736:2736	42072	13	True				
ANR	42121	Statement	)	107:46:2737:2737	42072	14	True				
ANR	42122	Statement	","	107:47:2738:2738	42072	15	True				
ANR	42123	Statement	this	108:12:2752:2755	42072	16	True				
ANR	42124	Statement	","	108:16:2756:2756	42072	17	True				
ANR	42125	Statement	SLOT	108:18:2758:2761	42072	18	True				
ANR	42126	Statement	(	108:22:2762:2762	42072	19	True				
ANR	42127	Statement	windowDestroyed	108:23:2763:2777	42072	20	True				
ANR	42128	Statement	(	108:38:2778:2778	42072	21	True				
ANR	42129	Statement	QObject	108:39:2779:2785	42072	22	True				
ANR	42130	Statement	*	108:46:2786:2786	42072	23	True				
ANR	42131	Statement	)	108:47:2787:2787	42072	24	True				
ANR	42132	Statement	)	108:48:2788:2788	42072	25	True				
ANR	42133	Statement	","	108:49:2789:2789	42072	26	True				
ANR	42134	Statement	Qt	108:51:2791:2792	42072	27	True				
ANR	42135	Statement	::	108:53:2793:2794	42072	28	True				
ANR	42136	Statement	UniqueConnection	108:55:2795:2810	42072	29	True				
ANR	42137	Statement	)	108:71:2811:2811	42072	30	True				
ANR	42138	ExpressionStatement		108:72:2812:2812	42072	31	True				
ANR	42139	ReturnType	void		42072	1					
ANR	42140	Identifier	Shadows :: addWindow		42072	2					
ANR	42141	ParameterList	"const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders"		42072	3					
ANR	42142	Parameter	const QWidget * window	99:24:2464:2484	42072	0	True				
ANR	42143	ParameterType	const QWidget *		42072	0					
ANR	42144	Identifier	window		42072	1					
ANR	42145	Parameter	Plasma :: FrameSvg :: EnabledBorders enabledBorders	99:47:2487:2533	42072	1	True				
ANR	42146	ParameterType	Plasma :: FrameSvg :: EnabledBorders		42072	0					
ANR	42147	Identifier	enabledBorders		42072	1					
ANR	42148	CFGEntryNode	ENTRY		42072		True				
ANR	42149	CFGExitNode	EXIT		42072		True				
ANR	42150	Symbol	window -> isWindow		42072						
ANR	42151	Symbol	* window		42072						
ANR	42152	Symbol	enabledBorders		42072						
ANR	42153	Symbol	d		42072						
ANR	42154	Symbol	* * d		42072						
ANR	42155	Symbol	* d -> m_windows		42072						
ANR	42156	Symbol	window		42072						
ANR	42157	Symbol	* d		42072						
ANR	42158	Symbol	d -> m_windows		42072						
ANR	42159	Function	Shadows :: removeWindow	111:0:2817:3099							
ANR	42160	FunctionDef	Shadows :: removeWindow (const QWidget * window)		42159	0					
ANR	42161	CompoundStatement		112:0:2867:3099	42159	0					
ANR	42162	IfStatement	if ( ! d -> m_windows . contains ( window ) )		42159	0					
ANR	42163	Condition	! d -> m_windows . contains ( window )	113:8:2877:2906	42159	0	True				
ANR	42164	UnaryOperationExpression	! d -> m_windows . contains ( window )		42159	0					
ANR	42165	UnaryOperator	!		42159	0					
ANR	42166	CallExpression	d -> m_windows . contains ( window )		42159	1					
ANR	42167	Callee	d -> m_windows . contains		42159	0					
ANR	42168	MemberAccess	d -> m_windows . contains		42159	0					
ANR	42169	PtrMemberAccess	d -> m_windows		42159	0					
ANR	42170	Identifier	d		42159	0					
ANR	42171	Identifier	m_windows		42159	1					
ANR	42172	Identifier	contains		42159	1					
ANR	42173	ArgumentList	window		42159	1					
ANR	42174	Argument	window		42159	0					
ANR	42175	Identifier	window		42159	0					
ANR	42176	CompoundStatement		2:40:41:41	42159	1					
ANR	42177	ReturnStatement	return ;	114:8:2919:2925	42159	0	True				
ANR	42178	ExpressionStatement	d -> m_windows . remove ( window )	117:4:2938:2965	42159	1	True				
ANR	42179	CallExpression	d -> m_windows . remove ( window )		42159	0					
ANR	42180	Callee	d -> m_windows . remove		42159	0					
ANR	42181	MemberAccess	d -> m_windows . remove		42159	0					
ANR	42182	PtrMemberAccess	d -> m_windows		42159	0					
ANR	42183	Identifier	d		42159	0					
ANR	42184	Identifier	m_windows		42159	1					
ANR	42185	Identifier	remove		42159	1					
ANR	42186	ArgumentList	window		42159	1					
ANR	42187	Argument	window		42159	0					
ANR	42188	Identifier	window		42159	0					
ANR	42189	ExpressionStatement	"disconnect ( window , 0 , this , 0 )"	118:4:2971:3001	42159	2	True				
ANR	42190	CallExpression	"disconnect ( window , 0 , this , 0 )"		42159	0					
ANR	42191	Callee	disconnect		42159	0					
ANR	42192	Identifier	disconnect		42159	0					
ANR	42193	ArgumentList	window		42159	1					
ANR	42194	Argument	window		42159	0					
ANR	42195	Identifier	window		42159	0					
ANR	42196	Argument	0		42159	1					
ANR	42197	PrimaryExpression	0		42159	0					
ANR	42198	Argument	this		42159	2					
ANR	42199	Identifier	this		42159	0					
ANR	42200	Argument	0		42159	3					
ANR	42201	PrimaryExpression	0		42159	0					
ANR	42202	ExpressionStatement	d -> clearShadow ( window )	119:4:3007:3029	42159	3	True				
ANR	42203	CallExpression	d -> clearShadow ( window )		42159	0					
ANR	42204	Callee	d -> clearShadow		42159	0					
ANR	42205	PtrMemberAccess	d -> clearShadow		42159	0					
ANR	42206	Identifier	d		42159	0					
ANR	42207	Identifier	clearShadow		42159	1					
ANR	42208	ArgumentList	window		42159	1					
ANR	42209	Argument	window		42159	0					
ANR	42210	Identifier	window		42159	0					
ANR	42211	IfStatement	if ( d -> m_windows . isEmpty ( ) )		42159	4					
ANR	42212	Condition	d -> m_windows . isEmpty ( )	121:8:3040:3061	42159	0	True				
ANR	42213	CallExpression	d -> m_windows . isEmpty ( )		42159	0					
ANR	42214	Callee	d -> m_windows . isEmpty		42159	0					
ANR	42215	MemberAccess	d -> m_windows . isEmpty		42159	0					
ANR	42216	PtrMemberAccess	d -> m_windows		42159	0					
ANR	42217	Identifier	d		42159	0					
ANR	42218	Identifier	m_windows		42159	1					
ANR	42219	Identifier	isEmpty		42159	1					
ANR	42220	ArgumentList			42159	1					
ANR	42221	CompoundStatement		10:32:196:196	42159	1					
ANR	42222	ExpressionStatement	d -> clearPixmaps ( )	122:8:3074:3091	42159	0	True				
ANR	42223	CallExpression	d -> clearPixmaps ( )		42159	0					
ANR	42224	Callee	d -> clearPixmaps		42159	0					
ANR	42225	PtrMemberAccess	d -> clearPixmaps		42159	0					
ANR	42226	Identifier	d		42159	0					
ANR	42227	Identifier	clearPixmaps		42159	1					
ANR	42228	ArgumentList			42159	1					
ANR	42229	ReturnType	void		42159	1					
ANR	42230	Identifier	Shadows :: removeWindow		42159	2					
ANR	42231	ParameterList	const QWidget * window		42159	3					
ANR	42232	Parameter	const QWidget * window	111:27:2844:2864	42159	0	True				
ANR	42233	ParameterType	const QWidget *		42159	0					
ANR	42234	Identifier	window		42159	1					
ANR	42235	CFGEntryNode	ENTRY		42159		True				
ANR	42236	CFGExitNode	EXIT		42159		True				
ANR	42237	Symbol	d		42159						
ANR	42238	Symbol	this		42159						
ANR	42239	Symbol	d -> m_windows . isEmpty		42159						
ANR	42240	Symbol	window		42159						
ANR	42241	Symbol	d -> m_windows . contains		42159						
ANR	42242	Symbol	* d		42159						
ANR	42243	Symbol	d -> m_windows		42159						
ANR	42244	Function	Shadows :: Private :: windowDestroyed	126:0:3102:3290							
ANR	42245	FunctionDef	Shadows :: Private :: windowDestroyed (QObject * deletedObject)		42244	0					
ANR	42246	CompoundStatement		127:0:3165:3290	42244	0					
ANR	42247	Statement	m_windows	128:4:3171:3179	42244	0	True				
ANR	42248	Statement	.	128:13:3180:3180	42244	1	True				
ANR	42249	Statement	remove	128:14:3181:3186	42244	2	True				
ANR	42250	Statement	(	128:20:3187:3187	42244	3	True				
ANR	42251	Statement	static_cast	128:21:3188:3198	42244	4	True				
ANR	42252	Statement	<	128:32:3199:3199	42244	5	True				
ANR	42253	Statement	QWidget	128:33:3200:3206	42244	6	True				
ANR	42254	Statement	*	128:41:3208:3208	42244	7	True				
ANR	42255	Statement	>	128:42:3209:3209	42244	8	True				
ANR	42256	Statement	(	128:43:3210:3210	42244	9	True				
ANR	42257	Statement	deletedObject	128:44:3211:3223	42244	10	True				
ANR	42258	Statement	)	128:57:3224:3224	42244	11	True				
ANR	42259	Statement	)	128:58:3225:3225	42244	12	True				
ANR	42260	ExpressionStatement		128:59:3226:3226	42244	13	True				
ANR	42261	IfStatement	if ( m_windows . isEmpty ( ) )		42244	14					
ANR	42262	Condition	m_windows . isEmpty ( )	130:8:3237:3255	42244	0	True				
ANR	42263	CallExpression	m_windows . isEmpty ( )		42244	0					
ANR	42264	Callee	m_windows . isEmpty		42244	0					
ANR	42265	MemberAccess	m_windows . isEmpty		42244	0					
ANR	42266	Identifier	m_windows		42244	0					
ANR	42267	Identifier	isEmpty		42244	1					
ANR	42268	ArgumentList			42244	1					
ANR	42269	CompoundStatement		4:29:92:92	42244	1					
ANR	42270	ExpressionStatement	clearPixmaps ( )	131:8:3268:3282	42244	0	True				
ANR	42271	CallExpression	clearPixmaps ( )		42244	0					
ANR	42272	Callee	clearPixmaps		42244	0					
ANR	42273	Identifier	clearPixmaps		42244	0					
ANR	42274	ArgumentList			42244	1					
ANR	42275	ReturnType	void		42244	1					
ANR	42276	Identifier	Shadows :: Private :: windowDestroyed		42244	2					
ANR	42277	ParameterList	QObject * deletedObject		42244	3					
ANR	42278	Parameter	QObject * deletedObject	126:39:3141:3162	42244	0	True				
ANR	42279	ParameterType	QObject *		42244	0					
ANR	42280	Identifier	deletedObject		42244	1					
ANR	42281	CFGEntryNode	ENTRY		42244		True				
ANR	42282	CFGExitNode	EXIT		42244		True				
ANR	42283	Symbol	m_windows		42244						
ANR	42284	Symbol	m_windows . isEmpty		42244						
ANR	42285	Symbol	deletedObject		42244						
ANR	42286	Function	Shadows :: Private :: updateShadows	135:0:3293:3553							
ANR	42287	FunctionDef	Shadows :: Private :: updateShadows ()		42286	0					
ANR	42288	CompoundStatement		136:0:3332:3553	42286	0					
ANR	42289	ExpressionStatement	setupPixmaps ( )	137:4:3338:3352	42286	0	True				
ANR	42290	CallExpression	setupPixmaps ( )		42286	0					
ANR	42291	Callee	setupPixmaps		42286	0					
ANR	42292	Identifier	setupPixmaps		42286	0					
ANR	42293	ArgumentList			42286	1					
ANR	42294	IdentifierDeclStatement	"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders > :: const_iterator i ;"	138:4:3358:3432	42286	1	True				
ANR	42295	IdentifierDecl	i		42286	0					
ANR	42296	IdentifierDeclType	"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders > :: const_iterator"		42286	0					
ANR	42297	Identifier	i		42286	1					
ANR	42298	ForStatement	for ( i = m_windows . constBegin ( ) ; i != m_windows . constEnd ( ) ; ++ i )		42286	2					
ANR	42299	ForInit	i = m_windows . constBegin ( ) ;	139:9:3443:3469	42286	0	True				
ANR	42300	AssignmentExpression	i = m_windows . constBegin ( )		42286	0		=			
ANR	42301	Identifier	i		42286	0					
ANR	42302	CallExpression	m_windows . constBegin ( )		42286	1					
ANR	42303	Callee	m_windows . constBegin		42286	0					
ANR	42304	MemberAccess	m_windows . constBegin		42286	0					
ANR	42305	Identifier	m_windows		42286	0					
ANR	42306	Identifier	constBegin		42286	1					
ANR	42307	ArgumentList			42286	1					
ANR	42308	Condition	i != m_windows . constEnd ( )	139:37:3471:3495	42286	1	True				
ANR	42309	EqualityExpression	i != m_windows . constEnd ( )		42286	0		!=			
ANR	42310	Identifier	i		42286	0					
ANR	42311	CallExpression	m_windows . constEnd ( )		42286	1					
ANR	42312	Callee	m_windows . constEnd		42286	0					
ANR	42313	MemberAccess	m_windows . constEnd		42286	0					
ANR	42314	Identifier	m_windows		42286	0					
ANR	42315	Identifier	constEnd		42286	1					
ANR	42316	ArgumentList			42286	1					
ANR	42317	UnaryExpression	++ i	139:64:3498:3500	42286	2	True				
ANR	42318	IncDec	++		42286	0					
ANR	42319	Identifier	i		42286	1					
ANR	42320	CompoundStatement		4:69:170:170	42286	3					
ANR	42321	ExpressionStatement	"updateShadow ( i . key ( ) , i . value ( ) )"	140:8:3513:3545	42286	0	True				
ANR	42322	CallExpression	"updateShadow ( i . key ( ) , i . value ( ) )"		42286	0					
ANR	42323	Callee	updateShadow		42286	0					
ANR	42324	Identifier	updateShadow		42286	0					
ANR	42325	ArgumentList	i . key ( )		42286	1					
ANR	42326	Argument	i . key ( )		42286	0					
ANR	42327	CallExpression	i . key ( )		42286	0					
ANR	42328	Callee	i . key		42286	0					
ANR	42329	MemberAccess	i . key		42286	0					
ANR	42330	Identifier	i		42286	0					
ANR	42331	Identifier	key		42286	1					
ANR	42332	ArgumentList			42286	1					
ANR	42333	Argument	i . value ( )		42286	1					
ANR	42334	CallExpression	i . value ( )		42286	0					
ANR	42335	Callee	i . value		42286	0					
ANR	42336	MemberAccess	i . value		42286	0					
ANR	42337	Identifier	i		42286	0					
ANR	42338	Identifier	value		42286	1					
ANR	42339	ArgumentList			42286	1					
ANR	42340	ReturnType	void		42286	1					
ANR	42341	Identifier	Shadows :: Private :: updateShadows		42286	2					
ANR	42342	ParameterList			42286	3					
ANR	42343	CFGEntryNode	ENTRY		42286		True				
ANR	42344	CFGExitNode	EXIT		42286		True				
ANR	42345	Symbol	m_windows		42286						
ANR	42346	Symbol	i . value		42286						
ANR	42347	Symbol	m_windows . constEnd		42286						
ANR	42348	Symbol	m_windows . constBegin		42286						
ANR	42349	Symbol	i . key		42286						
ANR	42350	Symbol	i		42286						
ANR	42351	Function	Shadows :: Private :: initPixmap	144:0:3556:4151							
ANR	42352	FunctionDef	Shadows :: Private :: initPixmap (const QString & element)		42351	0					
ANR	42353	CompoundStatement		145:0:3614:4151	42351	0					
ANR	42354	IdentifierDeclStatement	QPixmap pix = q -> pixmap ( element ) ;	147:4:3636:3668	42351	0	True				
ANR	42355	IdentifierDecl	pix = q -> pixmap ( element )		42351	0					
ANR	42356	IdentifierDeclType	QPixmap		42351	0					
ANR	42357	Identifier	pix		42351	1					
ANR	42358	AssignmentExpression	pix = q -> pixmap ( element )		42351	2		=			
ANR	42359	Identifier	pix		42351	0					
ANR	42360	CallExpression	q -> pixmap ( element )		42351	1					
ANR	42361	Callee	q -> pixmap		42351	0					
ANR	42362	PtrMemberAccess	q -> pixmap		42351	0					
ANR	42363	Identifier	q		42351	0					
ANR	42364	Identifier	pixmap		42351	1					
ANR	42365	ArgumentList	element		42351	1					
ANR	42366	Argument	element		42351	0					
ANR	42367	Identifier	element		42351	0					
ANR	42368	IfStatement	if ( ! pix . isNull ( ) && pix . handle ( ) == 0 )		42351	1					
ANR	42369	Condition	! pix . isNull ( ) && pix . handle ( ) == 0	148:8:3678:3711	42351	0	True				
ANR	42370	AndExpression	! pix . isNull ( ) && pix . handle ( ) == 0		42351	0		&&			
ANR	42371	UnaryOperationExpression	! pix . isNull ( )		42351	0					
ANR	42372	UnaryOperator	!		42351	0					
ANR	42373	CallExpression	pix . isNull ( )		42351	1					
ANR	42374	Callee	pix . isNull		42351	0					
ANR	42375	MemberAccess	pix . isNull		42351	0					
ANR	42376	Identifier	pix		42351	0					
ANR	42377	Identifier	isNull		42351	1					
ANR	42378	ArgumentList			42351	1					
ANR	42379	EqualityExpression	pix . handle ( ) == 0		42351	1		==			
ANR	42380	CallExpression	pix . handle ( )		42351	0					
ANR	42381	Callee	pix . handle		42351	0					
ANR	42382	MemberAccess	pix . handle		42351	0					
ANR	42383	Identifier	pix		42351	0					
ANR	42384	Identifier	handle		42351	1					
ANR	42385	ArgumentList			42351	1					
ANR	42386	PrimaryExpression	0		42351	1					
ANR	42387	CompoundStatement		8:8:347:367	42351	1					
ANR	42388	IdentifierDeclStatement	"Pixmap xPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 ) ;"	149:8:3724:3830	42351	0	True				
ANR	42389	IdentifierDecl	"xPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 )"		42351	0					
ANR	42390	IdentifierDeclType	Pixmap		42351	0					
ANR	42391	Identifier	xPix		42351	1					
ANR	42392	AssignmentExpression	"xPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 )"		42351	2		=			
ANR	42393	Identifier	xPix		42351	0					
ANR	42394	CallExpression	"XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 )"		42351	1					
ANR	42395	Callee	XCreatePixmap		42351	0					
ANR	42396	Identifier	XCreatePixmap		42351	0					
ANR	42397	ArgumentList	QX11Info :: display ( )		42351	1					
ANR	42398	Argument	QX11Info :: display ( )		42351	0					
ANR	42399	CallExpression	QX11Info :: display ( )		42351	0					
ANR	42400	Callee	QX11Info :: display		42351	0					
ANR	42401	Identifier	QX11Info :: display		42351	0					
ANR	42402	ArgumentList			42351	1					
ANR	42403	Argument	QX11Info :: appRootWindow ( )		42351	1					
ANR	42404	CallExpression	QX11Info :: appRootWindow ( )		42351	0					
ANR	42405	Callee	QX11Info :: appRootWindow		42351	0					
ANR	42406	Identifier	QX11Info :: appRootWindow		42351	0					
ANR	42407	ArgumentList			42351	1					
ANR	42408	Argument	pix . width ( )		42351	2					
ANR	42409	CallExpression	pix . width ( )		42351	0					
ANR	42410	Callee	pix . width		42351	0					
ANR	42411	MemberAccess	pix . width		42351	0					
ANR	42412	Identifier	pix		42351	0					
ANR	42413	Identifier	width		42351	1					
ANR	42414	ArgumentList			42351	1					
ANR	42415	Argument	pix . height ( )		42351	3					
ANR	42416	CallExpression	pix . height ( )		42351	0					
ANR	42417	Callee	pix . height		42351	0					
ANR	42418	MemberAccess	pix . height		42351	0					
ANR	42419	Identifier	pix		42351	0					
ANR	42420	Identifier	height		42351	1					
ANR	42421	ArgumentList			42351	1					
ANR	42422	Argument	32		42351	4					
ANR	42423	PrimaryExpression	32		42351	0					
ANR	42424	IdentifierDeclStatement	"QPixmap tempPix = QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared ) ;"	150:8:3840:3913	42351	1	True				
ANR	42425	IdentifierDecl	"tempPix = QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared )"		42351	0					
ANR	42426	IdentifierDeclType	QPixmap		42351	0					
ANR	42427	Identifier	tempPix		42351	1					
ANR	42428	AssignmentExpression	"tempPix = QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared )"		42351	2		=			
ANR	42429	Identifier	tempPix		42351	0					
ANR	42430	CallExpression	"QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared )"		42351	1					
ANR	42431	Callee	QPixmap :: fromX11Pixmap		42351	0					
ANR	42432	Identifier	QPixmap :: fromX11Pixmap		42351	0					
ANR	42433	ArgumentList	xPix		42351	1					
ANR	42434	Argument	xPix		42351	0					
ANR	42435	Identifier	xPix		42351	0					
ANR	42436	Argument	QPixmap :: ExplicitlyShared		42351	1					
ANR	42437	Identifier	QPixmap :: ExplicitlyShared		42351	0					
ANR	42438	ExpressionStatement	tempPix . fill ( Qt :: transparent )	151:8:3923:3952	42351	2	True				
ANR	42439	CallExpression	tempPix . fill ( Qt :: transparent )		42351	0					
ANR	42440	Callee	tempPix . fill		42351	0					
ANR	42441	MemberAccess	tempPix . fill		42351	0					
ANR	42442	Identifier	tempPix		42351	0					
ANR	42443	Identifier	fill		42351	1					
ANR	42444	ArgumentList	Qt :: transparent		42351	1					
ANR	42445	Argument	Qt :: transparent		42351	0					
ANR	42446	Identifier	Qt :: transparent		42351	0					
ANR	42447	IdentifierDeclStatement	QPainter p ( & tempPix ) ;	152:8:3962:3982	42351	3	True				
ANR	42448	IdentifierDecl	p ( & tempPix )		42351	0					
ANR	42449	IdentifierDeclType	QPainter		42351	0					
ANR	42450	Identifier	p		42351	1					
ANR	42451	UnaryOperationExpression	& tempPix		42351	2					
ANR	42452	UnaryOperator	&		42351	0					
ANR	42453	Identifier	tempPix		42351	1					
ANR	42454	ExpressionStatement	"p . drawPixmap ( QPoint ( 0 , 0 ) , pix )"	153:8:3992:4023	42351	4	True				
ANR	42455	CallExpression	"p . drawPixmap ( QPoint ( 0 , 0 ) , pix )"		42351	0					
ANR	42456	Callee	p . drawPixmap		42351	0					
ANR	42457	MemberAccess	p . drawPixmap		42351	0					
ANR	42458	Identifier	p		42351	0					
ANR	42459	Identifier	drawPixmap		42351	1					
ANR	42460	ArgumentList	"QPoint ( 0 , 0 )"		42351	1					
ANR	42461	Argument	"QPoint ( 0 , 0 )"		42351	0					
ANR	42462	CallExpression	"QPoint ( 0 , 0 )"		42351	0					
ANR	42463	Callee	QPoint		42351	0					
ANR	42464	Identifier	QPoint		42351	0					
ANR	42465	ArgumentList	0		42351	1					
ANR	42466	Argument	0		42351	0					
ANR	42467	PrimaryExpression	0		42351	0					
ANR	42468	Argument	0		42351	1					
ANR	42469	PrimaryExpression	0		42351	0					
ANR	42470	Argument	pix		42351	1					
ANR	42471	Identifier	pix		42351	0					
ANR	42472	ExpressionStatement	m_shadowPixmaps << tempPix	154:8:4033:4059	42351	5	True				
ANR	42473	ShiftExpression	m_shadowPixmaps << tempPix		42351	0		<<			
ANR	42474	Identifier	m_shadowPixmaps		42351	0					
ANR	42475	Identifier	tempPix		42351	1					
ANR	42476	ExpressionStatement	m_managePixmaps = true	155:8:4069:4091	42351	6	True				
ANR	42477	AssignmentExpression	m_managePixmaps = true		42351	0		=			
ANR	42478	Identifier	m_managePixmaps		42351	0					
ANR	42479	Identifier	true		42351	1					
ANR	42480	ElseStatement	else		42351	0					
ANR	42481	CompoundStatement		12:11:489:489	42351	0					
ANR	42482	ExpressionStatement	m_shadowPixmaps << pix	157:8:4114:4136	42351	0	True				
ANR	42483	ShiftExpression	m_shadowPixmaps << pix		42351	0		<<			
ANR	42484	Identifier	m_shadowPixmaps		42351	0					
ANR	42485	Identifier	pix		42351	1					
ANR	42486	ReturnType	void		42351	1					
ANR	42487	Identifier	Shadows :: Private :: initPixmap		42351	2					
ANR	42488	ParameterList	const QString & element		42351	3					
ANR	42489	Parameter	const QString & element	144:34:3590:3611	42351	0	True				
ANR	42490	ParameterType	const QString &		42351	0					
ANR	42491	Identifier	element		42351	1					
ANR	42492	CFGEntryNode	ENTRY		42351		True				
ANR	42493	CFGExitNode	EXIT		42351		True				
ANR	42494	Symbol	pix . isNull		42351						
ANR	42495	Symbol	QPixmap :: fromX11Pixmap		42351						
ANR	42496	Symbol	QPixmap :: ExplicitlyShared		42351						
ANR	42497	Symbol	m_managePixmaps		42351						
ANR	42498	Symbol	q -> pixmap		42351						
ANR	42499	Symbol	Qt :: transparent		42351						
ANR	42500	Symbol	tempPix		42351						
ANR	42501	Symbol	pix . width		42351						
ANR	42502	Symbol	pix . height		42351						
ANR	42503	Symbol	QPoint		42351						
ANR	42504	Symbol	QX11Info :: appRootWindow		42351						
ANR	42505	Symbol	xPix		42351						
ANR	42506	Symbol	p		42351						
ANR	42507	Symbol	q		42351						
ANR	42508	Symbol	QX11Info :: display		42351						
ANR	42509	Symbol	XCreatePixmap		42351						
ANR	42510	Symbol	true		42351						
ANR	42511	Symbol	* q		42351						
ANR	42512	Symbol	pix . handle		42351						
ANR	42513	Symbol	pix		42351						
ANR	42514	Symbol	element		42351						
ANR	42515	Function	Shadows :: Private :: initEmptyPixmap	162:0:4154:4490							
ANR	42516	FunctionDef	Shadows :: Private :: initEmptyPixmap (const QSize & size)		42515	0					
ANR	42517	CompoundStatement		163:0:4215:4490	42515	0					
ANR	42518	IdentifierDeclStatement	"Pixmap emptyXPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 ) ;"	164:4:4221:4334	42515	0	True				
ANR	42519	IdentifierDecl	"emptyXPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 )"		42515	0					
ANR	42520	IdentifierDeclType	Pixmap		42515	0					
ANR	42521	Identifier	emptyXPix		42515	1					
ANR	42522	AssignmentExpression	"emptyXPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 )"		42515	2		=			
ANR	42523	Identifier	emptyXPix		42515	0					
ANR	42524	CallExpression	"XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 )"		42515	1					
ANR	42525	Callee	XCreatePixmap		42515	0					
ANR	42526	Identifier	XCreatePixmap		42515	0					
ANR	42527	ArgumentList	QX11Info :: display ( )		42515	1					
ANR	42528	Argument	QX11Info :: display ( )		42515	0					
ANR	42529	CallExpression	QX11Info :: display ( )		42515	0					
ANR	42530	Callee	QX11Info :: display		42515	0					
ANR	42531	Identifier	QX11Info :: display		42515	0					
ANR	42532	ArgumentList			42515	1					
ANR	42533	Argument	QX11Info :: appRootWindow ( )		42515	1					
ANR	42534	CallExpression	QX11Info :: appRootWindow ( )		42515	0					
ANR	42535	Callee	QX11Info :: appRootWindow		42515	0					
ANR	42536	Identifier	QX11Info :: appRootWindow		42515	0					
ANR	42537	ArgumentList			42515	1					
ANR	42538	Argument	size . width ( )		42515	2					
ANR	42539	CallExpression	size . width ( )		42515	0					
ANR	42540	Callee	size . width		42515	0					
ANR	42541	MemberAccess	size . width		42515	0					
ANR	42542	Identifier	size		42515	0					
ANR	42543	Identifier	width		42515	1					
ANR	42544	ArgumentList			42515	1					
ANR	42545	Argument	size . height ( )		42515	3					
ANR	42546	CallExpression	size . height ( )		42515	0					
ANR	42547	Callee	size . height		42515	0					
ANR	42548	MemberAccess	size . height		42515	0					
ANR	42549	Identifier	size		42515	0					
ANR	42550	Identifier	height		42515	1					
ANR	42551	ArgumentList			42515	1					
ANR	42552	Argument	32		42515	4					
ANR	42553	PrimaryExpression	32		42515	0					
ANR	42554	IdentifierDeclStatement	"QPixmap tempEmptyPix = QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared ) ;"	165:4:4340:4423	42515	1	True				
ANR	42555	IdentifierDecl	"tempEmptyPix = QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared )"		42515	0					
ANR	42556	IdentifierDeclType	QPixmap		42515	0					
ANR	42557	Identifier	tempEmptyPix		42515	1					
ANR	42558	AssignmentExpression	"tempEmptyPix = QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared )"		42515	2		=			
ANR	42559	Identifier	tempEmptyPix		42515	0					
ANR	42560	CallExpression	"QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared )"		42515	1					
ANR	42561	Callee	QPixmap :: fromX11Pixmap		42515	0					
ANR	42562	Identifier	QPixmap :: fromX11Pixmap		42515	0					
ANR	42563	ArgumentList	emptyXPix		42515	1					
ANR	42564	Argument	emptyXPix		42515	0					
ANR	42565	Identifier	emptyXPix		42515	0					
ANR	42566	Argument	QPixmap :: ExplicitlyShared		42515	1					
ANR	42567	Identifier	QPixmap :: ExplicitlyShared		42515	0					
ANR	42568	ExpressionStatement	tempEmptyPix . fill ( Qt :: transparent )	166:4:4429:4463	42515	2	True				
ANR	42569	CallExpression	tempEmptyPix . fill ( Qt :: transparent )		42515	0					
ANR	42570	Callee	tempEmptyPix . fill		42515	0					
ANR	42571	MemberAccess	tempEmptyPix . fill		42515	0					
ANR	42572	Identifier	tempEmptyPix		42515	0					
ANR	42573	Identifier	fill		42515	1					
ANR	42574	ArgumentList	Qt :: transparent		42515	1					
ANR	42575	Argument	Qt :: transparent		42515	0					
ANR	42576	Identifier	Qt :: transparent		42515	0					
ANR	42577	ReturnStatement	return tempEmptyPix ;	167:4:4469:4488	42515	3	True				
ANR	42578	Identifier	tempEmptyPix		42515	0					
ANR	42579	ReturnType	QPixmap		42515	1					
ANR	42580	Identifier	Shadows :: Private :: initEmptyPixmap		42515	2					
ANR	42581	ParameterList	const QSize & size		42515	3					
ANR	42582	Parameter	const QSize & size	162:42:4196:4212	42515	0	True				
ANR	42583	ParameterType	const QSize &		42515	0					
ANR	42584	Identifier	size		42515	1					
ANR	42585	CFGEntryNode	ENTRY		42515		True				
ANR	42586	CFGExitNode	EXIT		42515		True				
ANR	42587	Symbol	QX11Info :: display		42515						
ANR	42588	Symbol	size . width		42515						
ANR	42589	Symbol	QPixmap :: fromX11Pixmap		42515						
ANR	42590	Symbol	size		42515						
ANR	42591	Symbol	QPixmap :: ExplicitlyShared		42515						
ANR	42592	Symbol	tempEmptyPix		42515						
ANR	42593	Symbol	XCreatePixmap		42515						
ANR	42594	Symbol	emptyXPix		42515						
ANR	42595	Symbol	Qt :: transparent		42515						
ANR	42596	Symbol	size . height		42515						
ANR	42597	Symbol	QX11Info :: appRootWindow		42515						
ANR	42598	Function	Shadows :: Private :: setupPixmaps	170:0:4493:5457							
ANR	42599	FunctionDef	Shadows :: Private :: setupPixmaps ()		42598	0					
ANR	42600	CompoundStatement		171:0:4531:5457	42598	0					
ANR	42601	ExpressionStatement	clearPixmaps ( )	172:4:4537:4551	42598	0	True				
ANR	42602	CallExpression	clearPixmaps ( )		42598	0					
ANR	42603	Callee	clearPixmaps		42598	0					
ANR	42604	Identifier	clearPixmaps		42598	0					
ANR	42605	ArgumentList			42598	1					
ANR	42606	ExpressionStatement	"initPixmap ( ""shadow-top"" )"	173:4:4557:4581	42598	1	True				
ANR	42607	CallExpression	"initPixmap ( ""shadow-top"" )"		42598	0					
ANR	42608	Callee	initPixmap		42598	0					
ANR	42609	Identifier	initPixmap		42598	0					
ANR	42610	ArgumentList	"""shadow-top"""		42598	1					
ANR	42611	Argument	"""shadow-top"""		42598	0					
ANR	42612	PrimaryExpression	"""shadow-top"""		42598	0					
ANR	42613	ExpressionStatement	"initPixmap ( ""shadow-topright"" )"	174:4:4587:4616	42598	2	True				
ANR	42614	CallExpression	"initPixmap ( ""shadow-topright"" )"		42598	0					
ANR	42615	Callee	initPixmap		42598	0					
ANR	42616	Identifier	initPixmap		42598	0					
ANR	42617	ArgumentList	"""shadow-topright"""		42598	1					
ANR	42618	Argument	"""shadow-topright"""		42598	0					
ANR	42619	PrimaryExpression	"""shadow-topright"""		42598	0					
ANR	42620	ExpressionStatement	"initPixmap ( ""shadow-right"" )"	175:4:4622:4648	42598	3	True				
ANR	42621	CallExpression	"initPixmap ( ""shadow-right"" )"		42598	0					
ANR	42622	Callee	initPixmap		42598	0					
ANR	42623	Identifier	initPixmap		42598	0					
ANR	42624	ArgumentList	"""shadow-right"""		42598	1					
ANR	42625	Argument	"""shadow-right"""		42598	0					
ANR	42626	PrimaryExpression	"""shadow-right"""		42598	0					
ANR	42627	ExpressionStatement	"initPixmap ( ""shadow-bottomright"" )"	176:4:4654:4686	42598	4	True				
ANR	42628	CallExpression	"initPixmap ( ""shadow-bottomright"" )"		42598	0					
ANR	42629	Callee	initPixmap		42598	0					
ANR	42630	Identifier	initPixmap		42598	0					
ANR	42631	ArgumentList	"""shadow-bottomright"""		42598	1					
ANR	42632	Argument	"""shadow-bottomright"""		42598	0					
ANR	42633	PrimaryExpression	"""shadow-bottomright"""		42598	0					
ANR	42634	ExpressionStatement	"initPixmap ( ""shadow-bottom"" )"	177:4:4692:4719	42598	5	True				
ANR	42635	CallExpression	"initPixmap ( ""shadow-bottom"" )"		42598	0					
ANR	42636	Callee	initPixmap		42598	0					
ANR	42637	Identifier	initPixmap		42598	0					
ANR	42638	ArgumentList	"""shadow-bottom"""		42598	1					
ANR	42639	Argument	"""shadow-bottom"""		42598	0					
ANR	42640	PrimaryExpression	"""shadow-bottom"""		42598	0					
ANR	42641	ExpressionStatement	"initPixmap ( ""shadow-bottomleft"" )"	178:4:4725:4756	42598	6	True				
ANR	42642	CallExpression	"initPixmap ( ""shadow-bottomleft"" )"		42598	0					
ANR	42643	Callee	initPixmap		42598	0					
ANR	42644	Identifier	initPixmap		42598	0					
ANR	42645	ArgumentList	"""shadow-bottomleft"""		42598	1					
ANR	42646	Argument	"""shadow-bottomleft"""		42598	0					
ANR	42647	PrimaryExpression	"""shadow-bottomleft"""		42598	0					
ANR	42648	ExpressionStatement	"initPixmap ( ""shadow-left"" )"	179:4:4762:4787	42598	7	True				
ANR	42649	CallExpression	"initPixmap ( ""shadow-left"" )"		42598	0					
ANR	42650	Callee	initPixmap		42598	0					
ANR	42651	Identifier	initPixmap		42598	0					
ANR	42652	ArgumentList	"""shadow-left"""		42598	1					
ANR	42653	Argument	"""shadow-left"""		42598	0					
ANR	42654	PrimaryExpression	"""shadow-left"""		42598	0					
ANR	42655	ExpressionStatement	"initPixmap ( ""shadow-topleft"" )"	180:4:4793:4821	42598	8	True				
ANR	42656	CallExpression	"initPixmap ( ""shadow-topleft"" )"		42598	0					
ANR	42657	Callee	initPixmap		42598	0					
ANR	42658	Identifier	initPixmap		42598	0					
ANR	42659	ArgumentList	"""shadow-topleft"""		42598	1					
ANR	42660	Argument	"""shadow-topleft"""		42598	0					
ANR	42661	PrimaryExpression	"""shadow-topleft"""		42598	0					
ANR	42662	ExpressionStatement	"m_emptyCornerPix = initEmptyPixmap ( QSize ( 1 , 1 ) )"	182:4:4828:4874	42598	9	True				
ANR	42663	AssignmentExpression	"m_emptyCornerPix = initEmptyPixmap ( QSize ( 1 , 1 ) )"		42598	0		=			
ANR	42664	Identifier	m_emptyCornerPix		42598	0					
ANR	42665	CallExpression	"initEmptyPixmap ( QSize ( 1 , 1 ) )"		42598	1					
ANR	42666	Callee	initEmptyPixmap		42598	0					
ANR	42667	Identifier	initEmptyPixmap		42598	0					
ANR	42668	ArgumentList	"QSize ( 1 , 1 )"		42598	1					
ANR	42669	Argument	"QSize ( 1 , 1 )"		42598	0					
ANR	42670	CallExpression	"QSize ( 1 , 1 )"		42598	0					
ANR	42671	Callee	QSize		42598	0					
ANR	42672	Identifier	QSize		42598	0					
ANR	42673	ArgumentList	1		42598	1					
ANR	42674	Argument	1		42598	0					
ANR	42675	PrimaryExpression	1		42598	0					
ANR	42676	Argument	1		42598	1					
ANR	42677	PrimaryExpression	1		42598	0					
ANR	42678	ExpressionStatement	"m_emptyCornerLeftPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 ) )"	183:4:4880:4970	42598	10	True				
ANR	42679	AssignmentExpression	"m_emptyCornerLeftPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 ) )"		42598	0		=			
ANR	42680	Identifier	m_emptyCornerLeftPix		42598	0					
ANR	42681	CallExpression	"initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 ) )"		42598	1					
ANR	42682	Callee	initEmptyPixmap		42598	0					
ANR	42683	Identifier	initEmptyPixmap		42598	0					
ANR	42684	ArgumentList	"QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 )"		42598	1					
ANR	42685	Argument	"QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 )"		42598	0					
ANR	42686	CallExpression	"QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 )"		42598	0					
ANR	42687	Callee	QSize		42598	0					
ANR	42688	Identifier	QSize		42598	0					
ANR	42689	ArgumentList	"q -> elementSize ( ""shadow-topleft"" ) . width ( )"		42598	1					
ANR	42690	Argument	"q -> elementSize ( ""shadow-topleft"" ) . width ( )"		42598	0					
ANR	42691	CallExpression	"q -> elementSize ( ""shadow-topleft"" ) . width ( )"		42598	0					
ANR	42692	Callee	"q -> elementSize ( ""shadow-topleft"" ) . width"		42598	0					
ANR	42693	MemberAccess	"q -> elementSize ( ""shadow-topleft"" ) . width"		42598	0					
ANR	42694	CallExpression	"q -> elementSize ( ""shadow-topleft"" )"		42598	0					
ANR	42695	Callee	q -> elementSize		42598	0					
ANR	42696	PtrMemberAccess	q -> elementSize		42598	0					
ANR	42697	Identifier	q		42598	0					
ANR	42698	Identifier	elementSize		42598	1					
ANR	42699	ArgumentList	"""shadow-topleft"""		42598	1					
ANR	42700	Argument	"""shadow-topleft"""		42598	0					
ANR	42701	PrimaryExpression	"""shadow-topleft"""		42598	0					
ANR	42702	Identifier	width		42598	1					
ANR	42703	ArgumentList			42598	1					
ANR	42704	Argument	1		42598	1					
ANR	42705	PrimaryExpression	1		42598	0					
ANR	42706	ExpressionStatement	"m_emptyCornerTopPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) ) )"	184:4:4976:5066	42598	11	True				
ANR	42707	AssignmentExpression	"m_emptyCornerTopPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) ) )"		42598	0		=			
ANR	42708	Identifier	m_emptyCornerTopPix		42598	0					
ANR	42709	CallExpression	"initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) ) )"		42598	1					
ANR	42710	Callee	initEmptyPixmap		42598	0					
ANR	42711	Identifier	initEmptyPixmap		42598	0					
ANR	42712	ArgumentList	"QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) )"		42598	1					
ANR	42713	Argument	"QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) )"		42598	0					
ANR	42714	CallExpression	"QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) )"		42598	0					
ANR	42715	Callee	QSize		42598	0					
ANR	42716	Identifier	QSize		42598	0					
ANR	42717	ArgumentList	1		42598	1					
ANR	42718	Argument	1		42598	0					
ANR	42719	PrimaryExpression	1		42598	0					
ANR	42720	Argument	"q -> elementSize ( ""shadow-topleft"" ) . height ( )"		42598	1					
ANR	42721	CallExpression	"q -> elementSize ( ""shadow-topleft"" ) . height ( )"		42598	0					
ANR	42722	Callee	"q -> elementSize ( ""shadow-topleft"" ) . height"		42598	0					
ANR	42723	MemberAccess	"q -> elementSize ( ""shadow-topleft"" ) . height"		42598	0					
ANR	42724	CallExpression	"q -> elementSize ( ""shadow-topleft"" )"		42598	0					
ANR	42725	Callee	q -> elementSize		42598	0					
ANR	42726	PtrMemberAccess	q -> elementSize		42598	0					
ANR	42727	Identifier	q		42598	0					
ANR	42728	Identifier	elementSize		42598	1					
ANR	42729	ArgumentList	"""shadow-topleft"""		42598	1					
ANR	42730	Argument	"""shadow-topleft"""		42598	0					
ANR	42731	PrimaryExpression	"""shadow-topleft"""		42598	0					
ANR	42732	Identifier	height		42598	1					
ANR	42733	ArgumentList			42598	1					
ANR	42734	ExpressionStatement	"m_emptyCornerRightPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 ) )"	185:4:5072:5167	42598	12	True				
ANR	42735	AssignmentExpression	"m_emptyCornerRightPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 ) )"		42598	0		=			
ANR	42736	Identifier	m_emptyCornerRightPix		42598	0					
ANR	42737	CallExpression	"initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 ) )"		42598	1					
ANR	42738	Callee	initEmptyPixmap		42598	0					
ANR	42739	Identifier	initEmptyPixmap		42598	0					
ANR	42740	ArgumentList	"QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 )"		42598	1					
ANR	42741	Argument	"QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 )"		42598	0					
ANR	42742	CallExpression	"QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 )"		42598	0					
ANR	42743	Callee	QSize		42598	0					
ANR	42744	Identifier	QSize		42598	0					
ANR	42745	ArgumentList	"q -> elementSize ( ""shadow-bottomright"" ) . width ( )"		42598	1					
ANR	42746	Argument	"q -> elementSize ( ""shadow-bottomright"" ) . width ( )"		42598	0					
ANR	42747	CallExpression	"q -> elementSize ( ""shadow-bottomright"" ) . width ( )"		42598	0					
ANR	42748	Callee	"q -> elementSize ( ""shadow-bottomright"" ) . width"		42598	0					
ANR	42749	MemberAccess	"q -> elementSize ( ""shadow-bottomright"" ) . width"		42598	0					
ANR	42750	CallExpression	"q -> elementSize ( ""shadow-bottomright"" )"		42598	0					
ANR	42751	Callee	q -> elementSize		42598	0					
ANR	42752	PtrMemberAccess	q -> elementSize		42598	0					
ANR	42753	Identifier	q		42598	0					
ANR	42754	Identifier	elementSize		42598	1					
ANR	42755	ArgumentList	"""shadow-bottomright"""		42598	1					
ANR	42756	Argument	"""shadow-bottomright"""		42598	0					
ANR	42757	PrimaryExpression	"""shadow-bottomright"""		42598	0					
ANR	42758	Identifier	width		42598	1					
ANR	42759	ArgumentList			42598	1					
ANR	42760	Argument	1		42598	1					
ANR	42761	PrimaryExpression	1		42598	0					
ANR	42762	ExpressionStatement	"m_emptyCornerBottomPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) ) )"	186:4:5173:5270	42598	13	True				
ANR	42763	AssignmentExpression	"m_emptyCornerBottomPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) ) )"		42598	0		=			
ANR	42764	Identifier	m_emptyCornerBottomPix		42598	0					
ANR	42765	CallExpression	"initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) ) )"		42598	1					
ANR	42766	Callee	initEmptyPixmap		42598	0					
ANR	42767	Identifier	initEmptyPixmap		42598	0					
ANR	42768	ArgumentList	"QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) )"		42598	1					
ANR	42769	Argument	"QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) )"		42598	0					
ANR	42770	CallExpression	"QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) )"		42598	0					
ANR	42771	Callee	QSize		42598	0					
ANR	42772	Identifier	QSize		42598	0					
ANR	42773	ArgumentList	1		42598	1					
ANR	42774	Argument	1		42598	0					
ANR	42775	PrimaryExpression	1		42598	0					
ANR	42776	Argument	"q -> elementSize ( ""shadow-bottomright"" ) . height ( )"		42598	1					
ANR	42777	CallExpression	"q -> elementSize ( ""shadow-bottomright"" ) . height ( )"		42598	0					
ANR	42778	Callee	"q -> elementSize ( ""shadow-bottomright"" ) . height"		42598	0					
ANR	42779	MemberAccess	"q -> elementSize ( ""shadow-bottomright"" ) . height"		42598	0					
ANR	42780	CallExpression	"q -> elementSize ( ""shadow-bottomright"" )"		42598	0					
ANR	42781	Callee	q -> elementSize		42598	0					
ANR	42782	PtrMemberAccess	q -> elementSize		42598	0					
ANR	42783	Identifier	q		42598	0					
ANR	42784	Identifier	elementSize		42598	1					
ANR	42785	ArgumentList	"""shadow-bottomright"""		42598	1					
ANR	42786	Argument	"""shadow-bottomright"""		42598	0					
ANR	42787	PrimaryExpression	"""shadow-bottomright"""		42598	0					
ANR	42788	Identifier	height		42598	1					
ANR	42789	ArgumentList			42598	1					
ANR	42790	ExpressionStatement	"m_emptyVerticalPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) ) )"	187:4:5276:5362	42598	14	True				
ANR	42791	AssignmentExpression	"m_emptyVerticalPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) ) )"		42598	0		=			
ANR	42792	Identifier	m_emptyVerticalPix		42598	0					
ANR	42793	CallExpression	"initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) ) )"		42598	1					
ANR	42794	Callee	initEmptyPixmap		42598	0					
ANR	42795	Identifier	initEmptyPixmap		42598	0					
ANR	42796	ArgumentList	"QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) )"		42598	1					
ANR	42797	Argument	"QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) )"		42598	0					
ANR	42798	CallExpression	"QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) )"		42598	0					
ANR	42799	Callee	QSize		42598	0					
ANR	42800	Identifier	QSize		42598	0					
ANR	42801	ArgumentList	1		42598	1					
ANR	42802	Argument	1		42598	0					
ANR	42803	PrimaryExpression	1		42598	0					
ANR	42804	Argument	"q -> elementSize ( ""shadow-left"" ) . height ( )"		42598	1					
ANR	42805	CallExpression	"q -> elementSize ( ""shadow-left"" ) . height ( )"		42598	0					
ANR	42806	Callee	"q -> elementSize ( ""shadow-left"" ) . height"		42598	0					
ANR	42807	MemberAccess	"q -> elementSize ( ""shadow-left"" ) . height"		42598	0					
ANR	42808	CallExpression	"q -> elementSize ( ""shadow-left"" )"		42598	0					
ANR	42809	Callee	q -> elementSize		42598	0					
ANR	42810	PtrMemberAccess	q -> elementSize		42598	0					
ANR	42811	Identifier	q		42598	0					
ANR	42812	Identifier	elementSize		42598	1					
ANR	42813	ArgumentList	"""shadow-left"""		42598	1					
ANR	42814	Argument	"""shadow-left"""		42598	0					
ANR	42815	PrimaryExpression	"""shadow-left"""		42598	0					
ANR	42816	Identifier	height		42598	1					
ANR	42817	ArgumentList			42598	1					
ANR	42818	ExpressionStatement	"m_emptyHorizontalPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 ) )"	188:4:5368:5454	42598	15	True				
ANR	42819	AssignmentExpression	"m_emptyHorizontalPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 ) )"		42598	0		=			
ANR	42820	Identifier	m_emptyHorizontalPix		42598	0					
ANR	42821	CallExpression	"initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 ) )"		42598	1					
ANR	42822	Callee	initEmptyPixmap		42598	0					
ANR	42823	Identifier	initEmptyPixmap		42598	0					
ANR	42824	ArgumentList	"QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 )"		42598	1					
ANR	42825	Argument	"QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 )"		42598	0					
ANR	42826	CallExpression	"QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 )"		42598	0					
ANR	42827	Callee	QSize		42598	0					
ANR	42828	Identifier	QSize		42598	0					
ANR	42829	ArgumentList	"q -> elementSize ( ""shadow-top"" ) . width ( )"		42598	1					
ANR	42830	Argument	"q -> elementSize ( ""shadow-top"" ) . width ( )"		42598	0					
ANR	42831	CallExpression	"q -> elementSize ( ""shadow-top"" ) . width ( )"		42598	0					
ANR	42832	Callee	"q -> elementSize ( ""shadow-top"" ) . width"		42598	0					
ANR	42833	MemberAccess	"q -> elementSize ( ""shadow-top"" ) . width"		42598	0					
ANR	42834	CallExpression	"q -> elementSize ( ""shadow-top"" )"		42598	0					
ANR	42835	Callee	q -> elementSize		42598	0					
ANR	42836	PtrMemberAccess	q -> elementSize		42598	0					
ANR	42837	Identifier	q		42598	0					
ANR	42838	Identifier	elementSize		42598	1					
ANR	42839	ArgumentList	"""shadow-top"""		42598	1					
ANR	42840	Argument	"""shadow-top"""		42598	0					
ANR	42841	PrimaryExpression	"""shadow-top"""		42598	0					
ANR	42842	Identifier	width		42598	1					
ANR	42843	ArgumentList			42598	1					
ANR	42844	Argument	1		42598	1					
ANR	42845	PrimaryExpression	1		42598	0					
ANR	42846	ReturnType	void		42598	1					
ANR	42847	Identifier	Shadows :: Private :: setupPixmaps		42598	2					
ANR	42848	ParameterList			42598	3					
ANR	42849	CFGEntryNode	ENTRY		42598		True				
ANR	42850	CFGExitNode	EXIT		42598		True				
ANR	42851	Symbol	m_emptyCornerBottomPix		42598						
ANR	42852	Symbol	m_emptyCornerPix		42598						
ANR	42853	Symbol	initEmptyPixmap		42598						
ANR	42854	Symbol	"q -> elementSize ( ""shadow-topleft"" ) . width"		42598						
ANR	42855	Symbol	m_emptyCornerRightPix		42598						
ANR	42856	Symbol	"q -> elementSize ( ""shadow-bottomright"" ) . height"		42598						
ANR	42857	Symbol	"q -> elementSize ( ""shadow-top"" ) . width"		42598						
ANR	42858	Symbol	QSize		42598						
ANR	42859	Symbol	"q -> elementSize ( ""shadow-left"" ) . height"		42598						
ANR	42860	Symbol	"q -> elementSize ( ""shadow-topleft"" ) . height"		42598						
ANR	42861	Symbol	q		42598						
ANR	42862	Symbol	m_emptyCornerLeftPix		42598						
ANR	42863	Symbol	m_emptyHorizontalPix		42598						
ANR	42864	Symbol	m_emptyCornerTopPix		42598						
ANR	42865	Symbol	q -> elementSize		42598						
ANR	42866	Symbol	"q -> elementSize ( ""shadow-bottomright"" ) . width"		42598						
ANR	42867	Symbol	m_emptyVerticalPix		42598						
ANR	42868	Symbol	* q		42598						
ANR	42869	Function	Shadows :: Private :: setupData	193:0:5461:9981							
ANR	42870	FunctionDef	Shadows :: Private :: setupData (Plasma :: FrameSvg :: EnabledBorders enabledBorders)		42869	0					
ANR	42871	CompoundStatement		194:0:5543:9981	42869	0					
ANR	42872	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		42869	0					
ANR	42873	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	197:8:5586:5629	42869	0	True				
ANR	42874	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		42869	0		&			
ANR	42875	Identifier	enabledBorders		42869	0					
ANR	42876	Identifier	Plasma :: FrameSvg :: TopBorder		42869	1					
ANR	42877	CompoundStatement		4:54:88:88	42869	1					
ANR	42878	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 0 ] . handle ( )	198:8:5642:5693	42869	0	True				
ANR	42879	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 0 ] . handle ( )		42869	0		<<			
ANR	42880	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42881	Identifier	data		42869	0					
ANR	42882	Identifier	enabledBorders		42869	1					
ANR	42883	CallExpression	m_shadowPixmaps [ 0 ] . handle ( )		42869	1					
ANR	42884	Callee	m_shadowPixmaps [ 0 ] . handle		42869	0					
ANR	42885	MemberAccess	m_shadowPixmaps [ 0 ] . handle		42869	0					
ANR	42886	ArrayIndexing	m_shadowPixmaps [ 0 ]		42869	0					
ANR	42887	Identifier	m_shadowPixmaps		42869	0					
ANR	42888	PrimaryExpression	0		42869	1					
ANR	42889	Identifier	handle		42869	1					
ANR	42890	ArgumentList			42869	1					
ANR	42891	ElseStatement	else		42869	0					
ANR	42892	CompoundStatement		6:11:162:162	42869	0					
ANR	42893	ExpressionStatement	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )	200:8:5716:5769	42869	0	True				
ANR	42894	ShiftExpression	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )		42869	0		<<			
ANR	42895	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42896	Identifier	data		42869	0					
ANR	42897	Identifier	enabledBorders		42869	1					
ANR	42898	CallExpression	m_emptyHorizontalPix . handle ( )		42869	1					
ANR	42899	Callee	m_emptyHorizontalPix . handle		42869	0					
ANR	42900	MemberAccess	m_emptyHorizontalPix . handle		42869	0					
ANR	42901	Identifier	m_emptyHorizontalPix		42869	0					
ANR	42902	Identifier	handle		42869	1					
ANR	42903	ArgumentList			42869	1					
ANR	42904	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder )		42869	1					
ANR	42905	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder	204:8:5808:5909	42869	0	True				
ANR	42906	AndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	0		&&			
ANR	42907	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		42869	0		&			
ANR	42908	Identifier	enabledBorders		42869	0					
ANR	42909	Identifier	Plasma :: FrameSvg :: TopBorder		42869	1					
ANR	42910	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	1		&			
ANR	42911	Identifier	enabledBorders		42869	0					
ANR	42912	Identifier	Plasma :: FrameSvg :: RightBorder		42869	1					
ANR	42913	CompoundStatement		12:56:368:368	42869	1					
ANR	42914	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 1 ] . handle ( )	206:8:5922:5973	42869	0	True				
ANR	42915	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 1 ] . handle ( )		42869	0		<<			
ANR	42916	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42917	Identifier	data		42869	0					
ANR	42918	Identifier	enabledBorders		42869	1					
ANR	42919	CallExpression	m_shadowPixmaps [ 1 ] . handle ( )		42869	1					
ANR	42920	Callee	m_shadowPixmaps [ 1 ] . handle		42869	0					
ANR	42921	MemberAccess	m_shadowPixmaps [ 1 ] . handle		42869	0					
ANR	42922	ArrayIndexing	m_shadowPixmaps [ 1 ]		42869	0					
ANR	42923	Identifier	m_shadowPixmaps		42869	0					
ANR	42924	PrimaryExpression	1		42869	1					
ANR	42925	Identifier	handle		42869	1					
ANR	42926	ArgumentList			42869	1					
ANR	42927	ElseStatement	else		42869	0					
ANR	42928	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		42869	0					
ANR	42929	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	207:15:5990:6033	42869	0	True				
ANR	42930	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		42869	0		&			
ANR	42931	Identifier	enabledBorders		42869	0					
ANR	42932	Identifier	Plasma :: FrameSvg :: TopBorder		42869	1					
ANR	42933	CompoundStatement		14:61:492:492	42869	1					
ANR	42934	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )	208:8:6046:6098	42869	0	True				
ANR	42935	ShiftExpression	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )		42869	0		<<			
ANR	42936	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42937	Identifier	data		42869	0					
ANR	42938	Identifier	enabledBorders		42869	1					
ANR	42939	CallExpression	m_emptyCornerTopPix . handle ( )		42869	1					
ANR	42940	Callee	m_emptyCornerTopPix . handle		42869	0					
ANR	42941	MemberAccess	m_emptyCornerTopPix . handle		42869	0					
ANR	42942	Identifier	m_emptyCornerTopPix		42869	0					
ANR	42943	Identifier	handle		42869	1					
ANR	42944	ArgumentList			42869	1					
ANR	42945	ElseStatement	else		42869	0					
ANR	42946	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		42869	0					
ANR	42947	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	209:15:6115:6160	42869	0	True				
ANR	42948	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	0		&			
ANR	42949	Identifier	enabledBorders		42869	0					
ANR	42950	Identifier	Plasma :: FrameSvg :: RightBorder		42869	1					
ANR	42951	CompoundStatement		16:63:619:619	42869	1					
ANR	42952	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )	210:8:6173:6227	42869	0	True				
ANR	42953	ShiftExpression	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )		42869	0		<<			
ANR	42954	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42955	Identifier	data		42869	0					
ANR	42956	Identifier	enabledBorders		42869	1					
ANR	42957	CallExpression	m_emptyCornerRightPix . handle ( )		42869	1					
ANR	42958	Callee	m_emptyCornerRightPix . handle		42869	0					
ANR	42959	MemberAccess	m_emptyCornerRightPix . handle		42869	0					
ANR	42960	Identifier	m_emptyCornerRightPix		42869	0					
ANR	42961	Identifier	handle		42869	1					
ANR	42962	ArgumentList			42869	1					
ANR	42963	ElseStatement	else		42869	0					
ANR	42964	CompoundStatement		18:11:696:696	42869	0					
ANR	42965	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	212:8:6250:6299	42869	0	True				
ANR	42966	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		42869	0		<<			
ANR	42967	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42968	Identifier	data		42869	0					
ANR	42969	Identifier	enabledBorders		42869	1					
ANR	42970	CallExpression	m_emptyCornerPix . handle ( )		42869	1					
ANR	42971	Callee	m_emptyCornerPix . handle		42869	0					
ANR	42972	MemberAccess	m_emptyCornerPix . handle		42869	0					
ANR	42973	Identifier	m_emptyCornerPix		42869	0					
ANR	42974	Identifier	handle		42869	1					
ANR	42975	ArgumentList			42869	1					
ANR	42976	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		42869	2					
ANR	42977	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	216:8:6335:6380	42869	0	True				
ANR	42978	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	0		&			
ANR	42979	Identifier	enabledBorders		42869	0					
ANR	42980	Identifier	Plasma :: FrameSvg :: RightBorder		42869	1					
ANR	42981	CompoundStatement		23:56:839:839	42869	1					
ANR	42982	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 2 ] . handle ( )	217:8:6393:6444	42869	0	True				
ANR	42983	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 2 ] . handle ( )		42869	0		<<			
ANR	42984	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	42985	Identifier	data		42869	0					
ANR	42986	Identifier	enabledBorders		42869	1					
ANR	42987	CallExpression	m_shadowPixmaps [ 2 ] . handle ( )		42869	1					
ANR	42988	Callee	m_shadowPixmaps [ 2 ] . handle		42869	0					
ANR	42989	MemberAccess	m_shadowPixmaps [ 2 ] . handle		42869	0					
ANR	42990	ArrayIndexing	m_shadowPixmaps [ 2 ]		42869	0					
ANR	42991	Identifier	m_shadowPixmaps		42869	0					
ANR	42992	PrimaryExpression	2		42869	1					
ANR	42993	Identifier	handle		42869	1					
ANR	42994	ArgumentList			42869	1					
ANR	42995	ElseStatement	else		42869	0					
ANR	42996	CompoundStatement		25:11:913:913	42869	0					
ANR	42997	ExpressionStatement	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )	219:8:6467:6518	42869	0	True				
ANR	42998	ShiftExpression	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )		42869	0		<<			
ANR	42999	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43000	Identifier	data		42869	0					
ANR	43001	Identifier	enabledBorders		42869	1					
ANR	43002	CallExpression	m_emptyVerticalPix . handle ( )		42869	1					
ANR	43003	Callee	m_emptyVerticalPix . handle		42869	0					
ANR	43004	MemberAccess	m_emptyVerticalPix . handle		42869	0					
ANR	43005	Identifier	m_emptyVerticalPix		42869	0					
ANR	43006	Identifier	handle		42869	1					
ANR	43007	ArgumentList			42869	1					
ANR	43008	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder )		42869	3					
ANR	43009	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder	223:8:6560:6664	42869	0	True				
ANR	43010	AndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	0		&&			
ANR	43011	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		42869	0		&			
ANR	43012	Identifier	enabledBorders		42869	0					
ANR	43013	Identifier	Plasma :: FrameSvg :: BottomBorder		42869	1					
ANR	43014	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	1		&			
ANR	43015	Identifier	enabledBorders		42869	0					
ANR	43016	Identifier	Plasma :: FrameSvg :: RightBorder		42869	1					
ANR	43017	CompoundStatement		31:56:1123:1123	42869	1					
ANR	43018	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 3 ] . handle ( )	225:8:6677:6728	42869	0	True				
ANR	43019	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 3 ] . handle ( )		42869	0		<<			
ANR	43020	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43021	Identifier	data		42869	0					
ANR	43022	Identifier	enabledBorders		42869	1					
ANR	43023	CallExpression	m_shadowPixmaps [ 3 ] . handle ( )		42869	1					
ANR	43024	Callee	m_shadowPixmaps [ 3 ] . handle		42869	0					
ANR	43025	MemberAccess	m_shadowPixmaps [ 3 ] . handle		42869	0					
ANR	43026	ArrayIndexing	m_shadowPixmaps [ 3 ]		42869	0					
ANR	43027	Identifier	m_shadowPixmaps		42869	0					
ANR	43028	PrimaryExpression	3		42869	1					
ANR	43029	Identifier	handle		42869	1					
ANR	43030	ArgumentList			42869	1					
ANR	43031	ElseStatement	else		42869	0					
ANR	43032	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		42869	0					
ANR	43033	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	226:15:6745:6791	42869	0	True				
ANR	43034	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		42869	0		&			
ANR	43035	Identifier	enabledBorders		42869	0					
ANR	43036	Identifier	Plasma :: FrameSvg :: BottomBorder		42869	1					
ANR	43037	CompoundStatement		33:64:1250:1250	42869	1					
ANR	43038	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )	227:8:6804:6859	42869	0	True				
ANR	43039	ShiftExpression	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )		42869	0		<<			
ANR	43040	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43041	Identifier	data		42869	0					
ANR	43042	Identifier	enabledBorders		42869	1					
ANR	43043	CallExpression	m_emptyCornerBottomPix . handle ( )		42869	1					
ANR	43044	Callee	m_emptyCornerBottomPix . handle		42869	0					
ANR	43045	MemberAccess	m_emptyCornerBottomPix . handle		42869	0					
ANR	43046	Identifier	m_emptyCornerBottomPix		42869	0					
ANR	43047	Identifier	handle		42869	1					
ANR	43048	ArgumentList			42869	1					
ANR	43049	ElseStatement	else		42869	0					
ANR	43050	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		42869	0					
ANR	43051	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	228:15:6876:6921	42869	0	True				
ANR	43052	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	0		&			
ANR	43053	Identifier	enabledBorders		42869	0					
ANR	43054	Identifier	Plasma :: FrameSvg :: RightBorder		42869	1					
ANR	43055	CompoundStatement		35:63:1380:1380	42869	1					
ANR	43056	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )	229:8:6934:6988	42869	0	True				
ANR	43057	ShiftExpression	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )		42869	0		<<			
ANR	43058	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43059	Identifier	data		42869	0					
ANR	43060	Identifier	enabledBorders		42869	1					
ANR	43061	CallExpression	m_emptyCornerRightPix . handle ( )		42869	1					
ANR	43062	Callee	m_emptyCornerRightPix . handle		42869	0					
ANR	43063	MemberAccess	m_emptyCornerRightPix . handle		42869	0					
ANR	43064	Identifier	m_emptyCornerRightPix		42869	0					
ANR	43065	Identifier	handle		42869	1					
ANR	43066	ArgumentList			42869	1					
ANR	43067	ElseStatement	else		42869	0					
ANR	43068	CompoundStatement		37:11:1457:1457	42869	0					
ANR	43069	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	231:8:7011:7060	42869	0	True				
ANR	43070	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		42869	0		<<			
ANR	43071	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43072	Identifier	data		42869	0					
ANR	43073	Identifier	enabledBorders		42869	1					
ANR	43074	CallExpression	m_emptyCornerPix . handle ( )		42869	1					
ANR	43075	Callee	m_emptyCornerPix . handle		42869	0					
ANR	43076	MemberAccess	m_emptyCornerPix . handle		42869	0					
ANR	43077	Identifier	m_emptyCornerPix		42869	0					
ANR	43078	Identifier	handle		42869	1					
ANR	43079	ArgumentList			42869	1					
ANR	43080	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		42869	4					
ANR	43081	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	235:8:7097:7143	42869	0	True				
ANR	43082	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		42869	0		&			
ANR	43083	Identifier	enabledBorders		42869	0					
ANR	43084	Identifier	Plasma :: FrameSvg :: BottomBorder		42869	1					
ANR	43085	CompoundStatement		42:57:1602:1602	42869	1					
ANR	43086	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 4 ] . handle ( )	236:8:7156:7207	42869	0	True				
ANR	43087	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 4 ] . handle ( )		42869	0		<<			
ANR	43088	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43089	Identifier	data		42869	0					
ANR	43090	Identifier	enabledBorders		42869	1					
ANR	43091	CallExpression	m_shadowPixmaps [ 4 ] . handle ( )		42869	1					
ANR	43092	Callee	m_shadowPixmaps [ 4 ] . handle		42869	0					
ANR	43093	MemberAccess	m_shadowPixmaps [ 4 ] . handle		42869	0					
ANR	43094	ArrayIndexing	m_shadowPixmaps [ 4 ]		42869	0					
ANR	43095	Identifier	m_shadowPixmaps		42869	0					
ANR	43096	PrimaryExpression	4		42869	1					
ANR	43097	Identifier	handle		42869	1					
ANR	43098	ArgumentList			42869	1					
ANR	43099	ElseStatement	else		42869	0					
ANR	43100	CompoundStatement		44:11:1676:1676	42869	0					
ANR	43101	ExpressionStatement	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )	238:8:7230:7283	42869	0	True				
ANR	43102	ShiftExpression	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )		42869	0		<<			
ANR	43103	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43104	Identifier	data		42869	0					
ANR	43105	Identifier	enabledBorders		42869	1					
ANR	43106	CallExpression	m_emptyHorizontalPix . handle ( )		42869	1					
ANR	43107	Callee	m_emptyHorizontalPix . handle		42869	0					
ANR	43108	MemberAccess	m_emptyHorizontalPix . handle		42869	0					
ANR	43109	Identifier	m_emptyHorizontalPix		42869	0					
ANR	43110	Identifier	handle		42869	1					
ANR	43111	ArgumentList			42869	1					
ANR	43112	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder )		42869	5					
ANR	43113	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder	242:8:7324:7427	42869	0	True				
ANR	43114	AndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	0		&&			
ANR	43115	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		42869	0		&			
ANR	43116	Identifier	enabledBorders		42869	0					
ANR	43117	Identifier	Plasma :: FrameSvg :: BottomBorder		42869	1					
ANR	43118	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	1		&			
ANR	43119	Identifier	enabledBorders		42869	0					
ANR	43120	Identifier	Plasma :: FrameSvg :: LeftBorder		42869	1					
ANR	43121	CompoundStatement		50:55:1886:1886	42869	1					
ANR	43122	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 5 ] . handle ( )	244:8:7440:7491	42869	0	True				
ANR	43123	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 5 ] . handle ( )		42869	0		<<			
ANR	43124	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43125	Identifier	data		42869	0					
ANR	43126	Identifier	enabledBorders		42869	1					
ANR	43127	CallExpression	m_shadowPixmaps [ 5 ] . handle ( )		42869	1					
ANR	43128	Callee	m_shadowPixmaps [ 5 ] . handle		42869	0					
ANR	43129	MemberAccess	m_shadowPixmaps [ 5 ] . handle		42869	0					
ANR	43130	ArrayIndexing	m_shadowPixmaps [ 5 ]		42869	0					
ANR	43131	Identifier	m_shadowPixmaps		42869	0					
ANR	43132	PrimaryExpression	5		42869	1					
ANR	43133	Identifier	handle		42869	1					
ANR	43134	ArgumentList			42869	1					
ANR	43135	ElseStatement	else		42869	0					
ANR	43136	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		42869	0					
ANR	43137	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	245:15:7508:7554	42869	0	True				
ANR	43138	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		42869	0		&			
ANR	43139	Identifier	enabledBorders		42869	0					
ANR	43140	Identifier	Plasma :: FrameSvg :: BottomBorder		42869	1					
ANR	43141	CompoundStatement		52:64:2013:2013	42869	1					
ANR	43142	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )	246:8:7567:7622	42869	0	True				
ANR	43143	ShiftExpression	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )		42869	0		<<			
ANR	43144	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43145	Identifier	data		42869	0					
ANR	43146	Identifier	enabledBorders		42869	1					
ANR	43147	CallExpression	m_emptyCornerBottomPix . handle ( )		42869	1					
ANR	43148	Callee	m_emptyCornerBottomPix . handle		42869	0					
ANR	43149	MemberAccess	m_emptyCornerBottomPix . handle		42869	0					
ANR	43150	Identifier	m_emptyCornerBottomPix		42869	0					
ANR	43151	Identifier	handle		42869	1					
ANR	43152	ArgumentList			42869	1					
ANR	43153	ElseStatement	else		42869	0					
ANR	43154	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		42869	0					
ANR	43155	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	247:15:7639:7683	42869	0	True				
ANR	43156	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	0		&			
ANR	43157	Identifier	enabledBorders		42869	0					
ANR	43158	Identifier	Plasma :: FrameSvg :: LeftBorder		42869	1					
ANR	43159	CompoundStatement		54:62:2142:2142	42869	1					
ANR	43160	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )	248:8:7696:7749	42869	0	True				
ANR	43161	ShiftExpression	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )		42869	0		<<			
ANR	43162	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43163	Identifier	data		42869	0					
ANR	43164	Identifier	enabledBorders		42869	1					
ANR	43165	CallExpression	m_emptyCornerLeftPix . handle ( )		42869	1					
ANR	43166	Callee	m_emptyCornerLeftPix . handle		42869	0					
ANR	43167	MemberAccess	m_emptyCornerLeftPix . handle		42869	0					
ANR	43168	Identifier	m_emptyCornerLeftPix		42869	0					
ANR	43169	Identifier	handle		42869	1					
ANR	43170	ArgumentList			42869	1					
ANR	43171	ElseStatement	else		42869	0					
ANR	43172	CompoundStatement		56:11:2218:2218	42869	0					
ANR	43173	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	250:8:7772:7821	42869	0	True				
ANR	43174	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		42869	0		<<			
ANR	43175	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43176	Identifier	data		42869	0					
ANR	43177	Identifier	enabledBorders		42869	1					
ANR	43178	CallExpression	m_emptyCornerPix . handle ( )		42869	1					
ANR	43179	Callee	m_emptyCornerPix . handle		42869	0					
ANR	43180	MemberAccess	m_emptyCornerPix . handle		42869	0					
ANR	43181	Identifier	m_emptyCornerPix		42869	0					
ANR	43182	Identifier	handle		42869	1					
ANR	43183	ArgumentList			42869	1					
ANR	43184	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		42869	6					
ANR	43185	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	254:8:7856:7900	42869	0	True				
ANR	43186	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	0		&			
ANR	43187	Identifier	enabledBorders		42869	0					
ANR	43188	Identifier	Plasma :: FrameSvg :: LeftBorder		42869	1					
ANR	43189	CompoundStatement		61:55:2359:2359	42869	1					
ANR	43190	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 6 ] . handle ( )	255:8:7913:7964	42869	0	True				
ANR	43191	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 6 ] . handle ( )		42869	0		<<			
ANR	43192	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43193	Identifier	data		42869	0					
ANR	43194	Identifier	enabledBorders		42869	1					
ANR	43195	CallExpression	m_shadowPixmaps [ 6 ] . handle ( )		42869	1					
ANR	43196	Callee	m_shadowPixmaps [ 6 ] . handle		42869	0					
ANR	43197	MemberAccess	m_shadowPixmaps [ 6 ] . handle		42869	0					
ANR	43198	ArrayIndexing	m_shadowPixmaps [ 6 ]		42869	0					
ANR	43199	Identifier	m_shadowPixmaps		42869	0					
ANR	43200	PrimaryExpression	6		42869	1					
ANR	43201	Identifier	handle		42869	1					
ANR	43202	ArgumentList			42869	1					
ANR	43203	ElseStatement	else		42869	0					
ANR	43204	CompoundStatement		63:11:2433:2433	42869	0					
ANR	43205	ExpressionStatement	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )	257:8:7987:8038	42869	0	True				
ANR	43206	ShiftExpression	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )		42869	0		<<			
ANR	43207	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43208	Identifier	data		42869	0					
ANR	43209	Identifier	enabledBorders		42869	1					
ANR	43210	CallExpression	m_emptyVerticalPix . handle ( )		42869	1					
ANR	43211	Callee	m_emptyVerticalPix . handle		42869	0					
ANR	43212	MemberAccess	m_emptyVerticalPix . handle		42869	0					
ANR	43213	Identifier	m_emptyVerticalPix		42869	0					
ANR	43214	Identifier	handle		42869	1					
ANR	43215	ArgumentList			42869	1					
ANR	43216	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder )		42869	7					
ANR	43217	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder	261:8:8076:8176	42869	0	True				
ANR	43218	AndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	0		&&			
ANR	43219	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		42869	0		&			
ANR	43220	Identifier	enabledBorders		42869	0					
ANR	43221	Identifier	Plasma :: FrameSvg :: TopBorder		42869	1					
ANR	43222	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	1		&			
ANR	43223	Identifier	enabledBorders		42869	0					
ANR	43224	Identifier	Plasma :: FrameSvg :: LeftBorder		42869	1					
ANR	43225	CompoundStatement		69:55:2635:2635	42869	1					
ANR	43226	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 7 ] . handle ( )	263:8:8189:8240	42869	0	True				
ANR	43227	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 7 ] . handle ( )		42869	0		<<			
ANR	43228	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43229	Identifier	data		42869	0					
ANR	43230	Identifier	enabledBorders		42869	1					
ANR	43231	CallExpression	m_shadowPixmaps [ 7 ] . handle ( )		42869	1					
ANR	43232	Callee	m_shadowPixmaps [ 7 ] . handle		42869	0					
ANR	43233	MemberAccess	m_shadowPixmaps [ 7 ] . handle		42869	0					
ANR	43234	ArrayIndexing	m_shadowPixmaps [ 7 ]		42869	0					
ANR	43235	Identifier	m_shadowPixmaps		42869	0					
ANR	43236	PrimaryExpression	7		42869	1					
ANR	43237	Identifier	handle		42869	1					
ANR	43238	ArgumentList			42869	1					
ANR	43239	ElseStatement	else		42869	0					
ANR	43240	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		42869	0					
ANR	43241	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	264:15:8257:8300	42869	0	True				
ANR	43242	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		42869	0		&			
ANR	43243	Identifier	enabledBorders		42869	0					
ANR	43244	Identifier	Plasma :: FrameSvg :: TopBorder		42869	1					
ANR	43245	CompoundStatement		71:61:2759:2759	42869	1					
ANR	43246	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )	265:8:8313:8365	42869	0	True				
ANR	43247	ShiftExpression	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )		42869	0		<<			
ANR	43248	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43249	Identifier	data		42869	0					
ANR	43250	Identifier	enabledBorders		42869	1					
ANR	43251	CallExpression	m_emptyCornerTopPix . handle ( )		42869	1					
ANR	43252	Callee	m_emptyCornerTopPix . handle		42869	0					
ANR	43253	MemberAccess	m_emptyCornerTopPix . handle		42869	0					
ANR	43254	Identifier	m_emptyCornerTopPix		42869	0					
ANR	43255	Identifier	handle		42869	1					
ANR	43256	ArgumentList			42869	1					
ANR	43257	ElseStatement	else		42869	0					
ANR	43258	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		42869	0					
ANR	43259	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	266:15:8382:8426	42869	0	True				
ANR	43260	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	0		&			
ANR	43261	Identifier	enabledBorders		42869	0					
ANR	43262	Identifier	Plasma :: FrameSvg :: LeftBorder		42869	1					
ANR	43263	CompoundStatement		73:62:2885:2885	42869	1					
ANR	43264	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )	267:8:8439:8492	42869	0	True				
ANR	43265	ShiftExpression	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )		42869	0		<<			
ANR	43266	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43267	Identifier	data		42869	0					
ANR	43268	Identifier	enabledBorders		42869	1					
ANR	43269	CallExpression	m_emptyCornerLeftPix . handle ( )		42869	1					
ANR	43270	Callee	m_emptyCornerLeftPix . handle		42869	0					
ANR	43271	MemberAccess	m_emptyCornerLeftPix . handle		42869	0					
ANR	43272	Identifier	m_emptyCornerLeftPix		42869	0					
ANR	43273	Identifier	handle		42869	1					
ANR	43274	ArgumentList			42869	1					
ANR	43275	ElseStatement	else		42869	0					
ANR	43276	CompoundStatement		75:11:2961:2961	42869	0					
ANR	43277	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	269:8:8515:8564	42869	0	True				
ANR	43278	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		42869	0		<<			
ANR	43279	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43280	Identifier	data		42869	0					
ANR	43281	Identifier	enabledBorders		42869	1					
ANR	43282	CallExpression	m_emptyCornerPix . handle ( )		42869	1					
ANR	43283	Callee	m_emptyCornerPix . handle		42869	0					
ANR	43284	MemberAccess	m_emptyCornerPix . handle		42869	0					
ANR	43285	Identifier	m_emptyCornerPix		42869	0					
ANR	43286	Identifier	handle		42869	1					
ANR	43287	ArgumentList			42869	1					
ANR	43288	IdentifierDeclStatement	"int left , top , right , bottom = 0 ;"	273:4:8584:8616	42869	8	True				
ANR	43289	IdentifierDecl	left		42869	0					
ANR	43290	IdentifierDeclType	int		42869	0					
ANR	43291	Identifier	left		42869	1					
ANR	43292	IdentifierDecl	top		42869	1					
ANR	43293	IdentifierDeclType	int		42869	0					
ANR	43294	Identifier	top		42869	1					
ANR	43295	IdentifierDecl	right		42869	2					
ANR	43296	IdentifierDeclType	int		42869	0					
ANR	43297	Identifier	right		42869	1					
ANR	43298	IdentifierDecl	bottom = 0		42869	3					
ANR	43299	IdentifierDeclType	int		42869	0					
ANR	43300	Identifier	bottom		42869	1					
ANR	43301	AssignmentExpression	bottom = 0		42869	2		=			
ANR	43302	Identifier	bottom		42869	0					
ANR	43303	PrimaryExpression	0		42869	1					
ANR	43304	IdentifierDeclStatement	QSize marginHint ;	275:4:8623:8639	42869	9	True				
ANR	43305	IdentifierDecl	marginHint		42869	0					
ANR	43306	IdentifierDeclType	QSize		42869	0					
ANR	43307	Identifier	marginHint		42869	1					
ANR	43308	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		42869	10					
ANR	43309	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	276:8:8649:8692	42869	0	True				
ANR	43310	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		42869	0		&			
ANR	43311	Identifier	enabledBorders		42869	0					
ANR	43312	Identifier	Plasma :: FrameSvg :: TopBorder		42869	1					
ANR	43313	CompoundStatement		83:54:3151:3151	42869	1					
ANR	43314	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-top-margin"" )"	277:8:8705:8758	42869	0	True				
ANR	43315	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-top-margin"" )"		42869	0		=			
ANR	43316	Identifier	marginHint		42869	0					
ANR	43317	CallExpression	"q -> elementSize ( ""shadow-hint-top-margin"" )"		42869	1					
ANR	43318	Callee	q -> elementSize		42869	0					
ANR	43319	PtrMemberAccess	q -> elementSize		42869	0					
ANR	43320	Identifier	q		42869	0					
ANR	43321	Identifier	elementSize		42869	1					
ANR	43322	ArgumentList	"""shadow-hint-top-margin"""		42869	1					
ANR	43323	Argument	"""shadow-hint-top-margin"""		42869	0					
ANR	43324	PrimaryExpression	"""shadow-hint-top-margin"""		42869	0					
ANR	43325	IfStatement	if ( marginHint . isValid ( ) )		42869	1					
ANR	43326	Condition	marginHint . isValid ( )	278:12:8772:8791	42869	0	True				
ANR	43327	CallExpression	marginHint . isValid ( )		42869	0					
ANR	43328	Callee	marginHint . isValid		42869	0					
ANR	43329	MemberAccess	marginHint . isValid		42869	0					
ANR	43330	Identifier	marginHint		42869	0					
ANR	43331	Identifier	isValid		42869	1					
ANR	43332	ArgumentList			42869	1					
ANR	43333	CompoundStatement		85:34:3250:3250	42869	1					
ANR	43334	ExpressionStatement	top = marginHint . height ( )	279:12:8808:8833	42869	0	True				
ANR	43335	AssignmentExpression	top = marginHint . height ( )		42869	0		=			
ANR	43336	Identifier	top		42869	0					
ANR	43337	CallExpression	marginHint . height ( )		42869	1					
ANR	43338	Callee	marginHint . height		42869	0					
ANR	43339	MemberAccess	marginHint . height		42869	0					
ANR	43340	Identifier	marginHint		42869	0					
ANR	43341	Identifier	height		42869	1					
ANR	43342	ArgumentList			42869	1					
ANR	43343	ElseStatement	else		42869	0					
ANR	43344	CompoundStatement		87:15:3306:3306	42869	0					
ANR	43345	ExpressionStatement	top = m_shadowPixmaps [ 0 ] . height ( )	281:12:8864:8897	42869	0	True				
ANR	43346	AssignmentExpression	top = m_shadowPixmaps [ 0 ] . height ( )		42869	0		=			
ANR	43347	Identifier	top		42869	0					
ANR	43348	CallExpression	m_shadowPixmaps [ 0 ] . height ( )		42869	1					
ANR	43349	Callee	m_shadowPixmaps [ 0 ] . height		42869	0					
ANR	43350	MemberAccess	m_shadowPixmaps [ 0 ] . height		42869	0					
ANR	43351	ArrayIndexing	m_shadowPixmaps [ 0 ]		42869	0					
ANR	43352	Identifier	m_shadowPixmaps		42869	0					
ANR	43353	PrimaryExpression	0		42869	1					
ANR	43354	Identifier	height		42869	1					
ANR	43355	ArgumentList			42869	1					
ANR	43356	ElseStatement	else		42869	0					
ANR	43357	CompoundStatement		90:11:3383:3383	42869	0					
ANR	43358	ExpressionStatement	top = 1	284:8:8937:8944	42869	0	True				
ANR	43359	AssignmentExpression	top = 1		42869	0		=			
ANR	43360	Identifier	top		42869	0					
ANR	43361	PrimaryExpression	1		42869	1					
ANR	43362	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		42869	11					
ANR	43363	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	287:8:8961:9006	42869	0	True				
ANR	43364	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		42869	0		&			
ANR	43365	Identifier	enabledBorders		42869	0					
ANR	43366	Identifier	Plasma :: FrameSvg :: RightBorder		42869	1					
ANR	43367	CompoundStatement		94:56:3465:3465	42869	1					
ANR	43368	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-right-margin"" )"	288:8:9019:9074	42869	0	True				
ANR	43369	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-right-margin"" )"		42869	0		=			
ANR	43370	Identifier	marginHint		42869	0					
ANR	43371	CallExpression	"q -> elementSize ( ""shadow-hint-right-margin"" )"		42869	1					
ANR	43372	Callee	q -> elementSize		42869	0					
ANR	43373	PtrMemberAccess	q -> elementSize		42869	0					
ANR	43374	Identifier	q		42869	0					
ANR	43375	Identifier	elementSize		42869	1					
ANR	43376	ArgumentList	"""shadow-hint-right-margin"""		42869	1					
ANR	43377	Argument	"""shadow-hint-right-margin"""		42869	0					
ANR	43378	PrimaryExpression	"""shadow-hint-right-margin"""		42869	0					
ANR	43379	IfStatement	if ( marginHint . isValid ( ) )		42869	1					
ANR	43380	Condition	marginHint . isValid ( )	289:12:9088:9107	42869	0	True				
ANR	43381	CallExpression	marginHint . isValid ( )		42869	0					
ANR	43382	Callee	marginHint . isValid		42869	0					
ANR	43383	MemberAccess	marginHint . isValid		42869	0					
ANR	43384	Identifier	marginHint		42869	0					
ANR	43385	Identifier	isValid		42869	1					
ANR	43386	ArgumentList			42869	1					
ANR	43387	CompoundStatement		96:34:3566:3566	42869	1					
ANR	43388	ExpressionStatement	right = marginHint . width ( )	290:12:9124:9150	42869	0	True				
ANR	43389	AssignmentExpression	right = marginHint . width ( )		42869	0		=			
ANR	43390	Identifier	right		42869	0					
ANR	43391	CallExpression	marginHint . width ( )		42869	1					
ANR	43392	Callee	marginHint . width		42869	0					
ANR	43393	MemberAccess	marginHint . width		42869	0					
ANR	43394	Identifier	marginHint		42869	0					
ANR	43395	Identifier	width		42869	1					
ANR	43396	ArgumentList			42869	1					
ANR	43397	ElseStatement	else		42869	0					
ANR	43398	CompoundStatement		98:15:3623:3623	42869	0					
ANR	43399	ExpressionStatement	right = m_shadowPixmaps [ 2 ] . width ( )	292:12:9181:9215	42869	0	True				
ANR	43400	AssignmentExpression	right = m_shadowPixmaps [ 2 ] . width ( )		42869	0		=			
ANR	43401	Identifier	right		42869	0					
ANR	43402	CallExpression	m_shadowPixmaps [ 2 ] . width ( )		42869	1					
ANR	43403	Callee	m_shadowPixmaps [ 2 ] . width		42869	0					
ANR	43404	MemberAccess	m_shadowPixmaps [ 2 ] . width		42869	0					
ANR	43405	ArrayIndexing	m_shadowPixmaps [ 2 ]		42869	0					
ANR	43406	Identifier	m_shadowPixmaps		42869	0					
ANR	43407	PrimaryExpression	2		42869	1					
ANR	43408	Identifier	width		42869	1					
ANR	43409	ArgumentList			42869	1					
ANR	43410	ElseStatement	else		42869	0					
ANR	43411	CompoundStatement		101:11:3703:3703	42869	0					
ANR	43412	ExpressionStatement	right = 1	295:8:9257:9266	42869	0	True				
ANR	43413	AssignmentExpression	right = 1		42869	0		=			
ANR	43414	Identifier	right		42869	0					
ANR	43415	PrimaryExpression	1		42869	1					
ANR	43416	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		42869	12					
ANR	43417	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	298:8:9283:9329	42869	0	True				
ANR	43418	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		42869	0		&			
ANR	43419	Identifier	enabledBorders		42869	0					
ANR	43420	Identifier	Plasma :: FrameSvg :: BottomBorder		42869	1					
ANR	43421	CompoundStatement		105:57:3788:3788	42869	1					
ANR	43422	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-bottom-margin"" )"	299:8:9342:9398	42869	0	True				
ANR	43423	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-bottom-margin"" )"		42869	0		=			
ANR	43424	Identifier	marginHint		42869	0					
ANR	43425	CallExpression	"q -> elementSize ( ""shadow-hint-bottom-margin"" )"		42869	1					
ANR	43426	Callee	q -> elementSize		42869	0					
ANR	43427	PtrMemberAccess	q -> elementSize		42869	0					
ANR	43428	Identifier	q		42869	0					
ANR	43429	Identifier	elementSize		42869	1					
ANR	43430	ArgumentList	"""shadow-hint-bottom-margin"""		42869	1					
ANR	43431	Argument	"""shadow-hint-bottom-margin"""		42869	0					
ANR	43432	PrimaryExpression	"""shadow-hint-bottom-margin"""		42869	0					
ANR	43433	IfStatement	if ( marginHint . isValid ( ) )		42869	1					
ANR	43434	Condition	marginHint . isValid ( )	300:12:9412:9431	42869	0	True				
ANR	43435	CallExpression	marginHint . isValid ( )		42869	0					
ANR	43436	Callee	marginHint . isValid		42869	0					
ANR	43437	MemberAccess	marginHint . isValid		42869	0					
ANR	43438	Identifier	marginHint		42869	0					
ANR	43439	Identifier	isValid		42869	1					
ANR	43440	ArgumentList			42869	1					
ANR	43441	CompoundStatement		107:34:3890:3890	42869	1					
ANR	43442	ExpressionStatement	bottom = marginHint . height ( )	301:12:9448:9476	42869	0	True				
ANR	43443	AssignmentExpression	bottom = marginHint . height ( )		42869	0		=			
ANR	43444	Identifier	bottom		42869	0					
ANR	43445	CallExpression	marginHint . height ( )		42869	1					
ANR	43446	Callee	marginHint . height		42869	0					
ANR	43447	MemberAccess	marginHint . height		42869	0					
ANR	43448	Identifier	marginHint		42869	0					
ANR	43449	Identifier	height		42869	1					
ANR	43450	ArgumentList			42869	1					
ANR	43451	ElseStatement	else		42869	0					
ANR	43452	CompoundStatement		109:15:3949:3949	42869	0					
ANR	43453	ExpressionStatement	bottom = m_shadowPixmaps [ 4 ] . height ( )	303:12:9507:9543	42869	0	True				
ANR	43454	AssignmentExpression	bottom = m_shadowPixmaps [ 4 ] . height ( )		42869	0		=			
ANR	43455	Identifier	bottom		42869	0					
ANR	43456	CallExpression	m_shadowPixmaps [ 4 ] . height ( )		42869	1					
ANR	43457	Callee	m_shadowPixmaps [ 4 ] . height		42869	0					
ANR	43458	MemberAccess	m_shadowPixmaps [ 4 ] . height		42869	0					
ANR	43459	ArrayIndexing	m_shadowPixmaps [ 4 ]		42869	0					
ANR	43460	Identifier	m_shadowPixmaps		42869	0					
ANR	43461	PrimaryExpression	4		42869	1					
ANR	43462	Identifier	height		42869	1					
ANR	43463	ArgumentList			42869	1					
ANR	43464	ElseStatement	else		42869	0					
ANR	43465	CompoundStatement		112:11:4032:4032	42869	0					
ANR	43466	ExpressionStatement	bottom = 1	306:8:9586:9596	42869	0	True				
ANR	43467	AssignmentExpression	bottom = 1		42869	0		=			
ANR	43468	Identifier	bottom		42869	0					
ANR	43469	PrimaryExpression	1		42869	1					
ANR	43470	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		42869	13					
ANR	43471	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	309:8:9613:9657	42869	0	True				
ANR	43472	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		42869	0		&			
ANR	43473	Identifier	enabledBorders		42869	0					
ANR	43474	Identifier	Plasma :: FrameSvg :: LeftBorder		42869	1					
ANR	43475	CompoundStatement		116:55:4116:4116	42869	1					
ANR	43476	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-left-margin"" )"	310:8:9670:9724	42869	0	True				
ANR	43477	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-left-margin"" )"		42869	0		=			
ANR	43478	Identifier	marginHint		42869	0					
ANR	43479	CallExpression	"q -> elementSize ( ""shadow-hint-left-margin"" )"		42869	1					
ANR	43480	Callee	q -> elementSize		42869	0					
ANR	43481	PtrMemberAccess	q -> elementSize		42869	0					
ANR	43482	Identifier	q		42869	0					
ANR	43483	Identifier	elementSize		42869	1					
ANR	43484	ArgumentList	"""shadow-hint-left-margin"""		42869	1					
ANR	43485	Argument	"""shadow-hint-left-margin"""		42869	0					
ANR	43486	PrimaryExpression	"""shadow-hint-left-margin"""		42869	0					
ANR	43487	IfStatement	if ( marginHint . isValid ( ) )		42869	1					
ANR	43488	Condition	marginHint . isValid ( )	311:12:9738:9757	42869	0	True				
ANR	43489	CallExpression	marginHint . isValid ( )		42869	0					
ANR	43490	Callee	marginHint . isValid		42869	0					
ANR	43491	MemberAccess	marginHint . isValid		42869	0					
ANR	43492	Identifier	marginHint		42869	0					
ANR	43493	Identifier	isValid		42869	1					
ANR	43494	ArgumentList			42869	1					
ANR	43495	CompoundStatement		118:34:4216:4216	42869	1					
ANR	43496	ExpressionStatement	left = marginHint . width ( )	312:12:9774:9799	42869	0	True				
ANR	43497	AssignmentExpression	left = marginHint . width ( )		42869	0		=			
ANR	43498	Identifier	left		42869	0					
ANR	43499	CallExpression	marginHint . width ( )		42869	1					
ANR	43500	Callee	marginHint . width		42869	0					
ANR	43501	MemberAccess	marginHint . width		42869	0					
ANR	43502	Identifier	marginHint		42869	0					
ANR	43503	Identifier	width		42869	1					
ANR	43504	ArgumentList			42869	1					
ANR	43505	ElseStatement	else		42869	0					
ANR	43506	CompoundStatement		120:15:4272:4272	42869	0					
ANR	43507	ExpressionStatement	left = m_shadowPixmaps [ 6 ] . width ( )	314:12:9830:9863	42869	0	True				
ANR	43508	AssignmentExpression	left = m_shadowPixmaps [ 6 ] . width ( )		42869	0		=			
ANR	43509	Identifier	left		42869	0					
ANR	43510	CallExpression	m_shadowPixmaps [ 6 ] . width ( )		42869	1					
ANR	43511	Callee	m_shadowPixmaps [ 6 ] . width		42869	0					
ANR	43512	MemberAccess	m_shadowPixmaps [ 6 ] . width		42869	0					
ANR	43513	ArrayIndexing	m_shadowPixmaps [ 6 ]		42869	0					
ANR	43514	Identifier	m_shadowPixmaps		42869	0					
ANR	43515	PrimaryExpression	6		42869	1					
ANR	43516	Identifier	width		42869	1					
ANR	43517	ArgumentList			42869	1					
ANR	43518	ElseStatement	else		42869	0					
ANR	43519	CompoundStatement		123:11:4350:4350	42869	0					
ANR	43520	ExpressionStatement	left = 1	317:8:9904:9912	42869	0	True				
ANR	43521	AssignmentExpression	left = 1		42869	0		=			
ANR	43522	Identifier	left		42869	0					
ANR	43523	PrimaryExpression	1		42869	1					
ANR	43524	ExpressionStatement	data [ enabledBorders ] << top << right << bottom << left	320:4:9925:9979	42869	14	True				
ANR	43525	ShiftExpression	data [ enabledBorders ] << top << right << bottom << left		42869	0		<<			
ANR	43526	ArrayIndexing	data [ enabledBorders ]		42869	0					
ANR	43527	Identifier	data		42869	0					
ANR	43528	Identifier	enabledBorders		42869	1					
ANR	43529	ShiftExpression	top << right << bottom << left		42869	1		<<			
ANR	43530	Identifier	top		42869	0					
ANR	43531	ShiftExpression	right << bottom << left		42869	1		<<			
ANR	43532	Identifier	right		42869	0					
ANR	43533	ShiftExpression	bottom << left		42869	1		<<			
ANR	43534	Identifier	bottom		42869	0					
ANR	43535	Identifier	left		42869	1					
ANR	43536	ReturnType	void		42869	1					
ANR	43537	Identifier	Shadows :: Private :: setupData		42869	2					
ANR	43538	ParameterList	Plasma :: FrameSvg :: EnabledBorders enabledBorders		42869	3					
ANR	43539	Parameter	Plasma :: FrameSvg :: EnabledBorders enabledBorders	193:33:5494:5540	42869	0	True				
ANR	43540	ParameterType	Plasma :: FrameSvg :: EnabledBorders		42869	0					
ANR	43541	Identifier	enabledBorders		42869	1					
ANR	43542	CFGEntryNode	ENTRY		42869		True				
ANR	43543	CFGExitNode	EXIT		42869		True				
ANR	43544	Symbol	m_emptyCornerBottomPix		42869						
ANR	43545	Symbol	data		42869						
ANR	43546	Symbol	m_shadowPixmaps [ 4 ] . height		42869						
ANR	43547	Symbol	m_shadowPixmaps [ 6 ] . width		42869						
ANR	43548	Symbol	m_emptyCornerLeftPix		42869						
ANR	43549	Symbol	enabledBorders		42869						
ANR	43550	Symbol	top		42869						
ANR	43551	Symbol	Plasma :: FrameSvg :: BottomBorder		42869						
ANR	43552	Symbol	* m_shadowPixmaps		42869						
ANR	43553	Symbol	Plasma :: FrameSvg :: RightBorder		42869						
ANR	43554	Symbol	m_emptyCornerTopPix		42869						
ANR	43555	Symbol	q -> elementSize		42869						
ANR	43556	Symbol	marginHint . isValid		42869						
ANR	43557	Symbol	Plasma :: FrameSvg :: LeftBorder		42869						
ANR	43558	Symbol	m_emptyCornerPix		42869						
ANR	43559	Symbol	marginHint . width		42869						
ANR	43560	Symbol	bottom		42869						
ANR	43561	Symbol	m_emptyCornerRightPix		42869						
ANR	43562	Symbol	right		42869						
ANR	43563	Symbol	marginHint		42869						
ANR	43564	Symbol	Plasma :: FrameSvg :: TopBorder		42869						
ANR	43565	Symbol	q		42869						
ANR	43566	Symbol	m_emptyHorizontalPix		42869						
ANR	43567	Symbol	left		42869						
ANR	43568	Symbol	m_shadowPixmaps [ 0 ] . height		42869						
ANR	43569	Symbol	m_shadowPixmaps [ 2 ] . width		42869						
ANR	43570	Symbol	m_shadowPixmaps		42869						
ANR	43571	Symbol	m_emptyVerticalPix		42869						
ANR	43572	Symbol	* q		42869						
ANR	43573	Symbol	marginHint . height		42869						
ANR	43574	Function	Shadows :: Private :: clearPixmaps	323:0:9984:10801							
ANR	43575	FunctionDef	Shadows :: Private :: clearPixmaps ()		43574	0					
ANR	43576	CompoundStatement		324:0:10022:10801	43574	0					
ANR	43577	IfStatement	if ( m_managePixmaps )		43574	0					
ANR	43578	Condition	m_managePixmaps	326:8:10048:10062	43574	0	True				
ANR	43579	Identifier	m_managePixmaps		43574	0					
ANR	43580	CompoundStatement		3:25:42:42	43574	1					
ANR	43581	Statement	foreach	327:8:10075:10081	43574	0	True				
ANR	43582	Statement	(	327:16:10083:10083	43574	1	True				
ANR	43583	Statement	const	327:17:10084:10088	43574	2	True				
ANR	43584	Statement	QPixmap	327:23:10090:10096	43574	3	True				
ANR	43585	Statement	&	327:31:10098:10098	43574	4	True				
ANR	43586	Statement	pixmap	327:32:10099:10104	43574	5	True				
ANR	43587	Statement	","	327:38:10105:10105	43574	6	True				
ANR	43588	Statement	m_shadowPixmaps	327:40:10107:10121	43574	7	True				
ANR	43589	Statement	)	327:55:10122:10122	43574	8	True				
ANR	43590	CompoundStatement		4:57:101:101	43574	9					
ANR	43591	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , pixmap . handle ( ) )"	328:12:10138:10187	43574	0	True				
ANR	43592	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , pixmap . handle ( ) )"		43574	0					
ANR	43593	Callee	XFreePixmap		43574	0					
ANR	43594	Identifier	XFreePixmap		43574	0					
ANR	43595	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43596	Argument	QX11Info :: display ( )		43574	0					
ANR	43597	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43598	Callee	QX11Info :: display		43574	0					
ANR	43599	Identifier	QX11Info :: display		43574	0					
ANR	43600	ArgumentList			43574	1					
ANR	43601	Argument	pixmap . handle ( )		43574	1					
ANR	43602	CallExpression	pixmap . handle ( )		43574	0					
ANR	43603	Callee	pixmap . handle		43574	0					
ANR	43604	MemberAccess	pixmap . handle		43574	0					
ANR	43605	Identifier	pixmap		43574	0					
ANR	43606	Identifier	handle		43574	1					
ANR	43607	ArgumentList			43574	1					
ANR	43608	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerPix . handle ( ) )"	331:8:10208:10267	43574	10	True				
ANR	43609	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerPix . handle ( ) )"		43574	0					
ANR	43610	Callee	XFreePixmap		43574	0					
ANR	43611	Identifier	XFreePixmap		43574	0					
ANR	43612	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43613	Argument	QX11Info :: display ( )		43574	0					
ANR	43614	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43615	Callee	QX11Info :: display		43574	0					
ANR	43616	Identifier	QX11Info :: display		43574	0					
ANR	43617	ArgumentList			43574	1					
ANR	43618	Argument	m_emptyCornerPix . handle ( )		43574	1					
ANR	43619	CallExpression	m_emptyCornerPix . handle ( )		43574	0					
ANR	43620	Callee	m_emptyCornerPix . handle		43574	0					
ANR	43621	MemberAccess	m_emptyCornerPix . handle		43574	0					
ANR	43622	Identifier	m_emptyCornerPix		43574	0					
ANR	43623	Identifier	handle		43574	1					
ANR	43624	ArgumentList			43574	1					
ANR	43625	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerBottomPix . handle ( ) )"	332:8:10277:10342	43574	11	True				
ANR	43626	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerBottomPix . handle ( ) )"		43574	0					
ANR	43627	Callee	XFreePixmap		43574	0					
ANR	43628	Identifier	XFreePixmap		43574	0					
ANR	43629	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43630	Argument	QX11Info :: display ( )		43574	0					
ANR	43631	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43632	Callee	QX11Info :: display		43574	0					
ANR	43633	Identifier	QX11Info :: display		43574	0					
ANR	43634	ArgumentList			43574	1					
ANR	43635	Argument	m_emptyCornerBottomPix . handle ( )		43574	1					
ANR	43636	CallExpression	m_emptyCornerBottomPix . handle ( )		43574	0					
ANR	43637	Callee	m_emptyCornerBottomPix . handle		43574	0					
ANR	43638	MemberAccess	m_emptyCornerBottomPix . handle		43574	0					
ANR	43639	Identifier	m_emptyCornerBottomPix		43574	0					
ANR	43640	Identifier	handle		43574	1					
ANR	43641	ArgumentList			43574	1					
ANR	43642	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerLeftPix . handle ( ) )"	333:8:10352:10415	43574	12	True				
ANR	43643	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerLeftPix . handle ( ) )"		43574	0					
ANR	43644	Callee	XFreePixmap		43574	0					
ANR	43645	Identifier	XFreePixmap		43574	0					
ANR	43646	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43647	Argument	QX11Info :: display ( )		43574	0					
ANR	43648	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43649	Callee	QX11Info :: display		43574	0					
ANR	43650	Identifier	QX11Info :: display		43574	0					
ANR	43651	ArgumentList			43574	1					
ANR	43652	Argument	m_emptyCornerLeftPix . handle ( )		43574	1					
ANR	43653	CallExpression	m_emptyCornerLeftPix . handle ( )		43574	0					
ANR	43654	Callee	m_emptyCornerLeftPix . handle		43574	0					
ANR	43655	MemberAccess	m_emptyCornerLeftPix . handle		43574	0					
ANR	43656	Identifier	m_emptyCornerLeftPix		43574	0					
ANR	43657	Identifier	handle		43574	1					
ANR	43658	ArgumentList			43574	1					
ANR	43659	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerRightPix . handle ( ) )"	334:8:10425:10489	43574	13	True				
ANR	43660	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerRightPix . handle ( ) )"		43574	0					
ANR	43661	Callee	XFreePixmap		43574	0					
ANR	43662	Identifier	XFreePixmap		43574	0					
ANR	43663	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43664	Argument	QX11Info :: display ( )		43574	0					
ANR	43665	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43666	Callee	QX11Info :: display		43574	0					
ANR	43667	Identifier	QX11Info :: display		43574	0					
ANR	43668	ArgumentList			43574	1					
ANR	43669	Argument	m_emptyCornerRightPix . handle ( )		43574	1					
ANR	43670	CallExpression	m_emptyCornerRightPix . handle ( )		43574	0					
ANR	43671	Callee	m_emptyCornerRightPix . handle		43574	0					
ANR	43672	MemberAccess	m_emptyCornerRightPix . handle		43574	0					
ANR	43673	Identifier	m_emptyCornerRightPix		43574	0					
ANR	43674	Identifier	handle		43574	1					
ANR	43675	ArgumentList			43574	1					
ANR	43676	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerTopPix . handle ( ) )"	335:8:10499:10561	43574	14	True				
ANR	43677	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerTopPix . handle ( ) )"		43574	0					
ANR	43678	Callee	XFreePixmap		43574	0					
ANR	43679	Identifier	XFreePixmap		43574	0					
ANR	43680	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43681	Argument	QX11Info :: display ( )		43574	0					
ANR	43682	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43683	Callee	QX11Info :: display		43574	0					
ANR	43684	Identifier	QX11Info :: display		43574	0					
ANR	43685	ArgumentList			43574	1					
ANR	43686	Argument	m_emptyCornerTopPix . handle ( )		43574	1					
ANR	43687	CallExpression	m_emptyCornerTopPix . handle ( )		43574	0					
ANR	43688	Callee	m_emptyCornerTopPix . handle		43574	0					
ANR	43689	MemberAccess	m_emptyCornerTopPix . handle		43574	0					
ANR	43690	Identifier	m_emptyCornerTopPix		43574	0					
ANR	43691	Identifier	handle		43574	1					
ANR	43692	ArgumentList			43574	1					
ANR	43693	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyVerticalPix . handle ( ) )"	336:8:10571:10632	43574	15	True				
ANR	43694	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyVerticalPix . handle ( ) )"		43574	0					
ANR	43695	Callee	XFreePixmap		43574	0					
ANR	43696	Identifier	XFreePixmap		43574	0					
ANR	43697	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43698	Argument	QX11Info :: display ( )		43574	0					
ANR	43699	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43700	Callee	QX11Info :: display		43574	0					
ANR	43701	Identifier	QX11Info :: display		43574	0					
ANR	43702	ArgumentList			43574	1					
ANR	43703	Argument	m_emptyVerticalPix . handle ( )		43574	1					
ANR	43704	CallExpression	m_emptyVerticalPix . handle ( )		43574	0					
ANR	43705	Callee	m_emptyVerticalPix . handle		43574	0					
ANR	43706	MemberAccess	m_emptyVerticalPix . handle		43574	0					
ANR	43707	Identifier	m_emptyVerticalPix		43574	0					
ANR	43708	Identifier	handle		43574	1					
ANR	43709	ArgumentList			43574	1					
ANR	43710	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyHorizontalPix . handle ( ) )"	337:8:10642:10705	43574	16	True				
ANR	43711	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyHorizontalPix . handle ( ) )"		43574	0					
ANR	43712	Callee	XFreePixmap		43574	0					
ANR	43713	Identifier	XFreePixmap		43574	0					
ANR	43714	ArgumentList	QX11Info :: display ( )		43574	1					
ANR	43715	Argument	QX11Info :: display ( )		43574	0					
ANR	43716	CallExpression	QX11Info :: display ( )		43574	0					
ANR	43717	Callee	QX11Info :: display		43574	0					
ANR	43718	Identifier	QX11Info :: display		43574	0					
ANR	43719	ArgumentList			43574	1					
ANR	43720	Argument	m_emptyHorizontalPix . handle ( )		43574	1					
ANR	43721	CallExpression	m_emptyHorizontalPix . handle ( )		43574	0					
ANR	43722	Callee	m_emptyHorizontalPix . handle		43574	0					
ANR	43723	MemberAccess	m_emptyHorizontalPix . handle		43574	0					
ANR	43724	Identifier	m_emptyHorizontalPix		43574	0					
ANR	43725	Identifier	handle		43574	1					
ANR	43726	ArgumentList			43574	1					
ANR	43727	ExpressionStatement	m_managePixmaps = false	339:8:10716:10739	43574	17	True				
ANR	43728	AssignmentExpression	m_managePixmaps = false		43574	0		=			
ANR	43729	Identifier	m_managePixmaps		43574	0					
ANR	43730	Identifier	false		43574	1					
ANR	43731	ExpressionStatement	m_shadowPixmaps . clear ( )	342:4:10758:10781	43574	1	True				
ANR	43732	CallExpression	m_shadowPixmaps . clear ( )		43574	0					
ANR	43733	Callee	m_shadowPixmaps . clear		43574	0					
ANR	43734	MemberAccess	m_shadowPixmaps . clear		43574	0					
ANR	43735	Identifier	m_shadowPixmaps		43574	0					
ANR	43736	Identifier	clear		43574	1					
ANR	43737	ArgumentList			43574	1					
ANR	43738	ExpressionStatement	data . clear ( )	343:4:10787:10799	43574	2	True				
ANR	43739	CallExpression	data . clear ( )		43574	0					
ANR	43740	Callee	data . clear		43574	0					
ANR	43741	MemberAccess	data . clear		43574	0					
ANR	43742	Identifier	data		43574	0					
ANR	43743	Identifier	clear		43574	1					
ANR	43744	ArgumentList			43574	1					
ANR	43745	ReturnType	void		43574	1					
ANR	43746	Identifier	Shadows :: Private :: clearPixmaps		43574	2					
ANR	43747	ParameterList			43574	3					
ANR	43748	CFGEntryNode	ENTRY		43574		True				
ANR	43749	CFGExitNode	EXIT		43574		True				
ANR	43750	Symbol	m_emptyCornerBottomPix		43574						
ANR	43751	Symbol	m_emptyCornerPix		43574						
ANR	43752	Symbol	pixmap		43574						
ANR	43753	Symbol	m_emptyCornerLeftPix . handle		43574						
ANR	43754	Symbol	data		43574						
ANR	43755	Symbol	m_emptyCornerTopPix . handle		43574						
ANR	43756	Symbol	m_emptyVerticalPix . handle		43574						
ANR	43757	Symbol	pixmap . handle		43574						
ANR	43758	Symbol	m_managePixmaps		43574						
ANR	43759	Symbol	m_emptyCornerRightPix		43574						
ANR	43760	Symbol	false		43574						
ANR	43761	Symbol	m_emptyCornerPix . handle		43574						
ANR	43762	Symbol	QX11Info :: display		43574						
ANR	43763	Symbol	m_emptyCornerLeftPix		43574						
ANR	43764	Symbol	m_emptyHorizontalPix		43574						
ANR	43765	Symbol	m_emptyCornerRightPix . handle		43574						
ANR	43766	Symbol	m_emptyCornerTopPix		43574						
ANR	43767	Symbol	m_emptyVerticalPix		43574						
ANR	43768	Symbol	m_shadowPixmaps		43574						
ANR	43769	Symbol	m_emptyCornerBottomPix . handle		43574						
ANR	43770	Symbol	m_emptyHorizontalPix . handle		43574						
ANR	43771	Function	Shadows :: Private :: updateShadow	346:0:10804:11475							
ANR	43772	FunctionDef	"Shadows :: Private :: updateShadow (const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders)"		43771	0					
ANR	43773	CompoundStatement		347:0:10912:11475	43771	0					
ANR	43774	IfStatement	if ( m_shadowPixmaps . isEmpty ( ) )		43771	0					
ANR	43775	Condition	m_shadowPixmaps . isEmpty ( )	349:8:10938:10962	43771	0	True				
ANR	43776	CallExpression	m_shadowPixmaps . isEmpty ( )		43771	0					
ANR	43777	Callee	m_shadowPixmaps . isEmpty		43771	0					
ANR	43778	MemberAccess	m_shadowPixmaps . isEmpty		43771	0					
ANR	43779	Identifier	m_shadowPixmaps		43771	0					
ANR	43780	Identifier	isEmpty		43771	1					
ANR	43781	ArgumentList			43771	1					
ANR	43782	CompoundStatement		3:35:52:52	43771	1					
ANR	43783	ExpressionStatement	setupPixmaps ( )	350:8:10975:10989	43771	0	True				
ANR	43784	CallExpression	setupPixmaps ( )		43771	0					
ANR	43785	Callee	setupPixmaps		43771	0					
ANR	43786	Identifier	setupPixmaps		43771	0					
ANR	43787	ArgumentList			43771	1					
ANR	43788	IfStatement	if ( ! data . contains ( enabledBorders ) )		43771	1					
ANR	43789	Condition	! data . contains ( enabledBorders )	353:8:11006:11035	43771	0	True				
ANR	43790	UnaryOperationExpression	! data . contains ( enabledBorders )		43771	0					
ANR	43791	UnaryOperator	!		43771	0					
ANR	43792	CallExpression	data . contains ( enabledBorders )		43771	1					
ANR	43793	Callee	data . contains		43771	0					
ANR	43794	MemberAccess	data . contains		43771	0					
ANR	43795	Identifier	data		43771	0					
ANR	43796	Identifier	contains		43771	1					
ANR	43797	ArgumentList	enabledBorders		43771	1					
ANR	43798	Argument	enabledBorders		43771	0					
ANR	43799	Identifier	enabledBorders		43771	0					
ANR	43800	CompoundStatement		7:40:125:125	43771	1					
ANR	43801	ExpressionStatement	setupData ( enabledBorders )	354:8:11048:11073	43771	0	True				
ANR	43802	CallExpression	setupData ( enabledBorders )		43771	0					
ANR	43803	Callee	setupData		43771	0					
ANR	43804	Identifier	setupData		43771	0					
ANR	43805	ArgumentList	enabledBorders		43771	1					
ANR	43806	Argument	enabledBorders		43771	0					
ANR	43807	Identifier	enabledBorders		43771	0					
ANR	43808	IdentifierDeclStatement	Display * dpy = QX11Info :: display ( ) ;	357:4:11086:11120	43771	2	True				
ANR	43809	IdentifierDecl	* dpy = QX11Info :: display ( )		43771	0					
ANR	43810	IdentifierDeclType	Display *		43771	0					
ANR	43811	Identifier	dpy		43771	1					
ANR	43812	AssignmentExpression	* dpy = QX11Info :: display ( )		43771	2		=			
ANR	43813	Identifier	dpy		43771	0					
ANR	43814	CallExpression	QX11Info :: display ( )		43771	1					
ANR	43815	Callee	QX11Info :: display		43771	0					
ANR	43816	Identifier	QX11Info :: display		43771	0					
ANR	43817	ArgumentList			43771	1					
ANR	43818	IdentifierDeclStatement	"Atom atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False ) ;"	358:4:11126:11183	43771	3	True				
ANR	43819	IdentifierDecl	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		43771	0					
ANR	43820	IdentifierDeclType	Atom		43771	0					
ANR	43821	Identifier	atom		43771	1					
ANR	43822	AssignmentExpression	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		43771	2		=			
ANR	43823	Identifier	atom		43771	0					
ANR	43824	CallExpression	"XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		43771	1					
ANR	43825	Callee	XInternAtom		43771	0					
ANR	43826	Identifier	XInternAtom		43771	0					
ANR	43827	ArgumentList	dpy		43771	1					
ANR	43828	Argument	dpy		43771	0					
ANR	43829	Identifier	dpy		43771	0					
ANR	43830	Argument	"""_KDE_NET_WM_SHADOW"""		43771	1					
ANR	43831	PrimaryExpression	"""_KDE_NET_WM_SHADOW"""		43771	0					
ANR	43832	Argument	False		43771	2					
ANR	43833	Identifier	False		43771	0					
ANR	43834	Statement	XChangeProperty	361:4:11265:11279	43771	4	True				
ANR	43835	Statement	(	361:19:11280:11280	43771	5	True				
ANR	43836	Statement	dpy	361:20:11281:11283	43771	6	True				
ANR	43837	Statement	","	361:23:11284:11284	43771	7	True				
ANR	43838	Statement	window	361:25:11286:11291	43771	8	True				
ANR	43839	Statement	->	361:31:11292:11293	43771	9	True				
ANR	43840	Statement	winId	361:33:11294:11298	43771	10	True				
ANR	43841	Statement	(	361:38:11299:11299	43771	11	True				
ANR	43842	Statement	)	361:39:11300:11300	43771	12	True				
ANR	43843	Statement	","	361:40:11301:11301	43771	13	True				
ANR	43844	Statement	atom	361:42:11303:11306	43771	14	True				
ANR	43845	Statement	","	361:46:11307:11307	43771	15	True				
ANR	43846	Statement	XA_CARDINAL	361:48:11309:11319	43771	16	True				
ANR	43847	Statement	","	361:59:11320:11320	43771	17	True				
ANR	43848	Statement	32	361:61:11322:11323	43771	18	True				
ANR	43849	Statement	","	361:63:11324:11324	43771	19	True				
ANR	43850	Statement	PropModeReplace	361:65:11326:11340	43771	20	True				
ANR	43851	Statement	","	361:80:11341:11341	43771	21	True				
ANR	43852	Statement	reinterpret_cast	362:20:11363:11378	43771	22	True				
ANR	43853	Statement	<	362:36:11379:11379	43771	23	True				
ANR	43854	Statement	const	362:37:11380:11384	43771	24	True				
ANR	43855	Statement	unsigned	362:43:11386:11393	43771	25	True				
ANR	43856	Statement	char	362:52:11395:11398	43771	26	True				
ANR	43857	Statement	*	362:57:11400:11400	43771	27	True				
ANR	43858	Statement	>	362:58:11401:11401	43771	28	True				
ANR	43859	Statement	(	362:59:11402:11402	43771	29	True				
ANR	43860	Statement	data	362:60:11403:11406	43771	30	True				
ANR	43861	Statement	[	362:64:11407:11407	43771	31	True				
ANR	43862	Statement	enabledBorders	362:65:11408:11421	43771	32	True				
ANR	43863	Statement	]	362:79:11422:11422	43771	33	True				
ANR	43864	Statement	.	362:80:11423:11423	43771	34	True				
ANR	43865	Statement	constData	362:81:11424:11432	43771	35	True				
ANR	43866	Statement	(	362:90:11433:11433	43771	36	True				
ANR	43867	Statement	)	362:91:11434:11434	43771	37	True				
ANR	43868	Statement	)	362:92:11435:11435	43771	38	True				
ANR	43869	Statement	","	362:93:11436:11436	43771	39	True				
ANR	43870	Statement	data	362:95:11438:11441	43771	40	True				
ANR	43871	Statement	[	362:99:11442:11442	43771	41	True				
ANR	43872	Statement	enabledBorders	362:100:11443:11456	43771	42	True				
ANR	43873	Statement	]	362:114:11457:11457	43771	43	True				
ANR	43874	Statement	.	362:115:11458:11458	43771	44	True				
ANR	43875	Statement	size	362:116:11459:11462	43771	45	True				
ANR	43876	Statement	(	362:120:11463:11463	43771	46	True				
ANR	43877	Statement	)	362:121:11464:11464	43771	47	True				
ANR	43878	Statement	)	362:122:11465:11465	43771	48	True				
ANR	43879	ExpressionStatement		362:123:11466:11466	43771	49	True				
ANR	43880	ReturnType	void		43771	1					
ANR	43881	Identifier	Shadows :: Private :: updateShadow		43771	2					
ANR	43882	ParameterList	"const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders"		43771	3					
ANR	43883	Parameter	const QWidget * window	346:36:10840:10860	43771	0	True				
ANR	43884	ParameterType	const QWidget *		43771	0					
ANR	43885	Identifier	window		43771	1					
ANR	43886	Parameter	Plasma :: FrameSvg :: EnabledBorders enabledBorders	346:59:10863:10909	43771	1	True				
ANR	43887	ParameterType	Plasma :: FrameSvg :: EnabledBorders		43771	0					
ANR	43888	Identifier	enabledBorders		43771	1					
ANR	43889	CFGEntryNode	ENTRY		43771		True				
ANR	43890	CFGExitNode	EXIT		43771		True				
ANR	43891	Symbol	m_shadowPixmaps . isEmpty		43771						
ANR	43892	Symbol	QX11Info :: display		43771						
ANR	43893	Symbol	XInternAtom		43771						
ANR	43894	Symbol	enabledBorders		43771						
ANR	43895	Symbol	data		43771						
ANR	43896	Symbol	data . contains		43771						
ANR	43897	Symbol	m_shadowPixmaps		43771						
ANR	43898	Symbol	window		43771						
ANR	43899	Symbol	False		43771						
ANR	43900	Symbol	dpy		43771						
ANR	43901	Symbol	atom		43771						
ANR	43902	Function	Shadows :: Private :: clearShadow	366:0:11478:11713							
ANR	43903	FunctionDef	Shadows :: Private :: clearShadow (const QWidget * window)		43902	0					
ANR	43904	CompoundStatement		367:0:11536:11713	43902	0					
ANR	43905	IdentifierDeclStatement	Display * dpy = QX11Info :: display ( ) ;	369:4:11558:11592	43902	0	True				
ANR	43906	IdentifierDecl	* dpy = QX11Info :: display ( )		43902	0					
ANR	43907	IdentifierDeclType	Display *		43902	0					
ANR	43908	Identifier	dpy		43902	1					
ANR	43909	AssignmentExpression	* dpy = QX11Info :: display ( )		43902	2		=			
ANR	43910	Identifier	dpy		43902	0					
ANR	43911	CallExpression	QX11Info :: display ( )		43902	1					
ANR	43912	Callee	QX11Info :: display		43902	0					
ANR	43913	Identifier	QX11Info :: display		43902	0					
ANR	43914	ArgumentList			43902	1					
ANR	43915	IdentifierDeclStatement	"Atom atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False ) ;"	370:4:11598:11655	43902	1	True				
ANR	43916	IdentifierDecl	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		43902	0					
ANR	43917	IdentifierDeclType	Atom		43902	0					
ANR	43918	Identifier	atom		43902	1					
ANR	43919	AssignmentExpression	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		43902	2		=			
ANR	43920	Identifier	atom		43902	0					
ANR	43921	CallExpression	"XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		43902	1					
ANR	43922	Callee	XInternAtom		43902	0					
ANR	43923	Identifier	XInternAtom		43902	0					
ANR	43924	ArgumentList	dpy		43902	1					
ANR	43925	Argument	dpy		43902	0					
ANR	43926	Identifier	dpy		43902	0					
ANR	43927	Argument	"""_KDE_NET_WM_SHADOW"""		43902	1					
ANR	43928	PrimaryExpression	"""_KDE_NET_WM_SHADOW"""		43902	0					
ANR	43929	Argument	False		43902	2					
ANR	43930	Identifier	False		43902	0					
ANR	43931	ExpressionStatement	"XDeleteProperty ( dpy , window -> winId ( ) , atom )"	371:4:11661:11704	43902	2	True				
ANR	43932	CallExpression	"XDeleteProperty ( dpy , window -> winId ( ) , atom )"		43902	0					
ANR	43933	Callee	XDeleteProperty		43902	0					
ANR	43934	Identifier	XDeleteProperty		43902	0					
ANR	43935	ArgumentList	dpy		43902	1					
ANR	43936	Argument	dpy		43902	0					
ANR	43937	Identifier	dpy		43902	0					
ANR	43938	Argument	window -> winId ( )		43902	1					
ANR	43939	CallExpression	window -> winId ( )		43902	0					
ANR	43940	Callee	window -> winId		43902	0					
ANR	43941	PtrMemberAccess	window -> winId		43902	0					
ANR	43942	Identifier	window		43902	0					
ANR	43943	Identifier	winId		43902	1					
ANR	43944	ArgumentList			43902	1					
ANR	43945	Argument	atom		43902	2					
ANR	43946	Identifier	atom		43902	0					
ANR	43947	ReturnType	void		43902	1					
ANR	43948	Identifier	Shadows :: Private :: clearShadow		43902	2					
ANR	43949	ParameterList	const QWidget * window		43902	3					
ANR	43950	Parameter	const QWidget * window	366:35:11513:11533	43902	0	True				
ANR	43951	ParameterType	const QWidget *		43902	0					
ANR	43952	Identifier	window		43902	1					
ANR	43953	CFGEntryNode	ENTRY		43902		True				
ANR	43954	CFGExitNode	EXIT		43902		True				
ANR	43955	Symbol	QX11Info :: display		43902						
ANR	43956	Symbol	XInternAtom		43902						
ANR	43957	Symbol	* window		43902						
ANR	43958	Symbol	window		43902						
ANR	43959	Symbol	False		43902						
ANR	43960	Symbol	window -> winId		43902						
ANR	43961	Symbol	dpy		43902						
ANR	43962	Symbol	atom		43902						
ANR	43963	Function	Shadows :: enabled	375:0:11716:11787							
ANR	43964	FunctionDef	Shadows :: enabled ()		43963	0					
ANR	43965	CompoundStatement		376:0:11746:11787	43963	0					
ANR	43966	ReturnStatement	"return hasElement ( ""shadow-left"" ) ;"	377:5:11753:11785	43963	0	True				
ANR	43967	CallExpression	"hasElement ( ""shadow-left"" )"		43963	0					
ANR	43968	Callee	hasElement		43963	0					
ANR	43969	Identifier	hasElement		43963	0					
ANR	43970	ArgumentList	"""shadow-left"""		43963	1					
ANR	43971	Argument	"""shadow-left"""		43963	0					
ANR	43972	PrimaryExpression	"""shadow-left"""		43963	0					
ANR	43973	ReturnType	bool		43963	1					
ANR	43974	Identifier	Shadows :: enabled		43963	2					
ANR	43975	ParameterList			43963	3					
ANR	43976	CFGEntryNode	ENTRY		43963		True				
ANR	43977	CFGExitNode	EXIT		43963		True				
ANR	43978	Symbol	hasElement		43963						
