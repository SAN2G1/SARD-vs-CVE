command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	54011	File	data/converged/CVE-2018-6791_plasma-workspace/backtraceparsergdb.cpp								
ANR	54012	ClassDef	BacktraceLineGdb	25:0:952:1097							
ANR	54013	DeclStmt									
ANR	54014	Decl							void	void ( )	parse
ANR	54015	DeclStmt									
ANR	54016	Decl							void	void ( )	rate
ANR	54017	Function	BacktraceLineGdb :: BacktraceLineGdb	35:0:1101:1329							
ANR	54018	FunctionDef	BacktraceLineGdb :: BacktraceLineGdb (const QString & lineStr)		54017	0					
ANR	54019	CompoundStatement		37:0:1187:1329	54017	0					
ANR	54020	ExpressionStatement	d -> m_line = lineStr	38:4:1193:1212	54017	0	True				
ANR	54021	AssignmentExpression	d -> m_line = lineStr		54017	0		=			
ANR	54022	PtrMemberAccess	d -> m_line		54017	0					
ANR	54023	Identifier	d		54017	0					
ANR	54024	Identifier	m_line		54017	1					
ANR	54025	Identifier	lineStr		54017	1					
ANR	54026	ExpressionStatement	"d -> m_functionName = QLatin1String ( ""??"" )"	39:4:1218:1257	54017	1	True				
ANR	54027	AssignmentExpression	"d -> m_functionName = QLatin1String ( ""??"" )"		54017	0		=			
ANR	54028	PtrMemberAccess	d -> m_functionName		54017	0					
ANR	54029	Identifier	d		54017	0					
ANR	54030	Identifier	m_functionName		54017	1					
ANR	54031	CallExpression	"QLatin1String ( ""??"" )"		54017	1					
ANR	54032	Callee	QLatin1String		54017	0					
ANR	54033	Identifier	QLatin1String		54017	0					
ANR	54034	ArgumentList	"""??"""		54017	1					
ANR	54035	Argument	"""??"""		54017	0					
ANR	54036	PrimaryExpression	"""??"""		54017	0					
ANR	54037	ExpressionStatement	parse ( )	40:4:1263:1270	54017	2	True				
ANR	54038	CallExpression	parse ( )		54017	0					
ANR	54039	Callee	parse		54017	0					
ANR	54040	Identifier	parse		54017	0					
ANR	54041	ArgumentList			54017	1					
ANR	54042	IfStatement	if ( d -> m_type == StackFrame )		54017	3					
ANR	54043	Condition	d -> m_type == StackFrame	41:8:1280:1302	54017	0	True				
ANR	54044	EqualityExpression	d -> m_type == StackFrame		54017	0		==			
ANR	54045	PtrMemberAccess	d -> m_type		54017	0					
ANR	54046	Identifier	d		54017	0					
ANR	54047	Identifier	m_type		54017	1					
ANR	54048	Identifier	StackFrame		54017	1					
ANR	54049	CompoundStatement		5:33:117:117	54017	1					
ANR	54050	ExpressionStatement	rate ( )	42:8:1315:1321	54017	0	True				
ANR	54051	CallExpression	rate ( )		54017	0					
ANR	54052	Callee	rate		54017	0					
ANR	54053	Identifier	rate		54017	0					
ANR	54054	ArgumentList			54017	1					
ANR	54055	Identifier	BacktraceLineGdb :: BacktraceLineGdb		54017	1					
ANR	54056	ParameterList	const QString & lineStr		54017	2					
ANR	54057	Parameter	const QString & lineStr	35:35:1136:1158	54017	0	True				
ANR	54058	ParameterType	const QString &		54017	0					
ANR	54059	Identifier	lineStr		54017	1					
ANR	54060	CFGEntryNode	ENTRY		54017		True				
ANR	54061	CFGExitNode	EXIT		54017		True				
ANR	54062	Symbol	d -> m_line		54017						
ANR	54063	Symbol	QLatin1String		54017						
ANR	54064	Symbol	d -> m_type		54017						
ANR	54065	Symbol	d		54017						
ANR	54066	Symbol	d -> m_functionName		54017						
ANR	54067	Symbol	lineStr		54017						
ANR	54068	Symbol	StackFrame		54017						
ANR	54069	Symbol	* d		54017						
ANR	54070	Function	BacktraceLineGdb :: parse	46:0:1332:4680							
ANR	54071	FunctionDef	BacktraceLineGdb :: parse ()		54070	0					
ANR	54072	CompoundStatement		47:0:1363:4680	54070	0					
ANR	54073	IdentifierDeclStatement	QRegExp regExp ;	48:4:1369:1383	54070	0	True				
ANR	54074	IdentifierDecl	regExp		54070	0					
ANR	54075	IdentifierDeclType	QRegExp		54070	0					
ANR	54076	Identifier	regExp		54070	1					
ANR	54077	IfStatement	"if ( d -> m_line == QLatin1String ( ""\\n"" ) )"		54070	1					
ANR	54078	Condition	"d -> m_line == QLatin1String ( ""\\n"" )"	50:8:1394:1425	54070	0	True				
ANR	54079	EqualityExpression	"d -> m_line == QLatin1String ( ""\\n"" )"		54070	0		==			
ANR	54080	PtrMemberAccess	d -> m_line		54070	0					
ANR	54081	Identifier	d		54070	0					
ANR	54082	Identifier	m_line		54070	1					
ANR	54083	CallExpression	"QLatin1String ( ""\\n"" )"		54070	1					
ANR	54084	Callee	QLatin1String		54070	0					
ANR	54085	Identifier	QLatin1String		54070	0					
ANR	54086	ArgumentList	"""\\n"""		54070	1					
ANR	54087	Argument	"""\\n"""		54070	0					
ANR	54088	PrimaryExpression	"""\\n"""		54070	0					
ANR	54089	CompoundStatement		4:42:64:64	54070	1					
ANR	54090	ExpressionStatement	d -> m_type = EmptyLine	51:8:1438:1459	54070	0	True				
ANR	54091	AssignmentExpression	d -> m_type = EmptyLine		54070	0		=			
ANR	54092	PtrMemberAccess	d -> m_type		54070	0					
ANR	54093	Identifier	d		54070	0					
ANR	54094	Identifier	m_type		54070	1					
ANR	54095	Identifier	EmptyLine		54070	1					
ANR	54096	ReturnStatement	return ;	52:8:1469:1475	54070	1	True				
ANR	54097	ElseStatement	else		54070	0					
ANR	54098	IfStatement	"if ( d -> m_line == QLatin1String ( ""[KCrash Handler]\\n"" ) )"		54070	0					
ANR	54099	Condition	"d -> m_line == QLatin1String ( ""[KCrash Handler]\\n"" )"	53:15:1492:1539	54070	0	True				
ANR	54100	EqualityExpression	"d -> m_line == QLatin1String ( ""[KCrash Handler]\\n"" )"		54070	0		==			
ANR	54101	PtrMemberAccess	d -> m_line		54070	0					
ANR	54102	Identifier	d		54070	0					
ANR	54103	Identifier	m_line		54070	1					
ANR	54104	CallExpression	"QLatin1String ( ""[KCrash Handler]\\n"" )"		54070	1					
ANR	54105	Callee	QLatin1String		54070	0					
ANR	54106	Identifier	QLatin1String		54070	0					
ANR	54107	ArgumentList	"""[KCrash Handler]\\n"""		54070	1					
ANR	54108	Argument	"""[KCrash Handler]\\n"""		54070	0					
ANR	54109	PrimaryExpression	"""[KCrash Handler]\\n"""		54070	0					
ANR	54110	CompoundStatement		7:65:178:178	54070	1					
ANR	54111	ExpressionStatement	d -> m_type = KCrash	54:8:1552:1570	54070	0	True				
ANR	54112	AssignmentExpression	d -> m_type = KCrash		54070	0		=			
ANR	54113	PtrMemberAccess	d -> m_type		54070	0					
ANR	54114	Identifier	d		54070	0					
ANR	54115	Identifier	m_type		54070	1					
ANR	54116	Identifier	KCrash		54070	1					
ANR	54117	ReturnStatement	return ;	55:8:1580:1586	54070	1	True				
ANR	54118	ElseStatement	else		54070	0					
ANR	54119	IfStatement	"if ( d -> m_line . contains ( QStringLiteral ( ""<signal handler called>"" ) ) )"		54070	0					
ANR	54120	Condition	"d -> m_line . contains ( QStringLiteral ( ""<signal handler called>"" ) )"	56:15:1603:1663	54070	0	True				
ANR	54121	CallExpression	"d -> m_line . contains ( QStringLiteral ( ""<signal handler called>"" ) )"		54070	0					
ANR	54122	Callee	d -> m_line . contains		54070	0					
ANR	54123	MemberAccess	d -> m_line . contains		54070	0					
ANR	54124	PtrMemberAccess	d -> m_line		54070	0					
ANR	54125	Identifier	d		54070	0					
ANR	54126	Identifier	m_line		54070	1					
ANR	54127	Identifier	contains		54070	1					
ANR	54128	ArgumentList	"QStringLiteral ( ""<signal handler called>"" )"		54070	1					
ANR	54129	Argument	"QStringLiteral ( ""<signal handler called>"" )"		54070	0					
ANR	54130	CallExpression	"QStringLiteral ( ""<signal handler called>"" )"		54070	0					
ANR	54131	Callee	QStringLiteral		54070	0					
ANR	54132	Identifier	QStringLiteral		54070	0					
ANR	54133	ArgumentList	"""<signal handler called>"""		54070	1					
ANR	54134	Argument	"""<signal handler called>"""		54070	0					
ANR	54135	PrimaryExpression	"""<signal handler called>"""		54070	0					
ANR	54136	CompoundStatement		10:78:302:302	54070	1					
ANR	54137	ExpressionStatement	d -> m_type = SignalHandlerStart	57:8:1676:1706	54070	0	True				
ANR	54138	AssignmentExpression	d -> m_type = SignalHandlerStart		54070	0		=			
ANR	54139	PtrMemberAccess	d -> m_type		54070	0					
ANR	54140	Identifier	d		54070	0					
ANR	54141	Identifier	m_type		54070	1					
ANR	54142	Identifier	SignalHandlerStart		54070	1					
ANR	54143	ReturnStatement	return ;	58:8:1716:1722	54070	1	True				
ANR	54144	Statement	regExp	61:4:1735:1740	54070	2	True				
ANR	54145	Statement	.	61:10:1741:1741	54070	3	True				
ANR	54146	Statement	setPattern	61:11:1742:1751	54070	4	True				
ANR	54147	Statement	(	61:21:1752:1752	54070	5	True				
ANR	54148	Statement	QStringLiteral	61:22:1753:1766	54070	6	True				
ANR	54149	Statement	(	61:36:1767:1767	54070	7	True				
ANR	54150	Statement	"""^#([0-9]+)"""	61:37:1768:1779	54070	8	True				
ANR	54151	Statement	"""[\\\\s]+(0x[0-9a-f]+[\\\\s]+in[\\\\s]+)?"""	62:22:1846:1881	54070	9	True				
ANR	54152	Statement	"""((\\\\(anonymous namespace\\\\)::)?[^\\\\(]+)"""	63:22:1947:1987	54070	10	True				
ANR	54153	Statement	"""(\\\\(.*\\\\))?"""	66:22:2219:2231	54070	11	True				
ANR	54154	Statement	"""[\\\\s]+(const[\\\\s]+)?"""	68:22:2372:2393	54070	12	True				
ANR	54155	Statement	"""\\\\(.*\\\\)"""	69:22:2457:2466	54070	13	True				
ANR	54156	Statement	"""([\\\\s]+"""	71:22:2620:2628	54070	14	True				
ANR	54157	Statement	"""(from|at)[\\\\s]+"""	72:22:2693:2709	54070	15	True				
ANR	54158	Statement	"""(.+)"""	73:22:2760:2765	54070	16	True				
ANR	54159	Statement	""")?\\n$"""	74:22:2849:2855	54070	17	True				
ANR	54160	Statement	)	74:29:2856:2856	54070	18	True				
ANR	54161	Statement	)	74:30:2857:2857	54070	19	True				
ANR	54162	ExpressionStatement		74:31:2858:2858	54070	20	True				
ANR	54163	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		54070	21					
ANR	54164	Condition	regExp . exactMatch ( d -> m_line )	78:8:3065:3092	54070	0	True				
ANR	54165	CallExpression	regExp . exactMatch ( d -> m_line )		54070	0					
ANR	54166	Callee	regExp . exactMatch		54070	0					
ANR	54167	MemberAccess	regExp . exactMatch		54070	0					
ANR	54168	Identifier	regExp		54070	0					
ANR	54169	Identifier	exactMatch		54070	1					
ANR	54170	ArgumentList	d -> m_line		54070	1					
ANR	54171	Argument	d -> m_line		54070	0					
ANR	54172	PtrMemberAccess	d -> m_line		54070	0					
ANR	54173	Identifier	d		54070	0					
ANR	54174	Identifier	m_line		54070	1					
ANR	54175	CompoundStatement		32:38:1731:1731	54070	1					
ANR	54176	ExpressionStatement	d -> m_type = StackFrame	79:8:3105:3127	54070	0	True				
ANR	54177	AssignmentExpression	d -> m_type = StackFrame		54070	0		=			
ANR	54178	PtrMemberAccess	d -> m_type		54070	0					
ANR	54179	Identifier	d		54070	0					
ANR	54180	Identifier	m_type		54070	1					
ANR	54181	Identifier	StackFrame		54070	1					
ANR	54182	ExpressionStatement	d -> m_stackFrameNumber = regExp . cap ( 1 ) . toInt ( )	80:8:3137:3182	54070	1	True				
ANR	54183	AssignmentExpression	d -> m_stackFrameNumber = regExp . cap ( 1 ) . toInt ( )		54070	0		=			
ANR	54184	PtrMemberAccess	d -> m_stackFrameNumber		54070	0					
ANR	54185	Identifier	d		54070	0					
ANR	54186	Identifier	m_stackFrameNumber		54070	1					
ANR	54187	CallExpression	regExp . cap ( 1 ) . toInt ( )		54070	1					
ANR	54188	Callee	regExp . cap ( 1 ) . toInt		54070	0					
ANR	54189	MemberAccess	regExp . cap ( 1 ) . toInt		54070	0					
ANR	54190	CallExpression	regExp . cap ( 1 )		54070	0					
ANR	54191	Callee	regExp . cap		54070	0					
ANR	54192	MemberAccess	regExp . cap		54070	0					
ANR	54193	Identifier	regExp		54070	0					
ANR	54194	Identifier	cap		54070	1					
ANR	54195	ArgumentList	1		54070	1					
ANR	54196	Argument	1		54070	0					
ANR	54197	PrimaryExpression	1		54070	0					
ANR	54198	Identifier	toInt		54070	1					
ANR	54199	ArgumentList			54070	1					
ANR	54200	ExpressionStatement	d -> m_functionName = regExp . cap ( 3 ) . trimmed ( )	81:8:3192:3235	54070	2	True				
ANR	54201	AssignmentExpression	d -> m_functionName = regExp . cap ( 3 ) . trimmed ( )		54070	0		=			
ANR	54202	PtrMemberAccess	d -> m_functionName		54070	0					
ANR	54203	Identifier	d		54070	0					
ANR	54204	Identifier	m_functionName		54070	1					
ANR	54205	CallExpression	regExp . cap ( 3 ) . trimmed ( )		54070	1					
ANR	54206	Callee	regExp . cap ( 3 ) . trimmed		54070	0					
ANR	54207	MemberAccess	regExp . cap ( 3 ) . trimmed		54070	0					
ANR	54208	CallExpression	regExp . cap ( 3 )		54070	0					
ANR	54209	Callee	regExp . cap		54070	0					
ANR	54210	MemberAccess	regExp . cap		54070	0					
ANR	54211	Identifier	regExp		54070	0					
ANR	54212	Identifier	cap		54070	1					
ANR	54213	ArgumentList	3		54070	1					
ANR	54214	Argument	3		54070	0					
ANR	54215	PrimaryExpression	3		54070	0					
ANR	54216	Identifier	trimmed		54070	1					
ANR	54217	ArgumentList			54070	1					
ANR	54218	IfStatement	if ( ! regExp . cap ( 7 ) . isEmpty ( ) )		54070	3					
ANR	54219	Condition	! regExp . cap ( 7 ) . isEmpty ( )	83:12:3250:3273	54070	0	True				
ANR	54220	UnaryOperationExpression	! regExp . cap ( 7 ) . isEmpty ( )		54070	0					
ANR	54221	UnaryOperator	!		54070	0					
ANR	54222	CallExpression	regExp . cap ( 7 ) . isEmpty ( )		54070	1					
ANR	54223	Callee	regExp . cap ( 7 ) . isEmpty		54070	0					
ANR	54224	MemberAccess	regExp . cap ( 7 ) . isEmpty		54070	0					
ANR	54225	CallExpression	regExp . cap ( 7 )		54070	0					
ANR	54226	Callee	regExp . cap		54070	0					
ANR	54227	MemberAccess	regExp . cap		54070	0					
ANR	54228	Identifier	regExp		54070	0					
ANR	54229	Identifier	cap		54070	1					
ANR	54230	ArgumentList	7		54070	1					
ANR	54231	Argument	7		54070	0					
ANR	54232	PrimaryExpression	7		54070	0					
ANR	54233	Identifier	isEmpty		54070	1					
ANR	54234	ArgumentList			54070	1					
ANR	54235	CompoundStatement		37:38:1912:1912	54070	1					
ANR	54236	IfStatement	"if ( regExp . cap ( 8 ) == QLatin1String ( ""at"" ) )"		54070	0					
ANR	54237	Condition	"regExp . cap ( 8 ) == QLatin1String ( ""at"" )"	84:16:3343:3378	54070	0	True				
ANR	54238	EqualityExpression	"regExp . cap ( 8 ) == QLatin1String ( ""at"" )"		54070	0		==			
ANR	54239	CallExpression	regExp . cap ( 8 )		54070	0					
ANR	54240	Callee	regExp . cap		54070	0					
ANR	54241	MemberAccess	regExp . cap		54070	0					
ANR	54242	Identifier	regExp		54070	0					
ANR	54243	Identifier	cap		54070	1					
ANR	54244	ArgumentList	8		54070	1					
ANR	54245	Argument	8		54070	0					
ANR	54246	PrimaryExpression	8		54070	0					
ANR	54247	CallExpression	"QLatin1String ( ""at"" )"		54070	1					
ANR	54248	Callee	QLatin1String		54070	0					
ANR	54249	Identifier	QLatin1String		54070	0					
ANR	54250	ArgumentList	"""at"""		54070	1					
ANR	54251	Argument	"""at"""		54070	0					
ANR	54252	PrimaryExpression	"""at"""		54070	0					
ANR	54253	CompoundStatement		38:54:2017:2017	54070	1					
ANR	54254	ExpressionStatement	d -> m_file = regExp . cap ( 9 )	85:16:3434:3459	54070	0	True				
ANR	54255	AssignmentExpression	d -> m_file = regExp . cap ( 9 )		54070	0		=			
ANR	54256	PtrMemberAccess	d -> m_file		54070	0					
ANR	54257	Identifier	d		54070	0					
ANR	54258	Identifier	m_file		54070	1					
ANR	54259	CallExpression	regExp . cap ( 9 )		54070	1					
ANR	54260	Callee	regExp . cap		54070	0					
ANR	54261	MemberAccess	regExp . cap		54070	0					
ANR	54262	Identifier	regExp		54070	0					
ANR	54263	Identifier	cap		54070	1					
ANR	54264	ArgumentList	9		54070	1					
ANR	54265	Argument	9		54070	0					
ANR	54266	PrimaryExpression	9		54070	0					
ANR	54267	ElseStatement	else		54070	0					
ANR	54268	CompoundStatement		40:19:2116:2116	54070	0					
ANR	54269	ExpressionStatement	d -> m_library = regExp . cap ( 9 )	87:16:3531:3559	54070	0	True				
ANR	54270	AssignmentExpression	d -> m_library = regExp . cap ( 9 )		54070	0		=			
ANR	54271	PtrMemberAccess	d -> m_library		54070	0					
ANR	54272	Identifier	d		54070	0					
ANR	54273	Identifier	m_library		54070	1					
ANR	54274	CallExpression	regExp . cap ( 9 )		54070	1					
ANR	54275	Callee	regExp . cap		54070	0					
ANR	54276	MemberAccess	regExp . cap		54070	0					
ANR	54277	Identifier	regExp		54070	0					
ANR	54278	Identifier	cap		54070	1					
ANR	54279	ArgumentList	9		54070	1					
ANR	54280	Argument	9		54070	0					
ANR	54281	PrimaryExpression	9		54070	0					
ANR	54282	ExpressionStatement	qDebug ( ) << d -> m_stackFrameNumber << d -> m_functionName << d -> m_file << d -> m_library	91:8:3594:3677	54070	4	True				
ANR	54283	ShiftExpression	qDebug ( ) << d -> m_stackFrameNumber << d -> m_functionName << d -> m_file << d -> m_library		54070	0		<<			
ANR	54284	CallExpression	qDebug ( )		54070	0					
ANR	54285	Callee	qDebug		54070	0					
ANR	54286	Identifier	qDebug		54070	0					
ANR	54287	ArgumentList			54070	1					
ANR	54288	ShiftExpression	d -> m_stackFrameNumber << d -> m_functionName << d -> m_file << d -> m_library		54070	1		<<			
ANR	54289	PtrMemberAccess	d -> m_stackFrameNumber		54070	0					
ANR	54290	Identifier	d		54070	0					
ANR	54291	Identifier	m_stackFrameNumber		54070	1					
ANR	54292	ShiftExpression	d -> m_functionName << d -> m_file << d -> m_library		54070	1		<<			
ANR	54293	PtrMemberAccess	d -> m_functionName		54070	0					
ANR	54294	Identifier	d		54070	0					
ANR	54295	Identifier	m_functionName		54070	1					
ANR	54296	ShiftExpression	d -> m_file << d -> m_library		54070	1		<<			
ANR	54297	PtrMemberAccess	d -> m_file		54070	0					
ANR	54298	Identifier	d		54070	0					
ANR	54299	Identifier	m_file		54070	1					
ANR	54300	PtrMemberAccess	d -> m_library		54070	1					
ANR	54301	Identifier	d		54070	0					
ANR	54302	Identifier	m_library		54070	1					
ANR	54303	ReturnStatement	return ;	92:8:3687:3693	54070	5	True				
ANR	54304	Statement	regExp	95:4:3706:3711	54070	22	True				
ANR	54305	Statement	.	95:10:3712:3712	54070	23	True				
ANR	54306	Statement	setPattern	95:11:3713:3722	54070	24	True				
ANR	54307	Statement	(	95:21:3723:3723	54070	25	True				
ANR	54308	Statement	QStringLiteral	95:22:3724:3737	54070	26	True				
ANR	54309	Statement	(	95:36:3738:3738	54070	27	True				
ANR	54310	Statement	""".*\\\\(no debugging symbols found\\\\).*|"""	95:37:3739:3777	54070	28	True				
ANR	54311	Statement	""".*\\\\[Thread debugging using libthread_db enabled\\\\].*|"""	96:22:3801:3856	54070	29	True				
ANR	54312	Statement	""".*\\\\[New .*|"""	97:22:3880:3893	54070	30	True				
ANR	54313	Statement	"""0x[0-9a-f]+.*|"""	98:22:3917:3932	54070	31	True				
ANR	54314	Statement	"""Current language:.*"""	99:22:3956:3976	54070	32	True				
ANR	54315	Statement	)	99:43:3977:3977	54070	33	True				
ANR	54316	Statement	)	99:44:3978:3978	54070	34	True				
ANR	54317	ExpressionStatement		99:45:3979:3979	54070	35	True				
ANR	54318	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		54070	36					
ANR	54319	Condition	regExp . exactMatch ( d -> m_line )	100:8:3989:4016	54070	0	True				
ANR	54320	CallExpression	regExp . exactMatch ( d -> m_line )		54070	0					
ANR	54321	Callee	regExp . exactMatch		54070	0					
ANR	54322	MemberAccess	regExp . exactMatch		54070	0					
ANR	54323	Identifier	regExp		54070	0					
ANR	54324	Identifier	exactMatch		54070	1					
ANR	54325	ArgumentList	d -> m_line		54070	1					
ANR	54326	Argument	d -> m_line		54070	0					
ANR	54327	PtrMemberAccess	d -> m_line		54070	0					
ANR	54328	Identifier	d		54070	0					
ANR	54329	Identifier	m_line		54070	1					
ANR	54330	CompoundStatement		54:38:2655:2655	54070	1					
ANR	54331	ExpressionStatement	"qDebug ( ) << ""garbage detected:"" << d -> m_line"	101:8:4029:4073	54070	0	True				
ANR	54332	ShiftExpression	"qDebug ( ) << ""garbage detected:"" << d -> m_line"		54070	0		<<			
ANR	54333	CallExpression	qDebug ( )		54070	0					
ANR	54334	Callee	qDebug		54070	0					
ANR	54335	Identifier	qDebug		54070	0					
ANR	54336	ArgumentList			54070	1					
ANR	54337	ShiftExpression	"""garbage detected:"" << d -> m_line"		54070	1		<<			
ANR	54338	PrimaryExpression	"""garbage detected:"""		54070	0					
ANR	54339	PtrMemberAccess	d -> m_line		54070	1					
ANR	54340	Identifier	d		54070	0					
ANR	54341	Identifier	m_line		54070	1					
ANR	54342	ExpressionStatement	d -> m_type = Crap	102:8:4083:4099	54070	1	True				
ANR	54343	AssignmentExpression	d -> m_type = Crap		54070	0		=			
ANR	54344	PtrMemberAccess	d -> m_type		54070	0					
ANR	54345	Identifier	d		54070	0					
ANR	54346	Identifier	m_type		54070	1					
ANR	54347	Identifier	Crap		54070	1					
ANR	54348	ReturnStatement	return ;	103:8:4109:4115	54070	2	True				
ANR	54349	ExpressionStatement	"regExp . setPattern ( QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" ) )"	106:4:4128:4220	54070	37	True				
ANR	54350	CallExpression	"regExp . setPattern ( QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" ) )"		54070	0					
ANR	54351	Callee	regExp . setPattern		54070	0					
ANR	54352	MemberAccess	regExp . setPattern		54070	0					
ANR	54353	Identifier	regExp		54070	0					
ANR	54354	Identifier	setPattern		54070	1					
ANR	54355	ArgumentList	"QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" )"		54070	1					
ANR	54356	Argument	"QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" )"		54070	0					
ANR	54357	CallExpression	"QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" )"		54070	0					
ANR	54358	Callee	QStringLiteral		54070	0					
ANR	54359	Identifier	QStringLiteral		54070	0					
ANR	54360	ArgumentList	"""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"""		54070	1					
ANR	54361	Argument	"""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"""		54070	0					
ANR	54362	PrimaryExpression	"""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"""		54070	0					
ANR	54363	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		54070	38					
ANR	54364	Condition	regExp . exactMatch ( d -> m_line )	107:8:4230:4257	54070	0	True				
ANR	54365	CallExpression	regExp . exactMatch ( d -> m_line )		54070	0					
ANR	54366	Callee	regExp . exactMatch		54070	0					
ANR	54367	MemberAccess	regExp . exactMatch		54070	0					
ANR	54368	Identifier	regExp		54070	0					
ANR	54369	Identifier	exactMatch		54070	1					
ANR	54370	ArgumentList	d -> m_line		54070	1					
ANR	54371	Argument	d -> m_line		54070	0					
ANR	54372	PtrMemberAccess	d -> m_line		54070	0					
ANR	54373	Identifier	d		54070	0					
ANR	54374	Identifier	m_line		54070	1					
ANR	54375	CompoundStatement		61:38:2896:2896	54070	1					
ANR	54376	ExpressionStatement	"qDebug ( ) << ""thread start detected:"" << d -> m_line"	108:8:4270:4319	54070	0	True				
ANR	54377	ShiftExpression	"qDebug ( ) << ""thread start detected:"" << d -> m_line"		54070	0		<<			
ANR	54378	CallExpression	qDebug ( )		54070	0					
ANR	54379	Callee	qDebug		54070	0					
ANR	54380	Identifier	qDebug		54070	0					
ANR	54381	ArgumentList			54070	1					
ANR	54382	ShiftExpression	"""thread start detected:"" << d -> m_line"		54070	1		<<			
ANR	54383	PrimaryExpression	"""thread start detected:"""		54070	0					
ANR	54384	PtrMemberAccess	d -> m_line		54070	1					
ANR	54385	Identifier	d		54070	0					
ANR	54386	Identifier	m_line		54070	1					
ANR	54387	ExpressionStatement	d -> m_type = ThreadStart	109:8:4329:4352	54070	1	True				
ANR	54388	AssignmentExpression	d -> m_type = ThreadStart		54070	0		=			
ANR	54389	PtrMemberAccess	d -> m_type		54070	0					
ANR	54390	Identifier	d		54070	0					
ANR	54391	Identifier	m_type		54070	1					
ANR	54392	Identifier	ThreadStart		54070	1					
ANR	54393	ReturnStatement	return ;	110:8:4362:4368	54070	2	True				
ANR	54394	ExpressionStatement	"regExp . setPattern ( QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" ) )"	113:4:4381:4459	54070	39	True				
ANR	54395	CallExpression	"regExp . setPattern ( QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" ) )"		54070	0					
ANR	54396	Callee	regExp . setPattern		54070	0					
ANR	54397	MemberAccess	regExp . setPattern		54070	0					
ANR	54398	Identifier	regExp		54070	0					
ANR	54399	Identifier	setPattern		54070	1					
ANR	54400	ArgumentList	"QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" )"		54070	1					
ANR	54401	Argument	"QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" )"		54070	0					
ANR	54402	CallExpression	"QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" )"		54070	0					
ANR	54403	Callee	QStringLiteral		54070	0					
ANR	54404	Identifier	QStringLiteral		54070	0					
ANR	54405	ArgumentList	"""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"""		54070	1					
ANR	54406	Argument	"""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"""		54070	0					
ANR	54407	PrimaryExpression	"""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"""		54070	0					
ANR	54408	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		54070	40					
ANR	54409	Condition	regExp . exactMatch ( d -> m_line )	114:8:4469:4496	54070	0	True				
ANR	54410	CallExpression	regExp . exactMatch ( d -> m_line )		54070	0					
ANR	54411	Callee	regExp . exactMatch		54070	0					
ANR	54412	MemberAccess	regExp . exactMatch		54070	0					
ANR	54413	Identifier	regExp		54070	0					
ANR	54414	Identifier	exactMatch		54070	1					
ANR	54415	ArgumentList	d -> m_line		54070	1					
ANR	54416	Argument	d -> m_line		54070	0					
ANR	54417	PtrMemberAccess	d -> m_line		54070	0					
ANR	54418	Identifier	d		54070	0					
ANR	54419	Identifier	m_line		54070	1					
ANR	54420	CompoundStatement		68:38:3135:3135	54070	1					
ANR	54421	ExpressionStatement	"qDebug ( ) << ""thread indicator detected:"" << d -> m_line"	115:8:4509:4562	54070	0	True				
ANR	54422	ShiftExpression	"qDebug ( ) << ""thread indicator detected:"" << d -> m_line"		54070	0		<<			
ANR	54423	CallExpression	qDebug ( )		54070	0					
ANR	54424	Callee	qDebug		54070	0					
ANR	54425	Identifier	qDebug		54070	0					
ANR	54426	ArgumentList			54070	1					
ANR	54427	ShiftExpression	"""thread indicator detected:"" << d -> m_line"		54070	1		<<			
ANR	54428	PrimaryExpression	"""thread indicator detected:"""		54070	0					
ANR	54429	PtrMemberAccess	d -> m_line		54070	1					
ANR	54430	Identifier	d		54070	0					
ANR	54431	Identifier	m_line		54070	1					
ANR	54432	ExpressionStatement	d -> m_type = ThreadIndicator	116:8:4572:4599	54070	1	True				
ANR	54433	AssignmentExpression	d -> m_type = ThreadIndicator		54070	0		=			
ANR	54434	PtrMemberAccess	d -> m_type		54070	0					
ANR	54435	Identifier	d		54070	0					
ANR	54436	Identifier	m_type		54070	1					
ANR	54437	Identifier	ThreadIndicator		54070	1					
ANR	54438	ReturnStatement	return ;	117:8:4609:4615	54070	2	True				
ANR	54439	ExpressionStatement	"qDebug ( ) << ""line"" << d -> m_line << ""did not match"""	120:4:4628:4678	54070	41	True				
ANR	54440	ShiftExpression	"qDebug ( ) << ""line"" << d -> m_line << ""did not match"""		54070	0		<<			
ANR	54441	CallExpression	qDebug ( )		54070	0					
ANR	54442	Callee	qDebug		54070	0					
ANR	54443	Identifier	qDebug		54070	0					
ANR	54444	ArgumentList			54070	1					
ANR	54445	ShiftExpression	"""line"" << d -> m_line << ""did not match"""		54070	1		<<			
ANR	54446	PrimaryExpression	"""line"""		54070	0					
ANR	54447	ShiftExpression	"d -> m_line << ""did not match"""		54070	1		<<			
ANR	54448	PtrMemberAccess	d -> m_line		54070	0					
ANR	54449	Identifier	d		54070	0					
ANR	54450	Identifier	m_line		54070	1					
ANR	54451	PrimaryExpression	"""did not match"""		54070	1					
ANR	54452	ReturnType	void		54070	1					
ANR	54453	Identifier	BacktraceLineGdb :: parse		54070	2					
ANR	54454	ParameterList			54070	3					
ANR	54455	CFGEntryNode	ENTRY		54070		True				
ANR	54456	CFGExitNode	EXIT		54070		True				
ANR	54457	Symbol	regExp . cap ( 7 ) . isEmpty		54070						
ANR	54458	Symbol	ThreadStart		54070						
ANR	54459	Symbol	d		54070						
ANR	54460	Symbol	ThreadIndicator		54070						
ANR	54461	Symbol	regExp . cap ( 3 ) . trimmed		54070						
ANR	54462	Symbol	regExp . cap		54070						
ANR	54463	Symbol	d -> m_file		54070						
ANR	54464	Symbol	EmptyLine		54070						
ANR	54465	Symbol	d -> m_line . contains		54070						
ANR	54466	Symbol	SignalHandlerStart		54070						
ANR	54467	Symbol	regExp		54070						
ANR	54468	Symbol	* d		54070						
ANR	54469	Symbol	regExp . exactMatch		54070						
ANR	54470	Symbol	d -> m_line		54070						
ANR	54471	Symbol	QLatin1String		54070						
ANR	54472	Symbol	d -> m_type		54070						
ANR	54473	Symbol	regExp . cap ( 1 ) . toInt		54070						
ANR	54474	Symbol	d -> m_functionName		54070						
ANR	54475	Symbol	StackFrame		54070						
ANR	54476	Symbol	d -> m_stackFrameNumber		54070						
ANR	54477	Symbol	QStringLiteral		54070						
ANR	54478	Symbol	KCrash		54070						
ANR	54479	Symbol	d -> m_library		54070						
ANR	54480	Symbol	Crap		54070						
ANR	54481	Function	BacktraceLineGdb :: rate	123:0:4683:5223							
ANR	54482	FunctionDef	BacktraceLineGdb :: rate ()		54481	0					
ANR	54483	CompoundStatement		124:0:4713:5223	54481	0					
ANR	54484	IdentifierDeclStatement	LineRating r ;	125:4:4719:4731	54481	0	True				
ANR	54485	IdentifierDecl	r		54481	0					
ANR	54486	IdentifierDeclType	LineRating		54481	0					
ANR	54487	Identifier	r		54481	1					
ANR	54488	IfStatement	if ( ! fileName ( ) . isEmpty ( ) )		54481	1					
ANR	54489	Condition	! fileName ( ) . isEmpty ( )	128:8:4801:4821	54481	0	True				
ANR	54490	UnaryOperationExpression	! fileName ( ) . isEmpty ( )		54481	0					
ANR	54491	UnaryOperator	!		54481	0					
ANR	54492	CallExpression	fileName ( ) . isEmpty ( )		54481	1					
ANR	54493	Callee	fileName ( ) . isEmpty		54481	0					
ANR	54494	MemberAccess	fileName ( ) . isEmpty		54481	0					
ANR	54495	CallExpression	fileName ( )		54481	0					
ANR	54496	Callee	fileName		54481	0					
ANR	54497	Identifier	fileName		54481	0					
ANR	54498	ArgumentList			54481	1					
ANR	54499	Identifier	isEmpty		54481	1					
ANR	54500	ArgumentList			54481	1					
ANR	54501	CompoundStatement		5:31:110:110	54481	1					
ANR	54502	ExpressionStatement	r = Good	129:8:4834:4842	54481	0	True				
ANR	54503	AssignmentExpression	r = Good		54481	0		=			
ANR	54504	Identifier	r		54481	0					
ANR	54505	Identifier	Good		54481	1					
ANR	54506	ElseStatement	else		54481	0					
ANR	54507	IfStatement	if ( ! libraryName ( ) . isEmpty ( ) )		54481	0					
ANR	54508	Condition	! libraryName ( ) . isEmpty ( )	130:15:4859:4882	54481	0	True				
ANR	54509	UnaryOperationExpression	! libraryName ( ) . isEmpty ( )		54481	0					
ANR	54510	UnaryOperator	!		54481	0					
ANR	54511	CallExpression	libraryName ( ) . isEmpty ( )		54481	1					
ANR	54512	Callee	libraryName ( ) . isEmpty		54481	0					
ANR	54513	MemberAccess	libraryName ( ) . isEmpty		54481	0					
ANR	54514	CallExpression	libraryName ( )		54481	0					
ANR	54515	Callee	libraryName		54481	0					
ANR	54516	Identifier	libraryName		54481	0					
ANR	54517	ArgumentList			54481	1					
ANR	54518	Identifier	isEmpty		54481	1					
ANR	54519	ArgumentList			54481	1					
ANR	54520	CompoundStatement		7:41:171:171	54481	1					
ANR	54521	IfStatement	"if ( functionName ( ) == QLatin1String ( ""??"" ) )"		54481	0					
ANR	54522	Condition	"functionName ( ) == QLatin1String ( ""??"" )"	131:12:4899:4935	54481	0	True				
ANR	54523	EqualityExpression	"functionName ( ) == QLatin1String ( ""??"" )"		54481	0		==			
ANR	54524	CallExpression	functionName ( )		54481	0					
ANR	54525	Callee	functionName		54481	0					
ANR	54526	Identifier	functionName		54481	0					
ANR	54527	ArgumentList			54481	1					
ANR	54528	CallExpression	"QLatin1String ( ""??"" )"		54481	1					
ANR	54529	Callee	QLatin1String		54481	0					
ANR	54530	Identifier	QLatin1String		54481	0					
ANR	54531	ArgumentList	"""??"""		54481	1					
ANR	54532	Argument	"""??"""		54481	0					
ANR	54533	PrimaryExpression	"""??"""		54481	0					
ANR	54534	CompoundStatement		8:51:224:224	54481	1					
ANR	54535	ExpressionStatement	r = MissingFunction	132:12:4952:4971	54481	0	True				
ANR	54536	AssignmentExpression	r = MissingFunction		54481	0		=			
ANR	54537	Identifier	r		54481	0					
ANR	54538	Identifier	MissingFunction		54481	1					
ANR	54539	ElseStatement	else		54481	0					
ANR	54540	CompoundStatement		10:15:274:274	54481	0					
ANR	54541	ExpressionStatement	r = MissingSourceFile	134:12:5002:5023	54481	0	True				
ANR	54542	AssignmentExpression	r = MissingSourceFile		54481	0		=			
ANR	54543	Identifier	r		54481	0					
ANR	54544	Identifier	MissingSourceFile		54481	1					
ANR	54545	ElseStatement	else		54481	0					
ANR	54546	CompoundStatement		13:11:332:332	54481	0					
ANR	54547	IfStatement	"if ( functionName ( ) == QLatin1String ( ""??"" ) )"		54481	0					
ANR	54548	Condition	"functionName ( ) == QLatin1String ( ""??"" )"	137:12:5060:5096	54481	0	True				
ANR	54549	EqualityExpression	"functionName ( ) == QLatin1String ( ""??"" )"		54481	0		==			
ANR	54550	CallExpression	functionName ( )		54481	0					
ANR	54551	Callee	functionName		54481	0					
ANR	54552	Identifier	functionName		54481	0					
ANR	54553	ArgumentList			54481	1					
ANR	54554	CallExpression	"QLatin1String ( ""??"" )"		54481	1					
ANR	54555	Callee	QLatin1String		54481	0					
ANR	54556	Identifier	QLatin1String		54481	0					
ANR	54557	ArgumentList	"""??"""		54481	1					
ANR	54558	Argument	"""??"""		54481	0					
ANR	54559	PrimaryExpression	"""??"""		54481	0					
ANR	54560	CompoundStatement		14:51:385:385	54481	1					
ANR	54561	ExpressionStatement	r = MissingEverything	138:12:5113:5134	54481	0	True				
ANR	54562	AssignmentExpression	r = MissingEverything		54481	0		=			
ANR	54563	Identifier	r		54481	0					
ANR	54564	Identifier	MissingEverything		54481	1					
ANR	54565	ElseStatement	else		54481	0					
ANR	54566	CompoundStatement		16:15:437:437	54481	0					
ANR	54567	ExpressionStatement	r = MissingLibrary	140:12:5165:5183	54481	0	True				
ANR	54568	AssignmentExpression	r = MissingLibrary		54481	0		=			
ANR	54569	Identifier	r		54481	0					
ANR	54570	Identifier	MissingLibrary		54481	1					
ANR	54571	ExpressionStatement	d -> m_rating = r	144:4:5206:5221	54481	2	True				
ANR	54572	AssignmentExpression	d -> m_rating = r		54481	0		=			
ANR	54573	PtrMemberAccess	d -> m_rating		54481	0					
ANR	54574	Identifier	d		54481	0					
ANR	54575	Identifier	m_rating		54481	1					
ANR	54576	Identifier	r		54481	1					
ANR	54577	ReturnType	void		54481	1					
ANR	54578	Identifier	BacktraceLineGdb :: rate		54481	2					
ANR	54579	ParameterList			54481	3					
ANR	54580	CFGEntryNode	ENTRY		54481		True				
ANR	54581	CFGExitNode	EXIT		54481		True				
ANR	54582	Symbol	libraryName		54481						
ANR	54583	Symbol	fileName		54481						
ANR	54584	Symbol	libraryName ( ) . isEmpty		54481						
ANR	54585	Symbol	d		54481						
ANR	54586	Symbol	functionName		54481						
ANR	54587	Symbol	MissingLibrary		54481						
ANR	54588	Symbol	* d		54481						
ANR	54589	Symbol	MissingEverything		54481						
ANR	54590	Symbol	QLatin1String		54481						
ANR	54591	Symbol	MissingFunction		54481						
ANR	54592	Symbol	d -> m_rating		54481						
ANR	54593	Symbol	r		54481						
ANR	54594	Symbol	fileName ( ) . isEmpty		54481						
ANR	54595	Symbol	Good		54481						
ANR	54596	Symbol	MissingSourceFile		54481						
ANR	54597	ClassDef	BacktraceParserGdbPrivate	151:0:5278:5696							
ANR	54598	Function	BacktraceParserGdbPrivate	154:4:5356:5544							
ANR	54599	FunctionDef	BacktraceParserGdbPrivate ()		54598	0					
ANR	54600	CompoundStatement		157:68:5543:5544	54598	0					
ANR	54601	Identifier	BacktraceParserGdbPrivate		54598	1					
ANR	54602	ParameterList			54598	2					
ANR	54603	CFGEntryNode	ENTRY		54598		True				
ANR	54604	CFGExitNode	EXIT		54598		True				
ANR	54605	DeclStmt									
ANR	54606	Decl							QString	QString	m_lineInputBuffer
ANR	54607	DeclStmt									
ANR	54608	Decl							int	int	m_possibleKCrashStart
ANR	54609	DeclStmt									
ANR	54610	Decl							int	int	m_threadsCount
ANR	54611	DeclStmt									
ANR	54612	Decl							bool	bool	m_isBelowSignalHandler
ANR	54613	DeclStmt									
ANR	54614	Decl							bool	bool	m_frameZeroAppeared
ANR	54615	Function	BacktraceParserGdb :: BacktraceParserGdb	166:0:5700:5792							
ANR	54616	FunctionDef	BacktraceParserGdb :: BacktraceParserGdb (QObject * parent)		54615	0					
ANR	54617	CompoundStatement		168:0:5790:5792	54615	0					
ANR	54618	Identifier	BacktraceParserGdb :: BacktraceParserGdb		54615	1					
ANR	54619	ParameterList	QObject * parent		54615	2					
ANR	54620	Parameter	QObject * parent	166:39:5739:5753	54615	0	True				
ANR	54621	ParameterType	QObject *		54615	0					
ANR	54622	Identifier	parent		54615	1					
ANR	54623	CFGEntryNode	ENTRY		54615		True				
ANR	54624	CFGExitNode	EXIT		54615		True				
ANR	54625	Symbol	parent		54615						
ANR	54626	Function	BacktraceParserGdb :: constructPrivate	171:0:5795:5908							
ANR	54627	FunctionDef	BacktraceParserGdb :: constructPrivate ()		54626	0					
ANR	54628	CompoundStatement		172:0:5864:5908	54626	0					
ANR	54629	Statement	return	173:4:5870:5875	54626	0	True				
ANR	54630	Statement	new	173:11:5877:5879	54626	1	True				
ANR	54631	ExpressionStatement	BacktraceParserGdbPrivate	173:15:5881:5906	54626	2	True				
ANR	54632	Identifier	BacktraceParserGdbPrivate		54626	0					
ANR	54633	ReturnType	BacktraceParserPrivate *		54626	1					
ANR	54634	Identifier	BacktraceParserGdb :: constructPrivate		54626	2					
ANR	54635	ParameterList			54626	3					
ANR	54636	CFGEntryNode	ENTRY		54626		True				
ANR	54637	CFGExitNode	EXIT		54626		True				
ANR	54638	Function	BacktraceParserGdb :: newLine	176:0:5911:6643							
ANR	54639	FunctionDef	BacktraceParserGdb :: newLine (const QString & lineStr)		54638	0					
ANR	54640	CompoundStatement		177:0:5969:6643	54638	0					
ANR	54641	ExpressionStatement	Q_D ( BacktraceParserGdb )	178:4:5975:5998	54638	0	True				
ANR	54642	CallExpression	Q_D ( BacktraceParserGdb )		54638	0					
ANR	54643	Callee	Q_D		54638	0					
ANR	54644	Identifier	Q_D		54638	0					
ANR	54645	ArgumentList	BacktraceParserGdb		54638	1					
ANR	54646	Argument	BacktraceParserGdb		54638	0					
ANR	54647	Identifier	BacktraceParserGdb		54638	0					
ANR	54648	IfStatement	if ( d -> m_lineInputBuffer . isEmpty ( ) )		54638	1					
ANR	54649	Condition	d -> m_lineInputBuffer . isEmpty ( )	183:8:6249:6278	54638	0	True				
ANR	54650	CallExpression	d -> m_lineInputBuffer . isEmpty ( )		54638	0					
ANR	54651	Callee	d -> m_lineInputBuffer . isEmpty		54638	0					
ANR	54652	MemberAccess	d -> m_lineInputBuffer . isEmpty		54638	0					
ANR	54653	PtrMemberAccess	d -> m_lineInputBuffer		54638	0					
ANR	54654	Identifier	d		54638	0					
ANR	54655	Identifier	m_lineInputBuffer		54638	1					
ANR	54656	Identifier	isEmpty		54638	1					
ANR	54657	ArgumentList			54638	1					
ANR	54658	CompoundStatement		7:40:311:311	54638	1					
ANR	54659	ExpressionStatement	d -> m_lineInputBuffer = lineStr	184:8:6291:6321	54638	0	True				
ANR	54660	AssignmentExpression	d -> m_lineInputBuffer = lineStr		54638	0		=			
ANR	54661	PtrMemberAccess	d -> m_lineInputBuffer		54638	0					
ANR	54662	Identifier	d		54638	0					
ANR	54663	Identifier	m_lineInputBuffer		54638	1					
ANR	54664	Identifier	lineStr		54638	1					
ANR	54665	ElseStatement	else		54638	0					
ANR	54666	IfStatement	if ( lineStr . startsWith ( QLatin1Char ( ' ' ) ) || lineStr . startsWith ( QLatin1Char ( '\\t' ) ) )		54638	0					
ANR	54667	Condition	lineStr . startsWith ( QLatin1Char ( ' ' ) ) || lineStr . startsWith ( QLatin1Char ( '\\t' ) )	185:15:6338:6414	54638	0	True				
ANR	54668	OrExpression	lineStr . startsWith ( QLatin1Char ( ' ' ) ) || lineStr . startsWith ( QLatin1Char ( '\\t' ) )		54638	0		||			
ANR	54669	CallExpression	lineStr . startsWith ( QLatin1Char ( ' ' ) )		54638	0					
ANR	54670	Callee	lineStr . startsWith		54638	0					
ANR	54671	MemberAccess	lineStr . startsWith		54638	0					
ANR	54672	Identifier	lineStr		54638	0					
ANR	54673	Identifier	startsWith		54638	1					
ANR	54674	ArgumentList	QLatin1Char ( ' ' )		54638	1					
ANR	54675	Argument	QLatin1Char ( ' ' )		54638	0					
ANR	54676	CallExpression	QLatin1Char ( ' ' )		54638	0					
ANR	54677	Callee	QLatin1Char		54638	0					
ANR	54678	Identifier	QLatin1Char		54638	0					
ANR	54679	ArgumentList	' '		54638	1					
ANR	54680	Argument	' '		54638	0					
ANR	54681	PrimaryExpression	' '		54638	0					
ANR	54682	CallExpression	lineStr . startsWith ( QLatin1Char ( '\\t' ) )		54638	1					
ANR	54683	Callee	lineStr . startsWith		54638	0					
ANR	54684	MemberAccess	lineStr . startsWith		54638	0					
ANR	54685	Identifier	lineStr		54638	0					
ANR	54686	Identifier	startsWith		54638	1					
ANR	54687	ArgumentList	QLatin1Char ( '\\t' )		54638	1					
ANR	54688	Argument	QLatin1Char ( '\\t' )		54638	0					
ANR	54689	CallExpression	QLatin1Char ( '\\t' )		54638	0					
ANR	54690	Callee	QLatin1Char		54638	0					
ANR	54691	Identifier	QLatin1Char		54638	0					
ANR	54692	ArgumentList	'\\t'		54638	1					
ANR	54693	Argument	'\\t'		54638	0					
ANR	54694	PrimaryExpression	'\\t'		54638	0					
ANR	54695	CompoundStatement		9:94:447:447	54638	1					
ANR	54696	ExpressionStatement	d -> m_lineInputBuffer . append ( lineStr )	187:8:6505:6541	54638	0	True				
ANR	54697	CallExpression	d -> m_lineInputBuffer . append ( lineStr )		54638	0					
ANR	54698	Callee	d -> m_lineInputBuffer . append		54638	0					
ANR	54699	MemberAccess	d -> m_lineInputBuffer . append		54638	0					
ANR	54700	PtrMemberAccess	d -> m_lineInputBuffer		54638	0					
ANR	54701	Identifier	d		54638	0					
ANR	54702	Identifier	m_lineInputBuffer		54638	1					
ANR	54703	Identifier	append		54638	1					
ANR	54704	ArgumentList	lineStr		54638	1					
ANR	54705	Argument	lineStr		54638	0					
ANR	54706	Identifier	lineStr		54638	0					
ANR	54707	ElseStatement	else		54638	0					
ANR	54708	CompoundStatement		12:11:584:584	54638	0					
ANR	54709	ExpressionStatement	parseLine ( d -> m_lineInputBuffer )	189:8:6564:6595	54638	0	True				
ANR	54710	CallExpression	parseLine ( d -> m_lineInputBuffer )		54638	0					
ANR	54711	Callee	parseLine		54638	0					
ANR	54712	Identifier	parseLine		54638	0					
ANR	54713	ArgumentList	d -> m_lineInputBuffer		54638	1					
ANR	54714	Argument	d -> m_lineInputBuffer		54638	0					
ANR	54715	PtrMemberAccess	d -> m_lineInputBuffer		54638	0					
ANR	54716	Identifier	d		54638	0					
ANR	54717	Identifier	m_lineInputBuffer		54638	1					
ANR	54718	ExpressionStatement	d -> m_lineInputBuffer = lineStr	190:8:6605:6635	54638	1	True				
ANR	54719	AssignmentExpression	d -> m_lineInputBuffer = lineStr		54638	0		=			
ANR	54720	PtrMemberAccess	d -> m_lineInputBuffer		54638	0					
ANR	54721	Identifier	d		54638	0					
ANR	54722	Identifier	m_lineInputBuffer		54638	1					
ANR	54723	Identifier	lineStr		54638	1					
ANR	54724	ReturnType	void		54638	1					
ANR	54725	Identifier	BacktraceParserGdb :: newLine		54638	2					
ANR	54726	ParameterList	const QString & lineStr		54638	3					
ANR	54727	Parameter	const QString & lineStr	176:33:5944:5966	54638	0	True				
ANR	54728	ParameterType	const QString &		54638	0					
ANR	54729	Identifier	lineStr		54638	1					
ANR	54730	CFGEntryNode	ENTRY		54638		True				
ANR	54731	CFGExitNode	EXIT		54638		True				
ANR	54732	Symbol	d -> m_lineInputBuffer		54638						
ANR	54733	Symbol	QLatin1Char		54638						
ANR	54734	Symbol	d		54638						
ANR	54735	Symbol	lineStr		54638						
ANR	54736	Symbol	BacktraceParserGdb		54638						
ANR	54737	Symbol	* d		54638						
ANR	54738	Symbol	lineStr . startsWith		54638						
ANR	54739	Symbol	d -> m_lineInputBuffer . isEmpty		54638						
ANR	54740	Function	BacktraceParserGdb :: parseLine	194:0:6646:8871							
ANR	54741	FunctionDef	BacktraceParserGdb :: parseLine (const QString & lineStr)		54740	0					
ANR	54742	CompoundStatement		195:0:6706:8871	54740	0					
ANR	54743	ExpressionStatement	Q_D ( BacktraceParserGdb )	196:4:6712:6735	54740	0	True				
ANR	54744	CallExpression	Q_D ( BacktraceParserGdb )		54740	0					
ANR	54745	Callee	Q_D		54740	0					
ANR	54746	Identifier	Q_D		54740	0					
ANR	54747	ArgumentList	BacktraceParserGdb		54740	1					
ANR	54748	Argument	BacktraceParserGdb		54740	0					
ANR	54749	Identifier	BacktraceParserGdb		54740	0					
ANR	54750	IdentifierDeclStatement	BacktraceLineGdb line ( lineStr ) ;	198:4:6742:6772	54740	1	True				
ANR	54751	IdentifierDecl	line ( lineStr )		54740	0					
ANR	54752	IdentifierDeclType	BacktraceLineGdb		54740	0					
ANR	54753	Identifier	line		54740	1					
ANR	54754	Identifier	lineStr		54740	2					
ANR	54755	SwitchStatement	switch ( line . type ( ) )		54740	2					
ANR	54756	Condition	line . type ( )	199:12:6786:6796	54740	0	True				
ANR	54757	CallExpression	line . type ( )		54740	0					
ANR	54758	Callee	line . type		54740	0					
ANR	54759	MemberAccess	line . type		54740	0					
ANR	54760	Identifier	line		54740	0					
ANR	54761	Identifier	type		54740	1					
ANR	54762	ArgumentList			54740	1					
ANR	54763	CompoundStatement		5:25:92:92	54740	1					
ANR	54764	Label	case BacktraceLine :: Crap :	200:4:6805:6829	54740	0	True				
ANR	54765	Identifier	BacktraceLine :: Crap		54740	0					
ANR	54766	BreakStatement	break ;	201:8:6839:6844	54740	1	True				
ANR	54767	Label	case BacktraceLine :: ThreadStart :	202:4:6891:6922	54740	2	True				
ANR	54768	Identifier	BacktraceLine :: ThreadStart		54740	0					
ANR	54769	ExpressionStatement	d -> m_linesList . append ( line )	203:8:6932:6959	54740	3	True				
ANR	54770	CallExpression	d -> m_linesList . append ( line )		54740	0					
ANR	54771	Callee	d -> m_linesList . append		54740	0					
ANR	54772	MemberAccess	d -> m_linesList . append		54740	0					
ANR	54773	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54774	Identifier	d		54740	0					
ANR	54775	Identifier	m_linesList		54740	1					
ANR	54776	Identifier	append		54740	1					
ANR	54777	ArgumentList	line		54740	1					
ANR	54778	Argument	line		54740	0					
ANR	54779	Identifier	line		54740	0					
ANR	54780	ExpressionStatement	d -> m_possibleKCrashStart = d -> m_linesList . size ( )	204:8:6969:7017	54740	4	True				
ANR	54781	AssignmentExpression	d -> m_possibleKCrashStart = d -> m_linesList . size ( )		54740	0		=			
ANR	54782	PtrMemberAccess	d -> m_possibleKCrashStart		54740	0					
ANR	54783	Identifier	d		54740	0					
ANR	54784	Identifier	m_possibleKCrashStart		54740	1					
ANR	54785	CallExpression	d -> m_linesList . size ( )		54740	1					
ANR	54786	Callee	d -> m_linesList . size		54740	0					
ANR	54787	MemberAccess	d -> m_linesList . size		54740	0					
ANR	54788	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54789	Identifier	d		54740	0					
ANR	54790	Identifier	m_linesList		54740	1					
ANR	54791	Identifier	size		54740	1					
ANR	54792	ArgumentList			54740	1					
ANR	54793	ExpressionStatement	d -> m_threadsCount ++	205:8:7027:7046	54740	5	True				
ANR	54794	PostIncDecOperationExpression	d -> m_threadsCount ++		54740	0					
ANR	54795	PtrMemberAccess	d -> m_threadsCount		54740	0					
ANR	54796	Identifier	d		54740	0					
ANR	54797	Identifier	m_threadsCount		54740	1					
ANR	54798	IncDec	++		54740	1					
ANR	54799	ExpressionStatement	d -> m_isBelowSignalHandler = false	207:8:7122:7155	54740	6	True				
ANR	54800	AssignmentExpression	d -> m_isBelowSignalHandler = false		54740	0		=			
ANR	54801	PtrMemberAccess	d -> m_isBelowSignalHandler		54740	0					
ANR	54802	Identifier	d		54740	0					
ANR	54803	Identifier	m_isBelowSignalHandler		54740	1					
ANR	54804	Identifier	false		54740	1					
ANR	54805	ExpressionStatement	d -> m_frameZeroAppeared = false	208:8:7165:7195	54740	7	True				
ANR	54806	AssignmentExpression	d -> m_frameZeroAppeared = false		54740	0		=			
ANR	54807	PtrMemberAccess	d -> m_frameZeroAppeared		54740	0					
ANR	54808	Identifier	d		54740	0					
ANR	54809	Identifier	m_frameZeroAppeared		54740	1					
ANR	54810	Identifier	false		54740	1					
ANR	54811	BreakStatement	break ;	209:8:7243:7248	54740	8	True				
ANR	54812	Label	case BacktraceLine :: SignalHandlerStart :	210:4:7254:7292	54740	9	True				
ANR	54813	Identifier	BacktraceLine :: SignalHandlerStart		54740	0					
ANR	54814	IfStatement	if ( ! d -> m_isBelowSignalHandler )		54740	10					
ANR	54815	Condition	! d -> m_isBelowSignalHandler	211:12:7306:7331	54740	0	True				
ANR	54816	UnaryOperationExpression	! d -> m_isBelowSignalHandler		54740	0					
ANR	54817	UnaryOperator	!		54740	0					
ANR	54818	PtrMemberAccess	d -> m_isBelowSignalHandler		54740	1					
ANR	54819	Identifier	d		54740	0					
ANR	54820	Identifier	m_isBelowSignalHandler		54740	1					
ANR	54821	CompoundStatement		17:40:627:627	54740	1					
ANR	54822	ExpressionStatement	"d -> m_linesList . erase ( d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart , d -> m_linesList . end ( ) )"	213:12:7417:7510	54740	0	True				
ANR	54823	CallExpression	"d -> m_linesList . erase ( d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart , d -> m_linesList . end ( ) )"		54740	0					
ANR	54824	Callee	d -> m_linesList . erase		54740	0					
ANR	54825	MemberAccess	d -> m_linesList . erase		54740	0					
ANR	54826	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54827	Identifier	d		54740	0					
ANR	54828	Identifier	m_linesList		54740	1					
ANR	54829	Identifier	erase		54740	1					
ANR	54830	ArgumentList	d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart		54740	1					
ANR	54831	Argument	d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart		54740	0					
ANR	54832	AdditiveExpression	d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart		54740	0		+			
ANR	54833	CallExpression	d -> m_linesList . begin ( )		54740	0					
ANR	54834	Callee	d -> m_linesList . begin		54740	0					
ANR	54835	MemberAccess	d -> m_linesList . begin		54740	0					
ANR	54836	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54837	Identifier	d		54740	0					
ANR	54838	Identifier	m_linesList		54740	1					
ANR	54839	Identifier	begin		54740	1					
ANR	54840	ArgumentList			54740	1					
ANR	54841	PtrMemberAccess	d -> m_possibleKCrashStart		54740	1					
ANR	54842	Identifier	d		54740	0					
ANR	54843	Identifier	m_possibleKCrashStart		54740	1					
ANR	54844	Argument	d -> m_linesList . end ( )		54740	1					
ANR	54845	CallExpression	d -> m_linesList . end ( )		54740	0					
ANR	54846	Callee	d -> m_linesList . end		54740	0					
ANR	54847	MemberAccess	d -> m_linesList . end		54740	0					
ANR	54848	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54849	Identifier	d		54740	0					
ANR	54850	Identifier	m_linesList		54740	1					
ANR	54851	Identifier	end		54740	1					
ANR	54852	ArgumentList			54740	1					
ANR	54853	ExpressionStatement	"d -> m_linesList . insert ( d -> m_possibleKCrashStart , BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) ) )"	214:12:7524:7627	54740	1	True				
ANR	54854	CallExpression	"d -> m_linesList . insert ( d -> m_possibleKCrashStart , BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) ) )"		54740	0					
ANR	54855	Callee	d -> m_linesList . insert		54740	0					
ANR	54856	MemberAccess	d -> m_linesList . insert		54740	0					
ANR	54857	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54858	Identifier	d		54740	0					
ANR	54859	Identifier	m_linesList		54740	1					
ANR	54860	Identifier	insert		54740	1					
ANR	54861	ArgumentList	d -> m_possibleKCrashStart		54740	1					
ANR	54862	Argument	d -> m_possibleKCrashStart		54740	0					
ANR	54863	PtrMemberAccess	d -> m_possibleKCrashStart		54740	0					
ANR	54864	Identifier	d		54740	0					
ANR	54865	Identifier	m_possibleKCrashStart		54740	1					
ANR	54866	Argument	"BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) )"		54740	1					
ANR	54867	CallExpression	"BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) )"		54740	0					
ANR	54868	Callee	BacktraceLineGdb		54740	0					
ANR	54869	Identifier	BacktraceLineGdb		54740	0					
ANR	54870	ArgumentList	"QStringLiteral ( ""[KCrash Handler]\\n"" )"		54740	1					
ANR	54871	Argument	"QStringLiteral ( ""[KCrash Handler]\\n"" )"		54740	0					
ANR	54872	CallExpression	"QStringLiteral ( ""[KCrash Handler]\\n"" )"		54740	0					
ANR	54873	Callee	QStringLiteral		54740	0					
ANR	54874	Identifier	QStringLiteral		54740	0					
ANR	54875	ArgumentList	"""[KCrash Handler]\\n"""		54740	1					
ANR	54876	Argument	"""[KCrash Handler]\\n"""		54740	0					
ANR	54877	PrimaryExpression	"""[KCrash Handler]\\n"""		54740	0					
ANR	54878	ExpressionStatement	d -> m_isBelowSignalHandler = true	215:12:7641:7673	54740	2	True				
ANR	54879	AssignmentExpression	d -> m_isBelowSignalHandler = true		54740	0		=			
ANR	54880	PtrMemberAccess	d -> m_isBelowSignalHandler		54740	0					
ANR	54881	Identifier	d		54740	0					
ANR	54882	Identifier	m_isBelowSignalHandler		54740	1					
ANR	54883	Identifier	true		54740	1					
ANR	54884	ElseStatement	else		54740	0					
ANR	54885	CompoundStatement		22:15:1033:1033	54740	0					
ANR	54886	ExpressionStatement	d -> m_linesList . append ( line )	219:12:7888:7915	54740	0	True				
ANR	54887	CallExpression	d -> m_linesList . append ( line )		54740	0					
ANR	54888	Callee	d -> m_linesList . append		54740	0					
ANR	54889	MemberAccess	d -> m_linesList . append		54740	0					
ANR	54890	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54891	Identifier	d		54740	0					
ANR	54892	Identifier	m_linesList		54740	1					
ANR	54893	Identifier	append		54740	1					
ANR	54894	ArgumentList	line		54740	1					
ANR	54895	Argument	line		54740	0					
ANR	54896	Identifier	line		54740	0					
ANR	54897	BreakStatement	break ;	221:8:7935:7940	54740	11	True				
ANR	54898	Label	case BacktraceLine :: StackFrame :	222:4:7946:7976	54740	12	True				
ANR	54899	Identifier	BacktraceLine :: StackFrame		54740	0					
ANR	54900	IfStatement	if ( line . frameNumber ( ) == 0 )		54740	13					
ANR	54901	Condition	line . frameNumber ( ) == 0	228:12:8331:8353	54740	0	True				
ANR	54902	EqualityExpression	line . frameNumber ( ) == 0		54740	0		==			
ANR	54903	CallExpression	line . frameNumber ( )		54740	0					
ANR	54904	Callee	line . frameNumber		54740	0					
ANR	54905	MemberAccess	line . frameNumber		54740	0					
ANR	54906	Identifier	line		54740	0					
ANR	54907	Identifier	frameNumber		54740	1					
ANR	54908	ArgumentList			54740	1					
ANR	54909	PrimaryExpression	0		54740	1					
ANR	54910	CompoundStatement		34:37:1649:1649	54740	1					
ANR	54911	IfStatement	if ( d -> m_frameZeroAppeared )		54740	0					
ANR	54912	Condition	d -> m_frameZeroAppeared	229:16:8374:8395	54740	0	True				
ANR	54913	PtrMemberAccess	d -> m_frameZeroAppeared		54740	0					
ANR	54914	Identifier	d		54740	0					
ANR	54915	Identifier	m_frameZeroAppeared		54740	1					
ANR	54916	CompoundStatement		35:40:1691:1691	54740	1					
ANR	54917	BreakStatement	break ;	230:16:8416:8421	54740	0	True				
ANR	54918	ElseStatement	else		54740	0					
ANR	54919	CompoundStatement		37:19:1803:1803	54740	0					
ANR	54920	ExpressionStatement	d -> m_frameZeroAppeared = true	232:16:8528:8557	54740	0	True				
ANR	54921	AssignmentExpression	d -> m_frameZeroAppeared = true		54740	0		=			
ANR	54922	PtrMemberAccess	d -> m_frameZeroAppeared		54740	0					
ANR	54923	Identifier	d		54740	0					
ANR	54924	Identifier	m_frameZeroAppeared		54740	1					
ANR	54925	Identifier	true		54740	1					
ANR	54926	IfStatement	if ( d -> m_isBelowSignalHandler )		54740	14					
ANR	54927	Condition	d -> m_isBelowSignalHandler	237:12:8662:8686	54740	0	True				
ANR	54928	PtrMemberAccess	d -> m_isBelowSignalHandler		54740	0					
ANR	54929	Identifier	d		54740	0					
ANR	54930	Identifier	m_isBelowSignalHandler		54740	1					
ANR	54931	CompoundStatement		43:39:1982:1982	54740	1					
ANR	54932	ExpressionStatement	d -> m_linesToRate . append ( line )	238:12:8703:8732	54740	0	True				
ANR	54933	CallExpression	d -> m_linesToRate . append ( line )		54740	0					
ANR	54934	Callee	d -> m_linesToRate . append		54740	0					
ANR	54935	MemberAccess	d -> m_linesToRate . append		54740	0					
ANR	54936	PtrMemberAccess	d -> m_linesToRate		54740	0					
ANR	54937	Identifier	d		54740	0					
ANR	54938	Identifier	m_linesToRate		54740	1					
ANR	54939	Identifier	append		54740	1					
ANR	54940	ArgumentList	line		54740	1					
ANR	54941	Argument	line		54740	0					
ANR	54942	Identifier	line		54740	0					
ANR	54943	Label	default :	242:4:8804:8811	54740	15	True				
ANR	54944	Identifier	default		54740	0					
ANR	54945	ExpressionStatement	d -> m_linesList . append ( line )	243:8:8821:8848	54740	16	True				
ANR	54946	CallExpression	d -> m_linesList . append ( line )		54740	0					
ANR	54947	Callee	d -> m_linesList . append		54740	0					
ANR	54948	MemberAccess	d -> m_linesList . append		54740	0					
ANR	54949	PtrMemberAccess	d -> m_linesList		54740	0					
ANR	54950	Identifier	d		54740	0					
ANR	54951	Identifier	m_linesList		54740	1					
ANR	54952	Identifier	append		54740	1					
ANR	54953	ArgumentList	line		54740	1					
ANR	54954	Argument	line		54740	0					
ANR	54955	Identifier	line		54740	0					
ANR	54956	BreakStatement	break ;	244:8:8858:8863	54740	17	True				
ANR	54957	ReturnType	void		54740	1					
ANR	54958	Identifier	BacktraceParserGdb :: parseLine		54740	2					
ANR	54959	ParameterList	const QString & lineStr		54740	3					
ANR	54960	Parameter	const QString & lineStr	194:35:6681:6703	54740	0	True				
ANR	54961	ParameterType	const QString &		54740	0					
ANR	54962	Identifier	lineStr		54740	1					
ANR	54963	CFGEntryNode	ENTRY		54740		True				
ANR	54964	CFGExitNode	EXIT		54740		True				
ANR	54965	Symbol	line . type		54740						
ANR	54966	Symbol	d -> m_possibleKCrashStart		54740						
ANR	54967	Symbol	d		54740						
ANR	54968	Symbol	line		54740						
ANR	54969	Symbol	d -> m_isBelowSignalHandler		54740						
ANR	54970	Symbol	d -> m_linesList . size		54740						
ANR	54971	Symbol	false		54740						
ANR	54972	Symbol	d -> m_linesList . begin		54740						
ANR	54973	Symbol	BacktraceParserGdb		54740						
ANR	54974	Symbol	* d		54740						
ANR	54975	Symbol	BacktraceLineGdb		54740						
ANR	54976	Symbol	lineStr		54740						
ANR	54977	Symbol	d -> m_linesList . end		54740						
ANR	54978	Symbol	d -> m_linesList		54740						
ANR	54979	Symbol	true		54740						
ANR	54980	Symbol	d -> m_frameZeroAppeared		54740						
ANR	54981	Symbol	QStringLiteral		54740						
ANR	54982	Symbol	d -> m_linesToRate		54740						
ANR	54983	Symbol	line . frameNumber		54740						
ANR	54984	Symbol	d -> m_threadsCount		54740						
ANR	54985	Function	BacktraceParserGdb :: parsedBacktrace	248:0:8874:9649							
ANR	54986	FunctionDef	BacktraceParserGdb :: parsedBacktrace ()		54985	0					
ANR	54987	CompoundStatement		249:0:8926:9649	54985	0					
ANR	54988	Statement	Q_D	250:4:8932:8934	54985	0	True				
ANR	54989	Statement	(	250:7:8935:8935	54985	1	True				
ANR	54990	Statement	const	250:8:8936:8940	54985	2	True				
ANR	54991	Statement	BacktraceParserGdb	250:14:8942:8959	54985	3	True				
ANR	54992	Statement	)	250:32:8960:8960	54985	4	True				
ANR	54993	ExpressionStatement		250:33:8961:8961	54985	5	True				
ANR	54994	IdentifierDeclStatement	QString result ;	252:4:8968:8982	54985	6	True				
ANR	54995	IdentifierDecl	result		54985	0					
ANR	54996	IdentifierDeclType	QString		54985	0					
ANR	54997	Identifier	result		54985	1					
ANR	54998	IfStatement	if ( d )		54985	7					
ANR	54999	Condition	d	253:8:8992:8992	54985	0	True				
ANR	55000	Identifier	d		54985	0					
ANR	55001	CompoundStatement		6:8:78:116	54985	1					
ANR	55002	IdentifierDeclStatement	QList < BacktraceLine > :: const_iterator i ;	254:8:9005:9043	54985	0	True				
ANR	55003	IdentifierDecl	i		54985	0					
ANR	55004	IdentifierDeclType	QList < BacktraceLine > :: const_iterator		54985	0					
ANR	55005	Identifier	i		54985	1					
ANR	55006	ForStatement	for ( i = d -> m_linesList . constBegin ( ) ; i != d -> m_linesList . constEnd ( ) ; ++ i )		54985	1					
ANR	55007	ForInit	i = d -> m_linesList . constBegin ( ) ;	255:13:9058:9089	54985	0	True				
ANR	55008	AssignmentExpression	i = d -> m_linesList . constBegin ( )		54985	0		=			
ANR	55009	Identifier	i		54985	0					
ANR	55010	CallExpression	d -> m_linesList . constBegin ( )		54985	1					
ANR	55011	Callee	d -> m_linesList . constBegin		54985	0					
ANR	55012	MemberAccess	d -> m_linesList . constBegin		54985	0					
ANR	55013	PtrMemberAccess	d -> m_linesList		54985	0					
ANR	55014	Identifier	d		54985	0					
ANR	55015	Identifier	m_linesList		54985	1					
ANR	55016	Identifier	constBegin		54985	1					
ANR	55017	ArgumentList			54985	1					
ANR	55018	Condition	i != d -> m_linesList . constEnd ( )	255:46:9091:9120	54985	1	True				
ANR	55019	EqualityExpression	i != d -> m_linesList . constEnd ( )		54985	0		!=			
ANR	55020	Identifier	i		54985	0					
ANR	55021	CallExpression	d -> m_linesList . constEnd ( )		54985	1					
ANR	55022	Callee	d -> m_linesList . constEnd		54985	0					
ANR	55023	MemberAccess	d -> m_linesList . constEnd		54985	0					
ANR	55024	PtrMemberAccess	d -> m_linesList		54985	0					
ANR	55025	Identifier	d		54985	0					
ANR	55026	Identifier	m_linesList		54985	1					
ANR	55027	Identifier	constEnd		54985	1					
ANR	55028	ArgumentList			54985	1					
ANR	55029	UnaryExpression	++ i	255:78:9123:9125	54985	2	True				
ANR	55030	IncDec	++		54985	0					
ANR	55031	Identifier	i		54985	1					
ANR	55032	CompoundStatement		7:83:201:201	54985	3					
ANR	55033	IfStatement	if ( d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine ) )		54985	0					
ANR	55034	Condition	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )	258:16:9280:9520	54985	0	True				
ANR	55035	AndExpression	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )		54985	0		&&			
ANR	55036	EqualityExpression	d -> m_threadsCount == 1		54985	0		==			
ANR	55037	PtrMemberAccess	d -> m_threadsCount		54985	0					
ANR	55038	Identifier	d		54985	0					
ANR	55039	Identifier	m_threadsCount		54985	1					
ANR	55040	PrimaryExpression	1		54985	1					
ANR	55041	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		54985	1		||			
ANR	55042	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator		54985	0		==			
ANR	55043	CallExpression	( * i ) . type ( )		54985	0					
ANR	55044	Callee	( * i ) . type		54985	0					
ANR	55045	MemberAccess	( * i ) . type		54985	0					
ANR	55046	UnaryOperationExpression	* i		54985	0					
ANR	55047	UnaryOperator	*		54985	0					
ANR	55048	Identifier	i		54985	1					
ANR	55049	Identifier	type		54985	1					
ANR	55050	ArgumentList			54985	1					
ANR	55051	Identifier	BacktraceLine :: ThreadIndicator		54985	1					
ANR	55052	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		54985	1		||			
ANR	55053	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart		54985	0		==			
ANR	55054	CallExpression	( * i ) . type ( )		54985	0					
ANR	55055	Callee	( * i ) . type		54985	0					
ANR	55056	MemberAccess	( * i ) . type		54985	0					
ANR	55057	UnaryOperationExpression	* i		54985	0					
ANR	55058	UnaryOperator	*		54985	0					
ANR	55059	Identifier	i		54985	1					
ANR	55060	Identifier	type		54985	1					
ANR	55061	ArgumentList			54985	1					
ANR	55062	Identifier	BacktraceLine :: ThreadStart		54985	1					
ANR	55063	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: EmptyLine		54985	1		==			
ANR	55064	CallExpression	( * i ) . type ( )		54985	0					
ANR	55065	Callee	( * i ) . type		54985	0					
ANR	55066	MemberAccess	( * i ) . type		54985	0					
ANR	55067	UnaryOperationExpression	* i		54985	0					
ANR	55068	UnaryOperator	*		54985	0					
ANR	55069	Identifier	i		54985	1					
ANR	55070	Identifier	type		54985	1					
ANR	55071	ArgumentList			54985	1					
ANR	55072	Identifier	BacktraceLine :: EmptyLine		54985	1					
ANR	55073	CompoundStatement		13:12:608:608	54985	1					
ANR	55074	ContinueStatement	continue ;	262:16:9553:9561	54985	0	True				
ANR	55075	ExpressionStatement	result += i -> toString ( )	264:12:9589:9612	54985	1	True				
ANR	55076	AssignmentExpression	result += i -> toString ( )		54985	0		+=			
ANR	55077	Identifier	result		54985	0					
ANR	55078	CallExpression	i -> toString ( )		54985	1					
ANR	55079	Callee	i -> toString		54985	0					
ANR	55080	PtrMemberAccess	i -> toString		54985	0					
ANR	55081	Identifier	i		54985	0					
ANR	55082	Identifier	toString		54985	1					
ANR	55083	ArgumentList			54985	1					
ANR	55084	ReturnStatement	return result ;	267:4:9634:9647	54985	8	True				
ANR	55085	Identifier	result		54985	0					
ANR	55086	ReturnType	QString		54985	1					
ANR	55087	Identifier	BacktraceParserGdb :: parsedBacktrace		54985	2					
ANR	55088	ParameterList			54985	3					
ANR	55089	CFGEntryNode	ENTRY		54985		True				
ANR	55090	CFGExitNode	EXIT		54985		True				
ANR	55091	Symbol	d -> m_linesList . constEnd		54985						
ANR	55092	Symbol	d		54985						
ANR	55093	Symbol	i		54985						
ANR	55094	Symbol	( * i ) . type		54985						
ANR	55095	Symbol	BacktraceLine :: ThreadStart		54985						
ANR	55096	Symbol	* d		54985						
ANR	55097	Symbol	BacktraceLine :: ThreadIndicator		54985						
ANR	55098	Symbol	result		54985						
ANR	55099	Symbol	* i		54985						
ANR	55100	Symbol	d -> m_linesList		54985						
ANR	55101	Symbol	BacktraceLine :: EmptyLine		54985						
ANR	55102	Symbol	i -> toString		54985						
ANR	55103	Symbol	d -> m_linesList . constBegin		54985						
ANR	55104	Symbol	d -> m_threadsCount		54985						
ANR	55105	Function	BacktraceParserGdb :: parsedBacktraceLines	270:0:9652:10452							
ANR	55106	FunctionDef	BacktraceParserGdb :: parsedBacktraceLines ()		55105	0					
ANR	55107	CompoundStatement		271:0:9722:10452	55105	0					
ANR	55108	Statement	Q_D	272:4:9728:9730	55105	0	True				
ANR	55109	Statement	(	272:7:9731:9731	55105	1	True				
ANR	55110	Statement	const	272:8:9732:9736	55105	2	True				
ANR	55111	Statement	BacktraceParserGdb	272:14:9738:9755	55105	3	True				
ANR	55112	Statement	)	272:32:9756:9756	55105	4	True				
ANR	55113	ExpressionStatement		272:33:9757:9757	55105	5	True				
ANR	55114	IdentifierDeclStatement	QList < BacktraceLine > result ;	274:4:9764:9791	55105	6	True				
ANR	55115	IdentifierDecl	result		55105	0					
ANR	55116	IdentifierDeclType	QList < BacktraceLine >		55105	0					
ANR	55117	Identifier	result		55105	1					
ANR	55118	IfStatement	if ( d )		55105	7					
ANR	55119	Condition	d	275:8:9801:9801	55105	0	True				
ANR	55120	Identifier	d		55105	0					
ANR	55121	CompoundStatement		6:8:91:129	55105	1					
ANR	55122	IdentifierDeclStatement	QList < BacktraceLine > :: const_iterator i ;	276:8:9814:9852	55105	0	True				
ANR	55123	IdentifierDecl	i		55105	0					
ANR	55124	IdentifierDeclType	QList < BacktraceLine > :: const_iterator		55105	0					
ANR	55125	Identifier	i		55105	1					
ANR	55126	ForStatement	for ( i = d -> m_linesList . constBegin ( ) ; i != d -> m_linesList . constEnd ( ) ; ++ i )		55105	1					
ANR	55127	ForInit	i = d -> m_linesList . constBegin ( ) ;	277:13:9867:9898	55105	0	True				
ANR	55128	AssignmentExpression	i = d -> m_linesList . constBegin ( )		55105	0		=			
ANR	55129	Identifier	i		55105	0					
ANR	55130	CallExpression	d -> m_linesList . constBegin ( )		55105	1					
ANR	55131	Callee	d -> m_linesList . constBegin		55105	0					
ANR	55132	MemberAccess	d -> m_linesList . constBegin		55105	0					
ANR	55133	PtrMemberAccess	d -> m_linesList		55105	0					
ANR	55134	Identifier	d		55105	0					
ANR	55135	Identifier	m_linesList		55105	1					
ANR	55136	Identifier	constBegin		55105	1					
ANR	55137	ArgumentList			55105	1					
ANR	55138	Condition	i != d -> m_linesList . constEnd ( )	277:46:9900:9929	55105	1	True				
ANR	55139	EqualityExpression	i != d -> m_linesList . constEnd ( )		55105	0		!=			
ANR	55140	Identifier	i		55105	0					
ANR	55141	CallExpression	d -> m_linesList . constEnd ( )		55105	1					
ANR	55142	Callee	d -> m_linesList . constEnd		55105	0					
ANR	55143	MemberAccess	d -> m_linesList . constEnd		55105	0					
ANR	55144	PtrMemberAccess	d -> m_linesList		55105	0					
ANR	55145	Identifier	d		55105	0					
ANR	55146	Identifier	m_linesList		55105	1					
ANR	55147	Identifier	constEnd		55105	1					
ANR	55148	ArgumentList			55105	1					
ANR	55149	UnaryExpression	++ i	277:78:9932:9934	55105	2	True				
ANR	55150	IncDec	++		55105	0					
ANR	55151	Identifier	i		55105	1					
ANR	55152	CompoundStatement		7:83:214:214	55105	3					
ANR	55153	IfStatement	if ( d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine ) )		55105	0					
ANR	55154	Condition	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )	280:16:10089:10329	55105	0	True				
ANR	55155	AndExpression	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )		55105	0		&&			
ANR	55156	EqualityExpression	d -> m_threadsCount == 1		55105	0		==			
ANR	55157	PtrMemberAccess	d -> m_threadsCount		55105	0					
ANR	55158	Identifier	d		55105	0					
ANR	55159	Identifier	m_threadsCount		55105	1					
ANR	55160	PrimaryExpression	1		55105	1					
ANR	55161	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		55105	1		||			
ANR	55162	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator		55105	0		==			
ANR	55163	CallExpression	( * i ) . type ( )		55105	0					
ANR	55164	Callee	( * i ) . type		55105	0					
ANR	55165	MemberAccess	( * i ) . type		55105	0					
ANR	55166	UnaryOperationExpression	* i		55105	0					
ANR	55167	UnaryOperator	*		55105	0					
ANR	55168	Identifier	i		55105	1					
ANR	55169	Identifier	type		55105	1					
ANR	55170	ArgumentList			55105	1					
ANR	55171	Identifier	BacktraceLine :: ThreadIndicator		55105	1					
ANR	55172	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		55105	1		||			
ANR	55173	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart		55105	0		==			
ANR	55174	CallExpression	( * i ) . type ( )		55105	0					
ANR	55175	Callee	( * i ) . type		55105	0					
ANR	55176	MemberAccess	( * i ) . type		55105	0					
ANR	55177	UnaryOperationExpression	* i		55105	0					
ANR	55178	UnaryOperator	*		55105	0					
ANR	55179	Identifier	i		55105	1					
ANR	55180	Identifier	type		55105	1					
ANR	55181	ArgumentList			55105	1					
ANR	55182	Identifier	BacktraceLine :: ThreadStart		55105	1					
ANR	55183	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: EmptyLine		55105	1		==			
ANR	55184	CallExpression	( * i ) . type ( )		55105	0					
ANR	55185	Callee	( * i ) . type		55105	0					
ANR	55186	MemberAccess	( * i ) . type		55105	0					
ANR	55187	UnaryOperationExpression	* i		55105	0					
ANR	55188	UnaryOperator	*		55105	0					
ANR	55189	Identifier	i		55105	1					
ANR	55190	Identifier	type		55105	1					
ANR	55191	ArgumentList			55105	1					
ANR	55192	Identifier	BacktraceLine :: EmptyLine		55105	1					
ANR	55193	CompoundStatement		13:12:621:621	55105	1					
ANR	55194	ContinueStatement	continue ;	284:16:10362:10370	55105	0	True				
ANR	55195	ExpressionStatement	result . append ( * i )	286:12:10398:10415	55105	1	True				
ANR	55196	CallExpression	result . append ( * i )		55105	0					
ANR	55197	Callee	result . append		55105	0					
ANR	55198	MemberAccess	result . append		55105	0					
ANR	55199	Identifier	result		55105	0					
ANR	55200	Identifier	append		55105	1					
ANR	55201	ArgumentList	* i		55105	1					
ANR	55202	Argument	* i		55105	0					
ANR	55203	UnaryOperationExpression	* i		55105	0					
ANR	55204	UnaryOperator	*		55105	0					
ANR	55205	Identifier	i		55105	1					
ANR	55206	ReturnStatement	return result ;	289:4:10437:10450	55105	8	True				
ANR	55207	Identifier	result		55105	0					
ANR	55208	ReturnType	QList < BacktraceLine >		55105	1					
ANR	55209	Identifier	BacktraceParserGdb :: parsedBacktraceLines		55105	2					
ANR	55210	ParameterList			55105	3					
ANR	55211	CFGEntryNode	ENTRY		55105		True				
ANR	55212	CFGExitNode	EXIT		55105		True				
ANR	55213	Symbol	d -> m_linesList . constEnd		55105						
ANR	55214	Symbol	d		55105						
ANR	55215	Symbol	i		55105						
ANR	55216	Symbol	( * i ) . type		55105						
ANR	55217	Symbol	BacktraceLine :: ThreadStart		55105						
ANR	55218	Symbol	* d		55105						
ANR	55219	Symbol	BacktraceLine :: ThreadIndicator		55105						
ANR	55220	Symbol	result		55105						
ANR	55221	Symbol	* i		55105						
ANR	55222	Symbol	d -> m_linesList		55105						
ANR	55223	Symbol	BacktraceLine :: EmptyLine		55105						
ANR	55224	Symbol	d -> m_linesList . constBegin		55105						
ANR	55225	Symbol	d -> m_threadsCount		55105						
