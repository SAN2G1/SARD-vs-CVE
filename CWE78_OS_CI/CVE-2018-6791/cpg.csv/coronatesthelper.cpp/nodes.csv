command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	100591	File	data/converged/CVE-2018-6791_plasma-workspace/coronatesthelper.cpp								
ANR	100592	Function	CoronaTestHelper :: CoronaTestHelper	26:0:913:1118							
ANR	100593	FunctionDef	CoronaTestHelper :: CoronaTestHelper (Corona * parent)		100592	0					
ANR	100594	CompoundStatement		30:0:1029:1118	100592	0					
ANR	100595	ExpressionStatement	"connect ( m_corona , & Corona :: startupCompleted , this , & CoronaTestHelper :: initialize )"	31:4:1035:1116	100592	0	True				
ANR	100596	CallExpression	"connect ( m_corona , & Corona :: startupCompleted , this , & CoronaTestHelper :: initialize )"		100592	0					
ANR	100597	Callee	connect		100592	0					
ANR	100598	Identifier	connect		100592	0					
ANR	100599	ArgumentList	m_corona		100592	1					
ANR	100600	Argument	m_corona		100592	0					
ANR	100601	Identifier	m_corona		100592	0					
ANR	100602	Argument	& Corona :: startupCompleted		100592	1					
ANR	100603	UnaryOperationExpression	& Corona :: startupCompleted		100592	0					
ANR	100604	UnaryOperator	&		100592	0					
ANR	100605	Identifier	Corona :: startupCompleted		100592	1					
ANR	100606	Argument	this		100592	2					
ANR	100607	Identifier	this		100592	0					
ANR	100608	Argument	& CoronaTestHelper :: initialize		100592	3					
ANR	100609	UnaryOperationExpression	& CoronaTestHelper :: initialize		100592	0					
ANR	100610	UnaryOperator	&		100592	0					
ANR	100611	Identifier	CoronaTestHelper :: initialize		100592	1					
ANR	100612	Identifier	CoronaTestHelper :: CoronaTestHelper		100592	1					
ANR	100613	ParameterList	Corona * parent		100592	2					
ANR	100614	Parameter	Corona * parent	26:35:948:961	100592	0	True				
ANR	100615	ParameterType	Corona *		100592	0					
ANR	100616	Identifier	parent		100592	1					
ANR	100617	CFGEntryNode	ENTRY		100592		True				
ANR	100618	CFGExitNode	EXIT		100592		True				
ANR	100619	Symbol	parent		100592						
ANR	100620	Symbol	& Corona :: startupCompleted		100592						
ANR	100621	Symbol	this		100592						
ANR	100622	Symbol	& CoronaTestHelper :: initialize		100592						
ANR	100623	Symbol	m_corona		100592						
ANR	100624	Function	CoronaTestHelper :: processContainment	34:0:1121:1399							
ANR	100625	FunctionDef	CoronaTestHelper :: processContainment (Plasma :: Containment * containment)		100624	0					
ANR	100626	CompoundStatement		35:0:1197:1399	100624	0					
ANR	100627	Statement	foreach	36:4:1203:1209	100624	0	True				
ANR	100628	Statement	(	36:11:1210:1210	100624	1	True				
ANR	100629	Statement	Plasma	36:12:1211:1216	100624	2	True				
ANR	100630	Statement	::	36:18:1217:1218	100624	3	True				
ANR	100631	Statement	Applet	36:20:1219:1224	100624	4	True				
ANR	100632	Statement	*	36:26:1225:1225	100624	5	True				
ANR	100633	Statement	applet	36:28:1227:1232	100624	6	True				
ANR	100634	Statement	","	36:34:1233:1233	100624	7	True				
ANR	100635	Statement	containment	36:36:1235:1245	100624	8	True				
ANR	100636	Statement	->	36:47:1246:1247	100624	9	True				
ANR	100637	Statement	applets	36:49:1248:1254	100624	10	True				
ANR	100638	Statement	(	36:56:1255:1255	100624	11	True				
ANR	100639	Statement	)	36:57:1256:1256	100624	12	True				
ANR	100640	Statement	)	36:58:1257:1257	100624	13	True				
ANR	100641	CompoundStatement		2:60:61:61	100624	14					
ANR	100642	ExpressionStatement	processApplet ( applet )	37:8:1269:1290	100624	0	True				
ANR	100643	CallExpression	processApplet ( applet )		100624	0					
ANR	100644	Callee	processApplet		100624	0					
ANR	100645	Identifier	processApplet		100624	0					
ANR	100646	ArgumentList	applet		100624	1					
ANR	100647	Argument	applet		100624	0					
ANR	100648	Identifier	applet		100624	0					
ANR	100649	ExpressionStatement	"connect ( containment , & Plasma :: Containment :: appletAdded , this , & CoronaTestHelper :: processApplet )"	39:4:1302:1397	100624	15	True				
ANR	100650	CallExpression	"connect ( containment , & Plasma :: Containment :: appletAdded , this , & CoronaTestHelper :: processApplet )"		100624	0					
ANR	100651	Callee	connect		100624	0					
ANR	100652	Identifier	connect		100624	0					
ANR	100653	ArgumentList	containment		100624	1					
ANR	100654	Argument	containment		100624	0					
ANR	100655	Identifier	containment		100624	0					
ANR	100656	Argument	& Plasma :: Containment :: appletAdded		100624	1					
ANR	100657	UnaryOperationExpression	& Plasma :: Containment :: appletAdded		100624	0					
ANR	100658	UnaryOperator	&		100624	0					
ANR	100659	Identifier	Plasma :: Containment :: appletAdded		100624	1					
ANR	100660	Argument	this		100624	2					
ANR	100661	Identifier	this		100624	0					
ANR	100662	Argument	& CoronaTestHelper :: processApplet		100624	3					
ANR	100663	UnaryOperationExpression	& CoronaTestHelper :: processApplet		100624	0					
ANR	100664	UnaryOperator	&		100624	0					
ANR	100665	Identifier	CoronaTestHelper :: processApplet		100624	1					
ANR	100666	ReturnType	void		100624	1					
ANR	100667	Identifier	CoronaTestHelper :: processContainment		100624	2					
ANR	100668	ParameterList	Plasma :: Containment * containment		100624	3					
ANR	100669	Parameter	Plasma :: Containment * containment	34:42:1163:1194	100624	0	True				
ANR	100670	ParameterType	Plasma :: Containment *		100624	0					
ANR	100671	Identifier	containment		100624	1					
ANR	100672	CFGEntryNode	ENTRY		100624		True				
ANR	100673	CFGExitNode	EXIT		100624		True				
ANR	100674	Symbol	containment		100624						
ANR	100675	Symbol	& CoronaTestHelper :: processApplet		100624						
ANR	100676	Symbol	this		100624						
ANR	100677	Symbol	& Plasma :: Containment :: appletAdded		100624						
ANR	100678	Symbol	applet		100624						
ANR	100679	Function	CoronaTestHelper :: processApplet	42:0:1402:1800							
ANR	100680	FunctionDef	CoronaTestHelper :: processApplet (Plasma :: Applet * applet)		100679	0					
ANR	100681	CompoundStatement		43:0:1463:1800	100679	0					
ANR	100682	Statement	PlasmaQuick	44:4:1469:1479	100679	0	True				
ANR	100683	Statement	::	44:15:1480:1481	100679	1	True				
ANR	100684	Statement	AppletQuickItem	44:17:1482:1496	100679	2	True				
ANR	100685	Statement	*	44:32:1497:1497	100679	3	True				
ANR	100686	Statement	obj	44:34:1499:1501	100679	4	True				
ANR	100687	Statement	=	44:38:1503:1503	100679	5	True				
ANR	100688	Statement	applet	44:40:1505:1510	100679	6	True				
ANR	100689	Statement	->	44:46:1511:1512	100679	7	True				
ANR	100690	Statement	property	44:48:1513:1520	100679	8	True				
ANR	100691	Statement	(	44:56:1521:1521	100679	9	True				
ANR	100692	Statement	"""_plasma_graphicObject"""	44:57:1522:1544	100679	10	True				
ANR	100693	Statement	)	44:80:1545:1545	100679	11	True				
ANR	100694	Statement	.	44:81:1546:1546	100679	12	True				
ANR	100695	Statement	value	44:82:1547:1551	100679	13	True				
ANR	100696	Statement	<	44:87:1552:1552	100679	14	True				
ANR	100697	Statement	PlasmaQuick	44:88:1553:1563	100679	15	True				
ANR	100698	Statement	::	44:99:1564:1565	100679	16	True				
ANR	100699	Statement	AppletQuickItem	44:101:1566:1580	100679	17	True				
ANR	100700	Statement	*	44:116:1581:1581	100679	18	True				
ANR	100701	Statement	>	44:117:1582:1582	100679	19	True				
ANR	100702	Statement	(	44:118:1583:1583	100679	20	True				
ANR	100703	Statement	)	44:119:1584:1584	100679	21	True				
ANR	100704	ExpressionStatement		44:120:1585:1585	100679	22	True				
ANR	100705	Statement	auto	46:4:1592:1595	100679	23	True				
ANR	100706	ExpressionStatement	testObject = obj -> testItem ( )	46:9:1597:1625	100679	24	True				
ANR	100707	AssignmentExpression	testObject = obj -> testItem ( )		100679	0		=			
ANR	100708	Identifier	testObject		100679	0					
ANR	100709	CallExpression	obj -> testItem ( )		100679	1					
ANR	100710	Callee	obj -> testItem		100679	0					
ANR	100711	PtrMemberAccess	obj -> testItem		100679	0					
ANR	100712	Identifier	obj		100679	0					
ANR	100713	Identifier	testItem		100679	1					
ANR	100714	ArgumentList			100679	1					
ANR	100715	IfStatement	if ( ! testObject )		100679	25					
ANR	100716	Condition	! testObject	47:8:1635:1645	100679	0	True				
ANR	100717	UnaryOperationExpression	! testObject		100679	0					
ANR	100718	UnaryOperator	!		100679	0					
ANR	100719	Identifier	testObject		100679	1					
ANR	100720	CompoundStatement		5:21:184:184	100679	1					
ANR	100721	ExpressionStatement	"qCWarning ( PLASMASHELL ) << ""no test for"" << applet -> title ( ) << applet -> kPackage ( ) . path ( )"	48:8:1658:1745	100679	0	True				
ANR	100722	ShiftExpression	"qCWarning ( PLASMASHELL ) << ""no test for"" << applet -> title ( ) << applet -> kPackage ( ) . path ( )"		100679	0		<<			
ANR	100723	CallExpression	qCWarning ( PLASMASHELL )		100679	0					
ANR	100724	Callee	qCWarning		100679	0					
ANR	100725	Identifier	qCWarning		100679	0					
ANR	100726	ArgumentList	PLASMASHELL		100679	1					
ANR	100727	Argument	PLASMASHELL		100679	0					
ANR	100728	Identifier	PLASMASHELL		100679	0					
ANR	100729	ShiftExpression	"""no test for"" << applet -> title ( ) << applet -> kPackage ( ) . path ( )"		100679	1		<<			
ANR	100730	PrimaryExpression	"""no test for"""		100679	0					
ANR	100731	ShiftExpression	applet -> title ( ) << applet -> kPackage ( ) . path ( )		100679	1		<<			
ANR	100732	CallExpression	applet -> title ( )		100679	0					
ANR	100733	Callee	applet -> title		100679	0					
ANR	100734	PtrMemberAccess	applet -> title		100679	0					
ANR	100735	Identifier	applet		100679	0					
ANR	100736	Identifier	title		100679	1					
ANR	100737	ArgumentList			100679	1					
ANR	100738	CallExpression	applet -> kPackage ( ) . path ( )		100679	1					
ANR	100739	Callee	applet -> kPackage ( ) . path		100679	0					
ANR	100740	MemberAccess	applet -> kPackage ( ) . path		100679	0					
ANR	100741	CallExpression	applet -> kPackage ( )		100679	0					
ANR	100742	Callee	applet -> kPackage		100679	0					
ANR	100743	PtrMemberAccess	applet -> kPackage		100679	0					
ANR	100744	Identifier	applet		100679	0					
ANR	100745	Identifier	kPackage		100679	1					
ANR	100746	ArgumentList			100679	1					
ANR	100747	Identifier	path		100679	1					
ANR	100748	ArgumentList			100679	1					
ANR	100749	ReturnStatement	return ;	49:8:1755:1761	100679	1	True				
ANR	100750	ExpressionStatement	integrateTest ( testObject )	51:4:1773:1798	100679	26	True				
ANR	100751	CallExpression	integrateTest ( testObject )		100679	0					
ANR	100752	Callee	integrateTest		100679	0					
ANR	100753	Identifier	integrateTest		100679	0					
ANR	100754	ArgumentList	testObject		100679	1					
ANR	100755	Argument	testObject		100679	0					
ANR	100756	Identifier	testObject		100679	0					
ANR	100757	ReturnType	void		100679	1					
ANR	100758	Identifier	CoronaTestHelper :: processApplet		100679	2					
ANR	100759	ParameterList	Plasma :: Applet * applet		100679	3					
ANR	100760	Parameter	Plasma :: Applet * applet	42:37:1439:1460	100679	0	True				
ANR	100761	ParameterType	Plasma :: Applet *		100679	0					
ANR	100762	Identifier	applet		100679	1					
ANR	100763	CFGEntryNode	ENTRY		100679		True				
ANR	100764	CFGExitNode	EXIT		100679		True				
ANR	100765	Symbol	applet -> kPackage		100679						
ANR	100766	Symbol	* obj		100679						
ANR	100767	Symbol	obj -> testItem		100679						
ANR	100768	Symbol	obj		100679						
ANR	100769	Symbol	testObject		100679						
ANR	100770	Symbol	PLASMASHELL		100679						
ANR	100771	Symbol	* applet		100679						
ANR	100772	Symbol	applet		100679						
ANR	100773	Function	CoronaTestHelper :: integrateTest	54:0:1803:2435							
ANR	100774	FunctionDef	CoronaTestHelper :: integrateTest (QObject * testObject)		100773	0					
ANR	100775	CompoundStatement		55:0:1861:2435	100773	0					
ANR	100776	IdentifierDeclStatement	"const int signal = testObject -> metaObject ( ) -> indexOfSignal ( ""done()"" ) ;"	56:4:1867:1935	100773	0	True				
ANR	100777	IdentifierDecl	"signal = testObject -> metaObject ( ) -> indexOfSignal ( ""done()"" )"		100773	0					
ANR	100778	IdentifierDeclType	const int		100773	0					
ANR	100779	Identifier	signal		100773	1					
ANR	100780	AssignmentExpression	"signal = testObject -> metaObject ( ) -> indexOfSignal ( ""done()"" )"		100773	2		=			
ANR	100781	Identifier	signal		100773	0					
ANR	100782	CallExpression	"testObject -> metaObject ( ) -> indexOfSignal ( ""done()"" )"		100773	1					
ANR	100783	Callee	testObject -> metaObject ( ) -> indexOfSignal		100773	0					
ANR	100784	PtrMemberAccess	testObject -> metaObject ( ) -> indexOfSignal		100773	0					
ANR	100785	CallExpression	testObject -> metaObject ( )		100773	0					
ANR	100786	Callee	testObject -> metaObject		100773	0					
ANR	100787	PtrMemberAccess	testObject -> metaObject		100773	0					
ANR	100788	Identifier	testObject		100773	0					
ANR	100789	Identifier	metaObject		100773	1					
ANR	100790	ArgumentList			100773	1					
ANR	100791	Identifier	indexOfSignal		100773	1					
ANR	100792	ArgumentList	"""done()"""		100773	1					
ANR	100793	Argument	"""done()"""		100773	0					
ANR	100794	PrimaryExpression	"""done()"""		100773	0					
ANR	100795	IfStatement	if ( signal < 0 )		100773	1					
ANR	100796	Condition	signal < 0	57:8:1945:1954	100773	0	True				
ANR	100797	RelationalExpression	signal < 0		100773	0		<			
ANR	100798	Identifier	signal		100773	0					
ANR	100799	PrimaryExpression	0		100773	1					
ANR	100800	CompoundStatement		3:20:95:95	100773	1					
ANR	100801	ExpressionStatement	"qCWarning ( PLASMASHELL ) << ""the test object should offer a 'done()' signal"" << testObject"	58:8:1967:2055	100773	0	True				
ANR	100802	ShiftExpression	"qCWarning ( PLASMASHELL ) << ""the test object should offer a 'done()' signal"" << testObject"		100773	0		<<			
ANR	100803	CallExpression	qCWarning ( PLASMASHELL )		100773	0					
ANR	100804	Callee	qCWarning		100773	0					
ANR	100805	Identifier	qCWarning		100773	0					
ANR	100806	ArgumentList	PLASMASHELL		100773	1					
ANR	100807	Argument	PLASMASHELL		100773	0					
ANR	100808	Identifier	PLASMASHELL		100773	0					
ANR	100809	ShiftExpression	"""the test object should offer a 'done()' signal"" << testObject"		100773	1		<<			
ANR	100810	PrimaryExpression	"""the test object should offer a 'done()' signal"""		100773	0					
ANR	100811	Identifier	testObject		100773	1					
ANR	100812	ReturnStatement	return ;	59:8:2065:2071	100773	1	True				
ANR	100813	IfStatement	"if ( testObject -> metaObject ( ) -> indexOfProperty ( ""failed"" ) < 0 )"		100773	2					
ANR	100814	Condition	"testObject -> metaObject ( ) -> indexOfProperty ( ""failed"" ) < 0"	61:8:2087:2139	100773	0	True				
ANR	100815	RelationalExpression	"testObject -> metaObject ( ) -> indexOfProperty ( ""failed"" ) < 0"		100773	0		<			
ANR	100816	CallExpression	"testObject -> metaObject ( ) -> indexOfProperty ( ""failed"" )"		100773	0					
ANR	100817	Callee	testObject -> metaObject ( ) -> indexOfProperty		100773	0					
ANR	100818	PtrMemberAccess	testObject -> metaObject ( ) -> indexOfProperty		100773	0					
ANR	100819	CallExpression	testObject -> metaObject ( )		100773	0					
ANR	100820	Callee	testObject -> metaObject		100773	0					
ANR	100821	PtrMemberAccess	testObject -> metaObject		100773	0					
ANR	100822	Identifier	testObject		100773	0					
ANR	100823	Identifier	metaObject		100773	1					
ANR	100824	ArgumentList			100773	1					
ANR	100825	Identifier	indexOfProperty		100773	1					
ANR	100826	ArgumentList	"""failed"""		100773	1					
ANR	100827	Argument	"""failed"""		100773	0					
ANR	100828	PrimaryExpression	"""failed"""		100773	0					
ANR	100829	PrimaryExpression	0		100773	1					
ANR	100830	CompoundStatement		7:63:280:280	100773	1					
ANR	100831	ExpressionStatement	"qCWarning ( PLASMASHELL ) << ""the test object should offer a 'bool failed' property"" << testObject"	62:8:2152:2247	100773	0	True				
ANR	100832	ShiftExpression	"qCWarning ( PLASMASHELL ) << ""the test object should offer a 'bool failed' property"" << testObject"		100773	0		<<			
ANR	100833	CallExpression	qCWarning ( PLASMASHELL )		100773	0					
ANR	100834	Callee	qCWarning		100773	0					
ANR	100835	Identifier	qCWarning		100773	0					
ANR	100836	ArgumentList	PLASMASHELL		100773	1					
ANR	100837	Argument	PLASMASHELL		100773	0					
ANR	100838	Identifier	PLASMASHELL		100773	0					
ANR	100839	ShiftExpression	"""the test object should offer a 'bool failed' property"" << testObject"		100773	1		<<			
ANR	100840	PrimaryExpression	"""the test object should offer a 'bool failed' property"""		100773	0					
ANR	100841	Identifier	testObject		100773	1					
ANR	100842	ReturnStatement	return ;	63:8:2257:2263	100773	1	True				
ANR	100843	ExpressionStatement	"qCDebug ( PLASMASHELL ) << ""Test registered"" << testObject"	66:4:2276:2331	100773	3	True				
ANR	100844	ShiftExpression	"qCDebug ( PLASMASHELL ) << ""Test registered"" << testObject"		100773	0		<<			
ANR	100845	CallExpression	qCDebug ( PLASMASHELL )		100773	0					
ANR	100846	Callee	qCDebug		100773	0					
ANR	100847	Identifier	qCDebug		100773	0					
ANR	100848	ArgumentList	PLASMASHELL		100773	1					
ANR	100849	Argument	PLASMASHELL		100773	0					
ANR	100850	Identifier	PLASMASHELL		100773	0					
ANR	100851	ShiftExpression	"""Test registered"" << testObject"		100773	1		<<			
ANR	100852	PrimaryExpression	"""Test registered"""		100773	0					
ANR	100853	Identifier	testObject		100773	1					
ANR	100854	ExpressionStatement	m_tests . insert ( testObject )	67:4:2337:2363	100773	4	True				
ANR	100855	CallExpression	m_tests . insert ( testObject )		100773	0					
ANR	100856	Callee	m_tests . insert		100773	0					
ANR	100857	MemberAccess	m_tests . insert		100773	0					
ANR	100858	Identifier	m_tests		100773	0					
ANR	100859	Identifier	insert		100773	1					
ANR	100860	ArgumentList	testObject		100773	1					
ANR	100861	Argument	testObject		100773	0					
ANR	100862	Identifier	testObject		100773	0					
ANR	100863	ExpressionStatement	"connect ( testObject , SIGNAL ( done ( ) ) , this , SLOT ( testFinished ( ) ) )"	69:4:2370:2433	100773	5	True				
ANR	100864	CallExpression	"connect ( testObject , SIGNAL ( done ( ) ) , this , SLOT ( testFinished ( ) ) )"		100773	0					
ANR	100865	Callee	connect		100773	0					
ANR	100866	Identifier	connect		100773	0					
ANR	100867	ArgumentList	testObject		100773	1					
ANR	100868	Argument	testObject		100773	0					
ANR	100869	Identifier	testObject		100773	0					
ANR	100870	Argument	SIGNAL ( done ( ) )		100773	1					
ANR	100871	CallExpression	SIGNAL ( done ( ) )		100773	0					
ANR	100872	Callee	SIGNAL		100773	0					
ANR	100873	Identifier	SIGNAL		100773	0					
ANR	100874	ArgumentList	done ( )		100773	1					
ANR	100875	Argument	done ( )		100773	0					
ANR	100876	CallExpression	done ( )		100773	0					
ANR	100877	Callee	done		100773	0					
ANR	100878	Identifier	done		100773	0					
ANR	100879	ArgumentList			100773	1					
ANR	100880	Argument	this		100773	2					
ANR	100881	Identifier	this		100773	0					
ANR	100882	Argument	SLOT ( testFinished ( ) )		100773	3					
ANR	100883	CallExpression	SLOT ( testFinished ( ) )		100773	0					
ANR	100884	Callee	SLOT		100773	0					
ANR	100885	Identifier	SLOT		100773	0					
ANR	100886	ArgumentList	testFinished ( )		100773	1					
ANR	100887	Argument	testFinished ( )		100773	0					
ANR	100888	CallExpression	testFinished ( )		100773	0					
ANR	100889	Callee	testFinished		100773	0					
ANR	100890	Identifier	testFinished		100773	0					
ANR	100891	ArgumentList			100773	1					
ANR	100892	ReturnType	void		100773	1					
ANR	100893	Identifier	CoronaTestHelper :: integrateTest		100773	2					
ANR	100894	ParameterList	QObject * testObject		100773	3					
ANR	100895	Parameter	QObject * testObject	54:37:1840:1858	100773	0	True				
ANR	100896	ParameterType	QObject *		100773	0					
ANR	100897	Identifier	testObject		100773	1					
ANR	100898	CFGEntryNode	ENTRY		100773		True				
ANR	100899	CFGExitNode	EXIT		100773		True				
ANR	100900	Symbol	SIGNAL		100773						
ANR	100901	Symbol	testObject -> metaObject		100773						
ANR	100902	Symbol	* testObject		100773						
ANR	100903	Symbol	* testObject -> metaObject		100773						
ANR	100904	Symbol	testFinished		100773						
ANR	100905	Symbol	this		100773						
ANR	100906	Symbol	PLASMASHELL		100773						
ANR	100907	Symbol	done		100773						
ANR	100908	Symbol	testObject		100773						
ANR	100909	Symbol	* * testObject		100773						
ANR	100910	Symbol	SLOT		100773						
ANR	100911	Symbol	testObject -> metaObject ( ) -> indexOfSignal		100773						
ANR	100912	Symbol	testObject -> metaObject ( ) -> indexOfProperty		100773						
ANR	100913	Symbol	m_tests		100773						
ANR	100914	Symbol	signal		100773						
ANR	100915	Function	CoronaTestHelper :: testFinished	72:0:2438:2676							
ANR	100916	FunctionDef	CoronaTestHelper :: testFinished ()		100915	0					
ANR	100917	CompoundStatement		73:0:2476:2676	100915	0					
ANR	100918	IdentifierDeclStatement	QObject * testObject = sender ( ) ;	74:4:2482:2512	100915	0	True				
ANR	100919	IdentifierDecl	* testObject = sender ( )		100915	0					
ANR	100920	IdentifierDeclType	QObject *		100915	0					
ANR	100921	Identifier	testObject		100915	1					
ANR	100922	AssignmentExpression	* testObject = sender ( )		100915	2		=			
ANR	100923	Identifier	testObject		100915	0					
ANR	100924	CallExpression	sender ( )		100915	1					
ANR	100925	Callee	sender		100915	0					
ANR	100926	Identifier	sender		100915	0					
ANR	100927	ArgumentList			100915	1					
ANR	100928	ExpressionStatement	"m_exitcode += testObject -> property ( ""failed"" ) . toBool ( )"	76:4:2519:2572	100915	1	True				
ANR	100929	AssignmentExpression	"m_exitcode += testObject -> property ( ""failed"" ) . toBool ( )"		100915	0		+=			
ANR	100930	Identifier	m_exitcode		100915	0					
ANR	100931	CallExpression	"testObject -> property ( ""failed"" ) . toBool ( )"		100915	1					
ANR	100932	Callee	"testObject -> property ( ""failed"" ) . toBool"		100915	0					
ANR	100933	MemberAccess	"testObject -> property ( ""failed"" ) . toBool"		100915	0					
ANR	100934	CallExpression	"testObject -> property ( ""failed"" )"		100915	0					
ANR	100935	Callee	testObject -> property		100915	0					
ANR	100936	PtrMemberAccess	testObject -> property		100915	0					
ANR	100937	Identifier	testObject		100915	0					
ANR	100938	Identifier	property		100915	1					
ANR	100939	ArgumentList	"""failed"""		100915	1					
ANR	100940	Argument	"""failed"""		100915	0					
ANR	100941	PrimaryExpression	"""failed"""		100915	0					
ANR	100942	Identifier	toBool		100915	1					
ANR	100943	ArgumentList			100915	1					
ANR	100944	ExpressionStatement	m_tests . remove ( testObject )	77:4:2578:2604	100915	2	True				
ANR	100945	CallExpression	m_tests . remove ( testObject )		100915	0					
ANR	100946	Callee	m_tests . remove		100915	0					
ANR	100947	MemberAccess	m_tests . remove		100915	0					
ANR	100948	Identifier	m_tests		100915	0					
ANR	100949	Identifier	remove		100915	1					
ANR	100950	ArgumentList	testObject		100915	1					
ANR	100951	Argument	testObject		100915	0					
ANR	100952	Identifier	testObject		100915	0					
ANR	100953	IfStatement	if ( m_tests . isEmpty ( ) )		100915	3					
ANR	100954	Condition	m_tests . isEmpty ( )	78:8:2614:2630	100915	0	True				
ANR	100955	CallExpression	m_tests . isEmpty ( )		100915	0					
ANR	100956	Callee	m_tests . isEmpty		100915	0					
ANR	100957	MemberAccess	m_tests . isEmpty		100915	0					
ANR	100958	Identifier	m_tests		100915	0					
ANR	100959	Identifier	isEmpty		100915	1					
ANR	100960	ArgumentList			100915	1					
ANR	100961	CompoundStatement		6:27:156:156	100915	1					
ANR	100962	ExpressionStatement	qGuiApp -> exit ( m_exitcode )	79:8:2643:2668	100915	0	True				
ANR	100963	CallExpression	qGuiApp -> exit ( m_exitcode )		100915	0					
ANR	100964	Callee	qGuiApp -> exit		100915	0					
ANR	100965	PtrMemberAccess	qGuiApp -> exit		100915	0					
ANR	100966	Identifier	qGuiApp		100915	0					
ANR	100967	Identifier	exit		100915	1					
ANR	100968	ArgumentList	m_exitcode		100915	1					
ANR	100969	Argument	m_exitcode		100915	0					
ANR	100970	Identifier	m_exitcode		100915	0					
ANR	100971	ReturnType	void		100915	1					
ANR	100972	Identifier	CoronaTestHelper :: testFinished		100915	2					
ANR	100973	ParameterList			100915	3					
ANR	100974	CFGEntryNode	ENTRY		100915		True				
ANR	100975	CFGExitNode	EXIT		100915		True				
ANR	100976	Symbol	m_tests . isEmpty		100915						
ANR	100977	Symbol	"testObject -> property ( ""failed"" ) . toBool"		100915						
ANR	100978	Symbol	sender		100915						
ANR	100979	Symbol	* testObject		100915						
ANR	100980	Symbol	m_exitcode		100915						
ANR	100981	Symbol	testObject		100915						
ANR	100982	Symbol	testObject -> property		100915						
ANR	100983	Symbol	m_tests		100915						
ANR	100984	Symbol	qGuiApp		100915						
ANR	100985	Function	CoronaTestHelper :: initialize	83:0:2679:3122							
ANR	100986	FunctionDef	CoronaTestHelper :: initialize ()		100985	0					
ANR	100987	CompoundStatement		84:0:2715:3122	100985	0					
ANR	100988	Statement	foreach	85:4:2721:2727	100985	0	True				
ANR	100989	Statement	(	85:11:2728:2728	100985	1	True				
ANR	100990	Statement	Plasma	85:12:2729:2734	100985	2	True				
ANR	100991	Statement	::	85:18:2735:2736	100985	3	True				
ANR	100992	Statement	Containment	85:20:2737:2747	100985	4	True				
ANR	100993	Statement	*	85:31:2748:2748	100985	5	True				
ANR	100994	Statement	containment	85:33:2750:2760	100985	6	True				
ANR	100995	Statement	","	85:44:2761:2761	100985	7	True				
ANR	100996	Statement	m_corona	85:46:2763:2770	100985	8	True				
ANR	100997	Statement	->	85:54:2771:2772	100985	9	True				
ANR	100998	Statement	containments	85:56:2773:2784	100985	10	True				
ANR	100999	Statement	(	85:68:2785:2785	100985	11	True				
ANR	101000	Statement	)	85:69:2786:2786	100985	12	True				
ANR	101001	Statement	)	85:70:2787:2787	100985	13	True				
ANR	101002	CompoundStatement		2:72:73:73	100985	14					
ANR	101003	ExpressionStatement	processContainment ( containment )	86:8:2799:2830	100985	0	True				
ANR	101004	CallExpression	processContainment ( containment )		100985	0					
ANR	101005	Callee	processContainment		100985	0					
ANR	101006	Identifier	processContainment		100985	0					
ANR	101007	ArgumentList	containment		100985	1					
ANR	101008	Argument	containment		100985	0					
ANR	101009	Identifier	containment		100985	0					
ANR	101010	ExpressionStatement	"connect ( m_corona , & Corona :: containmentAdded , this , & CoronaTestHelper :: processContainment )"	88:4:2842:2931	100985	15	True				
ANR	101011	CallExpression	"connect ( m_corona , & Corona :: containmentAdded , this , & CoronaTestHelper :: processContainment )"		100985	0					
ANR	101012	Callee	connect		100985	0					
ANR	101013	Identifier	connect		100985	0					
ANR	101014	ArgumentList	m_corona		100985	1					
ANR	101015	Argument	m_corona		100985	0					
ANR	101016	Identifier	m_corona		100985	0					
ANR	101017	Argument	& Corona :: containmentAdded		100985	1					
ANR	101018	UnaryOperationExpression	& Corona :: containmentAdded		100985	0					
ANR	101019	UnaryOperator	&		100985	0					
ANR	101020	Identifier	Corona :: containmentAdded		100985	1					
ANR	101021	Argument	this		100985	2					
ANR	101022	Identifier	this		100985	0					
ANR	101023	Argument	& CoronaTestHelper :: processContainment		100985	3					
ANR	101024	UnaryOperationExpression	& CoronaTestHelper :: processContainment		100985	0					
ANR	101025	UnaryOperator	&		100985	0					
ANR	101026	Identifier	CoronaTestHelper :: processContainment		100985	1					
ANR	101027	IfStatement	if ( m_tests . isEmpty ( ) )		100985	16					
ANR	101028	Condition	m_tests . isEmpty ( )	90:8:2942:2958	100985	0	True				
ANR	101029	CallExpression	m_tests . isEmpty ( )		100985	0					
ANR	101030	Callee	m_tests . isEmpty		100985	0					
ANR	101031	MemberAccess	m_tests . isEmpty		100985	0					
ANR	101032	Identifier	m_tests		100985	0					
ANR	101033	Identifier	isEmpty		100985	1					
ANR	101034	ArgumentList			100985	1					
ANR	101035	CompoundStatement		7:27:245:245	100985	1					
ANR	101036	ExpressionStatement	"qCWarning ( PLASMASHELL ) << ""no tests found for the corona"" << QCoreApplication :: instance ( ) -> arguments ( )"	91:8:2971:3073	100985	0	True				
ANR	101037	ShiftExpression	"qCWarning ( PLASMASHELL ) << ""no tests found for the corona"" << QCoreApplication :: instance ( ) -> arguments ( )"		100985	0		<<			
ANR	101038	CallExpression	qCWarning ( PLASMASHELL )		100985	0					
ANR	101039	Callee	qCWarning		100985	0					
ANR	101040	Identifier	qCWarning		100985	0					
ANR	101041	ArgumentList	PLASMASHELL		100985	1					
ANR	101042	Argument	PLASMASHELL		100985	0					
ANR	101043	Identifier	PLASMASHELL		100985	0					
ANR	101044	ShiftExpression	"""no tests found for the corona"" << QCoreApplication :: instance ( ) -> arguments ( )"		100985	1		<<			
ANR	101045	PrimaryExpression	"""no tests found for the corona"""		100985	0					
ANR	101046	CallExpression	QCoreApplication :: instance ( ) -> arguments ( )		100985	1					
ANR	101047	Callee	QCoreApplication :: instance ( ) -> arguments		100985	0					
ANR	101048	PtrMemberAccess	QCoreApplication :: instance ( ) -> arguments		100985	0					
ANR	101049	CallExpression	QCoreApplication :: instance ( )		100985	0					
ANR	101050	Callee	QCoreApplication :: instance		100985	0					
ANR	101051	Identifier	QCoreApplication :: instance		100985	0					
ANR	101052	ArgumentList			100985	1					
ANR	101053	Identifier	arguments		100985	1					
ANR	101054	ArgumentList			100985	1					
ANR	101055	ExpressionStatement	qGuiApp -> exit ( )	92:8:3083:3098	100985	1	True				
ANR	101056	CallExpression	qGuiApp -> exit ( )		100985	0					
ANR	101057	Callee	qGuiApp -> exit		100985	0					
ANR	101058	PtrMemberAccess	qGuiApp -> exit		100985	0					
ANR	101059	Identifier	qGuiApp		100985	0					
ANR	101060	Identifier	exit		100985	1					
ANR	101061	ArgumentList			100985	1					
ANR	101062	ReturnStatement	return ;	93:8:3108:3114	100985	2	True				
ANR	101063	ReturnType	void		100985	1					
ANR	101064	Identifier	CoronaTestHelper :: initialize		100985	2					
ANR	101065	ParameterList			100985	3					
ANR	101066	CFGEntryNode	ENTRY		100985		True				
ANR	101067	CFGExitNode	EXIT		100985		True				
ANR	101068	Symbol	containment		100985						
ANR	101069	Symbol	& Corona :: containmentAdded		100985						
ANR	101070	Symbol	m_tests . isEmpty		100985						
ANR	101071	Symbol	QCoreApplication :: instance		100985						
ANR	101072	Symbol	this		100985						
ANR	101073	Symbol	& CoronaTestHelper :: processContainment		100985						
ANR	101074	Symbol	m_tests		100985						
ANR	101075	Symbol	PLASMASHELL		100985						
ANR	101076	Symbol	qGuiApp		100985						
ANR	101077	Symbol	m_corona		100985						
