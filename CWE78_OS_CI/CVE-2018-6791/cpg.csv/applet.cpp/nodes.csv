command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	13955	File	data/converged/CVE-2018-6791_plasma-workspace/applet.cpp								
ANR	13956	ClassDef	Applet :: Private	35:0:1054:1374							
ANR	13957	Function	Private	38:4:1090:1175							
ANR	13958	FunctionDef	Private ()		13957	0					
ANR	13959	CompoundStatement		41:4:1169:1175	13957	0					
ANR	13960	Identifier	Private		13957	1					
ANR	13961	ParameterList			13957	2					
ANR	13962	CFGEntryNode	ENTRY		13957		True				
ANR	13963	CFGExitNode	EXIT		13957		True				
ANR	13964	DeclStmt									
ANR	13965	Decl							KConfigGroup	KConfigGroup	configGroup
ANR	13966	DeclStmt									
ANR	13967	Decl							QStringList	QStringList	configGroupPath
ANR	13968	DeclStmt									
ANR	13969	Decl							KConfigGroup	KConfigGroup	globalConfigGroup
ANR	13970	DeclStmt									
ANR	13971	Decl							QStringList	QStringList	globalConfigGroupPath
ANR	13972	Function	Applet :: ~Applet	58:0:1467:1501							
ANR	13973	FunctionDef	Applet :: ~Applet ()		13972	0					
ANR	13974	CompoundStatement		59:0:1485:1501	13972	0					
ANR	13975	Statement	delete	60:4:1491:1496	13972	0	True				
ANR	13976	ExpressionStatement	d	60:11:1498:1499	13972	1	True				
ANR	13977	Identifier	d		13972	0					
ANR	13978	Identifier	Applet :: ~Applet		13972	1					
ANR	13979	ParameterList			13972	2					
ANR	13980	CFGEntryNode	ENTRY		13972		True				
ANR	13981	CFGExitNode	EXIT		13972		True				
ANR	13982	Function	Applet :: setCurrentConfigGroup	63:0:1504:2027							
ANR	13983	FunctionDef	Applet :: setCurrentConfigGroup (const QStringList & groupNames)		13982	0					
ANR	13984	CompoundStatement		64:0:1570:2027	13982	0					
ANR	13985	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	65:4:1576:1606	13982	0	True				
ANR	13986	IdentifierDecl	* app = applet ( )		13982	0					
ANR	13987	IdentifierDeclType	Plasma :: Applet *		13982	0					
ANR	13988	Identifier	app		13982	1					
ANR	13989	AssignmentExpression	* app = applet ( )		13982	2		=			
ANR	13990	Identifier	app		13982	0					
ANR	13991	CallExpression	applet ( )		13982	1					
ANR	13992	Callee	applet		13982	0					
ANR	13993	Identifier	applet		13982	0					
ANR	13994	ArgumentList			13982	1					
ANR	13995	IfStatement	if ( ! app )		13982	1					
ANR	13996	Condition	! app	66:8:1616:1619	13982	0	True				
ANR	13997	UnaryOperationExpression	! app		13982	0					
ANR	13998	UnaryOperator	!		13982	0					
ANR	13999	Identifier	app		13982	1					
ANR	14000	CompoundStatement		3:14:51:51	13982	1					
ANR	14001	ExpressionStatement	d -> configGroup = KConfigGroup ( )	67:8:1632:1663	13982	0	True				
ANR	14002	AssignmentExpression	d -> configGroup = KConfigGroup ( )		13982	0		=			
ANR	14003	PtrMemberAccess	d -> configGroup		13982	0					
ANR	14004	Identifier	d		13982	0					
ANR	14005	Identifier	configGroup		13982	1					
ANR	14006	CallExpression	KConfigGroup ( )		13982	1					
ANR	14007	Callee	KConfigGroup		13982	0					
ANR	14008	Identifier	KConfigGroup		13982	0					
ANR	14009	ArgumentList			13982	1					
ANR	14010	ExpressionStatement	d -> configGroupPath . clear ( )	68:8:1673:1699	13982	1	True				
ANR	14011	CallExpression	d -> configGroupPath . clear ( )		13982	0					
ANR	14012	Callee	d -> configGroupPath . clear		13982	0					
ANR	14013	MemberAccess	d -> configGroupPath . clear		13982	0					
ANR	14014	PtrMemberAccess	d -> configGroupPath		13982	0					
ANR	14015	Identifier	d		13982	0					
ANR	14016	Identifier	configGroupPath		13982	1					
ANR	14017	Identifier	clear		13982	1					
ANR	14018	ArgumentList			13982	1					
ANR	14019	ReturnStatement	return ;	69:8:1709:1715	13982	2	True				
ANR	14020	ExpressionStatement	d -> configGroup = app -> config ( )	72:4:1728:1758	13982	2	True				
ANR	14021	AssignmentExpression	d -> configGroup = app -> config ( )		13982	0		=			
ANR	14022	PtrMemberAccess	d -> configGroup		13982	0					
ANR	14023	Identifier	d		13982	0					
ANR	14024	Identifier	configGroup		13982	1					
ANR	14025	CallExpression	app -> config ( )		13982	1					
ANR	14026	Callee	app -> config		13982	0					
ANR	14027	PtrMemberAccess	app -> config		13982	0					
ANR	14028	Identifier	app		13982	0					
ANR	14029	Identifier	config		13982	1					
ANR	14030	ArgumentList			13982	1					
ANR	14031	ExpressionStatement	d -> configGroupPath = groupNames	73:4:1764:1795	13982	3	True				
ANR	14032	AssignmentExpression	d -> configGroupPath = groupNames		13982	0		=			
ANR	14033	PtrMemberAccess	d -> configGroupPath		13982	0					
ANR	14034	Identifier	d		13982	0					
ANR	14035	Identifier	configGroupPath		13982	1					
ANR	14036	Identifier	groupNames		13982	1					
ANR	14037	Statement	foreach	75:4:1802:1808	13982	4	True				
ANR	14038	Statement	(	75:12:1810:1810	13982	5	True				
ANR	14039	Statement	const	75:13:1811:1815	13982	6	True				
ANR	14040	Statement	QString	75:19:1817:1823	13982	7	True				
ANR	14041	Statement	&	75:27:1825:1825	13982	8	True				
ANR	14042	Statement	groupName	75:28:1826:1834	13982	9	True				
ANR	14043	Statement	","	75:37:1835:1835	13982	10	True				
ANR	14044	Statement	groupNames	75:39:1837:1846	13982	11	True				
ANR	14045	Statement	)	75:49:1847:1847	13982	12	True				
ANR	14046	CompoundStatement		12:51:278:278	13982	13					
ANR	14047	ExpressionStatement	"d -> configGroup = KConfigGroup ( & d -> configGroup , groupName )"	76:8:1859:1916	13982	0	True				
ANR	14048	AssignmentExpression	"d -> configGroup = KConfigGroup ( & d -> configGroup , groupName )"		13982	0		=			
ANR	14049	PtrMemberAccess	d -> configGroup		13982	0					
ANR	14050	Identifier	d		13982	0					
ANR	14051	Identifier	configGroup		13982	1					
ANR	14052	CallExpression	"KConfigGroup ( & d -> configGroup , groupName )"		13982	1					
ANR	14053	Callee	KConfigGroup		13982	0					
ANR	14054	Identifier	KConfigGroup		13982	0					
ANR	14055	ArgumentList	& d -> configGroup		13982	1					
ANR	14056	Argument	& d -> configGroup		13982	0					
ANR	14057	UnaryOperationExpression	& d -> configGroup		13982	0					
ANR	14058	UnaryOperator	&		13982	0					
ANR	14059	PtrMemberAccess	d -> configGroup		13982	1					
ANR	14060	Identifier	d		13982	0					
ANR	14061	Identifier	configGroup		13982	1					
ANR	14062	Argument	groupName		13982	1					
ANR	14063	Identifier	groupName		13982	0					
ANR	14064	ExpressionStatement	"d -> inWallpaperConfig = ! groupNames . isEmpty ( ) && groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"	79:4:1929:2025	13982	14	True				
ANR	14065	AssignmentExpression	"d -> inWallpaperConfig = ! groupNames . isEmpty ( ) && groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"		13982	0		=			
ANR	14066	PtrMemberAccess	d -> inWallpaperConfig		13982	0					
ANR	14067	Identifier	d		13982	0					
ANR	14068	Identifier	inWallpaperConfig		13982	1					
ANR	14069	AndExpression	"! groupNames . isEmpty ( ) && groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"		13982	1		&&			
ANR	14070	UnaryOperationExpression	! groupNames . isEmpty ( )		13982	0					
ANR	14071	UnaryOperator	!		13982	0					
ANR	14072	CallExpression	groupNames . isEmpty ( )		13982	1					
ANR	14073	Callee	groupNames . isEmpty		13982	0					
ANR	14074	MemberAccess	groupNames . isEmpty		13982	0					
ANR	14075	Identifier	groupNames		13982	0					
ANR	14076	Identifier	isEmpty		13982	1					
ANR	14077	ArgumentList			13982	1					
ANR	14078	EqualityExpression	"groupNames . first ( ) == QLatin1String ( ""Wallpaper"" )"		13982	1		==			
ANR	14079	CallExpression	groupNames . first ( )		13982	0					
ANR	14080	Callee	groupNames . first		13982	0					
ANR	14081	MemberAccess	groupNames . first		13982	0					
ANR	14082	Identifier	groupNames		13982	0					
ANR	14083	Identifier	first		13982	1					
ANR	14084	ArgumentList			13982	1					
ANR	14085	CallExpression	"QLatin1String ( ""Wallpaper"" )"		13982	1					
ANR	14086	Callee	QLatin1String		13982	0					
ANR	14087	Identifier	QLatin1String		13982	0					
ANR	14088	ArgumentList	"""Wallpaper"""		13982	1					
ANR	14089	Argument	"""Wallpaper"""		13982	0					
ANR	14090	PrimaryExpression	"""Wallpaper"""		13982	0					
ANR	14091	ReturnType	void		13982	1					
ANR	14092	Identifier	Applet :: setCurrentConfigGroup		13982	2					
ANR	14093	ParameterList	const QStringList & groupNames		13982	3					
ANR	14094	Parameter	const QStringList & groupNames	63:35:1539:1567	13982	0	True				
ANR	14095	ParameterType	const QStringList &		13982	0					
ANR	14096	Identifier	groupNames		13982	1					
ANR	14097	CFGEntryNode	ENTRY		13982		True				
ANR	14098	CFGExitNode	EXIT		13982		True				
ANR	14099	Symbol	app		13982						
ANR	14100	Symbol	groupNames . first		13982						
ANR	14101	Symbol	d -> inWallpaperConfig		13982						
ANR	14102	Symbol	app -> config		13982						
ANR	14103	Symbol	d		13982						
ANR	14104	Symbol	d -> configGroup		13982						
ANR	14105	Symbol	groupNames . isEmpty		13982						
ANR	14106	Symbol	d -> configGroupPath		13982						
ANR	14107	Symbol	* d		13982						
ANR	14108	Symbol	groupNames		13982						
ANR	14109	Symbol	QLatin1String		13982						
ANR	14110	Symbol	groupName		13982						
ANR	14111	Symbol	* app		13982						
ANR	14112	Symbol	& d -> configGroup		13982						
ANR	14113	Symbol	applet		13982						
ANR	14114	Symbol	KConfigGroup		13982						
ANR	14115	Function	Applet :: currentConfigGroup	82:0:2030:2110							
ANR	14116	FunctionDef	Applet :: currentConfigGroup ()		14115	0					
ANR	14117	CompoundStatement		83:0:2077:2110	14115	0					
ANR	14118	ReturnStatement	return d -> configGroupPath ;	84:4:2083:2108	14115	0	True				
ANR	14119	PtrMemberAccess	d -> configGroupPath		14115	0					
ANR	14120	Identifier	d		14115	0					
ANR	14121	Identifier	configGroupPath		14115	1					
ANR	14122	ReturnType	QStringList		14115	1					
ANR	14123	Identifier	Applet :: currentConfigGroup		14115	2					
ANR	14124	ParameterList			14115	3					
ANR	14125	CFGEntryNode	ENTRY		14115		True				
ANR	14126	CFGExitNode	EXIT		14115		True				
ANR	14127	Symbol	d		14115						
ANR	14128	Symbol	d -> configGroupPath		14115						
ANR	14129	Symbol	* d		14115						
ANR	14130	Function	Applet :: configKeys	87:0:2113:2264							
ANR	14131	FunctionDef	Applet :: configKeys ()		14130	0					
ANR	14132	CompoundStatement		88:0:2152:2264	14130	0					
ANR	14133	IfStatement	if ( d -> configGroup . isValid ( ) )		14130	0					
ANR	14134	Condition	d -> configGroup . isValid ( )	89:8:2162:2185	14130	0	True				
ANR	14135	CallExpression	d -> configGroup . isValid ( )		14130	0					
ANR	14136	Callee	d -> configGroup . isValid		14130	0					
ANR	14137	MemberAccess	d -> configGroup . isValid		14130	0					
ANR	14138	PtrMemberAccess	d -> configGroup		14130	0					
ANR	14139	Identifier	d		14130	0					
ANR	14140	Identifier	configGroup		14130	1					
ANR	14141	Identifier	isValid		14130	1					
ANR	14142	ArgumentList			14130	1					
ANR	14143	CompoundStatement		2:34:35:35	14130	1					
ANR	14144	ReturnStatement	return d -> configGroup . keyList ( ) ;	90:8:2198:2229	14130	0	True				
ANR	14145	CallExpression	d -> configGroup . keyList ( )		14130	0					
ANR	14146	Callee	d -> configGroup . keyList		14130	0					
ANR	14147	MemberAccess	d -> configGroup . keyList		14130	0					
ANR	14148	PtrMemberAccess	d -> configGroup		14130	0					
ANR	14149	Identifier	d		14130	0					
ANR	14150	Identifier	configGroup		14130	1					
ANR	14151	Identifier	keyList		14130	1					
ANR	14152	ArgumentList			14130	1					
ANR	14153	ReturnStatement	return QStringList ( ) ;	93:4:2242:2262	14130	1	True				
ANR	14154	CallExpression	QStringList ( )		14130	0					
ANR	14155	Callee	QStringList		14130	0					
ANR	14156	Identifier	QStringList		14130	0					
ANR	14157	ArgumentList			14130	1					
ANR	14158	ReturnType	QStringList		14130	1					
ANR	14159	Identifier	Applet :: configKeys		14130	2					
ANR	14160	ParameterList			14130	3					
ANR	14161	CFGEntryNode	ENTRY		14130		True				
ANR	14162	CFGExitNode	EXIT		14130		True				
ANR	14163	Symbol	d		14130						
ANR	14164	Symbol	d -> configGroup		14130						
ANR	14165	Symbol	d -> configGroup . keyList		14130						
ANR	14166	Symbol	QStringList		14130						
ANR	14167	Symbol	* d		14130						
ANR	14168	Symbol	d -> configGroup . isValid		14130						
ANR	14169	Function	Applet :: configGroups	96:0:2267:2422							
ANR	14170	FunctionDef	Applet :: configGroups ()		14169	0					
ANR	14171	CompoundStatement		97:0:2308:2422	14169	0					
ANR	14172	IfStatement	if ( d -> configGroup . isValid ( ) )		14169	0					
ANR	14173	Condition	d -> configGroup . isValid ( )	98:8:2318:2341	14169	0	True				
ANR	14174	CallExpression	d -> configGroup . isValid ( )		14169	0					
ANR	14175	Callee	d -> configGroup . isValid		14169	0					
ANR	14176	MemberAccess	d -> configGroup . isValid		14169	0					
ANR	14177	PtrMemberAccess	d -> configGroup		14169	0					
ANR	14178	Identifier	d		14169	0					
ANR	14179	Identifier	configGroup		14169	1					
ANR	14180	Identifier	isValid		14169	1					
ANR	14181	ArgumentList			14169	1					
ANR	14182	CompoundStatement		2:34:35:35	14169	1					
ANR	14183	ReturnStatement	return d -> configGroup . groupList ( ) ;	99:8:2354:2387	14169	0	True				
ANR	14184	CallExpression	d -> configGroup . groupList ( )		14169	0					
ANR	14185	Callee	d -> configGroup . groupList		14169	0					
ANR	14186	MemberAccess	d -> configGroup . groupList		14169	0					
ANR	14187	PtrMemberAccess	d -> configGroup		14169	0					
ANR	14188	Identifier	d		14169	0					
ANR	14189	Identifier	configGroup		14169	1					
ANR	14190	Identifier	groupList		14169	1					
ANR	14191	ArgumentList			14169	1					
ANR	14192	ReturnStatement	return QStringList ( ) ;	102:4:2400:2420	14169	1	True				
ANR	14193	CallExpression	QStringList ( )		14169	0					
ANR	14194	Callee	QStringList		14169	0					
ANR	14195	Identifier	QStringList		14169	0					
ANR	14196	ArgumentList			14169	1					
ANR	14197	ReturnType	QStringList		14169	1					
ANR	14198	Identifier	Applet :: configGroups		14169	2					
ANR	14199	ParameterList			14169	3					
ANR	14200	CFGEntryNode	ENTRY		14169		True				
ANR	14201	CFGExitNode	EXIT		14169		True				
ANR	14202	Symbol	d		14169						
ANR	14203	Symbol	d -> configGroup		14169						
ANR	14204	Symbol	QStringList		14169						
ANR	14205	Symbol	* d		14169						
ANR	14206	Symbol	d -> configGroup . groupList		14169						
ANR	14207	Symbol	d -> configGroup . isValid		14169						
ANR	14208	Function	Applet :: readConfig	105:0:2425:2635							
ANR	14209	FunctionDef	"Applet :: readConfig (const QString & key , const QVariant & def)"		14208	0					
ANR	14210	CompoundStatement		106:0:2500:2635	14208	0					
ANR	14211	IfStatement	if ( d -> configGroup . isValid ( ) )		14208	0					
ANR	14212	Condition	d -> configGroup . isValid ( )	107:8:2510:2533	14208	0	True				
ANR	14213	CallExpression	d -> configGroup . isValid ( )		14208	0					
ANR	14214	Callee	d -> configGroup . isValid		14208	0					
ANR	14215	MemberAccess	d -> configGroup . isValid		14208	0					
ANR	14216	PtrMemberAccess	d -> configGroup		14208	0					
ANR	14217	Identifier	d		14208	0					
ANR	14218	Identifier	configGroup		14208	1					
ANR	14219	Identifier	isValid		14208	1					
ANR	14220	ArgumentList			14208	1					
ANR	14221	CompoundStatement		2:34:35:35	14208	1					
ANR	14222	ReturnStatement	"return d -> configGroup . readEntry ( key , def ) ;"	108:8:2546:2587	14208	0	True				
ANR	14223	CallExpression	"d -> configGroup . readEntry ( key , def )"		14208	0					
ANR	14224	Callee	d -> configGroup . readEntry		14208	0					
ANR	14225	MemberAccess	d -> configGroup . readEntry		14208	0					
ANR	14226	PtrMemberAccess	d -> configGroup		14208	0					
ANR	14227	Identifier	d		14208	0					
ANR	14228	Identifier	configGroup		14208	1					
ANR	14229	Identifier	readEntry		14208	1					
ANR	14230	ArgumentList	key		14208	1					
ANR	14231	Argument	key		14208	0					
ANR	14232	Identifier	key		14208	0					
ANR	14233	Argument	def		14208	1					
ANR	14234	Identifier	def		14208	0					
ANR	14235	ElseStatement	else		14208	0					
ANR	14236	CompoundStatement		4:11:99:99	14208	0					
ANR	14237	ReturnStatement	return QVariant ( ) ;	110:8:2610:2627	14208	0	True				
ANR	14238	CallExpression	QVariant ( )		14208	0					
ANR	14239	Callee	QVariant		14208	0					
ANR	14240	Identifier	QVariant		14208	0					
ANR	14241	ArgumentList			14208	1					
ANR	14242	ReturnType	QVariant		14208	1					
ANR	14243	Identifier	Applet :: readConfig		14208	2					
ANR	14244	ParameterList	"const QString & key , const QVariant & def"		14208	3					
ANR	14245	Parameter	const QString & key	105:28:2453:2470	14208	0	True				
ANR	14246	ParameterType	const QString &		14208	0					
ANR	14247	Identifier	key		14208	1					
ANR	14248	Parameter	const QVariant & def	105:48:2473:2491	14208	1	True				
ANR	14249	ParameterType	const QVariant &		14208	0					
ANR	14250	Identifier	def		14208	1					
ANR	14251	CFGEntryNode	ENTRY		14208		True				
ANR	14252	CFGExitNode	EXIT		14208		True				
ANR	14253	Symbol	d -> configGroup . readEntry		14208						
ANR	14254	Symbol	QVariant		14208						
ANR	14255	Symbol	def		14208						
ANR	14256	Symbol	d		14208						
ANR	14257	Symbol	d -> configGroup		14208						
ANR	14258	Symbol	key		14208						
ANR	14259	Symbol	* d		14208						
ANR	14260	Symbol	d -> configGroup . isValid		14208						
ANR	14261	Function	Applet :: writeConfig	114:0:2638:4080							
ANR	14262	FunctionDef	"Applet :: writeConfig (const QString & key , const QVariant & value)"		14261	0					
ANR	14263	CompoundStatement		115:0:2706:4080	14261	0					
ANR	14264	IfStatement	if ( d -> configGroup . isValid ( ) )		14261	0					
ANR	14265	Condition	d -> configGroup . isValid ( )	116:8:2716:2739	14261	0	True				
ANR	14266	CallExpression	d -> configGroup . isValid ( )		14261	0					
ANR	14267	Callee	d -> configGroup . isValid		14261	0					
ANR	14268	MemberAccess	d -> configGroup . isValid		14261	0					
ANR	14269	PtrMemberAccess	d -> configGroup		14261	0					
ANR	14270	Identifier	d		14261	0					
ANR	14271	Identifier	configGroup		14261	1					
ANR	14272	Identifier	isValid		14261	1					
ANR	14273	ArgumentList			14261	1					
ANR	14274	CompoundStatement		2:34:35:35	14261	1					
ANR	14275	IfStatement	if ( d -> inWallpaperConfig )		14261	0					
ANR	14276	Condition	d -> inWallpaperConfig	117:12:2756:2775	14261	0	True				
ANR	14277	PtrMemberAccess	d -> inWallpaperConfig		14261	0					
ANR	14278	Identifier	d		14261	0					
ANR	14279	Identifier	inWallpaperConfig		14261	1					
ANR	14280	CompoundStatement		3:34:71:71	14261	1					
ANR	14281	Statement	QObject	119:12:2866:2872	14261	0	True				
ANR	14282	Statement	*	119:20:2874:2874	14261	1	True				
ANR	14283	Statement	wallpaperGraphicsObject	119:21:2875:2897	14261	2	True				
ANR	14284	Statement	=	119:45:2899:2899	14261	3	True				
ANR	14285	Statement	applet	119:47:2901:2906	14261	4	True				
ANR	14286	Statement	(	119:53:2907:2907	14261	5	True				
ANR	14287	Statement	)	119:54:2908:2908	14261	6	True				
ANR	14288	Statement	->	119:55:2909:2910	14261	7	True				
ANR	14289	Statement	property	119:57:2911:2918	14261	8	True				
ANR	14290	Statement	(	119:65:2919:2919	14261	9	True				
ANR	14291	Statement	"""wallpaperGraphicsObject"""	119:66:2920:2944	14261	10	True				
ANR	14292	Statement	)	119:91:2945:2945	14261	11	True				
ANR	14293	Statement	.	119:92:2946:2946	14261	12	True				
ANR	14294	Statement	value	119:93:2947:2951	14261	13	True				
ANR	14295	Statement	<	119:98:2952:2952	14261	14	True				
ANR	14296	Statement	QObject	119:99:2953:2959	14261	15	True				
ANR	14297	Statement	*	119:107:2961:2961	14261	16	True				
ANR	14298	Statement	>	119:108:2962:2962	14261	17	True				
ANR	14299	Statement	(	119:109:2963:2963	14261	18	True				
ANR	14300	Statement	)	119:110:2964:2964	14261	19	True				
ANR	14301	ExpressionStatement		119:111:2965:2965	14261	20	True				
ANR	14302	IfStatement	if ( wallpaperGraphicsObject )		14261	21					
ANR	14303	Condition	wallpaperGraphicsObject	120:16:2983:3005	14261	0	True				
ANR	14304	Identifier	wallpaperGraphicsObject		14261	0					
ANR	14305	CompoundStatement		6:41:301:301	14261	1					
ANR	14306	Statement	KDeclarative	121:16:3026:3037	14261	0	True				
ANR	14307	Statement	::	121:28:3038:3039	14261	1	True				
ANR	14308	Statement	ConfigPropertyMap	121:30:3040:3056	14261	2	True				
ANR	14309	Statement	*	121:48:3058:3058	14261	3	True				
ANR	14310	Statement	config	121:49:3059:3064	14261	4	True				
ANR	14311	Statement	=	121:56:3066:3066	14261	5	True				
ANR	14312	Statement	static_cast	121:58:3068:3078	14261	6	True				
ANR	14313	Statement	<	121:69:3079:3079	14261	7	True				
ANR	14314	Statement	KDeclarative	121:70:3080:3091	14261	8	True				
ANR	14315	Statement	::	121:82:3092:3093	14261	9	True				
ANR	14316	Statement	ConfigPropertyMap	121:84:3094:3110	14261	10	True				
ANR	14317	Statement	*	121:102:3112:3112	14261	11	True				
ANR	14318	Statement	>	121:103:3113:3113	14261	12	True				
ANR	14319	Statement	(	121:104:3114:3114	14261	13	True				
ANR	14320	Statement	wallpaperGraphicsObject	121:105:3115:3137	14261	14	True				
ANR	14321	Statement	->	121:128:3138:3139	14261	15	True				
ANR	14322	Statement	property	121:130:3140:3147	14261	16	True				
ANR	14323	Statement	(	121:138:3148:3148	14261	17	True				
ANR	14324	Statement	"""configuration"""	121:139:3149:3163	14261	18	True				
ANR	14325	Statement	)	121:154:3164:3164	14261	19	True				
ANR	14326	Statement	.	121:155:3165:3165	14261	20	True				
ANR	14327	Statement	value	121:156:3166:3170	14261	21	True				
ANR	14328	Statement	<	121:161:3171:3171	14261	22	True				
ANR	14329	Statement	QObject	121:162:3172:3178	14261	23	True				
ANR	14330	Statement	*	121:170:3180:3180	14261	24	True				
ANR	14331	Statement	>	121:171:3181:3181	14261	25	True				
ANR	14332	Statement	(	121:172:3182:3182	14261	26	True				
ANR	14333	Statement	)	121:173:3183:3183	14261	27	True				
ANR	14334	Statement	)	121:174:3184:3184	14261	28	True				
ANR	14335	ExpressionStatement		121:175:3185:3185	14261	29	True				
ANR	14336	ExpressionStatement	"config -> setProperty ( key . toLatin1 ( ) , value )"	122:16:3203:3245	14261	30	True				
ANR	14337	CallExpression	"config -> setProperty ( key . toLatin1 ( ) , value )"		14261	0					
ANR	14338	Callee	config -> setProperty		14261	0					
ANR	14339	PtrMemberAccess	config -> setProperty		14261	0					
ANR	14340	Identifier	config		14261	0					
ANR	14341	Identifier	setProperty		14261	1					
ANR	14342	ArgumentList	key . toLatin1 ( )		14261	1					
ANR	14343	Argument	key . toLatin1 ( )		14261	0					
ANR	14344	CallExpression	key . toLatin1 ( )		14261	0					
ANR	14345	Callee	key . toLatin1		14261	0					
ANR	14346	MemberAccess	key . toLatin1		14261	0					
ANR	14347	Identifier	key		14261	0					
ANR	14348	Identifier	toLatin1		14261	1					
ANR	14349	ArgumentList			14261	1					
ANR	14350	Argument	value		14261	1					
ANR	14351	Identifier	value		14261	0					
ANR	14352	ElseStatement	else		14261	0					
ANR	14353	IfStatement	if ( applet ( ) -> configScheme ( ) )		14261	0					
ANR	14354	Condition	applet ( ) -> configScheme ( )	124:19:3280:3303	14261	0	True				
ANR	14355	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14356	Callee	applet ( ) -> configScheme		14261	0					
ANR	14357	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14358	CallExpression	applet ( )		14261	0					
ANR	14359	Callee	applet		14261	0					
ANR	14360	Identifier	applet		14261	0					
ANR	14361	ArgumentList			14261	1					
ANR	14362	Identifier	configScheme		14261	1					
ANR	14363	ArgumentList			14261	1					
ANR	14364	CompoundStatement		12:12:683:756	14261	1					
ANR	14365	IdentifierDeclStatement	KConfigSkeletonItem * item = applet ( ) -> configScheme ( ) -> findItemByName ( key ) ;	126:12:3390:3463	14261	0	True				
ANR	14366	IdentifierDecl	* item = applet ( ) -> configScheme ( ) -> findItemByName ( key )		14261	0					
ANR	14367	IdentifierDeclType	KConfigSkeletonItem *		14261	0					
ANR	14368	Identifier	item		14261	1					
ANR	14369	AssignmentExpression	* item = applet ( ) -> configScheme ( ) -> findItemByName ( key )		14261	2		=			
ANR	14370	Identifier	item		14261	0					
ANR	14371	CallExpression	applet ( ) -> configScheme ( ) -> findItemByName ( key )		14261	1					
ANR	14372	Callee	applet ( ) -> configScheme ( ) -> findItemByName		14261	0					
ANR	14373	PtrMemberAccess	applet ( ) -> configScheme ( ) -> findItemByName		14261	0					
ANR	14374	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14375	Callee	applet ( ) -> configScheme		14261	0					
ANR	14376	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14377	CallExpression	applet ( )		14261	0					
ANR	14378	Callee	applet		14261	0					
ANR	14379	Identifier	applet		14261	0					
ANR	14380	ArgumentList			14261	1					
ANR	14381	Identifier	configScheme		14261	1					
ANR	14382	ArgumentList			14261	1					
ANR	14383	Identifier	findItemByName		14261	1					
ANR	14384	ArgumentList	key		14261	1					
ANR	14385	Argument	key		14261	0					
ANR	14386	Identifier	key		14261	0					
ANR	14387	IfStatement	if ( item )		14261	1					
ANR	14388	Condition	item	127:16:3481:3484	14261	0	True				
ANR	14389	Identifier	item		14261	0					
ANR	14390	CompoundStatement		13:22:780:780	14261	1					
ANR	14391	ExpressionStatement	item -> setProperty ( value )	128:16:3505:3529	14261	0	True				
ANR	14392	CallExpression	item -> setProperty ( value )		14261	0					
ANR	14393	Callee	item -> setProperty		14261	0					
ANR	14394	PtrMemberAccess	item -> setProperty		14261	0					
ANR	14395	Identifier	item		14261	0					
ANR	14396	Identifier	setProperty		14261	1					
ANR	14397	ArgumentList	value		14261	1					
ANR	14398	Argument	value		14261	0					
ANR	14399	Identifier	value		14261	0					
ANR	14400	ExpressionStatement	applet ( ) -> configScheme ( ) -> blockSignals ( true )	129:16:3547:3591	14261	1	True				
ANR	14401	CallExpression	applet ( ) -> configScheme ( ) -> blockSignals ( true )		14261	0					
ANR	14402	Callee	applet ( ) -> configScheme ( ) -> blockSignals		14261	0					
ANR	14403	PtrMemberAccess	applet ( ) -> configScheme ( ) -> blockSignals		14261	0					
ANR	14404	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14405	Callee	applet ( ) -> configScheme		14261	0					
ANR	14406	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14407	CallExpression	applet ( )		14261	0					
ANR	14408	Callee	applet		14261	0					
ANR	14409	Identifier	applet		14261	0					
ANR	14410	ArgumentList			14261	1					
ANR	14411	Identifier	configScheme		14261	1					
ANR	14412	ArgumentList			14261	1					
ANR	14413	Identifier	blockSignals		14261	1					
ANR	14414	ArgumentList	true		14261	1					
ANR	14415	Argument	true		14261	0					
ANR	14416	Identifier	true		14261	0					
ANR	14417	ExpressionStatement	applet ( ) -> configScheme ( ) -> save ( )	130:16:3609:3641	14261	2	True				
ANR	14418	CallExpression	applet ( ) -> configScheme ( ) -> save ( )		14261	0					
ANR	14419	Callee	applet ( ) -> configScheme ( ) -> save		14261	0					
ANR	14420	PtrMemberAccess	applet ( ) -> configScheme ( ) -> save		14261	0					
ANR	14421	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14422	Callee	applet ( ) -> configScheme		14261	0					
ANR	14423	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14424	CallExpression	applet ( )		14261	0					
ANR	14425	Callee	applet		14261	0					
ANR	14426	Identifier	applet		14261	0					
ANR	14427	ArgumentList			14261	1					
ANR	14428	Identifier	configScheme		14261	1					
ANR	14429	ArgumentList			14261	1					
ANR	14430	Identifier	save		14261	1					
ANR	14431	ArgumentList			14261	1					
ANR	14432	ExpressionStatement	applet ( ) -> configScheme ( ) -> read ( )	133:16:3810:3842	14261	3	True				
ANR	14433	CallExpression	applet ( ) -> configScheme ( ) -> read ( )		14261	0					
ANR	14434	Callee	applet ( ) -> configScheme ( ) -> read		14261	0					
ANR	14435	PtrMemberAccess	applet ( ) -> configScheme ( ) -> read		14261	0					
ANR	14436	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14437	Callee	applet ( ) -> configScheme		14261	0					
ANR	14438	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14439	CallExpression	applet ( )		14261	0					
ANR	14440	Callee	applet		14261	0					
ANR	14441	Identifier	applet		14261	0					
ANR	14442	ArgumentList			14261	1					
ANR	14443	Identifier	configScheme		14261	1					
ANR	14444	ArgumentList			14261	1					
ANR	14445	Identifier	read		14261	1					
ANR	14446	ArgumentList			14261	1					
ANR	14447	ExpressionStatement	applet ( ) -> configScheme ( ) -> blockSignals ( false )	134:16:3860:3905	14261	4	True				
ANR	14448	CallExpression	applet ( ) -> configScheme ( ) -> blockSignals ( false )		14261	0					
ANR	14449	Callee	applet ( ) -> configScheme ( ) -> blockSignals		14261	0					
ANR	14450	PtrMemberAccess	applet ( ) -> configScheme ( ) -> blockSignals		14261	0					
ANR	14451	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14452	Callee	applet ( ) -> configScheme		14261	0					
ANR	14453	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14454	CallExpression	applet ( )		14261	0					
ANR	14455	Callee	applet		14261	0					
ANR	14456	Identifier	applet		14261	0					
ANR	14457	ArgumentList			14261	1					
ANR	14458	Identifier	configScheme		14261	1					
ANR	14459	ArgumentList			14261	1					
ANR	14460	Identifier	blockSignals		14261	1					
ANR	14461	ArgumentList	false		14261	1					
ANR	14462	Argument	false		14261	0					
ANR	14463	Identifier	false		14261	0					
ANR	14464	Statement	emit	135:16:3923:3926	14261	5	True				
ANR	14465	ExpressionStatement	applet ( ) -> configScheme ( ) -> configChanged ( )	135:21:3928:3969	14261	6	True				
ANR	14466	CallExpression	applet ( ) -> configScheme ( ) -> configChanged ( )		14261	0					
ANR	14467	Callee	applet ( ) -> configScheme ( ) -> configChanged		14261	0					
ANR	14468	PtrMemberAccess	applet ( ) -> configScheme ( ) -> configChanged		14261	0					
ANR	14469	CallExpression	applet ( ) -> configScheme ( )		14261	0					
ANR	14470	Callee	applet ( ) -> configScheme		14261	0					
ANR	14471	PtrMemberAccess	applet ( ) -> configScheme		14261	0					
ANR	14472	CallExpression	applet ( )		14261	0					
ANR	14473	Callee	applet		14261	0					
ANR	14474	Identifier	applet		14261	0					
ANR	14475	ArgumentList			14261	1					
ANR	14476	Identifier	configScheme		14261	1					
ANR	14477	ArgumentList			14261	1					
ANR	14478	Identifier	configChanged		14261	1					
ANR	14479	ArgumentList			14261	1					
ANR	14480	ExpressionStatement	"d -> configGroup . writeEntry ( key , value )"	139:8:4004:4041	14261	1	True				
ANR	14481	CallExpression	"d -> configGroup . writeEntry ( key , value )"		14261	0					
ANR	14482	Callee	d -> configGroup . writeEntry		14261	0					
ANR	14483	MemberAccess	d -> configGroup . writeEntry		14261	0					
ANR	14484	PtrMemberAccess	d -> configGroup		14261	0					
ANR	14485	Identifier	d		14261	0					
ANR	14486	Identifier	configGroup		14261	1					
ANR	14487	Identifier	writeEntry		14261	1					
ANR	14488	ArgumentList	key		14261	1					
ANR	14489	Argument	key		14261	0					
ANR	14490	Identifier	key		14261	0					
ANR	14491	Argument	value		14261	1					
ANR	14492	Identifier	value		14261	0					
ANR	14493	ExpressionStatement	d -> configDirty = true	140:8:4051:4072	14261	2	True				
ANR	14494	AssignmentExpression	d -> configDirty = true		14261	0		=			
ANR	14495	PtrMemberAccess	d -> configDirty		14261	0					
ANR	14496	Identifier	d		14261	0					
ANR	14497	Identifier	configDirty		14261	1					
ANR	14498	Identifier	true		14261	1					
ANR	14499	ReturnType	void		14261	1					
ANR	14500	Identifier	Applet :: writeConfig		14261	2					
ANR	14501	ParameterList	"const QString & key , const QVariant & value"		14261	3					
ANR	14502	Parameter	const QString & key	114:25:2663:2680	14261	0	True				
ANR	14503	ParameterType	const QString &		14261	0					
ANR	14504	Identifier	key		14261	1					
ANR	14505	Parameter	const QVariant & value	114:45:2683:2703	14261	1	True				
ANR	14506	ParameterType	const QVariant &		14261	0					
ANR	14507	Identifier	value		14261	1					
ANR	14508	CFGEntryNode	ENTRY		14261		True				
ANR	14509	CFGExitNode	EXIT		14261		True				
ANR	14510	Symbol	* applet ( ) -> configScheme		14261						
ANR	14511	Symbol	d -> inWallpaperConfig		14261						
ANR	14512	Symbol	item		14261						
ANR	14513	Symbol	applet ( ) -> configScheme ( ) -> findItemByName		14261						
ANR	14514	Symbol	d -> configDirty		14261						
ANR	14515	Symbol	d		14261						
ANR	14516	Symbol	d -> configGroup		14261						
ANR	14517	Symbol	applet ( ) -> configScheme		14261						
ANR	14518	Symbol	false		14261						
ANR	14519	Symbol	* applet		14261						
ANR	14520	Symbol	* d		14261						
ANR	14521	Symbol	key . toLatin1		14261						
ANR	14522	Symbol	wallpaperGraphicsObject		14261						
ANR	14523	Symbol	true		14261						
ANR	14524	Symbol	value		14261						
ANR	14525	Symbol	config		14261						
ANR	14526	Symbol	key		14261						
ANR	14527	Symbol	applet		14261						
ANR	14528	Symbol	* * applet		14261						
ANR	14529	Symbol	d -> configGroup . isValid		14261						
ANR	14530	Function	Applet :: setCurrentGlobalConfigGroup	144:0:4083:4551							
ANR	14531	FunctionDef	Applet :: setCurrentGlobalConfigGroup (const QStringList & groupNames)		14530	0					
ANR	14532	CompoundStatement		145:0:4155:4551	14530	0					
ANR	14533	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	146:4:4161:4191	14530	0	True				
ANR	14534	IdentifierDecl	* app = applet ( )		14530	0					
ANR	14535	IdentifierDeclType	Plasma :: Applet *		14530	0					
ANR	14536	Identifier	app		14530	1					
ANR	14537	AssignmentExpression	* app = applet ( )		14530	2		=			
ANR	14538	Identifier	app		14530	0					
ANR	14539	CallExpression	applet ( )		14530	1					
ANR	14540	Callee	applet		14530	0					
ANR	14541	Identifier	applet		14530	0					
ANR	14542	ArgumentList			14530	1					
ANR	14543	IfStatement	if ( ! app )		14530	1					
ANR	14544	Condition	! app	147:8:4201:4204	14530	0	True				
ANR	14545	UnaryOperationExpression	! app		14530	0					
ANR	14546	UnaryOperator	!		14530	0					
ANR	14547	Identifier	app		14530	1					
ANR	14548	CompoundStatement		3:14:51:51	14530	1					
ANR	14549	ExpressionStatement	d -> globalConfigGroup = KConfigGroup ( )	148:8:4217:4254	14530	0	True				
ANR	14550	AssignmentExpression	d -> globalConfigGroup = KConfigGroup ( )		14530	0		=			
ANR	14551	PtrMemberAccess	d -> globalConfigGroup		14530	0					
ANR	14552	Identifier	d		14530	0					
ANR	14553	Identifier	globalConfigGroup		14530	1					
ANR	14554	CallExpression	KConfigGroup ( )		14530	1					
ANR	14555	Callee	KConfigGroup		14530	0					
ANR	14556	Identifier	KConfigGroup		14530	0					
ANR	14557	ArgumentList			14530	1					
ANR	14558	ExpressionStatement	d -> globalConfigGroupPath . clear ( )	149:8:4264:4296	14530	1	True				
ANR	14559	CallExpression	d -> globalConfigGroupPath . clear ( )		14530	0					
ANR	14560	Callee	d -> globalConfigGroupPath . clear		14530	0					
ANR	14561	MemberAccess	d -> globalConfigGroupPath . clear		14530	0					
ANR	14562	PtrMemberAccess	d -> globalConfigGroupPath		14530	0					
ANR	14563	Identifier	d		14530	0					
ANR	14564	Identifier	globalConfigGroupPath		14530	1					
ANR	14565	Identifier	clear		14530	1					
ANR	14566	ArgumentList			14530	1					
ANR	14567	ReturnStatement	return ;	150:8:4306:4312	14530	2	True				
ANR	14568	ExpressionStatement	d -> globalConfigGroup = app -> globalConfig ( )	153:4:4325:4367	14530	2	True				
ANR	14569	AssignmentExpression	d -> globalConfigGroup = app -> globalConfig ( )		14530	0		=			
ANR	14570	PtrMemberAccess	d -> globalConfigGroup		14530	0					
ANR	14571	Identifier	d		14530	0					
ANR	14572	Identifier	globalConfigGroup		14530	1					
ANR	14573	CallExpression	app -> globalConfig ( )		14530	1					
ANR	14574	Callee	app -> globalConfig		14530	0					
ANR	14575	PtrMemberAccess	app -> globalConfig		14530	0					
ANR	14576	Identifier	app		14530	0					
ANR	14577	Identifier	globalConfig		14530	1					
ANR	14578	ArgumentList			14530	1					
ANR	14579	ExpressionStatement	d -> globalConfigGroupPath = groupNames	154:4:4373:4410	14530	3	True				
ANR	14580	AssignmentExpression	d -> globalConfigGroupPath = groupNames		14530	0		=			
ANR	14581	PtrMemberAccess	d -> globalConfigGroupPath		14530	0					
ANR	14582	Identifier	d		14530	0					
ANR	14583	Identifier	globalConfigGroupPath		14530	1					
ANR	14584	Identifier	groupNames		14530	1					
ANR	14585	Statement	foreach	156:4:4417:4423	14530	4	True				
ANR	14586	Statement	(	156:12:4425:4425	14530	5	True				
ANR	14587	Statement	const	156:13:4426:4430	14530	6	True				
ANR	14588	Statement	QString	156:19:4432:4438	14530	7	True				
ANR	14589	Statement	&	156:27:4440:4440	14530	8	True				
ANR	14590	Statement	groupName	156:28:4441:4449	14530	9	True				
ANR	14591	Statement	","	156:37:4450:4450	14530	10	True				
ANR	14592	Statement	groupNames	156:39:4452:4461	14530	11	True				
ANR	14593	Statement	)	156:49:4462:4462	14530	12	True				
ANR	14594	CompoundStatement		12:51:308:308	14530	13					
ANR	14595	ExpressionStatement	"d -> globalConfigGroup = KConfigGroup ( & d -> globalConfigGroup , groupName )"	157:8:4474:4543	14530	0	True				
ANR	14596	AssignmentExpression	"d -> globalConfigGroup = KConfigGroup ( & d -> globalConfigGroup , groupName )"		14530	0		=			
ANR	14597	PtrMemberAccess	d -> globalConfigGroup		14530	0					
ANR	14598	Identifier	d		14530	0					
ANR	14599	Identifier	globalConfigGroup		14530	1					
ANR	14600	CallExpression	"KConfigGroup ( & d -> globalConfigGroup , groupName )"		14530	1					
ANR	14601	Callee	KConfigGroup		14530	0					
ANR	14602	Identifier	KConfigGroup		14530	0					
ANR	14603	ArgumentList	& d -> globalConfigGroup		14530	1					
ANR	14604	Argument	& d -> globalConfigGroup		14530	0					
ANR	14605	UnaryOperationExpression	& d -> globalConfigGroup		14530	0					
ANR	14606	UnaryOperator	&		14530	0					
ANR	14607	PtrMemberAccess	d -> globalConfigGroup		14530	1					
ANR	14608	Identifier	d		14530	0					
ANR	14609	Identifier	globalConfigGroup		14530	1					
ANR	14610	Argument	groupName		14530	1					
ANR	14611	Identifier	groupName		14530	0					
ANR	14612	ReturnType	void		14530	1					
ANR	14613	Identifier	Applet :: setCurrentGlobalConfigGroup		14530	2					
ANR	14614	ParameterList	const QStringList & groupNames		14530	3					
ANR	14615	Parameter	const QStringList & groupNames	144:41:4124:4152	14530	0	True				
ANR	14616	ParameterType	const QStringList &		14530	0					
ANR	14617	Identifier	groupNames		14530	1					
ANR	14618	CFGEntryNode	ENTRY		14530		True				
ANR	14619	CFGExitNode	EXIT		14530		True				
ANR	14620	Symbol	groupNames		14530						
ANR	14621	Symbol	app		14530						
ANR	14622	Symbol	& d -> globalConfigGroup		14530						
ANR	14623	Symbol	groupName		14530						
ANR	14624	Symbol	d		14530						
ANR	14625	Symbol	d -> globalConfigGroup		14530						
ANR	14626	Symbol	* app		14530						
ANR	14627	Symbol	app -> globalConfig		14530						
ANR	14628	Symbol	d -> globalConfigGroupPath		14530						
ANR	14629	Symbol	applet		14530						
ANR	14630	Symbol	* d		14530						
ANR	14631	Symbol	KConfigGroup		14530						
ANR	14632	Function	Applet :: currentGlobalConfigGroup	161:0:4554:4646							
ANR	14633	FunctionDef	Applet :: currentGlobalConfigGroup ()		14632	0					
ANR	14634	CompoundStatement		162:0:4607:4646	14632	0					
ANR	14635	ReturnStatement	return d -> globalConfigGroupPath ;	163:4:4613:4644	14632	0	True				
ANR	14636	PtrMemberAccess	d -> globalConfigGroupPath		14632	0					
ANR	14637	Identifier	d		14632	0					
ANR	14638	Identifier	globalConfigGroupPath		14632	1					
ANR	14639	ReturnType	QStringList		14632	1					
ANR	14640	Identifier	Applet :: currentGlobalConfigGroup		14632	2					
ANR	14641	ParameterList			14632	3					
ANR	14642	CFGEntryNode	ENTRY		14632		True				
ANR	14643	CFGExitNode	EXIT		14632		True				
ANR	14644	Symbol	d		14632						
ANR	14645	Symbol	d -> globalConfigGroupPath		14632						
ANR	14646	Symbol	* d		14632						
ANR	14647	Function	Applet :: globalConfigKeys	166:0:4649:4818							
ANR	14648	FunctionDef	Applet :: globalConfigKeys ()		14647	0					
ANR	14649	CompoundStatement		167:0:4694:4818	14647	0					
ANR	14650	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		14647	0					
ANR	14651	Condition	d -> globalConfigGroup . isValid ( )	168:8:4704:4733	14647	0	True				
ANR	14652	CallExpression	d -> globalConfigGroup . isValid ( )		14647	0					
ANR	14653	Callee	d -> globalConfigGroup . isValid		14647	0					
ANR	14654	MemberAccess	d -> globalConfigGroup . isValid		14647	0					
ANR	14655	PtrMemberAccess	d -> globalConfigGroup		14647	0					
ANR	14656	Identifier	d		14647	0					
ANR	14657	Identifier	globalConfigGroup		14647	1					
ANR	14658	Identifier	isValid		14647	1					
ANR	14659	ArgumentList			14647	1					
ANR	14660	CompoundStatement		2:40:41:41	14647	1					
ANR	14661	ReturnStatement	return d -> globalConfigGroup . keyList ( ) ;	169:8:4746:4783	14647	0	True				
ANR	14662	CallExpression	d -> globalConfigGroup . keyList ( )		14647	0					
ANR	14663	Callee	d -> globalConfigGroup . keyList		14647	0					
ANR	14664	MemberAccess	d -> globalConfigGroup . keyList		14647	0					
ANR	14665	PtrMemberAccess	d -> globalConfigGroup		14647	0					
ANR	14666	Identifier	d		14647	0					
ANR	14667	Identifier	globalConfigGroup		14647	1					
ANR	14668	Identifier	keyList		14647	1					
ANR	14669	ArgumentList			14647	1					
ANR	14670	ReturnStatement	return QStringList ( ) ;	172:4:4796:4816	14647	1	True				
ANR	14671	CallExpression	QStringList ( )		14647	0					
ANR	14672	Callee	QStringList		14647	0					
ANR	14673	Identifier	QStringList		14647	0					
ANR	14674	ArgumentList			14647	1					
ANR	14675	ReturnType	QStringList		14647	1					
ANR	14676	Identifier	Applet :: globalConfigKeys		14647	2					
ANR	14677	ParameterList			14647	3					
ANR	14678	CFGEntryNode	ENTRY		14647		True				
ANR	14679	CFGExitNode	EXIT		14647		True				
ANR	14680	Symbol	d -> globalConfigGroup		14647						
ANR	14681	Symbol	d		14647						
ANR	14682	Symbol	d -> globalConfigGroup . keyList		14647						
ANR	14683	Symbol	QStringList		14647						
ANR	14684	Symbol	d -> globalConfigGroup . isValid		14647						
ANR	14685	Symbol	* d		14647						
ANR	14686	Function	Applet :: globalConfigGroups	175:0:4821:4994							
ANR	14687	FunctionDef	Applet :: globalConfigGroups ()		14686	0					
ANR	14688	CompoundStatement		176:0:4868:4994	14686	0					
ANR	14689	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		14686	0					
ANR	14690	Condition	d -> globalConfigGroup . isValid ( )	177:8:4878:4907	14686	0	True				
ANR	14691	CallExpression	d -> globalConfigGroup . isValid ( )		14686	0					
ANR	14692	Callee	d -> globalConfigGroup . isValid		14686	0					
ANR	14693	MemberAccess	d -> globalConfigGroup . isValid		14686	0					
ANR	14694	PtrMemberAccess	d -> globalConfigGroup		14686	0					
ANR	14695	Identifier	d		14686	0					
ANR	14696	Identifier	globalConfigGroup		14686	1					
ANR	14697	Identifier	isValid		14686	1					
ANR	14698	ArgumentList			14686	1					
ANR	14699	CompoundStatement		2:40:41:41	14686	1					
ANR	14700	ReturnStatement	return d -> globalConfigGroup . groupList ( ) ;	178:8:4920:4959	14686	0	True				
ANR	14701	CallExpression	d -> globalConfigGroup . groupList ( )		14686	0					
ANR	14702	Callee	d -> globalConfigGroup . groupList		14686	0					
ANR	14703	MemberAccess	d -> globalConfigGroup . groupList		14686	0					
ANR	14704	PtrMemberAccess	d -> globalConfigGroup		14686	0					
ANR	14705	Identifier	d		14686	0					
ANR	14706	Identifier	globalConfigGroup		14686	1					
ANR	14707	Identifier	groupList		14686	1					
ANR	14708	ArgumentList			14686	1					
ANR	14709	ReturnStatement	return QStringList ( ) ;	181:4:4972:4992	14686	1	True				
ANR	14710	CallExpression	QStringList ( )		14686	0					
ANR	14711	Callee	QStringList		14686	0					
ANR	14712	Identifier	QStringList		14686	0					
ANR	14713	ArgumentList			14686	1					
ANR	14714	ReturnType	QStringList		14686	1					
ANR	14715	Identifier	Applet :: globalConfigGroups		14686	2					
ANR	14716	ParameterList			14686	3					
ANR	14717	CFGEntryNode	ENTRY		14686		True				
ANR	14718	CFGExitNode	EXIT		14686		True				
ANR	14719	Symbol	d		14686						
ANR	14720	Symbol	d -> globalConfigGroup		14686						
ANR	14721	Symbol	QStringList		14686						
ANR	14722	Symbol	d -> globalConfigGroup . groupList		14686						
ANR	14723	Symbol	d -> globalConfigGroup . isValid		14686						
ANR	14724	Symbol	* d		14686						
ANR	14725	Function	Applet :: readGlobalConfig	184:0:4997:5225							
ANR	14726	FunctionDef	"Applet :: readGlobalConfig (const QString & key , const QVariant & def)"		14725	0					
ANR	14727	CompoundStatement		185:0:5078:5225	14725	0					
ANR	14728	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		14725	0					
ANR	14729	Condition	d -> globalConfigGroup . isValid ( )	186:8:5088:5117	14725	0	True				
ANR	14730	CallExpression	d -> globalConfigGroup . isValid ( )		14725	0					
ANR	14731	Callee	d -> globalConfigGroup . isValid		14725	0					
ANR	14732	MemberAccess	d -> globalConfigGroup . isValid		14725	0					
ANR	14733	PtrMemberAccess	d -> globalConfigGroup		14725	0					
ANR	14734	Identifier	d		14725	0					
ANR	14735	Identifier	globalConfigGroup		14725	1					
ANR	14736	Identifier	isValid		14725	1					
ANR	14737	ArgumentList			14725	1					
ANR	14738	CompoundStatement		2:40:41:41	14725	1					
ANR	14739	ReturnStatement	"return d -> globalConfigGroup . readEntry ( key , def ) ;"	187:8:5130:5177	14725	0	True				
ANR	14740	CallExpression	"d -> globalConfigGroup . readEntry ( key , def )"		14725	0					
ANR	14741	Callee	d -> globalConfigGroup . readEntry		14725	0					
ANR	14742	MemberAccess	d -> globalConfigGroup . readEntry		14725	0					
ANR	14743	PtrMemberAccess	d -> globalConfigGroup		14725	0					
ANR	14744	Identifier	d		14725	0					
ANR	14745	Identifier	globalConfigGroup		14725	1					
ANR	14746	Identifier	readEntry		14725	1					
ANR	14747	ArgumentList	key		14725	1					
ANR	14748	Argument	key		14725	0					
ANR	14749	Identifier	key		14725	0					
ANR	14750	Argument	def		14725	1					
ANR	14751	Identifier	def		14725	0					
ANR	14752	ElseStatement	else		14725	0					
ANR	14753	CompoundStatement		4:11:111:111	14725	0					
ANR	14754	ReturnStatement	return QVariant ( ) ;	189:8:5200:5217	14725	0	True				
ANR	14755	CallExpression	QVariant ( )		14725	0					
ANR	14756	Callee	QVariant		14725	0					
ANR	14757	Identifier	QVariant		14725	0					
ANR	14758	ArgumentList			14725	1					
ANR	14759	ReturnType	QVariant		14725	1					
ANR	14760	Identifier	Applet :: readGlobalConfig		14725	2					
ANR	14761	ParameterList	"const QString & key , const QVariant & def"		14725	3					
ANR	14762	Parameter	const QString & key	184:34:5031:5048	14725	0	True				
ANR	14763	ParameterType	const QString &		14725	0					
ANR	14764	Identifier	key		14725	1					
ANR	14765	Parameter	const QVariant & def	184:54:5051:5069	14725	1	True				
ANR	14766	ParameterType	const QVariant &		14725	0					
ANR	14767	Identifier	def		14725	1					
ANR	14768	CFGEntryNode	ENTRY		14725		True				
ANR	14769	CFGExitNode	EXIT		14725		True				
ANR	14770	Symbol	QVariant		14725						
ANR	14771	Symbol	d -> globalConfigGroup . readEntry		14725						
ANR	14772	Symbol	def		14725						
ANR	14773	Symbol	d		14725						
ANR	14774	Symbol	d -> globalConfigGroup		14725						
ANR	14775	Symbol	d -> globalConfigGroup . isValid		14725						
ANR	14776	Symbol	key		14725						
ANR	14777	Symbol	* d		14725						
ANR	14778	Function	Applet :: writeGlobalConfig	193:0:5228:5436							
ANR	14779	FunctionDef	"Applet :: writeGlobalConfig (const QString & key , const QVariant & value)"		14778	0					
ANR	14780	CompoundStatement		194:0:5302:5436	14778	0					
ANR	14781	IfStatement	if ( d -> globalConfigGroup . isValid ( ) )		14778	0					
ANR	14782	Condition	d -> globalConfigGroup . isValid ( )	195:8:5312:5341	14778	0	True				
ANR	14783	CallExpression	d -> globalConfigGroup . isValid ( )		14778	0					
ANR	14784	Callee	d -> globalConfigGroup . isValid		14778	0					
ANR	14785	MemberAccess	d -> globalConfigGroup . isValid		14778	0					
ANR	14786	PtrMemberAccess	d -> globalConfigGroup		14778	0					
ANR	14787	Identifier	d		14778	0					
ANR	14788	Identifier	globalConfigGroup		14778	1					
ANR	14789	Identifier	isValid		14778	1					
ANR	14790	ArgumentList			14778	1					
ANR	14791	CompoundStatement		2:40:41:41	14778	1					
ANR	14792	ExpressionStatement	"d -> globalConfigGroup . writeEntry ( key , value )"	196:8:5354:5397	14778	0	True				
ANR	14793	CallExpression	"d -> globalConfigGroup . writeEntry ( key , value )"		14778	0					
ANR	14794	Callee	d -> globalConfigGroup . writeEntry		14778	0					
ANR	14795	MemberAccess	d -> globalConfigGroup . writeEntry		14778	0					
ANR	14796	PtrMemberAccess	d -> globalConfigGroup		14778	0					
ANR	14797	Identifier	d		14778	0					
ANR	14798	Identifier	globalConfigGroup		14778	1					
ANR	14799	Identifier	writeEntry		14778	1					
ANR	14800	ArgumentList	key		14778	1					
ANR	14801	Argument	key		14778	0					
ANR	14802	Identifier	key		14778	0					
ANR	14803	Argument	value		14778	1					
ANR	14804	Identifier	value		14778	0					
ANR	14805	ExpressionStatement	d -> configDirty = true	197:8:5407:5428	14778	1	True				
ANR	14806	AssignmentExpression	d -> configDirty = true		14778	0		=			
ANR	14807	PtrMemberAccess	d -> configDirty		14778	0					
ANR	14808	Identifier	d		14778	0					
ANR	14809	Identifier	configDirty		14778	1					
ANR	14810	Identifier	true		14778	1					
ANR	14811	ReturnType	void		14778	1					
ANR	14812	Identifier	Applet :: writeGlobalConfig		14778	2					
ANR	14813	ParameterList	"const QString & key , const QVariant & value"		14778	3					
ANR	14814	Parameter	const QString & key	193:31:5259:5276	14778	0	True				
ANR	14815	ParameterType	const QString &		14778	0					
ANR	14816	Identifier	key		14778	1					
ANR	14817	Parameter	const QVariant & value	193:51:5279:5299	14778	1	True				
ANR	14818	ParameterType	const QVariant &		14778	0					
ANR	14819	Identifier	value		14778	1					
ANR	14820	CFGEntryNode	ENTRY		14778		True				
ANR	14821	CFGExitNode	EXIT		14778		True				
ANR	14822	Symbol	d -> configDirty		14778						
ANR	14823	Symbol	d		14778						
ANR	14824	Symbol	d -> globalConfigGroup		14778						
ANR	14825	Symbol	true		14778						
ANR	14826	Symbol	d -> globalConfigGroup . isValid		14778						
ANR	14827	Symbol	value		14778						
ANR	14828	Symbol	key		14778						
ANR	14829	Symbol	* d		14778						
ANR	14830	Function	Applet :: reloadConfigIfNeeded	201:0:5439:5533							
ANR	14831	FunctionDef	Applet :: reloadConfigIfNeeded ()		14830	0					
ANR	14832	CompoundStatement		202:0:5475:5533	14830	0					
ANR	14833	IfStatement	if ( d -> configDirty )		14830	0					
ANR	14834	Condition	d -> configDirty	203:8:5485:5498	14830	0	True				
ANR	14835	PtrMemberAccess	d -> configDirty		14830	0					
ANR	14836	Identifier	d		14830	0					
ANR	14837	Identifier	configDirty		14830	1					
ANR	14838	CompoundStatement		2:24:25:25	14830	1					
ANR	14839	ExpressionStatement	reloadConfig ( )	204:8:5511:5525	14830	0	True				
ANR	14840	CallExpression	reloadConfig ( )		14830	0					
ANR	14841	Callee	reloadConfig		14830	0					
ANR	14842	Identifier	reloadConfig		14830	0					
ANR	14843	ArgumentList			14830	1					
ANR	14844	ReturnType	void		14830	1					
ANR	14845	Identifier	Applet :: reloadConfigIfNeeded		14830	2					
ANR	14846	ParameterList			14830	3					
ANR	14847	CFGEntryNode	ENTRY		14830		True				
ANR	14848	CFGExitNode	EXIT		14830		True				
ANR	14849	Symbol	d -> configDirty		14830						
ANR	14850	Symbol	d		14830						
ANR	14851	Symbol	* d		14830						
ANR	14852	Function	Applet :: reloadConfig	208:0:5536:5946							
ANR	14853	FunctionDef	Applet :: reloadConfig ()		14852	0					
ANR	14854	CompoundStatement		209:0:5564:5946	14852	0					
ANR	14855	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	210:4:5570:5600	14852	0	True				
ANR	14856	IdentifierDecl	* app = applet ( )		14852	0					
ANR	14857	IdentifierDeclType	Plasma :: Applet *		14852	0					
ANR	14858	Identifier	app		14852	1					
ANR	14859	AssignmentExpression	* app = applet ( )		14852	2		=			
ANR	14860	Identifier	app		14852	0					
ANR	14861	CallExpression	applet ( )		14852	1					
ANR	14862	Callee	applet		14852	0					
ANR	14863	Identifier	applet		14852	0					
ANR	14864	ArgumentList			14852	1					
ANR	14865	IfStatement	if ( app )		14852	1					
ANR	14866	Condition	app	211:8:5610:5612	14852	0	True				
ANR	14867	Identifier	app		14852	0					
ANR	14868	CompoundStatement		4:8:60:91	14852	1					
ANR	14869	IdentifierDeclStatement	KConfigGroup cg = app -> config ( ) ;	212:8:5625:5656	14852	0	True				
ANR	14870	IdentifierDecl	cg = app -> config ( )		14852	0					
ANR	14871	IdentifierDeclType	KConfigGroup		14852	0					
ANR	14872	Identifier	cg		14852	1					
ANR	14873	AssignmentExpression	cg = app -> config ( )		14852	2		=			
ANR	14874	Identifier	cg		14852	0					
ANR	14875	CallExpression	app -> config ( )		14852	1					
ANR	14876	Callee	app -> config		14852	0					
ANR	14877	PtrMemberAccess	app -> config		14852	0					
ANR	14878	Identifier	app		14852	0					
ANR	14879	Identifier	config		14852	1					
ANR	14880	ArgumentList			14852	1					
ANR	14881	IfStatement	if ( ! app -> isContainment ( ) )		14852	1					
ANR	14882	Condition	! app -> isContainment ( )	214:12:5671:5691	14852	0	True				
ANR	14883	UnaryOperationExpression	! app -> isContainment ( )		14852	0					
ANR	14884	UnaryOperator	!		14852	0					
ANR	14885	CallExpression	app -> isContainment ( )		14852	1					
ANR	14886	Callee	app -> isContainment		14852	0					
ANR	14887	PtrMemberAccess	app -> isContainment		14852	0					
ANR	14888	Identifier	app		14852	0					
ANR	14889	Identifier	isContainment		14852	1					
ANR	14890	ArgumentList			14852	1					
ANR	14891	CompoundStatement		6:35:129:129	14852	1					
ANR	14892	ExpressionStatement	app -> restore ( cg )	215:12:5708:5724	14852	0	True				
ANR	14893	CallExpression	app -> restore ( cg )		14852	0					
ANR	14894	Callee	app -> restore		14852	0					
ANR	14895	PtrMemberAccess	app -> restore		14852	0					
ANR	14896	Identifier	app		14852	0					
ANR	14897	Identifier	restore		14852	1					
ANR	14898	ArgumentList	cg		14852	1					
ANR	14899	Argument	cg		14852	0					
ANR	14900	Identifier	cg		14852	0					
ANR	14901	ExpressionStatement	app -> configChanged ( )	218:8:5745:5765	14852	2	True				
ANR	14902	CallExpression	app -> configChanged ( )		14852	0					
ANR	14903	Callee	app -> configChanged		14852	0					
ANR	14904	PtrMemberAccess	app -> configChanged		14852	0					
ANR	14905	Identifier	app		14852	0					
ANR	14906	Identifier	configChanged		14852	1					
ANR	14907	ArgumentList			14852	1					
ANR	14908	IfStatement	if ( app -> containment ( ) && app -> containment ( ) -> corona ( ) )		14852	3					
ANR	14909	Condition	app -> containment ( ) && app -> containment ( ) -> corona ( )	220:12:5780:5829	14852	0	True				
ANR	14910	AndExpression	app -> containment ( ) && app -> containment ( ) -> corona ( )		14852	0		&&			
ANR	14911	CallExpression	app -> containment ( )		14852	0					
ANR	14912	Callee	app -> containment		14852	0					
ANR	14913	PtrMemberAccess	app -> containment		14852	0					
ANR	14914	Identifier	app		14852	0					
ANR	14915	Identifier	containment		14852	1					
ANR	14916	ArgumentList			14852	1					
ANR	14917	CallExpression	app -> containment ( ) -> corona ( )		14852	1					
ANR	14918	Callee	app -> containment ( ) -> corona		14852	0					
ANR	14919	PtrMemberAccess	app -> containment ( ) -> corona		14852	0					
ANR	14920	CallExpression	app -> containment ( )		14852	0					
ANR	14921	Callee	app -> containment		14852	0					
ANR	14922	PtrMemberAccess	app -> containment		14852	0					
ANR	14923	Identifier	app		14852	0					
ANR	14924	Identifier	containment		14852	1					
ANR	14925	ArgumentList			14852	1					
ANR	14926	Identifier	corona		14852	1					
ANR	14927	ArgumentList			14852	1					
ANR	14928	CompoundStatement		12:64:267:267	14852	1					
ANR	14929	ExpressionStatement	app -> containment ( ) -> corona ( ) -> requestConfigSync ( )	221:12:5846:5895	14852	0	True				
ANR	14930	CallExpression	app -> containment ( ) -> corona ( ) -> requestConfigSync ( )		14852	0					
ANR	14931	Callee	app -> containment ( ) -> corona ( ) -> requestConfigSync		14852	0					
ANR	14932	PtrMemberAccess	app -> containment ( ) -> corona ( ) -> requestConfigSync		14852	0					
ANR	14933	CallExpression	app -> containment ( ) -> corona ( )		14852	0					
ANR	14934	Callee	app -> containment ( ) -> corona		14852	0					
ANR	14935	PtrMemberAccess	app -> containment ( ) -> corona		14852	0					
ANR	14936	CallExpression	app -> containment ( )		14852	0					
ANR	14937	Callee	app -> containment		14852	0					
ANR	14938	PtrMemberAccess	app -> containment		14852	0					
ANR	14939	Identifier	app		14852	0					
ANR	14940	Identifier	containment		14852	1					
ANR	14941	ArgumentList			14852	1					
ANR	14942	Identifier	corona		14852	1					
ANR	14943	ArgumentList			14852	1					
ANR	14944	Identifier	requestConfigSync		14852	1					
ANR	14945	ArgumentList			14852	1					
ANR	14946	ExpressionStatement	d -> configDirty = false	224:8:5916:5938	14852	4	True				
ANR	14947	AssignmentExpression	d -> configDirty = false		14852	0		=			
ANR	14948	PtrMemberAccess	d -> configDirty		14852	0					
ANR	14949	Identifier	d		14852	0					
ANR	14950	Identifier	configDirty		14852	1					
ANR	14951	Identifier	false		14852	1					
ANR	14952	ReturnType	void		14852	1					
ANR	14953	Identifier	Applet :: reloadConfig		14852	2					
ANR	14954	ParameterList			14852	3					
ANR	14955	CFGEntryNode	ENTRY		14852		True				
ANR	14956	CFGExitNode	EXIT		14852		True				
ANR	14957	Symbol	app		14852						
ANR	14958	Symbol	app -> config		14852						
ANR	14959	Symbol	d -> configDirty		14852						
ANR	14960	Symbol	cg		14852						
ANR	14961	Symbol	app -> containment		14852						
ANR	14962	Symbol	d		14852						
ANR	14963	Symbol	* app -> containment		14852						
ANR	14964	Symbol	false		14852						
ANR	14965	Symbol	* d		14852						
ANR	14966	Symbol	* app		14852						
ANR	14967	Symbol	* * app		14852						
ANR	14968	Symbol	app -> containment ( ) -> corona		14852						
ANR	14969	Symbol	app -> isContainment		14852						
ANR	14970	Symbol	applet		14852						
ANR	14971	Function	Applet :: version	228:0:5949:6108							
ANR	14972	FunctionDef	Applet :: version ()		14971	0					
ANR	14973	CompoundStatement		229:0:5981:6108	14971	0					
ANR	14974	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	230:4:5987:6017	14971	0	True				
ANR	14975	IdentifierDecl	* app = applet ( )		14971	0					
ANR	14976	IdentifierDeclType	Plasma :: Applet *		14971	0					
ANR	14977	Identifier	app		14971	1					
ANR	14978	AssignmentExpression	* app = applet ( )		14971	2		=			
ANR	14979	Identifier	app		14971	0					
ANR	14980	CallExpression	applet ( )		14971	1					
ANR	14981	Callee	applet		14971	0					
ANR	14982	Identifier	applet		14971	0					
ANR	14983	ArgumentList			14971	1					
ANR	14984	IfStatement	if ( ! app )		14971	1					
ANR	14985	Condition	! app	231:8:6027:6030	14971	0	True				
ANR	14986	UnaryOperationExpression	! app		14971	0					
ANR	14987	UnaryOperator	!		14971	0					
ANR	14988	Identifier	app		14971	1					
ANR	14989	CompoundStatement		3:14:51:51	14971	1					
ANR	14990	ReturnStatement	return QString ( ) ;	232:8:6043:6059	14971	0	True				
ANR	14991	CallExpression	QString ( )		14971	0					
ANR	14992	Callee	QString		14971	0					
ANR	14993	Identifier	QString		14971	0					
ANR	14994	ArgumentList			14971	1					
ANR	14995	ReturnStatement	return app -> pluginInfo ( ) . version ( ) ;	235:4:6072:6106	14971	2	True				
ANR	14996	CallExpression	app -> pluginInfo ( ) . version ( )		14971	0					
ANR	14997	Callee	app -> pluginInfo ( ) . version		14971	0					
ANR	14998	MemberAccess	app -> pluginInfo ( ) . version		14971	0					
ANR	14999	CallExpression	app -> pluginInfo ( )		14971	0					
ANR	15000	Callee	app -> pluginInfo		14971	0					
ANR	15001	PtrMemberAccess	app -> pluginInfo		14971	0					
ANR	15002	Identifier	app		14971	0					
ANR	15003	Identifier	pluginInfo		14971	1					
ANR	15004	ArgumentList			14971	1					
ANR	15005	Identifier	version		14971	1					
ANR	15006	ArgumentList			14971	1					
ANR	15007	ReturnType	QString		14971	1					
ANR	15008	Identifier	Applet :: version		14971	2					
ANR	15009	ParameterList			14971	3					
ANR	15010	CFGEntryNode	ENTRY		14971		True				
ANR	15011	CFGExitNode	EXIT		14971		True				
ANR	15012	Symbol	app		14971						
ANR	15013	Symbol	QString		14971						
ANR	15014	Symbol	app -> pluginInfo		14971						
ANR	15015	Symbol	* app		14971						
ANR	15016	Symbol	app -> pluginInfo ( ) . version		14971						
ANR	15017	Symbol	applet		14971						
ANR	15018	Function	Applet :: setLocked	238:0:6111:6512							
ANR	15019	FunctionDef	Applet :: setLocked (bool locked)		15018	0					
ANR	15020	CompoundStatement		239:0:6147:6512	15018	0					
ANR	15021	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	240:4:6153:6183	15018	0	True				
ANR	15022	IdentifierDecl	* app = applet ( )		15018	0					
ANR	15023	IdentifierDeclType	Plasma :: Applet *		15018	0					
ANR	15024	Identifier	app		15018	1					
ANR	15025	AssignmentExpression	* app = applet ( )		15018	2		=			
ANR	15026	Identifier	app		15018	0					
ANR	15027	CallExpression	applet ( )		15018	1					
ANR	15028	Callee	applet		15018	0					
ANR	15029	Identifier	applet		15018	0					
ANR	15030	ArgumentList			15018	1					
ANR	15031	IfStatement	if ( ! app )		15018	1					
ANR	15032	Condition	! app	241:8:6193:6196	15018	0	True				
ANR	15033	UnaryOperationExpression	! app		15018	0					
ANR	15034	UnaryOperator	!		15018	0					
ANR	15035	Identifier	app		15018	1					
ANR	15036	CompoundStatement		3:14:51:51	15018	1					
ANR	15037	ReturnStatement	return ;	242:8:6209:6215	15018	0	True				
ANR	15038	ExpressionStatement	app -> setImmutability ( locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable )	245:4:6228:6312	15018	2	True				
ANR	15039	CallExpression	app -> setImmutability ( locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable )		15018	0					
ANR	15040	Callee	app -> setImmutability		15018	0					
ANR	15041	PtrMemberAccess	app -> setImmutability		15018	0					
ANR	15042	Identifier	app		15018	0					
ANR	15043	Identifier	setImmutability		15018	1					
ANR	15044	ArgumentList	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		15018	1					
ANR	15045	Argument	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		15018	0					
ANR	15046	ConditionalExpression	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		15018	0					
ANR	15047	Condition	locked		15018	0					
ANR	15048	Identifier	locked		15018	0					
ANR	15049	Identifier	Plasma :: Types :: UserImmutable		15018	1					
ANR	15050	Identifier	Plasma :: Types :: Mutable		15018	2					
ANR	15051	IdentifierDeclStatement	KConfigGroup cg = app -> config ( ) ;	246:4:6318:6349	15018	3	True				
ANR	15052	IdentifierDecl	cg = app -> config ( )		15018	0					
ANR	15053	IdentifierDeclType	KConfigGroup		15018	0					
ANR	15054	Identifier	cg		15018	1					
ANR	15055	AssignmentExpression	cg = app -> config ( )		15018	2		=			
ANR	15056	Identifier	cg		15018	0					
ANR	15057	CallExpression	app -> config ( )		15018	1					
ANR	15058	Callee	app -> config		15018	0					
ANR	15059	PtrMemberAccess	app -> config		15018	0					
ANR	15060	Identifier	app		15018	0					
ANR	15061	Identifier	config		15018	1					
ANR	15062	ArgumentList			15018	1					
ANR	15063	IfStatement	if ( ! app -> isContainment ( ) )		15018	4					
ANR	15064	Condition	! app -> isContainment ( )	247:8:6359:6379	15018	0	True				
ANR	15065	UnaryOperationExpression	! app -> isContainment ( )		15018	0					
ANR	15066	UnaryOperator	!		15018	0					
ANR	15067	CallExpression	app -> isContainment ( )		15018	1					
ANR	15068	Callee	app -> isContainment		15018	0					
ANR	15069	PtrMemberAccess	app -> isContainment		15018	0					
ANR	15070	Identifier	app		15018	0					
ANR	15071	Identifier	isContainment		15018	1					
ANR	15072	ArgumentList			15018	1					
ANR	15073	CompoundStatement		9:31:234:234	15018	1					
ANR	15074	ExpressionStatement	cg = cg . parent ( )	248:8:6392:6408	15018	0	True				
ANR	15075	AssignmentExpression	cg = cg . parent ( )		15018	0		=			
ANR	15076	Identifier	cg		15018	0					
ANR	15077	CallExpression	cg . parent ( )		15018	1					
ANR	15078	Callee	cg . parent		15018	0					
ANR	15079	MemberAccess	cg . parent		15018	0					
ANR	15080	Identifier	cg		15018	0					
ANR	15081	Identifier	parent		15018	1					
ANR	15082	ArgumentList			15018	1					
ANR	15083	IfStatement	if ( cg . isValid ( ) )		15018	5					
ANR	15084	Condition	cg . isValid ( )	251:8:6425:6436	15018	0	True				
ANR	15085	CallExpression	cg . isValid ( )		15018	0					
ANR	15086	Callee	cg . isValid		15018	0					
ANR	15087	MemberAccess	cg . isValid		15018	0					
ANR	15088	Identifier	cg		15018	0					
ANR	15089	Identifier	isValid		15018	1					
ANR	15090	ArgumentList			15018	1					
ANR	15091	CompoundStatement		13:22:291:291	15018	1					
ANR	15092	ExpressionStatement	"cg . writeEntry ( ""immutability"" , ( int ) app -> immutability ( ) )"	252:8:6449:6504	15018	0	True				
ANR	15093	CallExpression	"cg . writeEntry ( ""immutability"" , ( int ) app -> immutability ( ) )"		15018	0					
ANR	15094	Callee	cg . writeEntry		15018	0					
ANR	15095	MemberAccess	cg . writeEntry		15018	0					
ANR	15096	Identifier	cg		15018	0					
ANR	15097	Identifier	writeEntry		15018	1					
ANR	15098	ArgumentList	"""immutability"""		15018	1					
ANR	15099	Argument	"""immutability"""		15018	0					
ANR	15100	PrimaryExpression	"""immutability"""		15018	0					
ANR	15101	Argument	( int ) app -> immutability ( )		15018	1					
ANR	15102	CastExpression	( int ) app -> immutability ( )		15018	0					
ANR	15103	CastTarget	int		15018	0					
ANR	15104	CallExpression	app -> immutability ( )		15018	1					
ANR	15105	Callee	app -> immutability		15018	0					
ANR	15106	PtrMemberAccess	app -> immutability		15018	0					
ANR	15107	Identifier	app		15018	0					
ANR	15108	Identifier	immutability		15018	1					
ANR	15109	ArgumentList			15018	1					
ANR	15110	ReturnType	void		15018	1					
ANR	15111	Identifier	Applet :: setLocked		15018	2					
ANR	15112	ParameterList	bool locked		15018	3					
ANR	15113	Parameter	bool locked	238:23:6134:6144	15018	0	True				
ANR	15114	ParameterType	bool		15018	0					
ANR	15115	Identifier	locked		15018	1					
ANR	15116	CFGEntryNode	ENTRY		15018		True				
ANR	15117	CFGExitNode	EXIT		15018		True				
ANR	15118	Symbol	app		15018						
ANR	15119	Symbol	Plasma :: Types :: Mutable		15018						
ANR	15120	Symbol	app -> config		15018						
ANR	15121	Symbol	cg		15018						
ANR	15122	Symbol	* app		15018						
ANR	15123	Symbol	app -> immutability		15018						
ANR	15124	Symbol	locked		15018						
ANR	15125	Symbol	app -> isContainment		15018						
ANR	15126	Symbol	cg . parent		15018						
ANR	15127	Symbol	Plasma :: Types :: UserImmutable		15018						
ANR	15128	Symbol	applet		15018						
ANR	15129	Symbol	cg . isValid		15018						
ANR	15130	Function	Applet :: locked	256:0:6515:6701							
ANR	15131	FunctionDef	Applet :: locked ()		15130	0					
ANR	15132	CompoundStatement		257:0:6543:6701	15130	0					
ANR	15133	IdentifierDeclStatement	Plasma :: Applet * app = applet ( ) ;	258:4:6549:6579	15130	0	True				
ANR	15134	IdentifierDecl	* app = applet ( )		15130	0					
ANR	15135	IdentifierDeclType	Plasma :: Applet *		15130	0					
ANR	15136	Identifier	app		15130	1					
ANR	15137	AssignmentExpression	* app = applet ( )		15130	2		=			
ANR	15138	Identifier	app		15130	0					
ANR	15139	CallExpression	applet ( )		15130	1					
ANR	15140	Callee	applet		15130	0					
ANR	15141	Identifier	applet		15130	0					
ANR	15142	ArgumentList			15130	1					
ANR	15143	IfStatement	if ( ! app )		15130	1					
ANR	15144	Condition	! app	259:8:6589:6592	15130	0	True				
ANR	15145	UnaryOperationExpression	! app		15130	0					
ANR	15146	UnaryOperator	!		15130	0					
ANR	15147	Identifier	app		15130	1					
ANR	15148	CompoundStatement		3:14:51:51	15130	1					
ANR	15149	ReturnStatement	return Plasma :: Types :: Mutable ;	260:8:6605:6634	15130	0	True				
ANR	15150	Identifier	Plasma :: Types :: Mutable		15130	0					
ANR	15151	ReturnStatement	return app -> immutability ( ) != Plasma :: Types :: Mutable ;	263:4:6647:6699	15130	2	True				
ANR	15152	EqualityExpression	app -> immutability ( ) != Plasma :: Types :: Mutable		15130	0		!=			
ANR	15153	CallExpression	app -> immutability ( )		15130	0					
ANR	15154	Callee	app -> immutability		15130	0					
ANR	15155	PtrMemberAccess	app -> immutability		15130	0					
ANR	15156	Identifier	app		15130	0					
ANR	15157	Identifier	immutability		15130	1					
ANR	15158	ArgumentList			15130	1					
ANR	15159	Identifier	Plasma :: Types :: Mutable		15130	1					
ANR	15160	ReturnType	bool		15130	1					
ANR	15161	Identifier	Applet :: locked		15130	2					
ANR	15162	ParameterList			15130	3					
ANR	15163	CFGEntryNode	ENTRY		15130		True				
ANR	15164	CFGExitNode	EXIT		15130		True				
ANR	15165	Symbol	app		15130						
ANR	15166	Symbol	Plasma :: Types :: Mutable		15130						
ANR	15167	Symbol	* app		15130						
ANR	15168	Symbol	app -> immutability		15130						
ANR	15169	Symbol	applet		15130						
ANR	15170	Function	Applet :: applet	266:0:6704:6759							
ANR	15171	FunctionDef	Applet :: applet ()		15170	0					
ANR	15172	CompoundStatement		267:0:6743:6759	15170	0					
ANR	15173	ReturnStatement	return 0 ;	268:4:6749:6757	15170	0	True				
ANR	15174	PrimaryExpression	0		15170	0					
ANR	15175	ReturnType	Plasma :: Applet *		15170	1					
ANR	15176	Identifier	Applet :: applet		15170	2					
ANR	15177	ParameterList			15170	3					
ANR	15178	CFGEntryNode	ENTRY		15170		True				
ANR	15179	CFGExitNode	EXIT		15170		True				
