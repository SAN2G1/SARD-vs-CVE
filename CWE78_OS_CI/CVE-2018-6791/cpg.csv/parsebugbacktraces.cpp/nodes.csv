command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	566486	File	data/converged/CVE-2018-6791_plasma-workspace/parsebugbacktraces.cpp								
ANR	566487	DeclStmt									
ANR	566488	Decl							QList < BacktraceLine > :: const_iterator	QList < BacktraceLine > :: const_iterator	BacktraceConstIterator
ANR	566489	Function	findCrashStackFrame	26:0:989:1540							
ANR	566490	FunctionDef	"findCrashStackFrame (BacktraceConstIterator it , BacktraceConstIterator itEnd)"		566489	0					
ANR	566491	CompoundStatement		27:0:1089:1540	566489	0					
ANR	566492	IdentifierDeclStatement	BacktraceConstIterator result = itEnd ;	28:4:1095:1132	566489	0	True				
ANR	566493	IdentifierDecl	result = itEnd		566489	0					
ANR	566494	IdentifierDeclType	BacktraceConstIterator		566489	0					
ANR	566495	Identifier	result		566489	1					
ANR	566496	AssignmentExpression	result = itEnd		566489	2		=			
ANR	566497	Identifier	itEnd		566489	0					
ANR	566498	Identifier	itEnd		566489	1					
ANR	566499	ForStatement	for ( ; it != itEnd ; ++ it )		566489	1					
ANR	566500	Condition	it != itEnd	31:12:1185:1195	566489	0	True				
ANR	566501	EqualityExpression	it != itEnd		566489	0		!=			
ANR	566502	Identifier	it		566489	0					
ANR	566503	Identifier	itEnd		566489	1					
ANR	566504	UnaryExpression	++ it	31:25:1198:1201	566489	1	True				
ANR	566505	IncDec	++		566489	0					
ANR	566506	Identifier	it		566489	1					
ANR	566507	CompoundStatement		5:31:114:114	566489	2					
ANR	566508	IfStatement	if ( it -> type ( ) == BacktraceLine :: KCrash )		566489	0					
ANR	566509	Condition	it -> type ( ) == BacktraceLine :: KCrash	32:12:1218:1252	566489	0	True				
ANR	566510	EqualityExpression	it -> type ( ) == BacktraceLine :: KCrash		566489	0		==			
ANR	566511	CallExpression	it -> type ( )		566489	0					
ANR	566512	Callee	it -> type		566489	0					
ANR	566513	PtrMemberAccess	it -> type		566489	0					
ANR	566514	Identifier	it		566489	0					
ANR	566515	Identifier	type		566489	1					
ANR	566516	ArgumentList			566489	1					
ANR	566517	Identifier	BacktraceLine :: KCrash		566489	1					
ANR	566518	CompoundStatement		6:49:165:165	566489	1					
ANR	566519	ExpressionStatement	result = it	33:12:1269:1280	566489	0	True				
ANR	566520	AssignmentExpression	result = it		566489	0		=			
ANR	566521	Identifier	result		566489	0					
ANR	566522	Identifier	it		566489	1					
ANR	566523	BreakStatement	break ;	34:12:1294:1299	566489	1	True				
ANR	566524	ForStatement	for ( it = result ; it != itEnd ; ++ it )		566489	2					
ANR	566525	ForInit	it = result ;	39:9:1371:1382	566489	0	True				
ANR	566526	AssignmentExpression	it = result		566489	0		=			
ANR	566527	Identifier	it		566489	0					
ANR	566528	Identifier	result		566489	1					
ANR	566529	Condition	it != itEnd	39:22:1384:1394	566489	1	True				
ANR	566530	EqualityExpression	it != itEnd		566489	0		!=			
ANR	566531	Identifier	it		566489	0					
ANR	566532	Identifier	itEnd		566489	1					
ANR	566533	UnaryExpression	++ it	39:35:1397:1400	566489	2	True				
ANR	566534	IncDec	++		566489	0					
ANR	566535	Identifier	it		566489	1					
ANR	566536	CompoundStatement		13:41:313:313	566489	3					
ANR	566537	IfStatement	if ( it -> type ( ) == BacktraceLine :: StackFrame )		566489	0					
ANR	566538	Condition	it -> type ( ) == BacktraceLine :: StackFrame	40:12:1417:1455	566489	0	True				
ANR	566539	EqualityExpression	it -> type ( ) == BacktraceLine :: StackFrame		566489	0		==			
ANR	566540	CallExpression	it -> type ( )		566489	0					
ANR	566541	Callee	it -> type		566489	0					
ANR	566542	PtrMemberAccess	it -> type		566489	0					
ANR	566543	Identifier	it		566489	0					
ANR	566544	Identifier	type		566489	1					
ANR	566545	ArgumentList			566489	1					
ANR	566546	Identifier	BacktraceLine :: StackFrame		566489	1					
ANR	566547	CompoundStatement		14:53:368:368	566489	1					
ANR	566548	ExpressionStatement	result = it	41:12:1472:1483	566489	0	True				
ANR	566549	AssignmentExpression	result = it		566489	0		=			
ANR	566550	Identifier	result		566489	0					
ANR	566551	Identifier	it		566489	1					
ANR	566552	BreakStatement	break ;	42:12:1497:1502	566489	1	True				
ANR	566553	ReturnStatement	return result ;	46:4:1525:1538	566489	3	True				
ANR	566554	Identifier	result		566489	0					
ANR	566555	ReturnType	BacktraceConstIterator		566489	1					
ANR	566556	Identifier	findCrashStackFrame		566489	2					
ANR	566557	ParameterList	"BacktraceConstIterator it , BacktraceConstIterator itEnd"		566489	3					
ANR	566558	Parameter	BacktraceConstIterator it	26:43:1032:1056	566489	0	True				
ANR	566559	ParameterType	BacktraceConstIterator		566489	0					
ANR	566560	Identifier	it		566489	1					
ANR	566561	Parameter	BacktraceConstIterator itEnd	26:70:1059:1086	566489	1	True				
ANR	566562	ParameterType	BacktraceConstIterator		566489	0					
ANR	566563	Identifier	itEnd		566489	1					
ANR	566564	CFGEntryNode	ENTRY		566489		True				
ANR	566565	CFGExitNode	EXIT		566489		True				
ANR	566566	Symbol	result		566489						
ANR	566567	Symbol	it -> type		566489						
ANR	566568	Symbol	* it		566489						
ANR	566569	Symbol	it		566489						
ANR	566570	Symbol	itEnd		566489						
ANR	566571	Symbol	BacktraceLine :: KCrash		566489						
ANR	566572	Symbol	BacktraceLine :: StackFrame		566489						
ANR	566573	Function	rating	50:0:1588:3641							
ANR	566574	FunctionDef	"rating (BacktraceConstIterator it , BacktraceConstIterator itEnd , BacktraceConstIterator it2 , BacktraceConstIterator itEnd2)"		566573	0					
ANR	566575	CompoundStatement		51:0:1747:3641	566573	0					
ANR	566576	IdentifierDeclStatement	int matches = 0 ;	52:4:1753:1768	566573	0	True				
ANR	566577	IdentifierDecl	matches = 0		566573	0					
ANR	566578	IdentifierDeclType	int		566573	0					
ANR	566579	Identifier	matches		566573	1					
ANR	566580	AssignmentExpression	matches = 0		566573	2		=			
ANR	566581	Identifier	matches		566573	0					
ANR	566582	PrimaryExpression	0		566573	1					
ANR	566583	IdentifierDeclStatement	int lines = 0 ;	53:4:1774:1787	566573	1	True				
ANR	566584	IdentifierDecl	lines = 0		566573	0					
ANR	566585	IdentifierDeclType	int		566573	0					
ANR	566586	Identifier	lines		566573	1					
ANR	566587	AssignmentExpression	lines = 0		566573	2		=			
ANR	566588	Identifier	lines		566573	0					
ANR	566589	PrimaryExpression	0		566573	1					
ANR	566590	ExpressionStatement	"it = findCrashStackFrame ( it , itEnd )"	55:4:1794:1829	566573	2	True				
ANR	566591	AssignmentExpression	"it = findCrashStackFrame ( it , itEnd )"		566573	0		=			
ANR	566592	Identifier	it		566573	0					
ANR	566593	CallExpression	"findCrashStackFrame ( it , itEnd )"		566573	1					
ANR	566594	Callee	findCrashStackFrame		566573	0					
ANR	566595	Identifier	findCrashStackFrame		566573	0					
ANR	566596	ArgumentList	it		566573	1					
ANR	566597	Argument	it		566573	0					
ANR	566598	Identifier	it		566573	0					
ANR	566599	Argument	itEnd		566573	1					
ANR	566600	Identifier	itEnd		566573	0					
ANR	566601	ExpressionStatement	"it2 = findCrashStackFrame ( it2 , itEnd2 )"	56:4:1835:1873	566573	3	True				
ANR	566602	AssignmentExpression	"it2 = findCrashStackFrame ( it2 , itEnd2 )"		566573	0		=			
ANR	566603	Identifier	it2		566573	0					
ANR	566604	CallExpression	"findCrashStackFrame ( it2 , itEnd2 )"		566573	1					
ANR	566605	Callee	findCrashStackFrame		566573	0					
ANR	566606	Identifier	findCrashStackFrame		566573	0					
ANR	566607	ArgumentList	it2		566573	1					
ANR	566608	Argument	it2		566573	0					
ANR	566609	Identifier	it2		566573	0					
ANR	566610	Argument	itEnd2		566573	1					
ANR	566611	Identifier	itEnd2		566573	0					
ANR	566612	WhileStatement	while ( it != itEnd && it2 != itEnd2 )		566573	4					
ANR	566613	Condition	it != itEnd && it2 != itEnd2	58:11:1887:1914	566573	0	True				
ANR	566614	AndExpression	it != itEnd && it2 != itEnd2		566573	0		&&			
ANR	566615	EqualityExpression	it != itEnd		566573	0		!=			
ANR	566616	Identifier	it		566573	0					
ANR	566617	Identifier	itEnd		566573	1					
ANR	566618	EqualityExpression	it2 != itEnd2		566573	1		!=			
ANR	566619	Identifier	it2		566573	0					
ANR	566620	Identifier	itEnd2		566573	1					
ANR	566621	CompoundStatement		8:41:169:169	566573	1					
ANR	566622	IfStatement	if ( it -> type ( ) == BacktraceLine :: StackFrame && it2 -> type ( ) == BacktraceLine :: StackFrame )		566573	0					
ANR	566623	Condition	it -> type ( ) == BacktraceLine :: StackFrame && it2 -> type ( ) == BacktraceLine :: StackFrame	59:12:1931:2013	566573	0	True				
ANR	566624	AndExpression	it -> type ( ) == BacktraceLine :: StackFrame && it2 -> type ( ) == BacktraceLine :: StackFrame		566573	0		&&			
ANR	566625	EqualityExpression	it -> type ( ) == BacktraceLine :: StackFrame		566573	0		==			
ANR	566626	CallExpression	it -> type ( )		566573	0					
ANR	566627	Callee	it -> type		566573	0					
ANR	566628	PtrMemberAccess	it -> type		566573	0					
ANR	566629	Identifier	it		566573	0					
ANR	566630	Identifier	type		566573	1					
ANR	566631	ArgumentList			566573	1					
ANR	566632	Identifier	BacktraceLine :: StackFrame		566573	1					
ANR	566633	EqualityExpression	it2 -> type ( ) == BacktraceLine :: StackFrame		566573	1		==			
ANR	566634	CallExpression	it2 -> type ( )		566573	0					
ANR	566635	Callee	it2 -> type		566573	0					
ANR	566636	PtrMemberAccess	it2 -> type		566573	0					
ANR	566637	Identifier	it2		566573	0					
ANR	566638	Identifier	type		566573	1					
ANR	566639	ArgumentList			566573	1					
ANR	566640	Identifier	BacktraceLine :: StackFrame		566573	1					
ANR	566641	CompoundStatement		9:97:268:268	566573	1					
ANR	566642	ExpressionStatement	++ lines	60:12:2030:2037	566573	0	True				
ANR	566643	UnaryExpression	++ lines		566573	0					
ANR	566644	IncDec	++		566573	0					
ANR	566645	Identifier	lines		566573	1					
ANR	566646	IfStatement	if ( it -> frameNumber ( ) == it2 -> frameNumber ( ) && it -> functionName ( ) == it2 -> functionName ( ) )		566573	1					
ANR	566647	Condition	it -> frameNumber ( ) == it2 -> frameNumber ( ) && it -> functionName ( ) == it2 -> functionName ( )	61:16:2055:2138	566573	0	True				
ANR	566648	AndExpression	it -> frameNumber ( ) == it2 -> frameNumber ( ) && it -> functionName ( ) == it2 -> functionName ( )		566573	0		&&			
ANR	566649	EqualityExpression	it -> frameNumber ( ) == it2 -> frameNumber ( )		566573	0		==			
ANR	566650	CallExpression	it -> frameNumber ( )		566573	0					
ANR	566651	Callee	it -> frameNumber		566573	0					
ANR	566652	PtrMemberAccess	it -> frameNumber		566573	0					
ANR	566653	Identifier	it		566573	0					
ANR	566654	Identifier	frameNumber		566573	1					
ANR	566655	ArgumentList			566573	1					
ANR	566656	CallExpression	it2 -> frameNumber ( )		566573	1					
ANR	566657	Callee	it2 -> frameNumber		566573	0					
ANR	566658	PtrMemberAccess	it2 -> frameNumber		566573	0					
ANR	566659	Identifier	it2		566573	0					
ANR	566660	Identifier	frameNumber		566573	1					
ANR	566661	ArgumentList			566573	1					
ANR	566662	EqualityExpression	it -> functionName ( ) == it2 -> functionName ( )		566573	1		==			
ANR	566663	CallExpression	it -> functionName ( )		566573	0					
ANR	566664	Callee	it -> functionName		566573	0					
ANR	566665	PtrMemberAccess	it -> functionName		566573	0					
ANR	566666	Identifier	it		566573	0					
ANR	566667	Identifier	functionName		566573	1					
ANR	566668	ArgumentList			566573	1					
ANR	566669	CallExpression	it2 -> functionName ( )		566573	1					
ANR	566670	Callee	it2 -> functionName		566573	0					
ANR	566671	PtrMemberAccess	it2 -> functionName		566573	0					
ANR	566672	Identifier	it2		566573	0					
ANR	566673	Identifier	functionName		566573	1					
ANR	566674	ArgumentList			566573	1					
ANR	566675	CompoundStatement		11:102:393:393	566573	1					
ANR	566676	ExpressionStatement	++ matches	62:16:2159:2168	566573	0	True				
ANR	566677	UnaryExpression	++ matches		566573	0					
ANR	566678	IncDec	++		566573	0					
ANR	566679	Identifier	matches		566573	1					
ANR	566680	ExpressionStatement	++ it	64:12:2196:2200	566573	2	True				
ANR	566681	UnaryExpression	++ it		566573	0					
ANR	566682	IncDec	++		566573	0					
ANR	566683	Identifier	it		566573	1					
ANR	566684	ExpressionStatement	++ it2	65:12:2214:2219	566573	3	True				
ANR	566685	UnaryExpression	++ it2		566573	0					
ANR	566686	IncDec	++		566573	0					
ANR	566687	Identifier	it2		566573	1					
ANR	566688	ContinueStatement	continue ;	66:12:2233:2241	566573	4	True				
ANR	566689	IfStatement	if ( it -> type ( ) != BacktraceLine :: StackFrame && it -> type ( ) != BacktraceLine :: EmptyLine )		566573	1					
ANR	566690	Condition	it -> type ( ) != BacktraceLine :: StackFrame && it -> type ( ) != BacktraceLine :: EmptyLine	70:12:2342:2422	566573	0	True				
ANR	566691	AndExpression	it -> type ( ) != BacktraceLine :: StackFrame && it -> type ( ) != BacktraceLine :: EmptyLine		566573	0		&&			
ANR	566692	EqualityExpression	it -> type ( ) != BacktraceLine :: StackFrame		566573	0		!=			
ANR	566693	CallExpression	it -> type ( )		566573	0					
ANR	566694	Callee	it -> type		566573	0					
ANR	566695	PtrMemberAccess	it -> type		566573	0					
ANR	566696	Identifier	it		566573	0					
ANR	566697	Identifier	type		566573	1					
ANR	566698	ArgumentList			566573	1					
ANR	566699	Identifier	BacktraceLine :: StackFrame		566573	1					
ANR	566700	EqualityExpression	it -> type ( ) != BacktraceLine :: EmptyLine		566573	1		!=			
ANR	566701	CallExpression	it -> type ( )		566573	0					
ANR	566702	Callee	it -> type		566573	0					
ANR	566703	PtrMemberAccess	it -> type		566573	0					
ANR	566704	Identifier	it		566573	0					
ANR	566705	Identifier	type		566573	1					
ANR	566706	ArgumentList			566573	1					
ANR	566707	Identifier	BacktraceLine :: EmptyLine		566573	1					
ANR	566708	CompoundStatement		20:95:677:677	566573	1					
ANR	566709	ExpressionStatement	++ it	71:12:2439:2443	566573	0	True				
ANR	566710	UnaryExpression	++ it		566573	0					
ANR	566711	IncDec	++		566573	0					
ANR	566712	Identifier	it		566573	1					
ANR	566713	ContinueStatement	continue ;	72:12:2457:2465	566573	1	True				
ANR	566714	IfStatement	if ( it2 -> type ( ) != BacktraceLine :: StackFrame && it2 -> type ( ) != BacktraceLine :: EmptyLine )		566573	2					
ANR	566715	Condition	it2 -> type ( ) != BacktraceLine :: StackFrame && it2 -> type ( ) != BacktraceLine :: EmptyLine	74:12:2489:2571	566573	0	True				
ANR	566716	AndExpression	it2 -> type ( ) != BacktraceLine :: StackFrame && it2 -> type ( ) != BacktraceLine :: EmptyLine		566573	0		&&			
ANR	566717	EqualityExpression	it2 -> type ( ) != BacktraceLine :: StackFrame		566573	0		!=			
ANR	566718	CallExpression	it2 -> type ( )		566573	0					
ANR	566719	Callee	it2 -> type		566573	0					
ANR	566720	PtrMemberAccess	it2 -> type		566573	0					
ANR	566721	Identifier	it2		566573	0					
ANR	566722	Identifier	type		566573	1					
ANR	566723	ArgumentList			566573	1					
ANR	566724	Identifier	BacktraceLine :: StackFrame		566573	1					
ANR	566725	EqualityExpression	it2 -> type ( ) != BacktraceLine :: EmptyLine		566573	1		!=			
ANR	566726	CallExpression	it2 -> type ( )		566573	0					
ANR	566727	Callee	it2 -> type		566573	0					
ANR	566728	PtrMemberAccess	it2 -> type		566573	0					
ANR	566729	Identifier	it2		566573	0					
ANR	566730	Identifier	type		566573	1					
ANR	566731	ArgumentList			566573	1					
ANR	566732	Identifier	BacktraceLine :: EmptyLine		566573	1					
ANR	566733	CompoundStatement		24:97:826:826	566573	1					
ANR	566734	ExpressionStatement	++ it2	75:12:2588:2593	566573	0	True				
ANR	566735	UnaryExpression	++ it2		566573	0					
ANR	566736	IncDec	++		566573	0					
ANR	566737	Identifier	it2		566573	1					
ANR	566738	ContinueStatement	continue ;	76:12:2607:2615	566573	1	True				
ANR	566739	IfStatement	if ( it -> type ( ) == BacktraceLine :: StackFrame && it2 -> type ( ) == BacktraceLine :: EmptyLine )		566573	3					
ANR	566740	Condition	it -> type ( ) == BacktraceLine :: StackFrame && it2 -> type ( ) == BacktraceLine :: EmptyLine	80:12:2683:2764	566573	0	True				
ANR	566741	AndExpression	it -> type ( ) == BacktraceLine :: StackFrame && it2 -> type ( ) == BacktraceLine :: EmptyLine		566573	0		&&			
ANR	566742	EqualityExpression	it -> type ( ) == BacktraceLine :: StackFrame		566573	0		==			
ANR	566743	CallExpression	it -> type ( )		566573	0					
ANR	566744	Callee	it -> type		566573	0					
ANR	566745	PtrMemberAccess	it -> type		566573	0					
ANR	566746	Identifier	it		566573	0					
ANR	566747	Identifier	type		566573	1					
ANR	566748	ArgumentList			566573	1					
ANR	566749	Identifier	BacktraceLine :: StackFrame		566573	1					
ANR	566750	EqualityExpression	it2 -> type ( ) == BacktraceLine :: EmptyLine		566573	1		==			
ANR	566751	CallExpression	it2 -> type ( )		566573	0					
ANR	566752	Callee	it2 -> type		566573	0					
ANR	566753	PtrMemberAccess	it2 -> type		566573	0					
ANR	566754	Identifier	it2		566573	0					
ANR	566755	Identifier	type		566573	1					
ANR	566756	ArgumentList			566573	1					
ANR	566757	Identifier	BacktraceLine :: EmptyLine		566573	1					
ANR	566758	CompoundStatement		30:96:1019:1019	566573	1					
ANR	566759	ExpressionStatement	++ lines	81:12:2781:2788	566573	0	True				
ANR	566760	UnaryExpression	++ lines		566573	0					
ANR	566761	IncDec	++		566573	0					
ANR	566762	Identifier	lines		566573	1					
ANR	566763	ExpressionStatement	++ it	82:12:2802:2806	566573	1	True				
ANR	566764	UnaryExpression	++ it		566573	0					
ANR	566765	IncDec	++		566573	0					
ANR	566766	Identifier	it		566573	1					
ANR	566767	ContinueStatement	continue ;	83:12:2820:2828	566573	2	True				
ANR	566768	IfStatement	if ( it2 -> type ( ) == BacktraceLine :: StackFrame && it -> type ( ) == BacktraceLine :: EmptyLine )		566573	4					
ANR	566769	Condition	it2 -> type ( ) == BacktraceLine :: StackFrame && it -> type ( ) == BacktraceLine :: EmptyLine	85:12:2852:2933	566573	0	True				
ANR	566770	AndExpression	it2 -> type ( ) == BacktraceLine :: StackFrame && it -> type ( ) == BacktraceLine :: EmptyLine		566573	0		&&			
ANR	566771	EqualityExpression	it2 -> type ( ) == BacktraceLine :: StackFrame		566573	0		==			
ANR	566772	CallExpression	it2 -> type ( )		566573	0					
ANR	566773	Callee	it2 -> type		566573	0					
ANR	566774	PtrMemberAccess	it2 -> type		566573	0					
ANR	566775	Identifier	it2		566573	0					
ANR	566776	Identifier	type		566573	1					
ANR	566777	ArgumentList			566573	1					
ANR	566778	Identifier	BacktraceLine :: StackFrame		566573	1					
ANR	566779	EqualityExpression	it -> type ( ) == BacktraceLine :: EmptyLine		566573	1		==			
ANR	566780	CallExpression	it -> type ( )		566573	0					
ANR	566781	Callee	it -> type		566573	0					
ANR	566782	PtrMemberAccess	it -> type		566573	0					
ANR	566783	Identifier	it		566573	0					
ANR	566784	Identifier	type		566573	1					
ANR	566785	ArgumentList			566573	1					
ANR	566786	Identifier	BacktraceLine :: EmptyLine		566573	1					
ANR	566787	CompoundStatement		35:96:1188:1188	566573	1					
ANR	566788	ExpressionStatement	++ lines	86:12:2950:2957	566573	0	True				
ANR	566789	UnaryExpression	++ lines		566573	0					
ANR	566790	IncDec	++		566573	0					
ANR	566791	Identifier	lines		566573	1					
ANR	566792	ExpressionStatement	++ it2	87:12:2971:2976	566573	1	True				
ANR	566793	UnaryExpression	++ it2		566573	0					
ANR	566794	IncDec	++		566573	0					
ANR	566795	Identifier	it2		566573	1					
ANR	566796	ContinueStatement	continue ;	88:12:2990:2998	566573	2	True				
ANR	566797	IfStatement	if ( it -> type ( ) == BacktraceLine :: EmptyLine && it2 -> type ( ) == BacktraceLine :: EmptyLine )		566573	5					
ANR	566798	Condition	it -> type ( ) == BacktraceLine :: EmptyLine && it2 -> type ( ) == BacktraceLine :: EmptyLine	91:12:3023:3103	566573	0	True				
ANR	566799	AndExpression	it -> type ( ) == BacktraceLine :: EmptyLine && it2 -> type ( ) == BacktraceLine :: EmptyLine		566573	0		&&			
ANR	566800	EqualityExpression	it -> type ( ) == BacktraceLine :: EmptyLine		566573	0		==			
ANR	566801	CallExpression	it -> type ( )		566573	0					
ANR	566802	Callee	it -> type		566573	0					
ANR	566803	PtrMemberAccess	it -> type		566573	0					
ANR	566804	Identifier	it		566573	0					
ANR	566805	Identifier	type		566573	1					
ANR	566806	ArgumentList			566573	1					
ANR	566807	Identifier	BacktraceLine :: EmptyLine		566573	1					
ANR	566808	EqualityExpression	it2 -> type ( ) == BacktraceLine :: EmptyLine		566573	1		==			
ANR	566809	CallExpression	it2 -> type ( )		566573	0					
ANR	566810	Callee	it2 -> type		566573	0					
ANR	566811	PtrMemberAccess	it2 -> type		566573	0					
ANR	566812	Identifier	it2		566573	0					
ANR	566813	Identifier	type		566573	1					
ANR	566814	ArgumentList			566573	1					
ANR	566815	Identifier	BacktraceLine :: EmptyLine		566573	1					
ANR	566816	CompoundStatement		41:95:1358:1358	566573	1					
ANR	566817	BreakStatement	break ;	93:12:3139:3144	566573	0	True				
ANR	566818	IfStatement	if ( ! lines )		566573	5					
ANR	566819	Condition	! lines	97:8:3171:3176	566573	0	True				
ANR	566820	UnaryOperationExpression	! lines		566573	0					
ANR	566821	UnaryOperator	!		566573	0					
ANR	566822	Identifier	lines		566573	1					
ANR	566823	CompoundStatement		47:16:1431:1431	566573	1					
ANR	566824	ReturnStatement	return ParseBugBacktraces :: NoDuplicate ;	98:8:3189:3227	566573	0	True				
ANR	566825	Identifier	ParseBugBacktraces :: NoDuplicate		566573	0					
ANR	566826	IdentifierDeclStatement	const int rating = matches * 100 / lines ;	101:4:3240:3280	566573	6	True				
ANR	566827	IdentifierDecl	rating = matches * 100 / lines		566573	0					
ANR	566828	IdentifierDeclType	const int		566573	0					
ANR	566829	Identifier	rating		566573	1					
ANR	566830	AssignmentExpression	rating = matches * 100 / lines		566573	2		=			
ANR	566831	Identifier	rating		566573	0					
ANR	566832	MultiplicativeExpression	matches * 100 / lines		566573	1		*			
ANR	566833	Identifier	matches		566573	0					
ANR	566834	MultiplicativeExpression	100 / lines		566573	1		/			
ANR	566835	PrimaryExpression	100		566573	0					
ANR	566836	Identifier	lines		566573	1					
ANR	566837	IfStatement	if ( rating == 100 )		566573	7					
ANR	566838	Condition	rating == 100	102:8:3290:3302	566573	0	True				
ANR	566839	EqualityExpression	rating == 100		566573	0		==			
ANR	566840	Identifier	rating		566573	0					
ANR	566841	PrimaryExpression	100		566573	1					
ANR	566842	CompoundStatement		52:23:1557:1557	566573	1					
ANR	566843	ReturnStatement	return ParseBugBacktraces :: PerfectDuplicate ;	103:8:3315:3358	566573	0	True				
ANR	566844	Identifier	ParseBugBacktraces :: PerfectDuplicate		566573	0					
ANR	566845	ElseStatement	else		566573	0					
ANR	566846	IfStatement	if ( rating >= 90 )		566573	0					
ANR	566847	Condition	rating >= 90	104:15:3375:3386	566573	0	True				
ANR	566848	RelationalExpression	rating >= 90		566573	0		>=			
ANR	566849	Identifier	rating		566573	0					
ANR	566850	PrimaryExpression	90		566573	1					
ANR	566851	CompoundStatement		54:29:1641:1641	566573	1					
ANR	566852	ReturnStatement	return ParseBugBacktraces :: MostLikelyDuplicate ;	105:8:3399:3445	566573	0	True				
ANR	566853	Identifier	ParseBugBacktraces :: MostLikelyDuplicate		566573	0					
ANR	566854	ElseStatement	else		566573	0					
ANR	566855	IfStatement	if ( rating >= 60 )		566573	0					
ANR	566856	Condition	rating >= 60	106:15:3462:3473	566573	0	True				
ANR	566857	RelationalExpression	rating >= 60		566573	0		>=			
ANR	566858	Identifier	rating		566573	0					
ANR	566859	PrimaryExpression	60		566573	1					
ANR	566860	CompoundStatement		56:29:1728:1728	566573	1					
ANR	566861	ReturnStatement	return ParseBugBacktraces :: MaybeDuplicate ;	107:8:3486:3527	566573	0	True				
ANR	566862	Identifier	ParseBugBacktraces :: MaybeDuplicate		566573	0					
ANR	566863	ElseStatement	else		566573	0					
ANR	566864	CompoundStatement		58:11:1792:1792	566573	0					
ANR	566865	ReturnStatement	return ParseBugBacktraces :: NoDuplicate ;	109:8:3550:3588	566573	0	True				
ANR	566866	Identifier	ParseBugBacktraces :: NoDuplicate		566573	0					
ANR	566867	ReturnStatement	return ParseBugBacktraces :: NoDuplicate ;	112:4:3601:3639	566573	8	True				
ANR	566868	Identifier	ParseBugBacktraces :: NoDuplicate		566573	0					
ANR	566869	ReturnType	ParseBugBacktraces :: DuplicateRating		566573	1					
ANR	566870	Identifier	rating		566573	2					
ANR	566871	ParameterList	"BacktraceConstIterator it , BacktraceConstIterator itEnd , BacktraceConstIterator it2 , BacktraceConstIterator itEnd2"		566573	3					
ANR	566872	Parameter	BacktraceConstIterator it	50:43:1631:1655	566573	0	True				
ANR	566873	ParameterType	BacktraceConstIterator		566573	0					
ANR	566874	Identifier	it		566573	1					
ANR	566875	Parameter	BacktraceConstIterator itEnd	50:70:1658:1685	566573	1	True				
ANR	566876	ParameterType	BacktraceConstIterator		566573	0					
ANR	566877	Identifier	itEnd		566573	1					
ANR	566878	Parameter	BacktraceConstIterator it2	50:100:1688:1713	566573	2	True				
ANR	566879	ParameterType	BacktraceConstIterator		566573	0					
ANR	566880	Identifier	it2		566573	1					
ANR	566881	Parameter	BacktraceConstIterator itEnd2	50:128:1716:1744	566573	3	True				
ANR	566882	ParameterType	BacktraceConstIterator		566573	0					
ANR	566883	Identifier	itEnd2		566573	1					
ANR	566884	CFGEntryNode	ENTRY		566573		True				
ANR	566885	CFGExitNode	EXIT		566573		True				
ANR	566886	Symbol	it2		566573						
ANR	566887	Symbol	it2 -> type		566573						
ANR	566888	Symbol	it -> functionName		566573						
ANR	566889	Symbol	rating		566573						
ANR	566890	Symbol	it		566573						
ANR	566891	Symbol	it2 -> functionName		566573						
ANR	566892	Symbol	itEnd		566573						
ANR	566893	Symbol	matches		566573						
ANR	566894	Symbol	* it2		566573						
ANR	566895	Symbol	it -> frameNumber		566573						
ANR	566896	Symbol	it -> type		566573						
ANR	566897	Symbol	itEnd2		566573						
ANR	566898	Symbol	* it		566573						
ANR	566899	Symbol	ParseBugBacktraces :: NoDuplicate		566573						
ANR	566900	Symbol	BacktraceLine :: EmptyLine		566573						
ANR	566901	Symbol	ParseBugBacktraces :: PerfectDuplicate		566573						
ANR	566902	Symbol	ParseBugBacktraces :: MaybeDuplicate		566573						
ANR	566903	Symbol	it2 -> frameNumber		566573						
ANR	566904	Symbol	lines		566573						
ANR	566905	Symbol	findCrashStackFrame		566573						
ANR	566906	Symbol	ParseBugBacktraces :: MostLikelyDuplicate		566573						
ANR	566907	Symbol	BacktraceLine :: StackFrame		566573						
ANR	566908	Function	ParseBugBacktraces :: ParseBugBacktraces	115:0:3644:3872							
ANR	566909	FunctionDef	"ParseBugBacktraces :: ParseBugBacktraces (const BugReport & bug , QObject * parent)"		566908	0					
ANR	566910	CompoundStatement		118:0:3758:3872	566908	0					
ANR	566911	ExpressionStatement	"m_parser = BacktraceParser :: newParser ( QStringLiteral ( ""gdb"" ) , this )"	119:4:3764:3830	566908	0	True				
ANR	566912	AssignmentExpression	"m_parser = BacktraceParser :: newParser ( QStringLiteral ( ""gdb"" ) , this )"		566908	0		=			
ANR	566913	Identifier	m_parser		566908	0					
ANR	566914	CallExpression	"BacktraceParser :: newParser ( QStringLiteral ( ""gdb"" ) , this )"		566908	1					
ANR	566915	Callee	BacktraceParser :: newParser		566908	0					
ANR	566916	Identifier	BacktraceParser :: newParser		566908	0					
ANR	566917	ArgumentList	"QStringLiteral ( ""gdb"" )"		566908	1					
ANR	566918	Argument	"QStringLiteral ( ""gdb"" )"		566908	0					
ANR	566919	CallExpression	"QStringLiteral ( ""gdb"" )"		566908	0					
ANR	566920	Callee	QStringLiteral		566908	0					
ANR	566921	Identifier	QStringLiteral		566908	0					
ANR	566922	ArgumentList	"""gdb"""		566908	1					
ANR	566923	Argument	"""gdb"""		566908	0					
ANR	566924	PrimaryExpression	"""gdb"""		566908	0					
ANR	566925	Argument	this		566908	1					
ANR	566926	Identifier	this		566908	0					
ANR	566927	ExpressionStatement	m_parser -> connectToGenerator ( this )	120:4:3836:3870	566908	1	True				
ANR	566928	CallExpression	m_parser -> connectToGenerator ( this )		566908	0					
ANR	566929	Callee	m_parser -> connectToGenerator		566908	0					
ANR	566930	PtrMemberAccess	m_parser -> connectToGenerator		566908	0					
ANR	566931	Identifier	m_parser		566908	0					
ANR	566932	Identifier	connectToGenerator		566908	1					
ANR	566933	ArgumentList	this		566908	1					
ANR	566934	Argument	this		566908	0					
ANR	566935	Identifier	this		566908	0					
ANR	566936	Identifier	ParseBugBacktraces :: ParseBugBacktraces		566908	1					
ANR	566937	ParameterList	"const BugReport & bug , QObject * parent"		566908	2					
ANR	566938	Parameter	const BugReport & bug	115:39:3683:3702	566908	0	True				
ANR	566939	ParameterType	const BugReport &		566908	0					
ANR	566940	Identifier	bug		566908	1					
ANR	566941	Parameter	QObject * parent	115:61:3705:3719	566908	1	True				
ANR	566942	ParameterType	QObject *		566908	0					
ANR	566943	Identifier	parent		566908	1					
ANR	566944	CFGEntryNode	ENTRY		566908		True				
ANR	566945	CFGExitNode	EXIT		566908		True				
ANR	566946	Symbol	parent		566908						
ANR	566947	Symbol	BacktraceParser :: newParser		566908						
ANR	566948	Symbol	bug		566908						
ANR	566949	Symbol	this		566908						
ANR	566950	Symbol	QStringLiteral		566908						
ANR	566951	Symbol	m_parser		566908						
ANR	566952	Function	ParseBugBacktraces :: parse	123:0:3875:4067							
ANR	566953	FunctionDef	ParseBugBacktraces :: parse ()		566952	0					
ANR	566954	CompoundStatement		124:0:3908:4067	566952	0					
ANR	566955	ExpressionStatement	parse ( m_bug . description ( ) )	125:4:3914:3940	566952	0	True				
ANR	566956	CallExpression	parse ( m_bug . description ( ) )		566952	0					
ANR	566957	Callee	parse		566952	0					
ANR	566958	Identifier	parse		566952	0					
ANR	566959	ArgumentList	m_bug . description ( )		566952	1					
ANR	566960	Argument	m_bug . description ( )		566952	0					
ANR	566961	CallExpression	m_bug . description ( )		566952	0					
ANR	566962	Callee	m_bug . description		566952	0					
ANR	566963	MemberAccess	m_bug . description		566952	0					
ANR	566964	Identifier	m_bug		566952	0					
ANR	566965	Identifier	description		566952	1					
ANR	566966	ArgumentList			566952	1					
ANR	566967	IdentifierDeclStatement	QStringList comments = m_bug . comments ( ) ;	127:4:3947:3986	566952	1	True				
ANR	566968	IdentifierDecl	comments = m_bug . comments ( )		566952	0					
ANR	566969	IdentifierDeclType	QStringList		566952	0					
ANR	566970	Identifier	comments		566952	1					
ANR	566971	AssignmentExpression	comments = m_bug . comments ( )		566952	2		=			
ANR	566972	Identifier	comments		566952	0					
ANR	566973	CallExpression	m_bug . comments ( )		566952	1					
ANR	566974	Callee	m_bug . comments		566952	0					
ANR	566975	MemberAccess	m_bug . comments		566952	0					
ANR	566976	Identifier	m_bug		566952	0					
ANR	566977	Identifier	comments		566952	1					
ANR	566978	ArgumentList			566952	1					
ANR	566979	Statement	foreach	128:4:3992:3998	566952	2	True				
ANR	566980	Statement	(	128:12:4000:4000	566952	3	True				
ANR	566981	Statement	const	128:13:4001:4005	566952	4	True				
ANR	566982	Statement	QString	128:19:4007:4013	566952	5	True				
ANR	566983	Statement	&	128:27:4015:4015	566952	6	True				
ANR	566984	Statement	comment	128:28:4016:4022	566952	7	True				
ANR	566985	Statement	","	128:35:4023:4023	566952	8	True				
ANR	566986	Statement	comments	128:37:4025:4032	566952	9	True				
ANR	566987	Statement	)	128:45:4033:4033	566952	10	True				
ANR	566988	CompoundStatement		5:47:126:126	566952	11					
ANR	566989	ExpressionStatement	parse ( comment )	129:8:4045:4059	566952	0	True				
ANR	566990	CallExpression	parse ( comment )		566952	0					
ANR	566991	Callee	parse		566952	0					
ANR	566992	Identifier	parse		566952	0					
ANR	566993	ArgumentList	comment		566952	1					
ANR	566994	Argument	comment		566952	0					
ANR	566995	Identifier	comment		566952	0					
ANR	566996	ReturnType	void		566952	1					
ANR	566997	Identifier	ParseBugBacktraces :: parse		566952	2					
ANR	566998	ParameterList			566952	3					
ANR	566999	CFGEntryNode	ENTRY		566952		True				
ANR	567000	CFGExitNode	EXIT		566952		True				
ANR	567001	Symbol	comments		566952						
ANR	567002	Symbol	m_bug . description		566952						
ANR	567003	Symbol	comment		566952						
ANR	567004	Symbol	m_bug . comments		566952						
ANR	567005	Symbol	m_bug		566952						
ANR	567006	Function	ParseBugBacktraces :: parse	133:0:4070:4512							
ANR	567007	FunctionDef	ParseBugBacktraces :: parse (const QString & comment)		567006	0					
ANR	567008	CompoundStatement		134:0:4125:4512	567006	0					
ANR	567009	IdentifierDeclStatement	emit starting ( ) ;	135:4:4131:4146	567006	0	True				
ANR	567010	IdentifierDecl	starting ( )		567006	0					
ANR	567011	IdentifierDeclType	emit		567006	0					
ANR	567012	Identifier	starting		567006	1					
ANR	567013	IdentifierDeclStatement	int start = 0 ;	137:4:4153:4166	567006	1	True				
ANR	567014	IdentifierDecl	start = 0		567006	0					
ANR	567015	IdentifierDeclType	int		567006	0					
ANR	567016	Identifier	start		567006	1					
ANR	567017	AssignmentExpression	start = 0		567006	2		=			
ANR	567018	Identifier	start		567006	0					
ANR	567019	PrimaryExpression	0		567006	1					
ANR	567020	IdentifierDeclStatement	int end = - 1 ;	138:4:4172:4184	567006	2	True				
ANR	567021	IdentifierDecl	end = - 1		567006	0					
ANR	567022	IdentifierDeclType	int		567006	0					
ANR	567023	Identifier	end		567006	1					
ANR	567024	AssignmentExpression	end = - 1		567006	2		=			
ANR	567025	Identifier	end		567006	0					
ANR	567026	UnaryOperationExpression	- 1		567006	1					
ANR	567027	UnaryOperator	-		567006	0					
ANR	567028	PrimaryExpression	1		567006	1					
ANR	567029	DoStatement	do		567006	3					
ANR	567030	CompoundStatement		9:8:146:215	567006	0					
ANR	567031	ExpressionStatement	start = end + 1	140:8:4203:4218	567006	0	True				
ANR	567032	AssignmentExpression	start = end + 1		567006	0		=			
ANR	567033	Identifier	start		567006	0					
ANR	567034	AdditiveExpression	end + 1		567006	1		+			
ANR	567035	Identifier	end		567006	0					
ANR	567036	PrimaryExpression	1		567006	1					
ANR	567037	ExpressionStatement	"end = comment . indexOf ( '\\n' , start )"	141:8:4228:4262	567006	1	True				
ANR	567038	AssignmentExpression	"end = comment . indexOf ( '\\n' , start )"		567006	0		=			
ANR	567039	Identifier	end		567006	0					
ANR	567040	CallExpression	"comment . indexOf ( '\\n' , start )"		567006	1					
ANR	567041	Callee	comment . indexOf		567006	0					
ANR	567042	MemberAccess	comment . indexOf		567006	0					
ANR	567043	Identifier	comment		567006	0					
ANR	567044	Identifier	indexOf		567006	1					
ANR	567045	ArgumentList	'\\n'		567006	1					
ANR	567046	Argument	'\\n'		567006	0					
ANR	567047	PrimaryExpression	'\\n'		567006	0					
ANR	567048	Argument	start		567006	1					
ANR	567049	Identifier	start		567006	0					
ANR	567050	IdentifierDeclStatement	"emit newLine ( comment . mid ( start , ( end != - 1 ? end - start + 1 : end ) ) ) ;"	142:8:4272:4341	567006	2	True				
ANR	567051	IdentifierDecl	"newLine ( comment . mid ( start , ( end != - 1 ? end - start + 1 : end ) ) )"		567006	0					
ANR	567052	IdentifierDeclType	emit		567006	0					
ANR	567053	Identifier	newLine		567006	1					
ANR	567054	CallExpression	"comment . mid ( start , ( end != - 1 ? end - start + 1 : end ) )"		567006	2					
ANR	567055	Callee	comment . mid		567006	0					
ANR	567056	MemberAccess	comment . mid		567006	0					
ANR	567057	Identifier	comment		567006	0					
ANR	567058	Identifier	mid		567006	1					
ANR	567059	ArgumentList	start		567006	1					
ANR	567060	Argument	start		567006	0					
ANR	567061	Identifier	start		567006	0					
ANR	567062	Argument	end != - 1 ? end - start + 1 : end		567006	1					
ANR	567063	ConditionalExpression	end != - 1 ? end - start + 1 : end		567006	0					
ANR	567064	Condition	end != - 1		567006	0					
ANR	567065	EqualityExpression	end != - 1		567006	0		!=			
ANR	567066	Identifier	end		567006	0					
ANR	567067	UnaryOperationExpression	- 1		567006	1					
ANR	567068	UnaryOperator	-		567006	0					
ANR	567069	PrimaryExpression	1		567006	1					
ANR	567070	AdditiveExpression	end - start + 1		567006	1		-			
ANR	567071	Identifier	end		567006	0					
ANR	567072	AdditiveExpression	start + 1		567006	1		+			
ANR	567073	Identifier	start		567006	0					
ANR	567074	PrimaryExpression	1		567006	1					
ANR	567075	Identifier	end		567006	2					
ANR	567076	Condition	end != - 1	143:13:4356:4364	567006	1	True				
ANR	567077	EqualityExpression	end != - 1		567006	0		!=			
ANR	567078	Identifier	end		567006	0					
ANR	567079	UnaryOperationExpression	- 1		567006	1					
ANR	567080	UnaryOperator	-		567006	0					
ANR	567081	PrimaryExpression	1		567006	1					
ANR	567082	ExpressionStatement	m_backtraces << m_parser -> parsedBacktraceLines ( )	146:4:4462:4510	567006	4	True				
ANR	567083	ShiftExpression	m_backtraces << m_parser -> parsedBacktraceLines ( )		567006	0		<<			
ANR	567084	Identifier	m_backtraces		567006	0					
ANR	567085	CallExpression	m_parser -> parsedBacktraceLines ( )		567006	1					
ANR	567086	Callee	m_parser -> parsedBacktraceLines		567006	0					
ANR	567087	PtrMemberAccess	m_parser -> parsedBacktraceLines		567006	0					
ANR	567088	Identifier	m_parser		567006	0					
ANR	567089	Identifier	parsedBacktraceLines		567006	1					
ANR	567090	ArgumentList			567006	1					
ANR	567091	ReturnType	void		567006	1					
ANR	567092	Identifier	ParseBugBacktraces :: parse		567006	2					
ANR	567093	ParameterList	const QString & comment		567006	3					
ANR	567094	Parameter	const QString & comment	133:31:4101:4122	567006	0	True				
ANR	567095	ParameterType	const QString &		567006	0					
ANR	567096	Identifier	comment		567006	1					
ANR	567097	CFGEntryNode	ENTRY		567006		True				
ANR	567098	CFGExitNode	EXIT		567006		True				
ANR	567099	Symbol	comment . indexOf		567006						
ANR	567100	Symbol	newLine		567006						
ANR	567101	Symbol	start		567006						
ANR	567102	Symbol	comment		567006						
ANR	567103	Symbol	end		567006						
ANR	567104	Symbol	m_parser		567006						
ANR	567105	Symbol	starting		567006						
ANR	567106	Function	ParseBugBacktraces :: findDuplicate	149:0:4515:5357							
ANR	567107	FunctionDef	ParseBugBacktraces :: findDuplicate (const QList < BacktraceLine > & backtrace)		567106	0					
ANR	567108	CompoundStatement		150:0:4624:5357	567106	0					
ANR	567109	IfStatement	if ( m_backtraces . isEmpty ( ) || backtrace . isEmpty ( ) )		567106	0					
ANR	567110	Condition	m_backtraces . isEmpty ( ) || backtrace . isEmpty ( )	151:8:4634:4678	567106	0	True				
ANR	567111	OrExpression	m_backtraces . isEmpty ( ) || backtrace . isEmpty ( )		567106	0		||			
ANR	567112	CallExpression	m_backtraces . isEmpty ( )		567106	0					
ANR	567113	Callee	m_backtraces . isEmpty		567106	0					
ANR	567114	MemberAccess	m_backtraces . isEmpty		567106	0					
ANR	567115	Identifier	m_backtraces		567106	0					
ANR	567116	Identifier	isEmpty		567106	1					
ANR	567117	ArgumentList			567106	1					
ANR	567118	CallExpression	backtrace . isEmpty ( )		567106	1					
ANR	567119	Callee	backtrace . isEmpty		567106	0					
ANR	567120	MemberAccess	backtrace . isEmpty		567106	0					
ANR	567121	Identifier	backtrace		567106	0					
ANR	567122	Identifier	isEmpty		567106	1					
ANR	567123	ArgumentList			567106	1					
ANR	567124	CompoundStatement		2:55:56:56	567106	1					
ANR	567125	ReturnStatement	return NoDuplicate ;	152:8:4691:4709	567106	0	True				
ANR	567126	Identifier	NoDuplicate		567106	0					
ANR	567127	IdentifierDeclStatement	DuplicateRating bestRating = NoDuplicate ;	155:4:4722:4762	567106	1	True				
ANR	567128	IdentifierDecl	bestRating = NoDuplicate		567106	0					
ANR	567129	IdentifierDeclType	DuplicateRating		567106	0					
ANR	567130	Identifier	bestRating		567106	1					
ANR	567131	AssignmentExpression	bestRating = NoDuplicate		567106	2		=			
ANR	567132	Identifier	NoDuplicate		567106	0					
ANR	567133	Identifier	NoDuplicate		567106	1					
ANR	567134	IdentifierDeclStatement	DuplicateRating currentRating = NoDuplicate ;	156:4:4768:4811	567106	2	True				
ANR	567135	IdentifierDecl	currentRating = NoDuplicate		567106	0					
ANR	567136	IdentifierDeclType	DuplicateRating		567106	0					
ANR	567137	Identifier	currentRating		567106	1					
ANR	567138	AssignmentExpression	currentRating = NoDuplicate		567106	2		=			
ANR	567139	Identifier	NoDuplicate		567106	0					
ANR	567140	Identifier	NoDuplicate		567106	1					
ANR	567141	IdentifierDeclStatement	QList < QList < BacktraceLine > > :: const_iterator itBts ;	158:4:4818:4868	567106	3	True				
ANR	567142	IdentifierDecl	itBts		567106	0					
ANR	567143	IdentifierDeclType	QList < QList < BacktraceLine > > :: const_iterator		567106	0					
ANR	567144	Identifier	itBts		567106	1					
ANR	567145	IdentifierDeclStatement	QList < QList < BacktraceLine > > :: const_iterator itEndBts = m_backtraces . constEnd ( ) ;	159:4:4874:4953	567106	4	True				
ANR	567146	IdentifierDecl	itEndBts = m_backtraces . constEnd ( )		567106	0					
ANR	567147	IdentifierDeclType	QList < QList < BacktraceLine > > :: const_iterator		567106	0					
ANR	567148	Identifier	itEndBts		567106	1					
ANR	567149	AssignmentExpression	itEndBts = m_backtraces . constEnd ( )		567106	2		=			
ANR	567150	Identifier	itEndBts		567106	0					
ANR	567151	CallExpression	m_backtraces . constEnd ( )		567106	1					
ANR	567152	Callee	m_backtraces . constEnd		567106	0					
ANR	567153	MemberAccess	m_backtraces . constEnd		567106	0					
ANR	567154	Identifier	m_backtraces		567106	0					
ANR	567155	Identifier	constEnd		567106	1					
ANR	567156	ArgumentList			567106	1					
ANR	567157	ForStatement	for ( itBts = m_backtraces . constBegin ( ) ; itBts != itEndBts ; ++ itBts )		567106	5					
ANR	567158	ForInit	itBts = m_backtraces . constBegin ( ) ;	160:9:4964:4997	567106	0	True				
ANR	567159	AssignmentExpression	itBts = m_backtraces . constBegin ( )		567106	0		=			
ANR	567160	Identifier	itBts		567106	0					
ANR	567161	CallExpression	m_backtraces . constBegin ( )		567106	1					
ANR	567162	Callee	m_backtraces . constBegin		567106	0					
ANR	567163	MemberAccess	m_backtraces . constBegin		567106	0					
ANR	567164	Identifier	m_backtraces		567106	0					
ANR	567165	Identifier	constBegin		567106	1					
ANR	567166	ArgumentList			567106	1					
ANR	567167	Condition	itBts != itEndBts	160:44:4999:5015	567106	1	True				
ANR	567168	EqualityExpression	itBts != itEndBts		567106	0		!=			
ANR	567169	Identifier	itBts		567106	0					
ANR	567170	Identifier	itEndBts		567106	1					
ANR	567171	UnaryExpression	++ itBts	160:63:5018:5024	567106	2	True				
ANR	567172	IncDec	++		567106	0					
ANR	567173	Identifier	itBts		567106	1					
ANR	567174	CompoundStatement		11:72:402:402	567106	3					
ANR	567175	ExpressionStatement	"currentRating = rating ( backtrace . constBegin ( ) , backtrace . constEnd ( ) , itBts -> constBegin ( ) , itBts -> constEnd ( ) )"	161:8:5037:5145	567106	0	True				
ANR	567176	AssignmentExpression	"currentRating = rating ( backtrace . constBegin ( ) , backtrace . constEnd ( ) , itBts -> constBegin ( ) , itBts -> constEnd ( ) )"		567106	0		=			
ANR	567177	Identifier	currentRating		567106	0					
ANR	567178	CallExpression	"rating ( backtrace . constBegin ( ) , backtrace . constEnd ( ) , itBts -> constBegin ( ) , itBts -> constEnd ( ) )"		567106	1					
ANR	567179	Callee	rating		567106	0					
ANR	567180	Identifier	rating		567106	0					
ANR	567181	ArgumentList	backtrace . constBegin ( )		567106	1					
ANR	567182	Argument	backtrace . constBegin ( )		567106	0					
ANR	567183	CallExpression	backtrace . constBegin ( )		567106	0					
ANR	567184	Callee	backtrace . constBegin		567106	0					
ANR	567185	MemberAccess	backtrace . constBegin		567106	0					
ANR	567186	Identifier	backtrace		567106	0					
ANR	567187	Identifier	constBegin		567106	1					
ANR	567188	ArgumentList			567106	1					
ANR	567189	Argument	backtrace . constEnd ( )		567106	1					
ANR	567190	CallExpression	backtrace . constEnd ( )		567106	0					
ANR	567191	Callee	backtrace . constEnd		567106	0					
ANR	567192	MemberAccess	backtrace . constEnd		567106	0					
ANR	567193	Identifier	backtrace		567106	0					
ANR	567194	Identifier	constEnd		567106	1					
ANR	567195	ArgumentList			567106	1					
ANR	567196	Argument	itBts -> constBegin ( )		567106	2					
ANR	567197	CallExpression	itBts -> constBegin ( )		567106	0					
ANR	567198	Callee	itBts -> constBegin		567106	0					
ANR	567199	PtrMemberAccess	itBts -> constBegin		567106	0					
ANR	567200	Identifier	itBts		567106	0					
ANR	567201	Identifier	constBegin		567106	1					
ANR	567202	ArgumentList			567106	1					
ANR	567203	Argument	itBts -> constEnd ( )		567106	3					
ANR	567204	CallExpression	itBts -> constEnd ( )		567106	0					
ANR	567205	Callee	itBts -> constEnd		567106	0					
ANR	567206	PtrMemberAccess	itBts -> constEnd		567106	0					
ANR	567207	Identifier	itBts		567106	0					
ANR	567208	Identifier	constEnd		567106	1					
ANR	567209	ArgumentList			567106	1					
ANR	567210	IfStatement	if ( currentRating < bestRating )		567106	1					
ANR	567211	Condition	currentRating < bestRating	162:12:5159:5184	567106	0	True				
ANR	567212	RelationalExpression	currentRating < bestRating		567106	0		<			
ANR	567213	Identifier	currentRating		567106	0					
ANR	567214	Identifier	bestRating		567106	1					
ANR	567215	CompoundStatement		13:40:562:562	567106	1					
ANR	567216	ExpressionStatement	bestRating = currentRating	163:12:5201:5227	567106	0	True				
ANR	567217	AssignmentExpression	bestRating = currentRating		567106	0		=			
ANR	567218	Identifier	bestRating		567106	0					
ANR	567219	Identifier	currentRating		567106	1					
ANR	567220	IfStatement	if ( bestRating == PerfectDuplicate )		567106	2					
ANR	567221	Condition	bestRating == PerfectDuplicate	166:12:5252:5281	567106	0	True				
ANR	567222	EqualityExpression	bestRating == PerfectDuplicate		567106	0		==			
ANR	567223	Identifier	bestRating		567106	0					
ANR	567224	Identifier	PerfectDuplicate		567106	1					
ANR	567225	CompoundStatement		17:44:659:659	567106	1					
ANR	567226	ReturnStatement	return bestRating ;	167:12:5298:5315	567106	0	True				
ANR	567227	Identifier	bestRating		567106	0					
ANR	567228	ReturnStatement	return bestRating ;	171:4:5338:5355	567106	6	True				
ANR	567229	Identifier	bestRating		567106	0					
ANR	567230	ReturnType	ParseBugBacktraces :: DuplicateRating		567106	1					
ANR	567231	Identifier	ParseBugBacktraces :: findDuplicate		567106	2					
ANR	567232	ParameterList	const QList < BacktraceLine > & backtrace		567106	3					
ANR	567233	Parameter	const QList < BacktraceLine > & backtrace	149:70:4585:4621	567106	0	True				
ANR	567234	ParameterType	const QList < BacktraceLine > &		567106	0					
ANR	567235	Identifier	backtrace		567106	1					
ANR	567236	CFGEntryNode	ENTRY		567106		True				
ANR	567237	CFGExitNode	EXIT		567106		True				
ANR	567238	Symbol	currentRating		567106						
ANR	567239	Symbol	PerfectDuplicate		567106						
ANR	567240	Symbol	backtrace . constBegin		567106						
ANR	567241	Symbol	backtrace		567106						
ANR	567242	Symbol	m_backtraces		567106						
ANR	567243	Symbol	itBts -> constEnd		567106						
ANR	567244	Symbol	backtrace . constEnd		567106						
ANR	567245	Symbol	rating		567106						
ANR	567246	Symbol	itBts		567106						
ANR	567247	Symbol	m_backtraces . constEnd		567106						
ANR	567248	Symbol	bestRating		567106						
ANR	567249	Symbol	NoDuplicate		567106						
ANR	567250	Symbol	m_backtraces . constBegin		567106						
ANR	567251	Symbol	itEndBts		567106						
ANR	567252	Symbol	itBts -> constBegin		567106						
ANR	567253	Symbol	backtrace . isEmpty		567106						
ANR	567254	Symbol	m_backtraces . isEmpty		567106						
ANR	567255	Symbol	* itBts		567106						
