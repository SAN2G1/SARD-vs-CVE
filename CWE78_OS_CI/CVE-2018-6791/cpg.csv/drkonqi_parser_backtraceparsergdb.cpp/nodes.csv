command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	273660	File	data/converged/CVE-2018-6791_plasma-workspace/drkonqi_parser_backtraceparsergdb.cpp								
ANR	273661	ClassDef	BacktraceLineGdb	25:0:952:1097							
ANR	273662	DeclStmt									
ANR	273663	Decl							void	void ( )	parse
ANR	273664	DeclStmt									
ANR	273665	Decl							void	void ( )	rate
ANR	273666	Function	BacktraceLineGdb :: BacktraceLineGdb	35:0:1101:1329							
ANR	273667	FunctionDef	BacktraceLineGdb :: BacktraceLineGdb (const QString & lineStr)		273666	0					
ANR	273668	CompoundStatement		37:0:1187:1329	273666	0					
ANR	273669	ExpressionStatement	d -> m_line = lineStr	38:4:1193:1212	273666	0	True				
ANR	273670	AssignmentExpression	d -> m_line = lineStr		273666	0		=			
ANR	273671	PtrMemberAccess	d -> m_line		273666	0					
ANR	273672	Identifier	d		273666	0					
ANR	273673	Identifier	m_line		273666	1					
ANR	273674	Identifier	lineStr		273666	1					
ANR	273675	ExpressionStatement	"d -> m_functionName = QLatin1String ( ""??"" )"	39:4:1218:1257	273666	1	True				
ANR	273676	AssignmentExpression	"d -> m_functionName = QLatin1String ( ""??"" )"		273666	0		=			
ANR	273677	PtrMemberAccess	d -> m_functionName		273666	0					
ANR	273678	Identifier	d		273666	0					
ANR	273679	Identifier	m_functionName		273666	1					
ANR	273680	CallExpression	"QLatin1String ( ""??"" )"		273666	1					
ANR	273681	Callee	QLatin1String		273666	0					
ANR	273682	Identifier	QLatin1String		273666	0					
ANR	273683	ArgumentList	"""??"""		273666	1					
ANR	273684	Argument	"""??"""		273666	0					
ANR	273685	PrimaryExpression	"""??"""		273666	0					
ANR	273686	ExpressionStatement	parse ( )	40:4:1263:1270	273666	2	True				
ANR	273687	CallExpression	parse ( )		273666	0					
ANR	273688	Callee	parse		273666	0					
ANR	273689	Identifier	parse		273666	0					
ANR	273690	ArgumentList			273666	1					
ANR	273691	IfStatement	if ( d -> m_type == StackFrame )		273666	3					
ANR	273692	Condition	d -> m_type == StackFrame	41:8:1280:1302	273666	0	True				
ANR	273693	EqualityExpression	d -> m_type == StackFrame		273666	0		==			
ANR	273694	PtrMemberAccess	d -> m_type		273666	0					
ANR	273695	Identifier	d		273666	0					
ANR	273696	Identifier	m_type		273666	1					
ANR	273697	Identifier	StackFrame		273666	1					
ANR	273698	CompoundStatement		5:33:117:117	273666	1					
ANR	273699	ExpressionStatement	rate ( )	42:8:1315:1321	273666	0	True				
ANR	273700	CallExpression	rate ( )		273666	0					
ANR	273701	Callee	rate		273666	0					
ANR	273702	Identifier	rate		273666	0					
ANR	273703	ArgumentList			273666	1					
ANR	273704	Identifier	BacktraceLineGdb :: BacktraceLineGdb		273666	1					
ANR	273705	ParameterList	const QString & lineStr		273666	2					
ANR	273706	Parameter	const QString & lineStr	35:35:1136:1158	273666	0	True				
ANR	273707	ParameterType	const QString &		273666	0					
ANR	273708	Identifier	lineStr		273666	1					
ANR	273709	CFGEntryNode	ENTRY		273666		True				
ANR	273710	CFGExitNode	EXIT		273666		True				
ANR	273711	Symbol	d -> m_line		273666						
ANR	273712	Symbol	QLatin1String		273666						
ANR	273713	Symbol	d -> m_type		273666						
ANR	273714	Symbol	d		273666						
ANR	273715	Symbol	d -> m_functionName		273666						
ANR	273716	Symbol	lineStr		273666						
ANR	273717	Symbol	StackFrame		273666						
ANR	273718	Symbol	* d		273666						
ANR	273719	Function	BacktraceLineGdb :: parse	46:0:1332:4680							
ANR	273720	FunctionDef	BacktraceLineGdb :: parse ()		273719	0					
ANR	273721	CompoundStatement		47:0:1363:4680	273719	0					
ANR	273722	IdentifierDeclStatement	QRegExp regExp ;	48:4:1369:1383	273719	0	True				
ANR	273723	IdentifierDecl	regExp		273719	0					
ANR	273724	IdentifierDeclType	QRegExp		273719	0					
ANR	273725	Identifier	regExp		273719	1					
ANR	273726	IfStatement	"if ( d -> m_line == QLatin1String ( ""\\n"" ) )"		273719	1					
ANR	273727	Condition	"d -> m_line == QLatin1String ( ""\\n"" )"	50:8:1394:1425	273719	0	True				
ANR	273728	EqualityExpression	"d -> m_line == QLatin1String ( ""\\n"" )"		273719	0		==			
ANR	273729	PtrMemberAccess	d -> m_line		273719	0					
ANR	273730	Identifier	d		273719	0					
ANR	273731	Identifier	m_line		273719	1					
ANR	273732	CallExpression	"QLatin1String ( ""\\n"" )"		273719	1					
ANR	273733	Callee	QLatin1String		273719	0					
ANR	273734	Identifier	QLatin1String		273719	0					
ANR	273735	ArgumentList	"""\\n"""		273719	1					
ANR	273736	Argument	"""\\n"""		273719	0					
ANR	273737	PrimaryExpression	"""\\n"""		273719	0					
ANR	273738	CompoundStatement		4:42:64:64	273719	1					
ANR	273739	ExpressionStatement	d -> m_type = EmptyLine	51:8:1438:1459	273719	0	True				
ANR	273740	AssignmentExpression	d -> m_type = EmptyLine		273719	0		=			
ANR	273741	PtrMemberAccess	d -> m_type		273719	0					
ANR	273742	Identifier	d		273719	0					
ANR	273743	Identifier	m_type		273719	1					
ANR	273744	Identifier	EmptyLine		273719	1					
ANR	273745	ReturnStatement	return ;	52:8:1469:1475	273719	1	True				
ANR	273746	ElseStatement	else		273719	0					
ANR	273747	IfStatement	"if ( d -> m_line == QLatin1String ( ""[KCrash Handler]\\n"" ) )"		273719	0					
ANR	273748	Condition	"d -> m_line == QLatin1String ( ""[KCrash Handler]\\n"" )"	53:15:1492:1539	273719	0	True				
ANR	273749	EqualityExpression	"d -> m_line == QLatin1String ( ""[KCrash Handler]\\n"" )"		273719	0		==			
ANR	273750	PtrMemberAccess	d -> m_line		273719	0					
ANR	273751	Identifier	d		273719	0					
ANR	273752	Identifier	m_line		273719	1					
ANR	273753	CallExpression	"QLatin1String ( ""[KCrash Handler]\\n"" )"		273719	1					
ANR	273754	Callee	QLatin1String		273719	0					
ANR	273755	Identifier	QLatin1String		273719	0					
ANR	273756	ArgumentList	"""[KCrash Handler]\\n"""		273719	1					
ANR	273757	Argument	"""[KCrash Handler]\\n"""		273719	0					
ANR	273758	PrimaryExpression	"""[KCrash Handler]\\n"""		273719	0					
ANR	273759	CompoundStatement		7:65:178:178	273719	1					
ANR	273760	ExpressionStatement	d -> m_type = KCrash	54:8:1552:1570	273719	0	True				
ANR	273761	AssignmentExpression	d -> m_type = KCrash		273719	0		=			
ANR	273762	PtrMemberAccess	d -> m_type		273719	0					
ANR	273763	Identifier	d		273719	0					
ANR	273764	Identifier	m_type		273719	1					
ANR	273765	Identifier	KCrash		273719	1					
ANR	273766	ReturnStatement	return ;	55:8:1580:1586	273719	1	True				
ANR	273767	ElseStatement	else		273719	0					
ANR	273768	IfStatement	"if ( d -> m_line . contains ( QStringLiteral ( ""<signal handler called>"" ) ) )"		273719	0					
ANR	273769	Condition	"d -> m_line . contains ( QStringLiteral ( ""<signal handler called>"" ) )"	56:15:1603:1663	273719	0	True				
ANR	273770	CallExpression	"d -> m_line . contains ( QStringLiteral ( ""<signal handler called>"" ) )"		273719	0					
ANR	273771	Callee	d -> m_line . contains		273719	0					
ANR	273772	MemberAccess	d -> m_line . contains		273719	0					
ANR	273773	PtrMemberAccess	d -> m_line		273719	0					
ANR	273774	Identifier	d		273719	0					
ANR	273775	Identifier	m_line		273719	1					
ANR	273776	Identifier	contains		273719	1					
ANR	273777	ArgumentList	"QStringLiteral ( ""<signal handler called>"" )"		273719	1					
ANR	273778	Argument	"QStringLiteral ( ""<signal handler called>"" )"		273719	0					
ANR	273779	CallExpression	"QStringLiteral ( ""<signal handler called>"" )"		273719	0					
ANR	273780	Callee	QStringLiteral		273719	0					
ANR	273781	Identifier	QStringLiteral		273719	0					
ANR	273782	ArgumentList	"""<signal handler called>"""		273719	1					
ANR	273783	Argument	"""<signal handler called>"""		273719	0					
ANR	273784	PrimaryExpression	"""<signal handler called>"""		273719	0					
ANR	273785	CompoundStatement		10:78:302:302	273719	1					
ANR	273786	ExpressionStatement	d -> m_type = SignalHandlerStart	57:8:1676:1706	273719	0	True				
ANR	273787	AssignmentExpression	d -> m_type = SignalHandlerStart		273719	0		=			
ANR	273788	PtrMemberAccess	d -> m_type		273719	0					
ANR	273789	Identifier	d		273719	0					
ANR	273790	Identifier	m_type		273719	1					
ANR	273791	Identifier	SignalHandlerStart		273719	1					
ANR	273792	ReturnStatement	return ;	58:8:1716:1722	273719	1	True				
ANR	273793	Statement	regExp	61:4:1735:1740	273719	2	True				
ANR	273794	Statement	.	61:10:1741:1741	273719	3	True				
ANR	273795	Statement	setPattern	61:11:1742:1751	273719	4	True				
ANR	273796	Statement	(	61:21:1752:1752	273719	5	True				
ANR	273797	Statement	QStringLiteral	61:22:1753:1766	273719	6	True				
ANR	273798	Statement	(	61:36:1767:1767	273719	7	True				
ANR	273799	Statement	"""^#([0-9]+)"""	61:37:1768:1779	273719	8	True				
ANR	273800	Statement	"""[\\\\s]+(0x[0-9a-f]+[\\\\s]+in[\\\\s]+)?"""	62:22:1846:1881	273719	9	True				
ANR	273801	Statement	"""((\\\\(anonymous namespace\\\\)::)?[^\\\\(]+)"""	63:22:1947:1987	273719	10	True				
ANR	273802	Statement	"""(\\\\(.*\\\\))?"""	66:22:2219:2231	273719	11	True				
ANR	273803	Statement	"""[\\\\s]+(const[\\\\s]+)?"""	68:22:2372:2393	273719	12	True				
ANR	273804	Statement	"""\\\\(.*\\\\)"""	69:22:2457:2466	273719	13	True				
ANR	273805	Statement	"""([\\\\s]+"""	71:22:2620:2628	273719	14	True				
ANR	273806	Statement	"""(from|at)[\\\\s]+"""	72:22:2693:2709	273719	15	True				
ANR	273807	Statement	"""(.+)"""	73:22:2760:2765	273719	16	True				
ANR	273808	Statement	""")?\\n$"""	74:22:2849:2855	273719	17	True				
ANR	273809	Statement	)	74:29:2856:2856	273719	18	True				
ANR	273810	Statement	)	74:30:2857:2857	273719	19	True				
ANR	273811	ExpressionStatement		74:31:2858:2858	273719	20	True				
ANR	273812	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		273719	21					
ANR	273813	Condition	regExp . exactMatch ( d -> m_line )	78:8:3065:3092	273719	0	True				
ANR	273814	CallExpression	regExp . exactMatch ( d -> m_line )		273719	0					
ANR	273815	Callee	regExp . exactMatch		273719	0					
ANR	273816	MemberAccess	regExp . exactMatch		273719	0					
ANR	273817	Identifier	regExp		273719	0					
ANR	273818	Identifier	exactMatch		273719	1					
ANR	273819	ArgumentList	d -> m_line		273719	1					
ANR	273820	Argument	d -> m_line		273719	0					
ANR	273821	PtrMemberAccess	d -> m_line		273719	0					
ANR	273822	Identifier	d		273719	0					
ANR	273823	Identifier	m_line		273719	1					
ANR	273824	CompoundStatement		32:38:1731:1731	273719	1					
ANR	273825	ExpressionStatement	d -> m_type = StackFrame	79:8:3105:3127	273719	0	True				
ANR	273826	AssignmentExpression	d -> m_type = StackFrame		273719	0		=			
ANR	273827	PtrMemberAccess	d -> m_type		273719	0					
ANR	273828	Identifier	d		273719	0					
ANR	273829	Identifier	m_type		273719	1					
ANR	273830	Identifier	StackFrame		273719	1					
ANR	273831	ExpressionStatement	d -> m_stackFrameNumber = regExp . cap ( 1 ) . toInt ( )	80:8:3137:3182	273719	1	True				
ANR	273832	AssignmentExpression	d -> m_stackFrameNumber = regExp . cap ( 1 ) . toInt ( )		273719	0		=			
ANR	273833	PtrMemberAccess	d -> m_stackFrameNumber		273719	0					
ANR	273834	Identifier	d		273719	0					
ANR	273835	Identifier	m_stackFrameNumber		273719	1					
ANR	273836	CallExpression	regExp . cap ( 1 ) . toInt ( )		273719	1					
ANR	273837	Callee	regExp . cap ( 1 ) . toInt		273719	0					
ANR	273838	MemberAccess	regExp . cap ( 1 ) . toInt		273719	0					
ANR	273839	CallExpression	regExp . cap ( 1 )		273719	0					
ANR	273840	Callee	regExp . cap		273719	0					
ANR	273841	MemberAccess	regExp . cap		273719	0					
ANR	273842	Identifier	regExp		273719	0					
ANR	273843	Identifier	cap		273719	1					
ANR	273844	ArgumentList	1		273719	1					
ANR	273845	Argument	1		273719	0					
ANR	273846	PrimaryExpression	1		273719	0					
ANR	273847	Identifier	toInt		273719	1					
ANR	273848	ArgumentList			273719	1					
ANR	273849	ExpressionStatement	d -> m_functionName = regExp . cap ( 3 ) . trimmed ( )	81:8:3192:3235	273719	2	True				
ANR	273850	AssignmentExpression	d -> m_functionName = regExp . cap ( 3 ) . trimmed ( )		273719	0		=			
ANR	273851	PtrMemberAccess	d -> m_functionName		273719	0					
ANR	273852	Identifier	d		273719	0					
ANR	273853	Identifier	m_functionName		273719	1					
ANR	273854	CallExpression	regExp . cap ( 3 ) . trimmed ( )		273719	1					
ANR	273855	Callee	regExp . cap ( 3 ) . trimmed		273719	0					
ANR	273856	MemberAccess	regExp . cap ( 3 ) . trimmed		273719	0					
ANR	273857	CallExpression	regExp . cap ( 3 )		273719	0					
ANR	273858	Callee	regExp . cap		273719	0					
ANR	273859	MemberAccess	regExp . cap		273719	0					
ANR	273860	Identifier	regExp		273719	0					
ANR	273861	Identifier	cap		273719	1					
ANR	273862	ArgumentList	3		273719	1					
ANR	273863	Argument	3		273719	0					
ANR	273864	PrimaryExpression	3		273719	0					
ANR	273865	Identifier	trimmed		273719	1					
ANR	273866	ArgumentList			273719	1					
ANR	273867	IfStatement	if ( ! regExp . cap ( 7 ) . isEmpty ( ) )		273719	3					
ANR	273868	Condition	! regExp . cap ( 7 ) . isEmpty ( )	83:12:3250:3273	273719	0	True				
ANR	273869	UnaryOperationExpression	! regExp . cap ( 7 ) . isEmpty ( )		273719	0					
ANR	273870	UnaryOperator	!		273719	0					
ANR	273871	CallExpression	regExp . cap ( 7 ) . isEmpty ( )		273719	1					
ANR	273872	Callee	regExp . cap ( 7 ) . isEmpty		273719	0					
ANR	273873	MemberAccess	regExp . cap ( 7 ) . isEmpty		273719	0					
ANR	273874	CallExpression	regExp . cap ( 7 )		273719	0					
ANR	273875	Callee	regExp . cap		273719	0					
ANR	273876	MemberAccess	regExp . cap		273719	0					
ANR	273877	Identifier	regExp		273719	0					
ANR	273878	Identifier	cap		273719	1					
ANR	273879	ArgumentList	7		273719	1					
ANR	273880	Argument	7		273719	0					
ANR	273881	PrimaryExpression	7		273719	0					
ANR	273882	Identifier	isEmpty		273719	1					
ANR	273883	ArgumentList			273719	1					
ANR	273884	CompoundStatement		37:38:1912:1912	273719	1					
ANR	273885	IfStatement	"if ( regExp . cap ( 8 ) == QLatin1String ( ""at"" ) )"		273719	0					
ANR	273886	Condition	"regExp . cap ( 8 ) == QLatin1String ( ""at"" )"	84:16:3343:3378	273719	0	True				
ANR	273887	EqualityExpression	"regExp . cap ( 8 ) == QLatin1String ( ""at"" )"		273719	0		==			
ANR	273888	CallExpression	regExp . cap ( 8 )		273719	0					
ANR	273889	Callee	regExp . cap		273719	0					
ANR	273890	MemberAccess	regExp . cap		273719	0					
ANR	273891	Identifier	regExp		273719	0					
ANR	273892	Identifier	cap		273719	1					
ANR	273893	ArgumentList	8		273719	1					
ANR	273894	Argument	8		273719	0					
ANR	273895	PrimaryExpression	8		273719	0					
ANR	273896	CallExpression	"QLatin1String ( ""at"" )"		273719	1					
ANR	273897	Callee	QLatin1String		273719	0					
ANR	273898	Identifier	QLatin1String		273719	0					
ANR	273899	ArgumentList	"""at"""		273719	1					
ANR	273900	Argument	"""at"""		273719	0					
ANR	273901	PrimaryExpression	"""at"""		273719	0					
ANR	273902	CompoundStatement		38:54:2017:2017	273719	1					
ANR	273903	ExpressionStatement	d -> m_file = regExp . cap ( 9 )	85:16:3434:3459	273719	0	True				
ANR	273904	AssignmentExpression	d -> m_file = regExp . cap ( 9 )		273719	0		=			
ANR	273905	PtrMemberAccess	d -> m_file		273719	0					
ANR	273906	Identifier	d		273719	0					
ANR	273907	Identifier	m_file		273719	1					
ANR	273908	CallExpression	regExp . cap ( 9 )		273719	1					
ANR	273909	Callee	regExp . cap		273719	0					
ANR	273910	MemberAccess	regExp . cap		273719	0					
ANR	273911	Identifier	regExp		273719	0					
ANR	273912	Identifier	cap		273719	1					
ANR	273913	ArgumentList	9		273719	1					
ANR	273914	Argument	9		273719	0					
ANR	273915	PrimaryExpression	9		273719	0					
ANR	273916	ElseStatement	else		273719	0					
ANR	273917	CompoundStatement		40:19:2116:2116	273719	0					
ANR	273918	ExpressionStatement	d -> m_library = regExp . cap ( 9 )	87:16:3531:3559	273719	0	True				
ANR	273919	AssignmentExpression	d -> m_library = regExp . cap ( 9 )		273719	0		=			
ANR	273920	PtrMemberAccess	d -> m_library		273719	0					
ANR	273921	Identifier	d		273719	0					
ANR	273922	Identifier	m_library		273719	1					
ANR	273923	CallExpression	regExp . cap ( 9 )		273719	1					
ANR	273924	Callee	regExp . cap		273719	0					
ANR	273925	MemberAccess	regExp . cap		273719	0					
ANR	273926	Identifier	regExp		273719	0					
ANR	273927	Identifier	cap		273719	1					
ANR	273928	ArgumentList	9		273719	1					
ANR	273929	Argument	9		273719	0					
ANR	273930	PrimaryExpression	9		273719	0					
ANR	273931	ExpressionStatement	qDebug ( ) << d -> m_stackFrameNumber << d -> m_functionName << d -> m_file << d -> m_library	91:8:3594:3677	273719	4	True				
ANR	273932	ShiftExpression	qDebug ( ) << d -> m_stackFrameNumber << d -> m_functionName << d -> m_file << d -> m_library		273719	0		<<			
ANR	273933	CallExpression	qDebug ( )		273719	0					
ANR	273934	Callee	qDebug		273719	0					
ANR	273935	Identifier	qDebug		273719	0					
ANR	273936	ArgumentList			273719	1					
ANR	273937	ShiftExpression	d -> m_stackFrameNumber << d -> m_functionName << d -> m_file << d -> m_library		273719	1		<<			
ANR	273938	PtrMemberAccess	d -> m_stackFrameNumber		273719	0					
ANR	273939	Identifier	d		273719	0					
ANR	273940	Identifier	m_stackFrameNumber		273719	1					
ANR	273941	ShiftExpression	d -> m_functionName << d -> m_file << d -> m_library		273719	1		<<			
ANR	273942	PtrMemberAccess	d -> m_functionName		273719	0					
ANR	273943	Identifier	d		273719	0					
ANR	273944	Identifier	m_functionName		273719	1					
ANR	273945	ShiftExpression	d -> m_file << d -> m_library		273719	1		<<			
ANR	273946	PtrMemberAccess	d -> m_file		273719	0					
ANR	273947	Identifier	d		273719	0					
ANR	273948	Identifier	m_file		273719	1					
ANR	273949	PtrMemberAccess	d -> m_library		273719	1					
ANR	273950	Identifier	d		273719	0					
ANR	273951	Identifier	m_library		273719	1					
ANR	273952	ReturnStatement	return ;	92:8:3687:3693	273719	5	True				
ANR	273953	Statement	regExp	95:4:3706:3711	273719	22	True				
ANR	273954	Statement	.	95:10:3712:3712	273719	23	True				
ANR	273955	Statement	setPattern	95:11:3713:3722	273719	24	True				
ANR	273956	Statement	(	95:21:3723:3723	273719	25	True				
ANR	273957	Statement	QStringLiteral	95:22:3724:3737	273719	26	True				
ANR	273958	Statement	(	95:36:3738:3738	273719	27	True				
ANR	273959	Statement	""".*\\\\(no debugging symbols found\\\\).*|"""	95:37:3739:3777	273719	28	True				
ANR	273960	Statement	""".*\\\\[Thread debugging using libthread_db enabled\\\\].*|"""	96:22:3801:3856	273719	29	True				
ANR	273961	Statement	""".*\\\\[New .*|"""	97:22:3880:3893	273719	30	True				
ANR	273962	Statement	"""0x[0-9a-f]+.*|"""	98:22:3917:3932	273719	31	True				
ANR	273963	Statement	"""Current language:.*"""	99:22:3956:3976	273719	32	True				
ANR	273964	Statement	)	99:43:3977:3977	273719	33	True				
ANR	273965	Statement	)	99:44:3978:3978	273719	34	True				
ANR	273966	ExpressionStatement		99:45:3979:3979	273719	35	True				
ANR	273967	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		273719	36					
ANR	273968	Condition	regExp . exactMatch ( d -> m_line )	100:8:3989:4016	273719	0	True				
ANR	273969	CallExpression	regExp . exactMatch ( d -> m_line )		273719	0					
ANR	273970	Callee	regExp . exactMatch		273719	0					
ANR	273971	MemberAccess	regExp . exactMatch		273719	0					
ANR	273972	Identifier	regExp		273719	0					
ANR	273973	Identifier	exactMatch		273719	1					
ANR	273974	ArgumentList	d -> m_line		273719	1					
ANR	273975	Argument	d -> m_line		273719	0					
ANR	273976	PtrMemberAccess	d -> m_line		273719	0					
ANR	273977	Identifier	d		273719	0					
ANR	273978	Identifier	m_line		273719	1					
ANR	273979	CompoundStatement		54:38:2655:2655	273719	1					
ANR	273980	ExpressionStatement	"qDebug ( ) << ""garbage detected:"" << d -> m_line"	101:8:4029:4073	273719	0	True				
ANR	273981	ShiftExpression	"qDebug ( ) << ""garbage detected:"" << d -> m_line"		273719	0		<<			
ANR	273982	CallExpression	qDebug ( )		273719	0					
ANR	273983	Callee	qDebug		273719	0					
ANR	273984	Identifier	qDebug		273719	0					
ANR	273985	ArgumentList			273719	1					
ANR	273986	ShiftExpression	"""garbage detected:"" << d -> m_line"		273719	1		<<			
ANR	273987	PrimaryExpression	"""garbage detected:"""		273719	0					
ANR	273988	PtrMemberAccess	d -> m_line		273719	1					
ANR	273989	Identifier	d		273719	0					
ANR	273990	Identifier	m_line		273719	1					
ANR	273991	ExpressionStatement	d -> m_type = Crap	102:8:4083:4099	273719	1	True				
ANR	273992	AssignmentExpression	d -> m_type = Crap		273719	0		=			
ANR	273993	PtrMemberAccess	d -> m_type		273719	0					
ANR	273994	Identifier	d		273719	0					
ANR	273995	Identifier	m_type		273719	1					
ANR	273996	Identifier	Crap		273719	1					
ANR	273997	ReturnStatement	return ;	103:8:4109:4115	273719	2	True				
ANR	273998	ExpressionStatement	"regExp . setPattern ( QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" ) )"	106:4:4128:4220	273719	37	True				
ANR	273999	CallExpression	"regExp . setPattern ( QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" ) )"		273719	0					
ANR	274000	Callee	regExp . setPattern		273719	0					
ANR	274001	MemberAccess	regExp . setPattern		273719	0					
ANR	274002	Identifier	regExp		273719	0					
ANR	274003	Identifier	setPattern		273719	1					
ANR	274004	ArgumentList	"QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" )"		273719	1					
ANR	274005	Argument	"QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" )"		273719	0					
ANR	274006	CallExpression	"QStringLiteral ( ""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"" )"		273719	0					
ANR	274007	Callee	QStringLiteral		273719	0					
ANR	274008	Identifier	QStringLiteral		273719	0					
ANR	274009	ArgumentList	"""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"""		273719	1					
ANR	274010	Argument	"""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"""		273719	0					
ANR	274011	PrimaryExpression	"""Thread [0-9]+\\\\s+\\\\(Thread [0-9a-fx]+\\\\s+\\\\(.*\\\\)\\\\):\\n"""		273719	0					
ANR	274012	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		273719	38					
ANR	274013	Condition	regExp . exactMatch ( d -> m_line )	107:8:4230:4257	273719	0	True				
ANR	274014	CallExpression	regExp . exactMatch ( d -> m_line )		273719	0					
ANR	274015	Callee	regExp . exactMatch		273719	0					
ANR	274016	MemberAccess	regExp . exactMatch		273719	0					
ANR	274017	Identifier	regExp		273719	0					
ANR	274018	Identifier	exactMatch		273719	1					
ANR	274019	ArgumentList	d -> m_line		273719	1					
ANR	274020	Argument	d -> m_line		273719	0					
ANR	274021	PtrMemberAccess	d -> m_line		273719	0					
ANR	274022	Identifier	d		273719	0					
ANR	274023	Identifier	m_line		273719	1					
ANR	274024	CompoundStatement		61:38:2896:2896	273719	1					
ANR	274025	ExpressionStatement	"qDebug ( ) << ""thread start detected:"" << d -> m_line"	108:8:4270:4319	273719	0	True				
ANR	274026	ShiftExpression	"qDebug ( ) << ""thread start detected:"" << d -> m_line"		273719	0		<<			
ANR	274027	CallExpression	qDebug ( )		273719	0					
ANR	274028	Callee	qDebug		273719	0					
ANR	274029	Identifier	qDebug		273719	0					
ANR	274030	ArgumentList			273719	1					
ANR	274031	ShiftExpression	"""thread start detected:"" << d -> m_line"		273719	1		<<			
ANR	274032	PrimaryExpression	"""thread start detected:"""		273719	0					
ANR	274033	PtrMemberAccess	d -> m_line		273719	1					
ANR	274034	Identifier	d		273719	0					
ANR	274035	Identifier	m_line		273719	1					
ANR	274036	ExpressionStatement	d -> m_type = ThreadStart	109:8:4329:4352	273719	1	True				
ANR	274037	AssignmentExpression	d -> m_type = ThreadStart		273719	0		=			
ANR	274038	PtrMemberAccess	d -> m_type		273719	0					
ANR	274039	Identifier	d		273719	0					
ANR	274040	Identifier	m_type		273719	1					
ANR	274041	Identifier	ThreadStart		273719	1					
ANR	274042	ReturnStatement	return ;	110:8:4362:4368	273719	2	True				
ANR	274043	ExpressionStatement	"regExp . setPattern ( QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" ) )"	113:4:4381:4459	273719	39	True				
ANR	274044	CallExpression	"regExp . setPattern ( QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" ) )"		273719	0					
ANR	274045	Callee	regExp . setPattern		273719	0					
ANR	274046	MemberAccess	regExp . setPattern		273719	0					
ANR	274047	Identifier	regExp		273719	0					
ANR	274048	Identifier	setPattern		273719	1					
ANR	274049	ArgumentList	"QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" )"		273719	1					
ANR	274050	Argument	"QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" )"		273719	0					
ANR	274051	CallExpression	"QStringLiteral ( ""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"" )"		273719	0					
ANR	274052	Callee	QStringLiteral		273719	0					
ANR	274053	Identifier	QStringLiteral		273719	0					
ANR	274054	ArgumentList	"""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"""		273719	1					
ANR	274055	Argument	"""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"""		273719	0					
ANR	274056	PrimaryExpression	"""\\\\[Current thread is [0-9]+ \\\\(.*\\\\)\\\\]\\n"""		273719	0					
ANR	274057	IfStatement	if ( regExp . exactMatch ( d -> m_line ) )		273719	40					
ANR	274058	Condition	regExp . exactMatch ( d -> m_line )	114:8:4469:4496	273719	0	True				
ANR	274059	CallExpression	regExp . exactMatch ( d -> m_line )		273719	0					
ANR	274060	Callee	regExp . exactMatch		273719	0					
ANR	274061	MemberAccess	regExp . exactMatch		273719	0					
ANR	274062	Identifier	regExp		273719	0					
ANR	274063	Identifier	exactMatch		273719	1					
ANR	274064	ArgumentList	d -> m_line		273719	1					
ANR	274065	Argument	d -> m_line		273719	0					
ANR	274066	PtrMemberAccess	d -> m_line		273719	0					
ANR	274067	Identifier	d		273719	0					
ANR	274068	Identifier	m_line		273719	1					
ANR	274069	CompoundStatement		68:38:3135:3135	273719	1					
ANR	274070	ExpressionStatement	"qDebug ( ) << ""thread indicator detected:"" << d -> m_line"	115:8:4509:4562	273719	0	True				
ANR	274071	ShiftExpression	"qDebug ( ) << ""thread indicator detected:"" << d -> m_line"		273719	0		<<			
ANR	274072	CallExpression	qDebug ( )		273719	0					
ANR	274073	Callee	qDebug		273719	0					
ANR	274074	Identifier	qDebug		273719	0					
ANR	274075	ArgumentList			273719	1					
ANR	274076	ShiftExpression	"""thread indicator detected:"" << d -> m_line"		273719	1		<<			
ANR	274077	PrimaryExpression	"""thread indicator detected:"""		273719	0					
ANR	274078	PtrMemberAccess	d -> m_line		273719	1					
ANR	274079	Identifier	d		273719	0					
ANR	274080	Identifier	m_line		273719	1					
ANR	274081	ExpressionStatement	d -> m_type = ThreadIndicator	116:8:4572:4599	273719	1	True				
ANR	274082	AssignmentExpression	d -> m_type = ThreadIndicator		273719	0		=			
ANR	274083	PtrMemberAccess	d -> m_type		273719	0					
ANR	274084	Identifier	d		273719	0					
ANR	274085	Identifier	m_type		273719	1					
ANR	274086	Identifier	ThreadIndicator		273719	1					
ANR	274087	ReturnStatement	return ;	117:8:4609:4615	273719	2	True				
ANR	274088	ExpressionStatement	"qDebug ( ) << ""line"" << d -> m_line << ""did not match"""	120:4:4628:4678	273719	41	True				
ANR	274089	ShiftExpression	"qDebug ( ) << ""line"" << d -> m_line << ""did not match"""		273719	0		<<			
ANR	274090	CallExpression	qDebug ( )		273719	0					
ANR	274091	Callee	qDebug		273719	0					
ANR	274092	Identifier	qDebug		273719	0					
ANR	274093	ArgumentList			273719	1					
ANR	274094	ShiftExpression	"""line"" << d -> m_line << ""did not match"""		273719	1		<<			
ANR	274095	PrimaryExpression	"""line"""		273719	0					
ANR	274096	ShiftExpression	"d -> m_line << ""did not match"""		273719	1		<<			
ANR	274097	PtrMemberAccess	d -> m_line		273719	0					
ANR	274098	Identifier	d		273719	0					
ANR	274099	Identifier	m_line		273719	1					
ANR	274100	PrimaryExpression	"""did not match"""		273719	1					
ANR	274101	ReturnType	void		273719	1					
ANR	274102	Identifier	BacktraceLineGdb :: parse		273719	2					
ANR	274103	ParameterList			273719	3					
ANR	274104	CFGEntryNode	ENTRY		273719		True				
ANR	274105	CFGExitNode	EXIT		273719		True				
ANR	274106	Symbol	regExp . cap ( 7 ) . isEmpty		273719						
ANR	274107	Symbol	ThreadStart		273719						
ANR	274108	Symbol	d		273719						
ANR	274109	Symbol	ThreadIndicator		273719						
ANR	274110	Symbol	regExp . cap ( 3 ) . trimmed		273719						
ANR	274111	Symbol	regExp . cap		273719						
ANR	274112	Symbol	d -> m_file		273719						
ANR	274113	Symbol	EmptyLine		273719						
ANR	274114	Symbol	d -> m_line . contains		273719						
ANR	274115	Symbol	SignalHandlerStart		273719						
ANR	274116	Symbol	regExp		273719						
ANR	274117	Symbol	* d		273719						
ANR	274118	Symbol	regExp . exactMatch		273719						
ANR	274119	Symbol	QLatin1String		273719						
ANR	274120	Symbol	d -> m_line		273719						
ANR	274121	Symbol	d -> m_type		273719						
ANR	274122	Symbol	regExp . cap ( 1 ) . toInt		273719						
ANR	274123	Symbol	d -> m_functionName		273719						
ANR	274124	Symbol	StackFrame		273719						
ANR	274125	Symbol	d -> m_stackFrameNumber		273719						
ANR	274126	Symbol	QStringLiteral		273719						
ANR	274127	Symbol	KCrash		273719						
ANR	274128	Symbol	d -> m_library		273719						
ANR	274129	Symbol	Crap		273719						
ANR	274130	Function	BacktraceLineGdb :: rate	123:0:4683:5223							
ANR	274131	FunctionDef	BacktraceLineGdb :: rate ()		274130	0					
ANR	274132	CompoundStatement		124:0:4713:5223	274130	0					
ANR	274133	IdentifierDeclStatement	LineRating r ;	125:4:4719:4731	274130	0	True				
ANR	274134	IdentifierDecl	r		274130	0					
ANR	274135	IdentifierDeclType	LineRating		274130	0					
ANR	274136	Identifier	r		274130	1					
ANR	274137	IfStatement	if ( ! fileName ( ) . isEmpty ( ) )		274130	1					
ANR	274138	Condition	! fileName ( ) . isEmpty ( )	128:8:4801:4821	274130	0	True				
ANR	274139	UnaryOperationExpression	! fileName ( ) . isEmpty ( )		274130	0					
ANR	274140	UnaryOperator	!		274130	0					
ANR	274141	CallExpression	fileName ( ) . isEmpty ( )		274130	1					
ANR	274142	Callee	fileName ( ) . isEmpty		274130	0					
ANR	274143	MemberAccess	fileName ( ) . isEmpty		274130	0					
ANR	274144	CallExpression	fileName ( )		274130	0					
ANR	274145	Callee	fileName		274130	0					
ANR	274146	Identifier	fileName		274130	0					
ANR	274147	ArgumentList			274130	1					
ANR	274148	Identifier	isEmpty		274130	1					
ANR	274149	ArgumentList			274130	1					
ANR	274150	CompoundStatement		5:31:110:110	274130	1					
ANR	274151	ExpressionStatement	r = Good	129:8:4834:4842	274130	0	True				
ANR	274152	AssignmentExpression	r = Good		274130	0		=			
ANR	274153	Identifier	r		274130	0					
ANR	274154	Identifier	Good		274130	1					
ANR	274155	ElseStatement	else		274130	0					
ANR	274156	IfStatement	if ( ! libraryName ( ) . isEmpty ( ) )		274130	0					
ANR	274157	Condition	! libraryName ( ) . isEmpty ( )	130:15:4859:4882	274130	0	True				
ANR	274158	UnaryOperationExpression	! libraryName ( ) . isEmpty ( )		274130	0					
ANR	274159	UnaryOperator	!		274130	0					
ANR	274160	CallExpression	libraryName ( ) . isEmpty ( )		274130	1					
ANR	274161	Callee	libraryName ( ) . isEmpty		274130	0					
ANR	274162	MemberAccess	libraryName ( ) . isEmpty		274130	0					
ANR	274163	CallExpression	libraryName ( )		274130	0					
ANR	274164	Callee	libraryName		274130	0					
ANR	274165	Identifier	libraryName		274130	0					
ANR	274166	ArgumentList			274130	1					
ANR	274167	Identifier	isEmpty		274130	1					
ANR	274168	ArgumentList			274130	1					
ANR	274169	CompoundStatement		7:41:171:171	274130	1					
ANR	274170	IfStatement	"if ( functionName ( ) == QLatin1String ( ""??"" ) )"		274130	0					
ANR	274171	Condition	"functionName ( ) == QLatin1String ( ""??"" )"	131:12:4899:4935	274130	0	True				
ANR	274172	EqualityExpression	"functionName ( ) == QLatin1String ( ""??"" )"		274130	0		==			
ANR	274173	CallExpression	functionName ( )		274130	0					
ANR	274174	Callee	functionName		274130	0					
ANR	274175	Identifier	functionName		274130	0					
ANR	274176	ArgumentList			274130	1					
ANR	274177	CallExpression	"QLatin1String ( ""??"" )"		274130	1					
ANR	274178	Callee	QLatin1String		274130	0					
ANR	274179	Identifier	QLatin1String		274130	0					
ANR	274180	ArgumentList	"""??"""		274130	1					
ANR	274181	Argument	"""??"""		274130	0					
ANR	274182	PrimaryExpression	"""??"""		274130	0					
ANR	274183	CompoundStatement		8:51:224:224	274130	1					
ANR	274184	ExpressionStatement	r = MissingFunction	132:12:4952:4971	274130	0	True				
ANR	274185	AssignmentExpression	r = MissingFunction		274130	0		=			
ANR	274186	Identifier	r		274130	0					
ANR	274187	Identifier	MissingFunction		274130	1					
ANR	274188	ElseStatement	else		274130	0					
ANR	274189	CompoundStatement		10:15:274:274	274130	0					
ANR	274190	ExpressionStatement	r = MissingSourceFile	134:12:5002:5023	274130	0	True				
ANR	274191	AssignmentExpression	r = MissingSourceFile		274130	0		=			
ANR	274192	Identifier	r		274130	0					
ANR	274193	Identifier	MissingSourceFile		274130	1					
ANR	274194	ElseStatement	else		274130	0					
ANR	274195	CompoundStatement		13:11:332:332	274130	0					
ANR	274196	IfStatement	"if ( functionName ( ) == QLatin1String ( ""??"" ) )"		274130	0					
ANR	274197	Condition	"functionName ( ) == QLatin1String ( ""??"" )"	137:12:5060:5096	274130	0	True				
ANR	274198	EqualityExpression	"functionName ( ) == QLatin1String ( ""??"" )"		274130	0		==			
ANR	274199	CallExpression	functionName ( )		274130	0					
ANR	274200	Callee	functionName		274130	0					
ANR	274201	Identifier	functionName		274130	0					
ANR	274202	ArgumentList			274130	1					
ANR	274203	CallExpression	"QLatin1String ( ""??"" )"		274130	1					
ANR	274204	Callee	QLatin1String		274130	0					
ANR	274205	Identifier	QLatin1String		274130	0					
ANR	274206	ArgumentList	"""??"""		274130	1					
ANR	274207	Argument	"""??"""		274130	0					
ANR	274208	PrimaryExpression	"""??"""		274130	0					
ANR	274209	CompoundStatement		14:51:385:385	274130	1					
ANR	274210	ExpressionStatement	r = MissingEverything	138:12:5113:5134	274130	0	True				
ANR	274211	AssignmentExpression	r = MissingEverything		274130	0		=			
ANR	274212	Identifier	r		274130	0					
ANR	274213	Identifier	MissingEverything		274130	1					
ANR	274214	ElseStatement	else		274130	0					
ANR	274215	CompoundStatement		16:15:437:437	274130	0					
ANR	274216	ExpressionStatement	r = MissingLibrary	140:12:5165:5183	274130	0	True				
ANR	274217	AssignmentExpression	r = MissingLibrary		274130	0		=			
ANR	274218	Identifier	r		274130	0					
ANR	274219	Identifier	MissingLibrary		274130	1					
ANR	274220	ExpressionStatement	d -> m_rating = r	144:4:5206:5221	274130	2	True				
ANR	274221	AssignmentExpression	d -> m_rating = r		274130	0		=			
ANR	274222	PtrMemberAccess	d -> m_rating		274130	0					
ANR	274223	Identifier	d		274130	0					
ANR	274224	Identifier	m_rating		274130	1					
ANR	274225	Identifier	r		274130	1					
ANR	274226	ReturnType	void		274130	1					
ANR	274227	Identifier	BacktraceLineGdb :: rate		274130	2					
ANR	274228	ParameterList			274130	3					
ANR	274229	CFGEntryNode	ENTRY		274130		True				
ANR	274230	CFGExitNode	EXIT		274130		True				
ANR	274231	Symbol	libraryName		274130						
ANR	274232	Symbol	fileName		274130						
ANR	274233	Symbol	libraryName ( ) . isEmpty		274130						
ANR	274234	Symbol	d		274130						
ANR	274235	Symbol	functionName		274130						
ANR	274236	Symbol	MissingLibrary		274130						
ANR	274237	Symbol	* d		274130						
ANR	274238	Symbol	MissingEverything		274130						
ANR	274239	Symbol	QLatin1String		274130						
ANR	274240	Symbol	MissingFunction		274130						
ANR	274241	Symbol	d -> m_rating		274130						
ANR	274242	Symbol	r		274130						
ANR	274243	Symbol	fileName ( ) . isEmpty		274130						
ANR	274244	Symbol	Good		274130						
ANR	274245	Symbol	MissingSourceFile		274130						
ANR	274246	ClassDef	BacktraceParserGdbPrivate	151:0:5278:5696							
ANR	274247	Function	BacktraceParserGdbPrivate	154:4:5356:5544							
ANR	274248	FunctionDef	BacktraceParserGdbPrivate ()		274247	0					
ANR	274249	CompoundStatement		157:68:5543:5544	274247	0					
ANR	274250	Identifier	BacktraceParserGdbPrivate		274247	1					
ANR	274251	ParameterList			274247	2					
ANR	274252	CFGEntryNode	ENTRY		274247		True				
ANR	274253	CFGExitNode	EXIT		274247		True				
ANR	274254	DeclStmt									
ANR	274255	Decl							QString	QString	m_lineInputBuffer
ANR	274256	DeclStmt									
ANR	274257	Decl							int	int	m_possibleKCrashStart
ANR	274258	DeclStmt									
ANR	274259	Decl							int	int	m_threadsCount
ANR	274260	DeclStmt									
ANR	274261	Decl							bool	bool	m_isBelowSignalHandler
ANR	274262	DeclStmt									
ANR	274263	Decl							bool	bool	m_frameZeroAppeared
ANR	274264	Function	BacktraceParserGdb :: BacktraceParserGdb	166:0:5700:5792							
ANR	274265	FunctionDef	BacktraceParserGdb :: BacktraceParserGdb (QObject * parent)		274264	0					
ANR	274266	CompoundStatement		168:0:5790:5792	274264	0					
ANR	274267	Identifier	BacktraceParserGdb :: BacktraceParserGdb		274264	1					
ANR	274268	ParameterList	QObject * parent		274264	2					
ANR	274269	Parameter	QObject * parent	166:39:5739:5753	274264	0	True				
ANR	274270	ParameterType	QObject *		274264	0					
ANR	274271	Identifier	parent		274264	1					
ANR	274272	CFGEntryNode	ENTRY		274264		True				
ANR	274273	CFGExitNode	EXIT		274264		True				
ANR	274274	Symbol	parent		274264						
ANR	274275	Function	BacktraceParserGdb :: constructPrivate	171:0:5795:5908							
ANR	274276	FunctionDef	BacktraceParserGdb :: constructPrivate ()		274275	0					
ANR	274277	CompoundStatement		172:0:5864:5908	274275	0					
ANR	274278	Statement	return	173:4:5870:5875	274275	0	True				
ANR	274279	Statement	new	173:11:5877:5879	274275	1	True				
ANR	274280	ExpressionStatement	BacktraceParserGdbPrivate	173:15:5881:5906	274275	2	True				
ANR	274281	Identifier	BacktraceParserGdbPrivate		274275	0					
ANR	274282	ReturnType	BacktraceParserPrivate *		274275	1					
ANR	274283	Identifier	BacktraceParserGdb :: constructPrivate		274275	2					
ANR	274284	ParameterList			274275	3					
ANR	274285	CFGEntryNode	ENTRY		274275		True				
ANR	274286	CFGExitNode	EXIT		274275		True				
ANR	274287	Function	BacktraceParserGdb :: newLine	176:0:5911:6643							
ANR	274288	FunctionDef	BacktraceParserGdb :: newLine (const QString & lineStr)		274287	0					
ANR	274289	CompoundStatement		177:0:5969:6643	274287	0					
ANR	274290	ExpressionStatement	Q_D ( BacktraceParserGdb )	178:4:5975:5998	274287	0	True				
ANR	274291	CallExpression	Q_D ( BacktraceParserGdb )		274287	0					
ANR	274292	Callee	Q_D		274287	0					
ANR	274293	Identifier	Q_D		274287	0					
ANR	274294	ArgumentList	BacktraceParserGdb		274287	1					
ANR	274295	Argument	BacktraceParserGdb		274287	0					
ANR	274296	Identifier	BacktraceParserGdb		274287	0					
ANR	274297	IfStatement	if ( d -> m_lineInputBuffer . isEmpty ( ) )		274287	1					
ANR	274298	Condition	d -> m_lineInputBuffer . isEmpty ( )	183:8:6249:6278	274287	0	True				
ANR	274299	CallExpression	d -> m_lineInputBuffer . isEmpty ( )		274287	0					
ANR	274300	Callee	d -> m_lineInputBuffer . isEmpty		274287	0					
ANR	274301	MemberAccess	d -> m_lineInputBuffer . isEmpty		274287	0					
ANR	274302	PtrMemberAccess	d -> m_lineInputBuffer		274287	0					
ANR	274303	Identifier	d		274287	0					
ANR	274304	Identifier	m_lineInputBuffer		274287	1					
ANR	274305	Identifier	isEmpty		274287	1					
ANR	274306	ArgumentList			274287	1					
ANR	274307	CompoundStatement		7:40:311:311	274287	1					
ANR	274308	ExpressionStatement	d -> m_lineInputBuffer = lineStr	184:8:6291:6321	274287	0	True				
ANR	274309	AssignmentExpression	d -> m_lineInputBuffer = lineStr		274287	0		=			
ANR	274310	PtrMemberAccess	d -> m_lineInputBuffer		274287	0					
ANR	274311	Identifier	d		274287	0					
ANR	274312	Identifier	m_lineInputBuffer		274287	1					
ANR	274313	Identifier	lineStr		274287	1					
ANR	274314	ElseStatement	else		274287	0					
ANR	274315	IfStatement	if ( lineStr . startsWith ( QLatin1Char ( ' ' ) ) || lineStr . startsWith ( QLatin1Char ( '\\t' ) ) )		274287	0					
ANR	274316	Condition	lineStr . startsWith ( QLatin1Char ( ' ' ) ) || lineStr . startsWith ( QLatin1Char ( '\\t' ) )	185:15:6338:6414	274287	0	True				
ANR	274317	OrExpression	lineStr . startsWith ( QLatin1Char ( ' ' ) ) || lineStr . startsWith ( QLatin1Char ( '\\t' ) )		274287	0		||			
ANR	274318	CallExpression	lineStr . startsWith ( QLatin1Char ( ' ' ) )		274287	0					
ANR	274319	Callee	lineStr . startsWith		274287	0					
ANR	274320	MemberAccess	lineStr . startsWith		274287	0					
ANR	274321	Identifier	lineStr		274287	0					
ANR	274322	Identifier	startsWith		274287	1					
ANR	274323	ArgumentList	QLatin1Char ( ' ' )		274287	1					
ANR	274324	Argument	QLatin1Char ( ' ' )		274287	0					
ANR	274325	CallExpression	QLatin1Char ( ' ' )		274287	0					
ANR	274326	Callee	QLatin1Char		274287	0					
ANR	274327	Identifier	QLatin1Char		274287	0					
ANR	274328	ArgumentList	' '		274287	1					
ANR	274329	Argument	' '		274287	0					
ANR	274330	PrimaryExpression	' '		274287	0					
ANR	274331	CallExpression	lineStr . startsWith ( QLatin1Char ( '\\t' ) )		274287	1					
ANR	274332	Callee	lineStr . startsWith		274287	0					
ANR	274333	MemberAccess	lineStr . startsWith		274287	0					
ANR	274334	Identifier	lineStr		274287	0					
ANR	274335	Identifier	startsWith		274287	1					
ANR	274336	ArgumentList	QLatin1Char ( '\\t' )		274287	1					
ANR	274337	Argument	QLatin1Char ( '\\t' )		274287	0					
ANR	274338	CallExpression	QLatin1Char ( '\\t' )		274287	0					
ANR	274339	Callee	QLatin1Char		274287	0					
ANR	274340	Identifier	QLatin1Char		274287	0					
ANR	274341	ArgumentList	'\\t'		274287	1					
ANR	274342	Argument	'\\t'		274287	0					
ANR	274343	PrimaryExpression	'\\t'		274287	0					
ANR	274344	CompoundStatement		9:94:447:447	274287	1					
ANR	274345	ExpressionStatement	d -> m_lineInputBuffer . append ( lineStr )	187:8:6505:6541	274287	0	True				
ANR	274346	CallExpression	d -> m_lineInputBuffer . append ( lineStr )		274287	0					
ANR	274347	Callee	d -> m_lineInputBuffer . append		274287	0					
ANR	274348	MemberAccess	d -> m_lineInputBuffer . append		274287	0					
ANR	274349	PtrMemberAccess	d -> m_lineInputBuffer		274287	0					
ANR	274350	Identifier	d		274287	0					
ANR	274351	Identifier	m_lineInputBuffer		274287	1					
ANR	274352	Identifier	append		274287	1					
ANR	274353	ArgumentList	lineStr		274287	1					
ANR	274354	Argument	lineStr		274287	0					
ANR	274355	Identifier	lineStr		274287	0					
ANR	274356	ElseStatement	else		274287	0					
ANR	274357	CompoundStatement		12:11:584:584	274287	0					
ANR	274358	ExpressionStatement	parseLine ( d -> m_lineInputBuffer )	189:8:6564:6595	274287	0	True				
ANR	274359	CallExpression	parseLine ( d -> m_lineInputBuffer )		274287	0					
ANR	274360	Callee	parseLine		274287	0					
ANR	274361	Identifier	parseLine		274287	0					
ANR	274362	ArgumentList	d -> m_lineInputBuffer		274287	1					
ANR	274363	Argument	d -> m_lineInputBuffer		274287	0					
ANR	274364	PtrMemberAccess	d -> m_lineInputBuffer		274287	0					
ANR	274365	Identifier	d		274287	0					
ANR	274366	Identifier	m_lineInputBuffer		274287	1					
ANR	274367	ExpressionStatement	d -> m_lineInputBuffer = lineStr	190:8:6605:6635	274287	1	True				
ANR	274368	AssignmentExpression	d -> m_lineInputBuffer = lineStr		274287	0		=			
ANR	274369	PtrMemberAccess	d -> m_lineInputBuffer		274287	0					
ANR	274370	Identifier	d		274287	0					
ANR	274371	Identifier	m_lineInputBuffer		274287	1					
ANR	274372	Identifier	lineStr		274287	1					
ANR	274373	ReturnType	void		274287	1					
ANR	274374	Identifier	BacktraceParserGdb :: newLine		274287	2					
ANR	274375	ParameterList	const QString & lineStr		274287	3					
ANR	274376	Parameter	const QString & lineStr	176:33:5944:5966	274287	0	True				
ANR	274377	ParameterType	const QString &		274287	0					
ANR	274378	Identifier	lineStr		274287	1					
ANR	274379	CFGEntryNode	ENTRY		274287		True				
ANR	274380	CFGExitNode	EXIT		274287		True				
ANR	274381	Symbol	d -> m_lineInputBuffer		274287						
ANR	274382	Symbol	QLatin1Char		274287						
ANR	274383	Symbol	d		274287						
ANR	274384	Symbol	lineStr		274287						
ANR	274385	Symbol	BacktraceParserGdb		274287						
ANR	274386	Symbol	* d		274287						
ANR	274387	Symbol	lineStr . startsWith		274287						
ANR	274388	Symbol	d -> m_lineInputBuffer . isEmpty		274287						
ANR	274389	Function	BacktraceParserGdb :: parseLine	194:0:6646:8871							
ANR	274390	FunctionDef	BacktraceParserGdb :: parseLine (const QString & lineStr)		274389	0					
ANR	274391	CompoundStatement		195:0:6706:8871	274389	0					
ANR	274392	ExpressionStatement	Q_D ( BacktraceParserGdb )	196:4:6712:6735	274389	0	True				
ANR	274393	CallExpression	Q_D ( BacktraceParserGdb )		274389	0					
ANR	274394	Callee	Q_D		274389	0					
ANR	274395	Identifier	Q_D		274389	0					
ANR	274396	ArgumentList	BacktraceParserGdb		274389	1					
ANR	274397	Argument	BacktraceParserGdb		274389	0					
ANR	274398	Identifier	BacktraceParserGdb		274389	0					
ANR	274399	IdentifierDeclStatement	BacktraceLineGdb line ( lineStr ) ;	198:4:6742:6772	274389	1	True				
ANR	274400	IdentifierDecl	line ( lineStr )		274389	0					
ANR	274401	IdentifierDeclType	BacktraceLineGdb		274389	0					
ANR	274402	Identifier	line		274389	1					
ANR	274403	Identifier	lineStr		274389	2					
ANR	274404	SwitchStatement	switch ( line . type ( ) )		274389	2					
ANR	274405	Condition	line . type ( )	199:12:6786:6796	274389	0	True				
ANR	274406	CallExpression	line . type ( )		274389	0					
ANR	274407	Callee	line . type		274389	0					
ANR	274408	MemberAccess	line . type		274389	0					
ANR	274409	Identifier	line		274389	0					
ANR	274410	Identifier	type		274389	1					
ANR	274411	ArgumentList			274389	1					
ANR	274412	CompoundStatement		5:25:92:92	274389	1					
ANR	274413	Label	case BacktraceLine :: Crap :	200:4:6805:6829	274389	0	True				
ANR	274414	Identifier	BacktraceLine :: Crap		274389	0					
ANR	274415	BreakStatement	break ;	201:8:6839:6844	274389	1	True				
ANR	274416	Label	case BacktraceLine :: ThreadStart :	202:4:6891:6922	274389	2	True				
ANR	274417	Identifier	BacktraceLine :: ThreadStart		274389	0					
ANR	274418	ExpressionStatement	d -> m_linesList . append ( line )	203:8:6932:6959	274389	3	True				
ANR	274419	CallExpression	d -> m_linesList . append ( line )		274389	0					
ANR	274420	Callee	d -> m_linesList . append		274389	0					
ANR	274421	MemberAccess	d -> m_linesList . append		274389	0					
ANR	274422	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274423	Identifier	d		274389	0					
ANR	274424	Identifier	m_linesList		274389	1					
ANR	274425	Identifier	append		274389	1					
ANR	274426	ArgumentList	line		274389	1					
ANR	274427	Argument	line		274389	0					
ANR	274428	Identifier	line		274389	0					
ANR	274429	ExpressionStatement	d -> m_possibleKCrashStart = d -> m_linesList . size ( )	204:8:6969:7017	274389	4	True				
ANR	274430	AssignmentExpression	d -> m_possibleKCrashStart = d -> m_linesList . size ( )		274389	0		=			
ANR	274431	PtrMemberAccess	d -> m_possibleKCrashStart		274389	0					
ANR	274432	Identifier	d		274389	0					
ANR	274433	Identifier	m_possibleKCrashStart		274389	1					
ANR	274434	CallExpression	d -> m_linesList . size ( )		274389	1					
ANR	274435	Callee	d -> m_linesList . size		274389	0					
ANR	274436	MemberAccess	d -> m_linesList . size		274389	0					
ANR	274437	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274438	Identifier	d		274389	0					
ANR	274439	Identifier	m_linesList		274389	1					
ANR	274440	Identifier	size		274389	1					
ANR	274441	ArgumentList			274389	1					
ANR	274442	ExpressionStatement	d -> m_threadsCount ++	205:8:7027:7046	274389	5	True				
ANR	274443	PostIncDecOperationExpression	d -> m_threadsCount ++		274389	0					
ANR	274444	PtrMemberAccess	d -> m_threadsCount		274389	0					
ANR	274445	Identifier	d		274389	0					
ANR	274446	Identifier	m_threadsCount		274389	1					
ANR	274447	IncDec	++		274389	1					
ANR	274448	ExpressionStatement	d -> m_isBelowSignalHandler = false	207:8:7122:7155	274389	6	True				
ANR	274449	AssignmentExpression	d -> m_isBelowSignalHandler = false		274389	0		=			
ANR	274450	PtrMemberAccess	d -> m_isBelowSignalHandler		274389	0					
ANR	274451	Identifier	d		274389	0					
ANR	274452	Identifier	m_isBelowSignalHandler		274389	1					
ANR	274453	Identifier	false		274389	1					
ANR	274454	ExpressionStatement	d -> m_frameZeroAppeared = false	208:8:7165:7195	274389	7	True				
ANR	274455	AssignmentExpression	d -> m_frameZeroAppeared = false		274389	0		=			
ANR	274456	PtrMemberAccess	d -> m_frameZeroAppeared		274389	0					
ANR	274457	Identifier	d		274389	0					
ANR	274458	Identifier	m_frameZeroAppeared		274389	1					
ANR	274459	Identifier	false		274389	1					
ANR	274460	BreakStatement	break ;	209:8:7243:7248	274389	8	True				
ANR	274461	Label	case BacktraceLine :: SignalHandlerStart :	210:4:7254:7292	274389	9	True				
ANR	274462	Identifier	BacktraceLine :: SignalHandlerStart		274389	0					
ANR	274463	IfStatement	if ( ! d -> m_isBelowSignalHandler )		274389	10					
ANR	274464	Condition	! d -> m_isBelowSignalHandler	211:12:7306:7331	274389	0	True				
ANR	274465	UnaryOperationExpression	! d -> m_isBelowSignalHandler		274389	0					
ANR	274466	UnaryOperator	!		274389	0					
ANR	274467	PtrMemberAccess	d -> m_isBelowSignalHandler		274389	1					
ANR	274468	Identifier	d		274389	0					
ANR	274469	Identifier	m_isBelowSignalHandler		274389	1					
ANR	274470	CompoundStatement		17:40:627:627	274389	1					
ANR	274471	ExpressionStatement	"d -> m_linesList . erase ( d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart , d -> m_linesList . end ( ) )"	213:12:7417:7510	274389	0	True				
ANR	274472	CallExpression	"d -> m_linesList . erase ( d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart , d -> m_linesList . end ( ) )"		274389	0					
ANR	274473	Callee	d -> m_linesList . erase		274389	0					
ANR	274474	MemberAccess	d -> m_linesList . erase		274389	0					
ANR	274475	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274476	Identifier	d		274389	0					
ANR	274477	Identifier	m_linesList		274389	1					
ANR	274478	Identifier	erase		274389	1					
ANR	274479	ArgumentList	d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart		274389	1					
ANR	274480	Argument	d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart		274389	0					
ANR	274481	AdditiveExpression	d -> m_linesList . begin ( ) + d -> m_possibleKCrashStart		274389	0		+			
ANR	274482	CallExpression	d -> m_linesList . begin ( )		274389	0					
ANR	274483	Callee	d -> m_linesList . begin		274389	0					
ANR	274484	MemberAccess	d -> m_linesList . begin		274389	0					
ANR	274485	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274486	Identifier	d		274389	0					
ANR	274487	Identifier	m_linesList		274389	1					
ANR	274488	Identifier	begin		274389	1					
ANR	274489	ArgumentList			274389	1					
ANR	274490	PtrMemberAccess	d -> m_possibleKCrashStart		274389	1					
ANR	274491	Identifier	d		274389	0					
ANR	274492	Identifier	m_possibleKCrashStart		274389	1					
ANR	274493	Argument	d -> m_linesList . end ( )		274389	1					
ANR	274494	CallExpression	d -> m_linesList . end ( )		274389	0					
ANR	274495	Callee	d -> m_linesList . end		274389	0					
ANR	274496	MemberAccess	d -> m_linesList . end		274389	0					
ANR	274497	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274498	Identifier	d		274389	0					
ANR	274499	Identifier	m_linesList		274389	1					
ANR	274500	Identifier	end		274389	1					
ANR	274501	ArgumentList			274389	1					
ANR	274502	ExpressionStatement	"d -> m_linesList . insert ( d -> m_possibleKCrashStart , BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) ) )"	214:12:7524:7627	274389	1	True				
ANR	274503	CallExpression	"d -> m_linesList . insert ( d -> m_possibleKCrashStart , BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) ) )"		274389	0					
ANR	274504	Callee	d -> m_linesList . insert		274389	0					
ANR	274505	MemberAccess	d -> m_linesList . insert		274389	0					
ANR	274506	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274507	Identifier	d		274389	0					
ANR	274508	Identifier	m_linesList		274389	1					
ANR	274509	Identifier	insert		274389	1					
ANR	274510	ArgumentList	d -> m_possibleKCrashStart		274389	1					
ANR	274511	Argument	d -> m_possibleKCrashStart		274389	0					
ANR	274512	PtrMemberAccess	d -> m_possibleKCrashStart		274389	0					
ANR	274513	Identifier	d		274389	0					
ANR	274514	Identifier	m_possibleKCrashStart		274389	1					
ANR	274515	Argument	"BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) )"		274389	1					
ANR	274516	CallExpression	"BacktraceLineGdb ( QStringLiteral ( ""[KCrash Handler]\\n"" ) )"		274389	0					
ANR	274517	Callee	BacktraceLineGdb		274389	0					
ANR	274518	Identifier	BacktraceLineGdb		274389	0					
ANR	274519	ArgumentList	"QStringLiteral ( ""[KCrash Handler]\\n"" )"		274389	1					
ANR	274520	Argument	"QStringLiteral ( ""[KCrash Handler]\\n"" )"		274389	0					
ANR	274521	CallExpression	"QStringLiteral ( ""[KCrash Handler]\\n"" )"		274389	0					
ANR	274522	Callee	QStringLiteral		274389	0					
ANR	274523	Identifier	QStringLiteral		274389	0					
ANR	274524	ArgumentList	"""[KCrash Handler]\\n"""		274389	1					
ANR	274525	Argument	"""[KCrash Handler]\\n"""		274389	0					
ANR	274526	PrimaryExpression	"""[KCrash Handler]\\n"""		274389	0					
ANR	274527	ExpressionStatement	d -> m_isBelowSignalHandler = true	215:12:7641:7673	274389	2	True				
ANR	274528	AssignmentExpression	d -> m_isBelowSignalHandler = true		274389	0		=			
ANR	274529	PtrMemberAccess	d -> m_isBelowSignalHandler		274389	0					
ANR	274530	Identifier	d		274389	0					
ANR	274531	Identifier	m_isBelowSignalHandler		274389	1					
ANR	274532	Identifier	true		274389	1					
ANR	274533	ElseStatement	else		274389	0					
ANR	274534	CompoundStatement		22:15:1033:1033	274389	0					
ANR	274535	ExpressionStatement	d -> m_linesList . append ( line )	219:12:7888:7915	274389	0	True				
ANR	274536	CallExpression	d -> m_linesList . append ( line )		274389	0					
ANR	274537	Callee	d -> m_linesList . append		274389	0					
ANR	274538	MemberAccess	d -> m_linesList . append		274389	0					
ANR	274539	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274540	Identifier	d		274389	0					
ANR	274541	Identifier	m_linesList		274389	1					
ANR	274542	Identifier	append		274389	1					
ANR	274543	ArgumentList	line		274389	1					
ANR	274544	Argument	line		274389	0					
ANR	274545	Identifier	line		274389	0					
ANR	274546	BreakStatement	break ;	221:8:7935:7940	274389	11	True				
ANR	274547	Label	case BacktraceLine :: StackFrame :	222:4:7946:7976	274389	12	True				
ANR	274548	Identifier	BacktraceLine :: StackFrame		274389	0					
ANR	274549	IfStatement	if ( line . frameNumber ( ) == 0 )		274389	13					
ANR	274550	Condition	line . frameNumber ( ) == 0	228:12:8331:8353	274389	0	True				
ANR	274551	EqualityExpression	line . frameNumber ( ) == 0		274389	0		==			
ANR	274552	CallExpression	line . frameNumber ( )		274389	0					
ANR	274553	Callee	line . frameNumber		274389	0					
ANR	274554	MemberAccess	line . frameNumber		274389	0					
ANR	274555	Identifier	line		274389	0					
ANR	274556	Identifier	frameNumber		274389	1					
ANR	274557	ArgumentList			274389	1					
ANR	274558	PrimaryExpression	0		274389	1					
ANR	274559	CompoundStatement		34:37:1649:1649	274389	1					
ANR	274560	IfStatement	if ( d -> m_frameZeroAppeared )		274389	0					
ANR	274561	Condition	d -> m_frameZeroAppeared	229:16:8374:8395	274389	0	True				
ANR	274562	PtrMemberAccess	d -> m_frameZeroAppeared		274389	0					
ANR	274563	Identifier	d		274389	0					
ANR	274564	Identifier	m_frameZeroAppeared		274389	1					
ANR	274565	CompoundStatement		35:40:1691:1691	274389	1					
ANR	274566	BreakStatement	break ;	230:16:8416:8421	274389	0	True				
ANR	274567	ElseStatement	else		274389	0					
ANR	274568	CompoundStatement		37:19:1803:1803	274389	0					
ANR	274569	ExpressionStatement	d -> m_frameZeroAppeared = true	232:16:8528:8557	274389	0	True				
ANR	274570	AssignmentExpression	d -> m_frameZeroAppeared = true		274389	0		=			
ANR	274571	PtrMemberAccess	d -> m_frameZeroAppeared		274389	0					
ANR	274572	Identifier	d		274389	0					
ANR	274573	Identifier	m_frameZeroAppeared		274389	1					
ANR	274574	Identifier	true		274389	1					
ANR	274575	IfStatement	if ( d -> m_isBelowSignalHandler )		274389	14					
ANR	274576	Condition	d -> m_isBelowSignalHandler	237:12:8662:8686	274389	0	True				
ANR	274577	PtrMemberAccess	d -> m_isBelowSignalHandler		274389	0					
ANR	274578	Identifier	d		274389	0					
ANR	274579	Identifier	m_isBelowSignalHandler		274389	1					
ANR	274580	CompoundStatement		43:39:1982:1982	274389	1					
ANR	274581	ExpressionStatement	d -> m_linesToRate . append ( line )	238:12:8703:8732	274389	0	True				
ANR	274582	CallExpression	d -> m_linesToRate . append ( line )		274389	0					
ANR	274583	Callee	d -> m_linesToRate . append		274389	0					
ANR	274584	MemberAccess	d -> m_linesToRate . append		274389	0					
ANR	274585	PtrMemberAccess	d -> m_linesToRate		274389	0					
ANR	274586	Identifier	d		274389	0					
ANR	274587	Identifier	m_linesToRate		274389	1					
ANR	274588	Identifier	append		274389	1					
ANR	274589	ArgumentList	line		274389	1					
ANR	274590	Argument	line		274389	0					
ANR	274591	Identifier	line		274389	0					
ANR	274592	Label	default :	242:4:8804:8811	274389	15	True				
ANR	274593	Identifier	default		274389	0					
ANR	274594	ExpressionStatement	d -> m_linesList . append ( line )	243:8:8821:8848	274389	16	True				
ANR	274595	CallExpression	d -> m_linesList . append ( line )		274389	0					
ANR	274596	Callee	d -> m_linesList . append		274389	0					
ANR	274597	MemberAccess	d -> m_linesList . append		274389	0					
ANR	274598	PtrMemberAccess	d -> m_linesList		274389	0					
ANR	274599	Identifier	d		274389	0					
ANR	274600	Identifier	m_linesList		274389	1					
ANR	274601	Identifier	append		274389	1					
ANR	274602	ArgumentList	line		274389	1					
ANR	274603	Argument	line		274389	0					
ANR	274604	Identifier	line		274389	0					
ANR	274605	BreakStatement	break ;	244:8:8858:8863	274389	17	True				
ANR	274606	ReturnType	void		274389	1					
ANR	274607	Identifier	BacktraceParserGdb :: parseLine		274389	2					
ANR	274608	ParameterList	const QString & lineStr		274389	3					
ANR	274609	Parameter	const QString & lineStr	194:35:6681:6703	274389	0	True				
ANR	274610	ParameterType	const QString &		274389	0					
ANR	274611	Identifier	lineStr		274389	1					
ANR	274612	CFGEntryNode	ENTRY		274389		True				
ANR	274613	CFGExitNode	EXIT		274389		True				
ANR	274614	Symbol	line . type		274389						
ANR	274615	Symbol	d -> m_possibleKCrashStart		274389						
ANR	274616	Symbol	d		274389						
ANR	274617	Symbol	line		274389						
ANR	274618	Symbol	d -> m_isBelowSignalHandler		274389						
ANR	274619	Symbol	d -> m_linesList . size		274389						
ANR	274620	Symbol	false		274389						
ANR	274621	Symbol	d -> m_linesList . begin		274389						
ANR	274622	Symbol	BacktraceParserGdb		274389						
ANR	274623	Symbol	* d		274389						
ANR	274624	Symbol	BacktraceLineGdb		274389						
ANR	274625	Symbol	lineStr		274389						
ANR	274626	Symbol	d -> m_linesList . end		274389						
ANR	274627	Symbol	d -> m_linesList		274389						
ANR	274628	Symbol	true		274389						
ANR	274629	Symbol	d -> m_frameZeroAppeared		274389						
ANR	274630	Symbol	QStringLiteral		274389						
ANR	274631	Symbol	d -> m_linesToRate		274389						
ANR	274632	Symbol	line . frameNumber		274389						
ANR	274633	Symbol	d -> m_threadsCount		274389						
ANR	274634	Function	BacktraceParserGdb :: parsedBacktrace	248:0:8874:9649							
ANR	274635	FunctionDef	BacktraceParserGdb :: parsedBacktrace ()		274634	0					
ANR	274636	CompoundStatement		249:0:8926:9649	274634	0					
ANR	274637	Statement	Q_D	250:4:8932:8934	274634	0	True				
ANR	274638	Statement	(	250:7:8935:8935	274634	1	True				
ANR	274639	Statement	const	250:8:8936:8940	274634	2	True				
ANR	274640	Statement	BacktraceParserGdb	250:14:8942:8959	274634	3	True				
ANR	274641	Statement	)	250:32:8960:8960	274634	4	True				
ANR	274642	ExpressionStatement		250:33:8961:8961	274634	5	True				
ANR	274643	IdentifierDeclStatement	QString result ;	252:4:8968:8982	274634	6	True				
ANR	274644	IdentifierDecl	result		274634	0					
ANR	274645	IdentifierDeclType	QString		274634	0					
ANR	274646	Identifier	result		274634	1					
ANR	274647	IfStatement	if ( d )		274634	7					
ANR	274648	Condition	d	253:8:8992:8992	274634	0	True				
ANR	274649	Identifier	d		274634	0					
ANR	274650	CompoundStatement		6:8:78:116	274634	1					
ANR	274651	IdentifierDeclStatement	QList < BacktraceLine > :: const_iterator i ;	254:8:9005:9043	274634	0	True				
ANR	274652	IdentifierDecl	i		274634	0					
ANR	274653	IdentifierDeclType	QList < BacktraceLine > :: const_iterator		274634	0					
ANR	274654	Identifier	i		274634	1					
ANR	274655	ForStatement	for ( i = d -> m_linesList . constBegin ( ) ; i != d -> m_linesList . constEnd ( ) ; ++ i )		274634	1					
ANR	274656	ForInit	i = d -> m_linesList . constBegin ( ) ;	255:13:9058:9089	274634	0	True				
ANR	274657	AssignmentExpression	i = d -> m_linesList . constBegin ( )		274634	0		=			
ANR	274658	Identifier	i		274634	0					
ANR	274659	CallExpression	d -> m_linesList . constBegin ( )		274634	1					
ANR	274660	Callee	d -> m_linesList . constBegin		274634	0					
ANR	274661	MemberAccess	d -> m_linesList . constBegin		274634	0					
ANR	274662	PtrMemberAccess	d -> m_linesList		274634	0					
ANR	274663	Identifier	d		274634	0					
ANR	274664	Identifier	m_linesList		274634	1					
ANR	274665	Identifier	constBegin		274634	1					
ANR	274666	ArgumentList			274634	1					
ANR	274667	Condition	i != d -> m_linesList . constEnd ( )	255:46:9091:9120	274634	1	True				
ANR	274668	EqualityExpression	i != d -> m_linesList . constEnd ( )		274634	0		!=			
ANR	274669	Identifier	i		274634	0					
ANR	274670	CallExpression	d -> m_linesList . constEnd ( )		274634	1					
ANR	274671	Callee	d -> m_linesList . constEnd		274634	0					
ANR	274672	MemberAccess	d -> m_linesList . constEnd		274634	0					
ANR	274673	PtrMemberAccess	d -> m_linesList		274634	0					
ANR	274674	Identifier	d		274634	0					
ANR	274675	Identifier	m_linesList		274634	1					
ANR	274676	Identifier	constEnd		274634	1					
ANR	274677	ArgumentList			274634	1					
ANR	274678	UnaryExpression	++ i	255:78:9123:9125	274634	2	True				
ANR	274679	IncDec	++		274634	0					
ANR	274680	Identifier	i		274634	1					
ANR	274681	CompoundStatement		7:83:201:201	274634	3					
ANR	274682	IfStatement	if ( d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine ) )		274634	0					
ANR	274683	Condition	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )	258:16:9280:9520	274634	0	True				
ANR	274684	AndExpression	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )		274634	0		&&			
ANR	274685	EqualityExpression	d -> m_threadsCount == 1		274634	0		==			
ANR	274686	PtrMemberAccess	d -> m_threadsCount		274634	0					
ANR	274687	Identifier	d		274634	0					
ANR	274688	Identifier	m_threadsCount		274634	1					
ANR	274689	PrimaryExpression	1		274634	1					
ANR	274690	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		274634	1		||			
ANR	274691	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator		274634	0		==			
ANR	274692	CallExpression	( * i ) . type ( )		274634	0					
ANR	274693	Callee	( * i ) . type		274634	0					
ANR	274694	MemberAccess	( * i ) . type		274634	0					
ANR	274695	UnaryOperationExpression	* i		274634	0					
ANR	274696	UnaryOperator	*		274634	0					
ANR	274697	Identifier	i		274634	1					
ANR	274698	Identifier	type		274634	1					
ANR	274699	ArgumentList			274634	1					
ANR	274700	Identifier	BacktraceLine :: ThreadIndicator		274634	1					
ANR	274701	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		274634	1		||			
ANR	274702	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart		274634	0		==			
ANR	274703	CallExpression	( * i ) . type ( )		274634	0					
ANR	274704	Callee	( * i ) . type		274634	0					
ANR	274705	MemberAccess	( * i ) . type		274634	0					
ANR	274706	UnaryOperationExpression	* i		274634	0					
ANR	274707	UnaryOperator	*		274634	0					
ANR	274708	Identifier	i		274634	1					
ANR	274709	Identifier	type		274634	1					
ANR	274710	ArgumentList			274634	1					
ANR	274711	Identifier	BacktraceLine :: ThreadStart		274634	1					
ANR	274712	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: EmptyLine		274634	1		==			
ANR	274713	CallExpression	( * i ) . type ( )		274634	0					
ANR	274714	Callee	( * i ) . type		274634	0					
ANR	274715	MemberAccess	( * i ) . type		274634	0					
ANR	274716	UnaryOperationExpression	* i		274634	0					
ANR	274717	UnaryOperator	*		274634	0					
ANR	274718	Identifier	i		274634	1					
ANR	274719	Identifier	type		274634	1					
ANR	274720	ArgumentList			274634	1					
ANR	274721	Identifier	BacktraceLine :: EmptyLine		274634	1					
ANR	274722	CompoundStatement		13:12:608:608	274634	1					
ANR	274723	ContinueStatement	continue ;	262:16:9553:9561	274634	0	True				
ANR	274724	ExpressionStatement	result += i -> toString ( )	264:12:9589:9612	274634	1	True				
ANR	274725	AssignmentExpression	result += i -> toString ( )		274634	0		+=			
ANR	274726	Identifier	result		274634	0					
ANR	274727	CallExpression	i -> toString ( )		274634	1					
ANR	274728	Callee	i -> toString		274634	0					
ANR	274729	PtrMemberAccess	i -> toString		274634	0					
ANR	274730	Identifier	i		274634	0					
ANR	274731	Identifier	toString		274634	1					
ANR	274732	ArgumentList			274634	1					
ANR	274733	ReturnStatement	return result ;	267:4:9634:9647	274634	8	True				
ANR	274734	Identifier	result		274634	0					
ANR	274735	ReturnType	QString		274634	1					
ANR	274736	Identifier	BacktraceParserGdb :: parsedBacktrace		274634	2					
ANR	274737	ParameterList			274634	3					
ANR	274738	CFGEntryNode	ENTRY		274634		True				
ANR	274739	CFGExitNode	EXIT		274634		True				
ANR	274740	Symbol	d -> m_linesList . constEnd		274634						
ANR	274741	Symbol	d		274634						
ANR	274742	Symbol	i		274634						
ANR	274743	Symbol	( * i ) . type		274634						
ANR	274744	Symbol	BacktraceLine :: ThreadStart		274634						
ANR	274745	Symbol	* d		274634						
ANR	274746	Symbol	BacktraceLine :: ThreadIndicator		274634						
ANR	274747	Symbol	result		274634						
ANR	274748	Symbol	* i		274634						
ANR	274749	Symbol	d -> m_linesList		274634						
ANR	274750	Symbol	BacktraceLine :: EmptyLine		274634						
ANR	274751	Symbol	i -> toString		274634						
ANR	274752	Symbol	d -> m_linesList . constBegin		274634						
ANR	274753	Symbol	d -> m_threadsCount		274634						
ANR	274754	Function	BacktraceParserGdb :: parsedBacktraceLines	270:0:9652:10452							
ANR	274755	FunctionDef	BacktraceParserGdb :: parsedBacktraceLines ()		274754	0					
ANR	274756	CompoundStatement		271:0:9722:10452	274754	0					
ANR	274757	Statement	Q_D	272:4:9728:9730	274754	0	True				
ANR	274758	Statement	(	272:7:9731:9731	274754	1	True				
ANR	274759	Statement	const	272:8:9732:9736	274754	2	True				
ANR	274760	Statement	BacktraceParserGdb	272:14:9738:9755	274754	3	True				
ANR	274761	Statement	)	272:32:9756:9756	274754	4	True				
ANR	274762	ExpressionStatement		272:33:9757:9757	274754	5	True				
ANR	274763	IdentifierDeclStatement	QList < BacktraceLine > result ;	274:4:9764:9791	274754	6	True				
ANR	274764	IdentifierDecl	result		274754	0					
ANR	274765	IdentifierDeclType	QList < BacktraceLine >		274754	0					
ANR	274766	Identifier	result		274754	1					
ANR	274767	IfStatement	if ( d )		274754	7					
ANR	274768	Condition	d	275:8:9801:9801	274754	0	True				
ANR	274769	Identifier	d		274754	0					
ANR	274770	CompoundStatement		6:8:91:129	274754	1					
ANR	274771	IdentifierDeclStatement	QList < BacktraceLine > :: const_iterator i ;	276:8:9814:9852	274754	0	True				
ANR	274772	IdentifierDecl	i		274754	0					
ANR	274773	IdentifierDeclType	QList < BacktraceLine > :: const_iterator		274754	0					
ANR	274774	Identifier	i		274754	1					
ANR	274775	ForStatement	for ( i = d -> m_linesList . constBegin ( ) ; i != d -> m_linesList . constEnd ( ) ; ++ i )		274754	1					
ANR	274776	ForInit	i = d -> m_linesList . constBegin ( ) ;	277:13:9867:9898	274754	0	True				
ANR	274777	AssignmentExpression	i = d -> m_linesList . constBegin ( )		274754	0		=			
ANR	274778	Identifier	i		274754	0					
ANR	274779	CallExpression	d -> m_linesList . constBegin ( )		274754	1					
ANR	274780	Callee	d -> m_linesList . constBegin		274754	0					
ANR	274781	MemberAccess	d -> m_linesList . constBegin		274754	0					
ANR	274782	PtrMemberAccess	d -> m_linesList		274754	0					
ANR	274783	Identifier	d		274754	0					
ANR	274784	Identifier	m_linesList		274754	1					
ANR	274785	Identifier	constBegin		274754	1					
ANR	274786	ArgumentList			274754	1					
ANR	274787	Condition	i != d -> m_linesList . constEnd ( )	277:46:9900:9929	274754	1	True				
ANR	274788	EqualityExpression	i != d -> m_linesList . constEnd ( )		274754	0		!=			
ANR	274789	Identifier	i		274754	0					
ANR	274790	CallExpression	d -> m_linesList . constEnd ( )		274754	1					
ANR	274791	Callee	d -> m_linesList . constEnd		274754	0					
ANR	274792	MemberAccess	d -> m_linesList . constEnd		274754	0					
ANR	274793	PtrMemberAccess	d -> m_linesList		274754	0					
ANR	274794	Identifier	d		274754	0					
ANR	274795	Identifier	m_linesList		274754	1					
ANR	274796	Identifier	constEnd		274754	1					
ANR	274797	ArgumentList			274754	1					
ANR	274798	UnaryExpression	++ i	277:78:9932:9934	274754	2	True				
ANR	274799	IncDec	++		274754	0					
ANR	274800	Identifier	i		274754	1					
ANR	274801	CompoundStatement		7:83:214:214	274754	3					
ANR	274802	IfStatement	if ( d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine ) )		274754	0					
ANR	274803	Condition	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )	280:16:10089:10329	274754	0	True				
ANR	274804	AndExpression	d -> m_threadsCount == 1 && ( ( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine )		274754	0		&&			
ANR	274805	EqualityExpression	d -> m_threadsCount == 1		274754	0		==			
ANR	274806	PtrMemberAccess	d -> m_threadsCount		274754	0					
ANR	274807	Identifier	d		274754	0					
ANR	274808	Identifier	m_threadsCount		274754	1					
ANR	274809	PrimaryExpression	1		274754	1					
ANR	274810	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator || ( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		274754	1		||			
ANR	274811	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadIndicator		274754	0		==			
ANR	274812	CallExpression	( * i ) . type ( )		274754	0					
ANR	274813	Callee	( * i ) . type		274754	0					
ANR	274814	MemberAccess	( * i ) . type		274754	0					
ANR	274815	UnaryOperationExpression	* i		274754	0					
ANR	274816	UnaryOperator	*		274754	0					
ANR	274817	Identifier	i		274754	1					
ANR	274818	Identifier	type		274754	1					
ANR	274819	ArgumentList			274754	1					
ANR	274820	Identifier	BacktraceLine :: ThreadIndicator		274754	1					
ANR	274821	OrExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart || ( * i ) . type ( ) == BacktraceLine :: EmptyLine		274754	1		||			
ANR	274822	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: ThreadStart		274754	0		==			
ANR	274823	CallExpression	( * i ) . type ( )		274754	0					
ANR	274824	Callee	( * i ) . type		274754	0					
ANR	274825	MemberAccess	( * i ) . type		274754	0					
ANR	274826	UnaryOperationExpression	* i		274754	0					
ANR	274827	UnaryOperator	*		274754	0					
ANR	274828	Identifier	i		274754	1					
ANR	274829	Identifier	type		274754	1					
ANR	274830	ArgumentList			274754	1					
ANR	274831	Identifier	BacktraceLine :: ThreadStart		274754	1					
ANR	274832	EqualityExpression	( * i ) . type ( ) == BacktraceLine :: EmptyLine		274754	1		==			
ANR	274833	CallExpression	( * i ) . type ( )		274754	0					
ANR	274834	Callee	( * i ) . type		274754	0					
ANR	274835	MemberAccess	( * i ) . type		274754	0					
ANR	274836	UnaryOperationExpression	* i		274754	0					
ANR	274837	UnaryOperator	*		274754	0					
ANR	274838	Identifier	i		274754	1					
ANR	274839	Identifier	type		274754	1					
ANR	274840	ArgumentList			274754	1					
ANR	274841	Identifier	BacktraceLine :: EmptyLine		274754	1					
ANR	274842	CompoundStatement		13:12:621:621	274754	1					
ANR	274843	ContinueStatement	continue ;	284:16:10362:10370	274754	0	True				
ANR	274844	ExpressionStatement	result . append ( * i )	286:12:10398:10415	274754	1	True				
ANR	274845	CallExpression	result . append ( * i )		274754	0					
ANR	274846	Callee	result . append		274754	0					
ANR	274847	MemberAccess	result . append		274754	0					
ANR	274848	Identifier	result		274754	0					
ANR	274849	Identifier	append		274754	1					
ANR	274850	ArgumentList	* i		274754	1					
ANR	274851	Argument	* i		274754	0					
ANR	274852	UnaryOperationExpression	* i		274754	0					
ANR	274853	UnaryOperator	*		274754	0					
ANR	274854	Identifier	i		274754	1					
ANR	274855	ReturnStatement	return result ;	289:4:10437:10450	274754	8	True				
ANR	274856	Identifier	result		274754	0					
ANR	274857	ReturnType	QList < BacktraceLine >		274754	1					
ANR	274858	Identifier	BacktraceParserGdb :: parsedBacktraceLines		274754	2					
ANR	274859	ParameterList			274754	3					
ANR	274860	CFGEntryNode	ENTRY		274754		True				
ANR	274861	CFGExitNode	EXIT		274754		True				
ANR	274862	Symbol	d -> m_linesList . constEnd		274754						
ANR	274863	Symbol	d		274754						
ANR	274864	Symbol	i		274754						
ANR	274865	Symbol	( * i ) . type		274754						
ANR	274866	Symbol	BacktraceLine :: ThreadStart		274754						
ANR	274867	Symbol	* d		274754						
ANR	274868	Symbol	BacktraceLine :: ThreadIndicator		274754						
ANR	274869	Symbol	result		274754						
ANR	274870	Symbol	* i		274754						
ANR	274871	Symbol	d -> m_linesList		274754						
ANR	274872	Symbol	BacktraceLine :: EmptyLine		274754						
ANR	274873	Symbol	d -> m_linesList . constBegin		274754						
ANR	274874	Symbol	d -> m_threadsCount		274754						
