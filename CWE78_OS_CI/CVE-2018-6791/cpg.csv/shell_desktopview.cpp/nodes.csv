command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	684394	File	data/converged/CVE-2018-6791_plasma-workspace/shell_desktopview.cpp								
ANR	684395	Function	DesktopView :: DesktopView	37:1:1182:2653							
ANR	684396	FunctionDef	"DesktopView :: DesktopView (Plasma :: Corona * corona , QScreen * targetScreen)"		684395	0					
ANR	684397	CompoundStatement		43:0:1397:2653	684395	0					
ANR	684398	IfStatement	if ( targetScreen )		684395	0					
ANR	684399	Condition	targetScreen	44:8:1407:1418	684395	0	True				
ANR	684400	Identifier	targetScreen		684395	0					
ANR	684401	CompoundStatement		2:22:23:23	684395	1					
ANR	684402	ExpressionStatement	setScreenToFollow ( targetScreen )	45:8:1431:1462	684395	0	True				
ANR	684403	CallExpression	setScreenToFollow ( targetScreen )		684395	0					
ANR	684404	Callee	setScreenToFollow		684395	0					
ANR	684405	Identifier	setScreenToFollow		684395	0					
ANR	684406	ArgumentList	targetScreen		684395	1					
ANR	684407	Argument	targetScreen		684395	0					
ANR	684408	Identifier	targetScreen		684395	0					
ANR	684409	ExpressionStatement	setScreen ( targetScreen )	46:8:1472:1495	684395	1	True				
ANR	684410	CallExpression	setScreen ( targetScreen )		684395	0					
ANR	684411	Callee	setScreen		684395	0					
ANR	684412	Identifier	setScreen		684395	0					
ANR	684413	ArgumentList	targetScreen		684395	1					
ANR	684414	Argument	targetScreen		684395	0					
ANR	684415	Identifier	targetScreen		684395	0					
ANR	684416	ExpressionStatement	setGeometry ( targetScreen -> geometry ( ) )	47:8:1505:1542	684395	2	True				
ANR	684417	CallExpression	setGeometry ( targetScreen -> geometry ( ) )		684395	0					
ANR	684418	Callee	setGeometry		684395	0					
ANR	684419	Identifier	setGeometry		684395	0					
ANR	684420	ArgumentList	targetScreen -> geometry ( )		684395	1					
ANR	684421	Argument	targetScreen -> geometry ( )		684395	0					
ANR	684422	CallExpression	targetScreen -> geometry ( )		684395	0					
ANR	684423	Callee	targetScreen -> geometry		684395	0					
ANR	684424	PtrMemberAccess	targetScreen -> geometry		684395	0					
ANR	684425	Identifier	targetScreen		684395	0					
ANR	684426	Identifier	geometry		684395	1					
ANR	684427	ArgumentList			684395	1					
ANR	684428	ExpressionStatement	setFlags ( Qt :: Window | Qt :: FramelessWindowHint )	50:4:1555:1601	684395	1	True				
ANR	684429	CallExpression	setFlags ( Qt :: Window | Qt :: FramelessWindowHint )		684395	0					
ANR	684430	Callee	setFlags		684395	0					
ANR	684431	Identifier	setFlags		684395	0					
ANR	684432	ArgumentList	Qt :: Window | Qt :: FramelessWindowHint		684395	1					
ANR	684433	Argument	Qt :: Window | Qt :: FramelessWindowHint		684395	0					
ANR	684434	InclusiveOrExpression	Qt :: Window | Qt :: FramelessWindowHint		684395	0		|			
ANR	684435	Identifier	Qt :: Window		684395	0					
ANR	684436	Identifier	Qt :: FramelessWindowHint		684395	1					
ANR	684437	ExpressionStatement	setTitle ( corona -> kPackage ( ) . metadata ( ) . name ( ) )	51:4:1607:1653	684395	2	True				
ANR	684438	CallExpression	setTitle ( corona -> kPackage ( ) . metadata ( ) . name ( ) )		684395	0					
ANR	684439	Callee	setTitle		684395	0					
ANR	684440	Identifier	setTitle		684395	0					
ANR	684441	ArgumentList	corona -> kPackage ( ) . metadata ( ) . name ( )		684395	1					
ANR	684442	Argument	corona -> kPackage ( ) . metadata ( ) . name ( )		684395	0					
ANR	684443	CallExpression	corona -> kPackage ( ) . metadata ( ) . name ( )		684395	0					
ANR	684444	Callee	corona -> kPackage ( ) . metadata ( ) . name		684395	0					
ANR	684445	MemberAccess	corona -> kPackage ( ) . metadata ( ) . name		684395	0					
ANR	684446	CallExpression	corona -> kPackage ( ) . metadata ( )		684395	0					
ANR	684447	Callee	corona -> kPackage ( ) . metadata		684395	0					
ANR	684448	MemberAccess	corona -> kPackage ( ) . metadata		684395	0					
ANR	684449	CallExpression	corona -> kPackage ( )		684395	0					
ANR	684450	Callee	corona -> kPackage		684395	0					
ANR	684451	PtrMemberAccess	corona -> kPackage		684395	0					
ANR	684452	Identifier	corona		684395	0					
ANR	684453	Identifier	kPackage		684395	1					
ANR	684454	ArgumentList			684395	1					
ANR	684455	Identifier	metadata		684395	1					
ANR	684456	ArgumentList			684395	1					
ANR	684457	Identifier	name		684395	1					
ANR	684458	ArgumentList			684395	1					
ANR	684459	ExpressionStatement	setIcon ( QIcon :: fromTheme ( corona -> kPackage ( ) . metadata ( ) . iconName ( ) ) )	52:4:1659:1726	684395	3	True				
ANR	684460	CallExpression	setIcon ( QIcon :: fromTheme ( corona -> kPackage ( ) . metadata ( ) . iconName ( ) ) )		684395	0					
ANR	684461	Callee	setIcon		684395	0					
ANR	684462	Identifier	setIcon		684395	0					
ANR	684463	ArgumentList	QIcon :: fromTheme ( corona -> kPackage ( ) . metadata ( ) . iconName ( ) )		684395	1					
ANR	684464	Argument	QIcon :: fromTheme ( corona -> kPackage ( ) . metadata ( ) . iconName ( ) )		684395	0					
ANR	684465	CallExpression	QIcon :: fromTheme ( corona -> kPackage ( ) . metadata ( ) . iconName ( ) )		684395	0					
ANR	684466	Callee	QIcon :: fromTheme		684395	0					
ANR	684467	Identifier	QIcon :: fromTheme		684395	0					
ANR	684468	ArgumentList	corona -> kPackage ( ) . metadata ( ) . iconName ( )		684395	1					
ANR	684469	Argument	corona -> kPackage ( ) . metadata ( ) . iconName ( )		684395	0					
ANR	684470	CallExpression	corona -> kPackage ( ) . metadata ( ) . iconName ( )		684395	0					
ANR	684471	Callee	corona -> kPackage ( ) . metadata ( ) . iconName		684395	0					
ANR	684472	MemberAccess	corona -> kPackage ( ) . metadata ( ) . iconName		684395	0					
ANR	684473	CallExpression	corona -> kPackage ( ) . metadata ( )		684395	0					
ANR	684474	Callee	corona -> kPackage ( ) . metadata		684395	0					
ANR	684475	MemberAccess	corona -> kPackage ( ) . metadata		684395	0					
ANR	684476	CallExpression	corona -> kPackage ( )		684395	0					
ANR	684477	Callee	corona -> kPackage		684395	0					
ANR	684478	PtrMemberAccess	corona -> kPackage		684395	0					
ANR	684479	Identifier	corona		684395	0					
ANR	684480	Identifier	kPackage		684395	1					
ANR	684481	ArgumentList			684395	1					
ANR	684482	Identifier	metadata		684395	1					
ANR	684483	ArgumentList			684395	1					
ANR	684484	Identifier	iconName		684395	1					
ANR	684485	ArgumentList			684395	1					
ANR	684486	ExpressionStatement	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""desktop"" ) , this )"	53:4:1732:1798	684395	4	True				
ANR	684487	CallExpression	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""desktop"" ) , this )"		684395	0					
ANR	684488	Callee	rootContext ( ) -> setContextProperty		684395	0					
ANR	684489	PtrMemberAccess	rootContext ( ) -> setContextProperty		684395	0					
ANR	684490	CallExpression	rootContext ( )		684395	0					
ANR	684491	Callee	rootContext		684395	0					
ANR	684492	Identifier	rootContext		684395	0					
ANR	684493	ArgumentList			684395	1					
ANR	684494	Identifier	setContextProperty		684395	1					
ANR	684495	ArgumentList	"QStringLiteral ( ""desktop"" )"		684395	1					
ANR	684496	Argument	"QStringLiteral ( ""desktop"" )"		684395	0					
ANR	684497	CallExpression	"QStringLiteral ( ""desktop"" )"		684395	0					
ANR	684498	Callee	QStringLiteral		684395	0					
ANR	684499	Identifier	QStringLiteral		684395	0					
ANR	684500	ArgumentList	"""desktop"""		684395	1					
ANR	684501	Argument	"""desktop"""		684395	0					
ANR	684502	PrimaryExpression	"""desktop"""		684395	0					
ANR	684503	Argument	this		684395	1					
ANR	684504	Identifier	this		684395	0					
ANR	684505	ExpressionStatement	"setSource ( QUrl :: fromLocalFile ( corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) ) )"	54:4:1804:1903	684395	5	True				
ANR	684506	CallExpression	"setSource ( QUrl :: fromLocalFile ( corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) ) )"		684395	0					
ANR	684507	Callee	setSource		684395	0					
ANR	684508	Identifier	setSource		684395	0					
ANR	684509	ArgumentList	"QUrl :: fromLocalFile ( corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) )"		684395	1					
ANR	684510	Argument	"QUrl :: fromLocalFile ( corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) )"		684395	0					
ANR	684511	CallExpression	"QUrl :: fromLocalFile ( corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) )"		684395	0					
ANR	684512	Callee	QUrl :: fromLocalFile		684395	0					
ANR	684513	Identifier	QUrl :: fromLocalFile		684395	0					
ANR	684514	ArgumentList	"corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) )"		684395	1					
ANR	684515	Argument	"corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) )"		684395	0					
ANR	684516	CallExpression	"corona -> kPackage ( ) . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) )"		684395	0					
ANR	684517	Callee	corona -> kPackage ( ) . filePath		684395	0					
ANR	684518	MemberAccess	corona -> kPackage ( ) . filePath		684395	0					
ANR	684519	CallExpression	corona -> kPackage ( )		684395	0					
ANR	684520	Callee	corona -> kPackage		684395	0					
ANR	684521	PtrMemberAccess	corona -> kPackage		684395	0					
ANR	684522	Identifier	corona		684395	0					
ANR	684523	Identifier	kPackage		684395	1					
ANR	684524	ArgumentList			684395	1					
ANR	684525	Identifier	filePath		684395	1					
ANR	684526	ArgumentList	"""views"""		684395	1					
ANR	684527	Argument	"""views"""		684395	0					
ANR	684528	PrimaryExpression	"""views"""		684395	0					
ANR	684529	Argument	"QStringLiteral ( ""Desktop.qml"" )"		684395	1					
ANR	684530	CallExpression	"QStringLiteral ( ""Desktop.qml"" )"		684395	0					
ANR	684531	Callee	QStringLiteral		684395	0					
ANR	684532	Identifier	QStringLiteral		684395	0					
ANR	684533	ArgumentList	"""Desktop.qml"""		684395	1					
ANR	684534	Argument	"""Desktop.qml"""		684395	0					
ANR	684535	PrimaryExpression	"""Desktop.qml"""		684395	0					
ANR	684536	ExpressionStatement	"connect ( this , & QWindow :: screenChanged , this , & DesktopView :: adaptToScreen )"	56:4:1910:1983	684395	6	True				
ANR	684537	CallExpression	"connect ( this , & QWindow :: screenChanged , this , & DesktopView :: adaptToScreen )"		684395	0					
ANR	684538	Callee	connect		684395	0					
ANR	684539	Identifier	connect		684395	0					
ANR	684540	ArgumentList	this		684395	1					
ANR	684541	Argument	this		684395	0					
ANR	684542	Identifier	this		684395	0					
ANR	684543	Argument	& QWindow :: screenChanged		684395	1					
ANR	684544	UnaryOperationExpression	& QWindow :: screenChanged		684395	0					
ANR	684545	UnaryOperator	&		684395	0					
ANR	684546	Identifier	QWindow :: screenChanged		684395	1					
ANR	684547	Argument	this		684395	2					
ANR	684548	Identifier	this		684395	0					
ANR	684549	Argument	& DesktopView :: adaptToScreen		684395	3					
ANR	684550	UnaryOperationExpression	& DesktopView :: adaptToScreen		684395	0					
ANR	684551	UnaryOperator	&		684395	0					
ANR	684552	Identifier	DesktopView :: adaptToScreen		684395	1					
ANR	684553	ExpressionStatement	"QObject :: connect ( corona , & Plasma :: Corona :: kPackageChanged , this , & DesktopView :: coronaPackageChanged )"	58:4:1990:2111	684395	7	True				
ANR	684554	CallExpression	"QObject :: connect ( corona , & Plasma :: Corona :: kPackageChanged , this , & DesktopView :: coronaPackageChanged )"		684395	0					
ANR	684555	Callee	QObject :: connect		684395	0					
ANR	684556	Identifier	QObject :: connect		684395	0					
ANR	684557	ArgumentList	corona		684395	1					
ANR	684558	Argument	corona		684395	0					
ANR	684559	Identifier	corona		684395	0					
ANR	684560	Argument	& Plasma :: Corona :: kPackageChanged		684395	1					
ANR	684561	UnaryOperationExpression	& Plasma :: Corona :: kPackageChanged		684395	0					
ANR	684562	UnaryOperator	&		684395	0					
ANR	684563	Identifier	Plasma :: Corona :: kPackageChanged		684395	1					
ANR	684564	Argument	this		684395	2					
ANR	684565	Identifier	this		684395	0					
ANR	684566	Argument	& DesktopView :: coronaPackageChanged		684395	3					
ANR	684567	UnaryOperationExpression	& DesktopView :: coronaPackageChanged		684395	0					
ANR	684568	UnaryOperator	&		684395	0					
ANR	684569	Identifier	DesktopView :: coronaPackageChanged		684395	1					
ANR	684570	Statement	connect	61:4:2118:2124	684395	8	True				
ANR	684571	Statement	(	61:11:2125:2125	684395	9	True				
ANR	684572	Statement	this	61:12:2126:2129	684395	10	True				
ANR	684573	Statement	","	61:16:2130:2130	684395	11	True				
ANR	684574	Statement	&	61:18:2132:2132	684395	12	True				
ANR	684575	Statement	DesktopView	61:19:2133:2143	684395	13	True				
ANR	684576	Statement	::	61:30:2144:2145	684395	14	True				
ANR	684577	Statement	sceneGraphInitialized	61:32:2146:2166	684395	15	True				
ANR	684578	Statement	","	61:53:2167:2167	684395	16	True				
ANR	684579	Statement	this	61:55:2169:2172	684395	17	True				
ANR	684580	Statement	","	61:59:2173:2173	684395	18	True				
ANR	684581	Statement	[	62:8:2183:2183	684395	19	True				
ANR	684582	Statement	this	62:9:2184:2187	684395	20	True				
ANR	684583	Statement	","	62:13:2188:2188	684395	21	True				
ANR	684584	Statement	corona	62:15:2190:2195	684395	22	True				
ANR	684585	Statement	]	62:21:2196:2196	684395	23	True				
ANR	684586	Statement	(	62:22:2197:2197	684395	24	True				
ANR	684587	Statement	)	62:23:2198:2198	684395	25	True				
ANR	684588	CompoundStatement		20:25:802:802	684395	26					
ANR	684589	IfStatement	if ( ! QOpenGLShaderProgram :: hasOpenGLShaderPrograms ( openglContext ( ) ) )		684395	0					
ANR	684590	Condition	! QOpenGLShaderProgram :: hasOpenGLShaderPrograms ( openglContext ( ) )	65:16:2351:2413	684395	0	True				
ANR	684591	UnaryOperationExpression	! QOpenGLShaderProgram :: hasOpenGLShaderPrograms ( openglContext ( ) )		684395	0					
ANR	684592	UnaryOperator	!		684395	0					
ANR	684593	CallExpression	QOpenGLShaderProgram :: hasOpenGLShaderPrograms ( openglContext ( ) )		684395	1					
ANR	684594	Callee	QOpenGLShaderProgram :: hasOpenGLShaderPrograms		684395	0					
ANR	684595	Identifier	QOpenGLShaderProgram :: hasOpenGLShaderPrograms		684395	0					
ANR	684596	ArgumentList	openglContext ( )		684395	1					
ANR	684597	Argument	openglContext ( )		684395	0					
ANR	684598	CallExpression	openglContext ( )		684395	0					
ANR	684599	Callee	openglContext		684395	0					
ANR	684600	Identifier	openglContext		684395	0					
ANR	684601	ArgumentList			684395	1					
ANR	684602	CompoundStatement		23:81:1018:1018	684395	1					
ANR	684603	ExpressionStatement	"qWarning ( ) << ""GLSL not available, Plasma won't be functional"""	66:16:2434:2496	684395	0	True				
ANR	684604	ShiftExpression	"qWarning ( ) << ""GLSL not available, Plasma won't be functional"""		684395	0		<<			
ANR	684605	CallExpression	qWarning ( )		684395	0					
ANR	684606	Callee	qWarning		684395	0					
ANR	684607	Identifier	qWarning		684395	0					
ANR	684608	ArgumentList			684395	1					
ANR	684609	PrimaryExpression	"""GLSL not available, Plasma won't be functional"""		684395	1					
ANR	684610	ExpressionStatement	"QMetaObject :: invokeMethod ( corona , ""showOpenGLNotCompatibleWarning"" , Qt :: QueuedConnection )"	67:16:2514:2603	684395	1	True				
ANR	684611	CallExpression	"QMetaObject :: invokeMethod ( corona , ""showOpenGLNotCompatibleWarning"" , Qt :: QueuedConnection )"		684395	0					
ANR	684612	Callee	QMetaObject :: invokeMethod		684395	0					
ANR	684613	Identifier	QMetaObject :: invokeMethod		684395	0					
ANR	684614	ArgumentList	corona		684395	1					
ANR	684615	Argument	corona		684395	0					
ANR	684616	Identifier	corona		684395	0					
ANR	684617	Argument	"""showOpenGLNotCompatibleWarning"""		684395	1					
ANR	684618	PrimaryExpression	"""showOpenGLNotCompatibleWarning"""		684395	0					
ANR	684619	Argument	Qt :: QueuedConnection		684395	2					
ANR	684620	Identifier	Qt :: QueuedConnection		684395	0					
ANR	684621	Statement	","	69:9:2628:2628	684395	27	True				
ANR	684622	Statement	Qt	69:11:2630:2631	684395	28	True				
ANR	684623	Statement	::	69:13:2632:2633	684395	29	True				
ANR	684624	Statement	DirectConnection	69:15:2634:2649	684395	30	True				
ANR	684625	Statement	)	69:31:2650:2650	684395	31	True				
ANR	684626	ExpressionStatement		69:32:2651:2651	684395	32	True				
ANR	684627	ReturnType	include < KWayland / Client / surface . h >		684395	1					
ANR	684628	Identifier	DesktopView :: DesktopView		684395	2					
ANR	684629	ParameterList	"Plasma :: Corona * corona , QScreen * targetScreen"		684395	3					
ANR	684630	Parameter	Plasma :: Corona * corona	39:25:1244:1265	684395	0	True				
ANR	684631	ParameterType	Plasma :: Corona *		684395	0					
ANR	684632	Identifier	corona		684395	1					
ANR	684633	Parameter	QScreen * targetScreen	39:49:1268:1288	684395	1	True				
ANR	684634	ParameterType	QScreen *		684395	0					
ANR	684635	Identifier	targetScreen		684395	1					
ANR	684636	CFGEntryNode	ENTRY		684395		True				
ANR	684637	CFGExitNode	EXIT		684395		True				
ANR	684638	Symbol	corona -> kPackage ( ) . filePath		684395						
ANR	684639	Symbol	& DesktopView :: adaptToScreen		684395						
ANR	684640	Symbol	QOpenGLShaderProgram :: hasOpenGLShaderPrograms		684395						
ANR	684641	Symbol	targetScreen -> geometry		684395						
ANR	684642	Symbol	Qt :: QueuedConnection		684395						
ANR	684643	Symbol	corona -> kPackage ( ) . metadata ( ) . name		684395						
ANR	684644	Symbol	QUrl :: fromLocalFile		684395						
ANR	684645	Symbol	* targetScreen		684395						
ANR	684646	Symbol	Qt :: FramelessWindowHint		684395						
ANR	684647	Symbol	corona -> kPackage ( ) . metadata		684395						
ANR	684648	Symbol	* corona		684395						
ANR	684649	Symbol	this		684395						
ANR	684650	Symbol	openglContext		684395						
ANR	684651	Symbol	targetScreen		684395						
ANR	684652	Symbol	QIcon :: fromTheme		684395						
ANR	684653	Symbol	corona -> kPackage		684395						
ANR	684654	Symbol	Qt :: Window		684395						
ANR	684655	Symbol	& Plasma :: Corona :: kPackageChanged		684395						
ANR	684656	Symbol	QStringLiteral		684395						
ANR	684657	Symbol	& DesktopView :: coronaPackageChanged		684395						
ANR	684658	Symbol	corona		684395						
ANR	684659	Symbol	& QWindow :: screenChanged		684395						
ANR	684660	Symbol	corona -> kPackage ( ) . metadata ( ) . iconName		684395						
ANR	684661	Symbol	rootContext		684395						
ANR	684662	Function	DesktopView :: ~DesktopView	72:0:2656:2686							
ANR	684663	FunctionDef	DesktopView :: ~DesktopView ()		684662	0					
ANR	684664	CompoundStatement		73:0:2684:2686	684662	0					
ANR	684665	Identifier	DesktopView :: ~DesktopView		684662	1					
ANR	684666	ParameterList			684662	2					
ANR	684667	CFGEntryNode	ENTRY		684662		True				
ANR	684668	CFGExitNode	EXIT		684662		True				
ANR	684669	Function	DesktopView :: showEvent	76:0:2689:2787							
ANR	684670	FunctionDef	DesktopView :: showEvent (QShowEvent * e)		684669	0					
ANR	684671	CompoundStatement		77:0:2732:2787	684669	0					
ANR	684672	ExpressionStatement	QQuickWindow :: showEvent ( e )	78:4:2738:2764	684669	0	True				
ANR	684673	CallExpression	QQuickWindow :: showEvent ( e )		684669	0					
ANR	684674	Callee	QQuickWindow :: showEvent		684669	0					
ANR	684675	Identifier	QQuickWindow :: showEvent		684669	0					
ANR	684676	ArgumentList	e		684669	1					
ANR	684677	Argument	e		684669	0					
ANR	684678	Identifier	e		684669	0					
ANR	684679	ExpressionStatement	adaptToScreen ( )	79:4:2770:2785	684669	1	True				
ANR	684680	CallExpression	adaptToScreen ( )		684669	0					
ANR	684681	Callee	adaptToScreen		684669	0					
ANR	684682	Identifier	adaptToScreen		684669	0					
ANR	684683	ArgumentList			684669	1					
ANR	684684	ReturnType	void		684669	1					
ANR	684685	Identifier	DesktopView :: showEvent		684669	2					
ANR	684686	ParameterList	QShowEvent * e		684669	3					
ANR	684687	Parameter	QShowEvent * e	76:28:2717:2729	684669	0	True				
ANR	684688	ParameterType	QShowEvent *		684669	0					
ANR	684689	Identifier	e		684669	1					
ANR	684690	CFGEntryNode	ENTRY		684669		True				
ANR	684691	CFGExitNode	EXIT		684669		True				
ANR	684692	Symbol	e		684669						
ANR	684693	Function	DesktopView :: setScreenToFollow	82:0:2790:2981							
ANR	684694	FunctionDef	DesktopView :: setScreenToFollow (QScreen * screen)		684693	0					
ANR	684695	CompoundStatement		83:0:2843:2981	684693	0					
ANR	684696	IfStatement	if ( screen == m_screenToFollow )		684693	0					
ANR	684697	Condition	screen == m_screenToFollow	84:8:2853:2878	684693	0	True				
ANR	684698	EqualityExpression	screen == m_screenToFollow		684693	0		==			
ANR	684699	Identifier	screen		684693	0					
ANR	684700	Identifier	m_screenToFollow		684693	1					
ANR	684701	CompoundStatement		2:36:37:37	684693	1					
ANR	684702	ReturnStatement	return ;	85:8:2891:2897	684693	0	True				
ANR	684703	ExpressionStatement	m_screenToFollow = screen	88:4:2910:2935	684693	1	True				
ANR	684704	AssignmentExpression	m_screenToFollow = screen		684693	0		=			
ANR	684705	Identifier	m_screenToFollow		684693	0					
ANR	684706	Identifier	screen		684693	1					
ANR	684707	ExpressionStatement	setScreen ( screen )	89:4:2941:2958	684693	2	True				
ANR	684708	CallExpression	setScreen ( screen )		684693	0					
ANR	684709	Callee	setScreen		684693	0					
ANR	684710	Identifier	setScreen		684693	0					
ANR	684711	ArgumentList	screen		684693	1					
ANR	684712	Argument	screen		684693	0					
ANR	684713	Identifier	screen		684693	0					
ANR	684714	ExpressionStatement	adaptToScreen ( )	90:4:2964:2979	684693	3	True				
ANR	684715	CallExpression	adaptToScreen ( )		684693	0					
ANR	684716	Callee	adaptToScreen		684693	0					
ANR	684717	Identifier	adaptToScreen		684693	0					
ANR	684718	ArgumentList			684693	1					
ANR	684719	ReturnType	void		684693	1					
ANR	684720	Identifier	DesktopView :: setScreenToFollow		684693	2					
ANR	684721	ParameterList	QScreen * screen		684693	3					
ANR	684722	Parameter	QScreen * screen	82:36:2826:2840	684693	0	True				
ANR	684723	ParameterType	QScreen *		684693	0					
ANR	684724	Identifier	screen		684693	1					
ANR	684725	CFGEntryNode	ENTRY		684693		True				
ANR	684726	CFGExitNode	EXIT		684693		True				
ANR	684727	Symbol	screen		684693						
ANR	684728	Symbol	m_screenToFollow		684693						
ANR	684729	Function	DesktopView :: screenToFollow	93:0:2984:3060							
ANR	684730	FunctionDef	DesktopView :: screenToFollow ()		684729	0					
ANR	684731	CompoundStatement		94:0:3029:3060	684729	0					
ANR	684732	ReturnStatement	return m_screenToFollow ;	95:4:3035:3058	684729	0	True				
ANR	684733	Identifier	m_screenToFollow		684729	0					
ANR	684734	ReturnType	QScreen *		684729	1					
ANR	684735	Identifier	DesktopView :: screenToFollow		684729	2					
ANR	684736	ParameterList			684729	3					
ANR	684737	CFGEntryNode	ENTRY		684729		True				
ANR	684738	CFGExitNode	EXIT		684729		True				
ANR	684739	Symbol	m_screenToFollow		684729						
ANR	684740	Function	DesktopView :: adaptToScreen	98:0:3063:3997							
ANR	684741	FunctionDef	DesktopView :: adaptToScreen ()		684740	0					
ANR	684742	CompoundStatement		99:0:3097:3997	684740	0					
ANR	684743	ExpressionStatement	ensureWindowType ( )	100:4:3103:3121	684740	0	True				
ANR	684744	CallExpression	ensureWindowType ( )		684740	0					
ANR	684745	Callee	ensureWindowType		684740	0					
ANR	684746	Identifier	ensureWindowType		684740	0					
ANR	684747	ArgumentList			684740	1					
ANR	684748	IfStatement	if ( ! m_screenToFollow || m_oldScreen == m_screenToFollow )		684740	1					
ANR	684749	Condition	! m_screenToFollow || m_oldScreen == m_screenToFollow	103:8:3193:3242	684740	0	True				
ANR	684750	OrExpression	! m_screenToFollow || m_oldScreen == m_screenToFollow		684740	0		||			
ANR	684751	UnaryOperationExpression	! m_screenToFollow		684740	0					
ANR	684752	UnaryOperator	!		684740	0					
ANR	684753	Identifier	m_screenToFollow		684740	1					
ANR	684754	EqualityExpression	m_oldScreen == m_screenToFollow		684740	1		==			
ANR	684755	Identifier	m_oldScreen		684740	0					
ANR	684756	Identifier	m_screenToFollow		684740	1					
ANR	684757	CompoundStatement		5:60:147:147	684740	1					
ANR	684758	ReturnStatement	return ;	104:8:3255:3261	684740	0	True				
ANR	684759	IfStatement	if ( m_oldScreen )		684740	2					
ANR	684760	Condition	m_oldScreen	107:7:3277:3287	684740	0	True				
ANR	684761	Identifier	m_oldScreen		684740	0					
ANR	684762	CompoundStatement		9:20:192:192	684740	1					
ANR	684763	ExpressionStatement	"disconnect ( m_oldScreen . data ( ) , & QScreen :: geometryChanged , this , & DesktopView :: screenGeometryChanged )"	108:8:3300:3420	684740	0	True				
ANR	684764	CallExpression	"disconnect ( m_oldScreen . data ( ) , & QScreen :: geometryChanged , this , & DesktopView :: screenGeometryChanged )"		684740	0					
ANR	684765	Callee	disconnect		684740	0					
ANR	684766	Identifier	disconnect		684740	0					
ANR	684767	ArgumentList	m_oldScreen . data ( )		684740	1					
ANR	684768	Argument	m_oldScreen . data ( )		684740	0					
ANR	684769	CallExpression	m_oldScreen . data ( )		684740	0					
ANR	684770	Callee	m_oldScreen . data		684740	0					
ANR	684771	MemberAccess	m_oldScreen . data		684740	0					
ANR	684772	Identifier	m_oldScreen		684740	0					
ANR	684773	Identifier	data		684740	1					
ANR	684774	ArgumentList			684740	1					
ANR	684775	Argument	& QScreen :: geometryChanged		684740	1					
ANR	684776	UnaryOperationExpression	& QScreen :: geometryChanged		684740	0					
ANR	684777	UnaryOperator	&		684740	0					
ANR	684778	Identifier	QScreen :: geometryChanged		684740	1					
ANR	684779	Argument	this		684740	2					
ANR	684780	Identifier	this		684740	0					
ANR	684781	Argument	& DesktopView :: screenGeometryChanged		684740	3					
ANR	684782	UnaryOperationExpression	& DesktopView :: screenGeometryChanged		684740	0					
ANR	684783	UnaryOperator	&		684740	0					
ANR	684784	Identifier	DesktopView :: screenGeometryChanged		684740	1					
ANR	684785	IfStatement	if ( m_oldScreen )		684740	3					
ANR	684786	Condition	m_oldScreen	112:7:3512:3522	684740	0	True				
ANR	684787	Identifier	m_oldScreen		684740	0					
ANR	684788	CompoundStatement		14:20:427:427	684740	1					
ANR	684789	ExpressionStatement	"disconnect ( m_oldScreen . data ( ) , & QScreen :: geometryChanged , this , & DesktopView :: screenGeometryChanged )"	113:8:3535:3655	684740	0	True				
ANR	684790	CallExpression	"disconnect ( m_oldScreen . data ( ) , & QScreen :: geometryChanged , this , & DesktopView :: screenGeometryChanged )"		684740	0					
ANR	684791	Callee	disconnect		684740	0					
ANR	684792	Identifier	disconnect		684740	0					
ANR	684793	ArgumentList	m_oldScreen . data ( )		684740	1					
ANR	684794	Argument	m_oldScreen . data ( )		684740	0					
ANR	684795	CallExpression	m_oldScreen . data ( )		684740	0					
ANR	684796	Callee	m_oldScreen . data		684740	0					
ANR	684797	MemberAccess	m_oldScreen . data		684740	0					
ANR	684798	Identifier	m_oldScreen		684740	0					
ANR	684799	Identifier	data		684740	1					
ANR	684800	ArgumentList			684740	1					
ANR	684801	Argument	& QScreen :: geometryChanged		684740	1					
ANR	684802	UnaryOperationExpression	& QScreen :: geometryChanged		684740	0					
ANR	684803	UnaryOperator	&		684740	0					
ANR	684804	Identifier	QScreen :: geometryChanged		684740	1					
ANR	684805	Argument	this		684740	2					
ANR	684806	Identifier	this		684740	0					
ANR	684807	Argument	& DesktopView :: screenGeometryChanged		684740	3					
ANR	684808	UnaryOperationExpression	& DesktopView :: screenGeometryChanged		684740	0					
ANR	684809	UnaryOperator	&		684740	0					
ANR	684810	Identifier	DesktopView :: screenGeometryChanged		684740	1					
ANR	684811	IfStatement	if ( ( m_windowType == Desktop || m_windowType == WindowedDesktop ) && ! ShellManager :: s_forceWindowed )		684740	4					
ANR	684812	Condition	( m_windowType == Desktop || m_windowType == WindowedDesktop ) && ! ShellManager :: s_forceWindowed	117:8:3672:3765	684740	0	True				
ANR	684813	AndExpression	( m_windowType == Desktop || m_windowType == WindowedDesktop ) && ! ShellManager :: s_forceWindowed		684740	0		&&			
ANR	684814	OrExpression	m_windowType == Desktop || m_windowType == WindowedDesktop		684740	0		||			
ANR	684815	EqualityExpression	m_windowType == Desktop		684740	0		==			
ANR	684816	Identifier	m_windowType		684740	0					
ANR	684817	Identifier	Desktop		684740	1					
ANR	684818	EqualityExpression	m_windowType == WindowedDesktop		684740	1		==			
ANR	684819	Identifier	m_windowType		684740	0					
ANR	684820	Identifier	WindowedDesktop		684740	1					
ANR	684821	UnaryOperationExpression	! ShellManager :: s_forceWindowed		684740	1					
ANR	684822	UnaryOperator	!		684740	0					
ANR	684823	Identifier	ShellManager :: s_forceWindowed		684740	1					
ANR	684824	CompoundStatement		19:104:670:670	684740	1					
ANR	684825	ExpressionStatement	screenGeometryChanged ( )	118:8:3778:3801	684740	0	True				
ANR	684826	CallExpression	screenGeometryChanged ( )		684740	0					
ANR	684827	Callee	screenGeometryChanged		684740	0					
ANR	684828	Identifier	screenGeometryChanged		684740	0					
ANR	684829	ArgumentList			684740	1					
ANR	684830	ExpressionStatement	"connect ( m_screenToFollow . data ( ) , & QScreen :: geometryChanged , this , & DesktopView :: screenGeometryChanged , Qt :: UniqueConnection )"	120:8:3812:3952	684740	1	True				
ANR	684831	CallExpression	"connect ( m_screenToFollow . data ( ) , & QScreen :: geometryChanged , this , & DesktopView :: screenGeometryChanged , Qt :: UniqueConnection )"		684740	0					
ANR	684832	Callee	connect		684740	0					
ANR	684833	Identifier	connect		684740	0					
ANR	684834	ArgumentList	m_screenToFollow . data ( )		684740	1					
ANR	684835	Argument	m_screenToFollow . data ( )		684740	0					
ANR	684836	CallExpression	m_screenToFollow . data ( )		684740	0					
ANR	684837	Callee	m_screenToFollow . data		684740	0					
ANR	684838	MemberAccess	m_screenToFollow . data		684740	0					
ANR	684839	Identifier	m_screenToFollow		684740	0					
ANR	684840	Identifier	data		684740	1					
ANR	684841	ArgumentList			684740	1					
ANR	684842	Argument	& QScreen :: geometryChanged		684740	1					
ANR	684843	UnaryOperationExpression	& QScreen :: geometryChanged		684740	0					
ANR	684844	UnaryOperator	&		684740	0					
ANR	684845	Identifier	QScreen :: geometryChanged		684740	1					
ANR	684846	Argument	this		684740	2					
ANR	684847	Identifier	this		684740	0					
ANR	684848	Argument	& DesktopView :: screenGeometryChanged		684740	3					
ANR	684849	UnaryOperationExpression	& DesktopView :: screenGeometryChanged		684740	0					
ANR	684850	UnaryOperator	&		684740	0					
ANR	684851	Identifier	DesktopView :: screenGeometryChanged		684740	1					
ANR	684852	Argument	Qt :: UniqueConnection		684740	4					
ANR	684853	Identifier	Qt :: UniqueConnection		684740	0					
ANR	684854	ExpressionStatement	m_oldScreen = m_screenToFollow	124:4:3965:3995	684740	5	True				
ANR	684855	AssignmentExpression	m_oldScreen = m_screenToFollow		684740	0		=			
ANR	684856	Identifier	m_oldScreen		684740	0					
ANR	684857	Identifier	m_screenToFollow		684740	1					
ANR	684858	ReturnType	void		684740	1					
ANR	684859	Identifier	DesktopView :: adaptToScreen		684740	2					
ANR	684860	ParameterList			684740	3					
ANR	684861	CFGEntryNode	ENTRY		684740		True				
ANR	684862	CFGExitNode	EXIT		684740		True				
ANR	684863	Symbol	Qt :: UniqueConnection		684740						
ANR	684864	Symbol	m_oldScreen		684740						
ANR	684865	Symbol	Desktop		684740						
ANR	684866	Symbol	m_screenToFollow . data		684740						
ANR	684867	Symbol	this		684740						
ANR	684868	Symbol	& DesktopView :: screenGeometryChanged		684740						
ANR	684869	Symbol	m_oldScreen . data		684740						
ANR	684870	Symbol	WindowedDesktop		684740						
ANR	684871	Symbol	ShellManager :: s_forceWindowed		684740						
ANR	684872	Symbol	& QScreen :: geometryChanged		684740						
ANR	684873	Symbol	m_windowType		684740						
ANR	684874	Symbol	m_screenToFollow		684740						
ANR	684875	Function	DesktopView :: windowType	127:0:4000:4083							
ANR	684876	FunctionDef	DesktopView :: windowType ()		684875	0					
ANR	684877	CompoundStatement		128:0:4056:4083	684875	0					
ANR	684878	ReturnStatement	return m_windowType ;	129:4:4062:4081	684875	0	True				
ANR	684879	Identifier	m_windowType		684875	0					
ANR	684880	ReturnType	DesktopView :: WindowType		684875	1					
ANR	684881	Identifier	DesktopView :: windowType		684875	2					
ANR	684882	ParameterList			684875	3					
ANR	684883	CFGEntryNode	ENTRY		684875		True				
ANR	684884	CFGExitNode	EXIT		684875		True				
ANR	684885	Symbol	m_windowType		684875						
ANR	684886	Function	DesktopView :: setWindowType	132:0:4086:4283							
ANR	684887	FunctionDef	DesktopView :: setWindowType (DesktopView :: WindowType type)		684886	0					
ANR	684888	CompoundStatement		133:0:4148:4283	684886	0					
ANR	684889	IfStatement	if ( m_windowType == type )		684886	0					
ANR	684890	Condition	m_windowType == type	134:8:4158:4177	684886	0	True				
ANR	684891	EqualityExpression	m_windowType == type		684886	0		==			
ANR	684892	Identifier	m_windowType		684886	0					
ANR	684893	Identifier	type		684886	1					
ANR	684894	CompoundStatement		2:30:31:31	684886	1					
ANR	684895	ReturnStatement	return ;	135:8:4190:4196	684886	0	True				
ANR	684896	ExpressionStatement	m_windowType = type	138:4:4209:4228	684886	1	True				
ANR	684897	AssignmentExpression	m_windowType = type		684886	0		=			
ANR	684898	Identifier	m_windowType		684886	0					
ANR	684899	Identifier	type		684886	1					
ANR	684900	ExpressionStatement	adaptToScreen ( )	140:4:4235:4250	684886	2	True				
ANR	684901	CallExpression	adaptToScreen ( )		684886	0					
ANR	684902	Callee	adaptToScreen		684886	0					
ANR	684903	Identifier	adaptToScreen		684886	0					
ANR	684904	ArgumentList			684886	1					
ANR	684905	IdentifierDeclStatement	emit windowTypeChanged ( ) ;	142:4:4257:4281	684886	3	True				
ANR	684906	IdentifierDecl	windowTypeChanged ( )		684886	0					
ANR	684907	IdentifierDeclType	emit		684886	0					
ANR	684908	Identifier	windowTypeChanged		684886	1					
ANR	684909	ReturnType	void		684886	1					
ANR	684910	Identifier	DesktopView :: setWindowType		684886	2					
ANR	684911	ParameterList	DesktopView :: WindowType type		684886	3					
ANR	684912	Parameter	DesktopView :: WindowType type	132:32:4118:4145	684886	0	True				
ANR	684913	ParameterType	DesktopView :: WindowType		684886	0					
ANR	684914	Identifier	type		684886	1					
ANR	684915	CFGEntryNode	ENTRY		684886		True				
ANR	684916	CFGExitNode	EXIT		684886		True				
ANR	684917	Symbol	m_windowType		684886						
ANR	684918	Symbol	type		684886						
ANR	684919	Symbol	windowTypeChanged		684886						
ANR	684920	Function	DesktopView :: ensureWindowType	145:0:4286:5988							
ANR	684921	FunctionDef	DesktopView :: ensureWindowType ()		684920	0					
ANR	684922	CompoundStatement		146:0:4323:5988	684920	0					
ANR	684923	IfStatement	if ( ! screen ( ) )		684920	0					
ANR	684924	Condition	! screen ( )	148:8:4394:4402	684920	0	True				
ANR	684925	UnaryOperationExpression	! screen ( )		684920	0					
ANR	684926	UnaryOperator	!		684920	0					
ANR	684927	CallExpression	screen ( )		684920	1					
ANR	684928	Callee	screen		684920	0					
ANR	684929	Identifier	screen		684920	0					
ANR	684930	ArgumentList			684920	1					
ANR	684931	CompoundStatement		3:19:81:81	684920	1					
ANR	684932	ReturnStatement	return ;	149:8:4415:4421	684920	0	True				
ANR	684933	IfStatement	if ( m_windowType == Window || ShellManager :: s_forceWindowed )		684920	1					
ANR	684934	Condition	m_windowType == Window || ShellManager :: s_forceWindowed	152:8:4438:4492	684920	0	True				
ANR	684935	OrExpression	m_windowType == Window || ShellManager :: s_forceWindowed		684920	0		||			
ANR	684936	EqualityExpression	m_windowType == Window		684920	0		==			
ANR	684937	Identifier	m_windowType		684920	0					
ANR	684938	Identifier	Window		684920	1					
ANR	684939	Identifier	ShellManager :: s_forceWindowed		684920	1					
ANR	684940	CompoundStatement		7:65:171:171	684920	1					
ANR	684941	ExpressionStatement	setFlags ( Qt :: Window )	153:8:4505:4525	684920	0	True				
ANR	684942	CallExpression	setFlags ( Qt :: Window )		684920	0					
ANR	684943	Callee	setFlags		684920	0					
ANR	684944	Identifier	setFlags		684920	0					
ANR	684945	ArgumentList	Qt :: Window		684920	1					
ANR	684946	Argument	Qt :: Window		684920	0					
ANR	684947	Identifier	Qt :: Window		684920	0					
ANR	684948	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Normal )"	154:8:4535:4579	684920	1	True				
ANR	684949	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Normal )"		684920	0					
ANR	684950	Callee	KWindowSystem :: setType		684920	0					
ANR	684951	Identifier	KWindowSystem :: setType		684920	0					
ANR	684952	ArgumentList	winId ( )		684920	1					
ANR	684953	Argument	winId ( )		684920	0					
ANR	684954	CallExpression	winId ( )		684920	0					
ANR	684955	Callee	winId		684920	0					
ANR	684956	Identifier	winId		684920	0					
ANR	684957	ArgumentList			684920	1					
ANR	684958	Argument	NET :: Normal		684920	1					
ANR	684959	Identifier	NET :: Normal		684920	0					
ANR	684960	ExpressionStatement	"KWindowSystem :: clearState ( winId ( ) , NET :: FullScreen )"	155:8:4589:4640	684920	2	True				
ANR	684961	CallExpression	"KWindowSystem :: clearState ( winId ( ) , NET :: FullScreen )"		684920	0					
ANR	684962	Callee	KWindowSystem :: clearState		684920	0					
ANR	684963	Identifier	KWindowSystem :: clearState		684920	0					
ANR	684964	ArgumentList	winId ( )		684920	1					
ANR	684965	Argument	winId ( )		684920	0					
ANR	684966	CallExpression	winId ( )		684920	0					
ANR	684967	Callee	winId		684920	0					
ANR	684968	Identifier	winId		684920	0					
ANR	684969	ArgumentList			684920	1					
ANR	684970	Argument	NET :: FullScreen		684920	1					
ANR	684971	Identifier	NET :: FullScreen		684920	0					
ANR	684972	IfStatement	if ( m_shellSurface )		684920	3					
ANR	684973	Condition	m_shellSurface	156:12:4654:4667	684920	0	True				
ANR	684974	Identifier	m_shellSurface		684920	0					
ANR	684975	CompoundStatement		11:28:346:346	684920	1					
ANR	684976	ExpressionStatement	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Normal )	157:12:4684:4759	684920	0	True				
ANR	684977	CallExpression	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Normal )		684920	0					
ANR	684978	Callee	m_shellSurface -> setRole		684920	0					
ANR	684979	PtrMemberAccess	m_shellSurface -> setRole		684920	0					
ANR	684980	Identifier	m_shellSurface		684920	0					
ANR	684981	Identifier	setRole		684920	1					
ANR	684982	ArgumentList	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	1					
ANR	684983	Argument	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	0					
ANR	684984	Identifier	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	0					
ANR	684985	ExpressionStatement	m_shellSurface -> setSkipTaskbar ( false )	158:12:4773:4810	684920	1	True				
ANR	684986	CallExpression	m_shellSurface -> setSkipTaskbar ( false )		684920	0					
ANR	684987	Callee	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	684988	PtrMemberAccess	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	684989	Identifier	m_shellSurface		684920	0					
ANR	684990	Identifier	setSkipTaskbar		684920	1					
ANR	684991	ArgumentList	false		684920	1					
ANR	684992	Argument	false		684920	0					
ANR	684993	Identifier	false		684920	0					
ANR	684994	ElseStatement	else		684920	0					
ANR	684995	IfStatement	if ( m_windowType == Desktop )		684920	0					
ANR	684996	Condition	m_windowType == Desktop	161:15:4838:4860	684920	0	True				
ANR	684997	EqualityExpression	m_windowType == Desktop		684920	0		==			
ANR	684998	Identifier	m_windowType		684920	0					
ANR	684999	Identifier	Desktop		684920	1					
ANR	685000	CompoundStatement		16:40:539:539	684920	1					
ANR	685001	ExpressionStatement	setFlags ( Qt :: Window | Qt :: FramelessWindowHint )	162:8:4873:4919	684920	0	True				
ANR	685002	CallExpression	setFlags ( Qt :: Window | Qt :: FramelessWindowHint )		684920	0					
ANR	685003	Callee	setFlags		684920	0					
ANR	685004	Identifier	setFlags		684920	0					
ANR	685005	ArgumentList	Qt :: Window | Qt :: FramelessWindowHint		684920	1					
ANR	685006	Argument	Qt :: Window | Qt :: FramelessWindowHint		684920	0					
ANR	685007	InclusiveOrExpression	Qt :: Window | Qt :: FramelessWindowHint		684920	0		|			
ANR	685008	Identifier	Qt :: Window		684920	0					
ANR	685009	Identifier	Qt :: FramelessWindowHint		684920	1					
ANR	685010	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Desktop )"	163:8:4929:4974	684920	1	True				
ANR	685011	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Desktop )"		684920	0					
ANR	685012	Callee	KWindowSystem :: setType		684920	0					
ANR	685013	Identifier	KWindowSystem :: setType		684920	0					
ANR	685014	ArgumentList	winId ( )		684920	1					
ANR	685015	Argument	winId ( )		684920	0					
ANR	685016	CallExpression	winId ( )		684920	0					
ANR	685017	Callee	winId		684920	0					
ANR	685018	Identifier	winId		684920	0					
ANR	685019	ArgumentList			684920	1					
ANR	685020	Argument	NET :: Desktop		684920	1					
ANR	685021	Identifier	NET :: Desktop		684920	0					
ANR	685022	ExpressionStatement	"KWindowSystem :: setState ( winId ( ) , NET :: KeepBelow )"	164:8:4984:5032	684920	2	True				
ANR	685023	CallExpression	"KWindowSystem :: setState ( winId ( ) , NET :: KeepBelow )"		684920	0					
ANR	685024	Callee	KWindowSystem :: setState		684920	0					
ANR	685025	Identifier	KWindowSystem :: setState		684920	0					
ANR	685026	ArgumentList	winId ( )		684920	1					
ANR	685027	Argument	winId ( )		684920	0					
ANR	685028	CallExpression	winId ( )		684920	0					
ANR	685029	Callee	winId		684920	0					
ANR	685030	Identifier	winId		684920	0					
ANR	685031	ArgumentList			684920	1					
ANR	685032	Argument	NET :: KeepBelow		684920	1					
ANR	685033	Identifier	NET :: KeepBelow		684920	0					
ANR	685034	IfStatement	if ( m_shellSurface )		684920	3					
ANR	685035	Condition	m_shellSurface	165:12:5046:5059	684920	0	True				
ANR	685036	Identifier	m_shellSurface		684920	0					
ANR	685037	CompoundStatement		20:28:738:738	684920	1					
ANR	685038	ExpressionStatement	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Desktop )	166:12:5076:5152	684920	0	True				
ANR	685039	CallExpression	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Desktop )		684920	0					
ANR	685040	Callee	m_shellSurface -> setRole		684920	0					
ANR	685041	PtrMemberAccess	m_shellSurface -> setRole		684920	0					
ANR	685042	Identifier	m_shellSurface		684920	0					
ANR	685043	Identifier	setRole		684920	1					
ANR	685044	ArgumentList	KWayland :: Client :: PlasmaShellSurface :: Role :: Desktop		684920	1					
ANR	685045	Argument	KWayland :: Client :: PlasmaShellSurface :: Role :: Desktop		684920	0					
ANR	685046	Identifier	KWayland :: Client :: PlasmaShellSurface :: Role :: Desktop		684920	0					
ANR	685047	ExpressionStatement	m_shellSurface -> setSkipTaskbar ( true )	167:12:5166:5202	684920	1	True				
ANR	685048	CallExpression	m_shellSurface -> setSkipTaskbar ( true )		684920	0					
ANR	685049	Callee	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	685050	PtrMemberAccess	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	685051	Identifier	m_shellSurface		684920	0					
ANR	685052	Identifier	setSkipTaskbar		684920	1					
ANR	685053	ArgumentList	true		684920	1					
ANR	685054	Argument	true		684920	0					
ANR	685055	Identifier	true		684920	0					
ANR	685056	ElseStatement	else		684920	0					
ANR	685057	IfStatement	if ( m_windowType == WindowedDesktop )		684920	0					
ANR	685058	Condition	m_windowType == WindowedDesktop	170:15:5230:5260	684920	0	True				
ANR	685059	EqualityExpression	m_windowType == WindowedDesktop		684920	0		==			
ANR	685060	Identifier	m_windowType		684920	0					
ANR	685061	Identifier	WindowedDesktop		684920	1					
ANR	685062	CompoundStatement		25:48:939:939	684920	1					
ANR	685063	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Normal )"	171:8:5273:5317	684920	0	True				
ANR	685064	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Normal )"		684920	0					
ANR	685065	Callee	KWindowSystem :: setType		684920	0					
ANR	685066	Identifier	KWindowSystem :: setType		684920	0					
ANR	685067	ArgumentList	winId ( )		684920	1					
ANR	685068	Argument	winId ( )		684920	0					
ANR	685069	CallExpression	winId ( )		684920	0					
ANR	685070	Callee	winId		684920	0					
ANR	685071	Identifier	winId		684920	0					
ANR	685072	ArgumentList			684920	1					
ANR	685073	Argument	NET :: Normal		684920	1					
ANR	685074	Identifier	NET :: Normal		684920	0					
ANR	685075	ExpressionStatement	"KWindowSystem :: clearState ( winId ( ) , NET :: FullScreen )"	172:8:5327:5378	684920	1	True				
ANR	685076	CallExpression	"KWindowSystem :: clearState ( winId ( ) , NET :: FullScreen )"		684920	0					
ANR	685077	Callee	KWindowSystem :: clearState		684920	0					
ANR	685078	Identifier	KWindowSystem :: clearState		684920	0					
ANR	685079	ArgumentList	winId ( )		684920	1					
ANR	685080	Argument	winId ( )		684920	0					
ANR	685081	CallExpression	winId ( )		684920	0					
ANR	685082	Callee	winId		684920	0					
ANR	685083	Identifier	winId		684920	0					
ANR	685084	ArgumentList			684920	1					
ANR	685085	Argument	NET :: FullScreen		684920	1					
ANR	685086	Identifier	NET :: FullScreen		684920	0					
ANR	685087	ExpressionStatement	setFlags ( Qt :: FramelessWindowHint | flags ( ) )	173:8:5388:5431	684920	2	True				
ANR	685088	CallExpression	setFlags ( Qt :: FramelessWindowHint | flags ( ) )		684920	0					
ANR	685089	Callee	setFlags		684920	0					
ANR	685090	Identifier	setFlags		684920	0					
ANR	685091	ArgumentList	Qt :: FramelessWindowHint | flags ( )		684920	1					
ANR	685092	Argument	Qt :: FramelessWindowHint | flags ( )		684920	0					
ANR	685093	InclusiveOrExpression	Qt :: FramelessWindowHint | flags ( )		684920	0		|			
ANR	685094	Identifier	Qt :: FramelessWindowHint		684920	0					
ANR	685095	CallExpression	flags ( )		684920	1					
ANR	685096	Callee	flags		684920	0					
ANR	685097	Identifier	flags		684920	0					
ANR	685098	ArgumentList			684920	1					
ANR	685099	IfStatement	if ( m_shellSurface )		684920	3					
ANR	685100	Condition	m_shellSurface	174:12:5445:5458	684920	0	True				
ANR	685101	Identifier	m_shellSurface		684920	0					
ANR	685102	CompoundStatement		29:28:1137:1137	684920	1					
ANR	685103	ExpressionStatement	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Normal )	175:12:5475:5550	684920	0	True				
ANR	685104	CallExpression	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Normal )		684920	0					
ANR	685105	Callee	m_shellSurface -> setRole		684920	0					
ANR	685106	PtrMemberAccess	m_shellSurface -> setRole		684920	0					
ANR	685107	Identifier	m_shellSurface		684920	0					
ANR	685108	Identifier	setRole		684920	1					
ANR	685109	ArgumentList	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	1					
ANR	685110	Argument	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	0					
ANR	685111	Identifier	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	0					
ANR	685112	ExpressionStatement	m_shellSurface -> setSkipTaskbar ( false )	176:12:5564:5601	684920	1	True				
ANR	685113	CallExpression	m_shellSurface -> setSkipTaskbar ( false )		684920	0					
ANR	685114	Callee	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	685115	PtrMemberAccess	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	685116	Identifier	m_shellSurface		684920	0					
ANR	685117	Identifier	setSkipTaskbar		684920	1					
ANR	685118	ArgumentList	false		684920	1					
ANR	685119	Argument	false		684920	0					
ANR	685120	Identifier	false		684920	0					
ANR	685121	ElseStatement	else		684920	0					
ANR	685122	IfStatement	if ( m_windowType == FullScreen )		684920	0					
ANR	685123	Condition	m_windowType == FullScreen	179:15:5629:5654	684920	0	True				
ANR	685124	EqualityExpression	m_windowType == FullScreen		684920	0		==			
ANR	685125	Identifier	m_windowType		684920	0					
ANR	685126	Identifier	FullScreen		684920	1					
ANR	685127	CompoundStatement		34:43:1333:1333	684920	1					
ANR	685128	ExpressionStatement	setFlags ( Qt :: Window )	180:8:5667:5687	684920	0	True				
ANR	685129	CallExpression	setFlags ( Qt :: Window )		684920	0					
ANR	685130	Callee	setFlags		684920	0					
ANR	685131	Identifier	setFlags		684920	0					
ANR	685132	ArgumentList	Qt :: Window		684920	1					
ANR	685133	Argument	Qt :: Window		684920	0					
ANR	685134	Identifier	Qt :: Window		684920	0					
ANR	685135	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Normal )"	181:8:5697:5741	684920	1	True				
ANR	685136	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Normal )"		684920	0					
ANR	685137	Callee	KWindowSystem :: setType		684920	0					
ANR	685138	Identifier	KWindowSystem :: setType		684920	0					
ANR	685139	ArgumentList	winId ( )		684920	1					
ANR	685140	Argument	winId ( )		684920	0					
ANR	685141	CallExpression	winId ( )		684920	0					
ANR	685142	Callee	winId		684920	0					
ANR	685143	Identifier	winId		684920	0					
ANR	685144	ArgumentList			684920	1					
ANR	685145	Argument	NET :: Normal		684920	1					
ANR	685146	Identifier	NET :: Normal		684920	0					
ANR	685147	ExpressionStatement	"KWindowSystem :: setState ( winId ( ) , NET :: FullScreen )"	182:8:5751:5800	684920	2	True				
ANR	685148	CallExpression	"KWindowSystem :: setState ( winId ( ) , NET :: FullScreen )"		684920	0					
ANR	685149	Callee	KWindowSystem :: setState		684920	0					
ANR	685150	Identifier	KWindowSystem :: setState		684920	0					
ANR	685151	ArgumentList	winId ( )		684920	1					
ANR	685152	Argument	winId ( )		684920	0					
ANR	685153	CallExpression	winId ( )		684920	0					
ANR	685154	Callee	winId		684920	0					
ANR	685155	Identifier	winId		684920	0					
ANR	685156	ArgumentList			684920	1					
ANR	685157	Argument	NET :: FullScreen		684920	1					
ANR	685158	Identifier	NET :: FullScreen		684920	0					
ANR	685159	IfStatement	if ( m_shellSurface )		684920	3					
ANR	685160	Condition	m_shellSurface	183:12:5814:5827	684920	0	True				
ANR	685161	Identifier	m_shellSurface		684920	0					
ANR	685162	CompoundStatement		38:28:1506:1506	684920	1					
ANR	685163	ExpressionStatement	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Normal )	184:12:5844:5919	684920	0	True				
ANR	685164	CallExpression	m_shellSurface -> setRole ( KWayland :: Client :: PlasmaShellSurface :: Role :: Normal )		684920	0					
ANR	685165	Callee	m_shellSurface -> setRole		684920	0					
ANR	685166	PtrMemberAccess	m_shellSurface -> setRole		684920	0					
ANR	685167	Identifier	m_shellSurface		684920	0					
ANR	685168	Identifier	setRole		684920	1					
ANR	685169	ArgumentList	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	1					
ANR	685170	Argument	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	0					
ANR	685171	Identifier	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920	0					
ANR	685172	ExpressionStatement	m_shellSurface -> setSkipTaskbar ( false )	185:12:5933:5970	684920	1	True				
ANR	685173	CallExpression	m_shellSurface -> setSkipTaskbar ( false )		684920	0					
ANR	685174	Callee	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	685175	PtrMemberAccess	m_shellSurface -> setSkipTaskbar		684920	0					
ANR	685176	Identifier	m_shellSurface		684920	0					
ANR	685177	Identifier	setSkipTaskbar		684920	1					
ANR	685178	ArgumentList	false		684920	1					
ANR	685179	Argument	false		684920	0					
ANR	685180	Identifier	false		684920	0					
ANR	685181	ReturnType	void		684920	1					
ANR	685182	Identifier	DesktopView :: ensureWindowType		684920	2					
ANR	685183	ParameterList			684920	3					
ANR	685184	CFGEntryNode	ENTRY		684920		True				
ANR	685185	CFGExitNode	EXIT		684920		True				
ANR	685186	Symbol	Window		684920						
ANR	685187	Symbol	KWayland :: Client :: PlasmaShellSurface :: Role :: Normal		684920						
ANR	685188	Symbol	false		684920						
ANR	685189	Symbol	Qt :: FramelessWindowHint		684920						
ANR	685190	Symbol	NET :: Desktop		684920						
ANR	685191	Symbol	flags		684920						
ANR	685192	Symbol	screen		684920						
ANR	685193	Symbol	winId		684920						
ANR	685194	Symbol	WindowedDesktop		684920						
ANR	685195	Symbol	NET :: KeepBelow		684920						
ANR	685196	Symbol	NET :: FullScreen		684920						
ANR	685197	Symbol	m_shellSurface		684920						
ANR	685198	Symbol	Qt :: Window		684920						
ANR	685199	Symbol	Desktop		684920						
ANR	685200	Symbol	true		684920						
ANR	685201	Symbol	ShellManager :: s_forceWindowed		684920						
ANR	685202	Symbol	m_windowType		684920						
ANR	685203	Symbol	NET :: Normal		684920						
ANR	685204	Symbol	FullScreen		684920						
ANR	685205	Symbol	KWayland :: Client :: PlasmaShellSurface :: Role :: Desktop		684920						
ANR	685206	Function	DesktopView :: sessionType	190:0:5991:6183							
ANR	685207	FunctionDef	DesktopView :: sessionType ()		685206	0					
ANR	685208	CompoundStatement		191:0:6049:6183	685206	0					
ANR	685209	Statement	if	192:4:6055:6056	685206	0	True				
ANR	685210	Statement	(	192:7:6058:6058	685206	1	True				
ANR	685211	Statement	qobject_cast	192:8:6059:6070	685206	2	True				
ANR	685212	Statement	<	192:20:6071:6071	685206	3	True				
ANR	685213	Statement	ShellCorona	192:21:6072:6082	685206	4	True				
ANR	685214	Statement	*	192:33:6084:6084	685206	5	True				
ANR	685215	Statement	>	192:34:6085:6085	685206	6	True				
ANR	685216	Statement	(	192:35:6086:6086	685206	7	True				
ANR	685217	Statement	corona	192:36:6087:6092	685206	8	True				
ANR	685218	Statement	(	192:42:6093:6093	685206	9	True				
ANR	685219	Statement	)	192:43:6094:6094	685206	10	True				
ANR	685220	Statement	)	192:44:6095:6095	685206	11	True				
ANR	685221	Statement	)	192:45:6096:6096	685206	12	True				
ANR	685222	CompoundStatement		2:47:48:48	685206	13					
ANR	685223	ReturnStatement	return ShellSession ;	193:8:6108:6127	685206	0	True				
ANR	685224	Identifier	ShellSession		685206	0					
ANR	685225	ReturnType	DesktopView :: SessionType		685206	1					
ANR	685226	Identifier	DesktopView :: sessionType		685206	2					
ANR	685227	ParameterList			685206	3					
ANR	685228	CFGEntryNode	ENTRY		685206		True				
ANR	685229	CFGExitNode	EXIT		685206		True				
ANR	685230	Symbol	ShellSession		685206						
ANR	685231	Function	DesktopView :: event	199:0:6186:7108							
ANR	685232	FunctionDef	DesktopView :: event (QEvent * e)		685231	0					
ANR	685233	CompoundStatement		200:0:6221:7108	685231	0					
ANR	685234	IfStatement	if ( e -> type ( ) == QEvent :: KeyRelease )		685231	0					
ANR	685235	Condition	e -> type ( ) == QEvent :: KeyRelease	201:8:6231:6261	685231	0	True				
ANR	685236	EqualityExpression	e -> type ( ) == QEvent :: KeyRelease		685231	0		==			
ANR	685237	CallExpression	e -> type ( )		685231	0					
ANR	685238	Callee	e -> type		685231	0					
ANR	685239	PtrMemberAccess	e -> type		685231	0					
ANR	685240	Identifier	e		685231	0					
ANR	685241	Identifier	type		685231	1					
ANR	685242	ArgumentList			685231	1					
ANR	685243	Identifier	QEvent :: KeyRelease		685231	1					
ANR	685244	CompoundStatement		2:41:42:42	685231	1					
ANR	685245	Statement	QKeyEvent	202:8:6274:6282	685231	0	True				
ANR	685246	Statement	*	202:18:6284:6284	685231	1	True				
ANR	685247	Statement	ke	202:19:6285:6286	685231	2	True				
ANR	685248	Statement	=	202:22:6288:6288	685231	3	True				
ANR	685249	Statement	static_cast	202:24:6290:6300	685231	4	True				
ANR	685250	Statement	<	202:35:6301:6301	685231	5	True				
ANR	685251	Statement	QKeyEvent	202:36:6302:6310	685231	6	True				
ANR	685252	Statement	*	202:46:6312:6312	685231	7	True				
ANR	685253	Statement	>	202:47:6313:6313	685231	8	True				
ANR	685254	ExpressionStatement	e	202:48:6314:6317	685231	9	True				
ANR	685255	Identifier	e		685231	0					
ANR	685256	IfStatement	if ( KWindowSystem :: showingDesktop ( ) && ke -> key ( ) == Qt :: Key_Escape )		685231	10					
ANR	685257	Condition	KWindowSystem :: showingDesktop ( ) && ke -> key ( ) == Qt :: Key_Escape	203:12:6331:6392	685231	0	True				
ANR	685258	AndExpression	KWindowSystem :: showingDesktop ( ) && ke -> key ( ) == Qt :: Key_Escape		685231	0		&&			
ANR	685259	CallExpression	KWindowSystem :: showingDesktop ( )		685231	0					
ANR	685260	Callee	KWindowSystem :: showingDesktop		685231	0					
ANR	685261	Identifier	KWindowSystem :: showingDesktop		685231	0					
ANR	685262	ArgumentList			685231	1					
ANR	685263	EqualityExpression	ke -> key ( ) == Qt :: Key_Escape		685231	1		==			
ANR	685264	CallExpression	ke -> key ( )		685231	0					
ANR	685265	Callee	ke -> key		685231	0					
ANR	685266	PtrMemberAccess	ke -> key		685231	0					
ANR	685267	Identifier	ke		685231	0					
ANR	685268	Identifier	key		685231	1					
ANR	685269	ArgumentList			685231	1					
ANR	685270	Identifier	Qt :: Key_Escape		685231	1					
ANR	685271	CompoundStatement		4:76:173:173	685231	1					
ANR	685272	Statement	ShellCorona	204:12:6409:6419	685231	0	True				
ANR	685273	Statement	*	204:24:6421:6421	685231	1	True				
ANR	685274	Statement	c	204:25:6422:6422	685231	2	True				
ANR	685275	Statement	=	204:27:6424:6424	685231	3	True				
ANR	685276	Statement	qobject_cast	204:29:6426:6437	685231	4	True				
ANR	685277	Statement	<	204:41:6438:6438	685231	5	True				
ANR	685278	Statement	ShellCorona	204:42:6439:6449	685231	6	True				
ANR	685279	Statement	*	204:54:6451:6451	685231	7	True				
ANR	685280	Statement	>	204:55:6452:6452	685231	8	True				
ANR	685281	ExpressionStatement	corona ( )	204:56:6453:6463	685231	9	True				
ANR	685282	CallExpression	corona ( )		685231	0					
ANR	685283	Callee	corona		685231	0					
ANR	685284	Identifier	corona		685231	0					
ANR	685285	ArgumentList			685231	1					
ANR	685286	IfStatement	if ( c )		685231	10					
ANR	685287	Condition	c	205:16:6481:6481	685231	0	True				
ANR	685288	Identifier	c		685231	0					
ANR	685289	CompoundStatement		6:19:262:262	685231	1					
ANR	685290	ExpressionStatement	KWindowSystem :: setShowingDesktop ( false )	206:16:6502:6541	685231	0	True				
ANR	685291	CallExpression	KWindowSystem :: setShowingDesktop ( false )		685231	0					
ANR	685292	Callee	KWindowSystem :: setShowingDesktop		685231	0					
ANR	685293	Identifier	KWindowSystem :: setShowingDesktop		685231	0					
ANR	685294	ArgumentList	false		685231	1					
ANR	685295	Argument	false		685231	0					
ANR	685296	Identifier	false		685231	0					
ANR	685297	ElseStatement	else		685231	0					
ANR	685298	IfStatement	if ( e -> type ( ) == QEvent :: PlatformSurface )		685231	0					
ANR	685299	Condition	e -> type ( ) == QEvent :: PlatformSurface	209:15:6582:6617	685231	0	True				
ANR	685300	EqualityExpression	e -> type ( ) == QEvent :: PlatformSurface		685231	0		==			
ANR	685301	CallExpression	e -> type ( )		685231	0					
ANR	685302	Callee	e -> type		685231	0					
ANR	685303	PtrMemberAccess	e -> type		685231	0					
ANR	685304	Identifier	e		685231	0					
ANR	685305	Identifier	type		685231	1					
ANR	685306	ArgumentList			685231	1					
ANR	685307	Identifier	QEvent :: PlatformSurface		685231	1					
ANR	685308	CompoundStatement		10:53:398:398	685231	1					
ANR	685309	Statement	if	210:8:6630:6631	685231	0	True				
ANR	685310	Statement	(	210:11:6633:6633	685231	1	True				
ANR	685311	Statement	auto	210:12:6634:6637	685231	2	True				
ANR	685312	Statement	pe	210:17:6639:6640	685231	3	True				
ANR	685313	Statement	=	210:20:6642:6642	685231	4	True				
ANR	685314	Statement	dynamic_cast	210:22:6644:6655	685231	5	True				
ANR	685315	Statement	<	210:34:6656:6656	685231	6	True				
ANR	685316	Statement	QPlatformSurfaceEvent	210:35:6657:6677	685231	7	True				
ANR	685317	Statement	*	210:56:6678:6678	685231	8	True				
ANR	685318	Statement	>	210:57:6679:6679	685231	9	True				
ANR	685319	Statement	(	210:58:6680:6680	685231	10	True				
ANR	685320	Statement	e	210:59:6681:6681	685231	11	True				
ANR	685321	Statement	)	210:60:6682:6682	685231	12	True				
ANR	685322	Statement	)	210:61:6683:6683	685231	13	True				
ANR	685323	CompoundStatement		11:63:463:463	685231	14					
ANR	685324	SwitchStatement	switch ( pe -> surfaceEventType ( ) )		685231	0					
ANR	685325	Condition	pe -> surfaceEventType ( )	211:20:6707:6728	685231	0	True				
ANR	685326	CallExpression	pe -> surfaceEventType ( )		685231	0					
ANR	685327	Callee	pe -> surfaceEventType		685231	0					
ANR	685328	PtrMemberAccess	pe -> surfaceEventType		685231	0					
ANR	685329	Identifier	pe		685231	0					
ANR	685330	Identifier	surfaceEventType		685231	1					
ANR	685331	ArgumentList			685231	1					
ANR	685332	CompoundStatement		12:44:509:509	685231	1					
ANR	685333	Label	case QPlatformSurfaceEvent :: SurfaceCreated :	212:12:6745:6787	685231	0	True				
ANR	685334	Identifier	QPlatformSurfaceEvent :: SurfaceCreated		685231	0					
ANR	685335	ExpressionStatement	setupWaylandIntegration ( )	213:16:6805:6830	685231	1	True				
ANR	685336	CallExpression	setupWaylandIntegration ( )		685231	0					
ANR	685337	Callee	setupWaylandIntegration		685231	0					
ANR	685338	Identifier	setupWaylandIntegration		685231	0					
ANR	685339	ArgumentList			685231	1					
ANR	685340	BreakStatement	break ;	214:16:6848:6853	685231	2	True				
ANR	685341	Label	case QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed :	215:12:6867:6920	685231	3	True				
ANR	685342	Identifier	QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed		685231	0					
ANR	685343	Statement	delete	216:16:6938:6943	685231	4	True				
ANR	685344	ExpressionStatement	m_shellSurface	216:23:6945:6959	685231	5	True				
ANR	685345	Identifier	m_shellSurface		685231	0					
ANR	685346	ExpressionStatement	m_shellSurface = nullptr	217:16:6977:7001	685231	6	True				
ANR	685347	AssignmentExpression	m_shellSurface = nullptr		685231	0		=			
ANR	685348	Identifier	m_shellSurface		685231	0					
ANR	685349	Identifier	nullptr		685231	1					
ANR	685350	BreakStatement	break ;	218:16:7019:7024	685231	7	True				
ANR	685351	ReturnStatement	return PlasmaQuick :: ContainmentView :: event ( e ) ;	223:4:7061:7106	685231	1	True				
ANR	685352	CallExpression	PlasmaQuick :: ContainmentView :: event ( e )		685231	0					
ANR	685353	Callee	PlasmaQuick :: ContainmentView :: event		685231	0					
ANR	685354	Identifier	PlasmaQuick :: ContainmentView :: event		685231	0					
ANR	685355	ArgumentList	e		685231	1					
ANR	685356	Argument	e		685231	0					
ANR	685357	Identifier	e		685231	0					
ANR	685358	ReturnType	bool		685231	1					
ANR	685359	Identifier	DesktopView :: event		685231	2					
ANR	685360	ParameterList	QEvent * e		685231	3					
ANR	685361	Parameter	QEvent * e	199:24:6210:6218	685231	0	True				
ANR	685362	ParameterType	QEvent *		685231	0					
ANR	685363	Identifier	e		685231	1					
ANR	685364	CFGEntryNode	ENTRY		685231		True				
ANR	685365	CFGExitNode	EXIT		685231		True				
ANR	685366	Symbol	pe -> surfaceEventType		685231						
ANR	685367	Symbol	* ke		685231						
ANR	685368	Symbol	c		685231						
ANR	685369	Symbol	e		685231						
ANR	685370	Symbol	false		685231						
ANR	685371	Symbol	PlasmaQuick :: ContainmentView :: event		685231						
ANR	685372	Symbol	ke -> key		685231						
ANR	685373	Symbol	e -> type		685231						
ANR	685374	Symbol	* e		685231						
ANR	685375	Symbol	Qt :: Key_Escape		685231						
ANR	685376	Symbol	m_shellSurface		685231						
ANR	685377	Symbol	pe		685231						
ANR	685378	Symbol	QEvent :: KeyRelease		685231						
ANR	685379	Symbol	KWindowSystem :: showingDesktop		685231						
ANR	685380	Symbol	* pe		685231						
ANR	685381	Symbol	ke		685231						
ANR	685382	Symbol	QEvent :: PlatformSurface		685231						
ANR	685383	Symbol	nullptr		685231						
ANR	685384	Function	DesktopView :: keyPressEvent	226:0:7111:7852							
ANR	685385	FunctionDef	DesktopView :: keyPressEvent (QKeyEvent * e)		685384	0					
ANR	685386	CompoundStatement		227:0:7157:7852	685384	0					
ANR	685387	ExpressionStatement	ContainmentView :: keyPressEvent ( e )	228:4:7163:7196	685384	0	True				
ANR	685388	CallExpression	ContainmentView :: keyPressEvent ( e )		685384	0					
ANR	685389	Callee	ContainmentView :: keyPressEvent		685384	0					
ANR	685390	Identifier	ContainmentView :: keyPressEvent		685384	0					
ANR	685391	ArgumentList	e		685384	1					
ANR	685392	Argument	e		685384	0					
ANR	685393	Identifier	e		685384	0					
ANR	685394	IfStatement	if ( ( ! e -> modifiers ( ) || e -> modifiers ( ) == Qt :: ShiftModifier ) && ! e -> isAccepted ( ) )		685384	1					
ANR	685395	Condition	( ! e -> modifiers ( ) || e -> modifiers ( ) == Qt :: ShiftModifier ) && ! e -> isAccepted ( )	231:8:7302:7377	685384	0	True				
ANR	685396	AndExpression	( ! e -> modifiers ( ) || e -> modifiers ( ) == Qt :: ShiftModifier ) && ! e -> isAccepted ( )		685384	0		&&			
ANR	685397	OrExpression	! e -> modifiers ( ) || e -> modifiers ( ) == Qt :: ShiftModifier		685384	0		||			
ANR	685398	UnaryOperationExpression	! e -> modifiers ( )		685384	0					
ANR	685399	UnaryOperator	!		685384	0					
ANR	685400	CallExpression	e -> modifiers ( )		685384	1					
ANR	685401	Callee	e -> modifiers		685384	0					
ANR	685402	PtrMemberAccess	e -> modifiers		685384	0					
ANR	685403	Identifier	e		685384	0					
ANR	685404	Identifier	modifiers		685384	1					
ANR	685405	ArgumentList			685384	1					
ANR	685406	EqualityExpression	e -> modifiers ( ) == Qt :: ShiftModifier		685384	1		==			
ANR	685407	CallExpression	e -> modifiers ( )		685384	0					
ANR	685408	Callee	e -> modifiers		685384	0					
ANR	685409	PtrMemberAccess	e -> modifiers		685384	0					
ANR	685410	Identifier	e		685384	0					
ANR	685411	Identifier	modifiers		685384	1					
ANR	685412	ArgumentList			685384	1					
ANR	685413	Identifier	Qt :: ShiftModifier		685384	1					
ANR	685414	UnaryOperationExpression	! e -> isAccepted ( )		685384	1					
ANR	685415	UnaryOperator	!		685384	0					
ANR	685416	CallExpression	e -> isAccepted ( )		685384	1					
ANR	685417	Callee	e -> isAccepted		685384	0					
ANR	685418	PtrMemberAccess	e -> isAccepted		685384	0					
ANR	685419	Identifier	e		685384	0					
ANR	685420	Identifier	isAccepted		685384	1					
ANR	685421	ArgumentList			685384	1					
ANR	685422	CompoundStatement		6:8:232:272	685384	1					
ANR	685423	IdentifierDeclStatement	const QString text = e -> text ( ) . trimmed ( ) ;	232:8:7390:7430	685384	0	True				
ANR	685424	IdentifierDecl	text = e -> text ( ) . trimmed ( )		685384	0					
ANR	685425	IdentifierDeclType	const QString		685384	0					
ANR	685426	Identifier	text		685384	1					
ANR	685427	AssignmentExpression	text = e -> text ( ) . trimmed ( )		685384	2		=			
ANR	685428	Identifier	text		685384	0					
ANR	685429	CallExpression	e -> text ( ) . trimmed ( )		685384	1					
ANR	685430	Callee	e -> text ( ) . trimmed		685384	0					
ANR	685431	MemberAccess	e -> text ( ) . trimmed		685384	0					
ANR	685432	CallExpression	e -> text ( )		685384	0					
ANR	685433	Callee	e -> text		685384	0					
ANR	685434	PtrMemberAccess	e -> text		685384	0					
ANR	685435	Identifier	e		685384	0					
ANR	685436	Identifier	text		685384	1					
ANR	685437	ArgumentList			685384	1					
ANR	685438	Identifier	trimmed		685384	1					
ANR	685439	ArgumentList			685384	1					
ANR	685440	IfStatement	if ( ! text . isEmpty ( ) && text [ 0 ] . isPrint ( ) )		685384	1					
ANR	685441	Condition	! text . isEmpty ( ) && text [ 0 ] . isPrint ( )	233:12:7444:7479	685384	0	True				
ANR	685442	AndExpression	! text . isEmpty ( ) && text [ 0 ] . isPrint ( )		685384	0		&&			
ANR	685443	UnaryOperationExpression	! text . isEmpty ( )		685384	0					
ANR	685444	UnaryOperator	!		685384	0					
ANR	685445	CallExpression	text . isEmpty ( )		685384	1					
ANR	685446	Callee	text . isEmpty		685384	0					
ANR	685447	MemberAccess	text . isEmpty		685384	0					
ANR	685448	Identifier	text		685384	0					
ANR	685449	Identifier	isEmpty		685384	1					
ANR	685450	ArgumentList			685384	1					
ANR	685451	CallExpression	text [ 0 ] . isPrint ( )		685384	1					
ANR	685452	Callee	text [ 0 ] . isPrint		685384	0					
ANR	685453	MemberAccess	text [ 0 ] . isPrint		685384	0					
ANR	685454	ArrayIndexing	text [ 0 ]		685384	0					
ANR	685455	Identifier	text		685384	0					
ANR	685456	PrimaryExpression	0		685384	1					
ANR	685457	Identifier	isPrint		685384	1					
ANR	685458	ArgumentList			685384	1					
ANR	685459	CompoundStatement		12:12:522:618	685384	1					
ANR	685460	IdentifierDeclStatement	"const QString interface ( QStringLiteral ( ""org.kde.krunner"" ) ) ;"	234:12:7496:7554	685384	0	True				
ANR	685461	IdentifierDecl	"interface ( QStringLiteral ( ""org.kde.krunner"" ) )"		685384	0					
ANR	685462	IdentifierDeclType	const QString		685384	0					
ANR	685463	Identifier	interface		685384	1					
ANR	685464	CallExpression	"QStringLiteral ( ""org.kde.krunner"" )"		685384	2					
ANR	685465	Callee	QStringLiteral		685384	0					
ANR	685466	Identifier	QStringLiteral		685384	0					
ANR	685467	ArgumentList	"""org.kde.krunner"""		685384	1					
ANR	685468	Argument	"""org.kde.krunner"""		685384	0					
ANR	685469	PrimaryExpression	"""org.kde.krunner"""		685384	0					
ANR	685470	IfStatement	"if ( ! KAuthorized :: authorize ( QStringLiteral ( ""run_command"" ) ) )"		685384	1					
ANR	685471	Condition	"! KAuthorized :: authorize ( QStringLiteral ( ""run_command"" ) )"	235:16:7572:7625	685384	0	True				
ANR	685472	UnaryOperationExpression	"! KAuthorized :: authorize ( QStringLiteral ( ""run_command"" ) )"		685384	0					
ANR	685473	UnaryOperator	!		685384	0					
ANR	685474	CallExpression	"KAuthorized :: authorize ( QStringLiteral ( ""run_command"" ) )"		685384	1					
ANR	685475	Callee	KAuthorized :: authorize		685384	0					
ANR	685476	Identifier	KAuthorized :: authorize		685384	0					
ANR	685477	ArgumentList	"QStringLiteral ( ""run_command"" )"		685384	1					
ANR	685478	Argument	"QStringLiteral ( ""run_command"" )"		685384	0					
ANR	685479	CallExpression	"QStringLiteral ( ""run_command"" )"		685384	0					
ANR	685480	Callee	QStringLiteral		685384	0					
ANR	685481	Identifier	QStringLiteral		685384	0					
ANR	685482	ArgumentList	"""run_command"""		685384	1					
ANR	685483	Argument	"""run_command"""		685384	0					
ANR	685484	PrimaryExpression	"""run_command"""		685384	0					
ANR	685485	CompoundStatement		9:72:470:470	685384	1					
ANR	685486	ReturnStatement	return ;	236:16:7646:7652	685384	0	True				
ANR	685487	IdentifierDeclStatement	"org :: kde :: krunner :: App krunner ( interface , QStringLiteral ( ""/App"" ) , QDBusConnection :: sessionBus ( ) ) ;"	238:12:7680:7776	685384	2	True				
ANR	685488	IdentifierDecl	"krunner ( interface , QStringLiteral ( ""/App"" ) , QDBusConnection :: sessionBus ( ) )"		685384	0					
ANR	685489	IdentifierDeclType	org :: kde :: krunner :: App		685384	0					
ANR	685490	Identifier	krunner		685384	1					
ANR	685491	Expression	"interface , QStringLiteral ( ""/App"" ) , QDBusConnection :: sessionBus ( )"		685384	2					
ANR	685492	Identifier	interface		685384	0					
ANR	685493	Expression	"QStringLiteral ( ""/App"" ) , QDBusConnection :: sessionBus ( )"		685384	1					
ANR	685494	CallExpression	"QStringLiteral ( ""/App"" )"		685384	0					
ANR	685495	Callee	QStringLiteral		685384	0					
ANR	685496	Identifier	QStringLiteral		685384	0					
ANR	685497	ArgumentList	"""/App"""		685384	1					
ANR	685498	Argument	"""/App"""		685384	0					
ANR	685499	PrimaryExpression	"""/App"""		685384	0					
ANR	685500	CallExpression	QDBusConnection :: sessionBus ( )		685384	1					
ANR	685501	Callee	QDBusConnection :: sessionBus		685384	0					
ANR	685502	Identifier	QDBusConnection :: sessionBus		685384	0					
ANR	685503	ArgumentList			685384	1					
ANR	685504	ExpressionStatement	krunner . query ( text )	239:12:7790:7809	685384	3	True				
ANR	685505	CallExpression	krunner . query ( text )		685384	0					
ANR	685506	Callee	krunner . query		685384	0					
ANR	685507	MemberAccess	krunner . query		685384	0					
ANR	685508	Identifier	krunner		685384	0					
ANR	685509	Identifier	query		685384	1					
ANR	685510	ArgumentList	text		685384	1					
ANR	685511	Argument	text		685384	0					
ANR	685512	Identifier	text		685384	0					
ANR	685513	ExpressionStatement	e -> accept ( )	240:12:7823:7834	685384	4	True				
ANR	685514	CallExpression	e -> accept ( )		685384	0					
ANR	685515	Callee	e -> accept		685384	0					
ANR	685516	PtrMemberAccess	e -> accept		685384	0					
ANR	685517	Identifier	e		685384	0					
ANR	685518	Identifier	accept		685384	1					
ANR	685519	ArgumentList			685384	1					
ANR	685520	ReturnType	void		685384	1					
ANR	685521	Identifier	DesktopView :: keyPressEvent		685384	2					
ANR	685522	ParameterList	QKeyEvent * e		685384	3					
ANR	685523	Parameter	QKeyEvent * e	226:32:7143:7154	685384	0	True				
ANR	685524	ParameterType	QKeyEvent *		685384	0					
ANR	685525	Identifier	e		685384	1					
ANR	685526	CFGEntryNode	ENTRY		685384		True				
ANR	685527	CFGExitNode	EXIT		685384		True				
ANR	685528	Symbol	e -> text		685384						
ANR	685529	Symbol	e		685384						
ANR	685530	Symbol	KAuthorized :: authorize		685384						
ANR	685531	Symbol	* text		685384						
ANR	685532	Symbol	Qt :: ShiftModifier		685384						
ANR	685533	Symbol	interface		685384						
ANR	685534	Symbol	* e		685384						
ANR	685535	Symbol	e -> isAccepted		685384						
ANR	685536	Symbol	e -> modifiers		685384						
ANR	685537	Symbol	e -> text ( ) . trimmed		685384						
ANR	685538	Symbol	text [ 0 ] . isPrint		685384						
ANR	685539	Symbol	QStringLiteral		685384						
ANR	685540	Symbol	text		685384						
ANR	685541	Symbol	text . isEmpty		685384						
ANR	685542	Symbol	krunner		685384						
ANR	685543	Function	DesktopView :: showConfigurationInterface	246:0:7856:8646							
ANR	685544	FunctionDef	DesktopView :: showConfigurationInterface (Plasma :: Applet * applet)		685543	0					
ANR	685545	CompoundStatement		247:0:7925:8646	685543	0					
ANR	685546	IfStatement	if ( m_configView )		685543	0					
ANR	685547	Condition	m_configView	248:8:7935:7946	685543	0	True				
ANR	685548	Identifier	m_configView		685543	0					
ANR	685549	CompoundStatement		2:22:23:23	685543	1					
ANR	685550	IfStatement	if ( m_configView -> applet ( ) != applet )		685543	0					
ANR	685551	Condition	m_configView -> applet ( ) != applet	249:12:7963:7994	685543	0	True				
ANR	685552	EqualityExpression	m_configView -> applet ( ) != applet		685543	0		!=			
ANR	685553	CallExpression	m_configView -> applet ( )		685543	0					
ANR	685554	Callee	m_configView -> applet		685543	0					
ANR	685555	PtrMemberAccess	m_configView -> applet		685543	0					
ANR	685556	Identifier	m_configView		685543	0					
ANR	685557	Identifier	applet		685543	1					
ANR	685558	ArgumentList			685543	1					
ANR	685559	Identifier	applet		685543	1					
ANR	685560	CompoundStatement		3:46:71:71	685543	1					
ANR	685561	ExpressionStatement	m_configView -> hide ( )	250:12:8011:8031	685543	0	True				
ANR	685562	CallExpression	m_configView -> hide ( )		685543	0					
ANR	685563	Callee	m_configView -> hide		685543	0					
ANR	685564	PtrMemberAccess	m_configView -> hide		685543	0					
ANR	685565	Identifier	m_configView		685543	0					
ANR	685566	Identifier	hide		685543	1					
ANR	685567	ArgumentList			685543	1					
ANR	685568	ExpressionStatement	m_configView -> deleteLater ( )	251:12:8045:8072	685543	1	True				
ANR	685569	CallExpression	m_configView -> deleteLater ( )		685543	0					
ANR	685570	Callee	m_configView -> deleteLater		685543	0					
ANR	685571	PtrMemberAccess	m_configView -> deleteLater		685543	0					
ANR	685572	Identifier	m_configView		685543	0					
ANR	685573	Identifier	deleteLater		685543	1					
ANR	685574	ArgumentList			685543	1					
ANR	685575	ElseStatement	else		685543	0					
ANR	685576	CompoundStatement		6:15:163:163	685543	0					
ANR	685577	ExpressionStatement	m_configView -> show ( )	253:12:8103:8123	685543	0	True				
ANR	685578	CallExpression	m_configView -> show ( )		685543	0					
ANR	685579	Callee	m_configView -> show		685543	0					
ANR	685580	PtrMemberAccess	m_configView -> show		685543	0					
ANR	685581	Identifier	m_configView		685543	0					
ANR	685582	Identifier	show		685543	1					
ANR	685583	ArgumentList			685543	1					
ANR	685584	ExpressionStatement	m_configView -> requestActivate ( )	254:12:8137:8168	685543	1	True				
ANR	685585	CallExpression	m_configView -> requestActivate ( )		685543	0					
ANR	685586	Callee	m_configView -> requestActivate		685543	0					
ANR	685587	PtrMemberAccess	m_configView -> requestActivate		685543	0					
ANR	685588	Identifier	m_configView		685543	0					
ANR	685589	Identifier	requestActivate		685543	1					
ANR	685590	ArgumentList			685543	1					
ANR	685591	ReturnStatement	return ;	255:12:8182:8188	685543	2	True				
ANR	685592	IfStatement	if ( ! applet || ! applet -> containment ( ) )		685543	1					
ANR	685593	Condition	! applet || ! applet -> containment ( )	259:8:8215:8247	685543	0	True				
ANR	685594	OrExpression	! applet || ! applet -> containment ( )		685543	0		||			
ANR	685595	UnaryOperationExpression	! applet		685543	0					
ANR	685596	UnaryOperator	!		685543	0					
ANR	685597	Identifier	applet		685543	1					
ANR	685598	UnaryOperationExpression	! applet -> containment ( )		685543	1					
ANR	685599	UnaryOperator	!		685543	0					
ANR	685600	CallExpression	applet -> containment ( )		685543	1					
ANR	685601	Callee	applet -> containment		685543	0					
ANR	685602	PtrMemberAccess	applet -> containment		685543	0					
ANR	685603	Identifier	applet		685543	0					
ANR	685604	Identifier	containment		685543	1					
ANR	685605	ArgumentList			685543	1					
ANR	685606	CompoundStatement		13:43:324:324	685543	1					
ANR	685607	ReturnStatement	return ;	260:8:8260:8266	685543	0	True				
ANR	685608	Statement	Plasma	263:4:8279:8284	685543	2	True				
ANR	685609	Statement	::	263:10:8285:8286	685543	3	True				
ANR	685610	Statement	Containment	263:12:8287:8297	685543	4	True				
ANR	685611	Statement	*	263:24:8299:8299	685543	5	True				
ANR	685612	Statement	cont	263:25:8300:8303	685543	6	True				
ANR	685613	Statement	=	263:30:8305:8305	685543	7	True				
ANR	685614	Statement	qobject_cast	263:32:8307:8318	685543	8	True				
ANR	685615	Statement	<	263:44:8319:8319	685543	9	True				
ANR	685616	Statement	Plasma	263:45:8320:8325	685543	10	True				
ANR	685617	Statement	::	263:51:8326:8327	685543	11	True				
ANR	685618	Statement	Containment	263:53:8328:8338	685543	12	True				
ANR	685619	Statement	*	263:65:8340:8340	685543	13	True				
ANR	685620	Statement	>	263:66:8341:8341	685543	14	True				
ANR	685621	ExpressionStatement	applet	263:67:8342:8350	685543	15	True				
ANR	685622	Identifier	applet		685543	0					
ANR	685623	IfStatement	if ( cont && cont -> isContainment ( ) )		685543	16					
ANR	685624	Condition	cont && cont -> isContainment ( )	265:8:8361:8389	685543	0	True				
ANR	685625	AndExpression	cont && cont -> isContainment ( )		685543	0		&&			
ANR	685626	Identifier	cont		685543	0					
ANR	685627	CallExpression	cont -> isContainment ( )		685543	1					
ANR	685628	Callee	cont -> isContainment		685543	0					
ANR	685629	PtrMemberAccess	cont -> isContainment		685543	0					
ANR	685630	Identifier	cont		685543	0					
ANR	685631	Identifier	isContainment		685543	1					
ANR	685632	ArgumentList			685543	1					
ANR	685633	CompoundStatement		19:39:466:466	685543	1					
ANR	685634	ExpressionStatement	m_configView = new ContainmentConfigView ( cont )	266:8:8402:8448	685543	0	True				
ANR	685635	AssignmentExpression	m_configView = new ContainmentConfigView ( cont )		685543	0		=			
ANR	685636	Identifier	m_configView		685543	0					
ANR	685637	Identifier	cont		685543	1					
ANR	685638	ElseStatement	else		685543	0					
ANR	685639	CompoundStatement		21:11:535:535	685543	0					
ANR	685640	ExpressionStatement	m_configView = new PlasmaQuick :: ConfigView ( applet )	268:8:8471:8521	685543	0	True				
ANR	685641	AssignmentExpression	m_configView = new PlasmaQuick :: ConfigView ( applet )		685543	0		=			
ANR	685642	Identifier	m_configView		685543	0					
ANR	685643	Identifier	applet		685543	1					
ANR	685644	ExpressionStatement	m_configView . data ( ) -> init ( )	270:4:8533:8560	685543	17	True				
ANR	685645	CallExpression	m_configView . data ( ) -> init ( )		685543	0					
ANR	685646	Callee	m_configView . data ( ) -> init		685543	0					
ANR	685647	PtrMemberAccess	m_configView . data ( ) -> init		685543	0					
ANR	685648	CallExpression	m_configView . data ( )		685543	0					
ANR	685649	Callee	m_configView . data		685543	0					
ANR	685650	MemberAccess	m_configView . data		685543	0					
ANR	685651	Identifier	m_configView		685543	0					
ANR	685652	Identifier	data		685543	1					
ANR	685653	ArgumentList			685543	1					
ANR	685654	Identifier	init		685543	1					
ANR	685655	ArgumentList			685543	1					
ANR	685656	ExpressionStatement	m_configView . data ( ) -> setTransientParent ( this )	271:4:8566:8611	685543	18	True				
ANR	685657	CallExpression	m_configView . data ( ) -> setTransientParent ( this )		685543	0					
ANR	685658	Callee	m_configView . data ( ) -> setTransientParent		685543	0					
ANR	685659	PtrMemberAccess	m_configView . data ( ) -> setTransientParent		685543	0					
ANR	685660	CallExpression	m_configView . data ( )		685543	0					
ANR	685661	Callee	m_configView . data		685543	0					
ANR	685662	MemberAccess	m_configView . data		685543	0					
ANR	685663	Identifier	m_configView		685543	0					
ANR	685664	Identifier	data		685543	1					
ANR	685665	ArgumentList			685543	1					
ANR	685666	Identifier	setTransientParent		685543	1					
ANR	685667	ArgumentList	this		685543	1					
ANR	685668	Argument	this		685543	0					
ANR	685669	Identifier	this		685543	0					
ANR	685670	ExpressionStatement	m_configView . data ( ) -> show ( )	272:4:8617:8644	685543	19	True				
ANR	685671	CallExpression	m_configView . data ( ) -> show ( )		685543	0					
ANR	685672	Callee	m_configView . data ( ) -> show		685543	0					
ANR	685673	PtrMemberAccess	m_configView . data ( ) -> show		685543	0					
ANR	685674	CallExpression	m_configView . data ( )		685543	0					
ANR	685675	Callee	m_configView . data		685543	0					
ANR	685676	MemberAccess	m_configView . data		685543	0					
ANR	685677	Identifier	m_configView		685543	0					
ANR	685678	Identifier	data		685543	1					
ANR	685679	ArgumentList			685543	1					
ANR	685680	Identifier	show		685543	1					
ANR	685681	ArgumentList			685543	1					
ANR	685682	ReturnType	void		685543	1					
ANR	685683	Identifier	DesktopView :: showConfigurationInterface		685543	2					
ANR	685684	ParameterList	Plasma :: Applet * applet		685543	3					
ANR	685685	Parameter	Plasma :: Applet * applet	246:45:7901:7922	685543	0	True				
ANR	685686	ParameterType	Plasma :: Applet *		685543	0					
ANR	685687	Identifier	applet		685543	1					
ANR	685688	CFGEntryNode	ENTRY		685543		True				
ANR	685689	CFGExitNode	EXIT		685543		True				
ANR	685690	Symbol	m_configView -> applet		685543						
ANR	685691	Symbol	m_configView . data		685543						
ANR	685692	Symbol	* cont		685543						
ANR	685693	Symbol	this		685543						
ANR	685694	Symbol	* m_configView		685543						
ANR	685695	Symbol	applet -> containment		685543						
ANR	685696	Symbol	m_configView		685543						
ANR	685697	Symbol	cont		685543						
ANR	685698	Symbol	* applet		685543						
ANR	685699	Symbol	applet		685543						
ANR	685700	Symbol	cont -> isContainment		685543						
ANR	685701	Function	DesktopView :: screenGeometryChanged	275:0:8649:8978							
ANR	685702	FunctionDef	DesktopView :: screenGeometryChanged ()		685701	0					
ANR	685703	CompoundStatement		276:0:8691:8978	685701	0					
ANR	685704	IdentifierDeclStatement	const QRect geo = m_screenToFollow -> geometry ( ) ;	277:4:8697:8743	685701	0	True				
ANR	685705	IdentifierDecl	geo = m_screenToFollow -> geometry ( )		685701	0					
ANR	685706	IdentifierDeclType	const QRect		685701	0					
ANR	685707	Identifier	geo		685701	1					
ANR	685708	AssignmentExpression	geo = m_screenToFollow -> geometry ( )		685701	2		=			
ANR	685709	Identifier	geo		685701	0					
ANR	685710	CallExpression	m_screenToFollow -> geometry ( )		685701	1					
ANR	685711	Callee	m_screenToFollow -> geometry		685701	0					
ANR	685712	PtrMemberAccess	m_screenToFollow -> geometry		685701	0					
ANR	685713	Identifier	m_screenToFollow		685701	0					
ANR	685714	Identifier	geometry		685701	1					
ANR	685715	ArgumentList			685701	1					
ANR	685716	ExpressionStatement	setGeometry ( geo )	279:4:8812:8828	685701	1	True				
ANR	685717	CallExpression	setGeometry ( geo )		685701	0					
ANR	685718	Callee	setGeometry		685701	0					
ANR	685719	Identifier	setGeometry		685701	0					
ANR	685720	ArgumentList	geo		685701	1					
ANR	685721	Argument	geo		685701	0					
ANR	685722	Identifier	geo		685701	0					
ANR	685723	ExpressionStatement	setMinimumSize ( geo . size ( ) )	280:4:8834:8860	685701	2	True				
ANR	685724	CallExpression	setMinimumSize ( geo . size ( ) )		685701	0					
ANR	685725	Callee	setMinimumSize		685701	0					
ANR	685726	Identifier	setMinimumSize		685701	0					
ANR	685727	ArgumentList	geo . size ( )		685701	1					
ANR	685728	Argument	geo . size ( )		685701	0					
ANR	685729	CallExpression	geo . size ( )		685701	0					
ANR	685730	Callee	geo . size		685701	0					
ANR	685731	MemberAccess	geo . size		685701	0					
ANR	685732	Identifier	geo		685701	0					
ANR	685733	Identifier	size		685701	1					
ANR	685734	ArgumentList			685701	1					
ANR	685735	ExpressionStatement	setMaximumSize ( geo . size ( ) )	281:4:8866:8892	685701	3	True				
ANR	685736	CallExpression	setMaximumSize ( geo . size ( ) )		685701	0					
ANR	685737	Callee	setMaximumSize		685701	0					
ANR	685738	Identifier	setMaximumSize		685701	0					
ANR	685739	ArgumentList	geo . size ( )		685701	1					
ANR	685740	Argument	geo . size ( )		685701	0					
ANR	685741	CallExpression	geo . size ( )		685701	0					
ANR	685742	Callee	geo . size		685701	0					
ANR	685743	MemberAccess	geo . size		685701	0					
ANR	685744	Identifier	geo		685701	0					
ANR	685745	Identifier	size		685701	1					
ANR	685746	ArgumentList			685701	1					
ANR	685747	IfStatement	if ( m_shellSurface )		685701	4					
ANR	685748	Condition	m_shellSurface	282:8:8902:8915	685701	0	True				
ANR	685749	Identifier	m_shellSurface		685701	0					
ANR	685750	CompoundStatement		7:24:226:226	685701	1					
ANR	685751	ExpressionStatement	m_shellSurface -> setPosition ( geo . topLeft ( ) )	283:8:8928:8970	685701	0	True				
ANR	685752	CallExpression	m_shellSurface -> setPosition ( geo . topLeft ( ) )		685701	0					
ANR	685753	Callee	m_shellSurface -> setPosition		685701	0					
ANR	685754	PtrMemberAccess	m_shellSurface -> setPosition		685701	0					
ANR	685755	Identifier	m_shellSurface		685701	0					
ANR	685756	Identifier	setPosition		685701	1					
ANR	685757	ArgumentList	geo . topLeft ( )		685701	1					
ANR	685758	Argument	geo . topLeft ( )		685701	0					
ANR	685759	CallExpression	geo . topLeft ( )		685701	0					
ANR	685760	Callee	geo . topLeft		685701	0					
ANR	685761	MemberAccess	geo . topLeft		685701	0					
ANR	685762	Identifier	geo		685701	0					
ANR	685763	Identifier	topLeft		685701	1					
ANR	685764	ArgumentList			685701	1					
ANR	685765	ReturnType	void		685701	1					
ANR	685766	Identifier	DesktopView :: screenGeometryChanged		685701	2					
ANR	685767	ParameterList			685701	3					
ANR	685768	CFGEntryNode	ENTRY		685701		True				
ANR	685769	CFGExitNode	EXIT		685701		True				
ANR	685770	Symbol	geo		685701						
ANR	685771	Symbol	m_shellSurface		685701						
ANR	685772	Symbol	m_screenToFollow -> geometry		685701						
ANR	685773	Symbol	geo . topLeft		685701						
ANR	685774	Symbol	* m_screenToFollow		685701						
ANR	685775	Symbol	m_screenToFollow		685701						
ANR	685776	Symbol	geo . size		685701						
ANR	685777	Function	DesktopView :: coronaPackageChanged	288:0:8982:9174							
ANR	685778	FunctionDef	DesktopView :: coronaPackageChanged (const KPackage :: Package & package)		685777	0					
ANR	685779	CompoundStatement		289:0:9055:9174	685777	0					
ANR	685780	ExpressionStatement	setContainment ( 0 )	290:4:9061:9078	685777	0	True				
ANR	685781	CallExpression	setContainment ( 0 )		685777	0					
ANR	685782	Callee	setContainment		685777	0					
ANR	685783	Identifier	setContainment		685777	0					
ANR	685784	ArgumentList	0		685777	1					
ANR	685785	Argument	0		685777	0					
ANR	685786	PrimaryExpression	0		685777	0					
ANR	685787	ExpressionStatement	"setSource ( QUrl :: fromLocalFile ( package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) ) )"	291:4:9084:9172	685777	1	True				
ANR	685788	CallExpression	"setSource ( QUrl :: fromLocalFile ( package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) ) )"		685777	0					
ANR	685789	Callee	setSource		685777	0					
ANR	685790	Identifier	setSource		685777	0					
ANR	685791	ArgumentList	"QUrl :: fromLocalFile ( package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) )"		685777	1					
ANR	685792	Argument	"QUrl :: fromLocalFile ( package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) )"		685777	0					
ANR	685793	CallExpression	"QUrl :: fromLocalFile ( package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) ) )"		685777	0					
ANR	685794	Callee	QUrl :: fromLocalFile		685777	0					
ANR	685795	Identifier	QUrl :: fromLocalFile		685777	0					
ANR	685796	ArgumentList	"package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) )"		685777	1					
ANR	685797	Argument	"package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) )"		685777	0					
ANR	685798	CallExpression	"package . filePath ( ""views"" , QStringLiteral ( ""Desktop.qml"" ) )"		685777	0					
ANR	685799	Callee	package . filePath		685777	0					
ANR	685800	MemberAccess	package . filePath		685777	0					
ANR	685801	Identifier	package		685777	0					
ANR	685802	Identifier	filePath		685777	1					
ANR	685803	ArgumentList	"""views"""		685777	1					
ANR	685804	Argument	"""views"""		685777	0					
ANR	685805	PrimaryExpression	"""views"""		685777	0					
ANR	685806	Argument	"QStringLiteral ( ""Desktop.qml"" )"		685777	1					
ANR	685807	CallExpression	"QStringLiteral ( ""Desktop.qml"" )"		685777	0					
ANR	685808	Callee	QStringLiteral		685777	0					
ANR	685809	Identifier	QStringLiteral		685777	0					
ANR	685810	ArgumentList	"""Desktop.qml"""		685777	1					
ANR	685811	Argument	"""Desktop.qml"""		685777	0					
ANR	685812	PrimaryExpression	"""Desktop.qml"""		685777	0					
ANR	685813	ReturnType	void		685777	1					
ANR	685814	Identifier	DesktopView :: coronaPackageChanged		685777	2					
ANR	685815	ParameterList	const KPackage :: Package & package		685777	3					
ANR	685816	Parameter	const KPackage :: Package & package	288:39:9021:9052	685777	0	True				
ANR	685817	ParameterType	const KPackage :: Package &		685777	0					
ANR	685818	Identifier	package		685777	1					
ANR	685819	CFGEntryNode	ENTRY		685777		True				
ANR	685820	CFGExitNode	EXIT		685777		True				
ANR	685821	Symbol	package		685777						
ANR	685822	Symbol	QUrl :: fromLocalFile		685777						
ANR	685823	Symbol	QStringLiteral		685777						
ANR	685824	Symbol	package . filePath		685777						
ANR	685825	Function	DesktopView :: setupWaylandIntegration	294:0:9177:9765							
ANR	685826	FunctionDef	DesktopView :: setupWaylandIntegration ()		685825	0					
ANR	685827	CompoundStatement		295:0:9221:9765	685825	0					
ANR	685828	IfStatement	if ( m_shellSurface )		685825	0					
ANR	685829	Condition	m_shellSurface	296:8:9231:9244	685825	0	True				
ANR	685830	Identifier	m_shellSurface		685825	0					
ANR	685831	CompoundStatement		2:24:25:25	685825	1					
ANR	685832	ReturnStatement	return ;	298:8:9282:9288	685825	0	True				
ANR	685833	Statement	if	300:4:9300:9301	685825	1	True				
ANR	685834	Statement	(	300:7:9303:9303	685825	2	True				
ANR	685835	Statement	ShellCorona	300:8:9304:9314	685825	3	True				
ANR	685836	Statement	*	300:20:9316:9316	685825	4	True				
ANR	685837	Statement	c	300:21:9317:9317	685825	5	True				
ANR	685838	Statement	=	300:23:9319:9319	685825	6	True				
ANR	685839	Statement	qobject_cast	300:25:9321:9332	685825	7	True				
ANR	685840	Statement	<	300:37:9333:9333	685825	8	True				
ANR	685841	Statement	ShellCorona	300:38:9334:9344	685825	9	True				
ANR	685842	Statement	*	300:49:9345:9345	685825	10	True				
ANR	685843	Statement	>	300:50:9346:9346	685825	11	True				
ANR	685844	Statement	(	300:51:9347:9347	685825	12	True				
ANR	685845	Statement	corona	300:52:9348:9353	685825	13	True				
ANR	685846	Statement	(	300:58:9354:9354	685825	14	True				
ANR	685847	Statement	)	300:59:9355:9355	685825	15	True				
ANR	685848	Statement	)	300:60:9356:9356	685825	16	True				
ANR	685849	Statement	)	300:61:9357:9357	685825	17	True				
ANR	685850	CompoundStatement		12:8:312:350	685825	18					
ANR	685851	Statement	using	301:8:9369:9373	685825	0	True				
ANR	685852	Statement	namespace	301:14:9375:9383	685825	1	True				
ANR	685853	ExpressionStatement	KWayland :: Client	301:24:9385:9401	685825	2	True				
ANR	685854	Identifier	KWayland :: Client		685825	0					
ANR	685855	IdentifierDeclStatement	PlasmaShell * interface = c -> waylandPlasmaShellInterface ( ) ;	302:8:9411:9468	685825	3	True				
ANR	685856	IdentifierDecl	* interface = c -> waylandPlasmaShellInterface ( )		685825	0					
ANR	685857	IdentifierDeclType	PlasmaShell *		685825	0					
ANR	685858	Identifier	interface		685825	1					
ANR	685859	AssignmentExpression	* interface = c -> waylandPlasmaShellInterface ( )		685825	2		=			
ANR	685860	Identifier	interface		685825	0					
ANR	685861	CallExpression	c -> waylandPlasmaShellInterface ( )		685825	1					
ANR	685862	Callee	c -> waylandPlasmaShellInterface		685825	0					
ANR	685863	PtrMemberAccess	c -> waylandPlasmaShellInterface		685825	0					
ANR	685864	Identifier	c		685825	0					
ANR	685865	Identifier	waylandPlasmaShellInterface		685825	1					
ANR	685866	ArgumentList			685825	1					
ANR	685867	IfStatement	if ( ! interface )		685825	4					
ANR	685868	Condition	! interface	303:12:9482:9491	685825	0	True				
ANR	685869	UnaryOperationExpression	! interface		685825	0					
ANR	685870	UnaryOperator	!		685825	0					
ANR	685871	Identifier	interface		685825	1					
ANR	685872	CompoundStatement		9:24:272:272	685825	1					
ANR	685873	ReturnStatement	return ;	304:12:9508:9514	685825	0	True				
ANR	685874	IdentifierDeclStatement	Surface * s = Surface :: fromWindow ( this ) ;	306:8:9534:9572	685825	5	True				
ANR	685875	IdentifierDecl	* s = Surface :: fromWindow ( this )		685825	0					
ANR	685876	IdentifierDeclType	Surface *		685825	0					
ANR	685877	Identifier	s		685825	1					
ANR	685878	AssignmentExpression	* s = Surface :: fromWindow ( this )		685825	2		=			
ANR	685879	Identifier	s		685825	0					
ANR	685880	CallExpression	Surface :: fromWindow ( this )		685825	1					
ANR	685881	Callee	Surface :: fromWindow		685825	0					
ANR	685882	Identifier	Surface :: fromWindow		685825	0					
ANR	685883	ArgumentList	this		685825	1					
ANR	685884	Argument	this		685825	0					
ANR	685885	Identifier	this		685825	0					
ANR	685886	IfStatement	if ( ! s )		685825	6					
ANR	685887	Condition	! s	307:12:9586:9587	685825	0	True				
ANR	685888	UnaryOperationExpression	! s		685825	0					
ANR	685889	UnaryOperator	!		685825	0					
ANR	685890	Identifier	s		685825	1					
ANR	685891	CompoundStatement		13:16:368:368	685825	1					
ANR	685892	ReturnStatement	return ;	308:12:9604:9610	685825	0	True				
ANR	685893	ExpressionStatement	"m_shellSurface = interface -> createSurface ( s , this )"	310:8:9630:9680	685825	7	True				
ANR	685894	AssignmentExpression	"m_shellSurface = interface -> createSurface ( s , this )"		685825	0		=			
ANR	685895	Identifier	m_shellSurface		685825	0					
ANR	685896	CallExpression	"interface -> createSurface ( s , this )"		685825	1					
ANR	685897	Callee	interface -> createSurface		685825	0					
ANR	685898	PtrMemberAccess	interface -> createSurface		685825	0					
ANR	685899	Identifier	interface		685825	0					
ANR	685900	Identifier	createSurface		685825	1					
ANR	685901	ArgumentList	s		685825	1					
ANR	685902	Argument	s		685825	0					
ANR	685903	Identifier	s		685825	0					
ANR	685904	Argument	this		685825	1					
ANR	685905	Identifier	this		685825	0					
ANR	685906	ExpressionStatement	m_shellSurface -> setPosition ( m_screenToFollow -> geometry ( ) . topLeft ( ) )	311:8:9690:9757	685825	8	True				
ANR	685907	CallExpression	m_shellSurface -> setPosition ( m_screenToFollow -> geometry ( ) . topLeft ( ) )		685825	0					
ANR	685908	Callee	m_shellSurface -> setPosition		685825	0					
ANR	685909	PtrMemberAccess	m_shellSurface -> setPosition		685825	0					
ANR	685910	Identifier	m_shellSurface		685825	0					
ANR	685911	Identifier	setPosition		685825	1					
ANR	685912	ArgumentList	m_screenToFollow -> geometry ( ) . topLeft ( )		685825	1					
ANR	685913	Argument	m_screenToFollow -> geometry ( ) . topLeft ( )		685825	0					
ANR	685914	CallExpression	m_screenToFollow -> geometry ( ) . topLeft ( )		685825	0					
ANR	685915	Callee	m_screenToFollow -> geometry ( ) . topLeft		685825	0					
ANR	685916	MemberAccess	m_screenToFollow -> geometry ( ) . topLeft		685825	0					
ANR	685917	CallExpression	m_screenToFollow -> geometry ( )		685825	0					
ANR	685918	Callee	m_screenToFollow -> geometry		685825	0					
ANR	685919	PtrMemberAccess	m_screenToFollow -> geometry		685825	0					
ANR	685920	Identifier	m_screenToFollow		685825	0					
ANR	685921	Identifier	geometry		685825	1					
ANR	685922	ArgumentList			685825	1					
ANR	685923	Identifier	topLeft		685825	1					
ANR	685924	ArgumentList			685825	1					
ANR	685925	ReturnType	void		685825	1					
ANR	685926	Identifier	DesktopView :: setupWaylandIntegration		685825	2					
ANR	685927	ParameterList			685825	3					
ANR	685928	CFGEntryNode	ENTRY		685825		True				
ANR	685929	CFGExitNode	EXIT		685825		True				
ANR	685930	Symbol	c		685825						
ANR	685931	Symbol	m_screenToFollow -> geometry ( ) . topLeft		685825						
ANR	685932	Symbol	c -> waylandPlasmaShellInterface		685825						
ANR	685933	Symbol	this		685825						
ANR	685934	Symbol	* interface		685825						
ANR	685935	Symbol	interface		685825						
ANR	685936	Symbol	* c		685825						
ANR	685937	Symbol	* m_screenToFollow		685825						
ANR	685938	Symbol	m_screenToFollow		685825						
ANR	685939	Symbol	m_shellSurface		685825						
ANR	685940	Symbol	interface -> createSurface		685825						
ANR	685941	Symbol	s		685825						
ANR	685942	Symbol	m_screenToFollow -> geometry		685825						
ANR	685943	Symbol	Surface :: fromWindow		685825						
