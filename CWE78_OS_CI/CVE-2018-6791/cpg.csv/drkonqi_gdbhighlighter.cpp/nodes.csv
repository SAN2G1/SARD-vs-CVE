command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	264779	File	data/converged/CVE-2018-6791_plasma-workspace/drkonqi_gdbhighlighter.cpp								
ANR	264780	Function	GdbHighlighter :: GdbHighlighter	22:1:842:1895							
ANR	264781	FunctionDef	"GdbHighlighter :: GdbHighlighter (QTextDocument * parent , const QList < BacktraceLine > & gdbLines)"		264780	0					
ANR	264782	CompoundStatement		26:0:992:1895	264780	0					
ANR	264783	IdentifierDeclStatement	int l = 0 ;	28:4:1023:1032	264780	0	True				
ANR	264784	IdentifierDecl	l = 0		264780	0					
ANR	264785	IdentifierDeclType	int		264780	0					
ANR	264786	Identifier	l		264780	1					
ANR	264787	AssignmentExpression	l = 0		264780	2		=			
ANR	264788	Identifier	l		264780	0					
ANR	264789	PrimaryExpression	0		264780	1					
ANR	264790	Statement	foreach	29:4:1038:1044	264780	1	True				
ANR	264791	Statement	(	29:11:1045:1045	264780	2	True				
ANR	264792	Statement	const	29:12:1046:1050	264780	3	True				
ANR	264793	Statement	BacktraceLine	29:18:1052:1064	264780	4	True				
ANR	264794	Statement	&	29:31:1065:1065	264780	5	True				
ANR	264795	Statement	line	29:33:1067:1070	264780	6	True				
ANR	264796	Statement	","	29:37:1071:1071	264780	7	True				
ANR	264797	Statement	gdbLines	29:39:1073:1080	264780	8	True				
ANR	264798	Statement	)	29:47:1081:1081	264780	9	True				
ANR	264799	CompoundStatement		4:49:90:90	264780	10					
ANR	264800	ExpressionStatement	"lines . insert ( l , line )"	30:8:1093:1114	264780	0	True				
ANR	264801	CallExpression	"lines . insert ( l , line )"		264780	0					
ANR	264802	Callee	lines . insert		264780	0					
ANR	264803	MemberAccess	lines . insert		264780	0					
ANR	264804	Identifier	lines		264780	0					
ANR	264805	Identifier	insert		264780	1					
ANR	264806	ArgumentList	l		264780	1					
ANR	264807	Argument	l		264780	0					
ANR	264808	Identifier	l		264780	0					
ANR	264809	Argument	line		264780	1					
ANR	264810	Identifier	line		264780	0					
ANR	264811	ExpressionStatement	l += line . toString ( ) . count ( '\\n' )	31:8:1124:1156	264780	1	True				
ANR	264812	AssignmentExpression	l += line . toString ( ) . count ( '\\n' )		264780	0		+=			
ANR	264813	Identifier	l		264780	0					
ANR	264814	CallExpression	line . toString ( ) . count ( '\\n' )		264780	1					
ANR	264815	Callee	line . toString ( ) . count		264780	0					
ANR	264816	MemberAccess	line . toString ( ) . count		264780	0					
ANR	264817	CallExpression	line . toString ( )		264780	0					
ANR	264818	Callee	line . toString		264780	0					
ANR	264819	MemberAccess	line . toString		264780	0					
ANR	264820	Identifier	line		264780	0					
ANR	264821	Identifier	toString		264780	1					
ANR	264822	ArgumentList			264780	1					
ANR	264823	Identifier	count		264780	1					
ANR	264824	ArgumentList	'\\n'		264780	1					
ANR	264825	Argument	'\\n'		264780	0					
ANR	264826	PrimaryExpression	'\\n'		264780	0					
ANR	264827	IdentifierDeclStatement	KColorScheme scheme ( QPalette :: Active ) ;	35:4:1191:1228	264780	11	True				
ANR	264828	IdentifierDecl	scheme ( QPalette :: Active )		264780	0					
ANR	264829	IdentifierDeclType	KColorScheme		264780	0					
ANR	264830	Identifier	scheme		264780	1					
ANR	264831	Identifier	QPalette :: Active		264780	2					
ANR	264832	ExpressionStatement	crashFormat . setForeground ( scheme . foreground ( KColorScheme :: NegativeText ) )	37:4:1235:1307	264780	12	True				
ANR	264833	CallExpression	crashFormat . setForeground ( scheme . foreground ( KColorScheme :: NegativeText ) )		264780	0					
ANR	264834	Callee	crashFormat . setForeground		264780	0					
ANR	264835	MemberAccess	crashFormat . setForeground		264780	0					
ANR	264836	Identifier	crashFormat		264780	0					
ANR	264837	Identifier	setForeground		264780	1					
ANR	264838	ArgumentList	scheme . foreground ( KColorScheme :: NegativeText )		264780	1					
ANR	264839	Argument	scheme . foreground ( KColorScheme :: NegativeText )		264780	0					
ANR	264840	CallExpression	scheme . foreground ( KColorScheme :: NegativeText )		264780	0					
ANR	264841	Callee	scheme . foreground		264780	0					
ANR	264842	MemberAccess	scheme . foreground		264780	0					
ANR	264843	Identifier	scheme		264780	0					
ANR	264844	Identifier	foreground		264780	1					
ANR	264845	ArgumentList	KColorScheme :: NegativeText		264780	1					
ANR	264846	Argument	KColorScheme :: NegativeText		264780	0					
ANR	264847	Identifier	KColorScheme :: NegativeText		264780	0					
ANR	264848	ExpressionStatement	nullptrFormat . setForeground ( scheme . foreground ( KColorScheme :: NegativeText ) )	38:4:1313:1387	264780	13	True				
ANR	264849	CallExpression	nullptrFormat . setForeground ( scheme . foreground ( KColorScheme :: NegativeText ) )		264780	0					
ANR	264850	Callee	nullptrFormat . setForeground		264780	0					
ANR	264851	MemberAccess	nullptrFormat . setForeground		264780	0					
ANR	264852	Identifier	nullptrFormat		264780	0					
ANR	264853	Identifier	setForeground		264780	1					
ANR	264854	ArgumentList	scheme . foreground ( KColorScheme :: NegativeText )		264780	1					
ANR	264855	Argument	scheme . foreground ( KColorScheme :: NegativeText )		264780	0					
ANR	264856	CallExpression	scheme . foreground ( KColorScheme :: NegativeText )		264780	0					
ANR	264857	Callee	scheme . foreground		264780	0					
ANR	264858	MemberAccess	scheme . foreground		264780	0					
ANR	264859	Identifier	scheme		264780	0					
ANR	264860	Identifier	foreground		264780	1					
ANR	264861	ArgumentList	KColorScheme :: NegativeText		264780	1					
ANR	264862	Argument	KColorScheme :: NegativeText		264780	0					
ANR	264863	Identifier	KColorScheme :: NegativeText		264780	0					
ANR	264864	ExpressionStatement	nullptrFormat . setFontWeight ( QFont :: Bold )	39:4:1393:1433	264780	14	True				
ANR	264865	CallExpression	nullptrFormat . setFontWeight ( QFont :: Bold )		264780	0					
ANR	264866	Callee	nullptrFormat . setFontWeight		264780	0					
ANR	264867	MemberAccess	nullptrFormat . setFontWeight		264780	0					
ANR	264868	Identifier	nullptrFormat		264780	0					
ANR	264869	Identifier	setFontWeight		264780	1					
ANR	264870	ArgumentList	QFont :: Bold		264780	1					
ANR	264871	Argument	QFont :: Bold		264780	0					
ANR	264872	Identifier	QFont :: Bold		264780	0					
ANR	264873	ExpressionStatement	assertFormat = nullptrFormat	40:4:1439:1467	264780	15	True				
ANR	264874	AssignmentExpression	assertFormat = nullptrFormat		264780	0		=			
ANR	264875	Identifier	assertFormat		264780	0					
ANR	264876	Identifier	nullptrFormat		264780	1					
ANR	264877	ExpressionStatement	threadFormat . setForeground ( scheme . foreground ( KColorScheme :: NeutralText ) )	41:4:1473:1545	264780	16	True				
ANR	264878	CallExpression	threadFormat . setForeground ( scheme . foreground ( KColorScheme :: NeutralText ) )		264780	0					
ANR	264879	Callee	threadFormat . setForeground		264780	0					
ANR	264880	MemberAccess	threadFormat . setForeground		264780	0					
ANR	264881	Identifier	threadFormat		264780	0					
ANR	264882	Identifier	setForeground		264780	1					
ANR	264883	ArgumentList	scheme . foreground ( KColorScheme :: NeutralText )		264780	1					
ANR	264884	Argument	scheme . foreground ( KColorScheme :: NeutralText )		264780	0					
ANR	264885	CallExpression	scheme . foreground ( KColorScheme :: NeutralText )		264780	0					
ANR	264886	Callee	scheme . foreground		264780	0					
ANR	264887	MemberAccess	scheme . foreground		264780	0					
ANR	264888	Identifier	scheme		264780	0					
ANR	264889	Identifier	foreground		264780	1					
ANR	264890	ArgumentList	KColorScheme :: NeutralText		264780	1					
ANR	264891	Argument	KColorScheme :: NeutralText		264780	0					
ANR	264892	Identifier	KColorScheme :: NeutralText		264780	0					
ANR	264893	ExpressionStatement	urlFormat . setForeground ( scheme . foreground ( KColorScheme :: LinkText ) )	42:4:1551:1617	264780	17	True				
ANR	264894	CallExpression	urlFormat . setForeground ( scheme . foreground ( KColorScheme :: LinkText ) )		264780	0					
ANR	264895	Callee	urlFormat . setForeground		264780	0					
ANR	264896	MemberAccess	urlFormat . setForeground		264780	0					
ANR	264897	Identifier	urlFormat		264780	0					
ANR	264898	Identifier	setForeground		264780	1					
ANR	264899	ArgumentList	scheme . foreground ( KColorScheme :: LinkText )		264780	1					
ANR	264900	Argument	scheme . foreground ( KColorScheme :: LinkText )		264780	0					
ANR	264901	CallExpression	scheme . foreground ( KColorScheme :: LinkText )		264780	0					
ANR	264902	Callee	scheme . foreground		264780	0					
ANR	264903	MemberAccess	scheme . foreground		264780	0					
ANR	264904	Identifier	scheme		264780	0					
ANR	264905	Identifier	foreground		264780	1					
ANR	264906	ArgumentList	KColorScheme :: LinkText		264780	1					
ANR	264907	Argument	KColorScheme :: LinkText		264780	0					
ANR	264908	Identifier	KColorScheme :: LinkText		264780	0					
ANR	264909	ExpressionStatement	funcFormat . setForeground ( scheme . foreground ( KColorScheme :: VisitedText ) )	43:4:1623:1693	264780	18	True				
ANR	264910	CallExpression	funcFormat . setForeground ( scheme . foreground ( KColorScheme :: VisitedText ) )		264780	0					
ANR	264911	Callee	funcFormat . setForeground		264780	0					
ANR	264912	MemberAccess	funcFormat . setForeground		264780	0					
ANR	264913	Identifier	funcFormat		264780	0					
ANR	264914	Identifier	setForeground		264780	1					
ANR	264915	ArgumentList	scheme . foreground ( KColorScheme :: VisitedText )		264780	1					
ANR	264916	Argument	scheme . foreground ( KColorScheme :: VisitedText )		264780	0					
ANR	264917	CallExpression	scheme . foreground ( KColorScheme :: VisitedText )		264780	0					
ANR	264918	Callee	scheme . foreground		264780	0					
ANR	264919	MemberAccess	scheme . foreground		264780	0					
ANR	264920	Identifier	scheme		264780	0					
ANR	264921	Identifier	foreground		264780	1					
ANR	264922	ArgumentList	KColorScheme :: VisitedText		264780	1					
ANR	264923	Argument	KColorScheme :: VisitedText		264780	0					
ANR	264924	Identifier	KColorScheme :: VisitedText		264780	0					
ANR	264925	ExpressionStatement	funcFormat . setFontWeight ( QFont :: Bold )	44:4:1699:1736	264780	19	True				
ANR	264926	CallExpression	funcFormat . setFontWeight ( QFont :: Bold )		264780	0					
ANR	264927	Callee	funcFormat . setFontWeight		264780	0					
ANR	264928	MemberAccess	funcFormat . setFontWeight		264780	0					
ANR	264929	Identifier	funcFormat		264780	0					
ANR	264930	Identifier	setFontWeight		264780	1					
ANR	264931	ArgumentList	QFont :: Bold		264780	1					
ANR	264932	Argument	QFont :: Bold		264780	0					
ANR	264933	Identifier	QFont :: Bold		264780	0					
ANR	264934	ExpressionStatement	otheridFormat . setForeground ( scheme . foreground ( KColorScheme :: PositiveText ) )	45:4:1742:1816	264780	20	True				
ANR	264935	CallExpression	otheridFormat . setForeground ( scheme . foreground ( KColorScheme :: PositiveText ) )		264780	0					
ANR	264936	Callee	otheridFormat . setForeground		264780	0					
ANR	264937	MemberAccess	otheridFormat . setForeground		264780	0					
ANR	264938	Identifier	otheridFormat		264780	0					
ANR	264939	Identifier	setForeground		264780	1					
ANR	264940	ArgumentList	scheme . foreground ( KColorScheme :: PositiveText )		264780	1					
ANR	264941	Argument	scheme . foreground ( KColorScheme :: PositiveText )		264780	0					
ANR	264942	CallExpression	scheme . foreground ( KColorScheme :: PositiveText )		264780	0					
ANR	264943	Callee	scheme . foreground		264780	0					
ANR	264944	MemberAccess	scheme . foreground		264780	0					
ANR	264945	Identifier	scheme		264780	0					
ANR	264946	Identifier	foreground		264780	1					
ANR	264947	ArgumentList	KColorScheme :: PositiveText		264780	1					
ANR	264948	Argument	KColorScheme :: PositiveText		264780	0					
ANR	264949	Identifier	KColorScheme :: PositiveText		264780	0					
ANR	264950	ExpressionStatement	crapFormat . setForeground ( scheme . foreground ( KColorScheme :: InactiveText ) )	46:4:1822:1893	264780	21	True				
ANR	264951	CallExpression	crapFormat . setForeground ( scheme . foreground ( KColorScheme :: InactiveText ) )		264780	0					
ANR	264952	Callee	crapFormat . setForeground		264780	0					
ANR	264953	MemberAccess	crapFormat . setForeground		264780	0					
ANR	264954	Identifier	crapFormat		264780	0					
ANR	264955	Identifier	setForeground		264780	1					
ANR	264956	ArgumentList	scheme . foreground ( KColorScheme :: InactiveText )		264780	1					
ANR	264957	Argument	scheme . foreground ( KColorScheme :: InactiveText )		264780	0					
ANR	264958	CallExpression	scheme . foreground ( KColorScheme :: InactiveText )		264780	0					
ANR	264959	Callee	scheme . foreground		264780	0					
ANR	264960	MemberAccess	scheme . foreground		264780	0					
ANR	264961	Identifier	scheme		264780	0					
ANR	264962	Identifier	foreground		264780	1					
ANR	264963	ArgumentList	KColorScheme :: InactiveText		264780	1					
ANR	264964	Argument	KColorScheme :: InactiveText		264780	0					
ANR	264965	Identifier	KColorScheme :: InactiveText		264780	0					
ANR	264966	ReturnType	include < KColorScheme >		264780	1					
ANR	264967	Identifier	GdbHighlighter :: GdbHighlighter		264780	2					
ANR	264968	ParameterList	"QTextDocument * parent , const QList < BacktraceLine > & gdbLines"		264780	3					
ANR	264969	Parameter	QTextDocument * parent	24:31:897:917	264780	0	True				
ANR	264970	ParameterType	QTextDocument *		264780	0					
ANR	264971	Identifier	parent		264780	1					
ANR	264972	Parameter	const QList < BacktraceLine > & gdbLines	24:54:920:956	264780	1	True				
ANR	264973	ParameterType	const QList < BacktraceLine > &		264780	0					
ANR	264974	Identifier	gdbLines		264780	1					
ANR	264975	CFGEntryNode	ENTRY		264780		True				
ANR	264976	CFGExitNode	EXIT		264780		True				
ANR	264977	Symbol	threadFormat		264780						
ANR	264978	Symbol	parent		264780						
ANR	264979	Symbol	line . toString ( ) . count		264780						
ANR	264980	Symbol	funcFormat		264780						
ANR	264981	Symbol	scheme		264780						
ANR	264982	Symbol	KColorScheme :: PositiveText		264780						
ANR	264983	Symbol	crapFormat		264780						
ANR	264984	Symbol	line		264780						
ANR	264985	Symbol	nullptrFormat		264780						
ANR	264986	Symbol	QFont :: Bold		264780						
ANR	264987	Symbol	KColorScheme :: LinkText		264780						
ANR	264988	Symbol	scheme . foreground		264780						
ANR	264989	Symbol	l		264780						
ANR	264990	Symbol	line . toString		264780						
ANR	264991	Symbol	urlFormat		264780						
ANR	264992	Symbol	KColorScheme :: VisitedText		264780						
ANR	264993	Symbol	KColorScheme :: InactiveText		264780						
ANR	264994	Symbol	gdbLines		264780						
ANR	264995	Symbol	crashFormat		264780						
ANR	264996	Symbol	assertFormat		264780						
ANR	264997	Symbol	otheridFormat		264780						
ANR	264998	Symbol	lines		264780						
ANR	264999	Symbol	KColorScheme :: NeutralText		264780						
ANR	265000	Symbol	KColorScheme :: NegativeText		264780						
ANR	265001	Function	GdbHighlighter :: highlightBlock	49:0:1898:5752							
ANR	265002	FunctionDef	GdbHighlighter :: highlightBlock (const QString & text)		265001	0					
ANR	265003	CompoundStatement		50:0:1955:5752	265001	0					
ANR	265004	IdentifierDeclStatement	int cur = 0 ;	51:4:1961:1972	265001	0	True				
ANR	265005	IdentifierDecl	cur = 0		265001	0					
ANR	265006	IdentifierDeclType	int		265001	0					
ANR	265007	Identifier	cur		265001	1					
ANR	265008	AssignmentExpression	cur = 0		265001	2		=			
ANR	265009	Identifier	cur		265001	0					
ANR	265010	PrimaryExpression	0		265001	1					
ANR	265011	IdentifierDeclStatement	int next ;	52:4:1978:1986	265001	1	True				
ANR	265012	IdentifierDecl	next		265001	0					
ANR	265013	IdentifierDeclType	int		265001	0					
ANR	265014	Identifier	next		265001	1					
ANR	265015	IdentifierDeclStatement	int diff ;	53:4:1992:2000	265001	2	True				
ANR	265016	IdentifierDecl	diff		265001	0					
ANR	265017	IdentifierDeclType	int		265001	0					
ANR	265018	Identifier	diff		265001	1					
ANR	265019	IdentifierDeclStatement	"const QRegExp hexptrPattern ( QStringLiteral ( ""0x[0-9a-f]+"" ) , Qt :: CaseSensitive , QRegExp :: RegExp2 ) ;"	54:4:2006:2101	265001	3	True				
ANR	265020	IdentifierDecl	"hexptrPattern ( QStringLiteral ( ""0x[0-9a-f]+"" ) , Qt :: CaseSensitive , QRegExp :: RegExp2 )"		265001	0					
ANR	265021	IdentifierDeclType	const QRegExp		265001	0					
ANR	265022	Identifier	hexptrPattern		265001	1					
ANR	265023	Expression	"QStringLiteral ( ""0x[0-9a-f]+"" ) , Qt :: CaseSensitive , QRegExp :: RegExp2"		265001	2					
ANR	265024	CallExpression	"QStringLiteral ( ""0x[0-9a-f]+"" )"		265001	0					
ANR	265025	Callee	QStringLiteral		265001	0					
ANR	265026	Identifier	QStringLiteral		265001	0					
ANR	265027	ArgumentList	"""0x[0-9a-f]+"""		265001	1					
ANR	265028	Argument	"""0x[0-9a-f]+"""		265001	0					
ANR	265029	PrimaryExpression	"""0x[0-9a-f]+"""		265001	0					
ANR	265030	Expression	"Qt :: CaseSensitive , QRegExp :: RegExp2"		265001	1					
ANR	265031	Identifier	Qt :: CaseSensitive		265001	0					
ANR	265032	Identifier	QRegExp :: RegExp2		265001	1					
ANR	265033	IdentifierDeclStatement	int lineNr = currentBlock ( ) . firstLineNumber ( ) ;	55:4:2107:2152	265001	4	True				
ANR	265034	IdentifierDecl	lineNr = currentBlock ( ) . firstLineNumber ( )		265001	0					
ANR	265035	IdentifierDeclType	int		265001	0					
ANR	265036	Identifier	lineNr		265001	1					
ANR	265037	AssignmentExpression	lineNr = currentBlock ( ) . firstLineNumber ( )		265001	2		=			
ANR	265038	Identifier	lineNr		265001	0					
ANR	265039	CallExpression	currentBlock ( ) . firstLineNumber ( )		265001	1					
ANR	265040	Callee	currentBlock ( ) . firstLineNumber		265001	0					
ANR	265041	MemberAccess	currentBlock ( ) . firstLineNumber		265001	0					
ANR	265042	CallExpression	currentBlock ( )		265001	0					
ANR	265043	Callee	currentBlock		265001	0					
ANR	265044	Identifier	currentBlock		265001	0					
ANR	265045	ArgumentList			265001	1					
ANR	265046	Identifier	firstLineNumber		265001	1					
ANR	265047	ArgumentList			265001	1					
ANR	265048	WhileStatement	while ( cur < text . length ( ) )		265001	5					
ANR	265049	Condition	cur < text . length ( )	56:12:2166:2184	265001	0	True				
ANR	265050	RelationalExpression	cur < text . length ( )		265001	0		<			
ANR	265051	Identifier	cur		265001	0					
ANR	265052	CallExpression	text . length ( )		265001	1					
ANR	265053	Callee	text . length		265001	0					
ANR	265054	MemberAccess	text . length		265001	0					
ANR	265055	Identifier	text		265001	0					
ANR	265056	Identifier	length		265001	1					
ANR	265057	ArgumentList			265001	1					
ANR	265058	CompoundStatement		29:8:916:954	265001	1					
ANR	265059	ExpressionStatement	"next = text . indexOf ( '\\n' , cur )"	57:8:2198:2228	265001	0	True				
ANR	265060	AssignmentExpression	"next = text . indexOf ( '\\n' , cur )"		265001	0		=			
ANR	265061	Identifier	next		265001	0					
ANR	265062	CallExpression	"text . indexOf ( '\\n' , cur )"		265001	1					
ANR	265063	Callee	text . indexOf		265001	0					
ANR	265064	MemberAccess	text . indexOf		265001	0					
ANR	265065	Identifier	text		265001	0					
ANR	265066	Identifier	indexOf		265001	1					
ANR	265067	ArgumentList	'\\n'		265001	1					
ANR	265068	Argument	'\\n'		265001	0					
ANR	265069	PrimaryExpression	'\\n'		265001	0					
ANR	265070	Argument	cur		265001	1					
ANR	265071	Identifier	cur		265001	0					
ANR	265072	IfStatement	if ( next == - 1 )		265001	1					
ANR	265073	Condition	next == - 1	58:12:2242:2251	265001	0	True				
ANR	265074	EqualityExpression	next == - 1		265001	0		==			
ANR	265075	Identifier	next		265001	0					
ANR	265076	UnaryOperationExpression	- 1		265001	1					
ANR	265077	UnaryOperator	-		265001	0					
ANR	265078	PrimaryExpression	1		265001	1					
ANR	265079	CompoundStatement		9:24:298:298	265001	1					
ANR	265080	ExpressionStatement	next = text . length ( )	59:12:2268:2288	265001	0	True				
ANR	265081	AssignmentExpression	next = text . length ( )		265001	0		=			
ANR	265082	Identifier	next		265001	0					
ANR	265083	CallExpression	text . length ( )		265001	1					
ANR	265084	Callee	text . length		265001	0					
ANR	265085	MemberAccess	text . length		265001	0					
ANR	265086	Identifier	text		265001	0					
ANR	265087	Identifier	length		265001	1					
ANR	265088	ArgumentList			265001	1					
ANR	265089	IfStatement	if ( lineNr == 0 )		265001	2					
ANR	265090	Condition	lineNr == 0	61:12:2312:2322	265001	0	True				
ANR	265091	EqualityExpression	lineNr == 0		265001	0		==			
ANR	265092	Identifier	lineNr		265001	0					
ANR	265093	PrimaryExpression	0		265001	1					
ANR	265094	CompoundStatement		12:25:369:369	265001	1					
ANR	265095	ExpressionStatement	++ lineNr	63:12:2392:2400	265001	0	True				
ANR	265096	UnaryExpression	++ lineNr		265001	0					
ANR	265097	IncDec	++		265001	0					
ANR	265098	Identifier	lineNr		265001	1					
ANR	265099	ExpressionStatement	cur = next	64:12:2414:2424	265001	1	True				
ANR	265100	AssignmentExpression	cur = next		265001	0		=			
ANR	265101	Identifier	cur		265001	0					
ANR	265102	Identifier	next		265001	1					
ANR	265103	ContinueStatement	continue ;	65:12:2438:2446	265001	2	True				
ANR	265104	ExpressionStatement	diff = next - cur	68:8:2467:2484	265001	3	True				
ANR	265105	AssignmentExpression	diff = next - cur		265001	0		=			
ANR	265106	Identifier	diff		265001	0					
ANR	265107	AdditiveExpression	next - cur		265001	1		-			
ANR	265108	Identifier	next		265001	0					
ANR	265109	Identifier	cur		265001	1					
ANR	265110	IdentifierDeclStatement	"QString lineStr = text . mid ( cur , diff ) . append ( '\\n' ) ;"	70:8:2495:2545	265001	4	True				
ANR	265111	IdentifierDecl	"lineStr = text . mid ( cur , diff ) . append ( '\\n' )"		265001	0					
ANR	265112	IdentifierDeclType	QString		265001	0					
ANR	265113	Identifier	lineStr		265001	1					
ANR	265114	AssignmentExpression	"lineStr = text . mid ( cur , diff ) . append ( '\\n' )"		265001	2		=			
ANR	265115	Identifier	lineStr		265001	0					
ANR	265116	CallExpression	"text . mid ( cur , diff ) . append ( '\\n' )"		265001	1					
ANR	265117	Callee	"text . mid ( cur , diff ) . append"		265001	0					
ANR	265118	MemberAccess	"text . mid ( cur , diff ) . append"		265001	0					
ANR	265119	CallExpression	"text . mid ( cur , diff )"		265001	0					
ANR	265120	Callee	text . mid		265001	0					
ANR	265121	MemberAccess	text . mid		265001	0					
ANR	265122	Identifier	text		265001	0					
ANR	265123	Identifier	mid		265001	1					
ANR	265124	ArgumentList	cur		265001	1					
ANR	265125	Argument	cur		265001	0					
ANR	265126	Identifier	cur		265001	0					
ANR	265127	Argument	diff		265001	1					
ANR	265128	Identifier	diff		265001	0					
ANR	265129	Identifier	append		265001	1					
ANR	265130	ArgumentList	'\\n'		265001	1					
ANR	265131	Argument	'\\n'		265001	0					
ANR	265132	PrimaryExpression	'\\n'		265001	0					
ANR	265133	IdentifierDeclStatement	"QMap < int , BacktraceLine > :: iterator it = lines . lowerBound ( lineNr - 1 ) ;"	72:8:2598:2668	265001	5	True				
ANR	265134	IdentifierDecl	it = lines . lowerBound ( lineNr - 1 )		265001	0					
ANR	265135	IdentifierDeclType	"QMap < int , BacktraceLine > :: iterator"		265001	0					
ANR	265136	Identifier	it		265001	1					
ANR	265137	AssignmentExpression	it = lines . lowerBound ( lineNr - 1 )		265001	2		=			
ANR	265138	Identifier	it		265001	0					
ANR	265139	CallExpression	lines . lowerBound ( lineNr - 1 )		265001	1					
ANR	265140	Callee	lines . lowerBound		265001	0					
ANR	265141	MemberAccess	lines . lowerBound		265001	0					
ANR	265142	Identifier	lines		265001	0					
ANR	265143	Identifier	lowerBound		265001	1					
ANR	265144	ArgumentList	lineNr - 1		265001	1					
ANR	265145	Argument	lineNr - 1		265001	0					
ANR	265146	AdditiveExpression	lineNr - 1		265001	0		-			
ANR	265147	Identifier	lineNr		265001	0					
ANR	265148	PrimaryExpression	1		265001	1					
ANR	265149	ExpressionStatement	Q_ASSERT ( it != lines . end ( ) )	73:8:2678:2705	265001	6	True				
ANR	265150	CallExpression	Q_ASSERT ( it != lines . end ( ) )		265001	0					
ANR	265151	Callee	Q_ASSERT		265001	0					
ANR	265152	Identifier	Q_ASSERT		265001	0					
ANR	265153	ArgumentList	it != lines . end ( )		265001	1					
ANR	265154	Argument	it != lines . end ( )		265001	0					
ANR	265155	EqualityExpression	it != lines . end ( )		265001	0		!=			
ANR	265156	Identifier	it		265001	0					
ANR	265157	CallExpression	lines . end ( )		265001	1					
ANR	265158	Callee	lines . end		265001	0					
ANR	265159	MemberAccess	lines . end		265001	0					
ANR	265160	Identifier	lines		265001	0					
ANR	265161	Identifier	end		265001	1					
ANR	265162	ArgumentList			265001	1					
ANR	265163	IfStatement	if ( it . key ( ) > lineNr - 1 )		265001	7					
ANR	265164	Condition	it . key ( ) > lineNr - 1	75:12:2811:2831	265001	0	True				
ANR	265165	RelationalExpression	it . key ( ) > lineNr - 1		265001	0		>			
ANR	265166	CallExpression	it . key ( )		265001	0					
ANR	265167	Callee	it . key		265001	0					
ANR	265168	MemberAccess	it . key		265001	0					
ANR	265169	Identifier	it		265001	0					
ANR	265170	Identifier	key		265001	1					
ANR	265171	ArgumentList			265001	1					
ANR	265172	AdditiveExpression	lineNr - 1		265001	1		-			
ANR	265173	Identifier	lineNr		265001	0					
ANR	265174	PrimaryExpression	1		265001	1					
ANR	265175	CompoundStatement		26:35:878:878	265001	1					
ANR	265176	ExpressionStatement	-- it	76:12:2848:2852	265001	0	True				
ANR	265177	UnaryExpression	-- it		265001	0					
ANR	265178	IncDec	--		265001	0					
ANR	265179	Identifier	it		265001	1					
ANR	265180	IdentifierDeclStatement	const BacktraceLine & line = it . value ( ) ;	78:8:2872:2910	265001	8	True				
ANR	265181	IdentifierDecl	& line = it . value ( )		265001	0					
ANR	265182	IdentifierDeclType	const BacktraceLine &		265001	0					
ANR	265183	Identifier	line		265001	1					
ANR	265184	AssignmentExpression	& line = it . value ( )		265001	2		=			
ANR	265185	Identifier	line		265001	0					
ANR	265186	CallExpression	it . value ( )		265001	1					
ANR	265187	Callee	it . value		265001	0					
ANR	265188	MemberAccess	it . value		265001	0					
ANR	265189	Identifier	it		265001	0					
ANR	265190	Identifier	value		265001	1					
ANR	265191	ArgumentList			265001	1					
ANR	265192	IfStatement	if ( line . type ( ) == BacktraceLine :: KCrash )		265001	9					
ANR	265193	Condition	line . type ( ) == BacktraceLine :: KCrash	80:12:2925:2960	265001	0	True				
ANR	265194	EqualityExpression	line . type ( ) == BacktraceLine :: KCrash		265001	0		==			
ANR	265195	CallExpression	line . type ( )		265001	0					
ANR	265196	Callee	line . type		265001	0					
ANR	265197	MemberAccess	line . type		265001	0					
ANR	265198	Identifier	line		265001	0					
ANR	265199	Identifier	type		265001	1					
ANR	265200	ArgumentList			265001	1					
ANR	265201	Identifier	BacktraceLine :: KCrash		265001	1					
ANR	265202	CompoundStatement		31:50:1007:1007	265001	1					
ANR	265203	ExpressionStatement	"setFormat ( cur , diff , crashFormat )"	81:12:2977:3010	265001	0	True				
ANR	265204	CallExpression	"setFormat ( cur , diff , crashFormat )"		265001	0					
ANR	265205	Callee	setFormat		265001	0					
ANR	265206	Identifier	setFormat		265001	0					
ANR	265207	ArgumentList	cur		265001	1					
ANR	265208	Argument	cur		265001	0					
ANR	265209	Identifier	cur		265001	0					
ANR	265210	Argument	diff		265001	1					
ANR	265211	Identifier	diff		265001	0					
ANR	265212	Argument	crashFormat		265001	2					
ANR	265213	Identifier	crashFormat		265001	0					
ANR	265214	ElseStatement	else		265001	0					
ANR	265215	IfStatement	if ( line . type ( ) == BacktraceLine :: ThreadStart || line . type ( ) == BacktraceLine :: ThreadIndicator )		265001	0					
ANR	265216	Condition	line . type ( ) == BacktraceLine :: ThreadStart || line . type ( ) == BacktraceLine :: ThreadIndicator	82:19:3031:3120	265001	0	True				
ANR	265217	OrExpression	line . type ( ) == BacktraceLine :: ThreadStart || line . type ( ) == BacktraceLine :: ThreadIndicator		265001	0		||			
ANR	265218	EqualityExpression	line . type ( ) == BacktraceLine :: ThreadStart		265001	0		==			
ANR	265219	CallExpression	line . type ( )		265001	0					
ANR	265220	Callee	line . type		265001	0					
ANR	265221	MemberAccess	line . type		265001	0					
ANR	265222	Identifier	line		265001	0					
ANR	265223	Identifier	type		265001	1					
ANR	265224	ArgumentList			265001	1					
ANR	265225	Identifier	BacktraceLine :: ThreadStart		265001	1					
ANR	265226	EqualityExpression	line . type ( ) == BacktraceLine :: ThreadIndicator		265001	1		==			
ANR	265227	CallExpression	line . type ( )		265001	0					
ANR	265228	Callee	line . type		265001	0					
ANR	265229	MemberAccess	line . type		265001	0					
ANR	265230	Identifier	line		265001	0					
ANR	265231	Identifier	type		265001	1					
ANR	265232	ArgumentList			265001	1					
ANR	265233	Identifier	BacktraceLine :: ThreadIndicator		265001	1					
ANR	265234	CompoundStatement		33:111:1167:1167	265001	1					
ANR	265235	ExpressionStatement	"setFormat ( cur , diff , threadFormat )"	83:12:3137:3171	265001	0	True				
ANR	265236	CallExpression	"setFormat ( cur , diff , threadFormat )"		265001	0					
ANR	265237	Callee	setFormat		265001	0					
ANR	265238	Identifier	setFormat		265001	0					
ANR	265239	ArgumentList	cur		265001	1					
ANR	265240	Argument	cur		265001	0					
ANR	265241	Identifier	cur		265001	0					
ANR	265242	Argument	diff		265001	1					
ANR	265243	Identifier	diff		265001	0					
ANR	265244	Argument	threadFormat		265001	2					
ANR	265245	Identifier	threadFormat		265001	0					
ANR	265246	ElseStatement	else		265001	0					
ANR	265247	IfStatement	if ( line . type ( ) == BacktraceLine :: Crap )		265001	0					
ANR	265248	Condition	line . type ( ) == BacktraceLine :: Crap	84:19:3192:3225	265001	0	True				
ANR	265249	EqualityExpression	line . type ( ) == BacktraceLine :: Crap		265001	0		==			
ANR	265250	CallExpression	line . type ( )		265001	0					
ANR	265251	Callee	line . type		265001	0					
ANR	265252	MemberAccess	line . type		265001	0					
ANR	265253	Identifier	line		265001	0					
ANR	265254	Identifier	type		265001	1					
ANR	265255	ArgumentList			265001	1					
ANR	265256	Identifier	BacktraceLine :: Crap		265001	1					
ANR	265257	CompoundStatement		35:55:1272:1272	265001	1					
ANR	265258	ExpressionStatement	"setFormat ( cur , diff , crapFormat )"	85:12:3242:3274	265001	0	True				
ANR	265259	CallExpression	"setFormat ( cur , diff , crapFormat )"		265001	0					
ANR	265260	Callee	setFormat		265001	0					
ANR	265261	Identifier	setFormat		265001	0					
ANR	265262	ArgumentList	cur		265001	1					
ANR	265263	Argument	cur		265001	0					
ANR	265264	Identifier	cur		265001	0					
ANR	265265	Argument	diff		265001	1					
ANR	265266	Identifier	diff		265001	0					
ANR	265267	Argument	crapFormat		265001	2					
ANR	265268	Identifier	crapFormat		265001	0					
ANR	265269	ElseStatement	else		265001	0					
ANR	265270	IfStatement	if ( line . type ( ) == BacktraceLine :: StackFrame )		265001	0					
ANR	265271	Condition	line . type ( ) == BacktraceLine :: StackFrame	86:19:3295:3334	265001	0	True				
ANR	265272	EqualityExpression	line . type ( ) == BacktraceLine :: StackFrame		265001	0		==			
ANR	265273	CallExpression	line . type ( )		265001	0					
ANR	265274	Callee	line . type		265001	0					
ANR	265275	MemberAccess	line . type		265001	0					
ANR	265276	Identifier	line		265001	0					
ANR	265277	Identifier	type		265001	1					
ANR	265278	ArgumentList			265001	1					
ANR	265279	Identifier	BacktraceLine :: StackFrame		265001	1					
ANR	265280	CompoundStatement		76:12:3421:3432	265001	1					
ANR	265281	IfStatement	if ( ! line . fileName ( ) . isEmpty ( ) )		265001	0					
ANR	265282	Condition	! line . fileName ( ) . isEmpty ( )	87:16:3355:3380	265001	0	True				
ANR	265283	UnaryOperationExpression	! line . fileName ( ) . isEmpty ( )		265001	0					
ANR	265284	UnaryOperator	!		265001	0					
ANR	265285	CallExpression	line . fileName ( ) . isEmpty ( )		265001	1					
ANR	265286	Callee	line . fileName ( ) . isEmpty		265001	0					
ANR	265287	MemberAccess	line . fileName ( ) . isEmpty		265001	0					
ANR	265288	CallExpression	line . fileName ( )		265001	0					
ANR	265289	Callee	line . fileName		265001	0					
ANR	265290	MemberAccess	line . fileName		265001	0					
ANR	265291	Identifier	line		265001	0					
ANR	265292	Identifier	fileName		265001	1					
ANR	265293	ArgumentList			265001	1					
ANR	265294	Identifier	isEmpty		265001	1					
ANR	265295	ArgumentList			265001	1					
ANR	265296	CompoundStatement		39:16:1445:1492	265001	1					
ANR	265297	IdentifierDeclStatement	int colonPos = line . fileName ( ) . lastIndexOf ( ':' ) ;	88:16:3401:3448	265001	0	True				
ANR	265298	IdentifierDecl	colonPos = line . fileName ( ) . lastIndexOf ( ':' )		265001	0					
ANR	265299	IdentifierDeclType	int		265001	0					
ANR	265300	Identifier	colonPos		265001	1					
ANR	265301	AssignmentExpression	colonPos = line . fileName ( ) . lastIndexOf ( ':' )		265001	2		=			
ANR	265302	Identifier	colonPos		265001	0					
ANR	265303	CallExpression	line . fileName ( ) . lastIndexOf ( ':' )		265001	1					
ANR	265304	Callee	line . fileName ( ) . lastIndexOf		265001	0					
ANR	265305	MemberAccess	line . fileName ( ) . lastIndexOf		265001	0					
ANR	265306	CallExpression	line . fileName ( )		265001	0					
ANR	265307	Callee	line . fileName		265001	0					
ANR	265308	MemberAccess	line . fileName		265001	0					
ANR	265309	Identifier	line		265001	0					
ANR	265310	Identifier	fileName		265001	1					
ANR	265311	ArgumentList			265001	1					
ANR	265312	Identifier	lastIndexOf		265001	1					
ANR	265313	ArgumentList	':'		265001	1					
ANR	265314	Argument	':'		265001	0					
ANR	265315	PrimaryExpression	':'		265001	0					
ANR	265316	ExpressionStatement	"setFormat ( lineStr . indexOf ( line . fileName ( ) ) , colonPos == - 1 ? line . fileName ( ) . length ( ) : colonPos , urlFormat )"	89:16:3466:3574	265001	1	True				
ANR	265317	CallExpression	"setFormat ( lineStr . indexOf ( line . fileName ( ) ) , colonPos == - 1 ? line . fileName ( ) . length ( ) : colonPos , urlFormat )"		265001	0					
ANR	265318	Callee	setFormat		265001	0					
ANR	265319	Identifier	setFormat		265001	0					
ANR	265320	ArgumentList	lineStr . indexOf ( line . fileName ( ) )		265001	1					
ANR	265321	Argument	lineStr . indexOf ( line . fileName ( ) )		265001	0					
ANR	265322	CallExpression	lineStr . indexOf ( line . fileName ( ) )		265001	0					
ANR	265323	Callee	lineStr . indexOf		265001	0					
ANR	265324	MemberAccess	lineStr . indexOf		265001	0					
ANR	265325	Identifier	lineStr		265001	0					
ANR	265326	Identifier	indexOf		265001	1					
ANR	265327	ArgumentList	line . fileName ( )		265001	1					
ANR	265328	Argument	line . fileName ( )		265001	0					
ANR	265329	CallExpression	line . fileName ( )		265001	0					
ANR	265330	Callee	line . fileName		265001	0					
ANR	265331	MemberAccess	line . fileName		265001	0					
ANR	265332	Identifier	line		265001	0					
ANR	265333	Identifier	fileName		265001	1					
ANR	265334	ArgumentList			265001	1					
ANR	265335	Argument	colonPos == - 1 ? line . fileName ( ) . length ( ) : colonPos		265001	1					
ANR	265336	ConditionalExpression	colonPos == - 1 ? line . fileName ( ) . length ( ) : colonPos		265001	0					
ANR	265337	Condition	colonPos == - 1		265001	0					
ANR	265338	EqualityExpression	colonPos == - 1		265001	0		==			
ANR	265339	Identifier	colonPos		265001	0					
ANR	265340	UnaryOperationExpression	- 1		265001	1					
ANR	265341	UnaryOperator	-		265001	0					
ANR	265342	PrimaryExpression	1		265001	1					
ANR	265343	CallExpression	line . fileName ( ) . length ( )		265001	1					
ANR	265344	Callee	line . fileName ( ) . length		265001	0					
ANR	265345	MemberAccess	line . fileName ( ) . length		265001	0					
ANR	265346	CallExpression	line . fileName ( )		265001	0					
ANR	265347	Callee	line . fileName		265001	0					
ANR	265348	MemberAccess	line . fileName		265001	0					
ANR	265349	Identifier	line		265001	0					
ANR	265350	Identifier	fileName		265001	1					
ANR	265351	ArgumentList			265001	1					
ANR	265352	Identifier	length		265001	1					
ANR	265353	ArgumentList			265001	1					
ANR	265354	Identifier	colonPos		265001	2					
ANR	265355	Argument	urlFormat		265001	2					
ANR	265356	Identifier	urlFormat		265001	0					
ANR	265357	IfStatement	if ( ! line . libraryName ( ) . isEmpty ( ) )		265001	1					
ANR	265358	Condition	! line . libraryName ( ) . isEmpty ( )	91:16:3606:3634	265001	0	True				
ANR	265359	UnaryOperationExpression	! line . libraryName ( ) . isEmpty ( )		265001	0					
ANR	265360	UnaryOperator	!		265001	0					
ANR	265361	CallExpression	line . libraryName ( ) . isEmpty ( )		265001	1					
ANR	265362	Callee	line . libraryName ( ) . isEmpty		265001	0					
ANR	265363	MemberAccess	line . libraryName ( ) . isEmpty		265001	0					
ANR	265364	CallExpression	line . libraryName ( )		265001	0					
ANR	265365	Callee	line . libraryName		265001	0					
ANR	265366	MemberAccess	line . libraryName		265001	0					
ANR	265367	Identifier	line		265001	0					
ANR	265368	Identifier	libraryName		265001	1					
ANR	265369	ArgumentList			265001	1					
ANR	265370	Identifier	isEmpty		265001	1					
ANR	265371	ArgumentList			265001	1					
ANR	265372	CompoundStatement		42:47:1681:1681	265001	1					
ANR	265373	ExpressionStatement	"setFormat ( lineStr . indexOf ( line . libraryName ( ) ) , line . libraryName ( ) . length ( ) , urlFormat )"	92:16:3655:3741	265001	0	True				
ANR	265374	CallExpression	"setFormat ( lineStr . indexOf ( line . libraryName ( ) ) , line . libraryName ( ) . length ( ) , urlFormat )"		265001	0					
ANR	265375	Callee	setFormat		265001	0					
ANR	265376	Identifier	setFormat		265001	0					
ANR	265377	ArgumentList	lineStr . indexOf ( line . libraryName ( ) )		265001	1					
ANR	265378	Argument	lineStr . indexOf ( line . libraryName ( ) )		265001	0					
ANR	265379	CallExpression	lineStr . indexOf ( line . libraryName ( ) )		265001	0					
ANR	265380	Callee	lineStr . indexOf		265001	0					
ANR	265381	MemberAccess	lineStr . indexOf		265001	0					
ANR	265382	Identifier	lineStr		265001	0					
ANR	265383	Identifier	indexOf		265001	1					
ANR	265384	ArgumentList	line . libraryName ( )		265001	1					
ANR	265385	Argument	line . libraryName ( )		265001	0					
ANR	265386	CallExpression	line . libraryName ( )		265001	0					
ANR	265387	Callee	line . libraryName		265001	0					
ANR	265388	MemberAccess	line . libraryName		265001	0					
ANR	265389	Identifier	line		265001	0					
ANR	265390	Identifier	libraryName		265001	1					
ANR	265391	ArgumentList			265001	1					
ANR	265392	Argument	line . libraryName ( ) . length ( )		265001	1					
ANR	265393	CallExpression	line . libraryName ( ) . length ( )		265001	0					
ANR	265394	Callee	line . libraryName ( ) . length		265001	0					
ANR	265395	MemberAccess	line . libraryName ( ) . length		265001	0					
ANR	265396	CallExpression	line . libraryName ( )		265001	0					
ANR	265397	Callee	line . libraryName		265001	0					
ANR	265398	MemberAccess	line . libraryName		265001	0					
ANR	265399	Identifier	line		265001	0					
ANR	265400	Identifier	libraryName		265001	1					
ANR	265401	ArgumentList			265001	1					
ANR	265402	Identifier	length		265001	1					
ANR	265403	ArgumentList			265001	1					
ANR	265404	Argument	urlFormat		265001	2					
ANR	265405	Identifier	urlFormat		265001	0					
ANR	265406	IfStatement	if ( ! line . functionName ( ) . isEmpty ( ) )		265001	2					
ANR	265407	Condition	! line . functionName ( ) . isEmpty ( )	94:16:3773:3802	265001	0	True				
ANR	265408	UnaryOperationExpression	! line . functionName ( ) . isEmpty ( )		265001	0					
ANR	265409	UnaryOperator	!		265001	0					
ANR	265410	CallExpression	line . functionName ( ) . isEmpty ( )		265001	1					
ANR	265411	Callee	line . functionName ( ) . isEmpty		265001	0					
ANR	265412	MemberAccess	line . functionName ( ) . isEmpty		265001	0					
ANR	265413	CallExpression	line . functionName ( )		265001	0					
ANR	265414	Callee	line . functionName		265001	0					
ANR	265415	MemberAccess	line . functionName		265001	0					
ANR	265416	Identifier	line		265001	0					
ANR	265417	Identifier	functionName		265001	1					
ANR	265418	ArgumentList			265001	1					
ANR	265419	Identifier	isEmpty		265001	1					
ANR	265420	ArgumentList			265001	1					
ANR	265421	CompoundStatement		46:16:1867:1913	265001	1					
ANR	265422	IdentifierDeclStatement	int idx = lineStr . indexOf ( line . functionName ( ) ) ;	95:16:3823:3869	265001	0	True				
ANR	265423	IdentifierDecl	idx = lineStr . indexOf ( line . functionName ( ) )		265001	0					
ANR	265424	IdentifierDeclType	int		265001	0					
ANR	265425	Identifier	idx		265001	1					
ANR	265426	AssignmentExpression	idx = lineStr . indexOf ( line . functionName ( ) )		265001	2		=			
ANR	265427	Identifier	idx		265001	0					
ANR	265428	CallExpression	lineStr . indexOf ( line . functionName ( ) )		265001	1					
ANR	265429	Callee	lineStr . indexOf		265001	0					
ANR	265430	MemberAccess	lineStr . indexOf		265001	0					
ANR	265431	Identifier	lineStr		265001	0					
ANR	265432	Identifier	indexOf		265001	1					
ANR	265433	ArgumentList	line . functionName ( )		265001	1					
ANR	265434	Argument	line . functionName ( )		265001	0					
ANR	265435	CallExpression	line . functionName ( )		265001	0					
ANR	265436	Callee	line . functionName		265001	0					
ANR	265437	MemberAccess	line . functionName		265001	0					
ANR	265438	Identifier	line		265001	0					
ANR	265439	Identifier	functionName		265001	1					
ANR	265440	ArgumentList			265001	1					
ANR	265441	IfStatement	if ( idx != - 1 )		265001	1					
ANR	265442	Condition	idx != - 1	96:20:3891:3899	265001	0	True				
ANR	265443	EqualityExpression	idx != - 1		265001	0		!=			
ANR	265444	Identifier	idx		265001	0					
ANR	265445	UnaryOperationExpression	- 1		265001	1					
ANR	265446	UnaryOperator	-		265001	0					
ANR	265447	PrimaryExpression	1		265001	1					
ANR	265448	CompoundStatement		51:20:2137:2151	265001	1					
ANR	265449	IdentifierDeclStatement	int i = idx ;	99:20:4060:4071	265001	0	True				
ANR	265450	IdentifierDecl	i = idx		265001	0					
ANR	265451	IdentifierDeclType	int		265001	0					
ANR	265452	Identifier	i		265001	1					
ANR	265453	AssignmentExpression	i = idx		265001	2		=			
ANR	265454	Identifier	idx		265001	0					
ANR	265455	Identifier	idx		265001	1					
ANR	265456	IdentifierDeclStatement	int from = idx ;	100:20:4093:4107	265001	1	True				
ANR	265457	IdentifierDecl	from = idx		265001	0					
ANR	265458	IdentifierDeclType	int		265001	0					
ANR	265459	Identifier	from		265001	1					
ANR	265460	AssignmentExpression	from = idx		265001	2		=			
ANR	265461	Identifier	idx		265001	0					
ANR	265462	Identifier	idx		265001	1					
ANR	265463	WhileStatement	while ( i < idx + line . functionName ( ) . length ( ) )		265001	2					
ANR	265464	Condition	i < idx + line . functionName ( ) . length ( )	101:27:4136:4173	265001	0	True				
ANR	265465	RelationalExpression	i < idx + line . functionName ( ) . length ( )		265001	0		<			
ANR	265466	Identifier	i		265001	0					
ANR	265467	AdditiveExpression	idx + line . functionName ( ) . length ( )		265001	1		+			
ANR	265468	Identifier	idx		265001	0					
ANR	265469	CallExpression	line . functionName ( ) . length ( )		265001	1					
ANR	265470	Callee	line . functionName ( ) . length		265001	0					
ANR	265471	MemberAccess	line . functionName ( ) . length		265001	0					
ANR	265472	CallExpression	line . functionName ( )		265001	0					
ANR	265473	Callee	line . functionName		265001	0					
ANR	265474	MemberAccess	line . functionName		265001	0					
ANR	265475	Identifier	line		265001	0					
ANR	265476	Identifier	functionName		265001	1					
ANR	265477	ArgumentList			265001	1					
ANR	265478	Identifier	length		265001	1					
ANR	265479	ArgumentList			265001	1					
ANR	265480	CompoundStatement		52:67:2220:2220	265001	1					
ANR	265481	IfStatement	if ( lineStr . at ( i ) == ':' )		265001	0					
ANR	265482	Condition	lineStr . at ( i ) == ':'	102:28:4206:4225	265001	0	True				
ANR	265483	EqualityExpression	lineStr . at ( i ) == ':'		265001	0		==			
ANR	265484	CallExpression	lineStr . at ( i )		265001	0					
ANR	265485	Callee	lineStr . at		265001	0					
ANR	265486	MemberAccess	lineStr . at		265001	0					
ANR	265487	Identifier	lineStr		265001	0					
ANR	265488	Identifier	at		265001	1					
ANR	265489	ArgumentList	i		265001	1					
ANR	265490	Argument	i		265001	0					
ANR	265491	Identifier	i		265001	0					
ANR	265492	PrimaryExpression	':'		265001	1					
ANR	265493	CompoundStatement		53:50:2272:2272	265001	1					
ANR	265494	ExpressionStatement	"setFormat ( from , i - from , otheridFormat )"	103:28:4258:4298	265001	0	True				
ANR	265495	CallExpression	"setFormat ( from , i - from , otheridFormat )"		265001	0					
ANR	265496	Callee	setFormat		265001	0					
ANR	265497	Identifier	setFormat		265001	0					
ANR	265498	ArgumentList	from		265001	1					
ANR	265499	Argument	from		265001	0					
ANR	265500	Identifier	from		265001	0					
ANR	265501	Argument	i - from		265001	1					
ANR	265502	AdditiveExpression	i - from		265001	0		-			
ANR	265503	Identifier	i		265001	0					
ANR	265504	Identifier	from		265001	1					
ANR	265505	Argument	otheridFormat		265001	2					
ANR	265506	Identifier	otheridFormat		265001	0					
ANR	265507	ExpressionStatement	i += 2	105:28:4367:4373	265001	1	True				
ANR	265508	AssignmentExpression	i += 2		265001	0		+=			
ANR	265509	Identifier	i		265001	0					
ANR	265510	PrimaryExpression	2		265001	1					
ANR	265511	ExpressionStatement	from = i	106:28:4403:4411	265001	2	True				
ANR	265512	AssignmentExpression	from = i		265001	0		=			
ANR	265513	Identifier	from		265001	0					
ANR	265514	Identifier	i		265001	1					
ANR	265515	ContinueStatement	continue ;	107:28:4441:4449	265001	3	True				
ANR	265516	ElseStatement	else		265001	0					
ANR	265517	IfStatement	if ( lineStr . at ( i ) == '<' || lineStr . at ( i ) == '>' )		265001	0					
ANR	265518	Condition	lineStr . at ( i ) == '<' || lineStr . at ( i ) == '>'	108:35:4486:4529	265001	0	True				
ANR	265519	OrExpression	lineStr . at ( i ) == '<' || lineStr . at ( i ) == '>'		265001	0		||			
ANR	265520	EqualityExpression	lineStr . at ( i ) == '<'		265001	0		==			
ANR	265521	CallExpression	lineStr . at ( i )		265001	0					
ANR	265522	Callee	lineStr . at		265001	0					
ANR	265523	MemberAccess	lineStr . at		265001	0					
ANR	265524	Identifier	lineStr		265001	0					
ANR	265525	Identifier	at		265001	1					
ANR	265526	ArgumentList	i		265001	1					
ANR	265527	Argument	i		265001	0					
ANR	265528	Identifier	i		265001	0					
ANR	265529	PrimaryExpression	'<'		265001	1					
ANR	265530	EqualityExpression	lineStr . at ( i ) == '>'		265001	1		==			
ANR	265531	CallExpression	lineStr . at ( i )		265001	0					
ANR	265532	Callee	lineStr . at		265001	0					
ANR	265533	MemberAccess	lineStr . at		265001	0					
ANR	265534	Identifier	lineStr		265001	0					
ANR	265535	Identifier	at		265001	1					
ANR	265536	ArgumentList	i		265001	1					
ANR	265537	Argument	i		265001	0					
ANR	265538	Identifier	i		265001	0					
ANR	265539	PrimaryExpression	'>'		265001	1					
ANR	265540	CompoundStatement		59:81:2576:2576	265001	1					
ANR	265541	ExpressionStatement	"setFormat ( from , i - from , otheridFormat )"	109:28:4562:4602	265001	0	True				
ANR	265542	CallExpression	"setFormat ( from , i - from , otheridFormat )"		265001	0					
ANR	265543	Callee	setFormat		265001	0					
ANR	265544	Identifier	setFormat		265001	0					
ANR	265545	ArgumentList	from		265001	1					
ANR	265546	Argument	from		265001	0					
ANR	265547	Identifier	from		265001	0					
ANR	265548	Argument	i - from		265001	1					
ANR	265549	AdditiveExpression	i - from		265001	0		-			
ANR	265550	Identifier	i		265001	0					
ANR	265551	Identifier	from		265001	1					
ANR	265552	Argument	otheridFormat		265001	2					
ANR	265553	Identifier	otheridFormat		265001	0					
ANR	265554	ExpressionStatement	++ i	110:28:4632:4635	265001	1	True				
ANR	265555	UnaryExpression	++ i		265001	0					
ANR	265556	IncDec	++		265001	0					
ANR	265557	Identifier	i		265001	1					
ANR	265558	ExpressionStatement	from = i	111:28:4665:4673	265001	2	True				
ANR	265559	AssignmentExpression	from = i		265001	0		=			
ANR	265560	Identifier	from		265001	0					
ANR	265561	Identifier	i		265001	1					
ANR	265562	ContinueStatement	continue ;	112:28:4703:4711	265001	3	True				
ANR	265563	ExpressionStatement	++ i	114:24:4763:4766	265001	1	True				
ANR	265564	UnaryExpression	++ i		265001	0					
ANR	265565	IncDec	++		265001	0					
ANR	265566	Identifier	i		265001	1					
ANR	265567	IfStatement	"if ( line . functionName ( ) == QLatin1String ( ""qFatal"" ) || line . functionName ( ) == QLatin1String ( ""abort"" ) || line . functionName ( ) == QLatin1String ( ""__assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI_abort"" ) )"		265001	3					
ANR	265568	Condition	"line . functionName ( ) == QLatin1String ( ""qFatal"" ) || line . functionName ( ) == QLatin1String ( ""abort"" ) || line . functionName ( ) == QLatin1String ( ""__assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI_abort"" )"	116:24:4814:5107	265001	0	True				
ANR	265569	OrExpression	"line . functionName ( ) == QLatin1String ( ""qFatal"" ) || line . functionName ( ) == QLatin1String ( ""abort"" ) || line . functionName ( ) == QLatin1String ( ""__assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI_abort"" )"		265001	0		||			
ANR	265570	EqualityExpression	"line . functionName ( ) == QLatin1String ( ""qFatal"" )"		265001	0		==			
ANR	265571	CallExpression	line . functionName ( )		265001	0					
ANR	265572	Callee	line . functionName		265001	0					
ANR	265573	MemberAccess	line . functionName		265001	0					
ANR	265574	Identifier	line		265001	0					
ANR	265575	Identifier	functionName		265001	1					
ANR	265576	ArgumentList			265001	1					
ANR	265577	CallExpression	"QLatin1String ( ""qFatal"" )"		265001	1					
ANR	265578	Callee	QLatin1String		265001	0					
ANR	265579	Identifier	QLatin1String		265001	0					
ANR	265580	ArgumentList	"""qFatal"""		265001	1					
ANR	265581	Argument	"""qFatal"""		265001	0					
ANR	265582	PrimaryExpression	"""qFatal"""		265001	0					
ANR	265583	OrExpression	"line . functionName ( ) == QLatin1String ( ""abort"" ) || line . functionName ( ) == QLatin1String ( ""__assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI_abort"" )"		265001	1		||			
ANR	265584	EqualityExpression	"line . functionName ( ) == QLatin1String ( ""abort"" )"		265001	0		==			
ANR	265585	CallExpression	line . functionName ( )		265001	0					
ANR	265586	Callee	line . functionName		265001	0					
ANR	265587	MemberAccess	line . functionName		265001	0					
ANR	265588	Identifier	line		265001	0					
ANR	265589	Identifier	functionName		265001	1					
ANR	265590	ArgumentList			265001	1					
ANR	265591	CallExpression	"QLatin1String ( ""abort"" )"		265001	1					
ANR	265592	Callee	QLatin1String		265001	0					
ANR	265593	Identifier	QLatin1String		265001	0					
ANR	265594	ArgumentList	"""abort"""		265001	1					
ANR	265595	Argument	"""abort"""		265001	0					
ANR	265596	PrimaryExpression	"""abort"""		265001	0					
ANR	265597	OrExpression	"line . functionName ( ) == QLatin1String ( ""__assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI_abort"" )"		265001	1		||			
ANR	265598	EqualityExpression	"line . functionName ( ) == QLatin1String ( ""__assert_fail"" )"		265001	0		==			
ANR	265599	CallExpression	line . functionName ( )		265001	0					
ANR	265600	Callee	line . functionName		265001	0					
ANR	265601	MemberAccess	line . functionName		265001	0					
ANR	265602	Identifier	line		265001	0					
ANR	265603	Identifier	functionName		265001	1					
ANR	265604	ArgumentList			265001	1					
ANR	265605	CallExpression	"QLatin1String ( ""__assert_fail"" )"		265001	1					
ANR	265606	Callee	QLatin1String		265001	0					
ANR	265607	Identifier	QLatin1String		265001	0					
ANR	265608	ArgumentList	"""__assert_fail"""		265001	1					
ANR	265609	Argument	"""__assert_fail"""		265001	0					
ANR	265610	PrimaryExpression	"""__assert_fail"""		265001	0					
ANR	265611	OrExpression	"line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" ) || line . functionName ( ) == QLatin1String ( ""*__GI_abort"" )"		265001	1		||			
ANR	265612	EqualityExpression	"line . functionName ( ) == QLatin1String ( ""*__GI___assert_fail"" )"		265001	0		==			
ANR	265613	CallExpression	line . functionName ( )		265001	0					
ANR	265614	Callee	line . functionName		265001	0					
ANR	265615	MemberAccess	line . functionName		265001	0					
ANR	265616	Identifier	line		265001	0					
ANR	265617	Identifier	functionName		265001	1					
ANR	265618	ArgumentList			265001	1					
ANR	265619	CallExpression	"QLatin1String ( ""*__GI___assert_fail"" )"		265001	1					
ANR	265620	Callee	QLatin1String		265001	0					
ANR	265621	Identifier	QLatin1String		265001	0					
ANR	265622	ArgumentList	"""*__GI___assert_fail"""		265001	1					
ANR	265623	Argument	"""*__GI___assert_fail"""		265001	0					
ANR	265624	PrimaryExpression	"""*__GI___assert_fail"""		265001	0					
ANR	265625	EqualityExpression	"line . functionName ( ) == QLatin1String ( ""*__GI_abort"" )"		265001	1		==			
ANR	265626	CallExpression	line . functionName ( )		265001	0					
ANR	265627	Callee	line . functionName		265001	0					
ANR	265628	MemberAccess	line . functionName		265001	0					
ANR	265629	Identifier	line		265001	0					
ANR	265630	Identifier	functionName		265001	1					
ANR	265631	ArgumentList			265001	1					
ANR	265632	CallExpression	"QLatin1String ( ""*__GI_abort"" )"		265001	1					
ANR	265633	Callee	QLatin1String		265001	0					
ANR	265634	Identifier	QLatin1String		265001	0					
ANR	265635	ArgumentList	"""*__GI_abort"""		265001	1					
ANR	265636	Argument	"""*__GI_abort"""		265001	0					
ANR	265637	PrimaryExpression	"""*__GI_abort"""		265001	0					
ANR	265638	CompoundStatement		68:143:3154:3154	265001	1					
ANR	265639	ExpressionStatement	"setFormat ( from , i - from , assertFormat )"	118:24:5136:5175	265001	0	True				
ANR	265640	CallExpression	"setFormat ( from , i - from , assertFormat )"		265001	0					
ANR	265641	Callee	setFormat		265001	0					
ANR	265642	Identifier	setFormat		265001	0					
ANR	265643	ArgumentList	from		265001	1					
ANR	265644	Argument	from		265001	0					
ANR	265645	Identifier	from		265001	0					
ANR	265646	Argument	i - from		265001	1					
ANR	265647	AdditiveExpression	i - from		265001	0		-			
ANR	265648	Identifier	i		265001	0					
ANR	265649	Identifier	from		265001	1					
ANR	265650	Argument	assertFormat		265001	2					
ANR	265651	Identifier	assertFormat		265001	0					
ANR	265652	ElseStatement	else		265001	0					
ANR	265653	CompoundStatement		70:27:3248:3248	265001	0					
ANR	265654	ExpressionStatement	"setFormat ( from , i - from , funcFormat )"	120:24:5230:5267	265001	0	True				
ANR	265655	CallExpression	"setFormat ( from , i - from , funcFormat )"		265001	0					
ANR	265656	Callee	setFormat		265001	0					
ANR	265657	Identifier	setFormat		265001	0					
ANR	265658	ArgumentList	from		265001	1					
ANR	265659	Argument	from		265001	0					
ANR	265660	Identifier	from		265001	0					
ANR	265661	Argument	i - from		265001	1					
ANR	265662	AdditiveExpression	i - from		265001	0		-			
ANR	265663	Identifier	i		265001	0					
ANR	265664	Identifier	from		265001	1					
ANR	265665	Argument	funcFormat		265001	2					
ANR	265666	Identifier	funcFormat		265001	0					
ANR	265667	IdentifierDeclStatement	int idx = 0 ;	125:12:5377:5388	265001	3	True				
ANR	265668	IdentifierDecl	idx = 0		265001	0					
ANR	265669	IdentifierDeclType	int		265001	0					
ANR	265670	Identifier	idx		265001	1					
ANR	265671	AssignmentExpression	idx = 0		265001	2		=			
ANR	265672	Identifier	idx		265001	0					
ANR	265673	PrimaryExpression	0		265001	1					
ANR	265674	WhileStatement	"while ( ( idx = hexptrPattern . indexIn ( lineStr , idx ) ) != - 1 )"		265001	4					
ANR	265675	Condition	"( idx = hexptrPattern . indexIn ( lineStr , idx ) ) != - 1"	126:19:5409:5457	265001	0	True				
ANR	265676	EqualityExpression	"( idx = hexptrPattern . indexIn ( lineStr , idx ) ) != - 1"		265001	0		!=			
ANR	265677	AssignmentExpression	"idx = hexptrPattern . indexIn ( lineStr , idx )"		265001	0		=			
ANR	265678	Identifier	idx		265001	0					
ANR	265679	CallExpression	"hexptrPattern . indexIn ( lineStr , idx )"		265001	1					
ANR	265680	Callee	hexptrPattern . indexIn		265001	0					
ANR	265681	MemberAccess	hexptrPattern . indexIn		265001	0					
ANR	265682	Identifier	hexptrPattern		265001	0					
ANR	265683	Identifier	indexIn		265001	1					
ANR	265684	ArgumentList	lineStr		265001	1					
ANR	265685	Argument	lineStr		265001	0					
ANR	265686	Identifier	lineStr		265001	0					
ANR	265687	Argument	idx		265001	1					
ANR	265688	Identifier	idx		265001	0					
ANR	265689	UnaryOperationExpression	- 1		265001	1					
ANR	265690	UnaryOperator	-		265001	0					
ANR	265691	PrimaryExpression	1		265001	1					
ANR	265692	CompoundStatement		77:70:3504:3504	265001	1					
ANR	265693	IfStatement	"if ( hexptrPattern . cap ( ) == QLatin1String ( ""0x0"" ) )"		265001	0					
ANR	265694	Condition	"hexptrPattern . cap ( ) == QLatin1String ( ""0x0"" )"	127:20:5482:5524	265001	0	True				
ANR	265695	EqualityExpression	"hexptrPattern . cap ( ) == QLatin1String ( ""0x0"" )"		265001	0		==			
ANR	265696	CallExpression	hexptrPattern . cap ( )		265001	0					
ANR	265697	Callee	hexptrPattern . cap		265001	0					
ANR	265698	MemberAccess	hexptrPattern . cap		265001	0					
ANR	265699	Identifier	hexptrPattern		265001	0					
ANR	265700	Identifier	cap		265001	1					
ANR	265701	ArgumentList			265001	1					
ANR	265702	CallExpression	"QLatin1String ( ""0x0"" )"		265001	1					
ANR	265703	Callee	QLatin1String		265001	0					
ANR	265704	Identifier	QLatin1String		265001	0					
ANR	265705	ArgumentList	"""0x0"""		265001	1					
ANR	265706	Argument	"""0x0"""		265001	0					
ANR	265707	PrimaryExpression	"""0x0"""		265001	0					
ANR	265708	CompoundStatement		78:65:3571:3571	265001	1					
ANR	265709	ExpressionStatement	"setFormat ( idx , hexptrPattern . matchedLength ( ) , nullptrFormat )"	128:20:5549:5609	265001	0	True				
ANR	265710	CallExpression	"setFormat ( idx , hexptrPattern . matchedLength ( ) , nullptrFormat )"		265001	0					
ANR	265711	Callee	setFormat		265001	0					
ANR	265712	Identifier	setFormat		265001	0					
ANR	265713	ArgumentList	idx		265001	1					
ANR	265714	Argument	idx		265001	0					
ANR	265715	Identifier	idx		265001	0					
ANR	265716	Argument	hexptrPattern . matchedLength ( )		265001	1					
ANR	265717	CallExpression	hexptrPattern . matchedLength ( )		265001	0					
ANR	265718	Callee	hexptrPattern . matchedLength		265001	0					
ANR	265719	MemberAccess	hexptrPattern . matchedLength		265001	0					
ANR	265720	Identifier	hexptrPattern		265001	0					
ANR	265721	Identifier	matchedLength		265001	1					
ANR	265722	ArgumentList			265001	1					
ANR	265723	Argument	nullptrFormat		265001	2					
ANR	265724	Identifier	nullptrFormat		265001	0					
ANR	265725	ExpressionStatement	idx += hexptrPattern . matchedLength ( )	130:16:5645:5681	265001	1	True				
ANR	265726	AssignmentExpression	idx += hexptrPattern . matchedLength ( )		265001	0		+=			
ANR	265727	Identifier	idx		265001	0					
ANR	265728	CallExpression	hexptrPattern . matchedLength ( )		265001	1					
ANR	265729	Callee	hexptrPattern . matchedLength		265001	0					
ANR	265730	MemberAccess	hexptrPattern . matchedLength		265001	0					
ANR	265731	Identifier	hexptrPattern		265001	0					
ANR	265732	Identifier	matchedLength		265001	1					
ANR	265733	ArgumentList			265001	1					
ANR	265734	ExpressionStatement	cur = next	134:8:5716:5726	265001	10	True				
ANR	265735	AssignmentExpression	cur = next		265001	0		=			
ANR	265736	Identifier	cur		265001	0					
ANR	265737	Identifier	next		265001	1					
ANR	265738	ExpressionStatement	++ lineNr	135:8:5736:5744	265001	11	True				
ANR	265739	UnaryExpression	++ lineNr		265001	0					
ANR	265740	IncDec	++		265001	0					
ANR	265741	Identifier	lineNr		265001	1					
ANR	265742	ReturnType	void		265001	1					
ANR	265743	Identifier	GdbHighlighter :: highlightBlock		265001	2					
ANR	265744	ParameterList	const QString & text		265001	3					
ANR	265745	Parameter	const QString & text	49:36:1934:1952	265001	0	True				
ANR	265746	ParameterType	const QString &		265001	0					
ANR	265747	Identifier	text		265001	1					
ANR	265748	CFGEntryNode	ENTRY		265001		True				
ANR	265749	CFGExitNode	EXIT		265001		True				
ANR	265750	Symbol	threadFormat		265001						
ANR	265751	Symbol	line . type		265001						
ANR	265752	Symbol	hexptrPattern . indexIn		265001						
ANR	265753	Symbol	line . functionName ( ) . isEmpty		265001						
ANR	265754	Symbol	lineStr . at		265001						
ANR	265755	Symbol	BacktraceLine :: ThreadStart		265001						
ANR	265756	Symbol	currentBlock ( ) . firstLineNumber		265001						
ANR	265757	Symbol	BacktraceLine :: ThreadIndicator		265001						
ANR	265758	Symbol	line . fileName ( ) . lastIndexOf		265001						
ANR	265759	Symbol	lineStr		265001						
ANR	265760	Symbol	line . libraryName ( ) . isEmpty		265001						
ANR	265761	Symbol	BacktraceLine :: Crap		265001						
ANR	265762	Symbol	from		265001						
ANR	265763	Symbol	text		265001						
ANR	265764	Symbol	line . fileName ( ) . isEmpty		265001						
ANR	265765	Symbol	lineNr		265001						
ANR	265766	Symbol	lineStr . indexOf		265001						
ANR	265767	Symbol	"text . mid ( cur , diff ) . append"		265001						
ANR	265768	Symbol	diff		265001						
ANR	265769	Symbol	it		265001						
ANR	265770	Symbol	line . functionName		265001						
ANR	265771	Symbol	hexptrPattern . matchedLength		265001						
ANR	265772	Symbol	text . indexOf		265001						
ANR	265773	Symbol	QLatin1String		265001						
ANR	265774	Symbol	lines . lowerBound		265001						
ANR	265775	Symbol	urlFormat		265001						
ANR	265776	Symbol	line . libraryName ( ) . length		265001						
ANR	265777	Symbol	assertFormat		265001						
ANR	265778	Symbol	otheridFormat		265001						
ANR	265779	Symbol	idx		265001						
ANR	265780	Symbol	next		265001						
ANR	265781	Symbol	cur		265001						
ANR	265782	Symbol	funcFormat		265001						
ANR	265783	Symbol	crapFormat		265001						
ANR	265784	Symbol	line		265001						
ANR	265785	Symbol	BacktraceLine :: KCrash		265001						
ANR	265786	Symbol	it . key		265001						
ANR	265787	Symbol	lines		265001						
ANR	265788	Symbol	line . libraryName		265001						
ANR	265789	Symbol	line . fileName ( ) . length		265001						
ANR	265790	Symbol	hexptrPattern		265001						
ANR	265791	Symbol	text . length		265001						
ANR	265792	Symbol	line . fileName		265001						
ANR	265793	Symbol	currentBlock		265001						
ANR	265794	Symbol	nullptrFormat		265001						
ANR	265795	Symbol	it . value		265001						
ANR	265796	Symbol	i		265001						
ANR	265797	Symbol	hexptrPattern . cap		265001						
ANR	265798	Symbol	line . functionName ( ) . length		265001						
ANR	265799	Symbol	lines . end		265001						
ANR	265800	Symbol	colonPos		265001						
ANR	265801	Symbol	text . mid		265001						
ANR	265802	Symbol	crashFormat		265001						
ANR	265803	Symbol	BacktraceLine :: StackFrame		265001						
