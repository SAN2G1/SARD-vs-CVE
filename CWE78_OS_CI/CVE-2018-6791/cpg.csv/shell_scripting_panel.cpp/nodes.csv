command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	710810	File	data/converged/CVE-2018-6791_plasma-workspace/shell_scripting_panel.cpp								
ANR	710811	Function	Panel :: Panel	37:0:1070:1242							
ANR	710812	FunctionDef	"Panel :: Panel (Plasma :: Containment * containment , QObject * parent)"		710811	0					
ANR	710813	CompoundStatement		39:0:1173:1242	710811	0					
ANR	710814	Statement	m_corona	40:4:1179:1186	710811	0	True				
ANR	710815	Statement	=	40:13:1188:1188	710811	1	True				
ANR	710816	Statement	qobject_cast	40:15:1190:1201	710811	2	True				
ANR	710817	Statement	<	40:27:1202:1202	710811	3	True				
ANR	710818	Statement	ShellCorona	40:28:1203:1213	710811	4	True				
ANR	710819	Statement	*	40:40:1215:1215	710811	5	True				
ANR	710820	Statement	>	40:41:1216:1216	710811	6	True				
ANR	710821	ExpressionStatement	containment -> corona ( )	40:42:1217:1240	710811	7	True				
ANR	710822	CallExpression	containment -> corona ( )		710811	0					
ANR	710823	Callee	containment -> corona		710811	0					
ANR	710824	PtrMemberAccess	containment -> corona		710811	0					
ANR	710825	Identifier	containment		710811	0					
ANR	710826	Identifier	corona		710811	1					
ANR	710827	ArgumentList			710811	1					
ANR	710828	Identifier	Panel :: Panel		710811	1					
ANR	710829	ParameterList	"Plasma :: Containment * containment , QObject * parent"		710811	2					
ANR	710830	Parameter	Plasma :: Containment * containment	37:13:1083:1114	710811	0	True				
ANR	710831	ParameterType	Plasma :: Containment *		710811	0					
ANR	710832	Identifier	containment		710811	1					
ANR	710833	Parameter	QObject * parent	37:47:1117:1131	710811	1	True				
ANR	710834	ParameterType	QObject *		710811	0					
ANR	710835	Identifier	parent		710811	1					
ANR	710836	CFGEntryNode	ENTRY		710811		True				
ANR	710837	CFGExitNode	EXIT		710811		True				
ANR	710838	Symbol	containment		710811						
ANR	710839	Symbol	parent		710811						
ANR	710840	Function	Panel :: ~Panel	43:0:1245:1263							
ANR	710841	FunctionDef	Panel :: ~Panel ()		710840	0					
ANR	710842	CompoundStatement		44:0:1261:1263	710840	0					
ANR	710843	Identifier	Panel :: ~Panel		710840	1					
ANR	710844	ParameterList			710840	2					
ANR	710845	CFGEntryNode	ENTRY		710840		True				
ANR	710846	CFGExitNode	EXIT		710840		True				
ANR	710847	Function	Panel :: location	47:0:1266:2057							
ANR	710848	FunctionDef	Panel :: location ()		710847	0					
ANR	710849	CompoundStatement		48:0:1298:2057	710847	0					
ANR	710850	IdentifierDeclStatement	Plasma :: Containment * c = containment ( ) ;	49:4:1304:1342	710847	0	True				
ANR	710851	IdentifierDecl	* c = containment ( )		710847	0					
ANR	710852	IdentifierDeclType	Plasma :: Containment *		710847	0					
ANR	710853	Identifier	c		710847	1					
ANR	710854	AssignmentExpression	* c = containment ( )		710847	2		=			
ANR	710855	Identifier	c		710847	0					
ANR	710856	CallExpression	containment ( )		710847	1					
ANR	710857	Callee	containment		710847	0					
ANR	710858	Identifier	containment		710847	0					
ANR	710859	ArgumentList			710847	1					
ANR	710860	IfStatement	if ( ! c )		710847	1					
ANR	710861	Condition	! c	50:8:1352:1353	710847	0	True				
ANR	710862	UnaryOperationExpression	! c		710847	0					
ANR	710863	UnaryOperator	!		710847	0					
ANR	710864	Identifier	c		710847	1					
ANR	710865	CompoundStatement		3:12:57:57	710847	1					
ANR	710866	ReturnStatement	"return ""floating"" ;"	51:8:1366:1383	710847	0	True				
ANR	710867	PrimaryExpression	"""floating"""		710847	0					
ANR	710868	SwitchStatement	switch ( c -> location ( ) )		710847	2					
ANR	710869	Condition	c -> location ( )	54:12:1404:1416	710847	0	True				
ANR	710870	CallExpression	c -> location ( )		710847	0					
ANR	710871	Callee	c -> location		710847	0					
ANR	710872	PtrMemberAccess	c -> location		710847	0					
ANR	710873	Identifier	c		710847	0					
ANR	710874	Identifier	location		710847	1					
ANR	710875	ArgumentList			710847	1					
ANR	710876	CompoundStatement		7:27:120:120	710847	1					
ANR	710877	Label	case Plasma :: Types :: Floating :	55:8:1429:1457	710847	0	True				
ANR	710878	Identifier	Plasma :: Types :: Floating		710847	0					
ANR	710879	ReturnStatement	"return ""floating"" ;"	56:12:1471:1488	710847	1	True				
ANR	710880	PrimaryExpression	"""floating"""		710847	0					
ANR	710881	BreakStatement	break ;	57:12:1502:1507	710847	2	True				
ANR	710882	Label	case Plasma :: Types :: Desktop :	58:8:1517:1544	710847	3	True				
ANR	710883	Identifier	Plasma :: Types :: Desktop		710847	0					
ANR	710884	ReturnStatement	"return ""desktop"" ;"	59:12:1558:1574	710847	4	True				
ANR	710885	PrimaryExpression	"""desktop"""		710847	0					
ANR	710886	BreakStatement	break ;	60:12:1588:1593	710847	5	True				
ANR	710887	Label	case Plasma :: Types :: FullScreen :	61:8:1603:1633	710847	6	True				
ANR	710888	Identifier	Plasma :: Types :: FullScreen		710847	0					
ANR	710889	ReturnStatement	"return ""fullscreen"" ;"	62:12:1647:1666	710847	7	True				
ANR	710890	PrimaryExpression	"""fullscreen"""		710847	0					
ANR	710891	BreakStatement	break ;	63:12:1680:1685	710847	8	True				
ANR	710892	Label	case Plasma :: Types :: TopEdge :	64:8:1695:1722	710847	9	True				
ANR	710893	Identifier	Plasma :: Types :: TopEdge		710847	0					
ANR	710894	ReturnStatement	"return ""top"" ;"	65:12:1736:1748	710847	10	True				
ANR	710895	PrimaryExpression	"""top"""		710847	0					
ANR	710896	BreakStatement	break ;	66:12:1762:1767	710847	11	True				
ANR	710897	Label	case Plasma :: Types :: BottomEdge :	67:8:1777:1807	710847	12	True				
ANR	710898	Identifier	Plasma :: Types :: BottomEdge		710847	0					
ANR	710899	ReturnStatement	"return ""bottom"" ;"	68:12:1821:1836	710847	13	True				
ANR	710900	PrimaryExpression	"""bottom"""		710847	0					
ANR	710901	BreakStatement	break ;	69:12:1850:1855	710847	14	True				
ANR	710902	Label	case Plasma :: Types :: LeftEdge :	70:8:1865:1893	710847	15	True				
ANR	710903	Identifier	Plasma :: Types :: LeftEdge		710847	0					
ANR	710904	ReturnStatement	"return ""left"" ;"	71:12:1907:1920	710847	16	True				
ANR	710905	PrimaryExpression	"""left"""		710847	0					
ANR	710906	BreakStatement	break ;	72:12:1934:1939	710847	17	True				
ANR	710907	Label	case Plasma :: Types :: RightEdge :	73:8:1949:1978	710847	18	True				
ANR	710908	Identifier	Plasma :: Types :: RightEdge		710847	0					
ANR	710909	ReturnStatement	"return ""right"" ;"	74:12:1992:2006	710847	19	True				
ANR	710910	PrimaryExpression	"""right"""		710847	0					
ANR	710911	BreakStatement	break ;	75:12:2020:2025	710847	20	True				
ANR	710912	ReturnStatement	"return ""floating"" ;"	78:4:2038:2055	710847	3	True				
ANR	710913	PrimaryExpression	"""floating"""		710847	0					
ANR	710914	ReturnType	QString		710847	1					
ANR	710915	Identifier	Panel :: location		710847	2					
ANR	710916	ParameterList			710847	3					
ANR	710917	CFGEntryNode	ENTRY		710847		True				
ANR	710918	CFGExitNode	EXIT		710847		True				
ANR	710919	Symbol	containment		710847						
ANR	710920	Symbol	c		710847						
ANR	710921	Symbol	c -> location		710847						
ANR	710922	Symbol	* c		710847						
ANR	710923	Function	Panel :: setLocation	81:0:2060:3026							
ANR	710924	FunctionDef	Panel :: setLocation (const QString & locationString)		710923	0					
ANR	710925	CompoundStatement		82:0:2115:3026	710923	0					
ANR	710926	IdentifierDeclStatement	Plasma :: Containment * c = containment ( ) ;	83:4:2121:2159	710923	0	True				
ANR	710927	IdentifierDecl	* c = containment ( )		710923	0					
ANR	710928	IdentifierDeclType	Plasma :: Containment *		710923	0					
ANR	710929	Identifier	c		710923	1					
ANR	710930	AssignmentExpression	* c = containment ( )		710923	2		=			
ANR	710931	Identifier	c		710923	0					
ANR	710932	CallExpression	containment ( )		710923	1					
ANR	710933	Callee	containment		710923	0					
ANR	710934	Identifier	containment		710923	0					
ANR	710935	ArgumentList			710923	1					
ANR	710936	IfStatement	if ( ! c )		710923	1					
ANR	710937	Condition	! c	84:8:2169:2170	710923	0	True				
ANR	710938	UnaryOperationExpression	! c		710923	0					
ANR	710939	UnaryOperator	!		710923	0					
ANR	710940	Identifier	c		710923	1					
ANR	710941	CompoundStatement		3:12:57:57	710923	1					
ANR	710942	ReturnStatement	return ;	85:8:2183:2189	710923	0	True				
ANR	710943	IdentifierDeclStatement	const QString lower = locationString . toLower ( ) ;	88:4:2202:2248	710923	2	True				
ANR	710944	IdentifierDecl	lower = locationString . toLower ( )		710923	0					
ANR	710945	IdentifierDeclType	const QString		710923	0					
ANR	710946	Identifier	lower		710923	1					
ANR	710947	AssignmentExpression	lower = locationString . toLower ( )		710923	2		=			
ANR	710948	Identifier	lower		710923	0					
ANR	710949	CallExpression	locationString . toLower ( )		710923	1					
ANR	710950	Callee	locationString . toLower		710923	0					
ANR	710951	MemberAccess	locationString . toLower		710923	0					
ANR	710952	Identifier	locationString		710923	0					
ANR	710953	Identifier	toLower		710923	1					
ANR	710954	ArgumentList			710923	1					
ANR	710955	IdentifierDeclStatement	Plasma :: Types :: Location loc = Plasma :: Types :: Floating ;	89:4:2254:2307	710923	3	True				
ANR	710956	IdentifierDecl	loc = Plasma :: Types :: Floating		710923	0					
ANR	710957	IdentifierDeclType	Plasma :: Types :: Location		710923	0					
ANR	710958	Identifier	loc		710923	1					
ANR	710959	AssignmentExpression	loc = Plasma :: Types :: Floating		710923	2		=			
ANR	710960	Identifier	Plasma :: Types :: Floating		710923	0					
ANR	710961	Identifier	Plasma :: Types :: Floating		710923	1					
ANR	710962	IdentifierDeclStatement	Plasma :: Types :: FormFactor ff = Plasma :: Types :: Planar ;	90:4:2313:2365	710923	4	True				
ANR	710963	IdentifierDecl	ff = Plasma :: Types :: Planar		710923	0					
ANR	710964	IdentifierDeclType	Plasma :: Types :: FormFactor		710923	0					
ANR	710965	Identifier	ff		710923	1					
ANR	710966	AssignmentExpression	ff = Plasma :: Types :: Planar		710923	2		=			
ANR	710967	Identifier	Plasma :: Types :: Planar		710923	0					
ANR	710968	Identifier	Plasma :: Types :: Planar		710923	1					
ANR	710969	IfStatement	"if ( lower == ""desktop"" )"		710923	5					
ANR	710970	Condition	"lower == ""desktop"""	91:8:2375:2392	710923	0	True				
ANR	710971	EqualityExpression	"lower == ""desktop"""		710923	0		==			
ANR	710972	Identifier	lower		710923	0					
ANR	710973	PrimaryExpression	"""desktop"""		710923	1					
ANR	710974	CompoundStatement		10:28:279:279	710923	1					
ANR	710975	ExpressionStatement	loc = Plasma :: Types :: Desktop	92:8:2405:2433	710923	0	True				
ANR	710976	AssignmentExpression	loc = Plasma :: Types :: Desktop		710923	0		=			
ANR	710977	Identifier	loc		710923	0					
ANR	710978	Identifier	Plasma :: Types :: Desktop		710923	1					
ANR	710979	ElseStatement	else		710923	0					
ANR	710980	IfStatement	"if ( lower == ""fullscreen"" )"		710923	0					
ANR	710981	Condition	"lower == ""fullscreen"""	93:15:2450:2470	710923	0	True				
ANR	710982	EqualityExpression	"lower == ""fullscreen"""		710923	0		==			
ANR	710983	Identifier	lower		710923	0					
ANR	710984	PrimaryExpression	"""fullscreen"""		710923	1					
ANR	710985	CompoundStatement		12:38:357:357	710923	1					
ANR	710986	ExpressionStatement	loc = Plasma :: Types :: FullScreen	94:8:2483:2514	710923	0	True				
ANR	710987	AssignmentExpression	loc = Plasma :: Types :: FullScreen		710923	0		=			
ANR	710988	Identifier	loc		710923	0					
ANR	710989	Identifier	Plasma :: Types :: FullScreen		710923	1					
ANR	710990	ElseStatement	else		710923	0					
ANR	710991	IfStatement	"if ( lower == ""top"" )"		710923	0					
ANR	710992	Condition	"lower == ""top"""	95:15:2531:2544	710923	0	True				
ANR	710993	EqualityExpression	"lower == ""top"""		710923	0		==			
ANR	710994	Identifier	lower		710923	0					
ANR	710995	PrimaryExpression	"""top"""		710923	1					
ANR	710996	CompoundStatement		14:31:431:431	710923	1					
ANR	710997	ExpressionStatement	loc = Plasma :: Types :: TopEdge	96:8:2557:2585	710923	0	True				
ANR	710998	AssignmentExpression	loc = Plasma :: Types :: TopEdge		710923	0		=			
ANR	710999	Identifier	loc		710923	0					
ANR	711000	Identifier	Plasma :: Types :: TopEdge		710923	1					
ANR	711001	ExpressionStatement	ff = Plasma :: Types :: Horizontal	97:8:2595:2625	710923	1	True				
ANR	711002	AssignmentExpression	ff = Plasma :: Types :: Horizontal		710923	0		=			
ANR	711003	Identifier	ff		710923	0					
ANR	711004	Identifier	Plasma :: Types :: Horizontal		710923	1					
ANR	711005	ElseStatement	else		710923	0					
ANR	711006	IfStatement	"if ( lower == ""bottom"" )"		710923	0					
ANR	711007	Condition	"lower == ""bottom"""	98:15:2642:2658	710923	0	True				
ANR	711008	EqualityExpression	"lower == ""bottom"""		710923	0		==			
ANR	711009	Identifier	lower		710923	0					
ANR	711010	PrimaryExpression	"""bottom"""		710923	1					
ANR	711011	CompoundStatement		17:34:545:545	710923	1					
ANR	711012	ExpressionStatement	loc = Plasma :: Types :: BottomEdge	99:8:2671:2702	710923	0	True				
ANR	711013	AssignmentExpression	loc = Plasma :: Types :: BottomEdge		710923	0		=			
ANR	711014	Identifier	loc		710923	0					
ANR	711015	Identifier	Plasma :: Types :: BottomEdge		710923	1					
ANR	711016	ExpressionStatement	ff = Plasma :: Types :: Horizontal	100:8:2712:2742	710923	1	True				
ANR	711017	AssignmentExpression	ff = Plasma :: Types :: Horizontal		710923	0		=			
ANR	711018	Identifier	ff		710923	0					
ANR	711019	Identifier	Plasma :: Types :: Horizontal		710923	1					
ANR	711020	ElseStatement	else		710923	0					
ANR	711021	IfStatement	"if ( lower == ""left"" )"		710923	0					
ANR	711022	Condition	"lower == ""left"""	101:15:2759:2773	710923	0	True				
ANR	711023	EqualityExpression	"lower == ""left"""		710923	0		==			
ANR	711024	Identifier	lower		710923	0					
ANR	711025	PrimaryExpression	"""left"""		710923	1					
ANR	711026	CompoundStatement		20:32:660:660	710923	1					
ANR	711027	ExpressionStatement	loc = Plasma :: Types :: LeftEdge	102:8:2786:2815	710923	0	True				
ANR	711028	AssignmentExpression	loc = Plasma :: Types :: LeftEdge		710923	0		=			
ANR	711029	Identifier	loc		710923	0					
ANR	711030	Identifier	Plasma :: Types :: LeftEdge		710923	1					
ANR	711031	ExpressionStatement	ff = Plasma :: Types :: Vertical	103:8:2825:2853	710923	1	True				
ANR	711032	AssignmentExpression	ff = Plasma :: Types :: Vertical		710923	0		=			
ANR	711033	Identifier	ff		710923	0					
ANR	711034	Identifier	Plasma :: Types :: Vertical		710923	1					
ANR	711035	ElseStatement	else		710923	0					
ANR	711036	IfStatement	"if ( lower == ""right"" )"		710923	0					
ANR	711037	Condition	"lower == ""right"""	104:15:2870:2885	710923	0	True				
ANR	711038	EqualityExpression	"lower == ""right"""		710923	0		==			
ANR	711039	Identifier	lower		710923	0					
ANR	711040	PrimaryExpression	"""right"""		710923	1					
ANR	711041	CompoundStatement		23:33:772:772	710923	1					
ANR	711042	ExpressionStatement	loc = Plasma :: Types :: RightEdge	105:8:2898:2928	710923	0	True				
ANR	711043	AssignmentExpression	loc = Plasma :: Types :: RightEdge		710923	0		=			
ANR	711044	Identifier	loc		710923	0					
ANR	711045	Identifier	Plasma :: Types :: RightEdge		710923	1					
ANR	711046	ExpressionStatement	ff = Plasma :: Types :: Vertical	106:8:2938:2966	710923	1	True				
ANR	711047	AssignmentExpression	ff = Plasma :: Types :: Vertical		710923	0		=			
ANR	711048	Identifier	ff		710923	0					
ANR	711049	Identifier	Plasma :: Types :: Vertical		710923	1					
ANR	711050	ExpressionStatement	c -> setLocation ( loc )	109:4:2979:2998	710923	6	True				
ANR	711051	CallExpression	c -> setLocation ( loc )		710923	0					
ANR	711052	Callee	c -> setLocation		710923	0					
ANR	711053	PtrMemberAccess	c -> setLocation		710923	0					
ANR	711054	Identifier	c		710923	0					
ANR	711055	Identifier	setLocation		710923	1					
ANR	711056	ArgumentList	loc		710923	1					
ANR	711057	Argument	loc		710923	0					
ANR	711058	Identifier	loc		710923	0					
ANR	711059	ExpressionStatement	c -> setFormFactor ( ff )	110:4:3004:3024	710923	7	True				
ANR	711060	CallExpression	c -> setFormFactor ( ff )		710923	0					
ANR	711061	Callee	c -> setFormFactor		710923	0					
ANR	711062	PtrMemberAccess	c -> setFormFactor		710923	0					
ANR	711063	Identifier	c		710923	0					
ANR	711064	Identifier	setFormFactor		710923	1					
ANR	711065	ArgumentList	ff		710923	1					
ANR	711066	Argument	ff		710923	0					
ANR	711067	Identifier	ff		710923	0					
ANR	711068	ReturnType	void		710923	1					
ANR	711069	Identifier	Panel :: setLocation		710923	2					
ANR	711070	ParameterList	const QString & locationString		710923	3					
ANR	711071	Parameter	const QString & locationString	81:24:2084:2112	710923	0	True				
ANR	711072	ParameterType	const QString &		710923	0					
ANR	711073	Identifier	locationString		710923	1					
ANR	711074	CFGEntryNode	ENTRY		710923		True				
ANR	711075	CFGExitNode	EXIT		710923		True				
ANR	711076	Symbol	ff		710923						
ANR	711077	Symbol	loc		710923						
ANR	711078	Symbol	c		710923						
ANR	711079	Symbol	Plasma :: Types :: Horizontal		710923						
ANR	711080	Symbol	Plasma :: Types :: Floating		710923						
ANR	711081	Symbol	Plasma :: Types :: FullScreen		710923						
ANR	711082	Symbol	locationString . toLower		710923						
ANR	711083	Symbol	lower		710923						
ANR	711084	Symbol	Plasma :: Types :: Planar		710923						
ANR	711085	Symbol	Plasma :: Types :: Vertical		710923						
ANR	711086	Symbol	Plasma :: Types :: RightEdge		710923						
ANR	711087	Symbol	Plasma :: Types :: Desktop		710923						
ANR	711088	Symbol	Plasma :: Types :: BottomEdge		710923						
ANR	711089	Symbol	containment		710923						
ANR	711090	Symbol	Plasma :: Types :: LeftEdge		710923						
ANR	711091	Symbol	locationString		710923						
ANR	711092	Symbol	Plasma :: Types :: TopEdge		710923						
ANR	711093	Function	Panel :: panel	113:0:3029:3194							
ANR	711094	FunctionDef	Panel :: panel ()		711093	0					
ANR	711095	CompoundStatement		114:0:3061:3194	711093	0					
ANR	711096	IdentifierDeclStatement	Plasma :: Containment * c = containment ( ) ;	115:4:3067:3105	711093	0	True				
ANR	711097	IdentifierDecl	* c = containment ( )		711093	0					
ANR	711098	IdentifierDeclType	Plasma :: Containment *		711093	0					
ANR	711099	Identifier	c		711093	1					
ANR	711100	AssignmentExpression	* c = containment ( )		711093	2		=			
ANR	711101	Identifier	c		711093	0					
ANR	711102	CallExpression	containment ( )		711093	1					
ANR	711103	Callee	containment		711093	0					
ANR	711104	Identifier	containment		711093	0					
ANR	711105	ArgumentList			711093	1					
ANR	711106	IfStatement	if ( ! c || ! m_corona )		711093	1					
ANR	711107	Condition	! c || ! m_corona	116:8:3115:3129	711093	0	True				
ANR	711108	OrExpression	! c || ! m_corona		711093	0		||			
ANR	711109	UnaryOperationExpression	! c		711093	0					
ANR	711110	UnaryOperator	!		711093	0					
ANR	711111	Identifier	c		711093	1					
ANR	711112	UnaryOperationExpression	! m_corona		711093	1					
ANR	711113	UnaryOperator	!		711093	0					
ANR	711114	Identifier	m_corona		711093	1					
ANR	711115	CompoundStatement		3:25:70:70	711093	1					
ANR	711116	ReturnStatement	return 0 ;	117:8:3142:3150	711093	0	True				
ANR	711117	PrimaryExpression	0		711093	0					
ANR	711118	ReturnStatement	return m_corona -> panelView ( c ) ;	120:4:3163:3192	711093	2	True				
ANR	711119	CallExpression	m_corona -> panelView ( c )		711093	0					
ANR	711120	Callee	m_corona -> panelView		711093	0					
ANR	711121	PtrMemberAccess	m_corona -> panelView		711093	0					
ANR	711122	Identifier	m_corona		711093	0					
ANR	711123	Identifier	panelView		711093	1					
ANR	711124	ArgumentList	c		711093	1					
ANR	711125	Argument	c		711093	0					
ANR	711126	Identifier	c		711093	0					
ANR	711127	ReturnType	PanelView *		711093	1					
ANR	711128	Identifier	Panel :: panel		711093	2					
ANR	711129	ParameterList			711093	3					
ANR	711130	CFGEntryNode	ENTRY		711093		True				
ANR	711131	CFGExitNode	EXIT		711093		True				
ANR	711132	Symbol	containment		711093						
ANR	711133	Symbol	c		711093						
ANR	711134	Symbol	m_corona -> panelView		711093						
ANR	711135	Symbol	m_corona		711093						
ANR	711136	Symbol	* m_corona		711093						
ANR	711137	Function	Panel :: panelConfig	124:0:3198:3554							
ANR	711138	FunctionDef	Panel :: panelConfig ()		711137	0					
ANR	711139	CompoundStatement		125:0:3238:3554	711137	0					
ANR	711140	IdentifierDeclStatement	"int screenNum = qMax ( screen ( ) , 0 ) ;"	126:4:3244:3277	711137	0	True				
ANR	711141	IdentifierDecl	"screenNum = qMax ( screen ( ) , 0 )"		711137	0					
ANR	711142	IdentifierDeclType	int		711137	0					
ANR	711143	Identifier	screenNum		711137	1					
ANR	711144	AssignmentExpression	"screenNum = qMax ( screen ( ) , 0 )"		711137	2		=			
ANR	711145	Identifier	screenNum		711137	0					
ANR	711146	CallExpression	"qMax ( screen ( ) , 0 )"		711137	1					
ANR	711147	Callee	qMax		711137	0					
ANR	711148	Identifier	qMax		711137	0					
ANR	711149	ArgumentList	screen ( )		711137	1					
ANR	711150	Argument	screen ( )		711137	0					
ANR	711151	CallExpression	screen ( )		711137	0					
ANR	711152	Callee	screen		711137	0					
ANR	711153	Identifier	screen		711137	0					
ANR	711154	ArgumentList			711137	1					
ANR	711155	Argument	0		711137	1					
ANR	711156	PrimaryExpression	0		711137	0					
ANR	711157	IfStatement	if ( QGuiApplication :: screens ( ) . size ( ) < screenNum )		711137	1					
ANR	711158	Condition	QGuiApplication :: screens ( ) . size ( ) < screenNum	128:8:3346:3390	711137	0	True				
ANR	711159	RelationalExpression	QGuiApplication :: screens ( ) . size ( ) < screenNum		711137	0		<			
ANR	711160	CallExpression	QGuiApplication :: screens ( ) . size ( )		711137	0					
ANR	711161	Callee	QGuiApplication :: screens ( ) . size		711137	0					
ANR	711162	MemberAccess	QGuiApplication :: screens ( ) . size		711137	0					
ANR	711163	CallExpression	QGuiApplication :: screens ( )		711137	0					
ANR	711164	Callee	QGuiApplication :: screens		711137	0					
ANR	711165	Identifier	QGuiApplication :: screens		711137	0					
ANR	711166	ArgumentList			711137	1					
ANR	711167	Identifier	size		711137	1					
ANR	711168	ArgumentList			711137	1					
ANR	711169	Identifier	screenNum		711137	1					
ANR	711170	CompoundStatement		4:55:154:154	711137	1					
ANR	711171	ReturnStatement	return KConfigGroup ( ) ;	129:8:3403:3424	711137	0	True				
ANR	711172	CallExpression	KConfigGroup ( )		711137	0					
ANR	711173	Callee	KConfigGroup		711137	0					
ANR	711174	Identifier	KConfigGroup		711137	0					
ANR	711175	ArgumentList			711137	1					
ANR	711176	IdentifierDeclStatement	QScreen * s = QGuiApplication :: screens ( ) . at ( screenNum ) ;	131:4:3436:3489	711137	2	True				
ANR	711177	IdentifierDecl	* s = QGuiApplication :: screens ( ) . at ( screenNum )		711137	0					
ANR	711178	IdentifierDeclType	QScreen *		711137	0					
ANR	711179	Identifier	s		711137	1					
ANR	711180	AssignmentExpression	* s = QGuiApplication :: screens ( ) . at ( screenNum )		711137	2		=			
ANR	711181	Identifier	s		711137	0					
ANR	711182	CallExpression	QGuiApplication :: screens ( ) . at ( screenNum )		711137	1					
ANR	711183	Callee	QGuiApplication :: screens ( ) . at		711137	0					
ANR	711184	MemberAccess	QGuiApplication :: screens ( ) . at		711137	0					
ANR	711185	CallExpression	QGuiApplication :: screens ( )		711137	0					
ANR	711186	Callee	QGuiApplication :: screens		711137	0					
ANR	711187	Identifier	QGuiApplication :: screens		711137	0					
ANR	711188	ArgumentList			711137	1					
ANR	711189	Identifier	at		711137	1					
ANR	711190	ArgumentList	screenNum		711137	1					
ANR	711191	Argument	screenNum		711137	0					
ANR	711192	Identifier	screenNum		711137	0					
ANR	711193	ReturnStatement	"return PanelView :: panelConfig ( m_corona , containment ( ) , s ) ;"	132:4:3495:3552	711137	3	True				
ANR	711194	CallExpression	"PanelView :: panelConfig ( m_corona , containment ( ) , s )"		711137	0					
ANR	711195	Callee	PanelView :: panelConfig		711137	0					
ANR	711196	Identifier	PanelView :: panelConfig		711137	0					
ANR	711197	ArgumentList	m_corona		711137	1					
ANR	711198	Argument	m_corona		711137	0					
ANR	711199	Identifier	m_corona		711137	0					
ANR	711200	Argument	containment ( )		711137	1					
ANR	711201	CallExpression	containment ( )		711137	0					
ANR	711202	Callee	containment		711137	0					
ANR	711203	Identifier	containment		711137	0					
ANR	711204	ArgumentList			711137	1					
ANR	711205	Argument	s		711137	2					
ANR	711206	Identifier	s		711137	0					
ANR	711207	ReturnType	KConfigGroup		711137	1					
ANR	711208	Identifier	Panel :: panelConfig		711137	2					
ANR	711209	ParameterList			711137	3					
ANR	711210	CFGEntryNode	ENTRY		711137		True				
ANR	711211	CFGExitNode	EXIT		711137		True				
ANR	711212	Symbol	QGuiApplication :: screens ( ) . size		711137						
ANR	711213	Symbol	containment		711137						
ANR	711214	Symbol	s		711137						
ANR	711215	Symbol	PanelView :: panelConfig		711137						
ANR	711216	Symbol	qMax		711137						
ANR	711217	Symbol	screen		711137						
ANR	711218	Symbol	QGuiApplication :: screens ( ) . at		711137						
ANR	711219	Symbol	QGuiApplication :: screens		711137						
ANR	711220	Symbol	screenNum		711137						
ANR	711221	Symbol	KConfigGroup		711137						
ANR	711222	Symbol	m_corona		711137						
ANR	711223	Function	Panel :: alignment	135:0:3557:3890							
ANR	711224	FunctionDef	Panel :: alignment ()		711223	0					
ANR	711225	CompoundStatement		136:0:3590:3890	711223	0					
ANR	711226	SwitchStatement	"switch ( panelConfig ( ) . readEntry ( ""alignment"" , 0 ) )"		711223	0					
ANR	711227	Condition	"panelConfig ( ) . readEntry ( ""alignment"" , 0 )"	137:12:3604:3642	711223	0	True				
ANR	711228	CallExpression	"panelConfig ( ) . readEntry ( ""alignment"" , 0 )"		711223	0					
ANR	711229	Callee	panelConfig ( ) . readEntry		711223	0					
ANR	711230	MemberAccess	panelConfig ( ) . readEntry		711223	0					
ANR	711231	CallExpression	panelConfig ( )		711223	0					
ANR	711232	Callee	panelConfig		711223	0					
ANR	711233	Identifier	panelConfig		711223	0					
ANR	711234	ArgumentList			711223	1					
ANR	711235	Identifier	readEntry		711223	1					
ANR	711236	ArgumentList	"""alignment"""		711223	1					
ANR	711237	Argument	"""alignment"""		711223	0					
ANR	711238	PrimaryExpression	"""alignment"""		711223	0					
ANR	711239	Argument	0		711223	1					
ANR	711240	PrimaryExpression	0		711223	0					
ANR	711241	CompoundStatement		2:53:54:54	711223	1					
ANR	711242	Label	case Qt :: AlignRight :	138:8:3655:3674	711223	0	True				
ANR	711243	Identifier	Qt :: AlignRight		711223	0					
ANR	711244	ReturnStatement	"return ""right"" ;"	139:12:3688:3702	711223	1	True				
ANR	711245	PrimaryExpression	"""right"""		711223	0					
ANR	711246	BreakStatement	break ;	140:12:3716:3721	711223	2	True				
ANR	711247	Label	case Qt :: AlignCenter :	141:8:3731:3751	711223	3	True				
ANR	711248	Identifier	Qt :: AlignCenter		711223	0					
ANR	711249	ReturnStatement	"return ""center"" ;"	142:12:3765:3780	711223	4	True				
ANR	711250	PrimaryExpression	"""center"""		711223	0					
ANR	711251	BreakStatement	break ;	143:12:3794:3799	711223	5	True				
ANR	711252	Label	default :	144:8:3809:3816	711223	6	True				
ANR	711253	Identifier	default		711223	0					
ANR	711254	ReturnStatement	"return ""left"" ;"	145:12:3830:3843	711223	7	True				
ANR	711255	PrimaryExpression	"""left"""		711223	0					
ANR	711256	BreakStatement	break ;	146:12:3857:3862	711223	8	True				
ANR	711257	ReturnStatement	"return ""left"" ;"	149:4:3875:3888	711223	1	True				
ANR	711258	PrimaryExpression	"""left"""		711223	0					
ANR	711259	ReturnType	QString		711223	1					
ANR	711260	Identifier	Panel :: alignment		711223	2					
ANR	711261	ParameterList			711223	3					
ANR	711262	CFGEntryNode	ENTRY		711223		True				
ANR	711263	CFGExitNode	EXIT		711223		True				
ANR	711264	Symbol	panelConfig		711223						
ANR	711265	Symbol	panelConfig ( ) . readEntry		711223						
ANR	711266	Function	Panel :: setAlignment	152:0:3893:4299							
ANR	711267	FunctionDef	Panel :: setAlignment (const QString & alignment)		711266	0					
ANR	711268	CompoundStatement		153:0:3944:4299	711266	0					
ANR	711269	IdentifierDeclStatement	int a = Qt :: AlignLeft ;	154:4:3950:3971	711266	0	True				
ANR	711270	IdentifierDecl	a = Qt :: AlignLeft		711266	0					
ANR	711271	IdentifierDeclType	int		711266	0					
ANR	711272	Identifier	a		711266	1					
ANR	711273	AssignmentExpression	a = Qt :: AlignLeft		711266	2		=			
ANR	711274	Identifier	Qt :: AlignLeft		711266	0					
ANR	711275	Identifier	Qt :: AlignLeft		711266	1					
ANR	711276	IfStatement	"if ( alignment . compare ( ""right"" , Qt :: CaseInsensitive ) == 0 )"		711266	1					
ANR	711277	Condition	"alignment . compare ( ""right"" , Qt :: CaseInsensitive ) == 0"	155:8:3981:4032	711266	0	True				
ANR	711278	EqualityExpression	"alignment . compare ( ""right"" , Qt :: CaseInsensitive ) == 0"		711266	0		==			
ANR	711279	CallExpression	"alignment . compare ( ""right"" , Qt :: CaseInsensitive )"		711266	0					
ANR	711280	Callee	alignment . compare		711266	0					
ANR	711281	MemberAccess	alignment . compare		711266	0					
ANR	711282	Identifier	alignment		711266	0					
ANR	711283	Identifier	compare		711266	1					
ANR	711284	ArgumentList	"""right"""		711266	1					
ANR	711285	Argument	"""right"""		711266	0					
ANR	711286	PrimaryExpression	"""right"""		711266	0					
ANR	711287	Argument	Qt :: CaseInsensitive		711266	1					
ANR	711288	Identifier	Qt :: CaseInsensitive		711266	0					
ANR	711289	PrimaryExpression	0		711266	1					
ANR	711290	CompoundStatement		3:62:90:90	711266	1					
ANR	711291	ExpressionStatement	a = Qt :: AlignRight	156:8:4045:4063	711266	0	True				
ANR	711292	AssignmentExpression	a = Qt :: AlignRight		711266	0		=			
ANR	711293	Identifier	a		711266	0					
ANR	711294	Identifier	Qt :: AlignRight		711266	1					
ANR	711295	ElseStatement	else		711266	0					
ANR	711296	IfStatement	"if ( alignment . compare ( ""center"" , Qt :: CaseInsensitive ) == 0 )"		711266	0					
ANR	711297	Condition	"alignment . compare ( ""center"" , Qt :: CaseInsensitive ) == 0"	157:15:4080:4132	711266	0	True				
ANR	711298	EqualityExpression	"alignment . compare ( ""center"" , Qt :: CaseInsensitive ) == 0"		711266	0		==			
ANR	711299	CallExpression	"alignment . compare ( ""center"" , Qt :: CaseInsensitive )"		711266	0					
ANR	711300	Callee	alignment . compare		711266	0					
ANR	711301	MemberAccess	alignment . compare		711266	0					
ANR	711302	Identifier	alignment		711266	0					
ANR	711303	Identifier	compare		711266	1					
ANR	711304	ArgumentList	"""center"""		711266	1					
ANR	711305	Argument	"""center"""		711266	0					
ANR	711306	PrimaryExpression	"""center"""		711266	0					
ANR	711307	Argument	Qt :: CaseInsensitive		711266	1					
ANR	711308	Identifier	Qt :: CaseInsensitive		711266	0					
ANR	711309	PrimaryExpression	0		711266	1					
ANR	711310	CompoundStatement		5:70:190:190	711266	1					
ANR	711311	ExpressionStatement	a = Qt :: AlignCenter	158:8:4145:4164	711266	0	True				
ANR	711312	AssignmentExpression	a = Qt :: AlignCenter		711266	0		=			
ANR	711313	Identifier	a		711266	0					
ANR	711314	Identifier	Qt :: AlignCenter		711266	1					
ANR	711315	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""alignment"" , a )"	161:4:4177:4217	711266	2	True				
ANR	711316	CallExpression	"panelConfig ( ) . writeEntry ( ""alignment"" , a )"		711266	0					
ANR	711317	Callee	panelConfig ( ) . writeEntry		711266	0					
ANR	711318	MemberAccess	panelConfig ( ) . writeEntry		711266	0					
ANR	711319	CallExpression	panelConfig ( )		711266	0					
ANR	711320	Callee	panelConfig		711266	0					
ANR	711321	Identifier	panelConfig		711266	0					
ANR	711322	ArgumentList			711266	1					
ANR	711323	Identifier	writeEntry		711266	1					
ANR	711324	ArgumentList	"""alignment"""		711266	1					
ANR	711325	Argument	"""alignment"""		711266	0					
ANR	711326	PrimaryExpression	"""alignment"""		711266	0					
ANR	711327	Argument	a		711266	1					
ANR	711328	Identifier	a		711266	0					
ANR	711329	IfStatement	if ( panel ( ) )		711266	3					
ANR	711330	Condition	panel ( )	162:8:4227:4233	711266	0	True				
ANR	711331	CallExpression	panel ( )		711266	0					
ANR	711332	Callee	panel		711266	0					
ANR	711333	Identifier	panel		711266	0					
ANR	711334	ArgumentList			711266	1					
ANR	711335	CompoundStatement		10:17:291:291	711266	1					
ANR	711336	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	163:8:4246:4291	711266	0	True				
ANR	711337	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711266	0					
ANR	711338	Callee	QMetaObject :: invokeMethod		711266	0					
ANR	711339	Identifier	QMetaObject :: invokeMethod		711266	0					
ANR	711340	ArgumentList	panel ( )		711266	1					
ANR	711341	Argument	panel ( )		711266	0					
ANR	711342	CallExpression	panel ( )		711266	0					
ANR	711343	Callee	panel		711266	0					
ANR	711344	Identifier	panel		711266	0					
ANR	711345	ArgumentList			711266	1					
ANR	711346	Argument	"""restore"""		711266	1					
ANR	711347	PrimaryExpression	"""restore"""		711266	0					
ANR	711348	ReturnType	void		711266	1					
ANR	711349	Identifier	Panel :: setAlignment		711266	2					
ANR	711350	ParameterList	const QString & alignment		711266	3					
ANR	711351	Parameter	const QString & alignment	152:25:3918:3941	711266	0	True				
ANR	711352	ParameterType	const QString &		711266	0					
ANR	711353	Identifier	alignment		711266	1					
ANR	711354	CFGEntryNode	ENTRY		711266		True				
ANR	711355	CFGExitNode	EXIT		711266		True				
ANR	711356	Symbol	a		711266						
ANR	711357	Symbol	Qt :: AlignCenter		711266						
ANR	711358	Symbol	panelConfig		711266						
ANR	711359	Symbol	Qt :: AlignLeft		711266						
ANR	711360	Symbol	Qt :: AlignRight		711266						
ANR	711361	Symbol	Qt :: CaseInsensitive		711266						
ANR	711362	Symbol	alignment		711266						
ANR	711363	Symbol	panel		711266						
ANR	711364	Symbol	alignment . compare		711266						
ANR	711365	Function	Panel :: offset	167:0:4302:4379							
ANR	711366	FunctionDef	Panel :: offset ()		711365	0					
ANR	711367	CompoundStatement		168:0:4328:4379	711365	0					
ANR	711368	ReturnStatement	"return panelConfig ( ) . readEntry ( ""offset"" , 0 ) ;"	169:4:4334:4377	711365	0	True				
ANR	711369	CallExpression	"panelConfig ( ) . readEntry ( ""offset"" , 0 )"		711365	0					
ANR	711370	Callee	panelConfig ( ) . readEntry		711365	0					
ANR	711371	MemberAccess	panelConfig ( ) . readEntry		711365	0					
ANR	711372	CallExpression	panelConfig ( )		711365	0					
ANR	711373	Callee	panelConfig		711365	0					
ANR	711374	Identifier	panelConfig		711365	0					
ANR	711375	ArgumentList			711365	1					
ANR	711376	Identifier	readEntry		711365	1					
ANR	711377	ArgumentList	"""offset"""		711365	1					
ANR	711378	Argument	"""offset"""		711365	0					
ANR	711379	PrimaryExpression	"""offset"""		711365	0					
ANR	711380	Argument	0		711365	1					
ANR	711381	PrimaryExpression	0		711365	0					
ANR	711382	ReturnType	int		711365	1					
ANR	711383	Identifier	Panel :: offset		711365	2					
ANR	711384	ParameterList			711365	3					
ANR	711385	CFGEntryNode	ENTRY		711365		True				
ANR	711386	CFGExitNode	EXIT		711365		True				
ANR	711387	Symbol	panelConfig		711365						
ANR	711388	Symbol	panelConfig ( ) . readEntry		711365						
ANR	711389	Function	Panel :: setOffset	172:0:4382:4542							
ANR	711390	FunctionDef	Panel :: setOffset (int pixels)		711389	0					
ANR	711391	CompoundStatement		173:0:4416:4542	711389	0					
ANR	711392	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""offset"" , pixels )"	174:3:4421:4463	711389	0	True				
ANR	711393	CallExpression	"panelConfig ( ) . writeEntry ( ""offset"" , pixels )"		711389	0					
ANR	711394	Callee	panelConfig ( ) . writeEntry		711389	0					
ANR	711395	MemberAccess	panelConfig ( ) . writeEntry		711389	0					
ANR	711396	CallExpression	panelConfig ( )		711389	0					
ANR	711397	Callee	panelConfig		711389	0					
ANR	711398	Identifier	panelConfig		711389	0					
ANR	711399	ArgumentList			711389	1					
ANR	711400	Identifier	writeEntry		711389	1					
ANR	711401	ArgumentList	"""offset"""		711389	1					
ANR	711402	Argument	"""offset"""		711389	0					
ANR	711403	PrimaryExpression	"""offset"""		711389	0					
ANR	711404	Argument	pixels		711389	1					
ANR	711405	Identifier	pixels		711389	0					
ANR	711406	IfStatement	if ( panel ( ) )		711389	1					
ANR	711407	Condition	panel ( )	175:7:4472:4478	711389	0	True				
ANR	711408	CallExpression	panel ( )		711389	0					
ANR	711409	Callee	panel		711389	0					
ANR	711410	Identifier	panel		711389	0					
ANR	711411	ArgumentList			711389	1					
ANR	711412	CompoundStatement		3:16:64:64	711389	1					
ANR	711413	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	176:7:4490:4535	711389	0	True				
ANR	711414	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711389	0					
ANR	711415	Callee	QMetaObject :: invokeMethod		711389	0					
ANR	711416	Identifier	QMetaObject :: invokeMethod		711389	0					
ANR	711417	ArgumentList	panel ( )		711389	1					
ANR	711418	Argument	panel ( )		711389	0					
ANR	711419	CallExpression	panel ( )		711389	0					
ANR	711420	Callee	panel		711389	0					
ANR	711421	Identifier	panel		711389	0					
ANR	711422	ArgumentList			711389	1					
ANR	711423	Argument	"""restore"""		711389	1					
ANR	711424	PrimaryExpression	"""restore"""		711389	0					
ANR	711425	ReturnType	void		711389	1					
ANR	711426	Identifier	Panel :: setOffset		711389	2					
ANR	711427	ParameterList	int pixels		711389	3					
ANR	711428	Parameter	int pixels	172:22:4404:4413	711389	0	True				
ANR	711429	ParameterType	int		711389	0					
ANR	711430	Identifier	pixels		711389	1					
ANR	711431	CFGEntryNode	ENTRY		711389		True				
ANR	711432	CFGExitNode	EXIT		711389		True				
ANR	711433	Symbol	pixels		711389						
ANR	711434	Symbol	panelConfig		711389						
ANR	711435	Symbol	panel		711389						
ANR	711436	Function	Panel :: length	180:0:4545:4622							
ANR	711437	FunctionDef	Panel :: length ()		711436	0					
ANR	711438	CompoundStatement		181:0:4571:4622	711436	0					
ANR	711439	ReturnStatement	"return panelConfig ( ) . readEntry ( ""length"" , 0 ) ;"	182:4:4577:4620	711436	0	True				
ANR	711440	CallExpression	"panelConfig ( ) . readEntry ( ""length"" , 0 )"		711436	0					
ANR	711441	Callee	panelConfig ( ) . readEntry		711436	0					
ANR	711442	MemberAccess	panelConfig ( ) . readEntry		711436	0					
ANR	711443	CallExpression	panelConfig ( )		711436	0					
ANR	711444	Callee	panelConfig		711436	0					
ANR	711445	Identifier	panelConfig		711436	0					
ANR	711446	ArgumentList			711436	1					
ANR	711447	Identifier	readEntry		711436	1					
ANR	711448	ArgumentList	"""length"""		711436	1					
ANR	711449	Argument	"""length"""		711436	0					
ANR	711450	PrimaryExpression	"""length"""		711436	0					
ANR	711451	Argument	0		711436	1					
ANR	711452	PrimaryExpression	0		711436	0					
ANR	711453	ReturnType	int		711436	1					
ANR	711454	Identifier	Panel :: length		711436	2					
ANR	711455	ParameterList			711436	3					
ANR	711456	CFGEntryNode	ENTRY		711436		True				
ANR	711457	CFGExitNode	EXIT		711436		True				
ANR	711458	Symbol	panelConfig		711436						
ANR	711459	Symbol	panelConfig ( ) . readEntry		711436						
ANR	711460	Function	Panel :: setLength	185:0:4625:4785							
ANR	711461	FunctionDef	Panel :: setLength (int pixels)		711460	0					
ANR	711462	CompoundStatement		186:0:4659:4785	711460	0					
ANR	711463	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""length"" , pixels )"	187:3:4664:4706	711460	0	True				
ANR	711464	CallExpression	"panelConfig ( ) . writeEntry ( ""length"" , pixels )"		711460	0					
ANR	711465	Callee	panelConfig ( ) . writeEntry		711460	0					
ANR	711466	MemberAccess	panelConfig ( ) . writeEntry		711460	0					
ANR	711467	CallExpression	panelConfig ( )		711460	0					
ANR	711468	Callee	panelConfig		711460	0					
ANR	711469	Identifier	panelConfig		711460	0					
ANR	711470	ArgumentList			711460	1					
ANR	711471	Identifier	writeEntry		711460	1					
ANR	711472	ArgumentList	"""length"""		711460	1					
ANR	711473	Argument	"""length"""		711460	0					
ANR	711474	PrimaryExpression	"""length"""		711460	0					
ANR	711475	Argument	pixels		711460	1					
ANR	711476	Identifier	pixels		711460	0					
ANR	711477	IfStatement	if ( panel ( ) )		711460	1					
ANR	711478	Condition	panel ( )	188:7:4715:4721	711460	0	True				
ANR	711479	CallExpression	panel ( )		711460	0					
ANR	711480	Callee	panel		711460	0					
ANR	711481	Identifier	panel		711460	0					
ANR	711482	ArgumentList			711460	1					
ANR	711483	CompoundStatement		3:16:64:64	711460	1					
ANR	711484	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	189:7:4733:4778	711460	0	True				
ANR	711485	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711460	0					
ANR	711486	Callee	QMetaObject :: invokeMethod		711460	0					
ANR	711487	Identifier	QMetaObject :: invokeMethod		711460	0					
ANR	711488	ArgumentList	panel ( )		711460	1					
ANR	711489	Argument	panel ( )		711460	0					
ANR	711490	CallExpression	panel ( )		711460	0					
ANR	711491	Callee	panel		711460	0					
ANR	711492	Identifier	panel		711460	0					
ANR	711493	ArgumentList			711460	1					
ANR	711494	Argument	"""restore"""		711460	1					
ANR	711495	PrimaryExpression	"""restore"""		711460	0					
ANR	711496	ReturnType	void		711460	1					
ANR	711497	Identifier	Panel :: setLength		711460	2					
ANR	711498	ParameterList	int pixels		711460	3					
ANR	711499	Parameter	int pixels	185:22:4647:4656	711460	0	True				
ANR	711500	ParameterType	int		711460	0					
ANR	711501	Identifier	pixels		711460	1					
ANR	711502	CFGEntryNode	ENTRY		711460		True				
ANR	711503	CFGExitNode	EXIT		711460		True				
ANR	711504	Symbol	pixels		711460						
ANR	711505	Symbol	panelConfig		711460						
ANR	711506	Symbol	panel		711460						
ANR	711507	Function	Panel :: minimumLength	193:0:4788:4875							
ANR	711508	FunctionDef	Panel :: minimumLength ()		711507	0					
ANR	711509	CompoundStatement		194:0:4821:4875	711507	0					
ANR	711510	ReturnStatement	"return panelConfig ( ) . readEntry ( ""minLength"" , 0 ) ;"	195:4:4827:4873	711507	0	True				
ANR	711511	CallExpression	"panelConfig ( ) . readEntry ( ""minLength"" , 0 )"		711507	0					
ANR	711512	Callee	panelConfig ( ) . readEntry		711507	0					
ANR	711513	MemberAccess	panelConfig ( ) . readEntry		711507	0					
ANR	711514	CallExpression	panelConfig ( )		711507	0					
ANR	711515	Callee	panelConfig		711507	0					
ANR	711516	Identifier	panelConfig		711507	0					
ANR	711517	ArgumentList			711507	1					
ANR	711518	Identifier	readEntry		711507	1					
ANR	711519	ArgumentList	"""minLength"""		711507	1					
ANR	711520	Argument	"""minLength"""		711507	0					
ANR	711521	PrimaryExpression	"""minLength"""		711507	0					
ANR	711522	Argument	0		711507	1					
ANR	711523	PrimaryExpression	0		711507	0					
ANR	711524	ReturnType	int		711507	1					
ANR	711525	Identifier	Panel :: minimumLength		711507	2					
ANR	711526	ParameterList			711507	3					
ANR	711527	CFGEntryNode	ENTRY		711507		True				
ANR	711528	CFGExitNode	EXIT		711507		True				
ANR	711529	Symbol	panelConfig		711507						
ANR	711530	Symbol	panelConfig ( ) . readEntry		711507						
ANR	711531	Function	Panel :: setMinimumLength	198:0:4878:5048							
ANR	711532	FunctionDef	Panel :: setMinimumLength (int pixels)		711531	0					
ANR	711533	CompoundStatement		199:0:4919:5048	711531	0					
ANR	711534	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""minLength"" , pixels )"	200:3:4924:4969	711531	0	True				
ANR	711535	CallExpression	"panelConfig ( ) . writeEntry ( ""minLength"" , pixels )"		711531	0					
ANR	711536	Callee	panelConfig ( ) . writeEntry		711531	0					
ANR	711537	MemberAccess	panelConfig ( ) . writeEntry		711531	0					
ANR	711538	CallExpression	panelConfig ( )		711531	0					
ANR	711539	Callee	panelConfig		711531	0					
ANR	711540	Identifier	panelConfig		711531	0					
ANR	711541	ArgumentList			711531	1					
ANR	711542	Identifier	writeEntry		711531	1					
ANR	711543	ArgumentList	"""minLength"""		711531	1					
ANR	711544	Argument	"""minLength"""		711531	0					
ANR	711545	PrimaryExpression	"""minLength"""		711531	0					
ANR	711546	Argument	pixels		711531	1					
ANR	711547	Identifier	pixels		711531	0					
ANR	711548	IfStatement	if ( panel ( ) )		711531	1					
ANR	711549	Condition	panel ( )	201:7:4978:4984	711531	0	True				
ANR	711550	CallExpression	panel ( )		711531	0					
ANR	711551	Callee	panel		711531	0					
ANR	711552	Identifier	panel		711531	0					
ANR	711553	ArgumentList			711531	1					
ANR	711554	CompoundStatement		3:16:67:67	711531	1					
ANR	711555	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	202:7:4996:5041	711531	0	True				
ANR	711556	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711531	0					
ANR	711557	Callee	QMetaObject :: invokeMethod		711531	0					
ANR	711558	Identifier	QMetaObject :: invokeMethod		711531	0					
ANR	711559	ArgumentList	panel ( )		711531	1					
ANR	711560	Argument	panel ( )		711531	0					
ANR	711561	CallExpression	panel ( )		711531	0					
ANR	711562	Callee	panel		711531	0					
ANR	711563	Identifier	panel		711531	0					
ANR	711564	ArgumentList			711531	1					
ANR	711565	Argument	"""restore"""		711531	1					
ANR	711566	PrimaryExpression	"""restore"""		711531	0					
ANR	711567	ReturnType	void		711531	1					
ANR	711568	Identifier	Panel :: setMinimumLength		711531	2					
ANR	711569	ParameterList	int pixels		711531	3					
ANR	711570	Parameter	int pixels	198:29:4907:4916	711531	0	True				
ANR	711571	ParameterType	int		711531	0					
ANR	711572	Identifier	pixels		711531	1					
ANR	711573	CFGEntryNode	ENTRY		711531		True				
ANR	711574	CFGExitNode	EXIT		711531		True				
ANR	711575	Symbol	pixels		711531						
ANR	711576	Symbol	panelConfig		711531						
ANR	711577	Symbol	panel		711531						
ANR	711578	Function	Panel :: maximumLength	206:0:5051:5138							
ANR	711579	FunctionDef	Panel :: maximumLength ()		711578	0					
ANR	711580	CompoundStatement		207:0:5084:5138	711578	0					
ANR	711581	ReturnStatement	"return panelConfig ( ) . readEntry ( ""maxLength"" , 0 ) ;"	208:4:5090:5136	711578	0	True				
ANR	711582	CallExpression	"panelConfig ( ) . readEntry ( ""maxLength"" , 0 )"		711578	0					
ANR	711583	Callee	panelConfig ( ) . readEntry		711578	0					
ANR	711584	MemberAccess	panelConfig ( ) . readEntry		711578	0					
ANR	711585	CallExpression	panelConfig ( )		711578	0					
ANR	711586	Callee	panelConfig		711578	0					
ANR	711587	Identifier	panelConfig		711578	0					
ANR	711588	ArgumentList			711578	1					
ANR	711589	Identifier	readEntry		711578	1					
ANR	711590	ArgumentList	"""maxLength"""		711578	1					
ANR	711591	Argument	"""maxLength"""		711578	0					
ANR	711592	PrimaryExpression	"""maxLength"""		711578	0					
ANR	711593	Argument	0		711578	1					
ANR	711594	PrimaryExpression	0		711578	0					
ANR	711595	ReturnType	int		711578	1					
ANR	711596	Identifier	Panel :: maximumLength		711578	2					
ANR	711597	ParameterList			711578	3					
ANR	711598	CFGEntryNode	ENTRY		711578		True				
ANR	711599	CFGExitNode	EXIT		711578		True				
ANR	711600	Symbol	panelConfig		711578						
ANR	711601	Symbol	panelConfig ( ) . readEntry		711578						
ANR	711602	Function	Panel :: setMaximumLength	211:0:5141:5311							
ANR	711603	FunctionDef	Panel :: setMaximumLength (int pixels)		711602	0					
ANR	711604	CompoundStatement		212:0:5182:5311	711602	0					
ANR	711605	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""maxLength"" , pixels )"	213:3:5187:5232	711602	0	True				
ANR	711606	CallExpression	"panelConfig ( ) . writeEntry ( ""maxLength"" , pixels )"		711602	0					
ANR	711607	Callee	panelConfig ( ) . writeEntry		711602	0					
ANR	711608	MemberAccess	panelConfig ( ) . writeEntry		711602	0					
ANR	711609	CallExpression	panelConfig ( )		711602	0					
ANR	711610	Callee	panelConfig		711602	0					
ANR	711611	Identifier	panelConfig		711602	0					
ANR	711612	ArgumentList			711602	1					
ANR	711613	Identifier	writeEntry		711602	1					
ANR	711614	ArgumentList	"""maxLength"""		711602	1					
ANR	711615	Argument	"""maxLength"""		711602	0					
ANR	711616	PrimaryExpression	"""maxLength"""		711602	0					
ANR	711617	Argument	pixels		711602	1					
ANR	711618	Identifier	pixels		711602	0					
ANR	711619	IfStatement	if ( panel ( ) )		711602	1					
ANR	711620	Condition	panel ( )	214:7:5241:5247	711602	0	True				
ANR	711621	CallExpression	panel ( )		711602	0					
ANR	711622	Callee	panel		711602	0					
ANR	711623	Identifier	panel		711602	0					
ANR	711624	ArgumentList			711602	1					
ANR	711625	CompoundStatement		3:16:67:67	711602	1					
ANR	711626	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	215:7:5259:5304	711602	0	True				
ANR	711627	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711602	0					
ANR	711628	Callee	QMetaObject :: invokeMethod		711602	0					
ANR	711629	Identifier	QMetaObject :: invokeMethod		711602	0					
ANR	711630	ArgumentList	panel ( )		711602	1					
ANR	711631	Argument	panel ( )		711602	0					
ANR	711632	CallExpression	panel ( )		711602	0					
ANR	711633	Callee	panel		711602	0					
ANR	711634	Identifier	panel		711602	0					
ANR	711635	ArgumentList			711602	1					
ANR	711636	Argument	"""restore"""		711602	1					
ANR	711637	PrimaryExpression	"""restore"""		711602	0					
ANR	711638	ReturnType	void		711602	1					
ANR	711639	Identifier	Panel :: setMaximumLength		711602	2					
ANR	711640	ParameterList	int pixels		711602	3					
ANR	711641	Parameter	int pixels	211:29:5170:5179	711602	0	True				
ANR	711642	ParameterType	int		711602	0					
ANR	711643	Identifier	pixels		711602	1					
ANR	711644	CFGEntryNode	ENTRY		711602		True				
ANR	711645	CFGExitNode	EXIT		711602		True				
ANR	711646	Symbol	pixels		711602						
ANR	711647	Symbol	panelConfig		711602						
ANR	711648	Symbol	panel		711602						
ANR	711649	Function	Panel :: height	219:0:5314:5394							
ANR	711650	FunctionDef	Panel :: height ()		711649	0					
ANR	711651	CompoundStatement		220:0:5340:5394	711649	0					
ANR	711652	ReturnStatement	"return panelConfig ( ) . readEntry ( ""thickness"" , 0 ) ;"	221:4:5346:5392	711649	0	True				
ANR	711653	CallExpression	"panelConfig ( ) . readEntry ( ""thickness"" , 0 )"		711649	0					
ANR	711654	Callee	panelConfig ( ) . readEntry		711649	0					
ANR	711655	MemberAccess	panelConfig ( ) . readEntry		711649	0					
ANR	711656	CallExpression	panelConfig ( )		711649	0					
ANR	711657	Callee	panelConfig		711649	0					
ANR	711658	Identifier	panelConfig		711649	0					
ANR	711659	ArgumentList			711649	1					
ANR	711660	Identifier	readEntry		711649	1					
ANR	711661	ArgumentList	"""thickness"""		711649	1					
ANR	711662	Argument	"""thickness"""		711649	0					
ANR	711663	PrimaryExpression	"""thickness"""		711649	0					
ANR	711664	Argument	0		711649	1					
ANR	711665	PrimaryExpression	0		711649	0					
ANR	711666	ReturnType	int		711649	1					
ANR	711667	Identifier	Panel :: height		711649	2					
ANR	711668	ParameterList			711649	3					
ANR	711669	CFGEntryNode	ENTRY		711649		True				
ANR	711670	CFGExitNode	EXIT		711649		True				
ANR	711671	Symbol	panelConfig		711649						
ANR	711672	Symbol	panelConfig ( ) . readEntry		711649						
ANR	711673	Function	Panel :: setHeight	224:0:5397:5564							
ANR	711674	FunctionDef	Panel :: setHeight (int height)		711673	0					
ANR	711675	CompoundStatement		225:0:5431:5564	711673	0					
ANR	711676	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""thickness"" , height )"	226:4:5437:5482	711673	0	True				
ANR	711677	CallExpression	"panelConfig ( ) . writeEntry ( ""thickness"" , height )"		711673	0					
ANR	711678	Callee	panelConfig ( ) . writeEntry		711673	0					
ANR	711679	MemberAccess	panelConfig ( ) . writeEntry		711673	0					
ANR	711680	CallExpression	panelConfig ( )		711673	0					
ANR	711681	Callee	panelConfig		711673	0					
ANR	711682	Identifier	panelConfig		711673	0					
ANR	711683	ArgumentList			711673	1					
ANR	711684	Identifier	writeEntry		711673	1					
ANR	711685	ArgumentList	"""thickness"""		711673	1					
ANR	711686	Argument	"""thickness"""		711673	0					
ANR	711687	PrimaryExpression	"""thickness"""		711673	0					
ANR	711688	Argument	height		711673	1					
ANR	711689	Identifier	height		711673	0					
ANR	711690	IfStatement	if ( panel ( ) )		711673	1					
ANR	711691	Condition	panel ( )	227:8:5492:5498	711673	0	True				
ANR	711692	CallExpression	panel ( )		711673	0					
ANR	711693	Callee	panel		711673	0					
ANR	711694	Identifier	panel		711673	0					
ANR	711695	ArgumentList			711673	1					
ANR	711696	CompoundStatement		3:17:69:69	711673	1					
ANR	711697	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	228:8:5511:5556	711673	0	True				
ANR	711698	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711673	0					
ANR	711699	Callee	QMetaObject :: invokeMethod		711673	0					
ANR	711700	Identifier	QMetaObject :: invokeMethod		711673	0					
ANR	711701	ArgumentList	panel ( )		711673	1					
ANR	711702	Argument	panel ( )		711673	0					
ANR	711703	CallExpression	panel ( )		711673	0					
ANR	711704	Callee	panel		711673	0					
ANR	711705	Identifier	panel		711673	0					
ANR	711706	ArgumentList			711673	1					
ANR	711707	Argument	"""restore"""		711673	1					
ANR	711708	PrimaryExpression	"""restore"""		711673	0					
ANR	711709	ReturnType	void		711673	1					
ANR	711710	Identifier	Panel :: setHeight		711673	2					
ANR	711711	ParameterList	int height		711673	3					
ANR	711712	Parameter	int height	224:22:5419:5428	711673	0	True				
ANR	711713	ParameterType	int		711673	0					
ANR	711714	Identifier	height		711673	1					
ANR	711715	CFGEntryNode	ENTRY		711673		True				
ANR	711716	CFGExitNode	EXIT		711673		True				
ANR	711717	Symbol	panelConfig		711673						
ANR	711718	Symbol	panel		711673						
ANR	711719	Symbol	height		711673						
ANR	711720	Function	Panel :: hiding	232:0:5567:6041							
ANR	711721	FunctionDef	Panel :: hiding ()		711720	0					
ANR	711722	CompoundStatement		233:0:5597:6041	711720	0					
ANR	711723	SwitchStatement	"switch ( panelConfig ( ) . readEntry ( ""panelVisibility"" , 0 ) )"		711720	0					
ANR	711724	Condition	"panelConfig ( ) . readEntry ( ""panelVisibility"" , 0 )"	234:12:5611:5655	711720	0	True				
ANR	711725	CallExpression	"panelConfig ( ) . readEntry ( ""panelVisibility"" , 0 )"		711720	0					
ANR	711726	Callee	panelConfig ( ) . readEntry		711720	0					
ANR	711727	MemberAccess	panelConfig ( ) . readEntry		711720	0					
ANR	711728	CallExpression	panelConfig ( )		711720	0					
ANR	711729	Callee	panelConfig		711720	0					
ANR	711730	Identifier	panelConfig		711720	0					
ANR	711731	ArgumentList			711720	1					
ANR	711732	Identifier	readEntry		711720	1					
ANR	711733	ArgumentList	"""panelVisibility"""		711720	1					
ANR	711734	Argument	"""panelVisibility"""		711720	0					
ANR	711735	PrimaryExpression	"""panelVisibility"""		711720	0					
ANR	711736	Argument	0		711720	1					
ANR	711737	PrimaryExpression	0		711720	0					
ANR	711738	CompoundStatement		2:59:60:60	711720	1					
ANR	711739	Label	case PanelView :: NormalPanel :	235:8:5668:5695	711720	0	True				
ANR	711740	Identifier	PanelView :: NormalPanel		711720	0					
ANR	711741	ReturnStatement	"return ""none"" ;"	236:12:5709:5722	711720	1	True				
ANR	711742	PrimaryExpression	"""none"""		711720	0					
ANR	711743	BreakStatement	break ;	237:12:5736:5741	711720	2	True				
ANR	711744	Label	case PanelView :: AutoHide :	238:8:5751:5775	711720	3	True				
ANR	711745	Identifier	PanelView :: AutoHide		711720	0					
ANR	711746	ReturnStatement	"return ""autohide"" ;"	239:12:5789:5806	711720	4	True				
ANR	711747	PrimaryExpression	"""autohide"""		711720	0					
ANR	711748	BreakStatement	break ;	240:12:5820:5825	711720	5	True				
ANR	711749	Label	case PanelView :: LetWindowsCover :	241:8:5835:5866	711720	6	True				
ANR	711750	Identifier	PanelView :: LetWindowsCover		711720	0					
ANR	711751	ReturnStatement	"return ""windowscover"" ;"	242:12:5880:5901	711720	7	True				
ANR	711752	PrimaryExpression	"""windowscover"""		711720	0					
ANR	711753	BreakStatement	break ;	243:12:5915:5920	711720	8	True				
ANR	711754	Label	case PanelView :: WindowsGoBelow :	244:8:5930:5960	711720	9	True				
ANR	711755	Identifier	PanelView :: WindowsGoBelow		711720	0					
ANR	711756	ReturnStatement	"return ""windowsbelow"" ;"	245:12:5974:5995	711720	10	True				
ANR	711757	PrimaryExpression	"""windowsbelow"""		711720	0					
ANR	711758	BreakStatement	break ;	246:12:6009:6014	711720	11	True				
ANR	711759	ReturnStatement	"return ""none"" ;"	248:4:6026:6039	711720	1	True				
ANR	711760	PrimaryExpression	"""none"""		711720	0					
ANR	711761	ReturnType	QString		711720	1					
ANR	711762	Identifier	Panel :: hiding		711720	2					
ANR	711763	ParameterList			711720	3					
ANR	711764	CFGEntryNode	ENTRY		711720		True				
ANR	711765	CFGExitNode	EXIT		711720		True				
ANR	711766	Symbol	panelConfig		711720						
ANR	711767	Symbol	panelConfig ( ) . readEntry		711720						
ANR	711768	Function	Panel :: setHiding	251:0:6044:6676							
ANR	711769	FunctionDef	Panel :: setHiding (const QString & mode)		711768	0					
ANR	711770	CompoundStatement		252:0:6087:6676	711768	0					
ANR	711771	IdentifierDeclStatement	PanelView :: VisibilityMode visibilityMode = PanelView :: NormalPanel ;	253:4:6093:6158	711768	0	True				
ANR	711772	IdentifierDecl	visibilityMode = PanelView :: NormalPanel		711768	0					
ANR	711773	IdentifierDeclType	PanelView :: VisibilityMode		711768	0					
ANR	711774	Identifier	visibilityMode		711768	1					
ANR	711775	AssignmentExpression	visibilityMode = PanelView :: NormalPanel		711768	2		=			
ANR	711776	Identifier	PanelView :: NormalPanel		711768	0					
ANR	711777	Identifier	PanelView :: NormalPanel		711768	1					
ANR	711778	IfStatement	"if ( mode . compare ( ""autohide"" , Qt :: CaseInsensitive ) == 0 )"		711768	1					
ANR	711779	Condition	"mode . compare ( ""autohide"" , Qt :: CaseInsensitive ) == 0"	254:8:6168:6217	711768	0	True				
ANR	711780	EqualityExpression	"mode . compare ( ""autohide"" , Qt :: CaseInsensitive ) == 0"		711768	0		==			
ANR	711781	CallExpression	"mode . compare ( ""autohide"" , Qt :: CaseInsensitive )"		711768	0					
ANR	711782	Callee	mode . compare		711768	0					
ANR	711783	MemberAccess	mode . compare		711768	0					
ANR	711784	Identifier	mode		711768	0					
ANR	711785	Identifier	compare		711768	1					
ANR	711786	ArgumentList	"""autohide"""		711768	1					
ANR	711787	Argument	"""autohide"""		711768	0					
ANR	711788	PrimaryExpression	"""autohide"""		711768	0					
ANR	711789	Argument	Qt :: CaseInsensitive		711768	1					
ANR	711790	Identifier	Qt :: CaseInsensitive		711768	0					
ANR	711791	PrimaryExpression	0		711768	1					
ANR	711792	CompoundStatement		3:60:132:132	711768	1					
ANR	711793	ExpressionStatement	visibilityMode = PanelView :: AutoHide	255:8:6230:6266	711768	0	True				
ANR	711794	AssignmentExpression	visibilityMode = PanelView :: AutoHide		711768	0		=			
ANR	711795	Identifier	visibilityMode		711768	0					
ANR	711796	Identifier	PanelView :: AutoHide		711768	1					
ANR	711797	ElseStatement	else		711768	0					
ANR	711798	IfStatement	"if ( mode . compare ( ""windowscover"" , Qt :: CaseInsensitive ) == 0 )"		711768	0					
ANR	711799	Condition	"mode . compare ( ""windowscover"" , Qt :: CaseInsensitive ) == 0"	256:15:6283:6336	711768	0	True				
ANR	711800	EqualityExpression	"mode . compare ( ""windowscover"" , Qt :: CaseInsensitive ) == 0"		711768	0		==			
ANR	711801	CallExpression	"mode . compare ( ""windowscover"" , Qt :: CaseInsensitive )"		711768	0					
ANR	711802	Callee	mode . compare		711768	0					
ANR	711803	MemberAccess	mode . compare		711768	0					
ANR	711804	Identifier	mode		711768	0					
ANR	711805	Identifier	compare		711768	1					
ANR	711806	ArgumentList	"""windowscover"""		711768	1					
ANR	711807	Argument	"""windowscover"""		711768	0					
ANR	711808	PrimaryExpression	"""windowscover"""		711768	0					
ANR	711809	Argument	Qt :: CaseInsensitive		711768	1					
ANR	711810	Identifier	Qt :: CaseInsensitive		711768	0					
ANR	711811	PrimaryExpression	0		711768	1					
ANR	711812	CompoundStatement		5:71:251:251	711768	1					
ANR	711813	ExpressionStatement	visibilityMode = PanelView :: LetWindowsCover	257:8:6349:6392	711768	0	True				
ANR	711814	AssignmentExpression	visibilityMode = PanelView :: LetWindowsCover		711768	0		=			
ANR	711815	Identifier	visibilityMode		711768	0					
ANR	711816	Identifier	PanelView :: LetWindowsCover		711768	1					
ANR	711817	ElseStatement	else		711768	0					
ANR	711818	IfStatement	"if ( mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive ) == 0 )"		711768	0					
ANR	711819	Condition	"mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive ) == 0"	258:15:6409:6462	711768	0	True				
ANR	711820	EqualityExpression	"mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive ) == 0"		711768	0		==			
ANR	711821	CallExpression	"mode . compare ( ""windowsbelow"" , Qt :: CaseInsensitive )"		711768	0					
ANR	711822	Callee	mode . compare		711768	0					
ANR	711823	MemberAccess	mode . compare		711768	0					
ANR	711824	Identifier	mode		711768	0					
ANR	711825	Identifier	compare		711768	1					
ANR	711826	ArgumentList	"""windowsbelow"""		711768	1					
ANR	711827	Argument	"""windowsbelow"""		711768	0					
ANR	711828	PrimaryExpression	"""windowsbelow"""		711768	0					
ANR	711829	Argument	Qt :: CaseInsensitive		711768	1					
ANR	711830	Identifier	Qt :: CaseInsensitive		711768	0					
ANR	711831	PrimaryExpression	0		711768	1					
ANR	711832	CompoundStatement		7:71:377:377	711768	1					
ANR	711833	ExpressionStatement	visibilityMode = PanelView :: WindowsGoBelow	259:8:6475:6517	711768	0	True				
ANR	711834	AssignmentExpression	visibilityMode = PanelView :: WindowsGoBelow		711768	0		=			
ANR	711835	Identifier	visibilityMode		711768	0					
ANR	711836	Identifier	PanelView :: WindowsGoBelow		711768	1					
ANR	711837	ExpressionStatement	"panelConfig ( ) . writeEntry ( ""panelVisibility"" , ( int ) visibilityMode )"	262:4:6530:6594	711768	2	True				
ANR	711838	CallExpression	"panelConfig ( ) . writeEntry ( ""panelVisibility"" , ( int ) visibilityMode )"		711768	0					
ANR	711839	Callee	panelConfig ( ) . writeEntry		711768	0					
ANR	711840	MemberAccess	panelConfig ( ) . writeEntry		711768	0					
ANR	711841	CallExpression	panelConfig ( )		711768	0					
ANR	711842	Callee	panelConfig		711768	0					
ANR	711843	Identifier	panelConfig		711768	0					
ANR	711844	ArgumentList			711768	1					
ANR	711845	Identifier	writeEntry		711768	1					
ANR	711846	ArgumentList	"""panelVisibility"""		711768	1					
ANR	711847	Argument	"""panelVisibility"""		711768	0					
ANR	711848	PrimaryExpression	"""panelVisibility"""		711768	0					
ANR	711849	Argument	( int ) visibilityMode		711768	1					
ANR	711850	CastExpression	( int ) visibilityMode		711768	0					
ANR	711851	CastTarget	int		711768	0					
ANR	711852	Identifier	visibilityMode		711768	1					
ANR	711853	IfStatement	if ( panel ( ) )		711768	3					
ANR	711854	Condition	panel ( )	263:8:6604:6610	711768	0	True				
ANR	711855	CallExpression	panel ( )		711768	0					
ANR	711856	Callee	panel		711768	0					
ANR	711857	Identifier	panel		711768	0					
ANR	711858	ArgumentList			711768	1					
ANR	711859	CompoundStatement		12:17:525:525	711768	1					
ANR	711860	ExpressionStatement	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"	264:8:6623:6668	711768	0	True				
ANR	711861	CallExpression	"QMetaObject :: invokeMethod ( panel ( ) , ""restore"" )"		711768	0					
ANR	711862	Callee	QMetaObject :: invokeMethod		711768	0					
ANR	711863	Identifier	QMetaObject :: invokeMethod		711768	0					
ANR	711864	ArgumentList	panel ( )		711768	1					
ANR	711865	Argument	panel ( )		711768	0					
ANR	711866	CallExpression	panel ( )		711768	0					
ANR	711867	Callee	panel		711768	0					
ANR	711868	Identifier	panel		711768	0					
ANR	711869	ArgumentList			711768	1					
ANR	711870	Argument	"""restore"""		711768	1					
ANR	711871	PrimaryExpression	"""restore"""		711768	0					
ANR	711872	ReturnType	void		711768	1					
ANR	711873	Identifier	Panel :: setHiding		711768	2					
ANR	711874	ParameterList	const QString & mode		711768	3					
ANR	711875	Parameter	const QString & mode	251:22:6066:6084	711768	0	True				
ANR	711876	ParameterType	const QString &		711768	0					
ANR	711877	Identifier	mode		711768	1					
ANR	711878	CFGEntryNode	ENTRY		711768		True				
ANR	711879	CFGExitNode	EXIT		711768		True				
ANR	711880	Symbol	mode		711768						
ANR	711881	Symbol	PanelView :: WindowsGoBelow		711768						
ANR	711882	Symbol	mode . compare		711768						
ANR	711883	Symbol	panelConfig		711768						
ANR	711884	Symbol	PanelView :: NormalPanel		711768						
ANR	711885	Symbol	Qt :: CaseInsensitive		711768						
ANR	711886	Symbol	visibilityMode		711768						
ANR	711887	Symbol	PanelView :: AutoHide		711768						
ANR	711888	Symbol	PanelView :: LetWindowsCover		711768						
ANR	711889	Symbol	panel		711768						
