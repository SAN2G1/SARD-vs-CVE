command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	515531	File	data/converged/CVE-2018-6791_plasma-workspace/libtaskmanager_xwindowtasksmodel.cpp								
ANR	515532	DeclStmt									
ANR	515533	Decl							const NET :: Properties	const NET :: Properties	windowInfoFlags
ANR	515534	DeclStmt									
ANR	515535	Decl							const NET :: Properties2	const NET :: Properties2	windowInfoFlags2
ANR	515536	ClassDef	XWindowTasksModel :: Private	57:0:1922:3232							
ANR	515537	DeclStmt									
ANR	515538	Decl							QVector < WId >	QVector < WId >	windows
ANR	515539	DeclStmt									
ANR	515540	Decl							QSet < WId >	QSet < WId >	transients
ANR	515541	DeclStmt									
ANR	515542	Decl							"QMultiHash < WId , WId >"	"QMultiHash < WId , WId >"	transientsDemandingAttention
ANR	515543	DeclStmt									
ANR	515544	Decl							"QHash < WId , KWindowInfo * >"	"QHash < WId , KWindowInfo * >"	windowInfoCache
ANR	515545	DeclStmt									
ANR	515546	Decl							"QHash < WId , AppData >"	"QHash < WId , AppData >"	appDataCache
ANR	515547	DeclStmt									
ANR	515548	Decl							"QHash < WId , QRect >"	"QHash < WId , QRect >"	delegateGeometries
ANR	515549	DeclStmt									
ANR	515550	Decl							WId	WId	activeWindow
ANR	515551	DeclStmt									
ANR	515552	Decl							KSharedConfig :: Ptr	KSharedConfig :: Ptr	rulesConfig
ANR	515553	DeclStmt									
ANR	515554	Decl							KDirWatch	KDirWatch *	configWatcher
ANR	515555	DeclStmt									
ANR	515556	Decl							QTimer	QTimer	sycocaChangeTimer
ANR	515557	DeclStmt									
ANR	515558	Decl							void	void ( )	init
ANR	515559	DeclStmt									
ANR	515560	Decl							void	void ( WId window )	addWindow
ANR	515561	DeclStmt									
ANR	515562	Decl							void	void ( WId window )	removeWindow
ANR	515563	DeclStmt									
ANR	515564	Decl							void	"void ( WId window , NET :: Properties properties , NET :: Properties2 properties2 )"	windowChanged
ANR	515565	DeclStmt									
ANR	515566	Decl							void	"void ( WId window , NET :: Properties properties , NET :: Properties2 properties2 )"	transientChanged
ANR	515567	DeclStmt									
ANR	515568	Decl							void	"void ( WId window , const QVector < int > & roles )"	dataChanged
ANR	515569	DeclStmt									
ANR	515570	Decl							KWindowInfo	KWindowInfo * ( WId window )	windowInfo
ANR	515571	DeclStmt									
ANR	515572	Decl							AppData	AppData ( WId window )	appData
ANR	515573	DeclStmt									
ANR	515574	Decl							QIcon	QIcon ( WId window )	icon
ANR	515575	DeclStmt									
ANR	515576	Decl							QString	QString ( )	mimeType
ANR	515577	DeclStmt									
ANR	515578	Decl							QString	QString ( )	groupMimeType
ANR	515579	DeclStmt									
ANR	515580	Decl							QUrl	QUrl ( WId window )	windowUrl
ANR	515581	DeclStmt									
ANR	515582	Decl							QUrl	"QUrl ( int pid , const QString & type , const QStringList & cmdRemovals )"	serviceUrl
ANR	515583	DeclStmt									
ANR	515584	Decl							KService :: List	KService :: List ( int pid )	servicesFromPid
ANR	515585	DeclStmt									
ANR	515586	Decl							QStringList	QStringList ( WId window )	activities
ANR	515587	DeclStmt									
ANR	515588	Decl							bool	bool ( WId window )	demandsAttention
ANR	515589	DeclStmt									
ANR	515590	Decl							XWindowTasksModel	XWindowTasksModel *	q
ANR	515591	Function	XWindowTasksModel :: Private :: Private	98:0:3236:3307							
ANR	515592	FunctionDef	XWindowTasksModel :: Private :: Private (XWindowTasksModel * q)		515591	0					
ANR	515593	CompoundStatement		100:0:3305:3307	515591	0					
ANR	515594	Identifier	XWindowTasksModel :: Private :: Private		515591	1					
ANR	515595	ParameterList	XWindowTasksModel * q		515591	2					
ANR	515596	Parameter	XWindowTasksModel * q	98:36:3272:3291	515591	0	True				
ANR	515597	ParameterType	XWindowTasksModel *		515591	0					
ANR	515598	Identifier	q		515591	1					
ANR	515599	CFGEntryNode	ENTRY		515591		True				
ANR	515600	CFGExitNode	EXIT		515591		True				
ANR	515601	Symbol	q		515591						
ANR	515602	Function	XWindowTasksModel :: Private :: ~Private	103:0:3310:3413							
ANR	515603	FunctionDef	XWindowTasksModel :: Private :: ~Private ()		515602	0					
ANR	515604	CompoundStatement		104:0:3349:3413	515602	0					
ANR	515605	ExpressionStatement	qDeleteAll ( windowInfoCache )	105:4:3355:3382	515602	0	True				
ANR	515606	CallExpression	qDeleteAll ( windowInfoCache )		515602	0					
ANR	515607	Callee	qDeleteAll		515602	0					
ANR	515608	Identifier	qDeleteAll		515602	0					
ANR	515609	ArgumentList	windowInfoCache		515602	1					
ANR	515610	Argument	windowInfoCache		515602	0					
ANR	515611	Identifier	windowInfoCache		515602	0					
ANR	515612	ExpressionStatement	windowInfoCache . clear ( )	106:4:3388:3411	515602	1	True				
ANR	515613	CallExpression	windowInfoCache . clear ( )		515602	0					
ANR	515614	Callee	windowInfoCache . clear		515602	0					
ANR	515615	MemberAccess	windowInfoCache . clear		515602	0					
ANR	515616	Identifier	windowInfoCache		515602	0					
ANR	515617	Identifier	clear		515602	1					
ANR	515618	ArgumentList			515602	1					
ANR	515619	Identifier	XWindowTasksModel :: Private :: ~Private		515602	1					
ANR	515620	ParameterList			515602	2					
ANR	515621	CFGEntryNode	ENTRY		515602		True				
ANR	515622	CFGExitNode	EXIT		515602		True				
ANR	515623	Symbol	windowInfoCache		515602						
ANR	515624	Function	XWindowTasksModel :: Private :: init	109:0:3416:6729							
ANR	515625	FunctionDef	XWindowTasksModel :: Private :: init ()		515624	0					
ANR	515626	CompoundStatement		110:0:3456:6729	515624	0					
ANR	515627	ExpressionStatement	"rulesConfig = KSharedConfig :: openConfig ( QStringLiteral ( ""taskmanagerrulesrc"" ) )"	111:4:3462:3539	515624	0	True				
ANR	515628	AssignmentExpression	"rulesConfig = KSharedConfig :: openConfig ( QStringLiteral ( ""taskmanagerrulesrc"" ) )"		515624	0		=			
ANR	515629	Identifier	rulesConfig		515624	0					
ANR	515630	CallExpression	"KSharedConfig :: openConfig ( QStringLiteral ( ""taskmanagerrulesrc"" ) )"		515624	1					
ANR	515631	Callee	KSharedConfig :: openConfig		515624	0					
ANR	515632	Identifier	KSharedConfig :: openConfig		515624	0					
ANR	515633	ArgumentList	"QStringLiteral ( ""taskmanagerrulesrc"" )"		515624	1					
ANR	515634	Argument	"QStringLiteral ( ""taskmanagerrulesrc"" )"		515624	0					
ANR	515635	CallExpression	"QStringLiteral ( ""taskmanagerrulesrc"" )"		515624	0					
ANR	515636	Callee	QStringLiteral		515624	0					
ANR	515637	Identifier	QStringLiteral		515624	0					
ANR	515638	ArgumentList	"""taskmanagerrulesrc"""		515624	1					
ANR	515639	Argument	"""taskmanagerrulesrc"""		515624	0					
ANR	515640	PrimaryExpression	"""taskmanagerrulesrc"""		515624	0					
ANR	515641	ExpressionStatement	configWatcher = new KDirWatch ( q )	112:4:3545:3577	515624	1	True				
ANR	515642	AssignmentExpression	configWatcher = new KDirWatch ( q )		515624	0		=			
ANR	515643	Identifier	configWatcher		515624	0					
ANR	515644	Identifier	q		515624	1					
ANR	515645	Statement	foreach	114:4:3584:3590	515624	2	True				
ANR	515646	Statement	(	114:12:3592:3592	515624	3	True				
ANR	515647	Statement	const	114:13:3593:3597	515624	4	True				
ANR	515648	Statement	QString	114:19:3599:3605	515624	5	True				
ANR	515649	Statement	&	114:27:3607:3607	515624	6	True				
ANR	515650	Statement	location	114:28:3608:3615	515624	7	True				
ANR	515651	Statement	","	114:36:3616:3616	515624	8	True				
ANR	515652	Statement	QStandardPaths	114:38:3618:3631	515624	9	True				
ANR	515653	Statement	::	114:52:3632:3633	515624	10	True				
ANR	515654	Statement	standardLocations	114:54:3634:3650	515624	11	True				
ANR	515655	Statement	(	114:71:3651:3651	515624	12	True				
ANR	515656	Statement	QStandardPaths	114:72:3652:3665	515624	13	True				
ANR	515657	Statement	::	114:86:3666:3667	515624	14	True				
ANR	515658	Statement	ConfigLocation	114:88:3668:3681	515624	15	True				
ANR	515659	Statement	)	114:102:3682:3682	515624	16	True				
ANR	515660	Statement	)	114:103:3683:3683	515624	17	True				
ANR	515661	CompoundStatement		5:105:228:228	515624	18					
ANR	515662	ExpressionStatement	"configWatcher -> addFile ( location + QLatin1String ( ""/taskmanagerrulesrc"" ) )"	115:8:3695:3766	515624	0	True				
ANR	515663	CallExpression	"configWatcher -> addFile ( location + QLatin1String ( ""/taskmanagerrulesrc"" ) )"		515624	0					
ANR	515664	Callee	configWatcher -> addFile		515624	0					
ANR	515665	PtrMemberAccess	configWatcher -> addFile		515624	0					
ANR	515666	Identifier	configWatcher		515624	0					
ANR	515667	Identifier	addFile		515624	1					
ANR	515668	ArgumentList	"location + QLatin1String ( ""/taskmanagerrulesrc"" )"		515624	1					
ANR	515669	Argument	"location + QLatin1String ( ""/taskmanagerrulesrc"" )"		515624	0					
ANR	515670	AdditiveExpression	"location + QLatin1String ( ""/taskmanagerrulesrc"" )"		515624	0		+			
ANR	515671	Identifier	location		515624	0					
ANR	515672	CallExpression	"QLatin1String ( ""/taskmanagerrulesrc"" )"		515624	1					
ANR	515673	Callee	QLatin1String		515624	0					
ANR	515674	Identifier	QLatin1String		515624	0					
ANR	515675	ArgumentList	"""/taskmanagerrulesrc"""		515624	1					
ANR	515676	Argument	"""/taskmanagerrulesrc"""		515624	0					
ANR	515677	PrimaryExpression	"""/taskmanagerrulesrc"""		515624	0					
ANR	515678	Statement	QObject	118:4:3779:3785	515624	19	True				
ANR	515679	Statement	::	118:11:3786:3787	515624	20	True				
ANR	515680	Statement	connect	118:13:3788:3794	515624	21	True				
ANR	515681	Statement	(	118:20:3795:3795	515624	22	True				
ANR	515682	Statement	configWatcher	118:21:3796:3808	515624	23	True				
ANR	515683	Statement	","	118:34:3809:3809	515624	24	True				
ANR	515684	Statement	&	118:36:3811:3811	515624	25	True				
ANR	515685	Statement	KDirWatch	118:37:3812:3820	515624	26	True				
ANR	515686	Statement	::	118:46:3821:3822	515624	27	True				
ANR	515687	Statement	dirty	118:48:3823:3827	515624	28	True				
ANR	515688	Statement	","	118:53:3828:3828	515624	29	True				
ANR	515689	Statement	[	118:55:3830:3830	515624	30	True				
ANR	515690	Statement	this	118:56:3831:3834	515624	31	True				
ANR	515691	Statement	]	118:60:3835:3835	515624	32	True				
ANR	515692	CompoundStatement		9:62:380:380	515624	33					
ANR	515693	ExpressionStatement	rulesConfig -> reparseConfiguration ( )	118:64:3839:3874	515624	0	True				
ANR	515694	CallExpression	rulesConfig -> reparseConfiguration ( )		515624	0					
ANR	515695	Callee	rulesConfig -> reparseConfiguration		515624	0					
ANR	515696	PtrMemberAccess	rulesConfig -> reparseConfiguration		515624	0					
ANR	515697	Identifier	rulesConfig		515624	0					
ANR	515698	Identifier	reparseConfiguration		515624	1					
ANR	515699	ArgumentList			515624	1					
ANR	515700	Statement	)	118:102:3877:3877	515624	34	True				
ANR	515701	ExpressionStatement		118:103:3878:3878	515624	35	True				
ANR	515702	Statement	QObject	119:4:3884:3890	515624	36	True				
ANR	515703	Statement	::	119:11:3891:3892	515624	37	True				
ANR	515704	Statement	connect	119:13:3893:3899	515624	38	True				
ANR	515705	Statement	(	119:20:3900:3900	515624	39	True				
ANR	515706	Statement	configWatcher	119:21:3901:3913	515624	40	True				
ANR	515707	Statement	","	119:34:3914:3914	515624	41	True				
ANR	515708	Statement	&	119:36:3916:3916	515624	42	True				
ANR	515709	Statement	KDirWatch	119:37:3917:3925	515624	43	True				
ANR	515710	Statement	::	119:46:3926:3927	515624	44	True				
ANR	515711	Statement	created	119:48:3928:3934	515624	45	True				
ANR	515712	Statement	","	119:55:3935:3935	515624	46	True				
ANR	515713	Statement	[	119:57:3937:3937	515624	47	True				
ANR	515714	Statement	this	119:58:3938:3941	515624	48	True				
ANR	515715	Statement	]	119:62:3942:3942	515624	49	True				
ANR	515716	CompoundStatement		10:64:487:487	515624	50					
ANR	515717	ExpressionStatement	rulesConfig -> reparseConfiguration ( )	119:66:3946:3981	515624	0	True				
ANR	515718	CallExpression	rulesConfig -> reparseConfiguration ( )		515624	0					
ANR	515719	Callee	rulesConfig -> reparseConfiguration		515624	0					
ANR	515720	PtrMemberAccess	rulesConfig -> reparseConfiguration		515624	0					
ANR	515721	Identifier	rulesConfig		515624	0					
ANR	515722	Identifier	reparseConfiguration		515624	1					
ANR	515723	ArgumentList			515624	1					
ANR	515724	Statement	)	119:104:3984:3984	515624	51	True				
ANR	515725	ExpressionStatement		119:105:3985:3985	515624	52	True				
ANR	515726	Statement	QObject	120:4:3991:3997	515624	53	True				
ANR	515727	Statement	::	120:11:3998:3999	515624	54	True				
ANR	515728	Statement	connect	120:13:4000:4006	515624	55	True				
ANR	515729	Statement	(	120:20:4007:4007	515624	56	True				
ANR	515730	Statement	configWatcher	120:21:4008:4020	515624	57	True				
ANR	515731	Statement	","	120:34:4021:4021	515624	58	True				
ANR	515732	Statement	&	120:36:4023:4023	515624	59	True				
ANR	515733	Statement	KDirWatch	120:37:4024:4032	515624	60	True				
ANR	515734	Statement	::	120:46:4033:4034	515624	61	True				
ANR	515735	Statement	deleted	120:48:4035:4041	515624	62	True				
ANR	515736	Statement	","	120:55:4042:4042	515624	63	True				
ANR	515737	Statement	[	120:57:4044:4044	515624	64	True				
ANR	515738	Statement	this	120:58:4045:4048	515624	65	True				
ANR	515739	Statement	]	120:62:4049:4049	515624	66	True				
ANR	515740	CompoundStatement		11:64:594:594	515624	67					
ANR	515741	ExpressionStatement	rulesConfig -> reparseConfiguration ( )	120:66:4053:4088	515624	0	True				
ANR	515742	CallExpression	rulesConfig -> reparseConfiguration ( )		515624	0					
ANR	515743	Callee	rulesConfig -> reparseConfiguration		515624	0					
ANR	515744	PtrMemberAccess	rulesConfig -> reparseConfiguration		515624	0					
ANR	515745	Identifier	rulesConfig		515624	0					
ANR	515746	Identifier	reparseConfiguration		515624	1					
ANR	515747	ArgumentList			515624	1					
ANR	515748	Statement	)	120:104:4091:4091	515624	68	True				
ANR	515749	ExpressionStatement		120:105:4092:4092	515624	69	True				
ANR	515750	ExpressionStatement	sycocaChangeTimer . setSingleShot ( true )	122:4:4099:4136	515624	70	True				
ANR	515751	CallExpression	sycocaChangeTimer . setSingleShot ( true )		515624	0					
ANR	515752	Callee	sycocaChangeTimer . setSingleShot		515624	0					
ANR	515753	MemberAccess	sycocaChangeTimer . setSingleShot		515624	0					
ANR	515754	Identifier	sycocaChangeTimer		515624	0					
ANR	515755	Identifier	setSingleShot		515624	1					
ANR	515756	ArgumentList	true		515624	1					
ANR	515757	Argument	true		515624	0					
ANR	515758	Identifier	true		515624	0					
ANR	515759	ExpressionStatement	sycocaChangeTimer . setInterval ( 100 )	123:4:4142:4176	515624	71	True				
ANR	515760	CallExpression	sycocaChangeTimer . setInterval ( 100 )		515624	0					
ANR	515761	Callee	sycocaChangeTimer . setInterval		515624	0					
ANR	515762	MemberAccess	sycocaChangeTimer . setInterval		515624	0					
ANR	515763	Identifier	sycocaChangeTimer		515624	0					
ANR	515764	Identifier	setInterval		515624	1					
ANR	515765	ArgumentList	100		515624	1					
ANR	515766	Argument	100		515624	0					
ANR	515767	PrimaryExpression	100		515624	0					
ANR	515768	Statement	QObject	125:4:4183:4189	515624	72	True				
ANR	515769	Statement	::	125:11:4190:4191	515624	73	True				
ANR	515770	Statement	connect	125:13:4192:4198	515624	74	True				
ANR	515771	Statement	(	125:20:4199:4199	515624	75	True				
ANR	515772	Statement	&	125:21:4200:4200	515624	76	True				
ANR	515773	Statement	sycocaChangeTimer	125:22:4201:4217	515624	77	True				
ANR	515774	Statement	","	125:39:4218:4218	515624	78	True				
ANR	515775	Statement	&	125:41:4220:4220	515624	79	True				
ANR	515776	Statement	QTimer	125:42:4221:4226	515624	80	True				
ANR	515777	Statement	::	125:48:4227:4228	515624	81	True				
ANR	515778	Statement	timeout	125:50:4229:4235	515624	82	True				
ANR	515779	Statement	","	125:57:4236:4236	515624	83	True				
ANR	515780	Statement	q	125:59:4238:4238	515624	84	True				
ANR	515781	Statement	","	125:60:4239:4239	515624	85	True				
ANR	515782	Statement	[	126:8:4249:4249	515624	86	True				
ANR	515783	Statement	this	126:9:4250:4253	515624	87	True				
ANR	515784	Statement	]	126:13:4254:4254	515624	88	True				
ANR	515785	Statement	(	126:14:4255:4255	515624	89	True				
ANR	515786	Statement	)	126:15:4256:4256	515624	90	True				
ANR	515787	CompoundStatement		17:17:801:801	515624	91					
ANR	515788	IfStatement	if ( ! windows . count ( ) )		515624	0					
ANR	515789	Condition	! windows . count ( )	127:16:4276:4291	515624	0	True				
ANR	515790	UnaryOperationExpression	! windows . count ( )		515624	0					
ANR	515791	UnaryOperator	!		515624	0					
ANR	515792	CallExpression	windows . count ( )		515624	1					
ANR	515793	Callee	windows . count		515624	0					
ANR	515794	MemberAccess	windows . count		515624	0					
ANR	515795	Identifier	windows		515624	0					
ANR	515796	Identifier	count		515624	1					
ANR	515797	ArgumentList			515624	1					
ANR	515798	CompoundStatement		18:34:837:837	515624	1					
ANR	515799	ReturnStatement	return ;	128:16:4312:4318	515624	0	True				
ANR	515800	ExpressionStatement	appDataCache . clear ( )	131:12:4347:4367	515624	1	True				
ANR	515801	CallExpression	appDataCache . clear ( )		515624	0					
ANR	515802	Callee	appDataCache . clear		515624	0					
ANR	515803	MemberAccess	appDataCache . clear		515624	0					
ANR	515804	Identifier	appDataCache		515624	0					
ANR	515805	Identifier	clear		515624	1					
ANR	515806	ArgumentList			515624	1					
ANR	515807	Statement	q	134:12:4454:4454	515624	2	True				
ANR	515808	Statement	->	134:13:4455:4456	515624	3	True				
ANR	515809	Statement	dataChanged	134:15:4457:4467	515624	4	True				
ANR	515810	Statement	(	134:26:4468:4468	515624	5	True				
ANR	515811	Statement	q	134:27:4469:4469	515624	6	True				
ANR	515812	Statement	->	134:28:4470:4471	515624	7	True				
ANR	515813	Statement	index	134:30:4472:4476	515624	8	True				
ANR	515814	Statement	(	134:35:4477:4477	515624	9	True				
ANR	515815	Statement	0	134:36:4478:4478	515624	10	True				
ANR	515816	Statement	","	134:37:4479:4479	515624	11	True				
ANR	515817	Statement	0	134:39:4481:4481	515624	12	True				
ANR	515818	Statement	)	134:40:4482:4482	515624	13	True				
ANR	515819	Statement	","	134:41:4483:4483	515624	14	True				
ANR	515820	Statement	q	134:44:4486:4486	515624	15	True				
ANR	515821	Statement	->	134:45:4487:4488	515624	16	True				
ANR	515822	Statement	index	134:47:4489:4493	515624	17	True				
ANR	515823	Statement	(	134:52:4494:4494	515624	18	True				
ANR	515824	Statement	windows	134:53:4495:4501	515624	19	True				
ANR	515825	Statement	.	134:60:4502:4502	515624	20	True				
ANR	515826	Statement	count	134:61:4503:4507	515624	21	True				
ANR	515827	Statement	(	134:66:4508:4508	515624	22	True				
ANR	515828	Statement	)	134:67:4509:4509	515624	23	True				
ANR	515829	Statement	-	134:69:4511:4511	515624	24	True				
ANR	515830	Statement	1	134:71:4513:4513	515624	25	True				
ANR	515831	Statement	","	134:72:4514:4514	515624	26	True				
ANR	515832	Statement	0	134:74:4516:4516	515624	27	True				
ANR	515833	Statement	)	134:75:4517:4517	515624	28	True				
ANR	515834	Statement	","	134:76:4518:4518	515624	29	True				
ANR	515835	Statement	QVector	135:16:4536:4542	515624	30	True				
ANR	515836	Statement	<	135:23:4543:4543	515624	31	True				
ANR	515837	Statement	int	135:24:4544:4546	515624	32	True				
ANR	515838	Statement	>	135:27:4547:4547	515624	33	True				
ANR	515839	CompoundStatement		26:28:1091:1091	515624	34					
ANR	515840	Statement	Qt	135:29:4549:4550	515624	0	True				
ANR	515841	Statement	::	135:31:4551:4552	515624	1	True				
ANR	515842	Statement	DecorationRole	135:33:4553:4566	515624	2	True				
ANR	515843	Statement	","	135:47:4567:4567	515624	3	True				
ANR	515844	Statement	AbstractTasksModel	135:49:4569:4586	515624	4	True				
ANR	515845	Statement	::	135:67:4587:4588	515624	5	True				
ANR	515846	Statement	AppId	135:69:4589:4593	515624	6	True				
ANR	515847	Statement	","	135:74:4594:4594	515624	7	True				
ANR	515848	Statement	AbstractTasksModel	136:16:4612:4629	515624	8	True				
ANR	515849	Statement	::	136:34:4630:4631	515624	9	True				
ANR	515850	Statement	AppName	136:36:4632:4638	515624	10	True				
ANR	515851	Statement	","	136:43:4639:4639	515624	11	True				
ANR	515852	Statement	AbstractTasksModel	136:45:4641:4658	515624	12	True				
ANR	515853	Statement	::	136:63:4659:4660	515624	13	True				
ANR	515854	Statement	GenericName	136:65:4661:4671	515624	14	True				
ANR	515855	Statement	","	136:76:4672:4672	515624	15	True				
ANR	515856	Statement	AbstractTasksModel	137:16:4690:4707	515624	16	True				
ANR	515857	Statement	::	137:34:4708:4709	515624	17	True				
ANR	515858	Statement	LauncherUrl	137:36:4710:4720	515624	18	True				
ANR	515859	Statement	)	137:48:4722:4722	515624	35	True				
ANR	515860	ExpressionStatement		137:49:4723:4723	515624	36	True				
ANR	515861	Statement	)	139:4:4739:4739	515624	92	True				
ANR	515862	ExpressionStatement		139:5:4740:4740	515624	93	True				
ANR	515863	Statement	void	141:4:4747:4750	515624	94	True				
ANR	515864	Statement	(	141:9:4752:4752	515624	95	True				
ANR	515865	Statement	KSycoca	141:10:4753:4759	515624	96	True				
ANR	515866	Statement	::	141:17:4760:4761	515624	97	True				
ANR	515867	Statement	*	141:19:4762:4762	515624	98	True				
ANR	515868	Statement	myDatabaseChangeSignal	141:20:4763:4784	515624	99	True				
ANR	515869	Statement	)	141:42:4785:4785	515624	100	True				
ANR	515870	Statement	(	141:43:4786:4786	515624	101	True				
ANR	515871	Statement	const	141:44:4787:4791	515624	102	True				
ANR	515872	Statement	QStringList	141:50:4793:4803	515624	103	True				
ANR	515873	Statement	&	141:62:4805:4805	515624	104	True				
ANR	515874	Statement	)	141:63:4806:4806	515624	105	True				
ANR	515875	Statement	=	141:65:4808:4808	515624	106	True				
ANR	515876	ExpressionStatement	& KSycoca :: databaseChanged	141:67:4810:4835	515624	107	True				
ANR	515877	UnaryOperationExpression	& KSycoca :: databaseChanged		515624	0					
ANR	515878	UnaryOperator	&		515624	0					
ANR	515879	Identifier	KSycoca :: databaseChanged		515624	1					
ANR	515880	Statement	QObject	142:4:4841:4847	515624	108	True				
ANR	515881	Statement	::	142:11:4848:4849	515624	109	True				
ANR	515882	Statement	connect	142:13:4850:4856	515624	110	True				
ANR	515883	Statement	(	142:20:4857:4857	515624	111	True				
ANR	515884	Statement	KSycoca	142:21:4858:4864	515624	112	True				
ANR	515885	Statement	::	142:28:4865:4866	515624	113	True				
ANR	515886	Statement	self	142:30:4867:4870	515624	114	True				
ANR	515887	Statement	(	142:34:4871:4871	515624	115	True				
ANR	515888	Statement	)	142:35:4872:4872	515624	116	True				
ANR	515889	Statement	","	142:36:4873:4873	515624	117	True				
ANR	515890	Statement	myDatabaseChangeSignal	142:38:4875:4896	515624	118	True				
ANR	515891	Statement	","	142:60:4897:4897	515624	119	True				
ANR	515892	Statement	q	142:62:4899:4899	515624	120	True				
ANR	515893	Statement	","	142:63:4900:4900	515624	121	True				
ANR	515894	Statement	[	143:8:4910:4910	515624	122	True				
ANR	515895	Statement	this	143:9:4911:4914	515624	123	True				
ANR	515896	Statement	]	143:13:4915:4915	515624	124	True				
ANR	515897	Statement	(	143:14:4916:4916	515624	125	True				
ANR	515898	Statement	const	143:15:4917:4921	515624	126	True				
ANR	515899	Statement	QStringList	143:21:4923:4933	515624	127	True				
ANR	515900	Statement	&	143:33:4935:4935	515624	128	True				
ANR	515901	Statement	changedResources	143:34:4936:4951	515624	129	True				
ANR	515902	Statement	)	143:50:4952:4952	515624	130	True				
ANR	515903	CompoundStatement		34:52:1497:1497	515624	131					
ANR	515904	IfStatement	"if ( changedResources . contains ( QLatin1String ( ""services"" ) ) || changedResources . contains ( QLatin1String ( ""apps"" ) ) || changedResources . contains ( QLatin1String ( ""xdgdata-apps"" ) ) )"		515624	0					
ANR	515905	Condition	"changedResources . contains ( QLatin1String ( ""services"" ) ) || changedResources . contains ( QLatin1String ( ""apps"" ) ) || changedResources . contains ( QLatin1String ( ""xdgdata-apps"" ) )"	144:16:4972:5167	515624	0	True				
ANR	515906	OrExpression	"changedResources . contains ( QLatin1String ( ""services"" ) ) || changedResources . contains ( QLatin1String ( ""apps"" ) ) || changedResources . contains ( QLatin1String ( ""xdgdata-apps"" ) )"		515624	0		||			
ANR	515907	CallExpression	"changedResources . contains ( QLatin1String ( ""services"" ) )"		515624	0					
ANR	515908	Callee	changedResources . contains		515624	0					
ANR	515909	MemberAccess	changedResources . contains		515624	0					
ANR	515910	Identifier	changedResources		515624	0					
ANR	515911	Identifier	contains		515624	1					
ANR	515912	ArgumentList	"QLatin1String ( ""services"" )"		515624	1					
ANR	515913	Argument	"QLatin1String ( ""services"" )"		515624	0					
ANR	515914	CallExpression	"QLatin1String ( ""services"" )"		515624	0					
ANR	515915	Callee	QLatin1String		515624	0					
ANR	515916	Identifier	QLatin1String		515624	0					
ANR	515917	ArgumentList	"""services"""		515624	1					
ANR	515918	Argument	"""services"""		515624	0					
ANR	515919	PrimaryExpression	"""services"""		515624	0					
ANR	515920	OrExpression	"changedResources . contains ( QLatin1String ( ""apps"" ) ) || changedResources . contains ( QLatin1String ( ""xdgdata-apps"" ) )"		515624	1		||			
ANR	515921	CallExpression	"changedResources . contains ( QLatin1String ( ""apps"" ) )"		515624	0					
ANR	515922	Callee	changedResources . contains		515624	0					
ANR	515923	MemberAccess	changedResources . contains		515624	0					
ANR	515924	Identifier	changedResources		515624	0					
ANR	515925	Identifier	contains		515624	1					
ANR	515926	ArgumentList	"QLatin1String ( ""apps"" )"		515624	1					
ANR	515927	Argument	"QLatin1String ( ""apps"" )"		515624	0					
ANR	515928	CallExpression	"QLatin1String ( ""apps"" )"		515624	0					
ANR	515929	Callee	QLatin1String		515624	0					
ANR	515930	Identifier	QLatin1String		515624	0					
ANR	515931	ArgumentList	"""apps"""		515624	1					
ANR	515932	Argument	"""apps"""		515624	0					
ANR	515933	PrimaryExpression	"""apps"""		515624	0					
ANR	515934	CallExpression	"changedResources . contains ( QLatin1String ( ""xdgdata-apps"" ) )"		515624	1					
ANR	515935	Callee	changedResources . contains		515624	0					
ANR	515936	MemberAccess	changedResources . contains		515624	0					
ANR	515937	Identifier	changedResources		515624	0					
ANR	515938	Identifier	contains		515624	1					
ANR	515939	ArgumentList	"QLatin1String ( ""xdgdata-apps"" )"		515624	1					
ANR	515940	Argument	"QLatin1String ( ""xdgdata-apps"" )"		515624	0					
ANR	515941	CallExpression	"QLatin1String ( ""xdgdata-apps"" )"		515624	0					
ANR	515942	Callee	QLatin1String		515624	0					
ANR	515943	Identifier	QLatin1String		515624	0					
ANR	515944	ArgumentList	"""xdgdata-apps"""		515624	1					
ANR	515945	Argument	"""xdgdata-apps"""		515624	0					
ANR	515946	PrimaryExpression	"""xdgdata-apps"""		515624	0					
ANR	515947	CompoundStatement		37:77:1713:1713	515624	1					
ANR	515948	ExpressionStatement	sycocaChangeTimer . start ( )	147:16:5188:5213	515624	0	True				
ANR	515949	CallExpression	sycocaChangeTimer . start ( )		515624	0					
ANR	515950	Callee	sycocaChangeTimer . start		515624	0					
ANR	515951	MemberAccess	sycocaChangeTimer . start		515624	0					
ANR	515952	Identifier	sycocaChangeTimer		515624	0					
ANR	515953	Identifier	start		515624	1					
ANR	515954	ArgumentList			515624	1					
ANR	515955	Statement	)	150:4:5243:5243	515624	132	True				
ANR	515956	ExpressionStatement		150:5:5244:5244	515624	133	True				
ANR	515957	Statement	QObject	152:4:5251:5257	515624	134	True				
ANR	515958	Statement	::	152:11:5258:5259	515624	135	True				
ANR	515959	Statement	connect	152:13:5260:5266	515624	136	True				
ANR	515960	Statement	(	152:20:5267:5267	515624	137	True				
ANR	515961	Statement	KWindowSystem	152:21:5268:5280	515624	138	True				
ANR	515962	Statement	::	152:34:5281:5282	515624	139	True				
ANR	515963	Statement	self	152:36:5283:5286	515624	140	True				
ANR	515964	Statement	(	152:40:5287:5287	515624	141	True				
ANR	515965	Statement	)	152:41:5288:5288	515624	142	True				
ANR	515966	Statement	","	152:42:5289:5289	515624	143	True				
ANR	515967	Statement	&	152:44:5291:5291	515624	144	True				
ANR	515968	Statement	KWindowSystem	152:45:5292:5304	515624	145	True				
ANR	515969	Statement	::	152:58:5305:5306	515624	146	True				
ANR	515970	Statement	windowAdded	152:60:5307:5317	515624	147	True				
ANR	515971	Statement	","	152:71:5318:5318	515624	148	True				
ANR	515972	Statement	q	152:73:5320:5320	515624	149	True				
ANR	515973	Statement	","	152:74:5321:5321	515624	150	True				
ANR	515974	Statement	[	153:8:5331:5331	515624	151	True				
ANR	515975	Statement	this	153:9:5332:5335	515624	152	True				
ANR	515976	Statement	]	153:13:5336:5336	515624	153	True				
ANR	515977	Statement	(	153:14:5337:5337	515624	154	True				
ANR	515978	Statement	WId	153:15:5338:5340	515624	155	True				
ANR	515979	Statement	window	153:19:5342:5347	515624	156	True				
ANR	515980	Statement	)	153:25:5348:5348	515624	157	True				
ANR	515981	CompoundStatement		44:27:1893:1893	515624	158					
ANR	515982	ExpressionStatement	addWindow ( window )	154:12:5364:5381	515624	0	True				
ANR	515983	CallExpression	addWindow ( window )		515624	0					
ANR	515984	Callee	addWindow		515624	0					
ANR	515985	Identifier	addWindow		515624	0					
ANR	515986	ArgumentList	window		515624	1					
ANR	515987	Argument	window		515624	0					
ANR	515988	Identifier	window		515624	0					
ANR	515989	Statement	)	156:4:5397:5397	515624	159	True				
ANR	515990	ExpressionStatement		156:5:5398:5398	515624	160	True				
ANR	515991	Statement	QObject	158:4:5405:5411	515624	161	True				
ANR	515992	Statement	::	158:11:5412:5413	515624	162	True				
ANR	515993	Statement	connect	158:13:5414:5420	515624	163	True				
ANR	515994	Statement	(	158:20:5421:5421	515624	164	True				
ANR	515995	Statement	KWindowSystem	158:21:5422:5434	515624	165	True				
ANR	515996	Statement	::	158:34:5435:5436	515624	166	True				
ANR	515997	Statement	self	158:36:5437:5440	515624	167	True				
ANR	515998	Statement	(	158:40:5441:5441	515624	168	True				
ANR	515999	Statement	)	158:41:5442:5442	515624	169	True				
ANR	516000	Statement	","	158:42:5443:5443	515624	170	True				
ANR	516001	Statement	&	158:44:5445:5445	515624	171	True				
ANR	516002	Statement	KWindowSystem	158:45:5446:5458	515624	172	True				
ANR	516003	Statement	::	158:58:5459:5460	515624	173	True				
ANR	516004	Statement	windowRemoved	158:60:5461:5473	515624	174	True				
ANR	516005	Statement	","	158:73:5474:5474	515624	175	True				
ANR	516006	Statement	q	158:75:5476:5476	515624	176	True				
ANR	516007	Statement	","	158:76:5477:5477	515624	177	True				
ANR	516008	Statement	[	159:8:5487:5487	515624	178	True				
ANR	516009	Statement	this	159:9:5488:5491	515624	179	True				
ANR	516010	Statement	]	159:13:5492:5492	515624	180	True				
ANR	516011	Statement	(	159:14:5493:5493	515624	181	True				
ANR	516012	Statement	WId	159:15:5494:5496	515624	182	True				
ANR	516013	Statement	window	159:19:5498:5503	515624	183	True				
ANR	516014	Statement	)	159:25:5504:5504	515624	184	True				
ANR	516015	CompoundStatement		50:27:2049:2049	515624	185					
ANR	516016	ExpressionStatement	removeWindow ( window )	160:12:5520:5540	515624	0	True				
ANR	516017	CallExpression	removeWindow ( window )		515624	0					
ANR	516018	Callee	removeWindow		515624	0					
ANR	516019	Identifier	removeWindow		515624	0					
ANR	516020	ArgumentList	window		515624	1					
ANR	516021	Argument	window		515624	0					
ANR	516022	Identifier	window		515624	0					
ANR	516023	Statement	)	162:4:5556:5556	515624	186	True				
ANR	516024	ExpressionStatement		162:5:5557:5557	515624	187	True				
ANR	516025	Statement	void	164:4:5564:5567	515624	188	True				
ANR	516026	Statement	(	164:9:5569:5569	515624	189	True				
ANR	516027	Statement	KWindowSystem	164:10:5570:5582	515624	190	True				
ANR	516028	Statement	::	164:23:5583:5584	515624	191	True				
ANR	516029	Statement	*	164:25:5585:5585	515624	192	True				
ANR	516030	Statement	myWindowChangeSignal	164:26:5586:5605	515624	193	True				
ANR	516031	Statement	)	164:46:5606:5606	515624	194	True				
ANR	516032	Statement	(	164:47:5607:5607	515624	195	True				
ANR	516033	Statement	WId	164:48:5608:5610	515624	196	True				
ANR	516034	Statement	window	164:52:5612:5617	515624	197	True				
ANR	516035	Statement	","	164:58:5618:5618	515624	198	True				
ANR	516036	Statement	NET	165:8:5628:5630	515624	199	True				
ANR	516037	Statement	::	165:11:5631:5632	515624	200	True				
ANR	516038	Statement	Properties	165:13:5633:5642	515624	201	True				
ANR	516039	Statement	properties	165:24:5644:5653	515624	202	True				
ANR	516040	Statement	","	165:34:5654:5654	515624	203	True				
ANR	516041	Statement	NET	165:36:5656:5658	515624	204	True				
ANR	516042	Statement	::	165:39:5659:5660	515624	205	True				
ANR	516043	Statement	Properties2	165:41:5661:5671	515624	206	True				
ANR	516044	Statement	properties2	165:53:5673:5683	515624	207	True				
ANR	516045	Statement	)	165:64:5684:5684	515624	208	True				
ANR	516046	Statement	=	165:66:5686:5686	515624	209	True				
ANR	516047	ExpressionStatement	& KWindowSystem :: windowChanged	165:68:5688:5717	515624	210	True				
ANR	516048	UnaryOperationExpression	& KWindowSystem :: windowChanged		515624	0					
ANR	516049	UnaryOperator	&		515624	0					
ANR	516050	Identifier	KWindowSystem :: windowChanged		515624	1					
ANR	516051	Statement	QObject	166:4:5723:5729	515624	211	True				
ANR	516052	Statement	::	166:11:5730:5731	515624	212	True				
ANR	516053	Statement	connect	166:13:5732:5738	515624	213	True				
ANR	516054	Statement	(	166:20:5739:5739	515624	214	True				
ANR	516055	Statement	KWindowSystem	166:21:5740:5752	515624	215	True				
ANR	516056	Statement	::	166:34:5753:5754	515624	216	True				
ANR	516057	Statement	self	166:36:5755:5758	515624	217	True				
ANR	516058	Statement	(	166:40:5759:5759	515624	218	True				
ANR	516059	Statement	)	166:41:5760:5760	515624	219	True				
ANR	516060	Statement	","	166:42:5761:5761	515624	220	True				
ANR	516061	Statement	myWindowChangeSignal	166:44:5763:5782	515624	221	True				
ANR	516062	Statement	","	166:64:5783:5783	515624	222	True				
ANR	516063	Statement	q	166:66:5785:5785	515624	223	True				
ANR	516064	Statement	","	166:67:5786:5786	515624	224	True				
ANR	516065	Statement	[	167:8:5796:5796	515624	225	True				
ANR	516066	Statement	this	167:9:5797:5800	515624	226	True				
ANR	516067	Statement	]	167:13:5801:5801	515624	227	True				
ANR	516068	Statement	(	167:14:5802:5802	515624	228	True				
ANR	516069	Statement	WId	167:15:5803:5805	515624	229	True				
ANR	516070	Statement	window	167:19:5807:5812	515624	230	True				
ANR	516071	Statement	","	167:25:5813:5813	515624	231	True				
ANR	516072	Statement	NET	167:27:5815:5817	515624	232	True				
ANR	516073	Statement	::	167:30:5818:5819	515624	233	True				
ANR	516074	Statement	Properties	167:32:5820:5829	515624	234	True				
ANR	516075	Statement	properties	167:43:5831:5840	515624	235	True				
ANR	516076	Statement	","	167:53:5841:5841	515624	236	True				
ANR	516077	Statement	NET	167:55:5843:5845	515624	237	True				
ANR	516078	Statement	::	167:58:5846:5847	515624	238	True				
ANR	516079	Statement	Properties2	167:60:5848:5858	515624	239	True				
ANR	516080	Statement	properties2	167:72:5860:5870	515624	240	True				
ANR	516081	Statement	)	167:83:5871:5871	515624	241	True				
ANR	516082	CompoundStatement		58:85:2416:2416	515624	242					
ANR	516083	ExpressionStatement	"windowChanged ( window , properties , properties2 )"	168:12:5887:5933	515624	0	True				
ANR	516084	CallExpression	"windowChanged ( window , properties , properties2 )"		515624	0					
ANR	516085	Callee	windowChanged		515624	0					
ANR	516086	Identifier	windowChanged		515624	0					
ANR	516087	ArgumentList	window		515624	1					
ANR	516088	Argument	window		515624	0					
ANR	516089	Identifier	window		515624	0					
ANR	516090	Argument	properties		515624	1					
ANR	516091	Identifier	properties		515624	0					
ANR	516092	Argument	properties2		515624	2					
ANR	516093	Identifier	properties2		515624	0					
ANR	516094	Statement	)	170:4:5949:5949	515624	243	True				
ANR	516095	ExpressionStatement		170:5:5950:5950	515624	244	True				
ANR	516096	Statement	QObject	173:4:6022:6028	515624	245	True				
ANR	516097	Statement	::	173:11:6029:6030	515624	246	True				
ANR	516098	Statement	connect	173:13:6031:6037	515624	247	True				
ANR	516099	Statement	(	173:20:6038:6038	515624	248	True				
ANR	516100	Statement	KWindowSystem	173:21:6039:6051	515624	249	True				
ANR	516101	Statement	::	173:34:6052:6053	515624	250	True				
ANR	516102	Statement	self	173:36:6054:6057	515624	251	True				
ANR	516103	Statement	(	173:40:6058:6058	515624	252	True				
ANR	516104	Statement	)	173:41:6059:6059	515624	253	True				
ANR	516105	Statement	","	173:42:6060:6060	515624	254	True				
ANR	516106	Statement	&	173:44:6062:6062	515624	255	True				
ANR	516107	Statement	KWindowSystem	173:45:6063:6075	515624	256	True				
ANR	516108	Statement	::	173:58:6076:6077	515624	257	True				
ANR	516109	Statement	activeWindowChanged	173:60:6078:6096	515624	258	True				
ANR	516110	Statement	","	173:79:6097:6097	515624	259	True				
ANR	516111	Statement	q	173:81:6099:6099	515624	260	True				
ANR	516112	Statement	","	173:82:6100:6100	515624	261	True				
ANR	516113	Statement	[	174:8:6110:6110	515624	262	True				
ANR	516114	Statement	this	174:9:6111:6114	515624	263	True				
ANR	516115	Statement	]	174:13:6115:6115	515624	264	True				
ANR	516116	Statement	(	174:14:6116:6116	515624	265	True				
ANR	516117	Statement	WId	174:15:6117:6119	515624	266	True				
ANR	516118	Statement	window	174:19:6121:6126	515624	267	True				
ANR	516119	Statement	)	174:25:6127:6127	515624	268	True				
ANR	516120	CompoundStatement		69:12:2776:2818	515624	269					
ANR	516121	IdentifierDeclStatement	const WId oldActiveWindow = activeWindow ;	175:12:6143:6183	515624	0	True				
ANR	516122	IdentifierDecl	oldActiveWindow = activeWindow		515624	0					
ANR	516123	IdentifierDeclType	const WId		515624	0					
ANR	516124	Identifier	oldActiveWindow		515624	1					
ANR	516125	AssignmentExpression	oldActiveWindow = activeWindow		515624	2		=			
ANR	516126	Identifier	activeWindow		515624	0					
ANR	516127	Identifier	activeWindow		515624	1					
ANR	516128	ExpressionStatement	activeWindow = window	176:12:6197:6218	515624	1	True				
ANR	516129	AssignmentExpression	activeWindow = window		515624	0		=			
ANR	516130	Identifier	activeWindow		515624	0					
ANR	516131	Identifier	window		515624	1					
ANR	516132	IdentifierDeclStatement	int row = windows . indexOf ( oldActiveWindow ) ;	178:12:6233:6275	515624	2	True				
ANR	516133	IdentifierDecl	row = windows . indexOf ( oldActiveWindow )		515624	0					
ANR	516134	IdentifierDeclType	int		515624	0					
ANR	516135	Identifier	row		515624	1					
ANR	516136	AssignmentExpression	row = windows . indexOf ( oldActiveWindow )		515624	2		=			
ANR	516137	Identifier	row		515624	0					
ANR	516138	CallExpression	windows . indexOf ( oldActiveWindow )		515624	1					
ANR	516139	Callee	windows . indexOf		515624	0					
ANR	516140	MemberAccess	windows . indexOf		515624	0					
ANR	516141	Identifier	windows		515624	0					
ANR	516142	Identifier	indexOf		515624	1					
ANR	516143	ArgumentList	oldActiveWindow		515624	1					
ANR	516144	Argument	oldActiveWindow		515624	0					
ANR	516145	Identifier	oldActiveWindow		515624	0					
ANR	516146	IfStatement	if ( row != - 1 )		515624	3					
ANR	516147	Condition	row != - 1	180:16:6294:6302	515624	0	True				
ANR	516148	EqualityExpression	row != - 1		515624	0		!=			
ANR	516149	Identifier	row		515624	0					
ANR	516150	UnaryOperationExpression	- 1		515624	1					
ANR	516151	UnaryOperator	-		515624	0					
ANR	516152	PrimaryExpression	1		515624	1					
ANR	516153	CompoundStatement		71:27:2848:2848	515624	1					
ANR	516154	Statement	dataChanged	181:16:6323:6333	515624	0	True				
ANR	516155	Statement	(	181:27:6334:6334	515624	1	True				
ANR	516156	Statement	oldActiveWindow	181:28:6335:6349	515624	2	True				
ANR	516157	Statement	","	181:43:6350:6350	515624	3	True				
ANR	516158	Statement	QVector	181:45:6352:6358	515624	4	True				
ANR	516159	Statement	<	181:52:6359:6359	515624	5	True				
ANR	516160	Statement	int	181:53:6360:6362	515624	6	True				
ANR	516161	Statement	>	181:56:6363:6363	515624	7	True				
ANR	516162	CompoundStatement		72:57:2907:2907	515624	8					
ANR	516163	Statement	IsActive	181:58:6365:6372	515624	0	True				
ANR	516164	Statement	)	181:67:6374:6374	515624	9	True				
ANR	516165	ExpressionStatement		181:68:6375:6375	515624	10	True				
ANR	516166	ExpressionStatement	row = windows . indexOf ( window )	184:12:6404:6433	515624	4	True				
ANR	516167	AssignmentExpression	row = windows . indexOf ( window )		515624	0		=			
ANR	516168	Identifier	row		515624	0					
ANR	516169	CallExpression	windows . indexOf ( window )		515624	1					
ANR	516170	Callee	windows . indexOf		515624	0					
ANR	516171	MemberAccess	windows . indexOf		515624	0					
ANR	516172	Identifier	windows		515624	0					
ANR	516173	Identifier	indexOf		515624	1					
ANR	516174	ArgumentList	window		515624	1					
ANR	516175	Argument	window		515624	0					
ANR	516176	Identifier	window		515624	0					
ANR	516177	IfStatement	if ( row != - 1 )		515624	5					
ANR	516178	Condition	row != - 1	186:16:6452:6460	515624	0	True				
ANR	516179	EqualityExpression	row != - 1		515624	0		!=			
ANR	516180	Identifier	row		515624	0					
ANR	516181	UnaryOperationExpression	- 1		515624	1					
ANR	516182	UnaryOperator	-		515624	0					
ANR	516183	PrimaryExpression	1		515624	1					
ANR	516184	CompoundStatement		77:27:3006:3006	515624	1					
ANR	516185	Statement	dataChanged	187:16:6481:6491	515624	0	True				
ANR	516186	Statement	(	187:27:6492:6492	515624	1	True				
ANR	516187	Statement	window	187:28:6493:6498	515624	2	True				
ANR	516188	Statement	","	187:34:6499:6499	515624	3	True				
ANR	516189	Statement	QVector	187:36:6501:6507	515624	4	True				
ANR	516190	Statement	<	187:43:6508:6508	515624	5	True				
ANR	516191	Statement	int	187:44:6509:6511	515624	6	True				
ANR	516192	Statement	>	187:47:6512:6512	515624	7	True				
ANR	516193	CompoundStatement		78:48:3056:3056	515624	8					
ANR	516194	Statement	IsActive	187:49:6514:6521	515624	0	True				
ANR	516195	Statement	)	187:58:6523:6523	515624	9	True				
ANR	516196	ExpressionStatement		187:59:6524:6524	515624	10	True				
ANR	516197	Statement	)	190:4:6554:6554	515624	270	True				
ANR	516198	ExpressionStatement		190:5:6555:6555	515624	271	True				
ANR	516199	ExpressionStatement	activeWindow = KWindowSystem :: activeWindow ( )	192:4:6562:6606	515624	272	True				
ANR	516200	AssignmentExpression	activeWindow = KWindowSystem :: activeWindow ( )		515624	0		=			
ANR	516201	Identifier	activeWindow		515624	0					
ANR	516202	CallExpression	KWindowSystem :: activeWindow ( )		515624	1					
ANR	516203	Callee	KWindowSystem :: activeWindow		515624	0					
ANR	516204	Identifier	KWindowSystem :: activeWindow		515624	0					
ANR	516205	ArgumentList			515624	1					
ANR	516206	Statement	foreach	195:4:6642:6648	515624	273	True				
ANR	516207	Statement	(	195:11:6649:6649	515624	274	True				
ANR	516208	Statement	const	195:12:6650:6654	515624	275	True				
ANR	516209	Statement	WId	195:18:6656:6658	515624	276	True				
ANR	516210	Statement	window	195:22:6660:6665	515624	277	True				
ANR	516211	Statement	","	195:28:6666:6666	515624	278	True				
ANR	516212	Statement	KWindowSystem	195:30:6668:6680	515624	279	True				
ANR	516213	Statement	::	195:43:6681:6682	515624	280	True				
ANR	516214	Statement	windows	195:45:6683:6689	515624	281	True				
ANR	516215	Statement	(	195:52:6690:6690	515624	282	True				
ANR	516216	Statement	)	195:53:6691:6691	515624	283	True				
ANR	516217	Statement	)	195:54:6692:6692	515624	284	True				
ANR	516218	CompoundStatement		86:56:3237:3237	515624	285					
ANR	516219	ExpressionStatement	addWindow ( window )	196:8:6704:6721	515624	0	True				
ANR	516220	CallExpression	addWindow ( window )		515624	0					
ANR	516221	Callee	addWindow		515624	0					
ANR	516222	Identifier	addWindow		515624	0					
ANR	516223	ArgumentList	window		515624	1					
ANR	516224	Argument	window		515624	0					
ANR	516225	Identifier	window		515624	0					
ANR	516226	ReturnType	void		515624	1					
ANR	516227	Identifier	XWindowTasksModel :: Private :: init		515624	2					
ANR	516228	ParameterList			515624	3					
ANR	516229	CFGEntryNode	ENTRY		515624		True				
ANR	516230	CFGExitNode	EXIT		515624		True				
ANR	516231	Symbol	configWatcher		515624						
ANR	516232	Symbol	appDataCache		515624						
ANR	516233	Symbol	oldActiveWindow		515624						
ANR	516234	Symbol	sycocaChangeTimer		515624						
ANR	516235	Symbol	windows		515624						
ANR	516236	Symbol	QLatin1String		515624						
ANR	516237	Symbol	q		515624						
ANR	516238	Symbol	windows . indexOf		515624						
ANR	516239	Symbol	changedResources		515624						
ANR	516240	Symbol	rulesConfig		515624						
ANR	516241	Symbol	KSharedConfig :: openConfig		515624						
ANR	516242	Symbol	true		515624						
ANR	516243	Symbol	windows . count		515624						
ANR	516244	Symbol	changedResources . contains		515624						
ANR	516245	Symbol	KWindowSystem :: activeWindow		515624						
ANR	516246	Symbol	QStringLiteral		515624						
ANR	516247	Symbol	location		515624						
ANR	516248	Symbol	window		515624						
ANR	516249	Symbol	properties2		515624						
ANR	516250	Symbol	row		515624						
ANR	516251	Symbol	activeWindow		515624						
ANR	516252	Symbol	properties		515624						
ANR	516253	Function	XWindowTasksModel :: Private :: addWindow	200:0:6732:8359							
ANR	516254	FunctionDef	XWindowTasksModel :: Private :: addWindow (WId window)		516253	0					
ANR	516255	CompoundStatement		201:0:6787:8359	516253	0					
ANR	516256	IfStatement	if ( windows . contains ( window ) )		516253	0					
ANR	516257	Condition	windows . contains ( window )	203:8:6828:6851	516253	0	True				
ANR	516258	CallExpression	windows . contains ( window )		516253	0					
ANR	516259	Callee	windows . contains		516253	0					
ANR	516260	MemberAccess	windows . contains		516253	0					
ANR	516261	Identifier	windows		516253	0					
ANR	516262	Identifier	contains		516253	1					
ANR	516263	ArgumentList	window		516253	1					
ANR	516264	Argument	window		516253	0					
ANR	516265	Identifier	window		516253	0					
ANR	516266	CompoundStatement		3:34:66:66	516253	1					
ANR	516267	ReturnStatement	return ;	204:8:6864:6870	516253	0	True				
ANR	516268	IdentifierDeclStatement	"KWindowInfo info ( window , NET :: WMWindowType | NET :: WMState | NET :: WMName | NET :: WMVisibleName , NET :: WM2TransientFor ) ;"	207:4:6883:7040	516253	1	True				
ANR	516269	IdentifierDecl	"info ( window , NET :: WMWindowType | NET :: WMState | NET :: WMName | NET :: WMVisibleName , NET :: WM2TransientFor )"		516253	0					
ANR	516270	IdentifierDeclType	KWindowInfo		516253	0					
ANR	516271	Identifier	info		516253	1					
ANR	516272	Expression	"window , NET :: WMWindowType | NET :: WMState | NET :: WMName | NET :: WMVisibleName , NET :: WM2TransientFor"		516253	2					
ANR	516273	Identifier	window		516253	0					
ANR	516274	Expression	"NET :: WMWindowType | NET :: WMState | NET :: WMName | NET :: WMVisibleName , NET :: WM2TransientFor"		516253	1					
ANR	516275	InclusiveOrExpression	NET :: WMWindowType | NET :: WMState | NET :: WMName | NET :: WMVisibleName		516253	0		|			
ANR	516276	Identifier	NET :: WMWindowType		516253	0					
ANR	516277	InclusiveOrExpression	NET :: WMState | NET :: WMName | NET :: WMVisibleName		516253	1		|			
ANR	516278	Identifier	NET :: WMState		516253	0					
ANR	516279	InclusiveOrExpression	NET :: WMName | NET :: WMVisibleName		516253	1		|			
ANR	516280	Identifier	NET :: WMName		516253	0					
ANR	516281	Identifier	NET :: WMVisibleName		516253	1					
ANR	516282	Identifier	NET :: WM2TransientFor		516253	1					
ANR	516283	IdentifierDeclStatement	NET :: WindowType wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask ) ;	211:4:7047:7399	516253	2	True				
ANR	516284	IdentifierDecl	wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		516253	0					
ANR	516285	IdentifierDeclType	NET :: WindowType		516253	0					
ANR	516286	Identifier	wType		516253	1					
ANR	516287	AssignmentExpression	wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		516253	2		=			
ANR	516288	Identifier	wType		516253	0					
ANR	516289	CallExpression	info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		516253	1					
ANR	516290	Callee	info . windowType		516253	0					
ANR	516291	MemberAccess	info . windowType		516253	0					
ANR	516292	Identifier	info		516253	0					
ANR	516293	Identifier	windowType		516253	1					
ANR	516294	ArgumentList	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1					
ANR	516295	Argument	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	0					
ANR	516296	InclusiveOrExpression	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	0		|			
ANR	516297	Identifier	NET :: NormalMask		516253	0					
ANR	516298	InclusiveOrExpression	NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516299	Identifier	NET :: DesktopMask		516253	0					
ANR	516300	InclusiveOrExpression	NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516301	Identifier	NET :: DockMask		516253	0					
ANR	516302	InclusiveOrExpression	NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516303	Identifier	NET :: ToolbarMask		516253	0					
ANR	516304	InclusiveOrExpression	NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516305	Identifier	NET :: MenuMask		516253	0					
ANR	516306	InclusiveOrExpression	NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516307	Identifier	NET :: DialogMask		516253	0					
ANR	516308	InclusiveOrExpression	NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516309	Identifier	NET :: OverrideMask		516253	0					
ANR	516310	InclusiveOrExpression	NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516311	Identifier	NET :: TopMenuMask		516253	0					
ANR	516312	InclusiveOrExpression	NET :: UtilityMask | NET :: SplashMask		516253	1		|			
ANR	516313	Identifier	NET :: UtilityMask		516253	0					
ANR	516314	Identifier	NET :: SplashMask		516253	1					
ANR	516315	IdentifierDeclStatement	const WId leader = info . transientFor ( ) ;	216:4:7406:7444	516253	3	True				
ANR	516316	IdentifierDecl	leader = info . transientFor ( )		516253	0					
ANR	516317	IdentifierDeclType	const WId		516253	0					
ANR	516318	Identifier	leader		516253	1					
ANR	516319	AssignmentExpression	leader = info . transientFor ( )		516253	2		=			
ANR	516320	Identifier	leader		516253	0					
ANR	516321	CallExpression	info . transientFor ( )		516253	1					
ANR	516322	Callee	info . transientFor		516253	0					
ANR	516323	MemberAccess	info . transientFor		516253	0					
ANR	516324	Identifier	info		516253	0					
ANR	516325	Identifier	transientFor		516253	1					
ANR	516326	ArgumentList			516253	1					
ANR	516327	IfStatement	if ( leader > 0 && leader != window && leader != QX11Info :: appRootWindow ( ) && ! transients . contains ( window ) && windows . contains ( leader ) )		516253	4					
ANR	516328	Condition	leader > 0 && leader != window && leader != QX11Info :: appRootWindow ( ) && ! transients . contains ( window ) && windows . contains ( leader )	219:8:7480:7616	516253	0	True				
ANR	516329	AndExpression	leader > 0 && leader != window && leader != QX11Info :: appRootWindow ( ) && ! transients . contains ( window ) && windows . contains ( leader )		516253	0		&&			
ANR	516330	RelationalExpression	leader > 0		516253	0		>			
ANR	516331	Identifier	leader		516253	0					
ANR	516332	PrimaryExpression	0		516253	1					
ANR	516333	AndExpression	leader != window && leader != QX11Info :: appRootWindow ( ) && ! transients . contains ( window ) && windows . contains ( leader )		516253	1		&&			
ANR	516334	EqualityExpression	leader != window		516253	0		!=			
ANR	516335	Identifier	leader		516253	0					
ANR	516336	Identifier	window		516253	1					
ANR	516337	AndExpression	leader != QX11Info :: appRootWindow ( ) && ! transients . contains ( window ) && windows . contains ( leader )		516253	1		&&			
ANR	516338	EqualityExpression	leader != QX11Info :: appRootWindow ( )		516253	0		!=			
ANR	516339	Identifier	leader		516253	0					
ANR	516340	CallExpression	QX11Info :: appRootWindow ( )		516253	1					
ANR	516341	Callee	QX11Info :: appRootWindow		516253	0					
ANR	516342	Identifier	QX11Info :: appRootWindow		516253	0					
ANR	516343	ArgumentList			516253	1					
ANR	516344	AndExpression	! transients . contains ( window ) && windows . contains ( leader )		516253	1		&&			
ANR	516345	UnaryOperationExpression	! transients . contains ( window )		516253	0					
ANR	516346	UnaryOperator	!		516253	0					
ANR	516347	CallExpression	transients . contains ( window )		516253	1					
ANR	516348	Callee	transients . contains		516253	0					
ANR	516349	MemberAccess	transients . contains		516253	0					
ANR	516350	Identifier	transients		516253	0					
ANR	516351	Identifier	contains		516253	1					
ANR	516352	ArgumentList	window		516253	1					
ANR	516353	Argument	window		516253	0					
ANR	516354	Identifier	window		516253	0					
ANR	516355	CallExpression	windows . contains ( leader )		516253	1					
ANR	516356	Callee	windows . contains		516253	0					
ANR	516357	MemberAccess	windows . contains		516253	0					
ANR	516358	Identifier	windows		516253	0					
ANR	516359	Identifier	contains		516253	1					
ANR	516360	ArgumentList	leader		516253	1					
ANR	516361	Argument	leader		516253	0					
ANR	516362	Identifier	leader		516253	0					
ANR	516363	CompoundStatement		20:69:831:831	516253	1					
ANR	516364	ExpressionStatement	transients . insert ( window )	221:8:7629:7654	516253	0	True				
ANR	516365	CallExpression	transients . insert ( window )		516253	0					
ANR	516366	Callee	transients . insert		516253	0					
ANR	516367	MemberAccess	transients . insert		516253	0					
ANR	516368	Identifier	transients		516253	0					
ANR	516369	Identifier	insert		516253	1					
ANR	516370	ArgumentList	window		516253	1					
ANR	516371	Argument	window		516253	0					
ANR	516372	Identifier	window		516253	0					
ANR	516373	IfStatement	if ( info . hasState ( NET :: DemandsAttention ) && windows . contains ( leader ) )		516253	1					
ANR	516374	Condition	info . hasState ( NET :: DemandsAttention ) && windows . contains ( leader )	224:12:7723:7786	516253	0	True				
ANR	516375	AndExpression	info . hasState ( NET :: DemandsAttention ) && windows . contains ( leader )		516253	0		&&			
ANR	516376	CallExpression	info . hasState ( NET :: DemandsAttention )		516253	0					
ANR	516377	Callee	info . hasState		516253	0					
ANR	516378	MemberAccess	info . hasState		516253	0					
ANR	516379	Identifier	info		516253	0					
ANR	516380	Identifier	hasState		516253	1					
ANR	516381	ArgumentList	NET :: DemandsAttention		516253	1					
ANR	516382	Argument	NET :: DemandsAttention		516253	0					
ANR	516383	Identifier	NET :: DemandsAttention		516253	0					
ANR	516384	CallExpression	windows . contains ( leader )		516253	1					
ANR	516385	Callee	windows . contains		516253	0					
ANR	516386	MemberAccess	windows . contains		516253	0					
ANR	516387	Identifier	windows		516253	0					
ANR	516388	Identifier	contains		516253	1					
ANR	516389	ArgumentList	leader		516253	1					
ANR	516390	Argument	leader		516253	0					
ANR	516391	Identifier	leader		516253	0					
ANR	516392	CompoundStatement		24:78:1001:1001	516253	1					
ANR	516393	ExpressionStatement	"transientsDemandingAttention . insertMulti ( leader , window )"	225:12:7803:7859	516253	0	True				
ANR	516394	CallExpression	"transientsDemandingAttention . insertMulti ( leader , window )"		516253	0					
ANR	516395	Callee	transientsDemandingAttention . insertMulti		516253	0					
ANR	516396	MemberAccess	transientsDemandingAttention . insertMulti		516253	0					
ANR	516397	Identifier	transientsDemandingAttention		516253	0					
ANR	516398	Identifier	insertMulti		516253	1					
ANR	516399	ArgumentList	leader		516253	1					
ANR	516400	Argument	leader		516253	0					
ANR	516401	Identifier	leader		516253	0					
ANR	516402	Argument	window		516253	1					
ANR	516403	Identifier	window		516253	0					
ANR	516404	Statement	dataChanged	226:12:7873:7883	516253	1	True				
ANR	516405	Statement	(	226:23:7884:7884	516253	2	True				
ANR	516406	Statement	leader	226:24:7885:7890	516253	3	True				
ANR	516407	Statement	","	226:30:7891:7891	516253	4	True				
ANR	516408	Statement	QVector	226:32:7893:7899	516253	5	True				
ANR	516409	Statement	<	226:39:7900:7900	516253	6	True				
ANR	516410	Statement	int	226:40:7901:7903	516253	7	True				
ANR	516411	Statement	>	226:43:7904:7904	516253	8	True				
ANR	516412	CompoundStatement		26:44:1117:1117	516253	9					
ANR	516413	Statement	IsDemandingAttention	226:45:7906:7925	516253	0	True				
ANR	516414	Statement	)	226:66:7927:7927	516253	10	True				
ANR	516415	ExpressionStatement		226:67:7928:7928	516253	11	True				
ANR	516416	ReturnStatement	return ;	229:8:7949:7955	516253	2	True				
ANR	516417	IfStatement	if ( wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility )		516253	5					
ANR	516418	Condition	wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility	233:8:8059:8186	516253	0	True				
ANR	516419	AndExpression	wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		516253	0		&&			
ANR	516420	EqualityExpression	wType != NET :: Normal		516253	0		!=			
ANR	516421	Identifier	wType		516253	0					
ANR	516422	Identifier	NET :: Normal		516253	1					
ANR	516423	AndExpression	wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		516253	1		&&			
ANR	516424	EqualityExpression	wType != NET :: Override		516253	0		!=			
ANR	516425	Identifier	wType		516253	0					
ANR	516426	Identifier	NET :: Override		516253	1					
ANR	516427	AndExpression	wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		516253	1		&&			
ANR	516428	EqualityExpression	wType != NET :: Unknown		516253	0		!=			
ANR	516429	Identifier	wType		516253	0					
ANR	516430	Identifier	NET :: Unknown		516253	1					
ANR	516431	AndExpression	wType != NET :: Dialog && wType != NET :: Utility		516253	1		&&			
ANR	516432	EqualityExpression	wType != NET :: Dialog		516253	0		!=			
ANR	516433	Identifier	wType		516253	0					
ANR	516434	Identifier	NET :: Dialog		516253	1					
ANR	516435	EqualityExpression	wType != NET :: Utility		516253	1		!=			
ANR	516436	Identifier	wType		516253	0					
ANR	516437	Identifier	NET :: Utility		516253	1					
ANR	516438	CompoundStatement		34:55:1401:1401	516253	1					
ANR	516439	ReturnStatement	return ;	236:8:8200:8206	516253	0	True				
ANR	516440	IdentifierDeclStatement	const int count = windows . count ( ) ;	239:4:8219:8252	516253	6	True				
ANR	516441	IdentifierDecl	count = windows . count ( )		516253	0					
ANR	516442	IdentifierDeclType	const int		516253	0					
ANR	516443	Identifier	count		516253	1					
ANR	516444	AssignmentExpression	count = windows . count ( )		516253	2		=			
ANR	516445	Identifier	count		516253	0					
ANR	516446	CallExpression	windows . count ( )		516253	1					
ANR	516447	Callee	windows . count		516253	0					
ANR	516448	MemberAccess	windows . count		516253	0					
ANR	516449	Identifier	windows		516253	0					
ANR	516450	Identifier	count		516253	1					
ANR	516451	ArgumentList			516253	1					
ANR	516452	ExpressionStatement	"q -> beginInsertRows ( QModelIndex ( ) , count , count )"	240:4:8258:8305	516253	7	True				
ANR	516453	CallExpression	"q -> beginInsertRows ( QModelIndex ( ) , count , count )"		516253	0					
ANR	516454	Callee	q -> beginInsertRows		516253	0					
ANR	516455	PtrMemberAccess	q -> beginInsertRows		516253	0					
ANR	516456	Identifier	q		516253	0					
ANR	516457	Identifier	beginInsertRows		516253	1					
ANR	516458	ArgumentList	QModelIndex ( )		516253	1					
ANR	516459	Argument	QModelIndex ( )		516253	0					
ANR	516460	CallExpression	QModelIndex ( )		516253	0					
ANR	516461	Callee	QModelIndex		516253	0					
ANR	516462	Identifier	QModelIndex		516253	0					
ANR	516463	ArgumentList			516253	1					
ANR	516464	Argument	count		516253	1					
ANR	516465	Identifier	count		516253	0					
ANR	516466	Argument	count		516253	2					
ANR	516467	Identifier	count		516253	0					
ANR	516468	ExpressionStatement	windows . append ( window )	241:4:8311:8333	516253	8	True				
ANR	516469	CallExpression	windows . append ( window )		516253	0					
ANR	516470	Callee	windows . append		516253	0					
ANR	516471	MemberAccess	windows . append		516253	0					
ANR	516472	Identifier	windows		516253	0					
ANR	516473	Identifier	append		516253	1					
ANR	516474	ArgumentList	window		516253	1					
ANR	516475	Argument	window		516253	0					
ANR	516476	Identifier	window		516253	0					
ANR	516477	ExpressionStatement	q -> endInsertRows ( )	242:4:8339:8357	516253	9	True				
ANR	516478	CallExpression	q -> endInsertRows ( )		516253	0					
ANR	516479	Callee	q -> endInsertRows		516253	0					
ANR	516480	PtrMemberAccess	q -> endInsertRows		516253	0					
ANR	516481	Identifier	q		516253	0					
ANR	516482	Identifier	endInsertRows		516253	1					
ANR	516483	ArgumentList			516253	1					
ANR	516484	ReturnType	void		516253	1					
ANR	516485	Identifier	XWindowTasksModel :: Private :: addWindow		516253	2					
ANR	516486	ParameterList	WId window		516253	3					
ANR	516487	Parameter	WId window	200:43:6775:6784	516253	0	True				
ANR	516488	ParameterType	WId		516253	0					
ANR	516489	Identifier	window		516253	1					
ANR	516490	CFGEntryNode	ENTRY		516253		True				
ANR	516491	CFGExitNode	EXIT		516253		True				
ANR	516492	Symbol	NET :: Unknown		516253						
ANR	516493	Symbol	NET :: ToolbarMask		516253						
ANR	516494	Symbol	leader		516253						
ANR	516495	Symbol	NET :: Utility		516253						
ANR	516496	Symbol	windows . contains		516253						
ANR	516497	Symbol	QX11Info :: appRootWindow		516253						
ANR	516498	Symbol	NET :: DemandsAttention		516253						
ANR	516499	Symbol	NET :: NormalMask		516253						
ANR	516500	Symbol	transients		516253						
ANR	516501	Symbol	info		516253						
ANR	516502	Symbol	NET :: DialogMask		516253						
ANR	516503	Symbol	NET :: Override		516253						
ANR	516504	Symbol	NET :: DesktopMask		516253						
ANR	516505	Symbol	info . hasState		516253						
ANR	516506	Symbol	NET :: UtilityMask		516253						
ANR	516507	Symbol	wType		516253						
ANR	516508	Symbol	transientsDemandingAttention		516253						
ANR	516509	Symbol	transients . contains		516253						
ANR	516510	Symbol	count		516253						
ANR	516511	Symbol	windows		516253						
ANR	516512	Symbol	NET :: DockMask		516253						
ANR	516513	Symbol	info . transientFor		516253						
ANR	516514	Symbol	q		516253						
ANR	516515	Symbol	NET :: OverrideMask		516253						
ANR	516516	Symbol	NET :: TopMenuMask		516253						
ANR	516517	Symbol	NET :: Dialog		516253						
ANR	516518	Symbol	QModelIndex		516253						
ANR	516519	Symbol	NET :: SplashMask		516253						
ANR	516520	Symbol	NET :: MenuMask		516253						
ANR	516521	Symbol	info . windowType		516253						
ANR	516522	Symbol	windows . count		516253						
ANR	516523	Symbol	NET :: Normal		516253						
ANR	516524	Symbol	window		516253						
ANR	516525	Function	XWindowTasksModel :: Private :: removeWindow	245:0:8362:9317							
ANR	516526	FunctionDef	XWindowTasksModel :: Private :: removeWindow (WId window)		516525	0					
ANR	516527	CompoundStatement		246:0:8420:9317	516525	0					
ANR	516528	IdentifierDeclStatement	const int row = windows . indexOf ( window ) ;	247:4:8426:8465	516525	0	True				
ANR	516529	IdentifierDecl	row = windows . indexOf ( window )		516525	0					
ANR	516530	IdentifierDeclType	const int		516525	0					
ANR	516531	Identifier	row		516525	1					
ANR	516532	AssignmentExpression	row = windows . indexOf ( window )		516525	2		=			
ANR	516533	Identifier	row		516525	0					
ANR	516534	CallExpression	windows . indexOf ( window )		516525	1					
ANR	516535	Callee	windows . indexOf		516525	0					
ANR	516536	MemberAccess	windows . indexOf		516525	0					
ANR	516537	Identifier	windows		516525	0					
ANR	516538	Identifier	indexOf		516525	1					
ANR	516539	ArgumentList	window		516525	1					
ANR	516540	Argument	window		516525	0					
ANR	516541	Identifier	window		516525	0					
ANR	516542	IfStatement	if ( row != - 1 )		516525	1					
ANR	516543	Condition	row != - 1	249:8:8476:8484	516525	0	True				
ANR	516544	EqualityExpression	row != - 1		516525	0		!=			
ANR	516545	Identifier	row		516525	0					
ANR	516546	UnaryOperationExpression	- 1		516525	1					
ANR	516547	UnaryOperator	-		516525	0					
ANR	516548	PrimaryExpression	1		516525	1					
ANR	516549	CompoundStatement		4:19:66:66	516525	1					
ANR	516550	ExpressionStatement	"q -> beginRemoveRows ( QModelIndex ( ) , row , row )"	250:8:8497:8540	516525	0	True				
ANR	516551	CallExpression	"q -> beginRemoveRows ( QModelIndex ( ) , row , row )"		516525	0					
ANR	516552	Callee	q -> beginRemoveRows		516525	0					
ANR	516553	PtrMemberAccess	q -> beginRemoveRows		516525	0					
ANR	516554	Identifier	q		516525	0					
ANR	516555	Identifier	beginRemoveRows		516525	1					
ANR	516556	ArgumentList	QModelIndex ( )		516525	1					
ANR	516557	Argument	QModelIndex ( )		516525	0					
ANR	516558	CallExpression	QModelIndex ( )		516525	0					
ANR	516559	Callee	QModelIndex		516525	0					
ANR	516560	Identifier	QModelIndex		516525	0					
ANR	516561	ArgumentList			516525	1					
ANR	516562	Argument	row		516525	1					
ANR	516563	Identifier	row		516525	0					
ANR	516564	Argument	row		516525	2					
ANR	516565	Identifier	row		516525	0					
ANR	516566	ExpressionStatement	windows . removeAt ( row )	251:8:8550:8571	516525	1	True				
ANR	516567	CallExpression	windows . removeAt ( row )		516525	0					
ANR	516568	Callee	windows . removeAt		516525	0					
ANR	516569	MemberAccess	windows . removeAt		516525	0					
ANR	516570	Identifier	windows		516525	0					
ANR	516571	Identifier	removeAt		516525	1					
ANR	516572	ArgumentList	row		516525	1					
ANR	516573	Argument	row		516525	0					
ANR	516574	Identifier	row		516525	0					
ANR	516575	ExpressionStatement	transientsDemandingAttention . remove ( window )	252:8:8581:8624	516525	2	True				
ANR	516576	CallExpression	transientsDemandingAttention . remove ( window )		516525	0					
ANR	516577	Callee	transientsDemandingAttention . remove		516525	0					
ANR	516578	MemberAccess	transientsDemandingAttention . remove		516525	0					
ANR	516579	Identifier	transientsDemandingAttention		516525	0					
ANR	516580	Identifier	remove		516525	1					
ANR	516581	ArgumentList	window		516525	1					
ANR	516582	Argument	window		516525	0					
ANR	516583	Identifier	window		516525	0					
ANR	516584	ExpressionStatement	windowInfoCache . remove ( window )	253:8:8634:8664	516525	3	True				
ANR	516585	CallExpression	windowInfoCache . remove ( window )		516525	0					
ANR	516586	Callee	windowInfoCache . remove		516525	0					
ANR	516587	MemberAccess	windowInfoCache . remove		516525	0					
ANR	516588	Identifier	windowInfoCache		516525	0					
ANR	516589	Identifier	remove		516525	1					
ANR	516590	ArgumentList	window		516525	1					
ANR	516591	Argument	window		516525	0					
ANR	516592	Identifier	window		516525	0					
ANR	516593	ExpressionStatement	appDataCache . remove ( window )	254:8:8674:8701	516525	4	True				
ANR	516594	CallExpression	appDataCache . remove ( window )		516525	0					
ANR	516595	Callee	appDataCache . remove		516525	0					
ANR	516596	MemberAccess	appDataCache . remove		516525	0					
ANR	516597	Identifier	appDataCache		516525	0					
ANR	516598	Identifier	remove		516525	1					
ANR	516599	ArgumentList	window		516525	1					
ANR	516600	Argument	window		516525	0					
ANR	516601	Identifier	window		516525	0					
ANR	516602	ExpressionStatement	delegateGeometries . remove ( window )	255:8:8711:8744	516525	5	True				
ANR	516603	CallExpression	delegateGeometries . remove ( window )		516525	0					
ANR	516604	Callee	delegateGeometries . remove		516525	0					
ANR	516605	MemberAccess	delegateGeometries . remove		516525	0					
ANR	516606	Identifier	delegateGeometries		516525	0					
ANR	516607	Identifier	remove		516525	1					
ANR	516608	ArgumentList	window		516525	1					
ANR	516609	Argument	window		516525	0					
ANR	516610	Identifier	window		516525	0					
ANR	516611	ExpressionStatement	q -> endRemoveRows ( )	256:8:8754:8772	516525	6	True				
ANR	516612	CallExpression	q -> endRemoveRows ( )		516525	0					
ANR	516613	Callee	q -> endRemoveRows		516525	0					
ANR	516614	PtrMemberAccess	q -> endRemoveRows		516525	0					
ANR	516615	Identifier	q		516525	0					
ANR	516616	Identifier	endRemoveRows		516525	1					
ANR	516617	ArgumentList			516525	1					
ANR	516618	ElseStatement	else		516525	0					
ANR	516619	CompoundStatement		12:11:364:364	516525	0					
ANR	516620	IfStatement	if ( transients . remove ( window ) )		516525	0					
ANR	516621	Condition	transients . remove ( window )	259:12:8912:8936	516525	0	True				
ANR	516622	CallExpression	transients . remove ( window )		516525	0					
ANR	516623	Callee	transients . remove		516525	0					
ANR	516624	MemberAccess	transients . remove		516525	0					
ANR	516625	Identifier	transients		516525	0					
ANR	516626	Identifier	remove		516525	1					
ANR	516627	ArgumentList	window		516525	1					
ANR	516628	Argument	window		516525	0					
ANR	516629	Identifier	window		516525	0					
ANR	516630	CompoundStatement		15:12:532:608	516525	1					
ANR	516631	IdentifierDeclStatement	"const WId leader = transientsDemandingAttention . key ( window , XCB_WINDOW_NONE ) ;"	260:12:8953:9029	516525	0	True				
ANR	516632	IdentifierDecl	"leader = transientsDemandingAttention . key ( window , XCB_WINDOW_NONE )"		516525	0					
ANR	516633	IdentifierDeclType	const WId		516525	0					
ANR	516634	Identifier	leader		516525	1					
ANR	516635	AssignmentExpression	"leader = transientsDemandingAttention . key ( window , XCB_WINDOW_NONE )"		516525	2		=			
ANR	516636	Identifier	leader		516525	0					
ANR	516637	CallExpression	"transientsDemandingAttention . key ( window , XCB_WINDOW_NONE )"		516525	1					
ANR	516638	Callee	transientsDemandingAttention . key		516525	0					
ANR	516639	MemberAccess	transientsDemandingAttention . key		516525	0					
ANR	516640	Identifier	transientsDemandingAttention		516525	0					
ANR	516641	Identifier	key		516525	1					
ANR	516642	ArgumentList	window		516525	1					
ANR	516643	Argument	window		516525	0					
ANR	516644	Identifier	window		516525	0					
ANR	516645	Argument	XCB_WINDOW_NONE		516525	1					
ANR	516646	Identifier	XCB_WINDOW_NONE		516525	0					
ANR	516647	IfStatement	if ( leader != XCB_WINDOW_NONE )		516525	1					
ANR	516648	Condition	leader != XCB_WINDOW_NONE	262:16:9048:9072	516525	0	True				
ANR	516649	EqualityExpression	leader != XCB_WINDOW_NONE		516525	0		!=			
ANR	516650	Identifier	leader		516525	0					
ANR	516651	Identifier	XCB_WINDOW_NONE		516525	1					
ANR	516652	CompoundStatement		17:43:654:654	516525	1					
ANR	516653	ExpressionStatement	"transientsDemandingAttention . remove ( leader , window )"	263:16:9093:9144	516525	0	True				
ANR	516654	CallExpression	"transientsDemandingAttention . remove ( leader , window )"		516525	0					
ANR	516655	Callee	transientsDemandingAttention . remove		516525	0					
ANR	516656	MemberAccess	transientsDemandingAttention . remove		516525	0					
ANR	516657	Identifier	transientsDemandingAttention		516525	0					
ANR	516658	Identifier	remove		516525	1					
ANR	516659	ArgumentList	leader		516525	1					
ANR	516660	Argument	leader		516525	0					
ANR	516661	Identifier	leader		516525	0					
ANR	516662	Argument	window		516525	1					
ANR	516663	Identifier	window		516525	0					
ANR	516664	Statement	dataChanged	264:16:9162:9172	516525	1	True				
ANR	516665	Statement	(	264:27:9173:9173	516525	2	True				
ANR	516666	Statement	leader	264:28:9174:9179	516525	3	True				
ANR	516667	Statement	","	264:34:9180:9180	516525	4	True				
ANR	516668	Statement	QVector	264:36:9182:9188	516525	5	True				
ANR	516669	Statement	<	264:43:9189:9189	516525	6	True				
ANR	516670	Statement	int	264:44:9190:9192	516525	7	True				
ANR	516671	Statement	>	264:47:9193:9193	516525	8	True				
ANR	516672	CompoundStatement		19:48:773:773	516525	9					
ANR	516673	Statement	IsDemandingAttention	264:49:9195:9214	516525	0	True				
ANR	516674	Statement	)	264:70:9216:9216	516525	10	True				
ANR	516675	ExpressionStatement		264:71:9217:9217	516525	11	True				
ANR	516676	IfStatement	if ( activeWindow == window )		516525	2					
ANR	516677	Condition	activeWindow == window	269:8:9258:9279	516525	0	True				
ANR	516678	EqualityExpression	activeWindow == window		516525	0		==			
ANR	516679	Identifier	activeWindow		516525	0					
ANR	516680	Identifier	window		516525	1					
ANR	516681	CompoundStatement		24:32:861:861	516525	1					
ANR	516682	ExpressionStatement	activeWindow = - 1	270:8:9292:9309	516525	0	True				
ANR	516683	AssignmentExpression	activeWindow = - 1		516525	0		=			
ANR	516684	Identifier	activeWindow		516525	0					
ANR	516685	UnaryOperationExpression	- 1		516525	1					
ANR	516686	UnaryOperator	-		516525	0					
ANR	516687	PrimaryExpression	1		516525	1					
ANR	516688	ReturnType	void		516525	1					
ANR	516689	Identifier	XWindowTasksModel :: Private :: removeWindow		516525	2					
ANR	516690	ParameterList	WId window		516525	3					
ANR	516691	Parameter	WId window	245:46:8408:8417	516525	0	True				
ANR	516692	ParameterType	WId		516525	0					
ANR	516693	Identifier	window		516525	1					
ANR	516694	CFGEntryNode	ENTRY		516525		True				
ANR	516695	CFGExitNode	EXIT		516525		True				
ANR	516696	Symbol	transientsDemandingAttention . key		516525						
ANR	516697	Symbol	leader		516525						
ANR	516698	Symbol	appDataCache		516525						
ANR	516699	Symbol	transientsDemandingAttention		516525						
ANR	516700	Symbol	windows		516525						
ANR	516701	Symbol	q		516525						
ANR	516702	Symbol	windows . indexOf		516525						
ANR	516703	Symbol	QModelIndex		516525						
ANR	516704	Symbol	transients . remove		516525						
ANR	516705	Symbol	windowInfoCache		516525						
ANR	516706	Symbol	delegateGeometries		516525						
ANR	516707	Symbol	window		516525						
ANR	516708	Symbol	row		516525						
ANR	516709	Symbol	activeWindow		516525						
ANR	516710	Symbol	transients		516525						
ANR	516711	Symbol	XCB_WINDOW_NONE		516525						
ANR	516712	Function	XWindowTasksModel :: Private :: transientChanged	274:0:9320:11072							
ANR	516713	FunctionDef	"XWindowTasksModel :: Private :: transientChanged (WId window , NET :: Properties properties , NET :: Properties2 properties2)"		516712	0					
ANR	516714	CompoundStatement		275:0:9440:11072	516712	0					
ANR	516715	IfStatement	if ( properties & ( NET :: WMState | NET :: XAWMState ) )		516712	0					
ANR	516716	Condition	properties & ( NET :: WMState | NET :: XAWMState )	277:8:9537:9580	516712	0	True				
ANR	516717	BitAndExpression	properties & ( NET :: WMState | NET :: XAWMState )		516712	0		&			
ANR	516718	Identifier	properties		516712	0					
ANR	516719	InclusiveOrExpression	NET :: WMState | NET :: XAWMState		516712	1		|			
ANR	516720	Identifier	NET :: WMState		516712	0					
ANR	516721	Identifier	NET :: XAWMState		516712	1					
ANR	516722	CompoundStatement		5:8:245:283	516712	1					
ANR	516723	IdentifierDeclStatement	"const KWindowInfo info ( window , NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor ) ;"	278:8:9593:9676	516712	0	True				
ANR	516724	IdentifierDecl	"info ( window , NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor )"		516712	0					
ANR	516725	IdentifierDeclType	const KWindowInfo		516712	0					
ANR	516726	Identifier	info		516712	1					
ANR	516727	Expression	"window , NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor"		516712	2					
ANR	516728	Identifier	window		516712	0					
ANR	516729	Expression	"NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor"		516712	1					
ANR	516730	InclusiveOrExpression	NET :: WMState | NET :: XAWMState		516712	0		|			
ANR	516731	Identifier	NET :: WMState		516712	0					
ANR	516732	Identifier	NET :: XAWMState		516712	1					
ANR	516733	Identifier	NET :: WM2TransientFor		516712	1					
ANR	516734	IdentifierDeclStatement	const WId leader = info . transientFor ( ) ;	279:8:9686:9724	516712	1	True				
ANR	516735	IdentifierDecl	leader = info . transientFor ( )		516712	0					
ANR	516736	IdentifierDeclType	const WId		516712	0					
ANR	516737	Identifier	leader		516712	1					
ANR	516738	AssignmentExpression	leader = info . transientFor ( )		516712	2		=			
ANR	516739	Identifier	leader		516712	0					
ANR	516740	CallExpression	info . transientFor ( )		516712	1					
ANR	516741	Callee	info . transientFor		516712	0					
ANR	516742	MemberAccess	info . transientFor		516712	0					
ANR	516743	Identifier	info		516712	0					
ANR	516744	Identifier	transientFor		516712	1					
ANR	516745	ArgumentList			516712	1					
ANR	516746	IfStatement	if ( ! windows . contains ( leader ) )		516712	2					
ANR	516747	Condition	! windows . contains ( leader )	281:12:9739:9763	516712	0	True				
ANR	516748	UnaryOperationExpression	! windows . contains ( leader )		516712	0					
ANR	516749	UnaryOperator	!		516712	0					
ANR	516750	CallExpression	windows . contains ( leader )		516712	1					
ANR	516751	Callee	windows . contains		516712	0					
ANR	516752	MemberAccess	windows . contains		516712	0					
ANR	516753	Identifier	windows		516712	0					
ANR	516754	Identifier	contains		516712	1					
ANR	516755	ArgumentList	leader		516712	1					
ANR	516756	Argument	leader		516712	0					
ANR	516757	Identifier	leader		516712	0					
ANR	516758	CompoundStatement		7:39:325:325	516712	1					
ANR	516759	ReturnStatement	return ;	282:12:9780:9786	516712	0	True				
ANR	516760	IfStatement	if ( info . hasState ( NET :: DemandsAttention ) )		516712	3					
ANR	516761	Condition	info . hasState ( NET :: DemandsAttention )	285:12:9811:9846	516712	0	True				
ANR	516762	CallExpression	info . hasState ( NET :: DemandsAttention )		516712	0					
ANR	516763	Callee	info . hasState		516712	0					
ANR	516764	MemberAccess	info . hasState		516712	0					
ANR	516765	Identifier	info		516712	0					
ANR	516766	Identifier	hasState		516712	1					
ANR	516767	ArgumentList	NET :: DemandsAttention		516712	1					
ANR	516768	Argument	NET :: DemandsAttention		516712	0					
ANR	516769	Identifier	NET :: DemandsAttention		516712	0					
ANR	516770	CompoundStatement		11:50:408:408	516712	1					
ANR	516771	IfStatement	if ( ! transientsDemandingAttention . values ( leader ) . contains ( window ) )		516712	0					
ANR	516772	Condition	! transientsDemandingAttention . values ( leader ) . contains ( window )	286:16:9867:9927	516712	0	True				
ANR	516773	UnaryOperationExpression	! transientsDemandingAttention . values ( leader ) . contains ( window )		516712	0					
ANR	516774	UnaryOperator	!		516712	0					
ANR	516775	CallExpression	transientsDemandingAttention . values ( leader ) . contains ( window )		516712	1					
ANR	516776	Callee	transientsDemandingAttention . values ( leader ) . contains		516712	0					
ANR	516777	MemberAccess	transientsDemandingAttention . values ( leader ) . contains		516712	0					
ANR	516778	CallExpression	transientsDemandingAttention . values ( leader )		516712	0					
ANR	516779	Callee	transientsDemandingAttention . values		516712	0					
ANR	516780	MemberAccess	transientsDemandingAttention . values		516712	0					
ANR	516781	Identifier	transientsDemandingAttention		516712	0					
ANR	516782	Identifier	values		516712	1					
ANR	516783	ArgumentList	leader		516712	1					
ANR	516784	Argument	leader		516712	0					
ANR	516785	Identifier	leader		516712	0					
ANR	516786	Identifier	contains		516712	1					
ANR	516787	ArgumentList	window		516712	1					
ANR	516788	Argument	window		516712	0					
ANR	516789	Identifier	window		516712	0					
ANR	516790	CompoundStatement		12:79:489:489	516712	1					
ANR	516791	ExpressionStatement	"transientsDemandingAttention . insertMulti ( leader , window )"	287:16:9948:10004	516712	0	True				
ANR	516792	CallExpression	"transientsDemandingAttention . insertMulti ( leader , window )"		516712	0					
ANR	516793	Callee	transientsDemandingAttention . insertMulti		516712	0					
ANR	516794	MemberAccess	transientsDemandingAttention . insertMulti		516712	0					
ANR	516795	Identifier	transientsDemandingAttention		516712	0					
ANR	516796	Identifier	insertMulti		516712	1					
ANR	516797	ArgumentList	leader		516712	1					
ANR	516798	Argument	leader		516712	0					
ANR	516799	Identifier	leader		516712	0					
ANR	516800	Argument	window		516712	1					
ANR	516801	Identifier	window		516712	0					
ANR	516802	Statement	dataChanged	288:16:10022:10032	516712	1	True				
ANR	516803	Statement	(	288:27:10033:10033	516712	2	True				
ANR	516804	Statement	leader	288:28:10034:10039	516712	3	True				
ANR	516805	Statement	","	288:34:10040:10040	516712	4	True				
ANR	516806	Statement	QVector	288:36:10042:10048	516712	5	True				
ANR	516807	Statement	<	288:43:10049:10049	516712	6	True				
ANR	516808	Statement	int	288:44:10050:10052	516712	7	True				
ANR	516809	Statement	>	288:47:10053:10053	516712	8	True				
ANR	516810	CompoundStatement		14:48:613:613	516712	9					
ANR	516811	Statement	IsDemandingAttention	288:49:10055:10074	516712	0	True				
ANR	516812	Statement	)	288:70:10076:10076	516712	10	True				
ANR	516813	ExpressionStatement		288:71:10077:10077	516712	11	True				
ANR	516814	ElseStatement	else		516712	0					
ANR	516815	IfStatement	if ( transientsDemandingAttention . remove ( window ) )		516712	0					
ANR	516816	Condition	transientsDemandingAttention . remove ( window )	290:19:10112:10154	516712	0	True				
ANR	516817	CallExpression	transientsDemandingAttention . remove ( window )		516712	0					
ANR	516818	Callee	transientsDemandingAttention . remove		516712	0					
ANR	516819	MemberAccess	transientsDemandingAttention . remove		516712	0					
ANR	516820	Identifier	transientsDemandingAttention		516712	0					
ANR	516821	Identifier	remove		516712	1					
ANR	516822	ArgumentList	window		516712	1					
ANR	516823	Argument	window		516712	0					
ANR	516824	Identifier	window		516712	0					
ANR	516825	CompoundStatement		16:64:716:716	516712	1					
ANR	516826	Statement	dataChanged	291:12:10171:10181	516712	0	True				
ANR	516827	Statement	(	291:23:10182:10182	516712	1	True				
ANR	516828	Statement	leader	291:24:10183:10188	516712	2	True				
ANR	516829	Statement	","	291:30:10189:10189	516712	3	True				
ANR	516830	Statement	QVector	291:32:10191:10197	516712	4	True				
ANR	516831	Statement	<	291:39:10198:10198	516712	5	True				
ANR	516832	Statement	int	291:40:10199:10201	516712	6	True				
ANR	516833	Statement	>	291:43:10202:10202	516712	7	True				
ANR	516834	CompoundStatement		17:44:762:762	516712	8					
ANR	516835	Statement	IsDemandingAttention	291:45:10204:10223	516712	0	True				
ANR	516836	Statement	)	291:66:10225:10225	516712	9	True				
ANR	516837	ExpressionStatement		291:67:10226:10226	516712	10	True				
ANR	516838	ElseStatement	else		516712	0					
ANR	516839	IfStatement	if ( properties2 & NET :: WM2TransientFor )		516712	0					
ANR	516840	Condition	properties2 & NET :: WM2TransientFor	294:15:10287:10320	516712	0	True				
ANR	516841	BitAndExpression	properties2 & NET :: WM2TransientFor		516712	0		&			
ANR	516842	Identifier	properties2		516712	0					
ANR	516843	Identifier	NET :: WM2TransientFor		516712	1					
ANR	516844	CompoundStatement		21:8:892:975	516712	1					
ANR	516845	IdentifierDeclStatement	"const KWindowInfo info ( window , NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor ) ;"	295:8:10333:10416	516712	0	True				
ANR	516846	IdentifierDecl	"info ( window , NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor )"		516712	0					
ANR	516847	IdentifierDeclType	const KWindowInfo		516712	0					
ANR	516848	Identifier	info		516712	1					
ANR	516849	Expression	"window , NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor"		516712	2					
ANR	516850	Identifier	window		516712	0					
ANR	516851	Expression	"NET :: WMState | NET :: XAWMState , NET :: WM2TransientFor"		516712	1					
ANR	516852	InclusiveOrExpression	NET :: WMState | NET :: XAWMState		516712	0		|			
ANR	516853	Identifier	NET :: WMState		516712	0					
ANR	516854	Identifier	NET :: XAWMState		516712	1					
ANR	516855	Identifier	NET :: WM2TransientFor		516712	1					
ANR	516856	IfStatement	if ( info . hasState ( NET :: DemandsAttention ) )		516712	1					
ANR	516857	Condition	info . hasState ( NET :: DemandsAttention )	297:12:10431:10466	516712	0	True				
ANR	516858	CallExpression	info . hasState ( NET :: DemandsAttention )		516712	0					
ANR	516859	Callee	info . hasState		516712	0					
ANR	516860	MemberAccess	info . hasState		516712	0					
ANR	516861	Identifier	info		516712	0					
ANR	516862	Identifier	hasState		516712	1					
ANR	516863	ArgumentList	NET :: DemandsAttention		516712	1					
ANR	516864	Argument	NET :: DemandsAttention		516712	0					
ANR	516865	Identifier	NET :: DemandsAttention		516712	0					
ANR	516866	CompoundStatement		24:12:1042:1121	516712	1					
ANR	516867	IdentifierDeclStatement	"const WId oldLeader = transientsDemandingAttention . key ( window , XCB_WINDOW_NONE ) ;"	298:12:10483:10562	516712	0	True				
ANR	516868	IdentifierDecl	"oldLeader = transientsDemandingAttention . key ( window , XCB_WINDOW_NONE )"		516712	0					
ANR	516869	IdentifierDeclType	const WId		516712	0					
ANR	516870	Identifier	oldLeader		516712	1					
ANR	516871	AssignmentExpression	"oldLeader = transientsDemandingAttention . key ( window , XCB_WINDOW_NONE )"		516712	2		=			
ANR	516872	Identifier	oldLeader		516712	0					
ANR	516873	CallExpression	"transientsDemandingAttention . key ( window , XCB_WINDOW_NONE )"		516712	1					
ANR	516874	Callee	transientsDemandingAttention . key		516712	0					
ANR	516875	MemberAccess	transientsDemandingAttention . key		516712	0					
ANR	516876	Identifier	transientsDemandingAttention		516712	0					
ANR	516877	Identifier	key		516712	1					
ANR	516878	ArgumentList	window		516712	1					
ANR	516879	Argument	window		516712	0					
ANR	516880	Identifier	window		516712	0					
ANR	516881	Argument	XCB_WINDOW_NONE		516712	1					
ANR	516882	Identifier	XCB_WINDOW_NONE		516712	0					
ANR	516883	IfStatement	if ( oldLeader != XCB_WINDOW_NONE )		516712	1					
ANR	516884	Condition	oldLeader != XCB_WINDOW_NONE	300:16:10581:10608	516712	0	True				
ANR	516885	EqualityExpression	oldLeader != XCB_WINDOW_NONE		516712	0		!=			
ANR	516886	Identifier	oldLeader		516712	0					
ANR	516887	Identifier	XCB_WINDOW_NONE		516712	1					
ANR	516888	CompoundStatement		27:16:1188:1226	516712	1					
ANR	516889	IdentifierDeclStatement	const WId leader = info . transientFor ( ) ;	301:16:10629:10667	516712	0	True				
ANR	516890	IdentifierDecl	leader = info . transientFor ( )		516712	0					
ANR	516891	IdentifierDeclType	const WId		516712	0					
ANR	516892	Identifier	leader		516712	1					
ANR	516893	AssignmentExpression	leader = info . transientFor ( )		516712	2		=			
ANR	516894	Identifier	leader		516712	0					
ANR	516895	CallExpression	info . transientFor ( )		516712	1					
ANR	516896	Callee	info . transientFor		516712	0					
ANR	516897	MemberAccess	info . transientFor		516712	0					
ANR	516898	Identifier	info		516712	0					
ANR	516899	Identifier	transientFor		516712	1					
ANR	516900	ArgumentList			516712	1					
ANR	516901	IfStatement	if ( leader != oldLeader )		516712	1					
ANR	516902	Condition	leader != oldLeader	303:20:10690:10708	516712	0	True				
ANR	516903	EqualityExpression	leader != oldLeader		516712	0		!=			
ANR	516904	Identifier	leader		516712	0					
ANR	516905	Identifier	oldLeader		516712	1					
ANR	516906	CompoundStatement		29:41:1270:1270	516712	1					
ANR	516907	ExpressionStatement	"transientsDemandingAttention . remove ( oldLeader , window )"	304:20:10733:10787	516712	0	True				
ANR	516908	CallExpression	"transientsDemandingAttention . remove ( oldLeader , window )"		516712	0					
ANR	516909	Callee	transientsDemandingAttention . remove		516712	0					
ANR	516910	MemberAccess	transientsDemandingAttention . remove		516712	0					
ANR	516911	Identifier	transientsDemandingAttention		516712	0					
ANR	516912	Identifier	remove		516712	1					
ANR	516913	ArgumentList	oldLeader		516712	1					
ANR	516914	Argument	oldLeader		516712	0					
ANR	516915	Identifier	oldLeader		516712	0					
ANR	516916	Argument	window		516712	1					
ANR	516917	Identifier	window		516712	0					
ANR	516918	ExpressionStatement	"transientsDemandingAttention . insertMulti ( leader , window )"	305:20:10809:10865	516712	1	True				
ANR	516919	CallExpression	"transientsDemandingAttention . insertMulti ( leader , window )"		516712	0					
ANR	516920	Callee	transientsDemandingAttention . insertMulti		516712	0					
ANR	516921	MemberAccess	transientsDemandingAttention . insertMulti		516712	0					
ANR	516922	Identifier	transientsDemandingAttention		516712	0					
ANR	516923	Identifier	insertMulti		516712	1					
ANR	516924	ArgumentList	leader		516712	1					
ANR	516925	Argument	leader		516712	0					
ANR	516926	Identifier	leader		516712	0					
ANR	516927	Argument	window		516712	1					
ANR	516928	Identifier	window		516712	0					
ANR	516929	Statement	dataChanged	306:20:10887:10897	516712	2	True				
ANR	516930	Statement	(	306:31:10898:10898	516712	3	True				
ANR	516931	Statement	oldLeader	306:32:10899:10907	516712	4	True				
ANR	516932	Statement	","	306:41:10908:10908	516712	5	True				
ANR	516933	Statement	QVector	306:43:10910:10916	516712	6	True				
ANR	516934	Statement	<	306:50:10917:10917	516712	7	True				
ANR	516935	Statement	int	306:51:10918:10920	516712	8	True				
ANR	516936	Statement	>	306:54:10921:10921	516712	9	True				
ANR	516937	CompoundStatement		32:55:1481:1481	516712	10					
ANR	516938	Statement	IsDemandingAttention	306:56:10923:10942	516712	0	True				
ANR	516939	Statement	)	306:77:10944:10944	516712	11	True				
ANR	516940	ExpressionStatement		306:78:10945:10945	516712	12	True				
ANR	516941	Statement	dataChanged	307:20:10967:10977	516712	13	True				
ANR	516942	Statement	(	307:31:10978:10978	516712	14	True				
ANR	516943	Statement	leader	307:32:10979:10984	516712	15	True				
ANR	516944	Statement	","	307:38:10985:10985	516712	16	True				
ANR	516945	Statement	QVector	307:40:10987:10993	516712	17	True				
ANR	516946	Statement	<	307:47:10994:10994	516712	18	True				
ANR	516947	Statement	int	307:48:10995:10997	516712	19	True				
ANR	516948	Statement	>	307:51:10998:10998	516712	20	True				
ANR	516949	CompoundStatement		33:52:1558:1558	516712	21					
ANR	516950	Statement	IsDemandingAttention	307:53:11000:11019	516712	0	True				
ANR	516951	Statement	)	307:74:11021:11021	516712	22	True				
ANR	516952	ExpressionStatement		307:75:11022:11022	516712	23	True				
ANR	516953	ReturnType	void		516712	1					
ANR	516954	Identifier	XWindowTasksModel :: Private :: transientChanged		516712	2					
ANR	516955	ParameterList	"WId window , NET :: Properties properties , NET :: Properties2 properties2"		516712	3					
ANR	516956	Parameter	WId window	274:50:9370:9379	516712	0	True				
ANR	516957	ParameterType	WId		516712	0					
ANR	516958	Identifier	window		516712	1					
ANR	516959	Parameter	NET :: Properties properties	274:62:9382:9407	516712	1	True				
ANR	516960	ParameterType	NET :: Properties		516712	0					
ANR	516961	Identifier	properties		516712	1					
ANR	516962	Parameter	NET :: Properties2 properties2	274:90:9410:9437	516712	2	True				
ANR	516963	ParameterType	NET :: Properties2		516712	0					
ANR	516964	Identifier	properties2		516712	1					
ANR	516965	CFGEntryNode	ENTRY		516712		True				
ANR	516966	CFGExitNode	EXIT		516712		True				
ANR	516967	Symbol	leader		516712						
ANR	516968	Symbol	transientsDemandingAttention . key		516712						
ANR	516969	Symbol	NET :: XAWMState		516712						
ANR	516970	Symbol	info . hasState		516712						
ANR	516971	Symbol	NET :: WMState		516712						
ANR	516972	Symbol	transientsDemandingAttention . remove		516712						
ANR	516973	Symbol	transientsDemandingAttention		516712						
ANR	516974	Symbol	windows		516712						
ANR	516975	Symbol	windows . contains		516712						
ANR	516976	Symbol	NET :: WM2TransientFor		516712						
ANR	516977	Symbol	transientsDemandingAttention . values ( leader ) . contains		516712						
ANR	516978	Symbol	info . transientFor		516712						
ANR	516979	Symbol	NET :: DemandsAttention		516712						
ANR	516980	Symbol	oldLeader		516712						
ANR	516981	Symbol	transientsDemandingAttention . values		516712						
ANR	516982	Symbol	window		516712						
ANR	516983	Symbol	properties2		516712						
ANR	516984	Symbol	properties		516712						
ANR	516985	Symbol	XCB_WINDOW_NONE		516712						
ANR	516986	Symbol	info		516712						
ANR	516987	Function	XWindowTasksModel :: Private :: windowChanged	314:0:11075:13424							
ANR	516988	FunctionDef	"XWindowTasksModel :: Private :: windowChanged (WId window , NET :: Properties properties , NET :: Properties2 properties2)"		516987	0					
ANR	516989	CompoundStatement		315:0:11192:13424	516987	0					
ANR	516990	IfStatement	if ( transients . contains ( window ) )		516987	0					
ANR	516991	Condition	transients . contains ( window )	316:8:11202:11228	516987	0	True				
ANR	516992	CallExpression	transients . contains ( window )		516987	0					
ANR	516993	Callee	transients . contains		516987	0					
ANR	516994	MemberAccess	transients . contains		516987	0					
ANR	516995	Identifier	transients		516987	0					
ANR	516996	Identifier	contains		516987	1					
ANR	516997	ArgumentList	window		516987	1					
ANR	516998	Argument	window		516987	0					
ANR	516999	Identifier	window		516987	0					
ANR	517000	CompoundStatement		2:37:38:38	516987	1					
ANR	517001	ExpressionStatement	"transientChanged ( window , properties , properties2 )"	317:8:11241:11290	516987	0	True				
ANR	517002	CallExpression	"transientChanged ( window , properties , properties2 )"		516987	0					
ANR	517003	Callee	transientChanged		516987	0					
ANR	517004	Identifier	transientChanged		516987	0					
ANR	517005	ArgumentList	window		516987	1					
ANR	517006	Argument	window		516987	0					
ANR	517007	Identifier	window		516987	0					
ANR	517008	Argument	properties		516987	1					
ANR	517009	Identifier	properties		516987	0					
ANR	517010	Argument	properties2		516987	2					
ANR	517011	Identifier	properties2		516987	0					
ANR	517012	ReturnStatement	return ;	319:8:11301:11307	516987	1	True				
ANR	517013	IdentifierDeclStatement	bool wipeInfoCache = false ;	322:4:11320:11346	516987	1	True				
ANR	517014	IdentifierDecl	wipeInfoCache = false		516987	0					
ANR	517015	IdentifierDeclType	bool		516987	0					
ANR	517016	Identifier	wipeInfoCache		516987	1					
ANR	517017	AssignmentExpression	wipeInfoCache = false		516987	2		=			
ANR	517018	Identifier	false		516987	0					
ANR	517019	Identifier	false		516987	1					
ANR	517020	IdentifierDeclStatement	bool wipeAppDataCache = false ;	323:4:11352:11381	516987	2	True				
ANR	517021	IdentifierDecl	wipeAppDataCache = false		516987	0					
ANR	517022	IdentifierDeclType	bool		516987	0					
ANR	517023	Identifier	wipeAppDataCache		516987	1					
ANR	517024	AssignmentExpression	wipeAppDataCache = false		516987	2		=			
ANR	517025	Identifier	false		516987	0					
ANR	517026	Identifier	false		516987	1					
ANR	517027	IdentifierDeclStatement	QVector < int > changedRoles ;	324:4:11387:11412	516987	3	True				
ANR	517028	IdentifierDecl	changedRoles		516987	0					
ANR	517029	IdentifierDeclType	QVector < int >		516987	0					
ANR	517030	Identifier	changedRoles		516987	1					
ANR	517031	IfStatement	if ( properties & ( NET :: WMName | NET :: WMVisibleName | NET :: WM2WindowClass | NET :: WMPid ) || properties2 & NET :: WM2WindowClass )		516987	4					
ANR	517032	Condition	properties & ( NET :: WMName | NET :: WMVisibleName | NET :: WM2WindowClass | NET :: WMPid ) || properties2 & NET :: WM2WindowClass	326:8:11423:11549	516987	0	True				
ANR	517033	OrExpression	properties & ( NET :: WMName | NET :: WMVisibleName | NET :: WM2WindowClass | NET :: WMPid ) || properties2 & NET :: WM2WindowClass		516987	0		||			
ANR	517034	BitAndExpression	properties & ( NET :: WMName | NET :: WMVisibleName | NET :: WM2WindowClass | NET :: WMPid )		516987	0		&			
ANR	517035	Identifier	properties		516987	0					
ANR	517036	InclusiveOrExpression	NET :: WMName | NET :: WMVisibleName | NET :: WM2WindowClass | NET :: WMPid		516987	1		|			
ANR	517037	Identifier	NET :: WMName		516987	0					
ANR	517038	InclusiveOrExpression	NET :: WMVisibleName | NET :: WM2WindowClass | NET :: WMPid		516987	1		|			
ANR	517039	Identifier	NET :: WMVisibleName		516987	0					
ANR	517040	InclusiveOrExpression	NET :: WM2WindowClass | NET :: WMPid		516987	1		|			
ANR	517041	Identifier	NET :: WM2WindowClass		516987	0					
ANR	517042	Identifier	NET :: WMPid		516987	1					
ANR	517043	BitAndExpression	properties2 & NET :: WM2WindowClass		516987	1		&			
ANR	517044	Identifier	properties2		516987	0					
ANR	517045	Identifier	NET :: WM2WindowClass		516987	1					
ANR	517046	CompoundStatement		13:46:359:359	516987	1					
ANR	517047	ExpressionStatement	wipeInfoCache = true	328:8:11562:11582	516987	0	True				
ANR	517048	AssignmentExpression	wipeInfoCache = true		516987	0		=			
ANR	517049	Identifier	wipeInfoCache		516987	0					
ANR	517050	Identifier	true		516987	1					
ANR	517051	ExpressionStatement	wipeAppDataCache = true	329:8:11592:11615	516987	1	True				
ANR	517052	AssignmentExpression	wipeAppDataCache = true		516987	0		=			
ANR	517053	Identifier	wipeAppDataCache		516987	0					
ANR	517054	Identifier	true		516987	1					
ANR	517055	ExpressionStatement	changedRoles << Qt :: DisplayRole << Qt :: DecorationRole << AppId << AppName << GenericName << LauncherUrl	330:8:11625:11728	516987	2	True				
ANR	517056	ShiftExpression	changedRoles << Qt :: DisplayRole << Qt :: DecorationRole << AppId << AppName << GenericName << LauncherUrl		516987	0		<<			
ANR	517057	Identifier	changedRoles		516987	0					
ANR	517058	ShiftExpression	Qt :: DisplayRole << Qt :: DecorationRole << AppId << AppName << GenericName << LauncherUrl		516987	1		<<			
ANR	517059	Identifier	Qt :: DisplayRole		516987	0					
ANR	517060	ShiftExpression	Qt :: DecorationRole << AppId << AppName << GenericName << LauncherUrl		516987	1		<<			
ANR	517061	Identifier	Qt :: DecorationRole		516987	0					
ANR	517062	ShiftExpression	AppId << AppName << GenericName << LauncherUrl		516987	1		<<			
ANR	517063	Identifier	AppId		516987	0					
ANR	517064	ShiftExpression	AppName << GenericName << LauncherUrl		516987	1		<<			
ANR	517065	Identifier	AppName		516987	0					
ANR	517066	ShiftExpression	GenericName << LauncherUrl		516987	1		<<			
ANR	517067	Identifier	GenericName		516987	0					
ANR	517068	Identifier	LauncherUrl		516987	1					
ANR	517069	IfStatement	if ( ( properties & NET :: WMIcon ) && ! changedRoles . contains ( Qt :: DecorationRole ) )		516987	5					
ANR	517070	Condition	( properties & NET :: WMIcon ) && ! changedRoles . contains ( Qt :: DecorationRole )	333:8:11745:11816	516987	0	True				
ANR	517071	AndExpression	( properties & NET :: WMIcon ) && ! changedRoles . contains ( Qt :: DecorationRole )		516987	0		&&			
ANR	517072	BitAndExpression	properties & NET :: WMIcon		516987	0		&			
ANR	517073	Identifier	properties		516987	0					
ANR	517074	Identifier	NET :: WMIcon		516987	1					
ANR	517075	UnaryOperationExpression	! changedRoles . contains ( Qt :: DecorationRole )		516987	1					
ANR	517076	UnaryOperator	!		516987	0					
ANR	517077	CallExpression	changedRoles . contains ( Qt :: DecorationRole )		516987	1					
ANR	517078	Callee	changedRoles . contains		516987	0					
ANR	517079	MemberAccess	changedRoles . contains		516987	0					
ANR	517080	Identifier	changedRoles		516987	0					
ANR	517081	Identifier	contains		516987	1					
ANR	517082	ArgumentList	Qt :: DecorationRole		516987	1					
ANR	517083	Argument	Qt :: DecorationRole		516987	0					
ANR	517084	Identifier	Qt :: DecorationRole		516987	0					
ANR	517085	CompoundStatement		19:82:626:626	516987	1					
ANR	517086	ExpressionStatement	changedRoles << Qt :: DecorationRole	334:8:11829:11863	516987	0	True				
ANR	517087	ShiftExpression	changedRoles << Qt :: DecorationRole		516987	0		<<			
ANR	517088	Identifier	changedRoles		516987	0					
ANR	517089	Identifier	Qt :: DecorationRole		516987	1					
ANR	517090	IfStatement	if ( properties & ( NET :: WMState | NET :: XAWMState ) )		516987	6					
ANR	517091	Condition	properties & ( NET :: WMState | NET :: XAWMState )	341:8:12178:12221	516987	0	True				
ANR	517092	BitAndExpression	properties & ( NET :: WMState | NET :: XAWMState )		516987	0		&			
ANR	517093	Identifier	properties		516987	0					
ANR	517094	InclusiveOrExpression	NET :: WMState | NET :: XAWMState		516987	1		|			
ANR	517095	Identifier	NET :: WMState		516987	0					
ANR	517096	Identifier	NET :: XAWMState		516987	1					
ANR	517097	CompoundStatement		27:54:1031:1031	516987	1					
ANR	517098	ExpressionStatement	wipeInfoCache = true	342:8:12234:12254	516987	0	True				
ANR	517099	AssignmentExpression	wipeInfoCache = true		516987	0		=			
ANR	517100	Identifier	wipeInfoCache		516987	0					
ANR	517101	Identifier	true		516987	1					
ANR	517102	ExpressionStatement	changedRoles << IsFullScreen << IsMaximized << IsMinimized << IsKeepAbove << IsKeepBelow	343:8:12264:12352	516987	1	True				
ANR	517103	ShiftExpression	changedRoles << IsFullScreen << IsMaximized << IsMinimized << IsKeepAbove << IsKeepBelow		516987	0		<<			
ANR	517104	Identifier	changedRoles		516987	0					
ANR	517105	ShiftExpression	IsFullScreen << IsMaximized << IsMinimized << IsKeepAbove << IsKeepBelow		516987	1		<<			
ANR	517106	Identifier	IsFullScreen		516987	0					
ANR	517107	ShiftExpression	IsMaximized << IsMinimized << IsKeepAbove << IsKeepBelow		516987	1		<<			
ANR	517108	Identifier	IsMaximized		516987	0					
ANR	517109	ShiftExpression	IsMinimized << IsKeepAbove << IsKeepBelow		516987	1		<<			
ANR	517110	Identifier	IsMinimized		516987	0					
ANR	517111	ShiftExpression	IsKeepAbove << IsKeepBelow		516987	1		<<			
ANR	517112	Identifier	IsKeepAbove		516987	0					
ANR	517113	Identifier	IsKeepBelow		516987	1					
ANR	517114	ExpressionStatement	changedRoles << IsShaded << IsDemandingAttention << SkipTaskbar << SkipPager	344:8:12362:12438	516987	2	True				
ANR	517115	ShiftExpression	changedRoles << IsShaded << IsDemandingAttention << SkipTaskbar << SkipPager		516987	0		<<			
ANR	517116	Identifier	changedRoles		516987	0					
ANR	517117	ShiftExpression	IsShaded << IsDemandingAttention << SkipTaskbar << SkipPager		516987	1		<<			
ANR	517118	Identifier	IsShaded		516987	0					
ANR	517119	ShiftExpression	IsDemandingAttention << SkipTaskbar << SkipPager		516987	1		<<			
ANR	517120	Identifier	IsDemandingAttention		516987	0					
ANR	517121	ShiftExpression	SkipTaskbar << SkipPager		516987	1		<<			
ANR	517122	Identifier	SkipTaskbar		516987	0					
ANR	517123	Identifier	SkipPager		516987	1					
ANR	517124	IfStatement	if ( properties & NET :: WMWindowType )		516987	7					
ANR	517125	Condition	properties & NET :: WMWindowType	347:8:12455:12484	516987	0	True				
ANR	517126	BitAndExpression	properties & NET :: WMWindowType		516987	0		&			
ANR	517127	Identifier	properties		516987	0					
ANR	517128	Identifier	NET :: WMWindowType		516987	1					
ANR	517129	CompoundStatement		33:40:1294:1294	516987	1					
ANR	517130	ExpressionStatement	wipeInfoCache = true	348:8:12497:12517	516987	0	True				
ANR	517131	AssignmentExpression	wipeInfoCache = true		516987	0		=			
ANR	517132	Identifier	wipeInfoCache		516987	0					
ANR	517133	Identifier	true		516987	1					
ANR	517134	ExpressionStatement	changedRoles << SkipTaskbar	349:8:12527:12554	516987	1	True				
ANR	517135	ShiftExpression	changedRoles << SkipTaskbar		516987	0		<<			
ANR	517136	Identifier	changedRoles		516987	0					
ANR	517137	Identifier	SkipTaskbar		516987	1					
ANR	517138	IfStatement	if ( properties2 & NET :: WM2AllowedActions )		516987	8					
ANR	517139	Condition	properties2 & NET :: WM2AllowedActions	352:8:12571:12606	516987	0	True				
ANR	517140	BitAndExpression	properties2 & NET :: WM2AllowedActions		516987	0		&			
ANR	517141	Identifier	properties2		516987	0					
ANR	517142	Identifier	NET :: WM2AllowedActions		516987	1					
ANR	517143	CompoundStatement		38:46:1416:1416	516987	1					
ANR	517144	ExpressionStatement	wipeInfoCache = true	353:8:12619:12639	516987	0	True				
ANR	517145	AssignmentExpression	wipeInfoCache = true		516987	0		=			
ANR	517146	Identifier	wipeInfoCache		516987	0					
ANR	517147	Identifier	true		516987	1					
ANR	517148	ExpressionStatement	changedRoles << IsClosable << IsMovable << IsResizable << IsMaximizable << IsMinimizable	354:8:12649:12737	516987	1	True				
ANR	517149	ShiftExpression	changedRoles << IsClosable << IsMovable << IsResizable << IsMaximizable << IsMinimizable		516987	0		<<			
ANR	517150	Identifier	changedRoles		516987	0					
ANR	517151	ShiftExpression	IsClosable << IsMovable << IsResizable << IsMaximizable << IsMinimizable		516987	1		<<			
ANR	517152	Identifier	IsClosable		516987	0					
ANR	517153	ShiftExpression	IsMovable << IsResizable << IsMaximizable << IsMinimizable		516987	1		<<			
ANR	517154	Identifier	IsMovable		516987	0					
ANR	517155	ShiftExpression	IsResizable << IsMaximizable << IsMinimizable		516987	1		<<			
ANR	517156	Identifier	IsResizable		516987	0					
ANR	517157	ShiftExpression	IsMaximizable << IsMinimizable		516987	1		<<			
ANR	517158	Identifier	IsMaximizable		516987	0					
ANR	517159	Identifier	IsMinimizable		516987	1					
ANR	517160	ExpressionStatement	changedRoles << IsFullScreenable << IsShadeable << IsVirtualDesktopChangeable	355:8:12747:12824	516987	2	True				
ANR	517161	ShiftExpression	changedRoles << IsFullScreenable << IsShadeable << IsVirtualDesktopChangeable		516987	0		<<			
ANR	517162	Identifier	changedRoles		516987	0					
ANR	517163	ShiftExpression	IsFullScreenable << IsShadeable << IsVirtualDesktopChangeable		516987	1		<<			
ANR	517164	Identifier	IsFullScreenable		516987	0					
ANR	517165	ShiftExpression	IsShadeable << IsVirtualDesktopChangeable		516987	1		<<			
ANR	517166	Identifier	IsShadeable		516987	0					
ANR	517167	Identifier	IsVirtualDesktopChangeable		516987	1					
ANR	517168	IfStatement	if ( properties & NET :: WMDesktop )		516987	9					
ANR	517169	Condition	properties & NET :: WMDesktop	358:8:12841:12867	516987	0	True				
ANR	517170	BitAndExpression	properties & NET :: WMDesktop		516987	0		&			
ANR	517171	Identifier	properties		516987	0					
ANR	517172	Identifier	NET :: WMDesktop		516987	1					
ANR	517173	CompoundStatement		44:37:1677:1677	516987	1					
ANR	517174	ExpressionStatement	wipeInfoCache = true	359:8:12880:12900	516987	0	True				
ANR	517175	AssignmentExpression	wipeInfoCache = true		516987	0		=			
ANR	517176	Identifier	wipeInfoCache		516987	0					
ANR	517177	Identifier	true		516987	1					
ANR	517178	ExpressionStatement	changedRoles << VirtualDesktop << IsOnAllVirtualDesktops	360:8:12910:12966	516987	1	True				
ANR	517179	ShiftExpression	changedRoles << VirtualDesktop << IsOnAllVirtualDesktops		516987	0		<<			
ANR	517180	Identifier	changedRoles		516987	0					
ANR	517181	ShiftExpression	VirtualDesktop << IsOnAllVirtualDesktops		516987	1		<<			
ANR	517182	Identifier	VirtualDesktop		516987	0					
ANR	517183	Identifier	IsOnAllVirtualDesktops		516987	1					
ANR	517184	IfStatement	if ( properties & NET :: WMGeometry )		516987	10					
ANR	517185	Condition	properties & NET :: WMGeometry	363:8:12983:13010	516987	0	True				
ANR	517186	BitAndExpression	properties & NET :: WMGeometry		516987	0		&			
ANR	517187	Identifier	properties		516987	0					
ANR	517188	Identifier	NET :: WMGeometry		516987	1					
ANR	517189	CompoundStatement		49:38:1820:1820	516987	1					
ANR	517190	ExpressionStatement	wipeInfoCache = true	364:8:13023:13043	516987	0	True				
ANR	517191	AssignmentExpression	wipeInfoCache = true		516987	0		=			
ANR	517192	Identifier	wipeInfoCache		516987	0					
ANR	517193	Identifier	true		516987	1					
ANR	517194	ExpressionStatement	changedRoles << Geometry << ScreenGeometry	365:8:13053:13095	516987	1	True				
ANR	517195	ShiftExpression	changedRoles << Geometry << ScreenGeometry		516987	0		<<			
ANR	517196	Identifier	changedRoles		516987	0					
ANR	517197	ShiftExpression	Geometry << ScreenGeometry		516987	1		<<			
ANR	517198	Identifier	Geometry		516987	0					
ANR	517199	Identifier	ScreenGeometry		516987	1					
ANR	517200	IfStatement	if ( properties2 & NET :: WM2Activities )		516987	11					
ANR	517201	Condition	properties2 & NET :: WM2Activities	368:8:13112:13143	516987	0	True				
ANR	517202	BitAndExpression	properties2 & NET :: WM2Activities		516987	0		&			
ANR	517203	Identifier	properties2		516987	0					
ANR	517204	Identifier	NET :: WM2Activities		516987	1					
ANR	517205	CompoundStatement		54:42:1953:1953	516987	1					
ANR	517206	ExpressionStatement	changedRoles << Activities	369:8:13156:13182	516987	0	True				
ANR	517207	ShiftExpression	changedRoles << Activities		516987	0		<<			
ANR	517208	Identifier	changedRoles		516987	0					
ANR	517209	Identifier	Activities		516987	1					
ANR	517210	IfStatement	if ( wipeInfoCache )		516987	12					
ANR	517211	Condition	wipeInfoCache	372:8:13199:13211	516987	0	True				
ANR	517212	Identifier	wipeInfoCache		516987	0					
ANR	517213	CompoundStatement		58:23:2021:2021	516987	1					
ANR	517214	Statement	delete	373:8:13224:13229	516987	0	True				
ANR	517215	ExpressionStatement	windowInfoCache . take ( window )	373:15:13231:13259	516987	1	True				
ANR	517216	CallExpression	windowInfoCache . take ( window )		516987	0					
ANR	517217	Callee	windowInfoCache . take		516987	0					
ANR	517218	MemberAccess	windowInfoCache . take		516987	0					
ANR	517219	Identifier	windowInfoCache		516987	0					
ANR	517220	Identifier	take		516987	1					
ANR	517221	ArgumentList	window		516987	1					
ANR	517222	Argument	window		516987	0					
ANR	517223	Identifier	window		516987	0					
ANR	517224	IfStatement	if ( wipeAppDataCache )		516987	13					
ANR	517225	Condition	wipeAppDataCache	376:8:13276:13291	516987	0	True				
ANR	517226	Identifier	wipeAppDataCache		516987	0					
ANR	517227	CompoundStatement		62:26:2101:2101	516987	1					
ANR	517228	ExpressionStatement	appDataCache . remove ( window )	377:8:13304:13331	516987	0	True				
ANR	517229	CallExpression	appDataCache . remove ( window )		516987	0					
ANR	517230	Callee	appDataCache . remove		516987	0					
ANR	517231	MemberAccess	appDataCache . remove		516987	0					
ANR	517232	Identifier	appDataCache		516987	0					
ANR	517233	Identifier	remove		516987	1					
ANR	517234	ArgumentList	window		516987	1					
ANR	517235	Argument	window		516987	0					
ANR	517236	Identifier	window		516987	0					
ANR	517237	IfStatement	if ( ! changedRoles . isEmpty ( ) )		516987	14					
ANR	517238	Condition	! changedRoles . isEmpty ( )	380:8:13348:13370	516987	0	True				
ANR	517239	UnaryOperationExpression	! changedRoles . isEmpty ( )		516987	0					
ANR	517240	UnaryOperator	!		516987	0					
ANR	517241	CallExpression	changedRoles . isEmpty ( )		516987	1					
ANR	517242	Callee	changedRoles . isEmpty		516987	0					
ANR	517243	MemberAccess	changedRoles . isEmpty		516987	0					
ANR	517244	Identifier	changedRoles		516987	0					
ANR	517245	Identifier	isEmpty		516987	1					
ANR	517246	ArgumentList			516987	1					
ANR	517247	CompoundStatement		66:33:2180:2180	516987	1					
ANR	517248	ExpressionStatement	"dataChanged ( window , changedRoles )"	381:8:13383:13416	516987	0	True				
ANR	517249	CallExpression	"dataChanged ( window , changedRoles )"		516987	0					
ANR	517250	Callee	dataChanged		516987	0					
ANR	517251	Identifier	dataChanged		516987	0					
ANR	517252	ArgumentList	window		516987	1					
ANR	517253	Argument	window		516987	0					
ANR	517254	Identifier	window		516987	0					
ANR	517255	Argument	changedRoles		516987	1					
ANR	517256	Identifier	changedRoles		516987	0					
ANR	517257	ReturnType	void		516987	1					
ANR	517258	Identifier	XWindowTasksModel :: Private :: windowChanged		516987	2					
ANR	517259	ParameterList	"WId window , NET :: Properties properties , NET :: Properties2 properties2"		516987	3					
ANR	517260	Parameter	WId window	314:47:11122:11131	516987	0	True				
ANR	517261	ParameterType	WId		516987	0					
ANR	517262	Identifier	window		516987	1					
ANR	517263	Parameter	NET :: Properties properties	314:59:11134:11159	516987	1	True				
ANR	517264	ParameterType	NET :: Properties		516987	0					
ANR	517265	Identifier	properties		516987	1					
ANR	517266	Parameter	NET :: Properties2 properties2	314:87:11162:11189	516987	2	True				
ANR	517267	ParameterType	NET :: Properties2		516987	0					
ANR	517268	Identifier	properties2		516987	1					
ANR	517269	CFGEntryNode	ENTRY		516987		True				
ANR	517270	CFGExitNode	EXIT		516987		True				
ANR	517271	Symbol	NET :: WMIcon		516987						
ANR	517272	Symbol	NET :: WMState		516987						
ANR	517273	Symbol	NET :: WM2AllowedActions		516987						
ANR	517274	Symbol	changedRoles		516987						
ANR	517275	Symbol	changedRoles . contains		516987						
ANR	517276	Symbol	NET :: WM2Activities		516987						
ANR	517277	Symbol	NET :: WMName		516987						
ANR	517278	Symbol	NET :: WMGeometry		516987						
ANR	517279	Symbol	windowInfoCache		516987						
ANR	517280	Symbol	NET :: WMPid		516987						
ANR	517281	Symbol	transients		516987						
ANR	517282	Symbol	NET :: WM2WindowClass		516987						
ANR	517283	Symbol	NET :: XAWMState		516987						
ANR	517284	Symbol	appDataCache		516987						
ANR	517285	Symbol	Qt :: DecorationRole		516987						
ANR	517286	Symbol	transients . contains		516987						
ANR	517287	Symbol	false		516987						
ANR	517288	Symbol	changedRoles . isEmpty		516987						
ANR	517289	Symbol	NET :: WMWindowType		516987						
ANR	517290	Symbol	NET :: WMDesktop		516987						
ANR	517291	Symbol	true		516987						
ANR	517292	Symbol	wipeInfoCache		516987						
ANR	517293	Symbol	wipeAppDataCache		516987						
ANR	517294	Symbol	window		516987						
ANR	517295	Symbol	properties2		516987						
ANR	517296	Symbol	NET :: WMVisibleName		516987						
ANR	517297	Symbol	properties		516987						
ANR	517298	Function	XWindowTasksModel :: Private :: dataChanged	385:0:13427:13676							
ANR	517299	FunctionDef	"XWindowTasksModel :: Private :: dataChanged (WId window , const QVector < int > & roles)"		517298	0					
ANR	517300	CompoundStatement		386:0:13511:13676	517298	0					
ANR	517301	IdentifierDeclStatement	const int i = windows . indexOf ( window ) ;	387:4:13517:13554	517298	0	True				
ANR	517302	IdentifierDecl	i = windows . indexOf ( window )		517298	0					
ANR	517303	IdentifierDeclType	const int		517298	0					
ANR	517304	Identifier	i		517298	1					
ANR	517305	AssignmentExpression	i = windows . indexOf ( window )		517298	2		=			
ANR	517306	Identifier	i		517298	0					
ANR	517307	CallExpression	windows . indexOf ( window )		517298	1					
ANR	517308	Callee	windows . indexOf		517298	0					
ANR	517309	MemberAccess	windows . indexOf		517298	0					
ANR	517310	Identifier	windows		517298	0					
ANR	517311	Identifier	indexOf		517298	1					
ANR	517312	ArgumentList	window		517298	1					
ANR	517313	Argument	window		517298	0					
ANR	517314	Identifier	window		517298	0					
ANR	517315	IfStatement	if ( i == - 1 )		517298	1					
ANR	517316	Condition	i == - 1	389:8:13565:13571	517298	0	True				
ANR	517317	EqualityExpression	i == - 1		517298	0		==			
ANR	517318	Identifier	i		517298	0					
ANR	517319	UnaryOperationExpression	- 1		517298	1					
ANR	517320	UnaryOperator	-		517298	0					
ANR	517321	PrimaryExpression	1		517298	1					
ANR	517322	CompoundStatement		4:17:62:62	517298	1					
ANR	517323	ReturnStatement	return ;	390:8:13584:13590	517298	0	True				
ANR	517324	IdentifierDeclStatement	QModelIndex idx = q -> index ( i ) ;	393:4:13603:13632	517298	2	True				
ANR	517325	IdentifierDecl	idx = q -> index ( i )		517298	0					
ANR	517326	IdentifierDeclType	QModelIndex		517298	0					
ANR	517327	Identifier	idx		517298	1					
ANR	517328	AssignmentExpression	idx = q -> index ( i )		517298	2		=			
ANR	517329	Identifier	idx		517298	0					
ANR	517330	CallExpression	q -> index ( i )		517298	1					
ANR	517331	Callee	q -> index		517298	0					
ANR	517332	PtrMemberAccess	q -> index		517298	0					
ANR	517333	Identifier	q		517298	0					
ANR	517334	Identifier	index		517298	1					
ANR	517335	ArgumentList	i		517298	1					
ANR	517336	Argument	i		517298	0					
ANR	517337	Identifier	i		517298	0					
ANR	517338	Statement	emit	394:4:13638:13641	517298	3	True				
ANR	517339	ExpressionStatement	"q -> dataChanged ( idx , idx , roles )"	394:9:13643:13674	517298	4	True				
ANR	517340	CallExpression	"q -> dataChanged ( idx , idx , roles )"		517298	0					
ANR	517341	Callee	q -> dataChanged		517298	0					
ANR	517342	PtrMemberAccess	q -> dataChanged		517298	0					
ANR	517343	Identifier	q		517298	0					
ANR	517344	Identifier	dataChanged		517298	1					
ANR	517345	ArgumentList	idx		517298	1					
ANR	517346	Argument	idx		517298	0					
ANR	517347	Identifier	idx		517298	0					
ANR	517348	Argument	idx		517298	1					
ANR	517349	Identifier	idx		517298	0					
ANR	517350	Argument	roles		517298	2					
ANR	517351	Identifier	roles		517298	0					
ANR	517352	ReturnType	void		517298	1					
ANR	517353	Identifier	XWindowTasksModel :: Private :: dataChanged		517298	2					
ANR	517354	ParameterList	"WId window , const QVector < int > & roles"		517298	3					
ANR	517355	Parameter	WId window	385:45:13472:13481	517298	0	True				
ANR	517356	ParameterType	WId		517298	0					
ANR	517357	Identifier	window		517298	1					
ANR	517358	Parameter	const QVector < int > & roles	385:57:13484:13508	517298	1	True				
ANR	517359	ParameterType	const QVector < int > &		517298	0					
ANR	517360	Identifier	roles		517298	1					
ANR	517361	CFGEntryNode	ENTRY		517298		True				
ANR	517362	CFGExitNode	EXIT		517298		True				
ANR	517363	Symbol	q		517298						
ANR	517364	Symbol	windows . indexOf		517298						
ANR	517365	Symbol	q -> index		517298						
ANR	517366	Symbol	roles		517298						
ANR	517367	Symbol	i		517298						
ANR	517368	Symbol	window		517298						
ANR	517369	Symbol	* q		517298						
ANR	517370	Symbol	windows		517298						
ANR	517371	Symbol	idx		517298						
ANR	517372	Function	XWindowTasksModel :: Private :: windowInfo	397:0:13679:13995							
ANR	517373	FunctionDef	XWindowTasksModel :: Private :: windowInfo (WId window)		517372	0					
ANR	517374	CompoundStatement		398:0:13743:13995	517372	0					
ANR	517375	IfStatement	if ( ! windowInfoCache . contains ( window ) )		517372	0					
ANR	517376	Condition	! windowInfoCache . contains ( window )	399:8:13753:13785	517372	0	True				
ANR	517377	UnaryOperationExpression	! windowInfoCache . contains ( window )		517372	0					
ANR	517378	UnaryOperator	!		517372	0					
ANR	517379	CallExpression	windowInfoCache . contains ( window )		517372	1					
ANR	517380	Callee	windowInfoCache . contains		517372	0					
ANR	517381	MemberAccess	windowInfoCache . contains		517372	0					
ANR	517382	Identifier	windowInfoCache		517372	0					
ANR	517383	Identifier	contains		517372	1					
ANR	517384	ArgumentList	window		517372	1					
ANR	517385	Argument	window		517372	0					
ANR	517386	Identifier	window		517372	0					
ANR	517387	CompoundStatement		3:8:54:132	517372	1					
ANR	517388	IdentifierDeclStatement	"KWindowInfo * info = new KWindowInfo ( window , windowInfoFlags , windowInfoFlags2 ) ;"	400:8:13798:13876	517372	0	True				
ANR	517389	IdentifierDecl	"* info = new KWindowInfo ( window , windowInfoFlags , windowInfoFlags2 )"		517372	0					
ANR	517390	IdentifierDeclType	KWindowInfo *		517372	0					
ANR	517391	Identifier	info		517372	1					
ANR	517392	AssignmentExpression	"* info = new KWindowInfo ( window , windowInfoFlags , windowInfoFlags2 )"		517372	2		=			
ANR	517393	Identifier	info		517372	0					
ANR	517394	Expression	"window , windowInfoFlags , windowInfoFlags2"		517372	1					
ANR	517395	Identifier	window		517372	0					
ANR	517396	Expression	"windowInfoFlags , windowInfoFlags2"		517372	1					
ANR	517397	Identifier	windowInfoFlags		517372	0					
ANR	517398	Identifier	windowInfoFlags2		517372	1					
ANR	517399	ExpressionStatement	"windowInfoCache . insert ( window , info )"	401:8:13886:13922	517372	1	True				
ANR	517400	CallExpression	"windowInfoCache . insert ( window , info )"		517372	0					
ANR	517401	Callee	windowInfoCache . insert		517372	0					
ANR	517402	MemberAccess	windowInfoCache . insert		517372	0					
ANR	517403	Identifier	windowInfoCache		517372	0					
ANR	517404	Identifier	insert		517372	1					
ANR	517405	ArgumentList	window		517372	1					
ANR	517406	Argument	window		517372	0					
ANR	517407	Identifier	window		517372	0					
ANR	517408	Argument	info		517372	1					
ANR	517409	Identifier	info		517372	0					
ANR	517410	ReturnStatement	return info ;	403:8:13933:13944	517372	2	True				
ANR	517411	Identifier	info		517372	0					
ANR	517412	ReturnStatement	return windowInfoCache . value ( window ) ;	406:4:13957:13993	517372	1	True				
ANR	517413	CallExpression	windowInfoCache . value ( window )		517372	0					
ANR	517414	Callee	windowInfoCache . value		517372	0					
ANR	517415	MemberAccess	windowInfoCache . value		517372	0					
ANR	517416	Identifier	windowInfoCache		517372	0					
ANR	517417	Identifier	value		517372	1					
ANR	517418	ArgumentList	window		517372	1					
ANR	517419	Argument	window		517372	0					
ANR	517420	Identifier	window		517372	0					
ANR	517421	ReturnType	KWindowInfo *		517372	1					
ANR	517422	Identifier	XWindowTasksModel :: Private :: windowInfo		517372	2					
ANR	517423	ParameterList	WId window		517372	3					
ANR	517424	Parameter	WId window	397:52:13731:13740	517372	0	True				
ANR	517425	ParameterType	WId		517372	0					
ANR	517426	Identifier	window		517372	1					
ANR	517427	CFGEntryNode	ENTRY		517372		True				
ANR	517428	CFGExitNode	EXIT		517372		True				
ANR	517429	Symbol	windowInfoFlags		517372						
ANR	517430	Symbol	windowInfoCache		517372						
ANR	517431	Symbol	windowInfoCache . value		517372						
ANR	517432	Symbol	windowInfoCache . contains		517372						
ANR	517433	Symbol	window		517372						
ANR	517434	Symbol	windowInfoFlags2		517372						
ANR	517435	Symbol	info		517372						
ANR	517436	Function	XWindowTasksModel :: Private :: appData	409:0:13998:14807							
ANR	517437	FunctionDef	XWindowTasksModel :: Private :: appData (WId window)		517436	0					
ANR	517438	CompoundStatement		410:0:14054:14807	517436	0					
ANR	517439	IfStatement	if ( ! appDataCache . contains ( window ) )		517436	0					
ANR	517440	Condition	! appDataCache . contains ( window )	411:8:14064:14093	517436	0	True				
ANR	517441	UnaryOperationExpression	! appDataCache . contains ( window )		517436	0					
ANR	517442	UnaryOperator	!		517436	0					
ANR	517443	CallExpression	appDataCache . contains ( window )		517436	1					
ANR	517444	Callee	appDataCache . contains		517436	0					
ANR	517445	MemberAccess	appDataCache . contains		517436	0					
ANR	517446	Identifier	appDataCache		517436	0					
ANR	517447	Identifier	contains		517436	1					
ANR	517448	ArgumentList	window		517436	1					
ANR	517449	Argument	window		517436	0					
ANR	517450	Identifier	window		517436	0					
ANR	517451	CompoundStatement		3:8:51:106	517436	1					
ANR	517452	IdentifierDeclStatement	const AppData & data = appDataFromUrl ( windowUrl ( window ) ) ;	412:8:14106:14161	517436	0	True				
ANR	517453	IdentifierDecl	& data = appDataFromUrl ( windowUrl ( window ) )		517436	0					
ANR	517454	IdentifierDeclType	const AppData &		517436	0					
ANR	517455	Identifier	data		517436	1					
ANR	517456	AssignmentExpression	& data = appDataFromUrl ( windowUrl ( window ) )		517436	2		=			
ANR	517457	Identifier	data		517436	0					
ANR	517458	CallExpression	appDataFromUrl ( windowUrl ( window ) )		517436	1					
ANR	517459	Callee	appDataFromUrl		517436	0					
ANR	517460	Identifier	appDataFromUrl		517436	0					
ANR	517461	ArgumentList	windowUrl ( window )		517436	1					
ANR	517462	Argument	windowUrl ( window )		517436	0					
ANR	517463	CallExpression	windowUrl ( window )		517436	0					
ANR	517464	Callee	windowUrl		517436	0					
ANR	517465	Identifier	windowUrl		517436	0					
ANR	517466	ArgumentList	window		517436	1					
ANR	517467	Argument	window		517436	0					
ANR	517468	Identifier	window		517436	0					
ANR	517469	IfStatement	if ( data . id . isEmpty ( ) && data . url . isEmpty ( ) )		517436	1					
ANR	517470	Condition	data . id . isEmpty ( ) && data . url . isEmpty ( )	418:12:14456:14494	517436	0	True				
ANR	517471	AndExpression	data . id . isEmpty ( ) && data . url . isEmpty ( )		517436	0		&&			
ANR	517472	CallExpression	data . id . isEmpty ( )		517436	0					
ANR	517473	Callee	data . id . isEmpty		517436	0					
ANR	517474	MemberAccess	data . id . isEmpty		517436	0					
ANR	517475	MemberAccess	data . id		517436	0					
ANR	517476	Identifier	data		517436	0					
ANR	517477	Identifier	id		517436	1					
ANR	517478	Identifier	isEmpty		517436	1					
ANR	517479	ArgumentList			517436	1					
ANR	517480	CallExpression	data . url . isEmpty ( )		517436	1					
ANR	517481	Callee	data . url . isEmpty		517436	0					
ANR	517482	MemberAccess	data . url . isEmpty		517436	0					
ANR	517483	MemberAccess	data . url		517436	0					
ANR	517484	Identifier	data		517436	0					
ANR	517485	Identifier	url		517436	1					
ANR	517486	Identifier	isEmpty		517436	1					
ANR	517487	ArgumentList			517436	1					
ANR	517488	CompoundStatement		10:12:456:479	517436	1					
ANR	517489	IdentifierDeclStatement	AppData dataCopy = data ;	419:12:14511:14534	517436	0	True				
ANR	517490	IdentifierDecl	dataCopy = data		517436	0					
ANR	517491	IdentifierDeclType	AppData		517436	0					
ANR	517492	Identifier	dataCopy		517436	1					
ANR	517493	AssignmentExpression	dataCopy = data		517436	2		=			
ANR	517494	Identifier	data		517436	0					
ANR	517495	Identifier	data		517436	1					
ANR	517496	ExpressionStatement	dataCopy . id = windowInfo ( window ) -> windowClassClass ( )	421:12:14549:14601	517436	1	True				
ANR	517497	AssignmentExpression	dataCopy . id = windowInfo ( window ) -> windowClassClass ( )		517436	0		=			
ANR	517498	MemberAccess	dataCopy . id		517436	0					
ANR	517499	Identifier	dataCopy		517436	0					
ANR	517500	Identifier	id		517436	1					
ANR	517501	CallExpression	windowInfo ( window ) -> windowClassClass ( )		517436	1					
ANR	517502	Callee	windowInfo ( window ) -> windowClassClass		517436	0					
ANR	517503	PtrMemberAccess	windowInfo ( window ) -> windowClassClass		517436	0					
ANR	517504	CallExpression	windowInfo ( window )		517436	0					
ANR	517505	Callee	windowInfo		517436	0					
ANR	517506	Identifier	windowInfo		517436	0					
ANR	517507	ArgumentList	window		517436	1					
ANR	517508	Argument	window		517436	0					
ANR	517509	Identifier	window		517436	0					
ANR	517510	Identifier	windowClassClass		517436	1					
ANR	517511	ArgumentList			517436	1					
ANR	517512	ExpressionStatement	"appDataCache . insert ( window , dataCopy )"	423:12:14616:14653	517436	2	True				
ANR	517513	CallExpression	"appDataCache . insert ( window , dataCopy )"		517436	0					
ANR	517514	Callee	appDataCache . insert		517436	0					
ANR	517515	MemberAccess	appDataCache . insert		517436	0					
ANR	517516	Identifier	appDataCache		517436	0					
ANR	517517	Identifier	insert		517436	1					
ANR	517518	ArgumentList	window		517436	1					
ANR	517519	Argument	window		517436	0					
ANR	517520	Identifier	window		517436	0					
ANR	517521	Argument	dataCopy		517436	1					
ANR	517522	Identifier	dataCopy		517436	0					
ANR	517523	ReturnStatement	return dataCopy ;	425:12:14668:14683	517436	3	True				
ANR	517524	Identifier	dataCopy		517436	0					
ANR	517525	ExpressionStatement	"appDataCache . insert ( window , data )"	428:8:14704:14737	517436	2	True				
ANR	517526	CallExpression	"appDataCache . insert ( window , data )"		517436	0					
ANR	517527	Callee	appDataCache . insert		517436	0					
ANR	517528	MemberAccess	appDataCache . insert		517436	0					
ANR	517529	Identifier	appDataCache		517436	0					
ANR	517530	Identifier	insert		517436	1					
ANR	517531	ArgumentList	window		517436	1					
ANR	517532	Argument	window		517436	0					
ANR	517533	Identifier	window		517436	0					
ANR	517534	Argument	data		517436	1					
ANR	517535	Identifier	data		517436	0					
ANR	517536	ReturnStatement	return data ;	430:8:14748:14759	517436	3	True				
ANR	517537	Identifier	data		517436	0					
ANR	517538	ReturnStatement	return appDataCache . value ( window ) ;	433:4:14772:14805	517436	1	True				
ANR	517539	CallExpression	appDataCache . value ( window )		517436	0					
ANR	517540	Callee	appDataCache . value		517436	0					
ANR	517541	MemberAccess	appDataCache . value		517436	0					
ANR	517542	Identifier	appDataCache		517436	0					
ANR	517543	Identifier	value		517436	1					
ANR	517544	ArgumentList	window		517436	1					
ANR	517545	Argument	window		517436	0					
ANR	517546	Identifier	window		517436	0					
ANR	517547	ReturnType	AppData		517436	1					
ANR	517548	Identifier	XWindowTasksModel :: Private :: appData		517436	2					
ANR	517549	ParameterList	WId window		517436	3					
ANR	517550	Parameter	WId window	409:44:14042:14051	517436	0	True				
ANR	517551	ParameterType	WId		517436	0					
ANR	517552	Identifier	window		517436	1					
ANR	517553	CFGEntryNode	ENTRY		517436		True				
ANR	517554	CFGExitNode	EXIT		517436		True				
ANR	517555	Symbol	appDataCache . value		517436						
ANR	517556	Symbol	windowInfo		517436						
ANR	517557	Symbol	appDataCache		517436						
ANR	517558	Symbol	data		517436						
ANR	517559	Symbol	dataCopy		517436						
ANR	517560	Symbol	dataCopy . id		517436						
ANR	517561	Symbol	data . id . isEmpty		517436						
ANR	517562	Symbol	* windowInfo		517436						
ANR	517563	Symbol	windowUrl		517436						
ANR	517564	Symbol	data . url		517436						
ANR	517565	Symbol	windowInfo ( window ) -> windowClassClass		517436						
ANR	517566	Symbol	window		517436						
ANR	517567	Symbol	data . url . isEmpty		517436						
ANR	517568	Symbol	appDataFromUrl		517436						
ANR	517569	Symbol	data . id		517436						
ANR	517570	Symbol	appDataCache . contains		517436						
ANR	517571	Function	XWindowTasksModel :: Private :: icon	436:0:14810:15433							
ANR	517572	FunctionDef	XWindowTasksModel :: Private :: icon (WId window)		517571	0					
ANR	517573	CompoundStatement		437:0:14861:15433	517571	0					
ANR	517574	IdentifierDeclStatement	const AppData & app = appData ( window ) ;	438:4:14867:14903	517571	0	True				
ANR	517575	IdentifierDecl	& app = appData ( window )		517571	0					
ANR	517576	IdentifierDeclType	const AppData &		517571	0					
ANR	517577	Identifier	app		517571	1					
ANR	517578	AssignmentExpression	& app = appData ( window )		517571	2		=			
ANR	517579	Identifier	app		517571	0					
ANR	517580	CallExpression	appData ( window )		517571	1					
ANR	517581	Callee	appData		517571	0					
ANR	517582	Identifier	appData		517571	0					
ANR	517583	ArgumentList	window		517571	1					
ANR	517584	Argument	window		517571	0					
ANR	517585	Identifier	window		517571	0					
ANR	517586	IfStatement	if ( ! app . icon . isNull ( ) )		517571	1					
ANR	517587	Condition	! app . icon . isNull ( )	440:8:14914:14931	517571	0	True				
ANR	517588	UnaryOperationExpression	! app . icon . isNull ( )		517571	0					
ANR	517589	UnaryOperator	!		517571	0					
ANR	517590	CallExpression	app . icon . isNull ( )		517571	1					
ANR	517591	Callee	app . icon . isNull		517571	0					
ANR	517592	MemberAccess	app . icon . isNull		517571	0					
ANR	517593	MemberAccess	app . icon		517571	0					
ANR	517594	Identifier	app		517571	0					
ANR	517595	Identifier	icon		517571	1					
ANR	517596	Identifier	isNull		517571	1					
ANR	517597	ArgumentList			517571	1					
ANR	517598	CompoundStatement		4:28:72:72	517571	1					
ANR	517599	ReturnStatement	return app . icon ;	441:8:14944:14959	517571	0	True				
ANR	517600	MemberAccess	app . icon		517571	0					
ANR	517601	Identifier	app		517571	0					
ANR	517602	Identifier	icon		517571	1					
ANR	517603	IdentifierDeclStatement	QIcon icon ;	444:4:14972:14982	517571	2	True				
ANR	517604	IdentifierDecl	icon		517571	0					
ANR	517605	IdentifierDeclType	QIcon		517571	0					
ANR	517606	Identifier	icon		517571	1					
ANR	517607	ExpressionStatement	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeSmall , KIconLoader :: SizeSmall , false ) )"	446:4:14989:15087	517571	3	True				
ANR	517608	CallExpression	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeSmall , KIconLoader :: SizeSmall , false ) )"		517571	0					
ANR	517609	Callee	icon . addPixmap		517571	0					
ANR	517610	MemberAccess	icon . addPixmap		517571	0					
ANR	517611	Identifier	icon		517571	0					
ANR	517612	Identifier	addPixmap		517571	1					
ANR	517613	ArgumentList	"KWindowSystem :: icon ( window , KIconLoader :: SizeSmall , KIconLoader :: SizeSmall , false )"		517571	1					
ANR	517614	Argument	"KWindowSystem :: icon ( window , KIconLoader :: SizeSmall , KIconLoader :: SizeSmall , false )"		517571	0					
ANR	517615	CallExpression	"KWindowSystem :: icon ( window , KIconLoader :: SizeSmall , KIconLoader :: SizeSmall , false )"		517571	0					
ANR	517616	Callee	KWindowSystem :: icon		517571	0					
ANR	517617	Identifier	KWindowSystem :: icon		517571	0					
ANR	517618	ArgumentList	window		517571	1					
ANR	517619	Argument	window		517571	0					
ANR	517620	Identifier	window		517571	0					
ANR	517621	Argument	KIconLoader :: SizeSmall		517571	1					
ANR	517622	Identifier	KIconLoader :: SizeSmall		517571	0					
ANR	517623	Argument	KIconLoader :: SizeSmall		517571	2					
ANR	517624	Identifier	KIconLoader :: SizeSmall		517571	0					
ANR	517625	Argument	false		517571	3					
ANR	517626	Identifier	false		517571	0					
ANR	517627	ExpressionStatement	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeSmallMedium , KIconLoader :: SizeSmallMedium , false ) )"	447:4:15093:15203	517571	4	True				
ANR	517628	CallExpression	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeSmallMedium , KIconLoader :: SizeSmallMedium , false ) )"		517571	0					
ANR	517629	Callee	icon . addPixmap		517571	0					
ANR	517630	MemberAccess	icon . addPixmap		517571	0					
ANR	517631	Identifier	icon		517571	0					
ANR	517632	Identifier	addPixmap		517571	1					
ANR	517633	ArgumentList	"KWindowSystem :: icon ( window , KIconLoader :: SizeSmallMedium , KIconLoader :: SizeSmallMedium , false )"		517571	1					
ANR	517634	Argument	"KWindowSystem :: icon ( window , KIconLoader :: SizeSmallMedium , KIconLoader :: SizeSmallMedium , false )"		517571	0					
ANR	517635	CallExpression	"KWindowSystem :: icon ( window , KIconLoader :: SizeSmallMedium , KIconLoader :: SizeSmallMedium , false )"		517571	0					
ANR	517636	Callee	KWindowSystem :: icon		517571	0					
ANR	517637	Identifier	KWindowSystem :: icon		517571	0					
ANR	517638	ArgumentList	window		517571	1					
ANR	517639	Argument	window		517571	0					
ANR	517640	Identifier	window		517571	0					
ANR	517641	Argument	KIconLoader :: SizeSmallMedium		517571	1					
ANR	517642	Identifier	KIconLoader :: SizeSmallMedium		517571	0					
ANR	517643	Argument	KIconLoader :: SizeSmallMedium		517571	2					
ANR	517644	Identifier	KIconLoader :: SizeSmallMedium		517571	0					
ANR	517645	Argument	false		517571	3					
ANR	517646	Identifier	false		517571	0					
ANR	517647	ExpressionStatement	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeMedium , KIconLoader :: SizeMedium , false ) )"	448:4:15209:15309	517571	5	True				
ANR	517648	CallExpression	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeMedium , KIconLoader :: SizeMedium , false ) )"		517571	0					
ANR	517649	Callee	icon . addPixmap		517571	0					
ANR	517650	MemberAccess	icon . addPixmap		517571	0					
ANR	517651	Identifier	icon		517571	0					
ANR	517652	Identifier	addPixmap		517571	1					
ANR	517653	ArgumentList	"KWindowSystem :: icon ( window , KIconLoader :: SizeMedium , KIconLoader :: SizeMedium , false )"		517571	1					
ANR	517654	Argument	"KWindowSystem :: icon ( window , KIconLoader :: SizeMedium , KIconLoader :: SizeMedium , false )"		517571	0					
ANR	517655	CallExpression	"KWindowSystem :: icon ( window , KIconLoader :: SizeMedium , KIconLoader :: SizeMedium , false )"		517571	0					
ANR	517656	Callee	KWindowSystem :: icon		517571	0					
ANR	517657	Identifier	KWindowSystem :: icon		517571	0					
ANR	517658	ArgumentList	window		517571	1					
ANR	517659	Argument	window		517571	0					
ANR	517660	Identifier	window		517571	0					
ANR	517661	Argument	KIconLoader :: SizeMedium		517571	1					
ANR	517662	Identifier	KIconLoader :: SizeMedium		517571	0					
ANR	517663	Argument	KIconLoader :: SizeMedium		517571	2					
ANR	517664	Identifier	KIconLoader :: SizeMedium		517571	0					
ANR	517665	Argument	false		517571	3					
ANR	517666	Identifier	false		517571	0					
ANR	517667	ExpressionStatement	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false ) )"	449:4:15315:15413	517571	6	True				
ANR	517668	CallExpression	"icon . addPixmap ( KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false ) )"		517571	0					
ANR	517669	Callee	icon . addPixmap		517571	0					
ANR	517670	MemberAccess	icon . addPixmap		517571	0					
ANR	517671	Identifier	icon		517571	0					
ANR	517672	Identifier	addPixmap		517571	1					
ANR	517673	ArgumentList	"KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false )"		517571	1					
ANR	517674	Argument	"KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false )"		517571	0					
ANR	517675	CallExpression	"KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false )"		517571	0					
ANR	517676	Callee	KWindowSystem :: icon		517571	0					
ANR	517677	Identifier	KWindowSystem :: icon		517571	0					
ANR	517678	ArgumentList	window		517571	1					
ANR	517679	Argument	window		517571	0					
ANR	517680	Identifier	window		517571	0					
ANR	517681	Argument	KIconLoader :: SizeLarge		517571	1					
ANR	517682	Identifier	KIconLoader :: SizeLarge		517571	0					
ANR	517683	Argument	KIconLoader :: SizeLarge		517571	2					
ANR	517684	Identifier	KIconLoader :: SizeLarge		517571	0					
ANR	517685	Argument	false		517571	3					
ANR	517686	Identifier	false		517571	0					
ANR	517687	ReturnStatement	return icon ;	451:4:15420:15431	517571	7	True				
ANR	517688	Identifier	icon		517571	0					
ANR	517689	ReturnType	QIcon		517571	1					
ANR	517690	Identifier	XWindowTasksModel :: Private :: icon		517571	2					
ANR	517691	ParameterList	WId window		517571	3					
ANR	517692	Parameter	WId window	436:39:14849:14858	517571	0	True				
ANR	517693	ParameterType	WId		517571	0					
ANR	517694	Identifier	window		517571	1					
ANR	517695	CFGEntryNode	ENTRY		517571		True				
ANR	517696	CFGExitNode	EXIT		517571		True				
ANR	517697	Symbol	app		517571						
ANR	517698	Symbol	KWindowSystem :: icon		517571						
ANR	517699	Symbol	app . icon . isNull		517571						
ANR	517700	Symbol	KIconLoader :: SizeSmallMedium		517571						
ANR	517701	Symbol	app . icon		517571						
ANR	517702	Symbol	icon		517571						
ANR	517703	Symbol	false		517571						
ANR	517704	Symbol	window		517571						
ANR	517705	Symbol	KIconLoader :: SizeLarge		517571						
ANR	517706	Symbol	appData		517571						
ANR	517707	Symbol	KIconLoader :: SizeMedium		517571						
ANR	517708	Symbol	KIconLoader :: SizeSmall		517571						
ANR	517709	Function	XWindowTasksModel :: Private :: mimeType	454:0:15436:15534							
ANR	517710	FunctionDef	XWindowTasksModel :: Private :: mimeType ()		517709	0					
ANR	517711	CompoundStatement		455:0:15483:15534	517709	0					
ANR	517712	ReturnStatement	"return QStringLiteral ( ""windowsystem/winid"" ) ;"	456:4:15489:15532	517709	0	True				
ANR	517713	CallExpression	"QStringLiteral ( ""windowsystem/winid"" )"		517709	0					
ANR	517714	Callee	QStringLiteral		517709	0					
ANR	517715	Identifier	QStringLiteral		517709	0					
ANR	517716	ArgumentList	"""windowsystem/winid"""		517709	1					
ANR	517717	Argument	"""windowsystem/winid"""		517709	0					
ANR	517718	PrimaryExpression	"""windowsystem/winid"""		517709	0					
ANR	517719	ReturnType	QString		517709	1					
ANR	517720	Identifier	XWindowTasksModel :: Private :: mimeType		517709	2					
ANR	517721	ParameterList			517709	3					
ANR	517722	CFGEntryNode	ENTRY		517709		True				
ANR	517723	CFGExitNode	EXIT		517709		True				
ANR	517724	Symbol	QStringLiteral		517709						
ANR	517725	Function	XWindowTasksModel :: Private :: groupMimeType	459:0:15537:15650							
ANR	517726	FunctionDef	XWindowTasksModel :: Private :: groupMimeType ()		517725	0					
ANR	517727	CompoundStatement		460:0:15589:15650	517725	0					
ANR	517728	ReturnStatement	"return QStringLiteral ( ""windowsystem/multiple-winids"" ) ;"	461:4:15595:15648	517725	0	True				
ANR	517729	CallExpression	"QStringLiteral ( ""windowsystem/multiple-winids"" )"		517725	0					
ANR	517730	Callee	QStringLiteral		517725	0					
ANR	517731	Identifier	QStringLiteral		517725	0					
ANR	517732	ArgumentList	"""windowsystem/multiple-winids"""		517725	1					
ANR	517733	Argument	"""windowsystem/multiple-winids"""		517725	0					
ANR	517734	PrimaryExpression	"""windowsystem/multiple-winids"""		517725	0					
ANR	517735	ReturnType	QString		517725	1					
ANR	517736	Identifier	XWindowTasksModel :: Private :: groupMimeType		517725	2					
ANR	517737	ParameterList			517725	3					
ANR	517738	CFGEntryNode	ENTRY		517725		True				
ANR	517739	CFGExitNode	EXIT		517725		True				
ANR	517740	Symbol	QStringLiteral		517725						
ANR	517741	Function	XWindowTasksModel :: Private :: windowUrl	464:0:15653:24315							
ANR	517742	FunctionDef	XWindowTasksModel :: Private :: windowUrl (WId window)		517741	0					
ANR	517743	CompoundStatement		465:0:15708:24315	517741	0					
ANR	517744	IdentifierDeclStatement	QUrl url ;	466:4:15714:15722	517741	0	True				
ANR	517745	IdentifierDecl	url		517741	0					
ANR	517746	IdentifierDeclType	QUrl		517741	0					
ANR	517747	Identifier	url		517741	1					
ANR	517748	IdentifierDeclStatement	const KWindowInfo * info = windowInfo ( window ) ;	468:4:15729:15773	517741	1	True				
ANR	517749	IdentifierDecl	* info = windowInfo ( window )		517741	0					
ANR	517750	IdentifierDeclType	const KWindowInfo *		517741	0					
ANR	517751	Identifier	info		517741	1					
ANR	517752	AssignmentExpression	* info = windowInfo ( window )		517741	2		=			
ANR	517753	Identifier	info		517741	0					
ANR	517754	CallExpression	windowInfo ( window )		517741	1					
ANR	517755	Callee	windowInfo		517741	0					
ANR	517756	Identifier	windowInfo		517741	0					
ANR	517757	ArgumentList	window		517741	1					
ANR	517758	Argument	window		517741	0					
ANR	517759	Identifier	window		517741	0					
ANR	517760	IdentifierDeclStatement	const QString & classClass = info -> windowClassClass ( ) ;	469:4:15779:15831	517741	2	True				
ANR	517761	IdentifierDecl	& classClass = info -> windowClassClass ( )		517741	0					
ANR	517762	IdentifierDeclType	const QString &		517741	0					
ANR	517763	Identifier	classClass		517741	1					
ANR	517764	AssignmentExpression	& classClass = info -> windowClassClass ( )		517741	2		=			
ANR	517765	Identifier	classClass		517741	0					
ANR	517766	CallExpression	info -> windowClassClass ( )		517741	1					
ANR	517767	Callee	info -> windowClassClass		517741	0					
ANR	517768	PtrMemberAccess	info -> windowClassClass		517741	0					
ANR	517769	Identifier	info		517741	0					
ANR	517770	Identifier	windowClassClass		517741	1					
ANR	517771	ArgumentList			517741	1					
ANR	517772	IdentifierDeclStatement	const QString & className = info -> windowClassName ( ) ;	470:4:15837:15887	517741	3	True				
ANR	517773	IdentifierDecl	& className = info -> windowClassName ( )		517741	0					
ANR	517774	IdentifierDeclType	const QString &		517741	0					
ANR	517775	Identifier	className		517741	1					
ANR	517776	AssignmentExpression	& className = info -> windowClassName ( )		517741	2		=			
ANR	517777	Identifier	className		517741	0					
ANR	517778	CallExpression	info -> windowClassName ( )		517741	1					
ANR	517779	Callee	info -> windowClassName		517741	0					
ANR	517780	PtrMemberAccess	info -> windowClassName		517741	0					
ANR	517781	Identifier	info		517741	0					
ANR	517782	Identifier	windowClassName		517741	1					
ANR	517783	ArgumentList			517741	1					
ANR	517784	IdentifierDeclStatement	KService :: List services ;	472:4:15894:15917	517741	4	True				
ANR	517785	IdentifierDecl	services		517741	0					
ANR	517786	IdentifierDeclType	KService :: List		517741	0					
ANR	517787	Identifier	services		517741	1					
ANR	517788	IdentifierDeclStatement	bool triedPid = false ;	473:4:15923:15944	517741	5	True				
ANR	517789	IdentifierDecl	triedPid = false		517741	0					
ANR	517790	IdentifierDeclType	bool		517741	0					
ANR	517791	Identifier	triedPid		517741	1					
ANR	517792	AssignmentExpression	triedPid = false		517741	2		=			
ANR	517793	Identifier	false		517741	0					
ANR	517794	Identifier	false		517741	1					
ANR	517795	IfStatement	if ( ! ( classClass . isEmpty ( ) && className . isEmpty ( ) ) )		517741	6					
ANR	517796	Condition	! ( classClass . isEmpty ( ) && className . isEmpty ( ) )	475:8:15955:16000	517741	0	True				
ANR	517797	UnaryOperationExpression	! ( classClass . isEmpty ( ) && className . isEmpty ( ) )		517741	0					
ANR	517798	UnaryOperator	!		517741	0					
ANR	517799	AndExpression	classClass . isEmpty ( ) && className . isEmpty ( )		517741	1		&&			
ANR	517800	CallExpression	classClass . isEmpty ( )		517741	0					
ANR	517801	Callee	classClass . isEmpty		517741	0					
ANR	517802	MemberAccess	classClass . isEmpty		517741	0					
ANR	517803	Identifier	classClass		517741	0					
ANR	517804	Identifier	isEmpty		517741	1					
ANR	517805	ArgumentList			517741	1					
ANR	517806	CallExpression	className . isEmpty ( )		517741	1					
ANR	517807	Callee	className . isEmpty		517741	0					
ANR	517808	MemberAccess	className . isEmpty		517741	0					
ANR	517809	Identifier	className		517741	0					
ANR	517810	Identifier	isEmpty		517741	1					
ANR	517811	ArgumentList			517741	1					
ANR	517812	CompoundStatement		45:8:1826:1897	517741	1					
ANR	517813	IdentifierDeclStatement	"int pid = NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid ( ) ;"	476:8:16013:16113	517741	0	True				
ANR	517814	IdentifierDecl	"pid = NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid ( )"		517741	0					
ANR	517815	IdentifierDeclType	int		517741	0					
ANR	517816	Identifier	pid		517741	1					
ANR	517817	AssignmentExpression	"pid = NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid ( )"		517741	2		=			
ANR	517818	Identifier	pid		517741	0					
ANR	517819	CallExpression	"NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid ( )"		517741	1					
ANR	517820	Callee	"NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid"		517741	0					
ANR	517821	MemberAccess	"NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid"		517741	0					
ANR	517822	CallExpression	"NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 )"		517741	0					
ANR	517823	Callee	NETWinInfo		517741	0					
ANR	517824	Identifier	NETWinInfo		517741	0					
ANR	517825	ArgumentList	QX11Info :: connection ( )		517741	1					
ANR	517826	Argument	QX11Info :: connection ( )		517741	0					
ANR	517827	CallExpression	QX11Info :: connection ( )		517741	0					
ANR	517828	Callee	QX11Info :: connection		517741	0					
ANR	517829	Identifier	QX11Info :: connection		517741	0					
ANR	517830	ArgumentList			517741	1					
ANR	517831	Argument	window		517741	1					
ANR	517832	Identifier	window		517741	0					
ANR	517833	Argument	QX11Info :: appRootWindow ( )		517741	2					
ANR	517834	CallExpression	QX11Info :: appRootWindow ( )		517741	0					
ANR	517835	Callee	QX11Info :: appRootWindow		517741	0					
ANR	517836	Identifier	QX11Info :: appRootWindow		517741	0					
ANR	517837	ArgumentList			517741	1					
ANR	517838	Argument	NET :: WMPid		517741	3					
ANR	517839	Identifier	NET :: WMPid		517741	0					
ANR	517840	Argument	0		517741	4					
ANR	517841	PrimaryExpression	0		517741	0					
ANR	517842	Identifier	pid		517741	1					
ANR	517843	ArgumentList			517741	1					
ANR	517844	IfStatement	"if ( classClass == ""kcmshell5"" )"		517741	1					
ANR	517845	Condition	"classClass == ""kcmshell5"""	482:12:16468:16492	517741	0	True				
ANR	517846	EqualityExpression	"classClass == ""kcmshell5"""		517741	0		==			
ANR	517847	Identifier	classClass		517741	0					
ANR	517848	PrimaryExpression	"""kcmshell5"""		517741	1					
ANR	517849	CompoundStatement		18:39:786:786	517741	1					
ANR	517850	ExpressionStatement	"url = serviceUrl ( pid , QStringLiteral ( ""KCModule"" ) , QStringList ( ) << QStringLiteral ( ""kdeinit5:"" ) << QStringLiteral ( ""[kdeinit]"" ) )"	483:12:16509:16635	517741	0	True				
ANR	517851	AssignmentExpression	"url = serviceUrl ( pid , QStringLiteral ( ""KCModule"" ) , QStringList ( ) << QStringLiteral ( ""kdeinit5:"" ) << QStringLiteral ( ""[kdeinit]"" ) )"		517741	0		=			
ANR	517852	Identifier	url		517741	0					
ANR	517853	CallExpression	"serviceUrl ( pid , QStringLiteral ( ""KCModule"" ) , QStringList ( ) << QStringLiteral ( ""kdeinit5:"" ) << QStringLiteral ( ""[kdeinit]"" ) )"		517741	1					
ANR	517854	Callee	serviceUrl		517741	0					
ANR	517855	Identifier	serviceUrl		517741	0					
ANR	517856	ArgumentList	pid		517741	1					
ANR	517857	Argument	pid		517741	0					
ANR	517858	Identifier	pid		517741	0					
ANR	517859	Argument	"QStringLiteral ( ""KCModule"" )"		517741	1					
ANR	517860	CallExpression	"QStringLiteral ( ""KCModule"" )"		517741	0					
ANR	517861	Callee	QStringLiteral		517741	0					
ANR	517862	Identifier	QStringLiteral		517741	0					
ANR	517863	ArgumentList	"""KCModule"""		517741	1					
ANR	517864	Argument	"""KCModule"""		517741	0					
ANR	517865	PrimaryExpression	"""KCModule"""		517741	0					
ANR	517866	Argument	"QStringList ( ) << QStringLiteral ( ""kdeinit5:"" ) << QStringLiteral ( ""[kdeinit]"" )"		517741	2					
ANR	517867	ShiftExpression	"QStringList ( ) << QStringLiteral ( ""kdeinit5:"" ) << QStringLiteral ( ""[kdeinit]"" )"		517741	0		<<			
ANR	517868	CallExpression	QStringList ( )		517741	0					
ANR	517869	Callee	QStringList		517741	0					
ANR	517870	Identifier	QStringList		517741	0					
ANR	517871	ArgumentList			517741	1					
ANR	517872	ShiftExpression	"QStringLiteral ( ""kdeinit5:"" ) << QStringLiteral ( ""[kdeinit]"" )"		517741	1		<<			
ANR	517873	CallExpression	"QStringLiteral ( ""kdeinit5:"" )"		517741	0					
ANR	517874	Callee	QStringLiteral		517741	0					
ANR	517875	Identifier	QStringLiteral		517741	0					
ANR	517876	ArgumentList	"""kdeinit5:"""		517741	1					
ANR	517877	Argument	"""kdeinit5:"""		517741	0					
ANR	517878	PrimaryExpression	"""kdeinit5:"""		517741	0					
ANR	517879	CallExpression	"QStringLiteral ( ""[kdeinit]"" )"		517741	1					
ANR	517880	Callee	QStringLiteral		517741	0					
ANR	517881	Identifier	QStringLiteral		517741	0					
ANR	517882	ArgumentList	"""[kdeinit]"""		517741	1					
ANR	517883	Argument	"""[kdeinit]"""		517741	0					
ANR	517884	PrimaryExpression	"""[kdeinit]"""		517741	0					
ANR	517885	IfStatement	if ( ! url . isEmpty ( ) )		517741	1					
ANR	517886	Condition	! url . isEmpty ( )	485:16:16654:16667	517741	0	True				
ANR	517887	UnaryOperationExpression	! url . isEmpty ( )		517741	0					
ANR	517888	UnaryOperator	!		517741	0					
ANR	517889	CallExpression	url . isEmpty ( )		517741	1					
ANR	517890	Callee	url . isEmpty		517741	0					
ANR	517891	MemberAccess	url . isEmpty		517741	0					
ANR	517892	Identifier	url		517741	0					
ANR	517893	Identifier	isEmpty		517741	1					
ANR	517894	ArgumentList			517741	1					
ANR	517895	CompoundStatement		21:32:961:961	517741	1					
ANR	517896	ReturnStatement	return url ;	486:16:16688:16698	517741	0	True				
ANR	517897	Identifier	url		517741	0					
ANR	517898	IdentifierDeclStatement	"KConfigGroup grp ( rulesConfig , ""Mapping"" ) ;"	491:8:16797:16837	517741	2	True				
ANR	517899	IdentifierDecl	"grp ( rulesConfig , ""Mapping"" )"		517741	0					
ANR	517900	IdentifierDeclType	KConfigGroup		517741	0					
ANR	517901	Identifier	grp		517741	1					
ANR	517902	Expression	"rulesConfig , ""Mapping"""		517741	2					
ANR	517903	Identifier	rulesConfig		517741	0					
ANR	517904	PrimaryExpression	"""Mapping"""		517741	1					
ANR	517905	IdentifierDeclStatement	"KConfigGroup set ( rulesConfig , ""Settings"" ) ;"	492:8:16847:16888	517741	3	True				
ANR	517906	IdentifierDecl	"set ( rulesConfig , ""Settings"" )"		517741	0					
ANR	517907	IdentifierDeclType	KConfigGroup		517741	0					
ANR	517908	Identifier	set		517741	1					
ANR	517909	Expression	"rulesConfig , ""Settings"""		517741	2					
ANR	517910	Identifier	rulesConfig		517741	0					
ANR	517911	PrimaryExpression	"""Settings"""		517741	1					
ANR	517912	IdentifierDeclStatement	"QStringList matchCommandLineFirst = set . readEntry ( ""MatchCommandLineFirst"" , QStringList ( ) ) ;"	495:8:16977:17066	517741	4	True				
ANR	517913	IdentifierDecl	"matchCommandLineFirst = set . readEntry ( ""MatchCommandLineFirst"" , QStringList ( ) )"		517741	0					
ANR	517914	IdentifierDeclType	QStringList		517741	0					
ANR	517915	Identifier	matchCommandLineFirst		517741	1					
ANR	517916	AssignmentExpression	"matchCommandLineFirst = set . readEntry ( ""MatchCommandLineFirst"" , QStringList ( ) )"		517741	2		=			
ANR	517917	Identifier	matchCommandLineFirst		517741	0					
ANR	517918	CallExpression	"set . readEntry ( ""MatchCommandLineFirst"" , QStringList ( ) )"		517741	1					
ANR	517919	Callee	set . readEntry		517741	0					
ANR	517920	MemberAccess	set . readEntry		517741	0					
ANR	517921	Identifier	set		517741	0					
ANR	517922	Identifier	readEntry		517741	1					
ANR	517923	ArgumentList	"""MatchCommandLineFirst"""		517741	1					
ANR	517924	Argument	"""MatchCommandLineFirst"""		517741	0					
ANR	517925	PrimaryExpression	"""MatchCommandLineFirst"""		517741	0					
ANR	517926	Argument	QStringList ( )		517741	1					
ANR	517927	CallExpression	QStringList ( )		517741	0					
ANR	517928	Callee	QStringList		517741	0					
ANR	517929	Identifier	QStringList		517741	0					
ANR	517930	ArgumentList			517741	1					
ANR	517931	IfStatement	if ( ! classClass . isEmpty ( ) && matchCommandLineFirst . contains ( classClass ) )		517741	5					
ANR	517932	Condition	! classClass . isEmpty ( ) && matchCommandLineFirst . contains ( classClass )	497:12:17081:17147	517741	0	True				
ANR	517933	AndExpression	! classClass . isEmpty ( ) && matchCommandLineFirst . contains ( classClass )		517741	0		&&			
ANR	517934	UnaryOperationExpression	! classClass . isEmpty ( )		517741	0					
ANR	517935	UnaryOperator	!		517741	0					
ANR	517936	CallExpression	classClass . isEmpty ( )		517741	1					
ANR	517937	Callee	classClass . isEmpty		517741	0					
ANR	517938	MemberAccess	classClass . isEmpty		517741	0					
ANR	517939	Identifier	classClass		517741	0					
ANR	517940	Identifier	isEmpty		517741	1					
ANR	517941	ArgumentList			517741	1					
ANR	517942	CallExpression	matchCommandLineFirst . contains ( classClass )		517741	1					
ANR	517943	Callee	matchCommandLineFirst . contains		517741	0					
ANR	517944	MemberAccess	matchCommandLineFirst . contains		517741	0					
ANR	517945	Identifier	matchCommandLineFirst		517741	0					
ANR	517946	Identifier	contains		517741	1					
ANR	517947	ArgumentList	classClass		517741	1					
ANR	517948	Argument	classClass		517741	0					
ANR	517949	Identifier	classClass		517741	0					
ANR	517950	CompoundStatement		33:81:1441:1441	517741	1					
ANR	517951	ExpressionStatement	triedPid = true	498:12:17164:17179	517741	0	True				
ANR	517952	AssignmentExpression	triedPid = true		517741	0		=			
ANR	517953	Identifier	triedPid		517741	0					
ANR	517954	Identifier	true		517741	1					
ANR	517955	ExpressionStatement	services = servicesFromPid ( pid )	499:12:17193:17224	517741	1	True				
ANR	517956	AssignmentExpression	services = servicesFromPid ( pid )		517741	0		=			
ANR	517957	Identifier	services		517741	0					
ANR	517958	CallExpression	servicesFromPid ( pid )		517741	1					
ANR	517959	Callee	servicesFromPid		517741	0					
ANR	517960	Identifier	servicesFromPid		517741	0					
ANR	517961	ArgumentList	pid		517741	1					
ANR	517962	Argument	pid		517741	0					
ANR	517963	Identifier	pid		517741	0					
ANR	517964	IfStatement	"if ( ! className . isEmpty ( ) && matchCommandLineFirst . contains ( ""::"" + className ) )"		517741	6					
ANR	517965	Condition	"! className . isEmpty ( ) && matchCommandLineFirst . contains ( ""::"" + className )"	503:12:17295:17364	517741	0	True				
ANR	517966	AndExpression	"! className . isEmpty ( ) && matchCommandLineFirst . contains ( ""::"" + className )"		517741	0		&&			
ANR	517967	UnaryOperationExpression	! className . isEmpty ( )		517741	0					
ANR	517968	UnaryOperator	!		517741	0					
ANR	517969	CallExpression	className . isEmpty ( )		517741	1					
ANR	517970	Callee	className . isEmpty		517741	0					
ANR	517971	MemberAccess	className . isEmpty		517741	0					
ANR	517972	Identifier	className		517741	0					
ANR	517973	Identifier	isEmpty		517741	1					
ANR	517974	ArgumentList			517741	1					
ANR	517975	CallExpression	"matchCommandLineFirst . contains ( ""::"" + className )"		517741	1					
ANR	517976	Callee	matchCommandLineFirst . contains		517741	0					
ANR	517977	MemberAccess	matchCommandLineFirst . contains		517741	0					
ANR	517978	Identifier	matchCommandLineFirst		517741	0					
ANR	517979	Identifier	contains		517741	1					
ANR	517980	ArgumentList	"""::"" + className"		517741	1					
ANR	517981	Argument	"""::"" + className"		517741	0					
ANR	517982	AdditiveExpression	"""::"" + className"		517741	0		+			
ANR	517983	PrimaryExpression	"""::"""		517741	0					
ANR	517984	Identifier	className		517741	1					
ANR	517985	CompoundStatement		39:84:1658:1658	517741	1					
ANR	517986	ExpressionStatement	triedPid = true	504:12:17381:17396	517741	0	True				
ANR	517987	AssignmentExpression	triedPid = true		517741	0		=			
ANR	517988	Identifier	triedPid		517741	0					
ANR	517989	Identifier	true		517741	1					
ANR	517990	ExpressionStatement	services = servicesFromPid ( pid )	505:12:17410:17441	517741	1	True				
ANR	517991	AssignmentExpression	services = servicesFromPid ( pid )		517741	0		=			
ANR	517992	Identifier	services		517741	0					
ANR	517993	CallExpression	servicesFromPid ( pid )		517741	1					
ANR	517994	Callee	servicesFromPid		517741	0					
ANR	517995	Identifier	servicesFromPid		517741	0					
ANR	517996	ArgumentList	pid		517741	1					
ANR	517997	Argument	pid		517741	0					
ANR	517998	Identifier	pid		517741	0					
ANR	517999	IdentifierDeclStatement	"QString mapped ( grp . readEntry ( classClass + ""::"" + className , QString ( ) ) ) ;"	509:8:17535:17606	517741	7	True				
ANR	518000	IdentifierDecl	"mapped ( grp . readEntry ( classClass + ""::"" + className , QString ( ) ) )"		517741	0					
ANR	518001	IdentifierDeclType	QString		517741	0					
ANR	518002	Identifier	mapped		517741	1					
ANR	518003	CallExpression	"grp . readEntry ( classClass + ""::"" + className , QString ( ) )"		517741	2					
ANR	518004	Callee	grp . readEntry		517741	0					
ANR	518005	MemberAccess	grp . readEntry		517741	0					
ANR	518006	Identifier	grp		517741	0					
ANR	518007	Identifier	readEntry		517741	1					
ANR	518008	ArgumentList	"classClass + ""::"" + className"		517741	1					
ANR	518009	Argument	"classClass + ""::"" + className"		517741	0					
ANR	518010	AdditiveExpression	"classClass + ""::"" + className"		517741	0		+			
ANR	518011	Identifier	classClass		517741	0					
ANR	518012	AdditiveExpression	"""::"" + className"		517741	1		+			
ANR	518013	PrimaryExpression	"""::"""		517741	0					
ANR	518014	Identifier	className		517741	1					
ANR	518015	Argument	QString ( )		517741	1					
ANR	518016	CallExpression	QString ( )		517741	0					
ANR	518017	Callee	QString		517741	0					
ANR	518018	Identifier	QString		517741	0					
ANR	518019	ArgumentList			517741	1					
ANR	518020	IfStatement	"if ( mapped . endsWith ( QLatin1String ( "".desktop"" ) ) )"		517741	8					
ANR	518021	Condition	"mapped . endsWith ( QLatin1String ( "".desktop"" ) )"	511:12:17621:17662	517741	0	True				
ANR	518022	CallExpression	"mapped . endsWith ( QLatin1String ( "".desktop"" ) )"		517741	0					
ANR	518023	Callee	mapped . endsWith		517741	0					
ANR	518024	MemberAccess	mapped . endsWith		517741	0					
ANR	518025	Identifier	mapped		517741	0					
ANR	518026	Identifier	endsWith		517741	1					
ANR	518027	ArgumentList	"QLatin1String ( "".desktop"" )"		517741	1					
ANR	518028	Argument	"QLatin1String ( "".desktop"" )"		517741	0					
ANR	518029	CallExpression	"QLatin1String ( "".desktop"" )"		517741	0					
ANR	518030	Callee	QLatin1String		517741	0					
ANR	518031	Identifier	QLatin1String		517741	0					
ANR	518032	ArgumentList	""".desktop"""		517741	1					
ANR	518033	Argument	""".desktop"""		517741	0					
ANR	518034	PrimaryExpression	""".desktop"""		517741	0					
ANR	518035	CompoundStatement		47:56:1956:1956	517741	1					
ANR	518036	ExpressionStatement	url = QUrl ( mapped )	512:12:17679:17697	517741	0	True				
ANR	518037	AssignmentExpression	url = QUrl ( mapped )		517741	0		=			
ANR	518038	Identifier	url		517741	0					
ANR	518039	CallExpression	QUrl ( mapped )		517741	1					
ANR	518040	Callee	QUrl		517741	0					
ANR	518041	Identifier	QUrl		517741	0					
ANR	518042	ArgumentList	mapped		517741	1					
ANR	518043	Argument	mapped		517741	0					
ANR	518044	Identifier	mapped		517741	0					
ANR	518045	ReturnStatement	return url ;	513:12:17711:17721	517741	1	True				
ANR	518046	Identifier	url		517741	0					
ANR	518047	IfStatement	if ( ! classClass . isEmpty ( ) )		517741	9					
ANR	518048	Condition	! classClass . isEmpty ( )	516:12:17746:17766	517741	0	True				
ANR	518049	UnaryOperationExpression	! classClass . isEmpty ( )		517741	0					
ANR	518050	UnaryOperator	!		517741	0					
ANR	518051	CallExpression	classClass . isEmpty ( )		517741	1					
ANR	518052	Callee	classClass . isEmpty		517741	0					
ANR	518053	MemberAccess	classClass . isEmpty		517741	0					
ANR	518054	Identifier	classClass		517741	0					
ANR	518055	Identifier	isEmpty		517741	1					
ANR	518056	ArgumentList			517741	1					
ANR	518057	CompoundStatement		70:12:2789:2865	517741	1					
ANR	518058	IfStatement	if ( mapped . isEmpty ( ) )		517741	0					
ANR	518059	Condition	mapped . isEmpty ( )	517:16:17787:17802	517741	0	True				
ANR	518060	CallExpression	mapped . isEmpty ( )		517741	0					
ANR	518061	Callee	mapped . isEmpty		517741	0					
ANR	518062	MemberAccess	mapped . isEmpty		517741	0					
ANR	518063	Identifier	mapped		517741	0					
ANR	518064	Identifier	isEmpty		517741	1					
ANR	518065	ArgumentList			517741	1					
ANR	518066	CompoundStatement		53:34:2096:2096	517741	1					
ANR	518067	ExpressionStatement	"mapped = grp . readEntry ( classClass , QString ( ) )"	518:16:17823:17868	517741	0	True				
ANR	518068	AssignmentExpression	"mapped = grp . readEntry ( classClass , QString ( ) )"		517741	0		=			
ANR	518069	Identifier	mapped		517741	0					
ANR	518070	CallExpression	"grp . readEntry ( classClass , QString ( ) )"		517741	1					
ANR	518071	Callee	grp . readEntry		517741	0					
ANR	518072	MemberAccess	grp . readEntry		517741	0					
ANR	518073	Identifier	grp		517741	0					
ANR	518074	Identifier	readEntry		517741	1					
ANR	518075	ArgumentList	classClass		517741	1					
ANR	518076	Argument	classClass		517741	0					
ANR	518077	Identifier	classClass		517741	0					
ANR	518078	Argument	QString ( )		517741	1					
ANR	518079	CallExpression	QString ( )		517741	0					
ANR	518080	Callee	QString		517741	0					
ANR	518081	Identifier	QString		517741	0					
ANR	518082	ArgumentList			517741	1					
ANR	518083	IfStatement	"if ( mapped . endsWith ( QLatin1String ( "".desktop"" ) ) )"		517741	1					
ANR	518084	Condition	"mapped . endsWith ( QLatin1String ( "".desktop"" ) )"	520:20:17891:17932	517741	0	True				
ANR	518085	CallExpression	"mapped . endsWith ( QLatin1String ( "".desktop"" ) )"		517741	0					
ANR	518086	Callee	mapped . endsWith		517741	0					
ANR	518087	MemberAccess	mapped . endsWith		517741	0					
ANR	518088	Identifier	mapped		517741	0					
ANR	518089	Identifier	endsWith		517741	1					
ANR	518090	ArgumentList	"QLatin1String ( "".desktop"" )"		517741	1					
ANR	518091	Argument	"QLatin1String ( "".desktop"" )"		517741	0					
ANR	518092	CallExpression	"QLatin1String ( "".desktop"" )"		517741	0					
ANR	518093	Callee	QLatin1String		517741	0					
ANR	518094	Identifier	QLatin1String		517741	0					
ANR	518095	ArgumentList	""".desktop"""		517741	1					
ANR	518096	Argument	""".desktop"""		517741	0					
ANR	518097	PrimaryExpression	""".desktop"""		517741	0					
ANR	518098	CompoundStatement		56:64:2226:2226	517741	1					
ANR	518099	ExpressionStatement	url = QUrl ( mapped )	521:20:17957:17975	517741	0	True				
ANR	518100	AssignmentExpression	url = QUrl ( mapped )		517741	0		=			
ANR	518101	Identifier	url		517741	0					
ANR	518102	CallExpression	QUrl ( mapped )		517741	1					
ANR	518103	Callee	QUrl		517741	0					
ANR	518104	Identifier	QUrl		517741	0					
ANR	518105	ArgumentList	mapped		517741	1					
ANR	518106	Argument	mapped		517741	0					
ANR	518107	Identifier	mapped		517741	0					
ANR	518108	ReturnStatement	return url ;	522:20:17997:18007	517741	1	True				
ANR	518109	Identifier	url		517741	0					
ANR	518110	IdentifierDeclStatement	"QStringList manualOnly = set . readEntry ( ""ManualOnly"" , QStringList ( ) ) ;"	528:12:18297:18364	517741	1	True				
ANR	518111	IdentifierDecl	"manualOnly = set . readEntry ( ""ManualOnly"" , QStringList ( ) )"		517741	0					
ANR	518112	IdentifierDeclType	QStringList		517741	0					
ANR	518113	Identifier	manualOnly		517741	1					
ANR	518114	AssignmentExpression	"manualOnly = set . readEntry ( ""ManualOnly"" , QStringList ( ) )"		517741	2		=			
ANR	518115	Identifier	manualOnly		517741	0					
ANR	518116	CallExpression	"set . readEntry ( ""ManualOnly"" , QStringList ( ) )"		517741	1					
ANR	518117	Callee	set . readEntry		517741	0					
ANR	518118	MemberAccess	set . readEntry		517741	0					
ANR	518119	Identifier	set		517741	0					
ANR	518120	Identifier	readEntry		517741	1					
ANR	518121	ArgumentList	"""ManualOnly"""		517741	1					
ANR	518122	Argument	"""ManualOnly"""		517741	0					
ANR	518123	PrimaryExpression	"""ManualOnly"""		517741	0					
ANR	518124	Argument	QStringList ( )		517741	1					
ANR	518125	CallExpression	QStringList ( )		517741	0					
ANR	518126	Callee	QStringList		517741	0					
ANR	518127	Identifier	QStringList		517741	0					
ANR	518128	ArgumentList			517741	1					
ANR	518129	IfStatement	if ( ! classClass . isEmpty ( ) && manualOnly . contains ( classClass ) )		517741	2					
ANR	518130	Condition	! classClass . isEmpty ( ) && manualOnly . contains ( classClass )	530:16:18383:18438	517741	0	True				
ANR	518131	AndExpression	! classClass . isEmpty ( ) && manualOnly . contains ( classClass )		517741	0		&&			
ANR	518132	UnaryOperationExpression	! classClass . isEmpty ( )		517741	0					
ANR	518133	UnaryOperator	!		517741	0					
ANR	518134	CallExpression	classClass . isEmpty ( )		517741	1					
ANR	518135	Callee	classClass . isEmpty		517741	0					
ANR	518136	MemberAccess	classClass . isEmpty		517741	0					
ANR	518137	Identifier	classClass		517741	0					
ANR	518138	Identifier	isEmpty		517741	1					
ANR	518139	ArgumentList			517741	1					
ANR	518140	CallExpression	manualOnly . contains ( classClass )		517741	1					
ANR	518141	Callee	manualOnly . contains		517741	0					
ANR	518142	MemberAccess	manualOnly . contains		517741	0					
ANR	518143	Identifier	manualOnly		517741	0					
ANR	518144	Identifier	contains		517741	1					
ANR	518145	ArgumentList	classClass		517741	1					
ANR	518146	Argument	classClass		517741	0					
ANR	518147	Identifier	classClass		517741	0					
ANR	518148	CompoundStatement		66:74:2732:2732	517741	1					
ANR	518149	ReturnStatement	return url ;	531:16:18459:18469	517741	0	True				
ANR	518150	Identifier	url		517741	0					
ANR	518151	IdentifierDeclStatement	"KConfigGroup rewriteRulesGroup ( rulesConfig , QStringLiteral ( ""Rewrite Rules"" ) ) ;"	534:12:18498:18574	517741	3	True				
ANR	518152	IdentifierDecl	"rewriteRulesGroup ( rulesConfig , QStringLiteral ( ""Rewrite Rules"" ) )"		517741	0					
ANR	518153	IdentifierDeclType	KConfigGroup		517741	0					
ANR	518154	Identifier	rewriteRulesGroup		517741	1					
ANR	518155	Expression	"rulesConfig , QStringLiteral ( ""Rewrite Rules"" )"		517741	2					
ANR	518156	Identifier	rulesConfig		517741	0					
ANR	518157	CallExpression	"QStringLiteral ( ""Rewrite Rules"" )"		517741	1					
ANR	518158	Callee	QStringLiteral		517741	0					
ANR	518159	Identifier	QStringLiteral		517741	0					
ANR	518160	ArgumentList	"""Rewrite Rules"""		517741	1					
ANR	518161	Argument	"""Rewrite Rules"""		517741	0					
ANR	518162	PrimaryExpression	"""Rewrite Rules"""		517741	0					
ANR	518163	IfStatement	if ( rewriteRulesGroup . hasGroup ( classClass ) )		517741	4					
ANR	518164	Condition	rewriteRulesGroup . hasGroup ( classClass )	535:16:18592:18629	517741	0	True				
ANR	518165	CallExpression	rewriteRulesGroup . hasGroup ( classClass )		517741	0					
ANR	518166	Callee	rewriteRulesGroup . hasGroup		517741	0					
ANR	518167	MemberAccess	rewriteRulesGroup . hasGroup		517741	0					
ANR	518168	Identifier	rewriteRulesGroup		517741	0					
ANR	518169	Identifier	hasGroup		517741	1					
ANR	518170	ArgumentList	classClass		517741	1					
ANR	518171	Argument	classClass		517741	0					
ANR	518172	Identifier	classClass		517741	0					
ANR	518173	CompoundStatement		74:16:3017:3068	517741	1					
ANR	518174	IdentifierDeclStatement	"KConfigGroup rewriteGroup ( & rewriteRulesGroup , classClass ) ;"	536:16:18650:18707	517741	0	True				
ANR	518175	IdentifierDecl	"rewriteGroup ( & rewriteRulesGroup , classClass )"		517741	0					
ANR	518176	IdentifierDeclType	KConfigGroup		517741	0					
ANR	518177	Identifier	rewriteGroup		517741	1					
ANR	518178	Expression	"& rewriteRulesGroup , classClass"		517741	2					
ANR	518179	UnaryOperationExpression	& rewriteRulesGroup		517741	0					
ANR	518180	UnaryOperator	&		517741	0					
ANR	518181	Identifier	rewriteRulesGroup		517741	1					
ANR	518182	Identifier	classClass		517741	1					
ANR	518183	IdentifierDeclStatement	const QStringList & rules = rewriteGroup . groupList ( ) ;	538:16:18726:18777	517741	1	True				
ANR	518184	IdentifierDecl	& rules = rewriteGroup . groupList ( )		517741	0					
ANR	518185	IdentifierDeclType	const QStringList &		517741	0					
ANR	518186	Identifier	rules		517741	1					
ANR	518187	AssignmentExpression	& rules = rewriteGroup . groupList ( )		517741	2		=			
ANR	518188	Identifier	rules		517741	0					
ANR	518189	CallExpression	rewriteGroup . groupList ( )		517741	1					
ANR	518190	Callee	rewriteGroup . groupList		517741	0					
ANR	518191	MemberAccess	rewriteGroup . groupList		517741	0					
ANR	518192	Identifier	rewriteGroup		517741	0					
ANR	518193	Identifier	groupList		517741	1					
ANR	518194	ArgumentList			517741	1					
ANR	518195	Statement	for	539:16:18795:18797	517741	2	True				
ANR	518196	Statement	(	539:20:18799:18799	517741	3	True				
ANR	518197	Statement	const	539:21:18800:18804	517741	4	True				
ANR	518198	Statement	QString	539:27:18806:18812	517741	5	True				
ANR	518199	Statement	&	539:35:18814:18814	517741	6	True				
ANR	518200	Label	rule :	539:36:18815:18820	517741	7	True				
ANR	518201	Identifier	rule		517741	0					
ANR	518202	Statement	rules	539:43:18822:18826	517741	8	True				
ANR	518203	Statement	)	539:48:18827:18827	517741	9	True				
ANR	518204	CompoundStatement		96:20:3989:4060	517741	10					
ANR	518205	IdentifierDeclStatement	"KConfigGroup ruleGroup ( & rewriteGroup , rule ) ;"	540:20:18851:18894	517741	0	True				
ANR	518206	IdentifierDecl	"ruleGroup ( & rewriteGroup , rule )"		517741	0					
ANR	518207	IdentifierDeclType	KConfigGroup		517741	0					
ANR	518208	Identifier	ruleGroup		517741	1					
ANR	518209	Expression	"& rewriteGroup , rule"		517741	2					
ANR	518210	UnaryOperationExpression	& rewriteGroup		517741	0					
ANR	518211	UnaryOperator	&		517741	0					
ANR	518212	Identifier	rewriteGroup		517741	1					
ANR	518213	Identifier	rule		517741	1					
ANR	518214	IdentifierDeclStatement	"const QString propertyConfig = ruleGroup . readEntry ( QStringLiteral ( ""Property"" ) , QString ( ) ) ;"	542:20:18917:19006	517741	1	True				
ANR	518215	IdentifierDecl	"propertyConfig = ruleGroup . readEntry ( QStringLiteral ( ""Property"" ) , QString ( ) )"		517741	0					
ANR	518216	IdentifierDeclType	const QString		517741	0					
ANR	518217	Identifier	propertyConfig		517741	1					
ANR	518218	AssignmentExpression	"propertyConfig = ruleGroup . readEntry ( QStringLiteral ( ""Property"" ) , QString ( ) )"		517741	2		=			
ANR	518219	Identifier	propertyConfig		517741	0					
ANR	518220	CallExpression	"ruleGroup . readEntry ( QStringLiteral ( ""Property"" ) , QString ( ) )"		517741	1					
ANR	518221	Callee	ruleGroup . readEntry		517741	0					
ANR	518222	MemberAccess	ruleGroup . readEntry		517741	0					
ANR	518223	Identifier	ruleGroup		517741	0					
ANR	518224	Identifier	readEntry		517741	1					
ANR	518225	ArgumentList	"QStringLiteral ( ""Property"" )"		517741	1					
ANR	518226	Argument	"QStringLiteral ( ""Property"" )"		517741	0					
ANR	518227	CallExpression	"QStringLiteral ( ""Property"" )"		517741	0					
ANR	518228	Callee	QStringLiteral		517741	0					
ANR	518229	Identifier	QStringLiteral		517741	0					
ANR	518230	ArgumentList	"""Property"""		517741	1					
ANR	518231	Argument	"""Property"""		517741	0					
ANR	518232	PrimaryExpression	"""Property"""		517741	0					
ANR	518233	Argument	QString ( )		517741	1					
ANR	518234	CallExpression	QString ( )		517741	0					
ANR	518235	Callee	QString		517741	0					
ANR	518236	Identifier	QString		517741	0					
ANR	518237	ArgumentList			517741	1					
ANR	518238	IdentifierDeclStatement	QString matchProperty ;	544:20:19029:19050	517741	2	True				
ANR	518239	IdentifierDecl	matchProperty		517741	0					
ANR	518240	IdentifierDeclType	QString		517741	0					
ANR	518241	Identifier	matchProperty		517741	1					
ANR	518242	IfStatement	"if ( propertyConfig == QLatin1String ( ""ClassClass"" ) )"		517741	3					
ANR	518243	Condition	"propertyConfig == QLatin1String ( ""ClassClass"" )"	545:24:19076:19120	517741	0	True				
ANR	518244	EqualityExpression	"propertyConfig == QLatin1String ( ""ClassClass"" )"		517741	0		==			
ANR	518245	Identifier	propertyConfig		517741	0					
ANR	518246	CallExpression	"QLatin1String ( ""ClassClass"" )"		517741	1					
ANR	518247	Callee	QLatin1String		517741	0					
ANR	518248	Identifier	QLatin1String		517741	0					
ANR	518249	ArgumentList	"""ClassClass"""		517741	1					
ANR	518250	Argument	"""ClassClass"""		517741	0					
ANR	518251	PrimaryExpression	"""ClassClass"""		517741	0					
ANR	518252	CompoundStatement		81:71:3414:3414	517741	1					
ANR	518253	ExpressionStatement	matchProperty = classClass	546:24:19149:19175	517741	0	True				
ANR	518254	AssignmentExpression	matchProperty = classClass		517741	0		=			
ANR	518255	Identifier	matchProperty		517741	0					
ANR	518256	Identifier	classClass		517741	1					
ANR	518257	ElseStatement	else		517741	0					
ANR	518258	IfStatement	"if ( propertyConfig == QLatin1String ( ""ClassName"" ) )"		517741	0					
ANR	518259	Condition	"propertyConfig == QLatin1String ( ""ClassName"" )"	547:31:19208:19251	517741	0	True				
ANR	518260	EqualityExpression	"propertyConfig == QLatin1String ( ""ClassName"" )"		517741	0		==			
ANR	518261	Identifier	propertyConfig		517741	0					
ANR	518262	CallExpression	"QLatin1String ( ""ClassName"" )"		517741	1					
ANR	518263	Callee	QLatin1String		517741	0					
ANR	518264	Identifier	QLatin1String		517741	0					
ANR	518265	ArgumentList	"""ClassName"""		517741	1					
ANR	518266	Argument	"""ClassName"""		517741	0					
ANR	518267	PrimaryExpression	"""ClassName"""		517741	0					
ANR	518268	CompoundStatement		83:77:3545:3545	517741	1					
ANR	518269	ExpressionStatement	matchProperty = className	548:24:19280:19305	517741	0	True				
ANR	518270	AssignmentExpression	matchProperty = className		517741	0		=			
ANR	518271	Identifier	matchProperty		517741	0					
ANR	518272	Identifier	className		517741	1					
ANR	518273	IfStatement	if ( matchProperty . isEmpty ( ) )		517741	4					
ANR	518274	Condition	matchProperty . isEmpty ( )	551:24:19354:19376	517741	0	True				
ANR	518275	CallExpression	matchProperty . isEmpty ( )		517741	0					
ANR	518276	Callee	matchProperty . isEmpty		517741	0					
ANR	518277	MemberAccess	matchProperty . isEmpty		517741	0					
ANR	518278	Identifier	matchProperty		517741	0					
ANR	518279	Identifier	isEmpty		517741	1					
ANR	518280	ArgumentList			517741	1					
ANR	518281	CompoundStatement		87:49:3670:3670	517741	1					
ANR	518282	ContinueStatement	continue ;	552:24:19405:19413	517741	0	True				
ANR	518283	IdentifierDeclStatement	"const QString serviceSearchIdentifier = ruleGroup . readEntry ( QStringLiteral ( ""Identifier"" ) , QString ( ) ) ;"	555:20:19458:19558	517741	5	True				
ANR	518284	IdentifierDecl	"serviceSearchIdentifier = ruleGroup . readEntry ( QStringLiteral ( ""Identifier"" ) , QString ( ) )"		517741	0					
ANR	518285	IdentifierDeclType	const QString		517741	0					
ANR	518286	Identifier	serviceSearchIdentifier		517741	1					
ANR	518287	AssignmentExpression	"serviceSearchIdentifier = ruleGroup . readEntry ( QStringLiteral ( ""Identifier"" ) , QString ( ) )"		517741	2		=			
ANR	518288	Identifier	serviceSearchIdentifier		517741	0					
ANR	518289	CallExpression	"ruleGroup . readEntry ( QStringLiteral ( ""Identifier"" ) , QString ( ) )"		517741	1					
ANR	518290	Callee	ruleGroup . readEntry		517741	0					
ANR	518291	MemberAccess	ruleGroup . readEntry		517741	0					
ANR	518292	Identifier	ruleGroup		517741	0					
ANR	518293	Identifier	readEntry		517741	1					
ANR	518294	ArgumentList	"QStringLiteral ( ""Identifier"" )"		517741	1					
ANR	518295	Argument	"QStringLiteral ( ""Identifier"" )"		517741	0					
ANR	518296	CallExpression	"QStringLiteral ( ""Identifier"" )"		517741	0					
ANR	518297	Callee	QStringLiteral		517741	0					
ANR	518298	Identifier	QStringLiteral		517741	0					
ANR	518299	ArgumentList	"""Identifier"""		517741	1					
ANR	518300	Argument	"""Identifier"""		517741	0					
ANR	518301	PrimaryExpression	"""Identifier"""		517741	0					
ANR	518302	Argument	QString ( )		517741	1					
ANR	518303	CallExpression	QString ( )		517741	0					
ANR	518304	Callee	QString		517741	0					
ANR	518305	Identifier	QString		517741	0					
ANR	518306	ArgumentList			517741	1					
ANR	518307	IfStatement	if ( serviceSearchIdentifier . isEmpty ( ) )		517741	6					
ANR	518308	Condition	serviceSearchIdentifier . isEmpty ( )	556:24:19584:19616	517741	0	True				
ANR	518309	CallExpression	serviceSearchIdentifier . isEmpty ( )		517741	0					
ANR	518310	Callee	serviceSearchIdentifier . isEmpty		517741	0					
ANR	518311	MemberAccess	serviceSearchIdentifier . isEmpty		517741	0					
ANR	518312	Identifier	serviceSearchIdentifier		517741	0					
ANR	518313	Identifier	isEmpty		517741	1					
ANR	518314	ArgumentList			517741	1					
ANR	518315	CompoundStatement		92:59:3910:3910	517741	1					
ANR	518316	ContinueStatement	continue ;	557:24:19645:19653	517741	0	True				
ANR	518317	IdentifierDeclStatement	"QRegularExpression regExp ( ruleGroup . readEntry ( QStringLiteral ( ""Match"" ) ) ) ;"	560:20:19698:19769	517741	7	True				
ANR	518318	IdentifierDecl	"regExp ( ruleGroup . readEntry ( QStringLiteral ( ""Match"" ) ) )"		517741	0					
ANR	518319	IdentifierDeclType	QRegularExpression		517741	0					
ANR	518320	Identifier	regExp		517741	1					
ANR	518321	CallExpression	"ruleGroup . readEntry ( QStringLiteral ( ""Match"" ) )"		517741	2					
ANR	518322	Callee	ruleGroup . readEntry		517741	0					
ANR	518323	MemberAccess	ruleGroup . readEntry		517741	0					
ANR	518324	Identifier	ruleGroup		517741	0					
ANR	518325	Identifier	readEntry		517741	1					
ANR	518326	ArgumentList	"QStringLiteral ( ""Match"" )"		517741	1					
ANR	518327	Argument	"QStringLiteral ( ""Match"" )"		517741	0					
ANR	518328	CallExpression	"QStringLiteral ( ""Match"" )"		517741	0					
ANR	518329	Callee	QStringLiteral		517741	0					
ANR	518330	Identifier	QStringLiteral		517741	0					
ANR	518331	ArgumentList	"""Match"""		517741	1					
ANR	518332	Argument	"""Match"""		517741	0					
ANR	518333	PrimaryExpression	"""Match"""		517741	0					
ANR	518334	Statement	const	561:20:19791:19795	517741	8	True				
ANR	518335	Statement	auto	561:26:19797:19800	517741	9	True				
ANR	518336	ExpressionStatement	match = regExp . match ( matchProperty )	561:31:19802:19837	517741	10	True				
ANR	518337	AssignmentExpression	match = regExp . match ( matchProperty )		517741	0		=			
ANR	518338	Identifier	match		517741	0					
ANR	518339	CallExpression	regExp . match ( matchProperty )		517741	1					
ANR	518340	Callee	regExp . match		517741	0					
ANR	518341	MemberAccess	regExp . match		517741	0					
ANR	518342	Identifier	regExp		517741	0					
ANR	518343	Identifier	match		517741	1					
ANR	518344	ArgumentList	matchProperty		517741	1					
ANR	518345	Argument	matchProperty		517741	0					
ANR	518346	Identifier	matchProperty		517741	0					
ANR	518347	IfStatement	if ( match . hasMatch ( ) )		517741	11					
ANR	518348	Condition	match . hasMatch ( )	563:24:19864:19879	517741	0	True				
ANR	518349	CallExpression	match . hasMatch ( )		517741	0					
ANR	518350	Callee	match . hasMatch		517741	0					
ANR	518351	MemberAccess	match . hasMatch		517741	0					
ANR	518352	Identifier	match		517741	0					
ANR	518353	Identifier	hasMatch		517741	1					
ANR	518354	ArgumentList			517741	1					
ANR	518355	CompoundStatement		105:24:4410:4504	517741	1					
ANR	518356	IdentifierDeclStatement	"const QString actualMatch = match . captured ( QStringLiteral ( ""match"" ) ) ;"	564:24:19908:19975	517741	0	True				
ANR	518357	IdentifierDecl	"actualMatch = match . captured ( QStringLiteral ( ""match"" ) )"		517741	0					
ANR	518358	IdentifierDeclType	const QString		517741	0					
ANR	518359	Identifier	actualMatch		517741	1					
ANR	518360	AssignmentExpression	"actualMatch = match . captured ( QStringLiteral ( ""match"" ) )"		517741	2		=			
ANR	518361	Identifier	actualMatch		517741	0					
ANR	518362	CallExpression	"match . captured ( QStringLiteral ( ""match"" ) )"		517741	1					
ANR	518363	Callee	match . captured		517741	0					
ANR	518364	MemberAccess	match . captured		517741	0					
ANR	518365	Identifier	match		517741	0					
ANR	518366	Identifier	captured		517741	1					
ANR	518367	ArgumentList	"QStringLiteral ( ""match"" )"		517741	1					
ANR	518368	Argument	"QStringLiteral ( ""match"" )"		517741	0					
ANR	518369	CallExpression	"QStringLiteral ( ""match"" )"		517741	0					
ANR	518370	Callee	QStringLiteral		517741	0					
ANR	518371	Identifier	QStringLiteral		517741	0					
ANR	518372	ArgumentList	"""match"""		517741	1					
ANR	518373	Argument	"""match"""		517741	0					
ANR	518374	PrimaryExpression	"""match"""		517741	0					
ANR	518375	IfStatement	if ( actualMatch . isEmpty ( ) )		517741	1					
ANR	518376	Condition	actualMatch . isEmpty ( )	565:28:20005:20025	517741	0	True				
ANR	518377	CallExpression	actualMatch . isEmpty ( )		517741	0					
ANR	518378	Callee	actualMatch . isEmpty		517741	0					
ANR	518379	MemberAccess	actualMatch . isEmpty		517741	0					
ANR	518380	Identifier	actualMatch		517741	0					
ANR	518381	Identifier	isEmpty		517741	1					
ANR	518382	ArgumentList			517741	1					
ANR	518383	CompoundStatement		101:51:4319:4319	517741	1					
ANR	518384	ContinueStatement	continue ;	566:28:20058:20066	517741	0	True				
ANR	518385	IdentifierDeclStatement	"const QString rewrittenString = ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg ( actualMatch ) ;"	569:24:20119:20213	517741	2	True				
ANR	518386	IdentifierDecl	"rewrittenString = ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg ( actualMatch )"		517741	0					
ANR	518387	IdentifierDeclType	const QString		517741	0					
ANR	518388	Identifier	rewrittenString		517741	1					
ANR	518389	AssignmentExpression	"rewrittenString = ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg ( actualMatch )"		517741	2		=			
ANR	518390	Identifier	rewrittenString		517741	0					
ANR	518391	CallExpression	"ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg ( actualMatch )"		517741	1					
ANR	518392	Callee	"ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg"		517741	0					
ANR	518393	MemberAccess	"ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg"		517741	0					
ANR	518394	CallExpression	"ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) )"		517741	0					
ANR	518395	Callee	ruleGroup . readEntry		517741	0					
ANR	518396	MemberAccess	ruleGroup . readEntry		517741	0					
ANR	518397	Identifier	ruleGroup		517741	0					
ANR	518398	Identifier	readEntry		517741	1					
ANR	518399	ArgumentList	"QStringLiteral ( ""Target"" )"		517741	1					
ANR	518400	Argument	"QStringLiteral ( ""Target"" )"		517741	0					
ANR	518401	CallExpression	"QStringLiteral ( ""Target"" )"		517741	0					
ANR	518402	Callee	QStringLiteral		517741	0					
ANR	518403	Identifier	QStringLiteral		517741	0					
ANR	518404	ArgumentList	"""Target"""		517741	1					
ANR	518405	Argument	"""Target"""		517741	0					
ANR	518406	PrimaryExpression	"""Target"""		517741	0					
ANR	518407	Identifier	arg		517741	1					
ANR	518408	ArgumentList	actualMatch		517741	1					
ANR	518409	Argument	actualMatch		517741	0					
ANR	518410	Identifier	actualMatch		517741	0					
ANR	518411	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg ( rewrittenString , serviceSearchIdentifier ) )"	571:24:20240:20408	517741	3	True				
ANR	518412	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg ( rewrittenString , serviceSearchIdentifier ) )"		517741	0		=			
ANR	518413	Identifier	services		517741	0					
ANR	518414	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg ( rewrittenString , serviceSearchIdentifier ) )"		517741	1					
ANR	518415	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518416	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518417	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518418	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518419	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518420	ArgumentList			517741	1					
ANR	518421	Identifier	query		517741	1					
ANR	518422	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518423	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518424	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518425	Callee	QStringLiteral		517741	0					
ANR	518426	Identifier	QStringLiteral		517741	0					
ANR	518427	ArgumentList	"""Application"""		517741	1					
ANR	518428	Argument	"""Application"""		517741	0					
ANR	518429	PrimaryExpression	"""Application"""		517741	0					
ANR	518430	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg ( rewrittenString , serviceSearchIdentifier )"		517741	1					
ANR	518431	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg ( rewrittenString , serviceSearchIdentifier )"		517741	0					
ANR	518432	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg"		517741	0					
ANR	518433	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg"		517741	0					
ANR	518434	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" )"		517741	0					
ANR	518435	Callee	QStringLiteral		517741	0					
ANR	518436	Identifier	QStringLiteral		517741	0					
ANR	518437	ArgumentList	"""exist Exec and ('%1' =~ %2)"""		517741	1					
ANR	518438	Argument	"""exist Exec and ('%1' =~ %2)"""		517741	0					
ANR	518439	PrimaryExpression	"""exist Exec and ('%1' =~ %2)"""		517741	0					
ANR	518440	Identifier	arg		517741	1					
ANR	518441	ArgumentList	rewrittenString		517741	1					
ANR	518442	Argument	rewrittenString		517741	0					
ANR	518443	Identifier	rewrittenString		517741	0					
ANR	518444	Argument	serviceSearchIdentifier		517741	1					
ANR	518445	Identifier	serviceSearchIdentifier		517741	0					
ANR	518446	IfStatement	if ( ! services . isEmpty ( ) )		517741	4					
ANR	518447	Condition	! services . isEmpty ( )	573:28:20439:20457	517741	0	True				
ANR	518448	UnaryOperationExpression	! services . isEmpty ( )		517741	0					
ANR	518449	UnaryOperator	!		517741	0					
ANR	518450	CallExpression	services . isEmpty ( )		517741	1					
ANR	518451	Callee	services . isEmpty		517741	0					
ANR	518452	MemberAccess	services . isEmpty		517741	0					
ANR	518453	Identifier	services		517741	0					
ANR	518454	Identifier	isEmpty		517741	1					
ANR	518455	ArgumentList			517741	1					
ANR	518456	CompoundStatement		109:49:4751:4751	517741	1					
ANR	518457	BreakStatement	break ;	574:28:20490:20495	517741	0	True				
ANR	518458	IfStatement	if ( ! mapped . isEmpty ( ) && services . empty ( ) )		517741	5					
ANR	518459	Condition	! mapped . isEmpty ( ) && services . empty ( )	580:16:20594:20630	517741	0	True				
ANR	518460	AndExpression	! mapped . isEmpty ( ) && services . empty ( )		517741	0		&&			
ANR	518461	UnaryOperationExpression	! mapped . isEmpty ( )		517741	0					
ANR	518462	UnaryOperator	!		517741	0					
ANR	518463	CallExpression	mapped . isEmpty ( )		517741	1					
ANR	518464	Callee	mapped . isEmpty		517741	0					
ANR	518465	MemberAccess	mapped . isEmpty		517741	0					
ANR	518466	Identifier	mapped		517741	0					
ANR	518467	Identifier	isEmpty		517741	1					
ANR	518468	ArgumentList			517741	1					
ANR	518469	CallExpression	services . empty ( )		517741	1					
ANR	518470	Callee	services . empty		517741	0					
ANR	518471	MemberAccess	services . empty		517741	0					
ANR	518472	Identifier	services		517741	0					
ANR	518473	Identifier	empty		517741	1					
ANR	518474	ArgumentList			517741	1					
ANR	518475	CompoundStatement		116:55:4924:4924	517741	1					
ANR	518476	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( mapped ) )"	581:16:20651:20799	517741	0	True				
ANR	518477	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( mapped ) )"		517741	0		=			
ANR	518478	Identifier	services		517741	0					
ANR	518479	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( mapped ) )"		517741	1					
ANR	518480	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518481	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518482	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518483	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518484	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518485	ArgumentList			517741	1					
ANR	518486	Identifier	query		517741	1					
ANR	518487	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518488	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518489	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518490	Callee	QStringLiteral		517741	0					
ANR	518491	Identifier	QStringLiteral		517741	0					
ANR	518492	ArgumentList	"""Application"""		517741	1					
ANR	518493	Argument	"""Application"""		517741	0					
ANR	518494	PrimaryExpression	"""Application"""		517741	0					
ANR	518495	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( mapped )"		517741	1					
ANR	518496	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( mapped )"		517741	0					
ANR	518497	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg"		517741	0					
ANR	518498	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg"		517741	0					
ANR	518499	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" )"		517741	0					
ANR	518500	Callee	QStringLiteral		517741	0					
ANR	518501	Identifier	QStringLiteral		517741	0					
ANR	518502	ArgumentList	"""exist Exec and ('%1' =~ DesktopEntryName)"""		517741	1					
ANR	518503	Argument	"""exist Exec and ('%1' =~ DesktopEntryName)"""		517741	0					
ANR	518504	PrimaryExpression	"""exist Exec and ('%1' =~ DesktopEntryName)"""		517741	0					
ANR	518505	Identifier	arg		517741	1					
ANR	518506	ArgumentList	mapped		517741	1					
ANR	518507	Argument	mapped		517741	0					
ANR	518508	Identifier	mapped		517741	0					
ANR	518509	IfStatement	if ( ! mapped . isEmpty ( ) && services . empty ( ) )		517741	6					
ANR	518510	Condition	! mapped . isEmpty ( ) && services . empty ( )	584:16:20832:20868	517741	0	True				
ANR	518511	AndExpression	! mapped . isEmpty ( ) && services . empty ( )		517741	0		&&			
ANR	518512	UnaryOperationExpression	! mapped . isEmpty ( )		517741	0					
ANR	518513	UnaryOperator	!		517741	0					
ANR	518514	CallExpression	mapped . isEmpty ( )		517741	1					
ANR	518515	Callee	mapped . isEmpty		517741	0					
ANR	518516	MemberAccess	mapped . isEmpty		517741	0					
ANR	518517	Identifier	mapped		517741	0					
ANR	518518	Identifier	isEmpty		517741	1					
ANR	518519	ArgumentList			517741	1					
ANR	518520	CallExpression	services . empty ( )		517741	1					
ANR	518521	Callee	services . empty		517741	0					
ANR	518522	MemberAccess	services . empty		517741	0					
ANR	518523	Identifier	services		517741	0					
ANR	518524	Identifier	empty		517741	1					
ANR	518525	ArgumentList			517741	1					
ANR	518526	CompoundStatement		120:55:5162:5162	517741	1					
ANR	518527	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( mapped ) )"	585:16:20889:21068	517741	0	True				
ANR	518528	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( mapped ) )"		517741	0		=			
ANR	518529	Identifier	services		517741	0					
ANR	518530	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( mapped ) )"		517741	1					
ANR	518531	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518532	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518533	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518534	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518535	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518536	ArgumentList			517741	1					
ANR	518537	Identifier	query		517741	1					
ANR	518538	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518539	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518540	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518541	Callee	QStringLiteral		517741	0					
ANR	518542	Identifier	QStringLiteral		517741	0					
ANR	518543	ArgumentList	"""Application"""		517741	1					
ANR	518544	Argument	"""Application"""		517741	0					
ANR	518545	PrimaryExpression	"""Application"""		517741	0					
ANR	518546	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( mapped )"		517741	1					
ANR	518547	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( mapped )"		517741	0					
ANR	518548	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg"		517741	0					
ANR	518549	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg"		517741	0					
ANR	518550	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" )"		517741	0					
ANR	518551	Callee	QStringLiteral		517741	0					
ANR	518552	Identifier	QStringLiteral		517741	0					
ANR	518553	ArgumentList	"""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"""		517741	1					
ANR	518554	Argument	"""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"""		517741	0					
ANR	518555	PrimaryExpression	"""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"""		517741	0					
ANR	518556	Identifier	arg		517741	1					
ANR	518557	ArgumentList	mapped		517741	1					
ANR	518558	Argument	mapped		517741	0					
ANR	518559	Identifier	mapped		517741	0					
ANR	518560	IfStatement	if ( services . empty ( ) )		517741	7					
ANR	518561	Condition	services . empty ( )	589:16:21205:21220	517741	0	True				
ANR	518562	CallExpression	services . empty ( )		517741	0					
ANR	518563	Callee	services . empty		517741	0					
ANR	518564	MemberAccess	services . empty		517741	0					
ANR	518565	Identifier	services		517741	0					
ANR	518566	Identifier	empty		517741	1					
ANR	518567	ArgumentList			517741	1					
ANR	518568	CompoundStatement		125:34:5514:5514	517741	1					
ANR	518569	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( classClass ) )"	590:16:21241:21393	517741	0	True				
ANR	518570	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( classClass ) )"		517741	0		=			
ANR	518571	Identifier	services		517741	0					
ANR	518572	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( classClass ) )"		517741	1					
ANR	518573	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518574	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518575	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518576	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518577	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518578	ArgumentList			517741	1					
ANR	518579	Identifier	query		517741	1					
ANR	518580	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518581	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518582	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518583	Callee	QStringLiteral		517741	0					
ANR	518584	Identifier	QStringLiteral		517741	0					
ANR	518585	ArgumentList	"""Application"""		517741	1					
ANR	518586	Argument	"""Application"""		517741	0					
ANR	518587	PrimaryExpression	"""Application"""		517741	0					
ANR	518588	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( classClass )"		517741	1					
ANR	518589	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg ( classClass )"		517741	0					
ANR	518590	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg"		517741	0					
ANR	518591	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg"		517741	0					
ANR	518592	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" )"		517741	0					
ANR	518593	Callee	QStringLiteral		517741	0					
ANR	518594	Identifier	QStringLiteral		517741	0					
ANR	518595	ArgumentList	"""exist Exec and ('%1' =~ DesktopEntryName)"""		517741	1					
ANR	518596	Argument	"""exist Exec and ('%1' =~ DesktopEntryName)"""		517741	0					
ANR	518597	PrimaryExpression	"""exist Exec and ('%1' =~ DesktopEntryName)"""		517741	0					
ANR	518598	Identifier	arg		517741	1					
ANR	518599	ArgumentList	classClass		517741	1					
ANR	518600	Argument	classClass		517741	0					
ANR	518601	Identifier	classClass		517741	0					
ANR	518602	IfStatement	if ( services . empty ( ) )		517741	8					
ANR	518603	Condition	services . empty ( )	594:16:21461:21476	517741	0	True				
ANR	518604	CallExpression	services . empty ( )		517741	0					
ANR	518605	Callee	services . empty		517741	0					
ANR	518606	MemberAccess	services . empty		517741	0					
ANR	518607	Identifier	services		517741	0					
ANR	518608	Identifier	empty		517741	1					
ANR	518609	ArgumentList			517741	1					
ANR	518610	CompoundStatement		130:34:5770:5770	517741	1					
ANR	518611	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg ( classClass ) )"	595:16:21497:21647	517741	0	True				
ANR	518612	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg ( classClass ) )"		517741	0		=			
ANR	518613	Identifier	services		517741	0					
ANR	518614	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg ( classClass ) )"		517741	1					
ANR	518615	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518616	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518617	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518618	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518619	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518620	ArgumentList			517741	1					
ANR	518621	Identifier	query		517741	1					
ANR	518622	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518623	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518624	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518625	Callee	QStringLiteral		517741	0					
ANR	518626	Identifier	QStringLiteral		517741	0					
ANR	518627	ArgumentList	"""Application"""		517741	1					
ANR	518628	Argument	"""Application"""		517741	0					
ANR	518629	PrimaryExpression	"""Application"""		517741	0					
ANR	518630	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg ( classClass )"		517741	1					
ANR	518631	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg ( classClass )"		517741	0					
ANR	518632	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg"		517741	0					
ANR	518633	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg"		517741	0					
ANR	518634	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" )"		517741	0					
ANR	518635	Callee	QStringLiteral		517741	0					
ANR	518636	Identifier	QStringLiteral		517741	0					
ANR	518637	ArgumentList	"""exist Exec and ('%1' =~ StartupWMClass)"""		517741	1					
ANR	518638	Argument	"""exist Exec and ('%1' =~ StartupWMClass)"""		517741	0					
ANR	518639	PrimaryExpression	"""exist Exec and ('%1' =~ StartupWMClass)"""		517741	0					
ANR	518640	Identifier	arg		517741	1					
ANR	518641	ArgumentList	classClass		517741	1					
ANR	518642	Argument	classClass		517741	0					
ANR	518643	Identifier	classClass		517741	0					
ANR	518644	IfStatement	if ( services . empty ( ) )		517741	9					
ANR	518645	Condition	services . empty ( )	599:16:21844:21859	517741	0	True				
ANR	518646	CallExpression	services . empty ( )		517741	0					
ANR	518647	Callee	services . empty		517741	0					
ANR	518648	MemberAccess	services . empty		517741	0					
ANR	518649	Identifier	services		517741	0					
ANR	518650	Identifier	empty		517741	1					
ANR	518651	ArgumentList			517741	1					
ANR	518652	CompoundStatement		135:34:6153:6153	517741	1					
ANR	518653	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( classClass ) )"	600:16:21880:22063	517741	0	True				
ANR	518654	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( classClass ) )"		517741	0		=			
ANR	518655	Identifier	services		517741	0					
ANR	518656	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( classClass ) )"		517741	1					
ANR	518657	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518658	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518659	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518660	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518661	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518662	ArgumentList			517741	1					
ANR	518663	Identifier	query		517741	1					
ANR	518664	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518665	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518666	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518667	Callee	QStringLiteral		517741	0					
ANR	518668	Identifier	QStringLiteral		517741	0					
ANR	518669	ArgumentList	"""Application"""		517741	1					
ANR	518670	Argument	"""Application"""		517741	0					
ANR	518671	PrimaryExpression	"""Application"""		517741	0					
ANR	518672	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( classClass )"		517741	1					
ANR	518673	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg ( classClass )"		517741	0					
ANR	518674	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg"		517741	0					
ANR	518675	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg"		517741	0					
ANR	518676	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" )"		517741	0					
ANR	518677	Callee	QStringLiteral		517741	0					
ANR	518678	Identifier	QStringLiteral		517741	0					
ANR	518679	ArgumentList	"""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"""		517741	1					
ANR	518680	Argument	"""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"""		517741	0					
ANR	518681	PrimaryExpression	"""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"""		517741	0					
ANR	518682	Identifier	arg		517741	1					
ANR	518683	ArgumentList	classClass		517741	1					
ANR	518684	Argument	classClass		517741	0					
ANR	518685	Identifier	classClass		517741	0					
ANR	518686	IfStatement	if ( services . empty ( ) && ! triedPid )		517741	10					
ANR	518687	Condition	services . empty ( ) && ! triedPid	605:12:22212:22240	517741	0	True				
ANR	518688	AndExpression	services . empty ( ) && ! triedPid		517741	0		&&			
ANR	518689	CallExpression	services . empty ( )		517741	0					
ANR	518690	Callee	services . empty		517741	0					
ANR	518691	MemberAccess	services . empty		517741	0					
ANR	518692	Identifier	services		517741	0					
ANR	518693	Identifier	empty		517741	1					
ANR	518694	ArgumentList			517741	1					
ANR	518695	UnaryOperationExpression	! triedPid		517741	1					
ANR	518696	UnaryOperator	!		517741	0					
ANR	518697	Identifier	triedPid		517741	1					
ANR	518698	CompoundStatement		141:43:6534:6534	517741	1					
ANR	518699	ExpressionStatement	services = servicesFromPid ( pid )	606:12:22257:22288	517741	0	True				
ANR	518700	AssignmentExpression	services = servicesFromPid ( pid )		517741	0		=			
ANR	518701	Identifier	services		517741	0					
ANR	518702	CallExpression	servicesFromPid ( pid )		517741	1					
ANR	518703	Callee	servicesFromPid		517741	0					
ANR	518704	Identifier	servicesFromPid		517741	0					
ANR	518705	ArgumentList	pid		517741	1					
ANR	518706	Argument	pid		517741	0					
ANR	518707	Identifier	pid		517741	0					
ANR	518708	IfStatement	if ( services . empty ( ) || services . at ( 0 ) -> desktopEntryName ( ) . isEmpty ( ) )		517741	7					
ANR	518709	Condition	services . empty ( ) || services . at ( 0 ) -> desktopEntryName ( ) . isEmpty ( )	623:8:23116:23179	517741	0	True				
ANR	518710	OrExpression	services . empty ( ) || services . at ( 0 ) -> desktopEntryName ( ) . isEmpty ( )		517741	0		||			
ANR	518711	CallExpression	services . empty ( )		517741	0					
ANR	518712	Callee	services . empty		517741	0					
ANR	518713	MemberAccess	services . empty		517741	0					
ANR	518714	Identifier	services		517741	0					
ANR	518715	Identifier	empty		517741	1					
ANR	518716	ArgumentList			517741	1					
ANR	518717	CallExpression	services . at ( 0 ) -> desktopEntryName ( ) . isEmpty ( )		517741	1					
ANR	518718	Callee	services . at ( 0 ) -> desktopEntryName ( ) . isEmpty		517741	0					
ANR	518719	MemberAccess	services . at ( 0 ) -> desktopEntryName ( ) . isEmpty		517741	0					
ANR	518720	CallExpression	services . at ( 0 ) -> desktopEntryName ( )		517741	0					
ANR	518721	Callee	services . at ( 0 ) -> desktopEntryName		517741	0					
ANR	518722	PtrMemberAccess	services . at ( 0 ) -> desktopEntryName		517741	0					
ANR	518723	CallExpression	services . at ( 0 )		517741	0					
ANR	518724	Callee	services . at		517741	0					
ANR	518725	MemberAccess	services . at		517741	0					
ANR	518726	Identifier	services		517741	0					
ANR	518727	Identifier	at		517741	1					
ANR	518728	ArgumentList	0		517741	1					
ANR	518729	Argument	0		517741	0					
ANR	518730	PrimaryExpression	0		517741	0					
ANR	518731	Identifier	desktopEntryName		517741	1					
ANR	518732	ArgumentList			517741	1					
ANR	518733	Identifier	isEmpty		517741	1					
ANR	518734	ArgumentList			517741	1					
ANR	518735	CompoundStatement		162:8:7670:7726	517741	1					
ANR	518736	Statement	auto	624:8:23192:23195	517741	0	True				
ANR	518737	ExpressionStatement	"matchingServices = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg ( classClass ) )"	624:13:23197:23369	517741	1	True				
ANR	518738	AssignmentExpression	"matchingServices = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg ( classClass ) )"		517741	0		=			
ANR	518739	Identifier	matchingServices		517741	0					
ANR	518740	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg ( classClass ) )"		517741	1					
ANR	518741	Callee	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518742	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		517741	0					
ANR	518743	CallExpression	KServiceTypeTrader :: self ( )		517741	0					
ANR	518744	Callee	KServiceTypeTrader :: self		517741	0					
ANR	518745	Identifier	KServiceTypeTrader :: self		517741	0					
ANR	518746	ArgumentList			517741	1					
ANR	518747	Identifier	query		517741	1					
ANR	518748	ArgumentList	"QStringLiteral ( ""Application"" )"		517741	1					
ANR	518749	Argument	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518750	CallExpression	"QStringLiteral ( ""Application"" )"		517741	0					
ANR	518751	Callee	QStringLiteral		517741	0					
ANR	518752	Identifier	QStringLiteral		517741	0					
ANR	518753	ArgumentList	"""Application"""		517741	1					
ANR	518754	Argument	"""Application"""		517741	0					
ANR	518755	PrimaryExpression	"""Application"""		517741	0					
ANR	518756	Argument	"QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg ( classClass )"		517741	1					
ANR	518757	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg ( classClass )"		517741	0					
ANR	518758	Callee	"QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg"		517741	0					
ANR	518759	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg"		517741	0					
ANR	518760	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" )"		517741	0					
ANR	518761	Callee	QStringLiteral		517741	0					
ANR	518762	Identifier	QStringLiteral		517741	0					
ANR	518763	ArgumentList	"""exist Exec and ('%1' ~~ DesktopEntryName)"""		517741	1					
ANR	518764	Argument	"""exist Exec and ('%1' ~~ DesktopEntryName)"""		517741	0					
ANR	518765	PrimaryExpression	"""exist Exec and ('%1' ~~ DesktopEntryName)"""		517741	0					
ANR	518766	Identifier	arg		517741	1					
ANR	518767	ArgumentList	classClass		517741	1					
ANR	518768	Argument	classClass		517741	0					
ANR	518769	Identifier	classClass		517741	0					
ANR	518770	IdentifierDeclStatement	QMutableListIterator < KService :: Ptr > it ( matchingServices ) ;	626:8:23379:23435	517741	2	True				
ANR	518771	IdentifierDecl	it ( matchingServices )		517741	0					
ANR	518772	IdentifierDeclType	QMutableListIterator < KService :: Ptr >		517741	0					
ANR	518773	Identifier	it		517741	1					
ANR	518774	Identifier	matchingServices		517741	2					
ANR	518775	WhileStatement	while ( it . hasNext ( ) )		517741	3					
ANR	518776	Condition	it . hasNext ( )	627:15:23452:23463	517741	0	True				
ANR	518777	CallExpression	it . hasNext ( )		517741	0					
ANR	518778	Callee	it . hasNext		517741	0					
ANR	518779	MemberAccess	it . hasNext		517741	0					
ANR	518780	Identifier	it		517741	0					
ANR	518781	Identifier	hasNext		517741	1					
ANR	518782	ArgumentList			517741	1					
ANR	518783	CompoundStatement		163:29:7757:7757	517741	1					
ANR	518784	Statement	auto	628:12:23480:23483	517741	0	True				
ANR	518785	ExpressionStatement	service = it . next ( )	628:17:23485:23504	517741	1	True				
ANR	518786	AssignmentExpression	service = it . next ( )		517741	0		=			
ANR	518787	Identifier	service		517741	0					
ANR	518788	CallExpression	it . next ( )		517741	1					
ANR	518789	Callee	it . next		517741	0					
ANR	518790	MemberAccess	it . next		517741	0					
ANR	518791	Identifier	it		517741	0					
ANR	518792	Identifier	next		517741	1					
ANR	518793	ArgumentList			517741	1					
ANR	518794	IfStatement	"if ( ! service -> desktopEntryName ( ) . endsWith ( ""."" + classClass ) )"		517741	2					
ANR	518795	Condition	"! service -> desktopEntryName ( ) . endsWith ( ""."" + classClass )"	629:16:23522:23576	517741	0	True				
ANR	518796	UnaryOperationExpression	"! service -> desktopEntryName ( ) . endsWith ( ""."" + classClass )"		517741	0					
ANR	518797	UnaryOperator	!		517741	0					
ANR	518798	CallExpression	"service -> desktopEntryName ( ) . endsWith ( ""."" + classClass )"		517741	1					
ANR	518799	Callee	service -> desktopEntryName ( ) . endsWith		517741	0					
ANR	518800	MemberAccess	service -> desktopEntryName ( ) . endsWith		517741	0					
ANR	518801	CallExpression	service -> desktopEntryName ( )		517741	0					
ANR	518802	Callee	service -> desktopEntryName		517741	0					
ANR	518803	PtrMemberAccess	service -> desktopEntryName		517741	0					
ANR	518804	Identifier	service		517741	0					
ANR	518805	Identifier	desktopEntryName		517741	1					
ANR	518806	ArgumentList			517741	1					
ANR	518807	Identifier	endsWith		517741	1					
ANR	518808	ArgumentList	"""."" + classClass"		517741	1					
ANR	518809	Argument	"""."" + classClass"		517741	0					
ANR	518810	AdditiveExpression	"""."" + classClass"		517741	0		+			
ANR	518811	PrimaryExpression	"""."""		517741	0					
ANR	518812	Identifier	classClass		517741	1					
ANR	518813	CompoundStatement		165:73:7870:7870	517741	1					
ANR	518814	ExpressionStatement	it . remove ( )	630:16:23597:23608	517741	0	True				
ANR	518815	CallExpression	it . remove ( )		517741	0					
ANR	518816	Callee	it . remove		517741	0					
ANR	518817	MemberAccess	it . remove		517741	0					
ANR	518818	Identifier	it		517741	0					
ANR	518819	Identifier	remove		517741	1					
ANR	518820	ArgumentList			517741	1					
ANR	518821	IfStatement	if ( matchingServices . length ( ) == 1 )		517741	4					
ANR	518822	Condition	matchingServices . length ( ) == 1	637:12:23955:23984	517741	0	True				
ANR	518823	EqualityExpression	matchingServices . length ( ) == 1		517741	0		==			
ANR	518824	CallExpression	matchingServices . length ( )		517741	0					
ANR	518825	Callee	matchingServices . length		517741	0					
ANR	518826	MemberAccess	matchingServices . length		517741	0					
ANR	518827	Identifier	matchingServices		517741	0					
ANR	518828	Identifier	length		517741	1					
ANR	518829	ArgumentList			517741	1					
ANR	518830	PrimaryExpression	1		517741	1					
ANR	518831	CompoundStatement		173:44:8278:8278	517741	1					
ANR	518832	ExpressionStatement	services = matchingServices	638:12:24001:24028	517741	0	True				
ANR	518833	AssignmentExpression	services = matchingServices		517741	0		=			
ANR	518834	Identifier	services		517741	0					
ANR	518835	Identifier	matchingServices		517741	1					
ANR	518836	IfStatement	if ( ! services . empty ( ) )		517741	8					
ANR	518837	Condition	! services . empty ( )	642:8:24055:24071	517741	0	True				
ANR	518838	UnaryOperationExpression	! services . empty ( )		517741	0					
ANR	518839	UnaryOperator	!		517741	0					
ANR	518840	CallExpression	services . empty ( )		517741	1					
ANR	518841	Callee	services . empty		517741	0					
ANR	518842	MemberAccess	services . empty		517741	0					
ANR	518843	Identifier	services		517741	0					
ANR	518844	Identifier	empty		517741	1					
ANR	518845	ArgumentList			517741	1					
ANR	518846	CompoundStatement		179:8:8375:8414	517741	1					
ANR	518847	IdentifierDeclStatement	QString path = services [ 0 ] -> entryPath ( ) ;	643:8:24084:24123	517741	0	True				
ANR	518848	IdentifierDecl	path = services [ 0 ] -> entryPath ( )		517741	0					
ANR	518849	IdentifierDeclType	QString		517741	0					
ANR	518850	Identifier	path		517741	1					
ANR	518851	AssignmentExpression	path = services [ 0 ] -> entryPath ( )		517741	2		=			
ANR	518852	Identifier	path		517741	0					
ANR	518853	CallExpression	services [ 0 ] -> entryPath ( )		517741	1					
ANR	518854	Callee	services [ 0 ] -> entryPath		517741	0					
ANR	518855	PtrMemberAccess	services [ 0 ] -> entryPath		517741	0					
ANR	518856	ArrayIndexing	services [ 0 ]		517741	0					
ANR	518857	Identifier	services		517741	0					
ANR	518858	PrimaryExpression	0		517741	1					
ANR	518859	Identifier	entryPath		517741	1					
ANR	518860	ArgumentList			517741	1					
ANR	518861	IfStatement	if ( path . isEmpty ( ) )		517741	1					
ANR	518862	Condition	path . isEmpty ( )	644:12:24137:24150	517741	0	True				
ANR	518863	CallExpression	path . isEmpty ( )		517741	0					
ANR	518864	Callee	path . isEmpty		517741	0					
ANR	518865	MemberAccess	path . isEmpty		517741	0					
ANR	518866	Identifier	path		517741	0					
ANR	518867	Identifier	isEmpty		517741	1					
ANR	518868	ArgumentList			517741	1					
ANR	518869	CompoundStatement		180:28:8444:8444	517741	1					
ANR	518870	ExpressionStatement	path = services [ 0 ] -> exec ( )	645:12:24167:24193	517741	0	True				
ANR	518871	AssignmentExpression	path = services [ 0 ] -> exec ( )		517741	0		=			
ANR	518872	Identifier	path		517741	0					
ANR	518873	CallExpression	services [ 0 ] -> exec ( )		517741	1					
ANR	518874	Callee	services [ 0 ] -> exec		517741	0					
ANR	518875	PtrMemberAccess	services [ 0 ] -> exec		517741	0					
ANR	518876	ArrayIndexing	services [ 0 ]		517741	0					
ANR	518877	Identifier	services		517741	0					
ANR	518878	PrimaryExpression	0		517741	1					
ANR	518879	Identifier	exec		517741	1					
ANR	518880	ArgumentList			517741	1					
ANR	518881	IfStatement	if ( ! path . isEmpty ( ) )		517741	2					
ANR	518882	Condition	! path . isEmpty ( )	648:12:24218:24232	517741	0	True				
ANR	518883	UnaryOperationExpression	! path . isEmpty ( )		517741	0					
ANR	518884	UnaryOperator	!		517741	0					
ANR	518885	CallExpression	path . isEmpty ( )		517741	1					
ANR	518886	Callee	path . isEmpty		517741	0					
ANR	518887	MemberAccess	path . isEmpty		517741	0					
ANR	518888	Identifier	path		517741	0					
ANR	518889	Identifier	isEmpty		517741	1					
ANR	518890	ArgumentList			517741	1					
ANR	518891	CompoundStatement		184:29:8526:8526	517741	1					
ANR	518892	ExpressionStatement	url = QUrl :: fromLocalFile ( path )	649:12:24249:24280	517741	0	True				
ANR	518893	AssignmentExpression	url = QUrl :: fromLocalFile ( path )		517741	0		=			
ANR	518894	Identifier	url		517741	0					
ANR	518895	CallExpression	QUrl :: fromLocalFile ( path )		517741	1					
ANR	518896	Callee	QUrl :: fromLocalFile		517741	0					
ANR	518897	Identifier	QUrl :: fromLocalFile		517741	0					
ANR	518898	ArgumentList	path		517741	1					
ANR	518899	Argument	path		517741	0					
ANR	518900	Identifier	path		517741	0					
ANR	518901	ReturnStatement	return url ;	653:4:24303:24313	517741	9	True				
ANR	518902	Identifier	url		517741	0					
ANR	518903	ReturnType	QUrl		517741	1					
ANR	518904	Identifier	XWindowTasksModel :: Private :: windowUrl		517741	2					
ANR	518905	ParameterList	WId window		517741	3					
ANR	518906	Parameter	WId window	464:43:15696:15705	517741	0	True				
ANR	518907	ParameterType	WId		517741	0					
ANR	518908	Identifier	window		517741	1					
ANR	518909	CFGEntryNode	ENTRY		517741		True				
ANR	518910	CFGExitNode	EXIT		517741		True				
ANR	518911	CFGErrorNode	ERROR		517741		True				
ANR	518912	Symbol	serviceSearchIdentifier		517741						
ANR	518913	Symbol	QUrl :: fromLocalFile		517741						
ANR	518914	Symbol	pid		517741						
ANR	518915	Symbol	rules		517741						
ANR	518916	Symbol	"QStringLiteral ( ""exist Exec and ('%1' ~~ DesktopEntryName)"" ) . arg"		517741						
ANR	518917	Symbol	QX11Info :: appRootWindow		517741						
ANR	518918	Symbol	propertyConfig		517741						
ANR	518919	Symbol	path		517741						
ANR	518920	Symbol	* KServiceTypeTrader :: self		517741						
ANR	518921	Symbol	services [ 0 ] -> exec		517741						
ANR	518922	Symbol	rewriteRulesGroup		517741						
ANR	518923	Symbol	matchCommandLineFirst		517741						
ANR	518924	Symbol	ruleGroup		517741						
ANR	518925	Symbol	classClass . isEmpty		517741						
ANR	518926	Symbol	NET :: WMPid		517741						
ANR	518927	Symbol	matchCommandLineFirst . contains		517741						
ANR	518928	Symbol	* services . at		517741						
ANR	518929	Symbol	* service		517741						
ANR	518930	Symbol	info		517741						
ANR	518931	Symbol	manualOnly . contains		517741						
ANR	518932	Symbol	regExp . match		517741						
ANR	518933	Symbol	url . isEmpty		517741						
ANR	518934	Symbol	services . at ( 0 ) -> desktopEntryName ( ) . isEmpty		517741						
ANR	518935	Symbol	it . hasNext		517741						
ANR	518936	Symbol	service -> desktopEntryName		517741						
ANR	518937	Symbol	it		517741						
ANR	518938	Symbol	matchProperty		517741						
ANR	518939	Symbol	regExp		517741						
ANR	518940	Symbol	servicesFromPid		517741						
ANR	518941	Symbol	QLatin1String		517741						
ANR	518942	Symbol	"QStringLiteral ( ""exist Exec and ('%1' =~ DesktopEntryName)"" ) . arg"		517741						
ANR	518943	Symbol	services . at ( 0 ) -> desktopEntryName		517741						
ANR	518944	Symbol	true		517741						
ANR	518945	Symbol	mapped		517741						
ANR	518946	Symbol	QStringLiteral		517741						
ANR	518947	Symbol	actualMatch		517741						
ANR	518948	Symbol	NETWinInfo		517741						
ANR	518949	Symbol	services . empty		517741						
ANR	518950	Symbol	"NETWinInfo ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMPid , 0 ) . pid"		517741						
ANR	518951	Symbol	match . captured		517741						
ANR	518952	Symbol	* * services		517741						
ANR	518953	Symbol	windowInfo		517741						
ANR	518954	Symbol	classClass		517741						
ANR	518955	Symbol	grp . readEntry		517741						
ANR	518956	Symbol	KServiceTypeTrader :: self		517741						
ANR	518957	Symbol	serviceUrl		517741						
ANR	518958	Symbol	className		517741						
ANR	518959	Symbol	matchingServices . length		517741						
ANR	518960	Symbol	rewriteGroup		517741						
ANR	518961	Symbol	set . readEntry		517741						
ANR	518962	Symbol	className . isEmpty		517741						
ANR	518963	Symbol	QString		517741						
ANR	518964	Symbol	services . at		517741						
ANR	518965	Symbol	services [ 0 ] -> entryPath		517741						
ANR	518966	Symbol	triedPid		517741						
ANR	518967	Symbol	manualOnly		517741						
ANR	518968	Symbol	ruleGroup . readEntry		517741						
ANR	518969	Symbol	info -> windowClassName		517741						
ANR	518970	Symbol	rewriteGroup . groupList		517741						
ANR	518971	Symbol	* services		517741						
ANR	518972	Symbol	"QStringLiteral ( ""exist Exec and ('%1' =~ StartupWMClass)"" ) . arg"		517741						
ANR	518973	Symbol	rewriteRulesGroup . hasGroup		517741						
ANR	518974	Symbol	set		517741						
ANR	518975	Symbol	grp		517741						
ANR	518976	Symbol	QX11Info :: connection		517741						
ANR	518977	Symbol	QStringList		517741						
ANR	518978	Symbol	false		517741						
ANR	518979	Symbol	match		517741						
ANR	518980	Symbol	actualMatch . isEmpty		517741						
ANR	518981	Symbol	services . isEmpty		517741						
ANR	518982	Symbol	services		517741						
ANR	518983	Symbol	it . next		517741						
ANR	518984	Symbol	info -> windowClassClass		517741						
ANR	518985	Symbol	url		517741						
ANR	518986	Symbol	"ruleGroup . readEntry ( QStringLiteral ( ""Target"" ) ) . arg"		517741						
ANR	518987	Symbol	mapped . endsWith		517741						
ANR	518988	Symbol	"QStringLiteral ( ""exist Exec and ('%1' =~ %2)"" ) . arg"		517741						
ANR	518989	Symbol	matchProperty . isEmpty		517741						
ANR	518990	Symbol	match . hasMatch		517741						
ANR	518991	Symbol	matchingServices		517741						
ANR	518992	Symbol	mapped . isEmpty		517741						
ANR	518993	Symbol	"QStringLiteral ( ""exist Exec and ('%1' =~ Name) and (not exist NoDisplay or not NoDisplay)"" ) . arg"		517741						
ANR	518994	Symbol	serviceSearchIdentifier . isEmpty		517741						
ANR	518995	Symbol	service		517741						
ANR	518996	Symbol	service -> desktopEntryName ( ) . endsWith		517741						
ANR	518997	Symbol	path . isEmpty		517741						
ANR	518998	Symbol	KServiceTypeTrader :: self ( ) -> query		517741						
ANR	518999	Symbol	QUrl		517741						
ANR	519000	Symbol	window		517741						
ANR	519001	Symbol	* info		517741						
ANR	519002	Symbol	rewrittenString		517741						
ANR	519003	Function	XWindowTasksModel :: Private :: launcherUrl	656:0:24318:25159							
ANR	519004	FunctionDef	"XWindowTasksModel :: Private :: launcherUrl (WId window , bool encodeFallbackIcon)"		519003	0					
ANR	519005	CompoundStatement		657:0:24400:25159	519003	0					
ANR	519006	IdentifierDeclStatement	const AppData & data = appData ( window ) ;	658:4:24406:24443	519003	0	True				
ANR	519007	IdentifierDecl	& data = appData ( window )		519003	0					
ANR	519008	IdentifierDeclType	const AppData &		519003	0					
ANR	519009	Identifier	data		519003	1					
ANR	519010	AssignmentExpression	& data = appData ( window )		519003	2		=			
ANR	519011	Identifier	data		519003	0					
ANR	519012	CallExpression	appData ( window )		519003	1					
ANR	519013	Callee	appData		519003	0					
ANR	519014	Identifier	appData		519003	0					
ANR	519015	ArgumentList	window		519003	1					
ANR	519016	Argument	window		519003	0					
ANR	519017	Identifier	window		519003	0					
ANR	519018	IfStatement	if ( ! encodeFallbackIcon || ! data . icon . name ( ) . isEmpty ( ) )		519003	1					
ANR	519019	Condition	! encodeFallbackIcon || ! data . icon . name ( ) . isEmpty ( )	660:8:24454:24503	519003	0	True				
ANR	519020	OrExpression	! encodeFallbackIcon || ! data . icon . name ( ) . isEmpty ( )		519003	0		||			
ANR	519021	UnaryOperationExpression	! encodeFallbackIcon		519003	0					
ANR	519022	UnaryOperator	!		519003	0					
ANR	519023	Identifier	encodeFallbackIcon		519003	1					
ANR	519024	UnaryOperationExpression	! data . icon . name ( ) . isEmpty ( )		519003	1					
ANR	519025	UnaryOperator	!		519003	0					
ANR	519026	CallExpression	data . icon . name ( ) . isEmpty ( )		519003	1					
ANR	519027	Callee	data . icon . name ( ) . isEmpty		519003	0					
ANR	519028	MemberAccess	data . icon . name ( ) . isEmpty		519003	0					
ANR	519029	CallExpression	data . icon . name ( )		519003	0					
ANR	519030	Callee	data . icon . name		519003	0					
ANR	519031	MemberAccess	data . icon . name		519003	0					
ANR	519032	MemberAccess	data . icon		519003	0					
ANR	519033	Identifier	data		519003	0					
ANR	519034	Identifier	icon		519003	1					
ANR	519035	Identifier	name		519003	1					
ANR	519036	ArgumentList			519003	1					
ANR	519037	Identifier	isEmpty		519003	1					
ANR	519038	ArgumentList			519003	1					
ANR	519039	CompoundStatement		4:60:105:105	519003	1					
ANR	519040	ReturnStatement	return data . url ;	661:8:24516:24531	519003	0	True				
ANR	519041	MemberAccess	data . url		519003	0					
ANR	519042	Identifier	data		519003	0					
ANR	519043	Identifier	url		519003	1					
ANR	519044	IdentifierDeclStatement	QUrl url = data . url ;	664:4:24544:24563	519003	2	True				
ANR	519045	IdentifierDecl	url = data . url		519003	0					
ANR	519046	IdentifierDeclType	QUrl		519003	0					
ANR	519047	Identifier	url		519003	1					
ANR	519048	AssignmentExpression	url = data . url		519003	2		=			
ANR	519049	Identifier	url		519003	0					
ANR	519050	MemberAccess	data . url		519003	1					
ANR	519051	Identifier	data		519003	0					
ANR	519052	Identifier	url		519003	1					
ANR	519053	IfStatement	if ( ! url . isValid ( ) )		519003	3					
ANR	519054	Condition	! url . isValid ( )	667:8:24649:24662	519003	0	True				
ANR	519055	UnaryOperationExpression	! url . isValid ( )		519003	0					
ANR	519056	UnaryOperator	!		519003	0					
ANR	519057	CallExpression	url . isValid ( )		519003	1					
ANR	519058	Callee	url . isValid		519003	0					
ANR	519059	MemberAccess	url . isValid		519003	0					
ANR	519060	Identifier	url		519003	0					
ANR	519061	Identifier	isValid		519003	1					
ANR	519062	ArgumentList			519003	1					
ANR	519063	CompoundStatement		11:24:264:264	519003	1					
ANR	519064	ReturnStatement	return QUrl ( ) ;	668:8:24675:24688	519003	0	True				
ANR	519065	CallExpression	QUrl ( )		519003	0					
ANR	519066	Callee	QUrl		519003	0					
ANR	519067	Identifier	QUrl		519003	0					
ANR	519068	ArgumentList			519003	1					
ANR	519069	IdentifierDeclStatement	"const QPixmap pixmap = KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false ) ;"	671:4:24701:24806	519003	4	True				
ANR	519070	IdentifierDecl	"pixmap = KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false )"		519003	0					
ANR	519071	IdentifierDeclType	const QPixmap		519003	0					
ANR	519072	Identifier	pixmap		519003	1					
ANR	519073	AssignmentExpression	"pixmap = KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false )"		519003	2		=			
ANR	519074	Identifier	pixmap		519003	0					
ANR	519075	CallExpression	"KWindowSystem :: icon ( window , KIconLoader :: SizeLarge , KIconLoader :: SizeLarge , false )"		519003	1					
ANR	519076	Callee	KWindowSystem :: icon		519003	0					
ANR	519077	Identifier	KWindowSystem :: icon		519003	0					
ANR	519078	ArgumentList	window		519003	1					
ANR	519079	Argument	window		519003	0					
ANR	519080	Identifier	window		519003	0					
ANR	519081	Argument	KIconLoader :: SizeLarge		519003	1					
ANR	519082	Identifier	KIconLoader :: SizeLarge		519003	0					
ANR	519083	Argument	KIconLoader :: SizeLarge		519003	2					
ANR	519084	Identifier	KIconLoader :: SizeLarge		519003	0					
ANR	519085	Argument	false		519003	3					
ANR	519086	Identifier	false		519003	0					
ANR	519087	IfStatement	if ( pixmap . isNull ( ) )		519003	5					
ANR	519088	Condition	pixmap . isNull ( )	672:8:24816:24830	519003	0	True				
ANR	519089	CallExpression	pixmap . isNull ( )		519003	0					
ANR	519090	Callee	pixmap . isNull		519003	0					
ANR	519091	MemberAccess	pixmap . isNull		519003	0					
ANR	519092	Identifier	pixmap		519003	0					
ANR	519093	Identifier	isNull		519003	1					
ANR	519094	ArgumentList			519003	1					
ANR	519095	CompoundStatement		16:25:432:432	519003	1					
ANR	519096	ReturnStatement	return data . url ;	673:8:24843:24858	519003	0	True				
ANR	519097	MemberAccess	data . url		519003	0					
ANR	519098	Identifier	data		519003	0					
ANR	519099	Identifier	url		519003	1					
ANR	519100	IdentifierDeclStatement	QUrlQuery uQuery ( url ) ;	675:4:24870:24891	519003	6	True				
ANR	519101	IdentifierDecl	uQuery ( url )		519003	0					
ANR	519102	IdentifierDeclType	QUrlQuery		519003	0					
ANR	519103	Identifier	uQuery		519003	1					
ANR	519104	Identifier	url		519003	2					
ANR	519105	IdentifierDeclStatement	QByteArray bytes ;	676:4:24897:24913	519003	7	True				
ANR	519106	IdentifierDecl	bytes		519003	0					
ANR	519107	IdentifierDeclType	QByteArray		519003	0					
ANR	519108	Identifier	bytes		519003	1					
ANR	519109	IdentifierDeclStatement	QBuffer buffer ( & bytes ) ;	677:4:24919:24941	519003	8	True				
ANR	519110	IdentifierDecl	buffer ( & bytes )		519003	0					
ANR	519111	IdentifierDeclType	QBuffer		519003	0					
ANR	519112	Identifier	buffer		519003	1					
ANR	519113	UnaryOperationExpression	& bytes		519003	2					
ANR	519114	UnaryOperator	&		519003	0					
ANR	519115	Identifier	bytes		519003	1					
ANR	519116	ExpressionStatement	buffer . open ( QIODevice :: WriteOnly )	678:4:24947:24980	519003	9	True				
ANR	519117	CallExpression	buffer . open ( QIODevice :: WriteOnly )		519003	0					
ANR	519118	Callee	buffer . open		519003	0					
ANR	519119	MemberAccess	buffer . open		519003	0					
ANR	519120	Identifier	buffer		519003	0					
ANR	519121	Identifier	open		519003	1					
ANR	519122	ArgumentList	QIODevice :: WriteOnly		519003	1					
ANR	519123	Argument	QIODevice :: WriteOnly		519003	0					
ANR	519124	Identifier	QIODevice :: WriteOnly		519003	0					
ANR	519125	ExpressionStatement	"pixmap . save ( & buffer , ""PNG"" )"	679:4:24986:25013	519003	10	True				
ANR	519126	CallExpression	"pixmap . save ( & buffer , ""PNG"" )"		519003	0					
ANR	519127	Callee	pixmap . save		519003	0					
ANR	519128	MemberAccess	pixmap . save		519003	0					
ANR	519129	Identifier	pixmap		519003	0					
ANR	519130	Identifier	save		519003	1					
ANR	519131	ArgumentList	& buffer		519003	1					
ANR	519132	Argument	& buffer		519003	0					
ANR	519133	UnaryOperationExpression	& buffer		519003	0					
ANR	519134	UnaryOperator	&		519003	0					
ANR	519135	Identifier	buffer		519003	1					
ANR	519136	Argument	"""PNG"""		519003	1					
ANR	519137	PrimaryExpression	"""PNG"""		519003	0					
ANR	519138	ExpressionStatement	"uQuery . addQueryItem ( QStringLiteral ( ""iconData"" ) , bytes . toBase64 ( QByteArray :: Base64UrlEncoding ) )"	680:4:25019:25113	519003	11	True				
ANR	519139	CallExpression	"uQuery . addQueryItem ( QStringLiteral ( ""iconData"" ) , bytes . toBase64 ( QByteArray :: Base64UrlEncoding ) )"		519003	0					
ANR	519140	Callee	uQuery . addQueryItem		519003	0					
ANR	519141	MemberAccess	uQuery . addQueryItem		519003	0					
ANR	519142	Identifier	uQuery		519003	0					
ANR	519143	Identifier	addQueryItem		519003	1					
ANR	519144	ArgumentList	"QStringLiteral ( ""iconData"" )"		519003	1					
ANR	519145	Argument	"QStringLiteral ( ""iconData"" )"		519003	0					
ANR	519146	CallExpression	"QStringLiteral ( ""iconData"" )"		519003	0					
ANR	519147	Callee	QStringLiteral		519003	0					
ANR	519148	Identifier	QStringLiteral		519003	0					
ANR	519149	ArgumentList	"""iconData"""		519003	1					
ANR	519150	Argument	"""iconData"""		519003	0					
ANR	519151	PrimaryExpression	"""iconData"""		519003	0					
ANR	519152	Argument	bytes . toBase64 ( QByteArray :: Base64UrlEncoding )		519003	1					
ANR	519153	CallExpression	bytes . toBase64 ( QByteArray :: Base64UrlEncoding )		519003	0					
ANR	519154	Callee	bytes . toBase64		519003	0					
ANR	519155	MemberAccess	bytes . toBase64		519003	0					
ANR	519156	Identifier	bytes		519003	0					
ANR	519157	Identifier	toBase64		519003	1					
ANR	519158	ArgumentList	QByteArray :: Base64UrlEncoding		519003	1					
ANR	519159	Argument	QByteArray :: Base64UrlEncoding		519003	0					
ANR	519160	Identifier	QByteArray :: Base64UrlEncoding		519003	0					
ANR	519161	ExpressionStatement	url . setQuery ( uQuery )	682:4:25120:25140	519003	12	True				
ANR	519162	CallExpression	url . setQuery ( uQuery )		519003	0					
ANR	519163	Callee	url . setQuery		519003	0					
ANR	519164	MemberAccess	url . setQuery		519003	0					
ANR	519165	Identifier	url		519003	0					
ANR	519166	Identifier	setQuery		519003	1					
ANR	519167	ArgumentList	uQuery		519003	1					
ANR	519168	Argument	uQuery		519003	0					
ANR	519169	Identifier	uQuery		519003	0					
ANR	519170	ReturnStatement	return url ;	684:4:25147:25157	519003	13	True				
ANR	519171	Identifier	url		519003	0					
ANR	519172	ReturnType	QUrl		519003	1					
ANR	519173	Identifier	XWindowTasksModel :: Private :: launcherUrl		519003	2					
ANR	519174	ParameterList	"WId window , bool encodeFallbackIcon"		519003	3					
ANR	519175	Parameter	WId window	656:45:24363:24372	519003	0	True				
ANR	519176	ParameterType	WId		519003	0					
ANR	519177	Identifier	window		519003	1					
ANR	519178	Parameter	bool encodeFallbackIcon	656:57:24375:24397	519003	1	True				
ANR	519179	ParameterType	bool		519003	0					
ANR	519180	Identifier	encodeFallbackIcon		519003	1					
ANR	519181	CFGEntryNode	ENTRY		519003		True				
ANR	519182	CFGExitNode	EXIT		519003		True				
ANR	519183	Symbol	uQuery		519003						
ANR	519184	Symbol	url . isValid		519003						
ANR	519185	Symbol	pixmap		519003						
ANR	519186	Symbol	data		519003						
ANR	519187	Symbol	data . icon . name ( ) . isEmpty		519003						
ANR	519188	Symbol	false		519003						
ANR	519189	Symbol	QByteArray :: Base64UrlEncoding		519003						
ANR	519190	Symbol	KIconLoader :: SizeLarge		519003						
ANR	519191	Symbol	appData		519003						
ANR	519192	Symbol	url		519003						
ANR	519193	Symbol	data . icon . name		519003						
ANR	519194	Symbol	data . url		519003						
ANR	519195	Symbol	KWindowSystem :: icon		519003						
ANR	519196	Symbol	& buffer		519003						
ANR	519197	Symbol	encodeFallbackIcon		519003						
ANR	519198	Symbol	bytes		519003						
ANR	519199	Symbol	QUrl		519003						
ANR	519200	Symbol	QIODevice :: WriteOnly		519003						
ANR	519201	Symbol	bytes . toBase64		519003						
ANR	519202	Symbol	data . icon		519003						
ANR	519203	Symbol	pixmap . isNull		519003						
ANR	519204	Symbol	QStringLiteral		519003						
ANR	519205	Symbol	window		519003						
ANR	519206	Symbol	buffer		519003						
ANR	519207	DeclStmt									
ANR	519208	Decl							KSysGuard :: Processes	KSysGuard :: Processes	procs
ANR	519209	DeclStmt									
ANR	519210	Decl							KSysGuard :: Process	KSysGuard :: Process *	proc
ANR	519211	DeclStmt									
ANR	519212	Decl							QString	QString	cmdline
ANR	519213	DeclStmt									
ANR	519214	Decl							KService :: List	KService :: List	services
ANR	519215	DeclStmt									
ANR	519216	Decl							int	int	slash
ANR	519217	DeclStmt									
ANR	519218	Decl							QString	QString	path
ANR	519219	DeclStmt									
ANR	519220	Decl							QString	QString	absolutePath
ANR	519221	Function	XWindowTasksModel :: Private :: servicesFromPid	738:0:26744:28645							
ANR	519222	FunctionDef	XWindowTasksModel :: Private :: servicesFromPid (int pid)		519221	0					
ANR	519223	CompoundStatement		739:0:26812:28645	519221	0					
ANR	519224	IdentifierDeclStatement	KService :: List services ;	741:4:26862:26885	519221	0	True				
ANR	519225	IdentifierDecl	services		519221	0					
ANR	519226	IdentifierDeclType	KService :: List		519221	0					
ANR	519227	Identifier	services		519221	1					
ANR	519228	IfStatement	if ( pid == 0 )		519221	1					
ANR	519229	Condition	pid == 0	743:8:26896:26903	519221	0	True				
ANR	519230	EqualityExpression	pid == 0		519221	0		==			
ANR	519231	Identifier	pid		519221	0					
ANR	519232	PrimaryExpression	0		519221	1					
ANR	519233	CompoundStatement		5:18:93:93	519221	1					
ANR	519234	ReturnStatement	return services ;	744:8:26916:26931	519221	0	True				
ANR	519235	Identifier	services		519221	0					
ANR	519236	IdentifierDeclStatement	KSysGuard :: Processes procs ;	747:4:26944:26970	519221	2	True				
ANR	519237	IdentifierDecl	procs		519221	0					
ANR	519238	IdentifierDeclType	KSysGuard :: Processes		519221	0					
ANR	519239	Identifier	procs		519221	1					
ANR	519240	ExpressionStatement	procs . updateOrAddProcess ( pid )	748:4:26976:27005	519221	3	True				
ANR	519241	CallExpression	procs . updateOrAddProcess ( pid )		519221	0					
ANR	519242	Callee	procs . updateOrAddProcess		519221	0					
ANR	519243	MemberAccess	procs . updateOrAddProcess		519221	0					
ANR	519244	Identifier	procs		519221	0					
ANR	519245	Identifier	updateOrAddProcess		519221	1					
ANR	519246	ArgumentList	pid		519221	1					
ANR	519247	Argument	pid		519221	0					
ANR	519248	Identifier	pid		519221	0					
ANR	519249	IdentifierDeclStatement	KSysGuard :: Process * proc = procs . getProcess ( pid ) ;	750:4:27012:27060	519221	4	True				
ANR	519250	IdentifierDecl	* proc = procs . getProcess ( pid )		519221	0					
ANR	519251	IdentifierDeclType	KSysGuard :: Process *		519221	0					
ANR	519252	Identifier	proc		519221	1					
ANR	519253	AssignmentExpression	* proc = procs . getProcess ( pid )		519221	2		=			
ANR	519254	Identifier	proc		519221	0					
ANR	519255	CallExpression	procs . getProcess ( pid )		519221	1					
ANR	519256	Callee	procs . getProcess		519221	0					
ANR	519257	MemberAccess	procs . getProcess		519221	0					
ANR	519258	Identifier	procs		519221	0					
ANR	519259	Identifier	getProcess		519221	1					
ANR	519260	ArgumentList	pid		519221	1					
ANR	519261	Argument	pid		519221	0					
ANR	519262	Identifier	pid		519221	0					
ANR	519263	IdentifierDeclStatement	QString cmdline = proc ? proc -> command ( ) . simplified ( ) : QString ( ) ;	751:4:27066:27131	519221	5	True				
ANR	519264	IdentifierDecl	cmdline = proc ? proc -> command ( ) . simplified ( ) : QString ( )		519221	0					
ANR	519265	IdentifierDeclType	QString		519221	0					
ANR	519266	Identifier	cmdline		519221	1					
ANR	519267	AssignmentExpression	cmdline = proc ? proc -> command ( ) . simplified ( ) : QString ( )		519221	2		=			
ANR	519268	Identifier	cmdline		519221	0					
ANR	519269	ConditionalExpression	proc ? proc -> command ( ) . simplified ( ) : QString ( )		519221	1					
ANR	519270	Condition	proc		519221	0					
ANR	519271	Identifier	proc		519221	0					
ANR	519272	CallExpression	proc -> command ( ) . simplified ( )		519221	1					
ANR	519273	Callee	proc -> command ( ) . simplified		519221	0					
ANR	519274	MemberAccess	proc -> command ( ) . simplified		519221	0					
ANR	519275	CallExpression	proc -> command ( )		519221	0					
ANR	519276	Callee	proc -> command		519221	0					
ANR	519277	PtrMemberAccess	proc -> command		519221	0					
ANR	519278	Identifier	proc		519221	0					
ANR	519279	Identifier	command		519221	1					
ANR	519280	ArgumentList			519221	1					
ANR	519281	Identifier	simplified		519221	1					
ANR	519282	ArgumentList			519221	1					
ANR	519283	CallExpression	QString ( )		519221	2					
ANR	519284	Callee	QString		519221	0					
ANR	519285	Identifier	QString		519221	0					
ANR	519286	ArgumentList			519221	1					
ANR	519287	IfStatement	if ( cmdline . isEmpty ( ) )		519221	6					
ANR	519288	Condition	cmdline . isEmpty ( )	753:8:27183:27199	519221	0	True				
ANR	519289	CallExpression	cmdline . isEmpty ( )		519221	0					
ANR	519290	Callee	cmdline . isEmpty		519221	0					
ANR	519291	MemberAccess	cmdline . isEmpty		519221	0					
ANR	519292	Identifier	cmdline		519221	0					
ANR	519293	Identifier	isEmpty		519221	1					
ANR	519294	ArgumentList			519221	1					
ANR	519295	CompoundStatement		15:27:389:389	519221	1					
ANR	519296	ReturnStatement	return services ;	754:8:27212:27227	519221	0	True				
ANR	519297	Identifier	services		519221	0					
ANR	519298	IdentifierDeclStatement	const int firstSpace = cmdline . indexOf ( ' ' ) ;	757:4:27240:27283	519221	7	True				
ANR	519299	IdentifierDecl	firstSpace = cmdline . indexOf ( ' ' )		519221	0					
ANR	519300	IdentifierDeclType	const int		519221	0					
ANR	519301	Identifier	firstSpace		519221	1					
ANR	519302	AssignmentExpression	firstSpace = cmdline . indexOf ( ' ' )		519221	2		=			
ANR	519303	Identifier	firstSpace		519221	0					
ANR	519304	CallExpression	cmdline . indexOf ( ' ' )		519221	1					
ANR	519305	Callee	cmdline . indexOf		519221	0					
ANR	519306	MemberAccess	cmdline . indexOf		519221	0					
ANR	519307	Identifier	cmdline		519221	0					
ANR	519308	Identifier	indexOf		519221	1					
ANR	519309	ArgumentList	' '		519221	1					
ANR	519310	Argument	' '		519221	0					
ANR	519311	PrimaryExpression	' '		519221	0					
ANR	519312	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline ) )"	759:4:27290:27427	519221	8	True				
ANR	519313	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline ) )"		519221	0		=			
ANR	519314	Identifier	services		519221	0					
ANR	519315	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline ) )"		519221	1					
ANR	519316	Callee	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519317	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519318	CallExpression	KServiceTypeTrader :: self ( )		519221	0					
ANR	519319	Callee	KServiceTypeTrader :: self		519221	0					
ANR	519320	Identifier	KServiceTypeTrader :: self		519221	0					
ANR	519321	ArgumentList			519221	1					
ANR	519322	Identifier	query		519221	1					
ANR	519323	ArgumentList	"QStringLiteral ( ""Application"" )"		519221	1					
ANR	519324	Argument	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519325	CallExpression	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519326	Callee	QStringLiteral		519221	0					
ANR	519327	Identifier	QStringLiteral		519221	0					
ANR	519328	ArgumentList	"""Application"""		519221	1					
ANR	519329	Argument	"""Application"""		519221	0					
ANR	519330	PrimaryExpression	"""Application"""		519221	0					
ANR	519331	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline )"		519221	1					
ANR	519332	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline )"		519221	0					
ANR	519333	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519334	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519335	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" )"		519221	0					
ANR	519336	Callee	QStringLiteral		519221	0					
ANR	519337	Identifier	QStringLiteral		519221	0					
ANR	519338	ArgumentList	"""exist Exec and ('%1' =~ Exec)"""		519221	1					
ANR	519339	Argument	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519340	PrimaryExpression	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519341	Identifier	arg		519221	1					
ANR	519342	ArgumentList	cmdline		519221	1					
ANR	519343	Argument	cmdline		519221	0					
ANR	519344	Identifier	cmdline		519221	0					
ANR	519345	IfStatement	if ( services . empty ( ) )		519221	9					
ANR	519346	Condition	services . empty ( )	760:8:27437:27452	519221	0	True				
ANR	519347	CallExpression	services . empty ( )		519221	0					
ANR	519348	Callee	services . empty		519221	0					
ANR	519349	MemberAccess	services . empty		519221	0					
ANR	519350	Identifier	services		519221	0					
ANR	519351	Identifier	empty		519221	1					
ANR	519352	ArgumentList			519221	1					
ANR	519353	CompoundStatement		24:8:731:779	519221	1					
ANR	519354	IdentifierDeclStatement	"int slash = cmdline . lastIndexOf ( '/' , firstSpace ) ;"	762:8:27544:27592	519221	0	True				
ANR	519355	IdentifierDecl	"slash = cmdline . lastIndexOf ( '/' , firstSpace )"		519221	0					
ANR	519356	IdentifierDeclType	int		519221	0					
ANR	519357	Identifier	slash		519221	1					
ANR	519358	AssignmentExpression	"slash = cmdline . lastIndexOf ( '/' , firstSpace )"		519221	2		=			
ANR	519359	Identifier	slash		519221	0					
ANR	519360	CallExpression	"cmdline . lastIndexOf ( '/' , firstSpace )"		519221	1					
ANR	519361	Callee	cmdline . lastIndexOf		519221	0					
ANR	519362	MemberAccess	cmdline . lastIndexOf		519221	0					
ANR	519363	Identifier	cmdline		519221	0					
ANR	519364	Identifier	lastIndexOf		519221	1					
ANR	519365	ArgumentList	'/'		519221	1					
ANR	519366	Argument	'/'		519221	0					
ANR	519367	PrimaryExpression	'/'		519221	0					
ANR	519368	Argument	firstSpace		519221	1					
ANR	519369	Identifier	firstSpace		519221	0					
ANR	519370	IfStatement	if ( slash > 0 )		519221	1					
ANR	519371	Condition	slash > 0	763:12:27606:27614	519221	0	True				
ANR	519372	RelationalExpression	slash > 0		519221	0		>			
ANR	519373	Identifier	slash		519221	0					
ANR	519374	PrimaryExpression	0		519221	1					
ANR	519375	CompoundStatement		25:23:804:804	519221	1					
ANR	519376	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) ) )"	764:12:27631:27783	519221	0	True				
ANR	519377	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) ) )"		519221	0		=			
ANR	519378	Identifier	services		519221	0					
ANR	519379	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) ) )"		519221	1					
ANR	519380	Callee	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519381	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519382	CallExpression	KServiceTypeTrader :: self ( )		519221	0					
ANR	519383	Callee	KServiceTypeTrader :: self		519221	0					
ANR	519384	Identifier	KServiceTypeTrader :: self		519221	0					
ANR	519385	ArgumentList			519221	1					
ANR	519386	Identifier	query		519221	1					
ANR	519387	ArgumentList	"QStringLiteral ( ""Application"" )"		519221	1					
ANR	519388	Argument	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519389	CallExpression	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519390	Callee	QStringLiteral		519221	0					
ANR	519391	Identifier	QStringLiteral		519221	0					
ANR	519392	ArgumentList	"""Application"""		519221	1					
ANR	519393	Argument	"""Application"""		519221	0					
ANR	519394	PrimaryExpression	"""Application"""		519221	0					
ANR	519395	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) )"		519221	1					
ANR	519396	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) )"		519221	0					
ANR	519397	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519398	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519399	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" )"		519221	0					
ANR	519400	Callee	QStringLiteral		519221	0					
ANR	519401	Identifier	QStringLiteral		519221	0					
ANR	519402	ArgumentList	"""exist Exec and ('%1' =~ Exec)"""		519221	1					
ANR	519403	Argument	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519404	PrimaryExpression	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519405	Identifier	arg		519221	1					
ANR	519406	ArgumentList	cmdline . mid ( slash + 1 )		519221	1					
ANR	519407	Argument	cmdline . mid ( slash + 1 )		519221	0					
ANR	519408	CallExpression	cmdline . mid ( slash + 1 )		519221	0					
ANR	519409	Callee	cmdline . mid		519221	0					
ANR	519410	MemberAccess	cmdline . mid		519221	0					
ANR	519411	Identifier	cmdline		519221	0					
ANR	519412	Identifier	mid		519221	1					
ANR	519413	ArgumentList	slash + 1		519221	1					
ANR	519414	Argument	slash + 1		519221	0					
ANR	519415	AdditiveExpression	slash + 1		519221	0		+			
ANR	519416	Identifier	slash		519221	0					
ANR	519417	PrimaryExpression	1		519221	1					
ANR	519418	IfStatement	if ( services . empty ( ) && firstSpace > 0 )		519221	10					
ANR	519419	Condition	services . empty ( ) && firstSpace > 0	768:8:27810:27843	519221	0	True				
ANR	519420	AndExpression	services . empty ( ) && firstSpace > 0		519221	0		&&			
ANR	519421	CallExpression	services . empty ( )		519221	0					
ANR	519422	Callee	services . empty		519221	0					
ANR	519423	MemberAccess	services . empty		519221	0					
ANR	519424	Identifier	services		519221	0					
ANR	519425	Identifier	empty		519221	1					
ANR	519426	ArgumentList			519221	1					
ANR	519427	RelationalExpression	firstSpace > 0		519221	1		>			
ANR	519428	Identifier	firstSpace		519221	0					
ANR	519429	PrimaryExpression	0		519221	1					
ANR	519430	CompoundStatement		35:8:1295:1331	519221	1					
ANR	519431	ExpressionStatement	cmdline = cmdline . left ( firstSpace )	770:8:27916:27950	519221	0	True				
ANR	519432	AssignmentExpression	cmdline = cmdline . left ( firstSpace )		519221	0		=			
ANR	519433	Identifier	cmdline		519221	0					
ANR	519434	CallExpression	cmdline . left ( firstSpace )		519221	1					
ANR	519435	Callee	cmdline . left		519221	0					
ANR	519436	MemberAccess	cmdline . left		519221	0					
ANR	519437	Identifier	cmdline		519221	0					
ANR	519438	Identifier	left		519221	1					
ANR	519439	ArgumentList	firstSpace		519221	1					
ANR	519440	Argument	firstSpace		519221	0					
ANR	519441	Identifier	firstSpace		519221	0					
ANR	519442	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline ) )"	771:8:27960:28097	519221	1	True				
ANR	519443	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline ) )"		519221	0		=			
ANR	519444	Identifier	services		519221	0					
ANR	519445	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline ) )"		519221	1					
ANR	519446	Callee	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519447	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519448	CallExpression	KServiceTypeTrader :: self ( )		519221	0					
ANR	519449	Callee	KServiceTypeTrader :: self		519221	0					
ANR	519450	Identifier	KServiceTypeTrader :: self		519221	0					
ANR	519451	ArgumentList			519221	1					
ANR	519452	Identifier	query		519221	1					
ANR	519453	ArgumentList	"QStringLiteral ( ""Application"" )"		519221	1					
ANR	519454	Argument	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519455	CallExpression	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519456	Callee	QStringLiteral		519221	0					
ANR	519457	Identifier	QStringLiteral		519221	0					
ANR	519458	ArgumentList	"""Application"""		519221	1					
ANR	519459	Argument	"""Application"""		519221	0					
ANR	519460	PrimaryExpression	"""Application"""		519221	0					
ANR	519461	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline )"		519221	1					
ANR	519462	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline )"		519221	0					
ANR	519463	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519464	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519465	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" )"		519221	0					
ANR	519466	Callee	QStringLiteral		519221	0					
ANR	519467	Identifier	QStringLiteral		519221	0					
ANR	519468	ArgumentList	"""exist Exec and ('%1' =~ Exec)"""		519221	1					
ANR	519469	Argument	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519470	PrimaryExpression	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519471	Identifier	arg		519221	1					
ANR	519472	ArgumentList	cmdline		519221	1					
ANR	519473	Argument	cmdline		519221	0					
ANR	519474	Identifier	cmdline		519221	0					
ANR	519475	IdentifierDeclStatement	int slash = cmdline . lastIndexOf ( '/' ) ;	773:8:28108:28144	519221	2	True				
ANR	519476	IdentifierDecl	slash = cmdline . lastIndexOf ( '/' )		519221	0					
ANR	519477	IdentifierDeclType	int		519221	0					
ANR	519478	Identifier	slash		519221	1					
ANR	519479	AssignmentExpression	slash = cmdline . lastIndexOf ( '/' )		519221	2		=			
ANR	519480	Identifier	slash		519221	0					
ANR	519481	CallExpression	cmdline . lastIndexOf ( '/' )		519221	1					
ANR	519482	Callee	cmdline . lastIndexOf		519221	0					
ANR	519483	MemberAccess	cmdline . lastIndexOf		519221	0					
ANR	519484	Identifier	cmdline		519221	0					
ANR	519485	Identifier	lastIndexOf		519221	1					
ANR	519486	ArgumentList	'/'		519221	1					
ANR	519487	Argument	'/'		519221	0					
ANR	519488	PrimaryExpression	'/'		519221	0					
ANR	519489	IfStatement	if ( slash > 0 )		519221	3					
ANR	519490	Condition	slash > 0	774:12:28158:28166	519221	0	True				
ANR	519491	RelationalExpression	slash > 0		519221	0		>			
ANR	519492	Identifier	slash		519221	0					
ANR	519493	PrimaryExpression	0		519221	1					
ANR	519494	CompoundStatement		36:23:1356:1356	519221	1					
ANR	519495	ExpressionStatement	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) ) )"	775:12:28183:28335	519221	0	True				
ANR	519496	AssignmentExpression	"services = KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) ) )"		519221	0		=			
ANR	519497	Identifier	services		519221	0					
ANR	519498	CallExpression	"KServiceTypeTrader :: self ( ) -> query ( QStringLiteral ( ""Application"" ) , QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) ) )"		519221	1					
ANR	519499	Callee	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519500	PtrMemberAccess	KServiceTypeTrader :: self ( ) -> query		519221	0					
ANR	519501	CallExpression	KServiceTypeTrader :: self ( )		519221	0					
ANR	519502	Callee	KServiceTypeTrader :: self		519221	0					
ANR	519503	Identifier	KServiceTypeTrader :: self		519221	0					
ANR	519504	ArgumentList			519221	1					
ANR	519505	Identifier	query		519221	1					
ANR	519506	ArgumentList	"QStringLiteral ( ""Application"" )"		519221	1					
ANR	519507	Argument	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519508	CallExpression	"QStringLiteral ( ""Application"" )"		519221	0					
ANR	519509	Callee	QStringLiteral		519221	0					
ANR	519510	Identifier	QStringLiteral		519221	0					
ANR	519511	ArgumentList	"""Application"""		519221	1					
ANR	519512	Argument	"""Application"""		519221	0					
ANR	519513	PrimaryExpression	"""Application"""		519221	0					
ANR	519514	Argument	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) )"		519221	1					
ANR	519515	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg ( cmdline . mid ( slash + 1 ) )"		519221	0					
ANR	519516	Callee	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519517	MemberAccess	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221	0					
ANR	519518	CallExpression	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" )"		519221	0					
ANR	519519	Callee	QStringLiteral		519221	0					
ANR	519520	Identifier	QStringLiteral		519221	0					
ANR	519521	ArgumentList	"""exist Exec and ('%1' =~ Exec)"""		519221	1					
ANR	519522	Argument	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519523	PrimaryExpression	"""exist Exec and ('%1' =~ Exec)"""		519221	0					
ANR	519524	Identifier	arg		519221	1					
ANR	519525	ArgumentList	cmdline . mid ( slash + 1 )		519221	1					
ANR	519526	Argument	cmdline . mid ( slash + 1 )		519221	0					
ANR	519527	CallExpression	cmdline . mid ( slash + 1 )		519221	0					
ANR	519528	Callee	cmdline . mid		519221	0					
ANR	519529	MemberAccess	cmdline . mid		519221	0					
ANR	519530	Identifier	cmdline		519221	0					
ANR	519531	Identifier	mid		519221	1					
ANR	519532	ArgumentList	slash + 1		519221	1					
ANR	519533	Argument	slash + 1		519221	0					
ANR	519534	AdditiveExpression	slash + 1		519221	0		+			
ANR	519535	Identifier	slash		519221	0					
ANR	519536	PrimaryExpression	1		519221	1					
ANR	519537	IfStatement	if ( services . empty ( ) && proc && ! QStandardPaths :: findExecutable ( cmdline ) . isEmpty ( ) )		519221	11					
ANR	519538	Condition	services . empty ( ) && proc && ! QStandardPaths :: findExecutable ( cmdline ) . isEmpty ( )	779:8:28362:28439	519221	0	True				
ANR	519539	AndExpression	services . empty ( ) && proc && ! QStandardPaths :: findExecutable ( cmdline ) . isEmpty ( )		519221	0		&&			
ANR	519540	CallExpression	services . empty ( )		519221	0					
ANR	519541	Callee	services . empty		519221	0					
ANR	519542	MemberAccess	services . empty		519221	0					
ANR	519543	Identifier	services		519221	0					
ANR	519544	Identifier	empty		519221	1					
ANR	519545	ArgumentList			519221	1					
ANR	519546	AndExpression	proc && ! QStandardPaths :: findExecutable ( cmdline ) . isEmpty ( )		519221	1		&&			
ANR	519547	Identifier	proc		519221	0					
ANR	519548	UnaryOperationExpression	! QStandardPaths :: findExecutable ( cmdline ) . isEmpty ( )		519221	1					
ANR	519549	UnaryOperator	!		519221	0					
ANR	519550	CallExpression	QStandardPaths :: findExecutable ( cmdline ) . isEmpty ( )		519221	1					
ANR	519551	Callee	QStandardPaths :: findExecutable ( cmdline ) . isEmpty		519221	0					
ANR	519552	MemberAccess	QStandardPaths :: findExecutable ( cmdline ) . isEmpty		519221	0					
ANR	519553	CallExpression	QStandardPaths :: findExecutable ( cmdline )		519221	0					
ANR	519554	Callee	QStandardPaths :: findExecutable		519221	0					
ANR	519555	Identifier	QStandardPaths :: findExecutable		519221	0					
ANR	519556	ArgumentList	cmdline		519221	1					
ANR	519557	Argument	cmdline		519221	0					
ANR	519558	Identifier	cmdline		519221	0					
ANR	519559	Identifier	isEmpty		519221	1					
ANR	519560	ArgumentList			519221	1					
ANR	519561	CompoundStatement		41:88:1629:1629	519221	1					
ANR	519562	ExpressionStatement	"services << QExplicitlySharedDataPointer < KService > ( new KService ( proc -> name ( ) , cmdline , QString ( ) ) )"	781:8:28518:28616	519221	0	True				
ANR	519563	RelationalExpression	"services << QExplicitlySharedDataPointer < KService > ( new KService ( proc -> name ( ) , cmdline , QString ( ) ) )"		519221	0		<			
ANR	519564	ShiftExpression	services << QExplicitlySharedDataPointer		519221	0		<<			
ANR	519565	Identifier	services		519221	0					
ANR	519566	Identifier	QExplicitlySharedDataPointer		519221	1					
ANR	519567	RelationalExpression	"KService > ( new KService ( proc -> name ( ) , cmdline , QString ( ) ) )"		519221	1		>			
ANR	519568	Identifier	KService		519221	0					
ANR	519569	Expression	"proc -> name ( ) , cmdline , QString ( )"		519221	1					
ANR	519570	CallExpression	proc -> name ( )		519221	0					
ANR	519571	Callee	proc -> name		519221	0					
ANR	519572	PtrMemberAccess	proc -> name		519221	0					
ANR	519573	Identifier	proc		519221	0					
ANR	519574	Identifier	name		519221	1					
ANR	519575	ArgumentList			519221	1					
ANR	519576	Expression	"cmdline , QString ( )"		519221	1					
ANR	519577	Identifier	cmdline		519221	0					
ANR	519578	CallExpression	QString ( )		519221	1					
ANR	519579	Callee	QString		519221	0					
ANR	519580	Identifier	QString		519221	0					
ANR	519581	ArgumentList			519221	1					
ANR	519582	ReturnStatement	return services ;	783:4:28628:28643	519221	12	True				
ANR	519583	Identifier	services		519221	0					
ANR	519584	ReturnType	KService :: List		519221	1					
ANR	519585	Identifier	XWindowTasksModel :: Private :: servicesFromPid		519221	2					
ANR	519586	ParameterList	int pid		519221	3					
ANR	519587	Parameter	int pid	738:59:26803:26809	519221	0	True				
ANR	519588	ParameterType	int		519221	0					
ANR	519589	Identifier	pid		519221	1					
ANR	519590	CFGEntryNode	ENTRY		519221		True				
ANR	519591	CFGExitNode	EXIT		519221		True				
ANR	519592	Symbol	cmdline . lastIndexOf		519221						
ANR	519593	Symbol	procs		519221						
ANR	519594	Symbol	proc -> command		519221						
ANR	519595	Symbol	KServiceTypeTrader :: self		519221						
ANR	519596	Symbol	firstSpace		519221						
ANR	519597	Symbol	pid		519221						
ANR	519598	Symbol	"QStringLiteral ( ""exist Exec and ('%1' =~ Exec)"" ) . arg"		519221						
ANR	519599	Symbol	QString		519221						
ANR	519600	Symbol	* KServiceTypeTrader :: self		519221						
ANR	519601	Symbol	cmdline		519221						
ANR	519602	Symbol	cmdline . mid		519221						
ANR	519603	Symbol	proc -> command ( ) . simplified		519221						
ANR	519604	Symbol	procs . getProcess		519221						
ANR	519605	Symbol	proc		519221						
ANR	519606	Symbol	cmdline . left		519221						
ANR	519607	Symbol	QStandardPaths :: findExecutable		519221						
ANR	519608	Symbol	services		519221						
ANR	519609	Symbol	* proc		519221						
ANR	519610	Symbol	cmdline . indexOf		519221						
ANR	519611	Symbol	QStandardPaths :: findExecutable ( cmdline ) . isEmpty		519221						
ANR	519612	Symbol	cmdline . isEmpty		519221						
ANR	519613	Symbol	KServiceTypeTrader :: self ( ) -> query		519221						
ANR	519614	Symbol	QStringLiteral		519221						
ANR	519615	Symbol	slash		519221						
ANR	519616	Symbol	services . empty		519221						
ANR	519617	Function	XWindowTasksModel :: Private :: activities	786:0:28648:29022							
ANR	519618	FunctionDef	XWindowTasksModel :: Private :: activities (WId window)		519617	0					
ANR	519619	CompoundStatement		787:0:28711:29022	519617	0					
ANR	519620	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , 0 , NET :: WM2Activities ) ;"	788:4:28717:28812	519617	0	True				
ANR	519621	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , 0 , NET :: WM2Activities )"		519617	0					
ANR	519622	IdentifierDeclType	NETWinInfo		519617	0					
ANR	519623	Identifier	ni		519617	1					
ANR	519624	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , 0 , NET :: WM2Activities"		519617	2					
ANR	519625	CallExpression	QX11Info :: connection ( )		519617	0					
ANR	519626	Callee	QX11Info :: connection		519617	0					
ANR	519627	Identifier	QX11Info :: connection		519617	0					
ANR	519628	ArgumentList			519617	1					
ANR	519629	Expression	"window , QX11Info :: appRootWindow ( ) , 0 , NET :: WM2Activities"		519617	1					
ANR	519630	Identifier	window		519617	0					
ANR	519631	Expression	"QX11Info :: appRootWindow ( ) , 0 , NET :: WM2Activities"		519617	1					
ANR	519632	CallExpression	QX11Info :: appRootWindow ( )		519617	0					
ANR	519633	Callee	QX11Info :: appRootWindow		519617	0					
ANR	519634	Identifier	QX11Info :: appRootWindow		519617	0					
ANR	519635	ArgumentList			519617	1					
ANR	519636	Expression	"0 , NET :: WM2Activities"		519617	1					
ANR	519637	PrimaryExpression	0		519617	0					
ANR	519638	Identifier	NET :: WM2Activities		519617	1					
ANR	519639	IdentifierDeclStatement	const QString result ( ni . activities ( ) ) ;	790:4:28819:28856	519617	1	True				
ANR	519640	IdentifierDecl	result ( ni . activities ( ) )		519617	0					
ANR	519641	IdentifierDeclType	const QString		519617	0					
ANR	519642	Identifier	result		519617	1					
ANR	519643	CallExpression	ni . activities ( )		519617	2					
ANR	519644	Callee	ni . activities		519617	0					
ANR	519645	MemberAccess	ni . activities		519617	0					
ANR	519646	Identifier	ni		519617	0					
ANR	519647	Identifier	activities		519617	1					
ANR	519648	ArgumentList			519617	1					
ANR	519649	IfStatement	"if ( ! result . isEmpty ( ) && result != QLatin1String ( ""00000000-0000-0000-0000-000000000000"" ) )"		519617	2					
ANR	519650	Condition	"! result . isEmpty ( ) && result != QLatin1String ( ""00000000-0000-0000-0000-000000000000"" )"	792:8:28867:28950	519617	0	True				
ANR	519651	AndExpression	"! result . isEmpty ( ) && result != QLatin1String ( ""00000000-0000-0000-0000-000000000000"" )"		519617	0		&&			
ANR	519652	UnaryOperationExpression	! result . isEmpty ( )		519617	0					
ANR	519653	UnaryOperator	!		519617	0					
ANR	519654	CallExpression	result . isEmpty ( )		519617	1					
ANR	519655	Callee	result . isEmpty		519617	0					
ANR	519656	MemberAccess	result . isEmpty		519617	0					
ANR	519657	Identifier	result		519617	0					
ANR	519658	Identifier	isEmpty		519617	1					
ANR	519659	ArgumentList			519617	1					
ANR	519660	EqualityExpression	"result != QLatin1String ( ""00000000-0000-0000-0000-000000000000"" )"		519617	1		!=			
ANR	519661	Identifier	result		519617	0					
ANR	519662	CallExpression	"QLatin1String ( ""00000000-0000-0000-0000-000000000000"" )"		519617	1					
ANR	519663	Callee	QLatin1String		519617	0					
ANR	519664	Identifier	QLatin1String		519617	0					
ANR	519665	ArgumentList	"""00000000-0000-0000-0000-000000000000"""		519617	1					
ANR	519666	Argument	"""00000000-0000-0000-0000-000000000000"""		519617	0					
ANR	519667	PrimaryExpression	"""00000000-0000-0000-0000-000000000000"""		519617	0					
ANR	519668	CompoundStatement		6:94:241:241	519617	1					
ANR	519669	ReturnStatement	"return result . split ( ',' ) ;"	793:8:28963:28987	519617	0	True				
ANR	519670	CallExpression	"result . split ( ',' )"		519617	0					
ANR	519671	Callee	result . split		519617	0					
ANR	519672	MemberAccess	result . split		519617	0					
ANR	519673	Identifier	result		519617	0					
ANR	519674	Identifier	split		519617	1					
ANR	519675	ArgumentList	"','"		519617	1					
ANR	519676	Argument	"','"		519617	0					
ANR	519677	PrimaryExpression	"','"		519617	0					
ANR	519678	ReturnStatement	return QStringList ( ) ;	796:4:29000:29020	519617	3	True				
ANR	519679	CallExpression	QStringList ( )		519617	0					
ANR	519680	Callee	QStringList		519617	0					
ANR	519681	Identifier	QStringList		519617	0					
ANR	519682	ArgumentList			519617	1					
ANR	519683	ReturnType	QStringList		519617	1					
ANR	519684	Identifier	XWindowTasksModel :: Private :: activities		519617	2					
ANR	519685	ParameterList	WId window		519617	3					
ANR	519686	Parameter	WId window	786:51:28699:28708	519617	0	True				
ANR	519687	ParameterType	WId		519617	0					
ANR	519688	Identifier	window		519617	1					
ANR	519689	CFGEntryNode	ENTRY		519617		True				
ANR	519690	CFGExitNode	EXIT		519617		True				
ANR	519691	Symbol	result		519617						
ANR	519692	Symbol	QLatin1String		519617						
ANR	519693	Symbol	QStringList		519617						
ANR	519694	Symbol	result . isEmpty		519617						
ANR	519695	Symbol	window		519617						
ANR	519696	Symbol	ni		519617						
ANR	519697	Symbol	result . split		519617						
ANR	519698	Function	XWindowTasksModel :: Private :: demandsAttention	799:0:29025:29279							
ANR	519699	FunctionDef	XWindowTasksModel :: Private :: demandsAttention (WId window)		519698	0					
ANR	519700	CompoundStatement		800:0:29087:29279	519698	0					
ANR	519701	IfStatement	if ( windows . contains ( window ) )		519698	0					
ANR	519702	Condition	windows . contains ( window )	801:8:29097:29120	519698	0	True				
ANR	519703	CallExpression	windows . contains ( window )		519698	0					
ANR	519704	Callee	windows . contains		519698	0					
ANR	519705	MemberAccess	windows . contains		519698	0					
ANR	519706	Identifier	windows		519698	0					
ANR	519707	Identifier	contains		519698	1					
ANR	519708	ArgumentList	window		519698	1					
ANR	519709	Argument	window		519698	0					
ANR	519710	Identifier	window		519698	0					
ANR	519711	CompoundStatement		2:34:35:35	519698	1					
ANR	519712	ReturnStatement	return ( ( windowInfo ( window ) -> hasState ( NET :: DemandsAttention ) ) || transientsDemandingAttention . contains ( window ) ) ;	802:8:29133:29252	519698	0	True				
ANR	519713	OrExpression	( windowInfo ( window ) -> hasState ( NET :: DemandsAttention ) ) || transientsDemandingAttention . contains ( window )		519698	0		||			
ANR	519714	CallExpression	windowInfo ( window ) -> hasState ( NET :: DemandsAttention )		519698	0					
ANR	519715	Callee	windowInfo ( window ) -> hasState		519698	0					
ANR	519716	PtrMemberAccess	windowInfo ( window ) -> hasState		519698	0					
ANR	519717	CallExpression	windowInfo ( window )		519698	0					
ANR	519718	Callee	windowInfo		519698	0					
ANR	519719	Identifier	windowInfo		519698	0					
ANR	519720	ArgumentList	window		519698	1					
ANR	519721	Argument	window		519698	0					
ANR	519722	Identifier	window		519698	0					
ANR	519723	Identifier	hasState		519698	1					
ANR	519724	ArgumentList	NET :: DemandsAttention		519698	1					
ANR	519725	Argument	NET :: DemandsAttention		519698	0					
ANR	519726	Identifier	NET :: DemandsAttention		519698	0					
ANR	519727	CallExpression	transientsDemandingAttention . contains ( window )		519698	1					
ANR	519728	Callee	transientsDemandingAttention . contains		519698	0					
ANR	519729	MemberAccess	transientsDemandingAttention . contains		519698	0					
ANR	519730	Identifier	transientsDemandingAttention		519698	0					
ANR	519731	Identifier	contains		519698	1					
ANR	519732	ArgumentList	window		519698	1					
ANR	519733	Argument	window		519698	0					
ANR	519734	Identifier	window		519698	0					
ANR	519735	ReturnStatement	return false ;	806:4:29265:29277	519698	1	True				
ANR	519736	Identifier	false		519698	0					
ANR	519737	ReturnType	bool		519698	1					
ANR	519738	Identifier	XWindowTasksModel :: Private :: demandsAttention		519698	2					
ANR	519739	ParameterList	WId window		519698	3					
ANR	519740	Parameter	WId window	799:50:29075:29084	519698	0	True				
ANR	519741	ParameterType	WId		519698	0					
ANR	519742	Identifier	window		519698	1					
ANR	519743	CFGEntryNode	ENTRY		519698		True				
ANR	519744	CFGExitNode	EXIT		519698		True				
ANR	519745	Symbol	windowInfo		519698						
ANR	519746	Symbol	transientsDemandingAttention		519698						
ANR	519747	Symbol	false		519698						
ANR	519748	Symbol	windowInfo ( window ) -> hasState		519698						
ANR	519749	Symbol	window		519698						
ANR	519750	Symbol	windows . contains		519698						
ANR	519751	Symbol	windows		519698						
ANR	519752	Symbol	transientsDemandingAttention . contains		519698						
ANR	519753	Symbol	* windowInfo		519698						
ANR	519754	Symbol	NET :: DemandsAttention		519698						
ANR	519755	Function	XWindowTasksModel :: XWindowTasksModel	809:0:29282:29419							
ANR	519756	FunctionDef	XWindowTasksModel :: XWindowTasksModel (QObject * parent)		519755	0					
ANR	519757	CompoundStatement		812:0:29402:29419	519755	0					
ANR	519758	ExpressionStatement	d -> init ( )	813:4:29408:29417	519755	0	True				
ANR	519759	CallExpression	d -> init ( )		519755	0					
ANR	519760	Callee	d -> init		519755	0					
ANR	519761	PtrMemberAccess	d -> init		519755	0					
ANR	519762	Identifier	d		519755	0					
ANR	519763	Identifier	init		519755	1					
ANR	519764	ArgumentList			519755	1					
ANR	519765	Identifier	XWindowTasksModel :: XWindowTasksModel		519755	1					
ANR	519766	ParameterList	QObject * parent		519755	2					
ANR	519767	Parameter	QObject * parent	809:37:29319:29333	519755	0	True				
ANR	519768	ParameterType	QObject *		519755	0					
ANR	519769	Identifier	parent		519755	1					
ANR	519770	CFGEntryNode	ENTRY		519755		True				
ANR	519771	CFGExitNode	EXIT		519755		True				
ANR	519772	Symbol	parent		519755						
ANR	519773	Symbol	d		519755						
ANR	519774	Function	XWindowTasksModel :: ~XWindowTasksModel	816:0:29422:29464							
ANR	519775	FunctionDef	XWindowTasksModel :: ~XWindowTasksModel ()		519774	0					
ANR	519776	CompoundStatement		817:0:29462:29464	519774	0					
ANR	519777	Identifier	XWindowTasksModel :: ~XWindowTasksModel		519774	1					
ANR	519778	ParameterList			519774	2					
ANR	519779	CFGEntryNode	ENTRY		519774		True				
ANR	519780	CFGExitNode	EXIT		519774		True				
ANR	519781	Function	XWindowTasksModel :: data	820:0:29467:33285							
ANR	519782	FunctionDef	"XWindowTasksModel :: data (const QModelIndex & index , int role)"		519781	0					
ANR	519783	CompoundStatement		821:0:29542:33285	519781	0					
ANR	519784	IfStatement	if ( ! index . isValid ( ) || index . row ( ) >= d -> windows . count ( ) )		519781	0					
ANR	519785	Condition	! index . isValid ( ) || index . row ( ) >= d -> windows . count ( )	822:8:29552:29605	519781	0	True				
ANR	519786	OrExpression	! index . isValid ( ) || index . row ( ) >= d -> windows . count ( )		519781	0		||			
ANR	519787	UnaryOperationExpression	! index . isValid ( )		519781	0					
ANR	519788	UnaryOperator	!		519781	0					
ANR	519789	CallExpression	index . isValid ( )		519781	1					
ANR	519790	Callee	index . isValid		519781	0					
ANR	519791	MemberAccess	index . isValid		519781	0					
ANR	519792	Identifier	index		519781	0					
ANR	519793	Identifier	isValid		519781	1					
ANR	519794	ArgumentList			519781	1					
ANR	519795	RelationalExpression	index . row ( ) >= d -> windows . count ( )		519781	1		>=			
ANR	519796	CallExpression	index . row ( )		519781	0					
ANR	519797	Callee	index . row		519781	0					
ANR	519798	MemberAccess	index . row		519781	0					
ANR	519799	Identifier	index		519781	0					
ANR	519800	Identifier	row		519781	1					
ANR	519801	ArgumentList			519781	1					
ANR	519802	CallExpression	d -> windows . count ( )		519781	1					
ANR	519803	Callee	d -> windows . count		519781	0					
ANR	519804	MemberAccess	d -> windows . count		519781	0					
ANR	519805	PtrMemberAccess	d -> windows		519781	0					
ANR	519806	Identifier	d		519781	0					
ANR	519807	Identifier	windows		519781	1					
ANR	519808	Identifier	count		519781	1					
ANR	519809	ArgumentList			519781	1					
ANR	519810	CompoundStatement		2:64:65:65	519781	1					
ANR	519811	ReturnStatement	return QVariant ( ) ;	823:8:29618:29635	519781	0	True				
ANR	519812	CallExpression	QVariant ( )		519781	0					
ANR	519813	Callee	QVariant		519781	0					
ANR	519814	Identifier	QVariant		519781	0					
ANR	519815	ArgumentList			519781	1					
ANR	519816	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	826:4:29648:29693	519781	1	True				
ANR	519817	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		519781	0					
ANR	519818	IdentifierDeclType	const WId		519781	0					
ANR	519819	Identifier	window		519781	1					
ANR	519820	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		519781	2		=			
ANR	519821	Identifier	window		519781	0					
ANR	519822	CallExpression	d -> windows . at ( index . row ( ) )		519781	1					
ANR	519823	Callee	d -> windows . at		519781	0					
ANR	519824	MemberAccess	d -> windows . at		519781	0					
ANR	519825	PtrMemberAccess	d -> windows		519781	0					
ANR	519826	Identifier	d		519781	0					
ANR	519827	Identifier	windows		519781	1					
ANR	519828	Identifier	at		519781	1					
ANR	519829	ArgumentList	index . row ( )		519781	1					
ANR	519830	Argument	index . row ( )		519781	0					
ANR	519831	CallExpression	index . row ( )		519781	0					
ANR	519832	Callee	index . row		519781	0					
ANR	519833	MemberAccess	index . row		519781	0					
ANR	519834	Identifier	index		519781	0					
ANR	519835	Identifier	row		519781	1					
ANR	519836	ArgumentList			519781	1					
ANR	519837	IfStatement	if ( role == Qt :: DisplayRole )		519781	2					
ANR	519838	Condition	role == Qt :: DisplayRole	828:8:29704:29726	519781	0	True				
ANR	519839	EqualityExpression	role == Qt :: DisplayRole		519781	0		==			
ANR	519840	Identifier	role		519781	0					
ANR	519841	Identifier	Qt :: DisplayRole		519781	1					
ANR	519842	CompoundStatement		8:33:186:186	519781	1					
ANR	519843	ReturnStatement	return d -> windowInfo ( window ) -> visibleName ( ) ;	829:8:29739:29782	519781	0	True				
ANR	519844	CallExpression	d -> windowInfo ( window ) -> visibleName ( )		519781	0					
ANR	519845	Callee	d -> windowInfo ( window ) -> visibleName		519781	0					
ANR	519846	PtrMemberAccess	d -> windowInfo ( window ) -> visibleName		519781	0					
ANR	519847	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	519848	Callee	d -> windowInfo		519781	0					
ANR	519849	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	519850	Identifier	d		519781	0					
ANR	519851	Identifier	windowInfo		519781	1					
ANR	519852	ArgumentList	window		519781	1					
ANR	519853	Argument	window		519781	0					
ANR	519854	Identifier	window		519781	0					
ANR	519855	Identifier	visibleName		519781	1					
ANR	519856	ArgumentList			519781	1					
ANR	519857	ElseStatement	else		519781	0					
ANR	519858	IfStatement	if ( role == Qt :: DecorationRole )		519781	0					
ANR	519859	Condition	role == Qt :: DecorationRole	830:15:29799:29824	519781	0	True				
ANR	519860	EqualityExpression	role == Qt :: DecorationRole		519781	0		==			
ANR	519861	Identifier	role		519781	0					
ANR	519862	Identifier	Qt :: DecorationRole		519781	1					
ANR	519863	CompoundStatement		10:43:284:284	519781	1					
ANR	519864	ReturnStatement	return d -> icon ( window ) ;	831:8:29837:29859	519781	0	True				
ANR	519865	CallExpression	d -> icon ( window )		519781	0					
ANR	519866	Callee	d -> icon		519781	0					
ANR	519867	PtrMemberAccess	d -> icon		519781	0					
ANR	519868	Identifier	d		519781	0					
ANR	519869	Identifier	icon		519781	1					
ANR	519870	ArgumentList	window		519781	1					
ANR	519871	Argument	window		519781	0					
ANR	519872	Identifier	window		519781	0					
ANR	519873	ElseStatement	else		519781	0					
ANR	519874	IfStatement	if ( role == AppId )		519781	0					
ANR	519875	Condition	role == AppId	832:15:29876:29888	519781	0	True				
ANR	519876	EqualityExpression	role == AppId		519781	0		==			
ANR	519877	Identifier	role		519781	0					
ANR	519878	Identifier	AppId		519781	1					
ANR	519879	CompoundStatement		12:30:348:348	519781	1					
ANR	519880	ReturnStatement	return d -> appData ( window ) . id ;	833:8:29901:29929	519781	0	True				
ANR	519881	MemberAccess	d -> appData ( window ) . id		519781	0					
ANR	519882	CallExpression	d -> appData ( window )		519781	0					
ANR	519883	Callee	d -> appData		519781	0					
ANR	519884	PtrMemberAccess	d -> appData		519781	0					
ANR	519885	Identifier	d		519781	0					
ANR	519886	Identifier	appData		519781	1					
ANR	519887	ArgumentList	window		519781	1					
ANR	519888	Argument	window		519781	0					
ANR	519889	Identifier	window		519781	0					
ANR	519890	Identifier	id		519781	1					
ANR	519891	ElseStatement	else		519781	0					
ANR	519892	IfStatement	if ( role == AppName )		519781	0					
ANR	519893	Condition	role == AppName	834:15:29946:29960	519781	0	True				
ANR	519894	EqualityExpression	role == AppName		519781	0		==			
ANR	519895	Identifier	role		519781	0					
ANR	519896	Identifier	AppName		519781	1					
ANR	519897	CompoundStatement		14:32:420:420	519781	1					
ANR	519898	ReturnStatement	return d -> appData ( window ) . name ;	835:8:29973:30003	519781	0	True				
ANR	519899	MemberAccess	d -> appData ( window ) . name		519781	0					
ANR	519900	CallExpression	d -> appData ( window )		519781	0					
ANR	519901	Callee	d -> appData		519781	0					
ANR	519902	PtrMemberAccess	d -> appData		519781	0					
ANR	519903	Identifier	d		519781	0					
ANR	519904	Identifier	appData		519781	1					
ANR	519905	ArgumentList	window		519781	1					
ANR	519906	Argument	window		519781	0					
ANR	519907	Identifier	window		519781	0					
ANR	519908	Identifier	name		519781	1					
ANR	519909	ElseStatement	else		519781	0					
ANR	519910	IfStatement	if ( role == GenericName )		519781	0					
ANR	519911	Condition	role == GenericName	836:15:30020:30038	519781	0	True				
ANR	519912	EqualityExpression	role == GenericName		519781	0		==			
ANR	519913	Identifier	role		519781	0					
ANR	519914	Identifier	GenericName		519781	1					
ANR	519915	CompoundStatement		16:36:498:498	519781	1					
ANR	519916	ReturnStatement	return d -> appData ( window ) . genericName ;	837:8:30051:30088	519781	0	True				
ANR	519917	MemberAccess	d -> appData ( window ) . genericName		519781	0					
ANR	519918	CallExpression	d -> appData ( window )		519781	0					
ANR	519919	Callee	d -> appData		519781	0					
ANR	519920	PtrMemberAccess	d -> appData		519781	0					
ANR	519921	Identifier	d		519781	0					
ANR	519922	Identifier	appData		519781	1					
ANR	519923	ArgumentList	window		519781	1					
ANR	519924	Argument	window		519781	0					
ANR	519925	Identifier	window		519781	0					
ANR	519926	Identifier	genericName		519781	1					
ANR	519927	ElseStatement	else		519781	0					
ANR	519928	IfStatement	if ( role == LauncherUrl )		519781	0					
ANR	519929	Condition	role == LauncherUrl	838:15:30105:30123	519781	0	True				
ANR	519930	EqualityExpression	role == LauncherUrl		519781	0		==			
ANR	519931	Identifier	role		519781	0					
ANR	519932	Identifier	LauncherUrl		519781	1					
ANR	519933	CompoundStatement		18:36:583:583	519781	1					
ANR	519934	ReturnStatement	return d -> launcherUrl ( window ) ;	839:8:30136:30165	519781	0	True				
ANR	519935	CallExpression	d -> launcherUrl ( window )		519781	0					
ANR	519936	Callee	d -> launcherUrl		519781	0					
ANR	519937	PtrMemberAccess	d -> launcherUrl		519781	0					
ANR	519938	Identifier	d		519781	0					
ANR	519939	Identifier	launcherUrl		519781	1					
ANR	519940	ArgumentList	window		519781	1					
ANR	519941	Argument	window		519781	0					
ANR	519942	Identifier	window		519781	0					
ANR	519943	ElseStatement	else		519781	0					
ANR	519944	IfStatement	if ( role == LauncherUrlWithoutIcon )		519781	0					
ANR	519945	Condition	role == LauncherUrlWithoutIcon	840:15:30182:30211	519781	0	True				
ANR	519946	EqualityExpression	role == LauncherUrlWithoutIcon		519781	0		==			
ANR	519947	Identifier	role		519781	0					
ANR	519948	Identifier	LauncherUrlWithoutIcon		519781	1					
ANR	519949	CompoundStatement		20:47:671:671	519781	1					
ANR	519950	ReturnStatement	"return d -> launcherUrl ( window , false ) ;"	841:8:30224:30285	519781	0	True				
ANR	519951	CallExpression	"d -> launcherUrl ( window , false )"		519781	0					
ANR	519952	Callee	d -> launcherUrl		519781	0					
ANR	519953	PtrMemberAccess	d -> launcherUrl		519781	0					
ANR	519954	Identifier	d		519781	0					
ANR	519955	Identifier	launcherUrl		519781	1					
ANR	519956	ArgumentList	window		519781	1					
ANR	519957	Argument	window		519781	0					
ANR	519958	Identifier	window		519781	0					
ANR	519959	Argument	false		519781	1					
ANR	519960	Identifier	false		519781	0					
ANR	519961	ElseStatement	else		519781	0					
ANR	519962	IfStatement	if ( role == LegacyWinIdList )		519781	0					
ANR	519963	Condition	role == LegacyWinIdList	842:15:30302:30324	519781	0	True				
ANR	519964	EqualityExpression	role == LegacyWinIdList		519781	0		==			
ANR	519965	Identifier	role		519781	0					
ANR	519966	Identifier	LegacyWinIdList		519781	1					
ANR	519967	CompoundStatement		22:40:784:784	519781	1					
ANR	519968	ReturnStatement	return QVariantList ( ) << window ;	843:8:30337:30368	519781	0	True				
ANR	519969	ShiftExpression	QVariantList ( ) << window		519781	0		<<			
ANR	519970	CallExpression	QVariantList ( )		519781	0					
ANR	519971	Callee	QVariantList		519781	0					
ANR	519972	Identifier	QVariantList		519781	0					
ANR	519973	ArgumentList			519781	1					
ANR	519974	Identifier	window		519781	1					
ANR	519975	ElseStatement	else		519781	0					
ANR	519976	IfStatement	if ( role == MimeType )		519781	0					
ANR	519977	Condition	role == MimeType	844:15:30385:30400	519781	0	True				
ANR	519978	EqualityExpression	role == MimeType		519781	0		==			
ANR	519979	Identifier	role		519781	0					
ANR	519980	Identifier	MimeType		519781	1					
ANR	519981	CompoundStatement		24:33:860:860	519781	1					
ANR	519982	ReturnStatement	return d -> mimeType ( ) ;	845:8:30413:30433	519781	0	True				
ANR	519983	CallExpression	d -> mimeType ( )		519781	0					
ANR	519984	Callee	d -> mimeType		519781	0					
ANR	519985	PtrMemberAccess	d -> mimeType		519781	0					
ANR	519986	Identifier	d		519781	0					
ANR	519987	Identifier	mimeType		519781	1					
ANR	519988	ArgumentList			519781	1					
ANR	519989	ElseStatement	else		519781	0					
ANR	519990	IfStatement	if ( role == MimeData )		519781	0					
ANR	519991	Condition	role == MimeData	846:15:30450:30465	519781	0	True				
ANR	519992	EqualityExpression	role == MimeData		519781	0		==			
ANR	519993	Identifier	role		519781	0					
ANR	519994	Identifier	MimeData		519781	1					
ANR	519995	CompoundStatement		26:33:925:925	519781	1					
ANR	519996	ReturnStatement	"return QByteArray ( ( char * ) & window , sizeof ( window ) ) ;"	847:8:30478:30527	519781	0	True				
ANR	519997	CallExpression	"QByteArray ( ( char * ) & window , sizeof ( window ) )"		519781	0					
ANR	519998	Callee	QByteArray		519781	0					
ANR	519999	Identifier	QByteArray		519781	0					
ANR	520000	ArgumentList	( char * ) & window		519781	1					
ANR	520001	Argument	( char * ) & window		519781	0					
ANR	520002	CastExpression	( char * ) & window		519781	0					
ANR	520003	CastTarget	char *		519781	0					
ANR	520004	UnaryOperationExpression	& window		519781	1					
ANR	520005	UnaryOperator	&		519781	0					
ANR	520006	Identifier	window		519781	1					
ANR	520007	Argument	sizeof ( window )		519781	1					
ANR	520008	SizeofExpression	sizeof ( window )		519781	0					
ANR	520009	Sizeof	sizeof		519781	0					
ANR	520010	SizeofOperand	window		519781	1					
ANR	520011	ExpressionStatement		847:58:30528:30528	519781	1	True				
ANR	520012	ElseStatement	else		519781	0					
ANR	520013	IfStatement	if ( role == IsWindow )		519781	0					
ANR	520014	Condition	role == IsWindow	848:15:30545:30560	519781	0	True				
ANR	520015	EqualityExpression	role == IsWindow		519781	0		==			
ANR	520016	Identifier	role		519781	0					
ANR	520017	Identifier	IsWindow		519781	1					
ANR	520018	CompoundStatement		28:33:1020:1020	519781	1					
ANR	520019	ReturnStatement	return true ;	849:8:30573:30584	519781	0	True				
ANR	520020	Identifier	true		519781	0					
ANR	520021	ElseStatement	else		519781	0					
ANR	520022	IfStatement	if ( role == IsActive )		519781	0					
ANR	520023	Condition	role == IsActive	850:15:30601:30616	519781	0	True				
ANR	520024	EqualityExpression	role == IsActive		519781	0		==			
ANR	520025	Identifier	role		519781	0					
ANR	520026	Identifier	IsActive		519781	1					
ANR	520027	CompoundStatement		30:33:1076:1076	519781	1					
ANR	520028	ReturnStatement	return ( window == d -> activeWindow ) ;	851:8:30629:30663	519781	0	True				
ANR	520029	EqualityExpression	window == d -> activeWindow		519781	0		==			
ANR	520030	Identifier	window		519781	0					
ANR	520031	PtrMemberAccess	d -> activeWindow		519781	1					
ANR	520032	Identifier	d		519781	0					
ANR	520033	Identifier	activeWindow		519781	1					
ANR	520034	ElseStatement	else		519781	0					
ANR	520035	IfStatement	if ( role == IsClosable )		519781	0					
ANR	520036	Condition	role == IsClosable	852:15:30680:30697	519781	0	True				
ANR	520037	EqualityExpression	role == IsClosable		519781	0		==			
ANR	520038	Identifier	role		519781	0					
ANR	520039	Identifier	IsClosable		519781	1					
ANR	520040	CompoundStatement		32:35:1157:1157	519781	1					
ANR	520041	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionClose ) ;	853:8:30710:30773	519781	0	True				
ANR	520042	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionClose )		519781	0					
ANR	520043	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520044	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520045	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520046	Callee	d -> windowInfo		519781	0					
ANR	520047	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520048	Identifier	d		519781	0					
ANR	520049	Identifier	windowInfo		519781	1					
ANR	520050	ArgumentList	window		519781	1					
ANR	520051	Argument	window		519781	0					
ANR	520052	Identifier	window		519781	0					
ANR	520053	Identifier	actionSupported		519781	1					
ANR	520054	ArgumentList	NET :: ActionClose		519781	1					
ANR	520055	Argument	NET :: ActionClose		519781	0					
ANR	520056	Identifier	NET :: ActionClose		519781	0					
ANR	520057	ElseStatement	else		519781	0					
ANR	520058	IfStatement	if ( role == IsMovable )		519781	0					
ANR	520059	Condition	role == IsMovable	854:15:30790:30806	519781	0	True				
ANR	520060	EqualityExpression	role == IsMovable		519781	0		==			
ANR	520061	Identifier	role		519781	0					
ANR	520062	Identifier	IsMovable		519781	1					
ANR	520063	CompoundStatement		34:34:1266:1266	519781	1					
ANR	520064	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionMove ) ;	855:8:30819:30881	519781	0	True				
ANR	520065	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionMove )		519781	0					
ANR	520066	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520067	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520068	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520069	Callee	d -> windowInfo		519781	0					
ANR	520070	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520071	Identifier	d		519781	0					
ANR	520072	Identifier	windowInfo		519781	1					
ANR	520073	ArgumentList	window		519781	1					
ANR	520074	Argument	window		519781	0					
ANR	520075	Identifier	window		519781	0					
ANR	520076	Identifier	actionSupported		519781	1					
ANR	520077	ArgumentList	NET :: ActionMove		519781	1					
ANR	520078	Argument	NET :: ActionMove		519781	0					
ANR	520079	Identifier	NET :: ActionMove		519781	0					
ANR	520080	ElseStatement	else		519781	0					
ANR	520081	IfStatement	if ( role == IsResizable )		519781	0					
ANR	520082	Condition	role == IsResizable	856:15:30898:30916	519781	0	True				
ANR	520083	EqualityExpression	role == IsResizable		519781	0		==			
ANR	520084	Identifier	role		519781	0					
ANR	520085	Identifier	IsResizable		519781	1					
ANR	520086	CompoundStatement		36:36:1376:1376	519781	1					
ANR	520087	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionResize ) ;	857:8:30929:30993	519781	0	True				
ANR	520088	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionResize )		519781	0					
ANR	520089	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520090	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520091	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520092	Callee	d -> windowInfo		519781	0					
ANR	520093	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520094	Identifier	d		519781	0					
ANR	520095	Identifier	windowInfo		519781	1					
ANR	520096	ArgumentList	window		519781	1					
ANR	520097	Argument	window		519781	0					
ANR	520098	Identifier	window		519781	0					
ANR	520099	Identifier	actionSupported		519781	1					
ANR	520100	ArgumentList	NET :: ActionResize		519781	1					
ANR	520101	Argument	NET :: ActionResize		519781	0					
ANR	520102	Identifier	NET :: ActionResize		519781	0					
ANR	520103	ElseStatement	else		519781	0					
ANR	520104	IfStatement	if ( role == IsMaximizable )		519781	0					
ANR	520105	Condition	role == IsMaximizable	858:15:31010:31030	519781	0	True				
ANR	520106	EqualityExpression	role == IsMaximizable		519781	0		==			
ANR	520107	Identifier	role		519781	0					
ANR	520108	Identifier	IsMaximizable		519781	1					
ANR	520109	CompoundStatement		38:38:1490:1490	519781	1					
ANR	520110	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionMax ) ;	859:8:31043:31104	519781	0	True				
ANR	520111	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionMax )		519781	0					
ANR	520112	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520113	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520114	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520115	Callee	d -> windowInfo		519781	0					
ANR	520116	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520117	Identifier	d		519781	0					
ANR	520118	Identifier	windowInfo		519781	1					
ANR	520119	ArgumentList	window		519781	1					
ANR	520120	Argument	window		519781	0					
ANR	520121	Identifier	window		519781	0					
ANR	520122	Identifier	actionSupported		519781	1					
ANR	520123	ArgumentList	NET :: ActionMax		519781	1					
ANR	520124	Argument	NET :: ActionMax		519781	0					
ANR	520125	Identifier	NET :: ActionMax		519781	0					
ANR	520126	ElseStatement	else		519781	0					
ANR	520127	IfStatement	if ( role == IsMaximized )		519781	0					
ANR	520128	Condition	role == IsMaximized	860:15:31121:31139	519781	0	True				
ANR	520129	EqualityExpression	role == IsMaximized		519781	0		==			
ANR	520130	Identifier	role		519781	0					
ANR	520131	Identifier	IsMaximized		519781	1					
ANR	520132	CompoundStatement		41:8:1609:1656	519781	1					
ANR	520133	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	861:8:31152:31199	519781	0	True				
ANR	520134	IdentifierDecl	* info = d -> windowInfo ( window )		519781	0					
ANR	520135	IdentifierDeclType	const KWindowInfo *		519781	0					
ANR	520136	Identifier	info		519781	1					
ANR	520137	AssignmentExpression	* info = d -> windowInfo ( window )		519781	2		=			
ANR	520138	Identifier	info		519781	0					
ANR	520139	CallExpression	d -> windowInfo ( window )		519781	1					
ANR	520140	Callee	d -> windowInfo		519781	0					
ANR	520141	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520142	Identifier	d		519781	0					
ANR	520143	Identifier	windowInfo		519781	1					
ANR	520144	ArgumentList	window		519781	1					
ANR	520145	Argument	window		519781	0					
ANR	520146	Identifier	window		519781	0					
ANR	520147	ReturnStatement	return info -> hasState ( NET :: MaxHoriz ) && info -> hasState ( NET :: MaxVert ) ;	862:8:31209:31277	519781	1	True				
ANR	520148	AndExpression	info -> hasState ( NET :: MaxHoriz ) && info -> hasState ( NET :: MaxVert )		519781	0		&&			
ANR	520149	CallExpression	info -> hasState ( NET :: MaxHoriz )		519781	0					
ANR	520150	Callee	info -> hasState		519781	0					
ANR	520151	PtrMemberAccess	info -> hasState		519781	0					
ANR	520152	Identifier	info		519781	0					
ANR	520153	Identifier	hasState		519781	1					
ANR	520154	ArgumentList	NET :: MaxHoriz		519781	1					
ANR	520155	Argument	NET :: MaxHoriz		519781	0					
ANR	520156	Identifier	NET :: MaxHoriz		519781	0					
ANR	520157	CallExpression	info -> hasState ( NET :: MaxVert )		519781	1					
ANR	520158	Callee	info -> hasState		519781	0					
ANR	520159	PtrMemberAccess	info -> hasState		519781	0					
ANR	520160	Identifier	info		519781	0					
ANR	520161	Identifier	hasState		519781	1					
ANR	520162	ArgumentList	NET :: MaxVert		519781	1					
ANR	520163	Argument	NET :: MaxVert		519781	0					
ANR	520164	Identifier	NET :: MaxVert		519781	0					
ANR	520165	ElseStatement	else		519781	0					
ANR	520166	IfStatement	if ( role == IsMinimizable )		519781	0					
ANR	520167	Condition	role == IsMinimizable	863:15:31294:31314	519781	0	True				
ANR	520168	EqualityExpression	role == IsMinimizable		519781	0		==			
ANR	520169	Identifier	role		519781	0					
ANR	520170	Identifier	IsMinimizable		519781	1					
ANR	520171	CompoundStatement		43:38:1774:1774	519781	1					
ANR	520172	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionMinimize ) ;	864:8:31327:31393	519781	0	True				
ANR	520173	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionMinimize )		519781	0					
ANR	520174	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520175	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520176	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520177	Callee	d -> windowInfo		519781	0					
ANR	520178	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520179	Identifier	d		519781	0					
ANR	520180	Identifier	windowInfo		519781	1					
ANR	520181	ArgumentList	window		519781	1					
ANR	520182	Argument	window		519781	0					
ANR	520183	Identifier	window		519781	0					
ANR	520184	Identifier	actionSupported		519781	1					
ANR	520185	ArgumentList	NET :: ActionMinimize		519781	1					
ANR	520186	Argument	NET :: ActionMinimize		519781	0					
ANR	520187	Identifier	NET :: ActionMinimize		519781	0					
ANR	520188	ElseStatement	else		519781	0					
ANR	520189	IfStatement	if ( role == IsMinimized )		519781	0					
ANR	520190	Condition	role == IsMinimized	865:15:31410:31428	519781	0	True				
ANR	520191	EqualityExpression	role == IsMinimized		519781	0		==			
ANR	520192	Identifier	role		519781	0					
ANR	520193	Identifier	IsMinimized		519781	1					
ANR	520194	CompoundStatement		45:36:1888:1888	519781	1					
ANR	520195	ReturnStatement	return d -> windowInfo ( window ) -> isMinimized ( ) ;	866:8:31441:31484	519781	0	True				
ANR	520196	CallExpression	d -> windowInfo ( window ) -> isMinimized ( )		519781	0					
ANR	520197	Callee	d -> windowInfo ( window ) -> isMinimized		519781	0					
ANR	520198	PtrMemberAccess	d -> windowInfo ( window ) -> isMinimized		519781	0					
ANR	520199	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520200	Callee	d -> windowInfo		519781	0					
ANR	520201	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520202	Identifier	d		519781	0					
ANR	520203	Identifier	windowInfo		519781	1					
ANR	520204	ArgumentList	window		519781	1					
ANR	520205	Argument	window		519781	0					
ANR	520206	Identifier	window		519781	0					
ANR	520207	Identifier	isMinimized		519781	1					
ANR	520208	ArgumentList			519781	1					
ANR	520209	ElseStatement	else		519781	0					
ANR	520210	IfStatement	if ( role == IsKeepAbove )		519781	0					
ANR	520211	Condition	role == IsKeepAbove	867:15:31501:31519	519781	0	True				
ANR	520212	EqualityExpression	role == IsKeepAbove		519781	0		==			
ANR	520213	Identifier	role		519781	0					
ANR	520214	Identifier	IsKeepAbove		519781	1					
ANR	520215	CompoundStatement		47:36:1979:1979	519781	1					
ANR	520216	ReturnStatement	return d -> windowInfo ( window ) -> hasState ( NET :: StaysOnTop ) ;	868:8:31532:31587	519781	0	True				
ANR	520217	CallExpression	d -> windowInfo ( window ) -> hasState ( NET :: StaysOnTop )		519781	0					
ANR	520218	Callee	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520219	PtrMemberAccess	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520220	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520221	Callee	d -> windowInfo		519781	0					
ANR	520222	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520223	Identifier	d		519781	0					
ANR	520224	Identifier	windowInfo		519781	1					
ANR	520225	ArgumentList	window		519781	1					
ANR	520226	Argument	window		519781	0					
ANR	520227	Identifier	window		519781	0					
ANR	520228	Identifier	hasState		519781	1					
ANR	520229	ArgumentList	NET :: StaysOnTop		519781	1					
ANR	520230	Argument	NET :: StaysOnTop		519781	0					
ANR	520231	Identifier	NET :: StaysOnTop		519781	0					
ANR	520232	ElseStatement	else		519781	0					
ANR	520233	IfStatement	if ( role == IsKeepBelow )		519781	0					
ANR	520234	Condition	role == IsKeepBelow	869:15:31604:31622	519781	0	True				
ANR	520235	EqualityExpression	role == IsKeepBelow		519781	0		==			
ANR	520236	Identifier	role		519781	0					
ANR	520237	Identifier	IsKeepBelow		519781	1					
ANR	520238	CompoundStatement		49:36:2082:2082	519781	1					
ANR	520239	ReturnStatement	return d -> windowInfo ( window ) -> hasState ( NET :: KeepBelow ) ;	870:8:31635:31689	519781	0	True				
ANR	520240	CallExpression	d -> windowInfo ( window ) -> hasState ( NET :: KeepBelow )		519781	0					
ANR	520241	Callee	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520242	PtrMemberAccess	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520243	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520244	Callee	d -> windowInfo		519781	0					
ANR	520245	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520246	Identifier	d		519781	0					
ANR	520247	Identifier	windowInfo		519781	1					
ANR	520248	ArgumentList	window		519781	1					
ANR	520249	Argument	window		519781	0					
ANR	520250	Identifier	window		519781	0					
ANR	520251	Identifier	hasState		519781	1					
ANR	520252	ArgumentList	NET :: KeepBelow		519781	1					
ANR	520253	Argument	NET :: KeepBelow		519781	0					
ANR	520254	Identifier	NET :: KeepBelow		519781	0					
ANR	520255	ElseStatement	else		519781	0					
ANR	520256	IfStatement	if ( role == IsFullScreenable )		519781	0					
ANR	520257	Condition	role == IsFullScreenable	871:15:31706:31729	519781	0	True				
ANR	520258	EqualityExpression	role == IsFullScreenable		519781	0		==			
ANR	520259	Identifier	role		519781	0					
ANR	520260	Identifier	IsFullScreenable		519781	1					
ANR	520261	CompoundStatement		51:41:2189:2189	519781	1					
ANR	520262	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionFullScreen ) ;	872:8:31742:31810	519781	0	True				
ANR	520263	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionFullScreen )		519781	0					
ANR	520264	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520265	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520266	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520267	Callee	d -> windowInfo		519781	0					
ANR	520268	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520269	Identifier	d		519781	0					
ANR	520270	Identifier	windowInfo		519781	1					
ANR	520271	ArgumentList	window		519781	1					
ANR	520272	Argument	window		519781	0					
ANR	520273	Identifier	window		519781	0					
ANR	520274	Identifier	actionSupported		519781	1					
ANR	520275	ArgumentList	NET :: ActionFullScreen		519781	1					
ANR	520276	Argument	NET :: ActionFullScreen		519781	0					
ANR	520277	Identifier	NET :: ActionFullScreen		519781	0					
ANR	520278	ElseStatement	else		519781	0					
ANR	520279	IfStatement	if ( role == IsFullScreen )		519781	0					
ANR	520280	Condition	role == IsFullScreen	873:15:31827:31846	519781	0	True				
ANR	520281	EqualityExpression	role == IsFullScreen		519781	0		==			
ANR	520282	Identifier	role		519781	0					
ANR	520283	Identifier	IsFullScreen		519781	1					
ANR	520284	CompoundStatement		53:37:2306:2306	519781	1					
ANR	520285	ReturnStatement	return d -> windowInfo ( window ) -> hasState ( NET :: FullScreen ) ;	874:8:31859:31914	519781	0	True				
ANR	520286	CallExpression	d -> windowInfo ( window ) -> hasState ( NET :: FullScreen )		519781	0					
ANR	520287	Callee	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520288	PtrMemberAccess	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520289	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520290	Callee	d -> windowInfo		519781	0					
ANR	520291	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520292	Identifier	d		519781	0					
ANR	520293	Identifier	windowInfo		519781	1					
ANR	520294	ArgumentList	window		519781	1					
ANR	520295	Argument	window		519781	0					
ANR	520296	Identifier	window		519781	0					
ANR	520297	Identifier	hasState		519781	1					
ANR	520298	ArgumentList	NET :: FullScreen		519781	1					
ANR	520299	Argument	NET :: FullScreen		519781	0					
ANR	520300	Identifier	NET :: FullScreen		519781	0					
ANR	520301	ElseStatement	else		519781	0					
ANR	520302	IfStatement	if ( role == IsShadeable )		519781	0					
ANR	520303	Condition	role == IsShadeable	875:15:31931:31949	519781	0	True				
ANR	520304	EqualityExpression	role == IsShadeable		519781	0		==			
ANR	520305	Identifier	role		519781	0					
ANR	520306	Identifier	IsShadeable		519781	1					
ANR	520307	CompoundStatement		55:36:2409:2409	519781	1					
ANR	520308	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionShade ) ;	876:8:31962:32025	519781	0	True				
ANR	520309	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionShade )		519781	0					
ANR	520310	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520311	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520312	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520313	Callee	d -> windowInfo		519781	0					
ANR	520314	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520315	Identifier	d		519781	0					
ANR	520316	Identifier	windowInfo		519781	1					
ANR	520317	ArgumentList	window		519781	1					
ANR	520318	Argument	window		519781	0					
ANR	520319	Identifier	window		519781	0					
ANR	520320	Identifier	actionSupported		519781	1					
ANR	520321	ArgumentList	NET :: ActionShade		519781	1					
ANR	520322	Argument	NET :: ActionShade		519781	0					
ANR	520323	Identifier	NET :: ActionShade		519781	0					
ANR	520324	ElseStatement	else		519781	0					
ANR	520325	IfStatement	if ( role == IsShaded )		519781	0					
ANR	520326	Condition	role == IsShaded	877:15:32042:32057	519781	0	True				
ANR	520327	EqualityExpression	role == IsShaded		519781	0		==			
ANR	520328	Identifier	role		519781	0					
ANR	520329	Identifier	IsShaded		519781	1					
ANR	520330	CompoundStatement		57:33:2517:2517	519781	1					
ANR	520331	ReturnStatement	return d -> windowInfo ( window ) -> hasState ( NET :: Shaded ) ;	878:8:32070:32121	519781	0	True				
ANR	520332	CallExpression	d -> windowInfo ( window ) -> hasState ( NET :: Shaded )		519781	0					
ANR	520333	Callee	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520334	PtrMemberAccess	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520335	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520336	Callee	d -> windowInfo		519781	0					
ANR	520337	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520338	Identifier	d		519781	0					
ANR	520339	Identifier	windowInfo		519781	1					
ANR	520340	ArgumentList	window		519781	1					
ANR	520341	Argument	window		519781	0					
ANR	520342	Identifier	window		519781	0					
ANR	520343	Identifier	hasState		519781	1					
ANR	520344	ArgumentList	NET :: Shaded		519781	1					
ANR	520345	Argument	NET :: Shaded		519781	0					
ANR	520346	Identifier	NET :: Shaded		519781	0					
ANR	520347	ElseStatement	else		519781	0					
ANR	520348	IfStatement	if ( role == IsVirtualDesktopChangeable )		519781	0					
ANR	520349	Condition	role == IsVirtualDesktopChangeable	879:15:32138:32171	519781	0	True				
ANR	520350	EqualityExpression	role == IsVirtualDesktopChangeable		519781	0		==			
ANR	520351	Identifier	role		519781	0					
ANR	520352	Identifier	IsVirtualDesktopChangeable		519781	1					
ANR	520353	CompoundStatement		59:51:2631:2631	519781	1					
ANR	520354	ReturnStatement	return d -> windowInfo ( window ) -> actionSupported ( NET :: ActionChangeDesktop ) ;	880:8:32184:32255	519781	0	True				
ANR	520355	CallExpression	d -> windowInfo ( window ) -> actionSupported ( NET :: ActionChangeDesktop )		519781	0					
ANR	520356	Callee	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520357	PtrMemberAccess	d -> windowInfo ( window ) -> actionSupported		519781	0					
ANR	520358	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520359	Callee	d -> windowInfo		519781	0					
ANR	520360	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520361	Identifier	d		519781	0					
ANR	520362	Identifier	windowInfo		519781	1					
ANR	520363	ArgumentList	window		519781	1					
ANR	520364	Argument	window		519781	0					
ANR	520365	Identifier	window		519781	0					
ANR	520366	Identifier	actionSupported		519781	1					
ANR	520367	ArgumentList	NET :: ActionChangeDesktop		519781	1					
ANR	520368	Argument	NET :: ActionChangeDesktop		519781	0					
ANR	520369	Identifier	NET :: ActionChangeDesktop		519781	0					
ANR	520370	ElseStatement	else		519781	0					
ANR	520371	IfStatement	if ( role == VirtualDesktop )		519781	0					
ANR	520372	Condition	role == VirtualDesktop	881:15:32272:32293	519781	0	True				
ANR	520373	EqualityExpression	role == VirtualDesktop		519781	0		==			
ANR	520374	Identifier	role		519781	0					
ANR	520375	Identifier	VirtualDesktop		519781	1					
ANR	520376	CompoundStatement		61:39:2753:2753	519781	1					
ANR	520377	ReturnStatement	return d -> windowInfo ( window ) -> desktop ( ) ;	882:8:32306:32345	519781	0	True				
ANR	520378	CallExpression	d -> windowInfo ( window ) -> desktop ( )		519781	0					
ANR	520379	Callee	d -> windowInfo ( window ) -> desktop		519781	0					
ANR	520380	PtrMemberAccess	d -> windowInfo ( window ) -> desktop		519781	0					
ANR	520381	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520382	Callee	d -> windowInfo		519781	0					
ANR	520383	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520384	Identifier	d		519781	0					
ANR	520385	Identifier	windowInfo		519781	1					
ANR	520386	ArgumentList	window		519781	1					
ANR	520387	Argument	window		519781	0					
ANR	520388	Identifier	window		519781	0					
ANR	520389	Identifier	desktop		519781	1					
ANR	520390	ArgumentList			519781	1					
ANR	520391	ElseStatement	else		519781	0					
ANR	520392	IfStatement	if ( role == IsOnAllVirtualDesktops )		519781	0					
ANR	520393	Condition	role == IsOnAllVirtualDesktops	883:15:32362:32391	519781	0	True				
ANR	520394	EqualityExpression	role == IsOnAllVirtualDesktops		519781	0		==			
ANR	520395	Identifier	role		519781	0					
ANR	520396	Identifier	IsOnAllVirtualDesktops		519781	1					
ANR	520397	CompoundStatement		63:47:2851:2851	519781	1					
ANR	520398	ReturnStatement	return d -> windowInfo ( window ) -> onAllDesktops ( ) ;	884:8:32404:32449	519781	0	True				
ANR	520399	CallExpression	d -> windowInfo ( window ) -> onAllDesktops ( )		519781	0					
ANR	520400	Callee	d -> windowInfo ( window ) -> onAllDesktops		519781	0					
ANR	520401	PtrMemberAccess	d -> windowInfo ( window ) -> onAllDesktops		519781	0					
ANR	520402	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520403	Callee	d -> windowInfo		519781	0					
ANR	520404	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520405	Identifier	d		519781	0					
ANR	520406	Identifier	windowInfo		519781	1					
ANR	520407	ArgumentList	window		519781	1					
ANR	520408	Argument	window		519781	0					
ANR	520409	Identifier	window		519781	0					
ANR	520410	Identifier	onAllDesktops		519781	1					
ANR	520411	ArgumentList			519781	1					
ANR	520412	ElseStatement	else		519781	0					
ANR	520413	IfStatement	if ( role == Geometry )		519781	0					
ANR	520414	Condition	role == Geometry	885:15:32466:32481	519781	0	True				
ANR	520415	EqualityExpression	role == Geometry		519781	0		==			
ANR	520416	Identifier	role		519781	0					
ANR	520417	Identifier	Geometry		519781	1					
ANR	520418	CompoundStatement		65:33:2941:2941	519781	1					
ANR	520419	ReturnStatement	return d -> windowInfo ( window ) -> frameGeometry ( ) ;	886:8:32494:32539	519781	0	True				
ANR	520420	CallExpression	d -> windowInfo ( window ) -> frameGeometry ( )		519781	0					
ANR	520421	Callee	d -> windowInfo ( window ) -> frameGeometry		519781	0					
ANR	520422	PtrMemberAccess	d -> windowInfo ( window ) -> frameGeometry		519781	0					
ANR	520423	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520424	Callee	d -> windowInfo		519781	0					
ANR	520425	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520426	Identifier	d		519781	0					
ANR	520427	Identifier	windowInfo		519781	1					
ANR	520428	ArgumentList	window		519781	1					
ANR	520429	Argument	window		519781	0					
ANR	520430	Identifier	window		519781	0					
ANR	520431	Identifier	frameGeometry		519781	1					
ANR	520432	ArgumentList			519781	1					
ANR	520433	ElseStatement	else		519781	0					
ANR	520434	IfStatement	if ( role == ScreenGeometry )		519781	0					
ANR	520435	Condition	role == ScreenGeometry	887:15:32556:32577	519781	0	True				
ANR	520436	EqualityExpression	role == ScreenGeometry		519781	0		==			
ANR	520437	Identifier	role		519781	0					
ANR	520438	Identifier	ScreenGeometry		519781	1					
ANR	520439	CompoundStatement		67:39:3037:3037	519781	1					
ANR	520440	ReturnStatement	return screenGeometry ( d -> windowInfo ( window ) -> frameGeometry ( ) . center ( ) ) ;	888:8:32590:32660	519781	0	True				
ANR	520441	CallExpression	screenGeometry ( d -> windowInfo ( window ) -> frameGeometry ( ) . center ( ) )		519781	0					
ANR	520442	Callee	screenGeometry		519781	0					
ANR	520443	Identifier	screenGeometry		519781	0					
ANR	520444	ArgumentList	d -> windowInfo ( window ) -> frameGeometry ( ) . center ( )		519781	1					
ANR	520445	Argument	d -> windowInfo ( window ) -> frameGeometry ( ) . center ( )		519781	0					
ANR	520446	CallExpression	d -> windowInfo ( window ) -> frameGeometry ( ) . center ( )		519781	0					
ANR	520447	Callee	d -> windowInfo ( window ) -> frameGeometry ( ) . center		519781	0					
ANR	520448	MemberAccess	d -> windowInfo ( window ) -> frameGeometry ( ) . center		519781	0					
ANR	520449	CallExpression	d -> windowInfo ( window ) -> frameGeometry ( )		519781	0					
ANR	520450	Callee	d -> windowInfo ( window ) -> frameGeometry		519781	0					
ANR	520451	PtrMemberAccess	d -> windowInfo ( window ) -> frameGeometry		519781	0					
ANR	520452	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520453	Callee	d -> windowInfo		519781	0					
ANR	520454	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520455	Identifier	d		519781	0					
ANR	520456	Identifier	windowInfo		519781	1					
ANR	520457	ArgumentList	window		519781	1					
ANR	520458	Argument	window		519781	0					
ANR	520459	Identifier	window		519781	0					
ANR	520460	Identifier	frameGeometry		519781	1					
ANR	520461	ArgumentList			519781	1					
ANR	520462	Identifier	center		519781	1					
ANR	520463	ArgumentList			519781	1					
ANR	520464	ElseStatement	else		519781	0					
ANR	520465	IfStatement	if ( role == Activities )		519781	0					
ANR	520466	Condition	role == Activities	889:15:32677:32694	519781	0	True				
ANR	520467	EqualityExpression	role == Activities		519781	0		==			
ANR	520468	Identifier	role		519781	0					
ANR	520469	Identifier	Activities		519781	1					
ANR	520470	CompoundStatement		69:35:3154:3154	519781	1					
ANR	520471	ReturnStatement	return d -> activities ( window ) ;	890:8:32707:32735	519781	0	True				
ANR	520472	CallExpression	d -> activities ( window )		519781	0					
ANR	520473	Callee	d -> activities		519781	0					
ANR	520474	PtrMemberAccess	d -> activities		519781	0					
ANR	520475	Identifier	d		519781	0					
ANR	520476	Identifier	activities		519781	1					
ANR	520477	ArgumentList	window		519781	1					
ANR	520478	Argument	window		519781	0					
ANR	520479	Identifier	window		519781	0					
ANR	520480	ElseStatement	else		519781	0					
ANR	520481	IfStatement	if ( role == IsDemandingAttention )		519781	0					
ANR	520482	Condition	role == IsDemandingAttention	891:15:32752:32779	519781	0	True				
ANR	520483	EqualityExpression	role == IsDemandingAttention		519781	0		==			
ANR	520484	Identifier	role		519781	0					
ANR	520485	Identifier	IsDemandingAttention		519781	1					
ANR	520486	CompoundStatement		71:45:3239:3239	519781	1					
ANR	520487	ReturnStatement	return d -> demandsAttention ( window ) ;	892:8:32792:32826	519781	0	True				
ANR	520488	CallExpression	d -> demandsAttention ( window )		519781	0					
ANR	520489	Callee	d -> demandsAttention		519781	0					
ANR	520490	PtrMemberAccess	d -> demandsAttention		519781	0					
ANR	520491	Identifier	d		519781	0					
ANR	520492	Identifier	demandsAttention		519781	1					
ANR	520493	ArgumentList	window		519781	1					
ANR	520494	Argument	window		519781	0					
ANR	520495	Identifier	window		519781	0					
ANR	520496	ElseStatement	else		519781	0					
ANR	520497	IfStatement	if ( role == SkipTaskbar )		519781	0					
ANR	520498	Condition	role == SkipTaskbar	893:15:32843:32861	519781	0	True				
ANR	520499	EqualityExpression	role == SkipTaskbar		519781	0		==			
ANR	520500	Identifier	role		519781	0					
ANR	520501	Identifier	SkipTaskbar		519781	1					
ANR	520502	CompoundStatement		74:8:3331:3378	519781	1					
ANR	520503	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	894:8:32874:32921	519781	0	True				
ANR	520504	IdentifierDecl	* info = d -> windowInfo ( window )		519781	0					
ANR	520505	IdentifierDeclType	const KWindowInfo *		519781	0					
ANR	520506	Identifier	info		519781	1					
ANR	520507	AssignmentExpression	* info = d -> windowInfo ( window )		519781	2		=			
ANR	520508	Identifier	info		519781	0					
ANR	520509	CallExpression	d -> windowInfo ( window )		519781	1					
ANR	520510	Callee	d -> windowInfo		519781	0					
ANR	520511	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520512	Identifier	d		519781	0					
ANR	520513	Identifier	windowInfo		519781	1					
ANR	520514	ArgumentList	window		519781	1					
ANR	520515	Argument	window		519781	0					
ANR	520516	Identifier	window		519781	0					
ANR	520517	ReturnStatement	return ( info -> hasState ( NET :: SkipTaskbar ) || info -> windowType ( NET :: UtilityMask ) == NET :: Utility ) ;	897:8:33058:33153	519781	1	True				
ANR	520518	OrExpression	info -> hasState ( NET :: SkipTaskbar ) || info -> windowType ( NET :: UtilityMask ) == NET :: Utility		519781	0		||			
ANR	520519	CallExpression	info -> hasState ( NET :: SkipTaskbar )		519781	0					
ANR	520520	Callee	info -> hasState		519781	0					
ANR	520521	PtrMemberAccess	info -> hasState		519781	0					
ANR	520522	Identifier	info		519781	0					
ANR	520523	Identifier	hasState		519781	1					
ANR	520524	ArgumentList	NET :: SkipTaskbar		519781	1					
ANR	520525	Argument	NET :: SkipTaskbar		519781	0					
ANR	520526	Identifier	NET :: SkipTaskbar		519781	0					
ANR	520527	EqualityExpression	info -> windowType ( NET :: UtilityMask ) == NET :: Utility		519781	1		==			
ANR	520528	CallExpression	info -> windowType ( NET :: UtilityMask )		519781	0					
ANR	520529	Callee	info -> windowType		519781	0					
ANR	520530	PtrMemberAccess	info -> windowType		519781	0					
ANR	520531	Identifier	info		519781	0					
ANR	520532	Identifier	windowType		519781	1					
ANR	520533	ArgumentList	NET :: UtilityMask		519781	1					
ANR	520534	Argument	NET :: UtilityMask		519781	0					
ANR	520535	Identifier	NET :: UtilityMask		519781	0					
ANR	520536	Identifier	NET :: Utility		519781	1					
ANR	520537	ElseStatement	else		519781	0					
ANR	520538	IfStatement	if ( role == SkipPager )		519781	0					
ANR	520539	Condition	role == SkipPager	898:15:33170:33186	519781	0	True				
ANR	520540	EqualityExpression	role == SkipPager		519781	0		==			
ANR	520541	Identifier	role		519781	0					
ANR	520542	Identifier	SkipPager		519781	1					
ANR	520543	CompoundStatement		78:34:3646:3646	519781	1					
ANR	520544	ReturnStatement	return d -> windowInfo ( window ) -> hasState ( NET :: SkipPager ) ;	899:8:33199:33253	519781	0	True				
ANR	520545	CallExpression	d -> windowInfo ( window ) -> hasState ( NET :: SkipPager )		519781	0					
ANR	520546	Callee	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520547	PtrMemberAccess	d -> windowInfo ( window ) -> hasState		519781	0					
ANR	520548	CallExpression	d -> windowInfo ( window )		519781	0					
ANR	520549	Callee	d -> windowInfo		519781	0					
ANR	520550	PtrMemberAccess	d -> windowInfo		519781	0					
ANR	520551	Identifier	d		519781	0					
ANR	520552	Identifier	windowInfo		519781	1					
ANR	520553	ArgumentList	window		519781	1					
ANR	520554	Argument	window		519781	0					
ANR	520555	Identifier	window		519781	0					
ANR	520556	Identifier	hasState		519781	1					
ANR	520557	ArgumentList	NET :: SkipPager		519781	1					
ANR	520558	Argument	NET :: SkipPager		519781	0					
ANR	520559	Identifier	NET :: SkipPager		519781	0					
ANR	520560	ReturnStatement	return QVariant ( ) ;	902:4:33266:33283	519781	3	True				
ANR	520561	CallExpression	QVariant ( )		519781	0					
ANR	520562	Callee	QVariant		519781	0					
ANR	520563	Identifier	QVariant		519781	0					
ANR	520564	ArgumentList			519781	1					
ANR	520565	ReturnType	QVariant		519781	1					
ANR	520566	Identifier	XWindowTasksModel :: data		519781	2					
ANR	520567	ParameterList	"const QModelIndex & index , int role"		519781	3					
ANR	520568	Parameter	const QModelIndex & index	820:33:29500:29523	519781	0	True				
ANR	520569	ParameterType	const QModelIndex &		519781	0					
ANR	520570	Identifier	index		519781	1					
ANR	520571	Parameter	int role	820:59:29526:29533	519781	1	True				
ANR	520572	ParameterType	int		519781	0					
ANR	520573	Identifier	role		519781	1					
ANR	520574	CFGEntryNode	ENTRY		519781		True				
ANR	520575	CFGExitNode	EXIT		519781		True				
ANR	520576	Symbol	NET :: Utility		519781						
ANR	520577	Symbol	d -> activeWindow		519781						
ANR	520578	Symbol	IsMaximized		519781						
ANR	520579	Symbol	d -> windowInfo ( window ) -> frameGeometry ( ) . center		519781						
ANR	520580	Symbol	LauncherUrl		519781						
ANR	520581	Symbol	IsFullScreenable		519781						
ANR	520582	Symbol	SkipPager		519781						
ANR	520583	Symbol	d -> launcherUrl		519781						
ANR	520584	Symbol	NET :: ActionClose		519781						
ANR	520585	Symbol	d -> windowInfo ( window ) -> desktop		519781						
ANR	520586	Symbol	GenericName		519781						
ANR	520587	Symbol	d -> mimeType		519781						
ANR	520588	Symbol	d -> windowInfo ( window ) -> frameGeometry		519781						
ANR	520589	Symbol	LauncherUrlWithoutIcon		519781						
ANR	520590	Symbol	& window		519781						
ANR	520591	Symbol	index . row		519781						
ANR	520592	Symbol	QVariantList		519781						
ANR	520593	Symbol	screenGeometry		519781						
ANR	520594	Symbol	d -> windows . at		519781						
ANR	520595	Symbol	info		519781						
ANR	520596	Symbol	NET :: MaxVert		519781						
ANR	520597	Symbol	IsKeepAbove		519781						
ANR	520598	Symbol	IsShadeable		519781						
ANR	520599	Symbol	QByteArray		519781						
ANR	520600	Symbol	NET :: ActionMinimize		519781						
ANR	520601	Symbol	NET :: ActionFullScreen		519781						
ANR	520602	Symbol	* * d		519781						
ANR	520603	Symbol	NET :: ActionChangeDesktop		519781						
ANR	520604	Symbol	IsDemandingAttention		519781						
ANR	520605	Symbol	NET :: MaxHoriz		519781						
ANR	520606	Symbol	NET :: Shaded		519781						
ANR	520607	Symbol	index		519781						
ANR	520608	Symbol	NET :: ActionMax		519781						
ANR	520609	Symbol	IsMinimized		519781						
ANR	520610	Symbol	NET :: SkipPager		519781						
ANR	520611	Symbol	d -> activities		519781						
ANR	520612	Symbol	VirtualDesktop		519781						
ANR	520613	Symbol	ScreenGeometry		519781						
ANR	520614	Symbol	AppId		519781						
ANR	520615	Symbol	d -> windowInfo ( window ) -> isMinimized		519781						
ANR	520616	Symbol	d -> appData ( window ) . id		519781						
ANR	520617	Symbol	true		519781						
ANR	520618	Symbol	IsMinimizable		519781						
ANR	520619	Symbol	IsMaximizable		519781						
ANR	520620	Symbol	d -> windowInfo ( window ) -> onAllDesktops		519781						
ANR	520621	Symbol	NET :: ActionMove		519781						
ANR	520622	Symbol	d -> appData ( window ) . name		519781						
ANR	520623	Symbol	IsOnAllVirtualDesktops		519781						
ANR	520624	Symbol	d -> windowInfo ( window ) -> hasState		519781						
ANR	520625	Symbol	role		519781						
ANR	520626	Symbol	d -> windowInfo		519781						
ANR	520627	Symbol	IsMovable		519781						
ANR	520628	Symbol	MimeData		519781						
ANR	520629	Symbol	IsActive		519781						
ANR	520630	Symbol	IsWindow		519781						
ANR	520631	Symbol	index . isValid		519781						
ANR	520632	Symbol	SkipTaskbar		519781						
ANR	520633	Symbol	d -> windows . count		519781						
ANR	520634	Symbol	NET :: KeepBelow		519781						
ANR	520635	Symbol	MimeType		519781						
ANR	520636	Symbol	AppName		519781						
ANR	520637	Symbol	NET :: ActionShade		519781						
ANR	520638	Symbol	info -> windowType		519781						
ANR	520639	Symbol	Qt :: DisplayRole		519781						
ANR	520640	Symbol	NET :: ActionResize		519781						
ANR	520641	Symbol	d -> icon		519781						
ANR	520642	Symbol	d -> windowInfo ( window ) -> visibleName		519781						
ANR	520643	Symbol	d -> windows		519781						
ANR	520644	Symbol	NET :: SkipTaskbar		519781						
ANR	520645	Symbol	IsKeepBelow		519781						
ANR	520646	Symbol	QVariant		519781						
ANR	520647	Symbol	Activities		519781						
ANR	520648	Symbol	Qt :: DecorationRole		519781						
ANR	520649	Symbol	d		519781						
ANR	520650	Symbol	NET :: UtilityMask		519781						
ANR	520651	Symbol	false		519781						
ANR	520652	Symbol	d -> demandsAttention		519781						
ANR	520653	Symbol	IsShaded		519781						
ANR	520654	Symbol	* d		519781						
ANR	520655	Symbol	NET :: FullScreen		519781						
ANR	520656	Symbol	IsFullScreen		519781						
ANR	520657	Symbol	info -> hasState		519781						
ANR	520658	Symbol	Geometry		519781						
ANR	520659	Symbol	d -> windowInfo ( window ) -> actionSupported		519781						
ANR	520660	Symbol	IsResizable		519781						
ANR	520661	Symbol	NET :: StaysOnTop		519781						
ANR	520662	Symbol	* d -> windowInfo		519781						
ANR	520663	Symbol	LegacyWinIdList		519781						
ANR	520664	Symbol	d -> appData		519781						
ANR	520665	Symbol	IsVirtualDesktopChangeable		519781						
ANR	520666	Symbol	window		519781						
ANR	520667	Symbol	IsClosable		519781						
ANR	520668	Symbol	* info		519781						
ANR	520669	Symbol	d -> appData ( window ) . genericName		519781						
ANR	520670	Function	XWindowTasksModel :: rowCount	905:0:33288:33409							
ANR	520671	FunctionDef	XWindowTasksModel :: rowCount (const QModelIndex & parent)		520670	0					
ANR	520672	CompoundStatement		906:0:33353:33409	520670	0					
ANR	520673	ReturnStatement	return parent . isValid ( ) ? 0 : d -> windows . count ( ) ;	907:4:33359:33407	520670	0	True				
ANR	520674	ConditionalExpression	parent . isValid ( ) ? 0 : d -> windows . count ( )		520670	0					
ANR	520675	Condition	parent . isValid ( )		520670	0					
ANR	520676	CallExpression	parent . isValid ( )		520670	0					
ANR	520677	Callee	parent . isValid		520670	0					
ANR	520678	MemberAccess	parent . isValid		520670	0					
ANR	520679	Identifier	parent		520670	0					
ANR	520680	Identifier	isValid		520670	1					
ANR	520681	ArgumentList			520670	1					
ANR	520682	PrimaryExpression	0		520670	1					
ANR	520683	CallExpression	d -> windows . count ( )		520670	2					
ANR	520684	Callee	d -> windows . count		520670	0					
ANR	520685	MemberAccess	d -> windows . count		520670	0					
ANR	520686	PtrMemberAccess	d -> windows		520670	0					
ANR	520687	Identifier	d		520670	0					
ANR	520688	Identifier	windows		520670	1					
ANR	520689	Identifier	count		520670	1					
ANR	520690	ArgumentList			520670	1					
ANR	520691	ReturnType	int		520670	1					
ANR	520692	Identifier	XWindowTasksModel :: rowCount		520670	2					
ANR	520693	ParameterList	const QModelIndex & parent		520670	3					
ANR	520694	Parameter	const QModelIndex & parent	905:32:33320:33344	520670	0	True				
ANR	520695	ParameterType	const QModelIndex &		520670	0					
ANR	520696	Identifier	parent		520670	1					
ANR	520697	CFGEntryNode	ENTRY		520670		True				
ANR	520698	CFGExitNode	EXIT		520670		True				
ANR	520699	Symbol	parent		520670						
ANR	520700	Symbol	d		520670						
ANR	520701	Symbol	d -> windows		520670						
ANR	520702	Symbol	d -> windows . count		520670						
ANR	520703	Symbol	* d		520670						
ANR	520704	Symbol	parent . isValid		520670						
ANR	520705	Function	XWindowTasksModel :: requestActivate	910:0:33412:34884							
ANR	520706	FunctionDef	XWindowTasksModel :: requestActivate (const QModelIndex & index)		520705	0					
ANR	520707	CompoundStatement		911:0:33478:34884	520705	0					
ANR	520708	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		520705	0					
ANR	520709	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	912:8:33488:33584	520705	0	True				
ANR	520710	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		520705	0		||			
ANR	520711	UnaryOperationExpression	! index . isValid ( )		520705	0					
ANR	520712	UnaryOperator	!		520705	0					
ANR	520713	CallExpression	index . isValid ( )		520705	1					
ANR	520714	Callee	index . isValid		520705	0					
ANR	520715	MemberAccess	index . isValid		520705	0					
ANR	520716	Identifier	index		520705	0					
ANR	520717	Identifier	isValid		520705	1					
ANR	520718	ArgumentList			520705	1					
ANR	520719	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		520705	1		||			
ANR	520720	EqualityExpression	index . model ( ) != this		520705	0		!=			
ANR	520721	CallExpression	index . model ( )		520705	0					
ANR	520722	Callee	index . model		520705	0					
ANR	520723	MemberAccess	index . model		520705	0					
ANR	520724	Identifier	index		520705	0					
ANR	520725	Identifier	model		520705	1					
ANR	520726	ArgumentList			520705	1					
ANR	520727	Identifier	this		520705	1					
ANR	520728	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		520705	1		||			
ANR	520729	RelationalExpression	index . row ( ) < 0		520705	0		<			
ANR	520730	CallExpression	index . row ( )		520705	0					
ANR	520731	Callee	index . row		520705	0					
ANR	520732	MemberAccess	index . row		520705	0					
ANR	520733	Identifier	index		520705	0					
ANR	520734	Identifier	row		520705	1					
ANR	520735	ArgumentList			520705	1					
ANR	520736	PrimaryExpression	0		520705	1					
ANR	520737	RelationalExpression	index . row ( ) >= d -> windows . count ( )		520705	1		>=			
ANR	520738	CallExpression	index . row ( )		520705	0					
ANR	520739	Callee	index . row		520705	0					
ANR	520740	MemberAccess	index . row		520705	0					
ANR	520741	Identifier	index		520705	0					
ANR	520742	Identifier	row		520705	1					
ANR	520743	ArgumentList			520705	1					
ANR	520744	CallExpression	d -> windows . count ( )		520705	1					
ANR	520745	Callee	d -> windows . count		520705	0					
ANR	520746	MemberAccess	d -> windows . count		520705	0					
ANR	520747	PtrMemberAccess	d -> windows		520705	0					
ANR	520748	Identifier	d		520705	0					
ANR	520749	Identifier	windows		520705	1					
ANR	520750	Identifier	count		520705	1					
ANR	520751	ArgumentList			520705	1					
ANR	520752	CompoundStatement		2:107:108:108	520705	1					
ANR	520753	ReturnStatement	return ;	913:8:33597:33603	520705	0	True				
ANR	520754	IfStatement	if ( index . row ( ) >= 0 && index . row ( ) < d -> windows . count ( ) )		520705	1					
ANR	520755	Condition	index . row ( ) >= 0 && index . row ( ) < d -> windows . count ( )	916:8:33620:33671	520705	0	True				
ANR	520756	AndExpression	index . row ( ) >= 0 && index . row ( ) < d -> windows . count ( )		520705	0		&&			
ANR	520757	RelationalExpression	index . row ( ) >= 0		520705	0		>=			
ANR	520758	CallExpression	index . row ( )		520705	0					
ANR	520759	Callee	index . row		520705	0					
ANR	520760	MemberAccess	index . row		520705	0					
ANR	520761	Identifier	index		520705	0					
ANR	520762	Identifier	row		520705	1					
ANR	520763	ArgumentList			520705	1					
ANR	520764	PrimaryExpression	0		520705	1					
ANR	520765	RelationalExpression	index . row ( ) < d -> windows . count ( )		520705	1		<			
ANR	520766	CallExpression	index . row ( )		520705	0					
ANR	520767	Callee	index . row		520705	0					
ANR	520768	MemberAccess	index . row		520705	0					
ANR	520769	Identifier	index		520705	0					
ANR	520770	Identifier	row		520705	1					
ANR	520771	ArgumentList			520705	1					
ANR	520772	CallExpression	d -> windows . count ( )		520705	1					
ANR	520773	Callee	d -> windows . count		520705	0					
ANR	520774	MemberAccess	d -> windows . count		520705	0					
ANR	520775	PtrMemberAccess	d -> windows		520705	0					
ANR	520776	Identifier	d		520705	0					
ANR	520777	Identifier	windows		520705	1					
ANR	520778	Identifier	count		520705	1					
ANR	520779	ArgumentList			520705	1					
ANR	520780	CompoundStatement		7:8:205:244	520705	1					
ANR	520781	IdentifierDeclStatement	WId window = d -> windows . at ( index . row ( ) ) ;	917:8:33684:33723	520705	0	True				
ANR	520782	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		520705	0					
ANR	520783	IdentifierDeclType	WId		520705	0					
ANR	520784	Identifier	window		520705	1					
ANR	520785	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		520705	2		=			
ANR	520786	Identifier	window		520705	0					
ANR	520787	CallExpression	d -> windows . at ( index . row ( ) )		520705	1					
ANR	520788	Callee	d -> windows . at		520705	0					
ANR	520789	MemberAccess	d -> windows . at		520705	0					
ANR	520790	PtrMemberAccess	d -> windows		520705	0					
ANR	520791	Identifier	d		520705	0					
ANR	520792	Identifier	windows		520705	1					
ANR	520793	Identifier	at		520705	1					
ANR	520794	ArgumentList	index . row ( )		520705	1					
ANR	520795	Argument	index . row ( )		520705	0					
ANR	520796	CallExpression	index . row ( )		520705	0					
ANR	520797	Callee	index . row		520705	0					
ANR	520798	MemberAccess	index . row		520705	0					
ANR	520799	Identifier	index		520705	0					
ANR	520800	Identifier	row		520705	1					
ANR	520801	ArgumentList			520705	1					
ANR	520802	IfStatement	if ( d -> transientsDemandingAttention . contains ( window ) )		520705	1					
ANR	520803	Condition	d -> transientsDemandingAttention . contains ( window )	920:12:33797:33844	520705	0	True				
ANR	520804	CallExpression	d -> transientsDemandingAttention . contains ( window )		520705	0					
ANR	520805	Callee	d -> transientsDemandingAttention . contains		520705	0					
ANR	520806	MemberAccess	d -> transientsDemandingAttention . contains		520705	0					
ANR	520807	PtrMemberAccess	d -> transientsDemandingAttention		520705	0					
ANR	520808	Identifier	d		520705	0					
ANR	520809	Identifier	transientsDemandingAttention		520705	1					
ANR	520810	Identifier	contains		520705	1					
ANR	520811	ArgumentList	window		520705	1					
ANR	520812	Argument	window		520705	0					
ANR	520813	Identifier	window		520705	0					
ANR	520814	CompoundStatement		10:62:368:368	520705	1					
ANR	520815	ExpressionStatement	window = d -> transientsDemandingAttention . value ( window )	921:12:33861:33915	520705	0	True				
ANR	520816	AssignmentExpression	window = d -> transientsDemandingAttention . value ( window )		520705	0		=			
ANR	520817	Identifier	window		520705	0					
ANR	520818	CallExpression	d -> transientsDemandingAttention . value ( window )		520705	1					
ANR	520819	Callee	d -> transientsDemandingAttention . value		520705	0					
ANR	520820	MemberAccess	d -> transientsDemandingAttention . value		520705	0					
ANR	520821	PtrMemberAccess	d -> transientsDemandingAttention		520705	0					
ANR	520822	Identifier	d		520705	0					
ANR	520823	Identifier	transientsDemandingAttention		520705	1					
ANR	520824	Identifier	value		520705	1					
ANR	520825	ArgumentList	window		520705	1					
ANR	520826	Argument	window		520705	0					
ANR	520827	Identifier	window		520705	0					
ANR	520828	ElseStatement	else		520705	0					
ANR	520829	IfStatement	if ( ! d -> transients . isEmpty ( ) )		520705	0					
ANR	520830	Condition	! d -> transients . isEmpty ( )	928:19:34446:34469	520705	0	True				
ANR	520831	UnaryOperationExpression	! d -> transients . isEmpty ( )		520705	0					
ANR	520832	UnaryOperator	!		520705	0					
ANR	520833	CallExpression	d -> transients . isEmpty ( )		520705	1					
ANR	520834	Callee	d -> transients . isEmpty		520705	0					
ANR	520835	MemberAccess	d -> transients . isEmpty		520705	0					
ANR	520836	PtrMemberAccess	d -> transients		520705	0					
ANR	520837	Identifier	d		520705	0					
ANR	520838	Identifier	transients		520705	1					
ANR	520839	Identifier	isEmpty		520705	1					
ANR	520840	ArgumentList			520705	1					
ANR	520841	CompoundStatement		18:45:993:993	520705	1					
ANR	520842	Statement	foreach	929:12:34486:34492	520705	0	True				
ANR	520843	Statement	(	929:20:34494:34494	520705	1	True				
ANR	520844	Statement	const	929:21:34495:34499	520705	2	True				
ANR	520845	Statement	WId	929:27:34501:34503	520705	3	True				
ANR	520846	Statement	transient	929:31:34505:34513	520705	4	True				
ANR	520847	Statement	","	929:40:34514:34514	520705	5	True				
ANR	520848	Statement	d	929:42:34516:34516	520705	6	True				
ANR	520849	Statement	->	929:43:34517:34518	520705	7	True				
ANR	520850	Statement	transients	929:45:34519:34528	520705	8	True				
ANR	520851	Statement	)	929:55:34529:34529	520705	9	True				
ANR	520852	CompoundStatement		20:16:1070:1133	520705	10					
ANR	520853	IdentifierDeclStatement	"KWindowInfo info ( transient , NET :: WMState , NET :: WM2TransientFor ) ;"	930:16:34549:34612	520705	0	True				
ANR	520854	IdentifierDecl	"info ( transient , NET :: WMState , NET :: WM2TransientFor )"		520705	0					
ANR	520855	IdentifierDeclType	KWindowInfo		520705	0					
ANR	520856	Identifier	info		520705	1					
ANR	520857	Expression	"transient , NET :: WMState , NET :: WM2TransientFor"		520705	2					
ANR	520858	Identifier	transient		520705	0					
ANR	520859	Expression	"NET :: WMState , NET :: WM2TransientFor"		520705	1					
ANR	520860	Identifier	NET :: WMState		520705	0					
ANR	520861	Identifier	NET :: WM2TransientFor		520705	1					
ANR	520862	IfStatement	if ( info . valid ( true ) && info . hasState ( NET :: Shaded ) && info . transientFor ( ) == window )		520705	1					
ANR	520863	Condition	info . valid ( true ) && info . hasState ( NET :: Shaded ) && info . transientFor ( ) == window	932:20:34635:34713	520705	0	True				
ANR	520864	AndExpression	info . valid ( true ) && info . hasState ( NET :: Shaded ) && info . transientFor ( ) == window		520705	0		&&			
ANR	520865	CallExpression	info . valid ( true )		520705	0					
ANR	520866	Callee	info . valid		520705	0					
ANR	520867	MemberAccess	info . valid		520705	0					
ANR	520868	Identifier	info		520705	0					
ANR	520869	Identifier	valid		520705	1					
ANR	520870	ArgumentList	true		520705	1					
ANR	520871	Argument	true		520705	0					
ANR	520872	Identifier	true		520705	0					
ANR	520873	AndExpression	info . hasState ( NET :: Shaded ) && info . transientFor ( ) == window		520705	1		&&			
ANR	520874	CallExpression	info . hasState ( NET :: Shaded )		520705	0					
ANR	520875	Callee	info . hasState		520705	0					
ANR	520876	MemberAccess	info . hasState		520705	0					
ANR	520877	Identifier	info		520705	0					
ANR	520878	Identifier	hasState		520705	1					
ANR	520879	ArgumentList	NET :: Shaded		520705	1					
ANR	520880	Argument	NET :: Shaded		520705	0					
ANR	520881	Identifier	NET :: Shaded		520705	0					
ANR	520882	EqualityExpression	info . transientFor ( ) == window		520705	1		==			
ANR	520883	CallExpression	info . transientFor ( )		520705	0					
ANR	520884	Callee	info . transientFor		520705	0					
ANR	520885	MemberAccess	info . transientFor		520705	0					
ANR	520886	Identifier	info		520705	0					
ANR	520887	Identifier	transientFor		520705	1					
ANR	520888	ArgumentList			520705	1					
ANR	520889	Identifier	window		520705	1					
ANR	520890	CompoundStatement		22:101:1237:1237	520705	1					
ANR	520891	ExpressionStatement	window = transient	933:20:34738:34756	520705	0	True				
ANR	520892	AssignmentExpression	window = transient		520705	0		=			
ANR	520893	Identifier	window		520705	0					
ANR	520894	Identifier	transient		520705	1					
ANR	520895	BreakStatement	break ;	934:20:34778:34783	520705	1	True				
ANR	520896	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	939:8:34836:34876	520705	2	True				
ANR	520897	CallExpression	KWindowSystem :: forceActiveWindow ( window )		520705	0					
ANR	520898	Callee	KWindowSystem :: forceActiveWindow		520705	0					
ANR	520899	Identifier	KWindowSystem :: forceActiveWindow		520705	0					
ANR	520900	ArgumentList	window		520705	1					
ANR	520901	Argument	window		520705	0					
ANR	520902	Identifier	window		520705	0					
ANR	520903	ReturnType	void		520705	1					
ANR	520904	Identifier	XWindowTasksModel :: requestActivate		520705	2					
ANR	520905	ParameterList	const QModelIndex & index		520705	3					
ANR	520906	Parameter	const QModelIndex & index	910:40:33452:33475	520705	0	True				
ANR	520907	ParameterType	const QModelIndex &		520705	0					
ANR	520908	Identifier	index		520705	1					
ANR	520909	CFGEntryNode	ENTRY		520705		True				
ANR	520910	CFGExitNode	EXIT		520705		True				
ANR	520911	CFGErrorNode	ERROR		520705		True				
ANR	520912	Symbol	index . model		520705						
ANR	520913	Symbol	d -> transientsDemandingAttention . value		520705						
ANR	520914	Symbol	info . hasState		520705						
ANR	520915	Symbol	d		520705						
ANR	520916	Symbol	info . valid		520705						
ANR	520917	Symbol	this		520705						
ANR	520918	Symbol	d -> transientsDemandingAttention . contains		520705						
ANR	520919	Symbol	NET :: Shaded		520705						
ANR	520920	Symbol	index		520705						
ANR	520921	Symbol	index . isValid		520705						
ANR	520922	Symbol	d -> windows . count		520705						
ANR	520923	Symbol	* d		520705						
ANR	520924	Symbol	info . transientFor		520705						
ANR	520925	Symbol	transient		520705						
ANR	520926	Symbol	d -> transients . isEmpty		520705						
ANR	520927	Symbol	index . row		520705						
ANR	520928	Symbol	true		520705						
ANR	520929	Symbol	d -> windows		520705						
ANR	520930	Symbol	window		520705						
ANR	520931	Symbol	d -> transients		520705						
ANR	520932	Symbol	d -> windows . at		520705						
ANR	520933	Symbol	d -> transientsDemandingAttention		520705						
ANR	520934	Symbol	info		520705						
ANR	520935	Function	XWindowTasksModel :: requestNewInstance	943:0:34887:35292							
ANR	520936	FunctionDef	XWindowTasksModel :: requestNewInstance (const QModelIndex & index)		520935	0					
ANR	520937	CompoundStatement		944:0:34956:35292	520935	0					
ANR	520938	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		520935	0					
ANR	520939	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	945:8:34966:35062	520935	0	True				
ANR	520940	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		520935	0		||			
ANR	520941	UnaryOperationExpression	! index . isValid ( )		520935	0					
ANR	520942	UnaryOperator	!		520935	0					
ANR	520943	CallExpression	index . isValid ( )		520935	1					
ANR	520944	Callee	index . isValid		520935	0					
ANR	520945	MemberAccess	index . isValid		520935	0					
ANR	520946	Identifier	index		520935	0					
ANR	520947	Identifier	isValid		520935	1					
ANR	520948	ArgumentList			520935	1					
ANR	520949	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		520935	1		||			
ANR	520950	EqualityExpression	index . model ( ) != this		520935	0		!=			
ANR	520951	CallExpression	index . model ( )		520935	0					
ANR	520952	Callee	index . model		520935	0					
ANR	520953	MemberAccess	index . model		520935	0					
ANR	520954	Identifier	index		520935	0					
ANR	520955	Identifier	model		520935	1					
ANR	520956	ArgumentList			520935	1					
ANR	520957	Identifier	this		520935	1					
ANR	520958	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		520935	1		||			
ANR	520959	RelationalExpression	index . row ( ) < 0		520935	0		<			
ANR	520960	CallExpression	index . row ( )		520935	0					
ANR	520961	Callee	index . row		520935	0					
ANR	520962	MemberAccess	index . row		520935	0					
ANR	520963	Identifier	index		520935	0					
ANR	520964	Identifier	row		520935	1					
ANR	520965	ArgumentList			520935	1					
ANR	520966	PrimaryExpression	0		520935	1					
ANR	520967	RelationalExpression	index . row ( ) >= d -> windows . count ( )		520935	1		>=			
ANR	520968	CallExpression	index . row ( )		520935	0					
ANR	520969	Callee	index . row		520935	0					
ANR	520970	MemberAccess	index . row		520935	0					
ANR	520971	Identifier	index		520935	0					
ANR	520972	Identifier	row		520935	1					
ANR	520973	ArgumentList			520935	1					
ANR	520974	CallExpression	d -> windows . count ( )		520935	1					
ANR	520975	Callee	d -> windows . count		520935	0					
ANR	520976	MemberAccess	d -> windows . count		520935	0					
ANR	520977	PtrMemberAccess	d -> windows		520935	0					
ANR	520978	Identifier	d		520935	0					
ANR	520979	Identifier	windows		520935	1					
ANR	520980	Identifier	count		520935	1					
ANR	520981	ArgumentList			520935	1					
ANR	520982	CompoundStatement		2:107:108:108	520935	1					
ANR	520983	ReturnStatement	return ;	946:8:35075:35081	520935	0	True				
ANR	520984	IdentifierDeclStatement	const QUrl & url = d -> appData ( d -> windows . at ( index . row ( ) ) ) . url ;	949:4:35094:35154	520935	1	True				
ANR	520985	IdentifierDecl	& url = d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		520935	0					
ANR	520986	IdentifierDeclType	const QUrl &		520935	0					
ANR	520987	Identifier	url		520935	1					
ANR	520988	AssignmentExpression	& url = d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		520935	2		=			
ANR	520989	Identifier	url		520935	0					
ANR	520990	MemberAccess	d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		520935	1					
ANR	520991	CallExpression	d -> appData ( d -> windows . at ( index . row ( ) ) )		520935	0					
ANR	520992	Callee	d -> appData		520935	0					
ANR	520993	PtrMemberAccess	d -> appData		520935	0					
ANR	520994	Identifier	d		520935	0					
ANR	520995	Identifier	appData		520935	1					
ANR	520996	ArgumentList	d -> windows . at ( index . row ( ) )		520935	1					
ANR	520997	Argument	d -> windows . at ( index . row ( ) )		520935	0					
ANR	520998	CallExpression	d -> windows . at ( index . row ( ) )		520935	0					
ANR	520999	Callee	d -> windows . at		520935	0					
ANR	521000	MemberAccess	d -> windows . at		520935	0					
ANR	521001	PtrMemberAccess	d -> windows		520935	0					
ANR	521002	Identifier	d		520935	0					
ANR	521003	Identifier	windows		520935	1					
ANR	521004	Identifier	at		520935	1					
ANR	521005	ArgumentList	index . row ( )		520935	1					
ANR	521006	Argument	index . row ( )		520935	0					
ANR	521007	CallExpression	index . row ( )		520935	0					
ANR	521008	Callee	index . row		520935	0					
ANR	521009	MemberAccess	index . row		520935	0					
ANR	521010	Identifier	index		520935	0					
ANR	521011	Identifier	row		520935	1					
ANR	521012	ArgumentList			520935	1					
ANR	521013	Identifier	url		520935	1					
ANR	521014	IfStatement	if ( url . isValid ( ) )		520935	2					
ANR	521015	Condition	url . isValid ( )	951:8:35165:35177	520935	0	True				
ANR	521016	CallExpression	url . isValid ( )		520935	0					
ANR	521017	Callee	url . isValid		520935	0					
ANR	521018	MemberAccess	url . isValid		520935	0					
ANR	521019	Identifier	url		520935	0					
ANR	521020	Identifier	isValid		520935	1					
ANR	521021	ArgumentList			520935	1					
ANR	521022	CompoundStatement		8:23:223:223	520935	1					
ANR	521023	ExpressionStatement	"url , 0 , false , KStartupInfo :: createNewStartupIdForTimestamp ( QX11Info :: appUserTime ( ) )"	952:8:35190:35284	520935	0	True				
ANR	521024	Expression	"url , 0 , false , KStartupInfo :: createNewStartupIdForTimestamp ( QX11Info :: appUserTime ( ) )"		520935	0					
ANR	521025	Identifier	url		520935	0					
ANR	521026	Expression	"0 , false , KStartupInfo :: createNewStartupIdForTimestamp ( QX11Info :: appUserTime ( ) )"		520935	1					
ANR	521027	PrimaryExpression	0		520935	0					
ANR	521028	Expression	"false , KStartupInfo :: createNewStartupIdForTimestamp ( QX11Info :: appUserTime ( ) )"		520935	1					
ANR	521029	Identifier	false		520935	0					
ANR	521030	CallExpression	KStartupInfo :: createNewStartupIdForTimestamp ( QX11Info :: appUserTime ( ) )		520935	1					
ANR	521031	Callee	KStartupInfo :: createNewStartupIdForTimestamp		520935	0					
ANR	521032	Identifier	KStartupInfo :: createNewStartupIdForTimestamp		520935	0					
ANR	521033	ArgumentList	QX11Info :: appUserTime ( )		520935	1					
ANR	521034	Argument	QX11Info :: appUserTime ( )		520935	0					
ANR	521035	CallExpression	QX11Info :: appUserTime ( )		520935	0					
ANR	521036	Callee	QX11Info :: appUserTime		520935	0					
ANR	521037	Identifier	QX11Info :: appUserTime		520935	0					
ANR	521038	ArgumentList			520935	1					
ANR	521039	ReturnType	void		520935	1					
ANR	521040	Identifier	XWindowTasksModel :: requestNewInstance		520935	2					
ANR	521041	ParameterList	const QModelIndex & index		520935	3					
ANR	521042	Parameter	const QModelIndex & index	943:43:34930:34953	520935	0	True				
ANR	521043	ParameterType	const QModelIndex &		520935	0					
ANR	521044	Identifier	index		520935	1					
ANR	521045	CFGEntryNode	ENTRY		520935		True				
ANR	521046	CFGExitNode	EXIT		520935		True				
ANR	521047	Symbol	index . model		520935						
ANR	521048	Symbol	url . isValid		520935						
ANR	521049	Symbol	d		520935						
ANR	521050	Symbol	QX11Info :: appUserTime		520935						
ANR	521051	Symbol	this		520935						
ANR	521052	Symbol	index		520935						
ANR	521053	Symbol	index . isValid		520935						
ANR	521054	Symbol	d -> windows . count		520935						
ANR	521055	Symbol	d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		520935						
ANR	521056	Symbol	* d		520935						
ANR	521057	Symbol	url		520935						
ANR	521058	Symbol	index . row		520935						
ANR	521059	Symbol	d -> appData		520935						
ANR	521060	Symbol	d -> windows		520935						
ANR	521061	Symbol	d -> windows . at		520935						
ANR	521062	Function	XWindowTasksModel :: requestOpenUrls	956:0:35295:35863							
ANR	521063	FunctionDef	"XWindowTasksModel :: requestOpenUrls (const QModelIndex & index , const QList < QUrl > & urls)"		521062	0					
ANR	521064	CompoundStatement		957:0:35386:35863	521062	0					
ANR	521065	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) || urls . isEmpty ( ) )		521062	0					
ANR	521066	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) || urls . isEmpty ( )	958:8:35396:35526	521062	0	True				
ANR	521067	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) || urls . isEmpty ( )		521062	0		||			
ANR	521068	UnaryOperationExpression	! index . isValid ( )		521062	0					
ANR	521069	UnaryOperator	!		521062	0					
ANR	521070	CallExpression	index . isValid ( )		521062	1					
ANR	521071	Callee	index . isValid		521062	0					
ANR	521072	MemberAccess	index . isValid		521062	0					
ANR	521073	Identifier	index		521062	0					
ANR	521074	Identifier	isValid		521062	1					
ANR	521075	ArgumentList			521062	1					
ANR	521076	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) || urls . isEmpty ( )		521062	1		||			
ANR	521077	EqualityExpression	index . model ( ) != this		521062	0		!=			
ANR	521078	CallExpression	index . model ( )		521062	0					
ANR	521079	Callee	index . model		521062	0					
ANR	521080	MemberAccess	index . model		521062	0					
ANR	521081	Identifier	index		521062	0					
ANR	521082	Identifier	model		521062	1					
ANR	521083	ArgumentList			521062	1					
ANR	521084	Identifier	this		521062	1					
ANR	521085	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) || urls . isEmpty ( )		521062	1		||			
ANR	521086	RelationalExpression	index . row ( ) < 0		521062	0		<			
ANR	521087	CallExpression	index . row ( )		521062	0					
ANR	521088	Callee	index . row		521062	0					
ANR	521089	MemberAccess	index . row		521062	0					
ANR	521090	Identifier	index		521062	0					
ANR	521091	Identifier	row		521062	1					
ANR	521092	ArgumentList			521062	1					
ANR	521093	PrimaryExpression	0		521062	1					
ANR	521094	OrExpression	index . row ( ) >= d -> windows . count ( ) || urls . isEmpty ( )		521062	1		||			
ANR	521095	RelationalExpression	index . row ( ) >= d -> windows . count ( )		521062	0		>=			
ANR	521096	CallExpression	index . row ( )		521062	0					
ANR	521097	Callee	index . row		521062	0					
ANR	521098	MemberAccess	index . row		521062	0					
ANR	521099	Identifier	index		521062	0					
ANR	521100	Identifier	row		521062	1					
ANR	521101	ArgumentList			521062	1					
ANR	521102	CallExpression	d -> windows . count ( )		521062	1					
ANR	521103	Callee	d -> windows . count		521062	0					
ANR	521104	MemberAccess	d -> windows . count		521062	0					
ANR	521105	PtrMemberAccess	d -> windows		521062	0					
ANR	521106	Identifier	d		521062	0					
ANR	521107	Identifier	windows		521062	1					
ANR	521108	Identifier	count		521062	1					
ANR	521109	ArgumentList			521062	1					
ANR	521110	CallExpression	urls . isEmpty ( )		521062	1					
ANR	521111	Callee	urls . isEmpty		521062	0					
ANR	521112	MemberAccess	urls . isEmpty		521062	0					
ANR	521113	Identifier	urls		521062	0					
ANR	521114	Identifier	isEmpty		521062	1					
ANR	521115	ArgumentList			521062	1					
ANR	521116	CompoundStatement		4:27:142:142	521062	1					
ANR	521117	ReturnStatement	return ;	961:8:35539:35545	521062	0	True				
ANR	521118	IdentifierDeclStatement	const QUrl & url = d -> appData ( d -> windows . at ( index . row ( ) ) ) . url ;	964:4:35558:35618	521062	1	True				
ANR	521119	IdentifierDecl	& url = d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		521062	0					
ANR	521120	IdentifierDeclType	const QUrl &		521062	0					
ANR	521121	Identifier	url		521062	1					
ANR	521122	AssignmentExpression	& url = d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		521062	2		=			
ANR	521123	Identifier	url		521062	0					
ANR	521124	MemberAccess	d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		521062	1					
ANR	521125	CallExpression	d -> appData ( d -> windows . at ( index . row ( ) ) )		521062	0					
ANR	521126	Callee	d -> appData		521062	0					
ANR	521127	PtrMemberAccess	d -> appData		521062	0					
ANR	521128	Identifier	d		521062	0					
ANR	521129	Identifier	appData		521062	1					
ANR	521130	ArgumentList	d -> windows . at ( index . row ( ) )		521062	1					
ANR	521131	Argument	d -> windows . at ( index . row ( ) )		521062	0					
ANR	521132	CallExpression	d -> windows . at ( index . row ( ) )		521062	0					
ANR	521133	Callee	d -> windows . at		521062	0					
ANR	521134	MemberAccess	d -> windows . at		521062	0					
ANR	521135	PtrMemberAccess	d -> windows		521062	0					
ANR	521136	Identifier	d		521062	0					
ANR	521137	Identifier	windows		521062	1					
ANR	521138	Identifier	at		521062	1					
ANR	521139	ArgumentList	index . row ( )		521062	1					
ANR	521140	Argument	index . row ( )		521062	0					
ANR	521141	CallExpression	index . row ( )		521062	0					
ANR	521142	Callee	index . row		521062	0					
ANR	521143	MemberAccess	index . row		521062	0					
ANR	521144	Identifier	index		521062	0					
ANR	521145	Identifier	row		521062	1					
ANR	521146	ArgumentList			521062	1					
ANR	521147	Identifier	url		521062	1					
ANR	521148	IdentifierDeclStatement	const KService :: Ptr service = KService :: serviceByDesktopPath ( url . toLocalFile ( ) ) ;	965:4:35624:35703	521062	2	True				
ANR	521149	IdentifierDecl	service = KService :: serviceByDesktopPath ( url . toLocalFile ( ) )		521062	0					
ANR	521150	IdentifierDeclType	const KService :: Ptr		521062	0					
ANR	521151	Identifier	service		521062	1					
ANR	521152	AssignmentExpression	service = KService :: serviceByDesktopPath ( url . toLocalFile ( ) )		521062	2		=			
ANR	521153	Identifier	service		521062	0					
ANR	521154	CallExpression	KService :: serviceByDesktopPath ( url . toLocalFile ( ) )		521062	1					
ANR	521155	Callee	KService :: serviceByDesktopPath		521062	0					
ANR	521156	Identifier	KService :: serviceByDesktopPath		521062	0					
ANR	521157	ArgumentList	url . toLocalFile ( )		521062	1					
ANR	521158	Argument	url . toLocalFile ( )		521062	0					
ANR	521159	CallExpression	url . toLocalFile ( )		521062	0					
ANR	521160	Callee	url . toLocalFile		521062	0					
ANR	521161	MemberAccess	url . toLocalFile		521062	0					
ANR	521162	Identifier	url		521062	0					
ANR	521163	Identifier	toLocalFile		521062	1					
ANR	521164	ArgumentList			521062	1					
ANR	521165	IfStatement	if ( service )		521062	3					
ANR	521166	Condition	service	966:8:35713:35719	521062	0	True				
ANR	521167	Identifier	service		521062	0					
ANR	521168	CompoundStatement		10:17:335:335	521062	1					
ANR	521169	Statement	KRun	967:8:35732:35735	521062	0	True				
ANR	521170	Statement	::	967:12:35736:35737	521062	1	True				
ANR	521171	Statement	runApplication	967:14:35738:35751	521062	2	True				
ANR	521172	Statement	(	967:28:35752:35752	521062	3	True				
ANR	521173	Statement	*	967:29:35753:35753	521062	4	True				
ANR	521174	Statement	service	967:30:35754:35760	521062	5	True				
ANR	521175	Statement	","	967:37:35761:35761	521062	6	True				
ANR	521176	Statement	urls	967:39:35763:35766	521062	7	True				
ANR	521177	Statement	","	967:43:35767:35767	521062	8	True				
ANR	521178	Statement	nullptr	967:45:35769:35775	521062	9	True				
ANR	521179	Statement	","	967:52:35776:35776	521062	10	True				
ANR	521180	Statement	0	967:54:35778:35778	521062	11	True				
ANR	521181	Statement	","	967:55:35779:35779	521062	12	True				
ANR	521182	CompoundStatement		11:57:394:394	521062	13					
ANR	521183	Statement	","	967:59:35783:35783	521062	14	True				
ANR	521184	Statement	KStartupInfo	967:61:35785:35796	521062	15	True				
ANR	521185	Statement	::	967:73:35797:35798	521062	16	True				
ANR	521186	Statement	createNewStartupIdForTimestamp	967:75:35799:35828	521062	17	True				
ANR	521187	Statement	(	967:105:35829:35829	521062	18	True				
ANR	521188	Statement	QX11Info	967:106:35830:35837	521062	19	True				
ANR	521189	Statement	::	967:114:35838:35839	521062	20	True				
ANR	521190	Statement	appUserTime	967:116:35840:35850	521062	21	True				
ANR	521191	Statement	(	967:127:35851:35851	521062	22	True				
ANR	521192	Statement	)	967:128:35852:35852	521062	23	True				
ANR	521193	Statement	)	967:129:35853:35853	521062	24	True				
ANR	521194	Statement	)	967:130:35854:35854	521062	25	True				
ANR	521195	ExpressionStatement		967:131:35855:35855	521062	26	True				
ANR	521196	ReturnType	void		521062	1					
ANR	521197	Identifier	XWindowTasksModel :: requestOpenUrls		521062	2					
ANR	521198	ParameterList	"const QModelIndex & index , const QList < QUrl > & urls"		521062	3					
ANR	521199	Parameter	const QModelIndex & index	956:40:35335:35358	521062	0	True				
ANR	521200	ParameterType	const QModelIndex &		521062	0					
ANR	521201	Identifier	index		521062	1					
ANR	521202	Parameter	const QList < QUrl > & urls	956:66:35361:35383	521062	1	True				
ANR	521203	ParameterType	const QList < QUrl > &		521062	0					
ANR	521204	Identifier	urls		521062	1					
ANR	521205	CFGEntryNode	ENTRY		521062		True				
ANR	521206	CFGExitNode	EXIT		521062		True				
ANR	521207	Symbol	index . model		521062						
ANR	521208	Symbol	d		521062						
ANR	521209	Symbol	KService :: serviceByDesktopPath		521062						
ANR	521210	Symbol	url . toLocalFile		521062						
ANR	521211	Symbol	this		521062						
ANR	521212	Symbol	index		521062						
ANR	521213	Symbol	index . isValid		521062						
ANR	521214	Symbol	d -> windows . count		521062						
ANR	521215	Symbol	d -> appData ( d -> windows . at ( index . row ( ) ) ) . url		521062						
ANR	521216	Symbol	* d		521062						
ANR	521217	Symbol	url		521062						
ANR	521218	Symbol	urls		521062						
ANR	521219	Symbol	service		521062						
ANR	521220	Symbol	index . row		521062						
ANR	521221	Symbol	urls . isEmpty		521062						
ANR	521222	Symbol	d -> appData		521062						
ANR	521223	Symbol	d -> windows		521062						
ANR	521224	Symbol	d -> windows . at		521062						
ANR	521225	Function	XWindowTasksModel :: requestClose	971:0:35866:36180							
ANR	521226	FunctionDef	XWindowTasksModel :: requestClose (const QModelIndex & index)		521225	0					
ANR	521227	CompoundStatement		972:0:35929:36180	521225	0					
ANR	521228	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		521225	0					
ANR	521229	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	973:8:35939:36035	521225	0	True				
ANR	521230	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521225	0		||			
ANR	521231	UnaryOperationExpression	! index . isValid ( )		521225	0					
ANR	521232	UnaryOperator	!		521225	0					
ANR	521233	CallExpression	index . isValid ( )		521225	1					
ANR	521234	Callee	index . isValid		521225	0					
ANR	521235	MemberAccess	index . isValid		521225	0					
ANR	521236	Identifier	index		521225	0					
ANR	521237	Identifier	isValid		521225	1					
ANR	521238	ArgumentList			521225	1					
ANR	521239	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521225	1		||			
ANR	521240	EqualityExpression	index . model ( ) != this		521225	0		!=			
ANR	521241	CallExpression	index . model ( )		521225	0					
ANR	521242	Callee	index . model		521225	0					
ANR	521243	MemberAccess	index . model		521225	0					
ANR	521244	Identifier	index		521225	0					
ANR	521245	Identifier	model		521225	1					
ANR	521246	ArgumentList			521225	1					
ANR	521247	Identifier	this		521225	1					
ANR	521248	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521225	1		||			
ANR	521249	RelationalExpression	index . row ( ) < 0		521225	0		<			
ANR	521250	CallExpression	index . row ( )		521225	0					
ANR	521251	Callee	index . row		521225	0					
ANR	521252	MemberAccess	index . row		521225	0					
ANR	521253	Identifier	index		521225	0					
ANR	521254	Identifier	row		521225	1					
ANR	521255	ArgumentList			521225	1					
ANR	521256	PrimaryExpression	0		521225	1					
ANR	521257	RelationalExpression	index . row ( ) >= d -> windows . count ( )		521225	1		>=			
ANR	521258	CallExpression	index . row ( )		521225	0					
ANR	521259	Callee	index . row		521225	0					
ANR	521260	MemberAccess	index . row		521225	0					
ANR	521261	Identifier	index		521225	0					
ANR	521262	Identifier	row		521225	1					
ANR	521263	ArgumentList			521225	1					
ANR	521264	CallExpression	d -> windows . count ( )		521225	1					
ANR	521265	Callee	d -> windows . count		521225	0					
ANR	521266	MemberAccess	d -> windows . count		521225	0					
ANR	521267	PtrMemberAccess	d -> windows		521225	0					
ANR	521268	Identifier	d		521225	0					
ANR	521269	Identifier	windows		521225	1					
ANR	521270	Identifier	count		521225	1					
ANR	521271	ArgumentList			521225	1					
ANR	521272	CompoundStatement		2:107:108:108	521225	1					
ANR	521273	ReturnStatement	return ;	974:8:36048:36054	521225	0	True				
ANR	521274	IdentifierDeclStatement	"NETRootInfo ri ( QX11Info :: connection ( ) , NET :: CloseWindow ) ;"	977:4:36067:36123	521225	1	True				
ANR	521275	IdentifierDecl	"ri ( QX11Info :: connection ( ) , NET :: CloseWindow )"		521225	0					
ANR	521276	IdentifierDeclType	NETRootInfo		521225	0					
ANR	521277	Identifier	ri		521225	1					
ANR	521278	Expression	"QX11Info :: connection ( ) , NET :: CloseWindow"		521225	2					
ANR	521279	CallExpression	QX11Info :: connection ( )		521225	0					
ANR	521280	Callee	QX11Info :: connection		521225	0					
ANR	521281	Identifier	QX11Info :: connection		521225	0					
ANR	521282	ArgumentList			521225	1					
ANR	521283	Identifier	NET :: CloseWindow		521225	1					
ANR	521284	ExpressionStatement	ri . closeWindowRequest ( d -> windows . at ( index . row ( ) ) )	978:4:36129:36178	521225	2	True				
ANR	521285	CallExpression	ri . closeWindowRequest ( d -> windows . at ( index . row ( ) ) )		521225	0					
ANR	521286	Callee	ri . closeWindowRequest		521225	0					
ANR	521287	MemberAccess	ri . closeWindowRequest		521225	0					
ANR	521288	Identifier	ri		521225	0					
ANR	521289	Identifier	closeWindowRequest		521225	1					
ANR	521290	ArgumentList	d -> windows . at ( index . row ( ) )		521225	1					
ANR	521291	Argument	d -> windows . at ( index . row ( ) )		521225	0					
ANR	521292	CallExpression	d -> windows . at ( index . row ( ) )		521225	0					
ANR	521293	Callee	d -> windows . at		521225	0					
ANR	521294	MemberAccess	d -> windows . at		521225	0					
ANR	521295	PtrMemberAccess	d -> windows		521225	0					
ANR	521296	Identifier	d		521225	0					
ANR	521297	Identifier	windows		521225	1					
ANR	521298	Identifier	at		521225	1					
ANR	521299	ArgumentList	index . row ( )		521225	1					
ANR	521300	Argument	index . row ( )		521225	0					
ANR	521301	CallExpression	index . row ( )		521225	0					
ANR	521302	Callee	index . row		521225	0					
ANR	521303	MemberAccess	index . row		521225	0					
ANR	521304	Identifier	index		521225	0					
ANR	521305	Identifier	row		521225	1					
ANR	521306	ArgumentList			521225	1					
ANR	521307	ReturnType	void		521225	1					
ANR	521308	Identifier	XWindowTasksModel :: requestClose		521225	2					
ANR	521309	ParameterList	const QModelIndex & index		521225	3					
ANR	521310	Parameter	const QModelIndex & index	971:37:35903:35926	521225	0	True				
ANR	521311	ParameterType	const QModelIndex &		521225	0					
ANR	521312	Identifier	index		521225	1					
ANR	521313	CFGEntryNode	ENTRY		521225		True				
ANR	521314	CFGExitNode	EXIT		521225		True				
ANR	521315	Symbol	index . model		521225						
ANR	521316	Symbol	d		521225						
ANR	521317	Symbol	index . row		521225						
ANR	521318	Symbol	ri		521225						
ANR	521319	Symbol	this		521225						
ANR	521320	Symbol	index		521225						
ANR	521321	Symbol	index . isValid		521225						
ANR	521322	Symbol	d -> windows		521225						
ANR	521323	Symbol	d -> windows . count		521225						
ANR	521324	Symbol	d -> windows . at		521225						
ANR	521325	Symbol	* d		521225						
ANR	521326	Function	XWindowTasksModel :: requestMove	981:0:36183:36948							
ANR	521327	FunctionDef	XWindowTasksModel :: requestMove (const QModelIndex & index)		521326	0					
ANR	521328	CompoundStatement		982:0:36245:36948	521326	0					
ANR	521329	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		521326	0					
ANR	521330	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	983:8:36255:36351	521326	0	True				
ANR	521331	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521326	0		||			
ANR	521332	UnaryOperationExpression	! index . isValid ( )		521326	0					
ANR	521333	UnaryOperator	!		521326	0					
ANR	521334	CallExpression	index . isValid ( )		521326	1					
ANR	521335	Callee	index . isValid		521326	0					
ANR	521336	MemberAccess	index . isValid		521326	0					
ANR	521337	Identifier	index		521326	0					
ANR	521338	Identifier	isValid		521326	1					
ANR	521339	ArgumentList			521326	1					
ANR	521340	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521326	1		||			
ANR	521341	EqualityExpression	index . model ( ) != this		521326	0		!=			
ANR	521342	CallExpression	index . model ( )		521326	0					
ANR	521343	Callee	index . model		521326	0					
ANR	521344	MemberAccess	index . model		521326	0					
ANR	521345	Identifier	index		521326	0					
ANR	521346	Identifier	model		521326	1					
ANR	521347	ArgumentList			521326	1					
ANR	521348	Identifier	this		521326	1					
ANR	521349	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521326	1		||			
ANR	521350	RelationalExpression	index . row ( ) < 0		521326	0		<			
ANR	521351	CallExpression	index . row ( )		521326	0					
ANR	521352	Callee	index . row		521326	0					
ANR	521353	MemberAccess	index . row		521326	0					
ANR	521354	Identifier	index		521326	0					
ANR	521355	Identifier	row		521326	1					
ANR	521356	ArgumentList			521326	1					
ANR	521357	PrimaryExpression	0		521326	1					
ANR	521358	RelationalExpression	index . row ( ) >= d -> windows . count ( )		521326	1		>=			
ANR	521359	CallExpression	index . row ( )		521326	0					
ANR	521360	Callee	index . row		521326	0					
ANR	521361	MemberAccess	index . row		521326	0					
ANR	521362	Identifier	index		521326	0					
ANR	521363	Identifier	row		521326	1					
ANR	521364	ArgumentList			521326	1					
ANR	521365	CallExpression	d -> windows . count ( )		521326	1					
ANR	521366	Callee	d -> windows . count		521326	0					
ANR	521367	MemberAccess	d -> windows . count		521326	0					
ANR	521368	PtrMemberAccess	d -> windows		521326	0					
ANR	521369	Identifier	d		521326	0					
ANR	521370	Identifier	windows		521326	1					
ANR	521371	Identifier	count		521326	1					
ANR	521372	ArgumentList			521326	1					
ANR	521373	CompoundStatement		2:107:108:108	521326	1					
ANR	521374	ReturnStatement	return ;	984:8:36364:36370	521326	0	True				
ANR	521375	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	987:4:36383:36428	521326	1	True				
ANR	521376	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		521326	0					
ANR	521377	IdentifierDeclType	const WId		521326	0					
ANR	521378	Identifier	window		521326	1					
ANR	521379	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		521326	2		=			
ANR	521380	Identifier	window		521326	0					
ANR	521381	CallExpression	d -> windows . at ( index . row ( ) )		521326	1					
ANR	521382	Callee	d -> windows . at		521326	0					
ANR	521383	MemberAccess	d -> windows . at		521326	0					
ANR	521384	PtrMemberAccess	d -> windows		521326	0					
ANR	521385	Identifier	d		521326	0					
ANR	521386	Identifier	windows		521326	1					
ANR	521387	Identifier	at		521326	1					
ANR	521388	ArgumentList	index . row ( )		521326	1					
ANR	521389	Argument	index . row ( )		521326	0					
ANR	521390	CallExpression	index . row ( )		521326	0					
ANR	521391	Callee	index . row		521326	0					
ANR	521392	MemberAccess	index . row		521326	0					
ANR	521393	Identifier	index		521326	0					
ANR	521394	Identifier	row		521326	1					
ANR	521395	ArgumentList			521326	1					
ANR	521396	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	988:4:36434:36481	521326	2	True				
ANR	521397	IdentifierDecl	* info = d -> windowInfo ( window )		521326	0					
ANR	521398	IdentifierDeclType	const KWindowInfo *		521326	0					
ANR	521399	Identifier	info		521326	1					
ANR	521400	AssignmentExpression	* info = d -> windowInfo ( window )		521326	2		=			
ANR	521401	Identifier	info		521326	0					
ANR	521402	CallExpression	d -> windowInfo ( window )		521326	1					
ANR	521403	Callee	d -> windowInfo		521326	0					
ANR	521404	PtrMemberAccess	d -> windowInfo		521326	0					
ANR	521405	Identifier	d		521326	0					
ANR	521406	Identifier	windowInfo		521326	1					
ANR	521407	ArgumentList	window		521326	1					
ANR	521408	Argument	window		521326	0					
ANR	521409	Identifier	window		521326	0					
ANR	521410	IdentifierDeclStatement	bool onCurrent = info -> isOnCurrentDesktop ( ) ;	990:4:36488:36531	521326	3	True				
ANR	521411	IdentifierDecl	onCurrent = info -> isOnCurrentDesktop ( )		521326	0					
ANR	521412	IdentifierDeclType	bool		521326	0					
ANR	521413	Identifier	onCurrent		521326	1					
ANR	521414	AssignmentExpression	onCurrent = info -> isOnCurrentDesktop ( )		521326	2		=			
ANR	521415	Identifier	onCurrent		521326	0					
ANR	521416	CallExpression	info -> isOnCurrentDesktop ( )		521326	1					
ANR	521417	Callee	info -> isOnCurrentDesktop		521326	0					
ANR	521418	PtrMemberAccess	info -> isOnCurrentDesktop		521326	0					
ANR	521419	Identifier	info		521326	0					
ANR	521420	Identifier	isOnCurrentDesktop		521326	1					
ANR	521421	ArgumentList			521326	1					
ANR	521422	IfStatement	if ( ! onCurrent )		521326	4					
ANR	521423	Condition	! onCurrent	992:8:36542:36551	521326	0	True				
ANR	521424	UnaryOperationExpression	! onCurrent		521326	0					
ANR	521425	UnaryOperator	!		521326	0					
ANR	521426	Identifier	onCurrent		521326	1					
ANR	521427	CompoundStatement		11:20:308:308	521326	1					
ANR	521428	ExpressionStatement	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )	993:8:36564:36613	521326	0	True				
ANR	521429	CallExpression	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )		521326	0					
ANR	521430	Callee	KWindowSystem :: setCurrentDesktop		521326	0					
ANR	521431	Identifier	KWindowSystem :: setCurrentDesktop		521326	0					
ANR	521432	ArgumentList	info -> desktop ( )		521326	1					
ANR	521433	Argument	info -> desktop ( )		521326	0					
ANR	521434	CallExpression	info -> desktop ( )		521326	0					
ANR	521435	Callee	info -> desktop		521326	0					
ANR	521436	PtrMemberAccess	info -> desktop		521326	0					
ANR	521437	Identifier	info		521326	0					
ANR	521438	Identifier	desktop		521326	1					
ANR	521439	ArgumentList			521326	1					
ANR	521440	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	994:8:36623:36663	521326	1	True				
ANR	521441	CallExpression	KWindowSystem :: forceActiveWindow ( window )		521326	0					
ANR	521442	Callee	KWindowSystem :: forceActiveWindow		521326	0					
ANR	521443	Identifier	KWindowSystem :: forceActiveWindow		521326	0					
ANR	521444	ArgumentList	window		521326	1					
ANR	521445	Argument	window		521326	0					
ANR	521446	Identifier	window		521326	0					
ANR	521447	IfStatement	if ( info -> isMinimized ( ) )		521326	5					
ANR	521448	Condition	info -> isMinimized ( )	997:8:36680:36698	521326	0	True				
ANR	521449	CallExpression	info -> isMinimized ( )		521326	0					
ANR	521450	Callee	info -> isMinimized		521326	0					
ANR	521451	PtrMemberAccess	info -> isMinimized		521326	0					
ANR	521452	Identifier	info		521326	0					
ANR	521453	Identifier	isMinimized		521326	1					
ANR	521454	ArgumentList			521326	1					
ANR	521455	CompoundStatement		16:29:455:455	521326	1					
ANR	521456	ExpressionStatement	KWindowSystem :: unminimizeWindow ( window )	998:8:36711:36750	521326	0	True				
ANR	521457	CallExpression	KWindowSystem :: unminimizeWindow ( window )		521326	0					
ANR	521458	Callee	KWindowSystem :: unminimizeWindow		521326	0					
ANR	521459	Identifier	KWindowSystem :: unminimizeWindow		521326	0					
ANR	521460	ArgumentList	window		521326	1					
ANR	521461	Argument	window		521326	0					
ANR	521462	Identifier	window		521326	0					
ANR	521463	IdentifierDeclStatement	const QRect & geom = info -> geometry ( ) ;	1001:4:36763:36799	521326	6	True				
ANR	521464	IdentifierDecl	& geom = info -> geometry ( )		521326	0					
ANR	521465	IdentifierDeclType	const QRect &		521326	0					
ANR	521466	Identifier	geom		521326	1					
ANR	521467	AssignmentExpression	& geom = info -> geometry ( )		521326	2		=			
ANR	521468	Identifier	geom		521326	0					
ANR	521469	CallExpression	info -> geometry ( )		521326	1					
ANR	521470	Callee	info -> geometry		521326	0					
ANR	521471	PtrMemberAccess	info -> geometry		521326	0					
ANR	521472	Identifier	info		521326	0					
ANR	521473	Identifier	geometry		521326	1					
ANR	521474	ArgumentList			521326	1					
ANR	521475	IdentifierDeclStatement	"NETRootInfo ri ( QX11Info :: connection ( ) , NET :: WMMoveResize ) ;"	1003:4:36806:36863	521326	7	True				
ANR	521476	IdentifierDecl	"ri ( QX11Info :: connection ( ) , NET :: WMMoveResize )"		521326	0					
ANR	521477	IdentifierDeclType	NETRootInfo		521326	0					
ANR	521478	Identifier	ri		521326	1					
ANR	521479	Expression	"QX11Info :: connection ( ) , NET :: WMMoveResize"		521326	2					
ANR	521480	CallExpression	QX11Info :: connection ( )		521326	0					
ANR	521481	Callee	QX11Info :: connection		521326	0					
ANR	521482	Identifier	QX11Info :: connection		521326	0					
ANR	521483	ArgumentList			521326	1					
ANR	521484	Identifier	NET :: WMMoveResize		521326	1					
ANR	521485	ExpressionStatement	"ri . moveResizeRequest ( window , geom . center ( ) . x ( ) , geom . center ( ) . y ( ) , NET :: Move )"	1004:4:36869:36946	521326	8	True				
ANR	521486	CallExpression	"ri . moveResizeRequest ( window , geom . center ( ) . x ( ) , geom . center ( ) . y ( ) , NET :: Move )"		521326	0					
ANR	521487	Callee	ri . moveResizeRequest		521326	0					
ANR	521488	MemberAccess	ri . moveResizeRequest		521326	0					
ANR	521489	Identifier	ri		521326	0					
ANR	521490	Identifier	moveResizeRequest		521326	1					
ANR	521491	ArgumentList	window		521326	1					
ANR	521492	Argument	window		521326	0					
ANR	521493	Identifier	window		521326	0					
ANR	521494	Argument	geom . center ( ) . x ( )		521326	1					
ANR	521495	CallExpression	geom . center ( ) . x ( )		521326	0					
ANR	521496	Callee	geom . center ( ) . x		521326	0					
ANR	521497	MemberAccess	geom . center ( ) . x		521326	0					
ANR	521498	CallExpression	geom . center ( )		521326	0					
ANR	521499	Callee	geom . center		521326	0					
ANR	521500	MemberAccess	geom . center		521326	0					
ANR	521501	Identifier	geom		521326	0					
ANR	521502	Identifier	center		521326	1					
ANR	521503	ArgumentList			521326	1					
ANR	521504	Identifier	x		521326	1					
ANR	521505	ArgumentList			521326	1					
ANR	521506	Argument	geom . center ( ) . y ( )		521326	2					
ANR	521507	CallExpression	geom . center ( ) . y ( )		521326	0					
ANR	521508	Callee	geom . center ( ) . y		521326	0					
ANR	521509	MemberAccess	geom . center ( ) . y		521326	0					
ANR	521510	CallExpression	geom . center ( )		521326	0					
ANR	521511	Callee	geom . center		521326	0					
ANR	521512	MemberAccess	geom . center		521326	0					
ANR	521513	Identifier	geom		521326	0					
ANR	521514	Identifier	center		521326	1					
ANR	521515	ArgumentList			521326	1					
ANR	521516	Identifier	y		521326	1					
ANR	521517	ArgumentList			521326	1					
ANR	521518	Argument	NET :: Move		521326	3					
ANR	521519	Identifier	NET :: Move		521326	0					
ANR	521520	ReturnType	void		521326	1					
ANR	521521	Identifier	XWindowTasksModel :: requestMove		521326	2					
ANR	521522	ParameterList	const QModelIndex & index		521326	3					
ANR	521523	Parameter	const QModelIndex & index	981:36:36219:36242	521326	0	True				
ANR	521524	ParameterType	const QModelIndex &		521326	0					
ANR	521525	Identifier	index		521326	1					
ANR	521526	CFGEntryNode	ENTRY		521326		True				
ANR	521527	CFGExitNode	EXIT		521326		True				
ANR	521528	Symbol	d -> windowInfo		521326						
ANR	521529	Symbol	geom . center ( ) . y		521326						
ANR	521530	Symbol	geom . center ( ) . x		521326						
ANR	521531	Symbol	index . isValid		521326						
ANR	521532	Symbol	onCurrent		521326						
ANR	521533	Symbol	d -> windows . count		521326						
ANR	521534	Symbol	geom		521326						
ANR	521535	Symbol	geom . center		521326						
ANR	521536	Symbol	info -> desktop		521326						
ANR	521537	Symbol	info -> isOnCurrentDesktop		521326						
ANR	521538	Symbol	index . row		521326						
ANR	521539	Symbol	d -> windows		521326						
ANR	521540	Symbol	d -> windows . at		521326						
ANR	521541	Symbol	info -> geometry		521326						
ANR	521542	Symbol	info		521326						
ANR	521543	Symbol	info -> isMinimized		521326						
ANR	521544	Symbol	index . model		521326						
ANR	521545	Symbol	d		521326						
ANR	521546	Symbol	this		521326						
ANR	521547	Symbol	index		521326						
ANR	521548	Symbol	* d		521326						
ANR	521549	Symbol	NET :: Move		521326						
ANR	521550	Symbol	ri		521326						
ANR	521551	Symbol	window		521326						
ANR	521552	Symbol	* info		521326						
ANR	521553	Function	XWindowTasksModel :: requestResize	1007:0:36951:37735							
ANR	521554	FunctionDef	XWindowTasksModel :: requestResize (const QModelIndex & index)		521553	0					
ANR	521555	CompoundStatement		1008:0:37015:37735	521553	0					
ANR	521556	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		521553	0					
ANR	521557	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1009:8:37025:37121	521553	0	True				
ANR	521558	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521553	0		||			
ANR	521559	UnaryOperationExpression	! index . isValid ( )		521553	0					
ANR	521560	UnaryOperator	!		521553	0					
ANR	521561	CallExpression	index . isValid ( )		521553	1					
ANR	521562	Callee	index . isValid		521553	0					
ANR	521563	MemberAccess	index . isValid		521553	0					
ANR	521564	Identifier	index		521553	0					
ANR	521565	Identifier	isValid		521553	1					
ANR	521566	ArgumentList			521553	1					
ANR	521567	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521553	1		||			
ANR	521568	EqualityExpression	index . model ( ) != this		521553	0		!=			
ANR	521569	CallExpression	index . model ( )		521553	0					
ANR	521570	Callee	index . model		521553	0					
ANR	521571	MemberAccess	index . model		521553	0					
ANR	521572	Identifier	index		521553	0					
ANR	521573	Identifier	model		521553	1					
ANR	521574	ArgumentList			521553	1					
ANR	521575	Identifier	this		521553	1					
ANR	521576	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521553	1		||			
ANR	521577	RelationalExpression	index . row ( ) < 0		521553	0		<			
ANR	521578	CallExpression	index . row ( )		521553	0					
ANR	521579	Callee	index . row		521553	0					
ANR	521580	MemberAccess	index . row		521553	0					
ANR	521581	Identifier	index		521553	0					
ANR	521582	Identifier	row		521553	1					
ANR	521583	ArgumentList			521553	1					
ANR	521584	PrimaryExpression	0		521553	1					
ANR	521585	RelationalExpression	index . row ( ) >= d -> windows . count ( )		521553	1		>=			
ANR	521586	CallExpression	index . row ( )		521553	0					
ANR	521587	Callee	index . row		521553	0					
ANR	521588	MemberAccess	index . row		521553	0					
ANR	521589	Identifier	index		521553	0					
ANR	521590	Identifier	row		521553	1					
ANR	521591	ArgumentList			521553	1					
ANR	521592	CallExpression	d -> windows . count ( )		521553	1					
ANR	521593	Callee	d -> windows . count		521553	0					
ANR	521594	MemberAccess	d -> windows . count		521553	0					
ANR	521595	PtrMemberAccess	d -> windows		521553	0					
ANR	521596	Identifier	d		521553	0					
ANR	521597	Identifier	windows		521553	1					
ANR	521598	Identifier	count		521553	1					
ANR	521599	ArgumentList			521553	1					
ANR	521600	CompoundStatement		2:107:108:108	521553	1					
ANR	521601	ReturnStatement	return ;	1010:8:37134:37140	521553	0	True				
ANR	521602	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1013:4:37153:37198	521553	1	True				
ANR	521603	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		521553	0					
ANR	521604	IdentifierDeclType	const WId		521553	0					
ANR	521605	Identifier	window		521553	1					
ANR	521606	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		521553	2		=			
ANR	521607	Identifier	window		521553	0					
ANR	521608	CallExpression	d -> windows . at ( index . row ( ) )		521553	1					
ANR	521609	Callee	d -> windows . at		521553	0					
ANR	521610	MemberAccess	d -> windows . at		521553	0					
ANR	521611	PtrMemberAccess	d -> windows		521553	0					
ANR	521612	Identifier	d		521553	0					
ANR	521613	Identifier	windows		521553	1					
ANR	521614	Identifier	at		521553	1					
ANR	521615	ArgumentList	index . row ( )		521553	1					
ANR	521616	Argument	index . row ( )		521553	0					
ANR	521617	CallExpression	index . row ( )		521553	0					
ANR	521618	Callee	index . row		521553	0					
ANR	521619	MemberAccess	index . row		521553	0					
ANR	521620	Identifier	index		521553	0					
ANR	521621	Identifier	row		521553	1					
ANR	521622	ArgumentList			521553	1					
ANR	521623	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1014:4:37204:37251	521553	2	True				
ANR	521624	IdentifierDecl	* info = d -> windowInfo ( window )		521553	0					
ANR	521625	IdentifierDeclType	const KWindowInfo *		521553	0					
ANR	521626	Identifier	info		521553	1					
ANR	521627	AssignmentExpression	* info = d -> windowInfo ( window )		521553	2		=			
ANR	521628	Identifier	info		521553	0					
ANR	521629	CallExpression	d -> windowInfo ( window )		521553	1					
ANR	521630	Callee	d -> windowInfo		521553	0					
ANR	521631	PtrMemberAccess	d -> windowInfo		521553	0					
ANR	521632	Identifier	d		521553	0					
ANR	521633	Identifier	windowInfo		521553	1					
ANR	521634	ArgumentList	window		521553	1					
ANR	521635	Argument	window		521553	0					
ANR	521636	Identifier	window		521553	0					
ANR	521637	IdentifierDeclStatement	bool onCurrent = info -> isOnCurrentDesktop ( ) ;	1016:4:37258:37301	521553	3	True				
ANR	521638	IdentifierDecl	onCurrent = info -> isOnCurrentDesktop ( )		521553	0					
ANR	521639	IdentifierDeclType	bool		521553	0					
ANR	521640	Identifier	onCurrent		521553	1					
ANR	521641	AssignmentExpression	onCurrent = info -> isOnCurrentDesktop ( )		521553	2		=			
ANR	521642	Identifier	onCurrent		521553	0					
ANR	521643	CallExpression	info -> isOnCurrentDesktop ( )		521553	1					
ANR	521644	Callee	info -> isOnCurrentDesktop		521553	0					
ANR	521645	PtrMemberAccess	info -> isOnCurrentDesktop		521553	0					
ANR	521646	Identifier	info		521553	0					
ANR	521647	Identifier	isOnCurrentDesktop		521553	1					
ANR	521648	ArgumentList			521553	1					
ANR	521649	IfStatement	if ( ! onCurrent )		521553	4					
ANR	521650	Condition	! onCurrent	1018:8:37312:37321	521553	0	True				
ANR	521651	UnaryOperationExpression	! onCurrent		521553	0					
ANR	521652	UnaryOperator	!		521553	0					
ANR	521653	Identifier	onCurrent		521553	1					
ANR	521654	CompoundStatement		11:20:308:308	521553	1					
ANR	521655	ExpressionStatement	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )	1019:8:37334:37383	521553	0	True				
ANR	521656	CallExpression	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )		521553	0					
ANR	521657	Callee	KWindowSystem :: setCurrentDesktop		521553	0					
ANR	521658	Identifier	KWindowSystem :: setCurrentDesktop		521553	0					
ANR	521659	ArgumentList	info -> desktop ( )		521553	1					
ANR	521660	Argument	info -> desktop ( )		521553	0					
ANR	521661	CallExpression	info -> desktop ( )		521553	0					
ANR	521662	Callee	info -> desktop		521553	0					
ANR	521663	PtrMemberAccess	info -> desktop		521553	0					
ANR	521664	Identifier	info		521553	0					
ANR	521665	Identifier	desktop		521553	1					
ANR	521666	ArgumentList			521553	1					
ANR	521667	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	1020:8:37393:37433	521553	1	True				
ANR	521668	CallExpression	KWindowSystem :: forceActiveWindow ( window )		521553	0					
ANR	521669	Callee	KWindowSystem :: forceActiveWindow		521553	0					
ANR	521670	Identifier	KWindowSystem :: forceActiveWindow		521553	0					
ANR	521671	ArgumentList	window		521553	1					
ANR	521672	Argument	window		521553	0					
ANR	521673	Identifier	window		521553	0					
ANR	521674	IfStatement	if ( info -> isMinimized ( ) )		521553	5					
ANR	521675	Condition	info -> isMinimized ( )	1023:8:37450:37468	521553	0	True				
ANR	521676	CallExpression	info -> isMinimized ( )		521553	0					
ANR	521677	Callee	info -> isMinimized		521553	0					
ANR	521678	PtrMemberAccess	info -> isMinimized		521553	0					
ANR	521679	Identifier	info		521553	0					
ANR	521680	Identifier	isMinimized		521553	1					
ANR	521681	ArgumentList			521553	1					
ANR	521682	CompoundStatement		16:29:455:455	521553	1					
ANR	521683	ExpressionStatement	KWindowSystem :: unminimizeWindow ( window )	1024:8:37481:37520	521553	0	True				
ANR	521684	CallExpression	KWindowSystem :: unminimizeWindow ( window )		521553	0					
ANR	521685	Callee	KWindowSystem :: unminimizeWindow		521553	0					
ANR	521686	Identifier	KWindowSystem :: unminimizeWindow		521553	0					
ANR	521687	ArgumentList	window		521553	1					
ANR	521688	Argument	window		521553	0					
ANR	521689	Identifier	window		521553	0					
ANR	521690	IdentifierDeclStatement	const QRect & geom = info -> geometry ( ) ;	1027:4:37533:37569	521553	6	True				
ANR	521691	IdentifierDecl	& geom = info -> geometry ( )		521553	0					
ANR	521692	IdentifierDeclType	const QRect &		521553	0					
ANR	521693	Identifier	geom		521553	1					
ANR	521694	AssignmentExpression	& geom = info -> geometry ( )		521553	2		=			
ANR	521695	Identifier	geom		521553	0					
ANR	521696	CallExpression	info -> geometry ( )		521553	1					
ANR	521697	Callee	info -> geometry		521553	0					
ANR	521698	PtrMemberAccess	info -> geometry		521553	0					
ANR	521699	Identifier	info		521553	0					
ANR	521700	Identifier	geometry		521553	1					
ANR	521701	ArgumentList			521553	1					
ANR	521702	IdentifierDeclStatement	"NETRootInfo ri ( QX11Info :: connection ( ) , NET :: WMMoveResize ) ;"	1029:4:37576:37633	521553	7	True				
ANR	521703	IdentifierDecl	"ri ( QX11Info :: connection ( ) , NET :: WMMoveResize )"		521553	0					
ANR	521704	IdentifierDeclType	NETRootInfo		521553	0					
ANR	521705	Identifier	ri		521553	1					
ANR	521706	Expression	"QX11Info :: connection ( ) , NET :: WMMoveResize"		521553	2					
ANR	521707	CallExpression	QX11Info :: connection ( )		521553	0					
ANR	521708	Callee	QX11Info :: connection		521553	0					
ANR	521709	Identifier	QX11Info :: connection		521553	0					
ANR	521710	ArgumentList			521553	1					
ANR	521711	Identifier	NET :: WMMoveResize		521553	1					
ANR	521712	ExpressionStatement	"ri . moveResizeRequest ( window , geom . bottomRight ( ) . x ( ) , geom . bottomRight ( ) . y ( ) , NET :: BottomRight )"	1030:4:37639:37733	521553	8	True				
ANR	521713	CallExpression	"ri . moveResizeRequest ( window , geom . bottomRight ( ) . x ( ) , geom . bottomRight ( ) . y ( ) , NET :: BottomRight )"		521553	0					
ANR	521714	Callee	ri . moveResizeRequest		521553	0					
ANR	521715	MemberAccess	ri . moveResizeRequest		521553	0					
ANR	521716	Identifier	ri		521553	0					
ANR	521717	Identifier	moveResizeRequest		521553	1					
ANR	521718	ArgumentList	window		521553	1					
ANR	521719	Argument	window		521553	0					
ANR	521720	Identifier	window		521553	0					
ANR	521721	Argument	geom . bottomRight ( ) . x ( )		521553	1					
ANR	521722	CallExpression	geom . bottomRight ( ) . x ( )		521553	0					
ANR	521723	Callee	geom . bottomRight ( ) . x		521553	0					
ANR	521724	MemberAccess	geom . bottomRight ( ) . x		521553	0					
ANR	521725	CallExpression	geom . bottomRight ( )		521553	0					
ANR	521726	Callee	geom . bottomRight		521553	0					
ANR	521727	MemberAccess	geom . bottomRight		521553	0					
ANR	521728	Identifier	geom		521553	0					
ANR	521729	Identifier	bottomRight		521553	1					
ANR	521730	ArgumentList			521553	1					
ANR	521731	Identifier	x		521553	1					
ANR	521732	ArgumentList			521553	1					
ANR	521733	Argument	geom . bottomRight ( ) . y ( )		521553	2					
ANR	521734	CallExpression	geom . bottomRight ( ) . y ( )		521553	0					
ANR	521735	Callee	geom . bottomRight ( ) . y		521553	0					
ANR	521736	MemberAccess	geom . bottomRight ( ) . y		521553	0					
ANR	521737	CallExpression	geom . bottomRight ( )		521553	0					
ANR	521738	Callee	geom . bottomRight		521553	0					
ANR	521739	MemberAccess	geom . bottomRight		521553	0					
ANR	521740	Identifier	geom		521553	0					
ANR	521741	Identifier	bottomRight		521553	1					
ANR	521742	ArgumentList			521553	1					
ANR	521743	Identifier	y		521553	1					
ANR	521744	ArgumentList			521553	1					
ANR	521745	Argument	NET :: BottomRight		521553	3					
ANR	521746	Identifier	NET :: BottomRight		521553	0					
ANR	521747	ReturnType	void		521553	1					
ANR	521748	Identifier	XWindowTasksModel :: requestResize		521553	2					
ANR	521749	ParameterList	const QModelIndex & index		521553	3					
ANR	521750	Parameter	const QModelIndex & index	1007:38:36989:37012	521553	0	True				
ANR	521751	ParameterType	const QModelIndex &		521553	0					
ANR	521752	Identifier	index		521553	1					
ANR	521753	CFGEntryNode	ENTRY		521553		True				
ANR	521754	CFGExitNode	EXIT		521553		True				
ANR	521755	Symbol	geom . bottomRight ( ) . y		521553						
ANR	521756	Symbol	d -> windowInfo		521553						
ANR	521757	Symbol	geom . bottomRight ( ) . x		521553						
ANR	521758	Symbol	geom . bottomRight		521553						
ANR	521759	Symbol	index . isValid		521553						
ANR	521760	Symbol	onCurrent		521553						
ANR	521761	Symbol	d -> windows . count		521553						
ANR	521762	Symbol	geom		521553						
ANR	521763	Symbol	info -> desktop		521553						
ANR	521764	Symbol	info -> isOnCurrentDesktop		521553						
ANR	521765	Symbol	index . row		521553						
ANR	521766	Symbol	d -> windows		521553						
ANR	521767	Symbol	d -> windows . at		521553						
ANR	521768	Symbol	info -> geometry		521553						
ANR	521769	Symbol	info		521553						
ANR	521770	Symbol	info -> isMinimized		521553						
ANR	521771	Symbol	index . model		521553						
ANR	521772	Symbol	d		521553						
ANR	521773	Symbol	this		521553						
ANR	521774	Symbol	index		521553						
ANR	521775	Symbol	* d		521553						
ANR	521776	Symbol	ri		521553						
ANR	521777	Symbol	window		521553						
ANR	521778	Symbol	* info		521553						
ANR	521779	Symbol	NET :: BottomRight		521553						
ANR	521780	Function	XWindowTasksModel :: requestToggleMinimized	1033:0:37738:38503							
ANR	521781	FunctionDef	XWindowTasksModel :: requestToggleMinimized (const QModelIndex & index)		521780	0					
ANR	521782	CompoundStatement		1034:0:37811:38503	521780	0					
ANR	521783	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		521780	0					
ANR	521784	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1035:8:37821:37917	521780	0	True				
ANR	521785	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521780	0		||			
ANR	521786	UnaryOperationExpression	! index . isValid ( )		521780	0					
ANR	521787	UnaryOperator	!		521780	0					
ANR	521788	CallExpression	index . isValid ( )		521780	1					
ANR	521789	Callee	index . isValid		521780	0					
ANR	521790	MemberAccess	index . isValid		521780	0					
ANR	521791	Identifier	index		521780	0					
ANR	521792	Identifier	isValid		521780	1					
ANR	521793	ArgumentList			521780	1					
ANR	521794	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521780	1		||			
ANR	521795	EqualityExpression	index . model ( ) != this		521780	0		!=			
ANR	521796	CallExpression	index . model ( )		521780	0					
ANR	521797	Callee	index . model		521780	0					
ANR	521798	MemberAccess	index . model		521780	0					
ANR	521799	Identifier	index		521780	0					
ANR	521800	Identifier	model		521780	1					
ANR	521801	ArgumentList			521780	1					
ANR	521802	Identifier	this		521780	1					
ANR	521803	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521780	1		||			
ANR	521804	RelationalExpression	index . row ( ) < 0		521780	0		<			
ANR	521805	CallExpression	index . row ( )		521780	0					
ANR	521806	Callee	index . row		521780	0					
ANR	521807	MemberAccess	index . row		521780	0					
ANR	521808	Identifier	index		521780	0					
ANR	521809	Identifier	row		521780	1					
ANR	521810	ArgumentList			521780	1					
ANR	521811	PrimaryExpression	0		521780	1					
ANR	521812	RelationalExpression	index . row ( ) >= d -> windows . count ( )		521780	1		>=			
ANR	521813	CallExpression	index . row ( )		521780	0					
ANR	521814	Callee	index . row		521780	0					
ANR	521815	MemberAccess	index . row		521780	0					
ANR	521816	Identifier	index		521780	0					
ANR	521817	Identifier	row		521780	1					
ANR	521818	ArgumentList			521780	1					
ANR	521819	CallExpression	d -> windows . count ( )		521780	1					
ANR	521820	Callee	d -> windows . count		521780	0					
ANR	521821	MemberAccess	d -> windows . count		521780	0					
ANR	521822	PtrMemberAccess	d -> windows		521780	0					
ANR	521823	Identifier	d		521780	0					
ANR	521824	Identifier	windows		521780	1					
ANR	521825	Identifier	count		521780	1					
ANR	521826	ArgumentList			521780	1					
ANR	521827	CompoundStatement		2:107:108:108	521780	1					
ANR	521828	ReturnStatement	return ;	1036:8:37930:37936	521780	0	True				
ANR	521829	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1039:4:37949:37994	521780	1	True				
ANR	521830	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		521780	0					
ANR	521831	IdentifierDeclType	const WId		521780	0					
ANR	521832	Identifier	window		521780	1					
ANR	521833	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		521780	2		=			
ANR	521834	Identifier	window		521780	0					
ANR	521835	CallExpression	d -> windows . at ( index . row ( ) )		521780	1					
ANR	521836	Callee	d -> windows . at		521780	0					
ANR	521837	MemberAccess	d -> windows . at		521780	0					
ANR	521838	PtrMemberAccess	d -> windows		521780	0					
ANR	521839	Identifier	d		521780	0					
ANR	521840	Identifier	windows		521780	1					
ANR	521841	Identifier	at		521780	1					
ANR	521842	ArgumentList	index . row ( )		521780	1					
ANR	521843	Argument	index . row ( )		521780	0					
ANR	521844	CallExpression	index . row ( )		521780	0					
ANR	521845	Callee	index . row		521780	0					
ANR	521846	MemberAccess	index . row		521780	0					
ANR	521847	Identifier	index		521780	0					
ANR	521848	Identifier	row		521780	1					
ANR	521849	ArgumentList			521780	1					
ANR	521850	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1040:4:38000:38047	521780	2	True				
ANR	521851	IdentifierDecl	* info = d -> windowInfo ( window )		521780	0					
ANR	521852	IdentifierDeclType	const KWindowInfo *		521780	0					
ANR	521853	Identifier	info		521780	1					
ANR	521854	AssignmentExpression	* info = d -> windowInfo ( window )		521780	2		=			
ANR	521855	Identifier	info		521780	0					
ANR	521856	CallExpression	d -> windowInfo ( window )		521780	1					
ANR	521857	Callee	d -> windowInfo		521780	0					
ANR	521858	PtrMemberAccess	d -> windowInfo		521780	0					
ANR	521859	Identifier	d		521780	0					
ANR	521860	Identifier	windowInfo		521780	1					
ANR	521861	ArgumentList	window		521780	1					
ANR	521862	Argument	window		521780	0					
ANR	521863	Identifier	window		521780	0					
ANR	521864	IfStatement	if ( info -> isMinimized ( ) )		521780	3					
ANR	521865	Condition	info -> isMinimized ( )	1042:8:38058:38076	521780	0	True				
ANR	521866	CallExpression	info -> isMinimized ( )		521780	0					
ANR	521867	Callee	info -> isMinimized		521780	0					
ANR	521868	PtrMemberAccess	info -> isMinimized		521780	0					
ANR	521869	Identifier	info		521780	0					
ANR	521870	Identifier	isMinimized		521780	1					
ANR	521871	ArgumentList			521780	1					
ANR	521872	CompoundStatement		10:8:277:320	521780	1					
ANR	521873	IdentifierDeclStatement	bool onCurrent = info -> isOnCurrentDesktop ( ) ;	1043:8:38089:38132	521780	0	True				
ANR	521874	IdentifierDecl	onCurrent = info -> isOnCurrentDesktop ( )		521780	0					
ANR	521875	IdentifierDeclType	bool		521780	0					
ANR	521876	Identifier	onCurrent		521780	1					
ANR	521877	AssignmentExpression	onCurrent = info -> isOnCurrentDesktop ( )		521780	2		=			
ANR	521878	Identifier	onCurrent		521780	0					
ANR	521879	CallExpression	info -> isOnCurrentDesktop ( )		521780	1					
ANR	521880	Callee	info -> isOnCurrentDesktop		521780	0					
ANR	521881	PtrMemberAccess	info -> isOnCurrentDesktop		521780	0					
ANR	521882	Identifier	info		521780	0					
ANR	521883	Identifier	isOnCurrentDesktop		521780	1					
ANR	521884	ArgumentList			521780	1					
ANR	521885	IfStatement	if ( ! onCurrent )		521780	1					
ANR	521886	Condition	! onCurrent	1046:12:38210:38219	521780	0	True				
ANR	521887	UnaryOperationExpression	! onCurrent		521780	0					
ANR	521888	UnaryOperator	!		521780	0					
ANR	521889	Identifier	onCurrent		521780	1					
ANR	521890	CompoundStatement		13:24:410:410	521780	1					
ANR	521891	ExpressionStatement	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )	1047:12:38236:38285	521780	0	True				
ANR	521892	CallExpression	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )		521780	0					
ANR	521893	Callee	KWindowSystem :: setCurrentDesktop		521780	0					
ANR	521894	Identifier	KWindowSystem :: setCurrentDesktop		521780	0					
ANR	521895	ArgumentList	info -> desktop ( )		521780	1					
ANR	521896	Argument	info -> desktop ( )		521780	0					
ANR	521897	CallExpression	info -> desktop ( )		521780	0					
ANR	521898	Callee	info -> desktop		521780	0					
ANR	521899	PtrMemberAccess	info -> desktop		521780	0					
ANR	521900	Identifier	info		521780	0					
ANR	521901	Identifier	desktop		521780	1					
ANR	521902	ArgumentList			521780	1					
ANR	521903	ExpressionStatement	KWindowSystem :: unminimizeWindow ( window )	1050:8:38306:38345	521780	2	True				
ANR	521904	CallExpression	KWindowSystem :: unminimizeWindow ( window )		521780	0					
ANR	521905	Callee	KWindowSystem :: unminimizeWindow		521780	0					
ANR	521906	Identifier	KWindowSystem :: unminimizeWindow		521780	0					
ANR	521907	ArgumentList	window		521780	1					
ANR	521908	Argument	window		521780	0					
ANR	521909	Identifier	window		521780	0					
ANR	521910	IfStatement	if ( onCurrent )		521780	3					
ANR	521911	Condition	onCurrent	1052:12:38360:38368	521780	0	True				
ANR	521912	Identifier	onCurrent		521780	0					
ANR	521913	CompoundStatement		19:23:559:559	521780	1					
ANR	521914	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	1053:12:38385:38425	521780	0	True				
ANR	521915	CallExpression	KWindowSystem :: forceActiveWindow ( window )		521780	0					
ANR	521916	Callee	KWindowSystem :: forceActiveWindow		521780	0					
ANR	521917	Identifier	KWindowSystem :: forceActiveWindow		521780	0					
ANR	521918	ArgumentList	window		521780	1					
ANR	521919	Argument	window		521780	0					
ANR	521920	Identifier	window		521780	0					
ANR	521921	ElseStatement	else		521780	0					
ANR	521922	CompoundStatement		22:11:636:636	521780	0					
ANR	521923	ExpressionStatement	KWindowSystem :: minimizeWindow ( window )	1056:8:38458:38495	521780	0	True				
ANR	521924	CallExpression	KWindowSystem :: minimizeWindow ( window )		521780	0					
ANR	521925	Callee	KWindowSystem :: minimizeWindow		521780	0					
ANR	521926	Identifier	KWindowSystem :: minimizeWindow		521780	0					
ANR	521927	ArgumentList	window		521780	1					
ANR	521928	Argument	window		521780	0					
ANR	521929	Identifier	window		521780	0					
ANR	521930	ReturnType	void		521780	1					
ANR	521931	Identifier	XWindowTasksModel :: requestToggleMinimized		521780	2					
ANR	521932	ParameterList	const QModelIndex & index		521780	3					
ANR	521933	Parameter	const QModelIndex & index	1033:47:37785:37808	521780	0	True				
ANR	521934	ParameterType	const QModelIndex &		521780	0					
ANR	521935	Identifier	index		521780	1					
ANR	521936	CFGEntryNode	ENTRY		521780		True				
ANR	521937	CFGExitNode	EXIT		521780		True				
ANR	521938	Symbol	index . model		521780						
ANR	521939	Symbol	d -> windowInfo		521780						
ANR	521940	Symbol	d		521780						
ANR	521941	Symbol	this		521780						
ANR	521942	Symbol	index		521780						
ANR	521943	Symbol	index . isValid		521780						
ANR	521944	Symbol	onCurrent		521780						
ANR	521945	Symbol	d -> windows . count		521780						
ANR	521946	Symbol	* d		521780						
ANR	521947	Symbol	info -> desktop		521780						
ANR	521948	Symbol	info -> isOnCurrentDesktop		521780						
ANR	521949	Symbol	index . row		521780						
ANR	521950	Symbol	d -> windows		521780						
ANR	521951	Symbol	window		521780						
ANR	521952	Symbol	* info		521780						
ANR	521953	Symbol	d -> windows . at		521780						
ANR	521954	Symbol	info		521780						
ANR	521955	Symbol	info -> isMinimized		521780						
ANR	521956	Function	XWindowTasksModel :: requestToggleMaximized	1060:0:38506:39473							
ANR	521957	FunctionDef	XWindowTasksModel :: requestToggleMaximized (const QModelIndex & index)		521956	0					
ANR	521958	CompoundStatement		1061:0:38579:39473	521956	0					
ANR	521959	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		521956	0					
ANR	521960	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1062:8:38589:38685	521956	0	True				
ANR	521961	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521956	0		||			
ANR	521962	UnaryOperationExpression	! index . isValid ( )		521956	0					
ANR	521963	UnaryOperator	!		521956	0					
ANR	521964	CallExpression	index . isValid ( )		521956	1					
ANR	521965	Callee	index . isValid		521956	0					
ANR	521966	MemberAccess	index . isValid		521956	0					
ANR	521967	Identifier	index		521956	0					
ANR	521968	Identifier	isValid		521956	1					
ANR	521969	ArgumentList			521956	1					
ANR	521970	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521956	1		||			
ANR	521971	EqualityExpression	index . model ( ) != this		521956	0		!=			
ANR	521972	CallExpression	index . model ( )		521956	0					
ANR	521973	Callee	index . model		521956	0					
ANR	521974	MemberAccess	index . model		521956	0					
ANR	521975	Identifier	index		521956	0					
ANR	521976	Identifier	model		521956	1					
ANR	521977	ArgumentList			521956	1					
ANR	521978	Identifier	this		521956	1					
ANR	521979	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		521956	1		||			
ANR	521980	RelationalExpression	index . row ( ) < 0		521956	0		<			
ANR	521981	CallExpression	index . row ( )		521956	0					
ANR	521982	Callee	index . row		521956	0					
ANR	521983	MemberAccess	index . row		521956	0					
ANR	521984	Identifier	index		521956	0					
ANR	521985	Identifier	row		521956	1					
ANR	521986	ArgumentList			521956	1					
ANR	521987	PrimaryExpression	0		521956	1					
ANR	521988	RelationalExpression	index . row ( ) >= d -> windows . count ( )		521956	1		>=			
ANR	521989	CallExpression	index . row ( )		521956	0					
ANR	521990	Callee	index . row		521956	0					
ANR	521991	MemberAccess	index . row		521956	0					
ANR	521992	Identifier	index		521956	0					
ANR	521993	Identifier	row		521956	1					
ANR	521994	ArgumentList			521956	1					
ANR	521995	CallExpression	d -> windows . count ( )		521956	1					
ANR	521996	Callee	d -> windows . count		521956	0					
ANR	521997	MemberAccess	d -> windows . count		521956	0					
ANR	521998	PtrMemberAccess	d -> windows		521956	0					
ANR	521999	Identifier	d		521956	0					
ANR	522000	Identifier	windows		521956	1					
ANR	522001	Identifier	count		521956	1					
ANR	522002	ArgumentList			521956	1					
ANR	522003	CompoundStatement		2:107:108:108	521956	1					
ANR	522004	ReturnStatement	return ;	1063:8:38698:38704	521956	0	True				
ANR	522005	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1066:4:38717:38762	521956	1	True				
ANR	522006	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		521956	0					
ANR	522007	IdentifierDeclType	const WId		521956	0					
ANR	522008	Identifier	window		521956	1					
ANR	522009	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		521956	2		=			
ANR	522010	Identifier	window		521956	0					
ANR	522011	CallExpression	d -> windows . at ( index . row ( ) )		521956	1					
ANR	522012	Callee	d -> windows . at		521956	0					
ANR	522013	MemberAccess	d -> windows . at		521956	0					
ANR	522014	PtrMemberAccess	d -> windows		521956	0					
ANR	522015	Identifier	d		521956	0					
ANR	522016	Identifier	windows		521956	1					
ANR	522017	Identifier	at		521956	1					
ANR	522018	ArgumentList	index . row ( )		521956	1					
ANR	522019	Argument	index . row ( )		521956	0					
ANR	522020	CallExpression	index . row ( )		521956	0					
ANR	522021	Callee	index . row		521956	0					
ANR	522022	MemberAccess	index . row		521956	0					
ANR	522023	Identifier	index		521956	0					
ANR	522024	Identifier	row		521956	1					
ANR	522025	ArgumentList			521956	1					
ANR	522026	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1067:4:38768:38815	521956	2	True				
ANR	522027	IdentifierDecl	* info = d -> windowInfo ( window )		521956	0					
ANR	522028	IdentifierDeclType	const KWindowInfo *		521956	0					
ANR	522029	Identifier	info		521956	1					
ANR	522030	AssignmentExpression	* info = d -> windowInfo ( window )		521956	2		=			
ANR	522031	Identifier	info		521956	0					
ANR	522032	CallExpression	d -> windowInfo ( window )		521956	1					
ANR	522033	Callee	d -> windowInfo		521956	0					
ANR	522034	PtrMemberAccess	d -> windowInfo		521956	0					
ANR	522035	Identifier	d		521956	0					
ANR	522036	Identifier	windowInfo		521956	1					
ANR	522037	ArgumentList	window		521956	1					
ANR	522038	Argument	window		521956	0					
ANR	522039	Identifier	window		521956	0					
ANR	522040	IdentifierDeclStatement	bool onCurrent = info -> isOnCurrentDesktop ( ) ;	1068:4:38821:38864	521956	3	True				
ANR	522041	IdentifierDecl	onCurrent = info -> isOnCurrentDesktop ( )		521956	0					
ANR	522042	IdentifierDeclType	bool		521956	0					
ANR	522043	Identifier	onCurrent		521956	1					
ANR	522044	AssignmentExpression	onCurrent = info -> isOnCurrentDesktop ( )		521956	2		=			
ANR	522045	Identifier	onCurrent		521956	0					
ANR	522046	CallExpression	info -> isOnCurrentDesktop ( )		521956	1					
ANR	522047	Callee	info -> isOnCurrentDesktop		521956	0					
ANR	522048	PtrMemberAccess	info -> isOnCurrentDesktop		521956	0					
ANR	522049	Identifier	info		521956	0					
ANR	522050	Identifier	isOnCurrentDesktop		521956	1					
ANR	522051	ArgumentList			521956	1					
ANR	522052	IdentifierDeclStatement	bool restore = ( info -> hasState ( NET :: MaxHoriz ) && info -> hasState ( NET :: MaxVert ) ) ;	1069:4:38870:38948	521956	4	True				
ANR	522053	IdentifierDecl	restore = ( info -> hasState ( NET :: MaxHoriz ) && info -> hasState ( NET :: MaxVert ) )		521956	0					
ANR	522054	IdentifierDeclType	bool		521956	0					
ANR	522055	Identifier	restore		521956	1					
ANR	522056	AssignmentExpression	restore = ( info -> hasState ( NET :: MaxHoriz ) && info -> hasState ( NET :: MaxVert ) )		521956	2		=			
ANR	522057	Identifier	restore		521956	0					
ANR	522058	AndExpression	info -> hasState ( NET :: MaxHoriz ) && info -> hasState ( NET :: MaxVert )		521956	1		&&			
ANR	522059	CallExpression	info -> hasState ( NET :: MaxHoriz )		521956	0					
ANR	522060	Callee	info -> hasState		521956	0					
ANR	522061	PtrMemberAccess	info -> hasState		521956	0					
ANR	522062	Identifier	info		521956	0					
ANR	522063	Identifier	hasState		521956	1					
ANR	522064	ArgumentList	NET :: MaxHoriz		521956	1					
ANR	522065	Argument	NET :: MaxHoriz		521956	0					
ANR	522066	Identifier	NET :: MaxHoriz		521956	0					
ANR	522067	CallExpression	info -> hasState ( NET :: MaxVert )		521956	1					
ANR	522068	Callee	info -> hasState		521956	0					
ANR	522069	PtrMemberAccess	info -> hasState		521956	0					
ANR	522070	Identifier	info		521956	0					
ANR	522071	Identifier	hasState		521956	1					
ANR	522072	ArgumentList	NET :: MaxVert		521956	1					
ANR	522073	Argument	NET :: MaxVert		521956	0					
ANR	522074	Identifier	NET :: MaxVert		521956	0					
ANR	522075	IfStatement	if ( ! onCurrent )		521956	5					
ANR	522076	Condition	! onCurrent	1072:8:39018:39027	521956	0	True				
ANR	522077	UnaryOperationExpression	! onCurrent		521956	0					
ANR	522078	UnaryOperator	!		521956	0					
ANR	522079	Identifier	onCurrent		521956	1					
ANR	522080	CompoundStatement		12:20:450:450	521956	1					
ANR	522081	ExpressionStatement	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )	1073:8:39040:39089	521956	0	True				
ANR	522082	CallExpression	KWindowSystem :: setCurrentDesktop ( info -> desktop ( ) )		521956	0					
ANR	522083	Callee	KWindowSystem :: setCurrentDesktop		521956	0					
ANR	522084	Identifier	KWindowSystem :: setCurrentDesktop		521956	0					
ANR	522085	ArgumentList	info -> desktop ( )		521956	1					
ANR	522086	Argument	info -> desktop ( )		521956	0					
ANR	522087	CallExpression	info -> desktop ( )		521956	0					
ANR	522088	Callee	info -> desktop		521956	0					
ANR	522089	PtrMemberAccess	info -> desktop		521956	0					
ANR	522090	Identifier	info		521956	0					
ANR	522091	Identifier	desktop		521956	1					
ANR	522092	ArgumentList			521956	1					
ANR	522093	IfStatement	if ( info -> isMinimized ( ) )		521956	6					
ANR	522094	Condition	info -> isMinimized ( )	1076:8:39106:39124	521956	0	True				
ANR	522095	CallExpression	info -> isMinimized ( )		521956	0					
ANR	522096	Callee	info -> isMinimized		521956	0					
ANR	522097	PtrMemberAccess	info -> isMinimized		521956	0					
ANR	522098	Identifier	info		521956	0					
ANR	522099	Identifier	isMinimized		521956	1					
ANR	522100	ArgumentList			521956	1					
ANR	522101	CompoundStatement		16:29:547:547	521956	1					
ANR	522102	ExpressionStatement	KWindowSystem :: unminimizeWindow ( window )	1077:8:39137:39176	521956	0	True				
ANR	522103	CallExpression	KWindowSystem :: unminimizeWindow ( window )		521956	0					
ANR	522104	Callee	KWindowSystem :: unminimizeWindow		521956	0					
ANR	522105	Identifier	KWindowSystem :: unminimizeWindow		521956	0					
ANR	522106	ArgumentList	window		521956	1					
ANR	522107	Argument	window		521956	0					
ANR	522108	Identifier	window		521956	0					
ANR	522109	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 ) ;"	1080:4:39189:39278	521956	7	True				
ANR	522110	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 )"		521956	0					
ANR	522111	IdentifierDeclType	NETWinInfo		521956	0					
ANR	522112	Identifier	ni		521956	1					
ANR	522113	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		521956	2					
ANR	522114	CallExpression	QX11Info :: connection ( )		521956	0					
ANR	522115	Callee	QX11Info :: connection		521956	0					
ANR	522116	Identifier	QX11Info :: connection		521956	0					
ANR	522117	ArgumentList			521956	1					
ANR	522118	Expression	"window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		521956	1					
ANR	522119	Identifier	window		521956	0					
ANR	522120	Expression	"QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		521956	1					
ANR	522121	CallExpression	QX11Info :: appRootWindow ( )		521956	0					
ANR	522122	Callee	QX11Info :: appRootWindow		521956	0					
ANR	522123	Identifier	QX11Info :: appRootWindow		521956	0					
ANR	522124	ArgumentList			521956	1					
ANR	522125	Expression	"NET :: WMState , 0"		521956	1					
ANR	522126	Identifier	NET :: WMState		521956	0					
ANR	522127	PrimaryExpression	0		521956	1					
ANR	522128	IfStatement	if ( restore )		521956	8					
ANR	522129	Condition	restore	1082:8:39289:39295	521956	0	True				
ANR	522130	Identifier	restore		521956	0					
ANR	522131	CompoundStatement		22:17:718:718	521956	1					
ANR	522132	ExpressionStatement	"ni . setState ( 0 , NET :: Max )"	1083:8:39308:39332	521956	0	True				
ANR	522133	CallExpression	"ni . setState ( 0 , NET :: Max )"		521956	0					
ANR	522134	Callee	ni . setState		521956	0					
ANR	522135	MemberAccess	ni . setState		521956	0					
ANR	522136	Identifier	ni		521956	0					
ANR	522137	Identifier	setState		521956	1					
ANR	522138	ArgumentList	0		521956	1					
ANR	522139	Argument	0		521956	0					
ANR	522140	PrimaryExpression	0		521956	0					
ANR	522141	Argument	NET :: Max		521956	1					
ANR	522142	Identifier	NET :: Max		521956	0					
ANR	522143	ElseStatement	else		521956	0					
ANR	522144	CompoundStatement		24:11:765:765	521956	0					
ANR	522145	ExpressionStatement	"ni . setState ( NET :: Max , NET :: Max )"	1085:8:39355:39386	521956	0	True				
ANR	522146	CallExpression	"ni . setState ( NET :: Max , NET :: Max )"		521956	0					
ANR	522147	Callee	ni . setState		521956	0					
ANR	522148	MemberAccess	ni . setState		521956	0					
ANR	522149	Identifier	ni		521956	0					
ANR	522150	Identifier	setState		521956	1					
ANR	522151	ArgumentList	NET :: Max		521956	1					
ANR	522152	Argument	NET :: Max		521956	0					
ANR	522153	Identifier	NET :: Max		521956	0					
ANR	522154	Argument	NET :: Max		521956	1					
ANR	522155	Identifier	NET :: Max		521956	0					
ANR	522156	IfStatement	if ( ! onCurrent )		521956	9					
ANR	522157	Condition	! onCurrent	1088:8:39403:39412	521956	0	True				
ANR	522158	UnaryOperationExpression	! onCurrent		521956	0					
ANR	522159	UnaryOperator	!		521956	0					
ANR	522160	Identifier	onCurrent		521956	1					
ANR	522161	CompoundStatement		28:20:835:835	521956	1					
ANR	522162	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	1089:8:39425:39465	521956	0	True				
ANR	522163	CallExpression	KWindowSystem :: forceActiveWindow ( window )		521956	0					
ANR	522164	Callee	KWindowSystem :: forceActiveWindow		521956	0					
ANR	522165	Identifier	KWindowSystem :: forceActiveWindow		521956	0					
ANR	522166	ArgumentList	window		521956	1					
ANR	522167	Argument	window		521956	0					
ANR	522168	Identifier	window		521956	0					
ANR	522169	ReturnType	void		521956	1					
ANR	522170	Identifier	XWindowTasksModel :: requestToggleMaximized		521956	2					
ANR	522171	ParameterList	const QModelIndex & index		521956	3					
ANR	522172	Parameter	const QModelIndex & index	1060:47:38553:38576	521956	0	True				
ANR	522173	ParameterType	const QModelIndex &		521956	0					
ANR	522174	Identifier	index		521956	1					
ANR	522175	CFGEntryNode	ENTRY		521956		True				
ANR	522176	CFGExitNode	EXIT		521956		True				
ANR	522177	Symbol	index . model		521956						
ANR	522178	Symbol	NET :: MaxVert		521956						
ANR	522179	Symbol	d -> windowInfo		521956						
ANR	522180	Symbol	d		521956						
ANR	522181	Symbol	restore		521956						
ANR	522182	Symbol	this		521956						
ANR	522183	Symbol	NET :: MaxHoriz		521956						
ANR	522184	Symbol	index		521956						
ANR	522185	Symbol	index . isValid		521956						
ANR	522186	Symbol	onCurrent		521956						
ANR	522187	Symbol	d -> windows . count		521956						
ANR	522188	Symbol	* d		521956						
ANR	522189	Symbol	info -> hasState		521956						
ANR	522190	Symbol	NET :: Max		521956						
ANR	522191	Symbol	info -> desktop		521956						
ANR	522192	Symbol	info -> isOnCurrentDesktop		521956						
ANR	522193	Symbol	index . row		521956						
ANR	522194	Symbol	d -> windows		521956						
ANR	522195	Symbol	window		521956						
ANR	522196	Symbol	* info		521956						
ANR	522197	Symbol	ni		521956						
ANR	522198	Symbol	d -> windows . at		521956						
ANR	522199	Symbol	info		521956						
ANR	522200	Symbol	info -> isMinimized		521956						
ANR	522201	Function	XWindowTasksModel :: requestToggleKeepAbove	1093:0:39476:40042							
ANR	522202	FunctionDef	XWindowTasksModel :: requestToggleKeepAbove (const QModelIndex & index)		522201	0					
ANR	522203	CompoundStatement		1094:0:39549:40042	522201	0					
ANR	522204	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		522201	0					
ANR	522205	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1095:8:39559:39655	522201	0	True				
ANR	522206	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522201	0		||			
ANR	522207	UnaryOperationExpression	! index . isValid ( )		522201	0					
ANR	522208	UnaryOperator	!		522201	0					
ANR	522209	CallExpression	index . isValid ( )		522201	1					
ANR	522210	Callee	index . isValid		522201	0					
ANR	522211	MemberAccess	index . isValid		522201	0					
ANR	522212	Identifier	index		522201	0					
ANR	522213	Identifier	isValid		522201	1					
ANR	522214	ArgumentList			522201	1					
ANR	522215	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522201	1		||			
ANR	522216	EqualityExpression	index . model ( ) != this		522201	0		!=			
ANR	522217	CallExpression	index . model ( )		522201	0					
ANR	522218	Callee	index . model		522201	0					
ANR	522219	MemberAccess	index . model		522201	0					
ANR	522220	Identifier	index		522201	0					
ANR	522221	Identifier	model		522201	1					
ANR	522222	ArgumentList			522201	1					
ANR	522223	Identifier	this		522201	1					
ANR	522224	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522201	1		||			
ANR	522225	RelationalExpression	index . row ( ) < 0		522201	0		<			
ANR	522226	CallExpression	index . row ( )		522201	0					
ANR	522227	Callee	index . row		522201	0					
ANR	522228	MemberAccess	index . row		522201	0					
ANR	522229	Identifier	index		522201	0					
ANR	522230	Identifier	row		522201	1					
ANR	522231	ArgumentList			522201	1					
ANR	522232	PrimaryExpression	0		522201	1					
ANR	522233	RelationalExpression	index . row ( ) >= d -> windows . count ( )		522201	1		>=			
ANR	522234	CallExpression	index . row ( )		522201	0					
ANR	522235	Callee	index . row		522201	0					
ANR	522236	MemberAccess	index . row		522201	0					
ANR	522237	Identifier	index		522201	0					
ANR	522238	Identifier	row		522201	1					
ANR	522239	ArgumentList			522201	1					
ANR	522240	CallExpression	d -> windows . count ( )		522201	1					
ANR	522241	Callee	d -> windows . count		522201	0					
ANR	522242	MemberAccess	d -> windows . count		522201	0					
ANR	522243	PtrMemberAccess	d -> windows		522201	0					
ANR	522244	Identifier	d		522201	0					
ANR	522245	Identifier	windows		522201	1					
ANR	522246	Identifier	count		522201	1					
ANR	522247	ArgumentList			522201	1					
ANR	522248	CompoundStatement		2:107:108:108	522201	1					
ANR	522249	ReturnStatement	return ;	1096:8:39668:39674	522201	0	True				
ANR	522250	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1099:4:39687:39732	522201	1	True				
ANR	522251	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		522201	0					
ANR	522252	IdentifierDeclType	const WId		522201	0					
ANR	522253	Identifier	window		522201	1					
ANR	522254	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		522201	2		=			
ANR	522255	Identifier	window		522201	0					
ANR	522256	CallExpression	d -> windows . at ( index . row ( ) )		522201	1					
ANR	522257	Callee	d -> windows . at		522201	0					
ANR	522258	MemberAccess	d -> windows . at		522201	0					
ANR	522259	PtrMemberAccess	d -> windows		522201	0					
ANR	522260	Identifier	d		522201	0					
ANR	522261	Identifier	windows		522201	1					
ANR	522262	Identifier	at		522201	1					
ANR	522263	ArgumentList	index . row ( )		522201	1					
ANR	522264	Argument	index . row ( )		522201	0					
ANR	522265	CallExpression	index . row ( )		522201	0					
ANR	522266	Callee	index . row		522201	0					
ANR	522267	MemberAccess	index . row		522201	0					
ANR	522268	Identifier	index		522201	0					
ANR	522269	Identifier	row		522201	1					
ANR	522270	ArgumentList			522201	1					
ANR	522271	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1100:4:39738:39785	522201	2	True				
ANR	522272	IdentifierDecl	* info = d -> windowInfo ( window )		522201	0					
ANR	522273	IdentifierDeclType	const KWindowInfo *		522201	0					
ANR	522274	Identifier	info		522201	1					
ANR	522275	AssignmentExpression	* info = d -> windowInfo ( window )		522201	2		=			
ANR	522276	Identifier	info		522201	0					
ANR	522277	CallExpression	d -> windowInfo ( window )		522201	1					
ANR	522278	Callee	d -> windowInfo		522201	0					
ANR	522279	PtrMemberAccess	d -> windowInfo		522201	0					
ANR	522280	Identifier	d		522201	0					
ANR	522281	Identifier	windowInfo		522201	1					
ANR	522282	ArgumentList	window		522201	1					
ANR	522283	Argument	window		522201	0					
ANR	522284	Identifier	window		522201	0					
ANR	522285	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 ) ;"	1102:4:39792:39881	522201	3	True				
ANR	522286	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 )"		522201	0					
ANR	522287	IdentifierDeclType	NETWinInfo		522201	0					
ANR	522288	Identifier	ni		522201	1					
ANR	522289	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522201	2					
ANR	522290	CallExpression	QX11Info :: connection ( )		522201	0					
ANR	522291	Callee	QX11Info :: connection		522201	0					
ANR	522292	Identifier	QX11Info :: connection		522201	0					
ANR	522293	ArgumentList			522201	1					
ANR	522294	Expression	"window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522201	1					
ANR	522295	Identifier	window		522201	0					
ANR	522296	Expression	"QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522201	1					
ANR	522297	CallExpression	QX11Info :: appRootWindow ( )		522201	0					
ANR	522298	Callee	QX11Info :: appRootWindow		522201	0					
ANR	522299	Identifier	QX11Info :: appRootWindow		522201	0					
ANR	522300	ArgumentList			522201	1					
ANR	522301	Expression	"NET :: WMState , 0"		522201	1					
ANR	522302	Identifier	NET :: WMState		522201	0					
ANR	522303	PrimaryExpression	0		522201	1					
ANR	522304	IfStatement	if ( info -> hasState ( NET :: StaysOnTop ) )		522201	4					
ANR	522305	Condition	info -> hasState ( NET :: StaysOnTop )	1104:8:39892:39922	522201	0	True				
ANR	522306	CallExpression	info -> hasState ( NET :: StaysOnTop )		522201	0					
ANR	522307	Callee	info -> hasState		522201	0					
ANR	522308	PtrMemberAccess	info -> hasState		522201	0					
ANR	522309	Identifier	info		522201	0					
ANR	522310	Identifier	hasState		522201	1					
ANR	522311	ArgumentList	NET :: StaysOnTop		522201	1					
ANR	522312	Argument	NET :: StaysOnTop		522201	0					
ANR	522313	Identifier	NET :: StaysOnTop		522201	0					
ANR	522314	CompoundStatement		11:41:375:375	522201	1					
ANR	522315	ExpressionStatement	"ni . setState ( 0 , NET :: StaysOnTop )"	1105:8:39935:39966	522201	0	True				
ANR	522316	CallExpression	"ni . setState ( 0 , NET :: StaysOnTop )"		522201	0					
ANR	522317	Callee	ni . setState		522201	0					
ANR	522318	MemberAccess	ni . setState		522201	0					
ANR	522319	Identifier	ni		522201	0					
ANR	522320	Identifier	setState		522201	1					
ANR	522321	ArgumentList	0		522201	1					
ANR	522322	Argument	0		522201	0					
ANR	522323	PrimaryExpression	0		522201	0					
ANR	522324	Argument	NET :: StaysOnTop		522201	1					
ANR	522325	Identifier	NET :: StaysOnTop		522201	0					
ANR	522326	ElseStatement	else		522201	0					
ANR	522327	CompoundStatement		13:11:429:429	522201	0					
ANR	522328	ExpressionStatement	"ni . setState ( NET :: StaysOnTop , NET :: StaysOnTop )"	1107:8:39989:40034	522201	0	True				
ANR	522329	CallExpression	"ni . setState ( NET :: StaysOnTop , NET :: StaysOnTop )"		522201	0					
ANR	522330	Callee	ni . setState		522201	0					
ANR	522331	MemberAccess	ni . setState		522201	0					
ANR	522332	Identifier	ni		522201	0					
ANR	522333	Identifier	setState		522201	1					
ANR	522334	ArgumentList	NET :: StaysOnTop		522201	1					
ANR	522335	Argument	NET :: StaysOnTop		522201	0					
ANR	522336	Identifier	NET :: StaysOnTop		522201	0					
ANR	522337	Argument	NET :: StaysOnTop		522201	1					
ANR	522338	Identifier	NET :: StaysOnTop		522201	0					
ANR	522339	ReturnType	void		522201	1					
ANR	522340	Identifier	XWindowTasksModel :: requestToggleKeepAbove		522201	2					
ANR	522341	ParameterList	const QModelIndex & index		522201	3					
ANR	522342	Parameter	const QModelIndex & index	1093:47:39523:39546	522201	0	True				
ANR	522343	ParameterType	const QModelIndex &		522201	0					
ANR	522344	Identifier	index		522201	1					
ANR	522345	CFGEntryNode	ENTRY		522201		True				
ANR	522346	CFGExitNode	EXIT		522201		True				
ANR	522347	Symbol	index . model		522201						
ANR	522348	Symbol	d -> windowInfo		522201						
ANR	522349	Symbol	d		522201						
ANR	522350	Symbol	this		522201						
ANR	522351	Symbol	index		522201						
ANR	522352	Symbol	index . isValid		522201						
ANR	522353	Symbol	d -> windows . count		522201						
ANR	522354	Symbol	* d		522201						
ANR	522355	Symbol	info -> hasState		522201						
ANR	522356	Symbol	NET :: StaysOnTop		522201						
ANR	522357	Symbol	index . row		522201						
ANR	522358	Symbol	d -> windows		522201						
ANR	522359	Symbol	window		522201						
ANR	522360	Symbol	ni		522201						
ANR	522361	Symbol	* info		522201						
ANR	522362	Symbol	d -> windows . at		522201						
ANR	522363	Symbol	info		522201						
ANR	522364	Function	XWindowTasksModel :: requestToggleKeepBelow	1111:0:40045:40607							
ANR	522365	FunctionDef	XWindowTasksModel :: requestToggleKeepBelow (const QModelIndex & index)		522364	0					
ANR	522366	CompoundStatement		1112:0:40118:40607	522364	0					
ANR	522367	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		522364	0					
ANR	522368	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1113:8:40128:40224	522364	0	True				
ANR	522369	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522364	0		||			
ANR	522370	UnaryOperationExpression	! index . isValid ( )		522364	0					
ANR	522371	UnaryOperator	!		522364	0					
ANR	522372	CallExpression	index . isValid ( )		522364	1					
ANR	522373	Callee	index . isValid		522364	0					
ANR	522374	MemberAccess	index . isValid		522364	0					
ANR	522375	Identifier	index		522364	0					
ANR	522376	Identifier	isValid		522364	1					
ANR	522377	ArgumentList			522364	1					
ANR	522378	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522364	1		||			
ANR	522379	EqualityExpression	index . model ( ) != this		522364	0		!=			
ANR	522380	CallExpression	index . model ( )		522364	0					
ANR	522381	Callee	index . model		522364	0					
ANR	522382	MemberAccess	index . model		522364	0					
ANR	522383	Identifier	index		522364	0					
ANR	522384	Identifier	model		522364	1					
ANR	522385	ArgumentList			522364	1					
ANR	522386	Identifier	this		522364	1					
ANR	522387	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522364	1		||			
ANR	522388	RelationalExpression	index . row ( ) < 0		522364	0		<			
ANR	522389	CallExpression	index . row ( )		522364	0					
ANR	522390	Callee	index . row		522364	0					
ANR	522391	MemberAccess	index . row		522364	0					
ANR	522392	Identifier	index		522364	0					
ANR	522393	Identifier	row		522364	1					
ANR	522394	ArgumentList			522364	1					
ANR	522395	PrimaryExpression	0		522364	1					
ANR	522396	RelationalExpression	index . row ( ) >= d -> windows . count ( )		522364	1		>=			
ANR	522397	CallExpression	index . row ( )		522364	0					
ANR	522398	Callee	index . row		522364	0					
ANR	522399	MemberAccess	index . row		522364	0					
ANR	522400	Identifier	index		522364	0					
ANR	522401	Identifier	row		522364	1					
ANR	522402	ArgumentList			522364	1					
ANR	522403	CallExpression	d -> windows . count ( )		522364	1					
ANR	522404	Callee	d -> windows . count		522364	0					
ANR	522405	MemberAccess	d -> windows . count		522364	0					
ANR	522406	PtrMemberAccess	d -> windows		522364	0					
ANR	522407	Identifier	d		522364	0					
ANR	522408	Identifier	windows		522364	1					
ANR	522409	Identifier	count		522364	1					
ANR	522410	ArgumentList			522364	1					
ANR	522411	CompoundStatement		2:107:108:108	522364	1					
ANR	522412	ReturnStatement	return ;	1114:8:40237:40243	522364	0	True				
ANR	522413	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1117:4:40256:40301	522364	1	True				
ANR	522414	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		522364	0					
ANR	522415	IdentifierDeclType	const WId		522364	0					
ANR	522416	Identifier	window		522364	1					
ANR	522417	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		522364	2		=			
ANR	522418	Identifier	window		522364	0					
ANR	522419	CallExpression	d -> windows . at ( index . row ( ) )		522364	1					
ANR	522420	Callee	d -> windows . at		522364	0					
ANR	522421	MemberAccess	d -> windows . at		522364	0					
ANR	522422	PtrMemberAccess	d -> windows		522364	0					
ANR	522423	Identifier	d		522364	0					
ANR	522424	Identifier	windows		522364	1					
ANR	522425	Identifier	at		522364	1					
ANR	522426	ArgumentList	index . row ( )		522364	1					
ANR	522427	Argument	index . row ( )		522364	0					
ANR	522428	CallExpression	index . row ( )		522364	0					
ANR	522429	Callee	index . row		522364	0					
ANR	522430	MemberAccess	index . row		522364	0					
ANR	522431	Identifier	index		522364	0					
ANR	522432	Identifier	row		522364	1					
ANR	522433	ArgumentList			522364	1					
ANR	522434	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1118:4:40307:40354	522364	2	True				
ANR	522435	IdentifierDecl	* info = d -> windowInfo ( window )		522364	0					
ANR	522436	IdentifierDeclType	const KWindowInfo *		522364	0					
ANR	522437	Identifier	info		522364	1					
ANR	522438	AssignmentExpression	* info = d -> windowInfo ( window )		522364	2		=			
ANR	522439	Identifier	info		522364	0					
ANR	522440	CallExpression	d -> windowInfo ( window )		522364	1					
ANR	522441	Callee	d -> windowInfo		522364	0					
ANR	522442	PtrMemberAccess	d -> windowInfo		522364	0					
ANR	522443	Identifier	d		522364	0					
ANR	522444	Identifier	windowInfo		522364	1					
ANR	522445	ArgumentList	window		522364	1					
ANR	522446	Argument	window		522364	0					
ANR	522447	Identifier	window		522364	0					
ANR	522448	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 ) ;"	1120:4:40361:40450	522364	3	True				
ANR	522449	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 )"		522364	0					
ANR	522450	IdentifierDeclType	NETWinInfo		522364	0					
ANR	522451	Identifier	ni		522364	1					
ANR	522452	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522364	2					
ANR	522453	CallExpression	QX11Info :: connection ( )		522364	0					
ANR	522454	Callee	QX11Info :: connection		522364	0					
ANR	522455	Identifier	QX11Info :: connection		522364	0					
ANR	522456	ArgumentList			522364	1					
ANR	522457	Expression	"window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522364	1					
ANR	522458	Identifier	window		522364	0					
ANR	522459	Expression	"QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522364	1					
ANR	522460	CallExpression	QX11Info :: appRootWindow ( )		522364	0					
ANR	522461	Callee	QX11Info :: appRootWindow		522364	0					
ANR	522462	Identifier	QX11Info :: appRootWindow		522364	0					
ANR	522463	ArgumentList			522364	1					
ANR	522464	Expression	"NET :: WMState , 0"		522364	1					
ANR	522465	Identifier	NET :: WMState		522364	0					
ANR	522466	PrimaryExpression	0		522364	1					
ANR	522467	IfStatement	if ( info -> hasState ( NET :: KeepBelow ) )		522364	4					
ANR	522468	Condition	info -> hasState ( NET :: KeepBelow )	1122:8:40461:40490	522364	0	True				
ANR	522469	CallExpression	info -> hasState ( NET :: KeepBelow )		522364	0					
ANR	522470	Callee	info -> hasState		522364	0					
ANR	522471	PtrMemberAccess	info -> hasState		522364	0					
ANR	522472	Identifier	info		522364	0					
ANR	522473	Identifier	hasState		522364	1					
ANR	522474	ArgumentList	NET :: KeepBelow		522364	1					
ANR	522475	Argument	NET :: KeepBelow		522364	0					
ANR	522476	Identifier	NET :: KeepBelow		522364	0					
ANR	522477	CompoundStatement		11:40:374:374	522364	1					
ANR	522478	ExpressionStatement	"ni . setState ( 0 , NET :: KeepBelow )"	1123:8:40503:40533	522364	0	True				
ANR	522479	CallExpression	"ni . setState ( 0 , NET :: KeepBelow )"		522364	0					
ANR	522480	Callee	ni . setState		522364	0					
ANR	522481	MemberAccess	ni . setState		522364	0					
ANR	522482	Identifier	ni		522364	0					
ANR	522483	Identifier	setState		522364	1					
ANR	522484	ArgumentList	0		522364	1					
ANR	522485	Argument	0		522364	0					
ANR	522486	PrimaryExpression	0		522364	0					
ANR	522487	Argument	NET :: KeepBelow		522364	1					
ANR	522488	Identifier	NET :: KeepBelow		522364	0					
ANR	522489	ElseStatement	else		522364	0					
ANR	522490	CompoundStatement		13:11:427:427	522364	0					
ANR	522491	ExpressionStatement	"ni . setState ( NET :: KeepBelow , NET :: KeepBelow )"	1125:8:40556:40599	522364	0	True				
ANR	522492	CallExpression	"ni . setState ( NET :: KeepBelow , NET :: KeepBelow )"		522364	0					
ANR	522493	Callee	ni . setState		522364	0					
ANR	522494	MemberAccess	ni . setState		522364	0					
ANR	522495	Identifier	ni		522364	0					
ANR	522496	Identifier	setState		522364	1					
ANR	522497	ArgumentList	NET :: KeepBelow		522364	1					
ANR	522498	Argument	NET :: KeepBelow		522364	0					
ANR	522499	Identifier	NET :: KeepBelow		522364	0					
ANR	522500	Argument	NET :: KeepBelow		522364	1					
ANR	522501	Identifier	NET :: KeepBelow		522364	0					
ANR	522502	ReturnType	void		522364	1					
ANR	522503	Identifier	XWindowTasksModel :: requestToggleKeepBelow		522364	2					
ANR	522504	ParameterList	const QModelIndex & index		522364	3					
ANR	522505	Parameter	const QModelIndex & index	1111:47:40092:40115	522364	0	True				
ANR	522506	ParameterType	const QModelIndex &		522364	0					
ANR	522507	Identifier	index		522364	1					
ANR	522508	CFGEntryNode	ENTRY		522364		True				
ANR	522509	CFGExitNode	EXIT		522364		True				
ANR	522510	Symbol	index . model		522364						
ANR	522511	Symbol	d -> windowInfo		522364						
ANR	522512	Symbol	d		522364						
ANR	522513	Symbol	this		522364						
ANR	522514	Symbol	index		522364						
ANR	522515	Symbol	index . isValid		522364						
ANR	522516	Symbol	d -> windows . count		522364						
ANR	522517	Symbol	NET :: KeepBelow		522364						
ANR	522518	Symbol	* d		522364						
ANR	522519	Symbol	info -> hasState		522364						
ANR	522520	Symbol	index . row		522364						
ANR	522521	Symbol	d -> windows		522364						
ANR	522522	Symbol	window		522364						
ANR	522523	Symbol	ni		522364						
ANR	522524	Symbol	* info		522364						
ANR	522525	Symbol	d -> windows . at		522364						
ANR	522526	Symbol	info		522364						
ANR	522527	Function	XWindowTasksModel :: requestToggleFullScreen	1129:0:40610:41177							
ANR	522528	FunctionDef	XWindowTasksModel :: requestToggleFullScreen (const QModelIndex & index)		522527	0					
ANR	522529	CompoundStatement		1130:0:40684:41177	522527	0					
ANR	522530	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		522527	0					
ANR	522531	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1131:8:40694:40790	522527	0	True				
ANR	522532	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522527	0		||			
ANR	522533	UnaryOperationExpression	! index . isValid ( )		522527	0					
ANR	522534	UnaryOperator	!		522527	0					
ANR	522535	CallExpression	index . isValid ( )		522527	1					
ANR	522536	Callee	index . isValid		522527	0					
ANR	522537	MemberAccess	index . isValid		522527	0					
ANR	522538	Identifier	index		522527	0					
ANR	522539	Identifier	isValid		522527	1					
ANR	522540	ArgumentList			522527	1					
ANR	522541	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522527	1		||			
ANR	522542	EqualityExpression	index . model ( ) != this		522527	0		!=			
ANR	522543	CallExpression	index . model ( )		522527	0					
ANR	522544	Callee	index . model		522527	0					
ANR	522545	MemberAccess	index . model		522527	0					
ANR	522546	Identifier	index		522527	0					
ANR	522547	Identifier	model		522527	1					
ANR	522548	ArgumentList			522527	1					
ANR	522549	Identifier	this		522527	1					
ANR	522550	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522527	1		||			
ANR	522551	RelationalExpression	index . row ( ) < 0		522527	0		<			
ANR	522552	CallExpression	index . row ( )		522527	0					
ANR	522553	Callee	index . row		522527	0					
ANR	522554	MemberAccess	index . row		522527	0					
ANR	522555	Identifier	index		522527	0					
ANR	522556	Identifier	row		522527	1					
ANR	522557	ArgumentList			522527	1					
ANR	522558	PrimaryExpression	0		522527	1					
ANR	522559	RelationalExpression	index . row ( ) >= d -> windows . count ( )		522527	1		>=			
ANR	522560	CallExpression	index . row ( )		522527	0					
ANR	522561	Callee	index . row		522527	0					
ANR	522562	MemberAccess	index . row		522527	0					
ANR	522563	Identifier	index		522527	0					
ANR	522564	Identifier	row		522527	1					
ANR	522565	ArgumentList			522527	1					
ANR	522566	CallExpression	d -> windows . count ( )		522527	1					
ANR	522567	Callee	d -> windows . count		522527	0					
ANR	522568	MemberAccess	d -> windows . count		522527	0					
ANR	522569	PtrMemberAccess	d -> windows		522527	0					
ANR	522570	Identifier	d		522527	0					
ANR	522571	Identifier	windows		522527	1					
ANR	522572	Identifier	count		522527	1					
ANR	522573	ArgumentList			522527	1					
ANR	522574	CompoundStatement		2:107:108:108	522527	1					
ANR	522575	ReturnStatement	return ;	1132:8:40803:40809	522527	0	True				
ANR	522576	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1135:4:40822:40867	522527	1	True				
ANR	522577	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		522527	0					
ANR	522578	IdentifierDeclType	const WId		522527	0					
ANR	522579	Identifier	window		522527	1					
ANR	522580	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		522527	2		=			
ANR	522581	Identifier	window		522527	0					
ANR	522582	CallExpression	d -> windows . at ( index . row ( ) )		522527	1					
ANR	522583	Callee	d -> windows . at		522527	0					
ANR	522584	MemberAccess	d -> windows . at		522527	0					
ANR	522585	PtrMemberAccess	d -> windows		522527	0					
ANR	522586	Identifier	d		522527	0					
ANR	522587	Identifier	windows		522527	1					
ANR	522588	Identifier	at		522527	1					
ANR	522589	ArgumentList	index . row ( )		522527	1					
ANR	522590	Argument	index . row ( )		522527	0					
ANR	522591	CallExpression	index . row ( )		522527	0					
ANR	522592	Callee	index . row		522527	0					
ANR	522593	MemberAccess	index . row		522527	0					
ANR	522594	Identifier	index		522527	0					
ANR	522595	Identifier	row		522527	1					
ANR	522596	ArgumentList			522527	1					
ANR	522597	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1136:4:40873:40920	522527	2	True				
ANR	522598	IdentifierDecl	* info = d -> windowInfo ( window )		522527	0					
ANR	522599	IdentifierDeclType	const KWindowInfo *		522527	0					
ANR	522600	Identifier	info		522527	1					
ANR	522601	AssignmentExpression	* info = d -> windowInfo ( window )		522527	2		=			
ANR	522602	Identifier	info		522527	0					
ANR	522603	CallExpression	d -> windowInfo ( window )		522527	1					
ANR	522604	Callee	d -> windowInfo		522527	0					
ANR	522605	PtrMemberAccess	d -> windowInfo		522527	0					
ANR	522606	Identifier	d		522527	0					
ANR	522607	Identifier	windowInfo		522527	1					
ANR	522608	ArgumentList	window		522527	1					
ANR	522609	Argument	window		522527	0					
ANR	522610	Identifier	window		522527	0					
ANR	522611	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 ) ;"	1138:4:40927:41016	522527	3	True				
ANR	522612	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 )"		522527	0					
ANR	522613	IdentifierDeclType	NETWinInfo		522527	0					
ANR	522614	Identifier	ni		522527	1					
ANR	522615	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522527	2					
ANR	522616	CallExpression	QX11Info :: connection ( )		522527	0					
ANR	522617	Callee	QX11Info :: connection		522527	0					
ANR	522618	Identifier	QX11Info :: connection		522527	0					
ANR	522619	ArgumentList			522527	1					
ANR	522620	Expression	"window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522527	1					
ANR	522621	Identifier	window		522527	0					
ANR	522622	Expression	"QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522527	1					
ANR	522623	CallExpression	QX11Info :: appRootWindow ( )		522527	0					
ANR	522624	Callee	QX11Info :: appRootWindow		522527	0					
ANR	522625	Identifier	QX11Info :: appRootWindow		522527	0					
ANR	522626	ArgumentList			522527	1					
ANR	522627	Expression	"NET :: WMState , 0"		522527	1					
ANR	522628	Identifier	NET :: WMState		522527	0					
ANR	522629	PrimaryExpression	0		522527	1					
ANR	522630	IfStatement	if ( info -> hasState ( NET :: FullScreen ) )		522527	4					
ANR	522631	Condition	info -> hasState ( NET :: FullScreen )	1140:8:41027:41057	522527	0	True				
ANR	522632	CallExpression	info -> hasState ( NET :: FullScreen )		522527	0					
ANR	522633	Callee	info -> hasState		522527	0					
ANR	522634	PtrMemberAccess	info -> hasState		522527	0					
ANR	522635	Identifier	info		522527	0					
ANR	522636	Identifier	hasState		522527	1					
ANR	522637	ArgumentList	NET :: FullScreen		522527	1					
ANR	522638	Argument	NET :: FullScreen		522527	0					
ANR	522639	Identifier	NET :: FullScreen		522527	0					
ANR	522640	CompoundStatement		11:41:375:375	522527	1					
ANR	522641	ExpressionStatement	"ni . setState ( 0 , NET :: FullScreen )"	1141:8:41070:41101	522527	0	True				
ANR	522642	CallExpression	"ni . setState ( 0 , NET :: FullScreen )"		522527	0					
ANR	522643	Callee	ni . setState		522527	0					
ANR	522644	MemberAccess	ni . setState		522527	0					
ANR	522645	Identifier	ni		522527	0					
ANR	522646	Identifier	setState		522527	1					
ANR	522647	ArgumentList	0		522527	1					
ANR	522648	Argument	0		522527	0					
ANR	522649	PrimaryExpression	0		522527	0					
ANR	522650	Argument	NET :: FullScreen		522527	1					
ANR	522651	Identifier	NET :: FullScreen		522527	0					
ANR	522652	ElseStatement	else		522527	0					
ANR	522653	CompoundStatement		13:11:429:429	522527	0					
ANR	522654	ExpressionStatement	"ni . setState ( NET :: FullScreen , NET :: FullScreen )"	1143:8:41124:41169	522527	0	True				
ANR	522655	CallExpression	"ni . setState ( NET :: FullScreen , NET :: FullScreen )"		522527	0					
ANR	522656	Callee	ni . setState		522527	0					
ANR	522657	MemberAccess	ni . setState		522527	0					
ANR	522658	Identifier	ni		522527	0					
ANR	522659	Identifier	setState		522527	1					
ANR	522660	ArgumentList	NET :: FullScreen		522527	1					
ANR	522661	Argument	NET :: FullScreen		522527	0					
ANR	522662	Identifier	NET :: FullScreen		522527	0					
ANR	522663	Argument	NET :: FullScreen		522527	1					
ANR	522664	Identifier	NET :: FullScreen		522527	0					
ANR	522665	ReturnType	void		522527	1					
ANR	522666	Identifier	XWindowTasksModel :: requestToggleFullScreen		522527	2					
ANR	522667	ParameterList	const QModelIndex & index		522527	3					
ANR	522668	Parameter	const QModelIndex & index	1129:48:40658:40681	522527	0	True				
ANR	522669	ParameterType	const QModelIndex &		522527	0					
ANR	522670	Identifier	index		522527	1					
ANR	522671	CFGEntryNode	ENTRY		522527		True				
ANR	522672	CFGExitNode	EXIT		522527		True				
ANR	522673	Symbol	index . model		522527						
ANR	522674	Symbol	d -> windowInfo		522527						
ANR	522675	Symbol	d		522527						
ANR	522676	Symbol	this		522527						
ANR	522677	Symbol	index		522527						
ANR	522678	Symbol	index . isValid		522527						
ANR	522679	Symbol	d -> windows . count		522527						
ANR	522680	Symbol	* d		522527						
ANR	522681	Symbol	NET :: FullScreen		522527						
ANR	522682	Symbol	info -> hasState		522527						
ANR	522683	Symbol	index . row		522527						
ANR	522684	Symbol	d -> windows		522527						
ANR	522685	Symbol	window		522527						
ANR	522686	Symbol	ni		522527						
ANR	522687	Symbol	* info		522527						
ANR	522688	Symbol	d -> windows . at		522527						
ANR	522689	Symbol	info		522527						
ANR	522690	Function	XWindowTasksModel :: requestToggleShaded	1147:0:41180:41727							
ANR	522691	FunctionDef	XWindowTasksModel :: requestToggleShaded (const QModelIndex & index)		522690	0					
ANR	522692	CompoundStatement		1148:0:41250:41727	522690	0					
ANR	522693	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		522690	0					
ANR	522694	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1149:8:41260:41356	522690	0	True				
ANR	522695	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522690	0		||			
ANR	522696	UnaryOperationExpression	! index . isValid ( )		522690	0					
ANR	522697	UnaryOperator	!		522690	0					
ANR	522698	CallExpression	index . isValid ( )		522690	1					
ANR	522699	Callee	index . isValid		522690	0					
ANR	522700	MemberAccess	index . isValid		522690	0					
ANR	522701	Identifier	index		522690	0					
ANR	522702	Identifier	isValid		522690	1					
ANR	522703	ArgumentList			522690	1					
ANR	522704	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522690	1		||			
ANR	522705	EqualityExpression	index . model ( ) != this		522690	0		!=			
ANR	522706	CallExpression	index . model ( )		522690	0					
ANR	522707	Callee	index . model		522690	0					
ANR	522708	MemberAccess	index . model		522690	0					
ANR	522709	Identifier	index		522690	0					
ANR	522710	Identifier	model		522690	1					
ANR	522711	ArgumentList			522690	1					
ANR	522712	Identifier	this		522690	1					
ANR	522713	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522690	1		||			
ANR	522714	RelationalExpression	index . row ( ) < 0		522690	0		<			
ANR	522715	CallExpression	index . row ( )		522690	0					
ANR	522716	Callee	index . row		522690	0					
ANR	522717	MemberAccess	index . row		522690	0					
ANR	522718	Identifier	index		522690	0					
ANR	522719	Identifier	row		522690	1					
ANR	522720	ArgumentList			522690	1					
ANR	522721	PrimaryExpression	0		522690	1					
ANR	522722	RelationalExpression	index . row ( ) >= d -> windows . count ( )		522690	1		>=			
ANR	522723	CallExpression	index . row ( )		522690	0					
ANR	522724	Callee	index . row		522690	0					
ANR	522725	MemberAccess	index . row		522690	0					
ANR	522726	Identifier	index		522690	0					
ANR	522727	Identifier	row		522690	1					
ANR	522728	ArgumentList			522690	1					
ANR	522729	CallExpression	d -> windows . count ( )		522690	1					
ANR	522730	Callee	d -> windows . count		522690	0					
ANR	522731	MemberAccess	d -> windows . count		522690	0					
ANR	522732	PtrMemberAccess	d -> windows		522690	0					
ANR	522733	Identifier	d		522690	0					
ANR	522734	Identifier	windows		522690	1					
ANR	522735	Identifier	count		522690	1					
ANR	522736	ArgumentList			522690	1					
ANR	522737	CompoundStatement		2:107:108:108	522690	1					
ANR	522738	ReturnStatement	return ;	1150:8:41369:41375	522690	0	True				
ANR	522739	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1153:4:41388:41433	522690	1	True				
ANR	522740	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		522690	0					
ANR	522741	IdentifierDeclType	const WId		522690	0					
ANR	522742	Identifier	window		522690	1					
ANR	522743	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		522690	2		=			
ANR	522744	Identifier	window		522690	0					
ANR	522745	CallExpression	d -> windows . at ( index . row ( ) )		522690	1					
ANR	522746	Callee	d -> windows . at		522690	0					
ANR	522747	MemberAccess	d -> windows . at		522690	0					
ANR	522748	PtrMemberAccess	d -> windows		522690	0					
ANR	522749	Identifier	d		522690	0					
ANR	522750	Identifier	windows		522690	1					
ANR	522751	Identifier	at		522690	1					
ANR	522752	ArgumentList	index . row ( )		522690	1					
ANR	522753	Argument	index . row ( )		522690	0					
ANR	522754	CallExpression	index . row ( )		522690	0					
ANR	522755	Callee	index . row		522690	0					
ANR	522756	MemberAccess	index . row		522690	0					
ANR	522757	Identifier	index		522690	0					
ANR	522758	Identifier	row		522690	1					
ANR	522759	ArgumentList			522690	1					
ANR	522760	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1154:4:41439:41486	522690	2	True				
ANR	522761	IdentifierDecl	* info = d -> windowInfo ( window )		522690	0					
ANR	522762	IdentifierDeclType	const KWindowInfo *		522690	0					
ANR	522763	Identifier	info		522690	1					
ANR	522764	AssignmentExpression	* info = d -> windowInfo ( window )		522690	2		=			
ANR	522765	Identifier	info		522690	0					
ANR	522766	CallExpression	d -> windowInfo ( window )		522690	1					
ANR	522767	Callee	d -> windowInfo		522690	0					
ANR	522768	PtrMemberAccess	d -> windowInfo		522690	0					
ANR	522769	Identifier	d		522690	0					
ANR	522770	Identifier	windowInfo		522690	1					
ANR	522771	ArgumentList	window		522690	1					
ANR	522772	Argument	window		522690	0					
ANR	522773	Identifier	window		522690	0					
ANR	522774	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 ) ;"	1156:4:41493:41582	522690	3	True				
ANR	522775	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0 )"		522690	0					
ANR	522776	IdentifierDeclType	NETWinInfo		522690	0					
ANR	522777	Identifier	ni		522690	1					
ANR	522778	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522690	2					
ANR	522779	CallExpression	QX11Info :: connection ( )		522690	0					
ANR	522780	Callee	QX11Info :: connection		522690	0					
ANR	522781	Identifier	QX11Info :: connection		522690	0					
ANR	522782	ArgumentList			522690	1					
ANR	522783	Expression	"window , QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522690	1					
ANR	522784	Identifier	window		522690	0					
ANR	522785	Expression	"QX11Info :: appRootWindow ( ) , NET :: WMState , 0"		522690	1					
ANR	522786	CallExpression	QX11Info :: appRootWindow ( )		522690	0					
ANR	522787	Callee	QX11Info :: appRootWindow		522690	0					
ANR	522788	Identifier	QX11Info :: appRootWindow		522690	0					
ANR	522789	ArgumentList			522690	1					
ANR	522790	Expression	"NET :: WMState , 0"		522690	1					
ANR	522791	Identifier	NET :: WMState		522690	0					
ANR	522792	PrimaryExpression	0		522690	1					
ANR	522793	IfStatement	if ( info -> hasState ( NET :: Shaded ) )		522690	4					
ANR	522794	Condition	info -> hasState ( NET :: Shaded )	1158:8:41593:41619	522690	0	True				
ANR	522795	CallExpression	info -> hasState ( NET :: Shaded )		522690	0					
ANR	522796	Callee	info -> hasState		522690	0					
ANR	522797	PtrMemberAccess	info -> hasState		522690	0					
ANR	522798	Identifier	info		522690	0					
ANR	522799	Identifier	hasState		522690	1					
ANR	522800	ArgumentList	NET :: Shaded		522690	1					
ANR	522801	Argument	NET :: Shaded		522690	0					
ANR	522802	Identifier	NET :: Shaded		522690	0					
ANR	522803	CompoundStatement		11:37:371:371	522690	1					
ANR	522804	ExpressionStatement	"ni . setState ( 0 , NET :: Shaded )"	1159:8:41632:41659	522690	0	True				
ANR	522805	CallExpression	"ni . setState ( 0 , NET :: Shaded )"		522690	0					
ANR	522806	Callee	ni . setState		522690	0					
ANR	522807	MemberAccess	ni . setState		522690	0					
ANR	522808	Identifier	ni		522690	0					
ANR	522809	Identifier	setState		522690	1					
ANR	522810	ArgumentList	0		522690	1					
ANR	522811	Argument	0		522690	0					
ANR	522812	PrimaryExpression	0		522690	0					
ANR	522813	Argument	NET :: Shaded		522690	1					
ANR	522814	Identifier	NET :: Shaded		522690	0					
ANR	522815	ElseStatement	else		522690	0					
ANR	522816	CompoundStatement		13:11:421:421	522690	0					
ANR	522817	ExpressionStatement	"ni . setState ( NET :: Shaded , NET :: Shaded )"	1161:8:41682:41719	522690	0	True				
ANR	522818	CallExpression	"ni . setState ( NET :: Shaded , NET :: Shaded )"		522690	0					
ANR	522819	Callee	ni . setState		522690	0					
ANR	522820	MemberAccess	ni . setState		522690	0					
ANR	522821	Identifier	ni		522690	0					
ANR	522822	Identifier	setState		522690	1					
ANR	522823	ArgumentList	NET :: Shaded		522690	1					
ANR	522824	Argument	NET :: Shaded		522690	0					
ANR	522825	Identifier	NET :: Shaded		522690	0					
ANR	522826	Argument	NET :: Shaded		522690	1					
ANR	522827	Identifier	NET :: Shaded		522690	0					
ANR	522828	ReturnType	void		522690	1					
ANR	522829	Identifier	XWindowTasksModel :: requestToggleShaded		522690	2					
ANR	522830	ParameterList	const QModelIndex & index		522690	3					
ANR	522831	Parameter	const QModelIndex & index	1147:44:41224:41247	522690	0	True				
ANR	522832	ParameterType	const QModelIndex &		522690	0					
ANR	522833	Identifier	index		522690	1					
ANR	522834	CFGEntryNode	ENTRY		522690		True				
ANR	522835	CFGExitNode	EXIT		522690		True				
ANR	522836	Symbol	index . model		522690						
ANR	522837	Symbol	d -> windowInfo		522690						
ANR	522838	Symbol	d		522690						
ANR	522839	Symbol	this		522690						
ANR	522840	Symbol	NET :: Shaded		522690						
ANR	522841	Symbol	index		522690						
ANR	522842	Symbol	index . isValid		522690						
ANR	522843	Symbol	d -> windows . count		522690						
ANR	522844	Symbol	* d		522690						
ANR	522845	Symbol	info -> hasState		522690						
ANR	522846	Symbol	index . row		522690						
ANR	522847	Symbol	d -> windows		522690						
ANR	522848	Symbol	window		522690						
ANR	522849	Symbol	ni		522690						
ANR	522850	Symbol	* info		522690						
ANR	522851	Symbol	d -> windows . at		522690						
ANR	522852	Symbol	info		522690						
ANR	522853	Function	XWindowTasksModel :: requestVirtualDesktop	1165:0:41730:42932							
ANR	522854	FunctionDef	"XWindowTasksModel :: requestVirtualDesktop (const QModelIndex & index , qint32 desktop)"		522853	0					
ANR	522855	CompoundStatement		1166:0:41818:42932	522853	0					
ANR	522856	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		522853	0					
ANR	522857	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1167:8:41828:41924	522853	0	True				
ANR	522858	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522853	0		||			
ANR	522859	UnaryOperationExpression	! index . isValid ( )		522853	0					
ANR	522860	UnaryOperator	!		522853	0					
ANR	522861	CallExpression	index . isValid ( )		522853	1					
ANR	522862	Callee	index . isValid		522853	0					
ANR	522863	MemberAccess	index . isValid		522853	0					
ANR	522864	Identifier	index		522853	0					
ANR	522865	Identifier	isValid		522853	1					
ANR	522866	ArgumentList			522853	1					
ANR	522867	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522853	1		||			
ANR	522868	EqualityExpression	index . model ( ) != this		522853	0		!=			
ANR	522869	CallExpression	index . model ( )		522853	0					
ANR	522870	Callee	index . model		522853	0					
ANR	522871	MemberAccess	index . model		522853	0					
ANR	522872	Identifier	index		522853	0					
ANR	522873	Identifier	model		522853	1					
ANR	522874	ArgumentList			522853	1					
ANR	522875	Identifier	this		522853	1					
ANR	522876	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		522853	1		||			
ANR	522877	RelationalExpression	index . row ( ) < 0		522853	0		<			
ANR	522878	CallExpression	index . row ( )		522853	0					
ANR	522879	Callee	index . row		522853	0					
ANR	522880	MemberAccess	index . row		522853	0					
ANR	522881	Identifier	index		522853	0					
ANR	522882	Identifier	row		522853	1					
ANR	522883	ArgumentList			522853	1					
ANR	522884	PrimaryExpression	0		522853	1					
ANR	522885	RelationalExpression	index . row ( ) >= d -> windows . count ( )		522853	1		>=			
ANR	522886	CallExpression	index . row ( )		522853	0					
ANR	522887	Callee	index . row		522853	0					
ANR	522888	MemberAccess	index . row		522853	0					
ANR	522889	Identifier	index		522853	0					
ANR	522890	Identifier	row		522853	1					
ANR	522891	ArgumentList			522853	1					
ANR	522892	CallExpression	d -> windows . count ( )		522853	1					
ANR	522893	Callee	d -> windows . count		522853	0					
ANR	522894	MemberAccess	d -> windows . count		522853	0					
ANR	522895	PtrMemberAccess	d -> windows		522853	0					
ANR	522896	Identifier	d		522853	0					
ANR	522897	Identifier	windows		522853	1					
ANR	522898	Identifier	count		522853	1					
ANR	522899	ArgumentList			522853	1					
ANR	522900	CompoundStatement		2:107:108:108	522853	1					
ANR	522901	ReturnStatement	return ;	1168:8:41937:41943	522853	0	True				
ANR	522902	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1171:4:41956:42001	522853	1	True				
ANR	522903	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		522853	0					
ANR	522904	IdentifierDeclType	const WId		522853	0					
ANR	522905	Identifier	window		522853	1					
ANR	522906	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		522853	2		=			
ANR	522907	Identifier	window		522853	0					
ANR	522908	CallExpression	d -> windows . at ( index . row ( ) )		522853	1					
ANR	522909	Callee	d -> windows . at		522853	0					
ANR	522910	MemberAccess	d -> windows . at		522853	0					
ANR	522911	PtrMemberAccess	d -> windows		522853	0					
ANR	522912	Identifier	d		522853	0					
ANR	522913	Identifier	windows		522853	1					
ANR	522914	Identifier	at		522853	1					
ANR	522915	ArgumentList	index . row ( )		522853	1					
ANR	522916	Argument	index . row ( )		522853	0					
ANR	522917	CallExpression	index . row ( )		522853	0					
ANR	522918	Callee	index . row		522853	0					
ANR	522919	MemberAccess	index . row		522853	0					
ANR	522920	Identifier	index		522853	0					
ANR	522921	Identifier	row		522853	1					
ANR	522922	ArgumentList			522853	1					
ANR	522923	IdentifierDeclStatement	const KWindowInfo * info = d -> windowInfo ( window ) ;	1172:4:42007:42054	522853	2	True				
ANR	522924	IdentifierDecl	* info = d -> windowInfo ( window )		522853	0					
ANR	522925	IdentifierDeclType	const KWindowInfo *		522853	0					
ANR	522926	Identifier	info		522853	1					
ANR	522927	AssignmentExpression	* info = d -> windowInfo ( window )		522853	2		=			
ANR	522928	Identifier	info		522853	0					
ANR	522929	CallExpression	d -> windowInfo ( window )		522853	1					
ANR	522930	Callee	d -> windowInfo		522853	0					
ANR	522931	PtrMemberAccess	d -> windowInfo		522853	0					
ANR	522932	Identifier	d		522853	0					
ANR	522933	Identifier	windowInfo		522853	1					
ANR	522934	ArgumentList	window		522853	1					
ANR	522935	Argument	window		522853	0					
ANR	522936	Identifier	window		522853	0					
ANR	522937	IfStatement	if ( desktop == 0 )		522853	3					
ANR	522938	Condition	desktop == 0	1174:8:42065:42076	522853	0	True				
ANR	522939	EqualityExpression	desktop == 0		522853	0		==			
ANR	522940	Identifier	desktop		522853	0					
ANR	522941	PrimaryExpression	0		522853	1					
ANR	522942	CompoundStatement		9:22:260:260	522853	1					
ANR	522943	IfStatement	if ( info -> onAllDesktops ( ) )		522853	0					
ANR	522944	Condition	info -> onAllDesktops ( )	1175:12:42093:42113	522853	0	True				
ANR	522945	CallExpression	info -> onAllDesktops ( )		522853	0					
ANR	522946	Callee	info -> onAllDesktops		522853	0					
ANR	522947	PtrMemberAccess	info -> onAllDesktops		522853	0					
ANR	522948	Identifier	info		522853	0					
ANR	522949	Identifier	onAllDesktops		522853	1					
ANR	522950	ArgumentList			522853	1					
ANR	522951	CompoundStatement		10:35:297:297	522853	1					
ANR	522952	ExpressionStatement	"KWindowSystem :: setOnDesktop ( window , KWindowSystem :: currentDesktop ( ) )"	1176:12:42130:42198	522853	0	True				
ANR	522953	CallExpression	"KWindowSystem :: setOnDesktop ( window , KWindowSystem :: currentDesktop ( ) )"		522853	0					
ANR	522954	Callee	KWindowSystem :: setOnDesktop		522853	0					
ANR	522955	Identifier	KWindowSystem :: setOnDesktop		522853	0					
ANR	522956	ArgumentList	window		522853	1					
ANR	522957	Argument	window		522853	0					
ANR	522958	Identifier	window		522853	0					
ANR	522959	Argument	KWindowSystem :: currentDesktop ( )		522853	1					
ANR	522960	CallExpression	KWindowSystem :: currentDesktop ( )		522853	0					
ANR	522961	Callee	KWindowSystem :: currentDesktop		522853	0					
ANR	522962	Identifier	KWindowSystem :: currentDesktop		522853	0					
ANR	522963	ArgumentList			522853	1					
ANR	522964	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	1177:12:42212:42252	522853	1	True				
ANR	522965	CallExpression	KWindowSystem :: forceActiveWindow ( window )		522853	0					
ANR	522966	Callee	KWindowSystem :: forceActiveWindow		522853	0					
ANR	522967	Identifier	KWindowSystem :: forceActiveWindow		522853	0					
ANR	522968	ArgumentList	window		522853	1					
ANR	522969	Argument	window		522853	0					
ANR	522970	Identifier	window		522853	0					
ANR	522971	ElseStatement	else		522853	0					
ANR	522972	CompoundStatement		13:15:450:450	522853	0					
ANR	522973	ExpressionStatement	"KWindowSystem :: setOnAllDesktops ( window , true )"	1179:12:42283:42328	522853	0	True				
ANR	522974	CallExpression	"KWindowSystem :: setOnAllDesktops ( window , true )"		522853	0					
ANR	522975	Callee	KWindowSystem :: setOnAllDesktops		522853	0					
ANR	522976	Identifier	KWindowSystem :: setOnAllDesktops		522853	0					
ANR	522977	ArgumentList	window		522853	1					
ANR	522978	Argument	window		522853	0					
ANR	522979	Identifier	window		522853	0					
ANR	522980	Argument	true		522853	1					
ANR	522981	Identifier	true		522853	0					
ANR	522982	ReturnStatement	return ;	1182:8:42349:42355	522853	1	True				
ANR	522983	ElseStatement	else		522853	0					
ANR	522984	IfStatement	if ( desktop > KWindowSystem :: numberOfDesktops ( ) )		522853	0					
ANR	522985	Condition	desktop > KWindowSystem :: numberOfDesktops ( )	1184:15:42427:42469	522853	0	True				
ANR	522986	RelationalExpression	desktop > KWindowSystem :: numberOfDesktops ( )		522853	0		>			
ANR	522987	Identifier	desktop		522853	0					
ANR	522988	CallExpression	KWindowSystem :: numberOfDesktops ( )		522853	1					
ANR	522989	Callee	KWindowSystem :: numberOfDesktops		522853	0					
ANR	522990	Identifier	KWindowSystem :: numberOfDesktops		522853	0					
ANR	522991	ArgumentList			522853	1					
ANR	522992	CompoundStatement		27:8:841:902	522853	1					
ANR	522993	ExpressionStatement	desktop = KWindowSystem :: numberOfDesktops ( ) + 1	1185:8:42482:42529	522853	0	True				
ANR	522994	AssignmentExpression	desktop = KWindowSystem :: numberOfDesktops ( ) + 1		522853	0		=			
ANR	522995	Identifier	desktop		522853	0					
ANR	522996	AdditiveExpression	KWindowSystem :: numberOfDesktops ( ) + 1		522853	1		+			
ANR	522997	CallExpression	KWindowSystem :: numberOfDesktops ( )		522853	0					
ANR	522998	Callee	KWindowSystem :: numberOfDesktops		522853	0					
ANR	522999	Identifier	KWindowSystem :: numberOfDesktops		522853	0					
ANR	523000	ArgumentList			522853	1					
ANR	523001	PrimaryExpression	1		522853	1					
ANR	523002	IfStatement	if ( desktop > 20 )		522853	1					
ANR	523003	Condition	desktop > 20	1188:12:42605:42616	522853	0	True				
ANR	523004	RelationalExpression	desktop > 20		522853	0		>			
ANR	523005	Identifier	desktop		522853	0					
ANR	523006	PrimaryExpression	20		522853	1					
ANR	523007	CompoundStatement		23:26:800:800	522853	1					
ANR	523008	ReturnStatement	return ;	1189:12:42633:42639	522853	0	True				
ANR	523009	IdentifierDeclStatement	"NETRootInfo ri ( QX11Info :: connection ( ) , NET :: NumberOfDesktops ) ;"	1192:8:42660:42721	522853	2	True				
ANR	523010	IdentifierDecl	"ri ( QX11Info :: connection ( ) , NET :: NumberOfDesktops )"		522853	0					
ANR	523011	IdentifierDeclType	NETRootInfo		522853	0					
ANR	523012	Identifier	ri		522853	1					
ANR	523013	Expression	"QX11Info :: connection ( ) , NET :: NumberOfDesktops"		522853	2					
ANR	523014	CallExpression	QX11Info :: connection ( )		522853	0					
ANR	523015	Callee	QX11Info :: connection		522853	0					
ANR	523016	Identifier	QX11Info :: connection		522853	0					
ANR	523017	ArgumentList			522853	1					
ANR	523018	Identifier	NET :: NumberOfDesktops		522853	1					
ANR	523019	ExpressionStatement	ri . setNumberOfDesktops ( desktop )	1193:8:42731:42762	522853	3	True				
ANR	523020	CallExpression	ri . setNumberOfDesktops ( desktop )		522853	0					
ANR	523021	Callee	ri . setNumberOfDesktops		522853	0					
ANR	523022	MemberAccess	ri . setNumberOfDesktops		522853	0					
ANR	523023	Identifier	ri		522853	0					
ANR	523024	Identifier	setNumberOfDesktops		522853	1					
ANR	523025	ArgumentList	desktop		522853	1					
ANR	523026	Argument	desktop		522853	0					
ANR	523027	Identifier	desktop		522853	0					
ANR	523028	ExpressionStatement	"KWindowSystem :: setOnDesktop ( window , desktop )"	1196:4:42775:42819	522853	4	True				
ANR	523029	CallExpression	"KWindowSystem :: setOnDesktop ( window , desktop )"		522853	0					
ANR	523030	Callee	KWindowSystem :: setOnDesktop		522853	0					
ANR	523031	Identifier	KWindowSystem :: setOnDesktop		522853	0					
ANR	523032	ArgumentList	window		522853	1					
ANR	523033	Argument	window		522853	0					
ANR	523034	Identifier	window		522853	0					
ANR	523035	Argument	desktop		522853	1					
ANR	523036	Identifier	desktop		522853	0					
ANR	523037	IfStatement	if ( desktop == KWindowSystem :: currentDesktop ( ) )		522853	5					
ANR	523038	Condition	desktop == KWindowSystem :: currentDesktop ( )	1198:8:42830:42871	522853	0	True				
ANR	523039	EqualityExpression	desktop == KWindowSystem :: currentDesktop ( )		522853	0		==			
ANR	523040	Identifier	desktop		522853	0					
ANR	523041	CallExpression	KWindowSystem :: currentDesktop ( )		522853	1					
ANR	523042	Callee	KWindowSystem :: currentDesktop		522853	0					
ANR	523043	Identifier	KWindowSystem :: currentDesktop		522853	0					
ANR	523044	ArgumentList			522853	1					
ANR	523045	CompoundStatement		33:52:1055:1055	522853	1					
ANR	523046	ExpressionStatement	KWindowSystem :: forceActiveWindow ( window )	1199:8:42884:42924	522853	0	True				
ANR	523047	CallExpression	KWindowSystem :: forceActiveWindow ( window )		522853	0					
ANR	523048	Callee	KWindowSystem :: forceActiveWindow		522853	0					
ANR	523049	Identifier	KWindowSystem :: forceActiveWindow		522853	0					
ANR	523050	ArgumentList	window		522853	1					
ANR	523051	Argument	window		522853	0					
ANR	523052	Identifier	window		522853	0					
ANR	523053	ReturnType	void		522853	1					
ANR	523054	Identifier	XWindowTasksModel :: requestVirtualDesktop		522853	2					
ANR	523055	ParameterList	"const QModelIndex & index , qint32 desktop"		522853	3					
ANR	523056	Parameter	const QModelIndex & index	1165:46:41776:41799	522853	0	True				
ANR	523057	ParameterType	const QModelIndex &		522853	0					
ANR	523058	Identifier	index		522853	1					
ANR	523059	Parameter	qint32 desktop	1165:72:41802:41815	522853	1	True				
ANR	523060	ParameterType	qint32		522853	0					
ANR	523061	Identifier	desktop		522853	1					
ANR	523062	CFGEntryNode	ENTRY		522853		True				
ANR	523063	CFGExitNode	EXIT		522853		True				
ANR	523064	Symbol	index . model		522853						
ANR	523065	Symbol	d -> windowInfo		522853						
ANR	523066	Symbol	d		522853						
ANR	523067	Symbol	KWindowSystem :: currentDesktop		522853						
ANR	523068	Symbol	this		522853						
ANR	523069	Symbol	KWindowSystem :: numberOfDesktops		522853						
ANR	523070	Symbol	index		522853						
ANR	523071	Symbol	info -> onAllDesktops		522853						
ANR	523072	Symbol	index . isValid		522853						
ANR	523073	Symbol	d -> windows . count		522853						
ANR	523074	Symbol	* d		522853						
ANR	523075	Symbol	desktop		522853						
ANR	523076	Symbol	index . row		522853						
ANR	523077	Symbol	ri		522853						
ANR	523078	Symbol	true		522853						
ANR	523079	Symbol	d -> windows		522853						
ANR	523080	Symbol	window		522853						
ANR	523081	Symbol	* info		522853						
ANR	523082	Symbol	d -> windows . at		522853						
ANR	523083	Symbol	info		522853						
ANR	523084	Function	XWindowTasksModel :: requestActivities	1203:0:42935:43276							
ANR	523085	FunctionDef	"XWindowTasksModel :: requestActivities (const QModelIndex & index , const QStringList & activities)"		523084	0					
ANR	523086	CompoundStatement		1204:0:43034:43276	523084	0					
ANR	523087	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		523084	0					
ANR	523088	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1205:8:43044:43140	523084	0	True				
ANR	523089	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		523084	0		||			
ANR	523090	UnaryOperationExpression	! index . isValid ( )		523084	0					
ANR	523091	UnaryOperator	!		523084	0					
ANR	523092	CallExpression	index . isValid ( )		523084	1					
ANR	523093	Callee	index . isValid		523084	0					
ANR	523094	MemberAccess	index . isValid		523084	0					
ANR	523095	Identifier	index		523084	0					
ANR	523096	Identifier	isValid		523084	1					
ANR	523097	ArgumentList			523084	1					
ANR	523098	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		523084	1		||			
ANR	523099	EqualityExpression	index . model ( ) != this		523084	0		!=			
ANR	523100	CallExpression	index . model ( )		523084	0					
ANR	523101	Callee	index . model		523084	0					
ANR	523102	MemberAccess	index . model		523084	0					
ANR	523103	Identifier	index		523084	0					
ANR	523104	Identifier	model		523084	1					
ANR	523105	ArgumentList			523084	1					
ANR	523106	Identifier	this		523084	1					
ANR	523107	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		523084	1		||			
ANR	523108	RelationalExpression	index . row ( ) < 0		523084	0		<			
ANR	523109	CallExpression	index . row ( )		523084	0					
ANR	523110	Callee	index . row		523084	0					
ANR	523111	MemberAccess	index . row		523084	0					
ANR	523112	Identifier	index		523084	0					
ANR	523113	Identifier	row		523084	1					
ANR	523114	ArgumentList			523084	1					
ANR	523115	PrimaryExpression	0		523084	1					
ANR	523116	RelationalExpression	index . row ( ) >= d -> windows . count ( )		523084	1		>=			
ANR	523117	CallExpression	index . row ( )		523084	0					
ANR	523118	Callee	index . row		523084	0					
ANR	523119	MemberAccess	index . row		523084	0					
ANR	523120	Identifier	index		523084	0					
ANR	523121	Identifier	row		523084	1					
ANR	523122	ArgumentList			523084	1					
ANR	523123	CallExpression	d -> windows . count ( )		523084	1					
ANR	523124	Callee	d -> windows . count		523084	0					
ANR	523125	MemberAccess	d -> windows . count		523084	0					
ANR	523126	PtrMemberAccess	d -> windows		523084	0					
ANR	523127	Identifier	d		523084	0					
ANR	523128	Identifier	windows		523084	1					
ANR	523129	Identifier	count		523084	1					
ANR	523130	ArgumentList			523084	1					
ANR	523131	CompoundStatement		2:107:108:108	523084	1					
ANR	523132	ReturnStatement	return ;	1206:8:43153:43159	523084	0	True				
ANR	523133	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1209:4:43172:43217	523084	1	True				
ANR	523134	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		523084	0					
ANR	523135	IdentifierDeclType	const WId		523084	0					
ANR	523136	Identifier	window		523084	1					
ANR	523137	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		523084	2		=			
ANR	523138	Identifier	window		523084	0					
ANR	523139	CallExpression	d -> windows . at ( index . row ( ) )		523084	1					
ANR	523140	Callee	d -> windows . at		523084	0					
ANR	523141	MemberAccess	d -> windows . at		523084	0					
ANR	523142	PtrMemberAccess	d -> windows		523084	0					
ANR	523143	Identifier	d		523084	0					
ANR	523144	Identifier	windows		523084	1					
ANR	523145	Identifier	at		523084	1					
ANR	523146	ArgumentList	index . row ( )		523084	1					
ANR	523147	Argument	index . row ( )		523084	0					
ANR	523148	CallExpression	index . row ( )		523084	0					
ANR	523149	Callee	index . row		523084	0					
ANR	523150	MemberAccess	index . row		523084	0					
ANR	523151	Identifier	index		523084	0					
ANR	523152	Identifier	row		523084	1					
ANR	523153	ArgumentList			523084	1					
ANR	523154	ExpressionStatement	"KWindowSystem :: setOnActivities ( window , activities )"	1211:4:43224:43274	523084	2	True				
ANR	523155	CallExpression	"KWindowSystem :: setOnActivities ( window , activities )"		523084	0					
ANR	523156	Callee	KWindowSystem :: setOnActivities		523084	0					
ANR	523157	Identifier	KWindowSystem :: setOnActivities		523084	0					
ANR	523158	ArgumentList	window		523084	1					
ANR	523159	Argument	window		523084	0					
ANR	523160	Identifier	window		523084	0					
ANR	523161	Argument	activities		523084	1					
ANR	523162	Identifier	activities		523084	0					
ANR	523163	ReturnType	void		523084	1					
ANR	523164	Identifier	XWindowTasksModel :: requestActivities		523084	2					
ANR	523165	ParameterList	"const QModelIndex & index , const QStringList & activities"		523084	3					
ANR	523166	Parameter	const QModelIndex & index	1203:42:42977:43000	523084	0	True				
ANR	523167	ParameterType	const QModelIndex &		523084	0					
ANR	523168	Identifier	index		523084	1					
ANR	523169	Parameter	const QStringList & activities	1203:68:43003:43031	523084	1	True				
ANR	523170	ParameterType	const QStringList &		523084	0					
ANR	523171	Identifier	activities		523084	1					
ANR	523172	CFGEntryNode	ENTRY		523084		True				
ANR	523173	CFGExitNode	EXIT		523084		True				
ANR	523174	Symbol	index . model		523084						
ANR	523175	Symbol	d		523084						
ANR	523176	Symbol	activities		523084						
ANR	523177	Symbol	index . row		523084						
ANR	523178	Symbol	this		523084						
ANR	523179	Symbol	index		523084						
ANR	523180	Symbol	index . isValid		523084						
ANR	523181	Symbol	d -> windows		523084						
ANR	523182	Symbol	window		523084						
ANR	523183	Symbol	d -> windows . count		523084						
ANR	523184	Symbol	d -> windows . at		523084						
ANR	523185	Symbol	* d		523084						
ANR	523186	Function	XWindowTasksModel :: requestPublishDelegateGeometry	1215:0:43280:44191							
ANR	523187	FunctionDef	"XWindowTasksModel :: requestPublishDelegateGeometry (const QModelIndex & index , const QRect & geometry , QObject * delegate)"		523186	0					
ANR	523188	CompoundStatement		1216:0:43403:44191	523186	0					
ANR	523189	Statement	Q_UNUSED	1217:4:43409:43416	523186	0	True				
ANR	523190	Statement	(	1217:12:43417:43417	523186	1	True				
ANR	523191	Statement	delegate	1217:13:43418:43425	523186	2	True				
ANR	523192	Statement	)	1217:21:43426:43426	523186	3	True				
ANR	523193	IfStatement	if ( ! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( ) )		523186	4					
ANR	523194	Condition	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )	1219:8:43437:43533	523186	0	True				
ANR	523195	OrExpression	! index . isValid ( ) || index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		523186	0		||			
ANR	523196	UnaryOperationExpression	! index . isValid ( )		523186	0					
ANR	523197	UnaryOperator	!		523186	0					
ANR	523198	CallExpression	index . isValid ( )		523186	1					
ANR	523199	Callee	index . isValid		523186	0					
ANR	523200	MemberAccess	index . isValid		523186	0					
ANR	523201	Identifier	index		523186	0					
ANR	523202	Identifier	isValid		523186	1					
ANR	523203	ArgumentList			523186	1					
ANR	523204	OrExpression	index . model ( ) != this || index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		523186	1		||			
ANR	523205	EqualityExpression	index . model ( ) != this		523186	0		!=			
ANR	523206	CallExpression	index . model ( )		523186	0					
ANR	523207	Callee	index . model		523186	0					
ANR	523208	MemberAccess	index . model		523186	0					
ANR	523209	Identifier	index		523186	0					
ANR	523210	Identifier	model		523186	1					
ANR	523211	ArgumentList			523186	1					
ANR	523212	Identifier	this		523186	1					
ANR	523213	OrExpression	index . row ( ) < 0 || index . row ( ) >= d -> windows . count ( )		523186	1		||			
ANR	523214	RelationalExpression	index . row ( ) < 0		523186	0		<			
ANR	523215	CallExpression	index . row ( )		523186	0					
ANR	523216	Callee	index . row		523186	0					
ANR	523217	MemberAccess	index . row		523186	0					
ANR	523218	Identifier	index		523186	0					
ANR	523219	Identifier	row		523186	1					
ANR	523220	ArgumentList			523186	1					
ANR	523221	PrimaryExpression	0		523186	1					
ANR	523222	RelationalExpression	index . row ( ) >= d -> windows . count ( )		523186	1		>=			
ANR	523223	CallExpression	index . row ( )		523186	0					
ANR	523224	Callee	index . row		523186	0					
ANR	523225	MemberAccess	index . row		523186	0					
ANR	523226	Identifier	index		523186	0					
ANR	523227	Identifier	row		523186	1					
ANR	523228	ArgumentList			523186	1					
ANR	523229	CallExpression	d -> windows . count ( )		523186	1					
ANR	523230	Callee	d -> windows . count		523186	0					
ANR	523231	MemberAccess	d -> windows . count		523186	0					
ANR	523232	PtrMemberAccess	d -> windows		523186	0					
ANR	523233	Identifier	d		523186	0					
ANR	523234	Identifier	windows		523186	1					
ANR	523235	Identifier	count		523186	1					
ANR	523236	ArgumentList			523186	1					
ANR	523237	CompoundStatement		4:107:132:132	523186	1					
ANR	523238	ReturnStatement	return ;	1220:8:43546:43552	523186	0	True				
ANR	523239	IdentifierDeclStatement	const WId window = d -> windows . at ( index . row ( ) ) ;	1223:4:43565:43610	523186	5	True				
ANR	523240	IdentifierDecl	window = d -> windows . at ( index . row ( ) )		523186	0					
ANR	523241	IdentifierDeclType	const WId		523186	0					
ANR	523242	Identifier	window		523186	1					
ANR	523243	AssignmentExpression	window = d -> windows . at ( index . row ( ) )		523186	2		=			
ANR	523244	Identifier	window		523186	0					
ANR	523245	CallExpression	d -> windows . at ( index . row ( ) )		523186	1					
ANR	523246	Callee	d -> windows . at		523186	0					
ANR	523247	MemberAccess	d -> windows . at		523186	0					
ANR	523248	PtrMemberAccess	d -> windows		523186	0					
ANR	523249	Identifier	d		523186	0					
ANR	523250	Identifier	windows		523186	1					
ANR	523251	Identifier	at		523186	1					
ANR	523252	ArgumentList	index . row ( )		523186	1					
ANR	523253	Argument	index . row ( )		523186	0					
ANR	523254	CallExpression	index . row ( )		523186	0					
ANR	523255	Callee	index . row		523186	0					
ANR	523256	MemberAccess	index . row		523186	0					
ANR	523257	Identifier	index		523186	0					
ANR	523258	Identifier	row		523186	1					
ANR	523259	ArgumentList			523186	1					
ANR	523260	IfStatement	if ( d -> delegateGeometries . contains ( window ) && d -> delegateGeometries . value ( window ) == geometry )		523186	6					
ANR	523261	Condition	d -> delegateGeometries . contains ( window ) && d -> delegateGeometries . value ( window ) == geometry	1225:8:43621:43717	523186	0	True				
ANR	523262	AndExpression	d -> delegateGeometries . contains ( window ) && d -> delegateGeometries . value ( window ) == geometry		523186	0		&&			
ANR	523263	CallExpression	d -> delegateGeometries . contains ( window )		523186	0					
ANR	523264	Callee	d -> delegateGeometries . contains		523186	0					
ANR	523265	MemberAccess	d -> delegateGeometries . contains		523186	0					
ANR	523266	PtrMemberAccess	d -> delegateGeometries		523186	0					
ANR	523267	Identifier	d		523186	0					
ANR	523268	Identifier	delegateGeometries		523186	1					
ANR	523269	Identifier	contains		523186	1					
ANR	523270	ArgumentList	window		523186	1					
ANR	523271	Argument	window		523186	0					
ANR	523272	Identifier	window		523186	0					
ANR	523273	EqualityExpression	d -> delegateGeometries . value ( window ) == geometry		523186	1		==			
ANR	523274	CallExpression	d -> delegateGeometries . value ( window )		523186	0					
ANR	523275	Callee	d -> delegateGeometries . value		523186	0					
ANR	523276	MemberAccess	d -> delegateGeometries . value		523186	0					
ANR	523277	PtrMemberAccess	d -> delegateGeometries		523186	0					
ANR	523278	Identifier	d		523186	0					
ANR	523279	Identifier	delegateGeometries		523186	1					
ANR	523280	Identifier	value		523186	1					
ANR	523281	ArgumentList	window		523186	1					
ANR	523282	Argument	window		523186	0					
ANR	523283	Identifier	window		523186	0					
ANR	523284	Identifier	geometry		523186	1					
ANR	523285	CompoundStatement		11:60:316:316	523186	1					
ANR	523286	ReturnStatement	return ;	1227:8:43730:43736	523186	0	True				
ANR	523287	IdentifierDeclStatement	"NETWinInfo ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , 0 , 0 ) ;"	1230:4:43749:43827	523186	7	True				
ANR	523288	IdentifierDecl	"ni ( QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , 0 , 0 )"		523186	0					
ANR	523289	IdentifierDeclType	NETWinInfo		523186	0					
ANR	523290	Identifier	ni		523186	1					
ANR	523291	Expression	"QX11Info :: connection ( ) , window , QX11Info :: appRootWindow ( ) , 0 , 0"		523186	2					
ANR	523292	CallExpression	QX11Info :: connection ( )		523186	0					
ANR	523293	Callee	QX11Info :: connection		523186	0					
ANR	523294	Identifier	QX11Info :: connection		523186	0					
ANR	523295	ArgumentList			523186	1					
ANR	523296	Expression	"window , QX11Info :: appRootWindow ( ) , 0 , 0"		523186	1					
ANR	523297	Identifier	window		523186	0					
ANR	523298	Expression	"QX11Info :: appRootWindow ( ) , 0 , 0"		523186	1					
ANR	523299	CallExpression	QX11Info :: appRootWindow ( )		523186	0					
ANR	523300	Callee	QX11Info :: appRootWindow		523186	0					
ANR	523301	Identifier	QX11Info :: appRootWindow		523186	0					
ANR	523302	ArgumentList			523186	1					
ANR	523303	Expression	"0 , 0"		523186	1					
ANR	523304	PrimaryExpression	0		523186	0					
ANR	523305	PrimaryExpression	0		523186	1					
ANR	523306	IdentifierDeclStatement	NETRect rect ;	1231:4:43833:43845	523186	8	True				
ANR	523307	IdentifierDecl	rect		523186	0					
ANR	523308	IdentifierDeclType	NETRect		523186	0					
ANR	523309	Identifier	rect		523186	1					
ANR	523310	IfStatement	if ( geometry . isValid ( ) )		523186	9					
ANR	523311	Condition	geometry . isValid ( )	1233:8:43856:43873	523186	0	True				
ANR	523312	CallExpression	geometry . isValid ( )		523186	0					
ANR	523313	Callee	geometry . isValid		523186	0					
ANR	523314	MemberAccess	geometry . isValid		523186	0					
ANR	523315	Identifier	geometry		523186	0					
ANR	523316	Identifier	isValid		523186	1					
ANR	523317	ArgumentList			523186	1					
ANR	523318	CompoundStatement		18:28:472:472	523186	1					
ANR	523319	ExpressionStatement	rect . pos . x = geometry . x ( )	1234:8:43886:43911	523186	0	True				
ANR	523320	AssignmentExpression	rect . pos . x = geometry . x ( )		523186	0		=			
ANR	523321	MemberAccess	rect . pos . x		523186	0					
ANR	523322	MemberAccess	rect . pos		523186	0					
ANR	523323	Identifier	rect		523186	0					
ANR	523324	Identifier	pos		523186	1					
ANR	523325	Identifier	x		523186	1					
ANR	523326	CallExpression	geometry . x ( )		523186	1					
ANR	523327	Callee	geometry . x		523186	0					
ANR	523328	MemberAccess	geometry . x		523186	0					
ANR	523329	Identifier	geometry		523186	0					
ANR	523330	Identifier	x		523186	1					
ANR	523331	ArgumentList			523186	1					
ANR	523332	ExpressionStatement	rect . pos . y = geometry . y ( )	1235:8:43921:43946	523186	1	True				
ANR	523333	AssignmentExpression	rect . pos . y = geometry . y ( )		523186	0		=			
ANR	523334	MemberAccess	rect . pos . y		523186	0					
ANR	523335	MemberAccess	rect . pos		523186	0					
ANR	523336	Identifier	rect		523186	0					
ANR	523337	Identifier	pos		523186	1					
ANR	523338	Identifier	y		523186	1					
ANR	523339	CallExpression	geometry . y ( )		523186	1					
ANR	523340	Callee	geometry . y		523186	0					
ANR	523341	MemberAccess	geometry . y		523186	0					
ANR	523342	Identifier	geometry		523186	0					
ANR	523343	Identifier	y		523186	1					
ANR	523344	ArgumentList			523186	1					
ANR	523345	ExpressionStatement	rect . size . width = geometry . width ( )	1236:8:43956:43990	523186	2	True				
ANR	523346	AssignmentExpression	rect . size . width = geometry . width ( )		523186	0		=			
ANR	523347	MemberAccess	rect . size . width		523186	0					
ANR	523348	MemberAccess	rect . size		523186	0					
ANR	523349	Identifier	rect		523186	0					
ANR	523350	Identifier	size		523186	1					
ANR	523351	Identifier	width		523186	1					
ANR	523352	CallExpression	geometry . width ( )		523186	1					
ANR	523353	Callee	geometry . width		523186	0					
ANR	523354	MemberAccess	geometry . width		523186	0					
ANR	523355	Identifier	geometry		523186	0					
ANR	523356	Identifier	width		523186	1					
ANR	523357	ArgumentList			523186	1					
ANR	523358	ExpressionStatement	rect . size . height = geometry . height ( )	1237:8:44000:44036	523186	3	True				
ANR	523359	AssignmentExpression	rect . size . height = geometry . height ( )		523186	0		=			
ANR	523360	MemberAccess	rect . size . height		523186	0					
ANR	523361	MemberAccess	rect . size		523186	0					
ANR	523362	Identifier	rect		523186	0					
ANR	523363	Identifier	size		523186	1					
ANR	523364	Identifier	height		523186	1					
ANR	523365	CallExpression	geometry . height ( )		523186	1					
ANR	523366	Callee	geometry . height		523186	0					
ANR	523367	MemberAccess	geometry . height		523186	0					
ANR	523368	Identifier	geometry		523186	0					
ANR	523369	Identifier	height		523186	1					
ANR	523370	ArgumentList			523186	1					
ANR	523371	ExpressionStatement	"d -> delegateGeometries . insert ( window , geometry )"	1239:8:44047:44093	523186	4	True				
ANR	523372	CallExpression	"d -> delegateGeometries . insert ( window , geometry )"		523186	0					
ANR	523373	Callee	d -> delegateGeometries . insert		523186	0					
ANR	523374	MemberAccess	d -> delegateGeometries . insert		523186	0					
ANR	523375	PtrMemberAccess	d -> delegateGeometries		523186	0					
ANR	523376	Identifier	d		523186	0					
ANR	523377	Identifier	delegateGeometries		523186	1					
ANR	523378	Identifier	insert		523186	1					
ANR	523379	ArgumentList	window		523186	1					
ANR	523380	Argument	window		523186	0					
ANR	523381	Identifier	window		523186	0					
ANR	523382	Argument	geometry		523186	1					
ANR	523383	Identifier	geometry		523186	0					
ANR	523384	ElseStatement	else		523186	0					
ANR	523385	CompoundStatement		25:11:702:702	523186	0					
ANR	523386	ExpressionStatement	d -> delegateGeometries . remove ( window )	1241:8:44116:44152	523186	0	True				
ANR	523387	CallExpression	d -> delegateGeometries . remove ( window )		523186	0					
ANR	523388	Callee	d -> delegateGeometries . remove		523186	0					
ANR	523389	MemberAccess	d -> delegateGeometries . remove		523186	0					
ANR	523390	PtrMemberAccess	d -> delegateGeometries		523186	0					
ANR	523391	Identifier	d		523186	0					
ANR	523392	Identifier	delegateGeometries		523186	1					
ANR	523393	Identifier	remove		523186	1					
ANR	523394	ArgumentList	window		523186	1					
ANR	523395	Argument	window		523186	0					
ANR	523396	Identifier	window		523186	0					
ANR	523397	ExpressionStatement	ni . setIconGeometry ( rect )	1244:4:44165:44189	523186	10	True				
ANR	523398	CallExpression	ni . setIconGeometry ( rect )		523186	0					
ANR	523399	Callee	ni . setIconGeometry		523186	0					
ANR	523400	MemberAccess	ni . setIconGeometry		523186	0					
ANR	523401	Identifier	ni		523186	0					
ANR	523402	Identifier	setIconGeometry		523186	1					
ANR	523403	ArgumentList	rect		523186	1					
ANR	523404	Argument	rect		523186	0					
ANR	523405	Identifier	rect		523186	0					
ANR	523406	ReturnType	void		523186	1					
ANR	523407	Identifier	XWindowTasksModel :: requestPublishDelegateGeometry		523186	2					
ANR	523408	ParameterList	"const QModelIndex & index , const QRect & geometry , QObject * delegate"		523186	3					
ANR	523409	Parameter	const QModelIndex & index	1215:55:43335:43358	523186	0	True				
ANR	523410	ParameterType	const QModelIndex &		523186	0					
ANR	523411	Identifier	index		523186	1					
ANR	523412	Parameter	const QRect & geometry	1215:81:43361:43381	523186	1	True				
ANR	523413	ParameterType	const QRect &		523186	0					
ANR	523414	Identifier	geometry		523186	1					
ANR	523415	Parameter	QObject * delegate	1215:104:43384:43400	523186	2	True				
ANR	523416	ParameterType	QObject *		523186	0					
ANR	523417	Identifier	delegate		523186	1					
ANR	523418	CFGEntryNode	ENTRY		523186		True				
ANR	523419	CFGExitNode	EXIT		523186		True				
ANR	523420	Symbol	geometry . y		523186						
ANR	523421	Symbol	geometry . x		523186						
ANR	523422	Symbol	index . isValid		523186						
ANR	523423	Symbol	d -> windows . count		523186						
ANR	523424	Symbol	delegate		523186						
ANR	523425	Symbol	rect		523186						
ANR	523426	Symbol	index . row		523186						
ANR	523427	Symbol	d -> delegateGeometries . value		523186						
ANR	523428	Symbol	d -> windows		523186						
ANR	523429	Symbol	d -> windows . at		523186						
ANR	523430	Symbol	index . model		523186						
ANR	523431	Symbol	d -> delegateGeometries		523186						
ANR	523432	Symbol	rect . size		523186						
ANR	523433	Symbol	d		523186						
ANR	523434	Symbol	this		523186						
ANR	523435	Symbol	d -> delegateGeometries . contains		523186						
ANR	523436	Symbol	rect . pos		523186						
ANR	523437	Symbol	rect . size . height		523186						
ANR	523438	Symbol	index		523186						
ANR	523439	Symbol	* d		523186						
ANR	523440	Symbol	geometry . width		523186						
ANR	523441	Symbol	rect . size . width		523186						
ANR	523442	Symbol	geometry . isValid		523186						
ANR	523443	Symbol	geometry		523186						
ANR	523444	Symbol	window		523186						
ANR	523445	Symbol	ni		523186						
ANR	523446	Symbol	rect . pos . x		523186						
ANR	523447	Symbol	rect . pos . y		523186						
ANR	523448	Symbol	geometry . height		523186						
ANR	523449	Function	XWindowTasksModel :: winIdFromMimeData	1247:0:44194:44652							
ANR	523450	FunctionDef	"XWindowTasksModel :: winIdFromMimeData (const QMimeData * mimeData , bool * ok)"		523449	0					
ANR	523451	CompoundStatement		1248:0:44272:44652	523449	0					
ANR	523452	ExpressionStatement	Q_ASSERT ( mimeData )	1249:4:44278:44296	523449	0	True				
ANR	523453	CallExpression	Q_ASSERT ( mimeData )		523449	0					
ANR	523454	Callee	Q_ASSERT		523449	0					
ANR	523455	Identifier	Q_ASSERT		523449	0					
ANR	523456	ArgumentList	mimeData		523449	1					
ANR	523457	Argument	mimeData		523449	0					
ANR	523458	Identifier	mimeData		523449	0					
ANR	523459	IfStatement	if ( ok )		523449	1					
ANR	523460	Condition	ok	1251:8:44307:44308	523449	0	True				
ANR	523461	Identifier	ok		523449	0					
ANR	523462	CompoundStatement		4:12:38:38	523449	1					
ANR	523463	ExpressionStatement	* ok = false	1252:8:44321:44332	523449	0	True				
ANR	523464	AssignmentExpression	* ok = false		523449	0		=			
ANR	523465	UnaryOperationExpression	* ok		523449	0					
ANR	523466	UnaryOperator	*		523449	0					
ANR	523467	Identifier	ok		523449	1					
ANR	523468	Identifier	false		523449	1					
ANR	523469	IfStatement	if ( ! mimeData -> hasFormat ( Private :: mimeType ( ) ) )		523449	2					
ANR	523470	Condition	! mimeData -> hasFormat ( Private :: mimeType ( ) )	1255:8:44349:44389	523449	0	True				
ANR	523471	UnaryOperationExpression	! mimeData -> hasFormat ( Private :: mimeType ( ) )		523449	0					
ANR	523472	UnaryOperator	!		523449	0					
ANR	523473	CallExpression	mimeData -> hasFormat ( Private :: mimeType ( ) )		523449	1					
ANR	523474	Callee	mimeData -> hasFormat		523449	0					
ANR	523475	PtrMemberAccess	mimeData -> hasFormat		523449	0					
ANR	523476	Identifier	mimeData		523449	0					
ANR	523477	Identifier	hasFormat		523449	1					
ANR	523478	ArgumentList	Private :: mimeType ( )		523449	1					
ANR	523479	Argument	Private :: mimeType ( )		523449	0					
ANR	523480	CallExpression	Private :: mimeType ( )		523449	0					
ANR	523481	Callee	Private :: mimeType		523449	0					
ANR	523482	Identifier	Private :: mimeType		523449	0					
ANR	523483	ArgumentList			523449	1					
ANR	523484	CompoundStatement		8:51:119:119	523449	1					
ANR	523485	ReturnStatement	return 0 ;	1256:8:44402:44410	523449	0	True				
ANR	523486	PrimaryExpression	0		523449	0					
ANR	523487	IdentifierDeclStatement	QByteArray data ( mimeData -> data ( Private :: mimeType ( ) ) ) ;	1259:4:44423:44475	523449	3	True				
ANR	523488	IdentifierDecl	data ( mimeData -> data ( Private :: mimeType ( ) ) )		523449	0					
ANR	523489	IdentifierDeclType	QByteArray		523449	0					
ANR	523490	Identifier	data		523449	1					
ANR	523491	CallExpression	mimeData -> data ( Private :: mimeType ( ) )		523449	2					
ANR	523492	Callee	mimeData -> data		523449	0					
ANR	523493	PtrMemberAccess	mimeData -> data		523449	0					
ANR	523494	Identifier	mimeData		523449	0					
ANR	523495	Identifier	data		523449	1					
ANR	523496	ArgumentList	Private :: mimeType ( )		523449	1					
ANR	523497	Argument	Private :: mimeType ( )		523449	0					
ANR	523498	CallExpression	Private :: mimeType ( )		523449	0					
ANR	523499	Callee	Private :: mimeType		523449	0					
ANR	523500	Identifier	Private :: mimeType		523449	0					
ANR	523501	ArgumentList			523449	1					
ANR	523502	IfStatement	if ( data . size ( ) != sizeof ( WId ) )		523449	4					
ANR	523503	Condition	data . size ( ) != sizeof ( WId )	1260:8:44485:44510	523449	0	True				
ANR	523504	EqualityExpression	data . size ( ) != sizeof ( WId )		523449	0		!=			
ANR	523505	CallExpression	data . size ( )		523449	0					
ANR	523506	Callee	data . size		523449	0					
ANR	523507	MemberAccess	data . size		523449	0					
ANR	523508	Identifier	data		523449	0					
ANR	523509	Identifier	size		523449	1					
ANR	523510	ArgumentList			523449	1					
ANR	523511	SizeofExpression	sizeof ( WId )		523449	1					
ANR	523512	Sizeof	sizeof		523449	0					
ANR	523513	SizeofOperand	WId		523449	1					
ANR	523514	CompoundStatement		13:36:240:240	523449	1					
ANR	523515	ReturnStatement	return 0 ;	1261:8:44523:44531	523449	0	True				
ANR	523516	PrimaryExpression	0		523449	0					
ANR	523517	IdentifierDeclStatement	WId id ;	1264:4:44544:44550	523449	5	True				
ANR	523518	IdentifierDecl	id		523449	0					
ANR	523519	IdentifierDeclType	WId		523449	0					
ANR	523520	Identifier	id		523449	1					
ANR	523521	ExpressionStatement	"memcpy ( & id , data . data ( ) , sizeof ( WId ) )"	1265:4:44556:44593	523449	6	True				
ANR	523522	CallExpression	"memcpy ( & id , data . data ( ) , sizeof ( WId ) )"		523449	0					
ANR	523523	Callee	memcpy		523449	0					
ANR	523524	Identifier	memcpy		523449	0					
ANR	523525	ArgumentList	& id		523449	1					
ANR	523526	Argument	& id		523449	0					
ANR	523527	UnaryOperationExpression	& id		523449	0					
ANR	523528	UnaryOperator	&		523449	0					
ANR	523529	Identifier	id		523449	1					
ANR	523530	Argument	data . data ( )		523449	1					
ANR	523531	CallExpression	data . data ( )		523449	0					
ANR	523532	Callee	data . data		523449	0					
ANR	523533	MemberAccess	data . data		523449	0					
ANR	523534	Identifier	data		523449	0					
ANR	523535	Identifier	data		523449	1					
ANR	523536	ArgumentList			523449	1					
ANR	523537	Argument	sizeof ( WId )		523449	2					
ANR	523538	SizeofExpression	sizeof ( WId )		523449	0					
ANR	523539	Sizeof	sizeof		523449	0					
ANR	523540	SizeofOperand	WId		523449	1					
ANR	523541	IfStatement	if ( ok )		523449	7					
ANR	523542	Condition	ok	1267:8:44604:44605	523449	0	True				
ANR	523543	Identifier	ok		523449	0					
ANR	523544	CompoundStatement		20:12:335:335	523449	1					
ANR	523545	ExpressionStatement	* ok = true	1268:8:44618:44628	523449	0	True				
ANR	523546	AssignmentExpression	* ok = true		523449	0		=			
ANR	523547	UnaryOperationExpression	* ok		523449	0					
ANR	523548	UnaryOperator	*		523449	0					
ANR	523549	Identifier	ok		523449	1					
ANR	523550	Identifier	true		523449	1					
ANR	523551	ReturnStatement	return id ;	1271:4:44641:44650	523449	8	True				
ANR	523552	Identifier	id		523449	0					
ANR	523553	ReturnType	WId		523449	1					
ANR	523554	Identifier	XWindowTasksModel :: winIdFromMimeData		523449	2					
ANR	523555	ParameterList	"const QMimeData * mimeData , bool * ok"		523449	3					
ANR	523556	Parameter	const QMimeData * mimeData	1247:41:44235:44259	523449	0	True				
ANR	523557	ParameterType	const QMimeData *		523449	0					
ANR	523558	Identifier	mimeData		523449	1					
ANR	523559	Parameter	bool * ok	1247:68:44262:44269	523449	1	True				
ANR	523560	ParameterType	bool *		523449	0					
ANR	523561	Identifier	ok		523449	1					
ANR	523562	CFGEntryNode	ENTRY		523449		True				
ANR	523563	CFGExitNode	EXIT		523449		True				
ANR	523564	Symbol	mimeData		523449						
ANR	523565	Symbol	* ok		523449						
ANR	523566	Symbol	data		523449						
ANR	523567	Symbol	data . data		523449						
ANR	523568	Symbol	& id		523449						
ANR	523569	Symbol	false		523449						
ANR	523570	Symbol	* mimeData		523449						
ANR	523571	Symbol	data . size		523449						
ANR	523572	Symbol	mimeData -> hasFormat		523449						
ANR	523573	Symbol	true		523449						
ANR	523574	Symbol	id		523449						
ANR	523575	Symbol	ok		523449						
ANR	523576	Symbol	Private :: mimeType		523449						
ANR	523577	Function	XWindowTasksModel :: winIdsFromMimeData	1274:0:44655:45708							
ANR	523578	FunctionDef	"XWindowTasksModel :: winIdsFromMimeData (const QMimeData * mimeData , bool * ok)"		523577	0					
ANR	523579	CompoundStatement		1275:0:44741:45708	523577	0					
ANR	523580	ExpressionStatement	Q_ASSERT ( mimeData )	1276:4:44747:44765	523577	0	True				
ANR	523581	CallExpression	Q_ASSERT ( mimeData )		523577	0					
ANR	523582	Callee	Q_ASSERT		523577	0					
ANR	523583	Identifier	Q_ASSERT		523577	0					
ANR	523584	ArgumentList	mimeData		523577	1					
ANR	523585	Argument	mimeData		523577	0					
ANR	523586	Identifier	mimeData		523577	0					
ANR	523587	IdentifierDeclStatement	QList < WId > ids ;	1277:4:44771:44785	523577	1	True				
ANR	523588	IdentifierDecl	ids		523577	0					
ANR	523589	IdentifierDeclType	QList < WId >		523577	0					
ANR	523590	Identifier	ids		523577	1					
ANR	523591	IfStatement	if ( ok )		523577	2					
ANR	523592	Condition	ok	1279:8:44796:44797	523577	0	True				
ANR	523593	Identifier	ok		523577	0					
ANR	523594	CompoundStatement		5:12:58:58	523577	1					
ANR	523595	ExpressionStatement	* ok = false	1280:8:44810:44821	523577	0	True				
ANR	523596	AssignmentExpression	* ok = false		523577	0		=			
ANR	523597	UnaryOperationExpression	* ok		523577	0					
ANR	523598	UnaryOperator	*		523577	0					
ANR	523599	Identifier	ok		523577	1					
ANR	523600	Identifier	false		523577	1					
ANR	523601	IfStatement	if ( ! mimeData -> hasFormat ( Private :: groupMimeType ( ) ) )		523577	3					
ANR	523602	Condition	! mimeData -> hasFormat ( Private :: groupMimeType ( ) )	1283:8:44838:44883	523577	0	True				
ANR	523603	UnaryOperationExpression	! mimeData -> hasFormat ( Private :: groupMimeType ( ) )		523577	0					
ANR	523604	UnaryOperator	!		523577	0					
ANR	523605	CallExpression	mimeData -> hasFormat ( Private :: groupMimeType ( ) )		523577	1					
ANR	523606	Callee	mimeData -> hasFormat		523577	0					
ANR	523607	PtrMemberAccess	mimeData -> hasFormat		523577	0					
ANR	523608	Identifier	mimeData		523577	0					
ANR	523609	Identifier	hasFormat		523577	1					
ANR	523610	ArgumentList	Private :: groupMimeType ( )		523577	1					
ANR	523611	Argument	Private :: groupMimeType ( )		523577	0					
ANR	523612	CallExpression	Private :: groupMimeType ( )		523577	0					
ANR	523613	Callee	Private :: groupMimeType		523577	0					
ANR	523614	Identifier	Private :: groupMimeType		523577	0					
ANR	523615	ArgumentList			523577	1					
ANR	523616	CompoundStatement		12:8:223:272	523577	1					
ANR	523617	IdentifierDeclStatement	bool singularOk ;	1285:8:44940:44955	523577	0	True				
ANR	523618	IdentifierDecl	singularOk		523577	0					
ANR	523619	IdentifierDeclType	bool		523577	0					
ANR	523620	Identifier	singularOk		523577	1					
ANR	523621	IdentifierDeclStatement	"WId id = winIdFromMimeData ( mimeData , & singularOk ) ;"	1286:8:44965:45014	523577	1	True				
ANR	523622	IdentifierDecl	"id = winIdFromMimeData ( mimeData , & singularOk )"		523577	0					
ANR	523623	IdentifierDeclType	WId		523577	0					
ANR	523624	Identifier	id		523577	1					
ANR	523625	AssignmentExpression	"id = winIdFromMimeData ( mimeData , & singularOk )"		523577	2		=			
ANR	523626	Identifier	id		523577	0					
ANR	523627	CallExpression	"winIdFromMimeData ( mimeData , & singularOk )"		523577	1					
ANR	523628	Callee	winIdFromMimeData		523577	0					
ANR	523629	Identifier	winIdFromMimeData		523577	0					
ANR	523630	ArgumentList	mimeData		523577	1					
ANR	523631	Argument	mimeData		523577	0					
ANR	523632	Identifier	mimeData		523577	0					
ANR	523633	Argument	& singularOk		523577	1					
ANR	523634	UnaryOperationExpression	& singularOk		523577	0					
ANR	523635	UnaryOperator	&		523577	0					
ANR	523636	Identifier	singularOk		523577	1					
ANR	523637	IfStatement	if ( ok )		523577	2					
ANR	523638	Condition	ok	1288:12:45029:45030	523577	0	True				
ANR	523639	Identifier	ok		523577	0					
ANR	523640	CompoundStatement		14:16:291:291	523577	1					
ANR	523641	ExpressionStatement	* ok = singularOk	1289:12:45047:45063	523577	0	True				
ANR	523642	AssignmentExpression	* ok = singularOk		523577	0		=			
ANR	523643	UnaryOperationExpression	* ok		523577	0					
ANR	523644	UnaryOperator	*		523577	0					
ANR	523645	Identifier	ok		523577	1					
ANR	523646	Identifier	singularOk		523577	1					
ANR	523647	IfStatement	if ( singularOk )		523577	3					
ANR	523648	Condition	singularOk	1292:12:45088:45097	523577	0	True				
ANR	523649	Identifier	singularOk		523577	0					
ANR	523650	CompoundStatement		18:24:358:358	523577	1					
ANR	523651	ExpressionStatement	ids << id	1293:12:45114:45123	523577	0	True				
ANR	523652	ShiftExpression	ids << id		523577	0		<<			
ANR	523653	Identifier	ids		523577	0					
ANR	523654	Identifier	id		523577	1					
ANR	523655	ReturnStatement	return ids ;	1296:8:45144:45154	523577	4	True				
ANR	523656	Identifier	ids		523577	0					
ANR	523657	IdentifierDeclStatement	QByteArray data ( mimeData -> data ( Private :: groupMimeType ( ) ) ) ;	1299:4:45167:45224	523577	4	True				
ANR	523658	IdentifierDecl	data ( mimeData -> data ( Private :: groupMimeType ( ) ) )		523577	0					
ANR	523659	IdentifierDeclType	QByteArray		523577	0					
ANR	523660	Identifier	data		523577	1					
ANR	523661	CallExpression	mimeData -> data ( Private :: groupMimeType ( ) )		523577	2					
ANR	523662	Callee	mimeData -> data		523577	0					
ANR	523663	PtrMemberAccess	mimeData -> data		523577	0					
ANR	523664	Identifier	mimeData		523577	0					
ANR	523665	Identifier	data		523577	1					
ANR	523666	ArgumentList	Private :: groupMimeType ( )		523577	1					
ANR	523667	Argument	Private :: groupMimeType ( )		523577	0					
ANR	523668	CallExpression	Private :: groupMimeType ( )		523577	0					
ANR	523669	Callee	Private :: groupMimeType		523577	0					
ANR	523670	Identifier	Private :: groupMimeType		523577	0					
ANR	523671	ArgumentList			523577	1					
ANR	523672	IfStatement	if ( ( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId ) )		523577	5					
ANR	523673	Condition	( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId )	1300:8:45234:45286	523577	0	True				
ANR	523674	RelationalExpression	( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId )		523577	0		<			
ANR	523675	CastExpression	( unsigned int ) data . size ( )		523577	0					
ANR	523676	CastTarget	unsigned int		523577	0					
ANR	523677	CallExpression	data . size ( )		523577	1					
ANR	523678	Callee	data . size		523577	0					
ANR	523679	MemberAccess	data . size		523577	0					
ANR	523680	Identifier	data		523577	0					
ANR	523681	Identifier	size		523577	1					
ANR	523682	ArgumentList			523577	1					
ANR	523683	AdditiveExpression	sizeof ( int ) + sizeof ( WId )		523577	1		+			
ANR	523684	SizeofExpression	sizeof ( int )		523577	0					
ANR	523685	Sizeof	sizeof		523577	0					
ANR	523686	SizeofOperand	int		523577	1					
ANR	523687	SizeofExpression	sizeof ( WId )		523577	1					
ANR	523688	Sizeof	sizeof		523577	0					
ANR	523689	SizeofOperand	WId		523577	1					
ANR	523690	CompoundStatement		26:63:547:547	523577	1					
ANR	523691	ReturnStatement	return ids ;	1301:8:45299:45309	523577	0	True				
ANR	523692	Identifier	ids		523577	0					
ANR	523693	IdentifierDeclStatement	int count = 0 ;	1304:4:45322:45335	523577	6	True				
ANR	523694	IdentifierDecl	count = 0		523577	0					
ANR	523695	IdentifierDeclType	int		523577	0					
ANR	523696	Identifier	count		523577	1					
ANR	523697	AssignmentExpression	count = 0		523577	2		=			
ANR	523698	Identifier	count		523577	0					
ANR	523699	PrimaryExpression	0		523577	1					
ANR	523700	ExpressionStatement	"memcpy ( & count , data . data ( ) , sizeof ( int ) )"	1305:4:45341:45381	523577	7	True				
ANR	523701	CallExpression	"memcpy ( & count , data . data ( ) , sizeof ( int ) )"		523577	0					
ANR	523702	Callee	memcpy		523577	0					
ANR	523703	Identifier	memcpy		523577	0					
ANR	523704	ArgumentList	& count		523577	1					
ANR	523705	Argument	& count		523577	0					
ANR	523706	UnaryOperationExpression	& count		523577	0					
ANR	523707	UnaryOperator	&		523577	0					
ANR	523708	Identifier	count		523577	1					
ANR	523709	Argument	data . data ( )		523577	1					
ANR	523710	CallExpression	data . data ( )		523577	0					
ANR	523711	Callee	data . data		523577	0					
ANR	523712	MemberAccess	data . data		523577	0					
ANR	523713	Identifier	data		523577	0					
ANR	523714	Identifier	data		523577	1					
ANR	523715	ArgumentList			523577	1					
ANR	523716	Argument	sizeof ( int )		523577	2					
ANR	523717	SizeofExpression	sizeof ( int )		523577	0					
ANR	523718	Sizeof	sizeof		523577	0					
ANR	523719	SizeofOperand	int		523577	1					
ANR	523720	IfStatement	if ( count < 1 || ( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId ) * count )		523577	8					
ANR	523721	Condition	count < 1 || ( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId ) * count	1306:8:45391:45464	523577	0	True				
ANR	523722	OrExpression	count < 1 || ( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId ) * count		523577	0		||			
ANR	523723	RelationalExpression	count < 1		523577	0		<			
ANR	523724	Identifier	count		523577	0					
ANR	523725	PrimaryExpression	1		523577	1					
ANR	523726	RelationalExpression	( unsigned int ) data . size ( ) < sizeof ( int ) + sizeof ( WId ) * count		523577	1		<			
ANR	523727	CastExpression	( unsigned int ) data . size ( )		523577	0					
ANR	523728	CastTarget	unsigned int		523577	0					
ANR	523729	CallExpression	data . size ( )		523577	1					
ANR	523730	Callee	data . size		523577	0					
ANR	523731	MemberAccess	data . size		523577	0					
ANR	523732	Identifier	data		523577	0					
ANR	523733	Identifier	size		523577	1					
ANR	523734	ArgumentList			523577	1					
ANR	523735	AdditiveExpression	sizeof ( int ) + sizeof ( WId ) * count		523577	1		+			
ANR	523736	SizeofExpression	sizeof ( int )		523577	0					
ANR	523737	Sizeof	sizeof		523577	0					
ANR	523738	SizeofOperand	int		523577	1					
ANR	523739	MultiplicativeExpression	sizeof ( WId ) * count		523577	1		*			
ANR	523740	SizeofExpression	sizeof ( WId )		523577	0					
ANR	523741	Sizeof	sizeof		523577	0					
ANR	523742	SizeofOperand	WId		523577	1					
ANR	523743	Identifier	count		523577	1					
ANR	523744	CompoundStatement		32:84:725:725	523577	1					
ANR	523745	ReturnStatement	return ids ;	1307:8:45477:45487	523577	0	True				
ANR	523746	Identifier	ids		523577	0					
ANR	523747	IdentifierDeclStatement	WId id ;	1310:4:45500:45506	523577	9	True				
ANR	523748	IdentifierDecl	id		523577	0					
ANR	523749	IdentifierDeclType	WId		523577	0					
ANR	523750	Identifier	id		523577	1					
ANR	523751	ForStatement	for ( int i = 0 ; i < count ; ++ i )		523577	10					
ANR	523752	ForInit	int i = 0 ;	1311:9:45517:45526	523577	0	True				
ANR	523753	IdentifierDeclStatement	int i = 0 ;		523577	0					
ANR	523754	IdentifierDecl	i = 0		523577	0					
ANR	523755	IdentifierDeclType	int		523577	0					
ANR	523756	Identifier	i		523577	1					
ANR	523757	AssignmentExpression	i = 0		523577	2		=			
ANR	523758	Identifier	i		523577	0					
ANR	523759	PrimaryExpression	0		523577	1					
ANR	523760	Condition	i < count	1311:20:45528:45536	523577	1	True				
ANR	523761	RelationalExpression	i < count		523577	0		<			
ANR	523762	Identifier	i		523577	0					
ANR	523763	Identifier	count		523577	1					
ANR	523764	UnaryExpression	++ i	1311:31:45539:45541	523577	2	True				
ANR	523765	IncDec	++		523577	0					
ANR	523766	Identifier	i		523577	1					
ANR	523767	CompoundStatement		37:36:802:802	523577	3					
ANR	523768	ExpressionStatement	"memcpy ( & id , data . data ( ) + sizeof ( int ) + sizeof ( WId ) * i , sizeof ( WId ) )"	1312:8:45554:45623	523577	0	True				
ANR	523769	CallExpression	"memcpy ( & id , data . data ( ) + sizeof ( int ) + sizeof ( WId ) * i , sizeof ( WId ) )"		523577	0					
ANR	523770	Callee	memcpy		523577	0					
ANR	523771	Identifier	memcpy		523577	0					
ANR	523772	ArgumentList	& id		523577	1					
ANR	523773	Argument	& id		523577	0					
ANR	523774	UnaryOperationExpression	& id		523577	0					
ANR	523775	UnaryOperator	&		523577	0					
ANR	523776	Identifier	id		523577	1					
ANR	523777	Argument	data . data ( ) + sizeof ( int ) + sizeof ( WId ) * i		523577	1					
ANR	523778	AdditiveExpression	data . data ( ) + sizeof ( int ) + sizeof ( WId ) * i		523577	0		+			
ANR	523779	CallExpression	data . data ( )		523577	0					
ANR	523780	Callee	data . data		523577	0					
ANR	523781	MemberAccess	data . data		523577	0					
ANR	523782	Identifier	data		523577	0					
ANR	523783	Identifier	data		523577	1					
ANR	523784	ArgumentList			523577	1					
ANR	523785	AdditiveExpression	sizeof ( int ) + sizeof ( WId ) * i		523577	1		+			
ANR	523786	SizeofExpression	sizeof ( int )		523577	0					
ANR	523787	Sizeof	sizeof		523577	0					
ANR	523788	SizeofOperand	int		523577	1					
ANR	523789	MultiplicativeExpression	sizeof ( WId ) * i		523577	1		*			
ANR	523790	SizeofExpression	sizeof ( WId )		523577	0					
ANR	523791	Sizeof	sizeof		523577	0					
ANR	523792	SizeofOperand	WId		523577	1					
ANR	523793	Identifier	i		523577	1					
ANR	523794	Argument	sizeof ( WId )		523577	2					
ANR	523795	SizeofExpression	sizeof ( WId )		523577	0					
ANR	523796	Sizeof	sizeof		523577	0					
ANR	523797	SizeofOperand	WId		523577	1					
ANR	523798	ExpressionStatement	ids << id	1313:8:45633:45642	523577	1	True				
ANR	523799	ShiftExpression	ids << id		523577	0		<<			
ANR	523800	Identifier	ids		523577	0					
ANR	523801	Identifier	id		523577	1					
ANR	523802	IfStatement	if ( ok )		523577	11					
ANR	523803	Condition	ok	1316:8:45659:45660	523577	0	True				
ANR	523804	Identifier	ok		523577	0					
ANR	523805	CompoundStatement		42:12:921:921	523577	1					
ANR	523806	ExpressionStatement	* ok = true	1317:8:45673:45683	523577	0	True				
ANR	523807	AssignmentExpression	* ok = true		523577	0		=			
ANR	523808	UnaryOperationExpression	* ok		523577	0					
ANR	523809	UnaryOperator	*		523577	0					
ANR	523810	Identifier	ok		523577	1					
ANR	523811	Identifier	true		523577	1					
ANR	523812	ReturnStatement	return ids ;	1320:4:45696:45706	523577	12	True				
ANR	523813	Identifier	ids		523577	0					
ANR	523814	ReturnType	QList < WId >		523577	1					
ANR	523815	Identifier	XWindowTasksModel :: winIdsFromMimeData		523577	2					
ANR	523816	ParameterList	"const QMimeData * mimeData , bool * ok"		523577	3					
ANR	523817	Parameter	const QMimeData * mimeData	1274:49:44704:44728	523577	0	True				
ANR	523818	ParameterType	const QMimeData *		523577	0					
ANR	523819	Identifier	mimeData		523577	1					
ANR	523820	Parameter	bool * ok	1274:76:44731:44738	523577	1	True				
ANR	523821	ParameterType	bool *		523577	0					
ANR	523822	Identifier	ok		523577	1					
ANR	523823	CFGEntryNode	ENTRY		523577		True				
ANR	523824	CFGExitNode	EXIT		523577		True				
ANR	523825	Symbol	mimeData		523577						
ANR	523826	Symbol	* ok		523577						
ANR	523827	Symbol	winIdFromMimeData		523577						
ANR	523828	Symbol	& singularOk		523577						
ANR	523829	Symbol	data		523577						
ANR	523830	Symbol	data . data		523577						
ANR	523831	Symbol	& id		523577						
ANR	523832	Symbol	false		523577						
ANR	523833	Symbol	count		523577						
ANR	523834	Symbol	i		523577						
ANR	523835	Symbol	singularOk		523577						
ANR	523836	Symbol	* mimeData		523577						
ANR	523837	Symbol	data . size		523577						
ANR	523838	Symbol	mimeData -> hasFormat		523577						
ANR	523839	Symbol	true		523577						
ANR	523840	Symbol	ids		523577						
ANR	523841	Symbol	& count		523577						
ANR	523842	Symbol	id		523577						
ANR	523843	Symbol	ok		523577						
ANR	523844	Symbol	Private :: groupMimeType		523577						
