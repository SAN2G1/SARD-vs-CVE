command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	777248	File	data/converged/CVE-2018-6791_plasma-workspace/splashwindow.cpp								
ANR	777249	Function	SplashWindow :: SplashWindow	39:1:1220:2366							
ANR	777250	FunctionDef	"SplashWindow :: SplashWindow (bool testing , bool window)"		777249	0					
ANR	777251	CompoundStatement		46:0:1411:2366	777249	0					
ANR	777252	ExpressionStatement	setColor ( Qt :: transparent )	47:4:1417:1442	777249	0	True				
ANR	777253	CallExpression	setColor ( Qt :: transparent )		777249	0					
ANR	777254	Callee	setColor		777249	0					
ANR	777255	Identifier	setColor		777249	0					
ANR	777256	ArgumentList	Qt :: transparent		777249	1					
ANR	777257	Argument	Qt :: transparent		777249	0					
ANR	777258	Identifier	Qt :: transparent		777249	0					
ANR	777259	ExpressionStatement	setDefaultAlphaBuffer ( true )	48:4:1448:1475	777249	1	True				
ANR	777260	CallExpression	setDefaultAlphaBuffer ( true )		777249	0					
ANR	777261	Callee	setDefaultAlphaBuffer		777249	0					
ANR	777262	Identifier	setDefaultAlphaBuffer		777249	0					
ANR	777263	ArgumentList	true		777249	1					
ANR	777264	Argument	true		777249	0					
ANR	777265	Identifier	true		777249	0					
ANR	777266	ExpressionStatement	setClearBeforeRendering ( true )	49:4:1481:1510	777249	2	True				
ANR	777267	CallExpression	setClearBeforeRendering ( true )		777249	0					
ANR	777268	Callee	setClearBeforeRendering		777249	0					
ANR	777269	Identifier	setClearBeforeRendering		777249	0					
ANR	777270	ArgumentList	true		777249	1					
ANR	777271	Argument	true		777249	0					
ANR	777272	Identifier	true		777249	0					
ANR	777273	ExpressionStatement	setResizeMode ( KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView )	50:4:1516:1588	777249	3	True				
ANR	777274	CallExpression	setResizeMode ( KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView )		777249	0					
ANR	777275	Callee	setResizeMode		777249	0					
ANR	777276	Identifier	setResizeMode		777249	0					
ANR	777277	ArgumentList	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		777249	1					
ANR	777278	Argument	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		777249	0					
ANR	777279	Identifier	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		777249	0					
ANR	777280	IfStatement	if ( ! m_window )		777249	4					
ANR	777281	Condition	! m_window	52:8:1599:1607	777249	0	True				
ANR	777282	UnaryOperationExpression	! m_window		777249	0					
ANR	777283	UnaryOperator	!		777249	0					
ANR	777284	Identifier	m_window		777249	1					
ANR	777285	CompoundStatement		7:19:198:198	777249	1					
ANR	777286	ExpressionStatement	setFlags ( Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint )	53:8:1620:1680	777249	0	True				
ANR	777287	CallExpression	setFlags ( Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint )		777249	0					
ANR	777288	Callee	setFlags		777249	0					
ANR	777289	Identifier	setFlags		777249	0					
ANR	777290	ArgumentList	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		777249	1					
ANR	777291	Argument	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		777249	0					
ANR	777292	InclusiveOrExpression	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		777249	0		|			
ANR	777293	Identifier	Qt :: FramelessWindowHint		777249	0					
ANR	777294	Identifier	Qt :: WindowStaysOnTopHint		777249	1					
ANR	777295	IfStatement	if ( ! m_testing && ! m_window )		777249	5					
ANR	777296	Condition	! m_testing && ! m_window	56:8:1697:1719	777249	0	True				
ANR	777297	AndExpression	! m_testing && ! m_window		777249	0		&&			
ANR	777298	UnaryOperationExpression	! m_testing		777249	0					
ANR	777299	UnaryOperator	!		777249	0					
ANR	777300	Identifier	m_testing		777249	1					
ANR	777301	UnaryOperationExpression	! m_window		777249	1					
ANR	777302	UnaryOperator	!		777249	0					
ANR	777303	Identifier	m_window		777249	1					
ANR	777304	CompoundStatement		11:33:310:310	777249	1					
ANR	777305	IfStatement	if ( KWindowSystem :: isPlatformX11 ( ) )		777249	0					
ANR	777306	Condition	KWindowSystem :: isPlatformX11 ( )	57:12:1736:1765	777249	0	True				
ANR	777307	CallExpression	KWindowSystem :: isPlatformX11 ( )		777249	0					
ANR	777308	Callee	KWindowSystem :: isPlatformX11		777249	0					
ANR	777309	Identifier	KWindowSystem :: isPlatformX11		777249	0					
ANR	777310	ArgumentList			777249	1					
ANR	777311	CompoundStatement		12:44:356:356	777249	1					
ANR	777312	ExpressionStatement	setFlags ( Qt :: BypassWindowManagerHint )	59:12:1827:1864	777249	0	True				
ANR	777313	CallExpression	setFlags ( Qt :: BypassWindowManagerHint )		777249	0					
ANR	777314	Callee	setFlags		777249	0					
ANR	777315	Identifier	setFlags		777249	0					
ANR	777316	ArgumentList	Qt :: BypassWindowManagerHint		777249	1					
ANR	777317	Argument	Qt :: BypassWindowManagerHint		777249	0					
ANR	777318	Identifier	Qt :: BypassWindowManagerHint		777249	0					
ANR	777319	ElseStatement	else		777249	0					
ANR	777320	IfStatement	if ( ! KWindowSystem :: isPlatformWayland ( ) )		777249	0					
ANR	777321	Condition	! KWindowSystem :: isPlatformWayland ( )	60:19:1885:1919	777249	0	True				
ANR	777322	UnaryOperationExpression	! KWindowSystem :: isPlatformWayland ( )		777249	0					
ANR	777323	UnaryOperator	!		777249	0					
ANR	777324	CallExpression	KWindowSystem :: isPlatformWayland ( )		777249	1					
ANR	777325	Callee	KWindowSystem :: isPlatformWayland		777249	0					
ANR	777326	Identifier	KWindowSystem :: isPlatformWayland		777249	0					
ANR	777327	ArgumentList			777249	1					
ANR	777328	CompoundStatement		15:56:510:510	777249	1					
ANR	777329	ExpressionStatement	setWindowState ( Qt :: WindowFullScreen )	63:12:2053:2089	777249	0	True				
ANR	777330	CallExpression	setWindowState ( Qt :: WindowFullScreen )		777249	0					
ANR	777331	Callee	setWindowState		777249	0					
ANR	777332	Identifier	setWindowState		777249	0					
ANR	777333	ArgumentList	Qt :: WindowFullScreen		777249	1					
ANR	777334	Argument	Qt :: WindowFullScreen		777249	0					
ANR	777335	Identifier	Qt :: WindowFullScreen		777249	0					
ANR	777336	IfStatement	if ( m_testing && ! m_window && ! KWindowSystem :: isPlatformWayland ( ) )		777249	6					
ANR	777337	Condition	m_testing && ! m_window && ! KWindowSystem :: isPlatformWayland ( )	67:8:2116:2176	777249	0	True				
ANR	777338	AndExpression	m_testing && ! m_window && ! KWindowSystem :: isPlatformWayland ( )		777249	0		&&			
ANR	777339	Identifier	m_testing		777249	0					
ANR	777340	AndExpression	! m_window && ! KWindowSystem :: isPlatformWayland ( )		777249	1		&&			
ANR	777341	UnaryOperationExpression	! m_window		777249	0					
ANR	777342	UnaryOperator	!		777249	0					
ANR	777343	Identifier	m_window		777249	1					
ANR	777344	UnaryOperationExpression	! KWindowSystem :: isPlatformWayland ( )		777249	1					
ANR	777345	UnaryOperator	!		777249	0					
ANR	777346	CallExpression	KWindowSystem :: isPlatformWayland ( )		777249	1					
ANR	777347	Callee	KWindowSystem :: isPlatformWayland		777249	0					
ANR	777348	Identifier	KWindowSystem :: isPlatformWayland		777249	0					
ANR	777349	ArgumentList			777249	1					
ANR	777350	CompoundStatement		22:71:767:767	777249	1					
ANR	777351	ExpressionStatement	setWindowState ( Qt :: WindowFullScreen )	68:8:2189:2225	777249	0	True				
ANR	777352	CallExpression	setWindowState ( Qt :: WindowFullScreen )		777249	0					
ANR	777353	Callee	setWindowState		777249	0					
ANR	777354	Identifier	setWindowState		777249	0					
ANR	777355	ArgumentList	Qt :: WindowFullScreen		777249	1					
ANR	777356	Argument	Qt :: WindowFullScreen		777249	0					
ANR	777357	Identifier	Qt :: WindowFullScreen		777249	0					
ANR	777358	ExpressionStatement	"QTimer :: singleShot ( 30000 , this , & QWindow :: close )"	73:4:2316:2364	777249	7	True				
ANR	777359	CallExpression	"QTimer :: singleShot ( 30000 , this , & QWindow :: close )"		777249	0					
ANR	777360	Callee	QTimer :: singleShot		777249	0					
ANR	777361	Identifier	QTimer :: singleShot		777249	0					
ANR	777362	ArgumentList	30000		777249	1					
ANR	777363	Argument	30000		777249	0					
ANR	777364	PrimaryExpression	30000		777249	0					
ANR	777365	Argument	this		777249	1					
ANR	777366	Identifier	this		777249	0					
ANR	777367	Argument	& QWindow :: close		777249	2					
ANR	777368	UnaryOperationExpression	& QWindow :: close		777249	0					
ANR	777369	UnaryOperator	&		777249	0					
ANR	777370	Identifier	QWindow :: close		777249	1					
ANR	777371	ReturnType	include < KWindowSystem >		777249	1					
ANR	777372	Identifier	SplashWindow :: SplashWindow		777249	2					
ANR	777373	ParameterList	"bool testing , bool window"		777249	3					
ANR	777374	Parameter	bool testing	41:27:1272:1283	777249	0	True				
ANR	777375	ParameterType	bool		777249	0					
ANR	777376	Identifier	testing		777249	1					
ANR	777377	Parameter	bool window	41:41:1286:1296	777249	1	True				
ANR	777378	ParameterType	bool		777249	0					
ANR	777379	Identifier	window		777249	1					
ANR	777380	CFGEntryNode	ENTRY		777249		True				
ANR	777381	CFGExitNode	EXIT		777249		True				
ANR	777382	Symbol	Qt :: WindowStaysOnTopHint		777249						
ANR	777383	Symbol	KWindowSystem :: isPlatformX11		777249						
ANR	777384	Symbol	KQuickAddons :: QuickViewSharedEngine :: SizeRootObjectToView		777249						
ANR	777385	Symbol	testing		777249						
ANR	777386	Symbol	Qt :: FramelessWindowHint		777249						
ANR	777387	Symbol	this		777249						
ANR	777388	Symbol	Qt :: transparent		777249						
ANR	777389	Symbol	Qt :: WindowFullScreen		777249						
ANR	777390	Symbol	m_testing		777249						
ANR	777391	Symbol	KWindowSystem :: isPlatformWayland		777249						
ANR	777392	Symbol	true		777249						
ANR	777393	Symbol	m_window		777249						
ANR	777394	Symbol	window		777249						
ANR	777395	Symbol	Qt :: BypassWindowManagerHint		777249						
ANR	777396	Symbol	& QWindow :: close		777249						
ANR	777397	Function	SplashWindow :: setStage	76:0:2369:2479							
ANR	777398	FunctionDef	SplashWindow :: setStage (int stage)		777397	0					
ANR	777399	CompoundStatement		77:0:2408:2479	777397	0					
ANR	777400	ExpressionStatement	m_stage = stage	78:4:2414:2429	777397	0	True				
ANR	777401	AssignmentExpression	m_stage = stage		777397	0		=			
ANR	777402	Identifier	m_stage		777397	0					
ANR	777403	Identifier	stage		777397	1					
ANR	777404	ExpressionStatement	"rootObject ( ) -> setProperty ( ""stage"" , stage )"	80:4:2436:2477	777397	1	True				
ANR	777405	CallExpression	"rootObject ( ) -> setProperty ( ""stage"" , stage )"		777397	0					
ANR	777406	Callee	rootObject ( ) -> setProperty		777397	0					
ANR	777407	PtrMemberAccess	rootObject ( ) -> setProperty		777397	0					
ANR	777408	CallExpression	rootObject ( )		777397	0					
ANR	777409	Callee	rootObject		777397	0					
ANR	777410	Identifier	rootObject		777397	0					
ANR	777411	ArgumentList			777397	1					
ANR	777412	Identifier	setProperty		777397	1					
ANR	777413	ArgumentList	"""stage"""		777397	1					
ANR	777414	Argument	"""stage"""		777397	0					
ANR	777415	PrimaryExpression	"""stage"""		777397	0					
ANR	777416	Argument	stage		777397	1					
ANR	777417	Identifier	stage		777397	0					
ANR	777418	ReturnType	void		777397	1					
ANR	777419	Identifier	SplashWindow :: setStage		777397	2					
ANR	777420	ParameterList	int stage		777397	3					
ANR	777421	Parameter	int stage	76:28:2397:2405	777397	0	True				
ANR	777422	ParameterType	int		777397	0					
ANR	777423	Identifier	stage		777397	1					
ANR	777424	CFGEntryNode	ENTRY		777397		True				
ANR	777425	CFGExitNode	EXIT		777397		True				
ANR	777426	Symbol	m_stage		777397						
ANR	777427	Symbol	stage		777397						
ANR	777428	Symbol	rootObject		777397						
ANR	777429	Function	SplashWindow :: event	83:0:2482:3060							
ANR	777430	FunctionDef	SplashWindow :: event (QEvent * e)		777429	0					
ANR	777431	CompoundStatement		84:0:2518:3060	777429	0					
ANR	777432	IfStatement	if ( e -> type ( ) == QEvent :: PlatformSurface )		777429	0					
ANR	777433	Condition	e -> type ( ) == QEvent :: PlatformSurface	85:8:2528:2563	777429	0	True				
ANR	777434	EqualityExpression	e -> type ( ) == QEvent :: PlatformSurface		777429	0		==			
ANR	777435	CallExpression	e -> type ( )		777429	0					
ANR	777436	Callee	e -> type		777429	0					
ANR	777437	PtrMemberAccess	e -> type		777429	0					
ANR	777438	Identifier	e		777429	0					
ANR	777439	Identifier	type		777429	1					
ANR	777440	ArgumentList			777429	1					
ANR	777441	Identifier	QEvent :: PlatformSurface		777429	1					
ANR	777442	CompoundStatement		2:46:47:47	777429	1					
ANR	777443	Statement	if	86:8:2576:2577	777429	0	True				
ANR	777444	Statement	(	86:11:2579:2579	777429	1	True				
ANR	777445	Statement	auto	86:12:2580:2583	777429	2	True				
ANR	777446	Statement	pe	86:17:2585:2586	777429	3	True				
ANR	777447	Statement	=	86:20:2588:2588	777429	4	True				
ANR	777448	Statement	dynamic_cast	86:22:2590:2601	777429	5	True				
ANR	777449	Statement	<	86:34:2602:2602	777429	6	True				
ANR	777450	Statement	QPlatformSurfaceEvent	86:35:2603:2623	777429	7	True				
ANR	777451	Statement	*	86:56:2624:2624	777429	8	True				
ANR	777452	Statement	>	86:57:2625:2625	777429	9	True				
ANR	777453	Statement	(	86:58:2626:2626	777429	10	True				
ANR	777454	Statement	e	86:59:2627:2627	777429	11	True				
ANR	777455	Statement	)	86:60:2628:2628	777429	12	True				
ANR	777456	Statement	)	86:61:2629:2629	777429	13	True				
ANR	777457	CompoundStatement		3:63:112:112	777429	14					
ANR	777458	SwitchStatement	switch ( pe -> surfaceEventType ( ) )		777429	0					
ANR	777459	Condition	pe -> surfaceEventType ( )	87:20:2653:2674	777429	0	True				
ANR	777460	CallExpression	pe -> surfaceEventType ( )		777429	0					
ANR	777461	Callee	pe -> surfaceEventType		777429	0					
ANR	777462	PtrMemberAccess	pe -> surfaceEventType		777429	0					
ANR	777463	Identifier	pe		777429	0					
ANR	777464	Identifier	surfaceEventType		777429	1					
ANR	777465	ArgumentList			777429	1					
ANR	777466	CompoundStatement		4:44:158:158	777429	1					
ANR	777467	Label	case QPlatformSurfaceEvent :: SurfaceCreated :	88:12:2691:2733	777429	0	True				
ANR	777468	Identifier	QPlatformSurfaceEvent :: SurfaceCreated		777429	0					
ANR	777469	ExpressionStatement	setupWaylandIntegration ( )	89:16:2751:2776	777429	1	True				
ANR	777470	CallExpression	setupWaylandIntegration ( )		777429	0					
ANR	777471	Callee	setupWaylandIntegration		777429	0					
ANR	777472	Identifier	setupWaylandIntegration		777429	0					
ANR	777473	ArgumentList			777429	1					
ANR	777474	BreakStatement	break ;	90:16:2794:2799	777429	2	True				
ANR	777475	Label	case QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed :	91:12:2813:2866	777429	3	True				
ANR	777476	Identifier	QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed		777429	0					
ANR	777477	Statement	delete	92:16:2884:2889	777429	4	True				
ANR	777478	ExpressionStatement	m_shellSurface	92:23:2891:2905	777429	5	True				
ANR	777479	Identifier	m_shellSurface		777429	0					
ANR	777480	ExpressionStatement	m_shellSurface = nullptr	93:16:2923:2947	777429	6	True				
ANR	777481	AssignmentExpression	m_shellSurface = nullptr		777429	0		=			
ANR	777482	Identifier	m_shellSurface		777429	0					
ANR	777483	Identifier	nullptr		777429	1					
ANR	777484	BreakStatement	break ;	94:16:2965:2970	777429	7	True				
ANR	777485	ReturnStatement	return KQuickAddons :: QuickViewSharedEngine :: event ( e ) ;	98:4:3006:3058	777429	1	True				
ANR	777486	CallExpression	KQuickAddons :: QuickViewSharedEngine :: event ( e )		777429	0					
ANR	777487	Callee	KQuickAddons :: QuickViewSharedEngine :: event		777429	0					
ANR	777488	Identifier	KQuickAddons :: QuickViewSharedEngine :: event		777429	0					
ANR	777489	ArgumentList	e		777429	1					
ANR	777490	Argument	e		777429	0					
ANR	777491	Identifier	e		777429	0					
ANR	777492	ReturnType	bool		777429	1					
ANR	777493	Identifier	SplashWindow :: event		777429	2					
ANR	777494	ParameterList	QEvent * e		777429	3					
ANR	777495	Parameter	QEvent * e	83:25:2507:2515	777429	0	True				
ANR	777496	ParameterType	QEvent *		777429	0					
ANR	777497	Identifier	e		777429	1					
ANR	777498	CFGEntryNode	ENTRY		777429		True				
ANR	777499	CFGExitNode	EXIT		777429		True				
ANR	777500	Symbol	pe -> surfaceEventType		777429						
ANR	777501	Symbol	m_shellSurface		777429						
ANR	777502	Symbol	e		777429						
ANR	777503	Symbol	pe		777429						
ANR	777504	Symbol	* pe		777429						
ANR	777505	Symbol	KQuickAddons :: QuickViewSharedEngine :: event		777429						
ANR	777506	Symbol	QEvent :: PlatformSurface		777429						
ANR	777507	Symbol	e -> type		777429						
ANR	777508	Symbol	nullptr		777429						
ANR	777509	Symbol	* e		777429						
ANR	777510	Function	SplashWindow :: keyPressEvent	101:0:3063:3281							
ANR	777511	FunctionDef	SplashWindow :: keyPressEvent (QKeyEvent * event)		777510	0					
ANR	777512	CompoundStatement		102:0:3114:3281	777510	0					
ANR	777513	ExpressionStatement	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent ( event )	103:4:3120:3177	777510	0	True				
ANR	777514	CallExpression	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent ( event )		777510	0					
ANR	777515	Callee	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent		777510	0					
ANR	777516	Identifier	KQuickAddons :: QuickViewSharedEngine :: keyPressEvent		777510	0					
ANR	777517	ArgumentList	event		777510	1					
ANR	777518	Argument	event		777510	0					
ANR	777519	Identifier	event		777510	0					
ANR	777520	IfStatement	if ( m_testing && ! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape )		777510	1					
ANR	777521	Condition	m_testing && ! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape	104:8:3187:3253	777510	0	True				
ANR	777522	AndExpression	m_testing && ! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape		777510	0		&&			
ANR	777523	Identifier	m_testing		777510	0					
ANR	777524	AndExpression	! event -> isAccepted ( ) && event -> key ( ) == Qt :: Key_Escape		777510	1		&&			
ANR	777525	UnaryOperationExpression	! event -> isAccepted ( )		777510	0					
ANR	777526	UnaryOperator	!		777510	0					
ANR	777527	CallExpression	event -> isAccepted ( )		777510	1					
ANR	777528	Callee	event -> isAccepted		777510	0					
ANR	777529	PtrMemberAccess	event -> isAccepted		777510	0					
ANR	777530	Identifier	event		777510	0					
ANR	777531	Identifier	isAccepted		777510	1					
ANR	777532	ArgumentList			777510	1					
ANR	777533	EqualityExpression	event -> key ( ) == Qt :: Key_Escape		777510	1		==			
ANR	777534	CallExpression	event -> key ( )		777510	0					
ANR	777535	Callee	event -> key		777510	0					
ANR	777536	PtrMemberAccess	event -> key		777510	0					
ANR	777537	Identifier	event		777510	0					
ANR	777538	Identifier	key		777510	1					
ANR	777539	ArgumentList			777510	1					
ANR	777540	Identifier	Qt :: Key_Escape		777510	1					
ANR	777541	CompoundStatement		3:77:141:141	777510	1					
ANR	777542	ExpressionStatement	close ( )	105:8:3266:3273	777510	0	True				
ANR	777543	CallExpression	close ( )		777510	0					
ANR	777544	Callee	close		777510	0					
ANR	777545	Identifier	close		777510	0					
ANR	777546	ArgumentList			777510	1					
ANR	777547	ReturnType	void		777510	1					
ANR	777548	Identifier	SplashWindow :: keyPressEvent		777510	2					
ANR	777549	ParameterList	QKeyEvent * event		777510	3					
ANR	777550	Parameter	QKeyEvent * event	101:33:3096:3111	777510	0	True				
ANR	777551	ParameterType	QKeyEvent *		777510	0					
ANR	777552	Identifier	event		777510	1					
ANR	777553	CFGEntryNode	ENTRY		777510		True				
ANR	777554	CFGExitNode	EXIT		777510		True				
ANR	777555	Symbol	Qt :: Key_Escape		777510						
ANR	777556	Symbol	event -> isAccepted		777510						
ANR	777557	Symbol	event -> key		777510						
ANR	777558	Symbol	* event		777510						
ANR	777559	Symbol	m_testing		777510						
ANR	777560	Symbol	event		777510						
ANR	777561	Function	SplashWindow :: mousePressEvent	109:0:3284:3474							
ANR	777562	FunctionDef	SplashWindow :: mousePressEvent (QMouseEvent * event)		777561	0					
ANR	777563	CompoundStatement		110:0:3339:3474	777561	0					
ANR	777564	ExpressionStatement	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent ( event )	111:4:3345:3404	777561	0	True				
ANR	777565	CallExpression	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent ( event )		777561	0					
ANR	777566	Callee	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent		777561	0					
ANR	777567	Identifier	KQuickAddons :: QuickViewSharedEngine :: mousePressEvent		777561	0					
ANR	777568	ArgumentList	event		777561	1					
ANR	777569	Argument	event		777561	0					
ANR	777570	Identifier	event		777561	0					
ANR	777571	IfStatement	if ( m_testing && ! event -> isAccepted ( ) )		777561	1					
ANR	777572	Condition	m_testing && ! event -> isAccepted ( )	112:8:3414:3446	777561	0	True				
ANR	777573	AndExpression	m_testing && ! event -> isAccepted ( )		777561	0		&&			
ANR	777574	Identifier	m_testing		777561	0					
ANR	777575	UnaryOperationExpression	! event -> isAccepted ( )		777561	1					
ANR	777576	UnaryOperator	!		777561	0					
ANR	777577	CallExpression	event -> isAccepted ( )		777561	1					
ANR	777578	Callee	event -> isAccepted		777561	0					
ANR	777579	PtrMemberAccess	event -> isAccepted		777561	0					
ANR	777580	Identifier	event		777561	0					
ANR	777581	Identifier	isAccepted		777561	1					
ANR	777582	ArgumentList			777561	1					
ANR	777583	CompoundStatement		3:43:109:109	777561	1					
ANR	777584	ExpressionStatement	close ( )	113:8:3459:3466	777561	0	True				
ANR	777585	CallExpression	close ( )		777561	0					
ANR	777586	Callee	close		777561	0					
ANR	777587	Identifier	close		777561	0					
ANR	777588	ArgumentList			777561	1					
ANR	777589	ReturnType	void		777561	1					
ANR	777590	Identifier	SplashWindow :: mousePressEvent		777561	2					
ANR	777591	ParameterList	QMouseEvent * event		777561	3					
ANR	777592	Parameter	QMouseEvent * event	109:35:3319:3336	777561	0	True				
ANR	777593	ParameterType	QMouseEvent *		777561	0					
ANR	777594	Identifier	event		777561	1					
ANR	777595	CFGEntryNode	ENTRY		777561		True				
ANR	777596	CFGExitNode	EXIT		777561		True				
ANR	777597	Symbol	event -> isAccepted		777561						
ANR	777598	Symbol	* event		777561						
ANR	777599	Symbol	m_testing		777561						
ANR	777600	Symbol	event		777561						
ANR	777601	Function	SplashWindow :: setGeometry	117:0:3477:4395							
ANR	777602	FunctionDef	SplashWindow :: setGeometry (const QRect & rect)		777601	0					
ANR	777603	CompoundStatement		118:0:3527:4395	777601	0					
ANR	777604	IdentifierDeclStatement	bool oldGeometryEmpty = geometry ( ) . isNull ( ) ;	119:4:3533:3576	777601	0	True				
ANR	777605	IdentifierDecl	oldGeometryEmpty = geometry ( ) . isNull ( )		777601	0					
ANR	777606	IdentifierDeclType	bool		777601	0					
ANR	777607	Identifier	oldGeometryEmpty		777601	1					
ANR	777608	AssignmentExpression	oldGeometryEmpty = geometry ( ) . isNull ( )		777601	2		=			
ANR	777609	Identifier	oldGeometryEmpty		777601	0					
ANR	777610	CallExpression	geometry ( ) . isNull ( )		777601	1					
ANR	777611	Callee	geometry ( ) . isNull		777601	0					
ANR	777612	MemberAccess	geometry ( ) . isNull		777601	0					
ANR	777613	CallExpression	geometry ( )		777601	0					
ANR	777614	Callee	geometry		777601	0					
ANR	777615	Identifier	geometry		777601	0					
ANR	777616	ArgumentList			777601	1					
ANR	777617	Identifier	isNull		777601	1					
ANR	777618	ArgumentList			777601	1					
ANR	777619	ExpressionStatement	KQuickAddons :: QuickViewSharedEngine :: setGeometry ( rect )	120:4:3582:3636	777601	1	True				
ANR	777620	CallExpression	KQuickAddons :: QuickViewSharedEngine :: setGeometry ( rect )		777601	0					
ANR	777621	Callee	KQuickAddons :: QuickViewSharedEngine :: setGeometry		777601	0					
ANR	777622	Identifier	KQuickAddons :: QuickViewSharedEngine :: setGeometry		777601	0					
ANR	777623	ArgumentList	rect		777601	1					
ANR	777624	Argument	rect		777601	0					
ANR	777625	Identifier	rect		777601	0					
ANR	777626	IfStatement	if ( oldGeometryEmpty )		777601	2					
ANR	777627	Condition	oldGeometryEmpty	122:8:3647:3662	777601	0	True				
ANR	777628	Identifier	oldGeometryEmpty		777601	0					
ANR	777629	CompoundStatement		14:8:532:588	777601	1					
ANR	777630	IdentifierDeclStatement	"KPackage :: Package package = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) ) ;"	124:8:3676:3786	777601	0	True				
ANR	777631	IdentifierDecl	"package = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) )"		777601	0					
ANR	777632	IdentifierDeclType	KPackage :: Package		777601	0					
ANR	777633	Identifier	package		777601	1					
ANR	777634	AssignmentExpression	"package = KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) )"		777601	2		=			
ANR	777635	Identifier	package		777601	0					
ANR	777636	CallExpression	"KPackage :: PackageLoader :: self ( ) -> loadPackage ( QStringLiteral ( ""Plasma/LookAndFeel"" ) )"		777601	1					
ANR	777637	Callee	KPackage :: PackageLoader :: self ( ) -> loadPackage		777601	0					
ANR	777638	PtrMemberAccess	KPackage :: PackageLoader :: self ( ) -> loadPackage		777601	0					
ANR	777639	CallExpression	KPackage :: PackageLoader :: self ( )		777601	0					
ANR	777640	Callee	KPackage :: PackageLoader :: self		777601	0					
ANR	777641	Identifier	KPackage :: PackageLoader :: self		777601	0					
ANR	777642	ArgumentList			777601	1					
ANR	777643	Identifier	loadPackage		777601	1					
ANR	777644	ArgumentList	"QStringLiteral ( ""Plasma/LookAndFeel"" )"		777601	1					
ANR	777645	Argument	"QStringLiteral ( ""Plasma/LookAndFeel"" )"		777601	0					
ANR	777646	CallExpression	"QStringLiteral ( ""Plasma/LookAndFeel"" )"		777601	0					
ANR	777647	Callee	QStringLiteral		777601	0					
ANR	777648	Identifier	QStringLiteral		777601	0					
ANR	777649	ArgumentList	"""Plasma/LookAndFeel"""		777601	1					
ANR	777650	Argument	"""Plasma/LookAndFeel"""		777601	0					
ANR	777651	PrimaryExpression	"""Plasma/LookAndFeel"""		777601	0					
ANR	777652	IdentifierDeclStatement	"KConfigGroup cg ( KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) ) , ""KDE"" ) ;"	125:8:3796:3875	777601	1	True				
ANR	777653	IdentifierDecl	"cg ( KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) ) , ""KDE"" )"		777601	0					
ANR	777654	IdentifierDeclType	KConfigGroup		777601	0					
ANR	777655	Identifier	cg		777601	1					
ANR	777656	Expression	"KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) ) , ""KDE"""		777601	2					
ANR	777657	CallExpression	"KSharedConfig :: openConfig ( QStringLiteral ( ""kdeglobals"" ) )"		777601	0					
ANR	777658	Callee	KSharedConfig :: openConfig		777601	0					
ANR	777659	Identifier	KSharedConfig :: openConfig		777601	0					
ANR	777660	ArgumentList	"QStringLiteral ( ""kdeglobals"" )"		777601	1					
ANR	777661	Argument	"QStringLiteral ( ""kdeglobals"" )"		777601	0					
ANR	777662	CallExpression	"QStringLiteral ( ""kdeglobals"" )"		777601	0					
ANR	777663	Callee	QStringLiteral		777601	0					
ANR	777664	Identifier	QStringLiteral		777601	0					
ANR	777665	ArgumentList	"""kdeglobals"""		777601	1					
ANR	777666	Argument	"""kdeglobals"""		777601	0					
ANR	777667	PrimaryExpression	"""kdeglobals"""		777601	0					
ANR	777668	PrimaryExpression	"""KDE"""		777601	1					
ANR	777669	IdentifierDeclStatement	"const QString packageName = cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) ) ;"	126:8:3885:3958	777601	2	True				
ANR	777670	IdentifierDecl	"packageName = cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) )"		777601	0					
ANR	777671	IdentifierDeclType	const QString		777601	0					
ANR	777672	Identifier	packageName		777601	1					
ANR	777673	AssignmentExpression	"packageName = cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) )"		777601	2		=			
ANR	777674	Identifier	packageName		777601	0					
ANR	777675	CallExpression	"cg . readEntry ( ""LookAndFeelPackage"" , QString ( ) )"		777601	1					
ANR	777676	Callee	cg . readEntry		777601	0					
ANR	777677	MemberAccess	cg . readEntry		777601	0					
ANR	777678	Identifier	cg		777601	0					
ANR	777679	Identifier	readEntry		777601	1					
ANR	777680	ArgumentList	"""LookAndFeelPackage"""		777601	1					
ANR	777681	Argument	"""LookAndFeelPackage"""		777601	0					
ANR	777682	PrimaryExpression	"""LookAndFeelPackage"""		777601	0					
ANR	777683	Argument	QString ( )		777601	1					
ANR	777684	CallExpression	QString ( )		777601	0					
ANR	777685	Callee	QString		777601	0					
ANR	777686	Identifier	QString		777601	0					
ANR	777687	ArgumentList			777601	1					
ANR	777688	IfStatement	if ( ! packageName . isEmpty ( ) )		777601	3					
ANR	777689	Condition	! packageName . isEmpty ( )	127:12:3972:3993	777601	0	True				
ANR	777690	UnaryOperationExpression	! packageName . isEmpty ( )		777601	0					
ANR	777691	UnaryOperator	!		777601	0					
ANR	777692	CallExpression	packageName . isEmpty ( )		777601	1					
ANR	777693	Callee	packageName . isEmpty		777601	0					
ANR	777694	MemberAccess	packageName . isEmpty		777601	0					
ANR	777695	Identifier	packageName		777601	0					
ANR	777696	Identifier	isEmpty		777601	1					
ANR	777697	ArgumentList			777601	1					
ANR	777698	CompoundStatement		10:36:468:468	777601	1					
ANR	777699	ExpressionStatement	package . setPath ( packageName )	128:12:4010:4038	777601	0	True				
ANR	777700	CallExpression	package . setPath ( packageName )		777601	0					
ANR	777701	Callee	package . setPath		777601	0					
ANR	777702	MemberAccess	package . setPath		777601	0					
ANR	777703	Identifier	package		777601	0					
ANR	777704	Identifier	setPath		777601	1					
ANR	777705	ArgumentList	packageName		777601	1					
ANR	777706	Argument	packageName		777601	0					
ANR	777707	Identifier	packageName		777601	0					
ANR	777708	ExpressionStatement		129:9:4049:4049	777601	4	True				
ANR	777709	IdentifierDeclStatement	const QString theme = QGuiApplication :: arguments ( ) . at ( 1 ) ;	131:8:4060:4116	777601	5	True				
ANR	777710	IdentifierDecl	theme = QGuiApplication :: arguments ( ) . at ( 1 )		777601	0					
ANR	777711	IdentifierDeclType	const QString		777601	0					
ANR	777712	Identifier	theme		777601	1					
ANR	777713	AssignmentExpression	theme = QGuiApplication :: arguments ( ) . at ( 1 )		777601	2		=			
ANR	777714	Identifier	theme		777601	0					
ANR	777715	CallExpression	QGuiApplication :: arguments ( ) . at ( 1 )		777601	1					
ANR	777716	Callee	QGuiApplication :: arguments ( ) . at		777601	0					
ANR	777717	MemberAccess	QGuiApplication :: arguments ( ) . at		777601	0					
ANR	777718	CallExpression	QGuiApplication :: arguments ( )		777601	0					
ANR	777719	Callee	QGuiApplication :: arguments		777601	0					
ANR	777720	Identifier	QGuiApplication :: arguments		777601	0					
ANR	777721	ArgumentList			777601	1					
ANR	777722	Identifier	at		777601	1					
ANR	777723	ArgumentList	1		777601	1					
ANR	777724	Argument	1		777601	0					
ANR	777725	PrimaryExpression	1		777601	0					
ANR	777726	IfStatement	"if ( ! theme . startsWith ( QLatin1String ( ""--"" ) ) )"		777601	6					
ANR	777727	Condition	"! theme . startsWith ( QLatin1String ( ""--"" ) )"	132:12:4130:4167	777601	0	True				
ANR	777728	UnaryOperationExpression	"! theme . startsWith ( QLatin1String ( ""--"" ) )"		777601	0					
ANR	777729	UnaryOperator	!		777601	0					
ANR	777730	CallExpression	"theme . startsWith ( QLatin1String ( ""--"" ) )"		777601	1					
ANR	777731	Callee	theme . startsWith		777601	0					
ANR	777732	MemberAccess	theme . startsWith		777601	0					
ANR	777733	Identifier	theme		777601	0					
ANR	777734	Identifier	startsWith		777601	1					
ANR	777735	ArgumentList	"QLatin1String ( ""--"" )"		777601	1					
ANR	777736	Argument	"QLatin1String ( ""--"" )"		777601	0					
ANR	777737	CallExpression	"QLatin1String ( ""--"" )"		777601	0					
ANR	777738	Callee	QLatin1String		777601	0					
ANR	777739	Identifier	QLatin1String		777601	0					
ANR	777740	ArgumentList	"""--"""		777601	1					
ANR	777741	Argument	"""--"""		777601	0					
ANR	777742	PrimaryExpression	"""--"""		777601	0					
ANR	777743	CompoundStatement		15:52:642:642	777601	1					
ANR	777744	ExpressionStatement	package . setPath ( theme )	133:12:4184:4206	777601	0	True				
ANR	777745	CallExpression	package . setPath ( theme )		777601	0					
ANR	777746	Callee	package . setPath		777601	0					
ANR	777747	MemberAccess	package . setPath		777601	0					
ANR	777748	Identifier	package		777601	0					
ANR	777749	Identifier	setPath		777601	1					
ANR	777750	ArgumentList	theme		777601	1					
ANR	777751	Argument	theme		777601	0					
ANR	777752	Identifier	theme		777601	0					
ANR	777753	ExpressionStatement	"setSource ( QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) ) )"	136:8:4227:4295	777601	7	True				
ANR	777754	CallExpression	"setSource ( QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) ) )"		777601	0					
ANR	777755	Callee	setSource		777601	0					
ANR	777756	Identifier	setSource		777601	0					
ANR	777757	ArgumentList	"QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) )"		777601	1					
ANR	777758	Argument	"QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) )"		777601	0					
ANR	777759	CallExpression	"QUrl :: fromLocalFile ( package . filePath ( ""splashmainscript"" ) )"		777601	0					
ANR	777760	Callee	QUrl :: fromLocalFile		777601	0					
ANR	777761	Identifier	QUrl :: fromLocalFile		777601	0					
ANR	777762	ArgumentList	"package . filePath ( ""splashmainscript"" )"		777601	1					
ANR	777763	Argument	"package . filePath ( ""splashmainscript"" )"		777601	0					
ANR	777764	CallExpression	"package . filePath ( ""splashmainscript"" )"		777601	0					
ANR	777765	Callee	package . filePath		777601	0					
ANR	777766	MemberAccess	package . filePath		777601	0					
ANR	777767	Identifier	package		777601	0					
ANR	777768	Identifier	filePath		777601	1					
ANR	777769	ArgumentList	"""splashmainscript"""		777601	1					
ANR	777770	Argument	"""splashmainscript"""		777601	0					
ANR	777771	PrimaryExpression	"""splashmainscript"""		777601	0					
ANR	777772	IfStatement	if ( m_shellSurface )		777601	3					
ANR	777773	Condition	m_shellSurface	139:8:4312:4325	777601	0	True				
ANR	777774	Identifier	m_shellSurface		777601	0					
ANR	777775	CompoundStatement		22:24:800:800	777601	1					
ANR	777776	ExpressionStatement	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )	140:8:4338:4387	777601	0	True				
ANR	777777	CallExpression	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )		777601	0					
ANR	777778	Callee	m_shellSurface -> setPosition		777601	0					
ANR	777779	PtrMemberAccess	m_shellSurface -> setPosition		777601	0					
ANR	777780	Identifier	m_shellSurface		777601	0					
ANR	777781	Identifier	setPosition		777601	1					
ANR	777782	ArgumentList	geometry ( ) . topLeft ( )		777601	1					
ANR	777783	Argument	geometry ( ) . topLeft ( )		777601	0					
ANR	777784	CallExpression	geometry ( ) . topLeft ( )		777601	0					
ANR	777785	Callee	geometry ( ) . topLeft		777601	0					
ANR	777786	MemberAccess	geometry ( ) . topLeft		777601	0					
ANR	777787	CallExpression	geometry ( )		777601	0					
ANR	777788	Callee	geometry		777601	0					
ANR	777789	Identifier	geometry		777601	0					
ANR	777790	ArgumentList			777601	1					
ANR	777791	Identifier	topLeft		777601	1					
ANR	777792	ArgumentList			777601	1					
ANR	777793	ReturnType	void		777601	1					
ANR	777794	Identifier	SplashWindow :: setGeometry		777601	2					
ANR	777795	ParameterList	const QRect & rect		777601	3					
ANR	777796	Parameter	const QRect & rect	117:31:3508:3524	777601	0	True				
ANR	777797	ParameterType	const QRect &		777601	0					
ANR	777798	Identifier	rect		777601	1					
ANR	777799	CFGEntryNode	ENTRY		777601		True				
ANR	777800	CFGExitNode	EXIT		777601		True				
ANR	777801	Symbol	QGuiApplication :: arguments ( ) . at		777601						
ANR	777802	Symbol	theme . startsWith		777601						
ANR	777803	Symbol	oldGeometryEmpty		777601						
ANR	777804	Symbol	KPackage :: PackageLoader :: self		777601						
ANR	777805	Symbol	package		777601						
ANR	777806	Symbol	cg		777601						
ANR	777807	Symbol	* KPackage :: PackageLoader :: self		777601						
ANR	777808	Symbol	cg . readEntry		777601						
ANR	777809	Symbol	QGuiApplication :: arguments		777601						
ANR	777810	Symbol	QUrl :: fromLocalFile		777601						
ANR	777811	Symbol	geometry ( ) . topLeft		777601						
ANR	777812	Symbol	package . filePath		777601						
ANR	777813	Symbol	QLatin1String		777601						
ANR	777814	Symbol	rect		777601						
ANR	777815	Symbol	QString		777601						
ANR	777816	Symbol	m_shellSurface		777601						
ANR	777817	Symbol	geometry ( ) . isNull		777601						
ANR	777818	Symbol	packageName . isEmpty		777601						
ANR	777819	Symbol	geometry		777601						
ANR	777820	Symbol	QStringLiteral		777601						
ANR	777821	Symbol	theme		777601						
ANR	777822	Symbol	packageName		777601						
ANR	777823	Symbol	KPackage :: PackageLoader :: self ( ) -> loadPackage		777601						
ANR	777824	Function	SplashWindow :: setupWaylandIntegration	144:0:4398:5177							
ANR	777825	FunctionDef	SplashWindow :: setupWaylandIntegration ()		777824	0					
ANR	777826	CompoundStatement		145:0:4443:5177	777824	0					
ANR	777827	IfStatement	if ( m_shellSurface )		777824	0					
ANR	777828	Condition	m_shellSurface	146:8:4453:4466	777824	0	True				
ANR	777829	Identifier	m_shellSurface		777824	0					
ANR	777830	CompoundStatement		2:24:25:25	777824	1					
ANR	777831	ReturnStatement	return ;	148:8:4504:4510	777824	0	True				
ANR	777832	Statement	if	150:4:4522:4523	777824	1	True				
ANR	777833	Statement	(	150:7:4525:4525	777824	2	True				
ANR	777834	Statement	SplashApp	150:8:4526:4534	777824	3	True				
ANR	777835	Statement	*	150:18:4536:4536	777824	4	True				
ANR	777836	Statement	a	150:19:4537:4537	777824	5	True				
ANR	777837	Statement	=	150:21:4539:4539	777824	6	True				
ANR	777838	Statement	qobject_cast	150:23:4541:4552	777824	7	True				
ANR	777839	Statement	<	150:35:4553:4553	777824	8	True				
ANR	777840	Statement	SplashApp	150:36:4554:4562	777824	9	True				
ANR	777841	Statement	*	150:45:4563:4563	777824	10	True				
ANR	777842	Statement	>	150:46:4564:4564	777824	11	True				
ANR	777843	Statement	(	150:47:4565:4565	777824	12	True				
ANR	777844	Statement	qApp	150:48:4566:4569	777824	13	True				
ANR	777845	Statement	)	150:52:4570:4570	777824	14	True				
ANR	777846	Statement	)	150:53:4571:4571	777824	15	True				
ANR	777847	CompoundStatement		12:8:304:342	777824	16					
ANR	777848	Statement	using	151:8:4583:4587	777824	0	True				
ANR	777849	Statement	namespace	151:14:4589:4597	777824	1	True				
ANR	777850	ExpressionStatement	KWayland :: Client	151:24:4599:4615	777824	2	True				
ANR	777851	Identifier	KWayland :: Client		777824	0					
ANR	777852	IdentifierDeclStatement	PlasmaShell * interface = a -> waylandPlasmaShellInterface ( ) ;	152:8:4625:4682	777824	3	True				
ANR	777853	IdentifierDecl	* interface = a -> waylandPlasmaShellInterface ( )		777824	0					
ANR	777854	IdentifierDeclType	PlasmaShell *		777824	0					
ANR	777855	Identifier	interface		777824	1					
ANR	777856	AssignmentExpression	* interface = a -> waylandPlasmaShellInterface ( )		777824	2		=			
ANR	777857	Identifier	interface		777824	0					
ANR	777858	CallExpression	a -> waylandPlasmaShellInterface ( )		777824	1					
ANR	777859	Callee	a -> waylandPlasmaShellInterface		777824	0					
ANR	777860	PtrMemberAccess	a -> waylandPlasmaShellInterface		777824	0					
ANR	777861	Identifier	a		777824	0					
ANR	777862	Identifier	waylandPlasmaShellInterface		777824	1					
ANR	777863	ArgumentList			777824	1					
ANR	777864	IfStatement	if ( ! interface )		777824	4					
ANR	777865	Condition	! interface	153:12:4696:4705	777824	0	True				
ANR	777866	UnaryOperationExpression	! interface		777824	0					
ANR	777867	UnaryOperator	!		777824	0					
ANR	777868	Identifier	interface		777824	1					
ANR	777869	CompoundStatement		9:24:264:264	777824	1					
ANR	777870	ReturnStatement	return ;	154:12:4722:4728	777824	0	True				
ANR	777871	IdentifierDeclStatement	Surface * s = Surface :: fromWindow ( this ) ;	156:8:4748:4786	777824	5	True				
ANR	777872	IdentifierDecl	* s = Surface :: fromWindow ( this )		777824	0					
ANR	777873	IdentifierDeclType	Surface *		777824	0					
ANR	777874	Identifier	s		777824	1					
ANR	777875	AssignmentExpression	* s = Surface :: fromWindow ( this )		777824	2		=			
ANR	777876	Identifier	s		777824	0					
ANR	777877	CallExpression	Surface :: fromWindow ( this )		777824	1					
ANR	777878	Callee	Surface :: fromWindow		777824	0					
ANR	777879	Identifier	Surface :: fromWindow		777824	0					
ANR	777880	ArgumentList	this		777824	1					
ANR	777881	Argument	this		777824	0					
ANR	777882	Identifier	this		777824	0					
ANR	777883	IfStatement	if ( ! s )		777824	6					
ANR	777884	Condition	! s	157:12:4800:4801	777824	0	True				
ANR	777885	UnaryOperationExpression	! s		777824	0					
ANR	777886	UnaryOperator	!		777824	0					
ANR	777887	Identifier	s		777824	1					
ANR	777888	CompoundStatement		13:16:360:360	777824	1					
ANR	777889	ReturnStatement	return ;	158:12:4818:4824	777824	0	True				
ANR	777890	ExpressionStatement	"m_shellSurface = interface -> createSurface ( s , this )"	160:8:4844:4894	777824	7	True				
ANR	777891	AssignmentExpression	"m_shellSurface = interface -> createSurface ( s , this )"		777824	0		=			
ANR	777892	Identifier	m_shellSurface		777824	0					
ANR	777893	CallExpression	"interface -> createSurface ( s , this )"		777824	1					
ANR	777894	Callee	interface -> createSurface		777824	0					
ANR	777895	PtrMemberAccess	interface -> createSurface		777824	0					
ANR	777896	Identifier	interface		777824	0					
ANR	777897	Identifier	createSurface		777824	1					
ANR	777898	ArgumentList	s		777824	1					
ANR	777899	Argument	s		777824	0					
ANR	777900	Identifier	s		777824	0					
ANR	777901	Argument	this		777824	1					
ANR	777902	Identifier	this		777824	0					
ANR	777903	ExpressionStatement	m_shellSurface -> setRole ( PlasmaShellSurface :: Role :: OnScreenDisplay )	163:8:5044:5110	777824	8	True				
ANR	777904	CallExpression	m_shellSurface -> setRole ( PlasmaShellSurface :: Role :: OnScreenDisplay )		777824	0					
ANR	777905	Callee	m_shellSurface -> setRole		777824	0					
ANR	777906	PtrMemberAccess	m_shellSurface -> setRole		777824	0					
ANR	777907	Identifier	m_shellSurface		777824	0					
ANR	777908	Identifier	setRole		777824	1					
ANR	777909	ArgumentList	PlasmaShellSurface :: Role :: OnScreenDisplay		777824	1					
ANR	777910	Argument	PlasmaShellSurface :: Role :: OnScreenDisplay		777824	0					
ANR	777911	Identifier	PlasmaShellSurface :: Role :: OnScreenDisplay		777824	0					
ANR	777912	ExpressionStatement	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )	164:8:5120:5169	777824	9	True				
ANR	777913	CallExpression	m_shellSurface -> setPosition ( geometry ( ) . topLeft ( ) )		777824	0					
ANR	777914	Callee	m_shellSurface -> setPosition		777824	0					
ANR	777915	PtrMemberAccess	m_shellSurface -> setPosition		777824	0					
ANR	777916	Identifier	m_shellSurface		777824	0					
ANR	777917	Identifier	setPosition		777824	1					
ANR	777918	ArgumentList	geometry ( ) . topLeft ( )		777824	1					
ANR	777919	Argument	geometry ( ) . topLeft ( )		777824	0					
ANR	777920	CallExpression	geometry ( ) . topLeft ( )		777824	0					
ANR	777921	Callee	geometry ( ) . topLeft		777824	0					
ANR	777922	MemberAccess	geometry ( ) . topLeft		777824	0					
ANR	777923	CallExpression	geometry ( )		777824	0					
ANR	777924	Callee	geometry		777824	0					
ANR	777925	Identifier	geometry		777824	0					
ANR	777926	ArgumentList			777824	1					
ANR	777927	Identifier	topLeft		777824	1					
ANR	777928	ArgumentList			777824	1					
ANR	777929	ReturnType	void		777824	1					
ANR	777930	Identifier	SplashWindow :: setupWaylandIntegration		777824	2					
ANR	777931	ParameterList			777824	3					
ANR	777932	CFGEntryNode	ENTRY		777824		True				
ANR	777933	CFGExitNode	EXIT		777824		True				
ANR	777934	Symbol	a		777824						
ANR	777935	Symbol	this		777824						
ANR	777936	Symbol	* a		777824						
ANR	777937	Symbol	* interface		777824						
ANR	777938	Symbol	interface		777824						
ANR	777939	Symbol	geometry ( ) . topLeft		777824						
ANR	777940	Symbol	a -> waylandPlasmaShellInterface		777824						
ANR	777941	Symbol	m_shellSurface		777824						
ANR	777942	Symbol	interface -> createSurface		777824						
ANR	777943	Symbol	s		777824						
ANR	777944	Symbol	PlasmaShellSurface :: Role :: OnScreenDisplay		777824						
ANR	777945	Symbol	geometry		777824						
ANR	777946	Symbol	Surface :: fromWindow		777824						
