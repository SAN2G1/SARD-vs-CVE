command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	649212	File	data/converged/CVE-2018-6791_plasma-workspace/runners_windows_windowsrunner.cpp								
ANR	649213	Function	WindowsRunner :: WindowsRunner	37:0:1668:3729							
ANR	649214	FunctionDef	"WindowsRunner :: WindowsRunner (QObject * parent , const QVariantList & args)"		649213	0					
ANR	649215	CompoundStatement		41:0:1823:3729	649213	0					
ANR	649216	Statement	Q_UNUSED	42:4:1829:1836	649213	0	True				
ANR	649217	ExpressionStatement	"( args ) setObjectName ( QLatin1String ( ""Windows"" ) )"	42:12:1837:1889	649213	1	True				
ANR	649218	CastExpression	"( args ) setObjectName ( QLatin1String ( ""Windows"" ) )"		649213	0					
ANR	649219	CastTarget	args		649213	0					
ANR	649220	CallExpression	"setObjectName ( QLatin1String ( ""Windows"" ) )"		649213	1					
ANR	649221	Callee	setObjectName		649213	0					
ANR	649222	Identifier	setObjectName		649213	0					
ANR	649223	ArgumentList	"QLatin1String ( ""Windows"" )"		649213	1					
ANR	649224	Argument	"QLatin1String ( ""Windows"" )"		649213	0					
ANR	649225	CallExpression	"QLatin1String ( ""Windows"" )"		649213	0					
ANR	649226	Callee	QLatin1String		649213	0					
ANR	649227	Identifier	QLatin1String		649213	0					
ANR	649228	ArgumentList	"""Windows"""		649213	1					
ANR	649229	Argument	"""Windows"""		649213	0					
ANR	649230	PrimaryExpression	"""Windows"""		649213	0					
ANR	649231	Statement	addSyntax	45:4:1896:1904	649213	2	True				
ANR	649232	Statement	(	45:13:1905:1905	649213	3	True				
ANR	649233	Statement	Plasma	45:14:1906:1911	649213	4	True				
ANR	649234	Statement	::	45:20:1912:1913	649213	5	True				
ANR	649235	Statement	RunnerSyntax	45:22:1914:1925	649213	6	True				
ANR	649236	Statement	(	45:34:1926:1926	649213	7	True				
ANR	649237	Statement	QStringLiteral	45:35:1927:1940	649213	8	True				
ANR	649238	Statement	(	45:49:1941:1941	649213	9	True				
ANR	649239	Statement	""":q:"""	45:50:1942:1946	649213	10	True				
ANR	649240	Statement	)	45:55:1947:1947	649213	11	True				
ANR	649241	Statement	","	45:56:1948:1948	649213	12	True				
ANR	649242	Statement	i18n	45:58:1950:1953	649213	13	True				
ANR	649243	Statement	(	45:62:1954:1954	649213	14	True				
ANR	649244	Statement	"""Finds windows whose name, window class or window role match :q:. """	45:63:1955:2021	649213	15	True				
ANR	649245	Statement	"""It is possible to interact with the windows by using one of the following keywords: """	46:35:2058:2143	649213	16	True				
ANR	649246	Statement	"""activate, close, min(imize), max(imize), fullscreen, shade, keep above and keep below."""	47:35:2180:2267	649213	17	True				
ANR	649247	Statement	)	47:123:2268:2268	649213	18	True				
ANR	649248	Statement	)	47:124:2269:2269	649213	19	True				
ANR	649249	Statement	)	47:125:2270:2270	649213	20	True				
ANR	649250	ExpressionStatement		47:126:2271:2271	649213	21	True				
ANR	649251	Statement	addSyntax	48:4:2277:2285	649213	22	True				
ANR	649252	Statement	(	48:13:2286:2286	649213	23	True				
ANR	649253	Statement	Plasma	48:14:2287:2292	649213	24	True				
ANR	649254	Statement	::	48:20:2293:2294	649213	25	True				
ANR	649255	Statement	RunnerSyntax	48:22:2295:2306	649213	26	True				
ANR	649256	Statement	(	48:34:2307:2307	649213	27	True				
ANR	649257	Statement	QStringLiteral	48:35:2308:2321	649213	28	True				
ANR	649258	Statement	(	48:49:2322:2322	649213	29	True				
ANR	649259	Statement	""":q:"""	48:50:2323:2327	649213	30	True				
ANR	649260	Statement	)	48:55:2328:2328	649213	31	True				
ANR	649261	Statement	","	48:56:2329:2329	649213	32	True				
ANR	649262	Statement	i18n	48:58:2331:2334	649213	33	True				
ANR	649263	Statement	(	48:62:2335:2335	649213	34	True				
ANR	649264	Statement	"""Finds windows which are on desktop named :q: """	48:63:2336:2382	649213	35	True				
ANR	649265	Statement	"""It is possible to interact with the windows by using one of the following keywords: """	49:35:2419:2504	649213	36	True				
ANR	649266	Statement	"""activate, close, min(imize), max(imize), fullscreen, shade, keep above and keep below."""	50:35:2541:2628	649213	37	True				
ANR	649267	Statement	)	50:123:2629:2629	649213	38	True				
ANR	649268	Statement	)	50:124:2630:2630	649213	39	True				
ANR	649269	Statement	)	50:125:2631:2631	649213	40	True				
ANR	649270	ExpressionStatement		50:126:2632:2632	649213	41	True				
ANR	649271	ExpressionStatement	"addSyntax ( Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) ) )"	51:4:2638:2729	649213	42	True				
ANR	649272	CallExpression	"addSyntax ( Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) ) )"		649213	0					
ANR	649273	Callee	addSyntax		649213	0					
ANR	649274	Identifier	addSyntax		649213	0					
ANR	649275	ArgumentList	"Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) )"		649213	1					
ANR	649276	Argument	"Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) )"		649213	0					
ANR	649277	CallExpression	"Plasma :: RunnerSyntax ( QStringLiteral ( "":q:"" ) , i18n ( ""Switch to desktop named :q:"" ) )"		649213	0					
ANR	649278	Callee	Plasma :: RunnerSyntax		649213	0					
ANR	649279	Identifier	Plasma :: RunnerSyntax		649213	0					
ANR	649280	ArgumentList	"QStringLiteral ( "":q:"" )"		649213	1					
ANR	649281	Argument	"QStringLiteral ( "":q:"" )"		649213	0					
ANR	649282	CallExpression	"QStringLiteral ( "":q:"" )"		649213	0					
ANR	649283	Callee	QStringLiteral		649213	0					
ANR	649284	Identifier	QStringLiteral		649213	0					
ANR	649285	ArgumentList	""":q:"""		649213	1					
ANR	649286	Argument	""":q:"""		649213	0					
ANR	649287	PrimaryExpression	""":q:"""		649213	0					
ANR	649288	Argument	"i18n ( ""Switch to desktop named :q:"" )"		649213	1					
ANR	649289	CallExpression	"i18n ( ""Switch to desktop named :q:"" )"		649213	0					
ANR	649290	Callee	i18n		649213	0					
ANR	649291	Identifier	i18n		649213	0					
ANR	649292	ArgumentList	"""Switch to desktop named :q:"""		649213	1					
ANR	649293	Argument	"""Switch to desktop named :q:"""		649213	0					
ANR	649294	PrimaryExpression	"""Switch to desktop named :q:"""		649213	0					
ANR	649295	Statement	setDefaultSyntax	52:4:2735:2750	649213	43	True				
ANR	649296	Statement	(	52:20:2751:2751	649213	44	True				
ANR	649297	Statement	Plasma	52:21:2752:2757	649213	45	True				
ANR	649298	Statement	::	52:27:2758:2759	649213	46	True				
ANR	649299	Statement	RunnerSyntax	52:29:2760:2771	649213	47	True				
ANR	649300	Statement	(	52:41:2772:2772	649213	48	True				
ANR	649301	Statement	i18nc	52:42:2773:2777	649213	49	True				
ANR	649302	Statement	(	52:47:2778:2778	649213	50	True				
ANR	649303	Statement	"""Note this is a KRunner keyword"""	52:48:2779:2810	649213	51	True				
ANR	649304	Statement	","	52:80:2811:2811	649213	52	True				
ANR	649305	Statement	"""window"""	52:82:2813:2820	649213	53	True				
ANR	649306	Statement	)	52:90:2821:2821	649213	54	True				
ANR	649307	Statement	","	52:91:2822:2822	649213	55	True				
ANR	649308	Statement	i18n	53:35:2859:2862	649213	56	True				
ANR	649309	Statement	(	53:39:2863:2863	649213	57	True				
ANR	649310	Statement	"""Lists all windows and allows to activate them. """	53:40:2864:2912	649213	58	True				
ANR	649311	Statement	"""With name=, class=, role= and desktop= the list can be reduced to """	54:35:2949:3016	649213	59	True				
ANR	649312	Statement	"""windows matching these restrictions. """	55:35:3053:3091	649213	60	True				
ANR	649313	Statement	"""It is possible to interact with the windows by using one of the following keywords: """	56:35:3128:3213	649213	61	True				
ANR	649314	Statement	"""activate, close, min(imize), max(imize), fullscreen, shade, keep above and keep below."""	57:35:3250:3337	649213	62	True				
ANR	649315	Statement	)	57:123:3338:3338	649213	63	True				
ANR	649316	Statement	)	57:124:3339:3339	649213	64	True				
ANR	649317	Statement	)	57:125:3340:3340	649213	65	True				
ANR	649318	ExpressionStatement		57:126:3341:3341	649213	66	True				
ANR	649319	ExpressionStatement	"addSyntax ( Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) ) )"	58:4:3347:3529	649213	67	True				
ANR	649320	CallExpression	"addSyntax ( Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) ) )"		649213	0					
ANR	649321	Callee	addSyntax		649213	0					
ANR	649322	Identifier	addSyntax		649213	0					
ANR	649323	ArgumentList	"Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) )"		649213	1					
ANR	649324	Argument	"Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) )"		649213	0					
ANR	649325	CallExpression	"Plasma :: RunnerSyntax ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , i18n ( ""Lists all other desktops and allows to switch to them."" ) )"		649213	0					
ANR	649326	Callee	Plasma :: RunnerSyntax		649213	0					
ANR	649327	Identifier	Plasma :: RunnerSyntax		649213	0					
ANR	649328	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649213	1					
ANR	649329	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649213	0					
ANR	649330	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649213	0					
ANR	649331	Callee	i18nc		649213	0					
ANR	649332	Identifier	i18nc		649213	0					
ANR	649333	ArgumentList	"""Note this is a KRunner keyword"""		649213	1					
ANR	649334	Argument	"""Note this is a KRunner keyword"""		649213	0					
ANR	649335	PrimaryExpression	"""Note this is a KRunner keyword"""		649213	0					
ANR	649336	Argument	"""desktop"""		649213	1					
ANR	649337	PrimaryExpression	"""desktop"""		649213	0					
ANR	649338	Argument	"i18n ( ""Lists all other desktops and allows to switch to them."" )"		649213	1					
ANR	649339	CallExpression	"i18n ( ""Lists all other desktops and allows to switch to them."" )"		649213	0					
ANR	649340	Callee	i18n		649213	0					
ANR	649341	Identifier	i18n		649213	0					
ANR	649342	ArgumentList	"""Lists all other desktops and allows to switch to them."""		649213	1					
ANR	649343	Argument	"""Lists all other desktops and allows to switch to them."""		649213	0					
ANR	649344	PrimaryExpression	"""Lists all other desktops and allows to switch to them."""		649213	0					
ANR	649345	ExpressionStatement	"connect ( this , & Plasma :: AbstractRunner :: prepare , this , & WindowsRunner :: prepareForMatchSession )"	61:4:3536:3629	649213	68	True				
ANR	649346	CallExpression	"connect ( this , & Plasma :: AbstractRunner :: prepare , this , & WindowsRunner :: prepareForMatchSession )"		649213	0					
ANR	649347	Callee	connect		649213	0					
ANR	649348	Identifier	connect		649213	0					
ANR	649349	ArgumentList	this		649213	1					
ANR	649350	Argument	this		649213	0					
ANR	649351	Identifier	this		649213	0					
ANR	649352	Argument	& Plasma :: AbstractRunner :: prepare		649213	1					
ANR	649353	UnaryOperationExpression	& Plasma :: AbstractRunner :: prepare		649213	0					
ANR	649354	UnaryOperator	&		649213	0					
ANR	649355	Identifier	Plasma :: AbstractRunner :: prepare		649213	1					
ANR	649356	Argument	this		649213	2					
ANR	649357	Identifier	this		649213	0					
ANR	649358	Argument	& WindowsRunner :: prepareForMatchSession		649213	3					
ANR	649359	UnaryOperationExpression	& WindowsRunner :: prepareForMatchSession		649213	0					
ANR	649360	UnaryOperator	&		649213	0					
ANR	649361	Identifier	WindowsRunner :: prepareForMatchSession		649213	1					
ANR	649362	ExpressionStatement	"connect ( this , & Plasma :: AbstractRunner :: teardown , this , & WindowsRunner :: matchSessionComplete )"	62:4:3635:3727	649213	69	True				
ANR	649363	CallExpression	"connect ( this , & Plasma :: AbstractRunner :: teardown , this , & WindowsRunner :: matchSessionComplete )"		649213	0					
ANR	649364	Callee	connect		649213	0					
ANR	649365	Identifier	connect		649213	0					
ANR	649366	ArgumentList	this		649213	1					
ANR	649367	Argument	this		649213	0					
ANR	649368	Identifier	this		649213	0					
ANR	649369	Argument	& Plasma :: AbstractRunner :: teardown		649213	1					
ANR	649370	UnaryOperationExpression	& Plasma :: AbstractRunner :: teardown		649213	0					
ANR	649371	UnaryOperator	&		649213	0					
ANR	649372	Identifier	Plasma :: AbstractRunner :: teardown		649213	1					
ANR	649373	Argument	this		649213	2					
ANR	649374	Identifier	this		649213	0					
ANR	649375	Argument	& WindowsRunner :: matchSessionComplete		649213	3					
ANR	649376	UnaryOperationExpression	& WindowsRunner :: matchSessionComplete		649213	0					
ANR	649377	UnaryOperator	&		649213	0					
ANR	649378	Identifier	WindowsRunner :: matchSessionComplete		649213	1					
ANR	649379	Identifier	WindowsRunner :: WindowsRunner		649213	1					
ANR	649380	ParameterList	"QObject * parent , const QVariantList & args"		649213	2					
ANR	649381	Parameter	QObject * parent	37:29:1697:1711	649213	0	True				
ANR	649382	ParameterType	QObject *		649213	0					
ANR	649383	Identifier	parent		649213	1					
ANR	649384	Parameter	const QVariantList & args	37:46:1714:1737	649213	1	True				
ANR	649385	ParameterType	const QVariantList &		649213	0					
ANR	649386	Identifier	args		649213	1					
ANR	649387	CFGEntryNode	ENTRY		649213		True				
ANR	649388	CFGExitNode	EXIT		649213		True				
ANR	649389	Symbol	args		649213						
ANR	649390	Symbol	QLatin1String		649213						
ANR	649391	Symbol	parent		649213						
ANR	649392	Symbol	& Plasma :: AbstractRunner :: prepare		649213						
ANR	649393	Symbol	& WindowsRunner :: matchSessionComplete		649213						
ANR	649394	Symbol	this		649213						
ANR	649395	Symbol	QStringLiteral		649213						
ANR	649396	Symbol	i18nc		649213						
ANR	649397	Symbol	Plasma :: RunnerSyntax		649213						
ANR	649398	Symbol	& WindowsRunner :: prepareForMatchSession		649213						
ANR	649399	Symbol	& Plasma :: AbstractRunner :: teardown		649213						
ANR	649400	Symbol	i18n		649213						
ANR	649401	Function	WindowsRunner :: ~WindowsRunner	65:0:3732:3766							
ANR	649402	FunctionDef	WindowsRunner :: ~WindowsRunner ()		649401	0					
ANR	649403	CompoundStatement		66:0:3764:3766	649401	0					
ANR	649404	Identifier	WindowsRunner :: ~WindowsRunner		649401	1					
ANR	649405	ParameterList			649401	2					
ANR	649406	CFGEntryNode	ENTRY		649401		True				
ANR	649407	CFGExitNode	EXIT		649401		True				
ANR	649408	Function	WindowsRunner :: gatherInfo	70:0:3798:5282							
ANR	649409	FunctionDef	WindowsRunner :: gatherInfo ()		649408	0					
ANR	649410	CompoundStatement		71:0:3831:5282	649408	0					
ANR	649411	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	72:4:3837:3866	649408	0	True				
ANR	649412	IdentifierDecl	locker ( & m_mutex )		649408	0					
ANR	649413	IdentifierDeclType	QMutexLocker		649408	0					
ANR	649414	Identifier	locker		649408	1					
ANR	649415	UnaryOperationExpression	& m_mutex		649408	2					
ANR	649416	UnaryOperator	&		649408	0					
ANR	649417	Identifier	m_mutex		649408	1					
ANR	649418	IfStatement	if ( ! m_inSession )		649408	1					
ANR	649419	Condition	! m_inSession	73:8:3876:3887	649408	0	True				
ANR	649420	UnaryOperationExpression	! m_inSession		649408	0					
ANR	649421	UnaryOperator	!		649408	0					
ANR	649422	Identifier	m_inSession		649408	1					
ANR	649423	CompoundStatement		3:22:58:58	649408	1					
ANR	649424	ReturnStatement	return ;	74:8:3900:3906	649408	0	True				
ANR	649425	Statement	foreach	77:4:3919:3925	649408	2	True				
ANR	649426	Statement	(	77:12:3927:3927	649408	3	True				
ANR	649427	Statement	const	77:13:3928:3932	649408	4	True				
ANR	649428	Statement	WId	77:19:3934:3936	649408	5	True				
ANR	649429	Statement	w	77:23:3938:3938	649408	6	True				
ANR	649430	Statement	","	77:24:3939:3939	649408	7	True				
ANR	649431	Statement	KWindowSystem	77:26:3941:3953	649408	8	True				
ANR	649432	Statement	::	77:39:3954:3955	649408	9	True				
ANR	649433	Statement	windows	77:41:3956:3962	649408	10	True				
ANR	649434	Statement	(	77:48:3963:3963	649408	11	True				
ANR	649435	Statement	)	77:49:3964:3964	649408	12	True				
ANR	649436	Statement	)	77:50:3965:3965	649408	13	True				
ANR	649437	CompoundStatement		8:8:145:505	649408	14					
ANR	649438	IdentifierDeclStatement	"KWindowInfo info = KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions ) ;"	78:8:3977:4337	649408	0	True				
ANR	649439	IdentifierDecl	"info = KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions )"		649408	0					
ANR	649440	IdentifierDeclType	KWindowInfo		649408	0					
ANR	649441	Identifier	info		649408	1					
ANR	649442	AssignmentExpression	"info = KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions )"		649408	2		=			
ANR	649443	Identifier	info		649408	0					
ANR	649444	CallExpression	"KWindowSystem :: windowInfo ( w , NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName , NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions )"		649408	1					
ANR	649445	Callee	KWindowSystem :: windowInfo		649408	0					
ANR	649446	Identifier	KWindowSystem :: windowInfo		649408	0					
ANR	649447	ArgumentList	w		649408	1					
ANR	649448	Argument	w		649408	0					
ANR	649449	Identifier	w		649408	0					
ANR	649450	Argument	NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName		649408	1					
ANR	649451	InclusiveOrExpression	NET :: WMWindowType | NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName		649408	0		|			
ANR	649452	Identifier	NET :: WMWindowType		649408	0					
ANR	649453	InclusiveOrExpression	NET :: WMDesktop | NET :: WMState | NET :: XAWMState | NET :: WMName		649408	1		|			
ANR	649454	Identifier	NET :: WMDesktop		649408	0					
ANR	649455	InclusiveOrExpression	NET :: WMState | NET :: XAWMState | NET :: WMName		649408	1		|			
ANR	649456	Identifier	NET :: WMState		649408	0					
ANR	649457	InclusiveOrExpression	NET :: XAWMState | NET :: WMName		649408	1		|			
ANR	649458	Identifier	NET :: XAWMState		649408	0					
ANR	649459	Identifier	NET :: WMName		649408	1					
ANR	649460	Argument	NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions		649408	2					
ANR	649461	InclusiveOrExpression	NET :: WM2WindowClass | NET :: WM2WindowRole | NET :: WM2AllowedActions		649408	0		|			
ANR	649462	Identifier	NET :: WM2WindowClass		649408	0					
ANR	649463	InclusiveOrExpression	NET :: WM2WindowRole | NET :: WM2AllowedActions		649408	1		|			
ANR	649464	Identifier	NET :: WM2WindowRole		649408	0					
ANR	649465	Identifier	NET :: WM2AllowedActions		649408	1					
ANR	649466	IfStatement	if ( info . valid ( ) )		649408	1					
ANR	649467	Condition	info . valid ( )	82:12:4351:4362	649408	0	True				
ANR	649468	CallExpression	info . valid ( )		649408	0					
ANR	649469	Callee	info . valid		649408	0					
ANR	649470	MemberAccess	info . valid		649408	0					
ANR	649471	Identifier	info		649408	0					
ANR	649472	Identifier	valid		649408	1					
ANR	649473	ArgumentList			649408	1					
ANR	649474	CompoundStatement		14:12:610:986	649408	1					
ANR	649475	IdentifierDeclStatement	NET :: WindowType wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask ) ;	84:12:4442:4818	649408	0	True				
ANR	649476	IdentifierDecl	wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		649408	0					
ANR	649477	IdentifierDeclType	NET :: WindowType		649408	0					
ANR	649478	Identifier	wType		649408	1					
ANR	649479	AssignmentExpression	wType = info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		649408	2		=			
ANR	649480	Identifier	wType		649408	0					
ANR	649481	CallExpression	info . windowType ( NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask )		649408	1					
ANR	649482	Callee	info . windowType		649408	0					
ANR	649483	MemberAccess	info . windowType		649408	0					
ANR	649484	Identifier	info		649408	0					
ANR	649485	Identifier	windowType		649408	1					
ANR	649486	ArgumentList	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1					
ANR	649487	Argument	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	0					
ANR	649488	InclusiveOrExpression	NET :: NormalMask | NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	0		|			
ANR	649489	Identifier	NET :: NormalMask		649408	0					
ANR	649490	InclusiveOrExpression	NET :: DesktopMask | NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649491	Identifier	NET :: DesktopMask		649408	0					
ANR	649492	InclusiveOrExpression	NET :: DockMask | NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649493	Identifier	NET :: DockMask		649408	0					
ANR	649494	InclusiveOrExpression	NET :: ToolbarMask | NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649495	Identifier	NET :: ToolbarMask		649408	0					
ANR	649496	InclusiveOrExpression	NET :: MenuMask | NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649497	Identifier	NET :: MenuMask		649408	0					
ANR	649498	InclusiveOrExpression	NET :: DialogMask | NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649499	Identifier	NET :: DialogMask		649408	0					
ANR	649500	InclusiveOrExpression	NET :: OverrideMask | NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649501	Identifier	NET :: OverrideMask		649408	0					
ANR	649502	InclusiveOrExpression	NET :: TopMenuMask | NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649503	Identifier	NET :: TopMenuMask		649408	0					
ANR	649504	InclusiveOrExpression	NET :: UtilityMask | NET :: SplashMask		649408	1		|			
ANR	649505	Identifier	NET :: UtilityMask		649408	0					
ANR	649506	Identifier	NET :: SplashMask		649408	1					
ANR	649507	IfStatement	if ( wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility )		649408	1					
ANR	649508	Condition	wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility	89:16:4837:4972	649408	0	True				
ANR	649509	AndExpression	wType != NET :: Normal && wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		649408	0		&&			
ANR	649510	EqualityExpression	wType != NET :: Normal		649408	0		!=			
ANR	649511	Identifier	wType		649408	0					
ANR	649512	Identifier	NET :: Normal		649408	1					
ANR	649513	AndExpression	wType != NET :: Override && wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		649408	1		&&			
ANR	649514	EqualityExpression	wType != NET :: Override		649408	0		!=			
ANR	649515	Identifier	wType		649408	0					
ANR	649516	Identifier	NET :: Override		649408	1					
ANR	649517	AndExpression	wType != NET :: Unknown && wType != NET :: Dialog && wType != NET :: Utility		649408	1		&&			
ANR	649518	EqualityExpression	wType != NET :: Unknown		649408	0		!=			
ANR	649519	Identifier	wType		649408	0					
ANR	649520	Identifier	NET :: Unknown		649408	1					
ANR	649521	AndExpression	wType != NET :: Dialog && wType != NET :: Utility		649408	1		&&			
ANR	649522	EqualityExpression	wType != NET :: Dialog		649408	0		!=			
ANR	649523	Identifier	wType		649408	0					
ANR	649524	Identifier	NET :: Dialog		649408	1					
ANR	649525	EqualityExpression	wType != NET :: Utility		649408	1		!=			
ANR	649526	Identifier	wType		649408	0					
ANR	649527	Identifier	NET :: Utility		649408	1					
ANR	649528	CompoundStatement		20:63:1143:1143	649408	1					
ANR	649529	ContinueStatement	continue ;	91:16:4993:5001	649408	0	True				
ANR	649530	ExpressionStatement	"m_windows . insert ( w , info )"	93:12:5029:5054	649408	2	True				
ANR	649531	CallExpression	"m_windows . insert ( w , info )"		649408	0					
ANR	649532	Callee	m_windows . insert		649408	0					
ANR	649533	MemberAccess	m_windows . insert		649408	0					
ANR	649534	Identifier	m_windows		649408	0					
ANR	649535	Identifier	insert		649408	1					
ANR	649536	ArgumentList	w		649408	1					
ANR	649537	Argument	w		649408	0					
ANR	649538	Identifier	w		649408	0					
ANR	649539	Argument	info		649408	1					
ANR	649540	Identifier	info		649408	0					
ANR	649541	ExpressionStatement	"m_icons . insert ( w , QIcon ( KWindowSystem :: icon ( w ) ) )"	94:12:5068:5116	649408	3	True				
ANR	649542	CallExpression	"m_icons . insert ( w , QIcon ( KWindowSystem :: icon ( w ) ) )"		649408	0					
ANR	649543	Callee	m_icons . insert		649408	0					
ANR	649544	MemberAccess	m_icons . insert		649408	0					
ANR	649545	Identifier	m_icons		649408	0					
ANR	649546	Identifier	insert		649408	1					
ANR	649547	ArgumentList	w		649408	1					
ANR	649548	Argument	w		649408	0					
ANR	649549	Identifier	w		649408	0					
ANR	649550	Argument	QIcon ( KWindowSystem :: icon ( w ) )		649408	1					
ANR	649551	CallExpression	QIcon ( KWindowSystem :: icon ( w ) )		649408	0					
ANR	649552	Callee	QIcon		649408	0					
ANR	649553	Identifier	QIcon		649408	0					
ANR	649554	ArgumentList	KWindowSystem :: icon ( w )		649408	1					
ANR	649555	Argument	KWindowSystem :: icon ( w )		649408	0					
ANR	649556	CallExpression	KWindowSystem :: icon ( w )		649408	0					
ANR	649557	Callee	KWindowSystem :: icon		649408	0					
ANR	649558	Identifier	KWindowSystem :: icon		649408	0					
ANR	649559	ArgumentList	w		649408	1					
ANR	649560	Argument	w		649408	0					
ANR	649561	Identifier	w		649408	0					
ANR	649562	ForStatement	for ( int i = 1 ; i <= KWindowSystem :: numberOfDesktops ( ) ; i ++ )		649408	15					
ANR	649563	ForInit	int i = 1 ;	98:9:5144:5151	649408	0	True				
ANR	649564	IdentifierDeclStatement	int i = 1 ;		649408	0					
ANR	649565	IdentifierDecl	i = 1		649408	0					
ANR	649566	IdentifierDeclType	int		649408	0					
ANR	649567	Identifier	i		649408	1					
ANR	649568	AssignmentExpression	i = 1		649408	2		=			
ANR	649569	Identifier	i		649408	0					
ANR	649570	PrimaryExpression	1		649408	1					
ANR	649571	Condition	i <= KWindowSystem :: numberOfDesktops ( )	98:18:5153:5188	649408	1	True				
ANR	649572	RelationalExpression	i <= KWindowSystem :: numberOfDesktops ( )		649408	0		<=			
ANR	649573	Identifier	i		649408	0					
ANR	649574	CallExpression	KWindowSystem :: numberOfDesktops ( )		649408	1					
ANR	649575	Callee	KWindowSystem :: numberOfDesktops		649408	0					
ANR	649576	Identifier	KWindowSystem :: numberOfDesktops		649408	0					
ANR	649577	ArgumentList			649408	1					
ANR	649578	PostIncDecOperationExpression	i ++	98:56:5191:5193	649408	2	True				
ANR	649579	Identifier	i		649408	0					
ANR	649580	IncDec	++		649408	1					
ANR	649581	CompoundStatement		28:61:1364:1364	649408	3					
ANR	649582	ExpressionStatement	m_desktopNames << KWindowSystem :: desktopName ( i )	99:8:5206:5253	649408	0	True				
ANR	649583	ShiftExpression	m_desktopNames << KWindowSystem :: desktopName ( i )		649408	0		<<			
ANR	649584	Identifier	m_desktopNames		649408	0					
ANR	649585	CallExpression	KWindowSystem :: desktopName ( i )		649408	1					
ANR	649586	Callee	KWindowSystem :: desktopName		649408	0					
ANR	649587	Identifier	KWindowSystem :: desktopName		649408	0					
ANR	649588	ArgumentList	i		649408	1					
ANR	649589	Argument	i		649408	0					
ANR	649590	Identifier	i		649408	0					
ANR	649591	ExpressionStatement	m_ready = true	102:4:5266:5280	649408	16	True				
ANR	649592	AssignmentExpression	m_ready = true		649408	0		=			
ANR	649593	Identifier	m_ready		649408	0					
ANR	649594	Identifier	true		649408	1					
ANR	649595	ReturnType	void		649408	1					
ANR	649596	Identifier	WindowsRunner :: gatherInfo		649408	2					
ANR	649597	ParameterList			649408	3					
ANR	649598	CFGEntryNode	ENTRY		649408		True				
ANR	649599	CFGExitNode	EXIT		649408		True				
ANR	649600	CFGErrorNode	ERROR		649408		True				
ANR	649601	Symbol	NET :: Unknown		649408						
ANR	649602	Symbol	NET :: ToolbarMask		649408						
ANR	649603	Symbol	NET :: Utility		649408						
ANR	649604	Symbol	NET :: WMState		649408						
ANR	649605	Symbol	info . valid		649408						
ANR	649606	Symbol	NET :: WM2AllowedActions		649408						
ANR	649607	Symbol	KWindowSystem :: numberOfDesktops		649408						
ANR	649608	Symbol	m_ready		649408						
ANR	649609	Symbol	locker		649408						
ANR	649610	Symbol	m_icons		649408						
ANR	649611	Symbol	m_windows		649408						
ANR	649612	Symbol	NET :: WMName		649408						
ANR	649613	Symbol	NET :: NormalMask		649408						
ANR	649614	Symbol	info		649408						
ANR	649615	Symbol	NET :: DialogMask		649408						
ANR	649616	Symbol	NET :: Override		649408						
ANR	649617	Symbol	m_inSession		649408						
ANR	649618	Symbol	NET :: WM2WindowRole		649408						
ANR	649619	Symbol	NET :: WM2WindowClass		649408						
ANR	649620	Symbol	NET :: XAWMState		649408						
ANR	649621	Symbol	NET :: DesktopMask		649408						
ANR	649622	Symbol	wType		649408						
ANR	649623	Symbol	NET :: UtilityMask		649408						
ANR	649624	Symbol	i		649408						
ANR	649625	Symbol	KWindowSystem :: windowInfo		649408						
ANR	649626	Symbol	NET :: DockMask		649408						
ANR	649627	Symbol	NET :: OverrideMask		649408						
ANR	649628	Symbol	QIcon		649408						
ANR	649629	Symbol	NET :: TopMenuMask		649408						
ANR	649630	Symbol	NET :: Dialog		649408						
ANR	649631	Symbol	KWindowSystem :: icon		649408						
ANR	649632	Symbol	NET :: SplashMask		649408						
ANR	649633	Symbol	NET :: WMDesktop		649408						
ANR	649634	Symbol	w		649408						
ANR	649635	Symbol	NET :: WMWindowType		649408						
ANR	649636	Symbol	NET :: MenuMask		649408						
ANR	649637	Symbol	true		649408						
ANR	649638	Symbol	info . windowType		649408						
ANR	649639	Symbol	NET :: Normal		649408						
ANR	649640	Function	WindowsRunner :: prepareForMatchSession	106:0:5314:5502							
ANR	649641	FunctionDef	WindowsRunner :: prepareForMatchSession ()		649640	0					
ANR	649642	CompoundStatement		107:0:5359:5502	649640	0					
ANR	649643	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	108:4:5365:5394	649640	0	True				
ANR	649644	IdentifierDecl	locker ( & m_mutex )		649640	0					
ANR	649645	IdentifierDeclType	QMutexLocker		649640	0					
ANR	649646	Identifier	locker		649640	1					
ANR	649647	UnaryOperationExpression	& m_mutex		649640	2					
ANR	649648	UnaryOperator	&		649640	0					
ANR	649649	Identifier	m_mutex		649640	1					
ANR	649650	ExpressionStatement	m_inSession = true	109:4:5400:5418	649640	1	True				
ANR	649651	AssignmentExpression	m_inSession = true		649640	0		=			
ANR	649652	Identifier	m_inSession		649640	0					
ANR	649653	Identifier	true		649640	1					
ANR	649654	ExpressionStatement	m_ready = false	110:4:5424:5439	649640	2	True				
ANR	649655	AssignmentExpression	m_ready = false		649640	0		=			
ANR	649656	Identifier	m_ready		649640	0					
ANR	649657	Identifier	false		649640	1					
ANR	649658	ExpressionStatement	"QTimer :: singleShot ( 0 , this , & WindowsRunner :: gatherInfo )"	111:4:5445:5500	649640	3	True				
ANR	649659	CallExpression	"QTimer :: singleShot ( 0 , this , & WindowsRunner :: gatherInfo )"		649640	0					
ANR	649660	Callee	QTimer :: singleShot		649640	0					
ANR	649661	Identifier	QTimer :: singleShot		649640	0					
ANR	649662	ArgumentList	0		649640	1					
ANR	649663	Argument	0		649640	0					
ANR	649664	PrimaryExpression	0		649640	0					
ANR	649665	Argument	this		649640	1					
ANR	649666	Identifier	this		649640	0					
ANR	649667	Argument	& WindowsRunner :: gatherInfo		649640	2					
ANR	649668	UnaryOperationExpression	& WindowsRunner :: gatherInfo		649640	0					
ANR	649669	UnaryOperator	&		649640	0					
ANR	649670	Identifier	WindowsRunner :: gatherInfo		649640	1					
ANR	649671	ReturnType	void		649640	1					
ANR	649672	Identifier	WindowsRunner :: prepareForMatchSession		649640	2					
ANR	649673	ParameterList			649640	3					
ANR	649674	CFGEntryNode	ENTRY		649640		True				
ANR	649675	CFGExitNode	EXIT		649640		True				
ANR	649676	Symbol	m_inSession		649640						
ANR	649677	Symbol	true		649640						
ANR	649678	Symbol	false		649640						
ANR	649679	Symbol	m_ready		649640						
ANR	649680	Symbol	this		649640						
ANR	649681	Symbol	& WindowsRunner :: gatherInfo		649640						
ANR	649682	Symbol	locker		649640						
ANR	649683	Function	WindowsRunner :: matchSessionComplete	115:0:5534:5732							
ANR	649684	FunctionDef	WindowsRunner :: matchSessionComplete ()		649683	0					
ANR	649685	CompoundStatement		116:0:5577:5732	649683	0					
ANR	649686	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	117:4:5583:5612	649683	0	True				
ANR	649687	IdentifierDecl	locker ( & m_mutex )		649683	0					
ANR	649688	IdentifierDeclType	QMutexLocker		649683	0					
ANR	649689	Identifier	locker		649683	1					
ANR	649690	UnaryOperationExpression	& m_mutex		649683	2					
ANR	649691	UnaryOperator	&		649683	0					
ANR	649692	Identifier	m_mutex		649683	1					
ANR	649693	ExpressionStatement	m_inSession = false	118:4:5618:5637	649683	1	True				
ANR	649694	AssignmentExpression	m_inSession = false		649683	0		=			
ANR	649695	Identifier	m_inSession		649683	0					
ANR	649696	Identifier	false		649683	1					
ANR	649697	ExpressionStatement	m_ready = false	119:4:5643:5658	649683	2	True				
ANR	649698	AssignmentExpression	m_ready = false		649683	0		=			
ANR	649699	Identifier	m_ready		649683	0					
ANR	649700	Identifier	false		649683	1					
ANR	649701	ExpressionStatement	m_desktopNames . clear ( )	120:4:5664:5686	649683	3	True				
ANR	649702	CallExpression	m_desktopNames . clear ( )		649683	0					
ANR	649703	Callee	m_desktopNames . clear		649683	0					
ANR	649704	MemberAccess	m_desktopNames . clear		649683	0					
ANR	649705	Identifier	m_desktopNames		649683	0					
ANR	649706	Identifier	clear		649683	1					
ANR	649707	ArgumentList			649683	1					
ANR	649708	ExpressionStatement	m_icons . clear ( )	121:4:5692:5707	649683	4	True				
ANR	649709	CallExpression	m_icons . clear ( )		649683	0					
ANR	649710	Callee	m_icons . clear		649683	0					
ANR	649711	MemberAccess	m_icons . clear		649683	0					
ANR	649712	Identifier	m_icons		649683	0					
ANR	649713	Identifier	clear		649683	1					
ANR	649714	ArgumentList			649683	1					
ANR	649715	ExpressionStatement	m_windows . clear ( )	122:4:5713:5730	649683	5	True				
ANR	649716	CallExpression	m_windows . clear ( )		649683	0					
ANR	649717	Callee	m_windows . clear		649683	0					
ANR	649718	MemberAccess	m_windows . clear		649683	0					
ANR	649719	Identifier	m_windows		649683	0					
ANR	649720	Identifier	clear		649683	1					
ANR	649721	ArgumentList			649683	1					
ANR	649722	ReturnType	void		649683	1					
ANR	649723	Identifier	WindowsRunner :: matchSessionComplete		649683	2					
ANR	649724	ParameterList			649683	3					
ANR	649725	CFGEntryNode	ENTRY		649683		True				
ANR	649726	CFGExitNode	EXIT		649683		True				
ANR	649727	Symbol	m_icons		649683						
ANR	649728	Symbol	m_inSession		649683						
ANR	649729	Symbol	m_windows		649683						
ANR	649730	Symbol	m_desktopNames		649683						
ANR	649731	Symbol	false		649683						
ANR	649732	Symbol	m_ready		649683						
ANR	649733	Symbol	locker		649683						
ANR	649734	Function	WindowsRunner :: match	126:0:5769:15438							
ANR	649735	FunctionDef	WindowsRunner :: match (Plasma :: RunnerContext & context)		649734	0					
ANR	649736	CompoundStatement		127:0:5827:15438	649734	0					
ANR	649737	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	128:4:5833:5862	649734	0	True				
ANR	649738	IdentifierDecl	locker ( & m_mutex )		649734	0					
ANR	649739	IdentifierDeclType	QMutexLocker		649734	0					
ANR	649740	Identifier	locker		649734	1					
ANR	649741	UnaryOperationExpression	& m_mutex		649734	2					
ANR	649742	UnaryOperator	&		649734	0					
ANR	649743	Identifier	m_mutex		649734	1					
ANR	649744	IfStatement	if ( ! m_ready )		649734	1					
ANR	649745	Condition	! m_ready	129:8:5872:5879	649734	0	True				
ANR	649746	UnaryOperationExpression	! m_ready		649734	0					
ANR	649747	UnaryOperator	!		649734	0					
ANR	649748	Identifier	m_ready		649734	1					
ANR	649749	CompoundStatement		3:18:54:54	649734	1					
ANR	649750	ReturnStatement	return ;	130:8:5892:5898	649734	0	True				
ANR	649751	IdentifierDeclStatement	QString term = context . query ( ) ;	133:4:5911:5941	649734	2	True				
ANR	649752	IdentifierDecl	term = context . query ( )		649734	0					
ANR	649753	IdentifierDeclType	QString		649734	0					
ANR	649754	Identifier	term		649734	1					
ANR	649755	AssignmentExpression	term = context . query ( )		649734	2		=			
ANR	649756	Identifier	term		649734	0					
ANR	649757	CallExpression	context . query ( )		649734	1					
ANR	649758	Callee	context . query		649734	0					
ANR	649759	MemberAccess	context . query		649734	0					
ANR	649760	Identifier	context		649734	0					
ANR	649761	Identifier	query		649734	1					
ANR	649762	ArgumentList			649734	1					
ANR	649763	IfStatement	if ( ! context . singleRunnerQueryMode ( ) && ( term . length ( ) < 3 ) )		649734	3					
ANR	649764	Condition	! context . singleRunnerQueryMode ( ) && ( term . length ( ) < 3 )	135:8:5952:6006	649734	0	True				
ANR	649765	AndExpression	! context . singleRunnerQueryMode ( ) && ( term . length ( ) < 3 )		649734	0		&&			
ANR	649766	UnaryOperationExpression	! context . singleRunnerQueryMode ( )		649734	0					
ANR	649767	UnaryOperator	!		649734	0					
ANR	649768	CallExpression	context . singleRunnerQueryMode ( )		649734	1					
ANR	649769	Callee	context . singleRunnerQueryMode		649734	0					
ANR	649770	MemberAccess	context . singleRunnerQueryMode		649734	0					
ANR	649771	Identifier	context		649734	0					
ANR	649772	Identifier	singleRunnerQueryMode		649734	1					
ANR	649773	ArgumentList			649734	1					
ANR	649774	RelationalExpression	term . length ( ) < 3		649734	1		<			
ANR	649775	CallExpression	term . length ( )		649734	0					
ANR	649776	Callee	term . length		649734	0					
ANR	649777	MemberAccess	term . length		649734	0					
ANR	649778	Identifier	term		649734	0					
ANR	649779	Identifier	length		649734	1					
ANR	649780	ArgumentList			649734	1					
ANR	649781	PrimaryExpression	3		649734	1					
ANR	649782	CompoundStatement		9:65:181:181	649734	1					
ANR	649783	ReturnStatement	return ;	136:8:6019:6025	649734	0	True				
ANR	649784	IdentifierDeclStatement	QList < Plasma :: QueryMatch > matches ;	138:4:6037:6070	649734	4	True				
ANR	649785	IdentifierDecl	matches		649734	0					
ANR	649786	IdentifierDeclType	QList < Plasma :: QueryMatch >		649734	0					
ANR	649787	Identifier	matches		649734	1					
ANR	649788	IdentifierDeclStatement	WindowAction action = ActivateAction ;	141:4:6137:6173	649734	5	True				
ANR	649789	IdentifierDecl	action = ActivateAction		649734	0					
ANR	649790	IdentifierDeclType	WindowAction		649734	0					
ANR	649791	Identifier	action		649734	1					
ANR	649792	AssignmentExpression	action = ActivateAction		649734	2		=			
ANR	649793	Identifier	ActivateAction		649734	0					
ANR	649794	Identifier	ActivateAction		649734	1					
ANR	649795	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) , Qt :: CaseInsensitive ) )"		649734	6					
ANR	649796	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) , Qt :: CaseInsensitive )"	142:8:6183:6270	649734	0	True				
ANR	649797	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	649798	Callee	term . endsWith		649734	0					
ANR	649799	MemberAccess	term . endsWith		649734	0					
ANR	649800	Identifier	term		649734	0					
ANR	649801	Identifier	endsWith		649734	1					
ANR	649802	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		649734	1					
ANR	649803	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		649734	0					
ANR	649804	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		649734	0					
ANR	649805	Callee	i18nc		649734	0					
ANR	649806	Identifier	i18nc		649734	0					
ANR	649807	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649808	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649809	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649810	Argument	"""activate"""		649734	1					
ANR	649811	PrimaryExpression	"""activate"""		649734	0					
ANR	649812	Argument	Qt :: CaseInsensitive		649734	1					
ANR	649813	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	649814	CompoundStatement		16:98:445:445	649734	1					
ANR	649815	ExpressionStatement	action = ActivateAction	143:8:6283:6306	649734	0	True				
ANR	649816	AssignmentExpression	action = ActivateAction		649734	0		=			
ANR	649817	Identifier	action		649734	0					
ANR	649818	Identifier	ActivateAction		649734	1					
ANR	649819	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1 )"	144:8:6316:6407	649734	1	True				
ANR	649820	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1 )"		649734	0		=			
ANR	649821	Identifier	term		649734	0					
ANR	649822	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1 )"		649734	1					
ANR	649823	Callee	term . left		649734	0					
ANR	649824	MemberAccess	term . left		649734	0					
ANR	649825	Identifier	term		649734	0					
ANR	649826	Identifier	left		649734	1					
ANR	649827	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1"		649734	1					
ANR	649828	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1"		649734	0					
ANR	649829	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) ) - 1"		649734	0		-			
ANR	649830	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""activate"" ) )"		649734	0					
ANR	649831	Callee	term . lastIndexOf		649734	0					
ANR	649832	MemberAccess	term . lastIndexOf		649734	0					
ANR	649833	Identifier	term		649734	0					
ANR	649834	Identifier	lastIndexOf		649734	1					
ANR	649835	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		649734	1					
ANR	649836	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		649734	0					
ANR	649837	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""activate"" )"		649734	0					
ANR	649838	Callee	i18nc		649734	0					
ANR	649839	Identifier	i18nc		649734	0					
ANR	649840	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649841	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649842	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649843	Argument	"""activate"""		649734	1					
ANR	649844	PrimaryExpression	"""activate"""		649734	0					
ANR	649845	PrimaryExpression	1		649734	1					
ANR	649846	ElseStatement	else		649734	0					
ANR	649847	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	649848	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) , Qt :: CaseInsensitive )"	145:15:6424:6508	649734	0	True				
ANR	649849	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	649850	Callee	term . endsWith		649734	0					
ANR	649851	MemberAccess	term . endsWith		649734	0					
ANR	649852	Identifier	term		649734	0					
ANR	649853	Identifier	endsWith		649734	1					
ANR	649854	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		649734	1					
ANR	649855	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		649734	0					
ANR	649856	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		649734	0					
ANR	649857	Callee	i18nc		649734	0					
ANR	649858	Identifier	i18nc		649734	0					
ANR	649859	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649860	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649861	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649862	Argument	"""close"""		649734	1					
ANR	649863	PrimaryExpression	"""close"""		649734	0					
ANR	649864	Argument	Qt :: CaseInsensitive		649734	1					
ANR	649865	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	649866	CompoundStatement		19:102:683:683	649734	1					
ANR	649867	ExpressionStatement	action = CloseAction	146:8:6521:6541	649734	0	True				
ANR	649868	AssignmentExpression	action = CloseAction		649734	0		=			
ANR	649869	Identifier	action		649734	0					
ANR	649870	Identifier	CloseAction		649734	1					
ANR	649871	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1 )"	147:8:6551:6639	649734	1	True				
ANR	649872	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1 )"		649734	0		=			
ANR	649873	Identifier	term		649734	0					
ANR	649874	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1 )"		649734	1					
ANR	649875	Callee	term . left		649734	0					
ANR	649876	MemberAccess	term . left		649734	0					
ANR	649877	Identifier	term		649734	0					
ANR	649878	Identifier	left		649734	1					
ANR	649879	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1"		649734	1					
ANR	649880	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1"		649734	0					
ANR	649881	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) ) - 1"		649734	0		-			
ANR	649882	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""close"" ) )"		649734	0					
ANR	649883	Callee	term . lastIndexOf		649734	0					
ANR	649884	MemberAccess	term . lastIndexOf		649734	0					
ANR	649885	Identifier	term		649734	0					
ANR	649886	Identifier	lastIndexOf		649734	1					
ANR	649887	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		649734	1					
ANR	649888	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		649734	0					
ANR	649889	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""close"" )"		649734	0					
ANR	649890	Callee	i18nc		649734	0					
ANR	649891	Identifier	i18nc		649734	0					
ANR	649892	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649893	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649894	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649895	Argument	"""close"""		649734	1					
ANR	649896	PrimaryExpression	"""close"""		649734	0					
ANR	649897	PrimaryExpression	1		649734	1					
ANR	649898	ElseStatement	else		649734	0					
ANR	649899	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	649900	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) , Qt :: CaseInsensitive )"	148:15:6656:6738	649734	0	True				
ANR	649901	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	649902	Callee	term . endsWith		649734	0					
ANR	649903	MemberAccess	term . endsWith		649734	0					
ANR	649904	Identifier	term		649734	0					
ANR	649905	Identifier	endsWith		649734	1					
ANR	649906	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		649734	1					
ANR	649907	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		649734	0					
ANR	649908	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		649734	0					
ANR	649909	Callee	i18nc		649734	0					
ANR	649910	Identifier	i18nc		649734	0					
ANR	649911	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649912	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649913	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649914	Argument	"""min"""		649734	1					
ANR	649915	PrimaryExpression	"""min"""		649734	0					
ANR	649916	Argument	Qt :: CaseInsensitive		649734	1					
ANR	649917	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	649918	CompoundStatement		22:100:913:913	649734	1					
ANR	649919	ExpressionStatement	action = MinimizeAction	149:8:6751:6774	649734	0	True				
ANR	649920	AssignmentExpression	action = MinimizeAction		649734	0		=			
ANR	649921	Identifier	action		649734	0					
ANR	649922	Identifier	MinimizeAction		649734	1					
ANR	649923	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1 )"	150:8:6784:6870	649734	1	True				
ANR	649924	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1 )"		649734	0		=			
ANR	649925	Identifier	term		649734	0					
ANR	649926	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1 )"		649734	1					
ANR	649927	Callee	term . left		649734	0					
ANR	649928	MemberAccess	term . left		649734	0					
ANR	649929	Identifier	term		649734	0					
ANR	649930	Identifier	left		649734	1					
ANR	649931	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1"		649734	1					
ANR	649932	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1"		649734	0					
ANR	649933	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) ) - 1"		649734	0		-			
ANR	649934	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""min"" ) )"		649734	0					
ANR	649935	Callee	term . lastIndexOf		649734	0					
ANR	649936	MemberAccess	term . lastIndexOf		649734	0					
ANR	649937	Identifier	term		649734	0					
ANR	649938	Identifier	lastIndexOf		649734	1					
ANR	649939	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		649734	1					
ANR	649940	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		649734	0					
ANR	649941	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""min"" )"		649734	0					
ANR	649942	Callee	i18nc		649734	0					
ANR	649943	Identifier	i18nc		649734	0					
ANR	649944	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649945	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649946	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649947	Argument	"""min"""		649734	1					
ANR	649948	PrimaryExpression	"""min"""		649734	0					
ANR	649949	PrimaryExpression	1		649734	1					
ANR	649950	ElseStatement	else		649734	0					
ANR	649951	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	649952	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) , Qt :: CaseInsensitive )"	151:15:6887:6974	649734	0	True				
ANR	649953	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	649954	Callee	term . endsWith		649734	0					
ANR	649955	MemberAccess	term . endsWith		649734	0					
ANR	649956	Identifier	term		649734	0					
ANR	649957	Identifier	endsWith		649734	1					
ANR	649958	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		649734	1					
ANR	649959	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		649734	0					
ANR	649960	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		649734	0					
ANR	649961	Callee	i18nc		649734	0					
ANR	649962	Identifier	i18nc		649734	0					
ANR	649963	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649964	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649965	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649966	Argument	"""minimize"""		649734	1					
ANR	649967	PrimaryExpression	"""minimize"""		649734	0					
ANR	649968	Argument	Qt :: CaseInsensitive		649734	1					
ANR	649969	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	649970	CompoundStatement		25:105:1149:1149	649734	1					
ANR	649971	ExpressionStatement	action = MinimizeAction	152:8:6987:7010	649734	0	True				
ANR	649972	AssignmentExpression	action = MinimizeAction		649734	0		=			
ANR	649973	Identifier	action		649734	0					
ANR	649974	Identifier	MinimizeAction		649734	1					
ANR	649975	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1 )"	153:8:7020:7111	649734	1	True				
ANR	649976	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1 )"		649734	0		=			
ANR	649977	Identifier	term		649734	0					
ANR	649978	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1 )"		649734	1					
ANR	649979	Callee	term . left		649734	0					
ANR	649980	MemberAccess	term . left		649734	0					
ANR	649981	Identifier	term		649734	0					
ANR	649982	Identifier	left		649734	1					
ANR	649983	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1"		649734	1					
ANR	649984	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1"		649734	0					
ANR	649985	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) ) - 1"		649734	0		-			
ANR	649986	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" ) )"		649734	0					
ANR	649987	Callee	term . lastIndexOf		649734	0					
ANR	649988	MemberAccess	term . lastIndexOf		649734	0					
ANR	649989	Identifier	term		649734	0					
ANR	649990	Identifier	lastIndexOf		649734	1					
ANR	649991	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		649734	1					
ANR	649992	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		649734	0					
ANR	649993	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""minimize"" )"		649734	0					
ANR	649994	Callee	i18nc		649734	0					
ANR	649995	Identifier	i18nc		649734	0					
ANR	649996	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	649997	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	649998	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	649999	Argument	"""minimize"""		649734	1					
ANR	650000	PrimaryExpression	"""minimize"""		649734	0					
ANR	650001	PrimaryExpression	1		649734	1					
ANR	650002	ElseStatement	else		649734	0					
ANR	650003	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650004	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) , Qt :: CaseInsensitive )"	154:15:7128:7210	649734	0	True				
ANR	650005	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650006	Callee	term . endsWith		649734	0					
ANR	650007	MemberAccess	term . endsWith		649734	0					
ANR	650008	Identifier	term		649734	0					
ANR	650009	Identifier	endsWith		649734	1					
ANR	650010	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		649734	1					
ANR	650011	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		649734	0					
ANR	650012	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		649734	0					
ANR	650013	Callee	i18nc		649734	0					
ANR	650014	Identifier	i18nc		649734	0					
ANR	650015	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650016	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650017	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650018	Argument	"""max"""		649734	1					
ANR	650019	PrimaryExpression	"""max"""		649734	0					
ANR	650020	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650021	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650022	CompoundStatement		28:100:1385:1385	649734	1					
ANR	650023	ExpressionStatement	action = MaximizeAction	155:8:7223:7246	649734	0	True				
ANR	650024	AssignmentExpression	action = MaximizeAction		649734	0		=			
ANR	650025	Identifier	action		649734	0					
ANR	650026	Identifier	MaximizeAction		649734	1					
ANR	650027	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1 )"	156:8:7256:7342	649734	1	True				
ANR	650028	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1 )"		649734	0		=			
ANR	650029	Identifier	term		649734	0					
ANR	650030	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1 )"		649734	1					
ANR	650031	Callee	term . left		649734	0					
ANR	650032	MemberAccess	term . left		649734	0					
ANR	650033	Identifier	term		649734	0					
ANR	650034	Identifier	left		649734	1					
ANR	650035	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1"		649734	1					
ANR	650036	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1"		649734	0					
ANR	650037	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) ) - 1"		649734	0		-			
ANR	650038	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""max"" ) )"		649734	0					
ANR	650039	Callee	term . lastIndexOf		649734	0					
ANR	650040	MemberAccess	term . lastIndexOf		649734	0					
ANR	650041	Identifier	term		649734	0					
ANR	650042	Identifier	lastIndexOf		649734	1					
ANR	650043	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		649734	1					
ANR	650044	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		649734	0					
ANR	650045	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""max"" )"		649734	0					
ANR	650046	Callee	i18nc		649734	0					
ANR	650047	Identifier	i18nc		649734	0					
ANR	650048	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650049	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650050	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650051	Argument	"""max"""		649734	1					
ANR	650052	PrimaryExpression	"""max"""		649734	0					
ANR	650053	PrimaryExpression	1		649734	1					
ANR	650054	ElseStatement	else		649734	0					
ANR	650055	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650056	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) , Qt :: CaseInsensitive )"	157:15:7359:7446	649734	0	True				
ANR	650057	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650058	Callee	term . endsWith		649734	0					
ANR	650059	MemberAccess	term . endsWith		649734	0					
ANR	650060	Identifier	term		649734	0					
ANR	650061	Identifier	endsWith		649734	1					
ANR	650062	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		649734	1					
ANR	650063	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		649734	0					
ANR	650064	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		649734	0					
ANR	650065	Callee	i18nc		649734	0					
ANR	650066	Identifier	i18nc		649734	0					
ANR	650067	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650068	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650069	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650070	Argument	"""maximize"""		649734	1					
ANR	650071	PrimaryExpression	"""maximize"""		649734	0					
ANR	650072	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650073	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650074	CompoundStatement		31:105:1621:1621	649734	1					
ANR	650075	ExpressionStatement	action = MaximizeAction	158:8:7459:7482	649734	0	True				
ANR	650076	AssignmentExpression	action = MaximizeAction		649734	0		=			
ANR	650077	Identifier	action		649734	0					
ANR	650078	Identifier	MaximizeAction		649734	1					
ANR	650079	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1 )"	159:8:7492:7583	649734	1	True				
ANR	650080	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1 )"		649734	0		=			
ANR	650081	Identifier	term		649734	0					
ANR	650082	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1 )"		649734	1					
ANR	650083	Callee	term . left		649734	0					
ANR	650084	MemberAccess	term . left		649734	0					
ANR	650085	Identifier	term		649734	0					
ANR	650086	Identifier	left		649734	1					
ANR	650087	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1"		649734	1					
ANR	650088	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1"		649734	0					
ANR	650089	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) ) - 1"		649734	0		-			
ANR	650090	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" ) )"		649734	0					
ANR	650091	Callee	term . lastIndexOf		649734	0					
ANR	650092	MemberAccess	term . lastIndexOf		649734	0					
ANR	650093	Identifier	term		649734	0					
ANR	650094	Identifier	lastIndexOf		649734	1					
ANR	650095	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		649734	1					
ANR	650096	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		649734	0					
ANR	650097	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""maximize"" )"		649734	0					
ANR	650098	Callee	i18nc		649734	0					
ANR	650099	Identifier	i18nc		649734	0					
ANR	650100	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650101	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650102	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650103	Argument	"""maximize"""		649734	1					
ANR	650104	PrimaryExpression	"""maximize"""		649734	0					
ANR	650105	PrimaryExpression	1		649734	1					
ANR	650106	ElseStatement	else		649734	0					
ANR	650107	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650108	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) , Qt :: CaseInsensitive )"	160:15:7600:7689	649734	0	True				
ANR	650109	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650110	Callee	term . endsWith		649734	0					
ANR	650111	MemberAccess	term . endsWith		649734	0					
ANR	650112	Identifier	term		649734	0					
ANR	650113	Identifier	endsWith		649734	1					
ANR	650114	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		649734	1					
ANR	650115	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		649734	0					
ANR	650116	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		649734	0					
ANR	650117	Callee	i18nc		649734	0					
ANR	650118	Identifier	i18nc		649734	0					
ANR	650119	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650120	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650121	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650122	Argument	"""fullscreen"""		649734	1					
ANR	650123	PrimaryExpression	"""fullscreen"""		649734	0					
ANR	650124	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650125	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650126	CompoundStatement		34:107:1864:1864	649734	1					
ANR	650127	ExpressionStatement	action = FullscreenAction	161:8:7702:7727	649734	0	True				
ANR	650128	AssignmentExpression	action = FullscreenAction		649734	0		=			
ANR	650129	Identifier	action		649734	0					
ANR	650130	Identifier	FullscreenAction		649734	1					
ANR	650131	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1 )"	162:8:7737:7830	649734	1	True				
ANR	650132	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1 )"		649734	0		=			
ANR	650133	Identifier	term		649734	0					
ANR	650134	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1 )"		649734	1					
ANR	650135	Callee	term . left		649734	0					
ANR	650136	MemberAccess	term . left		649734	0					
ANR	650137	Identifier	term		649734	0					
ANR	650138	Identifier	left		649734	1					
ANR	650139	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1"		649734	1					
ANR	650140	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1"		649734	0					
ANR	650141	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) ) - 1"		649734	0		-			
ANR	650142	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" ) )"		649734	0					
ANR	650143	Callee	term . lastIndexOf		649734	0					
ANR	650144	MemberAccess	term . lastIndexOf		649734	0					
ANR	650145	Identifier	term		649734	0					
ANR	650146	Identifier	lastIndexOf		649734	1					
ANR	650147	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		649734	1					
ANR	650148	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		649734	0					
ANR	650149	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""fullscreen"" )"		649734	0					
ANR	650150	Callee	i18nc		649734	0					
ANR	650151	Identifier	i18nc		649734	0					
ANR	650152	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650153	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650154	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650155	Argument	"""fullscreen"""		649734	1					
ANR	650156	PrimaryExpression	"""fullscreen"""		649734	0					
ANR	650157	PrimaryExpression	1		649734	1					
ANR	650158	ElseStatement	else		649734	0					
ANR	650159	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650160	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) , Qt :: CaseInsensitive )"	163:15:7847:7931	649734	0	True				
ANR	650161	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650162	Callee	term . endsWith		649734	0					
ANR	650163	MemberAccess	term . endsWith		649734	0					
ANR	650164	Identifier	term		649734	0					
ANR	650165	Identifier	endsWith		649734	1					
ANR	650166	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		649734	1					
ANR	650167	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		649734	0					
ANR	650168	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		649734	0					
ANR	650169	Callee	i18nc		649734	0					
ANR	650170	Identifier	i18nc		649734	0					
ANR	650171	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650172	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650173	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650174	Argument	"""shade"""		649734	1					
ANR	650175	PrimaryExpression	"""shade"""		649734	0					
ANR	650176	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650177	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650178	CompoundStatement		37:102:2106:2106	649734	1					
ANR	650179	ExpressionStatement	action = ShadeAction	164:8:7944:7964	649734	0	True				
ANR	650180	AssignmentExpression	action = ShadeAction		649734	0		=			
ANR	650181	Identifier	action		649734	0					
ANR	650182	Identifier	ShadeAction		649734	1					
ANR	650183	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1 )"	165:8:7974:8062	649734	1	True				
ANR	650184	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1 )"		649734	0		=			
ANR	650185	Identifier	term		649734	0					
ANR	650186	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1 )"		649734	1					
ANR	650187	Callee	term . left		649734	0					
ANR	650188	MemberAccess	term . left		649734	0					
ANR	650189	Identifier	term		649734	0					
ANR	650190	Identifier	left		649734	1					
ANR	650191	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1"		649734	1					
ANR	650192	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1"		649734	0					
ANR	650193	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) ) - 1"		649734	0		-			
ANR	650194	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""shade"" ) )"		649734	0					
ANR	650195	Callee	term . lastIndexOf		649734	0					
ANR	650196	MemberAccess	term . lastIndexOf		649734	0					
ANR	650197	Identifier	term		649734	0					
ANR	650198	Identifier	lastIndexOf		649734	1					
ANR	650199	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		649734	1					
ANR	650200	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		649734	0					
ANR	650201	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""shade"" )"		649734	0					
ANR	650202	Callee	i18nc		649734	0					
ANR	650203	Identifier	i18nc		649734	0					
ANR	650204	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650205	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650206	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650207	Argument	"""shade"""		649734	1					
ANR	650208	PrimaryExpression	"""shade"""		649734	0					
ANR	650209	PrimaryExpression	1		649734	1					
ANR	650210	ElseStatement	else		649734	0					
ANR	650211	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650212	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) , Qt :: CaseInsensitive )"	166:15:8079:8168	649734	0	True				
ANR	650213	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650214	Callee	term . endsWith		649734	0					
ANR	650215	MemberAccess	term . endsWith		649734	0					
ANR	650216	Identifier	term		649734	0					
ANR	650217	Identifier	endsWith		649734	1					
ANR	650218	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		649734	1					
ANR	650219	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		649734	0					
ANR	650220	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		649734	0					
ANR	650221	Callee	i18nc		649734	0					
ANR	650222	Identifier	i18nc		649734	0					
ANR	650223	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650224	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650225	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650226	Argument	"""keep above"""		649734	1					
ANR	650227	PrimaryExpression	"""keep above"""		649734	0					
ANR	650228	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650229	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650230	CompoundStatement		40:107:2343:2343	649734	1					
ANR	650231	ExpressionStatement	action = KeepAboveAction	167:8:8181:8205	649734	0	True				
ANR	650232	AssignmentExpression	action = KeepAboveAction		649734	0		=			
ANR	650233	Identifier	action		649734	0					
ANR	650234	Identifier	KeepAboveAction		649734	1					
ANR	650235	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1 )"	168:8:8215:8308	649734	1	True				
ANR	650236	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1 )"		649734	0		=			
ANR	650237	Identifier	term		649734	0					
ANR	650238	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1 )"		649734	1					
ANR	650239	Callee	term . left		649734	0					
ANR	650240	MemberAccess	term . left		649734	0					
ANR	650241	Identifier	term		649734	0					
ANR	650242	Identifier	left		649734	1					
ANR	650243	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1"		649734	1					
ANR	650244	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1"		649734	0					
ANR	650245	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) ) - 1"		649734	0		-			
ANR	650246	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" ) )"		649734	0					
ANR	650247	Callee	term . lastIndexOf		649734	0					
ANR	650248	MemberAccess	term . lastIndexOf		649734	0					
ANR	650249	Identifier	term		649734	0					
ANR	650250	Identifier	lastIndexOf		649734	1					
ANR	650251	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		649734	1					
ANR	650252	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		649734	0					
ANR	650253	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep above"" )"		649734	0					
ANR	650254	Callee	i18nc		649734	0					
ANR	650255	Identifier	i18nc		649734	0					
ANR	650256	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650257	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650258	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650259	Argument	"""keep above"""		649734	1					
ANR	650260	PrimaryExpression	"""keep above"""		649734	0					
ANR	650261	PrimaryExpression	1		649734	1					
ANR	650262	ElseStatement	else		649734	0					
ANR	650263	IfStatement	"if ( term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650264	Condition	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) , Qt :: CaseInsensitive )"	169:15:8325:8414	649734	0	True				
ANR	650265	CallExpression	"term . endsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650266	Callee	term . endsWith		649734	0					
ANR	650267	MemberAccess	term . endsWith		649734	0					
ANR	650268	Identifier	term		649734	0					
ANR	650269	Identifier	endsWith		649734	1					
ANR	650270	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		649734	1					
ANR	650271	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		649734	0					
ANR	650272	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		649734	0					
ANR	650273	Callee	i18nc		649734	0					
ANR	650274	Identifier	i18nc		649734	0					
ANR	650275	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650276	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650277	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650278	Argument	"""keep below"""		649734	1					
ANR	650279	PrimaryExpression	"""keep below"""		649734	0					
ANR	650280	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650281	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650282	CompoundStatement		43:107:2589:2589	649734	1					
ANR	650283	ExpressionStatement	action = KeepBelowAction	170:8:8427:8451	649734	0	True				
ANR	650284	AssignmentExpression	action = KeepBelowAction		649734	0		=			
ANR	650285	Identifier	action		649734	0					
ANR	650286	Identifier	KeepBelowAction		649734	1					
ANR	650287	ExpressionStatement	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1 )"	171:8:8461:8554	649734	1	True				
ANR	650288	AssignmentExpression	"term = term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1 )"		649734	0		=			
ANR	650289	Identifier	term		649734	0					
ANR	650290	CallExpression	"term . left ( term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1 )"		649734	1					
ANR	650291	Callee	term . left		649734	0					
ANR	650292	MemberAccess	term . left		649734	0					
ANR	650293	Identifier	term		649734	0					
ANR	650294	Identifier	left		649734	1					
ANR	650295	ArgumentList	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1"		649734	1					
ANR	650296	Argument	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1"		649734	0					
ANR	650297	AdditiveExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) ) - 1"		649734	0		-			
ANR	650298	CallExpression	"term . lastIndexOf ( i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" ) )"		649734	0					
ANR	650299	Callee	term . lastIndexOf		649734	0					
ANR	650300	MemberAccess	term . lastIndexOf		649734	0					
ANR	650301	Identifier	term		649734	0					
ANR	650302	Identifier	lastIndexOf		649734	1					
ANR	650303	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		649734	1					
ANR	650304	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		649734	0					
ANR	650305	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""keep below"" )"		649734	0					
ANR	650306	Callee	i18nc		649734	0					
ANR	650307	Identifier	i18nc		649734	0					
ANR	650308	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650309	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650310	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650311	Argument	"""keep below"""		649734	1					
ANR	650312	PrimaryExpression	"""keep below"""		649734	0					
ANR	650313	PrimaryExpression	1		649734	1					
ANR	650314	IfStatement	"if ( term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""window"" ) , Qt :: CaseInsensitive ) )"		649734	7					
ANR	650315	Condition	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""window"" ) , Qt :: CaseInsensitive )"	176:8:8735:8822	649734	0	True				
ANR	650316	CallExpression	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""window"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	650317	Callee	term . startsWith		649734	0					
ANR	650318	MemberAccess	term . startsWith		649734	0					
ANR	650319	Identifier	term		649734	0					
ANR	650320	Identifier	startsWith		649734	1					
ANR	650321	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""window"" )"		649734	1					
ANR	650322	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""window"" )"		649734	0					
ANR	650323	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""window"" )"		649734	0					
ANR	650324	Callee	i18nc		649734	0					
ANR	650325	Identifier	i18nc		649734	0					
ANR	650326	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650327	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650328	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650329	Argument	"""window"""		649734	1					
ANR	650330	PrimaryExpression	"""window"""		649734	0					
ANR	650331	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650332	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650333	CompoundStatement		80:8:4612:4657	649734	1					
ANR	650334	IdentifierDeclStatement	"const QStringList keywords = term . split ( QStringLiteral ( "" "" ) ) ;"	177:8:8835:8895	649734	0	True				
ANR	650335	IdentifierDecl	"keywords = term . split ( QStringLiteral ( "" "" ) )"		649734	0					
ANR	650336	IdentifierDeclType	const QStringList		649734	0					
ANR	650337	Identifier	keywords		649734	1					
ANR	650338	AssignmentExpression	"keywords = term . split ( QStringLiteral ( "" "" ) )"		649734	2		=			
ANR	650339	Identifier	keywords		649734	0					
ANR	650340	CallExpression	"term . split ( QStringLiteral ( "" "" ) )"		649734	1					
ANR	650341	Callee	term . split		649734	0					
ANR	650342	MemberAccess	term . split		649734	0					
ANR	650343	Identifier	term		649734	0					
ANR	650344	Identifier	split		649734	1					
ANR	650345	ArgumentList	"QStringLiteral ( "" "" )"		649734	1					
ANR	650346	Argument	"QStringLiteral ( "" "" )"		649734	0					
ANR	650347	CallExpression	"QStringLiteral ( "" "" )"		649734	0					
ANR	650348	Callee	QStringLiteral		649734	0					
ANR	650349	Identifier	QStringLiteral		649734	0					
ANR	650350	ArgumentList	""" """		649734	1					
ANR	650351	Argument	""" """		649734	0					
ANR	650352	PrimaryExpression	""" """		649734	0					
ANR	650353	IdentifierDeclStatement	QString windowName ;	178:8:8905:8923	649734	1	True				
ANR	650354	IdentifierDecl	windowName		649734	0					
ANR	650355	IdentifierDeclType	QString		649734	0					
ANR	650356	Identifier	windowName		649734	1					
ANR	650357	IdentifierDeclStatement	QString windowClass ;	179:8:8933:8952	649734	2	True				
ANR	650358	IdentifierDecl	windowClass		649734	0					
ANR	650359	IdentifierDeclType	QString		649734	0					
ANR	650360	Identifier	windowClass		649734	1					
ANR	650361	IdentifierDeclStatement	QString windowRole ;	180:8:8962:8980	649734	3	True				
ANR	650362	IdentifierDecl	windowRole		649734	0					
ANR	650363	IdentifierDeclType	QString		649734	0					
ANR	650364	Identifier	windowRole		649734	1					
ANR	650365	IdentifierDeclStatement	int desktop = - 1 ;	181:8:8990:9006	649734	4	True				
ANR	650366	IdentifierDecl	desktop = - 1		649734	0					
ANR	650367	IdentifierDeclType	int		649734	0					
ANR	650368	Identifier	desktop		649734	1					
ANR	650369	AssignmentExpression	desktop = - 1		649734	2		=			
ANR	650370	Identifier	desktop		649734	0					
ANR	650371	UnaryOperationExpression	- 1		649734	1					
ANR	650372	UnaryOperator	-		649734	0					
ANR	650373	PrimaryExpression	1		649734	1					
ANR	650374	Statement	foreach	182:8:9016:9022	649734	5	True				
ANR	650375	Statement	(	182:16:9024:9024	649734	6	True				
ANR	650376	Statement	const	182:17:9025:9029	649734	7	True				
ANR	650377	Statement	QString	182:23:9031:9037	649734	8	True				
ANR	650378	Statement	&	182:30:9038:9038	649734	9	True				
ANR	650379	Statement	keyword	182:32:9040:9046	649734	10	True				
ANR	650380	Statement	","	182:39:9047:9047	649734	11	True				
ANR	650381	Statement	keywords	182:41:9049:9056	649734	12	True				
ANR	650382	Statement	)	182:49:9057:9057	649734	13	True				
ANR	650383	CompoundStatement		56:51:3231:3231	649734	14					
ANR	650384	IfStatement	if ( keyword . endsWith ( '=' ) )		649734	0					
ANR	650385	Condition	keyword . endsWith ( '=' )	183:16:9077:9097	649734	0	True				
ANR	650386	CallExpression	keyword . endsWith ( '=' )		649734	0					
ANR	650387	Callee	keyword . endsWith		649734	0					
ANR	650388	MemberAccess	keyword . endsWith		649734	0					
ANR	650389	Identifier	keyword		649734	0					
ANR	650390	Identifier	endsWith		649734	1					
ANR	650391	ArgumentList	'='		649734	1					
ANR	650392	Argument	'='		649734	0					
ANR	650393	PrimaryExpression	'='		649734	0					
ANR	650394	CompoundStatement		57:39:3272:3272	649734	1					
ANR	650395	ContinueStatement	continue ;	184:16:9118:9126	649734	0	True				
ANR	650396	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="" , Qt :: CaseInsensitive ) )"		649734	1					
ANR	650397	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="" , Qt :: CaseInsensitive )"	186:16:9158:9252	649734	0	True				
ANR	650398	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="" , Qt :: CaseInsensitive )"		649734	0					
ANR	650399	Callee	keyword . startsWith		649734	0					
ANR	650400	MemberAccess	keyword . startsWith		649734	0					
ANR	650401	Identifier	keyword		649734	0					
ANR	650402	Identifier	startsWith		649734	1					
ANR	650403	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="""		649734	1					
ANR	650404	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="""		649734	0					
ANR	650405	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" ) + ""="""		649734	0		+			
ANR	650406	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""name"" )"		649734	0					
ANR	650407	Callee	i18nc		649734	0					
ANR	650408	Identifier	i18nc		649734	0					
ANR	650409	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650410	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650411	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650412	Argument	"""name"""		649734	1					
ANR	650413	PrimaryExpression	"""name"""		649734	0					
ANR	650414	PrimaryExpression	"""="""		649734	1					
ANR	650415	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650416	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650417	CompoundStatement		60:113:3427:3427	649734	1					
ANR	650418	ExpressionStatement	"windowName = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"	187:16:9273:9323	649734	0	True				
ANR	650419	AssignmentExpression	"windowName = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	0		=			
ANR	650420	Identifier	windowName		649734	0					
ANR	650421	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	1					
ANR	650422	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		649734	0					
ANR	650423	Callee	keyword . split		649734	0					
ANR	650424	MemberAccess	keyword . split		649734	0					
ANR	650425	Identifier	keyword		649734	0					
ANR	650426	Identifier	split		649734	1					
ANR	650427	ArgumentList	"QStringLiteral ( ""="" )"		649734	1					
ANR	650428	Argument	"QStringLiteral ( ""="" )"		649734	0					
ANR	650429	CallExpression	"QStringLiteral ( ""="" )"		649734	0					
ANR	650430	Callee	QStringLiteral		649734	0					
ANR	650431	Identifier	QStringLiteral		649734	0					
ANR	650432	ArgumentList	"""="""		649734	1					
ANR	650433	Argument	"""="""		649734	0					
ANR	650434	PrimaryExpression	"""="""		649734	0					
ANR	650435	PrimaryExpression	1		649734	1					
ANR	650436	ElseStatement	else		649734	0					
ANR	650437	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="" , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650438	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="" , Qt :: CaseInsensitive )"	188:23:9348:9443	649734	0	True				
ANR	650439	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="" , Qt :: CaseInsensitive )"		649734	0					
ANR	650440	Callee	keyword . startsWith		649734	0					
ANR	650441	MemberAccess	keyword . startsWith		649734	0					
ANR	650442	Identifier	keyword		649734	0					
ANR	650443	Identifier	startsWith		649734	1					
ANR	650444	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="""		649734	1					
ANR	650445	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="""		649734	0					
ANR	650446	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" ) + ""="""		649734	0		+			
ANR	650447	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""class"" )"		649734	0					
ANR	650448	Callee	i18nc		649734	0					
ANR	650449	Identifier	i18nc		649734	0					
ANR	650450	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650451	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650452	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650453	Argument	"""class"""		649734	1					
ANR	650454	PrimaryExpression	"""class"""		649734	0					
ANR	650455	PrimaryExpression	"""="""		649734	1					
ANR	650456	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650457	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650458	CompoundStatement		62:121:3618:3618	649734	1					
ANR	650459	ExpressionStatement	"windowClass = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"	189:16:9464:9515	649734	0	True				
ANR	650460	AssignmentExpression	"windowClass = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	0		=			
ANR	650461	Identifier	windowClass		649734	0					
ANR	650462	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	1					
ANR	650463	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		649734	0					
ANR	650464	Callee	keyword . split		649734	0					
ANR	650465	MemberAccess	keyword . split		649734	0					
ANR	650466	Identifier	keyword		649734	0					
ANR	650467	Identifier	split		649734	1					
ANR	650468	ArgumentList	"QStringLiteral ( ""="" )"		649734	1					
ANR	650469	Argument	"QStringLiteral ( ""="" )"		649734	0					
ANR	650470	CallExpression	"QStringLiteral ( ""="" )"		649734	0					
ANR	650471	Callee	QStringLiteral		649734	0					
ANR	650472	Identifier	QStringLiteral		649734	0					
ANR	650473	ArgumentList	"""="""		649734	1					
ANR	650474	Argument	"""="""		649734	0					
ANR	650475	PrimaryExpression	"""="""		649734	0					
ANR	650476	PrimaryExpression	1		649734	1					
ANR	650477	ElseStatement	else		649734	0					
ANR	650478	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="" , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650479	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="" , Qt :: CaseInsensitive )"	190:23:9540:9634	649734	0	True				
ANR	650480	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="" , Qt :: CaseInsensitive )"		649734	0					
ANR	650481	Callee	keyword . startsWith		649734	0					
ANR	650482	MemberAccess	keyword . startsWith		649734	0					
ANR	650483	Identifier	keyword		649734	0					
ANR	650484	Identifier	startsWith		649734	1					
ANR	650485	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="""		649734	1					
ANR	650486	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="""		649734	0					
ANR	650487	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" ) + ""="""		649734	0		+			
ANR	650488	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""role"" )"		649734	0					
ANR	650489	Callee	i18nc		649734	0					
ANR	650490	Identifier	i18nc		649734	0					
ANR	650491	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650492	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650493	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650494	Argument	"""role"""		649734	1					
ANR	650495	PrimaryExpression	"""role"""		649734	0					
ANR	650496	PrimaryExpression	"""="""		649734	1					
ANR	650497	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650498	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650499	CompoundStatement		64:120:3809:3809	649734	1					
ANR	650500	ExpressionStatement	"windowRole = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"	191:16:9655:9705	649734	0	True				
ANR	650501	AssignmentExpression	"windowRole = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	0		=			
ANR	650502	Identifier	windowRole		649734	0					
ANR	650503	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	1					
ANR	650504	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		649734	0					
ANR	650505	Callee	keyword . split		649734	0					
ANR	650506	MemberAccess	keyword . split		649734	0					
ANR	650507	Identifier	keyword		649734	0					
ANR	650508	Identifier	split		649734	1					
ANR	650509	ArgumentList	"QStringLiteral ( ""="" )"		649734	1					
ANR	650510	Argument	"QStringLiteral ( ""="" )"		649734	0					
ANR	650511	CallExpression	"QStringLiteral ( ""="" )"		649734	0					
ANR	650512	Callee	QStringLiteral		649734	0					
ANR	650513	Identifier	QStringLiteral		649734	0					
ANR	650514	ArgumentList	"""="""		649734	1					
ANR	650515	Argument	"""="""		649734	0					
ANR	650516	PrimaryExpression	"""="""		649734	0					
ANR	650517	PrimaryExpression	1		649734	1					
ANR	650518	ElseStatement	else		649734	0					
ANR	650519	IfStatement	"if ( keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="" , Qt :: CaseInsensitive ) )"		649734	0					
ANR	650520	Condition	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="" , Qt :: CaseInsensitive )"	192:23:9730:9827	649734	0	True				
ANR	650521	CallExpression	"keyword . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="" , Qt :: CaseInsensitive )"		649734	0					
ANR	650522	Callee	keyword . startsWith		649734	0					
ANR	650523	MemberAccess	keyword . startsWith		649734	0					
ANR	650524	Identifier	keyword		649734	0					
ANR	650525	Identifier	startsWith		649734	1					
ANR	650526	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="""		649734	1					
ANR	650527	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="""		649734	0					
ANR	650528	AdditiveExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) + ""="""		649734	0		+			
ANR	650529	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649734	0					
ANR	650530	Callee	i18nc		649734	0					
ANR	650531	Identifier	i18nc		649734	0					
ANR	650532	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	650533	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	650534	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	650535	Argument	"""desktop"""		649734	1					
ANR	650536	PrimaryExpression	"""desktop"""		649734	0					
ANR	650537	PrimaryExpression	"""="""		649734	1					
ANR	650538	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650539	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650540	CompoundStatement		67:16:4020:4027	649734	1					
ANR	650541	IdentifierDeclStatement	bool ok ;	193:16:9848:9855	649734	0	True				
ANR	650542	IdentifierDecl	ok		649734	0					
ANR	650543	IdentifierDeclType	bool		649734	0					
ANR	650544	Identifier	ok		649734	1					
ANR	650545	ExpressionStatement	"desktop = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt ( & ok )"	194:16:9873:9931	649734	1	True				
ANR	650546	AssignmentExpression	"desktop = keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt ( & ok )"		649734	0		=			
ANR	650547	Identifier	desktop		649734	0					
ANR	650548	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt ( & ok )"		649734	1					
ANR	650549	Callee	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt"		649734	0					
ANR	650550	MemberAccess	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt"		649734	0					
ANR	650551	ArrayIndexing	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ]"		649734	0					
ANR	650552	CallExpression	"keyword . split ( QStringLiteral ( ""="" ) )"		649734	0					
ANR	650553	Callee	keyword . split		649734	0					
ANR	650554	MemberAccess	keyword . split		649734	0					
ANR	650555	Identifier	keyword		649734	0					
ANR	650556	Identifier	split		649734	1					
ANR	650557	ArgumentList	"QStringLiteral ( ""="" )"		649734	1					
ANR	650558	Argument	"QStringLiteral ( ""="" )"		649734	0					
ANR	650559	CallExpression	"QStringLiteral ( ""="" )"		649734	0					
ANR	650560	Callee	QStringLiteral		649734	0					
ANR	650561	Identifier	QStringLiteral		649734	0					
ANR	650562	ArgumentList	"""="""		649734	1					
ANR	650563	Argument	"""="""		649734	0					
ANR	650564	PrimaryExpression	"""="""		649734	0					
ANR	650565	PrimaryExpression	1		649734	1					
ANR	650566	Identifier	toInt		649734	1					
ANR	650567	ArgumentList	& ok		649734	1					
ANR	650568	Argument	& ok		649734	0					
ANR	650569	UnaryOperationExpression	& ok		649734	0					
ANR	650570	UnaryOperator	&		649734	0					
ANR	650571	Identifier	ok		649734	1					
ANR	650572	IfStatement	if ( ! ok || desktop > KWindowSystem :: numberOfDesktops ( ) )		649734	2					
ANR	650573	Condition	! ok || desktop > KWindowSystem :: numberOfDesktops ( )	195:20:9953:10002	649734	0	True				
ANR	650574	OrExpression	! ok || desktop > KWindowSystem :: numberOfDesktops ( )		649734	0		||			
ANR	650575	UnaryOperationExpression	! ok		649734	0					
ANR	650576	UnaryOperator	!		649734	0					
ANR	650577	Identifier	ok		649734	1					
ANR	650578	RelationalExpression	desktop > KWindowSystem :: numberOfDesktops ( )		649734	1		>			
ANR	650579	Identifier	desktop		649734	0					
ANR	650580	CallExpression	KWindowSystem :: numberOfDesktops ( )		649734	1					
ANR	650581	Callee	KWindowSystem :: numberOfDesktops		649734	0					
ANR	650582	Identifier	KWindowSystem :: numberOfDesktops		649734	0					
ANR	650583	ArgumentList			649734	1					
ANR	650584	CompoundStatement		69:72:4177:4177	649734	1					
ANR	650585	ExpressionStatement	desktop = - 1	196:20:10027:10039	649734	0	True				
ANR	650586	AssignmentExpression	desktop = - 1		649734	0		=			
ANR	650587	Identifier	desktop		649734	0					
ANR	650588	UnaryOperationExpression	- 1		649734	1					
ANR	650589	UnaryOperator	-		649734	0					
ANR	650590	PrimaryExpression	1		649734	1					
ANR	650591	ElseStatement	else		649734	0					
ANR	650592	CompoundStatement		72:19:4266:4266	649734	0					
ANR	650593	IfStatement	if ( windowName . isEmpty ( ) && ! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 ) )		649734	0					
ANR	650594	Condition	windowName . isEmpty ( ) && ! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 )	200:20:10208:10343	649734	0	True				
ANR	650595	AndExpression	windowName . isEmpty ( ) && ! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 )		649734	0		&&			
ANR	650596	CallExpression	windowName . isEmpty ( )		649734	0					
ANR	650597	Callee	windowName . isEmpty		649734	0					
ANR	650598	MemberAccess	windowName . isEmpty		649734	0					
ANR	650599	Identifier	windowName		649734	0					
ANR	650600	Identifier	isEmpty		649734	1					
ANR	650601	ArgumentList			649734	1					
ANR	650602	AndExpression	! keyword . contains ( '=' ) && ( ! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1 )		649734	1		&&			
ANR	650603	UnaryOperationExpression	! keyword . contains ( '=' )		649734	0					
ANR	650604	UnaryOperator	!		649734	0					
ANR	650605	CallExpression	keyword . contains ( '=' )		649734	1					
ANR	650606	Callee	keyword . contains		649734	0					
ANR	650607	MemberAccess	keyword . contains		649734	0					
ANR	650608	Identifier	keyword		649734	0					
ANR	650609	Identifier	contains		649734	1					
ANR	650610	ArgumentList	'='		649734	1					
ANR	650611	Argument	'='		649734	0					
ANR	650612	PrimaryExpression	'='		649734	0					
ANR	650613	OrExpression	! windowRole . isEmpty ( ) || ! windowClass . isEmpty ( ) || desktop != - 1		649734	1		||			
ANR	650614	UnaryOperationExpression	! windowRole . isEmpty ( )		649734	0					
ANR	650615	UnaryOperator	!		649734	0					
ANR	650616	CallExpression	windowRole . isEmpty ( )		649734	1					
ANR	650617	Callee	windowRole . isEmpty		649734	0					
ANR	650618	MemberAccess	windowRole . isEmpty		649734	0					
ANR	650619	Identifier	windowRole		649734	0					
ANR	650620	Identifier	isEmpty		649734	1					
ANR	650621	ArgumentList			649734	1					
ANR	650622	OrExpression	! windowClass . isEmpty ( ) || desktop != - 1		649734	1		||			
ANR	650623	UnaryOperationExpression	! windowClass . isEmpty ( )		649734	0					
ANR	650624	UnaryOperator	!		649734	0					
ANR	650625	CallExpression	windowClass . isEmpty ( )		649734	1					
ANR	650626	Callee	windowClass . isEmpty		649734	0					
ANR	650627	MemberAccess	windowClass . isEmpty		649734	0					
ANR	650628	Identifier	windowClass		649734	0					
ANR	650629	Identifier	isEmpty		649734	1					
ANR	650630	ArgumentList			649734	1					
ANR	650631	EqualityExpression	desktop != - 1		649734	1		!=			
ANR	650632	Identifier	desktop		649734	0					
ANR	650633	UnaryOperationExpression	- 1		649734	1					
ANR	650634	UnaryOperator	-		649734	0					
ANR	650635	PrimaryExpression	1		649734	1					
ANR	650636	CompoundStatement		75:88:4518:4518	649734	1					
ANR	650637	ExpressionStatement	windowName = keyword	202:20:10368:10388	649734	0	True				
ANR	650638	AssignmentExpression	windowName = keyword		649734	0		=			
ANR	650639	Identifier	windowName		649734	0					
ANR	650640	Identifier	keyword		649734	1					
ANR	650641	IdentifierDeclStatement	"QHashIterator < WId , KWindowInfo > it ( m_windows ) ;"	206:8:10440:10485	649734	15	True				
ANR	650642	IdentifierDecl	it ( m_windows )		649734	0					
ANR	650643	IdentifierDeclType	"QHashIterator < WId , KWindowInfo >"		649734	0					
ANR	650644	Identifier	it		649734	1					
ANR	650645	Identifier	m_windows		649734	2					
ANR	650646	WhileStatement	while ( it . hasNext ( ) )		649734	16					
ANR	650647	Condition	it . hasNext ( )	207:14:10501:10512	649734	0	True				
ANR	650648	CallExpression	it . hasNext ( )		649734	0					
ANR	650649	Callee	it . hasNext		649734	0					
ANR	650650	MemberAccess	it . hasNext		649734	0					
ANR	650651	Identifier	it		649734	0					
ANR	650652	Identifier	hasNext		649734	1					
ANR	650653	ArgumentList			649734	1					
ANR	650654	CompoundStatement		85:12:4797:4959	649734	1					
ANR	650655	ExpressionStatement	it . next ( )	208:12:10529:10538	649734	0	True				
ANR	650656	CallExpression	it . next ( )		649734	0					
ANR	650657	Callee	it . next		649734	0					
ANR	650658	MemberAccess	it . next		649734	0					
ANR	650659	Identifier	it		649734	0					
ANR	650660	Identifier	next		649734	1					
ANR	650661	ArgumentList			649734	1					
ANR	650662	IdentifierDeclStatement	WId w = it . key ( ) ;	209:12:10552:10568	649734	1	True				
ANR	650663	IdentifierDecl	w = it . key ( )		649734	0					
ANR	650664	IdentifierDeclType	WId		649734	0					
ANR	650665	Identifier	w		649734	1					
ANR	650666	AssignmentExpression	w = it . key ( )		649734	2		=			
ANR	650667	Identifier	w		649734	0					
ANR	650668	CallExpression	it . key ( )		649734	1					
ANR	650669	Callee	it . key		649734	0					
ANR	650670	MemberAccess	it . key		649734	0					
ANR	650671	Identifier	it		649734	0					
ANR	650672	Identifier	key		649734	1					
ANR	650673	ArgumentList			649734	1					
ANR	650674	IdentifierDeclStatement	KWindowInfo info = it . value ( ) ;	210:12:10582:10611	649734	2	True				
ANR	650675	IdentifierDecl	info = it . value ( )		649734	0					
ANR	650676	IdentifierDeclType	KWindowInfo		649734	0					
ANR	650677	Identifier	info		649734	1					
ANR	650678	AssignmentExpression	info = it . value ( )		649734	2		=			
ANR	650679	Identifier	info		649734	0					
ANR	650680	CallExpression	it . value ( )		649734	1					
ANR	650681	Callee	it . value		649734	0					
ANR	650682	MemberAccess	it . value		649734	0					
ANR	650683	Identifier	it		649734	0					
ANR	650684	Identifier	value		649734	1					
ANR	650685	ArgumentList			649734	1					
ANR	650686	IdentifierDeclStatement	"QString windowClassCompare = QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) ) ;"	211:12:10625:10787	649734	3	True				
ANR	650687	IdentifierDecl	"windowClassCompare = QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		649734	0					
ANR	650688	IdentifierDeclType	QString		649734	0					
ANR	650689	Identifier	windowClassCompare		649734	1					
ANR	650690	AssignmentExpression	"windowClassCompare = QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		649734	2		=			
ANR	650691	Identifier	windowClassCompare		649734	0					
ANR	650692	AdditiveExpression	"QString :: fromUtf8 ( info . windowClassName ( ) ) + "" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		649734	1		+			
ANR	650693	CallExpression	QString :: fromUtf8 ( info . windowClassName ( ) )		649734	0					
ANR	650694	Callee	QString :: fromUtf8		649734	0					
ANR	650695	Identifier	QString :: fromUtf8		649734	0					
ANR	650696	ArgumentList	info . windowClassName ( )		649734	1					
ANR	650697	Argument	info . windowClassName ( )		649734	0					
ANR	650698	CallExpression	info . windowClassName ( )		649734	0					
ANR	650699	Callee	info . windowClassName		649734	0					
ANR	650700	MemberAccess	info . windowClassName		649734	0					
ANR	650701	Identifier	info		649734	0					
ANR	650702	Identifier	windowClassName		649734	1					
ANR	650703	ArgumentList			649734	1					
ANR	650704	AdditiveExpression	""" "" + QString :: fromUtf8 ( info . windowClassClass ( ) )"		649734	1		+			
ANR	650705	PrimaryExpression	""" """		649734	0					
ANR	650706	CallExpression	QString :: fromUtf8 ( info . windowClassClass ( ) )		649734	1					
ANR	650707	Callee	QString :: fromUtf8		649734	0					
ANR	650708	Identifier	QString :: fromUtf8		649734	0					
ANR	650709	ArgumentList	info . windowClassClass ( )		649734	1					
ANR	650710	Argument	info . windowClassClass ( )		649734	0					
ANR	650711	CallExpression	info . windowClassClass ( )		649734	0					
ANR	650712	Callee	info . windowClassClass		649734	0					
ANR	650713	MemberAccess	info . windowClassClass		649734	0					
ANR	650714	Identifier	info		649734	0					
ANR	650715	Identifier	windowClassClass		649734	1					
ANR	650716	ArgumentList			649734	1					
ANR	650717	IfStatement	if ( ! KWindowSystem :: hasWId ( w ) )		649734	4					
ANR	650718	Condition	! KWindowSystem :: hasWId ( w )	214:16:10849:10873	649734	0	True				
ANR	650719	UnaryOperationExpression	! KWindowSystem :: hasWId ( w )		649734	0					
ANR	650720	UnaryOperator	!		649734	0					
ANR	650721	CallExpression	KWindowSystem :: hasWId ( w )		649734	1					
ANR	650722	Callee	KWindowSystem :: hasWId		649734	0					
ANR	650723	Identifier	KWindowSystem :: hasWId		649734	0					
ANR	650724	ArgumentList	w		649734	1					
ANR	650725	Argument	w		649734	0					
ANR	650726	Identifier	w		649734	0					
ANR	650727	CompoundStatement		88:43:5048:5048	649734	1					
ANR	650728	ContinueStatement	continue ;	215:16:10894:10902	649734	0	True				
ANR	650729	IfStatement	"if ( ! windowName . isEmpty ( ) && ! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive ) )"		649734	5					
ANR	650730	Condition	"! windowName . isEmpty ( ) && ! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"	217:16:10934:11012	649734	0	True				
ANR	650731	AndExpression	"! windowName . isEmpty ( ) && ! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"		649734	0		&&			
ANR	650732	UnaryOperationExpression	! windowName . isEmpty ( )		649734	0					
ANR	650733	UnaryOperator	!		649734	0					
ANR	650734	CallExpression	windowName . isEmpty ( )		649734	1					
ANR	650735	Callee	windowName . isEmpty		649734	0					
ANR	650736	MemberAccess	windowName . isEmpty		649734	0					
ANR	650737	Identifier	windowName		649734	0					
ANR	650738	Identifier	isEmpty		649734	1					
ANR	650739	ArgumentList			649734	1					
ANR	650740	UnaryOperationExpression	"! info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"		649734	1					
ANR	650741	UnaryOperator	!		649734	0					
ANR	650742	CallExpression	"info . name ( ) . contains ( windowName , Qt :: CaseInsensitive )"		649734	1					
ANR	650743	Callee	info . name ( ) . contains		649734	0					
ANR	650744	MemberAccess	info . name ( ) . contains		649734	0					
ANR	650745	CallExpression	info . name ( )		649734	0					
ANR	650746	Callee	info . name		649734	0					
ANR	650747	MemberAccess	info . name		649734	0					
ANR	650748	Identifier	info		649734	0					
ANR	650749	Identifier	name		649734	1					
ANR	650750	ArgumentList			649734	1					
ANR	650751	Identifier	contains		649734	1					
ANR	650752	ArgumentList	windowName		649734	1					
ANR	650753	Argument	windowName		649734	0					
ANR	650754	Identifier	windowName		649734	0					
ANR	650755	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650756	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650757	CompoundStatement		91:97:5187:5187	649734	1					
ANR	650758	ContinueStatement	continue ;	218:16:11033:11041	649734	0	True				
ANR	650759	IfStatement	"if ( ! windowClass . isEmpty ( ) && ! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive ) )"		649734	6					
ANR	650760	Condition	"! windowClass . isEmpty ( ) && ! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"	220:16:11073:11160	649734	0	True				
ANR	650761	AndExpression	"! windowClass . isEmpty ( ) && ! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"		649734	0		&&			
ANR	650762	UnaryOperationExpression	! windowClass . isEmpty ( )		649734	0					
ANR	650763	UnaryOperator	!		649734	0					
ANR	650764	CallExpression	windowClass . isEmpty ( )		649734	1					
ANR	650765	Callee	windowClass . isEmpty		649734	0					
ANR	650766	MemberAccess	windowClass . isEmpty		649734	0					
ANR	650767	Identifier	windowClass		649734	0					
ANR	650768	Identifier	isEmpty		649734	1					
ANR	650769	ArgumentList			649734	1					
ANR	650770	UnaryOperationExpression	"! windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"		649734	1					
ANR	650771	UnaryOperator	!		649734	0					
ANR	650772	CallExpression	"windowClassCompare . contains ( windowClass , Qt :: CaseInsensitive )"		649734	1					
ANR	650773	Callee	windowClassCompare . contains		649734	0					
ANR	650774	MemberAccess	windowClassCompare . contains		649734	0					
ANR	650775	Identifier	windowClassCompare		649734	0					
ANR	650776	Identifier	contains		649734	1					
ANR	650777	ArgumentList	windowClass		649734	1					
ANR	650778	Argument	windowClass		649734	0					
ANR	650779	Identifier	windowClass		649734	0					
ANR	650780	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650781	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650782	CompoundStatement		94:106:5335:5335	649734	1					
ANR	650783	ContinueStatement	continue ;	221:16:11181:11189	649734	0	True				
ANR	650784	IfStatement	"if ( ! windowRole . isEmpty ( ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive ) )"		649734	7					
ANR	650785	Condition	"! windowRole . isEmpty ( ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"	223:16:11221:11324	649734	0	True				
ANR	650786	AndExpression	"! windowRole . isEmpty ( ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"		649734	0		&&			
ANR	650787	UnaryOperationExpression	! windowRole . isEmpty ( )		649734	0					
ANR	650788	UnaryOperator	!		649734	0					
ANR	650789	CallExpression	windowRole . isEmpty ( )		649734	1					
ANR	650790	Callee	windowRole . isEmpty		649734	0					
ANR	650791	MemberAccess	windowRole . isEmpty		649734	0					
ANR	650792	Identifier	windowRole		649734	0					
ANR	650793	Identifier	isEmpty		649734	1					
ANR	650794	ArgumentList			649734	1					
ANR	650795	UnaryOperationExpression	"! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"		649734	1					
ANR	650796	UnaryOperator	!		649734	0					
ANR	650797	CallExpression	"QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( windowRole , Qt :: CaseInsensitive )"		649734	1					
ANR	650798	Callee	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		649734	0					
ANR	650799	MemberAccess	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		649734	0					
ANR	650800	CallExpression	QString :: fromUtf8 ( info . windowRole ( ) )		649734	0					
ANR	650801	Callee	QString :: fromUtf8		649734	0					
ANR	650802	Identifier	QString :: fromUtf8		649734	0					
ANR	650803	ArgumentList	info . windowRole ( )		649734	1					
ANR	650804	Argument	info . windowRole ( )		649734	0					
ANR	650805	CallExpression	info . windowRole ( )		649734	0					
ANR	650806	Callee	info . windowRole		649734	0					
ANR	650807	MemberAccess	info . windowRole		649734	0					
ANR	650808	Identifier	info		649734	0					
ANR	650809	Identifier	windowRole		649734	1					
ANR	650810	ArgumentList			649734	1					
ANR	650811	Identifier	contains		649734	1					
ANR	650812	ArgumentList	windowRole		649734	1					
ANR	650813	Argument	windowRole		649734	0					
ANR	650814	Identifier	windowRole		649734	0					
ANR	650815	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650816	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650817	CompoundStatement		97:122:5499:5499	649734	1					
ANR	650818	ContinueStatement	continue ;	224:16:11345:11353	649734	0	True				
ANR	650819	IfStatement	if ( desktop != - 1 && ! info . isOnDesktop ( desktop ) )		649734	8					
ANR	650820	Condition	desktop != - 1 && ! info . isOnDesktop ( desktop )	226:16:11385:11427	649734	0	True				
ANR	650821	AndExpression	desktop != - 1 && ! info . isOnDesktop ( desktop )		649734	0		&&			
ANR	650822	EqualityExpression	desktop != - 1		649734	0		!=			
ANR	650823	Identifier	desktop		649734	0					
ANR	650824	UnaryOperationExpression	- 1		649734	1					
ANR	650825	UnaryOperator	-		649734	0					
ANR	650826	PrimaryExpression	1		649734	1					
ANR	650827	UnaryOperationExpression	! info . isOnDesktop ( desktop )		649734	1					
ANR	650828	UnaryOperator	!		649734	0					
ANR	650829	CallExpression	info . isOnDesktop ( desktop )		649734	1					
ANR	650830	Callee	info . isOnDesktop		649734	0					
ANR	650831	MemberAccess	info . isOnDesktop		649734	0					
ANR	650832	Identifier	info		649734	0					
ANR	650833	Identifier	isOnDesktop		649734	1					
ANR	650834	ArgumentList	desktop		649734	1					
ANR	650835	Argument	desktop		649734	0					
ANR	650836	Identifier	desktop		649734	0					
ANR	650837	CompoundStatement		100:61:5602:5602	649734	1					
ANR	650838	ContinueStatement	continue ;	227:16:11448:11456	649734	0	True				
ANR	650839	IfStatement	if ( windowName . isEmpty ( ) && windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1 )		649734	9					
ANR	650840	Condition	windowName . isEmpty ( ) && windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1	231:16:11639:11724	649734	0	True				
ANR	650841	AndExpression	windowName . isEmpty ( ) && windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1		649734	0		&&			
ANR	650842	CallExpression	windowName . isEmpty ( )		649734	0					
ANR	650843	Callee	windowName . isEmpty		649734	0					
ANR	650844	MemberAccess	windowName . isEmpty		649734	0					
ANR	650845	Identifier	windowName		649734	0					
ANR	650846	Identifier	isEmpty		649734	1					
ANR	650847	ArgumentList			649734	1					
ANR	650848	AndExpression	windowClass . isEmpty ( ) && windowRole . isEmpty ( ) && desktop == - 1		649734	1		&&			
ANR	650849	CallExpression	windowClass . isEmpty ( )		649734	0					
ANR	650850	Callee	windowClass . isEmpty		649734	0					
ANR	650851	MemberAccess	windowClass . isEmpty		649734	0					
ANR	650852	Identifier	windowClass		649734	0					
ANR	650853	Identifier	isEmpty		649734	1					
ANR	650854	ArgumentList			649734	1					
ANR	650855	AndExpression	windowRole . isEmpty ( ) && desktop == - 1		649734	1		&&			
ANR	650856	CallExpression	windowRole . isEmpty ( )		649734	0					
ANR	650857	Callee	windowRole . isEmpty		649734	0					
ANR	650858	MemberAccess	windowRole . isEmpty		649734	0					
ANR	650859	Identifier	windowRole		649734	0					
ANR	650860	Identifier	isEmpty		649734	1					
ANR	650861	ArgumentList			649734	1					
ANR	650862	EqualityExpression	desktop == - 1		649734	1		==			
ANR	650863	Identifier	desktop		649734	0					
ANR	650864	UnaryOperationExpression	- 1		649734	1					
ANR	650865	UnaryOperator	-		649734	0					
ANR	650866	PrimaryExpression	1		649734	1					
ANR	650867	CompoundStatement		106:16:5917:5973	649734	1					
ANR	650868	IdentifierDeclStatement	const QString & test = term . mid ( keywords [ 0 ] . length ( ) + 1 ) ;	232:16:11745:11801	649734	0	True				
ANR	650869	IdentifierDecl	& test = term . mid ( keywords [ 0 ] . length ( ) + 1 )		649734	0					
ANR	650870	IdentifierDeclType	const QString &		649734	0					
ANR	650871	Identifier	test		649734	1					
ANR	650872	AssignmentExpression	& test = term . mid ( keywords [ 0 ] . length ( ) + 1 )		649734	2		=			
ANR	650873	Identifier	test		649734	0					
ANR	650874	CallExpression	term . mid ( keywords [ 0 ] . length ( ) + 1 )		649734	1					
ANR	650875	Callee	term . mid		649734	0					
ANR	650876	MemberAccess	term . mid		649734	0					
ANR	650877	Identifier	term		649734	0					
ANR	650878	Identifier	mid		649734	1					
ANR	650879	ArgumentList	keywords [ 0 ] . length ( ) + 1		649734	1					
ANR	650880	Argument	keywords [ 0 ] . length ( ) + 1		649734	0					
ANR	650881	AdditiveExpression	keywords [ 0 ] . length ( ) + 1		649734	0		+			
ANR	650882	CallExpression	keywords [ 0 ] . length ( )		649734	0					
ANR	650883	Callee	keywords [ 0 ] . length		649734	0					
ANR	650884	MemberAccess	keywords [ 0 ] . length		649734	0					
ANR	650885	ArrayIndexing	keywords [ 0 ]		649734	0					
ANR	650886	Identifier	keywords		649734	0					
ANR	650887	PrimaryExpression	0		649734	1					
ANR	650888	Identifier	length		649734	1					
ANR	650889	ArgumentList			649734	1					
ANR	650890	PrimaryExpression	1		649734	1					
ANR	650891	IfStatement	"if ( ! info . name ( ) . contains ( test , Qt :: CaseInsensitive ) && ! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive ) )"		649734	1					
ANR	650892	Condition	"! info . name ( ) . contains ( test , Qt :: CaseInsensitive ) && ! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"	233:20:11823:12046	649734	0	True				
ANR	650893	AndExpression	"! info . name ( ) . contains ( test , Qt :: CaseInsensitive ) && ! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		649734	0		&&			
ANR	650894	UnaryOperationExpression	"! info . name ( ) . contains ( test , Qt :: CaseInsensitive )"		649734	0					
ANR	650895	UnaryOperator	!		649734	0					
ANR	650896	CallExpression	"info . name ( ) . contains ( test , Qt :: CaseInsensitive )"		649734	1					
ANR	650897	Callee	info . name ( ) . contains		649734	0					
ANR	650898	MemberAccess	info . name ( ) . contains		649734	0					
ANR	650899	CallExpression	info . name ( )		649734	0					
ANR	650900	Callee	info . name		649734	0					
ANR	650901	MemberAccess	info . name		649734	0					
ANR	650902	Identifier	info		649734	0					
ANR	650903	Identifier	name		649734	1					
ANR	650904	ArgumentList			649734	1					
ANR	650905	Identifier	contains		649734	1					
ANR	650906	ArgumentList	test		649734	1					
ANR	650907	Argument	test		649734	0					
ANR	650908	Identifier	test		649734	0					
ANR	650909	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650910	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650911	AndExpression	"! windowClassCompare . contains ( test , Qt :: CaseInsensitive ) && ! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		649734	1		&&			
ANR	650912	UnaryOperationExpression	"! windowClassCompare . contains ( test , Qt :: CaseInsensitive )"		649734	0					
ANR	650913	UnaryOperator	!		649734	0					
ANR	650914	CallExpression	"windowClassCompare . contains ( test , Qt :: CaseInsensitive )"		649734	1					
ANR	650915	Callee	windowClassCompare . contains		649734	0					
ANR	650916	MemberAccess	windowClassCompare . contains		649734	0					
ANR	650917	Identifier	windowClassCompare		649734	0					
ANR	650918	Identifier	contains		649734	1					
ANR	650919	ArgumentList	test		649734	1					
ANR	650920	Argument	test		649734	0					
ANR	650921	Identifier	test		649734	0					
ANR	650922	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650923	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650924	UnaryOperationExpression	"! QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		649734	1					
ANR	650925	UnaryOperator	!		649734	0					
ANR	650926	CallExpression	"QString :: fromUtf8 ( info . windowRole ( ) ) . contains ( test , Qt :: CaseInsensitive )"		649734	1					
ANR	650927	Callee	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		649734	0					
ANR	650928	MemberAccess	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		649734	0					
ANR	650929	CallExpression	QString :: fromUtf8 ( info . windowRole ( ) )		649734	0					
ANR	650930	Callee	QString :: fromUtf8		649734	0					
ANR	650931	Identifier	QString :: fromUtf8		649734	0					
ANR	650932	ArgumentList	info . windowRole ( )		649734	1					
ANR	650933	Argument	info . windowRole ( )		649734	0					
ANR	650934	CallExpression	info . windowRole ( )		649734	0					
ANR	650935	Callee	info . windowRole		649734	0					
ANR	650936	MemberAccess	info . windowRole		649734	0					
ANR	650937	Identifier	info		649734	0					
ANR	650938	Identifier	windowRole		649734	1					
ANR	650939	ArgumentList			649734	1					
ANR	650940	Identifier	contains		649734	1					
ANR	650941	ArgumentList	test		649734	1					
ANR	650942	Argument	test		649734	0					
ANR	650943	Identifier	test		649734	0					
ANR	650944	Argument	Qt :: CaseInsensitive		649734	1					
ANR	650945	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	650946	CompoundStatement		109:95:6221:6221	649734	1					
ANR	650947	ContinueStatement	continue ;	236:20:12071:12079	649734	0	True				
ANR	650948	IfStatement	"if ( actionSupported ( info , action ) )"		649734	10					
ANR	650949	Condition	"actionSupported ( info , action )"	240:16:12189:12217	649734	0	True				
ANR	650950	CallExpression	"actionSupported ( info , action )"		649734	0					
ANR	650951	Callee	actionSupported		649734	0					
ANR	650952	Identifier	actionSupported		649734	0					
ANR	650953	ArgumentList	info		649734	1					
ANR	650954	Argument	info		649734	0					
ANR	650955	Identifier	info		649734	0					
ANR	650956	Argument	action		649734	1					
ANR	650957	Identifier	action		649734	0					
ANR	650958	CompoundStatement		114:46:6391:6391	649734	1					
ANR	650959	ExpressionStatement	"matches << windowMatch ( info , action )"	241:16:12237:12273	649734	0	True				
ANR	650960	ShiftExpression	"matches << windowMatch ( info , action )"		649734	0		<<			
ANR	650961	Identifier	matches		649734	0					
ANR	650962	CallExpression	"windowMatch ( info , action )"		649734	1					
ANR	650963	Callee	windowMatch		649734	0					
ANR	650964	Identifier	windowMatch		649734	0					
ANR	650965	ArgumentList	info		649734	1					
ANR	650966	Argument	info		649734	0					
ANR	650967	Identifier	info		649734	0					
ANR	650968	Argument	action		649734	1					
ANR	650969	Identifier	action		649734	0					
ANR	650970	IfStatement	if ( ! matches . isEmpty ( ) )		649734	17					
ANR	650971	Condition	! matches . isEmpty ( )	245:12:12312:12329	649734	0	True				
ANR	650972	UnaryOperationExpression	! matches . isEmpty ( )		649734	0					
ANR	650973	UnaryOperator	!		649734	0					
ANR	650974	CallExpression	matches . isEmpty ( )		649734	1					
ANR	650975	Callee	matches . isEmpty		649734	0					
ANR	650976	MemberAccess	matches . isEmpty		649734	0					
ANR	650977	Identifier	matches		649734	0					
ANR	650978	Identifier	isEmpty		649734	1					
ANR	650979	ArgumentList			649734	1					
ANR	650980	CompoundStatement		119:32:6504:6504	649734	1					
ANR	650981	ExpressionStatement	context . addMatches ( matches )	247:12:12438:12465	649734	0	True				
ANR	650982	CallExpression	context . addMatches ( matches )		649734	0					
ANR	650983	Callee	context . addMatches		649734	0					
ANR	650984	MemberAccess	context . addMatches		649734	0					
ANR	650985	Identifier	context		649734	0					
ANR	650986	Identifier	addMatches		649734	1					
ANR	650987	ArgumentList	matches		649734	1					
ANR	650988	Argument	matches		649734	0					
ANR	650989	Identifier	matches		649734	0					
ANR	650990	ReturnStatement	return ;	248:12:12479:12485	649734	1	True				
ANR	650991	IdentifierDeclStatement	bool desktopAdded = false ;	252:4:12508:12533	649734	8	True				
ANR	650992	IdentifierDecl	desktopAdded = false		649734	0					
ANR	650993	IdentifierDeclType	bool		649734	0					
ANR	650994	Identifier	desktopAdded		649734	1					
ANR	650995	AssignmentExpression	desktopAdded = false		649734	2		=			
ANR	650996	Identifier	false		649734	0					
ANR	650997	Identifier	false		649734	1					
ANR	650998	IfStatement	"if ( term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , Qt :: CaseInsensitive ) )"		649734	9					
ANR	650999	Condition	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , Qt :: CaseInsensitive )"	254:8:12576:12664	649734	0	True				
ANR	651000	CallExpression	"term . startsWith ( i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" ) , Qt :: CaseInsensitive )"		649734	0					
ANR	651001	Callee	term . startsWith		649734	0					
ANR	651002	MemberAccess	term . startsWith		649734	0					
ANR	651003	Identifier	term		649734	0					
ANR	651004	Identifier	startsWith		649734	1					
ANR	651005	ArgumentList	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649734	1					
ANR	651006	Argument	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649734	0					
ANR	651007	CallExpression	"i18nc ( ""Note this is a KRunner keyword"" , ""desktop"" )"		649734	0					
ANR	651008	Callee	i18nc		649734	0					
ANR	651009	Identifier	i18nc		649734	0					
ANR	651010	ArgumentList	"""Note this is a KRunner keyword"""		649734	1					
ANR	651011	Argument	"""Note this is a KRunner keyword"""		649734	0					
ANR	651012	PrimaryExpression	"""Note this is a KRunner keyword"""		649734	0					
ANR	651013	Argument	"""desktop"""		649734	1					
ANR	651014	PrimaryExpression	"""desktop"""		649734	0					
ANR	651015	Argument	Qt :: CaseInsensitive		649734	1					
ANR	651016	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	651017	CompoundStatement		129:8:6849:6906	649734	1					
ANR	651018	IdentifierDeclStatement	"const QStringList parts = term . split ( QStringLiteral ( "" "" ) ) ;"	255:8:12677:12734	649734	0	True				
ANR	651019	IdentifierDecl	"parts = term . split ( QStringLiteral ( "" "" ) )"		649734	0					
ANR	651020	IdentifierDeclType	const QStringList		649734	0					
ANR	651021	Identifier	parts		649734	1					
ANR	651022	AssignmentExpression	"parts = term . split ( QStringLiteral ( "" "" ) )"		649734	2		=			
ANR	651023	Identifier	parts		649734	0					
ANR	651024	CallExpression	"term . split ( QStringLiteral ( "" "" ) )"		649734	1					
ANR	651025	Callee	term . split		649734	0					
ANR	651026	MemberAccess	term . split		649734	0					
ANR	651027	Identifier	term		649734	0					
ANR	651028	Identifier	split		649734	1					
ANR	651029	ArgumentList	"QStringLiteral ( "" "" )"		649734	1					
ANR	651030	Argument	"QStringLiteral ( "" "" )"		649734	0					
ANR	651031	CallExpression	"QStringLiteral ( "" "" )"		649734	0					
ANR	651032	Callee	QStringLiteral		649734	0					
ANR	651033	Identifier	QStringLiteral		649734	0					
ANR	651034	ArgumentList	""" """		649734	1					
ANR	651035	Argument	""" """		649734	0					
ANR	651036	PrimaryExpression	""" """		649734	0					
ANR	651037	IfStatement	if ( parts . size ( ) == 1 )		649734	1					
ANR	651038	Condition	parts . size ( ) == 1	256:12:12748:12764	649734	0	True				
ANR	651039	EqualityExpression	parts . size ( ) == 1		649734	0		==			
ANR	651040	CallExpression	parts . size ( )		649734	0					
ANR	651041	Callee	parts . size		649734	0					
ANR	651042	MemberAccess	parts . size		649734	0					
ANR	651043	Identifier	parts		649734	0					
ANR	651044	Identifier	size		649734	1					
ANR	651045	ArgumentList			649734	1					
ANR	651046	PrimaryExpression	1		649734	1					
ANR	651047	CompoundStatement		130:31:6939:6939	649734	1					
ANR	651048	ForStatement	for ( int i = 1 ; i <= KWindowSystem :: numberOfDesktops ( ) ; i ++ )		649734	0					
ANR	651049	ForInit	int i = 1 ;	258:17:12834:12841	649734	0	True				
ANR	651050	IdentifierDeclStatement	int i = 1 ;		649734	0					
ANR	651051	IdentifierDecl	i = 1		649734	0					
ANR	651052	IdentifierDeclType	int		649734	0					
ANR	651053	Identifier	i		649734	1					
ANR	651054	AssignmentExpression	i = 1		649734	2		=			
ANR	651055	Identifier	i		649734	0					
ANR	651056	PrimaryExpression	1		649734	1					
ANR	651057	Condition	i <= KWindowSystem :: numberOfDesktops ( )	258:26:12843:12878	649734	1	True				
ANR	651058	RelationalExpression	i <= KWindowSystem :: numberOfDesktops ( )		649734	0		<=			
ANR	651059	Identifier	i		649734	0					
ANR	651060	CallExpression	KWindowSystem :: numberOfDesktops ( )		649734	1					
ANR	651061	Callee	KWindowSystem :: numberOfDesktops		649734	0					
ANR	651062	Identifier	KWindowSystem :: numberOfDesktops		649734	0					
ANR	651063	ArgumentList			649734	1					
ANR	651064	PostIncDecOperationExpression	i ++	258:64:12881:12883	649734	2	True				
ANR	651065	Identifier	i		649734	0					
ANR	651066	IncDec	++		649734	1					
ANR	651067	CompoundStatement		132:69:7058:7058	649734	3					
ANR	651068	IfStatement	if ( i == KWindowSystem :: currentDesktop ( ) )		649734	0					
ANR	651069	Condition	i == KWindowSystem :: currentDesktop ( )	259:20:12908:12943	649734	0	True				
ANR	651070	EqualityExpression	i == KWindowSystem :: currentDesktop ( )		649734	0		==			
ANR	651071	Identifier	i		649734	0					
ANR	651072	CallExpression	KWindowSystem :: currentDesktop ( )		649734	1					
ANR	651073	Callee	KWindowSystem :: currentDesktop		649734	0					
ANR	651074	Identifier	KWindowSystem :: currentDesktop		649734	0					
ANR	651075	ArgumentList			649734	1					
ANR	651076	CompoundStatement		133:58:7118:7118	649734	1					
ANR	651077	ContinueStatement	continue ;	260:20:12968:12976	649734	0	True				
ANR	651078	ExpressionStatement	matches << desktopMatch ( i )	262:16:13012:13038	649734	1	True				
ANR	651079	ShiftExpression	matches << desktopMatch ( i )		649734	0		<<			
ANR	651080	Identifier	matches		649734	0					
ANR	651081	CallExpression	desktopMatch ( i )		649734	1					
ANR	651082	Callee	desktopMatch		649734	0					
ANR	651083	Identifier	desktopMatch		649734	0					
ANR	651084	ArgumentList	i		649734	1					
ANR	651085	Argument	i		649734	0					
ANR	651086	Identifier	i		649734	0					
ANR	651087	ExpressionStatement	desktopAdded = true	263:16:13056:13075	649734	2	True				
ANR	651088	AssignmentExpression	desktopAdded = true		649734	0		=			
ANR	651089	Identifier	desktopAdded		649734	0					
ANR	651090	Identifier	true		649734	1					
ANR	651091	ElseStatement	else		649734	0					
ANR	651092	CompoundStatement		142:12:7368:7430	649734	0					
ANR	651093	IdentifierDeclStatement	bool isInt ;	267:12:13172:13182	649734	0	True				
ANR	651094	IdentifierDecl	isInt		649734	0					
ANR	651095	IdentifierDeclType	bool		649734	0					
ANR	651096	Identifier	isInt		649734	1					
ANR	651097	IdentifierDeclStatement	int desktop = term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt ) ;	268:12:13196:13258	649734	1	True				
ANR	651098	IdentifierDecl	desktop = term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt )		649734	0					
ANR	651099	IdentifierDeclType	int		649734	0					
ANR	651100	Identifier	desktop		649734	1					
ANR	651101	AssignmentExpression	desktop = term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt )		649734	2		=			
ANR	651102	Identifier	desktop		649734	0					
ANR	651103	CallExpression	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt ( & isInt )		649734	1					
ANR	651104	Callee	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt		649734	0					
ANR	651105	MemberAccess	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt		649734	0					
ANR	651106	CallExpression	term . midRef ( parts [ 0 ] . length ( ) + 1 )		649734	0					
ANR	651107	Callee	term . midRef		649734	0					
ANR	651108	MemberAccess	term . midRef		649734	0					
ANR	651109	Identifier	term		649734	0					
ANR	651110	Identifier	midRef		649734	1					
ANR	651111	ArgumentList	parts [ 0 ] . length ( ) + 1		649734	1					
ANR	651112	Argument	parts [ 0 ] . length ( ) + 1		649734	0					
ANR	651113	AdditiveExpression	parts [ 0 ] . length ( ) + 1		649734	0		+			
ANR	651114	CallExpression	parts [ 0 ] . length ( )		649734	0					
ANR	651115	Callee	parts [ 0 ] . length		649734	0					
ANR	651116	MemberAccess	parts [ 0 ] . length		649734	0					
ANR	651117	ArrayIndexing	parts [ 0 ]		649734	0					
ANR	651118	Identifier	parts		649734	0					
ANR	651119	PrimaryExpression	0		649734	1					
ANR	651120	Identifier	length		649734	1					
ANR	651121	ArgumentList			649734	1					
ANR	651122	PrimaryExpression	1		649734	1					
ANR	651123	Identifier	toInt		649734	1					
ANR	651124	ArgumentList	& isInt		649734	1					
ANR	651125	Argument	& isInt		649734	0					
ANR	651126	UnaryOperationExpression	& isInt		649734	0					
ANR	651127	UnaryOperator	&		649734	0					
ANR	651128	Identifier	isInt		649734	1					
ANR	651129	IfStatement	if ( isInt && desktop != KWindowSystem :: currentDesktop ( ) )		649734	2					
ANR	651130	Condition	isInt && desktop != KWindowSystem :: currentDesktop ( )	269:16:13276:13326	649734	0	True				
ANR	651131	AndExpression	isInt && desktop != KWindowSystem :: currentDesktop ( )		649734	0		&&			
ANR	651132	Identifier	isInt		649734	0					
ANR	651133	EqualityExpression	desktop != KWindowSystem :: currentDesktop ( )		649734	1		!=			
ANR	651134	Identifier	desktop		649734	0					
ANR	651135	CallExpression	KWindowSystem :: currentDesktop ( )		649734	1					
ANR	651136	Callee	KWindowSystem :: currentDesktop		649734	0					
ANR	651137	Identifier	KWindowSystem :: currentDesktop		649734	0					
ANR	651138	ArgumentList			649734	1					
ANR	651139	CompoundStatement		143:69:7501:7501	649734	1					
ANR	651140	ExpressionStatement	matches << desktopMatch ( desktop )	270:16:13347:13379	649734	0	True				
ANR	651141	ShiftExpression	matches << desktopMatch ( desktop )		649734	0		<<			
ANR	651142	Identifier	matches		649734	0					
ANR	651143	CallExpression	desktopMatch ( desktop )		649734	1					
ANR	651144	Callee	desktopMatch		649734	0					
ANR	651145	Identifier	desktopMatch		649734	0					
ANR	651146	ArgumentList	desktop		649734	1					
ANR	651147	Argument	desktop		649734	0					
ANR	651148	Identifier	desktop		649734	0					
ANR	651149	ExpressionStatement	desktopAdded = true	271:16:13397:13416	649734	1	True				
ANR	651150	AssignmentExpression	desktopAdded = true		649734	0		=			
ANR	651151	Identifier	desktopAdded		649734	0					
ANR	651152	Identifier	true		649734	1					
ANR	651153	IdentifierDeclStatement	"QHashIterator < WId , KWindowInfo > it ( m_windows ) ;"	277:4:13495:13540	649734	10	True				
ANR	651154	IdentifierDecl	it ( m_windows )		649734	0					
ANR	651155	IdentifierDeclType	"QHashIterator < WId , KWindowInfo >"		649734	0					
ANR	651156	Identifier	it		649734	1					
ANR	651157	Identifier	m_windows		649734	2					
ANR	651158	WhileStatement	while ( it . hasNext ( ) )		649734	11					
ANR	651159	Condition	it . hasNext ( )	278:11:13553:13564	649734	0	True				
ANR	651160	CallExpression	it . hasNext ( )		649734	0					
ANR	651161	Callee	it . hasNext		649734	0					
ANR	651162	MemberAccess	it . hasNext		649734	0					
ANR	651163	Identifier	it		649734	0					
ANR	651164	Identifier	hasNext		649734	1					
ANR	651165	ArgumentList			649734	1					
ANR	651166	CompoundStatement		160:8:7972:8033	649734	1					
ANR	651167	ExpressionStatement	it . next ( )	279:8:13577:13586	649734	0	True				
ANR	651168	CallExpression	it . next ( )		649734	0					
ANR	651169	Callee	it . next		649734	0					
ANR	651170	MemberAccess	it . next		649734	0					
ANR	651171	Identifier	it		649734	0					
ANR	651172	Identifier	next		649734	1					
ANR	651173	ArgumentList			649734	1					
ANR	651174	IdentifierDeclStatement	WId w = it . key ( ) ;	280:8:13596:13612	649734	1	True				
ANR	651175	IdentifierDecl	w = it . key ( )		649734	0					
ANR	651176	IdentifierDeclType	WId		649734	0					
ANR	651177	Identifier	w		649734	1					
ANR	651178	AssignmentExpression	w = it . key ( )		649734	2		=			
ANR	651179	Identifier	w		649734	0					
ANR	651180	CallExpression	it . key ( )		649734	1					
ANR	651181	Callee	it . key		649734	0					
ANR	651182	MemberAccess	it . key		649734	0					
ANR	651183	Identifier	it		649734	0					
ANR	651184	Identifier	key		649734	1					
ANR	651185	ArgumentList			649734	1					
ANR	651186	IfStatement	if ( ! KWindowSystem :: hasWId ( w ) )		649734	2					
ANR	651187	Condition	! KWindowSystem :: hasWId ( w )	281:12:13626:13650	649734	0	True				
ANR	651188	UnaryOperationExpression	! KWindowSystem :: hasWId ( w )		649734	0					
ANR	651189	UnaryOperator	!		649734	0					
ANR	651190	CallExpression	KWindowSystem :: hasWId ( w )		649734	1					
ANR	651191	Callee	KWindowSystem :: hasWId		649734	0					
ANR	651192	Identifier	KWindowSystem :: hasWId		649734	0					
ANR	651193	ArgumentList	w		649734	1					
ANR	651194	Argument	w		649734	0					
ANR	651195	Identifier	w		649734	0					
ANR	651196	CompoundStatement		155:39:7825:7825	649734	1					
ANR	651197	ContinueStatement	continue ;	282:12:13667:13675	649734	0	True				
ANR	651198	IdentifierDeclStatement	KWindowInfo info = it . value ( ) ;	285:8:13761:13790	649734	3	True				
ANR	651199	IdentifierDecl	info = it . value ( )		649734	0					
ANR	651200	IdentifierDeclType	KWindowInfo		649734	0					
ANR	651201	Identifier	info		649734	1					
ANR	651202	AssignmentExpression	info = it . value ( )		649734	2		=			
ANR	651203	Identifier	info		649734	0					
ANR	651204	CallExpression	it . value ( )		649734	1					
ANR	651205	Callee	it . value		649734	0					
ANR	651206	MemberAccess	it . value		649734	0					
ANR	651207	Identifier	it		649734	0					
ANR	651208	Identifier	value		649734	1					
ANR	651209	ArgumentList			649734	1					
ANR	651210	IdentifierDeclStatement	QString className = QString :: fromUtf8 ( info . windowClassName ( ) ) ;	286:8:13800:13861	649734	4	True				
ANR	651211	IdentifierDecl	className = QString :: fromUtf8 ( info . windowClassName ( ) )		649734	0					
ANR	651212	IdentifierDeclType	QString		649734	0					
ANR	651213	Identifier	className		649734	1					
ANR	651214	AssignmentExpression	className = QString :: fromUtf8 ( info . windowClassName ( ) )		649734	2		=			
ANR	651215	Identifier	className		649734	0					
ANR	651216	CallExpression	QString :: fromUtf8 ( info . windowClassName ( ) )		649734	1					
ANR	651217	Callee	QString :: fromUtf8		649734	0					
ANR	651218	Identifier	QString :: fromUtf8		649734	0					
ANR	651219	ArgumentList	info . windowClassName ( )		649734	1					
ANR	651220	Argument	info . windowClassName ( )		649734	0					
ANR	651221	CallExpression	info . windowClassName ( )		649734	0					
ANR	651222	Callee	info . windowClassName		649734	0					
ANR	651223	MemberAccess	info . windowClassName		649734	0					
ANR	651224	Identifier	info		649734	0					
ANR	651225	Identifier	windowClassName		649734	1					
ANR	651226	ArgumentList			649734	1					
ANR	651227	IfStatement	"if ( info . name ( ) . startsWith ( term , Qt :: CaseInsensitive ) || className . startsWith ( term , Qt :: CaseInsensitive ) )"		649734	5					
ANR	651228	Condition	"info . name ( ) . startsWith ( term , Qt :: CaseInsensitive ) || className . startsWith ( term , Qt :: CaseInsensitive )"	287:12:13875:13986	649734	0	True				
ANR	651229	OrExpression	"info . name ( ) . startsWith ( term , Qt :: CaseInsensitive ) || className . startsWith ( term , Qt :: CaseInsensitive )"		649734	0		||			
ANR	651230	CallExpression	"info . name ( ) . startsWith ( term , Qt :: CaseInsensitive )"		649734	0					
ANR	651231	Callee	info . name ( ) . startsWith		649734	0					
ANR	651232	MemberAccess	info . name ( ) . startsWith		649734	0					
ANR	651233	CallExpression	info . name ( )		649734	0					
ANR	651234	Callee	info . name		649734	0					
ANR	651235	MemberAccess	info . name		649734	0					
ANR	651236	Identifier	info		649734	0					
ANR	651237	Identifier	name		649734	1					
ANR	651238	ArgumentList			649734	1					
ANR	651239	Identifier	startsWith		649734	1					
ANR	651240	ArgumentList	term		649734	1					
ANR	651241	Argument	term		649734	0					
ANR	651242	Identifier	term		649734	0					
ANR	651243	Argument	Qt :: CaseInsensitive		649734	1					
ANR	651244	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	651245	CallExpression	"className . startsWith ( term , Qt :: CaseInsensitive )"		649734	1					
ANR	651246	Callee	className . startsWith		649734	0					
ANR	651247	MemberAccess	className . startsWith		649734	0					
ANR	651248	Identifier	className		649734	0					
ANR	651249	Identifier	startsWith		649734	1					
ANR	651250	ArgumentList	term		649734	1					
ANR	651251	Argument	term		649734	0					
ANR	651252	Identifier	term		649734	0					
ANR	651253	Argument	Qt :: CaseInsensitive		649734	1					
ANR	651254	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	651255	CompoundStatement		162:61:8161:8161	649734	1					
ANR	651256	ExpressionStatement	"matches << windowMatch ( info , action , 0.8 , Plasma :: QueryMatch :: ExactMatch )"	289:12:14003:14076	649734	0	True				
ANR	651257	ShiftExpression	"matches << windowMatch ( info , action , 0.8 , Plasma :: QueryMatch :: ExactMatch )"		649734	0		<<			
ANR	651258	Identifier	matches		649734	0					
ANR	651259	CallExpression	"windowMatch ( info , action , 0.8 , Plasma :: QueryMatch :: ExactMatch )"		649734	1					
ANR	651260	Callee	windowMatch		649734	0					
ANR	651261	Identifier	windowMatch		649734	0					
ANR	651262	ArgumentList	info		649734	1					
ANR	651263	Argument	info		649734	0					
ANR	651264	Identifier	info		649734	0					
ANR	651265	Argument	action		649734	1					
ANR	651266	Identifier	action		649734	0					
ANR	651267	Argument	0.8		649734	2					
ANR	651268	PrimaryExpression	0.8		649734	0					
ANR	651269	Argument	Plasma :: QueryMatch :: ExactMatch		649734	3					
ANR	651270	Identifier	Plasma :: QueryMatch :: ExactMatch		649734	0					
ANR	651271	ElseStatement	else		649734	0					
ANR	651272	IfStatement	"if ( ( info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive ) ) && actionSupported ( info , action ) )"		649734	0					
ANR	651273	Condition	"( info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive ) ) && actionSupported ( info , action )"	290:19:14097:14253	649734	0	True				
ANR	651274	AndExpression	"( info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive ) ) && actionSupported ( info , action )"		649734	0		&&			
ANR	651275	OrExpression	"info . name ( ) . contains ( term , Qt :: CaseInsensitive ) || className . contains ( term , Qt :: CaseInsensitive )"		649734	0		||			
ANR	651276	CallExpression	"info . name ( ) . contains ( term , Qt :: CaseInsensitive )"		649734	0					
ANR	651277	Callee	info . name ( ) . contains		649734	0					
ANR	651278	MemberAccess	info . name ( ) . contains		649734	0					
ANR	651279	CallExpression	info . name ( )		649734	0					
ANR	651280	Callee	info . name		649734	0					
ANR	651281	MemberAccess	info . name		649734	0					
ANR	651282	Identifier	info		649734	0					
ANR	651283	Identifier	name		649734	1					
ANR	651284	ArgumentList			649734	1					
ANR	651285	Identifier	contains		649734	1					
ANR	651286	ArgumentList	term		649734	1					
ANR	651287	Argument	term		649734	0					
ANR	651288	Identifier	term		649734	0					
ANR	651289	Argument	Qt :: CaseInsensitive		649734	1					
ANR	651290	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	651291	CallExpression	"className . contains ( term , Qt :: CaseInsensitive )"		649734	1					
ANR	651292	Callee	className . contains		649734	0					
ANR	651293	MemberAccess	className . contains		649734	0					
ANR	651294	Identifier	className		649734	0					
ANR	651295	Identifier	contains		649734	1					
ANR	651296	ArgumentList	term		649734	1					
ANR	651297	Argument	term		649734	0					
ANR	651298	Identifier	term		649734	0					
ANR	651299	Argument	Qt :: CaseInsensitive		649734	1					
ANR	651300	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	651301	CallExpression	"actionSupported ( info , action )"		649734	1					
ANR	651302	Callee	actionSupported		649734	0					
ANR	651303	Identifier	actionSupported		649734	0					
ANR	651304	ArgumentList	info		649734	1					
ANR	651305	Argument	info		649734	0					
ANR	651306	Identifier	info		649734	0					
ANR	651307	Argument	action		649734	1					
ANR	651308	Identifier	action		649734	0					
ANR	651309	CompoundStatement		166:43:8428:8428	649734	1					
ANR	651310	ExpressionStatement	"matches << windowMatch ( info , action , 0.7 , Plasma :: QueryMatch :: PossibleMatch )"	293:12:14270:14346	649734	0	True				
ANR	651311	ShiftExpression	"matches << windowMatch ( info , action , 0.7 , Plasma :: QueryMatch :: PossibleMatch )"		649734	0		<<			
ANR	651312	Identifier	matches		649734	0					
ANR	651313	CallExpression	"windowMatch ( info , action , 0.7 , Plasma :: QueryMatch :: PossibleMatch )"		649734	1					
ANR	651314	Callee	windowMatch		649734	0					
ANR	651315	Identifier	windowMatch		649734	0					
ANR	651316	ArgumentList	info		649734	1					
ANR	651317	Argument	info		649734	0					
ANR	651318	Identifier	info		649734	0					
ANR	651319	Argument	action		649734	1					
ANR	651320	Identifier	action		649734	0					
ANR	651321	Argument	0.7		649734	2					
ANR	651322	PrimaryExpression	0.7		649734	0					
ANR	651323	Argument	Plasma :: QueryMatch :: PossibleMatch		649734	3					
ANR	651324	Identifier	Plasma :: QueryMatch :: PossibleMatch		649734	0					
ANR	651325	Statement	foreach	298:4:14412:14418	649734	12	True				
ANR	651326	Statement	(	298:12:14420:14420	649734	13	True				
ANR	651327	Statement	const	298:13:14421:14425	649734	14	True				
ANR	651328	Statement	QString	298:19:14427:14433	649734	15	True				
ANR	651329	Statement	&	298:26:14434:14434	649734	16	True				
ANR	651330	Statement	desktopName	298:28:14436:14446	649734	17	True				
ANR	651331	Statement	","	298:39:14447:14447	649734	18	True				
ANR	651332	Statement	m_desktopNames	298:41:14449:14462	649734	19	True				
ANR	651333	Statement	)	298:55:14463:14463	649734	20	True				
ANR	651334	CompoundStatement		173:8:8647:8699	649734	21					
ANR	651335	IdentifierDeclStatement	int desktop = m_desktopNames . indexOf ( desktopName ) + 1 ;	299:8:14475:14527	649734	0	True				
ANR	651336	IdentifierDecl	desktop = m_desktopNames . indexOf ( desktopName ) + 1		649734	0					
ANR	651337	IdentifierDeclType	int		649734	0					
ANR	651338	Identifier	desktop		649734	1					
ANR	651339	AssignmentExpression	desktop = m_desktopNames . indexOf ( desktopName ) + 1		649734	2		=			
ANR	651340	Identifier	desktop		649734	0					
ANR	651341	AdditiveExpression	m_desktopNames . indexOf ( desktopName ) + 1		649734	1		+			
ANR	651342	CallExpression	m_desktopNames . indexOf ( desktopName )		649734	0					
ANR	651343	Callee	m_desktopNames . indexOf		649734	0					
ANR	651344	MemberAccess	m_desktopNames . indexOf		649734	0					
ANR	651345	Identifier	m_desktopNames		649734	0					
ANR	651346	Identifier	indexOf		649734	1					
ANR	651347	ArgumentList	desktopName		649734	1					
ANR	651348	Argument	desktopName		649734	0					
ANR	651349	Identifier	desktopName		649734	0					
ANR	651350	PrimaryExpression	1		649734	1					
ANR	651351	IfStatement	"if ( desktopName . contains ( term , Qt :: CaseInsensitive ) )"		649734	1					
ANR	651352	Condition	"desktopName . contains ( term , Qt :: CaseInsensitive )"	300:12:14541:14587	649734	0	True				
ANR	651353	CallExpression	"desktopName . contains ( term , Qt :: CaseInsensitive )"		649734	0					
ANR	651354	Callee	desktopName . contains		649734	0					
ANR	651355	MemberAccess	desktopName . contains		649734	0					
ANR	651356	Identifier	desktopName		649734	0					
ANR	651357	Identifier	contains		649734	1					
ANR	651358	ArgumentList	term		649734	1					
ANR	651359	Argument	term		649734	0					
ANR	651360	Identifier	term		649734	0					
ANR	651361	Argument	Qt :: CaseInsensitive		649734	1					
ANR	651362	Identifier	Qt :: CaseInsensitive		649734	0					
ANR	651363	CompoundStatement		182:12:9152:9197	649734	1					
ANR	651364	IfStatement	if ( ! desktopAdded && desktop != KWindowSystem :: currentDesktop ( ) )		649734	0					
ANR	651365	Condition	! desktopAdded && desktop != KWindowSystem :: currentDesktop ( )	303:16:14756:14814	649734	0	True				
ANR	651366	AndExpression	! desktopAdded && desktop != KWindowSystem :: currentDesktop ( )		649734	0		&&			
ANR	651367	UnaryOperationExpression	! desktopAdded		649734	0					
ANR	651368	UnaryOperator	!		649734	0					
ANR	651369	Identifier	desktopAdded		649734	1					
ANR	651370	EqualityExpression	desktop != KWindowSystem :: currentDesktop ( )		649734	1		!=			
ANR	651371	Identifier	desktop		649734	0					
ANR	651372	CallExpression	KWindowSystem :: currentDesktop ( )		649734	1					
ANR	651373	Callee	KWindowSystem :: currentDesktop		649734	0					
ANR	651374	Identifier	KWindowSystem :: currentDesktop		649734	0					
ANR	651375	ArgumentList			649734	1					
ANR	651376	CompoundStatement		177:77:8989:8989	649734	1					
ANR	651377	ExpressionStatement	"matches << desktopMatch ( desktop , 0.8 )"	304:16:14835:14872	649734	0	True				
ANR	651378	ShiftExpression	"matches << desktopMatch ( desktop , 0.8 )"		649734	0		<<			
ANR	651379	Identifier	matches		649734	0					
ANR	651380	CallExpression	"desktopMatch ( desktop , 0.8 )"		649734	1					
ANR	651381	Callee	desktopMatch		649734	0					
ANR	651382	Identifier	desktopMatch		649734	0					
ANR	651383	ArgumentList	desktop		649734	1					
ANR	651384	Argument	desktop		649734	0					
ANR	651385	Identifier	desktop		649734	0					
ANR	651386	Argument	0.8		649734	1					
ANR	651387	PrimaryExpression	0.8		649734	0					
ANR	651388	IdentifierDeclStatement	"QHashIterator < WId , KWindowInfo > it ( m_windows ) ;"	308:12:14980:15025	649734	1	True				
ANR	651389	IdentifierDecl	it ( m_windows )		649734	0					
ANR	651390	IdentifierDeclType	"QHashIterator < WId , KWindowInfo >"		649734	0					
ANR	651391	Identifier	it		649734	1					
ANR	651392	Identifier	m_windows		649734	2					
ANR	651393	WhileStatement	while ( it . hasNext ( ) )		649734	2					
ANR	651394	Condition	it . hasNext ( )	309:19:15046:15057	649734	0	True				
ANR	651395	CallExpression	it . hasNext ( )		649734	0					
ANR	651396	Callee	it . hasNext		649734	0					
ANR	651397	MemberAccess	it . hasNext		649734	0					
ANR	651398	Identifier	it		649734	0					
ANR	651399	Identifier	hasNext		649734	1					
ANR	651400	ArgumentList			649734	1					
ANR	651401	CompoundStatement		185:16:9277:9306	649734	1					
ANR	651402	ExpressionStatement	it . next ( )	310:16:15078:15087	649734	0	True				
ANR	651403	CallExpression	it . next ( )		649734	0					
ANR	651404	Callee	it . next		649734	0					
ANR	651405	MemberAccess	it . next		649734	0					
ANR	651406	Identifier	it		649734	0					
ANR	651407	Identifier	next		649734	1					
ANR	651408	ArgumentList			649734	1					
ANR	651409	IdentifierDeclStatement	KWindowInfo info = it . value ( ) ;	311:16:15105:15134	649734	1	True				
ANR	651410	IdentifierDecl	info = it . value ( )		649734	0					
ANR	651411	IdentifierDeclType	KWindowInfo		649734	0					
ANR	651412	Identifier	info		649734	1					
ANR	651413	AssignmentExpression	info = it . value ( )		649734	2		=			
ANR	651414	Identifier	info		649734	0					
ANR	651415	CallExpression	it . value ( )		649734	1					
ANR	651416	Callee	it . value		649734	0					
ANR	651417	MemberAccess	it . value		649734	0					
ANR	651418	Identifier	it		649734	0					
ANR	651419	Identifier	value		649734	1					
ANR	651420	ArgumentList			649734	1					
ANR	651421	IfStatement	"if ( info . isOnDesktop ( desktop ) && actionSupported ( info , action ) )"		649734	2					
ANR	651422	Condition	"info . isOnDesktop ( desktop ) && actionSupported ( info , action )"	312:20:15156:15213	649734	0	True				
ANR	651423	AndExpression	"info . isOnDesktop ( desktop ) && actionSupported ( info , action )"		649734	0		&&			
ANR	651424	CallExpression	info . isOnDesktop ( desktop )		649734	0					
ANR	651425	Callee	info . isOnDesktop		649734	0					
ANR	651426	MemberAccess	info . isOnDesktop		649734	0					
ANR	651427	Identifier	info		649734	0					
ANR	651428	Identifier	isOnDesktop		649734	1					
ANR	651429	ArgumentList	desktop		649734	1					
ANR	651430	Argument	desktop		649734	0					
ANR	651431	Identifier	desktop		649734	0					
ANR	651432	CallExpression	"actionSupported ( info , action )"		649734	1					
ANR	651433	Callee	actionSupported		649734	0					
ANR	651434	Identifier	actionSupported		649734	0					
ANR	651435	ArgumentList	info		649734	1					
ANR	651436	Argument	info		649734	0					
ANR	651437	Identifier	info		649734	0					
ANR	651438	Argument	action		649734	1					
ANR	651439	Identifier	action		649734	0					
ANR	651440	CompoundStatement		186:80:9388:9388	649734	1					
ANR	651441	ExpressionStatement	"matches << windowMatch ( info , action , 0.5 , Plasma :: QueryMatch :: PossibleMatch )"	313:20:15238:15314	649734	0	True				
ANR	651442	ShiftExpression	"matches << windowMatch ( info , action , 0.5 , Plasma :: QueryMatch :: PossibleMatch )"		649734	0		<<			
ANR	651443	Identifier	matches		649734	0					
ANR	651444	CallExpression	"windowMatch ( info , action , 0.5 , Plasma :: QueryMatch :: PossibleMatch )"		649734	1					
ANR	651445	Callee	windowMatch		649734	0					
ANR	651446	Identifier	windowMatch		649734	0					
ANR	651447	ArgumentList	info		649734	1					
ANR	651448	Argument	info		649734	0					
ANR	651449	Identifier	info		649734	0					
ANR	651450	Argument	action		649734	1					
ANR	651451	Identifier	action		649734	0					
ANR	651452	Argument	0.5		649734	2					
ANR	651453	PrimaryExpression	0.5		649734	0					
ANR	651454	Argument	Plasma :: QueryMatch :: PossibleMatch		649734	3					
ANR	651455	Identifier	Plasma :: QueryMatch :: PossibleMatch		649734	0					
ANR	651456	IfStatement	if ( ! matches . isEmpty ( ) )		649734	22					
ANR	651457	Condition	! matches . isEmpty ( )	319:8:15373:15390	649734	0	True				
ANR	651458	UnaryOperationExpression	! matches . isEmpty ( )		649734	0					
ANR	651459	UnaryOperator	!		649734	0					
ANR	651460	CallExpression	matches . isEmpty ( )		649734	1					
ANR	651461	Callee	matches . isEmpty		649734	0					
ANR	651462	MemberAccess	matches . isEmpty		649734	0					
ANR	651463	Identifier	matches		649734	0					
ANR	651464	Identifier	isEmpty		649734	1					
ANR	651465	ArgumentList			649734	1					
ANR	651466	CompoundStatement		193:28:9565:9565	649734	1					
ANR	651467	ExpressionStatement	context . addMatches ( matches )	320:8:15403:15430	649734	0	True				
ANR	651468	CallExpression	context . addMatches ( matches )		649734	0					
ANR	651469	Callee	context . addMatches		649734	0					
ANR	651470	MemberAccess	context . addMatches		649734	0					
ANR	651471	Identifier	context		649734	0					
ANR	651472	Identifier	addMatches		649734	1					
ANR	651473	ArgumentList	matches		649734	1					
ANR	651474	Argument	matches		649734	0					
ANR	651475	Identifier	matches		649734	0					
ANR	651476	ReturnType	void		649734	1					
ANR	651477	Identifier	WindowsRunner :: match		649734	2					
ANR	651478	ParameterList	Plasma :: RunnerContext & context		649734	3					
ANR	651479	Parameter	Plasma :: RunnerContext & context	126:26:5795:5824	649734	0	True				
ANR	651480	ParameterType	Plasma :: RunnerContext &		649734	0					
ANR	651481	Identifier	context		649734	1					
ANR	651482	CFGEntryNode	ENTRY		649734		True				
ANR	651483	CFGExitNode	EXIT		649734		True				
ANR	651484	CFGErrorNode	ERROR		649734		True				
ANR	651485	Symbol	windowRole . isEmpty		649734						
ANR	651486	Symbol	windowClass . isEmpty		649734						
ANR	651487	Symbol	keywords		649734						
ANR	651488	Symbol	className . startsWith		649734						
ANR	651489	Symbol	windowRole		649734						
ANR	651490	Symbol	matches . isEmpty		649734						
ANR	651491	Symbol	KWindowSystem :: currentDesktop		649734						
ANR	651492	Symbol	& ok		649734						
ANR	651493	Symbol	Plasma :: QueryMatch :: ExactMatch		649734						
ANR	651494	Symbol	keyword . split		649734						
ANR	651495	Symbol	keywords [ 0 ] . length		649734						
ANR	651496	Symbol	Qt :: CaseInsensitive		649734						
ANR	651497	Symbol	locker		649734						
ANR	651498	Symbol	parts . size		649734						
ANR	651499	Symbol	KeepAboveAction		649734						
ANR	651500	Symbol	info . isOnDesktop		649734						
ANR	651501	Symbol	info . name		649734						
ANR	651502	Symbol	desktopName . contains		649734						
ANR	651503	Symbol	QString :: fromUtf8		649734						
ANR	651504	Symbol	info . windowClassName		649734						
ANR	651505	Symbol	context		649734						
ANR	651506	Symbol	isInt		649734						
ANR	651507	Symbol	action		649734						
ANR	651508	Symbol	windowName		649734						
ANR	651509	Symbol	keyword		649734						
ANR	651510	Symbol	KWindowSystem :: hasWId		649734						
ANR	651511	Symbol	info		649734						
ANR	651512	Symbol	it . hasNext		649734						
ANR	651513	Symbol	test		649734						
ANR	651514	Symbol	term . length		649734						
ANR	651515	Symbol	* keyword		649734						
ANR	651516	Symbol	m_desktopNames		649734						
ANR	651517	Symbol	* keywords		649734						
ANR	651518	Symbol	ActivateAction		649734						
ANR	651519	Symbol	it		649734						
ANR	651520	Symbol	matches		649734						
ANR	651521	Symbol	& isInt		649734						
ANR	651522	Symbol	MinimizeAction		649734						
ANR	651523	Symbol	desktopAdded		649734						
ANR	651524	Symbol	keyword . contains		649734						
ANR	651525	Symbol	windowClassCompare . contains		649734						
ANR	651526	Symbol	keyword . endsWith		649734						
ANR	651527	Symbol	parts [ 0 ] . length		649734						
ANR	651528	Symbol	className . contains		649734						
ANR	651529	Symbol	term . lastIndexOf		649734						
ANR	651530	Symbol	Plasma :: QueryMatch :: PossibleMatch		649734						
ANR	651531	Symbol	actionSupported		649734						
ANR	651532	Symbol	parts		649734						
ANR	651533	Symbol	true		649734						
ANR	651534	Symbol	QStringLiteral		649734						
ANR	651535	Symbol	FullscreenAction		649734						
ANR	651536	Symbol	info . windowRole		649734						
ANR	651537	Symbol	CloseAction		649734						
ANR	651538	Symbol	MaximizeAction		649734						
ANR	651539	Symbol	term . midRef ( parts [ 0 ] . length ( ) + 1 ) . toInt		649734						
ANR	651540	Symbol	info . name ( ) . startsWith		649734						
ANR	651541	Symbol	term . midRef		649734						
ANR	651542	Symbol	m_ready		649734						
ANR	651543	Symbol	KWindowSystem :: numberOfDesktops		649734						
ANR	651544	Symbol	term . startsWith		649734						
ANR	651545	Symbol	keyword . startsWith		649734						
ANR	651546	Symbol	windowName . isEmpty		649734						
ANR	651547	Symbol	className		649734						
ANR	651548	Symbol	term . split		649734						
ANR	651549	Symbol	info . name ( ) . contains		649734						
ANR	651550	Symbol	m_desktopNames . indexOf		649734						
ANR	651551	Symbol	QString :: fromUtf8 ( info . windowRole ( ) ) . contains		649734						
ANR	651552	Symbol	* parts		649734						
ANR	651553	Symbol	desktop		649734						
ANR	651554	Symbol	context . singleRunnerQueryMode		649734						
ANR	651555	Symbol	it . key		649734						
ANR	651556	Symbol	term		649734						
ANR	651557	Symbol	i18nc		649734						
ANR	651558	Symbol	ok		649734						
ANR	651559	Symbol	term . left		649734						
ANR	651560	Symbol	windowClassCompare		649734						
ANR	651561	Symbol	KeepBelowAction		649734						
ANR	651562	Symbol	term . endsWith		649734						
ANR	651563	Symbol	term . mid		649734						
ANR	651564	Symbol	it . value		649734						
ANR	651565	Symbol	* keyword . split		649734						
ANR	651566	Symbol	false		649734						
ANR	651567	Symbol	i		649734						
ANR	651568	Symbol	ShadeAction		649734						
ANR	651569	Symbol	info . windowClassClass		649734						
ANR	651570	Symbol	context . query		649734						
ANR	651571	Symbol	desktopName		649734						
ANR	651572	Symbol	w		649734						
ANR	651573	Symbol	windowClass		649734						
ANR	651574	Symbol	"keyword . split ( QStringLiteral ( ""="" ) ) [ 1 ] . toInt"		649734						
ANR	651575	Function	WindowsRunner :: run	325:0:15470:17729							
ANR	651576	FunctionDef	"WindowsRunner :: run (const Plasma :: RunnerContext & context , const Plasma :: QueryMatch & match)"		651575	0					
ANR	651577	CompoundStatement		326:0:15565:17729	651575	0					
ANR	651578	IdentifierDeclStatement	QMutexLocker locker ( & m_mutex ) ;	327:4:15571:15600	651575	0	True				
ANR	651579	IdentifierDecl	locker ( & m_mutex )		651575	0					
ANR	651580	IdentifierDeclType	QMutexLocker		651575	0					
ANR	651581	Identifier	locker		651575	1					
ANR	651582	UnaryOperationExpression	& m_mutex		651575	2					
ANR	651583	UnaryOperator	&		651575	0					
ANR	651584	Identifier	m_mutex		651575	1					
ANR	651585	Statement	Q_UNUSED	328:4:15606:15613	651575	1	True				
ANR	651586	Statement	(	328:12:15614:15614	651575	2	True				
ANR	651587	Statement	context	328:13:15615:15621	651575	3	True				
ANR	651588	Statement	)	328:20:15622:15622	651575	4	True				
ANR	651589	IfStatement	"if ( match . id ( ) . startsWith ( QLatin1String ( ""windows_desktop"" ) ) )"		651575	5					
ANR	651590	Condition	"match . id ( ) . startsWith ( QLatin1String ( ""windows_desktop"" ) )"	330:8:15663:15717	651575	0	True				
ANR	651591	CallExpression	"match . id ( ) . startsWith ( QLatin1String ( ""windows_desktop"" ) )"		651575	0					
ANR	651592	Callee	match . id ( ) . startsWith		651575	0					
ANR	651593	MemberAccess	match . id ( ) . startsWith		651575	0					
ANR	651594	CallExpression	match . id ( )		651575	0					
ANR	651595	Callee	match . id		651575	0					
ANR	651596	MemberAccess	match . id		651575	0					
ANR	651597	Identifier	match		651575	0					
ANR	651598	Identifier	id		651575	1					
ANR	651599	ArgumentList			651575	1					
ANR	651600	Identifier	startsWith		651575	1					
ANR	651601	ArgumentList	"QLatin1String ( ""windows_desktop"" )"		651575	1					
ANR	651602	Argument	"QLatin1String ( ""windows_desktop"" )"		651575	0					
ANR	651603	CallExpression	"QLatin1String ( ""windows_desktop"" )"		651575	0					
ANR	651604	Callee	QLatin1String		651575	0					
ANR	651605	Identifier	QLatin1String		651575	0					
ANR	651606	ArgumentList	"""windows_desktop"""		651575	1					
ANR	651607	Argument	"""windows_desktop"""		651575	0					
ANR	651608	PrimaryExpression	"""windows_desktop"""		651575	0					
ANR	651609	CompoundStatement		5:65:154:154	651575	1					
ANR	651610	ExpressionStatement	KWindowSystem :: setCurrentDesktop ( match . data ( ) . toInt ( ) )	331:8:15730:15784	651575	0	True				
ANR	651611	CallExpression	KWindowSystem :: setCurrentDesktop ( match . data ( ) . toInt ( ) )		651575	0					
ANR	651612	Callee	KWindowSystem :: setCurrentDesktop		651575	0					
ANR	651613	Identifier	KWindowSystem :: setCurrentDesktop		651575	0					
ANR	651614	ArgumentList	match . data ( ) . toInt ( )		651575	1					
ANR	651615	Argument	match . data ( ) . toInt ( )		651575	0					
ANR	651616	CallExpression	match . data ( ) . toInt ( )		651575	0					
ANR	651617	Callee	match . data ( ) . toInt		651575	0					
ANR	651618	MemberAccess	match . data ( ) . toInt		651575	0					
ANR	651619	CallExpression	match . data ( )		651575	0					
ANR	651620	Callee	match . data		651575	0					
ANR	651621	MemberAccess	match . data		651575	0					
ANR	651622	Identifier	match		651575	0					
ANR	651623	Identifier	data		651575	1					
ANR	651624	ArgumentList			651575	1					
ANR	651625	Identifier	toInt		651575	1					
ANR	651626	ArgumentList			651575	1					
ANR	651627	ReturnStatement	return ;	332:8:15794:15800	651575	1	True				
ANR	651628	IdentifierDeclStatement	"const QStringList parts = match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) ) ;"	335:4:15813:15889	651575	6	True				
ANR	651629	IdentifierDecl	"parts = match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) )"		651575	0					
ANR	651630	IdentifierDeclType	const QStringList		651575	0					
ANR	651631	Identifier	parts		651575	1					
ANR	651632	AssignmentExpression	"parts = match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) )"		651575	2		=			
ANR	651633	Identifier	parts		651575	0					
ANR	651634	CallExpression	"match . data ( ) . toString ( ) . split ( QStringLiteral ( ""_"" ) )"		651575	1					
ANR	651635	Callee	match . data ( ) . toString ( ) . split		651575	0					
ANR	651636	MemberAccess	match . data ( ) . toString ( ) . split		651575	0					
ANR	651637	CallExpression	match . data ( ) . toString ( )		651575	0					
ANR	651638	Callee	match . data ( ) . toString		651575	0					
ANR	651639	MemberAccess	match . data ( ) . toString		651575	0					
ANR	651640	CallExpression	match . data ( )		651575	0					
ANR	651641	Callee	match . data		651575	0					
ANR	651642	MemberAccess	match . data		651575	0					
ANR	651643	Identifier	match		651575	0					
ANR	651644	Identifier	data		651575	1					
ANR	651645	ArgumentList			651575	1					
ANR	651646	Identifier	toString		651575	1					
ANR	651647	ArgumentList			651575	1					
ANR	651648	Identifier	split		651575	1					
ANR	651649	ArgumentList	"QStringLiteral ( ""_"" )"		651575	1					
ANR	651650	Argument	"QStringLiteral ( ""_"" )"		651575	0					
ANR	651651	CallExpression	"QStringLiteral ( ""_"" )"		651575	0					
ANR	651652	Callee	QStringLiteral		651575	0					
ANR	651653	Identifier	QStringLiteral		651575	0					
ANR	651654	ArgumentList	"""_"""		651575	1					
ANR	651655	Argument	"""_"""		651575	0					
ANR	651656	PrimaryExpression	"""_"""		651575	0					
ANR	651657	IdentifierDeclStatement	WindowAction action = WindowAction ( parts [ 0 ] . toInt ( ) ) ;	336:4:15895:15947	651575	7	True				
ANR	651658	IdentifierDecl	action = WindowAction ( parts [ 0 ] . toInt ( ) )		651575	0					
ANR	651659	IdentifierDeclType	WindowAction		651575	0					
ANR	651660	Identifier	action		651575	1					
ANR	651661	AssignmentExpression	action = WindowAction ( parts [ 0 ] . toInt ( ) )		651575	2		=			
ANR	651662	Identifier	action		651575	0					
ANR	651663	CallExpression	WindowAction ( parts [ 0 ] . toInt ( ) )		651575	1					
ANR	651664	Callee	WindowAction		651575	0					
ANR	651665	Identifier	WindowAction		651575	0					
ANR	651666	ArgumentList	parts [ 0 ] . toInt ( )		651575	1					
ANR	651667	Argument	parts [ 0 ] . toInt ( )		651575	0					
ANR	651668	CallExpression	parts [ 0 ] . toInt ( )		651575	0					
ANR	651669	Callee	parts [ 0 ] . toInt		651575	0					
ANR	651670	MemberAccess	parts [ 0 ] . toInt		651575	0					
ANR	651671	ArrayIndexing	parts [ 0 ]		651575	0					
ANR	651672	Identifier	parts		651575	0					
ANR	651673	PrimaryExpression	0		651575	1					
ANR	651674	Identifier	toInt		651575	1					
ANR	651675	ArgumentList			651575	1					
ANR	651676	IdentifierDeclStatement	WId w ( parts [ 1 ] . toULong ( ) ) ;	337:4:15953:15978	651575	8	True				
ANR	651677	IdentifierDecl	w ( parts [ 1 ] . toULong ( ) )		651575	0					
ANR	651678	IdentifierDeclType	WId		651575	0					
ANR	651679	Identifier	w		651575	1					
ANR	651680	CallExpression	parts [ 1 ] . toULong ( )		651575	2					
ANR	651681	Callee	parts [ 1 ] . toULong		651575	0					
ANR	651682	MemberAccess	parts [ 1 ] . toULong		651575	0					
ANR	651683	ArrayIndexing	parts [ 1 ]		651575	0					
ANR	651684	Identifier	parts		651575	0					
ANR	651685	PrimaryExpression	1		651575	1					
ANR	651686	Identifier	toULong		651575	1					
ANR	651687	ArgumentList			651575	1					
ANR	651688	IdentifierDeclStatement	"QHash < WId , KWindowInfo > :: iterator i = m_windows . find ( w ) ;"	339:4:16066:16121	651575	9	True				
ANR	651689	IdentifierDecl	i = m_windows . find ( w )		651575	0					
ANR	651690	IdentifierDeclType	"QHash < WId , KWindowInfo > :: iterator"		651575	0					
ANR	651691	Identifier	i		651575	1					
ANR	651692	AssignmentExpression	i = m_windows . find ( w )		651575	2		=			
ANR	651693	Identifier	i		651575	0					
ANR	651694	CallExpression	m_windows . find ( w )		651575	1					
ANR	651695	Callee	m_windows . find		651575	0					
ANR	651696	MemberAccess	m_windows . find		651575	0					
ANR	651697	Identifier	m_windows		651575	0					
ANR	651698	Identifier	find		651575	1					
ANR	651699	ArgumentList	w		651575	1					
ANR	651700	Argument	w		651575	0					
ANR	651701	Identifier	w		651575	0					
ANR	651702	IdentifierDeclStatement	KWindowInfo info = i . value ( ) ;	340:4:16127:16155	651575	10	True				
ANR	651703	IdentifierDecl	info = i . value ( )		651575	0					
ANR	651704	IdentifierDeclType	KWindowInfo		651575	0					
ANR	651705	Identifier	info		651575	1					
ANR	651706	AssignmentExpression	info = i . value ( )		651575	2		=			
ANR	651707	Identifier	info		651575	0					
ANR	651708	CallExpression	i . value ( )		651575	1					
ANR	651709	Callee	i . value		651575	0					
ANR	651710	MemberAccess	i . value		651575	0					
ANR	651711	Identifier	i		651575	0					
ANR	651712	Identifier	value		651575	1					
ANR	651713	ArgumentList			651575	1					
ANR	651714	SwitchStatement	switch ( action )		651575	11					
ANR	651715	Condition	action	341:12:16169:16174	651575	0	True				
ANR	651716	Identifier	action		651575	0					
ANR	651717	CompoundStatement		16:20:611:611	651575	1					
ANR	651718	Label	case ActivateAction :	342:4:16183:16202	651575	0	True				
ANR	651719	Identifier	ActivateAction		651575	0					
ANR	651720	ExpressionStatement	KWindowSystem :: forceActiveWindow ( w )	343:8:16212:16247	651575	1	True				
ANR	651721	CallExpression	KWindowSystem :: forceActiveWindow ( w )		651575	0					
ANR	651722	Callee	KWindowSystem :: forceActiveWindow		651575	0					
ANR	651723	Identifier	KWindowSystem :: forceActiveWindow		651575	0					
ANR	651724	ArgumentList	w		651575	1					
ANR	651725	Argument	w		651575	0					
ANR	651726	Identifier	w		651575	0					
ANR	651727	BreakStatement	break ;	344:8:16257:16262	651575	2	True				
ANR	651728	Label	case CloseAction :	345:4:16268:16284	651575	3	True				
ANR	651729	Identifier	CloseAction		651575	0					
ANR	651730	CompoundStatement		22:8:738:794	651575	4					
ANR	651731	IdentifierDeclStatement	"NETRootInfo ri ( QX11Info :: connection ( ) , NET :: CloseWindow ) ;"	347:8:16304:16360	651575	0	True				
ANR	651732	IdentifierDecl	"ri ( QX11Info :: connection ( ) , NET :: CloseWindow )"		651575	0					
ANR	651733	IdentifierDeclType	NETRootInfo		651575	0					
ANR	651734	Identifier	ri		651575	1					
ANR	651735	Expression	"QX11Info :: connection ( ) , NET :: CloseWindow"		651575	2					
ANR	651736	CallExpression	QX11Info :: connection ( )		651575	0					
ANR	651737	Callee	QX11Info :: connection		651575	0					
ANR	651738	Identifier	QX11Info :: connection		651575	0					
ANR	651739	ArgumentList			651575	1					
ANR	651740	Identifier	NET :: CloseWindow		651575	1					
ANR	651741	ExpressionStatement	ri . closeWindowRequest ( w )	348:8:16370:16394	651575	1	True				
ANR	651742	CallExpression	ri . closeWindowRequest ( w )		651575	0					
ANR	651743	Callee	ri . closeWindowRequest		651575	0					
ANR	651744	MemberAccess	ri . closeWindowRequest		651575	0					
ANR	651745	Identifier	ri		651575	0					
ANR	651746	Identifier	closeWindowRequest		651575	1					
ANR	651747	ArgumentList	w		651575	1					
ANR	651748	Argument	w		651575	0					
ANR	651749	Identifier	w		651575	0					
ANR	651750	BreakStatement	break ;	349:8:16404:16409	651575	2	True				
ANR	651751	Label	case MinimizeAction :	351:4:16425:16444	651575	5	True				
ANR	651752	Identifier	MinimizeAction		651575	0					
ANR	651753	IfStatement	if ( info . isMinimized ( ) )		651575	6					
ANR	651754	Condition	info . isMinimized ( )	352:12:16458:16475	651575	0	True				
ANR	651755	CallExpression	info . isMinimized ( )		651575	0					
ANR	651756	Callee	info . isMinimized		651575	0					
ANR	651757	MemberAccess	info . isMinimized		651575	0					
ANR	651758	Identifier	info		651575	0					
ANR	651759	Identifier	isMinimized		651575	1					
ANR	651760	ArgumentList			651575	1					
ANR	651761	CompoundStatement		27:32:912:912	651575	1					
ANR	651762	ExpressionStatement	KWindowSystem :: unminimizeWindow ( w )	353:12:16492:16526	651575	0	True				
ANR	651763	CallExpression	KWindowSystem :: unminimizeWindow ( w )		651575	0					
ANR	651764	Callee	KWindowSystem :: unminimizeWindow		651575	0					
ANR	651765	Identifier	KWindowSystem :: unminimizeWindow		651575	0					
ANR	651766	ArgumentList	w		651575	1					
ANR	651767	Argument	w		651575	0					
ANR	651768	Identifier	w		651575	0					
ANR	651769	ElseStatement	else		651575	0					
ANR	651770	CompoundStatement		29:15:977:977	651575	0					
ANR	651771	ExpressionStatement	KWindowSystem :: minimizeWindow ( w )	355:12:16557:16589	651575	0	True				
ANR	651772	CallExpression	KWindowSystem :: minimizeWindow ( w )		651575	0					
ANR	651773	Callee	KWindowSystem :: minimizeWindow		651575	0					
ANR	651774	Identifier	KWindowSystem :: minimizeWindow		651575	0					
ANR	651775	ArgumentList	w		651575	1					
ANR	651776	Argument	w		651575	0					
ANR	651777	Identifier	w		651575	0					
ANR	651778	BreakStatement	break ;	357:8:16609:16614	651575	7	True				
ANR	651779	Label	case MaximizeAction :	358:4:16620:16639	651575	8	True				
ANR	651780	Identifier	MaximizeAction		651575	0					
ANR	651781	IfStatement	if ( info . hasState ( NET :: Max ) )		651575	9					
ANR	651782	Condition	info . hasState ( NET :: Max )	359:12:16653:16675	651575	0	True				
ANR	651783	CallExpression	info . hasState ( NET :: Max )		651575	0					
ANR	651784	Callee	info . hasState		651575	0					
ANR	651785	MemberAccess	info . hasState		651575	0					
ANR	651786	Identifier	info		651575	0					
ANR	651787	Identifier	hasState		651575	1					
ANR	651788	ArgumentList	NET :: Max		651575	1					
ANR	651789	Argument	NET :: Max		651575	0					
ANR	651790	Identifier	NET :: Max		651575	0					
ANR	651791	CompoundStatement		34:37:1112:1112	651575	1					
ANR	651792	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: Max )"	360:12:16692:16730	651575	0	True				
ANR	651793	CallExpression	"KWindowSystem :: clearState ( w , NET :: Max )"		651575	0					
ANR	651794	Callee	KWindowSystem :: clearState		651575	0					
ANR	651795	Identifier	KWindowSystem :: clearState		651575	0					
ANR	651796	ArgumentList	w		651575	1					
ANR	651797	Argument	w		651575	0					
ANR	651798	Identifier	w		651575	0					
ANR	651799	Argument	NET :: Max		651575	1					
ANR	651800	Identifier	NET :: Max		651575	0					
ANR	651801	ElseStatement	else		651575	0					
ANR	651802	CompoundStatement		36:15:1181:1181	651575	0					
ANR	651803	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: Max )"	362:12:16761:16797	651575	0	True				
ANR	651804	CallExpression	"KWindowSystem :: setState ( w , NET :: Max )"		651575	0					
ANR	651805	Callee	KWindowSystem :: setState		651575	0					
ANR	651806	Identifier	KWindowSystem :: setState		651575	0					
ANR	651807	ArgumentList	w		651575	1					
ANR	651808	Argument	w		651575	0					
ANR	651809	Identifier	w		651575	0					
ANR	651810	Argument	NET :: Max		651575	1					
ANR	651811	Identifier	NET :: Max		651575	0					
ANR	651812	BreakStatement	break ;	364:8:16817:16822	651575	10	True				
ANR	651813	Label	case FullscreenAction :	365:4:16828:16849	651575	11	True				
ANR	651814	Identifier	FullscreenAction		651575	0					
ANR	651815	IfStatement	if ( info . hasState ( NET :: FullScreen ) )		651575	12					
ANR	651816	Condition	info . hasState ( NET :: FullScreen )	366:12:16863:16892	651575	0	True				
ANR	651817	CallExpression	info . hasState ( NET :: FullScreen )		651575	0					
ANR	651818	Callee	info . hasState		651575	0					
ANR	651819	MemberAccess	info . hasState		651575	0					
ANR	651820	Identifier	info		651575	0					
ANR	651821	Identifier	hasState		651575	1					
ANR	651822	ArgumentList	NET :: FullScreen		651575	1					
ANR	651823	Argument	NET :: FullScreen		651575	0					
ANR	651824	Identifier	NET :: FullScreen		651575	0					
ANR	651825	CompoundStatement		41:44:1329:1329	651575	1					
ANR	651826	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: FullScreen )"	367:12:16909:16954	651575	0	True				
ANR	651827	CallExpression	"KWindowSystem :: clearState ( w , NET :: FullScreen )"		651575	0					
ANR	651828	Callee	KWindowSystem :: clearState		651575	0					
ANR	651829	Identifier	KWindowSystem :: clearState		651575	0					
ANR	651830	ArgumentList	w		651575	1					
ANR	651831	Argument	w		651575	0					
ANR	651832	Identifier	w		651575	0					
ANR	651833	Argument	NET :: FullScreen		651575	1					
ANR	651834	Identifier	NET :: FullScreen		651575	0					
ANR	651835	ElseStatement	else		651575	0					
ANR	651836	CompoundStatement		43:15:1405:1405	651575	0					
ANR	651837	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: FullScreen )"	369:12:16985:17028	651575	0	True				
ANR	651838	CallExpression	"KWindowSystem :: setState ( w , NET :: FullScreen )"		651575	0					
ANR	651839	Callee	KWindowSystem :: setState		651575	0					
ANR	651840	Identifier	KWindowSystem :: setState		651575	0					
ANR	651841	ArgumentList	w		651575	1					
ANR	651842	Argument	w		651575	0					
ANR	651843	Identifier	w		651575	0					
ANR	651844	Argument	NET :: FullScreen		651575	1					
ANR	651845	Identifier	NET :: FullScreen		651575	0					
ANR	651846	BreakStatement	break ;	371:8:17048:17053	651575	13	True				
ANR	651847	Label	case ShadeAction :	372:4:17059:17075	651575	14	True				
ANR	651848	Identifier	ShadeAction		651575	0					
ANR	651849	IfStatement	if ( info . hasState ( NET :: Shaded ) )		651575	15					
ANR	651850	Condition	info . hasState ( NET :: Shaded )	373:12:17089:17114	651575	0	True				
ANR	651851	CallExpression	info . hasState ( NET :: Shaded )		651575	0					
ANR	651852	Callee	info . hasState		651575	0					
ANR	651853	MemberAccess	info . hasState		651575	0					
ANR	651854	Identifier	info		651575	0					
ANR	651855	Identifier	hasState		651575	1					
ANR	651856	ArgumentList	NET :: Shaded		651575	1					
ANR	651857	Argument	NET :: Shaded		651575	0					
ANR	651858	Identifier	NET :: Shaded		651575	0					
ANR	651859	CompoundStatement		48:40:1551:1551	651575	1					
ANR	651860	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: Shaded )"	374:12:17131:17172	651575	0	True				
ANR	651861	CallExpression	"KWindowSystem :: clearState ( w , NET :: Shaded )"		651575	0					
ANR	651862	Callee	KWindowSystem :: clearState		651575	0					
ANR	651863	Identifier	KWindowSystem :: clearState		651575	0					
ANR	651864	ArgumentList	w		651575	1					
ANR	651865	Argument	w		651575	0					
ANR	651866	Identifier	w		651575	0					
ANR	651867	Argument	NET :: Shaded		651575	1					
ANR	651868	Identifier	NET :: Shaded		651575	0					
ANR	651869	ElseStatement	else		651575	0					
ANR	651870	CompoundStatement		50:15:1623:1623	651575	0					
ANR	651871	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: Shaded )"	376:12:17203:17242	651575	0	True				
ANR	651872	CallExpression	"KWindowSystem :: setState ( w , NET :: Shaded )"		651575	0					
ANR	651873	Callee	KWindowSystem :: setState		651575	0					
ANR	651874	Identifier	KWindowSystem :: setState		651575	0					
ANR	651875	ArgumentList	w		651575	1					
ANR	651876	Argument	w		651575	0					
ANR	651877	Identifier	w		651575	0					
ANR	651878	Argument	NET :: Shaded		651575	1					
ANR	651879	Identifier	NET :: Shaded		651575	0					
ANR	651880	BreakStatement	break ;	378:8:17262:17267	651575	16	True				
ANR	651881	Label	case KeepAboveAction :	379:4:17273:17293	651575	17	True				
ANR	651882	Identifier	KeepAboveAction		651575	0					
ANR	651883	IfStatement	if ( info . hasState ( NET :: KeepAbove ) )		651575	18					
ANR	651884	Condition	info . hasState ( NET :: KeepAbove )	380:12:17307:17335	651575	0	True				
ANR	651885	CallExpression	info . hasState ( NET :: KeepAbove )		651575	0					
ANR	651886	Callee	info . hasState		651575	0					
ANR	651887	MemberAccess	info . hasState		651575	0					
ANR	651888	Identifier	info		651575	0					
ANR	651889	Identifier	hasState		651575	1					
ANR	651890	ArgumentList	NET :: KeepAbove		651575	1					
ANR	651891	Argument	NET :: KeepAbove		651575	0					
ANR	651892	Identifier	NET :: KeepAbove		651575	0					
ANR	651893	CompoundStatement		55:43:1772:1772	651575	1					
ANR	651894	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: KeepAbove )"	381:12:17352:17396	651575	0	True				
ANR	651895	CallExpression	"KWindowSystem :: clearState ( w , NET :: KeepAbove )"		651575	0					
ANR	651896	Callee	KWindowSystem :: clearState		651575	0					
ANR	651897	Identifier	KWindowSystem :: clearState		651575	0					
ANR	651898	ArgumentList	w		651575	1					
ANR	651899	Argument	w		651575	0					
ANR	651900	Identifier	w		651575	0					
ANR	651901	Argument	NET :: KeepAbove		651575	1					
ANR	651902	Identifier	NET :: KeepAbove		651575	0					
ANR	651903	ElseStatement	else		651575	0					
ANR	651904	CompoundStatement		57:15:1847:1847	651575	0					
ANR	651905	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: KeepAbove )"	383:12:17427:17469	651575	0	True				
ANR	651906	CallExpression	"KWindowSystem :: setState ( w , NET :: KeepAbove )"		651575	0					
ANR	651907	Callee	KWindowSystem :: setState		651575	0					
ANR	651908	Identifier	KWindowSystem :: setState		651575	0					
ANR	651909	ArgumentList	w		651575	1					
ANR	651910	Argument	w		651575	0					
ANR	651911	Identifier	w		651575	0					
ANR	651912	Argument	NET :: KeepAbove		651575	1					
ANR	651913	Identifier	NET :: KeepAbove		651575	0					
ANR	651914	BreakStatement	break ;	385:8:17489:17494	651575	19	True				
ANR	651915	Label	case KeepBelowAction :	386:4:17500:17520	651575	20	True				
ANR	651916	Identifier	KeepBelowAction		651575	0					
ANR	651917	IfStatement	if ( info . hasState ( NET :: KeepBelow ) )		651575	21					
ANR	651918	Condition	info . hasState ( NET :: KeepBelow )	387:12:17534:17562	651575	0	True				
ANR	651919	CallExpression	info . hasState ( NET :: KeepBelow )		651575	0					
ANR	651920	Callee	info . hasState		651575	0					
ANR	651921	MemberAccess	info . hasState		651575	0					
ANR	651922	Identifier	info		651575	0					
ANR	651923	Identifier	hasState		651575	1					
ANR	651924	ArgumentList	NET :: KeepBelow		651575	1					
ANR	651925	Argument	NET :: KeepBelow		651575	0					
ANR	651926	Identifier	NET :: KeepBelow		651575	0					
ANR	651927	CompoundStatement		62:43:1999:1999	651575	1					
ANR	651928	ExpressionStatement	"KWindowSystem :: clearState ( w , NET :: KeepBelow )"	388:12:17579:17623	651575	0	True				
ANR	651929	CallExpression	"KWindowSystem :: clearState ( w , NET :: KeepBelow )"		651575	0					
ANR	651930	Callee	KWindowSystem :: clearState		651575	0					
ANR	651931	Identifier	KWindowSystem :: clearState		651575	0					
ANR	651932	ArgumentList	w		651575	1					
ANR	651933	Argument	w		651575	0					
ANR	651934	Identifier	w		651575	0					
ANR	651935	Argument	NET :: KeepBelow		651575	1					
ANR	651936	Identifier	NET :: KeepBelow		651575	0					
ANR	651937	ElseStatement	else		651575	0					
ANR	651938	CompoundStatement		64:15:2074:2074	651575	0					
ANR	651939	ExpressionStatement	"KWindowSystem :: setState ( w , NET :: KeepBelow )"	390:12:17654:17696	651575	0	True				
ANR	651940	CallExpression	"KWindowSystem :: setState ( w , NET :: KeepBelow )"		651575	0					
ANR	651941	Callee	KWindowSystem :: setState		651575	0					
ANR	651942	Identifier	KWindowSystem :: setState		651575	0					
ANR	651943	ArgumentList	w		651575	1					
ANR	651944	Argument	w		651575	0					
ANR	651945	Identifier	w		651575	0					
ANR	651946	Argument	NET :: KeepBelow		651575	1					
ANR	651947	Identifier	NET :: KeepBelow		651575	0					
ANR	651948	BreakStatement	break ;	392:8:17716:17721	651575	22	True				
ANR	651949	ReturnType	void		651575	1					
ANR	651950	Identifier	WindowsRunner :: run		651575	2					
ANR	651951	ParameterList	"const Plasma :: RunnerContext & context , const Plasma :: QueryMatch & match"		651575	3					
ANR	651952	Parameter	const Plasma :: RunnerContext & context	325:24:15494:15529	651575	0	True				
ANR	651953	ParameterType	const Plasma :: RunnerContext &		651575	0					
ANR	651954	Identifier	context		651575	1					
ANR	651955	Parameter	const Plasma :: QueryMatch & match	325:62:15532:15562	651575	1	True				
ANR	651956	ParameterType	const Plasma :: QueryMatch &		651575	0					
ANR	651957	Identifier	match		651575	1					
ANR	651958	CFGEntryNode	ENTRY		651575		True				
ANR	651959	CFGExitNode	EXIT		651575		True				
ANR	651960	Symbol	match . data ( ) . toString		651575						
ANR	651961	Symbol	parts [ 0 ] . toInt		651575						
ANR	651962	Symbol	NET :: KeepAbove		651575						
ANR	651963	Symbol	NET :: KeepBelow		651575						
ANR	651964	Symbol	info . isMinimized		651575						
ANR	651965	Symbol	locker		651575						
ANR	651966	Symbol	NET :: Max		651575						
ANR	651967	Symbol	* parts		651575						
ANR	651968	Symbol	m_windows		651575						
ANR	651969	Symbol	WindowAction		651575						
ANR	651970	Symbol	i . value		651575						
ANR	651971	Symbol	context		651575						
ANR	651972	Symbol	action		651575						
ANR	651973	Symbol	match . id		651575						
ANR	651974	Symbol	match . data ( ) . toString ( ) . split		651575						
ANR	651975	Symbol	info		651575						
ANR	651976	Symbol	match . id ( ) . startsWith		651575						
ANR	651977	Symbol	info . hasState		651575						
ANR	651978	Symbol	match		651575						
ANR	651979	Symbol	NET :: Shaded		651575						
ANR	651980	Symbol	i		651575						
ANR	651981	Symbol	m_windows . find		651575						
ANR	651982	Symbol	match . data		651575						
ANR	651983	Symbol	NET :: FullScreen		651575						
ANR	651984	Symbol	QLatin1String		651575						
ANR	651985	Symbol	match . data ( ) . toInt		651575						
ANR	651986	Symbol	w		651575						
ANR	651987	Symbol	ri		651575						
ANR	651988	Symbol	parts		651575						
ANR	651989	Symbol	QStringLiteral		651575						
ANR	651990	Function	WindowsRunner :: desktopMatch	396:0:17732:18381							
ANR	651991	FunctionDef	"WindowsRunner :: desktopMatch (int desktop , qreal relevance)"		651990	0					
ANR	651992	CompoundStatement		397:0:17809:18381	651990	0					
ANR	651993	IdentifierDeclStatement	Plasma :: QueryMatch match ( this ) ;	398:4:17815:17845	651990	0	True				
ANR	651994	IdentifierDecl	match ( this )		651990	0					
ANR	651995	IdentifierDeclType	Plasma :: QueryMatch		651990	0					
ANR	651996	Identifier	match		651990	1					
ANR	651997	Identifier	this		651990	2					
ANR	651998	ExpressionStatement	match . setType ( Plasma :: QueryMatch :: ExactMatch )	399:4:17851:17896	651990	1	True				
ANR	651999	CallExpression	match . setType ( Plasma :: QueryMatch :: ExactMatch )		651990	0					
ANR	652000	Callee	match . setType		651990	0					
ANR	652001	MemberAccess	match . setType		651990	0					
ANR	652002	Identifier	match		651990	0					
ANR	652003	Identifier	setType		651990	1					
ANR	652004	ArgumentList	Plasma :: QueryMatch :: ExactMatch		651990	1					
ANR	652005	Argument	Plasma :: QueryMatch :: ExactMatch		651990	0					
ANR	652006	Identifier	Plasma :: QueryMatch :: ExactMatch		651990	0					
ANR	652007	ExpressionStatement	match . setData ( desktop )	400:4:17902:17924	651990	2	True				
ANR	652008	CallExpression	match . setData ( desktop )		651990	0					
ANR	652009	Callee	match . setData		651990	0					
ANR	652010	MemberAccess	match . setData		651990	0					
ANR	652011	Identifier	match		651990	0					
ANR	652012	Identifier	setData		651990	1					
ANR	652013	ArgumentList	desktop		651990	1					
ANR	652014	Argument	desktop		651990	0					
ANR	652015	Identifier	desktop		651990	0					
ANR	652016	ExpressionStatement	"match . setId ( ""desktop-"" + QString :: number ( desktop ) )"	401:4:17930:17980	651990	3	True				
ANR	652017	CallExpression	"match . setId ( ""desktop-"" + QString :: number ( desktop ) )"		651990	0					
ANR	652018	Callee	match . setId		651990	0					
ANR	652019	MemberAccess	match . setId		651990	0					
ANR	652020	Identifier	match		651990	0					
ANR	652021	Identifier	setId		651990	1					
ANR	652022	ArgumentList	"""desktop-"" + QString :: number ( desktop )"		651990	1					
ANR	652023	Argument	"""desktop-"" + QString :: number ( desktop )"		651990	0					
ANR	652024	AdditiveExpression	"""desktop-"" + QString :: number ( desktop )"		651990	0		+			
ANR	652025	PrimaryExpression	"""desktop-"""		651990	0					
ANR	652026	CallExpression	QString :: number ( desktop )		651990	1					
ANR	652027	Callee	QString :: number		651990	0					
ANR	652028	Identifier	QString :: number		651990	0					
ANR	652029	ArgumentList	desktop		651990	1					
ANR	652030	Argument	desktop		651990	0					
ANR	652031	Identifier	desktop		651990	0					
ANR	652032	ExpressionStatement	"match . setIconName ( QStringLiteral ( ""user-desktop"" ) )"	402:4:17986:18035	651990	4	True				
ANR	652033	CallExpression	"match . setIconName ( QStringLiteral ( ""user-desktop"" ) )"		651990	0					
ANR	652034	Callee	match . setIconName		651990	0					
ANR	652035	MemberAccess	match . setIconName		651990	0					
ANR	652036	Identifier	match		651990	0					
ANR	652037	Identifier	setIconName		651990	1					
ANR	652038	ArgumentList	"QStringLiteral ( ""user-desktop"" )"		651990	1					
ANR	652039	Argument	"QStringLiteral ( ""user-desktop"" )"		651990	0					
ANR	652040	CallExpression	"QStringLiteral ( ""user-desktop"" )"		651990	0					
ANR	652041	Callee	QStringLiteral		651990	0					
ANR	652042	Identifier	QStringLiteral		651990	0					
ANR	652043	ArgumentList	"""user-desktop"""		651990	1					
ANR	652044	Argument	"""user-desktop"""		651990	0					
ANR	652045	PrimaryExpression	"""user-desktop"""		651990	0					
ANR	652046	IdentifierDeclStatement	QString desktopName ;	403:4:18041:18060	651990	5	True				
ANR	652047	IdentifierDecl	desktopName		651990	0					
ANR	652048	IdentifierDeclType	QString		651990	0					
ANR	652049	Identifier	desktopName		651990	1					
ANR	652050	IfStatement	if ( desktop <= m_desktopNames . size ( ) )		651990	6					
ANR	652051	Condition	desktop <= m_desktopNames . size ( )	404:8:18070:18101	651990	0	True				
ANR	652052	RelationalExpression	desktop <= m_desktopNames . size ( )		651990	0		<=			
ANR	652053	Identifier	desktop		651990	0					
ANR	652054	CallExpression	m_desktopNames . size ( )		651990	1					
ANR	652055	Callee	m_desktopNames . size		651990	0					
ANR	652056	MemberAccess	m_desktopNames . size		651990	0					
ANR	652057	Identifier	m_desktopNames		651990	0					
ANR	652058	Identifier	size		651990	1					
ANR	652059	ArgumentList			651990	1					
ANR	652060	CompoundStatement		8:42:294:294	651990	1					
ANR	652061	ExpressionStatement	desktopName = m_desktopNames [ desktop - 1 ]	405:8:18114:18155	651990	0	True				
ANR	652062	AssignmentExpression	desktopName = m_desktopNames [ desktop - 1 ]		651990	0		=			
ANR	652063	Identifier	desktopName		651990	0					
ANR	652064	ArrayIndexing	m_desktopNames [ desktop - 1 ]		651990	1					
ANR	652065	Identifier	m_desktopNames		651990	0					
ANR	652066	AdditiveExpression	desktop - 1		651990	1		-			
ANR	652067	Identifier	desktop		651990	0					
ANR	652068	PrimaryExpression	1		651990	1					
ANR	652069	ElseStatement	else		651990	0					
ANR	652070	CompoundStatement		10:11:358:358	651990	0					
ANR	652071	ExpressionStatement	desktopName = KWindowSystem :: desktopName ( desktop )	407:8:18178:18227	651990	0	True				
ANR	652072	AssignmentExpression	desktopName = KWindowSystem :: desktopName ( desktop )		651990	0		=			
ANR	652073	Identifier	desktopName		651990	0					
ANR	652074	CallExpression	KWindowSystem :: desktopName ( desktop )		651990	1					
ANR	652075	Callee	KWindowSystem :: desktopName		651990	0					
ANR	652076	Identifier	KWindowSystem :: desktopName		651990	0					
ANR	652077	ArgumentList	desktop		651990	1					
ANR	652078	Argument	desktop		651990	0					
ANR	652079	Identifier	desktop		651990	0					
ANR	652080	ExpressionStatement	match . setText ( desktopName )	409:4:18239:18265	651990	7	True				
ANR	652081	CallExpression	match . setText ( desktopName )		651990	0					
ANR	652082	Callee	match . setText		651990	0					
ANR	652083	MemberAccess	match . setText		651990	0					
ANR	652084	Identifier	match		651990	0					
ANR	652085	Identifier	setText		651990	1					
ANR	652086	ArgumentList	desktopName		651990	1					
ANR	652087	Argument	desktopName		651990	0					
ANR	652088	Identifier	desktopName		651990	0					
ANR	652089	ExpressionStatement	"match . setSubtext ( i18n ( ""Switch to desktop %1"" , desktop ) )"	410:4:18271:18326	651990	8	True				
ANR	652090	CallExpression	"match . setSubtext ( i18n ( ""Switch to desktop %1"" , desktop ) )"		651990	0					
ANR	652091	Callee	match . setSubtext		651990	0					
ANR	652092	MemberAccess	match . setSubtext		651990	0					
ANR	652093	Identifier	match		651990	0					
ANR	652094	Identifier	setSubtext		651990	1					
ANR	652095	ArgumentList	"i18n ( ""Switch to desktop %1"" , desktop )"		651990	1					
ANR	652096	Argument	"i18n ( ""Switch to desktop %1"" , desktop )"		651990	0					
ANR	652097	CallExpression	"i18n ( ""Switch to desktop %1"" , desktop )"		651990	0					
ANR	652098	Callee	i18n		651990	0					
ANR	652099	Identifier	i18n		651990	0					
ANR	652100	ArgumentList	"""Switch to desktop %1"""		651990	1					
ANR	652101	Argument	"""Switch to desktop %1"""		651990	0					
ANR	652102	PrimaryExpression	"""Switch to desktop %1"""		651990	0					
ANR	652103	Argument	desktop		651990	1					
ANR	652104	Identifier	desktop		651990	0					
ANR	652105	ExpressionStatement	match . setRelevance ( relevance )	411:4:18332:18361	651990	9	True				
ANR	652106	CallExpression	match . setRelevance ( relevance )		651990	0					
ANR	652107	Callee	match . setRelevance		651990	0					
ANR	652108	MemberAccess	match . setRelevance		651990	0					
ANR	652109	Identifier	match		651990	0					
ANR	652110	Identifier	setRelevance		651990	1					
ANR	652111	ArgumentList	relevance		651990	1					
ANR	652112	Argument	relevance		651990	0					
ANR	652113	Identifier	relevance		651990	0					
ANR	652114	ReturnStatement	return match ;	412:4:18367:18379	651990	10	True				
ANR	652115	Identifier	match		651990	0					
ANR	652116	ReturnType	Plasma :: QueryMatch		651990	1					
ANR	652117	Identifier	WindowsRunner :: desktopMatch		651990	2					
ANR	652118	ParameterList	"int desktop , qreal relevance"		651990	3					
ANR	652119	Parameter	int desktop	396:47:17779:17789	651990	0	True				
ANR	652120	ParameterType	int		651990	0					
ANR	652121	Identifier	desktop		651990	1					
ANR	652122	Parameter	qreal relevance	396:60:17792:17806	651990	1	True				
ANR	652123	ParameterType	qreal		651990	0					
ANR	652124	Identifier	relevance		651990	1					
ANR	652125	CFGEntryNode	ENTRY		651990		True				
ANR	652126	CFGExitNode	EXIT		651990		True				
ANR	652127	Symbol	* m_desktopNames		651990						
ANR	652128	Symbol	Plasma :: QueryMatch :: ExactMatch		651990						
ANR	652129	Symbol	m_desktopNames		651990						
ANR	652130	Symbol	match		651990						
ANR	652131	Symbol	* desktop		651990						
ANR	652132	Symbol	KWindowSystem :: desktopName		651990						
ANR	652133	Symbol	relevance		651990						
ANR	652134	Symbol	i18n		651990						
ANR	652135	Symbol	QString :: number		651990						
ANR	652136	Symbol	desktopName		651990						
ANR	652137	Symbol	desktop		651990						
ANR	652138	Symbol	QStringLiteral		651990						
ANR	652139	Symbol	m_desktopNames . size		651990						
ANR	652140	Function	WindowsRunner :: windowMatch	415:0:18384:20164							
ANR	652141	FunctionDef	"WindowsRunner :: windowMatch (const KWindowInfo & info , WindowAction action , qreal relevance , Plasma :: QueryMatch :: Type type)"		652140	0					
ANR	652142	CompoundStatement		416:0:18524:20164	652140	0					
ANR	652143	IdentifierDeclStatement	Plasma :: QueryMatch match ( this ) ;	417:4:18530:18560	652140	0	True				
ANR	652144	IdentifierDecl	match ( this )		652140	0					
ANR	652145	IdentifierDeclType	Plasma :: QueryMatch		652140	0					
ANR	652146	Identifier	match		652140	1					
ANR	652147	Identifier	this		652140	2					
ANR	652148	ExpressionStatement	match . setType ( type )	418:4:18566:18585	652140	1	True				
ANR	652149	CallExpression	match . setType ( type )		652140	0					
ANR	652150	Callee	match . setType		652140	0					
ANR	652151	MemberAccess	match . setType		652140	0					
ANR	652152	Identifier	match		652140	0					
ANR	652153	Identifier	setType		652140	1					
ANR	652154	ArgumentList	type		652140	1					
ANR	652155	Argument	type		652140	0					
ANR	652156	Identifier	type		652140	0					
ANR	652157	ExpressionStatement	"match . setData ( QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) ) )"	419:4:18591:18679	652140	2	True				
ANR	652158	CallExpression	"match . setData ( QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) ) )"		652140	0					
ANR	652159	Callee	match . setData		652140	0					
ANR	652160	MemberAccess	match . setData		652140	0					
ANR	652161	Identifier	match		652140	0					
ANR	652162	Identifier	setData		652140	1					
ANR	652163	ArgumentList	"QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) )"		652140	1					
ANR	652164	Argument	"QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) )"		652140	0					
ANR	652165	CallExpression	"QString ( QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) ) )"		652140	0					
ANR	652166	Callee	QString		652140	0					
ANR	652167	Identifier	QString		652140	0					
ANR	652168	ArgumentList	"QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) )"		652140	1					
ANR	652169	Argument	"QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) )"		652140	0					
ANR	652170	AdditiveExpression	"QString :: number ( ( int ) action ) + ""_"" + QString :: number ( info . win ( ) )"		652140	0		+			
ANR	652171	CallExpression	QString :: number ( ( int ) action )		652140	0					
ANR	652172	Callee	QString :: number		652140	0					
ANR	652173	Identifier	QString :: number		652140	0					
ANR	652174	ArgumentList	( int ) action		652140	1					
ANR	652175	Argument	( int ) action		652140	0					
ANR	652176	CastExpression	( int ) action		652140	0					
ANR	652177	CastTarget	int		652140	0					
ANR	652178	Identifier	action		652140	1					
ANR	652179	AdditiveExpression	"""_"" + QString :: number ( info . win ( ) )"		652140	1		+			
ANR	652180	PrimaryExpression	"""_"""		652140	0					
ANR	652181	CallExpression	QString :: number ( info . win ( ) )		652140	1					
ANR	652182	Callee	QString :: number		652140	0					
ANR	652183	Identifier	QString :: number		652140	0					
ANR	652184	ArgumentList	info . win ( )		652140	1					
ANR	652185	Argument	info . win ( )		652140	0					
ANR	652186	CallExpression	info . win ( )		652140	0					
ANR	652187	Callee	info . win		652140	0					
ANR	652188	MemberAccess	info . win		652140	0					
ANR	652189	Identifier	info		652140	0					
ANR	652190	Identifier	win		652140	1					
ANR	652191	ArgumentList			652140	1					
ANR	652192	ExpressionStatement	match . setIcon ( m_icons [ info . win ( ) ] )	420:4:18685:18719	652140	3	True				
ANR	652193	CallExpression	match . setIcon ( m_icons [ info . win ( ) ] )		652140	0					
ANR	652194	Callee	match . setIcon		652140	0					
ANR	652195	MemberAccess	match . setIcon		652140	0					
ANR	652196	Identifier	match		652140	0					
ANR	652197	Identifier	setIcon		652140	1					
ANR	652198	ArgumentList	m_icons [ info . win ( ) ]		652140	1					
ANR	652199	Argument	m_icons [ info . win ( ) ]		652140	0					
ANR	652200	ArrayIndexing	m_icons [ info . win ( ) ]		652140	0					
ANR	652201	Identifier	m_icons		652140	0					
ANR	652202	CallExpression	info . win ( )		652140	1					
ANR	652203	Callee	info . win		652140	0					
ANR	652204	MemberAccess	info . win		652140	0					
ANR	652205	Identifier	info		652140	0					
ANR	652206	Identifier	win		652140	1					
ANR	652207	ArgumentList			652140	1					
ANR	652208	ExpressionStatement	match . setText ( info . name ( ) )	421:4:18725:18751	652140	4	True				
ANR	652209	CallExpression	match . setText ( info . name ( ) )		652140	0					
ANR	652210	Callee	match . setText		652140	0					
ANR	652211	MemberAccess	match . setText		652140	0					
ANR	652212	Identifier	match		652140	0					
ANR	652213	Identifier	setText		652140	1					
ANR	652214	ArgumentList	info . name ( )		652140	1					
ANR	652215	Argument	info . name ( )		652140	0					
ANR	652216	CallExpression	info . name ( )		652140	0					
ANR	652217	Callee	info . name		652140	0					
ANR	652218	MemberAccess	info . name		652140	0					
ANR	652219	Identifier	info		652140	0					
ANR	652220	Identifier	name		652140	1					
ANR	652221	ArgumentList			652140	1					
ANR	652222	IdentifierDeclStatement	QString desktopName ;	422:4:18757:18776	652140	5	True				
ANR	652223	IdentifierDecl	desktopName		652140	0					
ANR	652224	IdentifierDeclType	QString		652140	0					
ANR	652225	Identifier	desktopName		652140	1					
ANR	652226	IdentifierDeclStatement	int desktop = info . desktop ( ) ;	423:4:18782:18810	652140	6	True				
ANR	652227	IdentifierDecl	desktop = info . desktop ( )		652140	0					
ANR	652228	IdentifierDeclType	int		652140	0					
ANR	652229	Identifier	desktop		652140	1					
ANR	652230	AssignmentExpression	desktop = info . desktop ( )		652140	2		=			
ANR	652231	Identifier	desktop		652140	0					
ANR	652232	CallExpression	info . desktop ( )		652140	1					
ANR	652233	Callee	info . desktop		652140	0					
ANR	652234	MemberAccess	info . desktop		652140	0					
ANR	652235	Identifier	info		652140	0					
ANR	652236	Identifier	desktop		652140	1					
ANR	652237	ArgumentList			652140	1					
ANR	652238	IfStatement	if ( desktop == NET :: OnAllDesktops )		652140	7					
ANR	652239	Condition	desktop == NET :: OnAllDesktops	424:8:18820:18848	652140	0	True				
ANR	652240	EqualityExpression	desktop == NET :: OnAllDesktops		652140	0		==			
ANR	652241	Identifier	desktop		652140	0					
ANR	652242	Identifier	NET :: OnAllDesktops		652140	1					
ANR	652243	CompoundStatement		9:39:326:326	652140	1					
ANR	652244	ExpressionStatement	desktop = KWindowSystem :: currentDesktop ( )	425:8:18861:18902	652140	0	True				
ANR	652245	AssignmentExpression	desktop = KWindowSystem :: currentDesktop ( )		652140	0		=			
ANR	652246	Identifier	desktop		652140	0					
ANR	652247	CallExpression	KWindowSystem :: currentDesktop ( )		652140	1					
ANR	652248	Callee	KWindowSystem :: currentDesktop		652140	0					
ANR	652249	Identifier	KWindowSystem :: currentDesktop		652140	0					
ANR	652250	ArgumentList			652140	1					
ANR	652251	IfStatement	if ( desktop <= m_desktopNames . size ( ) )		652140	8					
ANR	652252	Condition	desktop <= m_desktopNames . size ( )	427:8:18918:18949	652140	0	True				
ANR	652253	RelationalExpression	desktop <= m_desktopNames . size ( )		652140	0		<=			
ANR	652254	Identifier	desktop		652140	0					
ANR	652255	CallExpression	m_desktopNames . size ( )		652140	1					
ANR	652256	Callee	m_desktopNames . size		652140	0					
ANR	652257	MemberAccess	m_desktopNames . size		652140	0					
ANR	652258	Identifier	m_desktopNames		652140	0					
ANR	652259	Identifier	size		652140	1					
ANR	652260	ArgumentList			652140	1					
ANR	652261	CompoundStatement		12:42:427:427	652140	1					
ANR	652262	ExpressionStatement	desktopName = m_desktopNames [ desktop - 1 ]	428:8:18962:19003	652140	0	True				
ANR	652263	AssignmentExpression	desktopName = m_desktopNames [ desktop - 1 ]		652140	0		=			
ANR	652264	Identifier	desktopName		652140	0					
ANR	652265	ArrayIndexing	m_desktopNames [ desktop - 1 ]		652140	1					
ANR	652266	Identifier	m_desktopNames		652140	0					
ANR	652267	AdditiveExpression	desktop - 1		652140	1		-			
ANR	652268	Identifier	desktop		652140	0					
ANR	652269	PrimaryExpression	1		652140	1					
ANR	652270	ElseStatement	else		652140	0					
ANR	652271	CompoundStatement		14:11:491:491	652140	0					
ANR	652272	ExpressionStatement	desktopName = KWindowSystem :: desktopName ( desktop )	430:8:19026:19075	652140	0	True				
ANR	652273	AssignmentExpression	desktopName = KWindowSystem :: desktopName ( desktop )		652140	0		=			
ANR	652274	Identifier	desktopName		652140	0					
ANR	652275	CallExpression	KWindowSystem :: desktopName ( desktop )		652140	1					
ANR	652276	Callee	KWindowSystem :: desktopName		652140	0					
ANR	652277	Identifier	KWindowSystem :: desktopName		652140	0					
ANR	652278	ArgumentList	desktop		652140	1					
ANR	652279	Argument	desktop		652140	0					
ANR	652280	Identifier	desktop		652140	0					
ANR	652281	SwitchStatement	switch ( action )		652140	9					
ANR	652282	Condition	action	432:12:19095:19100	652140	0	True				
ANR	652283	Identifier	action		652140	0					
ANR	652284	CompoundStatement		17:20:578:578	652140	1					
ANR	652285	Label	case CloseAction :	433:4:19109:19125	652140	0	True				
ANR	652286	Identifier	CloseAction		652140	0					
ANR	652287	ExpressionStatement	"match . setSubtext ( i18n ( ""Close running window on %1"" , desktopName ) )"	434:8:19135:19200	652140	1	True				
ANR	652288	CallExpression	"match . setSubtext ( i18n ( ""Close running window on %1"" , desktopName ) )"		652140	0					
ANR	652289	Callee	match . setSubtext		652140	0					
ANR	652290	MemberAccess	match . setSubtext		652140	0					
ANR	652291	Identifier	match		652140	0					
ANR	652292	Identifier	setSubtext		652140	1					
ANR	652293	ArgumentList	"i18n ( ""Close running window on %1"" , desktopName )"		652140	1					
ANR	652294	Argument	"i18n ( ""Close running window on %1"" , desktopName )"		652140	0					
ANR	652295	CallExpression	"i18n ( ""Close running window on %1"" , desktopName )"		652140	0					
ANR	652296	Callee	i18n		652140	0					
ANR	652297	Identifier	i18n		652140	0					
ANR	652298	ArgumentList	"""Close running window on %1"""		652140	1					
ANR	652299	Argument	"""Close running window on %1"""		652140	0					
ANR	652300	PrimaryExpression	"""Close running window on %1"""		652140	0					
ANR	652301	Argument	desktopName		652140	1					
ANR	652302	Identifier	desktopName		652140	0					
ANR	652303	BreakStatement	break ;	435:8:19210:19215	652140	2	True				
ANR	652304	Label	case MinimizeAction :	436:4:19221:19240	652140	3	True				
ANR	652305	Identifier	MinimizeAction		652140	0					
ANR	652306	ExpressionStatement	"match . setSubtext ( i18n ( ""(Un)minimize running window on %1"" , desktopName ) )"	437:8:19250:19322	652140	4	True				
ANR	652307	CallExpression	"match . setSubtext ( i18n ( ""(Un)minimize running window on %1"" , desktopName ) )"		652140	0					
ANR	652308	Callee	match . setSubtext		652140	0					
ANR	652309	MemberAccess	match . setSubtext		652140	0					
ANR	652310	Identifier	match		652140	0					
ANR	652311	Identifier	setSubtext		652140	1					
ANR	652312	ArgumentList	"i18n ( ""(Un)minimize running window on %1"" , desktopName )"		652140	1					
ANR	652313	Argument	"i18n ( ""(Un)minimize running window on %1"" , desktopName )"		652140	0					
ANR	652314	CallExpression	"i18n ( ""(Un)minimize running window on %1"" , desktopName )"		652140	0					
ANR	652315	Callee	i18n		652140	0					
ANR	652316	Identifier	i18n		652140	0					
ANR	652317	ArgumentList	"""(Un)minimize running window on %1"""		652140	1					
ANR	652318	Argument	"""(Un)minimize running window on %1"""		652140	0					
ANR	652319	PrimaryExpression	"""(Un)minimize running window on %1"""		652140	0					
ANR	652320	Argument	desktopName		652140	1					
ANR	652321	Identifier	desktopName		652140	0					
ANR	652322	BreakStatement	break ;	438:8:19332:19337	652140	5	True				
ANR	652323	Label	case MaximizeAction :	439:4:19343:19362	652140	6	True				
ANR	652324	Identifier	MaximizeAction		652140	0					
ANR	652325	ExpressionStatement	"match . setSubtext ( i18n ( ""Maximize/restore running window on %1"" , desktopName ) )"	440:8:19372:19448	652140	7	True				
ANR	652326	CallExpression	"match . setSubtext ( i18n ( ""Maximize/restore running window on %1"" , desktopName ) )"		652140	0					
ANR	652327	Callee	match . setSubtext		652140	0					
ANR	652328	MemberAccess	match . setSubtext		652140	0					
ANR	652329	Identifier	match		652140	0					
ANR	652330	Identifier	setSubtext		652140	1					
ANR	652331	ArgumentList	"i18n ( ""Maximize/restore running window on %1"" , desktopName )"		652140	1					
ANR	652332	Argument	"i18n ( ""Maximize/restore running window on %1"" , desktopName )"		652140	0					
ANR	652333	CallExpression	"i18n ( ""Maximize/restore running window on %1"" , desktopName )"		652140	0					
ANR	652334	Callee	i18n		652140	0					
ANR	652335	Identifier	i18n		652140	0					
ANR	652336	ArgumentList	"""Maximize/restore running window on %1"""		652140	1					
ANR	652337	Argument	"""Maximize/restore running window on %1"""		652140	0					
ANR	652338	PrimaryExpression	"""Maximize/restore running window on %1"""		652140	0					
ANR	652339	Argument	desktopName		652140	1					
ANR	652340	Identifier	desktopName		652140	0					
ANR	652341	BreakStatement	break ;	441:8:19458:19463	652140	8	True				
ANR	652342	Label	case FullscreenAction :	442:4:19469:19490	652140	9	True				
ANR	652343	Identifier	FullscreenAction		652140	0					
ANR	652344	ExpressionStatement	"match . setSubtext ( i18n ( ""Toggle fullscreen for running window on %1"" , desktopName ) )"	443:8:19500:19581	652140	10	True				
ANR	652345	CallExpression	"match . setSubtext ( i18n ( ""Toggle fullscreen for running window on %1"" , desktopName ) )"		652140	0					
ANR	652346	Callee	match . setSubtext		652140	0					
ANR	652347	MemberAccess	match . setSubtext		652140	0					
ANR	652348	Identifier	match		652140	0					
ANR	652349	Identifier	setSubtext		652140	1					
ANR	652350	ArgumentList	"i18n ( ""Toggle fullscreen for running window on %1"" , desktopName )"		652140	1					
ANR	652351	Argument	"i18n ( ""Toggle fullscreen for running window on %1"" , desktopName )"		652140	0					
ANR	652352	CallExpression	"i18n ( ""Toggle fullscreen for running window on %1"" , desktopName )"		652140	0					
ANR	652353	Callee	i18n		652140	0					
ANR	652354	Identifier	i18n		652140	0					
ANR	652355	ArgumentList	"""Toggle fullscreen for running window on %1"""		652140	1					
ANR	652356	Argument	"""Toggle fullscreen for running window on %1"""		652140	0					
ANR	652357	PrimaryExpression	"""Toggle fullscreen for running window on %1"""		652140	0					
ANR	652358	Argument	desktopName		652140	1					
ANR	652359	Identifier	desktopName		652140	0					
ANR	652360	BreakStatement	break ;	444:8:19591:19596	652140	11	True				
ANR	652361	Label	case ShadeAction :	445:4:19602:19618	652140	12	True				
ANR	652362	Identifier	ShadeAction		652140	0					
ANR	652363	ExpressionStatement	"match . setSubtext ( i18n ( ""(Un)shade running window on %1"" , desktopName ) )"	446:8:19628:19697	652140	13	True				
ANR	652364	CallExpression	"match . setSubtext ( i18n ( ""(Un)shade running window on %1"" , desktopName ) )"		652140	0					
ANR	652365	Callee	match . setSubtext		652140	0					
ANR	652366	MemberAccess	match . setSubtext		652140	0					
ANR	652367	Identifier	match		652140	0					
ANR	652368	Identifier	setSubtext		652140	1					
ANR	652369	ArgumentList	"i18n ( ""(Un)shade running window on %1"" , desktopName )"		652140	1					
ANR	652370	Argument	"i18n ( ""(Un)shade running window on %1"" , desktopName )"		652140	0					
ANR	652371	CallExpression	"i18n ( ""(Un)shade running window on %1"" , desktopName )"		652140	0					
ANR	652372	Callee	i18n		652140	0					
ANR	652373	Identifier	i18n		652140	0					
ANR	652374	ArgumentList	"""(Un)shade running window on %1"""		652140	1					
ANR	652375	Argument	"""(Un)shade running window on %1"""		652140	0					
ANR	652376	PrimaryExpression	"""(Un)shade running window on %1"""		652140	0					
ANR	652377	Argument	desktopName		652140	1					
ANR	652378	Identifier	desktopName		652140	0					
ANR	652379	BreakStatement	break ;	447:8:19707:19712	652140	14	True				
ANR	652380	Label	case KeepAboveAction :	448:4:19718:19738	652140	15	True				
ANR	652381	Identifier	KeepAboveAction		652140	0					
ANR	652382	ExpressionStatement	"match . setSubtext ( i18n ( ""Toggle keep above for running window on %1"" , desktopName ) )"	449:8:19748:19829	652140	16	True				
ANR	652383	CallExpression	"match . setSubtext ( i18n ( ""Toggle keep above for running window on %1"" , desktopName ) )"		652140	0					
ANR	652384	Callee	match . setSubtext		652140	0					
ANR	652385	MemberAccess	match . setSubtext		652140	0					
ANR	652386	Identifier	match		652140	0					
ANR	652387	Identifier	setSubtext		652140	1					
ANR	652388	ArgumentList	"i18n ( ""Toggle keep above for running window on %1"" , desktopName )"		652140	1					
ANR	652389	Argument	"i18n ( ""Toggle keep above for running window on %1"" , desktopName )"		652140	0					
ANR	652390	CallExpression	"i18n ( ""Toggle keep above for running window on %1"" , desktopName )"		652140	0					
ANR	652391	Callee	i18n		652140	0					
ANR	652392	Identifier	i18n		652140	0					
ANR	652393	ArgumentList	"""Toggle keep above for running window on %1"""		652140	1					
ANR	652394	Argument	"""Toggle keep above for running window on %1"""		652140	0					
ANR	652395	PrimaryExpression	"""Toggle keep above for running window on %1"""		652140	0					
ANR	652396	Argument	desktopName		652140	1					
ANR	652397	Identifier	desktopName		652140	0					
ANR	652398	BreakStatement	break ;	450:8:19839:19844	652140	17	True				
ANR	652399	Label	case KeepBelowAction :	451:4:19850:19870	652140	18	True				
ANR	652400	Identifier	KeepBelowAction		652140	0					
ANR	652401	ExpressionStatement	"match . setSubtext ( i18n ( ""Toggle keep below running window on %1"" , desktopName ) )"	452:8:19880:19957	652140	19	True				
ANR	652402	CallExpression	"match . setSubtext ( i18n ( ""Toggle keep below running window on %1"" , desktopName ) )"		652140	0					
ANR	652403	Callee	match . setSubtext		652140	0					
ANR	652404	MemberAccess	match . setSubtext		652140	0					
ANR	652405	Identifier	match		652140	0					
ANR	652406	Identifier	setSubtext		652140	1					
ANR	652407	ArgumentList	"i18n ( ""Toggle keep below running window on %1"" , desktopName )"		652140	1					
ANR	652408	Argument	"i18n ( ""Toggle keep below running window on %1"" , desktopName )"		652140	0					
ANR	652409	CallExpression	"i18n ( ""Toggle keep below running window on %1"" , desktopName )"		652140	0					
ANR	652410	Callee	i18n		652140	0					
ANR	652411	Identifier	i18n		652140	0					
ANR	652412	ArgumentList	"""Toggle keep below running window on %1"""		652140	1					
ANR	652413	Argument	"""Toggle keep below running window on %1"""		652140	0					
ANR	652414	PrimaryExpression	"""Toggle keep below running window on %1"""		652140	0					
ANR	652415	Argument	desktopName		652140	1					
ANR	652416	Identifier	desktopName		652140	0					
ANR	652417	BreakStatement	break ;	453:8:19967:19972	652140	20	True				
ANR	652418	Label	case ActivateAction :	454:4:19978:19997	652140	21	True				
ANR	652419	Identifier	ActivateAction		652140	0					
ANR	652420	Label	default :	455:4:20003:20010	652140	22	True				
ANR	652421	Identifier	default		652140	0					
ANR	652422	ExpressionStatement	"match . setSubtext ( i18n ( ""Activate running window on %1"" , desktopName ) )"	456:8:20020:20088	652140	23	True				
ANR	652423	CallExpression	"match . setSubtext ( i18n ( ""Activate running window on %1"" , desktopName ) )"		652140	0					
ANR	652424	Callee	match . setSubtext		652140	0					
ANR	652425	MemberAccess	match . setSubtext		652140	0					
ANR	652426	Identifier	match		652140	0					
ANR	652427	Identifier	setSubtext		652140	1					
ANR	652428	ArgumentList	"i18n ( ""Activate running window on %1"" , desktopName )"		652140	1					
ANR	652429	Argument	"i18n ( ""Activate running window on %1"" , desktopName )"		652140	0					
ANR	652430	CallExpression	"i18n ( ""Activate running window on %1"" , desktopName )"		652140	0					
ANR	652431	Callee	i18n		652140	0					
ANR	652432	Identifier	i18n		652140	0					
ANR	652433	ArgumentList	"""Activate running window on %1"""		652140	1					
ANR	652434	Argument	"""Activate running window on %1"""		652140	0					
ANR	652435	PrimaryExpression	"""Activate running window on %1"""		652140	0					
ANR	652436	Argument	desktopName		652140	1					
ANR	652437	Identifier	desktopName		652140	0					
ANR	652438	BreakStatement	break ;	457:8:20098:20103	652140	24	True				
ANR	652439	ExpressionStatement	match . setRelevance ( relevance )	459:4:20115:20144	652140	10	True				
ANR	652440	CallExpression	match . setRelevance ( relevance )		652140	0					
ANR	652441	Callee	match . setRelevance		652140	0					
ANR	652442	MemberAccess	match . setRelevance		652140	0					
ANR	652443	Identifier	match		652140	0					
ANR	652444	Identifier	setRelevance		652140	1					
ANR	652445	ArgumentList	relevance		652140	1					
ANR	652446	Argument	relevance		652140	0					
ANR	652447	Identifier	relevance		652140	0					
ANR	652448	ReturnStatement	return match ;	460:4:20150:20162	652140	11	True				
ANR	652449	Identifier	match		652140	0					
ANR	652450	ReturnType	Plasma :: QueryMatch		652140	1					
ANR	652451	Identifier	WindowsRunner :: windowMatch		652140	2					
ANR	652452	ParameterList	"const KWindowInfo & info , WindowAction action , qreal relevance , Plasma :: QueryMatch :: Type type"		652140	3					
ANR	652453	Parameter	const KWindowInfo & info	415:46:18430:18452	652140	0	True				
ANR	652454	ParameterType	const KWindowInfo &		652140	0					
ANR	652455	Identifier	info		652140	1					
ANR	652456	Parameter	WindowAction action	415:71:18455:18473	652140	1	True				
ANR	652457	ParameterType	WindowAction		652140	0					
ANR	652458	Identifier	action		652140	1					
ANR	652459	Parameter	qreal relevance	415:92:18476:18490	652140	2	True				
ANR	652460	ParameterType	qreal		652140	0					
ANR	652461	Identifier	relevance		652140	1					
ANR	652462	Parameter	Plasma :: QueryMatch :: Type type	415:109:18493:18521	652140	3	True				
ANR	652463	ParameterType	Plasma :: QueryMatch :: Type		652140	0					
ANR	652464	Identifier	type		652140	1					
ANR	652465	CFGEntryNode	ENTRY		652140		True				
ANR	652466	CFGExitNode	EXIT		652140		True				
ANR	652467	Symbol	* m_desktopNames		652140						
ANR	652468	Symbol	NET :: OnAllDesktops		652140						
ANR	652469	Symbol	KWindowSystem :: currentDesktop		652140						
ANR	652470	Symbol	m_desktopNames		652140						
ANR	652471	Symbol	match		652140						
ANR	652472	Symbol	* desktop		652140						
ANR	652473	Symbol	KWindowSystem :: desktopName		652140						
ANR	652474	Symbol	* m_icons		652140						
ANR	652475	Symbol	type		652140						
ANR	652476	Symbol	relevance		652140						
ANR	652477	Symbol	i18n		652140						
ANR	652478	Symbol	QString :: number		652140						
ANR	652479	Symbol	* info . win		652140						
ANR	652480	Symbol	info . name		652140						
ANR	652481	Symbol	desktopName		652140						
ANR	652482	Symbol	QString		652140						
ANR	652483	Symbol	m_icons		652140						
ANR	652484	Symbol	desktop		652140						
ANR	652485	Symbol	action		652140						
ANR	652486	Symbol	* info		652140						
ANR	652487	Symbol	m_desktopNames . size		652140						
ANR	652488	Symbol	info . desktop		652140						
ANR	652489	Symbol	info . win		652140						
ANR	652490	Symbol	info		652140						
ANR	652491	Function	WindowsRunner :: actionSupported	463:0:20167:20792							
ANR	652492	FunctionDef	"WindowsRunner :: actionSupported (const KWindowInfo & info , WindowAction action)"		652491	0					
ANR	652493	CompoundStatement		464:0:20249:20792	652491	0					
ANR	652494	SwitchStatement	switch ( action )		652491	0					
ANR	652495	Condition	action	465:12:20263:20268	652491	0	True				
ANR	652496	Identifier	action		652491	0					
ANR	652497	CompoundStatement		2:20:21:21	652491	1					
ANR	652498	Label	case CloseAction :	466:4:20277:20293	652491	0	True				
ANR	652499	Identifier	CloseAction		652491	0					
ANR	652500	ReturnStatement	return info . actionSupported ( NET :: ActionClose ) ;	467:8:20303:20348	652491	1	True				
ANR	652501	CallExpression	info . actionSupported ( NET :: ActionClose )		652491	0					
ANR	652502	Callee	info . actionSupported		652491	0					
ANR	652503	MemberAccess	info . actionSupported		652491	0					
ANR	652504	Identifier	info		652491	0					
ANR	652505	Identifier	actionSupported		652491	1					
ANR	652506	ArgumentList	NET :: ActionClose		652491	1					
ANR	652507	Argument	NET :: ActionClose		652491	0					
ANR	652508	Identifier	NET :: ActionClose		652491	0					
ANR	652509	Label	case MinimizeAction :	468:4:20354:20373	652491	2	True				
ANR	652510	Identifier	MinimizeAction		652491	0					
ANR	652511	ReturnStatement	return info . actionSupported ( NET :: ActionMinimize ) ;	469:8:20383:20431	652491	3	True				
ANR	652512	CallExpression	info . actionSupported ( NET :: ActionMinimize )		652491	0					
ANR	652513	Callee	info . actionSupported		652491	0					
ANR	652514	MemberAccess	info . actionSupported		652491	0					
ANR	652515	Identifier	info		652491	0					
ANR	652516	Identifier	actionSupported		652491	1					
ANR	652517	ArgumentList	NET :: ActionMinimize		652491	1					
ANR	652518	Argument	NET :: ActionMinimize		652491	0					
ANR	652519	Identifier	NET :: ActionMinimize		652491	0					
ANR	652520	Label	case MaximizeAction :	470:4:20437:20456	652491	4	True				
ANR	652521	Identifier	MaximizeAction		652491	0					
ANR	652522	ReturnStatement	return info . actionSupported ( NET :: ActionMax ) ;	471:8:20466:20509	652491	5	True				
ANR	652523	CallExpression	info . actionSupported ( NET :: ActionMax )		652491	0					
ANR	652524	Callee	info . actionSupported		652491	0					
ANR	652525	MemberAccess	info . actionSupported		652491	0					
ANR	652526	Identifier	info		652491	0					
ANR	652527	Identifier	actionSupported		652491	1					
ANR	652528	ArgumentList	NET :: ActionMax		652491	1					
ANR	652529	Argument	NET :: ActionMax		652491	0					
ANR	652530	Identifier	NET :: ActionMax		652491	0					
ANR	652531	Label	case ShadeAction :	472:4:20515:20531	652491	6	True				
ANR	652532	Identifier	ShadeAction		652491	0					
ANR	652533	ReturnStatement	return info . actionSupported ( NET :: ActionShade ) ;	473:8:20541:20586	652491	7	True				
ANR	652534	CallExpression	info . actionSupported ( NET :: ActionShade )		652491	0					
ANR	652535	Callee	info . actionSupported		652491	0					
ANR	652536	MemberAccess	info . actionSupported		652491	0					
ANR	652537	Identifier	info		652491	0					
ANR	652538	Identifier	actionSupported		652491	1					
ANR	652539	ArgumentList	NET :: ActionShade		652491	1					
ANR	652540	Argument	NET :: ActionShade		652491	0					
ANR	652541	Identifier	NET :: ActionShade		652491	0					
ANR	652542	Label	case FullscreenAction :	474:4:20592:20613	652491	8	True				
ANR	652543	Identifier	FullscreenAction		652491	0					
ANR	652544	ReturnStatement	return info . actionSupported ( NET :: ActionFullScreen ) ;	475:8:20623:20673	652491	9	True				
ANR	652545	CallExpression	info . actionSupported ( NET :: ActionFullScreen )		652491	0					
ANR	652546	Callee	info . actionSupported		652491	0					
ANR	652547	MemberAccess	info . actionSupported		652491	0					
ANR	652548	Identifier	info		652491	0					
ANR	652549	Identifier	actionSupported		652491	1					
ANR	652550	ArgumentList	NET :: ActionFullScreen		652491	1					
ANR	652551	Argument	NET :: ActionFullScreen		652491	0					
ANR	652552	Identifier	NET :: ActionFullScreen		652491	0					
ANR	652553	Label	case KeepAboveAction :	476:4:20679:20699	652491	10	True				
ANR	652554	Identifier	KeepAboveAction		652491	0					
ANR	652555	Label	case KeepBelowAction :	477:4:20705:20725	652491	11	True				
ANR	652556	Identifier	KeepBelowAction		652491	0					
ANR	652557	Label	case ActivateAction :	478:4:20731:20750	652491	12	True				
ANR	652558	Identifier	ActivateAction		652491	0					
ANR	652559	Label	default :	479:4:20756:20763	652491	13	True				
ANR	652560	Identifier	default		652491	0					
ANR	652561	ReturnStatement	return true ;	480:8:20773:20784	652491	14	True				
ANR	652562	Identifier	true		652491	0					
ANR	652563	ReturnType	bool		652491	1					
ANR	652564	Identifier	WindowsRunner :: actionSupported		652491	2					
ANR	652565	ParameterList	"const KWindowInfo & info , WindowAction action"		652491	3					
ANR	652566	Parameter	const KWindowInfo & info	463:36:20203:20225	652491	0	True				
ANR	652567	ParameterType	const KWindowInfo &		652491	0					
ANR	652568	Identifier	info		652491	1					
ANR	652569	Parameter	WindowAction action	463:61:20228:20246	652491	1	True				
ANR	652570	ParameterType	WindowAction		652491	0					
ANR	652571	Identifier	action		652491	1					
ANR	652572	CFGEntryNode	ENTRY		652491		True				
ANR	652573	CFGExitNode	EXIT		652491		True				
ANR	652574	Symbol	NET :: ActionShade		652491						
ANR	652575	Symbol	NET :: ActionMinimize		652491						
ANR	652576	Symbol	NET :: ActionFullScreen		652491						
ANR	652577	Symbol	info . actionSupported		652491						
ANR	652578	Symbol	true		652491						
ANR	652579	Symbol	action		652491						
ANR	652580	Symbol	NET :: ActionMax		652491						
ANR	652581	Symbol	NET :: ActionClose		652491						
ANR	652582	Symbol	info		652491						
