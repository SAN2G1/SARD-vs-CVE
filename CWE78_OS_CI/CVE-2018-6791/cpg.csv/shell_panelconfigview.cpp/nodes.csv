command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	692015	File	data/converged/CVE-2018-6791_plasma-workspace/shell_panelconfigview.cpp								
ANR	692016	Function	PanelConfigView :: PanelConfigView	42:1:1271:3126							
ANR	692017	FunctionDef	"PanelConfigView :: PanelConfigView (Plasma :: Containment * containment , PanelView * panelView , QWindow * parent)"		692016	0					
ANR	692018	CompoundStatement		49:0:1562:3126	692016	0					
ANR	692019	ExpressionStatement	"connect ( panelView , & QObject :: destroyed , this , & QObject :: deleteLater )"	50:4:1568:1636	692016	0	True				
ANR	692020	CallExpression	"connect ( panelView , & QObject :: destroyed , this , & QObject :: deleteLater )"		692016	0					
ANR	692021	Callee	connect		692016	0					
ANR	692022	Identifier	connect		692016	0					
ANR	692023	ArgumentList	panelView		692016	1					
ANR	692024	Argument	panelView		692016	0					
ANR	692025	Identifier	panelView		692016	0					
ANR	692026	Argument	& QObject :: destroyed		692016	1					
ANR	692027	UnaryOperationExpression	& QObject :: destroyed		692016	0					
ANR	692028	UnaryOperator	&		692016	0					
ANR	692029	Identifier	QObject :: destroyed		692016	1					
ANR	692030	Argument	this		692016	2					
ANR	692031	Identifier	this		692016	0					
ANR	692032	Argument	& QObject :: deleteLater		692016	3					
ANR	692033	UnaryOperationExpression	& QObject :: deleteLater		692016	0					
ANR	692034	UnaryOperator	&		692016	0					
ANR	692035	Identifier	QObject :: deleteLater		692016	1					
ANR	692036	ExpressionStatement	setScreen ( panelView -> screen ( ) )	52:4:1643:1673	692016	1	True				
ANR	692037	CallExpression	setScreen ( panelView -> screen ( ) )		692016	0					
ANR	692038	Callee	setScreen		692016	0					
ANR	692039	Identifier	setScreen		692016	0					
ANR	692040	ArgumentList	panelView -> screen ( )		692016	1					
ANR	692041	Argument	panelView -> screen ( )		692016	0					
ANR	692042	CallExpression	panelView -> screen ( )		692016	0					
ANR	692043	Callee	panelView -> screen		692016	0					
ANR	692044	PtrMemberAccess	panelView -> screen		692016	0					
ANR	692045	Identifier	panelView		692016	0					
ANR	692046	Identifier	screen		692016	1					
ANR	692047	ArgumentList			692016	1					
ANR	692048	Statement	connect	54:4:1680:1686	692016	2	True				
ANR	692049	Statement	(	54:11:1687:1687	692016	3	True				
ANR	692050	Statement	panelView	54:12:1688:1696	692016	4	True				
ANR	692051	Statement	","	54:21:1697:1697	692016	5	True				
ANR	692052	Statement	SIGNAL	54:23:1699:1704	692016	6	True				
ANR	692053	Statement	(	54:29:1705:1705	692016	7	True				
ANR	692054	Statement	screenChanged	54:30:1706:1718	692016	8	True				
ANR	692055	Statement	(	54:43:1719:1719	692016	9	True				
ANR	692056	Statement	QScreen	54:44:1720:1726	692016	10	True				
ANR	692057	Statement	*	54:52:1728:1728	692016	11	True				
ANR	692058	Statement	)	54:53:1729:1729	692016	12	True				
ANR	692059	Statement	)	54:54:1730:1730	692016	13	True				
ANR	692060	Statement	","	54:55:1731:1731	692016	14	True				
ANR	692061	Statement	&	54:57:1733:1733	692016	15	True				
ANR	692062	Statement	m_screenSyncTimer	54:58:1734:1750	692016	16	True				
ANR	692063	Statement	","	54:75:1751:1751	692016	17	True				
ANR	692064	Statement	SLOT	54:77:1753:1756	692016	18	True				
ANR	692065	Statement	(	54:81:1757:1757	692016	19	True				
ANR	692066	Statement	start	54:82:1758:1762	692016	20	True				
ANR	692067	Statement	(	54:87:1763:1763	692016	21	True				
ANR	692068	Statement	)	54:88:1764:1764	692016	22	True				
ANR	692069	Statement	)	54:89:1765:1765	692016	23	True				
ANR	692070	Statement	)	54:90:1766:1766	692016	24	True				
ANR	692071	ExpressionStatement		54:91:1767:1767	692016	25	True				
ANR	692072	ExpressionStatement	m_screenSyncTimer . setSingleShot ( true )	55:4:1773:1810	692016	26	True				
ANR	692073	CallExpression	m_screenSyncTimer . setSingleShot ( true )		692016	0					
ANR	692074	Callee	m_screenSyncTimer . setSingleShot		692016	0					
ANR	692075	MemberAccess	m_screenSyncTimer . setSingleShot		692016	0					
ANR	692076	Identifier	m_screenSyncTimer		692016	0					
ANR	692077	Identifier	setSingleShot		692016	1					
ANR	692078	ArgumentList	true		692016	1					
ANR	692079	Argument	true		692016	0					
ANR	692080	Identifier	true		692016	0					
ANR	692081	ExpressionStatement	m_screenSyncTimer . setInterval ( 150 )	56:4:1816:1850	692016	27	True				
ANR	692082	CallExpression	m_screenSyncTimer . setInterval ( 150 )		692016	0					
ANR	692083	Callee	m_screenSyncTimer . setInterval		692016	0					
ANR	692084	MemberAccess	m_screenSyncTimer . setInterval		692016	0					
ANR	692085	Identifier	m_screenSyncTimer		692016	0					
ANR	692086	Identifier	setInterval		692016	1					
ANR	692087	ArgumentList	150		692016	1					
ANR	692088	Argument	150		692016	0					
ANR	692089	PrimaryExpression	150		692016	0					
ANR	692090	Statement	connect	57:4:1856:1862	692016	28	True				
ANR	692091	Statement	(	57:11:1863:1863	692016	29	True				
ANR	692092	Statement	&	57:12:1864:1864	692016	30	True				
ANR	692093	Statement	m_screenSyncTimer	57:13:1865:1881	692016	31	True				
ANR	692094	Statement	","	57:30:1882:1882	692016	32	True				
ANR	692095	Statement	&	57:32:1884:1884	692016	33	True				
ANR	692096	Statement	QTimer	57:33:1885:1890	692016	34	True				
ANR	692097	Statement	::	57:39:1891:1892	692016	35	True				
ANR	692098	Statement	timeout	57:41:1893:1899	692016	36	True				
ANR	692099	Statement	","	57:48:1900:1900	692016	37	True				
ANR	692100	Statement	[	58:12:1914:1914	692016	38	True				
ANR	692101	Statement	=	58:13:1915:1915	692016	39	True				
ANR	692102	Statement	]	58:14:1916:1916	692016	40	True				
ANR	692103	Statement	(	58:15:1917:1917	692016	41	True				
ANR	692104	Statement	)	58:16:1918:1918	692016	42	True				
ANR	692105	CompoundStatement		10:18:357:357	692016	43					
ANR	692106	ExpressionStatement	setScreen ( panelView -> screen ( ) )	59:16:1938:1968	692016	0	True				
ANR	692107	CallExpression	setScreen ( panelView -> screen ( ) )		692016	0					
ANR	692108	Callee	setScreen		692016	0					
ANR	692109	Identifier	setScreen		692016	0					
ANR	692110	ArgumentList	panelView -> screen ( )		692016	1					
ANR	692111	Argument	panelView -> screen ( )		692016	0					
ANR	692112	CallExpression	panelView -> screen ( )		692016	0					
ANR	692113	Callee	panelView -> screen		692016	0					
ANR	692114	PtrMemberAccess	panelView -> screen		692016	0					
ANR	692115	Identifier	panelView		692016	0					
ANR	692116	Identifier	screen		692016	1					
ANR	692117	ArgumentList			692016	1					
ANR	692118	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Dock )"	60:16:1986:2028	692016	1	True				
ANR	692119	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Dock )"		692016	0					
ANR	692120	Callee	KWindowSystem :: setType		692016	0					
ANR	692121	Identifier	KWindowSystem :: setType		692016	0					
ANR	692122	ArgumentList	winId ( )		692016	1					
ANR	692123	Argument	winId ( )		692016	0					
ANR	692124	CallExpression	winId ( )		692016	0					
ANR	692125	Callee	winId		692016	0					
ANR	692126	Identifier	winId		692016	0					
ANR	692127	ArgumentList			692016	1					
ANR	692128	Argument	NET :: Dock		692016	1					
ANR	692129	Identifier	NET :: Dock		692016	0					
ANR	692130	ExpressionStatement	setFlags ( Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) ) )	61:16:2046:2169	692016	2	True				
ANR	692131	CallExpression	setFlags ( Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) ) )		692016	0					
ANR	692132	Callee	setFlags		692016	0					
ANR	692133	Identifier	setFlags		692016	0					
ANR	692134	ArgumentList	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		692016	1					
ANR	692135	Argument	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		692016	0					
ANR	692136	CallExpression	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		692016	0					
ANR	692137	Callee	Qt :: WindowFlags		692016	0					
ANR	692138	Identifier	Qt :: WindowFlags		692016	0					
ANR	692139	ArgumentList	( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		692016	1					
ANR	692140	Argument	( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		692016	0					
ANR	692141	BitAndExpression	( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		692016	0		&			
ANR	692142	InclusiveOrExpression	flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		692016	0		|			
ANR	692143	CallExpression	flags ( )		692016	0					
ANR	692144	Callee	flags		692016	0					
ANR	692145	Identifier	flags		692016	0					
ANR	692146	ArgumentList			692016	1					
ANR	692147	InclusiveOrExpression	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		692016	1		|			
ANR	692148	Identifier	Qt :: FramelessWindowHint		692016	0					
ANR	692149	Identifier	Qt :: WindowStaysOnTopHint		692016	1					
ANR	692150	Identifier	~Qt :: WindowDoesNotAcceptFocus		692016	1					
ANR	692151	ExpressionStatement	"KWindowSystem :: setState ( winId ( ) , NET :: KeepAbove )"	62:16:2187:2235	692016	3	True				
ANR	692152	CallExpression	"KWindowSystem :: setState ( winId ( ) , NET :: KeepAbove )"		692016	0					
ANR	692153	Callee	KWindowSystem :: setState		692016	0					
ANR	692154	Identifier	KWindowSystem :: setState		692016	0					
ANR	692155	ArgumentList	winId ( )		692016	1					
ANR	692156	Argument	winId ( )		692016	0					
ANR	692157	CallExpression	winId ( )		692016	0					
ANR	692158	Callee	winId		692016	0					
ANR	692159	Identifier	winId		692016	0					
ANR	692160	ArgumentList			692016	1					
ANR	692161	Argument	NET :: KeepAbove		692016	1					
ANR	692162	Identifier	NET :: KeepAbove		692016	0					
ANR	692163	ExpressionStatement	syncGeometry ( )	63:16:2253:2267	692016	4	True				
ANR	692164	CallExpression	syncGeometry ( )		692016	0					
ANR	692165	Callee	syncGeometry		692016	0					
ANR	692166	Identifier	syncGeometry		692016	0					
ANR	692167	ArgumentList			692016	1					
ANR	692168	ExpressionStatement	syncLocation ( )	64:16:2285:2299	692016	5	True				
ANR	692169	CallExpression	syncLocation ( )		692016	0					
ANR	692170	Callee	syncLocation		692016	0					
ANR	692171	Identifier	syncLocation		692016	0					
ANR	692172	ArgumentList			692016	1					
ANR	692173	Statement	)	65:13:2314:2314	692016	44	True				
ANR	692174	ExpressionStatement		65:14:2315:2315	692016	45	True				
ANR	692175	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Dock )"	67:4:2322:2364	692016	46	True				
ANR	692176	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Dock )"		692016	0					
ANR	692177	Callee	KWindowSystem :: setType		692016	0					
ANR	692178	Identifier	KWindowSystem :: setType		692016	0					
ANR	692179	ArgumentList	winId ( )		692016	1					
ANR	692180	Argument	winId ( )		692016	0					
ANR	692181	CallExpression	winId ( )		692016	0					
ANR	692182	Callee	winId		692016	0					
ANR	692183	Identifier	winId		692016	0					
ANR	692184	ArgumentList			692016	1					
ANR	692185	Argument	NET :: Dock		692016	1					
ANR	692186	Identifier	NET :: Dock		692016	0					
ANR	692187	ExpressionStatement	"KWindowSystem :: setState ( winId ( ) , NET :: KeepAbove )"	68:4:2370:2418	692016	47	True				
ANR	692188	CallExpression	"KWindowSystem :: setState ( winId ( ) , NET :: KeepAbove )"		692016	0					
ANR	692189	Callee	KWindowSystem :: setState		692016	0					
ANR	692190	Identifier	KWindowSystem :: setState		692016	0					
ANR	692191	ArgumentList	winId ( )		692016	1					
ANR	692192	Argument	winId ( )		692016	0					
ANR	692193	CallExpression	winId ( )		692016	0					
ANR	692194	Callee	winId		692016	0					
ANR	692195	Identifier	winId		692016	0					
ANR	692196	ArgumentList			692016	1					
ANR	692197	Argument	NET :: KeepAbove		692016	1					
ANR	692198	Identifier	NET :: KeepAbove		692016	0					
ANR	692199	ExpressionStatement	setFlags ( Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) ) )	69:4:2424:2547	692016	48	True				
ANR	692200	CallExpression	setFlags ( Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) ) )		692016	0					
ANR	692201	Callee	setFlags		692016	0					
ANR	692202	Identifier	setFlags		692016	0					
ANR	692203	ArgumentList	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		692016	1					
ANR	692204	Argument	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		692016	0					
ANR	692205	CallExpression	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		692016	0					
ANR	692206	Callee	Qt :: WindowFlags		692016	0					
ANR	692207	Identifier	Qt :: WindowFlags		692016	0					
ANR	692208	ArgumentList	( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		692016	1					
ANR	692209	Argument	( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		692016	0					
ANR	692210	BitAndExpression	( flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		692016	0		&			
ANR	692211	InclusiveOrExpression	flags ( ) | Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		692016	0		|			
ANR	692212	CallExpression	flags ( )		692016	0					
ANR	692213	Callee	flags		692016	0					
ANR	692214	Identifier	flags		692016	0					
ANR	692215	ArgumentList			692016	1					
ANR	692216	InclusiveOrExpression	Qt :: FramelessWindowHint | Qt :: WindowStaysOnTopHint		692016	1		|			
ANR	692217	Identifier	Qt :: FramelessWindowHint		692016	0					
ANR	692218	Identifier	Qt :: WindowStaysOnTopHint		692016	1					
ANR	692219	Identifier	~Qt :: WindowDoesNotAcceptFocus		692016	1					
ANR	692220	ExpressionStatement	KWindowSystem :: forceActiveWindow ( winId ( ) )	70:4:2553:2594	692016	49	True				
ANR	692221	CallExpression	KWindowSystem :: forceActiveWindow ( winId ( ) )		692016	0					
ANR	692222	Callee	KWindowSystem :: forceActiveWindow		692016	0					
ANR	692223	Identifier	KWindowSystem :: forceActiveWindow		692016	0					
ANR	692224	ArgumentList	winId ( )		692016	1					
ANR	692225	Argument	winId ( )		692016	0					
ANR	692226	CallExpression	winId ( )		692016	0					
ANR	692227	Callee	winId		692016	0					
ANR	692228	Identifier	winId		692016	0					
ANR	692229	ArgumentList			692016	1					
ANR	692230	ExpressionStatement	"KWindowEffects :: enableBlurBehind ( winId ( ) , true )"	72:4:2601:2648	692016	50	True				
ANR	692231	CallExpression	"KWindowEffects :: enableBlurBehind ( winId ( ) , true )"		692016	0					
ANR	692232	Callee	KWindowEffects :: enableBlurBehind		692016	0					
ANR	692233	Identifier	KWindowEffects :: enableBlurBehind		692016	0					
ANR	692234	ArgumentList	winId ( )		692016	1					
ANR	692235	Argument	winId ( )		692016	0					
ANR	692236	CallExpression	winId ( )		692016	0					
ANR	692237	Callee	winId		692016	0					
ANR	692238	Identifier	winId		692016	0					
ANR	692239	ArgumentList			692016	1					
ANR	692240	Argument	true		692016	1					
ANR	692241	Identifier	true		692016	0					
ANR	692242	ExpressionStatement	updateContrast ( )	73:4:2654:2670	692016	51	True				
ANR	692243	CallExpression	updateContrast ( )		692016	0					
ANR	692244	Callee	updateContrast		692016	0					
ANR	692245	Identifier	updateContrast		692016	0					
ANR	692246	ArgumentList			692016	1					
ANR	692247	ExpressionStatement	"connect ( & m_theme , & Plasma :: Theme :: themeChanged , this , & PanelConfigView :: updateContrast )"	74:4:2676:2763	692016	52	True				
ANR	692248	CallExpression	"connect ( & m_theme , & Plasma :: Theme :: themeChanged , this , & PanelConfigView :: updateContrast )"		692016	0					
ANR	692249	Callee	connect		692016	0					
ANR	692250	Identifier	connect		692016	0					
ANR	692251	ArgumentList	& m_theme		692016	1					
ANR	692252	Argument	& m_theme		692016	0					
ANR	692253	UnaryOperationExpression	& m_theme		692016	0					
ANR	692254	UnaryOperator	&		692016	0					
ANR	692255	Identifier	m_theme		692016	1					
ANR	692256	Argument	& Plasma :: Theme :: themeChanged		692016	1					
ANR	692257	UnaryOperationExpression	& Plasma :: Theme :: themeChanged		692016	0					
ANR	692258	UnaryOperator	&		692016	0					
ANR	692259	Identifier	Plasma :: Theme :: themeChanged		692016	1					
ANR	692260	Argument	this		692016	2					
ANR	692261	Identifier	this		692016	0					
ANR	692262	Argument	& PanelConfigView :: updateContrast		692016	3					
ANR	692263	UnaryOperationExpression	& PanelConfigView :: updateContrast		692016	0					
ANR	692264	UnaryOperator	&		692016	0					
ANR	692265	Identifier	PanelConfigView :: updateContrast		692016	1					
ANR	692266	ExpressionStatement	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""panel"" ) , panelView )"	76:4:2770:2839	692016	53	True				
ANR	692267	CallExpression	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""panel"" ) , panelView )"		692016	0					
ANR	692268	Callee	rootContext ( ) -> setContextProperty		692016	0					
ANR	692269	PtrMemberAccess	rootContext ( ) -> setContextProperty		692016	0					
ANR	692270	CallExpression	rootContext ( )		692016	0					
ANR	692271	Callee	rootContext		692016	0					
ANR	692272	Identifier	rootContext		692016	0					
ANR	692273	ArgumentList			692016	1					
ANR	692274	Identifier	setContextProperty		692016	1					
ANR	692275	ArgumentList	"QStringLiteral ( ""panel"" )"		692016	1					
ANR	692276	Argument	"QStringLiteral ( ""panel"" )"		692016	0					
ANR	692277	CallExpression	"QStringLiteral ( ""panel"" )"		692016	0					
ANR	692278	Callee	QStringLiteral		692016	0					
ANR	692279	Identifier	QStringLiteral		692016	0					
ANR	692280	ArgumentList	"""panel"""		692016	1					
ANR	692281	Argument	"""panel"""		692016	0					
ANR	692282	PrimaryExpression	"""panel"""		692016	0					
ANR	692283	Argument	panelView		692016	1					
ANR	692284	Identifier	panelView		692016	0					
ANR	692285	ExpressionStatement	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""configDialog"" ) , this )"	77:4:2845:2916	692016	54	True				
ANR	692286	CallExpression	"rootContext ( ) -> setContextProperty ( QStringLiteral ( ""configDialog"" ) , this )"		692016	0					
ANR	692287	Callee	rootContext ( ) -> setContextProperty		692016	0					
ANR	692288	PtrMemberAccess	rootContext ( ) -> setContextProperty		692016	0					
ANR	692289	CallExpression	rootContext ( )		692016	0					
ANR	692290	Callee	rootContext		692016	0					
ANR	692291	Identifier	rootContext		692016	0					
ANR	692292	ArgumentList			692016	1					
ANR	692293	Identifier	setContextProperty		692016	1					
ANR	692294	ArgumentList	"QStringLiteral ( ""configDialog"" )"		692016	1					
ANR	692295	Argument	"QStringLiteral ( ""configDialog"" )"		692016	0					
ANR	692296	CallExpression	"QStringLiteral ( ""configDialog"" )"		692016	0					
ANR	692297	Callee	QStringLiteral		692016	0					
ANR	692298	Identifier	QStringLiteral		692016	0					
ANR	692299	ArgumentList	"""configDialog"""		692016	1					
ANR	692300	Argument	"""configDialog"""		692016	0					
ANR	692301	PrimaryExpression	"""configDialog"""		692016	0					
ANR	692302	Argument	this		692016	1					
ANR	692303	Identifier	this		692016	0					
ANR	692304	ExpressionStatement	"connect ( containment , & Plasma :: Containment :: formFactorChanged , this , & PanelConfigView :: syncGeometry )"	78:4:2922:3021	692016	55	True				
ANR	692305	CallExpression	"connect ( containment , & Plasma :: Containment :: formFactorChanged , this , & PanelConfigView :: syncGeometry )"		692016	0					
ANR	692306	Callee	connect		692016	0					
ANR	692307	Identifier	connect		692016	0					
ANR	692308	ArgumentList	containment		692016	1					
ANR	692309	Argument	containment		692016	0					
ANR	692310	Identifier	containment		692016	0					
ANR	692311	Argument	& Plasma :: Containment :: formFactorChanged		692016	1					
ANR	692312	UnaryOperationExpression	& Plasma :: Containment :: formFactorChanged		692016	0					
ANR	692313	UnaryOperator	&		692016	0					
ANR	692314	Identifier	Plasma :: Containment :: formFactorChanged		692016	1					
ANR	692315	Argument	this		692016	2					
ANR	692316	Identifier	this		692016	0					
ANR	692317	Argument	& PanelConfigView :: syncGeometry		692016	3					
ANR	692318	UnaryOperationExpression	& PanelConfigView :: syncGeometry		692016	0					
ANR	692319	UnaryOperator	&		692016	0					
ANR	692320	Identifier	PanelConfigView :: syncGeometry		692016	1					
ANR	692321	ExpressionStatement	"connect ( containment , & Plasma :: Containment :: locationChanged , this , & PanelConfigView :: syncLocation )"	79:4:3027:3124	692016	56	True				
ANR	692322	CallExpression	"connect ( containment , & Plasma :: Containment :: locationChanged , this , & PanelConfigView :: syncLocation )"		692016	0					
ANR	692323	Callee	connect		692016	0					
ANR	692324	Identifier	connect		692016	0					
ANR	692325	ArgumentList	containment		692016	1					
ANR	692326	Argument	containment		692016	0					
ANR	692327	Identifier	containment		692016	0					
ANR	692328	Argument	& Plasma :: Containment :: locationChanged		692016	1					
ANR	692329	UnaryOperationExpression	& Plasma :: Containment :: locationChanged		692016	0					
ANR	692330	UnaryOperator	&		692016	0					
ANR	692331	Identifier	Plasma :: Containment :: locationChanged		692016	1					
ANR	692332	Argument	this		692016	2					
ANR	692333	Identifier	this		692016	0					
ANR	692334	Argument	& PanelConfigView :: syncLocation		692016	3					
ANR	692335	UnaryOperationExpression	& PanelConfigView :: syncLocation		692016	0					
ANR	692336	UnaryOperator	&		692016	0					
ANR	692337	Identifier	PanelConfigView :: syncLocation		692016	1					
ANR	692338	ReturnType	include < KWayland / Client / surface . h >		692016	1					
ANR	692339	Identifier	PanelConfigView :: PanelConfigView		692016	2					
ANR	692340	ParameterList	"Plasma :: Containment * containment , PanelView * panelView , QWindow * parent"		692016	3					
ANR	692341	Parameter	Plasma :: Containment * containment	45:33:1387:1418	692016	0	True				
ANR	692342	ParameterType	Plasma :: Containment *		692016	0					
ANR	692343	Identifier	containment		692016	1					
ANR	692344	Parameter	PanelView * panelView	45:67:1421:1440	692016	1	True				
ANR	692345	ParameterType	PanelView *		692016	0					
ANR	692346	Identifier	panelView		692016	1					
ANR	692347	Parameter	QWindow * parent	45:89:1443:1457	692016	2	True				
ANR	692348	ParameterType	QWindow *		692016	0					
ANR	692349	Identifier	parent		692016	1					
ANR	692350	CFGEntryNode	ENTRY		692016		True				
ANR	692351	CFGExitNode	EXIT		692016		True				
ANR	692352	Symbol	parent		692016						
ANR	692353	Symbol	Qt :: WindowStaysOnTopHint		692016						
ANR	692354	Symbol	& QObject :: deleteLater		692016						
ANR	692355	Symbol	& QObject :: destroyed		692016						
ANR	692356	Symbol	m_screenSyncTimer		692016						
ANR	692357	Symbol	& Plasma :: Containment :: locationChanged		692016						
ANR	692358	Symbol	* panelView		692016						
ANR	692359	Symbol	flags		692016						
ANR	692360	Symbol	NET :: KeepAbove		692016						
ANR	692361	Symbol	& PanelConfigView :: syncLocation		692016						
ANR	692362	Symbol	NET :: Dock		692016						
ANR	692363	Symbol	containment		692016						
ANR	692364	Symbol	panelView -> screen		692016						
ANR	692365	Symbol	& Plasma :: Containment :: formFactorChanged		692016						
ANR	692366	Symbol	this		692016						
ANR	692367	Symbol	Qt :: FramelessWindowHint		692016						
ANR	692368	Symbol	winId		692016						
ANR	692369	Symbol	panelView		692016						
ANR	692370	Symbol	~Qt :: WindowDoesNotAcceptFocus		692016						
ANR	692371	Symbol	true		692016						
ANR	692372	Symbol	& Plasma :: Theme :: themeChanged		692016						
ANR	692373	Symbol	& m_theme		692016						
ANR	692374	Symbol	QStringLiteral		692016						
ANR	692375	Symbol	Qt :: WindowFlags		692016						
ANR	692376	Symbol	& PanelConfigView :: syncGeometry		692016						
ANR	692377	Symbol	& PanelConfigView :: updateContrast		692016						
ANR	692378	Symbol	rootContext		692016						
ANR	692379	Function	PanelConfigView :: ~PanelConfigView	82:0:3129:3167							
ANR	692380	FunctionDef	PanelConfigView :: ~PanelConfigView ()		692379	0					
ANR	692381	CompoundStatement		83:0:3165:3167	692379	0					
ANR	692382	Identifier	PanelConfigView :: ~PanelConfigView		692379	1					
ANR	692383	ParameterList			692379	2					
ANR	692384	CFGEntryNode	ENTRY		692379		True				
ANR	692385	CFGExitNode	EXIT		692379		True				
ANR	692386	Function	PanelConfigView :: init	86:0:3170:3347							
ANR	692387	FunctionDef	PanelConfigView :: init ()		692386	0					
ANR	692388	CompoundStatement		87:0:3199:3347	692386	0					
ANR	692389	ExpressionStatement	"setSource ( QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" ) ) )"	88:4:3205:3305	692386	0	True				
ANR	692390	CallExpression	"setSource ( QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" ) ) )"		692386	0					
ANR	692391	Callee	setSource		692386	0					
ANR	692392	Identifier	setSource		692386	0					
ANR	692393	ArgumentList	"QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" ) )"		692386	1					
ANR	692394	Argument	"QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" ) )"		692386	0					
ANR	692395	CallExpression	"QUrl :: fromLocalFile ( m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" ) )"		692386	0					
ANR	692396	Callee	QUrl :: fromLocalFile		692386	0					
ANR	692397	Identifier	QUrl :: fromLocalFile		692386	0					
ANR	692398	ArgumentList	"m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" )"		692386	1					
ANR	692399	Argument	"m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" )"		692386	0					
ANR	692400	CallExpression	"m_containment -> corona ( ) -> kPackage ( ) . filePath ( ""panelconfigurationui"" )"		692386	0					
ANR	692401	Callee	m_containment -> corona ( ) -> kPackage ( ) . filePath		692386	0					
ANR	692402	MemberAccess	m_containment -> corona ( ) -> kPackage ( ) . filePath		692386	0					
ANR	692403	CallExpression	m_containment -> corona ( ) -> kPackage ( )		692386	0					
ANR	692404	Callee	m_containment -> corona ( ) -> kPackage		692386	0					
ANR	692405	PtrMemberAccess	m_containment -> corona ( ) -> kPackage		692386	0					
ANR	692406	CallExpression	m_containment -> corona ( )		692386	0					
ANR	692407	Callee	m_containment -> corona		692386	0					
ANR	692408	PtrMemberAccess	m_containment -> corona		692386	0					
ANR	692409	Identifier	m_containment		692386	0					
ANR	692410	Identifier	corona		692386	1					
ANR	692411	ArgumentList			692386	1					
ANR	692412	Identifier	kPackage		692386	1					
ANR	692413	ArgumentList			692386	1					
ANR	692414	Identifier	filePath		692386	1					
ANR	692415	ArgumentList	"""panelconfigurationui"""		692386	1					
ANR	692416	Argument	"""panelconfigurationui"""		692386	0					
ANR	692417	PrimaryExpression	"""panelconfigurationui"""		692386	0					
ANR	692418	ExpressionStatement	syncGeometry ( )	89:4:3311:3325	692386	1	True				
ANR	692419	CallExpression	syncGeometry ( )		692386	0					
ANR	692420	Callee	syncGeometry		692386	0					
ANR	692421	Identifier	syncGeometry		692386	0					
ANR	692422	ArgumentList			692386	1					
ANR	692423	ExpressionStatement	syncLocation ( )	90:4:3331:3345	692386	2	True				
ANR	692424	CallExpression	syncLocation ( )		692386	0					
ANR	692425	Callee	syncLocation		692386	0					
ANR	692426	Identifier	syncLocation		692386	0					
ANR	692427	ArgumentList			692386	1					
ANR	692428	ReturnType	void		692386	1					
ANR	692429	Identifier	PanelConfigView :: init		692386	2					
ANR	692430	ParameterList			692386	3					
ANR	692431	CFGEntryNode	ENTRY		692386		True				
ANR	692432	CFGExitNode	EXIT		692386		True				
ANR	692433	Symbol	m_containment -> corona ( ) -> kPackage		692386						
ANR	692434	Symbol	m_containment -> corona		692386						
ANR	692435	Symbol	* m_containment -> corona		692386						
ANR	692436	Symbol	QUrl :: fromLocalFile		692386						
ANR	692437	Symbol	* * m_containment		692386						
ANR	692438	Symbol	* m_containment		692386						
ANR	692439	Symbol	m_containment		692386						
ANR	692440	Symbol	m_containment -> corona ( ) -> kPackage ( ) . filePath		692386						
ANR	692441	Function	PanelConfigView :: updateContrast	93:0:3350:3738							
ANR	692442	FunctionDef	PanelConfigView :: updateContrast ()		692441	0					
ANR	692443	CompoundStatement		94:0:3389:3738	692441	0					
ANR	692444	ExpressionStatement	"KWindowEffects :: enableBackgroundContrast ( winId ( ) , m_theme . backgroundContrastEnabled ( ) , m_theme . backgroundContrast ( ) , m_theme . backgroundIntensity ( ) , m_theme . backgroundSaturation ( ) )"	95:4:3395:3736	692441	0	True				
ANR	692445	CallExpression	"KWindowEffects :: enableBackgroundContrast ( winId ( ) , m_theme . backgroundContrastEnabled ( ) , m_theme . backgroundContrast ( ) , m_theme . backgroundIntensity ( ) , m_theme . backgroundSaturation ( ) )"		692441	0					
ANR	692446	Callee	KWindowEffects :: enableBackgroundContrast		692441	0					
ANR	692447	Identifier	KWindowEffects :: enableBackgroundContrast		692441	0					
ANR	692448	ArgumentList	winId ( )		692441	1					
ANR	692449	Argument	winId ( )		692441	0					
ANR	692450	CallExpression	winId ( )		692441	0					
ANR	692451	Callee	winId		692441	0					
ANR	692452	Identifier	winId		692441	0					
ANR	692453	ArgumentList			692441	1					
ANR	692454	Argument	m_theme . backgroundContrastEnabled ( )		692441	1					
ANR	692455	CallExpression	m_theme . backgroundContrastEnabled ( )		692441	0					
ANR	692456	Callee	m_theme . backgroundContrastEnabled		692441	0					
ANR	692457	MemberAccess	m_theme . backgroundContrastEnabled		692441	0					
ANR	692458	Identifier	m_theme		692441	0					
ANR	692459	Identifier	backgroundContrastEnabled		692441	1					
ANR	692460	ArgumentList			692441	1					
ANR	692461	Argument	m_theme . backgroundContrast ( )		692441	2					
ANR	692462	CallExpression	m_theme . backgroundContrast ( )		692441	0					
ANR	692463	Callee	m_theme . backgroundContrast		692441	0					
ANR	692464	MemberAccess	m_theme . backgroundContrast		692441	0					
ANR	692465	Identifier	m_theme		692441	0					
ANR	692466	Identifier	backgroundContrast		692441	1					
ANR	692467	ArgumentList			692441	1					
ANR	692468	Argument	m_theme . backgroundIntensity ( )		692441	3					
ANR	692469	CallExpression	m_theme . backgroundIntensity ( )		692441	0					
ANR	692470	Callee	m_theme . backgroundIntensity		692441	0					
ANR	692471	MemberAccess	m_theme . backgroundIntensity		692441	0					
ANR	692472	Identifier	m_theme		692441	0					
ANR	692473	Identifier	backgroundIntensity		692441	1					
ANR	692474	ArgumentList			692441	1					
ANR	692475	Argument	m_theme . backgroundSaturation ( )		692441	4					
ANR	692476	CallExpression	m_theme . backgroundSaturation ( )		692441	0					
ANR	692477	Callee	m_theme . backgroundSaturation		692441	0					
ANR	692478	MemberAccess	m_theme . backgroundSaturation		692441	0					
ANR	692479	Identifier	m_theme		692441	0					
ANR	692480	Identifier	backgroundSaturation		692441	1					
ANR	692481	ArgumentList			692441	1					
ANR	692482	ReturnType	void		692441	1					
ANR	692483	Identifier	PanelConfigView :: updateContrast		692441	2					
ANR	692484	ParameterList			692441	3					
ANR	692485	CFGEntryNode	ENTRY		692441		True				
ANR	692486	CFGExitNode	EXIT		692441		True				
ANR	692487	Symbol	m_theme		692441						
ANR	692488	Symbol	m_theme . backgroundContrast		692441						
ANR	692489	Symbol	m_theme . backgroundContrastEnabled		692441						
ANR	692490	Symbol	m_theme . backgroundIntensity		692441						
ANR	692491	Symbol	winId		692441						
ANR	692492	Symbol	m_theme . backgroundSaturation		692441						
ANR	692493	Function	PanelConfigView :: showAddWidgetDialog	101:0:3741:3952							
ANR	692494	FunctionDef	PanelConfigView :: showAddWidgetDialog ()		692493	0					
ANR	692495	CompoundStatement		102:0:3785:3952	692493	0					
ANR	692496	IdentifierDeclStatement	"QAction * addWidgetAction = m_containment -> actions ( ) -> action ( QStringLiteral ( ""add widgets"" ) ) ;"	103:4:3791:3881	692493	0	True				
ANR	692497	IdentifierDecl	"* addWidgetAction = m_containment -> actions ( ) -> action ( QStringLiteral ( ""add widgets"" ) )"		692493	0					
ANR	692498	IdentifierDeclType	QAction *		692493	0					
ANR	692499	Identifier	addWidgetAction		692493	1					
ANR	692500	AssignmentExpression	"* addWidgetAction = m_containment -> actions ( ) -> action ( QStringLiteral ( ""add widgets"" ) )"		692493	2		=			
ANR	692501	Identifier	addWidgetAction		692493	0					
ANR	692502	CallExpression	"m_containment -> actions ( ) -> action ( QStringLiteral ( ""add widgets"" ) )"		692493	1					
ANR	692503	Callee	m_containment -> actions ( ) -> action		692493	0					
ANR	692504	PtrMemberAccess	m_containment -> actions ( ) -> action		692493	0					
ANR	692505	CallExpression	m_containment -> actions ( )		692493	0					
ANR	692506	Callee	m_containment -> actions		692493	0					
ANR	692507	PtrMemberAccess	m_containment -> actions		692493	0					
ANR	692508	Identifier	m_containment		692493	0					
ANR	692509	Identifier	actions		692493	1					
ANR	692510	ArgumentList			692493	1					
ANR	692511	Identifier	action		692493	1					
ANR	692512	ArgumentList	"QStringLiteral ( ""add widgets"" )"		692493	1					
ANR	692513	Argument	"QStringLiteral ( ""add widgets"" )"		692493	0					
ANR	692514	CallExpression	"QStringLiteral ( ""add widgets"" )"		692493	0					
ANR	692515	Callee	QStringLiteral		692493	0					
ANR	692516	Identifier	QStringLiteral		692493	0					
ANR	692517	ArgumentList	"""add widgets"""		692493	1					
ANR	692518	Argument	"""add widgets"""		692493	0					
ANR	692519	PrimaryExpression	"""add widgets"""		692493	0					
ANR	692520	IfStatement	if ( addWidgetAction )		692493	1					
ANR	692521	Condition	addWidgetAction	104:8:3891:3905	692493	0	True				
ANR	692522	Identifier	addWidgetAction		692493	0					
ANR	692523	CompoundStatement		3:25:122:122	692493	1					
ANR	692524	ExpressionStatement	addWidgetAction -> trigger ( )	105:8:3918:3944	692493	0	True				
ANR	692525	CallExpression	addWidgetAction -> trigger ( )		692493	0					
ANR	692526	Callee	addWidgetAction -> trigger		692493	0					
ANR	692527	PtrMemberAccess	addWidgetAction -> trigger		692493	0					
ANR	692528	Identifier	addWidgetAction		692493	0					
ANR	692529	Identifier	trigger		692493	1					
ANR	692530	ArgumentList			692493	1					
ANR	692531	ReturnType	void		692493	1					
ANR	692532	Identifier	PanelConfigView :: showAddWidgetDialog		692493	2					
ANR	692533	ParameterList			692493	3					
ANR	692534	CFGEntryNode	ENTRY		692493		True				
ANR	692535	CFGExitNode	EXIT		692493		True				
ANR	692536	Symbol	m_containment -> actions		692493						
ANR	692537	Symbol	* * m_containment		692493						
ANR	692538	Symbol	* m_containment		692493						
ANR	692539	Symbol	m_containment		692493						
ANR	692540	Symbol	QStringLiteral		692493						
ANR	692541	Symbol	addWidgetAction		692493						
ANR	692542	Symbol	m_containment -> actions ( ) -> action		692493						
ANR	692543	Symbol	* m_containment -> actions		692493						
ANR	692544	Function	PanelConfigView :: addPanelSpacer	109:0:3955:4075							
ANR	692545	FunctionDef	PanelConfigView :: addPanelSpacer ()		692544	0					
ANR	692546	CompoundStatement		110:0:3994:4075	692544	0					
ANR	692547	ExpressionStatement	"m_containment -> createApplet ( QStringLiteral ( ""org.kde.plasma.panelspacer"" ) )"	111:4:4000:4073	692544	0	True				
ANR	692548	CallExpression	"m_containment -> createApplet ( QStringLiteral ( ""org.kde.plasma.panelspacer"" ) )"		692544	0					
ANR	692549	Callee	m_containment -> createApplet		692544	0					
ANR	692550	PtrMemberAccess	m_containment -> createApplet		692544	0					
ANR	692551	Identifier	m_containment		692544	0					
ANR	692552	Identifier	createApplet		692544	1					
ANR	692553	ArgumentList	"QStringLiteral ( ""org.kde.plasma.panelspacer"" )"		692544	1					
ANR	692554	Argument	"QStringLiteral ( ""org.kde.plasma.panelspacer"" )"		692544	0					
ANR	692555	CallExpression	"QStringLiteral ( ""org.kde.plasma.panelspacer"" )"		692544	0					
ANR	692556	Callee	QStringLiteral		692544	0					
ANR	692557	Identifier	QStringLiteral		692544	0					
ANR	692558	ArgumentList	"""org.kde.plasma.panelspacer"""		692544	1					
ANR	692559	Argument	"""org.kde.plasma.panelspacer"""		692544	0					
ANR	692560	PrimaryExpression	"""org.kde.plasma.panelspacer"""		692544	0					
ANR	692561	ReturnType	void		692544	1					
ANR	692562	Identifier	PanelConfigView :: addPanelSpacer		692544	2					
ANR	692563	ParameterList			692544	3					
ANR	692564	CFGEntryNode	ENTRY		692544		True				
ANR	692565	CFGExitNode	EXIT		692544		True				
ANR	692566	Symbol	m_containment		692544						
ANR	692567	Symbol	QStringLiteral		692544						
ANR	692568	Function	PanelConfigView :: syncGeometry	114:0:4078:5240							
ANR	692569	FunctionDef	PanelConfigView :: syncGeometry ()		692568	0					
ANR	692570	CompoundStatement		115:0:4115:5240	692568	0					
ANR	692571	IfStatement	if ( ! m_containment || ! rootObject ( ) )		692568	0					
ANR	692572	Condition	! m_containment || ! rootObject ( )	116:8:4125:4155	692568	0	True				
ANR	692573	OrExpression	! m_containment || ! rootObject ( )		692568	0		||			
ANR	692574	UnaryOperationExpression	! m_containment		692568	0					
ANR	692575	UnaryOperator	!		692568	0					
ANR	692576	Identifier	m_containment		692568	1					
ANR	692577	UnaryOperationExpression	! rootObject ( )		692568	1					
ANR	692578	UnaryOperator	!		692568	0					
ANR	692579	CallExpression	rootObject ( )		692568	1					
ANR	692580	Callee	rootObject		692568	0					
ANR	692581	Identifier	rootObject		692568	0					
ANR	692582	ArgumentList			692568	1					
ANR	692583	CompoundStatement		2:41:42:42	692568	1					
ANR	692584	ReturnStatement	return ;	117:8:4168:4174	692568	0	True				
ANR	692585	IfStatement	if ( m_containment -> formFactor ( ) == Plasma :: Types :: Vertical )		692568	1					
ANR	692586	Condition	m_containment -> formFactor ( ) == Plasma :: Types :: Vertical	120:8:4191:4244	692568	0	True				
ANR	692587	EqualityExpression	m_containment -> formFactor ( ) == Plasma :: Types :: Vertical		692568	0		==			
ANR	692588	CallExpression	m_containment -> formFactor ( )		692568	0					
ANR	692589	Callee	m_containment -> formFactor		692568	0					
ANR	692590	PtrMemberAccess	m_containment -> formFactor		692568	0					
ANR	692591	Identifier	m_containment		692568	0					
ANR	692592	Identifier	formFactor		692568	1					
ANR	692593	ArgumentList			692568	1					
ANR	692594	Identifier	Plasma :: Types :: Vertical		692568	1					
ANR	692595	CompoundStatement		7:8:141:206	692568	1					
ANR	692596	IdentifierDeclStatement	"QSize s ( rootObject ( ) -> implicitWidth ( ) , screen ( ) -> size ( ) . height ( ) ) ;"	121:8:4257:4322	692568	0	True				
ANR	692597	IdentifierDecl	"s ( rootObject ( ) -> implicitWidth ( ) , screen ( ) -> size ( ) . height ( ) )"		692568	0					
ANR	692598	IdentifierDeclType	QSize		692568	0					
ANR	692599	Identifier	s		692568	1					
ANR	692600	Expression	"rootObject ( ) -> implicitWidth ( ) , screen ( ) -> size ( ) . height ( )"		692568	2					
ANR	692601	CallExpression	rootObject ( ) -> implicitWidth ( )		692568	0					
ANR	692602	Callee	rootObject ( ) -> implicitWidth		692568	0					
ANR	692603	PtrMemberAccess	rootObject ( ) -> implicitWidth		692568	0					
ANR	692604	CallExpression	rootObject ( )		692568	0					
ANR	692605	Callee	rootObject		692568	0					
ANR	692606	Identifier	rootObject		692568	0					
ANR	692607	ArgumentList			692568	1					
ANR	692608	Identifier	implicitWidth		692568	1					
ANR	692609	ArgumentList			692568	1					
ANR	692610	CallExpression	screen ( ) -> size ( ) . height ( )		692568	1					
ANR	692611	Callee	screen ( ) -> size ( ) . height		692568	0					
ANR	692612	MemberAccess	screen ( ) -> size ( ) . height		692568	0					
ANR	692613	CallExpression	screen ( ) -> size ( )		692568	0					
ANR	692614	Callee	screen ( ) -> size		692568	0					
ANR	692615	PtrMemberAccess	screen ( ) -> size		692568	0					
ANR	692616	CallExpression	screen ( )		692568	0					
ANR	692617	Callee	screen		692568	0					
ANR	692618	Identifier	screen		692568	0					
ANR	692619	ArgumentList			692568	1					
ANR	692620	Identifier	size		692568	1					
ANR	692621	ArgumentList			692568	1					
ANR	692622	Identifier	height		692568	1					
ANR	692623	ArgumentList			692568	1					
ANR	692624	ExpressionStatement	resize ( s )	122:8:4332:4341	692568	1	True				
ANR	692625	CallExpression	resize ( s )		692568	0					
ANR	692626	Callee	resize		692568	0					
ANR	692627	Identifier	resize		692568	0					
ANR	692628	ArgumentList	s		692568	1					
ANR	692629	Argument	s		692568	0					
ANR	692630	Identifier	s		692568	0					
ANR	692631	ExpressionStatement	setMinimumSize ( s )	123:8:4351:4368	692568	2	True				
ANR	692632	CallExpression	setMinimumSize ( s )		692568	0					
ANR	692633	Callee	setMinimumSize		692568	0					
ANR	692634	Identifier	setMinimumSize		692568	0					
ANR	692635	ArgumentList	s		692568	1					
ANR	692636	Argument	s		692568	0					
ANR	692637	Identifier	s		692568	0					
ANR	692638	ExpressionStatement	setMaximumSize ( s )	124:8:4378:4395	692568	3	True				
ANR	692639	CallExpression	setMaximumSize ( s )		692568	0					
ANR	692640	Callee	setMaximumSize		692568	0					
ANR	692641	Identifier	setMaximumSize		692568	0					
ANR	692642	ArgumentList	s		692568	1					
ANR	692643	Argument	s		692568	0					
ANR	692644	Identifier	s		692568	0					
ANR	692645	IfStatement	if ( m_containment -> location ( ) == Plasma :: Types :: LeftEdge )		692568	4					
ANR	692646	Condition	m_containment -> location ( ) == Plasma :: Types :: LeftEdge	126:12:4410:4461	692568	0	True				
ANR	692647	EqualityExpression	m_containment -> location ( ) == Plasma :: Types :: LeftEdge		692568	0		==			
ANR	692648	CallExpression	m_containment -> location ( )		692568	0					
ANR	692649	Callee	m_containment -> location		692568	0					
ANR	692650	PtrMemberAccess	m_containment -> location		692568	0					
ANR	692651	Identifier	m_containment		692568	0					
ANR	692652	Identifier	location		692568	1					
ANR	692653	ArgumentList			692568	1					
ANR	692654	Identifier	Plasma :: Types :: LeftEdge		692568	1					
ANR	692655	CompoundStatement		12:66:348:348	692568	1					
ANR	692656	ExpressionStatement	"setPosition ( m_panelView -> geometry ( ) . right ( ) , screen ( ) -> geometry ( ) . top ( ) )"	127:12:4478:4550	692568	0	True				
ANR	692657	CallExpression	"setPosition ( m_panelView -> geometry ( ) . right ( ) , screen ( ) -> geometry ( ) . top ( ) )"		692568	0					
ANR	692658	Callee	setPosition		692568	0					
ANR	692659	Identifier	setPosition		692568	0					
ANR	692660	ArgumentList	m_panelView -> geometry ( ) . right ( )		692568	1					
ANR	692661	Argument	m_panelView -> geometry ( ) . right ( )		692568	0					
ANR	692662	CallExpression	m_panelView -> geometry ( ) . right ( )		692568	0					
ANR	692663	Callee	m_panelView -> geometry ( ) . right		692568	0					
ANR	692664	MemberAccess	m_panelView -> geometry ( ) . right		692568	0					
ANR	692665	CallExpression	m_panelView -> geometry ( )		692568	0					
ANR	692666	Callee	m_panelView -> geometry		692568	0					
ANR	692667	PtrMemberAccess	m_panelView -> geometry		692568	0					
ANR	692668	Identifier	m_panelView		692568	0					
ANR	692669	Identifier	geometry		692568	1					
ANR	692670	ArgumentList			692568	1					
ANR	692671	Identifier	right		692568	1					
ANR	692672	ArgumentList			692568	1					
ANR	692673	Argument	screen ( ) -> geometry ( ) . top ( )		692568	1					
ANR	692674	CallExpression	screen ( ) -> geometry ( ) . top ( )		692568	0					
ANR	692675	Callee	screen ( ) -> geometry ( ) . top		692568	0					
ANR	692676	MemberAccess	screen ( ) -> geometry ( ) . top		692568	0					
ANR	692677	CallExpression	screen ( ) -> geometry ( )		692568	0					
ANR	692678	Callee	screen ( ) -> geometry		692568	0					
ANR	692679	PtrMemberAccess	screen ( ) -> geometry		692568	0					
ANR	692680	CallExpression	screen ( )		692568	0					
ANR	692681	Callee	screen		692568	0					
ANR	692682	Identifier	screen		692568	0					
ANR	692683	ArgumentList			692568	1					
ANR	692684	Identifier	geometry		692568	1					
ANR	692685	ArgumentList			692568	1					
ANR	692686	Identifier	top		692568	1					
ANR	692687	ArgumentList			692568	1					
ANR	692688	ElseStatement	else		692568	0					
ANR	692689	IfStatement	if ( m_containment -> location ( ) == Plasma :: Types :: RightEdge )		692568	0					
ANR	692690	Condition	m_containment -> location ( ) == Plasma :: Types :: RightEdge	128:19:4571:4623	692568	0	True				
ANR	692691	EqualityExpression	m_containment -> location ( ) == Plasma :: Types :: RightEdge		692568	0		==			
ANR	692692	CallExpression	m_containment -> location ( )		692568	0					
ANR	692693	Callee	m_containment -> location		692568	0					
ANR	692694	PtrMemberAccess	m_containment -> location		692568	0					
ANR	692695	Identifier	m_containment		692568	0					
ANR	692696	Identifier	location		692568	1					
ANR	692697	ArgumentList			692568	1					
ANR	692698	Identifier	Plasma :: Types :: RightEdge		692568	1					
ANR	692699	CompoundStatement		14:74:510:510	692568	1					
ANR	692700	ExpressionStatement	"setPosition ( m_panelView -> geometry ( ) . left ( ) - width ( ) , screen ( ) -> geometry ( ) . top ( ) )"	129:12:4640:4721	692568	0	True				
ANR	692701	CallExpression	"setPosition ( m_panelView -> geometry ( ) . left ( ) - width ( ) , screen ( ) -> geometry ( ) . top ( ) )"		692568	0					
ANR	692702	Callee	setPosition		692568	0					
ANR	692703	Identifier	setPosition		692568	0					
ANR	692704	ArgumentList	m_panelView -> geometry ( ) . left ( ) - width ( )		692568	1					
ANR	692705	Argument	m_panelView -> geometry ( ) . left ( ) - width ( )		692568	0					
ANR	692706	AdditiveExpression	m_panelView -> geometry ( ) . left ( ) - width ( )		692568	0		-			
ANR	692707	CallExpression	m_panelView -> geometry ( ) . left ( )		692568	0					
ANR	692708	Callee	m_panelView -> geometry ( ) . left		692568	0					
ANR	692709	MemberAccess	m_panelView -> geometry ( ) . left		692568	0					
ANR	692710	CallExpression	m_panelView -> geometry ( )		692568	0					
ANR	692711	Callee	m_panelView -> geometry		692568	0					
ANR	692712	PtrMemberAccess	m_panelView -> geometry		692568	0					
ANR	692713	Identifier	m_panelView		692568	0					
ANR	692714	Identifier	geometry		692568	1					
ANR	692715	ArgumentList			692568	1					
ANR	692716	Identifier	left		692568	1					
ANR	692717	ArgumentList			692568	1					
ANR	692718	CallExpression	width ( )		692568	1					
ANR	692719	Callee	width		692568	0					
ANR	692720	Identifier	width		692568	0					
ANR	692721	ArgumentList			692568	1					
ANR	692722	Argument	screen ( ) -> geometry ( ) . top ( )		692568	1					
ANR	692723	CallExpression	screen ( ) -> geometry ( ) . top ( )		692568	0					
ANR	692724	Callee	screen ( ) -> geometry ( ) . top		692568	0					
ANR	692725	MemberAccess	screen ( ) -> geometry ( ) . top		692568	0					
ANR	692726	CallExpression	screen ( ) -> geometry ( )		692568	0					
ANR	692727	Callee	screen ( ) -> geometry		692568	0					
ANR	692728	PtrMemberAccess	screen ( ) -> geometry		692568	0					
ANR	692729	CallExpression	screen ( )		692568	0					
ANR	692730	Callee	screen		692568	0					
ANR	692731	Identifier	screen		692568	0					
ANR	692732	ArgumentList			692568	1					
ANR	692733	Identifier	geometry		692568	1					
ANR	692734	ArgumentList			692568	1					
ANR	692735	Identifier	top		692568	1					
ANR	692736	ArgumentList			692568	1					
ANR	692737	ElseStatement	else		692568	0					
ANR	692738	CompoundStatement		19:8:639:704	692568	0					
ANR	692739	IdentifierDeclStatement	"QSize s ( screen ( ) -> size ( ) . width ( ) , rootObject ( ) -> implicitHeight ( ) ) ;"	133:8:4755:4820	692568	0	True				
ANR	692740	IdentifierDecl	"s ( screen ( ) -> size ( ) . width ( ) , rootObject ( ) -> implicitHeight ( ) )"		692568	0					
ANR	692741	IdentifierDeclType	QSize		692568	0					
ANR	692742	Identifier	s		692568	1					
ANR	692743	Expression	"screen ( ) -> size ( ) . width ( ) , rootObject ( ) -> implicitHeight ( )"		692568	2					
ANR	692744	CallExpression	screen ( ) -> size ( ) . width ( )		692568	0					
ANR	692745	Callee	screen ( ) -> size ( ) . width		692568	0					
ANR	692746	MemberAccess	screen ( ) -> size ( ) . width		692568	0					
ANR	692747	CallExpression	screen ( ) -> size ( )		692568	0					
ANR	692748	Callee	screen ( ) -> size		692568	0					
ANR	692749	PtrMemberAccess	screen ( ) -> size		692568	0					
ANR	692750	CallExpression	screen ( )		692568	0					
ANR	692751	Callee	screen		692568	0					
ANR	692752	Identifier	screen		692568	0					
ANR	692753	ArgumentList			692568	1					
ANR	692754	Identifier	size		692568	1					
ANR	692755	ArgumentList			692568	1					
ANR	692756	Identifier	width		692568	1					
ANR	692757	ArgumentList			692568	1					
ANR	692758	CallExpression	rootObject ( ) -> implicitHeight ( )		692568	1					
ANR	692759	Callee	rootObject ( ) -> implicitHeight		692568	0					
ANR	692760	PtrMemberAccess	rootObject ( ) -> implicitHeight		692568	0					
ANR	692761	CallExpression	rootObject ( )		692568	0					
ANR	692762	Callee	rootObject		692568	0					
ANR	692763	Identifier	rootObject		692568	0					
ANR	692764	ArgumentList			692568	1					
ANR	692765	Identifier	implicitHeight		692568	1					
ANR	692766	ArgumentList			692568	1					
ANR	692767	ExpressionStatement	resize ( s )	134:8:4830:4839	692568	1	True				
ANR	692768	CallExpression	resize ( s )		692568	0					
ANR	692769	Callee	resize		692568	0					
ANR	692770	Identifier	resize		692568	0					
ANR	692771	ArgumentList	s		692568	1					
ANR	692772	Argument	s		692568	0					
ANR	692773	Identifier	s		692568	0					
ANR	692774	ExpressionStatement	setMinimumSize ( s )	135:8:4849:4866	692568	2	True				
ANR	692775	CallExpression	setMinimumSize ( s )		692568	0					
ANR	692776	Callee	setMinimumSize		692568	0					
ANR	692777	Identifier	setMinimumSize		692568	0					
ANR	692778	ArgumentList	s		692568	1					
ANR	692779	Argument	s		692568	0					
ANR	692780	Identifier	s		692568	0					
ANR	692781	ExpressionStatement	setMaximumSize ( s )	136:8:4876:4893	692568	3	True				
ANR	692782	CallExpression	setMaximumSize ( s )		692568	0					
ANR	692783	Callee	setMaximumSize		692568	0					
ANR	692784	Identifier	setMaximumSize		692568	0					
ANR	692785	ArgumentList	s		692568	1					
ANR	692786	Argument	s		692568	0					
ANR	692787	Identifier	s		692568	0					
ANR	692788	IfStatement	if ( m_containment -> location ( ) == Plasma :: Types :: TopEdge )		692568	4					
ANR	692789	Condition	m_containment -> location ( ) == Plasma :: Types :: TopEdge	138:12:4908:4958	692568	0	True				
ANR	692790	EqualityExpression	m_containment -> location ( ) == Plasma :: Types :: TopEdge		692568	0		==			
ANR	692791	CallExpression	m_containment -> location ( )		692568	0					
ANR	692792	Callee	m_containment -> location		692568	0					
ANR	692793	PtrMemberAccess	m_containment -> location		692568	0					
ANR	692794	Identifier	m_containment		692568	0					
ANR	692795	Identifier	location		692568	1					
ANR	692796	ArgumentList			692568	1					
ANR	692797	Identifier	Plasma :: Types :: TopEdge		692568	1					
ANR	692798	CompoundStatement		24:65:845:845	692568	1					
ANR	692799	ExpressionStatement	"setPosition ( screen ( ) -> geometry ( ) . left ( ) , m_panelView -> geometry ( ) . bottom ( ) )"	139:12:4975:5049	692568	0	True				
ANR	692800	CallExpression	"setPosition ( screen ( ) -> geometry ( ) . left ( ) , m_panelView -> geometry ( ) . bottom ( ) )"		692568	0					
ANR	692801	Callee	setPosition		692568	0					
ANR	692802	Identifier	setPosition		692568	0					
ANR	692803	ArgumentList	screen ( ) -> geometry ( ) . left ( )		692568	1					
ANR	692804	Argument	screen ( ) -> geometry ( ) . left ( )		692568	0					
ANR	692805	CallExpression	screen ( ) -> geometry ( ) . left ( )		692568	0					
ANR	692806	Callee	screen ( ) -> geometry ( ) . left		692568	0					
ANR	692807	MemberAccess	screen ( ) -> geometry ( ) . left		692568	0					
ANR	692808	CallExpression	screen ( ) -> geometry ( )		692568	0					
ANR	692809	Callee	screen ( ) -> geometry		692568	0					
ANR	692810	PtrMemberAccess	screen ( ) -> geometry		692568	0					
ANR	692811	CallExpression	screen ( )		692568	0					
ANR	692812	Callee	screen		692568	0					
ANR	692813	Identifier	screen		692568	0					
ANR	692814	ArgumentList			692568	1					
ANR	692815	Identifier	geometry		692568	1					
ANR	692816	ArgumentList			692568	1					
ANR	692817	Identifier	left		692568	1					
ANR	692818	ArgumentList			692568	1					
ANR	692819	Argument	m_panelView -> geometry ( ) . bottom ( )		692568	1					
ANR	692820	CallExpression	m_panelView -> geometry ( ) . bottom ( )		692568	0					
ANR	692821	Callee	m_panelView -> geometry ( ) . bottom		692568	0					
ANR	692822	MemberAccess	m_panelView -> geometry ( ) . bottom		692568	0					
ANR	692823	CallExpression	m_panelView -> geometry ( )		692568	0					
ANR	692824	Callee	m_panelView -> geometry		692568	0					
ANR	692825	PtrMemberAccess	m_panelView -> geometry		692568	0					
ANR	692826	Identifier	m_panelView		692568	0					
ANR	692827	Identifier	geometry		692568	1					
ANR	692828	ArgumentList			692568	1					
ANR	692829	Identifier	bottom		692568	1					
ANR	692830	ArgumentList			692568	1					
ANR	692831	ElseStatement	else		692568	0					
ANR	692832	IfStatement	if ( m_containment -> location ( ) == Plasma :: Types :: BottomEdge )		692568	0					
ANR	692833	Condition	m_containment -> location ( ) == Plasma :: Types :: BottomEdge	140:19:5070:5123	692568	0	True				
ANR	692834	EqualityExpression	m_containment -> location ( ) == Plasma :: Types :: BottomEdge		692568	0		==			
ANR	692835	CallExpression	m_containment -> location ( )		692568	0					
ANR	692836	Callee	m_containment -> location		692568	0					
ANR	692837	PtrMemberAccess	m_containment -> location		692568	0					
ANR	692838	Identifier	m_containment		692568	0					
ANR	692839	Identifier	location		692568	1					
ANR	692840	ArgumentList			692568	1					
ANR	692841	Identifier	Plasma :: Types :: BottomEdge		692568	1					
ANR	692842	CompoundStatement		26:75:1010:1010	692568	1					
ANR	692843	ExpressionStatement	"setPosition ( screen ( ) -> geometry ( ) . left ( ) , m_panelView -> geometry ( ) . top ( ) - height ( ) )"	141:12:5140:5222	692568	0	True				
ANR	692844	CallExpression	"setPosition ( screen ( ) -> geometry ( ) . left ( ) , m_panelView -> geometry ( ) . top ( ) - height ( ) )"		692568	0					
ANR	692845	Callee	setPosition		692568	0					
ANR	692846	Identifier	setPosition		692568	0					
ANR	692847	ArgumentList	screen ( ) -> geometry ( ) . left ( )		692568	1					
ANR	692848	Argument	screen ( ) -> geometry ( ) . left ( )		692568	0					
ANR	692849	CallExpression	screen ( ) -> geometry ( ) . left ( )		692568	0					
ANR	692850	Callee	screen ( ) -> geometry ( ) . left		692568	0					
ANR	692851	MemberAccess	screen ( ) -> geometry ( ) . left		692568	0					
ANR	692852	CallExpression	screen ( ) -> geometry ( )		692568	0					
ANR	692853	Callee	screen ( ) -> geometry		692568	0					
ANR	692854	PtrMemberAccess	screen ( ) -> geometry		692568	0					
ANR	692855	CallExpression	screen ( )		692568	0					
ANR	692856	Callee	screen		692568	0					
ANR	692857	Identifier	screen		692568	0					
ANR	692858	ArgumentList			692568	1					
ANR	692859	Identifier	geometry		692568	1					
ANR	692860	ArgumentList			692568	1					
ANR	692861	Identifier	left		692568	1					
ANR	692862	ArgumentList			692568	1					
ANR	692863	Argument	m_panelView -> geometry ( ) . top ( ) - height ( )		692568	1					
ANR	692864	AdditiveExpression	m_panelView -> geometry ( ) . top ( ) - height ( )		692568	0		-			
ANR	692865	CallExpression	m_panelView -> geometry ( ) . top ( )		692568	0					
ANR	692866	Callee	m_panelView -> geometry ( ) . top		692568	0					
ANR	692867	MemberAccess	m_panelView -> geometry ( ) . top		692568	0					
ANR	692868	CallExpression	m_panelView -> geometry ( )		692568	0					
ANR	692869	Callee	m_panelView -> geometry		692568	0					
ANR	692870	PtrMemberAccess	m_panelView -> geometry		692568	0					
ANR	692871	Identifier	m_panelView		692568	0					
ANR	692872	Identifier	geometry		692568	1					
ANR	692873	ArgumentList			692568	1					
ANR	692874	Identifier	top		692568	1					
ANR	692875	ArgumentList			692568	1					
ANR	692876	CallExpression	height ( )		692568	1					
ANR	692877	Callee	height		692568	0					
ANR	692878	Identifier	height		692568	0					
ANR	692879	ArgumentList			692568	1					
ANR	692880	ReturnType	void		692568	1					
ANR	692881	Identifier	PanelConfigView :: syncGeometry		692568	2					
ANR	692882	ParameterList			692568	3					
ANR	692883	CFGEntryNode	ENTRY		692568		True				
ANR	692884	CFGExitNode	EXIT		692568		True				
ANR	692885	Symbol	m_panelView -> geometry		692568						
ANR	692886	Symbol	m_containment -> formFactor		692568						
ANR	692887	Symbol	m_panelView -> geometry ( ) . left		692568						
ANR	692888	Symbol	m_panelView -> geometry ( ) . top		692568						
ANR	692889	Symbol	Plasma :: Types :: Vertical		692568						
ANR	692890	Symbol	Plasma :: Types :: RightEdge		692568						
ANR	692891	Symbol	screen		692568						
ANR	692892	Symbol	Plasma :: Types :: BottomEdge		692568						
ANR	692893	Symbol	screen ( ) -> geometry		692568						
ANR	692894	Symbol	m_panelView -> geometry ( ) . bottom		692568						
ANR	692895	Symbol	Plasma :: Types :: LeftEdge		692568						
ANR	692896	Symbol	screen ( ) -> geometry ( ) . top		692568						
ANR	692897	Symbol	Plasma :: Types :: TopEdge		692568						
ANR	692898	Symbol	m_panelView -> geometry ( ) . right		692568						
ANR	692899	Symbol	height		692568						
ANR	692900	Symbol	m_containment -> location		692568						
ANR	692901	Symbol	screen ( ) -> size		692568						
ANR	692902	Symbol	m_panelView		692568						
ANR	692903	Symbol	s		692568						
ANR	692904	Symbol	* m_containment		692568						
ANR	692905	Symbol	width		692568						
ANR	692906	Symbol	m_containment		692568						
ANR	692907	Symbol	* m_panelView		692568						
ANR	692908	Symbol	rootObject		692568						
ANR	692909	Symbol	* screen		692568						
ANR	692910	Symbol	screen ( ) -> geometry ( ) . left		692568						
ANR	692911	Function	PanelConfigView :: syncLocation	146:0:5243:6460							
ANR	692912	FunctionDef	PanelConfigView :: syncLocation ()		692911	0					
ANR	692913	CompoundStatement		147:0:5280:6460	692911	0					
ANR	692914	IfStatement	if ( ! m_containment )		692911	0					
ANR	692915	Condition	! m_containment	148:8:5290:5303	692911	0	True				
ANR	692916	UnaryOperationExpression	! m_containment		692911	0					
ANR	692917	UnaryOperator	!		692911	0					
ANR	692918	Identifier	m_containment		692911	1					
ANR	692919	CompoundStatement		2:24:25:25	692911	1					
ANR	692920	ReturnStatement	return ;	149:8:5316:5322	692911	0	True				
ANR	692921	IdentifierDeclStatement	KWindowEffects :: SlideFromLocation slideLocation = KWindowEffects :: NoEdge ;	152:4:5335:5407	692911	1	True				
ANR	692922	IdentifierDecl	slideLocation = KWindowEffects :: NoEdge		692911	0					
ANR	692923	IdentifierDeclType	KWindowEffects :: SlideFromLocation		692911	0					
ANR	692924	Identifier	slideLocation		692911	1					
ANR	692925	AssignmentExpression	slideLocation = KWindowEffects :: NoEdge		692911	2		=			
ANR	692926	Identifier	KWindowEffects :: NoEdge		692911	0					
ANR	692927	Identifier	KWindowEffects :: NoEdge		692911	1					
ANR	692928	IdentifierDeclStatement	Plasma :: FrameSvg :: EnabledBorders enabledBorders = Plasma :: FrameSvg :: AllBorders ;	153:4:5413:5491	692911	2	True				
ANR	692929	IdentifierDecl	enabledBorders = Plasma :: FrameSvg :: AllBorders		692911	0					
ANR	692930	IdentifierDeclType	Plasma :: FrameSvg :: EnabledBorders		692911	0					
ANR	692931	Identifier	enabledBorders		692911	1					
ANR	692932	AssignmentExpression	enabledBorders = Plasma :: FrameSvg :: AllBorders		692911	2		=			
ANR	692933	Identifier	Plasma :: FrameSvg :: AllBorders		692911	0					
ANR	692934	Identifier	Plasma :: FrameSvg :: AllBorders		692911	1					
ANR	692935	SwitchStatement	switch ( m_containment -> location ( ) )		692911	3					
ANR	692936	Condition	m_containment -> location ( )	155:12:5506:5530	692911	0	True				
ANR	692937	CallExpression	m_containment -> location ( )		692911	0					
ANR	692938	Callee	m_containment -> location		692911	0					
ANR	692939	PtrMemberAccess	m_containment -> location		692911	0					
ANR	692940	Identifier	m_containment		692911	0					
ANR	692941	Identifier	location		692911	1					
ANR	692942	ArgumentList			692911	1					
ANR	692943	CompoundStatement		9:39:252:252	692911	1					
ANR	692944	Label	case Plasma :: Types :: TopEdge :	156:4:5539:5566	692911	0	True				
ANR	692945	Identifier	Plasma :: Types :: TopEdge		692911	0					
ANR	692946	ExpressionStatement	slideLocation = KWindowEffects :: TopEdge	157:8:5576:5615	692911	1	True				
ANR	692947	AssignmentExpression	slideLocation = KWindowEffects :: TopEdge		692911	0		=			
ANR	692948	Identifier	slideLocation		692911	0					
ANR	692949	Identifier	KWindowEffects :: TopEdge		692911	1					
ANR	692950	ExpressionStatement	enabledBorders = Plasma :: FrameSvg :: BottomBorder	158:8:5625:5672	692911	2	True				
ANR	692951	AssignmentExpression	enabledBorders = Plasma :: FrameSvg :: BottomBorder		692911	0		=			
ANR	692952	Identifier	enabledBorders		692911	0					
ANR	692953	Identifier	Plasma :: FrameSvg :: BottomBorder		692911	1					
ANR	692954	BreakStatement	break ;	159:8:5682:5687	692911	3	True				
ANR	692955	Label	case Plasma :: Types :: RightEdge :	160:4:5693:5722	692911	4	True				
ANR	692956	Identifier	Plasma :: Types :: RightEdge		692911	0					
ANR	692957	ExpressionStatement	slideLocation = KWindowEffects :: RightEdge	161:8:5732:5773	692911	5	True				
ANR	692958	AssignmentExpression	slideLocation = KWindowEffects :: RightEdge		692911	0		=			
ANR	692959	Identifier	slideLocation		692911	0					
ANR	692960	Identifier	KWindowEffects :: RightEdge		692911	1					
ANR	692961	ExpressionStatement	enabledBorders = Plasma :: FrameSvg :: LeftBorder	162:8:5783:5828	692911	6	True				
ANR	692962	AssignmentExpression	enabledBorders = Plasma :: FrameSvg :: LeftBorder		692911	0		=			
ANR	692963	Identifier	enabledBorders		692911	0					
ANR	692964	Identifier	Plasma :: FrameSvg :: LeftBorder		692911	1					
ANR	692965	BreakStatement	break ;	163:8:5838:5843	692911	7	True				
ANR	692966	Label	case Plasma :: Types :: BottomEdge :	164:4:5849:5879	692911	8	True				
ANR	692967	Identifier	Plasma :: Types :: BottomEdge		692911	0					
ANR	692968	ExpressionStatement	slideLocation = KWindowEffects :: BottomEdge	165:8:5889:5931	692911	9	True				
ANR	692969	AssignmentExpression	slideLocation = KWindowEffects :: BottomEdge		692911	0		=			
ANR	692970	Identifier	slideLocation		692911	0					
ANR	692971	Identifier	KWindowEffects :: BottomEdge		692911	1					
ANR	692972	ExpressionStatement	enabledBorders = Plasma :: FrameSvg :: TopBorder	166:8:5941:5985	692911	10	True				
ANR	692973	AssignmentExpression	enabledBorders = Plasma :: FrameSvg :: TopBorder		692911	0		=			
ANR	692974	Identifier	enabledBorders		692911	0					
ANR	692975	Identifier	Plasma :: FrameSvg :: TopBorder		692911	1					
ANR	692976	BreakStatement	break ;	167:8:5995:6000	692911	11	True				
ANR	692977	Label	case Plasma :: Types :: LeftEdge :	168:4:6006:6034	692911	12	True				
ANR	692978	Identifier	Plasma :: Types :: LeftEdge		692911	0					
ANR	692979	ExpressionStatement	slideLocation = KWindowEffects :: LeftEdge	169:8:6044:6084	692911	13	True				
ANR	692980	AssignmentExpression	slideLocation = KWindowEffects :: LeftEdge		692911	0		=			
ANR	692981	Identifier	slideLocation		692911	0					
ANR	692982	Identifier	KWindowEffects :: LeftEdge		692911	1					
ANR	692983	ExpressionStatement	enabledBorders = Plasma :: FrameSvg :: RightBorder	170:8:6094:6140	692911	14	True				
ANR	692984	AssignmentExpression	enabledBorders = Plasma :: FrameSvg :: RightBorder		692911	0		=			
ANR	692985	Identifier	enabledBorders		692911	0					
ANR	692986	Identifier	Plasma :: FrameSvg :: RightBorder		692911	1					
ANR	692987	BreakStatement	break ;	171:8:6150:6155	692911	15	True				
ANR	692988	Label	default :	172:4:6161:6168	692911	16	True				
ANR	692989	Identifier	default		692911	0					
ANR	692990	BreakStatement	break ;	173:8:6178:6183	692911	17	True				
ANR	692991	ExpressionStatement	"KWindowEffects :: slideWindow ( winId ( ) , slideLocation , - 1 )"	176:4:6196:6251	692911	4	True				
ANR	692992	CallExpression	"KWindowEffects :: slideWindow ( winId ( ) , slideLocation , - 1 )"		692911	0					
ANR	692993	Callee	KWindowEffects :: slideWindow		692911	0					
ANR	692994	Identifier	KWindowEffects :: slideWindow		692911	0					
ANR	692995	ArgumentList	winId ( )		692911	1					
ANR	692996	Argument	winId ( )		692911	0					
ANR	692997	CallExpression	winId ( )		692911	0					
ANR	692998	Callee	winId		692911	0					
ANR	692999	Identifier	winId		692911	0					
ANR	693000	ArgumentList			692911	1					
ANR	693001	Argument	slideLocation		692911	1					
ANR	693002	Identifier	slideLocation		692911	0					
ANR	693003	Argument	- 1		692911	2					
ANR	693004	UnaryOperationExpression	- 1		692911	0					
ANR	693005	UnaryOperator	-		692911	0					
ANR	693006	PrimaryExpression	1		692911	1					
ANR	693007	IfStatement	if ( m_enabledBorders != enabledBorders )		692911	5					
ANR	693008	Condition	m_enabledBorders != enabledBorders	178:8:6262:6295	692911	0	True				
ANR	693009	EqualityExpression	m_enabledBorders != enabledBorders		692911	0		!=			
ANR	693010	Identifier	m_enabledBorders		692911	0					
ANR	693011	Identifier	enabledBorders		692911	1					
ANR	693012	CompoundStatement		37:8:1143:1171	692911	1					
ANR	693013	ExpressionStatement	m_enabledBorders = enabledBorders	179:8:6308:6341	692911	0	True				
ANR	693014	AssignmentExpression	m_enabledBorders = enabledBorders		692911	0		=			
ANR	693015	Identifier	m_enabledBorders		692911	0					
ANR	693016	Identifier	enabledBorders		692911	1					
ANR	693017	ExpressionStatement	"PanelShadows :: self ( ) -> setEnabledBorders ( this , enabledBorders )"	181:8:6352:6413	692911	1	True				
ANR	693018	CallExpression	"PanelShadows :: self ( ) -> setEnabledBorders ( this , enabledBorders )"		692911	0					
ANR	693019	Callee	PanelShadows :: self ( ) -> setEnabledBorders		692911	0					
ANR	693020	PtrMemberAccess	PanelShadows :: self ( ) -> setEnabledBorders		692911	0					
ANR	693021	CallExpression	PanelShadows :: self ( )		692911	0					
ANR	693022	Callee	PanelShadows :: self		692911	0					
ANR	693023	Identifier	PanelShadows :: self		692911	0					
ANR	693024	ArgumentList			692911	1					
ANR	693025	Identifier	setEnabledBorders		692911	1					
ANR	693026	ArgumentList	this		692911	1					
ANR	693027	Argument	this		692911	0					
ANR	693028	Identifier	this		692911	0					
ANR	693029	Argument	enabledBorders		692911	1					
ANR	693030	Identifier	enabledBorders		692911	0					
ANR	693031	IdentifierDeclStatement	emit enabledBordersChanged ( ) ;	183:8:6424:6452	692911	2	True				
ANR	693032	IdentifierDecl	enabledBordersChanged ( )		692911	0					
ANR	693033	IdentifierDeclType	emit		692911	0					
ANR	693034	Identifier	enabledBordersChanged		692911	1					
ANR	693035	ReturnType	void		692911	1					
ANR	693036	Identifier	PanelConfigView :: syncLocation		692911	2					
ANR	693037	ParameterList			692911	3					
ANR	693038	CFGEntryNode	ENTRY		692911		True				
ANR	693039	CFGExitNode	EXIT		692911		True				
ANR	693040	Symbol	m_containment -> location		692911						
ANR	693041	Symbol	m_enabledBorders		692911						
ANR	693042	Symbol	this		692911						
ANR	693043	Symbol	winId		692911						
ANR	693044	Symbol	PanelShadows :: self		692911						
ANR	693045	Symbol	KWindowEffects :: LeftEdge		692911						
ANR	693046	Symbol	enabledBordersChanged		692911						
ANR	693047	Symbol	Plasma :: FrameSvg :: TopBorder		692911						
ANR	693048	Symbol	slideLocation		692911						
ANR	693049	Symbol	enabledBorders		692911						
ANR	693050	Symbol	Plasma :: FrameSvg :: BottomBorder		692911						
ANR	693051	Symbol	KWindowEffects :: TopEdge		692911						
ANR	693052	Symbol	Plasma :: FrameSvg :: RightBorder		692911						
ANR	693053	Symbol	Plasma :: FrameSvg :: AllBorders		692911						
ANR	693054	Symbol	* m_containment		692911						
ANR	693055	Symbol	m_containment		692911						
ANR	693056	Symbol	KWindowEffects :: BottomEdge		692911						
ANR	693057	Symbol	KWindowEffects :: NoEdge		692911						
ANR	693058	Symbol	KWindowEffects :: RightEdge		692911						
ANR	693059	Symbol	Plasma :: FrameSvg :: LeftBorder		692911						
ANR	693060	Function	PanelConfigView :: showEvent	187:0:6463:7218							
ANR	693061	FunctionDef	PanelConfigView :: showEvent (QShowEvent * ev)		693060	0					
ANR	693062	CompoundStatement		188:0:6511:7218	693060	0					
ANR	693063	ExpressionStatement	QQuickWindow :: showEvent ( ev )	189:4:6517:6544	693060	0	True				
ANR	693064	CallExpression	QQuickWindow :: showEvent ( ev )		693060	0					
ANR	693065	Callee	QQuickWindow :: showEvent		693060	0					
ANR	693066	Identifier	QQuickWindow :: showEvent		693060	0					
ANR	693067	ArgumentList	ev		693060	1					
ANR	693068	Argument	ev		693060	0					
ANR	693069	Identifier	ev		693060	0					
ANR	693070	ExpressionStatement	"KWindowSystem :: setType ( winId ( ) , NET :: Dock )"	191:4:6551:6593	693060	1	True				
ANR	693071	CallExpression	"KWindowSystem :: setType ( winId ( ) , NET :: Dock )"		693060	0					
ANR	693072	Callee	KWindowSystem :: setType		693060	0					
ANR	693073	Identifier	KWindowSystem :: setType		693060	0					
ANR	693074	ArgumentList	winId ( )		693060	1					
ANR	693075	Argument	winId ( )		693060	0					
ANR	693076	CallExpression	winId ( )		693060	0					
ANR	693077	Callee	winId		693060	0					
ANR	693078	Identifier	winId		693060	0					
ANR	693079	ArgumentList			693060	1					
ANR	693080	Argument	NET :: Dock		693060	1					
ANR	693081	Identifier	NET :: Dock		693060	0					
ANR	693082	ExpressionStatement	setFlags ( Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) ) )	192:4:6599:6695	693060	2	True				
ANR	693083	CallExpression	setFlags ( Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) ) )		693060	0					
ANR	693084	Callee	setFlags		693060	0					
ANR	693085	Identifier	setFlags		693060	0					
ANR	693086	ArgumentList	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		693060	1					
ANR	693087	Argument	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		693060	0					
ANR	693088	CallExpression	Qt :: WindowFlags ( ( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus ) )		693060	0					
ANR	693089	Callee	Qt :: WindowFlags		693060	0					
ANR	693090	Identifier	Qt :: WindowFlags		693060	0					
ANR	693091	ArgumentList	( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		693060	1					
ANR	693092	Argument	( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		693060	0					
ANR	693093	BitAndExpression	( flags ( ) | Qt :: FramelessWindowHint ) & ( ~Qt :: WindowDoesNotAcceptFocus )		693060	0		&			
ANR	693094	InclusiveOrExpression	flags ( ) | Qt :: FramelessWindowHint		693060	0		|			
ANR	693095	CallExpression	flags ( )		693060	0					
ANR	693096	Callee	flags		693060	0					
ANR	693097	Identifier	flags		693060	0					
ANR	693098	ArgumentList			693060	1					
ANR	693099	Identifier	Qt :: FramelessWindowHint		693060	1					
ANR	693100	Identifier	~Qt :: WindowDoesNotAcceptFocus		693060	1					
ANR	693101	ExpressionStatement	"KWindowSystem :: setState ( winId ( ) , NET :: KeepAbove )"	193:4:6701:6749	693060	3	True				
ANR	693102	CallExpression	"KWindowSystem :: setState ( winId ( ) , NET :: KeepAbove )"		693060	0					
ANR	693103	Callee	KWindowSystem :: setState		693060	0					
ANR	693104	Identifier	KWindowSystem :: setState		693060	0					
ANR	693105	ArgumentList	winId ( )		693060	1					
ANR	693106	Argument	winId ( )		693060	0					
ANR	693107	CallExpression	winId ( )		693060	0					
ANR	693108	Callee	winId		693060	0					
ANR	693109	Identifier	winId		693060	0					
ANR	693110	ArgumentList			693060	1					
ANR	693111	Argument	NET :: KeepAbove		693060	1					
ANR	693112	Identifier	NET :: KeepAbove		693060	0					
ANR	693113	ExpressionStatement	KWindowSystem :: forceActiveWindow ( winId ( ) )	194:4:6755:6796	693060	4	True				
ANR	693114	CallExpression	KWindowSystem :: forceActiveWindow ( winId ( ) )		693060	0					
ANR	693115	Callee	KWindowSystem :: forceActiveWindow		693060	0					
ANR	693116	Identifier	KWindowSystem :: forceActiveWindow		693060	0					
ANR	693117	ArgumentList	winId ( )		693060	1					
ANR	693118	Argument	winId ( )		693060	0					
ANR	693119	CallExpression	winId ( )		693060	0					
ANR	693120	Callee	winId		693060	0					
ANR	693121	Identifier	winId		693060	0					
ANR	693122	ArgumentList			693060	1					
ANR	693123	ExpressionStatement	"KWindowEffects :: enableBlurBehind ( winId ( ) , true )"	195:4:6802:6849	693060	5	True				
ANR	693124	CallExpression	"KWindowEffects :: enableBlurBehind ( winId ( ) , true )"		693060	0					
ANR	693125	Callee	KWindowEffects :: enableBlurBehind		693060	0					
ANR	693126	Identifier	KWindowEffects :: enableBlurBehind		693060	0					
ANR	693127	ArgumentList	winId ( )		693060	1					
ANR	693128	Argument	winId ( )		693060	0					
ANR	693129	CallExpression	winId ( )		693060	0					
ANR	693130	Callee	winId		693060	0					
ANR	693131	Identifier	winId		693060	0					
ANR	693132	ArgumentList			693060	1					
ANR	693133	Argument	true		693060	1					
ANR	693134	Identifier	true		693060	0					
ANR	693135	ExpressionStatement	updateContrast ( )	196:4:6855:6871	693060	6	True				
ANR	693136	CallExpression	updateContrast ( )		693060	0					
ANR	693137	Callee	updateContrast		693060	0					
ANR	693138	Identifier	updateContrast		693060	0					
ANR	693139	ArgumentList			693060	1					
ANR	693140	ExpressionStatement	syncGeometry ( )	197:4:6877:6891	693060	7	True				
ANR	693141	CallExpression	syncGeometry ( )		693060	0					
ANR	693142	Callee	syncGeometry		693060	0					
ANR	693143	Identifier	syncGeometry		693060	0					
ANR	693144	ArgumentList			693060	1					
ANR	693145	ExpressionStatement	syncLocation ( )	198:4:6897:6911	693060	8	True				
ANR	693146	CallExpression	syncLocation ( )		693060	0					
ANR	693147	Callee	syncLocation		693060	0					
ANR	693148	Identifier	syncLocation		693060	0					
ANR	693149	ArgumentList			693060	1					
ANR	693150	ExpressionStatement	m_screenSyncTimer . start ( )	201:4:7048:7073	693060	9	True				
ANR	693151	CallExpression	m_screenSyncTimer . start ( )		693060	0					
ANR	693152	Callee	m_screenSyncTimer . start		693060	0					
ANR	693153	MemberAccess	m_screenSyncTimer . start		693060	0					
ANR	693154	Identifier	m_screenSyncTimer		693060	0					
ANR	693155	Identifier	start		693060	1					
ANR	693156	ArgumentList			693060	1					
ANR	693157	IfStatement	if ( m_containment )		693060	10					
ANR	693158	Condition	m_containment	203:8:7084:7096	693060	0	True				
ANR	693159	Identifier	m_containment		693060	0					
ANR	693160	CompoundStatement		16:23:587:587	693060	1					
ANR	693161	ExpressionStatement	m_containment -> setUserConfiguring ( true )	204:8:7109:7148	693060	0	True				
ANR	693162	CallExpression	m_containment -> setUserConfiguring ( true )		693060	0					
ANR	693163	Callee	m_containment -> setUserConfiguring		693060	0					
ANR	693164	PtrMemberAccess	m_containment -> setUserConfiguring		693060	0					
ANR	693165	Identifier	m_containment		693060	0					
ANR	693166	Identifier	setUserConfiguring		693060	1					
ANR	693167	ArgumentList	true		693060	1					
ANR	693168	Argument	true		693060	0					
ANR	693169	Identifier	true		693060	0					
ANR	693170	ExpressionStatement	"PanelShadows :: self ( ) -> addWindow ( this , m_enabledBorders )"	207:4:7161:7216	693060	11	True				
ANR	693171	CallExpression	"PanelShadows :: self ( ) -> addWindow ( this , m_enabledBorders )"		693060	0					
ANR	693172	Callee	PanelShadows :: self ( ) -> addWindow		693060	0					
ANR	693173	PtrMemberAccess	PanelShadows :: self ( ) -> addWindow		693060	0					
ANR	693174	CallExpression	PanelShadows :: self ( )		693060	0					
ANR	693175	Callee	PanelShadows :: self		693060	0					
ANR	693176	Identifier	PanelShadows :: self		693060	0					
ANR	693177	ArgumentList			693060	1					
ANR	693178	Identifier	addWindow		693060	1					
ANR	693179	ArgumentList	this		693060	1					
ANR	693180	Argument	this		693060	0					
ANR	693181	Identifier	this		693060	0					
ANR	693182	Argument	m_enabledBorders		693060	1					
ANR	693183	Identifier	m_enabledBorders		693060	0					
ANR	693184	ReturnType	void		693060	1					
ANR	693185	Identifier	PanelConfigView :: showEvent		693060	2					
ANR	693186	ParameterList	QShowEvent * ev		693060	3					
ANR	693187	Parameter	QShowEvent * ev	187:32:6495:6508	693060	0	True				
ANR	693188	ParameterType	QShowEvent *		693060	0					
ANR	693189	Identifier	ev		693060	1					
ANR	693190	CFGEntryNode	ENTRY		693060		True				
ANR	693191	CFGExitNode	EXIT		693060		True				
ANR	693192	Symbol	m_screenSyncTimer		693060						
ANR	693193	Symbol	m_enabledBorders		693060						
ANR	693194	Symbol	Qt :: FramelessWindowHint		693060						
ANR	693195	Symbol	flags		693060						
ANR	693196	Symbol	NET :: KeepAbove		693060						
ANR	693197	Symbol	this		693060						
ANR	693198	Symbol	winId		693060						
ANR	693199	Symbol	PanelShadows :: self		693060						
ANR	693200	Symbol	NET :: Dock		693060						
ANR	693201	Symbol	~Qt :: WindowDoesNotAcceptFocus		693060						
ANR	693202	Symbol	ev		693060						
ANR	693203	Symbol	true		693060						
ANR	693204	Symbol	m_containment		693060						
ANR	693205	Symbol	Qt :: WindowFlags		693060						
ANR	693206	Function	PanelConfigView :: hideEvent	210:0:7221:7405							
ANR	693207	FunctionDef	PanelConfigView :: hideEvent (QHideEvent * ev)		693206	0					
ANR	693208	CompoundStatement		211:0:7269:7405	693206	0					
ANR	693209	ExpressionStatement	QQuickWindow :: hideEvent ( ev )	212:4:7275:7302	693206	0	True				
ANR	693210	CallExpression	QQuickWindow :: hideEvent ( ev )		693206	0					
ANR	693211	Callee	QQuickWindow :: hideEvent		693206	0					
ANR	693212	Identifier	QQuickWindow :: hideEvent		693206	0					
ANR	693213	ArgumentList	ev		693206	1					
ANR	693214	Argument	ev		693206	0					
ANR	693215	Identifier	ev		693206	0					
ANR	693216	IfStatement	if ( m_containment )		693206	1					
ANR	693217	Condition	m_containment	214:8:7313:7325	693206	0	True				
ANR	693218	Identifier	m_containment		693206	0					
ANR	693219	CompoundStatement		4:23:58:58	693206	1					
ANR	693220	ExpressionStatement	m_containment -> setUserConfiguring ( false )	215:8:7338:7378	693206	0	True				
ANR	693221	CallExpression	m_containment -> setUserConfiguring ( false )		693206	0					
ANR	693222	Callee	m_containment -> setUserConfiguring		693206	0					
ANR	693223	PtrMemberAccess	m_containment -> setUserConfiguring		693206	0					
ANR	693224	Identifier	m_containment		693206	0					
ANR	693225	Identifier	setUserConfiguring		693206	1					
ANR	693226	ArgumentList	false		693206	1					
ANR	693227	Argument	false		693206	0					
ANR	693228	Identifier	false		693206	0					
ANR	693229	ExpressionStatement	deleteLater ( )	217:4:7390:7403	693206	2	True				
ANR	693230	CallExpression	deleteLater ( )		693206	0					
ANR	693231	Callee	deleteLater		693206	0					
ANR	693232	Identifier	deleteLater		693206	0					
ANR	693233	ArgumentList			693206	1					
ANR	693234	ReturnType	void		693206	1					
ANR	693235	Identifier	PanelConfigView :: hideEvent		693206	2					
ANR	693236	ParameterList	QHideEvent * ev		693206	3					
ANR	693237	Parameter	QHideEvent * ev	210:32:7253:7266	693206	0	True				
ANR	693238	ParameterType	QHideEvent *		693206	0					
ANR	693239	Identifier	ev		693206	1					
ANR	693240	CFGEntryNode	ENTRY		693206		True				
ANR	693241	CFGExitNode	EXIT		693206		True				
ANR	693242	Symbol	ev		693206						
ANR	693243	Symbol	false		693206						
ANR	693244	Symbol	m_containment		693206						
ANR	693245	Function	PanelConfigView :: focusOutEvent	220:0:7408:7718							
ANR	693246	FunctionDef	PanelConfigView :: focusOutEvent (QFocusEvent * ev)		693245	0					
ANR	693247	CompoundStatement		221:0:7461:7718	693245	0					
ANR	693248	IdentifierDeclStatement	const QWindow * focusWindow = QGuiApplication :: focusWindow ( ) ;	222:4:7467:7526	693245	0	True				
ANR	693249	IdentifierDecl	* focusWindow = QGuiApplication :: focusWindow ( )		693245	0					
ANR	693250	IdentifierDeclType	const QWindow *		693245	0					
ANR	693251	Identifier	focusWindow		693245	1					
ANR	693252	AssignmentExpression	* focusWindow = QGuiApplication :: focusWindow ( )		693245	2		=			
ANR	693253	Identifier	focusWindow		693245	0					
ANR	693254	CallExpression	QGuiApplication :: focusWindow ( )		693245	1					
ANR	693255	Callee	QGuiApplication :: focusWindow		693245	0					
ANR	693256	Identifier	QGuiApplication :: focusWindow		693245	0					
ANR	693257	ArgumentList			693245	1					
ANR	693258	IfStatement	"if ( focusWindow && ( ( focusWindow -> flags ( ) . testFlag ( Qt :: Popup ) ) || focusWindow -> objectName ( ) == QLatin1String ( ""QMenuClassWindow"" ) ) )"		693245	1					
ANR	693259	Condition	"focusWindow && ( ( focusWindow -> flags ( ) . testFlag ( Qt :: Popup ) ) || focusWindow -> objectName ( ) == QLatin1String ( ""QMenuClassWindow"" ) )"	224:8:7537:7661	693245	0	True				
ANR	693260	AndExpression	"focusWindow && ( ( focusWindow -> flags ( ) . testFlag ( Qt :: Popup ) ) || focusWindow -> objectName ( ) == QLatin1String ( ""QMenuClassWindow"" ) )"		693245	0		&&			
ANR	693261	Identifier	focusWindow		693245	0					
ANR	693262	OrExpression	"( focusWindow -> flags ( ) . testFlag ( Qt :: Popup ) ) || focusWindow -> objectName ( ) == QLatin1String ( ""QMenuClassWindow"" )"		693245	1		||			
ANR	693263	CallExpression	focusWindow -> flags ( ) . testFlag ( Qt :: Popup )		693245	0					
ANR	693264	Callee	focusWindow -> flags ( ) . testFlag		693245	0					
ANR	693265	MemberAccess	focusWindow -> flags ( ) . testFlag		693245	0					
ANR	693266	CallExpression	focusWindow -> flags ( )		693245	0					
ANR	693267	Callee	focusWindow -> flags		693245	0					
ANR	693268	PtrMemberAccess	focusWindow -> flags		693245	0					
ANR	693269	Identifier	focusWindow		693245	0					
ANR	693270	Identifier	flags		693245	1					
ANR	693271	ArgumentList			693245	1					
ANR	693272	Identifier	testFlag		693245	1					
ANR	693273	ArgumentList	Qt :: Popup		693245	1					
ANR	693274	Argument	Qt :: Popup		693245	0					
ANR	693275	Identifier	Qt :: Popup		693245	0					
ANR	693276	EqualityExpression	"focusWindow -> objectName ( ) == QLatin1String ( ""QMenuClassWindow"" )"		693245	1		==			
ANR	693277	CallExpression	focusWindow -> objectName ( )		693245	0					
ANR	693278	Callee	focusWindow -> objectName		693245	0					
ANR	693279	PtrMemberAccess	focusWindow -> objectName		693245	0					
ANR	693280	Identifier	focusWindow		693245	0					
ANR	693281	Identifier	objectName		693245	1					
ANR	693282	ArgumentList			693245	1					
ANR	693283	CallExpression	"QLatin1String ( ""QMenuClassWindow"" )"		693245	1					
ANR	693284	Callee	QLatin1String		693245	0					
ANR	693285	Identifier	QLatin1String		693245	0					
ANR	693286	ArgumentList	"""QMenuClassWindow"""		693245	1					
ANR	693287	Argument	"""QMenuClassWindow"""		693245	0					
ANR	693288	PrimaryExpression	"""QMenuClassWindow"""		693245	0					
ANR	693289	CompoundStatement		4:135:202:202	693245	1					
ANR	693290	ReturnStatement	return ;	225:8:7674:7680	693245	0	True				
ANR	693291	Statement	Q_UNUSED	227:4:7692:7699	693245	2	True				
ANR	693292	ExpressionStatement	( ev ) close ( )	227:12:7700:7716	693245	3	True				
ANR	693293	CastExpression	( ev ) close ( )		693245	0					
ANR	693294	CastTarget	ev		693245	0					
ANR	693295	CallExpression	close ( )		693245	1					
ANR	693296	Callee	close		693245	0					
ANR	693297	Identifier	close		693245	0					
ANR	693298	ArgumentList			693245	1					
ANR	693299	ReturnType	void		693245	1					
ANR	693300	Identifier	PanelConfigView :: focusOutEvent		693245	2					
ANR	693301	ParameterList	QFocusEvent * ev		693245	3					
ANR	693302	Parameter	QFocusEvent * ev	220:36:7444:7458	693245	0	True				
ANR	693303	ParameterType	QFocusEvent *		693245	0					
ANR	693304	Identifier	ev		693245	1					
ANR	693305	CFGEntryNode	ENTRY		693245		True				
ANR	693306	CFGExitNode	EXIT		693245		True				
ANR	693307	Symbol	QLatin1String		693245						
ANR	693308	Symbol	ev		693245						
ANR	693309	Symbol	focusWindow -> flags		693245						
ANR	693310	Symbol	focusWindow -> flags ( ) . testFlag		693245						
ANR	693311	Symbol	QGuiApplication :: focusWindow		693245						
ANR	693312	Symbol	focusWindow -> objectName		693245						
ANR	693313	Symbol	* focusWindow		693245						
ANR	693314	Symbol	Qt :: Popup		693245						
ANR	693315	Symbol	focusWindow		693245						
ANR	693316	Function	PanelConfigView :: moveEvent	231:0:7721:7851							
ANR	693317	FunctionDef	PanelConfigView :: moveEvent (QMoveEvent * ev)		693316	0					
ANR	693318	CompoundStatement		232:0:7769:7851	693316	0					
ANR	693319	IfStatement	if ( m_shellSurface )		693316	0					
ANR	693320	Condition	m_shellSurface	233:8:7779:7792	693316	0	True				
ANR	693321	Identifier	m_shellSurface		693316	0					
ANR	693322	CompoundStatement		2:24:25:25	693316	1					
ANR	693323	ExpressionStatement	m_shellSurface -> setPosition ( ev -> pos ( ) )	234:8:7805:7843	693316	0	True				
ANR	693324	CallExpression	m_shellSurface -> setPosition ( ev -> pos ( ) )		693316	0					
ANR	693325	Callee	m_shellSurface -> setPosition		693316	0					
ANR	693326	PtrMemberAccess	m_shellSurface -> setPosition		693316	0					
ANR	693327	Identifier	m_shellSurface		693316	0					
ANR	693328	Identifier	setPosition		693316	1					
ANR	693329	ArgumentList	ev -> pos ( )		693316	1					
ANR	693330	Argument	ev -> pos ( )		693316	0					
ANR	693331	CallExpression	ev -> pos ( )		693316	0					
ANR	693332	Callee	ev -> pos		693316	0					
ANR	693333	PtrMemberAccess	ev -> pos		693316	0					
ANR	693334	Identifier	ev		693316	0					
ANR	693335	Identifier	pos		693316	1					
ANR	693336	ArgumentList			693316	1					
ANR	693337	ReturnType	void		693316	1					
ANR	693338	Identifier	PanelConfigView :: moveEvent		693316	2					
ANR	693339	ParameterList	QMoveEvent * ev		693316	3					
ANR	693340	Parameter	QMoveEvent * ev	231:32:7753:7766	693316	0	True				
ANR	693341	ParameterType	QMoveEvent *		693316	0					
ANR	693342	Identifier	ev		693316	1					
ANR	693343	CFGEntryNode	ENTRY		693316		True				
ANR	693344	CFGExitNode	EXIT		693316		True				
ANR	693345	Symbol	ev		693316						
ANR	693346	Symbol	m_shellSurface		693316						
ANR	693347	Symbol	ev -> pos		693316						
ANR	693348	Symbol	* ev		693316						
ANR	693349	Function	PanelConfigView :: event	238:0:7854:9072							
ANR	693350	FunctionDef	PanelConfigView :: event (QEvent * e)		693349	0					
ANR	693351	CompoundStatement		239:0:7893:9072	693349	0					
ANR	693352	IfStatement	if ( e -> type ( ) == QEvent :: PlatformSurface )		693349	0					
ANR	693353	Condition	e -> type ( ) == QEvent :: PlatformSurface	240:8:7903:7938	693349	0	True				
ANR	693354	EqualityExpression	e -> type ( ) == QEvent :: PlatformSurface		693349	0		==			
ANR	693355	CallExpression	e -> type ( )		693349	0					
ANR	693356	Callee	e -> type		693349	0					
ANR	693357	PtrMemberAccess	e -> type		693349	0					
ANR	693358	Identifier	e		693349	0					
ANR	693359	Identifier	type		693349	1					
ANR	693360	ArgumentList			693349	1					
ANR	693361	Identifier	QEvent :: PlatformSurface		693349	1					
ANR	693362	CompoundStatement		2:46:47:47	693349	1					
ANR	693363	Statement	if	241:8:7951:7952	693349	0	True				
ANR	693364	Statement	(	241:11:7954:7954	693349	1	True				
ANR	693365	Statement	auto	241:12:7955:7958	693349	2	True				
ANR	693366	Statement	pe	241:17:7960:7961	693349	3	True				
ANR	693367	Statement	=	241:20:7963:7963	693349	4	True				
ANR	693368	Statement	dynamic_cast	241:22:7965:7976	693349	5	True				
ANR	693369	Statement	<	241:34:7977:7977	693349	6	True				
ANR	693370	Statement	QPlatformSurfaceEvent	241:35:7978:7998	693349	7	True				
ANR	693371	Statement	*	241:56:7999:7999	693349	8	True				
ANR	693372	Statement	>	241:57:8000:8000	693349	9	True				
ANR	693373	Statement	(	241:58:8001:8001	693349	10	True				
ANR	693374	Statement	e	241:59:8002:8002	693349	11	True				
ANR	693375	Statement	)	241:60:8003:8003	693349	12	True				
ANR	693376	Statement	)	241:61:8004:8004	693349	13	True				
ANR	693377	CompoundStatement		3:63:112:112	693349	14					
ANR	693378	SwitchStatement	switch ( pe -> surfaceEventType ( ) )		693349	0					
ANR	693379	Condition	pe -> surfaceEventType ( )	242:20:8028:8049	693349	0	True				
ANR	693380	CallExpression	pe -> surfaceEventType ( )		693349	0					
ANR	693381	Callee	pe -> surfaceEventType		693349	0					
ANR	693382	PtrMemberAccess	pe -> surfaceEventType		693349	0					
ANR	693383	Identifier	pe		693349	0					
ANR	693384	Identifier	surfaceEventType		693349	1					
ANR	693385	ArgumentList			693349	1					
ANR	693386	CompoundStatement		4:44:158:158	693349	1					
ANR	693387	Label	case QPlatformSurfaceEvent :: SurfaceCreated :	243:12:8066:8108	693349	0	True				
ANR	693388	Identifier	QPlatformSurfaceEvent :: SurfaceCreated		693349	0					
ANR	693389	IfStatement	if ( m_shellSurface )		693349	1					
ANR	693390	Condition	m_shellSurface	244:20:8130:8143	693349	0	True				
ANR	693391	Identifier	m_shellSurface		693349	0					
ANR	693392	CompoundStatement		6:36:252:252	693349	1					
ANR	693393	BreakStatement	break ;	245:20:8168:8173	693349	0	True				
ANR	693394	Statement	if	247:16:8209:8210	693349	2	True				
ANR	693395	Statement	(	247:19:8212:8212	693349	3	True				
ANR	693396	Statement	ShellCorona	247:20:8213:8223	693349	4	True				
ANR	693397	Statement	*	247:32:8225:8225	693349	5	True				
ANR	693398	Statement	c	247:33:8226:8226	693349	6	True				
ANR	693399	Statement	=	247:35:8228:8228	693349	7	True				
ANR	693400	Statement	qobject_cast	247:37:8230:8241	693349	8	True				
ANR	693401	Statement	<	247:49:8242:8242	693349	9	True				
ANR	693402	Statement	ShellCorona	247:50:8243:8253	693349	10	True				
ANR	693403	Statement	*	247:62:8255:8255	693349	11	True				
ANR	693404	Statement	>	247:63:8256:8256	693349	12	True				
ANR	693405	Statement	(	247:64:8257:8257	693349	13	True				
ANR	693406	Statement	m_containment	247:65:8258:8270	693349	14	True				
ANR	693407	Statement	->	247:78:8271:8272	693349	15	True				
ANR	693408	Statement	corona	247:80:8273:8278	693349	16	True				
ANR	693409	Statement	(	247:86:8279:8279	693349	17	True				
ANR	693410	Statement	)	247:87:8280:8280	693349	18	True				
ANR	693411	Statement	)	247:88:8281:8281	693349	19	True				
ANR	693412	Statement	)	247:89:8282:8282	693349	20	True				
ANR	693413	CompoundStatement		15:20:636:674	693349	21					
ANR	693414	Statement	using	248:20:8306:8310	693349	0	True				
ANR	693415	Statement	namespace	248:26:8312:8320	693349	1	True				
ANR	693416	ExpressionStatement	KWayland :: Client	248:36:8322:8338	693349	2	True				
ANR	693417	Identifier	KWayland :: Client		693349	0					
ANR	693418	IdentifierDeclStatement	PlasmaShell * interface = c -> waylandPlasmaShellInterface ( ) ;	249:20:8360:8417	693349	3	True				
ANR	693419	IdentifierDecl	* interface = c -> waylandPlasmaShellInterface ( )		693349	0					
ANR	693420	IdentifierDeclType	PlasmaShell *		693349	0					
ANR	693421	Identifier	interface		693349	1					
ANR	693422	AssignmentExpression	* interface = c -> waylandPlasmaShellInterface ( )		693349	2		=			
ANR	693423	Identifier	interface		693349	0					
ANR	693424	CallExpression	c -> waylandPlasmaShellInterface ( )		693349	1					
ANR	693425	Callee	c -> waylandPlasmaShellInterface		693349	0					
ANR	693426	PtrMemberAccess	c -> waylandPlasmaShellInterface		693349	0					
ANR	693427	Identifier	c		693349	0					
ANR	693428	Identifier	waylandPlasmaShellInterface		693349	1					
ANR	693429	ArgumentList			693349	1					
ANR	693430	IfStatement	if ( ! interface )		693349	4					
ANR	693431	Condition	! interface	250:24:8443:8452	693349	0	True				
ANR	693432	UnaryOperationExpression	! interface		693349	0					
ANR	693433	UnaryOperator	!		693349	0					
ANR	693434	Identifier	interface		693349	1					
ANR	693435	CompoundStatement		12:36:561:561	693349	1					
ANR	693436	BreakStatement	break ;	251:24:8481:8486	693349	0	True				
ANR	693437	IdentifierDeclStatement	Surface * s = Surface :: fromWindow ( this ) ;	253:20:8530:8568	693349	5	True				
ANR	693438	IdentifierDecl	* s = Surface :: fromWindow ( this )		693349	0					
ANR	693439	IdentifierDeclType	Surface *		693349	0					
ANR	693440	Identifier	s		693349	1					
ANR	693441	AssignmentExpression	* s = Surface :: fromWindow ( this )		693349	2		=			
ANR	693442	Identifier	s		693349	0					
ANR	693443	CallExpression	Surface :: fromWindow ( this )		693349	1					
ANR	693444	Callee	Surface :: fromWindow		693349	0					
ANR	693445	Identifier	Surface :: fromWindow		693349	0					
ANR	693446	ArgumentList	this		693349	1					
ANR	693447	Argument	this		693349	0					
ANR	693448	Identifier	this		693349	0					
ANR	693449	IfStatement	if ( ! s )		693349	6					
ANR	693450	Condition	! s	254:24:8594:8595	693349	0	True				
ANR	693451	UnaryOperationExpression	! s		693349	0					
ANR	693452	UnaryOperator	!		693349	0					
ANR	693453	Identifier	s		693349	1					
ANR	693454	CompoundStatement		16:28:704:704	693349	1					
ANR	693455	BreakStatement	break ;	255:24:8624:8629	693349	0	True				
ANR	693456	ExpressionStatement	"m_shellSurface = interface -> createSurface ( s , this )"	257:20:8673:8723	693349	7	True				
ANR	693457	AssignmentExpression	"m_shellSurface = interface -> createSurface ( s , this )"		693349	0		=			
ANR	693458	Identifier	m_shellSurface		693349	0					
ANR	693459	CallExpression	"interface -> createSurface ( s , this )"		693349	1					
ANR	693460	Callee	interface -> createSurface		693349	0					
ANR	693461	PtrMemberAccess	interface -> createSurface		693349	0					
ANR	693462	Identifier	interface		693349	0					
ANR	693463	Identifier	createSurface		693349	1					
ANR	693464	ArgumentList	s		693349	1					
ANR	693465	Argument	s		693349	0					
ANR	693466	Identifier	s		693349	0					
ANR	693467	Argument	this		693349	1					
ANR	693468	Identifier	this		693349	0					
ANR	693469	BreakStatement	break ;	259:16:8759:8764	693349	22	True				
ANR	693470	Label	case QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed :	260:12:8778:8831	693349	23	True				
ANR	693471	Identifier	QPlatformSurfaceEvent :: SurfaceAboutToBeDestroyed		693349	0					
ANR	693472	Statement	delete	261:16:8849:8854	693349	24	True				
ANR	693473	ExpressionStatement	m_shellSurface	261:23:8856:8870	693349	25	True				
ANR	693474	Identifier	m_shellSurface		693349	0					
ANR	693475	ExpressionStatement	m_shellSurface = nullptr	262:16:8888:8912	693349	26	True				
ANR	693476	AssignmentExpression	m_shellSurface = nullptr		693349	0		=			
ANR	693477	Identifier	m_shellSurface		693349	0					
ANR	693478	Identifier	nullptr		693349	1					
ANR	693479	ExpressionStatement	PanelShadows :: self ( ) -> removeWindow ( this )	263:16:8930:8970	693349	27	True				
ANR	693480	CallExpression	PanelShadows :: self ( ) -> removeWindow ( this )		693349	0					
ANR	693481	Callee	PanelShadows :: self ( ) -> removeWindow		693349	0					
ANR	693482	PtrMemberAccess	PanelShadows :: self ( ) -> removeWindow		693349	0					
ANR	693483	CallExpression	PanelShadows :: self ( )		693349	0					
ANR	693484	Callee	PanelShadows :: self		693349	0					
ANR	693485	Identifier	PanelShadows :: self		693349	0					
ANR	693486	ArgumentList			693349	1					
ANR	693487	Identifier	removeWindow		693349	1					
ANR	693488	ArgumentList	this		693349	1					
ANR	693489	Argument	this		693349	0					
ANR	693490	Identifier	this		693349	0					
ANR	693491	BreakStatement	break ;	264:16:8988:8993	693349	28	True				
ANR	693492	ReturnStatement	return PlasmaQuick :: ConfigView :: event ( e ) ;	269:4:9030:9070	693349	1	True				
ANR	693493	CallExpression	PlasmaQuick :: ConfigView :: event ( e )		693349	0					
ANR	693494	Callee	PlasmaQuick :: ConfigView :: event		693349	0					
ANR	693495	Identifier	PlasmaQuick :: ConfigView :: event		693349	0					
ANR	693496	ArgumentList	e		693349	1					
ANR	693497	Argument	e		693349	0					
ANR	693498	Identifier	e		693349	0					
ANR	693499	ReturnType	bool		693349	1					
ANR	693500	Identifier	PanelConfigView :: event		693349	2					
ANR	693501	ParameterList	QEvent * e		693349	3					
ANR	693502	Parameter	QEvent * e	238:28:7882:7890	693349	0	True				
ANR	693503	ParameterType	QEvent *		693349	0					
ANR	693504	Identifier	e		693349	1					
ANR	693505	CFGEntryNode	ENTRY		693349		True				
ANR	693506	CFGExitNode	EXIT		693349		True				
ANR	693507	Symbol	pe -> surfaceEventType		693349						
ANR	693508	Symbol	PlasmaQuick :: ConfigView :: event		693349						
ANR	693509	Symbol	c		693349						
ANR	693510	Symbol	e		693349						
ANR	693511	Symbol	c -> waylandPlasmaShellInterface		693349						
ANR	693512	Symbol	this		693349						
ANR	693513	Symbol	PanelShadows :: self		693349						
ANR	693514	Symbol	* interface		693349						
ANR	693515	Symbol	interface		693349						
ANR	693516	Symbol	e -> type		693349						
ANR	693517	Symbol	* c		693349						
ANR	693518	Symbol	* e		693349						
ANR	693519	Symbol	m_shellSurface		693349						
ANR	693520	Symbol	interface -> createSurface		693349						
ANR	693521	Symbol	s		693349						
ANR	693522	Symbol	pe		693349						
ANR	693523	Symbol	* pe		693349						
ANR	693524	Symbol	QEvent :: PlatformSurface		693349						
ANR	693525	Symbol	Surface :: fromWindow		693349						
ANR	693526	Symbol	nullptr		693349						
ANR	693527	Function	PanelConfigView :: setVisibilityMode	272:0:9075:9225							
ANR	693528	FunctionDef	PanelConfigView :: setVisibilityMode (PanelView :: VisibilityMode mode)		693527	0					
ANR	693529	CompoundStatement		273:0:9147:9225	693527	0					
ANR	693530	ExpressionStatement	m_panelView -> setVisibilityMode ( mode )	274:4:9153:9189	693527	0	True				
ANR	693531	CallExpression	m_panelView -> setVisibilityMode ( mode )		693527	0					
ANR	693532	Callee	m_panelView -> setVisibilityMode		693527	0					
ANR	693533	PtrMemberAccess	m_panelView -> setVisibilityMode		693527	0					
ANR	693534	Identifier	m_panelView		693527	0					
ANR	693535	Identifier	setVisibilityMode		693527	1					
ANR	693536	ArgumentList	mode		693527	1					
ANR	693537	Argument	mode		693527	0					
ANR	693538	Identifier	mode		693527	0					
ANR	693539	IdentifierDeclStatement	emit visibilityModeChanged ( ) ;	275:4:9195:9223	693527	1	True				
ANR	693540	IdentifierDecl	visibilityModeChanged ( )		693527	0					
ANR	693541	IdentifierDeclType	emit		693527	0					
ANR	693542	Identifier	visibilityModeChanged		693527	1					
ANR	693543	ReturnType	void		693527	1					
ANR	693544	Identifier	PanelConfigView :: setVisibilityMode		693527	2					
ANR	693545	ParameterList	PanelView :: VisibilityMode mode		693527	3					
ANR	693546	Parameter	PanelView :: VisibilityMode mode	272:40:9115:9144	693527	0	True				
ANR	693547	ParameterType	PanelView :: VisibilityMode		693527	0					
ANR	693548	Identifier	mode		693527	1					
ANR	693549	CFGEntryNode	ENTRY		693527		True				
ANR	693550	CFGExitNode	EXIT		693527		True				
ANR	693551	Symbol	mode		693527						
ANR	693552	Symbol	m_panelView		693527						
ANR	693553	Symbol	visibilityModeChanged		693527						
ANR	693554	Function	PanelConfigView :: visibilityMode	278:0:9228:9338							
ANR	693555	FunctionDef	PanelConfigView :: visibilityMode ()		693554	0					
ANR	693556	CompoundStatement		279:0:9294:9338	693554	0					
ANR	693557	ReturnStatement	return m_panelView -> visibilityMode ( ) ;	280:4:9300:9336	693554	0	True				
ANR	693558	CallExpression	m_panelView -> visibilityMode ( )		693554	0					
ANR	693559	Callee	m_panelView -> visibilityMode		693554	0					
ANR	693560	PtrMemberAccess	m_panelView -> visibilityMode		693554	0					
ANR	693561	Identifier	m_panelView		693554	0					
ANR	693562	Identifier	visibilityMode		693554	1					
ANR	693563	ArgumentList			693554	1					
ANR	693564	ReturnType	PanelView :: VisibilityMode		693554	1					
ANR	693565	Identifier	PanelConfigView :: visibilityMode		693554	2					
ANR	693566	ParameterList			693554	3					
ANR	693567	CFGEntryNode	ENTRY		693554		True				
ANR	693568	CFGExitNode	EXIT		693554		True				
ANR	693569	Symbol	m_panelView		693554						
ANR	693570	Symbol	m_panelView -> visibilityMode		693554						
ANR	693571	Symbol	* m_panelView		693554						
ANR	693572	Function	PanelConfigView :: enabledBorders	283:0:9341:9445							
ANR	693573	FunctionDef	PanelConfigView :: enabledBorders ()		693572	0					
ANR	693574	CompoundStatement		284:0:9414:9445	693572	0					
ANR	693575	ReturnStatement	return m_enabledBorders ;	285:4:9420:9443	693572	0	True				
ANR	693576	Identifier	m_enabledBorders		693572	0					
ANR	693577	ReturnType	Plasma :: FrameSvg :: EnabledBorders		693572	1					
ANR	693578	Identifier	PanelConfigView :: enabledBorders		693572	2					
ANR	693579	ParameterList			693572	3					
ANR	693580	CFGEntryNode	ENTRY		693572		True				
ANR	693581	CFGExitNode	EXIT		693572		True				
ANR	693582	Symbol	m_enabledBorders		693572						
