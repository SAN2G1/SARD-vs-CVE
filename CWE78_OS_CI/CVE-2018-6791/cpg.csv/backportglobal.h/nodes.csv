command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	50304	File	data/converged/CVE-2018-6791_plasma-workspace/backportglobal.h								
ANR	50305	DeclStmt									
ANR	50306	Decl							Class	Class *	self
ANR	50307	DeclStmt									
ANR	50308	Decl							Class	Class *	self
ANR	50309	Function	__mtd__	82:0:3044:3183							
ANR	50310	FunctionDef	"__mtd__ (QScriptContext * ctx , QScriptEngine * eng)"		50309	0					
ANR	50311	CompoundStatement		83:0:3115:3183	50309	0					
ANR	50312	ExpressionStatement	"DECLARE_SELF ( Class , __mtd__ )"	84:4:3123:3151	50309	0	True				
ANR	50313	CallExpression	"DECLARE_SELF ( Class , __mtd__ )"		50309	0					
ANR	50314	Callee	DECLARE_SELF		50309	0					
ANR	50315	Identifier	DECLARE_SELF		50309	0					
ANR	50316	ArgumentList	Class		50309	1					
ANR	50317	Argument	Class		50309	0					
ANR	50318	Identifier	Class		50309	0					
ANR	50319	Argument	__mtd__		50309	1					
ANR	50320	Identifier	__mtd__		50309	0					
ANR	50321	Statement	define	86:1:3155:3160	50309	1	True				
ANR	50322	Statement	END_DECLARE_METHOD	86:8:3162:3179	50309	2	True				
ANR	50323	ReturnType	static QScriptValue		50309	1					
ANR	50324	Identifier	__mtd__		50309	2					
ANR	50325	ParameterList	"QScriptContext * ctx , QScriptEngine * eng"		50309	3					
ANR	50326	Parameter	QScriptContext * ctx	82:28:3072:3090	50309	0	True				
ANR	50327	ParameterType	QScriptContext *		50309	0					
ANR	50328	Identifier	ctx		50309	1					
ANR	50329	Parameter	QScriptEngine * eng	82:49:3093:3110	50309	1	True				
ANR	50330	ParameterType	QScriptEngine *		50309	0					
ANR	50331	Identifier	eng		50309	1					
ANR	50332	CFGEntryNode	ENTRY		50309		True				
ANR	50333	CFGExitNode	EXIT		50309		True				
ANR	50334	Symbol	ctx		50309						
ANR	50335	Symbol	Class		50309						
ANR	50336	Symbol	eng		50309						
ANR	50337	Symbol	__mtd__		50309						
ANR	50338	ClassDef	<unnamed>	209:0:7482:7511							
ANR	50339	ClassDef	Pointer	214:0:7537:10292							
ANR	50340	DeclStmt									
ANR	50341	Decl							T	T *	pointer_type
ANR	50342	DeclStmt									
ANR	50343	Decl							QExplicitlySharedDataPointer < Pointer < T > >	QExplicitlySharedDataPointer < Pointer < T > >	wrapped_pointer_type
ANR	50344	Function	~Pointer	220:4:7692:7781							
ANR	50345	FunctionDef	~Pointer ()		50344	2					
ANR	50346	CompoundStatement		221:4:7707:7781	50344	0					
ANR	50347	IfStatement	if ( ! ( m_flags & UserOwnership ) )		50344	0					
ANR	50348	Condition	! ( m_flags & UserOwnership )	222:12:7721:7746	50344	0	True				
ANR	50349	UnaryOperationExpression	! ( m_flags & UserOwnership )		50344	0					
ANR	50350	UnaryOperator	!		50344	0					
ANR	50351	BitAndExpression	m_flags & UserOwnership		50344	1		&			
ANR	50352	Identifier	m_flags		50344	0					
ANR	50353	Identifier	UserOwnership		50344	1					
ANR	50354	Statement	delete	223:12:7761:7766	50344	1	True				
ANR	50355	ExpressionStatement	m_value	223:19:7768:7775	50344	1	True				
ANR	50356	Identifier	m_value		50344	0					
ANR	50357	Identifier	~Pointer		50344	1					
ANR	50358	ParameterList			50344	2					
ANR	50359	CFGEntryNode	ENTRY		50344		True				
ANR	50360	CFGExitNode	EXIT		50344		True				
ANR	50361	Symbol	m_flags		50344						
ANR	50362	Symbol	UserOwnership		50344						
ANR	50363	Function	fromScriptValue	248:4:8267:9990							
ANR	50364	FunctionDef	"fromScriptValue (const QScriptValue & value , T * & target)"		50363	3					
ANR	50365	CompoundStatement		249:4:8338:9990	50363	0					
ANR	50366	ReturnType	static void		50363	1					
ANR	50367	Identifier	fromScriptValue		50363	2					
ANR	50368	ParameterList	"const QScriptValue & value , T * & target"		50363	3					
ANR	50369	Parameter	const QScriptValue & value	248:32:8295:8319	50363	0	True				
ANR	50370	ParameterType	const QScriptValue &		50363	0					
ANR	50371	Identifier	value		50363	1					
ANR	50372	Parameter	T * & target	248:59:8322:8331	50363	1	True				
ANR	50373	ParameterType	T * &		50363	0					
ANR	50374	Identifier	target		50363	1					
ANR	50375	CFGEntryNode	ENTRY		50363		True				
ANR	50376	CFGExitNode	EXIT		50363		True				
ANR	50377	Symbol	value		50363						
ANR	50378	Symbol	target		50363						
ANR	50379	Function	flags	286:4:9997:10038							
ANR	50380	FunctionDef	flags ()		50379	4					
ANR	50381	CompoundStatement		287:4:10020:10038	50379	0					
ANR	50382	ReturnStatement	return m_flags ;	287:1:10022:10036	50379	0	True				
ANR	50383	Identifier	m_flags		50379	0					
ANR	50384	ReturnType	uint		50379	1					
ANR	50385	Identifier	flags		50379	2					
ANR	50386	ParameterList			50379	3					
ANR	50387	CFGEntryNode	ENTRY		50379		True				
ANR	50388	CFGExitNode	EXIT		50379		True				
ANR	50389	Symbol	m_flags		50379						
ANR	50390	Function	setFlags	288:4:10044:10093							
ANR	50391	FunctionDef	setFlags (uint flags)		50390	5					
ANR	50392	CompoundStatement		289:4:10074:10093	50390	0					
ANR	50393	ExpressionStatement	m_flags = flags	289:1:10076:10091	50390	0	True				
ANR	50394	AssignmentExpression	m_flags = flags		50390	0		=			
ANR	50395	Identifier	m_flags		50390	0					
ANR	50396	Identifier	flags		50390	1					
ANR	50397	ReturnType	void		50390	1					
ANR	50398	Identifier	setFlags		50390	2					
ANR	50399	ParameterList	uint flags		50390	3					
ANR	50400	Parameter	uint flags	288:18:10058:10067	50390	0	True				
ANR	50401	ParameterType	uint		50390	0					
ANR	50402	Identifier	flags		50390	1					
ANR	50403	CFGEntryNode	ENTRY		50390		True				
ANR	50404	CFGExitNode	EXIT		50390		True				
ANR	50405	Symbol	m_flags		50390						
ANR	50406	Symbol	flags		50390						
ANR	50407	Function	unsetFlags	290:4:10099:10152							
ANR	50408	FunctionDef	unsetFlags (uint flags)		50407	6					
ANR	50409	CompoundStatement		291:4:10131:10152	50407	0					
ANR	50410	ExpressionStatement	m_flags &= ~flags	291:1:10133:10150	50407	0	True				
ANR	50411	AssignmentExpression	m_flags &= ~flags		50407	0		&=			
ANR	50412	Identifier	m_flags		50407	0					
ANR	50413	Identifier	~flags		50407	1					
ANR	50414	ReturnType	void		50407	1					
ANR	50415	Identifier	unsetFlags		50407	2					
ANR	50416	ParameterList	uint flags		50407	3					
ANR	50417	Parameter	uint flags	290:20:10115:10124	50407	0	True				
ANR	50418	ParameterType	uint		50407	0					
ANR	50419	Identifier	flags		50407	1					
ANR	50420	CFGEntryNode	ENTRY		50407		True				
ANR	50421	CFGExitNode	EXIT		50407		True				
ANR	50422	Symbol	m_flags		50407						
ANR	50423	Symbol	flags		50407						
ANR	50424	Symbol	~flags		50407						
ANR	50425	Function	Pointer	294:4:10170:10246							
ANR	50426	FunctionDef	"Pointer (T * value , uint flags)"		50425	7					
ANR	50427	CompoundStatement		296:4:10245:10246	50425	0					
ANR	50428	Identifier	Pointer		50425	1					
ANR	50429	ParameterList	"T * value , uint flags"		50425	2					
ANR	50430	Parameter	T * value	294:12:10178:10185	50425	0	True				
ANR	50431	ParameterType	T *		50425	0					
ANR	50432	Identifier	value		50425	1					
ANR	50433	Parameter	uint flags	294:22:10188:10197	50425	1	True				
ANR	50434	ParameterType	uint		50425	0					
ANR	50435	Identifier	flags		50425	1					
ANR	50436	CFGEntryNode	ENTRY		50425		True				
ANR	50437	CFGExitNode	EXIT		50425		True				
ANR	50438	Symbol	flags		50425						
ANR	50439	Symbol	value		50425						
ANR	50440	DeclStmt									
ANR	50441	Decl							uint	uint	m_flags
ANR	50442	DeclStmt									
ANR	50443	Decl							T	T *	m_value
ANR	50444	DeclStmt									
ANR	50445	Decl							"void ( * ) ( const QScriptValue & , T * & )"	"void ( * ) ( const QScriptValue & , T * & )"	df
ANR	50446	DeclStmt									
ANR	50447	Decl							const int	const int	id
ANR	50448	Function	maybeReleaseOwnership	321:0:10952:11315							
ANR	50449	FunctionDef	maybeReleaseOwnership (const QScriptValue & value)		50448	0					
ANR	50450	CompoundStatement		322:0:11013:11315	50448	0					
ANR	50451	IfStatement	if ( value . isVariant ( ) )		50448	0					
ANR	50452	Condition	value . isVariant ( )	323:8:11023:11039	50448	0	True				
ANR	50453	CallExpression	value . isVariant ( )		50448	0					
ANR	50454	Callee	value . isVariant		50448	0					
ANR	50455	MemberAccess	value . isVariant		50448	0					
ANR	50456	Identifier	value		50448	0					
ANR	50457	Identifier	isVariant		50448	1					
ANR	50458	ArgumentList			50448	1					
ANR	50459	CompoundStatement		4:8:80:133	50448	1					
ANR	50460	IdentifierDeclStatement	QVariant var = value . toVariant ( ) ;	324:8:11052:11084	50448	0	True				
ANR	50461	IdentifierDecl	var = value . toVariant ( )		50448	0					
ANR	50462	IdentifierDeclType	QVariant		50448	0					
ANR	50463	Identifier	var		50448	1					
ANR	50464	AssignmentExpression	var = value . toVariant ( )		50448	2		=			
ANR	50465	Identifier	var		50448	0					
ANR	50466	CallExpression	value . toVariant ( )		50448	1					
ANR	50467	Callee	value . toVariant		50448	0					
ANR	50468	MemberAccess	value . toVariant		50448	0					
ANR	50469	Identifier	value		50448	0					
ANR	50470	Identifier	toVariant		50448	1					
ANR	50471	ArgumentList			50448	1					
ANR	50472	IdentifierDeclStatement	QByteArray name = QMetaType :: typeName ( var . userType ( ) ) ;	325:8:11094:11147	50448	1	True				
ANR	50473	IdentifierDecl	name = QMetaType :: typeName ( var . userType ( ) )		50448	0					
ANR	50474	IdentifierDeclType	QByteArray		50448	0					
ANR	50475	Identifier	name		50448	1					
ANR	50476	AssignmentExpression	name = QMetaType :: typeName ( var . userType ( ) )		50448	2		=			
ANR	50477	Identifier	name		50448	0					
ANR	50478	CallExpression	QMetaType :: typeName ( var . userType ( ) )		50448	1					
ANR	50479	Callee	QMetaType :: typeName		50448	0					
ANR	50480	Identifier	QMetaType :: typeName		50448	0					
ANR	50481	ArgumentList	var . userType ( )		50448	1					
ANR	50482	Argument	var . userType ( )		50448	0					
ANR	50483	CallExpression	var . userType ( )		50448	0					
ANR	50484	Callee	var . userType		50448	0					
ANR	50485	MemberAccess	var . userType		50448	0					
ANR	50486	Identifier	var		50448	0					
ANR	50487	Identifier	userType		50448	1					
ANR	50488	ArgumentList			50448	1					
ANR	50489	IfStatement	"if ( name . startsWith ( ""QScript::Pointer<"" ) )"		50448	2					
ANR	50490	Condition	"name . startsWith ( ""QScript::Pointer<"" )"	326:12:11161:11196	50448	0	True				
ANR	50491	CallExpression	"name . startsWith ( ""QScript::Pointer<"" )"		50448	0					
ANR	50492	Callee	name . startsWith		50448	0					
ANR	50493	MemberAccess	name . startsWith		50448	0					
ANR	50494	Identifier	name		50448	0					
ANR	50495	Identifier	startsWith		50448	1					
ANR	50496	ArgumentList	"""QScript::Pointer<"""		50448	1					
ANR	50497	Argument	"""QScript::Pointer<"""		50448	0					
ANR	50498	PrimaryExpression	"""QScript::Pointer<"""		50448	0					
ANR	50499	Statement	(	327:12:11211:11211	50448	1	True				
ANR	50500	Statement	*	327:13:11212:11212	50448	3	True				
ANR	50501	Statement	reinterpret_cast	327:14:11213:11228	50448	4	True				
ANR	50502	Statement	<	327:30:11229:11229	50448	5	True				
ANR	50503	Statement	Pointer	327:31:11230:11236	50448	6	True				
ANR	50504	Statement	<	327:38:11237:11237	50448	7	True				
ANR	50505	Statement	void	327:39:11238:11241	50448	8	True				
ANR	50506	Statement	*	327:43:11242:11242	50448	9	True				
ANR	50507	Statement	>	327:44:11243:11243	50448	10	True				
ANR	50508	Statement	::	327:45:11244:11245	50448	11	True				
ANR	50509	Statement	wrapped_pointer_type	327:47:11246:11265	50448	12	True				
ANR	50510	Statement	*	327:68:11267:11267	50448	13	True				
ANR	50511	Statement	>	327:69:11268:11268	50448	14	True				
ANR	50512	Statement	(	327:70:11269:11269	50448	15	True				
ANR	50513	Statement	var	327:71:11270:11272	50448	16	True				
ANR	50514	Statement	.	327:74:11273:11273	50448	17	True				
ANR	50515	Statement	data	327:75:11274:11277	50448	18	True				
ANR	50516	Statement	(	327:79:11278:11278	50448	19	True				
ANR	50517	Statement	)	327:80:11279:11279	50448	20	True				
ANR	50518	Statement	)	327:81:11280:11280	50448	21	True				
ANR	50519	Statement	)	327:82:11281:11281	50448	22	True				
ANR	50520	Statement	->	327:83:11282:11283	50448	23	True				
ANR	50521	ExpressionStatement	setFlags ( UserOwnership )	327:85:11284:11307	50448	24	True				
ANR	50522	CallExpression	setFlags ( UserOwnership )		50448	0					
ANR	50523	Callee	setFlags		50448	0					
ANR	50524	Identifier	setFlags		50448	0					
ANR	50525	ArgumentList	UserOwnership		50448	1					
ANR	50526	Argument	UserOwnership		50448	0					
ANR	50527	Identifier	UserOwnership		50448	0					
ANR	50528	ReturnType	inline void		50448	1					
ANR	50529	Identifier	maybeReleaseOwnership		50448	2					
ANR	50530	ParameterList	const QScriptValue & value		50448	3					
ANR	50531	Parameter	const QScriptValue & value	321:34:10986:11010	50448	0	True				
ANR	50532	ParameterType	const QScriptValue &		50448	0					
ANR	50533	Identifier	value		50448	1					
ANR	50534	CFGEntryNode	ENTRY		50448		True				
ANR	50535	CFGExitNode	EXIT		50448		True				
ANR	50536	Symbol	value . isVariant		50448						
ANR	50537	Symbol	var . userType		50448						
ANR	50538	Symbol	name . startsWith		50448						
ANR	50539	Symbol	var		50448						
ANR	50540	Symbol	QMetaType :: typeName		50448						
ANR	50541	Symbol	name		50448						
ANR	50542	Symbol	value		50448						
ANR	50543	Symbol	UserOwnership		50448						
ANR	50544	Symbol	value . toVariant		50448						
ANR	50545	Function	maybeTakeOwnership	331:0:11318:11680							
ANR	50546	FunctionDef	maybeTakeOwnership (const QScriptValue & value)		50545	0					
ANR	50547	CompoundStatement		332:0:11376:11680	50545	0					
ANR	50548	IfStatement	if ( value . isVariant ( ) )		50545	0					
ANR	50549	Condition	value . isVariant ( )	333:8:11386:11402	50545	0	True				
ANR	50550	CallExpression	value . isVariant ( )		50545	0					
ANR	50551	Callee	value . isVariant		50545	0					
ANR	50552	MemberAccess	value . isVariant		50545	0					
ANR	50553	Identifier	value		50545	0					
ANR	50554	Identifier	isVariant		50545	1					
ANR	50555	ArgumentList			50545	1					
ANR	50556	CompoundStatement		4:8:80:133	50545	1					
ANR	50557	IdentifierDeclStatement	QVariant var = value . toVariant ( ) ;	334:8:11415:11447	50545	0	True				
ANR	50558	IdentifierDecl	var = value . toVariant ( )		50545	0					
ANR	50559	IdentifierDeclType	QVariant		50545	0					
ANR	50560	Identifier	var		50545	1					
ANR	50561	AssignmentExpression	var = value . toVariant ( )		50545	2		=			
ANR	50562	Identifier	var		50545	0					
ANR	50563	CallExpression	value . toVariant ( )		50545	1					
ANR	50564	Callee	value . toVariant		50545	0					
ANR	50565	MemberAccess	value . toVariant		50545	0					
ANR	50566	Identifier	value		50545	0					
ANR	50567	Identifier	toVariant		50545	1					
ANR	50568	ArgumentList			50545	1					
ANR	50569	IdentifierDeclStatement	QByteArray name = QMetaType :: typeName ( var . userType ( ) ) ;	335:8:11457:11510	50545	1	True				
ANR	50570	IdentifierDecl	name = QMetaType :: typeName ( var . userType ( ) )		50545	0					
ANR	50571	IdentifierDeclType	QByteArray		50545	0					
ANR	50572	Identifier	name		50545	1					
ANR	50573	AssignmentExpression	name = QMetaType :: typeName ( var . userType ( ) )		50545	2		=			
ANR	50574	Identifier	name		50545	0					
ANR	50575	CallExpression	QMetaType :: typeName ( var . userType ( ) )		50545	1					
ANR	50576	Callee	QMetaType :: typeName		50545	0					
ANR	50577	Identifier	QMetaType :: typeName		50545	0					
ANR	50578	ArgumentList	var . userType ( )		50545	1					
ANR	50579	Argument	var . userType ( )		50545	0					
ANR	50580	CallExpression	var . userType ( )		50545	0					
ANR	50581	Callee	var . userType		50545	0					
ANR	50582	MemberAccess	var . userType		50545	0					
ANR	50583	Identifier	var		50545	0					
ANR	50584	Identifier	userType		50545	1					
ANR	50585	ArgumentList			50545	1					
ANR	50586	IfStatement	"if ( name . startsWith ( ""QScript::Pointer<"" ) )"		50545	2					
ANR	50587	Condition	"name . startsWith ( ""QScript::Pointer<"" )"	336:12:11524:11559	50545	0	True				
ANR	50588	CallExpression	"name . startsWith ( ""QScript::Pointer<"" )"		50545	0					
ANR	50589	Callee	name . startsWith		50545	0					
ANR	50590	MemberAccess	name . startsWith		50545	0					
ANR	50591	Identifier	name		50545	0					
ANR	50592	Identifier	startsWith		50545	1					
ANR	50593	ArgumentList	"""QScript::Pointer<"""		50545	1					
ANR	50594	Argument	"""QScript::Pointer<"""		50545	0					
ANR	50595	PrimaryExpression	"""QScript::Pointer<"""		50545	0					
ANR	50596	Statement	(	337:12:11574:11574	50545	1	True				
ANR	50597	Statement	*	337:13:11575:11575	50545	3	True				
ANR	50598	Statement	reinterpret_cast	337:14:11576:11591	50545	4	True				
ANR	50599	Statement	<	337:30:11592:11592	50545	5	True				
ANR	50600	Statement	Pointer	337:31:11593:11599	50545	6	True				
ANR	50601	Statement	<	337:38:11600:11600	50545	7	True				
ANR	50602	Statement	void	337:39:11601:11604	50545	8	True				
ANR	50603	Statement	*	337:43:11605:11605	50545	9	True				
ANR	50604	Statement	>	337:44:11606:11606	50545	10	True				
ANR	50605	Statement	::	337:45:11607:11608	50545	11	True				
ANR	50606	Statement	wrapped_pointer_type	337:47:11609:11628	50545	12	True				
ANR	50607	Statement	*	337:68:11630:11630	50545	13	True				
ANR	50608	Statement	>	337:69:11631:11631	50545	14	True				
ANR	50609	Statement	(	337:70:11632:11632	50545	15	True				
ANR	50610	Statement	var	337:71:11633:11635	50545	16	True				
ANR	50611	Statement	.	337:74:11636:11636	50545	17	True				
ANR	50612	Statement	data	337:75:11637:11640	50545	18	True				
ANR	50613	Statement	(	337:79:11641:11641	50545	19	True				
ANR	50614	Statement	)	337:80:11642:11642	50545	20	True				
ANR	50615	Statement	)	337:81:11643:11643	50545	21	True				
ANR	50616	Statement	)	337:82:11644:11644	50545	22	True				
ANR	50617	Statement	->	337:83:11645:11646	50545	23	True				
ANR	50618	ExpressionStatement	unsetFlags ( UserOwnership )	337:85:11647:11672	50545	24	True				
ANR	50619	CallExpression	unsetFlags ( UserOwnership )		50545	0					
ANR	50620	Callee	unsetFlags		50545	0					
ANR	50621	Identifier	unsetFlags		50545	0					
ANR	50622	ArgumentList	UserOwnership		50545	1					
ANR	50623	Argument	UserOwnership		50545	0					
ANR	50624	Identifier	UserOwnership		50545	0					
ANR	50625	ReturnType	inline void		50545	1					
ANR	50626	Identifier	maybeTakeOwnership		50545	2					
ANR	50627	ParameterList	const QScriptValue & value		50545	3					
ANR	50628	Parameter	const QScriptValue & value	331:31:11349:11373	50545	0	True				
ANR	50629	ParameterType	const QScriptValue &		50545	0					
ANR	50630	Identifier	value		50545	1					
ANR	50631	CFGEntryNode	ENTRY		50545		True				
ANR	50632	CFGExitNode	EXIT		50545		True				
ANR	50633	Symbol	value . isVariant		50545						
ANR	50634	Symbol	var . userType		50545						
ANR	50635	Symbol	name . startsWith		50545						
ANR	50636	Symbol	var		50545						
ANR	50637	Symbol	QMetaType :: typeName		50545						
ANR	50638	Symbol	name		50545						
ANR	50639	Symbol	value		50545						
ANR	50640	Symbol	UserOwnership		50545						
ANR	50641	Symbol	value . toVariant		50545						
