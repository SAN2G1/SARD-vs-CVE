command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	776399	File	data/converged/CVE-2018-6791_plasma-workspace/splashapp.cpp								
ANR	776400	Function	SplashApp :: SplashApp	50:0:1387:2925							
ANR	776401	FunctionDef	"SplashApp :: SplashApp (int & argc , char * * argv)"		776400	0					
ANR	776402	CompoundStatement		56:0:1581:2925	776400	0					
ANR	776403	IdentifierDeclStatement	QCommandLineParser parser ;	57:4:1587:1612	776400	0	True				
ANR	776404	IdentifierDecl	parser		776400	0					
ANR	776405	IdentifierDeclType	QCommandLineParser		776400	0					
ANR	776406	Identifier	parser		776400	1					
ANR	776407	ExpressionStatement	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""test"" ) , QStringLiteral ( ""Run in test mode"" ) ) )"	58:4:1618:1714	776400	1	True				
ANR	776408	CallExpression	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""test"" ) , QStringLiteral ( ""Run in test mode"" ) ) )"		776400	0					
ANR	776409	Callee	parser . addOption		776400	0					
ANR	776410	MemberAccess	parser . addOption		776400	0					
ANR	776411	Identifier	parser		776400	0					
ANR	776412	Identifier	addOption		776400	1					
ANR	776413	ArgumentList	"QCommandLineOption ( QStringLiteral ( ""test"" ) , QStringLiteral ( ""Run in test mode"" ) )"		776400	1					
ANR	776414	Argument	"QCommandLineOption ( QStringLiteral ( ""test"" ) , QStringLiteral ( ""Run in test mode"" ) )"		776400	0					
ANR	776415	CallExpression	"QCommandLineOption ( QStringLiteral ( ""test"" ) , QStringLiteral ( ""Run in test mode"" ) )"		776400	0					
ANR	776416	Callee	QCommandLineOption		776400	0					
ANR	776417	Identifier	QCommandLineOption		776400	0					
ANR	776418	ArgumentList	"QStringLiteral ( ""test"" )"		776400	1					
ANR	776419	Argument	"QStringLiteral ( ""test"" )"		776400	0					
ANR	776420	CallExpression	"QStringLiteral ( ""test"" )"		776400	0					
ANR	776421	Callee	QStringLiteral		776400	0					
ANR	776422	Identifier	QStringLiteral		776400	0					
ANR	776423	ArgumentList	"""test"""		776400	1					
ANR	776424	Argument	"""test"""		776400	0					
ANR	776425	PrimaryExpression	"""test"""		776400	0					
ANR	776426	Argument	"QStringLiteral ( ""Run in test mode"" )"		776400	1					
ANR	776427	CallExpression	"QStringLiteral ( ""Run in test mode"" )"		776400	0					
ANR	776428	Callee	QStringLiteral		776400	0					
ANR	776429	Identifier	QStringLiteral		776400	0					
ANR	776430	ArgumentList	"""Run in test mode"""		776400	1					
ANR	776431	Argument	"""Run in test mode"""		776400	0					
ANR	776432	PrimaryExpression	"""Run in test mode"""		776400	0					
ANR	776433	ExpressionStatement	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""window"" ) , QStringLiteral ( ""Run in windowed mode"" ) ) )"	59:4:1720:1822	776400	2	True				
ANR	776434	CallExpression	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""window"" ) , QStringLiteral ( ""Run in windowed mode"" ) ) )"		776400	0					
ANR	776435	Callee	parser . addOption		776400	0					
ANR	776436	MemberAccess	parser . addOption		776400	0					
ANR	776437	Identifier	parser		776400	0					
ANR	776438	Identifier	addOption		776400	1					
ANR	776439	ArgumentList	"QCommandLineOption ( QStringLiteral ( ""window"" ) , QStringLiteral ( ""Run in windowed mode"" ) )"		776400	1					
ANR	776440	Argument	"QCommandLineOption ( QStringLiteral ( ""window"" ) , QStringLiteral ( ""Run in windowed mode"" ) )"		776400	0					
ANR	776441	CallExpression	"QCommandLineOption ( QStringLiteral ( ""window"" ) , QStringLiteral ( ""Run in windowed mode"" ) )"		776400	0					
ANR	776442	Callee	QCommandLineOption		776400	0					
ANR	776443	Identifier	QCommandLineOption		776400	0					
ANR	776444	ArgumentList	"QStringLiteral ( ""window"" )"		776400	1					
ANR	776445	Argument	"QStringLiteral ( ""window"" )"		776400	0					
ANR	776446	CallExpression	"QStringLiteral ( ""window"" )"		776400	0					
ANR	776447	Callee	QStringLiteral		776400	0					
ANR	776448	Identifier	QStringLiteral		776400	0					
ANR	776449	ArgumentList	"""window"""		776400	1					
ANR	776450	Argument	"""window"""		776400	0					
ANR	776451	PrimaryExpression	"""window"""		776400	0					
ANR	776452	Argument	"QStringLiteral ( ""Run in windowed mode"" )"		776400	1					
ANR	776453	CallExpression	"QStringLiteral ( ""Run in windowed mode"" )"		776400	0					
ANR	776454	Callee	QStringLiteral		776400	0					
ANR	776455	Identifier	QStringLiteral		776400	0					
ANR	776456	ArgumentList	"""Run in windowed mode"""		776400	1					
ANR	776457	Argument	"""Run in windowed mode"""		776400	0					
ANR	776458	PrimaryExpression	"""Run in windowed mode"""		776400	0					
ANR	776459	ExpressionStatement	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""nofork"" ) , QStringLiteral ( ""Don't fork"" ) ) )"	60:4:1828:1920	776400	3	True				
ANR	776460	CallExpression	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""nofork"" ) , QStringLiteral ( ""Don't fork"" ) ) )"		776400	0					
ANR	776461	Callee	parser . addOption		776400	0					
ANR	776462	MemberAccess	parser . addOption		776400	0					
ANR	776463	Identifier	parser		776400	0					
ANR	776464	Identifier	addOption		776400	1					
ANR	776465	ArgumentList	"QCommandLineOption ( QStringLiteral ( ""nofork"" ) , QStringLiteral ( ""Don't fork"" ) )"		776400	1					
ANR	776466	Argument	"QCommandLineOption ( QStringLiteral ( ""nofork"" ) , QStringLiteral ( ""Don't fork"" ) )"		776400	0					
ANR	776467	CallExpression	"QCommandLineOption ( QStringLiteral ( ""nofork"" ) , QStringLiteral ( ""Don't fork"" ) )"		776400	0					
ANR	776468	Callee	QCommandLineOption		776400	0					
ANR	776469	Identifier	QCommandLineOption		776400	0					
ANR	776470	ArgumentList	"QStringLiteral ( ""nofork"" )"		776400	1					
ANR	776471	Argument	"QStringLiteral ( ""nofork"" )"		776400	0					
ANR	776472	CallExpression	"QStringLiteral ( ""nofork"" )"		776400	0					
ANR	776473	Callee	QStringLiteral		776400	0					
ANR	776474	Identifier	QStringLiteral		776400	0					
ANR	776475	ArgumentList	"""nofork"""		776400	1					
ANR	776476	Argument	"""nofork"""		776400	0					
ANR	776477	PrimaryExpression	"""nofork"""		776400	0					
ANR	776478	Argument	"QStringLiteral ( ""Don't fork"" )"		776400	1					
ANR	776479	CallExpression	"QStringLiteral ( ""Don't fork"" )"		776400	0					
ANR	776480	Callee	QStringLiteral		776400	0					
ANR	776481	Identifier	QStringLiteral		776400	0					
ANR	776482	ArgumentList	"""Don't fork"""		776400	1					
ANR	776483	Argument	"""Don't fork"""		776400	0					
ANR	776484	PrimaryExpression	"""Don't fork"""		776400	0					
ANR	776485	ExpressionStatement	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""pid"" ) , QStringLiteral ( ""Print the pid of the child process"" ) ) )"	61:4:1926:2039	776400	4	True				
ANR	776486	CallExpression	"parser . addOption ( QCommandLineOption ( QStringLiteral ( ""pid"" ) , QStringLiteral ( ""Print the pid of the child process"" ) ) )"		776400	0					
ANR	776487	Callee	parser . addOption		776400	0					
ANR	776488	MemberAccess	parser . addOption		776400	0					
ANR	776489	Identifier	parser		776400	0					
ANR	776490	Identifier	addOption		776400	1					
ANR	776491	ArgumentList	"QCommandLineOption ( QStringLiteral ( ""pid"" ) , QStringLiteral ( ""Print the pid of the child process"" ) )"		776400	1					
ANR	776492	Argument	"QCommandLineOption ( QStringLiteral ( ""pid"" ) , QStringLiteral ( ""Print the pid of the child process"" ) )"		776400	0					
ANR	776493	CallExpression	"QCommandLineOption ( QStringLiteral ( ""pid"" ) , QStringLiteral ( ""Print the pid of the child process"" ) )"		776400	0					
ANR	776494	Callee	QCommandLineOption		776400	0					
ANR	776495	Identifier	QCommandLineOption		776400	0					
ANR	776496	ArgumentList	"QStringLiteral ( ""pid"" )"		776400	1					
ANR	776497	Argument	"QStringLiteral ( ""pid"" )"		776400	0					
ANR	776498	CallExpression	"QStringLiteral ( ""pid"" )"		776400	0					
ANR	776499	Callee	QStringLiteral		776400	0					
ANR	776500	Identifier	QStringLiteral		776400	0					
ANR	776501	ArgumentList	"""pid"""		776400	1					
ANR	776502	Argument	"""pid"""		776400	0					
ANR	776503	PrimaryExpression	"""pid"""		776400	0					
ANR	776504	Argument	"QStringLiteral ( ""Print the pid of the child process"" )"		776400	1					
ANR	776505	CallExpression	"QStringLiteral ( ""Print the pid of the child process"" )"		776400	0					
ANR	776506	Callee	QStringLiteral		776400	0					
ANR	776507	Identifier	QStringLiteral		776400	0					
ANR	776508	ArgumentList	"""Print the pid of the child process"""		776400	1					
ANR	776509	Argument	"""Print the pid of the child process"""		776400	0					
ANR	776510	PrimaryExpression	"""Print the pid of the child process"""		776400	0					
ANR	776511	ExpressionStatement	parser . addHelpOption ( )	62:4:2045:2067	776400	5	True				
ANR	776512	CallExpression	parser . addHelpOption ( )		776400	0					
ANR	776513	Callee	parser . addHelpOption		776400	0					
ANR	776514	MemberAccess	parser . addHelpOption		776400	0					
ANR	776515	Identifier	parser		776400	0					
ANR	776516	Identifier	addHelpOption		776400	1					
ANR	776517	ArgumentList			776400	1					
ANR	776518	ExpressionStatement	parser . process ( * this )	64:4:2074:2095	776400	6	True				
ANR	776519	CallExpression	parser . process ( * this )		776400	0					
ANR	776520	Callee	parser . process		776400	0					
ANR	776521	MemberAccess	parser . process		776400	0					
ANR	776522	Identifier	parser		776400	0					
ANR	776523	Identifier	process		776400	1					
ANR	776524	ArgumentList	* this		776400	1					
ANR	776525	Argument	* this		776400	0					
ANR	776526	UnaryOperationExpression	* this		776400	0					
ANR	776527	UnaryOperator	*		776400	0					
ANR	776528	Identifier	this		776400	1					
ANR	776529	ExpressionStatement	"m_testing = parser . isSet ( QStringLiteral ( ""test"" ) )"	65:4:2101:2149	776400	7	True				
ANR	776530	AssignmentExpression	"m_testing = parser . isSet ( QStringLiteral ( ""test"" ) )"		776400	0		=			
ANR	776531	Identifier	m_testing		776400	0					
ANR	776532	CallExpression	"parser . isSet ( QStringLiteral ( ""test"" ) )"		776400	1					
ANR	776533	Callee	parser . isSet		776400	0					
ANR	776534	MemberAccess	parser . isSet		776400	0					
ANR	776535	Identifier	parser		776400	0					
ANR	776536	Identifier	isSet		776400	1					
ANR	776537	ArgumentList	"QStringLiteral ( ""test"" )"		776400	1					
ANR	776538	Argument	"QStringLiteral ( ""test"" )"		776400	0					
ANR	776539	CallExpression	"QStringLiteral ( ""test"" )"		776400	0					
ANR	776540	Callee	QStringLiteral		776400	0					
ANR	776541	Identifier	QStringLiteral		776400	0					
ANR	776542	ArgumentList	"""test"""		776400	1					
ANR	776543	Argument	"""test"""		776400	0					
ANR	776544	PrimaryExpression	"""test"""		776400	0					
ANR	776545	ExpressionStatement	"m_window = parser . isSet ( QStringLiteral ( ""window"" ) )"	66:4:2155:2204	776400	8	True				
ANR	776546	AssignmentExpression	"m_window = parser . isSet ( QStringLiteral ( ""window"" ) )"		776400	0		=			
ANR	776547	Identifier	m_window		776400	0					
ANR	776548	CallExpression	"parser . isSet ( QStringLiteral ( ""window"" ) )"		776400	1					
ANR	776549	Callee	parser . isSet		776400	0					
ANR	776550	MemberAccess	parser . isSet		776400	0					
ANR	776551	Identifier	parser		776400	0					
ANR	776552	Identifier	isSet		776400	1					
ANR	776553	ArgumentList	"QStringLiteral ( ""window"" )"		776400	1					
ANR	776554	Argument	"QStringLiteral ( ""window"" )"		776400	0					
ANR	776555	CallExpression	"QStringLiteral ( ""window"" )"		776400	0					
ANR	776556	Callee	QStringLiteral		776400	0					
ANR	776557	Identifier	QStringLiteral		776400	0					
ANR	776558	ArgumentList	"""window"""		776400	1					
ANR	776559	Argument	"""window"""		776400	0					
ANR	776560	PrimaryExpression	"""window"""		776400	0					
ANR	776561	ExpressionStatement	setupWaylandIntegration ( )	68:4:2211:2236	776400	9	True				
ANR	776562	CallExpression	setupWaylandIntegration ( )		776400	0					
ANR	776563	Callee	setupWaylandIntegration		776400	0					
ANR	776564	Identifier	setupWaylandIntegration		776400	0					
ANR	776565	ArgumentList			776400	1					
ANR	776566	Statement	foreach	70:4:2243:2249	776400	10	True				
ANR	776567	Statement	(	70:11:2250:2250	776400	11	True				
ANR	776568	Statement	QScreen	70:12:2251:2257	776400	12	True				
ANR	776569	Statement	*	70:19:2258:2258	776400	13	True				
ANR	776570	Statement	screen	70:21:2260:2265	776400	14	True				
ANR	776571	Statement	","	70:27:2266:2266	776400	15	True				
ANR	776572	Statement	screens	70:29:2268:2274	776400	16	True				
ANR	776573	Statement	(	70:36:2275:2275	776400	17	True				
ANR	776574	Statement	)	70:37:2276:2276	776400	18	True				
ANR	776575	Statement	)	70:38:2277:2277	776400	19	True				
ANR	776576	ExpressionStatement	adoptScreen ( screen )	71:8:2287:2306	776400	20	True				
ANR	776577	CallExpression	adoptScreen ( screen )		776400	0					
ANR	776578	Callee	adoptScreen		776400	0					
ANR	776579	Identifier	adoptScreen		776400	0					
ANR	776580	ArgumentList	screen		776400	1					
ANR	776581	Argument	screen		776400	0					
ANR	776582	Identifier	screen		776400	0					
ANR	776583	ExpressionStatement	"setStage ( QStringLiteral ( ""initial"" ) )"	73:4:2313:2348	776400	21	True				
ANR	776584	CallExpression	"setStage ( QStringLiteral ( ""initial"" ) )"		776400	0					
ANR	776585	Callee	setStage		776400	0					
ANR	776586	Identifier	setStage		776400	0					
ANR	776587	ArgumentList	"QStringLiteral ( ""initial"" )"		776400	1					
ANR	776588	Argument	"QStringLiteral ( ""initial"" )"		776400	0					
ANR	776589	CallExpression	"QStringLiteral ( ""initial"" )"		776400	0					
ANR	776590	Callee	QStringLiteral		776400	0					
ANR	776591	Identifier	QStringLiteral		776400	0					
ANR	776592	ArgumentList	"""initial"""		776400	1					
ANR	776593	Argument	"""initial"""		776400	0					
ANR	776594	PrimaryExpression	"""initial"""		776400	0					
ANR	776595	IfStatement	if ( KWindowSystem :: isPlatformWayland ( ) )		776400	22					
ANR	776596	Condition	KWindowSystem :: isPlatformWayland ( )	75:8:2359:2392	776400	0	True				
ANR	776597	CallExpression	KWindowSystem :: isPlatformWayland ( )		776400	0					
ANR	776598	Callee	KWindowSystem :: isPlatformWayland		776400	0					
ANR	776599	Identifier	KWindowSystem :: isPlatformWayland		776400	0					
ANR	776600	ArgumentList			776400	1					
ANR	776601	CompoundStatement		20:44:813:813	776400	1					
ANR	776602	ExpressionStatement	"setStage ( QStringLiteral ( ""wm"" ) )"	76:8:2405:2435	776400	0	True				
ANR	776603	CallExpression	"setStage ( QStringLiteral ( ""wm"" ) )"		776400	0					
ANR	776604	Callee	setStage		776400	0					
ANR	776605	Identifier	setStage		776400	0					
ANR	776606	ArgumentList	"QStringLiteral ( ""wm"" )"		776400	1					
ANR	776607	Argument	"QStringLiteral ( ""wm"" )"		776400	0					
ANR	776608	CallExpression	"QStringLiteral ( ""wm"" )"		776400	0					
ANR	776609	Callee	QStringLiteral		776400	0					
ANR	776610	Identifier	QStringLiteral		776400	0					
ANR	776611	ArgumentList	"""wm"""		776400	1					
ANR	776612	Argument	"""wm"""		776400	0					
ANR	776613	PrimaryExpression	"""wm"""		776400	0					
ANR	776614	IdentifierDeclStatement	"QPixmap cursor ( 32 , 32 ) ;"	79:4:2448:2470	776400	23	True				
ANR	776615	IdentifierDecl	"cursor ( 32 , 32 )"		776400	0					
ANR	776616	IdentifierDeclType	QPixmap		776400	0					
ANR	776617	Identifier	cursor		776400	1					
ANR	776618	Expression	"32 , 32"		776400	2					
ANR	776619	PrimaryExpression	32		776400	0					
ANR	776620	PrimaryExpression	32		776400	1					
ANR	776621	ExpressionStatement	cursor . fill ( Qt :: transparent )	80:4:2476:2504	776400	24	True				
ANR	776622	CallExpression	cursor . fill ( Qt :: transparent )		776400	0					
ANR	776623	Callee	cursor . fill		776400	0					
ANR	776624	MemberAccess	cursor . fill		776400	0					
ANR	776625	Identifier	cursor		776400	0					
ANR	776626	Identifier	fill		776400	1					
ANR	776627	ArgumentList	Qt :: transparent		776400	1					
ANR	776628	Argument	Qt :: transparent		776400	0					
ANR	776629	Identifier	Qt :: transparent		776400	0					
ANR	776630	ExpressionStatement	setOverrideCursor ( QCursor ( cursor ) )	81:4:2510:2544	776400	25	True				
ANR	776631	CallExpression	setOverrideCursor ( QCursor ( cursor ) )		776400	0					
ANR	776632	Callee	setOverrideCursor		776400	0					
ANR	776633	Identifier	setOverrideCursor		776400	0					
ANR	776634	ArgumentList	QCursor ( cursor )		776400	1					
ANR	776635	Argument	QCursor ( cursor )		776400	0					
ANR	776636	CallExpression	QCursor ( cursor )		776400	0					
ANR	776637	Callee	QCursor		776400	0					
ANR	776638	Identifier	QCursor		776400	0					
ANR	776639	ArgumentList	cursor		776400	1					
ANR	776640	Argument	cursor		776400	0					
ANR	776641	Identifier	cursor		776400	0					
ANR	776642	IfStatement	if ( m_testing )		776400	26					
ANR	776643	Condition	m_testing	83:8:2555:2563	776400	0	True				
ANR	776644	Identifier	m_testing		776400	0					
ANR	776645	CompoundStatement		28:19:984:984	776400	1					
ANR	776646	ExpressionStatement	"m_timer . start ( TEST_STEP_INTERVAL , this )"	84:8:2576:2615	776400	0	True				
ANR	776647	CallExpression	"m_timer . start ( TEST_STEP_INTERVAL , this )"		776400	0					
ANR	776648	Callee	m_timer . start		776400	0					
ANR	776649	MemberAccess	m_timer . start		776400	0					
ANR	776650	Identifier	m_timer		776400	0					
ANR	776651	Identifier	start		776400	1					
ANR	776652	ArgumentList	TEST_STEP_INTERVAL		776400	1					
ANR	776653	Argument	TEST_STEP_INTERVAL		776400	0					
ANR	776654	Identifier	TEST_STEP_INTERVAL		776400	0					
ANR	776655	Argument	this		776400	1					
ANR	776656	Identifier	this		776400	0					
ANR	776657	ExpressionStatement	"connect ( this , & QGuiApplication :: screenAdded , this , & SplashApp :: adoptScreen )"	87:4:2628:2703	776400	27	True				
ANR	776658	CallExpression	"connect ( this , & QGuiApplication :: screenAdded , this , & SplashApp :: adoptScreen )"		776400	0					
ANR	776659	Callee	connect		776400	0					
ANR	776660	Identifier	connect		776400	0					
ANR	776661	ArgumentList	this		776400	1					
ANR	776662	Argument	this		776400	0					
ANR	776663	Identifier	this		776400	0					
ANR	776664	Argument	& QGuiApplication :: screenAdded		776400	1					
ANR	776665	UnaryOperationExpression	& QGuiApplication :: screenAdded		776400	0					
ANR	776666	UnaryOperator	&		776400	0					
ANR	776667	Identifier	QGuiApplication :: screenAdded		776400	1					
ANR	776668	Argument	this		776400	2					
ANR	776669	Identifier	this		776400	0					
ANR	776670	Argument	& SplashApp :: adoptScreen		776400	3					
ANR	776671	UnaryOperationExpression	& SplashApp :: adoptScreen		776400	0					
ANR	776672	UnaryOperator	&		776400	0					
ANR	776673	Identifier	SplashApp :: adoptScreen		776400	1					
ANR	776674	IdentifierDeclStatement	QDBusConnection dbus = QDBusConnection :: sessionBus ( ) ;	89:4:2710:2762	776400	28	True				
ANR	776675	IdentifierDecl	dbus = QDBusConnection :: sessionBus ( )		776400	0					
ANR	776676	IdentifierDeclType	QDBusConnection		776400	0					
ANR	776677	Identifier	dbus		776400	1					
ANR	776678	AssignmentExpression	dbus = QDBusConnection :: sessionBus ( )		776400	2		=			
ANR	776679	Identifier	dbus		776400	0					
ANR	776680	CallExpression	QDBusConnection :: sessionBus ( )		776400	1					
ANR	776681	Callee	QDBusConnection :: sessionBus		776400	0					
ANR	776682	Identifier	QDBusConnection :: sessionBus		776400	0					
ANR	776683	ArgumentList			776400	1					
ANR	776684	ExpressionStatement	"dbus . registerObject ( QStringLiteral ( ""/KSplash"" ) , this , QDBusConnection :: ExportScriptableSlots )"	90:4:2768:2861	776400	29	True				
ANR	776685	CallExpression	"dbus . registerObject ( QStringLiteral ( ""/KSplash"" ) , this , QDBusConnection :: ExportScriptableSlots )"		776400	0					
ANR	776686	Callee	dbus . registerObject		776400	0					
ANR	776687	MemberAccess	dbus . registerObject		776400	0					
ANR	776688	Identifier	dbus		776400	0					
ANR	776689	Identifier	registerObject		776400	1					
ANR	776690	ArgumentList	"QStringLiteral ( ""/KSplash"" )"		776400	1					
ANR	776691	Argument	"QStringLiteral ( ""/KSplash"" )"		776400	0					
ANR	776692	CallExpression	"QStringLiteral ( ""/KSplash"" )"		776400	0					
ANR	776693	Callee	QStringLiteral		776400	0					
ANR	776694	Identifier	QStringLiteral		776400	0					
ANR	776695	ArgumentList	"""/KSplash"""		776400	1					
ANR	776696	Argument	"""/KSplash"""		776400	0					
ANR	776697	PrimaryExpression	"""/KSplash"""		776400	0					
ANR	776698	Argument	this		776400	1					
ANR	776699	Identifier	this		776400	0					
ANR	776700	Argument	QDBusConnection :: ExportScriptableSlots		776400	2					
ANR	776701	Identifier	QDBusConnection :: ExportScriptableSlots		776400	0					
ANR	776702	ExpressionStatement	"dbus . registerService ( QStringLiteral ( ""org.kde.KSplash"" ) )"	91:4:2867:2922	776400	30	True				
ANR	776703	CallExpression	"dbus . registerService ( QStringLiteral ( ""org.kde.KSplash"" ) )"		776400	0					
ANR	776704	Callee	dbus . registerService		776400	0					
ANR	776705	MemberAccess	dbus . registerService		776400	0					
ANR	776706	Identifier	dbus		776400	0					
ANR	776707	Identifier	registerService		776400	1					
ANR	776708	ArgumentList	"QStringLiteral ( ""org.kde.KSplash"" )"		776400	1					
ANR	776709	Argument	"QStringLiteral ( ""org.kde.KSplash"" )"		776400	0					
ANR	776710	CallExpression	"QStringLiteral ( ""org.kde.KSplash"" )"		776400	0					
ANR	776711	Callee	QStringLiteral		776400	0					
ANR	776712	Identifier	QStringLiteral		776400	0					
ANR	776713	ArgumentList	"""org.kde.KSplash"""		776400	1					
ANR	776714	Argument	"""org.kde.KSplash"""		776400	0					
ANR	776715	PrimaryExpression	"""org.kde.KSplash"""		776400	0					
ANR	776716	Identifier	SplashApp :: SplashApp		776400	1					
ANR	776717	ParameterList	"int & argc , char * * argv"		776400	2					
ANR	776718	Parameter	int & argc	50:21:1408:1416	776400	0	True				
ANR	776719	ParameterType	int &		776400	0					
ANR	776720	Identifier	argc		776400	1					
ANR	776721	Parameter	char * * argv	50:32:1419:1430	776400	1	True				
ANR	776722	ParameterType	char * *		776400	0					
ANR	776723	Identifier	argv		776400	1					
ANR	776724	CFGEntryNode	ENTRY		776400		True				
ANR	776725	CFGExitNode	EXIT		776400		True				
ANR	776726	Symbol	argc		776400						
ANR	776727	Symbol	cursor		776400						
ANR	776728	Symbol	QDBusConnection :: ExportScriptableSlots		776400						
ANR	776729	Symbol	m_timer		776400						
ANR	776730	Symbol	this		776400						
ANR	776731	Symbol	screen		776400						
ANR	776732	Symbol	Qt :: transparent		776400						
ANR	776733	Symbol	& QGuiApplication :: screenAdded		776400						
ANR	776734	Symbol	argv		776400						
ANR	776735	Symbol	TEST_STEP_INTERVAL		776400						
ANR	776736	Symbol	QCommandLineOption		776400						
ANR	776737	Symbol	* this		776400						
ANR	776738	Symbol	parser . isSet		776400						
ANR	776739	Symbol	& SplashApp :: adoptScreen		776400						
ANR	776740	Symbol	dbus		776400						
ANR	776741	Symbol	parser		776400						
ANR	776742	Symbol	m_testing		776400						
ANR	776743	Symbol	QCursor		776400						
ANR	776744	Symbol	KWindowSystem :: isPlatformWayland		776400						
ANR	776745	Symbol	m_window		776400						
ANR	776746	Symbol	QStringLiteral		776400						
ANR	776747	Symbol	QDBusConnection :: sessionBus		776400						
ANR	776748	Function	SplashApp :: ~SplashApp	95:0:2928:2981							
ANR	776749	FunctionDef	SplashApp :: ~SplashApp ()		776748	0					
ANR	776750	CompoundStatement		96:0:2952:2981	776748	0					
ANR	776751	ExpressionStatement	qDeleteAll ( m_windows )	97:4:2958:2979	776748	0	True				
ANR	776752	CallExpression	qDeleteAll ( m_windows )		776748	0					
ANR	776753	Callee	qDeleteAll		776748	0					
ANR	776754	Identifier	qDeleteAll		776748	0					
ANR	776755	ArgumentList	m_windows		776748	1					
ANR	776756	Argument	m_windows		776748	0					
ANR	776757	Identifier	m_windows		776748	0					
ANR	776758	Identifier	SplashApp :: ~SplashApp		776748	1					
ANR	776759	ParameterList			776748	2					
ANR	776760	CFGEntryNode	ENTRY		776748		True				
ANR	776761	CFGExitNode	EXIT		776748		True				
ANR	776762	Symbol	m_windows		776748						
ANR	776763	Function	SplashApp :: timerEvent	100:0:2984:3195							
ANR	776764	FunctionDef	SplashApp :: timerEvent (QTimerEvent * event)		776763	0					
ANR	776765	CompoundStatement		101:0:3032:3195	776763	0					
ANR	776766	IfStatement	if ( event -> timerId ( ) == m_timer . timerId ( ) )		776763	0					
ANR	776767	Condition	event -> timerId ( ) == m_timer . timerId ( )	102:8:3042:3078	776763	0	True				
ANR	776768	EqualityExpression	event -> timerId ( ) == m_timer . timerId ( )		776763	0		==			
ANR	776769	CallExpression	event -> timerId ( )		776763	0					
ANR	776770	Callee	event -> timerId		776763	0					
ANR	776771	PtrMemberAccess	event -> timerId		776763	0					
ANR	776772	Identifier	event		776763	0					
ANR	776773	Identifier	timerId		776763	1					
ANR	776774	ArgumentList			776763	1					
ANR	776775	CallExpression	m_timer . timerId ( )		776763	1					
ANR	776776	Callee	m_timer . timerId		776763	0					
ANR	776777	MemberAccess	m_timer . timerId		776763	0					
ANR	776778	Identifier	m_timer		776763	0					
ANR	776779	Identifier	timerId		776763	1					
ANR	776780	ArgumentList			776763	1					
ANR	776781	CompoundStatement		2:47:48:48	776763	1					
ANR	776782	ExpressionStatement	m_timer . stop ( )	103:8:3091:3105	776763	0	True				
ANR	776783	CallExpression	m_timer . stop ( )		776763	0					
ANR	776784	Callee	m_timer . stop		776763	0					
ANR	776785	MemberAccess	m_timer . stop		776763	0					
ANR	776786	Identifier	m_timer		776763	0					
ANR	776787	Identifier	stop		776763	1					
ANR	776788	ArgumentList			776763	1					
ANR	776789	ExpressionStatement	setStage ( m_stage + 1 )	105:8:3116:3137	776763	1	True				
ANR	776790	CallExpression	setStage ( m_stage + 1 )		776763	0					
ANR	776791	Callee	setStage		776763	0					
ANR	776792	Identifier	setStage		776763	0					
ANR	776793	ArgumentList	m_stage + 1		776763	1					
ANR	776794	Argument	m_stage + 1		776763	0					
ANR	776795	AdditiveExpression	m_stage + 1		776763	0		+			
ANR	776796	Identifier	m_stage		776763	0					
ANR	776797	PrimaryExpression	1		776763	1					
ANR	776798	ExpressionStatement	"m_timer . start ( TEST_STEP_INTERVAL , this )"	107:8:3148:3187	776763	2	True				
ANR	776799	CallExpression	"m_timer . start ( TEST_STEP_INTERVAL , this )"		776763	0					
ANR	776800	Callee	m_timer . start		776763	0					
ANR	776801	MemberAccess	m_timer . start		776763	0					
ANR	776802	Identifier	m_timer		776763	0					
ANR	776803	Identifier	start		776763	1					
ANR	776804	ArgumentList	TEST_STEP_INTERVAL		776763	1					
ANR	776805	Argument	TEST_STEP_INTERVAL		776763	0					
ANR	776806	Identifier	TEST_STEP_INTERVAL		776763	0					
ANR	776807	Argument	this		776763	1					
ANR	776808	Identifier	this		776763	0					
ANR	776809	ReturnType	void		776763	1					
ANR	776810	Identifier	SplashApp :: timerEvent		776763	2					
ANR	776811	ParameterList	QTimerEvent * event		776763	3					
ANR	776812	Parameter	QTimerEvent * event	100:27:3011:3029	776763	0	True				
ANR	776813	ParameterType	QTimerEvent *		776763	0					
ANR	776814	Identifier	event		776763	1					
ANR	776815	CFGEntryNode	ENTRY		776763		True				
ANR	776816	CFGExitNode	EXIT		776763		True				
ANR	776817	Symbol	m_stage		776763						
ANR	776818	Symbol	* event		776763						
ANR	776819	Symbol	m_timer		776763						
ANR	776820	Symbol	event -> timerId		776763						
ANR	776821	Symbol	this		776763						
ANR	776822	Symbol	event		776763						
ANR	776823	Symbol	TEST_STEP_INTERVAL		776763						
ANR	776824	Symbol	m_timer . timerId		776763						
ANR	776825	Function	SplashApp :: setStage	111:0:3198:3653							
ANR	776826	FunctionDef	SplashApp :: setStage (const QString & stage)		776825	0					
ANR	776827	CompoundStatement		112:0:3245:3653	776825	0					
ANR	776828	IfStatement	"if ( stage == QLatin1String ( ""kded"" ) || stage == QLatin1String ( ""confupdate"" ) )"		776825	0					
ANR	776829	Condition	"stage == QLatin1String ( ""kded"" ) || stage == QLatin1String ( ""confupdate"" )"	114:8:3341:3410	776825	0	True				
ANR	776830	OrExpression	"stage == QLatin1String ( ""kded"" ) || stage == QLatin1String ( ""confupdate"" )"		776825	0		||			
ANR	776831	EqualityExpression	"stage == QLatin1String ( ""kded"" )"		776825	0		==			
ANR	776832	Identifier	stage		776825	0					
ANR	776833	CallExpression	"QLatin1String ( ""kded"" )"		776825	1					
ANR	776834	Callee	QLatin1String		776825	0					
ANR	776835	Identifier	QLatin1String		776825	0					
ANR	776836	ArgumentList	"""kded"""		776825	1					
ANR	776837	Argument	"""kded"""		776825	0					
ANR	776838	PrimaryExpression	"""kded"""		776825	0					
ANR	776839	EqualityExpression	"stage == QLatin1String ( ""confupdate"" )"		776825	1		==			
ANR	776840	Identifier	stage		776825	0					
ANR	776841	CallExpression	"QLatin1String ( ""confupdate"" )"		776825	1					
ANR	776842	Callee	QLatin1String		776825	0					
ANR	776843	Identifier	QLatin1String		776825	0					
ANR	776844	ArgumentList	"""confupdate"""		776825	1					
ANR	776845	Argument	"""confupdate"""		776825	0					
ANR	776846	PrimaryExpression	"""confupdate"""		776825	0					
ANR	776847	CompoundStatement		3:80:167:167	776825	1					
ANR	776848	ReturnStatement	return ;	115:8:3423:3429	776825	0	True				
ANR	776849	ExpressionStatement	"qDebug ( ) << ""Loading stage "" << stage << m_startTime . msecsTo ( QDateTime :: currentDateTime ( ) )"	118:4:3442:3532	776825	1	True				
ANR	776850	ShiftExpression	"qDebug ( ) << ""Loading stage "" << stage << m_startTime . msecsTo ( QDateTime :: currentDateTime ( ) )"		776825	0		<<			
ANR	776851	CallExpression	qDebug ( )		776825	0					
ANR	776852	Callee	qDebug		776825	0					
ANR	776853	Identifier	qDebug		776825	0					
ANR	776854	ArgumentList			776825	1					
ANR	776855	ShiftExpression	"""Loading stage "" << stage << m_startTime . msecsTo ( QDateTime :: currentDateTime ( ) )"		776825	1		<<			
ANR	776856	PrimaryExpression	"""Loading stage """		776825	0					
ANR	776857	ShiftExpression	stage << m_startTime . msecsTo ( QDateTime :: currentDateTime ( ) )		776825	1		<<			
ANR	776858	Identifier	stage		776825	0					
ANR	776859	CallExpression	m_startTime . msecsTo ( QDateTime :: currentDateTime ( ) )		776825	1					
ANR	776860	Callee	m_startTime . msecsTo		776825	0					
ANR	776861	MemberAccess	m_startTime . msecsTo		776825	0					
ANR	776862	Identifier	m_startTime		776825	0					
ANR	776863	Identifier	msecsTo		776825	1					
ANR	776864	ArgumentList	QDateTime :: currentDateTime ( )		776825	1					
ANR	776865	Argument	QDateTime :: currentDateTime ( )		776825	0					
ANR	776866	CallExpression	QDateTime :: currentDateTime ( )		776825	0					
ANR	776867	Callee	QDateTime :: currentDateTime		776825	0					
ANR	776868	Identifier	QDateTime :: currentDateTime		776825	0					
ANR	776869	ArgumentList			776825	1					
ANR	776870	IfStatement	if ( m_stages . contains ( stage ) )		776825	2					
ANR	776871	Condition	m_stages . contains ( stage )	120:8:3543:3566	776825	0	True				
ANR	776872	CallExpression	m_stages . contains ( stage )		776825	0					
ANR	776873	Callee	m_stages . contains		776825	0					
ANR	776874	MemberAccess	m_stages . contains		776825	0					
ANR	776875	Identifier	m_stages		776825	0					
ANR	776876	Identifier	contains		776825	1					
ANR	776877	ArgumentList	stage		776825	1					
ANR	776878	Argument	stage		776825	0					
ANR	776879	Identifier	stage		776825	0					
ANR	776880	CompoundStatement		9:34:323:323	776825	1					
ANR	776881	ReturnStatement	return ;	121:8:3579:3585	776825	0	True				
ANR	776882	ExpressionStatement	m_stages . append ( stage )	123:4:3597:3619	776825	3	True				
ANR	776883	CallExpression	m_stages . append ( stage )		776825	0					
ANR	776884	Callee	m_stages . append		776825	0					
ANR	776885	MemberAccess	m_stages . append		776825	0					
ANR	776886	Identifier	m_stages		776825	0					
ANR	776887	Identifier	append		776825	1					
ANR	776888	ArgumentList	stage		776825	1					
ANR	776889	Argument	stage		776825	0					
ANR	776890	Identifier	stage		776825	0					
ANR	776891	ExpressionStatement	setStage ( m_stages . count ( ) )	124:4:3625:3651	776825	4	True				
ANR	776892	CallExpression	setStage ( m_stages . count ( ) )		776825	0					
ANR	776893	Callee	setStage		776825	0					
ANR	776894	Identifier	setStage		776825	0					
ANR	776895	ArgumentList	m_stages . count ( )		776825	1					
ANR	776896	Argument	m_stages . count ( )		776825	0					
ANR	776897	CallExpression	m_stages . count ( )		776825	0					
ANR	776898	Callee	m_stages . count		776825	0					
ANR	776899	MemberAccess	m_stages . count		776825	0					
ANR	776900	Identifier	m_stages		776825	0					
ANR	776901	Identifier	count		776825	1					
ANR	776902	ArgumentList			776825	1					
ANR	776903	ReturnType	void		776825	1					
ANR	776904	Identifier	SplashApp :: setStage		776825	2					
ANR	776905	ParameterList	const QString & stage		776825	3					
ANR	776906	Parameter	const QString & stage	111:25:3223:3242	776825	0	True				
ANR	776907	ParameterType	const QString &		776825	0					
ANR	776908	Identifier	stage		776825	1					
ANR	776909	CFGEntryNode	ENTRY		776825		True				
ANR	776910	CFGExitNode	EXIT		776825		True				
ANR	776911	Symbol	QLatin1String		776825						
ANR	776912	Symbol	m_stages . contains		776825						
ANR	776913	Symbol	stage		776825						
ANR	776914	Symbol	QDateTime :: currentDateTime		776825						
ANR	776915	Symbol	m_stages		776825						
ANR	776916	Symbol	m_startTime		776825						
ANR	776917	Symbol	m_stages . count		776825						
ANR	776918	Function	SplashApp :: setStage	127:0:3656:3868							
ANR	776919	FunctionDef	SplashApp :: setStage (int stage)		776918	0					
ANR	776920	CompoundStatement		128:0:3692:3868	776918	0					
ANR	776921	IfStatement	if ( m_stage == 6 )		776918	0					
ANR	776922	Condition	m_stage == 6	129:8:3702:3713	776918	0	True				
ANR	776923	EqualityExpression	m_stage == 6		776918	0		==			
ANR	776924	Identifier	m_stage		776918	0					
ANR	776925	PrimaryExpression	6		776918	1					
ANR	776926	CompoundStatement		2:22:23:23	776918	1					
ANR	776927	ExpressionStatement	QGuiApplication :: exit ( EXIT_SUCCESS )	130:8:3726:3761	776918	0	True				
ANR	776928	CallExpression	QGuiApplication :: exit ( EXIT_SUCCESS )		776918	0					
ANR	776929	Callee	QGuiApplication :: exit		776918	0					
ANR	776930	Identifier	QGuiApplication :: exit		776918	0					
ANR	776931	ArgumentList	EXIT_SUCCESS		776918	1					
ANR	776932	Argument	EXIT_SUCCESS		776918	0					
ANR	776933	Identifier	EXIT_SUCCESS		776918	0					
ANR	776934	ExpressionStatement	m_stage = stage	133:4:3774:3789	776918	1	True				
ANR	776935	AssignmentExpression	m_stage = stage		776918	0		=			
ANR	776936	Identifier	m_stage		776918	0					
ANR	776937	Identifier	stage		776918	1					
ANR	776938	Statement	foreach	134:4:3795:3801	776918	2	True				
ANR	776939	Statement	(	134:12:3803:3803	776918	3	True				
ANR	776940	Statement	SplashWindow	134:13:3804:3815	776918	4	True				
ANR	776941	Statement	*	134:26:3817:3817	776918	5	True				
ANR	776942	Statement	w	134:27:3818:3818	776918	6	True				
ANR	776943	Statement	","	134:28:3819:3819	776918	7	True				
ANR	776944	Statement	m_windows	134:30:3821:3829	776918	8	True				
ANR	776945	Statement	)	134:39:3830:3830	776918	9	True				
ANR	776946	CompoundStatement		7:41:139:139	776918	10					
ANR	776947	ExpressionStatement	w -> setStage ( stage )	135:8:3842:3860	776918	0	True				
ANR	776948	CallExpression	w -> setStage ( stage )		776918	0					
ANR	776949	Callee	w -> setStage		776918	0					
ANR	776950	PtrMemberAccess	w -> setStage		776918	0					
ANR	776951	Identifier	w		776918	0					
ANR	776952	Identifier	setStage		776918	1					
ANR	776953	ArgumentList	stage		776918	1					
ANR	776954	Argument	stage		776918	0					
ANR	776955	Identifier	stage		776918	0					
ANR	776956	ReturnType	void		776918	1					
ANR	776957	Identifier	SplashApp :: setStage		776918	2					
ANR	776958	ParameterList	int stage		776918	3					
ANR	776959	Parameter	int stage	127:25:3681:3689	776918	0	True				
ANR	776960	ParameterType	int		776918	0					
ANR	776961	Identifier	stage		776918	1					
ANR	776962	CFGEntryNode	ENTRY		776918		True				
ANR	776963	CFGExitNode	EXIT		776918		True				
ANR	776964	Symbol	m_stage		776918						
ANR	776965	Symbol	stage		776918						
ANR	776966	Symbol	EXIT_SUCCESS		776918						
ANR	776967	Symbol	w		776918						
ANR	776968	Function	SplashApp :: adoptScreen	139:0:3871:4293							
ANR	776969	FunctionDef	SplashApp :: adoptScreen (QScreen * screen)		776968	0					
ANR	776970	CompoundStatement		140:0:3916:4293	776968	0					
ANR	776971	IdentifierDeclStatement	"SplashWindow * w = new SplashWindow ( m_testing , m_window ) ;"	141:4:3922:3977	776968	0	True				
ANR	776972	IdentifierDecl	"* w = new SplashWindow ( m_testing , m_window )"		776968	0					
ANR	776973	IdentifierDeclType	SplashWindow *		776968	0					
ANR	776974	Identifier	w		776968	1					
ANR	776975	AssignmentExpression	"* w = new SplashWindow ( m_testing , m_window )"		776968	2		=			
ANR	776976	Identifier	w		776968	0					
ANR	776977	Expression	"m_testing , m_window"		776968	1					
ANR	776978	Identifier	m_testing		776968	0					
ANR	776979	Identifier	m_window		776968	1					
ANR	776980	ExpressionStatement	w -> setGeometry ( screen -> geometry ( ) )	142:4:3983:4017	776968	1	True				
ANR	776981	CallExpression	w -> setGeometry ( screen -> geometry ( ) )		776968	0					
ANR	776982	Callee	w -> setGeometry		776968	0					
ANR	776983	PtrMemberAccess	w -> setGeometry		776968	0					
ANR	776984	Identifier	w		776968	0					
ANR	776985	Identifier	setGeometry		776968	1					
ANR	776986	ArgumentList	screen -> geometry ( )		776968	1					
ANR	776987	Argument	screen -> geometry ( )		776968	0					
ANR	776988	CallExpression	screen -> geometry ( )		776968	0					
ANR	776989	Callee	screen -> geometry		776968	0					
ANR	776990	PtrMemberAccess	screen -> geometry		776968	0					
ANR	776991	Identifier	screen		776968	0					
ANR	776992	Identifier	geometry		776968	1					
ANR	776993	ArgumentList			776968	1					
ANR	776994	ExpressionStatement	w -> setStage ( m_stage )	143:4:4023:4043	776968	2	True				
ANR	776995	CallExpression	w -> setStage ( m_stage )		776968	0					
ANR	776996	Callee	w -> setStage		776968	0					
ANR	776997	PtrMemberAccess	w -> setStage		776968	0					
ANR	776998	Identifier	w		776968	0					
ANR	776999	Identifier	setStage		776968	1					
ANR	777000	ArgumentList	m_stage		776968	1					
ANR	777001	Argument	m_stage		776968	0					
ANR	777002	Identifier	m_stage		776968	0					
ANR	777003	ExpressionStatement	w -> setVisible ( true )	144:4:4049:4068	776968	3	True				
ANR	777004	CallExpression	w -> setVisible ( true )		776968	0					
ANR	777005	Callee	w -> setVisible		776968	0					
ANR	777006	PtrMemberAccess	w -> setVisible		776968	0					
ANR	777007	Identifier	w		776968	0					
ANR	777008	Identifier	setVisible		776968	1					
ANR	777009	ArgumentList	true		776968	1					
ANR	777010	Argument	true		776968	0					
ANR	777011	Identifier	true		776968	0					
ANR	777012	ExpressionStatement	m_windows << w	145:4:4074:4088	776968	4	True				
ANR	777013	ShiftExpression	m_windows << w		776968	0		<<			
ANR	777014	Identifier	m_windows		776968	0					
ANR	777015	Identifier	w		776968	1					
ANR	777016	ExpressionStatement	"connect ( screen , & QScreen :: geometryChanged , w , & SplashWindow :: setGeometry )"	147:4:4095:4168	776968	5	True				
ANR	777017	CallExpression	"connect ( screen , & QScreen :: geometryChanged , w , & SplashWindow :: setGeometry )"		776968	0					
ANR	777018	Callee	connect		776968	0					
ANR	777019	Identifier	connect		776968	0					
ANR	777020	ArgumentList	screen		776968	1					
ANR	777021	Argument	screen		776968	0					
ANR	777022	Identifier	screen		776968	0					
ANR	777023	Argument	& QScreen :: geometryChanged		776968	1					
ANR	777024	UnaryOperationExpression	& QScreen :: geometryChanged		776968	0					
ANR	777025	UnaryOperator	&		776968	0					
ANR	777026	Identifier	QScreen :: geometryChanged		776968	1					
ANR	777027	Argument	w		776968	2					
ANR	777028	Identifier	w		776968	0					
ANR	777029	Argument	& SplashWindow :: setGeometry		776968	3					
ANR	777030	UnaryOperationExpression	& SplashWindow :: setGeometry		776968	0					
ANR	777031	UnaryOperator	&		776968	0					
ANR	777032	Identifier	SplashWindow :: setGeometry		776968	1					
ANR	777033	Statement	connect	148:4:4174:4180	776968	6	True				
ANR	777034	Statement	(	148:11:4181:4181	776968	7	True				
ANR	777035	Statement	screen	148:12:4182:4187	776968	8	True				
ANR	777036	Statement	","	148:18:4188:4188	776968	9	True				
ANR	777037	Statement	&	148:20:4190:4190	776968	10	True				
ANR	777038	Statement	QObject	148:21:4191:4197	776968	11	True				
ANR	777039	Statement	::	148:28:4198:4199	776968	12	True				
ANR	777040	Statement	destroyed	148:30:4200:4208	776968	13	True				
ANR	777041	Statement	","	148:39:4209:4209	776968	14	True				
ANR	777042	Statement	w	148:41:4211:4211	776968	15	True				
ANR	777043	Statement	","	148:42:4212:4212	776968	16	True				
ANR	777044	Statement	[	148:44:4214:4214	776968	17	True				
ANR	777045	Statement	this	148:45:4215:4218	776968	18	True				
ANR	777046	Statement	","	148:49:4219:4219	776968	19	True				
ANR	777047	Statement	w	148:51:4221:4221	776968	20	True				
ANR	777048	Statement	]	148:52:4222:4222	776968	21	True				
ANR	777049	Statement	(	148:53:4223:4223	776968	22	True				
ANR	777050	Statement	)	148:54:4224:4224	776968	23	True				
ANR	777051	CompoundStatement		9:55:308:308	776968	24					
ANR	777052	ExpressionStatement	m_windows . removeAll ( w )	149:8:4235:4257	776968	0	True				
ANR	777053	CallExpression	m_windows . removeAll ( w )		776968	0					
ANR	777054	Callee	m_windows . removeAll		776968	0					
ANR	777055	MemberAccess	m_windows . removeAll		776968	0					
ANR	777056	Identifier	m_windows		776968	0					
ANR	777057	Identifier	removeAll		776968	1					
ANR	777058	ArgumentList	w		776968	1					
ANR	777059	Argument	w		776968	0					
ANR	777060	Identifier	w		776968	0					
ANR	777061	ExpressionStatement	w -> deleteLater ( )	150:8:4267:4283	776968	1	True				
ANR	777062	CallExpression	w -> deleteLater ( )		776968	0					
ANR	777063	Callee	w -> deleteLater		776968	0					
ANR	777064	PtrMemberAccess	w -> deleteLater		776968	0					
ANR	777065	Identifier	w		776968	0					
ANR	777066	Identifier	deleteLater		776968	1					
ANR	777067	ArgumentList			776968	1					
ANR	777068	Statement	)	151:5:4290:4290	776968	25	True				
ANR	777069	ExpressionStatement		151:6:4291:4291	776968	26	True				
ANR	777070	ReturnType	void		776968	1					
ANR	777071	Identifier	SplashApp :: adoptScreen		776968	2					
ANR	777072	ParameterList	QScreen * screen		776968	3					
ANR	777073	Parameter	QScreen * screen	139:28:3899:3913	776968	0	True				
ANR	777074	ParameterType	QScreen *		776968	0					
ANR	777075	Identifier	screen		776968	1					
ANR	777076	CFGEntryNode	ENTRY		776968		True				
ANR	777077	CFGExitNode	EXIT		776968		True				
ANR	777078	Symbol	m_stage		776968						
ANR	777079	Symbol	m_windows		776968						
ANR	777080	Symbol	m_testing		776968						
ANR	777081	Symbol	w		776968						
ANR	777082	Symbol	true		776968						
ANR	777083	Symbol	screen		776968						
ANR	777084	Symbol	m_window		776968						
ANR	777085	Symbol	& QScreen :: geometryChanged		776968						
ANR	777086	Symbol	* screen		776968						
ANR	777087	Symbol	screen -> geometry		776968						
ANR	777088	Symbol	& SplashWindow :: setGeometry		776968						
ANR	777089	Function	SplashApp :: setupWaylandIntegration	154:0:4296:4921							
ANR	777090	FunctionDef	SplashApp :: setupWaylandIntegration ()		777089	0					
ANR	777091	CompoundStatement		155:0:4338:4921	777089	0					
ANR	777092	IfStatement	if ( ! KWindowSystem :: isPlatformWayland ( ) )		777089	0					
ANR	777093	Condition	! KWindowSystem :: isPlatformWayland ( )	156:8:4348:4382	777089	0	True				
ANR	777094	UnaryOperationExpression	! KWindowSystem :: isPlatformWayland ( )		777089	0					
ANR	777095	UnaryOperator	!		777089	0					
ANR	777096	CallExpression	KWindowSystem :: isPlatformWayland ( )		777089	1					
ANR	777097	Callee	KWindowSystem :: isPlatformWayland		777089	0					
ANR	777098	Identifier	KWindowSystem :: isPlatformWayland		777089	0					
ANR	777099	ArgumentList			777089	1					
ANR	777100	CompoundStatement		2:45:46:46	777089	1					
ANR	777101	ReturnStatement	return ;	157:8:4395:4401	777089	0	True				
ANR	777102	Statement	using	159:4:4413:4417	777089	1	True				
ANR	777103	Statement	namespace	159:10:4419:4427	777089	2	True				
ANR	777104	ExpressionStatement	KWayland :: Client	159:20:4429:4445	777089	3	True				
ANR	777105	Identifier	KWayland :: Client		777089	0					
ANR	777106	IdentifierDeclStatement	ConnectionThread * connection = ConnectionThread :: fromApplication ( this ) ;	160:4:4451:4521	777089	4	True				
ANR	777107	IdentifierDecl	* connection = ConnectionThread :: fromApplication ( this )		777089	0					
ANR	777108	IdentifierDeclType	ConnectionThread *		777089	0					
ANR	777109	Identifier	connection		777089	1					
ANR	777110	AssignmentExpression	* connection = ConnectionThread :: fromApplication ( this )		777089	2		=			
ANR	777111	Identifier	connection		777089	0					
ANR	777112	CallExpression	ConnectionThread :: fromApplication ( this )		777089	1					
ANR	777113	Callee	ConnectionThread :: fromApplication		777089	0					
ANR	777114	Identifier	ConnectionThread :: fromApplication		777089	0					
ANR	777115	ArgumentList	this		777089	1					
ANR	777116	Argument	this		777089	0					
ANR	777117	Identifier	this		777089	0					
ANR	777118	IfStatement	if ( ! connection )		777089	5					
ANR	777119	Condition	! connection	161:8:4531:4541	777089	0	True				
ANR	777120	UnaryOperationExpression	! connection		777089	0					
ANR	777121	UnaryOperator	!		777089	0					
ANR	777122	Identifier	connection		777089	1					
ANR	777123	CompoundStatement		7:21:205:205	777089	1					
ANR	777124	ReturnStatement	return ;	162:8:4554:4560	777089	0	True				
ANR	777125	IdentifierDeclStatement	Registry * registry = new Registry ( this ) ;	164:4:4572:4611	777089	6	True				
ANR	777126	IdentifierDecl	* registry = new Registry ( this )		777089	0					
ANR	777127	IdentifierDeclType	Registry *		777089	0					
ANR	777128	Identifier	registry		777089	1					
ANR	777129	AssignmentExpression	* registry = new Registry ( this )		777089	2		=			
ANR	777130	Identifier	this		777089	0					
ANR	777131	Identifier	this		777089	1					
ANR	777132	ExpressionStatement	registry -> create ( connection )	165:4:4617:4645	777089	7	True				
ANR	777133	CallExpression	registry -> create ( connection )		777089	0					
ANR	777134	Callee	registry -> create		777089	0					
ANR	777135	PtrMemberAccess	registry -> create		777089	0					
ANR	777136	Identifier	registry		777089	0					
ANR	777137	Identifier	create		777089	1					
ANR	777138	ArgumentList	connection		777089	1					
ANR	777139	Argument	connection		777089	0					
ANR	777140	Identifier	connection		777089	0					
ANR	777141	Statement	connect	166:4:4651:4657	777089	8	True				
ANR	777142	Statement	(	166:11:4658:4658	777089	9	True				
ANR	777143	Statement	registry	166:12:4659:4666	777089	10	True				
ANR	777144	Statement	","	166:20:4667:4667	777089	11	True				
ANR	777145	Statement	&	166:22:4669:4669	777089	12	True				
ANR	777146	Statement	Registry	166:23:4670:4677	777089	13	True				
ANR	777147	Statement	::	166:31:4678:4679	777089	14	True				
ANR	777148	Statement	plasmaShellAnnounced	166:33:4680:4699	777089	15	True				
ANR	777149	Statement	","	166:53:4700:4700	777089	16	True				
ANR	777150	Statement	this	166:55:4702:4705	777089	17	True				
ANR	777151	Statement	","	166:59:4706:4706	777089	18	True				
ANR	777152	Statement	[	167:8:4716:4716	777089	19	True				
ANR	777153	Statement	this	167:9:4717:4720	777089	20	True				
ANR	777154	Statement	","	167:13:4721:4721	777089	21	True				
ANR	777155	Statement	registry	167:15:4723:4730	777089	22	True				
ANR	777156	Statement	]	167:23:4731:4731	777089	23	True				
ANR	777157	Statement	(	167:25:4733:4733	777089	24	True				
ANR	777158	Statement	quint32	167:26:4734:4740	777089	25	True				
ANR	777159	Statement	name	167:34:4742:4745	777089	26	True				
ANR	777160	Statement	","	167:38:4746:4746	777089	27	True				
ANR	777161	Statement	quint32	167:40:4748:4754	777089	28	True				
ANR	777162	Statement	version	167:48:4756:4762	777089	29	True				
ANR	777163	Statement	)	167:55:4763:4763	777089	30	True				
ANR	777164	CompoundStatement		13:57:426:426	777089	31					
ANR	777165	ExpressionStatement	"m_waylandPlasmaShell = registry -> createPlasmaShell ( name , version , this )"	168:12:4779:4850	777089	0	True				
ANR	777166	AssignmentExpression	"m_waylandPlasmaShell = registry -> createPlasmaShell ( name , version , this )"		777089	0		=			
ANR	777167	Identifier	m_waylandPlasmaShell		777089	0					
ANR	777168	CallExpression	"registry -> createPlasmaShell ( name , version , this )"		777089	1					
ANR	777169	Callee	registry -> createPlasmaShell		777089	0					
ANR	777170	PtrMemberAccess	registry -> createPlasmaShell		777089	0					
ANR	777171	Identifier	registry		777089	0					
ANR	777172	Identifier	createPlasmaShell		777089	1					
ANR	777173	ArgumentList	name		777089	1					
ANR	777174	Argument	name		777089	0					
ANR	777175	Identifier	name		777089	0					
ANR	777176	Argument	version		777089	1					
ANR	777177	Identifier	version		777089	0					
ANR	777178	Argument	this		777089	2					
ANR	777179	Identifier	this		777089	0					
ANR	777180	Statement	)	170:4:4866:4866	777089	32	True				
ANR	777181	ExpressionStatement		170:5:4867:4867	777089	33	True				
ANR	777182	ExpressionStatement	registry -> setup ( )	171:4:4873:4890	777089	34	True				
ANR	777183	CallExpression	registry -> setup ( )		777089	0					
ANR	777184	Callee	registry -> setup		777089	0					
ANR	777185	PtrMemberAccess	registry -> setup		777089	0					
ANR	777186	Identifier	registry		777089	0					
ANR	777187	Identifier	setup		777089	1					
ANR	777188	ArgumentList			777089	1					
ANR	777189	ExpressionStatement	connection -> roundtrip ( )	172:4:4896:4919	777089	35	True				
ANR	777190	CallExpression	connection -> roundtrip ( )		777089	0					
ANR	777191	Callee	connection -> roundtrip		777089	0					
ANR	777192	PtrMemberAccess	connection -> roundtrip		777089	0					
ANR	777193	Identifier	connection		777089	0					
ANR	777194	Identifier	roundtrip		777089	1					
ANR	777195	ArgumentList			777089	1					
ANR	777196	ReturnType	void		777089	1					
ANR	777197	Identifier	SplashApp :: setupWaylandIntegration		777089	2					
ANR	777198	ParameterList			777089	3					
ANR	777199	CFGEntryNode	ENTRY		777089		True				
ANR	777200	CFGExitNode	EXIT		777089		True				
ANR	777201	Symbol	registry		777089						
ANR	777202	Symbol	m_waylandPlasmaShell		777089						
ANR	777203	Symbol	* registry		777089						
ANR	777204	Symbol	KWindowSystem :: isPlatformWayland		777089						
ANR	777205	Symbol	this		777089						
ANR	777206	Symbol	ConnectionThread :: fromApplication		777089						
ANR	777207	Symbol	registry -> createPlasmaShell		777089						
ANR	777208	Symbol	name		777089						
ANR	777209	Symbol	connection		777089						
ANR	777210	Symbol	version		777089						
