command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	590055	File	data/converged/CVE-2018-6791_plasma-workspace/process.cpp								
ANR	590056	Function	Process :: Process	29:0:1195:1238							
ANR	590057	FunctionDef	Process :: Process ()		590056	0					
ANR	590058	CompoundStatement		31:0:1236:1238	590056	0					
ANR	590059	Identifier	Process :: Process		590056	1					
ANR	590060	ParameterList			590056	2					
ANR	590061	CFGEntryNode	ENTRY		590056		True				
ANR	590062	CFGExitNode	EXIT		590056		True				
ANR	590063	Function	Process :: EnableDebugPrivilege	36:0:1360:2903							
ANR	590064	FunctionDef	Process :: EnableDebugPrivilege ()		590063	0					
ANR	590065	CompoundStatement		37:0:1397:2903	590063	0					
ANR	590066	ExpressionStatement	"kDebug ( ) << ""Enabling debug privilege"""	38:4:1403:1441	590063	0	True				
ANR	590067	ShiftExpression	"kDebug ( ) << ""Enabling debug privilege"""		590063	0		<<			
ANR	590068	CallExpression	kDebug ( )		590063	0					
ANR	590069	Callee	kDebug		590063	0					
ANR	590070	Identifier	kDebug		590063	0					
ANR	590071	ArgumentList			590063	1					
ANR	590072	PrimaryExpression	"""Enabling debug privilege"""		590063	1					
ANR	590073	IdentifierDeclStatement	HANDLE hToken = NULL ;	39:4:1447:1467	590063	1	True				
ANR	590074	IdentifierDecl	hToken = NULL		590063	0					
ANR	590075	IdentifierDeclType	HANDLE		590063	0					
ANR	590076	Identifier	hToken		590063	1					
ANR	590077	AssignmentExpression	hToken = NULL		590063	2		=			
ANR	590078	Identifier	NULL		590063	0					
ANR	590079	Identifier	NULL		590063	1					
ANR	590080	IfStatement	"if ( ! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken ) )"		590063	2					
ANR	590081	Condition	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken )"	41:8:1478:1568	590063	0	True				
ANR	590082	UnaryOperationExpression	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken )"		590063	0					
ANR	590083	UnaryOperator	!		590063	0					
ANR	590084	CallExpression	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken )"		590063	1					
ANR	590085	Callee	OpenThreadToken		590063	0					
ANR	590086	Identifier	OpenThreadToken		590063	0					
ANR	590087	ArgumentList	GetCurrentThread ( )		590063	1					
ANR	590088	Argument	GetCurrentThread ( )		590063	0					
ANR	590089	CallExpression	GetCurrentThread ( )		590063	0					
ANR	590090	Callee	GetCurrentThread		590063	0					
ANR	590091	Identifier	GetCurrentThread		590063	0					
ANR	590092	ArgumentList			590063	1					
ANR	590093	Argument	TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY		590063	1					
ANR	590094	InclusiveOrExpression	TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY		590063	0		|			
ANR	590095	Identifier	TOKEN_ADJUST_PRIVILEGES		590063	0					
ANR	590096	Identifier	TOKEN_QUERY		590063	1					
ANR	590097	Argument	FALSE		590063	2					
ANR	590098	Identifier	FALSE		590063	0					
ANR	590099	Argument	& hToken		590063	3					
ANR	590100	UnaryOperationExpression	& hToken		590063	0					
ANR	590101	UnaryOperator	&		590063	0					
ANR	590102	Identifier	hToken		590063	1					
ANR	590103	CompoundStatement		6:4:177:177	590063	1					
ANR	590104	IfStatement	if ( GetLastError ( ) == ERROR_NO_TOKEN )		590063	0					
ANR	590105	Condition	GetLastError ( ) == ERROR_NO_TOKEN	43:12:1589:1620	590063	0	True				
ANR	590106	EqualityExpression	GetLastError ( ) == ERROR_NO_TOKEN		590063	0		==			
ANR	590107	CallExpression	GetLastError ( )		590063	0					
ANR	590108	Callee	GetLastError		590063	0					
ANR	590109	Identifier	GetLastError		590063	0					
ANR	590110	ArgumentList			590063	1					
ANR	590111	Identifier	ERROR_NO_TOKEN		590063	1					
ANR	590112	CompoundStatement		8:8:233:233	590063	1					
ANR	590113	IfStatement	if ( ! ImpersonateSelf ( SecurityImpersonation ) )		590063	0					
ANR	590114	Condition	! ImpersonateSelf ( SecurityImpersonation )	45:16:1649:1687	590063	0	True				
ANR	590115	UnaryOperationExpression	! ImpersonateSelf ( SecurityImpersonation )		590063	0					
ANR	590116	UnaryOperator	!		590063	0					
ANR	590117	CallExpression	ImpersonateSelf ( SecurityImpersonation )		590063	1					
ANR	590118	Callee	ImpersonateSelf		590063	0					
ANR	590119	Identifier	ImpersonateSelf		590063	0					
ANR	590120	ArgumentList	SecurityImpersonation		590063	1					
ANR	590121	Argument	SecurityImpersonation		590063	0					
ANR	590122	Identifier	SecurityImpersonation		590063	0					
ANR	590123	CompoundStatement		10:12:304:304	590063	1					
ANR	590124	ExpressionStatement	"kError ( ) << ""ImpersonateSelf() failed: "" << GetLastError ( )"	47:16:1720:1778	590063	0	True				
ANR	590125	ShiftExpression	"kError ( ) << ""ImpersonateSelf() failed: "" << GetLastError ( )"		590063	0		<<			
ANR	590126	CallExpression	kError ( )		590063	0					
ANR	590127	Callee	kError		590063	0					
ANR	590128	Identifier	kError		590063	0					
ANR	590129	ArgumentList			590063	1					
ANR	590130	ShiftExpression	"""ImpersonateSelf() failed: "" << GetLastError ( )"		590063	1		<<			
ANR	590131	PrimaryExpression	"""ImpersonateSelf() failed: """		590063	0					
ANR	590132	CallExpression	GetLastError ( )		590063	1					
ANR	590133	Callee	GetLastError		590063	0					
ANR	590134	Identifier	GetLastError		590063	0					
ANR	590135	ArgumentList			590063	1					
ANR	590136	ReturnStatement	return FALSE ;	48:16:1796:1808	590063	1	True				
ANR	590137	Identifier	FALSE		590063	0					
ANR	590138	IfStatement	"if ( ! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken ) )"		590063	1					
ANR	590139	Condition	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken )"	50:16:1840:1930	590063	0	True				
ANR	590140	UnaryOperationExpression	"! OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken )"		590063	0					
ANR	590141	UnaryOperator	!		590063	0					
ANR	590142	CallExpression	"OpenThreadToken ( GetCurrentThread ( ) , TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY , FALSE , & hToken )"		590063	1					
ANR	590143	Callee	OpenThreadToken		590063	0					
ANR	590144	Identifier	OpenThreadToken		590063	0					
ANR	590145	ArgumentList	GetCurrentThread ( )		590063	1					
ANR	590146	Argument	GetCurrentThread ( )		590063	0					
ANR	590147	CallExpression	GetCurrentThread ( )		590063	0					
ANR	590148	Callee	GetCurrentThread		590063	0					
ANR	590149	Identifier	GetCurrentThread		590063	0					
ANR	590150	ArgumentList			590063	1					
ANR	590151	Argument	TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY		590063	1					
ANR	590152	InclusiveOrExpression	TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY		590063	0		|			
ANR	590153	Identifier	TOKEN_ADJUST_PRIVILEGES		590063	0					
ANR	590154	Identifier	TOKEN_QUERY		590063	1					
ANR	590155	Argument	FALSE		590063	2					
ANR	590156	Identifier	FALSE		590063	0					
ANR	590157	Argument	& hToken		590063	3					
ANR	590158	UnaryOperationExpression	& hToken		590063	0					
ANR	590159	UnaryOperator	&		590063	0					
ANR	590160	Identifier	hToken		590063	1					
ANR	590161	CompoundStatement		15:12:547:547	590063	1					
ANR	590162	ExpressionStatement	"kError ( ) << ""OpenThreadToken() #2 failed: "" << GetLastError ( )"	52:16:1963:2024	590063	0	True				
ANR	590163	ShiftExpression	"kError ( ) << ""OpenThreadToken() #2 failed: "" << GetLastError ( )"		590063	0		<<			
ANR	590164	CallExpression	kError ( )		590063	0					
ANR	590165	Callee	kError		590063	0					
ANR	590166	Identifier	kError		590063	0					
ANR	590167	ArgumentList			590063	1					
ANR	590168	ShiftExpression	"""OpenThreadToken() #2 failed: "" << GetLastError ( )"		590063	1		<<			
ANR	590169	PrimaryExpression	"""OpenThreadToken() #2 failed: """		590063	0					
ANR	590170	CallExpression	GetLastError ( )		590063	1					
ANR	590171	Callee	GetLastError		590063	0					
ANR	590172	Identifier	GetLastError		590063	0					
ANR	590173	ArgumentList			590063	1					
ANR	590174	ReturnStatement	return FALSE ;	53:16:2042:2054	590063	1	True				
ANR	590175	Identifier	FALSE		590063	0					
ANR	590176	ElseStatement	else		590063	0					
ANR	590177	CompoundStatement		21:8:703:703	590063	0					
ANR	590178	ExpressionStatement	"kError ( ) << ""OpenThreadToken() #1 failed: "" << GetLastError ( )"	58:12:2115:2176	590063	0	True				
ANR	590179	ShiftExpression	"kError ( ) << ""OpenThreadToken() #1 failed: "" << GetLastError ( )"		590063	0		<<			
ANR	590180	CallExpression	kError ( )		590063	0					
ANR	590181	Callee	kError		590063	0					
ANR	590182	Identifier	kError		590063	0					
ANR	590183	ArgumentList			590063	1					
ANR	590184	ShiftExpression	"""OpenThreadToken() #1 failed: "" << GetLastError ( )"		590063	1		<<			
ANR	590185	PrimaryExpression	"""OpenThreadToken() #1 failed: """		590063	0					
ANR	590186	CallExpression	GetLastError ( )		590063	1					
ANR	590187	Callee	GetLastError		590063	0					
ANR	590188	Identifier	GetLastError		590063	0					
ANR	590189	ArgumentList			590063	1					
ANR	590190	ReturnStatement	return FALSE ;	59:12:2190:2202	590063	1	True				
ANR	590191	Identifier	FALSE		590063	0					
ANR	590192	IdentifierDeclStatement	LUID luid ;	63:4:2225:2234	590063	3	True				
ANR	590193	IdentifierDecl	luid		590063	0					
ANR	590194	IdentifierDeclType	LUID		590063	0					
ANR	590195	Identifier	luid		590063	1					
ANR	590196	IfStatement	"if ( ! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luid ) )"		590063	4					
ANR	590197	Condition	"! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luid )"	64:8:2244:2292	590063	0	True				
ANR	590198	UnaryOperationExpression	"! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luid )"		590063	0					
ANR	590199	UnaryOperator	!		590063	0					
ANR	590200	CallExpression	"LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luid )"		590063	1					
ANR	590201	Callee	LookupPrivilegeValue		590063	0					
ANR	590202	Identifier	LookupPrivilegeValue		590063	0					
ANR	590203	ArgumentList	NULL		590063	1					
ANR	590204	Argument	NULL		590063	0					
ANR	590205	Identifier	NULL		590063	0					
ANR	590206	Argument	SE_DEBUG_NAME		590063	1					
ANR	590207	Identifier	SE_DEBUG_NAME		590063	0					
ANR	590208	Argument	& luid		590063	2					
ANR	590209	UnaryOperationExpression	& luid		590063	0					
ANR	590210	UnaryOperator	&		590063	0					
ANR	590211	Identifier	luid		590063	1					
ANR	590212	CompoundStatement		29:4:901:901	590063	1					
ANR	590213	ExpressionStatement	assert ( false )	66:8:2309:2322	590063	0	True				
ANR	590214	CallExpression	assert ( false )		590063	0					
ANR	590215	Callee	assert		590063	0					
ANR	590216	Identifier	assert		590063	0					
ANR	590217	ArgumentList	false		590063	1					
ANR	590218	Argument	false		590063	0					
ANR	590219	Identifier	false		590063	0					
ANR	590220	ExpressionStatement	"kError ( ) << ""Cannot lookup privilege: "" << GetLastError ( )"	67:8:2332:2389	590063	1	True				
ANR	590221	ShiftExpression	"kError ( ) << ""Cannot lookup privilege: "" << GetLastError ( )"		590063	0		<<			
ANR	590222	CallExpression	kError ( )		590063	0					
ANR	590223	Callee	kError		590063	0					
ANR	590224	Identifier	kError		590063	0					
ANR	590225	ArgumentList			590063	1					
ANR	590226	ShiftExpression	"""Cannot lookup privilege: "" << GetLastError ( )"		590063	1		<<			
ANR	590227	PrimaryExpression	"""Cannot lookup privilege: """		590063	0					
ANR	590228	CallExpression	GetLastError ( )		590063	1					
ANR	590229	Callee	GetLastError		590063	0					
ANR	590230	Identifier	GetLastError		590063	0					
ANR	590231	ArgumentList			590063	1					
ANR	590232	ExpressionStatement	SafeCloseHandle ( hToken )	68:8:2399:2422	590063	2	True				
ANR	590233	CallExpression	SafeCloseHandle ( hToken )		590063	0					
ANR	590234	Callee	SafeCloseHandle		590063	0					
ANR	590235	Identifier	SafeCloseHandle		590063	0					
ANR	590236	ArgumentList	hToken		590063	1					
ANR	590237	Argument	hToken		590063	0					
ANR	590238	Identifier	hToken		590063	0					
ANR	590239	ReturnStatement	return FALSE ;	69:8:2432:2444	590063	3	True				
ANR	590240	Identifier	FALSE		590063	0					
ANR	590241	IdentifierDeclStatement	TOKEN_PRIVILEGES tp ;	72:4:2457:2476	590063	5	True				
ANR	590242	IdentifierDecl	tp		590063	0					
ANR	590243	IdentifierDeclType	TOKEN_PRIVILEGES		590063	0					
ANR	590244	Identifier	tp		590063	1					
ANR	590245	ExpressionStatement	tp . PrivilegeCount = 1	73:4:2482:2503	590063	6	True				
ANR	590246	AssignmentExpression	tp . PrivilegeCount = 1		590063	0		=			
ANR	590247	MemberAccess	tp . PrivilegeCount		590063	0					
ANR	590248	Identifier	tp		590063	0					
ANR	590249	Identifier	PrivilegeCount		590063	1					
ANR	590250	PrimaryExpression	1		590063	1					
ANR	590251	ExpressionStatement	tp . Privileges [ 0 ] . Attributes = SE_PRIVILEGE_ENABLED	74:4:2509:2559	590063	7	True				
ANR	590252	AssignmentExpression	tp . Privileges [ 0 ] . Attributes = SE_PRIVILEGE_ENABLED		590063	0		=			
ANR	590253	MemberAccess	tp . Privileges [ 0 ] . Attributes		590063	0					
ANR	590254	ArrayIndexing	tp . Privileges [ 0 ]		590063	0					
ANR	590255	MemberAccess	tp . Privileges		590063	0					
ANR	590256	Identifier	tp		590063	0					
ANR	590257	Identifier	Privileges		590063	1					
ANR	590258	PrimaryExpression	0		590063	1					
ANR	590259	Identifier	Attributes		590063	1					
ANR	590260	Identifier	SE_PRIVILEGE_ENABLED		590063	1					
ANR	590261	ExpressionStatement	tp . Privileges [ 0 ] . Luid = luid	75:4:2565:2593	590063	8	True				
ANR	590262	AssignmentExpression	tp . Privileges [ 0 ] . Luid = luid		590063	0		=			
ANR	590263	MemberAccess	tp . Privileges [ 0 ] . Luid		590063	0					
ANR	590264	ArrayIndexing	tp . Privileges [ 0 ]		590063	0					
ANR	590265	MemberAccess	tp . Privileges		590063	0					
ANR	590266	Identifier	tp		590063	0					
ANR	590267	Identifier	Privileges		590063	1					
ANR	590268	PrimaryExpression	0		590063	1					
ANR	590269	Identifier	Luid		590063	1					
ANR	590270	Identifier	luid		590063	1					
ANR	590271	IfStatement	"if ( ! AdjustTokenPrivileges ( hToken , FALSE , & tp , NULL , ( PTOKEN_PRIVILEGES ) NULL , ( PDWORD ) NULL ) )"		590063	9					
ANR	590272	Condition	"! AdjustTokenPrivileges ( hToken , FALSE , & tp , NULL , ( PTOKEN_PRIVILEGES ) NULL , ( PDWORD ) NULL )"	77:8:2608:2696	590063	0	True				
ANR	590273	UnaryOperationExpression	"! AdjustTokenPrivileges ( hToken , FALSE , & tp , NULL , ( PTOKEN_PRIVILEGES ) NULL , ( PDWORD ) NULL )"		590063	0					
ANR	590274	UnaryOperator	!		590063	0					
ANR	590275	CallExpression	"AdjustTokenPrivileges ( hToken , FALSE , & tp , NULL , ( PTOKEN_PRIVILEGES ) NULL , ( PDWORD ) NULL )"		590063	1					
ANR	590276	Callee	AdjustTokenPrivileges		590063	0					
ANR	590277	Identifier	AdjustTokenPrivileges		590063	0					
ANR	590278	ArgumentList	hToken		590063	1					
ANR	590279	Argument	hToken		590063	0					
ANR	590280	Identifier	hToken		590063	0					
ANR	590281	Argument	FALSE		590063	1					
ANR	590282	Identifier	FALSE		590063	0					
ANR	590283	Argument	& tp		590063	2					
ANR	590284	UnaryOperationExpression	& tp		590063	0					
ANR	590285	UnaryOperator	&		590063	0					
ANR	590286	Identifier	tp		590063	1					
ANR	590287	Argument	NULL		590063	3					
ANR	590288	Identifier	NULL		590063	0					
ANR	590289	Argument	( PTOKEN_PRIVILEGES ) NULL		590063	4					
ANR	590290	CastExpression	( PTOKEN_PRIVILEGES ) NULL		590063	0					
ANR	590291	CastTarget	PTOKEN_PRIVILEGES		590063	0					
ANR	590292	Identifier	NULL		590063	1					
ANR	590293	Argument	( PDWORD ) NULL		590063	5					
ANR	590294	CastExpression	( PDWORD ) NULL		590063	0					
ANR	590295	CastTarget	PDWORD		590063	0					
ANR	590296	Identifier	NULL		590063	1					
ANR	590297	CompoundStatement		42:4:1305:1305	590063	1					
ANR	590298	ExpressionStatement	assert ( false )	79:8:2713:2726	590063	0	True				
ANR	590299	CallExpression	assert ( false )		590063	0					
ANR	590300	Callee	assert		590063	0					
ANR	590301	Identifier	assert		590063	0					
ANR	590302	ArgumentList	false		590063	1					
ANR	590303	Argument	false		590063	0					
ANR	590304	Identifier	false		590063	0					
ANR	590305	ExpressionStatement	"kError ( ) << ""Cannot adjust privilege: "" << GetLastError ( )"	80:8:2736:2793	590063	1	True				
ANR	590306	ShiftExpression	"kError ( ) << ""Cannot adjust privilege: "" << GetLastError ( )"		590063	0		<<			
ANR	590307	CallExpression	kError ( )		590063	0					
ANR	590308	Callee	kError		590063	0					
ANR	590309	Identifier	kError		590063	0					
ANR	590310	ArgumentList			590063	1					
ANR	590311	ShiftExpression	"""Cannot adjust privilege: "" << GetLastError ( )"		590063	1		<<			
ANR	590312	PrimaryExpression	"""Cannot adjust privilege: """		590063	0					
ANR	590313	CallExpression	GetLastError ( )		590063	1					
ANR	590314	Callee	GetLastError		590063	0					
ANR	590315	Identifier	GetLastError		590063	0					
ANR	590316	ArgumentList			590063	1					
ANR	590317	ExpressionStatement	SafeCloseHandle ( hToken )	81:8:2803:2826	590063	2	True				
ANR	590318	CallExpression	SafeCloseHandle ( hToken )		590063	0					
ANR	590319	Callee	SafeCloseHandle		590063	0					
ANR	590320	Identifier	SafeCloseHandle		590063	0					
ANR	590321	ArgumentList	hToken		590063	1					
ANR	590322	Argument	hToken		590063	0					
ANR	590323	Identifier	hToken		590063	0					
ANR	590324	ReturnStatement	return FALSE ;	82:8:2836:2848	590063	3	True				
ANR	590325	Identifier	FALSE		590063	0					
ANR	590326	ExpressionStatement	SafeCloseHandle ( hToken )	85:4:2861:2884	590063	10	True				
ANR	590327	CallExpression	SafeCloseHandle ( hToken )		590063	0					
ANR	590328	Callee	SafeCloseHandle		590063	0					
ANR	590329	Identifier	SafeCloseHandle		590063	0					
ANR	590330	ArgumentList	hToken		590063	1					
ANR	590331	Argument	hToken		590063	0					
ANR	590332	Identifier	hToken		590063	0					
ANR	590333	ReturnStatement	return TRUE ;	86:4:2890:2901	590063	11	True				
ANR	590334	Identifier	TRUE		590063	0					
ANR	590335	ReturnType	BOOL		590063	1					
ANR	590336	Identifier	Process :: EnableDebugPrivilege		590063	2					
ANR	590337	ParameterList			590063	3					
ANR	590338	CFGEntryNode	ENTRY		590063		True				
ANR	590339	CFGExitNode	EXIT		590063		True				
ANR	590340	Symbol	TOKEN_ADJUST_PRIVILEGES		590063						
ANR	590341	Symbol	LookupPrivilegeValue		590063						
ANR	590342	Symbol	* tp . Privileges		590063						
ANR	590343	Symbol	SE_DEBUG_NAME		590063						
ANR	590344	Symbol	TOKEN_QUERY		590063						
ANR	590345	Symbol	& luid		590063						
ANR	590346	Symbol	& hToken		590063						
ANR	590347	Symbol	ImpersonateSelf		590063						
ANR	590348	Symbol	tp . Privileges		590063						
ANR	590349	Symbol	luid		590063						
ANR	590350	Symbol	tp . Privileges [ 0 ] . Attributes		590063						
ANR	590351	Symbol	tp . PrivilegeCount		590063						
ANR	590352	Symbol	* tp		590063						
ANR	590353	Symbol	NULL		590063						
ANR	590354	Symbol	SE_PRIVILEGE_ENABLED		590063						
ANR	590355	Symbol	SecurityImpersonation		590063						
ANR	590356	Symbol	& tp		590063						
ANR	590357	Symbol	AdjustTokenPrivileges		590063						
ANR	590358	Symbol	GetCurrentThread		590063						
ANR	590359	Symbol	false		590063						
ANR	590360	Symbol	TRUE		590063						
ANR	590361	Symbol	tp . Privileges [ 0 ] . Luid		590063						
ANR	590362	Symbol	OpenThreadToken		590063						
ANR	590363	Symbol	GetLastError		590063						
ANR	590364	Symbol	hToken		590063						
ANR	590365	Symbol	FALSE		590063						
ANR	590366	Symbol	ERROR_NO_TOKEN		590063						
ANR	590367	Symbol	tp		590063						
ANR	590368	Function	Process :: GetInfo	89:0:2906:5958							
ANR	590369	FunctionDef	"Process :: GetInfo (const char * pid , const char * threadId)"		590368	0					
ANR	590370	CompoundStatement		90:0:2967:5958	590368	0					
ANR	590371	ExpressionStatement	"kDebug ( ) << ""Trying to get info about pid="" << pid"	91:4:2973:3023	590368	0	True				
ANR	590372	ShiftExpression	"kDebug ( ) << ""Trying to get info about pid="" << pid"		590368	0		<<			
ANR	590373	CallExpression	kDebug ( )		590368	0					
ANR	590374	Callee	kDebug		590368	0					
ANR	590375	Identifier	kDebug		590368	0					
ANR	590376	ArgumentList			590368	1					
ANR	590377	ShiftExpression	"""Trying to get info about pid="" << pid"		590368	1		<<			
ANR	590378	PrimaryExpression	"""Trying to get info about pid="""		590368	0					
ANR	590379	Identifier	pid		590368	1					
ANR	590380	IdentifierDeclStatement	DWORD dwPid = DWORD ( atoi ( pid ) ) ;	93:4:3030:3060	590368	1	True				
ANR	590381	IdentifierDecl	dwPid = DWORD ( atoi ( pid ) )		590368	0					
ANR	590382	IdentifierDeclType	DWORD		590368	0					
ANR	590383	Identifier	dwPid		590368	1					
ANR	590384	AssignmentExpression	dwPid = DWORD ( atoi ( pid ) )		590368	2		=			
ANR	590385	Identifier	dwPid		590368	0					
ANR	590386	CallExpression	DWORD ( atoi ( pid ) )		590368	1					
ANR	590387	Callee	DWORD		590368	0					
ANR	590388	Identifier	DWORD		590368	0					
ANR	590389	ArgumentList	atoi ( pid )		590368	1					
ANR	590390	Argument	atoi ( pid )		590368	0					
ANR	590391	CallExpression	atoi ( pid )		590368	0					
ANR	590392	Callee	atoi		590368	0					
ANR	590393	Identifier	atoi		590368	0					
ANR	590394	ArgumentList	pid		590368	1					
ANR	590395	Argument	pid		590368	0					
ANR	590396	Identifier	pid		590368	0					
ANR	590397	IdentifierDeclStatement	DWORD dwThread = DWORD ( atoi ( threadId ) ) ;	94:4:3066:3104	590368	2	True				
ANR	590398	IdentifierDecl	dwThread = DWORD ( atoi ( threadId ) )		590368	0					
ANR	590399	IdentifierDeclType	DWORD		590368	0					
ANR	590400	Identifier	dwThread		590368	1					
ANR	590401	AssignmentExpression	dwThread = DWORD ( atoi ( threadId ) )		590368	2		=			
ANR	590402	Identifier	dwThread		590368	0					
ANR	590403	CallExpression	DWORD ( atoi ( threadId ) )		590368	1					
ANR	590404	Callee	DWORD		590368	0					
ANR	590405	Identifier	DWORD		590368	0					
ANR	590406	ArgumentList	atoi ( threadId )		590368	1					
ANR	590407	Argument	atoi ( threadId )		590368	0					
ANR	590408	CallExpression	atoi ( threadId )		590368	0					
ANR	590409	Callee	atoi		590368	0					
ANR	590410	Identifier	atoi		590368	0					
ANR	590411	ArgumentList	threadId		590368	1					
ANR	590412	Argument	threadId		590368	0					
ANR	590413	Identifier	threadId		590368	0					
ANR	590414	IdentifierDeclStatement	HANDLE hProcess = NULL ;	97:4:3144:3166	590368	3	True				
ANR	590415	IdentifierDecl	hProcess = NULL		590368	0					
ANR	590416	IdentifierDeclType	HANDLE		590368	0					
ANR	590417	Identifier	hProcess		590368	1					
ANR	590418	AssignmentExpression	hProcess = NULL		590368	2		=			
ANR	590419	Identifier	NULL		590368	0					
ANR	590420	Identifier	NULL		590368	1					
ANR	590421	ExpressionStatement	"hProcess = OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dwPid )"	98:4:3172:3228	590368	4	True				
ANR	590422	AssignmentExpression	"hProcess = OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dwPid )"		590368	0		=			
ANR	590423	Identifier	hProcess		590368	0					
ANR	590424	CallExpression	"OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dwPid )"		590368	1					
ANR	590425	Callee	OpenProcess		590368	0					
ANR	590426	Identifier	OpenProcess		590368	0					
ANR	590427	ArgumentList	PROCESS_ALL_ACCESS		590368	1					
ANR	590428	Argument	PROCESS_ALL_ACCESS		590368	0					
ANR	590429	Identifier	PROCESS_ALL_ACCESS		590368	0					
ANR	590430	Argument	FALSE		590368	1					
ANR	590431	Identifier	FALSE		590368	0					
ANR	590432	Argument	dwPid		590368	2					
ANR	590433	Identifier	dwPid		590368	0					
ANR	590434	ExpressionStatement	assert ( hProcess )	99:4:3234:3250	590368	5	True				
ANR	590435	CallExpression	assert ( hProcess )		590368	0					
ANR	590436	Callee	assert		590368	0					
ANR	590437	Identifier	assert		590368	0					
ANR	590438	ArgumentList	hProcess		590368	1					
ANR	590439	Argument	hProcess		590368	0					
ANR	590440	Identifier	hProcess		590368	0					
ANR	590441	IfStatement	if ( hProcess == NULL )		590368	6					
ANR	590442	Condition	hProcess == NULL	100:8:3260:3275	590368	0	True				
ANR	590443	EqualityExpression	hProcess == NULL		590368	0		==			
ANR	590444	Identifier	hProcess		590368	0					
ANR	590445	Identifier	NULL		590368	1					
ANR	590446	CompoundStatement		12:4:314:314	590368	1					
ANR	590447	ExpressionStatement	"kError ( ) << ""Cannot open process "" << dwPid << "": "" << GetLastError ( )"	102:8:3292:3361	590368	0	True				
ANR	590448	ShiftExpression	"kError ( ) << ""Cannot open process "" << dwPid << "": "" << GetLastError ( )"		590368	0		<<			
ANR	590449	CallExpression	kError ( )		590368	0					
ANR	590450	Callee	kError		590368	0					
ANR	590451	Identifier	kError		590368	0					
ANR	590452	ArgumentList			590368	1					
ANR	590453	ShiftExpression	"""Cannot open process "" << dwPid << "": "" << GetLastError ( )"		590368	1		<<			
ANR	590454	PrimaryExpression	"""Cannot open process """		590368	0					
ANR	590455	ShiftExpression	"dwPid << "": "" << GetLastError ( )"		590368	1		<<			
ANR	590456	Identifier	dwPid		590368	0					
ANR	590457	ShiftExpression	""": "" << GetLastError ( )"		590368	1		<<			
ANR	590458	PrimaryExpression	""": """		590368	0					
ANR	590459	CallExpression	GetLastError ( )		590368	1					
ANR	590460	Callee	GetLastError		590368	0					
ANR	590461	Identifier	GetLastError		590368	0					
ANR	590462	ArgumentList			590368	1					
ANR	590463	ReturnStatement	return m_bValid ;	103:8:3371:3386	590368	1	True				
ANR	590464	Identifier	m_bValid		590368	0					
ANR	590465	ExpressionStatement	m_dwPid = dwPid	105:4:3398:3413	590368	7	True				
ANR	590466	AssignmentExpression	m_dwPid = dwPid		590368	0		=			
ANR	590467	Identifier	m_dwPid		590368	0					
ANR	590468	Identifier	dwPid		590368	1					
ANR	590469	ExpressionStatement	m_hProcess = hProcess	106:4:3419:3440	590368	8	True				
ANR	590470	AssignmentExpression	m_hProcess = hProcess		590368	0		=			
ANR	590471	Identifier	m_hProcess		590368	0					
ANR	590472	Identifier	hProcess		590368	1					
ANR	590473	ExpressionStatement	m_dwThread = dwThread	107:4:3446:3467	590368	9	True				
ANR	590474	AssignmentExpression	m_dwThread = dwThread		590368	0		=			
ANR	590475	Identifier	m_dwThread		590368	0					
ANR	590476	Identifier	dwThread		590368	1					
ANR	590477	IdentifierDeclStatement	TCHAR procPath [ MAX_PATH * 2 + 1 ] = { 0 } ;	109:4:3474:3512	590368	10	True				
ANR	590478	IdentifierDecl	procPath [ MAX_PATH * 2 + 1 ] = { 0 }		590368	0					
ANR	590479	IdentifierDeclType	TCHAR [ MAX_PATH * 2 + 1 ]		590368	0					
ANR	590480	Identifier	procPath		590368	1					
ANR	590481	AdditiveExpression	MAX_PATH * 2 + 1		590368	2		+			
ANR	590482	MultiplicativeExpression	MAX_PATH * 2		590368	0		*			
ANR	590483	Identifier	MAX_PATH		590368	0					
ANR	590484	PrimaryExpression	2		590368	1					
ANR	590485	PrimaryExpression	1		590368	1					
ANR	590486	AssignmentExpression	procPath [ MAX_PATH * 2 + 1 ] = { 0 }		590368	3		=			
ANR	590487	Identifier	procPath		590368	0					
ANR	590488	InitializerList	0		590368	1					
ANR	590489	PrimaryExpression	0		590368	0					
ANR	590490	ExpressionStatement	"GetModuleFileNameEx ( hProcess , NULL , procPath , MAX_PATH * 2 + 1 )"	110:4:3518:3579	590368	11	True				
ANR	590491	CallExpression	"GetModuleFileNameEx ( hProcess , NULL , procPath , MAX_PATH * 2 + 1 )"		590368	0					
ANR	590492	Callee	GetModuleFileNameEx		590368	0					
ANR	590493	Identifier	GetModuleFileNameEx		590368	0					
ANR	590494	ArgumentList	hProcess		590368	1					
ANR	590495	Argument	hProcess		590368	0					
ANR	590496	Identifier	hProcess		590368	0					
ANR	590497	Argument	NULL		590368	1					
ANR	590498	Identifier	NULL		590368	0					
ANR	590499	Argument	procPath		590368	2					
ANR	590500	Identifier	procPath		590368	0					
ANR	590501	Argument	MAX_PATH * 2 + 1		590368	3					
ANR	590502	AdditiveExpression	MAX_PATH * 2 + 1		590368	0		+			
ANR	590503	MultiplicativeExpression	MAX_PATH * 2		590368	0		*			
ANR	590504	Identifier	MAX_PATH		590368	0					
ANR	590505	PrimaryExpression	2		590368	1					
ANR	590506	PrimaryExpression	1		590368	1					
ANR	590507	ExpressionStatement	m_path = QString :: fromWCharArray ( procPath )	111:4:3585:3627	590368	12	True				
ANR	590508	AssignmentExpression	m_path = QString :: fromWCharArray ( procPath )		590368	0		=			
ANR	590509	Identifier	m_path		590368	0					
ANR	590510	CallExpression	QString :: fromWCharArray ( procPath )		590368	1					
ANR	590511	Callee	QString :: fromWCharArray		590368	0					
ANR	590512	Identifier	QString :: fromWCharArray		590368	0					
ANR	590513	ArgumentList	procPath		590368	1					
ANR	590514	Argument	procPath		590368	0					
ANR	590515	Identifier	procPath		590368	0					
ANR	590516	IdentifierDeclStatement	"HANDLE hSnapshot = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , NULL ) ;"	115:4:3751:3819	590368	13	True				
ANR	590517	IdentifierDecl	"hSnapshot = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , NULL )"		590368	0					
ANR	590518	IdentifierDeclType	HANDLE		590368	0					
ANR	590519	Identifier	hSnapshot		590368	1					
ANR	590520	AssignmentExpression	"hSnapshot = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , NULL )"		590368	2		=			
ANR	590521	Identifier	hSnapshot		590368	0					
ANR	590522	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , NULL )"		590368	1					
ANR	590523	Callee	CreateToolhelp32Snapshot		590368	0					
ANR	590524	Identifier	CreateToolhelp32Snapshot		590368	0					
ANR	590525	ArgumentList	TH32CS_SNAPTHREAD		590368	1					
ANR	590526	Argument	TH32CS_SNAPTHREAD		590368	0					
ANR	590527	Identifier	TH32CS_SNAPTHREAD		590368	0					
ANR	590528	Argument	NULL		590368	1					
ANR	590529	Identifier	NULL		590368	0					
ANR	590530	IfStatement	if ( hSnapshot == INVALID_HANDLE_VALUE )		590368	14					
ANR	590531	Condition	hSnapshot == INVALID_HANDLE_VALUE	116:8:3829:3861	590368	0	True				
ANR	590532	EqualityExpression	hSnapshot == INVALID_HANDLE_VALUE		590368	0		==			
ANR	590533	Identifier	hSnapshot		590368	0					
ANR	590534	Identifier	INVALID_HANDLE_VALUE		590368	1					
ANR	590535	CompoundStatement		28:4:900:900	590368	1					
ANR	590536	ExpressionStatement	"kError ( ) << ""CreateToolhelp32Snapshot() failed: "" << GetLastError ( )"	118:8:3878:3945	590368	0	True				
ANR	590537	ShiftExpression	"kError ( ) << ""CreateToolhelp32Snapshot() failed: "" << GetLastError ( )"		590368	0		<<			
ANR	590538	CallExpression	kError ( )		590368	0					
ANR	590539	Callee	kError		590368	0					
ANR	590540	Identifier	kError		590368	0					
ANR	590541	ArgumentList			590368	1					
ANR	590542	ShiftExpression	"""CreateToolhelp32Snapshot() failed: "" << GetLastError ( )"		590368	1		<<			
ANR	590543	PrimaryExpression	"""CreateToolhelp32Snapshot() failed: """		590368	0					
ANR	590544	CallExpression	GetLastError ( )		590368	1					
ANR	590545	Callee	GetLastError		590368	0					
ANR	590546	Identifier	GetLastError		590368	0					
ANR	590547	ArgumentList			590368	1					
ANR	590548	ExpressionStatement	assert ( false )	119:8:3955:3968	590368	1	True				
ANR	590549	CallExpression	assert ( false )		590368	0					
ANR	590550	Callee	assert		590368	0					
ANR	590551	Identifier	assert		590368	0					
ANR	590552	ArgumentList	false		590368	1					
ANR	590553	Argument	false		590368	0					
ANR	590554	Identifier	false		590368	0					
ANR	590555	ReturnStatement	return m_bValid ;	120:8:3978:3993	590368	2	True				
ANR	590556	Identifier	m_bValid		590368	0					
ANR	590557	IdentifierDeclStatement	THREADENTRY32 te ;	124:4:4033:4049	590368	15	True				
ANR	590558	IdentifierDecl	te		590368	0					
ANR	590559	IdentifierDeclType	THREADENTRY32		590368	0					
ANR	590560	Identifier	te		590368	1					
ANR	590561	ExpressionStatement	"ZeroMemory ( & te , sizeof ( te ) )"	125:4:4055:4082	590368	16	True				
ANR	590562	CallExpression	"ZeroMemory ( & te , sizeof ( te ) )"		590368	0					
ANR	590563	Callee	ZeroMemory		590368	0					
ANR	590564	Identifier	ZeroMemory		590368	0					
ANR	590565	ArgumentList	& te		590368	1					
ANR	590566	Argument	& te		590368	0					
ANR	590567	UnaryOperationExpression	& te		590368	0					
ANR	590568	UnaryOperator	&		590368	0					
ANR	590569	Identifier	te		590368	1					
ANR	590570	Argument	sizeof ( te )		590368	1					
ANR	590571	SizeofExpression	sizeof ( te )		590368	0					
ANR	590572	Sizeof	sizeof		590368	0					
ANR	590573	SizeofOperand	te		590368	1					
ANR	590574	ExpressionStatement	te . dwSize = sizeof ( te )	126:4:4088:4110	590368	17	True				
ANR	590575	AssignmentExpression	te . dwSize = sizeof ( te )		590368	0		=			
ANR	590576	MemberAccess	te . dwSize		590368	0					
ANR	590577	Identifier	te		590368	0					
ANR	590578	Identifier	dwSize		590368	1					
ANR	590579	SizeofExpression	sizeof ( te )		590368	1					
ANR	590580	Sizeof	sizeof		590368	0					
ANR	590581	SizeofOperand	te		590368	1					
ANR	590582	IfStatement	"if ( Thread32First ( hSnapshot , & te ) )"		590368	18					
ANR	590583	Condition	"Thread32First ( hSnapshot , & te )"	127:8:4120:4148	590368	0	True				
ANR	590584	CallExpression	"Thread32First ( hSnapshot , & te )"		590368	0					
ANR	590585	Callee	Thread32First		590368	0					
ANR	590586	Identifier	Thread32First		590368	0					
ANR	590587	ArgumentList	hSnapshot		590368	1					
ANR	590588	Argument	hSnapshot		590368	0					
ANR	590589	Identifier	hSnapshot		590368	0					
ANR	590590	Argument	& te		590368	1					
ANR	590591	UnaryOperationExpression	& te		590368	0					
ANR	590592	UnaryOperator	&		590368	0					
ANR	590593	Identifier	te		590368	1					
ANR	590594	CompoundStatement		39:4:1187:1187	590368	1					
ANR	590595	DoStatement	do		590368	0					
ANR	590596	CompoundStatement		41:8:1209:1209	590368	0					
ANR	590597	IfStatement	if ( te . th32OwnerProcessID == dwPid )		590368	0					
ANR	590598	Condition	te . th32OwnerProcessID == dwPid	131:16:4195:4224	590368	0	True				
ANR	590599	EqualityExpression	te . th32OwnerProcessID == dwPid		590368	0		==			
ANR	590600	MemberAccess	te . th32OwnerProcessID		590368	0					
ANR	590601	Identifier	te		590368	0					
ANR	590602	Identifier	th32OwnerProcessID		590368	1					
ANR	590603	Identifier	dwPid		590368	1					
ANR	590604	CompoundStatement		46:16:1392:1413	590368	1					
ANR	590605	ExpressionStatement	"kDebug ( ) << ""Found thread "" << te . th32ThreadID << "", adding to list"""	133:16:4257:4325	590368	0	True				
ANR	590606	ShiftExpression	"kDebug ( ) << ""Found thread "" << te . th32ThreadID << "", adding to list"""		590368	0		<<			
ANR	590607	CallExpression	kDebug ( )		590368	0					
ANR	590608	Callee	kDebug		590368	0					
ANR	590609	Identifier	kDebug		590368	0					
ANR	590610	ArgumentList			590368	1					
ANR	590611	ShiftExpression	"""Found thread "" << te . th32ThreadID << "", adding to list"""		590368	1		<<			
ANR	590612	PrimaryExpression	"""Found thread """		590368	0					
ANR	590613	ShiftExpression	"te . th32ThreadID << "", adding to list"""		590368	1		<<			
ANR	590614	MemberAccess	te . th32ThreadID		590368	0					
ANR	590615	Identifier	te		590368	0					
ANR	590616	Identifier	th32ThreadID		590368	1					
ANR	590617	PrimaryExpression	""", adding to list"""		590368	1					
ANR	590618	IdentifierDeclStatement	HANDLE hThread = NULL ;	135:16:4360:4381	590368	1	True				
ANR	590619	IdentifierDecl	hThread = NULL		590368	0					
ANR	590620	IdentifierDeclType	HANDLE		590368	0					
ANR	590621	Identifier	hThread		590368	1					
ANR	590622	AssignmentExpression	hThread = NULL		590368	2		=			
ANR	590623	Identifier	NULL		590368	0					
ANR	590624	Identifier	NULL		590368	1					
ANR	590625	ExpressionStatement	"hThread = OpenThread ( THREAD_ALL_ACCESS , FALSE , te . th32ThreadID )"	136:16:4399:4462	590368	2	True				
ANR	590626	AssignmentExpression	"hThread = OpenThread ( THREAD_ALL_ACCESS , FALSE , te . th32ThreadID )"		590368	0		=			
ANR	590627	Identifier	hThread		590368	0					
ANR	590628	CallExpression	"OpenThread ( THREAD_ALL_ACCESS , FALSE , te . th32ThreadID )"		590368	1					
ANR	590629	Callee	OpenThread		590368	0					
ANR	590630	Identifier	OpenThread		590368	0					
ANR	590631	ArgumentList	THREAD_ALL_ACCESS		590368	1					
ANR	590632	Argument	THREAD_ALL_ACCESS		590368	0					
ANR	590633	Identifier	THREAD_ALL_ACCESS		590368	0					
ANR	590634	Argument	FALSE		590368	1					
ANR	590635	Identifier	FALSE		590368	0					
ANR	590636	Argument	te . th32ThreadID		590368	2					
ANR	590637	MemberAccess	te . th32ThreadID		590368	0					
ANR	590638	Identifier	te		590368	0					
ANR	590639	Identifier	th32ThreadID		590368	1					
ANR	590640	ExpressionStatement	assert ( hThread )	137:16:4480:4495	590368	3	True				
ANR	590641	CallExpression	assert ( hThread )		590368	0					
ANR	590642	Callee	assert		590368	0					
ANR	590643	Identifier	assert		590368	0					
ANR	590644	ArgumentList	hThread		590368	1					
ANR	590645	Argument	hThread		590368	0					
ANR	590646	Identifier	hThread		590368	0					
ANR	590647	IfStatement	if ( hThread == NULL )		590368	4					
ANR	590648	Condition	hThread == NULL	138:20:4517:4531	590368	0	True				
ANR	590649	EqualityExpression	hThread == NULL		590368	0		==			
ANR	590650	Identifier	hThread		590368	0					
ANR	590651	Identifier	NULL		590368	1					
ANR	590652	CompoundStatement		50:16:1582:1582	590368	1					
ANR	590653	ExpressionStatement	"kError ( ) << ""Cannot open thread "" << te . th32ThreadID << "": "" << GetLastError ( )"	140:20:4572:4650	590368	0	True				
ANR	590654	ShiftExpression	"kError ( ) << ""Cannot open thread "" << te . th32ThreadID << "": "" << GetLastError ( )"		590368	0		<<			
ANR	590655	CallExpression	kError ( )		590368	0					
ANR	590656	Callee	kError		590368	0					
ANR	590657	Identifier	kError		590368	0					
ANR	590658	ArgumentList			590368	1					
ANR	590659	ShiftExpression	"""Cannot open thread "" << te . th32ThreadID << "": "" << GetLastError ( )"		590368	1		<<			
ANR	590660	PrimaryExpression	"""Cannot open thread """		590368	0					
ANR	590661	ShiftExpression	"te . th32ThreadID << "": "" << GetLastError ( )"		590368	1		<<			
ANR	590662	MemberAccess	te . th32ThreadID		590368	0					
ANR	590663	Identifier	te		590368	0					
ANR	590664	Identifier	th32ThreadID		590368	1					
ANR	590665	ShiftExpression	""": "" << GetLastError ( )"		590368	1		<<			
ANR	590666	PrimaryExpression	""": """		590368	0					
ANR	590667	CallExpression	GetLastError ( )		590368	1					
ANR	590668	Callee	GetLastError		590368	0					
ANR	590669	Identifier	GetLastError		590368	0					
ANR	590670	ArgumentList			590368	1					
ANR	590671	ContinueStatement	continue ;	141:20:4672:4680	590368	1	True				
ANR	590672	ExpressionStatement	m_threads [ te . th32ThreadID ] = hThread	144:16:4733:4769	590368	5	True				
ANR	590673	AssignmentExpression	m_threads [ te . th32ThreadID ] = hThread		590368	0		=			
ANR	590674	ArrayIndexing	m_threads [ te . th32ThreadID ]		590368	0					
ANR	590675	Identifier	m_threads		590368	0					
ANR	590676	MemberAccess	te . th32ThreadID		590368	1					
ANR	590677	Identifier	te		590368	0					
ANR	590678	Identifier	th32ThreadID		590368	1					
ANR	590679	Identifier	hThread		590368	1					
ANR	590680	ExpressionStatement	m_bValid = TRUE	146:16:4849:4864	590368	6	True				
ANR	590681	AssignmentExpression	m_bValid = TRUE		590368	0		=			
ANR	590682	Identifier	m_bValid		590368	0					
ANR	590683	Identifier	TRUE		590368	1					
ANR	590684	Condition	"Thread32Next ( hSnapshot , & te )"	149:15:4906:4933	590368	1	True				
ANR	590685	CallExpression	"Thread32Next ( hSnapshot , & te )"		590368	0					
ANR	590686	Callee	Thread32Next		590368	0					
ANR	590687	Identifier	Thread32Next		590368	0					
ANR	590688	ArgumentList	hSnapshot		590368	1					
ANR	590689	Argument	hSnapshot		590368	0					
ANR	590690	Identifier	hSnapshot		590368	0					
ANR	590691	Argument	& te		590368	1					
ANR	590692	UnaryOperationExpression	& te		590368	0					
ANR	590693	UnaryOperator	&		590368	0					
ANR	590694	Identifier	te		590368	1					
ANR	590695	ExpressionStatement	SafeCloseHandle ( hSnapshot )	151:4:4947:4973	590368	19	True				
ANR	590696	CallExpression	SafeCloseHandle ( hSnapshot )		590368	0					
ANR	590697	Callee	SafeCloseHandle		590368	0					
ANR	590698	Identifier	SafeCloseHandle		590368	0					
ANR	590699	ArgumentList	hSnapshot		590368	1					
ANR	590700	Argument	hSnapshot		590368	0					
ANR	590701	Identifier	hSnapshot		590368	0					
ANR	590702	ExpressionStatement	assert ( m_threads . size ( ) > 0 )	153:4:4980:5008	590368	20	True				
ANR	590703	CallExpression	assert ( m_threads . size ( ) > 0 )		590368	0					
ANR	590704	Callee	assert		590368	0					
ANR	590705	Identifier	assert		590368	0					
ANR	590706	ArgumentList	m_threads . size ( ) > 0		590368	1					
ANR	590707	Argument	m_threads . size ( ) > 0		590368	0					
ANR	590708	RelationalExpression	m_threads . size ( ) > 0		590368	0		>			
ANR	590709	CallExpression	m_threads . size ( )		590368	0					
ANR	590710	Callee	m_threads . size		590368	0					
ANR	590711	MemberAccess	m_threads . size		590368	0					
ANR	590712	Identifier	m_threads		590368	0					
ANR	590713	Identifier	size		590368	1					
ANR	590714	ArgumentList			590368	1					
ANR	590715	PrimaryExpression	0		590368	1					
ANR	590716	IdentifierDeclStatement	HMODULE hMods [ 1024 ] ;	156:4:5042:5061	590368	21	True				
ANR	590717	IdentifierDecl	hMods [ 1024 ]		590368	0					
ANR	590718	IdentifierDeclType	HMODULE [ 1024 ]		590368	0					
ANR	590719	Identifier	hMods		590368	1					
ANR	590720	PrimaryExpression	1024		590368	2					
ANR	590721	IdentifierDeclStatement	DWORD cbNeeded = 0 ;	157:4:5067:5085	590368	22	True				
ANR	590722	IdentifierDecl	cbNeeded = 0		590368	0					
ANR	590723	IdentifierDeclType	DWORD		590368	0					
ANR	590724	Identifier	cbNeeded		590368	1					
ANR	590725	AssignmentExpression	cbNeeded = 0		590368	2		=			
ANR	590726	Identifier	cbNeeded		590368	0					
ANR	590727	PrimaryExpression	0		590368	1					
ANR	590728	IfStatement	"if ( ! EnumProcessModules ( hProcess , hMods , ArrayCount ( hMods ) , & cbNeeded ) )"		590368	23					
ANR	590729	Condition	"! EnumProcessModules ( hProcess , hMods , ArrayCount ( hMods ) , & cbNeeded )"	158:8:5095:5160	590368	0	True				
ANR	590730	UnaryOperationExpression	"! EnumProcessModules ( hProcess , hMods , ArrayCount ( hMods ) , & cbNeeded )"		590368	0					
ANR	590731	UnaryOperator	!		590368	0					
ANR	590732	CallExpression	"EnumProcessModules ( hProcess , hMods , ArrayCount ( hMods ) , & cbNeeded )"		590368	1					
ANR	590733	Callee	EnumProcessModules		590368	0					
ANR	590734	Identifier	EnumProcessModules		590368	0					
ANR	590735	ArgumentList	hProcess		590368	1					
ANR	590736	Argument	hProcess		590368	0					
ANR	590737	Identifier	hProcess		590368	0					
ANR	590738	Argument	hMods		590368	1					
ANR	590739	Identifier	hMods		590368	0					
ANR	590740	Argument	ArrayCount ( hMods )		590368	2					
ANR	590741	CallExpression	ArrayCount ( hMods )		590368	0					
ANR	590742	Callee	ArrayCount		590368	0					
ANR	590743	Identifier	ArrayCount		590368	0					
ANR	590744	ArgumentList	hMods		590368	1					
ANR	590745	Argument	hMods		590368	0					
ANR	590746	Identifier	hMods		590368	0					
ANR	590747	Argument	& cbNeeded		590368	3					
ANR	590748	UnaryOperationExpression	& cbNeeded		590368	0					
ANR	590749	UnaryOperator	&		590368	0					
ANR	590750	Identifier	cbNeeded		590368	1					
ANR	590751	CompoundStatement		70:4:2199:2199	590368	1					
ANR	590752	ExpressionStatement	"kError ( ) << ""Cannot enumerate modules: "" << GetLastError ( )"	160:8:5177:5235	590368	0	True				
ANR	590753	ShiftExpression	"kError ( ) << ""Cannot enumerate modules: "" << GetLastError ( )"		590368	0		<<			
ANR	590754	CallExpression	kError ( )		590368	0					
ANR	590755	Callee	kError		590368	0					
ANR	590756	Identifier	kError		590368	0					
ANR	590757	ArgumentList			590368	1					
ANR	590758	ShiftExpression	"""Cannot enumerate modules: "" << GetLastError ( )"		590368	1		<<			
ANR	590759	PrimaryExpression	"""Cannot enumerate modules: """		590368	0					
ANR	590760	CallExpression	GetLastError ( )		590368	1					
ANR	590761	Callee	GetLastError		590368	0					
ANR	590762	Identifier	GetLastError		590368	0					
ANR	590763	ArgumentList			590368	1					
ANR	590764	ReturnStatement	return m_bValid ;	161:8:5245:5260	590368	1	True				
ANR	590765	Identifier	m_bValid		590368	0					
ANR	590766	ForStatement	for ( size_t i = 0 ; i < ( cbNeeded / sizeof ( hMods [ 0 ] ) ) ; i ++ )		590368	24					
ANR	590767	ForInit	size_t i = 0 ;	163:9:5277:5289	590368	0	True				
ANR	590768	IdentifierDeclStatement	size_t i = 0 ;		590368	0					
ANR	590769	IdentifierDecl	i = 0		590368	0					
ANR	590770	IdentifierDeclType	size_t		590368	0					
ANR	590771	Identifier	i		590368	1					
ANR	590772	AssignmentExpression	i = 0		590368	2		=			
ANR	590773	Identifier	i		590368	0					
ANR	590774	PrimaryExpression	0		590368	1					
ANR	590775	Condition	i < ( cbNeeded / sizeof ( hMods [ 0 ] ) )	163:23:5291:5323	590368	1	True				
ANR	590776	RelationalExpression	i < ( cbNeeded / sizeof ( hMods [ 0 ] ) )		590368	0		<			
ANR	590777	Identifier	i		590368	0					
ANR	590778	MultiplicativeExpression	cbNeeded / sizeof ( hMods [ 0 ] )		590368	1		/			
ANR	590779	Identifier	cbNeeded		590368	0					
ANR	590780	SizeofExpression	sizeof ( hMods [ 0 ] )		590368	1					
ANR	590781	Sizeof	sizeof		590368	0					
ANR	590782	ArrayIndexing	hMods [ 0 ]		590368	1					
ANR	590783	Identifier	hMods		590368	0					
ANR	590784	PrimaryExpression	0		590368	1					
ANR	590785	PostIncDecOperationExpression	i ++	163:58:5326:5328	590368	2	True				
ANR	590786	Identifier	i		590368	0					
ANR	590787	IncDec	++		590368	1					
ANR	590788	CompoundStatement		81:8:2592:2618	590368	3					
ANR	590789	IdentifierDeclStatement	ushort szModName [ MAX_PATH ] ;	170:8:5560:5586	590368	0	True				
ANR	590790	IdentifierDecl	szModName [ MAX_PATH ]		590368	0					
ANR	590791	IdentifierDeclType	ushort [ MAX_PATH ]		590368	0					
ANR	590792	Identifier	szModName		590368	1					
ANR	590793	Identifier	MAX_PATH		590368	2					
ANR	590794	IfStatement	"if ( GetModuleFileNameEx ( hProcess , hMods [ i ] , ( LPTSTR ) szModName , MAX_PATH ) )"		590368	1					
ANR	590795	Condition	"GetModuleFileNameEx ( hProcess , hMods [ i ] , ( LPTSTR ) szModName , MAX_PATH )"	171:12:5600:5668	590368	0	True				
ANR	590796	CallExpression	"GetModuleFileNameEx ( hProcess , hMods [ i ] , ( LPTSTR ) szModName , MAX_PATH )"		590368	0					
ANR	590797	Callee	GetModuleFileNameEx		590368	0					
ANR	590798	Identifier	GetModuleFileNameEx		590368	0					
ANR	590799	ArgumentList	hProcess		590368	1					
ANR	590800	Argument	hProcess		590368	0					
ANR	590801	Identifier	hProcess		590368	0					
ANR	590802	Argument	hMods [ i ]		590368	1					
ANR	590803	ArrayIndexing	hMods [ i ]		590368	0					
ANR	590804	Identifier	hMods		590368	0					
ANR	590805	Identifier	i		590368	1					
ANR	590806	Argument	( LPTSTR ) szModName		590368	2					
ANR	590807	CastExpression	( LPTSTR ) szModName		590368	0					
ANR	590808	CastTarget	LPTSTR		590368	0					
ANR	590809	Identifier	szModName		590368	1					
ANR	590810	Argument	MAX_PATH		590368	3					
ANR	590811	Identifier	MAX_PATH		590368	0					
ANR	590812	CompoundStatement		83:8:2711:2711	590368	1					
ANR	590813	ExpressionStatement	m_modules [ QString :: fromUtf16 ( szModName ) ] = hMods [ i ]	176:12:5867:5918	590368	0	True				
ANR	590814	AssignmentExpression	m_modules [ QString :: fromUtf16 ( szModName ) ] = hMods [ i ]		590368	0		=			
ANR	590815	ArrayIndexing	m_modules [ QString :: fromUtf16 ( szModName ) ]		590368	0					
ANR	590816	Identifier	m_modules		590368	0					
ANR	590817	CallExpression	QString :: fromUtf16 ( szModName )		590368	1					
ANR	590818	Callee	QString :: fromUtf16		590368	0					
ANR	590819	Identifier	QString :: fromUtf16		590368	0					
ANR	590820	ArgumentList	szModName		590368	1					
ANR	590821	Argument	szModName		590368	0					
ANR	590822	Identifier	szModName		590368	0					
ANR	590823	ArrayIndexing	hMods [ i ]		590368	1					
ANR	590824	Identifier	hMods		590368	0					
ANR	590825	Identifier	i		590368	1					
ANR	590826	ReturnStatement	return m_bValid ;	180:4:5941:5956	590368	25	True				
ANR	590827	Identifier	m_bValid		590368	0					
ANR	590828	ReturnType	BOOL		590368	1					
ANR	590829	Identifier	Process :: GetInfo		590368	2					
ANR	590830	ParameterList	"const char * pid , const char * threadId"		590368	3					
ANR	590831	Parameter	const char * pid	89:22:2928:2942	590368	0	True				
ANR	590832	ParameterType	const char *		590368	0					
ANR	590833	Identifier	pid		590368	1					
ANR	590834	Parameter	const char * threadId	89:39:2945:2964	590368	1	True				
ANR	590835	ParameterType	const char *		590368	0					
ANR	590836	Identifier	threadId		590368	1					
ANR	590837	CFGEntryNode	ENTRY		590368		True				
ANR	590838	CFGExitNode	EXIT		590368		True				
ANR	590839	Symbol	GetModuleFileNameEx		590368						
ANR	590840	Symbol	Thread32Next		590368						
ANR	590841	Symbol	pid		590368						
ANR	590842	Symbol	te . dwSize		590368						
ANR	590843	Symbol	* QString :: fromUtf16		590368						
ANR	590844	Symbol	threadId		590368						
ANR	590845	Symbol	m_threads . size		590368						
ANR	590846	Symbol	m_hProcess		590368						
ANR	590847	Symbol	procPath		590368						
ANR	590848	Symbol	THREAD_ALL_ACCESS		590368						
ANR	590849	Symbol	* te . th32ThreadID		590368						
ANR	590850	Symbol	te . th32OwnerProcessID		590368						
ANR	590851	Symbol	szModName		590368						
ANR	590852	Symbol	te . th32ThreadID		590368						
ANR	590853	Symbol	OpenProcess		590368						
ANR	590854	Symbol	CreateToolhelp32Snapshot		590368						
ANR	590855	Symbol	NULL		590368						
ANR	590856	Symbol	m_threads		590368						
ANR	590857	Symbol	DWORD		590368						
ANR	590858	Symbol	TRUE		590368						
ANR	590859	Symbol	& cbNeeded		590368						
ANR	590860	Symbol	QString :: fromUtf16		590368						
ANR	590861	Symbol	OpenThread		590368						
ANR	590862	Symbol	* m_modules		590368						
ANR	590863	Symbol	* te		590368						
ANR	590864	Symbol	m_bValid		590368						
ANR	590865	Symbol	& te		590368						
ANR	590866	Symbol	dwThread		590368						
ANR	590867	Symbol	Thread32First		590368						
ANR	590868	Symbol	dwPid		590368						
ANR	590869	Symbol	* m_threads		590368						
ANR	590870	Symbol	ArrayCount		590368						
ANR	590871	Symbol	hProcess		590368						
ANR	590872	Symbol	m_path		590368						
ANR	590873	Symbol	TH32CS_SNAPTHREAD		590368						
ANR	590874	Symbol	hThread		590368						
ANR	590875	Symbol	EnumProcessModules		590368						
ANR	590876	Symbol	atoi		590368						
ANR	590877	Symbol	QString :: fromWCharArray		590368						
ANR	590878	Symbol	m_dwThread		590368						
ANR	590879	Symbol	hMods		590368						
ANR	590880	Symbol	false		590368						
ANR	590881	Symbol	i		590368						
ANR	590882	Symbol	m_modules		590368						
ANR	590883	Symbol	INVALID_HANDLE_VALUE		590368						
ANR	590884	Symbol	hSnapshot		590368						
ANR	590885	Symbol	te		590368						
ANR	590886	Symbol	* i		590368						
ANR	590887	Symbol	PROCESS_ALL_ACCESS		590368						
ANR	590888	Symbol	FALSE		590368						
ANR	590889	Symbol	m_dwPid		590368						
ANR	590890	Symbol	MAX_PATH		590368						
ANR	590891	Symbol	cbNeeded		590368						
ANR	590892	Symbol	* hMods		590368						
