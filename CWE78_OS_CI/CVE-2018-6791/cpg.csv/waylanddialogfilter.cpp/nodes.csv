command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	856204	File	data/converged/CVE-2018-6791_plasma-workspace/waylanddialogfilter.cpp								
ANR	856205	ClassDef	DialogShadows	31:0:1005:1216							
ANR	856206	DeclStmt									
ANR	856207	Decl							DialogShadows	DialogShadows * ( )	self
ANR	856208	ClassDef	DialogShadowsSingleton	40:0:1220:1324							
ANR	856209	Function	DialogShadowsSingleton	43:4:1263:1298							
ANR	856210	FunctionDef	DialogShadowsSingleton ()		856209	0					
ANR	856211	CompoundStatement		44:4:1292:1298	856209	0					
ANR	856212	Identifier	DialogShadowsSingleton		856209	1					
ANR	856213	ParameterList			856209	2					
ANR	856214	CFGEntryNode	ENTRY		856209		True				
ANR	856215	CFGExitNode	EXIT		856209		True				
ANR	856216	DeclStmt									
ANR	856217	Decl							DialogShadows	DialogShadows	self
ANR	856218	Function	DialogShadows :: self	52:0:1395:1478							
ANR	856219	FunctionDef	DialogShadows :: self ()		856218	0					
ANR	856220	CompoundStatement		53:0:1432:1478	856218	0					
ANR	856221	ReturnStatement	return & privateDialogShadowsSelf -> self ;	54:4:1438:1476	856218	0	True				
ANR	856222	UnaryOperationExpression	& privateDialogShadowsSelf -> self		856218	0					
ANR	856223	UnaryOperator	&		856218	0					
ANR	856224	PtrMemberAccess	privateDialogShadowsSelf -> self		856218	1					
ANR	856225	Identifier	privateDialogShadowsSelf		856218	0					
ANR	856226	Identifier	self		856218	1					
ANR	856227	ReturnType	DialogShadows *		856218	1					
ANR	856228	Identifier	DialogShadows :: self		856218	2					
ANR	856229	ParameterList			856218	3					
ANR	856230	CFGEntryNode	ENTRY		856218		True				
ANR	856231	CFGExitNode	EXIT		856218		True				
ANR	856232	Symbol	privateDialogShadowsSelf		856218						
ANR	856233	Symbol	& privateDialogShadowsSelf -> self		856218						
ANR	856234	Function	WaylandDialogFilter :: WaylandDialogFilter	59:0:1483:1675							
ANR	856235	FunctionDef	"WaylandDialogFilter :: WaylandDialogFilter (ShellCorona * c , QWindow * parent)"		856234	0					
ANR	856236	CompoundStatement		62:0:1603:1675	856234	0					
ANR	856237	ExpressionStatement	parent -> installEventFilter ( this )	63:4:1609:1641	856234	0	True				
ANR	856238	CallExpression	parent -> installEventFilter ( this )		856234	0					
ANR	856239	Callee	parent -> installEventFilter		856234	0					
ANR	856240	PtrMemberAccess	parent -> installEventFilter		856234	0					
ANR	856241	Identifier	parent		856234	0					
ANR	856242	Identifier	installEventFilter		856234	1					
ANR	856243	ArgumentList	this		856234	1					
ANR	856244	Argument	this		856234	0					
ANR	856245	Identifier	this		856234	0					
ANR	856246	ExpressionStatement	setupWaylandIntegration ( c )	64:4:1647:1673	856234	1	True				
ANR	856247	CallExpression	setupWaylandIntegration ( c )		856234	0					
ANR	856248	Callee	setupWaylandIntegration		856234	0					
ANR	856249	Identifier	setupWaylandIntegration		856234	0					
ANR	856250	ArgumentList	c		856234	1					
ANR	856251	Argument	c		856234	0					
ANR	856252	Identifier	c		856234	0					
ANR	856253	Identifier	WaylandDialogFilter :: WaylandDialogFilter		856234	1					
ANR	856254	ParameterList	"ShellCorona * c , QWindow * parent"		856234	2					
ANR	856255	Parameter	ShellCorona * c	59:41:1524:1537	856234	0	True				
ANR	856256	ParameterType	ShellCorona *		856234	0					
ANR	856257	Identifier	c		856234	1					
ANR	856258	Parameter	QWindow * parent	59:57:1540:1554	856234	1	True				
ANR	856259	ParameterType	QWindow *		856234	0					
ANR	856260	Identifier	parent		856234	1					
ANR	856261	CFGEntryNode	ENTRY		856234		True				
ANR	856262	CFGExitNode	EXIT		856234		True				
ANR	856263	Symbol	parent		856234						
ANR	856264	Symbol	c		856234						
ANR	856265	Symbol	this		856234						
ANR	856266	Function	WaylandDialogFilter :: ~WaylandDialogFilter	67:0:1678:1775							
ANR	856267	FunctionDef	WaylandDialogFilter :: ~WaylandDialogFilter ()		856266	0					
ANR	856268	CompoundStatement		68:0:1722:1775	856266	0					
ANR	856269	ExpressionStatement	DialogShadows :: self ( ) -> removeWindow ( m_dialog )	69:4:1728:1773	856266	0	True				
ANR	856270	CallExpression	DialogShadows :: self ( ) -> removeWindow ( m_dialog )		856266	0					
ANR	856271	Callee	DialogShadows :: self ( ) -> removeWindow		856266	0					
ANR	856272	PtrMemberAccess	DialogShadows :: self ( ) -> removeWindow		856266	0					
ANR	856273	CallExpression	DialogShadows :: self ( )		856266	0					
ANR	856274	Callee	DialogShadows :: self		856266	0					
ANR	856275	Identifier	DialogShadows :: self		856266	0					
ANR	856276	ArgumentList			856266	1					
ANR	856277	Identifier	removeWindow		856266	1					
ANR	856278	ArgumentList	m_dialog		856266	1					
ANR	856279	Argument	m_dialog		856266	0					
ANR	856280	Identifier	m_dialog		856266	0					
ANR	856281	Identifier	WaylandDialogFilter :: ~WaylandDialogFilter		856266	1					
ANR	856282	ParameterList			856266	2					
ANR	856283	CFGEntryNode	ENTRY		856266		True				
ANR	856284	CFGExitNode	EXIT		856266		True				
ANR	856285	Symbol	m_dialog		856266						
ANR	856286	Symbol	DialogShadows :: self		856266						
ANR	856287	Function	WaylandDialogFilter :: install	72:0:1778:1887							
ANR	856288	FunctionDef	"WaylandDialogFilter :: install (QWindow * dialog , ShellCorona * c)"		856287	0					
ANR	856289	CompoundStatement		73:0:1845:1887	856287	0					
ANR	856290	ExpressionStatement	"c , dialog"	74:4:1851:1885	856287	0	True				
ANR	856291	Expression	"c , dialog"		856287	0					
ANR	856292	Identifier	c		856287	0					
ANR	856293	Identifier	dialog		856287	1					
ANR	856294	ReturnType	void		856287	1					
ANR	856295	Identifier	WaylandDialogFilter :: install		856287	2					
ANR	856296	ParameterList	"QWindow * dialog , ShellCorona * c"		856287	3					
ANR	856297	Parameter	QWindow * dialog	72:34:1812:1826	856287	0	True				
ANR	856298	ParameterType	QWindow *		856287	0					
ANR	856299	Identifier	dialog		856287	1					
ANR	856300	Parameter	ShellCorona * c	72:51:1829:1842	856287	1	True				
ANR	856301	ParameterType	ShellCorona *		856287	0					
ANR	856302	Identifier	c		856287	1					
ANR	856303	CFGEntryNode	ENTRY		856287		True				
ANR	856304	CFGExitNode	EXIT		856287		True				
ANR	856305	Symbol	dialog		856287						
ANR	856306	Symbol	c		856287						
ANR	856307	Function	WaylandDialogFilter :: eventFilter	77:0:1890:2686							
ANR	856308	FunctionDef	"WaylandDialogFilter :: eventFilter (QObject * watched , QEvent * event)"		856307	0					
ANR	856309	CompoundStatement		78:0:1961:2686	856307	0					
ANR	856310	IfStatement	if ( event -> type ( ) == QEvent :: Move )		856307	0					
ANR	856311	Condition	event -> type ( ) == QEvent :: Move	79:8:1971:1999	856307	0	True				
ANR	856312	EqualityExpression	event -> type ( ) == QEvent :: Move		856307	0		==			
ANR	856313	CallExpression	event -> type ( )		856307	0					
ANR	856314	Callee	event -> type		856307	0					
ANR	856315	PtrMemberAccess	event -> type		856307	0					
ANR	856316	Identifier	event		856307	0					
ANR	856317	Identifier	type		856307	1					
ANR	856318	ArgumentList			856307	1					
ANR	856319	Identifier	QEvent :: Move		856307	1					
ANR	856320	CompoundStatement		2:39:40:40	856307	1					
ANR	856321	Statement	QMoveEvent	80:8:2012:2021	856307	0	True				
ANR	856322	Statement	*	80:19:2023:2023	856307	1	True				
ANR	856323	Statement	me	80:20:2024:2025	856307	2	True				
ANR	856324	Statement	=	80:23:2027:2027	856307	3	True				
ANR	856325	Statement	static_cast	80:25:2029:2039	856307	4	True				
ANR	856326	Statement	<	80:36:2040:2040	856307	5	True				
ANR	856327	Statement	QMoveEvent	80:37:2041:2050	856307	6	True				
ANR	856328	Statement	*	80:48:2052:2052	856307	7	True				
ANR	856329	Statement	>	80:49:2053:2053	856307	8	True				
ANR	856330	ExpressionStatement	event	80:50:2054:2061	856307	9	True				
ANR	856331	Identifier	event		856307	0					
ANR	856332	IfStatement	if ( m_shellSurface )		856307	10					
ANR	856333	Condition	m_shellSurface	81:12:2075:2088	856307	0	True				
ANR	856334	Identifier	m_shellSurface		856307	0					
ANR	856335	CompoundStatement		4:28:129:129	856307	1					
ANR	856336	ExpressionStatement	m_shellSurface -> setPosition ( me -> pos ( ) )	82:12:2105:2143	856307	0	True				
ANR	856337	CallExpression	m_shellSurface -> setPosition ( me -> pos ( ) )		856307	0					
ANR	856338	Callee	m_shellSurface -> setPosition		856307	0					
ANR	856339	PtrMemberAccess	m_shellSurface -> setPosition		856307	0					
ANR	856340	Identifier	m_shellSurface		856307	0					
ANR	856341	Identifier	setPosition		856307	1					
ANR	856342	ArgumentList	me -> pos ( )		856307	1					
ANR	856343	Argument	me -> pos ( )		856307	0					
ANR	856344	CallExpression	me -> pos ( )		856307	0					
ANR	856345	Callee	me -> pos		856307	0					
ANR	856346	PtrMemberAccess	me -> pos		856307	0					
ANR	856347	Identifier	me		856307	0					
ANR	856348	Identifier	pos		856307	1					
ANR	856349	ArgumentList			856307	1					
ANR	856350	ElseStatement	else		856307	0					
ANR	856351	IfStatement	if ( event -> type ( ) == QEvent :: Show )		856307	0					
ANR	856352	Condition	event -> type ( ) == QEvent :: Show	84:15:2170:2198	856307	0	True				
ANR	856353	EqualityExpression	event -> type ( ) == QEvent :: Show		856307	0		==			
ANR	856354	CallExpression	event -> type ( )		856307	0					
ANR	856355	Callee	event -> type		856307	0					
ANR	856356	PtrMemberAccess	event -> type		856307	0					
ANR	856357	Identifier	event		856307	0					
ANR	856358	Identifier	type		856307	1					
ANR	856359	ArgumentList			856307	1					
ANR	856360	Identifier	QEvent :: Show		856307	1					
ANR	856361	CompoundStatement		7:46:239:239	856307	1					
ANR	856362	IfStatement	if ( m_dialog == watched )		856307	0					
ANR	856363	Condition	m_dialog == watched	85:12:2215:2233	856307	0	True				
ANR	856364	EqualityExpression	m_dialog == watched		856307	0		==			
ANR	856365	Identifier	m_dialog		856307	0					
ANR	856366	Identifier	watched		856307	1					
ANR	856367	CompoundStatement		9:12:288:366	856307	1					
ANR	856368	IdentifierDeclStatement	Plasma :: FrameSvg :: EnabledBorders enabledBorders = Plasma :: FrameSvg :: AllBorders ;	86:12:2250:2328	856307	0	True				
ANR	856369	IdentifierDecl	enabledBorders = Plasma :: FrameSvg :: AllBorders		856307	0					
ANR	856370	IdentifierDeclType	Plasma :: FrameSvg :: EnabledBorders		856307	0					
ANR	856371	Identifier	enabledBorders		856307	1					
ANR	856372	AssignmentExpression	enabledBorders = Plasma :: FrameSvg :: AllBorders		856307	2		=			
ANR	856373	Identifier	Plasma :: FrameSvg :: AllBorders		856307	0					
ANR	856374	Identifier	Plasma :: FrameSvg :: AllBorders		856307	1					
ANR	856375	Statement	Plasma	87:12:2342:2347	856307	1	True				
ANR	856376	Statement	::	87:18:2348:2349	856307	2	True				
ANR	856377	Statement	FrameSvg	87:20:2350:2357	856307	3	True				
ANR	856378	Statement	*	87:29:2359:2359	856307	4	True				
ANR	856379	Statement	background	87:30:2360:2369	856307	5	True				
ANR	856380	Statement	=	87:41:2371:2371	856307	6	True				
ANR	856381	Statement	m_dialog	87:43:2373:2380	856307	7	True				
ANR	856382	Statement	->	87:51:2381:2382	856307	8	True				
ANR	856383	Statement	property	87:53:2383:2390	856307	9	True				
ANR	856384	Statement	(	87:61:2391:2391	856307	10	True				
ANR	856385	Statement	"""__plasma_frameSvg"""	87:62:2392:2410	856307	11	True				
ANR	856386	Statement	)	87:81:2411:2411	856307	12	True				
ANR	856387	Statement	.	87:82:2412:2412	856307	13	True				
ANR	856388	Statement	value	87:83:2413:2417	856307	14	True				
ANR	856389	Statement	<	87:88:2418:2418	856307	15	True				
ANR	856390	Statement	Plasma	87:89:2419:2424	856307	16	True				
ANR	856391	Statement	::	87:95:2425:2426	856307	17	True				
ANR	856392	Statement	FrameSvg	87:97:2427:2434	856307	18	True				
ANR	856393	Statement	*	87:106:2436:2436	856307	19	True				
ANR	856394	Statement	>	87:107:2437:2437	856307	20	True				
ANR	856395	Statement	(	87:108:2438:2438	856307	21	True				
ANR	856396	Statement	)	87:109:2439:2439	856307	22	True				
ANR	856397	ExpressionStatement		87:110:2440:2440	856307	23	True				
ANR	856398	IfStatement	if ( background )		856307	24					
ANR	856399	Condition	background	88:16:2458:2467	856307	0	True				
ANR	856400	Identifier	background		856307	0					
ANR	856401	CompoundStatement		11:28:508:508	856307	1					
ANR	856402	ExpressionStatement	enabledBorders = background -> enabledBorders ( )	89:16:2488:2533	856307	0	True				
ANR	856403	AssignmentExpression	enabledBorders = background -> enabledBorders ( )		856307	0		=			
ANR	856404	Identifier	enabledBorders		856307	0					
ANR	856405	CallExpression	background -> enabledBorders ( )		856307	1					
ANR	856406	Callee	background -> enabledBorders		856307	0					
ANR	856407	PtrMemberAccess	background -> enabledBorders		856307	0					
ANR	856408	Identifier	background		856307	0					
ANR	856409	Identifier	enabledBorders		856307	1					
ANR	856410	ArgumentList			856307	1					
ANR	856411	ExpressionStatement	"DialogShadows :: self ( ) -> addWindow ( m_dialog , enabledBorders )"	91:12:2561:2619	856307	25	True				
ANR	856412	CallExpression	"DialogShadows :: self ( ) -> addWindow ( m_dialog , enabledBorders )"		856307	0					
ANR	856413	Callee	DialogShadows :: self ( ) -> addWindow		856307	0					
ANR	856414	PtrMemberAccess	DialogShadows :: self ( ) -> addWindow		856307	0					
ANR	856415	CallExpression	DialogShadows :: self ( )		856307	0					
ANR	856416	Callee	DialogShadows :: self		856307	0					
ANR	856417	Identifier	DialogShadows :: self		856307	0					
ANR	856418	ArgumentList			856307	1					
ANR	856419	Identifier	addWindow		856307	1					
ANR	856420	ArgumentList	m_dialog		856307	1					
ANR	856421	Argument	m_dialog		856307	0					
ANR	856422	Identifier	m_dialog		856307	0					
ANR	856423	Argument	enabledBorders		856307	1					
ANR	856424	Identifier	enabledBorders		856307	0					
ANR	856425	ReturnStatement	"return QObject :: eventFilter ( watched , event ) ;"	94:4:2641:2684	856307	1	True				
ANR	856426	CallExpression	"QObject :: eventFilter ( watched , event )"		856307	0					
ANR	856427	Callee	QObject :: eventFilter		856307	0					
ANR	856428	Identifier	QObject :: eventFilter		856307	0					
ANR	856429	ArgumentList	watched		856307	1					
ANR	856430	Argument	watched		856307	0					
ANR	856431	Identifier	watched		856307	0					
ANR	856432	Argument	event		856307	1					
ANR	856433	Identifier	event		856307	0					
ANR	856434	ReturnType	bool		856307	1					
ANR	856435	Identifier	WaylandDialogFilter :: eventFilter		856307	2					
ANR	856436	ParameterList	"QObject * watched , QEvent * event"		856307	3					
ANR	856437	Parameter	QObject * watched	77:38:1928:1943	856307	0	True				
ANR	856438	ParameterType	QObject *		856307	0					
ANR	856439	Identifier	watched		856307	1					
ANR	856440	Parameter	QEvent * event	77:56:1946:1958	856307	1	True				
ANR	856441	ParameterType	QEvent *		856307	0					
ANR	856442	Identifier	event		856307	1					
ANR	856443	CFGEntryNode	ENTRY		856307		True				
ANR	856444	CFGExitNode	EXIT		856307		True				
ANR	856445	Symbol	QEvent :: Move		856307						
ANR	856446	Symbol	event -> type		856307						
ANR	856447	Symbol	QObject :: eventFilter		856307						
ANR	856448	Symbol	* event		856307						
ANR	856449	Symbol	me -> pos		856307						
ANR	856450	Symbol	m_dialog		856307						
ANR	856451	Symbol	DialogShadows :: self		856307						
ANR	856452	Symbol	m_shellSurface		856307						
ANR	856453	Symbol	watched		856307						
ANR	856454	Symbol	enabledBorders		856307						
ANR	856455	Symbol	background		856307						
ANR	856456	Symbol	Plasma :: FrameSvg :: AllBorders		856307						
ANR	856457	Symbol	* background		856307						
ANR	856458	Symbol	me		856307						
ANR	856459	Symbol	background -> enabledBorders		856307						
ANR	856460	Symbol	QEvent :: Show		856307						
ANR	856461	Symbol	event		856307						
ANR	856462	Symbol	* me		856307						
ANR	856463	Function	WaylandDialogFilter :: setupWaylandIntegration	97:0:2689:3174							
ANR	856464	FunctionDef	WaylandDialogFilter :: setupWaylandIntegration (ShellCorona * c)		856463	0					
ANR	856465	CompoundStatement		98:0:2755:3174	856463	0					
ANR	856466	IfStatement	if ( m_shellSurface )		856463	0					
ANR	856467	Condition	m_shellSurface	99:8:2765:2778	856463	0	True				
ANR	856468	Identifier	m_shellSurface		856463	0					
ANR	856469	CompoundStatement		2:24:25:25	856463	1					
ANR	856470	ReturnStatement	return ;	101:8:2816:2822	856463	0	True				
ANR	856471	IfStatement	if ( c )		856463	1					
ANR	856472	Condition	c	103:8:2838:2838	856463	0	True				
ANR	856473	Identifier	c		856463	0					
ANR	856474	CompoundStatement		12:8:260:302	856463	1					
ANR	856475	Statement	using	104:8:2851:2855	856463	0	True				
ANR	856476	Statement	namespace	104:14:2857:2865	856463	1	True				
ANR	856477	ExpressionStatement	KWayland :: Client	104:24:2867:2883	856463	2	True				
ANR	856478	Identifier	KWayland :: Client		856463	0					
ANR	856479	IdentifierDeclStatement	PlasmaShell * interface = c -> waylandPlasmaShellInterface ( ) ;	105:8:2893:2950	856463	3	True				
ANR	856480	IdentifierDecl	* interface = c -> waylandPlasmaShellInterface ( )		856463	0					
ANR	856481	IdentifierDeclType	PlasmaShell *		856463	0					
ANR	856482	Identifier	interface		856463	1					
ANR	856483	AssignmentExpression	* interface = c -> waylandPlasmaShellInterface ( )		856463	2		=			
ANR	856484	Identifier	interface		856463	0					
ANR	856485	CallExpression	c -> waylandPlasmaShellInterface ( )		856463	1					
ANR	856486	Callee	c -> waylandPlasmaShellInterface		856463	0					
ANR	856487	PtrMemberAccess	c -> waylandPlasmaShellInterface		856463	0					
ANR	856488	Identifier	c		856463	0					
ANR	856489	Identifier	waylandPlasmaShellInterface		856463	1					
ANR	856490	ArgumentList			856463	1					
ANR	856491	IfStatement	if ( ! interface )		856463	4					
ANR	856492	Condition	! interface	106:12:2964:2973	856463	0	True				
ANR	856493	UnaryOperationExpression	! interface		856463	0					
ANR	856494	UnaryOperator	!		856463	0					
ANR	856495	Identifier	interface		856463	1					
ANR	856496	CompoundStatement		9:24:220:220	856463	1					
ANR	856497	ReturnStatement	return ;	107:12:2990:2996	856463	0	True				
ANR	856498	IdentifierDeclStatement	Surface * s = Surface :: fromWindow ( m_dialog ) ;	109:8:3016:3058	856463	5	True				
ANR	856499	IdentifierDecl	* s = Surface :: fromWindow ( m_dialog )		856463	0					
ANR	856500	IdentifierDeclType	Surface *		856463	0					
ANR	856501	Identifier	s		856463	1					
ANR	856502	AssignmentExpression	* s = Surface :: fromWindow ( m_dialog )		856463	2		=			
ANR	856503	Identifier	s		856463	0					
ANR	856504	CallExpression	Surface :: fromWindow ( m_dialog )		856463	1					
ANR	856505	Callee	Surface :: fromWindow		856463	0					
ANR	856506	Identifier	Surface :: fromWindow		856463	0					
ANR	856507	ArgumentList	m_dialog		856463	1					
ANR	856508	Argument	m_dialog		856463	0					
ANR	856509	Identifier	m_dialog		856463	0					
ANR	856510	IfStatement	if ( ! s )		856463	6					
ANR	856511	Condition	! s	110:12:3072:3073	856463	0	True				
ANR	856512	UnaryOperationExpression	! s		856463	0					
ANR	856513	UnaryOperator	!		856463	0					
ANR	856514	Identifier	s		856463	1					
ANR	856515	CompoundStatement		13:16:320:320	856463	1					
ANR	856516	ReturnStatement	return ;	111:12:3090:3096	856463	0	True				
ANR	856517	ExpressionStatement	"m_shellSurface = interface -> createSurface ( s , this )"	113:8:3116:3166	856463	7	True				
ANR	856518	AssignmentExpression	"m_shellSurface = interface -> createSurface ( s , this )"		856463	0		=			
ANR	856519	Identifier	m_shellSurface		856463	0					
ANR	856520	CallExpression	"interface -> createSurface ( s , this )"		856463	1					
ANR	856521	Callee	interface -> createSurface		856463	0					
ANR	856522	PtrMemberAccess	interface -> createSurface		856463	0					
ANR	856523	Identifier	interface		856463	0					
ANR	856524	Identifier	createSurface		856463	1					
ANR	856525	ArgumentList	s		856463	1					
ANR	856526	Argument	s		856463	0					
ANR	856527	Identifier	s		856463	0					
ANR	856528	Argument	this		856463	1					
ANR	856529	Identifier	this		856463	0					
ANR	856530	ReturnType	void		856463	1					
ANR	856531	Identifier	WaylandDialogFilter :: setupWaylandIntegration		856463	2					
ANR	856532	ParameterList	ShellCorona * c		856463	3					
ANR	856533	Parameter	ShellCorona * c	97:50:2739:2752	856463	0	True				
ANR	856534	ParameterType	ShellCorona *		856463	0					
ANR	856535	Identifier	c		856463	1					
ANR	856536	CFGEntryNode	ENTRY		856463		True				
ANR	856537	CFGExitNode	EXIT		856463		True				
ANR	856538	Symbol	m_dialog		856463						
ANR	856539	Symbol	m_shellSurface		856463						
ANR	856540	Symbol	interface -> createSurface		856463						
ANR	856541	Symbol	c		856463						
ANR	856542	Symbol	s		856463						
ANR	856543	Symbol	c -> waylandPlasmaShellInterface		856463						
ANR	856544	Symbol	this		856463						
ANR	856545	Symbol	* interface		856463						
ANR	856546	Symbol	interface		856463						
ANR	856547	Symbol	* c		856463						
ANR	856548	Symbol	Surface :: fromWindow		856463						
