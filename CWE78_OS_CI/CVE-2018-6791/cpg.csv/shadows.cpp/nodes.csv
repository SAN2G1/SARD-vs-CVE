command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	673906	File	data/converged/CVE-2018-6791_plasma-workspace/shadows.cpp								
ANR	673907	ClassDef	Shadows :: Private	34:0:950:2008							
ANR	673908	Function	Private	37:4:987:1078							
ANR	673909	FunctionDef	Private (Shadows * shadows)		673908	0					
ANR	673910	CompoundStatement		40:4:1072:1078	673908	0					
ANR	673911	Identifier	Private		673908	1					
ANR	673912	ParameterList	Shadows * shadows		673908	2					
ANR	673913	Parameter	Shadows * shadows	37:12:995:1010	673908	0	True				
ANR	673914	ParameterType	Shadows *		673908	0					
ANR	673915	Identifier	shadows		673908	1					
ANR	673916	CFGEntryNode	ENTRY		673908		True				
ANR	673917	CFGExitNode	EXIT		673908		True				
ANR	673918	Symbol	shadows		673908						
ANR	673919	Function	~Private	43:4:1085:1130							
ANR	673920	FunctionDef	~Private ()		673919	1					
ANR	673921	CompoundStatement		44:4:1100:1130	673919	0					
ANR	673922	ExpressionStatement	clearPixmaps ( )	45:8:1110:1124	673919	0	True				
ANR	673923	CallExpression	clearPixmaps ( )		673919	0					
ANR	673924	Callee	clearPixmaps		673919	0					
ANR	673925	Identifier	clearPixmaps		673919	0					
ANR	673926	ArgumentList			673919	1					
ANR	673927	Identifier	~Private		673919	1					
ANR	673928	ParameterList			673919	2					
ANR	673929	CFGEntryNode	ENTRY		673919		True				
ANR	673930	CFGExitNode	EXIT		673919		True				
ANR	673931	DeclStmt									
ANR	673932	Decl							void	void ( )	clearPixmaps
ANR	673933	DeclStmt									
ANR	673934	Decl							void	void ( )	setupPixmaps
ANR	673935	DeclStmt									
ANR	673936	Decl							void	void ( const QString & element )	initPixmap
ANR	673937	DeclStmt									
ANR	673938	Decl							QPixmap	QPixmap ( const QSize & size )	initEmptyPixmap
ANR	673939	DeclStmt									
ANR	673940	Decl							void	"void ( const QWidget * window , Plasma :: FrameSvg :: EnabledBorders )"	updateShadow
ANR	673941	DeclStmt									
ANR	673942	Decl							void	void ( const QWidget * window )	clearShadow
ANR	673943	DeclStmt									
ANR	673944	Decl							void	void ( )	updateShadows
ANR	673945	DeclStmt									
ANR	673946	Decl							void	void ( QObject * deletedObject )	windowDestroyed
ANR	673947	DeclStmt									
ANR	673948	Decl							void	void ( Plasma :: FrameSvg :: EnabledBorders enabledBorders )	setupData
ANR	673949	DeclStmt									
ANR	673950	Decl							Shadows	Shadows *	q
ANR	673951	DeclStmt									
ANR	673952	Decl							QList < QPixmap >	QList < QPixmap >	m_shadowPixmaps
ANR	673953	DeclStmt									
ANR	673954	Decl							QPixmap	QPixmap	m_emptyCornerPix
ANR	673955	DeclStmt									
ANR	673956	Decl							QPixmap	QPixmap	m_emptyCornerLeftPix
ANR	673957	DeclStmt									
ANR	673958	Decl							QPixmap	QPixmap	m_emptyCornerTopPix
ANR	673959	DeclStmt									
ANR	673960	Decl							QPixmap	QPixmap	m_emptyCornerRightPix
ANR	673961	DeclStmt									
ANR	673962	Decl							QPixmap	QPixmap	m_emptyCornerBottomPix
ANR	673963	DeclStmt									
ANR	673964	Decl							QPixmap	QPixmap	m_emptyVerticalPix
ANR	673965	DeclStmt									
ANR	673966	Decl							QPixmap	QPixmap	m_emptyHorizontalPix
ANR	673967	DeclStmt									
ANR	673968	Decl							"QHash < Plasma :: FrameSvg :: EnabledBorders , QVector < unsigned long > >"	"QHash < Plasma :: FrameSvg :: EnabledBorders , QVector < unsigned long > >"	data
ANR	673969	DeclStmt									
ANR	673970	Decl							"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders >"	"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders >"	m_windows
ANR	673971	DeclStmt									
ANR	673972	Decl							bool	bool	m_managePixmaps
ANR	673973	ClassDef	ShadowsSingleton	74:0:2012:2098							
ANR	673974	Function	ShadowsSingleton	77:4:2049:2078							
ANR	673975	FunctionDef	ShadowsSingleton ()		673974	0					
ANR	673976	CompoundStatement		78:4:2072:2078	673974	0					
ANR	673977	Identifier	ShadowsSingleton		673974	1					
ANR	673978	ParameterList			673974	2					
ANR	673979	CFGEntryNode	ENTRY		673974		True				
ANR	673980	CFGExitNode	EXIT		673974		True				
ANR	673981	DeclStmt									
ANR	673982	Decl							Shadows	Shadows	self
ANR	673983	Function	Shadows :: Shadows	86:0:2157:2369							
ANR	673984	FunctionDef	"Shadows :: Shadows (QObject * parent , const QString & prefix)"		673983	0					
ANR	673985	CompoundStatement		89:0:2268:2369	673983	0					
ANR	673986	ExpressionStatement	setImagePath ( prefix )	90:4:2274:2294	673983	0	True				
ANR	673987	CallExpression	setImagePath ( prefix )		673983	0					
ANR	673988	Callee	setImagePath		673983	0					
ANR	673989	Identifier	setImagePath		673983	0					
ANR	673990	ArgumentList	prefix		673983	1					
ANR	673991	Argument	prefix		673983	0					
ANR	673992	Identifier	prefix		673983	0					
ANR	673993	ExpressionStatement	"connect ( this , SIGNAL ( repaintNeeded ( ) ) , this , SLOT ( updateShadows ( ) ) )"	91:4:2300:2367	673983	1	True				
ANR	673994	CallExpression	"connect ( this , SIGNAL ( repaintNeeded ( ) ) , this , SLOT ( updateShadows ( ) ) )"		673983	0					
ANR	673995	Callee	connect		673983	0					
ANR	673996	Identifier	connect		673983	0					
ANR	673997	ArgumentList	this		673983	1					
ANR	673998	Argument	this		673983	0					
ANR	673999	Identifier	this		673983	0					
ANR	674000	Argument	SIGNAL ( repaintNeeded ( ) )		673983	1					
ANR	674001	CallExpression	SIGNAL ( repaintNeeded ( ) )		673983	0					
ANR	674002	Callee	SIGNAL		673983	0					
ANR	674003	Identifier	SIGNAL		673983	0					
ANR	674004	ArgumentList	repaintNeeded ( )		673983	1					
ANR	674005	Argument	repaintNeeded ( )		673983	0					
ANR	674006	CallExpression	repaintNeeded ( )		673983	0					
ANR	674007	Callee	repaintNeeded		673983	0					
ANR	674008	Identifier	repaintNeeded		673983	0					
ANR	674009	ArgumentList			673983	1					
ANR	674010	Argument	this		673983	2					
ANR	674011	Identifier	this		673983	0					
ANR	674012	Argument	SLOT ( updateShadows ( ) )		673983	3					
ANR	674013	CallExpression	SLOT ( updateShadows ( ) )		673983	0					
ANR	674014	Callee	SLOT		673983	0					
ANR	674015	Identifier	SLOT		673983	0					
ANR	674016	ArgumentList	updateShadows ( )		673983	1					
ANR	674017	Argument	updateShadows ( )		673983	0					
ANR	674018	CallExpression	updateShadows ( )		673983	0					
ANR	674019	Callee	updateShadows		673983	0					
ANR	674020	Identifier	updateShadows		673983	0					
ANR	674021	ArgumentList			673983	1					
ANR	674022	Identifier	Shadows :: Shadows		673983	1					
ANR	674023	ParameterList	"QObject * parent , const QString & prefix"		673983	2					
ANR	674024	Parameter	QObject * parent	86:17:2174:2188	673983	0	True				
ANR	674025	ParameterType	QObject *		673983	0					
ANR	674026	Identifier	parent		673983	1					
ANR	674027	Parameter	const QString & prefix	86:34:2191:2211	673983	1	True				
ANR	674028	ParameterType	const QString &		673983	0					
ANR	674029	Identifier	prefix		673983	1					
ANR	674030	CFGEntryNode	ENTRY		673983		True				
ANR	674031	CFGExitNode	EXIT		673983		True				
ANR	674032	Symbol	SIGNAL		673983						
ANR	674033	Symbol	parent		673983						
ANR	674034	Symbol	prefix		673983						
ANR	674035	Symbol	this		673983						
ANR	674036	Symbol	SLOT		673983						
ANR	674037	Symbol	updateShadows		673983						
ANR	674038	Symbol	repaintNeeded		673983						
ANR	674039	Function	Shadows :: self	94:0:2372:2437							
ANR	674040	FunctionDef	Shadows :: self ()		674039	0					
ANR	674041	CompoundStatement		95:0:2397:2437	674039	0					
ANR	674042	ReturnStatement	return & privateShadowsSelf -> self ;	96:4:2403:2435	674039	0	True				
ANR	674043	UnaryOperationExpression	& privateShadowsSelf -> self		674039	0					
ANR	674044	UnaryOperator	&		674039	0					
ANR	674045	PtrMemberAccess	privateShadowsSelf -> self		674039	1					
ANR	674046	Identifier	privateShadowsSelf		674039	0					
ANR	674047	Identifier	self		674039	1					
ANR	674048	ReturnType	Shadows *		674039	1					
ANR	674049	Identifier	Shadows :: self		674039	2					
ANR	674050	ParameterList			674039	3					
ANR	674051	CFGEntryNode	ENTRY		674039		True				
ANR	674052	CFGExitNode	EXIT		674039		True				
ANR	674053	Symbol	privateShadowsSelf		674039						
ANR	674054	Symbol	& privateShadowsSelf -> self		674039						
ANR	674055	Function	Shadows :: addWindow	99:0:2440:2814							
ANR	674056	FunctionDef	"Shadows :: addWindow (const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders)"		674055	0					
ANR	674057	CompoundStatement		100:0:2536:2814	674055	0					
ANR	674058	IfStatement	if ( ! window || ! window -> isWindow ( ) )		674055	0					
ANR	674059	Condition	! window || ! window -> isWindow ( )	101:8:2546:2575	674055	0	True				
ANR	674060	OrExpression	! window || ! window -> isWindow ( )		674055	0		||			
ANR	674061	UnaryOperationExpression	! window		674055	0					
ANR	674062	UnaryOperator	!		674055	0					
ANR	674063	Identifier	window		674055	1					
ANR	674064	UnaryOperationExpression	! window -> isWindow ( )		674055	1					
ANR	674065	UnaryOperator	!		674055	0					
ANR	674066	CallExpression	window -> isWindow ( )		674055	1					
ANR	674067	Callee	window -> isWindow		674055	0					
ANR	674068	PtrMemberAccess	window -> isWindow		674055	0					
ANR	674069	Identifier	window		674055	0					
ANR	674070	Identifier	isWindow		674055	1					
ANR	674071	ArgumentList			674055	1					
ANR	674072	CompoundStatement		2:40:41:41	674055	1					
ANR	674073	ReturnStatement	return ;	102:8:2588:2594	674055	0	True				
ANR	674074	ExpressionStatement	d -> m_windows [ window ] = enabledBorders	105:4:2607:2644	674055	1	True				
ANR	674075	AssignmentExpression	d -> m_windows [ window ] = enabledBorders		674055	0		=			
ANR	674076	ArrayIndexing	d -> m_windows [ window ]		674055	0					
ANR	674077	PtrMemberAccess	d -> m_windows		674055	0					
ANR	674078	Identifier	d		674055	0					
ANR	674079	Identifier	m_windows		674055	1					
ANR	674080	Identifier	window		674055	1					
ANR	674081	Identifier	enabledBorders		674055	1					
ANR	674082	ExpressionStatement	"d -> updateShadow ( window , enabledBorders )"	106:4:2650:2689	674055	2	True				
ANR	674083	CallExpression	"d -> updateShadow ( window , enabledBorders )"		674055	0					
ANR	674084	Callee	d -> updateShadow		674055	0					
ANR	674085	PtrMemberAccess	d -> updateShadow		674055	0					
ANR	674086	Identifier	d		674055	0					
ANR	674087	Identifier	updateShadow		674055	1					
ANR	674088	ArgumentList	window		674055	1					
ANR	674089	Argument	window		674055	0					
ANR	674090	Identifier	window		674055	0					
ANR	674091	Argument	enabledBorders		674055	1					
ANR	674092	Identifier	enabledBorders		674055	0					
ANR	674093	Statement	connect	107:4:2695:2701	674055	3	True				
ANR	674094	Statement	(	107:11:2702:2702	674055	4	True				
ANR	674095	Statement	window	107:12:2703:2708	674055	5	True				
ANR	674096	Statement	","	107:18:2709:2709	674055	6	True				
ANR	674097	Statement	SIGNAL	107:20:2711:2716	674055	7	True				
ANR	674098	Statement	(	107:26:2717:2717	674055	8	True				
ANR	674099	Statement	destroyed	107:27:2718:2726	674055	9	True				
ANR	674100	Statement	(	107:36:2727:2727	674055	10	True				
ANR	674101	Statement	QObject	107:37:2728:2734	674055	11	True				
ANR	674102	Statement	*	107:44:2735:2735	674055	12	True				
ANR	674103	Statement	)	107:45:2736:2736	674055	13	True				
ANR	674104	Statement	)	107:46:2737:2737	674055	14	True				
ANR	674105	Statement	","	107:47:2738:2738	674055	15	True				
ANR	674106	Statement	this	108:12:2752:2755	674055	16	True				
ANR	674107	Statement	","	108:16:2756:2756	674055	17	True				
ANR	674108	Statement	SLOT	108:18:2758:2761	674055	18	True				
ANR	674109	Statement	(	108:22:2762:2762	674055	19	True				
ANR	674110	Statement	windowDestroyed	108:23:2763:2777	674055	20	True				
ANR	674111	Statement	(	108:38:2778:2778	674055	21	True				
ANR	674112	Statement	QObject	108:39:2779:2785	674055	22	True				
ANR	674113	Statement	*	108:46:2786:2786	674055	23	True				
ANR	674114	Statement	)	108:47:2787:2787	674055	24	True				
ANR	674115	Statement	)	108:48:2788:2788	674055	25	True				
ANR	674116	Statement	","	108:49:2789:2789	674055	26	True				
ANR	674117	Statement	Qt	108:51:2791:2792	674055	27	True				
ANR	674118	Statement	::	108:53:2793:2794	674055	28	True				
ANR	674119	Statement	UniqueConnection	108:55:2795:2810	674055	29	True				
ANR	674120	Statement	)	108:71:2811:2811	674055	30	True				
ANR	674121	ExpressionStatement		108:72:2812:2812	674055	31	True				
ANR	674122	ReturnType	void		674055	1					
ANR	674123	Identifier	Shadows :: addWindow		674055	2					
ANR	674124	ParameterList	"const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders"		674055	3					
ANR	674125	Parameter	const QWidget * window	99:24:2464:2484	674055	0	True				
ANR	674126	ParameterType	const QWidget *		674055	0					
ANR	674127	Identifier	window		674055	1					
ANR	674128	Parameter	Plasma :: FrameSvg :: EnabledBorders enabledBorders	99:47:2487:2533	674055	1	True				
ANR	674129	ParameterType	Plasma :: FrameSvg :: EnabledBorders		674055	0					
ANR	674130	Identifier	enabledBorders		674055	1					
ANR	674131	CFGEntryNode	ENTRY		674055		True				
ANR	674132	CFGExitNode	EXIT		674055		True				
ANR	674133	Symbol	window -> isWindow		674055						
ANR	674134	Symbol	* window		674055						
ANR	674135	Symbol	enabledBorders		674055						
ANR	674136	Symbol	d		674055						
ANR	674137	Symbol	* * d		674055						
ANR	674138	Symbol	* d -> m_windows		674055						
ANR	674139	Symbol	window		674055						
ANR	674140	Symbol	* d		674055						
ANR	674141	Symbol	d -> m_windows		674055						
ANR	674142	Function	Shadows :: removeWindow	111:0:2817:3099							
ANR	674143	FunctionDef	Shadows :: removeWindow (const QWidget * window)		674142	0					
ANR	674144	CompoundStatement		112:0:2867:3099	674142	0					
ANR	674145	IfStatement	if ( ! d -> m_windows . contains ( window ) )		674142	0					
ANR	674146	Condition	! d -> m_windows . contains ( window )	113:8:2877:2906	674142	0	True				
ANR	674147	UnaryOperationExpression	! d -> m_windows . contains ( window )		674142	0					
ANR	674148	UnaryOperator	!		674142	0					
ANR	674149	CallExpression	d -> m_windows . contains ( window )		674142	1					
ANR	674150	Callee	d -> m_windows . contains		674142	0					
ANR	674151	MemberAccess	d -> m_windows . contains		674142	0					
ANR	674152	PtrMemberAccess	d -> m_windows		674142	0					
ANR	674153	Identifier	d		674142	0					
ANR	674154	Identifier	m_windows		674142	1					
ANR	674155	Identifier	contains		674142	1					
ANR	674156	ArgumentList	window		674142	1					
ANR	674157	Argument	window		674142	0					
ANR	674158	Identifier	window		674142	0					
ANR	674159	CompoundStatement		2:40:41:41	674142	1					
ANR	674160	ReturnStatement	return ;	114:8:2919:2925	674142	0	True				
ANR	674161	ExpressionStatement	d -> m_windows . remove ( window )	117:4:2938:2965	674142	1	True				
ANR	674162	CallExpression	d -> m_windows . remove ( window )		674142	0					
ANR	674163	Callee	d -> m_windows . remove		674142	0					
ANR	674164	MemberAccess	d -> m_windows . remove		674142	0					
ANR	674165	PtrMemberAccess	d -> m_windows		674142	0					
ANR	674166	Identifier	d		674142	0					
ANR	674167	Identifier	m_windows		674142	1					
ANR	674168	Identifier	remove		674142	1					
ANR	674169	ArgumentList	window		674142	1					
ANR	674170	Argument	window		674142	0					
ANR	674171	Identifier	window		674142	0					
ANR	674172	ExpressionStatement	"disconnect ( window , 0 , this , 0 )"	118:4:2971:3001	674142	2	True				
ANR	674173	CallExpression	"disconnect ( window , 0 , this , 0 )"		674142	0					
ANR	674174	Callee	disconnect		674142	0					
ANR	674175	Identifier	disconnect		674142	0					
ANR	674176	ArgumentList	window		674142	1					
ANR	674177	Argument	window		674142	0					
ANR	674178	Identifier	window		674142	0					
ANR	674179	Argument	0		674142	1					
ANR	674180	PrimaryExpression	0		674142	0					
ANR	674181	Argument	this		674142	2					
ANR	674182	Identifier	this		674142	0					
ANR	674183	Argument	0		674142	3					
ANR	674184	PrimaryExpression	0		674142	0					
ANR	674185	ExpressionStatement	d -> clearShadow ( window )	119:4:3007:3029	674142	3	True				
ANR	674186	CallExpression	d -> clearShadow ( window )		674142	0					
ANR	674187	Callee	d -> clearShadow		674142	0					
ANR	674188	PtrMemberAccess	d -> clearShadow		674142	0					
ANR	674189	Identifier	d		674142	0					
ANR	674190	Identifier	clearShadow		674142	1					
ANR	674191	ArgumentList	window		674142	1					
ANR	674192	Argument	window		674142	0					
ANR	674193	Identifier	window		674142	0					
ANR	674194	IfStatement	if ( d -> m_windows . isEmpty ( ) )		674142	4					
ANR	674195	Condition	d -> m_windows . isEmpty ( )	121:8:3040:3061	674142	0	True				
ANR	674196	CallExpression	d -> m_windows . isEmpty ( )		674142	0					
ANR	674197	Callee	d -> m_windows . isEmpty		674142	0					
ANR	674198	MemberAccess	d -> m_windows . isEmpty		674142	0					
ANR	674199	PtrMemberAccess	d -> m_windows		674142	0					
ANR	674200	Identifier	d		674142	0					
ANR	674201	Identifier	m_windows		674142	1					
ANR	674202	Identifier	isEmpty		674142	1					
ANR	674203	ArgumentList			674142	1					
ANR	674204	CompoundStatement		10:32:196:196	674142	1					
ANR	674205	ExpressionStatement	d -> clearPixmaps ( )	122:8:3074:3091	674142	0	True				
ANR	674206	CallExpression	d -> clearPixmaps ( )		674142	0					
ANR	674207	Callee	d -> clearPixmaps		674142	0					
ANR	674208	PtrMemberAccess	d -> clearPixmaps		674142	0					
ANR	674209	Identifier	d		674142	0					
ANR	674210	Identifier	clearPixmaps		674142	1					
ANR	674211	ArgumentList			674142	1					
ANR	674212	ReturnType	void		674142	1					
ANR	674213	Identifier	Shadows :: removeWindow		674142	2					
ANR	674214	ParameterList	const QWidget * window		674142	3					
ANR	674215	Parameter	const QWidget * window	111:27:2844:2864	674142	0	True				
ANR	674216	ParameterType	const QWidget *		674142	0					
ANR	674217	Identifier	window		674142	1					
ANR	674218	CFGEntryNode	ENTRY		674142		True				
ANR	674219	CFGExitNode	EXIT		674142		True				
ANR	674220	Symbol	d		674142						
ANR	674221	Symbol	this		674142						
ANR	674222	Symbol	d -> m_windows . isEmpty		674142						
ANR	674223	Symbol	window		674142						
ANR	674224	Symbol	d -> m_windows . contains		674142						
ANR	674225	Symbol	* d		674142						
ANR	674226	Symbol	d -> m_windows		674142						
ANR	674227	Function	Shadows :: Private :: windowDestroyed	126:0:3102:3290							
ANR	674228	FunctionDef	Shadows :: Private :: windowDestroyed (QObject * deletedObject)		674227	0					
ANR	674229	CompoundStatement		127:0:3165:3290	674227	0					
ANR	674230	Statement	m_windows	128:4:3171:3179	674227	0	True				
ANR	674231	Statement	.	128:13:3180:3180	674227	1	True				
ANR	674232	Statement	remove	128:14:3181:3186	674227	2	True				
ANR	674233	Statement	(	128:20:3187:3187	674227	3	True				
ANR	674234	Statement	static_cast	128:21:3188:3198	674227	4	True				
ANR	674235	Statement	<	128:32:3199:3199	674227	5	True				
ANR	674236	Statement	QWidget	128:33:3200:3206	674227	6	True				
ANR	674237	Statement	*	128:41:3208:3208	674227	7	True				
ANR	674238	Statement	>	128:42:3209:3209	674227	8	True				
ANR	674239	Statement	(	128:43:3210:3210	674227	9	True				
ANR	674240	Statement	deletedObject	128:44:3211:3223	674227	10	True				
ANR	674241	Statement	)	128:57:3224:3224	674227	11	True				
ANR	674242	Statement	)	128:58:3225:3225	674227	12	True				
ANR	674243	ExpressionStatement		128:59:3226:3226	674227	13	True				
ANR	674244	IfStatement	if ( m_windows . isEmpty ( ) )		674227	14					
ANR	674245	Condition	m_windows . isEmpty ( )	130:8:3237:3255	674227	0	True				
ANR	674246	CallExpression	m_windows . isEmpty ( )		674227	0					
ANR	674247	Callee	m_windows . isEmpty		674227	0					
ANR	674248	MemberAccess	m_windows . isEmpty		674227	0					
ANR	674249	Identifier	m_windows		674227	0					
ANR	674250	Identifier	isEmpty		674227	1					
ANR	674251	ArgumentList			674227	1					
ANR	674252	CompoundStatement		4:29:92:92	674227	1					
ANR	674253	ExpressionStatement	clearPixmaps ( )	131:8:3268:3282	674227	0	True				
ANR	674254	CallExpression	clearPixmaps ( )		674227	0					
ANR	674255	Callee	clearPixmaps		674227	0					
ANR	674256	Identifier	clearPixmaps		674227	0					
ANR	674257	ArgumentList			674227	1					
ANR	674258	ReturnType	void		674227	1					
ANR	674259	Identifier	Shadows :: Private :: windowDestroyed		674227	2					
ANR	674260	ParameterList	QObject * deletedObject		674227	3					
ANR	674261	Parameter	QObject * deletedObject	126:39:3141:3162	674227	0	True				
ANR	674262	ParameterType	QObject *		674227	0					
ANR	674263	Identifier	deletedObject		674227	1					
ANR	674264	CFGEntryNode	ENTRY		674227		True				
ANR	674265	CFGExitNode	EXIT		674227		True				
ANR	674266	Symbol	m_windows		674227						
ANR	674267	Symbol	m_windows . isEmpty		674227						
ANR	674268	Symbol	deletedObject		674227						
ANR	674269	Function	Shadows :: Private :: updateShadows	135:0:3293:3553							
ANR	674270	FunctionDef	Shadows :: Private :: updateShadows ()		674269	0					
ANR	674271	CompoundStatement		136:0:3332:3553	674269	0					
ANR	674272	ExpressionStatement	setupPixmaps ( )	137:4:3338:3352	674269	0	True				
ANR	674273	CallExpression	setupPixmaps ( )		674269	0					
ANR	674274	Callee	setupPixmaps		674269	0					
ANR	674275	Identifier	setupPixmaps		674269	0					
ANR	674276	ArgumentList			674269	1					
ANR	674277	IdentifierDeclStatement	"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders > :: const_iterator i ;"	138:4:3358:3432	674269	1	True				
ANR	674278	IdentifierDecl	i		674269	0					
ANR	674279	IdentifierDeclType	"QHash < const QWidget * , Plasma :: FrameSvg :: EnabledBorders > :: const_iterator"		674269	0					
ANR	674280	Identifier	i		674269	1					
ANR	674281	ForStatement	for ( i = m_windows . constBegin ( ) ; i != m_windows . constEnd ( ) ; ++ i )		674269	2					
ANR	674282	ForInit	i = m_windows . constBegin ( ) ;	139:9:3443:3469	674269	0	True				
ANR	674283	AssignmentExpression	i = m_windows . constBegin ( )		674269	0		=			
ANR	674284	Identifier	i		674269	0					
ANR	674285	CallExpression	m_windows . constBegin ( )		674269	1					
ANR	674286	Callee	m_windows . constBegin		674269	0					
ANR	674287	MemberAccess	m_windows . constBegin		674269	0					
ANR	674288	Identifier	m_windows		674269	0					
ANR	674289	Identifier	constBegin		674269	1					
ANR	674290	ArgumentList			674269	1					
ANR	674291	Condition	i != m_windows . constEnd ( )	139:37:3471:3495	674269	1	True				
ANR	674292	EqualityExpression	i != m_windows . constEnd ( )		674269	0		!=			
ANR	674293	Identifier	i		674269	0					
ANR	674294	CallExpression	m_windows . constEnd ( )		674269	1					
ANR	674295	Callee	m_windows . constEnd		674269	0					
ANR	674296	MemberAccess	m_windows . constEnd		674269	0					
ANR	674297	Identifier	m_windows		674269	0					
ANR	674298	Identifier	constEnd		674269	1					
ANR	674299	ArgumentList			674269	1					
ANR	674300	UnaryExpression	++ i	139:64:3498:3500	674269	2	True				
ANR	674301	IncDec	++		674269	0					
ANR	674302	Identifier	i		674269	1					
ANR	674303	CompoundStatement		4:69:170:170	674269	3					
ANR	674304	ExpressionStatement	"updateShadow ( i . key ( ) , i . value ( ) )"	140:8:3513:3545	674269	0	True				
ANR	674305	CallExpression	"updateShadow ( i . key ( ) , i . value ( ) )"		674269	0					
ANR	674306	Callee	updateShadow		674269	0					
ANR	674307	Identifier	updateShadow		674269	0					
ANR	674308	ArgumentList	i . key ( )		674269	1					
ANR	674309	Argument	i . key ( )		674269	0					
ANR	674310	CallExpression	i . key ( )		674269	0					
ANR	674311	Callee	i . key		674269	0					
ANR	674312	MemberAccess	i . key		674269	0					
ANR	674313	Identifier	i		674269	0					
ANR	674314	Identifier	key		674269	1					
ANR	674315	ArgumentList			674269	1					
ANR	674316	Argument	i . value ( )		674269	1					
ANR	674317	CallExpression	i . value ( )		674269	0					
ANR	674318	Callee	i . value		674269	0					
ANR	674319	MemberAccess	i . value		674269	0					
ANR	674320	Identifier	i		674269	0					
ANR	674321	Identifier	value		674269	1					
ANR	674322	ArgumentList			674269	1					
ANR	674323	ReturnType	void		674269	1					
ANR	674324	Identifier	Shadows :: Private :: updateShadows		674269	2					
ANR	674325	ParameterList			674269	3					
ANR	674326	CFGEntryNode	ENTRY		674269		True				
ANR	674327	CFGExitNode	EXIT		674269		True				
ANR	674328	Symbol	m_windows		674269						
ANR	674329	Symbol	i . value		674269						
ANR	674330	Symbol	m_windows . constEnd		674269						
ANR	674331	Symbol	m_windows . constBegin		674269						
ANR	674332	Symbol	i . key		674269						
ANR	674333	Symbol	i		674269						
ANR	674334	Function	Shadows :: Private :: initPixmap	144:0:3556:4151							
ANR	674335	FunctionDef	Shadows :: Private :: initPixmap (const QString & element)		674334	0					
ANR	674336	CompoundStatement		145:0:3614:4151	674334	0					
ANR	674337	IdentifierDeclStatement	QPixmap pix = q -> pixmap ( element ) ;	147:4:3636:3668	674334	0	True				
ANR	674338	IdentifierDecl	pix = q -> pixmap ( element )		674334	0					
ANR	674339	IdentifierDeclType	QPixmap		674334	0					
ANR	674340	Identifier	pix		674334	1					
ANR	674341	AssignmentExpression	pix = q -> pixmap ( element )		674334	2		=			
ANR	674342	Identifier	pix		674334	0					
ANR	674343	CallExpression	q -> pixmap ( element )		674334	1					
ANR	674344	Callee	q -> pixmap		674334	0					
ANR	674345	PtrMemberAccess	q -> pixmap		674334	0					
ANR	674346	Identifier	q		674334	0					
ANR	674347	Identifier	pixmap		674334	1					
ANR	674348	ArgumentList	element		674334	1					
ANR	674349	Argument	element		674334	0					
ANR	674350	Identifier	element		674334	0					
ANR	674351	IfStatement	if ( ! pix . isNull ( ) && pix . handle ( ) == 0 )		674334	1					
ANR	674352	Condition	! pix . isNull ( ) && pix . handle ( ) == 0	148:8:3678:3711	674334	0	True				
ANR	674353	AndExpression	! pix . isNull ( ) && pix . handle ( ) == 0		674334	0		&&			
ANR	674354	UnaryOperationExpression	! pix . isNull ( )		674334	0					
ANR	674355	UnaryOperator	!		674334	0					
ANR	674356	CallExpression	pix . isNull ( )		674334	1					
ANR	674357	Callee	pix . isNull		674334	0					
ANR	674358	MemberAccess	pix . isNull		674334	0					
ANR	674359	Identifier	pix		674334	0					
ANR	674360	Identifier	isNull		674334	1					
ANR	674361	ArgumentList			674334	1					
ANR	674362	EqualityExpression	pix . handle ( ) == 0		674334	1		==			
ANR	674363	CallExpression	pix . handle ( )		674334	0					
ANR	674364	Callee	pix . handle		674334	0					
ANR	674365	MemberAccess	pix . handle		674334	0					
ANR	674366	Identifier	pix		674334	0					
ANR	674367	Identifier	handle		674334	1					
ANR	674368	ArgumentList			674334	1					
ANR	674369	PrimaryExpression	0		674334	1					
ANR	674370	CompoundStatement		8:8:347:367	674334	1					
ANR	674371	IdentifierDeclStatement	"Pixmap xPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 ) ;"	149:8:3724:3830	674334	0	True				
ANR	674372	IdentifierDecl	"xPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 )"		674334	0					
ANR	674373	IdentifierDeclType	Pixmap		674334	0					
ANR	674374	Identifier	xPix		674334	1					
ANR	674375	AssignmentExpression	"xPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 )"		674334	2		=			
ANR	674376	Identifier	xPix		674334	0					
ANR	674377	CallExpression	"XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , pix . width ( ) , pix . height ( ) , 32 )"		674334	1					
ANR	674378	Callee	XCreatePixmap		674334	0					
ANR	674379	Identifier	XCreatePixmap		674334	0					
ANR	674380	ArgumentList	QX11Info :: display ( )		674334	1					
ANR	674381	Argument	QX11Info :: display ( )		674334	0					
ANR	674382	CallExpression	QX11Info :: display ( )		674334	0					
ANR	674383	Callee	QX11Info :: display		674334	0					
ANR	674384	Identifier	QX11Info :: display		674334	0					
ANR	674385	ArgumentList			674334	1					
ANR	674386	Argument	QX11Info :: appRootWindow ( )		674334	1					
ANR	674387	CallExpression	QX11Info :: appRootWindow ( )		674334	0					
ANR	674388	Callee	QX11Info :: appRootWindow		674334	0					
ANR	674389	Identifier	QX11Info :: appRootWindow		674334	0					
ANR	674390	ArgumentList			674334	1					
ANR	674391	Argument	pix . width ( )		674334	2					
ANR	674392	CallExpression	pix . width ( )		674334	0					
ANR	674393	Callee	pix . width		674334	0					
ANR	674394	MemberAccess	pix . width		674334	0					
ANR	674395	Identifier	pix		674334	0					
ANR	674396	Identifier	width		674334	1					
ANR	674397	ArgumentList			674334	1					
ANR	674398	Argument	pix . height ( )		674334	3					
ANR	674399	CallExpression	pix . height ( )		674334	0					
ANR	674400	Callee	pix . height		674334	0					
ANR	674401	MemberAccess	pix . height		674334	0					
ANR	674402	Identifier	pix		674334	0					
ANR	674403	Identifier	height		674334	1					
ANR	674404	ArgumentList			674334	1					
ANR	674405	Argument	32		674334	4					
ANR	674406	PrimaryExpression	32		674334	0					
ANR	674407	IdentifierDeclStatement	"QPixmap tempPix = QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared ) ;"	150:8:3840:3913	674334	1	True				
ANR	674408	IdentifierDecl	"tempPix = QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared )"		674334	0					
ANR	674409	IdentifierDeclType	QPixmap		674334	0					
ANR	674410	Identifier	tempPix		674334	1					
ANR	674411	AssignmentExpression	"tempPix = QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared )"		674334	2		=			
ANR	674412	Identifier	tempPix		674334	0					
ANR	674413	CallExpression	"QPixmap :: fromX11Pixmap ( xPix , QPixmap :: ExplicitlyShared )"		674334	1					
ANR	674414	Callee	QPixmap :: fromX11Pixmap		674334	0					
ANR	674415	Identifier	QPixmap :: fromX11Pixmap		674334	0					
ANR	674416	ArgumentList	xPix		674334	1					
ANR	674417	Argument	xPix		674334	0					
ANR	674418	Identifier	xPix		674334	0					
ANR	674419	Argument	QPixmap :: ExplicitlyShared		674334	1					
ANR	674420	Identifier	QPixmap :: ExplicitlyShared		674334	0					
ANR	674421	ExpressionStatement	tempPix . fill ( Qt :: transparent )	151:8:3923:3952	674334	2	True				
ANR	674422	CallExpression	tempPix . fill ( Qt :: transparent )		674334	0					
ANR	674423	Callee	tempPix . fill		674334	0					
ANR	674424	MemberAccess	tempPix . fill		674334	0					
ANR	674425	Identifier	tempPix		674334	0					
ANR	674426	Identifier	fill		674334	1					
ANR	674427	ArgumentList	Qt :: transparent		674334	1					
ANR	674428	Argument	Qt :: transparent		674334	0					
ANR	674429	Identifier	Qt :: transparent		674334	0					
ANR	674430	IdentifierDeclStatement	QPainter p ( & tempPix ) ;	152:8:3962:3982	674334	3	True				
ANR	674431	IdentifierDecl	p ( & tempPix )		674334	0					
ANR	674432	IdentifierDeclType	QPainter		674334	0					
ANR	674433	Identifier	p		674334	1					
ANR	674434	UnaryOperationExpression	& tempPix		674334	2					
ANR	674435	UnaryOperator	&		674334	0					
ANR	674436	Identifier	tempPix		674334	1					
ANR	674437	ExpressionStatement	"p . drawPixmap ( QPoint ( 0 , 0 ) , pix )"	153:8:3992:4023	674334	4	True				
ANR	674438	CallExpression	"p . drawPixmap ( QPoint ( 0 , 0 ) , pix )"		674334	0					
ANR	674439	Callee	p . drawPixmap		674334	0					
ANR	674440	MemberAccess	p . drawPixmap		674334	0					
ANR	674441	Identifier	p		674334	0					
ANR	674442	Identifier	drawPixmap		674334	1					
ANR	674443	ArgumentList	"QPoint ( 0 , 0 )"		674334	1					
ANR	674444	Argument	"QPoint ( 0 , 0 )"		674334	0					
ANR	674445	CallExpression	"QPoint ( 0 , 0 )"		674334	0					
ANR	674446	Callee	QPoint		674334	0					
ANR	674447	Identifier	QPoint		674334	0					
ANR	674448	ArgumentList	0		674334	1					
ANR	674449	Argument	0		674334	0					
ANR	674450	PrimaryExpression	0		674334	0					
ANR	674451	Argument	0		674334	1					
ANR	674452	PrimaryExpression	0		674334	0					
ANR	674453	Argument	pix		674334	1					
ANR	674454	Identifier	pix		674334	0					
ANR	674455	ExpressionStatement	m_shadowPixmaps << tempPix	154:8:4033:4059	674334	5	True				
ANR	674456	ShiftExpression	m_shadowPixmaps << tempPix		674334	0		<<			
ANR	674457	Identifier	m_shadowPixmaps		674334	0					
ANR	674458	Identifier	tempPix		674334	1					
ANR	674459	ExpressionStatement	m_managePixmaps = true	155:8:4069:4091	674334	6	True				
ANR	674460	AssignmentExpression	m_managePixmaps = true		674334	0		=			
ANR	674461	Identifier	m_managePixmaps		674334	0					
ANR	674462	Identifier	true		674334	1					
ANR	674463	ElseStatement	else		674334	0					
ANR	674464	CompoundStatement		12:11:489:489	674334	0					
ANR	674465	ExpressionStatement	m_shadowPixmaps << pix	157:8:4114:4136	674334	0	True				
ANR	674466	ShiftExpression	m_shadowPixmaps << pix		674334	0		<<			
ANR	674467	Identifier	m_shadowPixmaps		674334	0					
ANR	674468	Identifier	pix		674334	1					
ANR	674469	ReturnType	void		674334	1					
ANR	674470	Identifier	Shadows :: Private :: initPixmap		674334	2					
ANR	674471	ParameterList	const QString & element		674334	3					
ANR	674472	Parameter	const QString & element	144:34:3590:3611	674334	0	True				
ANR	674473	ParameterType	const QString &		674334	0					
ANR	674474	Identifier	element		674334	1					
ANR	674475	CFGEntryNode	ENTRY		674334		True				
ANR	674476	CFGExitNode	EXIT		674334		True				
ANR	674477	Symbol	pix . isNull		674334						
ANR	674478	Symbol	QPixmap :: fromX11Pixmap		674334						
ANR	674479	Symbol	QPixmap :: ExplicitlyShared		674334						
ANR	674480	Symbol	m_managePixmaps		674334						
ANR	674481	Symbol	q -> pixmap		674334						
ANR	674482	Symbol	Qt :: transparent		674334						
ANR	674483	Symbol	tempPix		674334						
ANR	674484	Symbol	pix . width		674334						
ANR	674485	Symbol	pix . height		674334						
ANR	674486	Symbol	QPoint		674334						
ANR	674487	Symbol	QX11Info :: appRootWindow		674334						
ANR	674488	Symbol	xPix		674334						
ANR	674489	Symbol	p		674334						
ANR	674490	Symbol	q		674334						
ANR	674491	Symbol	QX11Info :: display		674334						
ANR	674492	Symbol	XCreatePixmap		674334						
ANR	674493	Symbol	true		674334						
ANR	674494	Symbol	* q		674334						
ANR	674495	Symbol	pix . handle		674334						
ANR	674496	Symbol	pix		674334						
ANR	674497	Symbol	element		674334						
ANR	674498	Function	Shadows :: Private :: initEmptyPixmap	162:0:4154:4490							
ANR	674499	FunctionDef	Shadows :: Private :: initEmptyPixmap (const QSize & size)		674498	0					
ANR	674500	CompoundStatement		163:0:4215:4490	674498	0					
ANR	674501	IdentifierDeclStatement	"Pixmap emptyXPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 ) ;"	164:4:4221:4334	674498	0	True				
ANR	674502	IdentifierDecl	"emptyXPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 )"		674498	0					
ANR	674503	IdentifierDeclType	Pixmap		674498	0					
ANR	674504	Identifier	emptyXPix		674498	1					
ANR	674505	AssignmentExpression	"emptyXPix = XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 )"		674498	2		=			
ANR	674506	Identifier	emptyXPix		674498	0					
ANR	674507	CallExpression	"XCreatePixmap ( QX11Info :: display ( ) , QX11Info :: appRootWindow ( ) , size . width ( ) , size . height ( ) , 32 )"		674498	1					
ANR	674508	Callee	XCreatePixmap		674498	0					
ANR	674509	Identifier	XCreatePixmap		674498	0					
ANR	674510	ArgumentList	QX11Info :: display ( )		674498	1					
ANR	674511	Argument	QX11Info :: display ( )		674498	0					
ANR	674512	CallExpression	QX11Info :: display ( )		674498	0					
ANR	674513	Callee	QX11Info :: display		674498	0					
ANR	674514	Identifier	QX11Info :: display		674498	0					
ANR	674515	ArgumentList			674498	1					
ANR	674516	Argument	QX11Info :: appRootWindow ( )		674498	1					
ANR	674517	CallExpression	QX11Info :: appRootWindow ( )		674498	0					
ANR	674518	Callee	QX11Info :: appRootWindow		674498	0					
ANR	674519	Identifier	QX11Info :: appRootWindow		674498	0					
ANR	674520	ArgumentList			674498	1					
ANR	674521	Argument	size . width ( )		674498	2					
ANR	674522	CallExpression	size . width ( )		674498	0					
ANR	674523	Callee	size . width		674498	0					
ANR	674524	MemberAccess	size . width		674498	0					
ANR	674525	Identifier	size		674498	0					
ANR	674526	Identifier	width		674498	1					
ANR	674527	ArgumentList			674498	1					
ANR	674528	Argument	size . height ( )		674498	3					
ANR	674529	CallExpression	size . height ( )		674498	0					
ANR	674530	Callee	size . height		674498	0					
ANR	674531	MemberAccess	size . height		674498	0					
ANR	674532	Identifier	size		674498	0					
ANR	674533	Identifier	height		674498	1					
ANR	674534	ArgumentList			674498	1					
ANR	674535	Argument	32		674498	4					
ANR	674536	PrimaryExpression	32		674498	0					
ANR	674537	IdentifierDeclStatement	"QPixmap tempEmptyPix = QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared ) ;"	165:4:4340:4423	674498	1	True				
ANR	674538	IdentifierDecl	"tempEmptyPix = QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared )"		674498	0					
ANR	674539	IdentifierDeclType	QPixmap		674498	0					
ANR	674540	Identifier	tempEmptyPix		674498	1					
ANR	674541	AssignmentExpression	"tempEmptyPix = QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared )"		674498	2		=			
ANR	674542	Identifier	tempEmptyPix		674498	0					
ANR	674543	CallExpression	"QPixmap :: fromX11Pixmap ( emptyXPix , QPixmap :: ExplicitlyShared )"		674498	1					
ANR	674544	Callee	QPixmap :: fromX11Pixmap		674498	0					
ANR	674545	Identifier	QPixmap :: fromX11Pixmap		674498	0					
ANR	674546	ArgumentList	emptyXPix		674498	1					
ANR	674547	Argument	emptyXPix		674498	0					
ANR	674548	Identifier	emptyXPix		674498	0					
ANR	674549	Argument	QPixmap :: ExplicitlyShared		674498	1					
ANR	674550	Identifier	QPixmap :: ExplicitlyShared		674498	0					
ANR	674551	ExpressionStatement	tempEmptyPix . fill ( Qt :: transparent )	166:4:4429:4463	674498	2	True				
ANR	674552	CallExpression	tempEmptyPix . fill ( Qt :: transparent )		674498	0					
ANR	674553	Callee	tempEmptyPix . fill		674498	0					
ANR	674554	MemberAccess	tempEmptyPix . fill		674498	0					
ANR	674555	Identifier	tempEmptyPix		674498	0					
ANR	674556	Identifier	fill		674498	1					
ANR	674557	ArgumentList	Qt :: transparent		674498	1					
ANR	674558	Argument	Qt :: transparent		674498	0					
ANR	674559	Identifier	Qt :: transparent		674498	0					
ANR	674560	ReturnStatement	return tempEmptyPix ;	167:4:4469:4488	674498	3	True				
ANR	674561	Identifier	tempEmptyPix		674498	0					
ANR	674562	ReturnType	QPixmap		674498	1					
ANR	674563	Identifier	Shadows :: Private :: initEmptyPixmap		674498	2					
ANR	674564	ParameterList	const QSize & size		674498	3					
ANR	674565	Parameter	const QSize & size	162:42:4196:4212	674498	0	True				
ANR	674566	ParameterType	const QSize &		674498	0					
ANR	674567	Identifier	size		674498	1					
ANR	674568	CFGEntryNode	ENTRY		674498		True				
ANR	674569	CFGExitNode	EXIT		674498		True				
ANR	674570	Symbol	QX11Info :: display		674498						
ANR	674571	Symbol	size . width		674498						
ANR	674572	Symbol	QPixmap :: fromX11Pixmap		674498						
ANR	674573	Symbol	size		674498						
ANR	674574	Symbol	QPixmap :: ExplicitlyShared		674498						
ANR	674575	Symbol	tempEmptyPix		674498						
ANR	674576	Symbol	XCreatePixmap		674498						
ANR	674577	Symbol	emptyXPix		674498						
ANR	674578	Symbol	Qt :: transparent		674498						
ANR	674579	Symbol	size . height		674498						
ANR	674580	Symbol	QX11Info :: appRootWindow		674498						
ANR	674581	Function	Shadows :: Private :: setupPixmaps	170:0:4493:5457							
ANR	674582	FunctionDef	Shadows :: Private :: setupPixmaps ()		674581	0					
ANR	674583	CompoundStatement		171:0:4531:5457	674581	0					
ANR	674584	ExpressionStatement	clearPixmaps ( )	172:4:4537:4551	674581	0	True				
ANR	674585	CallExpression	clearPixmaps ( )		674581	0					
ANR	674586	Callee	clearPixmaps		674581	0					
ANR	674587	Identifier	clearPixmaps		674581	0					
ANR	674588	ArgumentList			674581	1					
ANR	674589	ExpressionStatement	"initPixmap ( ""shadow-top"" )"	173:4:4557:4581	674581	1	True				
ANR	674590	CallExpression	"initPixmap ( ""shadow-top"" )"		674581	0					
ANR	674591	Callee	initPixmap		674581	0					
ANR	674592	Identifier	initPixmap		674581	0					
ANR	674593	ArgumentList	"""shadow-top"""		674581	1					
ANR	674594	Argument	"""shadow-top"""		674581	0					
ANR	674595	PrimaryExpression	"""shadow-top"""		674581	0					
ANR	674596	ExpressionStatement	"initPixmap ( ""shadow-topright"" )"	174:4:4587:4616	674581	2	True				
ANR	674597	CallExpression	"initPixmap ( ""shadow-topright"" )"		674581	0					
ANR	674598	Callee	initPixmap		674581	0					
ANR	674599	Identifier	initPixmap		674581	0					
ANR	674600	ArgumentList	"""shadow-topright"""		674581	1					
ANR	674601	Argument	"""shadow-topright"""		674581	0					
ANR	674602	PrimaryExpression	"""shadow-topright"""		674581	0					
ANR	674603	ExpressionStatement	"initPixmap ( ""shadow-right"" )"	175:4:4622:4648	674581	3	True				
ANR	674604	CallExpression	"initPixmap ( ""shadow-right"" )"		674581	0					
ANR	674605	Callee	initPixmap		674581	0					
ANR	674606	Identifier	initPixmap		674581	0					
ANR	674607	ArgumentList	"""shadow-right"""		674581	1					
ANR	674608	Argument	"""shadow-right"""		674581	0					
ANR	674609	PrimaryExpression	"""shadow-right"""		674581	0					
ANR	674610	ExpressionStatement	"initPixmap ( ""shadow-bottomright"" )"	176:4:4654:4686	674581	4	True				
ANR	674611	CallExpression	"initPixmap ( ""shadow-bottomright"" )"		674581	0					
ANR	674612	Callee	initPixmap		674581	0					
ANR	674613	Identifier	initPixmap		674581	0					
ANR	674614	ArgumentList	"""shadow-bottomright"""		674581	1					
ANR	674615	Argument	"""shadow-bottomright"""		674581	0					
ANR	674616	PrimaryExpression	"""shadow-bottomright"""		674581	0					
ANR	674617	ExpressionStatement	"initPixmap ( ""shadow-bottom"" )"	177:4:4692:4719	674581	5	True				
ANR	674618	CallExpression	"initPixmap ( ""shadow-bottom"" )"		674581	0					
ANR	674619	Callee	initPixmap		674581	0					
ANR	674620	Identifier	initPixmap		674581	0					
ANR	674621	ArgumentList	"""shadow-bottom"""		674581	1					
ANR	674622	Argument	"""shadow-bottom"""		674581	0					
ANR	674623	PrimaryExpression	"""shadow-bottom"""		674581	0					
ANR	674624	ExpressionStatement	"initPixmap ( ""shadow-bottomleft"" )"	178:4:4725:4756	674581	6	True				
ANR	674625	CallExpression	"initPixmap ( ""shadow-bottomleft"" )"		674581	0					
ANR	674626	Callee	initPixmap		674581	0					
ANR	674627	Identifier	initPixmap		674581	0					
ANR	674628	ArgumentList	"""shadow-bottomleft"""		674581	1					
ANR	674629	Argument	"""shadow-bottomleft"""		674581	0					
ANR	674630	PrimaryExpression	"""shadow-bottomleft"""		674581	0					
ANR	674631	ExpressionStatement	"initPixmap ( ""shadow-left"" )"	179:4:4762:4787	674581	7	True				
ANR	674632	CallExpression	"initPixmap ( ""shadow-left"" )"		674581	0					
ANR	674633	Callee	initPixmap		674581	0					
ANR	674634	Identifier	initPixmap		674581	0					
ANR	674635	ArgumentList	"""shadow-left"""		674581	1					
ANR	674636	Argument	"""shadow-left"""		674581	0					
ANR	674637	PrimaryExpression	"""shadow-left"""		674581	0					
ANR	674638	ExpressionStatement	"initPixmap ( ""shadow-topleft"" )"	180:4:4793:4821	674581	8	True				
ANR	674639	CallExpression	"initPixmap ( ""shadow-topleft"" )"		674581	0					
ANR	674640	Callee	initPixmap		674581	0					
ANR	674641	Identifier	initPixmap		674581	0					
ANR	674642	ArgumentList	"""shadow-topleft"""		674581	1					
ANR	674643	Argument	"""shadow-topleft"""		674581	0					
ANR	674644	PrimaryExpression	"""shadow-topleft"""		674581	0					
ANR	674645	ExpressionStatement	"m_emptyCornerPix = initEmptyPixmap ( QSize ( 1 , 1 ) )"	182:4:4828:4874	674581	9	True				
ANR	674646	AssignmentExpression	"m_emptyCornerPix = initEmptyPixmap ( QSize ( 1 , 1 ) )"		674581	0		=			
ANR	674647	Identifier	m_emptyCornerPix		674581	0					
ANR	674648	CallExpression	"initEmptyPixmap ( QSize ( 1 , 1 ) )"		674581	1					
ANR	674649	Callee	initEmptyPixmap		674581	0					
ANR	674650	Identifier	initEmptyPixmap		674581	0					
ANR	674651	ArgumentList	"QSize ( 1 , 1 )"		674581	1					
ANR	674652	Argument	"QSize ( 1 , 1 )"		674581	0					
ANR	674653	CallExpression	"QSize ( 1 , 1 )"		674581	0					
ANR	674654	Callee	QSize		674581	0					
ANR	674655	Identifier	QSize		674581	0					
ANR	674656	ArgumentList	1		674581	1					
ANR	674657	Argument	1		674581	0					
ANR	674658	PrimaryExpression	1		674581	0					
ANR	674659	Argument	1		674581	1					
ANR	674660	PrimaryExpression	1		674581	0					
ANR	674661	ExpressionStatement	"m_emptyCornerLeftPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 ) )"	183:4:4880:4970	674581	10	True				
ANR	674662	AssignmentExpression	"m_emptyCornerLeftPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 ) )"		674581	0		=			
ANR	674663	Identifier	m_emptyCornerLeftPix		674581	0					
ANR	674664	CallExpression	"initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 ) )"		674581	1					
ANR	674665	Callee	initEmptyPixmap		674581	0					
ANR	674666	Identifier	initEmptyPixmap		674581	0					
ANR	674667	ArgumentList	"QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 )"		674581	1					
ANR	674668	Argument	"QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 )"		674581	0					
ANR	674669	CallExpression	"QSize ( q -> elementSize ( ""shadow-topleft"" ) . width ( ) , 1 )"		674581	0					
ANR	674670	Callee	QSize		674581	0					
ANR	674671	Identifier	QSize		674581	0					
ANR	674672	ArgumentList	"q -> elementSize ( ""shadow-topleft"" ) . width ( )"		674581	1					
ANR	674673	Argument	"q -> elementSize ( ""shadow-topleft"" ) . width ( )"		674581	0					
ANR	674674	CallExpression	"q -> elementSize ( ""shadow-topleft"" ) . width ( )"		674581	0					
ANR	674675	Callee	"q -> elementSize ( ""shadow-topleft"" ) . width"		674581	0					
ANR	674676	MemberAccess	"q -> elementSize ( ""shadow-topleft"" ) . width"		674581	0					
ANR	674677	CallExpression	"q -> elementSize ( ""shadow-topleft"" )"		674581	0					
ANR	674678	Callee	q -> elementSize		674581	0					
ANR	674679	PtrMemberAccess	q -> elementSize		674581	0					
ANR	674680	Identifier	q		674581	0					
ANR	674681	Identifier	elementSize		674581	1					
ANR	674682	ArgumentList	"""shadow-topleft"""		674581	1					
ANR	674683	Argument	"""shadow-topleft"""		674581	0					
ANR	674684	PrimaryExpression	"""shadow-topleft"""		674581	0					
ANR	674685	Identifier	width		674581	1					
ANR	674686	ArgumentList			674581	1					
ANR	674687	Argument	1		674581	1					
ANR	674688	PrimaryExpression	1		674581	0					
ANR	674689	ExpressionStatement	"m_emptyCornerTopPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) ) )"	184:4:4976:5066	674581	11	True				
ANR	674690	AssignmentExpression	"m_emptyCornerTopPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) ) )"		674581	0		=			
ANR	674691	Identifier	m_emptyCornerTopPix		674581	0					
ANR	674692	CallExpression	"initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) ) )"		674581	1					
ANR	674693	Callee	initEmptyPixmap		674581	0					
ANR	674694	Identifier	initEmptyPixmap		674581	0					
ANR	674695	ArgumentList	"QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) )"		674581	1					
ANR	674696	Argument	"QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) )"		674581	0					
ANR	674697	CallExpression	"QSize ( 1 , q -> elementSize ( ""shadow-topleft"" ) . height ( ) )"		674581	0					
ANR	674698	Callee	QSize		674581	0					
ANR	674699	Identifier	QSize		674581	0					
ANR	674700	ArgumentList	1		674581	1					
ANR	674701	Argument	1		674581	0					
ANR	674702	PrimaryExpression	1		674581	0					
ANR	674703	Argument	"q -> elementSize ( ""shadow-topleft"" ) . height ( )"		674581	1					
ANR	674704	CallExpression	"q -> elementSize ( ""shadow-topleft"" ) . height ( )"		674581	0					
ANR	674705	Callee	"q -> elementSize ( ""shadow-topleft"" ) . height"		674581	0					
ANR	674706	MemberAccess	"q -> elementSize ( ""shadow-topleft"" ) . height"		674581	0					
ANR	674707	CallExpression	"q -> elementSize ( ""shadow-topleft"" )"		674581	0					
ANR	674708	Callee	q -> elementSize		674581	0					
ANR	674709	PtrMemberAccess	q -> elementSize		674581	0					
ANR	674710	Identifier	q		674581	0					
ANR	674711	Identifier	elementSize		674581	1					
ANR	674712	ArgumentList	"""shadow-topleft"""		674581	1					
ANR	674713	Argument	"""shadow-topleft"""		674581	0					
ANR	674714	PrimaryExpression	"""shadow-topleft"""		674581	0					
ANR	674715	Identifier	height		674581	1					
ANR	674716	ArgumentList			674581	1					
ANR	674717	ExpressionStatement	"m_emptyCornerRightPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 ) )"	185:4:5072:5167	674581	12	True				
ANR	674718	AssignmentExpression	"m_emptyCornerRightPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 ) )"		674581	0		=			
ANR	674719	Identifier	m_emptyCornerRightPix		674581	0					
ANR	674720	CallExpression	"initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 ) )"		674581	1					
ANR	674721	Callee	initEmptyPixmap		674581	0					
ANR	674722	Identifier	initEmptyPixmap		674581	0					
ANR	674723	ArgumentList	"QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 )"		674581	1					
ANR	674724	Argument	"QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 )"		674581	0					
ANR	674725	CallExpression	"QSize ( q -> elementSize ( ""shadow-bottomright"" ) . width ( ) , 1 )"		674581	0					
ANR	674726	Callee	QSize		674581	0					
ANR	674727	Identifier	QSize		674581	0					
ANR	674728	ArgumentList	"q -> elementSize ( ""shadow-bottomright"" ) . width ( )"		674581	1					
ANR	674729	Argument	"q -> elementSize ( ""shadow-bottomright"" ) . width ( )"		674581	0					
ANR	674730	CallExpression	"q -> elementSize ( ""shadow-bottomright"" ) . width ( )"		674581	0					
ANR	674731	Callee	"q -> elementSize ( ""shadow-bottomright"" ) . width"		674581	0					
ANR	674732	MemberAccess	"q -> elementSize ( ""shadow-bottomright"" ) . width"		674581	0					
ANR	674733	CallExpression	"q -> elementSize ( ""shadow-bottomright"" )"		674581	0					
ANR	674734	Callee	q -> elementSize		674581	0					
ANR	674735	PtrMemberAccess	q -> elementSize		674581	0					
ANR	674736	Identifier	q		674581	0					
ANR	674737	Identifier	elementSize		674581	1					
ANR	674738	ArgumentList	"""shadow-bottomright"""		674581	1					
ANR	674739	Argument	"""shadow-bottomright"""		674581	0					
ANR	674740	PrimaryExpression	"""shadow-bottomright"""		674581	0					
ANR	674741	Identifier	width		674581	1					
ANR	674742	ArgumentList			674581	1					
ANR	674743	Argument	1		674581	1					
ANR	674744	PrimaryExpression	1		674581	0					
ANR	674745	ExpressionStatement	"m_emptyCornerBottomPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) ) )"	186:4:5173:5270	674581	13	True				
ANR	674746	AssignmentExpression	"m_emptyCornerBottomPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) ) )"		674581	0		=			
ANR	674747	Identifier	m_emptyCornerBottomPix		674581	0					
ANR	674748	CallExpression	"initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) ) )"		674581	1					
ANR	674749	Callee	initEmptyPixmap		674581	0					
ANR	674750	Identifier	initEmptyPixmap		674581	0					
ANR	674751	ArgumentList	"QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) )"		674581	1					
ANR	674752	Argument	"QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) )"		674581	0					
ANR	674753	CallExpression	"QSize ( 1 , q -> elementSize ( ""shadow-bottomright"" ) . height ( ) )"		674581	0					
ANR	674754	Callee	QSize		674581	0					
ANR	674755	Identifier	QSize		674581	0					
ANR	674756	ArgumentList	1		674581	1					
ANR	674757	Argument	1		674581	0					
ANR	674758	PrimaryExpression	1		674581	0					
ANR	674759	Argument	"q -> elementSize ( ""shadow-bottomright"" ) . height ( )"		674581	1					
ANR	674760	CallExpression	"q -> elementSize ( ""shadow-bottomright"" ) . height ( )"		674581	0					
ANR	674761	Callee	"q -> elementSize ( ""shadow-bottomright"" ) . height"		674581	0					
ANR	674762	MemberAccess	"q -> elementSize ( ""shadow-bottomright"" ) . height"		674581	0					
ANR	674763	CallExpression	"q -> elementSize ( ""shadow-bottomright"" )"		674581	0					
ANR	674764	Callee	q -> elementSize		674581	0					
ANR	674765	PtrMemberAccess	q -> elementSize		674581	0					
ANR	674766	Identifier	q		674581	0					
ANR	674767	Identifier	elementSize		674581	1					
ANR	674768	ArgumentList	"""shadow-bottomright"""		674581	1					
ANR	674769	Argument	"""shadow-bottomright"""		674581	0					
ANR	674770	PrimaryExpression	"""shadow-bottomright"""		674581	0					
ANR	674771	Identifier	height		674581	1					
ANR	674772	ArgumentList			674581	1					
ANR	674773	ExpressionStatement	"m_emptyVerticalPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) ) )"	187:4:5276:5362	674581	14	True				
ANR	674774	AssignmentExpression	"m_emptyVerticalPix = initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) ) )"		674581	0		=			
ANR	674775	Identifier	m_emptyVerticalPix		674581	0					
ANR	674776	CallExpression	"initEmptyPixmap ( QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) ) )"		674581	1					
ANR	674777	Callee	initEmptyPixmap		674581	0					
ANR	674778	Identifier	initEmptyPixmap		674581	0					
ANR	674779	ArgumentList	"QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) )"		674581	1					
ANR	674780	Argument	"QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) )"		674581	0					
ANR	674781	CallExpression	"QSize ( 1 , q -> elementSize ( ""shadow-left"" ) . height ( ) )"		674581	0					
ANR	674782	Callee	QSize		674581	0					
ANR	674783	Identifier	QSize		674581	0					
ANR	674784	ArgumentList	1		674581	1					
ANR	674785	Argument	1		674581	0					
ANR	674786	PrimaryExpression	1		674581	0					
ANR	674787	Argument	"q -> elementSize ( ""shadow-left"" ) . height ( )"		674581	1					
ANR	674788	CallExpression	"q -> elementSize ( ""shadow-left"" ) . height ( )"		674581	0					
ANR	674789	Callee	"q -> elementSize ( ""shadow-left"" ) . height"		674581	0					
ANR	674790	MemberAccess	"q -> elementSize ( ""shadow-left"" ) . height"		674581	0					
ANR	674791	CallExpression	"q -> elementSize ( ""shadow-left"" )"		674581	0					
ANR	674792	Callee	q -> elementSize		674581	0					
ANR	674793	PtrMemberAccess	q -> elementSize		674581	0					
ANR	674794	Identifier	q		674581	0					
ANR	674795	Identifier	elementSize		674581	1					
ANR	674796	ArgumentList	"""shadow-left"""		674581	1					
ANR	674797	Argument	"""shadow-left"""		674581	0					
ANR	674798	PrimaryExpression	"""shadow-left"""		674581	0					
ANR	674799	Identifier	height		674581	1					
ANR	674800	ArgumentList			674581	1					
ANR	674801	ExpressionStatement	"m_emptyHorizontalPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 ) )"	188:4:5368:5454	674581	15	True				
ANR	674802	AssignmentExpression	"m_emptyHorizontalPix = initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 ) )"		674581	0		=			
ANR	674803	Identifier	m_emptyHorizontalPix		674581	0					
ANR	674804	CallExpression	"initEmptyPixmap ( QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 ) )"		674581	1					
ANR	674805	Callee	initEmptyPixmap		674581	0					
ANR	674806	Identifier	initEmptyPixmap		674581	0					
ANR	674807	ArgumentList	"QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 )"		674581	1					
ANR	674808	Argument	"QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 )"		674581	0					
ANR	674809	CallExpression	"QSize ( q -> elementSize ( ""shadow-top"" ) . width ( ) , 1 )"		674581	0					
ANR	674810	Callee	QSize		674581	0					
ANR	674811	Identifier	QSize		674581	0					
ANR	674812	ArgumentList	"q -> elementSize ( ""shadow-top"" ) . width ( )"		674581	1					
ANR	674813	Argument	"q -> elementSize ( ""shadow-top"" ) . width ( )"		674581	0					
ANR	674814	CallExpression	"q -> elementSize ( ""shadow-top"" ) . width ( )"		674581	0					
ANR	674815	Callee	"q -> elementSize ( ""shadow-top"" ) . width"		674581	0					
ANR	674816	MemberAccess	"q -> elementSize ( ""shadow-top"" ) . width"		674581	0					
ANR	674817	CallExpression	"q -> elementSize ( ""shadow-top"" )"		674581	0					
ANR	674818	Callee	q -> elementSize		674581	0					
ANR	674819	PtrMemberAccess	q -> elementSize		674581	0					
ANR	674820	Identifier	q		674581	0					
ANR	674821	Identifier	elementSize		674581	1					
ANR	674822	ArgumentList	"""shadow-top"""		674581	1					
ANR	674823	Argument	"""shadow-top"""		674581	0					
ANR	674824	PrimaryExpression	"""shadow-top"""		674581	0					
ANR	674825	Identifier	width		674581	1					
ANR	674826	ArgumentList			674581	1					
ANR	674827	Argument	1		674581	1					
ANR	674828	PrimaryExpression	1		674581	0					
ANR	674829	ReturnType	void		674581	1					
ANR	674830	Identifier	Shadows :: Private :: setupPixmaps		674581	2					
ANR	674831	ParameterList			674581	3					
ANR	674832	CFGEntryNode	ENTRY		674581		True				
ANR	674833	CFGExitNode	EXIT		674581		True				
ANR	674834	Symbol	m_emptyCornerBottomPix		674581						
ANR	674835	Symbol	m_emptyCornerPix		674581						
ANR	674836	Symbol	initEmptyPixmap		674581						
ANR	674837	Symbol	"q -> elementSize ( ""shadow-topleft"" ) . width"		674581						
ANR	674838	Symbol	m_emptyCornerRightPix		674581						
ANR	674839	Symbol	"q -> elementSize ( ""shadow-bottomright"" ) . height"		674581						
ANR	674840	Symbol	"q -> elementSize ( ""shadow-top"" ) . width"		674581						
ANR	674841	Symbol	QSize		674581						
ANR	674842	Symbol	"q -> elementSize ( ""shadow-left"" ) . height"		674581						
ANR	674843	Symbol	"q -> elementSize ( ""shadow-topleft"" ) . height"		674581						
ANR	674844	Symbol	m_emptyCornerLeftPix		674581						
ANR	674845	Symbol	q		674581						
ANR	674846	Symbol	m_emptyHorizontalPix		674581						
ANR	674847	Symbol	m_emptyCornerTopPix		674581						
ANR	674848	Symbol	q -> elementSize		674581						
ANR	674849	Symbol	"q -> elementSize ( ""shadow-bottomright"" ) . width"		674581						
ANR	674850	Symbol	m_emptyVerticalPix		674581						
ANR	674851	Symbol	* q		674581						
ANR	674852	Function	Shadows :: Private :: setupData	193:0:5461:9981							
ANR	674853	FunctionDef	Shadows :: Private :: setupData (Plasma :: FrameSvg :: EnabledBorders enabledBorders)		674852	0					
ANR	674854	CompoundStatement		194:0:5543:9981	674852	0					
ANR	674855	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		674852	0					
ANR	674856	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	197:8:5586:5629	674852	0	True				
ANR	674857	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		674852	0		&			
ANR	674858	Identifier	enabledBorders		674852	0					
ANR	674859	Identifier	Plasma :: FrameSvg :: TopBorder		674852	1					
ANR	674860	CompoundStatement		4:54:88:88	674852	1					
ANR	674861	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 0 ] . handle ( )	198:8:5642:5693	674852	0	True				
ANR	674862	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 0 ] . handle ( )		674852	0		<<			
ANR	674863	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674864	Identifier	data		674852	0					
ANR	674865	Identifier	enabledBorders		674852	1					
ANR	674866	CallExpression	m_shadowPixmaps [ 0 ] . handle ( )		674852	1					
ANR	674867	Callee	m_shadowPixmaps [ 0 ] . handle		674852	0					
ANR	674868	MemberAccess	m_shadowPixmaps [ 0 ] . handle		674852	0					
ANR	674869	ArrayIndexing	m_shadowPixmaps [ 0 ]		674852	0					
ANR	674870	Identifier	m_shadowPixmaps		674852	0					
ANR	674871	PrimaryExpression	0		674852	1					
ANR	674872	Identifier	handle		674852	1					
ANR	674873	ArgumentList			674852	1					
ANR	674874	ElseStatement	else		674852	0					
ANR	674875	CompoundStatement		6:11:162:162	674852	0					
ANR	674876	ExpressionStatement	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )	200:8:5716:5769	674852	0	True				
ANR	674877	ShiftExpression	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )		674852	0		<<			
ANR	674878	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674879	Identifier	data		674852	0					
ANR	674880	Identifier	enabledBorders		674852	1					
ANR	674881	CallExpression	m_emptyHorizontalPix . handle ( )		674852	1					
ANR	674882	Callee	m_emptyHorizontalPix . handle		674852	0					
ANR	674883	MemberAccess	m_emptyHorizontalPix . handle		674852	0					
ANR	674884	Identifier	m_emptyHorizontalPix		674852	0					
ANR	674885	Identifier	handle		674852	1					
ANR	674886	ArgumentList			674852	1					
ANR	674887	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder )		674852	1					
ANR	674888	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder	204:8:5808:5909	674852	0	True				
ANR	674889	AndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	0		&&			
ANR	674890	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		674852	0		&			
ANR	674891	Identifier	enabledBorders		674852	0					
ANR	674892	Identifier	Plasma :: FrameSvg :: TopBorder		674852	1					
ANR	674893	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	1		&			
ANR	674894	Identifier	enabledBorders		674852	0					
ANR	674895	Identifier	Plasma :: FrameSvg :: RightBorder		674852	1					
ANR	674896	CompoundStatement		12:56:368:368	674852	1					
ANR	674897	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 1 ] . handle ( )	206:8:5922:5973	674852	0	True				
ANR	674898	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 1 ] . handle ( )		674852	0		<<			
ANR	674899	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674900	Identifier	data		674852	0					
ANR	674901	Identifier	enabledBorders		674852	1					
ANR	674902	CallExpression	m_shadowPixmaps [ 1 ] . handle ( )		674852	1					
ANR	674903	Callee	m_shadowPixmaps [ 1 ] . handle		674852	0					
ANR	674904	MemberAccess	m_shadowPixmaps [ 1 ] . handle		674852	0					
ANR	674905	ArrayIndexing	m_shadowPixmaps [ 1 ]		674852	0					
ANR	674906	Identifier	m_shadowPixmaps		674852	0					
ANR	674907	PrimaryExpression	1		674852	1					
ANR	674908	Identifier	handle		674852	1					
ANR	674909	ArgumentList			674852	1					
ANR	674910	ElseStatement	else		674852	0					
ANR	674911	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		674852	0					
ANR	674912	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	207:15:5990:6033	674852	0	True				
ANR	674913	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		674852	0		&			
ANR	674914	Identifier	enabledBorders		674852	0					
ANR	674915	Identifier	Plasma :: FrameSvg :: TopBorder		674852	1					
ANR	674916	CompoundStatement		14:61:492:492	674852	1					
ANR	674917	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )	208:8:6046:6098	674852	0	True				
ANR	674918	ShiftExpression	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )		674852	0		<<			
ANR	674919	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674920	Identifier	data		674852	0					
ANR	674921	Identifier	enabledBorders		674852	1					
ANR	674922	CallExpression	m_emptyCornerTopPix . handle ( )		674852	1					
ANR	674923	Callee	m_emptyCornerTopPix . handle		674852	0					
ANR	674924	MemberAccess	m_emptyCornerTopPix . handle		674852	0					
ANR	674925	Identifier	m_emptyCornerTopPix		674852	0					
ANR	674926	Identifier	handle		674852	1					
ANR	674927	ArgumentList			674852	1					
ANR	674928	ElseStatement	else		674852	0					
ANR	674929	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		674852	0					
ANR	674930	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	209:15:6115:6160	674852	0	True				
ANR	674931	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	0		&			
ANR	674932	Identifier	enabledBorders		674852	0					
ANR	674933	Identifier	Plasma :: FrameSvg :: RightBorder		674852	1					
ANR	674934	CompoundStatement		16:63:619:619	674852	1					
ANR	674935	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )	210:8:6173:6227	674852	0	True				
ANR	674936	ShiftExpression	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )		674852	0		<<			
ANR	674937	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674938	Identifier	data		674852	0					
ANR	674939	Identifier	enabledBorders		674852	1					
ANR	674940	CallExpression	m_emptyCornerRightPix . handle ( )		674852	1					
ANR	674941	Callee	m_emptyCornerRightPix . handle		674852	0					
ANR	674942	MemberAccess	m_emptyCornerRightPix . handle		674852	0					
ANR	674943	Identifier	m_emptyCornerRightPix		674852	0					
ANR	674944	Identifier	handle		674852	1					
ANR	674945	ArgumentList			674852	1					
ANR	674946	ElseStatement	else		674852	0					
ANR	674947	CompoundStatement		18:11:696:696	674852	0					
ANR	674948	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	212:8:6250:6299	674852	0	True				
ANR	674949	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		674852	0		<<			
ANR	674950	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674951	Identifier	data		674852	0					
ANR	674952	Identifier	enabledBorders		674852	1					
ANR	674953	CallExpression	m_emptyCornerPix . handle ( )		674852	1					
ANR	674954	Callee	m_emptyCornerPix . handle		674852	0					
ANR	674955	MemberAccess	m_emptyCornerPix . handle		674852	0					
ANR	674956	Identifier	m_emptyCornerPix		674852	0					
ANR	674957	Identifier	handle		674852	1					
ANR	674958	ArgumentList			674852	1					
ANR	674959	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		674852	2					
ANR	674960	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	216:8:6335:6380	674852	0	True				
ANR	674961	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	0		&			
ANR	674962	Identifier	enabledBorders		674852	0					
ANR	674963	Identifier	Plasma :: FrameSvg :: RightBorder		674852	1					
ANR	674964	CompoundStatement		23:56:839:839	674852	1					
ANR	674965	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 2 ] . handle ( )	217:8:6393:6444	674852	0	True				
ANR	674966	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 2 ] . handle ( )		674852	0		<<			
ANR	674967	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674968	Identifier	data		674852	0					
ANR	674969	Identifier	enabledBorders		674852	1					
ANR	674970	CallExpression	m_shadowPixmaps [ 2 ] . handle ( )		674852	1					
ANR	674971	Callee	m_shadowPixmaps [ 2 ] . handle		674852	0					
ANR	674972	MemberAccess	m_shadowPixmaps [ 2 ] . handle		674852	0					
ANR	674973	ArrayIndexing	m_shadowPixmaps [ 2 ]		674852	0					
ANR	674974	Identifier	m_shadowPixmaps		674852	0					
ANR	674975	PrimaryExpression	2		674852	1					
ANR	674976	Identifier	handle		674852	1					
ANR	674977	ArgumentList			674852	1					
ANR	674978	ElseStatement	else		674852	0					
ANR	674979	CompoundStatement		25:11:913:913	674852	0					
ANR	674980	ExpressionStatement	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )	219:8:6467:6518	674852	0	True				
ANR	674981	ShiftExpression	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )		674852	0		<<			
ANR	674982	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	674983	Identifier	data		674852	0					
ANR	674984	Identifier	enabledBorders		674852	1					
ANR	674985	CallExpression	m_emptyVerticalPix . handle ( )		674852	1					
ANR	674986	Callee	m_emptyVerticalPix . handle		674852	0					
ANR	674987	MemberAccess	m_emptyVerticalPix . handle		674852	0					
ANR	674988	Identifier	m_emptyVerticalPix		674852	0					
ANR	674989	Identifier	handle		674852	1					
ANR	674990	ArgumentList			674852	1					
ANR	674991	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder )		674852	3					
ANR	674992	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder	223:8:6560:6664	674852	0	True				
ANR	674993	AndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	0		&&			
ANR	674994	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		674852	0		&			
ANR	674995	Identifier	enabledBorders		674852	0					
ANR	674996	Identifier	Plasma :: FrameSvg :: BottomBorder		674852	1					
ANR	674997	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	1		&			
ANR	674998	Identifier	enabledBorders		674852	0					
ANR	674999	Identifier	Plasma :: FrameSvg :: RightBorder		674852	1					
ANR	675000	CompoundStatement		31:56:1123:1123	674852	1					
ANR	675001	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 3 ] . handle ( )	225:8:6677:6728	674852	0	True				
ANR	675002	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 3 ] . handle ( )		674852	0		<<			
ANR	675003	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675004	Identifier	data		674852	0					
ANR	675005	Identifier	enabledBorders		674852	1					
ANR	675006	CallExpression	m_shadowPixmaps [ 3 ] . handle ( )		674852	1					
ANR	675007	Callee	m_shadowPixmaps [ 3 ] . handle		674852	0					
ANR	675008	MemberAccess	m_shadowPixmaps [ 3 ] . handle		674852	0					
ANR	675009	ArrayIndexing	m_shadowPixmaps [ 3 ]		674852	0					
ANR	675010	Identifier	m_shadowPixmaps		674852	0					
ANR	675011	PrimaryExpression	3		674852	1					
ANR	675012	Identifier	handle		674852	1					
ANR	675013	ArgumentList			674852	1					
ANR	675014	ElseStatement	else		674852	0					
ANR	675015	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		674852	0					
ANR	675016	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	226:15:6745:6791	674852	0	True				
ANR	675017	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		674852	0		&			
ANR	675018	Identifier	enabledBorders		674852	0					
ANR	675019	Identifier	Plasma :: FrameSvg :: BottomBorder		674852	1					
ANR	675020	CompoundStatement		33:64:1250:1250	674852	1					
ANR	675021	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )	227:8:6804:6859	674852	0	True				
ANR	675022	ShiftExpression	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )		674852	0		<<			
ANR	675023	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675024	Identifier	data		674852	0					
ANR	675025	Identifier	enabledBorders		674852	1					
ANR	675026	CallExpression	m_emptyCornerBottomPix . handle ( )		674852	1					
ANR	675027	Callee	m_emptyCornerBottomPix . handle		674852	0					
ANR	675028	MemberAccess	m_emptyCornerBottomPix . handle		674852	0					
ANR	675029	Identifier	m_emptyCornerBottomPix		674852	0					
ANR	675030	Identifier	handle		674852	1					
ANR	675031	ArgumentList			674852	1					
ANR	675032	ElseStatement	else		674852	0					
ANR	675033	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		674852	0					
ANR	675034	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	228:15:6876:6921	674852	0	True				
ANR	675035	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	0		&			
ANR	675036	Identifier	enabledBorders		674852	0					
ANR	675037	Identifier	Plasma :: FrameSvg :: RightBorder		674852	1					
ANR	675038	CompoundStatement		35:63:1380:1380	674852	1					
ANR	675039	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )	229:8:6934:6988	674852	0	True				
ANR	675040	ShiftExpression	data [ enabledBorders ] << m_emptyCornerRightPix . handle ( )		674852	0		<<			
ANR	675041	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675042	Identifier	data		674852	0					
ANR	675043	Identifier	enabledBorders		674852	1					
ANR	675044	CallExpression	m_emptyCornerRightPix . handle ( )		674852	1					
ANR	675045	Callee	m_emptyCornerRightPix . handle		674852	0					
ANR	675046	MemberAccess	m_emptyCornerRightPix . handle		674852	0					
ANR	675047	Identifier	m_emptyCornerRightPix		674852	0					
ANR	675048	Identifier	handle		674852	1					
ANR	675049	ArgumentList			674852	1					
ANR	675050	ElseStatement	else		674852	0					
ANR	675051	CompoundStatement		37:11:1457:1457	674852	0					
ANR	675052	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	231:8:7011:7060	674852	0	True				
ANR	675053	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		674852	0		<<			
ANR	675054	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675055	Identifier	data		674852	0					
ANR	675056	Identifier	enabledBorders		674852	1					
ANR	675057	CallExpression	m_emptyCornerPix . handle ( )		674852	1					
ANR	675058	Callee	m_emptyCornerPix . handle		674852	0					
ANR	675059	MemberAccess	m_emptyCornerPix . handle		674852	0					
ANR	675060	Identifier	m_emptyCornerPix		674852	0					
ANR	675061	Identifier	handle		674852	1					
ANR	675062	ArgumentList			674852	1					
ANR	675063	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		674852	4					
ANR	675064	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	235:8:7097:7143	674852	0	True				
ANR	675065	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		674852	0		&			
ANR	675066	Identifier	enabledBorders		674852	0					
ANR	675067	Identifier	Plasma :: FrameSvg :: BottomBorder		674852	1					
ANR	675068	CompoundStatement		42:57:1602:1602	674852	1					
ANR	675069	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 4 ] . handle ( )	236:8:7156:7207	674852	0	True				
ANR	675070	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 4 ] . handle ( )		674852	0		<<			
ANR	675071	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675072	Identifier	data		674852	0					
ANR	675073	Identifier	enabledBorders		674852	1					
ANR	675074	CallExpression	m_shadowPixmaps [ 4 ] . handle ( )		674852	1					
ANR	675075	Callee	m_shadowPixmaps [ 4 ] . handle		674852	0					
ANR	675076	MemberAccess	m_shadowPixmaps [ 4 ] . handle		674852	0					
ANR	675077	ArrayIndexing	m_shadowPixmaps [ 4 ]		674852	0					
ANR	675078	Identifier	m_shadowPixmaps		674852	0					
ANR	675079	PrimaryExpression	4		674852	1					
ANR	675080	Identifier	handle		674852	1					
ANR	675081	ArgumentList			674852	1					
ANR	675082	ElseStatement	else		674852	0					
ANR	675083	CompoundStatement		44:11:1676:1676	674852	0					
ANR	675084	ExpressionStatement	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )	238:8:7230:7283	674852	0	True				
ANR	675085	ShiftExpression	data [ enabledBorders ] << m_emptyHorizontalPix . handle ( )		674852	0		<<			
ANR	675086	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675087	Identifier	data		674852	0					
ANR	675088	Identifier	enabledBorders		674852	1					
ANR	675089	CallExpression	m_emptyHorizontalPix . handle ( )		674852	1					
ANR	675090	Callee	m_emptyHorizontalPix . handle		674852	0					
ANR	675091	MemberAccess	m_emptyHorizontalPix . handle		674852	0					
ANR	675092	Identifier	m_emptyHorizontalPix		674852	0					
ANR	675093	Identifier	handle		674852	1					
ANR	675094	ArgumentList			674852	1					
ANR	675095	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder )		674852	5					
ANR	675096	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder	242:8:7324:7427	674852	0	True				
ANR	675097	AndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	0		&&			
ANR	675098	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		674852	0		&			
ANR	675099	Identifier	enabledBorders		674852	0					
ANR	675100	Identifier	Plasma :: FrameSvg :: BottomBorder		674852	1					
ANR	675101	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	1		&			
ANR	675102	Identifier	enabledBorders		674852	0					
ANR	675103	Identifier	Plasma :: FrameSvg :: LeftBorder		674852	1					
ANR	675104	CompoundStatement		50:55:1886:1886	674852	1					
ANR	675105	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 5 ] . handle ( )	244:8:7440:7491	674852	0	True				
ANR	675106	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 5 ] . handle ( )		674852	0		<<			
ANR	675107	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675108	Identifier	data		674852	0					
ANR	675109	Identifier	enabledBorders		674852	1					
ANR	675110	CallExpression	m_shadowPixmaps [ 5 ] . handle ( )		674852	1					
ANR	675111	Callee	m_shadowPixmaps [ 5 ] . handle		674852	0					
ANR	675112	MemberAccess	m_shadowPixmaps [ 5 ] . handle		674852	0					
ANR	675113	ArrayIndexing	m_shadowPixmaps [ 5 ]		674852	0					
ANR	675114	Identifier	m_shadowPixmaps		674852	0					
ANR	675115	PrimaryExpression	5		674852	1					
ANR	675116	Identifier	handle		674852	1					
ANR	675117	ArgumentList			674852	1					
ANR	675118	ElseStatement	else		674852	0					
ANR	675119	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		674852	0					
ANR	675120	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	245:15:7508:7554	674852	0	True				
ANR	675121	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		674852	0		&			
ANR	675122	Identifier	enabledBorders		674852	0					
ANR	675123	Identifier	Plasma :: FrameSvg :: BottomBorder		674852	1					
ANR	675124	CompoundStatement		52:64:2013:2013	674852	1					
ANR	675125	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )	246:8:7567:7622	674852	0	True				
ANR	675126	ShiftExpression	data [ enabledBorders ] << m_emptyCornerBottomPix . handle ( )		674852	0		<<			
ANR	675127	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675128	Identifier	data		674852	0					
ANR	675129	Identifier	enabledBorders		674852	1					
ANR	675130	CallExpression	m_emptyCornerBottomPix . handle ( )		674852	1					
ANR	675131	Callee	m_emptyCornerBottomPix . handle		674852	0					
ANR	675132	MemberAccess	m_emptyCornerBottomPix . handle		674852	0					
ANR	675133	Identifier	m_emptyCornerBottomPix		674852	0					
ANR	675134	Identifier	handle		674852	1					
ANR	675135	ArgumentList			674852	1					
ANR	675136	ElseStatement	else		674852	0					
ANR	675137	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		674852	0					
ANR	675138	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	247:15:7639:7683	674852	0	True				
ANR	675139	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	0		&			
ANR	675140	Identifier	enabledBorders		674852	0					
ANR	675141	Identifier	Plasma :: FrameSvg :: LeftBorder		674852	1					
ANR	675142	CompoundStatement		54:62:2142:2142	674852	1					
ANR	675143	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )	248:8:7696:7749	674852	0	True				
ANR	675144	ShiftExpression	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )		674852	0		<<			
ANR	675145	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675146	Identifier	data		674852	0					
ANR	675147	Identifier	enabledBorders		674852	1					
ANR	675148	CallExpression	m_emptyCornerLeftPix . handle ( )		674852	1					
ANR	675149	Callee	m_emptyCornerLeftPix . handle		674852	0					
ANR	675150	MemberAccess	m_emptyCornerLeftPix . handle		674852	0					
ANR	675151	Identifier	m_emptyCornerLeftPix		674852	0					
ANR	675152	Identifier	handle		674852	1					
ANR	675153	ArgumentList			674852	1					
ANR	675154	ElseStatement	else		674852	0					
ANR	675155	CompoundStatement		56:11:2218:2218	674852	0					
ANR	675156	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	250:8:7772:7821	674852	0	True				
ANR	675157	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		674852	0		<<			
ANR	675158	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675159	Identifier	data		674852	0					
ANR	675160	Identifier	enabledBorders		674852	1					
ANR	675161	CallExpression	m_emptyCornerPix . handle ( )		674852	1					
ANR	675162	Callee	m_emptyCornerPix . handle		674852	0					
ANR	675163	MemberAccess	m_emptyCornerPix . handle		674852	0					
ANR	675164	Identifier	m_emptyCornerPix		674852	0					
ANR	675165	Identifier	handle		674852	1					
ANR	675166	ArgumentList			674852	1					
ANR	675167	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		674852	6					
ANR	675168	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	254:8:7856:7900	674852	0	True				
ANR	675169	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	0		&			
ANR	675170	Identifier	enabledBorders		674852	0					
ANR	675171	Identifier	Plasma :: FrameSvg :: LeftBorder		674852	1					
ANR	675172	CompoundStatement		61:55:2359:2359	674852	1					
ANR	675173	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 6 ] . handle ( )	255:8:7913:7964	674852	0	True				
ANR	675174	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 6 ] . handle ( )		674852	0		<<			
ANR	675175	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675176	Identifier	data		674852	0					
ANR	675177	Identifier	enabledBorders		674852	1					
ANR	675178	CallExpression	m_shadowPixmaps [ 6 ] . handle ( )		674852	1					
ANR	675179	Callee	m_shadowPixmaps [ 6 ] . handle		674852	0					
ANR	675180	MemberAccess	m_shadowPixmaps [ 6 ] . handle		674852	0					
ANR	675181	ArrayIndexing	m_shadowPixmaps [ 6 ]		674852	0					
ANR	675182	Identifier	m_shadowPixmaps		674852	0					
ANR	675183	PrimaryExpression	6		674852	1					
ANR	675184	Identifier	handle		674852	1					
ANR	675185	ArgumentList			674852	1					
ANR	675186	ElseStatement	else		674852	0					
ANR	675187	CompoundStatement		63:11:2433:2433	674852	0					
ANR	675188	ExpressionStatement	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )	257:8:7987:8038	674852	0	True				
ANR	675189	ShiftExpression	data [ enabledBorders ] << m_emptyVerticalPix . handle ( )		674852	0		<<			
ANR	675190	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675191	Identifier	data		674852	0					
ANR	675192	Identifier	enabledBorders		674852	1					
ANR	675193	CallExpression	m_emptyVerticalPix . handle ( )		674852	1					
ANR	675194	Callee	m_emptyVerticalPix . handle		674852	0					
ANR	675195	MemberAccess	m_emptyVerticalPix . handle		674852	0					
ANR	675196	Identifier	m_emptyVerticalPix		674852	0					
ANR	675197	Identifier	handle		674852	1					
ANR	675198	ArgumentList			674852	1					
ANR	675199	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder )		674852	7					
ANR	675200	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder	261:8:8076:8176	674852	0	True				
ANR	675201	AndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder && enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	0		&&			
ANR	675202	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		674852	0		&			
ANR	675203	Identifier	enabledBorders		674852	0					
ANR	675204	Identifier	Plasma :: FrameSvg :: TopBorder		674852	1					
ANR	675205	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	1		&			
ANR	675206	Identifier	enabledBorders		674852	0					
ANR	675207	Identifier	Plasma :: FrameSvg :: LeftBorder		674852	1					
ANR	675208	CompoundStatement		69:55:2635:2635	674852	1					
ANR	675209	ExpressionStatement	data [ enabledBorders ] << m_shadowPixmaps [ 7 ] . handle ( )	263:8:8189:8240	674852	0	True				
ANR	675210	ShiftExpression	data [ enabledBorders ] << m_shadowPixmaps [ 7 ] . handle ( )		674852	0		<<			
ANR	675211	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675212	Identifier	data		674852	0					
ANR	675213	Identifier	enabledBorders		674852	1					
ANR	675214	CallExpression	m_shadowPixmaps [ 7 ] . handle ( )		674852	1					
ANR	675215	Callee	m_shadowPixmaps [ 7 ] . handle		674852	0					
ANR	675216	MemberAccess	m_shadowPixmaps [ 7 ] . handle		674852	0					
ANR	675217	ArrayIndexing	m_shadowPixmaps [ 7 ]		674852	0					
ANR	675218	Identifier	m_shadowPixmaps		674852	0					
ANR	675219	PrimaryExpression	7		674852	1					
ANR	675220	Identifier	handle		674852	1					
ANR	675221	ArgumentList			674852	1					
ANR	675222	ElseStatement	else		674852	0					
ANR	675223	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		674852	0					
ANR	675224	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	264:15:8257:8300	674852	0	True				
ANR	675225	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		674852	0		&			
ANR	675226	Identifier	enabledBorders		674852	0					
ANR	675227	Identifier	Plasma :: FrameSvg :: TopBorder		674852	1					
ANR	675228	CompoundStatement		71:61:2759:2759	674852	1					
ANR	675229	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )	265:8:8313:8365	674852	0	True				
ANR	675230	ShiftExpression	data [ enabledBorders ] << m_emptyCornerTopPix . handle ( )		674852	0		<<			
ANR	675231	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675232	Identifier	data		674852	0					
ANR	675233	Identifier	enabledBorders		674852	1					
ANR	675234	CallExpression	m_emptyCornerTopPix . handle ( )		674852	1					
ANR	675235	Callee	m_emptyCornerTopPix . handle		674852	0					
ANR	675236	MemberAccess	m_emptyCornerTopPix . handle		674852	0					
ANR	675237	Identifier	m_emptyCornerTopPix		674852	0					
ANR	675238	Identifier	handle		674852	1					
ANR	675239	ArgumentList			674852	1					
ANR	675240	ElseStatement	else		674852	0					
ANR	675241	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		674852	0					
ANR	675242	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	266:15:8382:8426	674852	0	True				
ANR	675243	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	0		&			
ANR	675244	Identifier	enabledBorders		674852	0					
ANR	675245	Identifier	Plasma :: FrameSvg :: LeftBorder		674852	1					
ANR	675246	CompoundStatement		73:62:2885:2885	674852	1					
ANR	675247	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )	267:8:8439:8492	674852	0	True				
ANR	675248	ShiftExpression	data [ enabledBorders ] << m_emptyCornerLeftPix . handle ( )		674852	0		<<			
ANR	675249	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675250	Identifier	data		674852	0					
ANR	675251	Identifier	enabledBorders		674852	1					
ANR	675252	CallExpression	m_emptyCornerLeftPix . handle ( )		674852	1					
ANR	675253	Callee	m_emptyCornerLeftPix . handle		674852	0					
ANR	675254	MemberAccess	m_emptyCornerLeftPix . handle		674852	0					
ANR	675255	Identifier	m_emptyCornerLeftPix		674852	0					
ANR	675256	Identifier	handle		674852	1					
ANR	675257	ArgumentList			674852	1					
ANR	675258	ElseStatement	else		674852	0					
ANR	675259	CompoundStatement		75:11:2961:2961	674852	0					
ANR	675260	ExpressionStatement	data [ enabledBorders ] << m_emptyCornerPix . handle ( )	269:8:8515:8564	674852	0	True				
ANR	675261	ShiftExpression	data [ enabledBorders ] << m_emptyCornerPix . handle ( )		674852	0		<<			
ANR	675262	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675263	Identifier	data		674852	0					
ANR	675264	Identifier	enabledBorders		674852	1					
ANR	675265	CallExpression	m_emptyCornerPix . handle ( )		674852	1					
ANR	675266	Callee	m_emptyCornerPix . handle		674852	0					
ANR	675267	MemberAccess	m_emptyCornerPix . handle		674852	0					
ANR	675268	Identifier	m_emptyCornerPix		674852	0					
ANR	675269	Identifier	handle		674852	1					
ANR	675270	ArgumentList			674852	1					
ANR	675271	IdentifierDeclStatement	"int left , top , right , bottom = 0 ;"	273:4:8584:8616	674852	8	True				
ANR	675272	IdentifierDecl	left		674852	0					
ANR	675273	IdentifierDeclType	int		674852	0					
ANR	675274	Identifier	left		674852	1					
ANR	675275	IdentifierDecl	top		674852	1					
ANR	675276	IdentifierDeclType	int		674852	0					
ANR	675277	Identifier	top		674852	1					
ANR	675278	IdentifierDecl	right		674852	2					
ANR	675279	IdentifierDeclType	int		674852	0					
ANR	675280	Identifier	right		674852	1					
ANR	675281	IdentifierDecl	bottom = 0		674852	3					
ANR	675282	IdentifierDeclType	int		674852	0					
ANR	675283	Identifier	bottom		674852	1					
ANR	675284	AssignmentExpression	bottom = 0		674852	2		=			
ANR	675285	Identifier	bottom		674852	0					
ANR	675286	PrimaryExpression	0		674852	1					
ANR	675287	IdentifierDeclStatement	QSize marginHint ;	275:4:8623:8639	674852	9	True				
ANR	675288	IdentifierDecl	marginHint		674852	0					
ANR	675289	IdentifierDeclType	QSize		674852	0					
ANR	675290	Identifier	marginHint		674852	1					
ANR	675291	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: TopBorder )		674852	10					
ANR	675292	Condition	enabledBorders & Plasma :: FrameSvg :: TopBorder	276:8:8649:8692	674852	0	True				
ANR	675293	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: TopBorder		674852	0		&			
ANR	675294	Identifier	enabledBorders		674852	0					
ANR	675295	Identifier	Plasma :: FrameSvg :: TopBorder		674852	1					
ANR	675296	CompoundStatement		83:54:3151:3151	674852	1					
ANR	675297	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-top-margin"" )"	277:8:8705:8758	674852	0	True				
ANR	675298	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-top-margin"" )"		674852	0		=			
ANR	675299	Identifier	marginHint		674852	0					
ANR	675300	CallExpression	"q -> elementSize ( ""shadow-hint-top-margin"" )"		674852	1					
ANR	675301	Callee	q -> elementSize		674852	0					
ANR	675302	PtrMemberAccess	q -> elementSize		674852	0					
ANR	675303	Identifier	q		674852	0					
ANR	675304	Identifier	elementSize		674852	1					
ANR	675305	ArgumentList	"""shadow-hint-top-margin"""		674852	1					
ANR	675306	Argument	"""shadow-hint-top-margin"""		674852	0					
ANR	675307	PrimaryExpression	"""shadow-hint-top-margin"""		674852	0					
ANR	675308	IfStatement	if ( marginHint . isValid ( ) )		674852	1					
ANR	675309	Condition	marginHint . isValid ( )	278:12:8772:8791	674852	0	True				
ANR	675310	CallExpression	marginHint . isValid ( )		674852	0					
ANR	675311	Callee	marginHint . isValid		674852	0					
ANR	675312	MemberAccess	marginHint . isValid		674852	0					
ANR	675313	Identifier	marginHint		674852	0					
ANR	675314	Identifier	isValid		674852	1					
ANR	675315	ArgumentList			674852	1					
ANR	675316	CompoundStatement		85:34:3250:3250	674852	1					
ANR	675317	ExpressionStatement	top = marginHint . height ( )	279:12:8808:8833	674852	0	True				
ANR	675318	AssignmentExpression	top = marginHint . height ( )		674852	0		=			
ANR	675319	Identifier	top		674852	0					
ANR	675320	CallExpression	marginHint . height ( )		674852	1					
ANR	675321	Callee	marginHint . height		674852	0					
ANR	675322	MemberAccess	marginHint . height		674852	0					
ANR	675323	Identifier	marginHint		674852	0					
ANR	675324	Identifier	height		674852	1					
ANR	675325	ArgumentList			674852	1					
ANR	675326	ElseStatement	else		674852	0					
ANR	675327	CompoundStatement		87:15:3306:3306	674852	0					
ANR	675328	ExpressionStatement	top = m_shadowPixmaps [ 0 ] . height ( )	281:12:8864:8897	674852	0	True				
ANR	675329	AssignmentExpression	top = m_shadowPixmaps [ 0 ] . height ( )		674852	0		=			
ANR	675330	Identifier	top		674852	0					
ANR	675331	CallExpression	m_shadowPixmaps [ 0 ] . height ( )		674852	1					
ANR	675332	Callee	m_shadowPixmaps [ 0 ] . height		674852	0					
ANR	675333	MemberAccess	m_shadowPixmaps [ 0 ] . height		674852	0					
ANR	675334	ArrayIndexing	m_shadowPixmaps [ 0 ]		674852	0					
ANR	675335	Identifier	m_shadowPixmaps		674852	0					
ANR	675336	PrimaryExpression	0		674852	1					
ANR	675337	Identifier	height		674852	1					
ANR	675338	ArgumentList			674852	1					
ANR	675339	ElseStatement	else		674852	0					
ANR	675340	CompoundStatement		90:11:3383:3383	674852	0					
ANR	675341	ExpressionStatement	top = 1	284:8:8937:8944	674852	0	True				
ANR	675342	AssignmentExpression	top = 1		674852	0		=			
ANR	675343	Identifier	top		674852	0					
ANR	675344	PrimaryExpression	1		674852	1					
ANR	675345	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: RightBorder )		674852	11					
ANR	675346	Condition	enabledBorders & Plasma :: FrameSvg :: RightBorder	287:8:8961:9006	674852	0	True				
ANR	675347	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: RightBorder		674852	0		&			
ANR	675348	Identifier	enabledBorders		674852	0					
ANR	675349	Identifier	Plasma :: FrameSvg :: RightBorder		674852	1					
ANR	675350	CompoundStatement		94:56:3465:3465	674852	1					
ANR	675351	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-right-margin"" )"	288:8:9019:9074	674852	0	True				
ANR	675352	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-right-margin"" )"		674852	0		=			
ANR	675353	Identifier	marginHint		674852	0					
ANR	675354	CallExpression	"q -> elementSize ( ""shadow-hint-right-margin"" )"		674852	1					
ANR	675355	Callee	q -> elementSize		674852	0					
ANR	675356	PtrMemberAccess	q -> elementSize		674852	0					
ANR	675357	Identifier	q		674852	0					
ANR	675358	Identifier	elementSize		674852	1					
ANR	675359	ArgumentList	"""shadow-hint-right-margin"""		674852	1					
ANR	675360	Argument	"""shadow-hint-right-margin"""		674852	0					
ANR	675361	PrimaryExpression	"""shadow-hint-right-margin"""		674852	0					
ANR	675362	IfStatement	if ( marginHint . isValid ( ) )		674852	1					
ANR	675363	Condition	marginHint . isValid ( )	289:12:9088:9107	674852	0	True				
ANR	675364	CallExpression	marginHint . isValid ( )		674852	0					
ANR	675365	Callee	marginHint . isValid		674852	0					
ANR	675366	MemberAccess	marginHint . isValid		674852	0					
ANR	675367	Identifier	marginHint		674852	0					
ANR	675368	Identifier	isValid		674852	1					
ANR	675369	ArgumentList			674852	1					
ANR	675370	CompoundStatement		96:34:3566:3566	674852	1					
ANR	675371	ExpressionStatement	right = marginHint . width ( )	290:12:9124:9150	674852	0	True				
ANR	675372	AssignmentExpression	right = marginHint . width ( )		674852	0		=			
ANR	675373	Identifier	right		674852	0					
ANR	675374	CallExpression	marginHint . width ( )		674852	1					
ANR	675375	Callee	marginHint . width		674852	0					
ANR	675376	MemberAccess	marginHint . width		674852	0					
ANR	675377	Identifier	marginHint		674852	0					
ANR	675378	Identifier	width		674852	1					
ANR	675379	ArgumentList			674852	1					
ANR	675380	ElseStatement	else		674852	0					
ANR	675381	CompoundStatement		98:15:3623:3623	674852	0					
ANR	675382	ExpressionStatement	right = m_shadowPixmaps [ 2 ] . width ( )	292:12:9181:9215	674852	0	True				
ANR	675383	AssignmentExpression	right = m_shadowPixmaps [ 2 ] . width ( )		674852	0		=			
ANR	675384	Identifier	right		674852	0					
ANR	675385	CallExpression	m_shadowPixmaps [ 2 ] . width ( )		674852	1					
ANR	675386	Callee	m_shadowPixmaps [ 2 ] . width		674852	0					
ANR	675387	MemberAccess	m_shadowPixmaps [ 2 ] . width		674852	0					
ANR	675388	ArrayIndexing	m_shadowPixmaps [ 2 ]		674852	0					
ANR	675389	Identifier	m_shadowPixmaps		674852	0					
ANR	675390	PrimaryExpression	2		674852	1					
ANR	675391	Identifier	width		674852	1					
ANR	675392	ArgumentList			674852	1					
ANR	675393	ElseStatement	else		674852	0					
ANR	675394	CompoundStatement		101:11:3703:3703	674852	0					
ANR	675395	ExpressionStatement	right = 1	295:8:9257:9266	674852	0	True				
ANR	675396	AssignmentExpression	right = 1		674852	0		=			
ANR	675397	Identifier	right		674852	0					
ANR	675398	PrimaryExpression	1		674852	1					
ANR	675399	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: BottomBorder )		674852	12					
ANR	675400	Condition	enabledBorders & Plasma :: FrameSvg :: BottomBorder	298:8:9283:9329	674852	0	True				
ANR	675401	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: BottomBorder		674852	0		&			
ANR	675402	Identifier	enabledBorders		674852	0					
ANR	675403	Identifier	Plasma :: FrameSvg :: BottomBorder		674852	1					
ANR	675404	CompoundStatement		105:57:3788:3788	674852	1					
ANR	675405	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-bottom-margin"" )"	299:8:9342:9398	674852	0	True				
ANR	675406	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-bottom-margin"" )"		674852	0		=			
ANR	675407	Identifier	marginHint		674852	0					
ANR	675408	CallExpression	"q -> elementSize ( ""shadow-hint-bottom-margin"" )"		674852	1					
ANR	675409	Callee	q -> elementSize		674852	0					
ANR	675410	PtrMemberAccess	q -> elementSize		674852	0					
ANR	675411	Identifier	q		674852	0					
ANR	675412	Identifier	elementSize		674852	1					
ANR	675413	ArgumentList	"""shadow-hint-bottom-margin"""		674852	1					
ANR	675414	Argument	"""shadow-hint-bottom-margin"""		674852	0					
ANR	675415	PrimaryExpression	"""shadow-hint-bottom-margin"""		674852	0					
ANR	675416	IfStatement	if ( marginHint . isValid ( ) )		674852	1					
ANR	675417	Condition	marginHint . isValid ( )	300:12:9412:9431	674852	0	True				
ANR	675418	CallExpression	marginHint . isValid ( )		674852	0					
ANR	675419	Callee	marginHint . isValid		674852	0					
ANR	675420	MemberAccess	marginHint . isValid		674852	0					
ANR	675421	Identifier	marginHint		674852	0					
ANR	675422	Identifier	isValid		674852	1					
ANR	675423	ArgumentList			674852	1					
ANR	675424	CompoundStatement		107:34:3890:3890	674852	1					
ANR	675425	ExpressionStatement	bottom = marginHint . height ( )	301:12:9448:9476	674852	0	True				
ANR	675426	AssignmentExpression	bottom = marginHint . height ( )		674852	0		=			
ANR	675427	Identifier	bottom		674852	0					
ANR	675428	CallExpression	marginHint . height ( )		674852	1					
ANR	675429	Callee	marginHint . height		674852	0					
ANR	675430	MemberAccess	marginHint . height		674852	0					
ANR	675431	Identifier	marginHint		674852	0					
ANR	675432	Identifier	height		674852	1					
ANR	675433	ArgumentList			674852	1					
ANR	675434	ElseStatement	else		674852	0					
ANR	675435	CompoundStatement		109:15:3949:3949	674852	0					
ANR	675436	ExpressionStatement	bottom = m_shadowPixmaps [ 4 ] . height ( )	303:12:9507:9543	674852	0	True				
ANR	675437	AssignmentExpression	bottom = m_shadowPixmaps [ 4 ] . height ( )		674852	0		=			
ANR	675438	Identifier	bottom		674852	0					
ANR	675439	CallExpression	m_shadowPixmaps [ 4 ] . height ( )		674852	1					
ANR	675440	Callee	m_shadowPixmaps [ 4 ] . height		674852	0					
ANR	675441	MemberAccess	m_shadowPixmaps [ 4 ] . height		674852	0					
ANR	675442	ArrayIndexing	m_shadowPixmaps [ 4 ]		674852	0					
ANR	675443	Identifier	m_shadowPixmaps		674852	0					
ANR	675444	PrimaryExpression	4		674852	1					
ANR	675445	Identifier	height		674852	1					
ANR	675446	ArgumentList			674852	1					
ANR	675447	ElseStatement	else		674852	0					
ANR	675448	CompoundStatement		112:11:4032:4032	674852	0					
ANR	675449	ExpressionStatement	bottom = 1	306:8:9586:9596	674852	0	True				
ANR	675450	AssignmentExpression	bottom = 1		674852	0		=			
ANR	675451	Identifier	bottom		674852	0					
ANR	675452	PrimaryExpression	1		674852	1					
ANR	675453	IfStatement	if ( enabledBorders & Plasma :: FrameSvg :: LeftBorder )		674852	13					
ANR	675454	Condition	enabledBorders & Plasma :: FrameSvg :: LeftBorder	309:8:9613:9657	674852	0	True				
ANR	675455	BitAndExpression	enabledBorders & Plasma :: FrameSvg :: LeftBorder		674852	0		&			
ANR	675456	Identifier	enabledBorders		674852	0					
ANR	675457	Identifier	Plasma :: FrameSvg :: LeftBorder		674852	1					
ANR	675458	CompoundStatement		116:55:4116:4116	674852	1					
ANR	675459	ExpressionStatement	"marginHint = q -> elementSize ( ""shadow-hint-left-margin"" )"	310:8:9670:9724	674852	0	True				
ANR	675460	AssignmentExpression	"marginHint = q -> elementSize ( ""shadow-hint-left-margin"" )"		674852	0		=			
ANR	675461	Identifier	marginHint		674852	0					
ANR	675462	CallExpression	"q -> elementSize ( ""shadow-hint-left-margin"" )"		674852	1					
ANR	675463	Callee	q -> elementSize		674852	0					
ANR	675464	PtrMemberAccess	q -> elementSize		674852	0					
ANR	675465	Identifier	q		674852	0					
ANR	675466	Identifier	elementSize		674852	1					
ANR	675467	ArgumentList	"""shadow-hint-left-margin"""		674852	1					
ANR	675468	Argument	"""shadow-hint-left-margin"""		674852	0					
ANR	675469	PrimaryExpression	"""shadow-hint-left-margin"""		674852	0					
ANR	675470	IfStatement	if ( marginHint . isValid ( ) )		674852	1					
ANR	675471	Condition	marginHint . isValid ( )	311:12:9738:9757	674852	0	True				
ANR	675472	CallExpression	marginHint . isValid ( )		674852	0					
ANR	675473	Callee	marginHint . isValid		674852	0					
ANR	675474	MemberAccess	marginHint . isValid		674852	0					
ANR	675475	Identifier	marginHint		674852	0					
ANR	675476	Identifier	isValid		674852	1					
ANR	675477	ArgumentList			674852	1					
ANR	675478	CompoundStatement		118:34:4216:4216	674852	1					
ANR	675479	ExpressionStatement	left = marginHint . width ( )	312:12:9774:9799	674852	0	True				
ANR	675480	AssignmentExpression	left = marginHint . width ( )		674852	0		=			
ANR	675481	Identifier	left		674852	0					
ANR	675482	CallExpression	marginHint . width ( )		674852	1					
ANR	675483	Callee	marginHint . width		674852	0					
ANR	675484	MemberAccess	marginHint . width		674852	0					
ANR	675485	Identifier	marginHint		674852	0					
ANR	675486	Identifier	width		674852	1					
ANR	675487	ArgumentList			674852	1					
ANR	675488	ElseStatement	else		674852	0					
ANR	675489	CompoundStatement		120:15:4272:4272	674852	0					
ANR	675490	ExpressionStatement	left = m_shadowPixmaps [ 6 ] . width ( )	314:12:9830:9863	674852	0	True				
ANR	675491	AssignmentExpression	left = m_shadowPixmaps [ 6 ] . width ( )		674852	0		=			
ANR	675492	Identifier	left		674852	0					
ANR	675493	CallExpression	m_shadowPixmaps [ 6 ] . width ( )		674852	1					
ANR	675494	Callee	m_shadowPixmaps [ 6 ] . width		674852	0					
ANR	675495	MemberAccess	m_shadowPixmaps [ 6 ] . width		674852	0					
ANR	675496	ArrayIndexing	m_shadowPixmaps [ 6 ]		674852	0					
ANR	675497	Identifier	m_shadowPixmaps		674852	0					
ANR	675498	PrimaryExpression	6		674852	1					
ANR	675499	Identifier	width		674852	1					
ANR	675500	ArgumentList			674852	1					
ANR	675501	ElseStatement	else		674852	0					
ANR	675502	CompoundStatement		123:11:4350:4350	674852	0					
ANR	675503	ExpressionStatement	left = 1	317:8:9904:9912	674852	0	True				
ANR	675504	AssignmentExpression	left = 1		674852	0		=			
ANR	675505	Identifier	left		674852	0					
ANR	675506	PrimaryExpression	1		674852	1					
ANR	675507	ExpressionStatement	data [ enabledBorders ] << top << right << bottom << left	320:4:9925:9979	674852	14	True				
ANR	675508	ShiftExpression	data [ enabledBorders ] << top << right << bottom << left		674852	0		<<			
ANR	675509	ArrayIndexing	data [ enabledBorders ]		674852	0					
ANR	675510	Identifier	data		674852	0					
ANR	675511	Identifier	enabledBorders		674852	1					
ANR	675512	ShiftExpression	top << right << bottom << left		674852	1		<<			
ANR	675513	Identifier	top		674852	0					
ANR	675514	ShiftExpression	right << bottom << left		674852	1		<<			
ANR	675515	Identifier	right		674852	0					
ANR	675516	ShiftExpression	bottom << left		674852	1		<<			
ANR	675517	Identifier	bottom		674852	0					
ANR	675518	Identifier	left		674852	1					
ANR	675519	ReturnType	void		674852	1					
ANR	675520	Identifier	Shadows :: Private :: setupData		674852	2					
ANR	675521	ParameterList	Plasma :: FrameSvg :: EnabledBorders enabledBorders		674852	3					
ANR	675522	Parameter	Plasma :: FrameSvg :: EnabledBorders enabledBorders	193:33:5494:5540	674852	0	True				
ANR	675523	ParameterType	Plasma :: FrameSvg :: EnabledBorders		674852	0					
ANR	675524	Identifier	enabledBorders		674852	1					
ANR	675525	CFGEntryNode	ENTRY		674852		True				
ANR	675526	CFGExitNode	EXIT		674852		True				
ANR	675527	Symbol	m_emptyCornerBottomPix		674852						
ANR	675528	Symbol	data		674852						
ANR	675529	Symbol	m_shadowPixmaps [ 4 ] . height		674852						
ANR	675530	Symbol	m_shadowPixmaps [ 6 ] . width		674852						
ANR	675531	Symbol	m_emptyCornerLeftPix		674852						
ANR	675532	Symbol	enabledBorders		674852						
ANR	675533	Symbol	top		674852						
ANR	675534	Symbol	Plasma :: FrameSvg :: BottomBorder		674852						
ANR	675535	Symbol	* m_shadowPixmaps		674852						
ANR	675536	Symbol	Plasma :: FrameSvg :: RightBorder		674852						
ANR	675537	Symbol	m_emptyCornerTopPix		674852						
ANR	675538	Symbol	q -> elementSize		674852						
ANR	675539	Symbol	marginHint . isValid		674852						
ANR	675540	Symbol	Plasma :: FrameSvg :: LeftBorder		674852						
ANR	675541	Symbol	m_emptyCornerPix		674852						
ANR	675542	Symbol	marginHint . width		674852						
ANR	675543	Symbol	bottom		674852						
ANR	675544	Symbol	m_emptyCornerRightPix		674852						
ANR	675545	Symbol	right		674852						
ANR	675546	Symbol	marginHint		674852						
ANR	675547	Symbol	Plasma :: FrameSvg :: TopBorder		674852						
ANR	675548	Symbol	q		674852						
ANR	675549	Symbol	m_emptyHorizontalPix		674852						
ANR	675550	Symbol	left		674852						
ANR	675551	Symbol	m_shadowPixmaps [ 0 ] . height		674852						
ANR	675552	Symbol	m_shadowPixmaps [ 2 ] . width		674852						
ANR	675553	Symbol	m_shadowPixmaps		674852						
ANR	675554	Symbol	m_emptyVerticalPix		674852						
ANR	675555	Symbol	* q		674852						
ANR	675556	Symbol	marginHint . height		674852						
ANR	675557	Function	Shadows :: Private :: clearPixmaps	323:0:9984:10801							
ANR	675558	FunctionDef	Shadows :: Private :: clearPixmaps ()		675557	0					
ANR	675559	CompoundStatement		324:0:10022:10801	675557	0					
ANR	675560	IfStatement	if ( m_managePixmaps )		675557	0					
ANR	675561	Condition	m_managePixmaps	326:8:10048:10062	675557	0	True				
ANR	675562	Identifier	m_managePixmaps		675557	0					
ANR	675563	CompoundStatement		3:25:42:42	675557	1					
ANR	675564	Statement	foreach	327:8:10075:10081	675557	0	True				
ANR	675565	Statement	(	327:16:10083:10083	675557	1	True				
ANR	675566	Statement	const	327:17:10084:10088	675557	2	True				
ANR	675567	Statement	QPixmap	327:23:10090:10096	675557	3	True				
ANR	675568	Statement	&	327:31:10098:10098	675557	4	True				
ANR	675569	Statement	pixmap	327:32:10099:10104	675557	5	True				
ANR	675570	Statement	","	327:38:10105:10105	675557	6	True				
ANR	675571	Statement	m_shadowPixmaps	327:40:10107:10121	675557	7	True				
ANR	675572	Statement	)	327:55:10122:10122	675557	8	True				
ANR	675573	CompoundStatement		4:57:101:101	675557	9					
ANR	675574	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , pixmap . handle ( ) )"	328:12:10138:10187	675557	0	True				
ANR	675575	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , pixmap . handle ( ) )"		675557	0					
ANR	675576	Callee	XFreePixmap		675557	0					
ANR	675577	Identifier	XFreePixmap		675557	0					
ANR	675578	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675579	Argument	QX11Info :: display ( )		675557	0					
ANR	675580	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675581	Callee	QX11Info :: display		675557	0					
ANR	675582	Identifier	QX11Info :: display		675557	0					
ANR	675583	ArgumentList			675557	1					
ANR	675584	Argument	pixmap . handle ( )		675557	1					
ANR	675585	CallExpression	pixmap . handle ( )		675557	0					
ANR	675586	Callee	pixmap . handle		675557	0					
ANR	675587	MemberAccess	pixmap . handle		675557	0					
ANR	675588	Identifier	pixmap		675557	0					
ANR	675589	Identifier	handle		675557	1					
ANR	675590	ArgumentList			675557	1					
ANR	675591	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerPix . handle ( ) )"	331:8:10208:10267	675557	10	True				
ANR	675592	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerPix . handle ( ) )"		675557	0					
ANR	675593	Callee	XFreePixmap		675557	0					
ANR	675594	Identifier	XFreePixmap		675557	0					
ANR	675595	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675596	Argument	QX11Info :: display ( )		675557	0					
ANR	675597	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675598	Callee	QX11Info :: display		675557	0					
ANR	675599	Identifier	QX11Info :: display		675557	0					
ANR	675600	ArgumentList			675557	1					
ANR	675601	Argument	m_emptyCornerPix . handle ( )		675557	1					
ANR	675602	CallExpression	m_emptyCornerPix . handle ( )		675557	0					
ANR	675603	Callee	m_emptyCornerPix . handle		675557	0					
ANR	675604	MemberAccess	m_emptyCornerPix . handle		675557	0					
ANR	675605	Identifier	m_emptyCornerPix		675557	0					
ANR	675606	Identifier	handle		675557	1					
ANR	675607	ArgumentList			675557	1					
ANR	675608	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerBottomPix . handle ( ) )"	332:8:10277:10342	675557	11	True				
ANR	675609	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerBottomPix . handle ( ) )"		675557	0					
ANR	675610	Callee	XFreePixmap		675557	0					
ANR	675611	Identifier	XFreePixmap		675557	0					
ANR	675612	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675613	Argument	QX11Info :: display ( )		675557	0					
ANR	675614	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675615	Callee	QX11Info :: display		675557	0					
ANR	675616	Identifier	QX11Info :: display		675557	0					
ANR	675617	ArgumentList			675557	1					
ANR	675618	Argument	m_emptyCornerBottomPix . handle ( )		675557	1					
ANR	675619	CallExpression	m_emptyCornerBottomPix . handle ( )		675557	0					
ANR	675620	Callee	m_emptyCornerBottomPix . handle		675557	0					
ANR	675621	MemberAccess	m_emptyCornerBottomPix . handle		675557	0					
ANR	675622	Identifier	m_emptyCornerBottomPix		675557	0					
ANR	675623	Identifier	handle		675557	1					
ANR	675624	ArgumentList			675557	1					
ANR	675625	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerLeftPix . handle ( ) )"	333:8:10352:10415	675557	12	True				
ANR	675626	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerLeftPix . handle ( ) )"		675557	0					
ANR	675627	Callee	XFreePixmap		675557	0					
ANR	675628	Identifier	XFreePixmap		675557	0					
ANR	675629	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675630	Argument	QX11Info :: display ( )		675557	0					
ANR	675631	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675632	Callee	QX11Info :: display		675557	0					
ANR	675633	Identifier	QX11Info :: display		675557	0					
ANR	675634	ArgumentList			675557	1					
ANR	675635	Argument	m_emptyCornerLeftPix . handle ( )		675557	1					
ANR	675636	CallExpression	m_emptyCornerLeftPix . handle ( )		675557	0					
ANR	675637	Callee	m_emptyCornerLeftPix . handle		675557	0					
ANR	675638	MemberAccess	m_emptyCornerLeftPix . handle		675557	0					
ANR	675639	Identifier	m_emptyCornerLeftPix		675557	0					
ANR	675640	Identifier	handle		675557	1					
ANR	675641	ArgumentList			675557	1					
ANR	675642	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerRightPix . handle ( ) )"	334:8:10425:10489	675557	13	True				
ANR	675643	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerRightPix . handle ( ) )"		675557	0					
ANR	675644	Callee	XFreePixmap		675557	0					
ANR	675645	Identifier	XFreePixmap		675557	0					
ANR	675646	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675647	Argument	QX11Info :: display ( )		675557	0					
ANR	675648	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675649	Callee	QX11Info :: display		675557	0					
ANR	675650	Identifier	QX11Info :: display		675557	0					
ANR	675651	ArgumentList			675557	1					
ANR	675652	Argument	m_emptyCornerRightPix . handle ( )		675557	1					
ANR	675653	CallExpression	m_emptyCornerRightPix . handle ( )		675557	0					
ANR	675654	Callee	m_emptyCornerRightPix . handle		675557	0					
ANR	675655	MemberAccess	m_emptyCornerRightPix . handle		675557	0					
ANR	675656	Identifier	m_emptyCornerRightPix		675557	0					
ANR	675657	Identifier	handle		675557	1					
ANR	675658	ArgumentList			675557	1					
ANR	675659	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerTopPix . handle ( ) )"	335:8:10499:10561	675557	14	True				
ANR	675660	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyCornerTopPix . handle ( ) )"		675557	0					
ANR	675661	Callee	XFreePixmap		675557	0					
ANR	675662	Identifier	XFreePixmap		675557	0					
ANR	675663	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675664	Argument	QX11Info :: display ( )		675557	0					
ANR	675665	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675666	Callee	QX11Info :: display		675557	0					
ANR	675667	Identifier	QX11Info :: display		675557	0					
ANR	675668	ArgumentList			675557	1					
ANR	675669	Argument	m_emptyCornerTopPix . handle ( )		675557	1					
ANR	675670	CallExpression	m_emptyCornerTopPix . handle ( )		675557	0					
ANR	675671	Callee	m_emptyCornerTopPix . handle		675557	0					
ANR	675672	MemberAccess	m_emptyCornerTopPix . handle		675557	0					
ANR	675673	Identifier	m_emptyCornerTopPix		675557	0					
ANR	675674	Identifier	handle		675557	1					
ANR	675675	ArgumentList			675557	1					
ANR	675676	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyVerticalPix . handle ( ) )"	336:8:10571:10632	675557	15	True				
ANR	675677	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyVerticalPix . handle ( ) )"		675557	0					
ANR	675678	Callee	XFreePixmap		675557	0					
ANR	675679	Identifier	XFreePixmap		675557	0					
ANR	675680	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675681	Argument	QX11Info :: display ( )		675557	0					
ANR	675682	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675683	Callee	QX11Info :: display		675557	0					
ANR	675684	Identifier	QX11Info :: display		675557	0					
ANR	675685	ArgumentList			675557	1					
ANR	675686	Argument	m_emptyVerticalPix . handle ( )		675557	1					
ANR	675687	CallExpression	m_emptyVerticalPix . handle ( )		675557	0					
ANR	675688	Callee	m_emptyVerticalPix . handle		675557	0					
ANR	675689	MemberAccess	m_emptyVerticalPix . handle		675557	0					
ANR	675690	Identifier	m_emptyVerticalPix		675557	0					
ANR	675691	Identifier	handle		675557	1					
ANR	675692	ArgumentList			675557	1					
ANR	675693	ExpressionStatement	"XFreePixmap ( QX11Info :: display ( ) , m_emptyHorizontalPix . handle ( ) )"	337:8:10642:10705	675557	16	True				
ANR	675694	CallExpression	"XFreePixmap ( QX11Info :: display ( ) , m_emptyHorizontalPix . handle ( ) )"		675557	0					
ANR	675695	Callee	XFreePixmap		675557	0					
ANR	675696	Identifier	XFreePixmap		675557	0					
ANR	675697	ArgumentList	QX11Info :: display ( )		675557	1					
ANR	675698	Argument	QX11Info :: display ( )		675557	0					
ANR	675699	CallExpression	QX11Info :: display ( )		675557	0					
ANR	675700	Callee	QX11Info :: display		675557	0					
ANR	675701	Identifier	QX11Info :: display		675557	0					
ANR	675702	ArgumentList			675557	1					
ANR	675703	Argument	m_emptyHorizontalPix . handle ( )		675557	1					
ANR	675704	CallExpression	m_emptyHorizontalPix . handle ( )		675557	0					
ANR	675705	Callee	m_emptyHorizontalPix . handle		675557	0					
ANR	675706	MemberAccess	m_emptyHorizontalPix . handle		675557	0					
ANR	675707	Identifier	m_emptyHorizontalPix		675557	0					
ANR	675708	Identifier	handle		675557	1					
ANR	675709	ArgumentList			675557	1					
ANR	675710	ExpressionStatement	m_managePixmaps = false	339:8:10716:10739	675557	17	True				
ANR	675711	AssignmentExpression	m_managePixmaps = false		675557	0		=			
ANR	675712	Identifier	m_managePixmaps		675557	0					
ANR	675713	Identifier	false		675557	1					
ANR	675714	ExpressionStatement	m_shadowPixmaps . clear ( )	342:4:10758:10781	675557	1	True				
ANR	675715	CallExpression	m_shadowPixmaps . clear ( )		675557	0					
ANR	675716	Callee	m_shadowPixmaps . clear		675557	0					
ANR	675717	MemberAccess	m_shadowPixmaps . clear		675557	0					
ANR	675718	Identifier	m_shadowPixmaps		675557	0					
ANR	675719	Identifier	clear		675557	1					
ANR	675720	ArgumentList			675557	1					
ANR	675721	ExpressionStatement	data . clear ( )	343:4:10787:10799	675557	2	True				
ANR	675722	CallExpression	data . clear ( )		675557	0					
ANR	675723	Callee	data . clear		675557	0					
ANR	675724	MemberAccess	data . clear		675557	0					
ANR	675725	Identifier	data		675557	0					
ANR	675726	Identifier	clear		675557	1					
ANR	675727	ArgumentList			675557	1					
ANR	675728	ReturnType	void		675557	1					
ANR	675729	Identifier	Shadows :: Private :: clearPixmaps		675557	2					
ANR	675730	ParameterList			675557	3					
ANR	675731	CFGEntryNode	ENTRY		675557		True				
ANR	675732	CFGExitNode	EXIT		675557		True				
ANR	675733	Symbol	m_emptyCornerBottomPix		675557						
ANR	675734	Symbol	m_emptyCornerPix		675557						
ANR	675735	Symbol	pixmap		675557						
ANR	675736	Symbol	m_emptyCornerLeftPix . handle		675557						
ANR	675737	Symbol	data		675557						
ANR	675738	Symbol	m_emptyCornerTopPix . handle		675557						
ANR	675739	Symbol	m_emptyVerticalPix . handle		675557						
ANR	675740	Symbol	pixmap . handle		675557						
ANR	675741	Symbol	m_managePixmaps		675557						
ANR	675742	Symbol	m_emptyCornerRightPix		675557						
ANR	675743	Symbol	false		675557						
ANR	675744	Symbol	m_emptyCornerPix . handle		675557						
ANR	675745	Symbol	QX11Info :: display		675557						
ANR	675746	Symbol	m_emptyCornerLeftPix		675557						
ANR	675747	Symbol	m_emptyHorizontalPix		675557						
ANR	675748	Symbol	m_emptyCornerRightPix . handle		675557						
ANR	675749	Symbol	m_emptyCornerTopPix		675557						
ANR	675750	Symbol	m_emptyVerticalPix		675557						
ANR	675751	Symbol	m_shadowPixmaps		675557						
ANR	675752	Symbol	m_emptyCornerBottomPix . handle		675557						
ANR	675753	Symbol	m_emptyHorizontalPix . handle		675557						
ANR	675754	Function	Shadows :: Private :: updateShadow	346:0:10804:11475							
ANR	675755	FunctionDef	"Shadows :: Private :: updateShadow (const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders)"		675754	0					
ANR	675756	CompoundStatement		347:0:10912:11475	675754	0					
ANR	675757	IfStatement	if ( m_shadowPixmaps . isEmpty ( ) )		675754	0					
ANR	675758	Condition	m_shadowPixmaps . isEmpty ( )	349:8:10938:10962	675754	0	True				
ANR	675759	CallExpression	m_shadowPixmaps . isEmpty ( )		675754	0					
ANR	675760	Callee	m_shadowPixmaps . isEmpty		675754	0					
ANR	675761	MemberAccess	m_shadowPixmaps . isEmpty		675754	0					
ANR	675762	Identifier	m_shadowPixmaps		675754	0					
ANR	675763	Identifier	isEmpty		675754	1					
ANR	675764	ArgumentList			675754	1					
ANR	675765	CompoundStatement		3:35:52:52	675754	1					
ANR	675766	ExpressionStatement	setupPixmaps ( )	350:8:10975:10989	675754	0	True				
ANR	675767	CallExpression	setupPixmaps ( )		675754	0					
ANR	675768	Callee	setupPixmaps		675754	0					
ANR	675769	Identifier	setupPixmaps		675754	0					
ANR	675770	ArgumentList			675754	1					
ANR	675771	IfStatement	if ( ! data . contains ( enabledBorders ) )		675754	1					
ANR	675772	Condition	! data . contains ( enabledBorders )	353:8:11006:11035	675754	0	True				
ANR	675773	UnaryOperationExpression	! data . contains ( enabledBorders )		675754	0					
ANR	675774	UnaryOperator	!		675754	0					
ANR	675775	CallExpression	data . contains ( enabledBorders )		675754	1					
ANR	675776	Callee	data . contains		675754	0					
ANR	675777	MemberAccess	data . contains		675754	0					
ANR	675778	Identifier	data		675754	0					
ANR	675779	Identifier	contains		675754	1					
ANR	675780	ArgumentList	enabledBorders		675754	1					
ANR	675781	Argument	enabledBorders		675754	0					
ANR	675782	Identifier	enabledBorders		675754	0					
ANR	675783	CompoundStatement		7:40:125:125	675754	1					
ANR	675784	ExpressionStatement	setupData ( enabledBorders )	354:8:11048:11073	675754	0	True				
ANR	675785	CallExpression	setupData ( enabledBorders )		675754	0					
ANR	675786	Callee	setupData		675754	0					
ANR	675787	Identifier	setupData		675754	0					
ANR	675788	ArgumentList	enabledBorders		675754	1					
ANR	675789	Argument	enabledBorders		675754	0					
ANR	675790	Identifier	enabledBorders		675754	0					
ANR	675791	IdentifierDeclStatement	Display * dpy = QX11Info :: display ( ) ;	357:4:11086:11120	675754	2	True				
ANR	675792	IdentifierDecl	* dpy = QX11Info :: display ( )		675754	0					
ANR	675793	IdentifierDeclType	Display *		675754	0					
ANR	675794	Identifier	dpy		675754	1					
ANR	675795	AssignmentExpression	* dpy = QX11Info :: display ( )		675754	2		=			
ANR	675796	Identifier	dpy		675754	0					
ANR	675797	CallExpression	QX11Info :: display ( )		675754	1					
ANR	675798	Callee	QX11Info :: display		675754	0					
ANR	675799	Identifier	QX11Info :: display		675754	0					
ANR	675800	ArgumentList			675754	1					
ANR	675801	IdentifierDeclStatement	"Atom atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False ) ;"	358:4:11126:11183	675754	3	True				
ANR	675802	IdentifierDecl	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		675754	0					
ANR	675803	IdentifierDeclType	Atom		675754	0					
ANR	675804	Identifier	atom		675754	1					
ANR	675805	AssignmentExpression	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		675754	2		=			
ANR	675806	Identifier	atom		675754	0					
ANR	675807	CallExpression	"XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		675754	1					
ANR	675808	Callee	XInternAtom		675754	0					
ANR	675809	Identifier	XInternAtom		675754	0					
ANR	675810	ArgumentList	dpy		675754	1					
ANR	675811	Argument	dpy		675754	0					
ANR	675812	Identifier	dpy		675754	0					
ANR	675813	Argument	"""_KDE_NET_WM_SHADOW"""		675754	1					
ANR	675814	PrimaryExpression	"""_KDE_NET_WM_SHADOW"""		675754	0					
ANR	675815	Argument	False		675754	2					
ANR	675816	Identifier	False		675754	0					
ANR	675817	Statement	XChangeProperty	361:4:11265:11279	675754	4	True				
ANR	675818	Statement	(	361:19:11280:11280	675754	5	True				
ANR	675819	Statement	dpy	361:20:11281:11283	675754	6	True				
ANR	675820	Statement	","	361:23:11284:11284	675754	7	True				
ANR	675821	Statement	window	361:25:11286:11291	675754	8	True				
ANR	675822	Statement	->	361:31:11292:11293	675754	9	True				
ANR	675823	Statement	winId	361:33:11294:11298	675754	10	True				
ANR	675824	Statement	(	361:38:11299:11299	675754	11	True				
ANR	675825	Statement	)	361:39:11300:11300	675754	12	True				
ANR	675826	Statement	","	361:40:11301:11301	675754	13	True				
ANR	675827	Statement	atom	361:42:11303:11306	675754	14	True				
ANR	675828	Statement	","	361:46:11307:11307	675754	15	True				
ANR	675829	Statement	XA_CARDINAL	361:48:11309:11319	675754	16	True				
ANR	675830	Statement	","	361:59:11320:11320	675754	17	True				
ANR	675831	Statement	32	361:61:11322:11323	675754	18	True				
ANR	675832	Statement	","	361:63:11324:11324	675754	19	True				
ANR	675833	Statement	PropModeReplace	361:65:11326:11340	675754	20	True				
ANR	675834	Statement	","	361:80:11341:11341	675754	21	True				
ANR	675835	Statement	reinterpret_cast	362:20:11363:11378	675754	22	True				
ANR	675836	Statement	<	362:36:11379:11379	675754	23	True				
ANR	675837	Statement	const	362:37:11380:11384	675754	24	True				
ANR	675838	Statement	unsigned	362:43:11386:11393	675754	25	True				
ANR	675839	Statement	char	362:52:11395:11398	675754	26	True				
ANR	675840	Statement	*	362:57:11400:11400	675754	27	True				
ANR	675841	Statement	>	362:58:11401:11401	675754	28	True				
ANR	675842	Statement	(	362:59:11402:11402	675754	29	True				
ANR	675843	Statement	data	362:60:11403:11406	675754	30	True				
ANR	675844	Statement	[	362:64:11407:11407	675754	31	True				
ANR	675845	Statement	enabledBorders	362:65:11408:11421	675754	32	True				
ANR	675846	Statement	]	362:79:11422:11422	675754	33	True				
ANR	675847	Statement	.	362:80:11423:11423	675754	34	True				
ANR	675848	Statement	constData	362:81:11424:11432	675754	35	True				
ANR	675849	Statement	(	362:90:11433:11433	675754	36	True				
ANR	675850	Statement	)	362:91:11434:11434	675754	37	True				
ANR	675851	Statement	)	362:92:11435:11435	675754	38	True				
ANR	675852	Statement	","	362:93:11436:11436	675754	39	True				
ANR	675853	Statement	data	362:95:11438:11441	675754	40	True				
ANR	675854	Statement	[	362:99:11442:11442	675754	41	True				
ANR	675855	Statement	enabledBorders	362:100:11443:11456	675754	42	True				
ANR	675856	Statement	]	362:114:11457:11457	675754	43	True				
ANR	675857	Statement	.	362:115:11458:11458	675754	44	True				
ANR	675858	Statement	size	362:116:11459:11462	675754	45	True				
ANR	675859	Statement	(	362:120:11463:11463	675754	46	True				
ANR	675860	Statement	)	362:121:11464:11464	675754	47	True				
ANR	675861	Statement	)	362:122:11465:11465	675754	48	True				
ANR	675862	ExpressionStatement		362:123:11466:11466	675754	49	True				
ANR	675863	ReturnType	void		675754	1					
ANR	675864	Identifier	Shadows :: Private :: updateShadow		675754	2					
ANR	675865	ParameterList	"const QWidget * window , Plasma :: FrameSvg :: EnabledBorders enabledBorders"		675754	3					
ANR	675866	Parameter	const QWidget * window	346:36:10840:10860	675754	0	True				
ANR	675867	ParameterType	const QWidget *		675754	0					
ANR	675868	Identifier	window		675754	1					
ANR	675869	Parameter	Plasma :: FrameSvg :: EnabledBorders enabledBorders	346:59:10863:10909	675754	1	True				
ANR	675870	ParameterType	Plasma :: FrameSvg :: EnabledBorders		675754	0					
ANR	675871	Identifier	enabledBorders		675754	1					
ANR	675872	CFGEntryNode	ENTRY		675754		True				
ANR	675873	CFGExitNode	EXIT		675754		True				
ANR	675874	Symbol	m_shadowPixmaps . isEmpty		675754						
ANR	675875	Symbol	QX11Info :: display		675754						
ANR	675876	Symbol	XInternAtom		675754						
ANR	675877	Symbol	enabledBorders		675754						
ANR	675878	Symbol	data		675754						
ANR	675879	Symbol	data . contains		675754						
ANR	675880	Symbol	m_shadowPixmaps		675754						
ANR	675881	Symbol	window		675754						
ANR	675882	Symbol	False		675754						
ANR	675883	Symbol	dpy		675754						
ANR	675884	Symbol	atom		675754						
ANR	675885	Function	Shadows :: Private :: clearShadow	366:0:11478:11713							
ANR	675886	FunctionDef	Shadows :: Private :: clearShadow (const QWidget * window)		675885	0					
ANR	675887	CompoundStatement		367:0:11536:11713	675885	0					
ANR	675888	IdentifierDeclStatement	Display * dpy = QX11Info :: display ( ) ;	369:4:11558:11592	675885	0	True				
ANR	675889	IdentifierDecl	* dpy = QX11Info :: display ( )		675885	0					
ANR	675890	IdentifierDeclType	Display *		675885	0					
ANR	675891	Identifier	dpy		675885	1					
ANR	675892	AssignmentExpression	* dpy = QX11Info :: display ( )		675885	2		=			
ANR	675893	Identifier	dpy		675885	0					
ANR	675894	CallExpression	QX11Info :: display ( )		675885	1					
ANR	675895	Callee	QX11Info :: display		675885	0					
ANR	675896	Identifier	QX11Info :: display		675885	0					
ANR	675897	ArgumentList			675885	1					
ANR	675898	IdentifierDeclStatement	"Atom atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False ) ;"	370:4:11598:11655	675885	1	True				
ANR	675899	IdentifierDecl	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		675885	0					
ANR	675900	IdentifierDeclType	Atom		675885	0					
ANR	675901	Identifier	atom		675885	1					
ANR	675902	AssignmentExpression	"atom = XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		675885	2		=			
ANR	675903	Identifier	atom		675885	0					
ANR	675904	CallExpression	"XInternAtom ( dpy , ""_KDE_NET_WM_SHADOW"" , False )"		675885	1					
ANR	675905	Callee	XInternAtom		675885	0					
ANR	675906	Identifier	XInternAtom		675885	0					
ANR	675907	ArgumentList	dpy		675885	1					
ANR	675908	Argument	dpy		675885	0					
ANR	675909	Identifier	dpy		675885	0					
ANR	675910	Argument	"""_KDE_NET_WM_SHADOW"""		675885	1					
ANR	675911	PrimaryExpression	"""_KDE_NET_WM_SHADOW"""		675885	0					
ANR	675912	Argument	False		675885	2					
ANR	675913	Identifier	False		675885	0					
ANR	675914	ExpressionStatement	"XDeleteProperty ( dpy , window -> winId ( ) , atom )"	371:4:11661:11704	675885	2	True				
ANR	675915	CallExpression	"XDeleteProperty ( dpy , window -> winId ( ) , atom )"		675885	0					
ANR	675916	Callee	XDeleteProperty		675885	0					
ANR	675917	Identifier	XDeleteProperty		675885	0					
ANR	675918	ArgumentList	dpy		675885	1					
ANR	675919	Argument	dpy		675885	0					
ANR	675920	Identifier	dpy		675885	0					
ANR	675921	Argument	window -> winId ( )		675885	1					
ANR	675922	CallExpression	window -> winId ( )		675885	0					
ANR	675923	Callee	window -> winId		675885	0					
ANR	675924	PtrMemberAccess	window -> winId		675885	0					
ANR	675925	Identifier	window		675885	0					
ANR	675926	Identifier	winId		675885	1					
ANR	675927	ArgumentList			675885	1					
ANR	675928	Argument	atom		675885	2					
ANR	675929	Identifier	atom		675885	0					
ANR	675930	ReturnType	void		675885	1					
ANR	675931	Identifier	Shadows :: Private :: clearShadow		675885	2					
ANR	675932	ParameterList	const QWidget * window		675885	3					
ANR	675933	Parameter	const QWidget * window	366:35:11513:11533	675885	0	True				
ANR	675934	ParameterType	const QWidget *		675885	0					
ANR	675935	Identifier	window		675885	1					
ANR	675936	CFGEntryNode	ENTRY		675885		True				
ANR	675937	CFGExitNode	EXIT		675885		True				
ANR	675938	Symbol	QX11Info :: display		675885						
ANR	675939	Symbol	XInternAtom		675885						
ANR	675940	Symbol	* window		675885						
ANR	675941	Symbol	window		675885						
ANR	675942	Symbol	False		675885						
ANR	675943	Symbol	window -> winId		675885						
ANR	675944	Symbol	dpy		675885						
ANR	675945	Symbol	atom		675885						
ANR	675946	Function	Shadows :: enabled	375:0:11716:11787							
ANR	675947	FunctionDef	Shadows :: enabled ()		675946	0					
ANR	675948	CompoundStatement		376:0:11746:11787	675946	0					
ANR	675949	ReturnStatement	"return hasElement ( ""shadow-left"" ) ;"	377:5:11753:11785	675946	0	True				
ANR	675950	CallExpression	"hasElement ( ""shadow-left"" )"		675946	0					
ANR	675951	Callee	hasElement		675946	0					
ANR	675952	Identifier	hasElement		675946	0					
ANR	675953	ArgumentList	"""shadow-left"""		675946	1					
ANR	675954	Argument	"""shadow-left"""		675946	0					
ANR	675955	PrimaryExpression	"""shadow-left"""		675946	0					
ANR	675956	ReturnType	bool		675946	1					
ANR	675957	Identifier	Shadows :: enabled		675946	2					
ANR	675958	ParameterList			675946	3					
ANR	675959	CFGEntryNode	ENTRY		675946		True				
ANR	675960	CFGExitNode	EXIT		675946		True				
ANR	675961	Symbol	hasElement		675946						
