command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	871562	File	data/converged/CVE-2018-6791_plasma-workspace/xembed-sni-proxy_sniproxy.cpp								
ANR	871563	DeclStmt									
ANR	871564	Decl							uint16_t	uint16_t	s_embedSize
ANR	871565	DeclStmt									
ANR	871566	Decl							int	int	SNIProxy :: s_serviceCount
ANR	871567	Function	xembed_message_send	51:0:1558:2082							
ANR	871568	FunctionDef	"xembed_message_send (xcb_window_t towin , long message , long d1 , long d2 , long d3)"		871567	0					
ANR	871569	CompoundStatement		54:0:1664:2082	871567	0					
ANR	871570	IdentifierDeclStatement	xcb_client_message_event_t ev ;	55:4:1670:1699	871567	0	True				
ANR	871571	IdentifierDecl	ev		871567	0					
ANR	871572	IdentifierDeclType	xcb_client_message_event_t		871567	0					
ANR	871573	Identifier	ev		871567	1					
ANR	871574	ExpressionStatement	ev . response_type = XCB_CLIENT_MESSAGE	57:4:1706:1743	871567	1	True				
ANR	871575	AssignmentExpression	ev . response_type = XCB_CLIENT_MESSAGE		871567	0		=			
ANR	871576	MemberAccess	ev . response_type		871567	0					
ANR	871577	Identifier	ev		871567	0					
ANR	871578	Identifier	response_type		871567	1					
ANR	871579	Identifier	XCB_CLIENT_MESSAGE		871567	1					
ANR	871580	ExpressionStatement	ev . window = towin	58:4:1749:1766	871567	2	True				
ANR	871581	AssignmentExpression	ev . window = towin		871567	0		=			
ANR	871582	MemberAccess	ev . window		871567	0					
ANR	871583	Identifier	ev		871567	0					
ANR	871584	Identifier	window		871567	1					
ANR	871585	Identifier	towin		871567	1					
ANR	871586	ExpressionStatement	ev . format = 32	59:4:1772:1786	871567	3	True				
ANR	871587	AssignmentExpression	ev . format = 32		871567	0		=			
ANR	871588	MemberAccess	ev . format		871567	0					
ANR	871589	Identifier	ev		871567	0					
ANR	871590	Identifier	format		871567	1					
ANR	871591	PrimaryExpression	32		871567	1					
ANR	871592	ExpressionStatement	ev . data . data32 [ 0 ] = XCB_CURRENT_TIME	60:4:1792:1828	871567	4	True				
ANR	871593	AssignmentExpression	ev . data . data32 [ 0 ] = XCB_CURRENT_TIME		871567	0		=			
ANR	871594	ArrayIndexing	ev . data . data32 [ 0 ]		871567	0					
ANR	871595	MemberAccess	ev . data . data32		871567	0					
ANR	871596	MemberAccess	ev . data		871567	0					
ANR	871597	Identifier	ev		871567	0					
ANR	871598	Identifier	data		871567	1					
ANR	871599	Identifier	data32		871567	1					
ANR	871600	PrimaryExpression	0		871567	1					
ANR	871601	Identifier	XCB_CURRENT_TIME		871567	1					
ANR	871602	ExpressionStatement	ev . data . data32 [ 1 ] = message	61:4:1834:1861	871567	5	True				
ANR	871603	AssignmentExpression	ev . data . data32 [ 1 ] = message		871567	0		=			
ANR	871604	ArrayIndexing	ev . data . data32 [ 1 ]		871567	0					
ANR	871605	MemberAccess	ev . data . data32		871567	0					
ANR	871606	MemberAccess	ev . data		871567	0					
ANR	871607	Identifier	ev		871567	0					
ANR	871608	Identifier	data		871567	1					
ANR	871609	Identifier	data32		871567	1					
ANR	871610	PrimaryExpression	1		871567	1					
ANR	871611	Identifier	message		871567	1					
ANR	871612	ExpressionStatement	ev . data . data32 [ 2 ] = d1	62:4:1867:1889	871567	6	True				
ANR	871613	AssignmentExpression	ev . data . data32 [ 2 ] = d1		871567	0		=			
ANR	871614	ArrayIndexing	ev . data . data32 [ 2 ]		871567	0					
ANR	871615	MemberAccess	ev . data . data32		871567	0					
ANR	871616	MemberAccess	ev . data		871567	0					
ANR	871617	Identifier	ev		871567	0					
ANR	871618	Identifier	data		871567	1					
ANR	871619	Identifier	data32		871567	1					
ANR	871620	PrimaryExpression	2		871567	1					
ANR	871621	Identifier	d1		871567	1					
ANR	871622	ExpressionStatement	ev . data . data32 [ 3 ] = d2	63:4:1895:1917	871567	7	True				
ANR	871623	AssignmentExpression	ev . data . data32 [ 3 ] = d2		871567	0		=			
ANR	871624	ArrayIndexing	ev . data . data32 [ 3 ]		871567	0					
ANR	871625	MemberAccess	ev . data . data32		871567	0					
ANR	871626	MemberAccess	ev . data		871567	0					
ANR	871627	Identifier	ev		871567	0					
ANR	871628	Identifier	data		871567	1					
ANR	871629	Identifier	data32		871567	1					
ANR	871630	PrimaryExpression	3		871567	1					
ANR	871631	Identifier	d2		871567	1					
ANR	871632	ExpressionStatement	ev . data . data32 [ 4 ] = d3	64:4:1923:1945	871567	8	True				
ANR	871633	AssignmentExpression	ev . data . data32 [ 4 ] = d3		871567	0		=			
ANR	871634	ArrayIndexing	ev . data . data32 [ 4 ]		871567	0					
ANR	871635	MemberAccess	ev . data . data32		871567	0					
ANR	871636	MemberAccess	ev . data		871567	0					
ANR	871637	Identifier	ev		871567	0					
ANR	871638	Identifier	data		871567	1					
ANR	871639	Identifier	data32		871567	1					
ANR	871640	PrimaryExpression	4		871567	1					
ANR	871641	Identifier	d3		871567	1					
ANR	871642	ExpressionStatement	ev . type = Xcb :: atoms -> xembedAtom	65:4:1951:1983	871567	9	True				
ANR	871643	AssignmentExpression	ev . type = Xcb :: atoms -> xembedAtom		871567	0		=			
ANR	871644	MemberAccess	ev . type		871567	0					
ANR	871645	Identifier	ev		871567	0					
ANR	871646	Identifier	type		871567	1					
ANR	871647	PtrMemberAccess	Xcb :: atoms -> xembedAtom		871567	1					
ANR	871648	Identifier	Xcb :: atoms		871567	0					
ANR	871649	Identifier	xembedAtom		871567	1					
ANR	871650	ExpressionStatement	"xcb_send_event ( QX11Info :: connection ( ) , false , towin , XCB_EVENT_MASK_NO_EVENT , ( char * ) & ev )"	66:4:1989:2080	871567	10	True				
ANR	871651	CallExpression	"xcb_send_event ( QX11Info :: connection ( ) , false , towin , XCB_EVENT_MASK_NO_EVENT , ( char * ) & ev )"		871567	0					
ANR	871652	Callee	xcb_send_event		871567	0					
ANR	871653	Identifier	xcb_send_event		871567	0					
ANR	871654	ArgumentList	QX11Info :: connection ( )		871567	1					
ANR	871655	Argument	QX11Info :: connection ( )		871567	0					
ANR	871656	CallExpression	QX11Info :: connection ( )		871567	0					
ANR	871657	Callee	QX11Info :: connection		871567	0					
ANR	871658	Identifier	QX11Info :: connection		871567	0					
ANR	871659	ArgumentList			871567	1					
ANR	871660	Argument	false		871567	1					
ANR	871661	Identifier	false		871567	0					
ANR	871662	Argument	towin		871567	2					
ANR	871663	Identifier	towin		871567	0					
ANR	871664	Argument	XCB_EVENT_MASK_NO_EVENT		871567	3					
ANR	871665	Identifier	XCB_EVENT_MASK_NO_EVENT		871567	0					
ANR	871666	Argument	( char * ) & ev		871567	4					
ANR	871667	CastExpression	( char * ) & ev		871567	0					
ANR	871668	CastTarget	char *		871567	0					
ANR	871669	UnaryOperationExpression	& ev		871567	1					
ANR	871670	UnaryOperator	&		871567	0					
ANR	871671	Identifier	ev		871567	1					
ANR	871672	ReturnType	void		871567	1					
ANR	871673	Identifier	xembed_message_send		871567	2					
ANR	871674	ParameterList	"xcb_window_t towin , long message , long d1 , long d2 , long d3"		871567	3					
ANR	871675	Parameter	xcb_window_t towin	52:20:1583:1600	871567	0	True				
ANR	871676	ParameterType	xcb_window_t		871567	0					
ANR	871677	Identifier	towin		871567	1					
ANR	871678	Parameter	long message	53:20:1623:1634	871567	1	True				
ANR	871679	ParameterType	long		871567	0					
ANR	871680	Identifier	message		871567	1					
ANR	871681	Parameter	long d1	53:34:1637:1643	871567	2	True				
ANR	871682	ParameterType	long		871567	0					
ANR	871683	Identifier	d1		871567	1					
ANR	871684	Parameter	long d2	53:43:1646:1652	871567	3	True				
ANR	871685	ParameterType	long		871567	0					
ANR	871686	Identifier	d2		871567	1					
ANR	871687	Parameter	long d3	53:52:1655:1661	871567	4	True				
ANR	871688	ParameterType	long		871567	0					
ANR	871689	Identifier	d3		871567	1					
ANR	871690	CFGEntryNode	ENTRY		871567		True				
ANR	871691	CFGExitNode	EXIT		871567		True				
ANR	871692	Symbol	XCB_CLIENT_MESSAGE		871567						
ANR	871693	Symbol	* ev . data . data32		871567						
ANR	871694	Symbol	* ev . data		871567						
ANR	871695	Symbol	QX11Info :: connection		871567						
ANR	871696	Symbol	* Xcb :: atoms		871567						
ANR	871697	Symbol	ev . format		871567						
ANR	871698	Symbol	Xcb :: atoms		871567						
ANR	871699	Symbol	false		871567						
ANR	871700	Symbol	ev . data		871567						
ANR	871701	Symbol	XCB_EVENT_MASK_NO_EVENT		871567						
ANR	871702	Symbol	message		871567						
ANR	871703	Symbol	d1		871567						
ANR	871704	Symbol	Xcb :: atoms -> xembedAtom		871567						
ANR	871705	Symbol	d2		871567						
ANR	871706	Symbol	d3		871567						
ANR	871707	Symbol	ev		871567						
ANR	871708	Symbol	ev . type		871567						
ANR	871709	Symbol	* ev		871567						
ANR	871710	Symbol	XCB_CURRENT_TIME		871567						
ANR	871711	Symbol	towin		871567						
ANR	871712	Symbol	ev . response_type		871567						
ANR	871713	Symbol	ev . window		871567						
ANR	871714	Symbol	& ev		871567						
ANR	871715	Symbol	ev . data . data32		871567						
ANR	871716	Function	SNIProxy :: SNIProxy	69:0:2085:8139							
ANR	871717	FunctionDef	"SNIProxy :: SNIProxy (xcb_window_t wid , QObject * parent)"		871716	0					
ANR	871718	CompoundStatement		76:0:2611:8139	871716	0					
ANR	871719	ExpressionStatement	this	78:4:2638:2673	871716	0	True				
ANR	871720	Identifier	this		871716	0					
ANR	871721	ExpressionStatement	"m_dbus . registerObject ( QStringLiteral ( ""/StatusNotifierItem"" ) , this )"	79:4:2679:2745	871716	1	True				
ANR	871722	CallExpression	"m_dbus . registerObject ( QStringLiteral ( ""/StatusNotifierItem"" ) , this )"		871716	0					
ANR	871723	Callee	m_dbus . registerObject		871716	0					
ANR	871724	MemberAccess	m_dbus . registerObject		871716	0					
ANR	871725	Identifier	m_dbus		871716	0					
ANR	871726	Identifier	registerObject		871716	1					
ANR	871727	ArgumentList	"QStringLiteral ( ""/StatusNotifierItem"" )"		871716	1					
ANR	871728	Argument	"QStringLiteral ( ""/StatusNotifierItem"" )"		871716	0					
ANR	871729	CallExpression	"QStringLiteral ( ""/StatusNotifierItem"" )"		871716	0					
ANR	871730	Callee	QStringLiteral		871716	0					
ANR	871731	Identifier	QStringLiteral		871716	0					
ANR	871732	ArgumentList	"""/StatusNotifierItem"""		871716	1					
ANR	871733	Argument	"""/StatusNotifierItem"""		871716	0					
ANR	871734	PrimaryExpression	"""/StatusNotifierItem"""		871716	0					
ANR	871735	Argument	this		871716	1					
ANR	871736	Identifier	this		871716	0					
ANR	871737	Statement	auto	81:4:2752:2755	871716	2	True				
ANR	871738	ExpressionStatement	"statusNotifierWatcher = new org :: kde :: StatusNotifierWatcher ( QStringLiteral ( SNI_WATCHER_SERVICE_NAME ) , QStringLiteral ( SNI_WATCHER_PATH ) , QDBusConnection :: sessionBus ( ) , this )"	81:9:2757:2929	871716	3	True				
ANR	871739	AssignmentExpression	"statusNotifierWatcher = new org :: kde :: StatusNotifierWatcher ( QStringLiteral ( SNI_WATCHER_SERVICE_NAME ) , QStringLiteral ( SNI_WATCHER_PATH ) , QDBusConnection :: sessionBus ( ) , this )"		871716	0		=			
ANR	871740	Identifier	statusNotifierWatcher		871716	0					
ANR	871741	Expression	"QStringLiteral ( SNI_WATCHER_SERVICE_NAME ) , QStringLiteral ( SNI_WATCHER_PATH ) , QDBusConnection :: sessionBus ( ) , this"		871716	1					
ANR	871742	CallExpression	QStringLiteral ( SNI_WATCHER_SERVICE_NAME )		871716	0					
ANR	871743	Callee	QStringLiteral		871716	0					
ANR	871744	Identifier	QStringLiteral		871716	0					
ANR	871745	ArgumentList	SNI_WATCHER_SERVICE_NAME		871716	1					
ANR	871746	Argument	SNI_WATCHER_SERVICE_NAME		871716	0					
ANR	871747	Identifier	SNI_WATCHER_SERVICE_NAME		871716	0					
ANR	871748	Expression	"QStringLiteral ( SNI_WATCHER_PATH ) , QDBusConnection :: sessionBus ( ) , this"		871716	1					
ANR	871749	CallExpression	QStringLiteral ( SNI_WATCHER_PATH )		871716	0					
ANR	871750	Callee	QStringLiteral		871716	0					
ANR	871751	Identifier	QStringLiteral		871716	0					
ANR	871752	ArgumentList	SNI_WATCHER_PATH		871716	1					
ANR	871753	Argument	SNI_WATCHER_PATH		871716	0					
ANR	871754	Identifier	SNI_WATCHER_PATH		871716	0					
ANR	871755	Expression	"QDBusConnection :: sessionBus ( ) , this"		871716	1					
ANR	871756	CallExpression	QDBusConnection :: sessionBus ( )		871716	0					
ANR	871757	Callee	QDBusConnection :: sessionBus		871716	0					
ANR	871758	Identifier	QDBusConnection :: sessionBus		871716	0					
ANR	871759	ArgumentList			871716	1					
ANR	871760	Identifier	this		871716	1					
ANR	871761	Statement	auto	82:4:2935:2938	871716	4	True				
ANR	871762	ExpressionStatement	reply = statusNotifierWatcher -> RegisterStatusNotifierItem ( m_dbus . baseService ( ) )	82:9:2940:3019	871716	5	True				
ANR	871763	AssignmentExpression	reply = statusNotifierWatcher -> RegisterStatusNotifierItem ( m_dbus . baseService ( ) )		871716	0		=			
ANR	871764	Identifier	reply		871716	0					
ANR	871765	CallExpression	statusNotifierWatcher -> RegisterStatusNotifierItem ( m_dbus . baseService ( ) )		871716	1					
ANR	871766	Callee	statusNotifierWatcher -> RegisterStatusNotifierItem		871716	0					
ANR	871767	PtrMemberAccess	statusNotifierWatcher -> RegisterStatusNotifierItem		871716	0					
ANR	871768	Identifier	statusNotifierWatcher		871716	0					
ANR	871769	Identifier	RegisterStatusNotifierItem		871716	1					
ANR	871770	ArgumentList	m_dbus . baseService ( )		871716	1					
ANR	871771	Argument	m_dbus . baseService ( )		871716	0					
ANR	871772	CallExpression	m_dbus . baseService ( )		871716	0					
ANR	871773	Callee	m_dbus . baseService		871716	0					
ANR	871774	MemberAccess	m_dbus . baseService		871716	0					
ANR	871775	Identifier	m_dbus		871716	0					
ANR	871776	Identifier	baseService		871716	1					
ANR	871777	ArgumentList			871716	1					
ANR	871778	ExpressionStatement	reply . waitForFinished ( )	83:4:3025:3048	871716	6	True				
ANR	871779	CallExpression	reply . waitForFinished ( )		871716	0					
ANR	871780	Callee	reply . waitForFinished		871716	0					
ANR	871781	MemberAccess	reply . waitForFinished		871716	0					
ANR	871782	Identifier	reply		871716	0					
ANR	871783	Identifier	waitForFinished		871716	1					
ANR	871784	ArgumentList			871716	1					
ANR	871785	IfStatement	if ( reply . isError ( ) )		871716	7					
ANR	871786	Condition	reply . isError ( )	84:8:3058:3072	871716	0	True				
ANR	871787	CallExpression	reply . isError ( )		871716	0					
ANR	871788	Callee	reply . isError		871716	0					
ANR	871789	MemberAccess	reply . isError		871716	0					
ANR	871790	Identifier	reply		871716	0					
ANR	871791	Identifier	isError		871716	1					
ANR	871792	ArgumentList			871716	1					
ANR	871793	CompoundStatement		9:25:463:463	871716	1					
ANR	871794	ExpressionStatement	"qCWarning ( SNIPROXY ) << ""could not register SNI:"" << reply . error ( ) . message ( )"	85:8:3085:3160	871716	0	True				
ANR	871795	ShiftExpression	"qCWarning ( SNIPROXY ) << ""could not register SNI:"" << reply . error ( ) . message ( )"		871716	0		<<			
ANR	871796	CallExpression	qCWarning ( SNIPROXY )		871716	0					
ANR	871797	Callee	qCWarning		871716	0					
ANR	871798	Identifier	qCWarning		871716	0					
ANR	871799	ArgumentList	SNIPROXY		871716	1					
ANR	871800	Argument	SNIPROXY		871716	0					
ANR	871801	Identifier	SNIPROXY		871716	0					
ANR	871802	ShiftExpression	"""could not register SNI:"" << reply . error ( ) . message ( )"		871716	1		<<			
ANR	871803	PrimaryExpression	"""could not register SNI:"""		871716	0					
ANR	871804	CallExpression	reply . error ( ) . message ( )		871716	1					
ANR	871805	Callee	reply . error ( ) . message		871716	0					
ANR	871806	MemberAccess	reply . error ( ) . message		871716	0					
ANR	871807	CallExpression	reply . error ( )		871716	0					
ANR	871808	Callee	reply . error		871716	0					
ANR	871809	MemberAccess	reply . error		871716	0					
ANR	871810	Identifier	reply		871716	0					
ANR	871811	Identifier	error		871716	1					
ANR	871812	ArgumentList			871716	1					
ANR	871813	Identifier	message		871716	1					
ANR	871814	ArgumentList			871716	1					
ANR	871815	Statement	auto	88:4:3173:3176	871716	8	True				
ANR	871816	ExpressionStatement	c = QX11Info :: connection ( )	88:9:3178:3204	871716	9	True				
ANR	871817	AssignmentExpression	c = QX11Info :: connection ( )		871716	0		=			
ANR	871818	Identifier	c		871716	0					
ANR	871819	CallExpression	QX11Info :: connection ( )		871716	1					
ANR	871820	Callee	QX11Info :: connection		871716	0					
ANR	871821	Identifier	QX11Info :: connection		871716	0					
ANR	871822	ArgumentList			871716	1					
ANR	871823	Statement	auto	90:4:3211:3214	871716	10	True				
ANR	871824	ExpressionStatement	"cookie = xcb_get_geometry ( c , m_windowId )"	90:9:3216:3256	871716	11	True				
ANR	871825	AssignmentExpression	"cookie = xcb_get_geometry ( c , m_windowId )"		871716	0		=			
ANR	871826	Identifier	cookie		871716	0					
ANR	871827	CallExpression	"xcb_get_geometry ( c , m_windowId )"		871716	1					
ANR	871828	Callee	xcb_get_geometry		871716	0					
ANR	871829	Identifier	xcb_get_geometry		871716	0					
ANR	871830	ArgumentList	c		871716	1					
ANR	871831	Argument	c		871716	0					
ANR	871832	Identifier	c		871716	0					
ANR	871833	Argument	m_windowId		871716	1					
ANR	871834	Identifier	m_windowId		871716	0					
ANR	871835	IdentifierDeclStatement	"QScopedPointer < xcb_get_geometry_reply_t , QScopedPointerPodDeleter > clientGeom ( xcb_get_geometry_reply ( c , cookie , Q_NULLPTR ) ) ;"	91:4:3262:3393	871716	12	True				
ANR	871836	IdentifierDecl	"clientGeom ( xcb_get_geometry_reply ( c , cookie , Q_NULLPTR ) )"		871716	0					
ANR	871837	IdentifierDeclType	"QScopedPointer < xcb_get_geometry_reply_t , QScopedPointerPodDeleter >"		871716	0					
ANR	871838	Identifier	clientGeom		871716	1					
ANR	871839	CallExpression	"xcb_get_geometry_reply ( c , cookie , Q_NULLPTR )"		871716	2					
ANR	871840	Callee	xcb_get_geometry_reply		871716	0					
ANR	871841	Identifier	xcb_get_geometry_reply		871716	0					
ANR	871842	ArgumentList	c		871716	1					
ANR	871843	Argument	c		871716	0					
ANR	871844	Identifier	c		871716	0					
ANR	871845	Argument	cookie		871716	1					
ANR	871846	Identifier	cookie		871716	0					
ANR	871847	Argument	Q_NULLPTR		871716	2					
ANR	871848	Identifier	Q_NULLPTR		871716	0					
ANR	871849	Statement	auto	95:4:3432:3435	871716	13	True				
ANR	871850	ExpressionStatement	screen = xcb_setup_roots_iterator ( xcb_get_setup ( c ) ) . data	95:9:3437:3495	871716	14	True				
ANR	871851	AssignmentExpression	screen = xcb_setup_roots_iterator ( xcb_get_setup ( c ) ) . data		871716	0		=			
ANR	871852	Identifier	screen		871716	0					
ANR	871853	MemberAccess	xcb_setup_roots_iterator ( xcb_get_setup ( c ) ) . data		871716	1					
ANR	871854	CallExpression	xcb_setup_roots_iterator ( xcb_get_setup ( c ) )		871716	0					
ANR	871855	Callee	xcb_setup_roots_iterator		871716	0					
ANR	871856	Identifier	xcb_setup_roots_iterator		871716	0					
ANR	871857	ArgumentList	xcb_get_setup ( c )		871716	1					
ANR	871858	Argument	xcb_get_setup ( c )		871716	0					
ANR	871859	CallExpression	xcb_get_setup ( c )		871716	0					
ANR	871860	Callee	xcb_get_setup		871716	0					
ANR	871861	Identifier	xcb_get_setup		871716	0					
ANR	871862	ArgumentList	c		871716	1					
ANR	871863	Argument	c		871716	0					
ANR	871864	Identifier	c		871716	0					
ANR	871865	Identifier	data		871716	1					
ANR	871866	ExpressionStatement	m_containerWid = xcb_generate_id ( c )	96:4:3501:3536	871716	15	True				
ANR	871867	AssignmentExpression	m_containerWid = xcb_generate_id ( c )		871716	0		=			
ANR	871868	Identifier	m_containerWid		871716	0					
ANR	871869	CallExpression	xcb_generate_id ( c )		871716	1					
ANR	871870	Callee	xcb_generate_id		871716	0					
ANR	871871	Identifier	xcb_generate_id		871716	0					
ANR	871872	ArgumentList	c		871716	1					
ANR	871873	Argument	c		871716	0					
ANR	871874	Identifier	c		871716	0					
ANR	871875	IdentifierDeclStatement	uint32_t values [ 2 ] ;	97:4:3542:3560	871716	16	True				
ANR	871876	IdentifierDecl	values [ 2 ]		871716	0					
ANR	871877	IdentifierDeclType	uint32_t [ 2 ]		871716	0					
ANR	871878	Identifier	values		871716	1					
ANR	871879	PrimaryExpression	2		871716	2					
ANR	871880	Statement	auto	98:4:3566:3569	871716	17	True				
ANR	871881	ExpressionStatement	mask = XCB_CW_BACK_PIXEL | XCB_CW_OVERRIDE_REDIRECT	98:9:3571:3622	871716	18	True				
ANR	871882	AssignmentExpression	mask = XCB_CW_BACK_PIXEL | XCB_CW_OVERRIDE_REDIRECT		871716	0		=			
ANR	871883	Identifier	mask		871716	0					
ANR	871884	InclusiveOrExpression	XCB_CW_BACK_PIXEL | XCB_CW_OVERRIDE_REDIRECT		871716	1		|			
ANR	871885	Identifier	XCB_CW_BACK_PIXEL		871716	0					
ANR	871886	Identifier	XCB_CW_OVERRIDE_REDIRECT		871716	1					
ANR	871887	ExpressionStatement	values [ 0 ] = screen -> black_pixel	99:4:3628:3659	871716	19	True				
ANR	871888	AssignmentExpression	values [ 0 ] = screen -> black_pixel		871716	0		=			
ANR	871889	ArrayIndexing	values [ 0 ]		871716	0					
ANR	871890	Identifier	values		871716	0					
ANR	871891	PrimaryExpression	0		871716	1					
ANR	871892	PtrMemberAccess	screen -> black_pixel		871716	1					
ANR	871893	Identifier	screen		871716	0					
ANR	871894	Identifier	black_pixel		871716	1					
ANR	871895	ExpressionStatement	values [ 1 ] = true	100:4:3737:3753	871716	20	True				
ANR	871896	AssignmentExpression	values [ 1 ] = true		871716	0		=			
ANR	871897	ArrayIndexing	values [ 1 ]		871716	0					
ANR	871898	Identifier	values		871716	0					
ANR	871899	PrimaryExpression	1		871716	1					
ANR	871900	Identifier	true		871716	1					
ANR	871901	ExpressionStatement	"xcb_create_window ( c , XCB_COPY_FROM_PARENT , m_containerWid , screen -> root , 0 , 0 , s_embedSize , s_embedSize , 0 , XCB_WINDOW_CLASS_INPUT_OUTPUT , screen -> root_visual , mask , values )"	101:4:3771:4440	871716	21	True				
ANR	871902	CallExpression	"xcb_create_window ( c , XCB_COPY_FROM_PARENT , m_containerWid , screen -> root , 0 , 0 , s_embedSize , s_embedSize , 0 , XCB_WINDOW_CLASS_INPUT_OUTPUT , screen -> root_visual , mask , values )"		871716	0					
ANR	871903	Callee	xcb_create_window		871716	0					
ANR	871904	Identifier	xcb_create_window		871716	0					
ANR	871905	ArgumentList	c		871716	1					
ANR	871906	Argument	c		871716	0					
ANR	871907	Identifier	c		871716	0					
ANR	871908	Argument	XCB_COPY_FROM_PARENT		871716	1					
ANR	871909	Identifier	XCB_COPY_FROM_PARENT		871716	0					
ANR	871910	Argument	m_containerWid		871716	2					
ANR	871911	Identifier	m_containerWid		871716	0					
ANR	871912	Argument	screen -> root		871716	3					
ANR	871913	PtrMemberAccess	screen -> root		871716	0					
ANR	871914	Identifier	screen		871716	0					
ANR	871915	Identifier	root		871716	1					
ANR	871916	Argument	0		871716	4					
ANR	871917	PrimaryExpression	0		871716	0					
ANR	871918	Argument	0		871716	5					
ANR	871919	PrimaryExpression	0		871716	0					
ANR	871920	Argument	s_embedSize		871716	6					
ANR	871921	Identifier	s_embedSize		871716	0					
ANR	871922	Argument	s_embedSize		871716	7					
ANR	871923	Identifier	s_embedSize		871716	0					
ANR	871924	Argument	0		871716	8					
ANR	871925	PrimaryExpression	0		871716	0					
ANR	871926	Argument	XCB_WINDOW_CLASS_INPUT_OUTPUT		871716	9					
ANR	871927	Identifier	XCB_WINDOW_CLASS_INPUT_OUTPUT		871716	0					
ANR	871928	Argument	screen -> root_visual		871716	10					
ANR	871929	PtrMemberAccess	screen -> root_visual		871716	0					
ANR	871930	Identifier	screen		871716	0					
ANR	871931	Identifier	root_visual		871716	1					
ANR	871932	Argument	mask		871716	11					
ANR	871933	Identifier	mask		871716	0					
ANR	871934	Argument	values		871716	12					
ANR	871935	Identifier	values		871716	0					
ANR	871936	IdentifierDeclStatement	const uint32_t stackBelowData [ ] = { XCB_STACK_MODE_BELOW } ;	124:4:5204:5260	871716	22	True				
ANR	871937	IdentifierDecl	stackBelowData [ ] = { XCB_STACK_MODE_BELOW }		871716	0					
ANR	871938	IdentifierDeclType	const uint32_t [ ]		871716	0					
ANR	871939	Identifier	stackBelowData		871716	1					
ANR	871940	AssignmentExpression	stackBelowData [ ] = { XCB_STACK_MODE_BELOW }		871716	2		=			
ANR	871941	Identifier	stackBelowData		871716	0					
ANR	871942	InitializerList	XCB_STACK_MODE_BELOW		871716	1					
ANR	871943	Identifier	XCB_STACK_MODE_BELOW		871716	0					
ANR	871944	ExpressionStatement	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_STACK_MODE , stackBelowData )"	125:4:5266:5351	871716	23	True				
ANR	871945	CallExpression	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_STACK_MODE , stackBelowData )"		871716	0					
ANR	871946	Callee	xcb_configure_window		871716	0					
ANR	871947	Identifier	xcb_configure_window		871716	0					
ANR	871948	ArgumentList	c		871716	1					
ANR	871949	Argument	c		871716	0					
ANR	871950	Identifier	c		871716	0					
ANR	871951	Argument	m_containerWid		871716	1					
ANR	871952	Identifier	m_containerWid		871716	0					
ANR	871953	Argument	XCB_CONFIG_WINDOW_STACK_MODE		871716	2					
ANR	871954	Identifier	XCB_CONFIG_WINDOW_STACK_MODE		871716	0					
ANR	871955	Argument	stackBelowData		871716	3					
ANR	871956	Identifier	stackBelowData		871716	0					
ANR	871957	IdentifierDeclStatement	"NETWinInfo wm ( c , m_containerWid , screen -> root , 0 , 0 ) ;"	127:4:5358:5410	871716	24	True				
ANR	871958	IdentifierDecl	"wm ( c , m_containerWid , screen -> root , 0 , 0 )"		871716	0					
ANR	871959	IdentifierDeclType	NETWinInfo		871716	0					
ANR	871960	Identifier	wm		871716	1					
ANR	871961	Expression	"c , m_containerWid , screen -> root , 0 , 0"		871716	2					
ANR	871962	Identifier	c		871716	0					
ANR	871963	Expression	"m_containerWid , screen -> root , 0 , 0"		871716	1					
ANR	871964	Identifier	m_containerWid		871716	0					
ANR	871965	Expression	"screen -> root , 0 , 0"		871716	1					
ANR	871966	PtrMemberAccess	screen -> root		871716	0					
ANR	871967	Identifier	screen		871716	0					
ANR	871968	Identifier	root		871716	1					
ANR	871969	Expression	"0 , 0"		871716	1					
ANR	871970	PrimaryExpression	0		871716	0					
ANR	871971	PrimaryExpression	0		871716	1					
ANR	871972	ExpressionStatement	wm . setOpacity ( 0 )	128:4:5416:5432	871716	25	True				
ANR	871973	CallExpression	wm . setOpacity ( 0 )		871716	0					
ANR	871974	Callee	wm . setOpacity		871716	0					
ANR	871975	MemberAccess	wm . setOpacity		871716	0					
ANR	871976	Identifier	wm		871716	0					
ANR	871977	Identifier	setOpacity		871716	1					
ANR	871978	ArgumentList	0		871716	1					
ANR	871979	Argument	0		871716	0					
ANR	871980	PrimaryExpression	0		871716	0					
ANR	871981	ExpressionStatement	xcb_flush ( c )	131:4:5446:5458	871716	26	True				
ANR	871982	CallExpression	xcb_flush ( c )		871716	0					
ANR	871983	Callee	xcb_flush		871716	0					
ANR	871984	Identifier	xcb_flush		871716	0					
ANR	871985	ArgumentList	c		871716	1					
ANR	871986	Argument	c		871716	0					
ANR	871987	Identifier	c		871716	0					
ANR	871988	ExpressionStatement	"xcb_map_window ( c , m_containerWid )"	133:4:5465:5498	871716	27	True				
ANR	871989	CallExpression	"xcb_map_window ( c , m_containerWid )"		871716	0					
ANR	871990	Callee	xcb_map_window		871716	0					
ANR	871991	Identifier	xcb_map_window		871716	0					
ANR	871992	ArgumentList	c		871716	1					
ANR	871993	Argument	c		871716	0					
ANR	871994	Identifier	c		871716	0					
ANR	871995	Argument	m_containerWid		871716	1					
ANR	871996	Identifier	m_containerWid		871716	0					
ANR	871997	ExpressionStatement	"xcb_reparent_window ( c , wid , m_containerWid , 0 , 0 )"	135:4:5505:5602	871716	28	True				
ANR	871998	CallExpression	"xcb_reparent_window ( c , wid , m_containerWid , 0 , 0 )"		871716	0					
ANR	871999	Callee	xcb_reparent_window		871716	0					
ANR	872000	Identifier	xcb_reparent_window		871716	0					
ANR	872001	ArgumentList	c		871716	1					
ANR	872002	Argument	c		871716	0					
ANR	872003	Identifier	c		871716	0					
ANR	872004	Argument	wid		871716	1					
ANR	872005	Identifier	wid		871716	0					
ANR	872006	Argument	m_containerWid		871716	2					
ANR	872007	Identifier	m_containerWid		871716	0					
ANR	872008	Argument	0		871716	3					
ANR	872009	PrimaryExpression	0		871716	0					
ANR	872010	Argument	0		871716	4					
ANR	872011	PrimaryExpression	0		871716	0					
ANR	872012	ExpressionStatement	"xcb_composite_redirect_window ( c , wid , XCB_COMPOSITE_REDIRECT_MANUAL )"	142:4:5668:5736	871716	29	True				
ANR	872013	CallExpression	"xcb_composite_redirect_window ( c , wid , XCB_COMPOSITE_REDIRECT_MANUAL )"		871716	0					
ANR	872014	Callee	xcb_composite_redirect_window		871716	0					
ANR	872015	Identifier	xcb_composite_redirect_window		871716	0					
ANR	872016	ArgumentList	c		871716	1					
ANR	872017	Argument	c		871716	0					
ANR	872018	Identifier	c		871716	0					
ANR	872019	Argument	wid		871716	1					
ANR	872020	Identifier	wid		871716	0					
ANR	872021	Argument	XCB_COMPOSITE_REDIRECT_MANUAL		871716	2					
ANR	872022	Identifier	XCB_COMPOSITE_REDIRECT_MANUAL		871716	0					
ANR	872023	ExpressionStatement	"xcb_change_save_set ( c , XCB_SET_MODE_INSERT , wid )"	148:4:5876:5924	871716	30	True				
ANR	872024	CallExpression	"xcb_change_save_set ( c , XCB_SET_MODE_INSERT , wid )"		871716	0					
ANR	872025	Callee	xcb_change_save_set		871716	0					
ANR	872026	Identifier	xcb_change_save_set		871716	0					
ANR	872027	ArgumentList	c		871716	1					
ANR	872028	Argument	c		871716	0					
ANR	872029	Identifier	c		871716	0					
ANR	872030	Argument	XCB_SET_MODE_INSERT		871716	1					
ANR	872031	Identifier	XCB_SET_MODE_INSERT		871716	0					
ANR	872032	Argument	wid		871716	2					
ANR	872033	Identifier	wid		871716	0					
ANR	872034	ExpressionStatement	"xembed_message_send ( wid , XEMBED_EMBEDDED_NOTIFY , m_containerWid , 0 , 0 )"	151:4:5968:6038	871716	31	True				
ANR	872035	CallExpression	"xembed_message_send ( wid , XEMBED_EMBEDDED_NOTIFY , m_containerWid , 0 , 0 )"		871716	0					
ANR	872036	Callee	xembed_message_send		871716	0					
ANR	872037	Identifier	xembed_message_send		871716	0					
ANR	872038	ArgumentList	wid		871716	1					
ANR	872039	Argument	wid		871716	0					
ANR	872040	Identifier	wid		871716	0					
ANR	872041	Argument	XEMBED_EMBEDDED_NOTIFY		871716	1					
ANR	872042	Identifier	XEMBED_EMBEDDED_NOTIFY		871716	0					
ANR	872043	Argument	m_containerWid		871716	2					
ANR	872044	Identifier	m_containerWid		871716	0					
ANR	872045	Argument	0		871716	3					
ANR	872046	PrimaryExpression	0		871716	0					
ANR	872047	Argument	0		871716	4					
ANR	872048	PrimaryExpression	0		871716	0					
ANR	872049	IdentifierDeclStatement	"const uint32_t windowMoveConfigVals [ 2 ] = { 0 , 0 } ;"	154:4:6079:6128	871716	32	True				
ANR	872050	IdentifierDecl	"windowMoveConfigVals [ 2 ] = { 0 , 0 }"		871716	0					
ANR	872051	IdentifierDeclType	const uint32_t [ 2 ]		871716	0					
ANR	872052	Identifier	windowMoveConfigVals		871716	1					
ANR	872053	PrimaryExpression	2		871716	2					
ANR	872054	AssignmentExpression	"windowMoveConfigVals [ 2 ] = { 0 , 0 }"		871716	3		=			
ANR	872055	Identifier	windowMoveConfigVals		871716	0					
ANR	872056	InitializerList	0		871716	1					
ANR	872057	PrimaryExpression	0		871716	0					
ANR	872058	PrimaryExpression	0		871716	1					
ANR	872059	ExpressionStatement	"xcb_configure_window ( c , wid , XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y , windowMoveConfigVals )"	156:4:6135:6286	871716	33	True				
ANR	872060	CallExpression	"xcb_configure_window ( c , wid , XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y , windowMoveConfigVals )"		871716	0					
ANR	872061	Callee	xcb_configure_window		871716	0					
ANR	872062	Identifier	xcb_configure_window		871716	0					
ANR	872063	ArgumentList	c		871716	1					
ANR	872064	Argument	c		871716	0					
ANR	872065	Identifier	c		871716	0					
ANR	872066	Argument	wid		871716	1					
ANR	872067	Identifier	wid		871716	0					
ANR	872068	Argument	XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y		871716	2					
ANR	872069	InclusiveOrExpression	XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y		871716	0		|			
ANR	872070	Identifier	XCB_CONFIG_WINDOW_X		871716	0					
ANR	872071	Identifier	XCB_CONFIG_WINDOW_Y		871716	1					
ANR	872072	Argument	windowMoveConfigVals		871716	3					
ANR	872073	Identifier	windowMoveConfigVals		871716	0					
ANR	872074	IdentifierDeclStatement	QSize clientWindowSize ;	161:4:6294:6316	871716	34	True				
ANR	872075	IdentifierDecl	clientWindowSize		871716	0					
ANR	872076	IdentifierDeclType	QSize		871716	0					
ANR	872077	Identifier	clientWindowSize		871716	1					
ANR	872078	IfStatement	if ( clientGeom )		871716	35					
ANR	872079	Condition	clientGeom	163:8:6327:6336	871716	0	True				
ANR	872080	Identifier	clientGeom		871716	0					
ANR	872081	CompoundStatement		88:20:3727:3727	871716	1					
ANR	872082	ExpressionStatement	"clientWindowSize = QSize ( clientGeom -> width , clientGeom -> height )"	164:8:6349:6412	871716	0	True				
ANR	872083	AssignmentExpression	"clientWindowSize = QSize ( clientGeom -> width , clientGeom -> height )"		871716	0		=			
ANR	872084	Identifier	clientWindowSize		871716	0					
ANR	872085	CallExpression	"QSize ( clientGeom -> width , clientGeom -> height )"		871716	1					
ANR	872086	Callee	QSize		871716	0					
ANR	872087	Identifier	QSize		871716	0					
ANR	872088	ArgumentList	clientGeom -> width		871716	1					
ANR	872089	Argument	clientGeom -> width		871716	0					
ANR	872090	PtrMemberAccess	clientGeom -> width		871716	0					
ANR	872091	Identifier	clientGeom		871716	0					
ANR	872092	Identifier	width		871716	1					
ANR	872093	Argument	clientGeom -> height		871716	1					
ANR	872094	PtrMemberAccess	clientGeom -> height		871716	0					
ANR	872095	Identifier	clientGeom		871716	0					
ANR	872096	Identifier	height		871716	1					
ANR	872097	IfStatement	if ( clientWindowSize . isEmpty ( ) || clientWindowSize . width ( ) > s_embedSize || clientWindowSize . height ( ) > s_embedSize )		871716	36					
ANR	872098	Condition	clientWindowSize . isEmpty ( ) || clientWindowSize . width ( ) > s_embedSize || clientWindowSize . height ( ) > s_embedSize	170:8:6785:6895	871716	0	True				
ANR	872099	OrExpression	clientWindowSize . isEmpty ( ) || clientWindowSize . width ( ) > s_embedSize || clientWindowSize . height ( ) > s_embedSize		871716	0		||			
ANR	872100	CallExpression	clientWindowSize . isEmpty ( )		871716	0					
ANR	872101	Callee	clientWindowSize . isEmpty		871716	0					
ANR	872102	MemberAccess	clientWindowSize . isEmpty		871716	0					
ANR	872103	Identifier	clientWindowSize		871716	0					
ANR	872104	Identifier	isEmpty		871716	1					
ANR	872105	ArgumentList			871716	1					
ANR	872106	OrExpression	clientWindowSize . width ( ) > s_embedSize || clientWindowSize . height ( ) > s_embedSize		871716	1		||			
ANR	872107	RelationalExpression	clientWindowSize . width ( ) > s_embedSize		871716	0		>			
ANR	872108	CallExpression	clientWindowSize . width ( )		871716	0					
ANR	872109	Callee	clientWindowSize . width		871716	0					
ANR	872110	MemberAccess	clientWindowSize . width		871716	0					
ANR	872111	Identifier	clientWindowSize		871716	0					
ANR	872112	Identifier	width		871716	1					
ANR	872113	ArgumentList			871716	1					
ANR	872114	Identifier	s_embedSize		871716	1					
ANR	872115	RelationalExpression	clientWindowSize . height ( ) > s_embedSize		871716	1		>			
ANR	872116	CallExpression	clientWindowSize . height ( )		871716	0					
ANR	872117	Callee	clientWindowSize . height		871716	0					
ANR	872118	MemberAccess	clientWindowSize . height		871716	0					
ANR	872119	Identifier	clientWindowSize		871716	0					
ANR	872120	Identifier	height		871716	1					
ANR	872121	ArgumentList			871716	1					
ANR	872122	Identifier	s_embedSize		871716	1					
ANR	872123	CompoundStatement		108:8:4782:4851	871716	1					
ANR	872124	ExpressionStatement	"qCDebug ( SNIPROXY ) << ""Resizing window"" << wid << Title ( ) << ""from w*h"" << clientWindowSize"	172:8:6913:7003	871716	0	True				
ANR	872125	ShiftExpression	"qCDebug ( SNIPROXY ) << ""Resizing window"" << wid << Title ( ) << ""from w*h"" << clientWindowSize"		871716	0		<<			
ANR	872126	CallExpression	qCDebug ( SNIPROXY )		871716	0					
ANR	872127	Callee	qCDebug		871716	0					
ANR	872128	Identifier	qCDebug		871716	0					
ANR	872129	ArgumentList	SNIPROXY		871716	1					
ANR	872130	Argument	SNIPROXY		871716	0					
ANR	872131	Identifier	SNIPROXY		871716	0					
ANR	872132	ShiftExpression	"""Resizing window"" << wid << Title ( ) << ""from w*h"" << clientWindowSize"		871716	1		<<			
ANR	872133	PrimaryExpression	"""Resizing window"""		871716	0					
ANR	872134	ShiftExpression	"wid << Title ( ) << ""from w*h"" << clientWindowSize"		871716	1		<<			
ANR	872135	Identifier	wid		871716	0					
ANR	872136	ShiftExpression	"Title ( ) << ""from w*h"" << clientWindowSize"		871716	1		<<			
ANR	872137	CallExpression	Title ( )		871716	0					
ANR	872138	Callee	Title		871716	0					
ANR	872139	Identifier	Title		871716	0					
ANR	872140	ArgumentList			871716	1					
ANR	872141	ShiftExpression	"""from w*h"" << clientWindowSize"		871716	1		<<			
ANR	872142	PrimaryExpression	"""from w*h"""		871716	0					
ANR	872143	Identifier	clientWindowSize		871716	1					
ANR	872144	IdentifierDeclStatement	xcb_configure_notify_event_t event ;	174:8:7014:7048	871716	1	True				
ANR	872145	IdentifierDecl	event		871716	0					
ANR	872146	IdentifierDeclType	xcb_configure_notify_event_t		871716	0					
ANR	872147	Identifier	event		871716	1					
ANR	872148	ExpressionStatement	"memset ( & event , 0x00 , sizeof ( xcb_configure_notify_event_t ) )"	175:8:7058:7116	871716	2	True				
ANR	872149	CallExpression	"memset ( & event , 0x00 , sizeof ( xcb_configure_notify_event_t ) )"		871716	0					
ANR	872150	Callee	memset		871716	0					
ANR	872151	Identifier	memset		871716	0					
ANR	872152	ArgumentList	& event		871716	1					
ANR	872153	Argument	& event		871716	0					
ANR	872154	UnaryOperationExpression	& event		871716	0					
ANR	872155	UnaryOperator	&		871716	0					
ANR	872156	Identifier	event		871716	1					
ANR	872157	Argument	0x00		871716	1					
ANR	872158	PrimaryExpression	0x00		871716	0					
ANR	872159	Argument	sizeof ( xcb_configure_notify_event_t )		871716	2					
ANR	872160	SizeofExpression	sizeof ( xcb_configure_notify_event_t )		871716	0					
ANR	872161	Sizeof	sizeof		871716	0					
ANR	872162	SizeofOperand	xcb_configure_notify_event_t		871716	1					
ANR	872163	ExpressionStatement	event . response_type = XCB_CONFIGURE_NOTIFY	176:8:7126:7168	871716	3	True				
ANR	872164	AssignmentExpression	event . response_type = XCB_CONFIGURE_NOTIFY		871716	0		=			
ANR	872165	MemberAccess	event . response_type		871716	0					
ANR	872166	Identifier	event		871716	0					
ANR	872167	Identifier	response_type		871716	1					
ANR	872168	Identifier	XCB_CONFIGURE_NOTIFY		871716	1					
ANR	872169	ExpressionStatement	event . event = wid	177:8:7178:7195	871716	4	True				
ANR	872170	AssignmentExpression	event . event = wid		871716	0		=			
ANR	872171	MemberAccess	event . event		871716	0					
ANR	872172	Identifier	event		871716	0					
ANR	872173	Identifier	event		871716	1					
ANR	872174	Identifier	wid		871716	1					
ANR	872175	ExpressionStatement	event . window = wid	178:8:7205:7223	871716	5	True				
ANR	872176	AssignmentExpression	event . window = wid		871716	0		=			
ANR	872177	MemberAccess	event . window		871716	0					
ANR	872178	Identifier	event		871716	0					
ANR	872179	Identifier	window		871716	1					
ANR	872180	Identifier	wid		871716	1					
ANR	872181	ExpressionStatement	event . width = s_embedSize	179:8:7233:7258	871716	6	True				
ANR	872182	AssignmentExpression	event . width = s_embedSize		871716	0		=			
ANR	872183	MemberAccess	event . width		871716	0					
ANR	872184	Identifier	event		871716	0					
ANR	872185	Identifier	width		871716	1					
ANR	872186	Identifier	s_embedSize		871716	1					
ANR	872187	ExpressionStatement	event . height = s_embedSize	180:8:7268:7294	871716	7	True				
ANR	872188	AssignmentExpression	event . height = s_embedSize		871716	0		=			
ANR	872189	MemberAccess	event . height		871716	0					
ANR	872190	Identifier	event		871716	0					
ANR	872191	Identifier	height		871716	1					
ANR	872192	Identifier	s_embedSize		871716	1					
ANR	872193	ExpressionStatement	"xcb_send_event ( c , false , wid , XCB_EVENT_MASK_STRUCTURE_NOTIFY , ( char * ) & event )"	181:8:7304:7383	871716	8	True				
ANR	872194	CallExpression	"xcb_send_event ( c , false , wid , XCB_EVENT_MASK_STRUCTURE_NOTIFY , ( char * ) & event )"		871716	0					
ANR	872195	Callee	xcb_send_event		871716	0					
ANR	872196	Identifier	xcb_send_event		871716	0					
ANR	872197	ArgumentList	c		871716	1					
ANR	872198	Argument	c		871716	0					
ANR	872199	Identifier	c		871716	0					
ANR	872200	Argument	false		871716	1					
ANR	872201	Identifier	false		871716	0					
ANR	872202	Argument	wid		871716	2					
ANR	872203	Identifier	wid		871716	0					
ANR	872204	Argument	XCB_EVENT_MASK_STRUCTURE_NOTIFY		871716	3					
ANR	872205	Identifier	XCB_EVENT_MASK_STRUCTURE_NOTIFY		871716	0					
ANR	872206	Argument	( char * ) & event		871716	4					
ANR	872207	CastExpression	( char * ) & event		871716	0					
ANR	872208	CastTarget	char *		871716	0					
ANR	872209	UnaryOperationExpression	& event		871716	1					
ANR	872210	UnaryOperator	&		871716	0					
ANR	872211	Identifier	event		871716	1					
ANR	872212	IdentifierDeclStatement	"const uint32_t windowMoveConfigVals [ 2 ] = { s_embedSize , s_embedSize } ;"	183:8:7394:7463	871716	9	True				
ANR	872213	IdentifierDecl	"windowMoveConfigVals [ 2 ] = { s_embedSize , s_embedSize }"		871716	0					
ANR	872214	IdentifierDeclType	const uint32_t [ 2 ]		871716	0					
ANR	872215	Identifier	windowMoveConfigVals		871716	1					
ANR	872216	PrimaryExpression	2		871716	2					
ANR	872217	AssignmentExpression	"windowMoveConfigVals [ 2 ] = { s_embedSize , s_embedSize }"		871716	3		=			
ANR	872218	Identifier	windowMoveConfigVals		871716	0					
ANR	872219	InitializerList	s_embedSize		871716	1					
ANR	872220	Identifier	s_embedSize		871716	0					
ANR	872221	Identifier	s_embedSize		871716	1					
ANR	872222	ExpressionStatement	"xcb_configure_window ( c , wid , XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT , windowMoveConfigVals )"	184:8:7473:7639	871716	10	True				
ANR	872223	CallExpression	"xcb_configure_window ( c , wid , XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT , windowMoveConfigVals )"		871716	0					
ANR	872224	Callee	xcb_configure_window		871716	0					
ANR	872225	Identifier	xcb_configure_window		871716	0					
ANR	872226	ArgumentList	c		871716	1					
ANR	872227	Argument	c		871716	0					
ANR	872228	Identifier	c		871716	0					
ANR	872229	Argument	wid		871716	1					
ANR	872230	Identifier	wid		871716	0					
ANR	872231	Argument	XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT		871716	2					
ANR	872232	InclusiveOrExpression	XCB_CONFIG_WINDOW_WIDTH | XCB_CONFIG_WINDOW_HEIGHT		871716	0		|			
ANR	872233	Identifier	XCB_CONFIG_WINDOW_WIDTH		871716	0					
ANR	872234	Identifier	XCB_CONFIG_WINDOW_HEIGHT		871716	1					
ANR	872235	Argument	windowMoveConfigVals		871716	3					
ANR	872236	Identifier	windowMoveConfigVals		871716	0					
ANR	872237	ExpressionStatement	"clientWindowSize = QSize ( s_embedSize , s_embedSize )"	188:8:7650:7700	871716	11	True				
ANR	872238	AssignmentExpression	"clientWindowSize = QSize ( s_embedSize , s_embedSize )"		871716	0		=			
ANR	872239	Identifier	clientWindowSize		871716	0					
ANR	872240	CallExpression	"QSize ( s_embedSize , s_embedSize )"		871716	1					
ANR	872241	Callee	QSize		871716	0					
ANR	872242	Identifier	QSize		871716	0					
ANR	872243	ArgumentList	s_embedSize		871716	1					
ANR	872244	Argument	s_embedSize		871716	0					
ANR	872245	Identifier	s_embedSize		871716	0					
ANR	872246	Argument	s_embedSize		871716	1					
ANR	872247	Identifier	s_embedSize		871716	0					
ANR	872248	ExpressionStatement	"xcb_map_window ( c , wid )"	192:4:7770:7792	871716	37	True				
ANR	872249	CallExpression	"xcb_map_window ( c , wid )"		871716	0					
ANR	872250	Callee	xcb_map_window		871716	0					
ANR	872251	Identifier	xcb_map_window		871716	0					
ANR	872252	ArgumentList	c		871716	1					
ANR	872253	Argument	c		871716	0					
ANR	872254	Identifier	c		871716	0					
ANR	872255	Argument	wid		871716	1					
ANR	872256	Identifier	wid		871716	0					
ANR	872257	ExpressionStatement	"xcb_clear_area ( c , 0 , wid , 0 , 0 , clientWindowSize . width ( ) , clientWindowSize . height ( ) )"	194:4:7799:7883	871716	38	True				
ANR	872258	CallExpression	"xcb_clear_area ( c , 0 , wid , 0 , 0 , clientWindowSize . width ( ) , clientWindowSize . height ( ) )"		871716	0					
ANR	872259	Callee	xcb_clear_area		871716	0					
ANR	872260	Identifier	xcb_clear_area		871716	0					
ANR	872261	ArgumentList	c		871716	1					
ANR	872262	Argument	c		871716	0					
ANR	872263	Identifier	c		871716	0					
ANR	872264	Argument	0		871716	1					
ANR	872265	PrimaryExpression	0		871716	0					
ANR	872266	Argument	wid		871716	2					
ANR	872267	Identifier	wid		871716	0					
ANR	872268	Argument	0		871716	3					
ANR	872269	PrimaryExpression	0		871716	0					
ANR	872270	Argument	0		871716	4					
ANR	872271	PrimaryExpression	0		871716	0					
ANR	872272	Argument	clientWindowSize . width ( )		871716	5					
ANR	872273	CallExpression	clientWindowSize . width ( )		871716	0					
ANR	872274	Callee	clientWindowSize . width		871716	0					
ANR	872275	MemberAccess	clientWindowSize . width		871716	0					
ANR	872276	Identifier	clientWindowSize		871716	0					
ANR	872277	Identifier	width		871716	1					
ANR	872278	ArgumentList			871716	1					
ANR	872279	Argument	clientWindowSize . height ( )		871716	6					
ANR	872280	CallExpression	clientWindowSize . height ( )		871716	0					
ANR	872281	Callee	clientWindowSize . height		871716	0					
ANR	872282	MemberAccess	clientWindowSize . height		871716	0					
ANR	872283	Identifier	clientWindowSize		871716	0					
ANR	872284	Identifier	height		871716	1					
ANR	872285	ArgumentList			871716	1					
ANR	872286	ExpressionStatement	xcb_flush ( c )	196:4:7890:7902	871716	39	True				
ANR	872287	CallExpression	xcb_flush ( c )		871716	0					
ANR	872288	Callee	xcb_flush		871716	0					
ANR	872289	Identifier	xcb_flush		871716	0					
ANR	872290	ArgumentList	c		871716	1					
ANR	872291	Argument	c		871716	0					
ANR	872292	Identifier	c		871716	0					
ANR	872293	ExpressionStatement	"QTimer :: singleShot ( 500 , this , & SNIProxy :: update )"	201:4:8089:8137	871716	40	True				
ANR	872294	CallExpression	"QTimer :: singleShot ( 500 , this , & SNIProxy :: update )"		871716	0					
ANR	872295	Callee	QTimer :: singleShot		871716	0					
ANR	872296	Identifier	QTimer :: singleShot		871716	0					
ANR	872297	ArgumentList	500		871716	1					
ANR	872298	Argument	500		871716	0					
ANR	872299	PrimaryExpression	500		871716	0					
ANR	872300	Argument	this		871716	1					
ANR	872301	Identifier	this		871716	0					
ANR	872302	Argument	& SNIProxy :: update		871716	2					
ANR	872303	UnaryOperationExpression	& SNIProxy :: update		871716	0					
ANR	872304	UnaryOperator	&		871716	0					
ANR	872305	Identifier	SNIProxy :: update		871716	1					
ANR	872306	Identifier	SNIProxy :: SNIProxy		871716	1					
ANR	872307	ParameterList	"xcb_window_t wid , QObject * parent"		871716	2					
ANR	872308	Parameter	xcb_window_t wid	69:19:2104:2119	871716	0	True				
ANR	872309	ParameterType	xcb_window_t		871716	0					
ANR	872310	Identifier	wid		871716	1					
ANR	872311	Parameter	QObject * parent	69:37:2122:2136	871716	1	True				
ANR	872312	ParameterType	QObject *		871716	0					
ANR	872313	Identifier	parent		871716	1					
ANR	872314	CFGEntryNode	ENTRY		871716		True				
ANR	872315	CFGExitNode	EXIT		871716		True				
ANR	872316	Symbol	clientWindowSize . width		871716						
ANR	872317	Symbol	parent		871716						
ANR	872318	Symbol	SNIPROXY		871716						
ANR	872319	Symbol	clientGeom		871716						
ANR	872320	Symbol	screen -> black_pixel		871716						
ANR	872321	Symbol	screen		871716						
ANR	872322	Symbol	XCB_WINDOW_CLASS_INPUT_OUTPUT		871716						
ANR	872323	Symbol	xcb_get_geometry		871716						
ANR	872324	Symbol	XCB_CONFIG_WINDOW_WIDTH		871716						
ANR	872325	Symbol	m_dbus . baseService		871716						
ANR	872326	Symbol	clientWindowSize . isEmpty		871716						
ANR	872327	Symbol	m_windowId		871716						
ANR	872328	Symbol	event . height		871716						
ANR	872329	Symbol	m_containerWid		871716						
ANR	872330	Symbol	XCB_SET_MODE_INSERT		871716						
ANR	872331	Symbol	QDBusConnection :: sessionBus		871716						
ANR	872332	Symbol	statusNotifierWatcher		871716						
ANR	872333	Symbol	reply		871716						
ANR	872334	Symbol	xcb_setup_roots_iterator ( xcb_get_setup ( c ) ) . data		871716						
ANR	872335	Symbol	SNI_WATCHER_PATH		871716						
ANR	872336	Symbol	XCB_CONFIGURE_NOTIFY		871716						
ANR	872337	Symbol	cookie		871716						
ANR	872338	Symbol	event . response_type		871716						
ANR	872339	Symbol	this		871716						
ANR	872340	Symbol	XCB_STACK_MODE_BELOW		871716						
ANR	872341	Symbol	XCB_COMPOSITE_REDIRECT_MANUAL		871716						
ANR	872342	Symbol	& event		871716						
ANR	872343	Symbol	s_embedSize		871716						
ANR	872344	Symbol	XEMBED_EMBEDDED_NOTIFY		871716						
ANR	872345	Symbol	XCB_CONFIG_WINDOW_X		871716						
ANR	872346	Symbol	XCB_CONFIG_WINDOW_Y		871716						
ANR	872347	Symbol	xcb_generate_id		871716						
ANR	872348	Symbol	reply . isError		871716						
ANR	872349	Symbol	* clientGeom		871716						
ANR	872350	Symbol	event . window		871716						
ANR	872351	Symbol	XCB_CONFIG_WINDOW_HEIGHT		871716						
ANR	872352	Symbol	true		871716						
ANR	872353	Symbol	QStringLiteral		871716						
ANR	872354	Symbol	* statusNotifierWatcher		871716						
ANR	872355	Symbol	* screen		871716						
ANR	872356	Symbol	XCB_CONFIG_WINDOW_STACK_MODE		871716						
ANR	872357	Symbol	XCB_COPY_FROM_PARENT		871716						
ANR	872358	Symbol	XCB_EVENT_MASK_STRUCTURE_NOTIFY		871716						
ANR	872359	Symbol	Q_NULLPTR		871716						
ANR	872360	Symbol	* values		871716						
ANR	872361	Symbol	m_dbus		871716						
ANR	872362	Symbol	values		871716						
ANR	872363	Symbol	SNI_WATCHER_SERVICE_NAME		871716						
ANR	872364	Symbol	xcb_get_setup		871716						
ANR	872365	Symbol	clientWindowSize		871716						
ANR	872366	Symbol	wid		871716						
ANR	872367	Symbol	statusNotifierWatcher -> RegisterStatusNotifierItem		871716						
ANR	872368	Symbol	reply . error		871716						
ANR	872369	Symbol	wm		871716						
ANR	872370	Symbol	xcb_setup_roots_iterator		871716						
ANR	872371	Symbol	XCB_CW_OVERRIDE_REDIRECT		871716						
ANR	872372	Symbol	screen -> root		871716						
ANR	872373	Symbol	event		871716						
ANR	872374	Symbol	mask		871716						
ANR	872375	Symbol	XCB_CW_BACK_PIXEL		871716						
ANR	872376	Symbol	c		871716						
ANR	872377	Symbol	QX11Info :: connection		871716						
ANR	872378	Symbol	event . event		871716						
ANR	872379	Symbol	false		871716						
ANR	872380	Symbol	QSize		871716						
ANR	872381	Symbol	screen -> root_visual		871716						
ANR	872382	Symbol	event . width		871716						
ANR	872383	Symbol	stackBelowData		871716						
ANR	872384	Symbol	& SNIProxy :: update		871716						
ANR	872385	Symbol	clientGeom -> width		871716						
ANR	872386	Symbol	clientGeom -> height		871716						
ANR	872387	Symbol	windowMoveConfigVals		871716						
ANR	872388	Symbol	clientWindowSize . height		871716						
ANR	872389	Function	SNIProxy :: ~SNIProxy	204:0:8142:8302							
ANR	872390	FunctionDef	SNIProxy :: ~SNIProxy ()		872389	0					
ANR	872391	CompoundStatement		205:0:8164:8302	872389	0					
ANR	872392	Statement	auto	206:4:8170:8173	872389	0	True				
ANR	872393	ExpressionStatement	c = QX11Info :: connection ( )	206:9:8175:8201	872389	1	True				
ANR	872394	AssignmentExpression	c = QX11Info :: connection ( )		872389	0		=			
ANR	872395	Identifier	c		872389	0					
ANR	872396	CallExpression	QX11Info :: connection ( )		872389	1					
ANR	872397	Callee	QX11Info :: connection		872389	0					
ANR	872398	Identifier	QX11Info :: connection		872389	0					
ANR	872399	ArgumentList			872389	1					
ANR	872400	ExpressionStatement	"xcb_destroy_window ( c , m_containerWid )"	208:4:8208:8245	872389	2	True				
ANR	872401	CallExpression	"xcb_destroy_window ( c , m_containerWid )"		872389	0					
ANR	872402	Callee	xcb_destroy_window		872389	0					
ANR	872403	Identifier	xcb_destroy_window		872389	0					
ANR	872404	ArgumentList	c		872389	1					
ANR	872405	Argument	c		872389	0					
ANR	872406	Identifier	c		872389	0					
ANR	872407	Argument	m_containerWid		872389	1					
ANR	872408	Identifier	m_containerWid		872389	0					
ANR	872409	ExpressionStatement	QDBusConnection :: disconnectFromBus ( m_dbus . name ( ) )	209:4:8251:8300	872389	3	True				
ANR	872410	CallExpression	QDBusConnection :: disconnectFromBus ( m_dbus . name ( ) )		872389	0					
ANR	872411	Callee	QDBusConnection :: disconnectFromBus		872389	0					
ANR	872412	Identifier	QDBusConnection :: disconnectFromBus		872389	0					
ANR	872413	ArgumentList	m_dbus . name ( )		872389	1					
ANR	872414	Argument	m_dbus . name ( )		872389	0					
ANR	872415	CallExpression	m_dbus . name ( )		872389	0					
ANR	872416	Callee	m_dbus . name		872389	0					
ANR	872417	MemberAccess	m_dbus . name		872389	0					
ANR	872418	Identifier	m_dbus		872389	0					
ANR	872419	Identifier	name		872389	1					
ANR	872420	ArgumentList			872389	1					
ANR	872421	Identifier	SNIProxy :: ~SNIProxy		872389	1					
ANR	872422	ParameterList			872389	2					
ANR	872423	CFGEntryNode	ENTRY		872389		True				
ANR	872424	CFGExitNode	EXIT		872389		True				
ANR	872425	Symbol	c		872389						
ANR	872426	Symbol	QX11Info :: connection		872389						
ANR	872427	Symbol	m_containerWid		872389						
ANR	872428	Symbol	m_dbus		872389						
ANR	872429	Symbol	m_dbus . name		872389						
ANR	872430	Function	SNIProxy :: update	212:0:8305:8915							
ANR	872431	FunctionDef	SNIProxy :: update ()		872430	0					
ANR	872432	CompoundStatement		213:0:8329:8915	872430	0					
ANR	872433	IdentifierDeclStatement	const QImage image = getImageNonComposite ( ) ;	214:4:8335:8378	872430	0	True				
ANR	872434	IdentifierDecl	image = getImageNonComposite ( )		872430	0					
ANR	872435	IdentifierDeclType	const QImage		872430	0					
ANR	872436	Identifier	image		872430	1					
ANR	872437	AssignmentExpression	image = getImageNonComposite ( )		872430	2		=			
ANR	872438	Identifier	image		872430	0					
ANR	872439	CallExpression	getImageNonComposite ( )		872430	1					
ANR	872440	Callee	getImageNonComposite		872430	0					
ANR	872441	Identifier	getImageNonComposite		872430	0					
ANR	872442	ArgumentList			872430	1					
ANR	872443	IfStatement	if ( image . isNull ( ) )		872430	1					
ANR	872444	Condition	image . isNull ( )	215:8:8388:8401	872430	0	True				
ANR	872445	CallExpression	image . isNull ( )		872430	0					
ANR	872446	Callee	image . isNull		872430	0					
ANR	872447	MemberAccess	image . isNull		872430	0					
ANR	872448	Identifier	image		872430	0					
ANR	872449	Identifier	isNull		872430	1					
ANR	872450	ArgumentList			872430	1					
ANR	872451	CompoundStatement		3:24:74:74	872430	1					
ANR	872452	ExpressionStatement	"qCDebug ( SNIPROXY ) << ""No xembed icon for"" << m_windowId << Title ( )"	216:8:8414:8480	872430	0	True				
ANR	872453	ShiftExpression	"qCDebug ( SNIPROXY ) << ""No xembed icon for"" << m_windowId << Title ( )"		872430	0		<<			
ANR	872454	CallExpression	qCDebug ( SNIPROXY )		872430	0					
ANR	872455	Callee	qCDebug		872430	0					
ANR	872456	Identifier	qCDebug		872430	0					
ANR	872457	ArgumentList	SNIPROXY		872430	1					
ANR	872458	Argument	SNIPROXY		872430	0					
ANR	872459	Identifier	SNIPROXY		872430	0					
ANR	872460	ShiftExpression	"""No xembed icon for"" << m_windowId << Title ( )"		872430	1		<<			
ANR	872461	PrimaryExpression	"""No xembed icon for"""		872430	0					
ANR	872462	ShiftExpression	m_windowId << Title ( )		872430	1		<<			
ANR	872463	Identifier	m_windowId		872430	0					
ANR	872464	CallExpression	Title ( )		872430	1					
ANR	872465	Callee	Title		872430	0					
ANR	872466	Identifier	Title		872430	0					
ANR	872467	ArgumentList			872430	1					
ANR	872468	ReturnStatement	return ;	217:8:8490:8496	872430	1	True				
ANR	872469	IdentifierDeclStatement	int w = image . width ( ) ;	220:4:8509:8530	872430	2	True				
ANR	872470	IdentifierDecl	w = image . width ( )		872430	0					
ANR	872471	IdentifierDeclType	int		872430	0					
ANR	872472	Identifier	w		872430	1					
ANR	872473	AssignmentExpression	w = image . width ( )		872430	2		=			
ANR	872474	Identifier	w		872430	0					
ANR	872475	CallExpression	image . width ( )		872430	1					
ANR	872476	Callee	image . width		872430	0					
ANR	872477	MemberAccess	image . width		872430	0					
ANR	872478	Identifier	image		872430	0					
ANR	872479	Identifier	width		872430	1					
ANR	872480	ArgumentList			872430	1					
ANR	872481	IdentifierDeclStatement	int h = image . height ( ) ;	221:4:8536:8558	872430	3	True				
ANR	872482	IdentifierDecl	h = image . height ( )		872430	0					
ANR	872483	IdentifierDeclType	int		872430	0					
ANR	872484	Identifier	h		872430	1					
ANR	872485	AssignmentExpression	h = image . height ( )		872430	2		=			
ANR	872486	Identifier	h		872430	0					
ANR	872487	CallExpression	image . height ( )		872430	1					
ANR	872488	Callee	image . height		872430	0					
ANR	872489	MemberAccess	image . height		872430	0					
ANR	872490	Identifier	image		872430	0					
ANR	872491	Identifier	height		872430	1					
ANR	872492	ArgumentList			872430	1					
ANR	872493	ExpressionStatement	m_pixmap = QPixmap :: fromImage ( image )	223:4:8565:8601	872430	4	True				
ANR	872494	AssignmentExpression	m_pixmap = QPixmap :: fromImage ( image )		872430	0		=			
ANR	872495	Identifier	m_pixmap		872430	0					
ANR	872496	CallExpression	QPixmap :: fromImage ( image )		872430	1					
ANR	872497	Callee	QPixmap :: fromImage		872430	0					
ANR	872498	Identifier	QPixmap :: fromImage		872430	0					
ANR	872499	ArgumentList	image		872430	1					
ANR	872500	Argument	image		872430	0					
ANR	872501	Identifier	image		872430	0					
ANR	872502	IfStatement	if ( w != s_embedSize || h != s_embedSize )		872430	5					
ANR	872503	Condition	w != s_embedSize || h != s_embedSize	224:8:8611:8646	872430	0	True				
ANR	872504	OrExpression	w != s_embedSize || h != s_embedSize		872430	0		||			
ANR	872505	EqualityExpression	w != s_embedSize		872430	0		!=			
ANR	872506	Identifier	w		872430	0					
ANR	872507	Identifier	s_embedSize		872430	1					
ANR	872508	EqualityExpression	h != s_embedSize		872430	1		!=			
ANR	872509	Identifier	h		872430	0					
ANR	872510	Identifier	s_embedSize		872430	1					
ANR	872511	CompoundStatement		12:46:319:319	872430	1					
ANR	872512	ExpressionStatement	"qCDebug ( SNIPROXY ) << ""Scaling pixmap of window"" << m_windowId << Title ( ) << ""from w*h"" << w << h"	225:8:8659:8755	872430	0	True				
ANR	872513	ShiftExpression	"qCDebug ( SNIPROXY ) << ""Scaling pixmap of window"" << m_windowId << Title ( ) << ""from w*h"" << w << h"		872430	0		<<			
ANR	872514	CallExpression	qCDebug ( SNIPROXY )		872430	0					
ANR	872515	Callee	qCDebug		872430	0					
ANR	872516	Identifier	qCDebug		872430	0					
ANR	872517	ArgumentList	SNIPROXY		872430	1					
ANR	872518	Argument	SNIPROXY		872430	0					
ANR	872519	Identifier	SNIPROXY		872430	0					
ANR	872520	ShiftExpression	"""Scaling pixmap of window"" << m_windowId << Title ( ) << ""from w*h"" << w << h"		872430	1		<<			
ANR	872521	PrimaryExpression	"""Scaling pixmap of window"""		872430	0					
ANR	872522	ShiftExpression	"m_windowId << Title ( ) << ""from w*h"" << w << h"		872430	1		<<			
ANR	872523	Identifier	m_windowId		872430	0					
ANR	872524	ShiftExpression	"Title ( ) << ""from w*h"" << w << h"		872430	1		<<			
ANR	872525	CallExpression	Title ( )		872430	0					
ANR	872526	Callee	Title		872430	0					
ANR	872527	Identifier	Title		872430	0					
ANR	872528	ArgumentList			872430	1					
ANR	872529	ShiftExpression	"""from w*h"" << w << h"		872430	1		<<			
ANR	872530	PrimaryExpression	"""from w*h"""		872430	0					
ANR	872531	ShiftExpression	w << h		872430	1		<<			
ANR	872532	Identifier	w		872430	0					
ANR	872533	Identifier	h		872430	1					
ANR	872534	ExpressionStatement	"m_pixmap = m_pixmap . scaled ( s_embedSize , s_embedSize , Qt :: KeepAspectRatio , Qt :: SmoothTransformation )"	226:8:8765:8864	872430	1	True				
ANR	872535	AssignmentExpression	"m_pixmap = m_pixmap . scaled ( s_embedSize , s_embedSize , Qt :: KeepAspectRatio , Qt :: SmoothTransformation )"		872430	0		=			
ANR	872536	Identifier	m_pixmap		872430	0					
ANR	872537	CallExpression	"m_pixmap . scaled ( s_embedSize , s_embedSize , Qt :: KeepAspectRatio , Qt :: SmoothTransformation )"		872430	1					
ANR	872538	Callee	m_pixmap . scaled		872430	0					
ANR	872539	MemberAccess	m_pixmap . scaled		872430	0					
ANR	872540	Identifier	m_pixmap		872430	0					
ANR	872541	Identifier	scaled		872430	1					
ANR	872542	ArgumentList	s_embedSize		872430	1					
ANR	872543	Argument	s_embedSize		872430	0					
ANR	872544	Identifier	s_embedSize		872430	0					
ANR	872545	Argument	s_embedSize		872430	1					
ANR	872546	Identifier	s_embedSize		872430	0					
ANR	872547	Argument	Qt :: KeepAspectRatio		872430	2					
ANR	872548	Identifier	Qt :: KeepAspectRatio		872430	0					
ANR	872549	Argument	Qt :: SmoothTransformation		872430	3					
ANR	872550	Identifier	Qt :: SmoothTransformation		872430	0					
ANR	872551	IdentifierDeclStatement	emit NewIcon ( ) ;	228:4:8876:8890	872430	6	True				
ANR	872552	IdentifierDecl	NewIcon ( )		872430	0					
ANR	872553	IdentifierDeclType	emit		872430	0					
ANR	872554	Identifier	NewIcon		872430	1					
ANR	872555	IdentifierDeclStatement	emit NewToolTip ( ) ;	229:4:8896:8913	872430	7	True				
ANR	872556	IdentifierDecl	NewToolTip ( )		872430	0					
ANR	872557	IdentifierDeclType	emit		872430	0					
ANR	872558	Identifier	NewToolTip		872430	1					
ANR	872559	ReturnType	void		872430	1					
ANR	872560	Identifier	SNIProxy :: update		872430	2					
ANR	872561	ParameterList			872430	3					
ANR	872562	CFGEntryNode	ENTRY		872430		True				
ANR	872563	CFGExitNode	EXIT		872430		True				
ANR	872564	Symbol	image		872430						
ANR	872565	Symbol	m_pixmap		872430						
ANR	872566	Symbol	SNIPROXY		872430						
ANR	872567	Symbol	QPixmap :: fromImage		872430						
ANR	872568	Symbol	image . isNull		872430						
ANR	872569	Symbol	h		872430						
ANR	872570	Symbol	Qt :: SmoothTransformation		872430						
ANR	872571	Symbol	Qt :: KeepAspectRatio		872430						
ANR	872572	Symbol	image . height		872430						
ANR	872573	Symbol	s_embedSize		872430						
ANR	872574	Symbol	m_pixmap . scaled		872430						
ANR	872575	Symbol	NewToolTip		872430						
ANR	872576	Symbol	getImageNonComposite		872430						
ANR	872577	Symbol	NewIcon		872430						
ANR	872578	Symbol	w		872430						
ANR	872579	Symbol	image . width		872430						
ANR	872580	Function	sni_cleanup_xcb_image	232:0:8918:9015							
ANR	872581	FunctionDef	sni_cleanup_xcb_image (void * data)		872580	0					
ANR	872582	CompoundStatement		232:39:8957:9015	872580	0					
ANR	872583	Statement	xcb_image_destroy	233:4:8963:8979	872580	0	True				
ANR	872584	Statement	(	233:21:8980:8980	872580	1	True				
ANR	872585	Statement	static_cast	233:22:8981:8991	872580	2	True				
ANR	872586	Statement	<	233:33:8992:8992	872580	3	True				
ANR	872587	Statement	xcb_image_t	233:34:8993:9003	872580	4	True				
ANR	872588	Statement	*	233:45:9004:9004	872580	5	True				
ANR	872589	Statement	>	233:46:9005:9005	872580	6	True				
ANR	872590	Statement	(	233:47:9006:9006	872580	7	True				
ANR	872591	Statement	data	233:48:9007:9010	872580	8	True				
ANR	872592	Statement	)	233:52:9011:9011	872580	9	True				
ANR	872593	Statement	)	233:53:9012:9012	872580	10	True				
ANR	872594	ExpressionStatement		233:54:9013:9013	872580	11	True				
ANR	872595	ReturnType	void		872580	1					
ANR	872596	Identifier	sni_cleanup_xcb_image		872580	2					
ANR	872597	ParameterList	void * data		872580	3					
ANR	872598	Parameter	void * data	232:27:8945:8954	872580	0	True				
ANR	872599	ParameterType	void *		872580	0					
ANR	872600	Identifier	data		872580	1					
ANR	872601	CFGEntryNode	ENTRY		872580		True				
ANR	872602	CFGExitNode	EXIT		872580		True				
ANR	872603	Symbol	data		872580						
ANR	872604	Function	SNIProxy :: isTransparentImage	236:0:9018:9696							
ANR	872605	FunctionDef	SNIProxy :: isTransparentImage (const QImage & image)		872604	0					
ANR	872606	CompoundStatement		237:0:9079:9696	872604	0					
ANR	872607	IdentifierDeclStatement	int w = image . width ( ) ;	238:4:9085:9106	872604	0	True				
ANR	872608	IdentifierDecl	w = image . width ( )		872604	0					
ANR	872609	IdentifierDeclType	int		872604	0					
ANR	872610	Identifier	w		872604	1					
ANR	872611	AssignmentExpression	w = image . width ( )		872604	2		=			
ANR	872612	Identifier	w		872604	0					
ANR	872613	CallExpression	image . width ( )		872604	1					
ANR	872614	Callee	image . width		872604	0					
ANR	872615	MemberAccess	image . width		872604	0					
ANR	872616	Identifier	image		872604	0					
ANR	872617	Identifier	width		872604	1					
ANR	872618	ArgumentList			872604	1					
ANR	872619	IdentifierDeclStatement	int h = image . height ( ) ;	239:4:9112:9134	872604	1	True				
ANR	872620	IdentifierDecl	h = image . height ( )		872604	0					
ANR	872621	IdentifierDeclType	int		872604	0					
ANR	872622	Identifier	h		872604	1					
ANR	872623	AssignmentExpression	h = image . height ( )		872604	2		=			
ANR	872624	Identifier	h		872604	0					
ANR	872625	CallExpression	image . height ( )		872604	1					
ANR	872626	Callee	image . height		872604	0					
ANR	872627	MemberAccess	image . height		872604	0					
ANR	872628	Identifier	image		872604	0					
ANR	872629	Identifier	height		872604	1					
ANR	872630	ArgumentList			872604	1					
ANR	872631	IfStatement	"if ( ! ( qAlpha ( image . pixel ( w >> 1 , h >> 1 ) ) + qAlpha ( image . pixel ( w >> 2 , h >> 2 ) ) == 0 ) )"		872604	2					
ANR	872632	Condition	"! ( qAlpha ( image . pixel ( w >> 1 , h >> 1 ) ) + qAlpha ( image . pixel ( w >> 2 , h >> 2 ) ) == 0 )"	242:8:9227:9308	872604	0	True				
ANR	872633	UnaryOperationExpression	"! ( qAlpha ( image . pixel ( w >> 1 , h >> 1 ) ) + qAlpha ( image . pixel ( w >> 2 , h >> 2 ) ) == 0 )"		872604	0					
ANR	872634	UnaryOperator	!		872604	0					
ANR	872635	EqualityExpression	"qAlpha ( image . pixel ( w >> 1 , h >> 1 ) ) + qAlpha ( image . pixel ( w >> 2 , h >> 2 ) ) == 0"		872604	1		==			
ANR	872636	AdditiveExpression	"qAlpha ( image . pixel ( w >> 1 , h >> 1 ) ) + qAlpha ( image . pixel ( w >> 2 , h >> 2 ) )"		872604	0		+			
ANR	872637	CallExpression	"qAlpha ( image . pixel ( w >> 1 , h >> 1 ) )"		872604	0					
ANR	872638	Callee	qAlpha		872604	0					
ANR	872639	Identifier	qAlpha		872604	0					
ANR	872640	ArgumentList	"image . pixel ( w >> 1 , h >> 1 )"		872604	1					
ANR	872641	Argument	"image . pixel ( w >> 1 , h >> 1 )"		872604	0					
ANR	872642	CallExpression	"image . pixel ( w >> 1 , h >> 1 )"		872604	0					
ANR	872643	Callee	image . pixel		872604	0					
ANR	872644	MemberAccess	image . pixel		872604	0					
ANR	872645	Identifier	image		872604	0					
ANR	872646	Identifier	pixel		872604	1					
ANR	872647	ArgumentList	w >> 1		872604	1					
ANR	872648	Argument	w >> 1		872604	0					
ANR	872649	ShiftExpression	w >> 1		872604	0		>>			
ANR	872650	Identifier	w		872604	0					
ANR	872651	PrimaryExpression	1		872604	1					
ANR	872652	Argument	h >> 1		872604	1					
ANR	872653	ShiftExpression	h >> 1		872604	0		>>			
ANR	872654	Identifier	h		872604	0					
ANR	872655	PrimaryExpression	1		872604	1					
ANR	872656	CallExpression	"qAlpha ( image . pixel ( w >> 2 , h >> 2 ) )"		872604	1					
ANR	872657	Callee	qAlpha		872604	0					
ANR	872658	Identifier	qAlpha		872604	0					
ANR	872659	ArgumentList	"image . pixel ( w >> 2 , h >> 2 )"		872604	1					
ANR	872660	Argument	"image . pixel ( w >> 2 , h >> 2 )"		872604	0					
ANR	872661	CallExpression	"image . pixel ( w >> 2 , h >> 2 )"		872604	0					
ANR	872662	Callee	image . pixel		872604	0					
ANR	872663	MemberAccess	image . pixel		872604	0					
ANR	872664	Identifier	image		872604	0					
ANR	872665	Identifier	pixel		872604	1					
ANR	872666	ArgumentList	w >> 2		872604	1					
ANR	872667	Argument	w >> 2		872604	0					
ANR	872668	ShiftExpression	w >> 2		872604	0		>>			
ANR	872669	Identifier	w		872604	0					
ANR	872670	PrimaryExpression	2		872604	1					
ANR	872671	Argument	h >> 2		872604	1					
ANR	872672	ShiftExpression	h >> 2		872604	0		>>			
ANR	872673	Identifier	h		872604	0					
ANR	872674	PrimaryExpression	2		872604	1					
ANR	872675	PrimaryExpression	0		872604	1					
ANR	872676	ReturnStatement	return false ;	243:8:9319:9331	872604	1	True				
ANR	872677	Identifier	false		872604	0					
ANR	872678	ForStatement	for ( int x = 0 ; x < w ; ++ x )		872604	3					
ANR	872679	ForInit	int x = 0 ;	247:9:9468:9477	872604	0	True				
ANR	872680	IdentifierDeclStatement	int x = 0 ;		872604	0					
ANR	872681	IdentifierDecl	x = 0		872604	0					
ANR	872682	IdentifierDeclType	int		872604	0					
ANR	872683	Identifier	x		872604	1					
ANR	872684	AssignmentExpression	x = 0		872604	2		=			
ANR	872685	Identifier	x		872604	0					
ANR	872686	PrimaryExpression	0		872604	1					
ANR	872687	Condition	x < w	247:20:9479:9483	872604	1	True				
ANR	872688	RelationalExpression	x < w		872604	0		<			
ANR	872689	Identifier	x		872604	0					
ANR	872690	Identifier	w		872604	1					
ANR	872691	UnaryExpression	++ x	247:27:9486:9488	872604	2	True				
ANR	872692	IncDec	++		872604	0					
ANR	872693	Identifier	x		872604	1					
ANR	872694	CompoundStatement		11:32:411:411	872604	3					
ANR	872695	ForStatement	for ( int y = 0 ; y < h ; ++ y )		872604	0					
ANR	872696	ForInit	int y = 0 ;	248:13:9506:9515	872604	0	True				
ANR	872697	IdentifierDeclStatement	int y = 0 ;		872604	0					
ANR	872698	IdentifierDecl	y = 0		872604	0					
ANR	872699	IdentifierDeclType	int		872604	0					
ANR	872700	Identifier	y		872604	1					
ANR	872701	AssignmentExpression	y = 0		872604	2		=			
ANR	872702	Identifier	y		872604	0					
ANR	872703	PrimaryExpression	0		872604	1					
ANR	872704	Condition	y < h	248:24:9517:9521	872604	1	True				
ANR	872705	RelationalExpression	y < h		872604	0		<			
ANR	872706	Identifier	y		872604	0					
ANR	872707	Identifier	h		872604	1					
ANR	872708	UnaryExpression	++ y	248:31:9524:9526	872604	2	True				
ANR	872709	IncDec	++		872604	0					
ANR	872710	Identifier	y		872604	1					
ANR	872711	CompoundStatement		12:36:449:449	872604	3					
ANR	872712	IfStatement	"if ( qAlpha ( image . pixel ( x , y ) ) )"		872604	0					
ANR	872713	Condition	"qAlpha ( image . pixel ( x , y ) )"	249:16:9547:9571	872604	0	True				
ANR	872714	CallExpression	"qAlpha ( image . pixel ( x , y ) )"		872604	0					
ANR	872715	Callee	qAlpha		872604	0					
ANR	872716	Identifier	qAlpha		872604	0					
ANR	872717	ArgumentList	"image . pixel ( x , y )"		872604	1					
ANR	872718	Argument	"image . pixel ( x , y )"		872604	0					
ANR	872719	CallExpression	"image . pixel ( x , y )"		872604	0					
ANR	872720	Callee	image . pixel		872604	0					
ANR	872721	MemberAccess	image . pixel		872604	0					
ANR	872722	Identifier	image		872604	0					
ANR	872723	Identifier	pixel		872604	1					
ANR	872724	ArgumentList	x		872604	1					
ANR	872725	Argument	x		872604	0					
ANR	872726	Identifier	x		872604	0					
ANR	872727	Argument	y		872604	1					
ANR	872728	Identifier	y		872604	0					
ANR	872729	CompoundStatement		13:43:494:494	872604	1					
ANR	872730	ReturnStatement	return false ;	251:16:9634:9646	872604	0	True				
ANR	872731	Identifier	false		872604	0					
ANR	872732	ReturnStatement	return true ;	256:4:9683:9694	872604	4	True				
ANR	872733	Identifier	true		872604	0					
ANR	872734	ReturnType	bool		872604	1					
ANR	872735	Identifier	SNIProxy :: isTransparentImage		872604	2					
ANR	872736	ParameterList	const QImage & image		872604	3					
ANR	872737	Parameter	const QImage & image	236:34:9052:9070	872604	0	True				
ANR	872738	ParameterType	const QImage &		872604	0					
ANR	872739	Identifier	image		872604	1					
ANR	872740	CFGEntryNode	ENTRY		872604		True				
ANR	872741	CFGExitNode	EXIT		872604		True				
ANR	872742	Symbol	image		872604						
ANR	872743	Symbol	w		872604						
ANR	872744	Symbol	qAlpha		872604						
ANR	872745	Symbol	h		872604						
ANR	872746	Symbol	false		872604						
ANR	872747	Symbol	x		872604						
ANR	872748	Symbol	true		872604						
ANR	872749	Symbol	y		872604						
ANR	872750	Symbol	image . height		872604						
ANR	872751	Symbol	image . width		872604						
ANR	872752	Symbol	image . pixel		872604						
ANR	872753	Function	SNIProxy :: getImageNonComposite	259:0:9699:11355							
ANR	872754	FunctionDef	SNIProxy :: getImageNonComposite ()		872753	0					
ANR	872755	CompoundStatement		260:0:9745:11355	872753	0					
ANR	872756	Statement	auto	261:4:9751:9754	872753	0	True				
ANR	872757	ExpressionStatement	c = QX11Info :: connection ( )	261:9:9756:9782	872753	1	True				
ANR	872758	AssignmentExpression	c = QX11Info :: connection ( )		872753	0		=			
ANR	872759	Identifier	c		872753	0					
ANR	872760	CallExpression	QX11Info :: connection ( )		872753	1					
ANR	872761	Callee	QX11Info :: connection		872753	0					
ANR	872762	Identifier	QX11Info :: connection		872753	0					
ANR	872763	ArgumentList			872753	1					
ANR	872764	Statement	auto	262:4:9788:9791	872753	2	True				
ANR	872765	ExpressionStatement	"cookie = xcb_get_geometry ( c , m_windowId )"	262:9:9793:9833	872753	3	True				
ANR	872766	AssignmentExpression	"cookie = xcb_get_geometry ( c , m_windowId )"		872753	0		=			
ANR	872767	Identifier	cookie		872753	0					
ANR	872768	CallExpression	"xcb_get_geometry ( c , m_windowId )"		872753	1					
ANR	872769	Callee	xcb_get_geometry		872753	0					
ANR	872770	Identifier	xcb_get_geometry		872753	0					
ANR	872771	ArgumentList	c		872753	1					
ANR	872772	Argument	c		872753	0					
ANR	872773	Identifier	c		872753	0					
ANR	872774	Argument	m_windowId		872753	1					
ANR	872775	Identifier	m_windowId		872753	0					
ANR	872776	IdentifierDeclStatement	"QScopedPointer < xcb_get_geometry_reply_t , QScopedPointerPodDeleter > geom ( xcb_get_geometry_reply ( c , cookie , Q_NULLPTR ) ) ;"	263:4:9839:9964	872753	4	True				
ANR	872777	IdentifierDecl	"geom ( xcb_get_geometry_reply ( c , cookie , Q_NULLPTR ) )"		872753	0					
ANR	872778	IdentifierDeclType	"QScopedPointer < xcb_get_geometry_reply_t , QScopedPointerPodDeleter >"		872753	0					
ANR	872779	Identifier	geom		872753	1					
ANR	872780	CallExpression	"xcb_get_geometry_reply ( c , cookie , Q_NULLPTR )"		872753	2					
ANR	872781	Callee	xcb_get_geometry_reply		872753	0					
ANR	872782	Identifier	xcb_get_geometry_reply		872753	0					
ANR	872783	ArgumentList	c		872753	1					
ANR	872784	Argument	c		872753	0					
ANR	872785	Identifier	c		872753	0					
ANR	872786	Argument	cookie		872753	1					
ANR	872787	Identifier	cookie		872753	0					
ANR	872788	Argument	Q_NULLPTR		872753	2					
ANR	872789	Identifier	Q_NULLPTR		872753	0					
ANR	872790	IfStatement	if ( ! geom )		872753	5					
ANR	872791	Condition	! geom	266:8:9975:9979	872753	0	True				
ANR	872792	UnaryOperationExpression	! geom		872753	0					
ANR	872793	UnaryOperator	!		872753	0					
ANR	872794	Identifier	geom		872753	1					
ANR	872795	CompoundStatement		7:15:236:236	872753	1					
ANR	872796	ReturnStatement	return QImage ( ) ;	267:8:9992:10007	872753	0	True				
ANR	872797	CallExpression	QImage ( )		872753	0					
ANR	872798	Callee	QImage		872753	0					
ANR	872799	Identifier	QImage		872753	0					
ANR	872800	ArgumentList			872753	1					
ANR	872801	IdentifierDeclStatement	"xcb_image_t * image = xcb_image_get ( c , m_windowId , 0 , 0 , geom -> width , geom -> height , 0xFFFFFFFF , XCB_IMAGE_FORMAT_Z_PIXMAP ) ;"	270:4:10020:10141	872753	6	True				
ANR	872802	IdentifierDecl	"* image = xcb_image_get ( c , m_windowId , 0 , 0 , geom -> width , geom -> height , 0xFFFFFFFF , XCB_IMAGE_FORMAT_Z_PIXMAP )"		872753	0					
ANR	872803	IdentifierDeclType	xcb_image_t *		872753	0					
ANR	872804	Identifier	image		872753	1					
ANR	872805	AssignmentExpression	"* image = xcb_image_get ( c , m_windowId , 0 , 0 , geom -> width , geom -> height , 0xFFFFFFFF , XCB_IMAGE_FORMAT_Z_PIXMAP )"		872753	2		=			
ANR	872806	Identifier	image		872753	0					
ANR	872807	CallExpression	"xcb_image_get ( c , m_windowId , 0 , 0 , geom -> width , geom -> height , 0xFFFFFFFF , XCB_IMAGE_FORMAT_Z_PIXMAP )"		872753	1					
ANR	872808	Callee	xcb_image_get		872753	0					
ANR	872809	Identifier	xcb_image_get		872753	0					
ANR	872810	ArgumentList	c		872753	1					
ANR	872811	Argument	c		872753	0					
ANR	872812	Identifier	c		872753	0					
ANR	872813	Argument	m_windowId		872753	1					
ANR	872814	Identifier	m_windowId		872753	0					
ANR	872815	Argument	0		872753	2					
ANR	872816	PrimaryExpression	0		872753	0					
ANR	872817	Argument	0		872753	3					
ANR	872818	PrimaryExpression	0		872753	0					
ANR	872819	Argument	geom -> width		872753	4					
ANR	872820	PtrMemberAccess	geom -> width		872753	0					
ANR	872821	Identifier	geom		872753	0					
ANR	872822	Identifier	width		872753	1					
ANR	872823	Argument	geom -> height		872753	5					
ANR	872824	PtrMemberAccess	geom -> height		872753	0					
ANR	872825	Identifier	geom		872753	0					
ANR	872826	Identifier	height		872753	1					
ANR	872827	Argument	0xFFFFFFFF		872753	6					
ANR	872828	PrimaryExpression	0xFFFFFFFF		872753	0					
ANR	872829	Argument	XCB_IMAGE_FORMAT_Z_PIXMAP		872753	7					
ANR	872830	Identifier	XCB_IMAGE_FORMAT_Z_PIXMAP		872753	0					
ANR	872831	IdentifierDeclStatement	QImage naiveConversion ;	273:4:10222:10244	872753	7	True				
ANR	872832	IdentifierDecl	naiveConversion		872753	0					
ANR	872833	IdentifierDeclType	QImage		872753	0					
ANR	872834	Identifier	naiveConversion		872753	1					
ANR	872835	IfStatement	if ( image )		872753	8					
ANR	872836	Condition	image	274:8:10254:10258	872753	0	True				
ANR	872837	Identifier	image		872753	0					
ANR	872838	CompoundStatement		15:15:515:515	872753	1					
ANR	872839	ExpressionStatement	"naiveConversion = QImage ( image -> data , image -> width , image -> height , QImage :: Format_ARGB32 )"	275:8:10271:10360	872753	0	True				
ANR	872840	AssignmentExpression	"naiveConversion = QImage ( image -> data , image -> width , image -> height , QImage :: Format_ARGB32 )"		872753	0		=			
ANR	872841	Identifier	naiveConversion		872753	0					
ANR	872842	CallExpression	"QImage ( image -> data , image -> width , image -> height , QImage :: Format_ARGB32 )"		872753	1					
ANR	872843	Callee	QImage		872753	0					
ANR	872844	Identifier	QImage		872753	0					
ANR	872845	ArgumentList	image -> data		872753	1					
ANR	872846	Argument	image -> data		872753	0					
ANR	872847	PtrMemberAccess	image -> data		872753	0					
ANR	872848	Identifier	image		872753	0					
ANR	872849	Identifier	data		872753	1					
ANR	872850	Argument	image -> width		872753	1					
ANR	872851	PtrMemberAccess	image -> width		872753	0					
ANR	872852	Identifier	image		872753	0					
ANR	872853	Identifier	width		872753	1					
ANR	872854	Argument	image -> height		872753	2					
ANR	872855	PtrMemberAccess	image -> height		872753	0					
ANR	872856	Identifier	image		872753	0					
ANR	872857	Identifier	height		872753	1					
ANR	872858	Argument	QImage :: Format_ARGB32		872753	3					
ANR	872859	Identifier	QImage :: Format_ARGB32		872753	0					
ANR	872860	ElseStatement	else		872753	0					
ANR	872861	CompoundStatement		17:11:627:627	872753	0					
ANR	872862	ExpressionStatement	"qCDebug ( SNIPROXY ) << ""Skip NULL image returned from xcb_image_get() for"" << m_windowId << Title ( )"	277:8:10383:10480	872753	0	True				
ANR	872863	ShiftExpression	"qCDebug ( SNIPROXY ) << ""Skip NULL image returned from xcb_image_get() for"" << m_windowId << Title ( )"		872753	0		<<			
ANR	872864	CallExpression	qCDebug ( SNIPROXY )		872753	0					
ANR	872865	Callee	qCDebug		872753	0					
ANR	872866	Identifier	qCDebug		872753	0					
ANR	872867	ArgumentList	SNIPROXY		872753	1					
ANR	872868	Argument	SNIPROXY		872753	0					
ANR	872869	Identifier	SNIPROXY		872753	0					
ANR	872870	ShiftExpression	"""Skip NULL image returned from xcb_image_get() for"" << m_windowId << Title ( )"		872753	1		<<			
ANR	872871	PrimaryExpression	"""Skip NULL image returned from xcb_image_get() for"""		872753	0					
ANR	872872	ShiftExpression	m_windowId << Title ( )		872753	1		<<			
ANR	872873	Identifier	m_windowId		872753	0					
ANR	872874	CallExpression	Title ( )		872753	1					
ANR	872875	Callee	Title		872753	0					
ANR	872876	Identifier	Title		872753	0					
ANR	872877	ArgumentList			872753	1					
ANR	872878	ReturnStatement	return QImage ( ) ;	278:8:10490:10505	872753	1	True				
ANR	872879	CallExpression	QImage ( )		872753	0					
ANR	872880	Callee	QImage		872753	0					
ANR	872881	Identifier	QImage		872753	0					
ANR	872882	ArgumentList			872753	1					
ANR	872883	IfStatement	if ( isTransparentImage ( naiveConversion ) )		872753	9					
ANR	872884	Condition	isTransparentImage ( naiveConversion )	281:8:10522:10556	872753	0	True				
ANR	872885	CallExpression	isTransparentImage ( naiveConversion )		872753	0					
ANR	872886	Callee	isTransparentImage		872753	0					
ANR	872887	Identifier	isTransparentImage		872753	0					
ANR	872888	ArgumentList	naiveConversion		872753	1					
ANR	872889	Argument	naiveConversion		872753	0					
ANR	872890	Identifier	naiveConversion		872753	0					
ANR	872891	CompoundStatement		23:8:823:884	872753	1					
ANR	872892	IdentifierDeclStatement	QImage elaborateConversion = QImage ( convertFromNative ( image ) ) ;	282:8:10569:10630	872753	0	True				
ANR	872893	IdentifierDecl	elaborateConversion = QImage ( convertFromNative ( image ) )		872753	0					
ANR	872894	IdentifierDeclType	QImage		872753	0					
ANR	872895	Identifier	elaborateConversion		872753	1					
ANR	872896	AssignmentExpression	elaborateConversion = QImage ( convertFromNative ( image ) )		872753	2		=			
ANR	872897	Identifier	elaborateConversion		872753	0					
ANR	872898	CallExpression	QImage ( convertFromNative ( image ) )		872753	1					
ANR	872899	Callee	QImage		872753	0					
ANR	872900	Identifier	QImage		872753	0					
ANR	872901	ArgumentList	convertFromNative ( image )		872753	1					
ANR	872902	Argument	convertFromNative ( image )		872753	0					
ANR	872903	CallExpression	convertFromNative ( image )		872753	0					
ANR	872904	Callee	convertFromNative		872753	0					
ANR	872905	Identifier	convertFromNative		872753	0					
ANR	872906	ArgumentList	image		872753	1					
ANR	872907	Argument	image		872753	0					
ANR	872908	Identifier	image		872753	0					
ANR	872909	IfStatement	if ( isTransparentImage ( elaborateConversion ) )		872753	1					
ANR	872910	Condition	isTransparentImage ( elaborateConversion )	288:12:10896:10934	872753	0	True				
ANR	872911	CallExpression	isTransparentImage ( elaborateConversion )		872753	0					
ANR	872912	Callee	isTransparentImage		872753	0					
ANR	872913	Identifier	isTransparentImage		872753	0					
ANR	872914	ArgumentList	elaborateConversion		872753	1					
ANR	872915	Argument	elaborateConversion		872753	0					
ANR	872916	Identifier	elaborateConversion		872753	0					
ANR	872917	CompoundStatement		29:53:1191:1191	872753	1					
ANR	872918	ExpressionStatement	"qCDebug ( SNIPROXY ) << ""Skip transparent xembed icon for"" << m_windowId << Title ( )"	289:12:10951:11031	872753	0	True				
ANR	872919	ShiftExpression	"qCDebug ( SNIPROXY ) << ""Skip transparent xembed icon for"" << m_windowId << Title ( )"		872753	0		<<			
ANR	872920	CallExpression	qCDebug ( SNIPROXY )		872753	0					
ANR	872921	Callee	qCDebug		872753	0					
ANR	872922	Identifier	qCDebug		872753	0					
ANR	872923	ArgumentList	SNIPROXY		872753	1					
ANR	872924	Argument	SNIPROXY		872753	0					
ANR	872925	Identifier	SNIPROXY		872753	0					
ANR	872926	ShiftExpression	"""Skip transparent xembed icon for"" << m_windowId << Title ( )"		872753	1		<<			
ANR	872927	PrimaryExpression	"""Skip transparent xembed icon for"""		872753	0					
ANR	872928	ShiftExpression	m_windowId << Title ( )		872753	1		<<			
ANR	872929	Identifier	m_windowId		872753	0					
ANR	872930	CallExpression	Title ( )		872753	1					
ANR	872931	Callee	Title		872753	0					
ANR	872932	Identifier	Title		872753	0					
ANR	872933	ArgumentList			872753	1					
ANR	872934	ReturnStatement	return QImage ( ) ;	290:12:11045:11060	872753	1	True				
ANR	872935	CallExpression	QImage ( )		872753	0					
ANR	872936	Callee	QImage		872753	0					
ANR	872937	Identifier	QImage		872753	0					
ANR	872938	ArgumentList			872753	1					
ANR	872939	ElseStatement	else		872753	0					
ANR	872940	ReturnStatement	return elaborateConversion ;	292:12:11089:11115	872753	0	True				
ANR	872941	Identifier	elaborateConversion		872753	0					
ANR	872942	ElseStatement	else		872753	0					
ANR	872943	CompoundStatement		34:11:1382:1382	872753	0					
ANR	872944	ReturnStatement	"return QImage ( image -> data , image -> width , image -> height , image -> stride , QImage :: Format_ARGB32 , sni_cleanup_xcb_image , image ) ;"	295:8:11224:11347	872753	0	True				
ANR	872945	CallExpression	"QImage ( image -> data , image -> width , image -> height , image -> stride , QImage :: Format_ARGB32 , sni_cleanup_xcb_image , image )"		872753	0					
ANR	872946	Callee	QImage		872753	0					
ANR	872947	Identifier	QImage		872753	0					
ANR	872948	ArgumentList	image -> data		872753	1					
ANR	872949	Argument	image -> data		872753	0					
ANR	872950	PtrMemberAccess	image -> data		872753	0					
ANR	872951	Identifier	image		872753	0					
ANR	872952	Identifier	data		872753	1					
ANR	872953	Argument	image -> width		872753	1					
ANR	872954	PtrMemberAccess	image -> width		872753	0					
ANR	872955	Identifier	image		872753	0					
ANR	872956	Identifier	width		872753	1					
ANR	872957	Argument	image -> height		872753	2					
ANR	872958	PtrMemberAccess	image -> height		872753	0					
ANR	872959	Identifier	image		872753	0					
ANR	872960	Identifier	height		872753	1					
ANR	872961	Argument	image -> stride		872753	3					
ANR	872962	PtrMemberAccess	image -> stride		872753	0					
ANR	872963	Identifier	image		872753	0					
ANR	872964	Identifier	stride		872753	1					
ANR	872965	Argument	QImage :: Format_ARGB32		872753	4					
ANR	872966	Identifier	QImage :: Format_ARGB32		872753	0					
ANR	872967	Argument	sni_cleanup_xcb_image		872753	5					
ANR	872968	Identifier	sni_cleanup_xcb_image		872753	0					
ANR	872969	Argument	image		872753	6					
ANR	872970	Identifier	image		872753	0					
ANR	872971	ReturnType	QImage		872753	1					
ANR	872972	Identifier	SNIProxy :: getImageNonComposite		872753	2					
ANR	872973	ParameterList			872753	3					
ANR	872974	CFGEntryNode	ENTRY		872753		True				
ANR	872975	CFGExitNode	EXIT		872753		True				
ANR	872976	Symbol	geom -> height		872753						
ANR	872977	Symbol	geom -> width		872753						
ANR	872978	Symbol	image -> stride		872753						
ANR	872979	Symbol	Q_NULLPTR		872753						
ANR	872980	Symbol	image -> data		872753						
ANR	872981	Symbol	SNIPROXY		872753						
ANR	872982	Symbol	xcb_get_geometry		872753						
ANR	872983	Symbol	geom		872753						
ANR	872984	Symbol	QImage :: Format_ARGB32		872753						
ANR	872985	Symbol	sni_cleanup_xcb_image		872753						
ANR	872986	Symbol	isTransparentImage		872753						
ANR	872987	Symbol	m_windowId		872753						
ANR	872988	Symbol	xcb_image_get		872753						
ANR	872989	Symbol	XCB_IMAGE_FORMAT_Z_PIXMAP		872753						
ANR	872990	Symbol	image		872753						
ANR	872991	Symbol	c		872753						
ANR	872992	Symbol	cookie		872753						
ANR	872993	Symbol	QX11Info :: connection		872753						
ANR	872994	Symbol	elaborateConversion		872753						
ANR	872995	Symbol	* geom		872753						
ANR	872996	Symbol	image -> width		872753						
ANR	872997	Symbol	image -> height		872753						
ANR	872998	Symbol	convertFromNative		872753						
ANR	872999	Symbol	QImage		872753						
ANR	873000	Symbol	naiveConversion		872753						
ANR	873001	Symbol	* image		872753						
ANR	873002	Function	SNIProxy :: convertFromNative	299:0:11358:13066							
ANR	873003	FunctionDef	SNIProxy :: convertFromNative (xcb_image_t * xcbImage)		873002	0					
ANR	873004	CompoundStatement		300:0:11422:13066	873002	0					
ANR	873005	IdentifierDeclStatement	QImage :: Format format = QImage :: Format_Invalid ;	301:4:11428:11474	873002	0	True				
ANR	873006	IdentifierDecl	format = QImage :: Format_Invalid		873002	0					
ANR	873007	IdentifierDeclType	QImage :: Format		873002	0					
ANR	873008	Identifier	format		873002	1					
ANR	873009	AssignmentExpression	format = QImage :: Format_Invalid		873002	2		=			
ANR	873010	Identifier	QImage :: Format_Invalid		873002	0					
ANR	873011	Identifier	QImage :: Format_Invalid		873002	1					
ANR	873012	SwitchStatement	switch ( xcbImage -> depth )		873002	1					
ANR	873013	Condition	xcbImage -> depth	303:12:11489:11503	873002	0	True				
ANR	873014	PtrMemberAccess	xcbImage -> depth		873002	0					
ANR	873015	Identifier	xcbImage		873002	0					
ANR	873016	Identifier	depth		873002	1					
ANR	873017	CompoundStatement		4:29:83:83	873002	1					
ANR	873018	Label	case 1 :	304:4:11512:11518	873002	0	True				
ANR	873019	ExpressionStatement	format = QImage :: Format_MonoLSB	305:8:11528:11559	873002	1	True				
ANR	873020	AssignmentExpression	format = QImage :: Format_MonoLSB		873002	0		=			
ANR	873021	Identifier	format		873002	0					
ANR	873022	Identifier	QImage :: Format_MonoLSB		873002	1					
ANR	873023	BreakStatement	break ;	306:8:11569:11574	873002	2	True				
ANR	873024	Label	case 16 :	307:4:11580:11587	873002	3	True				
ANR	873025	ExpressionStatement	format = QImage :: Format_RGB16	308:8:11597:11626	873002	4	True				
ANR	873026	AssignmentExpression	format = QImage :: Format_RGB16		873002	0		=			
ANR	873027	Identifier	format		873002	0					
ANR	873028	Identifier	QImage :: Format_RGB16		873002	1					
ANR	873029	BreakStatement	break ;	309:8:11636:11641	873002	5	True				
ANR	873030	Label	case 24 :	310:4:11647:11654	873002	6	True				
ANR	873031	ExpressionStatement	format = QImage :: Format_RGB32	311:8:11664:11693	873002	7	True				
ANR	873032	AssignmentExpression	format = QImage :: Format_RGB32		873002	0		=			
ANR	873033	Identifier	format		873002	0					
ANR	873034	Identifier	QImage :: Format_RGB32		873002	1					
ANR	873035	BreakStatement	break ;	312:8:11703:11708	873002	8	True				
ANR	873036	Label	case 30 :	313:4:11714:11721	873002	9	True				
ANR	873037	CompoundStatement		14:13:300:300	873002	10					
ANR	873038	Statement	quint32	315:8:11813:11819	873002	0	True				
ANR	873039	Statement	*	315:16:11821:11821	873002	1	True				
ANR	873040	Statement	pixels	315:17:11822:11827	873002	2	True				
ANR	873041	Statement	=	315:24:11829:11829	873002	3	True				
ANR	873042	Statement	reinterpret_cast	315:26:11831:11846	873002	4	True				
ANR	873043	Statement	<	315:42:11847:11847	873002	5	True				
ANR	873044	Statement	quint32	315:43:11848:11854	873002	6	True				
ANR	873045	Statement	*	315:51:11856:11856	873002	7	True				
ANR	873046	Statement	>	315:52:11857:11857	873002	8	True				
ANR	873047	ExpressionStatement	xcbImage -> data	315:53:11858:11874	873002	9	True				
ANR	873048	PtrMemberAccess	xcbImage -> data		873002	0					
ANR	873049	Identifier	xcbImage		873002	0					
ANR	873050	Identifier	data		873002	1					
ANR	873051	ForStatement	for ( uint i = 0 ; i < ( xcbImage -> size / 4 ) ; i ++ )		873002	10					
ANR	873052	ForInit	uint i = 0 ;	316:13:11889:11899	873002	0	True				
ANR	873053	IdentifierDeclStatement	uint i = 0 ;		873002	0					
ANR	873054	IdentifierDecl	i = 0		873002	0					
ANR	873055	IdentifierDeclType	uint		873002	0					
ANR	873056	Identifier	i		873002	1					
ANR	873057	AssignmentExpression	i = 0		873002	2		=			
ANR	873058	Identifier	i		873002	0					
ANR	873059	PrimaryExpression	0		873002	1					
ANR	873060	Condition	i < ( xcbImage -> size / 4 )	316:25:11901:11924	873002	1	True				
ANR	873061	RelationalExpression	i < ( xcbImage -> size / 4 )		873002	0		<			
ANR	873062	Identifier	i		873002	0					
ANR	873063	MultiplicativeExpression	xcbImage -> size / 4		873002	1		/			
ANR	873064	PtrMemberAccess	xcbImage -> size		873002	0					
ANR	873065	Identifier	xcbImage		873002	0					
ANR	873066	Identifier	size		873002	1					
ANR	873067	PrimaryExpression	4		873002	1					
ANR	873068	PostIncDecOperationExpression	i ++	316:51:11927:11929	873002	2	True				
ANR	873069	Identifier	i		873002	0					
ANR	873070	IncDec	++		873002	1					
ANR	873071	CompoundStatement		20:12:615:647	873002	3					
ANR	873072	IdentifierDeclStatement	int r = ( pixels [ i ] >> 22 ) & 0xff ;	317:12:11946:11978	873002	0	True				
ANR	873073	IdentifierDecl	r = ( pixels [ i ] >> 22 ) & 0xff		873002	0					
ANR	873074	IdentifierDeclType	int		873002	0					
ANR	873075	Identifier	r		873002	1					
ANR	873076	AssignmentExpression	r = ( pixels [ i ] >> 22 ) & 0xff		873002	2		=			
ANR	873077	Identifier	r		873002	0					
ANR	873078	BitAndExpression	( pixels [ i ] >> 22 ) & 0xff		873002	1		&			
ANR	873079	ShiftExpression	pixels [ i ] >> 22		873002	0		>>			
ANR	873080	ArrayIndexing	pixels [ i ]		873002	0					
ANR	873081	Identifier	pixels		873002	0					
ANR	873082	Identifier	i		873002	1					
ANR	873083	PrimaryExpression	22		873002	1					
ANR	873084	PrimaryExpression	0xff		873002	1					
ANR	873085	IdentifierDeclStatement	int g = ( pixels [ i ] >> 12 ) & 0xff ;	318:12:11992:12024	873002	1	True				
ANR	873086	IdentifierDecl	g = ( pixels [ i ] >> 12 ) & 0xff		873002	0					
ANR	873087	IdentifierDeclType	int		873002	0					
ANR	873088	Identifier	g		873002	1					
ANR	873089	AssignmentExpression	g = ( pixels [ i ] >> 12 ) & 0xff		873002	2		=			
ANR	873090	Identifier	g		873002	0					
ANR	873091	BitAndExpression	( pixels [ i ] >> 12 ) & 0xff		873002	1		&			
ANR	873092	ShiftExpression	pixels [ i ] >> 12		873002	0		>>			
ANR	873093	ArrayIndexing	pixels [ i ]		873002	0					
ANR	873094	Identifier	pixels		873002	0					
ANR	873095	Identifier	i		873002	1					
ANR	873096	PrimaryExpression	12		873002	1					
ANR	873097	PrimaryExpression	0xff		873002	1					
ANR	873098	IdentifierDeclStatement	int b = ( pixels [ i ] >> 2 ) & 0xff ;	319:12:12038:12070	873002	2	True				
ANR	873099	IdentifierDecl	b = ( pixels [ i ] >> 2 ) & 0xff		873002	0					
ANR	873100	IdentifierDeclType	int		873002	0					
ANR	873101	Identifier	b		873002	1					
ANR	873102	AssignmentExpression	b = ( pixels [ i ] >> 2 ) & 0xff		873002	2		=			
ANR	873103	Identifier	b		873002	0					
ANR	873104	BitAndExpression	( pixels [ i ] >> 2 ) & 0xff		873002	1		&			
ANR	873105	ShiftExpression	pixels [ i ] >> 2		873002	0		>>			
ANR	873106	ArrayIndexing	pixels [ i ]		873002	0					
ANR	873107	Identifier	pixels		873002	0					
ANR	873108	Identifier	i		873002	1					
ANR	873109	PrimaryExpression	2		873002	1					
ANR	873110	PrimaryExpression	0xff		873002	1					
ANR	873111	ExpressionStatement	"pixels [ i ] = qRgba ( r , g , b , 0xff )"	321:12:12085:12117	873002	3	True				
ANR	873112	AssignmentExpression	"pixels [ i ] = qRgba ( r , g , b , 0xff )"		873002	0		=			
ANR	873113	ArrayIndexing	pixels [ i ]		873002	0					
ANR	873114	Identifier	pixels		873002	0					
ANR	873115	Identifier	i		873002	1					
ANR	873116	CallExpression	"qRgba ( r , g , b , 0xff )"		873002	1					
ANR	873117	Callee	qRgba		873002	0					
ANR	873118	Identifier	qRgba		873002	0					
ANR	873119	ArgumentList	r		873002	1					
ANR	873120	Argument	r		873002	0					
ANR	873121	Identifier	r		873002	0					
ANR	873122	Argument	g		873002	1					
ANR	873123	Identifier	g		873002	0					
ANR	873124	Argument	b		873002	2					
ANR	873125	Identifier	b		873002	0					
ANR	873126	Argument	0xff		873002	3					
ANR	873127	PrimaryExpression	0xff		873002	0					
ANR	873128	Label	case 32 :	325:4:12211:12218	873002	11	True				
ANR	873129	ExpressionStatement	format = QImage :: Format_ARGB32_Premultiplied	326:8:12228:12272	873002	12	True				
ANR	873130	AssignmentExpression	format = QImage :: Format_ARGB32_Premultiplied		873002	0		=			
ANR	873131	Identifier	format		873002	0					
ANR	873132	Identifier	QImage :: Format_ARGB32_Premultiplied		873002	1					
ANR	873133	BreakStatement	break ;	327:8:12282:12287	873002	13	True				
ANR	873134	Label	default :	328:4:12293:12300	873002	14	True				
ANR	873135	Identifier	default		873002	0					
ANR	873136	ReturnStatement	return QImage ( ) ;	329:8:12310:12325	873002	15	True				
ANR	873137	CallExpression	QImage ( )		873002	0					
ANR	873138	Callee	QImage		873002	0					
ANR	873139	Identifier	QImage		873002	0					
ANR	873140	ArgumentList			873002	1					
ANR	873141	IdentifierDeclStatement	"QImage image ( xcbImage -> data , xcbImage -> width , xcbImage -> height , xcbImage -> stride , format , sni_cleanup_xcb_image , xcbImage ) ;"	332:4:12355:12477	873002	2	True				
ANR	873142	IdentifierDecl	"image ( xcbImage -> data , xcbImage -> width , xcbImage -> height , xcbImage -> stride , format , sni_cleanup_xcb_image , xcbImage )"		873002	0					
ANR	873143	IdentifierDeclType	QImage		873002	0					
ANR	873144	Identifier	image		873002	1					
ANR	873145	Expression	"xcbImage -> data , xcbImage -> width , xcbImage -> height , xcbImage -> stride , format , sni_cleanup_xcb_image , xcbImage"		873002	2					
ANR	873146	PtrMemberAccess	xcbImage -> data		873002	0					
ANR	873147	Identifier	xcbImage		873002	0					
ANR	873148	Identifier	data		873002	1					
ANR	873149	Expression	"xcbImage -> width , xcbImage -> height , xcbImage -> stride , format , sni_cleanup_xcb_image , xcbImage"		873002	1					
ANR	873150	PtrMemberAccess	xcbImage -> width		873002	0					
ANR	873151	Identifier	xcbImage		873002	0					
ANR	873152	Identifier	width		873002	1					
ANR	873153	Expression	"xcbImage -> height , xcbImage -> stride , format , sni_cleanup_xcb_image , xcbImage"		873002	1					
ANR	873154	PtrMemberAccess	xcbImage -> height		873002	0					
ANR	873155	Identifier	xcbImage		873002	0					
ANR	873156	Identifier	height		873002	1					
ANR	873157	Expression	"xcbImage -> stride , format , sni_cleanup_xcb_image , xcbImage"		873002	1					
ANR	873158	PtrMemberAccess	xcbImage -> stride		873002	0					
ANR	873159	Identifier	xcbImage		873002	0					
ANR	873160	Identifier	stride		873002	1					
ANR	873161	Expression	"format , sni_cleanup_xcb_image , xcbImage"		873002	1					
ANR	873162	Identifier	format		873002	0					
ANR	873163	Expression	"sni_cleanup_xcb_image , xcbImage"		873002	1					
ANR	873164	Identifier	sni_cleanup_xcb_image		873002	0					
ANR	873165	Identifier	xcbImage		873002	1					
ANR	873166	IfStatement	if ( image . isNull ( ) )		873002	3					
ANR	873167	Condition	image . isNull ( )	334:8:12488:12501	873002	0	True				
ANR	873168	CallExpression	image . isNull ( )		873002	0					
ANR	873169	Callee	image . isNull		873002	0					
ANR	873170	MemberAccess	image . isNull		873002	0					
ANR	873171	Identifier	image		873002	0					
ANR	873172	Identifier	isNull		873002	1					
ANR	873173	ArgumentList			873002	1					
ANR	873174	CompoundStatement		35:24:1081:1081	873002	1					
ANR	873175	ReturnStatement	return QImage ( ) ;	335:8:12514:12529	873002	0	True				
ANR	873176	CallExpression	QImage ( )		873002	0					
ANR	873177	Callee	QImage		873002	0					
ANR	873178	Identifier	QImage		873002	0					
ANR	873179	ArgumentList			873002	1					
ANR	873180	IfStatement	if ( format == QImage :: Format_RGB32 && xcbImage -> bpp == 32 )		873002	4					
ANR	873181	Condition	format == QImage :: Format_RGB32 && xcbImage -> bpp == 32	338:8:12546:12598	873002	0	True				
ANR	873182	AndExpression	format == QImage :: Format_RGB32 && xcbImage -> bpp == 32		873002	0		&&			
ANR	873183	EqualityExpression	format == QImage :: Format_RGB32		873002	0		==			
ANR	873184	Identifier	format		873002	0					
ANR	873185	Identifier	QImage :: Format_RGB32		873002	1					
ANR	873186	EqualityExpression	xcbImage -> bpp == 32		873002	1		==			
ANR	873187	PtrMemberAccess	xcbImage -> bpp		873002	0					
ANR	873188	Identifier	xcbImage		873002	0					
ANR	873189	Identifier	bpp		873002	1					
ANR	873190	PrimaryExpression	32		873002	1					
ANR	873191	CompoundStatement		43:8:1285:1322	873002	1					
ANR	873192	IdentifierDeclStatement	QImage m = image . createHeuristicMask ( ) ;	340:8:12615:12653	873002	0	True				
ANR	873193	IdentifierDecl	m = image . createHeuristicMask ( )		873002	0					
ANR	873194	IdentifierDeclType	QImage		873002	0					
ANR	873195	Identifier	m		873002	1					
ANR	873196	AssignmentExpression	m = image . createHeuristicMask ( )		873002	2		=			
ANR	873197	Identifier	m		873002	0					
ANR	873198	CallExpression	image . createHeuristicMask ( )		873002	1					
ANR	873199	Callee	image . createHeuristicMask		873002	0					
ANR	873200	MemberAccess	image . createHeuristicMask		873002	0					
ANR	873201	Identifier	image		873002	0					
ANR	873202	Identifier	createHeuristicMask		873002	1					
ANR	873203	ArgumentList			873002	1					
ANR	873204	IdentifierDeclStatement	QBitmap mask ( QPixmap :: fromImage ( m ) ) ;	341:8:12663:12698	873002	1	True				
ANR	873205	IdentifierDecl	mask ( QPixmap :: fromImage ( m ) )		873002	0					
ANR	873206	IdentifierDeclType	QBitmap		873002	0					
ANR	873207	Identifier	mask		873002	1					
ANR	873208	CallExpression	QPixmap :: fromImage ( m )		873002	2					
ANR	873209	Callee	QPixmap :: fromImage		873002	0					
ANR	873210	Identifier	QPixmap :: fromImage		873002	0					
ANR	873211	ArgumentList	m		873002	1					
ANR	873212	Argument	m		873002	0					
ANR	873213	Identifier	m		873002	0					
ANR	873214	IdentifierDeclStatement	QPixmap p = QPixmap :: fromImage ( image ) ;	342:8:12708:12745	873002	2	True				
ANR	873215	IdentifierDecl	p = QPixmap :: fromImage ( image )		873002	0					
ANR	873216	IdentifierDeclType	QPixmap		873002	0					
ANR	873217	Identifier	p		873002	1					
ANR	873218	AssignmentExpression	p = QPixmap :: fromImage ( image )		873002	2		=			
ANR	873219	Identifier	p		873002	0					
ANR	873220	CallExpression	QPixmap :: fromImage ( image )		873002	1					
ANR	873221	Callee	QPixmap :: fromImage		873002	0					
ANR	873222	Identifier	QPixmap :: fromImage		873002	0					
ANR	873223	ArgumentList	image		873002	1					
ANR	873224	Argument	image		873002	0					
ANR	873225	Identifier	image		873002	0					
ANR	873226	ExpressionStatement	p . setMask ( mask )	343:8:12755:12770	873002	3	True				
ANR	873227	CallExpression	p . setMask ( mask )		873002	0					
ANR	873228	Callee	p . setMask		873002	0					
ANR	873229	MemberAccess	p . setMask		873002	0					
ANR	873230	Identifier	p		873002	0					
ANR	873231	Identifier	setMask		873002	1					
ANR	873232	ArgumentList	mask		873002	1					
ANR	873233	Argument	mask		873002	0					
ANR	873234	Identifier	mask		873002	0					
ANR	873235	ExpressionStatement	image = p . toImage ( )	344:8:12780:12799	873002	4	True				
ANR	873236	AssignmentExpression	image = p . toImage ( )		873002	0		=			
ANR	873237	Identifier	image		873002	0					
ANR	873238	CallExpression	p . toImage ( )		873002	1					
ANR	873239	Callee	p . toImage		873002	0					
ANR	873240	MemberAccess	p . toImage		873002	0					
ANR	873241	Identifier	p		873002	0					
ANR	873242	Identifier	toImage		873002	1					
ANR	873243	ArgumentList			873002	1					
ANR	873244	IfStatement	if ( image . format ( ) == QImage :: Format_MonoLSB )		873002	5					
ANR	873245	Condition	image . format ( ) == QImage :: Format_MonoLSB	348:8:12861:12900	873002	0	True				
ANR	873246	EqualityExpression	image . format ( ) == QImage :: Format_MonoLSB		873002	0		==			
ANR	873247	CallExpression	image . format ( )		873002	0					
ANR	873248	Callee	image . format		873002	0					
ANR	873249	MemberAccess	image . format		873002	0					
ANR	873250	Identifier	image		873002	0					
ANR	873251	Identifier	format		873002	1					
ANR	873252	ArgumentList			873002	1					
ANR	873253	Identifier	QImage :: Format_MonoLSB		873002	1					
ANR	873254	CompoundStatement		49:50:1480:1480	873002	1					
ANR	873255	ExpressionStatement	image . setColorCount ( 2 )	349:8:12913:12935	873002	0	True				
ANR	873256	CallExpression	image . setColorCount ( 2 )		873002	0					
ANR	873257	Callee	image . setColorCount		873002	0					
ANR	873258	MemberAccess	image . setColorCount		873002	0					
ANR	873259	Identifier	image		873002	0					
ANR	873260	Identifier	setColorCount		873002	1					
ANR	873261	ArgumentList	2		873002	1					
ANR	873262	Argument	2		873002	0					
ANR	873263	PrimaryExpression	2		873002	0					
ANR	873264	ExpressionStatement	"image . setColor ( 0 , QColor ( Qt :: white ) . rgb ( ) )"	350:8:12945:12987	873002	1	True				
ANR	873265	CallExpression	"image . setColor ( 0 , QColor ( Qt :: white ) . rgb ( ) )"		873002	0					
ANR	873266	Callee	image . setColor		873002	0					
ANR	873267	MemberAccess	image . setColor		873002	0					
ANR	873268	Identifier	image		873002	0					
ANR	873269	Identifier	setColor		873002	1					
ANR	873270	ArgumentList	0		873002	1					
ANR	873271	Argument	0		873002	0					
ANR	873272	PrimaryExpression	0		873002	0					
ANR	873273	Argument	QColor ( Qt :: white ) . rgb ( )		873002	1					
ANR	873274	CallExpression	QColor ( Qt :: white ) . rgb ( )		873002	0					
ANR	873275	Callee	QColor ( Qt :: white ) . rgb		873002	0					
ANR	873276	MemberAccess	QColor ( Qt :: white ) . rgb		873002	0					
ANR	873277	CallExpression	QColor ( Qt :: white )		873002	0					
ANR	873278	Callee	QColor		873002	0					
ANR	873279	Identifier	QColor		873002	0					
ANR	873280	ArgumentList	Qt :: white		873002	1					
ANR	873281	Argument	Qt :: white		873002	0					
ANR	873282	Identifier	Qt :: white		873002	0					
ANR	873283	Identifier	rgb		873002	1					
ANR	873284	ArgumentList			873002	1					
ANR	873285	ExpressionStatement	"image . setColor ( 1 , QColor ( Qt :: black ) . rgb ( ) )"	351:8:12997:13039	873002	2	True				
ANR	873286	CallExpression	"image . setColor ( 1 , QColor ( Qt :: black ) . rgb ( ) )"		873002	0					
ANR	873287	Callee	image . setColor		873002	0					
ANR	873288	MemberAccess	image . setColor		873002	0					
ANR	873289	Identifier	image		873002	0					
ANR	873290	Identifier	setColor		873002	1					
ANR	873291	ArgumentList	1		873002	1					
ANR	873292	Argument	1		873002	0					
ANR	873293	PrimaryExpression	1		873002	0					
ANR	873294	Argument	QColor ( Qt :: black ) . rgb ( )		873002	1					
ANR	873295	CallExpression	QColor ( Qt :: black ) . rgb ( )		873002	0					
ANR	873296	Callee	QColor ( Qt :: black ) . rgb		873002	0					
ANR	873297	MemberAccess	QColor ( Qt :: black ) . rgb		873002	0					
ANR	873298	CallExpression	QColor ( Qt :: black )		873002	0					
ANR	873299	Callee	QColor		873002	0					
ANR	873300	Identifier	QColor		873002	0					
ANR	873301	ArgumentList	Qt :: black		873002	1					
ANR	873302	Argument	Qt :: black		873002	0					
ANR	873303	Identifier	Qt :: black		873002	0					
ANR	873304	Identifier	rgb		873002	1					
ANR	873305	ArgumentList			873002	1					
ANR	873306	ReturnStatement	return image ;	354:4:13052:13064	873002	6	True				
ANR	873307	Identifier	image		873002	0					
ANR	873308	ReturnType	QImage		873002	1					
ANR	873309	Identifier	SNIProxy :: convertFromNative		873002	2					
ANR	873310	ParameterList	xcb_image_t * xcbImage		873002	3					
ANR	873311	Parameter	xcb_image_t * xcbImage	299:35:11393:11413	873002	0	True				
ANR	873312	ParameterType	xcb_image_t *		873002	0					
ANR	873313	Identifier	xcbImage		873002	1					
ANR	873314	CFGEntryNode	ENTRY		873002		True				
ANR	873315	CFGExitNode	EXIT		873002		True				
ANR	873316	Symbol	xcbImage -> bpp		873002						
ANR	873317	Symbol	image . createHeuristicMask		873002						
ANR	873318	Symbol	QImage :: Format_RGB32		873002						
ANR	873319	Symbol	QImage :: Format_MonoLSB		873002						
ANR	873320	Symbol	QImage :: Format_ARGB32_Premultiplied		873002						
ANR	873321	Symbol	xcbImage		873002						
ANR	873322	Symbol	xcbImage -> size		873002						
ANR	873323	Symbol	Qt :: black		873002						
ANR	873324	Symbol	QColor		873002						
ANR	873325	Symbol	QColor ( Qt :: black ) . rgb		873002						
ANR	873326	Symbol	QImage :: Format_Invalid		873002						
ANR	873327	Symbol	* xcbImage		873002						
ANR	873328	Symbol	qRgba		873002						
ANR	873329	Symbol	QImage :: Format_RGB16		873002						
ANR	873330	Symbol	p . toImage		873002						
ANR	873331	Symbol	mask		873002						
ANR	873332	Symbol	image		873002						
ANR	873333	Symbol	b		873002						
ANR	873334	Symbol	g		873002						
ANR	873335	Symbol	QPixmap :: fromImage		873002						
ANR	873336	Symbol	format		873002						
ANR	873337	Symbol	image . isNull		873002						
ANR	873338	Symbol	QColor ( Qt :: white ) . rgb		873002						
ANR	873339	Symbol	i		873002						
ANR	873340	Symbol	m		873002						
ANR	873341	Symbol	p		873002						
ANR	873342	Symbol	r		873002						
ANR	873343	Symbol	* i		873002						
ANR	873344	Symbol	pixels		873002						
ANR	873345	Symbol	* pixels		873002						
ANR	873346	Symbol	image . format		873002						
ANR	873347	Symbol	QImage		873002						
ANR	873348	Symbol	xcbImage -> depth		873002						
ANR	873349	Symbol	Qt :: white		873002						
ANR	873350	Function	SNIProxy :: Category	359:0:13105:13190							
ANR	873351	FunctionDef	SNIProxy :: Category ()		873350	0					
ANR	873352	CompoundStatement		360:0:13140:13190	873350	0					
ANR	873353	ReturnStatement	"return QStringLiteral ( ""ApplicationStatus"" ) ;"	361:4:13146:13188	873350	0	True				
ANR	873354	CallExpression	"QStringLiteral ( ""ApplicationStatus"" )"		873350	0					
ANR	873355	Callee	QStringLiteral		873350	0					
ANR	873356	Identifier	QStringLiteral		873350	0					
ANR	873357	ArgumentList	"""ApplicationStatus"""		873350	1					
ANR	873358	Argument	"""ApplicationStatus"""		873350	0					
ANR	873359	PrimaryExpression	"""ApplicationStatus"""		873350	0					
ANR	873360	ReturnType	QString		873350	1					
ANR	873361	Identifier	SNIProxy :: Category		873350	2					
ANR	873362	ParameterList			873350	3					
ANR	873363	CFGEntryNode	ENTRY		873350		True				
ANR	873364	CFGExitNode	EXIT		873350		True				
ANR	873365	Symbol	QStringLiteral		873350						
ANR	873366	Function	SNIProxy :: Id	364:0:13193:13432							
ANR	873367	FunctionDef	SNIProxy :: Id ()		873366	0					
ANR	873368	CompoundStatement		365:0:13222:13432	873366	0					
ANR	873369	Statement	const	366:4:13228:13232	873366	0	True				
ANR	873370	Statement	auto	366:10:13234:13237	873366	1	True				
ANR	873371	ExpressionStatement	title = Title ( )	366:15:13239:13254	873366	2	True				
ANR	873372	AssignmentExpression	title = Title ( )		873366	0		=			
ANR	873373	Identifier	title		873366	0					
ANR	873374	CallExpression	Title ( )		873366	1					
ANR	873375	Callee	Title		873366	0					
ANR	873376	Identifier	Title		873366	0					
ANR	873377	ArgumentList			873366	1					
ANR	873378	IfStatement	if ( title . isEmpty ( ) )		873366	3					
ANR	873379	Condition	title . isEmpty ( )	368:8:13345:13359	873366	0	True				
ANR	873380	CallExpression	title . isEmpty ( )		873366	0					
ANR	873381	Callee	title . isEmpty		873366	0					
ANR	873382	MemberAccess	title . isEmpty		873366	0					
ANR	873383	Identifier	title		873366	0					
ANR	873384	Identifier	isEmpty		873366	1					
ANR	873385	ArgumentList			873366	1					
ANR	873386	CompoundStatement		4:25:139:139	873366	1					
ANR	873387	ReturnStatement	return QString :: number ( m_windowId ) ;	369:8:13372:13406	873366	0	True				
ANR	873388	CallExpression	QString :: number ( m_windowId )		873366	0					
ANR	873389	Callee	QString :: number		873366	0					
ANR	873390	Identifier	QString :: number		873366	0					
ANR	873391	ArgumentList	m_windowId		873366	1					
ANR	873392	Argument	m_windowId		873366	0					
ANR	873393	Identifier	m_windowId		873366	0					
ANR	873394	ReturnStatement	return title ;	371:4:13418:13430	873366	4	True				
ANR	873395	Identifier	title		873366	0					
ANR	873396	ReturnType	QString		873366	1					
ANR	873397	Identifier	SNIProxy :: Id		873366	2					
ANR	873398	ParameterList			873366	3					
ANR	873399	CFGEntryNode	ENTRY		873366		True				
ANR	873400	CFGExitNode	EXIT		873366		True				
ANR	873401	Symbol	title . isEmpty		873366						
ANR	873402	Symbol	m_windowId		873366						
ANR	873403	Symbol	Title		873366						
ANR	873404	Symbol	title		873366						
ANR	873405	Symbol	QString :: number		873366						
ANR	873406	Function	SNIProxy :: IconPixmap	374:0:13435:13579							
ANR	873407	FunctionDef	SNIProxy :: IconPixmap ()		873406	0					
ANR	873408	CompoundStatement		375:0:13481:13579	873406	0					
ANR	873409	IdentifierDeclStatement	KDbusImageStruct dbusImage ( m_pixmap . toImage ( ) ) ;	376:4:13487:13533	873406	0	True				
ANR	873410	IdentifierDecl	dbusImage ( m_pixmap . toImage ( ) )		873406	0					
ANR	873411	IdentifierDeclType	KDbusImageStruct		873406	0					
ANR	873412	Identifier	dbusImage		873406	1					
ANR	873413	CallExpression	m_pixmap . toImage ( )		873406	2					
ANR	873414	Callee	m_pixmap . toImage		873406	0					
ANR	873415	MemberAccess	m_pixmap . toImage		873406	0					
ANR	873416	Identifier	m_pixmap		873406	0					
ANR	873417	Identifier	toImage		873406	1					
ANR	873418	ArgumentList			873406	1					
ANR	873419	ReturnStatement	return KDbusImageVector ( ) << dbusImage ;	377:4:13539:13577	873406	1	True				
ANR	873420	ShiftExpression	KDbusImageVector ( ) << dbusImage		873406	0		<<			
ANR	873421	CallExpression	KDbusImageVector ( )		873406	0					
ANR	873422	Callee	KDbusImageVector		873406	0					
ANR	873423	Identifier	KDbusImageVector		873406	0					
ANR	873424	ArgumentList			873406	1					
ANR	873425	Identifier	dbusImage		873406	1					
ANR	873426	ReturnType	KDbusImageVector		873406	1					
ANR	873427	Identifier	SNIProxy :: IconPixmap		873406	2					
ANR	873428	ParameterList			873406	3					
ANR	873429	CFGEntryNode	ENTRY		873406		True				
ANR	873430	CFGExitNode	EXIT		873406		True				
ANR	873431	Symbol	m_pixmap		873406						
ANR	873432	Symbol	dbusImage		873406						
ANR	873433	Symbol	KDbusImageVector		873406						
ANR	873434	Function	SNIProxy :: ItemIsMenu	380:0:13582:13636							
ANR	873435	FunctionDef	SNIProxy :: ItemIsMenu ()		873434	0					
ANR	873436	CompoundStatement		381:0:13616:13636	873434	0					
ANR	873437	ReturnStatement	return false ;	382:4:13622:13634	873434	0	True				
ANR	873438	Identifier	false		873434	0					
ANR	873439	ReturnType	bool		873434	1					
ANR	873440	Identifier	SNIProxy :: ItemIsMenu		873434	2					
ANR	873441	ParameterList			873434	3					
ANR	873442	CFGEntryNode	ENTRY		873434		True				
ANR	873443	CFGExitNode	EXIT		873434		True				
ANR	873444	Symbol	false		873434						
ANR	873445	Function	SNIProxy :: Status	385:0:13639:13711							
ANR	873446	FunctionDef	SNIProxy :: Status ()		873445	0					
ANR	873447	CompoundStatement		386:0:13672:13711	873445	0					
ANR	873448	ReturnStatement	"return QStringLiteral ( ""Active"" ) ;"	387:4:13678:13709	873445	0	True				
ANR	873449	CallExpression	"QStringLiteral ( ""Active"" )"		873445	0					
ANR	873450	Callee	QStringLiteral		873445	0					
ANR	873451	Identifier	QStringLiteral		873445	0					
ANR	873452	ArgumentList	"""Active"""		873445	1					
ANR	873453	Argument	"""Active"""		873445	0					
ANR	873454	PrimaryExpression	"""Active"""		873445	0					
ANR	873455	ReturnType	QString		873445	1					
ANR	873456	Identifier	SNIProxy :: Status		873445	2					
ANR	873457	ParameterList			873445	3					
ANR	873458	CFGEntryNode	ENTRY		873445		True				
ANR	873459	CFGExitNode	EXIT		873445		True				
ANR	873460	Symbol	QStringLiteral		873445						
ANR	873461	Function	SNIProxy :: Title	390:0:13714:13824							
ANR	873462	FunctionDef	SNIProxy :: Title ()		873461	0					
ANR	873463	CompoundStatement		391:0:13746:13824	873461	0					
ANR	873464	IdentifierDeclStatement	"KWindowInfo window ( m_windowId , NET :: WMName ) ;"	392:4:13752:13796	873461	0	True				
ANR	873465	IdentifierDecl	"window ( m_windowId , NET :: WMName )"		873461	0					
ANR	873466	IdentifierDeclType	KWindowInfo		873461	0					
ANR	873467	Identifier	window		873461	1					
ANR	873468	Expression	"m_windowId , NET :: WMName"		873461	2					
ANR	873469	Identifier	m_windowId		873461	0					
ANR	873470	Identifier	NET :: WMName		873461	1					
ANR	873471	ReturnStatement	return window . name ( ) ;	393:4:13802:13822	873461	1	True				
ANR	873472	CallExpression	window . name ( )		873461	0					
ANR	873473	Callee	window . name		873461	0					
ANR	873474	MemberAccess	window . name		873461	0					
ANR	873475	Identifier	window		873461	0					
ANR	873476	Identifier	name		873461	1					
ANR	873477	ArgumentList			873461	1					
ANR	873478	ReturnType	QString		873461	1					
ANR	873479	Identifier	SNIProxy :: Title		873461	2					
ANR	873480	ParameterList			873461	3					
ANR	873481	CFGEntryNode	ENTRY		873461		True				
ANR	873482	CFGExitNode	EXIT		873461		True				
ANR	873483	Symbol	window . name		873461						
ANR	873484	Symbol	window		873461						
ANR	873485	Function	SNIProxy :: WindowId	396:0:13827:13883							
ANR	873486	FunctionDef	SNIProxy :: WindowId ()		873485	0					
ANR	873487	CompoundStatement		397:0:13858:13883	873485	0					
ANR	873488	ReturnStatement	return m_windowId ;	398:4:13864:13881	873485	0	True				
ANR	873489	Identifier	m_windowId		873485	0					
ANR	873490	ReturnType	int		873485	1					
ANR	873491	Identifier	SNIProxy :: WindowId		873485	2					
ANR	873492	ParameterList			873485	3					
ANR	873493	CFGEntryNode	ENTRY		873485		True				
ANR	873494	CFGExitNode	EXIT		873485		True				
ANR	873495	Symbol	m_windowId		873485						
ANR	873496	Function	SNIProxy :: Activate	403:0:13922:14003							
ANR	873497	FunctionDef	"SNIProxy :: Activate (int x , int y)"		873496	0					
ANR	873498	CompoundStatement		404:0:13960:14003	873496	0					
ANR	873499	ExpressionStatement	"sendClick ( XCB_BUTTON_INDEX_1 , x , y )"	405:4:13966:14001	873496	0	True				
ANR	873500	CallExpression	"sendClick ( XCB_BUTTON_INDEX_1 , x , y )"		873496	0					
ANR	873501	Callee	sendClick		873496	0					
ANR	873502	Identifier	sendClick		873496	0					
ANR	873503	ArgumentList	XCB_BUTTON_INDEX_1		873496	1					
ANR	873504	Argument	XCB_BUTTON_INDEX_1		873496	0					
ANR	873505	Identifier	XCB_BUTTON_INDEX_1		873496	0					
ANR	873506	Argument	x		873496	1					
ANR	873507	Identifier	x		873496	0					
ANR	873508	Argument	y		873496	2					
ANR	873509	Identifier	y		873496	0					
ANR	873510	ReturnType	void		873496	1					
ANR	873511	Identifier	SNIProxy :: Activate		873496	2					
ANR	873512	ParameterList	"int x , int y"		873496	3					
ANR	873513	Parameter	int x	403:24:13946:13950	873496	0	True				
ANR	873514	ParameterType	int		873496	0					
ANR	873515	Identifier	x		873496	1					
ANR	873516	Parameter	int y	403:31:13953:13957	873496	1	True				
ANR	873517	ParameterType	int		873496	0					
ANR	873518	Identifier	y		873496	1					
ANR	873519	CFGEntryNode	ENTRY		873496		True				
ANR	873520	CFGExitNode	EXIT		873496		True				
ANR	873521	Symbol	XCB_BUTTON_INDEX_1		873496						
ANR	873522	Symbol	x		873496						
ANR	873523	Symbol	y		873496						
ANR	873524	Function	SNIProxy :: SecondaryActivate	408:0:14006:14096							
ANR	873525	FunctionDef	"SNIProxy :: SecondaryActivate (int x , int y)"		873524	0					
ANR	873526	CompoundStatement		409:0:14053:14096	873524	0					
ANR	873527	ExpressionStatement	"sendClick ( XCB_BUTTON_INDEX_2 , x , y )"	410:4:14059:14094	873524	0	True				
ANR	873528	CallExpression	"sendClick ( XCB_BUTTON_INDEX_2 , x , y )"		873524	0					
ANR	873529	Callee	sendClick		873524	0					
ANR	873530	Identifier	sendClick		873524	0					
ANR	873531	ArgumentList	XCB_BUTTON_INDEX_2		873524	1					
ANR	873532	Argument	XCB_BUTTON_INDEX_2		873524	0					
ANR	873533	Identifier	XCB_BUTTON_INDEX_2		873524	0					
ANR	873534	Argument	x		873524	1					
ANR	873535	Identifier	x		873524	0					
ANR	873536	Argument	y		873524	2					
ANR	873537	Identifier	y		873524	0					
ANR	873538	ReturnType	void		873524	1					
ANR	873539	Identifier	SNIProxy :: SecondaryActivate		873524	2					
ANR	873540	ParameterList	"int x , int y"		873524	3					
ANR	873541	Parameter	int x	408:33:14039:14043	873524	0	True				
ANR	873542	ParameterType	int		873524	0					
ANR	873543	Identifier	x		873524	1					
ANR	873544	Parameter	int y	408:40:14046:14050	873524	1	True				
ANR	873545	ParameterType	int		873524	0					
ANR	873546	Identifier	y		873524	1					
ANR	873547	CFGEntryNode	ENTRY		873524		True				
ANR	873548	CFGExitNode	EXIT		873524		True				
ANR	873549	Symbol	x		873524						
ANR	873550	Symbol	y		873524						
ANR	873551	Symbol	XCB_BUTTON_INDEX_2		873524						
ANR	873552	Function	SNIProxy :: ContextMenu	413:0:14099:14183							
ANR	873553	FunctionDef	"SNIProxy :: ContextMenu (int x , int y)"		873552	0					
ANR	873554	CompoundStatement		414:0:14140:14183	873552	0					
ANR	873555	ExpressionStatement	"sendClick ( XCB_BUTTON_INDEX_3 , x , y )"	415:4:14146:14181	873552	0	True				
ANR	873556	CallExpression	"sendClick ( XCB_BUTTON_INDEX_3 , x , y )"		873552	0					
ANR	873557	Callee	sendClick		873552	0					
ANR	873558	Identifier	sendClick		873552	0					
ANR	873559	ArgumentList	XCB_BUTTON_INDEX_3		873552	1					
ANR	873560	Argument	XCB_BUTTON_INDEX_3		873552	0					
ANR	873561	Identifier	XCB_BUTTON_INDEX_3		873552	0					
ANR	873562	Argument	x		873552	1					
ANR	873563	Identifier	x		873552	0					
ANR	873564	Argument	y		873552	2					
ANR	873565	Identifier	y		873552	0					
ANR	873566	ReturnType	void		873552	1					
ANR	873567	Identifier	SNIProxy :: ContextMenu		873552	2					
ANR	873568	ParameterList	"int x , int y"		873552	3					
ANR	873569	Parameter	int x	413:27:14126:14130	873552	0	True				
ANR	873570	ParameterType	int		873552	0					
ANR	873571	Identifier	x		873552	1					
ANR	873572	Parameter	int y	413:34:14133:14137	873552	1	True				
ANR	873573	ParameterType	int		873552	0					
ANR	873574	Identifier	y		873552	1					
ANR	873575	CFGEntryNode	ENTRY		873552		True				
ANR	873576	CFGExitNode	EXIT		873552		True				
ANR	873577	Symbol	x		873552						
ANR	873578	Symbol	XCB_BUTTON_INDEX_3		873552						
ANR	873579	Symbol	y		873552						
ANR	873580	Function	SNIProxy :: Scroll	418:0:14186:14440							
ANR	873581	FunctionDef	"SNIProxy :: Scroll (int delta , const QString & orientation)"		873580	0					
ANR	873582	CompoundStatement		419:0:14247:14440	873580	0					
ANR	873583	IfStatement	"if ( orientation == QLatin1String ( ""vertical"" ) )"		873580	0					
ANR	873584	Condition	"orientation == QLatin1String ( ""vertical"" )"	420:8:14257:14296	873580	0	True				
ANR	873585	EqualityExpression	"orientation == QLatin1String ( ""vertical"" )"		873580	0		==			
ANR	873586	Identifier	orientation		873580	0					
ANR	873587	CallExpression	"QLatin1String ( ""vertical"" )"		873580	1					
ANR	873588	Callee	QLatin1String		873580	0					
ANR	873589	Identifier	QLatin1String		873580	0					
ANR	873590	ArgumentList	"""vertical"""		873580	1					
ANR	873591	Argument	"""vertical"""		873580	0					
ANR	873592	PrimaryExpression	"""vertical"""		873580	0					
ANR	873593	CompoundStatement		2:50:51:51	873580	1					
ANR	873594	ExpressionStatement	"sendClick ( delta > 0 ? XCB_BUTTON_INDEX_4 : XCB_BUTTON_INDEX_5 , 0 , 0 )"	421:8:14309:14376	873580	0	True				
ANR	873595	CallExpression	"sendClick ( delta > 0 ? XCB_BUTTON_INDEX_4 : XCB_BUTTON_INDEX_5 , 0 , 0 )"		873580	0					
ANR	873596	Callee	sendClick		873580	0					
ANR	873597	Identifier	sendClick		873580	0					
ANR	873598	ArgumentList	delta > 0 ? XCB_BUTTON_INDEX_4 : XCB_BUTTON_INDEX_5		873580	1					
ANR	873599	Argument	delta > 0 ? XCB_BUTTON_INDEX_4 : XCB_BUTTON_INDEX_5		873580	0					
ANR	873600	ConditionalExpression	delta > 0 ? XCB_BUTTON_INDEX_4 : XCB_BUTTON_INDEX_5		873580	0					
ANR	873601	Condition	delta > 0		873580	0					
ANR	873602	RelationalExpression	delta > 0		873580	0		>			
ANR	873603	Identifier	delta		873580	0					
ANR	873604	PrimaryExpression	0		873580	1					
ANR	873605	Identifier	XCB_BUTTON_INDEX_4		873580	1					
ANR	873606	Identifier	XCB_BUTTON_INDEX_5		873580	2					
ANR	873607	Argument	0		873580	1					
ANR	873608	PrimaryExpression	0		873580	0					
ANR	873609	Argument	0		873580	2					
ANR	873610	PrimaryExpression	0		873580	0					
ANR	873611	ElseStatement	else		873580	0					
ANR	873612	CompoundStatement		4:11:141:141	873580	0					
ANR	873613	ExpressionStatement	"sendClick ( delta > 0 ? 6 : 7 , 0 , 0 )"	423:8:14399:14432	873580	0	True				
ANR	873614	CallExpression	"sendClick ( delta > 0 ? 6 : 7 , 0 , 0 )"		873580	0					
ANR	873615	Callee	sendClick		873580	0					
ANR	873616	Identifier	sendClick		873580	0					
ANR	873617	ArgumentList	delta > 0 ? 6 : 7		873580	1					
ANR	873618	Argument	delta > 0 ? 6 : 7		873580	0					
ANR	873619	ConditionalExpression	delta > 0 ? 6 : 7		873580	0					
ANR	873620	Condition	delta > 0		873580	0					
ANR	873621	RelationalExpression	delta > 0		873580	0		>			
ANR	873622	Identifier	delta		873580	0					
ANR	873623	PrimaryExpression	0		873580	1					
ANR	873624	PrimaryExpression	6		873580	1					
ANR	873625	PrimaryExpression	7		873580	2					
ANR	873626	Argument	0		873580	1					
ANR	873627	PrimaryExpression	0		873580	0					
ANR	873628	Argument	0		873580	2					
ANR	873629	PrimaryExpression	0		873580	0					
ANR	873630	ReturnType	void		873580	1					
ANR	873631	Identifier	SNIProxy :: Scroll		873580	2					
ANR	873632	ParameterList	"int delta , const QString & orientation"		873580	3					
ANR	873633	Parameter	int delta	418:22:14208:14216	873580	0	True				
ANR	873634	ParameterType	int		873580	0					
ANR	873635	Identifier	delta		873580	1					
ANR	873636	Parameter	const QString & orientation	418:33:14219:14244	873580	1	True				
ANR	873637	ParameterType	const QString &		873580	0					
ANR	873638	Identifier	orientation		873580	1					
ANR	873639	CFGEntryNode	ENTRY		873580		True				
ANR	873640	CFGExitNode	EXIT		873580		True				
ANR	873641	Symbol	QLatin1String		873580						
ANR	873642	Symbol	orientation		873580						
ANR	873643	Symbol	delta		873580						
ANR	873644	Symbol	XCB_BUTTON_INDEX_5		873580						
ANR	873645	Symbol	XCB_BUTTON_INDEX_4		873580						
ANR	873646	Function	SNIProxy :: sendClick	427:0:14443:18159							
ANR	873647	FunctionDef	"SNIProxy :: sendClick (uint8_t mouseButton , int x , int y)"		873646	0					
ANR	873648	CompoundStatement		428:0:14503:18159	873646	0					
ANR	873649	ExpressionStatement	"qCDebug ( SNIPROXY ) << ""Received click"" << mouseButton << ""with passed x*y"" << x << y"	437:4:14980:15063	873646	0	True				
ANR	873650	ShiftExpression	"qCDebug ( SNIPROXY ) << ""Received click"" << mouseButton << ""with passed x*y"" << x << y"		873646	0		<<			
ANR	873651	CallExpression	qCDebug ( SNIPROXY )		873646	0					
ANR	873652	Callee	qCDebug		873646	0					
ANR	873653	Identifier	qCDebug		873646	0					
ANR	873654	ArgumentList	SNIPROXY		873646	1					
ANR	873655	Argument	SNIPROXY		873646	0					
ANR	873656	Identifier	SNIPROXY		873646	0					
ANR	873657	ShiftExpression	"""Received click"" << mouseButton << ""with passed x*y"" << x << y"		873646	1		<<			
ANR	873658	PrimaryExpression	"""Received click"""		873646	0					
ANR	873659	ShiftExpression	"mouseButton << ""with passed x*y"" << x << y"		873646	1		<<			
ANR	873660	Identifier	mouseButton		873646	0					
ANR	873661	ShiftExpression	"""with passed x*y"" << x << y"		873646	1		<<			
ANR	873662	PrimaryExpression	"""with passed x*y"""		873646	0					
ANR	873663	ShiftExpression	x << y		873646	1		<<			
ANR	873664	Identifier	x		873646	0					
ANR	873665	Identifier	y		873646	1					
ANR	873666	Statement	auto	439:4:15070:15073	873646	1	True				
ANR	873667	ExpressionStatement	c = QX11Info :: connection ( )	439:9:15075:15101	873646	2	True				
ANR	873668	AssignmentExpression	c = QX11Info :: connection ( )		873646	0		=			
ANR	873669	Identifier	c		873646	0					
ANR	873670	CallExpression	QX11Info :: connection ( )		873646	1					
ANR	873671	Callee	QX11Info :: connection		873646	0					
ANR	873672	Identifier	QX11Info :: connection		873646	0					
ANR	873673	ArgumentList			873646	1					
ANR	873674	Statement	auto	441:4:15108:15111	873646	3	True				
ANR	873675	ExpressionStatement	"cookieSize = xcb_get_geometry ( c , m_windowId )"	441:9:15113:15157	873646	4	True				
ANR	873676	AssignmentExpression	"cookieSize = xcb_get_geometry ( c , m_windowId )"		873646	0		=			
ANR	873677	Identifier	cookieSize		873646	0					
ANR	873678	CallExpression	"xcb_get_geometry ( c , m_windowId )"		873646	1					
ANR	873679	Callee	xcb_get_geometry		873646	0					
ANR	873680	Identifier	xcb_get_geometry		873646	0					
ANR	873681	ArgumentList	c		873646	1					
ANR	873682	Argument	c		873646	0					
ANR	873683	Identifier	c		873646	0					
ANR	873684	Argument	m_windowId		873646	1					
ANR	873685	Identifier	m_windowId		873646	0					
ANR	873686	IdentifierDeclStatement	"QScopedPointer < xcb_get_geometry_reply_t , QScopedPointerPodDeleter > clientGeom ( xcb_get_geometry_reply ( c , cookieSize , Q_NULLPTR ) ) ;"	442:4:15163:15298	873646	5	True				
ANR	873687	IdentifierDecl	"clientGeom ( xcb_get_geometry_reply ( c , cookieSize , Q_NULLPTR ) )"		873646	0					
ANR	873688	IdentifierDeclType	"QScopedPointer < xcb_get_geometry_reply_t , QScopedPointerPodDeleter >"		873646	0					
ANR	873689	Identifier	clientGeom		873646	1					
ANR	873690	CallExpression	"xcb_get_geometry_reply ( c , cookieSize , Q_NULLPTR )"		873646	2					
ANR	873691	Callee	xcb_get_geometry_reply		873646	0					
ANR	873692	Identifier	xcb_get_geometry_reply		873646	0					
ANR	873693	ArgumentList	c		873646	1					
ANR	873694	Argument	c		873646	0					
ANR	873695	Identifier	c		873646	0					
ANR	873696	Argument	cookieSize		873646	1					
ANR	873697	Identifier	cookieSize		873646	0					
ANR	873698	Argument	Q_NULLPTR		873646	2					
ANR	873699	Identifier	Q_NULLPTR		873646	0					
ANR	873700	IfStatement	if ( ! clientGeom )		873646	6					
ANR	873701	Condition	! clientGeom	445:8:15309:15319	873646	0	True				
ANR	873702	UnaryOperationExpression	! clientGeom		873646	0					
ANR	873703	UnaryOperator	!		873646	0					
ANR	873704	Identifier	clientGeom		873646	1					
ANR	873705	CompoundStatement		18:21:818:818	873646	1					
ANR	873706	ReturnStatement	return ;	446:8:15332:15338	873646	0	True				
ANR	873707	Statement	auto	449:4:15351:15354	873646	7	True				
ANR	873708	ExpressionStatement	"cookie = xcb_query_pointer ( c , m_windowId )"	449:9:15356:15397	873646	8	True				
ANR	873709	AssignmentExpression	"cookie = xcb_query_pointer ( c , m_windowId )"		873646	0		=			
ANR	873710	Identifier	cookie		873646	0					
ANR	873711	CallExpression	"xcb_query_pointer ( c , m_windowId )"		873646	1					
ANR	873712	Callee	xcb_query_pointer		873646	0					
ANR	873713	Identifier	xcb_query_pointer		873646	0					
ANR	873714	ArgumentList	c		873646	1					
ANR	873715	Argument	c		873646	0					
ANR	873716	Identifier	c		873646	0					
ANR	873717	Argument	m_windowId		873646	1					
ANR	873718	Identifier	m_windowId		873646	0					
ANR	873719	IdentifierDeclStatement	"QScopedPointer < xcb_query_pointer_reply_t , QScopedPointerPodDeleter > pointer ( xcb_query_pointer_reply ( c , cookie , Q_NULLPTR ) ) ;"	450:4:15403:15533	873646	9	True				
ANR	873720	IdentifierDecl	"pointer ( xcb_query_pointer_reply ( c , cookie , Q_NULLPTR ) )"		873646	0					
ANR	873721	IdentifierDeclType	"QScopedPointer < xcb_query_pointer_reply_t , QScopedPointerPodDeleter >"		873646	0					
ANR	873722	Identifier	pointer		873646	1					
ANR	873723	CallExpression	"xcb_query_pointer_reply ( c , cookie , Q_NULLPTR )"		873646	2					
ANR	873724	Callee	xcb_query_pointer_reply		873646	0					
ANR	873725	Identifier	xcb_query_pointer_reply		873646	0					
ANR	873726	ArgumentList	c		873646	1					
ANR	873727	Argument	c		873646	0					
ANR	873728	Identifier	c		873646	0					
ANR	873729	Argument	cookie		873646	1					
ANR	873730	Identifier	cookie		873646	0					
ANR	873731	Argument	Q_NULLPTR		873646	2					
ANR	873732	Identifier	Q_NULLPTR		873646	0					
ANR	873733	IdentifierDeclStatement	"uint32_t configVals [ 2 ] = { 0 , 0 } ;"	457:4:15784:15815	873646	10	True				
ANR	873734	IdentifierDecl	"configVals [ 2 ] = { 0 , 0 }"		873646	0					
ANR	873735	IdentifierDeclType	uint32_t [ 2 ]		873646	0					
ANR	873736	Identifier	configVals		873646	1					
ANR	873737	PrimaryExpression	2		873646	2					
ANR	873738	AssignmentExpression	"configVals [ 2 ] = { 0 , 0 }"		873646	3		=			
ANR	873739	Identifier	configVals		873646	0					
ANR	873740	InitializerList	0		873646	1					
ANR	873741	PrimaryExpression	0		873646	0					
ANR	873742	PrimaryExpression	0		873646	1					
ANR	873743	IfStatement	if ( mouseButton >= XCB_BUTTON_INDEX_4 )		873646	11					
ANR	873744	Condition	mouseButton >= XCB_BUTTON_INDEX_4	458:8:15825:15857	873646	0	True				
ANR	873745	RelationalExpression	mouseButton >= XCB_BUTTON_INDEX_4		873646	0		>=			
ANR	873746	Identifier	mouseButton		873646	0					
ANR	873747	Identifier	XCB_BUTTON_INDEX_4		873646	1					
ANR	873748	CompoundStatement		31:43:1356:1356	873646	1					
ANR	873749	ExpressionStatement	configVals [ 0 ] = pointer -> root_x	460:1:15902:15933	873646	0	True				
ANR	873750	AssignmentExpression	configVals [ 0 ] = pointer -> root_x		873646	0		=			
ANR	873751	ArrayIndexing	configVals [ 0 ]		873646	0					
ANR	873752	Identifier	configVals		873646	0					
ANR	873753	PrimaryExpression	0		873646	1					
ANR	873754	PtrMemberAccess	pointer -> root_x		873646	1					
ANR	873755	Identifier	pointer		873646	0					
ANR	873756	Identifier	root_x		873646	1					
ANR	873757	ExpressionStatement	configVals [ 1 ] = pointer -> root_y	461:1:15936:15967	873646	1	True				
ANR	873758	AssignmentExpression	configVals [ 1 ] = pointer -> root_y		873646	0		=			
ANR	873759	ArrayIndexing	configVals [ 1 ]		873646	0					
ANR	873760	Identifier	configVals		873646	0					
ANR	873761	PrimaryExpression	1		873646	1					
ANR	873762	PtrMemberAccess	pointer -> root_y		873646	1					
ANR	873763	Identifier	pointer		873646	0					
ANR	873764	Identifier	root_y		873646	1					
ANR	873765	ElseStatement	else		873646	0					
ANR	873766	CompoundStatement		35:11:1476:1476	873646	0					
ANR	873767	IfStatement	if ( pointer -> root_x > x + clientGeom -> width )		873646	0					
ANR	873768	Condition	pointer -> root_x > x + clientGeom -> width	463:5:15987:16025	873646	0	True				
ANR	873769	RelationalExpression	pointer -> root_x > x + clientGeom -> width		873646	0		>			
ANR	873770	PtrMemberAccess	pointer -> root_x		873646	0					
ANR	873771	Identifier	pointer		873646	0					
ANR	873772	Identifier	root_x		873646	1					
ANR	873773	AdditiveExpression	x + clientGeom -> width		873646	1		+			
ANR	873774	Identifier	x		873646	0					
ANR	873775	PtrMemberAccess	clientGeom -> width		873646	1					
ANR	873776	Identifier	clientGeom		873646	0					
ANR	873777	Identifier	width		873646	1					
ANR	873778	ExpressionStatement	configVals [ 0 ] = pointer -> root_x - clientGeom -> width + 1	464:5:16033:16088	873646	1	True				
ANR	873779	AssignmentExpression	configVals [ 0 ] = pointer -> root_x - clientGeom -> width + 1		873646	0		=			
ANR	873780	ArrayIndexing	configVals [ 0 ]		873646	0					
ANR	873781	Identifier	configVals		873646	0					
ANR	873782	PrimaryExpression	0		873646	1					
ANR	873783	AdditiveExpression	pointer -> root_x - clientGeom -> width + 1		873646	1		-			
ANR	873784	PtrMemberAccess	pointer -> root_x		873646	0					
ANR	873785	Identifier	pointer		873646	0					
ANR	873786	Identifier	root_x		873646	1					
ANR	873787	AdditiveExpression	clientGeom -> width + 1		873646	1		+			
ANR	873788	PtrMemberAccess	clientGeom -> width		873646	0					
ANR	873789	Identifier	clientGeom		873646	0					
ANR	873790	Identifier	width		873646	1					
ANR	873791	PrimaryExpression	1		873646	1					
ANR	873792	ElseStatement	else		873646	0					
ANR	873793	ExpressionStatement	configVals [ 0 ] = static_cast < uint32_t > ( x )	466:5:16101:16141	873646	0	True				
ANR	873794	AssignmentExpression	configVals [ 0 ] = static_cast < uint32_t > ( x )		873646	0		=			
ANR	873795	ArrayIndexing	configVals [ 0 ]		873646	0					
ANR	873796	Identifier	configVals		873646	0					
ANR	873797	PrimaryExpression	0		873646	1					
ANR	873798	RelationalExpression	static_cast < uint32_t > ( x )		873646	1		<			
ANR	873799	Identifier	static_cast		873646	0					
ANR	873800	RelationalExpression	uint32_t > ( x )		873646	1		>			
ANR	873801	Identifier	uint32_t		873646	0					
ANR	873802	Identifier	x		873646	1					
ANR	873803	IfStatement	if ( pointer -> root_y > y + clientGeom -> height )		873646	1					
ANR	873804	Condition	pointer -> root_y > y + clientGeom -> height	467:5:16148:16187	873646	0	True				
ANR	873805	RelationalExpression	pointer -> root_y > y + clientGeom -> height		873646	0		>			
ANR	873806	PtrMemberAccess	pointer -> root_y		873646	0					
ANR	873807	Identifier	pointer		873646	0					
ANR	873808	Identifier	root_y		873646	1					
ANR	873809	AdditiveExpression	y + clientGeom -> height		873646	1		+			
ANR	873810	Identifier	y		873646	0					
ANR	873811	PtrMemberAccess	clientGeom -> height		873646	1					
ANR	873812	Identifier	clientGeom		873646	0					
ANR	873813	Identifier	height		873646	1					
ANR	873814	ExpressionStatement	configVals [ 1 ] = pointer -> root_y - clientGeom -> height + 1	468:5:16195:16251	873646	1	True				
ANR	873815	AssignmentExpression	configVals [ 1 ] = pointer -> root_y - clientGeom -> height + 1		873646	0		=			
ANR	873816	ArrayIndexing	configVals [ 1 ]		873646	0					
ANR	873817	Identifier	configVals		873646	0					
ANR	873818	PrimaryExpression	1		873646	1					
ANR	873819	AdditiveExpression	pointer -> root_y - clientGeom -> height + 1		873646	1		-			
ANR	873820	PtrMemberAccess	pointer -> root_y		873646	0					
ANR	873821	Identifier	pointer		873646	0					
ANR	873822	Identifier	root_y		873646	1					
ANR	873823	AdditiveExpression	clientGeom -> height + 1		873646	1		+			
ANR	873824	PtrMemberAccess	clientGeom -> height		873646	0					
ANR	873825	Identifier	clientGeom		873646	0					
ANR	873826	Identifier	height		873646	1					
ANR	873827	PrimaryExpression	1		873646	1					
ANR	873828	ElseStatement	else		873646	0					
ANR	873829	ExpressionStatement	configVals [ 1 ] = static_cast < uint32_t > ( y )	470:5:16264:16304	873646	0	True				
ANR	873830	AssignmentExpression	configVals [ 1 ] = static_cast < uint32_t > ( y )		873646	0		=			
ANR	873831	ArrayIndexing	configVals [ 1 ]		873646	0					
ANR	873832	Identifier	configVals		873646	0					
ANR	873833	PrimaryExpression	1		873646	1					
ANR	873834	RelationalExpression	static_cast < uint32_t > ( y )		873646	1		<			
ANR	873835	Identifier	static_cast		873646	0					
ANR	873836	RelationalExpression	uint32_t > ( y )		873646	1		>			
ANR	873837	Identifier	uint32_t		873646	0					
ANR	873838	Identifier	y		873646	1					
ANR	873839	ExpressionStatement	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y , configVals )"	472:4:16316:16410	873646	12	True				
ANR	873840	CallExpression	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y , configVals )"		873646	0					
ANR	873841	Callee	xcb_configure_window		873646	0					
ANR	873842	Identifier	xcb_configure_window		873646	0					
ANR	873843	ArgumentList	c		873646	1					
ANR	873844	Argument	c		873646	0					
ANR	873845	Identifier	c		873646	0					
ANR	873846	Argument	m_containerWid		873646	1					
ANR	873847	Identifier	m_containerWid		873646	0					
ANR	873848	Argument	XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y		873646	2					
ANR	873849	InclusiveOrExpression	XCB_CONFIG_WINDOW_X | XCB_CONFIG_WINDOW_Y		873646	0		|			
ANR	873850	Identifier	XCB_CONFIG_WINDOW_X		873646	0					
ANR	873851	Identifier	XCB_CONFIG_WINDOW_Y		873646	1					
ANR	873852	Argument	configVals		873646	3					
ANR	873853	Identifier	configVals		873646	0					
ANR	873854	IdentifierDeclStatement	const uint32_t stackAboveData [ ] = { XCB_STACK_MODE_ABOVE } ;	475:4:16438:16494	873646	13	True				
ANR	873855	IdentifierDecl	stackAboveData [ ] = { XCB_STACK_MODE_ABOVE }		873646	0					
ANR	873856	IdentifierDeclType	const uint32_t [ ]		873646	0					
ANR	873857	Identifier	stackAboveData		873646	1					
ANR	873858	AssignmentExpression	stackAboveData [ ] = { XCB_STACK_MODE_ABOVE }		873646	2		=			
ANR	873859	Identifier	stackAboveData		873646	0					
ANR	873860	InitializerList	XCB_STACK_MODE_ABOVE		873646	1					
ANR	873861	Identifier	XCB_STACK_MODE_ABOVE		873646	0					
ANR	873862	ExpressionStatement	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_STACK_MODE , stackAboveData )"	476:4:16500:16585	873646	14	True				
ANR	873863	CallExpression	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_STACK_MODE , stackAboveData )"		873646	0					
ANR	873864	Callee	xcb_configure_window		873646	0					
ANR	873865	Identifier	xcb_configure_window		873646	0					
ANR	873866	ArgumentList	c		873646	1					
ANR	873867	Argument	c		873646	0					
ANR	873868	Identifier	c		873646	0					
ANR	873869	Argument	m_containerWid		873646	1					
ANR	873870	Identifier	m_containerWid		873646	0					
ANR	873871	Argument	XCB_CONFIG_WINDOW_STACK_MODE		873646	2					
ANR	873872	Identifier	XCB_CONFIG_WINDOW_STACK_MODE		873646	0					
ANR	873873	Argument	stackAboveData		873646	3					
ANR	873874	Identifier	stackAboveData		873646	0					
ANR	873875	CompoundStatement		52:4:2105:2105	873646	15					
ANR	873876	Statement	xcb_button_press_event_t	480:8:16619:16642	873646	0	True				
ANR	873877	Statement	*	480:32:16643:16643	873646	1	True				
ANR	873878	Statement	event	480:34:16645:16649	873646	2	True				
ANR	873879	Statement	=	480:40:16651:16651	873646	3	True				
ANR	873880	Statement	new	480:42:16653:16655	873646	4	True				
ANR	873881	ExpressionStatement	xcb_button_press_event_t	480:46:16657:16681	873646	5	True				
ANR	873882	Identifier	xcb_button_press_event_t		873646	0					
ANR	873883	ExpressionStatement	"memset ( event , 0x00 , sizeof ( xcb_button_press_event_t ) )"	481:8:16691:16744	873646	6	True				
ANR	873884	CallExpression	"memset ( event , 0x00 , sizeof ( xcb_button_press_event_t ) )"		873646	0					
ANR	873885	Callee	memset		873646	0					
ANR	873886	Identifier	memset		873646	0					
ANR	873887	ArgumentList	event		873646	1					
ANR	873888	Argument	event		873646	0					
ANR	873889	Identifier	event		873646	0					
ANR	873890	Argument	0x00		873646	1					
ANR	873891	PrimaryExpression	0x00		873646	0					
ANR	873892	Argument	sizeof ( xcb_button_press_event_t )		873646	2					
ANR	873893	SizeofExpression	sizeof ( xcb_button_press_event_t )		873646	0					
ANR	873894	Sizeof	sizeof		873646	0					
ANR	873895	SizeofOperand	xcb_button_press_event_t		873646	1					
ANR	873896	ExpressionStatement	event -> response_type = XCB_BUTTON_PRESS	482:8:16754:16793	873646	7	True				
ANR	873897	AssignmentExpression	event -> response_type = XCB_BUTTON_PRESS		873646	0		=			
ANR	873898	PtrMemberAccess	event -> response_type		873646	0					
ANR	873899	Identifier	event		873646	0					
ANR	873900	Identifier	response_type		873646	1					
ANR	873901	Identifier	XCB_BUTTON_PRESS		873646	1					
ANR	873902	ExpressionStatement	event -> event = m_windowId	483:8:16803:16828	873646	8	True				
ANR	873903	AssignmentExpression	event -> event = m_windowId		873646	0		=			
ANR	873904	PtrMemberAccess	event -> event		873646	0					
ANR	873905	Identifier	event		873646	0					
ANR	873906	Identifier	event		873646	1					
ANR	873907	Identifier	m_windowId		873646	1					
ANR	873908	ExpressionStatement	event -> time = QX11Info :: getTimestamp ( )	484:8:16838:16876	873646	9	True				
ANR	873909	AssignmentExpression	event -> time = QX11Info :: getTimestamp ( )		873646	0		=			
ANR	873910	PtrMemberAccess	event -> time		873646	0					
ANR	873911	Identifier	event		873646	0					
ANR	873912	Identifier	time		873646	1					
ANR	873913	CallExpression	QX11Info :: getTimestamp ( )		873646	1					
ANR	873914	Callee	QX11Info :: getTimestamp		873646	0					
ANR	873915	Identifier	QX11Info :: getTimestamp		873646	0					
ANR	873916	ArgumentList			873646	1					
ANR	873917	ExpressionStatement	event -> same_screen = 1	485:8:16886:16908	873646	10	True				
ANR	873918	AssignmentExpression	event -> same_screen = 1		873646	0		=			
ANR	873919	PtrMemberAccess	event -> same_screen		873646	0					
ANR	873920	Identifier	event		873646	0					
ANR	873921	Identifier	same_screen		873646	1					
ANR	873922	PrimaryExpression	1		873646	1					
ANR	873923	ExpressionStatement	event -> root = QX11Info :: appRootWindow ( )	486:8:16918:16957	873646	11	True				
ANR	873924	AssignmentExpression	event -> root = QX11Info :: appRootWindow ( )		873646	0		=			
ANR	873925	PtrMemberAccess	event -> root		873646	0					
ANR	873926	Identifier	event		873646	0					
ANR	873927	Identifier	root		873646	1					
ANR	873928	CallExpression	QX11Info :: appRootWindow ( )		873646	1					
ANR	873929	Callee	QX11Info :: appRootWindow		873646	0					
ANR	873930	Identifier	QX11Info :: appRootWindow		873646	0					
ANR	873931	ArgumentList			873646	1					
ANR	873932	ExpressionStatement	event -> root_x = x	487:8:16967:16984	873646	12	True				
ANR	873933	AssignmentExpression	event -> root_x = x		873646	0		=			
ANR	873934	PtrMemberAccess	event -> root_x		873646	0					
ANR	873935	Identifier	event		873646	0					
ANR	873936	Identifier	root_x		873646	1					
ANR	873937	Identifier	x		873646	1					
ANR	873938	ExpressionStatement	event -> root_y = y	488:8:16994:17011	873646	13	True				
ANR	873939	AssignmentExpression	event -> root_y = y		873646	0		=			
ANR	873940	PtrMemberAccess	event -> root_y		873646	0					
ANR	873941	Identifier	event		873646	0					
ANR	873942	Identifier	root_y		873646	1					
ANR	873943	Identifier	y		873646	1					
ANR	873944	ExpressionStatement	event -> event_x = 0	489:8:17021:17039	873646	14	True				
ANR	873945	AssignmentExpression	event -> event_x = 0		873646	0		=			
ANR	873946	PtrMemberAccess	event -> event_x		873646	0					
ANR	873947	Identifier	event		873646	0					
ANR	873948	Identifier	event_x		873646	1					
ANR	873949	PrimaryExpression	0		873646	1					
ANR	873950	ExpressionStatement	event -> event_y = 0	490:8:17049:17067	873646	15	True				
ANR	873951	AssignmentExpression	event -> event_y = 0		873646	0		=			
ANR	873952	PtrMemberAccess	event -> event_y		873646	0					
ANR	873953	Identifier	event		873646	0					
ANR	873954	Identifier	event_y		873646	1					
ANR	873955	PrimaryExpression	0		873646	1					
ANR	873956	ExpressionStatement	event -> child = 0	491:8:17077:17093	873646	16	True				
ANR	873957	AssignmentExpression	event -> child = 0		873646	0		=			
ANR	873958	PtrMemberAccess	event -> child		873646	0					
ANR	873959	Identifier	event		873646	0					
ANR	873960	Identifier	child		873646	1					
ANR	873961	PrimaryExpression	0		873646	1					
ANR	873962	ExpressionStatement	event -> state = 0	492:8:17103:17119	873646	17	True				
ANR	873963	AssignmentExpression	event -> state = 0		873646	0		=			
ANR	873964	PtrMemberAccess	event -> state		873646	0					
ANR	873965	Identifier	event		873646	0					
ANR	873966	Identifier	state		873646	1					
ANR	873967	PrimaryExpression	0		873646	1					
ANR	873968	ExpressionStatement	event -> detail = mouseButton	493:8:17129:17156	873646	18	True				
ANR	873969	AssignmentExpression	event -> detail = mouseButton		873646	0		=			
ANR	873970	PtrMemberAccess	event -> detail		873646	0					
ANR	873971	Identifier	event		873646	0					
ANR	873972	Identifier	detail		873646	1					
ANR	873973	Identifier	mouseButton		873646	1					
ANR	873974	ExpressionStatement	"xcb_send_event ( c , false , m_windowId , XCB_EVENT_MASK_BUTTON_PRESS , ( char * ) event )"	495:8:17167:17248	873646	19	True				
ANR	873975	CallExpression	"xcb_send_event ( c , false , m_windowId , XCB_EVENT_MASK_BUTTON_PRESS , ( char * ) event )"		873646	0					
ANR	873976	Callee	xcb_send_event		873646	0					
ANR	873977	Identifier	xcb_send_event		873646	0					
ANR	873978	ArgumentList	c		873646	1					
ANR	873979	Argument	c		873646	0					
ANR	873980	Identifier	c		873646	0					
ANR	873981	Argument	false		873646	1					
ANR	873982	Identifier	false		873646	0					
ANR	873983	Argument	m_windowId		873646	2					
ANR	873984	Identifier	m_windowId		873646	0					
ANR	873985	Argument	XCB_EVENT_MASK_BUTTON_PRESS		873646	3					
ANR	873986	Identifier	XCB_EVENT_MASK_BUTTON_PRESS		873646	0					
ANR	873987	Argument	( char * ) event		873646	4					
ANR	873988	CastExpression	( char * ) event		873646	0					
ANR	873989	CastTarget	char *		873646	0					
ANR	873990	Identifier	event		873646	1					
ANR	873991	Statement	delete	496:8:17258:17263	873646	20	True				
ANR	873992	ExpressionStatement	event	496:15:17265:17270	873646	21	True				
ANR	873993	Identifier	event		873646	0					
ANR	873994	CompoundStatement		73:4:2794:2794	873646	16					
ANR	873995	Statement	xcb_button_release_event_t	501:8:17308:17333	873646	0	True				
ANR	873996	Statement	*	501:34:17334:17334	873646	1	True				
ANR	873997	Statement	event	501:36:17336:17340	873646	2	True				
ANR	873998	Statement	=	501:42:17342:17342	873646	3	True				
ANR	873999	Statement	new	501:44:17344:17346	873646	4	True				
ANR	874000	ExpressionStatement	xcb_button_release_event_t	501:48:17348:17374	873646	5	True				
ANR	874001	Identifier	xcb_button_release_event_t		873646	0					
ANR	874002	ExpressionStatement	"memset ( event , 0x00 , sizeof ( xcb_button_release_event_t ) )"	502:8:17384:17439	873646	6	True				
ANR	874003	CallExpression	"memset ( event , 0x00 , sizeof ( xcb_button_release_event_t ) )"		873646	0					
ANR	874004	Callee	memset		873646	0					
ANR	874005	Identifier	memset		873646	0					
ANR	874006	ArgumentList	event		873646	1					
ANR	874007	Argument	event		873646	0					
ANR	874008	Identifier	event		873646	0					
ANR	874009	Argument	0x00		873646	1					
ANR	874010	PrimaryExpression	0x00		873646	0					
ANR	874011	Argument	sizeof ( xcb_button_release_event_t )		873646	2					
ANR	874012	SizeofExpression	sizeof ( xcb_button_release_event_t )		873646	0					
ANR	874013	Sizeof	sizeof		873646	0					
ANR	874014	SizeofOperand	xcb_button_release_event_t		873646	1					
ANR	874015	ExpressionStatement	event -> response_type = XCB_BUTTON_RELEASE	503:8:17449:17490	873646	7	True				
ANR	874016	AssignmentExpression	event -> response_type = XCB_BUTTON_RELEASE		873646	0		=			
ANR	874017	PtrMemberAccess	event -> response_type		873646	0					
ANR	874018	Identifier	event		873646	0					
ANR	874019	Identifier	response_type		873646	1					
ANR	874020	Identifier	XCB_BUTTON_RELEASE		873646	1					
ANR	874021	ExpressionStatement	event -> event = m_windowId	504:8:17500:17525	873646	8	True				
ANR	874022	AssignmentExpression	event -> event = m_windowId		873646	0		=			
ANR	874023	PtrMemberAccess	event -> event		873646	0					
ANR	874024	Identifier	event		873646	0					
ANR	874025	Identifier	event		873646	1					
ANR	874026	Identifier	m_windowId		873646	1					
ANR	874027	ExpressionStatement	event -> time = QX11Info :: getTimestamp ( )	505:8:17535:17573	873646	9	True				
ANR	874028	AssignmentExpression	event -> time = QX11Info :: getTimestamp ( )		873646	0		=			
ANR	874029	PtrMemberAccess	event -> time		873646	0					
ANR	874030	Identifier	event		873646	0					
ANR	874031	Identifier	time		873646	1					
ANR	874032	CallExpression	QX11Info :: getTimestamp ( )		873646	1					
ANR	874033	Callee	QX11Info :: getTimestamp		873646	0					
ANR	874034	Identifier	QX11Info :: getTimestamp		873646	0					
ANR	874035	ArgumentList			873646	1					
ANR	874036	ExpressionStatement	event -> same_screen = 1	506:8:17583:17605	873646	10	True				
ANR	874037	AssignmentExpression	event -> same_screen = 1		873646	0		=			
ANR	874038	PtrMemberAccess	event -> same_screen		873646	0					
ANR	874039	Identifier	event		873646	0					
ANR	874040	Identifier	same_screen		873646	1					
ANR	874041	PrimaryExpression	1		873646	1					
ANR	874042	ExpressionStatement	event -> root = QX11Info :: appRootWindow ( )	507:8:17615:17654	873646	11	True				
ANR	874043	AssignmentExpression	event -> root = QX11Info :: appRootWindow ( )		873646	0		=			
ANR	874044	PtrMemberAccess	event -> root		873646	0					
ANR	874045	Identifier	event		873646	0					
ANR	874046	Identifier	root		873646	1					
ANR	874047	CallExpression	QX11Info :: appRootWindow ( )		873646	1					
ANR	874048	Callee	QX11Info :: appRootWindow		873646	0					
ANR	874049	Identifier	QX11Info :: appRootWindow		873646	0					
ANR	874050	ArgumentList			873646	1					
ANR	874051	ExpressionStatement	event -> root_x = x	508:8:17664:17681	873646	12	True				
ANR	874052	AssignmentExpression	event -> root_x = x		873646	0		=			
ANR	874053	PtrMemberAccess	event -> root_x		873646	0					
ANR	874054	Identifier	event		873646	0					
ANR	874055	Identifier	root_x		873646	1					
ANR	874056	Identifier	x		873646	1					
ANR	874057	ExpressionStatement	event -> root_y = y	509:8:17691:17708	873646	13	True				
ANR	874058	AssignmentExpression	event -> root_y = y		873646	0		=			
ANR	874059	PtrMemberAccess	event -> root_y		873646	0					
ANR	874060	Identifier	event		873646	0					
ANR	874061	Identifier	root_y		873646	1					
ANR	874062	Identifier	y		873646	1					
ANR	874063	ExpressionStatement	event -> event_x = 0	510:8:17718:17736	873646	14	True				
ANR	874064	AssignmentExpression	event -> event_x = 0		873646	0		=			
ANR	874065	PtrMemberAccess	event -> event_x		873646	0					
ANR	874066	Identifier	event		873646	0					
ANR	874067	Identifier	event_x		873646	1					
ANR	874068	PrimaryExpression	0		873646	1					
ANR	874069	ExpressionStatement	event -> event_y = 0	511:8:17746:17764	873646	15	True				
ANR	874070	AssignmentExpression	event -> event_y = 0		873646	0		=			
ANR	874071	PtrMemberAccess	event -> event_y		873646	0					
ANR	874072	Identifier	event		873646	0					
ANR	874073	Identifier	event_y		873646	1					
ANR	874074	PrimaryExpression	0		873646	1					
ANR	874075	ExpressionStatement	event -> child = 0	512:8:17774:17790	873646	16	True				
ANR	874076	AssignmentExpression	event -> child = 0		873646	0		=			
ANR	874077	PtrMemberAccess	event -> child		873646	0					
ANR	874078	Identifier	event		873646	0					
ANR	874079	Identifier	child		873646	1					
ANR	874080	PrimaryExpression	0		873646	1					
ANR	874081	ExpressionStatement	event -> state = 0	513:8:17800:17816	873646	17	True				
ANR	874082	AssignmentExpression	event -> state = 0		873646	0		=			
ANR	874083	PtrMemberAccess	event -> state		873646	0					
ANR	874084	Identifier	event		873646	0					
ANR	874085	Identifier	state		873646	1					
ANR	874086	PrimaryExpression	0		873646	1					
ANR	874087	ExpressionStatement	event -> detail = mouseButton	514:8:17826:17853	873646	18	True				
ANR	874088	AssignmentExpression	event -> detail = mouseButton		873646	0		=			
ANR	874089	PtrMemberAccess	event -> detail		873646	0					
ANR	874090	Identifier	event		873646	0					
ANR	874091	Identifier	detail		873646	1					
ANR	874092	Identifier	mouseButton		873646	1					
ANR	874093	ExpressionStatement	"xcb_send_event ( c , false , m_windowId , XCB_EVENT_MASK_BUTTON_RELEASE , ( char * ) event )"	516:8:17864:17947	873646	19	True				
ANR	874094	CallExpression	"xcb_send_event ( c , false , m_windowId , XCB_EVENT_MASK_BUTTON_RELEASE , ( char * ) event )"		873646	0					
ANR	874095	Callee	xcb_send_event		873646	0					
ANR	874096	Identifier	xcb_send_event		873646	0					
ANR	874097	ArgumentList	c		873646	1					
ANR	874098	Argument	c		873646	0					
ANR	874099	Identifier	c		873646	0					
ANR	874100	Argument	false		873646	1					
ANR	874101	Identifier	false		873646	0					
ANR	874102	Argument	m_windowId		873646	2					
ANR	874103	Identifier	m_windowId		873646	0					
ANR	874104	Argument	XCB_EVENT_MASK_BUTTON_RELEASE		873646	3					
ANR	874105	Identifier	XCB_EVENT_MASK_BUTTON_RELEASE		873646	0					
ANR	874106	Argument	( char * ) event		873646	4					
ANR	874107	CastExpression	( char * ) event		873646	0					
ANR	874108	CastTarget	char *		873646	0					
ANR	874109	Identifier	event		873646	1					
ANR	874110	Statement	delete	517:8:17957:17962	873646	20	True				
ANR	874111	ExpressionStatement	event	517:15:17964:17969	873646	21	True				
ANR	874112	Identifier	event		873646	0					
ANR	874113	IdentifierDeclStatement	const uint32_t stackBelowData [ ] = { XCB_STACK_MODE_BELOW } ;	521:4:18003:18059	873646	17	True				
ANR	874114	IdentifierDecl	stackBelowData [ ] = { XCB_STACK_MODE_BELOW }		873646	0					
ANR	874115	IdentifierDeclType	const uint32_t [ ]		873646	0					
ANR	874116	Identifier	stackBelowData		873646	1					
ANR	874117	AssignmentExpression	stackBelowData [ ] = { XCB_STACK_MODE_BELOW }		873646	2		=			
ANR	874118	Identifier	stackBelowData		873646	0					
ANR	874119	InitializerList	XCB_STACK_MODE_BELOW		873646	1					
ANR	874120	Identifier	XCB_STACK_MODE_BELOW		873646	0					
ANR	874121	ExpressionStatement	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_STACK_MODE , stackBelowData )"	522:4:18065:18150	873646	18	True				
ANR	874122	CallExpression	"xcb_configure_window ( c , m_containerWid , XCB_CONFIG_WINDOW_STACK_MODE , stackBelowData )"		873646	0					
ANR	874123	Callee	xcb_configure_window		873646	0					
ANR	874124	Identifier	xcb_configure_window		873646	0					
ANR	874125	ArgumentList	c		873646	1					
ANR	874126	Argument	c		873646	0					
ANR	874127	Identifier	c		873646	0					
ANR	874128	Argument	m_containerWid		873646	1					
ANR	874129	Identifier	m_containerWid		873646	0					
ANR	874130	Argument	XCB_CONFIG_WINDOW_STACK_MODE		873646	2					
ANR	874131	Identifier	XCB_CONFIG_WINDOW_STACK_MODE		873646	0					
ANR	874132	Argument	stackBelowData		873646	3					
ANR	874133	Identifier	stackBelowData		873646	0					
ANR	874134	ReturnType	void		873646	1					
ANR	874135	Identifier	SNIProxy :: sendClick		873646	2					
ANR	874136	ParameterList	"uint8_t mouseButton , int x , int y"		873646	3					
ANR	874137	Parameter	uint8_t mouseButton	427:25:14468:14486	873646	0	True				
ANR	874138	ParameterType	uint8_t		873646	0					
ANR	874139	Identifier	mouseButton		873646	1					
ANR	874140	Parameter	int x	427:46:14489:14493	873646	1	True				
ANR	874141	ParameterType	int		873646	0					
ANR	874142	Identifier	x		873646	1					
ANR	874143	Parameter	int y	427:53:14496:14500	873646	2	True				
ANR	874144	ParameterType	int		873646	0					
ANR	874145	Identifier	y		873646	1					
ANR	874146	CFGEntryNode	ENTRY		873646		True				
ANR	874147	CFGExitNode	EXIT		873646		True				
ANR	874148	Symbol	pointer -> root_x		873646						
ANR	874149	Symbol	* event		873646						
ANR	874150	Symbol	SNIPROXY		873646						
ANR	874151	Symbol	clientGeom		873646						
ANR	874152	Symbol	xcb_get_geometry		873646						
ANR	874153	Symbol	xcb_query_pointer		873646						
ANR	874154	Symbol	QX11Info :: appRootWindow		873646						
ANR	874155	Symbol	pointer -> root_y		873646						
ANR	874156	Symbol	m_windowId		873646						
ANR	874157	Symbol	event -> response_type		873646						
ANR	874158	Symbol	event -> time		873646						
ANR	874159	Symbol	m_containerWid		873646						
ANR	874160	Symbol	event -> child		873646						
ANR	874161	Symbol	pointer		873646						
ANR	874162	Symbol	QX11Info :: getTimestamp		873646						
ANR	874163	Symbol	cookie		873646						
ANR	874164	Symbol	XCB_EVENT_MASK_BUTTON_PRESS		873646						
ANR	874165	Symbol	event -> root		873646						
ANR	874166	Symbol	XCB_BUTTON_PRESS		873646						
ANR	874167	Symbol	XCB_STACK_MODE_BELOW		873646						
ANR	874168	Symbol	XCB_CONFIG_WINDOW_X		873646						
ANR	874169	Symbol	XCB_STACK_MODE_ABOVE		873646						
ANR	874170	Symbol	static_cast		873646						
ANR	874171	Symbol	XCB_CONFIG_WINDOW_Y		873646						
ANR	874172	Symbol	* clientGeom		873646						
ANR	874173	Symbol	* pointer		873646						
ANR	874174	Symbol	event -> state		873646						
ANR	874175	Symbol	XCB_BUTTON_INDEX_4		873646						
ANR	874176	Symbol	XCB_CONFIG_WINDOW_STACK_MODE		873646						
ANR	874177	Symbol	Q_NULLPTR		873646						
ANR	874178	Symbol	configVals		873646						
ANR	874179	Symbol	* configVals		873646						
ANR	874180	Symbol	XCB_EVENT_MASK_BUTTON_RELEASE		873646						
ANR	874181	Symbol	event -> event_y		873646						
ANR	874182	Symbol	event -> event_x		873646						
ANR	874183	Symbol	cookieSize		873646						
ANR	874184	Symbol	stackAboveData		873646						
ANR	874185	Symbol	event		873646						
ANR	874186	Symbol	c		873646						
ANR	874187	Symbol	XCB_BUTTON_RELEASE		873646						
ANR	874188	Symbol	QX11Info :: connection		873646						
ANR	874189	Symbol	false		873646						
ANR	874190	Symbol	uint32_t		873646						
ANR	874191	Symbol	stackBelowData		873646						
ANR	874192	Symbol	mouseButton		873646						
ANR	874193	Symbol	event -> root_x		873646						
ANR	874194	Symbol	event -> root_y		873646						
ANR	874195	Symbol	x		873646						
ANR	874196	Symbol	clientGeom -> width		873646						
ANR	874197	Symbol	y		873646						
ANR	874198	Symbol	clientGeom -> height		873646						
ANR	874199	Symbol	event -> detail		873646						
ANR	874200	Symbol	event -> same_screen		873646						
ANR	874201	Symbol	event -> event		873646						
