command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	12995	File	data/converged/CVE-2018-6791_plasma-workspace/appinterface.cpp								
ANR	12996	Function	AppInterface :: AppInterface	50:0:1296:1420							
ANR	12997	FunctionDef	AppInterface :: AppInterface (ScriptEngine * env)		12996	0					
ANR	12998	CompoundStatement		53:0:1379:1420	12996	0					
ANR	12999	ExpressionStatement	m_theme = new Plasma :: Theme ( this )	54:4:1385:1418	12996	0	True				
ANR	13000	AssignmentExpression	m_theme = new Plasma :: Theme ( this )		12996	0		=			
ANR	13001	Identifier	m_theme		12996	0					
ANR	13002	Identifier	this		12996	1					
ANR	13003	Identifier	AppInterface :: AppInterface		12996	1					
ANR	13004	ParameterList	ScriptEngine * env		12996	2					
ANR	13005	Parameter	ScriptEngine * env	50:27:1323:1339	12996	0	True				
ANR	13006	ParameterType	ScriptEngine *		12996	0					
ANR	13007	Identifier	env		12996	1					
ANR	13008	CFGEntryNode	ENTRY		12996		True				
ANR	13009	CFGExitNode	EXIT		12996		True				
ANR	13010	Symbol	m_theme		12996						
ANR	13011	Symbol	this		12996						
ANR	13012	Symbol	env		12996						
ANR	13013	Function	AppInterface :: screenCount	57:0:1423:1505							
ANR	13014	FunctionDef	AppInterface :: screenCount ()		13013	0					
ANR	13015	CompoundStatement		58:0:1461:1505	13013	0					
ANR	13016	ReturnStatement	return m_env -> corona ( ) -> numScreens ( ) ;	59:4:1467:1503	13013	0	True				
ANR	13017	CallExpression	m_env -> corona ( ) -> numScreens ( )		13013	0					
ANR	13018	Callee	m_env -> corona ( ) -> numScreens		13013	0					
ANR	13019	PtrMemberAccess	m_env -> corona ( ) -> numScreens		13013	0					
ANR	13020	CallExpression	m_env -> corona ( )		13013	0					
ANR	13021	Callee	m_env -> corona		13013	0					
ANR	13022	PtrMemberAccess	m_env -> corona		13013	0					
ANR	13023	Identifier	m_env		13013	0					
ANR	13024	Identifier	corona		13013	1					
ANR	13025	ArgumentList			13013	1					
ANR	13026	Identifier	numScreens		13013	1					
ANR	13027	ArgumentList			13013	1					
ANR	13028	ReturnType	int		13013	1					
ANR	13029	Identifier	AppInterface :: screenCount		13013	2					
ANR	13030	ParameterList			13013	3					
ANR	13031	CFGEntryNode	ENTRY		13013		True				
ANR	13032	CFGExitNode	EXIT		13013		True				
ANR	13033	Symbol	* * m_env		13013						
ANR	13034	Symbol	m_env -> corona ( ) -> numScreens		13013						
ANR	13035	Symbol	m_env -> corona		13013						
ANR	13036	Symbol	m_env		13013						
ANR	13037	Symbol	* m_env		13013						
ANR	13038	Symbol	* m_env -> corona		13013						
ANR	13039	Function	AppInterface :: screenGeometry	62:0:1508:1616							
ANR	13040	FunctionDef	AppInterface :: screenGeometry (int screen)		13039	0					
ANR	13041	CompoundStatement		63:0:1562:1616	13039	0					
ANR	13042	ReturnStatement	return m_env -> corona ( ) -> screenGeometry ( screen ) ;	64:4:1568:1614	13039	0	True				
ANR	13043	CallExpression	m_env -> corona ( ) -> screenGeometry ( screen )		13039	0					
ANR	13044	Callee	m_env -> corona ( ) -> screenGeometry		13039	0					
ANR	13045	PtrMemberAccess	m_env -> corona ( ) -> screenGeometry		13039	0					
ANR	13046	CallExpression	m_env -> corona ( )		13039	0					
ANR	13047	Callee	m_env -> corona		13039	0					
ANR	13048	PtrMemberAccess	m_env -> corona		13039	0					
ANR	13049	Identifier	m_env		13039	0					
ANR	13050	Identifier	corona		13039	1					
ANR	13051	ArgumentList			13039	1					
ANR	13052	Identifier	screenGeometry		13039	1					
ANR	13053	ArgumentList	screen		13039	1					
ANR	13054	Argument	screen		13039	0					
ANR	13055	Identifier	screen		13039	0					
ANR	13056	ReturnType	QRectF		13039	1					
ANR	13057	Identifier	AppInterface :: screenGeometry		13039	2					
ANR	13058	ParameterList	int screen		13039	3					
ANR	13059	Parameter	int screen	62:36:1544:1553	13039	0	True				
ANR	13060	ParameterType	int		13039	0					
ANR	13061	Identifier	screen		13039	1					
ANR	13062	CFGEntryNode	ENTRY		13039		True				
ANR	13063	CFGExitNode	EXIT		13039		True				
ANR	13064	Symbol	m_env -> corona ( ) -> screenGeometry		13039						
ANR	13065	Symbol	* * m_env		13039						
ANR	13066	Symbol	m_env -> corona		13039						
ANR	13067	Symbol	m_env		13039						
ANR	13068	Symbol	* m_env		13039						
ANR	13069	Symbol	screen		13039						
ANR	13070	Symbol	* m_env -> corona		13039						
ANR	13071	Function	AppInterface :: activityIds	67:0:1619:2035							
ANR	13072	FunctionDef	AppInterface :: activityIds ()		13071	0					
ANR	13073	CompoundStatement		68:0:1664:2035	13071	0					
ANR	13074	IdentifierDeclStatement	QList < int > containments ;	71:4:1812:1835	13071	0	True				
ANR	13075	IdentifierDecl	containments		13071	0					
ANR	13076	IdentifierDeclType	QList < int >		13071	0					
ANR	13077	Identifier	containments		13071	1					
ANR	13078	Statement	foreach	73:4:1842:1848	13071	1	True				
ANR	13079	Statement	(	73:12:1850:1850	13071	2	True				
ANR	13080	Statement	Plasma	73:13:1851:1856	13071	3	True				
ANR	13081	Statement	::	73:19:1857:1858	13071	4	True				
ANR	13082	Statement	Containment	73:21:1859:1869	13071	5	True				
ANR	13083	Statement	*	73:33:1871:1871	13071	6	True				
ANR	13084	Statement	c	73:34:1872:1872	13071	7	True				
ANR	13085	Statement	","	73:35:1873:1873	13071	8	True				
ANR	13086	Statement	m_env	73:37:1875:1879	13071	9	True				
ANR	13087	Statement	->	73:42:1880:1881	13071	10	True				
ANR	13088	Statement	corona	73:44:1882:1887	13071	11	True				
ANR	13089	Statement	(	73:50:1888:1888	13071	12	True				
ANR	13090	Statement	)	73:51:1889:1889	13071	13	True				
ANR	13091	Statement	->	73:52:1890:1891	13071	14	True				
ANR	13092	Statement	containments	73:54:1892:1903	13071	15	True				
ANR	13093	Statement	(	73:66:1904:1904	13071	16	True				
ANR	13094	Statement	)	73:67:1905:1905	13071	17	True				
ANR	13095	Statement	)	73:68:1906:1906	13071	18	True				
ANR	13096	CompoundStatement		6:70:243:243	13071	19					
ANR	13097	IfStatement	if ( ! ScriptEngine :: isPanel ( c ) )		13071	0					
ANR	13098	Condition	! ScriptEngine :: isPanel ( c )	74:12:1922:1946	13071	0	True				
ANR	13099	UnaryOperationExpression	! ScriptEngine :: isPanel ( c )		13071	0					
ANR	13100	UnaryOperator	!		13071	0					
ANR	13101	CallExpression	ScriptEngine :: isPanel ( c )		13071	1					
ANR	13102	Callee	ScriptEngine :: isPanel		13071	0					
ANR	13103	Identifier	ScriptEngine :: isPanel		13071	0					
ANR	13104	ArgumentList	c		13071	1					
ANR	13105	Argument	c		13071	0					
ANR	13106	Identifier	c		13071	0					
ANR	13107	CompoundStatement		7:39:284:284	13071	1					
ANR	13108	ExpressionStatement	containments . append ( c -> id ( ) )	75:12:1963:1991	13071	0	True				
ANR	13109	CallExpression	containments . append ( c -> id ( ) )		13071	0					
ANR	13110	Callee	containments . append		13071	0					
ANR	13111	MemberAccess	containments . append		13071	0					
ANR	13112	Identifier	containments		13071	0					
ANR	13113	Identifier	append		13071	1					
ANR	13114	ArgumentList	c -> id ( )		13071	1					
ANR	13115	Argument	c -> id ( )		13071	0					
ANR	13116	CallExpression	c -> id ( )		13071	0					
ANR	13117	Callee	c -> id		13071	0					
ANR	13118	PtrMemberAccess	c -> id		13071	0					
ANR	13119	Identifier	c		13071	0					
ANR	13120	Identifier	id		13071	1					
ANR	13121	ArgumentList			13071	1					
ANR	13122	ReturnStatement	return containments ;	79:4:2014:2033	13071	20	True				
ANR	13123	Identifier	containments		13071	0					
ANR	13124	ReturnType	QList < int >		13071	1					
ANR	13125	Identifier	AppInterface :: activityIds		13071	2					
ANR	13126	ParameterList			13071	3					
ANR	13127	CFGEntryNode	ENTRY		13071		True				
ANR	13128	CFGExitNode	EXIT		13071		True				
ANR	13129	Symbol	containments		13071						
ANR	13130	Symbol	c		13071						
ANR	13131	Symbol	ScriptEngine :: isPanel		13071						
ANR	13132	Symbol	c -> id		13071						
ANR	13133	Symbol	* c		13071						
ANR	13134	Function	AppInterface :: panelIds	82:0:2038:2495							
ANR	13135	FunctionDef	AppInterface :: panelIds ()		13134	0					
ANR	13136	CompoundStatement		83:0:2080:2495	13134	0					
ANR	13137	IdentifierDeclStatement	QList < int > panels ;	86:4:2228:2245	13134	0	True				
ANR	13138	IdentifierDecl	panels		13134	0					
ANR	13139	IdentifierDeclType	QList < int >		13134	0					
ANR	13140	Identifier	panels		13134	1					
ANR	13141	Statement	foreach	88:4:2252:2258	13134	1	True				
ANR	13142	Statement	(	88:12:2260:2260	13134	2	True				
ANR	13143	Statement	Plasma	88:13:2261:2266	13134	3	True				
ANR	13144	Statement	::	88:19:2267:2268	13134	4	True				
ANR	13145	Statement	Containment	88:21:2269:2279	13134	5	True				
ANR	13146	Statement	*	88:33:2281:2281	13134	6	True				
ANR	13147	Statement	c	88:34:2282:2282	13134	7	True				
ANR	13148	Statement	","	88:35:2283:2283	13134	8	True				
ANR	13149	Statement	m_env	88:37:2285:2289	13134	9	True				
ANR	13150	Statement	->	88:42:2290:2291	13134	10	True				
ANR	13151	Statement	corona	88:44:2292:2297	13134	11	True				
ANR	13152	Statement	(	88:50:2298:2298	13134	12	True				
ANR	13153	Statement	)	88:51:2299:2299	13134	13	True				
ANR	13154	Statement	->	88:52:2300:2301	13134	14	True				
ANR	13155	Statement	containments	88:54:2302:2313	13134	15	True				
ANR	13156	Statement	(	88:66:2314:2314	13134	16	True				
ANR	13157	Statement	)	88:67:2315:2315	13134	17	True				
ANR	13158	Statement	)	88:68:2316:2316	13134	18	True				
ANR	13159	CompoundStatement		6:70:237:237	13134	19					
ANR	13160	IfStatement	if ( ScriptEngine :: isPanel ( c ) )		13134	0					
ANR	13161	Condition	ScriptEngine :: isPanel ( c )	90:12:2395:2418	13134	0	True				
ANR	13162	CallExpression	ScriptEngine :: isPanel ( c )		13134	0					
ANR	13163	Callee	ScriptEngine :: isPanel		13134	0					
ANR	13164	Identifier	ScriptEngine :: isPanel		13134	0					
ANR	13165	ArgumentList	c		13134	1					
ANR	13166	Argument	c		13134	0					
ANR	13167	Identifier	c		13134	0					
ANR	13168	CompoundStatement		8:38:340:340	13134	1					
ANR	13169	ExpressionStatement	panels . append ( c -> id ( ) )	91:12:2435:2457	13134	0	True				
ANR	13170	CallExpression	panels . append ( c -> id ( ) )		13134	0					
ANR	13171	Callee	panels . append		13134	0					
ANR	13172	MemberAccess	panels . append		13134	0					
ANR	13173	Identifier	panels		13134	0					
ANR	13174	Identifier	append		13134	1					
ANR	13175	ArgumentList	c -> id ( )		13134	1					
ANR	13176	Argument	c -> id ( )		13134	0					
ANR	13177	CallExpression	c -> id ( )		13134	0					
ANR	13178	Callee	c -> id		13134	0					
ANR	13179	PtrMemberAccess	c -> id		13134	0					
ANR	13180	Identifier	c		13134	0					
ANR	13181	Identifier	id		13134	1					
ANR	13182	ArgumentList			13134	1					
ANR	13183	ReturnStatement	return panels ;	95:4:2480:2493	13134	20	True				
ANR	13184	Identifier	panels		13134	0					
ANR	13185	ReturnType	QList < int >		13134	1					
ANR	13186	Identifier	AppInterface :: panelIds		13134	2					
ANR	13187	ParameterList			13134	3					
ANR	13188	CFGEntryNode	ENTRY		13134		True				
ANR	13189	CFGExitNode	EXIT		13134		True				
ANR	13190	Symbol	c		13134						
ANR	13191	Symbol	ScriptEngine :: isPanel		13134						
ANR	13192	Symbol	panels		13134						
ANR	13193	Symbol	c -> id		13134						
ANR	13194	Symbol	* c		13134						
ANR	13195	Function	AppInterface :: applicationVersion	98:0:2498:2588							
ANR	13196	FunctionDef	AppInterface :: applicationVersion ()		13195	0					
ANR	13197	CompoundStatement		99:0:2547:2588	13195	0					
ANR	13198	ReturnStatement	return qApp -> applicationVersion ( ) ;	100:4:2553:2586	13195	0	True				
ANR	13199	CallExpression	qApp -> applicationVersion ( )		13195	0					
ANR	13200	Callee	qApp -> applicationVersion		13195	0					
ANR	13201	PtrMemberAccess	qApp -> applicationVersion		13195	0					
ANR	13202	Identifier	qApp		13195	0					
ANR	13203	Identifier	applicationVersion		13195	1					
ANR	13204	ArgumentList			13195	1					
ANR	13205	ReturnType	QString		13195	1					
ANR	13206	Identifier	AppInterface :: applicationVersion		13195	2					
ANR	13207	ParameterList			13195	3					
ANR	13208	CFGEntryNode	ENTRY		13195		True				
ANR	13209	CFGExitNode	EXIT		13195		True				
ANR	13210	Symbol	* qApp		13195						
ANR	13211	Symbol	qApp -> applicationVersion		13195						
ANR	13212	Symbol	qApp		13195						
ANR	13213	Function	AppInterface :: platformVersion	103:0:2591:2676							
ANR	13214	FunctionDef	AppInterface :: platformVersion ()		13213	0					
ANR	13215	CompoundStatement		104:0:2637:2676	13213	0					
ANR	13216	ReturnStatement	return 0 ;	105:4:2643:2651	13213	0	True				
ANR	13217	PrimaryExpression	0		13213	0					
ANR	13218	ReturnType	QString		13213	1					
ANR	13219	Identifier	AppInterface :: platformVersion		13213	2					
ANR	13220	ParameterList			13213	3					
ANR	13221	CFGEntryNode	ENTRY		13213		True				
ANR	13222	CFGExitNode	EXIT		13213		True				
ANR	13223	Function	AppInterface :: scriptingVersion	108:0:2679:2769							
ANR	13224	FunctionDef	AppInterface :: scriptingVersion ()		13223	0					
ANR	13225	CompoundStatement		109:0:2722:2769	13223	0					
ANR	13226	ReturnStatement	return PLASMA_DESKTOP_SCRIPTING_VERSION ;	110:4:2728:2767	13223	0	True				
ANR	13227	Identifier	PLASMA_DESKTOP_SCRIPTING_VERSION		13223	0					
ANR	13228	ReturnType	int		13223	1					
ANR	13229	Identifier	AppInterface :: scriptingVersion		13223	2					
ANR	13230	ParameterList			13223	3					
ANR	13231	CFGEntryNode	ENTRY		13223		True				
ANR	13232	CFGExitNode	EXIT		13223		True				
ANR	13233	Symbol	PLASMA_DESKTOP_SCRIPTING_VERSION		13223						
ANR	13234	Function	AppInterface :: theme	113:0:2772:2843							
ANR	13235	FunctionDef	AppInterface :: theme ()		13234	0					
ANR	13236	CompoundStatement		114:0:2808:2843	13234	0					
ANR	13237	ReturnStatement	return m_theme -> themeName ( ) ;	115:4:2814:2841	13234	0	True				
ANR	13238	CallExpression	m_theme -> themeName ( )		13234	0					
ANR	13239	Callee	m_theme -> themeName		13234	0					
ANR	13240	PtrMemberAccess	m_theme -> themeName		13234	0					
ANR	13241	Identifier	m_theme		13234	0					
ANR	13242	Identifier	themeName		13234	1					
ANR	13243	ArgumentList			13234	1					
ANR	13244	ReturnType	QString		13234	1					
ANR	13245	Identifier	AppInterface :: theme		13234	2					
ANR	13246	ParameterList			13234	3					
ANR	13247	CFGEntryNode	ENTRY		13234		True				
ANR	13248	CFGExitNode	EXIT		13234		True				
ANR	13249	Symbol	m_theme		13234						
ANR	13250	Symbol	m_theme -> themeName		13234						
ANR	13251	Symbol	* m_theme		13234						
ANR	13252	Function	AppInterface :: setTheme	118:0:2846:2930							
ANR	13253	FunctionDef	AppInterface :: setTheme (const QString & name)		13252	0					
ANR	13254	CompoundStatement		119:0:2895:2930	13252	0					
ANR	13255	ExpressionStatement	m_theme -> setThemeName ( name )	120:4:2901:2928	13252	0	True				
ANR	13256	CallExpression	m_theme -> setThemeName ( name )		13252	0					
ANR	13257	Callee	m_theme -> setThemeName		13252	0					
ANR	13258	PtrMemberAccess	m_theme -> setThemeName		13252	0					
ANR	13259	Identifier	m_theme		13252	0					
ANR	13260	Identifier	setThemeName		13252	1					
ANR	13261	ArgumentList	name		13252	1					
ANR	13262	Argument	name		13252	0					
ANR	13263	Identifier	name		13252	0					
ANR	13264	ReturnType	void		13252	1					
ANR	13265	Identifier	AppInterface :: setTheme		13252	2					
ANR	13266	ParameterList	const QString & name		13252	3					
ANR	13267	Parameter	const QString & name	118:28:2874:2892	13252	0	True				
ANR	13268	ParameterType	const QString &		13252	0					
ANR	13269	Identifier	name		13252	1					
ANR	13270	CFGEntryNode	ENTRY		13252		True				
ANR	13271	CFGExitNode	EXIT		13252		True				
ANR	13272	Symbol	m_theme		13252						
ANR	13273	Symbol	name		13252						
ANR	13274	Function	AppInterface :: locale	123:0:2933:3009							
ANR	13275	FunctionDef	AppInterface :: locale ()		13274	0					
ANR	13276	CompoundStatement		124:0:2970:3009	13274	0					
ANR	13277	ReturnStatement	return QLocale :: system ( ) . name ( ) ;	125:4:2976:3007	13274	0	True				
ANR	13278	CallExpression	QLocale :: system ( ) . name ( )		13274	0					
ANR	13279	Callee	QLocale :: system ( ) . name		13274	0					
ANR	13280	MemberAccess	QLocale :: system ( ) . name		13274	0					
ANR	13281	CallExpression	QLocale :: system ( )		13274	0					
ANR	13282	Callee	QLocale :: system		13274	0					
ANR	13283	Identifier	QLocale :: system		13274	0					
ANR	13284	ArgumentList			13274	1					
ANR	13285	Identifier	name		13274	1					
ANR	13286	ArgumentList			13274	1					
ANR	13287	ReturnType	QString		13274	1					
ANR	13288	Identifier	AppInterface :: locale		13274	2					
ANR	13289	ParameterList			13274	3					
ANR	13290	CFGEntryNode	ENTRY		13274		True				
ANR	13291	CFGExitNode	EXIT		13274		True				
ANR	13292	Symbol	QLocale :: system ( ) . name		13274						
ANR	13293	Symbol	QLocale :: system		13274						
ANR	13294	Function	AppInterface :: language	128:0:3012:3130							
ANR	13295	FunctionDef	AppInterface :: language ()		13294	0					
ANR	13296	CompoundStatement		129:0:3051:3130	13294	0					
ANR	13297	ReturnStatement	return QLocale :: system ( ) . languageToString ( QLocale :: system ( ) . language ( ) ) ;	130:4:3057:3128	13294	0	True				
ANR	13298	CallExpression	QLocale :: system ( ) . languageToString ( QLocale :: system ( ) . language ( ) )		13294	0					
ANR	13299	Callee	QLocale :: system ( ) . languageToString		13294	0					
ANR	13300	MemberAccess	QLocale :: system ( ) . languageToString		13294	0					
ANR	13301	CallExpression	QLocale :: system ( )		13294	0					
ANR	13302	Callee	QLocale :: system		13294	0					
ANR	13303	Identifier	QLocale :: system		13294	0					
ANR	13304	ArgumentList			13294	1					
ANR	13305	Identifier	languageToString		13294	1					
ANR	13306	ArgumentList	QLocale :: system ( ) . language ( )		13294	1					
ANR	13307	Argument	QLocale :: system ( ) . language ( )		13294	0					
ANR	13308	CallExpression	QLocale :: system ( ) . language ( )		13294	0					
ANR	13309	Callee	QLocale :: system ( ) . language		13294	0					
ANR	13310	MemberAccess	QLocale :: system ( ) . language		13294	0					
ANR	13311	CallExpression	QLocale :: system ( )		13294	0					
ANR	13312	Callee	QLocale :: system		13294	0					
ANR	13313	Identifier	QLocale :: system		13294	0					
ANR	13314	ArgumentList			13294	1					
ANR	13315	Identifier	language		13294	1					
ANR	13316	ArgumentList			13294	1					
ANR	13317	ReturnType	QString		13294	1					
ANR	13318	Identifier	AppInterface :: language		13294	2					
ANR	13319	ParameterList			13294	3					
ANR	13320	CFGEntryNode	ENTRY		13294		True				
ANR	13321	CFGExitNode	EXIT		13294		True				
ANR	13322	Symbol	QLocale :: system ( ) . language		13294						
ANR	13323	Symbol	QLocale :: system		13294						
ANR	13324	Symbol	QLocale :: system ( ) . languageToString		13294						
ANR	13325	Function	AppInterface :: languageId	133:0:3133:3237							
ANR	13326	FunctionDef	AppInterface :: languageId ()		13325	0					
ANR	13327	CompoundStatement		134:0:3174:3237	13325	0					
ANR	13328	ReturnStatement	"return QLocale :: system ( ) . bcp47Name ( ) . section ( '-' , 0 , 0 ) ;"	135:4:3180:3235	13325	0	True				
ANR	13329	CallExpression	"QLocale :: system ( ) . bcp47Name ( ) . section ( '-' , 0 , 0 )"		13325	0					
ANR	13330	Callee	QLocale :: system ( ) . bcp47Name ( ) . section		13325	0					
ANR	13331	MemberAccess	QLocale :: system ( ) . bcp47Name ( ) . section		13325	0					
ANR	13332	CallExpression	QLocale :: system ( ) . bcp47Name ( )		13325	0					
ANR	13333	Callee	QLocale :: system ( ) . bcp47Name		13325	0					
ANR	13334	MemberAccess	QLocale :: system ( ) . bcp47Name		13325	0					
ANR	13335	CallExpression	QLocale :: system ( )		13325	0					
ANR	13336	Callee	QLocale :: system		13325	0					
ANR	13337	Identifier	QLocale :: system		13325	0					
ANR	13338	ArgumentList			13325	1					
ANR	13339	Identifier	bcp47Name		13325	1					
ANR	13340	ArgumentList			13325	1					
ANR	13341	Identifier	section		13325	1					
ANR	13342	ArgumentList	'-'		13325	1					
ANR	13343	Argument	'-'		13325	0					
ANR	13344	PrimaryExpression	'-'		13325	0					
ANR	13345	Argument	0		13325	1					
ANR	13346	PrimaryExpression	0		13325	0					
ANR	13347	Argument	0		13325	2					
ANR	13348	PrimaryExpression	0		13325	0					
ANR	13349	ReturnType	QString		13325	1					
ANR	13350	Identifier	AppInterface :: languageId		13325	2					
ANR	13351	ParameterList			13325	3					
ANR	13352	CFGEntryNode	ENTRY		13325		True				
ANR	13353	CFGExitNode	EXIT		13325		True				
ANR	13354	Symbol	QLocale :: system		13325						
ANR	13355	Symbol	QLocale :: system ( ) . bcp47Name ( ) . section		13325						
ANR	13356	Symbol	QLocale :: system ( ) . bcp47Name		13325						
ANR	13357	Function	AppInterface :: multihead	138:0:3240:3512							
ANR	13358	FunctionDef	AppInterface :: multihead ()		13357	0					
ANR	13359	CompoundStatement		139:0:3277:3512	13357	0					
ANR	13360	ReturnStatement	return GetSystemMetrics ( SM_CMONITORS ) > 1 ;	141:4:3299:3340	13357	0	True				
ANR	13361	RelationalExpression	GetSystemMetrics ( SM_CMONITORS ) > 1		13357	0		>			
ANR	13362	CallExpression	GetSystemMetrics ( SM_CMONITORS )		13357	0					
ANR	13363	Callee	GetSystemMetrics		13357	0					
ANR	13364	Identifier	GetSystemMetrics		13357	0					
ANR	13365	ArgumentList	SM_CMONITORS		13357	1					
ANR	13366	Argument	SM_CMONITORS		13357	0					
ANR	13367	Identifier	SM_CMONITORS		13357	0					
ANR	13368	PrimaryExpression	1		13357	1					
ANR	13369	ReturnType	bool		13357	1					
ANR	13370	Identifier	AppInterface :: multihead		13357	2					
ANR	13371	ParameterList			13357	3					
ANR	13372	CFGEntryNode	ENTRY		13357		True				
ANR	13373	CFGExitNode	EXIT		13357		True				
ANR	13374	Symbol	GetSystemMetrics		13357						
ANR	13375	Symbol	SM_CMONITORS		13357						
ANR	13376	Function	AppInterface :: multiheadScreen	151:0:3515:3929							
ANR	13377	FunctionDef	AppInterface :: multiheadScreen ()		13376	0					
ANR	13378	CompoundStatement		152:0:3557:3929	13376	0					
ANR	13379	IdentifierDeclStatement	int id = - 1 ;	153:4:3563:3574	13376	0	True				
ANR	13380	IdentifierDecl	id = - 1		13376	0					
ANR	13381	IdentifierDeclType	int		13376	0					
ANR	13382	Identifier	id		13376	1					
ANR	13383	AssignmentExpression	id = - 1		13376	2		=			
ANR	13384	Identifier	id		13376	0					
ANR	13385	UnaryOperationExpression	- 1		13376	1					
ANR	13386	UnaryOperator	-		13376	0					
ANR	13387	PrimaryExpression	1		13376	1					
ANR	13388	IfStatement	if ( multihead ( ) )		13376	1					
ANR	13389	Condition	multihead ( )	156:8:3601:3611	13376	0	True				
ANR	13390	CallExpression	multihead ( )		13376	0					
ANR	13391	Callee	multihead		13376	0					
ANR	13392	Identifier	multihead		13376	0					
ANR	13393	ArgumentList			13376	1					
ANR	13394	CompoundStatement		8:8:209:242	13376	1					
ANR	13395	IdentifierDeclStatement	Display * dpy = XOpenDisplay ( NULL ) ;	159:8:3767:3800	13376	0	True				
ANR	13396	IdentifierDecl	* dpy = XOpenDisplay ( NULL )		13376	0					
ANR	13397	IdentifierDeclType	Display *		13376	0					
ANR	13398	Identifier	dpy		13376	1					
ANR	13399	AssignmentExpression	* dpy = XOpenDisplay ( NULL )		13376	2		=			
ANR	13400	Identifier	dpy		13376	0					
ANR	13401	CallExpression	XOpenDisplay ( NULL )		13376	1					
ANR	13402	Callee	XOpenDisplay		13376	0					
ANR	13403	Identifier	XOpenDisplay		13376	0					
ANR	13404	ArgumentList	NULL		13376	1					
ANR	13405	Argument	NULL		13376	0					
ANR	13406	Identifier	NULL		13376	0					
ANR	13407	IfStatement	if ( dpy )		13376	1					
ANR	13408	Condition	dpy	160:12:3814:3816	13376	0	True				
ANR	13409	Identifier	dpy		13376	0					
ANR	13410	CompoundStatement		9:17:261:261	13376	1					
ANR	13411	ExpressionStatement	id = DefaultScreen ( dpy )	161:12:3833:3856	13376	0	True				
ANR	13412	AssignmentExpression	id = DefaultScreen ( dpy )		13376	0		=			
ANR	13413	Identifier	id		13376	0					
ANR	13414	CallExpression	DefaultScreen ( dpy )		13376	1					
ANR	13415	Callee	DefaultScreen		13376	0					
ANR	13416	Identifier	DefaultScreen		13376	0					
ANR	13417	ArgumentList	dpy		13376	1					
ANR	13418	Argument	dpy		13376	0					
ANR	13419	Identifier	dpy		13376	0					
ANR	13420	ExpressionStatement	XCloseDisplay ( dpy )	162:12:3870:3888	13376	1	True				
ANR	13421	CallExpression	XCloseDisplay ( dpy )		13376	0					
ANR	13422	Callee	XCloseDisplay		13376	0					
ANR	13423	Identifier	XCloseDisplay		13376	0					
ANR	13424	ArgumentList	dpy		13376	1					
ANR	13425	Argument	dpy		13376	0					
ANR	13426	Identifier	dpy		13376	0					
ANR	13427	ReturnStatement	return id ;	167:4:3918:3927	13376	2	True				
ANR	13428	Identifier	id		13376	0					
ANR	13429	ReturnType	int		13376	1					
ANR	13430	Identifier	AppInterface :: multiheadScreen		13376	2					
ANR	13431	ParameterList			13376	3					
ANR	13432	CFGEntryNode	ENTRY		13376		True				
ANR	13433	CFGExitNode	EXIT		13376		True				
ANR	13434	Symbol	multihead		13376						
ANR	13435	Symbol	NULL		13376						
ANR	13436	Symbol	XOpenDisplay		13376						
ANR	13437	Symbol	DefaultScreen		13376						
ANR	13438	Symbol	id		13376						
ANR	13439	Symbol	dpy		13376						
ANR	13440	Function	AppInterface :: lockCorona	170:0:3932:4079							
ANR	13441	FunctionDef	AppInterface :: lockCorona (bool locked)		13440	0					
ANR	13442	CompoundStatement		171:0:3975:4079	13440	0					
ANR	13443	ExpressionStatement	m_env -> corona ( ) -> setImmutability ( locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable )	172:4:3981:4077	13440	0	True				
ANR	13444	CallExpression	m_env -> corona ( ) -> setImmutability ( locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable )		13440	0					
ANR	13445	Callee	m_env -> corona ( ) -> setImmutability		13440	0					
ANR	13446	PtrMemberAccess	m_env -> corona ( ) -> setImmutability		13440	0					
ANR	13447	CallExpression	m_env -> corona ( )		13440	0					
ANR	13448	Callee	m_env -> corona		13440	0					
ANR	13449	PtrMemberAccess	m_env -> corona		13440	0					
ANR	13450	Identifier	m_env		13440	0					
ANR	13451	Identifier	corona		13440	1					
ANR	13452	ArgumentList			13440	1					
ANR	13453	Identifier	setImmutability		13440	1					
ANR	13454	ArgumentList	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		13440	1					
ANR	13455	Argument	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		13440	0					
ANR	13456	ConditionalExpression	locked ? Plasma :: Types :: UserImmutable : Plasma :: Types :: Mutable		13440	0					
ANR	13457	Condition	locked		13440	0					
ANR	13458	Identifier	locked		13440	0					
ANR	13459	Identifier	Plasma :: Types :: UserImmutable		13440	1					
ANR	13460	Identifier	Plasma :: Types :: Mutable		13440	2					
ANR	13461	ReturnType	void		13440	1					
ANR	13462	Identifier	AppInterface :: lockCorona		13440	2					
ANR	13463	ParameterList	bool locked		13440	3					
ANR	13464	Parameter	bool locked	170:30:3962:3972	13440	0	True				
ANR	13465	ParameterType	bool		13440	0					
ANR	13466	Identifier	locked		13440	1					
ANR	13467	CFGEntryNode	ENTRY		13440		True				
ANR	13468	CFGExitNode	EXIT		13440		True				
ANR	13469	Symbol	Plasma :: Types :: Mutable		13440						
ANR	13470	Symbol	m_env -> corona		13440						
ANR	13471	Symbol	m_env		13440						
ANR	13472	Symbol	* m_env		13440						
ANR	13473	Symbol	locked		13440						
ANR	13474	Symbol	Plasma :: Types :: UserImmutable		13440						
ANR	13475	Function	AppInterface :: coronaLocked	175:0:4082:4194							
ANR	13476	FunctionDef	AppInterface :: coronaLocked ()		13475	0					
ANR	13477	CompoundStatement		176:0:4122:4194	13475	0					
ANR	13478	ReturnStatement	return m_env -> corona ( ) -> immutability ( ) != Plasma :: Types :: Mutable ;	177:4:4128:4192	13475	0	True				
ANR	13479	EqualityExpression	m_env -> corona ( ) -> immutability ( ) != Plasma :: Types :: Mutable		13475	0		!=			
ANR	13480	CallExpression	m_env -> corona ( ) -> immutability ( )		13475	0					
ANR	13481	Callee	m_env -> corona ( ) -> immutability		13475	0					
ANR	13482	PtrMemberAccess	m_env -> corona ( ) -> immutability		13475	0					
ANR	13483	CallExpression	m_env -> corona ( )		13475	0					
ANR	13484	Callee	m_env -> corona		13475	0					
ANR	13485	PtrMemberAccess	m_env -> corona		13475	0					
ANR	13486	Identifier	m_env		13475	0					
ANR	13487	Identifier	corona		13475	1					
ANR	13488	ArgumentList			13475	1					
ANR	13489	Identifier	immutability		13475	1					
ANR	13490	ArgumentList			13475	1					
ANR	13491	Identifier	Plasma :: Types :: Mutable		13475	1					
ANR	13492	ReturnType	bool		13475	1					
ANR	13493	Identifier	AppInterface :: coronaLocked		13475	2					
ANR	13494	ParameterList			13475	3					
ANR	13495	CFGEntryNode	ENTRY		13475		True				
ANR	13496	CFGExitNode	EXIT		13475		True				
ANR	13497	Symbol	m_env -> corona ( ) -> immutability		13475						
ANR	13498	Symbol	Plasma :: Types :: Mutable		13475						
ANR	13499	Symbol	* * m_env		13475						
ANR	13500	Symbol	m_env -> corona		13475						
ANR	13501	Symbol	m_env		13475						
ANR	13502	Symbol	* m_env		13475						
ANR	13503	Symbol	* m_env -> corona		13475						
ANR	13504	Function	AppInterface :: sleep	180:0:4197:4358							
ANR	13505	FunctionDef	AppInterface :: sleep (int ms)		13504	0					
ANR	13506	CompoundStatement		181:0:4230:4358	13504	0					
ANR	13507	IdentifierDeclStatement	QEventLoop loop ;	182:4:4236:4251	13504	0	True				
ANR	13508	IdentifierDecl	loop		13504	0					
ANR	13509	IdentifierDeclType	QEventLoop		13504	0					
ANR	13510	Identifier	loop		13504	1					
ANR	13511	ExpressionStatement	"QTimer :: singleShot ( ms , & loop , & QEventLoop :: quit )"	183:4:4257:4305	13504	1	True				
ANR	13512	CallExpression	"QTimer :: singleShot ( ms , & loop , & QEventLoop :: quit )"		13504	0					
ANR	13513	Callee	QTimer :: singleShot		13504	0					
ANR	13514	Identifier	QTimer :: singleShot		13504	0					
ANR	13515	ArgumentList	ms		13504	1					
ANR	13516	Argument	ms		13504	0					
ANR	13517	Identifier	ms		13504	0					
ANR	13518	Argument	& loop		13504	1					
ANR	13519	UnaryOperationExpression	& loop		13504	0					
ANR	13520	UnaryOperator	&		13504	0					
ANR	13521	Identifier	loop		13504	1					
ANR	13522	Argument	& QEventLoop :: quit		13504	2					
ANR	13523	UnaryOperationExpression	& QEventLoop :: quit		13504	0					
ANR	13524	UnaryOperator	&		13504	0					
ANR	13525	Identifier	QEventLoop :: quit		13504	1					
ANR	13526	ExpressionStatement	loop . exec ( QEventLoop :: ExcludeUserInputEvents )	184:4:4311:4356	13504	2	True				
ANR	13527	CallExpression	loop . exec ( QEventLoop :: ExcludeUserInputEvents )		13504	0					
ANR	13528	Callee	loop . exec		13504	0					
ANR	13529	MemberAccess	loop . exec		13504	0					
ANR	13530	Identifier	loop		13504	0					
ANR	13531	Identifier	exec		13504	1					
ANR	13532	ArgumentList	QEventLoop :: ExcludeUserInputEvents		13504	1					
ANR	13533	Argument	QEventLoop :: ExcludeUserInputEvents		13504	0					
ANR	13534	Identifier	QEventLoop :: ExcludeUserInputEvents		13504	0					
ANR	13535	ReturnType	void		13504	1					
ANR	13536	Identifier	AppInterface :: sleep		13504	2					
ANR	13537	ParameterList	int ms		13504	3					
ANR	13538	Parameter	int ms	180:25:4222:4227	13504	0	True				
ANR	13539	ParameterType	int		13504	0					
ANR	13540	Identifier	ms		13504	1					
ANR	13541	CFGEntryNode	ENTRY		13504		True				
ANR	13542	CFGExitNode	EXIT		13504		True				
ANR	13543	Symbol	& loop		13504						
ANR	13544	Symbol	QEventLoop :: ExcludeUserInputEvents		13504						
ANR	13545	Symbol	ms		13504						
ANR	13546	Symbol	loop		13504						
ANR	13547	Symbol	& QEventLoop :: quit		13504						
ANR	13548	Function	AppInterface :: hasBattery	187:0:4361:5002							
ANR	13549	FunctionDef	AppInterface :: hasBattery ()		13548	0					
ANR	13550	CompoundStatement		188:0:4399:5002	13548	0					
ANR	13551	IdentifierDeclStatement	QList < Solid :: Device > batteryDevices = Solid :: Device :: listFromType ( Solid :: DeviceInterface :: Battery ) ;	189:4:4405:4503	13548	0	True				
ANR	13552	IdentifierDecl	batteryDevices = Solid :: Device :: listFromType ( Solid :: DeviceInterface :: Battery )		13548	0					
ANR	13553	IdentifierDeclType	QList < Solid :: Device >		13548	0					
ANR	13554	Identifier	batteryDevices		13548	1					
ANR	13555	AssignmentExpression	batteryDevices = Solid :: Device :: listFromType ( Solid :: DeviceInterface :: Battery )		13548	2		=			
ANR	13556	Identifier	batteryDevices		13548	0					
ANR	13557	CallExpression	Solid :: Device :: listFromType ( Solid :: DeviceInterface :: Battery )		13548	1					
ANR	13558	Callee	Solid :: Device :: listFromType		13548	0					
ANR	13559	Identifier	Solid :: Device :: listFromType		13548	0					
ANR	13560	ArgumentList	Solid :: DeviceInterface :: Battery		13548	1					
ANR	13561	Argument	Solid :: DeviceInterface :: Battery		13548	0					
ANR	13562	Identifier	Solid :: DeviceInterface :: Battery		13548	0					
ANR	13563	Statement	for	191:4:4510:4512	13548	1	True				
ANR	13564	Statement	(	191:8:4514:4514	13548	2	True				
ANR	13565	Statement	auto	191:9:4515:4518	13548	3	True				
ANR	13566	Label	device :	191:14:4520:4526	13548	4	True				
ANR	13567	Identifier	device		13548	0					
ANR	13568	Statement	batteryDevices	191:22:4528:4541	13548	5	True				
ANR	13569	Statement	)	191:36:4542:4542	13548	6	True				
ANR	13570	CompoundStatement		4:38:144:144	13548	7					
ANR	13571	Statement	Solid	192:8:4554:4558	13548	0	True				
ANR	13572	Statement	::	192:13:4559:4560	13548	1	True				
ANR	13573	Statement	Battery	192:15:4561:4567	13548	2	True				
ANR	13574	Statement	*	192:23:4569:4569	13548	3	True				
ANR	13575	Statement	battery	192:24:4570:4576	13548	4	True				
ANR	13576	Statement	=	192:32:4578:4578	13548	5	True				
ANR	13577	Statement	device	192:34:4580:4585	13548	6	True				
ANR	13578	Statement	.	192:40:4586:4586	13548	7	True				
ANR	13579	Statement	as	192:41:4587:4588	13548	8	True				
ANR	13580	Statement	<	192:43:4589:4589	13548	9	True				
ANR	13581	Statement	Solid	192:44:4590:4594	13548	10	True				
ANR	13582	Statement	::	192:49:4595:4596	13548	11	True				
ANR	13583	Statement	Battery	192:51:4597:4603	13548	12	True				
ANR	13584	Statement	>	192:58:4604:4604	13548	13	True				
ANR	13585	Statement	(	192:59:4605:4605	13548	14	True				
ANR	13586	Statement	)	192:60:4606:4606	13548	15	True				
ANR	13587	ExpressionStatement		192:61:4607:4607	13548	16	True				
ANR	13588	IfStatement	if ( battery && battery -> type ( ) == Solid :: Battery :: PrimaryBattery && battery -> isPowerSupply ( ) )		13548	17					
ANR	13589	Condition	battery && battery -> type ( ) == Solid :: Battery :: PrimaryBattery && battery -> isPowerSupply ( )	196:12:4826:4937	13548	0	True				
ANR	13590	AndExpression	battery && battery -> type ( ) == Solid :: Battery :: PrimaryBattery && battery -> isPowerSupply ( )		13548	0		&&			
ANR	13591	Identifier	battery		13548	0					
ANR	13592	AndExpression	battery -> type ( ) == Solid :: Battery :: PrimaryBattery && battery -> isPowerSupply ( )		13548	1		&&			
ANR	13593	EqualityExpression	battery -> type ( ) == Solid :: Battery :: PrimaryBattery		13548	0		==			
ANR	13594	CallExpression	battery -> type ( )		13548	0					
ANR	13595	Callee	battery -> type		13548	0					
ANR	13596	PtrMemberAccess	battery -> type		13548	0					
ANR	13597	Identifier	battery		13548	0					
ANR	13598	Identifier	type		13548	1					
ANR	13599	ArgumentList			13548	1					
ANR	13600	Identifier	Solid :: Battery :: PrimaryBattery		13548	1					
ANR	13601	CallExpression	battery -> isPowerSupply ( )		13548	1					
ANR	13602	Callee	battery -> isPowerSupply		13548	0					
ANR	13603	PtrMemberAccess	battery -> isPowerSupply		13548	0					
ANR	13604	Identifier	battery		13548	0					
ANR	13605	Identifier	isPowerSupply		13548	1					
ANR	13606	ArgumentList			13548	1					
ANR	13607	CompoundStatement		11:38:540:540	13548	1					
ANR	13608	ReturnStatement	return true ;	199:12:4954:4965	13548	0	True				
ANR	13609	Identifier	true		13548	0					
ANR	13610	ReturnStatement	return false ;	203:4:4988:5000	13548	8	True				
ANR	13611	Identifier	false		13548	0					
ANR	13612	ReturnType	bool		13548	1					
ANR	13613	Identifier	AppInterface :: hasBattery		13548	2					
ANR	13614	ParameterList			13548	3					
ANR	13615	CFGEntryNode	ENTRY		13548		True				
ANR	13616	CFGExitNode	EXIT		13548		True				
ANR	13617	Symbol	Solid :: Device :: listFromType		13548						
ANR	13618	Symbol	Solid :: Battery :: PrimaryBattery		13548						
ANR	13619	Symbol	* battery		13548						
ANR	13620	Symbol	battery -> type		13548						
ANR	13621	Symbol	true		13548						
ANR	13622	Symbol	false		13548						
ANR	13623	Symbol	Solid :: DeviceInterface :: Battery		13548						
ANR	13624	Symbol	battery -> isPowerSupply		13548						
ANR	13625	Symbol	battery		13548						
ANR	13626	Symbol	batteryDevices		13548						
ANR	13627	Function	AppInterface :: knownWidgetTypes	206:0:5005:5428							
ANR	13628	FunctionDef	AppInterface :: knownWidgetTypes ()		13627	0					
ANR	13629	CompoundStatement		207:0:5056:5428	13627	0					
ANR	13630	IfStatement	if ( m_knownWidgets . isEmpty ( ) )		13627	0					
ANR	13631	Condition	m_knownWidgets . isEmpty ( )	208:8:5066:5089	13627	0	True				
ANR	13632	CallExpression	m_knownWidgets . isEmpty ( )		13627	0					
ANR	13633	Callee	m_knownWidgets . isEmpty		13627	0					
ANR	13634	MemberAccess	m_knownWidgets . isEmpty		13627	0					
ANR	13635	Identifier	m_knownWidgets		13627	0					
ANR	13636	Identifier	isEmpty		13627	1					
ANR	13637	ArgumentList			13627	1					
ANR	13638	CompoundStatement		4:8:74:156	13627	1					
ANR	13639	IdentifierDeclStatement	QStringList widgets ;	209:8:5102:5121	13627	0	True				
ANR	13640	IdentifierDecl	widgets		13627	0					
ANR	13641	IdentifierDeclType	QStringList		13627	0					
ANR	13642	Identifier	widgets		13627	1					
ANR	13643	IdentifierDeclStatement	KPluginInfo :: List infoLs = Plasma :: PluginLoader :: self ( ) -> listAppletInfo ( QString ( ) ) ;	210:8:5131:5213	13627	1	True				
ANR	13644	IdentifierDecl	infoLs = Plasma :: PluginLoader :: self ( ) -> listAppletInfo ( QString ( ) )		13627	0					
ANR	13645	IdentifierDeclType	KPluginInfo :: List		13627	0					
ANR	13646	Identifier	infoLs		13627	1					
ANR	13647	AssignmentExpression	infoLs = Plasma :: PluginLoader :: self ( ) -> listAppletInfo ( QString ( ) )		13627	2		=			
ANR	13648	Identifier	infoLs		13627	0					
ANR	13649	CallExpression	Plasma :: PluginLoader :: self ( ) -> listAppletInfo ( QString ( ) )		13627	1					
ANR	13650	Callee	Plasma :: PluginLoader :: self ( ) -> listAppletInfo		13627	0					
ANR	13651	PtrMemberAccess	Plasma :: PluginLoader :: self ( ) -> listAppletInfo		13627	0					
ANR	13652	CallExpression	Plasma :: PluginLoader :: self ( )		13627	0					
ANR	13653	Callee	Plasma :: PluginLoader :: self		13627	0					
ANR	13654	Identifier	Plasma :: PluginLoader :: self		13627	0					
ANR	13655	ArgumentList			13627	1					
ANR	13656	Identifier	listAppletInfo		13627	1					
ANR	13657	ArgumentList	QString ( )		13627	1					
ANR	13658	Argument	QString ( )		13627	0					
ANR	13659	CallExpression	QString ( )		13627	0					
ANR	13660	Callee	QString		13627	0					
ANR	13661	Identifier	QString		13627	0					
ANR	13662	ArgumentList			13627	1					
ANR	13663	Statement	foreach	212:8:5224:5230	13627	2	True				
ANR	13664	Statement	(	212:16:5232:5232	13627	3	True				
ANR	13665	Statement	const	212:17:5233:5237	13627	4	True				
ANR	13666	Statement	KPluginInfo	212:23:5239:5249	13627	5	True				
ANR	13667	Statement	&	212:35:5251:5251	13627	6	True				
ANR	13668	Statement	info	212:36:5252:5255	13627	7	True				
ANR	13669	Statement	","	212:40:5256:5256	13627	8	True				
ANR	13670	Statement	infoLs	212:42:5258:5263	13627	9	True				
ANR	13671	Statement	)	212:48:5264:5264	13627	10	True				
ANR	13672	CompoundStatement		6:50:209:209	13627	11					
ANR	13673	ExpressionStatement	widgets . append ( info . pluginName ( ) )	213:12:5280:5313	13627	0	True				
ANR	13674	CallExpression	widgets . append ( info . pluginName ( ) )		13627	0					
ANR	13675	Callee	widgets . append		13627	0					
ANR	13676	MemberAccess	widgets . append		13627	0					
ANR	13677	Identifier	widgets		13627	0					
ANR	13678	Identifier	append		13627	1					
ANR	13679	ArgumentList	info . pluginName ( )		13627	1					
ANR	13680	Argument	info . pluginName ( )		13627	0					
ANR	13681	CallExpression	info . pluginName ( )		13627	0					
ANR	13682	Callee	info . pluginName		13627	0					
ANR	13683	MemberAccess	info . pluginName		13627	0					
ANR	13684	Identifier	info		13627	0					
ANR	13685	Identifier	pluginName		13627	1					
ANR	13686	ArgumentList			13627	1					
ANR	13687	Statement	const_cast	216:8:5334:5343	13627	12	True				
ANR	13688	Statement	<	216:18:5344:5344	13627	13	True				
ANR	13689	Statement	AppInterface	216:19:5345:5356	13627	14	True				
ANR	13690	Statement	*	216:32:5358:5358	13627	15	True				
ANR	13691	Statement	>	216:33:5359:5359	13627	16	True				
ANR	13692	ExpressionStatement	( this ) -> m_knownWidgets = widgets	216:34:5360:5392	13627	17	True				
ANR	13693	AssignmentExpression	( this ) -> m_knownWidgets = widgets		13627	0		=			
ANR	13694	PtrMemberAccess	( this ) -> m_knownWidgets		13627	0					
ANR	13695	Identifier	this		13627	0					
ANR	13696	Identifier	m_knownWidgets		13627	1					
ANR	13697	Identifier	widgets		13627	1					
ANR	13698	ReturnStatement	return m_knownWidgets ;	219:4:5405:5426	13627	1	True				
ANR	13699	Identifier	m_knownWidgets		13627	0					
ANR	13700	ReturnType	QStringList		13627	1					
ANR	13701	Identifier	AppInterface :: knownWidgetTypes		13627	2					
ANR	13702	ParameterList			13627	3					
ANR	13703	CFGEntryNode	ENTRY		13627		True				
ANR	13704	CFGExitNode	EXIT		13627		True				
ANR	13705	Symbol	m_knownWidgets		13627						
ANR	13706	Symbol	this		13627						
ANR	13707	Symbol	widgets		13627						
ANR	13708	Symbol	* this		13627						
ANR	13709	Symbol	QString		13627						
ANR	13710	Symbol	( this ) -> m_knownWidgets		13627						
ANR	13711	Symbol	Plasma :: PluginLoader :: self ( ) -> listAppletInfo		13627						
ANR	13712	Symbol	m_knownWidgets . isEmpty		13627						
ANR	13713	Symbol	Plasma :: PluginLoader :: self		13627						
ANR	13714	Symbol	* Plasma :: PluginLoader :: self		13627						
ANR	13715	Symbol	info . pluginName		13627						
ANR	13716	Symbol	infoLs		13627						
ANR	13717	Symbol	info		13627						
ANR	13718	Function	AppInterface :: knownActivityTypes	222:0:5431:5547							
ANR	13719	FunctionDef	AppInterface :: knownActivityTypes ()		13718	0					
ANR	13720	CompoundStatement		223:0:5484:5547	13718	0					
ANR	13721	ReturnStatement	"return knownContainmentTypes ( QStringLiteral ( ""desktop"" ) ) ;"	224:4:5490:5545	13718	0	True				
ANR	13722	CallExpression	"knownContainmentTypes ( QStringLiteral ( ""desktop"" ) )"		13718	0					
ANR	13723	Callee	knownContainmentTypes		13718	0					
ANR	13724	Identifier	knownContainmentTypes		13718	0					
ANR	13725	ArgumentList	"QStringLiteral ( ""desktop"" )"		13718	1					
ANR	13726	Argument	"QStringLiteral ( ""desktop"" )"		13718	0					
ANR	13727	CallExpression	"QStringLiteral ( ""desktop"" )"		13718	0					
ANR	13728	Callee	QStringLiteral		13718	0					
ANR	13729	Identifier	QStringLiteral		13718	0					
ANR	13730	ArgumentList	"""desktop"""		13718	1					
ANR	13731	Argument	"""desktop"""		13718	0					
ANR	13732	PrimaryExpression	"""desktop"""		13718	0					
ANR	13733	ReturnType	QStringList		13718	1					
ANR	13734	Identifier	AppInterface :: knownActivityTypes		13718	2					
ANR	13735	ParameterList			13718	3					
ANR	13736	CFGEntryNode	ENTRY		13718		True				
ANR	13737	CFGExitNode	EXIT		13718		True				
ANR	13738	Symbol	knownContainmentTypes		13718						
ANR	13739	Symbol	QStringLiteral		13718						
ANR	13740	Function	AppInterface :: knownPanelTypes	227:0:5550:5661							
ANR	13741	FunctionDef	AppInterface :: knownPanelTypes ()		13740	0					
ANR	13742	CompoundStatement		228:0:5600:5661	13740	0					
ANR	13743	ReturnStatement	"return knownContainmentTypes ( QStringLiteral ( ""panel"" ) ) ;"	229:4:5606:5659	13740	0	True				
ANR	13744	CallExpression	"knownContainmentTypes ( QStringLiteral ( ""panel"" ) )"		13740	0					
ANR	13745	Callee	knownContainmentTypes		13740	0					
ANR	13746	Identifier	knownContainmentTypes		13740	0					
ANR	13747	ArgumentList	"QStringLiteral ( ""panel"" )"		13740	1					
ANR	13748	Argument	"QStringLiteral ( ""panel"" )"		13740	0					
ANR	13749	CallExpression	"QStringLiteral ( ""panel"" )"		13740	0					
ANR	13750	Callee	QStringLiteral		13740	0					
ANR	13751	Identifier	QStringLiteral		13740	0					
ANR	13752	ArgumentList	"""panel"""		13740	1					
ANR	13753	Argument	"""panel"""		13740	0					
ANR	13754	PrimaryExpression	"""panel"""		13740	0					
ANR	13755	ReturnType	QStringList		13740	1					
ANR	13756	Identifier	AppInterface :: knownPanelTypes		13740	2					
ANR	13757	ParameterList			13740	3					
ANR	13758	CFGEntryNode	ENTRY		13740		True				
ANR	13759	CFGExitNode	EXIT		13740		True				
ANR	13760	Symbol	knownContainmentTypes		13740						
ANR	13761	Symbol	QStringLiteral		13740						
ANR	13762	Function	AppInterface :: knownContainmentTypes	232:0:5664:5983							
ANR	13763	FunctionDef	AppInterface :: knownContainmentTypes (const QString & type)		13762	0					
ANR	13764	CompoundStatement		233:0:5739:5983	13762	0					
ANR	13765	IdentifierDeclStatement	QStringList containments ;	234:4:5745:5769	13762	0	True				
ANR	13766	IdentifierDecl	containments		13762	0					
ANR	13767	IdentifierDeclType	QStringList		13762	0					
ANR	13768	Identifier	containments		13762	1					
ANR	13769	IdentifierDeclStatement	KPluginInfo :: List infoLs = Plasma :: PluginLoader :: listContainmentsOfType ( type ) ;	235:4:5775:5852	13762	1	True				
ANR	13770	IdentifierDecl	infoLs = Plasma :: PluginLoader :: listContainmentsOfType ( type )		13762	0					
ANR	13771	IdentifierDeclType	KPluginInfo :: List		13762	0					
ANR	13772	Identifier	infoLs		13762	1					
ANR	13773	AssignmentExpression	infoLs = Plasma :: PluginLoader :: listContainmentsOfType ( type )		13762	2		=			
ANR	13774	Identifier	infoLs		13762	0					
ANR	13775	CallExpression	Plasma :: PluginLoader :: listContainmentsOfType ( type )		13762	1					
ANR	13776	Callee	Plasma :: PluginLoader :: listContainmentsOfType		13762	0					
ANR	13777	Identifier	Plasma :: PluginLoader :: listContainmentsOfType		13762	0					
ANR	13778	ArgumentList	type		13762	1					
ANR	13779	Argument	type		13762	0					
ANR	13780	Identifier	type		13762	0					
ANR	13781	Statement	foreach	237:4:5859:5865	13762	2	True				
ANR	13782	Statement	(	237:12:5867:5867	13762	3	True				
ANR	13783	Statement	const	237:13:5868:5872	13762	4	True				
ANR	13784	Statement	KPluginInfo	237:19:5874:5884	13762	5	True				
ANR	13785	Statement	&	237:31:5886:5886	13762	6	True				
ANR	13786	Statement	info	237:32:5887:5890	13762	7	True				
ANR	13787	Statement	","	237:36:5891:5891	13762	8	True				
ANR	13788	Statement	infoLs	237:38:5893:5898	13762	9	True				
ANR	13789	Statement	)	237:44:5899:5899	13762	10	True				
ANR	13790	CompoundStatement		5:46:161:161	13762	11					
ANR	13791	ExpressionStatement	containments . append ( info . pluginName ( ) )	238:8:5911:5949	13762	0	True				
ANR	13792	CallExpression	containments . append ( info . pluginName ( ) )		13762	0					
ANR	13793	Callee	containments . append		13762	0					
ANR	13794	MemberAccess	containments . append		13762	0					
ANR	13795	Identifier	containments		13762	0					
ANR	13796	Identifier	append		13762	1					
ANR	13797	ArgumentList	info . pluginName ( )		13762	1					
ANR	13798	Argument	info . pluginName ( )		13762	0					
ANR	13799	CallExpression	info . pluginName ( )		13762	0					
ANR	13800	Callee	info . pluginName		13762	0					
ANR	13801	MemberAccess	info . pluginName		13762	0					
ANR	13802	Identifier	info		13762	0					
ANR	13803	Identifier	pluginName		13762	1					
ANR	13804	ArgumentList			13762	1					
ANR	13805	ReturnStatement	return containments ;	241:4:5962:5981	13762	12	True				
ANR	13806	Identifier	containments		13762	0					
ANR	13807	ReturnType	QStringList		13762	1					
ANR	13808	Identifier	AppInterface :: knownContainmentTypes		13762	2					
ANR	13809	ParameterList	const QString & type		13762	3					
ANR	13810	Parameter	const QString & type	232:48:5712:5730	13762	0	True				
ANR	13811	ParameterType	const QString &		13762	0					
ANR	13812	Identifier	type		13762	1					
ANR	13813	CFGEntryNode	ENTRY		13762		True				
ANR	13814	CFGExitNode	EXIT		13762		True				
ANR	13815	Symbol	containments		13762						
ANR	13816	Symbol	Plasma :: PluginLoader :: listContainmentsOfType		13762						
ANR	13817	Symbol	type		13762						
ANR	13818	Symbol	info . pluginName		13762						
ANR	13819	Symbol	infoLs		13762						
ANR	13820	Symbol	info		13762						
