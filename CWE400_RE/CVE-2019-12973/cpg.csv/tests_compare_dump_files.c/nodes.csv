command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	592970	File	data/converged/CVE-2019-12973_openjpeg/tests_compare_dump_files.c								
ANR	592971	ClassDef	test_cmp_parameters	42:8:1637:1753							
ANR	592972	DeclStmt									
ANR	592973	Decl							char	char *	base_filename
ANR	592974	DeclStmt									
ANR	592975	Decl							char	char *	test_filename
ANR	592976	DeclStmt									
ANR	592977	Decl							test_cmp_parameters	test_cmp_parameters	test_cmp_parameters
ANR	592978	Function	compare_dump_files_help_display	53:0:1949:2300							
ANR	592979	FunctionDef	compare_dump_files_help_display ()		592978	0					
ANR	592980	CompoundStatement		53:50:1999:2300	592978	0					
ANR	592981	ExpressionStatement	"fprintf ( stdout , ""\\nList of parameters for the compare_dump_files function  \\n"" )"	54:2:2003:2081	592978	0	True				
ANR	592982	CallExpression	"fprintf ( stdout , ""\\nList of parameters for the compare_dump_files function  \\n"" )"		592978	0					
ANR	592983	Callee	fprintf		592978	0					
ANR	592984	Identifier	fprintf		592978	0					
ANR	592985	ArgumentList	stdout		592978	1					
ANR	592986	Argument	stdout		592978	0					
ANR	592987	Identifier	stdout		592978	0					
ANR	592988	Argument	"""\\nList of parameters for the compare_dump_files function  \\n"""		592978	1					
ANR	592989	PrimaryExpression	"""\\nList of parameters for the compare_dump_files function  \\n"""		592978	0					
ANR	592990	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	55:2:2085:2105	592978	1	True				
ANR	592991	CallExpression	"fprintf ( stdout , ""\\n"" )"		592978	0					
ANR	592992	Callee	fprintf		592978	0					
ANR	592993	Identifier	fprintf		592978	0					
ANR	592994	ArgumentList	stdout		592978	1					
ANR	592995	Argument	stdout		592978	0					
ANR	592996	Identifier	stdout		592978	0					
ANR	592997	Argument	"""\\n"""		592978	1					
ANR	592998	PrimaryExpression	"""\\n"""		592978	0					
ANR	592999	ExpressionStatement	"fprintf ( stdout , ""  -b \\t REQUIRED \\t filename to the reference/baseline dump file \\n"" )"	56:2:2109:2194	592978	2	True				
ANR	593000	CallExpression	"fprintf ( stdout , ""  -b \\t REQUIRED \\t filename to the reference/baseline dump file \\n"" )"		592978	0					
ANR	593001	Callee	fprintf		592978	0					
ANR	593002	Identifier	fprintf		592978	0					
ANR	593003	ArgumentList	stdout		592978	1					
ANR	593004	Argument	stdout		592978	0					
ANR	593005	Identifier	stdout		592978	0					
ANR	593006	Argument	"""  -b \\t REQUIRED \\t filename to the reference/baseline dump file \\n"""		592978	1					
ANR	593007	PrimaryExpression	"""  -b \\t REQUIRED \\t filename to the reference/baseline dump file \\n"""		592978	0					
ANR	593008	ExpressionStatement	"fprintf ( stdout , ""  -t \\t REQUIRED \\t filename to the test dump file image\\n"" )"	57:2:2198:2274	592978	3	True				
ANR	593009	CallExpression	"fprintf ( stdout , ""  -t \\t REQUIRED \\t filename to the test dump file image\\n"" )"		592978	0					
ANR	593010	Callee	fprintf		592978	0					
ANR	593011	Identifier	fprintf		592978	0					
ANR	593012	ArgumentList	stdout		592978	1					
ANR	593013	Argument	stdout		592978	0					
ANR	593014	Identifier	stdout		592978	0					
ANR	593015	Argument	"""  -t \\t REQUIRED \\t filename to the test dump file image\\n"""		592978	1					
ANR	593016	PrimaryExpression	"""  -t \\t REQUIRED \\t filename to the test dump file image\\n"""		592978	0					
ANR	593017	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	58:2:2278:2298	592978	4	True				
ANR	593018	CallExpression	"fprintf ( stdout , ""\\n"" )"		592978	0					
ANR	593019	Callee	fprintf		592978	0					
ANR	593020	Identifier	fprintf		592978	0					
ANR	593021	ArgumentList	stdout		592978	1					
ANR	593022	Argument	stdout		592978	0					
ANR	593023	Identifier	stdout		592978	0					
ANR	593024	Argument	"""\\n"""		592978	1					
ANR	593025	PrimaryExpression	"""\\n"""		592978	0					
ANR	593026	ReturnType	static void		592978	1					
ANR	593027	Identifier	compare_dump_files_help_display		592978	2					
ANR	593028	ParameterList			592978	3					
ANR	593029	CFGEntryNode	ENTRY		592978		True				
ANR	593030	CFGExitNode	EXIT		592978		True				
ANR	593031	Symbol	stdout		592978						
ANR	593032	Function	parse_cmdline_cmp	63:0:2487:4125							
ANR	593033	FunctionDef	"parse_cmdline_cmp (int argc , char * * argv , test_cmp_parameters * param)"		593032	0					
ANR	593034	CompoundStatement		64:0:2567:4125	593032	0					
ANR	593035	IdentifierDeclStatement	"size_t sizemembasefile , sizememtestfile ;"	65:2:2571:2610	593032	0	True				
ANR	593036	IdentifierDecl	sizemembasefile		593032	0					
ANR	593037	IdentifierDeclType	size_t		593032	0					
ANR	593038	Identifier	sizemembasefile		593032	1					
ANR	593039	IdentifierDecl	sizememtestfile		593032	1					
ANR	593040	IdentifierDeclType	size_t		593032	0					
ANR	593041	Identifier	sizememtestfile		593032	1					
ANR	593042	IdentifierDeclStatement	int index ;	66:2:2614:2623	593032	1	True				
ANR	593043	IdentifierDecl	index		593032	0					
ANR	593044	IdentifierDeclType	int		593032	0					
ANR	593045	Identifier	index		593032	1					
ANR	593046	IdentifierDeclStatement	"const char optlist [ ] = ""b:t:"" ;"	67:2:2627:2656	593032	2	True				
ANR	593047	IdentifierDecl	"optlist [ ] = ""b:t:"""		593032	0					
ANR	593048	IdentifierDeclType	const char [ ]		593032	0					
ANR	593049	Identifier	optlist		593032	1					
ANR	593050	AssignmentExpression	"optlist [ ] = ""b:t:"""		593032	2		=			
ANR	593051	Identifier	optlist		593032	0					
ANR	593052	PrimaryExpression	"""b:t:"""		593032	1					
ANR	593053	IdentifierDeclStatement	int c ;	68:2:2660:2665	593032	3	True				
ANR	593054	IdentifierDecl	c		593032	0					
ANR	593055	IdentifierDeclType	int		593032	0					
ANR	593056	Identifier	c		593032	1					
ANR	593057	ExpressionStatement	param -> base_filename = NULL	71:2:2694:2721	593032	4	True				
ANR	593058	AssignmentExpression	param -> base_filename = NULL		593032	0		=			
ANR	593059	PtrMemberAccess	param -> base_filename		593032	0					
ANR	593060	Identifier	param		593032	0					
ANR	593061	Identifier	base_filename		593032	1					
ANR	593062	Identifier	NULL		593032	1					
ANR	593063	ExpressionStatement	param -> test_filename = NULL	72:2:2725:2752	593032	5	True				
ANR	593064	AssignmentExpression	param -> test_filename = NULL		593032	0		=			
ANR	593065	PtrMemberAccess	param -> test_filename		593032	0					
ANR	593066	Identifier	param		593032	0					
ANR	593067	Identifier	test_filename		593032	1					
ANR	593068	Identifier	NULL		593032	1					
ANR	593069	ExpressionStatement	opj_opterr = 0	74:2:2757:2771	593032	6	True				
ANR	593070	AssignmentExpression	opj_opterr = 0		593032	0		=			
ANR	593071	Identifier	opj_opterr		593032	0					
ANR	593072	PrimaryExpression	0		593032	1					
ANR	593073	WhileStatement	"while ( ( c = opj_getopt ( argc , argv , optlist ) ) != - 1 )"		593032	7					
ANR	593074	Condition	"( c = opj_getopt ( argc , argv , optlist ) ) != - 1"	76:9:2783:2825	593032	0	True				
ANR	593075	EqualityExpression	"( c = opj_getopt ( argc , argv , optlist ) ) != - 1"		593032	0		!=			
ANR	593076	AssignmentExpression	"c = opj_getopt ( argc , argv , optlist )"		593032	0		=			
ANR	593077	Identifier	c		593032	0					
ANR	593078	CallExpression	"opj_getopt ( argc , argv , optlist )"		593032	1					
ANR	593079	Callee	opj_getopt		593032	0					
ANR	593080	Identifier	opj_getopt		593032	0					
ANR	593081	ArgumentList	argc		593032	1					
ANR	593082	Argument	argc		593032	0					
ANR	593083	Identifier	argc		593032	0					
ANR	593084	Argument	argv		593032	1					
ANR	593085	Identifier	argv		593032	0					
ANR	593086	Argument	optlist		593032	2					
ANR	593087	Identifier	optlist		593032	0					
ANR	593088	UnaryOperationExpression	- 1		593032	1					
ANR	593089	UnaryOperator	-		593032	0					
ANR	593090	PrimaryExpression	1		593032	1					
ANR	593091	SwitchStatement	switch ( c )		593032	1					
ANR	593092	Condition	c	77:12:2840:2840	593032	0	True				
ANR	593093	Identifier	c		593032	0					
ANR	593094	CompoundStatement		15:6:281:281	593032	1					
ANR	593095	Label	case 'b' :	79:4:2855:2863	593032	0	True				
ANR	593096	ExpressionStatement	sizemembasefile = strlen ( opj_optarg ) + 1	80:6:2871:2911	593032	1	True				
ANR	593097	AssignmentExpression	sizemembasefile = strlen ( opj_optarg ) + 1		593032	0		=			
ANR	593098	Identifier	sizemembasefile		593032	0					
ANR	593099	AdditiveExpression	strlen ( opj_optarg ) + 1		593032	1		+			
ANR	593100	CallExpression	strlen ( opj_optarg )		593032	0					
ANR	593101	Callee	strlen		593032	0					
ANR	593102	Identifier	strlen		593032	0					
ANR	593103	ArgumentList	opj_optarg		593032	1					
ANR	593104	Argument	opj_optarg		593032	0					
ANR	593105	Identifier	opj_optarg		593032	0					
ANR	593106	PrimaryExpression	1		593032	1					
ANR	593107	ExpressionStatement	param -> base_filename = ( char * ) malloc ( sizemembasefile )	81:6:2919:2973	593032	2	True				
ANR	593108	AssignmentExpression	param -> base_filename = ( char * ) malloc ( sizemembasefile )		593032	0		=			
ANR	593109	PtrMemberAccess	param -> base_filename		593032	0					
ANR	593110	Identifier	param		593032	0					
ANR	593111	Identifier	base_filename		593032	1					
ANR	593112	CastExpression	( char * ) malloc ( sizemembasefile )		593032	1					
ANR	593113	CastTarget	char *		593032	0					
ANR	593114	CallExpression	malloc ( sizemembasefile )		593032	1					
ANR	593115	Callee	malloc		593032	0					
ANR	593116	Identifier	malloc		593032	0					
ANR	593117	ArgumentList	sizemembasefile		593032	1					
ANR	593118	Argument	sizemembasefile		593032	0					
ANR	593119	Identifier	sizemembasefile		593032	0					
ANR	593120	ExpressionStatement	"strcpy ( param -> base_filename , opj_optarg )"	82:6:2981:3021	593032	3	True				
ANR	593121	CallExpression	"strcpy ( param -> base_filename , opj_optarg )"		593032	0					
ANR	593122	Callee	strcpy		593032	0					
ANR	593123	Identifier	strcpy		593032	0					
ANR	593124	ArgumentList	param -> base_filename		593032	1					
ANR	593125	Argument	param -> base_filename		593032	0					
ANR	593126	PtrMemberAccess	param -> base_filename		593032	0					
ANR	593127	Identifier	param		593032	0					
ANR	593128	Identifier	base_filename		593032	1					
ANR	593129	Argument	opj_optarg		593032	1					
ANR	593130	Identifier	opj_optarg		593032	0					
ANR	593131	BreakStatement	break ;	84:6:3158:3163	593032	4	True				
ANR	593132	Label	case 't' :	85:4:3169:3177	593032	5	True				
ANR	593133	ExpressionStatement	sizememtestfile = strlen ( opj_optarg ) + 1	86:6:3185:3225	593032	6	True				
ANR	593134	AssignmentExpression	sizememtestfile = strlen ( opj_optarg ) + 1		593032	0		=			
ANR	593135	Identifier	sizememtestfile		593032	0					
ANR	593136	AdditiveExpression	strlen ( opj_optarg ) + 1		593032	1		+			
ANR	593137	CallExpression	strlen ( opj_optarg )		593032	0					
ANR	593138	Callee	strlen		593032	0					
ANR	593139	Identifier	strlen		593032	0					
ANR	593140	ArgumentList	opj_optarg		593032	1					
ANR	593141	Argument	opj_optarg		593032	0					
ANR	593142	Identifier	opj_optarg		593032	0					
ANR	593143	PrimaryExpression	1		593032	1					
ANR	593144	ExpressionStatement	param -> test_filename = ( char * ) malloc ( sizememtestfile )	87:6:3233:3287	593032	7	True				
ANR	593145	AssignmentExpression	param -> test_filename = ( char * ) malloc ( sizememtestfile )		593032	0		=			
ANR	593146	PtrMemberAccess	param -> test_filename		593032	0					
ANR	593147	Identifier	param		593032	0					
ANR	593148	Identifier	test_filename		593032	1					
ANR	593149	CastExpression	( char * ) malloc ( sizememtestfile )		593032	1					
ANR	593150	CastTarget	char *		593032	0					
ANR	593151	CallExpression	malloc ( sizememtestfile )		593032	1					
ANR	593152	Callee	malloc		593032	0					
ANR	593153	Identifier	malloc		593032	0					
ANR	593154	ArgumentList	sizememtestfile		593032	1					
ANR	593155	Argument	sizememtestfile		593032	0					
ANR	593156	Identifier	sizememtestfile		593032	0					
ANR	593157	ExpressionStatement	"strcpy ( param -> test_filename , opj_optarg )"	88:6:3295:3335	593032	8	True				
ANR	593158	CallExpression	"strcpy ( param -> test_filename , opj_optarg )"		593032	0					
ANR	593159	Callee	strcpy		593032	0					
ANR	593160	Identifier	strcpy		593032	0					
ANR	593161	ArgumentList	param -> test_filename		593032	1					
ANR	593162	Argument	param -> test_filename		593032	0					
ANR	593163	PtrMemberAccess	param -> test_filename		593032	0					
ANR	593164	Identifier	param		593032	0					
ANR	593165	Identifier	test_filename		593032	1					
ANR	593166	Argument	opj_optarg		593032	1					
ANR	593167	Identifier	opj_optarg		593032	0					
ANR	593168	BreakStatement	break ;	90:6:3471:3476	593032	9	True				
ANR	593169	Label	case '?' :	91:4:3482:3490	593032	10	True				
ANR	593170	IfStatement	if ( ( opj_optopt == 'b' ) || ( opj_optopt == 't' ) )		593032	11					
ANR	593171	Condition	( opj_optopt == 'b' ) || ( opj_optopt == 't' )	92:11:3503:3544	593032	0	True				
ANR	593172	OrExpression	( opj_optopt == 'b' ) || ( opj_optopt == 't' )		593032	0		||			
ANR	593173	EqualityExpression	opj_optopt == 'b'		593032	0		==			
ANR	593174	Identifier	opj_optopt		593032	0					
ANR	593175	PrimaryExpression	'b'		593032	1					
ANR	593176	EqualityExpression	opj_optopt == 't'		593032	1		==			
ANR	593177	Identifier	opj_optopt		593032	0					
ANR	593178	PrimaryExpression	't'		593032	1					
ANR	593179	ExpressionStatement	"fprintf ( stderr , ""Option -%c requires an argument.\\n"" , opj_optopt )"	93:8:3556:3621	593032	1	True				
ANR	593180	CallExpression	"fprintf ( stderr , ""Option -%c requires an argument.\\n"" , opj_optopt )"		593032	0					
ANR	593181	Callee	fprintf		593032	0					
ANR	593182	Identifier	fprintf		593032	0					
ANR	593183	ArgumentList	stderr		593032	1					
ANR	593184	Argument	stderr		593032	0					
ANR	593185	Identifier	stderr		593032	0					
ANR	593186	Argument	"""Option -%c requires an argument.\\n"""		593032	1					
ANR	593187	PrimaryExpression	"""Option -%c requires an argument.\\n"""		593032	0					
ANR	593188	Argument	opj_optopt		593032	2					
ANR	593189	Identifier	opj_optopt		593032	0					
ANR	593190	ElseStatement	else		593032	0					
ANR	593191	IfStatement	if ( isprint ( opj_optopt ) )		593032	0					
ANR	593192	Condition	isprint ( opj_optopt )	95:12:3646:3664	593032	0	True				
ANR	593193	CallExpression	isprint ( opj_optopt )		593032	0					
ANR	593194	Callee	isprint		593032	0					
ANR	593195	Identifier	isprint		593032	0					
ANR	593196	ArgumentList	opj_optopt		593032	1					
ANR	593197	Argument	opj_optopt		593032	0					
ANR	593198	Identifier	opj_optopt		593032	0					
ANR	593199	ExpressionStatement	"fprintf ( stderr , ""Unknown option `-%c'.\\n"" , opj_optopt )"	95:33:3667:3721	593032	1	True				
ANR	593200	CallExpression	"fprintf ( stderr , ""Unknown option `-%c'.\\n"" , opj_optopt )"		593032	0					
ANR	593201	Callee	fprintf		593032	0					
ANR	593202	Identifier	fprintf		593032	0					
ANR	593203	ArgumentList	stderr		593032	1					
ANR	593204	Argument	stderr		593032	0					
ANR	593205	Identifier	stderr		593032	0					
ANR	593206	Argument	"""Unknown option `-%c'.\\n"""		593032	1					
ANR	593207	PrimaryExpression	"""Unknown option `-%c'.\\n"""		593032	0					
ANR	593208	Argument	opj_optopt		593032	2					
ANR	593209	Identifier	opj_optopt		593032	0					
ANR	593210	ElseStatement	else		593032	0					
ANR	593211	ExpressionStatement	"fprintf ( stderr , ""Unknown option character `\\\\x%x'.\\n"" , opj_optopt )"	96:13:3736:3802	593032	0	True				
ANR	593212	CallExpression	"fprintf ( stderr , ""Unknown option character `\\\\x%x'.\\n"" , opj_optopt )"		593032	0					
ANR	593213	Callee	fprintf		593032	0					
ANR	593214	Identifier	fprintf		593032	0					
ANR	593215	ArgumentList	stderr		593032	1					
ANR	593216	Argument	stderr		593032	0					
ANR	593217	Identifier	stderr		593032	0					
ANR	593218	Argument	"""Unknown option character `\\\\x%x'.\\n"""		593032	1					
ANR	593219	PrimaryExpression	"""Unknown option character `\\\\x%x'.\\n"""		593032	0					
ANR	593220	Argument	opj_optopt		593032	2					
ANR	593221	Identifier	opj_optopt		593032	0					
ANR	593222	ReturnStatement	return 1 ;	97:6:3810:3818	593032	12	True				
ANR	593223	PrimaryExpression	1		593032	0					
ANR	593224	Label	default :	98:4:3824:3831	593032	13	True				
ANR	593225	Identifier	default		593032	0					
ANR	593226	ExpressionStatement	"fprintf ( stderr , ""WARNING -> this option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"	99:6:3839:3921	593032	14	True				
ANR	593227	CallExpression	"fprintf ( stderr , ""WARNING -> this option is not valid \\""-%c %s\\""\\n"" , c , opj_optarg )"		593032	0					
ANR	593228	Callee	fprintf		593032	0					
ANR	593229	Identifier	fprintf		593032	0					
ANR	593230	ArgumentList	stderr		593032	1					
ANR	593231	Argument	stderr		593032	0					
ANR	593232	Identifier	stderr		593032	0					
ANR	593233	Argument	"""WARNING -> this option is not valid \\""-%c %s\\""\\n"""		593032	1					
ANR	593234	PrimaryExpression	"""WARNING -> this option is not valid \\""-%c %s\\""\\n"""		593032	0					
ANR	593235	Argument	c		593032	2					
ANR	593236	Identifier	c		593032	0					
ANR	593237	Argument	opj_optarg		593032	3					
ANR	593238	Identifier	opj_optarg		593032	0					
ANR	593239	BreakStatement	break ;	100:6:3929:3934	593032	15	True				
ANR	593240	IfStatement	if ( opj_optind != argc )		593032	8					
ANR	593241	Condition	opj_optind != argc	103:6:3951:3968	593032	0	True				
ANR	593242	EqualityExpression	opj_optind != argc		593032	0		!=			
ANR	593243	Identifier	opj_optind		593032	0					
ANR	593244	Identifier	argc		593032	1					
ANR	593245	CompoundStatement		41:4:1407:1407	593032	1					
ANR	593246	ForStatement	for ( index = opj_optind ; index < argc ; index ++ )		593032	0					
ANR	593247	ForInit	index = opj_optind ;	105:9:3986:4004	593032	0	True				
ANR	593248	AssignmentExpression	index = opj_optind		593032	0		=			
ANR	593249	Identifier	index		593032	0					
ANR	593250	Identifier	opj_optind		593032	1					
ANR	593251	Condition	index < argc	105:29:4006:4017	593032	1	True				
ANR	593252	RelationalExpression	index < argc		593032	0		<			
ANR	593253	Identifier	index		593032	0					
ANR	593254	Identifier	argc		593032	1					
ANR	593255	PostIncDecOperationExpression	index ++	105:43:4020:4026	593032	2	True				
ANR	593256	Identifier	index		593032	0					
ANR	593257	IncDec	++		593032	1					
ANR	593258	ExpressionStatement	"fprintf ( stderr , ""Non-option argument %s\\n"" , argv [ index ] )"	106:6:4035:4090	593032	3	True				
ANR	593259	CallExpression	"fprintf ( stderr , ""Non-option argument %s\\n"" , argv [ index ] )"		593032	0					
ANR	593260	Callee	fprintf		593032	0					
ANR	593261	Identifier	fprintf		593032	0					
ANR	593262	ArgumentList	stderr		593032	1					
ANR	593263	Argument	stderr		593032	0					
ANR	593264	Identifier	stderr		593032	0					
ANR	593265	Argument	"""Non-option argument %s\\n"""		593032	1					
ANR	593266	PrimaryExpression	"""Non-option argument %s\\n"""		593032	0					
ANR	593267	Argument	argv [ index ]		593032	2					
ANR	593268	ArrayIndexing	argv [ index ]		593032	0					
ANR	593269	Identifier	argv		593032	0					
ANR	593270	Identifier	index		593032	1					
ANR	593271	ReturnStatement	return 1 ;	107:4:4096:4104	593032	1	True				
ANR	593272	PrimaryExpression	1		593032	0					
ANR	593273	ReturnStatement	return 0 ;	110:2:4115:4123	593032	9	True				
ANR	593274	PrimaryExpression	0		593032	0					
ANR	593275	ReturnType	static int		593032	1					
ANR	593276	Identifier	parse_cmdline_cmp		593032	2					
ANR	593277	ParameterList	"int argc , char * * argv , test_cmp_parameters * param"		593032	3					
ANR	593278	Parameter	int argc	63:29:2516:2523	593032	0	True				
ANR	593279	ParameterType	int		593032	0					
ANR	593280	Identifier	argc		593032	1					
ANR	593281	Parameter	char * * argv	63:39:2526:2536	593032	1	True				
ANR	593282	ParameterType	char * *		593032	0					
ANR	593283	Identifier	argv		593032	1					
ANR	593284	Parameter	test_cmp_parameters * param	63:52:2539:2564	593032	2	True				
ANR	593285	ParameterType	test_cmp_parameters *		593032	0					
ANR	593286	Identifier	param		593032	1					
ANR	593287	CFGEntryNode	ENTRY		593032		True				
ANR	593288	CFGExitNode	EXIT		593032		True				
ANR	593289	Symbol	argc		593032						
ANR	593290	Symbol	param -> base_filename		593032						
ANR	593291	Symbol	malloc		593032						
ANR	593292	Symbol	c		593032						
ANR	593293	Symbol	NULL		593032						
ANR	593294	Symbol	opj_optarg		593032						
ANR	593295	Symbol	* index		593032						
ANR	593296	Symbol	isprint		593032						
ANR	593297	Symbol	index		593032						
ANR	593298	Symbol	opj_optopt		593032						
ANR	593299	Symbol	* argv		593032						
ANR	593300	Symbol	stderr		593032						
ANR	593301	Symbol	argv		593032						
ANR	593302	Symbol	opj_getopt		593032						
ANR	593303	Symbol	* param		593032						
ANR	593304	Symbol	strlen		593032						
ANR	593305	Symbol	param		593032						
ANR	593306	Symbol	optlist		593032						
ANR	593307	Symbol	opj_opterr		593032						
ANR	593308	Symbol	sizememtestfile		593032						
ANR	593309	Symbol	sizemembasefile		593032						
ANR	593310	Symbol	param -> test_filename		593032						
ANR	593311	Symbol	opj_optind		593032						
ANR	593312	Function	main	116:0:4299:6039							
ANR	593313	FunctionDef	"main (int argc , char * * argv)"		593312	0					
ANR	593314	CompoundStatement		117:0:4331:6039	593312	0					
ANR	593315	IdentifierDeclStatement	test_cmp_parameters inParam ;	118:2:4335:4362	593312	0	True				
ANR	593316	IdentifierDecl	inParam		593312	0					
ANR	593317	IdentifierDeclType	test_cmp_parameters		593312	0					
ANR	593318	Identifier	inParam		593312	1					
ANR	593319	IdentifierDeclStatement	"FILE * fbase = NULL , * ftest = NULL ;"	119:2:4366:4395	593312	1	True				
ANR	593320	IdentifierDecl	* fbase = NULL		593312	0					
ANR	593321	IdentifierDeclType	FILE *		593312	0					
ANR	593322	Identifier	fbase		593312	1					
ANR	593323	AssignmentExpression	* fbase = NULL		593312	2		=			
ANR	593324	Identifier	NULL		593312	0					
ANR	593325	Identifier	NULL		593312	1					
ANR	593326	IdentifierDecl	* ftest = NULL		593312	1					
ANR	593327	IdentifierDeclType	FILE *		593312	0					
ANR	593328	Identifier	ftest		593312	1					
ANR	593329	AssignmentExpression	* ftest = NULL		593312	2		=			
ANR	593330	Identifier	NULL		593312	0					
ANR	593331	Identifier	NULL		593312	1					
ANR	593332	IdentifierDeclStatement	int same = 0 ;	120:2:4399:4411	593312	2	True				
ANR	593333	IdentifierDecl	same = 0		593312	0					
ANR	593334	IdentifierDeclType	int		593312	0					
ANR	593335	Identifier	same		593312	1					
ANR	593336	AssignmentExpression	same = 0		593312	2		=			
ANR	593337	Identifier	same		593312	0					
ANR	593338	PrimaryExpression	0		593312	1					
ANR	593339	IdentifierDeclStatement	char lbase [ 512 ] ;	121:2:4415:4430	593312	3	True				
ANR	593340	IdentifierDecl	lbase [ 512 ]		593312	0					
ANR	593341	IdentifierDeclType	char [ 512 ]		593312	0					
ANR	593342	Identifier	lbase		593312	1					
ANR	593343	PrimaryExpression	512		593312	2					
ANR	593344	IdentifierDeclStatement	char strbase [ 512 ] ;	122:2:4434:4451	593312	4	True				
ANR	593345	IdentifierDecl	strbase [ 512 ]		593312	0					
ANR	593346	IdentifierDeclType	char [ 512 ]		593312	0					
ANR	593347	Identifier	strbase		593312	1					
ANR	593348	PrimaryExpression	512		593312	2					
ANR	593349	IdentifierDeclStatement	char ltest [ 512 ] ;	123:2:4455:4470	593312	5	True				
ANR	593350	IdentifierDecl	ltest [ 512 ]		593312	0					
ANR	593351	IdentifierDeclType	char [ 512 ]		593312	0					
ANR	593352	Identifier	ltest		593312	1					
ANR	593353	PrimaryExpression	512		593312	2					
ANR	593354	IdentifierDeclStatement	char strtest [ 512 ] ;	124:2:4474:4491	593312	6	True				
ANR	593355	IdentifierDecl	strtest [ 512 ]		593312	0					
ANR	593356	IdentifierDeclType	char [ 512 ]		593312	0					
ANR	593357	Identifier	strtest		593312	1					
ANR	593358	PrimaryExpression	512		593312	2					
ANR	593359	IfStatement	"if ( parse_cmdline_cmp ( argc , argv , & inParam ) == 1 )"		593312	7					
ANR	593360	Condition	"parse_cmdline_cmp ( argc , argv , & inParam ) == 1"	126:6:4500:4543	593312	0	True				
ANR	593361	EqualityExpression	"parse_cmdline_cmp ( argc , argv , & inParam ) == 1"		593312	0		==			
ANR	593362	CallExpression	"parse_cmdline_cmp ( argc , argv , & inParam )"		593312	0					
ANR	593363	Callee	parse_cmdline_cmp		593312	0					
ANR	593364	Identifier	parse_cmdline_cmp		593312	0					
ANR	593365	ArgumentList	argc		593312	1					
ANR	593366	Argument	argc		593312	0					
ANR	593367	Identifier	argc		593312	0					
ANR	593368	Argument	argv		593312	1					
ANR	593369	Identifier	argv		593312	0					
ANR	593370	Argument	& inParam		593312	2					
ANR	593371	UnaryOperationExpression	& inParam		593312	0					
ANR	593372	UnaryOperator	&		593312	0					
ANR	593373	Identifier	inParam		593312	1					
ANR	593374	PrimaryExpression	1		593312	1					
ANR	593375	CompoundStatement		11:4:219:219	593312	1					
ANR	593376	ExpressionStatement	compare_dump_files_help_display ( )	128:4:4557:4590	593312	0	True				
ANR	593377	CallExpression	compare_dump_files_help_display ( )		593312	0					
ANR	593378	Callee	compare_dump_files_help_display		593312	0					
ANR	593379	Identifier	compare_dump_files_help_display		593312	0					
ANR	593380	ArgumentList			593312	1					
ANR	593381	GotoStatement	goto cleanup ;	129:4:4596:4608	593312	1	True				
ANR	593382	Identifier	cleanup		593312	0					
ANR	593383	ExpressionStatement	"printf ( ""******Parameters********* \\n"" )"	133:2:4645:4683	593312	8	True				
ANR	593384	CallExpression	"printf ( ""******Parameters********* \\n"" )"		593312	0					
ANR	593385	Callee	printf		593312	0					
ANR	593386	Identifier	printf		593312	0					
ANR	593387	ArgumentList	"""******Parameters********* \\n"""		593312	1					
ANR	593388	Argument	"""******Parameters********* \\n"""		593312	0					
ANR	593389	PrimaryExpression	"""******Parameters********* \\n"""		593312	0					
ANR	593390	Statement	printf	134:2:4687:4692	593312	9	True				
ANR	593391	Statement	(	134:8:4693:4693	593312	10	True				
ANR	593392	Statement	""" base_filename = %s\\n"""	134:9:4694:4716	593312	11	True				
ANR	593393	Statement	""" test_filename = %s\\n"""	135:4:4722:4744	593312	12	True				
ANR	593394	Statement	","	135:27:4745:4745	593312	13	True				
ANR	593395	Statement	inParam	136:4:4751:4757	593312	14	True				
ANR	593396	Statement	.	136:11:4758:4758	593312	15	True				
ANR	593397	Statement	base_filename	136:12:4759:4771	593312	16	True				
ANR	593398	Statement	","	136:25:4772:4772	593312	17	True				
ANR	593399	Statement	inParam	136:27:4774:4780	593312	18	True				
ANR	593400	Statement	.	136:34:4781:4781	593312	19	True				
ANR	593401	Statement	test_filename	136:35:4782:4794	593312	20	True				
ANR	593402	Statement	)	136:48:4795:4795	593312	21	True				
ANR	593403	ExpressionStatement		136:49:4796:4796	593312	22	True				
ANR	593404	ExpressionStatement	"printf ( ""************************* \\n"" )"	137:2:4800:4838	593312	23	True				
ANR	593405	CallExpression	"printf ( ""************************* \\n"" )"		593312	0					
ANR	593406	Callee	printf		593312	0					
ANR	593407	Identifier	printf		593312	0					
ANR	593408	ArgumentList	"""************************* \\n"""		593312	1					
ANR	593409	Argument	"""************************* \\n"""		593312	0					
ANR	593410	PrimaryExpression	"""************************* \\n"""		593312	0					
ANR	593411	ExpressionStatement	"printf ( ""Try to open: %s for reading ... "" , inParam . base_filename )"	140:2:4866:4931	593312	24	True				
ANR	593412	CallExpression	"printf ( ""Try to open: %s for reading ... "" , inParam . base_filename )"		593312	0					
ANR	593413	Callee	printf		593312	0					
ANR	593414	Identifier	printf		593312	0					
ANR	593415	ArgumentList	"""Try to open: %s for reading ... """		593312	1					
ANR	593416	Argument	"""Try to open: %s for reading ... """		593312	0					
ANR	593417	PrimaryExpression	"""Try to open: %s for reading ... """		593312	0					
ANR	593418	Argument	inParam . base_filename		593312	1					
ANR	593419	MemberAccess	inParam . base_filename		593312	0					
ANR	593420	Identifier	inParam		593312	0					
ANR	593421	Identifier	base_filename		593312	1					
ANR	593422	IfStatement	"if ( ( fbase = fopen ( inParam . base_filename , ""rb"" ) ) == NULL )"		593312	25					
ANR	593423	Condition	"( fbase = fopen ( inParam . base_filename , ""rb"" ) ) == NULL"	141:5:4938:4987	593312	0	True				
ANR	593424	EqualityExpression	"( fbase = fopen ( inParam . base_filename , ""rb"" ) ) == NULL"		593312	0		==			
ANR	593425	AssignmentExpression	"fbase = fopen ( inParam . base_filename , ""rb"" )"		593312	0		=			
ANR	593426	Identifier	fbase		593312	0					
ANR	593427	CallExpression	"fopen ( inParam . base_filename , ""rb"" )"		593312	1					
ANR	593428	Callee	fopen		593312	0					
ANR	593429	Identifier	fopen		593312	0					
ANR	593430	ArgumentList	inParam . base_filename		593312	1					
ANR	593431	Argument	inParam . base_filename		593312	0					
ANR	593432	MemberAccess	inParam . base_filename		593312	0					
ANR	593433	Identifier	inParam		593312	0					
ANR	593434	Identifier	base_filename		593312	1					
ANR	593435	Argument	"""rb"""		593312	1					
ANR	593436	PrimaryExpression	"""rb"""		593312	0					
ANR	593437	Identifier	NULL		593312	1					
ANR	593438	CompoundStatement		26:4:662:662	593312	1					
ANR	593439	GotoStatement	goto cleanup ;	143:4:5000:5012	593312	0	True				
ANR	593440	Identifier	cleanup		593312	0					
ANR	593441	ExpressionStatement	"printf ( ""Ok.\\n"" )"	145:2:5022:5037	593312	26	True				
ANR	593442	CallExpression	"printf ( ""Ok.\\n"" )"		593312	0					
ANR	593443	Callee	printf		593312	0					
ANR	593444	Identifier	printf		593312	0					
ANR	593445	ArgumentList	"""Ok.\\n"""		593312	1					
ANR	593446	Argument	"""Ok.\\n"""		593312	0					
ANR	593447	PrimaryExpression	"""Ok.\\n"""		593312	0					
ANR	593448	ExpressionStatement	"printf ( ""Try to open: %s for reading ... "" , inParam . test_filename )"	148:2:5065:5130	593312	27	True				
ANR	593449	CallExpression	"printf ( ""Try to open: %s for reading ... "" , inParam . test_filename )"		593312	0					
ANR	593450	Callee	printf		593312	0					
ANR	593451	Identifier	printf		593312	0					
ANR	593452	ArgumentList	"""Try to open: %s for reading ... """		593312	1					
ANR	593453	Argument	"""Try to open: %s for reading ... """		593312	0					
ANR	593454	PrimaryExpression	"""Try to open: %s for reading ... """		593312	0					
ANR	593455	Argument	inParam . test_filename		593312	1					
ANR	593456	MemberAccess	inParam . test_filename		593312	0					
ANR	593457	Identifier	inParam		593312	0					
ANR	593458	Identifier	test_filename		593312	1					
ANR	593459	IfStatement	"if ( ( ftest = fopen ( inParam . test_filename , ""rb"" ) ) == NULL )"		593312	28					
ANR	593460	Condition	"( ftest = fopen ( inParam . test_filename , ""rb"" ) ) == NULL"	149:5:5137:5186	593312	0	True				
ANR	593461	EqualityExpression	"( ftest = fopen ( inParam . test_filename , ""rb"" ) ) == NULL"		593312	0		==			
ANR	593462	AssignmentExpression	"ftest = fopen ( inParam . test_filename , ""rb"" )"		593312	0		=			
ANR	593463	Identifier	ftest		593312	0					
ANR	593464	CallExpression	"fopen ( inParam . test_filename , ""rb"" )"		593312	1					
ANR	593465	Callee	fopen		593312	0					
ANR	593466	Identifier	fopen		593312	0					
ANR	593467	ArgumentList	inParam . test_filename		593312	1					
ANR	593468	Argument	inParam . test_filename		593312	0					
ANR	593469	MemberAccess	inParam . test_filename		593312	0					
ANR	593470	Identifier	inParam		593312	0					
ANR	593471	Identifier	test_filename		593312	1					
ANR	593472	Argument	"""rb"""		593312	1					
ANR	593473	PrimaryExpression	"""rb"""		593312	0					
ANR	593474	Identifier	NULL		593312	1					
ANR	593475	CompoundStatement		34:4:861:861	593312	1					
ANR	593476	GotoStatement	goto cleanup ;	151:4:5199:5211	593312	0	True				
ANR	593477	Identifier	cleanup		593312	0					
ANR	593478	ExpressionStatement	"printf ( ""Ok.\\n"" )"	153:2:5221:5236	593312	29	True				
ANR	593479	CallExpression	"printf ( ""Ok.\\n"" )"		593312	0					
ANR	593480	Callee	printf		593312	0					
ANR	593481	Identifier	printf		593312	0					
ANR	593482	ArgumentList	"""Ok.\\n"""		593312	1					
ANR	593483	Argument	"""Ok.\\n"""		593312	0					
ANR	593484	PrimaryExpression	"""Ok.\\n"""		593312	0					
ANR	593485	WhileStatement	"while ( fgets ( lbase , sizeof ( lbase ) , fbase ) && fgets ( ltest , sizeof ( ltest ) , ftest ) )"		593312	30					
ANR	593486	Condition	"fgets ( lbase , sizeof ( lbase ) , fbase ) && fgets ( ltest , sizeof ( ltest ) , ftest )"	155:9:5248:5317	593312	0	True				
ANR	593487	AndExpression	"fgets ( lbase , sizeof ( lbase ) , fbase ) && fgets ( ltest , sizeof ( ltest ) , ftest )"		593312	0		&&			
ANR	593488	CallExpression	"fgets ( lbase , sizeof ( lbase ) , fbase )"		593312	0					
ANR	593489	Callee	fgets		593312	0					
ANR	593490	Identifier	fgets		593312	0					
ANR	593491	ArgumentList	lbase		593312	1					
ANR	593492	Argument	lbase		593312	0					
ANR	593493	Identifier	lbase		593312	0					
ANR	593494	Argument	sizeof ( lbase )		593312	1					
ANR	593495	SizeofExpression	sizeof ( lbase )		593312	0					
ANR	593496	Sizeof	sizeof		593312	0					
ANR	593497	SizeofOperand	lbase		593312	1					
ANR	593498	Argument	fbase		593312	2					
ANR	593499	Identifier	fbase		593312	0					
ANR	593500	CallExpression	"fgets ( ltest , sizeof ( ltest ) , ftest )"		593312	1					
ANR	593501	Callee	fgets		593312	0					
ANR	593502	Identifier	fgets		593312	0					
ANR	593503	ArgumentList	ltest		593312	1					
ANR	593504	Argument	ltest		593312	0					
ANR	593505	Identifier	ltest		593312	0					
ANR	593506	Argument	sizeof ( ltest )		593312	1					
ANR	593507	SizeofExpression	sizeof ( ltest )		593312	0					
ANR	593508	Sizeof	sizeof		593312	0					
ANR	593509	SizeofOperand	ltest		593312	1					
ANR	593510	Argument	ftest		593312	2					
ANR	593511	Identifier	ftest		593312	0					
ANR	593512	CompoundStatement		42:4:1053:1102	593312	1					
ANR	593513	IdentifierDeclStatement	"int nbase = sscanf ( lbase , ""%511[^\\r\\n]"" , strbase ) ;"	157:4:5330:5379	593312	0	True				
ANR	593514	IdentifierDecl	"nbase = sscanf ( lbase , ""%511[^\\r\\n]"" , strbase )"		593312	0					
ANR	593515	IdentifierDeclType	int		593312	0					
ANR	593516	Identifier	nbase		593312	1					
ANR	593517	AssignmentExpression	"nbase = sscanf ( lbase , ""%511[^\\r\\n]"" , strbase )"		593312	2		=			
ANR	593518	Identifier	nbase		593312	0					
ANR	593519	CallExpression	"sscanf ( lbase , ""%511[^\\r\\n]"" , strbase )"		593312	1					
ANR	593520	Callee	sscanf		593312	0					
ANR	593521	Identifier	sscanf		593312	0					
ANR	593522	ArgumentList	lbase		593312	1					
ANR	593523	Argument	lbase		593312	0					
ANR	593524	Identifier	lbase		593312	0					
ANR	593525	Argument	"""%511[^\\r\\n]"""		593312	1					
ANR	593526	PrimaryExpression	"""%511[^\\r\\n]"""		593312	0					
ANR	593527	Argument	strbase		593312	2					
ANR	593528	Identifier	strbase		593312	0					
ANR	593529	IdentifierDeclStatement	"int ntest = sscanf ( ltest , ""%511[^\\r\\n]"" , strtest ) ;"	158:4:5385:5434	593312	1	True				
ANR	593530	IdentifierDecl	"ntest = sscanf ( ltest , ""%511[^\\r\\n]"" , strtest )"		593312	0					
ANR	593531	IdentifierDeclType	int		593312	0					
ANR	593532	Identifier	ntest		593312	1					
ANR	593533	AssignmentExpression	"ntest = sscanf ( ltest , ""%511[^\\r\\n]"" , strtest )"		593312	2		=			
ANR	593534	Identifier	ntest		593312	0					
ANR	593535	CallExpression	"sscanf ( ltest , ""%511[^\\r\\n]"" , strtest )"		593312	1					
ANR	593536	Callee	sscanf		593312	0					
ANR	593537	Identifier	sscanf		593312	0					
ANR	593538	ArgumentList	ltest		593312	1					
ANR	593539	Argument	ltest		593312	0					
ANR	593540	Identifier	ltest		593312	0					
ANR	593541	Argument	"""%511[^\\r\\n]"""		593312	1					
ANR	593542	PrimaryExpression	"""%511[^\\r\\n]"""		593312	0					
ANR	593543	Argument	strtest		593312	2					
ANR	593544	Identifier	strtest		593312	0					
ANR	593545	ExpressionStatement	assert ( nbase != 511 && ntest != 511 )	159:4:5440:5478	593312	2	True				
ANR	593546	CallExpression	assert ( nbase != 511 && ntest != 511 )		593312	0					
ANR	593547	Callee	assert		593312	0					
ANR	593548	Identifier	assert		593312	0					
ANR	593549	ArgumentList	nbase != 511 && ntest != 511		593312	1					
ANR	593550	Argument	nbase != 511 && ntest != 511		593312	0					
ANR	593551	AndExpression	nbase != 511 && ntest != 511		593312	0		&&			
ANR	593552	EqualityExpression	nbase != 511		593312	0		!=			
ANR	593553	Identifier	nbase		593312	0					
ANR	593554	PrimaryExpression	511		593312	1					
ANR	593555	EqualityExpression	ntest != 511		593312	1		!=			
ANR	593556	Identifier	ntest		593312	0					
ANR	593557	PrimaryExpression	511		593312	1					
ANR	593558	IfStatement	if ( nbase != 1 || ntest != 1 )		593312	3					
ANR	593559	Condition	nbase != 1 || ntest != 1	160:8:5488:5511	593312	0	True				
ANR	593560	OrExpression	nbase != 1 || ntest != 1		593312	0		||			
ANR	593561	EqualityExpression	nbase != 1		593312	0		!=			
ANR	593562	Identifier	nbase		593312	0					
ANR	593563	PrimaryExpression	1		593312	1					
ANR	593564	EqualityExpression	ntest != 1		593312	1		!=			
ANR	593565	Identifier	ntest		593312	0					
ANR	593566	PrimaryExpression	1		593312	1					
ANR	593567	CompoundStatement		45:6:1189:1189	593312	1					
ANR	593568	ExpressionStatement	"fprintf ( stderr , ""could not parse line from files\\n"" )"	162:6:5529:5582	593312	0	True				
ANR	593569	CallExpression	"fprintf ( stderr , ""could not parse line from files\\n"" )"		593312	0					
ANR	593570	Callee	fprintf		593312	0					
ANR	593571	Identifier	fprintf		593312	0					
ANR	593572	ArgumentList	stderr		593312	1					
ANR	593573	Argument	stderr		593312	0					
ANR	593574	Identifier	stderr		593312	0					
ANR	593575	Argument	"""could not parse line from files\\n"""		593312	1					
ANR	593576	PrimaryExpression	"""could not parse line from files\\n"""		593312	0					
ANR	593577	GotoStatement	goto cleanup ;	163:6:5590:5602	593312	1	True				
ANR	593578	Identifier	cleanup		593312	0					
ANR	593579	IfStatement	"if ( strcmp ( strbase , strtest ) != 0 )"		593312	4					
ANR	593580	Condition	"strcmp ( strbase , strtest ) != 0"	165:8:5620:5650	593312	0	True				
ANR	593581	EqualityExpression	"strcmp ( strbase , strtest ) != 0"		593312	0		!=			
ANR	593582	CallExpression	"strcmp ( strbase , strtest )"		593312	0					
ANR	593583	Callee	strcmp		593312	0					
ANR	593584	Identifier	strcmp		593312	0					
ANR	593585	ArgumentList	strbase		593312	1					
ANR	593586	Argument	strbase		593312	0					
ANR	593587	Identifier	strbase		593312	0					
ANR	593588	Argument	strtest		593312	1					
ANR	593589	Identifier	strtest		593312	0					
ANR	593590	PrimaryExpression	0		593312	1					
ANR	593591	CompoundStatement		50:6:1328:1328	593312	1					
ANR	593592	ExpressionStatement	"fprintf ( stderr , ""<%s> vs. <%s>\\n"" , strbase , strtest )"	167:6:5668:5719	593312	0	True				
ANR	593593	CallExpression	"fprintf ( stderr , ""<%s> vs. <%s>\\n"" , strbase , strtest )"		593312	0					
ANR	593594	Callee	fprintf		593312	0					
ANR	593595	Identifier	fprintf		593312	0					
ANR	593596	ArgumentList	stderr		593312	1					
ANR	593597	Argument	stderr		593312	0					
ANR	593598	Identifier	stderr		593312	0					
ANR	593599	Argument	"""<%s> vs. <%s>\\n"""		593312	1					
ANR	593600	PrimaryExpression	"""<%s> vs. <%s>\\n"""		593312	0					
ANR	593601	Argument	strbase		593312	2					
ANR	593602	Identifier	strbase		593312	0					
ANR	593603	Argument	strtest		593312	3					
ANR	593604	Identifier	strtest		593312	0					
ANR	593605	GotoStatement	goto cleanup ;	168:6:5727:5739	593312	1	True				
ANR	593606	Identifier	cleanup		593312	0					
ANR	593607	ExpressionStatement	same = 1	172:2:5758:5766	593312	31	True				
ANR	593608	AssignmentExpression	same = 1		593312	0		=			
ANR	593609	Identifier	same		593312	0					
ANR	593610	PrimaryExpression	1		593312	1					
ANR	593611	ExpressionStatement	"printf ( ""\\n***** TEST SUCCEED: Files are the same. *****\\n"" )"	173:2:5770:5829	593312	32	True				
ANR	593612	CallExpression	"printf ( ""\\n***** TEST SUCCEED: Files are the same. *****\\n"" )"		593312	0					
ANR	593613	Callee	printf		593312	0					
ANR	593614	Identifier	printf		593312	0					
ANR	593615	ArgumentList	"""\\n***** TEST SUCCEED: Files are the same. *****\\n"""		593312	1					
ANR	593616	Argument	"""\\n***** TEST SUCCEED: Files are the same. *****\\n"""		593312	0					
ANR	593617	PrimaryExpression	"""\\n***** TEST SUCCEED: Files are the same. *****\\n"""		593312	0					
ANR	593618	Label	cleanup :	174:0:5831:5838	593312	33	True				
ANR	593619	Identifier	cleanup		593312	0					
ANR	593620	IfStatement	if ( fbase )		593312	34					
ANR	593621	Condition	fbase	176:5:5862:5866	593312	0	True				
ANR	593622	Identifier	fbase		593312	0					
ANR	593623	ExpressionStatement	fclose ( fbase )	176:12:5869:5882	593312	1	True				
ANR	593624	CallExpression	fclose ( fbase )		593312	0					
ANR	593625	Callee	fclose		593312	0					
ANR	593626	Identifier	fclose		593312	0					
ANR	593627	ArgumentList	fbase		593312	1					
ANR	593628	Argument	fbase		593312	0					
ANR	593629	Identifier	fbase		593312	0					
ANR	593630	IfStatement	if ( ftest )		593312	35					
ANR	593631	Condition	ftest	177:5:5889:5893	593312	0	True				
ANR	593632	Identifier	ftest		593312	0					
ANR	593633	ExpressionStatement	fclose ( ftest )	177:12:5896:5909	593312	1	True				
ANR	593634	CallExpression	fclose ( ftest )		593312	0					
ANR	593635	Callee	fclose		593312	0					
ANR	593636	Identifier	fclose		593312	0					
ANR	593637	ArgumentList	ftest		593312	1					
ANR	593638	Argument	ftest		593312	0					
ANR	593639	Identifier	ftest		593312	0					
ANR	593640	ExpressionStatement	free ( inParam . base_filename )	180:2:5933:5960	593312	36	True				
ANR	593641	CallExpression	free ( inParam . base_filename )		593312	0					
ANR	593642	Callee	free		593312	0					
ANR	593643	Identifier	free		593312	0					
ANR	593644	ArgumentList	inParam . base_filename		593312	1					
ANR	593645	Argument	inParam . base_filename		593312	0					
ANR	593646	MemberAccess	inParam . base_filename		593312	0					
ANR	593647	Identifier	inParam		593312	0					
ANR	593648	Identifier	base_filename		593312	1					
ANR	593649	ExpressionStatement	free ( inParam . test_filename )	181:2:5964:5991	593312	37	True				
ANR	593650	CallExpression	free ( inParam . test_filename )		593312	0					
ANR	593651	Callee	free		593312	0					
ANR	593652	Identifier	free		593312	0					
ANR	593653	ArgumentList	inParam . test_filename		593312	1					
ANR	593654	Argument	inParam . test_filename		593312	0					
ANR	593655	MemberAccess	inParam . test_filename		593312	0					
ANR	593656	Identifier	inParam		593312	0					
ANR	593657	Identifier	test_filename		593312	1					
ANR	593658	ReturnStatement	return same ? EXIT_SUCCESS : EXIT_FAILURE ;	183:2:5996:6037	593312	38	True				
ANR	593659	ConditionalExpression	same ? EXIT_SUCCESS : EXIT_FAILURE		593312	0					
ANR	593660	Condition	same		593312	0					
ANR	593661	Identifier	same		593312	0					
ANR	593662	Identifier	EXIT_SUCCESS		593312	1					
ANR	593663	Identifier	EXIT_FAILURE		593312	2					
ANR	593664	ReturnType	int		593312	1					
ANR	593665	Identifier	main		593312	2					
ANR	593666	ParameterList	"int argc , char * * argv"		593312	3					
ANR	593667	Parameter	int argc	116:9:4308:4315	593312	0	True				
ANR	593668	ParameterType	int		593312	0					
ANR	593669	Identifier	argc		593312	1					
ANR	593670	Parameter	char * * argv	116:19:4318:4328	593312	1	True				
ANR	593671	ParameterType	char * *		593312	0					
ANR	593672	Identifier	argv		593312	1					
ANR	593673	CFGEntryNode	ENTRY		593312		True				
ANR	593674	CFGExitNode	EXIT		593312		True				
ANR	593675	Symbol	argc		593312						
ANR	593676	Symbol	strcmp		593312						
ANR	593677	Symbol	fopen		593312						
ANR	593678	Symbol	lbase		593312						
ANR	593679	Symbol	NULL		593312						
ANR	593680	Symbol	nbase		593312						
ANR	593681	Symbol	ntest		593312						
ANR	593682	Symbol	& inParam		593312						
ANR	593683	Symbol	ftest		593312						
ANR	593684	Symbol	stderr		593312						
ANR	593685	Symbol	argv		593312						
ANR	593686	Symbol	fgets		593312						
ANR	593687	Symbol	inParam		593312						
ANR	593688	Symbol	strbase		593312						
ANR	593689	Symbol	inParam . test_filename		593312						
ANR	593690	Symbol	same		593312						
ANR	593691	Symbol	parse_cmdline_cmp		593312						
ANR	593692	Symbol	EXIT_FAILURE		593312						
ANR	593693	Symbol	ltest		593312						
ANR	593694	Symbol	sscanf		593312						
ANR	593695	Symbol	EXIT_SUCCESS		593312						
ANR	593696	Symbol	strtest		593312						
ANR	593697	Symbol	inParam . base_filename		593312						
ANR	593698	Symbol	fbase		593312						
