command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	137097	File	data/converged/CVE-2019-12973_openjpeg/src_bin_mj2_mj2_to_metadata.c								
ANR	137098	Function	error_callback	26:0:933:1070							
ANR	137099	FunctionDef	"error_callback (const char * msg , void * client_data)"		137098	0					
ANR	137100	CompoundStatement		27:0:989:1070	137098	0					
ANR	137101	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	28:4:995:1028	137098	0	True				
ANR	137102	IdentifierDecl	* stream = ( FILE * ) client_data		137098	0					
ANR	137103	IdentifierDeclType	FILE *		137098	0					
ANR	137104	Identifier	stream		137098	1					
ANR	137105	AssignmentExpression	* stream = ( FILE * ) client_data		137098	2		=			
ANR	137106	Identifier	stream		137098	0					
ANR	137107	CastExpression	( FILE * ) client_data		137098	1					
ANR	137108	CastTarget	FILE *		137098	0					
ANR	137109	Identifier	client_data		137098	1					
ANR	137110	ExpressionStatement	"fprintf ( stream , ""[ERROR] %s"" , msg )"	29:4:1034:1068	137098	1	True				
ANR	137111	CallExpression	"fprintf ( stream , ""[ERROR] %s"" , msg )"		137098	0					
ANR	137112	Callee	fprintf		137098	0					
ANR	137113	Identifier	fprintf		137098	0					
ANR	137114	ArgumentList	stream		137098	1					
ANR	137115	Argument	stream		137098	0					
ANR	137116	Identifier	stream		137098	0					
ANR	137117	Argument	"""[ERROR] %s"""		137098	1					
ANR	137118	PrimaryExpression	"""[ERROR] %s"""		137098	0					
ANR	137119	Argument	msg		137098	2					
ANR	137120	Identifier	msg		137098	0					
ANR	137121	ReturnType	void		137098	1					
ANR	137122	Identifier	error_callback		137098	2					
ANR	137123	ParameterList	"const char * msg , void * client_data"		137098	3					
ANR	137124	Parameter	const char * msg	26:20:953:967	137098	0	True				
ANR	137125	ParameterType	const char *		137098	0					
ANR	137126	Identifier	msg		137098	1					
ANR	137127	Parameter	void * client_data	26:37:970:986	137098	1	True				
ANR	137128	ParameterType	void *		137098	0					
ANR	137129	Identifier	client_data		137098	1					
ANR	137130	CFGEntryNode	ENTRY		137098		True				
ANR	137131	CFGExitNode	EXIT		137098		True				
ANR	137132	Symbol	msg		137098						
ANR	137133	Symbol	client_data		137098						
ANR	137134	Symbol	stream		137098						
ANR	137135	Function	warning_callback	34:0:1135:1276							
ANR	137136	FunctionDef	"warning_callback (const char * msg , void * client_data)"		137135	0					
ANR	137137	CompoundStatement		35:0:1193:1276	137135	0					
ANR	137138	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	36:4:1199:1232	137135	0	True				
ANR	137139	IdentifierDecl	* stream = ( FILE * ) client_data		137135	0					
ANR	137140	IdentifierDeclType	FILE *		137135	0					
ANR	137141	Identifier	stream		137135	1					
ANR	137142	AssignmentExpression	* stream = ( FILE * ) client_data		137135	2		=			
ANR	137143	Identifier	stream		137135	0					
ANR	137144	CastExpression	( FILE * ) client_data		137135	1					
ANR	137145	CastTarget	FILE *		137135	0					
ANR	137146	Identifier	client_data		137135	1					
ANR	137147	ExpressionStatement	"fprintf ( stream , ""[WARNING] %s"" , msg )"	37:4:1238:1274	137135	1	True				
ANR	137148	CallExpression	"fprintf ( stream , ""[WARNING] %s"" , msg )"		137135	0					
ANR	137149	Callee	fprintf		137135	0					
ANR	137150	Identifier	fprintf		137135	0					
ANR	137151	ArgumentList	stream		137135	1					
ANR	137152	Argument	stream		137135	0					
ANR	137153	Identifier	stream		137135	0					
ANR	137154	Argument	"""[WARNING] %s"""		137135	1					
ANR	137155	PrimaryExpression	"""[WARNING] %s"""		137135	0					
ANR	137156	Argument	msg		137135	2					
ANR	137157	Identifier	msg		137135	0					
ANR	137158	ReturnType	void		137135	1					
ANR	137159	Identifier	warning_callback		137135	2					
ANR	137160	ParameterList	"const char * msg , void * client_data"		137135	3					
ANR	137161	Parameter	const char * msg	34:22:1157:1171	137135	0	True				
ANR	137162	ParameterType	const char *		137135	0					
ANR	137163	Identifier	msg		137135	1					
ANR	137164	Parameter	void * client_data	34:39:1174:1190	137135	1	True				
ANR	137165	ParameterType	void *		137135	0					
ANR	137166	Identifier	client_data		137135	1					
ANR	137167	CFGEntryNode	ENTRY		137135		True				
ANR	137168	CFGExitNode	EXIT		137135		True				
ANR	137169	Symbol	msg		137135						
ANR	137170	Symbol	client_data		137135						
ANR	137171	Symbol	stream		137135						
ANR	137172	Function	info_callback	42:0:1339:1474							
ANR	137173	FunctionDef	"info_callback (const char * msg , void * client_data)"		137172	0					
ANR	137174	CompoundStatement		43:0:1394:1474	137172	0					
ANR	137175	IdentifierDeclStatement	FILE * stream = ( FILE * ) client_data ;	44:4:1400:1433	137172	0	True				
ANR	137176	IdentifierDecl	* stream = ( FILE * ) client_data		137172	0					
ANR	137177	IdentifierDeclType	FILE *		137172	0					
ANR	137178	Identifier	stream		137172	1					
ANR	137179	AssignmentExpression	* stream = ( FILE * ) client_data		137172	2		=			
ANR	137180	Identifier	stream		137172	0					
ANR	137181	CastExpression	( FILE * ) client_data		137172	1					
ANR	137182	CastTarget	FILE *		137172	0					
ANR	137183	Identifier	client_data		137172	1					
ANR	137184	ExpressionStatement	"fprintf ( stream , ""[INFO] %s"" , msg )"	45:4:1439:1472	137172	1	True				
ANR	137185	CallExpression	"fprintf ( stream , ""[INFO] %s"" , msg )"		137172	0					
ANR	137186	Callee	fprintf		137172	0					
ANR	137187	Identifier	fprintf		137172	0					
ANR	137188	ArgumentList	stream		137172	1					
ANR	137189	Argument	stream		137172	0					
ANR	137190	Identifier	stream		137172	0					
ANR	137191	Argument	"""[INFO] %s"""		137172	1					
ANR	137192	PrimaryExpression	"""[INFO] %s"""		137172	0					
ANR	137193	Argument	msg		137172	2					
ANR	137194	Identifier	msg		137172	0					
ANR	137195	ReturnType	void		137172	1					
ANR	137196	Identifier	info_callback		137172	2					
ANR	137197	ParameterList	"const char * msg , void * client_data"		137172	3					
ANR	137198	Parameter	const char * msg	42:19:1358:1372	137172	0	True				
ANR	137199	ParameterType	const char *		137172	0					
ANR	137200	Identifier	msg		137172	1					
ANR	137201	Parameter	void * client_data	42:36:1375:1391	137172	1	True				
ANR	137202	ParameterType	void *		137172	0					
ANR	137203	Identifier	client_data		137172	1					
ANR	137204	CFGEntryNode	ENTRY		137172		True				
ANR	137205	CFGExitNode	EXIT		137172		True				
ANR	137206	Symbol	msg		137172						
ANR	137207	Symbol	client_data		137172						
ANR	137208	Symbol	stream		137172						
ANR	137209	Function	help_display	54:0:1582:5785							
ANR	137210	FunctionDef	help_display ()		137209	0					
ANR	137211	CompoundStatement		55:0:1602:5785	137209	0					
ANR	137212	ExpressionStatement	"fprintf ( stdout , ""                Help for the 'mj2_to_metadata' Program\\n"" )"	57:4:1712:1787	137209	0	True				
ANR	137213	CallExpression	"fprintf ( stdout , ""                Help for the 'mj2_to_metadata' Program\\n"" )"		137209	0					
ANR	137214	Callee	fprintf		137209	0					
ANR	137215	Identifier	fprintf		137209	0					
ANR	137216	ArgumentList	stdout		137209	1					
ANR	137217	Argument	stdout		137209	0					
ANR	137218	Identifier	stdout		137209	0					
ANR	137219	Argument	"""                Help for the 'mj2_to_metadata' Program\\n"""		137209	1					
ANR	137220	PrimaryExpression	"""                Help for the 'mj2_to_metadata' Program\\n"""		137209	0					
ANR	137221	ExpressionStatement	"fprintf ( stdout , ""                ======================================\\n"" )"	58:4:1793:1868	137209	1	True				
ANR	137222	CallExpression	"fprintf ( stdout , ""                ======================================\\n"" )"		137209	0					
ANR	137223	Callee	fprintf		137209	0					
ANR	137224	Identifier	fprintf		137209	0					
ANR	137225	ArgumentList	stdout		137209	1					
ANR	137226	Argument	stdout		137209	0					
ANR	137227	Identifier	stdout		137209	0					
ANR	137228	Argument	"""                ======================================\\n"""		137209	1					
ANR	137229	PrimaryExpression	"""                ======================================\\n"""		137209	0					
ANR	137230	ExpressionStatement	"fprintf ( stdout , ""The -h option displays this information on screen.\\n\\n"" )"	59:4:1874:1947	137209	2	True				
ANR	137231	CallExpression	"fprintf ( stdout , ""The -h option displays this information on screen.\\n\\n"" )"		137209	0					
ANR	137232	Callee	fprintf		137209	0					
ANR	137233	Identifier	fprintf		137209	0					
ANR	137234	ArgumentList	stdout		137209	1					
ANR	137235	Argument	stdout		137209	0					
ANR	137236	Identifier	stdout		137209	0					
ANR	137237	Argument	"""The -h option displays this information on screen.\\n\\n"""		137209	1					
ANR	137238	PrimaryExpression	"""The -h option displays this information on screen.\\n\\n"""		137209	0					
ANR	137239	ExpressionStatement	"fprintf ( stdout , ""mj2_to_metadata generates an XML file from a Motion JPEG 2000 file.\\n"" )"	61:4:1954:2054	137209	3	True				
ANR	137240	CallExpression	"fprintf ( stdout , ""mj2_to_metadata generates an XML file from a Motion JPEG 2000 file.\\n"" )"		137209	0					
ANR	137241	Callee	fprintf		137209	0					
ANR	137242	Identifier	fprintf		137209	0					
ANR	137243	ArgumentList	stdout		137209	1					
ANR	137244	Argument	stdout		137209	0					
ANR	137245	Identifier	stdout		137209	0					
ANR	137246	Argument	"""mj2_to_metadata generates an XML file from a Motion JPEG 2000 file.\\n"""		137209	1					
ANR	137247	PrimaryExpression	"""mj2_to_metadata generates an XML file from a Motion JPEG 2000 file.\\n"""		137209	0					
ANR	137248	ExpressionStatement	"fprintf ( stdout , ""The generated XML shows the structural, but not (yet) curatorial,\\n"" )"	63:4:2060:2158	137209	4	True				
ANR	137249	CallExpression	"fprintf ( stdout , ""The generated XML shows the structural, but not (yet) curatorial,\\n"" )"		137209	0					
ANR	137250	Callee	fprintf		137209	0					
ANR	137251	Identifier	fprintf		137209	0					
ANR	137252	ArgumentList	stdout		137209	1					
ANR	137253	Argument	stdout		137209	0					
ANR	137254	Identifier	stdout		137209	0					
ANR	137255	Argument	"""The generated XML shows the structural, but not (yet) curatorial,\\n"""		137209	1					
ANR	137256	PrimaryExpression	"""The generated XML shows the structural, but not (yet) curatorial,\\n"""		137209	0					
ANR	137257	ExpressionStatement	"fprintf ( stdout , ""metadata from the movie header and from the JPEG 2000 image and tile\\n"" )"	65:4:2164:2265	137209	5	True				
ANR	137258	CallExpression	"fprintf ( stdout , ""metadata from the movie header and from the JPEG 2000 image and tile\\n"" )"		137209	0					
ANR	137259	Callee	fprintf		137209	0					
ANR	137260	Identifier	fprintf		137209	0					
ANR	137261	ArgumentList	stdout		137209	1					
ANR	137262	Argument	stdout		137209	0					
ANR	137263	Identifier	stdout		137209	0					
ANR	137264	Argument	"""metadata from the movie header and from the JPEG 2000 image and tile\\n"""		137209	1					
ANR	137265	PrimaryExpression	"""metadata from the movie header and from the JPEG 2000 image and tile\\n"""		137209	0					
ANR	137266	ExpressionStatement	"fprintf ( stdout , ""headers of a sample frame.  Excluded: low-level packed-bits image data.\\n\\n"" )"	67:4:2271:2377	137209	6	True				
ANR	137267	CallExpression	"fprintf ( stdout , ""headers of a sample frame.  Excluded: low-level packed-bits image data.\\n\\n"" )"		137209	0					
ANR	137268	Callee	fprintf		137209	0					
ANR	137269	Identifier	fprintf		137209	0					
ANR	137270	ArgumentList	stdout		137209	1					
ANR	137271	Argument	stdout		137209	0					
ANR	137272	Identifier	stdout		137209	0					
ANR	137273	Argument	"""headers of a sample frame.  Excluded: low-level packed-bits image data.\\n\\n"""		137209	1					
ANR	137274	PrimaryExpression	"""headers of a sample frame.  Excluded: low-level packed-bits image data.\\n\\n"""		137209	0					
ANR	137275	ExpressionStatement	"fprintf ( stdout , ""By Default\\n"" )"	70:4:2384:2415	137209	7	True				
ANR	137276	CallExpression	"fprintf ( stdout , ""By Default\\n"" )"		137209	0					
ANR	137277	Callee	fprintf		137209	0					
ANR	137278	Identifier	fprintf		137209	0					
ANR	137279	ArgumentList	stdout		137209	1					
ANR	137280	Argument	stdout		137209	0					
ANR	137281	Identifier	stdout		137209	0					
ANR	137282	Argument	"""By Default\\n"""		137209	1					
ANR	137283	PrimaryExpression	"""By Default\\n"""		137209	0					
ANR	137284	ExpressionStatement	"fprintf ( stdout , ""----------\\n"" )"	71:4:2421:2452	137209	8	True				
ANR	137285	CallExpression	"fprintf ( stdout , ""----------\\n"" )"		137209	0					
ANR	137286	Callee	fprintf		137209	0					
ANR	137287	Identifier	fprintf		137209	0					
ANR	137288	ArgumentList	stdout		137209	1					
ANR	137289	Argument	stdout		137209	0					
ANR	137290	Identifier	stdout		137209	0					
ANR	137291	Argument	"""----------\\n"""		137209	1					
ANR	137292	PrimaryExpression	"""----------\\n"""		137209	0					
ANR	137293	ExpressionStatement	"fprintf ( stdout , ""The metadata includes the jp2 image and tile headers of the first frame.\\n"" )"	72:4:2458:2563	137209	9	True				
ANR	137294	CallExpression	"fprintf ( stdout , ""The metadata includes the jp2 image and tile headers of the first frame.\\n"" )"		137209	0					
ANR	137295	Callee	fprintf		137209	0					
ANR	137296	Identifier	fprintf		137209	0					
ANR	137297	ArgumentList	stdout		137209	1					
ANR	137298	Argument	stdout		137209	0					
ANR	137299	Identifier	stdout		137209	0					
ANR	137300	Argument	"""The metadata includes the jp2 image and tile headers of the first frame.\\n"""		137209	1					
ANR	137301	PrimaryExpression	"""The metadata includes the jp2 image and tile headers of the first frame.\\n"""		137209	0					
ANR	137302	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	74:4:2569:2590	137209	10	True				
ANR	137303	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137304	Callee	fprintf		137209	0					
ANR	137305	Identifier	fprintf		137209	0					
ANR	137306	ArgumentList	stdout		137209	1					
ANR	137307	Argument	stdout		137209	0					
ANR	137308	Identifier	stdout		137209	0					
ANR	137309	Argument	"""\\n"""		137209	1					
ANR	137310	PrimaryExpression	"""\\n"""		137209	0					
ANR	137311	ExpressionStatement	"fprintf ( stdout , ""Metadata values are shown in 'raw' form (e.g., hexadecimal) as stored in the\\n"" )"	75:4:2596:2705	137209	11	True				
ANR	137312	CallExpression	"fprintf ( stdout , ""Metadata values are shown in 'raw' form (e.g., hexadecimal) as stored in the\\n"" )"		137209	0					
ANR	137313	Callee	fprintf		137209	0					
ANR	137314	Identifier	fprintf		137209	0					
ANR	137315	ArgumentList	stdout		137209	1					
ANR	137316	Argument	stdout		137209	0					
ANR	137317	Identifier	stdout		137209	0					
ANR	137318	Argument	"""Metadata values are shown in 'raw' form (e.g., hexadecimal) as stored in the\\n"""		137209	1					
ANR	137319	PrimaryExpression	"""Metadata values are shown in 'raw' form (e.g., hexadecimal) as stored in the\\n"""		137209	0					
ANR	137320	ExpressionStatement	"fprintf ( stdout , ""file, and, if apt, in a 'derived' form that is more quickly grasped.\\n"" )"	77:4:2711:2812	137209	12	True				
ANR	137321	CallExpression	"fprintf ( stdout , ""file, and, if apt, in a 'derived' form that is more quickly grasped.\\n"" )"		137209	0					
ANR	137322	Callee	fprintf		137209	0					
ANR	137323	Identifier	fprintf		137209	0					
ANR	137324	ArgumentList	stdout		137209	1					
ANR	137325	Argument	stdout		137209	0					
ANR	137326	Identifier	stdout		137209	0					
ANR	137327	Argument	"""file, and, if apt, in a 'derived' form that is more quickly grasped.\\n"""		137209	1					
ANR	137328	PrimaryExpression	"""file, and, if apt, in a 'derived' form that is more quickly grasped.\\n"""		137209	0					
ANR	137329	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	79:4:2818:2839	137209	13	True				
ANR	137330	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137331	Callee	fprintf		137209	0					
ANR	137332	Identifier	fprintf		137209	0					
ANR	137333	ArgumentList	stdout		137209	1					
ANR	137334	Argument	stdout		137209	0					
ANR	137335	Identifier	stdout		137209	0					
ANR	137336	Argument	"""\\n"""		137209	1					
ANR	137337	PrimaryExpression	"""\\n"""		137209	0					
ANR	137338	ExpressionStatement	"fprintf ( stdout , ""Notes explaining the XML are embedded as terse comments.  These include\\n"" )"	80:4:2845:2949	137209	14	True				
ANR	137339	CallExpression	"fprintf ( stdout , ""Notes explaining the XML are embedded as terse comments.  These include\\n"" )"		137209	0					
ANR	137340	Callee	fprintf		137209	0					
ANR	137341	Identifier	fprintf		137209	0					
ANR	137342	ArgumentList	stdout		137209	1					
ANR	137343	Argument	stdout		137209	0					
ANR	137344	Identifier	stdout		137209	0					
ANR	137345	Argument	"""Notes explaining the XML are embedded as terse comments.  These include\\n"""		137209	1					
ANR	137346	PrimaryExpression	"""Notes explaining the XML are embedded as terse comments.  These include\\n"""		137209	0					
ANR	137347	ExpressionStatement	"fprintf ( stdout , ""   meaning of non-obvious tag abbreviations;\\n"" )"	82:4:2955:3020	137209	15	True				
ANR	137348	CallExpression	"fprintf ( stdout , ""   meaning of non-obvious tag abbreviations;\\n"" )"		137209	0					
ANR	137349	Callee	fprintf		137209	0					
ANR	137350	Identifier	fprintf		137209	0					
ANR	137351	ArgumentList	stdout		137209	1					
ANR	137352	Argument	stdout		137209	0					
ANR	137353	Identifier	stdout		137209	0					
ANR	137354	Argument	"""   meaning of non-obvious tag abbreviations;\\n"""		137209	1					
ANR	137355	PrimaryExpression	"""   meaning of non-obvious tag abbreviations;\\n"""		137209	0					
ANR	137356	ExpressionStatement	"fprintf ( stdout , ""   range and precision of valid values;\\n"" )"	83:4:3026:3086	137209	16	True				
ANR	137357	CallExpression	"fprintf ( stdout , ""   range and precision of valid values;\\n"" )"		137209	0					
ANR	137358	Callee	fprintf		137209	0					
ANR	137359	Identifier	fprintf		137209	0					
ANR	137360	ArgumentList	stdout		137209	1					
ANR	137361	Argument	stdout		137209	0					
ANR	137362	Identifier	stdout		137209	0					
ANR	137363	Argument	"""   range and precision of valid values;\\n"""		137209	1					
ANR	137364	PrimaryExpression	"""   range and precision of valid values;\\n"""		137209	0					
ANR	137365	ExpressionStatement	"fprintf ( stdout , ""   interpretations of values, such as enumerations; and\\n"" )"	84:4:3092:3168	137209	17	True				
ANR	137366	CallExpression	"fprintf ( stdout , ""   interpretations of values, such as enumerations; and\\n"" )"		137209	0					
ANR	137367	Callee	fprintf		137209	0					
ANR	137368	Identifier	fprintf		137209	0					
ANR	137369	ArgumentList	stdout		137209	1					
ANR	137370	Argument	stdout		137209	0					
ANR	137371	Identifier	stdout		137209	0					
ANR	137372	Argument	"""   interpretations of values, such as enumerations; and\\n"""		137209	1					
ANR	137373	PrimaryExpression	"""   interpretations of values, such as enumerations; and\\n"""		137209	0					
ANR	137374	ExpressionStatement	"fprintf ( stdout , ""   current implementation limitations.\\n"" )"	85:4:3174:3233	137209	18	True				
ANR	137375	CallExpression	"fprintf ( stdout , ""   current implementation limitations.\\n"" )"		137209	0					
ANR	137376	Callee	fprintf		137209	0					
ANR	137377	Identifier	fprintf		137209	0					
ANR	137378	ArgumentList	stdout		137209	1					
ANR	137379	Argument	stdout		137209	0					
ANR	137380	Identifier	stdout		137209	0					
ANR	137381	Argument	"""   current implementation limitations.\\n"""		137209	1					
ANR	137382	PrimaryExpression	"""   current implementation limitations.\\n"""		137209	0					
ANR	137383	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	86:4:3239:3260	137209	19	True				
ANR	137384	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137385	Callee	fprintf		137209	0					
ANR	137386	Identifier	fprintf		137209	0					
ANR	137387	ArgumentList	stdout		137209	1					
ANR	137388	Argument	stdout		137209	0					
ANR	137389	Identifier	stdout		137209	0					
ANR	137390	Argument	"""\\n"""		137209	1					
ANR	137391	PrimaryExpression	"""\\n"""		137209	0					
ANR	137392	ExpressionStatement	"fprintf ( stdout , ""The sample-size and chunk-offset tables, each with 1 row per frame, are not reported.\\n"" )"	87:4:3266:3384	137209	20	True				
ANR	137393	CallExpression	"fprintf ( stdout , ""The sample-size and chunk-offset tables, each with 1 row per frame, are not reported.\\n"" )"		137209	0					
ANR	137394	Callee	fprintf		137209	0					
ANR	137395	Identifier	fprintf		137209	0					
ANR	137396	ArgumentList	stdout		137209	1					
ANR	137397	Argument	stdout		137209	0					
ANR	137398	Identifier	stdout		137209	0					
ANR	137399	Argument	"""The sample-size and chunk-offset tables, each with 1 row per frame, are not reported.\\n"""		137209	1					
ANR	137400	PrimaryExpression	"""The sample-size and chunk-offset tables, each with 1 row per frame, are not reported.\\n"""		137209	0					
ANR	137401	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	89:4:3390:3411	137209	21	True				
ANR	137402	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137403	Callee	fprintf		137209	0					
ANR	137404	Identifier	fprintf		137209	0					
ANR	137405	ArgumentList	stdout		137209	1					
ANR	137406	Argument	stdout		137209	0					
ANR	137407	Identifier	stdout		137209	0					
ANR	137408	Argument	"""\\n"""		137209	1					
ANR	137409	PrimaryExpression	"""\\n"""		137209	0					
ANR	137410	ExpressionStatement	"fprintf ( stdout , ""The file is self-contained and no verification (e.g., against a DTD) is requested.\\n"" )"	90:4:3417:3532	137209	22	True				
ANR	137411	CallExpression	"fprintf ( stdout , ""The file is self-contained and no verification (e.g., against a DTD) is requested.\\n"" )"		137209	0					
ANR	137412	Callee	fprintf		137209	0					
ANR	137413	Identifier	fprintf		137209	0					
ANR	137414	ArgumentList	stdout		137209	1					
ANR	137415	Argument	stdout		137209	0					
ANR	137416	Identifier	stdout		137209	0					
ANR	137417	Argument	"""The file is self-contained and no verification (e.g., against a DTD) is requested.\\n"""		137209	1					
ANR	137418	PrimaryExpression	"""The file is self-contained and no verification (e.g., against a DTD) is requested.\\n"""		137209	0					
ANR	137419	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	92:4:3538:3559	137209	23	True				
ANR	137420	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137421	Callee	fprintf		137209	0					
ANR	137422	Identifier	fprintf		137209	0					
ANR	137423	ArgumentList	stdout		137209	1					
ANR	137424	Argument	stdout		137209	0					
ANR	137425	Identifier	stdout		137209	0					
ANR	137426	Argument	"""\\n"""		137209	1					
ANR	137427	PrimaryExpression	"""\\n"""		137209	0					
ANR	137428	ExpressionStatement	"fprintf ( stdout , ""Required Parameters (except with -h)\\n"" )"	93:4:3565:3622	137209	24	True				
ANR	137429	CallExpression	"fprintf ( stdout , ""Required Parameters (except with -h)\\n"" )"		137209	0					
ANR	137430	Callee	fprintf		137209	0					
ANR	137431	Identifier	fprintf		137209	0					
ANR	137432	ArgumentList	stdout		137209	1					
ANR	137433	Argument	stdout		137209	0					
ANR	137434	Identifier	stdout		137209	0					
ANR	137435	Argument	"""Required Parameters (except with -h)\\n"""		137209	1					
ANR	137436	PrimaryExpression	"""Required Parameters (except with -h)\\n"""		137209	0					
ANR	137437	ExpressionStatement	"fprintf ( stdout , ""------------------------------------\\n"" )"	94:4:3628:3685	137209	25	True				
ANR	137438	CallExpression	"fprintf ( stdout , ""------------------------------------\\n"" )"		137209	0					
ANR	137439	Callee	fprintf		137209	0					
ANR	137440	Identifier	fprintf		137209	0					
ANR	137441	ArgumentList	stdout		137209	1					
ANR	137442	Argument	stdout		137209	0					
ANR	137443	Identifier	stdout		137209	0					
ANR	137444	Argument	"""------------------------------------\\n"""		137209	1					
ANR	137445	PrimaryExpression	"""------------------------------------\\n"""		137209	0					
ANR	137446	ExpressionStatement	"fprintf ( stdout , ""[Caution: file strings that contain spaces should be wrapped with quotes.]\\n"" )"	95:4:3691:3798	137209	26	True				
ANR	137447	CallExpression	"fprintf ( stdout , ""[Caution: file strings that contain spaces should be wrapped with quotes.]\\n"" )"		137209	0					
ANR	137448	Callee	fprintf		137209	0					
ANR	137449	Identifier	fprintf		137209	0					
ANR	137450	ArgumentList	stdout		137209	1					
ANR	137451	Argument	stdout		137209	0					
ANR	137452	Identifier	stdout		137209	0					
ANR	137453	Argument	"""[Caution: file strings that contain spaces should be wrapped with quotes.]\\n"""		137209	1					
ANR	137454	PrimaryExpression	"""[Caution: file strings that contain spaces should be wrapped with quotes.]\\n"""		137209	0					
ANR	137455	ExpressionStatement	"fprintf ( stdout , ""-i input.mj2  : where 'input' is any source file name or path.\\n"" )"	97:4:3804:3899	137209	27	True				
ANR	137456	CallExpression	"fprintf ( stdout , ""-i input.mj2  : where 'input' is any source file name or path.\\n"" )"		137209	0					
ANR	137457	Callee	fprintf		137209	0					
ANR	137458	Identifier	fprintf		137209	0					
ANR	137459	ArgumentList	stdout		137209	1					
ANR	137460	Argument	stdout		137209	0					
ANR	137461	Identifier	stdout		137209	0					
ANR	137462	Argument	"""-i input.mj2  : where 'input' is any source file name or path.\\n"""		137209	1					
ANR	137463	PrimaryExpression	"""-i input.mj2  : where 'input' is any source file name or path.\\n"""		137209	0					
ANR	137464	ExpressionStatement	"fprintf ( stdout , ""                MJ2 files created with 'frames_to_mj2' are supported so far.\\n"" )"	99:4:3905:4014	137209	28	True				
ANR	137465	CallExpression	"fprintf ( stdout , ""                MJ2 files created with 'frames_to_mj2' are supported so far.\\n"" )"		137209	0					
ANR	137466	Callee	fprintf		137209	0					
ANR	137467	Identifier	fprintf		137209	0					
ANR	137468	ArgumentList	stdout		137209	1					
ANR	137469	Argument	stdout		137209	0					
ANR	137470	Identifier	stdout		137209	0					
ANR	137471	Argument	"""                MJ2 files created with 'frames_to_mj2' are supported so far.\\n"""		137209	1					
ANR	137472	PrimaryExpression	"""                MJ2 files created with 'frames_to_mj2' are supported so far.\\n"""		137209	0					
ANR	137473	ExpressionStatement	"fprintf ( stdout , ""                These are silent, single-track, 'MJ2 Simple Profile' videos.\\n"" )"	101:4:4020:4129	137209	29	True				
ANR	137474	CallExpression	"fprintf ( stdout , ""                These are silent, single-track, 'MJ2 Simple Profile' videos.\\n"" )"		137209	0					
ANR	137475	Callee	fprintf		137209	0					
ANR	137476	Identifier	fprintf		137209	0					
ANR	137477	ArgumentList	stdout		137209	1					
ANR	137478	Argument	stdout		137209	0					
ANR	137479	Identifier	stdout		137209	0					
ANR	137480	Argument	"""                These are silent, single-track, 'MJ2 Simple Profile' videos.\\n"""		137209	1					
ANR	137481	PrimaryExpression	"""                These are silent, single-track, 'MJ2 Simple Profile' videos.\\n"""		137209	0					
ANR	137482	ExpressionStatement	"fprintf ( stdout , ""-o output.xml : where 'output' is any destination file name or path.\\n"" )"	103:4:4135:4236	137209	30	True				
ANR	137483	CallExpression	"fprintf ( stdout , ""-o output.xml : where 'output' is any destination file name or path.\\n"" )"		137209	0					
ANR	137484	Callee	fprintf		137209	0					
ANR	137485	Identifier	fprintf		137209	0					
ANR	137486	ArgumentList	stdout		137209	1					
ANR	137487	Argument	stdout		137209	0					
ANR	137488	Identifier	stdout		137209	0					
ANR	137489	Argument	"""-o output.xml : where 'output' is any destination file name or path.\\n"""		137209	1					
ANR	137490	PrimaryExpression	"""-o output.xml : where 'output' is any destination file name or path.\\n"""		137209	0					
ANR	137491	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	105:4:4242:4263	137209	31	True				
ANR	137492	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137493	Callee	fprintf		137209	0					
ANR	137494	Identifier	fprintf		137209	0					
ANR	137495	ArgumentList	stdout		137209	1					
ANR	137496	Argument	stdout		137209	0					
ANR	137497	Identifier	stdout		137209	0					
ANR	137498	Argument	"""\\n"""		137209	1					
ANR	137499	PrimaryExpression	"""\\n"""		137209	0					
ANR	137500	ExpressionStatement	"fprintf ( stdout , ""Optional Parameters\\n"" )"	106:4:4269:4309	137209	32	True				
ANR	137501	CallExpression	"fprintf ( stdout , ""Optional Parameters\\n"" )"		137209	0					
ANR	137502	Callee	fprintf		137209	0					
ANR	137503	Identifier	fprintf		137209	0					
ANR	137504	ArgumentList	stdout		137209	1					
ANR	137505	Argument	stdout		137209	0					
ANR	137506	Identifier	stdout		137209	0					
ANR	137507	Argument	"""Optional Parameters\\n"""		137209	1					
ANR	137508	PrimaryExpression	"""Optional Parameters\\n"""		137209	0					
ANR	137509	ExpressionStatement	"fprintf ( stdout , ""-------------------\\n"" )"	107:4:4315:4355	137209	33	True				
ANR	137510	CallExpression	"fprintf ( stdout , ""-------------------\\n"" )"		137209	0					
ANR	137511	Callee	fprintf		137209	0					
ANR	137512	Identifier	fprintf		137209	0					
ANR	137513	ArgumentList	stdout		137209	1					
ANR	137514	Argument	stdout		137209	0					
ANR	137515	Identifier	stdout		137209	0					
ANR	137516	Argument	"""-------------------\\n"""		137209	1					
ANR	137517	PrimaryExpression	"""-------------------\\n"""		137209	0					
ANR	137518	ExpressionStatement	"fprintf ( stdout , ""-h            : Display this help information.\\n"" )"	108:4:4361:4428	137209	34	True				
ANR	137519	CallExpression	"fprintf ( stdout , ""-h            : Display this help information.\\n"" )"		137209	0					
ANR	137520	Callee	fprintf		137209	0					
ANR	137521	Identifier	fprintf		137209	0					
ANR	137522	ArgumentList	stdout		137209	1					
ANR	137523	Argument	stdout		137209	0					
ANR	137524	Identifier	stdout		137209	0					
ANR	137525	Argument	"""-h            : Display this help information.\\n"""		137209	1					
ANR	137526	PrimaryExpression	"""-h            : Display this help information.\\n"""		137209	0					
ANR	137527	ExpressionStatement	"fprintf ( stdout , ""-n            : Suppress all mj2_to_metadata notes.\\n"" )"	109:4:4434:4506	137209	35	True				
ANR	137528	CallExpression	"fprintf ( stdout , ""-n            : Suppress all mj2_to_metadata notes.\\n"" )"		137209	0					
ANR	137529	Callee	fprintf		137209	0					
ANR	137530	Identifier	fprintf		137209	0					
ANR	137531	ArgumentList	stdout		137209	1					
ANR	137532	Argument	stdout		137209	0					
ANR	137533	Identifier	stdout		137209	0					
ANR	137534	Argument	"""-n            : Suppress all mj2_to_metadata notes.\\n"""		137209	1					
ANR	137535	PrimaryExpression	"""-n            : Suppress all mj2_to_metadata notes.\\n"""		137209	0					
ANR	137536	ExpressionStatement	"fprintf ( stdout , ""-t            : Include sample-size and chunk-offset tables.\\n"" )"	110:4:4512:4605	137209	36	True				
ANR	137537	CallExpression	"fprintf ( stdout , ""-t            : Include sample-size and chunk-offset tables.\\n"" )"		137209	0					
ANR	137538	Callee	fprintf		137209	0					
ANR	137539	Identifier	fprintf		137209	0					
ANR	137540	ArgumentList	stdout		137209	1					
ANR	137541	Argument	stdout		137209	0					
ANR	137542	Identifier	stdout		137209	0					
ANR	137543	Argument	"""-t            : Include sample-size and chunk-offset tables.\\n"""		137209	1					
ANR	137544	PrimaryExpression	"""-t            : Include sample-size and chunk-offset tables.\\n"""		137209	0					
ANR	137545	ExpressionStatement	"fprintf ( stdout , ""-f n          : where n > 0.  Include jp2 header info for frame n [default=1].\\n"" )"	112:4:4611:4722	137209	37	True				
ANR	137546	CallExpression	"fprintf ( stdout , ""-f n          : where n > 0.  Include jp2 header info for frame n [default=1].\\n"" )"		137209	0					
ANR	137547	Callee	fprintf		137209	0					
ANR	137548	Identifier	fprintf		137209	0					
ANR	137549	ArgumentList	stdout		137209	1					
ANR	137550	Argument	stdout		137209	0					
ANR	137551	Identifier	stdout		137209	0					
ANR	137552	Argument	"""-f n          : where n > 0.  Include jp2 header info for frame n [default=1].\\n"""		137209	1					
ANR	137553	PrimaryExpression	"""-f n          : where n > 0.  Include jp2 header info for frame n [default=1].\\n"""		137209	0					
ANR	137554	ExpressionStatement	"fprintf ( stdout , ""-f 0          : No jp2 header info.\\n"" )"	114:4:4728:4784	137209	38	True				
ANR	137555	CallExpression	"fprintf ( stdout , ""-f 0          : No jp2 header info.\\n"" )"		137209	0					
ANR	137556	Callee	fprintf		137209	0					
ANR	137557	Identifier	fprintf		137209	0					
ANR	137558	ArgumentList	stdout		137209	1					
ANR	137559	Argument	stdout		137209	0					
ANR	137560	Identifier	stdout		137209	0					
ANR	137561	Argument	"""-f 0          : No jp2 header info.\\n"""		137209	1					
ANR	137562	PrimaryExpression	"""-f 0          : No jp2 header info.\\n"""		137209	0					
ANR	137563	ExpressionStatement	"fprintf ( stdout , ""-r            : Suppress all 'raw' data for which a 'derived' form exists.\\n"" )"	115:4:4790:4897	137209	39	True				
ANR	137564	CallExpression	"fprintf ( stdout , ""-r            : Suppress all 'raw' data for which a 'derived' form exists.\\n"" )"		137209	0					
ANR	137565	Callee	fprintf		137209	0					
ANR	137566	Identifier	fprintf		137209	0					
ANR	137567	ArgumentList	stdout		137209	1					
ANR	137568	Argument	stdout		137209	0					
ANR	137569	Identifier	stdout		137209	0					
ANR	137570	Argument	"""-r            : Suppress all 'raw' data for which a 'derived' form exists.\\n"""		137209	1					
ANR	137571	PrimaryExpression	"""-r            : Suppress all 'raw' data for which a 'derived' form exists.\\n"""		137209	0					
ANR	137572	ExpressionStatement	"fprintf ( stdout , ""-d            : Suppress all 'derived' data.\\n"" )"	117:4:4903:4968	137209	40	True				
ANR	137573	CallExpression	"fprintf ( stdout , ""-d            : Suppress all 'derived' data.\\n"" )"		137209	0					
ANR	137574	Callee	fprintf		137209	0					
ANR	137575	Identifier	fprintf		137209	0					
ANR	137576	ArgumentList	stdout		137209	1					
ANR	137577	Argument	stdout		137209	0					
ANR	137578	Identifier	stdout		137209	0					
ANR	137579	Argument	"""-d            : Suppress all 'derived' data.\\n"""		137209	1					
ANR	137580	PrimaryExpression	"""-d            : Suppress all 'derived' data.\\n"""		137209	0					
ANR	137581	ExpressionStatement	"fprintf ( stdout , ""                (If both -r and -d given, -r will be ignored.)\\n"" )"	118:4:4974:5069	137209	41	True				
ANR	137582	CallExpression	"fprintf ( stdout , ""                (If both -r and -d given, -r will be ignored.)\\n"" )"		137209	0					
ANR	137583	Callee	fprintf		137209	0					
ANR	137584	Identifier	fprintf		137209	0					
ANR	137585	ArgumentList	stdout		137209	1					
ANR	137586	Argument	stdout		137209	0					
ANR	137587	Identifier	stdout		137209	0					
ANR	137588	Argument	"""                (If both -r and -d given, -r will be ignored.)\\n"""		137209	1					
ANR	137589	PrimaryExpression	"""                (If both -r and -d given, -r will be ignored.)\\n"""		137209	0					
ANR	137590	ExpressionStatement	"fprintf ( stdout , ""-v string     : Verify against the DTD file located by the string.\\n"" )"	120:4:5075:5174	137209	42	True				
ANR	137591	CallExpression	"fprintf ( stdout , ""-v string     : Verify against the DTD file located by the string.\\n"" )"		137209	0					
ANR	137592	Callee	fprintf		137209	0					
ANR	137593	Identifier	fprintf		137209	0					
ANR	137594	ArgumentList	stdout		137209	1					
ANR	137595	Argument	stdout		137209	0					
ANR	137596	Identifier	stdout		137209	0					
ANR	137597	Argument	"""-v string     : Verify against the DTD file located by the string.\\n"""		137209	1					
ANR	137598	PrimaryExpression	"""-v string     : Verify against the DTD file located by the string.\\n"""		137209	0					
ANR	137599	ExpressionStatement	"fprintf ( stdout , ""                Prepend quoted 'string' with either SYSTEM or PUBLIC keyword.\\n"" )"	122:4:5180:5290	137209	43	True				
ANR	137600	CallExpression	"fprintf ( stdout , ""                Prepend quoted 'string' with either SYSTEM or PUBLIC keyword.\\n"" )"		137209	0					
ANR	137601	Callee	fprintf		137209	0					
ANR	137602	Identifier	fprintf		137209	0					
ANR	137603	ArgumentList	stdout		137209	1					
ANR	137604	Argument	stdout		137209	0					
ANR	137605	Identifier	stdout		137209	0					
ANR	137606	Argument	"""                Prepend quoted 'string' with either SYSTEM or PUBLIC keyword.\\n"""		137209	1					
ANR	137607	PrimaryExpression	"""                Prepend quoted 'string' with either SYSTEM or PUBLIC keyword.\\n"""		137209	0					
ANR	137608	ExpressionStatement	"fprintf ( stdout , ""                Thus, for the distributed DTD placed in the same directory as\\n"" )"	124:4:5296:5406	137209	44	True				
ANR	137609	CallExpression	"fprintf ( stdout , ""                Thus, for the distributed DTD placed in the same directory as\\n"" )"		137209	0					
ANR	137610	Callee	fprintf		137209	0					
ANR	137611	Identifier	fprintf		137209	0					
ANR	137612	ArgumentList	stdout		137209	1					
ANR	137613	Argument	stdout		137209	0					
ANR	137614	Identifier	stdout		137209	0					
ANR	137615	Argument	"""                Thus, for the distributed DTD placed in the same directory as\\n"""		137209	1					
ANR	137616	PrimaryExpression	"""                Thus, for the distributed DTD placed in the same directory as\\n"""		137209	0					
ANR	137617	ExpressionStatement	"fprintf ( stdout , ""                the output file: -v \\""SYSTEM mj2_to_metadata.dtd\\""\\n"" )"	126:4:5412:5511	137209	45	True				
ANR	137618	CallExpression	"fprintf ( stdout , ""                the output file: -v \\""SYSTEM mj2_to_metadata.dtd\\""\\n"" )"		137209	0					
ANR	137619	Callee	fprintf		137209	0					
ANR	137620	Identifier	fprintf		137209	0					
ANR	137621	ArgumentList	stdout		137209	1					
ANR	137622	Argument	stdout		137209	0					
ANR	137623	Identifier	stdout		137209	0					
ANR	137624	Argument	"""                the output file: -v \\""SYSTEM mj2_to_metadata.dtd\\""\\n"""		137209	1					
ANR	137625	PrimaryExpression	"""                the output file: -v \\""SYSTEM mj2_to_metadata.dtd\\""\\n"""		137209	0					
ANR	137626	ExpressionStatement	"fprintf ( stdout , ""                \\""PUBLIC\\"" is used with an access protocol (e.g., http:) + URL.\\n"" )"	128:4:5517:5629	137209	46	True				
ANR	137627	CallExpression	"fprintf ( stdout , ""                \\""PUBLIC\\"" is used with an access protocol (e.g., http:) + URL.\\n"" )"		137209	0					
ANR	137628	Callee	fprintf		137209	0					
ANR	137629	Identifier	fprintf		137209	0					
ANR	137630	ArgumentList	stdout		137209	1					
ANR	137631	Argument	stdout		137209	0					
ANR	137632	Identifier	stdout		137209	0					
ANR	137633	Argument	"""                \\""PUBLIC\\"" is used with an access protocol (e.g., http:) + URL.\\n"""		137209	1					
ANR	137634	PrimaryExpression	"""                \\""PUBLIC\\"" is used with an access protocol (e.g., http:) + URL.\\n"""		137209	0					
ANR	137635	ExpressionStatement	"fprintf ( stdout , ""\\n"" )"	131:4:5658:5679	137209	47	True				
ANR	137636	CallExpression	"fprintf ( stdout , ""\\n"" )"		137209	0					
ANR	137637	Callee	fprintf		137209	0					
ANR	137638	Identifier	fprintf		137209	0					
ANR	137639	ArgumentList	stdout		137209	1					
ANR	137640	Argument	stdout		137209	0					
ANR	137641	Identifier	stdout		137209	0					
ANR	137642	Argument	"""\\n"""		137209	1					
ANR	137643	PrimaryExpression	"""\\n"""		137209	0					
ANR	137644	ReturnType	void		137209	1					
ANR	137645	Identifier	help_display		137209	2					
ANR	137646	ParameterList			137209	3					
ANR	137647	CFGEntryNode	ENTRY		137209		True				
ANR	137648	CFGExitNode	EXIT		137209		True				
ANR	137649	Symbol	stdout		137209						
ANR	137650	Function	main	137:0:5809:12343							
ANR	137651	FunctionDef	"main (int argc , char * argv [ ])"		137650	0					
ANR	137652	CompoundStatement		138:0:5842:12343	137650	0					
ANR	137653	IdentifierDeclStatement	opj_dinfo_t * dinfo ;	140:4:5849:5867	137650	0	True				
ANR	137654	IdentifierDecl	* dinfo		137650	0					
ANR	137655	IdentifierDeclType	opj_dinfo_t *		137650	0					
ANR	137656	Identifier	dinfo		137650	1					
ANR	137657	IdentifierDeclStatement	opj_event_mgr_t event_mgr ;	141:4:5873:5898	137650	1	True				
ANR	137658	IdentifierDecl	event_mgr		137650	0					
ANR	137659	IdentifierDeclType	opj_event_mgr_t		137650	0					
ANR	137660	Identifier	event_mgr		137650	1					
ANR	137661	IdentifierDeclStatement	"FILE * file , * xmlout ;"	143:4:5930:5949	137650	2	True				
ANR	137662	IdentifierDecl	* file		137650	0					
ANR	137663	IdentifierDeclType	FILE *		137650	0					
ANR	137664	Identifier	file		137650	1					
ANR	137665	IdentifierDecl	* xmlout		137650	1					
ANR	137666	IdentifierDeclType	FILE *		137650	0					
ANR	137667	Identifier	xmlout		137650	1					
ANR	137668	IdentifierDeclStatement	opj_mj2_t * movie ;	145:4:5987:6003	137650	3	True				
ANR	137669	IdentifierDecl	* movie		137650	0					
ANR	137670	IdentifierDeclType	opj_mj2_t *		137650	0					
ANR	137671	Identifier	movie		137650	1					
ANR	137672	IdentifierDeclStatement	char * infile = 0 ;	147:4:6010:6026	137650	4	True				
ANR	137673	IdentifierDecl	* infile = 0		137650	0					
ANR	137674	IdentifierDeclType	char *		137650	0					
ANR	137675	Identifier	infile		137650	1					
ANR	137676	AssignmentExpression	* infile = 0		137650	2		=			
ANR	137677	Identifier	infile		137650	0					
ANR	137678	PrimaryExpression	0		137650	1					
ANR	137679	IdentifierDeclStatement	char * outfile = 0 ;	148:4:6032:6049	137650	5	True				
ANR	137680	IdentifierDecl	* outfile = 0		137650	0					
ANR	137681	IdentifierDeclType	char *		137650	0					
ANR	137682	Identifier	outfile		137650	1					
ANR	137683	AssignmentExpression	* outfile = 0		137650	2		=			
ANR	137684	Identifier	outfile		137650	0					
ANR	137685	PrimaryExpression	0		137650	1					
ANR	137686	IdentifierDeclStatement	"char * s , S1 , S2 , S3 ;"	149:4:6055:6074	137650	6	True				
ANR	137687	IdentifierDecl	* s		137650	0					
ANR	137688	IdentifierDeclType	char *		137650	0					
ANR	137689	Identifier	s		137650	1					
ANR	137690	IdentifierDecl	S1		137650	1					
ANR	137691	IdentifierDeclType	char		137650	0					
ANR	137692	Identifier	S1		137650	1					
ANR	137693	IdentifierDecl	S2		137650	2					
ANR	137694	IdentifierDeclType	char		137650	0					
ANR	137695	Identifier	S2		137650	1					
ANR	137696	IdentifierDecl	S3		137650	3					
ANR	137697	IdentifierDeclType	char		137650	0					
ANR	137698	Identifier	S3		137650	1					
ANR	137699	IdentifierDeclStatement	int len ;	150:4:6080:6087	137650	7	True				
ANR	137700	IdentifierDecl	len		137650	0					
ANR	137701	IdentifierDeclType	int		137650	0					
ANR	137702	Identifier	len		137650	1					
ANR	137703	IdentifierDeclStatement	unsigned int sampleframe = 1 ;	151:4:6093:6121	137650	8	True				
ANR	137704	IdentifierDecl	sampleframe = 1		137650	0					
ANR	137705	IdentifierDeclType	unsigned int		137650	0					
ANR	137706	Identifier	sampleframe		137650	1					
ANR	137707	AssignmentExpression	sampleframe = 1		137650	2		=			
ANR	137708	Identifier	sampleframe		137650	0					
ANR	137709	PrimaryExpression	1		137650	1					
ANR	137710	IdentifierDeclStatement	char * stringDTD = NULL ;	152:4:6145:6167	137650	9	True				
ANR	137711	IdentifierDecl	* stringDTD = NULL		137650	0					
ANR	137712	IdentifierDeclType	char *		137650	0					
ANR	137713	Identifier	stringDTD		137650	1					
ANR	137714	AssignmentExpression	* stringDTD = NULL		137650	2		=			
ANR	137715	Identifier	NULL		137650	0					
ANR	137716	Identifier	NULL		137650	1					
ANR	137717	IdentifierDeclStatement	BOOL notes = TRUE ;	153:4:6173:6190	137650	10	True				
ANR	137718	IdentifierDecl	notes = TRUE		137650	0					
ANR	137719	IdentifierDeclType	BOOL		137650	0					
ANR	137720	Identifier	notes		137650	1					
ANR	137721	AssignmentExpression	notes = TRUE		137650	2		=			
ANR	137722	Identifier	TRUE		137650	0					
ANR	137723	Identifier	TRUE		137650	1					
ANR	137724	IdentifierDeclStatement	BOOL sampletables = FALSE ;	154:4:6196:6221	137650	11	True				
ANR	137725	IdentifierDecl	sampletables = FALSE		137650	0					
ANR	137726	IdentifierDeclType	BOOL		137650	0					
ANR	137727	Identifier	sampletables		137650	1					
ANR	137728	AssignmentExpression	sampletables = FALSE		137650	2		=			
ANR	137729	Identifier	FALSE		137650	0					
ANR	137730	Identifier	FALSE		137650	1					
ANR	137731	IdentifierDeclStatement	BOOL raw = TRUE ;	155:4:6227:6242	137650	12	True				
ANR	137732	IdentifierDecl	raw = TRUE		137650	0					
ANR	137733	IdentifierDeclType	BOOL		137650	0					
ANR	137734	Identifier	raw		137650	1					
ANR	137735	AssignmentExpression	raw = TRUE		137650	2		=			
ANR	137736	Identifier	TRUE		137650	0					
ANR	137737	Identifier	TRUE		137650	1					
ANR	137738	IdentifierDeclStatement	BOOL derived = TRUE ;	156:4:6248:6267	137650	13	True				
ANR	137739	IdentifierDecl	derived = TRUE		137650	0					
ANR	137740	IdentifierDeclType	BOOL		137650	0					
ANR	137741	Identifier	derived		137650	1					
ANR	137742	AssignmentExpression	derived = TRUE		137650	2		=			
ANR	137743	Identifier	TRUE		137650	0					
ANR	137744	Identifier	TRUE		137650	1					
ANR	137745	IdentifierDeclStatement	mj2_dparameters_t parameters ;	157:4:6273:6301	137650	14	True				
ANR	137746	IdentifierDecl	parameters		137650	0					
ANR	137747	IdentifierDeclType	mj2_dparameters_t		137650	0					
ANR	137748	Identifier	parameters		137650	1					
ANR	137749	WhileStatement	while ( TRUE )		137650	15					
ANR	137750	Condition	TRUE	159:11:6315:6318	137650	0	True				
ANR	137751	Identifier	TRUE		137650	0					
ANR	137752	CompoundStatement		24:8:546:589	137650	1					
ANR	137753	IdentifierDeclStatement	"int c = getopt ( argc , argv , ""i:o:f:v:hntrd"" ) ;"	161:8:6389:6432	137650	0	True				
ANR	137754	IdentifierDecl	"c = getopt ( argc , argv , ""i:o:f:v:hntrd"" )"		137650	0					
ANR	137755	IdentifierDeclType	int		137650	0					
ANR	137756	Identifier	c		137650	1					
ANR	137757	AssignmentExpression	"c = getopt ( argc , argv , ""i:o:f:v:hntrd"" )"		137650	2		=			
ANR	137758	Identifier	c		137650	0					
ANR	137759	CallExpression	"getopt ( argc , argv , ""i:o:f:v:hntrd"" )"		137650	1					
ANR	137760	Callee	getopt		137650	0					
ANR	137761	Identifier	getopt		137650	0					
ANR	137762	ArgumentList	argc		137650	1					
ANR	137763	Argument	argc		137650	0					
ANR	137764	Identifier	argc		137650	0					
ANR	137765	Argument	argv		137650	1					
ANR	137766	Identifier	argv		137650	0					
ANR	137767	Argument	"""i:o:f:v:hntrd"""		137650	2					
ANR	137768	PrimaryExpression	"""i:o:f:v:hntrd"""		137650	0					
ANR	137769	IfStatement	if ( c == - 1 )		137650	1					
ANR	137770	Condition	c == - 1	163:12:6538:6544	137650	0	True				
ANR	137771	EqualityExpression	c == - 1		137650	0		==			
ANR	137772	Identifier	c		137650	0					
ANR	137773	UnaryOperationExpression	- 1		137650	1					
ANR	137774	UnaryOperator	-		137650	0					
ANR	137775	PrimaryExpression	1		137650	1					
ANR	137776	CompoundStatement		26:21:704:704	137650	1					
ANR	137777	BreakStatement	break ;	164:12:6561:6566	137650	0	True				
ANR	137778	SwitchStatement	switch ( c )		137650	2					
ANR	137779	Condition	c	166:16:6594:6594	137650	0	True				
ANR	137780	Identifier	c		137650	0					
ANR	137781	CompoundStatement		29:19:754:754	137650	1					
ANR	137782	Label	case 'i' :	167:8:6607:6615	137650	0	True				
ANR	137783	ExpressionStatement	infile = optarg	168:12:6653:6668	137650	1	True				
ANR	137784	AssignmentExpression	infile = optarg		137650	0		=			
ANR	137785	Identifier	infile		137650	0					
ANR	137786	Identifier	optarg		137650	1					
ANR	137787	ExpressionStatement	s = optarg	169:12:6682:6692	137650	2	True				
ANR	137788	AssignmentExpression	s = optarg		137650	0		=			
ANR	137789	Identifier	s		137650	0					
ANR	137790	Identifier	optarg		137650	1					
ANR	137791	WhileStatement	while ( * s )		137650	3					
ANR	137792	Condition	* s	170:19:6713:6714	137650	0	True				
ANR	137793	UnaryOperationExpression	* s		137650	0					
ANR	137794	UnaryOperator	*		137650	0					
ANR	137795	Identifier	s		137650	1					
ANR	137796	CompoundStatement		33:23:874:874	137650	1					
ANR	137797	ExpressionStatement	s ++	171:16:6735:6738	137650	0	True				
ANR	137798	PostIncDecOperationExpression	s ++		137650	0					
ANR	137799	Identifier	s		137650	0					
ANR	137800	IncDec	++		137650	1					
ANR	137801	ExpressionStatement	s --	173:12:6795:6798	137650	4	True				
ANR	137802	PostIncDecOperationExpression	s --		137650	0					
ANR	137803	Identifier	s		137650	0					
ANR	137804	IncDec	--		137650	1					
ANR	137805	ExpressionStatement	S3 = * s	174:12:6812:6819	137650	5	True				
ANR	137806	AssignmentExpression	S3 = * s		137650	0		=			
ANR	137807	Identifier	S3		137650	0					
ANR	137808	UnaryOperationExpression	* s		137650	1					
ANR	137809	UnaryOperator	*		137650	0					
ANR	137810	Identifier	s		137650	1					
ANR	137811	ExpressionStatement	s --	175:12:6833:6836	137650	6	True				
ANR	137812	PostIncDecOperationExpression	s --		137650	0					
ANR	137813	Identifier	s		137650	0					
ANR	137814	IncDec	--		137650	1					
ANR	137815	ExpressionStatement	S2 = * s	176:12:6850:6857	137650	7	True				
ANR	137816	AssignmentExpression	S2 = * s		137650	0		=			
ANR	137817	Identifier	S2		137650	0					
ANR	137818	UnaryOperationExpression	* s		137650	1					
ANR	137819	UnaryOperator	*		137650	0					
ANR	137820	Identifier	s		137650	1					
ANR	137821	ExpressionStatement	s --	177:12:6871:6874	137650	8	True				
ANR	137822	PostIncDecOperationExpression	s --		137650	0					
ANR	137823	Identifier	s		137650	0					
ANR	137824	IncDec	--		137650	1					
ANR	137825	ExpressionStatement	S1 = * s	178:12:6888:6895	137650	9	True				
ANR	137826	AssignmentExpression	S1 = * s		137650	0		=			
ANR	137827	Identifier	S1		137650	0					
ANR	137828	UnaryOperationExpression	* s		137650	1					
ANR	137829	UnaryOperator	*		137650	0					
ANR	137830	Identifier	s		137650	1					
ANR	137831	IfStatement	if ( ( S1 == 'm' && S2 == 'j' && S3 == '2' ) || ( S1 == 'M' && S2 == 'J' && S3 == '2' ) )		137650	10					
ANR	137832	Condition	( S1 == 'm' && S2 == 'j' && S3 == '2' ) || ( S1 == 'M' && S2 == 'J' && S3 == '2' )	180:16:6914:7011	137650	0	True				
ANR	137833	OrExpression	( S1 == 'm' && S2 == 'j' && S3 == '2' ) || ( S1 == 'M' && S2 == 'J' && S3 == '2' )		137650	0		||			
ANR	137834	AndExpression	S1 == 'm' && S2 == 'j' && S3 == '2'		137650	0		&&			
ANR	137835	EqualityExpression	S1 == 'm'		137650	0		==			
ANR	137836	Identifier	S1		137650	0					
ANR	137837	PrimaryExpression	'm'		137650	1					
ANR	137838	AndExpression	S2 == 'j' && S3 == '2'		137650	1		&&			
ANR	137839	EqualityExpression	S2 == 'j'		137650	0		==			
ANR	137840	Identifier	S2		137650	0					
ANR	137841	PrimaryExpression	'j'		137650	1					
ANR	137842	EqualityExpression	S3 == '2'		137650	1		==			
ANR	137843	Identifier	S3		137650	0					
ANR	137844	PrimaryExpression	'2'		137650	1					
ANR	137845	AndExpression	S1 == 'M' && S2 == 'J' && S3 == '2'		137650	1		&&			
ANR	137846	EqualityExpression	S1 == 'M'		137650	0		==			
ANR	137847	Identifier	S1		137650	0					
ANR	137848	PrimaryExpression	'M'		137650	1					
ANR	137849	AndExpression	S2 == 'J' && S3 == '2'		137650	1		&&			
ANR	137850	EqualityExpression	S2 == 'J'		137650	0		==			
ANR	137851	Identifier	S2		137650	0					
ANR	137852	PrimaryExpression	'J'		137650	1					
ANR	137853	EqualityExpression	S3 == '2'		137650	1		==			
ANR	137854	Identifier	S3		137650	0					
ANR	137855	PrimaryExpression	'2'		137650	1					
ANR	137856	CompoundStatement		44:62:1171:1171	137650	1					
ANR	137857	BreakStatement	break ;	182:16:7032:7037	137650	0	True				
ANR	137858	ExpressionStatement	"fprintf ( stderr , ""Input file name must have .mj2 extension, not .%c%c%c.\\n"" , S1 , S2 , S3 )"	184:12:7065:7172	137650	11	True				
ANR	137859	CallExpression	"fprintf ( stderr , ""Input file name must have .mj2 extension, not .%c%c%c.\\n"" , S1 , S2 , S3 )"		137650	0					
ANR	137860	Callee	fprintf		137650	0					
ANR	137861	Identifier	fprintf		137650	0					
ANR	137862	ArgumentList	stderr		137650	1					
ANR	137863	Argument	stderr		137650	0					
ANR	137864	Identifier	stderr		137650	0					
ANR	137865	Argument	"""Input file name must have .mj2 extension, not .%c%c%c.\\n"""		137650	1					
ANR	137866	PrimaryExpression	"""Input file name must have .mj2 extension, not .%c%c%c.\\n"""		137650	0					
ANR	137867	Argument	S1		137650	2					
ANR	137868	Identifier	S1		137650	0					
ANR	137869	Argument	S2		137650	3					
ANR	137870	Identifier	S2		137650	0					
ANR	137871	Argument	S3		137650	4					
ANR	137872	Identifier	S3		137650	0					
ANR	137873	ReturnStatement	return 1 ;	186:12:7186:7194	137650	12	True				
ANR	137874	PrimaryExpression	1		137650	0					
ANR	137875	Label	case 'o' :	189:8:7273:7281	137650	13	True				
ANR	137876	ExpressionStatement	outfile = optarg	190:12:7320:7336	137650	14	True				
ANR	137877	AssignmentExpression	outfile = optarg		137650	0		=			
ANR	137878	Identifier	outfile		137650	0					
ANR	137879	Identifier	optarg		137650	1					
ANR	137880	WhileStatement	while ( * outfile )		137650	15					
ANR	137881	Condition	* outfile	191:19:7357:7364	137650	0	True				
ANR	137882	UnaryOperationExpression	* outfile		137650	0					
ANR	137883	UnaryOperator	*		137650	0					
ANR	137884	Identifier	outfile		137650	1					
ANR	137885	CompoundStatement		54:29:1524:1524	137650	1					
ANR	137886	ExpressionStatement	outfile ++	192:16:7385:7394	137650	0	True				
ANR	137887	PostIncDecOperationExpression	outfile ++		137650	0					
ANR	137888	Identifier	outfile		137650	0					
ANR	137889	IncDec	++		137650	1					
ANR	137890	ExpressionStatement	outfile --	194:12:7451:7460	137650	16	True				
ANR	137891	PostIncDecOperationExpression	outfile --		137650	0					
ANR	137892	Identifier	outfile		137650	0					
ANR	137893	IncDec	--		137650	1					
ANR	137894	ExpressionStatement	S3 = * outfile	195:12:7474:7487	137650	17	True				
ANR	137895	AssignmentExpression	S3 = * outfile		137650	0		=			
ANR	137896	Identifier	S3		137650	0					
ANR	137897	UnaryOperationExpression	* outfile		137650	1					
ANR	137898	UnaryOperator	*		137650	0					
ANR	137899	Identifier	outfile		137650	1					
ANR	137900	ExpressionStatement	outfile --	196:12:7501:7510	137650	18	True				
ANR	137901	PostIncDecOperationExpression	outfile --		137650	0					
ANR	137902	Identifier	outfile		137650	0					
ANR	137903	IncDec	--		137650	1					
ANR	137904	ExpressionStatement	S2 = * outfile	197:12:7524:7537	137650	19	True				
ANR	137905	AssignmentExpression	S2 = * outfile		137650	0		=			
ANR	137906	Identifier	S2		137650	0					
ANR	137907	UnaryOperationExpression	* outfile		137650	1					
ANR	137908	UnaryOperator	*		137650	0					
ANR	137909	Identifier	outfile		137650	1					
ANR	137910	ExpressionStatement	outfile --	198:12:7551:7560	137650	20	True				
ANR	137911	PostIncDecOperationExpression	outfile --		137650	0					
ANR	137912	Identifier	outfile		137650	0					
ANR	137913	IncDec	--		137650	1					
ANR	137914	ExpressionStatement	S1 = * outfile	199:12:7574:7587	137650	21	True				
ANR	137915	AssignmentExpression	S1 = * outfile		137650	0		=			
ANR	137916	Identifier	S1		137650	0					
ANR	137917	UnaryOperationExpression	* outfile		137650	1					
ANR	137918	UnaryOperator	*		137650	0					
ANR	137919	Identifier	outfile		137650	1					
ANR	137920	ExpressionStatement	outfile = optarg	201:12:7602:7618	137650	22	True				
ANR	137921	AssignmentExpression	outfile = optarg		137650	0		=			
ANR	137922	Identifier	outfile		137650	0					
ANR	137923	Identifier	optarg		137650	1					
ANR	137924	IfStatement	if ( ( S1 == 'x' && S2 == 'm' && S3 == 'l' ) || ( S1 == 'X' && S2 == 'M' && S3 == 'L' ) )		137650	23					
ANR	137925	Condition	( S1 == 'x' && S2 == 'm' && S3 == 'l' ) || ( S1 == 'X' && S2 == 'M' && S3 == 'L' )	203:16:7637:7734	137650	0	True				
ANR	137926	OrExpression	( S1 == 'x' && S2 == 'm' && S3 == 'l' ) || ( S1 == 'X' && S2 == 'M' && S3 == 'L' )		137650	0		||			
ANR	137927	AndExpression	S1 == 'x' && S2 == 'm' && S3 == 'l'		137650	0		&&			
ANR	137928	EqualityExpression	S1 == 'x'		137650	0		==			
ANR	137929	Identifier	S1		137650	0					
ANR	137930	PrimaryExpression	'x'		137650	1					
ANR	137931	AndExpression	S2 == 'm' && S3 == 'l'		137650	1		&&			
ANR	137932	EqualityExpression	S2 == 'm'		137650	0		==			
ANR	137933	Identifier	S2		137650	0					
ANR	137934	PrimaryExpression	'm'		137650	1					
ANR	137935	EqualityExpression	S3 == 'l'		137650	1		==			
ANR	137936	Identifier	S3		137650	0					
ANR	137937	PrimaryExpression	'l'		137650	1					
ANR	137938	AndExpression	S1 == 'X' && S2 == 'M' && S3 == 'L'		137650	1		&&			
ANR	137939	EqualityExpression	S1 == 'X'		137650	0		==			
ANR	137940	Identifier	S1		137650	0					
ANR	137941	PrimaryExpression	'X'		137650	1					
ANR	137942	AndExpression	S2 == 'M' && S3 == 'L'		137650	1		&&			
ANR	137943	EqualityExpression	S2 == 'M'		137650	0		==			
ANR	137944	Identifier	S2		137650	0					
ANR	137945	PrimaryExpression	'M'		137650	1					
ANR	137946	EqualityExpression	S3 == 'L'		137650	1		==			
ANR	137947	Identifier	S3		137650	0					
ANR	137948	PrimaryExpression	'L'		137650	1					
ANR	137949	CompoundStatement		67:62:1894:1894	137650	1					
ANR	137950	BreakStatement	break ;	205:16:7755:7760	137650	0	True				
ANR	137951	ExpressionStatement	"fprintf ( stderr , ""Output file name must have .xml extension, not .%c%c%c\\n"" , S1 , S2 , S3 )"	208:12:7789:7896	137650	24	True				
ANR	137952	CallExpression	"fprintf ( stderr , ""Output file name must have .xml extension, not .%c%c%c\\n"" , S1 , S2 , S3 )"		137650	0					
ANR	137953	Callee	fprintf		137650	0					
ANR	137954	Identifier	fprintf		137650	0					
ANR	137955	ArgumentList	stderr		137650	1					
ANR	137956	Argument	stderr		137650	0					
ANR	137957	Identifier	stderr		137650	0					
ANR	137958	Argument	"""Output file name must have .xml extension, not .%c%c%c\\n"""		137650	1					
ANR	137959	PrimaryExpression	"""Output file name must have .xml extension, not .%c%c%c\\n"""		137650	0					
ANR	137960	Argument	S1		137650	2					
ANR	137961	Identifier	S1		137650	0					
ANR	137962	Argument	S2		137650	3					
ANR	137963	Identifier	S2		137650	0					
ANR	137964	Argument	S3		137650	4					
ANR	137965	Identifier	S3		137650	0					
ANR	137966	ReturnStatement	return 1 ;	210:12:7910:7918	137650	25	True				
ANR	137967	PrimaryExpression	1		137650	0					
ANR	137968	Label	case 'f' :	213:8:7997:8005	137650	26	True				
ANR	137969	ExpressionStatement	"sscanf ( optarg , ""%u"" , & sampleframe )"	214:12:8066:8100	137650	27	True				
ANR	137970	CallExpression	"sscanf ( optarg , ""%u"" , & sampleframe )"		137650	0					
ANR	137971	Callee	sscanf		137650	0					
ANR	137972	Identifier	sscanf		137650	0					
ANR	137973	ArgumentList	optarg		137650	1					
ANR	137974	Argument	optarg		137650	0					
ANR	137975	Identifier	optarg		137650	0					
ANR	137976	Argument	"""%u"""		137650	1					
ANR	137977	PrimaryExpression	"""%u"""		137650	0					
ANR	137978	Argument	& sampleframe		137650	2					
ANR	137979	UnaryOperationExpression	& sampleframe		137650	0					
ANR	137980	UnaryOperator	&		137650	0					
ANR	137981	Identifier	sampleframe		137650	1					
ANR	137982	BreakStatement	break ;	215:12:8114:8119	137650	28	True				
ANR	137983	Label	case 'v' :	218:8:8198:8206	137650	29	True				
ANR	137984	ExpressionStatement	stringDTD = optarg	219:12:8257:8275	137650	30	True				
ANR	137985	AssignmentExpression	stringDTD = optarg		137650	0		=			
ANR	137986	Identifier	stringDTD		137650	0					
ANR	137987	Identifier	optarg		137650	1					
ANR	137988	IfStatement	"if ( strchr ( stringDTD , '""' ) != NULL )"		137650	31					
ANR	137989	Condition	"strchr ( stringDTD , '""' ) != NULL"	222:16:8417:8446	137650	0	True				
ANR	137990	EqualityExpression	"strchr ( stringDTD , '""' ) != NULL"		137650	0		!=			
ANR	137991	CallExpression	"strchr ( stringDTD , '""' )"		137650	0					
ANR	137992	Callee	strchr		137650	0					
ANR	137993	Identifier	strchr		137650	0					
ANR	137994	ArgumentList	stringDTD		137650	1					
ANR	137995	Argument	stringDTD		137650	0					
ANR	137996	Identifier	stringDTD		137650	0					
ANR	137997	Argument	"'""'"		137650	1					
ANR	137998	PrimaryExpression	"'""'"		137650	0					
ANR	137999	Identifier	NULL		137650	1					
ANR	138000	CompoundStatement		85:48:2606:2606	137650	1					
ANR	138001	ExpressionStatement	"fprintf ( stderr , ""-D's string must not contain any embedded double-quote characters.\\n"" )"	223:16:8467:8578	137650	0	True				
ANR	138002	CallExpression	"fprintf ( stderr , ""-D's string must not contain any embedded double-quote characters.\\n"" )"		137650	0					
ANR	138003	Callee	fprintf		137650	0					
ANR	138004	Identifier	fprintf		137650	0					
ANR	138005	ArgumentList	stderr		137650	1					
ANR	138006	Argument	stderr		137650	0					
ANR	138007	Identifier	stderr		137650	0					
ANR	138008	Argument	"""-D's string must not contain any embedded double-quote characters.\\n"""		137650	1					
ANR	138009	PrimaryExpression	"""-D's string must not contain any embedded double-quote characters.\\n"""		137650	0					
ANR	138010	ReturnStatement	return 1 ;	225:16:8596:8604	137650	1	True				
ANR	138011	PrimaryExpression	1		137650	0					
ANR	138012	IfStatement	"if ( strncmp ( stringDTD , ""PUBLIC "" , 7 ) == 0 || strncmp ( stringDTD , ""SYSTEM "" , 7 ) == 0 )"		137650	32					
ANR	138013	Condition	"strncmp ( stringDTD , ""PUBLIC "" , 7 ) == 0 || strncmp ( stringDTD , ""SYSTEM "" , 7 ) == 0"	228:16:8637:8734	137650	0	True				
ANR	138014	OrExpression	"strncmp ( stringDTD , ""PUBLIC "" , 7 ) == 0 || strncmp ( stringDTD , ""SYSTEM "" , 7 ) == 0"		137650	0		||			
ANR	138015	EqualityExpression	"strncmp ( stringDTD , ""PUBLIC "" , 7 ) == 0"		137650	0		==			
ANR	138016	CallExpression	"strncmp ( stringDTD , ""PUBLIC "" , 7 )"		137650	0					
ANR	138017	Callee	strncmp		137650	0					
ANR	138018	Identifier	strncmp		137650	0					
ANR	138019	ArgumentList	stringDTD		137650	1					
ANR	138020	Argument	stringDTD		137650	0					
ANR	138021	Identifier	stringDTD		137650	0					
ANR	138022	Argument	"""PUBLIC """		137650	1					
ANR	138023	PrimaryExpression	"""PUBLIC """		137650	0					
ANR	138024	Argument	7		137650	2					
ANR	138025	PrimaryExpression	7		137650	0					
ANR	138026	PrimaryExpression	0		137650	1					
ANR	138027	EqualityExpression	"strncmp ( stringDTD , ""SYSTEM "" , 7 ) == 0"		137650	1		==			
ANR	138028	CallExpression	"strncmp ( stringDTD , ""SYSTEM "" , 7 )"		137650	0					
ANR	138029	Callee	strncmp		137650	0					
ANR	138030	Identifier	strncmp		137650	0					
ANR	138031	ArgumentList	stringDTD		137650	1					
ANR	138032	Argument	stringDTD		137650	0					
ANR	138033	Identifier	stringDTD		137650	0					
ANR	138034	Argument	"""SYSTEM """		137650	1					
ANR	138035	PrimaryExpression	"""SYSTEM """		137650	0					
ANR	138036	Argument	7		137650	2					
ANR	138037	PrimaryExpression	7		137650	0					
ANR	138038	PrimaryExpression	0		137650	1					
ANR	138039	CompoundStatement		92:59:2894:2894	137650	1					
ANR	138040	BreakStatement	break ;	230:16:8755:8760	137650	0	True				
ANR	138041	ExpressionStatement	"fprintf ( stderr , ""-D's string must start with \\""PUBLIC \\"" or \\""SYSTEM \\""\\n"" )"	233:12:8789:8864	137650	33	True				
ANR	138042	CallExpression	"fprintf ( stderr , ""-D's string must start with \\""PUBLIC \\"" or \\""SYSTEM \\""\\n"" )"		137650	0					
ANR	138043	Callee	fprintf		137650	0					
ANR	138044	Identifier	fprintf		137650	0					
ANR	138045	ArgumentList	stderr		137650	1					
ANR	138046	Argument	stderr		137650	0					
ANR	138047	Identifier	stderr		137650	0					
ANR	138048	Argument	"""-D's string must start with \\""PUBLIC \\"" or \\""SYSTEM \\""\\n"""		137650	1					
ANR	138049	PrimaryExpression	"""-D's string must start with \\""PUBLIC \\"" or \\""SYSTEM \\""\\n"""		137650	0					
ANR	138050	ReturnStatement	return 1 ;	234:12:8878:8886	137650	34	True				
ANR	138051	PrimaryExpression	1		137650	0					
ANR	138052	Label	case 'n' :	237:8:8965:8973	137650	35	True				
ANR	138053	ExpressionStatement	notes = FALSE	238:12:9021:9034	137650	36	True				
ANR	138054	AssignmentExpression	notes = FALSE		137650	0		=			
ANR	138055	Identifier	notes		137650	0					
ANR	138056	Identifier	FALSE		137650	1					
ANR	138057	BreakStatement	break ;	239:12:9048:9053	137650	37	True				
ANR	138058	Label	case 't' :	242:8:9132:9140	137650	38	True				
ANR	138059	ExpressionStatement	sampletables = TRUE	243:12:9211:9230	137650	39	True				
ANR	138060	AssignmentExpression	sampletables = TRUE		137650	0		=			
ANR	138061	Identifier	sampletables		137650	0					
ANR	138062	Identifier	TRUE		137650	1					
ANR	138063	BreakStatement	break ;	244:12:9244:9249	137650	40	True				
ANR	138064	Label	case 'h' :	247:8:9328:9336	137650	41	True				
ANR	138065	ExpressionStatement	help_display ( )	248:12:9394:9408	137650	42	True				
ANR	138066	CallExpression	help_display ( )		137650	0					
ANR	138067	Callee	help_display		137650	0					
ANR	138068	Identifier	help_display		137650	0					
ANR	138069	ArgumentList			137650	1					
ANR	138070	ReturnStatement	return 0 ;	249:12:9422:9430	137650	43	True				
ANR	138071	PrimaryExpression	0		137650	0					
ANR	138072	Label	case 'r' :	252:8:9509:9517	137650	44	True				
ANR	138073	ExpressionStatement	raw = FALSE	253:12:9565:9576	137650	45	True				
ANR	138074	AssignmentExpression	raw = FALSE		137650	0		=			
ANR	138075	Identifier	raw		137650	0					
ANR	138076	Identifier	FALSE		137650	1					
ANR	138077	BreakStatement	break ;	254:12:9590:9595	137650	46	True				
ANR	138078	Label	case 'd' :	257:8:9674:9682	137650	47	True				
ANR	138079	ExpressionStatement	derived = FALSE	258:12:9734:9749	137650	48	True				
ANR	138080	AssignmentExpression	derived = FALSE		137650	0		=			
ANR	138081	Identifier	derived		137650	0					
ANR	138082	Identifier	FALSE		137650	1					
ANR	138083	BreakStatement	break ;	259:12:9763:9768	137650	49	True				
ANR	138084	Label	default :	262:8:9847:9854	137650	50	True				
ANR	138085	Identifier	default		137650	0					
ANR	138086	ReturnStatement	return 1 ;	263:12:9868:9876	137650	51	True				
ANR	138087	PrimaryExpression	1		137650	0					
ANR	138088	IfStatement	if ( ! raw && ! derived )		137650	16					
ANR	138089	Condition	! raw && ! derived	267:8:9928:9943	137650	0	True				
ANR	138090	AndExpression	! raw && ! derived		137650	0		&&			
ANR	138091	UnaryOperationExpression	! raw		137650	0					
ANR	138092	UnaryOperator	!		137650	0					
ANR	138093	Identifier	raw		137650	1					
ANR	138094	UnaryOperationExpression	! derived		137650	1					
ANR	138095	UnaryOperator	!		137650	0					
ANR	138096	Identifier	derived		137650	1					
ANR	138097	CompoundStatement		130:26:4103:4103	137650	1					
ANR	138098	ExpressionStatement	raw = TRUE	268:8:9956:9966	137650	0	True				
ANR	138099	AssignmentExpression	raw = TRUE		137650	0		=			
ANR	138100	Identifier	raw		137650	0					
ANR	138101	Identifier	TRUE		137650	1					
ANR	138102	IfStatement	if ( ! infile || ! outfile )		137650	17					
ANR	138103	Condition	! infile || ! outfile	273:8:10091:10109	137650	0	True				
ANR	138104	OrExpression	! infile || ! outfile		137650	0		||			
ANR	138105	UnaryOperationExpression	! infile		137650	0					
ANR	138106	UnaryOperator	!		137650	0					
ANR	138107	Identifier	infile		137650	1					
ANR	138108	UnaryOperationExpression	! outfile		137650	1					
ANR	138109	UnaryOperator	!		137650	0					
ANR	138110	Identifier	outfile		137650	1					
ANR	138111	CompoundStatement		136:29:4269:4269	137650	1					
ANR	138112	ExpressionStatement	"fprintf ( stderr , ""Correct usage: mj2_to_metadata -i mj2-file -o xml-file (plus options)\\n"" )"	274:8:10122:10228	137650	0	True				
ANR	138113	CallExpression	"fprintf ( stderr , ""Correct usage: mj2_to_metadata -i mj2-file -o xml-file (plus options)\\n"" )"		137650	0					
ANR	138114	Callee	fprintf		137650	0					
ANR	138115	Identifier	fprintf		137650	0					
ANR	138116	ArgumentList	stderr		137650	1					
ANR	138117	Argument	stderr		137650	0					
ANR	138118	Identifier	stderr		137650	0					
ANR	138119	Argument	"""Correct usage: mj2_to_metadata -i mj2-file -o xml-file (plus options)\\n"""		137650	1					
ANR	138120	PrimaryExpression	"""Correct usage: mj2_to_metadata -i mj2-file -o xml-file (plus options)\\n"""		137650	0					
ANR	138121	ReturnStatement	return 1 ;	276:8:10238:10246	137650	1	True				
ANR	138122	PrimaryExpression	1		137650	0					
ANR	138123	ExpressionStatement	len = strlen ( infile )	286:4:10482:10502	137650	18	True				
ANR	138124	AssignmentExpression	len = strlen ( infile )		137650	0		=			
ANR	138125	Identifier	len		137650	0					
ANR	138126	CallExpression	strlen ( infile )		137650	1					
ANR	138127	Callee	strlen		137650	0					
ANR	138128	Identifier	strlen		137650	0					
ANR	138129	ArgumentList	infile		137650	1					
ANR	138130	Argument	infile		137650	0					
ANR	138131	Identifier	infile		137650	0					
ANR	138132	IfStatement	if ( infile [ 0 ] == ' ' )		137650	19					
ANR	138133	Condition	infile [ 0 ] == ' '	287:8:10512:10527	137650	0	True				
ANR	138134	EqualityExpression	infile [ 0 ] == ' '		137650	0		==			
ANR	138135	ArrayIndexing	infile [ 0 ]		137650	0					
ANR	138136	Identifier	infile		137650	0					
ANR	138137	PrimaryExpression	0		137650	1					
ANR	138138	PrimaryExpression	' '		137650	1					
ANR	138139	CompoundStatement		150:26:4687:4687	137650	1					
ANR	138140	ExpressionStatement	infile ++	288:8:10540:10548	137650	0	True				
ANR	138141	PostIncDecOperationExpression	infile ++		137650	0					
ANR	138142	Identifier	infile		137650	0					
ANR	138143	IncDec	++		137650	1					
ANR	138144	ExpressionStatement	"file = fopen ( infile , ""rb"" )"	291:4:10623:10649	137650	20	True				
ANR	138145	AssignmentExpression	"file = fopen ( infile , ""rb"" )"		137650	0		=			
ANR	138146	Identifier	file		137650	0					
ANR	138147	CallExpression	"fopen ( infile , ""rb"" )"		137650	1					
ANR	138148	Callee	fopen		137650	0					
ANR	138149	Identifier	fopen		137650	0					
ANR	138150	ArgumentList	infile		137650	1					
ANR	138151	Argument	infile		137650	0					
ANR	138152	Identifier	infile		137650	0					
ANR	138153	Argument	"""rb"""		137650	1					
ANR	138154	PrimaryExpression	"""rb"""		137650	0					
ANR	138155	IfStatement	if ( ! file )		137650	21					
ANR	138156	Condition	! file	293:8:10679:10683	137650	0	True				
ANR	138157	UnaryOperationExpression	! file		137650	0					
ANR	138158	UnaryOperator	!		137650	0					
ANR	138159	Identifier	file		137650	1					
ANR	138160	CompoundStatement		156:15:4843:4843	137650	1					
ANR	138161	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s for reading.\\n"" , infile )"	294:8:10696:10755	137650	0	True				
ANR	138162	CallExpression	"fprintf ( stderr , ""Failed to open %s for reading.\\n"" , infile )"		137650	0					
ANR	138163	Callee	fprintf		137650	0					
ANR	138164	Identifier	fprintf		137650	0					
ANR	138165	ArgumentList	stderr		137650	1					
ANR	138166	Argument	stderr		137650	0					
ANR	138167	Identifier	stderr		137650	0					
ANR	138168	Argument	"""Failed to open %s for reading.\\n"""		137650	1					
ANR	138169	PrimaryExpression	"""Failed to open %s for reading.\\n"""		137650	0					
ANR	138170	Argument	infile		137650	2					
ANR	138171	Identifier	infile		137650	0					
ANR	138172	ReturnStatement	return 1 ;	295:8:10784:10792	137650	1	True				
ANR	138173	PrimaryExpression	1		137650	0					
ANR	138174	ExpressionStatement	len = strlen ( outfile )	298:4:10805:10826	137650	22	True				
ANR	138175	AssignmentExpression	len = strlen ( outfile )		137650	0		=			
ANR	138176	Identifier	len		137650	0					
ANR	138177	CallExpression	strlen ( outfile )		137650	1					
ANR	138178	Callee	strlen		137650	0					
ANR	138179	Identifier	strlen		137650	0					
ANR	138180	ArgumentList	outfile		137650	1					
ANR	138181	Argument	outfile		137650	0					
ANR	138182	Identifier	outfile		137650	0					
ANR	138183	IfStatement	if ( outfile [ 0 ] == ' ' )		137650	23					
ANR	138184	Condition	outfile [ 0 ] == ' '	299:8:10836:10852	137650	0	True				
ANR	138185	EqualityExpression	outfile [ 0 ] == ' '		137650	0		==			
ANR	138186	ArrayIndexing	outfile [ 0 ]		137650	0					
ANR	138187	Identifier	outfile		137650	0					
ANR	138188	PrimaryExpression	0		137650	1					
ANR	138189	PrimaryExpression	' '		137650	1					
ANR	138190	CompoundStatement		162:27:5012:5012	137650	1					
ANR	138191	ExpressionStatement	outfile ++	300:8:10865:10874	137650	0	True				
ANR	138192	PostIncDecOperationExpression	outfile ++		137650	0					
ANR	138193	Identifier	outfile		137650	0					
ANR	138194	IncDec	++		137650	1					
ANR	138195	ExpressionStatement	"xmlout = fopen ( outfile , ""w"" )"	304:4:10977:11005	137650	24	True				
ANR	138196	AssignmentExpression	"xmlout = fopen ( outfile , ""w"" )"		137650	0		=			
ANR	138197	Identifier	xmlout		137650	0					
ANR	138198	CallExpression	"fopen ( outfile , ""w"" )"		137650	1					
ANR	138199	Callee	fopen		137650	0					
ANR	138200	Identifier	fopen		137650	0					
ANR	138201	ArgumentList	outfile		137650	1					
ANR	138202	Argument	outfile		137650	0					
ANR	138203	Identifier	outfile		137650	0					
ANR	138204	Argument	"""w"""		137650	1					
ANR	138205	PrimaryExpression	"""w"""		137650	0					
ANR	138206	IfStatement	if ( ! xmlout )		137650	25					
ANR	138207	Condition	! xmlout	305:8:11034:11040	137650	0	True				
ANR	138208	UnaryOperationExpression	! xmlout		137650	0					
ANR	138209	UnaryOperator	!		137650	0					
ANR	138210	Identifier	xmlout		137650	1					
ANR	138211	CompoundStatement		168:17:5200:5200	137650	1					
ANR	138212	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s for writing.\\n"" , outfile )"	306:8:11053:11113	137650	0	True				
ANR	138213	CallExpression	"fprintf ( stderr , ""Failed to open %s for writing.\\n"" , outfile )"		137650	0					
ANR	138214	Callee	fprintf		137650	0					
ANR	138215	Identifier	fprintf		137650	0					
ANR	138216	ArgumentList	stderr		137650	1					
ANR	138217	Argument	stderr		137650	0					
ANR	138218	Identifier	stderr		137650	0					
ANR	138219	Argument	"""Failed to open %s for writing.\\n"""		137650	1					
ANR	138220	PrimaryExpression	"""Failed to open %s for writing.\\n"""		137650	0					
ANR	138221	Argument	outfile		137650	2					
ANR	138222	Identifier	outfile		137650	0					
ANR	138223	ReturnStatement	return 1 ;	307:8:11142:11150	137650	1	True				
ANR	138224	PrimaryExpression	1		137650	0					
ANR	138225	ExpressionStatement	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"	315:4:11288:11334	137650	26	True				
ANR	138226	CallExpression	"memset ( & event_mgr , 0 , sizeof ( opj_event_mgr_t ) )"		137650	0					
ANR	138227	Callee	memset		137650	0					
ANR	138228	Identifier	memset		137650	0					
ANR	138229	ArgumentList	& event_mgr		137650	1					
ANR	138230	Argument	& event_mgr		137650	0					
ANR	138231	UnaryOperationExpression	& event_mgr		137650	0					
ANR	138232	UnaryOperator	&		137650	0					
ANR	138233	Identifier	event_mgr		137650	1					
ANR	138234	Argument	0		137650	1					
ANR	138235	PrimaryExpression	0		137650	0					
ANR	138236	Argument	sizeof ( opj_event_mgr_t )		137650	2					
ANR	138237	SizeofExpression	sizeof ( opj_event_mgr_t )		137650	0					
ANR	138238	Sizeof	sizeof		137650	0					
ANR	138239	SizeofOperand	opj_event_mgr_t		137650	1					
ANR	138240	ExpressionStatement	event_mgr . error_handler = error_callback	316:4:11340:11380	137650	27	True				
ANR	138241	AssignmentExpression	event_mgr . error_handler = error_callback		137650	0		=			
ANR	138242	MemberAccess	event_mgr . error_handler		137650	0					
ANR	138243	Identifier	event_mgr		137650	0					
ANR	138244	Identifier	error_handler		137650	1					
ANR	138245	Identifier	error_callback		137650	1					
ANR	138246	ExpressionStatement	event_mgr . warning_handler = warning_callback	317:4:11386:11430	137650	28	True				
ANR	138247	AssignmentExpression	event_mgr . warning_handler = warning_callback		137650	0		=			
ANR	138248	MemberAccess	event_mgr . warning_handler		137650	0					
ANR	138249	Identifier	event_mgr		137650	0					
ANR	138250	Identifier	warning_handler		137650	1					
ANR	138251	Identifier	warning_callback		137650	1					
ANR	138252	ExpressionStatement	event_mgr . info_handler = info_callback	318:4:11436:11474	137650	29	True				
ANR	138253	AssignmentExpression	event_mgr . info_handler = info_callback		137650	0		=			
ANR	138254	MemberAccess	event_mgr . info_handler		137650	0					
ANR	138255	Identifier	event_mgr		137650	0					
ANR	138256	Identifier	info_handler		137650	1					
ANR	138257	Identifier	info_callback		137650	1					
ANR	138258	ExpressionStatement	dinfo = mj2_create_decompress ( )	321:4:11521:11552	137650	30	True				
ANR	138259	AssignmentExpression	dinfo = mj2_create_decompress ( )		137650	0		=			
ANR	138260	Identifier	dinfo		137650	0					
ANR	138261	CallExpression	mj2_create_decompress ( )		137650	1					
ANR	138262	Callee	mj2_create_decompress		137650	0					
ANR	138263	Identifier	mj2_create_decompress		137650	0					
ANR	138264	ArgumentList			137650	1					
ANR	138265	ExpressionStatement	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , stderr )"	324:4:11627:11687	137650	31	True				
ANR	138266	CallExpression	"opj_set_event_mgr ( ( opj_common_ptr ) dinfo , & event_mgr , stderr )"		137650	0					
ANR	138267	Callee	opj_set_event_mgr		137650	0					
ANR	138268	Identifier	opj_set_event_mgr		137650	0					
ANR	138269	ArgumentList	( opj_common_ptr ) dinfo		137650	1					
ANR	138270	Argument	( opj_common_ptr ) dinfo		137650	0					
ANR	138271	CastExpression	( opj_common_ptr ) dinfo		137650	0					
ANR	138272	CastTarget	opj_common_ptr		137650	0					
ANR	138273	Identifier	dinfo		137650	1					
ANR	138274	Argument	& event_mgr		137650	1					
ANR	138275	UnaryOperationExpression	& event_mgr		137650	0					
ANR	138276	UnaryOperator	&		137650	0					
ANR	138277	Identifier	event_mgr		137650	1					
ANR	138278	Argument	stderr		137650	2					
ANR	138279	Identifier	stderr		137650	0					
ANR	138280	ExpressionStatement	movie = ( opj_mj2_t * ) dinfo -> mj2_handle	327:4:11764:11802	137650	32	True				
ANR	138281	AssignmentExpression	movie = ( opj_mj2_t * ) dinfo -> mj2_handle		137650	0		=			
ANR	138282	Identifier	movie		137650	0					
ANR	138283	CastExpression	( opj_mj2_t * ) dinfo -> mj2_handle		137650	1					
ANR	138284	CastTarget	opj_mj2_t *		137650	0					
ANR	138285	PtrMemberAccess	dinfo -> mj2_handle		137650	1					
ANR	138286	Identifier	dinfo		137650	0					
ANR	138287	Identifier	mj2_handle		137650	1					
ANR	138288	ExpressionStatement	"mj2_setup_decoder ( dinfo -> mj2_handle , & parameters )"	328:4:11808:11857	137650	33	True				
ANR	138289	CallExpression	"mj2_setup_decoder ( dinfo -> mj2_handle , & parameters )"		137650	0					
ANR	138290	Callee	mj2_setup_decoder		137650	0					
ANR	138291	Identifier	mj2_setup_decoder		137650	0					
ANR	138292	ArgumentList	dinfo -> mj2_handle		137650	1					
ANR	138293	Argument	dinfo -> mj2_handle		137650	0					
ANR	138294	PtrMemberAccess	dinfo -> mj2_handle		137650	0					
ANR	138295	Identifier	dinfo		137650	0					
ANR	138296	Identifier	mj2_handle		137650	1					
ANR	138297	Argument	& parameters		137650	1					
ANR	138298	UnaryOperationExpression	& parameters		137650	0					
ANR	138299	UnaryOperator	&		137650	0					
ANR	138300	Identifier	parameters		137650	1					
ANR	138301	IfStatement	"if ( mj2_read_struct ( file , movie ) )"		137650	34					
ANR	138302	Condition	"mj2_read_struct ( file , movie )"	330:8:11868:11895	137650	0	True				
ANR	138303	CallExpression	"mj2_read_struct ( file , movie )"		137650	0					
ANR	138304	Callee	mj2_read_struct		137650	0					
ANR	138305	Identifier	mj2_read_struct		137650	0					
ANR	138306	ArgumentList	file		137650	1					
ANR	138307	Argument	file		137650	0					
ANR	138308	Identifier	file		137650	0					
ANR	138309	Argument	movie		137650	1					
ANR	138310	Identifier	movie		137650	0					
ANR	138311	CompoundStatement		193:38:6055:6055	137650	1					
ANR	138312	ExpressionStatement	fclose ( xmlout )	331:8:11940:11954	137650	0	True				
ANR	138313	CallExpression	fclose ( xmlout )		137650	0					
ANR	138314	Callee	fclose		137650	0					
ANR	138315	Identifier	fclose		137650	0					
ANR	138316	ArgumentList	xmlout		137650	1					
ANR	138317	Argument	xmlout		137650	0					
ANR	138318	Identifier	xmlout		137650	0					
ANR	138319	ReturnStatement	return 1 ;	332:8:11964:11972	137650	1	True				
ANR	138320	PrimaryExpression	1		137650	0					
ANR	138321	ExpressionStatement	"xml_write_init ( notes , sampletables , raw , derived )"	335:4:11985:12034	137650	35	True				
ANR	138322	CallExpression	"xml_write_init ( notes , sampletables , raw , derived )"		137650	0					
ANR	138323	Callee	xml_write_init		137650	0					
ANR	138324	Identifier	xml_write_init		137650	0					
ANR	138325	ArgumentList	notes		137650	1					
ANR	138326	Argument	notes		137650	0					
ANR	138327	Identifier	notes		137650	0					
ANR	138328	Argument	sampletables		137650	1					
ANR	138329	Identifier	sampletables		137650	0					
ANR	138330	Argument	raw		137650	2					
ANR	138331	Identifier	raw		137650	0					
ANR	138332	Argument	derived		137650	3					
ANR	138333	Identifier	derived		137650	0					
ANR	138334	ExpressionStatement	"xml_write_struct ( file , xmlout , movie , sampleframe , stringDTD , & event_mgr )"	336:4:12040:12113	137650	36	True				
ANR	138335	CallExpression	"xml_write_struct ( file , xmlout , movie , sampleframe , stringDTD , & event_mgr )"		137650	0					
ANR	138336	Callee	xml_write_struct		137650	0					
ANR	138337	Identifier	xml_write_struct		137650	0					
ANR	138338	ArgumentList	file		137650	1					
ANR	138339	Argument	file		137650	0					
ANR	138340	Identifier	file		137650	0					
ANR	138341	Argument	xmlout		137650	1					
ANR	138342	Identifier	xmlout		137650	0					
ANR	138343	Argument	movie		137650	2					
ANR	138344	Identifier	movie		137650	0					
ANR	138345	Argument	sampleframe		137650	3					
ANR	138346	Identifier	sampleframe		137650	0					
ANR	138347	Argument	stringDTD		137650	4					
ANR	138348	Identifier	stringDTD		137650	0					
ANR	138349	Argument	& event_mgr		137650	5					
ANR	138350	UnaryOperationExpression	& event_mgr		137650	0					
ANR	138351	UnaryOperator	&		137650	0					
ANR	138352	Identifier	event_mgr		137650	1					
ANR	138353	ExpressionStatement	fclose ( xmlout )	337:4:12119:12133	137650	37	True				
ANR	138354	CallExpression	fclose ( xmlout )		137650	0					
ANR	138355	Callee	fclose		137650	0					
ANR	138356	Identifier	fclose		137650	0					
ANR	138357	ArgumentList	xmlout		137650	1					
ANR	138358	Argument	xmlout		137650	0					
ANR	138359	Identifier	xmlout		137650	0					
ANR	138360	ExpressionStatement	"fprintf ( stderr , ""Metadata correctly extracted to XML file \\n"" )"	339:4:12140:12202	137650	38	True				
ANR	138361	CallExpression	"fprintf ( stderr , ""Metadata correctly extracted to XML file \\n"" )"		137650	0					
ANR	138362	Callee	fprintf		137650	0					
ANR	138363	Identifier	fprintf		137650	0					
ANR	138364	ArgumentList	stderr		137650	1					
ANR	138365	Argument	stderr		137650	0					
ANR	138366	Identifier	stderr		137650	0					
ANR	138367	Argument	"""Metadata correctly extracted to XML file \\n"""		137650	1					
ANR	138368	PrimaryExpression	"""Metadata correctly extracted to XML file \\n"""		137650	0					
ANR	138369	ExpressionStatement		339:67:12203:12203	137650	39	True				
ANR	138370	IfStatement	if ( dinfo )		137650	40					
ANR	138371	Condition	dinfo	342:8:12250:12254	137650	0	True				
ANR	138372	Identifier	dinfo		137650	0					
ANR	138373	CompoundStatement		205:15:6414:6414	137650	1					
ANR	138374	ExpressionStatement	mj2_destroy_decompress ( ( opj_mj2_t * ) dinfo -> mj2_handle )	343:8:12267:12320	137650	0	True				
ANR	138375	CallExpression	mj2_destroy_decompress ( ( opj_mj2_t * ) dinfo -> mj2_handle )		137650	0					
ANR	138376	Callee	mj2_destroy_decompress		137650	0					
ANR	138377	Identifier	mj2_destroy_decompress		137650	0					
ANR	138378	ArgumentList	( opj_mj2_t * ) dinfo -> mj2_handle		137650	1					
ANR	138379	Argument	( opj_mj2_t * ) dinfo -> mj2_handle		137650	0					
ANR	138380	CastExpression	( opj_mj2_t * ) dinfo -> mj2_handle		137650	0					
ANR	138381	CastTarget	opj_mj2_t *		137650	0					
ANR	138382	PtrMemberAccess	dinfo -> mj2_handle		137650	1					
ANR	138383	Identifier	dinfo		137650	0					
ANR	138384	Identifier	mj2_handle		137650	1					
ANR	138385	ReturnStatement	return 0 ;	346:4:12333:12341	137650	41	True				
ANR	138386	PrimaryExpression	0		137650	0					
ANR	138387	ReturnType	int		137650	1					
ANR	138388	Identifier	main		137650	2					
ANR	138389	ParameterList	"int argc , char * argv [ ]"		137650	3					
ANR	138390	Parameter	int argc	137:9:5818:5825	137650	0	True				
ANR	138391	ParameterType	int		137650	0					
ANR	138392	Identifier	argc		137650	1					
ANR	138393	Parameter	char * argv [ ]	137:19:5828:5839	137650	1	True				
ANR	138394	ParameterType	char * [ ]		137650	0					
ANR	138395	Identifier	argv		137650	1					
ANR	138396	CFGEntryNode	ENTRY		137650		True				
ANR	138397	CFGExitNode	EXIT		137650		True				
ANR	138398	Symbol	S3		137650						
ANR	138399	Symbol	notes		137650						
ANR	138400	Symbol	event_mgr . warning_handler		137650						
ANR	138401	Symbol	movie		137650						
ANR	138402	Symbol	outfile		137650						
ANR	138403	Symbol	sampleframe		137650						
ANR	138404	Symbol	optarg		137650						
ANR	138405	Symbol	strchr		137650						
ANR	138406	Symbol	infile		137650						
ANR	138407	Symbol	argv		137650						
ANR	138408	Symbol	* dinfo		137650						
ANR	138409	Symbol	strncmp		137650						
ANR	138410	Symbol	strlen		137650						
ANR	138411	Symbol	file		137650						
ANR	138412	Symbol	len		137650						
ANR	138413	Symbol	getopt		137650						
ANR	138414	Symbol	event_mgr		137650						
ANR	138415	Symbol	warning_callback		137650						
ANR	138416	Symbol	derived		137650						
ANR	138417	Symbol	info_callback		137650						
ANR	138418	Symbol	argc		137650						
ANR	138419	Symbol	dinfo		137650						
ANR	138420	Symbol	fopen		137650						
ANR	138421	Symbol	& sampleframe		137650						
ANR	138422	Symbol	NULL		137650						
ANR	138423	Symbol	c		137650						
ANR	138424	Symbol	mj2_create_decompress		137650						
ANR	138425	Symbol	error_callback		137650						
ANR	138426	Symbol	& parameters		137650						
ANR	138427	Symbol	TRUE		137650						
ANR	138428	Symbol	raw		137650						
ANR	138429	Symbol	mj2_read_struct		137650						
ANR	138430	Symbol	stderr		137650						
ANR	138431	Symbol	xmlout		137650						
ANR	138432	Symbol	s		137650						
ANR	138433	Symbol	stringDTD		137650						
ANR	138434	Symbol	* infile		137650						
ANR	138435	Symbol	event_mgr . error_handler		137650						
ANR	138436	Symbol	sampletables		137650						
ANR	138437	Symbol	* outfile		137650						
ANR	138438	Symbol	FALSE		137650						
ANR	138439	Symbol	dinfo -> mj2_handle		137650						
ANR	138440	Symbol	& event_mgr		137650						
ANR	138441	Symbol	event_mgr . info_handler		137650						
ANR	138442	Symbol	parameters		137650						
ANR	138443	Symbol	* s		137650						
ANR	138444	Symbol	S1		137650						
ANR	138445	Symbol	S2		137650						
