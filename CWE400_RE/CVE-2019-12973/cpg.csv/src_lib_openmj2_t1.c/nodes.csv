command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	563842	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openmj2_t1.c								
ANR	563843	DeclStmt									
ANR	563844	Decl							INLINE char	"INLINE char ( int f , int orient )"	t1_getctxno_zc
ANR	563845	DeclStmt									
ANR	563846	Decl							char	char ( int f )	t1_getctxno_sc
ANR	563847	DeclStmt									
ANR	563848	Decl							INLINE int	INLINE int ( int f )	t1_getctxno_mag
ANR	563849	DeclStmt									
ANR	563850	Decl							char	char ( int f )	t1_getspb
ANR	563851	DeclStmt									
ANR	563852	Decl							short	"short ( int x , int bitpos )"	t1_getnmsedec_sig
ANR	563853	DeclStmt									
ANR	563854	Decl							short	"short ( int x , int bitpos )"	t1_getnmsedec_ref
ANR	563855	DeclStmt									
ANR	563856	Decl							void	"void ( flag_t * flagsp , int s , int stride )"	t1_updateflags
ANR	563857	DeclStmt									
ANR	563858	Decl							void	"void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int bpno , int one , int * nmsedec , char type , int vsc )"	t1_enc_sigpass_step
ANR	563859	DeclStmt									
ANR	563860	Decl							INLINE void	"INLINE void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int vsc )"	t1_dec_sigpass_step_raw
ANR	563861	DeclStmt									
ANR	563862	Decl							INLINE void	"INLINE void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf )"	t1_dec_sigpass_step_mqc
ANR	563863	DeclStmt									
ANR	563864	Decl							INLINE void	"INLINE void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int vsc )"	t1_dec_sigpass_step_mqc_vsc
ANR	563865	DeclStmt									
ANR	563866	Decl							void	"void ( opj_t1_t * t1 , int bpno , int orient , int * nmsedec , char type , int cblksty )"	t1_enc_sigpass
ANR	563867	DeclStmt									
ANR	563868	Decl							void	"void ( opj_t1_t * t1 , int bpno , int orient , int cblksty )"	t1_dec_sigpass_raw
ANR	563869	DeclStmt									
ANR	563870	Decl							void	"void ( opj_t1_t * t1 , int bpno , int orient )"	t1_dec_sigpass_mqc
ANR	563871	DeclStmt									
ANR	563872	Decl							void	"void ( opj_t1_t * t1 , int bpno , int orient )"	t1_dec_sigpass_mqc_vsc
ANR	563873	DeclStmt									
ANR	563874	Decl							void	"void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int bpno , int one , int * nmsedec , char type , int vsc )"	t1_enc_refpass_step
ANR	563875	DeclStmt									
ANR	563876	Decl							INLINE void	"INLINE void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf , int vsc )"	t1_dec_refpass_step_raw
ANR	563877	DeclStmt									
ANR	563878	Decl							INLINE void	"INLINE void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf )"	t1_dec_refpass_step_mqc
ANR	563879	DeclStmt									
ANR	563880	Decl							INLINE void	"INLINE void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf , int vsc )"	t1_dec_refpass_step_mqc_vsc
ANR	563881	DeclStmt									
ANR	563882	Decl							void	"void ( opj_t1_t * t1 , int bpno , int * nmsedec , char type , int cblksty )"	t1_enc_refpass
ANR	563883	DeclStmt									
ANR	563884	Decl							void	"void ( opj_t1_t * t1 , int bpno , int cblksty )"	t1_dec_refpass_raw
ANR	563885	DeclStmt									
ANR	563886	Decl							void	"void ( opj_t1_t * t1 , int bpno )"	t1_dec_refpass_mqc
ANR	563887	DeclStmt									
ANR	563888	Decl							void	"void ( opj_t1_t * t1 , int bpno )"	t1_dec_refpass_mqc_vsc
ANR	563889	DeclStmt									
ANR	563890	Decl							void	"void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int bpno , int one , int * nmsedec , int partial , int vsc )"	t1_enc_clnpass_step
ANR	563891	DeclStmt									
ANR	563892	Decl							void	"void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf )"	t1_dec_clnpass_step_partial
ANR	563893	DeclStmt									
ANR	563894	Decl							void	"void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf )"	t1_dec_clnpass_step
ANR	563895	DeclStmt									
ANR	563896	Decl							void	"void ( opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int partial , int vsc )"	t1_dec_clnpass_step_vsc
ANR	563897	DeclStmt									
ANR	563898	Decl							void	"void ( opj_t1_t * t1 , int bpno , int orient , int * nmsedec , int cblksty )"	t1_enc_clnpass
ANR	563899	DeclStmt									
ANR	563900	Decl							void	"void ( opj_t1_t * t1 , int bpno , int orient , int cblksty )"	t1_dec_clnpass
ANR	563901	DeclStmt									
ANR	563902	Decl							double	"double ( int nmsedec , int compno , int level , int orient , int bpno , int qmfbid , double stepsize , int numcomps , int mct )"	t1_getwmsedec
ANR	563903	DeclStmt									
ANR	563904	Decl							void	"void ( opj_t1_t * t1 , opj_tcd_cblk_enc_t * cblk , int orient , int compno , int level , int qmfbid , double stepsize , int cblksty , int numcomps , int mct , opj_tcd_tile_t * tile )"	t1_encode_cblk
ANR	563905	DeclStmt									
ANR	563906	Decl							void	"void ( opj_t1_t * t1 , opj_tcd_cblk_dec_t * cblk , int orient , int roishift , int cblksty )"	t1_decode_cblk
ANR	563907	Function	t1_getctxno_zc	285:0:6663:6770							
ANR	563908	FunctionDef	"t1_getctxno_zc (int f , int orient)"		563907	0					
ANR	563909	CompoundStatement		286:0:6709:6770	563907	0					
ANR	563910	ReturnStatement	return lut_ctxno_zc [ ( orient << 8 ) | ( f & T1_SIG_OTH ) ] ;	287:4:6715:6768	563907	0	True				
ANR	563911	ArrayIndexing	lut_ctxno_zc [ ( orient << 8 ) | ( f & T1_SIG_OTH ) ]		563907	0					
ANR	563912	Identifier	lut_ctxno_zc		563907	0					
ANR	563913	InclusiveOrExpression	( orient << 8 ) | ( f & T1_SIG_OTH )		563907	1		|			
ANR	563914	ShiftExpression	orient << 8		563907	0		<<			
ANR	563915	Identifier	orient		563907	0					
ANR	563916	PrimaryExpression	8		563907	1					
ANR	563917	BitAndExpression	f & T1_SIG_OTH		563907	1		&			
ANR	563918	Identifier	f		563907	0					
ANR	563919	Identifier	T1_SIG_OTH		563907	1					
ANR	563920	ReturnType	static char		563907	1					
ANR	563921	Identifier	t1_getctxno_zc		563907	2					
ANR	563922	ParameterList	"int f , int orient"		563907	3					
ANR	563923	Parameter	int f	285:27:6690:6694	563907	0	True				
ANR	563924	ParameterType	int		563907	0					
ANR	563925	Identifier	f		563907	1					
ANR	563926	Parameter	int orient	285:34:6697:6706	563907	1	True				
ANR	563927	ParameterType	int		563907	0					
ANR	563928	Identifier	orient		563907	1					
ANR	563929	CFGEntryNode	ENTRY		563907		True				
ANR	563930	CFGExitNode	EXIT		563907		True				
ANR	563931	Symbol	* f		563907						
ANR	563932	Symbol	* T1_SIG_OTH		563907						
ANR	563933	Symbol	* orient		563907						
ANR	563934	Symbol	orient		563907						
ANR	563935	Symbol	f		563907						
ANR	563936	Symbol	lut_ctxno_zc		563907						
ANR	563937	Symbol	* lut_ctxno_zc		563907						
ANR	563938	Symbol	T1_SIG_OTH		563907						
ANR	563939	Function	t1_getctxno_sc	290:0:6773:6869							
ANR	563940	FunctionDef	t1_getctxno_sc (int f)		563939	0					
ANR	563941	CompoundStatement		291:0:6807:6869	563939	0					
ANR	563942	ReturnStatement	return lut_ctxno_sc [ ( f & ( T1_SIG_PRIM | T1_SGN ) ) >> 4 ] ;	292:4:6813:6867	563939	0	True				
ANR	563943	ArrayIndexing	lut_ctxno_sc [ ( f & ( T1_SIG_PRIM | T1_SGN ) ) >> 4 ]		563939	0					
ANR	563944	Identifier	lut_ctxno_sc		563939	0					
ANR	563945	ShiftExpression	( f & ( T1_SIG_PRIM | T1_SGN ) ) >> 4		563939	1		>>			
ANR	563946	BitAndExpression	f & ( T1_SIG_PRIM | T1_SGN )		563939	0		&			
ANR	563947	Identifier	f		563939	0					
ANR	563948	InclusiveOrExpression	T1_SIG_PRIM | T1_SGN		563939	1		|			
ANR	563949	Identifier	T1_SIG_PRIM		563939	0					
ANR	563950	Identifier	T1_SGN		563939	1					
ANR	563951	PrimaryExpression	4		563939	1					
ANR	563952	ReturnType	static char		563939	1					
ANR	563953	Identifier	t1_getctxno_sc		563939	2					
ANR	563954	ParameterList	int f		563939	3					
ANR	563955	Parameter	int f	290:27:6800:6804	563939	0	True				
ANR	563956	ParameterType	int		563939	0					
ANR	563957	Identifier	f		563939	1					
ANR	563958	CFGEntryNode	ENTRY		563939		True				
ANR	563959	CFGExitNode	EXIT		563939		True				
ANR	563960	Symbol	* f		563939						
ANR	563961	Symbol	* T1_SGN		563939						
ANR	563962	Symbol	* T1_SIG_PRIM		563939						
ANR	563963	Symbol	f		563939						
ANR	563964	Symbol	* lut_ctxno_sc		563939						
ANR	563965	Symbol	T1_SIG_PRIM		563939						
ANR	563966	Symbol	lut_ctxno_sc		563939						
ANR	563967	Symbol	T1_SGN		563939						
ANR	563968	Function	t1_getctxno_mag	295:0:6872:7052							
ANR	563969	FunctionDef	t1_getctxno_mag (int f)		563968	0					
ANR	563970	CompoundStatement		296:0:6906:7052	563968	0					
ANR	563971	IdentifierDeclStatement	int tmp1 = ( f & T1_SIG_OTH ) ? T1_CTXNO_MAG + 1 : T1_CTXNO_MAG ;	297:4:6912:6973	563968	0	True				
ANR	563972	IdentifierDecl	tmp1 = ( f & T1_SIG_OTH ) ? T1_CTXNO_MAG + 1 : T1_CTXNO_MAG		563968	0					
ANR	563973	IdentifierDeclType	int		563968	0					
ANR	563974	Identifier	tmp1		563968	1					
ANR	563975	AssignmentExpression	tmp1 = ( f & T1_SIG_OTH ) ? T1_CTXNO_MAG + 1 : T1_CTXNO_MAG		563968	2		=			
ANR	563976	Identifier	tmp1		563968	0					
ANR	563977	ConditionalExpression	( f & T1_SIG_OTH ) ? T1_CTXNO_MAG + 1 : T1_CTXNO_MAG		563968	1					
ANR	563978	Condition	f & T1_SIG_OTH		563968	0					
ANR	563979	BitAndExpression	f & T1_SIG_OTH		563968	0		&			
ANR	563980	Identifier	f		563968	0					
ANR	563981	Identifier	T1_SIG_OTH		563968	1					
ANR	563982	AdditiveExpression	T1_CTXNO_MAG + 1		563968	1		+			
ANR	563983	Identifier	T1_CTXNO_MAG		563968	0					
ANR	563984	PrimaryExpression	1		563968	1					
ANR	563985	Identifier	T1_CTXNO_MAG		563968	2					
ANR	563986	IdentifierDeclStatement	int tmp2 = ( f & T1_REFINE ) ? T1_CTXNO_MAG + 2 : tmp1 ;	298:4:6979:7031	563968	1	True				
ANR	563987	IdentifierDecl	tmp2 = ( f & T1_REFINE ) ? T1_CTXNO_MAG + 2 : tmp1		563968	0					
ANR	563988	IdentifierDeclType	int		563968	0					
ANR	563989	Identifier	tmp2		563968	1					
ANR	563990	AssignmentExpression	tmp2 = ( f & T1_REFINE ) ? T1_CTXNO_MAG + 2 : tmp1		563968	2		=			
ANR	563991	Identifier	tmp2		563968	0					
ANR	563992	ConditionalExpression	( f & T1_REFINE ) ? T1_CTXNO_MAG + 2 : tmp1		563968	1					
ANR	563993	Condition	f & T1_REFINE		563968	0					
ANR	563994	BitAndExpression	f & T1_REFINE		563968	0		&			
ANR	563995	Identifier	f		563968	0					
ANR	563996	Identifier	T1_REFINE		563968	1					
ANR	563997	AdditiveExpression	T1_CTXNO_MAG + 2		563968	1		+			
ANR	563998	Identifier	T1_CTXNO_MAG		563968	0					
ANR	563999	PrimaryExpression	2		563968	1					
ANR	564000	Identifier	tmp1		563968	2					
ANR	564001	ReturnStatement	return ( tmp2 ) ;	299:4:7037:7050	563968	2	True				
ANR	564002	Identifier	tmp2		563968	0					
ANR	564003	ReturnType	static int		563968	1					
ANR	564004	Identifier	t1_getctxno_mag		563968	2					
ANR	564005	ParameterList	int f		563968	3					
ANR	564006	Parameter	int f	295:27:6899:6903	563968	0	True				
ANR	564007	ParameterType	int		563968	0					
ANR	564008	Identifier	f		563968	1					
ANR	564009	CFGEntryNode	ENTRY		563968		True				
ANR	564010	CFGExitNode	EXIT		563968		True				
ANR	564011	Symbol	f		563968						
ANR	564012	Symbol	T1_REFINE		563968						
ANR	564013	Symbol	T1_CTXNO_MAG		563968						
ANR	564014	Symbol	tmp1		563968						
ANR	564015	Symbol	tmp2		563968						
ANR	564016	Symbol	T1_SIG_OTH		563968						
ANR	564017	Function	t1_getspb	302:0:7055:7141							
ANR	564018	FunctionDef	t1_getspb (int f)		564017	0					
ANR	564019	CompoundStatement		303:0:7084:7141	564017	0					
ANR	564020	ReturnStatement	return lut_spb [ ( f & ( T1_SIG_PRIM | T1_SGN ) ) >> 4 ] ;	304:4:7090:7139	564017	0	True				
ANR	564021	ArrayIndexing	lut_spb [ ( f & ( T1_SIG_PRIM | T1_SGN ) ) >> 4 ]		564017	0					
ANR	564022	Identifier	lut_spb		564017	0					
ANR	564023	ShiftExpression	( f & ( T1_SIG_PRIM | T1_SGN ) ) >> 4		564017	1		>>			
ANR	564024	BitAndExpression	f & ( T1_SIG_PRIM | T1_SGN )		564017	0		&			
ANR	564025	Identifier	f		564017	0					
ANR	564026	InclusiveOrExpression	T1_SIG_PRIM | T1_SGN		564017	1		|			
ANR	564027	Identifier	T1_SIG_PRIM		564017	0					
ANR	564028	Identifier	T1_SGN		564017	1					
ANR	564029	PrimaryExpression	4		564017	1					
ANR	564030	ReturnType	static char		564017	1					
ANR	564031	Identifier	t1_getspb		564017	2					
ANR	564032	ParameterList	int f		564017	3					
ANR	564033	Parameter	int f	302:22:7077:7081	564017	0	True				
ANR	564034	ParameterType	int		564017	0					
ANR	564035	Identifier	f		564017	1					
ANR	564036	CFGEntryNode	ENTRY		564017		True				
ANR	564037	CFGExitNode	EXIT		564017		True				
ANR	564038	Symbol	* f		564017						
ANR	564039	Symbol	* T1_SGN		564017						
ANR	564040	Symbol	* T1_SIG_PRIM		564017						
ANR	564041	Symbol	f		564017						
ANR	564042	Symbol	lut_spb		564017						
ANR	564043	Symbol	T1_SIG_PRIM		564017						
ANR	564044	Symbol	* lut_spb		564017						
ANR	564045	Symbol	T1_SGN		564017						
ANR	564046	Function	t1_getnmsedec_sig	307:0:7144:7482							
ANR	564047	FunctionDef	"t1_getnmsedec_sig (int x , int bitpos)"		564046	0					
ANR	564048	CompoundStatement		308:0:7194:7482	564046	0					
ANR	564049	IfStatement	if ( bitpos > T1_NMSEDEC_FRACBITS )		564046	0					
ANR	564050	Condition	bitpos > T1_NMSEDEC_FRACBITS	309:8:7204:7231	564046	0	True				
ANR	564051	RelationalExpression	bitpos > T1_NMSEDEC_FRACBITS		564046	0		>			
ANR	564052	Identifier	bitpos		564046	0					
ANR	564053	Identifier	T1_NMSEDEC_FRACBITS		564046	1					
ANR	564054	CompoundStatement		2:38:39:39	564046	1					
ANR	564055	ReturnStatement	return lut_nmsedec_sig [ ( x >> ( bitpos - T1_NMSEDEC_FRACBITS ) ) & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ] ;	310:8:7244:7410	564046	0	True				
ANR	564056	ArrayIndexing	lut_nmsedec_sig [ ( x >> ( bitpos - T1_NMSEDEC_FRACBITS ) ) & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ]		564046	0					
ANR	564057	Identifier	lut_nmsedec_sig		564046	0					
ANR	564058	BitAndExpression	( x >> ( bitpos - T1_NMSEDEC_FRACBITS ) ) & ( ( 1 << T1_NMSEDEC_BITS ) - 1 )		564046	1		&			
ANR	564059	ShiftExpression	x >> ( bitpos - T1_NMSEDEC_FRACBITS )		564046	0		>>			
ANR	564060	Identifier	x		564046	0					
ANR	564061	AdditiveExpression	bitpos - T1_NMSEDEC_FRACBITS		564046	1		-			
ANR	564062	Identifier	bitpos		564046	0					
ANR	564063	Identifier	T1_NMSEDEC_FRACBITS		564046	1					
ANR	564064	AdditiveExpression	( 1 << T1_NMSEDEC_BITS ) - 1		564046	1		-			
ANR	564065	ShiftExpression	1 << T1_NMSEDEC_BITS		564046	0		<<			
ANR	564066	PrimaryExpression	1		564046	0					
ANR	564067	Identifier	T1_NMSEDEC_BITS		564046	1					
ANR	564068	PrimaryExpression	1		564046	1					
ANR	564069	ReturnStatement	return lut_nmsedec_sig0 [ x & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ] ;	314:4:7423:7480	564046	1	True				
ANR	564070	ArrayIndexing	lut_nmsedec_sig0 [ x & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ]		564046	0					
ANR	564071	Identifier	lut_nmsedec_sig0		564046	0					
ANR	564072	BitAndExpression	x & ( ( 1 << T1_NMSEDEC_BITS ) - 1 )		564046	1		&			
ANR	564073	Identifier	x		564046	0					
ANR	564074	AdditiveExpression	( 1 << T1_NMSEDEC_BITS ) - 1		564046	1		-			
ANR	564075	ShiftExpression	1 << T1_NMSEDEC_BITS		564046	0		<<			
ANR	564076	PrimaryExpression	1		564046	0					
ANR	564077	Identifier	T1_NMSEDEC_BITS		564046	1					
ANR	564078	PrimaryExpression	1		564046	1					
ANR	564079	ReturnType	static short		564046	1					
ANR	564080	Identifier	t1_getnmsedec_sig		564046	2					
ANR	564081	ParameterList	"int x , int bitpos"		564046	3					
ANR	564082	Parameter	int x	307:31:7175:7179	564046	0	True				
ANR	564083	ParameterType	int		564046	0					
ANR	564084	Identifier	x		564046	1					
ANR	564085	Parameter	int bitpos	307:38:7182:7191	564046	1	True				
ANR	564086	ParameterType	int		564046	0					
ANR	564087	Identifier	bitpos		564046	1					
ANR	564088	CFGEntryNode	ENTRY		564046		True				
ANR	564089	CFGExitNode	EXIT		564046		True				
ANR	564090	Symbol	T1_NMSEDEC_FRACBITS		564046						
ANR	564091	Symbol	* x		564046						
ANR	564092	Symbol	* lut_nmsedec_sig		564046						
ANR	564093	Symbol	* T1_NMSEDEC_BITS		564046						
ANR	564094	Symbol	x		564046						
ANR	564095	Symbol	* T1_NMSEDEC_FRACBITS		564046						
ANR	564096	Symbol	* bitpos		564046						
ANR	564097	Symbol	T1_NMSEDEC_BITS		564046						
ANR	564098	Symbol	lut_nmsedec_sig0		564046						
ANR	564099	Symbol	bitpos		564046						
ANR	564100	Symbol	lut_nmsedec_sig		564046						
ANR	564101	Symbol	* lut_nmsedec_sig0		564046						
ANR	564102	Function	t1_getnmsedec_ref	317:0:7485:7823							
ANR	564103	FunctionDef	"t1_getnmsedec_ref (int x , int bitpos)"		564102	0					
ANR	564104	CompoundStatement		318:0:7535:7823	564102	0					
ANR	564105	IfStatement	if ( bitpos > T1_NMSEDEC_FRACBITS )		564102	0					
ANR	564106	Condition	bitpos > T1_NMSEDEC_FRACBITS	319:8:7545:7572	564102	0	True				
ANR	564107	RelationalExpression	bitpos > T1_NMSEDEC_FRACBITS		564102	0		>			
ANR	564108	Identifier	bitpos		564102	0					
ANR	564109	Identifier	T1_NMSEDEC_FRACBITS		564102	1					
ANR	564110	CompoundStatement		2:38:39:39	564102	1					
ANR	564111	ReturnStatement	return lut_nmsedec_ref [ ( x >> ( bitpos - T1_NMSEDEC_FRACBITS ) ) & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ] ;	320:8:7585:7751	564102	0	True				
ANR	564112	ArrayIndexing	lut_nmsedec_ref [ ( x >> ( bitpos - T1_NMSEDEC_FRACBITS ) ) & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ]		564102	0					
ANR	564113	Identifier	lut_nmsedec_ref		564102	0					
ANR	564114	BitAndExpression	( x >> ( bitpos - T1_NMSEDEC_FRACBITS ) ) & ( ( 1 << T1_NMSEDEC_BITS ) - 1 )		564102	1		&			
ANR	564115	ShiftExpression	x >> ( bitpos - T1_NMSEDEC_FRACBITS )		564102	0		>>			
ANR	564116	Identifier	x		564102	0					
ANR	564117	AdditiveExpression	bitpos - T1_NMSEDEC_FRACBITS		564102	1		-			
ANR	564118	Identifier	bitpos		564102	0					
ANR	564119	Identifier	T1_NMSEDEC_FRACBITS		564102	1					
ANR	564120	AdditiveExpression	( 1 << T1_NMSEDEC_BITS ) - 1		564102	1		-			
ANR	564121	ShiftExpression	1 << T1_NMSEDEC_BITS		564102	0		<<			
ANR	564122	PrimaryExpression	1		564102	0					
ANR	564123	Identifier	T1_NMSEDEC_BITS		564102	1					
ANR	564124	PrimaryExpression	1		564102	1					
ANR	564125	ReturnStatement	return lut_nmsedec_ref0 [ x & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ] ;	324:4:7764:7821	564102	1	True				
ANR	564126	ArrayIndexing	lut_nmsedec_ref0 [ x & ( ( 1 << T1_NMSEDEC_BITS ) - 1 ) ]		564102	0					
ANR	564127	Identifier	lut_nmsedec_ref0		564102	0					
ANR	564128	BitAndExpression	x & ( ( 1 << T1_NMSEDEC_BITS ) - 1 )		564102	1		&			
ANR	564129	Identifier	x		564102	0					
ANR	564130	AdditiveExpression	( 1 << T1_NMSEDEC_BITS ) - 1		564102	1		-			
ANR	564131	ShiftExpression	1 << T1_NMSEDEC_BITS		564102	0		<<			
ANR	564132	PrimaryExpression	1		564102	0					
ANR	564133	Identifier	T1_NMSEDEC_BITS		564102	1					
ANR	564134	PrimaryExpression	1		564102	1					
ANR	564135	ReturnType	static short		564102	1					
ANR	564136	Identifier	t1_getnmsedec_ref		564102	2					
ANR	564137	ParameterList	"int x , int bitpos"		564102	3					
ANR	564138	Parameter	int x	317:31:7516:7520	564102	0	True				
ANR	564139	ParameterType	int		564102	0					
ANR	564140	Identifier	x		564102	1					
ANR	564141	Parameter	int bitpos	317:38:7523:7532	564102	1	True				
ANR	564142	ParameterType	int		564102	0					
ANR	564143	Identifier	bitpos		564102	1					
ANR	564144	CFGEntryNode	ENTRY		564102		True				
ANR	564145	CFGExitNode	EXIT		564102		True				
ANR	564146	Symbol	T1_NMSEDEC_FRACBITS		564102						
ANR	564147	Symbol	lut_nmsedec_ref		564102						
ANR	564148	Symbol	* lut_nmsedec_ref		564102						
ANR	564149	Symbol	* x		564102						
ANR	564150	Symbol	lut_nmsedec_ref0		564102						
ANR	564151	Symbol	* T1_NMSEDEC_BITS		564102						
ANR	564152	Symbol	x		564102						
ANR	564153	Symbol	* T1_NMSEDEC_FRACBITS		564102						
ANR	564154	Symbol	T1_NMSEDEC_BITS		564102						
ANR	564155	Symbol	* bitpos		564102						
ANR	564156	Symbol	* lut_nmsedec_ref0		564102						
ANR	564157	Symbol	bitpos		564102						
ANR	564158	Function	t1_updateflags	327:0:7826:8392							
ANR	564159	FunctionDef	"t1_updateflags (flag_t * flagsp , int s , int stride)"		564158	0					
ANR	564160	CompoundStatement		328:0:7888:8392	564158	0					
ANR	564161	IdentifierDeclStatement	flag_t * np = flagsp - stride ;	329:4:7894:7922	564158	0	True				
ANR	564162	IdentifierDecl	* np = flagsp - stride		564158	0					
ANR	564163	IdentifierDeclType	flag_t *		564158	0					
ANR	564164	Identifier	np		564158	1					
ANR	564165	AssignmentExpression	* np = flagsp - stride		564158	2		=			
ANR	564166	Identifier	np		564158	0					
ANR	564167	AdditiveExpression	flagsp - stride		564158	1		-			
ANR	564168	Identifier	flagsp		564158	0					
ANR	564169	Identifier	stride		564158	1					
ANR	564170	IdentifierDeclStatement	flag_t * sp = flagsp + stride ;	330:4:7928:7956	564158	1	True				
ANR	564171	IdentifierDecl	* sp = flagsp + stride		564158	0					
ANR	564172	IdentifierDeclType	flag_t *		564158	0					
ANR	564173	Identifier	sp		564158	1					
ANR	564174	AssignmentExpression	* sp = flagsp + stride		564158	2		=			
ANR	564175	Identifier	sp		564158	0					
ANR	564176	AdditiveExpression	flagsp + stride		564158	1		+			
ANR	564177	Identifier	flagsp		564158	0					
ANR	564178	Identifier	stride		564158	1					
ANR	564179	Statement	static	332:4:7963:7968	564158	2	True				
ANR	564180	IdentifierDeclStatement	"const flag_t mod [ ] = { T1_SIG_S , T1_SIG_S | T1_SGN_S , T1_SIG_E , T1_SIG_E | T1_SGN_E , T1_SIG_W , T1_SIG_W | T1_SGN_W , T1_SIG_N , T1_SIG_N | T1_SGN_N } ;"	332:11:7970:8153	564158	3	True				
ANR	564181	IdentifierDecl	"mod [ ] = { T1_SIG_S , T1_SIG_S | T1_SGN_S , T1_SIG_E , T1_SIG_E | T1_SGN_E , T1_SIG_W , T1_SIG_W | T1_SGN_W , T1_SIG_N , T1_SIG_N | T1_SGN_N }"		564158	0					
ANR	564182	IdentifierDeclType	const flag_t [ ]		564158	0					
ANR	564183	Identifier	mod		564158	1					
ANR	564184	AssignmentExpression	"mod [ ] = { T1_SIG_S , T1_SIG_S | T1_SGN_S , T1_SIG_E , T1_SIG_E | T1_SGN_E , T1_SIG_W , T1_SIG_W | T1_SGN_W , T1_SIG_N , T1_SIG_N | T1_SGN_N }"		564158	2		=			
ANR	564185	Identifier	mod		564158	0					
ANR	564186	InitializerList	T1_SIG_S		564158	1					
ANR	564187	Identifier	T1_SIG_S		564158	0					
ANR	564188	InclusiveOrExpression	T1_SIG_S | T1_SGN_S		564158	1		|			
ANR	564189	Identifier	T1_SIG_S		564158	0					
ANR	564190	Identifier	T1_SGN_S		564158	1					
ANR	564191	Identifier	T1_SIG_E		564158	2					
ANR	564192	InclusiveOrExpression	T1_SIG_E | T1_SGN_E		564158	3		|			
ANR	564193	Identifier	T1_SIG_E		564158	0					
ANR	564194	Identifier	T1_SGN_E		564158	1					
ANR	564195	Identifier	T1_SIG_W		564158	4					
ANR	564196	InclusiveOrExpression	T1_SIG_W | T1_SGN_W		564158	5		|			
ANR	564197	Identifier	T1_SIG_W		564158	0					
ANR	564198	Identifier	T1_SGN_W		564158	1					
ANR	564199	Identifier	T1_SIG_N		564158	6					
ANR	564200	InclusiveOrExpression	T1_SIG_N | T1_SGN_N		564158	7		|			
ANR	564201	Identifier	T1_SIG_N		564158	0					
ANR	564202	Identifier	T1_SGN_N		564158	1					
ANR	564203	ExpressionStatement	np [ - 1 ] |= T1_SIG_SE	339:4:8160:8179	564158	4	True				
ANR	564204	AssignmentExpression	np [ - 1 ] |= T1_SIG_SE		564158	0		|=			
ANR	564205	ArrayIndexing	np [ - 1 ]		564158	0					
ANR	564206	Identifier	np		564158	0					
ANR	564207	UnaryOperationExpression	- 1		564158	1					
ANR	564208	UnaryOperator	-		564158	0					
ANR	564209	PrimaryExpression	1		564158	1					
ANR	564210	Identifier	T1_SIG_SE		564158	1					
ANR	564211	ExpressionStatement	np [ 0 ] |= mod [ s ]	340:4:8185:8201	564158	5	True				
ANR	564212	AssignmentExpression	np [ 0 ] |= mod [ s ]		564158	0		|=			
ANR	564213	ArrayIndexing	np [ 0 ]		564158	0					
ANR	564214	Identifier	np		564158	0					
ANR	564215	PrimaryExpression	0		564158	1					
ANR	564216	ArrayIndexing	mod [ s ]		564158	1					
ANR	564217	Identifier	mod		564158	0					
ANR	564218	Identifier	s		564158	1					
ANR	564219	ExpressionStatement	np [ 1 ] |= T1_SIG_SW	341:4:8207:8226	564158	6	True				
ANR	564220	AssignmentExpression	np [ 1 ] |= T1_SIG_SW		564158	0		|=			
ANR	564221	ArrayIndexing	np [ 1 ]		564158	0					
ANR	564222	Identifier	np		564158	0					
ANR	564223	PrimaryExpression	1		564158	1					
ANR	564224	Identifier	T1_SIG_SW		564158	1					
ANR	564225	ExpressionStatement	flagsp [ - 1 ] |= mod [ s + 2 ]	343:4:8233:8257	564158	7	True				
ANR	564226	AssignmentExpression	flagsp [ - 1 ] |= mod [ s + 2 ]		564158	0		|=			
ANR	564227	ArrayIndexing	flagsp [ - 1 ]		564158	0					
ANR	564228	Identifier	flagsp		564158	0					
ANR	564229	UnaryOperationExpression	- 1		564158	1					
ANR	564230	UnaryOperator	-		564158	0					
ANR	564231	PrimaryExpression	1		564158	1					
ANR	564232	ArrayIndexing	mod [ s + 2 ]		564158	1					
ANR	564233	Identifier	mod		564158	0					
ANR	564234	AdditiveExpression	s + 2		564158	1		+			
ANR	564235	Identifier	s		564158	0					
ANR	564236	PrimaryExpression	2		564158	1					
ANR	564237	ExpressionStatement	flagsp [ 0 ] |= T1_SIG	344:4:8263:8283	564158	8	True				
ANR	564238	AssignmentExpression	flagsp [ 0 ] |= T1_SIG		564158	0		|=			
ANR	564239	ArrayIndexing	flagsp [ 0 ]		564158	0					
ANR	564240	Identifier	flagsp		564158	0					
ANR	564241	PrimaryExpression	0		564158	1					
ANR	564242	Identifier	T1_SIG		564158	1					
ANR	564243	ExpressionStatement	flagsp [ 1 ] |= mod [ s + 4 ]	345:4:8289:8313	564158	9	True				
ANR	564244	AssignmentExpression	flagsp [ 1 ] |= mod [ s + 4 ]		564158	0		|=			
ANR	564245	ArrayIndexing	flagsp [ 1 ]		564158	0					
ANR	564246	Identifier	flagsp		564158	0					
ANR	564247	PrimaryExpression	1		564158	1					
ANR	564248	ArrayIndexing	mod [ s + 4 ]		564158	1					
ANR	564249	Identifier	mod		564158	0					
ANR	564250	AdditiveExpression	s + 4		564158	1		+			
ANR	564251	Identifier	s		564158	0					
ANR	564252	PrimaryExpression	4		564158	1					
ANR	564253	ExpressionStatement	sp [ - 1 ] |= T1_SIG_NE	347:4:8320:8339	564158	10	True				
ANR	564254	AssignmentExpression	sp [ - 1 ] |= T1_SIG_NE		564158	0		|=			
ANR	564255	ArrayIndexing	sp [ - 1 ]		564158	0					
ANR	564256	Identifier	sp		564158	0					
ANR	564257	UnaryOperationExpression	- 1		564158	1					
ANR	564258	UnaryOperator	-		564158	0					
ANR	564259	PrimaryExpression	1		564158	1					
ANR	564260	Identifier	T1_SIG_NE		564158	1					
ANR	564261	ExpressionStatement	sp [ 0 ] |= mod [ s + 6 ]	348:4:8345:8365	564158	11	True				
ANR	564262	AssignmentExpression	sp [ 0 ] |= mod [ s + 6 ]		564158	0		|=			
ANR	564263	ArrayIndexing	sp [ 0 ]		564158	0					
ANR	564264	Identifier	sp		564158	0					
ANR	564265	PrimaryExpression	0		564158	1					
ANR	564266	ArrayIndexing	mod [ s + 6 ]		564158	1					
ANR	564267	Identifier	mod		564158	0					
ANR	564268	AdditiveExpression	s + 6		564158	1		+			
ANR	564269	Identifier	s		564158	0					
ANR	564270	PrimaryExpression	6		564158	1					
ANR	564271	ExpressionStatement	sp [ 1 ] |= T1_SIG_NW	349:4:8371:8390	564158	12	True				
ANR	564272	AssignmentExpression	sp [ 1 ] |= T1_SIG_NW		564158	0		|=			
ANR	564273	ArrayIndexing	sp [ 1 ]		564158	0					
ANR	564274	Identifier	sp		564158	0					
ANR	564275	PrimaryExpression	1		564158	1					
ANR	564276	Identifier	T1_SIG_NW		564158	1					
ANR	564277	ReturnType	static void		564158	1					
ANR	564278	Identifier	t1_updateflags		564158	2					
ANR	564279	ParameterList	"flag_t * flagsp , int s , int stride"		564158	3					
ANR	564280	Parameter	flag_t * flagsp	327:27:7853:7866	564158	0	True				
ANR	564281	ParameterType	flag_t *		564158	0					
ANR	564282	Identifier	flagsp		564158	1					
ANR	564283	Parameter	int s	327:43:7869:7873	564158	1	True				
ANR	564284	ParameterType	int		564158	0					
ANR	564285	Identifier	s		564158	1					
ANR	564286	Parameter	int stride	327:50:7876:7885	564158	2	True				
ANR	564287	ParameterType	int		564158	0					
ANR	564288	Identifier	stride		564158	1					
ANR	564289	CFGEntryNode	ENTRY		564158		True				
ANR	564290	CFGExitNode	EXIT		564158		True				
ANR	564291	Symbol	* sp		564158						
ANR	564292	Symbol	T1_SIG_NE		564158						
ANR	564293	Symbol	np		564158						
ANR	564294	Symbol	T1_SIG_W		564158						
ANR	564295	Symbol	mod		564158						
ANR	564296	Symbol	flagsp		564158						
ANR	564297	Symbol	T1_SGN_N		564158						
ANR	564298	Symbol	T1_SIG_SE		564158						
ANR	564299	Symbol	T1_SIG_S		564158						
ANR	564300	Symbol	* np		564158						
ANR	564301	Symbol	stride		564158						
ANR	564302	Symbol	* mod		564158						
ANR	564303	Symbol	T1_SGN_S		564158						
ANR	564304	Symbol	T1_SIG_E		564158						
ANR	564305	Symbol	T1_SIG_SW		564158						
ANR	564306	Symbol	s		564158						
ANR	564307	Symbol	T1_SGN_W		564158						
ANR	564308	Symbol	* flagsp		564158						
ANR	564309	Symbol	T1_SIG		564158						
ANR	564310	Symbol	T1_SIG_N		564158						
ANR	564311	Symbol	sp		564158						
ANR	564312	Symbol	T1_SGN_E		564158						
ANR	564313	Symbol	* s		564158						
ANR	564314	Symbol	T1_SIG_NW		564158						
ANR	564315	Function	t1_enc_sigpass_step	352:0:8395:9584							
ANR	564316	FunctionDef	"t1_enc_sigpass_step (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int bpno , int one , int * nmsedec , char type , int vsc)"		564315	0					
ANR	564317	CompoundStatement		362:0:8571:9584	564315	0					
ANR	564318	IdentifierDeclStatement	"int v , flag ;"	363:4:8577:8588	564315	0	True				
ANR	564319	IdentifierDecl	v		564315	0					
ANR	564320	IdentifierDeclType	int		564315	0					
ANR	564321	Identifier	v		564315	1					
ANR	564322	IdentifierDecl	flag		564315	1					
ANR	564323	IdentifierDeclType	int		564315	0					
ANR	564324	Identifier	flag		564315	1					
ANR	564325	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	365:4:8595:8619	564315	1	True				
ANR	564326	IdentifierDecl	* mqc = t1 -> mqc		564315	0					
ANR	564327	IdentifierDeclType	opj_mqc_t *		564315	0					
ANR	564328	Identifier	mqc		564315	1					
ANR	564329	AssignmentExpression	* mqc = t1 -> mqc		564315	2		=			
ANR	564330	Identifier	mqc		564315	0					
ANR	564331	PtrMemberAccess	t1 -> mqc		564315	1					
ANR	564332	Identifier	t1		564315	0					
ANR	564333	Identifier	mqc		564315	1					
ANR	564334	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	367:4:8648:8746	564315	2	True				
ANR	564335	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		564315	0		=			
ANR	564336	Identifier	flag		564315	0					
ANR	564337	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		564315	1					
ANR	564338	Condition	vsc		564315	0					
ANR	564339	Identifier	vsc		564315	0					
ANR	564340	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		564315	1		&			
ANR	564341	UnaryOperationExpression	* flagsp		564315	0					
ANR	564342	UnaryOperator	*		564315	0					
ANR	564343	Identifier	flagsp		564315	1					
ANR	564344	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		564315	1					
ANR	564345	UnaryOperator	~		564315	0					
ANR	564346	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		564315	1		|			
ANR	564347	Identifier	T1_SIG_S		564315	0					
ANR	564348	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		564315	1		|			
ANR	564349	Identifier	T1_SIG_SE		564315	0					
ANR	564350	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		564315	1		|			
ANR	564351	Identifier	T1_SIG_SW		564315	0					
ANR	564352	Identifier	T1_SGN_S		564315	1					
ANR	564353	UnaryOperationExpression	* flagsp		564315	2					
ANR	564354	UnaryOperator	*		564315	0					
ANR	564355	Identifier	flagsp		564315	1					
ANR	564356	IfStatement	if ( ( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) ) )		564315	3					
ANR	564357	Condition	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )	369:8:8756:8807	564315	0	True				
ANR	564358	AndExpression	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )		564315	0		&&			
ANR	564359	BitAndExpression	flag & T1_SIG_OTH		564315	0		&			
ANR	564360	Identifier	flag		564315	0					
ANR	564361	Identifier	T1_SIG_OTH		564315	1					
ANR	564362	UnaryOperationExpression	! ( flag & ( T1_SIG | T1_VISIT ) )		564315	1					
ANR	564363	UnaryOperator	!		564315	0					
ANR	564364	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		564315	1		&			
ANR	564365	Identifier	flag		564315	0					
ANR	564366	InclusiveOrExpression	T1_SIG | T1_VISIT		564315	1		|			
ANR	564367	Identifier	T1_SIG		564315	0					
ANR	564368	Identifier	T1_VISIT		564315	1					
ANR	564369	CompoundStatement		8:62:238:238	564315	1					
ANR	564370	ExpressionStatement	v = int_abs ( * datap ) & one ? 1 : 0	370:8:8820:8853	564315	0	True				
ANR	564371	AssignmentExpression	v = int_abs ( * datap ) & one ? 1 : 0		564315	0		=			
ANR	564372	Identifier	v		564315	0					
ANR	564373	ConditionalExpression	int_abs ( * datap ) & one ? 1 : 0		564315	1					
ANR	564374	Condition	int_abs ( * datap ) & one		564315	0					
ANR	564375	BitAndExpression	int_abs ( * datap ) & one		564315	0		&			
ANR	564376	CallExpression	int_abs ( * datap )		564315	0					
ANR	564377	Callee	int_abs		564315	0					
ANR	564378	Identifier	int_abs		564315	0					
ANR	564379	ArgumentList	* datap		564315	1					
ANR	564380	Argument	* datap		564315	0					
ANR	564381	UnaryOperationExpression	* datap		564315	0					
ANR	564382	UnaryOperator	*		564315	0					
ANR	564383	Identifier	datap		564315	1					
ANR	564384	Identifier	one		564315	1					
ANR	564385	PrimaryExpression	1		564315	1					
ANR	564386	PrimaryExpression	0		564315	2					
ANR	564387	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"	371:8:8863:8911	564315	1	True				
ANR	564388	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"		564315	0					
ANR	564389	Callee	mqc_setcurctx		564315	0					
ANR	564390	Identifier	mqc_setcurctx		564315	0					
ANR	564391	ArgumentList	mqc		564315	1					
ANR	564392	Argument	mqc		564315	0					
ANR	564393	Identifier	mqc		564315	0					
ANR	564394	Argument	"t1_getctxno_zc ( flag , orient )"		564315	1					
ANR	564395	CallExpression	"t1_getctxno_zc ( flag , orient )"		564315	0					
ANR	564396	Callee	t1_getctxno_zc		564315	0					
ANR	564397	Identifier	t1_getctxno_zc		564315	0					
ANR	564398	ArgumentList	flag		564315	1					
ANR	564399	Argument	flag		564315	0					
ANR	564400	Identifier	flag		564315	0					
ANR	564401	Argument	orient		564315	1					
ANR	564402	Identifier	orient		564315	0					
ANR	564403	IfStatement	if ( type == T1_TYPE_RAW )		564315	2					
ANR	564404	Condition	type == T1_TYPE_RAW	372:12:8939:8957	564315	0	True				
ANR	564405	EqualityExpression	type == T1_TYPE_RAW		564315	0		==			
ANR	564406	Identifier	type		564315	0					
ANR	564407	Identifier	T1_TYPE_RAW		564315	1					
ANR	564408	CompoundStatement		11:33:388:388	564315	1					
ANR	564409	ExpressionStatement	"mqc_bypass_enc ( mqc , v )"	373:12:8998:9020	564315	0	True				
ANR	564410	CallExpression	"mqc_bypass_enc ( mqc , v )"		564315	0					
ANR	564411	Callee	mqc_bypass_enc		564315	0					
ANR	564412	Identifier	mqc_bypass_enc		564315	0					
ANR	564413	ArgumentList	mqc		564315	1					
ANR	564414	Argument	mqc		564315	0					
ANR	564415	Identifier	mqc		564315	0					
ANR	564416	Argument	v		564315	1					
ANR	564417	Identifier	v		564315	0					
ANR	564418	ElseStatement	else		564315	0					
ANR	564419	CompoundStatement		13:15:465:465	564315	0					
ANR	564420	ExpressionStatement	"mqc_encode ( mqc , v )"	375:12:9051:9069	564315	0	True				
ANR	564421	CallExpression	"mqc_encode ( mqc , v )"		564315	0					
ANR	564422	Callee	mqc_encode		564315	0					
ANR	564423	Identifier	mqc_encode		564315	0					
ANR	564424	ArgumentList	mqc		564315	1					
ANR	564425	Argument	mqc		564315	0					
ANR	564426	Identifier	mqc		564315	0					
ANR	564427	Argument	v		564315	1					
ANR	564428	Identifier	v		564315	0					
ANR	564429	IfStatement	if ( v )		564315	3					
ANR	564430	Condition	v	377:12:9093:9093	564315	0	True				
ANR	564431	Identifier	v		564315	0					
ANR	564432	CompoundStatement		16:15:524:524	564315	1					
ANR	564433	ExpressionStatement	v = * datap < 0 ? 1 : 0	378:12:9110:9132	564315	0	True				
ANR	564434	AssignmentExpression	v = * datap < 0 ? 1 : 0		564315	0		=			
ANR	564435	Identifier	v		564315	0					
ANR	564436	ConditionalExpression	* datap < 0 ? 1 : 0		564315	1					
ANR	564437	Condition	* datap < 0		564315	0					
ANR	564438	RelationalExpression	* datap < 0		564315	0		<			
ANR	564439	UnaryOperationExpression	* datap		564315	0					
ANR	564440	UnaryOperator	*		564315	0					
ANR	564441	Identifier	datap		564315	1					
ANR	564442	PrimaryExpression	0		564315	1					
ANR	564443	PrimaryExpression	1		564315	1					
ANR	564444	PrimaryExpression	0		564315	2					
ANR	564445	ExpressionStatement	"* nmsedec += t1_getnmsedec_sig ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"	379:12:9146:9220	564315	1	True				
ANR	564446	AssignmentExpression	"* nmsedec += t1_getnmsedec_sig ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"		564315	0		+=			
ANR	564447	UnaryOperationExpression	* nmsedec		564315	0					
ANR	564448	UnaryOperator	*		564315	0					
ANR	564449	Identifier	nmsedec		564315	1					
ANR	564450	CallExpression	"t1_getnmsedec_sig ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"		564315	1					
ANR	564451	Callee	t1_getnmsedec_sig		564315	0					
ANR	564452	Identifier	t1_getnmsedec_sig		564315	0					
ANR	564453	ArgumentList	int_abs ( * datap )		564315	1					
ANR	564454	Argument	int_abs ( * datap )		564315	0					
ANR	564455	CallExpression	int_abs ( * datap )		564315	0					
ANR	564456	Callee	int_abs		564315	0					
ANR	564457	Identifier	int_abs		564315	0					
ANR	564458	ArgumentList	* datap		564315	1					
ANR	564459	Argument	* datap		564315	0					
ANR	564460	UnaryOperationExpression	* datap		564315	0					
ANR	564461	UnaryOperator	*		564315	0					
ANR	564462	Identifier	datap		564315	1					
ANR	564463	Argument	bpno + T1_NMSEDEC_FRACBITS		564315	1					
ANR	564464	AdditiveExpression	bpno + T1_NMSEDEC_FRACBITS		564315	0		+			
ANR	564465	Identifier	bpno		564315	0					
ANR	564466	Identifier	T1_NMSEDEC_FRACBITS		564315	1					
ANR	564467	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	380:12:9234:9274	564315	2	True				
ANR	564468	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		564315	0					
ANR	564469	Callee	mqc_setcurctx		564315	0					
ANR	564470	Identifier	mqc_setcurctx		564315	0					
ANR	564471	ArgumentList	mqc		564315	1					
ANR	564472	Argument	mqc		564315	0					
ANR	564473	Identifier	mqc		564315	0					
ANR	564474	Argument	t1_getctxno_sc ( flag )		564315	1					
ANR	564475	CallExpression	t1_getctxno_sc ( flag )		564315	0					
ANR	564476	Callee	t1_getctxno_sc		564315	0					
ANR	564477	Identifier	t1_getctxno_sc		564315	0					
ANR	564478	ArgumentList	flag		564315	1					
ANR	564479	Argument	flag		564315	0					
ANR	564480	Identifier	flag		564315	0					
ANR	564481	IfStatement	if ( type == T1_TYPE_RAW )		564315	3					
ANR	564482	Condition	type == T1_TYPE_RAW	381:16:9306:9324	564315	0	True				
ANR	564483	EqualityExpression	type == T1_TYPE_RAW		564315	0		==			
ANR	564484	Identifier	type		564315	0					
ANR	564485	Identifier	T1_TYPE_RAW		564315	1					
ANR	564486	CompoundStatement		20:37:755:755	564315	1					
ANR	564487	ExpressionStatement	"mqc_bypass_enc ( mqc , v )"	382:16:9369:9391	564315	0	True				
ANR	564488	CallExpression	"mqc_bypass_enc ( mqc , v )"		564315	0					
ANR	564489	Callee	mqc_bypass_enc		564315	0					
ANR	564490	Identifier	mqc_bypass_enc		564315	0					
ANR	564491	ArgumentList	mqc		564315	1					
ANR	564492	Argument	mqc		564315	0					
ANR	564493	Identifier	mqc		564315	0					
ANR	564494	Argument	v		564315	1					
ANR	564495	Identifier	v		564315	0					
ANR	564496	ElseStatement	else		564315	0					
ANR	564497	CompoundStatement		22:19:840:840	564315	0					
ANR	564498	ExpressionStatement	"mqc_encode ( mqc , v ^ t1_getspb ( flag ) )"	384:16:9430:9466	564315	0	True				
ANR	564499	CallExpression	"mqc_encode ( mqc , v ^ t1_getspb ( flag ) )"		564315	0					
ANR	564500	Callee	mqc_encode		564315	0					
ANR	564501	Identifier	mqc_encode		564315	0					
ANR	564502	ArgumentList	mqc		564315	1					
ANR	564503	Argument	mqc		564315	0					
ANR	564504	Identifier	mqc		564315	0					
ANR	564505	Argument	v ^ t1_getspb ( flag )		564315	1					
ANR	564506	ExclusiveOrExpression	v ^ t1_getspb ( flag )		564315	0		^			
ANR	564507	Identifier	v		564315	0					
ANR	564508	CallExpression	t1_getspb ( flag )		564315	1					
ANR	564509	Callee	t1_getspb		564315	0					
ANR	564510	Identifier	t1_getspb		564315	0					
ANR	564511	ArgumentList	flag		564315	1					
ANR	564512	Argument	flag		564315	0					
ANR	564513	Identifier	flag		564315	0					
ANR	564514	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	386:12:9494:9537	564315	4	True				
ANR	564515	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		564315	0					
ANR	564516	Callee	t1_updateflags		564315	0					
ANR	564517	Identifier	t1_updateflags		564315	0					
ANR	564518	ArgumentList	flagsp		564315	1					
ANR	564519	Argument	flagsp		564315	0					
ANR	564520	Identifier	flagsp		564315	0					
ANR	564521	Argument	v		564315	1					
ANR	564522	Identifier	v		564315	0					
ANR	564523	Argument	t1 -> flags_stride		564315	2					
ANR	564524	PtrMemberAccess	t1 -> flags_stride		564315	0					
ANR	564525	Identifier	t1		564315	0					
ANR	564526	Identifier	flags_stride		564315	1					
ANR	564527	ExpressionStatement	* flagsp |= T1_VISIT	388:8:9557:9576	564315	4	True				
ANR	564528	AssignmentExpression	* flagsp |= T1_VISIT		564315	0		|=			
ANR	564529	UnaryOperationExpression	* flagsp		564315	0					
ANR	564530	UnaryOperator	*		564315	0					
ANR	564531	Identifier	flagsp		564315	1					
ANR	564532	Identifier	T1_VISIT		564315	1					
ANR	564533	ReturnType	static void		564315	1					
ANR	564534	Identifier	t1_enc_sigpass_step		564315	2					
ANR	564535	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int bpno , int one , int * nmsedec , char type , int vsc"		564315	3					
ANR	564536	Parameter	opj_t1_t * t1	353:4:8432:8443	564315	0	True				
ANR	564537	ParameterType	opj_t1_t *		564315	0					
ANR	564538	Identifier	t1		564315	1					
ANR	564539	Parameter	flag_t * flagsp	354:4:8450:8463	564315	1	True				
ANR	564540	ParameterType	flag_t *		564315	0					
ANR	564541	Identifier	flagsp		564315	1					
ANR	564542	Parameter	int * datap	355:4:8470:8479	564315	2	True				
ANR	564543	ParameterType	int *		564315	0					
ANR	564544	Identifier	datap		564315	1					
ANR	564545	Parameter	int orient	356:4:8486:8495	564315	3	True				
ANR	564546	ParameterType	int		564315	0					
ANR	564547	Identifier	orient		564315	1					
ANR	564548	Parameter	int bpno	357:4:8502:8509	564315	4	True				
ANR	564549	ParameterType	int		564315	0					
ANR	564550	Identifier	bpno		564315	1					
ANR	564551	Parameter	int one	358:4:8516:8522	564315	5	True				
ANR	564552	ParameterType	int		564315	0					
ANR	564553	Identifier	one		564315	1					
ANR	564554	Parameter	int * nmsedec	359:4:8529:8540	564315	6	True				
ANR	564555	ParameterType	int *		564315	0					
ANR	564556	Identifier	nmsedec		564315	1					
ANR	564557	Parameter	char type	360:4:8547:8555	564315	7	True				
ANR	564558	ParameterType	char		564315	0					
ANR	564559	Identifier	type		564315	1					
ANR	564560	Parameter	int vsc	361:4:8562:8568	564315	8	True				
ANR	564561	ParameterType	int		564315	0					
ANR	564562	Identifier	vsc		564315	1					
ANR	564563	CFGEntryNode	ENTRY		564315		True				
ANR	564564	CFGExitNode	EXIT		564315		True				
ANR	564565	Symbol	flag		564315						
ANR	564566	Symbol	T1_SIG_SE		564315						
ANR	564567	Symbol	t1_getspb		564315						
ANR	564568	Symbol	vsc		564315						
ANR	564569	Symbol	* nmsedec		564315						
ANR	564570	Symbol	t1_getnmsedec_sig		564315						
ANR	564571	Symbol	type		564315						
ANR	564572	Symbol	T1_TYPE_RAW		564315						
ANR	564573	Symbol	int_abs		564315						
ANR	564574	Symbol	T1_SIG_SW		564315						
ANR	564575	Symbol	* flagsp		564315						
ANR	564576	Symbol	t1_getctxno_zc		564315						
ANR	564577	Symbol	T1_SIG_OTH		564315						
ANR	564578	Symbol	* datap		564315						
ANR	564579	Symbol	nmsedec		564315						
ANR	564580	Symbol	* t1		564315						
ANR	564581	Symbol	T1_NMSEDEC_FRACBITS		564315						
ANR	564582	Symbol	bpno		564315						
ANR	564583	Symbol	flagsp		564315						
ANR	564584	Symbol	orient		564315						
ANR	564585	Symbol	one		564315						
ANR	564586	Symbol	T1_SIG_S		564315						
ANR	564587	Symbol	T1_VISIT		564315						
ANR	564588	Symbol	datap		564315						
ANR	564589	Symbol	T1_SGN_S		564315						
ANR	564590	Symbol	t1 -> flags_stride		564315						
ANR	564591	Symbol	t1 -> mqc		564315						
ANR	564592	Symbol	t1_getctxno_sc		564315						
ANR	564593	Symbol	v		564315						
ANR	564594	Symbol	T1_SIG		564315						
ANR	564595	Symbol	t1		564315						
ANR	564596	Symbol	mqc		564315						
ANR	564597	Function	t1_dec_sigpass_step_raw	392:0:9587:10240							
ANR	564598	FunctionDef	"t1_dec_sigpass_step_raw (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int vsc)"		564597	0					
ANR	564599	CompoundStatement		399:0:9735:10240	564597	0					
ANR	564600	IdentifierDeclStatement	"int v , flag ;"	400:4:9741:9752	564597	0	True				
ANR	564601	IdentifierDecl	v		564597	0					
ANR	564602	IdentifierDeclType	int		564597	0					
ANR	564603	Identifier	v		564597	1					
ANR	564604	IdentifierDecl	flag		564597	1					
ANR	564605	IdentifierDeclType	int		564597	0					
ANR	564606	Identifier	flag		564597	1					
ANR	564607	IdentifierDeclStatement	opj_raw_t * raw = t1 -> raw ;	401:4:9758:9782	564597	1	True				
ANR	564608	IdentifierDecl	* raw = t1 -> raw		564597	0					
ANR	564609	IdentifierDeclType	opj_raw_t *		564597	0					
ANR	564610	Identifier	raw		564597	1					
ANR	564611	AssignmentExpression	* raw = t1 -> raw		564597	2		=			
ANR	564612	Identifier	raw		564597	0					
ANR	564613	PtrMemberAccess	t1 -> raw		564597	1					
ANR	564614	Identifier	t1		564597	0					
ANR	564615	Identifier	raw		564597	1					
ANR	564616	ExpressionStatement	OPJ_ARG_NOT_USED ( orient )	403:4:9811:9835	564597	2	True				
ANR	564617	CallExpression	OPJ_ARG_NOT_USED ( orient )		564597	0					
ANR	564618	Callee	OPJ_ARG_NOT_USED		564597	0					
ANR	564619	Identifier	OPJ_ARG_NOT_USED		564597	0					
ANR	564620	ArgumentList	orient		564597	1					
ANR	564621	Argument	orient		564597	0					
ANR	564622	Identifier	orient		564597	0					
ANR	564623	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	405:4:9842:9940	564597	3	True				
ANR	564624	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		564597	0		=			
ANR	564625	Identifier	flag		564597	0					
ANR	564626	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		564597	1					
ANR	564627	Condition	vsc		564597	0					
ANR	564628	Identifier	vsc		564597	0					
ANR	564629	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		564597	1		&			
ANR	564630	UnaryOperationExpression	* flagsp		564597	0					
ANR	564631	UnaryOperator	*		564597	0					
ANR	564632	Identifier	flagsp		564597	1					
ANR	564633	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		564597	1					
ANR	564634	UnaryOperator	~		564597	0					
ANR	564635	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		564597	1		|			
ANR	564636	Identifier	T1_SIG_S		564597	0					
ANR	564637	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		564597	1		|			
ANR	564638	Identifier	T1_SIG_SE		564597	0					
ANR	564639	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		564597	1		|			
ANR	564640	Identifier	T1_SIG_SW		564597	0					
ANR	564641	Identifier	T1_SGN_S		564597	1					
ANR	564642	UnaryOperationExpression	* flagsp		564597	2					
ANR	564643	UnaryOperator	*		564597	0					
ANR	564644	Identifier	flagsp		564597	1					
ANR	564645	IfStatement	if ( ( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) ) )		564597	4					
ANR	564646	Condition	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )	407:8:9950:10001	564597	0	True				
ANR	564647	AndExpression	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )		564597	0		&&			
ANR	564648	BitAndExpression	flag & T1_SIG_OTH		564597	0		&			
ANR	564649	Identifier	flag		564597	0					
ANR	564650	Identifier	T1_SIG_OTH		564597	1					
ANR	564651	UnaryOperationExpression	! ( flag & ( T1_SIG | T1_VISIT ) )		564597	1					
ANR	564652	UnaryOperator	!		564597	0					
ANR	564653	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		564597	1		&			
ANR	564654	Identifier	flag		564597	0					
ANR	564655	InclusiveOrExpression	T1_SIG | T1_VISIT		564597	1		|			
ANR	564656	Identifier	T1_SIG		564597	0					
ANR	564657	Identifier	T1_VISIT		564597	1					
ANR	564658	CompoundStatement		9:62:268:268	564597	1					
ANR	564659	IfStatement	if ( raw_decode ( raw ) )		564597	0					
ANR	564660	Condition	raw_decode ( raw )	408:12:10018:10032	564597	0	True				
ANR	564661	CallExpression	raw_decode ( raw )		564597	0					
ANR	564662	Callee	raw_decode		564597	0					
ANR	564663	Identifier	raw_decode		564597	0					
ANR	564664	ArgumentList	raw		564597	1					
ANR	564665	Argument	raw		564597	0					
ANR	564666	Identifier	raw		564597	0					
ANR	564667	CompoundStatement		10:29:299:299	564597	1					
ANR	564668	ExpressionStatement	v = raw_decode ( raw )	409:12:10049:10068	564597	0	True				
ANR	564669	AssignmentExpression	v = raw_decode ( raw )		564597	0		=			
ANR	564670	Identifier	v		564597	0					
ANR	564671	CallExpression	raw_decode ( raw )		564597	1					
ANR	564672	Callee	raw_decode		564597	0					
ANR	564673	Identifier	raw_decode		564597	0					
ANR	564674	ArgumentList	raw		564597	1					
ANR	564675	Argument	raw		564597	0					
ANR	564676	Identifier	raw		564597	0					
ANR	564677	ExpressionStatement	* datap = v ? - oneplushalf : oneplushalf	410:12:10097:10136	564597	1	True				
ANR	564678	AssignmentExpression	* datap = v ? - oneplushalf : oneplushalf		564597	0		=			
ANR	564679	UnaryOperationExpression	* datap		564597	0					
ANR	564680	UnaryOperator	*		564597	0					
ANR	564681	Identifier	datap		564597	1					
ANR	564682	ConditionalExpression	v ? - oneplushalf : oneplushalf		564597	1					
ANR	564683	Condition	v		564597	0					
ANR	564684	Identifier	v		564597	0					
ANR	564685	UnaryOperationExpression	- oneplushalf		564597	1					
ANR	564686	UnaryOperator	-		564597	0					
ANR	564687	Identifier	oneplushalf		564597	1					
ANR	564688	Identifier	oneplushalf		564597	2					
ANR	564689	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	411:12:10150:10193	564597	2	True				
ANR	564690	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		564597	0					
ANR	564691	Callee	t1_updateflags		564597	0					
ANR	564692	Identifier	t1_updateflags		564597	0					
ANR	564693	ArgumentList	flagsp		564597	1					
ANR	564694	Argument	flagsp		564597	0					
ANR	564695	Identifier	flagsp		564597	0					
ANR	564696	Argument	v		564597	1					
ANR	564697	Identifier	v		564597	0					
ANR	564698	Argument	t1 -> flags_stride		564597	2					
ANR	564699	PtrMemberAccess	t1 -> flags_stride		564597	0					
ANR	564700	Identifier	t1		564597	0					
ANR	564701	Identifier	flags_stride		564597	1					
ANR	564702	ExpressionStatement	* flagsp |= T1_VISIT	413:8:10213:10232	564597	1	True				
ANR	564703	AssignmentExpression	* flagsp |= T1_VISIT		564597	0		|=			
ANR	564704	UnaryOperationExpression	* flagsp		564597	0					
ANR	564705	UnaryOperator	*		564597	0					
ANR	564706	Identifier	flagsp		564597	1					
ANR	564707	Identifier	T1_VISIT		564597	1					
ANR	564708	ReturnType	static INLINE void		564597	1					
ANR	564709	Identifier	t1_dec_sigpass_step_raw		564597	2					
ANR	564710	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int vsc"		564597	3					
ANR	564711	Parameter	opj_t1_t * t1	393:4:9635:9646	564597	0	True				
ANR	564712	ParameterType	opj_t1_t *		564597	0					
ANR	564713	Identifier	t1		564597	1					
ANR	564714	Parameter	flag_t * flagsp	394:4:9653:9666	564597	1	True				
ANR	564715	ParameterType	flag_t *		564597	0					
ANR	564716	Identifier	flagsp		564597	1					
ANR	564717	Parameter	int * datap	395:4:9673:9682	564597	2	True				
ANR	564718	ParameterType	int *		564597	0					
ANR	564719	Identifier	datap		564597	1					
ANR	564720	Parameter	int orient	396:4:9689:9698	564597	3	True				
ANR	564721	ParameterType	int		564597	0					
ANR	564722	Identifier	orient		564597	1					
ANR	564723	Parameter	int oneplushalf	397:4:9705:9719	564597	4	True				
ANR	564724	ParameterType	int		564597	0					
ANR	564725	Identifier	oneplushalf		564597	1					
ANR	564726	Parameter	int vsc	398:4:9726:9732	564597	5	True				
ANR	564727	ParameterType	int		564597	0					
ANR	564728	Identifier	vsc		564597	1					
ANR	564729	CFGEntryNode	ENTRY		564597		True				
ANR	564730	CFGExitNode	EXIT		564597		True				
ANR	564731	Symbol	* t1		564597						
ANR	564732	Symbol	flag		564597						
ANR	564733	Symbol	flagsp		564597						
ANR	564734	Symbol	orient		564597						
ANR	564735	Symbol	T1_SIG_SE		564597						
ANR	564736	Symbol	raw_decode		564597						
ANR	564737	Symbol	vsc		564597						
ANR	564738	Symbol	T1_SIG_S		564597						
ANR	564739	Symbol	T1_VISIT		564597						
ANR	564740	Symbol	datap		564597						
ANR	564741	Symbol	raw		564597						
ANR	564742	Symbol	T1_SGN_S		564597						
ANR	564743	Symbol	T1_SIG_SW		564597						
ANR	564744	Symbol	t1 -> flags_stride		564597						
ANR	564745	Symbol	v		564597						
ANR	564746	Symbol	* flagsp		564597						
ANR	564747	Symbol	T1_SIG		564597						
ANR	564748	Symbol	oneplushalf		564597						
ANR	564749	Symbol	t1 -> raw		564597						
ANR	564750	Symbol	t1		564597						
ANR	564751	Symbol	T1_SIG_OTH		564597						
ANR	564752	Symbol	* datap		564597						
ANR	564753	Function	t1_dec_sigpass_step_mqc	417:0:10290:10931							
ANR	564754	FunctionDef	"t1_dec_sigpass_step_mqc (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf)"		564753	0					
ANR	564755	CompoundStatement		423:0:10425:10931	564753	0					
ANR	564756	IdentifierDeclStatement	"int v , flag ;"	424:4:10431:10442	564753	0	True				
ANR	564757	IdentifierDecl	v		564753	0					
ANR	564758	IdentifierDeclType	int		564753	0					
ANR	564759	Identifier	v		564753	1					
ANR	564760	IdentifierDecl	flag		564753	1					
ANR	564761	IdentifierDeclType	int		564753	0					
ANR	564762	Identifier	flag		564753	1					
ANR	564763	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	426:4:10449:10473	564753	1	True				
ANR	564764	IdentifierDecl	* mqc = t1 -> mqc		564753	0					
ANR	564765	IdentifierDeclType	opj_mqc_t *		564753	0					
ANR	564766	Identifier	mqc		564753	1					
ANR	564767	AssignmentExpression	* mqc = t1 -> mqc		564753	2		=			
ANR	564768	Identifier	mqc		564753	0					
ANR	564769	PtrMemberAccess	t1 -> mqc		564753	1					
ANR	564770	Identifier	t1		564753	0					
ANR	564771	Identifier	mqc		564753	1					
ANR	564772	ExpressionStatement	flag = * flagsp	428:4:10502:10516	564753	2	True				
ANR	564773	AssignmentExpression	flag = * flagsp		564753	0		=			
ANR	564774	Identifier	flag		564753	0					
ANR	564775	UnaryOperationExpression	* flagsp		564753	1					
ANR	564776	UnaryOperator	*		564753	0					
ANR	564777	Identifier	flagsp		564753	1					
ANR	564778	IfStatement	if ( ( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) ) )		564753	3					
ANR	564779	Condition	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )	429:8:10526:10577	564753	0	True				
ANR	564780	AndExpression	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )		564753	0		&&			
ANR	564781	BitAndExpression	flag & T1_SIG_OTH		564753	0		&			
ANR	564782	Identifier	flag		564753	0					
ANR	564783	Identifier	T1_SIG_OTH		564753	1					
ANR	564784	UnaryOperationExpression	! ( flag & ( T1_SIG | T1_VISIT ) )		564753	1					
ANR	564785	UnaryOperator	!		564753	0					
ANR	564786	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		564753	1		&			
ANR	564787	Identifier	flag		564753	0					
ANR	564788	InclusiveOrExpression	T1_SIG | T1_VISIT		564753	1		|			
ANR	564789	Identifier	T1_SIG		564753	0					
ANR	564790	Identifier	T1_VISIT		564753	1					
ANR	564791	CompoundStatement		7:62:154:154	564753	1					
ANR	564792	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"	430:8:10590:10638	564753	0	True				
ANR	564793	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"		564753	0					
ANR	564794	Callee	mqc_setcurctx		564753	0					
ANR	564795	Identifier	mqc_setcurctx		564753	0					
ANR	564796	ArgumentList	mqc		564753	1					
ANR	564797	Argument	mqc		564753	0					
ANR	564798	Identifier	mqc		564753	0					
ANR	564799	Argument	"t1_getctxno_zc ( flag , orient )"		564753	1					
ANR	564800	CallExpression	"t1_getctxno_zc ( flag , orient )"		564753	0					
ANR	564801	Callee	t1_getctxno_zc		564753	0					
ANR	564802	Identifier	t1_getctxno_zc		564753	0					
ANR	564803	ArgumentList	flag		564753	1					
ANR	564804	Argument	flag		564753	0					
ANR	564805	Identifier	flag		564753	0					
ANR	564806	Argument	orient		564753	1					
ANR	564807	Identifier	orient		564753	0					
ANR	564808	IfStatement	if ( mqc_decode ( mqc ) )		564753	1					
ANR	564809	Condition	mqc_decode ( mqc )	431:12:10652:10666	564753	0	True				
ANR	564810	CallExpression	mqc_decode ( mqc )		564753	0					
ANR	564811	Callee	mqc_decode		564753	0					
ANR	564812	Identifier	mqc_decode		564753	0					
ANR	564813	ArgumentList	mqc		564753	1					
ANR	564814	Argument	mqc		564753	0					
ANR	564815	Identifier	mqc		564753	0					
ANR	564816	CompoundStatement		9:29:243:243	564753	1					
ANR	564817	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	432:12:10683:10723	564753	0	True				
ANR	564818	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		564753	0					
ANR	564819	Callee	mqc_setcurctx		564753	0					
ANR	564820	Identifier	mqc_setcurctx		564753	0					
ANR	564821	ArgumentList	mqc		564753	1					
ANR	564822	Argument	mqc		564753	0					
ANR	564823	Identifier	mqc		564753	0					
ANR	564824	Argument	t1_getctxno_sc ( flag )		564753	1					
ANR	564825	CallExpression	t1_getctxno_sc ( flag )		564753	0					
ANR	564826	Callee	t1_getctxno_sc		564753	0					
ANR	564827	Identifier	t1_getctxno_sc		564753	0					
ANR	564828	ArgumentList	flag		564753	1					
ANR	564829	Argument	flag		564753	0					
ANR	564830	Identifier	flag		564753	0					
ANR	564831	ExpressionStatement	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )	433:12:10737:10774	564753	1	True				
ANR	564832	AssignmentExpression	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )		564753	0		=			
ANR	564833	Identifier	v		564753	0					
ANR	564834	ExclusiveOrExpression	mqc_decode ( mqc ) ^ t1_getspb ( flag )		564753	1		^			
ANR	564835	CallExpression	mqc_decode ( mqc )		564753	0					
ANR	564836	Callee	mqc_decode		564753	0					
ANR	564837	Identifier	mqc_decode		564753	0					
ANR	564838	ArgumentList	mqc		564753	1					
ANR	564839	Argument	mqc		564753	0					
ANR	564840	Identifier	mqc		564753	0					
ANR	564841	CallExpression	t1_getspb ( flag )		564753	1					
ANR	564842	Callee	t1_getspb		564753	0					
ANR	564843	Identifier	t1_getspb		564753	0					
ANR	564844	ArgumentList	flag		564753	1					
ANR	564845	Argument	flag		564753	0					
ANR	564846	Identifier	flag		564753	0					
ANR	564847	ExpressionStatement	* datap = v ? - oneplushalf : oneplushalf	434:12:10788:10827	564753	2	True				
ANR	564848	AssignmentExpression	* datap = v ? - oneplushalf : oneplushalf		564753	0		=			
ANR	564849	UnaryOperationExpression	* datap		564753	0					
ANR	564850	UnaryOperator	*		564753	0					
ANR	564851	Identifier	datap		564753	1					
ANR	564852	ConditionalExpression	v ? - oneplushalf : oneplushalf		564753	1					
ANR	564853	Condition	v		564753	0					
ANR	564854	Identifier	v		564753	0					
ANR	564855	UnaryOperationExpression	- oneplushalf		564753	1					
ANR	564856	UnaryOperator	-		564753	0					
ANR	564857	Identifier	oneplushalf		564753	1					
ANR	564858	Identifier	oneplushalf		564753	2					
ANR	564859	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	435:12:10841:10884	564753	3	True				
ANR	564860	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		564753	0					
ANR	564861	Callee	t1_updateflags		564753	0					
ANR	564862	Identifier	t1_updateflags		564753	0					
ANR	564863	ArgumentList	flagsp		564753	1					
ANR	564864	Argument	flagsp		564753	0					
ANR	564865	Identifier	flagsp		564753	0					
ANR	564866	Argument	v		564753	1					
ANR	564867	Identifier	v		564753	0					
ANR	564868	Argument	t1 -> flags_stride		564753	2					
ANR	564869	PtrMemberAccess	t1 -> flags_stride		564753	0					
ANR	564870	Identifier	t1		564753	0					
ANR	564871	Identifier	flags_stride		564753	1					
ANR	564872	ExpressionStatement	* flagsp |= T1_VISIT	437:8:10904:10923	564753	2	True				
ANR	564873	AssignmentExpression	* flagsp |= T1_VISIT		564753	0		|=			
ANR	564874	UnaryOperationExpression	* flagsp		564753	0					
ANR	564875	UnaryOperator	*		564753	0					
ANR	564876	Identifier	flagsp		564753	1					
ANR	564877	Identifier	T1_VISIT		564753	1					
ANR	564878	ReturnType	static INLINE void		564753	1					
ANR	564879	Identifier	t1_dec_sigpass_step_mqc		564753	2					
ANR	564880	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf"		564753	3					
ANR	564881	Parameter	opj_t1_t * t1	418:4:10338:10349	564753	0	True				
ANR	564882	ParameterType	opj_t1_t *		564753	0					
ANR	564883	Identifier	t1		564753	1					
ANR	564884	Parameter	flag_t * flagsp	419:4:10356:10369	564753	1	True				
ANR	564885	ParameterType	flag_t *		564753	0					
ANR	564886	Identifier	flagsp		564753	1					
ANR	564887	Parameter	int * datap	420:4:10376:10385	564753	2	True				
ANR	564888	ParameterType	int *		564753	0					
ANR	564889	Identifier	datap		564753	1					
ANR	564890	Parameter	int orient	421:4:10392:10401	564753	3	True				
ANR	564891	ParameterType	int		564753	0					
ANR	564892	Identifier	orient		564753	1					
ANR	564893	Parameter	int oneplushalf	422:4:10408:10422	564753	4	True				
ANR	564894	ParameterType	int		564753	0					
ANR	564895	Identifier	oneplushalf		564753	1					
ANR	564896	CFGEntryNode	ENTRY		564753		True				
ANR	564897	CFGExitNode	EXIT		564753		True				
ANR	564898	Symbol	* t1		564753						
ANR	564899	Symbol	flag		564753						
ANR	564900	Symbol	flagsp		564753						
ANR	564901	Symbol	orient		564753						
ANR	564902	Symbol	t1_getspb		564753						
ANR	564903	Symbol	T1_VISIT		564753						
ANR	564904	Symbol	datap		564753						
ANR	564905	Symbol	mqc_decode		564753						
ANR	564906	Symbol	t1 -> flags_stride		564753						
ANR	564907	Symbol	t1 -> mqc		564753						
ANR	564908	Symbol	t1_getctxno_sc		564753						
ANR	564909	Symbol	v		564753						
ANR	564910	Symbol	* flagsp		564753						
ANR	564911	Symbol	T1_SIG		564753						
ANR	564912	Symbol	t1_getctxno_zc		564753						
ANR	564913	Symbol	oneplushalf		564753						
ANR	564914	Symbol	t1		564753						
ANR	564915	Symbol	mqc		564753						
ANR	564916	Symbol	T1_SIG_OTH		564753						
ANR	564917	Symbol	* datap		564753						
ANR	564918	Function	t1_dec_sigpass_step_mqc_vsc	441:0:10981:11723							
ANR	564919	FunctionDef	"t1_dec_sigpass_step_mqc_vsc (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int vsc)"		564918	0					
ANR	564920	CompoundStatement		448:0:11133:11723	564918	0					
ANR	564921	IdentifierDeclStatement	"int v , flag ;"	449:4:11139:11150	564918	0	True				
ANR	564922	IdentifierDecl	v		564918	0					
ANR	564923	IdentifierDeclType	int		564918	0					
ANR	564924	Identifier	v		564918	1					
ANR	564925	IdentifierDecl	flag		564918	1					
ANR	564926	IdentifierDeclType	int		564918	0					
ANR	564927	Identifier	flag		564918	1					
ANR	564928	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	451:4:11157:11181	564918	1	True				
ANR	564929	IdentifierDecl	* mqc = t1 -> mqc		564918	0					
ANR	564930	IdentifierDeclType	opj_mqc_t *		564918	0					
ANR	564931	Identifier	mqc		564918	1					
ANR	564932	AssignmentExpression	* mqc = t1 -> mqc		564918	2		=			
ANR	564933	Identifier	mqc		564918	0					
ANR	564934	PtrMemberAccess	t1 -> mqc		564918	1					
ANR	564935	Identifier	t1		564918	0					
ANR	564936	Identifier	mqc		564918	1					
ANR	564937	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	453:4:11210:11308	564918	2	True				
ANR	564938	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		564918	0		=			
ANR	564939	Identifier	flag		564918	0					
ANR	564940	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		564918	1					
ANR	564941	Condition	vsc		564918	0					
ANR	564942	Identifier	vsc		564918	0					
ANR	564943	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		564918	1		&			
ANR	564944	UnaryOperationExpression	* flagsp		564918	0					
ANR	564945	UnaryOperator	*		564918	0					
ANR	564946	Identifier	flagsp		564918	1					
ANR	564947	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		564918	1					
ANR	564948	UnaryOperator	~		564918	0					
ANR	564949	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		564918	1		|			
ANR	564950	Identifier	T1_SIG_S		564918	0					
ANR	564951	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		564918	1		|			
ANR	564952	Identifier	T1_SIG_SE		564918	0					
ANR	564953	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		564918	1		|			
ANR	564954	Identifier	T1_SIG_SW		564918	0					
ANR	564955	Identifier	T1_SGN_S		564918	1					
ANR	564956	UnaryOperationExpression	* flagsp		564918	2					
ANR	564957	UnaryOperator	*		564918	0					
ANR	564958	Identifier	flagsp		564918	1					
ANR	564959	IfStatement	if ( ( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) ) )		564918	3					
ANR	564960	Condition	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )	455:8:11318:11369	564918	0	True				
ANR	564961	AndExpression	( flag & T1_SIG_OTH ) && ! ( flag & ( T1_SIG | T1_VISIT ) )		564918	0		&&			
ANR	564962	BitAndExpression	flag & T1_SIG_OTH		564918	0		&			
ANR	564963	Identifier	flag		564918	0					
ANR	564964	Identifier	T1_SIG_OTH		564918	1					
ANR	564965	UnaryOperationExpression	! ( flag & ( T1_SIG | T1_VISIT ) )		564918	1					
ANR	564966	UnaryOperator	!		564918	0					
ANR	564967	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		564918	1		&			
ANR	564968	Identifier	flag		564918	0					
ANR	564969	InclusiveOrExpression	T1_SIG | T1_VISIT		564918	1		|			
ANR	564970	Identifier	T1_SIG		564918	0					
ANR	564971	Identifier	T1_VISIT		564918	1					
ANR	564972	CompoundStatement		8:62:238:238	564918	1					
ANR	564973	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"	456:8:11382:11430	564918	0	True				
ANR	564974	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"		564918	0					
ANR	564975	Callee	mqc_setcurctx		564918	0					
ANR	564976	Identifier	mqc_setcurctx		564918	0					
ANR	564977	ArgumentList	mqc		564918	1					
ANR	564978	Argument	mqc		564918	0					
ANR	564979	Identifier	mqc		564918	0					
ANR	564980	Argument	"t1_getctxno_zc ( flag , orient )"		564918	1					
ANR	564981	CallExpression	"t1_getctxno_zc ( flag , orient )"		564918	0					
ANR	564982	Callee	t1_getctxno_zc		564918	0					
ANR	564983	Identifier	t1_getctxno_zc		564918	0					
ANR	564984	ArgumentList	flag		564918	1					
ANR	564985	Argument	flag		564918	0					
ANR	564986	Identifier	flag		564918	0					
ANR	564987	Argument	orient		564918	1					
ANR	564988	Identifier	orient		564918	0					
ANR	564989	IfStatement	if ( mqc_decode ( mqc ) )		564918	1					
ANR	564990	Condition	mqc_decode ( mqc )	457:12:11444:11458	564918	0	True				
ANR	564991	CallExpression	mqc_decode ( mqc )		564918	0					
ANR	564992	Callee	mqc_decode		564918	0					
ANR	564993	Identifier	mqc_decode		564918	0					
ANR	564994	ArgumentList	mqc		564918	1					
ANR	564995	Argument	mqc		564918	0					
ANR	564996	Identifier	mqc		564918	0					
ANR	564997	CompoundStatement		10:29:327:327	564918	1					
ANR	564998	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	458:12:11475:11515	564918	0	True				
ANR	564999	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		564918	0					
ANR	565000	Callee	mqc_setcurctx		564918	0					
ANR	565001	Identifier	mqc_setcurctx		564918	0					
ANR	565002	ArgumentList	mqc		564918	1					
ANR	565003	Argument	mqc		564918	0					
ANR	565004	Identifier	mqc		564918	0					
ANR	565005	Argument	t1_getctxno_sc ( flag )		564918	1					
ANR	565006	CallExpression	t1_getctxno_sc ( flag )		564918	0					
ANR	565007	Callee	t1_getctxno_sc		564918	0					
ANR	565008	Identifier	t1_getctxno_sc		564918	0					
ANR	565009	ArgumentList	flag		564918	1					
ANR	565010	Argument	flag		564918	0					
ANR	565011	Identifier	flag		564918	0					
ANR	565012	ExpressionStatement	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )	459:12:11529:11566	564918	1	True				
ANR	565013	AssignmentExpression	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )		564918	0		=			
ANR	565014	Identifier	v		564918	0					
ANR	565015	ExclusiveOrExpression	mqc_decode ( mqc ) ^ t1_getspb ( flag )		564918	1		^			
ANR	565016	CallExpression	mqc_decode ( mqc )		564918	0					
ANR	565017	Callee	mqc_decode		564918	0					
ANR	565018	Identifier	mqc_decode		564918	0					
ANR	565019	ArgumentList	mqc		564918	1					
ANR	565020	Argument	mqc		564918	0					
ANR	565021	Identifier	mqc		564918	0					
ANR	565022	CallExpression	t1_getspb ( flag )		564918	1					
ANR	565023	Callee	t1_getspb		564918	0					
ANR	565024	Identifier	t1_getspb		564918	0					
ANR	565025	ArgumentList	flag		564918	1					
ANR	565026	Argument	flag		564918	0					
ANR	565027	Identifier	flag		564918	0					
ANR	565028	ExpressionStatement	* datap = v ? - oneplushalf : oneplushalf	460:12:11580:11619	564918	2	True				
ANR	565029	AssignmentExpression	* datap = v ? - oneplushalf : oneplushalf		564918	0		=			
ANR	565030	UnaryOperationExpression	* datap		564918	0					
ANR	565031	UnaryOperator	*		564918	0					
ANR	565032	Identifier	datap		564918	1					
ANR	565033	ConditionalExpression	v ? - oneplushalf : oneplushalf		564918	1					
ANR	565034	Condition	v		564918	0					
ANR	565035	Identifier	v		564918	0					
ANR	565036	UnaryOperationExpression	- oneplushalf		564918	1					
ANR	565037	UnaryOperator	-		564918	0					
ANR	565038	Identifier	oneplushalf		564918	1					
ANR	565039	Identifier	oneplushalf		564918	2					
ANR	565040	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	461:12:11633:11676	564918	3	True				
ANR	565041	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		564918	0					
ANR	565042	Callee	t1_updateflags		564918	0					
ANR	565043	Identifier	t1_updateflags		564918	0					
ANR	565044	ArgumentList	flagsp		564918	1					
ANR	565045	Argument	flagsp		564918	0					
ANR	565046	Identifier	flagsp		564918	0					
ANR	565047	Argument	v		564918	1					
ANR	565048	Identifier	v		564918	0					
ANR	565049	Argument	t1 -> flags_stride		564918	2					
ANR	565050	PtrMemberAccess	t1 -> flags_stride		564918	0					
ANR	565051	Identifier	t1		564918	0					
ANR	565052	Identifier	flags_stride		564918	1					
ANR	565053	ExpressionStatement	* flagsp |= T1_VISIT	463:8:11696:11715	564918	2	True				
ANR	565054	AssignmentExpression	* flagsp |= T1_VISIT		564918	0		|=			
ANR	565055	UnaryOperationExpression	* flagsp		564918	0					
ANR	565056	UnaryOperator	*		564918	0					
ANR	565057	Identifier	flagsp		564918	1					
ANR	565058	Identifier	T1_VISIT		564918	1					
ANR	565059	ReturnType	static INLINE void		564918	1					
ANR	565060	Identifier	t1_dec_sigpass_step_mqc_vsc		564918	2					
ANR	565061	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int vsc"		564918	3					
ANR	565062	Parameter	opj_t1_t * t1	442:4:11033:11044	564918	0	True				
ANR	565063	ParameterType	opj_t1_t *		564918	0					
ANR	565064	Identifier	t1		564918	1					
ANR	565065	Parameter	flag_t * flagsp	443:4:11051:11064	564918	1	True				
ANR	565066	ParameterType	flag_t *		564918	0					
ANR	565067	Identifier	flagsp		564918	1					
ANR	565068	Parameter	int * datap	444:4:11071:11080	564918	2	True				
ANR	565069	ParameterType	int *		564918	0					
ANR	565070	Identifier	datap		564918	1					
ANR	565071	Parameter	int orient	445:4:11087:11096	564918	3	True				
ANR	565072	ParameterType	int		564918	0					
ANR	565073	Identifier	orient		564918	1					
ANR	565074	Parameter	int oneplushalf	446:4:11103:11117	564918	4	True				
ANR	565075	ParameterType	int		564918	0					
ANR	565076	Identifier	oneplushalf		564918	1					
ANR	565077	Parameter	int vsc	447:4:11124:11130	564918	5	True				
ANR	565078	ParameterType	int		564918	0					
ANR	565079	Identifier	vsc		564918	1					
ANR	565080	CFGEntryNode	ENTRY		564918		True				
ANR	565081	CFGExitNode	EXIT		564918		True				
ANR	565082	Symbol	flag		564918						
ANR	565083	Symbol	T1_SIG_SE		564918						
ANR	565084	Symbol	t1_getspb		564918						
ANR	565085	Symbol	vsc		564918						
ANR	565086	Symbol	mqc_decode		564918						
ANR	565087	Symbol	T1_SIG_SW		564918						
ANR	565088	Symbol	* flagsp		564918						
ANR	565089	Symbol	t1_getctxno_zc		564918						
ANR	565090	Symbol	T1_SIG_OTH		564918						
ANR	565091	Symbol	* datap		564918						
ANR	565092	Symbol	* t1		564918						
ANR	565093	Symbol	flagsp		564918						
ANR	565094	Symbol	orient		564918						
ANR	565095	Symbol	T1_SIG_S		564918						
ANR	565096	Symbol	T1_VISIT		564918						
ANR	565097	Symbol	datap		564918						
ANR	565098	Symbol	T1_SGN_S		564918						
ANR	565099	Symbol	t1 -> flags_stride		564918						
ANR	565100	Symbol	t1 -> mqc		564918						
ANR	565101	Symbol	t1_getctxno_sc		564918						
ANR	565102	Symbol	v		564918						
ANR	565103	Symbol	T1_SIG		564918						
ANR	565104	Symbol	oneplushalf		564918						
ANR	565105	Symbol	t1		564918						
ANR	565106	Symbol	mqc		564918						
ANR	565107	Function	t1_enc_sigpass	467:0:11773:12613							
ANR	565108	FunctionDef	"t1_enc_sigpass (opj_t1_t * t1 , int bpno , int orient , int * nmsedec , char type , int cblksty)"		565107	0					
ANR	565109	CompoundStatement		474:0:11899:12613	565107	0					
ANR	565110	IdentifierDeclStatement	"int i , j , k , one , vsc ;"	475:4:11905:11926	565107	0	True				
ANR	565111	IdentifierDecl	i		565107	0					
ANR	565112	IdentifierDeclType	int		565107	0					
ANR	565113	Identifier	i		565107	1					
ANR	565114	IdentifierDecl	j		565107	1					
ANR	565115	IdentifierDeclType	int		565107	0					
ANR	565116	Identifier	j		565107	1					
ANR	565117	IdentifierDecl	k		565107	2					
ANR	565118	IdentifierDeclType	int		565107	0					
ANR	565119	Identifier	k		565107	1					
ANR	565120	IdentifierDecl	one		565107	3					
ANR	565121	IdentifierDeclType	int		565107	0					
ANR	565122	Identifier	one		565107	1					
ANR	565123	IdentifierDecl	vsc		565107	4					
ANR	565124	IdentifierDeclType	int		565107	0					
ANR	565125	Identifier	vsc		565107	1					
ANR	565126	ExpressionStatement	* nmsedec = 0	476:4:11932:11944	565107	1	True				
ANR	565127	AssignmentExpression	* nmsedec = 0		565107	0		=			
ANR	565128	UnaryOperationExpression	* nmsedec		565107	0					
ANR	565129	UnaryOperator	*		565107	0					
ANR	565130	Identifier	nmsedec		565107	1					
ANR	565131	PrimaryExpression	0		565107	1					
ANR	565132	ExpressionStatement	one = 1 << ( bpno + T1_NMSEDEC_FRACBITS )	477:4:11950:11989	565107	2	True				
ANR	565133	AssignmentExpression	one = 1 << ( bpno + T1_NMSEDEC_FRACBITS )		565107	0		=			
ANR	565134	Identifier	one		565107	0					
ANR	565135	ShiftExpression	1 << ( bpno + T1_NMSEDEC_FRACBITS )		565107	1		<<			
ANR	565136	PrimaryExpression	1		565107	0					
ANR	565137	AdditiveExpression	bpno + T1_NMSEDEC_FRACBITS		565107	1		+			
ANR	565138	Identifier	bpno		565107	0					
ANR	565139	Identifier	T1_NMSEDEC_FRACBITS		565107	1					
ANR	565140	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		565107	3					
ANR	565141	ForInit	k = 0 ;	478:9:12000:12005	565107	0	True				
ANR	565142	AssignmentExpression	k = 0		565107	0		=			
ANR	565143	Identifier	k		565107	0					
ANR	565144	PrimaryExpression	0		565107	1					
ANR	565145	Condition	k < t1 -> h	478:16:12007:12015	565107	1	True				
ANR	565146	RelationalExpression	k < t1 -> h		565107	0		<			
ANR	565147	Identifier	k		565107	0					
ANR	565148	PtrMemberAccess	t1 -> h		565107	1					
ANR	565149	Identifier	t1		565107	0					
ANR	565150	Identifier	h		565107	1					
ANR	565151	AssignmentExpression	k += 4	478:27:12018:12023	565107	2	True	+=			
ANR	565152	Identifier	k		565107	0					
ANR	565153	PrimaryExpression	4		565107	1					
ANR	565154	CompoundStatement		5:35:126:126	565107	3					
ANR	565155	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		565107	0					
ANR	565156	ForInit	i = 0 ;	479:13:12041:12046	565107	0	True				
ANR	565157	AssignmentExpression	i = 0		565107	0		=			
ANR	565158	Identifier	i		565107	0					
ANR	565159	PrimaryExpression	0		565107	1					
ANR	565160	Condition	i < t1 -> w	479:20:12048:12056	565107	1	True				
ANR	565161	RelationalExpression	i < t1 -> w		565107	0		<			
ANR	565162	Identifier	i		565107	0					
ANR	565163	PtrMemberAccess	t1 -> w		565107	1					
ANR	565164	Identifier	t1		565107	0					
ANR	565165	Identifier	w		565107	1					
ANR	565166	UnaryExpression	++ i	479:31:12059:12061	565107	2	True				
ANR	565167	IncDec	++		565107	0					
ANR	565168	Identifier	i		565107	1					
ANR	565169	CompoundStatement		6:36:164:164	565107	3					
ANR	565170	ForStatement	for ( j = k ; j < k + 4 && j < t1 -> h ; ++ j )		565107	0					
ANR	565171	ForInit	j = k ;	480:17:12083:12088	565107	0	True				
ANR	565172	AssignmentExpression	j = k		565107	0		=			
ANR	565173	Identifier	j		565107	0					
ANR	565174	Identifier	k		565107	1					
ANR	565175	Condition	j < k + 4 && j < t1 -> h	480:24:12090:12111	565107	1	True				
ANR	565176	AndExpression	j < k + 4 && j < t1 -> h		565107	0		&&			
ANR	565177	RelationalExpression	j < k + 4		565107	0		<			
ANR	565178	Identifier	j		565107	0					
ANR	565179	AdditiveExpression	k + 4		565107	1		+			
ANR	565180	Identifier	k		565107	0					
ANR	565181	PrimaryExpression	4		565107	1					
ANR	565182	RelationalExpression	j < t1 -> h		565107	1		<			
ANR	565183	Identifier	j		565107	0					
ANR	565184	PtrMemberAccess	t1 -> h		565107	1					
ANR	565185	Identifier	t1		565107	0					
ANR	565186	Identifier	h		565107	1					
ANR	565187	UnaryExpression	++ j	480:48:12114:12116	565107	2	True				
ANR	565188	IncDec	++		565107	0					
ANR	565189	Identifier	j		565107	1					
ANR	565190	CompoundStatement		7:53:219:219	565107	3					
ANR	565191	ExpressionStatement	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0	481:16:12137:12242	565107	0	True				
ANR	565192	AssignmentExpression	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		565107	0		=			
ANR	565193	Identifier	vsc		565107	0					
ANR	565194	ConditionalExpression	( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		565107	1					
ANR	565195	Condition	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		565107	0					
ANR	565196	AndExpression	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		565107	0		&&			
ANR	565197	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		565107	0		&			
ANR	565198	Identifier	cblksty		565107	0					
ANR	565199	Identifier	J2K_CCP_CBLKSTY_VSC		565107	1					
ANR	565200	OrExpression	j == k + 3 || j == t1 -> h - 1		565107	1		||			
ANR	565201	EqualityExpression	j == k + 3		565107	0		==			
ANR	565202	Identifier	j		565107	0					
ANR	565203	AdditiveExpression	k + 3		565107	1		+			
ANR	565204	Identifier	k		565107	0					
ANR	565205	PrimaryExpression	3		565107	1					
ANR	565206	EqualityExpression	j == t1 -> h - 1		565107	1		==			
ANR	565207	Identifier	j		565107	0					
ANR	565208	AdditiveExpression	t1 -> h - 1		565107	1		-			
ANR	565209	PtrMemberAccess	t1 -> h		565107	0					
ANR	565210	Identifier	t1		565107	0					
ANR	565211	Identifier	h		565107	1					
ANR	565212	PrimaryExpression	1		565107	1					
ANR	565213	PrimaryExpression	1		565107	1					
ANR	565214	PrimaryExpression	0		565107	2					
ANR	565215	ExpressionStatement	"t1_enc_sigpass_step ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , bpno , one , nmsedec , type , vsc )"	483:16:12260:12581	565107	1	True				
ANR	565216	CallExpression	"t1_enc_sigpass_step ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , bpno , one , nmsedec , type , vsc )"		565107	0					
ANR	565217	Callee	t1_enc_sigpass_step		565107	0					
ANR	565218	Identifier	t1_enc_sigpass_step		565107	0					
ANR	565219	ArgumentList	t1		565107	1					
ANR	565220	Argument	t1		565107	0					
ANR	565221	Identifier	t1		565107	0					
ANR	565222	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565107	1					
ANR	565223	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565107	0					
ANR	565224	UnaryOperator	&		565107	0					
ANR	565225	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565107	1					
ANR	565226	PtrMemberAccess	t1 -> flags		565107	0					
ANR	565227	Identifier	t1		565107	0					
ANR	565228	Identifier	flags		565107	1					
ANR	565229	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		565107	1		+			
ANR	565230	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		565107	0		*			
ANR	565231	AdditiveExpression	j + 1		565107	0		+			
ANR	565232	Identifier	j		565107	0					
ANR	565233	PrimaryExpression	1		565107	1					
ANR	565234	PtrMemberAccess	t1 -> flags_stride		565107	1					
ANR	565235	Identifier	t1		565107	0					
ANR	565236	Identifier	flags_stride		565107	1					
ANR	565237	AdditiveExpression	i + 1		565107	1		+			
ANR	565238	Identifier	i		565107	0					
ANR	565239	PrimaryExpression	1		565107	1					
ANR	565240	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		565107	2					
ANR	565241	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		565107	0					
ANR	565242	UnaryOperator	&		565107	0					
ANR	565243	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		565107	1					
ANR	565244	PtrMemberAccess	t1 -> data		565107	0					
ANR	565245	Identifier	t1		565107	0					
ANR	565246	Identifier	data		565107	1					
ANR	565247	AdditiveExpression	( j * t1 -> w ) + i		565107	1		+			
ANR	565248	MultiplicativeExpression	j * t1 -> w		565107	0		*			
ANR	565249	Identifier	j		565107	0					
ANR	565250	PtrMemberAccess	t1 -> w		565107	1					
ANR	565251	Identifier	t1		565107	0					
ANR	565252	Identifier	w		565107	1					
ANR	565253	Identifier	i		565107	1					
ANR	565254	Argument	orient		565107	3					
ANR	565255	Identifier	orient		565107	0					
ANR	565256	Argument	bpno		565107	4					
ANR	565257	Identifier	bpno		565107	0					
ANR	565258	Argument	one		565107	5					
ANR	565259	Identifier	one		565107	0					
ANR	565260	Argument	nmsedec		565107	6					
ANR	565261	Identifier	nmsedec		565107	0					
ANR	565262	Argument	type		565107	7					
ANR	565263	Identifier	type		565107	0					
ANR	565264	Argument	vsc		565107	8					
ANR	565265	Identifier	vsc		565107	0					
ANR	565266	ReturnType	static void		565107	1					
ANR	565267	Identifier	t1_enc_sigpass		565107	2					
ANR	565268	ParameterList	"opj_t1_t * t1 , int bpno , int orient , int * nmsedec , char type , int cblksty"		565107	3					
ANR	565269	Parameter	opj_t1_t * t1	468:4:11805:11816	565107	0	True				
ANR	565270	ParameterType	opj_t1_t *		565107	0					
ANR	565271	Identifier	t1		565107	1					
ANR	565272	Parameter	int bpno	469:4:11823:11830	565107	1	True				
ANR	565273	ParameterType	int		565107	0					
ANR	565274	Identifier	bpno		565107	1					
ANR	565275	Parameter	int orient	470:4:11837:11846	565107	2	True				
ANR	565276	ParameterType	int		565107	0					
ANR	565277	Identifier	orient		565107	1					
ANR	565278	Parameter	int * nmsedec	471:4:11853:11864	565107	3	True				
ANR	565279	ParameterType	int *		565107	0					
ANR	565280	Identifier	nmsedec		565107	1					
ANR	565281	Parameter	char type	472:4:11871:11879	565107	4	True				
ANR	565282	ParameterType	char		565107	0					
ANR	565283	Identifier	type		565107	1					
ANR	565284	Parameter	int cblksty	473:4:11886:11896	565107	5	True				
ANR	565285	ParameterType	int		565107	0					
ANR	565286	Identifier	cblksty		565107	1					
ANR	565287	CFGEntryNode	ENTRY		565107		True				
ANR	565288	CFGExitNode	EXIT		565107		True				
ANR	565289	Symbol	nmsedec		565107						
ANR	565290	Symbol	T1_NMSEDEC_FRACBITS		565107						
ANR	565291	Symbol	* t1		565107						
ANR	565292	Symbol	bpno		565107						
ANR	565293	Symbol	t1 -> w		565107						
ANR	565294	Symbol	orient		565107						
ANR	565295	Symbol	t1 -> flags		565107						
ANR	565296	Symbol	one		565107						
ANR	565297	Symbol	vsc		565107						
ANR	565298	Symbol	i		565107						
ANR	565299	Symbol	j		565107						
ANR	565300	Symbol	* nmsedec		565107						
ANR	565301	Symbol	J2K_CCP_CBLKSTY_VSC		565107						
ANR	565302	Symbol	t1 -> data		565107						
ANR	565303	Symbol	k		565107						
ANR	565304	Symbol	type		565107						
ANR	565305	Symbol	cblksty		565107						
ANR	565306	Symbol	t1 -> flags_stride		565107						
ANR	565307	Symbol	t1 -> h		565107						
ANR	565308	Symbol	t1		565107						
ANR	565309	Function	t1_dec_sigpass_raw	498:0:12616:13386							
ANR	565310	FunctionDef	"t1_dec_sigpass_raw (opj_t1_t * t1 , int bpno , int orient , int cblksty)"		565309	0					
ANR	565311	CompoundStatement		503:0:12713:13386	565309	0					
ANR	565312	IdentifierDeclStatement	"int i , j , k , one , half , oneplushalf , vsc ;"	504:4:12719:12759	565309	0	True				
ANR	565313	IdentifierDecl	i		565309	0					
ANR	565314	IdentifierDeclType	int		565309	0					
ANR	565315	Identifier	i		565309	1					
ANR	565316	IdentifierDecl	j		565309	1					
ANR	565317	IdentifierDeclType	int		565309	0					
ANR	565318	Identifier	j		565309	1					
ANR	565319	IdentifierDecl	k		565309	2					
ANR	565320	IdentifierDeclType	int		565309	0					
ANR	565321	Identifier	k		565309	1					
ANR	565322	IdentifierDecl	one		565309	3					
ANR	565323	IdentifierDeclType	int		565309	0					
ANR	565324	Identifier	one		565309	1					
ANR	565325	IdentifierDecl	half		565309	4					
ANR	565326	IdentifierDeclType	int		565309	0					
ANR	565327	Identifier	half		565309	1					
ANR	565328	IdentifierDecl	oneplushalf		565309	5					
ANR	565329	IdentifierDeclType	int		565309	0					
ANR	565330	Identifier	oneplushalf		565309	1					
ANR	565331	IdentifierDecl	vsc		565309	6					
ANR	565332	IdentifierDeclType	int		565309	0					
ANR	565333	Identifier	vsc		565309	1					
ANR	565334	ExpressionStatement	one = 1 << bpno	505:4:12765:12780	565309	1	True				
ANR	565335	AssignmentExpression	one = 1 << bpno		565309	0		=			
ANR	565336	Identifier	one		565309	0					
ANR	565337	ShiftExpression	1 << bpno		565309	1		<<			
ANR	565338	PrimaryExpression	1		565309	0					
ANR	565339	Identifier	bpno		565309	1					
ANR	565340	ExpressionStatement	half = one >> 1	506:4:12786:12801	565309	2	True				
ANR	565341	AssignmentExpression	half = one >> 1		565309	0		=			
ANR	565342	Identifier	half		565309	0					
ANR	565343	ShiftExpression	one >> 1		565309	1		>>			
ANR	565344	Identifier	one		565309	0					
ANR	565345	PrimaryExpression	1		565309	1					
ANR	565346	ExpressionStatement	oneplushalf = one | half	507:4:12807:12831	565309	3	True				
ANR	565347	AssignmentExpression	oneplushalf = one | half		565309	0		=			
ANR	565348	Identifier	oneplushalf		565309	0					
ANR	565349	InclusiveOrExpression	one | half		565309	1		|			
ANR	565350	Identifier	one		565309	0					
ANR	565351	Identifier	half		565309	1					
ANR	565352	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		565309	4					
ANR	565353	ForInit	k = 0 ;	508:9:12842:12847	565309	0	True				
ANR	565354	AssignmentExpression	k = 0		565309	0		=			
ANR	565355	Identifier	k		565309	0					
ANR	565356	PrimaryExpression	0		565309	1					
ANR	565357	Condition	k < t1 -> h	508:16:12849:12857	565309	1	True				
ANR	565358	RelationalExpression	k < t1 -> h		565309	0		<			
ANR	565359	Identifier	k		565309	0					
ANR	565360	PtrMemberAccess	t1 -> h		565309	1					
ANR	565361	Identifier	t1		565309	0					
ANR	565362	Identifier	h		565309	1					
ANR	565363	AssignmentExpression	k += 4	508:27:12860:12865	565309	2	True	+=			
ANR	565364	Identifier	k		565309	0					
ANR	565365	PrimaryExpression	4		565309	1					
ANR	565366	CompoundStatement		6:35:154:154	565309	3					
ANR	565367	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		565309	0					
ANR	565368	ForInit	i = 0 ;	509:13:12883:12888	565309	0	True				
ANR	565369	AssignmentExpression	i = 0		565309	0		=			
ANR	565370	Identifier	i		565309	0					
ANR	565371	PrimaryExpression	0		565309	1					
ANR	565372	Condition	i < t1 -> w	509:20:12890:12898	565309	1	True				
ANR	565373	RelationalExpression	i < t1 -> w		565309	0		<			
ANR	565374	Identifier	i		565309	0					
ANR	565375	PtrMemberAccess	t1 -> w		565309	1					
ANR	565376	Identifier	t1		565309	0					
ANR	565377	Identifier	w		565309	1					
ANR	565378	UnaryExpression	++ i	509:31:12901:12903	565309	2	True				
ANR	565379	IncDec	++		565309	0					
ANR	565380	Identifier	i		565309	1					
ANR	565381	CompoundStatement		7:36:192:192	565309	3					
ANR	565382	ForStatement	for ( j = k ; j < k + 4 && j < t1 -> h ; ++ j )		565309	0					
ANR	565383	ForInit	j = k ;	510:17:12925:12930	565309	0	True				
ANR	565384	AssignmentExpression	j = k		565309	0		=			
ANR	565385	Identifier	j		565309	0					
ANR	565386	Identifier	k		565309	1					
ANR	565387	Condition	j < k + 4 && j < t1 -> h	510:24:12932:12953	565309	1	True				
ANR	565388	AndExpression	j < k + 4 && j < t1 -> h		565309	0		&&			
ANR	565389	RelationalExpression	j < k + 4		565309	0		<			
ANR	565390	Identifier	j		565309	0					
ANR	565391	AdditiveExpression	k + 4		565309	1		+			
ANR	565392	Identifier	k		565309	0					
ANR	565393	PrimaryExpression	4		565309	1					
ANR	565394	RelationalExpression	j < t1 -> h		565309	1		<			
ANR	565395	Identifier	j		565309	0					
ANR	565396	PtrMemberAccess	t1 -> h		565309	1					
ANR	565397	Identifier	t1		565309	0					
ANR	565398	Identifier	h		565309	1					
ANR	565399	UnaryExpression	++ j	510:48:12956:12958	565309	2	True				
ANR	565400	IncDec	++		565309	0					
ANR	565401	Identifier	j		565309	1					
ANR	565402	CompoundStatement		8:53:247:247	565309	3					
ANR	565403	ExpressionStatement	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0	511:16:12979:13084	565309	0	True				
ANR	565404	AssignmentExpression	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		565309	0		=			
ANR	565405	Identifier	vsc		565309	0					
ANR	565406	ConditionalExpression	( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		565309	1					
ANR	565407	Condition	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		565309	0					
ANR	565408	AndExpression	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		565309	0		&&			
ANR	565409	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		565309	0		&			
ANR	565410	Identifier	cblksty		565309	0					
ANR	565411	Identifier	J2K_CCP_CBLKSTY_VSC		565309	1					
ANR	565412	OrExpression	j == k + 3 || j == t1 -> h - 1		565309	1		||			
ANR	565413	EqualityExpression	j == k + 3		565309	0		==			
ANR	565414	Identifier	j		565309	0					
ANR	565415	AdditiveExpression	k + 3		565309	1		+			
ANR	565416	Identifier	k		565309	0					
ANR	565417	PrimaryExpression	3		565309	1					
ANR	565418	EqualityExpression	j == t1 -> h - 1		565309	1		==			
ANR	565419	Identifier	j		565309	0					
ANR	565420	AdditiveExpression	t1 -> h - 1		565309	1		-			
ANR	565421	PtrMemberAccess	t1 -> h		565309	0					
ANR	565422	Identifier	t1		565309	0					
ANR	565423	Identifier	h		565309	1					
ANR	565424	PrimaryExpression	1		565309	1					
ANR	565425	PrimaryExpression	1		565309	1					
ANR	565426	PrimaryExpression	0		565309	2					
ANR	565427	ExpressionStatement	"t1_dec_sigpass_step_raw ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , oneplushalf , vsc )"	513:16:13102:13354	565309	1	True				
ANR	565428	CallExpression	"t1_dec_sigpass_step_raw ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , oneplushalf , vsc )"		565309	0					
ANR	565429	Callee	t1_dec_sigpass_step_raw		565309	0					
ANR	565430	Identifier	t1_dec_sigpass_step_raw		565309	0					
ANR	565431	ArgumentList	t1		565309	1					
ANR	565432	Argument	t1		565309	0					
ANR	565433	Identifier	t1		565309	0					
ANR	565434	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565309	1					
ANR	565435	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565309	0					
ANR	565436	UnaryOperator	&		565309	0					
ANR	565437	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565309	1					
ANR	565438	PtrMemberAccess	t1 -> flags		565309	0					
ANR	565439	Identifier	t1		565309	0					
ANR	565440	Identifier	flags		565309	1					
ANR	565441	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		565309	1		+			
ANR	565442	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		565309	0		*			
ANR	565443	AdditiveExpression	j + 1		565309	0		+			
ANR	565444	Identifier	j		565309	0					
ANR	565445	PrimaryExpression	1		565309	1					
ANR	565446	PtrMemberAccess	t1 -> flags_stride		565309	1					
ANR	565447	Identifier	t1		565309	0					
ANR	565448	Identifier	flags_stride		565309	1					
ANR	565449	AdditiveExpression	i + 1		565309	1		+			
ANR	565450	Identifier	i		565309	0					
ANR	565451	PrimaryExpression	1		565309	1					
ANR	565452	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		565309	2					
ANR	565453	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		565309	0					
ANR	565454	UnaryOperator	&		565309	0					
ANR	565455	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		565309	1					
ANR	565456	PtrMemberAccess	t1 -> data		565309	0					
ANR	565457	Identifier	t1		565309	0					
ANR	565458	Identifier	data		565309	1					
ANR	565459	AdditiveExpression	( j * t1 -> w ) + i		565309	1		+			
ANR	565460	MultiplicativeExpression	j * t1 -> w		565309	0		*			
ANR	565461	Identifier	j		565309	0					
ANR	565462	PtrMemberAccess	t1 -> w		565309	1					
ANR	565463	Identifier	t1		565309	0					
ANR	565464	Identifier	w		565309	1					
ANR	565465	Identifier	i		565309	1					
ANR	565466	Argument	orient		565309	3					
ANR	565467	Identifier	orient		565309	0					
ANR	565468	Argument	oneplushalf		565309	4					
ANR	565469	Identifier	oneplushalf		565309	0					
ANR	565470	Argument	vsc		565309	5					
ANR	565471	Identifier	vsc		565309	0					
ANR	565472	ReturnType	static void		565309	1					
ANR	565473	Identifier	t1_dec_sigpass_raw		565309	2					
ANR	565474	ParameterList	"opj_t1_t * t1 , int bpno , int orient , int cblksty"		565309	3					
ANR	565475	Parameter	opj_t1_t * t1	499:4:12652:12663	565309	0	True				
ANR	565476	ParameterType	opj_t1_t *		565309	0					
ANR	565477	Identifier	t1		565309	1					
ANR	565478	Parameter	int bpno	500:4:12670:12677	565309	1	True				
ANR	565479	ParameterType	int		565309	0					
ANR	565480	Identifier	bpno		565309	1					
ANR	565481	Parameter	int orient	501:4:12684:12693	565309	2	True				
ANR	565482	ParameterType	int		565309	0					
ANR	565483	Identifier	orient		565309	1					
ANR	565484	Parameter	int cblksty	502:4:12700:12710	565309	3	True				
ANR	565485	ParameterType	int		565309	0					
ANR	565486	Identifier	cblksty		565309	1					
ANR	565487	CFGEntryNode	ENTRY		565309		True				
ANR	565488	CFGExitNode	EXIT		565309		True				
ANR	565489	Symbol	* t1		565309						
ANR	565490	Symbol	bpno		565309						
ANR	565491	Symbol	half		565309						
ANR	565492	Symbol	t1 -> w		565309						
ANR	565493	Symbol	orient		565309						
ANR	565494	Symbol	t1 -> flags		565309						
ANR	565495	Symbol	vsc		565309						
ANR	565496	Symbol	one		565309						
ANR	565497	Symbol	i		565309						
ANR	565498	Symbol	j		565309						
ANR	565499	Symbol	J2K_CCP_CBLKSTY_VSC		565309						
ANR	565500	Symbol	t1 -> data		565309						
ANR	565501	Symbol	k		565309						
ANR	565502	Symbol	cblksty		565309						
ANR	565503	Symbol	t1 -> flags_stride		565309						
ANR	565504	Symbol	t1 -> h		565309						
ANR	565505	Symbol	oneplushalf		565309						
ANR	565506	Symbol	t1		565309						
ANR	565507	Function	t1_dec_sigpass_mqc	525:0:13436:14821							
ANR	565508	FunctionDef	"t1_dec_sigpass_mqc (opj_t1_t * t1 , int bpno , int orient)"		565507	0					
ANR	565509	CompoundStatement		529:0:13516:14821	565507	0					
ANR	565510	IdentifierDeclStatement	"int i , j , k , one , half , oneplushalf ;"	530:4:13522:13557	565507	0	True				
ANR	565511	IdentifierDecl	i		565507	0					
ANR	565512	IdentifierDeclType	int		565507	0					
ANR	565513	Identifier	i		565507	1					
ANR	565514	IdentifierDecl	j		565507	1					
ANR	565515	IdentifierDeclType	int		565507	0					
ANR	565516	Identifier	j		565507	1					
ANR	565517	IdentifierDecl	k		565507	2					
ANR	565518	IdentifierDeclType	int		565507	0					
ANR	565519	Identifier	k		565507	1					
ANR	565520	IdentifierDecl	one		565507	3					
ANR	565521	IdentifierDeclType	int		565507	0					
ANR	565522	Identifier	one		565507	1					
ANR	565523	IdentifierDecl	half		565507	4					
ANR	565524	IdentifierDeclType	int		565507	0					
ANR	565525	Identifier	half		565507	1					
ANR	565526	IdentifierDecl	oneplushalf		565507	5					
ANR	565527	IdentifierDeclType	int		565507	0					
ANR	565528	Identifier	oneplushalf		565507	1					
ANR	565529	IdentifierDeclStatement	int * data1 = t1 -> data ;	531:4:13563:13584	565507	1	True				
ANR	565530	IdentifierDecl	* data1 = t1 -> data		565507	0					
ANR	565531	IdentifierDeclType	int *		565507	0					
ANR	565532	Identifier	data1		565507	1					
ANR	565533	AssignmentExpression	* data1 = t1 -> data		565507	2		=			
ANR	565534	Identifier	data1		565507	0					
ANR	565535	PtrMemberAccess	t1 -> data		565507	1					
ANR	565536	Identifier	t1		565507	0					
ANR	565537	Identifier	data		565507	1					
ANR	565538	IdentifierDeclStatement	flag_t * flags1 = & t1 -> flags [ 1 ] ;	532:4:13590:13620	565507	2	True				
ANR	565539	IdentifierDecl	* flags1 = & t1 -> flags [ 1 ]		565507	0					
ANR	565540	IdentifierDeclType	flag_t *		565507	0					
ANR	565541	Identifier	flags1		565507	1					
ANR	565542	AssignmentExpression	* flags1 = & t1 -> flags [ 1 ]		565507	2		=			
ANR	565543	Identifier	flags1		565507	0					
ANR	565544	UnaryOperationExpression	& t1 -> flags [ 1 ]		565507	1					
ANR	565545	UnaryOperator	&		565507	0					
ANR	565546	ArrayIndexing	t1 -> flags [ 1 ]		565507	1					
ANR	565547	PtrMemberAccess	t1 -> flags		565507	0					
ANR	565548	Identifier	t1		565507	0					
ANR	565549	Identifier	flags		565507	1					
ANR	565550	PrimaryExpression	1		565507	1					
ANR	565551	ExpressionStatement	one = 1 << bpno	533:4:13626:13641	565507	3	True				
ANR	565552	AssignmentExpression	one = 1 << bpno		565507	0		=			
ANR	565553	Identifier	one		565507	0					
ANR	565554	ShiftExpression	1 << bpno		565507	1		<<			
ANR	565555	PrimaryExpression	1		565507	0					
ANR	565556	Identifier	bpno		565507	1					
ANR	565557	ExpressionStatement	half = one >> 1	534:4:13647:13662	565507	4	True				
ANR	565558	AssignmentExpression	half = one >> 1		565507	0		=			
ANR	565559	Identifier	half		565507	0					
ANR	565560	ShiftExpression	one >> 1		565507	1		>>			
ANR	565561	Identifier	one		565507	0					
ANR	565562	PrimaryExpression	1		565507	1					
ANR	565563	ExpressionStatement	oneplushalf = one | half	535:4:13668:13692	565507	5	True				
ANR	565564	AssignmentExpression	oneplushalf = one | half		565507	0		=			
ANR	565565	Identifier	oneplushalf		565507	0					
ANR	565566	InclusiveOrExpression	one | half		565507	1		|			
ANR	565567	Identifier	one		565507	0					
ANR	565568	Identifier	half		565507	1					
ANR	565569	ForStatement	for ( k = 0 ; k < ( t1 -> h & ~3 ) ; k += 4 )		565507	6					
ANR	565570	ForInit	k = 0 ;	536:9:13703:13708	565507	0	True				
ANR	565571	AssignmentExpression	k = 0		565507	0		=			
ANR	565572	Identifier	k		565507	0					
ANR	565573	PrimaryExpression	0		565507	1					
ANR	565574	Condition	k < ( t1 -> h & ~3 )	536:16:13710:13725	565507	1	True				
ANR	565575	RelationalExpression	k < ( t1 -> h & ~3 )		565507	0		<			
ANR	565576	Identifier	k		565507	0					
ANR	565577	BitAndExpression	t1 -> h & ~3		565507	1		&			
ANR	565578	PtrMemberAccess	t1 -> h		565507	0					
ANR	565579	Identifier	t1		565507	0					
ANR	565580	Identifier	h		565507	1					
ANR	565581	Identifier	~3		565507	1					
ANR	565582	AssignmentExpression	k += 4	536:34:13728:13733	565507	2	True	+=			
ANR	565583	Identifier	k		565507	0					
ANR	565584	PrimaryExpression	4		565507	1					
ANR	565585	CompoundStatement		8:42:219:219	565507	3					
ANR	565586	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		565507	0					
ANR	565587	ForInit	i = 0 ;	537:13:13751:13756	565507	0	True				
ANR	565588	AssignmentExpression	i = 0		565507	0		=			
ANR	565589	Identifier	i		565507	0					
ANR	565590	PrimaryExpression	0		565507	1					
ANR	565591	Condition	i < t1 -> w	537:20:13758:13766	565507	1	True				
ANR	565592	RelationalExpression	i < t1 -> w		565507	0		<			
ANR	565593	Identifier	i		565507	0					
ANR	565594	PtrMemberAccess	t1 -> w		565507	1					
ANR	565595	Identifier	t1		565507	0					
ANR	565596	Identifier	w		565507	1					
ANR	565597	UnaryExpression	++ i	537:31:13769:13771	565507	2	True				
ANR	565598	IncDec	++		565507	0					
ANR	565599	Identifier	i		565507	1					
ANR	565600	CompoundStatement		11:12:307:334	565507	3					
ANR	565601	IdentifierDeclStatement	int * data2 = data1 + i ;	538:12:13788:13810	565507	0	True				
ANR	565602	IdentifierDecl	* data2 = data1 + i		565507	0					
ANR	565603	IdentifierDeclType	int *		565507	0					
ANR	565604	Identifier	data2		565507	1					
ANR	565605	AssignmentExpression	* data2 = data1 + i		565507	2		=			
ANR	565606	Identifier	data2		565507	0					
ANR	565607	AdditiveExpression	data1 + i		565507	1		+			
ANR	565608	Identifier	data1		565507	0					
ANR	565609	Identifier	i		565507	1					
ANR	565610	IdentifierDeclStatement	flag_t * flags2 = flags1 + i ;	539:12:13824:13851	565507	1	True				
ANR	565611	IdentifierDecl	* flags2 = flags1 + i		565507	0					
ANR	565612	IdentifierDeclType	flag_t *		565507	0					
ANR	565613	Identifier	flags2		565507	1					
ANR	565614	AssignmentExpression	* flags2 = flags1 + i		565507	2		=			
ANR	565615	Identifier	flags2		565507	0					
ANR	565616	AdditiveExpression	flags1 + i		565507	1		+			
ANR	565617	Identifier	flags1		565507	0					
ANR	565618	Identifier	i		565507	1					
ANR	565619	ExpressionStatement	flags2 += t1 -> flags_stride	540:12:13865:13891	565507	2	True				
ANR	565620	AssignmentExpression	flags2 += t1 -> flags_stride		565507	0		+=			
ANR	565621	Identifier	flags2		565507	0					
ANR	565622	PtrMemberAccess	t1 -> flags_stride		565507	1					
ANR	565623	Identifier	t1		565507	0					
ANR	565624	Identifier	flags_stride		565507	1					
ANR	565625	ExpressionStatement	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"	541:12:13905:13968	565507	3	True				
ANR	565626	CallExpression	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"		565507	0					
ANR	565627	Callee	t1_dec_sigpass_step_mqc		565507	0					
ANR	565628	Identifier	t1_dec_sigpass_step_mqc		565507	0					
ANR	565629	ArgumentList	t1		565507	1					
ANR	565630	Argument	t1		565507	0					
ANR	565631	Identifier	t1		565507	0					
ANR	565632	Argument	flags2		565507	1					
ANR	565633	Identifier	flags2		565507	0					
ANR	565634	Argument	data2		565507	2					
ANR	565635	Identifier	data2		565507	0					
ANR	565636	Argument	orient		565507	3					
ANR	565637	Identifier	orient		565507	0					
ANR	565638	Argument	oneplushalf		565507	4					
ANR	565639	Identifier	oneplushalf		565507	0					
ANR	565640	ExpressionStatement	data2 += t1 -> w	542:12:13982:13996	565507	4	True				
ANR	565641	AssignmentExpression	data2 += t1 -> w		565507	0		+=			
ANR	565642	Identifier	data2		565507	0					
ANR	565643	PtrMemberAccess	t1 -> w		565507	1					
ANR	565644	Identifier	t1		565507	0					
ANR	565645	Identifier	w		565507	1					
ANR	565646	ExpressionStatement	flags2 += t1 -> flags_stride	543:12:14010:14036	565507	5	True				
ANR	565647	AssignmentExpression	flags2 += t1 -> flags_stride		565507	0		+=			
ANR	565648	Identifier	flags2		565507	0					
ANR	565649	PtrMemberAccess	t1 -> flags_stride		565507	1					
ANR	565650	Identifier	t1		565507	0					
ANR	565651	Identifier	flags_stride		565507	1					
ANR	565652	ExpressionStatement	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"	544:12:14050:14113	565507	6	True				
ANR	565653	CallExpression	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"		565507	0					
ANR	565654	Callee	t1_dec_sigpass_step_mqc		565507	0					
ANR	565655	Identifier	t1_dec_sigpass_step_mqc		565507	0					
ANR	565656	ArgumentList	t1		565507	1					
ANR	565657	Argument	t1		565507	0					
ANR	565658	Identifier	t1		565507	0					
ANR	565659	Argument	flags2		565507	1					
ANR	565660	Identifier	flags2		565507	0					
ANR	565661	Argument	data2		565507	2					
ANR	565662	Identifier	data2		565507	0					
ANR	565663	Argument	orient		565507	3					
ANR	565664	Identifier	orient		565507	0					
ANR	565665	Argument	oneplushalf		565507	4					
ANR	565666	Identifier	oneplushalf		565507	0					
ANR	565667	ExpressionStatement	data2 += t1 -> w	545:12:14127:14141	565507	7	True				
ANR	565668	AssignmentExpression	data2 += t1 -> w		565507	0		+=			
ANR	565669	Identifier	data2		565507	0					
ANR	565670	PtrMemberAccess	t1 -> w		565507	1					
ANR	565671	Identifier	t1		565507	0					
ANR	565672	Identifier	w		565507	1					
ANR	565673	ExpressionStatement	flags2 += t1 -> flags_stride	546:12:14155:14181	565507	8	True				
ANR	565674	AssignmentExpression	flags2 += t1 -> flags_stride		565507	0		+=			
ANR	565675	Identifier	flags2		565507	0					
ANR	565676	PtrMemberAccess	t1 -> flags_stride		565507	1					
ANR	565677	Identifier	t1		565507	0					
ANR	565678	Identifier	flags_stride		565507	1					
ANR	565679	ExpressionStatement	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"	547:12:14195:14258	565507	9	True				
ANR	565680	CallExpression	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"		565507	0					
ANR	565681	Callee	t1_dec_sigpass_step_mqc		565507	0					
ANR	565682	Identifier	t1_dec_sigpass_step_mqc		565507	0					
ANR	565683	ArgumentList	t1		565507	1					
ANR	565684	Argument	t1		565507	0					
ANR	565685	Identifier	t1		565507	0					
ANR	565686	Argument	flags2		565507	1					
ANR	565687	Identifier	flags2		565507	0					
ANR	565688	Argument	data2		565507	2					
ANR	565689	Identifier	data2		565507	0					
ANR	565690	Argument	orient		565507	3					
ANR	565691	Identifier	orient		565507	0					
ANR	565692	Argument	oneplushalf		565507	4					
ANR	565693	Identifier	oneplushalf		565507	0					
ANR	565694	ExpressionStatement	data2 += t1 -> w	548:12:14272:14286	565507	10	True				
ANR	565695	AssignmentExpression	data2 += t1 -> w		565507	0		+=			
ANR	565696	Identifier	data2		565507	0					
ANR	565697	PtrMemberAccess	t1 -> w		565507	1					
ANR	565698	Identifier	t1		565507	0					
ANR	565699	Identifier	w		565507	1					
ANR	565700	ExpressionStatement	flags2 += t1 -> flags_stride	549:12:14300:14326	565507	11	True				
ANR	565701	AssignmentExpression	flags2 += t1 -> flags_stride		565507	0		+=			
ANR	565702	Identifier	flags2		565507	0					
ANR	565703	PtrMemberAccess	t1 -> flags_stride		565507	1					
ANR	565704	Identifier	t1		565507	0					
ANR	565705	Identifier	flags_stride		565507	1					
ANR	565706	ExpressionStatement	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"	550:12:14340:14403	565507	12	True				
ANR	565707	CallExpression	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"		565507	0					
ANR	565708	Callee	t1_dec_sigpass_step_mqc		565507	0					
ANR	565709	Identifier	t1_dec_sigpass_step_mqc		565507	0					
ANR	565710	ArgumentList	t1		565507	1					
ANR	565711	Argument	t1		565507	0					
ANR	565712	Identifier	t1		565507	0					
ANR	565713	Argument	flags2		565507	1					
ANR	565714	Identifier	flags2		565507	0					
ANR	565715	Argument	data2		565507	2					
ANR	565716	Identifier	data2		565507	0					
ANR	565717	Argument	orient		565507	3					
ANR	565718	Identifier	orient		565507	0					
ANR	565719	Argument	oneplushalf		565507	4					
ANR	565720	Identifier	oneplushalf		565507	0					
ANR	565721	ExpressionStatement	data2 += t1 -> w	551:12:14417:14431	565507	13	True				
ANR	565722	AssignmentExpression	data2 += t1 -> w		565507	0		+=			
ANR	565723	Identifier	data2		565507	0					
ANR	565724	PtrMemberAccess	t1 -> w		565507	1					
ANR	565725	Identifier	t1		565507	0					
ANR	565726	Identifier	w		565507	1					
ANR	565727	ExpressionStatement	data1 += t1 -> w << 2	553:8:14451:14470	565507	1	True				
ANR	565728	AssignmentExpression	data1 += t1 -> w << 2		565507	0		+=			
ANR	565729	Identifier	data1		565507	0					
ANR	565730	ShiftExpression	t1 -> w << 2		565507	1		<<			
ANR	565731	PtrMemberAccess	t1 -> w		565507	0					
ANR	565732	Identifier	t1		565507	0					
ANR	565733	Identifier	w		565507	1					
ANR	565734	PrimaryExpression	2		565507	1					
ANR	565735	ExpressionStatement	flags1 += t1 -> flags_stride << 2	554:8:14480:14511	565507	2	True				
ANR	565736	AssignmentExpression	flags1 += t1 -> flags_stride << 2		565507	0		+=			
ANR	565737	Identifier	flags1		565507	0					
ANR	565738	ShiftExpression	t1 -> flags_stride << 2		565507	1		<<			
ANR	565739	PtrMemberAccess	t1 -> flags_stride		565507	0					
ANR	565740	Identifier	t1		565507	0					
ANR	565741	Identifier	flags_stride		565507	1					
ANR	565742	PrimaryExpression	2		565507	1					
ANR	565743	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		565507	7					
ANR	565744	ForInit	i = 0 ;	556:9:14528:14533	565507	0	True				
ANR	565745	AssignmentExpression	i = 0		565507	0		=			
ANR	565746	Identifier	i		565507	0					
ANR	565747	PrimaryExpression	0		565507	1					
ANR	565748	Condition	i < t1 -> w	556:16:14535:14543	565507	1	True				
ANR	565749	RelationalExpression	i < t1 -> w		565507	0		<			
ANR	565750	Identifier	i		565507	0					
ANR	565751	PtrMemberAccess	t1 -> w		565507	1					
ANR	565752	Identifier	t1		565507	0					
ANR	565753	Identifier	w		565507	1					
ANR	565754	UnaryExpression	++ i	556:27:14546:14548	565507	2	True				
ANR	565755	IncDec	++		565507	0					
ANR	565756	Identifier	i		565507	1					
ANR	565757	CompoundStatement		30:8:1076:1103	565507	3					
ANR	565758	IdentifierDeclStatement	int * data2 = data1 + i ;	557:8:14561:14583	565507	0	True				
ANR	565759	IdentifierDecl	* data2 = data1 + i		565507	0					
ANR	565760	IdentifierDeclType	int *		565507	0					
ANR	565761	Identifier	data2		565507	1					
ANR	565762	AssignmentExpression	* data2 = data1 + i		565507	2		=			
ANR	565763	Identifier	data2		565507	0					
ANR	565764	AdditiveExpression	data1 + i		565507	1		+			
ANR	565765	Identifier	data1		565507	0					
ANR	565766	Identifier	i		565507	1					
ANR	565767	IdentifierDeclStatement	flag_t * flags2 = flags1 + i ;	558:8:14593:14620	565507	1	True				
ANR	565768	IdentifierDecl	* flags2 = flags1 + i		565507	0					
ANR	565769	IdentifierDeclType	flag_t *		565507	0					
ANR	565770	Identifier	flags2		565507	1					
ANR	565771	AssignmentExpression	* flags2 = flags1 + i		565507	2		=			
ANR	565772	Identifier	flags2		565507	0					
ANR	565773	AdditiveExpression	flags1 + i		565507	1		+			
ANR	565774	Identifier	flags1		565507	0					
ANR	565775	Identifier	i		565507	1					
ANR	565776	ForStatement	for ( j = k ; j < t1 -> h ; ++ j )		565507	2					
ANR	565777	ForInit	j = k ;	559:13:14635:14640	565507	0	True				
ANR	565778	AssignmentExpression	j = k		565507	0		=			
ANR	565779	Identifier	j		565507	0					
ANR	565780	Identifier	k		565507	1					
ANR	565781	Condition	j < t1 -> h	559:20:14642:14650	565507	1	True				
ANR	565782	RelationalExpression	j < t1 -> h		565507	0		<			
ANR	565783	Identifier	j		565507	0					
ANR	565784	PtrMemberAccess	t1 -> h		565507	1					
ANR	565785	Identifier	t1		565507	0					
ANR	565786	Identifier	h		565507	1					
ANR	565787	UnaryExpression	++ j	559:31:14653:14655	565507	2	True				
ANR	565788	IncDec	++		565507	0					
ANR	565789	Identifier	j		565507	1					
ANR	565790	CompoundStatement		31:36:1141:1141	565507	3					
ANR	565791	ExpressionStatement	flags2 += t1 -> flags_stride	560:12:14672:14698	565507	0	True				
ANR	565792	AssignmentExpression	flags2 += t1 -> flags_stride		565507	0		+=			
ANR	565793	Identifier	flags2		565507	0					
ANR	565794	PtrMemberAccess	t1 -> flags_stride		565507	1					
ANR	565795	Identifier	t1		565507	0					
ANR	565796	Identifier	flags_stride		565507	1					
ANR	565797	ExpressionStatement	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"	561:12:14712:14775	565507	1	True				
ANR	565798	CallExpression	"t1_dec_sigpass_step_mqc ( t1 , flags2 , data2 , orient , oneplushalf )"		565507	0					
ANR	565799	Callee	t1_dec_sigpass_step_mqc		565507	0					
ANR	565800	Identifier	t1_dec_sigpass_step_mqc		565507	0					
ANR	565801	ArgumentList	t1		565507	1					
ANR	565802	Argument	t1		565507	0					
ANR	565803	Identifier	t1		565507	0					
ANR	565804	Argument	flags2		565507	1					
ANR	565805	Identifier	flags2		565507	0					
ANR	565806	Argument	data2		565507	2					
ANR	565807	Identifier	data2		565507	0					
ANR	565808	Argument	orient		565507	3					
ANR	565809	Identifier	orient		565507	0					
ANR	565810	Argument	oneplushalf		565507	4					
ANR	565811	Identifier	oneplushalf		565507	0					
ANR	565812	ExpressionStatement	data2 += t1 -> w	562:12:14789:14803	565507	2	True				
ANR	565813	AssignmentExpression	data2 += t1 -> w		565507	0		+=			
ANR	565814	Identifier	data2		565507	0					
ANR	565815	PtrMemberAccess	t1 -> w		565507	1					
ANR	565816	Identifier	t1		565507	0					
ANR	565817	Identifier	w		565507	1					
ANR	565818	ReturnType	static void		565507	1					
ANR	565819	Identifier	t1_dec_sigpass_mqc		565507	2					
ANR	565820	ParameterList	"opj_t1_t * t1 , int bpno , int orient"		565507	3					
ANR	565821	Parameter	opj_t1_t * t1	526:4:13472:13483	565507	0	True				
ANR	565822	ParameterType	opj_t1_t *		565507	0					
ANR	565823	Identifier	t1		565507	1					
ANR	565824	Parameter	int bpno	527:4:13490:13497	565507	1	True				
ANR	565825	ParameterType	int		565507	0					
ANR	565826	Identifier	bpno		565507	1					
ANR	565827	Parameter	int orient	528:4:13504:13513	565507	2	True				
ANR	565828	ParameterType	int		565507	0					
ANR	565829	Identifier	orient		565507	1					
ANR	565830	CFGEntryNode	ENTRY		565507		True				
ANR	565831	CFGExitNode	EXIT		565507		True				
ANR	565832	Symbol	* t1		565507						
ANR	565833	Symbol	bpno		565507						
ANR	565834	Symbol	half		565507						
ANR	565835	Symbol	t1 -> w		565507						
ANR	565836	Symbol	orient		565507						
ANR	565837	Symbol	t1 -> flags		565507						
ANR	565838	Symbol	flags2		565507						
ANR	565839	Symbol	one		565507						
ANR	565840	Symbol	flags1		565507						
ANR	565841	Symbol	data2		565507						
ANR	565842	Symbol	data1		565507						
ANR	565843	Symbol	i		565507						
ANR	565844	Symbol	j		565507						
ANR	565845	Symbol	t1 -> data		565507						
ANR	565846	Symbol	k		565507						
ANR	565847	Symbol	t1 -> flags_stride		565507						
ANR	565848	Symbol	t1 -> h		565507						
ANR	565849	Symbol	~3		565507						
ANR	565850	Symbol	oneplushalf		565507						
ANR	565851	Symbol	t1		565507						
ANR	565852	Function	t1_dec_sigpass_mqc_vsc	567:0:14871:15571							
ANR	565853	FunctionDef	"t1_dec_sigpass_mqc_vsc (opj_t1_t * t1 , int bpno , int orient)"		565852	0					
ANR	565854	CompoundStatement		571:0:14955:15571	565852	0					
ANR	565855	IdentifierDeclStatement	"int i , j , k , one , half , oneplushalf , vsc ;"	572:4:14961:15001	565852	0	True				
ANR	565856	IdentifierDecl	i		565852	0					
ANR	565857	IdentifierDeclType	int		565852	0					
ANR	565858	Identifier	i		565852	1					
ANR	565859	IdentifierDecl	j		565852	1					
ANR	565860	IdentifierDeclType	int		565852	0					
ANR	565861	Identifier	j		565852	1					
ANR	565862	IdentifierDecl	k		565852	2					
ANR	565863	IdentifierDeclType	int		565852	0					
ANR	565864	Identifier	k		565852	1					
ANR	565865	IdentifierDecl	one		565852	3					
ANR	565866	IdentifierDeclType	int		565852	0					
ANR	565867	Identifier	one		565852	1					
ANR	565868	IdentifierDecl	half		565852	4					
ANR	565869	IdentifierDeclType	int		565852	0					
ANR	565870	Identifier	half		565852	1					
ANR	565871	IdentifierDecl	oneplushalf		565852	5					
ANR	565872	IdentifierDeclType	int		565852	0					
ANR	565873	Identifier	oneplushalf		565852	1					
ANR	565874	IdentifierDecl	vsc		565852	6					
ANR	565875	IdentifierDeclType	int		565852	0					
ANR	565876	Identifier	vsc		565852	1					
ANR	565877	ExpressionStatement	one = 1 << bpno	573:4:15007:15022	565852	1	True				
ANR	565878	AssignmentExpression	one = 1 << bpno		565852	0		=			
ANR	565879	Identifier	one		565852	0					
ANR	565880	ShiftExpression	1 << bpno		565852	1		<<			
ANR	565881	PrimaryExpression	1		565852	0					
ANR	565882	Identifier	bpno		565852	1					
ANR	565883	ExpressionStatement	half = one >> 1	574:4:15028:15043	565852	2	True				
ANR	565884	AssignmentExpression	half = one >> 1		565852	0		=			
ANR	565885	Identifier	half		565852	0					
ANR	565886	ShiftExpression	one >> 1		565852	1		>>			
ANR	565887	Identifier	one		565852	0					
ANR	565888	PrimaryExpression	1		565852	1					
ANR	565889	ExpressionStatement	oneplushalf = one | half	575:4:15049:15073	565852	3	True				
ANR	565890	AssignmentExpression	oneplushalf = one | half		565852	0		=			
ANR	565891	Identifier	oneplushalf		565852	0					
ANR	565892	InclusiveOrExpression	one | half		565852	1		|			
ANR	565893	Identifier	one		565852	0					
ANR	565894	Identifier	half		565852	1					
ANR	565895	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		565852	4					
ANR	565896	ForInit	k = 0 ;	576:9:15084:15089	565852	0	True				
ANR	565897	AssignmentExpression	k = 0		565852	0		=			
ANR	565898	Identifier	k		565852	0					
ANR	565899	PrimaryExpression	0		565852	1					
ANR	565900	Condition	k < t1 -> h	576:16:15091:15099	565852	1	True				
ANR	565901	RelationalExpression	k < t1 -> h		565852	0		<			
ANR	565902	Identifier	k		565852	0					
ANR	565903	PtrMemberAccess	t1 -> h		565852	1					
ANR	565904	Identifier	t1		565852	0					
ANR	565905	Identifier	h		565852	1					
ANR	565906	AssignmentExpression	k += 4	576:27:15102:15107	565852	2	True	+=			
ANR	565907	Identifier	k		565852	0					
ANR	565908	PrimaryExpression	4		565852	1					
ANR	565909	CompoundStatement		6:35:154:154	565852	3					
ANR	565910	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		565852	0					
ANR	565911	ForInit	i = 0 ;	577:13:15125:15130	565852	0	True				
ANR	565912	AssignmentExpression	i = 0		565852	0		=			
ANR	565913	Identifier	i		565852	0					
ANR	565914	PrimaryExpression	0		565852	1					
ANR	565915	Condition	i < t1 -> w	577:20:15132:15140	565852	1	True				
ANR	565916	RelationalExpression	i < t1 -> w		565852	0		<			
ANR	565917	Identifier	i		565852	0					
ANR	565918	PtrMemberAccess	t1 -> w		565852	1					
ANR	565919	Identifier	t1		565852	0					
ANR	565920	Identifier	w		565852	1					
ANR	565921	UnaryExpression	++ i	577:31:15143:15145	565852	2	True				
ANR	565922	IncDec	++		565852	0					
ANR	565923	Identifier	i		565852	1					
ANR	565924	CompoundStatement		7:36:192:192	565852	3					
ANR	565925	ForStatement	for ( j = k ; j < k + 4 && j < t1 -> h ; ++ j )		565852	0					
ANR	565926	ForInit	j = k ;	578:17:15167:15172	565852	0	True				
ANR	565927	AssignmentExpression	j = k		565852	0		=			
ANR	565928	Identifier	j		565852	0					
ANR	565929	Identifier	k		565852	1					
ANR	565930	Condition	j < k + 4 && j < t1 -> h	578:24:15174:15195	565852	1	True				
ANR	565931	AndExpression	j < k + 4 && j < t1 -> h		565852	0		&&			
ANR	565932	RelationalExpression	j < k + 4		565852	0		<			
ANR	565933	Identifier	j		565852	0					
ANR	565934	AdditiveExpression	k + 4		565852	1		+			
ANR	565935	Identifier	k		565852	0					
ANR	565936	PrimaryExpression	4		565852	1					
ANR	565937	RelationalExpression	j < t1 -> h		565852	1		<			
ANR	565938	Identifier	j		565852	0					
ANR	565939	PtrMemberAccess	t1 -> h		565852	1					
ANR	565940	Identifier	t1		565852	0					
ANR	565941	Identifier	h		565852	1					
ANR	565942	UnaryExpression	++ j	578:48:15198:15200	565852	2	True				
ANR	565943	IncDec	++		565852	0					
ANR	565944	Identifier	j		565852	1					
ANR	565945	CompoundStatement		8:53:247:247	565852	3					
ANR	565946	ExpressionStatement	vsc = ( j == k + 3 || j == t1 -> h - 1 ) ? 1 : 0	579:16:15221:15265	565852	0	True				
ANR	565947	AssignmentExpression	vsc = ( j == k + 3 || j == t1 -> h - 1 ) ? 1 : 0		565852	0		=			
ANR	565948	Identifier	vsc		565852	0					
ANR	565949	ConditionalExpression	( j == k + 3 || j == t1 -> h - 1 ) ? 1 : 0		565852	1					
ANR	565950	Condition	j == k + 3 || j == t1 -> h - 1		565852	0					
ANR	565951	OrExpression	j == k + 3 || j == t1 -> h - 1		565852	0		||			
ANR	565952	EqualityExpression	j == k + 3		565852	0		==			
ANR	565953	Identifier	j		565852	0					
ANR	565954	AdditiveExpression	k + 3		565852	1		+			
ANR	565955	Identifier	k		565852	0					
ANR	565956	PrimaryExpression	3		565852	1					
ANR	565957	EqualityExpression	j == t1 -> h - 1		565852	1		==			
ANR	565958	Identifier	j		565852	0					
ANR	565959	AdditiveExpression	t1 -> h - 1		565852	1		-			
ANR	565960	PtrMemberAccess	t1 -> h		565852	0					
ANR	565961	Identifier	t1		565852	0					
ANR	565962	Identifier	h		565852	1					
ANR	565963	PrimaryExpression	1		565852	1					
ANR	565964	PrimaryExpression	1		565852	1					
ANR	565965	PrimaryExpression	0		565852	2					
ANR	565966	ExpressionStatement	"t1_dec_sigpass_step_mqc_vsc ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , oneplushalf , vsc )"	580:16:15283:15539	565852	1	True				
ANR	565967	CallExpression	"t1_dec_sigpass_step_mqc_vsc ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , oneplushalf , vsc )"		565852	0					
ANR	565968	Callee	t1_dec_sigpass_step_mqc_vsc		565852	0					
ANR	565969	Identifier	t1_dec_sigpass_step_mqc_vsc		565852	0					
ANR	565970	ArgumentList	t1		565852	1					
ANR	565971	Argument	t1		565852	0					
ANR	565972	Identifier	t1		565852	0					
ANR	565973	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565852	1					
ANR	565974	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565852	0					
ANR	565975	UnaryOperator	&		565852	0					
ANR	565976	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		565852	1					
ANR	565977	PtrMemberAccess	t1 -> flags		565852	0					
ANR	565978	Identifier	t1		565852	0					
ANR	565979	Identifier	flags		565852	1					
ANR	565980	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		565852	1		+			
ANR	565981	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		565852	0		*			
ANR	565982	AdditiveExpression	j + 1		565852	0		+			
ANR	565983	Identifier	j		565852	0					
ANR	565984	PrimaryExpression	1		565852	1					
ANR	565985	PtrMemberAccess	t1 -> flags_stride		565852	1					
ANR	565986	Identifier	t1		565852	0					
ANR	565987	Identifier	flags_stride		565852	1					
ANR	565988	AdditiveExpression	i + 1		565852	1		+			
ANR	565989	Identifier	i		565852	0					
ANR	565990	PrimaryExpression	1		565852	1					
ANR	565991	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		565852	2					
ANR	565992	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		565852	0					
ANR	565993	UnaryOperator	&		565852	0					
ANR	565994	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		565852	1					
ANR	565995	PtrMemberAccess	t1 -> data		565852	0					
ANR	565996	Identifier	t1		565852	0					
ANR	565997	Identifier	data		565852	1					
ANR	565998	AdditiveExpression	( j * t1 -> w ) + i		565852	1		+			
ANR	565999	MultiplicativeExpression	j * t1 -> w		565852	0		*			
ANR	566000	Identifier	j		565852	0					
ANR	566001	PtrMemberAccess	t1 -> w		565852	1					
ANR	566002	Identifier	t1		565852	0					
ANR	566003	Identifier	w		565852	1					
ANR	566004	Identifier	i		565852	1					
ANR	566005	Argument	orient		565852	3					
ANR	566006	Identifier	orient		565852	0					
ANR	566007	Argument	oneplushalf		565852	4					
ANR	566008	Identifier	oneplushalf		565852	0					
ANR	566009	Argument	vsc		565852	5					
ANR	566010	Identifier	vsc		565852	0					
ANR	566011	ReturnType	static void		565852	1					
ANR	566012	Identifier	t1_dec_sigpass_mqc_vsc		565852	2					
ANR	566013	ParameterList	"opj_t1_t * t1 , int bpno , int orient"		565852	3					
ANR	566014	Parameter	opj_t1_t * t1	568:4:14911:14922	565852	0	True				
ANR	566015	ParameterType	opj_t1_t *		565852	0					
ANR	566016	Identifier	t1		565852	1					
ANR	566017	Parameter	int bpno	569:4:14929:14936	565852	1	True				
ANR	566018	ParameterType	int		565852	0					
ANR	566019	Identifier	bpno		565852	1					
ANR	566020	Parameter	int orient	570:4:14943:14952	565852	2	True				
ANR	566021	ParameterType	int		565852	0					
ANR	566022	Identifier	orient		565852	1					
ANR	566023	CFGEntryNode	ENTRY		565852		True				
ANR	566024	CFGExitNode	EXIT		565852		True				
ANR	566025	Symbol	* t1		565852						
ANR	566026	Symbol	bpno		565852						
ANR	566027	Symbol	half		565852						
ANR	566028	Symbol	t1 -> w		565852						
ANR	566029	Symbol	orient		565852						
ANR	566030	Symbol	t1 -> flags		565852						
ANR	566031	Symbol	one		565852						
ANR	566032	Symbol	vsc		565852						
ANR	566033	Symbol	i		565852						
ANR	566034	Symbol	j		565852						
ANR	566035	Symbol	t1 -> data		565852						
ANR	566036	Symbol	k		565852						
ANR	566037	Symbol	t1 -> flags_stride		565852						
ANR	566038	Symbol	t1 -> h		565852						
ANR	566039	Symbol	oneplushalf		565852						
ANR	566040	Symbol	t1		565852						
ANR	566041	Function	t1_enc_refpass_step	592:0:15621:16389							
ANR	566042	FunctionDef	"t1_enc_refpass_step (opj_t1_t * t1 , flag_t * flagsp , int * datap , int bpno , int one , int * nmsedec , char type , int vsc)"		566041	0					
ANR	566043	CompoundStatement		601:0:15781:16389	566041	0					
ANR	566044	IdentifierDeclStatement	"int v , flag ;"	602:4:15787:15798	566041	0	True				
ANR	566045	IdentifierDecl	v		566041	0					
ANR	566046	IdentifierDeclType	int		566041	0					
ANR	566047	Identifier	v		566041	1					
ANR	566048	IdentifierDecl	flag		566041	1					
ANR	566049	IdentifierDeclType	int		566041	0					
ANR	566050	Identifier	flag		566041	1					
ANR	566051	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	604:4:15805:15829	566041	1	True				
ANR	566052	IdentifierDecl	* mqc = t1 -> mqc		566041	0					
ANR	566053	IdentifierDeclType	opj_mqc_t *		566041	0					
ANR	566054	Identifier	mqc		566041	1					
ANR	566055	AssignmentExpression	* mqc = t1 -> mqc		566041	2		=			
ANR	566056	Identifier	mqc		566041	0					
ANR	566057	PtrMemberAccess	t1 -> mqc		566041	1					
ANR	566058	Identifier	t1		566041	0					
ANR	566059	Identifier	mqc		566041	1					
ANR	566060	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	606:4:15858:15956	566041	2	True				
ANR	566061	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		566041	0		=			
ANR	566062	Identifier	flag		566041	0					
ANR	566063	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		566041	1					
ANR	566064	Condition	vsc		566041	0					
ANR	566065	Identifier	vsc		566041	0					
ANR	566066	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		566041	1		&			
ANR	566067	UnaryOperationExpression	* flagsp		566041	0					
ANR	566068	UnaryOperator	*		566041	0					
ANR	566069	Identifier	flagsp		566041	1					
ANR	566070	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		566041	1					
ANR	566071	UnaryOperator	~		566041	0					
ANR	566072	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		566041	1		|			
ANR	566073	Identifier	T1_SIG_S		566041	0					
ANR	566074	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		566041	1		|			
ANR	566075	Identifier	T1_SIG_SE		566041	0					
ANR	566076	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		566041	1		|			
ANR	566077	Identifier	T1_SIG_SW		566041	0					
ANR	566078	Identifier	T1_SGN_S		566041	1					
ANR	566079	UnaryOperationExpression	* flagsp		566041	2					
ANR	566080	UnaryOperator	*		566041	0					
ANR	566081	Identifier	flagsp		566041	1					
ANR	566082	IfStatement	if ( ( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG )		566041	3					
ANR	566083	Condition	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG	608:8:15966:16003	566041	0	True				
ANR	566084	EqualityExpression	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG		566041	0		==			
ANR	566085	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		566041	0		&			
ANR	566086	Identifier	flag		566041	0					
ANR	566087	InclusiveOrExpression	T1_SIG | T1_VISIT		566041	1		|			
ANR	566088	Identifier	T1_SIG		566041	0					
ANR	566089	Identifier	T1_VISIT		566041	1					
ANR	566090	Identifier	T1_SIG		566041	1					
ANR	566091	CompoundStatement		8:48:224:224	566041	1					
ANR	566092	ExpressionStatement	"* nmsedec += t1_getnmsedec_ref ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"	609:8:16016:16090	566041	0	True				
ANR	566093	AssignmentExpression	"* nmsedec += t1_getnmsedec_ref ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"		566041	0		+=			
ANR	566094	UnaryOperationExpression	* nmsedec		566041	0					
ANR	566095	UnaryOperator	*		566041	0					
ANR	566096	Identifier	nmsedec		566041	1					
ANR	566097	CallExpression	"t1_getnmsedec_ref ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"		566041	1					
ANR	566098	Callee	t1_getnmsedec_ref		566041	0					
ANR	566099	Identifier	t1_getnmsedec_ref		566041	0					
ANR	566100	ArgumentList	int_abs ( * datap )		566041	1					
ANR	566101	Argument	int_abs ( * datap )		566041	0					
ANR	566102	CallExpression	int_abs ( * datap )		566041	0					
ANR	566103	Callee	int_abs		566041	0					
ANR	566104	Identifier	int_abs		566041	0					
ANR	566105	ArgumentList	* datap		566041	1					
ANR	566106	Argument	* datap		566041	0					
ANR	566107	UnaryOperationExpression	* datap		566041	0					
ANR	566108	UnaryOperator	*		566041	0					
ANR	566109	Identifier	datap		566041	1					
ANR	566110	Argument	bpno + T1_NMSEDEC_FRACBITS		566041	1					
ANR	566111	AdditiveExpression	bpno + T1_NMSEDEC_FRACBITS		566041	0		+			
ANR	566112	Identifier	bpno		566041	0					
ANR	566113	Identifier	T1_NMSEDEC_FRACBITS		566041	1					
ANR	566114	ExpressionStatement	v = int_abs ( * datap ) & one ? 1 : 0	610:8:16100:16133	566041	1	True				
ANR	566115	AssignmentExpression	v = int_abs ( * datap ) & one ? 1 : 0		566041	0		=			
ANR	566116	Identifier	v		566041	0					
ANR	566117	ConditionalExpression	int_abs ( * datap ) & one ? 1 : 0		566041	1					
ANR	566118	Condition	int_abs ( * datap ) & one		566041	0					
ANR	566119	BitAndExpression	int_abs ( * datap ) & one		566041	0		&			
ANR	566120	CallExpression	int_abs ( * datap )		566041	0					
ANR	566121	Callee	int_abs		566041	0					
ANR	566122	Identifier	int_abs		566041	0					
ANR	566123	ArgumentList	* datap		566041	1					
ANR	566124	Argument	* datap		566041	0					
ANR	566125	UnaryOperationExpression	* datap		566041	0					
ANR	566126	UnaryOperator	*		566041	0					
ANR	566127	Identifier	datap		566041	1					
ANR	566128	Identifier	one		566041	1					
ANR	566129	PrimaryExpression	1		566041	1					
ANR	566130	PrimaryExpression	0		566041	2					
ANR	566131	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_mag ( flag ) )"	611:8:16143:16184	566041	2	True				
ANR	566132	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_mag ( flag ) )"		566041	0					
ANR	566133	Callee	mqc_setcurctx		566041	0					
ANR	566134	Identifier	mqc_setcurctx		566041	0					
ANR	566135	ArgumentList	mqc		566041	1					
ANR	566136	Argument	mqc		566041	0					
ANR	566137	Identifier	mqc		566041	0					
ANR	566138	Argument	t1_getctxno_mag ( flag )		566041	1					
ANR	566139	CallExpression	t1_getctxno_mag ( flag )		566041	0					
ANR	566140	Callee	t1_getctxno_mag		566041	0					
ANR	566141	Identifier	t1_getctxno_mag		566041	0					
ANR	566142	ArgumentList	flag		566041	1					
ANR	566143	Argument	flag		566041	0					
ANR	566144	Identifier	flag		566041	0					
ANR	566145	IfStatement	if ( type == T1_TYPE_RAW )		566041	3					
ANR	566146	Condition	type == T1_TYPE_RAW	612:12:16211:16229	566041	0	True				
ANR	566147	EqualityExpression	type == T1_TYPE_RAW		566041	0		==			
ANR	566148	Identifier	type		566041	0					
ANR	566149	Identifier	T1_TYPE_RAW		566041	1					
ANR	566150	CompoundStatement		12:33:450:450	566041	1					
ANR	566151	ExpressionStatement	"mqc_bypass_enc ( mqc , v )"	613:12:16270:16292	566041	0	True				
ANR	566152	CallExpression	"mqc_bypass_enc ( mqc , v )"		566041	0					
ANR	566153	Callee	mqc_bypass_enc		566041	0					
ANR	566154	Identifier	mqc_bypass_enc		566041	0					
ANR	566155	ArgumentList	mqc		566041	1					
ANR	566156	Argument	mqc		566041	0					
ANR	566157	Identifier	mqc		566041	0					
ANR	566158	Argument	v		566041	1					
ANR	566159	Identifier	v		566041	0					
ANR	566160	ElseStatement	else		566041	0					
ANR	566161	CompoundStatement		14:15:527:527	566041	0					
ANR	566162	ExpressionStatement	"mqc_encode ( mqc , v )"	615:12:16323:16341	566041	0	True				
ANR	566163	CallExpression	"mqc_encode ( mqc , v )"		566041	0					
ANR	566164	Callee	mqc_encode		566041	0					
ANR	566165	Identifier	mqc_encode		566041	0					
ANR	566166	ArgumentList	mqc		566041	1					
ANR	566167	Argument	mqc		566041	0					
ANR	566168	Identifier	mqc		566041	0					
ANR	566169	Argument	v		566041	1					
ANR	566170	Identifier	v		566041	0					
ANR	566171	ExpressionStatement	* flagsp |= T1_REFINE	617:8:16361:16381	566041	4	True				
ANR	566172	AssignmentExpression	* flagsp |= T1_REFINE		566041	0		|=			
ANR	566173	UnaryOperationExpression	* flagsp		566041	0					
ANR	566174	UnaryOperator	*		566041	0					
ANR	566175	Identifier	flagsp		566041	1					
ANR	566176	Identifier	T1_REFINE		566041	1					
ANR	566177	ReturnType	static void		566041	1					
ANR	566178	Identifier	t1_enc_refpass_step		566041	2					
ANR	566179	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int bpno , int one , int * nmsedec , char type , int vsc"		566041	3					
ANR	566180	Parameter	opj_t1_t * t1	593:4:15658:15669	566041	0	True				
ANR	566181	ParameterType	opj_t1_t *		566041	0					
ANR	566182	Identifier	t1		566041	1					
ANR	566183	Parameter	flag_t * flagsp	594:4:15676:15689	566041	1	True				
ANR	566184	ParameterType	flag_t *		566041	0					
ANR	566185	Identifier	flagsp		566041	1					
ANR	566186	Parameter	int * datap	595:4:15696:15705	566041	2	True				
ANR	566187	ParameterType	int *		566041	0					
ANR	566188	Identifier	datap		566041	1					
ANR	566189	Parameter	int bpno	596:4:15712:15719	566041	3	True				
ANR	566190	ParameterType	int		566041	0					
ANR	566191	Identifier	bpno		566041	1					
ANR	566192	Parameter	int one	597:4:15726:15732	566041	4	True				
ANR	566193	ParameterType	int		566041	0					
ANR	566194	Identifier	one		566041	1					
ANR	566195	Parameter	int * nmsedec	598:4:15739:15750	566041	5	True				
ANR	566196	ParameterType	int *		566041	0					
ANR	566197	Identifier	nmsedec		566041	1					
ANR	566198	Parameter	char type	599:4:15757:15765	566041	6	True				
ANR	566199	ParameterType	char		566041	0					
ANR	566200	Identifier	type		566041	1					
ANR	566201	Parameter	int vsc	600:4:15772:15778	566041	7	True				
ANR	566202	ParameterType	int		566041	0					
ANR	566203	Identifier	vsc		566041	1					
ANR	566204	CFGEntryNode	ENTRY		566041		True				
ANR	566205	CFGExitNode	EXIT		566041		True				
ANR	566206	Symbol	flag		566041						
ANR	566207	Symbol	T1_SIG_SE		566041						
ANR	566208	Symbol	vsc		566041						
ANR	566209	Symbol	* nmsedec		566041						
ANR	566210	Symbol	t1_getctxno_mag		566041						
ANR	566211	Symbol	type		566041						
ANR	566212	Symbol	T1_TYPE_RAW		566041						
ANR	566213	Symbol	int_abs		566041						
ANR	566214	Symbol	T1_SIG_SW		566041						
ANR	566215	Symbol	t1_getnmsedec_ref		566041						
ANR	566216	Symbol	T1_REFINE		566041						
ANR	566217	Symbol	* flagsp		566041						
ANR	566218	Symbol	* datap		566041						
ANR	566219	Symbol	nmsedec		566041						
ANR	566220	Symbol	* t1		566041						
ANR	566221	Symbol	T1_NMSEDEC_FRACBITS		566041						
ANR	566222	Symbol	bpno		566041						
ANR	566223	Symbol	flagsp		566041						
ANR	566224	Symbol	one		566041						
ANR	566225	Symbol	T1_SIG_S		566041						
ANR	566226	Symbol	T1_VISIT		566041						
ANR	566227	Symbol	datap		566041						
ANR	566228	Symbol	T1_SGN_S		566041						
ANR	566229	Symbol	t1 -> mqc		566041						
ANR	566230	Symbol	v		566041						
ANR	566231	Symbol	T1_SIG		566041						
ANR	566232	Symbol	t1		566041						
ANR	566233	Symbol	mqc		566041						
ANR	566234	Function	t1_dec_refpass_step_raw	621:0:16392:16906							
ANR	566235	FunctionDef	"t1_dec_refpass_step_raw (opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf , int vsc)"		566234	0					
ANR	566236	CompoundStatement		628:0:16537:16906	566234	0					
ANR	566237	IdentifierDeclStatement	"int v , t , flag ;"	629:4:16543:16557	566234	0	True				
ANR	566238	IdentifierDecl	v		566234	0					
ANR	566239	IdentifierDeclType	int		566234	0					
ANR	566240	Identifier	v		566234	1					
ANR	566241	IdentifierDecl	t		566234	1					
ANR	566242	IdentifierDeclType	int		566234	0					
ANR	566243	Identifier	t		566234	1					
ANR	566244	IdentifierDecl	flag		566234	2					
ANR	566245	IdentifierDeclType	int		566234	0					
ANR	566246	Identifier	flag		566234	1					
ANR	566247	IdentifierDeclStatement	opj_raw_t * raw = t1 -> raw ;	631:4:16564:16588	566234	1	True				
ANR	566248	IdentifierDecl	* raw = t1 -> raw		566234	0					
ANR	566249	IdentifierDeclType	opj_raw_t *		566234	0					
ANR	566250	Identifier	raw		566234	1					
ANR	566251	AssignmentExpression	* raw = t1 -> raw		566234	2		=			
ANR	566252	Identifier	raw		566234	0					
ANR	566253	PtrMemberAccess	t1 -> raw		566234	1					
ANR	566254	Identifier	t1		566234	0					
ANR	566255	Identifier	raw		566234	1					
ANR	566256	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	633:4:16617:16715	566234	2	True				
ANR	566257	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		566234	0		=			
ANR	566258	Identifier	flag		566234	0					
ANR	566259	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		566234	1					
ANR	566260	Condition	vsc		566234	0					
ANR	566261	Identifier	vsc		566234	0					
ANR	566262	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		566234	1		&			
ANR	566263	UnaryOperationExpression	* flagsp		566234	0					
ANR	566264	UnaryOperator	*		566234	0					
ANR	566265	Identifier	flagsp		566234	1					
ANR	566266	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		566234	1					
ANR	566267	UnaryOperator	~		566234	0					
ANR	566268	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		566234	1		|			
ANR	566269	Identifier	T1_SIG_S		566234	0					
ANR	566270	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		566234	1		|			
ANR	566271	Identifier	T1_SIG_SE		566234	0					
ANR	566272	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		566234	1		|			
ANR	566273	Identifier	T1_SIG_SW		566234	0					
ANR	566274	Identifier	T1_SGN_S		566234	1					
ANR	566275	UnaryOperationExpression	* flagsp		566234	2					
ANR	566276	UnaryOperator	*		566234	0					
ANR	566277	Identifier	flagsp		566234	1					
ANR	566278	IfStatement	if ( ( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG )		566234	3					
ANR	566279	Condition	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG	635:8:16725:16762	566234	0	True				
ANR	566280	EqualityExpression	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG		566234	0		==			
ANR	566281	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		566234	0		&			
ANR	566282	Identifier	flag		566234	0					
ANR	566283	InclusiveOrExpression	T1_SIG | T1_VISIT		566234	1		|			
ANR	566284	Identifier	T1_SIG		566234	0					
ANR	566285	Identifier	T1_VISIT		566234	1					
ANR	566286	Identifier	T1_SIG		566234	1					
ANR	566287	CompoundStatement		8:48:227:227	566234	1					
ANR	566288	ExpressionStatement	v = raw_decode ( raw )	636:8:16775:16794	566234	0	True				
ANR	566289	AssignmentExpression	v = raw_decode ( raw )		566234	0		=			
ANR	566290	Identifier	v		566234	0					
ANR	566291	CallExpression	raw_decode ( raw )		566234	1					
ANR	566292	Callee	raw_decode		566234	0					
ANR	566293	Identifier	raw_decode		566234	0					
ANR	566294	ArgumentList	raw		566234	1					
ANR	566295	Argument	raw		566234	0					
ANR	566296	Identifier	raw		566234	0					
ANR	566297	ExpressionStatement	t = v ? poshalf : neghalf	637:8:16804:16829	566234	1	True				
ANR	566298	AssignmentExpression	t = v ? poshalf : neghalf		566234	0		=			
ANR	566299	Identifier	t		566234	0					
ANR	566300	ConditionalExpression	v ? poshalf : neghalf		566234	1					
ANR	566301	Condition	v		566234	0					
ANR	566302	Identifier	v		566234	0					
ANR	566303	Identifier	poshalf		566234	1					
ANR	566304	Identifier	neghalf		566234	2					
ANR	566305	ExpressionStatement	* datap += * datap < 0 ? - t : t	638:8:16839:16868	566234	2	True				
ANR	566306	AssignmentExpression	* datap += * datap < 0 ? - t : t		566234	0		+=			
ANR	566307	UnaryOperationExpression	* datap		566234	0					
ANR	566308	UnaryOperator	*		566234	0					
ANR	566309	Identifier	datap		566234	1					
ANR	566310	ConditionalExpression	* datap < 0 ? - t : t		566234	1					
ANR	566311	Condition	* datap < 0		566234	0					
ANR	566312	RelationalExpression	* datap < 0		566234	0		<			
ANR	566313	UnaryOperationExpression	* datap		566234	0					
ANR	566314	UnaryOperator	*		566234	0					
ANR	566315	Identifier	datap		566234	1					
ANR	566316	PrimaryExpression	0		566234	1					
ANR	566317	UnaryOperationExpression	- t		566234	1					
ANR	566318	UnaryOperator	-		566234	0					
ANR	566319	Identifier	t		566234	1					
ANR	566320	Identifier	t		566234	2					
ANR	566321	ExpressionStatement	* flagsp |= T1_REFINE	639:8:16878:16898	566234	3	True				
ANR	566322	AssignmentExpression	* flagsp |= T1_REFINE		566234	0		|=			
ANR	566323	UnaryOperationExpression	* flagsp		566234	0					
ANR	566324	UnaryOperator	*		566234	0					
ANR	566325	Identifier	flagsp		566234	1					
ANR	566326	Identifier	T1_REFINE		566234	1					
ANR	566327	ReturnType	static INLINE void		566234	1					
ANR	566328	Identifier	t1_dec_refpass_step_raw		566234	2					
ANR	566329	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf , int vsc"		566234	3					
ANR	566330	Parameter	opj_t1_t * t1	622:4:16440:16451	566234	0	True				
ANR	566331	ParameterType	opj_t1_t *		566234	0					
ANR	566332	Identifier	t1		566234	1					
ANR	566333	Parameter	flag_t * flagsp	623:4:16458:16471	566234	1	True				
ANR	566334	ParameterType	flag_t *		566234	0					
ANR	566335	Identifier	flagsp		566234	1					
ANR	566336	Parameter	int * datap	624:4:16478:16487	566234	2	True				
ANR	566337	ParameterType	int *		566234	0					
ANR	566338	Identifier	datap		566234	1					
ANR	566339	Parameter	int poshalf	625:4:16494:16504	566234	3	True				
ANR	566340	ParameterType	int		566234	0					
ANR	566341	Identifier	poshalf		566234	1					
ANR	566342	Parameter	int neghalf	626:4:16511:16521	566234	4	True				
ANR	566343	ParameterType	int		566234	0					
ANR	566344	Identifier	neghalf		566234	1					
ANR	566345	Parameter	int vsc	627:4:16528:16534	566234	5	True				
ANR	566346	ParameterType	int		566234	0					
ANR	566347	Identifier	vsc		566234	1					
ANR	566348	CFGEntryNode	ENTRY		566234		True				
ANR	566349	CFGExitNode	EXIT		566234		True				
ANR	566350	Symbol	neghalf		566234						
ANR	566351	Symbol	* t1		566234						
ANR	566352	Symbol	flag		566234						
ANR	566353	Symbol	flagsp		566234						
ANR	566354	Symbol	T1_SIG_SE		566234						
ANR	566355	Symbol	raw_decode		566234						
ANR	566356	Symbol	vsc		566234						
ANR	566357	Symbol	T1_SIG_S		566234						
ANR	566358	Symbol	T1_VISIT		566234						
ANR	566359	Symbol	datap		566234						
ANR	566360	Symbol	raw		566234						
ANR	566361	Symbol	poshalf		566234						
ANR	566362	Symbol	T1_SGN_S		566234						
ANR	566363	Symbol	T1_SIG_SW		566234						
ANR	566364	Symbol	t		566234						
ANR	566365	Symbol	v		566234						
ANR	566366	Symbol	T1_REFINE		566234						
ANR	566367	Symbol	* flagsp		566234						
ANR	566368	Symbol	T1_SIG		566234						
ANR	566369	Symbol	t1 -> raw		566234						
ANR	566370	Symbol	t1		566234						
ANR	566371	Symbol	* datap		566234						
ANR	566372	Function	t1_dec_refpass_step_mqc	643:0:16957:17438							
ANR	566373	FunctionDef	"t1_dec_refpass_step_mqc (opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf)"		566372	0					
ANR	566374	CompoundStatement		649:0:17089:17438	566372	0					
ANR	566375	IdentifierDeclStatement	"int v , t , flag ;"	650:4:17095:17109	566372	0	True				
ANR	566376	IdentifierDecl	v		566372	0					
ANR	566377	IdentifierDeclType	int		566372	0					
ANR	566378	Identifier	v		566372	1					
ANR	566379	IdentifierDecl	t		566372	1					
ANR	566380	IdentifierDeclType	int		566372	0					
ANR	566381	Identifier	t		566372	1					
ANR	566382	IdentifierDecl	flag		566372	2					
ANR	566383	IdentifierDeclType	int		566372	0					
ANR	566384	Identifier	flag		566372	1					
ANR	566385	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	652:4:17116:17140	566372	1	True				
ANR	566386	IdentifierDecl	* mqc = t1 -> mqc		566372	0					
ANR	566387	IdentifierDeclType	opj_mqc_t *		566372	0					
ANR	566388	Identifier	mqc		566372	1					
ANR	566389	AssignmentExpression	* mqc = t1 -> mqc		566372	2		=			
ANR	566390	Identifier	mqc		566372	0					
ANR	566391	PtrMemberAccess	t1 -> mqc		566372	1					
ANR	566392	Identifier	t1		566372	0					
ANR	566393	Identifier	mqc		566372	1					
ANR	566394	ExpressionStatement	flag = * flagsp	654:4:17169:17183	566372	2	True				
ANR	566395	AssignmentExpression	flag = * flagsp		566372	0		=			
ANR	566396	Identifier	flag		566372	0					
ANR	566397	UnaryOperationExpression	* flagsp		566372	1					
ANR	566398	UnaryOperator	*		566372	0					
ANR	566399	Identifier	flagsp		566372	1					
ANR	566400	IfStatement	if ( ( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG )		566372	3					
ANR	566401	Condition	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG	655:8:17193:17230	566372	0	True				
ANR	566402	EqualityExpression	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG		566372	0		==			
ANR	566403	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		566372	0		&			
ANR	566404	Identifier	flag		566372	0					
ANR	566405	InclusiveOrExpression	T1_SIG | T1_VISIT		566372	1		|			
ANR	566406	Identifier	T1_SIG		566372	0					
ANR	566407	Identifier	T1_VISIT		566372	1					
ANR	566408	Identifier	T1_SIG		566372	1					
ANR	566409	CompoundStatement		7:48:143:143	566372	1					
ANR	566410	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_mag ( flag ) )"	656:8:17243:17284	566372	0	True				
ANR	566411	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_mag ( flag ) )"		566372	0					
ANR	566412	Callee	mqc_setcurctx		566372	0					
ANR	566413	Identifier	mqc_setcurctx		566372	0					
ANR	566414	ArgumentList	mqc		566372	1					
ANR	566415	Argument	mqc		566372	0					
ANR	566416	Identifier	mqc		566372	0					
ANR	566417	Argument	t1_getctxno_mag ( flag )		566372	1					
ANR	566418	CallExpression	t1_getctxno_mag ( flag )		566372	0					
ANR	566419	Callee	t1_getctxno_mag		566372	0					
ANR	566420	Identifier	t1_getctxno_mag		566372	0					
ANR	566421	ArgumentList	flag		566372	1					
ANR	566422	Argument	flag		566372	0					
ANR	566423	Identifier	flag		566372	0					
ANR	566424	ExpressionStatement	v = mqc_decode ( mqc )	657:8:17307:17326	566372	1	True				
ANR	566425	AssignmentExpression	v = mqc_decode ( mqc )		566372	0		=			
ANR	566426	Identifier	v		566372	0					
ANR	566427	CallExpression	mqc_decode ( mqc )		566372	1					
ANR	566428	Callee	mqc_decode		566372	0					
ANR	566429	Identifier	mqc_decode		566372	0					
ANR	566430	ArgumentList	mqc		566372	1					
ANR	566431	Argument	mqc		566372	0					
ANR	566432	Identifier	mqc		566372	0					
ANR	566433	ExpressionStatement	t = v ? poshalf : neghalf	658:8:17336:17361	566372	2	True				
ANR	566434	AssignmentExpression	t = v ? poshalf : neghalf		566372	0		=			
ANR	566435	Identifier	t		566372	0					
ANR	566436	ConditionalExpression	v ? poshalf : neghalf		566372	1					
ANR	566437	Condition	v		566372	0					
ANR	566438	Identifier	v		566372	0					
ANR	566439	Identifier	poshalf		566372	1					
ANR	566440	Identifier	neghalf		566372	2					
ANR	566441	ExpressionStatement	* datap += * datap < 0 ? - t : t	659:8:17371:17400	566372	3	True				
ANR	566442	AssignmentExpression	* datap += * datap < 0 ? - t : t		566372	0		+=			
ANR	566443	UnaryOperationExpression	* datap		566372	0					
ANR	566444	UnaryOperator	*		566372	0					
ANR	566445	Identifier	datap		566372	1					
ANR	566446	ConditionalExpression	* datap < 0 ? - t : t		566372	1					
ANR	566447	Condition	* datap < 0		566372	0					
ANR	566448	RelationalExpression	* datap < 0		566372	0		<			
ANR	566449	UnaryOperationExpression	* datap		566372	0					
ANR	566450	UnaryOperator	*		566372	0					
ANR	566451	Identifier	datap		566372	1					
ANR	566452	PrimaryExpression	0		566372	1					
ANR	566453	UnaryOperationExpression	- t		566372	1					
ANR	566454	UnaryOperator	-		566372	0					
ANR	566455	Identifier	t		566372	1					
ANR	566456	Identifier	t		566372	2					
ANR	566457	ExpressionStatement	* flagsp |= T1_REFINE	660:8:17410:17430	566372	4	True				
ANR	566458	AssignmentExpression	* flagsp |= T1_REFINE		566372	0		|=			
ANR	566459	UnaryOperationExpression	* flagsp		566372	0					
ANR	566460	UnaryOperator	*		566372	0					
ANR	566461	Identifier	flagsp		566372	1					
ANR	566462	Identifier	T1_REFINE		566372	1					
ANR	566463	ReturnType	static INLINE void		566372	1					
ANR	566464	Identifier	t1_dec_refpass_step_mqc		566372	2					
ANR	566465	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf"		566372	3					
ANR	566466	Parameter	opj_t1_t * t1	644:4:17005:17016	566372	0	True				
ANR	566467	ParameterType	opj_t1_t *		566372	0					
ANR	566468	Identifier	t1		566372	1					
ANR	566469	Parameter	flag_t * flagsp	645:4:17023:17036	566372	1	True				
ANR	566470	ParameterType	flag_t *		566372	0					
ANR	566471	Identifier	flagsp		566372	1					
ANR	566472	Parameter	int * datap	646:4:17043:17052	566372	2	True				
ANR	566473	ParameterType	int *		566372	0					
ANR	566474	Identifier	datap		566372	1					
ANR	566475	Parameter	int poshalf	647:4:17059:17069	566372	3	True				
ANR	566476	ParameterType	int		566372	0					
ANR	566477	Identifier	poshalf		566372	1					
ANR	566478	Parameter	int neghalf	648:4:17076:17086	566372	4	True				
ANR	566479	ParameterType	int		566372	0					
ANR	566480	Identifier	neghalf		566372	1					
ANR	566481	CFGEntryNode	ENTRY		566372		True				
ANR	566482	CFGExitNode	EXIT		566372		True				
ANR	566483	Symbol	neghalf		566372						
ANR	566484	Symbol	* t1		566372						
ANR	566485	Symbol	flag		566372						
ANR	566486	Symbol	flagsp		566372						
ANR	566487	Symbol	T1_VISIT		566372						
ANR	566488	Symbol	datap		566372						
ANR	566489	Symbol	t1_getctxno_mag		566372						
ANR	566490	Symbol	poshalf		566372						
ANR	566491	Symbol	mqc_decode		566372						
ANR	566492	Symbol	t		566372						
ANR	566493	Symbol	t1 -> mqc		566372						
ANR	566494	Symbol	v		566372						
ANR	566495	Symbol	T1_REFINE		566372						
ANR	566496	Symbol	* flagsp		566372						
ANR	566497	Symbol	T1_SIG		566372						
ANR	566498	Symbol	t1		566372						
ANR	566499	Symbol	mqc		566372						
ANR	566500	Symbol	* datap		566372						
ANR	566501	Function	t1_dec_refpass_step_mqc_vsc	664:0:17489:18071							
ANR	566502	FunctionDef	"t1_dec_refpass_step_mqc_vsc (opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf , int vsc)"		566501	0					
ANR	566503	CompoundStatement		671:0:17638:18071	566501	0					
ANR	566504	IdentifierDeclStatement	"int v , t , flag ;"	672:4:17644:17658	566501	0	True				
ANR	566505	IdentifierDecl	v		566501	0					
ANR	566506	IdentifierDeclType	int		566501	0					
ANR	566507	Identifier	v		566501	1					
ANR	566508	IdentifierDecl	t		566501	1					
ANR	566509	IdentifierDeclType	int		566501	0					
ANR	566510	Identifier	t		566501	1					
ANR	566511	IdentifierDecl	flag		566501	2					
ANR	566512	IdentifierDeclType	int		566501	0					
ANR	566513	Identifier	flag		566501	1					
ANR	566514	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	674:4:17665:17689	566501	1	True				
ANR	566515	IdentifierDecl	* mqc = t1 -> mqc		566501	0					
ANR	566516	IdentifierDeclType	opj_mqc_t *		566501	0					
ANR	566517	Identifier	mqc		566501	1					
ANR	566518	AssignmentExpression	* mqc = t1 -> mqc		566501	2		=			
ANR	566519	Identifier	mqc		566501	0					
ANR	566520	PtrMemberAccess	t1 -> mqc		566501	1					
ANR	566521	Identifier	t1		566501	0					
ANR	566522	Identifier	mqc		566501	1					
ANR	566523	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	676:4:17718:17816	566501	2	True				
ANR	566524	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		566501	0		=			
ANR	566525	Identifier	flag		566501	0					
ANR	566526	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		566501	1					
ANR	566527	Condition	vsc		566501	0					
ANR	566528	Identifier	vsc		566501	0					
ANR	566529	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		566501	1		&			
ANR	566530	UnaryOperationExpression	* flagsp		566501	0					
ANR	566531	UnaryOperator	*		566501	0					
ANR	566532	Identifier	flagsp		566501	1					
ANR	566533	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		566501	1					
ANR	566534	UnaryOperator	~		566501	0					
ANR	566535	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		566501	1		|			
ANR	566536	Identifier	T1_SIG_S		566501	0					
ANR	566537	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		566501	1		|			
ANR	566538	Identifier	T1_SIG_SE		566501	0					
ANR	566539	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		566501	1		|			
ANR	566540	Identifier	T1_SIG_SW		566501	0					
ANR	566541	Identifier	T1_SGN_S		566501	1					
ANR	566542	UnaryOperationExpression	* flagsp		566501	2					
ANR	566543	UnaryOperator	*		566501	0					
ANR	566544	Identifier	flagsp		566501	1					
ANR	566545	IfStatement	if ( ( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG )		566501	3					
ANR	566546	Condition	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG	678:8:17826:17863	566501	0	True				
ANR	566547	EqualityExpression	( flag & ( T1_SIG | T1_VISIT ) ) == T1_SIG		566501	0		==			
ANR	566548	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		566501	0		&			
ANR	566549	Identifier	flag		566501	0					
ANR	566550	InclusiveOrExpression	T1_SIG | T1_VISIT		566501	1		|			
ANR	566551	Identifier	T1_SIG		566501	0					
ANR	566552	Identifier	T1_VISIT		566501	1					
ANR	566553	Identifier	T1_SIG		566501	1					
ANR	566554	CompoundStatement		8:48:227:227	566501	1					
ANR	566555	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_mag ( flag ) )"	679:8:17876:17917	566501	0	True				
ANR	566556	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_mag ( flag ) )"		566501	0					
ANR	566557	Callee	mqc_setcurctx		566501	0					
ANR	566558	Identifier	mqc_setcurctx		566501	0					
ANR	566559	ArgumentList	mqc		566501	1					
ANR	566560	Argument	mqc		566501	0					
ANR	566561	Identifier	mqc		566501	0					
ANR	566562	Argument	t1_getctxno_mag ( flag )		566501	1					
ANR	566563	CallExpression	t1_getctxno_mag ( flag )		566501	0					
ANR	566564	Callee	t1_getctxno_mag		566501	0					
ANR	566565	Identifier	t1_getctxno_mag		566501	0					
ANR	566566	ArgumentList	flag		566501	1					
ANR	566567	Argument	flag		566501	0					
ANR	566568	Identifier	flag		566501	0					
ANR	566569	ExpressionStatement	v = mqc_decode ( mqc )	680:8:17940:17959	566501	1	True				
ANR	566570	AssignmentExpression	v = mqc_decode ( mqc )		566501	0		=			
ANR	566571	Identifier	v		566501	0					
ANR	566572	CallExpression	mqc_decode ( mqc )		566501	1					
ANR	566573	Callee	mqc_decode		566501	0					
ANR	566574	Identifier	mqc_decode		566501	0					
ANR	566575	ArgumentList	mqc		566501	1					
ANR	566576	Argument	mqc		566501	0					
ANR	566577	Identifier	mqc		566501	0					
ANR	566578	ExpressionStatement	t = v ? poshalf : neghalf	681:8:17969:17994	566501	2	True				
ANR	566579	AssignmentExpression	t = v ? poshalf : neghalf		566501	0		=			
ANR	566580	Identifier	t		566501	0					
ANR	566581	ConditionalExpression	v ? poshalf : neghalf		566501	1					
ANR	566582	Condition	v		566501	0					
ANR	566583	Identifier	v		566501	0					
ANR	566584	Identifier	poshalf		566501	1					
ANR	566585	Identifier	neghalf		566501	2					
ANR	566586	ExpressionStatement	* datap += * datap < 0 ? - t : t	682:8:18004:18033	566501	3	True				
ANR	566587	AssignmentExpression	* datap += * datap < 0 ? - t : t		566501	0		+=			
ANR	566588	UnaryOperationExpression	* datap		566501	0					
ANR	566589	UnaryOperator	*		566501	0					
ANR	566590	Identifier	datap		566501	1					
ANR	566591	ConditionalExpression	* datap < 0 ? - t : t		566501	1					
ANR	566592	Condition	* datap < 0		566501	0					
ANR	566593	RelationalExpression	* datap < 0		566501	0		<			
ANR	566594	UnaryOperationExpression	* datap		566501	0					
ANR	566595	UnaryOperator	*		566501	0					
ANR	566596	Identifier	datap		566501	1					
ANR	566597	PrimaryExpression	0		566501	1					
ANR	566598	UnaryOperationExpression	- t		566501	1					
ANR	566599	UnaryOperator	-		566501	0					
ANR	566600	Identifier	t		566501	1					
ANR	566601	Identifier	t		566501	2					
ANR	566602	ExpressionStatement	* flagsp |= T1_REFINE	683:8:18043:18063	566501	4	True				
ANR	566603	AssignmentExpression	* flagsp |= T1_REFINE		566501	0		|=			
ANR	566604	UnaryOperationExpression	* flagsp		566501	0					
ANR	566605	UnaryOperator	*		566501	0					
ANR	566606	Identifier	flagsp		566501	1					
ANR	566607	Identifier	T1_REFINE		566501	1					
ANR	566608	ReturnType	static INLINE void		566501	1					
ANR	566609	Identifier	t1_dec_refpass_step_mqc_vsc		566501	2					
ANR	566610	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int poshalf , int neghalf , int vsc"		566501	3					
ANR	566611	Parameter	opj_t1_t * t1	665:4:17541:17552	566501	0	True				
ANR	566612	ParameterType	opj_t1_t *		566501	0					
ANR	566613	Identifier	t1		566501	1					
ANR	566614	Parameter	flag_t * flagsp	666:4:17559:17572	566501	1	True				
ANR	566615	ParameterType	flag_t *		566501	0					
ANR	566616	Identifier	flagsp		566501	1					
ANR	566617	Parameter	int * datap	667:4:17579:17588	566501	2	True				
ANR	566618	ParameterType	int *		566501	0					
ANR	566619	Identifier	datap		566501	1					
ANR	566620	Parameter	int poshalf	668:4:17595:17605	566501	3	True				
ANR	566621	ParameterType	int		566501	0					
ANR	566622	Identifier	poshalf		566501	1					
ANR	566623	Parameter	int neghalf	669:4:17612:17622	566501	4	True				
ANR	566624	ParameterType	int		566501	0					
ANR	566625	Identifier	neghalf		566501	1					
ANR	566626	Parameter	int vsc	670:4:17629:17635	566501	5	True				
ANR	566627	ParameterType	int		566501	0					
ANR	566628	Identifier	vsc		566501	1					
ANR	566629	CFGEntryNode	ENTRY		566501		True				
ANR	566630	CFGExitNode	EXIT		566501		True				
ANR	566631	Symbol	neghalf		566501						
ANR	566632	Symbol	* t1		566501						
ANR	566633	Symbol	flag		566501						
ANR	566634	Symbol	flagsp		566501						
ANR	566635	Symbol	T1_SIG_SE		566501						
ANR	566636	Symbol	vsc		566501						
ANR	566637	Symbol	T1_SIG_S		566501						
ANR	566638	Symbol	T1_VISIT		566501						
ANR	566639	Symbol	datap		566501						
ANR	566640	Symbol	t1_getctxno_mag		566501						
ANR	566641	Symbol	poshalf		566501						
ANR	566642	Symbol	T1_SGN_S		566501						
ANR	566643	Symbol	mqc_decode		566501						
ANR	566644	Symbol	T1_SIG_SW		566501						
ANR	566645	Symbol	t		566501						
ANR	566646	Symbol	t1 -> mqc		566501						
ANR	566647	Symbol	v		566501						
ANR	566648	Symbol	T1_REFINE		566501						
ANR	566649	Symbol	* flagsp		566501						
ANR	566650	Symbol	T1_SIG		566501						
ANR	566651	Symbol	t1		566501						
ANR	566652	Symbol	mqc		566501						
ANR	566653	Symbol	* datap		566501						
ANR	566654	Function	t1_enc_refpass	687:0:18122:18918							
ANR	566655	FunctionDef	"t1_enc_refpass (opj_t1_t * t1 , int bpno , int * nmsedec , char type , int cblksty)"		566654	0					
ANR	566656	CompoundStatement		693:0:18232:18918	566654	0					
ANR	566657	IdentifierDeclStatement	"int i , j , k , one , vsc ;"	694:4:18238:18259	566654	0	True				
ANR	566658	IdentifierDecl	i		566654	0					
ANR	566659	IdentifierDeclType	int		566654	0					
ANR	566660	Identifier	i		566654	1					
ANR	566661	IdentifierDecl	j		566654	1					
ANR	566662	IdentifierDeclType	int		566654	0					
ANR	566663	Identifier	j		566654	1					
ANR	566664	IdentifierDecl	k		566654	2					
ANR	566665	IdentifierDeclType	int		566654	0					
ANR	566666	Identifier	k		566654	1					
ANR	566667	IdentifierDecl	one		566654	3					
ANR	566668	IdentifierDeclType	int		566654	0					
ANR	566669	Identifier	one		566654	1					
ANR	566670	IdentifierDecl	vsc		566654	4					
ANR	566671	IdentifierDeclType	int		566654	0					
ANR	566672	Identifier	vsc		566654	1					
ANR	566673	ExpressionStatement	* nmsedec = 0	695:4:18265:18277	566654	1	True				
ANR	566674	AssignmentExpression	* nmsedec = 0		566654	0		=			
ANR	566675	UnaryOperationExpression	* nmsedec		566654	0					
ANR	566676	UnaryOperator	*		566654	0					
ANR	566677	Identifier	nmsedec		566654	1					
ANR	566678	PrimaryExpression	0		566654	1					
ANR	566679	ExpressionStatement	one = 1 << ( bpno + T1_NMSEDEC_FRACBITS )	696:4:18283:18322	566654	2	True				
ANR	566680	AssignmentExpression	one = 1 << ( bpno + T1_NMSEDEC_FRACBITS )		566654	0		=			
ANR	566681	Identifier	one		566654	0					
ANR	566682	ShiftExpression	1 << ( bpno + T1_NMSEDEC_FRACBITS )		566654	1		<<			
ANR	566683	PrimaryExpression	1		566654	0					
ANR	566684	AdditiveExpression	bpno + T1_NMSEDEC_FRACBITS		566654	1		+			
ANR	566685	Identifier	bpno		566654	0					
ANR	566686	Identifier	T1_NMSEDEC_FRACBITS		566654	1					
ANR	566687	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		566654	3					
ANR	566688	ForInit	k = 0 ;	697:9:18333:18338	566654	0	True				
ANR	566689	AssignmentExpression	k = 0		566654	0		=			
ANR	566690	Identifier	k		566654	0					
ANR	566691	PrimaryExpression	0		566654	1					
ANR	566692	Condition	k < t1 -> h	697:16:18340:18348	566654	1	True				
ANR	566693	RelationalExpression	k < t1 -> h		566654	0		<			
ANR	566694	Identifier	k		566654	0					
ANR	566695	PtrMemberAccess	t1 -> h		566654	1					
ANR	566696	Identifier	t1		566654	0					
ANR	566697	Identifier	h		566654	1					
ANR	566698	AssignmentExpression	k += 4	697:27:18351:18356	566654	2	True	+=			
ANR	566699	Identifier	k		566654	0					
ANR	566700	PrimaryExpression	4		566654	1					
ANR	566701	CompoundStatement		5:35:126:126	566654	3					
ANR	566702	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		566654	0					
ANR	566703	ForInit	i = 0 ;	698:13:18374:18379	566654	0	True				
ANR	566704	AssignmentExpression	i = 0		566654	0		=			
ANR	566705	Identifier	i		566654	0					
ANR	566706	PrimaryExpression	0		566654	1					
ANR	566707	Condition	i < t1 -> w	698:20:18381:18389	566654	1	True				
ANR	566708	RelationalExpression	i < t1 -> w		566654	0		<			
ANR	566709	Identifier	i		566654	0					
ANR	566710	PtrMemberAccess	t1 -> w		566654	1					
ANR	566711	Identifier	t1		566654	0					
ANR	566712	Identifier	w		566654	1					
ANR	566713	UnaryExpression	++ i	698:31:18392:18394	566654	2	True				
ANR	566714	IncDec	++		566654	0					
ANR	566715	Identifier	i		566654	1					
ANR	566716	CompoundStatement		6:36:164:164	566654	3					
ANR	566717	ForStatement	for ( j = k ; j < k + 4 && j < t1 -> h ; ++ j )		566654	0					
ANR	566718	ForInit	j = k ;	699:17:18416:18421	566654	0	True				
ANR	566719	AssignmentExpression	j = k		566654	0		=			
ANR	566720	Identifier	j		566654	0					
ANR	566721	Identifier	k		566654	1					
ANR	566722	Condition	j < k + 4 && j < t1 -> h	699:24:18423:18444	566654	1	True				
ANR	566723	AndExpression	j < k + 4 && j < t1 -> h		566654	0		&&			
ANR	566724	RelationalExpression	j < k + 4		566654	0		<			
ANR	566725	Identifier	j		566654	0					
ANR	566726	AdditiveExpression	k + 4		566654	1		+			
ANR	566727	Identifier	k		566654	0					
ANR	566728	PrimaryExpression	4		566654	1					
ANR	566729	RelationalExpression	j < t1 -> h		566654	1		<			
ANR	566730	Identifier	j		566654	0					
ANR	566731	PtrMemberAccess	t1 -> h		566654	1					
ANR	566732	Identifier	t1		566654	0					
ANR	566733	Identifier	h		566654	1					
ANR	566734	UnaryExpression	++ j	699:48:18447:18449	566654	2	True				
ANR	566735	IncDec	++		566654	0					
ANR	566736	Identifier	j		566654	1					
ANR	566737	CompoundStatement		7:53:219:219	566654	3					
ANR	566738	ExpressionStatement	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0	700:16:18470:18575	566654	0	True				
ANR	566739	AssignmentExpression	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		566654	0		=			
ANR	566740	Identifier	vsc		566654	0					
ANR	566741	ConditionalExpression	( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		566654	1					
ANR	566742	Condition	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		566654	0					
ANR	566743	AndExpression	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		566654	0		&&			
ANR	566744	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		566654	0		&			
ANR	566745	Identifier	cblksty		566654	0					
ANR	566746	Identifier	J2K_CCP_CBLKSTY_VSC		566654	1					
ANR	566747	OrExpression	j == k + 3 || j == t1 -> h - 1		566654	1		||			
ANR	566748	EqualityExpression	j == k + 3		566654	0		==			
ANR	566749	Identifier	j		566654	0					
ANR	566750	AdditiveExpression	k + 3		566654	1		+			
ANR	566751	Identifier	k		566654	0					
ANR	566752	PrimaryExpression	3		566654	1					
ANR	566753	EqualityExpression	j == t1 -> h - 1		566654	1		==			
ANR	566754	Identifier	j		566654	0					
ANR	566755	AdditiveExpression	t1 -> h - 1		566654	1		-			
ANR	566756	PtrMemberAccess	t1 -> h		566654	0					
ANR	566757	Identifier	t1		566654	0					
ANR	566758	Identifier	h		566654	1					
ANR	566759	PrimaryExpression	1		566654	1					
ANR	566760	PrimaryExpression	1		566654	1					
ANR	566761	PrimaryExpression	0		566654	2					
ANR	566762	ExpressionStatement	"t1_enc_refpass_step ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , bpno , one , nmsedec , type , vsc )"	702:16:18593:18886	566654	1	True				
ANR	566763	CallExpression	"t1_enc_refpass_step ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , bpno , one , nmsedec , type , vsc )"		566654	0					
ANR	566764	Callee	t1_enc_refpass_step		566654	0					
ANR	566765	Identifier	t1_enc_refpass_step		566654	0					
ANR	566766	ArgumentList	t1		566654	1					
ANR	566767	Argument	t1		566654	0					
ANR	566768	Identifier	t1		566654	0					
ANR	566769	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		566654	1					
ANR	566770	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		566654	0					
ANR	566771	UnaryOperator	&		566654	0					
ANR	566772	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		566654	1					
ANR	566773	PtrMemberAccess	t1 -> flags		566654	0					
ANR	566774	Identifier	t1		566654	0					
ANR	566775	Identifier	flags		566654	1					
ANR	566776	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		566654	1		+			
ANR	566777	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		566654	0		*			
ANR	566778	AdditiveExpression	j + 1		566654	0		+			
ANR	566779	Identifier	j		566654	0					
ANR	566780	PrimaryExpression	1		566654	1					
ANR	566781	PtrMemberAccess	t1 -> flags_stride		566654	1					
ANR	566782	Identifier	t1		566654	0					
ANR	566783	Identifier	flags_stride		566654	1					
ANR	566784	AdditiveExpression	i + 1		566654	1		+			
ANR	566785	Identifier	i		566654	0					
ANR	566786	PrimaryExpression	1		566654	1					
ANR	566787	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		566654	2					
ANR	566788	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		566654	0					
ANR	566789	UnaryOperator	&		566654	0					
ANR	566790	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		566654	1					
ANR	566791	PtrMemberAccess	t1 -> data		566654	0					
ANR	566792	Identifier	t1		566654	0					
ANR	566793	Identifier	data		566654	1					
ANR	566794	AdditiveExpression	( j * t1 -> w ) + i		566654	1		+			
ANR	566795	MultiplicativeExpression	j * t1 -> w		566654	0		*			
ANR	566796	Identifier	j		566654	0					
ANR	566797	PtrMemberAccess	t1 -> w		566654	1					
ANR	566798	Identifier	t1		566654	0					
ANR	566799	Identifier	w		566654	1					
ANR	566800	Identifier	i		566654	1					
ANR	566801	Argument	bpno		566654	3					
ANR	566802	Identifier	bpno		566654	0					
ANR	566803	Argument	one		566654	4					
ANR	566804	Identifier	one		566654	0					
ANR	566805	Argument	nmsedec		566654	5					
ANR	566806	Identifier	nmsedec		566654	0					
ANR	566807	Argument	type		566654	6					
ANR	566808	Identifier	type		566654	0					
ANR	566809	Argument	vsc		566654	7					
ANR	566810	Identifier	vsc		566654	0					
ANR	566811	ReturnType	static void		566654	1					
ANR	566812	Identifier	t1_enc_refpass		566654	2					
ANR	566813	ParameterList	"opj_t1_t * t1 , int bpno , int * nmsedec , char type , int cblksty"		566654	3					
ANR	566814	Parameter	opj_t1_t * t1	688:4:18154:18165	566654	0	True				
ANR	566815	ParameterType	opj_t1_t *		566654	0					
ANR	566816	Identifier	t1		566654	1					
ANR	566817	Parameter	int bpno	689:4:18172:18179	566654	1	True				
ANR	566818	ParameterType	int		566654	0					
ANR	566819	Identifier	bpno		566654	1					
ANR	566820	Parameter	int * nmsedec	690:4:18186:18197	566654	2	True				
ANR	566821	ParameterType	int *		566654	0					
ANR	566822	Identifier	nmsedec		566654	1					
ANR	566823	Parameter	char type	691:4:18204:18212	566654	3	True				
ANR	566824	ParameterType	char		566654	0					
ANR	566825	Identifier	type		566654	1					
ANR	566826	Parameter	int cblksty	692:4:18219:18229	566654	4	True				
ANR	566827	ParameterType	int		566654	0					
ANR	566828	Identifier	cblksty		566654	1					
ANR	566829	CFGEntryNode	ENTRY		566654		True				
ANR	566830	CFGExitNode	EXIT		566654		True				
ANR	566831	Symbol	nmsedec		566654						
ANR	566832	Symbol	T1_NMSEDEC_FRACBITS		566654						
ANR	566833	Symbol	* t1		566654						
ANR	566834	Symbol	bpno		566654						
ANR	566835	Symbol	t1 -> w		566654						
ANR	566836	Symbol	t1 -> flags		566654						
ANR	566837	Symbol	one		566654						
ANR	566838	Symbol	vsc		566654						
ANR	566839	Symbol	i		566654						
ANR	566840	Symbol	j		566654						
ANR	566841	Symbol	* nmsedec		566654						
ANR	566842	Symbol	J2K_CCP_CBLKSTY_VSC		566654						
ANR	566843	Symbol	t1 -> data		566654						
ANR	566844	Symbol	k		566654						
ANR	566845	Symbol	type		566654						
ANR	566846	Symbol	cblksty		566654						
ANR	566847	Symbol	t1 -> flags_stride		566654						
ANR	566848	Symbol	t1 -> h		566654						
ANR	566849	Symbol	t1		566654						
ANR	566850	Function	t1_dec_refpass_raw	716:0:18921:19692							
ANR	566851	FunctionDef	"t1_dec_refpass_raw (opj_t1_t * t1 , int bpno , int cblksty)"		566850	0					
ANR	566852	CompoundStatement		720:0:19002:19692	566850	0					
ANR	566853	IdentifierDeclStatement	"int i , j , k , one , poshalf , neghalf ;"	721:4:19008:19042	566850	0	True				
ANR	566854	IdentifierDecl	i		566850	0					
ANR	566855	IdentifierDeclType	int		566850	0					
ANR	566856	Identifier	i		566850	1					
ANR	566857	IdentifierDecl	j		566850	1					
ANR	566858	IdentifierDeclType	int		566850	0					
ANR	566859	Identifier	j		566850	1					
ANR	566860	IdentifierDecl	k		566850	2					
ANR	566861	IdentifierDeclType	int		566850	0					
ANR	566862	Identifier	k		566850	1					
ANR	566863	IdentifierDecl	one		566850	3					
ANR	566864	IdentifierDeclType	int		566850	0					
ANR	566865	Identifier	one		566850	1					
ANR	566866	IdentifierDecl	poshalf		566850	4					
ANR	566867	IdentifierDeclType	int		566850	0					
ANR	566868	Identifier	poshalf		566850	1					
ANR	566869	IdentifierDecl	neghalf		566850	5					
ANR	566870	IdentifierDeclType	int		566850	0					
ANR	566871	Identifier	neghalf		566850	1					
ANR	566872	IdentifierDeclStatement	int vsc ;	722:4:19048:19055	566850	1	True				
ANR	566873	IdentifierDecl	vsc		566850	0					
ANR	566874	IdentifierDeclType	int		566850	0					
ANR	566875	Identifier	vsc		566850	1					
ANR	566876	ExpressionStatement	one = 1 << bpno	723:4:19061:19076	566850	2	True				
ANR	566877	AssignmentExpression	one = 1 << bpno		566850	0		=			
ANR	566878	Identifier	one		566850	0					
ANR	566879	ShiftExpression	1 << bpno		566850	1		<<			
ANR	566880	PrimaryExpression	1		566850	0					
ANR	566881	Identifier	bpno		566850	1					
ANR	566882	ExpressionStatement	poshalf = one >> 1	724:4:19082:19100	566850	3	True				
ANR	566883	AssignmentExpression	poshalf = one >> 1		566850	0		=			
ANR	566884	Identifier	poshalf		566850	0					
ANR	566885	ShiftExpression	one >> 1		566850	1		>>			
ANR	566886	Identifier	one		566850	0					
ANR	566887	PrimaryExpression	1		566850	1					
ANR	566888	ExpressionStatement	neghalf = bpno > 0 ? - poshalf : - 1	725:4:19106:19140	566850	4	True				
ANR	566889	AssignmentExpression	neghalf = bpno > 0 ? - poshalf : - 1		566850	0		=			
ANR	566890	Identifier	neghalf		566850	0					
ANR	566891	ConditionalExpression	bpno > 0 ? - poshalf : - 1		566850	1					
ANR	566892	Condition	bpno > 0		566850	0					
ANR	566893	RelationalExpression	bpno > 0		566850	0		>			
ANR	566894	Identifier	bpno		566850	0					
ANR	566895	PrimaryExpression	0		566850	1					
ANR	566896	UnaryOperationExpression	- poshalf		566850	1					
ANR	566897	UnaryOperator	-		566850	0					
ANR	566898	Identifier	poshalf		566850	1					
ANR	566899	UnaryOperationExpression	- 1		566850	2					
ANR	566900	UnaryOperator	-		566850	0					
ANR	566901	PrimaryExpression	1		566850	1					
ANR	566902	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		566850	5					
ANR	566903	ForInit	k = 0 ;	726:9:19151:19156	566850	0	True				
ANR	566904	AssignmentExpression	k = 0		566850	0		=			
ANR	566905	Identifier	k		566850	0					
ANR	566906	PrimaryExpression	0		566850	1					
ANR	566907	Condition	k < t1 -> h	726:16:19158:19166	566850	1	True				
ANR	566908	RelationalExpression	k < t1 -> h		566850	0		<			
ANR	566909	Identifier	k		566850	0					
ANR	566910	PtrMemberAccess	t1 -> h		566850	1					
ANR	566911	Identifier	t1		566850	0					
ANR	566912	Identifier	h		566850	1					
ANR	566913	AssignmentExpression	k += 4	726:27:19169:19174	566850	2	True	+=			
ANR	566914	Identifier	k		566850	0					
ANR	566915	PrimaryExpression	4		566850	1					
ANR	566916	CompoundStatement		7:35:174:174	566850	3					
ANR	566917	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		566850	0					
ANR	566918	ForInit	i = 0 ;	727:13:19192:19197	566850	0	True				
ANR	566919	AssignmentExpression	i = 0		566850	0		=			
ANR	566920	Identifier	i		566850	0					
ANR	566921	PrimaryExpression	0		566850	1					
ANR	566922	Condition	i < t1 -> w	727:20:19199:19207	566850	1	True				
ANR	566923	RelationalExpression	i < t1 -> w		566850	0		<			
ANR	566924	Identifier	i		566850	0					
ANR	566925	PtrMemberAccess	t1 -> w		566850	1					
ANR	566926	Identifier	t1		566850	0					
ANR	566927	Identifier	w		566850	1					
ANR	566928	UnaryExpression	++ i	727:31:19210:19212	566850	2	True				
ANR	566929	IncDec	++		566850	0					
ANR	566930	Identifier	i		566850	1					
ANR	566931	CompoundStatement		8:36:212:212	566850	3					
ANR	566932	ForStatement	for ( j = k ; j < k + 4 && j < t1 -> h ; ++ j )		566850	0					
ANR	566933	ForInit	j = k ;	728:17:19234:19239	566850	0	True				
ANR	566934	AssignmentExpression	j = k		566850	0		=			
ANR	566935	Identifier	j		566850	0					
ANR	566936	Identifier	k		566850	1					
ANR	566937	Condition	j < k + 4 && j < t1 -> h	728:24:19241:19262	566850	1	True				
ANR	566938	AndExpression	j < k + 4 && j < t1 -> h		566850	0		&&			
ANR	566939	RelationalExpression	j < k + 4		566850	0		<			
ANR	566940	Identifier	j		566850	0					
ANR	566941	AdditiveExpression	k + 4		566850	1		+			
ANR	566942	Identifier	k		566850	0					
ANR	566943	PrimaryExpression	4		566850	1					
ANR	566944	RelationalExpression	j < t1 -> h		566850	1		<			
ANR	566945	Identifier	j		566850	0					
ANR	566946	PtrMemberAccess	t1 -> h		566850	1					
ANR	566947	Identifier	t1		566850	0					
ANR	566948	Identifier	h		566850	1					
ANR	566949	UnaryExpression	++ j	728:48:19265:19267	566850	2	True				
ANR	566950	IncDec	++		566850	0					
ANR	566951	Identifier	j		566850	1					
ANR	566952	CompoundStatement		9:53:267:267	566850	3					
ANR	566953	ExpressionStatement	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0	729:16:19288:19393	566850	0	True				
ANR	566954	AssignmentExpression	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		566850	0		=			
ANR	566955	Identifier	vsc		566850	0					
ANR	566956	ConditionalExpression	( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		566850	1					
ANR	566957	Condition	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		566850	0					
ANR	566958	AndExpression	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		566850	0		&&			
ANR	566959	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		566850	0		&			
ANR	566960	Identifier	cblksty		566850	0					
ANR	566961	Identifier	J2K_CCP_CBLKSTY_VSC		566850	1					
ANR	566962	OrExpression	j == k + 3 || j == t1 -> h - 1		566850	1		||			
ANR	566963	EqualityExpression	j == k + 3		566850	0		==			
ANR	566964	Identifier	j		566850	0					
ANR	566965	AdditiveExpression	k + 3		566850	1		+			
ANR	566966	Identifier	k		566850	0					
ANR	566967	PrimaryExpression	3		566850	1					
ANR	566968	EqualityExpression	j == t1 -> h - 1		566850	1		==			
ANR	566969	Identifier	j		566850	0					
ANR	566970	AdditiveExpression	t1 -> h - 1		566850	1		-			
ANR	566971	PtrMemberAccess	t1 -> h		566850	0					
ANR	566972	Identifier	t1		566850	0					
ANR	566973	Identifier	h		566850	1					
ANR	566974	PrimaryExpression	1		566850	1					
ANR	566975	PrimaryExpression	1		566850	1					
ANR	566976	PrimaryExpression	0		566850	2					
ANR	566977	ExpressionStatement	"t1_dec_refpass_step_raw ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , poshalf , neghalf , vsc )"	731:16:19411:19660	566850	1	True				
ANR	566978	CallExpression	"t1_dec_refpass_step_raw ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , poshalf , neghalf , vsc )"		566850	0					
ANR	566979	Callee	t1_dec_refpass_step_raw		566850	0					
ANR	566980	Identifier	t1_dec_refpass_step_raw		566850	0					
ANR	566981	ArgumentList	t1		566850	1					
ANR	566982	Argument	t1		566850	0					
ANR	566983	Identifier	t1		566850	0					
ANR	566984	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		566850	1					
ANR	566985	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		566850	0					
ANR	566986	UnaryOperator	&		566850	0					
ANR	566987	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		566850	1					
ANR	566988	PtrMemberAccess	t1 -> flags		566850	0					
ANR	566989	Identifier	t1		566850	0					
ANR	566990	Identifier	flags		566850	1					
ANR	566991	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		566850	1		+			
ANR	566992	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		566850	0		*			
ANR	566993	AdditiveExpression	j + 1		566850	0		+			
ANR	566994	Identifier	j		566850	0					
ANR	566995	PrimaryExpression	1		566850	1					
ANR	566996	PtrMemberAccess	t1 -> flags_stride		566850	1					
ANR	566997	Identifier	t1		566850	0					
ANR	566998	Identifier	flags_stride		566850	1					
ANR	566999	AdditiveExpression	i + 1		566850	1		+			
ANR	567000	Identifier	i		566850	0					
ANR	567001	PrimaryExpression	1		566850	1					
ANR	567002	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		566850	2					
ANR	567003	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		566850	0					
ANR	567004	UnaryOperator	&		566850	0					
ANR	567005	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		566850	1					
ANR	567006	PtrMemberAccess	t1 -> data		566850	0					
ANR	567007	Identifier	t1		566850	0					
ANR	567008	Identifier	data		566850	1					
ANR	567009	AdditiveExpression	( j * t1 -> w ) + i		566850	1		+			
ANR	567010	MultiplicativeExpression	j * t1 -> w		566850	0		*			
ANR	567011	Identifier	j		566850	0					
ANR	567012	PtrMemberAccess	t1 -> w		566850	1					
ANR	567013	Identifier	t1		566850	0					
ANR	567014	Identifier	w		566850	1					
ANR	567015	Identifier	i		566850	1					
ANR	567016	Argument	poshalf		566850	3					
ANR	567017	Identifier	poshalf		566850	0					
ANR	567018	Argument	neghalf		566850	4					
ANR	567019	Identifier	neghalf		566850	0					
ANR	567020	Argument	vsc		566850	5					
ANR	567021	Identifier	vsc		566850	0					
ANR	567022	ReturnType	static void		566850	1					
ANR	567023	Identifier	t1_dec_refpass_raw		566850	2					
ANR	567024	ParameterList	"opj_t1_t * t1 , int bpno , int cblksty"		566850	3					
ANR	567025	Parameter	opj_t1_t * t1	717:4:18957:18968	566850	0	True				
ANR	567026	ParameterType	opj_t1_t *		566850	0					
ANR	567027	Identifier	t1		566850	1					
ANR	567028	Parameter	int bpno	718:4:18975:18982	566850	1	True				
ANR	567029	ParameterType	int		566850	0					
ANR	567030	Identifier	bpno		566850	1					
ANR	567031	Parameter	int cblksty	719:4:18989:18999	566850	2	True				
ANR	567032	ParameterType	int		566850	0					
ANR	567033	Identifier	cblksty		566850	1					
ANR	567034	CFGEntryNode	ENTRY		566850		True				
ANR	567035	CFGExitNode	EXIT		566850		True				
ANR	567036	Symbol	neghalf		566850						
ANR	567037	Symbol	* t1		566850						
ANR	567038	Symbol	bpno		566850						
ANR	567039	Symbol	t1 -> w		566850						
ANR	567040	Symbol	t1 -> flags		566850						
ANR	567041	Symbol	one		566850						
ANR	567042	Symbol	vsc		566850						
ANR	567043	Symbol	i		566850						
ANR	567044	Symbol	j		566850						
ANR	567045	Symbol	J2K_CCP_CBLKSTY_VSC		566850						
ANR	567046	Symbol	t1 -> data		566850						
ANR	567047	Symbol	k		566850						
ANR	567048	Symbol	poshalf		566850						
ANR	567049	Symbol	cblksty		566850						
ANR	567050	Symbol	t1 -> flags_stride		566850						
ANR	567051	Symbol	t1 -> h		566850						
ANR	567052	Symbol	t1		566850						
ANR	567053	Function	t1_dec_refpass_mqc	743:0:19742:21108							
ANR	567054	FunctionDef	"t1_dec_refpass_mqc (opj_t1_t * t1 , int bpno)"		567053	0					
ANR	567055	CompoundStatement		746:0:19806:21108	567053	0					
ANR	567056	IdentifierDeclStatement	"int i , j , k , one , poshalf , neghalf ;"	747:4:19812:19846	567053	0	True				
ANR	567057	IdentifierDecl	i		567053	0					
ANR	567058	IdentifierDeclType	int		567053	0					
ANR	567059	Identifier	i		567053	1					
ANR	567060	IdentifierDecl	j		567053	1					
ANR	567061	IdentifierDeclType	int		567053	0					
ANR	567062	Identifier	j		567053	1					
ANR	567063	IdentifierDecl	k		567053	2					
ANR	567064	IdentifierDeclType	int		567053	0					
ANR	567065	Identifier	k		567053	1					
ANR	567066	IdentifierDecl	one		567053	3					
ANR	567067	IdentifierDeclType	int		567053	0					
ANR	567068	Identifier	one		567053	1					
ANR	567069	IdentifierDecl	poshalf		567053	4					
ANR	567070	IdentifierDeclType	int		567053	0					
ANR	567071	Identifier	poshalf		567053	1					
ANR	567072	IdentifierDecl	neghalf		567053	5					
ANR	567073	IdentifierDeclType	int		567053	0					
ANR	567074	Identifier	neghalf		567053	1					
ANR	567075	IdentifierDeclStatement	int * data1 = t1 -> data ;	748:4:19852:19873	567053	1	True				
ANR	567076	IdentifierDecl	* data1 = t1 -> data		567053	0					
ANR	567077	IdentifierDeclType	int *		567053	0					
ANR	567078	Identifier	data1		567053	1					
ANR	567079	AssignmentExpression	* data1 = t1 -> data		567053	2		=			
ANR	567080	Identifier	data1		567053	0					
ANR	567081	PtrMemberAccess	t1 -> data		567053	1					
ANR	567082	Identifier	t1		567053	0					
ANR	567083	Identifier	data		567053	1					
ANR	567084	IdentifierDeclStatement	flag_t * flags1 = & t1 -> flags [ 1 ] ;	749:4:19879:19909	567053	2	True				
ANR	567085	IdentifierDecl	* flags1 = & t1 -> flags [ 1 ]		567053	0					
ANR	567086	IdentifierDeclType	flag_t *		567053	0					
ANR	567087	Identifier	flags1		567053	1					
ANR	567088	AssignmentExpression	* flags1 = & t1 -> flags [ 1 ]		567053	2		=			
ANR	567089	Identifier	flags1		567053	0					
ANR	567090	UnaryOperationExpression	& t1 -> flags [ 1 ]		567053	1					
ANR	567091	UnaryOperator	&		567053	0					
ANR	567092	ArrayIndexing	t1 -> flags [ 1 ]		567053	1					
ANR	567093	PtrMemberAccess	t1 -> flags		567053	0					
ANR	567094	Identifier	t1		567053	0					
ANR	567095	Identifier	flags		567053	1					
ANR	567096	PrimaryExpression	1		567053	1					
ANR	567097	ExpressionStatement	one = 1 << bpno	750:4:19915:19930	567053	3	True				
ANR	567098	AssignmentExpression	one = 1 << bpno		567053	0		=			
ANR	567099	Identifier	one		567053	0					
ANR	567100	ShiftExpression	1 << bpno		567053	1		<<			
ANR	567101	PrimaryExpression	1		567053	0					
ANR	567102	Identifier	bpno		567053	1					
ANR	567103	ExpressionStatement	poshalf = one >> 1	751:4:19936:19954	567053	4	True				
ANR	567104	AssignmentExpression	poshalf = one >> 1		567053	0		=			
ANR	567105	Identifier	poshalf		567053	0					
ANR	567106	ShiftExpression	one >> 1		567053	1		>>			
ANR	567107	Identifier	one		567053	0					
ANR	567108	PrimaryExpression	1		567053	1					
ANR	567109	ExpressionStatement	neghalf = bpno > 0 ? - poshalf : - 1	752:4:19960:19994	567053	5	True				
ANR	567110	AssignmentExpression	neghalf = bpno > 0 ? - poshalf : - 1		567053	0		=			
ANR	567111	Identifier	neghalf		567053	0					
ANR	567112	ConditionalExpression	bpno > 0 ? - poshalf : - 1		567053	1					
ANR	567113	Condition	bpno > 0		567053	0					
ANR	567114	RelationalExpression	bpno > 0		567053	0		>			
ANR	567115	Identifier	bpno		567053	0					
ANR	567116	PrimaryExpression	0		567053	1					
ANR	567117	UnaryOperationExpression	- poshalf		567053	1					
ANR	567118	UnaryOperator	-		567053	0					
ANR	567119	Identifier	poshalf		567053	1					
ANR	567120	UnaryOperationExpression	- 1		567053	2					
ANR	567121	UnaryOperator	-		567053	0					
ANR	567122	PrimaryExpression	1		567053	1					
ANR	567123	ForStatement	for ( k = 0 ; k < ( t1 -> h & ~3 ) ; k += 4 )		567053	6					
ANR	567124	ForInit	k = 0 ;	753:9:20005:20010	567053	0	True				
ANR	567125	AssignmentExpression	k = 0		567053	0		=			
ANR	567126	Identifier	k		567053	0					
ANR	567127	PrimaryExpression	0		567053	1					
ANR	567128	Condition	k < ( t1 -> h & ~3 )	753:16:20012:20027	567053	1	True				
ANR	567129	RelationalExpression	k < ( t1 -> h & ~3 )		567053	0		<			
ANR	567130	Identifier	k		567053	0					
ANR	567131	BitAndExpression	t1 -> h & ~3		567053	1		&			
ANR	567132	PtrMemberAccess	t1 -> h		567053	0					
ANR	567133	Identifier	t1		567053	0					
ANR	567134	Identifier	h		567053	1					
ANR	567135	Identifier	~3		567053	1					
ANR	567136	AssignmentExpression	k += 4	753:34:20030:20035	567053	2	True	+=			
ANR	567137	Identifier	k		567053	0					
ANR	567138	PrimaryExpression	4		567053	1					
ANR	567139	CompoundStatement		8:42:231:231	567053	3					
ANR	567140	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		567053	0					
ANR	567141	ForInit	i = 0 ;	754:13:20053:20058	567053	0	True				
ANR	567142	AssignmentExpression	i = 0		567053	0		=			
ANR	567143	Identifier	i		567053	0					
ANR	567144	PrimaryExpression	0		567053	1					
ANR	567145	Condition	i < t1 -> w	754:20:20060:20068	567053	1	True				
ANR	567146	RelationalExpression	i < t1 -> w		567053	0		<			
ANR	567147	Identifier	i		567053	0					
ANR	567148	PtrMemberAccess	t1 -> w		567053	1					
ANR	567149	Identifier	t1		567053	0					
ANR	567150	Identifier	w		567053	1					
ANR	567151	UnaryExpression	++ i	754:31:20071:20073	567053	2	True				
ANR	567152	IncDec	++		567053	0					
ANR	567153	Identifier	i		567053	1					
ANR	567154	CompoundStatement		11:12:319:346	567053	3					
ANR	567155	IdentifierDeclStatement	int * data2 = data1 + i ;	755:12:20090:20112	567053	0	True				
ANR	567156	IdentifierDecl	* data2 = data1 + i		567053	0					
ANR	567157	IdentifierDeclType	int *		567053	0					
ANR	567158	Identifier	data2		567053	1					
ANR	567159	AssignmentExpression	* data2 = data1 + i		567053	2		=			
ANR	567160	Identifier	data2		567053	0					
ANR	567161	AdditiveExpression	data1 + i		567053	1		+			
ANR	567162	Identifier	data1		567053	0					
ANR	567163	Identifier	i		567053	1					
ANR	567164	IdentifierDeclStatement	flag_t * flags2 = flags1 + i ;	756:12:20126:20153	567053	1	True				
ANR	567165	IdentifierDecl	* flags2 = flags1 + i		567053	0					
ANR	567166	IdentifierDeclType	flag_t *		567053	0					
ANR	567167	Identifier	flags2		567053	1					
ANR	567168	AssignmentExpression	* flags2 = flags1 + i		567053	2		=			
ANR	567169	Identifier	flags2		567053	0					
ANR	567170	AdditiveExpression	flags1 + i		567053	1		+			
ANR	567171	Identifier	flags1		567053	0					
ANR	567172	Identifier	i		567053	1					
ANR	567173	ExpressionStatement	flags2 += t1 -> flags_stride	757:12:20167:20193	567053	2	True				
ANR	567174	AssignmentExpression	flags2 += t1 -> flags_stride		567053	0		+=			
ANR	567175	Identifier	flags2		567053	0					
ANR	567176	PtrMemberAccess	t1 -> flags_stride		567053	1					
ANR	567177	Identifier	t1		567053	0					
ANR	567178	Identifier	flags_stride		567053	1					
ANR	567179	ExpressionStatement	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"	758:12:20207:20267	567053	3	True				
ANR	567180	CallExpression	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"		567053	0					
ANR	567181	Callee	t1_dec_refpass_step_mqc		567053	0					
ANR	567182	Identifier	t1_dec_refpass_step_mqc		567053	0					
ANR	567183	ArgumentList	t1		567053	1					
ANR	567184	Argument	t1		567053	0					
ANR	567185	Identifier	t1		567053	0					
ANR	567186	Argument	flags2		567053	1					
ANR	567187	Identifier	flags2		567053	0					
ANR	567188	Argument	data2		567053	2					
ANR	567189	Identifier	data2		567053	0					
ANR	567190	Argument	poshalf		567053	3					
ANR	567191	Identifier	poshalf		567053	0					
ANR	567192	Argument	neghalf		567053	4					
ANR	567193	Identifier	neghalf		567053	0					
ANR	567194	ExpressionStatement	data2 += t1 -> w	759:12:20281:20295	567053	4	True				
ANR	567195	AssignmentExpression	data2 += t1 -> w		567053	0		+=			
ANR	567196	Identifier	data2		567053	0					
ANR	567197	PtrMemberAccess	t1 -> w		567053	1					
ANR	567198	Identifier	t1		567053	0					
ANR	567199	Identifier	w		567053	1					
ANR	567200	ExpressionStatement	flags2 += t1 -> flags_stride	760:12:20309:20335	567053	5	True				
ANR	567201	AssignmentExpression	flags2 += t1 -> flags_stride		567053	0		+=			
ANR	567202	Identifier	flags2		567053	0					
ANR	567203	PtrMemberAccess	t1 -> flags_stride		567053	1					
ANR	567204	Identifier	t1		567053	0					
ANR	567205	Identifier	flags_stride		567053	1					
ANR	567206	ExpressionStatement	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"	761:12:20349:20409	567053	6	True				
ANR	567207	CallExpression	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"		567053	0					
ANR	567208	Callee	t1_dec_refpass_step_mqc		567053	0					
ANR	567209	Identifier	t1_dec_refpass_step_mqc		567053	0					
ANR	567210	ArgumentList	t1		567053	1					
ANR	567211	Argument	t1		567053	0					
ANR	567212	Identifier	t1		567053	0					
ANR	567213	Argument	flags2		567053	1					
ANR	567214	Identifier	flags2		567053	0					
ANR	567215	Argument	data2		567053	2					
ANR	567216	Identifier	data2		567053	0					
ANR	567217	Argument	poshalf		567053	3					
ANR	567218	Identifier	poshalf		567053	0					
ANR	567219	Argument	neghalf		567053	4					
ANR	567220	Identifier	neghalf		567053	0					
ANR	567221	ExpressionStatement	data2 += t1 -> w	762:12:20423:20437	567053	7	True				
ANR	567222	AssignmentExpression	data2 += t1 -> w		567053	0		+=			
ANR	567223	Identifier	data2		567053	0					
ANR	567224	PtrMemberAccess	t1 -> w		567053	1					
ANR	567225	Identifier	t1		567053	0					
ANR	567226	Identifier	w		567053	1					
ANR	567227	ExpressionStatement	flags2 += t1 -> flags_stride	763:12:20451:20477	567053	8	True				
ANR	567228	AssignmentExpression	flags2 += t1 -> flags_stride		567053	0		+=			
ANR	567229	Identifier	flags2		567053	0					
ANR	567230	PtrMemberAccess	t1 -> flags_stride		567053	1					
ANR	567231	Identifier	t1		567053	0					
ANR	567232	Identifier	flags_stride		567053	1					
ANR	567233	ExpressionStatement	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"	764:12:20491:20551	567053	9	True				
ANR	567234	CallExpression	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"		567053	0					
ANR	567235	Callee	t1_dec_refpass_step_mqc		567053	0					
ANR	567236	Identifier	t1_dec_refpass_step_mqc		567053	0					
ANR	567237	ArgumentList	t1		567053	1					
ANR	567238	Argument	t1		567053	0					
ANR	567239	Identifier	t1		567053	0					
ANR	567240	Argument	flags2		567053	1					
ANR	567241	Identifier	flags2		567053	0					
ANR	567242	Argument	data2		567053	2					
ANR	567243	Identifier	data2		567053	0					
ANR	567244	Argument	poshalf		567053	3					
ANR	567245	Identifier	poshalf		567053	0					
ANR	567246	Argument	neghalf		567053	4					
ANR	567247	Identifier	neghalf		567053	0					
ANR	567248	ExpressionStatement	data2 += t1 -> w	765:12:20565:20579	567053	10	True				
ANR	567249	AssignmentExpression	data2 += t1 -> w		567053	0		+=			
ANR	567250	Identifier	data2		567053	0					
ANR	567251	PtrMemberAccess	t1 -> w		567053	1					
ANR	567252	Identifier	t1		567053	0					
ANR	567253	Identifier	w		567053	1					
ANR	567254	ExpressionStatement	flags2 += t1 -> flags_stride	766:12:20593:20619	567053	11	True				
ANR	567255	AssignmentExpression	flags2 += t1 -> flags_stride		567053	0		+=			
ANR	567256	Identifier	flags2		567053	0					
ANR	567257	PtrMemberAccess	t1 -> flags_stride		567053	1					
ANR	567258	Identifier	t1		567053	0					
ANR	567259	Identifier	flags_stride		567053	1					
ANR	567260	ExpressionStatement	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"	767:12:20633:20693	567053	12	True				
ANR	567261	CallExpression	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"		567053	0					
ANR	567262	Callee	t1_dec_refpass_step_mqc		567053	0					
ANR	567263	Identifier	t1_dec_refpass_step_mqc		567053	0					
ANR	567264	ArgumentList	t1		567053	1					
ANR	567265	Argument	t1		567053	0					
ANR	567266	Identifier	t1		567053	0					
ANR	567267	Argument	flags2		567053	1					
ANR	567268	Identifier	flags2		567053	0					
ANR	567269	Argument	data2		567053	2					
ANR	567270	Identifier	data2		567053	0					
ANR	567271	Argument	poshalf		567053	3					
ANR	567272	Identifier	poshalf		567053	0					
ANR	567273	Argument	neghalf		567053	4					
ANR	567274	Identifier	neghalf		567053	0					
ANR	567275	ExpressionStatement	data2 += t1 -> w	768:12:20707:20721	567053	13	True				
ANR	567276	AssignmentExpression	data2 += t1 -> w		567053	0		+=			
ANR	567277	Identifier	data2		567053	0					
ANR	567278	PtrMemberAccess	t1 -> w		567053	1					
ANR	567279	Identifier	t1		567053	0					
ANR	567280	Identifier	w		567053	1					
ANR	567281	ExpressionStatement	data1 += t1 -> w << 2	770:8:20741:20760	567053	1	True				
ANR	567282	AssignmentExpression	data1 += t1 -> w << 2		567053	0		+=			
ANR	567283	Identifier	data1		567053	0					
ANR	567284	ShiftExpression	t1 -> w << 2		567053	1		<<			
ANR	567285	PtrMemberAccess	t1 -> w		567053	0					
ANR	567286	Identifier	t1		567053	0					
ANR	567287	Identifier	w		567053	1					
ANR	567288	PrimaryExpression	2		567053	1					
ANR	567289	ExpressionStatement	flags1 += t1 -> flags_stride << 2	771:8:20770:20801	567053	2	True				
ANR	567290	AssignmentExpression	flags1 += t1 -> flags_stride << 2		567053	0		+=			
ANR	567291	Identifier	flags1		567053	0					
ANR	567292	ShiftExpression	t1 -> flags_stride << 2		567053	1		<<			
ANR	567293	PtrMemberAccess	t1 -> flags_stride		567053	0					
ANR	567294	Identifier	t1		567053	0					
ANR	567295	Identifier	flags_stride		567053	1					
ANR	567296	PrimaryExpression	2		567053	1					
ANR	567297	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		567053	7					
ANR	567298	ForInit	i = 0 ;	773:9:20818:20823	567053	0	True				
ANR	567299	AssignmentExpression	i = 0		567053	0		=			
ANR	567300	Identifier	i		567053	0					
ANR	567301	PrimaryExpression	0		567053	1					
ANR	567302	Condition	i < t1 -> w	773:16:20825:20833	567053	1	True				
ANR	567303	RelationalExpression	i < t1 -> w		567053	0		<			
ANR	567304	Identifier	i		567053	0					
ANR	567305	PtrMemberAccess	t1 -> w		567053	1					
ANR	567306	Identifier	t1		567053	0					
ANR	567307	Identifier	w		567053	1					
ANR	567308	UnaryExpression	++ i	773:27:20836:20838	567053	2	True				
ANR	567309	IncDec	++		567053	0					
ANR	567310	Identifier	i		567053	1					
ANR	567311	CompoundStatement		30:8:1076:1103	567053	3					
ANR	567312	IdentifierDeclStatement	int * data2 = data1 + i ;	774:8:20851:20873	567053	0	True				
ANR	567313	IdentifierDecl	* data2 = data1 + i		567053	0					
ANR	567314	IdentifierDeclType	int *		567053	0					
ANR	567315	Identifier	data2		567053	1					
ANR	567316	AssignmentExpression	* data2 = data1 + i		567053	2		=			
ANR	567317	Identifier	data2		567053	0					
ANR	567318	AdditiveExpression	data1 + i		567053	1		+			
ANR	567319	Identifier	data1		567053	0					
ANR	567320	Identifier	i		567053	1					
ANR	567321	IdentifierDeclStatement	flag_t * flags2 = flags1 + i ;	775:8:20883:20910	567053	1	True				
ANR	567322	IdentifierDecl	* flags2 = flags1 + i		567053	0					
ANR	567323	IdentifierDeclType	flag_t *		567053	0					
ANR	567324	Identifier	flags2		567053	1					
ANR	567325	AssignmentExpression	* flags2 = flags1 + i		567053	2		=			
ANR	567326	Identifier	flags2		567053	0					
ANR	567327	AdditiveExpression	flags1 + i		567053	1		+			
ANR	567328	Identifier	flags1		567053	0					
ANR	567329	Identifier	i		567053	1					
ANR	567330	ForStatement	for ( j = k ; j < t1 -> h ; ++ j )		567053	2					
ANR	567331	ForInit	j = k ;	776:13:20925:20930	567053	0	True				
ANR	567332	AssignmentExpression	j = k		567053	0		=			
ANR	567333	Identifier	j		567053	0					
ANR	567334	Identifier	k		567053	1					
ANR	567335	Condition	j < t1 -> h	776:20:20932:20940	567053	1	True				
ANR	567336	RelationalExpression	j < t1 -> h		567053	0		<			
ANR	567337	Identifier	j		567053	0					
ANR	567338	PtrMemberAccess	t1 -> h		567053	1					
ANR	567339	Identifier	t1		567053	0					
ANR	567340	Identifier	h		567053	1					
ANR	567341	UnaryExpression	++ j	776:31:20943:20945	567053	2	True				
ANR	567342	IncDec	++		567053	0					
ANR	567343	Identifier	j		567053	1					
ANR	567344	CompoundStatement		31:36:1141:1141	567053	3					
ANR	567345	ExpressionStatement	flags2 += t1 -> flags_stride	777:12:20962:20988	567053	0	True				
ANR	567346	AssignmentExpression	flags2 += t1 -> flags_stride		567053	0		+=			
ANR	567347	Identifier	flags2		567053	0					
ANR	567348	PtrMemberAccess	t1 -> flags_stride		567053	1					
ANR	567349	Identifier	t1		567053	0					
ANR	567350	Identifier	flags_stride		567053	1					
ANR	567351	ExpressionStatement	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"	778:12:21002:21062	567053	1	True				
ANR	567352	CallExpression	"t1_dec_refpass_step_mqc ( t1 , flags2 , data2 , poshalf , neghalf )"		567053	0					
ANR	567353	Callee	t1_dec_refpass_step_mqc		567053	0					
ANR	567354	Identifier	t1_dec_refpass_step_mqc		567053	0					
ANR	567355	ArgumentList	t1		567053	1					
ANR	567356	Argument	t1		567053	0					
ANR	567357	Identifier	t1		567053	0					
ANR	567358	Argument	flags2		567053	1					
ANR	567359	Identifier	flags2		567053	0					
ANR	567360	Argument	data2		567053	2					
ANR	567361	Identifier	data2		567053	0					
ANR	567362	Argument	poshalf		567053	3					
ANR	567363	Identifier	poshalf		567053	0					
ANR	567364	Argument	neghalf		567053	4					
ANR	567365	Identifier	neghalf		567053	0					
ANR	567366	ExpressionStatement	data2 += t1 -> w	779:12:21076:21090	567053	2	True				
ANR	567367	AssignmentExpression	data2 += t1 -> w		567053	0		+=			
ANR	567368	Identifier	data2		567053	0					
ANR	567369	PtrMemberAccess	t1 -> w		567053	1					
ANR	567370	Identifier	t1		567053	0					
ANR	567371	Identifier	w		567053	1					
ANR	567372	ReturnType	static void		567053	1					
ANR	567373	Identifier	t1_dec_refpass_mqc		567053	2					
ANR	567374	ParameterList	"opj_t1_t * t1 , int bpno"		567053	3					
ANR	567375	Parameter	opj_t1_t * t1	744:4:19778:19789	567053	0	True				
ANR	567376	ParameterType	opj_t1_t *		567053	0					
ANR	567377	Identifier	t1		567053	1					
ANR	567378	Parameter	int bpno	745:4:19796:19803	567053	1	True				
ANR	567379	ParameterType	int		567053	0					
ANR	567380	Identifier	bpno		567053	1					
ANR	567381	CFGEntryNode	ENTRY		567053		True				
ANR	567382	CFGExitNode	EXIT		567053		True				
ANR	567383	Symbol	neghalf		567053						
ANR	567384	Symbol	* t1		567053						
ANR	567385	Symbol	bpno		567053						
ANR	567386	Symbol	t1 -> w		567053						
ANR	567387	Symbol	t1 -> flags		567053						
ANR	567388	Symbol	flags2		567053						
ANR	567389	Symbol	one		567053						
ANR	567390	Symbol	flags1		567053						
ANR	567391	Symbol	data2		567053						
ANR	567392	Symbol	data1		567053						
ANR	567393	Symbol	i		567053						
ANR	567394	Symbol	j		567053						
ANR	567395	Symbol	t1 -> data		567053						
ANR	567396	Symbol	k		567053						
ANR	567397	Symbol	poshalf		567053						
ANR	567398	Symbol	t1 -> flags_stride		567053						
ANR	567399	Symbol	t1 -> h		567053						
ANR	567400	Symbol	~3		567053						
ANR	567401	Symbol	t1		567053						
ANR	567402	Function	t1_dec_refpass_mqc_vsc	784:0:21158:21861							
ANR	567403	FunctionDef	"t1_dec_refpass_mqc_vsc (opj_t1_t * t1 , int bpno)"		567402	0					
ANR	567404	CompoundStatement		787:0:21226:21861	567402	0					
ANR	567405	IdentifierDeclStatement	"int i , j , k , one , poshalf , neghalf ;"	788:4:21232:21266	567402	0	True				
ANR	567406	IdentifierDecl	i		567402	0					
ANR	567407	IdentifierDeclType	int		567402	0					
ANR	567408	Identifier	i		567402	1					
ANR	567409	IdentifierDecl	j		567402	1					
ANR	567410	IdentifierDeclType	int		567402	0					
ANR	567411	Identifier	j		567402	1					
ANR	567412	IdentifierDecl	k		567402	2					
ANR	567413	IdentifierDeclType	int		567402	0					
ANR	567414	Identifier	k		567402	1					
ANR	567415	IdentifierDecl	one		567402	3					
ANR	567416	IdentifierDeclType	int		567402	0					
ANR	567417	Identifier	one		567402	1					
ANR	567418	IdentifierDecl	poshalf		567402	4					
ANR	567419	IdentifierDeclType	int		567402	0					
ANR	567420	Identifier	poshalf		567402	1					
ANR	567421	IdentifierDecl	neghalf		567402	5					
ANR	567422	IdentifierDeclType	int		567402	0					
ANR	567423	Identifier	neghalf		567402	1					
ANR	567424	IdentifierDeclStatement	int vsc ;	789:4:21272:21279	567402	1	True				
ANR	567425	IdentifierDecl	vsc		567402	0					
ANR	567426	IdentifierDeclType	int		567402	0					
ANR	567427	Identifier	vsc		567402	1					
ANR	567428	ExpressionStatement	one = 1 << bpno	790:4:21285:21300	567402	2	True				
ANR	567429	AssignmentExpression	one = 1 << bpno		567402	0		=			
ANR	567430	Identifier	one		567402	0					
ANR	567431	ShiftExpression	1 << bpno		567402	1		<<			
ANR	567432	PrimaryExpression	1		567402	0					
ANR	567433	Identifier	bpno		567402	1					
ANR	567434	ExpressionStatement	poshalf = one >> 1	791:4:21306:21324	567402	3	True				
ANR	567435	AssignmentExpression	poshalf = one >> 1		567402	0		=			
ANR	567436	Identifier	poshalf		567402	0					
ANR	567437	ShiftExpression	one >> 1		567402	1		>>			
ANR	567438	Identifier	one		567402	0					
ANR	567439	PrimaryExpression	1		567402	1					
ANR	567440	ExpressionStatement	neghalf = bpno > 0 ? - poshalf : - 1	792:4:21330:21364	567402	4	True				
ANR	567441	AssignmentExpression	neghalf = bpno > 0 ? - poshalf : - 1		567402	0		=			
ANR	567442	Identifier	neghalf		567402	0					
ANR	567443	ConditionalExpression	bpno > 0 ? - poshalf : - 1		567402	1					
ANR	567444	Condition	bpno > 0		567402	0					
ANR	567445	RelationalExpression	bpno > 0		567402	0		>			
ANR	567446	Identifier	bpno		567402	0					
ANR	567447	PrimaryExpression	0		567402	1					
ANR	567448	UnaryOperationExpression	- poshalf		567402	1					
ANR	567449	UnaryOperator	-		567402	0					
ANR	567450	Identifier	poshalf		567402	1					
ANR	567451	UnaryOperationExpression	- 1		567402	2					
ANR	567452	UnaryOperator	-		567402	0					
ANR	567453	PrimaryExpression	1		567402	1					
ANR	567454	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		567402	5					
ANR	567455	ForInit	k = 0 ;	793:9:21375:21380	567402	0	True				
ANR	567456	AssignmentExpression	k = 0		567402	0		=			
ANR	567457	Identifier	k		567402	0					
ANR	567458	PrimaryExpression	0		567402	1					
ANR	567459	Condition	k < t1 -> h	793:16:21382:21390	567402	1	True				
ANR	567460	RelationalExpression	k < t1 -> h		567402	0		<			
ANR	567461	Identifier	k		567402	0					
ANR	567462	PtrMemberAccess	t1 -> h		567402	1					
ANR	567463	Identifier	t1		567402	0					
ANR	567464	Identifier	h		567402	1					
ANR	567465	AssignmentExpression	k += 4	793:27:21393:21398	567402	2	True	+=			
ANR	567466	Identifier	k		567402	0					
ANR	567467	PrimaryExpression	4		567402	1					
ANR	567468	CompoundStatement		7:35:174:174	567402	3					
ANR	567469	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		567402	0					
ANR	567470	ForInit	i = 0 ;	794:13:21416:21421	567402	0	True				
ANR	567471	AssignmentExpression	i = 0		567402	0		=			
ANR	567472	Identifier	i		567402	0					
ANR	567473	PrimaryExpression	0		567402	1					
ANR	567474	Condition	i < t1 -> w	794:20:21423:21431	567402	1	True				
ANR	567475	RelationalExpression	i < t1 -> w		567402	0		<			
ANR	567476	Identifier	i		567402	0					
ANR	567477	PtrMemberAccess	t1 -> w		567402	1					
ANR	567478	Identifier	t1		567402	0					
ANR	567479	Identifier	w		567402	1					
ANR	567480	UnaryExpression	++ i	794:31:21434:21436	567402	2	True				
ANR	567481	IncDec	++		567402	0					
ANR	567482	Identifier	i		567402	1					
ANR	567483	CompoundStatement		8:36:212:212	567402	3					
ANR	567484	ForStatement	for ( j = k ; j < k + 4 && j < t1 -> h ; ++ j )		567402	0					
ANR	567485	ForInit	j = k ;	795:17:21458:21463	567402	0	True				
ANR	567486	AssignmentExpression	j = k		567402	0		=			
ANR	567487	Identifier	j		567402	0					
ANR	567488	Identifier	k		567402	1					
ANR	567489	Condition	j < k + 4 && j < t1 -> h	795:24:21465:21486	567402	1	True				
ANR	567490	AndExpression	j < k + 4 && j < t1 -> h		567402	0		&&			
ANR	567491	RelationalExpression	j < k + 4		567402	0		<			
ANR	567492	Identifier	j		567402	0					
ANR	567493	AdditiveExpression	k + 4		567402	1		+			
ANR	567494	Identifier	k		567402	0					
ANR	567495	PrimaryExpression	4		567402	1					
ANR	567496	RelationalExpression	j < t1 -> h		567402	1		<			
ANR	567497	Identifier	j		567402	0					
ANR	567498	PtrMemberAccess	t1 -> h		567402	1					
ANR	567499	Identifier	t1		567402	0					
ANR	567500	Identifier	h		567402	1					
ANR	567501	UnaryExpression	++ j	795:48:21489:21491	567402	2	True				
ANR	567502	IncDec	++		567402	0					
ANR	567503	Identifier	j		567402	1					
ANR	567504	CompoundStatement		9:53:267:267	567402	3					
ANR	567505	ExpressionStatement	vsc = ( ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0	796:16:21512:21558	567402	0	True				
ANR	567506	AssignmentExpression	vsc = ( ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		567402	0		=			
ANR	567507	Identifier	vsc		567402	0					
ANR	567508	ConditionalExpression	( ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		567402	1					
ANR	567509	Condition	j == k + 3 || j == t1 -> h - 1		567402	0					
ANR	567510	OrExpression	j == k + 3 || j == t1 -> h - 1		567402	0		||			
ANR	567511	EqualityExpression	j == k + 3		567402	0		==			
ANR	567512	Identifier	j		567402	0					
ANR	567513	AdditiveExpression	k + 3		567402	1		+			
ANR	567514	Identifier	k		567402	0					
ANR	567515	PrimaryExpression	3		567402	1					
ANR	567516	EqualityExpression	j == t1 -> h - 1		567402	1		==			
ANR	567517	Identifier	j		567402	0					
ANR	567518	AdditiveExpression	t1 -> h - 1		567402	1		-			
ANR	567519	PtrMemberAccess	t1 -> h		567402	0					
ANR	567520	Identifier	t1		567402	0					
ANR	567521	Identifier	h		567402	1					
ANR	567522	PrimaryExpression	1		567402	1					
ANR	567523	PrimaryExpression	1		567402	1					
ANR	567524	PrimaryExpression	0		567402	2					
ANR	567525	ExpressionStatement	"t1_dec_refpass_step_mqc_vsc ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , poshalf , neghalf , vsc )"	797:16:21576:21829	567402	1	True				
ANR	567526	CallExpression	"t1_dec_refpass_step_mqc_vsc ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , poshalf , neghalf , vsc )"		567402	0					
ANR	567527	Callee	t1_dec_refpass_step_mqc_vsc		567402	0					
ANR	567528	Identifier	t1_dec_refpass_step_mqc_vsc		567402	0					
ANR	567529	ArgumentList	t1		567402	1					
ANR	567530	Argument	t1		567402	0					
ANR	567531	Identifier	t1		567402	0					
ANR	567532	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		567402	1					
ANR	567533	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		567402	0					
ANR	567534	UnaryOperator	&		567402	0					
ANR	567535	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		567402	1					
ANR	567536	PtrMemberAccess	t1 -> flags		567402	0					
ANR	567537	Identifier	t1		567402	0					
ANR	567538	Identifier	flags		567402	1					
ANR	567539	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		567402	1		+			
ANR	567540	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		567402	0		*			
ANR	567541	AdditiveExpression	j + 1		567402	0		+			
ANR	567542	Identifier	j		567402	0					
ANR	567543	PrimaryExpression	1		567402	1					
ANR	567544	PtrMemberAccess	t1 -> flags_stride		567402	1					
ANR	567545	Identifier	t1		567402	0					
ANR	567546	Identifier	flags_stride		567402	1					
ANR	567547	AdditiveExpression	i + 1		567402	1		+			
ANR	567548	Identifier	i		567402	0					
ANR	567549	PrimaryExpression	1		567402	1					
ANR	567550	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		567402	2					
ANR	567551	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		567402	0					
ANR	567552	UnaryOperator	&		567402	0					
ANR	567553	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		567402	1					
ANR	567554	PtrMemberAccess	t1 -> data		567402	0					
ANR	567555	Identifier	t1		567402	0					
ANR	567556	Identifier	data		567402	1					
ANR	567557	AdditiveExpression	( j * t1 -> w ) + i		567402	1		+			
ANR	567558	MultiplicativeExpression	j * t1 -> w		567402	0		*			
ANR	567559	Identifier	j		567402	0					
ANR	567560	PtrMemberAccess	t1 -> w		567402	1					
ANR	567561	Identifier	t1		567402	0					
ANR	567562	Identifier	w		567402	1					
ANR	567563	Identifier	i		567402	1					
ANR	567564	Argument	poshalf		567402	3					
ANR	567565	Identifier	poshalf		567402	0					
ANR	567566	Argument	neghalf		567402	4					
ANR	567567	Identifier	neghalf		567402	0					
ANR	567568	Argument	vsc		567402	5					
ANR	567569	Identifier	vsc		567402	0					
ANR	567570	ReturnType	static void		567402	1					
ANR	567571	Identifier	t1_dec_refpass_mqc_vsc		567402	2					
ANR	567572	ParameterList	"opj_t1_t * t1 , int bpno"		567402	3					
ANR	567573	Parameter	opj_t1_t * t1	785:4:21198:21209	567402	0	True				
ANR	567574	ParameterType	opj_t1_t *		567402	0					
ANR	567575	Identifier	t1		567402	1					
ANR	567576	Parameter	int bpno	786:4:21216:21223	567402	1	True				
ANR	567577	ParameterType	int		567402	0					
ANR	567578	Identifier	bpno		567402	1					
ANR	567579	CFGEntryNode	ENTRY		567402		True				
ANR	567580	CFGExitNode	EXIT		567402		True				
ANR	567581	Symbol	neghalf		567402						
ANR	567582	Symbol	* t1		567402						
ANR	567583	Symbol	bpno		567402						
ANR	567584	Symbol	t1 -> w		567402						
ANR	567585	Symbol	t1 -> flags		567402						
ANR	567586	Symbol	one		567402						
ANR	567587	Symbol	vsc		567402						
ANR	567588	Symbol	i		567402						
ANR	567589	Symbol	j		567402						
ANR	567590	Symbol	t1 -> data		567402						
ANR	567591	Symbol	k		567402						
ANR	567592	Symbol	poshalf		567402						
ANR	567593	Symbol	t1 -> flags_stride		567402						
ANR	567594	Symbol	t1 -> h		567402						
ANR	567595	Symbol	t1		567402						
ANR	567596	Function	t1_enc_clnpass_step	809:0:21911:22851							
ANR	567597	FunctionDef	"t1_enc_clnpass_step (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int bpno , int one , int * nmsedec , int partial , int vsc)"		567596	0					
ANR	567598	CompoundStatement		819:0:22089:22851	567596	0					
ANR	567599	IdentifierDeclStatement	"int v , flag ;"	820:4:22095:22106	567596	0	True				
ANR	567600	IdentifierDecl	v		567596	0					
ANR	567601	IdentifierDeclType	int		567596	0					
ANR	567602	Identifier	v		567596	1					
ANR	567603	IdentifierDecl	flag		567596	1					
ANR	567604	IdentifierDeclType	int		567596	0					
ANR	567605	Identifier	flag		567596	1					
ANR	567606	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	822:4:22113:22137	567596	1	True				
ANR	567607	IdentifierDecl	* mqc = t1 -> mqc		567596	0					
ANR	567608	IdentifierDeclType	opj_mqc_t *		567596	0					
ANR	567609	Identifier	mqc		567596	1					
ANR	567610	AssignmentExpression	* mqc = t1 -> mqc		567596	2		=			
ANR	567611	Identifier	mqc		567596	0					
ANR	567612	PtrMemberAccess	t1 -> mqc		567596	1					
ANR	567613	Identifier	t1		567596	0					
ANR	567614	Identifier	mqc		567596	1					
ANR	567615	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	824:4:22166:22264	567596	2	True				
ANR	567616	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		567596	0		=			
ANR	567617	Identifier	flag		567596	0					
ANR	567618	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		567596	1					
ANR	567619	Condition	vsc		567596	0					
ANR	567620	Identifier	vsc		567596	0					
ANR	567621	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		567596	1		&			
ANR	567622	UnaryOperationExpression	* flagsp		567596	0					
ANR	567623	UnaryOperator	*		567596	0					
ANR	567624	Identifier	flagsp		567596	1					
ANR	567625	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		567596	1					
ANR	567626	UnaryOperator	~		567596	0					
ANR	567627	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		567596	1		|			
ANR	567628	Identifier	T1_SIG_S		567596	0					
ANR	567629	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		567596	1		|			
ANR	567630	Identifier	T1_SIG_SE		567596	0					
ANR	567631	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		567596	1		|			
ANR	567632	Identifier	T1_SIG_SW		567596	0					
ANR	567633	Identifier	T1_SGN_S		567596	1					
ANR	567634	UnaryOperationExpression	* flagsp		567596	2					
ANR	567635	UnaryOperator	*		567596	0					
ANR	567636	Identifier	flagsp		567596	1					
ANR	567637	IfStatement	if ( partial )		567596	3					
ANR	567638	Condition	partial	826:8:22274:22280	567596	0	True				
ANR	567639	Identifier	partial		567596	0					
ANR	567640	CompoundStatement		8:17:193:193	567596	1					
ANR	567641	GotoStatement	goto LABEL_PARTIAL ;	827:8:22293:22311	567596	0	True				
ANR	567642	Identifier	LABEL_PARTIAL		567596	0					
ANR	567643	IfStatement	if ( ! ( * flagsp & ( T1_SIG | T1_VISIT ) ) )		567596	4					
ANR	567644	Condition	! ( * flagsp & ( T1_SIG | T1_VISIT ) )	829:8:22327:22358	567596	0	True				
ANR	567645	UnaryOperationExpression	! ( * flagsp & ( T1_SIG | T1_VISIT ) )		567596	0					
ANR	567646	UnaryOperator	!		567596	0					
ANR	567647	BitAndExpression	* flagsp & ( T1_SIG | T1_VISIT )		567596	1		&			
ANR	567648	UnaryOperationExpression	* flagsp		567596	0					
ANR	567649	UnaryOperator	*		567596	0					
ANR	567650	Identifier	flagsp		567596	1					
ANR	567651	InclusiveOrExpression	T1_SIG | T1_VISIT		567596	1		|			
ANR	567652	Identifier	T1_SIG		567596	0					
ANR	567653	Identifier	T1_VISIT		567596	1					
ANR	567654	CompoundStatement		11:42:271:271	567596	1					
ANR	567655	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"	830:8:22371:22419	567596	0	True				
ANR	567656	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"		567596	0					
ANR	567657	Callee	mqc_setcurctx		567596	0					
ANR	567658	Identifier	mqc_setcurctx		567596	0					
ANR	567659	ArgumentList	mqc		567596	1					
ANR	567660	Argument	mqc		567596	0					
ANR	567661	Identifier	mqc		567596	0					
ANR	567662	Argument	"t1_getctxno_zc ( flag , orient )"		567596	1					
ANR	567663	CallExpression	"t1_getctxno_zc ( flag , orient )"		567596	0					
ANR	567664	Callee	t1_getctxno_zc		567596	0					
ANR	567665	Identifier	t1_getctxno_zc		567596	0					
ANR	567666	ArgumentList	flag		567596	1					
ANR	567667	Argument	flag		567596	0					
ANR	567668	Identifier	flag		567596	0					
ANR	567669	Argument	orient		567596	1					
ANR	567670	Identifier	orient		567596	0					
ANR	567671	ExpressionStatement	v = int_abs ( * datap ) & one ? 1 : 0	831:8:22429:22462	567596	1	True				
ANR	567672	AssignmentExpression	v = int_abs ( * datap ) & one ? 1 : 0		567596	0		=			
ANR	567673	Identifier	v		567596	0					
ANR	567674	ConditionalExpression	int_abs ( * datap ) & one ? 1 : 0		567596	1					
ANR	567675	Condition	int_abs ( * datap ) & one		567596	0					
ANR	567676	BitAndExpression	int_abs ( * datap ) & one		567596	0		&			
ANR	567677	CallExpression	int_abs ( * datap )		567596	0					
ANR	567678	Callee	int_abs		567596	0					
ANR	567679	Identifier	int_abs		567596	0					
ANR	567680	ArgumentList	* datap		567596	1					
ANR	567681	Argument	* datap		567596	0					
ANR	567682	UnaryOperationExpression	* datap		567596	0					
ANR	567683	UnaryOperator	*		567596	0					
ANR	567684	Identifier	datap		567596	1					
ANR	567685	Identifier	one		567596	1					
ANR	567686	PrimaryExpression	1		567596	1					
ANR	567687	PrimaryExpression	0		567596	2					
ANR	567688	ExpressionStatement	"mqc_encode ( mqc , v )"	832:8:22472:22490	567596	2	True				
ANR	567689	CallExpression	"mqc_encode ( mqc , v )"		567596	0					
ANR	567690	Callee	mqc_encode		567596	0					
ANR	567691	Identifier	mqc_encode		567596	0					
ANR	567692	ArgumentList	mqc		567596	1					
ANR	567693	Argument	mqc		567596	0					
ANR	567694	Identifier	mqc		567596	0					
ANR	567695	Argument	v		567596	1					
ANR	567696	Identifier	v		567596	0					
ANR	567697	IfStatement	if ( v )		567596	3					
ANR	567698	Condition	v	833:12:22504:22504	567596	0	True				
ANR	567699	Identifier	v		567596	0					
ANR	567700	CompoundStatement		15:15:417:417	567596	1					
ANR	567701	Label	LABEL_PARTIAL :	834:0:22509:22522	567596	0	True				
ANR	567702	Identifier	LABEL_PARTIAL		567596	0					
ANR	567703	ExpressionStatement	"* nmsedec += t1_getnmsedec_sig ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"	835:12:22536:22610	567596	1	True				
ANR	567704	AssignmentExpression	"* nmsedec += t1_getnmsedec_sig ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"		567596	0		+=			
ANR	567705	UnaryOperationExpression	* nmsedec		567596	0					
ANR	567706	UnaryOperator	*		567596	0					
ANR	567707	Identifier	nmsedec		567596	1					
ANR	567708	CallExpression	"t1_getnmsedec_sig ( int_abs ( * datap ) , bpno + T1_NMSEDEC_FRACBITS )"		567596	1					
ANR	567709	Callee	t1_getnmsedec_sig		567596	0					
ANR	567710	Identifier	t1_getnmsedec_sig		567596	0					
ANR	567711	ArgumentList	int_abs ( * datap )		567596	1					
ANR	567712	Argument	int_abs ( * datap )		567596	0					
ANR	567713	CallExpression	int_abs ( * datap )		567596	0					
ANR	567714	Callee	int_abs		567596	0					
ANR	567715	Identifier	int_abs		567596	0					
ANR	567716	ArgumentList	* datap		567596	1					
ANR	567717	Argument	* datap		567596	0					
ANR	567718	UnaryOperationExpression	* datap		567596	0					
ANR	567719	UnaryOperator	*		567596	0					
ANR	567720	Identifier	datap		567596	1					
ANR	567721	Argument	bpno + T1_NMSEDEC_FRACBITS		567596	1					
ANR	567722	AdditiveExpression	bpno + T1_NMSEDEC_FRACBITS		567596	0		+			
ANR	567723	Identifier	bpno		567596	0					
ANR	567724	Identifier	T1_NMSEDEC_FRACBITS		567596	1					
ANR	567725	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	836:12:22624:22664	567596	2	True				
ANR	567726	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		567596	0					
ANR	567727	Callee	mqc_setcurctx		567596	0					
ANR	567728	Identifier	mqc_setcurctx		567596	0					
ANR	567729	ArgumentList	mqc		567596	1					
ANR	567730	Argument	mqc		567596	0					
ANR	567731	Identifier	mqc		567596	0					
ANR	567732	Argument	t1_getctxno_sc ( flag )		567596	1					
ANR	567733	CallExpression	t1_getctxno_sc ( flag )		567596	0					
ANR	567734	Callee	t1_getctxno_sc		567596	0					
ANR	567735	Identifier	t1_getctxno_sc		567596	0					
ANR	567736	ArgumentList	flag		567596	1					
ANR	567737	Argument	flag		567596	0					
ANR	567738	Identifier	flag		567596	0					
ANR	567739	ExpressionStatement	v = * datap < 0 ? 1 : 0	837:12:22678:22700	567596	3	True				
ANR	567740	AssignmentExpression	v = * datap < 0 ? 1 : 0		567596	0		=			
ANR	567741	Identifier	v		567596	0					
ANR	567742	ConditionalExpression	* datap < 0 ? 1 : 0		567596	1					
ANR	567743	Condition	* datap < 0		567596	0					
ANR	567744	RelationalExpression	* datap < 0		567596	0		<			
ANR	567745	UnaryOperationExpression	* datap		567596	0					
ANR	567746	UnaryOperator	*		567596	0					
ANR	567747	Identifier	datap		567596	1					
ANR	567748	PrimaryExpression	0		567596	1					
ANR	567749	PrimaryExpression	1		567596	1					
ANR	567750	PrimaryExpression	0		567596	2					
ANR	567751	ExpressionStatement	"mqc_encode ( mqc , v ^ t1_getspb ( flag ) )"	838:12:22714:22750	567596	4	True				
ANR	567752	CallExpression	"mqc_encode ( mqc , v ^ t1_getspb ( flag ) )"		567596	0					
ANR	567753	Callee	mqc_encode		567596	0					
ANR	567754	Identifier	mqc_encode		567596	0					
ANR	567755	ArgumentList	mqc		567596	1					
ANR	567756	Argument	mqc		567596	0					
ANR	567757	Identifier	mqc		567596	0					
ANR	567758	Argument	v ^ t1_getspb ( flag )		567596	1					
ANR	567759	ExclusiveOrExpression	v ^ t1_getspb ( flag )		567596	0		^			
ANR	567760	Identifier	v		567596	0					
ANR	567761	CallExpression	t1_getspb ( flag )		567596	1					
ANR	567762	Callee	t1_getspb		567596	0					
ANR	567763	Identifier	t1_getspb		567596	0					
ANR	567764	ArgumentList	flag		567596	1					
ANR	567765	Argument	flag		567596	0					
ANR	567766	Identifier	flag		567596	0					
ANR	567767	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	839:12:22764:22807	567596	5	True				
ANR	567768	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		567596	0					
ANR	567769	Callee	t1_updateflags		567596	0					
ANR	567770	Identifier	t1_updateflags		567596	0					
ANR	567771	ArgumentList	flagsp		567596	1					
ANR	567772	Argument	flagsp		567596	0					
ANR	567773	Identifier	flagsp		567596	0					
ANR	567774	Argument	v		567596	1					
ANR	567775	Identifier	v		567596	0					
ANR	567776	Argument	t1 -> flags_stride		567596	2					
ANR	567777	PtrMemberAccess	t1 -> flags_stride		567596	0					
ANR	567778	Identifier	t1		567596	0					
ANR	567779	Identifier	flags_stride		567596	1					
ANR	567780	ExpressionStatement	* flagsp &= ~T1_VISIT	842:4:22829:22849	567596	5	True				
ANR	567781	AssignmentExpression	* flagsp &= ~T1_VISIT		567596	0		&=			
ANR	567782	UnaryOperationExpression	* flagsp		567596	0					
ANR	567783	UnaryOperator	*		567596	0					
ANR	567784	Identifier	flagsp		567596	1					
ANR	567785	Identifier	~T1_VISIT		567596	1					
ANR	567786	ReturnType	static void		567596	1					
ANR	567787	Identifier	t1_enc_clnpass_step		567596	2					
ANR	567788	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int bpno , int one , int * nmsedec , int partial , int vsc"		567596	3					
ANR	567789	Parameter	opj_t1_t * t1	810:4:21948:21959	567596	0	True				
ANR	567790	ParameterType	opj_t1_t *		567596	0					
ANR	567791	Identifier	t1		567596	1					
ANR	567792	Parameter	flag_t * flagsp	811:4:21966:21979	567596	1	True				
ANR	567793	ParameterType	flag_t *		567596	0					
ANR	567794	Identifier	flagsp		567596	1					
ANR	567795	Parameter	int * datap	812:4:21986:21995	567596	2	True				
ANR	567796	ParameterType	int *		567596	0					
ANR	567797	Identifier	datap		567596	1					
ANR	567798	Parameter	int orient	813:4:22002:22011	567596	3	True				
ANR	567799	ParameterType	int		567596	0					
ANR	567800	Identifier	orient		567596	1					
ANR	567801	Parameter	int bpno	814:4:22018:22025	567596	4	True				
ANR	567802	ParameterType	int		567596	0					
ANR	567803	Identifier	bpno		567596	1					
ANR	567804	Parameter	int one	815:4:22032:22038	567596	5	True				
ANR	567805	ParameterType	int		567596	0					
ANR	567806	Identifier	one		567596	1					
ANR	567807	Parameter	int * nmsedec	816:4:22045:22056	567596	6	True				
ANR	567808	ParameterType	int *		567596	0					
ANR	567809	Identifier	nmsedec		567596	1					
ANR	567810	Parameter	int partial	817:4:22063:22073	567596	7	True				
ANR	567811	ParameterType	int		567596	0					
ANR	567812	Identifier	partial		567596	1					
ANR	567813	Parameter	int vsc	818:4:22080:22086	567596	8	True				
ANR	567814	ParameterType	int		567596	0					
ANR	567815	Identifier	vsc		567596	1					
ANR	567816	CFGEntryNode	ENTRY		567596		True				
ANR	567817	CFGExitNode	EXIT		567596		True				
ANR	567818	Symbol	flag		567596						
ANR	567819	Symbol	T1_SIG_SE		567596						
ANR	567820	Symbol	t1_getspb		567596						
ANR	567821	Symbol	vsc		567596						
ANR	567822	Symbol	* nmsedec		567596						
ANR	567823	Symbol	t1_getnmsedec_sig		567596						
ANR	567824	Symbol	int_abs		567596						
ANR	567825	Symbol	T1_SIG_SW		567596						
ANR	567826	Symbol	* flagsp		567596						
ANR	567827	Symbol	t1_getctxno_zc		567596						
ANR	567828	Symbol	~T1_VISIT		567596						
ANR	567829	Symbol	* datap		567596						
ANR	567830	Symbol	nmsedec		567596						
ANR	567831	Symbol	* t1		567596						
ANR	567832	Symbol	T1_NMSEDEC_FRACBITS		567596						
ANR	567833	Symbol	bpno		567596						
ANR	567834	Symbol	flagsp		567596						
ANR	567835	Symbol	orient		567596						
ANR	567836	Symbol	one		567596						
ANR	567837	Symbol	T1_SIG_S		567596						
ANR	567838	Symbol	T1_VISIT		567596						
ANR	567839	Symbol	datap		567596						
ANR	567840	Symbol	T1_SGN_S		567596						
ANR	567841	Symbol	t1 -> flags_stride		567596						
ANR	567842	Symbol	t1 -> mqc		567596						
ANR	567843	Symbol	t1_getctxno_sc		567596						
ANR	567844	Symbol	v		567596						
ANR	567845	Symbol	T1_SIG		567596						
ANR	567846	Symbol	t1		567596						
ANR	567847	Symbol	partial		567596						
ANR	567848	Symbol	mqc		567596						
ANR	567849	Function	t1_dec_clnpass_step_partial	845:0:22854:23318							
ANR	567850	FunctionDef	"t1_dec_clnpass_step_partial (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf)"		567849	0					
ANR	567851	CompoundStatement		851:0:22986:23318	567849	0					
ANR	567852	IdentifierDeclStatement	"int v , flag ;"	852:4:22992:23003	567849	0	True				
ANR	567853	IdentifierDecl	v		567849	0					
ANR	567854	IdentifierDeclType	int		567849	0					
ANR	567855	Identifier	v		567849	1					
ANR	567856	IdentifierDecl	flag		567849	1					
ANR	567857	IdentifierDeclType	int		567849	0					
ANR	567858	Identifier	flag		567849	1					
ANR	567859	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	853:4:23009:23033	567849	1	True				
ANR	567860	IdentifierDecl	* mqc = t1 -> mqc		567849	0					
ANR	567861	IdentifierDeclType	opj_mqc_t *		567849	0					
ANR	567862	Identifier	mqc		567849	1					
ANR	567863	AssignmentExpression	* mqc = t1 -> mqc		567849	2		=			
ANR	567864	Identifier	mqc		567849	0					
ANR	567865	PtrMemberAccess	t1 -> mqc		567849	1					
ANR	567866	Identifier	t1		567849	0					
ANR	567867	Identifier	mqc		567849	1					
ANR	567868	ExpressionStatement	OPJ_ARG_NOT_USED ( orient )	855:4:23062:23086	567849	2	True				
ANR	567869	CallExpression	OPJ_ARG_NOT_USED ( orient )		567849	0					
ANR	567870	Callee	OPJ_ARG_NOT_USED		567849	0					
ANR	567871	Identifier	OPJ_ARG_NOT_USED		567849	0					
ANR	567872	ArgumentList	orient		567849	1					
ANR	567873	Argument	orient		567849	0					
ANR	567874	Identifier	orient		567849	0					
ANR	567875	ExpressionStatement	flag = * flagsp	857:4:23093:23107	567849	3	True				
ANR	567876	AssignmentExpression	flag = * flagsp		567849	0		=			
ANR	567877	Identifier	flag		567849	0					
ANR	567878	UnaryOperationExpression	* flagsp		567849	1					
ANR	567879	UnaryOperator	*		567849	0					
ANR	567880	Identifier	flagsp		567849	1					
ANR	567881	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	858:4:23113:23153	567849	4	True				
ANR	567882	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		567849	0					
ANR	567883	Callee	mqc_setcurctx		567849	0					
ANR	567884	Identifier	mqc_setcurctx		567849	0					
ANR	567885	ArgumentList	mqc		567849	1					
ANR	567886	Argument	mqc		567849	0					
ANR	567887	Identifier	mqc		567849	0					
ANR	567888	Argument	t1_getctxno_sc ( flag )		567849	1					
ANR	567889	CallExpression	t1_getctxno_sc ( flag )		567849	0					
ANR	567890	Callee	t1_getctxno_sc		567849	0					
ANR	567891	Identifier	t1_getctxno_sc		567849	0					
ANR	567892	ArgumentList	flag		567849	1					
ANR	567893	Argument	flag		567849	0					
ANR	567894	Identifier	flag		567849	0					
ANR	567895	ExpressionStatement	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )	859:4:23159:23196	567849	5	True				
ANR	567896	AssignmentExpression	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )		567849	0		=			
ANR	567897	Identifier	v		567849	0					
ANR	567898	ExclusiveOrExpression	mqc_decode ( mqc ) ^ t1_getspb ( flag )		567849	1		^			
ANR	567899	CallExpression	mqc_decode ( mqc )		567849	0					
ANR	567900	Callee	mqc_decode		567849	0					
ANR	567901	Identifier	mqc_decode		567849	0					
ANR	567902	ArgumentList	mqc		567849	1					
ANR	567903	Argument	mqc		567849	0					
ANR	567904	Identifier	mqc		567849	0					
ANR	567905	CallExpression	t1_getspb ( flag )		567849	1					
ANR	567906	Callee	t1_getspb		567849	0					
ANR	567907	Identifier	t1_getspb		567849	0					
ANR	567908	ArgumentList	flag		567849	1					
ANR	567909	Argument	flag		567849	0					
ANR	567910	Identifier	flag		567849	0					
ANR	567911	ExpressionStatement	* datap = v ? - oneplushalf : oneplushalf	860:4:23202:23241	567849	6	True				
ANR	567912	AssignmentExpression	* datap = v ? - oneplushalf : oneplushalf		567849	0		=			
ANR	567913	UnaryOperationExpression	* datap		567849	0					
ANR	567914	UnaryOperator	*		567849	0					
ANR	567915	Identifier	datap		567849	1					
ANR	567916	ConditionalExpression	v ? - oneplushalf : oneplushalf		567849	1					
ANR	567917	Condition	v		567849	0					
ANR	567918	Identifier	v		567849	0					
ANR	567919	UnaryOperationExpression	- oneplushalf		567849	1					
ANR	567920	UnaryOperator	-		567849	0					
ANR	567921	Identifier	oneplushalf		567849	1					
ANR	567922	Identifier	oneplushalf		567849	2					
ANR	567923	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	861:4:23247:23290	567849	7	True				
ANR	567924	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		567849	0					
ANR	567925	Callee	t1_updateflags		567849	0					
ANR	567926	Identifier	t1_updateflags		567849	0					
ANR	567927	ArgumentList	flagsp		567849	1					
ANR	567928	Argument	flagsp		567849	0					
ANR	567929	Identifier	flagsp		567849	0					
ANR	567930	Argument	v		567849	1					
ANR	567931	Identifier	v		567849	0					
ANR	567932	Argument	t1 -> flags_stride		567849	2					
ANR	567933	PtrMemberAccess	t1 -> flags_stride		567849	0					
ANR	567934	Identifier	t1		567849	0					
ANR	567935	Identifier	flags_stride		567849	1					
ANR	567936	ExpressionStatement	* flagsp &= ~T1_VISIT	862:4:23296:23316	567849	8	True				
ANR	567937	AssignmentExpression	* flagsp &= ~T1_VISIT		567849	0		&=			
ANR	567938	UnaryOperationExpression	* flagsp		567849	0					
ANR	567939	UnaryOperator	*		567849	0					
ANR	567940	Identifier	flagsp		567849	1					
ANR	567941	Identifier	~T1_VISIT		567849	1					
ANR	567942	ReturnType	static void		567849	1					
ANR	567943	Identifier	t1_dec_clnpass_step_partial		567849	2					
ANR	567944	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf"		567849	3					
ANR	567945	Parameter	opj_t1_t * t1	846:4:22899:22910	567849	0	True				
ANR	567946	ParameterType	opj_t1_t *		567849	0					
ANR	567947	Identifier	t1		567849	1					
ANR	567948	Parameter	flag_t * flagsp	847:4:22917:22930	567849	1	True				
ANR	567949	ParameterType	flag_t *		567849	0					
ANR	567950	Identifier	flagsp		567849	1					
ANR	567951	Parameter	int * datap	848:4:22937:22946	567849	2	True				
ANR	567952	ParameterType	int *		567849	0					
ANR	567953	Identifier	datap		567849	1					
ANR	567954	Parameter	int orient	849:4:22953:22962	567849	3	True				
ANR	567955	ParameterType	int		567849	0					
ANR	567956	Identifier	orient		567849	1					
ANR	567957	Parameter	int oneplushalf	850:4:22969:22983	567849	4	True				
ANR	567958	ParameterType	int		567849	0					
ANR	567959	Identifier	oneplushalf		567849	1					
ANR	567960	CFGEntryNode	ENTRY		567849		True				
ANR	567961	CFGExitNode	EXIT		567849		True				
ANR	567962	Symbol	* t1		567849						
ANR	567963	Symbol	flag		567849						
ANR	567964	Symbol	flagsp		567849						
ANR	567965	Symbol	orient		567849						
ANR	567966	Symbol	t1_getspb		567849						
ANR	567967	Symbol	datap		567849						
ANR	567968	Symbol	mqc_decode		567849						
ANR	567969	Symbol	t1 -> flags_stride		567849						
ANR	567970	Symbol	t1 -> mqc		567849						
ANR	567971	Symbol	t1_getctxno_sc		567849						
ANR	567972	Symbol	v		567849						
ANR	567973	Symbol	* flagsp		567849						
ANR	567974	Symbol	~T1_VISIT		567849						
ANR	567975	Symbol	oneplushalf		567849						
ANR	567976	Symbol	t1		567849						
ANR	567977	Symbol	mqc		567849						
ANR	567978	Symbol	* datap		567849						
ANR	567979	Function	t1_dec_clnpass_step	865:0:23368:23972							
ANR	567980	FunctionDef	"t1_dec_clnpass_step (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf)"		567979	0					
ANR	567981	CompoundStatement		871:0:23492:23972	567979	0					
ANR	567982	IdentifierDeclStatement	"int v , flag ;"	872:4:23498:23509	567979	0	True				
ANR	567983	IdentifierDecl	v		567979	0					
ANR	567984	IdentifierDeclType	int		567979	0					
ANR	567985	Identifier	v		567979	1					
ANR	567986	IdentifierDecl	flag		567979	1					
ANR	567987	IdentifierDeclType	int		567979	0					
ANR	567988	Identifier	flag		567979	1					
ANR	567989	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	874:4:23516:23540	567979	1	True				
ANR	567990	IdentifierDecl	* mqc = t1 -> mqc		567979	0					
ANR	567991	IdentifierDeclType	opj_mqc_t *		567979	0					
ANR	567992	Identifier	mqc		567979	1					
ANR	567993	AssignmentExpression	* mqc = t1 -> mqc		567979	2		=			
ANR	567994	Identifier	mqc		567979	0					
ANR	567995	PtrMemberAccess	t1 -> mqc		567979	1					
ANR	567996	Identifier	t1		567979	0					
ANR	567997	Identifier	mqc		567979	1					
ANR	567998	ExpressionStatement	flag = * flagsp	876:4:23569:23583	567979	2	True				
ANR	567999	AssignmentExpression	flag = * flagsp		567979	0		=			
ANR	568000	Identifier	flag		567979	0					
ANR	568001	UnaryOperationExpression	* flagsp		567979	1					
ANR	568002	UnaryOperator	*		567979	0					
ANR	568003	Identifier	flagsp		567979	1					
ANR	568004	IfStatement	if ( ! ( flag & ( T1_SIG | T1_VISIT ) ) )		567979	3					
ANR	568005	Condition	! ( flag & ( T1_SIG | T1_VISIT ) )	877:8:23593:23621	567979	0	True				
ANR	568006	UnaryOperationExpression	! ( flag & ( T1_SIG | T1_VISIT ) )		567979	0					
ANR	568007	UnaryOperator	!		567979	0					
ANR	568008	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		567979	1		&			
ANR	568009	Identifier	flag		567979	0					
ANR	568010	InclusiveOrExpression	T1_SIG | T1_VISIT		567979	1		|			
ANR	568011	Identifier	T1_SIG		567979	0					
ANR	568012	Identifier	T1_VISIT		567979	1					
ANR	568013	CompoundStatement		7:39:131:131	567979	1					
ANR	568014	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"	878:8:23634:23682	567979	0	True				
ANR	568015	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"		567979	0					
ANR	568016	Callee	mqc_setcurctx		567979	0					
ANR	568017	Identifier	mqc_setcurctx		567979	0					
ANR	568018	ArgumentList	mqc		567979	1					
ANR	568019	Argument	mqc		567979	0					
ANR	568020	Identifier	mqc		567979	0					
ANR	568021	Argument	"t1_getctxno_zc ( flag , orient )"		567979	1					
ANR	568022	CallExpression	"t1_getctxno_zc ( flag , orient )"		567979	0					
ANR	568023	Callee	t1_getctxno_zc		567979	0					
ANR	568024	Identifier	t1_getctxno_zc		567979	0					
ANR	568025	ArgumentList	flag		567979	1					
ANR	568026	Argument	flag		567979	0					
ANR	568027	Identifier	flag		567979	0					
ANR	568028	Argument	orient		567979	1					
ANR	568029	Identifier	orient		567979	0					
ANR	568030	IfStatement	if ( mqc_decode ( mqc ) )		567979	1					
ANR	568031	Condition	mqc_decode ( mqc )	879:12:23696:23710	567979	0	True				
ANR	568032	CallExpression	mqc_decode ( mqc )		567979	0					
ANR	568033	Callee	mqc_decode		567979	0					
ANR	568034	Identifier	mqc_decode		567979	0					
ANR	568035	ArgumentList	mqc		567979	1					
ANR	568036	Argument	mqc		567979	0					
ANR	568037	Identifier	mqc		567979	0					
ANR	568038	CompoundStatement		9:29:220:220	567979	1					
ANR	568039	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	880:12:23727:23767	567979	0	True				
ANR	568040	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		567979	0					
ANR	568041	Callee	mqc_setcurctx		567979	0					
ANR	568042	Identifier	mqc_setcurctx		567979	0					
ANR	568043	ArgumentList	mqc		567979	1					
ANR	568044	Argument	mqc		567979	0					
ANR	568045	Identifier	mqc		567979	0					
ANR	568046	Argument	t1_getctxno_sc ( flag )		567979	1					
ANR	568047	CallExpression	t1_getctxno_sc ( flag )		567979	0					
ANR	568048	Callee	t1_getctxno_sc		567979	0					
ANR	568049	Identifier	t1_getctxno_sc		567979	0					
ANR	568050	ArgumentList	flag		567979	1					
ANR	568051	Argument	flag		567979	0					
ANR	568052	Identifier	flag		567979	0					
ANR	568053	ExpressionStatement	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )	881:12:23781:23818	567979	1	True				
ANR	568054	AssignmentExpression	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )		567979	0		=			
ANR	568055	Identifier	v		567979	0					
ANR	568056	ExclusiveOrExpression	mqc_decode ( mqc ) ^ t1_getspb ( flag )		567979	1		^			
ANR	568057	CallExpression	mqc_decode ( mqc )		567979	0					
ANR	568058	Callee	mqc_decode		567979	0					
ANR	568059	Identifier	mqc_decode		567979	0					
ANR	568060	ArgumentList	mqc		567979	1					
ANR	568061	Argument	mqc		567979	0					
ANR	568062	Identifier	mqc		567979	0					
ANR	568063	CallExpression	t1_getspb ( flag )		567979	1					
ANR	568064	Callee	t1_getspb		567979	0					
ANR	568065	Identifier	t1_getspb		567979	0					
ANR	568066	ArgumentList	flag		567979	1					
ANR	568067	Argument	flag		567979	0					
ANR	568068	Identifier	flag		567979	0					
ANR	568069	ExpressionStatement	* datap = v ? - oneplushalf : oneplushalf	882:12:23832:23871	567979	2	True				
ANR	568070	AssignmentExpression	* datap = v ? - oneplushalf : oneplushalf		567979	0		=			
ANR	568071	UnaryOperationExpression	* datap		567979	0					
ANR	568072	UnaryOperator	*		567979	0					
ANR	568073	Identifier	datap		567979	1					
ANR	568074	ConditionalExpression	v ? - oneplushalf : oneplushalf		567979	1					
ANR	568075	Condition	v		567979	0					
ANR	568076	Identifier	v		567979	0					
ANR	568077	UnaryOperationExpression	- oneplushalf		567979	1					
ANR	568078	UnaryOperator	-		567979	0					
ANR	568079	Identifier	oneplushalf		567979	1					
ANR	568080	Identifier	oneplushalf		567979	2					
ANR	568081	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	883:12:23885:23928	567979	3	True				
ANR	568082	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		567979	0					
ANR	568083	Callee	t1_updateflags		567979	0					
ANR	568084	Identifier	t1_updateflags		567979	0					
ANR	568085	ArgumentList	flagsp		567979	1					
ANR	568086	Argument	flagsp		567979	0					
ANR	568087	Identifier	flagsp		567979	0					
ANR	568088	Argument	v		567979	1					
ANR	568089	Identifier	v		567979	0					
ANR	568090	Argument	t1 -> flags_stride		567979	2					
ANR	568091	PtrMemberAccess	t1 -> flags_stride		567979	0					
ANR	568092	Identifier	t1		567979	0					
ANR	568093	Identifier	flags_stride		567979	1					
ANR	568094	ExpressionStatement	* flagsp &= ~T1_VISIT	886:4:23950:23970	567979	4	True				
ANR	568095	AssignmentExpression	* flagsp &= ~T1_VISIT		567979	0		&=			
ANR	568096	UnaryOperationExpression	* flagsp		567979	0					
ANR	568097	UnaryOperator	*		567979	0					
ANR	568098	Identifier	flagsp		567979	1					
ANR	568099	Identifier	~T1_VISIT		567979	1					
ANR	568100	ReturnType	static void		567979	1					
ANR	568101	Identifier	t1_dec_clnpass_step		567979	2					
ANR	568102	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf"		567979	3					
ANR	568103	Parameter	opj_t1_t * t1	866:4:23405:23416	567979	0	True				
ANR	568104	ParameterType	opj_t1_t *		567979	0					
ANR	568105	Identifier	t1		567979	1					
ANR	568106	Parameter	flag_t * flagsp	867:4:23423:23436	567979	1	True				
ANR	568107	ParameterType	flag_t *		567979	0					
ANR	568108	Identifier	flagsp		567979	1					
ANR	568109	Parameter	int * datap	868:4:23443:23452	567979	2	True				
ANR	568110	ParameterType	int *		567979	0					
ANR	568111	Identifier	datap		567979	1					
ANR	568112	Parameter	int orient	869:4:23459:23468	567979	3	True				
ANR	568113	ParameterType	int		567979	0					
ANR	568114	Identifier	orient		567979	1					
ANR	568115	Parameter	int oneplushalf	870:4:23475:23489	567979	4	True				
ANR	568116	ParameterType	int		567979	0					
ANR	568117	Identifier	oneplushalf		567979	1					
ANR	568118	CFGEntryNode	ENTRY		567979		True				
ANR	568119	CFGExitNode	EXIT		567979		True				
ANR	568120	Symbol	* t1		567979						
ANR	568121	Symbol	flag		567979						
ANR	568122	Symbol	flagsp		567979						
ANR	568123	Symbol	orient		567979						
ANR	568124	Symbol	t1_getspb		567979						
ANR	568125	Symbol	T1_VISIT		567979						
ANR	568126	Symbol	datap		567979						
ANR	568127	Symbol	mqc_decode		567979						
ANR	568128	Symbol	t1 -> flags_stride		567979						
ANR	568129	Symbol	t1 -> mqc		567979						
ANR	568130	Symbol	t1_getctxno_sc		567979						
ANR	568131	Symbol	v		567979						
ANR	568132	Symbol	* flagsp		567979						
ANR	568133	Symbol	T1_SIG		567979						
ANR	568134	Symbol	t1_getctxno_zc		567979						
ANR	568135	Symbol	~T1_VISIT		567979						
ANR	568136	Symbol	oneplushalf		567979						
ANR	568137	Symbol	t1		567979						
ANR	568138	Symbol	mqc		567979						
ANR	568139	Symbol	* datap		567979						
ANR	568140	Function	t1_dec_clnpass_step_vsc	889:0:24022:24812							
ANR	568141	FunctionDef	"t1_dec_clnpass_step_vsc (opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int partial , int vsc)"		568140	0					
ANR	568142	CompoundStatement		897:0:24180:24812	568140	0					
ANR	568143	IdentifierDeclStatement	"int v , flag ;"	898:4:24186:24197	568140	0	True				
ANR	568144	IdentifierDecl	v		568140	0					
ANR	568145	IdentifierDeclType	int		568140	0					
ANR	568146	Identifier	v		568140	1					
ANR	568147	IdentifierDecl	flag		568140	1					
ANR	568148	IdentifierDeclType	int		568140	0					
ANR	568149	Identifier	flag		568140	1					
ANR	568150	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	900:4:24204:24228	568140	1	True				
ANR	568151	IdentifierDecl	* mqc = t1 -> mqc		568140	0					
ANR	568152	IdentifierDeclType	opj_mqc_t *		568140	0					
ANR	568153	Identifier	mqc		568140	1					
ANR	568154	AssignmentExpression	* mqc = t1 -> mqc		568140	2		=			
ANR	568155	Identifier	mqc		568140	0					
ANR	568156	PtrMemberAccess	t1 -> mqc		568140	1					
ANR	568157	Identifier	t1		568140	0					
ANR	568158	Identifier	mqc		568140	1					
ANR	568159	ExpressionStatement	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )	902:4:24257:24355	568140	2	True				
ANR	568160	AssignmentExpression	flag = vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		568140	0		=			
ANR	568161	Identifier	flag		568140	0					
ANR	568162	ConditionalExpression	vsc ? ( ( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) : ( * flagsp )		568140	1					
ANR	568163	Condition	vsc		568140	0					
ANR	568164	Identifier	vsc		568140	0					
ANR	568165	BitAndExpression	( * flagsp ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )		568140	1		&			
ANR	568166	UnaryOperationExpression	* flagsp		568140	0					
ANR	568167	UnaryOperator	*		568140	0					
ANR	568168	Identifier	flagsp		568140	1					
ANR	568169	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		568140	1					
ANR	568170	UnaryOperator	~		568140	0					
ANR	568171	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		568140	1		|			
ANR	568172	Identifier	T1_SIG_S		568140	0					
ANR	568173	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		568140	1		|			
ANR	568174	Identifier	T1_SIG_SE		568140	0					
ANR	568175	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		568140	1		|			
ANR	568176	Identifier	T1_SIG_SW		568140	0					
ANR	568177	Identifier	T1_SGN_S		568140	1					
ANR	568178	UnaryOperationExpression	* flagsp		568140	2					
ANR	568179	UnaryOperator	*		568140	0					
ANR	568180	Identifier	flagsp		568140	1					
ANR	568181	IfStatement	if ( partial )		568140	3					
ANR	568182	Condition	partial	904:8:24365:24371	568140	0	True				
ANR	568183	Identifier	partial		568140	0					
ANR	568184	CompoundStatement		8:17:193:193	568140	1					
ANR	568185	GotoStatement	goto LABEL_PARTIAL ;	905:8:24384:24402	568140	0	True				
ANR	568186	Identifier	LABEL_PARTIAL		568140	0					
ANR	568187	IfStatement	if ( ! ( flag & ( T1_SIG | T1_VISIT ) ) )		568140	4					
ANR	568188	Condition	! ( flag & ( T1_SIG | T1_VISIT ) )	907:8:24418:24446	568140	0	True				
ANR	568189	UnaryOperationExpression	! ( flag & ( T1_SIG | T1_VISIT ) )		568140	0					
ANR	568190	UnaryOperator	!		568140	0					
ANR	568191	BitAndExpression	flag & ( T1_SIG | T1_VISIT )		568140	1		&			
ANR	568192	Identifier	flag		568140	0					
ANR	568193	InclusiveOrExpression	T1_SIG | T1_VISIT		568140	1		|			
ANR	568194	Identifier	T1_SIG		568140	0					
ANR	568195	Identifier	T1_VISIT		568140	1					
ANR	568196	CompoundStatement		11:39:268:268	568140	1					
ANR	568197	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"	908:8:24459:24507	568140	0	True				
ANR	568198	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_zc ( flag , orient ) )"		568140	0					
ANR	568199	Callee	mqc_setcurctx		568140	0					
ANR	568200	Identifier	mqc_setcurctx		568140	0					
ANR	568201	ArgumentList	mqc		568140	1					
ANR	568202	Argument	mqc		568140	0					
ANR	568203	Identifier	mqc		568140	0					
ANR	568204	Argument	"t1_getctxno_zc ( flag , orient )"		568140	1					
ANR	568205	CallExpression	"t1_getctxno_zc ( flag , orient )"		568140	0					
ANR	568206	Callee	t1_getctxno_zc		568140	0					
ANR	568207	Identifier	t1_getctxno_zc		568140	0					
ANR	568208	ArgumentList	flag		568140	1					
ANR	568209	Argument	flag		568140	0					
ANR	568210	Identifier	flag		568140	0					
ANR	568211	Argument	orient		568140	1					
ANR	568212	Identifier	orient		568140	0					
ANR	568213	IfStatement	if ( mqc_decode ( mqc ) )		568140	1					
ANR	568214	Condition	mqc_decode ( mqc )	909:12:24521:24535	568140	0	True				
ANR	568215	CallExpression	mqc_decode ( mqc )		568140	0					
ANR	568216	Callee	mqc_decode		568140	0					
ANR	568217	Identifier	mqc_decode		568140	0					
ANR	568218	ArgumentList	mqc		568140	1					
ANR	568219	Argument	mqc		568140	0					
ANR	568220	Identifier	mqc		568140	0					
ANR	568221	CompoundStatement		13:29:357:357	568140	1					
ANR	568222	Label	LABEL_PARTIAL :	910:0:24540:24553	568140	0	True				
ANR	568223	Identifier	LABEL_PARTIAL		568140	0					
ANR	568224	ExpressionStatement	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"	911:12:24567:24607	568140	1	True				
ANR	568225	CallExpression	"mqc_setcurctx ( mqc , t1_getctxno_sc ( flag ) )"		568140	0					
ANR	568226	Callee	mqc_setcurctx		568140	0					
ANR	568227	Identifier	mqc_setcurctx		568140	0					
ANR	568228	ArgumentList	mqc		568140	1					
ANR	568229	Argument	mqc		568140	0					
ANR	568230	Identifier	mqc		568140	0					
ANR	568231	Argument	t1_getctxno_sc ( flag )		568140	1					
ANR	568232	CallExpression	t1_getctxno_sc ( flag )		568140	0					
ANR	568233	Callee	t1_getctxno_sc		568140	0					
ANR	568234	Identifier	t1_getctxno_sc		568140	0					
ANR	568235	ArgumentList	flag		568140	1					
ANR	568236	Argument	flag		568140	0					
ANR	568237	Identifier	flag		568140	0					
ANR	568238	ExpressionStatement	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )	912:12:24621:24658	568140	2	True				
ANR	568239	AssignmentExpression	v = mqc_decode ( mqc ) ^ t1_getspb ( flag )		568140	0		=			
ANR	568240	Identifier	v		568140	0					
ANR	568241	ExclusiveOrExpression	mqc_decode ( mqc ) ^ t1_getspb ( flag )		568140	1		^			
ANR	568242	CallExpression	mqc_decode ( mqc )		568140	0					
ANR	568243	Callee	mqc_decode		568140	0					
ANR	568244	Identifier	mqc_decode		568140	0					
ANR	568245	ArgumentList	mqc		568140	1					
ANR	568246	Argument	mqc		568140	0					
ANR	568247	Identifier	mqc		568140	0					
ANR	568248	CallExpression	t1_getspb ( flag )		568140	1					
ANR	568249	Callee	t1_getspb		568140	0					
ANR	568250	Identifier	t1_getspb		568140	0					
ANR	568251	ArgumentList	flag		568140	1					
ANR	568252	Argument	flag		568140	0					
ANR	568253	Identifier	flag		568140	0					
ANR	568254	ExpressionStatement	* datap = v ? - oneplushalf : oneplushalf	913:12:24672:24711	568140	3	True				
ANR	568255	AssignmentExpression	* datap = v ? - oneplushalf : oneplushalf		568140	0		=			
ANR	568256	UnaryOperationExpression	* datap		568140	0					
ANR	568257	UnaryOperator	*		568140	0					
ANR	568258	Identifier	datap		568140	1					
ANR	568259	ConditionalExpression	v ? - oneplushalf : oneplushalf		568140	1					
ANR	568260	Condition	v		568140	0					
ANR	568261	Identifier	v		568140	0					
ANR	568262	UnaryOperationExpression	- oneplushalf		568140	1					
ANR	568263	UnaryOperator	-		568140	0					
ANR	568264	Identifier	oneplushalf		568140	1					
ANR	568265	Identifier	oneplushalf		568140	2					
ANR	568266	ExpressionStatement	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"	914:12:24725:24768	568140	4	True				
ANR	568267	CallExpression	"t1_updateflags ( flagsp , v , t1 -> flags_stride )"		568140	0					
ANR	568268	Callee	t1_updateflags		568140	0					
ANR	568269	Identifier	t1_updateflags		568140	0					
ANR	568270	ArgumentList	flagsp		568140	1					
ANR	568271	Argument	flagsp		568140	0					
ANR	568272	Identifier	flagsp		568140	0					
ANR	568273	Argument	v		568140	1					
ANR	568274	Identifier	v		568140	0					
ANR	568275	Argument	t1 -> flags_stride		568140	2					
ANR	568276	PtrMemberAccess	t1 -> flags_stride		568140	0					
ANR	568277	Identifier	t1		568140	0					
ANR	568278	Identifier	flags_stride		568140	1					
ANR	568279	ExpressionStatement	* flagsp &= ~T1_VISIT	917:4:24790:24810	568140	5	True				
ANR	568280	AssignmentExpression	* flagsp &= ~T1_VISIT		568140	0		&=			
ANR	568281	UnaryOperationExpression	* flagsp		568140	0					
ANR	568282	UnaryOperator	*		568140	0					
ANR	568283	Identifier	flagsp		568140	1					
ANR	568284	Identifier	~T1_VISIT		568140	1					
ANR	568285	ReturnType	static void		568140	1					
ANR	568286	Identifier	t1_dec_clnpass_step_vsc		568140	2					
ANR	568287	ParameterList	"opj_t1_t * t1 , flag_t * flagsp , int * datap , int orient , int oneplushalf , int partial , int vsc"		568140	3					
ANR	568288	Parameter	opj_t1_t * t1	890:4:24063:24074	568140	0	True				
ANR	568289	ParameterType	opj_t1_t *		568140	0					
ANR	568290	Identifier	t1		568140	1					
ANR	568291	Parameter	flag_t * flagsp	891:4:24081:24094	568140	1	True				
ANR	568292	ParameterType	flag_t *		568140	0					
ANR	568293	Identifier	flagsp		568140	1					
ANR	568294	Parameter	int * datap	892:4:24101:24110	568140	2	True				
ANR	568295	ParameterType	int *		568140	0					
ANR	568296	Identifier	datap		568140	1					
ANR	568297	Parameter	int orient	893:4:24117:24126	568140	3	True				
ANR	568298	ParameterType	int		568140	0					
ANR	568299	Identifier	orient		568140	1					
ANR	568300	Parameter	int oneplushalf	894:4:24133:24147	568140	4	True				
ANR	568301	ParameterType	int		568140	0					
ANR	568302	Identifier	oneplushalf		568140	1					
ANR	568303	Parameter	int partial	895:4:24154:24164	568140	5	True				
ANR	568304	ParameterType	int		568140	0					
ANR	568305	Identifier	partial		568140	1					
ANR	568306	Parameter	int vsc	896:4:24171:24177	568140	6	True				
ANR	568307	ParameterType	int		568140	0					
ANR	568308	Identifier	vsc		568140	1					
ANR	568309	CFGEntryNode	ENTRY		568140		True				
ANR	568310	CFGExitNode	EXIT		568140		True				
ANR	568311	Symbol	flag		568140						
ANR	568312	Symbol	T1_SIG_SE		568140						
ANR	568313	Symbol	t1_getspb		568140						
ANR	568314	Symbol	vsc		568140						
ANR	568315	Symbol	mqc_decode		568140						
ANR	568316	Symbol	T1_SIG_SW		568140						
ANR	568317	Symbol	* flagsp		568140						
ANR	568318	Symbol	t1_getctxno_zc		568140						
ANR	568319	Symbol	~T1_VISIT		568140						
ANR	568320	Symbol	* datap		568140						
ANR	568321	Symbol	* t1		568140						
ANR	568322	Symbol	flagsp		568140						
ANR	568323	Symbol	orient		568140						
ANR	568324	Symbol	T1_SIG_S		568140						
ANR	568325	Symbol	T1_VISIT		568140						
ANR	568326	Symbol	datap		568140						
ANR	568327	Symbol	T1_SGN_S		568140						
ANR	568328	Symbol	t1 -> flags_stride		568140						
ANR	568329	Symbol	t1 -> mqc		568140						
ANR	568330	Symbol	t1_getctxno_sc		568140						
ANR	568331	Symbol	v		568140						
ANR	568332	Symbol	T1_SIG		568140						
ANR	568333	Symbol	oneplushalf		568140						
ANR	568334	Symbol	t1		568140						
ANR	568335	Symbol	partial		568140						
ANR	568336	Symbol	mqc		568140						
ANR	568337	Function	t1_enc_clnpass	920:0:24815:27443							
ANR	568338	FunctionDef	"t1_enc_clnpass (opj_t1_t * t1 , int bpno , int orient , int * nmsedec , int cblksty)"		568337	0					
ANR	568339	CompoundStatement		926:0:24926:27443	568337	0					
ANR	568340	IdentifierDeclStatement	"int i , j , k , one , agg , runlen , vsc ;"	927:4:24932:24966	568337	0	True				
ANR	568341	IdentifierDecl	i		568337	0					
ANR	568342	IdentifierDeclType	int		568337	0					
ANR	568343	Identifier	i		568337	1					
ANR	568344	IdentifierDecl	j		568337	1					
ANR	568345	IdentifierDeclType	int		568337	0					
ANR	568346	Identifier	j		568337	1					
ANR	568347	IdentifierDecl	k		568337	2					
ANR	568348	IdentifierDeclType	int		568337	0					
ANR	568349	Identifier	k		568337	1					
ANR	568350	IdentifierDecl	one		568337	3					
ANR	568351	IdentifierDeclType	int		568337	0					
ANR	568352	Identifier	one		568337	1					
ANR	568353	IdentifierDecl	agg		568337	4					
ANR	568354	IdentifierDeclType	int		568337	0					
ANR	568355	Identifier	agg		568337	1					
ANR	568356	IdentifierDecl	runlen		568337	5					
ANR	568357	IdentifierDeclType	int		568337	0					
ANR	568358	Identifier	runlen		568337	1					
ANR	568359	IdentifierDecl	vsc		568337	6					
ANR	568360	IdentifierDeclType	int		568337	0					
ANR	568361	Identifier	vsc		568337	1					
ANR	568362	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	929:4:24973:24997	568337	1	True				
ANR	568363	IdentifierDecl	* mqc = t1 -> mqc		568337	0					
ANR	568364	IdentifierDeclType	opj_mqc_t *		568337	0					
ANR	568365	Identifier	mqc		568337	1					
ANR	568366	AssignmentExpression	* mqc = t1 -> mqc		568337	2		=			
ANR	568367	Identifier	mqc		568337	0					
ANR	568368	PtrMemberAccess	t1 -> mqc		568337	1					
ANR	568369	Identifier	t1		568337	0					
ANR	568370	Identifier	mqc		568337	1					
ANR	568371	ExpressionStatement	* nmsedec = 0	931:4:25026:25038	568337	2	True				
ANR	568372	AssignmentExpression	* nmsedec = 0		568337	0		=			
ANR	568373	UnaryOperationExpression	* nmsedec		568337	0					
ANR	568374	UnaryOperator	*		568337	0					
ANR	568375	Identifier	nmsedec		568337	1					
ANR	568376	PrimaryExpression	0		568337	1					
ANR	568377	ExpressionStatement	one = 1 << ( bpno + T1_NMSEDEC_FRACBITS )	932:4:25044:25083	568337	3	True				
ANR	568378	AssignmentExpression	one = 1 << ( bpno + T1_NMSEDEC_FRACBITS )		568337	0		=			
ANR	568379	Identifier	one		568337	0					
ANR	568380	ShiftExpression	1 << ( bpno + T1_NMSEDEC_FRACBITS )		568337	1		<<			
ANR	568381	PrimaryExpression	1		568337	0					
ANR	568382	AdditiveExpression	bpno + T1_NMSEDEC_FRACBITS		568337	1		+			
ANR	568383	Identifier	bpno		568337	0					
ANR	568384	Identifier	T1_NMSEDEC_FRACBITS		568337	1					
ANR	568385	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		568337	4					
ANR	568386	ForInit	k = 0 ;	933:9:25094:25099	568337	0	True				
ANR	568387	AssignmentExpression	k = 0		568337	0		=			
ANR	568388	Identifier	k		568337	0					
ANR	568389	PrimaryExpression	0		568337	1					
ANR	568390	Condition	k < t1 -> h	933:16:25101:25109	568337	1	True				
ANR	568391	RelationalExpression	k < t1 -> h		568337	0		<			
ANR	568392	Identifier	k		568337	0					
ANR	568393	PtrMemberAccess	t1 -> h		568337	1					
ANR	568394	Identifier	t1		568337	0					
ANR	568395	Identifier	h		568337	1					
ANR	568396	AssignmentExpression	k += 4	933:27:25112:25117	568337	2	True	+=			
ANR	568397	Identifier	k		568337	0					
ANR	568398	PrimaryExpression	4		568337	1					
ANR	568399	CompoundStatement		8:35:193:193	568337	3					
ANR	568400	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		568337	0					
ANR	568401	ForInit	i = 0 ;	934:13:25135:25140	568337	0	True				
ANR	568402	AssignmentExpression	i = 0		568337	0		=			
ANR	568403	Identifier	i		568337	0					
ANR	568404	PrimaryExpression	0		568337	1					
ANR	568405	Condition	i < t1 -> w	934:20:25142:25150	568337	1	True				
ANR	568406	RelationalExpression	i < t1 -> w		568337	0		<			
ANR	568407	Identifier	i		568337	0					
ANR	568408	PtrMemberAccess	t1 -> w		568337	1					
ANR	568409	Identifier	t1		568337	0					
ANR	568410	Identifier	w		568337	1					
ANR	568411	UnaryExpression	++ i	934:31:25153:25155	568337	2	True				
ANR	568412	IncDec	++		568337	0					
ANR	568413	Identifier	i		568337	1					
ANR	568414	CompoundStatement		9:36:231:231	568337	3					
ANR	568415	IfStatement	if ( k + 3 < t1 -> h )		568337	0					
ANR	568416	Condition	k + 3 < t1 -> h	935:16:25176:25188	568337	0	True				
ANR	568417	RelationalExpression	k + 3 < t1 -> h		568337	0		<			
ANR	568418	AdditiveExpression	k + 3		568337	0		+			
ANR	568419	Identifier	k		568337	0					
ANR	568420	PrimaryExpression	3		568337	1					
ANR	568421	PtrMemberAccess	t1 -> h		568337	1					
ANR	568422	Identifier	t1		568337	0					
ANR	568423	Identifier	h		568337	1					
ANR	568424	CompoundStatement		10:31:264:264	568337	1					
ANR	568425	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_VSC )		568337	0					
ANR	568426	Condition	cblksty & J2K_CCP_CBLKSTY_VSC	936:20:25213:25241	568337	0	True				
ANR	568427	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		568337	0		&			
ANR	568428	Identifier	cblksty		568337	0					
ANR	568429	Identifier	J2K_CCP_CBLKSTY_VSC		568337	1					
ANR	568430	CompoundStatement		11:51:317:317	568337	1					
ANR	568431	ExpressionStatement	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"	937:20:25266:25760	568337	0	True				
ANR	568432	AssignmentExpression	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568337	0		=			
ANR	568433	Identifier	agg		568337	0					
ANR	568434	UnaryOperationExpression	"! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568337	1					
ANR	568435	UnaryOperator	!		568337	0					
ANR	568436	OrExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		||			
ANR	568437	BitAndExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	0		&			
ANR	568438	CallExpression	"MACRO_t1_flags ( 1 + k , 1 + i )"		568337	0					
ANR	568439	Callee	MACRO_t1_flags		568337	0					
ANR	568440	Identifier	MACRO_t1_flags		568337	0					
ANR	568441	ArgumentList	1 + k		568337	1					
ANR	568442	Argument	1 + k		568337	0					
ANR	568443	AdditiveExpression	1 + k		568337	0		+			
ANR	568444	PrimaryExpression	1		568337	0					
ANR	568445	Identifier	k		568337	1					
ANR	568446	Argument	1 + i		568337	1					
ANR	568447	AdditiveExpression	1 + i		568337	0		+			
ANR	568448	PrimaryExpression	1		568337	0					
ANR	568449	Identifier	i		568337	1					
ANR	568450	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568451	Identifier	T1_SIG		568337	0					
ANR	568452	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568453	Identifier	T1_VISIT		568337	0					
ANR	568454	Identifier	T1_SIG_OTH		568337	1					
ANR	568455	OrExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		||			
ANR	568456	BitAndExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	0		&			
ANR	568457	CallExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i )"		568337	0					
ANR	568458	Callee	MACRO_t1_flags		568337	0					
ANR	568459	Identifier	MACRO_t1_flags		568337	0					
ANR	568460	ArgumentList	1 + k + 1		568337	1					
ANR	568461	Argument	1 + k + 1		568337	0					
ANR	568462	AdditiveExpression	1 + k + 1		568337	0		+			
ANR	568463	PrimaryExpression	1		568337	0					
ANR	568464	AdditiveExpression	k + 1		568337	1		+			
ANR	568465	Identifier	k		568337	0					
ANR	568466	PrimaryExpression	1		568337	1					
ANR	568467	Argument	1 + i		568337	1					
ANR	568468	AdditiveExpression	1 + i		568337	0		+			
ANR	568469	PrimaryExpression	1		568337	0					
ANR	568470	Identifier	i		568337	1					
ANR	568471	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568472	Identifier	T1_SIG		568337	0					
ANR	568473	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568474	Identifier	T1_VISIT		568337	0					
ANR	568475	Identifier	T1_SIG_OTH		568337	1					
ANR	568476	OrExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		||			
ANR	568477	BitAndExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	0		&			
ANR	568478	CallExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i )"		568337	0					
ANR	568479	Callee	MACRO_t1_flags		568337	0					
ANR	568480	Identifier	MACRO_t1_flags		568337	0					
ANR	568481	ArgumentList	1 + k + 2		568337	1					
ANR	568482	Argument	1 + k + 2		568337	0					
ANR	568483	AdditiveExpression	1 + k + 2		568337	0		+			
ANR	568484	PrimaryExpression	1		568337	0					
ANR	568485	AdditiveExpression	k + 2		568337	1		+			
ANR	568486	Identifier	k		568337	0					
ANR	568487	PrimaryExpression	2		568337	1					
ANR	568488	Argument	1 + i		568337	1					
ANR	568489	AdditiveExpression	1 + i		568337	0		+			
ANR	568490	PrimaryExpression	1		568337	0					
ANR	568491	Identifier	i		568337	1					
ANR	568492	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568493	Identifier	T1_SIG		568337	0					
ANR	568494	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568495	Identifier	T1_VISIT		568337	0					
ANR	568496	Identifier	T1_SIG_OTH		568337	1					
ANR	568497	BitAndExpression	"( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		&			
ANR	568498	BitAndExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )"		568337	0		&			
ANR	568499	CallExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i )"		568337	0					
ANR	568500	Callee	MACRO_t1_flags		568337	0					
ANR	568501	Identifier	MACRO_t1_flags		568337	0					
ANR	568502	ArgumentList	1 + k + 3		568337	1					
ANR	568503	Argument	1 + k + 3		568337	0					
ANR	568504	AdditiveExpression	1 + k + 3		568337	0		+			
ANR	568505	PrimaryExpression	1		568337	0					
ANR	568506	AdditiveExpression	k + 3		568337	1		+			
ANR	568507	Identifier	k		568337	0					
ANR	568508	PrimaryExpression	3		568337	1					
ANR	568509	Argument	1 + i		568337	1					
ANR	568510	AdditiveExpression	1 + i		568337	0		+			
ANR	568511	PrimaryExpression	1		568337	0					
ANR	568512	Identifier	i		568337	1					
ANR	568513	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		568337	1					
ANR	568514	UnaryOperator	~		568337	0					
ANR	568515	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		568337	1		|			
ANR	568516	Identifier	T1_SIG_S		568337	0					
ANR	568517	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		568337	1		|			
ANR	568518	Identifier	T1_SIG_SE		568337	0					
ANR	568519	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		568337	1		|			
ANR	568520	Identifier	T1_SIG_SW		568337	0					
ANR	568521	Identifier	T1_SGN_S		568337	1					
ANR	568522	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568523	Identifier	T1_SIG		568337	0					
ANR	568524	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568525	Identifier	T1_VISIT		568337	0					
ANR	568526	Identifier	T1_SIG_OTH		568337	1					
ANR	568527	ElseStatement	else		568337	0					
ANR	568528	CompoundStatement		18:23:858:858	568337	0					
ANR	568529	ExpressionStatement	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"	944:20:25807:26176	568337	0	True				
ANR	568530	AssignmentExpression	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568337	0		=			
ANR	568531	Identifier	agg		568337	0					
ANR	568532	UnaryOperationExpression	"! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568337	1					
ANR	568533	UnaryOperator	!		568337	0					
ANR	568534	OrExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		||			
ANR	568535	BitAndExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	0		&			
ANR	568536	CallExpression	"MACRO_t1_flags ( 1 + k , 1 + i )"		568337	0					
ANR	568537	Callee	MACRO_t1_flags		568337	0					
ANR	568538	Identifier	MACRO_t1_flags		568337	0					
ANR	568539	ArgumentList	1 + k		568337	1					
ANR	568540	Argument	1 + k		568337	0					
ANR	568541	AdditiveExpression	1 + k		568337	0		+			
ANR	568542	PrimaryExpression	1		568337	0					
ANR	568543	Identifier	k		568337	1					
ANR	568544	Argument	1 + i		568337	1					
ANR	568545	AdditiveExpression	1 + i		568337	0		+			
ANR	568546	PrimaryExpression	1		568337	0					
ANR	568547	Identifier	i		568337	1					
ANR	568548	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568549	Identifier	T1_SIG		568337	0					
ANR	568550	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568551	Identifier	T1_VISIT		568337	0					
ANR	568552	Identifier	T1_SIG_OTH		568337	1					
ANR	568553	OrExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		||			
ANR	568554	BitAndExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	0		&			
ANR	568555	CallExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i )"		568337	0					
ANR	568556	Callee	MACRO_t1_flags		568337	0					
ANR	568557	Identifier	MACRO_t1_flags		568337	0					
ANR	568558	ArgumentList	1 + k + 1		568337	1					
ANR	568559	Argument	1 + k + 1		568337	0					
ANR	568560	AdditiveExpression	1 + k + 1		568337	0		+			
ANR	568561	PrimaryExpression	1		568337	0					
ANR	568562	AdditiveExpression	k + 1		568337	1		+			
ANR	568563	Identifier	k		568337	0					
ANR	568564	PrimaryExpression	1		568337	1					
ANR	568565	Argument	1 + i		568337	1					
ANR	568566	AdditiveExpression	1 + i		568337	0		+			
ANR	568567	PrimaryExpression	1		568337	0					
ANR	568568	Identifier	i		568337	1					
ANR	568569	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568570	Identifier	T1_SIG		568337	0					
ANR	568571	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568572	Identifier	T1_VISIT		568337	0					
ANR	568573	Identifier	T1_SIG_OTH		568337	1					
ANR	568574	OrExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		||			
ANR	568575	BitAndExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	0		&			
ANR	568576	CallExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i )"		568337	0					
ANR	568577	Callee	MACRO_t1_flags		568337	0					
ANR	568578	Identifier	MACRO_t1_flags		568337	0					
ANR	568579	ArgumentList	1 + k + 2		568337	1					
ANR	568580	Argument	1 + k + 2		568337	0					
ANR	568581	AdditiveExpression	1 + k + 2		568337	0		+			
ANR	568582	PrimaryExpression	1		568337	0					
ANR	568583	AdditiveExpression	k + 2		568337	1		+			
ANR	568584	Identifier	k		568337	0					
ANR	568585	PrimaryExpression	2		568337	1					
ANR	568586	Argument	1 + i		568337	1					
ANR	568587	AdditiveExpression	1 + i		568337	0		+			
ANR	568588	PrimaryExpression	1		568337	0					
ANR	568589	Identifier	i		568337	1					
ANR	568590	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568591	Identifier	T1_SIG		568337	0					
ANR	568592	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568593	Identifier	T1_VISIT		568337	0					
ANR	568594	Identifier	T1_SIG_OTH		568337	1					
ANR	568595	BitAndExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568337	1		&			
ANR	568596	CallExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i )"		568337	0					
ANR	568597	Callee	MACRO_t1_flags		568337	0					
ANR	568598	Identifier	MACRO_t1_flags		568337	0					
ANR	568599	ArgumentList	1 + k + 3		568337	1					
ANR	568600	Argument	1 + k + 3		568337	0					
ANR	568601	AdditiveExpression	1 + k + 3		568337	0		+			
ANR	568602	PrimaryExpression	1		568337	0					
ANR	568603	AdditiveExpression	k + 3		568337	1		+			
ANR	568604	Identifier	k		568337	0					
ANR	568605	PrimaryExpression	3		568337	1					
ANR	568606	Argument	1 + i		568337	1					
ANR	568607	AdditiveExpression	1 + i		568337	0		+			
ANR	568608	PrimaryExpression	1		568337	0					
ANR	568609	Identifier	i		568337	1					
ANR	568610	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568611	Identifier	T1_SIG		568337	0					
ANR	568612	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568337	1		|			
ANR	568613	Identifier	T1_VISIT		568337	0					
ANR	568614	Identifier	T1_SIG_OTH		568337	1					
ANR	568615	ElseStatement	else		568337	0					
ANR	568616	CompoundStatement		24:19:1288:1288	568337	0					
ANR	568617	ExpressionStatement	agg = 0	950:16:26233:26240	568337	0	True				
ANR	568618	AssignmentExpression	agg = 0		568337	0		=			
ANR	568619	Identifier	agg		568337	0					
ANR	568620	PrimaryExpression	0		568337	1					
ANR	568621	IfStatement	if ( agg )		568337	1					
ANR	568622	Condition	agg	952:16:26272:26274	568337	0	True				
ANR	568623	Identifier	agg		568337	0					
ANR	568624	CompoundStatement		27:21:1350:1350	568337	1					
ANR	568625	ForStatement	for ( runlen = 0 ; runlen < 4 ; ++ runlen )		568337	0					
ANR	568626	ForInit	runlen = 0 ;	953:21:26300:26310	568337	0	True				
ANR	568627	AssignmentExpression	runlen = 0		568337	0		=			
ANR	568628	Identifier	runlen		568337	0					
ANR	568629	PrimaryExpression	0		568337	1					
ANR	568630	Condition	runlen < 4	953:33:26312:26321	568337	1	True				
ANR	568631	RelationalExpression	runlen < 4		568337	0		<			
ANR	568632	Identifier	runlen		568337	0					
ANR	568633	PrimaryExpression	4		568337	1					
ANR	568634	UnaryExpression	++ runlen	953:45:26324:26331	568337	2	True				
ANR	568635	IncDec	++		568337	0					
ANR	568636	Identifier	runlen		568337	1					
ANR	568637	CompoundStatement		28:55:1407:1407	568337	3					
ANR	568638	IfStatement	if ( int_abs ( t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ] ) & one )		568337	0					
ANR	568639	Condition	int_abs ( t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ] ) & one	954:24:26360:26408	568337	0	True				
ANR	568640	BitAndExpression	int_abs ( t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ] ) & one		568337	0		&			
ANR	568641	CallExpression	int_abs ( t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ] )		568337	0					
ANR	568642	Callee	int_abs		568337	0					
ANR	568643	Identifier	int_abs		568337	0					
ANR	568644	ArgumentList	t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ]		568337	1					
ANR	568645	Argument	t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ]		568337	0					
ANR	568646	ArrayIndexing	t1 -> data [ ( ( k + runlen ) * t1 -> w ) + i ]		568337	0					
ANR	568647	PtrMemberAccess	t1 -> data		568337	0					
ANR	568648	Identifier	t1		568337	0					
ANR	568649	Identifier	data		568337	1					
ANR	568650	AdditiveExpression	( ( k + runlen ) * t1 -> w ) + i		568337	1		+			
ANR	568651	MultiplicativeExpression	( k + runlen ) * t1 -> w		568337	0		*			
ANR	568652	AdditiveExpression	k + runlen		568337	0		+			
ANR	568653	Identifier	k		568337	0					
ANR	568654	Identifier	runlen		568337	1					
ANR	568655	PtrMemberAccess	t1 -> w		568337	1					
ANR	568656	Identifier	t1		568337	0					
ANR	568657	Identifier	w		568337	1					
ANR	568658	Identifier	i		568337	1					
ANR	568659	Identifier	one		568337	1					
ANR	568660	CompoundStatement		29:75:1484:1484	568337	1					
ANR	568661	BreakStatement	break ;	955:24:26437:26442	568337	0	True				
ANR	568662	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_AGG )"	958:16:26500:26532	568337	1	True				
ANR	568663	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_AGG )"		568337	0					
ANR	568664	Callee	mqc_setcurctx		568337	0					
ANR	568665	Identifier	mqc_setcurctx		568337	0					
ANR	568666	ArgumentList	mqc		568337	1					
ANR	568667	Argument	mqc		568337	0					
ANR	568668	Identifier	mqc		568337	0					
ANR	568669	Argument	T1_CTXNO_AGG		568337	1					
ANR	568670	Identifier	T1_CTXNO_AGG		568337	0					
ANR	568671	ExpressionStatement	"mqc_encode ( mqc , runlen != 4 )"	959:16:26550:26578	568337	2	True				
ANR	568672	CallExpression	"mqc_encode ( mqc , runlen != 4 )"		568337	0					
ANR	568673	Callee	mqc_encode		568337	0					
ANR	568674	Identifier	mqc_encode		568337	0					
ANR	568675	ArgumentList	mqc		568337	1					
ANR	568676	Argument	mqc		568337	0					
ANR	568677	Identifier	mqc		568337	0					
ANR	568678	Argument	runlen != 4		568337	1					
ANR	568679	EqualityExpression	runlen != 4		568337	0		!=			
ANR	568680	Identifier	runlen		568337	0					
ANR	568681	PrimaryExpression	4		568337	1					
ANR	568682	IfStatement	if ( runlen == 4 )		568337	3					
ANR	568683	Condition	runlen == 4	960:20:26600:26610	568337	0	True				
ANR	568684	EqualityExpression	runlen == 4		568337	0		==			
ANR	568685	Identifier	runlen		568337	0					
ANR	568686	PrimaryExpression	4		568337	1					
ANR	568687	CompoundStatement		35:33:1686:1686	568337	1					
ANR	568688	ContinueStatement	continue ;	961:20:26635:26643	568337	0	True				
ANR	568689	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"	963:16:26679:26711	568337	4	True				
ANR	568690	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"		568337	0					
ANR	568691	Callee	mqc_setcurctx		568337	0					
ANR	568692	Identifier	mqc_setcurctx		568337	0					
ANR	568693	ArgumentList	mqc		568337	1					
ANR	568694	Argument	mqc		568337	0					
ANR	568695	Identifier	mqc		568337	0					
ANR	568696	Argument	T1_CTXNO_UNI		568337	1					
ANR	568697	Identifier	T1_CTXNO_UNI		568337	0					
ANR	568698	ExpressionStatement	"mqc_encode ( mqc , runlen >> 1 )"	964:16:26729:26757	568337	5	True				
ANR	568699	CallExpression	"mqc_encode ( mqc , runlen >> 1 )"		568337	0					
ANR	568700	Callee	mqc_encode		568337	0					
ANR	568701	Identifier	mqc_encode		568337	0					
ANR	568702	ArgumentList	mqc		568337	1					
ANR	568703	Argument	mqc		568337	0					
ANR	568704	Identifier	mqc		568337	0					
ANR	568705	Argument	runlen >> 1		568337	1					
ANR	568706	ShiftExpression	runlen >> 1		568337	0		>>			
ANR	568707	Identifier	runlen		568337	0					
ANR	568708	PrimaryExpression	1		568337	1					
ANR	568709	ExpressionStatement	"mqc_encode ( mqc , runlen & 1 )"	965:16:26775:26802	568337	6	True				
ANR	568710	CallExpression	"mqc_encode ( mqc , runlen & 1 )"		568337	0					
ANR	568711	Callee	mqc_encode		568337	0					
ANR	568712	Identifier	mqc_encode		568337	0					
ANR	568713	ArgumentList	mqc		568337	1					
ANR	568714	Argument	mqc		568337	0					
ANR	568715	Identifier	mqc		568337	0					
ANR	568716	Argument	runlen & 1		568337	1					
ANR	568717	BitAndExpression	runlen & 1		568337	0		&			
ANR	568718	Identifier	runlen		568337	0					
ANR	568719	PrimaryExpression	1		568337	1					
ANR	568720	ElseStatement	else		568337	0					
ANR	568721	CompoundStatement		41:19:1896:1896	568337	0					
ANR	568722	ExpressionStatement	runlen = 0	967:16:26841:26851	568337	0	True				
ANR	568723	AssignmentExpression	runlen = 0		568337	0		=			
ANR	568724	Identifier	runlen		568337	0					
ANR	568725	PrimaryExpression	0		568337	1					
ANR	568726	ForStatement	for ( j = k + runlen ; j < k + 4 && j < t1 -> h ; ++ j )		568337	2					
ANR	568727	ForInit	j = k + runlen ;	969:17:26884:26898	568337	0	True				
ANR	568728	AssignmentExpression	j = k + runlen		568337	0		=			
ANR	568729	Identifier	j		568337	0					
ANR	568730	AdditiveExpression	k + runlen		568337	1		+			
ANR	568731	Identifier	k		568337	0					
ANR	568732	Identifier	runlen		568337	1					
ANR	568733	Condition	j < k + 4 && j < t1 -> h	969:33:26900:26921	568337	1	True				
ANR	568734	AndExpression	j < k + 4 && j < t1 -> h		568337	0		&&			
ANR	568735	RelationalExpression	j < k + 4		568337	0		<			
ANR	568736	Identifier	j		568337	0					
ANR	568737	AdditiveExpression	k + 4		568337	1		+			
ANR	568738	Identifier	k		568337	0					
ANR	568739	PrimaryExpression	4		568337	1					
ANR	568740	RelationalExpression	j < t1 -> h		568337	1		<			
ANR	568741	Identifier	j		568337	0					
ANR	568742	PtrMemberAccess	t1 -> h		568337	1					
ANR	568743	Identifier	t1		568337	0					
ANR	568744	Identifier	h		568337	1					
ANR	568745	UnaryExpression	++ j	969:57:26924:26926	568337	2	True				
ANR	568746	IncDec	++		568337	0					
ANR	568747	Identifier	j		568337	1					
ANR	568748	CompoundStatement		44:62:2002:2002	568337	3					
ANR	568749	ExpressionStatement	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0	970:16:26947:27052	568337	0	True				
ANR	568750	AssignmentExpression	vsc = ( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		568337	0		=			
ANR	568751	Identifier	vsc		568337	0					
ANR	568752	ConditionalExpression	( ( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 ) ) ? 1 : 0		568337	1					
ANR	568753	Condition	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		568337	0					
ANR	568754	AndExpression	( cblksty & J2K_CCP_CBLKSTY_VSC ) && ( j == k + 3 || j == t1 -> h - 1 )		568337	0		&&			
ANR	568755	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		568337	0		&			
ANR	568756	Identifier	cblksty		568337	0					
ANR	568757	Identifier	J2K_CCP_CBLKSTY_VSC		568337	1					
ANR	568758	OrExpression	j == k + 3 || j == t1 -> h - 1		568337	1		||			
ANR	568759	EqualityExpression	j == k + 3		568337	0		==			
ANR	568760	Identifier	j		568337	0					
ANR	568761	AdditiveExpression	k + 3		568337	1		+			
ANR	568762	Identifier	k		568337	0					
ANR	568763	PrimaryExpression	3		568337	1					
ANR	568764	EqualityExpression	j == t1 -> h - 1		568337	1		==			
ANR	568765	Identifier	j		568337	0					
ANR	568766	AdditiveExpression	t1 -> h - 1		568337	1		-			
ANR	568767	PtrMemberAccess	t1 -> h		568337	0					
ANR	568768	Identifier	t1		568337	0					
ANR	568769	Identifier	h		568337	1					
ANR	568770	PrimaryExpression	1		568337	1					
ANR	568771	PrimaryExpression	1		568337	1					
ANR	568772	PrimaryExpression	0		568337	2					
ANR	568773	ExpressionStatement	"t1_enc_clnpass_step ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , bpno , one , nmsedec , agg && ( j == k + runlen ) , vsc )"	972:16:27070:27411	568337	1	True				
ANR	568774	CallExpression	"t1_enc_clnpass_step ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , bpno , one , nmsedec , agg && ( j == k + runlen ) , vsc )"		568337	0					
ANR	568775	Callee	t1_enc_clnpass_step		568337	0					
ANR	568776	Identifier	t1_enc_clnpass_step		568337	0					
ANR	568777	ArgumentList	t1		568337	1					
ANR	568778	Argument	t1		568337	0					
ANR	568779	Identifier	t1		568337	0					
ANR	568780	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		568337	1					
ANR	568781	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		568337	0					
ANR	568782	UnaryOperator	&		568337	0					
ANR	568783	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		568337	1					
ANR	568784	PtrMemberAccess	t1 -> flags		568337	0					
ANR	568785	Identifier	t1		568337	0					
ANR	568786	Identifier	flags		568337	1					
ANR	568787	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		568337	1		+			
ANR	568788	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		568337	0		*			
ANR	568789	AdditiveExpression	j + 1		568337	0		+			
ANR	568790	Identifier	j		568337	0					
ANR	568791	PrimaryExpression	1		568337	1					
ANR	568792	PtrMemberAccess	t1 -> flags_stride		568337	1					
ANR	568793	Identifier	t1		568337	0					
ANR	568794	Identifier	flags_stride		568337	1					
ANR	568795	AdditiveExpression	i + 1		568337	1		+			
ANR	568796	Identifier	i		568337	0					
ANR	568797	PrimaryExpression	1		568337	1					
ANR	568798	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		568337	2					
ANR	568799	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		568337	0					
ANR	568800	UnaryOperator	&		568337	0					
ANR	568801	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		568337	1					
ANR	568802	PtrMemberAccess	t1 -> data		568337	0					
ANR	568803	Identifier	t1		568337	0					
ANR	568804	Identifier	data		568337	1					
ANR	568805	AdditiveExpression	( j * t1 -> w ) + i		568337	1		+			
ANR	568806	MultiplicativeExpression	j * t1 -> w		568337	0		*			
ANR	568807	Identifier	j		568337	0					
ANR	568808	PtrMemberAccess	t1 -> w		568337	1					
ANR	568809	Identifier	t1		568337	0					
ANR	568810	Identifier	w		568337	1					
ANR	568811	Identifier	i		568337	1					
ANR	568812	Argument	orient		568337	3					
ANR	568813	Identifier	orient		568337	0					
ANR	568814	Argument	bpno		568337	4					
ANR	568815	Identifier	bpno		568337	0					
ANR	568816	Argument	one		568337	5					
ANR	568817	Identifier	one		568337	0					
ANR	568818	Argument	nmsedec		568337	6					
ANR	568819	Identifier	nmsedec		568337	0					
ANR	568820	Argument	agg && ( j == k + runlen )		568337	7					
ANR	568821	AndExpression	agg && ( j == k + runlen )		568337	0		&&			
ANR	568822	Identifier	agg		568337	0					
ANR	568823	EqualityExpression	j == k + runlen		568337	1		==			
ANR	568824	Identifier	j		568337	0					
ANR	568825	AdditiveExpression	k + runlen		568337	1		+			
ANR	568826	Identifier	k		568337	0					
ANR	568827	Identifier	runlen		568337	1					
ANR	568828	Argument	vsc		568337	8					
ANR	568829	Identifier	vsc		568337	0					
ANR	568830	ReturnType	static void		568337	1					
ANR	568831	Identifier	t1_enc_clnpass		568337	2					
ANR	568832	ParameterList	"opj_t1_t * t1 , int bpno , int orient , int * nmsedec , int cblksty"		568337	3					
ANR	568833	Parameter	opj_t1_t * t1	921:4:24847:24858	568337	0	True				
ANR	568834	ParameterType	opj_t1_t *		568337	0					
ANR	568835	Identifier	t1		568337	1					
ANR	568836	Parameter	int bpno	922:4:24865:24872	568337	1	True				
ANR	568837	ParameterType	int		568337	0					
ANR	568838	Identifier	bpno		568337	1					
ANR	568839	Parameter	int orient	923:4:24879:24888	568337	2	True				
ANR	568840	ParameterType	int		568337	0					
ANR	568841	Identifier	orient		568337	1					
ANR	568842	Parameter	int * nmsedec	924:4:24895:24906	568337	3	True				
ANR	568843	ParameterType	int *		568337	0					
ANR	568844	Identifier	nmsedec		568337	1					
ANR	568845	Parameter	int cblksty	925:4:24913:24923	568337	4	True				
ANR	568846	ParameterType	int		568337	0					
ANR	568847	Identifier	cblksty		568337	1					
ANR	568848	CFGEntryNode	ENTRY		568337		True				
ANR	568849	CFGExitNode	EXIT		568337		True				
ANR	568850	Symbol	agg		568337						
ANR	568851	Symbol	t1 -> w		568337						
ANR	568852	Symbol	T1_SIG_SE		568337						
ANR	568853	Symbol	* runlen		568337						
ANR	568854	Symbol	runlen		568337						
ANR	568855	Symbol	vsc		568337						
ANR	568856	Symbol	* nmsedec		568337						
ANR	568857	Symbol	int_abs		568337						
ANR	568858	Symbol	T1_SIG_SW		568337						
ANR	568859	Symbol	T1_CTXNO_UNI		568337						
ANR	568860	Symbol	T1_SIG_OTH		568337						
ANR	568861	Symbol	nmsedec		568337						
ANR	568862	Symbol	* t1		568337						
ANR	568863	Symbol	T1_NMSEDEC_FRACBITS		568337						
ANR	568864	Symbol	bpno		568337						
ANR	568865	Symbol	orient		568337						
ANR	568866	Symbol	t1 -> flags		568337						
ANR	568867	Symbol	one		568337						
ANR	568868	Symbol	T1_SIG_S		568337						
ANR	568869	Symbol	T1_VISIT		568337						
ANR	568870	Symbol	i		568337						
ANR	568871	Symbol	T1_CTXNO_AGG		568337						
ANR	568872	Symbol	j		568337						
ANR	568873	Symbol	J2K_CCP_CBLKSTY_VSC		568337						
ANR	568874	Symbol	t1 -> data		568337						
ANR	568875	Symbol	k		568337						
ANR	568876	Symbol	* * t1		568337						
ANR	568877	Symbol	T1_SGN_S		568337						
ANR	568878	Symbol	cblksty		568337						
ANR	568879	Symbol	t1 -> flags_stride		568337						
ANR	568880	Symbol	* i		568337						
ANR	568881	Symbol	t1 -> mqc		568337						
ANR	568882	Symbol	t1 -> h		568337						
ANR	568883	Symbol	* t1 -> data		568337						
ANR	568884	Symbol	* k		568337						
ANR	568885	Symbol	MACRO_t1_flags		568337						
ANR	568886	Symbol	T1_SIG		568337						
ANR	568887	Symbol	t1		568337						
ANR	568888	Symbol	* t1 -> w		568337						
ANR	568889	Symbol	mqc		568337						
ANR	568890	Function	t1_dec_clnpass	987:0:27446:32554							
ANR	568891	FunctionDef	"t1_dec_clnpass (opj_t1_t * t1 , int bpno , int orient , int cblksty)"		568890	0					
ANR	568892	CompoundStatement		992:0:27539:32554	568890	0					
ANR	568893	IdentifierDeclStatement	"int i , j , k , one , half , oneplushalf , agg , runlen , vsc ;"	993:4:27545:27598	568890	0	True				
ANR	568894	IdentifierDecl	i		568890	0					
ANR	568895	IdentifierDeclType	int		568890	0					
ANR	568896	Identifier	i		568890	1					
ANR	568897	IdentifierDecl	j		568890	1					
ANR	568898	IdentifierDeclType	int		568890	0					
ANR	568899	Identifier	j		568890	1					
ANR	568900	IdentifierDecl	k		568890	2					
ANR	568901	IdentifierDeclType	int		568890	0					
ANR	568902	Identifier	k		568890	1					
ANR	568903	IdentifierDecl	one		568890	3					
ANR	568904	IdentifierDeclType	int		568890	0					
ANR	568905	Identifier	one		568890	1					
ANR	568906	IdentifierDecl	half		568890	4					
ANR	568907	IdentifierDeclType	int		568890	0					
ANR	568908	Identifier	half		568890	1					
ANR	568909	IdentifierDecl	oneplushalf		568890	5					
ANR	568910	IdentifierDeclType	int		568890	0					
ANR	568911	Identifier	oneplushalf		568890	1					
ANR	568912	IdentifierDecl	agg		568890	6					
ANR	568913	IdentifierDeclType	int		568890	0					
ANR	568914	Identifier	agg		568890	1					
ANR	568915	IdentifierDecl	runlen		568890	7					
ANR	568916	IdentifierDeclType	int		568890	0					
ANR	568917	Identifier	runlen		568890	1					
ANR	568918	IdentifierDecl	vsc		568890	8					
ANR	568919	IdentifierDeclType	int		568890	0					
ANR	568920	Identifier	vsc		568890	1					
ANR	568921	IdentifierDeclStatement	int segsym = cblksty & J2K_CCP_CBLKSTY_SEGSYM ;	994:4:27604:27649	568890	1	True				
ANR	568922	IdentifierDecl	segsym = cblksty & J2K_CCP_CBLKSTY_SEGSYM		568890	0					
ANR	568923	IdentifierDeclType	int		568890	0					
ANR	568924	Identifier	segsym		568890	1					
ANR	568925	AssignmentExpression	segsym = cblksty & J2K_CCP_CBLKSTY_SEGSYM		568890	2		=			
ANR	568926	Identifier	segsym		568890	0					
ANR	568927	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_SEGSYM		568890	1		&			
ANR	568928	Identifier	cblksty		568890	0					
ANR	568929	Identifier	J2K_CCP_CBLKSTY_SEGSYM		568890	1					
ANR	568930	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	996:4:27656:27680	568890	2	True				
ANR	568931	IdentifierDecl	* mqc = t1 -> mqc		568890	0					
ANR	568932	IdentifierDeclType	opj_mqc_t *		568890	0					
ANR	568933	Identifier	mqc		568890	1					
ANR	568934	AssignmentExpression	* mqc = t1 -> mqc		568890	2		=			
ANR	568935	Identifier	mqc		568890	0					
ANR	568936	PtrMemberAccess	t1 -> mqc		568890	1					
ANR	568937	Identifier	t1		568890	0					
ANR	568938	Identifier	mqc		568890	1					
ANR	568939	ExpressionStatement	one = 1 << bpno	998:4:27709:27724	568890	3	True				
ANR	568940	AssignmentExpression	one = 1 << bpno		568890	0		=			
ANR	568941	Identifier	one		568890	0					
ANR	568942	ShiftExpression	1 << bpno		568890	1		<<			
ANR	568943	PrimaryExpression	1		568890	0					
ANR	568944	Identifier	bpno		568890	1					
ANR	568945	ExpressionStatement	half = one >> 1	999:4:27730:27745	568890	4	True				
ANR	568946	AssignmentExpression	half = one >> 1		568890	0		=			
ANR	568947	Identifier	half		568890	0					
ANR	568948	ShiftExpression	one >> 1		568890	1		>>			
ANR	568949	Identifier	one		568890	0					
ANR	568950	PrimaryExpression	1		568890	1					
ANR	568951	ExpressionStatement	oneplushalf = one | half	1000:4:27751:27775	568890	5	True				
ANR	568952	AssignmentExpression	oneplushalf = one | half		568890	0		=			
ANR	568953	Identifier	oneplushalf		568890	0					
ANR	568954	InclusiveOrExpression	one | half		568890	1		|			
ANR	568955	Identifier	one		568890	0					
ANR	568956	Identifier	half		568890	1					
ANR	568957	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_VSC )		568890	6					
ANR	568958	Condition	cblksty & J2K_CCP_CBLKSTY_VSC	1001:8:27785:27813	568890	0	True				
ANR	568959	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		568890	0		&			
ANR	568960	Identifier	cblksty		568890	0					
ANR	568961	Identifier	J2K_CCP_CBLKSTY_VSC		568890	1					
ANR	568962	CompoundStatement		10:39:276:276	568890	1					
ANR	568963	ForStatement	for ( k = 0 ; k < t1 -> h ; k += 4 )		568890	0					
ANR	568964	ForInit	k = 0 ;	1002:13:27831:27836	568890	0	True				
ANR	568965	AssignmentExpression	k = 0		568890	0		=			
ANR	568966	Identifier	k		568890	0					
ANR	568967	PrimaryExpression	0		568890	1					
ANR	568968	Condition	k < t1 -> h	1002:20:27838:27846	568890	1	True				
ANR	568969	RelationalExpression	k < t1 -> h		568890	0		<			
ANR	568970	Identifier	k		568890	0					
ANR	568971	PtrMemberAccess	t1 -> h		568890	1					
ANR	568972	Identifier	t1		568890	0					
ANR	568973	Identifier	h		568890	1					
ANR	568974	AssignmentExpression	k += 4	1002:31:27849:27854	568890	2	True	+=			
ANR	568975	Identifier	k		568890	0					
ANR	568976	PrimaryExpression	4		568890	1					
ANR	568977	CompoundStatement		11:39:317:317	568890	3					
ANR	568978	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		568890	0					
ANR	568979	ForInit	i = 0 ;	1003:17:27876:27881	568890	0	True				
ANR	568980	AssignmentExpression	i = 0		568890	0		=			
ANR	568981	Identifier	i		568890	0					
ANR	568982	PrimaryExpression	0		568890	1					
ANR	568983	Condition	i < t1 -> w	1003:24:27883:27891	568890	1	True				
ANR	568984	RelationalExpression	i < t1 -> w		568890	0		<			
ANR	568985	Identifier	i		568890	0					
ANR	568986	PtrMemberAccess	t1 -> w		568890	1					
ANR	568987	Identifier	t1		568890	0					
ANR	568988	Identifier	w		568890	1					
ANR	568989	UnaryExpression	++ i	1003:35:27894:27896	568890	2	True				
ANR	568990	IncDec	++		568890	0					
ANR	568991	Identifier	i		568890	1					
ANR	568992	CompoundStatement		12:40:359:359	568890	3					
ANR	568993	IfStatement	if ( k + 3 < t1 -> h )		568890	0					
ANR	568994	Condition	k + 3 < t1 -> h	1004:20:27921:27933	568890	0	True				
ANR	568995	RelationalExpression	k + 3 < t1 -> h		568890	0		<			
ANR	568996	AdditiveExpression	k + 3		568890	0		+			
ANR	568997	Identifier	k		568890	0					
ANR	568998	PrimaryExpression	3		568890	1					
ANR	568999	PtrMemberAccess	t1 -> h		568890	1					
ANR	569000	Identifier	t1		568890	0					
ANR	569001	Identifier	h		568890	1					
ANR	569002	CompoundStatement		13:35:396:396	568890	1					
ANR	569003	ExpressionStatement	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"	1005:20:27958:28452	568890	0	True				
ANR	569004	AssignmentExpression	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568890	0		=			
ANR	569005	Identifier	agg		568890	0					
ANR	569006	UnaryOperationExpression	"! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568890	1					
ANR	569007	UnaryOperator	!		568890	0					
ANR	569008	OrExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		||			
ANR	569009	BitAndExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	0		&			
ANR	569010	CallExpression	"MACRO_t1_flags ( 1 + k , 1 + i )"		568890	0					
ANR	569011	Callee	MACRO_t1_flags		568890	0					
ANR	569012	Identifier	MACRO_t1_flags		568890	0					
ANR	569013	ArgumentList	1 + k		568890	1					
ANR	569014	Argument	1 + k		568890	0					
ANR	569015	AdditiveExpression	1 + k		568890	0		+			
ANR	569016	PrimaryExpression	1		568890	0					
ANR	569017	Identifier	k		568890	1					
ANR	569018	Argument	1 + i		568890	1					
ANR	569019	AdditiveExpression	1 + i		568890	0		+			
ANR	569020	PrimaryExpression	1		568890	0					
ANR	569021	Identifier	i		568890	1					
ANR	569022	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569023	Identifier	T1_SIG		568890	0					
ANR	569024	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569025	Identifier	T1_VISIT		568890	0					
ANR	569026	Identifier	T1_SIG_OTH		568890	1					
ANR	569027	OrExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		||			
ANR	569028	BitAndExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	0		&			
ANR	569029	CallExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i )"		568890	0					
ANR	569030	Callee	MACRO_t1_flags		568890	0					
ANR	569031	Identifier	MACRO_t1_flags		568890	0					
ANR	569032	ArgumentList	1 + k + 1		568890	1					
ANR	569033	Argument	1 + k + 1		568890	0					
ANR	569034	AdditiveExpression	1 + k + 1		568890	0		+			
ANR	569035	PrimaryExpression	1		568890	0					
ANR	569036	AdditiveExpression	k + 1		568890	1		+			
ANR	569037	Identifier	k		568890	0					
ANR	569038	PrimaryExpression	1		568890	1					
ANR	569039	Argument	1 + i		568890	1					
ANR	569040	AdditiveExpression	1 + i		568890	0		+			
ANR	569041	PrimaryExpression	1		568890	0					
ANR	569042	Identifier	i		568890	1					
ANR	569043	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569044	Identifier	T1_SIG		568890	0					
ANR	569045	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569046	Identifier	T1_VISIT		568890	0					
ANR	569047	Identifier	T1_SIG_OTH		568890	1					
ANR	569048	OrExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || ( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		||			
ANR	569049	BitAndExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	0		&			
ANR	569050	CallExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i )"		568890	0					
ANR	569051	Callee	MACRO_t1_flags		568890	0					
ANR	569052	Identifier	MACRO_t1_flags		568890	0					
ANR	569053	ArgumentList	1 + k + 2		568890	1					
ANR	569054	Argument	1 + k + 2		568890	0					
ANR	569055	AdditiveExpression	1 + k + 2		568890	0		+			
ANR	569056	PrimaryExpression	1		568890	0					
ANR	569057	AdditiveExpression	k + 2		568890	1		+			
ANR	569058	Identifier	k		568890	0					
ANR	569059	PrimaryExpression	2		568890	1					
ANR	569060	Argument	1 + i		568890	1					
ANR	569061	AdditiveExpression	1 + i		568890	0		+			
ANR	569062	PrimaryExpression	1		568890	0					
ANR	569063	Identifier	i		568890	1					
ANR	569064	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569065	Identifier	T1_SIG		568890	0					
ANR	569066	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569067	Identifier	T1_VISIT		568890	0					
ANR	569068	Identifier	T1_SIG_OTH		568890	1					
ANR	569069	BitAndExpression	"( MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) ) ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		&			
ANR	569070	BitAndExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( ~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S ) )"		568890	0		&			
ANR	569071	CallExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i )"		568890	0					
ANR	569072	Callee	MACRO_t1_flags		568890	0					
ANR	569073	Identifier	MACRO_t1_flags		568890	0					
ANR	569074	ArgumentList	1 + k + 3		568890	1					
ANR	569075	Argument	1 + k + 3		568890	0					
ANR	569076	AdditiveExpression	1 + k + 3		568890	0		+			
ANR	569077	PrimaryExpression	1		568890	0					
ANR	569078	AdditiveExpression	k + 3		568890	1		+			
ANR	569079	Identifier	k		568890	0					
ANR	569080	PrimaryExpression	3		568890	1					
ANR	569081	Argument	1 + i		568890	1					
ANR	569082	AdditiveExpression	1 + i		568890	0		+			
ANR	569083	PrimaryExpression	1		568890	0					
ANR	569084	Identifier	i		568890	1					
ANR	569085	UnaryOperationExpression	~ ( T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S )		568890	1					
ANR	569086	UnaryOperator	~		568890	0					
ANR	569087	InclusiveOrExpression	T1_SIG_S | T1_SIG_SE | T1_SIG_SW | T1_SGN_S		568890	1		|			
ANR	569088	Identifier	T1_SIG_S		568890	0					
ANR	569089	InclusiveOrExpression	T1_SIG_SE | T1_SIG_SW | T1_SGN_S		568890	1		|			
ANR	569090	Identifier	T1_SIG_SE		568890	0					
ANR	569091	InclusiveOrExpression	T1_SIG_SW | T1_SGN_S		568890	1		|			
ANR	569092	Identifier	T1_SIG_SW		568890	0					
ANR	569093	Identifier	T1_SGN_S		568890	1					
ANR	569094	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569095	Identifier	T1_SIG		568890	0					
ANR	569096	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569097	Identifier	T1_VISIT		568890	0					
ANR	569098	Identifier	T1_SIG_OTH		568890	1					
ANR	569099	ElseStatement	else		568890	0					
ANR	569100	CompoundStatement		20:23:937:937	568890	0					
ANR	569101	ExpressionStatement	agg = 0	1012:20:28499:28506	568890	0	True				
ANR	569102	AssignmentExpression	agg = 0		568890	0		=			
ANR	569103	Identifier	agg		568890	0					
ANR	569104	PrimaryExpression	0		568890	1					
ANR	569105	IfStatement	if ( agg )		568890	1					
ANR	569106	Condition	agg	1014:20:28546:28548	568890	0	True				
ANR	569107	Identifier	agg		568890	0					
ANR	569108	CompoundStatement		23:25:1011:1011	568890	1					
ANR	569109	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_AGG )"	1015:20:28573:28605	568890	0	True				
ANR	569110	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_AGG )"		568890	0					
ANR	569111	Callee	mqc_setcurctx		568890	0					
ANR	569112	Identifier	mqc_setcurctx		568890	0					
ANR	569113	ArgumentList	mqc		568890	1					
ANR	569114	Argument	mqc		568890	0					
ANR	569115	Identifier	mqc		568890	0					
ANR	569116	Argument	T1_CTXNO_AGG		568890	1					
ANR	569117	Identifier	T1_CTXNO_AGG		568890	0					
ANR	569118	IfStatement	if ( ! mqc_decode ( mqc ) )		568890	1					
ANR	569119	Condition	! mqc_decode ( mqc )	1016:24:28631:28646	568890	0	True				
ANR	569120	UnaryOperationExpression	! mqc_decode ( mqc )		568890	0					
ANR	569121	UnaryOperator	!		568890	0					
ANR	569122	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569123	Callee	mqc_decode		568890	0					
ANR	569124	Identifier	mqc_decode		568890	0					
ANR	569125	ArgumentList	mqc		568890	1					
ANR	569126	Argument	mqc		568890	0					
ANR	569127	Identifier	mqc		568890	0					
ANR	569128	CompoundStatement		25:42:1109:1109	568890	1					
ANR	569129	ContinueStatement	continue ;	1017:24:28675:28683	568890	0	True				
ANR	569130	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"	1019:20:28727:28759	568890	2	True				
ANR	569131	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"		568890	0					
ANR	569132	Callee	mqc_setcurctx		568890	0					
ANR	569133	Identifier	mqc_setcurctx		568890	0					
ANR	569134	ArgumentList	mqc		568890	1					
ANR	569135	Argument	mqc		568890	0					
ANR	569136	Identifier	mqc		568890	0					
ANR	569137	Argument	T1_CTXNO_UNI		568890	1					
ANR	569138	Identifier	T1_CTXNO_UNI		568890	0					
ANR	569139	ExpressionStatement	runlen = mqc_decode ( mqc )	1020:20:28781:28805	568890	3	True				
ANR	569140	AssignmentExpression	runlen = mqc_decode ( mqc )		568890	0		=			
ANR	569141	Identifier	runlen		568890	0					
ANR	569142	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569143	Callee	mqc_decode		568890	0					
ANR	569144	Identifier	mqc_decode		568890	0					
ANR	569145	ArgumentList	mqc		568890	1					
ANR	569146	Argument	mqc		568890	0					
ANR	569147	Identifier	mqc		568890	0					
ANR	569148	ExpressionStatement	runlen = ( runlen << 1 ) | mqc_decode ( mqc )	1021:20:28827:28867	568890	4	True				
ANR	569149	AssignmentExpression	runlen = ( runlen << 1 ) | mqc_decode ( mqc )		568890	0		=			
ANR	569150	Identifier	runlen		568890	0					
ANR	569151	InclusiveOrExpression	( runlen << 1 ) | mqc_decode ( mqc )		568890	1		|			
ANR	569152	ShiftExpression	runlen << 1		568890	0		<<			
ANR	569153	Identifier	runlen		568890	0					
ANR	569154	PrimaryExpression	1		568890	1					
ANR	569155	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569156	Callee	mqc_decode		568890	0					
ANR	569157	Identifier	mqc_decode		568890	0					
ANR	569158	ArgumentList	mqc		568890	1					
ANR	569159	Argument	mqc		568890	0					
ANR	569160	Identifier	mqc		568890	0					
ANR	569161	ElseStatement	else		568890	0					
ANR	569162	CompoundStatement		31:23:1352:1352	568890	0					
ANR	569163	ExpressionStatement	runlen = 0	1023:20:28914:28924	568890	0	True				
ANR	569164	AssignmentExpression	runlen = 0		568890	0		=			
ANR	569165	Identifier	runlen		568890	0					
ANR	569166	PrimaryExpression	0		568890	1					
ANR	569167	ForStatement	for ( j = k + runlen ; j < k + 4 && j < t1 -> h ; ++ j )		568890	2					
ANR	569168	ForInit	j = k + runlen ;	1025:21:28965:28979	568890	0	True				
ANR	569169	AssignmentExpression	j = k + runlen		568890	0		=			
ANR	569170	Identifier	j		568890	0					
ANR	569171	AdditiveExpression	k + runlen		568890	1		+			
ANR	569172	Identifier	k		568890	0					
ANR	569173	Identifier	runlen		568890	1					
ANR	569174	Condition	j < k + 4 && j < t1 -> h	1025:37:28981:29002	568890	1	True				
ANR	569175	AndExpression	j < k + 4 && j < t1 -> h		568890	0		&&			
ANR	569176	RelationalExpression	j < k + 4		568890	0		<			
ANR	569177	Identifier	j		568890	0					
ANR	569178	AdditiveExpression	k + 4		568890	1		+			
ANR	569179	Identifier	k		568890	0					
ANR	569180	PrimaryExpression	4		568890	1					
ANR	569181	RelationalExpression	j < t1 -> h		568890	1		<			
ANR	569182	Identifier	j		568890	0					
ANR	569183	PtrMemberAccess	t1 -> h		568890	1					
ANR	569184	Identifier	t1		568890	0					
ANR	569185	Identifier	h		568890	1					
ANR	569186	UnaryExpression	++ j	1025:61:29005:29007	568890	2	True				
ANR	569187	IncDec	++		568890	0					
ANR	569188	Identifier	j		568890	1					
ANR	569189	CompoundStatement		34:66:1470:1470	568890	3					
ANR	569190	ExpressionStatement	vsc = ( j == k + 3 || j == t1 -> h - 1 ) ? 1 : 0	1026:20:29032:29076	568890	0	True				
ANR	569191	AssignmentExpression	vsc = ( j == k + 3 || j == t1 -> h - 1 ) ? 1 : 0		568890	0		=			
ANR	569192	Identifier	vsc		568890	0					
ANR	569193	ConditionalExpression	( j == k + 3 || j == t1 -> h - 1 ) ? 1 : 0		568890	1					
ANR	569194	Condition	j == k + 3 || j == t1 -> h - 1		568890	0					
ANR	569195	OrExpression	j == k + 3 || j == t1 -> h - 1		568890	0		||			
ANR	569196	EqualityExpression	j == k + 3		568890	0		==			
ANR	569197	Identifier	j		568890	0					
ANR	569198	AdditiveExpression	k + 3		568890	1		+			
ANR	569199	Identifier	k		568890	0					
ANR	569200	PrimaryExpression	3		568890	1					
ANR	569201	EqualityExpression	j == t1 -> h - 1		568890	1		==			
ANR	569202	Identifier	j		568890	0					
ANR	569203	AdditiveExpression	t1 -> h - 1		568890	1		-			
ANR	569204	PtrMemberAccess	t1 -> h		568890	0					
ANR	569205	Identifier	t1		568890	0					
ANR	569206	Identifier	h		568890	1					
ANR	569207	PrimaryExpression	1		568890	1					
ANR	569208	PrimaryExpression	1		568890	1					
ANR	569209	PrimaryExpression	0		568890	2					
ANR	569210	ExpressionStatement	"t1_dec_clnpass_step_vsc ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , oneplushalf , agg && ( j == k + runlen ) , vsc )"	1027:20:29098:29424	568890	1	True				
ANR	569211	CallExpression	"t1_dec_clnpass_step_vsc ( t1 , & t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ] , & t1 -> data [ ( j * t1 -> w ) + i ] , orient , oneplushalf , agg && ( j == k + runlen ) , vsc )"		568890	0					
ANR	569212	Callee	t1_dec_clnpass_step_vsc		568890	0					
ANR	569213	Identifier	t1_dec_clnpass_step_vsc		568890	0					
ANR	569214	ArgumentList	t1		568890	1					
ANR	569215	Argument	t1		568890	0					
ANR	569216	Identifier	t1		568890	0					
ANR	569217	Argument	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		568890	1					
ANR	569218	UnaryOperationExpression	& t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		568890	0					
ANR	569219	UnaryOperator	&		568890	0					
ANR	569220	ArrayIndexing	t1 -> flags [ ( ( j + 1 ) * t1 -> flags_stride ) + i + 1 ]		568890	1					
ANR	569221	PtrMemberAccess	t1 -> flags		568890	0					
ANR	569222	Identifier	t1		568890	0					
ANR	569223	Identifier	flags		568890	1					
ANR	569224	AdditiveExpression	( ( j + 1 ) * t1 -> flags_stride ) + i + 1		568890	1		+			
ANR	569225	MultiplicativeExpression	( j + 1 ) * t1 -> flags_stride		568890	0		*			
ANR	569226	AdditiveExpression	j + 1		568890	0		+			
ANR	569227	Identifier	j		568890	0					
ANR	569228	PrimaryExpression	1		568890	1					
ANR	569229	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569230	Identifier	t1		568890	0					
ANR	569231	Identifier	flags_stride		568890	1					
ANR	569232	AdditiveExpression	i + 1		568890	1		+			
ANR	569233	Identifier	i		568890	0					
ANR	569234	PrimaryExpression	1		568890	1					
ANR	569235	Argument	& t1 -> data [ ( j * t1 -> w ) + i ]		568890	2					
ANR	569236	UnaryOperationExpression	& t1 -> data [ ( j * t1 -> w ) + i ]		568890	0					
ANR	569237	UnaryOperator	&		568890	0					
ANR	569238	ArrayIndexing	t1 -> data [ ( j * t1 -> w ) + i ]		568890	1					
ANR	569239	PtrMemberAccess	t1 -> data		568890	0					
ANR	569240	Identifier	t1		568890	0					
ANR	569241	Identifier	data		568890	1					
ANR	569242	AdditiveExpression	( j * t1 -> w ) + i		568890	1		+			
ANR	569243	MultiplicativeExpression	j * t1 -> w		568890	0		*			
ANR	569244	Identifier	j		568890	0					
ANR	569245	PtrMemberAccess	t1 -> w		568890	1					
ANR	569246	Identifier	t1		568890	0					
ANR	569247	Identifier	w		568890	1					
ANR	569248	Identifier	i		568890	1					
ANR	569249	Argument	orient		568890	3					
ANR	569250	Identifier	orient		568890	0					
ANR	569251	Argument	oneplushalf		568890	4					
ANR	569252	Identifier	oneplushalf		568890	0					
ANR	569253	Argument	agg && ( j == k + runlen )		568890	5					
ANR	569254	AndExpression	agg && ( j == k + runlen )		568890	0		&&			
ANR	569255	Identifier	agg		568890	0					
ANR	569256	EqualityExpression	j == k + runlen		568890	1		==			
ANR	569257	Identifier	j		568890	0					
ANR	569258	AdditiveExpression	k + runlen		568890	1		+			
ANR	569259	Identifier	k		568890	0					
ANR	569260	Identifier	runlen		568890	1					
ANR	569261	Argument	vsc		568890	6					
ANR	569262	Identifier	vsc		568890	0					
ANR	569263	ElseStatement	else		568890	0					
ANR	569264	CompoundStatement		49:8:1980:2010	568890	0					
ANR	569265	IdentifierDeclStatement	int * data1 = t1 -> data ;	1039:8:29489:29510	568890	0	True				
ANR	569266	IdentifierDecl	* data1 = t1 -> data		568890	0					
ANR	569267	IdentifierDeclType	int *		568890	0					
ANR	569268	Identifier	data1		568890	1					
ANR	569269	AssignmentExpression	* data1 = t1 -> data		568890	2		=			
ANR	569270	Identifier	data1		568890	0					
ANR	569271	PtrMemberAccess	t1 -> data		568890	1					
ANR	569272	Identifier	t1		568890	0					
ANR	569273	Identifier	data		568890	1					
ANR	569274	IdentifierDeclStatement	flag_t * flags1 = & t1 -> flags [ 1 ] ;	1040:8:29520:29550	568890	1	True				
ANR	569275	IdentifierDecl	* flags1 = & t1 -> flags [ 1 ]		568890	0					
ANR	569276	IdentifierDeclType	flag_t *		568890	0					
ANR	569277	Identifier	flags1		568890	1					
ANR	569278	AssignmentExpression	* flags1 = & t1 -> flags [ 1 ]		568890	2		=			
ANR	569279	Identifier	flags1		568890	0					
ANR	569280	UnaryOperationExpression	& t1 -> flags [ 1 ]		568890	1					
ANR	569281	UnaryOperator	&		568890	0					
ANR	569282	ArrayIndexing	t1 -> flags [ 1 ]		568890	1					
ANR	569283	PtrMemberAccess	t1 -> flags		568890	0					
ANR	569284	Identifier	t1		568890	0					
ANR	569285	Identifier	flags		568890	1					
ANR	569286	PrimaryExpression	1		568890	1					
ANR	569287	ForStatement	for ( k = 0 ; k < ( t1 -> h & ~3 ) ; k += 4 )		568890	2					
ANR	569288	ForInit	k = 0 ;	1041:13:29565:29570	568890	0	True				
ANR	569289	AssignmentExpression	k = 0		568890	0		=			
ANR	569290	Identifier	k		568890	0					
ANR	569291	PrimaryExpression	0		568890	1					
ANR	569292	Condition	k < ( t1 -> h & ~3 )	1041:20:29572:29587	568890	1	True				
ANR	569293	RelationalExpression	k < ( t1 -> h & ~3 )		568890	0		<			
ANR	569294	Identifier	k		568890	0					
ANR	569295	BitAndExpression	t1 -> h & ~3		568890	1		&			
ANR	569296	PtrMemberAccess	t1 -> h		568890	0					
ANR	569297	Identifier	t1		568890	0					
ANR	569298	Identifier	h		568890	1					
ANR	569299	Identifier	~3		568890	1					
ANR	569300	AssignmentExpression	k += 4	1041:38:29590:29595	568890	2	True	+=			
ANR	569301	Identifier	k		568890	0					
ANR	569302	PrimaryExpression	4		568890	1					
ANR	569303	CompoundStatement		50:46:2058:2058	568890	3					
ANR	569304	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		568890	0					
ANR	569305	ForInit	i = 0 ;	1042:17:29617:29622	568890	0	True				
ANR	569306	AssignmentExpression	i = 0		568890	0		=			
ANR	569307	Identifier	i		568890	0					
ANR	569308	PrimaryExpression	0		568890	1					
ANR	569309	Condition	i < t1 -> w	1042:24:29624:29632	568890	1	True				
ANR	569310	RelationalExpression	i < t1 -> w		568890	0		<			
ANR	569311	Identifier	i		568890	0					
ANR	569312	PtrMemberAccess	t1 -> w		568890	1					
ANR	569313	Identifier	t1		568890	0					
ANR	569314	Identifier	w		568890	1					
ANR	569315	UnaryExpression	++ i	1042:35:29635:29637	568890	2	True				
ANR	569316	IncDec	++		568890	0					
ANR	569317	Identifier	i		568890	1					
ANR	569318	CompoundStatement		53:16:2158:2185	568890	3					
ANR	569319	IdentifierDeclStatement	int * data2 = data1 + i ;	1043:16:29658:29680	568890	0	True				
ANR	569320	IdentifierDecl	* data2 = data1 + i		568890	0					
ANR	569321	IdentifierDeclType	int *		568890	0					
ANR	569322	Identifier	data2		568890	1					
ANR	569323	AssignmentExpression	* data2 = data1 + i		568890	2		=			
ANR	569324	Identifier	data2		568890	0					
ANR	569325	AdditiveExpression	data1 + i		568890	1		+			
ANR	569326	Identifier	data1		568890	0					
ANR	569327	Identifier	i		568890	1					
ANR	569328	IdentifierDeclStatement	flag_t * flags2 = flags1 + i ;	1044:16:29698:29725	568890	1	True				
ANR	569329	IdentifierDecl	* flags2 = flags1 + i		568890	0					
ANR	569330	IdentifierDeclType	flag_t *		568890	0					
ANR	569331	Identifier	flags2		568890	1					
ANR	569332	AssignmentExpression	* flags2 = flags1 + i		568890	2		=			
ANR	569333	Identifier	flags2		568890	0					
ANR	569334	AdditiveExpression	flags1 + i		568890	1		+			
ANR	569335	Identifier	flags1		568890	0					
ANR	569336	Identifier	i		568890	1					
ANR	569337	ExpressionStatement	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"	1045:16:29743:30100	568890	2	True				
ANR	569338	AssignmentExpression	"agg = ! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568890	0		=			
ANR	569339	Identifier	agg		568890	0					
ANR	569340	UnaryOperationExpression	"! ( MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) )"		568890	1					
ANR	569341	UnaryOperator	!		568890	0					
ANR	569342	OrExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		||			
ANR	569343	BitAndExpression	"MACRO_t1_flags ( 1 + k , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	0		&			
ANR	569344	CallExpression	"MACRO_t1_flags ( 1 + k , 1 + i )"		568890	0					
ANR	569345	Callee	MACRO_t1_flags		568890	0					
ANR	569346	Identifier	MACRO_t1_flags		568890	0					
ANR	569347	ArgumentList	1 + k		568890	1					
ANR	569348	Argument	1 + k		568890	0					
ANR	569349	AdditiveExpression	1 + k		568890	0		+			
ANR	569350	PrimaryExpression	1		568890	0					
ANR	569351	Identifier	k		568890	1					
ANR	569352	Argument	1 + i		568890	1					
ANR	569353	AdditiveExpression	1 + i		568890	0		+			
ANR	569354	PrimaryExpression	1		568890	0					
ANR	569355	Identifier	i		568890	1					
ANR	569356	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569357	Identifier	T1_SIG		568890	0					
ANR	569358	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569359	Identifier	T1_VISIT		568890	0					
ANR	569360	Identifier	T1_SIG_OTH		568890	1					
ANR	569361	OrExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		||			
ANR	569362	BitAndExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	0		&			
ANR	569363	CallExpression	"MACRO_t1_flags ( 1 + k + 1 , 1 + i )"		568890	0					
ANR	569364	Callee	MACRO_t1_flags		568890	0					
ANR	569365	Identifier	MACRO_t1_flags		568890	0					
ANR	569366	ArgumentList	1 + k + 1		568890	1					
ANR	569367	Argument	1 + k + 1		568890	0					
ANR	569368	AdditiveExpression	1 + k + 1		568890	0		+			
ANR	569369	PrimaryExpression	1		568890	0					
ANR	569370	AdditiveExpression	k + 1		568890	1		+			
ANR	569371	Identifier	k		568890	0					
ANR	569372	PrimaryExpression	1		568890	1					
ANR	569373	Argument	1 + i		568890	1					
ANR	569374	AdditiveExpression	1 + i		568890	0		+			
ANR	569375	PrimaryExpression	1		568890	0					
ANR	569376	Identifier	i		568890	1					
ANR	569377	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569378	Identifier	T1_SIG		568890	0					
ANR	569379	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569380	Identifier	T1_VISIT		568890	0					
ANR	569381	Identifier	T1_SIG_OTH		568890	1					
ANR	569382	OrExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH ) || MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		||			
ANR	569383	BitAndExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	0		&			
ANR	569384	CallExpression	"MACRO_t1_flags ( 1 + k + 2 , 1 + i )"		568890	0					
ANR	569385	Callee	MACRO_t1_flags		568890	0					
ANR	569386	Identifier	MACRO_t1_flags		568890	0					
ANR	569387	ArgumentList	1 + k + 2		568890	1					
ANR	569388	Argument	1 + k + 2		568890	0					
ANR	569389	AdditiveExpression	1 + k + 2		568890	0		+			
ANR	569390	PrimaryExpression	1		568890	0					
ANR	569391	AdditiveExpression	k + 2		568890	1		+			
ANR	569392	Identifier	k		568890	0					
ANR	569393	PrimaryExpression	2		568890	1					
ANR	569394	Argument	1 + i		568890	1					
ANR	569395	AdditiveExpression	1 + i		568890	0		+			
ANR	569396	PrimaryExpression	1		568890	0					
ANR	569397	Identifier	i		568890	1					
ANR	569398	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569399	Identifier	T1_SIG		568890	0					
ANR	569400	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569401	Identifier	T1_VISIT		568890	0					
ANR	569402	Identifier	T1_SIG_OTH		568890	1					
ANR	569403	BitAndExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i ) & ( T1_SIG | T1_VISIT | T1_SIG_OTH )"		568890	1		&			
ANR	569404	CallExpression	"MACRO_t1_flags ( 1 + k + 3 , 1 + i )"		568890	0					
ANR	569405	Callee	MACRO_t1_flags		568890	0					
ANR	569406	Identifier	MACRO_t1_flags		568890	0					
ANR	569407	ArgumentList	1 + k + 3		568890	1					
ANR	569408	Argument	1 + k + 3		568890	0					
ANR	569409	AdditiveExpression	1 + k + 3		568890	0		+			
ANR	569410	PrimaryExpression	1		568890	0					
ANR	569411	AdditiveExpression	k + 3		568890	1		+			
ANR	569412	Identifier	k		568890	0					
ANR	569413	PrimaryExpression	3		568890	1					
ANR	569414	Argument	1 + i		568890	1					
ANR	569415	AdditiveExpression	1 + i		568890	0		+			
ANR	569416	PrimaryExpression	1		568890	0					
ANR	569417	Identifier	i		568890	1					
ANR	569418	InclusiveOrExpression	T1_SIG | T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569419	Identifier	T1_SIG		568890	0					
ANR	569420	InclusiveOrExpression	T1_VISIT | T1_SIG_OTH		568890	1		|			
ANR	569421	Identifier	T1_VISIT		568890	0					
ANR	569422	Identifier	T1_SIG_OTH		568890	1					
ANR	569423	IfStatement	if ( agg )		568890	3					
ANR	569424	Condition	agg	1049:20:30122:30124	568890	0	True				
ANR	569425	Identifier	agg		568890	0					
ANR	569426	CompoundStatement		58:25:2587:2587	568890	1					
ANR	569427	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_AGG )"	1050:20:30149:30181	568890	0	True				
ANR	569428	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_AGG )"		568890	0					
ANR	569429	Callee	mqc_setcurctx		568890	0					
ANR	569430	Identifier	mqc_setcurctx		568890	0					
ANR	569431	ArgumentList	mqc		568890	1					
ANR	569432	Argument	mqc		568890	0					
ANR	569433	Identifier	mqc		568890	0					
ANR	569434	Argument	T1_CTXNO_AGG		568890	1					
ANR	569435	Identifier	T1_CTXNO_AGG		568890	0					
ANR	569436	IfStatement	if ( ! mqc_decode ( mqc ) )		568890	1					
ANR	569437	Condition	! mqc_decode ( mqc )	1051:24:30207:30222	568890	0	True				
ANR	569438	UnaryOperationExpression	! mqc_decode ( mqc )		568890	0					
ANR	569439	UnaryOperator	!		568890	0					
ANR	569440	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569441	Callee	mqc_decode		568890	0					
ANR	569442	Identifier	mqc_decode		568890	0					
ANR	569443	ArgumentList	mqc		568890	1					
ANR	569444	Argument	mqc		568890	0					
ANR	569445	Identifier	mqc		568890	0					
ANR	569446	CompoundStatement		60:42:2685:2685	568890	1					
ANR	569447	ContinueStatement	continue ;	1052:24:30251:30259	568890	0	True				
ANR	569448	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"	1054:20:30303:30335	568890	2	True				
ANR	569449	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"		568890	0					
ANR	569450	Callee	mqc_setcurctx		568890	0					
ANR	569451	Identifier	mqc_setcurctx		568890	0					
ANR	569452	ArgumentList	mqc		568890	1					
ANR	569453	Argument	mqc		568890	0					
ANR	569454	Identifier	mqc		568890	0					
ANR	569455	Argument	T1_CTXNO_UNI		568890	1					
ANR	569456	Identifier	T1_CTXNO_UNI		568890	0					
ANR	569457	ExpressionStatement	runlen = mqc_decode ( mqc )	1055:20:30357:30381	568890	3	True				
ANR	569458	AssignmentExpression	runlen = mqc_decode ( mqc )		568890	0		=			
ANR	569459	Identifier	runlen		568890	0					
ANR	569460	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569461	Callee	mqc_decode		568890	0					
ANR	569462	Identifier	mqc_decode		568890	0					
ANR	569463	ArgumentList	mqc		568890	1					
ANR	569464	Argument	mqc		568890	0					
ANR	569465	Identifier	mqc		568890	0					
ANR	569466	ExpressionStatement	runlen = ( runlen << 1 ) | mqc_decode ( mqc )	1056:20:30403:30443	568890	4	True				
ANR	569467	AssignmentExpression	runlen = ( runlen << 1 ) | mqc_decode ( mqc )		568890	0		=			
ANR	569468	Identifier	runlen		568890	0					
ANR	569469	InclusiveOrExpression	( runlen << 1 ) | mqc_decode ( mqc )		568890	1		|			
ANR	569470	ShiftExpression	runlen << 1		568890	0		<<			
ANR	569471	Identifier	runlen		568890	0					
ANR	569472	PrimaryExpression	1		568890	1					
ANR	569473	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569474	Callee	mqc_decode		568890	0					
ANR	569475	Identifier	mqc_decode		568890	0					
ANR	569476	ArgumentList	mqc		568890	1					
ANR	569477	Argument	mqc		568890	0					
ANR	569478	Identifier	mqc		568890	0					
ANR	569479	ExpressionStatement	flags2 += runlen * t1 -> flags_stride	1057:20:30465:30500	568890	5	True				
ANR	569480	AssignmentExpression	flags2 += runlen * t1 -> flags_stride		568890	0		+=			
ANR	569481	Identifier	flags2		568890	0					
ANR	569482	MultiplicativeExpression	runlen * t1 -> flags_stride		568890	1		*			
ANR	569483	Identifier	runlen		568890	0					
ANR	569484	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569485	Identifier	t1		568890	0					
ANR	569486	Identifier	flags_stride		568890	1					
ANR	569487	ExpressionStatement	data2 += runlen * t1 -> w	1058:20:30522:30545	568890	6	True				
ANR	569488	AssignmentExpression	data2 += runlen * t1 -> w		568890	0		+=			
ANR	569489	Identifier	data2		568890	0					
ANR	569490	MultiplicativeExpression	runlen * t1 -> w		568890	1		*			
ANR	569491	Identifier	runlen		568890	0					
ANR	569492	PtrMemberAccess	t1 -> w		568890	1					
ANR	569493	Identifier	t1		568890	0					
ANR	569494	Identifier	w		568890	1					
ANR	569495	ForStatement	for ( j = k + runlen ; j < k + 4 && j < t1 -> h ; ++ j )		568890	7					
ANR	569496	ForInit	j = k + runlen ;	1059:25:30572:30586	568890	0	True				
ANR	569497	AssignmentExpression	j = k + runlen		568890	0		=			
ANR	569498	Identifier	j		568890	0					
ANR	569499	AdditiveExpression	k + runlen		568890	1		+			
ANR	569500	Identifier	k		568890	0					
ANR	569501	Identifier	runlen		568890	1					
ANR	569502	Condition	j < k + 4 && j < t1 -> h	1059:41:30588:30609	568890	1	True				
ANR	569503	AndExpression	j < k + 4 && j < t1 -> h		568890	0		&&			
ANR	569504	RelationalExpression	j < k + 4		568890	0		<			
ANR	569505	Identifier	j		568890	0					
ANR	569506	AdditiveExpression	k + 4		568890	1		+			
ANR	569507	Identifier	k		568890	0					
ANR	569508	PrimaryExpression	4		568890	1					
ANR	569509	RelationalExpression	j < t1 -> h		568890	1		<			
ANR	569510	Identifier	j		568890	0					
ANR	569511	PtrMemberAccess	t1 -> h		568890	1					
ANR	569512	Identifier	t1		568890	0					
ANR	569513	Identifier	h		568890	1					
ANR	569514	UnaryExpression	++ j	1059:65:30612:30614	568890	2	True				
ANR	569515	IncDec	++		568890	0					
ANR	569516	Identifier	j		568890	1					
ANR	569517	CompoundStatement		68:70:3077:3077	568890	3					
ANR	569518	ExpressionStatement	flags2 += t1 -> flags_stride	1060:24:30643:30669	568890	0	True				
ANR	569519	AssignmentExpression	flags2 += t1 -> flags_stride		568890	0		+=			
ANR	569520	Identifier	flags2		568890	0					
ANR	569521	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569522	Identifier	t1		568890	0					
ANR	569523	Identifier	flags_stride		568890	1					
ANR	569524	IfStatement	if ( agg && ( j == k + runlen ) )		568890	1					
ANR	569525	Condition	agg && ( j == k + runlen )	1061:28:30699:30722	568890	0	True				
ANR	569526	AndExpression	agg && ( j == k + runlen )		568890	0		&&			
ANR	569527	Identifier	agg		568890	0					
ANR	569528	EqualityExpression	j == k + runlen		568890	1		==			
ANR	569529	Identifier	j		568890	0					
ANR	569530	AdditiveExpression	k + runlen		568890	1		+			
ANR	569531	Identifier	k		568890	0					
ANR	569532	Identifier	runlen		568890	1					
ANR	569533	CompoundStatement		70:54:3185:3185	568890	1					
ANR	569534	ExpressionStatement	"t1_dec_clnpass_step_partial ( t1 , flags2 , data2 , orient , oneplushalf )"	1062:28:30755:30822	568890	0	True				
ANR	569535	CallExpression	"t1_dec_clnpass_step_partial ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569536	Callee	t1_dec_clnpass_step_partial		568890	0					
ANR	569537	Identifier	t1_dec_clnpass_step_partial		568890	0					
ANR	569538	ArgumentList	t1		568890	1					
ANR	569539	Argument	t1		568890	0					
ANR	569540	Identifier	t1		568890	0					
ANR	569541	Argument	flags2		568890	1					
ANR	569542	Identifier	flags2		568890	0					
ANR	569543	Argument	data2		568890	2					
ANR	569544	Identifier	data2		568890	0					
ANR	569545	Argument	orient		568890	3					
ANR	569546	Identifier	orient		568890	0					
ANR	569547	Argument	oneplushalf		568890	4					
ANR	569548	Identifier	oneplushalf		568890	0					
ANR	569549	ElseStatement	else		568890	0					
ANR	569550	CompoundStatement		72:31:3315:3315	568890	0					
ANR	569551	ExpressionStatement	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"	1064:28:30885:30944	568890	0	True				
ANR	569552	CallExpression	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569553	Callee	t1_dec_clnpass_step		568890	0					
ANR	569554	Identifier	t1_dec_clnpass_step		568890	0					
ANR	569555	ArgumentList	t1		568890	1					
ANR	569556	Argument	t1		568890	0					
ANR	569557	Identifier	t1		568890	0					
ANR	569558	Argument	flags2		568890	1					
ANR	569559	Identifier	flags2		568890	0					
ANR	569560	Argument	data2		568890	2					
ANR	569561	Identifier	data2		568890	0					
ANR	569562	Argument	orient		568890	3					
ANR	569563	Identifier	orient		568890	0					
ANR	569564	Argument	oneplushalf		568890	4					
ANR	569565	Identifier	oneplushalf		568890	0					
ANR	569566	ExpressionStatement	data2 += t1 -> w	1066:24:30996:31010	568890	2	True				
ANR	569567	AssignmentExpression	data2 += t1 -> w		568890	0		+=			
ANR	569568	Identifier	data2		568890	0					
ANR	569569	PtrMemberAccess	t1 -> w		568890	1					
ANR	569570	Identifier	t1		568890	0					
ANR	569571	Identifier	w		568890	1					
ANR	569572	ElseStatement	else		568890	0					
ANR	569573	CompoundStatement		77:23:3517:3517	568890	0					
ANR	569574	ExpressionStatement	flags2 += t1 -> flags_stride	1069:20:31079:31105	568890	0	True				
ANR	569575	AssignmentExpression	flags2 += t1 -> flags_stride		568890	0		+=			
ANR	569576	Identifier	flags2		568890	0					
ANR	569577	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569578	Identifier	t1		568890	0					
ANR	569579	Identifier	flags_stride		568890	1					
ANR	569580	ExpressionStatement	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"	1070:20:31127:31186	568890	1	True				
ANR	569581	CallExpression	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569582	Callee	t1_dec_clnpass_step		568890	0					
ANR	569583	Identifier	t1_dec_clnpass_step		568890	0					
ANR	569584	ArgumentList	t1		568890	1					
ANR	569585	Argument	t1		568890	0					
ANR	569586	Identifier	t1		568890	0					
ANR	569587	Argument	flags2		568890	1					
ANR	569588	Identifier	flags2		568890	0					
ANR	569589	Argument	data2		568890	2					
ANR	569590	Identifier	data2		568890	0					
ANR	569591	Argument	orient		568890	3					
ANR	569592	Identifier	orient		568890	0					
ANR	569593	Argument	oneplushalf		568890	4					
ANR	569594	Identifier	oneplushalf		568890	0					
ANR	569595	ExpressionStatement	data2 += t1 -> w	1071:20:31208:31222	568890	2	True				
ANR	569596	AssignmentExpression	data2 += t1 -> w		568890	0		+=			
ANR	569597	Identifier	data2		568890	0					
ANR	569598	PtrMemberAccess	t1 -> w		568890	1					
ANR	569599	Identifier	t1		568890	0					
ANR	569600	Identifier	w		568890	1					
ANR	569601	ExpressionStatement	flags2 += t1 -> flags_stride	1072:20:31244:31270	568890	3	True				
ANR	569602	AssignmentExpression	flags2 += t1 -> flags_stride		568890	0		+=			
ANR	569603	Identifier	flags2		568890	0					
ANR	569604	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569605	Identifier	t1		568890	0					
ANR	569606	Identifier	flags_stride		568890	1					
ANR	569607	ExpressionStatement	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"	1073:20:31292:31351	568890	4	True				
ANR	569608	CallExpression	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569609	Callee	t1_dec_clnpass_step		568890	0					
ANR	569610	Identifier	t1_dec_clnpass_step		568890	0					
ANR	569611	ArgumentList	t1		568890	1					
ANR	569612	Argument	t1		568890	0					
ANR	569613	Identifier	t1		568890	0					
ANR	569614	Argument	flags2		568890	1					
ANR	569615	Identifier	flags2		568890	0					
ANR	569616	Argument	data2		568890	2					
ANR	569617	Identifier	data2		568890	0					
ANR	569618	Argument	orient		568890	3					
ANR	569619	Identifier	orient		568890	0					
ANR	569620	Argument	oneplushalf		568890	4					
ANR	569621	Identifier	oneplushalf		568890	0					
ANR	569622	ExpressionStatement	data2 += t1 -> w	1074:20:31373:31387	568890	5	True				
ANR	569623	AssignmentExpression	data2 += t1 -> w		568890	0		+=			
ANR	569624	Identifier	data2		568890	0					
ANR	569625	PtrMemberAccess	t1 -> w		568890	1					
ANR	569626	Identifier	t1		568890	0					
ANR	569627	Identifier	w		568890	1					
ANR	569628	ExpressionStatement	flags2 += t1 -> flags_stride	1075:20:31409:31435	568890	6	True				
ANR	569629	AssignmentExpression	flags2 += t1 -> flags_stride		568890	0		+=			
ANR	569630	Identifier	flags2		568890	0					
ANR	569631	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569632	Identifier	t1		568890	0					
ANR	569633	Identifier	flags_stride		568890	1					
ANR	569634	ExpressionStatement	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"	1076:20:31457:31516	568890	7	True				
ANR	569635	CallExpression	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569636	Callee	t1_dec_clnpass_step		568890	0					
ANR	569637	Identifier	t1_dec_clnpass_step		568890	0					
ANR	569638	ArgumentList	t1		568890	1					
ANR	569639	Argument	t1		568890	0					
ANR	569640	Identifier	t1		568890	0					
ANR	569641	Argument	flags2		568890	1					
ANR	569642	Identifier	flags2		568890	0					
ANR	569643	Argument	data2		568890	2					
ANR	569644	Identifier	data2		568890	0					
ANR	569645	Argument	orient		568890	3					
ANR	569646	Identifier	orient		568890	0					
ANR	569647	Argument	oneplushalf		568890	4					
ANR	569648	Identifier	oneplushalf		568890	0					
ANR	569649	ExpressionStatement	data2 += t1 -> w	1077:20:31538:31552	568890	8	True				
ANR	569650	AssignmentExpression	data2 += t1 -> w		568890	0		+=			
ANR	569651	Identifier	data2		568890	0					
ANR	569652	PtrMemberAccess	t1 -> w		568890	1					
ANR	569653	Identifier	t1		568890	0					
ANR	569654	Identifier	w		568890	1					
ANR	569655	ExpressionStatement	flags2 += t1 -> flags_stride	1078:20:31574:31600	568890	9	True				
ANR	569656	AssignmentExpression	flags2 += t1 -> flags_stride		568890	0		+=			
ANR	569657	Identifier	flags2		568890	0					
ANR	569658	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569659	Identifier	t1		568890	0					
ANR	569660	Identifier	flags_stride		568890	1					
ANR	569661	ExpressionStatement	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"	1079:20:31622:31681	568890	10	True				
ANR	569662	CallExpression	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569663	Callee	t1_dec_clnpass_step		568890	0					
ANR	569664	Identifier	t1_dec_clnpass_step		568890	0					
ANR	569665	ArgumentList	t1		568890	1					
ANR	569666	Argument	t1		568890	0					
ANR	569667	Identifier	t1		568890	0					
ANR	569668	Argument	flags2		568890	1					
ANR	569669	Identifier	flags2		568890	0					
ANR	569670	Argument	data2		568890	2					
ANR	569671	Identifier	data2		568890	0					
ANR	569672	Argument	orient		568890	3					
ANR	569673	Identifier	orient		568890	0					
ANR	569674	Argument	oneplushalf		568890	4					
ANR	569675	Identifier	oneplushalf		568890	0					
ANR	569676	ExpressionStatement	data2 += t1 -> w	1080:20:31703:31717	568890	11	True				
ANR	569677	AssignmentExpression	data2 += t1 -> w		568890	0		+=			
ANR	569678	Identifier	data2		568890	0					
ANR	569679	PtrMemberAccess	t1 -> w		568890	1					
ANR	569680	Identifier	t1		568890	0					
ANR	569681	Identifier	w		568890	1					
ANR	569682	ExpressionStatement	data1 += t1 -> w << 2	1083:12:31763:31782	568890	1	True				
ANR	569683	AssignmentExpression	data1 += t1 -> w << 2		568890	0		+=			
ANR	569684	Identifier	data1		568890	0					
ANR	569685	ShiftExpression	t1 -> w << 2		568890	1		<<			
ANR	569686	PtrMemberAccess	t1 -> w		568890	0					
ANR	569687	Identifier	t1		568890	0					
ANR	569688	Identifier	w		568890	1					
ANR	569689	PrimaryExpression	2		568890	1					
ANR	569690	ExpressionStatement	flags1 += t1 -> flags_stride << 2	1084:12:31796:31827	568890	2	True				
ANR	569691	AssignmentExpression	flags1 += t1 -> flags_stride << 2		568890	0		+=			
ANR	569692	Identifier	flags1		568890	0					
ANR	569693	ShiftExpression	t1 -> flags_stride << 2		568890	1		<<			
ANR	569694	PtrMemberAccess	t1 -> flags_stride		568890	0					
ANR	569695	Identifier	t1		568890	0					
ANR	569696	Identifier	flags_stride		568890	1					
ANR	569697	PrimaryExpression	2		568890	1					
ANR	569698	ForStatement	for ( i = 0 ; i < t1 -> w ; ++ i )		568890	3					
ANR	569699	ForInit	i = 0 ;	1086:13:31852:31857	568890	0	True				
ANR	569700	AssignmentExpression	i = 0		568890	0		=			
ANR	569701	Identifier	i		568890	0					
ANR	569702	PrimaryExpression	0		568890	1					
ANR	569703	Condition	i < t1 -> w	1086:20:31859:31867	568890	1	True				
ANR	569704	RelationalExpression	i < t1 -> w		568890	0		<			
ANR	569705	Identifier	i		568890	0					
ANR	569706	PtrMemberAccess	t1 -> w		568890	1					
ANR	569707	Identifier	t1		568890	0					
ANR	569708	Identifier	w		568890	1					
ANR	569709	UnaryExpression	++ i	1086:31:31870:31872	568890	2	True				
ANR	569710	IncDec	++		568890	0					
ANR	569711	Identifier	i		568890	1					
ANR	569712	CompoundStatement		97:12:4385:4412	568890	3					
ANR	569713	IdentifierDeclStatement	int * data2 = data1 + i ;	1087:12:31889:31911	568890	0	True				
ANR	569714	IdentifierDecl	* data2 = data1 + i		568890	0					
ANR	569715	IdentifierDeclType	int *		568890	0					
ANR	569716	Identifier	data2		568890	1					
ANR	569717	AssignmentExpression	* data2 = data1 + i		568890	2		=			
ANR	569718	Identifier	data2		568890	0					
ANR	569719	AdditiveExpression	data1 + i		568890	1		+			
ANR	569720	Identifier	data1		568890	0					
ANR	569721	Identifier	i		568890	1					
ANR	569722	IdentifierDeclStatement	flag_t * flags2 = flags1 + i ;	1088:12:31925:31952	568890	1	True				
ANR	569723	IdentifierDecl	* flags2 = flags1 + i		568890	0					
ANR	569724	IdentifierDeclType	flag_t *		568890	0					
ANR	569725	Identifier	flags2		568890	1					
ANR	569726	AssignmentExpression	* flags2 = flags1 + i		568890	2		=			
ANR	569727	Identifier	flags2		568890	0					
ANR	569728	AdditiveExpression	flags1 + i		568890	1		+			
ANR	569729	Identifier	flags1		568890	0					
ANR	569730	Identifier	i		568890	1					
ANR	569731	ForStatement	for ( j = k ; j < t1 -> h ; ++ j )		568890	2					
ANR	569732	ForInit	j = k ;	1089:17:31971:31976	568890	0	True				
ANR	569733	AssignmentExpression	j = k		568890	0		=			
ANR	569734	Identifier	j		568890	0					
ANR	569735	Identifier	k		568890	1					
ANR	569736	Condition	j < t1 -> h	1089:24:31978:31986	568890	1	True				
ANR	569737	RelationalExpression	j < t1 -> h		568890	0		<			
ANR	569738	Identifier	j		568890	0					
ANR	569739	PtrMemberAccess	t1 -> h		568890	1					
ANR	569740	Identifier	t1		568890	0					
ANR	569741	Identifier	h		568890	1					
ANR	569742	UnaryExpression	++ j	1089:35:31989:31991	568890	2	True				
ANR	569743	IncDec	++		568890	0					
ANR	569744	Identifier	j		568890	1					
ANR	569745	CompoundStatement		98:40:4454:4454	568890	3					
ANR	569746	ExpressionStatement	flags2 += t1 -> flags_stride	1090:16:32012:32038	568890	0	True				
ANR	569747	AssignmentExpression	flags2 += t1 -> flags_stride		568890	0		+=			
ANR	569748	Identifier	flags2		568890	0					
ANR	569749	PtrMemberAccess	t1 -> flags_stride		568890	1					
ANR	569750	Identifier	t1		568890	0					
ANR	569751	Identifier	flags_stride		568890	1					
ANR	569752	ExpressionStatement	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"	1091:16:32056:32115	568890	1	True				
ANR	569753	CallExpression	"t1_dec_clnpass_step ( t1 , flags2 , data2 , orient , oneplushalf )"		568890	0					
ANR	569754	Callee	t1_dec_clnpass_step		568890	0					
ANR	569755	Identifier	t1_dec_clnpass_step		568890	0					
ANR	569756	ArgumentList	t1		568890	1					
ANR	569757	Argument	t1		568890	0					
ANR	569758	Identifier	t1		568890	0					
ANR	569759	Argument	flags2		568890	1					
ANR	569760	Identifier	flags2		568890	0					
ANR	569761	Argument	data2		568890	2					
ANR	569762	Identifier	data2		568890	0					
ANR	569763	Argument	orient		568890	3					
ANR	569764	Identifier	orient		568890	0					
ANR	569765	Argument	oneplushalf		568890	4					
ANR	569766	Identifier	oneplushalf		568890	0					
ANR	569767	ExpressionStatement	data2 += t1 -> w	1092:16:32133:32147	568890	2	True				
ANR	569768	AssignmentExpression	data2 += t1 -> w		568890	0		+=			
ANR	569769	Identifier	data2		568890	0					
ANR	569770	PtrMemberAccess	t1 -> w		568890	1					
ANR	569771	Identifier	t1		568890	0					
ANR	569772	Identifier	w		568890	1					
ANR	569773	IfStatement	if ( segsym )		568890	7					
ANR	569774	Condition	segsym	1097:8:32188:32193	568890	0	True				
ANR	569775	Identifier	segsym		568890	0					
ANR	569776	CompoundStatement		107:8:4666:4675	568890	1					
ANR	569777	IdentifierDeclStatement	int v = 0 ;	1098:8:32206:32215	568890	0	True				
ANR	569778	IdentifierDecl	v = 0		568890	0					
ANR	569779	IdentifierDeclType	int		568890	0					
ANR	569780	Identifier	v		568890	1					
ANR	569781	AssignmentExpression	v = 0		568890	2		=			
ANR	569782	Identifier	v		568890	0					
ANR	569783	PrimaryExpression	0		568890	1					
ANR	569784	ExpressionStatement	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"	1099:8:32225:32257	568890	1	True				
ANR	569785	CallExpression	"mqc_setcurctx ( mqc , T1_CTXNO_UNI )"		568890	0					
ANR	569786	Callee	mqc_setcurctx		568890	0					
ANR	569787	Identifier	mqc_setcurctx		568890	0					
ANR	569788	ArgumentList	mqc		568890	1					
ANR	569789	Argument	mqc		568890	0					
ANR	569790	Identifier	mqc		568890	0					
ANR	569791	Argument	T1_CTXNO_UNI		568890	1					
ANR	569792	Identifier	T1_CTXNO_UNI		568890	0					
ANR	569793	ExpressionStatement	v = mqc_decode ( mqc )	1100:8:32267:32286	568890	2	True				
ANR	569794	AssignmentExpression	v = mqc_decode ( mqc )		568890	0		=			
ANR	569795	Identifier	v		568890	0					
ANR	569796	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569797	Callee	mqc_decode		568890	0					
ANR	569798	Identifier	mqc_decode		568890	0					
ANR	569799	ArgumentList	mqc		568890	1					
ANR	569800	Argument	mqc		568890	0					
ANR	569801	Identifier	mqc		568890	0					
ANR	569802	ExpressionStatement	v = ( v << 1 ) | mqc_decode ( mqc )	1101:8:32296:32326	568890	3	True				
ANR	569803	AssignmentExpression	v = ( v << 1 ) | mqc_decode ( mqc )		568890	0		=			
ANR	569804	Identifier	v		568890	0					
ANR	569805	InclusiveOrExpression	( v << 1 ) | mqc_decode ( mqc )		568890	1		|			
ANR	569806	ShiftExpression	v << 1		568890	0		<<			
ANR	569807	Identifier	v		568890	0					
ANR	569808	PrimaryExpression	1		568890	1					
ANR	569809	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569810	Callee	mqc_decode		568890	0					
ANR	569811	Identifier	mqc_decode		568890	0					
ANR	569812	ArgumentList	mqc		568890	1					
ANR	569813	Argument	mqc		568890	0					
ANR	569814	Identifier	mqc		568890	0					
ANR	569815	ExpressionStatement	v = ( v << 1 ) | mqc_decode ( mqc )	1102:8:32336:32366	568890	4	True				
ANR	569816	AssignmentExpression	v = ( v << 1 ) | mqc_decode ( mqc )		568890	0		=			
ANR	569817	Identifier	v		568890	0					
ANR	569818	InclusiveOrExpression	( v << 1 ) | mqc_decode ( mqc )		568890	1		|			
ANR	569819	ShiftExpression	v << 1		568890	0		<<			
ANR	569820	Identifier	v		568890	0					
ANR	569821	PrimaryExpression	1		568890	1					
ANR	569822	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569823	Callee	mqc_decode		568890	0					
ANR	569824	Identifier	mqc_decode		568890	0					
ANR	569825	ArgumentList	mqc		568890	1					
ANR	569826	Argument	mqc		568890	0					
ANR	569827	Identifier	mqc		568890	0					
ANR	569828	ExpressionStatement	v = ( v << 1 ) | mqc_decode ( mqc )	1103:8:32376:32406	568890	5	True				
ANR	569829	AssignmentExpression	v = ( v << 1 ) | mqc_decode ( mqc )		568890	0		=			
ANR	569830	Identifier	v		568890	0					
ANR	569831	InclusiveOrExpression	( v << 1 ) | mqc_decode ( mqc )		568890	1		|			
ANR	569832	ShiftExpression	v << 1		568890	0		<<			
ANR	569833	Identifier	v		568890	0					
ANR	569834	PrimaryExpression	1		568890	1					
ANR	569835	CallExpression	mqc_decode ( mqc )		568890	1					
ANR	569836	Callee	mqc_decode		568890	0					
ANR	569837	Identifier	mqc_decode		568890	0					
ANR	569838	ArgumentList	mqc		568890	1					
ANR	569839	Argument	mqc		568890	0					
ANR	569840	Identifier	mqc		568890	0					
ANR	569841	ReturnType	static void		568890	1					
ANR	569842	Identifier	t1_dec_clnpass		568890	2					
ANR	569843	ParameterList	"opj_t1_t * t1 , int bpno , int orient , int cblksty"		568890	3					
ANR	569844	Parameter	opj_t1_t * t1	988:4:27478:27489	568890	0	True				
ANR	569845	ParameterType	opj_t1_t *		568890	0					
ANR	569846	Identifier	t1		568890	1					
ANR	569847	Parameter	int bpno	989:4:27496:27503	568890	1	True				
ANR	569848	ParameterType	int		568890	0					
ANR	569849	Identifier	bpno		568890	1					
ANR	569850	Parameter	int orient	990:4:27510:27519	568890	2	True				
ANR	569851	ParameterType	int		568890	0					
ANR	569852	Identifier	orient		568890	1					
ANR	569853	Parameter	int cblksty	991:4:27526:27536	568890	3	True				
ANR	569854	ParameterType	int		568890	0					
ANR	569855	Identifier	cblksty		568890	1					
ANR	569856	CFGEntryNode	ENTRY		568890		True				
ANR	569857	CFGExitNode	EXIT		568890		True				
ANR	569858	Symbol	agg		568890						
ANR	569859	Symbol	half		568890						
ANR	569860	Symbol	t1 -> w		568890						
ANR	569861	Symbol	T1_SIG_SE		568890						
ANR	569862	Symbol	runlen		568890						
ANR	569863	Symbol	vsc		568890						
ANR	569864	Symbol	mqc_decode		568890						
ANR	569865	Symbol	T1_SIG_SW		568890						
ANR	569866	Symbol	T1_CTXNO_UNI		568890						
ANR	569867	Symbol	T1_SIG_OTH		568890						
ANR	569868	Symbol	* t1		568890						
ANR	569869	Symbol	bpno		568890						
ANR	569870	Symbol	orient		568890						
ANR	569871	Symbol	t1 -> flags		568890						
ANR	569872	Symbol	flags2		568890						
ANR	569873	Symbol	one		568890						
ANR	569874	Symbol	T1_VISIT		568890						
ANR	569875	Symbol	T1_SIG_S		568890						
ANR	569876	Symbol	flags1		568890						
ANR	569877	Symbol	data2		568890						
ANR	569878	Symbol	data1		568890						
ANR	569879	Symbol	i		568890						
ANR	569880	Symbol	T1_CTXNO_AGG		568890						
ANR	569881	Symbol	j		568890						
ANR	569882	Symbol	J2K_CCP_CBLKSTY_VSC		568890						
ANR	569883	Symbol	t1 -> data		568890						
ANR	569884	Symbol	k		568890						
ANR	569885	Symbol	J2K_CCP_CBLKSTY_SEGSYM		568890						
ANR	569886	Symbol	segsym		568890						
ANR	569887	Symbol	T1_SGN_S		568890						
ANR	569888	Symbol	cblksty		568890						
ANR	569889	Symbol	t1 -> flags_stride		568890						
ANR	569890	Symbol	t1 -> mqc		568890						
ANR	569891	Symbol	t1 -> h		568890						
ANR	569892	Symbol	~3		568890						
ANR	569893	Symbol	MACRO_t1_flags		568890						
ANR	569894	Symbol	v		568890						
ANR	569895	Symbol	T1_SIG		568890						
ANR	569896	Symbol	oneplushalf		568890						
ANR	569897	Symbol	t1		568890						
ANR	569898	Symbol	mqc		568890						
ANR	569899	Function	t1_getwmsedec	1114:0:32630:33245							
ANR	569900	FunctionDef	"t1_getwmsedec (int nmsedec , int compno , int level , int orient , int bpno , int qmfbid , double stepsize , int numcomps , int mct)"		569899	0					
ANR	569901	CompoundStatement		1124:0:32805:33245	569899	0					
ANR	569902	IdentifierDeclStatement	"double w1 , w2 , wmsedec ;"	1125:4:32811:32833	569899	0	True				
ANR	569903	IdentifierDecl	w1		569899	0					
ANR	569904	IdentifierDeclType	double		569899	0					
ANR	569905	Identifier	w1		569899	1					
ANR	569906	IdentifierDecl	w2		569899	1					
ANR	569907	IdentifierDeclType	double		569899	0					
ANR	569908	Identifier	w2		569899	1					
ANR	569909	IdentifierDecl	wmsedec		569899	2					
ANR	569910	IdentifierDeclType	double		569899	0					
ANR	569911	Identifier	wmsedec		569899	1					
ANR	569912	IfStatement	if ( qmfbid == 1 )		569899	1					
ANR	569913	Condition	qmfbid == 1	1126:8:32843:32853	569899	0	True				
ANR	569914	EqualityExpression	qmfbid == 1		569899	0		==			
ANR	569915	Identifier	qmfbid		569899	0					
ANR	569916	PrimaryExpression	1		569899	1					
ANR	569917	CompoundStatement		3:21:50:50	569899	1					
ANR	569918	ExpressionStatement	w1 = ( mct && numcomps == 3 ) ? mct_getnorm ( compno ) : 1.0	1127:8:32866:32921	569899	0	True				
ANR	569919	AssignmentExpression	w1 = ( mct && numcomps == 3 ) ? mct_getnorm ( compno ) : 1.0		569899	0		=			
ANR	569920	Identifier	w1		569899	0					
ANR	569921	ConditionalExpression	( mct && numcomps == 3 ) ? mct_getnorm ( compno ) : 1.0		569899	1					
ANR	569922	Condition	mct && numcomps == 3		569899	0					
ANR	569923	AndExpression	mct && numcomps == 3		569899	0		&&			
ANR	569924	Identifier	mct		569899	0					
ANR	569925	EqualityExpression	numcomps == 3		569899	1		==			
ANR	569926	Identifier	numcomps		569899	0					
ANR	569927	PrimaryExpression	3		569899	1					
ANR	569928	CallExpression	mct_getnorm ( compno )		569899	1					
ANR	569929	Callee	mct_getnorm		569899	0					
ANR	569930	Identifier	mct_getnorm		569899	0					
ANR	569931	ArgumentList	compno		569899	1					
ANR	569932	Argument	compno		569899	0					
ANR	569933	Identifier	compno		569899	0					
ANR	569934	PrimaryExpression	1.0		569899	2					
ANR	569935	ExpressionStatement	"w2 = dwt_getnorm ( level , orient )"	1128:8:32931:32962	569899	1	True				
ANR	569936	AssignmentExpression	"w2 = dwt_getnorm ( level , orient )"		569899	0		=			
ANR	569937	Identifier	w2		569899	0					
ANR	569938	CallExpression	"dwt_getnorm ( level , orient )"		569899	1					
ANR	569939	Callee	dwt_getnorm		569899	0					
ANR	569940	Identifier	dwt_getnorm		569899	0					
ANR	569941	ArgumentList	level		569899	1					
ANR	569942	Argument	level		569899	0					
ANR	569943	Identifier	level		569899	0					
ANR	569944	Argument	orient		569899	1					
ANR	569945	Identifier	orient		569899	0					
ANR	569946	ElseStatement	else		569899	0					
ANR	569947	CompoundStatement		6:11:169:169	569899	0					
ANR	569948	ExpressionStatement	w1 = ( mct && numcomps == 3 ) ? mct_getnorm_real ( compno ) : 1.0	1130:8:33019:33079	569899	0	True				
ANR	569949	AssignmentExpression	w1 = ( mct && numcomps == 3 ) ? mct_getnorm_real ( compno ) : 1.0		569899	0		=			
ANR	569950	Identifier	w1		569899	0					
ANR	569951	ConditionalExpression	( mct && numcomps == 3 ) ? mct_getnorm_real ( compno ) : 1.0		569899	1					
ANR	569952	Condition	mct && numcomps == 3		569899	0					
ANR	569953	AndExpression	mct && numcomps == 3		569899	0		&&			
ANR	569954	Identifier	mct		569899	0					
ANR	569955	EqualityExpression	numcomps == 3		569899	1		==			
ANR	569956	Identifier	numcomps		569899	0					
ANR	569957	PrimaryExpression	3		569899	1					
ANR	569958	CallExpression	mct_getnorm_real ( compno )		569899	1					
ANR	569959	Callee	mct_getnorm_real		569899	0					
ANR	569960	Identifier	mct_getnorm_real		569899	0					
ANR	569961	ArgumentList	compno		569899	1					
ANR	569962	Argument	compno		569899	0					
ANR	569963	Identifier	compno		569899	0					
ANR	569964	PrimaryExpression	1.0		569899	2					
ANR	569965	ExpressionStatement	"w2 = dwt_getnorm_real ( level , orient )"	1131:8:33089:33125	569899	1	True				
ANR	569966	AssignmentExpression	"w2 = dwt_getnorm_real ( level , orient )"		569899	0		=			
ANR	569967	Identifier	w2		569899	0					
ANR	569968	CallExpression	"dwt_getnorm_real ( level , orient )"		569899	1					
ANR	569969	Callee	dwt_getnorm_real		569899	0					
ANR	569970	Identifier	dwt_getnorm_real		569899	0					
ANR	569971	ArgumentList	level		569899	1					
ANR	569972	Argument	level		569899	0					
ANR	569973	Identifier	level		569899	0					
ANR	569974	Argument	orient		569899	1					
ANR	569975	Identifier	orient		569899	0					
ANR	569976	ExpressionStatement	wmsedec = w1 * w2 * stepsize * ( 1 << bpno )	1133:4:33137:33179	569899	2	True				
ANR	569977	AssignmentExpression	wmsedec = w1 * w2 * stepsize * ( 1 << bpno )		569899	0		=			
ANR	569978	Identifier	wmsedec		569899	0					
ANR	569979	MultiplicativeExpression	w1 * w2 * stepsize * ( 1 << bpno )		569899	1		*			
ANR	569980	Identifier	w1		569899	0					
ANR	569981	MultiplicativeExpression	w2 * stepsize * ( 1 << bpno )		569899	1		*			
ANR	569982	Identifier	w2		569899	0					
ANR	569983	MultiplicativeExpression	stepsize * ( 1 << bpno )		569899	1		*			
ANR	569984	Identifier	stepsize		569899	0					
ANR	569985	ShiftExpression	1 << bpno		569899	1		<<			
ANR	569986	PrimaryExpression	1		569899	0					
ANR	569987	Identifier	bpno		569899	1					
ANR	569988	ExpressionStatement	wmsedec *= wmsedec * nmsedec / 8192.0	1134:4:33185:33222	569899	3	True				
ANR	569989	AssignmentExpression	wmsedec *= wmsedec * nmsedec / 8192.0		569899	0		*=			
ANR	569990	Identifier	wmsedec		569899	0					
ANR	569991	MultiplicativeExpression	wmsedec * nmsedec / 8192.0		569899	1		*			
ANR	569992	Identifier	wmsedec		569899	0					
ANR	569993	MultiplicativeExpression	nmsedec / 8192.0		569899	1		/			
ANR	569994	Identifier	nmsedec		569899	0					
ANR	569995	PrimaryExpression	8192.0		569899	1					
ANR	569996	ReturnStatement	return wmsedec ;	1136:4:33229:33243	569899	4	True				
ANR	569997	Identifier	wmsedec		569899	0					
ANR	569998	ReturnType	static double		569899	1					
ANR	569999	Identifier	t1_getwmsedec		569899	2					
ANR	570000	ParameterList	"int nmsedec , int compno , int level , int orient , int bpno , int qmfbid , double stepsize , int numcomps , int mct"		569899	3					
ANR	570001	Parameter	int nmsedec	1115:4:32663:32673	569899	0	True				
ANR	570002	ParameterType	int		569899	0					
ANR	570003	Identifier	nmsedec		569899	1					
ANR	570004	Parameter	int compno	1116:4:32680:32689	569899	1	True				
ANR	570005	ParameterType	int		569899	0					
ANR	570006	Identifier	compno		569899	1					
ANR	570007	Parameter	int level	1117:4:32696:32704	569899	2	True				
ANR	570008	ParameterType	int		569899	0					
ANR	570009	Identifier	level		569899	1					
ANR	570010	Parameter	int orient	1118:4:32711:32720	569899	3	True				
ANR	570011	ParameterType	int		569899	0					
ANR	570012	Identifier	orient		569899	1					
ANR	570013	Parameter	int bpno	1119:4:32727:32734	569899	4	True				
ANR	570014	ParameterType	int		569899	0					
ANR	570015	Identifier	bpno		569899	1					
ANR	570016	Parameter	int qmfbid	1120:4:32741:32750	569899	5	True				
ANR	570017	ParameterType	int		569899	0					
ANR	570018	Identifier	qmfbid		569899	1					
ANR	570019	Parameter	double stepsize	1121:4:32757:32771	569899	6	True				
ANR	570020	ParameterType	double		569899	0					
ANR	570021	Identifier	stepsize		569899	1					
ANR	570022	Parameter	int numcomps	1122:4:32778:32789	569899	7	True				
ANR	570023	ParameterType	int		569899	0					
ANR	570024	Identifier	numcomps		569899	1					
ANR	570025	Parameter	int mct	1123:4:32796:32802	569899	8	True				
ANR	570026	ParameterType	int		569899	0					
ANR	570027	Identifier	mct		569899	1					
ANR	570028	CFGEntryNode	ENTRY		569899		True				
ANR	570029	CFGExitNode	EXIT		569899		True				
ANR	570030	Symbol	nmsedec		569899						
ANR	570031	Symbol	bpno		569899						
ANR	570032	Symbol	orient		569899						
ANR	570033	Symbol	level		569899						
ANR	570034	Symbol	dwt_getnorm		569899						
ANR	570035	Symbol	compno		569899						
ANR	570036	Symbol	qmfbid		569899						
ANR	570037	Symbol	wmsedec		569899						
ANR	570038	Symbol	w1		569899						
ANR	570039	Symbol	dwt_getnorm_real		569899						
ANR	570040	Symbol	w2		569899						
ANR	570041	Symbol	mct_getnorm		569899						
ANR	570042	Symbol	mct_getnorm_real		569899						
ANR	570043	Symbol	stepsize		569899						
ANR	570044	Symbol	numcomps		569899						
ANR	570045	Symbol	mct		569899						
ANR	570046	Function	allocate_buffers	1139:0:33248:34106							
ANR	570047	FunctionDef	"allocate_buffers (opj_t1_t * t1 , int w , int h)"		570046	0					
ANR	570048	CompoundStatement		1143:0:33322:34106	570046	0					
ANR	570049	IdentifierDeclStatement	int datasize = w * h ;	1144:4:33328:33348	570046	0	True				
ANR	570050	IdentifierDecl	datasize = w * h		570046	0					
ANR	570051	IdentifierDeclType	int		570046	0					
ANR	570052	Identifier	datasize		570046	1					
ANR	570053	AssignmentExpression	datasize = w * h		570046	2		=			
ANR	570054	Identifier	datasize		570046	0					
ANR	570055	MultiplicativeExpression	w * h		570046	1		*			
ANR	570056	Identifier	w		570046	0					
ANR	570057	Identifier	h		570046	1					
ANR	570058	IdentifierDeclStatement	int flagssize ;	1145:4:33354:33367	570046	1	True				
ANR	570059	IdentifierDecl	flagssize		570046	0					
ANR	570060	IdentifierDeclType	int		570046	0					
ANR	570061	Identifier	flagssize		570046	1					
ANR	570062	IfStatement	if ( datasize > t1 -> datasize )		570046	2					
ANR	570063	Condition	datasize > t1 -> datasize	1147:8:33378:33400	570046	0	True				
ANR	570064	RelationalExpression	datasize > t1 -> datasize		570046	0		>			
ANR	570065	Identifier	datasize		570046	0					
ANR	570066	PtrMemberAccess	t1 -> datasize		570046	1					
ANR	570067	Identifier	t1		570046	0					
ANR	570068	Identifier	datasize		570046	1					
ANR	570069	CompoundStatement		5:33:80:80	570046	1					
ANR	570070	ExpressionStatement	opj_aligned_free ( t1 -> data )	1148:8:33413:33439	570046	0	True				
ANR	570071	CallExpression	opj_aligned_free ( t1 -> data )		570046	0					
ANR	570072	Callee	opj_aligned_free		570046	0					
ANR	570073	Identifier	opj_aligned_free		570046	0					
ANR	570074	ArgumentList	t1 -> data		570046	1					
ANR	570075	Argument	t1 -> data		570046	0					
ANR	570076	PtrMemberAccess	t1 -> data		570046	0					
ANR	570077	Identifier	t1		570046	0					
ANR	570078	Identifier	data		570046	1					
ANR	570079	ExpressionStatement	t1 -> data = ( int * ) opj_aligned_malloc ( datasize * sizeof ( int ) )	1149:8:33449:33509	570046	1	True				
ANR	570080	AssignmentExpression	t1 -> data = ( int * ) opj_aligned_malloc ( datasize * sizeof ( int ) )		570046	0		=			
ANR	570081	PtrMemberAccess	t1 -> data		570046	0					
ANR	570082	Identifier	t1		570046	0					
ANR	570083	Identifier	data		570046	1					
ANR	570084	CastExpression	( int * ) opj_aligned_malloc ( datasize * sizeof ( int ) )		570046	1					
ANR	570085	CastTarget	int *		570046	0					
ANR	570086	CallExpression	opj_aligned_malloc ( datasize * sizeof ( int ) )		570046	1					
ANR	570087	Callee	opj_aligned_malloc		570046	0					
ANR	570088	Identifier	opj_aligned_malloc		570046	0					
ANR	570089	ArgumentList	datasize * sizeof ( int )		570046	1					
ANR	570090	Argument	datasize * sizeof ( int )		570046	0					
ANR	570091	MultiplicativeExpression	datasize * sizeof ( int )		570046	0		*			
ANR	570092	Identifier	datasize		570046	0					
ANR	570093	SizeofExpression	sizeof ( int )		570046	1					
ANR	570094	Sizeof	sizeof		570046	0					
ANR	570095	SizeofOperand	int		570046	1					
ANR	570096	IfStatement	if ( ! t1 -> data )		570046	2					
ANR	570097	Condition	! t1 -> data	1150:12:33523:33531	570046	0	True				
ANR	570098	UnaryOperationExpression	! t1 -> data		570046	0					
ANR	570099	UnaryOperator	!		570046	0					
ANR	570100	PtrMemberAccess	t1 -> data		570046	1					
ANR	570101	Identifier	t1		570046	0					
ANR	570102	Identifier	data		570046	1					
ANR	570103	CompoundStatement		8:23:211:211	570046	1					
ANR	570104	ReturnStatement	return OPJ_FALSE ;	1151:12:33548:33564	570046	0	True				
ANR	570105	Identifier	OPJ_FALSE		570046	0					
ANR	570106	ExpressionStatement	t1 -> datasize = datasize	1153:8:33584:33607	570046	3	True				
ANR	570107	AssignmentExpression	t1 -> datasize = datasize		570046	0		=			
ANR	570108	PtrMemberAccess	t1 -> datasize		570046	0					
ANR	570109	Identifier	t1		570046	0					
ANR	570110	Identifier	datasize		570046	1					
ANR	570111	Identifier	datasize		570046	1					
ANR	570112	ExpressionStatement	"memset ( t1 -> data , 0 , datasize * sizeof ( int ) )"	1155:4:33619:33662	570046	3	True				
ANR	570113	CallExpression	"memset ( t1 -> data , 0 , datasize * sizeof ( int ) )"		570046	0					
ANR	570114	Callee	memset		570046	0					
ANR	570115	Identifier	memset		570046	0					
ANR	570116	ArgumentList	t1 -> data		570046	1					
ANR	570117	Argument	t1 -> data		570046	0					
ANR	570118	PtrMemberAccess	t1 -> data		570046	0					
ANR	570119	Identifier	t1		570046	0					
ANR	570120	Identifier	data		570046	1					
ANR	570121	Argument	0		570046	1					
ANR	570122	PrimaryExpression	0		570046	0					
ANR	570123	Argument	datasize * sizeof ( int )		570046	2					
ANR	570124	MultiplicativeExpression	datasize * sizeof ( int )		570046	0		*			
ANR	570125	Identifier	datasize		570046	0					
ANR	570126	SizeofExpression	sizeof ( int )		570046	1					
ANR	570127	Sizeof	sizeof		570046	0					
ANR	570128	SizeofOperand	int		570046	1					
ANR	570129	ExpressionStatement	t1 -> flags_stride = w + 2	1157:4:33669:33693	570046	4	True				
ANR	570130	AssignmentExpression	t1 -> flags_stride = w + 2		570046	0		=			
ANR	570131	PtrMemberAccess	t1 -> flags_stride		570046	0					
ANR	570132	Identifier	t1		570046	0					
ANR	570133	Identifier	flags_stride		570046	1					
ANR	570134	AdditiveExpression	w + 2		570046	1		+			
ANR	570135	Identifier	w		570046	0					
ANR	570136	PrimaryExpression	2		570046	1					
ANR	570137	ExpressionStatement	flagssize = t1 -> flags_stride * ( h + 2 )	1158:4:33699:33737	570046	5	True				
ANR	570138	AssignmentExpression	flagssize = t1 -> flags_stride * ( h + 2 )		570046	0		=			
ANR	570139	Identifier	flagssize		570046	0					
ANR	570140	MultiplicativeExpression	t1 -> flags_stride * ( h + 2 )		570046	1		*			
ANR	570141	PtrMemberAccess	t1 -> flags_stride		570046	0					
ANR	570142	Identifier	t1		570046	0					
ANR	570143	Identifier	flags_stride		570046	1					
ANR	570144	AdditiveExpression	h + 2		570046	1		+			
ANR	570145	Identifier	h		570046	0					
ANR	570146	PrimaryExpression	2		570046	1					
ANR	570147	IfStatement	if ( flagssize > t1 -> flagssize )		570046	6					
ANR	570148	Condition	flagssize > t1 -> flagssize	1160:8:33748:33772	570046	0	True				
ANR	570149	RelationalExpression	flagssize > t1 -> flagssize		570046	0		>			
ANR	570150	Identifier	flagssize		570046	0					
ANR	570151	PtrMemberAccess	t1 -> flagssize		570046	1					
ANR	570152	Identifier	t1		570046	0					
ANR	570153	Identifier	flagssize		570046	1					
ANR	570154	CompoundStatement		18:35:452:452	570046	1					
ANR	570155	ExpressionStatement	opj_aligned_free ( t1 -> flags )	1161:8:33785:33812	570046	0	True				
ANR	570156	CallExpression	opj_aligned_free ( t1 -> flags )		570046	0					
ANR	570157	Callee	opj_aligned_free		570046	0					
ANR	570158	Identifier	opj_aligned_free		570046	0					
ANR	570159	ArgumentList	t1 -> flags		570046	1					
ANR	570160	Argument	t1 -> flags		570046	0					
ANR	570161	PtrMemberAccess	t1 -> flags		570046	0					
ANR	570162	Identifier	t1		570046	0					
ANR	570163	Identifier	flags		570046	1					
ANR	570164	ExpressionStatement	t1 -> flags = ( flag_t * ) opj_aligned_malloc ( flagssize * sizeof ( flag_t ) )	1162:8:33822:33890	570046	1	True				
ANR	570165	AssignmentExpression	t1 -> flags = ( flag_t * ) opj_aligned_malloc ( flagssize * sizeof ( flag_t ) )		570046	0		=			
ANR	570166	PtrMemberAccess	t1 -> flags		570046	0					
ANR	570167	Identifier	t1		570046	0					
ANR	570168	Identifier	flags		570046	1					
ANR	570169	CastExpression	( flag_t * ) opj_aligned_malloc ( flagssize * sizeof ( flag_t ) )		570046	1					
ANR	570170	CastTarget	flag_t *		570046	0					
ANR	570171	CallExpression	opj_aligned_malloc ( flagssize * sizeof ( flag_t ) )		570046	1					
ANR	570172	Callee	opj_aligned_malloc		570046	0					
ANR	570173	Identifier	opj_aligned_malloc		570046	0					
ANR	570174	ArgumentList	flagssize * sizeof ( flag_t )		570046	1					
ANR	570175	Argument	flagssize * sizeof ( flag_t )		570046	0					
ANR	570176	MultiplicativeExpression	flagssize * sizeof ( flag_t )		570046	0		*			
ANR	570177	Identifier	flagssize		570046	0					
ANR	570178	SizeofExpression	sizeof ( flag_t )		570046	1					
ANR	570179	Sizeof	sizeof		570046	0					
ANR	570180	SizeofOperand	flag_t		570046	1					
ANR	570181	IfStatement	if ( ! t1 -> flags )		570046	2					
ANR	570182	Condition	! t1 -> flags	1163:12:33904:33913	570046	0	True				
ANR	570183	UnaryOperationExpression	! t1 -> flags		570046	0					
ANR	570184	UnaryOperator	!		570046	0					
ANR	570185	PtrMemberAccess	t1 -> flags		570046	1					
ANR	570186	Identifier	t1		570046	0					
ANR	570187	Identifier	flags		570046	1					
ANR	570188	CompoundStatement		21:24:593:593	570046	1					
ANR	570189	ReturnStatement	return OPJ_FALSE ;	1164:12:33930:33946	570046	0	True				
ANR	570190	Identifier	OPJ_FALSE		570046	0					
ANR	570191	ExpressionStatement	t1 -> flagssize = flagssize	1166:8:33966:33991	570046	3	True				
ANR	570192	AssignmentExpression	t1 -> flagssize = flagssize		570046	0		=			
ANR	570193	PtrMemberAccess	t1 -> flagssize		570046	0					
ANR	570194	Identifier	t1		570046	0					
ANR	570195	Identifier	flagssize		570046	1					
ANR	570196	Identifier	flagssize		570046	1					
ANR	570197	ExpressionStatement	"memset ( t1 -> flags , 0 , flagssize * sizeof ( flag_t ) )"	1168:4:34003:34051	570046	7	True				
ANR	570198	CallExpression	"memset ( t1 -> flags , 0 , flagssize * sizeof ( flag_t ) )"		570046	0					
ANR	570199	Callee	memset		570046	0					
ANR	570200	Identifier	memset		570046	0					
ANR	570201	ArgumentList	t1 -> flags		570046	1					
ANR	570202	Argument	t1 -> flags		570046	0					
ANR	570203	PtrMemberAccess	t1 -> flags		570046	0					
ANR	570204	Identifier	t1		570046	0					
ANR	570205	Identifier	flags		570046	1					
ANR	570206	Argument	0		570046	1					
ANR	570207	PrimaryExpression	0		570046	0					
ANR	570208	Argument	flagssize * sizeof ( flag_t )		570046	2					
ANR	570209	MultiplicativeExpression	flagssize * sizeof ( flag_t )		570046	0		*			
ANR	570210	Identifier	flagssize		570046	0					
ANR	570211	SizeofExpression	sizeof ( flag_t )		570046	1					
ANR	570212	Sizeof	sizeof		570046	0					
ANR	570213	SizeofOperand	flag_t		570046	1					
ANR	570214	ExpressionStatement	t1 -> w = w	1170:4:34058:34067	570046	8	True				
ANR	570215	AssignmentExpression	t1 -> w = w		570046	0		=			
ANR	570216	PtrMemberAccess	t1 -> w		570046	0					
ANR	570217	Identifier	t1		570046	0					
ANR	570218	Identifier	w		570046	1					
ANR	570219	Identifier	w		570046	1					
ANR	570220	ExpressionStatement	t1 -> h = h	1171:4:34073:34082	570046	9	True				
ANR	570221	AssignmentExpression	t1 -> h = h		570046	0		=			
ANR	570222	PtrMemberAccess	t1 -> h		570046	0					
ANR	570223	Identifier	t1		570046	0					
ANR	570224	Identifier	h		570046	1					
ANR	570225	Identifier	h		570046	1					
ANR	570226	ReturnStatement	return OPJ_TRUE ;	1173:4:34089:34104	570046	10	True				
ANR	570227	Identifier	OPJ_TRUE		570046	0					
ANR	570228	ReturnType	static opj_bool		570046	1					
ANR	570229	Identifier	allocate_buffers		570046	2					
ANR	570230	ParameterList	"opj_t1_t * t1 , int w , int h"		570046	3					
ANR	570231	Parameter	opj_t1_t * t1	1140:4:33286:33297	570046	0	True				
ANR	570232	ParameterType	opj_t1_t *		570046	0					
ANR	570233	Identifier	t1		570046	1					
ANR	570234	Parameter	int w	1141:4:33304:33308	570046	1	True				
ANR	570235	ParameterType	int		570046	0					
ANR	570236	Identifier	w		570046	1					
ANR	570237	Parameter	int h	1142:4:33315:33319	570046	2	True				
ANR	570238	ParameterType	int		570046	0					
ANR	570239	Identifier	h		570046	1					
ANR	570240	CFGEntryNode	ENTRY		570046		True				
ANR	570241	CFGExitNode	EXIT		570046		True				
ANR	570242	Symbol	* t1		570046						
ANR	570243	Symbol	t1 -> w		570046						
ANR	570244	Symbol	t1 -> flags		570046						
ANR	570245	Symbol	flagssize		570046						
ANR	570246	Symbol	t1 -> flagssize		570046						
ANR	570247	Symbol	h		570046						
ANR	570248	Symbol	t1 -> data		570046						
ANR	570249	Symbol	opj_aligned_malloc		570046						
ANR	570250	Symbol	t1 -> flags_stride		570046						
ANR	570251	Symbol	OPJ_FALSE		570046						
ANR	570252	Symbol	t1 -> datasize		570046						
ANR	570253	Symbol	t1 -> h		570046						
ANR	570254	Symbol	w		570046						
ANR	570255	Symbol	datasize		570046						
ANR	570256	Symbol	OPJ_TRUE		570046						
ANR	570257	Symbol	t1		570046						
ANR	570258	Function	t1_encode_cblk	1177:0:34134:38620							
ANR	570259	FunctionDef	"t1_encode_cblk (opj_t1_t * t1 , opj_tcd_cblk_enc_t * cblk , int orient , int compno , int level , int qmfbid , double stepsize , int cblksty , int numcomps , int mct , opj_tcd_tile_t * tile)"		570258	0					
ANR	570260	CompoundStatement		1189:0:34369:38620	570258	0					
ANR	570261	IdentifierDeclStatement	double cumwmsedec = 0.0 ;	1190:4:34375:34398	570258	0	True				
ANR	570262	IdentifierDecl	cumwmsedec = 0.0		570258	0					
ANR	570263	IdentifierDeclType	double		570258	0					
ANR	570264	Identifier	cumwmsedec		570258	1					
ANR	570265	AssignmentExpression	cumwmsedec = 0.0		570258	2		=			
ANR	570266	Identifier	cumwmsedec		570258	0					
ANR	570267	PrimaryExpression	0.0		570258	1					
ANR	570268	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	1192:4:34405:34429	570258	1	True				
ANR	570269	IdentifierDecl	* mqc = t1 -> mqc		570258	0					
ANR	570270	IdentifierDeclType	opj_mqc_t *		570258	0					
ANR	570271	Identifier	mqc		570258	1					
ANR	570272	AssignmentExpression	* mqc = t1 -> mqc		570258	2		=			
ANR	570273	Identifier	mqc		570258	0					
ANR	570274	PtrMemberAccess	t1 -> mqc		570258	1					
ANR	570275	Identifier	t1		570258	0					
ANR	570276	Identifier	mqc		570258	1					
ANR	570277	IdentifierDeclStatement	"int passno , bpno , passtype ;"	1194:4:34458:34484	570258	2	True				
ANR	570278	IdentifierDecl	passno		570258	0					
ANR	570279	IdentifierDeclType	int		570258	0					
ANR	570280	Identifier	passno		570258	1					
ANR	570281	IdentifierDecl	bpno		570258	1					
ANR	570282	IdentifierDeclType	int		570258	0					
ANR	570283	Identifier	bpno		570258	1					
ANR	570284	IdentifierDecl	passtype		570258	2					
ANR	570285	IdentifierDeclType	int		570258	0					
ANR	570286	Identifier	passtype		570258	1					
ANR	570287	IdentifierDeclStatement	int nmsedec = 0 ;	1195:4:34490:34505	570258	3	True				
ANR	570288	IdentifierDecl	nmsedec = 0		570258	0					
ANR	570289	IdentifierDeclType	int		570258	0					
ANR	570290	Identifier	nmsedec		570258	1					
ANR	570291	AssignmentExpression	nmsedec = 0		570258	2		=			
ANR	570292	Identifier	nmsedec		570258	0					
ANR	570293	PrimaryExpression	0		570258	1					
ANR	570294	IdentifierDeclStatement	"int i , max ;"	1196:4:34511:34521	570258	4	True				
ANR	570295	IdentifierDecl	i		570258	0					
ANR	570296	IdentifierDeclType	int		570258	0					
ANR	570297	Identifier	i		570258	1					
ANR	570298	IdentifierDecl	max		570258	1					
ANR	570299	IdentifierDeclType	int		570258	0					
ANR	570300	Identifier	max		570258	1					
ANR	570301	IdentifierDeclStatement	char type = T1_TYPE_MQ ;	1197:4:34527:34549	570258	5	True				
ANR	570302	IdentifierDecl	type = T1_TYPE_MQ		570258	0					
ANR	570303	IdentifierDeclType	char		570258	0					
ANR	570304	Identifier	type		570258	1					
ANR	570305	AssignmentExpression	type = T1_TYPE_MQ		570258	2		=			
ANR	570306	Identifier	T1_TYPE_MQ		570258	0					
ANR	570307	Identifier	T1_TYPE_MQ		570258	1					
ANR	570308	IdentifierDeclStatement	double tempwmsedec ;	1198:4:34555:34573	570258	6	True				
ANR	570309	IdentifierDecl	tempwmsedec		570258	0					
ANR	570310	IdentifierDeclType	double		570258	0					
ANR	570311	Identifier	tempwmsedec		570258	1					
ANR	570312	ExpressionStatement	max = 0	1200:4:34580:34587	570258	7	True				
ANR	570313	AssignmentExpression	max = 0		570258	0		=			
ANR	570314	Identifier	max		570258	0					
ANR	570315	PrimaryExpression	0		570258	1					
ANR	570316	ForStatement	for ( i = 0 ; i < t1 -> w * t1 -> h ; ++ i )		570258	8					
ANR	570317	ForInit	i = 0 ;	1201:9:34598:34603	570258	0	True				
ANR	570318	AssignmentExpression	i = 0		570258	0		=			
ANR	570319	Identifier	i		570258	0					
ANR	570320	PrimaryExpression	0		570258	1					
ANR	570321	Condition	i < t1 -> w * t1 -> h	1201:16:34605:34621	570258	1	True				
ANR	570322	RelationalExpression	i < t1 -> w * t1 -> h		570258	0		<			
ANR	570323	Identifier	i		570258	0					
ANR	570324	MultiplicativeExpression	t1 -> w * t1 -> h		570258	1		*			
ANR	570325	PtrMemberAccess	t1 -> w		570258	0					
ANR	570326	Identifier	t1		570258	0					
ANR	570327	Identifier	w		570258	1					
ANR	570328	PtrMemberAccess	t1 -> h		570258	1					
ANR	570329	Identifier	t1		570258	0					
ANR	570330	Identifier	h		570258	1					
ANR	570331	UnaryExpression	++ i	1201:35:34624:34626	570258	2	True				
ANR	570332	IncDec	++		570258	0					
ANR	570333	Identifier	i		570258	1					
ANR	570334	CompoundStatement		14:8:269:295	570258	3					
ANR	570335	IdentifierDeclStatement	int tmp = abs ( t1 -> data [ i ] ) ;	1202:8:34639:34665	570258	0	True				
ANR	570336	IdentifierDecl	tmp = abs ( t1 -> data [ i ] )		570258	0					
ANR	570337	IdentifierDeclType	int		570258	0					
ANR	570338	Identifier	tmp		570258	1					
ANR	570339	AssignmentExpression	tmp = abs ( t1 -> data [ i ] )		570258	2		=			
ANR	570340	Identifier	tmp		570258	0					
ANR	570341	CallExpression	abs ( t1 -> data [ i ] )		570258	1					
ANR	570342	Callee	abs		570258	0					
ANR	570343	Identifier	abs		570258	0					
ANR	570344	ArgumentList	t1 -> data [ i ]		570258	1					
ANR	570345	Argument	t1 -> data [ i ]		570258	0					
ANR	570346	ArrayIndexing	t1 -> data [ i ]		570258	0					
ANR	570347	PtrMemberAccess	t1 -> data		570258	0					
ANR	570348	Identifier	t1		570258	0					
ANR	570349	Identifier	data		570258	1					
ANR	570350	Identifier	i		570258	1					
ANR	570351	ExpressionStatement	"max = int_max ( max , tmp )"	1203:8:34675:34698	570258	1	True				
ANR	570352	AssignmentExpression	"max = int_max ( max , tmp )"		570258	0		=			
ANR	570353	Identifier	max		570258	0					
ANR	570354	CallExpression	"int_max ( max , tmp )"		570258	1					
ANR	570355	Callee	int_max		570258	0					
ANR	570356	Identifier	int_max		570258	0					
ANR	570357	ArgumentList	max		570258	1					
ANR	570358	Argument	max		570258	0					
ANR	570359	Identifier	max		570258	0					
ANR	570360	Argument	tmp		570258	1					
ANR	570361	Identifier	tmp		570258	0					
ANR	570362	ExpressionStatement	cblk -> numbps = max ? ( int_floorlog2 ( max ) + 1 ) - T1_NMSEDEC_FRACBITS : 0	1206:4:34711:34782	570258	9	True				
ANR	570363	AssignmentExpression	cblk -> numbps = max ? ( int_floorlog2 ( max ) + 1 ) - T1_NMSEDEC_FRACBITS : 0		570258	0		=			
ANR	570364	PtrMemberAccess	cblk -> numbps		570258	0					
ANR	570365	Identifier	cblk		570258	0					
ANR	570366	Identifier	numbps		570258	1					
ANR	570367	ConditionalExpression	max ? ( int_floorlog2 ( max ) + 1 ) - T1_NMSEDEC_FRACBITS : 0		570258	1					
ANR	570368	Condition	max		570258	0					
ANR	570369	Identifier	max		570258	0					
ANR	570370	AdditiveExpression	( int_floorlog2 ( max ) + 1 ) - T1_NMSEDEC_FRACBITS		570258	1		-			
ANR	570371	AdditiveExpression	int_floorlog2 ( max ) + 1		570258	0		+			
ANR	570372	CallExpression	int_floorlog2 ( max )		570258	0					
ANR	570373	Callee	int_floorlog2		570258	0					
ANR	570374	Identifier	int_floorlog2		570258	0					
ANR	570375	ArgumentList	max		570258	1					
ANR	570376	Argument	max		570258	0					
ANR	570377	Identifier	max		570258	0					
ANR	570378	PrimaryExpression	1		570258	1					
ANR	570379	Identifier	T1_NMSEDEC_FRACBITS		570258	1					
ANR	570380	PrimaryExpression	0		570258	2					
ANR	570381	ExpressionStatement	bpno = cblk -> numbps - 1	1208:4:34789:34812	570258	10	True				
ANR	570382	AssignmentExpression	bpno = cblk -> numbps - 1		570258	0		=			
ANR	570383	Identifier	bpno		570258	0					
ANR	570384	AdditiveExpression	cblk -> numbps - 1		570258	1		-			
ANR	570385	PtrMemberAccess	cblk -> numbps		570258	0					
ANR	570386	Identifier	cblk		570258	0					
ANR	570387	Identifier	numbps		570258	1					
ANR	570388	PrimaryExpression	1		570258	1					
ANR	570389	ExpressionStatement	passtype = 2	1209:4:34818:34830	570258	11	True				
ANR	570390	AssignmentExpression	passtype = 2		570258	0		=			
ANR	570391	Identifier	passtype		570258	0					
ANR	570392	PrimaryExpression	2		570258	1					
ANR	570393	ExpressionStatement	mqc_resetstates ( mqc )	1211:4:34837:34857	570258	12	True				
ANR	570394	CallExpression	mqc_resetstates ( mqc )		570258	0					
ANR	570395	Callee	mqc_resetstates		570258	0					
ANR	570396	Identifier	mqc_resetstates		570258	0					
ANR	570397	ArgumentList	mqc		570258	1					
ANR	570398	Argument	mqc		570258	0					
ANR	570399	Identifier	mqc		570258	0					
ANR	570400	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_UNI , 0 , 46 )"	1212:4:34863:34901	570258	13	True				
ANR	570401	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_UNI , 0 , 46 )"		570258	0					
ANR	570402	Callee	mqc_setstate		570258	0					
ANR	570403	Identifier	mqc_setstate		570258	0					
ANR	570404	ArgumentList	mqc		570258	1					
ANR	570405	Argument	mqc		570258	0					
ANR	570406	Identifier	mqc		570258	0					
ANR	570407	Argument	T1_CTXNO_UNI		570258	1					
ANR	570408	Identifier	T1_CTXNO_UNI		570258	0					
ANR	570409	Argument	0		570258	2					
ANR	570410	PrimaryExpression	0		570258	0					
ANR	570411	Argument	46		570258	3					
ANR	570412	PrimaryExpression	46		570258	0					
ANR	570413	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_AGG , 0 , 3 )"	1213:4:34907:34944	570258	14	True				
ANR	570414	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_AGG , 0 , 3 )"		570258	0					
ANR	570415	Callee	mqc_setstate		570258	0					
ANR	570416	Identifier	mqc_setstate		570258	0					
ANR	570417	ArgumentList	mqc		570258	1					
ANR	570418	Argument	mqc		570258	0					
ANR	570419	Identifier	mqc		570258	0					
ANR	570420	Argument	T1_CTXNO_AGG		570258	1					
ANR	570421	Identifier	T1_CTXNO_AGG		570258	0					
ANR	570422	Argument	0		570258	2					
ANR	570423	PrimaryExpression	0		570258	0					
ANR	570424	Argument	3		570258	3					
ANR	570425	PrimaryExpression	3		570258	0					
ANR	570426	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_ZC , 0 , 4 )"	1214:4:34950:34986	570258	15	True				
ANR	570427	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_ZC , 0 , 4 )"		570258	0					
ANR	570428	Callee	mqc_setstate		570258	0					
ANR	570429	Identifier	mqc_setstate		570258	0					
ANR	570430	ArgumentList	mqc		570258	1					
ANR	570431	Argument	mqc		570258	0					
ANR	570432	Identifier	mqc		570258	0					
ANR	570433	Argument	T1_CTXNO_ZC		570258	1					
ANR	570434	Identifier	T1_CTXNO_ZC		570258	0					
ANR	570435	Argument	0		570258	2					
ANR	570436	PrimaryExpression	0		570258	0					
ANR	570437	Argument	4		570258	3					
ANR	570438	PrimaryExpression	4		570258	0					
ANR	570439	ExpressionStatement	"mqc_init_enc ( mqc , cblk -> data )"	1215:4:34992:35021	570258	16	True				
ANR	570440	CallExpression	"mqc_init_enc ( mqc , cblk -> data )"		570258	0					
ANR	570441	Callee	mqc_init_enc		570258	0					
ANR	570442	Identifier	mqc_init_enc		570258	0					
ANR	570443	ArgumentList	mqc		570258	1					
ANR	570444	Argument	mqc		570258	0					
ANR	570445	Identifier	mqc		570258	0					
ANR	570446	Argument	cblk -> data		570258	1					
ANR	570447	PtrMemberAccess	cblk -> data		570258	0					
ANR	570448	Identifier	cblk		570258	0					
ANR	570449	Identifier	data		570258	1					
ANR	570450	ForStatement	for ( passno = 0 ; bpno >= 0 ; ++ passno )		570258	17					
ANR	570451	ForInit	passno = 0 ;	1217:9:35033:35043	570258	0	True				
ANR	570452	AssignmentExpression	passno = 0		570258	0		=			
ANR	570453	Identifier	passno		570258	0					
ANR	570454	PrimaryExpression	0		570258	1					
ANR	570455	Condition	bpno >= 0	1217:21:35045:35053	570258	1	True				
ANR	570456	RelationalExpression	bpno >= 0		570258	0		>=			
ANR	570457	Identifier	bpno		570258	0					
ANR	570458	PrimaryExpression	0		570258	1					
ANR	570459	UnaryExpression	++ passno	1217:32:35056:35063	570258	2	True				
ANR	570460	IncDec	++		570258	0					
ANR	570461	Identifier	passno		570258	1					
ANR	570462	CompoundStatement		31:8:760:778	570258	3					
ANR	570463	IdentifierDeclStatement	opj_tcd_pass_t * pass = & cblk -> passes [ passno ] ;	1218:8:35076:35120	570258	0	True				
ANR	570464	IdentifierDecl	* pass = & cblk -> passes [ passno ]		570258	0					
ANR	570465	IdentifierDeclType	opj_tcd_pass_t *		570258	0					
ANR	570466	Identifier	pass		570258	1					
ANR	570467	AssignmentExpression	* pass = & cblk -> passes [ passno ]		570258	2		=			
ANR	570468	Identifier	pass		570258	0					
ANR	570469	UnaryOperationExpression	& cblk -> passes [ passno ]		570258	1					
ANR	570470	UnaryOperator	&		570258	0					
ANR	570471	ArrayIndexing	cblk -> passes [ passno ]		570258	1					
ANR	570472	PtrMemberAccess	cblk -> passes		570258	0					
ANR	570473	Identifier	cblk		570258	0					
ANR	570474	Identifier	passes		570258	1					
ANR	570475	Identifier	passno		570258	1					
ANR	570476	IdentifierDeclStatement	int correction = 3 ;	1219:8:35130:35148	570258	1	True				
ANR	570477	IdentifierDecl	correction = 3		570258	0					
ANR	570478	IdentifierDeclType	int		570258	0					
ANR	570479	Identifier	correction		570258	1					
ANR	570480	AssignmentExpression	correction = 3		570258	2		=			
ANR	570481	Identifier	correction		570258	0					
ANR	570482	PrimaryExpression	3		570258	1					
ANR	570483	ExpressionStatement	type = ( ( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ	1220:8:35158:35291	570258	2	True				
ANR	570484	AssignmentExpression	type = ( ( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ		570258	0		=			
ANR	570485	Identifier	type		570258	0					
ANR	570486	ConditionalExpression	( ( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ		570258	1					
ANR	570487	Condition	( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	0					
ANR	570488	AndExpression	( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	0		&&			
ANR	570489	RelationalExpression	bpno < ( cblk -> numbps - 4 )		570258	0		<			
ANR	570490	Identifier	bpno		570258	0					
ANR	570491	AdditiveExpression	cblk -> numbps - 4		570258	1		-			
ANR	570492	PtrMemberAccess	cblk -> numbps		570258	0					
ANR	570493	Identifier	cblk		570258	0					
ANR	570494	Identifier	numbps		570258	1					
ANR	570495	PrimaryExpression	4		570258	1					
ANR	570496	AndExpression	( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	1		&&			
ANR	570497	RelationalExpression	passtype < 2		570258	0		<			
ANR	570498	Identifier	passtype		570258	0					
ANR	570499	PrimaryExpression	2		570258	1					
ANR	570500	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_LAZY		570258	1		&			
ANR	570501	Identifier	cblksty		570258	0					
ANR	570502	Identifier	J2K_CCP_CBLKSTY_LAZY		570258	1					
ANR	570503	Identifier	T1_TYPE_RAW		570258	1					
ANR	570504	Identifier	T1_TYPE_MQ		570258	2					
ANR	570505	SwitchStatement	switch ( passtype )		570258	3					
ANR	570506	Condition	passtype	1223:16:35310:35317	570258	0	True				
ANR	570507	Identifier	passtype		570258	0					
ANR	570508	CompoundStatement		35:26:950:950	570258	1					
ANR	570509	Label	case 0 :	1224:8:35330:35336	570258	0	True				
ANR	570510	ExpressionStatement	"t1_enc_sigpass ( t1 , bpno , orient , & nmsedec , type , cblksty )"	1225:12:35350:35407	570258	1	True				
ANR	570511	CallExpression	"t1_enc_sigpass ( t1 , bpno , orient , & nmsedec , type , cblksty )"		570258	0					
ANR	570512	Callee	t1_enc_sigpass		570258	0					
ANR	570513	Identifier	t1_enc_sigpass		570258	0					
ANR	570514	ArgumentList	t1		570258	1					
ANR	570515	Argument	t1		570258	0					
ANR	570516	Identifier	t1		570258	0					
ANR	570517	Argument	bpno		570258	1					
ANR	570518	Identifier	bpno		570258	0					
ANR	570519	Argument	orient		570258	2					
ANR	570520	Identifier	orient		570258	0					
ANR	570521	Argument	& nmsedec		570258	3					
ANR	570522	UnaryOperationExpression	& nmsedec		570258	0					
ANR	570523	UnaryOperator	&		570258	0					
ANR	570524	Identifier	nmsedec		570258	1					
ANR	570525	Argument	type		570258	4					
ANR	570526	Identifier	type		570258	0					
ANR	570527	Argument	cblksty		570258	5					
ANR	570528	Identifier	cblksty		570258	0					
ANR	570529	BreakStatement	break ;	1226:12:35421:35426	570258	2	True				
ANR	570530	Label	case 1 :	1227:8:35436:35442	570258	3	True				
ANR	570531	ExpressionStatement	"t1_enc_refpass ( t1 , bpno , & nmsedec , type , cblksty )"	1228:12:35456:35505	570258	4	True				
ANR	570532	CallExpression	"t1_enc_refpass ( t1 , bpno , & nmsedec , type , cblksty )"		570258	0					
ANR	570533	Callee	t1_enc_refpass		570258	0					
ANR	570534	Identifier	t1_enc_refpass		570258	0					
ANR	570535	ArgumentList	t1		570258	1					
ANR	570536	Argument	t1		570258	0					
ANR	570537	Identifier	t1		570258	0					
ANR	570538	Argument	bpno		570258	1					
ANR	570539	Identifier	bpno		570258	0					
ANR	570540	Argument	& nmsedec		570258	2					
ANR	570541	UnaryOperationExpression	& nmsedec		570258	0					
ANR	570542	UnaryOperator	&		570258	0					
ANR	570543	Identifier	nmsedec		570258	1					
ANR	570544	Argument	type		570258	3					
ANR	570545	Identifier	type		570258	0					
ANR	570546	Argument	cblksty		570258	4					
ANR	570547	Identifier	cblksty		570258	0					
ANR	570548	BreakStatement	break ;	1229:12:35519:35524	570258	5	True				
ANR	570549	Label	case 2 :	1230:8:35534:35540	570258	6	True				
ANR	570550	ExpressionStatement	"t1_enc_clnpass ( t1 , bpno , orient , & nmsedec , cblksty )"	1231:12:35554:35605	570258	7	True				
ANR	570551	CallExpression	"t1_enc_clnpass ( t1 , bpno , orient , & nmsedec , cblksty )"		570258	0					
ANR	570552	Callee	t1_enc_clnpass		570258	0					
ANR	570553	Identifier	t1_enc_clnpass		570258	0					
ANR	570554	ArgumentList	t1		570258	1					
ANR	570555	Argument	t1		570258	0					
ANR	570556	Identifier	t1		570258	0					
ANR	570557	Argument	bpno		570258	1					
ANR	570558	Identifier	bpno		570258	0					
ANR	570559	Argument	orient		570258	2					
ANR	570560	Identifier	orient		570258	0					
ANR	570561	Argument	& nmsedec		570258	3					
ANR	570562	UnaryOperationExpression	& nmsedec		570258	0					
ANR	570563	UnaryOperator	&		570258	0					
ANR	570564	Identifier	nmsedec		570258	1					
ANR	570565	Argument	cblksty		570258	4					
ANR	570566	Identifier	cblksty		570258	0					
ANR	570567	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_SEGSYM )		570258	8					
ANR	570568	Condition	cblksty & J2K_CCP_CBLKSTY_SEGSYM	1233:16:35675:35706	570258	0	True				
ANR	570569	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_SEGSYM		570258	0		&			
ANR	570570	Identifier	cblksty		570258	0					
ANR	570571	Identifier	J2K_CCP_CBLKSTY_SEGSYM		570258	1					
ANR	570572	CompoundStatement		45:50:1339:1339	570258	1					
ANR	570573	ExpressionStatement	mqc_segmark_enc ( mqc )	1234:16:35727:35747	570258	0	True				
ANR	570574	CallExpression	mqc_segmark_enc ( mqc )		570258	0					
ANR	570575	Callee	mqc_segmark_enc		570258	0					
ANR	570576	Identifier	mqc_segmark_enc		570258	0					
ANR	570577	ArgumentList	mqc		570258	1					
ANR	570578	Argument	mqc		570258	0					
ANR	570579	Identifier	mqc		570258	0					
ANR	570580	BreakStatement	break ;	1236:12:35775:35780	570258	9	True				
ANR	570581	ExpressionStatement	"tempwmsedec = t1_getwmsedec ( nmsedec , compno , level , orient , bpno , qmfbid , stepsize , numcomps , mct )"	1240:8:35829:35963	570258	4	True				
ANR	570582	AssignmentExpression	"tempwmsedec = t1_getwmsedec ( nmsedec , compno , level , orient , bpno , qmfbid , stepsize , numcomps , mct )"		570258	0		=			
ANR	570583	Identifier	tempwmsedec		570258	0					
ANR	570584	CallExpression	"t1_getwmsedec ( nmsedec , compno , level , orient , bpno , qmfbid , stepsize , numcomps , mct )"		570258	1					
ANR	570585	Callee	t1_getwmsedec		570258	0					
ANR	570586	Identifier	t1_getwmsedec		570258	0					
ANR	570587	ArgumentList	nmsedec		570258	1					
ANR	570588	Argument	nmsedec		570258	0					
ANR	570589	Identifier	nmsedec		570258	0					
ANR	570590	Argument	compno		570258	1					
ANR	570591	Identifier	compno		570258	0					
ANR	570592	Argument	level		570258	2					
ANR	570593	Identifier	level		570258	0					
ANR	570594	Argument	orient		570258	3					
ANR	570595	Identifier	orient		570258	0					
ANR	570596	Argument	bpno		570258	4					
ANR	570597	Identifier	bpno		570258	0					
ANR	570598	Argument	qmfbid		570258	5					
ANR	570599	Identifier	qmfbid		570258	0					
ANR	570600	Argument	stepsize		570258	6					
ANR	570601	Identifier	stepsize		570258	0					
ANR	570602	Argument	numcomps		570258	7					
ANR	570603	Identifier	numcomps		570258	0					
ANR	570604	Argument	mct		570258	8					
ANR	570605	Identifier	mct		570258	0					
ANR	570606	ExpressionStatement	cumwmsedec += tempwmsedec	1242:8:35973:35998	570258	5	True				
ANR	570607	AssignmentExpression	cumwmsedec += tempwmsedec		570258	0		+=			
ANR	570608	Identifier	cumwmsedec		570258	0					
ANR	570609	Identifier	tempwmsedec		570258	1					
ANR	570610	ExpressionStatement	tile -> distotile += tempwmsedec	1243:8:36008:36038	570258	6	True				
ANR	570611	AssignmentExpression	tile -> distotile += tempwmsedec		570258	0		+=			
ANR	570612	PtrMemberAccess	tile -> distotile		570258	0					
ANR	570613	Identifier	tile		570258	0					
ANR	570614	Identifier	distotile		570258	1					
ANR	570615	Identifier	tempwmsedec		570258	1					
ANR	570616	IfStatement	if ( ( cblksty & J2K_CCP_CBLKSTY_TERMALL ) && ! ( ( passtype == 2 ) && ( bpno - 1 < 0 ) ) )		570258	7					
ANR	570617	Condition	( cblksty & J2K_CCP_CBLKSTY_TERMALL ) && ! ( ( passtype == 2 ) && ( bpno - 1 < 0 ) )	1246:12:36104:36194	570258	0	True				
ANR	570618	AndExpression	( cblksty & J2K_CCP_CBLKSTY_TERMALL ) && ! ( ( passtype == 2 ) && ( bpno - 1 < 0 ) )		570258	0		&&			
ANR	570619	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_TERMALL		570258	0		&			
ANR	570620	Identifier	cblksty		570258	0					
ANR	570621	Identifier	J2K_CCP_CBLKSTY_TERMALL		570258	1					
ANR	570622	UnaryOperationExpression	! ( ( passtype == 2 ) && ( bpno - 1 < 0 ) )		570258	1					
ANR	570623	UnaryOperator	!		570258	0					
ANR	570624	AndExpression	( passtype == 2 ) && ( bpno - 1 < 0 )		570258	1		&&			
ANR	570625	EqualityExpression	passtype == 2		570258	0		==			
ANR	570626	Identifier	passtype		570258	0					
ANR	570627	PrimaryExpression	2		570258	1					
ANR	570628	RelationalExpression	bpno - 1 < 0		570258	1		<			
ANR	570629	AdditiveExpression	bpno - 1		570258	0		-			
ANR	570630	Identifier	bpno		570258	0					
ANR	570631	PrimaryExpression	1		570258	1					
ANR	570632	PrimaryExpression	0		570258	1					
ANR	570633	CompoundStatement		59:33:1827:1827	570258	1					
ANR	570634	IfStatement	if ( type == T1_TYPE_RAW )		570258	0					
ANR	570635	Condition	type == T1_TYPE_RAW	1248:16:36215:36233	570258	0	True				
ANR	570636	EqualityExpression	type == T1_TYPE_RAW		570258	0		==			
ANR	570637	Identifier	type		570258	0					
ANR	570638	Identifier	T1_TYPE_RAW		570258	1					
ANR	570639	CompoundStatement		60:37:1866:1866	570258	1					
ANR	570640	ExpressionStatement	mqc_flush ( mqc )	1249:16:36254:36268	570258	0	True				
ANR	570641	CallExpression	mqc_flush ( mqc )		570258	0					
ANR	570642	Callee	mqc_flush		570258	0					
ANR	570643	Identifier	mqc_flush		570258	0					
ANR	570644	ArgumentList	mqc		570258	1					
ANR	570645	Argument	mqc		570258	0					
ANR	570646	Identifier	mqc		570258	0					
ANR	570647	ExpressionStatement	correction = 1	1250:16:36286:36300	570258	1	True				
ANR	570648	AssignmentExpression	correction = 1		570258	0		=			
ANR	570649	Identifier	correction		570258	0					
ANR	570650	PrimaryExpression	1		570258	1					
ANR	570651	ElseStatement	else		570258	0					
ANR	570652	CompoundStatement		64:19:2010:2010	570258	0					
ANR	570653	ExpressionStatement	mqc_flush ( mqc )	1253:16:36447:36461	570258	0	True				
ANR	570654	CallExpression	mqc_flush ( mqc )		570258	0					
ANR	570655	Callee	mqc_flush		570258	0					
ANR	570656	Identifier	mqc_flush		570258	0					
ANR	570657	ArgumentList	mqc		570258	1					
ANR	570658	Argument	mqc		570258	0					
ANR	570659	Identifier	mqc		570258	0					
ANR	570660	ExpressionStatement	correction = 1	1254:16:36479:36493	570258	1	True				
ANR	570661	AssignmentExpression	correction = 1		570258	0		=			
ANR	570662	Identifier	correction		570258	0					
ANR	570663	PrimaryExpression	1		570258	1					
ANR	570664	ExpressionStatement	pass -> term = 1	1256:12:36521:36535	570258	1	True				
ANR	570665	AssignmentExpression	pass -> term = 1		570258	0		=			
ANR	570666	PtrMemberAccess	pass -> term		570258	0					
ANR	570667	Identifier	pass		570258	0					
ANR	570668	Identifier	term		570258	1					
ANR	570669	PrimaryExpression	1		570258	1					
ANR	570670	ElseStatement	else		570258	0					
ANR	570671	CompoundStatement		69:15:2182:2182	570258	0					
ANR	570672	IfStatement	if ( ( ( bpno < ( cblk -> numbps - 4 ) && ( passtype > 0 ) ) || ( ( bpno == ( cblk -> numbps - 4 ) ) && ( passtype == 2 ) ) ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) )		570258	0					
ANR	570673	Condition	( ( bpno < ( cblk -> numbps - 4 ) && ( passtype > 0 ) ) || ( ( bpno == ( cblk -> numbps - 4 ) ) && ( passtype == 2 ) ) ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )	1258:16:36570:36745	570258	0	True				
ANR	570674	AndExpression	( ( bpno < ( cblk -> numbps - 4 ) && ( passtype > 0 ) ) || ( ( bpno == ( cblk -> numbps - 4 ) ) && ( passtype == 2 ) ) ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	0		&&			
ANR	570675	OrExpression	( bpno < ( cblk -> numbps - 4 ) && ( passtype > 0 ) ) || ( ( bpno == ( cblk -> numbps - 4 ) ) && ( passtype == 2 ) )		570258	0		||			
ANR	570676	AndExpression	bpno < ( cblk -> numbps - 4 ) && ( passtype > 0 )		570258	0		&&			
ANR	570677	RelationalExpression	bpno < ( cblk -> numbps - 4 )		570258	0		<			
ANR	570678	Identifier	bpno		570258	0					
ANR	570679	AdditiveExpression	cblk -> numbps - 4		570258	1		-			
ANR	570680	PtrMemberAccess	cblk -> numbps		570258	0					
ANR	570681	Identifier	cblk		570258	0					
ANR	570682	Identifier	numbps		570258	1					
ANR	570683	PrimaryExpression	4		570258	1					
ANR	570684	RelationalExpression	passtype > 0		570258	1		>			
ANR	570685	Identifier	passtype		570258	0					
ANR	570686	PrimaryExpression	0		570258	1					
ANR	570687	AndExpression	( bpno == ( cblk -> numbps - 4 ) ) && ( passtype == 2 )		570258	1		&&			
ANR	570688	EqualityExpression	bpno == ( cblk -> numbps - 4 )		570258	0		==			
ANR	570689	Identifier	bpno		570258	0					
ANR	570690	AdditiveExpression	cblk -> numbps - 4		570258	1		-			
ANR	570691	PtrMemberAccess	cblk -> numbps		570258	0					
ANR	570692	Identifier	cblk		570258	0					
ANR	570693	Identifier	numbps		570258	1					
ANR	570694	PrimaryExpression	4		570258	1					
ANR	570695	EqualityExpression	passtype == 2		570258	1		==			
ANR	570696	Identifier	passtype		570258	0					
ANR	570697	PrimaryExpression	2		570258	1					
ANR	570698	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_LAZY		570258	1		&			
ANR	570699	Identifier	cblksty		570258	0					
ANR	570700	Identifier	J2K_CCP_CBLKSTY_LAZY		570258	1					
ANR	570701	CompoundStatement		72:54:2378:2378	570258	1					
ANR	570702	IfStatement	if ( type == T1_TYPE_RAW )		570258	0					
ANR	570703	Condition	type == T1_TYPE_RAW	1261:20:36770:36788	570258	0	True				
ANR	570704	EqualityExpression	type == T1_TYPE_RAW		570258	0		==			
ANR	570705	Identifier	type		570258	0					
ANR	570706	Identifier	T1_TYPE_RAW		570258	1					
ANR	570707	CompoundStatement		73:41:2421:2421	570258	1					
ANR	570708	ExpressionStatement	mqc_flush ( mqc )	1262:20:36813:36827	570258	0	True				
ANR	570709	CallExpression	mqc_flush ( mqc )		570258	0					
ANR	570710	Callee	mqc_flush		570258	0					
ANR	570711	Identifier	mqc_flush		570258	0					
ANR	570712	ArgumentList	mqc		570258	1					
ANR	570713	Argument	mqc		570258	0					
ANR	570714	Identifier	mqc		570258	0					
ANR	570715	ExpressionStatement	correction = 1	1263:20:36849:36863	570258	1	True				
ANR	570716	AssignmentExpression	correction = 1		570258	0		=			
ANR	570717	Identifier	correction		570258	0					
ANR	570718	PrimaryExpression	1		570258	1					
ANR	570719	ElseStatement	else		570258	0					
ANR	570720	CompoundStatement		77:23:2581:2581	570258	0					
ANR	570721	ExpressionStatement	mqc_flush ( mqc )	1266:20:37018:37032	570258	0	True				
ANR	570722	CallExpression	mqc_flush ( mqc )		570258	0					
ANR	570723	Callee	mqc_flush		570258	0					
ANR	570724	Identifier	mqc_flush		570258	0					
ANR	570725	ArgumentList	mqc		570258	1					
ANR	570726	Argument	mqc		570258	0					
ANR	570727	Identifier	mqc		570258	0					
ANR	570728	ExpressionStatement	correction = 1	1267:20:37054:37068	570258	1	True				
ANR	570729	AssignmentExpression	correction = 1		570258	0		=			
ANR	570730	Identifier	correction		570258	0					
ANR	570731	PrimaryExpression	1		570258	1					
ANR	570732	ExpressionStatement	pass -> term = 1	1269:16:37104:37118	570258	1	True				
ANR	570733	AssignmentExpression	pass -> term = 1		570258	0		=			
ANR	570734	PtrMemberAccess	pass -> term		570258	0					
ANR	570735	Identifier	pass		570258	0					
ANR	570736	Identifier	term		570258	1					
ANR	570737	PrimaryExpression	1		570258	1					
ANR	570738	ElseStatement	else		570258	0					
ANR	570739	CompoundStatement		82:19:2769:2769	570258	0					
ANR	570740	ExpressionStatement	pass -> term = 0	1271:16:37157:37171	570258	0	True				
ANR	570741	AssignmentExpression	pass -> term = 0		570258	0		=			
ANR	570742	PtrMemberAccess	pass -> term		570258	0					
ANR	570743	Identifier	pass		570258	0					
ANR	570744	Identifier	term		570258	1					
ANR	570745	PrimaryExpression	0		570258	1					
ANR	570746	IfStatement	if ( ++ passtype == 3 )		570258	8					
ANR	570747	Condition	++ passtype == 3	1275:12:37210:37224	570258	0	True				
ANR	570748	EqualityExpression	++ passtype == 3		570258	0		==			
ANR	570749	UnaryExpression	++ passtype		570258	0					
ANR	570750	IncDec	++		570258	0					
ANR	570751	Identifier	passtype		570258	1					
ANR	570752	PrimaryExpression	3		570258	1					
ANR	570753	CompoundStatement		87:29:2857:2857	570258	1					
ANR	570754	ExpressionStatement	passtype = 0	1276:12:37241:37253	570258	0	True				
ANR	570755	AssignmentExpression	passtype = 0		570258	0		=			
ANR	570756	Identifier	passtype		570258	0					
ANR	570757	PrimaryExpression	0		570258	1					
ANR	570758	ExpressionStatement	bpno --	1277:12:37267:37273	570258	1	True				
ANR	570759	PostIncDecOperationExpression	bpno --		570258	0					
ANR	570760	Identifier	bpno		570258	0					
ANR	570761	IncDec	--		570258	1					
ANR	570762	IfStatement	if ( pass -> term && bpno > 0 )		570258	9					
ANR	570763	Condition	pass -> term && bpno > 0	1280:12:37298:37319	570258	0	True				
ANR	570764	AndExpression	pass -> term && bpno > 0		570258	0		&&			
ANR	570765	PtrMemberAccess	pass -> term		570258	0					
ANR	570766	Identifier	pass		570258	0					
ANR	570767	Identifier	term		570258	1					
ANR	570768	RelationalExpression	bpno > 0		570258	1		>			
ANR	570769	Identifier	bpno		570258	0					
ANR	570770	PrimaryExpression	0		570258	1					
ANR	570771	CompoundStatement		92:36:2952:2952	570258	1					
ANR	570772	ExpressionStatement	type = ( ( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ	1281:12:37336:37473	570258	0	True				
ANR	570773	AssignmentExpression	type = ( ( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ		570258	0		=			
ANR	570774	Identifier	type		570258	0					
ANR	570775	ConditionalExpression	( ( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ		570258	1					
ANR	570776	Condition	( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	0					
ANR	570777	AndExpression	( bpno < ( cblk -> numbps - 4 ) ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	0		&&			
ANR	570778	RelationalExpression	bpno < ( cblk -> numbps - 4 )		570258	0		<			
ANR	570779	Identifier	bpno		570258	0					
ANR	570780	AdditiveExpression	cblk -> numbps - 4		570258	1		-			
ANR	570781	PtrMemberAccess	cblk -> numbps		570258	0					
ANR	570782	Identifier	cblk		570258	0					
ANR	570783	Identifier	numbps		570258	1					
ANR	570784	PrimaryExpression	4		570258	1					
ANR	570785	AndExpression	( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	1		&&			
ANR	570786	RelationalExpression	passtype < 2		570258	0		<			
ANR	570787	Identifier	passtype		570258	0					
ANR	570788	PrimaryExpression	2		570258	1					
ANR	570789	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_LAZY		570258	1		&			
ANR	570790	Identifier	cblksty		570258	0					
ANR	570791	Identifier	J2K_CCP_CBLKSTY_LAZY		570258	1					
ANR	570792	Identifier	T1_TYPE_RAW		570258	1					
ANR	570793	Identifier	T1_TYPE_MQ		570258	2					
ANR	570794	IfStatement	if ( type == T1_TYPE_RAW )		570258	1					
ANR	570795	Condition	type == T1_TYPE_RAW	1283:16:37491:37509	570258	0	True				
ANR	570796	EqualityExpression	type == T1_TYPE_RAW		570258	0		==			
ANR	570797	Identifier	type		570258	0					
ANR	570798	Identifier	T1_TYPE_RAW		570258	1					
ANR	570799	CompoundStatement		95:37:3142:3142	570258	1					
ANR	570800	ExpressionStatement	mqc_bypass_init_enc ( mqc )	1284:16:37530:37554	570258	0	True				
ANR	570801	CallExpression	mqc_bypass_init_enc ( mqc )		570258	0					
ANR	570802	Callee	mqc_bypass_init_enc		570258	0					
ANR	570803	Identifier	mqc_bypass_init_enc		570258	0					
ANR	570804	ArgumentList	mqc		570258	1					
ANR	570805	Argument	mqc		570258	0					
ANR	570806	Identifier	mqc		570258	0					
ANR	570807	ElseStatement	else		570258	0					
ANR	570808	CompoundStatement		97:19:3205:3205	570258	0					
ANR	570809	ExpressionStatement	mqc_restart_init_enc ( mqc )	1286:16:37593:37618	570258	0	True				
ANR	570810	CallExpression	mqc_restart_init_enc ( mqc )		570258	0					
ANR	570811	Callee	mqc_restart_init_enc		570258	0					
ANR	570812	Identifier	mqc_restart_init_enc		570258	0					
ANR	570813	ArgumentList	mqc		570258	1					
ANR	570814	Argument	mqc		570258	0					
ANR	570815	Identifier	mqc		570258	0					
ANR	570816	ExpressionStatement	pass -> distortiondec = cumwmsedec	1290:8:37653:37685	570258	10	True				
ANR	570817	AssignmentExpression	pass -> distortiondec = cumwmsedec		570258	0		=			
ANR	570818	PtrMemberAccess	pass -> distortiondec		570258	0					
ANR	570819	Identifier	pass		570258	0					
ANR	570820	Identifier	distortiondec		570258	1					
ANR	570821	Identifier	cumwmsedec		570258	1					
ANR	570822	ExpressionStatement	pass -> rate = mqc_numbytes ( mqc ) + correction	1291:8:37695:37738	570258	11	True				
ANR	570823	AssignmentExpression	pass -> rate = mqc_numbytes ( mqc ) + correction		570258	0		=			
ANR	570824	PtrMemberAccess	pass -> rate		570258	0					
ANR	570825	Identifier	pass		570258	0					
ANR	570826	Identifier	rate		570258	1					
ANR	570827	AdditiveExpression	mqc_numbytes ( mqc ) + correction		570258	1		+			
ANR	570828	CallExpression	mqc_numbytes ( mqc )		570258	0					
ANR	570829	Callee	mqc_numbytes		570258	0					
ANR	570830	Identifier	mqc_numbytes		570258	0					
ANR	570831	ArgumentList	mqc		570258	1					
ANR	570832	Argument	mqc		570258	0					
ANR	570833	Identifier	mqc		570258	0					
ANR	570834	Identifier	correction		570258	1					
ANR	570835	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_RESET )		570258	12					
ANR	570836	Condition	cblksty & J2K_CCP_CBLKSTY_RESET	1294:12:37802:37832	570258	0	True				
ANR	570837	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_RESET		570258	0		&			
ANR	570838	Identifier	cblksty		570258	0					
ANR	570839	Identifier	J2K_CCP_CBLKSTY_RESET		570258	1					
ANR	570840	CompoundStatement		106:45:3465:3465	570258	1					
ANR	570841	ExpressionStatement	mqc_reset_enc ( mqc )	1295:12:37849:37867	570258	0	True				
ANR	570842	CallExpression	mqc_reset_enc ( mqc )		570258	0					
ANR	570843	Callee	mqc_reset_enc		570258	0					
ANR	570844	Identifier	mqc_reset_enc		570258	0					
ANR	570845	ArgumentList	mqc		570258	1					
ANR	570846	Argument	mqc		570258	0					
ANR	570847	Identifier	mqc		570258	0					
ANR	570848	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_PTERM )		570258	18					
ANR	570849	Condition	cblksty & J2K_CCP_CBLKSTY_PTERM	1300:8:37938:37968	570258	0	True				
ANR	570850	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_PTERM		570258	0		&			
ANR	570851	Identifier	cblksty		570258	0					
ANR	570852	Identifier	J2K_CCP_CBLKSTY_PTERM		570258	1					
ANR	570853	CompoundStatement		112:41:3601:3601	570258	1					
ANR	570854	ExpressionStatement	mqc_erterm_enc ( mqc )	1301:8:37981:38000	570258	0	True				
ANR	570855	CallExpression	mqc_erterm_enc ( mqc )		570258	0					
ANR	570856	Callee	mqc_erterm_enc		570258	0					
ANR	570857	Identifier	mqc_erterm_enc		570258	0					
ANR	570858	ArgumentList	mqc		570258	1					
ANR	570859	Argument	mqc		570258	0					
ANR	570860	Identifier	mqc		570258	0					
ANR	570861	ElseStatement	else		570258	0					
ANR	570862	IfStatement	if ( ! ( cblksty & J2K_CCP_CBLKSTY_LAZY ) )		570258	0					
ANR	570863	Condition	! ( cblksty & J2K_CCP_CBLKSTY_LAZY )	1302:36:38038:38070	570258	0	True				
ANR	570864	UnaryOperationExpression	! ( cblksty & J2K_CCP_CBLKSTY_LAZY )		570258	0					
ANR	570865	UnaryOperator	!		570258	0					
ANR	570866	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_LAZY		570258	1		&			
ANR	570867	Identifier	cblksty		570258	0					
ANR	570868	Identifier	J2K_CCP_CBLKSTY_LAZY		570258	1					
ANR	570869	CompoundStatement		114:71:3703:3703	570258	1					
ANR	570870	ExpressionStatement	mqc_flush ( mqc )	1303:8:38083:38097	570258	0	True				
ANR	570871	CallExpression	mqc_flush ( mqc )		570258	0					
ANR	570872	Callee	mqc_flush		570258	0					
ANR	570873	Identifier	mqc_flush		570258	0					
ANR	570874	ArgumentList	mqc		570258	1					
ANR	570875	Argument	mqc		570258	0					
ANR	570876	Identifier	mqc		570258	0					
ANR	570877	ExpressionStatement	cblk -> totalpasses = passno	1306:4:38110:38136	570258	19	True				
ANR	570878	AssignmentExpression	cblk -> totalpasses = passno		570258	0		=			
ANR	570879	PtrMemberAccess	cblk -> totalpasses		570258	0					
ANR	570880	Identifier	cblk		570258	0					
ANR	570881	Identifier	totalpasses		570258	1					
ANR	570882	Identifier	passno		570258	1					
ANR	570883	ForStatement	for ( passno = 0 ; passno < cblk -> totalpasses ; passno ++ )		570258	20					
ANR	570884	ForInit	passno = 0 ;	1308:9:38148:38158	570258	0	True				
ANR	570885	AssignmentExpression	passno = 0		570258	0		=			
ANR	570886	Identifier	passno		570258	0					
ANR	570887	PrimaryExpression	0		570258	1					
ANR	570888	Condition	passno < cblk -> totalpasses	1308:21:38160:38185	570258	1	True				
ANR	570889	RelationalExpression	passno < cblk -> totalpasses		570258	0		<			
ANR	570890	Identifier	passno		570258	0					
ANR	570891	PtrMemberAccess	cblk -> totalpasses		570258	1					
ANR	570892	Identifier	cblk		570258	0					
ANR	570893	Identifier	totalpasses		570258	1					
ANR	570894	PostIncDecOperationExpression	passno ++	1308:49:38188:38195	570258	2	True				
ANR	570895	Identifier	passno		570258	0					
ANR	570896	IncDec	++		570258	1					
ANR	570897	CompoundStatement		121:8:3838:3882	570258	3					
ANR	570898	IdentifierDeclStatement	opj_tcd_pass_t * pass = & cblk -> passes [ passno ] ;	1309:8:38208:38252	570258	0	True				
ANR	570899	IdentifierDecl	* pass = & cblk -> passes [ passno ]		570258	0					
ANR	570900	IdentifierDeclType	opj_tcd_pass_t *		570258	0					
ANR	570901	Identifier	pass		570258	1					
ANR	570902	AssignmentExpression	* pass = & cblk -> passes [ passno ]		570258	2		=			
ANR	570903	Identifier	pass		570258	0					
ANR	570904	UnaryOperationExpression	& cblk -> passes [ passno ]		570258	1					
ANR	570905	UnaryOperator	&		570258	0					
ANR	570906	ArrayIndexing	cblk -> passes [ passno ]		570258	1					
ANR	570907	PtrMemberAccess	cblk -> passes		570258	0					
ANR	570908	Identifier	cblk		570258	0					
ANR	570909	Identifier	passes		570258	1					
ANR	570910	Identifier	passno		570258	1					
ANR	570911	IfStatement	if ( pass -> rate > mqc_numbytes ( mqc ) )		570258	1					
ANR	570912	Condition	pass -> rate > mqc_numbytes ( mqc )	1310:12:38266:38295	570258	0	True				
ANR	570913	RelationalExpression	pass -> rate > mqc_numbytes ( mqc )		570258	0		>			
ANR	570914	PtrMemberAccess	pass -> rate		570258	0					
ANR	570915	Identifier	pass		570258	0					
ANR	570916	Identifier	rate		570258	1					
ANR	570917	CallExpression	mqc_numbytes ( mqc )		570258	1					
ANR	570918	Callee	mqc_numbytes		570258	0					
ANR	570919	Identifier	mqc_numbytes		570258	0					
ANR	570920	ArgumentList	mqc		570258	1					
ANR	570921	Argument	mqc		570258	0					
ANR	570922	Identifier	mqc		570258	0					
ANR	570923	CompoundStatement		122:44:3928:3928	570258	1					
ANR	570924	ExpressionStatement	pass -> rate = mqc_numbytes ( mqc )	1311:12:38312:38342	570258	0	True				
ANR	570925	AssignmentExpression	pass -> rate = mqc_numbytes ( mqc )		570258	0		=			
ANR	570926	PtrMemberAccess	pass -> rate		570258	0					
ANR	570927	Identifier	pass		570258	0					
ANR	570928	Identifier	rate		570258	1					
ANR	570929	CallExpression	mqc_numbytes ( mqc )		570258	1					
ANR	570930	Callee	mqc_numbytes		570258	0					
ANR	570931	Identifier	mqc_numbytes		570258	0					
ANR	570932	ArgumentList	mqc		570258	1					
ANR	570933	Argument	mqc		570258	0					
ANR	570934	Identifier	mqc		570258	0					
ANR	570935	IfStatement	if ( ( pass -> rate > 1 ) && ( cblk -> data [ pass -> rate - 1 ] == 0xFF ) )		570258	2					
ANR	570936	Condition	( pass -> rate > 1 ) && ( cblk -> data [ pass -> rate - 1 ] == 0xFF )	1314:12:38434:38489	570258	0	True				
ANR	570937	AndExpression	( pass -> rate > 1 ) && ( cblk -> data [ pass -> rate - 1 ] == 0xFF )		570258	0		&&			
ANR	570938	RelationalExpression	pass -> rate > 1		570258	0		>			
ANR	570939	PtrMemberAccess	pass -> rate		570258	0					
ANR	570940	Identifier	pass		570258	0					
ANR	570941	Identifier	rate		570258	1					
ANR	570942	PrimaryExpression	1		570258	1					
ANR	570943	EqualityExpression	cblk -> data [ pass -> rate - 1 ] == 0xFF		570258	1		==			
ANR	570944	ArrayIndexing	cblk -> data [ pass -> rate - 1 ]		570258	0					
ANR	570945	PtrMemberAccess	cblk -> data		570258	0					
ANR	570946	Identifier	cblk		570258	0					
ANR	570947	Identifier	data		570258	1					
ANR	570948	AdditiveExpression	pass -> rate - 1		570258	1		-			
ANR	570949	PtrMemberAccess	pass -> rate		570258	0					
ANR	570950	Identifier	pass		570258	0					
ANR	570951	Identifier	rate		570258	1					
ANR	570952	PrimaryExpression	1		570258	1					
ANR	570953	PrimaryExpression	0xFF		570258	1					
ANR	570954	CompoundStatement		126:70:4122:4122	570258	1					
ANR	570955	ExpressionStatement	pass -> rate --	1315:12:38506:38518	570258	0	True				
ANR	570956	PostIncDecOperationExpression	pass -> rate --		570258	0					
ANR	570957	PtrMemberAccess	pass -> rate		570258	0					
ANR	570958	Identifier	pass		570258	0					
ANR	570959	Identifier	rate		570258	1					
ANR	570960	IncDec	--		570258	1					
ANR	570961	ExpressionStatement	pass -> len = pass -> rate - ( passno == 0 ? 0 : cblk -> passes [ passno - 1 ] . rate )	1317:8:38538:38612	570258	3	True				
ANR	570962	AssignmentExpression	pass -> len = pass -> rate - ( passno == 0 ? 0 : cblk -> passes [ passno - 1 ] . rate )		570258	0		=			
ANR	570963	PtrMemberAccess	pass -> len		570258	0					
ANR	570964	Identifier	pass		570258	0					
ANR	570965	Identifier	len		570258	1					
ANR	570966	AdditiveExpression	pass -> rate - ( passno == 0 ? 0 : cblk -> passes [ passno - 1 ] . rate )		570258	1		-			
ANR	570967	PtrMemberAccess	pass -> rate		570258	0					
ANR	570968	Identifier	pass		570258	0					
ANR	570969	Identifier	rate		570258	1					
ANR	570970	ConditionalExpression	passno == 0 ? 0 : cblk -> passes [ passno - 1 ] . rate		570258	1					
ANR	570971	Condition	passno == 0		570258	0					
ANR	570972	EqualityExpression	passno == 0		570258	0		==			
ANR	570973	Identifier	passno		570258	0					
ANR	570974	PrimaryExpression	0		570258	1					
ANR	570975	PrimaryExpression	0		570258	1					
ANR	570976	MemberAccess	cblk -> passes [ passno - 1 ] . rate		570258	2					
ANR	570977	ArrayIndexing	cblk -> passes [ passno - 1 ]		570258	0					
ANR	570978	PtrMemberAccess	cblk -> passes		570258	0					
ANR	570979	Identifier	cblk		570258	0					
ANR	570980	Identifier	passes		570258	1					
ANR	570981	AdditiveExpression	passno - 1		570258	1		-			
ANR	570982	Identifier	passno		570258	0					
ANR	570983	PrimaryExpression	1		570258	1					
ANR	570984	Identifier	rate		570258	1					
ANR	570985	ReturnType	static void		570258	1					
ANR	570986	Identifier	t1_encode_cblk		570258	2					
ANR	570987	ParameterList	"opj_t1_t * t1 , opj_tcd_cblk_enc_t * cblk , int orient , int compno , int level , int qmfbid , double stepsize , int cblksty , int numcomps , int mct , opj_tcd_tile_t * tile"		570258	3					
ANR	570988	Parameter	opj_t1_t * t1	1178:4:34166:34177	570258	0	True				
ANR	570989	ParameterType	opj_t1_t *		570258	0					
ANR	570990	Identifier	t1		570258	1					
ANR	570991	Parameter	opj_tcd_cblk_enc_t * cblk	1179:4:34184:34207	570258	1	True				
ANR	570992	ParameterType	opj_tcd_cblk_enc_t *		570258	0					
ANR	570993	Identifier	cblk		570258	1					
ANR	570994	Parameter	int orient	1180:4:34214:34223	570258	2	True				
ANR	570995	ParameterType	int		570258	0					
ANR	570996	Identifier	orient		570258	1					
ANR	570997	Parameter	int compno	1181:4:34230:34239	570258	3	True				
ANR	570998	ParameterType	int		570258	0					
ANR	570999	Identifier	compno		570258	1					
ANR	571000	Parameter	int level	1182:4:34246:34254	570258	4	True				
ANR	571001	ParameterType	int		570258	0					
ANR	571002	Identifier	level		570258	1					
ANR	571003	Parameter	int qmfbid	1183:4:34261:34270	570258	5	True				
ANR	571004	ParameterType	int		570258	0					
ANR	571005	Identifier	qmfbid		570258	1					
ANR	571006	Parameter	double stepsize	1184:4:34277:34291	570258	6	True				
ANR	571007	ParameterType	double		570258	0					
ANR	571008	Identifier	stepsize		570258	1					
ANR	571009	Parameter	int cblksty	1185:4:34298:34308	570258	7	True				
ANR	571010	ParameterType	int		570258	0					
ANR	571011	Identifier	cblksty		570258	1					
ANR	571012	Parameter	int numcomps	1186:4:34315:34326	570258	8	True				
ANR	571013	ParameterType	int		570258	0					
ANR	571014	Identifier	numcomps		570258	1					
ANR	571015	Parameter	int mct	1187:4:34333:34339	570258	9	True				
ANR	571016	ParameterType	int		570258	0					
ANR	571017	Identifier	mct		570258	1					
ANR	571018	Parameter	opj_tcd_tile_t * tile	1188:4:34346:34366	570258	10	True				
ANR	571019	ParameterType	opj_tcd_tile_t *		570258	0					
ANR	571020	Identifier	tile		570258	1					
ANR	571021	CFGEntryNode	ENTRY		570258		True				
ANR	571022	CFGExitNode	EXIT		570258		True				
ANR	571023	Symbol	J2K_CCP_CBLKSTY_RESET		570258						
ANR	571024	Symbol	* cblk -> passes		570258						
ANR	571025	Symbol	t1 -> w		570258						
ANR	571026	Symbol	cblk -> data		570258						
ANR	571027	Symbol	type		570258						
ANR	571028	Symbol	J2K_CCP_CBLKSTY_LAZY		570258						
ANR	571029	Symbol	pass -> term		570258						
ANR	571030	Symbol	tmp		570258						
ANR	571031	Symbol	tile		570258						
ANR	571032	Symbol	pass -> distortiondec		570258						
ANR	571033	Symbol	* cblk -> data		570258						
ANR	571034	Symbol	pass -> rate		570258						
ANR	571035	Symbol	mct		570258						
ANR	571036	Symbol	T1_NMSEDEC_FRACBITS		570258						
ANR	571037	Symbol	bpno		570258						
ANR	571038	Symbol	orient		570258						
ANR	571039	Symbol	level		570258						
ANR	571040	Symbol	pass		570258						
ANR	571041	Symbol	int_max		570258						
ANR	571042	Symbol	* * pass		570258						
ANR	571043	Symbol	cumwmsedec		570258						
ANR	571044	Symbol	& nmsedec		570258						
ANR	571045	Symbol	T1_CTXNO_AGG		570258						
ANR	571046	Symbol	cblk -> passes [ passno - 1 ] . rate		570258						
ANR	571047	Symbol	* * t1		570258						
ANR	571048	Symbol	J2K_CCP_CBLKSTY_SEGSYM		570258						
ANR	571049	Symbol	* passno		570258						
ANR	571050	Symbol	compno		570258						
ANR	571051	Symbol	cblk		570258						
ANR	571052	Symbol	cblksty		570258						
ANR	571053	Symbol	t1 -> mqc		570258						
ANR	571054	Symbol	cblk -> numbps		570258						
ANR	571055	Symbol	passno		570258						
ANR	571056	Symbol	correction		570258						
ANR	571057	Symbol	t1		570258						
ANR	571058	Symbol	mqc		570258						
ANR	571059	Symbol	* tile		570258						
ANR	571060	Symbol	passtype		570258						
ANR	571061	Symbol	J2K_CCP_CBLKSTY_TERMALL		570258						
ANR	571062	Symbol	int_floorlog2		570258						
ANR	571063	Symbol	cblk -> totalpasses		570258						
ANR	571064	Symbol	pass -> len		570258						
ANR	571065	Symbol	* cblk		570258						
ANR	571066	Symbol	tempwmsedec		570258						
ANR	571067	Symbol	T1_TYPE_RAW		570258						
ANR	571068	Symbol	T1_TYPE_MQ		570258						
ANR	571069	Symbol	* pass -> rate		570258						
ANR	571070	Symbol	T1_CTXNO_UNI		570258						
ANR	571071	Symbol	t1_getwmsedec		570258						
ANR	571072	Symbol	numcomps		570258						
ANR	571073	Symbol	mqc_numbytes		570258						
ANR	571074	Symbol	* * cblk		570258						
ANR	571075	Symbol	* t1		570258						
ANR	571076	Symbol	nmsedec		570258						
ANR	571077	Symbol	max		570258						
ANR	571078	Symbol	* pass		570258						
ANR	571079	Symbol	J2K_CCP_CBLKSTY_PTERM		570258						
ANR	571080	Symbol	tile -> distotile		570258						
ANR	571081	Symbol	i		570258						
ANR	571082	Symbol	t1 -> data		570258						
ANR	571083	Symbol	cblk -> passes		570258						
ANR	571084	Symbol	qmfbid		570258						
ANR	571085	Symbol	T1_CTXNO_ZC		570258						
ANR	571086	Symbol	abs		570258						
ANR	571087	Symbol	* i		570258						
ANR	571088	Symbol	t1 -> h		570258						
ANR	571089	Symbol	* t1 -> data		570258						
ANR	571090	Symbol	stepsize		570258						
ANR	571091	Function	t1_decode_cblk	1321:0:38623:41465							
ANR	571092	FunctionDef	"t1_decode_cblk (opj_t1_t * t1 , opj_tcd_cblk_dec_t * cblk , int orient , int roishift , int cblksty)"		571091	0					
ANR	571093	CompoundStatement		1327:0:38750:41465	571091	0					
ANR	571094	IdentifierDeclStatement	opj_raw_t * raw = t1 -> raw ;	1328:4:38756:38780	571091	0	True				
ANR	571095	IdentifierDecl	* raw = t1 -> raw		571091	0					
ANR	571096	IdentifierDeclType	opj_raw_t *		571091	0					
ANR	571097	Identifier	raw		571091	1					
ANR	571098	AssignmentExpression	* raw = t1 -> raw		571091	2		=			
ANR	571099	Identifier	raw		571091	0					
ANR	571100	PtrMemberAccess	t1 -> raw		571091	1					
ANR	571101	Identifier	t1		571091	0					
ANR	571102	Identifier	raw		571091	1					
ANR	571103	IdentifierDeclStatement	opj_mqc_t * mqc = t1 -> mqc ;	1329:4:38808:38832	571091	1	True				
ANR	571104	IdentifierDecl	* mqc = t1 -> mqc		571091	0					
ANR	571105	IdentifierDeclType	opj_mqc_t *		571091	0					
ANR	571106	Identifier	mqc		571091	1					
ANR	571107	AssignmentExpression	* mqc = t1 -> mqc		571091	2		=			
ANR	571108	Identifier	mqc		571091	0					
ANR	571109	PtrMemberAccess	t1 -> mqc		571091	1					
ANR	571110	Identifier	t1		571091	0					
ANR	571111	Identifier	mqc		571091	1					
ANR	571112	IdentifierDeclStatement	"int bpno , passtype ;"	1331:4:38861:38879	571091	2	True				
ANR	571113	IdentifierDecl	bpno		571091	0					
ANR	571114	IdentifierDeclType	int		571091	0					
ANR	571115	Identifier	bpno		571091	1					
ANR	571116	IdentifierDecl	passtype		571091	1					
ANR	571117	IdentifierDeclType	int		571091	0					
ANR	571118	Identifier	passtype		571091	1					
ANR	571119	IdentifierDeclStatement	"int segno , passno ;"	1332:4:38885:38902	571091	3	True				
ANR	571120	IdentifierDecl	segno		571091	0					
ANR	571121	IdentifierDeclType	int		571091	0					
ANR	571122	Identifier	segno		571091	1					
ANR	571123	IdentifierDecl	passno		571091	1					
ANR	571124	IdentifierDeclType	int		571091	0					
ANR	571125	Identifier	passno		571091	1					
ANR	571126	IdentifierDeclStatement	char type = T1_TYPE_MQ ;	1333:4:38908:38930	571091	4	True				
ANR	571127	IdentifierDecl	type = T1_TYPE_MQ		571091	0					
ANR	571128	IdentifierDeclType	char		571091	0					
ANR	571129	Identifier	type		571091	1					
ANR	571130	AssignmentExpression	type = T1_TYPE_MQ		571091	2		=			
ANR	571131	Identifier	T1_TYPE_MQ		571091	0					
ANR	571132	Identifier	T1_TYPE_MQ		571091	1					
ANR	571133	IfStatement	"if ( ! allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 ) )"		571091	5					
ANR	571134	Condition	"! allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 )"	1335:8:38959:39070	571091	0	True				
ANR	571135	UnaryOperationExpression	"! allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 )"		571091	0					
ANR	571136	UnaryOperator	!		571091	0					
ANR	571137	CallExpression	"allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 )"		571091	1					
ANR	571138	Callee	allocate_buffers		571091	0					
ANR	571139	Identifier	allocate_buffers		571091	0					
ANR	571140	ArgumentList	t1		571091	1					
ANR	571141	Argument	t1		571091	0					
ANR	571142	Identifier	t1		571091	0					
ANR	571143	Argument	cblk -> x1 - cblk -> x0		571091	1					
ANR	571144	AdditiveExpression	cblk -> x1 - cblk -> x0		571091	0		-			
ANR	571145	PtrMemberAccess	cblk -> x1		571091	0					
ANR	571146	Identifier	cblk		571091	0					
ANR	571147	Identifier	x1		571091	1					
ANR	571148	PtrMemberAccess	cblk -> x0		571091	1					
ANR	571149	Identifier	cblk		571091	0					
ANR	571150	Identifier	x0		571091	1					
ANR	571151	Argument	cblk -> y1 - cblk -> y0		571091	2					
ANR	571152	AdditiveExpression	cblk -> y1 - cblk -> y0		571091	0		-			
ANR	571153	PtrMemberAccess	cblk -> y1		571091	0					
ANR	571154	Identifier	cblk		571091	0					
ANR	571155	Identifier	y1		571091	1					
ANR	571156	PtrMemberAccess	cblk -> y0		571091	1					
ANR	571157	Identifier	cblk		571091	0					
ANR	571158	Identifier	y0		571091	1					
ANR	571159	CompoundStatement		12:38:322:322	571091	1					
ANR	571160	ReturnStatement	return ;	1339:8:39083:39089	571091	0	True				
ANR	571161	ExpressionStatement	bpno = roishift + cblk -> numbps - 1	1342:4:39102:39136	571091	6	True				
ANR	571162	AssignmentExpression	bpno = roishift + cblk -> numbps - 1		571091	0		=			
ANR	571163	Identifier	bpno		571091	0					
ANR	571164	AdditiveExpression	roishift + cblk -> numbps - 1		571091	1		+			
ANR	571165	Identifier	roishift		571091	0					
ANR	571166	AdditiveExpression	cblk -> numbps - 1		571091	1		-			
ANR	571167	PtrMemberAccess	cblk -> numbps		571091	0					
ANR	571168	Identifier	cblk		571091	0					
ANR	571169	Identifier	numbps		571091	1					
ANR	571170	PrimaryExpression	1		571091	1					
ANR	571171	ExpressionStatement	passtype = 2	1343:4:39142:39154	571091	7	True				
ANR	571172	AssignmentExpression	passtype = 2		571091	0		=			
ANR	571173	Identifier	passtype		571091	0					
ANR	571174	PrimaryExpression	2		571091	1					
ANR	571175	ExpressionStatement	mqc_resetstates ( mqc )	1345:4:39161:39181	571091	8	True				
ANR	571176	CallExpression	mqc_resetstates ( mqc )		571091	0					
ANR	571177	Callee	mqc_resetstates		571091	0					
ANR	571178	Identifier	mqc_resetstates		571091	0					
ANR	571179	ArgumentList	mqc		571091	1					
ANR	571180	Argument	mqc		571091	0					
ANR	571181	Identifier	mqc		571091	0					
ANR	571182	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_UNI , 0 , 46 )"	1346:4:39187:39225	571091	9	True				
ANR	571183	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_UNI , 0 , 46 )"		571091	0					
ANR	571184	Callee	mqc_setstate		571091	0					
ANR	571185	Identifier	mqc_setstate		571091	0					
ANR	571186	ArgumentList	mqc		571091	1					
ANR	571187	Argument	mqc		571091	0					
ANR	571188	Identifier	mqc		571091	0					
ANR	571189	Argument	T1_CTXNO_UNI		571091	1					
ANR	571190	Identifier	T1_CTXNO_UNI		571091	0					
ANR	571191	Argument	0		571091	2					
ANR	571192	PrimaryExpression	0		571091	0					
ANR	571193	Argument	46		571091	3					
ANR	571194	PrimaryExpression	46		571091	0					
ANR	571195	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_AGG , 0 , 3 )"	1347:4:39231:39268	571091	10	True				
ANR	571196	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_AGG , 0 , 3 )"		571091	0					
ANR	571197	Callee	mqc_setstate		571091	0					
ANR	571198	Identifier	mqc_setstate		571091	0					
ANR	571199	ArgumentList	mqc		571091	1					
ANR	571200	Argument	mqc		571091	0					
ANR	571201	Identifier	mqc		571091	0					
ANR	571202	Argument	T1_CTXNO_AGG		571091	1					
ANR	571203	Identifier	T1_CTXNO_AGG		571091	0					
ANR	571204	Argument	0		571091	2					
ANR	571205	PrimaryExpression	0		571091	0					
ANR	571206	Argument	3		571091	3					
ANR	571207	PrimaryExpression	3		571091	0					
ANR	571208	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_ZC , 0 , 4 )"	1348:4:39274:39310	571091	11	True				
ANR	571209	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_ZC , 0 , 4 )"		571091	0					
ANR	571210	Callee	mqc_setstate		571091	0					
ANR	571211	Identifier	mqc_setstate		571091	0					
ANR	571212	ArgumentList	mqc		571091	1					
ANR	571213	Argument	mqc		571091	0					
ANR	571214	Identifier	mqc		571091	0					
ANR	571215	Argument	T1_CTXNO_ZC		571091	1					
ANR	571216	Identifier	T1_CTXNO_ZC		571091	0					
ANR	571217	Argument	0		571091	2					
ANR	571218	PrimaryExpression	0		571091	0					
ANR	571219	Argument	4		571091	3					
ANR	571220	PrimaryExpression	4		571091	0					
ANR	571221	ForStatement	for ( segno = 0 ; segno < cblk -> numsegs ; ++ segno )		571091	12					
ANR	571222	ForInit	segno = 0 ;	1350:9:39322:39331	571091	0	True				
ANR	571223	AssignmentExpression	segno = 0		571091	0		=			
ANR	571224	Identifier	segno		571091	0					
ANR	571225	PrimaryExpression	0		571091	1					
ANR	571226	Condition	segno < cblk -> numsegs	1350:20:39333:39353	571091	1	True				
ANR	571227	RelationalExpression	segno < cblk -> numsegs		571091	0		<			
ANR	571228	Identifier	segno		571091	0					
ANR	571229	PtrMemberAccess	cblk -> numsegs		571091	1					
ANR	571230	Identifier	cblk		571091	0					
ANR	571231	Identifier	numsegs		571091	1					
ANR	571232	UnaryExpression	++ segno	1350:43:39356:39362	571091	2	True				
ANR	571233	IncDec	++		571091	0					
ANR	571234	Identifier	segno		571091	1					
ANR	571235	CompoundStatement		25:8:624:663	571091	3					
ANR	571236	IdentifierDeclStatement	opj_tcd_seg_t * seg = & cblk -> segs [ segno ] ;	1351:8:39375:39414	571091	0	True				
ANR	571237	IdentifierDecl	* seg = & cblk -> segs [ segno ]		571091	0					
ANR	571238	IdentifierDeclType	opj_tcd_seg_t *		571091	0					
ANR	571239	Identifier	seg		571091	1					
ANR	571240	AssignmentExpression	* seg = & cblk -> segs [ segno ]		571091	2		=			
ANR	571241	Identifier	seg		571091	0					
ANR	571242	UnaryOperationExpression	& cblk -> segs [ segno ]		571091	1					
ANR	571243	UnaryOperator	&		571091	0					
ANR	571244	ArrayIndexing	cblk -> segs [ segno ]		571091	1					
ANR	571245	PtrMemberAccess	cblk -> segs		571091	0					
ANR	571246	Identifier	cblk		571091	0					
ANR	571247	Identifier	segs		571091	1					
ANR	571248	Identifier	segno		571091	1					
ANR	571249	ExpressionStatement	type = ( ( bpno <= ( cblk -> numbps - 1 ) - 4 ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ	1354:8:39451:39589	571091	1	True				
ANR	571250	AssignmentExpression	type = ( ( bpno <= ( cblk -> numbps - 1 ) - 4 ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ		571091	0		=			
ANR	571251	Identifier	type		571091	0					
ANR	571252	ConditionalExpression	( ( bpno <= ( cblk -> numbps - 1 ) - 4 ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY ) ) ? T1_TYPE_RAW : T1_TYPE_MQ		571091	1					
ANR	571253	Condition	( bpno <= ( cblk -> numbps - 1 ) - 4 ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		571091	0					
ANR	571254	AndExpression	( bpno <= ( cblk -> numbps - 1 ) - 4 ) && ( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		571091	0		&&			
ANR	571255	RelationalExpression	bpno <= ( cblk -> numbps - 1 ) - 4		571091	0		<=			
ANR	571256	Identifier	bpno		571091	0					
ANR	571257	AdditiveExpression	( cblk -> numbps - 1 ) - 4		571091	1		-			
ANR	571258	AdditiveExpression	cblk -> numbps - 1		571091	0		-			
ANR	571259	PtrMemberAccess	cblk -> numbps		571091	0					
ANR	571260	Identifier	cblk		571091	0					
ANR	571261	Identifier	numbps		571091	1					
ANR	571262	PrimaryExpression	1		571091	1					
ANR	571263	PrimaryExpression	4		571091	1					
ANR	571264	AndExpression	( passtype < 2 ) && ( cblksty & J2K_CCP_CBLKSTY_LAZY )		571091	1		&&			
ANR	571265	RelationalExpression	passtype < 2		571091	0		<			
ANR	571266	Identifier	passtype		571091	0					
ANR	571267	PrimaryExpression	2		571091	1					
ANR	571268	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_LAZY		571091	1		&			
ANR	571269	Identifier	cblksty		571091	0					
ANR	571270	Identifier	J2K_CCP_CBLKSTY_LAZY		571091	1					
ANR	571271	Identifier	T1_TYPE_RAW		571091	1					
ANR	571272	Identifier	T1_TYPE_MQ		571091	2					
ANR	571273	IfStatement	if ( seg -> data == NULL )		571091	2					
ANR	571274	Condition	seg -> data == NULL	1357:12:39715:39731	571091	0	True				
ANR	571275	EqualityExpression	seg -> data == NULL		571091	0		==			
ANR	571276	PtrMemberAccess	seg -> data		571091	0					
ANR	571277	Identifier	seg		571091	0					
ANR	571278	Identifier	data		571091	1					
ANR	571279	Identifier	NULL		571091	1					
ANR	571280	CompoundStatement		31:31:983:983	571091	1					
ANR	571281	ContinueStatement	continue ;	1358:12:39748:39756	571091	0	True				
ANR	571282	IfStatement	if ( type == T1_TYPE_RAW )		571091	3					
ANR	571283	Condition	type == T1_TYPE_RAW	1360:12:39780:39798	571091	0	True				
ANR	571284	EqualityExpression	type == T1_TYPE_RAW		571091	0		==			
ANR	571285	Identifier	type		571091	0					
ANR	571286	Identifier	T1_TYPE_RAW		571091	1					
ANR	571287	CompoundStatement		34:33:1050:1050	571091	1					
ANR	571288	ExpressionStatement	"raw_init_dec ( raw , ( * seg -> data ) + seg -> dataindex , seg -> len )"	1361:12:39815:39873	571091	0	True				
ANR	571289	CallExpression	"raw_init_dec ( raw , ( * seg -> data ) + seg -> dataindex , seg -> len )"		571091	0					
ANR	571290	Callee	raw_init_dec		571091	0					
ANR	571291	Identifier	raw_init_dec		571091	0					
ANR	571292	ArgumentList	raw		571091	1					
ANR	571293	Argument	raw		571091	0					
ANR	571294	Identifier	raw		571091	0					
ANR	571295	Argument	( * seg -> data ) + seg -> dataindex		571091	1					
ANR	571296	AdditiveExpression	( * seg -> data ) + seg -> dataindex		571091	0		+			
ANR	571297	UnaryOperationExpression	* seg -> data		571091	0					
ANR	571298	UnaryOperator	*		571091	0					
ANR	571299	PtrMemberAccess	seg -> data		571091	1					
ANR	571300	Identifier	seg		571091	0					
ANR	571301	Identifier	data		571091	1					
ANR	571302	PtrMemberAccess	seg -> dataindex		571091	1					
ANR	571303	Identifier	seg		571091	0					
ANR	571304	Identifier	dataindex		571091	1					
ANR	571305	Argument	seg -> len		571091	2					
ANR	571306	PtrMemberAccess	seg -> len		571091	0					
ANR	571307	Identifier	seg		571091	0					
ANR	571308	Identifier	len		571091	1					
ANR	571309	ElseStatement	else		571091	0					
ANR	571310	CompoundStatement		36:15:1139:1139	571091	0					
ANR	571311	ExpressionStatement	"mqc_init_dec ( mqc , ( * seg -> data ) + seg -> dataindex , seg -> len )"	1363:12:39904:39962	571091	0	True				
ANR	571312	CallExpression	"mqc_init_dec ( mqc , ( * seg -> data ) + seg -> dataindex , seg -> len )"		571091	0					
ANR	571313	Callee	mqc_init_dec		571091	0					
ANR	571314	Identifier	mqc_init_dec		571091	0					
ANR	571315	ArgumentList	mqc		571091	1					
ANR	571316	Argument	mqc		571091	0					
ANR	571317	Identifier	mqc		571091	0					
ANR	571318	Argument	( * seg -> data ) + seg -> dataindex		571091	1					
ANR	571319	AdditiveExpression	( * seg -> data ) + seg -> dataindex		571091	0		+			
ANR	571320	UnaryOperationExpression	* seg -> data		571091	0					
ANR	571321	UnaryOperator	*		571091	0					
ANR	571322	PtrMemberAccess	seg -> data		571091	1					
ANR	571323	Identifier	seg		571091	0					
ANR	571324	Identifier	data		571091	1					
ANR	571325	PtrMemberAccess	seg -> dataindex		571091	1					
ANR	571326	Identifier	seg		571091	0					
ANR	571327	Identifier	dataindex		571091	1					
ANR	571328	Argument	seg -> len		571091	2					
ANR	571329	PtrMemberAccess	seg -> len		571091	0					
ANR	571330	Identifier	seg		571091	0					
ANR	571331	Identifier	len		571091	1					
ANR	571332	ForStatement	for ( passno = 0 ; passno < seg -> numpasses ; ++ passno )		571091	4					
ANR	571333	ForInit	passno = 0 ;	1366:13:39988:39998	571091	0	True				
ANR	571334	AssignmentExpression	passno = 0		571091	0		=			
ANR	571335	Identifier	passno		571091	0					
ANR	571336	PrimaryExpression	0		571091	1					
ANR	571337	Condition	passno < seg -> numpasses	1366:25:40000:40022	571091	1	True				
ANR	571338	RelationalExpression	passno < seg -> numpasses		571091	0		<			
ANR	571339	Identifier	passno		571091	0					
ANR	571340	PtrMemberAccess	seg -> numpasses		571091	1					
ANR	571341	Identifier	seg		571091	0					
ANR	571342	Identifier	numpasses		571091	1					
ANR	571343	UnaryExpression	++ passno	1366:50:40025:40032	571091	2	True				
ANR	571344	IncDec	++		571091	0					
ANR	571345	Identifier	passno		571091	1					
ANR	571346	CompoundStatement		40:60:1284:1284	571091	3					
ANR	571347	SwitchStatement	switch ( passtype )		571091	0					
ANR	571348	Condition	passtype	1367:20:40057:40064	571091	0	True				
ANR	571349	Identifier	passtype		571091	0					
ANR	571350	CompoundStatement		41:30:1316:1316	571091	1					
ANR	571351	Label	case 0 :	1368:12:40081:40087	571091	0	True				
ANR	571352	IfStatement	if ( type == T1_TYPE_RAW )		571091	1					
ANR	571353	Condition	type == T1_TYPE_RAW	1369:20:40109:40127	571091	0	True				
ANR	571354	EqualityExpression	type == T1_TYPE_RAW		571091	0		==			
ANR	571355	Identifier	type		571091	0					
ANR	571356	Identifier	T1_TYPE_RAW		571091	1					
ANR	571357	CompoundStatement		43:41:1379:1379	571091	1					
ANR	571358	ExpressionStatement	"t1_dec_sigpass_raw ( t1 , bpno + 1 , orient , cblksty )"	1370:20:40152:40201	571091	0	True				
ANR	571359	CallExpression	"t1_dec_sigpass_raw ( t1 , bpno + 1 , orient , cblksty )"		571091	0					
ANR	571360	Callee	t1_dec_sigpass_raw		571091	0					
ANR	571361	Identifier	t1_dec_sigpass_raw		571091	0					
ANR	571362	ArgumentList	t1		571091	1					
ANR	571363	Argument	t1		571091	0					
ANR	571364	Identifier	t1		571091	0					
ANR	571365	Argument	bpno + 1		571091	1					
ANR	571366	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571367	Identifier	bpno		571091	0					
ANR	571368	PrimaryExpression	1		571091	1					
ANR	571369	Argument	orient		571091	2					
ANR	571370	Identifier	orient		571091	0					
ANR	571371	Argument	cblksty		571091	3					
ANR	571372	Identifier	cblksty		571091	0					
ANR	571373	ElseStatement	else		571091	0					
ANR	571374	CompoundStatement		45:23:1475:1475	571091	0					
ANR	571375	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_VSC )		571091	0					
ANR	571376	Condition	cblksty & J2K_CCP_CBLKSTY_VSC	1372:24:40252:40280	571091	0	True				
ANR	571377	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		571091	0		&			
ANR	571378	Identifier	cblksty		571091	0					
ANR	571379	Identifier	J2K_CCP_CBLKSTY_VSC		571091	1					
ANR	571380	CompoundStatement		46:55:1532:1532	571091	1					
ANR	571381	ExpressionStatement	"t1_dec_sigpass_mqc_vsc ( t1 , bpno + 1 , orient )"	1373:24:40309:40353	571091	0	True				
ANR	571382	CallExpression	"t1_dec_sigpass_mqc_vsc ( t1 , bpno + 1 , orient )"		571091	0					
ANR	571383	Callee	t1_dec_sigpass_mqc_vsc		571091	0					
ANR	571384	Identifier	t1_dec_sigpass_mqc_vsc		571091	0					
ANR	571385	ArgumentList	t1		571091	1					
ANR	571386	Argument	t1		571091	0					
ANR	571387	Identifier	t1		571091	0					
ANR	571388	Argument	bpno + 1		571091	1					
ANR	571389	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571390	Identifier	bpno		571091	0					
ANR	571391	PrimaryExpression	1		571091	1					
ANR	571392	Argument	orient		571091	2					
ANR	571393	Identifier	orient		571091	0					
ANR	571394	ElseStatement	else		571091	0					
ANR	571395	CompoundStatement		48:27:1631:1631	571091	0					
ANR	571396	ExpressionStatement	"t1_dec_sigpass_mqc ( t1 , bpno + 1 , orient )"	1375:24:40408:40448	571091	0	True				
ANR	571397	CallExpression	"t1_dec_sigpass_mqc ( t1 , bpno + 1 , orient )"		571091	0					
ANR	571398	Callee	t1_dec_sigpass_mqc		571091	0					
ANR	571399	Identifier	t1_dec_sigpass_mqc		571091	0					
ANR	571400	ArgumentList	t1		571091	1					
ANR	571401	Argument	t1		571091	0					
ANR	571402	Identifier	t1		571091	0					
ANR	571403	Argument	bpno + 1		571091	1					
ANR	571404	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571405	Identifier	bpno		571091	0					
ANR	571406	PrimaryExpression	1		571091	1					
ANR	571407	Argument	orient		571091	2					
ANR	571408	Identifier	orient		571091	0					
ANR	571409	BreakStatement	break ;	1378:16:40506:40511	571091	2	True				
ANR	571410	Label	case 1 :	1379:12:40525:40531	571091	3	True				
ANR	571411	IfStatement	if ( type == T1_TYPE_RAW )		571091	4					
ANR	571412	Condition	type == T1_TYPE_RAW	1380:20:40553:40571	571091	0	True				
ANR	571413	EqualityExpression	type == T1_TYPE_RAW		571091	0		==			
ANR	571414	Identifier	type		571091	0					
ANR	571415	Identifier	T1_TYPE_RAW		571091	1					
ANR	571416	CompoundStatement		54:41:1823:1823	571091	1					
ANR	571417	ExpressionStatement	"t1_dec_refpass_raw ( t1 , bpno + 1 , cblksty )"	1381:20:40596:40637	571091	0	True				
ANR	571418	CallExpression	"t1_dec_refpass_raw ( t1 , bpno + 1 , cblksty )"		571091	0					
ANR	571419	Callee	t1_dec_refpass_raw		571091	0					
ANR	571420	Identifier	t1_dec_refpass_raw		571091	0					
ANR	571421	ArgumentList	t1		571091	1					
ANR	571422	Argument	t1		571091	0					
ANR	571423	Identifier	t1		571091	0					
ANR	571424	Argument	bpno + 1		571091	1					
ANR	571425	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571426	Identifier	bpno		571091	0					
ANR	571427	PrimaryExpression	1		571091	1					
ANR	571428	Argument	cblksty		571091	2					
ANR	571429	Identifier	cblksty		571091	0					
ANR	571430	ElseStatement	else		571091	0					
ANR	571431	CompoundStatement		56:23:1911:1911	571091	0					
ANR	571432	IfStatement	if ( cblksty & J2K_CCP_CBLKSTY_VSC )		571091	0					
ANR	571433	Condition	cblksty & J2K_CCP_CBLKSTY_VSC	1383:24:40688:40716	571091	0	True				
ANR	571434	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_VSC		571091	0		&			
ANR	571435	Identifier	cblksty		571091	0					
ANR	571436	Identifier	J2K_CCP_CBLKSTY_VSC		571091	1					
ANR	571437	CompoundStatement		57:55:1968:1968	571091	1					
ANR	571438	ExpressionStatement	"t1_dec_refpass_mqc_vsc ( t1 , bpno + 1 )"	1384:24:40745:40781	571091	0	True				
ANR	571439	CallExpression	"t1_dec_refpass_mqc_vsc ( t1 , bpno + 1 )"		571091	0					
ANR	571440	Callee	t1_dec_refpass_mqc_vsc		571091	0					
ANR	571441	Identifier	t1_dec_refpass_mqc_vsc		571091	0					
ANR	571442	ArgumentList	t1		571091	1					
ANR	571443	Argument	t1		571091	0					
ANR	571444	Identifier	t1		571091	0					
ANR	571445	Argument	bpno + 1		571091	1					
ANR	571446	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571447	Identifier	bpno		571091	0					
ANR	571448	PrimaryExpression	1		571091	1					
ANR	571449	ElseStatement	else		571091	0					
ANR	571450	CompoundStatement		59:27:2059:2059	571091	0					
ANR	571451	ExpressionStatement	"t1_dec_refpass_mqc ( t1 , bpno + 1 )"	1386:24:40836:40868	571091	0	True				
ANR	571452	CallExpression	"t1_dec_refpass_mqc ( t1 , bpno + 1 )"		571091	0					
ANR	571453	Callee	t1_dec_refpass_mqc		571091	0					
ANR	571454	Identifier	t1_dec_refpass_mqc		571091	0					
ANR	571455	ArgumentList	t1		571091	1					
ANR	571456	Argument	t1		571091	0					
ANR	571457	Identifier	t1		571091	0					
ANR	571458	Argument	bpno + 1		571091	1					
ANR	571459	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571460	Identifier	bpno		571091	0					
ANR	571461	PrimaryExpression	1		571091	1					
ANR	571462	BreakStatement	break ;	1389:16:40926:40931	571091	5	True				
ANR	571463	Label	case 2 :	1390:12:40945:40951	571091	6	True				
ANR	571464	ExpressionStatement	"t1_dec_clnpass ( t1 , bpno + 1 , orient , cblksty )"	1391:16:40969:41014	571091	7	True				
ANR	571465	CallExpression	"t1_dec_clnpass ( t1 , bpno + 1 , orient , cblksty )"		571091	0					
ANR	571466	Callee	t1_dec_clnpass		571091	0					
ANR	571467	Identifier	t1_dec_clnpass		571091	0					
ANR	571468	ArgumentList	t1		571091	1					
ANR	571469	Argument	t1		571091	0					
ANR	571470	Identifier	t1		571091	0					
ANR	571471	Argument	bpno + 1		571091	1					
ANR	571472	AdditiveExpression	bpno + 1		571091	0		+			
ANR	571473	Identifier	bpno		571091	0					
ANR	571474	PrimaryExpression	1		571091	1					
ANR	571475	Argument	orient		571091	2					
ANR	571476	Identifier	orient		571091	0					
ANR	571477	Argument	cblksty		571091	3					
ANR	571478	Identifier	cblksty		571091	0					
ANR	571479	BreakStatement	break ;	1392:16:41032:41037	571091	8	True				
ANR	571480	IfStatement	if ( ( cblksty & J2K_CCP_CBLKSTY_RESET ) && type == T1_TYPE_MQ )		571091	1					
ANR	571481	Condition	( cblksty & J2K_CCP_CBLKSTY_RESET ) && type == T1_TYPE_MQ	1395:16:41070:41124	571091	0	True				
ANR	571482	AndExpression	( cblksty & J2K_CCP_CBLKSTY_RESET ) && type == T1_TYPE_MQ		571091	0		&&			
ANR	571483	BitAndExpression	cblksty & J2K_CCP_CBLKSTY_RESET		571091	0		&			
ANR	571484	Identifier	cblksty		571091	0					
ANR	571485	Identifier	J2K_CCP_CBLKSTY_RESET		571091	1					
ANR	571486	EqualityExpression	type == T1_TYPE_MQ		571091	1		==			
ANR	571487	Identifier	type		571091	0					
ANR	571488	Identifier	T1_TYPE_MQ		571091	1					
ANR	571489	CompoundStatement		69:73:2376:2376	571091	1					
ANR	571490	ExpressionStatement	mqc_resetstates ( mqc )	1396:16:41145:41165	571091	0	True				
ANR	571491	CallExpression	mqc_resetstates ( mqc )		571091	0					
ANR	571492	Callee	mqc_resetstates		571091	0					
ANR	571493	Identifier	mqc_resetstates		571091	0					
ANR	571494	ArgumentList	mqc		571091	1					
ANR	571495	Argument	mqc		571091	0					
ANR	571496	Identifier	mqc		571091	0					
ANR	571497	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_UNI , 0 , 46 )"	1397:16:41183:41221	571091	1	True				
ANR	571498	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_UNI , 0 , 46 )"		571091	0					
ANR	571499	Callee	mqc_setstate		571091	0					
ANR	571500	Identifier	mqc_setstate		571091	0					
ANR	571501	ArgumentList	mqc		571091	1					
ANR	571502	Argument	mqc		571091	0					
ANR	571503	Identifier	mqc		571091	0					
ANR	571504	Argument	T1_CTXNO_UNI		571091	1					
ANR	571505	Identifier	T1_CTXNO_UNI		571091	0					
ANR	571506	Argument	0		571091	2					
ANR	571507	PrimaryExpression	0		571091	0					
ANR	571508	Argument	46		571091	3					
ANR	571509	PrimaryExpression	46		571091	0					
ANR	571510	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_AGG , 0 , 3 )"	1398:16:41239:41276	571091	2	True				
ANR	571511	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_AGG , 0 , 3 )"		571091	0					
ANR	571512	Callee	mqc_setstate		571091	0					
ANR	571513	Identifier	mqc_setstate		571091	0					
ANR	571514	ArgumentList	mqc		571091	1					
ANR	571515	Argument	mqc		571091	0					
ANR	571516	Identifier	mqc		571091	0					
ANR	571517	Argument	T1_CTXNO_AGG		571091	1					
ANR	571518	Identifier	T1_CTXNO_AGG		571091	0					
ANR	571519	Argument	0		571091	2					
ANR	571520	PrimaryExpression	0		571091	0					
ANR	571521	Argument	3		571091	3					
ANR	571522	PrimaryExpression	3		571091	0					
ANR	571523	ExpressionStatement	"mqc_setstate ( mqc , T1_CTXNO_ZC , 0 , 4 )"	1399:16:41294:41330	571091	3	True				
ANR	571524	CallExpression	"mqc_setstate ( mqc , T1_CTXNO_ZC , 0 , 4 )"		571091	0					
ANR	571525	Callee	mqc_setstate		571091	0					
ANR	571526	Identifier	mqc_setstate		571091	0					
ANR	571527	ArgumentList	mqc		571091	1					
ANR	571528	Argument	mqc		571091	0					
ANR	571529	Identifier	mqc		571091	0					
ANR	571530	Argument	T1_CTXNO_ZC		571091	1					
ANR	571531	Identifier	T1_CTXNO_ZC		571091	0					
ANR	571532	Argument	0		571091	2					
ANR	571533	PrimaryExpression	0		571091	0					
ANR	571534	Argument	4		571091	3					
ANR	571535	PrimaryExpression	4		571091	0					
ANR	571536	IfStatement	if ( ++ passtype == 3 )		571091	2					
ANR	571537	Condition	++ passtype == 3	1401:16:41362:41376	571091	0	True				
ANR	571538	EqualityExpression	++ passtype == 3		571091	0		==			
ANR	571539	UnaryExpression	++ passtype		571091	0					
ANR	571540	IncDec	++		571091	0					
ANR	571541	Identifier	passtype		571091	1					
ANR	571542	PrimaryExpression	3		571091	1					
ANR	571543	CompoundStatement		75:33:2628:2628	571091	1					
ANR	571544	ExpressionStatement	passtype = 0	1402:16:41397:41409	571091	0	True				
ANR	571545	AssignmentExpression	passtype = 0		571091	0		=			
ANR	571546	Identifier	passtype		571091	0					
ANR	571547	PrimaryExpression	0		571091	1					
ANR	571548	ExpressionStatement	bpno --	1403:16:41427:41433	571091	1	True				
ANR	571549	PostIncDecOperationExpression	bpno --		571091	0					
ANR	571550	Identifier	bpno		571091	0					
ANR	571551	IncDec	--		571091	1					
ANR	571552	ReturnType	static void		571091	1					
ANR	571553	Identifier	t1_decode_cblk		571091	2					
ANR	571554	ParameterList	"opj_t1_t * t1 , opj_tcd_cblk_dec_t * cblk , int orient , int roishift , int cblksty"		571091	3					
ANR	571555	Parameter	opj_t1_t * t1	1322:4:38655:38666	571091	0	True				
ANR	571556	ParameterType	opj_t1_t *		571091	0					
ANR	571557	Identifier	t1		571091	1					
ANR	571558	Parameter	opj_tcd_cblk_dec_t * cblk	1323:4:38673:38696	571091	1	True				
ANR	571559	ParameterType	opj_tcd_cblk_dec_t *		571091	0					
ANR	571560	Identifier	cblk		571091	1					
ANR	571561	Parameter	int orient	1324:4:38703:38712	571091	2	True				
ANR	571562	ParameterType	int		571091	0					
ANR	571563	Identifier	orient		571091	1					
ANR	571564	Parameter	int roishift	1325:4:38719:38730	571091	3	True				
ANR	571565	ParameterType	int		571091	0					
ANR	571566	Identifier	roishift		571091	1					
ANR	571567	Parameter	int cblksty	1326:4:38737:38747	571091	4	True				
ANR	571568	ParameterType	int		571091	0					
ANR	571569	Identifier	cblksty		571091	1					
ANR	571570	CFGEntryNode	ENTRY		571091		True				
ANR	571571	CFGExitNode	EXIT		571091		True				
ANR	571572	Symbol	J2K_CCP_CBLKSTY_RESET		571091						
ANR	571573	Symbol	cblk -> x0		571091						
ANR	571574	Symbol	cblk -> x1		571091						
ANR	571575	Symbol	passtype		571091						
ANR	571576	Symbol	seg -> dataindex		571091						
ANR	571577	Symbol	seg -> numpasses		571091						
ANR	571578	Symbol	* cblk		571091						
ANR	571579	Symbol	type		571091						
ANR	571580	Symbol	T1_TYPE_RAW		571091						
ANR	571581	Symbol	allocate_buffers		571091						
ANR	571582	Symbol	segno		571091						
ANR	571583	Symbol	T1_TYPE_MQ		571091						
ANR	571584	Symbol	J2K_CCP_CBLKSTY_LAZY		571091						
ANR	571585	Symbol	seg		571091						
ANR	571586	Symbol	T1_CTXNO_UNI		571091						
ANR	571587	Symbol	t1 -> raw		571091						
ANR	571588	Symbol	cblk -> numsegs		571091						
ANR	571589	Symbol	* t1		571091						
ANR	571590	Symbol	cblk -> y0		571091						
ANR	571591	Symbol	bpno		571091						
ANR	571592	Symbol	cblk -> y1		571091						
ANR	571593	Symbol	NULL		571091						
ANR	571594	Symbol	orient		571091						
ANR	571595	Symbol	raw		571091						
ANR	571596	Symbol	T1_CTXNO_AGG		571091						
ANR	571597	Symbol	* * seg		571091						
ANR	571598	Symbol	J2K_CCP_CBLKSTY_VSC		571091						
ANR	571599	Symbol	cblk		571091						
ANR	571600	Symbol	T1_CTXNO_ZC		571091						
ANR	571601	Symbol	cblksty		571091						
ANR	571602	Symbol	cblk -> segs		571091						
ANR	571603	Symbol	seg -> len		571091						
ANR	571604	Symbol	t1 -> mqc		571091						
ANR	571605	Symbol	seg -> data		571091						
ANR	571606	Symbol	* seg -> data		571091						
ANR	571607	Symbol	cblk -> numbps		571091						
ANR	571608	Symbol	passno		571091						
ANR	571609	Symbol	t1		571091						
ANR	571610	Symbol	roishift		571091						
ANR	571611	Symbol	mqc		571091						
ANR	571612	Symbol	* seg		571091						
ANR	571613	Function	t1_create	1411:0:41547:41916							
ANR	571614	FunctionDef	t1_create (opj_common_ptr cinfo)		571613	0					
ANR	571615	CompoundStatement		1412:0:41589:41916	571613	0					
ANR	571616	IdentifierDeclStatement	opj_t1_t * t1 = ( opj_t1_t * ) opj_malloc ( sizeof ( opj_t1_t ) ) ;	1413:4:41595:41650	571613	0	True				
ANR	571617	IdentifierDecl	* t1 = ( opj_t1_t * ) opj_malloc ( sizeof ( opj_t1_t ) )		571613	0					
ANR	571618	IdentifierDeclType	opj_t1_t *		571613	0					
ANR	571619	Identifier	t1		571613	1					
ANR	571620	AssignmentExpression	* t1 = ( opj_t1_t * ) opj_malloc ( sizeof ( opj_t1_t ) )		571613	2		=			
ANR	571621	Identifier	t1		571613	0					
ANR	571622	CastExpression	( opj_t1_t * ) opj_malloc ( sizeof ( opj_t1_t ) )		571613	1					
ANR	571623	CastTarget	opj_t1_t *		571613	0					
ANR	571624	CallExpression	opj_malloc ( sizeof ( opj_t1_t ) )		571613	1					
ANR	571625	Callee	opj_malloc		571613	0					
ANR	571626	Identifier	opj_malloc		571613	0					
ANR	571627	ArgumentList	sizeof ( opj_t1_t )		571613	1					
ANR	571628	Argument	sizeof ( opj_t1_t )		571613	0					
ANR	571629	SizeofExpression	sizeof ( opj_t1_t )		571613	0					
ANR	571630	Sizeof	sizeof		571613	0					
ANR	571631	SizeofOperand	opj_t1_t		571613	1					
ANR	571632	IfStatement	if ( ! t1 )		571613	1					
ANR	571633	Condition	! t1	1414:8:41660:41662	571613	0	True				
ANR	571634	UnaryOperationExpression	! t1		571613	0					
ANR	571635	UnaryOperator	!		571613	0					
ANR	571636	Identifier	t1		571613	1					
ANR	571637	CompoundStatement		3:13:75:75	571613	1					
ANR	571638	ReturnStatement	return NULL ;	1415:8:41675:41686	571613	0	True				
ANR	571639	Identifier	NULL		571613	0					
ANR	571640	ExpressionStatement	t1 -> cinfo = cinfo	1418:4:41699:41716	571613	2	True				
ANR	571641	AssignmentExpression	t1 -> cinfo = cinfo		571613	0		=			
ANR	571642	PtrMemberAccess	t1 -> cinfo		571613	0					
ANR	571643	Identifier	t1		571613	0					
ANR	571644	Identifier	cinfo		571613	1					
ANR	571645	Identifier	cinfo		571613	1					
ANR	571646	ExpressionStatement	t1 -> mqc = mqc_create ( )	1420:4:41759:41781	571613	3	True				
ANR	571647	AssignmentExpression	t1 -> mqc = mqc_create ( )		571613	0		=			
ANR	571648	PtrMemberAccess	t1 -> mqc		571613	0					
ANR	571649	Identifier	t1		571613	0					
ANR	571650	Identifier	mqc		571613	1					
ANR	571651	CallExpression	mqc_create ( )		571613	1					
ANR	571652	Callee	mqc_create		571613	0					
ANR	571653	Identifier	mqc_create		571613	0					
ANR	571654	ArgumentList			571613	1					
ANR	571655	ExpressionStatement	t1 -> raw = raw_create ( )	1421:4:41787:41809	571613	4	True				
ANR	571656	AssignmentExpression	t1 -> raw = raw_create ( )		571613	0		=			
ANR	571657	PtrMemberAccess	t1 -> raw		571613	0					
ANR	571658	Identifier	t1		571613	0					
ANR	571659	Identifier	raw		571613	1					
ANR	571660	CallExpression	raw_create ( )		571613	1					
ANR	571661	Callee	raw_create		571613	0					
ANR	571662	Identifier	raw_create		571613	0					
ANR	571663	ArgumentList			571613	1					
ANR	571664	ExpressionStatement	t1 -> data = NULL	1423:4:41816:41831	571613	5	True				
ANR	571665	AssignmentExpression	t1 -> data = NULL		571613	0		=			
ANR	571666	PtrMemberAccess	t1 -> data		571613	0					
ANR	571667	Identifier	t1		571613	0					
ANR	571668	Identifier	data		571613	1					
ANR	571669	Identifier	NULL		571613	1					
ANR	571670	ExpressionStatement	t1 -> flags = NULL	1424:4:41837:41853	571613	6	True				
ANR	571671	AssignmentExpression	t1 -> flags = NULL		571613	0		=			
ANR	571672	PtrMemberAccess	t1 -> flags		571613	0					
ANR	571673	Identifier	t1		571613	0					
ANR	571674	Identifier	flags		571613	1					
ANR	571675	Identifier	NULL		571613	1					
ANR	571676	ExpressionStatement	t1 -> datasize = 0	1425:4:41859:41875	571613	7	True				
ANR	571677	AssignmentExpression	t1 -> datasize = 0		571613	0		=			
ANR	571678	PtrMemberAccess	t1 -> datasize		571613	0					
ANR	571679	Identifier	t1		571613	0					
ANR	571680	Identifier	datasize		571613	1					
ANR	571681	PrimaryExpression	0		571613	1					
ANR	571682	ExpressionStatement	t1 -> flagssize = 0	1426:4:41881:41898	571613	8	True				
ANR	571683	AssignmentExpression	t1 -> flagssize = 0		571613	0		=			
ANR	571684	PtrMemberAccess	t1 -> flagssize		571613	0					
ANR	571685	Identifier	t1		571613	0					
ANR	571686	Identifier	flagssize		571613	1					
ANR	571687	PrimaryExpression	0		571613	1					
ANR	571688	ReturnStatement	return t1 ;	1428:4:41905:41914	571613	9	True				
ANR	571689	Identifier	t1		571613	0					
ANR	571690	ReturnType	opj_t1_t *		571613	1					
ANR	571691	Identifier	t1_create		571613	2					
ANR	571692	ParameterList	opj_common_ptr cinfo		571613	3					
ANR	571693	Parameter	opj_common_ptr cinfo	1411:20:41567:41586	571613	0	True				
ANR	571694	ParameterType	opj_common_ptr		571613	0					
ANR	571695	Identifier	cinfo		571613	1					
ANR	571696	CFGEntryNode	ENTRY		571613		True				
ANR	571697	CFGExitNode	EXIT		571613		True				
ANR	571698	Symbol	* t1		571613						
ANR	571699	Symbol	opj_malloc		571613						
ANR	571700	Symbol	NULL		571613						
ANR	571701	Symbol	t1 -> flags		571613						
ANR	571702	Symbol	t1 -> flagssize		571613						
ANR	571703	Symbol	t1 -> data		571613						
ANR	571704	Symbol	raw_create		571613						
ANR	571705	Symbol	t1 -> cinfo		571613						
ANR	571706	Symbol	t1 -> mqc		571613						
ANR	571707	Symbol	t1 -> datasize		571613						
ANR	571708	Symbol	cinfo		571613						
ANR	571709	Symbol	mqc_create		571613						
ANR	571710	Symbol	t1 -> raw		571613						
ANR	571711	Symbol	t1		571613						
ANR	571712	Function	t1_destroy	1431:0:41919:42168							
ANR	571713	FunctionDef	t1_destroy (opj_t1_t * t1)		571712	0					
ANR	571714	CompoundStatement		1432:0:41949:42168	571712	0					
ANR	571715	IfStatement	if ( t1 )		571712	0					
ANR	571716	Condition	t1	1433:8:41959:41960	571712	0	True				
ANR	571717	Identifier	t1		571712	0					
ANR	571718	CompoundStatement		2:12:13:13	571712	1					
ANR	571719	ExpressionStatement	mqc_destroy ( t1 -> mqc )	1435:8:42015:42035	571712	0	True				
ANR	571720	CallExpression	mqc_destroy ( t1 -> mqc )		571712	0					
ANR	571721	Callee	mqc_destroy		571712	0					
ANR	571722	Identifier	mqc_destroy		571712	0					
ANR	571723	ArgumentList	t1 -> mqc		571712	1					
ANR	571724	Argument	t1 -> mqc		571712	0					
ANR	571725	PtrMemberAccess	t1 -> mqc		571712	0					
ANR	571726	Identifier	t1		571712	0					
ANR	571727	Identifier	mqc		571712	1					
ANR	571728	ExpressionStatement	raw_destroy ( t1 -> raw )	1436:8:42045:42065	571712	1	True				
ANR	571729	CallExpression	raw_destroy ( t1 -> raw )		571712	0					
ANR	571730	Callee	raw_destroy		571712	0					
ANR	571731	Identifier	raw_destroy		571712	0					
ANR	571732	ArgumentList	t1 -> raw		571712	1					
ANR	571733	Argument	t1 -> raw		571712	0					
ANR	571734	PtrMemberAccess	t1 -> raw		571712	0					
ANR	571735	Identifier	t1		571712	0					
ANR	571736	Identifier	raw		571712	1					
ANR	571737	ExpressionStatement	opj_aligned_free ( t1 -> data )	1437:8:42075:42101	571712	2	True				
ANR	571738	CallExpression	opj_aligned_free ( t1 -> data )		571712	0					
ANR	571739	Callee	opj_aligned_free		571712	0					
ANR	571740	Identifier	opj_aligned_free		571712	0					
ANR	571741	ArgumentList	t1 -> data		571712	1					
ANR	571742	Argument	t1 -> data		571712	0					
ANR	571743	PtrMemberAccess	t1 -> data		571712	0					
ANR	571744	Identifier	t1		571712	0					
ANR	571745	Identifier	data		571712	1					
ANR	571746	ExpressionStatement	opj_aligned_free ( t1 -> flags )	1438:8:42111:42138	571712	3	True				
ANR	571747	CallExpression	opj_aligned_free ( t1 -> flags )		571712	0					
ANR	571748	Callee	opj_aligned_free		571712	0					
ANR	571749	Identifier	opj_aligned_free		571712	0					
ANR	571750	ArgumentList	t1 -> flags		571712	1					
ANR	571751	Argument	t1 -> flags		571712	0					
ANR	571752	PtrMemberAccess	t1 -> flags		571712	0					
ANR	571753	Identifier	t1		571712	0					
ANR	571754	Identifier	flags		571712	1					
ANR	571755	ExpressionStatement	opj_free ( t1 )	1439:8:42148:42160	571712	4	True				
ANR	571756	CallExpression	opj_free ( t1 )		571712	0					
ANR	571757	Callee	opj_free		571712	0					
ANR	571758	Identifier	opj_free		571712	0					
ANR	571759	ArgumentList	t1		571712	1					
ANR	571760	Argument	t1		571712	0					
ANR	571761	Identifier	t1		571712	0					
ANR	571762	ReturnType	void		571712	1					
ANR	571763	Identifier	t1_destroy		571712	2					
ANR	571764	ParameterList	opj_t1_t * t1		571712	3					
ANR	571765	Parameter	opj_t1_t * t1	1431:16:41935:41946	571712	0	True				
ANR	571766	ParameterType	opj_t1_t *		571712	0					
ANR	571767	Identifier	t1		571712	1					
ANR	571768	CFGEntryNode	ENTRY		571712		True				
ANR	571769	CFGExitNode	EXIT		571712		True				
ANR	571770	Symbol	* t1		571712						
ANR	571771	Symbol	t1 -> mqc		571712						
ANR	571772	Symbol	t1 -> flags		571712						
ANR	571773	Symbol	t1 -> data		571712						
ANR	571774	Symbol	t1 -> raw		571712						
ANR	571775	Symbol	t1		571712						
ANR	571776	Function	t1_encode_cblks	1443:0:42171:46043							
ANR	571777	FunctionDef	"t1_encode_cblks (opj_t1_t * t1 , opj_tcd_tile_t * tile , opj_tcp_t * tcp)"		571776	0					
ANR	571778	CompoundStatement		1447:0:42257:46043	571776	0					
ANR	571779	IdentifierDeclStatement	"int compno , resno , bandno , precno , cblkno ;"	1448:4:42263:42304	571776	0	True				
ANR	571780	IdentifierDecl	compno		571776	0					
ANR	571781	IdentifierDeclType	int		571776	0					
ANR	571782	Identifier	compno		571776	1					
ANR	571783	IdentifierDecl	resno		571776	1					
ANR	571784	IdentifierDeclType	int		571776	0					
ANR	571785	Identifier	resno		571776	1					
ANR	571786	IdentifierDecl	bandno		571776	2					
ANR	571787	IdentifierDeclType	int		571776	0					
ANR	571788	Identifier	bandno		571776	1					
ANR	571789	IdentifierDecl	precno		571776	3					
ANR	571790	IdentifierDeclType	int		571776	0					
ANR	571791	Identifier	precno		571776	1					
ANR	571792	IdentifierDecl	cblkno		571776	4					
ANR	571793	IdentifierDeclType	int		571776	0					
ANR	571794	Identifier	cblkno		571776	1					
ANR	571795	ExpressionStatement	tile -> distotile = 0	1450:4:42311:42330	571776	1	True				
ANR	571796	AssignmentExpression	tile -> distotile = 0		571776	0		=			
ANR	571797	PtrMemberAccess	tile -> distotile		571776	0					
ANR	571798	Identifier	tile		571776	0					
ANR	571799	Identifier	distotile		571776	1					
ANR	571800	PrimaryExpression	0		571776	1					
ANR	571801	ForStatement	for ( compno = 0 ; compno < tile -> numcomps ; ++ compno )		571776	2					
ANR	571802	ForInit	compno = 0 ;	1452:9:42369:42379	571776	0	True				
ANR	571803	AssignmentExpression	compno = 0		571776	0		=			
ANR	571804	Identifier	compno		571776	0					
ANR	571805	PrimaryExpression	0		571776	1					
ANR	571806	Condition	compno < tile -> numcomps	1452:21:42381:42403	571776	1	True				
ANR	571807	RelationalExpression	compno < tile -> numcomps		571776	0		<			
ANR	571808	Identifier	compno		571776	0					
ANR	571809	PtrMemberAccess	tile -> numcomps		571776	1					
ANR	571810	Identifier	tile		571776	0					
ANR	571811	Identifier	numcomps		571776	1					
ANR	571812	UnaryExpression	++ compno	1452:46:42406:42413	571776	2	True				
ANR	571813	IncDec	++		571776	0					
ANR	571814	Identifier	compno		571776	1					
ANR	571815	CompoundStatement		9:8:274:308	571776	3					
ANR	571816	IdentifierDeclStatement	opj_tcd_tilecomp_t * tilec = & tile -> comps [ compno ] ;	1453:8:42426:42474	571776	0	True				
ANR	571817	IdentifierDecl	* tilec = & tile -> comps [ compno ]		571776	0					
ANR	571818	IdentifierDeclType	opj_tcd_tilecomp_t *		571776	0					
ANR	571819	Identifier	tilec		571776	1					
ANR	571820	AssignmentExpression	* tilec = & tile -> comps [ compno ]		571776	2		=			
ANR	571821	Identifier	tilec		571776	0					
ANR	571822	UnaryOperationExpression	& tile -> comps [ compno ]		571776	1					
ANR	571823	UnaryOperator	&		571776	0					
ANR	571824	ArrayIndexing	tile -> comps [ compno ]		571776	1					
ANR	571825	PtrMemberAccess	tile -> comps		571776	0					
ANR	571826	Identifier	tile		571776	0					
ANR	571827	Identifier	comps		571776	1					
ANR	571828	Identifier	compno		571776	1					
ANR	571829	IdentifierDeclStatement	opj_tccp_t * tccp = & tcp -> tccps [ compno ] ;	1454:8:42484:42522	571776	1	True				
ANR	571830	IdentifierDecl	* tccp = & tcp -> tccps [ compno ]		571776	0					
ANR	571831	IdentifierDeclType	opj_tccp_t *		571776	0					
ANR	571832	Identifier	tccp		571776	1					
ANR	571833	AssignmentExpression	* tccp = & tcp -> tccps [ compno ]		571776	2		=			
ANR	571834	Identifier	tccp		571776	0					
ANR	571835	UnaryOperationExpression	& tcp -> tccps [ compno ]		571776	1					
ANR	571836	UnaryOperator	&		571776	0					
ANR	571837	ArrayIndexing	tcp -> tccps [ compno ]		571776	1					
ANR	571838	PtrMemberAccess	tcp -> tccps		571776	0					
ANR	571839	Identifier	tcp		571776	0					
ANR	571840	Identifier	tccps		571776	1					
ANR	571841	Identifier	compno		571776	1					
ANR	571842	IdentifierDeclStatement	int tile_w = tilec -> x1 - tilec -> x0 ;	1455:8:42532:42566	571776	2	True				
ANR	571843	IdentifierDecl	tile_w = tilec -> x1 - tilec -> x0		571776	0					
ANR	571844	IdentifierDeclType	int		571776	0					
ANR	571845	Identifier	tile_w		571776	1					
ANR	571846	AssignmentExpression	tile_w = tilec -> x1 - tilec -> x0		571776	2		=			
ANR	571847	Identifier	tile_w		571776	0					
ANR	571848	AdditiveExpression	tilec -> x1 - tilec -> x0		571776	1		-			
ANR	571849	PtrMemberAccess	tilec -> x1		571776	0					
ANR	571850	Identifier	tilec		571776	0					
ANR	571851	Identifier	x1		571776	1					
ANR	571852	PtrMemberAccess	tilec -> x0		571776	1					
ANR	571853	Identifier	tilec		571776	0					
ANR	571854	Identifier	x0		571776	1					
ANR	571855	ForStatement	for ( resno = 0 ; resno < tilec -> numresolutions ; ++ resno )		571776	3					
ANR	571856	ForInit	resno = 0 ;	1457:13:42582:42591	571776	0	True				
ANR	571857	AssignmentExpression	resno = 0		571776	0		=			
ANR	571858	Identifier	resno		571776	0					
ANR	571859	PrimaryExpression	0		571776	1					
ANR	571860	Condition	resno < tilec -> numresolutions	1457:24:42593:42621	571776	1	True				
ANR	571861	RelationalExpression	resno < tilec -> numresolutions		571776	0		<			
ANR	571862	Identifier	resno		571776	0					
ANR	571863	PtrMemberAccess	tilec -> numresolutions		571776	1					
ANR	571864	Identifier	tilec		571776	0					
ANR	571865	Identifier	numresolutions		571776	1					
ANR	571866	UnaryExpression	++ resno	1457:55:42624:42630	571776	2	True				
ANR	571867	IncDec	++		571776	0					
ANR	571868	Identifier	resno		571776	1					
ANR	571869	CompoundStatement		12:12:389:443	571776	3					
ANR	571870	IdentifierDeclStatement	opj_tcd_resolution_t * res = & tilec -> resolutions [ resno ] ;	1458:12:42647:42701	571776	0	True				
ANR	571871	IdentifierDecl	* res = & tilec -> resolutions [ resno ]		571776	0					
ANR	571872	IdentifierDeclType	opj_tcd_resolution_t *		571776	0					
ANR	571873	Identifier	res		571776	1					
ANR	571874	AssignmentExpression	* res = & tilec -> resolutions [ resno ]		571776	2		=			
ANR	571875	Identifier	res		571776	0					
ANR	571876	UnaryOperationExpression	& tilec -> resolutions [ resno ]		571776	1					
ANR	571877	UnaryOperator	&		571776	0					
ANR	571878	ArrayIndexing	tilec -> resolutions [ resno ]		571776	1					
ANR	571879	PtrMemberAccess	tilec -> resolutions		571776	0					
ANR	571880	Identifier	tilec		571776	0					
ANR	571881	Identifier	resolutions		571776	1					
ANR	571882	Identifier	resno		571776	1					
ANR	571883	ForStatement	for ( bandno = 0 ; bandno < res -> numbands ; ++ bandno )		571776	1					
ANR	571884	ForInit	bandno = 0 ;	1460:17:42721:42731	571776	0	True				
ANR	571885	AssignmentExpression	bandno = 0		571776	0		=			
ANR	571886	Identifier	bandno		571776	0					
ANR	571887	PrimaryExpression	0		571776	1					
ANR	571888	Condition	bandno < res -> numbands	1460:29:42733:42754	571776	1	True				
ANR	571889	RelationalExpression	bandno < res -> numbands		571776	0		<			
ANR	571890	Identifier	bandno		571776	0					
ANR	571891	PtrMemberAccess	res -> numbands		571776	1					
ANR	571892	Identifier	res		571776	0					
ANR	571893	Identifier	numbands		571776	1					
ANR	571894	UnaryExpression	++ bandno	1460:53:42757:42764	571776	2	True				
ANR	571895	IncDec	++		571776	0					
ANR	571896	Identifier	bandno		571776	1					
ANR	571897	CompoundStatement		16:16:596:662	571776	3					
ANR	571898	IdentifierDeclStatement	opj_tcd_band_t * restrict band = & res -> bands [ bandno ] ;	1461:16:42785:42836	571776	0	True				
ANR	571899	IdentifierDecl	* restrict band = & res -> bands [ bandno ]		571776	0					
ANR	571900	IdentifierDeclType	opj_tcd_band_t * restrict		571776	0					
ANR	571901	Identifier	band		571776	1					
ANR	571902	AssignmentExpression	* restrict band = & res -> bands [ bandno ]		571776	2		=			
ANR	571903	Identifier	band		571776	0					
ANR	571904	UnaryOperationExpression	& res -> bands [ bandno ]		571776	1					
ANR	571905	UnaryOperator	&		571776	0					
ANR	571906	ArrayIndexing	res -> bands [ bandno ]		571776	1					
ANR	571907	PtrMemberAccess	res -> bands		571776	0					
ANR	571908	Identifier	res		571776	0					
ANR	571909	Identifier	bands		571776	1					
ANR	571910	Identifier	bandno		571776	1					
ANR	571911	IdentifierDeclStatement	int bandconst = 8192 * 8192 / ( ( int ) floor ( band -> stepsize * 8192 ) ) ;	1462:16:42854:42920	571776	1	True				
ANR	571912	IdentifierDecl	bandconst = 8192 * 8192 / ( ( int ) floor ( band -> stepsize * 8192 ) )		571776	0					
ANR	571913	IdentifierDeclType	int		571776	0					
ANR	571914	Identifier	bandconst		571776	1					
ANR	571915	AssignmentExpression	bandconst = 8192 * 8192 / ( ( int ) floor ( band -> stepsize * 8192 ) )		571776	2		=			
ANR	571916	Identifier	bandconst		571776	0					
ANR	571917	MultiplicativeExpression	8192 * 8192 / ( ( int ) floor ( band -> stepsize * 8192 ) )		571776	1		*			
ANR	571918	PrimaryExpression	8192		571776	0					
ANR	571919	MultiplicativeExpression	8192 / ( ( int ) floor ( band -> stepsize * 8192 ) )		571776	1		/			
ANR	571920	PrimaryExpression	8192		571776	0					
ANR	571921	CastExpression	( int ) floor ( band -> stepsize * 8192 )		571776	1					
ANR	571922	CastTarget	int		571776	0					
ANR	571923	CallExpression	floor ( band -> stepsize * 8192 )		571776	1					
ANR	571924	Callee	floor		571776	0					
ANR	571925	Identifier	floor		571776	0					
ANR	571926	ArgumentList	band -> stepsize * 8192		571776	1					
ANR	571927	Argument	band -> stepsize * 8192		571776	0					
ANR	571928	MultiplicativeExpression	band -> stepsize * 8192		571776	0		*			
ANR	571929	PtrMemberAccess	band -> stepsize		571776	0					
ANR	571930	Identifier	band		571776	0					
ANR	571931	Identifier	stepsize		571776	1					
ANR	571932	PrimaryExpression	8192		571776	1					
ANR	571933	ForStatement	for ( precno = 0 ; precno < res -> pw * res -> ph ; ++ precno )		571776	2					
ANR	571934	ForInit	precno = 0 ;	1464:21:42944:42954	571776	0	True				
ANR	571935	AssignmentExpression	precno = 0		571776	0		=			
ANR	571936	Identifier	precno		571776	0					
ANR	571937	PrimaryExpression	0		571776	1					
ANR	571938	Condition	precno < res -> pw * res -> ph	1464:33:42956:42981	571776	1	True				
ANR	571939	RelationalExpression	precno < res -> pw * res -> ph		571776	0		<			
ANR	571940	Identifier	precno		571776	0					
ANR	571941	MultiplicativeExpression	res -> pw * res -> ph		571776	1		*			
ANR	571942	PtrMemberAccess	res -> pw		571776	0					
ANR	571943	Identifier	res		571776	0					
ANR	571944	Identifier	pw		571776	1					
ANR	571945	PtrMemberAccess	res -> ph		571776	1					
ANR	571946	Identifier	res		571776	0					
ANR	571947	Identifier	ph		571776	1					
ANR	571948	UnaryExpression	++ precno	1464:61:42984:42991	571776	2	True				
ANR	571949	IncDec	++		571776	0					
ANR	571950	Identifier	precno		571776	1					
ANR	571951	CompoundStatement		19:20:758:808	571776	3					
ANR	571952	IdentifierDeclStatement	opj_tcd_precinct_t * prc = & band -> precincts [ precno ] ;	1465:20:43016:43066	571776	0	True				
ANR	571953	IdentifierDecl	* prc = & band -> precincts [ precno ]		571776	0					
ANR	571954	IdentifierDeclType	opj_tcd_precinct_t *		571776	0					
ANR	571955	Identifier	prc		571776	1					
ANR	571956	AssignmentExpression	* prc = & band -> precincts [ precno ]		571776	2		=			
ANR	571957	Identifier	prc		571776	0					
ANR	571958	UnaryOperationExpression	& band -> precincts [ precno ]		571776	1					
ANR	571959	UnaryOperator	&		571776	0					
ANR	571960	ArrayIndexing	band -> precincts [ precno ]		571776	1					
ANR	571961	PtrMemberAccess	band -> precincts		571776	0					
ANR	571962	Identifier	band		571776	0					
ANR	571963	Identifier	precincts		571776	1					
ANR	571964	Identifier	precno		571776	1					
ANR	571965	ForStatement	for ( cblkno = 0 ; cblkno < prc -> cw * prc -> ch ; ++ cblkno )		571776	1					
ANR	571966	ForInit	cblkno = 0 ;	1467:25:43094:43104	571776	0	True				
ANR	571967	AssignmentExpression	cblkno = 0		571776	0		=			
ANR	571968	Identifier	cblkno		571776	0					
ANR	571969	PrimaryExpression	0		571776	1					
ANR	571970	Condition	cblkno < prc -> cw * prc -> ch	1467:37:43106:43131	571776	1	True				
ANR	571971	RelationalExpression	cblkno < prc -> cw * prc -> ch		571776	0		<			
ANR	571972	Identifier	cblkno		571776	0					
ANR	571973	MultiplicativeExpression	prc -> cw * prc -> ch		571776	1		*			
ANR	571974	PtrMemberAccess	prc -> cw		571776	0					
ANR	571975	Identifier	prc		571776	0					
ANR	571976	Identifier	cw		571776	1					
ANR	571977	PtrMemberAccess	prc -> ch		571776	1					
ANR	571978	Identifier	prc		571776	0					
ANR	571979	Identifier	ch		571776	1					
ANR	571980	UnaryExpression	++ cblkno	1467:65:43134:43141	571776	2	True				
ANR	571981	IncDec	++		571776	0					
ANR	571982	Identifier	cblkno		571776	1					
ANR	571983	CompoundStatement		30:24:1239:1266	571776	3					
ANR	571984	IdentifierDeclStatement	opj_tcd_cblk_enc_t * cblk = & prc -> cblks . enc [ cblkno ] ;	1468:24:43170:43220	571776	0	True				
ANR	571985	IdentifierDecl	* cblk = & prc -> cblks . enc [ cblkno ]		571776	0					
ANR	571986	IdentifierDeclType	opj_tcd_cblk_enc_t *		571776	0					
ANR	571987	Identifier	cblk		571776	1					
ANR	571988	AssignmentExpression	* cblk = & prc -> cblks . enc [ cblkno ]		571776	2		=			
ANR	571989	Identifier	cblk		571776	0					
ANR	571990	UnaryOperationExpression	& prc -> cblks . enc [ cblkno ]		571776	1					
ANR	571991	UnaryOperator	&		571776	0					
ANR	571992	ArrayIndexing	prc -> cblks . enc [ cblkno ]		571776	1					
ANR	571993	MemberAccess	prc -> cblks . enc		571776	0					
ANR	571994	PtrMemberAccess	prc -> cblks		571776	0					
ANR	571995	Identifier	prc		571776	0					
ANR	571996	Identifier	cblks		571776	1					
ANR	571997	Identifier	enc		571776	1					
ANR	571998	Identifier	cblkno		571776	1					
ANR	571999	IdentifierDeclStatement	int * restrict datap ;	1469:24:43246:43265	571776	1	True				
ANR	572000	IdentifierDecl	* restrict datap		571776	0					
ANR	572001	IdentifierDeclType	int * restrict		571776	0					
ANR	572002	Identifier	datap		571776	1					
ANR	572003	IdentifierDeclStatement	int * restrict tiledp ;	1470:24:43291:43311	571776	2	True				
ANR	572004	IdentifierDecl	* restrict tiledp		571776	0					
ANR	572005	IdentifierDeclType	int * restrict		571776	0					
ANR	572006	Identifier	tiledp		571776	1					
ANR	572007	IdentifierDeclStatement	int cblk_w ;	1471:24:43337:43347	571776	3	True				
ANR	572008	IdentifierDecl	cblk_w		571776	0					
ANR	572009	IdentifierDeclType	int		571776	0					
ANR	572010	Identifier	cblk_w		571776	1					
ANR	572011	IdentifierDeclStatement	int cblk_h ;	1472:24:43373:43383	571776	4	True				
ANR	572012	IdentifierDecl	cblk_h		571776	0					
ANR	572013	IdentifierDeclType	int		571776	0					
ANR	572014	Identifier	cblk_h		571776	1					
ANR	572015	IdentifierDeclStatement	"int i , j ;"	1473:24:43409:43417	571776	5	True				
ANR	572016	IdentifierDecl	i		571776	0					
ANR	572017	IdentifierDeclType	int		571776	0					
ANR	572018	Identifier	i		571776	1					
ANR	572019	IdentifierDecl	j		571776	1					
ANR	572020	IdentifierDeclType	int		571776	0					
ANR	572021	Identifier	j		571776	1					
ANR	572022	IdentifierDeclStatement	int x = cblk -> x0 - band -> x0 ;	1475:24:43444:43471	571776	6	True				
ANR	572023	IdentifierDecl	x = cblk -> x0 - band -> x0		571776	0					
ANR	572024	IdentifierDeclType	int		571776	0					
ANR	572025	Identifier	x		571776	1					
ANR	572026	AssignmentExpression	x = cblk -> x0 - band -> x0		571776	2		=			
ANR	572027	Identifier	x		571776	0					
ANR	572028	AdditiveExpression	cblk -> x0 - band -> x0		571776	1		-			
ANR	572029	PtrMemberAccess	cblk -> x0		571776	0					
ANR	572030	Identifier	cblk		571776	0					
ANR	572031	Identifier	x0		571776	1					
ANR	572032	PtrMemberAccess	band -> x0		571776	1					
ANR	572033	Identifier	band		571776	0					
ANR	572034	Identifier	x0		571776	1					
ANR	572035	IdentifierDeclStatement	int y = cblk -> y0 - band -> y0 ;	1476:24:43497:43524	571776	7	True				
ANR	572036	IdentifierDecl	y = cblk -> y0 - band -> y0		571776	0					
ANR	572037	IdentifierDeclType	int		571776	0					
ANR	572038	Identifier	y		571776	1					
ANR	572039	AssignmentExpression	y = cblk -> y0 - band -> y0		571776	2		=			
ANR	572040	Identifier	y		571776	0					
ANR	572041	AdditiveExpression	cblk -> y0 - band -> y0		571776	1		-			
ANR	572042	PtrMemberAccess	cblk -> y0		571776	0					
ANR	572043	Identifier	cblk		571776	0					
ANR	572044	Identifier	y0		571776	1					
ANR	572045	PtrMemberAccess	band -> y0		571776	1					
ANR	572046	Identifier	band		571776	0					
ANR	572047	Identifier	y0		571776	1					
ANR	572048	IfStatement	if ( band -> bandno & 1 )		571776	8					
ANR	572049	Condition	band -> bandno & 1	1477:28:43554:43569	571776	0	True				
ANR	572050	BitAndExpression	band -> bandno & 1		571776	0		&			
ANR	572051	PtrMemberAccess	band -> bandno		571776	0					
ANR	572052	Identifier	band		571776	0					
ANR	572053	Identifier	bandno		571776	1					
ANR	572054	PrimaryExpression	1		571776	1					
ANR	572055	CompoundStatement		32:28:1344:1403	571776	1					
ANR	572056	IdentifierDeclStatement	opj_tcd_resolution_t * pres = & tilec -> resolutions [ resno - 1 ] ;	1478:28:43602:43661	571776	0	True				
ANR	572057	IdentifierDecl	* pres = & tilec -> resolutions [ resno - 1 ]		571776	0					
ANR	572058	IdentifierDeclType	opj_tcd_resolution_t *		571776	0					
ANR	572059	Identifier	pres		571776	1					
ANR	572060	AssignmentExpression	* pres = & tilec -> resolutions [ resno - 1 ]		571776	2		=			
ANR	572061	Identifier	pres		571776	0					
ANR	572062	UnaryOperationExpression	& tilec -> resolutions [ resno - 1 ]		571776	1					
ANR	572063	UnaryOperator	&		571776	0					
ANR	572064	ArrayIndexing	tilec -> resolutions [ resno - 1 ]		571776	1					
ANR	572065	PtrMemberAccess	tilec -> resolutions		571776	0					
ANR	572066	Identifier	tilec		571776	0					
ANR	572067	Identifier	resolutions		571776	1					
ANR	572068	AdditiveExpression	resno - 1		571776	1		-			
ANR	572069	Identifier	resno		571776	0					
ANR	572070	PrimaryExpression	1		571776	1					
ANR	572071	ExpressionStatement	x += pres -> x1 - pres -> x0	1479:28:43691:43715	571776	1	True				
ANR	572072	AssignmentExpression	x += pres -> x1 - pres -> x0		571776	0		+=			
ANR	572073	Identifier	x		571776	0					
ANR	572074	AdditiveExpression	pres -> x1 - pres -> x0		571776	1		-			
ANR	572075	PtrMemberAccess	pres -> x1		571776	0					
ANR	572076	Identifier	pres		571776	0					
ANR	572077	Identifier	x1		571776	1					
ANR	572078	PtrMemberAccess	pres -> x0		571776	1					
ANR	572079	Identifier	pres		571776	0					
ANR	572080	Identifier	x0		571776	1					
ANR	572081	IfStatement	if ( band -> bandno & 2 )		571776	9					
ANR	572082	Condition	band -> bandno & 2	1481:28:43771:43786	571776	0	True				
ANR	572083	BitAndExpression	band -> bandno & 2		571776	0		&			
ANR	572084	PtrMemberAccess	band -> bandno		571776	0					
ANR	572085	Identifier	band		571776	0					
ANR	572086	Identifier	bandno		571776	1					
ANR	572087	PrimaryExpression	2		571776	1					
ANR	572088	CompoundStatement		36:28:1561:1620	571776	1					
ANR	572089	IdentifierDeclStatement	opj_tcd_resolution_t * pres = & tilec -> resolutions [ resno - 1 ] ;	1482:28:43819:43878	571776	0	True				
ANR	572090	IdentifierDecl	* pres = & tilec -> resolutions [ resno - 1 ]		571776	0					
ANR	572091	IdentifierDeclType	opj_tcd_resolution_t *		571776	0					
ANR	572092	Identifier	pres		571776	1					
ANR	572093	AssignmentExpression	* pres = & tilec -> resolutions [ resno - 1 ]		571776	2		=			
ANR	572094	Identifier	pres		571776	0					
ANR	572095	UnaryOperationExpression	& tilec -> resolutions [ resno - 1 ]		571776	1					
ANR	572096	UnaryOperator	&		571776	0					
ANR	572097	ArrayIndexing	tilec -> resolutions [ resno - 1 ]		571776	1					
ANR	572098	PtrMemberAccess	tilec -> resolutions		571776	0					
ANR	572099	Identifier	tilec		571776	0					
ANR	572100	Identifier	resolutions		571776	1					
ANR	572101	AdditiveExpression	resno - 1		571776	1		-			
ANR	572102	Identifier	resno		571776	0					
ANR	572103	PrimaryExpression	1		571776	1					
ANR	572104	ExpressionStatement	y += pres -> y1 - pres -> y0	1483:28:43908:43932	571776	1	True				
ANR	572105	AssignmentExpression	y += pres -> y1 - pres -> y0		571776	0		+=			
ANR	572106	Identifier	y		571776	0					
ANR	572107	AdditiveExpression	pres -> y1 - pres -> y0		571776	1		-			
ANR	572108	PtrMemberAccess	pres -> y1		571776	0					
ANR	572109	Identifier	pres		571776	0					
ANR	572110	Identifier	y1		571776	1					
ANR	572111	PtrMemberAccess	pres -> y0		571776	1					
ANR	572112	Identifier	pres		571776	0					
ANR	572113	Identifier	y0		571776	1					
ANR	572114	IfStatement	"if ( ! allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 ) )"		571776	10					
ANR	572115	Condition	"! allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 )"	1486:28:43989:44160	571776	0	True				
ANR	572116	UnaryOperationExpression	"! allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 )"		571776	0					
ANR	572117	UnaryOperator	!		571776	0					
ANR	572118	CallExpression	"allocate_buffers ( t1 , cblk -> x1 - cblk -> x0 , cblk -> y1 - cblk -> y0 )"		571776	1					
ANR	572119	Callee	allocate_buffers		571776	0					
ANR	572120	Identifier	allocate_buffers		571776	0					
ANR	572121	ArgumentList	t1		571776	1					
ANR	572122	Argument	t1		571776	0					
ANR	572123	Identifier	t1		571776	0					
ANR	572124	Argument	cblk -> x1 - cblk -> x0		571776	1					
ANR	572125	AdditiveExpression	cblk -> x1 - cblk -> x0		571776	0		-			
ANR	572126	PtrMemberAccess	cblk -> x1		571776	0					
ANR	572127	Identifier	cblk		571776	0					
ANR	572128	Identifier	x1		571776	1					
ANR	572129	PtrMemberAccess	cblk -> x0		571776	1					
ANR	572130	Identifier	cblk		571776	0					
ANR	572131	Identifier	x0		571776	1					
ANR	572132	Argument	cblk -> y1 - cblk -> y0		571776	2					
ANR	572133	AdditiveExpression	cblk -> y1 - cblk -> y0		571776	0		-			
ANR	572134	PtrMemberAccess	cblk -> y1		571776	0					
ANR	572135	Identifier	cblk		571776	0					
ANR	572136	Identifier	y1		571776	1					
ANR	572137	PtrMemberAccess	cblk -> y0		571776	1					
ANR	572138	Identifier	cblk		571776	0					
ANR	572139	Identifier	y0		571776	1					
ANR	572140	CompoundStatement		43:58:1905:1905	571776	1					
ANR	572141	ReturnStatement	return ;	1490:28:44193:44199	571776	0	True				
ANR	572142	ExpressionStatement	datap = t1 -> data	1493:24:44252:44268	571776	11	True				
ANR	572143	AssignmentExpression	datap = t1 -> data		571776	0		=			
ANR	572144	Identifier	datap		571776	0					
ANR	572145	PtrMemberAccess	t1 -> data		571776	1					
ANR	572146	Identifier	t1		571776	0					
ANR	572147	Identifier	data		571776	1					
ANR	572148	ExpressionStatement	cblk_w = t1 -> w	1494:24:44294:44308	571776	12	True				
ANR	572149	AssignmentExpression	cblk_w = t1 -> w		571776	0		=			
ANR	572150	Identifier	cblk_w		571776	0					
ANR	572151	PtrMemberAccess	t1 -> w		571776	1					
ANR	572152	Identifier	t1		571776	0					
ANR	572153	Identifier	w		571776	1					
ANR	572154	ExpressionStatement	cblk_h = t1 -> h	1495:24:44334:44348	571776	13	True				
ANR	572155	AssignmentExpression	cblk_h = t1 -> h		571776	0		=			
ANR	572156	Identifier	cblk_h		571776	0					
ANR	572157	PtrMemberAccess	t1 -> h		571776	1					
ANR	572158	Identifier	t1		571776	0					
ANR	572159	Identifier	h		571776	1					
ANR	572160	ExpressionStatement	tiledp = & tilec -> data [ ( y * tile_w ) + x ]	1497:24:44375:44414	571776	14	True				
ANR	572161	AssignmentExpression	tiledp = & tilec -> data [ ( y * tile_w ) + x ]		571776	0		=			
ANR	572162	Identifier	tiledp		571776	0					
ANR	572163	UnaryOperationExpression	& tilec -> data [ ( y * tile_w ) + x ]		571776	1					
ANR	572164	UnaryOperator	&		571776	0					
ANR	572165	ArrayIndexing	tilec -> data [ ( y * tile_w ) + x ]		571776	1					
ANR	572166	PtrMemberAccess	tilec -> data		571776	0					
ANR	572167	Identifier	tilec		571776	0					
ANR	572168	Identifier	data		571776	1					
ANR	572169	AdditiveExpression	( y * tile_w ) + x		571776	1		+			
ANR	572170	MultiplicativeExpression	y * tile_w		571776	0		*			
ANR	572171	Identifier	y		571776	0					
ANR	572172	Identifier	tile_w		571776	1					
ANR	572173	Identifier	x		571776	1					
ANR	572174	IfStatement	if ( tccp -> qmfbid == 1 )		571776	15					
ANR	572175	Condition	tccp -> qmfbid == 1	1498:28:44444:44460	571776	0	True				
ANR	572176	EqualityExpression	tccp -> qmfbid == 1		571776	0		==			
ANR	572177	PtrMemberAccess	tccp -> qmfbid		571776	0					
ANR	572178	Identifier	tccp		571776	0					
ANR	572179	Identifier	qmfbid		571776	1					
ANR	572180	PrimaryExpression	1		571776	1					
ANR	572181	CompoundStatement		52:47:2205:2205	571776	1					
ANR	572182	ForStatement	for ( j = 0 ; j < cblk_h ; ++ j )		571776	0					
ANR	572183	ForInit	j = 0 ;	1499:33:44498:44503	571776	0	True				
ANR	572184	AssignmentExpression	j = 0		571776	0		=			
ANR	572185	Identifier	j		571776	0					
ANR	572186	PrimaryExpression	0		571776	1					
ANR	572187	Condition	j < cblk_h	1499:40:44505:44514	571776	1	True				
ANR	572188	RelationalExpression	j < cblk_h		571776	0		<			
ANR	572189	Identifier	j		571776	0					
ANR	572190	Identifier	cblk_h		571776	1					
ANR	572191	UnaryExpression	++ j	1499:52:44517:44519	571776	2	True				
ANR	572192	IncDec	++		571776	0					
ANR	572193	Identifier	j		571776	1					
ANR	572194	CompoundStatement		53:57:2264:2264	571776	3					
ANR	572195	ForStatement	for ( i = 0 ; i < cblk_w ; ++ i )		571776	0					
ANR	572196	ForInit	i = 0 ;	1500:37:44561:44566	571776	0	True				
ANR	572197	AssignmentExpression	i = 0		571776	0		=			
ANR	572198	Identifier	i		571776	0					
ANR	572199	PrimaryExpression	0		571776	1					
ANR	572200	Condition	i < cblk_w	1500:44:44568:44577	571776	1	True				
ANR	572201	RelationalExpression	i < cblk_w		571776	0		<			
ANR	572202	Identifier	i		571776	0					
ANR	572203	Identifier	cblk_w		571776	1					
ANR	572204	UnaryExpression	++ i	1500:56:44580:44582	571776	2	True				
ANR	572205	IncDec	++		571776	0					
ANR	572206	Identifier	i		571776	1					
ANR	572207	CompoundStatement		55:36:2365:2399	571776	3					
ANR	572208	IdentifierDeclStatement	int tmp = tiledp [ ( j * tile_w ) + i ] ;	1501:36:44623:44657	571776	0	True				
ANR	572209	IdentifierDecl	tmp = tiledp [ ( j * tile_w ) + i ]		571776	0					
ANR	572210	IdentifierDeclType	int		571776	0					
ANR	572211	Identifier	tmp		571776	1					
ANR	572212	AssignmentExpression	tmp = tiledp [ ( j * tile_w ) + i ]		571776	2		=			
ANR	572213	Identifier	tmp		571776	0					
ANR	572214	ArrayIndexing	tiledp [ ( j * tile_w ) + i ]		571776	1					
ANR	572215	Identifier	tiledp		571776	0					
ANR	572216	AdditiveExpression	( j * tile_w ) + i		571776	1		+			
ANR	572217	MultiplicativeExpression	j * tile_w		571776	0		*			
ANR	572218	Identifier	j		571776	0					
ANR	572219	Identifier	tile_w		571776	1					
ANR	572220	Identifier	i		571776	1					
ANR	572221	ExpressionStatement	datap [ ( j * cblk_w ) + i ] = tmp << T1_NMSEDEC_FRACBITS	1502:36:44695:44747	571776	1	True				
ANR	572222	AssignmentExpression	datap [ ( j * cblk_w ) + i ] = tmp << T1_NMSEDEC_FRACBITS		571776	0		=			
ANR	572223	ArrayIndexing	datap [ ( j * cblk_w ) + i ]		571776	0					
ANR	572224	Identifier	datap		571776	0					
ANR	572225	AdditiveExpression	( j * cblk_w ) + i		571776	1		+			
ANR	572226	MultiplicativeExpression	j * cblk_w		571776	0		*			
ANR	572227	Identifier	j		571776	0					
ANR	572228	Identifier	cblk_w		571776	1					
ANR	572229	Identifier	i		571776	1					
ANR	572230	ShiftExpression	tmp << T1_NMSEDEC_FRACBITS		571776	1		<<			
ANR	572231	Identifier	tmp		571776	0					
ANR	572232	Identifier	T1_NMSEDEC_FRACBITS		571776	1					
ANR	572233	ElseStatement	else		571776	0					
ANR	572234	CompoundStatement		59:31:2586:2586	571776	0					
ANR	572235	ForStatement	for ( j = 0 ; j < cblk_h ; ++ j )		571776	0					
ANR	572236	ForInit	j = 0 ;	1506:33:44915:44920	571776	0	True				
ANR	572237	AssignmentExpression	j = 0		571776	0		=			
ANR	572238	Identifier	j		571776	0					
ANR	572239	PrimaryExpression	0		571776	1					
ANR	572240	Condition	j < cblk_h	1506:40:44922:44931	571776	1	True				
ANR	572241	RelationalExpression	j < cblk_h		571776	0		<			
ANR	572242	Identifier	j		571776	0					
ANR	572243	Identifier	cblk_h		571776	1					
ANR	572244	UnaryExpression	++ j	1506:52:44934:44936	571776	2	True				
ANR	572245	IncDec	++		571776	0					
ANR	572246	Identifier	j		571776	1					
ANR	572247	CompoundStatement		60:57:2681:2681	571776	3					
ANR	572248	ForStatement	for ( i = 0 ; i < cblk_w ; ++ i )		571776	0					
ANR	572249	ForInit	i = 0 ;	1507:37:44978:44983	571776	0	True				
ANR	572250	AssignmentExpression	i = 0		571776	0		=			
ANR	572251	Identifier	i		571776	0					
ANR	572252	PrimaryExpression	0		571776	1					
ANR	572253	Condition	i < cblk_w	1507:44:44985:44994	571776	1	True				
ANR	572254	RelationalExpression	i < cblk_w		571776	0		<			
ANR	572255	Identifier	i		571776	0					
ANR	572256	Identifier	cblk_w		571776	1					
ANR	572257	UnaryExpression	++ i	1507:56:44997:44999	571776	2	True				
ANR	572258	IncDec	++		571776	0					
ANR	572259	Identifier	i		571776	1					
ANR	572260	CompoundStatement		62:36:2782:2816	571776	3					
ANR	572261	IdentifierDeclStatement	int tmp = tiledp [ ( j * tile_w ) + i ] ;	1508:36:45040:45074	571776	0	True				
ANR	572262	IdentifierDecl	tmp = tiledp [ ( j * tile_w ) + i ]		571776	0					
ANR	572263	IdentifierDeclType	int		571776	0					
ANR	572264	Identifier	tmp		571776	1					
ANR	572265	AssignmentExpression	tmp = tiledp [ ( j * tile_w ) + i ]		571776	2		=			
ANR	572266	Identifier	tmp		571776	0					
ANR	572267	ArrayIndexing	tiledp [ ( j * tile_w ) + i ]		571776	1					
ANR	572268	Identifier	tiledp		571776	0					
ANR	572269	AdditiveExpression	( j * tile_w ) + i		571776	1		+			
ANR	572270	MultiplicativeExpression	j * tile_w		571776	0		*			
ANR	572271	Identifier	j		571776	0					
ANR	572272	Identifier	tile_w		571776	1					
ANR	572273	Identifier	i		571776	1					
ANR	572274	ExpressionStatement	"datap [ ( j * cblk_w ) + i ] = fix_mul ( tmp , bandconst ) >> ( 11 - T1_NMSEDEC_FRACBITS )"	1509:36:45112:45320	571776	1	True				
ANR	572275	AssignmentExpression	"datap [ ( j * cblk_w ) + i ] = fix_mul ( tmp , bandconst ) >> ( 11 - T1_NMSEDEC_FRACBITS )"		571776	0		=			
ANR	572276	ArrayIndexing	datap [ ( j * cblk_w ) + i ]		571776	0					
ANR	572277	Identifier	datap		571776	0					
ANR	572278	AdditiveExpression	( j * cblk_w ) + i		571776	1		+			
ANR	572279	MultiplicativeExpression	j * cblk_w		571776	0		*			
ANR	572280	Identifier	j		571776	0					
ANR	572281	Identifier	cblk_w		571776	1					
ANR	572282	Identifier	i		571776	1					
ANR	572283	ShiftExpression	"fix_mul ( tmp , bandconst ) >> ( 11 - T1_NMSEDEC_FRACBITS )"		571776	1		>>			
ANR	572284	CallExpression	"fix_mul ( tmp , bandconst )"		571776	0					
ANR	572285	Callee	fix_mul		571776	0					
ANR	572286	Identifier	fix_mul		571776	0					
ANR	572287	ArgumentList	tmp		571776	1					
ANR	572288	Argument	tmp		571776	0					
ANR	572289	Identifier	tmp		571776	0					
ANR	572290	Argument	bandconst		571776	1					
ANR	572291	Identifier	bandconst		571776	0					
ANR	572292	AdditiveExpression	11 - T1_NMSEDEC_FRACBITS		571776	1		-			
ANR	572293	PrimaryExpression	11		571776	0					
ANR	572294	Identifier	T1_NMSEDEC_FRACBITS		571776	1					
ANR	572295	ExpressionStatement	"t1_encode_cblk ( t1 , cblk , band -> bandno , compno , tilec -> numresolutions - 1 - resno , tccp -> qmfbid , band -> stepsize , tccp -> cblksty , tile -> numcomps , tcp -> mct , tile )"	1517:24:45437:45904	571776	16	True				
ANR	572296	CallExpression	"t1_encode_cblk ( t1 , cblk , band -> bandno , compno , tilec -> numresolutions - 1 - resno , tccp -> qmfbid , band -> stepsize , tccp -> cblksty , tile -> numcomps , tcp -> mct , tile )"		571776	0					
ANR	572297	Callee	t1_encode_cblk		571776	0					
ANR	572298	Identifier	t1_encode_cblk		571776	0					
ANR	572299	ArgumentList	t1		571776	1					
ANR	572300	Argument	t1		571776	0					
ANR	572301	Identifier	t1		571776	0					
ANR	572302	Argument	cblk		571776	1					
ANR	572303	Identifier	cblk		571776	0					
ANR	572304	Argument	band -> bandno		571776	2					
ANR	572305	PtrMemberAccess	band -> bandno		571776	0					
ANR	572306	Identifier	band		571776	0					
ANR	572307	Identifier	bandno		571776	1					
ANR	572308	Argument	compno		571776	3					
ANR	572309	Identifier	compno		571776	0					
ANR	572310	Argument	tilec -> numresolutions - 1 - resno		571776	4					
ANR	572311	AdditiveExpression	tilec -> numresolutions - 1 - resno		571776	0		-			
ANR	572312	PtrMemberAccess	tilec -> numresolutions		571776	0					
ANR	572313	Identifier	tilec		571776	0					
ANR	572314	Identifier	numresolutions		571776	1					
ANR	572315	AdditiveExpression	1 - resno		571776	1		-			
ANR	572316	PrimaryExpression	1		571776	0					
ANR	572317	Identifier	resno		571776	1					
ANR	572318	Argument	tccp -> qmfbid		571776	5					
ANR	572319	PtrMemberAccess	tccp -> qmfbid		571776	0					
ANR	572320	Identifier	tccp		571776	0					
ANR	572321	Identifier	qmfbid		571776	1					
ANR	572322	Argument	band -> stepsize		571776	6					
ANR	572323	PtrMemberAccess	band -> stepsize		571776	0					
ANR	572324	Identifier	band		571776	0					
ANR	572325	Identifier	stepsize		571776	1					
ANR	572326	Argument	tccp -> cblksty		571776	7					
ANR	572327	PtrMemberAccess	tccp -> cblksty		571776	0					
ANR	572328	Identifier	tccp		571776	0					
ANR	572329	Identifier	cblksty		571776	1					
ANR	572330	Argument	tile -> numcomps		571776	8					
ANR	572331	PtrMemberAccess	tile -> numcomps		571776	0					
ANR	572332	Identifier	tile		571776	0					
ANR	572333	Identifier	numcomps		571776	1					
ANR	572334	Argument	tcp -> mct		571776	9					
ANR	572335	PtrMemberAccess	tcp -> mct		571776	0					
ANR	572336	Identifier	tcp		571776	0					
ANR	572337	Identifier	mct		571776	1					
ANR	572338	Argument	tile		571776	10					
ANR	572339	Identifier	tile		571776	0					
ANR	572340	ReturnType	void		571776	1					
ANR	572341	Identifier	t1_encode_cblks		571776	2					
ANR	572342	ParameterList	"opj_t1_t * t1 , opj_tcd_tile_t * tile , opj_tcp_t * tcp"		571776	3					
ANR	572343	Parameter	opj_t1_t * t1	1444:4:42197:42208	571776	0	True				
ANR	572344	ParameterType	opj_t1_t *		571776	0					
ANR	572345	Identifier	t1		571776	1					
ANR	572346	Parameter	opj_tcd_tile_t * tile	1445:4:42215:42234	571776	1	True				
ANR	572347	ParameterType	opj_tcd_tile_t *		571776	0					
ANR	572348	Identifier	tile		571776	1					
ANR	572349	Parameter	opj_tcp_t * tcp	1446:4:42241:42254	571776	2	True				
ANR	572350	ParameterType	opj_tcp_t *		571776	0					
ANR	572351	Identifier	tcp		571776	1					
ANR	572352	CFGEntryNode	ENTRY		571776		True				
ANR	572353	CFGExitNode	EXIT		571776		True				
ANR	572354	Symbol	cblk_h		571776						
ANR	572355	Symbol	cblk -> x0		571776						
ANR	572356	Symbol	cblk -> x1		571776						
ANR	572357	Symbol	t1 -> w		571776						
ANR	572358	Symbol	tcp -> mct		571776						
ANR	572359	Symbol	prc -> ch		571776						
ANR	572360	Symbol	pres		571776						
ANR	572361	Symbol	pres -> x0		571776						
ANR	572362	Symbol	pres -> x1		571776						
ANR	572363	Symbol	tilec -> data		571776						
ANR	572364	Symbol	* tcp		571776						
ANR	572365	Symbol	* tilec		571776						
ANR	572366	Symbol	* cblk_w		571776						
ANR	572367	Symbol	cblk_w		571776						
ANR	572368	Symbol	band -> y0		571776						
ANR	572369	Symbol	tmp		571776						
ANR	572370	Symbol	resno		571776						
ANR	572371	Symbol	tile		571776						
ANR	572372	Symbol	band -> stepsize		571776						
ANR	572373	Symbol	band		571776						
ANR	572374	Symbol	prc -> cblks		571776						
ANR	572375	Symbol	tile -> comps		571776						
ANR	572376	Symbol	* datap		571776						
ANR	572377	Symbol	prc		571776						
ANR	572378	Symbol	cblk -> y0		571776						
ANR	572379	Symbol	T1_NMSEDEC_FRACBITS		571776						
ANR	572380	Symbol	tile -> numcomps		571776						
ANR	572381	Symbol	res		571776						
ANR	572382	Symbol	cblk -> y1		571776						
ANR	572383	Symbol	tcp -> tccps		571776						
ANR	572384	Symbol	pres -> y0		571776						
ANR	572385	Symbol	pres -> y1		571776						
ANR	572386	Symbol	res -> ph		571776						
ANR	572387	Symbol	datap		571776						
ANR	572388	Symbol	tccp		571776						
ANR	572389	Symbol	fix_mul		571776						
ANR	572390	Symbol	tilec -> x0		571776						
ANR	572391	Symbol	tilec -> x1		571776						
ANR	572392	Symbol	compno		571776						
ANR	572393	Symbol	cblk		571776						
ANR	572394	Symbol	band -> x0		571776						
ANR	572395	Symbol	tilec -> numresolutions		571776						
ANR	572396	Symbol	res -> pw		571776						
ANR	572397	Symbol	t1		571776						
ANR	572398	Symbol	* tile		571776						
ANR	572399	Symbol	band -> precincts		571776						
ANR	572400	Symbol	* pres		571776						
ANR	572401	Symbol	* cblk		571776						
ANR	572402	Symbol	res -> bands		571776						
ANR	572403	Symbol	tile_w		571776						
ANR	572404	Symbol	* res		571776						
ANR	572405	Symbol	* prc		571776						
ANR	572406	Symbol	tccp -> qmfbid		571776						
ANR	572407	Symbol	allocate_buffers		571776						
ANR	572408	Symbol	* tiledp		571776						
ANR	572409	Symbol	tiledp		571776						
ANR	572410	Symbol	cblkno		571776						
ANR	572411	Symbol	band -> bandno		571776						
ANR	572412	Symbol	tccp -> cblksty		571776						
ANR	572413	Symbol	floor		571776						
ANR	572414	Symbol	tcp		571776						
ANR	572415	Symbol	* t1		571776						
ANR	572416	Symbol	tilec		571776						
ANR	572417	Symbol	tile -> distotile		571776						
ANR	572418	Symbol	prc -> cblks . enc		571776						
ANR	572419	Symbol	i		571776						
ANR	572420	Symbol	j		571776						
ANR	572421	Symbol	t1 -> data		571776						
ANR	572422	Symbol	bandno		571776						
ANR	572423	Symbol	bandconst		571776						
ANR	572424	Symbol	* i		571776						
ANR	572425	Symbol	tilec -> resolutions		571776						
ANR	572426	Symbol	t1 -> h		571776						
ANR	572427	Symbol	* j		571776						
ANR	572428	Symbol	precno		571776						
ANR	572429	Symbol	prc -> cw		571776						
ANR	572430	Symbol	* tccp		571776						
ANR	572431	Symbol	* band		571776						
ANR	572432	Symbol	x		571776						
ANR	572433	Symbol	res -> numbands		571776						
ANR	572434	Symbol	y		571776						
ANR	572435	Symbol	* tile_w		571776						
ANR	572436	Function	t1_decode_cblks	1537:0:46046:49748							
ANR	572437	FunctionDef	"t1_decode_cblks (opj_t1_t * t1 , opj_tcd_tilecomp_t * tilec , opj_tccp_t * tccp)"		572436	0					
ANR	572438	CompoundStatement		1541:0:46139:49748	572436	0					
ANR	572439	IdentifierDeclStatement	"int resno , bandno , precno , cblkno ;"	1542:4:46145:46178	572436	0	True				
ANR	572440	IdentifierDecl	resno		572436	0					
ANR	572441	IdentifierDeclType	int		572436	0					
ANR	572442	Identifier	resno		572436	1					
ANR	572443	IdentifierDecl	bandno		572436	1					
ANR	572444	IdentifierDeclType	int		572436	0					
ANR	572445	Identifier	bandno		572436	1					
ANR	572446	IdentifierDecl	precno		572436	2					
ANR	572447	IdentifierDeclType	int		572436	0					
ANR	572448	Identifier	precno		572436	1					
ANR	572449	IdentifierDecl	cblkno		572436	3					
ANR	572450	IdentifierDeclType	int		572436	0					
ANR	572451	Identifier	cblkno		572436	1					
ANR	572452	IdentifierDeclStatement	int tile_w = tilec -> x1 - tilec -> x0 ;	1544:4:46185:46219	572436	1	True				
ANR	572453	IdentifierDecl	tile_w = tilec -> x1 - tilec -> x0		572436	0					
ANR	572454	IdentifierDeclType	int		572436	0					
ANR	572455	Identifier	tile_w		572436	1					
ANR	572456	AssignmentExpression	tile_w = tilec -> x1 - tilec -> x0		572436	2		=			
ANR	572457	Identifier	tile_w		572436	0					
ANR	572458	AdditiveExpression	tilec -> x1 - tilec -> x0		572436	1		-			
ANR	572459	PtrMemberAccess	tilec -> x1		572436	0					
ANR	572460	Identifier	tilec		572436	0					
ANR	572461	Identifier	x1		572436	1					
ANR	572462	PtrMemberAccess	tilec -> x0		572436	1					
ANR	572463	Identifier	tilec		572436	0					
ANR	572464	Identifier	x0		572436	1					
ANR	572465	ForStatement	for ( resno = 0 ; resno < tilec -> numresolutions ; ++ resno )		572436	2					
ANR	572466	ForInit	resno = 0 ;	1546:9:46231:46240	572436	0	True				
ANR	572467	AssignmentExpression	resno = 0		572436	0		=			
ANR	572468	Identifier	resno		572436	0					
ANR	572469	PrimaryExpression	0		572436	1					
ANR	572470	Condition	resno < tilec -> numresolutions	1546:20:46242:46270	572436	1	True				
ANR	572471	RelationalExpression	resno < tilec -> numresolutions		572436	0		<			
ANR	572472	Identifier	resno		572436	0					
ANR	572473	PtrMemberAccess	tilec -> numresolutions		572436	1					
ANR	572474	Identifier	tilec		572436	0					
ANR	572475	Identifier	numresolutions		572436	1					
ANR	572476	UnaryExpression	++ resno	1546:51:46273:46279	572436	2	True				
ANR	572477	IncDec	++		572436	0					
ANR	572478	Identifier	resno		572436	1					
ANR	572479	CompoundStatement		7:8:152:206	572436	3					
ANR	572480	IdentifierDeclStatement	opj_tcd_resolution_t * res = & tilec -> resolutions [ resno ] ;	1547:8:46292:46346	572436	0	True				
ANR	572481	IdentifierDecl	* res = & tilec -> resolutions [ resno ]		572436	0					
ANR	572482	IdentifierDeclType	opj_tcd_resolution_t *		572436	0					
ANR	572483	Identifier	res		572436	1					
ANR	572484	AssignmentExpression	* res = & tilec -> resolutions [ resno ]		572436	2		=			
ANR	572485	Identifier	res		572436	0					
ANR	572486	UnaryOperationExpression	& tilec -> resolutions [ resno ]		572436	1					
ANR	572487	UnaryOperator	&		572436	0					
ANR	572488	ArrayIndexing	tilec -> resolutions [ resno ]		572436	1					
ANR	572489	PtrMemberAccess	tilec -> resolutions		572436	0					
ANR	572490	Identifier	tilec		572436	0					
ANR	572491	Identifier	resolutions		572436	1					
ANR	572492	Identifier	resno		572436	1					
ANR	572493	ForStatement	for ( bandno = 0 ; bandno < res -> numbands ; ++ bandno )		572436	1					
ANR	572494	ForInit	bandno = 0 ;	1549:13:46362:46372	572436	0	True				
ANR	572495	AssignmentExpression	bandno = 0		572436	0		=			
ANR	572496	Identifier	bandno		572436	0					
ANR	572497	PrimaryExpression	0		572436	1					
ANR	572498	Condition	bandno < res -> numbands	1549:25:46374:46395	572436	1	True				
ANR	572499	RelationalExpression	bandno < res -> numbands		572436	0		<			
ANR	572500	Identifier	bandno		572436	0					
ANR	572501	PtrMemberAccess	res -> numbands		572436	1					
ANR	572502	Identifier	res		572436	0					
ANR	572503	Identifier	numbands		572436	1					
ANR	572504	UnaryExpression	++ bandno	1549:49:46398:46405	572436	2	True				
ANR	572505	IncDec	++		572436	0					
ANR	572506	Identifier	bandno		572436	1					
ANR	572507	CompoundStatement		10:12:282:333	572436	3					
ANR	572508	IdentifierDeclStatement	opj_tcd_band_t * restrict band = & res -> bands [ bandno ] ;	1550:12:46422:46473	572436	0	True				
ANR	572509	IdentifierDecl	* restrict band = & res -> bands [ bandno ]		572436	0					
ANR	572510	IdentifierDeclType	opj_tcd_band_t * restrict		572436	0					
ANR	572511	Identifier	band		572436	1					
ANR	572512	AssignmentExpression	* restrict band = & res -> bands [ bandno ]		572436	2		=			
ANR	572513	Identifier	band		572436	0					
ANR	572514	UnaryOperationExpression	& res -> bands [ bandno ]		572436	1					
ANR	572515	UnaryOperator	&		572436	0					
ANR	572516	ArrayIndexing	res -> bands [ bandno ]		572436	1					
ANR	572517	PtrMemberAccess	res -> bands		572436	0					
ANR	572518	Identifier	res		572436	0					
ANR	572519	Identifier	bands		572436	1					
ANR	572520	Identifier	bandno		572436	1					
ANR	572521	ForStatement	for ( precno = 0 ; precno < res -> pw * res -> ph ; ++ precno )		572436	1					
ANR	572522	ForInit	precno = 0 ;	1552:17:46493:46503	572436	0	True				
ANR	572523	AssignmentExpression	precno = 0		572436	0		=			
ANR	572524	Identifier	precno		572436	0					
ANR	572525	PrimaryExpression	0		572436	1					
ANR	572526	Condition	precno < res -> pw * res -> ph	1552:29:46505:46530	572436	1	True				
ANR	572527	RelationalExpression	precno < res -> pw * res -> ph		572436	0		<			
ANR	572528	Identifier	precno		572436	0					
ANR	572529	MultiplicativeExpression	res -> pw * res -> ph		572436	1		*			
ANR	572530	PtrMemberAccess	res -> pw		572436	0					
ANR	572531	Identifier	res		572436	0					
ANR	572532	Identifier	pw		572436	1					
ANR	572533	PtrMemberAccess	res -> ph		572436	1					
ANR	572534	Identifier	res		572436	0					
ANR	572535	Identifier	ph		572436	1					
ANR	572536	UnaryExpression	++ precno	1552:57:46533:46540	572436	2	True				
ANR	572537	IncDec	++		572436	0					
ANR	572538	Identifier	precno		572436	1					
ANR	572539	CompoundStatement		13:16:421:476	572436	3					
ANR	572540	IdentifierDeclStatement	opj_tcd_precinct_t * precinct = & band -> precincts [ precno ] ;	1553:16:46561:46616	572436	0	True				
ANR	572541	IdentifierDecl	* precinct = & band -> precincts [ precno ]		572436	0					
ANR	572542	IdentifierDeclType	opj_tcd_precinct_t *		572436	0					
ANR	572543	Identifier	precinct		572436	1					
ANR	572544	AssignmentExpression	* precinct = & band -> precincts [ precno ]		572436	2		=			
ANR	572545	Identifier	precinct		572436	0					
ANR	572546	UnaryOperationExpression	& band -> precincts [ precno ]		572436	1					
ANR	572547	UnaryOperator	&		572436	0					
ANR	572548	ArrayIndexing	band -> precincts [ precno ]		572436	1					
ANR	572549	PtrMemberAccess	band -> precincts		572436	0					
ANR	572550	Identifier	band		572436	0					
ANR	572551	Identifier	precincts		572436	1					
ANR	572552	Identifier	precno		572436	1					
ANR	572553	ForStatement	for ( cblkno = 0 ; cblkno < precinct -> cw * precinct -> ch ; ++ cblkno )		572436	1					
ANR	572554	ForInit	cblkno = 0 ;	1555:21:46640:46650	572436	0	True				
ANR	572555	AssignmentExpression	cblkno = 0		572436	0		=			
ANR	572556	Identifier	cblkno		572436	0					
ANR	572557	PrimaryExpression	0		572436	1					
ANR	572558	Condition	cblkno < precinct -> cw * precinct -> ch	1555:33:46652:46687	572436	1	True				
ANR	572559	RelationalExpression	cblkno < precinct -> cw * precinct -> ch		572436	0		<			
ANR	572560	Identifier	cblkno		572436	0					
ANR	572561	MultiplicativeExpression	precinct -> cw * precinct -> ch		572436	1		*			
ANR	572562	PtrMemberAccess	precinct -> cw		572436	0					
ANR	572563	Identifier	precinct		572436	0					
ANR	572564	Identifier	cw		572436	1					
ANR	572565	PtrMemberAccess	precinct -> ch		572436	1					
ANR	572566	Identifier	precinct		572436	0					
ANR	572567	Identifier	ch		572436	1					
ANR	572568	UnaryExpression	++ cblkno	1555:71:46690:46697	572436	2	True				
ANR	572569	IncDec	++		572436	0					
ANR	572570	Identifier	cblkno		572436	1					
ANR	572571	CompoundStatement		20:20:770:778	572436	3					
ANR	572572	IdentifierDeclStatement	opj_tcd_cblk_dec_t * cblk = & precinct -> cblks . dec [ cblkno ] ;	1556:20:46722:46777	572436	0	True				
ANR	572573	IdentifierDecl	* cblk = & precinct -> cblks . dec [ cblkno ]		572436	0					
ANR	572574	IdentifierDeclType	opj_tcd_cblk_dec_t *		572436	0					
ANR	572575	Identifier	cblk		572436	1					
ANR	572576	AssignmentExpression	* cblk = & precinct -> cblks . dec [ cblkno ]		572436	2		=			
ANR	572577	Identifier	cblk		572436	0					
ANR	572578	UnaryOperationExpression	& precinct -> cblks . dec [ cblkno ]		572436	1					
ANR	572579	UnaryOperator	&		572436	0					
ANR	572580	ArrayIndexing	precinct -> cblks . dec [ cblkno ]		572436	1					
ANR	572581	MemberAccess	precinct -> cblks . dec		572436	0					
ANR	572582	PtrMemberAccess	precinct -> cblks		572436	0					
ANR	572583	Identifier	precinct		572436	0					
ANR	572584	Identifier	cblks		572436	1					
ANR	572585	Identifier	dec		572436	1					
ANR	572586	Identifier	cblkno		572436	1					
ANR	572587	IdentifierDeclStatement	int * restrict datap ;	1557:20:46799:46818	572436	1	True				
ANR	572588	IdentifierDecl	* restrict datap		572436	0					
ANR	572589	IdentifierDeclType	int * restrict		572436	0					
ANR	572590	Identifier	datap		572436	1					
ANR	572591	IdentifierDeclStatement	"int cblk_w , cblk_h ;"	1558:20:46840:46858	572436	2	True				
ANR	572592	IdentifierDecl	cblk_w		572436	0					
ANR	572593	IdentifierDeclType	int		572436	0					
ANR	572594	Identifier	cblk_w		572436	1					
ANR	572595	IdentifierDecl	cblk_h		572436	1					
ANR	572596	IdentifierDeclType	int		572436	0					
ANR	572597	Identifier	cblk_h		572436	1					
ANR	572598	IdentifierDeclStatement	"int x , y ;"	1559:20:46880:46888	572436	3	True				
ANR	572599	IdentifierDecl	x		572436	0					
ANR	572600	IdentifierDeclType	int		572436	0					
ANR	572601	Identifier	x		572436	1					
ANR	572602	IdentifierDecl	y		572436	1					
ANR	572603	IdentifierDeclType	int		572436	0					
ANR	572604	Identifier	y		572436	1					
ANR	572605	IdentifierDeclStatement	"int i , j ;"	1560:20:46910:46918	572436	4	True				
ANR	572606	IdentifierDecl	i		572436	0					
ANR	572607	IdentifierDeclType	int		572436	0					
ANR	572608	Identifier	i		572436	1					
ANR	572609	IdentifierDecl	j		572436	1					
ANR	572610	IdentifierDeclType	int		572436	0					
ANR	572611	Identifier	j		572436	1					
ANR	572612	ExpressionStatement	"t1_decode_cblk ( t1 , cblk , band -> bandno , tccp -> roishift , tccp -> cblksty )"	1562:20:46941:47131	572436	5	True				
ANR	572613	CallExpression	"t1_decode_cblk ( t1 , cblk , band -> bandno , tccp -> roishift , tccp -> cblksty )"		572436	0					
ANR	572614	Callee	t1_decode_cblk		572436	0					
ANR	572615	Identifier	t1_decode_cblk		572436	0					
ANR	572616	ArgumentList	t1		572436	1					
ANR	572617	Argument	t1		572436	0					
ANR	572618	Identifier	t1		572436	0					
ANR	572619	Argument	cblk		572436	1					
ANR	572620	Identifier	cblk		572436	0					
ANR	572621	Argument	band -> bandno		572436	2					
ANR	572622	PtrMemberAccess	band -> bandno		572436	0					
ANR	572623	Identifier	band		572436	0					
ANR	572624	Identifier	bandno		572436	1					
ANR	572625	Argument	tccp -> roishift		572436	3					
ANR	572626	PtrMemberAccess	tccp -> roishift		572436	0					
ANR	572627	Identifier	tccp		572436	0					
ANR	572628	Identifier	roishift		572436	1					
ANR	572629	Argument	tccp -> cblksty		572436	4					
ANR	572630	PtrMemberAccess	tccp -> cblksty		572436	0					
ANR	572631	Identifier	tccp		572436	0					
ANR	572632	Identifier	cblksty		572436	1					
ANR	572633	ExpressionStatement	x = cblk -> x0 - band -> x0	1569:20:47154:47177	572436	6	True				
ANR	572634	AssignmentExpression	x = cblk -> x0 - band -> x0		572436	0		=			
ANR	572635	Identifier	x		572436	0					
ANR	572636	AdditiveExpression	cblk -> x0 - band -> x0		572436	1		-			
ANR	572637	PtrMemberAccess	cblk -> x0		572436	0					
ANR	572638	Identifier	cblk		572436	0					
ANR	572639	Identifier	x0		572436	1					
ANR	572640	PtrMemberAccess	band -> x0		572436	1					
ANR	572641	Identifier	band		572436	0					
ANR	572642	Identifier	x0		572436	1					
ANR	572643	ExpressionStatement	y = cblk -> y0 - band -> y0	1570:20:47199:47222	572436	7	True				
ANR	572644	AssignmentExpression	y = cblk -> y0 - band -> y0		572436	0		=			
ANR	572645	Identifier	y		572436	0					
ANR	572646	AdditiveExpression	cblk -> y0 - band -> y0		572436	1		-			
ANR	572647	PtrMemberAccess	cblk -> y0		572436	0					
ANR	572648	Identifier	cblk		572436	0					
ANR	572649	Identifier	y0		572436	1					
ANR	572650	PtrMemberAccess	band -> y0		572436	1					
ANR	572651	Identifier	band		572436	0					
ANR	572652	Identifier	y0		572436	1					
ANR	572653	IfStatement	if ( band -> bandno & 1 )		572436	8					
ANR	572654	Condition	band -> bandno & 1	1571:24:47248:47263	572436	0	True				
ANR	572655	BitAndExpression	band -> bandno & 1		572436	0		&			
ANR	572656	PtrMemberAccess	band -> bandno		572436	0					
ANR	572657	Identifier	band		572436	0					
ANR	572658	Identifier	bandno		572436	1					
ANR	572659	PrimaryExpression	1		572436	1					
ANR	572660	CompoundStatement		32:24:1152:1211	572436	1					
ANR	572661	IdentifierDeclStatement	opj_tcd_resolution_t * pres = & tilec -> resolutions [ resno - 1 ] ;	1572:24:47292:47351	572436	0	True				
ANR	572662	IdentifierDecl	* pres = & tilec -> resolutions [ resno - 1 ]		572436	0					
ANR	572663	IdentifierDeclType	opj_tcd_resolution_t *		572436	0					
ANR	572664	Identifier	pres		572436	1					
ANR	572665	AssignmentExpression	* pres = & tilec -> resolutions [ resno - 1 ]		572436	2		=			
ANR	572666	Identifier	pres		572436	0					
ANR	572667	UnaryOperationExpression	& tilec -> resolutions [ resno - 1 ]		572436	1					
ANR	572668	UnaryOperator	&		572436	0					
ANR	572669	ArrayIndexing	tilec -> resolutions [ resno - 1 ]		572436	1					
ANR	572670	PtrMemberAccess	tilec -> resolutions		572436	0					
ANR	572671	Identifier	tilec		572436	0					
ANR	572672	Identifier	resolutions		572436	1					
ANR	572673	AdditiveExpression	resno - 1		572436	1		-			
ANR	572674	Identifier	resno		572436	0					
ANR	572675	PrimaryExpression	1		572436	1					
ANR	572676	ExpressionStatement	x += pres -> x1 - pres -> x0	1573:24:47377:47401	572436	1	True				
ANR	572677	AssignmentExpression	x += pres -> x1 - pres -> x0		572436	0		+=			
ANR	572678	Identifier	x		572436	0					
ANR	572679	AdditiveExpression	pres -> x1 - pres -> x0		572436	1		-			
ANR	572680	PtrMemberAccess	pres -> x1		572436	0					
ANR	572681	Identifier	pres		572436	0					
ANR	572682	Identifier	x1		572436	1					
ANR	572683	PtrMemberAccess	pres -> x0		572436	1					
ANR	572684	Identifier	pres		572436	0					
ANR	572685	Identifier	x0		572436	1					
ANR	572686	IfStatement	if ( band -> bandno & 2 )		572436	9					
ANR	572687	Condition	band -> bandno & 2	1575:24:47449:47464	572436	0	True				
ANR	572688	BitAndExpression	band -> bandno & 2		572436	0		&			
ANR	572689	PtrMemberAccess	band -> bandno		572436	0					
ANR	572690	Identifier	band		572436	0					
ANR	572691	Identifier	bandno		572436	1					
ANR	572692	PrimaryExpression	2		572436	1					
ANR	572693	CompoundStatement		36:24:1353:1412	572436	1					
ANR	572694	IdentifierDeclStatement	opj_tcd_resolution_t * pres = & tilec -> resolutions [ resno - 1 ] ;	1576:24:47493:47552	572436	0	True				
ANR	572695	IdentifierDecl	* pres = & tilec -> resolutions [ resno - 1 ]		572436	0					
ANR	572696	IdentifierDeclType	opj_tcd_resolution_t *		572436	0					
ANR	572697	Identifier	pres		572436	1					
ANR	572698	AssignmentExpression	* pres = & tilec -> resolutions [ resno - 1 ]		572436	2		=			
ANR	572699	Identifier	pres		572436	0					
ANR	572700	UnaryOperationExpression	& tilec -> resolutions [ resno - 1 ]		572436	1					
ANR	572701	UnaryOperator	&		572436	0					
ANR	572702	ArrayIndexing	tilec -> resolutions [ resno - 1 ]		572436	1					
ANR	572703	PtrMemberAccess	tilec -> resolutions		572436	0					
ANR	572704	Identifier	tilec		572436	0					
ANR	572705	Identifier	resolutions		572436	1					
ANR	572706	AdditiveExpression	resno - 1		572436	1		-			
ANR	572707	Identifier	resno		572436	0					
ANR	572708	PrimaryExpression	1		572436	1					
ANR	572709	ExpressionStatement	y += pres -> y1 - pres -> y0	1577:24:47578:47602	572436	1	True				
ANR	572710	AssignmentExpression	y += pres -> y1 - pres -> y0		572436	0		+=			
ANR	572711	Identifier	y		572436	0					
ANR	572712	AdditiveExpression	pres -> y1 - pres -> y0		572436	1		-			
ANR	572713	PtrMemberAccess	pres -> y1		572436	0					
ANR	572714	Identifier	pres		572436	0					
ANR	572715	Identifier	y1		572436	1					
ANR	572716	PtrMemberAccess	pres -> y0		572436	1					
ANR	572717	Identifier	pres		572436	0					
ANR	572718	Identifier	y0		572436	1					
ANR	572719	ExpressionStatement	datap = t1 -> data	1580:20:47647:47663	572436	10	True				
ANR	572720	AssignmentExpression	datap = t1 -> data		572436	0		=			
ANR	572721	Identifier	datap		572436	0					
ANR	572722	PtrMemberAccess	t1 -> data		572436	1					
ANR	572723	Identifier	t1		572436	0					
ANR	572724	Identifier	data		572436	1					
ANR	572725	ExpressionStatement	cblk_w = t1 -> w	1581:20:47685:47699	572436	11	True				
ANR	572726	AssignmentExpression	cblk_w = t1 -> w		572436	0		=			
ANR	572727	Identifier	cblk_w		572436	0					
ANR	572728	PtrMemberAccess	t1 -> w		572436	1					
ANR	572729	Identifier	t1		572436	0					
ANR	572730	Identifier	w		572436	1					
ANR	572731	ExpressionStatement	cblk_h = t1 -> h	1582:20:47721:47735	572436	12	True				
ANR	572732	AssignmentExpression	cblk_h = t1 -> h		572436	0		=			
ANR	572733	Identifier	cblk_h		572436	0					
ANR	572734	PtrMemberAccess	t1 -> h		572436	1					
ANR	572735	Identifier	t1		572436	0					
ANR	572736	Identifier	h		572436	1					
ANR	572737	IfStatement	if ( tccp -> roishift )		572436	13					
ANR	572738	Condition	tccp -> roishift	1584:24:47762:47775	572436	0	True				
ANR	572739	PtrMemberAccess	tccp -> roishift		572436	0					
ANR	572740	Identifier	tccp		572436	0					
ANR	572741	Identifier	roishift		572436	1					
ANR	572742	CompoundStatement		45:24:1664:1696	572436	1					
ANR	572743	IdentifierDeclStatement	int thresh = 1 << tccp -> roishift ;	1585:24:47804:47836	572436	0	True				
ANR	572744	IdentifierDecl	thresh = 1 << tccp -> roishift		572436	0					
ANR	572745	IdentifierDeclType	int		572436	0					
ANR	572746	Identifier	thresh		572436	1					
ANR	572747	AssignmentExpression	thresh = 1 << tccp -> roishift		572436	2		=			
ANR	572748	Identifier	thresh		572436	0					
ANR	572749	ShiftExpression	1 << tccp -> roishift		572436	1		<<			
ANR	572750	PrimaryExpression	1		572436	0					
ANR	572751	PtrMemberAccess	tccp -> roishift		572436	1					
ANR	572752	Identifier	tccp		572436	0					
ANR	572753	Identifier	roishift		572436	1					
ANR	572754	ForStatement	for ( j = 0 ; j < cblk_h ; ++ j )		572436	1					
ANR	572755	ForInit	j = 0 ;	1586:29:47867:47872	572436	0	True				
ANR	572756	AssignmentExpression	j = 0		572436	0		=			
ANR	572757	Identifier	j		572436	0					
ANR	572758	PrimaryExpression	0		572436	1					
ANR	572759	Condition	j < cblk_h	1586:36:47874:47883	572436	1	True				
ANR	572760	RelationalExpression	j < cblk_h		572436	0		<			
ANR	572761	Identifier	j		572436	0					
ANR	572762	Identifier	cblk_h		572436	1					
ANR	572763	UnaryExpression	++ j	1586:48:47886:47888	572436	2	True				
ANR	572764	IncDec	++		572436	0					
ANR	572765	Identifier	j		572436	1					
ANR	572766	CompoundStatement		46:53:1751:1751	572436	3					
ANR	572767	ForStatement	for ( i = 0 ; i < cblk_w ; ++ i )		572436	0					
ANR	572768	ForInit	i = 0 ;	1587:33:47926:47931	572436	0	True				
ANR	572769	AssignmentExpression	i = 0		572436	0		=			
ANR	572770	Identifier	i		572436	0					
ANR	572771	PrimaryExpression	0		572436	1					
ANR	572772	Condition	i < cblk_w	1587:40:47933:47942	572436	1	True				
ANR	572773	RelationalExpression	i < cblk_w		572436	0		<			
ANR	572774	Identifier	i		572436	0					
ANR	572775	Identifier	cblk_w		572436	1					
ANR	572776	UnaryExpression	++ i	1587:52:47945:47947	572436	2	True				
ANR	572777	IncDec	++		572436	0					
ANR	572778	Identifier	i		572436	1					
ANR	572779	CompoundStatement		49:32:1911:1929	572436	3					
ANR	572780	IdentifierDeclStatement	int val = datap [ ( j * cblk_w ) + i ] ;	1588:32:47984:48017	572436	0	True				
ANR	572781	IdentifierDecl	val = datap [ ( j * cblk_w ) + i ]		572436	0					
ANR	572782	IdentifierDeclType	int		572436	0					
ANR	572783	Identifier	val		572436	1					
ANR	572784	AssignmentExpression	val = datap [ ( j * cblk_w ) + i ]		572436	2		=			
ANR	572785	Identifier	val		572436	0					
ANR	572786	ArrayIndexing	datap [ ( j * cblk_w ) + i ]		572436	1					
ANR	572787	Identifier	datap		572436	0					
ANR	572788	AdditiveExpression	( j * cblk_w ) + i		572436	1		+			
ANR	572789	MultiplicativeExpression	j * cblk_w		572436	0		*			
ANR	572790	Identifier	j		572436	0					
ANR	572791	Identifier	cblk_w		572436	1					
ANR	572792	Identifier	i		572436	1					
ANR	572793	IdentifierDeclStatement	int mag = abs ( val ) ;	1589:32:48051:48069	572436	1	True				
ANR	572794	IdentifierDecl	mag = abs ( val )		572436	0					
ANR	572795	IdentifierDeclType	int		572436	0					
ANR	572796	Identifier	mag		572436	1					
ANR	572797	AssignmentExpression	mag = abs ( val )		572436	2		=			
ANR	572798	Identifier	mag		572436	0					
ANR	572799	CallExpression	abs ( val )		572436	1					
ANR	572800	Callee	abs		572436	0					
ANR	572801	Identifier	abs		572436	0					
ANR	572802	ArgumentList	val		572436	1					
ANR	572803	Argument	val		572436	0					
ANR	572804	Identifier	val		572436	0					
ANR	572805	IfStatement	if ( mag >= thresh )		572436	2					
ANR	572806	Condition	mag >= thresh	1590:36:48107:48119	572436	0	True				
ANR	572807	RelationalExpression	mag >= thresh		572436	0		>=			
ANR	572808	Identifier	mag		572436	0					
ANR	572809	Identifier	thresh		572436	1					
ANR	572810	CompoundStatement		50:51:1982:1982	572436	1					
ANR	572811	ExpressionStatement	mag >>= tccp -> roishift	1591:36:48160:48182	572436	0	True				
ANR	572812	AssignmentExpression	mag >>= tccp -> roishift		572436	0		>>=			
ANR	572813	Identifier	mag		572436	0					
ANR	572814	PtrMemberAccess	tccp -> roishift		572436	1					
ANR	572815	Identifier	tccp		572436	0					
ANR	572816	Identifier	roishift		572436	1					
ANR	572817	ExpressionStatement	datap [ ( j * cblk_w ) + i ] = val < 0 ? - mag : mag	1592:36:48220:48266	572436	1	True				
ANR	572818	AssignmentExpression	datap [ ( j * cblk_w ) + i ] = val < 0 ? - mag : mag		572436	0		=			
ANR	572819	ArrayIndexing	datap [ ( j * cblk_w ) + i ]		572436	0					
ANR	572820	Identifier	datap		572436	0					
ANR	572821	AdditiveExpression	( j * cblk_w ) + i		572436	1		+			
ANR	572822	MultiplicativeExpression	j * cblk_w		572436	0		*			
ANR	572823	Identifier	j		572436	0					
ANR	572824	Identifier	cblk_w		572436	1					
ANR	572825	Identifier	i		572436	1					
ANR	572826	ConditionalExpression	val < 0 ? - mag : mag		572436	1					
ANR	572827	Condition	val < 0		572436	0					
ANR	572828	RelationalExpression	val < 0		572436	0		<			
ANR	572829	Identifier	val		572436	0					
ANR	572830	PrimaryExpression	0		572436	1					
ANR	572831	UnaryOperationExpression	- mag		572436	1					
ANR	572832	UnaryOperator	-		572436	0					
ANR	572833	Identifier	mag		572436	1					
ANR	572834	Identifier	mag		572436	2					
ANR	572835	IfStatement	if ( tccp -> qmfbid == 1 )		572436	14					
ANR	572836	Condition	tccp -> qmfbid == 1	1598:24:48405:48421	572436	0	True				
ANR	572837	EqualityExpression	tccp -> qmfbid == 1		572436	0		==			
ANR	572838	PtrMemberAccess	tccp -> qmfbid		572436	0					
ANR	572839	Identifier	tccp		572436	0					
ANR	572840	Identifier	qmfbid		572436	1					
ANR	572841	PrimaryExpression	1		572436	1					
ANR	572842	CompoundStatement		59:24:2310:2363	572436	1					
ANR	572843	IdentifierDeclStatement	int * restrict tiledp = & tilec -> data [ ( y * tile_w ) + x ] ;	1599:24:48450:48503	572436	0	True				
ANR	572844	IdentifierDecl	* restrict tiledp = & tilec -> data [ ( y * tile_w ) + x ]		572436	0					
ANR	572845	IdentifierDeclType	int * restrict		572436	0					
ANR	572846	Identifier	tiledp		572436	1					
ANR	572847	AssignmentExpression	* restrict tiledp = & tilec -> data [ ( y * tile_w ) + x ]		572436	2		=			
ANR	572848	Identifier	tiledp		572436	0					
ANR	572849	UnaryOperationExpression	& tilec -> data [ ( y * tile_w ) + x ]		572436	1					
ANR	572850	UnaryOperator	&		572436	0					
ANR	572851	ArrayIndexing	tilec -> data [ ( y * tile_w ) + x ]		572436	1					
ANR	572852	PtrMemberAccess	tilec -> data		572436	0					
ANR	572853	Identifier	tilec		572436	0					
ANR	572854	Identifier	data		572436	1					
ANR	572855	AdditiveExpression	( y * tile_w ) + x		572436	1		+			
ANR	572856	MultiplicativeExpression	y * tile_w		572436	0		*			
ANR	572857	Identifier	y		572436	0					
ANR	572858	Identifier	tile_w		572436	1					
ANR	572859	Identifier	x		572436	1					
ANR	572860	ForStatement	for ( j = 0 ; j < cblk_h ; ++ j )		572436	1					
ANR	572861	ForInit	j = 0 ;	1600:29:48534:48539	572436	0	True				
ANR	572862	AssignmentExpression	j = 0		572436	0		=			
ANR	572863	Identifier	j		572436	0					
ANR	572864	PrimaryExpression	0		572436	1					
ANR	572865	Condition	j < cblk_h	1600:36:48541:48550	572436	1	True				
ANR	572866	RelationalExpression	j < cblk_h		572436	0		<			
ANR	572867	Identifier	j		572436	0					
ANR	572868	Identifier	cblk_h		572436	1					
ANR	572869	UnaryExpression	++ j	1600:48:48553:48555	572436	2	True				
ANR	572870	IncDec	++		572436	0					
ANR	572871	Identifier	j		572436	1					
ANR	572872	CompoundStatement		60:53:2418:2418	572436	3					
ANR	572873	ForStatement	for ( i = 0 ; i < cblk_w ; ++ i )		572436	0					
ANR	572874	ForInit	i = 0 ;	1601:33:48593:48598	572436	0	True				
ANR	572875	AssignmentExpression	i = 0		572436	0		=			
ANR	572876	Identifier	i		572436	0					
ANR	572877	PrimaryExpression	0		572436	1					
ANR	572878	Condition	i < cblk_w	1601:40:48600:48609	572436	1	True				
ANR	572879	RelationalExpression	i < cblk_w		572436	0		<			
ANR	572880	Identifier	i		572436	0					
ANR	572881	Identifier	cblk_w		572436	1					
ANR	572882	UnaryExpression	++ i	1601:52:48612:48614	572436	2	True				
ANR	572883	IncDec	++		572436	0					
ANR	572884	Identifier	i		572436	1					
ANR	572885	CompoundStatement		62:32:2511:2544	572436	3					
ANR	572886	IdentifierDeclStatement	int tmp = datap [ ( j * cblk_w ) + i ] ;	1602:32:48651:48684	572436	0	True				
ANR	572887	IdentifierDecl	tmp = datap [ ( j * cblk_w ) + i ]		572436	0					
ANR	572888	IdentifierDeclType	int		572436	0					
ANR	572889	Identifier	tmp		572436	1					
ANR	572890	AssignmentExpression	tmp = datap [ ( j * cblk_w ) + i ]		572436	2		=			
ANR	572891	Identifier	tmp		572436	0					
ANR	572892	ArrayIndexing	datap [ ( j * cblk_w ) + i ]		572436	1					
ANR	572893	Identifier	datap		572436	0					
ANR	572894	AdditiveExpression	( j * cblk_w ) + i		572436	1		+			
ANR	572895	MultiplicativeExpression	j * cblk_w		572436	0		*			
ANR	572896	Identifier	j		572436	0					
ANR	572897	Identifier	cblk_w		572436	1					
ANR	572898	Identifier	i		572436	1					
ANR	572899	ExpressionStatement	( ( int * ) tiledp ) [ ( j * tile_w ) + i ] = tmp / 2	1603:32:48718:48760	572436	1	True				
ANR	572900	AssignmentExpression	( ( int * ) tiledp ) [ ( j * tile_w ) + i ] = tmp / 2		572436	0		=			
ANR	572901	ArrayIndexing	( ( int * ) tiledp ) [ ( j * tile_w ) + i ]		572436	0					
ANR	572902	CastExpression	( int * ) tiledp		572436	0					
ANR	572903	CastTarget	int *		572436	0					
ANR	572904	Identifier	tiledp		572436	1					
ANR	572905	AdditiveExpression	( j * tile_w ) + i		572436	1		+			
ANR	572906	MultiplicativeExpression	j * tile_w		572436	0		*			
ANR	572907	Identifier	j		572436	0					
ANR	572908	Identifier	tile_w		572436	1					
ANR	572909	Identifier	i		572436	1					
ANR	572910	MultiplicativeExpression	tmp / 2		572436	1		/			
ANR	572911	Identifier	tmp		572436	0					
ANR	572912	PrimaryExpression	2		572436	1					
ANR	572913	ElseStatement	else		572436	0					
ANR	572914	CompoundStatement		67:24:2767:2831	572436	0					
ANR	572915	IdentifierDeclStatement	float * restrict tiledp = ( float * ) & tilec -> data [ ( y * tile_w ) + x ] ;	1607:24:48907:48971	572436	0	True				
ANR	572916	IdentifierDecl	* restrict tiledp = ( float * ) & tilec -> data [ ( y * tile_w ) + x ]		572436	0					
ANR	572917	IdentifierDeclType	float * restrict		572436	0					
ANR	572918	Identifier	tiledp		572436	1					
ANR	572919	AssignmentExpression	* restrict tiledp = ( float * ) & tilec -> data [ ( y * tile_w ) + x ]		572436	2		=			
ANR	572920	Identifier	tiledp		572436	0					
ANR	572921	CastExpression	( float * ) & tilec -> data [ ( y * tile_w ) + x ]		572436	1					
ANR	572922	CastTarget	float *		572436	0					
ANR	572923	UnaryOperationExpression	& tilec -> data [ ( y * tile_w ) + x ]		572436	1					
ANR	572924	UnaryOperator	&		572436	0					
ANR	572925	ArrayIndexing	tilec -> data [ ( y * tile_w ) + x ]		572436	1					
ANR	572926	PtrMemberAccess	tilec -> data		572436	0					
ANR	572927	Identifier	tilec		572436	0					
ANR	572928	Identifier	data		572436	1					
ANR	572929	AdditiveExpression	( y * tile_w ) + x		572436	1		+			
ANR	572930	MultiplicativeExpression	y * tile_w		572436	0		*			
ANR	572931	Identifier	y		572436	0					
ANR	572932	Identifier	tile_w		572436	1					
ANR	572933	Identifier	x		572436	1					
ANR	572934	ForStatement	for ( j = 0 ; j < cblk_h ; ++ j )		572436	1					
ANR	572935	ForInit	j = 0 ;	1608:29:49002:49007	572436	0	True				
ANR	572936	AssignmentExpression	j = 0		572436	0		=			
ANR	572937	Identifier	j		572436	0					
ANR	572938	PrimaryExpression	0		572436	1					
ANR	572939	Condition	j < cblk_h	1608:36:49009:49018	572436	1	True				
ANR	572940	RelationalExpression	j < cblk_h		572436	0		<			
ANR	572941	Identifier	j		572436	0					
ANR	572942	Identifier	cblk_h		572436	1					
ANR	572943	UnaryExpression	++ j	1608:48:49021:49023	572436	2	True				
ANR	572944	IncDec	++		572436	0					
ANR	572945	Identifier	j		572436	1					
ANR	572946	CompoundStatement		69:28:2916:2948	572436	3					
ANR	572947	IdentifierDeclStatement	float * restrict tiledp2 = tiledp ;	1609:28:49056:49088	572436	0	True				
ANR	572948	IdentifierDecl	* restrict tiledp2 = tiledp		572436	0					
ANR	572949	IdentifierDeclType	float * restrict		572436	0					
ANR	572950	Identifier	tiledp2		572436	1					
ANR	572951	AssignmentExpression	* restrict tiledp2 = tiledp		572436	2		=			
ANR	572952	Identifier	tiledp		572436	0					
ANR	572953	Identifier	tiledp		572436	1					
ANR	572954	ForStatement	for ( i = 0 ; i < cblk_w ; ++ i )		572436	1					
ANR	572955	ForInit	i = 0 ;	1610:33:49123:49128	572436	0	True				
ANR	572956	AssignmentExpression	i = 0		572436	0		=			
ANR	572957	Identifier	i		572436	0					
ANR	572958	PrimaryExpression	0		572436	1					
ANR	572959	Condition	i < cblk_w	1610:40:49130:49139	572436	1	True				
ANR	572960	RelationalExpression	i < cblk_w		572436	0		<			
ANR	572961	Identifier	i		572436	0					
ANR	572962	Identifier	cblk_w		572436	1					
ANR	572963	UnaryExpression	++ i	1610:52:49142:49144	572436	2	True				
ANR	572964	IncDec	++		572436	0					
ANR	572965	Identifier	i		572436	1					
ANR	572966	CompoundStatement		71:32:3041:3076	572436	3					
ANR	572967	IdentifierDeclStatement	float tmp = * datap * band -> stepsize ;	1611:32:49181:49216	572436	0	True				
ANR	572968	IdentifierDecl	tmp = * datap * band -> stepsize		572436	0					
ANR	572969	IdentifierDeclType	float		572436	0					
ANR	572970	Identifier	tmp		572436	1					
ANR	572971	AssignmentExpression	tmp = * datap * band -> stepsize		572436	2		=			
ANR	572972	Identifier	tmp		572436	0					
ANR	572973	MultiplicativeExpression	* datap * band -> stepsize		572436	1		*			
ANR	572974	UnaryOperationExpression	* datap		572436	0					
ANR	572975	UnaryOperator	*		572436	0					
ANR	572976	Identifier	datap		572436	1					
ANR	572977	PtrMemberAccess	band -> stepsize		572436	1					
ANR	572978	Identifier	band		572436	0					
ANR	572979	Identifier	stepsize		572436	1					
ANR	572980	ExpressionStatement	* tiledp2 = tmp	1612:32:49250:49264	572436	1	True				
ANR	572981	AssignmentExpression	* tiledp2 = tmp		572436	0		=			
ANR	572982	UnaryOperationExpression	* tiledp2		572436	0					
ANR	572983	UnaryOperator	*		572436	0					
ANR	572984	Identifier	tiledp2		572436	1					
ANR	572985	Identifier	tmp		572436	1					
ANR	572986	ExpressionStatement	datap ++	1613:32:49298:49305	572436	2	True				
ANR	572987	PostIncDecOperationExpression	datap ++		572436	0					
ANR	572988	Identifier	datap		572436	0					
ANR	572989	IncDec	++		572436	1					
ANR	572990	ExpressionStatement	tiledp2 ++	1614:32:49339:49348	572436	3	True				
ANR	572991	PostIncDecOperationExpression	tiledp2 ++		572436	0					
ANR	572992	Identifier	tiledp2		572436	0					
ANR	572993	IncDec	++		572436	1					
ANR	572994	ExpressionStatement	tiledp += tile_w	1616:28:49408:49424	572436	2	True				
ANR	572995	AssignmentExpression	tiledp += tile_w		572436	0		+=			
ANR	572996	Identifier	tiledp		572436	0					
ANR	572997	Identifier	tile_w		572436	1					
ANR	572998	ExpressionStatement	opj_free ( cblk -> data )	1619:20:49494:49514	572436	15	True				
ANR	572999	CallExpression	opj_free ( cblk -> data )		572436	0					
ANR	573000	Callee	opj_free		572436	0					
ANR	573001	Identifier	opj_free		572436	0					
ANR	573002	ArgumentList	cblk -> data		572436	1					
ANR	573003	Argument	cblk -> data		572436	0					
ANR	573004	PtrMemberAccess	cblk -> data		572436	0					
ANR	573005	Identifier	cblk		572436	0					
ANR	573006	Identifier	data		572436	1					
ANR	573007	ExpressionStatement	opj_free ( cblk -> segs )	1620:20:49536:49556	572436	16	True				
ANR	573008	CallExpression	opj_free ( cblk -> segs )		572436	0					
ANR	573009	Callee	opj_free		572436	0					
ANR	573010	Identifier	opj_free		572436	0					
ANR	573011	ArgumentList	cblk -> segs		572436	1					
ANR	573012	Argument	cblk -> segs		572436	0					
ANR	573013	PtrMemberAccess	cblk -> segs		572436	0					
ANR	573014	Identifier	cblk		572436	0					
ANR	573015	Identifier	segs		572436	1					
ANR	573016	ExpressionStatement	opj_free ( precinct -> cblks . dec )	1622:16:49605:49634	572436	2	True				
ANR	573017	CallExpression	opj_free ( precinct -> cblks . dec )		572436	0					
ANR	573018	Callee	opj_free		572436	0					
ANR	573019	Identifier	opj_free		572436	0					
ANR	573020	ArgumentList	precinct -> cblks . dec		572436	1					
ANR	573021	Argument	precinct -> cblks . dec		572436	0					
ANR	573022	MemberAccess	precinct -> cblks . dec		572436	0					
ANR	573023	PtrMemberAccess	precinct -> cblks		572436	0					
ANR	573024	Identifier	precinct		572436	0					
ANR	573025	Identifier	cblks		572436	1					
ANR	573026	Identifier	dec		572436	1					
ANR	573027	ExpressionStatement	precinct -> cblks . dec = NULL	1623:16:49652:49678	572436	3	True				
ANR	573028	AssignmentExpression	precinct -> cblks . dec = NULL		572436	0		=			
ANR	573029	MemberAccess	precinct -> cblks . dec		572436	0					
ANR	573030	PtrMemberAccess	precinct -> cblks		572436	0					
ANR	573031	Identifier	precinct		572436	0					
ANR	573032	Identifier	cblks		572436	1					
ANR	573033	Identifier	dec		572436	1					
ANR	573034	Identifier	NULL		572436	1					
ANR	573035	ReturnType	void		572436	1					
ANR	573036	Identifier	t1_decode_cblks		572436	2					
ANR	573037	ParameterList	"opj_t1_t * t1 , opj_tcd_tilecomp_t * tilec , opj_tccp_t * tccp"		572436	3					
ANR	573038	Parameter	opj_t1_t * t1	1538:4:46072:46083	572436	0	True				
ANR	573039	ParameterType	opj_t1_t *		572436	0					
ANR	573040	Identifier	t1		572436	1					
ANR	573041	Parameter	opj_tcd_tilecomp_t * tilec	1539:4:46090:46114	572436	1	True				
ANR	573042	ParameterType	opj_tcd_tilecomp_t *		572436	0					
ANR	573043	Identifier	tilec		572436	1					
ANR	573044	Parameter	opj_tccp_t * tccp	1540:4:46121:46136	572436	2	True				
ANR	573045	ParameterType	opj_tccp_t *		572436	0					
ANR	573046	Identifier	tccp		572436	1					
ANR	573047	CFGEntryNode	ENTRY		572436		True				
ANR	573048	CFGExitNode	EXIT		572436		True				
ANR	573049	Symbol	cblk_h		572436						
ANR	573050	Symbol	cblk -> x0		572436						
ANR	573051	Symbol	precinct -> ch		572436						
ANR	573052	Symbol	t1 -> w		572436						
ANR	573053	Symbol	pres		572436						
ANR	573054	Symbol	cblk -> data		572436						
ANR	573055	Symbol	pres -> x0		572436						
ANR	573056	Symbol	pres -> x1		572436						
ANR	573057	Symbol	tilec -> data		572436						
ANR	573058	Symbol	* tilec		572436						
ANR	573059	Symbol	* cblk_w		572436						
ANR	573060	Symbol	* precinct		572436						
ANR	573061	Symbol	precinct -> cw		572436						
ANR	573062	Symbol	cblk_w		572436						
ANR	573063	Symbol	band -> y0		572436						
ANR	573064	Symbol	tmp		572436						
ANR	573065	Symbol	resno		572436						
ANR	573066	Symbol	tiledp2		572436						
ANR	573067	Symbol	band -> stepsize		572436						
ANR	573068	Symbol	band		572436						
ANR	573069	Symbol	* datap		572436						
ANR	573070	Symbol	cblk -> y0		572436						
ANR	573071	Symbol	val		572436						
ANR	573072	Symbol	res		572436						
ANR	573073	Symbol	NULL		572436						
ANR	573074	Symbol	pres -> y0		572436						
ANR	573075	Symbol	pres -> y1		572436						
ANR	573076	Symbol	res -> ph		572436						
ANR	573077	Symbol	datap		572436						
ANR	573078	Symbol	tccp		572436						
ANR	573079	Symbol	tilec -> x0		572436						
ANR	573080	Symbol	tilec -> x1		572436						
ANR	573081	Symbol	cblk		572436						
ANR	573082	Symbol	band -> x0		572436						
ANR	573083	Symbol	tilec -> numresolutions		572436						
ANR	573084	Symbol	res -> pw		572436						
ANR	573085	Symbol	t1		572436						
ANR	573086	Symbol	band -> precincts		572436						
ANR	573087	Symbol	* tiledp2		572436						
ANR	573088	Symbol	* pres		572436						
ANR	573089	Symbol	* cblk		572436						
ANR	573090	Symbol	res -> bands		572436						
ANR	573091	Symbol	tile_w		572436						
ANR	573092	Symbol	* res		572436						
ANR	573093	Symbol	tccp -> qmfbid		572436						
ANR	573094	Symbol	precinct -> cblks . dec		572436						
ANR	573095	Symbol	mag		572436						
ANR	573096	Symbol	tccp -> roishift		572436						
ANR	573097	Symbol	* tiledp		572436						
ANR	573098	Symbol	tiledp		572436						
ANR	573099	Symbol	cblkno		572436						
ANR	573100	Symbol	precinct -> cblks		572436						
ANR	573101	Symbol	band -> bandno		572436						
ANR	573102	Symbol	tccp -> cblksty		572436						
ANR	573103	Symbol	thresh		572436						
ANR	573104	Symbol	* t1		572436						
ANR	573105	Symbol	tilec		572436						
ANR	573106	Symbol	i		572436						
ANR	573107	Symbol	j		572436						
ANR	573108	Symbol	t1 -> data		572436						
ANR	573109	Symbol	precinct		572436						
ANR	573110	Symbol	bandno		572436						
ANR	573111	Symbol	* i		572436						
ANR	573112	Symbol	abs		572436						
ANR	573113	Symbol	cblk -> segs		572436						
ANR	573114	Symbol	tilec -> resolutions		572436						
ANR	573115	Symbol	t1 -> h		572436						
ANR	573116	Symbol	* j		572436						
ANR	573117	Symbol	precno		572436						
ANR	573118	Symbol	* tccp		572436						
ANR	573119	Symbol	* band		572436						
ANR	573120	Symbol	x		572436						
ANR	573121	Symbol	res -> numbands		572436						
ANR	573122	Symbol	y		572436						
ANR	573123	Symbol	* tile_w		572436						
