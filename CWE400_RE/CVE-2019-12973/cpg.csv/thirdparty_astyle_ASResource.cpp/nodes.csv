command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	669709	File	data/converged/CVE-2019-12973_openjpeg/thirdparty_astyle_ASResource.cpp								
ANR	669710	DeclStmt									
ANR	669711	Decl							const string	const string	ASResource :: _AS_EXCEPT
ANR	669712	DeclStmt									
ANR	669713	Decl							const string	const string	ASResource :: _AS_FINALLY
ANR	669714	DeclStmt									
ANR	669715	Decl							const string	const string	ASResource :: _AS_TRY
ANR	669716	DeclStmt									
ANR	669717	Decl							const string	const string	ASResource :: AS_ADD
ANR	669718	DeclStmt									
ANR	669719	Decl							const string	const string	ASResource :: AS_AUTO
ANR	669720	DeclStmt									
ANR	669721	Decl							const string	const string	ASResource :: AS_AUTORELEASEPOOL
ANR	669722	DeclStmt									
ANR	669723	Decl							const string	const string	ASResource :: AS_CASE
ANR	669724	DeclStmt									
ANR	669725	Decl							const string	const string	ASResource :: AS_CATCH
ANR	669726	DeclStmt									
ANR	669727	Decl							const string	const string	ASResource :: AS_CLASS
ANR	669728	DeclStmt									
ANR	669729	Decl							const string	const string	ASResource :: AS_CONST
ANR	669730	DeclStmt									
ANR	669731	Decl							const string	const string	ASResource :: AS_CONST_CAST
ANR	669732	DeclStmt									
ANR	669733	Decl							const string	const string	ASResource :: AS_DEFAULT
ANR	669734	DeclStmt									
ANR	669735	Decl							const string	const string	ASResource :: AS_DELEGATE
ANR	669736	DeclStmt									
ANR	669737	Decl							const string	const string	ASResource :: AS_DELETE
ANR	669738	DeclStmt									
ANR	669739	Decl							const string	const string	ASResource :: AS_DO
ANR	669740	DeclStmt									
ANR	669741	Decl							const string	const string	ASResource :: AS_DYNAMIC_CAST
ANR	669742	DeclStmt									
ANR	669743	Decl							const string	const string	ASResource :: AS_ELSE
ANR	669744	DeclStmt									
ANR	669745	Decl							const string	const string	ASResource :: AS_END
ANR	669746	DeclStmt									
ANR	669747	Decl							const string	const string	ASResource :: AS_ENUM
ANR	669748	DeclStmt									
ANR	669749	Decl							const string	const string	ASResource :: AS_EXTERN
ANR	669750	DeclStmt									
ANR	669751	Decl							const string	const string	ASResource :: AS_FINALLY
ANR	669752	DeclStmt									
ANR	669753	Decl							const string	const string	ASResource :: AS_FIXED
ANR	669754	DeclStmt									
ANR	669755	Decl							const string	const string	ASResource :: AS_FOR
ANR	669756	DeclStmt									
ANR	669757	Decl							const string	const string	ASResource :: AS_FOREACH
ANR	669758	DeclStmt									
ANR	669759	Decl							const string	const string	ASResource :: AS_FOREVER
ANR	669760	DeclStmt									
ANR	669761	Decl							const string	const string	ASResource :: AS_GET
ANR	669762	DeclStmt									
ANR	669763	Decl							const string	const string	ASResource :: AS_IF
ANR	669764	DeclStmt									
ANR	669765	Decl							const string	const string	ASResource :: AS_INTERFACE
ANR	669766	DeclStmt									
ANR	669767	Decl							const string	const string	ASResource :: AS_INTERRUPT
ANR	669768	DeclStmt									
ANR	669769	Decl							const string	const string	ASResource :: AS_LET
ANR	669770	DeclStmt									
ANR	669771	Decl							const string	const string	ASResource :: AS_LOCK
ANR	669772	DeclStmt									
ANR	669773	Decl							const string	const string	ASResource :: AS_MODULE
ANR	669774	DeclStmt									
ANR	669775	Decl							const string	const string	ASResource :: AS_NAMESPACE
ANR	669776	DeclStmt									
ANR	669777	Decl							const string	const string	ASResource :: AS_NEW
ANR	669778	DeclStmt									
ANR	669779	Decl							const string	const string	ASResource :: AS_NOEXCEPT
ANR	669780	DeclStmt									
ANR	669781	Decl							const string	const string	ASResource :: AS_NS_DURING
ANR	669782	DeclStmt									
ANR	669783	Decl							const string	const string	ASResource :: AS_NS_HANDLER
ANR	669784	DeclStmt									
ANR	669785	Decl							const string	const string	ASResource :: AS_OPERATOR
ANR	669786	DeclStmt									
ANR	669787	Decl							const string	const string	ASResource :: AS_OVERRIDE
ANR	669788	DeclStmt									
ANR	669789	Decl							const string	const string	ASResource :: AS_PRIVATE
ANR	669790	DeclStmt									
ANR	669791	Decl							const string	const string	ASResource :: AS_PROTECTED
ANR	669792	DeclStmt									
ANR	669793	Decl							const string	const string	ASResource :: AS_PUBLIC
ANR	669794	DeclStmt									
ANR	669795	Decl							const string	const string	ASResource :: AS_QFOREACH
ANR	669796	DeclStmt									
ANR	669797	Decl							const string	const string	ASResource :: AS_QFOREVER
ANR	669798	DeclStmt									
ANR	669799	Decl							const string	const string	ASResource :: AS_REINTERPRET_CAST
ANR	669800	DeclStmt									
ANR	669801	Decl							const string	const string	ASResource :: AS_REMOVE
ANR	669802	DeclStmt									
ANR	669803	Decl							const string	const string	ASResource :: AS_SEALED
ANR	669804	DeclStmt									
ANR	669805	Decl							const string	const string	ASResource :: AS_SELECTOR
ANR	669806	DeclStmt									
ANR	669807	Decl							const string	const string	ASResource :: AS_SET
ANR	669808	DeclStmt									
ANR	669809	Decl							const string	const string	ASResource :: AS_STATIC
ANR	669810	DeclStmt									
ANR	669811	Decl							const string	const string	ASResource :: AS_STATIC_CAST
ANR	669812	DeclStmt									
ANR	669813	Decl							const string	const string	ASResource :: AS_STRUCT
ANR	669814	DeclStmt									
ANR	669815	Decl							const string	const string	ASResource :: AS_SWITCH
ANR	669816	DeclStmt									
ANR	669817	Decl							const string	const string	ASResource :: AS_SYNCHRONIZED
ANR	669818	DeclStmt									
ANR	669819	Decl							const string	const string	ASResource :: AS_TEMPLATE
ANR	669820	DeclStmt									
ANR	669821	Decl							const string	const string	ASResource :: AS_THROW
ANR	669822	DeclStmt									
ANR	669823	Decl							const string	const string	ASResource :: AS_THROWS
ANR	669824	DeclStmt									
ANR	669825	Decl							const string	const string	ASResource :: AS_TRY
ANR	669826	DeclStmt									
ANR	669827	Decl							const string	const string	ASResource :: AS_UNCHECKED
ANR	669828	DeclStmt									
ANR	669829	Decl							const string	const string	ASResource :: AS_UNION
ANR	669830	DeclStmt									
ANR	669831	Decl							const string	const string	ASResource :: AS_UNSAFE
ANR	669832	DeclStmt									
ANR	669833	Decl							const string	const string	ASResource :: AS_USING
ANR	669834	DeclStmt									
ANR	669835	Decl							const string	const string	ASResource :: AS_VOLATILE
ANR	669836	DeclStmt									
ANR	669837	Decl							const string	const string	ASResource :: AS_WHERE
ANR	669838	DeclStmt									
ANR	669839	Decl							const string	const string	ASResource :: AS_WHILE
ANR	669840	DeclStmt									
ANR	669841	Decl							const string	const string	ASResource :: AS_ASM
ANR	669842	DeclStmt									
ANR	669843	Decl							const string	const string	ASResource :: AS__ASM__
ANR	669844	DeclStmt									
ANR	669845	Decl							const string	const string	ASResource :: AS_MS_ASM
ANR	669846	DeclStmt									
ANR	669847	Decl							const string	const string	ASResource :: AS_MS__ASM
ANR	669848	DeclStmt									
ANR	669849	Decl							const string	const string	ASResource :: AS_BAR_DEFINE
ANR	669850	DeclStmt									
ANR	669851	Decl							const string	const string	ASResource :: AS_BAR_INCLUDE
ANR	669852	DeclStmt									
ANR	669853	Decl							const string	const string	ASResource :: AS_BAR_IF
ANR	669854	DeclStmt									
ANR	669855	Decl							const string	const string	ASResource :: AS_BAR_EL
ANR	669856	DeclStmt									
ANR	669857	Decl							const string	const string	ASResource :: AS_BAR_ENDIF
ANR	669858	DeclStmt									
ANR	669859	Decl							const string	const string	ASResource :: AS_OPEN_BRACE
ANR	669860	DeclStmt									
ANR	669861	Decl							const string	const string	ASResource :: AS_CLOSE_BRACE
ANR	669862	DeclStmt									
ANR	669863	Decl							const string	const string	ASResource :: AS_OPEN_LINE_COMMENT
ANR	669864	DeclStmt									
ANR	669865	Decl							const string	const string	ASResource :: AS_OPEN_COMMENT
ANR	669866	DeclStmt									
ANR	669867	Decl							const string	const string	ASResource :: AS_CLOSE_COMMENT
ANR	669868	DeclStmt									
ANR	669869	Decl							const string	const string	ASResource :: AS_ASSIGN
ANR	669870	DeclStmt									
ANR	669871	Decl							const string	const string	ASResource :: AS_PLUS_ASSIGN
ANR	669872	DeclStmt									
ANR	669873	Decl							const string	const string	ASResource :: AS_MINUS_ASSIGN
ANR	669874	DeclStmt									
ANR	669875	Decl							const string	const string	ASResource :: AS_MULT_ASSIGN
ANR	669876	DeclStmt									
ANR	669877	Decl							const string	const string	ASResource :: AS_DIV_ASSIGN
ANR	669878	DeclStmt									
ANR	669879	Decl							const string	const string	ASResource :: AS_MOD_ASSIGN
ANR	669880	DeclStmt									
ANR	669881	Decl							const string	const string	ASResource :: AS_OR_ASSIGN
ANR	669882	DeclStmt									
ANR	669883	Decl							const string	const string	ASResource :: AS_AND_ASSIGN
ANR	669884	DeclStmt									
ANR	669885	Decl							const string	const string	ASResource :: AS_XOR_ASSIGN
ANR	669886	DeclStmt									
ANR	669887	Decl							const string	const string	ASResource :: AS_GR_GR_ASSIGN
ANR	669888	DeclStmt									
ANR	669889	Decl							const string	const string	ASResource :: AS_LS_LS_ASSIGN
ANR	669890	DeclStmt									
ANR	669891	Decl							const string	const string	ASResource :: AS_GR_GR_GR_ASSIGN
ANR	669892	DeclStmt									
ANR	669893	Decl							const string	const string	ASResource :: AS_LS_LS_LS_ASSIGN
ANR	669894	DeclStmt									
ANR	669895	Decl							const string	const string	ASResource :: AS_GCC_MIN_ASSIGN
ANR	669896	DeclStmt									
ANR	669897	Decl							const string	const string	ASResource :: AS_GCC_MAX_ASSIGN
ANR	669898	DeclStmt									
ANR	669899	Decl							const string	const string	ASResource :: AS_RETURN
ANR	669900	DeclStmt									
ANR	669901	Decl							const string	const string	ASResource :: AS_CIN
ANR	669902	DeclStmt									
ANR	669903	Decl							const string	const string	ASResource :: AS_COUT
ANR	669904	DeclStmt									
ANR	669905	Decl							const string	const string	ASResource :: AS_CERR
ANR	669906	DeclStmt									
ANR	669907	Decl							const string	const string	ASResource :: AS_EQUAL
ANR	669908	DeclStmt									
ANR	669909	Decl							const string	const string	ASResource :: AS_PLUS_PLUS
ANR	669910	DeclStmt									
ANR	669911	Decl							const string	const string	ASResource :: AS_MINUS_MINUS
ANR	669912	DeclStmt									
ANR	669913	Decl							const string	const string	ASResource :: AS_NOT_EQUAL
ANR	669914	DeclStmt									
ANR	669915	Decl							const string	const string	ASResource :: AS_GR_EQUAL
ANR	669916	DeclStmt									
ANR	669917	Decl							const string	const string	ASResource :: AS_GR_GR
ANR	669918	DeclStmt									
ANR	669919	Decl							const string	const string	ASResource :: AS_GR_GR_GR
ANR	669920	DeclStmt									
ANR	669921	Decl							const string	const string	ASResource :: AS_LS_EQUAL
ANR	669922	DeclStmt									
ANR	669923	Decl							const string	const string	ASResource :: AS_LS_LS
ANR	669924	DeclStmt									
ANR	669925	Decl							const string	const string	ASResource :: AS_LS_LS_LS
ANR	669926	DeclStmt									
ANR	669927	Decl							const string	const string	ASResource :: AS_QUESTION_QUESTION
ANR	669928	DeclStmt									
ANR	669929	Decl							const string	const string	ASResource :: AS_LAMBDA
ANR	669930	DeclStmt									
ANR	669931	Decl							const string	const string	ASResource :: AS_ARROW
ANR	669932	DeclStmt									
ANR	669933	Decl							const string	const string	ASResource :: AS_AND
ANR	669934	DeclStmt									
ANR	669935	Decl							const string	const string	ASResource :: AS_OR
ANR	669936	DeclStmt									
ANR	669937	Decl							const string	const string	ASResource :: AS_SCOPE_RESOLUTION
ANR	669938	DeclStmt									
ANR	669939	Decl							const string	const string	ASResource :: AS_PLUS
ANR	669940	DeclStmt									
ANR	669941	Decl							const string	const string	ASResource :: AS_MINUS
ANR	669942	DeclStmt									
ANR	669943	Decl							const string	const string	ASResource :: AS_MULT
ANR	669944	DeclStmt									
ANR	669945	Decl							const string	const string	ASResource :: AS_DIV
ANR	669946	DeclStmt									
ANR	669947	Decl							const string	const string	ASResource :: AS_MOD
ANR	669948	DeclStmt									
ANR	669949	Decl							const string	const string	ASResource :: AS_GR
ANR	669950	DeclStmt									
ANR	669951	Decl							const string	const string	ASResource :: AS_LS
ANR	669952	DeclStmt									
ANR	669953	Decl							const string	const string	ASResource :: AS_NOT
ANR	669954	DeclStmt									
ANR	669955	Decl							const string	const string	ASResource :: AS_BIT_OR
ANR	669956	DeclStmt									
ANR	669957	Decl							const string	const string	ASResource :: AS_BIT_AND
ANR	669958	DeclStmt									
ANR	669959	Decl							const string	const string	ASResource :: AS_BIT_NOT
ANR	669960	DeclStmt									
ANR	669961	Decl							const string	const string	ASResource :: AS_BIT_XOR
ANR	669962	DeclStmt									
ANR	669963	Decl							const string	const string	ASResource :: AS_QUESTION
ANR	669964	DeclStmt									
ANR	669965	Decl							const string	const string	ASResource :: AS_COLON
ANR	669966	DeclStmt									
ANR	669967	Decl							const string	const string	ASResource :: AS_COMMA
ANR	669968	DeclStmt									
ANR	669969	Decl							const string	const string	ASResource :: AS_SEMICOLON
ANR	669970	Function	sortOnLength	164:0:8037:8130							
ANR	669971	FunctionDef	"sortOnLength (const string * a , const string * b)"		669970	0					
ANR	669972	CompoundStatement		165:0:8089:8130	669970	0					
ANR	669973	ReturnStatement	return ( * a ) . length ( ) > ( * b ) . length ( ) ;	166:1:8092:8128	669970	0	True				
ANR	669974	RelationalExpression	( * a ) . length ( ) > ( * b ) . length ( )		669970	0		>			
ANR	669975	CallExpression	( * a ) . length ( )		669970	0					
ANR	669976	Callee	( * a ) . length		669970	0					
ANR	669977	MemberAccess	( * a ) . length		669970	0					
ANR	669978	UnaryOperationExpression	* a		669970	0					
ANR	669979	UnaryOperator	*		669970	0					
ANR	669980	Identifier	a		669970	1					
ANR	669981	Identifier	length		669970	1					
ANR	669982	ArgumentList			669970	1					
ANR	669983	CallExpression	( * b ) . length ( )		669970	1					
ANR	669984	Callee	( * b ) . length		669970	0					
ANR	669985	MemberAccess	( * b ) . length		669970	0					
ANR	669986	UnaryOperationExpression	* b		669970	0					
ANR	669987	UnaryOperator	*		669970	0					
ANR	669988	Identifier	b		669970	1					
ANR	669989	Identifier	length		669970	1					
ANR	669990	ArgumentList			669970	1					
ANR	669991	ReturnType	bool		669970	1					
ANR	669992	Identifier	sortOnLength		669970	2					
ANR	669993	ParameterList	"const string * a , const string * b"		669970	3					
ANR	669994	Parameter	const string * a	164:18:8055:8069	669970	0	True				
ANR	669995	ParameterType	const string *		669970	0					
ANR	669996	Identifier	a		669970	1					
ANR	669997	Parameter	const string * b	164:35:8072:8086	669970	1	True				
ANR	669998	ParameterType	const string *		669970	0					
ANR	669999	Identifier	b		669970	1					
ANR	670000	CFGEntryNode	ENTRY		669970		True				
ANR	670001	CFGExitNode	EXIT		669970		True				
ANR	670002	Symbol	a		669970						
ANR	670003	Symbol	b		669970						
ANR	670004	Symbol	( * a ) . length		669970						
ANR	670005	Symbol	( * b ) . length		669970						
ANR	670006	Symbol	* a		669970						
ANR	670007	Symbol	* b		669970						
ANR	670008	Function	sortOnName	175:0:8278:8347							
ANR	670009	FunctionDef	"sortOnName (const string * a , const string * b)"		670008	0					
ANR	670010	CompoundStatement		176:0:8328:8347	670008	0					
ANR	670011	ReturnStatement	return * a < * b ;	177:1:8331:8345	670008	0	True				
ANR	670012	RelationalExpression	* a < * b		670008	0		<			
ANR	670013	UnaryOperationExpression	* a		670008	0					
ANR	670014	UnaryOperator	*		670008	0					
ANR	670015	Identifier	a		670008	1					
ANR	670016	UnaryOperationExpression	* b		670008	1					
ANR	670017	UnaryOperator	*		670008	0					
ANR	670018	Identifier	b		670008	1					
ANR	670019	ReturnType	bool		670008	1					
ANR	670020	Identifier	sortOnName		670008	2					
ANR	670021	ParameterList	"const string * a , const string * b"		670008	3					
ANR	670022	Parameter	const string * a	175:16:8294:8308	670008	0	True				
ANR	670023	ParameterType	const string *		670008	0					
ANR	670024	Identifier	a		670008	1					
ANR	670025	Parameter	const string * b	175:33:8311:8325	670008	1	True				
ANR	670026	ParameterType	const string *		670008	0					
ANR	670027	Identifier	b		670008	1					
ANR	670028	CFGEntryNode	ENTRY		670008		True				
ANR	670029	CFGExitNode	EXIT		670008		True				
ANR	670030	Symbol	a		670008						
ANR	670031	Symbol	b		670008						
ANR	670032	Symbol	* a		670008						
ANR	670033	Symbol	* b		670008						
ANR	670034	Function	ASResource :: buildAssignmentOperators	186:0:8530:9603							
ANR	670035	FunctionDef	ASResource :: buildAssignmentOperators (vector < const string * > * assignmentOperators)		670034	0					
ANR	670036	CompoundStatement		187:0:8616:9603	670034	0					
ANR	670037	IdentifierDeclStatement	const size_t elements = 15 ;	188:1:8619:8645	670034	0	True				
ANR	670038	IdentifierDecl	elements = 15		670034	0					
ANR	670039	IdentifierDeclType	const size_t		670034	0					
ANR	670040	Identifier	elements		670034	1					
ANR	670041	AssignmentExpression	elements = 15		670034	2		=			
ANR	670042	Identifier	elements		670034	0					
ANR	670043	PrimaryExpression	15		670034	1					
ANR	670044	Statement	static	189:1:8648:8653	670034	1	True				
ANR	670045	IdentifierDeclStatement	bool reserved = false ;	189:8:8655:8676	670034	2	True				
ANR	670046	IdentifierDecl	reserved = false		670034	0					
ANR	670047	IdentifierDeclType	bool		670034	0					
ANR	670048	Identifier	reserved		670034	1					
ANR	670049	AssignmentExpression	reserved = false		670034	2		=			
ANR	670050	Identifier	false		670034	0					
ANR	670051	Identifier	false		670034	1					
ANR	670052	IfStatement	if ( ! reserved )		670034	3					
ANR	670053	Condition	! reserved	190:5:8683:8691	670034	0	True				
ANR	670054	UnaryOperationExpression	! reserved		670034	0					
ANR	670055	UnaryOperator	!		670034	0					
ANR	670056	Identifier	reserved		670034	1					
ANR	670057	CompoundStatement		5:1:78:78	670034	1					
ANR	670058	ExpressionStatement	assignmentOperators -> reserve ( elements )	192:2:8699:8737	670034	0	True				
ANR	670059	CallExpression	assignmentOperators -> reserve ( elements )		670034	0					
ANR	670060	Callee	assignmentOperators -> reserve		670034	0					
ANR	670061	PtrMemberAccess	assignmentOperators -> reserve		670034	0					
ANR	670062	Identifier	assignmentOperators		670034	0					
ANR	670063	Identifier	reserve		670034	1					
ANR	670064	ArgumentList	elements		670034	1					
ANR	670065	Argument	elements		670034	0					
ANR	670066	Identifier	elements		670034	0					
ANR	670067	ExpressionStatement	reserved = true	193:2:8741:8756	670034	1	True				
ANR	670068	AssignmentExpression	reserved = true		670034	0		=			
ANR	670069	Identifier	reserved		670034	0					
ANR	670070	Identifier	true		670034	1					
ANR	670071	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_ASSIGN )	196:1:8763:8808	670034	4	True				
ANR	670072	CallExpression	assignmentOperators -> emplace_back ( & AS_ASSIGN )		670034	0					
ANR	670073	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670074	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670075	Identifier	assignmentOperators		670034	0					
ANR	670076	Identifier	emplace_back		670034	1					
ANR	670077	ArgumentList	& AS_ASSIGN		670034	1					
ANR	670078	Argument	& AS_ASSIGN		670034	0					
ANR	670079	UnaryOperationExpression	& AS_ASSIGN		670034	0					
ANR	670080	UnaryOperator	&		670034	0					
ANR	670081	Identifier	AS_ASSIGN		670034	1					
ANR	670082	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_PLUS_ASSIGN )	197:1:8811:8861	670034	5	True				
ANR	670083	CallExpression	assignmentOperators -> emplace_back ( & AS_PLUS_ASSIGN )		670034	0					
ANR	670084	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670085	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670086	Identifier	assignmentOperators		670034	0					
ANR	670087	Identifier	emplace_back		670034	1					
ANR	670088	ArgumentList	& AS_PLUS_ASSIGN		670034	1					
ANR	670089	Argument	& AS_PLUS_ASSIGN		670034	0					
ANR	670090	UnaryOperationExpression	& AS_PLUS_ASSIGN		670034	0					
ANR	670091	UnaryOperator	&		670034	0					
ANR	670092	Identifier	AS_PLUS_ASSIGN		670034	1					
ANR	670093	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_MINUS_ASSIGN )	198:1:8864:8915	670034	6	True				
ANR	670094	CallExpression	assignmentOperators -> emplace_back ( & AS_MINUS_ASSIGN )		670034	0					
ANR	670095	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670096	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670097	Identifier	assignmentOperators		670034	0					
ANR	670098	Identifier	emplace_back		670034	1					
ANR	670099	ArgumentList	& AS_MINUS_ASSIGN		670034	1					
ANR	670100	Argument	& AS_MINUS_ASSIGN		670034	0					
ANR	670101	UnaryOperationExpression	& AS_MINUS_ASSIGN		670034	0					
ANR	670102	UnaryOperator	&		670034	0					
ANR	670103	Identifier	AS_MINUS_ASSIGN		670034	1					
ANR	670104	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_MULT_ASSIGN )	199:1:8918:8968	670034	7	True				
ANR	670105	CallExpression	assignmentOperators -> emplace_back ( & AS_MULT_ASSIGN )		670034	0					
ANR	670106	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670107	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670108	Identifier	assignmentOperators		670034	0					
ANR	670109	Identifier	emplace_back		670034	1					
ANR	670110	ArgumentList	& AS_MULT_ASSIGN		670034	1					
ANR	670111	Argument	& AS_MULT_ASSIGN		670034	0					
ANR	670112	UnaryOperationExpression	& AS_MULT_ASSIGN		670034	0					
ANR	670113	UnaryOperator	&		670034	0					
ANR	670114	Identifier	AS_MULT_ASSIGN		670034	1					
ANR	670115	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_DIV_ASSIGN )	200:1:8971:9020	670034	8	True				
ANR	670116	CallExpression	assignmentOperators -> emplace_back ( & AS_DIV_ASSIGN )		670034	0					
ANR	670117	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670118	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670119	Identifier	assignmentOperators		670034	0					
ANR	670120	Identifier	emplace_back		670034	1					
ANR	670121	ArgumentList	& AS_DIV_ASSIGN		670034	1					
ANR	670122	Argument	& AS_DIV_ASSIGN		670034	0					
ANR	670123	UnaryOperationExpression	& AS_DIV_ASSIGN		670034	0					
ANR	670124	UnaryOperator	&		670034	0					
ANR	670125	Identifier	AS_DIV_ASSIGN		670034	1					
ANR	670126	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_MOD_ASSIGN )	201:1:9023:9072	670034	9	True				
ANR	670127	CallExpression	assignmentOperators -> emplace_back ( & AS_MOD_ASSIGN )		670034	0					
ANR	670128	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670129	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670130	Identifier	assignmentOperators		670034	0					
ANR	670131	Identifier	emplace_back		670034	1					
ANR	670132	ArgumentList	& AS_MOD_ASSIGN		670034	1					
ANR	670133	Argument	& AS_MOD_ASSIGN		670034	0					
ANR	670134	UnaryOperationExpression	& AS_MOD_ASSIGN		670034	0					
ANR	670135	UnaryOperator	&		670034	0					
ANR	670136	Identifier	AS_MOD_ASSIGN		670034	1					
ANR	670137	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_OR_ASSIGN )	202:1:9075:9123	670034	10	True				
ANR	670138	CallExpression	assignmentOperators -> emplace_back ( & AS_OR_ASSIGN )		670034	0					
ANR	670139	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670140	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670141	Identifier	assignmentOperators		670034	0					
ANR	670142	Identifier	emplace_back		670034	1					
ANR	670143	ArgumentList	& AS_OR_ASSIGN		670034	1					
ANR	670144	Argument	& AS_OR_ASSIGN		670034	0					
ANR	670145	UnaryOperationExpression	& AS_OR_ASSIGN		670034	0					
ANR	670146	UnaryOperator	&		670034	0					
ANR	670147	Identifier	AS_OR_ASSIGN		670034	1					
ANR	670148	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_AND_ASSIGN )	203:1:9126:9175	670034	11	True				
ANR	670149	CallExpression	assignmentOperators -> emplace_back ( & AS_AND_ASSIGN )		670034	0					
ANR	670150	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670151	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670152	Identifier	assignmentOperators		670034	0					
ANR	670153	Identifier	emplace_back		670034	1					
ANR	670154	ArgumentList	& AS_AND_ASSIGN		670034	1					
ANR	670155	Argument	& AS_AND_ASSIGN		670034	0					
ANR	670156	UnaryOperationExpression	& AS_AND_ASSIGN		670034	0					
ANR	670157	UnaryOperator	&		670034	0					
ANR	670158	Identifier	AS_AND_ASSIGN		670034	1					
ANR	670159	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_XOR_ASSIGN )	204:1:9178:9227	670034	12	True				
ANR	670160	CallExpression	assignmentOperators -> emplace_back ( & AS_XOR_ASSIGN )		670034	0					
ANR	670161	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670162	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670163	Identifier	assignmentOperators		670034	0					
ANR	670164	Identifier	emplace_back		670034	1					
ANR	670165	ArgumentList	& AS_XOR_ASSIGN		670034	1					
ANR	670166	Argument	& AS_XOR_ASSIGN		670034	0					
ANR	670167	UnaryOperationExpression	& AS_XOR_ASSIGN		670034	0					
ANR	670168	UnaryOperator	&		670034	0					
ANR	670169	Identifier	AS_XOR_ASSIGN		670034	1					
ANR	670170	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_GR_GR_GR_ASSIGN )	207:1:9240:9294	670034	13	True				
ANR	670171	CallExpression	assignmentOperators -> emplace_back ( & AS_GR_GR_GR_ASSIGN )		670034	0					
ANR	670172	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670173	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670174	Identifier	assignmentOperators		670034	0					
ANR	670175	Identifier	emplace_back		670034	1					
ANR	670176	ArgumentList	& AS_GR_GR_GR_ASSIGN		670034	1					
ANR	670177	Argument	& AS_GR_GR_GR_ASSIGN		670034	0					
ANR	670178	UnaryOperationExpression	& AS_GR_GR_GR_ASSIGN		670034	0					
ANR	670179	UnaryOperator	&		670034	0					
ANR	670180	Identifier	AS_GR_GR_GR_ASSIGN		670034	1					
ANR	670181	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_GR_GR_ASSIGN )	208:1:9297:9348	670034	14	True				
ANR	670182	CallExpression	assignmentOperators -> emplace_back ( & AS_GR_GR_ASSIGN )		670034	0					
ANR	670183	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670184	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670185	Identifier	assignmentOperators		670034	0					
ANR	670186	Identifier	emplace_back		670034	1					
ANR	670187	ArgumentList	& AS_GR_GR_ASSIGN		670034	1					
ANR	670188	Argument	& AS_GR_GR_ASSIGN		670034	0					
ANR	670189	UnaryOperationExpression	& AS_GR_GR_ASSIGN		670034	0					
ANR	670190	UnaryOperator	&		670034	0					
ANR	670191	Identifier	AS_GR_GR_ASSIGN		670034	1					
ANR	670192	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_LS_LS_ASSIGN )	209:1:9351:9402	670034	15	True				
ANR	670193	CallExpression	assignmentOperators -> emplace_back ( & AS_LS_LS_ASSIGN )		670034	0					
ANR	670194	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670195	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670196	Identifier	assignmentOperators		670034	0					
ANR	670197	Identifier	emplace_back		670034	1					
ANR	670198	ArgumentList	& AS_LS_LS_ASSIGN		670034	1					
ANR	670199	Argument	& AS_LS_LS_ASSIGN		670034	0					
ANR	670200	UnaryOperationExpression	& AS_LS_LS_ASSIGN		670034	0					
ANR	670201	UnaryOperator	&		670034	0					
ANR	670202	Identifier	AS_LS_LS_ASSIGN		670034	1					
ANR	670203	ExpressionStatement	assignmentOperators -> emplace_back ( & AS_LS_LS_LS_ASSIGN )	212:1:9418:9472	670034	16	True				
ANR	670204	CallExpression	assignmentOperators -> emplace_back ( & AS_LS_LS_LS_ASSIGN )		670034	0					
ANR	670205	Callee	assignmentOperators -> emplace_back		670034	0					
ANR	670206	PtrMemberAccess	assignmentOperators -> emplace_back		670034	0					
ANR	670207	Identifier	assignmentOperators		670034	0					
ANR	670208	Identifier	emplace_back		670034	1					
ANR	670209	ArgumentList	& AS_LS_LS_LS_ASSIGN		670034	1					
ANR	670210	Argument	& AS_LS_LS_LS_ASSIGN		670034	0					
ANR	670211	UnaryOperationExpression	& AS_LS_LS_LS_ASSIGN		670034	0					
ANR	670212	UnaryOperator	&		670034	0					
ANR	670213	Identifier	AS_LS_LS_LS_ASSIGN		670034	1					
ANR	670214	ExpressionStatement	assert ( assignmentOperators -> size ( ) < elements )	214:1:9476:9522	670034	17	True				
ANR	670215	CallExpression	assert ( assignmentOperators -> size ( ) < elements )		670034	0					
ANR	670216	Callee	assert		670034	0					
ANR	670217	Identifier	assert		670034	0					
ANR	670218	ArgumentList	assignmentOperators -> size ( ) < elements		670034	1					
ANR	670219	Argument	assignmentOperators -> size ( ) < elements		670034	0					
ANR	670220	RelationalExpression	assignmentOperators -> size ( ) < elements		670034	0		<			
ANR	670221	CallExpression	assignmentOperators -> size ( )		670034	0					
ANR	670222	Callee	assignmentOperators -> size		670034	0					
ANR	670223	PtrMemberAccess	assignmentOperators -> size		670034	0					
ANR	670224	Identifier	assignmentOperators		670034	0					
ANR	670225	Identifier	size		670034	1					
ANR	670226	ArgumentList			670034	1					
ANR	670227	Identifier	elements		670034	1					
ANR	670228	ExpressionStatement	"sort ( assignmentOperators -> begin ( ) , assignmentOperators -> end ( ) , sortOnLength )"	215:1:9525:9601	670034	18	True				
ANR	670229	CallExpression	"sort ( assignmentOperators -> begin ( ) , assignmentOperators -> end ( ) , sortOnLength )"		670034	0					
ANR	670230	Callee	sort		670034	0					
ANR	670231	Identifier	sort		670034	0					
ANR	670232	ArgumentList	assignmentOperators -> begin ( )		670034	1					
ANR	670233	Argument	assignmentOperators -> begin ( )		670034	0					
ANR	670234	CallExpression	assignmentOperators -> begin ( )		670034	0					
ANR	670235	Callee	assignmentOperators -> begin		670034	0					
ANR	670236	PtrMemberAccess	assignmentOperators -> begin		670034	0					
ANR	670237	Identifier	assignmentOperators		670034	0					
ANR	670238	Identifier	begin		670034	1					
ANR	670239	ArgumentList			670034	1					
ANR	670240	Argument	assignmentOperators -> end ( )		670034	1					
ANR	670241	CallExpression	assignmentOperators -> end ( )		670034	0					
ANR	670242	Callee	assignmentOperators -> end		670034	0					
ANR	670243	PtrMemberAccess	assignmentOperators -> end		670034	0					
ANR	670244	Identifier	assignmentOperators		670034	0					
ANR	670245	Identifier	end		670034	1					
ANR	670246	ArgumentList			670034	1					
ANR	670247	Argument	sortOnLength		670034	2					
ANR	670248	Identifier	sortOnLength		670034	0					
ANR	670249	ReturnType	void		670034	1					
ANR	670250	Identifier	ASResource :: buildAssignmentOperators		670034	2					
ANR	670251	ParameterList	vector < const string * > * assignmentOperators		670034	3					
ANR	670252	Parameter	vector < const string * > * assignmentOperators	186:42:8572:8613	670034	0	True				
ANR	670253	ParameterType	vector < const string * > *		670034	0					
ANR	670254	Identifier	assignmentOperators		670034	1					
ANR	670255	CFGEntryNode	ENTRY		670034		True				
ANR	670256	CFGExitNode	EXIT		670034		True				
ANR	670257	Symbol	& AS_MOD_ASSIGN		670034						
ANR	670258	Symbol	& AS_AND_ASSIGN		670034						
ANR	670259	Symbol	& AS_GR_GR_ASSIGN		670034						
ANR	670260	Symbol	assignmentOperators		670034						
ANR	670261	Symbol	false		670034						
ANR	670262	Symbol	sortOnLength		670034						
ANR	670263	Symbol	assignmentOperators -> size		670034						
ANR	670264	Symbol	assignmentOperators -> begin		670034						
ANR	670265	Symbol	& AS_XOR_ASSIGN		670034						
ANR	670266	Symbol	& AS_LS_LS_LS_ASSIGN		670034						
ANR	670267	Symbol	& AS_MULT_ASSIGN		670034						
ANR	670268	Symbol	& AS_DIV_ASSIGN		670034						
ANR	670269	Symbol	reserved		670034						
ANR	670270	Symbol	& AS_MINUS_ASSIGN		670034						
ANR	670271	Symbol	* assignmentOperators		670034						
ANR	670272	Symbol	elements		670034						
ANR	670273	Symbol	& AS_ASSIGN		670034						
ANR	670274	Symbol	true		670034						
ANR	670275	Symbol	& AS_OR_ASSIGN		670034						
ANR	670276	Symbol	& AS_LS_LS_ASSIGN		670034						
ANR	670277	Symbol	& AS_GR_GR_GR_ASSIGN		670034						
ANR	670278	Symbol	assignmentOperators -> end		670034						
ANR	670279	Symbol	& AS_PLUS_ASSIGN		670034						
ANR	670280	Function	ASResource :: buildCastOperators	224:0:9759:10274							
ANR	670281	FunctionDef	ASResource :: buildCastOperators (vector < const string * > * castOperators)		670280	0					
ANR	670282	CompoundStatement		225:0:9833:10274	670280	0					
ANR	670283	IdentifierDeclStatement	const size_t elements = 5 ;	226:1:9836:9861	670280	0	True				
ANR	670284	IdentifierDecl	elements = 5		670280	0					
ANR	670285	IdentifierDeclType	const size_t		670280	0					
ANR	670286	Identifier	elements		670280	1					
ANR	670287	AssignmentExpression	elements = 5		670280	2		=			
ANR	670288	Identifier	elements		670280	0					
ANR	670289	PrimaryExpression	5		670280	1					
ANR	670290	Statement	static	227:1:9864:9869	670280	1	True				
ANR	670291	IdentifierDeclStatement	bool reserved = false ;	227:8:9871:9892	670280	2	True				
ANR	670292	IdentifierDecl	reserved = false		670280	0					
ANR	670293	IdentifierDeclType	bool		670280	0					
ANR	670294	Identifier	reserved		670280	1					
ANR	670295	AssignmentExpression	reserved = false		670280	2		=			
ANR	670296	Identifier	false		670280	0					
ANR	670297	Identifier	false		670280	1					
ANR	670298	IfStatement	if ( ! reserved )		670280	3					
ANR	670299	Condition	! reserved	228:5:9899:9907	670280	0	True				
ANR	670300	UnaryOperationExpression	! reserved		670280	0					
ANR	670301	UnaryOperator	!		670280	0					
ANR	670302	Identifier	reserved		670280	1					
ANR	670303	CompoundStatement		5:1:77:77	670280	1					
ANR	670304	ExpressionStatement	castOperators -> reserve ( elements )	230:2:9915:9947	670280	0	True				
ANR	670305	CallExpression	castOperators -> reserve ( elements )		670280	0					
ANR	670306	Callee	castOperators -> reserve		670280	0					
ANR	670307	PtrMemberAccess	castOperators -> reserve		670280	0					
ANR	670308	Identifier	castOperators		670280	0					
ANR	670309	Identifier	reserve		670280	1					
ANR	670310	ArgumentList	elements		670280	1					
ANR	670311	Argument	elements		670280	0					
ANR	670312	Identifier	elements		670280	0					
ANR	670313	ExpressionStatement	reserved = true	231:2:9951:9966	670280	1	True				
ANR	670314	AssignmentExpression	reserved = true		670280	0		=			
ANR	670315	Identifier	reserved		670280	0					
ANR	670316	Identifier	true		670280	1					
ANR	670317	ExpressionStatement	castOperators -> emplace_back ( & AS_CONST_CAST )	234:1:9973:10016	670280	4	True				
ANR	670318	CallExpression	castOperators -> emplace_back ( & AS_CONST_CAST )		670280	0					
ANR	670319	Callee	castOperators -> emplace_back		670280	0					
ANR	670320	PtrMemberAccess	castOperators -> emplace_back		670280	0					
ANR	670321	Identifier	castOperators		670280	0					
ANR	670322	Identifier	emplace_back		670280	1					
ANR	670323	ArgumentList	& AS_CONST_CAST		670280	1					
ANR	670324	Argument	& AS_CONST_CAST		670280	0					
ANR	670325	UnaryOperationExpression	& AS_CONST_CAST		670280	0					
ANR	670326	UnaryOperator	&		670280	0					
ANR	670327	Identifier	AS_CONST_CAST		670280	1					
ANR	670328	ExpressionStatement	castOperators -> emplace_back ( & AS_DYNAMIC_CAST )	235:1:10019:10064	670280	5	True				
ANR	670329	CallExpression	castOperators -> emplace_back ( & AS_DYNAMIC_CAST )		670280	0					
ANR	670330	Callee	castOperators -> emplace_back		670280	0					
ANR	670331	PtrMemberAccess	castOperators -> emplace_back		670280	0					
ANR	670332	Identifier	castOperators		670280	0					
ANR	670333	Identifier	emplace_back		670280	1					
ANR	670334	ArgumentList	& AS_DYNAMIC_CAST		670280	1					
ANR	670335	Argument	& AS_DYNAMIC_CAST		670280	0					
ANR	670336	UnaryOperationExpression	& AS_DYNAMIC_CAST		670280	0					
ANR	670337	UnaryOperator	&		670280	0					
ANR	670338	Identifier	AS_DYNAMIC_CAST		670280	1					
ANR	670339	ExpressionStatement	castOperators -> emplace_back ( & AS_REINTERPRET_CAST )	236:1:10067:10116	670280	6	True				
ANR	670340	CallExpression	castOperators -> emplace_back ( & AS_REINTERPRET_CAST )		670280	0					
ANR	670341	Callee	castOperators -> emplace_back		670280	0					
ANR	670342	PtrMemberAccess	castOperators -> emplace_back		670280	0					
ANR	670343	Identifier	castOperators		670280	0					
ANR	670344	Identifier	emplace_back		670280	1					
ANR	670345	ArgumentList	& AS_REINTERPRET_CAST		670280	1					
ANR	670346	Argument	& AS_REINTERPRET_CAST		670280	0					
ANR	670347	UnaryOperationExpression	& AS_REINTERPRET_CAST		670280	0					
ANR	670348	UnaryOperator	&		670280	0					
ANR	670349	Identifier	AS_REINTERPRET_CAST		670280	1					
ANR	670350	ExpressionStatement	castOperators -> emplace_back ( & AS_STATIC_CAST )	237:1:10119:10163	670280	7	True				
ANR	670351	CallExpression	castOperators -> emplace_back ( & AS_STATIC_CAST )		670280	0					
ANR	670352	Callee	castOperators -> emplace_back		670280	0					
ANR	670353	PtrMemberAccess	castOperators -> emplace_back		670280	0					
ANR	670354	Identifier	castOperators		670280	0					
ANR	670355	Identifier	emplace_back		670280	1					
ANR	670356	ArgumentList	& AS_STATIC_CAST		670280	1					
ANR	670357	Argument	& AS_STATIC_CAST		670280	0					
ANR	670358	UnaryOperationExpression	& AS_STATIC_CAST		670280	0					
ANR	670359	UnaryOperator	&		670280	0					
ANR	670360	Identifier	AS_STATIC_CAST		670280	1					
ANR	670361	ExpressionStatement	assert ( castOperators -> size ( ) < elements )	239:1:10167:10207	670280	8	True				
ANR	670362	CallExpression	assert ( castOperators -> size ( ) < elements )		670280	0					
ANR	670363	Callee	assert		670280	0					
ANR	670364	Identifier	assert		670280	0					
ANR	670365	ArgumentList	castOperators -> size ( ) < elements		670280	1					
ANR	670366	Argument	castOperators -> size ( ) < elements		670280	0					
ANR	670367	RelationalExpression	castOperators -> size ( ) < elements		670280	0		<			
ANR	670368	CallExpression	castOperators -> size ( )		670280	0					
ANR	670369	Callee	castOperators -> size		670280	0					
ANR	670370	PtrMemberAccess	castOperators -> size		670280	0					
ANR	670371	Identifier	castOperators		670280	0					
ANR	670372	Identifier	size		670280	1					
ANR	670373	ArgumentList			670280	1					
ANR	670374	Identifier	elements		670280	1					
ANR	670375	ExpressionStatement	"sort ( castOperators -> begin ( ) , castOperators -> end ( ) , sortOnName )"	240:1:10210:10272	670280	9	True				
ANR	670376	CallExpression	"sort ( castOperators -> begin ( ) , castOperators -> end ( ) , sortOnName )"		670280	0					
ANR	670377	Callee	sort		670280	0					
ANR	670378	Identifier	sort		670280	0					
ANR	670379	ArgumentList	castOperators -> begin ( )		670280	1					
ANR	670380	Argument	castOperators -> begin ( )		670280	0					
ANR	670381	CallExpression	castOperators -> begin ( )		670280	0					
ANR	670382	Callee	castOperators -> begin		670280	0					
ANR	670383	PtrMemberAccess	castOperators -> begin		670280	0					
ANR	670384	Identifier	castOperators		670280	0					
ANR	670385	Identifier	begin		670280	1					
ANR	670386	ArgumentList			670280	1					
ANR	670387	Argument	castOperators -> end ( )		670280	1					
ANR	670388	CallExpression	castOperators -> end ( )		670280	0					
ANR	670389	Callee	castOperators -> end		670280	0					
ANR	670390	PtrMemberAccess	castOperators -> end		670280	0					
ANR	670391	Identifier	castOperators		670280	0					
ANR	670392	Identifier	end		670280	1					
ANR	670393	ArgumentList			670280	1					
ANR	670394	Argument	sortOnName		670280	2					
ANR	670395	Identifier	sortOnName		670280	0					
ANR	670396	ReturnType	void		670280	1					
ANR	670397	Identifier	ASResource :: buildCastOperators		670280	2					
ANR	670398	ParameterList	vector < const string * > * castOperators		670280	3					
ANR	670399	Parameter	vector < const string * > * castOperators	224:36:9795:9830	670280	0	True				
ANR	670400	ParameterType	vector < const string * > *		670280	0					
ANR	670401	Identifier	castOperators		670280	1					
ANR	670402	CFGEntryNode	ENTRY		670280		True				
ANR	670403	CFGExitNode	EXIT		670280		True				
ANR	670404	Symbol	& AS_CONST_CAST		670280						
ANR	670405	Symbol	& AS_DYNAMIC_CAST		670280						
ANR	670406	Symbol	false		670280						
ANR	670407	Symbol	castOperators -> end		670280						
ANR	670408	Symbol	sortOnName		670280						
ANR	670409	Symbol	castOperators -> begin		670280						
ANR	670410	Symbol	& AS_REINTERPRET_CAST		670280						
ANR	670411	Symbol	castOperators -> size		670280						
ANR	670412	Symbol	reserved		670280						
ANR	670413	Symbol	elements		670280						
ANR	670414	Symbol	true		670280						
ANR	670415	Symbol	castOperators		670280						
ANR	670416	Symbol	& AS_STATIC_CAST		670280						
ANR	670417	Symbol	* castOperators		670280						
ANR	670418	Function	ASResource :: buildHeaders	249:0:10441:12113							
ANR	670419	FunctionDef	"ASResource :: buildHeaders (vector < const string * > * headers , int fileType , bool beautifier)"		670418	0					
ANR	670420	CompoundStatement		250:0:10534:12113	670418	0					
ANR	670421	IdentifierDeclStatement	const size_t elements = 25 ;	251:1:10537:10563	670418	0	True				
ANR	670422	IdentifierDecl	elements = 25		670418	0					
ANR	670423	IdentifierDeclType	const size_t		670418	0					
ANR	670424	Identifier	elements		670418	1					
ANR	670425	AssignmentExpression	elements = 25		670418	2		=			
ANR	670426	Identifier	elements		670418	0					
ANR	670427	PrimaryExpression	25		670418	1					
ANR	670428	Statement	static	252:1:10566:10571	670418	1	True				
ANR	670429	IdentifierDeclStatement	bool reserved = false ;	252:8:10573:10594	670418	2	True				
ANR	670430	IdentifierDecl	reserved = false		670418	0					
ANR	670431	IdentifierDeclType	bool		670418	0					
ANR	670432	Identifier	reserved		670418	1					
ANR	670433	AssignmentExpression	reserved = false		670418	2		=			
ANR	670434	Identifier	false		670418	0					
ANR	670435	Identifier	false		670418	1					
ANR	670436	IfStatement	if ( ! reserved )		670418	3					
ANR	670437	Condition	! reserved	253:5:10601:10609	670418	0	True				
ANR	670438	UnaryOperationExpression	! reserved		670418	0					
ANR	670439	UnaryOperator	!		670418	0					
ANR	670440	Identifier	reserved		670418	1					
ANR	670441	CompoundStatement		5:1:78:78	670418	1					
ANR	670442	ExpressionStatement	headers -> reserve ( elements )	255:2:10617:10643	670418	0	True				
ANR	670443	CallExpression	headers -> reserve ( elements )		670418	0					
ANR	670444	Callee	headers -> reserve		670418	0					
ANR	670445	PtrMemberAccess	headers -> reserve		670418	0					
ANR	670446	Identifier	headers		670418	0					
ANR	670447	Identifier	reserve		670418	1					
ANR	670448	ArgumentList	elements		670418	1					
ANR	670449	Argument	elements		670418	0					
ANR	670450	Identifier	elements		670418	0					
ANR	670451	ExpressionStatement	reserved = true	256:2:10647:10662	670418	1	True				
ANR	670452	AssignmentExpression	reserved = true		670418	0		=			
ANR	670453	Identifier	reserved		670418	0					
ANR	670454	Identifier	true		670418	1					
ANR	670455	ExpressionStatement	headers -> emplace_back ( & AS_IF )	259:1:10669:10698	670418	4	True				
ANR	670456	CallExpression	headers -> emplace_back ( & AS_IF )		670418	0					
ANR	670457	Callee	headers -> emplace_back		670418	0					
ANR	670458	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670459	Identifier	headers		670418	0					
ANR	670460	Identifier	emplace_back		670418	1					
ANR	670461	ArgumentList	& AS_IF		670418	1					
ANR	670462	Argument	& AS_IF		670418	0					
ANR	670463	UnaryOperationExpression	& AS_IF		670418	0					
ANR	670464	UnaryOperator	&		670418	0					
ANR	670465	Identifier	AS_IF		670418	1					
ANR	670466	ExpressionStatement	headers -> emplace_back ( & AS_ELSE )	260:1:10701:10732	670418	5	True				
ANR	670467	CallExpression	headers -> emplace_back ( & AS_ELSE )		670418	0					
ANR	670468	Callee	headers -> emplace_back		670418	0					
ANR	670469	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670470	Identifier	headers		670418	0					
ANR	670471	Identifier	emplace_back		670418	1					
ANR	670472	ArgumentList	& AS_ELSE		670418	1					
ANR	670473	Argument	& AS_ELSE		670418	0					
ANR	670474	UnaryOperationExpression	& AS_ELSE		670418	0					
ANR	670475	UnaryOperator	&		670418	0					
ANR	670476	Identifier	AS_ELSE		670418	1					
ANR	670477	ExpressionStatement	headers -> emplace_back ( & AS_FOR )	261:1:10735:10765	670418	6	True				
ANR	670478	CallExpression	headers -> emplace_back ( & AS_FOR )		670418	0					
ANR	670479	Callee	headers -> emplace_back		670418	0					
ANR	670480	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670481	Identifier	headers		670418	0					
ANR	670482	Identifier	emplace_back		670418	1					
ANR	670483	ArgumentList	& AS_FOR		670418	1					
ANR	670484	Argument	& AS_FOR		670418	0					
ANR	670485	UnaryOperationExpression	& AS_FOR		670418	0					
ANR	670486	UnaryOperator	&		670418	0					
ANR	670487	Identifier	AS_FOR		670418	1					
ANR	670488	ExpressionStatement	headers -> emplace_back ( & AS_WHILE )	262:1:10768:10800	670418	7	True				
ANR	670489	CallExpression	headers -> emplace_back ( & AS_WHILE )		670418	0					
ANR	670490	Callee	headers -> emplace_back		670418	0					
ANR	670491	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670492	Identifier	headers		670418	0					
ANR	670493	Identifier	emplace_back		670418	1					
ANR	670494	ArgumentList	& AS_WHILE		670418	1					
ANR	670495	Argument	& AS_WHILE		670418	0					
ANR	670496	UnaryOperationExpression	& AS_WHILE		670418	0					
ANR	670497	UnaryOperator	&		670418	0					
ANR	670498	Identifier	AS_WHILE		670418	1					
ANR	670499	ExpressionStatement	headers -> emplace_back ( & AS_DO )	263:1:10803:10832	670418	8	True				
ANR	670500	CallExpression	headers -> emplace_back ( & AS_DO )		670418	0					
ANR	670501	Callee	headers -> emplace_back		670418	0					
ANR	670502	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670503	Identifier	headers		670418	0					
ANR	670504	Identifier	emplace_back		670418	1					
ANR	670505	ArgumentList	& AS_DO		670418	1					
ANR	670506	Argument	& AS_DO		670418	0					
ANR	670507	UnaryOperationExpression	& AS_DO		670418	0					
ANR	670508	UnaryOperator	&		670418	0					
ANR	670509	Identifier	AS_DO		670418	1					
ANR	670510	ExpressionStatement	headers -> emplace_back ( & AS_SWITCH )	264:1:10835:10868	670418	9	True				
ANR	670511	CallExpression	headers -> emplace_back ( & AS_SWITCH )		670418	0					
ANR	670512	Callee	headers -> emplace_back		670418	0					
ANR	670513	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670514	Identifier	headers		670418	0					
ANR	670515	Identifier	emplace_back		670418	1					
ANR	670516	ArgumentList	& AS_SWITCH		670418	1					
ANR	670517	Argument	& AS_SWITCH		670418	0					
ANR	670518	UnaryOperationExpression	& AS_SWITCH		670418	0					
ANR	670519	UnaryOperator	&		670418	0					
ANR	670520	Identifier	AS_SWITCH		670418	1					
ANR	670521	ExpressionStatement	headers -> emplace_back ( & AS_CASE )	265:1:10871:10902	670418	10	True				
ANR	670522	CallExpression	headers -> emplace_back ( & AS_CASE )		670418	0					
ANR	670523	Callee	headers -> emplace_back		670418	0					
ANR	670524	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670525	Identifier	headers		670418	0					
ANR	670526	Identifier	emplace_back		670418	1					
ANR	670527	ArgumentList	& AS_CASE		670418	1					
ANR	670528	Argument	& AS_CASE		670418	0					
ANR	670529	UnaryOperationExpression	& AS_CASE		670418	0					
ANR	670530	UnaryOperator	&		670418	0					
ANR	670531	Identifier	AS_CASE		670418	1					
ANR	670532	ExpressionStatement	headers -> emplace_back ( & AS_DEFAULT )	266:1:10905:10939	670418	11	True				
ANR	670533	CallExpression	headers -> emplace_back ( & AS_DEFAULT )		670418	0					
ANR	670534	Callee	headers -> emplace_back		670418	0					
ANR	670535	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670536	Identifier	headers		670418	0					
ANR	670537	Identifier	emplace_back		670418	1					
ANR	670538	ArgumentList	& AS_DEFAULT		670418	1					
ANR	670539	Argument	& AS_DEFAULT		670418	0					
ANR	670540	UnaryOperationExpression	& AS_DEFAULT		670418	0					
ANR	670541	UnaryOperator	&		670418	0					
ANR	670542	Identifier	AS_DEFAULT		670418	1					
ANR	670543	ExpressionStatement	headers -> emplace_back ( & AS_TRY )	267:1:10942:10972	670418	12	True				
ANR	670544	CallExpression	headers -> emplace_back ( & AS_TRY )		670418	0					
ANR	670545	Callee	headers -> emplace_back		670418	0					
ANR	670546	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670547	Identifier	headers		670418	0					
ANR	670548	Identifier	emplace_back		670418	1					
ANR	670549	ArgumentList	& AS_TRY		670418	1					
ANR	670550	Argument	& AS_TRY		670418	0					
ANR	670551	UnaryOperationExpression	& AS_TRY		670418	0					
ANR	670552	UnaryOperator	&		670418	0					
ANR	670553	Identifier	AS_TRY		670418	1					
ANR	670554	ExpressionStatement	headers -> emplace_back ( & AS_CATCH )	268:1:10975:11007	670418	13	True				
ANR	670555	CallExpression	headers -> emplace_back ( & AS_CATCH )		670418	0					
ANR	670556	Callee	headers -> emplace_back		670418	0					
ANR	670557	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670558	Identifier	headers		670418	0					
ANR	670559	Identifier	emplace_back		670418	1					
ANR	670560	ArgumentList	& AS_CATCH		670418	1					
ANR	670561	Argument	& AS_CATCH		670418	0					
ANR	670562	UnaryOperationExpression	& AS_CATCH		670418	0					
ANR	670563	UnaryOperator	&		670418	0					
ANR	670564	Identifier	AS_CATCH		670418	1					
ANR	670565	ExpressionStatement	headers -> emplace_back ( & AS_QFOREACH )	269:1:11010:11045	670418	14	True				
ANR	670566	CallExpression	headers -> emplace_back ( & AS_QFOREACH )		670418	0					
ANR	670567	Callee	headers -> emplace_back		670418	0					
ANR	670568	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670569	Identifier	headers		670418	0					
ANR	670570	Identifier	emplace_back		670418	1					
ANR	670571	ArgumentList	& AS_QFOREACH		670418	1					
ANR	670572	Argument	& AS_QFOREACH		670418	0					
ANR	670573	UnaryOperationExpression	& AS_QFOREACH		670418	0					
ANR	670574	UnaryOperator	&		670418	0					
ANR	670575	Identifier	AS_QFOREACH		670418	1					
ANR	670576	ExpressionStatement	headers -> emplace_back ( & AS_QFOREVER )	270:1:11055:11090	670418	15	True				
ANR	670577	CallExpression	headers -> emplace_back ( & AS_QFOREVER )		670418	0					
ANR	670578	Callee	headers -> emplace_back		670418	0					
ANR	670579	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670580	Identifier	headers		670418	0					
ANR	670581	Identifier	emplace_back		670418	1					
ANR	670582	ArgumentList	& AS_QFOREVER		670418	1					
ANR	670583	Argument	& AS_QFOREVER		670418	0					
ANR	670584	UnaryOperationExpression	& AS_QFOREVER		670418	0					
ANR	670585	UnaryOperator	&		670418	0					
ANR	670586	Identifier	AS_QFOREVER		670418	1					
ANR	670587	ExpressionStatement	headers -> emplace_back ( & AS_FOREACH )	271:1:11100:11134	670418	16	True				
ANR	670588	CallExpression	headers -> emplace_back ( & AS_FOREACH )		670418	0					
ANR	670589	Callee	headers -> emplace_back		670418	0					
ANR	670590	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670591	Identifier	headers		670418	0					
ANR	670592	Identifier	emplace_back		670418	1					
ANR	670593	ArgumentList	& AS_FOREACH		670418	1					
ANR	670594	Argument	& AS_FOREACH		670418	0					
ANR	670595	UnaryOperationExpression	& AS_FOREACH		670418	0					
ANR	670596	UnaryOperator	&		670418	0					
ANR	670597	Identifier	AS_FOREACH		670418	1					
ANR	670598	ExpressionStatement	headers -> emplace_back ( & AS_FOREVER )	272:1:11149:11183	670418	17	True				
ANR	670599	CallExpression	headers -> emplace_back ( & AS_FOREVER )		670418	0					
ANR	670600	Callee	headers -> emplace_back		670418	0					
ANR	670601	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670602	Identifier	headers		670418	0					
ANR	670603	Identifier	emplace_back		670418	1					
ANR	670604	ArgumentList	& AS_FOREVER		670418	1					
ANR	670605	Argument	& AS_FOREVER		670418	0					
ANR	670606	UnaryOperationExpression	& AS_FOREVER		670418	0					
ANR	670607	UnaryOperator	&		670418	0					
ANR	670608	Identifier	AS_FOREVER		670418	1					
ANR	670609	IfStatement	if ( fileType == C_TYPE )		670418	18					
ANR	670610	Condition	fileType == C_TYPE	274:5:11206:11223	670418	0	True				
ANR	670611	EqualityExpression	fileType == C_TYPE		670418	0		==			
ANR	670612	Identifier	fileType		670418	0					
ANR	670613	Identifier	C_TYPE		670418	1					
ANR	670614	CompoundStatement		26:1:692:692	670418	1					
ANR	670615	ExpressionStatement	headers -> emplace_back ( & _AS_TRY )	276:2:11231:11262	670418	0	True				
ANR	670616	CallExpression	headers -> emplace_back ( & _AS_TRY )		670418	0					
ANR	670617	Callee	headers -> emplace_back		670418	0					
ANR	670618	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670619	Identifier	headers		670418	0					
ANR	670620	Identifier	emplace_back		670418	1					
ANR	670621	ArgumentList	& _AS_TRY		670418	1					
ANR	670622	Argument	& _AS_TRY		670418	0					
ANR	670623	UnaryOperationExpression	& _AS_TRY		670418	0					
ANR	670624	UnaryOperator	&		670418	0					
ANR	670625	Identifier	_AS_TRY		670418	1					
ANR	670626	ExpressionStatement	headers -> emplace_back ( & _AS_FINALLY )	277:2:11276:11311	670418	1	True				
ANR	670627	CallExpression	headers -> emplace_back ( & _AS_FINALLY )		670418	0					
ANR	670628	Callee	headers -> emplace_back		670418	0					
ANR	670629	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670630	Identifier	headers		670418	0					
ANR	670631	Identifier	emplace_back		670418	1					
ANR	670632	ArgumentList	& _AS_FINALLY		670418	1					
ANR	670633	Argument	& _AS_FINALLY		670418	0					
ANR	670634	UnaryOperationExpression	& _AS_FINALLY		670418	0					
ANR	670635	UnaryOperator	&		670418	0					
ANR	670636	Identifier	_AS_FINALLY		670418	1					
ANR	670637	ExpressionStatement	headers -> emplace_back ( & _AS_EXCEPT )	278:2:11328:11362	670418	2	True				
ANR	670638	CallExpression	headers -> emplace_back ( & _AS_EXCEPT )		670418	0					
ANR	670639	Callee	headers -> emplace_back		670418	0					
ANR	670640	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670641	Identifier	headers		670418	0					
ANR	670642	Identifier	emplace_back		670418	1					
ANR	670643	ArgumentList	& _AS_EXCEPT		670418	1					
ANR	670644	Argument	& _AS_EXCEPT		670418	0					
ANR	670645	UnaryOperationExpression	& _AS_EXCEPT		670418	0					
ANR	670646	UnaryOperator	&		670418	0					
ANR	670647	Identifier	_AS_EXCEPT		670418	1					
ANR	670648	IfStatement	if ( fileType == JAVA_TYPE )		670418	19					
ANR	670649	Condition	fileType == JAVA_TYPE	280:5:11384:11404	670418	0	True				
ANR	670650	EqualityExpression	fileType == JAVA_TYPE		670418	0		==			
ANR	670651	Identifier	fileType		670418	0					
ANR	670652	Identifier	JAVA_TYPE		670418	1					
ANR	670653	CompoundStatement		32:1:873:873	670418	1					
ANR	670654	ExpressionStatement	headers -> emplace_back ( & AS_FINALLY )	282:2:11412:11446	670418	0	True				
ANR	670655	CallExpression	headers -> emplace_back ( & AS_FINALLY )		670418	0					
ANR	670656	Callee	headers -> emplace_back		670418	0					
ANR	670657	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670658	Identifier	headers		670418	0					
ANR	670659	Identifier	emplace_back		670418	1					
ANR	670660	ArgumentList	& AS_FINALLY		670418	1					
ANR	670661	Argument	& AS_FINALLY		670418	0					
ANR	670662	UnaryOperationExpression	& AS_FINALLY		670418	0					
ANR	670663	UnaryOperator	&		670418	0					
ANR	670664	Identifier	AS_FINALLY		670418	1					
ANR	670665	ExpressionStatement	headers -> emplace_back ( & AS_SYNCHRONIZED )	283:2:11450:11489	670418	1	True				
ANR	670666	CallExpression	headers -> emplace_back ( & AS_SYNCHRONIZED )		670418	0					
ANR	670667	Callee	headers -> emplace_back		670418	0					
ANR	670668	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670669	Identifier	headers		670418	0					
ANR	670670	Identifier	emplace_back		670418	1					
ANR	670671	ArgumentList	& AS_SYNCHRONIZED		670418	1					
ANR	670672	Argument	& AS_SYNCHRONIZED		670418	0					
ANR	670673	UnaryOperationExpression	& AS_SYNCHRONIZED		670418	0					
ANR	670674	UnaryOperator	&		670418	0					
ANR	670675	Identifier	AS_SYNCHRONIZED		670418	1					
ANR	670676	IfStatement	if ( fileType == SHARP_TYPE )		670418	20					
ANR	670677	Condition	fileType == SHARP_TYPE	286:5:11500:11521	670418	0	True				
ANR	670678	EqualityExpression	fileType == SHARP_TYPE		670418	0		==			
ANR	670679	Identifier	fileType		670418	0					
ANR	670680	Identifier	SHARP_TYPE		670418	1					
ANR	670681	CompoundStatement		38:1:990:990	670418	1					
ANR	670682	ExpressionStatement	headers -> emplace_back ( & AS_FINALLY )	288:2:11529:11563	670418	0	True				
ANR	670683	CallExpression	headers -> emplace_back ( & AS_FINALLY )		670418	0					
ANR	670684	Callee	headers -> emplace_back		670418	0					
ANR	670685	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670686	Identifier	headers		670418	0					
ANR	670687	Identifier	emplace_back		670418	1					
ANR	670688	ArgumentList	& AS_FINALLY		670418	1					
ANR	670689	Argument	& AS_FINALLY		670418	0					
ANR	670690	UnaryOperationExpression	& AS_FINALLY		670418	0					
ANR	670691	UnaryOperator	&		670418	0					
ANR	670692	Identifier	AS_FINALLY		670418	1					
ANR	670693	ExpressionStatement	headers -> emplace_back ( & AS_LOCK )	289:2:11567:11598	670418	1	True				
ANR	670694	CallExpression	headers -> emplace_back ( & AS_LOCK )		670418	0					
ANR	670695	Callee	headers -> emplace_back		670418	0					
ANR	670696	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670697	Identifier	headers		670418	0					
ANR	670698	Identifier	emplace_back		670418	1					
ANR	670699	ArgumentList	& AS_LOCK		670418	1					
ANR	670700	Argument	& AS_LOCK		670418	0					
ANR	670701	UnaryOperationExpression	& AS_LOCK		670418	0					
ANR	670702	UnaryOperator	&		670418	0					
ANR	670703	Identifier	AS_LOCK		670418	1					
ANR	670704	ExpressionStatement	headers -> emplace_back ( & AS_FIXED )	290:2:11602:11634	670418	2	True				
ANR	670705	CallExpression	headers -> emplace_back ( & AS_FIXED )		670418	0					
ANR	670706	Callee	headers -> emplace_back		670418	0					
ANR	670707	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670708	Identifier	headers		670418	0					
ANR	670709	Identifier	emplace_back		670418	1					
ANR	670710	ArgumentList	& AS_FIXED		670418	1					
ANR	670711	Argument	& AS_FIXED		670418	0					
ANR	670712	UnaryOperationExpression	& AS_FIXED		670418	0					
ANR	670713	UnaryOperator	&		670418	0					
ANR	670714	Identifier	AS_FIXED		670418	1					
ANR	670715	ExpressionStatement	headers -> emplace_back ( & AS_GET )	291:2:11638:11668	670418	3	True				
ANR	670716	CallExpression	headers -> emplace_back ( & AS_GET )		670418	0					
ANR	670717	Callee	headers -> emplace_back		670418	0					
ANR	670718	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670719	Identifier	headers		670418	0					
ANR	670720	Identifier	emplace_back		670418	1					
ANR	670721	ArgumentList	& AS_GET		670418	1					
ANR	670722	Argument	& AS_GET		670418	0					
ANR	670723	UnaryOperationExpression	& AS_GET		670418	0					
ANR	670724	UnaryOperator	&		670418	0					
ANR	670725	Identifier	AS_GET		670418	1					
ANR	670726	ExpressionStatement	headers -> emplace_back ( & AS_SET )	292:2:11672:11702	670418	4	True				
ANR	670727	CallExpression	headers -> emplace_back ( & AS_SET )		670418	0					
ANR	670728	Callee	headers -> emplace_back		670418	0					
ANR	670729	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670730	Identifier	headers		670418	0					
ANR	670731	Identifier	emplace_back		670418	1					
ANR	670732	ArgumentList	& AS_SET		670418	1					
ANR	670733	Argument	& AS_SET		670418	0					
ANR	670734	UnaryOperationExpression	& AS_SET		670418	0					
ANR	670735	UnaryOperator	&		670418	0					
ANR	670736	Identifier	AS_SET		670418	1					
ANR	670737	ExpressionStatement	headers -> emplace_back ( & AS_ADD )	293:2:11706:11736	670418	5	True				
ANR	670738	CallExpression	headers -> emplace_back ( & AS_ADD )		670418	0					
ANR	670739	Callee	headers -> emplace_back		670418	0					
ANR	670740	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670741	Identifier	headers		670418	0					
ANR	670742	Identifier	emplace_back		670418	1					
ANR	670743	ArgumentList	& AS_ADD		670418	1					
ANR	670744	Argument	& AS_ADD		670418	0					
ANR	670745	UnaryOperationExpression	& AS_ADD		670418	0					
ANR	670746	UnaryOperator	&		670418	0					
ANR	670747	Identifier	AS_ADD		670418	1					
ANR	670748	ExpressionStatement	headers -> emplace_back ( & AS_REMOVE )	294:2:11740:11773	670418	6	True				
ANR	670749	CallExpression	headers -> emplace_back ( & AS_REMOVE )		670418	0					
ANR	670750	Callee	headers -> emplace_back		670418	0					
ANR	670751	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670752	Identifier	headers		670418	0					
ANR	670753	Identifier	emplace_back		670418	1					
ANR	670754	ArgumentList	& AS_REMOVE		670418	1					
ANR	670755	Argument	& AS_REMOVE		670418	0					
ANR	670756	UnaryOperationExpression	& AS_REMOVE		670418	0					
ANR	670757	UnaryOperator	&		670418	0					
ANR	670758	Identifier	AS_REMOVE		670418	1					
ANR	670759	ExpressionStatement	headers -> emplace_back ( & AS_USING )	295:2:11777:11809	670418	7	True				
ANR	670760	CallExpression	headers -> emplace_back ( & AS_USING )		670418	0					
ANR	670761	Callee	headers -> emplace_back		670418	0					
ANR	670762	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670763	Identifier	headers		670418	0					
ANR	670764	Identifier	emplace_back		670418	1					
ANR	670765	ArgumentList	& AS_USING		670418	1					
ANR	670766	Argument	& AS_USING		670418	0					
ANR	670767	UnaryOperationExpression	& AS_USING		670418	0					
ANR	670768	UnaryOperator	&		670418	0					
ANR	670769	Identifier	AS_USING		670418	1					
ANR	670770	IfStatement	if ( beautifier )		670418	21					
ANR	670771	Condition	beautifier	298:5:11820:11829	670418	0	True				
ANR	670772	Identifier	beautifier		670418	0					
ANR	670773	CompoundStatement		50:1:1298:1298	670418	1					
ANR	670774	IfStatement	if ( fileType == C_TYPE )		670418	0					
ANR	670775	Condition	fileType == C_TYPE	300:6:11841:11858	670418	0	True				
ANR	670776	EqualityExpression	fileType == C_TYPE		670418	0		==			
ANR	670777	Identifier	fileType		670418	0					
ANR	670778	Identifier	C_TYPE		670418	1					
ANR	670779	CompoundStatement		52:2:1328:1328	670418	1					
ANR	670780	ExpressionStatement	headers -> emplace_back ( & AS_TEMPLATE )	302:3:11868:11903	670418	0	True				
ANR	670781	CallExpression	headers -> emplace_back ( & AS_TEMPLATE )		670418	0					
ANR	670782	Callee	headers -> emplace_back		670418	0					
ANR	670783	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670784	Identifier	headers		670418	0					
ANR	670785	Identifier	emplace_back		670418	1					
ANR	670786	ArgumentList	& AS_TEMPLATE		670418	1					
ANR	670787	Argument	& AS_TEMPLATE		670418	0					
ANR	670788	UnaryOperationExpression	& AS_TEMPLATE		670418	0					
ANR	670789	UnaryOperator	&		670418	0					
ANR	670790	Identifier	AS_TEMPLATE		670418	1					
ANR	670791	IfStatement	if ( fileType == JAVA_TYPE )		670418	1					
ANR	670792	Condition	fileType == JAVA_TYPE	305:6:11916:11936	670418	0	True				
ANR	670793	EqualityExpression	fileType == JAVA_TYPE		670418	0		==			
ANR	670794	Identifier	fileType		670418	0					
ANR	670795	Identifier	JAVA_TYPE		670418	1					
ANR	670796	CompoundStatement		57:2:1406:1406	670418	1					
ANR	670797	ExpressionStatement	headers -> emplace_back ( & AS_STATIC )	307:3:11946:11979	670418	0	True				
ANR	670798	CallExpression	headers -> emplace_back ( & AS_STATIC )		670418	0					
ANR	670799	Callee	headers -> emplace_back		670418	0					
ANR	670800	PtrMemberAccess	headers -> emplace_back		670418	0					
ANR	670801	Identifier	headers		670418	0					
ANR	670802	Identifier	emplace_back		670418	1					
ANR	670803	ArgumentList	& AS_STATIC		670418	1					
ANR	670804	Argument	& AS_STATIC		670418	0					
ANR	670805	UnaryOperationExpression	& AS_STATIC		670418	0					
ANR	670806	UnaryOperator	&		670418	0					
ANR	670807	Identifier	AS_STATIC		670418	1					
ANR	670808	ExpressionStatement	assert ( headers -> size ( ) < elements )	311:1:12024:12058	670418	22	True				
ANR	670809	CallExpression	assert ( headers -> size ( ) < elements )		670418	0					
ANR	670810	Callee	assert		670418	0					
ANR	670811	Identifier	assert		670418	0					
ANR	670812	ArgumentList	headers -> size ( ) < elements		670418	1					
ANR	670813	Argument	headers -> size ( ) < elements		670418	0					
ANR	670814	RelationalExpression	headers -> size ( ) < elements		670418	0		<			
ANR	670815	CallExpression	headers -> size ( )		670418	0					
ANR	670816	Callee	headers -> size		670418	0					
ANR	670817	PtrMemberAccess	headers -> size		670418	0					
ANR	670818	Identifier	headers		670418	0					
ANR	670819	Identifier	size		670418	1					
ANR	670820	ArgumentList			670418	1					
ANR	670821	Identifier	elements		670418	1					
ANR	670822	ExpressionStatement	"sort ( headers -> begin ( ) , headers -> end ( ) , sortOnName )"	312:1:12061:12111	670418	23	True				
ANR	670823	CallExpression	"sort ( headers -> begin ( ) , headers -> end ( ) , sortOnName )"		670418	0					
ANR	670824	Callee	sort		670418	0					
ANR	670825	Identifier	sort		670418	0					
ANR	670826	ArgumentList	headers -> begin ( )		670418	1					
ANR	670827	Argument	headers -> begin ( )		670418	0					
ANR	670828	CallExpression	headers -> begin ( )		670418	0					
ANR	670829	Callee	headers -> begin		670418	0					
ANR	670830	PtrMemberAccess	headers -> begin		670418	0					
ANR	670831	Identifier	headers		670418	0					
ANR	670832	Identifier	begin		670418	1					
ANR	670833	ArgumentList			670418	1					
ANR	670834	Argument	headers -> end ( )		670418	1					
ANR	670835	CallExpression	headers -> end ( )		670418	0					
ANR	670836	Callee	headers -> end		670418	0					
ANR	670837	PtrMemberAccess	headers -> end		670418	0					
ANR	670838	Identifier	headers		670418	0					
ANR	670839	Identifier	end		670418	1					
ANR	670840	ArgumentList			670418	1					
ANR	670841	Argument	sortOnName		670418	2					
ANR	670842	Identifier	sortOnName		670418	0					
ANR	670843	ReturnType	void		670418	1					
ANR	670844	Identifier	ASResource :: buildHeaders		670418	2					
ANR	670845	ParameterList	"vector < const string * > * headers , int fileType , bool beautifier"		670418	3					
ANR	670846	Parameter	vector < const string * > * headers	249:30:10471:10500	670418	0	True				
ANR	670847	ParameterType	vector < const string * > *		670418	0					
ANR	670848	Identifier	headers		670418	1					
ANR	670849	Parameter	int fileType	249:62:10503:10514	670418	1	True				
ANR	670850	ParameterType	int		670418	0					
ANR	670851	Identifier	fileType		670418	1					
ANR	670852	Parameter	bool beautifier	249:76:10517:10531	670418	2	True				
ANR	670853	ParameterType	bool		670418	0					
ANR	670854	Identifier	beautifier		670418	1					
ANR	670855	CFGEntryNode	ENTRY		670418		True				
ANR	670856	CFGExitNode	EXIT		670418		True				
ANR	670857	Symbol	C_TYPE		670418						
ANR	670858	Symbol	& AS_FOR		670418						
ANR	670859	Symbol	headers -> size		670418						
ANR	670860	Symbol	sortOnName		670418						
ANR	670861	Symbol	beautifier		670418						
ANR	670862	Symbol	headers -> end		670418						
ANR	670863	Symbol	& AS_IF		670418						
ANR	670864	Symbol	& _AS_TRY		670418						
ANR	670865	Symbol	& AS_TRY		670418						
ANR	670866	Symbol	& AS_FOREACH		670418						
ANR	670867	Symbol	* headers		670418						
ANR	670868	Symbol	& AS_FINALLY		670418						
ANR	670869	Symbol	& AS_CASE		670418						
ANR	670870	Symbol	& AS_QFOREVER		670418						
ANR	670871	Symbol	& AS_LOCK		670418						
ANR	670872	Symbol	& AS_FIXED		670418						
ANR	670873	Symbol	headers -> begin		670418						
ANR	670874	Symbol	& _AS_FINALLY		670418						
ANR	670875	Symbol	headers		670418						
ANR	670876	Symbol	& AS_SYNCHRONIZED		670418						
ANR	670877	Symbol	& AS_TEMPLATE		670418						
ANR	670878	Symbol	& AS_SWITCH		670418						
ANR	670879	Symbol	& AS_USING		670418						
ANR	670880	Symbol	& AS_REMOVE		670418						
ANR	670881	Symbol	false		670418						
ANR	670882	Symbol	& AS_ELSE		670418						
ANR	670883	Symbol	JAVA_TYPE		670418						
ANR	670884	Symbol	SHARP_TYPE		670418						
ANR	670885	Symbol	& AS_WHILE		670418						
ANR	670886	Symbol	& AS_SET		670418						
ANR	670887	Symbol	& AS_ADD		670418						
ANR	670888	Symbol	& AS_STATIC		670418						
ANR	670889	Symbol	reserved		670418						
ANR	670890	Symbol	& AS_FOREVER		670418						
ANR	670891	Symbol	elements		670418						
ANR	670892	Symbol	& AS_DEFAULT		670418						
ANR	670893	Symbol	true		670418						
ANR	670894	Symbol	& AS_QFOREACH		670418						
ANR	670895	Symbol	& AS_CATCH		670418						
ANR	670896	Symbol	& AS_DO		670418						
ANR	670897	Symbol	& _AS_EXCEPT		670418						
ANR	670898	Symbol	fileType		670418						
ANR	670899	Symbol	& AS_GET		670418						
ANR	670900	Function	ASResource :: buildIndentableHeaders	321:0:12274:12480							
ANR	670901	FunctionDef	ASResource :: buildIndentableHeaders (vector < const string * > * indentableHeaders)		670900	0					
ANR	670902	CompoundStatement		322:0:12356:12480	670900	0					
ANR	670903	ExpressionStatement	indentableHeaders -> emplace_back ( & AS_RETURN )	323:1:12359:12402	670900	0	True				
ANR	670904	CallExpression	indentableHeaders -> emplace_back ( & AS_RETURN )		670900	0					
ANR	670905	Callee	indentableHeaders -> emplace_back		670900	0					
ANR	670906	PtrMemberAccess	indentableHeaders -> emplace_back		670900	0					
ANR	670907	Identifier	indentableHeaders		670900	0					
ANR	670908	Identifier	emplace_back		670900	1					
ANR	670909	ArgumentList	& AS_RETURN		670900	1					
ANR	670910	Argument	& AS_RETURN		670900	0					
ANR	670911	UnaryOperationExpression	& AS_RETURN		670900	0					
ANR	670912	UnaryOperator	&		670900	0					
ANR	670913	Identifier	AS_RETURN		670900	1					
ANR	670914	ReturnType	void		670900	1					
ANR	670915	Identifier	ASResource :: buildIndentableHeaders		670900	2					
ANR	670916	ParameterList	vector < const string * > * indentableHeaders		670900	3					
ANR	670917	Parameter	vector < const string * > * indentableHeaders	321:40:12314:12353	670900	0	True				
ANR	670918	ParameterType	vector < const string * > *		670900	0					
ANR	670919	Identifier	indentableHeaders		670900	1					
ANR	670920	CFGEntryNode	ENTRY		670900		True				
ANR	670921	CFGExitNode	EXIT		670900		True				
ANR	670922	Symbol	& AS_RETURN		670900						
ANR	670923	Symbol	indentableHeaders		670900						
ANR	670924	Function	ASResource :: buildIndentableMacros	334:0:12668:13628							
ANR	670925	FunctionDef	"ASResource :: buildIndentableMacros (vector < const pair < const string , const string > * > * indentableMacros)"		670924	0					
ANR	670926	CompoundStatement		335:0:12775:13628	670924	0					
ANR	670927	IdentifierDeclStatement	const size_t elements = 10 ;	336:1:12778:12804	670924	0	True				
ANR	670928	IdentifierDecl	elements = 10		670924	0					
ANR	670929	IdentifierDeclType	const size_t		670924	0					
ANR	670930	Identifier	elements		670924	1					
ANR	670931	AssignmentExpression	elements = 10		670924	2		=			
ANR	670932	Identifier	elements		670924	0					
ANR	670933	PrimaryExpression	10		670924	1					
ANR	670934	Statement	static	337:1:12807:12812	670924	1	True				
ANR	670935	IdentifierDeclStatement	bool reserved = false ;	337:8:12814:12835	670924	2	True				
ANR	670936	IdentifierDecl	reserved = false		670924	0					
ANR	670937	IdentifierDeclType	bool		670924	0					
ANR	670938	Identifier	reserved		670924	1					
ANR	670939	AssignmentExpression	reserved = false		670924	2		=			
ANR	670940	Identifier	false		670924	0					
ANR	670941	Identifier	false		670924	1					
ANR	670942	IfStatement	if ( ! reserved )		670924	3					
ANR	670943	Condition	! reserved	338:5:12842:12850	670924	0	True				
ANR	670944	UnaryOperationExpression	! reserved		670924	0					
ANR	670945	UnaryOperator	!		670924	0					
ANR	670946	Identifier	reserved		670924	1					
ANR	670947	CompoundStatement		5:1:78:78	670924	1					
ANR	670948	ExpressionStatement	indentableMacros -> reserve ( elements )	340:2:12858:12893	670924	0	True				
ANR	670949	CallExpression	indentableMacros -> reserve ( elements )		670924	0					
ANR	670950	Callee	indentableMacros -> reserve		670924	0					
ANR	670951	PtrMemberAccess	indentableMacros -> reserve		670924	0					
ANR	670952	Identifier	indentableMacros		670924	0					
ANR	670953	Identifier	reserve		670924	1					
ANR	670954	ArgumentList	elements		670924	1					
ANR	670955	Argument	elements		670924	0					
ANR	670956	Identifier	elements		670924	0					
ANR	670957	ExpressionStatement	reserved = true	341:2:12897:12912	670924	1	True				
ANR	670958	AssignmentExpression	reserved = true		670924	0		=			
ANR	670959	Identifier	reserved		670924	0					
ANR	670960	Identifier	true		670924	1					
ANR	670961	IdentifierDeclStatement	"pair < const string , const string > macro_pair ;"	345:9:12993:13036	670924	4	True				
ANR	670962	IdentifierDecl	macro_pair		670924	0					
ANR	670963	IdentifierDeclType	"pair < const string , const string >"		670924	0					
ANR	670964	Identifier	macro_pair		670924	1					
ANR	670965	Statement	static	346:1:13039:13044	670924	5	True				
ANR	670966	Statement	const	346:8:13046:13050	670924	6	True				
ANR	670967	Statement	macro_pair	346:14:13052:13061	670924	7	True				
ANR	670968	Statement	macros	346:25:13063:13068	670924	8	True				
ANR	670969	Statement	[	346:31:13069:13069	670924	9	True				
ANR	670970	Statement	]	346:32:13070:13070	670924	10	True				
ANR	670971	Statement	=	346:34:13072:13072	670924	11	True				
ANR	670972	CompoundStatement		13:1:299:299	670924	12					
ANR	670973	Statement	macro_pair	349:2:13094:13103	670924	0	True				
ANR	670974	Statement	(	349:12:13104:13104	670924	1	True				
ANR	670975	Statement	"""BEGIN_EVENT_TABLE"""	349:13:13105:13123	670924	2	True				
ANR	670976	Statement	","	349:32:13124:13124	670924	3	True				
ANR	670977	Statement	"""END_EVENT_TABLE"""	349:36:13128:13144	670924	4	True				
ANR	670978	Statement	)	349:53:13145:13145	670924	5	True				
ANR	670979	Statement	","	349:54:13146:13146	670924	6	True				
ANR	670980	Statement	macro_pair	350:2:13150:13159	670924	7	True				
ANR	670981	Statement	(	350:12:13160:13160	670924	8	True				
ANR	670982	Statement	"""wxBEGIN_EVENT_TABLE"""	350:13:13161:13181	670924	9	True				
ANR	670983	Statement	","	350:34:13182:13182	670924	10	True				
ANR	670984	Statement	"""wxEND_EVENT_TABLE"""	350:36:13184:13202	670924	11	True				
ANR	670985	Statement	)	350:55:13203:13203	670924	12	True				
ANR	670986	Statement	","	350:56:13204:13204	670924	13	True				
ANR	670987	Statement	macro_pair	352:2:13217:13226	670924	14	True				
ANR	670988	Statement	(	352:12:13227:13227	670924	15	True				
ANR	670989	Statement	"""BEGIN_DISPATCH_MAP"""	352:13:13228:13247	670924	16	True				
ANR	670990	Statement	","	352:33:13248:13248	670924	17	True				
ANR	670991	Statement	"""END_DISPATCH_MAP"""	352:36:13251:13268	670924	18	True				
ANR	670992	Statement	)	352:54:13269:13269	670924	19	True				
ANR	670993	Statement	","	352:55:13270:13270	670924	20	True				
ANR	670994	Statement	macro_pair	353:2:13274:13283	670924	21	True				
ANR	670995	Statement	(	353:12:13284:13284	670924	22	True				
ANR	670996	Statement	"""BEGIN_EVENT_MAP"""	353:13:13285:13301	670924	23	True				
ANR	670997	Statement	","	353:30:13302:13302	670924	24	True				
ANR	670998	Statement	"""END_EVENT_MAP"""	353:36:13308:13322	670924	25	True				
ANR	670999	Statement	)	353:51:13323:13323	670924	26	True				
ANR	671000	Statement	","	353:52:13324:13324	670924	27	True				
ANR	671001	Statement	macro_pair	354:2:13328:13337	670924	28	True				
ANR	671002	Statement	(	354:12:13338:13338	670924	29	True				
ANR	671003	Statement	"""BEGIN_MESSAGE_MAP"""	354:13:13339:13357	670924	30	True				
ANR	671004	Statement	","	354:32:13358:13358	670924	31	True				
ANR	671005	Statement	"""END_MESSAGE_MAP"""	354:36:13362:13378	670924	32	True				
ANR	671006	Statement	)	354:53:13379:13379	670924	33	True				
ANR	671007	Statement	","	354:54:13380:13380	670924	34	True				
ANR	671008	Statement	macro_pair	355:2:13384:13393	670924	35	True				
ANR	671009	Statement	(	355:12:13394:13394	670924	36	True				
ANR	671010	Statement	"""BEGIN_PROPPAGEIDS"""	355:13:13395:13413	670924	37	True				
ANR	671011	Statement	","	355:32:13414:13414	670924	38	True				
ANR	671012	Statement	"""END_PROPPAGEIDS"""	355:36:13418:13434	670924	39	True				
ANR	671013	Statement	)	355:53:13435:13435	670924	40	True				
ANR	671014	Statement	","	355:54:13436:13436	670924	41	True				
ANR	671015	ExpressionStatement		356:2:13440:13440	670924	13	True				
ANR	671016	IdentifierDeclStatement	size_t entries = sizeof ( macros ) / sizeof ( macros [ 0 ] ) ;	358:1:13444:13495	670924	14	True				
ANR	671017	IdentifierDecl	entries = sizeof ( macros ) / sizeof ( macros [ 0 ] )		670924	0					
ANR	671018	IdentifierDeclType	size_t		670924	0					
ANR	671019	Identifier	entries		670924	1					
ANR	671020	AssignmentExpression	entries = sizeof ( macros ) / sizeof ( macros [ 0 ] )		670924	2		=			
ANR	671021	Identifier	entries		670924	0					
ANR	671022	MultiplicativeExpression	sizeof ( macros ) / sizeof ( macros [ 0 ] )		670924	1		/			
ANR	671023	SizeofExpression	sizeof ( macros )		670924	0					
ANR	671024	Sizeof	sizeof		670924	0					
ANR	671025	SizeofOperand	macros		670924	1					
ANR	671026	SizeofExpression	sizeof ( macros [ 0 ] )		670924	1					
ANR	671027	Sizeof	sizeof		670924	0					
ANR	671028	ArrayIndexing	macros [ 0 ]		670924	1					
ANR	671029	Identifier	macros		670924	0					
ANR	671030	PrimaryExpression	0		670924	1					
ANR	671031	ForStatement	for ( size_t i = 0 ; i < entries ; i ++ )		670924	15					
ANR	671032	ForInit	size_t i = 0 ;	359:6:13503:13515	670924	0	True				
ANR	671033	IdentifierDeclStatement	size_t i = 0 ;		670924	0					
ANR	671034	IdentifierDecl	i = 0		670924	0					
ANR	671035	IdentifierDeclType	size_t		670924	0					
ANR	671036	Identifier	i		670924	1					
ANR	671037	AssignmentExpression	i = 0		670924	2		=			
ANR	671038	Identifier	i		670924	0					
ANR	671039	PrimaryExpression	0		670924	1					
ANR	671040	Condition	i < entries	359:20:13517:13527	670924	1	True				
ANR	671041	RelationalExpression	i < entries		670924	0		<			
ANR	671042	Identifier	i		670924	0					
ANR	671043	Identifier	entries		670924	1					
ANR	671044	PostIncDecOperationExpression	i ++	359:33:13530:13532	670924	2	True				
ANR	671045	Identifier	i		670924	0					
ANR	671046	IncDec	++		670924	1					
ANR	671047	ExpressionStatement	indentableMacros -> emplace_back ( & macros [ i ] )	360:2:13537:13579	670924	3	True				
ANR	671048	CallExpression	indentableMacros -> emplace_back ( & macros [ i ] )		670924	0					
ANR	671049	Callee	indentableMacros -> emplace_back		670924	0					
ANR	671050	PtrMemberAccess	indentableMacros -> emplace_back		670924	0					
ANR	671051	Identifier	indentableMacros		670924	0					
ANR	671052	Identifier	emplace_back		670924	1					
ANR	671053	ArgumentList	& macros [ i ]		670924	1					
ANR	671054	Argument	& macros [ i ]		670924	0					
ANR	671055	UnaryOperationExpression	& macros [ i ]		670924	0					
ANR	671056	UnaryOperator	&		670924	0					
ANR	671057	ArrayIndexing	macros [ i ]		670924	1					
ANR	671058	Identifier	macros		670924	0					
ANR	671059	Identifier	i		670924	1					
ANR	671060	ExpressionStatement	assert ( indentableMacros -> size ( ) < elements )	362:1:13583:13626	670924	16	True				
ANR	671061	CallExpression	assert ( indentableMacros -> size ( ) < elements )		670924	0					
ANR	671062	Callee	assert		670924	0					
ANR	671063	Identifier	assert		670924	0					
ANR	671064	ArgumentList	indentableMacros -> size ( ) < elements		670924	1					
ANR	671065	Argument	indentableMacros -> size ( ) < elements		670924	0					
ANR	671066	RelationalExpression	indentableMacros -> size ( ) < elements		670924	0		<			
ANR	671067	CallExpression	indentableMacros -> size ( )		670924	0					
ANR	671068	Callee	indentableMacros -> size		670924	0					
ANR	671069	PtrMemberAccess	indentableMacros -> size		670924	0					
ANR	671070	Identifier	indentableMacros		670924	0					
ANR	671071	Identifier	size		670924	1					
ANR	671072	ArgumentList			670924	1					
ANR	671073	Identifier	elements		670924	1					
ANR	671074	ReturnType	void		670924	1					
ANR	671075	Identifier	ASResource :: buildIndentableMacros		670924	2					
ANR	671076	ParameterList	"vector < const pair < const string , const string > * > * indentableMacros"		670924	3					
ANR	671077	Parameter	"vector < const pair < const string , const string > * > * indentableMacros"	334:39:12707:12772	670924	0	True				
ANR	671078	ParameterType	"vector < const pair < const string , const string > * > *"		670924	0					
ANR	671079	Identifier	indentableMacros		670924	1					
ANR	671080	CFGEntryNode	ENTRY		670924		True				
ANR	671081	CFGExitNode	EXIT		670924		True				
ANR	671082	Symbol	entries		670924						
ANR	671083	Symbol	macros		670924						
ANR	671084	Symbol	* macros		670924						
ANR	671085	Symbol	indentableMacros -> size		670924						
ANR	671086	Symbol	reserved		670924						
ANR	671087	Symbol	* indentableMacros		670924						
ANR	671088	Symbol	indentableMacros		670924						
ANR	671089	Symbol	elements		670924						
ANR	671090	Symbol	false		670924						
ANR	671091	Symbol	true		670924						
ANR	671092	Symbol	i		670924						
ANR	671093	Symbol	macro_pair		670924						
ANR	671094	Function	ASResource :: buildNonAssignmentOperators	371:0:13802:14903							
ANR	671095	FunctionDef	ASResource :: buildNonAssignmentOperators (vector < const string * > * nonAssignmentOperators)		671094	0					
ANR	671096	CompoundStatement		372:0:13894:14903	671094	0					
ANR	671097	IdentifierDeclStatement	const size_t elements = 15 ;	373:1:13897:13923	671094	0	True				
ANR	671098	IdentifierDecl	elements = 15		671094	0					
ANR	671099	IdentifierDeclType	const size_t		671094	0					
ANR	671100	Identifier	elements		671094	1					
ANR	671101	AssignmentExpression	elements = 15		671094	2		=			
ANR	671102	Identifier	elements		671094	0					
ANR	671103	PrimaryExpression	15		671094	1					
ANR	671104	Statement	static	374:1:13926:13931	671094	1	True				
ANR	671105	IdentifierDeclStatement	bool reserved = false ;	374:8:13933:13954	671094	2	True				
ANR	671106	IdentifierDecl	reserved = false		671094	0					
ANR	671107	IdentifierDeclType	bool		671094	0					
ANR	671108	Identifier	reserved		671094	1					
ANR	671109	AssignmentExpression	reserved = false		671094	2		=			
ANR	671110	Identifier	false		671094	0					
ANR	671111	Identifier	false		671094	1					
ANR	671112	IfStatement	if ( ! reserved )		671094	3					
ANR	671113	Condition	! reserved	375:5:13961:13969	671094	0	True				
ANR	671114	UnaryOperationExpression	! reserved		671094	0					
ANR	671115	UnaryOperator	!		671094	0					
ANR	671116	Identifier	reserved		671094	1					
ANR	671117	CompoundStatement		5:1:78:78	671094	1					
ANR	671118	ExpressionStatement	nonAssignmentOperators -> reserve ( elements )	377:2:13977:14018	671094	0	True				
ANR	671119	CallExpression	nonAssignmentOperators -> reserve ( elements )		671094	0					
ANR	671120	Callee	nonAssignmentOperators -> reserve		671094	0					
ANR	671121	PtrMemberAccess	nonAssignmentOperators -> reserve		671094	0					
ANR	671122	Identifier	nonAssignmentOperators		671094	0					
ANR	671123	Identifier	reserve		671094	1					
ANR	671124	ArgumentList	elements		671094	1					
ANR	671125	Argument	elements		671094	0					
ANR	671126	Identifier	elements		671094	0					
ANR	671127	ExpressionStatement	reserved = true	378:2:14022:14037	671094	1	True				
ANR	671128	AssignmentExpression	reserved = true		671094	0		=			
ANR	671129	Identifier	reserved		671094	0					
ANR	671130	Identifier	true		671094	1					
ANR	671131	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_EQUAL )	381:1:14044:14091	671094	4	True				
ANR	671132	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_EQUAL )		671094	0					
ANR	671133	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671134	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671135	Identifier	nonAssignmentOperators		671094	0					
ANR	671136	Identifier	emplace_back		671094	1					
ANR	671137	ArgumentList	& AS_EQUAL		671094	1					
ANR	671138	Argument	& AS_EQUAL		671094	0					
ANR	671139	UnaryOperationExpression	& AS_EQUAL		671094	0					
ANR	671140	UnaryOperator	&		671094	0					
ANR	671141	Identifier	AS_EQUAL		671094	1					
ANR	671142	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_PLUS_PLUS )	382:1:14094:14145	671094	5	True				
ANR	671143	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_PLUS_PLUS )		671094	0					
ANR	671144	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671145	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671146	Identifier	nonAssignmentOperators		671094	0					
ANR	671147	Identifier	emplace_back		671094	1					
ANR	671148	ArgumentList	& AS_PLUS_PLUS		671094	1					
ANR	671149	Argument	& AS_PLUS_PLUS		671094	0					
ANR	671150	UnaryOperationExpression	& AS_PLUS_PLUS		671094	0					
ANR	671151	UnaryOperator	&		671094	0					
ANR	671152	Identifier	AS_PLUS_PLUS		671094	1					
ANR	671153	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_MINUS_MINUS )	383:1:14148:14201	671094	6	True				
ANR	671154	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_MINUS_MINUS )		671094	0					
ANR	671155	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671156	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671157	Identifier	nonAssignmentOperators		671094	0					
ANR	671158	Identifier	emplace_back		671094	1					
ANR	671159	ArgumentList	& AS_MINUS_MINUS		671094	1					
ANR	671160	Argument	& AS_MINUS_MINUS		671094	0					
ANR	671161	UnaryOperationExpression	& AS_MINUS_MINUS		671094	0					
ANR	671162	UnaryOperator	&		671094	0					
ANR	671163	Identifier	AS_MINUS_MINUS		671094	1					
ANR	671164	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_NOT_EQUAL )	384:1:14204:14255	671094	7	True				
ANR	671165	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_NOT_EQUAL )		671094	0					
ANR	671166	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671167	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671168	Identifier	nonAssignmentOperators		671094	0					
ANR	671169	Identifier	emplace_back		671094	1					
ANR	671170	ArgumentList	& AS_NOT_EQUAL		671094	1					
ANR	671171	Argument	& AS_NOT_EQUAL		671094	0					
ANR	671172	UnaryOperationExpression	& AS_NOT_EQUAL		671094	0					
ANR	671173	UnaryOperator	&		671094	0					
ANR	671174	Identifier	AS_NOT_EQUAL		671094	1					
ANR	671175	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_GR_EQUAL )	385:1:14258:14308	671094	8	True				
ANR	671176	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_GR_EQUAL )		671094	0					
ANR	671177	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671178	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671179	Identifier	nonAssignmentOperators		671094	0					
ANR	671180	Identifier	emplace_back		671094	1					
ANR	671181	ArgumentList	& AS_GR_EQUAL		671094	1					
ANR	671182	Argument	& AS_GR_EQUAL		671094	0					
ANR	671183	UnaryOperationExpression	& AS_GR_EQUAL		671094	0					
ANR	671184	UnaryOperator	&		671094	0					
ANR	671185	Identifier	AS_GR_EQUAL		671094	1					
ANR	671186	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_GR_GR_GR )	386:1:14311:14361	671094	9	True				
ANR	671187	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_GR_GR_GR )		671094	0					
ANR	671188	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671189	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671190	Identifier	nonAssignmentOperators		671094	0					
ANR	671191	Identifier	emplace_back		671094	1					
ANR	671192	ArgumentList	& AS_GR_GR_GR		671094	1					
ANR	671193	Argument	& AS_GR_GR_GR		671094	0					
ANR	671194	UnaryOperationExpression	& AS_GR_GR_GR		671094	0					
ANR	671195	UnaryOperator	&		671094	0					
ANR	671196	Identifier	AS_GR_GR_GR		671094	1					
ANR	671197	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_GR_GR )	387:1:14364:14411	671094	10	True				
ANR	671198	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_GR_GR )		671094	0					
ANR	671199	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671200	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671201	Identifier	nonAssignmentOperators		671094	0					
ANR	671202	Identifier	emplace_back		671094	1					
ANR	671203	ArgumentList	& AS_GR_GR		671094	1					
ANR	671204	Argument	& AS_GR_GR		671094	0					
ANR	671205	UnaryOperationExpression	& AS_GR_GR		671094	0					
ANR	671206	UnaryOperator	&		671094	0					
ANR	671207	Identifier	AS_GR_GR		671094	1					
ANR	671208	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_LS_EQUAL )	388:1:14414:14464	671094	11	True				
ANR	671209	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_LS_EQUAL )		671094	0					
ANR	671210	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671211	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671212	Identifier	nonAssignmentOperators		671094	0					
ANR	671213	Identifier	emplace_back		671094	1					
ANR	671214	ArgumentList	& AS_LS_EQUAL		671094	1					
ANR	671215	Argument	& AS_LS_EQUAL		671094	0					
ANR	671216	UnaryOperationExpression	& AS_LS_EQUAL		671094	0					
ANR	671217	UnaryOperator	&		671094	0					
ANR	671218	Identifier	AS_LS_EQUAL		671094	1					
ANR	671219	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_LS_LS_LS )	389:1:14467:14517	671094	12	True				
ANR	671220	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_LS_LS_LS )		671094	0					
ANR	671221	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671222	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671223	Identifier	nonAssignmentOperators		671094	0					
ANR	671224	Identifier	emplace_back		671094	1					
ANR	671225	ArgumentList	& AS_LS_LS_LS		671094	1					
ANR	671226	Argument	& AS_LS_LS_LS		671094	0					
ANR	671227	UnaryOperationExpression	& AS_LS_LS_LS		671094	0					
ANR	671228	UnaryOperator	&		671094	0					
ANR	671229	Identifier	AS_LS_LS_LS		671094	1					
ANR	671230	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_LS_LS )	390:1:14520:14567	671094	13	True				
ANR	671231	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_LS_LS )		671094	0					
ANR	671232	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671233	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671234	Identifier	nonAssignmentOperators		671094	0					
ANR	671235	Identifier	emplace_back		671094	1					
ANR	671236	ArgumentList	& AS_LS_LS		671094	1					
ANR	671237	Argument	& AS_LS_LS		671094	0					
ANR	671238	UnaryOperationExpression	& AS_LS_LS		671094	0					
ANR	671239	UnaryOperator	&		671094	0					
ANR	671240	Identifier	AS_LS_LS		671094	1					
ANR	671241	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_ARROW )	391:1:14570:14617	671094	14	True				
ANR	671242	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_ARROW )		671094	0					
ANR	671243	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671244	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671245	Identifier	nonAssignmentOperators		671094	0					
ANR	671246	Identifier	emplace_back		671094	1					
ANR	671247	ArgumentList	& AS_ARROW		671094	1					
ANR	671248	Argument	& AS_ARROW		671094	0					
ANR	671249	UnaryOperationExpression	& AS_ARROW		671094	0					
ANR	671250	UnaryOperator	&		671094	0					
ANR	671251	Identifier	AS_ARROW		671094	1					
ANR	671252	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_AND )	392:1:14620:14665	671094	15	True				
ANR	671253	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_AND )		671094	0					
ANR	671254	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671255	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671256	Identifier	nonAssignmentOperators		671094	0					
ANR	671257	Identifier	emplace_back		671094	1					
ANR	671258	ArgumentList	& AS_AND		671094	1					
ANR	671259	Argument	& AS_AND		671094	0					
ANR	671260	UnaryOperationExpression	& AS_AND		671094	0					
ANR	671261	UnaryOperator	&		671094	0					
ANR	671262	Identifier	AS_AND		671094	1					
ANR	671263	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_OR )	393:1:14668:14712	671094	16	True				
ANR	671264	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_OR )		671094	0					
ANR	671265	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671266	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671267	Identifier	nonAssignmentOperators		671094	0					
ANR	671268	Identifier	emplace_back		671094	1					
ANR	671269	ArgumentList	& AS_OR		671094	1					
ANR	671270	Argument	& AS_OR		671094	0					
ANR	671271	UnaryOperationExpression	& AS_OR		671094	0					
ANR	671272	UnaryOperator	&		671094	0					
ANR	671273	Identifier	AS_OR		671094	1					
ANR	671274	ExpressionStatement	nonAssignmentOperators -> emplace_back ( & AS_LAMBDA )	394:1:14715:14763	671094	17	True				
ANR	671275	CallExpression	nonAssignmentOperators -> emplace_back ( & AS_LAMBDA )		671094	0					
ANR	671276	Callee	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671277	PtrMemberAccess	nonAssignmentOperators -> emplace_back		671094	0					
ANR	671278	Identifier	nonAssignmentOperators		671094	0					
ANR	671279	Identifier	emplace_back		671094	1					
ANR	671280	ArgumentList	& AS_LAMBDA		671094	1					
ANR	671281	Argument	& AS_LAMBDA		671094	0					
ANR	671282	UnaryOperationExpression	& AS_LAMBDA		671094	0					
ANR	671283	UnaryOperator	&		671094	0					
ANR	671284	Identifier	AS_LAMBDA		671094	1					
ANR	671285	ExpressionStatement	assert ( nonAssignmentOperators -> size ( ) < elements )	396:1:14767:14816	671094	18	True				
ANR	671286	CallExpression	assert ( nonAssignmentOperators -> size ( ) < elements )		671094	0					
ANR	671287	Callee	assert		671094	0					
ANR	671288	Identifier	assert		671094	0					
ANR	671289	ArgumentList	nonAssignmentOperators -> size ( ) < elements		671094	1					
ANR	671290	Argument	nonAssignmentOperators -> size ( ) < elements		671094	0					
ANR	671291	RelationalExpression	nonAssignmentOperators -> size ( ) < elements		671094	0		<			
ANR	671292	CallExpression	nonAssignmentOperators -> size ( )		671094	0					
ANR	671293	Callee	nonAssignmentOperators -> size		671094	0					
ANR	671294	PtrMemberAccess	nonAssignmentOperators -> size		671094	0					
ANR	671295	Identifier	nonAssignmentOperators		671094	0					
ANR	671296	Identifier	size		671094	1					
ANR	671297	ArgumentList			671094	1					
ANR	671298	Identifier	elements		671094	1					
ANR	671299	ExpressionStatement	"sort ( nonAssignmentOperators -> begin ( ) , nonAssignmentOperators -> end ( ) , sortOnLength )"	397:1:14819:14901	671094	19	True				
ANR	671300	CallExpression	"sort ( nonAssignmentOperators -> begin ( ) , nonAssignmentOperators -> end ( ) , sortOnLength )"		671094	0					
ANR	671301	Callee	sort		671094	0					
ANR	671302	Identifier	sort		671094	0					
ANR	671303	ArgumentList	nonAssignmentOperators -> begin ( )		671094	1					
ANR	671304	Argument	nonAssignmentOperators -> begin ( )		671094	0					
ANR	671305	CallExpression	nonAssignmentOperators -> begin ( )		671094	0					
ANR	671306	Callee	nonAssignmentOperators -> begin		671094	0					
ANR	671307	PtrMemberAccess	nonAssignmentOperators -> begin		671094	0					
ANR	671308	Identifier	nonAssignmentOperators		671094	0					
ANR	671309	Identifier	begin		671094	1					
ANR	671310	ArgumentList			671094	1					
ANR	671311	Argument	nonAssignmentOperators -> end ( )		671094	1					
ANR	671312	CallExpression	nonAssignmentOperators -> end ( )		671094	0					
ANR	671313	Callee	nonAssignmentOperators -> end		671094	0					
ANR	671314	PtrMemberAccess	nonAssignmentOperators -> end		671094	0					
ANR	671315	Identifier	nonAssignmentOperators		671094	0					
ANR	671316	Identifier	end		671094	1					
ANR	671317	ArgumentList			671094	1					
ANR	671318	Argument	sortOnLength		671094	2					
ANR	671319	Identifier	sortOnLength		671094	0					
ANR	671320	ReturnType	void		671094	1					
ANR	671321	Identifier	ASResource :: buildNonAssignmentOperators		671094	2					
ANR	671322	ParameterList	vector < const string * > * nonAssignmentOperators		671094	3					
ANR	671323	Parameter	vector < const string * > * nonAssignmentOperators	371:45:13847:13891	671094	0	True				
ANR	671324	ParameterType	vector < const string * > *		671094	0					
ANR	671325	Identifier	nonAssignmentOperators		671094	1					
ANR	671326	CFGEntryNode	ENTRY		671094		True				
ANR	671327	CFGExitNode	EXIT		671094		True				
ANR	671328	Symbol	& AS_LAMBDA		671094						
ANR	671329	Symbol	nonAssignmentOperators -> end		671094						
ANR	671330	Symbol	& AS_LS_LS_LS		671094						
ANR	671331	Symbol	false		671094						
ANR	671332	Symbol	* nonAssignmentOperators		671094						
ANR	671333	Symbol	sortOnLength		671094						
ANR	671334	Symbol	& AS_NOT_EQUAL		671094						
ANR	671335	Symbol	& AS_MINUS_MINUS		671094						
ANR	671336	Symbol	& AS_ARROW		671094						
ANR	671337	Symbol	nonAssignmentOperators -> begin		671094						
ANR	671338	Symbol	& AS_PLUS_PLUS		671094						
ANR	671339	Symbol	& AS_EQUAL		671094						
ANR	671340	Symbol	& AS_LS_EQUAL		671094						
ANR	671341	Symbol	& AS_LS_LS		671094						
ANR	671342	Symbol	reserved		671094						
ANR	671343	Symbol	& AS_GR_GR_GR		671094						
ANR	671344	Symbol	& AS_OR		671094						
ANR	671345	Symbol	elements		671094						
ANR	671346	Symbol	true		671094						
ANR	671347	Symbol	& AS_AND		671094						
ANR	671348	Symbol	nonAssignmentOperators -> size		671094						
ANR	671349	Symbol	nonAssignmentOperators		671094						
ANR	671350	Symbol	& AS_GR_EQUAL		671094						
ANR	671351	Symbol	& AS_GR_GR		671094						
ANR	671352	Function	ASResource :: buildNonParenHeaders	407:0:15165:16617							
ANR	671353	FunctionDef	"ASResource :: buildNonParenHeaders (vector < const string * > * nonParenHeaders , int fileType , bool beautifier)"		671352	0					
ANR	671354	CompoundStatement		408:0:15274:16617	671352	0					
ANR	671355	IdentifierDeclStatement	const size_t elements = 20 ;	409:1:15277:15303	671352	0	True				
ANR	671356	IdentifierDecl	elements = 20		671352	0					
ANR	671357	IdentifierDeclType	const size_t		671352	0					
ANR	671358	Identifier	elements		671352	1					
ANR	671359	AssignmentExpression	elements = 20		671352	2		=			
ANR	671360	Identifier	elements		671352	0					
ANR	671361	PrimaryExpression	20		671352	1					
ANR	671362	Statement	static	410:1:15306:15311	671352	1	True				
ANR	671363	IdentifierDeclStatement	bool reserved = false ;	410:8:15313:15334	671352	2	True				
ANR	671364	IdentifierDecl	reserved = false		671352	0					
ANR	671365	IdentifierDeclType	bool		671352	0					
ANR	671366	Identifier	reserved		671352	1					
ANR	671367	AssignmentExpression	reserved = false		671352	2		=			
ANR	671368	Identifier	false		671352	0					
ANR	671369	Identifier	false		671352	1					
ANR	671370	IfStatement	if ( ! reserved )		671352	3					
ANR	671371	Condition	! reserved	411:5:15341:15349	671352	0	True				
ANR	671372	UnaryOperationExpression	! reserved		671352	0					
ANR	671373	UnaryOperator	!		671352	0					
ANR	671374	Identifier	reserved		671352	1					
ANR	671375	CompoundStatement		5:1:78:78	671352	1					
ANR	671376	ExpressionStatement	nonParenHeaders -> reserve ( elements )	413:2:15357:15391	671352	0	True				
ANR	671377	CallExpression	nonParenHeaders -> reserve ( elements )		671352	0					
ANR	671378	Callee	nonParenHeaders -> reserve		671352	0					
ANR	671379	PtrMemberAccess	nonParenHeaders -> reserve		671352	0					
ANR	671380	Identifier	nonParenHeaders		671352	0					
ANR	671381	Identifier	reserve		671352	1					
ANR	671382	ArgumentList	elements		671352	1					
ANR	671383	Argument	elements		671352	0					
ANR	671384	Identifier	elements		671352	0					
ANR	671385	ExpressionStatement	reserved = true	414:2:15395:15410	671352	1	True				
ANR	671386	AssignmentExpression	reserved = true		671352	0		=			
ANR	671387	Identifier	reserved		671352	0					
ANR	671388	Identifier	true		671352	1					
ANR	671389	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_ELSE )	417:1:15417:15456	671352	4	True				
ANR	671390	CallExpression	nonParenHeaders -> emplace_back ( & AS_ELSE )		671352	0					
ANR	671391	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671392	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671393	Identifier	nonParenHeaders		671352	0					
ANR	671394	Identifier	emplace_back		671352	1					
ANR	671395	ArgumentList	& AS_ELSE		671352	1					
ANR	671396	Argument	& AS_ELSE		671352	0					
ANR	671397	UnaryOperationExpression	& AS_ELSE		671352	0					
ANR	671398	UnaryOperator	&		671352	0					
ANR	671399	Identifier	AS_ELSE		671352	1					
ANR	671400	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_DO )	418:1:15459:15496	671352	5	True				
ANR	671401	CallExpression	nonParenHeaders -> emplace_back ( & AS_DO )		671352	0					
ANR	671402	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671403	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671404	Identifier	nonParenHeaders		671352	0					
ANR	671405	Identifier	emplace_back		671352	1					
ANR	671406	ArgumentList	& AS_DO		671352	1					
ANR	671407	Argument	& AS_DO		671352	0					
ANR	671408	UnaryOperationExpression	& AS_DO		671352	0					
ANR	671409	UnaryOperator	&		671352	0					
ANR	671410	Identifier	AS_DO		671352	1					
ANR	671411	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_TRY )	419:1:15499:15537	671352	6	True				
ANR	671412	CallExpression	nonParenHeaders -> emplace_back ( & AS_TRY )		671352	0					
ANR	671413	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671414	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671415	Identifier	nonParenHeaders		671352	0					
ANR	671416	Identifier	emplace_back		671352	1					
ANR	671417	ArgumentList	& AS_TRY		671352	1					
ANR	671418	Argument	& AS_TRY		671352	0					
ANR	671419	UnaryOperationExpression	& AS_TRY		671352	0					
ANR	671420	UnaryOperator	&		671352	0					
ANR	671421	Identifier	AS_TRY		671352	1					
ANR	671422	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_CATCH )	420:1:15540:15580	671352	7	True				
ANR	671423	CallExpression	nonParenHeaders -> emplace_back ( & AS_CATCH )		671352	0					
ANR	671424	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671425	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671426	Identifier	nonParenHeaders		671352	0					
ANR	671427	Identifier	emplace_back		671352	1					
ANR	671428	ArgumentList	& AS_CATCH		671352	1					
ANR	671429	Argument	& AS_CATCH		671352	0					
ANR	671430	UnaryOperationExpression	& AS_CATCH		671352	0					
ANR	671431	UnaryOperator	&		671352	0					
ANR	671432	Identifier	AS_CATCH		671352	1					
ANR	671433	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_CASE )	421:1:15613:15652	671352	8	True				
ANR	671434	CallExpression	nonParenHeaders -> emplace_back ( & AS_CASE )		671352	0					
ANR	671435	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671436	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671437	Identifier	nonParenHeaders		671352	0					
ANR	671438	Identifier	emplace_back		671352	1					
ANR	671439	ArgumentList	& AS_CASE		671352	1					
ANR	671440	Argument	& AS_CASE		671352	0					
ANR	671441	UnaryOperationExpression	& AS_CASE		671352	0					
ANR	671442	UnaryOperator	&		671352	0					
ANR	671443	Identifier	AS_CASE		671352	1					
ANR	671444	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_DEFAULT )	422:1:15685:15727	671352	9	True				
ANR	671445	CallExpression	nonParenHeaders -> emplace_back ( & AS_DEFAULT )		671352	0					
ANR	671446	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671447	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671448	Identifier	nonParenHeaders		671352	0					
ANR	671449	Identifier	emplace_back		671352	1					
ANR	671450	ArgumentList	& AS_DEFAULT		671352	1					
ANR	671451	Argument	& AS_DEFAULT		671352	0					
ANR	671452	UnaryOperationExpression	& AS_DEFAULT		671352	0					
ANR	671453	UnaryOperator	&		671352	0					
ANR	671454	Identifier	AS_DEFAULT		671352	1					
ANR	671455	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_QFOREVER )	423:1:15730:15773	671352	10	True				
ANR	671456	CallExpression	nonParenHeaders -> emplace_back ( & AS_QFOREVER )		671352	0					
ANR	671457	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671458	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671459	Identifier	nonParenHeaders		671352	0					
ANR	671460	Identifier	emplace_back		671352	1					
ANR	671461	ArgumentList	& AS_QFOREVER		671352	1					
ANR	671462	Argument	& AS_QFOREVER		671352	0					
ANR	671463	UnaryOperationExpression	& AS_QFOREVER		671352	0					
ANR	671464	UnaryOperator	&		671352	0					
ANR	671465	Identifier	AS_QFOREVER		671352	1					
ANR	671466	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_FOREVER )	424:1:15782:15824	671352	11	True				
ANR	671467	CallExpression	nonParenHeaders -> emplace_back ( & AS_FOREVER )		671352	0					
ANR	671468	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671469	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671470	Identifier	nonParenHeaders		671352	0					
ANR	671471	Identifier	emplace_back		671352	1					
ANR	671472	ArgumentList	& AS_FOREVER		671352	1					
ANR	671473	Argument	& AS_FOREVER		671352	0					
ANR	671474	UnaryOperationExpression	& AS_FOREVER		671352	0					
ANR	671475	UnaryOperator	&		671352	0					
ANR	671476	Identifier	AS_FOREVER		671352	1					
ANR	671477	IfStatement	if ( fileType == C_TYPE )		671352	12					
ANR	671478	Condition	fileType == C_TYPE	426:5:15841:15858	671352	0	True				
ANR	671479	EqualityExpression	fileType == C_TYPE		671352	0		==			
ANR	671480	Identifier	fileType		671352	0					
ANR	671481	Identifier	C_TYPE		671352	1					
ANR	671482	CompoundStatement		20:1:587:587	671352	1					
ANR	671483	ExpressionStatement	nonParenHeaders -> emplace_back ( & _AS_TRY )	428:2:15866:15905	671352	0	True				
ANR	671484	CallExpression	nonParenHeaders -> emplace_back ( & _AS_TRY )		671352	0					
ANR	671485	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671486	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671487	Identifier	nonParenHeaders		671352	0					
ANR	671488	Identifier	emplace_back		671352	1					
ANR	671489	ArgumentList	& _AS_TRY		671352	1					
ANR	671490	Argument	& _AS_TRY		671352	0					
ANR	671491	UnaryOperationExpression	& _AS_TRY		671352	0					
ANR	671492	UnaryOperator	&		671352	0					
ANR	671493	Identifier	_AS_TRY		671352	1					
ANR	671494	ExpressionStatement	nonParenHeaders -> emplace_back ( & _AS_FINALLY )	429:2:15919:15962	671352	1	True				
ANR	671495	CallExpression	nonParenHeaders -> emplace_back ( & _AS_FINALLY )		671352	0					
ANR	671496	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671497	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671498	Identifier	nonParenHeaders		671352	0					
ANR	671499	Identifier	emplace_back		671352	1					
ANR	671500	ArgumentList	& _AS_FINALLY		671352	1					
ANR	671501	Argument	& _AS_FINALLY		671352	0					
ANR	671502	UnaryOperationExpression	& _AS_FINALLY		671352	0					
ANR	671503	UnaryOperator	&		671352	0					
ANR	671504	Identifier	_AS_FINALLY		671352	1					
ANR	671505	IfStatement	if ( fileType == JAVA_TYPE )		671352	13					
ANR	671506	Condition	fileType == JAVA_TYPE	431:5:15985:16005	671352	0	True				
ANR	671507	EqualityExpression	fileType == JAVA_TYPE		671352	0		==			
ANR	671508	Identifier	fileType		671352	0					
ANR	671509	Identifier	JAVA_TYPE		671352	1					
ANR	671510	CompoundStatement		25:1:734:734	671352	1					
ANR	671511	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_FINALLY )	433:2:16013:16055	671352	0	True				
ANR	671512	CallExpression	nonParenHeaders -> emplace_back ( & AS_FINALLY )		671352	0					
ANR	671513	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671514	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671515	Identifier	nonParenHeaders		671352	0					
ANR	671516	Identifier	emplace_back		671352	1					
ANR	671517	ArgumentList	& AS_FINALLY		671352	1					
ANR	671518	Argument	& AS_FINALLY		671352	0					
ANR	671519	UnaryOperationExpression	& AS_FINALLY		671352	0					
ANR	671520	UnaryOperator	&		671352	0					
ANR	671521	Identifier	AS_FINALLY		671352	1					
ANR	671522	IfStatement	if ( fileType == SHARP_TYPE )		671352	14					
ANR	671523	Condition	fileType == SHARP_TYPE	436:5:16066:16087	671352	0	True				
ANR	671524	EqualityExpression	fileType == SHARP_TYPE		671352	0		==			
ANR	671525	Identifier	fileType		671352	0					
ANR	671526	Identifier	SHARP_TYPE		671352	1					
ANR	671527	CompoundStatement		30:1:816:816	671352	1					
ANR	671528	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_FINALLY )	438:2:16095:16137	671352	0	True				
ANR	671529	CallExpression	nonParenHeaders -> emplace_back ( & AS_FINALLY )		671352	0					
ANR	671530	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671531	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671532	Identifier	nonParenHeaders		671352	0					
ANR	671533	Identifier	emplace_back		671352	1					
ANR	671534	ArgumentList	& AS_FINALLY		671352	1					
ANR	671535	Argument	& AS_FINALLY		671352	0					
ANR	671536	UnaryOperationExpression	& AS_FINALLY		671352	0					
ANR	671537	UnaryOperator	&		671352	0					
ANR	671538	Identifier	AS_FINALLY		671352	1					
ANR	671539	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_GET )	439:2:16141:16179	671352	1	True				
ANR	671540	CallExpression	nonParenHeaders -> emplace_back ( & AS_GET )		671352	0					
ANR	671541	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671542	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671543	Identifier	nonParenHeaders		671352	0					
ANR	671544	Identifier	emplace_back		671352	1					
ANR	671545	ArgumentList	& AS_GET		671352	1					
ANR	671546	Argument	& AS_GET		671352	0					
ANR	671547	UnaryOperationExpression	& AS_GET		671352	0					
ANR	671548	UnaryOperator	&		671352	0					
ANR	671549	Identifier	AS_GET		671352	1					
ANR	671550	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_SET )	440:2:16183:16221	671352	2	True				
ANR	671551	CallExpression	nonParenHeaders -> emplace_back ( & AS_SET )		671352	0					
ANR	671552	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671553	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671554	Identifier	nonParenHeaders		671352	0					
ANR	671555	Identifier	emplace_back		671352	1					
ANR	671556	ArgumentList	& AS_SET		671352	1					
ANR	671557	Argument	& AS_SET		671352	0					
ANR	671558	UnaryOperationExpression	& AS_SET		671352	0					
ANR	671559	UnaryOperator	&		671352	0					
ANR	671560	Identifier	AS_SET		671352	1					
ANR	671561	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_ADD )	441:2:16225:16263	671352	3	True				
ANR	671562	CallExpression	nonParenHeaders -> emplace_back ( & AS_ADD )		671352	0					
ANR	671563	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671564	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671565	Identifier	nonParenHeaders		671352	0					
ANR	671566	Identifier	emplace_back		671352	1					
ANR	671567	ArgumentList	& AS_ADD		671352	1					
ANR	671568	Argument	& AS_ADD		671352	0					
ANR	671569	UnaryOperationExpression	& AS_ADD		671352	0					
ANR	671570	UnaryOperator	&		671352	0					
ANR	671571	Identifier	AS_ADD		671352	1					
ANR	671572	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_REMOVE )	442:2:16267:16308	671352	4	True				
ANR	671573	CallExpression	nonParenHeaders -> emplace_back ( & AS_REMOVE )		671352	0					
ANR	671574	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671575	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671576	Identifier	nonParenHeaders		671352	0					
ANR	671577	Identifier	emplace_back		671352	1					
ANR	671578	ArgumentList	& AS_REMOVE		671352	1					
ANR	671579	Argument	& AS_REMOVE		671352	0					
ANR	671580	UnaryOperationExpression	& AS_REMOVE		671352	0					
ANR	671581	UnaryOperator	&		671352	0					
ANR	671582	Identifier	AS_REMOVE		671352	1					
ANR	671583	IfStatement	if ( beautifier )		671352	15					
ANR	671584	Condition	beautifier	445:5:16319:16328	671352	0	True				
ANR	671585	Identifier	beautifier		671352	0					
ANR	671586	CompoundStatement		39:1:1057:1057	671352	1					
ANR	671587	IfStatement	if ( fileType == C_TYPE )		671352	0					
ANR	671588	Condition	fileType == C_TYPE	447:6:16340:16357	671352	0	True				
ANR	671589	EqualityExpression	fileType == C_TYPE		671352	0		==			
ANR	671590	Identifier	fileType		671352	0					
ANR	671591	Identifier	C_TYPE		671352	1					
ANR	671592	CompoundStatement		41:2:1087:1087	671352	1					
ANR	671593	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_TEMPLATE )	449:3:16367:16410	671352	0	True				
ANR	671594	CallExpression	nonParenHeaders -> emplace_back ( & AS_TEMPLATE )		671352	0					
ANR	671595	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671596	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671597	Identifier	nonParenHeaders		671352	0					
ANR	671598	Identifier	emplace_back		671352	1					
ANR	671599	ArgumentList	& AS_TEMPLATE		671352	1					
ANR	671600	Argument	& AS_TEMPLATE		671352	0					
ANR	671601	UnaryOperationExpression	& AS_TEMPLATE		671352	0					
ANR	671602	UnaryOperator	&		671352	0					
ANR	671603	Identifier	AS_TEMPLATE		671352	1					
ANR	671604	IfStatement	if ( fileType == JAVA_TYPE )		671352	1					
ANR	671605	Condition	fileType == JAVA_TYPE	451:6:16422:16442	671352	0	True				
ANR	671606	EqualityExpression	fileType == JAVA_TYPE		671352	0		==			
ANR	671607	Identifier	fileType		671352	0					
ANR	671608	Identifier	JAVA_TYPE		671352	1					
ANR	671609	CompoundStatement		45:2:1172:1172	671352	1					
ANR	671610	ExpressionStatement	nonParenHeaders -> emplace_back ( & AS_STATIC )	453:3:16452:16493	671352	0	True				
ANR	671611	CallExpression	nonParenHeaders -> emplace_back ( & AS_STATIC )		671352	0					
ANR	671612	Callee	nonParenHeaders -> emplace_back		671352	0					
ANR	671613	PtrMemberAccess	nonParenHeaders -> emplace_back		671352	0					
ANR	671614	Identifier	nonParenHeaders		671352	0					
ANR	671615	Identifier	emplace_back		671352	1					
ANR	671616	ArgumentList	& AS_STATIC		671352	1					
ANR	671617	Argument	& AS_STATIC		671352	0					
ANR	671618	UnaryOperationExpression	& AS_STATIC		671352	0					
ANR	671619	UnaryOperator	&		671352	0					
ANR	671620	Identifier	AS_STATIC		671352	1					
ANR	671621	ExpressionStatement	assert ( nonParenHeaders -> size ( ) < elements )	457:1:16504:16546	671352	16	True				
ANR	671622	CallExpression	assert ( nonParenHeaders -> size ( ) < elements )		671352	0					
ANR	671623	Callee	assert		671352	0					
ANR	671624	Identifier	assert		671352	0					
ANR	671625	ArgumentList	nonParenHeaders -> size ( ) < elements		671352	1					
ANR	671626	Argument	nonParenHeaders -> size ( ) < elements		671352	0					
ANR	671627	RelationalExpression	nonParenHeaders -> size ( ) < elements		671352	0		<			
ANR	671628	CallExpression	nonParenHeaders -> size ( )		671352	0					
ANR	671629	Callee	nonParenHeaders -> size		671352	0					
ANR	671630	PtrMemberAccess	nonParenHeaders -> size		671352	0					
ANR	671631	Identifier	nonParenHeaders		671352	0					
ANR	671632	Identifier	size		671352	1					
ANR	671633	ArgumentList			671352	1					
ANR	671634	Identifier	elements		671352	1					
ANR	671635	ExpressionStatement	"sort ( nonParenHeaders -> begin ( ) , nonParenHeaders -> end ( ) , sortOnName )"	458:1:16549:16615	671352	17	True				
ANR	671636	CallExpression	"sort ( nonParenHeaders -> begin ( ) , nonParenHeaders -> end ( ) , sortOnName )"		671352	0					
ANR	671637	Callee	sort		671352	0					
ANR	671638	Identifier	sort		671352	0					
ANR	671639	ArgumentList	nonParenHeaders -> begin ( )		671352	1					
ANR	671640	Argument	nonParenHeaders -> begin ( )		671352	0					
ANR	671641	CallExpression	nonParenHeaders -> begin ( )		671352	0					
ANR	671642	Callee	nonParenHeaders -> begin		671352	0					
ANR	671643	PtrMemberAccess	nonParenHeaders -> begin		671352	0					
ANR	671644	Identifier	nonParenHeaders		671352	0					
ANR	671645	Identifier	begin		671352	1					
ANR	671646	ArgumentList			671352	1					
ANR	671647	Argument	nonParenHeaders -> end ( )		671352	1					
ANR	671648	CallExpression	nonParenHeaders -> end ( )		671352	0					
ANR	671649	Callee	nonParenHeaders -> end		671352	0					
ANR	671650	PtrMemberAccess	nonParenHeaders -> end		671352	0					
ANR	671651	Identifier	nonParenHeaders		671352	0					
ANR	671652	Identifier	end		671352	1					
ANR	671653	ArgumentList			671352	1					
ANR	671654	Argument	sortOnName		671352	2					
ANR	671655	Identifier	sortOnName		671352	0					
ANR	671656	ReturnType	void		671352	1					
ANR	671657	Identifier	ASResource :: buildNonParenHeaders		671352	2					
ANR	671658	ParameterList	"vector < const string * > * nonParenHeaders , int fileType , bool beautifier"		671352	3					
ANR	671659	Parameter	vector < const string * > * nonParenHeaders	407:38:15203:15240	671352	0	True				
ANR	671660	ParameterType	vector < const string * > *		671352	0					
ANR	671661	Identifier	nonParenHeaders		671352	1					
ANR	671662	Parameter	int fileType	407:78:15243:15254	671352	1	True				
ANR	671663	ParameterType	int		671352	0					
ANR	671664	Identifier	fileType		671352	1					
ANR	671665	Parameter	bool beautifier	407:92:15257:15271	671352	2	True				
ANR	671666	ParameterType	bool		671352	0					
ANR	671667	Identifier	beautifier		671352	1					
ANR	671668	CFGEntryNode	ENTRY		671352		True				
ANR	671669	CFGExitNode	EXIT		671352		True				
ANR	671670	Symbol	C_TYPE		671352						
ANR	671671	Symbol	* nonParenHeaders		671352						
ANR	671672	Symbol	sortOnName		671352						
ANR	671673	Symbol	beautifier		671352						
ANR	671674	Symbol	nonParenHeaders -> begin		671352						
ANR	671675	Symbol	nonParenHeaders -> end		671352						
ANR	671676	Symbol	& _AS_TRY		671352						
ANR	671677	Symbol	& AS_TRY		671352						
ANR	671678	Symbol	nonParenHeaders -> size		671352						
ANR	671679	Symbol	& AS_FINALLY		671352						
ANR	671680	Symbol	& AS_CASE		671352						
ANR	671681	Symbol	& AS_QFOREVER		671352						
ANR	671682	Symbol	& _AS_FINALLY		671352						
ANR	671683	Symbol	& AS_TEMPLATE		671352						
ANR	671684	Symbol	& AS_REMOVE		671352						
ANR	671685	Symbol	false		671352						
ANR	671686	Symbol	& AS_ELSE		671352						
ANR	671687	Symbol	JAVA_TYPE		671352						
ANR	671688	Symbol	SHARP_TYPE		671352						
ANR	671689	Symbol	& AS_SET		671352						
ANR	671690	Symbol	& AS_ADD		671352						
ANR	671691	Symbol	& AS_STATIC		671352						
ANR	671692	Symbol	reserved		671352						
ANR	671693	Symbol	& AS_FOREVER		671352						
ANR	671694	Symbol	nonParenHeaders		671352						
ANR	671695	Symbol	elements		671352						
ANR	671696	Symbol	& AS_DEFAULT		671352						
ANR	671697	Symbol	true		671352						
ANR	671698	Symbol	& AS_CATCH		671352						
ANR	671699	Symbol	& AS_DO		671352						
ANR	671700	Symbol	fileType		671352						
ANR	671701	Symbol	& AS_GET		671352						
ANR	671702	Function	ASResource :: buildOperators	467:0:16768:18919							
ANR	671703	FunctionDef	"ASResource :: buildOperators (vector < const string * > * operators , int fileType)"		671702	0					
ANR	671704	CompoundStatement		468:0:16848:18919	671702	0					
ANR	671705	IdentifierDeclStatement	const size_t elements = 50 ;	469:1:16851:16877	671702	0	True				
ANR	671706	IdentifierDecl	elements = 50		671702	0					
ANR	671707	IdentifierDeclType	const size_t		671702	0					
ANR	671708	Identifier	elements		671702	1					
ANR	671709	AssignmentExpression	elements = 50		671702	2		=			
ANR	671710	Identifier	elements		671702	0					
ANR	671711	PrimaryExpression	50		671702	1					
ANR	671712	Statement	static	470:1:16880:16885	671702	1	True				
ANR	671713	IdentifierDeclStatement	bool reserved = false ;	470:8:16887:16908	671702	2	True				
ANR	671714	IdentifierDecl	reserved = false		671702	0					
ANR	671715	IdentifierDeclType	bool		671702	0					
ANR	671716	Identifier	reserved		671702	1					
ANR	671717	AssignmentExpression	reserved = false		671702	2		=			
ANR	671718	Identifier	false		671702	0					
ANR	671719	Identifier	false		671702	1					
ANR	671720	IfStatement	if ( ! reserved )		671702	3					
ANR	671721	Condition	! reserved	471:5:16915:16923	671702	0	True				
ANR	671722	UnaryOperationExpression	! reserved		671702	0					
ANR	671723	UnaryOperator	!		671702	0					
ANR	671724	Identifier	reserved		671702	1					
ANR	671725	CompoundStatement		5:1:78:78	671702	1					
ANR	671726	ExpressionStatement	operators -> reserve ( elements )	473:2:16931:16959	671702	0	True				
ANR	671727	CallExpression	operators -> reserve ( elements )		671702	0					
ANR	671728	Callee	operators -> reserve		671702	0					
ANR	671729	PtrMemberAccess	operators -> reserve		671702	0					
ANR	671730	Identifier	operators		671702	0					
ANR	671731	Identifier	reserve		671702	1					
ANR	671732	ArgumentList	elements		671702	1					
ANR	671733	Argument	elements		671702	0					
ANR	671734	Identifier	elements		671702	0					
ANR	671735	ExpressionStatement	reserved = true	474:2:16963:16978	671702	1	True				
ANR	671736	AssignmentExpression	reserved = true		671702	0		=			
ANR	671737	Identifier	reserved		671702	0					
ANR	671738	Identifier	true		671702	1					
ANR	671739	ExpressionStatement	operators -> emplace_back ( & AS_PLUS_ASSIGN )	478:1:16986:17026	671702	4	True				
ANR	671740	CallExpression	operators -> emplace_back ( & AS_PLUS_ASSIGN )		671702	0					
ANR	671741	Callee	operators -> emplace_back		671702	0					
ANR	671742	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671743	Identifier	operators		671702	0					
ANR	671744	Identifier	emplace_back		671702	1					
ANR	671745	ArgumentList	& AS_PLUS_ASSIGN		671702	1					
ANR	671746	Argument	& AS_PLUS_ASSIGN		671702	0					
ANR	671747	UnaryOperationExpression	& AS_PLUS_ASSIGN		671702	0					
ANR	671748	UnaryOperator	&		671702	0					
ANR	671749	Identifier	AS_PLUS_ASSIGN		671702	1					
ANR	671750	ExpressionStatement	operators -> emplace_back ( & AS_MINUS_ASSIGN )	479:1:17029:17070	671702	5	True				
ANR	671751	CallExpression	operators -> emplace_back ( & AS_MINUS_ASSIGN )		671702	0					
ANR	671752	Callee	operators -> emplace_back		671702	0					
ANR	671753	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671754	Identifier	operators		671702	0					
ANR	671755	Identifier	emplace_back		671702	1					
ANR	671756	ArgumentList	& AS_MINUS_ASSIGN		671702	1					
ANR	671757	Argument	& AS_MINUS_ASSIGN		671702	0					
ANR	671758	UnaryOperationExpression	& AS_MINUS_ASSIGN		671702	0					
ANR	671759	UnaryOperator	&		671702	0					
ANR	671760	Identifier	AS_MINUS_ASSIGN		671702	1					
ANR	671761	ExpressionStatement	operators -> emplace_back ( & AS_MULT_ASSIGN )	480:1:17073:17113	671702	6	True				
ANR	671762	CallExpression	operators -> emplace_back ( & AS_MULT_ASSIGN )		671702	0					
ANR	671763	Callee	operators -> emplace_back		671702	0					
ANR	671764	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671765	Identifier	operators		671702	0					
ANR	671766	Identifier	emplace_back		671702	1					
ANR	671767	ArgumentList	& AS_MULT_ASSIGN		671702	1					
ANR	671768	Argument	& AS_MULT_ASSIGN		671702	0					
ANR	671769	UnaryOperationExpression	& AS_MULT_ASSIGN		671702	0					
ANR	671770	UnaryOperator	&		671702	0					
ANR	671771	Identifier	AS_MULT_ASSIGN		671702	1					
ANR	671772	ExpressionStatement	operators -> emplace_back ( & AS_DIV_ASSIGN )	481:1:17116:17155	671702	7	True				
ANR	671773	CallExpression	operators -> emplace_back ( & AS_DIV_ASSIGN )		671702	0					
ANR	671774	Callee	operators -> emplace_back		671702	0					
ANR	671775	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671776	Identifier	operators		671702	0					
ANR	671777	Identifier	emplace_back		671702	1					
ANR	671778	ArgumentList	& AS_DIV_ASSIGN		671702	1					
ANR	671779	Argument	& AS_DIV_ASSIGN		671702	0					
ANR	671780	UnaryOperationExpression	& AS_DIV_ASSIGN		671702	0					
ANR	671781	UnaryOperator	&		671702	0					
ANR	671782	Identifier	AS_DIV_ASSIGN		671702	1					
ANR	671783	ExpressionStatement	operators -> emplace_back ( & AS_MOD_ASSIGN )	482:1:17158:17197	671702	8	True				
ANR	671784	CallExpression	operators -> emplace_back ( & AS_MOD_ASSIGN )		671702	0					
ANR	671785	Callee	operators -> emplace_back		671702	0					
ANR	671786	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671787	Identifier	operators		671702	0					
ANR	671788	Identifier	emplace_back		671702	1					
ANR	671789	ArgumentList	& AS_MOD_ASSIGN		671702	1					
ANR	671790	Argument	& AS_MOD_ASSIGN		671702	0					
ANR	671791	UnaryOperationExpression	& AS_MOD_ASSIGN		671702	0					
ANR	671792	UnaryOperator	&		671702	0					
ANR	671793	Identifier	AS_MOD_ASSIGN		671702	1					
ANR	671794	ExpressionStatement	operators -> emplace_back ( & AS_OR_ASSIGN )	483:1:17200:17238	671702	9	True				
ANR	671795	CallExpression	operators -> emplace_back ( & AS_OR_ASSIGN )		671702	0					
ANR	671796	Callee	operators -> emplace_back		671702	0					
ANR	671797	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671798	Identifier	operators		671702	0					
ANR	671799	Identifier	emplace_back		671702	1					
ANR	671800	ArgumentList	& AS_OR_ASSIGN		671702	1					
ANR	671801	Argument	& AS_OR_ASSIGN		671702	0					
ANR	671802	UnaryOperationExpression	& AS_OR_ASSIGN		671702	0					
ANR	671803	UnaryOperator	&		671702	0					
ANR	671804	Identifier	AS_OR_ASSIGN		671702	1					
ANR	671805	ExpressionStatement	operators -> emplace_back ( & AS_AND_ASSIGN )	484:1:17241:17280	671702	10	True				
ANR	671806	CallExpression	operators -> emplace_back ( & AS_AND_ASSIGN )		671702	0					
ANR	671807	Callee	operators -> emplace_back		671702	0					
ANR	671808	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671809	Identifier	operators		671702	0					
ANR	671810	Identifier	emplace_back		671702	1					
ANR	671811	ArgumentList	& AS_AND_ASSIGN		671702	1					
ANR	671812	Argument	& AS_AND_ASSIGN		671702	0					
ANR	671813	UnaryOperationExpression	& AS_AND_ASSIGN		671702	0					
ANR	671814	UnaryOperator	&		671702	0					
ANR	671815	Identifier	AS_AND_ASSIGN		671702	1					
ANR	671816	ExpressionStatement	operators -> emplace_back ( & AS_XOR_ASSIGN )	485:1:17283:17322	671702	11	True				
ANR	671817	CallExpression	operators -> emplace_back ( & AS_XOR_ASSIGN )		671702	0					
ANR	671818	Callee	operators -> emplace_back		671702	0					
ANR	671819	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671820	Identifier	operators		671702	0					
ANR	671821	Identifier	emplace_back		671702	1					
ANR	671822	ArgumentList	& AS_XOR_ASSIGN		671702	1					
ANR	671823	Argument	& AS_XOR_ASSIGN		671702	0					
ANR	671824	UnaryOperationExpression	& AS_XOR_ASSIGN		671702	0					
ANR	671825	UnaryOperator	&		671702	0					
ANR	671826	Identifier	AS_XOR_ASSIGN		671702	1					
ANR	671827	ExpressionStatement	operators -> emplace_back ( & AS_EQUAL )	486:1:17325:17359	671702	12	True				
ANR	671828	CallExpression	operators -> emplace_back ( & AS_EQUAL )		671702	0					
ANR	671829	Callee	operators -> emplace_back		671702	0					
ANR	671830	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671831	Identifier	operators		671702	0					
ANR	671832	Identifier	emplace_back		671702	1					
ANR	671833	ArgumentList	& AS_EQUAL		671702	1					
ANR	671834	Argument	& AS_EQUAL		671702	0					
ANR	671835	UnaryOperationExpression	& AS_EQUAL		671702	0					
ANR	671836	UnaryOperator	&		671702	0					
ANR	671837	Identifier	AS_EQUAL		671702	1					
ANR	671838	ExpressionStatement	operators -> emplace_back ( & AS_PLUS_PLUS )	487:1:17362:17400	671702	13	True				
ANR	671839	CallExpression	operators -> emplace_back ( & AS_PLUS_PLUS )		671702	0					
ANR	671840	Callee	operators -> emplace_back		671702	0					
ANR	671841	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671842	Identifier	operators		671702	0					
ANR	671843	Identifier	emplace_back		671702	1					
ANR	671844	ArgumentList	& AS_PLUS_PLUS		671702	1					
ANR	671845	Argument	& AS_PLUS_PLUS		671702	0					
ANR	671846	UnaryOperationExpression	& AS_PLUS_PLUS		671702	0					
ANR	671847	UnaryOperator	&		671702	0					
ANR	671848	Identifier	AS_PLUS_PLUS		671702	1					
ANR	671849	ExpressionStatement	operators -> emplace_back ( & AS_MINUS_MINUS )	488:1:17403:17443	671702	14	True				
ANR	671850	CallExpression	operators -> emplace_back ( & AS_MINUS_MINUS )		671702	0					
ANR	671851	Callee	operators -> emplace_back		671702	0					
ANR	671852	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671853	Identifier	operators		671702	0					
ANR	671854	Identifier	emplace_back		671702	1					
ANR	671855	ArgumentList	& AS_MINUS_MINUS		671702	1					
ANR	671856	Argument	& AS_MINUS_MINUS		671702	0					
ANR	671857	UnaryOperationExpression	& AS_MINUS_MINUS		671702	0					
ANR	671858	UnaryOperator	&		671702	0					
ANR	671859	Identifier	AS_MINUS_MINUS		671702	1					
ANR	671860	ExpressionStatement	operators -> emplace_back ( & AS_NOT_EQUAL )	489:1:17446:17484	671702	15	True				
ANR	671861	CallExpression	operators -> emplace_back ( & AS_NOT_EQUAL )		671702	0					
ANR	671862	Callee	operators -> emplace_back		671702	0					
ANR	671863	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671864	Identifier	operators		671702	0					
ANR	671865	Identifier	emplace_back		671702	1					
ANR	671866	ArgumentList	& AS_NOT_EQUAL		671702	1					
ANR	671867	Argument	& AS_NOT_EQUAL		671702	0					
ANR	671868	UnaryOperationExpression	& AS_NOT_EQUAL		671702	0					
ANR	671869	UnaryOperator	&		671702	0					
ANR	671870	Identifier	AS_NOT_EQUAL		671702	1					
ANR	671871	ExpressionStatement	operators -> emplace_back ( & AS_GR_EQUAL )	490:1:17487:17524	671702	16	True				
ANR	671872	CallExpression	operators -> emplace_back ( & AS_GR_EQUAL )		671702	0					
ANR	671873	Callee	operators -> emplace_back		671702	0					
ANR	671874	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671875	Identifier	operators		671702	0					
ANR	671876	Identifier	emplace_back		671702	1					
ANR	671877	ArgumentList	& AS_GR_EQUAL		671702	1					
ANR	671878	Argument	& AS_GR_EQUAL		671702	0					
ANR	671879	UnaryOperationExpression	& AS_GR_EQUAL		671702	0					
ANR	671880	UnaryOperator	&		671702	0					
ANR	671881	Identifier	AS_GR_EQUAL		671702	1					
ANR	671882	ExpressionStatement	operators -> emplace_back ( & AS_GR_GR_GR_ASSIGN )	491:1:17527:17571	671702	17	True				
ANR	671883	CallExpression	operators -> emplace_back ( & AS_GR_GR_GR_ASSIGN )		671702	0					
ANR	671884	Callee	operators -> emplace_back		671702	0					
ANR	671885	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671886	Identifier	operators		671702	0					
ANR	671887	Identifier	emplace_back		671702	1					
ANR	671888	ArgumentList	& AS_GR_GR_GR_ASSIGN		671702	1					
ANR	671889	Argument	& AS_GR_GR_GR_ASSIGN		671702	0					
ANR	671890	UnaryOperationExpression	& AS_GR_GR_GR_ASSIGN		671702	0					
ANR	671891	UnaryOperator	&		671702	0					
ANR	671892	Identifier	AS_GR_GR_GR_ASSIGN		671702	1					
ANR	671893	ExpressionStatement	operators -> emplace_back ( & AS_GR_GR_ASSIGN )	492:1:17574:17615	671702	18	True				
ANR	671894	CallExpression	operators -> emplace_back ( & AS_GR_GR_ASSIGN )		671702	0					
ANR	671895	Callee	operators -> emplace_back		671702	0					
ANR	671896	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671897	Identifier	operators		671702	0					
ANR	671898	Identifier	emplace_back		671702	1					
ANR	671899	ArgumentList	& AS_GR_GR_ASSIGN		671702	1					
ANR	671900	Argument	& AS_GR_GR_ASSIGN		671702	0					
ANR	671901	UnaryOperationExpression	& AS_GR_GR_ASSIGN		671702	0					
ANR	671902	UnaryOperator	&		671702	0					
ANR	671903	Identifier	AS_GR_GR_ASSIGN		671702	1					
ANR	671904	ExpressionStatement	operators -> emplace_back ( & AS_GR_GR_GR )	493:1:17618:17655	671702	19	True				
ANR	671905	CallExpression	operators -> emplace_back ( & AS_GR_GR_GR )		671702	0					
ANR	671906	Callee	operators -> emplace_back		671702	0					
ANR	671907	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671908	Identifier	operators		671702	0					
ANR	671909	Identifier	emplace_back		671702	1					
ANR	671910	ArgumentList	& AS_GR_GR_GR		671702	1					
ANR	671911	Argument	& AS_GR_GR_GR		671702	0					
ANR	671912	UnaryOperationExpression	& AS_GR_GR_GR		671702	0					
ANR	671913	UnaryOperator	&		671702	0					
ANR	671914	Identifier	AS_GR_GR_GR		671702	1					
ANR	671915	ExpressionStatement	operators -> emplace_back ( & AS_GR_GR )	494:1:17658:17692	671702	20	True				
ANR	671916	CallExpression	operators -> emplace_back ( & AS_GR_GR )		671702	0					
ANR	671917	Callee	operators -> emplace_back		671702	0					
ANR	671918	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671919	Identifier	operators		671702	0					
ANR	671920	Identifier	emplace_back		671702	1					
ANR	671921	ArgumentList	& AS_GR_GR		671702	1					
ANR	671922	Argument	& AS_GR_GR		671702	0					
ANR	671923	UnaryOperationExpression	& AS_GR_GR		671702	0					
ANR	671924	UnaryOperator	&		671702	0					
ANR	671925	Identifier	AS_GR_GR		671702	1					
ANR	671926	ExpressionStatement	operators -> emplace_back ( & AS_LS_EQUAL )	495:1:17695:17732	671702	21	True				
ANR	671927	CallExpression	operators -> emplace_back ( & AS_LS_EQUAL )		671702	0					
ANR	671928	Callee	operators -> emplace_back		671702	0					
ANR	671929	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671930	Identifier	operators		671702	0					
ANR	671931	Identifier	emplace_back		671702	1					
ANR	671932	ArgumentList	& AS_LS_EQUAL		671702	1					
ANR	671933	Argument	& AS_LS_EQUAL		671702	0					
ANR	671934	UnaryOperationExpression	& AS_LS_EQUAL		671702	0					
ANR	671935	UnaryOperator	&		671702	0					
ANR	671936	Identifier	AS_LS_EQUAL		671702	1					
ANR	671937	ExpressionStatement	operators -> emplace_back ( & AS_LS_LS_LS_ASSIGN )	496:1:17735:17779	671702	22	True				
ANR	671938	CallExpression	operators -> emplace_back ( & AS_LS_LS_LS_ASSIGN )		671702	0					
ANR	671939	Callee	operators -> emplace_back		671702	0					
ANR	671940	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671941	Identifier	operators		671702	0					
ANR	671942	Identifier	emplace_back		671702	1					
ANR	671943	ArgumentList	& AS_LS_LS_LS_ASSIGN		671702	1					
ANR	671944	Argument	& AS_LS_LS_LS_ASSIGN		671702	0					
ANR	671945	UnaryOperationExpression	& AS_LS_LS_LS_ASSIGN		671702	0					
ANR	671946	UnaryOperator	&		671702	0					
ANR	671947	Identifier	AS_LS_LS_LS_ASSIGN		671702	1					
ANR	671948	ExpressionStatement	operators -> emplace_back ( & AS_LS_LS_ASSIGN )	497:1:17782:17823	671702	23	True				
ANR	671949	CallExpression	operators -> emplace_back ( & AS_LS_LS_ASSIGN )		671702	0					
ANR	671950	Callee	operators -> emplace_back		671702	0					
ANR	671951	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671952	Identifier	operators		671702	0					
ANR	671953	Identifier	emplace_back		671702	1					
ANR	671954	ArgumentList	& AS_LS_LS_ASSIGN		671702	1					
ANR	671955	Argument	& AS_LS_LS_ASSIGN		671702	0					
ANR	671956	UnaryOperationExpression	& AS_LS_LS_ASSIGN		671702	0					
ANR	671957	UnaryOperator	&		671702	0					
ANR	671958	Identifier	AS_LS_LS_ASSIGN		671702	1					
ANR	671959	ExpressionStatement	operators -> emplace_back ( & AS_LS_LS_LS )	498:1:17826:17863	671702	24	True				
ANR	671960	CallExpression	operators -> emplace_back ( & AS_LS_LS_LS )		671702	0					
ANR	671961	Callee	operators -> emplace_back		671702	0					
ANR	671962	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671963	Identifier	operators		671702	0					
ANR	671964	Identifier	emplace_back		671702	1					
ANR	671965	ArgumentList	& AS_LS_LS_LS		671702	1					
ANR	671966	Argument	& AS_LS_LS_LS		671702	0					
ANR	671967	UnaryOperationExpression	& AS_LS_LS_LS		671702	0					
ANR	671968	UnaryOperator	&		671702	0					
ANR	671969	Identifier	AS_LS_LS_LS		671702	1					
ANR	671970	ExpressionStatement	operators -> emplace_back ( & AS_LS_LS )	499:1:17866:17900	671702	25	True				
ANR	671971	CallExpression	operators -> emplace_back ( & AS_LS_LS )		671702	0					
ANR	671972	Callee	operators -> emplace_back		671702	0					
ANR	671973	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671974	Identifier	operators		671702	0					
ANR	671975	Identifier	emplace_back		671702	1					
ANR	671976	ArgumentList	& AS_LS_LS		671702	1					
ANR	671977	Argument	& AS_LS_LS		671702	0					
ANR	671978	UnaryOperationExpression	& AS_LS_LS		671702	0					
ANR	671979	UnaryOperator	&		671702	0					
ANR	671980	Identifier	AS_LS_LS		671702	1					
ANR	671981	ExpressionStatement	operators -> emplace_back ( & AS_QUESTION_QUESTION )	500:1:17903:17949	671702	26	True				
ANR	671982	CallExpression	operators -> emplace_back ( & AS_QUESTION_QUESTION )		671702	0					
ANR	671983	Callee	operators -> emplace_back		671702	0					
ANR	671984	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671985	Identifier	operators		671702	0					
ANR	671986	Identifier	emplace_back		671702	1					
ANR	671987	ArgumentList	& AS_QUESTION_QUESTION		671702	1					
ANR	671988	Argument	& AS_QUESTION_QUESTION		671702	0					
ANR	671989	UnaryOperationExpression	& AS_QUESTION_QUESTION		671702	0					
ANR	671990	UnaryOperator	&		671702	0					
ANR	671991	Identifier	AS_QUESTION_QUESTION		671702	1					
ANR	671992	ExpressionStatement	operators -> emplace_back ( & AS_LAMBDA )	501:1:17952:17987	671702	27	True				
ANR	671993	CallExpression	operators -> emplace_back ( & AS_LAMBDA )		671702	0					
ANR	671994	Callee	operators -> emplace_back		671702	0					
ANR	671995	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	671996	Identifier	operators		671702	0					
ANR	671997	Identifier	emplace_back		671702	1					
ANR	671998	ArgumentList	& AS_LAMBDA		671702	1					
ANR	671999	Argument	& AS_LAMBDA		671702	0					
ANR	672000	UnaryOperationExpression	& AS_LAMBDA		671702	0					
ANR	672001	UnaryOperator	&		671702	0					
ANR	672002	Identifier	AS_LAMBDA		671702	1					
ANR	672003	ExpressionStatement	operators -> emplace_back ( & AS_ARROW )	502:1:17990:18024	671702	28	True				
ANR	672004	CallExpression	operators -> emplace_back ( & AS_ARROW )		671702	0					
ANR	672005	Callee	operators -> emplace_back		671702	0					
ANR	672006	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672007	Identifier	operators		671702	0					
ANR	672008	Identifier	emplace_back		671702	1					
ANR	672009	ArgumentList	& AS_ARROW		671702	1					
ANR	672010	Argument	& AS_ARROW		671702	0					
ANR	672011	UnaryOperationExpression	& AS_ARROW		671702	0					
ANR	672012	UnaryOperator	&		671702	0					
ANR	672013	Identifier	AS_ARROW		671702	1					
ANR	672014	ExpressionStatement	operators -> emplace_back ( & AS_AND )	503:1:18027:18059	671702	29	True				
ANR	672015	CallExpression	operators -> emplace_back ( & AS_AND )		671702	0					
ANR	672016	Callee	operators -> emplace_back		671702	0					
ANR	672017	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672018	Identifier	operators		671702	0					
ANR	672019	Identifier	emplace_back		671702	1					
ANR	672020	ArgumentList	& AS_AND		671702	1					
ANR	672021	Argument	& AS_AND		671702	0					
ANR	672022	UnaryOperationExpression	& AS_AND		671702	0					
ANR	672023	UnaryOperator	&		671702	0					
ANR	672024	Identifier	AS_AND		671702	1					
ANR	672025	ExpressionStatement	operators -> emplace_back ( & AS_OR )	504:1:18062:18093	671702	30	True				
ANR	672026	CallExpression	operators -> emplace_back ( & AS_OR )		671702	0					
ANR	672027	Callee	operators -> emplace_back		671702	0					
ANR	672028	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672029	Identifier	operators		671702	0					
ANR	672030	Identifier	emplace_back		671702	1					
ANR	672031	ArgumentList	& AS_OR		671702	1					
ANR	672032	Argument	& AS_OR		671702	0					
ANR	672033	UnaryOperationExpression	& AS_OR		671702	0					
ANR	672034	UnaryOperator	&		671702	0					
ANR	672035	Identifier	AS_OR		671702	1					
ANR	672036	ExpressionStatement	operators -> emplace_back ( & AS_SCOPE_RESOLUTION )	505:1:18096:18141	671702	31	True				
ANR	672037	CallExpression	operators -> emplace_back ( & AS_SCOPE_RESOLUTION )		671702	0					
ANR	672038	Callee	operators -> emplace_back		671702	0					
ANR	672039	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672040	Identifier	operators		671702	0					
ANR	672041	Identifier	emplace_back		671702	1					
ANR	672042	ArgumentList	& AS_SCOPE_RESOLUTION		671702	1					
ANR	672043	Argument	& AS_SCOPE_RESOLUTION		671702	0					
ANR	672044	UnaryOperationExpression	& AS_SCOPE_RESOLUTION		671702	0					
ANR	672045	UnaryOperator	&		671702	0					
ANR	672046	Identifier	AS_SCOPE_RESOLUTION		671702	1					
ANR	672047	ExpressionStatement	operators -> emplace_back ( & AS_PLUS )	506:1:18144:18177	671702	32	True				
ANR	672048	CallExpression	operators -> emplace_back ( & AS_PLUS )		671702	0					
ANR	672049	Callee	operators -> emplace_back		671702	0					
ANR	672050	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672051	Identifier	operators		671702	0					
ANR	672052	Identifier	emplace_back		671702	1					
ANR	672053	ArgumentList	& AS_PLUS		671702	1					
ANR	672054	Argument	& AS_PLUS		671702	0					
ANR	672055	UnaryOperationExpression	& AS_PLUS		671702	0					
ANR	672056	UnaryOperator	&		671702	0					
ANR	672057	Identifier	AS_PLUS		671702	1					
ANR	672058	ExpressionStatement	operators -> emplace_back ( & AS_MINUS )	507:1:18180:18214	671702	33	True				
ANR	672059	CallExpression	operators -> emplace_back ( & AS_MINUS )		671702	0					
ANR	672060	Callee	operators -> emplace_back		671702	0					
ANR	672061	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672062	Identifier	operators		671702	0					
ANR	672063	Identifier	emplace_back		671702	1					
ANR	672064	ArgumentList	& AS_MINUS		671702	1					
ANR	672065	Argument	& AS_MINUS		671702	0					
ANR	672066	UnaryOperationExpression	& AS_MINUS		671702	0					
ANR	672067	UnaryOperator	&		671702	0					
ANR	672068	Identifier	AS_MINUS		671702	1					
ANR	672069	ExpressionStatement	operators -> emplace_back ( & AS_MULT )	508:1:18217:18250	671702	34	True				
ANR	672070	CallExpression	operators -> emplace_back ( & AS_MULT )		671702	0					
ANR	672071	Callee	operators -> emplace_back		671702	0					
ANR	672072	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672073	Identifier	operators		671702	0					
ANR	672074	Identifier	emplace_back		671702	1					
ANR	672075	ArgumentList	& AS_MULT		671702	1					
ANR	672076	Argument	& AS_MULT		671702	0					
ANR	672077	UnaryOperationExpression	& AS_MULT		671702	0					
ANR	672078	UnaryOperator	&		671702	0					
ANR	672079	Identifier	AS_MULT		671702	1					
ANR	672080	ExpressionStatement	operators -> emplace_back ( & AS_DIV )	509:1:18253:18285	671702	35	True				
ANR	672081	CallExpression	operators -> emplace_back ( & AS_DIV )		671702	0					
ANR	672082	Callee	operators -> emplace_back		671702	0					
ANR	672083	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672084	Identifier	operators		671702	0					
ANR	672085	Identifier	emplace_back		671702	1					
ANR	672086	ArgumentList	& AS_DIV		671702	1					
ANR	672087	Argument	& AS_DIV		671702	0					
ANR	672088	UnaryOperationExpression	& AS_DIV		671702	0					
ANR	672089	UnaryOperator	&		671702	0					
ANR	672090	Identifier	AS_DIV		671702	1					
ANR	672091	ExpressionStatement	operators -> emplace_back ( & AS_MOD )	510:1:18288:18320	671702	36	True				
ANR	672092	CallExpression	operators -> emplace_back ( & AS_MOD )		671702	0					
ANR	672093	Callee	operators -> emplace_back		671702	0					
ANR	672094	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672095	Identifier	operators		671702	0					
ANR	672096	Identifier	emplace_back		671702	1					
ANR	672097	ArgumentList	& AS_MOD		671702	1					
ANR	672098	Argument	& AS_MOD		671702	0					
ANR	672099	UnaryOperationExpression	& AS_MOD		671702	0					
ANR	672100	UnaryOperator	&		671702	0					
ANR	672101	Identifier	AS_MOD		671702	1					
ANR	672102	ExpressionStatement	operators -> emplace_back ( & AS_QUESTION )	511:1:18323:18360	671702	37	True				
ANR	672103	CallExpression	operators -> emplace_back ( & AS_QUESTION )		671702	0					
ANR	672104	Callee	operators -> emplace_back		671702	0					
ANR	672105	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672106	Identifier	operators		671702	0					
ANR	672107	Identifier	emplace_back		671702	1					
ANR	672108	ArgumentList	& AS_QUESTION		671702	1					
ANR	672109	Argument	& AS_QUESTION		671702	0					
ANR	672110	UnaryOperationExpression	& AS_QUESTION		671702	0					
ANR	672111	UnaryOperator	&		671702	0					
ANR	672112	Identifier	AS_QUESTION		671702	1					
ANR	672113	ExpressionStatement	operators -> emplace_back ( & AS_COLON )	512:1:18363:18397	671702	38	True				
ANR	672114	CallExpression	operators -> emplace_back ( & AS_COLON )		671702	0					
ANR	672115	Callee	operators -> emplace_back		671702	0					
ANR	672116	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672117	Identifier	operators		671702	0					
ANR	672118	Identifier	emplace_back		671702	1					
ANR	672119	ArgumentList	& AS_COLON		671702	1					
ANR	672120	Argument	& AS_COLON		671702	0					
ANR	672121	UnaryOperationExpression	& AS_COLON		671702	0					
ANR	672122	UnaryOperator	&		671702	0					
ANR	672123	Identifier	AS_COLON		671702	1					
ANR	672124	ExpressionStatement	operators -> emplace_back ( & AS_ASSIGN )	513:1:18400:18435	671702	39	True				
ANR	672125	CallExpression	operators -> emplace_back ( & AS_ASSIGN )		671702	0					
ANR	672126	Callee	operators -> emplace_back		671702	0					
ANR	672127	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672128	Identifier	operators		671702	0					
ANR	672129	Identifier	emplace_back		671702	1					
ANR	672130	ArgumentList	& AS_ASSIGN		671702	1					
ANR	672131	Argument	& AS_ASSIGN		671702	0					
ANR	672132	UnaryOperationExpression	& AS_ASSIGN		671702	0					
ANR	672133	UnaryOperator	&		671702	0					
ANR	672134	Identifier	AS_ASSIGN		671702	1					
ANR	672135	ExpressionStatement	operators -> emplace_back ( & AS_LS )	514:1:18438:18469	671702	40	True				
ANR	672136	CallExpression	operators -> emplace_back ( & AS_LS )		671702	0					
ANR	672137	Callee	operators -> emplace_back		671702	0					
ANR	672138	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672139	Identifier	operators		671702	0					
ANR	672140	Identifier	emplace_back		671702	1					
ANR	672141	ArgumentList	& AS_LS		671702	1					
ANR	672142	Argument	& AS_LS		671702	0					
ANR	672143	UnaryOperationExpression	& AS_LS		671702	0					
ANR	672144	UnaryOperator	&		671702	0					
ANR	672145	Identifier	AS_LS		671702	1					
ANR	672146	ExpressionStatement	operators -> emplace_back ( & AS_GR )	515:1:18472:18503	671702	41	True				
ANR	672147	CallExpression	operators -> emplace_back ( & AS_GR )		671702	0					
ANR	672148	Callee	operators -> emplace_back		671702	0					
ANR	672149	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672150	Identifier	operators		671702	0					
ANR	672151	Identifier	emplace_back		671702	1					
ANR	672152	ArgumentList	& AS_GR		671702	1					
ANR	672153	Argument	& AS_GR		671702	0					
ANR	672154	UnaryOperationExpression	& AS_GR		671702	0					
ANR	672155	UnaryOperator	&		671702	0					
ANR	672156	Identifier	AS_GR		671702	1					
ANR	672157	ExpressionStatement	operators -> emplace_back ( & AS_NOT )	516:1:18506:18538	671702	42	True				
ANR	672158	CallExpression	operators -> emplace_back ( & AS_NOT )		671702	0					
ANR	672159	Callee	operators -> emplace_back		671702	0					
ANR	672160	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672161	Identifier	operators		671702	0					
ANR	672162	Identifier	emplace_back		671702	1					
ANR	672163	ArgumentList	& AS_NOT		671702	1					
ANR	672164	Argument	& AS_NOT		671702	0					
ANR	672165	UnaryOperationExpression	& AS_NOT		671702	0					
ANR	672166	UnaryOperator	&		671702	0					
ANR	672167	Identifier	AS_NOT		671702	1					
ANR	672168	ExpressionStatement	operators -> emplace_back ( & AS_BIT_OR )	517:1:18541:18576	671702	43	True				
ANR	672169	CallExpression	operators -> emplace_back ( & AS_BIT_OR )		671702	0					
ANR	672170	Callee	operators -> emplace_back		671702	0					
ANR	672171	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672172	Identifier	operators		671702	0					
ANR	672173	Identifier	emplace_back		671702	1					
ANR	672174	ArgumentList	& AS_BIT_OR		671702	1					
ANR	672175	Argument	& AS_BIT_OR		671702	0					
ANR	672176	UnaryOperationExpression	& AS_BIT_OR		671702	0					
ANR	672177	UnaryOperator	&		671702	0					
ANR	672178	Identifier	AS_BIT_OR		671702	1					
ANR	672179	ExpressionStatement	operators -> emplace_back ( & AS_BIT_AND )	518:1:18579:18615	671702	44	True				
ANR	672180	CallExpression	operators -> emplace_back ( & AS_BIT_AND )		671702	0					
ANR	672181	Callee	operators -> emplace_back		671702	0					
ANR	672182	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672183	Identifier	operators		671702	0					
ANR	672184	Identifier	emplace_back		671702	1					
ANR	672185	ArgumentList	& AS_BIT_AND		671702	1					
ANR	672186	Argument	& AS_BIT_AND		671702	0					
ANR	672187	UnaryOperationExpression	& AS_BIT_AND		671702	0					
ANR	672188	UnaryOperator	&		671702	0					
ANR	672189	Identifier	AS_BIT_AND		671702	1					
ANR	672190	ExpressionStatement	operators -> emplace_back ( & AS_BIT_NOT )	519:1:18618:18654	671702	45	True				
ANR	672191	CallExpression	operators -> emplace_back ( & AS_BIT_NOT )		671702	0					
ANR	672192	Callee	operators -> emplace_back		671702	0					
ANR	672193	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672194	Identifier	operators		671702	0					
ANR	672195	Identifier	emplace_back		671702	1					
ANR	672196	ArgumentList	& AS_BIT_NOT		671702	1					
ANR	672197	Argument	& AS_BIT_NOT		671702	0					
ANR	672198	UnaryOperationExpression	& AS_BIT_NOT		671702	0					
ANR	672199	UnaryOperator	&		671702	0					
ANR	672200	Identifier	AS_BIT_NOT		671702	1					
ANR	672201	ExpressionStatement	operators -> emplace_back ( & AS_BIT_XOR )	520:1:18657:18693	671702	46	True				
ANR	672202	CallExpression	operators -> emplace_back ( & AS_BIT_XOR )		671702	0					
ANR	672203	Callee	operators -> emplace_back		671702	0					
ANR	672204	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672205	Identifier	operators		671702	0					
ANR	672206	Identifier	emplace_back		671702	1					
ANR	672207	ArgumentList	& AS_BIT_XOR		671702	1					
ANR	672208	Argument	& AS_BIT_XOR		671702	0					
ANR	672209	UnaryOperationExpression	& AS_BIT_XOR		671702	0					
ANR	672210	UnaryOperator	&		671702	0					
ANR	672211	Identifier	AS_BIT_XOR		671702	1					
ANR	672212	IfStatement	if ( fileType == C_TYPE )		671702	47					
ANR	672213	Condition	fileType == C_TYPE	521:5:18700:18717	671702	0	True				
ANR	672214	EqualityExpression	fileType == C_TYPE		671702	0		==			
ANR	672215	Identifier	fileType		671702	0					
ANR	672216	Identifier	C_TYPE		671702	1					
ANR	672217	CompoundStatement		55:1:1872:1872	671702	1					
ANR	672218	ExpressionStatement	operators -> emplace_back ( & AS_GCC_MIN_ASSIGN )	523:2:18725:18768	671702	0	True				
ANR	672219	CallExpression	operators -> emplace_back ( & AS_GCC_MIN_ASSIGN )		671702	0					
ANR	672220	Callee	operators -> emplace_back		671702	0					
ANR	672221	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672222	Identifier	operators		671702	0					
ANR	672223	Identifier	emplace_back		671702	1					
ANR	672224	ArgumentList	& AS_GCC_MIN_ASSIGN		671702	1					
ANR	672225	Argument	& AS_GCC_MIN_ASSIGN		671702	0					
ANR	672226	UnaryOperationExpression	& AS_GCC_MIN_ASSIGN		671702	0					
ANR	672227	UnaryOperator	&		671702	0					
ANR	672228	Identifier	AS_GCC_MIN_ASSIGN		671702	1					
ANR	672229	ExpressionStatement	operators -> emplace_back ( & AS_GCC_MAX_ASSIGN )	524:2:18772:18815	671702	1	True				
ANR	672230	CallExpression	operators -> emplace_back ( & AS_GCC_MAX_ASSIGN )		671702	0					
ANR	672231	Callee	operators -> emplace_back		671702	0					
ANR	672232	PtrMemberAccess	operators -> emplace_back		671702	0					
ANR	672233	Identifier	operators		671702	0					
ANR	672234	Identifier	emplace_back		671702	1					
ANR	672235	ArgumentList	& AS_GCC_MAX_ASSIGN		671702	1					
ANR	672236	Argument	& AS_GCC_MAX_ASSIGN		671702	0					
ANR	672237	UnaryOperationExpression	& AS_GCC_MAX_ASSIGN		671702	0					
ANR	672238	UnaryOperator	&		671702	0					
ANR	672239	Identifier	AS_GCC_MAX_ASSIGN		671702	1					
ANR	672240	ExpressionStatement	assert ( operators -> size ( ) < elements )	527:1:18822:18858	671702	48	True				
ANR	672241	CallExpression	assert ( operators -> size ( ) < elements )		671702	0					
ANR	672242	Callee	assert		671702	0					
ANR	672243	Identifier	assert		671702	0					
ANR	672244	ArgumentList	operators -> size ( ) < elements		671702	1					
ANR	672245	Argument	operators -> size ( ) < elements		671702	0					
ANR	672246	RelationalExpression	operators -> size ( ) < elements		671702	0		<			
ANR	672247	CallExpression	operators -> size ( )		671702	0					
ANR	672248	Callee	operators -> size		671702	0					
ANR	672249	PtrMemberAccess	operators -> size		671702	0					
ANR	672250	Identifier	operators		671702	0					
ANR	672251	Identifier	size		671702	1					
ANR	672252	ArgumentList			671702	1					
ANR	672253	Identifier	elements		671702	1					
ANR	672254	ExpressionStatement	"sort ( operators -> begin ( ) , operators -> end ( ) , sortOnLength )"	528:1:18861:18917	671702	49	True				
ANR	672255	CallExpression	"sort ( operators -> begin ( ) , operators -> end ( ) , sortOnLength )"		671702	0					
ANR	672256	Callee	sort		671702	0					
ANR	672257	Identifier	sort		671702	0					
ANR	672258	ArgumentList	operators -> begin ( )		671702	1					
ANR	672259	Argument	operators -> begin ( )		671702	0					
ANR	672260	CallExpression	operators -> begin ( )		671702	0					
ANR	672261	Callee	operators -> begin		671702	0					
ANR	672262	PtrMemberAccess	operators -> begin		671702	0					
ANR	672263	Identifier	operators		671702	0					
ANR	672264	Identifier	begin		671702	1					
ANR	672265	ArgumentList			671702	1					
ANR	672266	Argument	operators -> end ( )		671702	1					
ANR	672267	CallExpression	operators -> end ( )		671702	0					
ANR	672268	Callee	operators -> end		671702	0					
ANR	672269	PtrMemberAccess	operators -> end		671702	0					
ANR	672270	Identifier	operators		671702	0					
ANR	672271	Identifier	end		671702	1					
ANR	672272	ArgumentList			671702	1					
ANR	672273	Argument	sortOnLength		671702	2					
ANR	672274	Identifier	sortOnLength		671702	0					
ANR	672275	ReturnType	void		671702	1					
ANR	672276	Identifier	ASResource :: buildOperators		671702	2					
ANR	672277	ParameterList	"vector < const string * > * operators , int fileType"		671702	3					
ANR	672278	Parameter	vector < const string * > * operators	467:32:16800:16831	671702	0	True				
ANR	672279	ParameterType	vector < const string * > *		671702	0					
ANR	672280	Identifier	operators		671702	1					
ANR	672281	Parameter	int fileType	467:66:16834:16845	671702	1	True				
ANR	672282	ParameterType	int		671702	0					
ANR	672283	Identifier	fileType		671702	1					
ANR	672284	CFGEntryNode	ENTRY		671702		True				
ANR	672285	CFGExitNode	EXIT		671702		True				
ANR	672286	Symbol	& AS_MOD_ASSIGN		671702						
ANR	672287	Symbol	C_TYPE		671702						
ANR	672288	Symbol	& AS_BIT_AND		671702						
ANR	672289	Symbol	& AS_BIT_XOR		671702						
ANR	672290	Symbol	operators -> begin		671702						
ANR	672291	Symbol	& AS_MINUS_MINUS		671702						
ANR	672292	Symbol	& AS_LS_LS_LS_ASSIGN		671702						
ANR	672293	Symbol	& AS_LS_LS		671702						
ANR	672294	Symbol	& AS_GR_GR_GR		671702						
ANR	672295	Symbol	& AS_OR		671702						
ANR	672296	Symbol	& AS_BIT_OR		671702						
ANR	672297	Symbol	* operators		671702						
ANR	672298	Symbol	& AS_OR_ASSIGN		671702						
ANR	672299	Symbol	& AS_COLON		671702						
ANR	672300	Symbol	& AS_GR_EQUAL		671702						
ANR	672301	Symbol	& AS_GR		671702						
ANR	672302	Symbol	& AS_BIT_NOT		671702						
ANR	672303	Symbol	& AS_LAMBDA		671702						
ANR	672304	Symbol	& AS_LS_LS_LS		671702						
ANR	672305	Symbol	& AS_GCC_MAX_ASSIGN		671702						
ANR	672306	Symbol	& AS_XOR_ASSIGN		671702						
ANR	672307	Symbol	& AS_MULT_ASSIGN		671702						
ANR	672308	Symbol	& AS_LS_EQUAL		671702						
ANR	672309	Symbol	reserved		671702						
ANR	672310	Symbol	& AS_MINUS_ASSIGN		671702						
ANR	672311	Symbol	& AS_ASSIGN		671702						
ANR	672312	Symbol	true		671702						
ANR	672313	Symbol	& AS_AND		671702						
ANR	672314	Symbol	& AS_LS		671702						
ANR	672315	Symbol	& AS_NOT		671702						
ANR	672316	Symbol	& AS_PLUS_ASSIGN		671702						
ANR	672317	Symbol	& AS_DIV		671702						
ANR	672318	Symbol	& AS_AND_ASSIGN		671702						
ANR	672319	Symbol	& AS_GR_GR_ASSIGN		671702						
ANR	672320	Symbol	& AS_PLUS		671702						
ANR	672321	Symbol	& AS_NOT_EQUAL		671702						
ANR	672322	Symbol	& AS_ARROW		671702						
ANR	672323	Symbol	& AS_QUESTION		671702						
ANR	672324	Symbol	operators -> size		671702						
ANR	672325	Symbol	& AS_MOD		671702						
ANR	672326	Symbol	& AS_EQUAL		671702						
ANR	672327	Symbol	operators		671702						
ANR	672328	Symbol	operators -> end		671702						
ANR	672329	Symbol	& AS_LS_LS_ASSIGN		671702						
ANR	672330	Symbol	& AS_GR_GR		671702						
ANR	672331	Symbol	& AS_QUESTION_QUESTION		671702						
ANR	672332	Symbol	& AS_SCOPE_RESOLUTION		671702						
ANR	672333	Symbol	& AS_MULT		671702						
ANR	672334	Symbol	false		671702						
ANR	672335	Symbol	sortOnLength		671702						
ANR	672336	Symbol	& AS_PLUS_PLUS		671702						
ANR	672337	Symbol	& AS_DIV_ASSIGN		671702						
ANR	672338	Symbol	& AS_GCC_MIN_ASSIGN		671702						
ANR	672339	Symbol	elements		671702						
ANR	672340	Symbol	& AS_GR_GR_GR_ASSIGN		671702						
ANR	672341	Symbol	fileType		671702						
ANR	672342	Symbol	& AS_MINUS		671702						
ANR	672343	Function	ASResource :: buildPreBlockStatements	538:0:19144:20237							
ANR	672344	FunctionDef	"ASResource :: buildPreBlockStatements (vector < const string * > * preBlockStatements , int fileType)"		672343	0					
ANR	672345	CompoundStatement		539:0:19242:20237	672343	0					
ANR	672346	IdentifierDeclStatement	const size_t elements = 10 ;	540:1:19245:19271	672343	0	True				
ANR	672347	IdentifierDecl	elements = 10		672343	0					
ANR	672348	IdentifierDeclType	const size_t		672343	0					
ANR	672349	Identifier	elements		672343	1					
ANR	672350	AssignmentExpression	elements = 10		672343	2		=			
ANR	672351	Identifier	elements		672343	0					
ANR	672352	PrimaryExpression	10		672343	1					
ANR	672353	Statement	static	541:1:19274:19279	672343	1	True				
ANR	672354	IdentifierDeclStatement	bool reserved = false ;	541:8:19281:19302	672343	2	True				
ANR	672355	IdentifierDecl	reserved = false		672343	0					
ANR	672356	IdentifierDeclType	bool		672343	0					
ANR	672357	Identifier	reserved		672343	1					
ANR	672358	AssignmentExpression	reserved = false		672343	2		=			
ANR	672359	Identifier	false		672343	0					
ANR	672360	Identifier	false		672343	1					
ANR	672361	IfStatement	if ( ! reserved )		672343	3					
ANR	672362	Condition	! reserved	542:5:19309:19317	672343	0	True				
ANR	672363	UnaryOperationExpression	! reserved		672343	0					
ANR	672364	UnaryOperator	!		672343	0					
ANR	672365	Identifier	reserved		672343	1					
ANR	672366	CompoundStatement		5:1:78:78	672343	1					
ANR	672367	ExpressionStatement	preBlockStatements -> reserve ( elements )	544:2:19325:19362	672343	0	True				
ANR	672368	CallExpression	preBlockStatements -> reserve ( elements )		672343	0					
ANR	672369	Callee	preBlockStatements -> reserve		672343	0					
ANR	672370	PtrMemberAccess	preBlockStatements -> reserve		672343	0					
ANR	672371	Identifier	preBlockStatements		672343	0					
ANR	672372	Identifier	reserve		672343	1					
ANR	672373	ArgumentList	elements		672343	1					
ANR	672374	Argument	elements		672343	0					
ANR	672375	Identifier	elements		672343	0					
ANR	672376	ExpressionStatement	reserved = true	545:2:19366:19381	672343	1	True				
ANR	672377	AssignmentExpression	reserved = true		672343	0		=			
ANR	672378	Identifier	reserved		672343	0					
ANR	672379	Identifier	true		672343	1					
ANR	672380	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_CLASS )	548:1:19388:19431	672343	4	True				
ANR	672381	CallExpression	preBlockStatements -> emplace_back ( & AS_CLASS )		672343	0					
ANR	672382	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672383	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672384	Identifier	preBlockStatements		672343	0					
ANR	672385	Identifier	emplace_back		672343	1					
ANR	672386	ArgumentList	& AS_CLASS		672343	1					
ANR	672387	Argument	& AS_CLASS		672343	0					
ANR	672388	UnaryOperationExpression	& AS_CLASS		672343	0					
ANR	672389	UnaryOperator	&		672343	0					
ANR	672390	Identifier	AS_CLASS		672343	1					
ANR	672391	IfStatement	if ( fileType == C_TYPE )		672343	5					
ANR	672392	Condition	fileType == C_TYPE	549:5:19438:19455	672343	0	True				
ANR	672393	EqualityExpression	fileType == C_TYPE		672343	0		==			
ANR	672394	Identifier	fileType		672343	0					
ANR	672395	Identifier	C_TYPE		672343	1					
ANR	672396	CompoundStatement		12:1:216:216	672343	1					
ANR	672397	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_STRUCT )	551:2:19463:19507	672343	0	True				
ANR	672398	CallExpression	preBlockStatements -> emplace_back ( & AS_STRUCT )		672343	0					
ANR	672399	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672400	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672401	Identifier	preBlockStatements		672343	0					
ANR	672402	Identifier	emplace_back		672343	1					
ANR	672403	ArgumentList	& AS_STRUCT		672343	1					
ANR	672404	Argument	& AS_STRUCT		672343	0					
ANR	672405	UnaryOperationExpression	& AS_STRUCT		672343	0					
ANR	672406	UnaryOperator	&		672343	0					
ANR	672407	Identifier	AS_STRUCT		672343	1					
ANR	672408	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_UNION )	552:2:19511:19554	672343	1	True				
ANR	672409	CallExpression	preBlockStatements -> emplace_back ( & AS_UNION )		672343	0					
ANR	672410	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672411	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672412	Identifier	preBlockStatements		672343	0					
ANR	672413	Identifier	emplace_back		672343	1					
ANR	672414	ArgumentList	& AS_UNION		672343	1					
ANR	672415	Argument	& AS_UNION		672343	0					
ANR	672416	UnaryOperationExpression	& AS_UNION		672343	0					
ANR	672417	UnaryOperator	&		672343	0					
ANR	672418	Identifier	AS_UNION		672343	1					
ANR	672419	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_NAMESPACE )	553:2:19558:19605	672343	2	True				
ANR	672420	CallExpression	preBlockStatements -> emplace_back ( & AS_NAMESPACE )		672343	0					
ANR	672421	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672422	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672423	Identifier	preBlockStatements		672343	0					
ANR	672424	Identifier	emplace_back		672343	1					
ANR	672425	ArgumentList	& AS_NAMESPACE		672343	1					
ANR	672426	Argument	& AS_NAMESPACE		672343	0					
ANR	672427	UnaryOperationExpression	& AS_NAMESPACE		672343	0					
ANR	672428	UnaryOperator	&		672343	0					
ANR	672429	Identifier	AS_NAMESPACE		672343	1					
ANR	672430	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_MODULE )	554:2:19609:19653	672343	3	True				
ANR	672431	CallExpression	preBlockStatements -> emplace_back ( & AS_MODULE )		672343	0					
ANR	672432	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672433	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672434	Identifier	preBlockStatements		672343	0					
ANR	672435	Identifier	emplace_back		672343	1					
ANR	672436	ArgumentList	& AS_MODULE		672343	1					
ANR	672437	Argument	& AS_MODULE		672343	0					
ANR	672438	UnaryOperationExpression	& AS_MODULE		672343	0					
ANR	672439	UnaryOperator	&		672343	0					
ANR	672440	Identifier	AS_MODULE		672343	1					
ANR	672441	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_INTERFACE )	555:2:19678:19725	672343	4	True				
ANR	672442	CallExpression	preBlockStatements -> emplace_back ( & AS_INTERFACE )		672343	0					
ANR	672443	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672444	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672445	Identifier	preBlockStatements		672343	0					
ANR	672446	Identifier	emplace_back		672343	1					
ANR	672447	ArgumentList	& AS_INTERFACE		672343	1					
ANR	672448	Argument	& AS_INTERFACE		672343	0					
ANR	672449	UnaryOperationExpression	& AS_INTERFACE		672343	0					
ANR	672450	UnaryOperator	&		672343	0					
ANR	672451	Identifier	AS_INTERFACE		672343	1					
ANR	672452	IfStatement	if ( fileType == JAVA_TYPE )		672343	6					
ANR	672453	Condition	fileType == JAVA_TYPE	557:5:19753:19773	672343	0	True				
ANR	672454	EqualityExpression	fileType == JAVA_TYPE		672343	0		==			
ANR	672455	Identifier	fileType		672343	0					
ANR	672456	Identifier	JAVA_TYPE		672343	1					
ANR	672457	CompoundStatement		20:1:534:534	672343	1					
ANR	672458	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_INTERFACE )	559:2:19781:19828	672343	0	True				
ANR	672459	CallExpression	preBlockStatements -> emplace_back ( & AS_INTERFACE )		672343	0					
ANR	672460	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672461	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672462	Identifier	preBlockStatements		672343	0					
ANR	672463	Identifier	emplace_back		672343	1					
ANR	672464	ArgumentList	& AS_INTERFACE		672343	1					
ANR	672465	Argument	& AS_INTERFACE		672343	0					
ANR	672466	UnaryOperationExpression	& AS_INTERFACE		672343	0					
ANR	672467	UnaryOperator	&		672343	0					
ANR	672468	Identifier	AS_INTERFACE		672343	1					
ANR	672469	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_THROWS )	560:2:19832:19876	672343	1	True				
ANR	672470	CallExpression	preBlockStatements -> emplace_back ( & AS_THROWS )		672343	0					
ANR	672471	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672472	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672473	Identifier	preBlockStatements		672343	0					
ANR	672474	Identifier	emplace_back		672343	1					
ANR	672475	ArgumentList	& AS_THROWS		672343	1					
ANR	672476	Argument	& AS_THROWS		672343	0					
ANR	672477	UnaryOperationExpression	& AS_THROWS		672343	0					
ANR	672478	UnaryOperator	&		672343	0					
ANR	672479	Identifier	AS_THROWS		672343	1					
ANR	672480	IfStatement	if ( fileType == SHARP_TYPE )		672343	7					
ANR	672481	Condition	fileType == SHARP_TYPE	562:5:19886:19907	672343	0	True				
ANR	672482	EqualityExpression	fileType == SHARP_TYPE		672343	0		==			
ANR	672483	Identifier	fileType		672343	0					
ANR	672484	Identifier	SHARP_TYPE		672343	1					
ANR	672485	CompoundStatement		25:1:668:668	672343	1					
ANR	672486	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_INTERFACE )	564:2:19915:19962	672343	0	True				
ANR	672487	CallExpression	preBlockStatements -> emplace_back ( & AS_INTERFACE )		672343	0					
ANR	672488	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672489	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672490	Identifier	preBlockStatements		672343	0					
ANR	672491	Identifier	emplace_back		672343	1					
ANR	672492	ArgumentList	& AS_INTERFACE		672343	1					
ANR	672493	Argument	& AS_INTERFACE		672343	0					
ANR	672494	UnaryOperationExpression	& AS_INTERFACE		672343	0					
ANR	672495	UnaryOperator	&		672343	0					
ANR	672496	Identifier	AS_INTERFACE		672343	1					
ANR	672497	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_NAMESPACE )	565:2:19966:20013	672343	1	True				
ANR	672498	CallExpression	preBlockStatements -> emplace_back ( & AS_NAMESPACE )		672343	0					
ANR	672499	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672500	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672501	Identifier	preBlockStatements		672343	0					
ANR	672502	Identifier	emplace_back		672343	1					
ANR	672503	ArgumentList	& AS_NAMESPACE		672343	1					
ANR	672504	Argument	& AS_NAMESPACE		672343	0					
ANR	672505	UnaryOperationExpression	& AS_NAMESPACE		672343	0					
ANR	672506	UnaryOperator	&		672343	0					
ANR	672507	Identifier	AS_NAMESPACE		672343	1					
ANR	672508	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_WHERE )	566:2:20017:20060	672343	2	True				
ANR	672509	CallExpression	preBlockStatements -> emplace_back ( & AS_WHERE )		672343	0					
ANR	672510	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672511	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672512	Identifier	preBlockStatements		672343	0					
ANR	672513	Identifier	emplace_back		672343	1					
ANR	672514	ArgumentList	& AS_WHERE		672343	1					
ANR	672515	Argument	& AS_WHERE		672343	0					
ANR	672516	UnaryOperationExpression	& AS_WHERE		672343	0					
ANR	672517	UnaryOperator	&		672343	0					
ANR	672518	Identifier	AS_WHERE		672343	1					
ANR	672519	ExpressionStatement	preBlockStatements -> emplace_back ( & AS_STRUCT )	567:2:20064:20108	672343	3	True				
ANR	672520	CallExpression	preBlockStatements -> emplace_back ( & AS_STRUCT )		672343	0					
ANR	672521	Callee	preBlockStatements -> emplace_back		672343	0					
ANR	672522	PtrMemberAccess	preBlockStatements -> emplace_back		672343	0					
ANR	672523	Identifier	preBlockStatements		672343	0					
ANR	672524	Identifier	emplace_back		672343	1					
ANR	672525	ArgumentList	& AS_STRUCT		672343	1					
ANR	672526	Argument	& AS_STRUCT		672343	0					
ANR	672527	UnaryOperationExpression	& AS_STRUCT		672343	0					
ANR	672528	UnaryOperator	&		672343	0					
ANR	672529	Identifier	AS_STRUCT		672343	1					
ANR	672530	ExpressionStatement	assert ( preBlockStatements -> size ( ) < elements )	570:1:20115:20160	672343	8	True				
ANR	672531	CallExpression	assert ( preBlockStatements -> size ( ) < elements )		672343	0					
ANR	672532	Callee	assert		672343	0					
ANR	672533	Identifier	assert		672343	0					
ANR	672534	ArgumentList	preBlockStatements -> size ( ) < elements		672343	1					
ANR	672535	Argument	preBlockStatements -> size ( ) < elements		672343	0					
ANR	672536	RelationalExpression	preBlockStatements -> size ( ) < elements		672343	0		<			
ANR	672537	CallExpression	preBlockStatements -> size ( )		672343	0					
ANR	672538	Callee	preBlockStatements -> size		672343	0					
ANR	672539	PtrMemberAccess	preBlockStatements -> size		672343	0					
ANR	672540	Identifier	preBlockStatements		672343	0					
ANR	672541	Identifier	size		672343	1					
ANR	672542	ArgumentList			672343	1					
ANR	672543	Identifier	elements		672343	1					
ANR	672544	ExpressionStatement	"sort ( preBlockStatements -> begin ( ) , preBlockStatements -> end ( ) , sortOnName )"	571:1:20163:20235	672343	9	True				
ANR	672545	CallExpression	"sort ( preBlockStatements -> begin ( ) , preBlockStatements -> end ( ) , sortOnName )"		672343	0					
ANR	672546	Callee	sort		672343	0					
ANR	672547	Identifier	sort		672343	0					
ANR	672548	ArgumentList	preBlockStatements -> begin ( )		672343	1					
ANR	672549	Argument	preBlockStatements -> begin ( )		672343	0					
ANR	672550	CallExpression	preBlockStatements -> begin ( )		672343	0					
ANR	672551	Callee	preBlockStatements -> begin		672343	0					
ANR	672552	PtrMemberAccess	preBlockStatements -> begin		672343	0					
ANR	672553	Identifier	preBlockStatements		672343	0					
ANR	672554	Identifier	begin		672343	1					
ANR	672555	ArgumentList			672343	1					
ANR	672556	Argument	preBlockStatements -> end ( )		672343	1					
ANR	672557	CallExpression	preBlockStatements -> end ( )		672343	0					
ANR	672558	Callee	preBlockStatements -> end		672343	0					
ANR	672559	PtrMemberAccess	preBlockStatements -> end		672343	0					
ANR	672560	Identifier	preBlockStatements		672343	0					
ANR	672561	Identifier	end		672343	1					
ANR	672562	ArgumentList			672343	1					
ANR	672563	Argument	sortOnName		672343	2					
ANR	672564	Identifier	sortOnName		672343	0					
ANR	672565	ReturnType	void		672343	1					
ANR	672566	Identifier	ASResource :: buildPreBlockStatements		672343	2					
ANR	672567	ParameterList	"vector < const string * > * preBlockStatements , int fileType"		672343	3					
ANR	672568	Parameter	vector < const string * > * preBlockStatements	538:41:19185:19225	672343	0	True				
ANR	672569	ParameterType	vector < const string * > *		672343	0					
ANR	672570	Identifier	preBlockStatements		672343	1					
ANR	672571	Parameter	int fileType	538:84:19228:19239	672343	1	True				
ANR	672572	ParameterType	int		672343	0					
ANR	672573	Identifier	fileType		672343	1					
ANR	672574	CFGEntryNode	ENTRY		672343		True				
ANR	672575	CFGExitNode	EXIT		672343		True				
ANR	672576	Symbol	C_TYPE		672343						
ANR	672577	Symbol	& AS_NAMESPACE		672343						
ANR	672578	Symbol	preBlockStatements -> begin		672343						
ANR	672579	Symbol	& AS_THROWS		672343						
ANR	672580	Symbol	false		672343						
ANR	672581	Symbol	& AS_UNION		672343						
ANR	672582	Symbol	sortOnName		672343						
ANR	672583	Symbol	preBlockStatements		672343						
ANR	672584	Symbol	JAVA_TYPE		672343						
ANR	672585	Symbol	preBlockStatements -> end		672343						
ANR	672586	Symbol	& AS_MODULE		672343						
ANR	672587	Symbol	SHARP_TYPE		672343						
ANR	672588	Symbol	& AS_STRUCT		672343						
ANR	672589	Symbol	& AS_CLASS		672343						
ANR	672590	Symbol	reserved		672343						
ANR	672591	Symbol	preBlockStatements -> size		672343						
ANR	672592	Symbol	elements		672343						
ANR	672593	Symbol	true		672343						
ANR	672594	Symbol	& AS_INTERFACE		672343						
ANR	672595	Symbol	& AS_WHERE		672343						
ANR	672596	Symbol	* preBlockStatements		672343						
ANR	672597	Symbol	fileType		672343						
ANR	672598	Function	ASResource :: buildPreCommandHeaders	583:0:20573:21508							
ANR	672599	FunctionDef	"ASResource :: buildPreCommandHeaders (vector < const string * > * preCommandHeaders , int fileType)"		672598	0					
ANR	672600	CompoundStatement		584:0:20669:21508	672598	0					
ANR	672601	IdentifierDeclStatement	const size_t elements = 10 ;	585:1:20672:20698	672598	0	True				
ANR	672602	IdentifierDecl	elements = 10		672598	0					
ANR	672603	IdentifierDeclType	const size_t		672598	0					
ANR	672604	Identifier	elements		672598	1					
ANR	672605	AssignmentExpression	elements = 10		672598	2		=			
ANR	672606	Identifier	elements		672598	0					
ANR	672607	PrimaryExpression	10		672598	1					
ANR	672608	Statement	static	586:1:20701:20706	672598	1	True				
ANR	672609	IdentifierDeclStatement	bool reserved = false ;	586:8:20708:20729	672598	2	True				
ANR	672610	IdentifierDecl	reserved = false		672598	0					
ANR	672611	IdentifierDeclType	bool		672598	0					
ANR	672612	Identifier	reserved		672598	1					
ANR	672613	AssignmentExpression	reserved = false		672598	2		=			
ANR	672614	Identifier	false		672598	0					
ANR	672615	Identifier	false		672598	1					
ANR	672616	IfStatement	if ( ! reserved )		672598	3					
ANR	672617	Condition	! reserved	587:5:20736:20744	672598	0	True				
ANR	672618	UnaryOperationExpression	! reserved		672598	0					
ANR	672619	UnaryOperator	!		672598	0					
ANR	672620	Identifier	reserved		672598	1					
ANR	672621	CompoundStatement		5:1:78:78	672598	1					
ANR	672622	ExpressionStatement	preCommandHeaders -> reserve ( elements )	589:2:20752:20788	672598	0	True				
ANR	672623	CallExpression	preCommandHeaders -> reserve ( elements )		672598	0					
ANR	672624	Callee	preCommandHeaders -> reserve		672598	0					
ANR	672625	PtrMemberAccess	preCommandHeaders -> reserve		672598	0					
ANR	672626	Identifier	preCommandHeaders		672598	0					
ANR	672627	Identifier	reserve		672598	1					
ANR	672628	ArgumentList	elements		672598	1					
ANR	672629	Argument	elements		672598	0					
ANR	672630	Identifier	elements		672598	0					
ANR	672631	ExpressionStatement	reserved = true	590:2:20792:20807	672598	1	True				
ANR	672632	AssignmentExpression	reserved = true		672598	0		=			
ANR	672633	Identifier	reserved		672598	0					
ANR	672634	Identifier	true		672598	1					
ANR	672635	IfStatement	if ( fileType == C_TYPE )		672598	4					
ANR	672636	Condition	fileType == C_TYPE	593:5:20818:20835	672598	0	True				
ANR	672637	EqualityExpression	fileType == C_TYPE		672598	0		==			
ANR	672638	Identifier	fileType		672598	0					
ANR	672639	Identifier	C_TYPE		672598	1					
ANR	672640	CompoundStatement		11:1:169:169	672598	1					
ANR	672641	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_CONST )	595:2:20843:20885	672598	0	True				
ANR	672642	CallExpression	preCommandHeaders -> emplace_back ( & AS_CONST )		672598	0					
ANR	672643	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672644	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672645	Identifier	preCommandHeaders		672598	0					
ANR	672646	Identifier	emplace_back		672598	1					
ANR	672647	ArgumentList	& AS_CONST		672598	1					
ANR	672648	Argument	& AS_CONST		672598	0					
ANR	672649	UnaryOperationExpression	& AS_CONST		672598	0					
ANR	672650	UnaryOperator	&		672598	0					
ANR	672651	Identifier	AS_CONST		672598	1					
ANR	672652	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_VOLATILE )	596:2:20889:20934	672598	1	True				
ANR	672653	CallExpression	preCommandHeaders -> emplace_back ( & AS_VOLATILE )		672598	0					
ANR	672654	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672655	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672656	Identifier	preCommandHeaders		672598	0					
ANR	672657	Identifier	emplace_back		672598	1					
ANR	672658	ArgumentList	& AS_VOLATILE		672598	1					
ANR	672659	Argument	& AS_VOLATILE		672598	0					
ANR	672660	UnaryOperationExpression	& AS_VOLATILE		672598	0					
ANR	672661	UnaryOperator	&		672598	0					
ANR	672662	Identifier	AS_VOLATILE		672598	1					
ANR	672663	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_INTERRUPT )	597:2:20938:20984	672598	2	True				
ANR	672664	CallExpression	preCommandHeaders -> emplace_back ( & AS_INTERRUPT )		672598	0					
ANR	672665	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672666	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672667	Identifier	preCommandHeaders		672598	0					
ANR	672668	Identifier	emplace_back		672598	1					
ANR	672669	ArgumentList	& AS_INTERRUPT		672598	1					
ANR	672670	Argument	& AS_INTERRUPT		672598	0					
ANR	672671	UnaryOperationExpression	& AS_INTERRUPT		672598	0					
ANR	672672	UnaryOperator	&		672598	0					
ANR	672673	Identifier	AS_INTERRUPT		672598	1					
ANR	672674	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_NOEXCEPT )	598:2:20988:21033	672598	3	True				
ANR	672675	CallExpression	preCommandHeaders -> emplace_back ( & AS_NOEXCEPT )		672598	0					
ANR	672676	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672677	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672678	Identifier	preCommandHeaders		672598	0					
ANR	672679	Identifier	emplace_back		672598	1					
ANR	672680	ArgumentList	& AS_NOEXCEPT		672598	1					
ANR	672681	Argument	& AS_NOEXCEPT		672598	0					
ANR	672682	UnaryOperationExpression	& AS_NOEXCEPT		672598	0					
ANR	672683	UnaryOperator	&		672598	0					
ANR	672684	Identifier	AS_NOEXCEPT		672598	1					
ANR	672685	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_OVERRIDE )	599:2:21037:21082	672598	4	True				
ANR	672686	CallExpression	preCommandHeaders -> emplace_back ( & AS_OVERRIDE )		672598	0					
ANR	672687	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672688	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672689	Identifier	preCommandHeaders		672598	0					
ANR	672690	Identifier	emplace_back		672598	1					
ANR	672691	ArgumentList	& AS_OVERRIDE		672598	1					
ANR	672692	Argument	& AS_OVERRIDE		672598	0					
ANR	672693	UnaryOperationExpression	& AS_OVERRIDE		672598	0					
ANR	672694	UnaryOperator	&		672598	0					
ANR	672695	Identifier	AS_OVERRIDE		672598	1					
ANR	672696	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_SEALED )	600:2:21086:21129	672598	5	True				
ANR	672697	CallExpression	preCommandHeaders -> emplace_back ( & AS_SEALED )		672598	0					
ANR	672698	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672699	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672700	Identifier	preCommandHeaders		672598	0					
ANR	672701	Identifier	emplace_back		672598	1					
ANR	672702	ArgumentList	& AS_SEALED		672598	1					
ANR	672703	Argument	& AS_SEALED		672598	0					
ANR	672704	UnaryOperationExpression	& AS_SEALED		672598	0					
ANR	672705	UnaryOperator	&		672598	0					
ANR	672706	Identifier	AS_SEALED		672598	1					
ANR	672707	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_AUTORELEASEPOOL )	601:2:21152:21204	672598	6	True				
ANR	672708	CallExpression	preCommandHeaders -> emplace_back ( & AS_AUTORELEASEPOOL )		672598	0					
ANR	672709	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672710	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672711	Identifier	preCommandHeaders		672598	0					
ANR	672712	Identifier	emplace_back		672598	1					
ANR	672713	ArgumentList	& AS_AUTORELEASEPOOL		672598	1					
ANR	672714	Argument	& AS_AUTORELEASEPOOL		672598	0					
ANR	672715	UnaryOperationExpression	& AS_AUTORELEASEPOOL		672598	0					
ANR	672716	UnaryOperator	&		672598	0					
ANR	672717	Identifier	AS_AUTORELEASEPOOL		672598	1					
ANR	672718	IfStatement	if ( fileType == JAVA_TYPE )		672598	5					
ANR	672719	Condition	fileType == JAVA_TYPE	604:5:21229:21249	672598	0	True				
ANR	672720	EqualityExpression	fileType == JAVA_TYPE		672598	0		==			
ANR	672721	Identifier	fileType		672598	0					
ANR	672722	Identifier	JAVA_TYPE		672598	1					
ANR	672723	CompoundStatement		22:1:583:583	672598	1					
ANR	672724	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_THROWS )	606:2:21257:21300	672598	0	True				
ANR	672725	CallExpression	preCommandHeaders -> emplace_back ( & AS_THROWS )		672598	0					
ANR	672726	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672727	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672728	Identifier	preCommandHeaders		672598	0					
ANR	672729	Identifier	emplace_back		672598	1					
ANR	672730	ArgumentList	& AS_THROWS		672598	1					
ANR	672731	Argument	& AS_THROWS		672598	0					
ANR	672732	UnaryOperationExpression	& AS_THROWS		672598	0					
ANR	672733	UnaryOperator	&		672598	0					
ANR	672734	Identifier	AS_THROWS		672598	1					
ANR	672735	IfStatement	if ( fileType == SHARP_TYPE )		672598	6					
ANR	672736	Condition	fileType == SHARP_TYPE	609:5:21311:21332	672598	0	True				
ANR	672737	EqualityExpression	fileType == SHARP_TYPE		672598	0		==			
ANR	672738	Identifier	fileType		672598	0					
ANR	672739	Identifier	SHARP_TYPE		672598	1					
ANR	672740	CompoundStatement		27:1:666:666	672598	1					
ANR	672741	ExpressionStatement	preCommandHeaders -> emplace_back ( & AS_WHERE )	611:2:21340:21382	672598	0	True				
ANR	672742	CallExpression	preCommandHeaders -> emplace_back ( & AS_WHERE )		672598	0					
ANR	672743	Callee	preCommandHeaders -> emplace_back		672598	0					
ANR	672744	PtrMemberAccess	preCommandHeaders -> emplace_back		672598	0					
ANR	672745	Identifier	preCommandHeaders		672598	0					
ANR	672746	Identifier	emplace_back		672598	1					
ANR	672747	ArgumentList	& AS_WHERE		672598	1					
ANR	672748	Argument	& AS_WHERE		672598	0					
ANR	672749	UnaryOperationExpression	& AS_WHERE		672598	0					
ANR	672750	UnaryOperator	&		672598	0					
ANR	672751	Identifier	AS_WHERE		672598	1					
ANR	672752	ExpressionStatement	assert ( preCommandHeaders -> size ( ) < elements )	614:1:21389:21433	672598	7	True				
ANR	672753	CallExpression	assert ( preCommandHeaders -> size ( ) < elements )		672598	0					
ANR	672754	Callee	assert		672598	0					
ANR	672755	Identifier	assert		672598	0					
ANR	672756	ArgumentList	preCommandHeaders -> size ( ) < elements		672598	1					
ANR	672757	Argument	preCommandHeaders -> size ( ) < elements		672598	0					
ANR	672758	RelationalExpression	preCommandHeaders -> size ( ) < elements		672598	0		<			
ANR	672759	CallExpression	preCommandHeaders -> size ( )		672598	0					
ANR	672760	Callee	preCommandHeaders -> size		672598	0					
ANR	672761	PtrMemberAccess	preCommandHeaders -> size		672598	0					
ANR	672762	Identifier	preCommandHeaders		672598	0					
ANR	672763	Identifier	size		672598	1					
ANR	672764	ArgumentList			672598	1					
ANR	672765	Identifier	elements		672598	1					
ANR	672766	ExpressionStatement	"sort ( preCommandHeaders -> begin ( ) , preCommandHeaders -> end ( ) , sortOnName )"	615:1:21436:21506	672598	8	True				
ANR	672767	CallExpression	"sort ( preCommandHeaders -> begin ( ) , preCommandHeaders -> end ( ) , sortOnName )"		672598	0					
ANR	672768	Callee	sort		672598	0					
ANR	672769	Identifier	sort		672598	0					
ANR	672770	ArgumentList	preCommandHeaders -> begin ( )		672598	1					
ANR	672771	Argument	preCommandHeaders -> begin ( )		672598	0					
ANR	672772	CallExpression	preCommandHeaders -> begin ( )		672598	0					
ANR	672773	Callee	preCommandHeaders -> begin		672598	0					
ANR	672774	PtrMemberAccess	preCommandHeaders -> begin		672598	0					
ANR	672775	Identifier	preCommandHeaders		672598	0					
ANR	672776	Identifier	begin		672598	1					
ANR	672777	ArgumentList			672598	1					
ANR	672778	Argument	preCommandHeaders -> end ( )		672598	1					
ANR	672779	CallExpression	preCommandHeaders -> end ( )		672598	0					
ANR	672780	Callee	preCommandHeaders -> end		672598	0					
ANR	672781	PtrMemberAccess	preCommandHeaders -> end		672598	0					
ANR	672782	Identifier	preCommandHeaders		672598	0					
ANR	672783	Identifier	end		672598	1					
ANR	672784	ArgumentList			672598	1					
ANR	672785	Argument	sortOnName		672598	2					
ANR	672786	Identifier	sortOnName		672598	0					
ANR	672787	ReturnType	void		672598	1					
ANR	672788	Identifier	ASResource :: buildPreCommandHeaders		672598	2					
ANR	672789	ParameterList	"vector < const string * > * preCommandHeaders , int fileType"		672598	3					
ANR	672790	Parameter	vector < const string * > * preCommandHeaders	583:40:20613:20652	672598	0	True				
ANR	672791	ParameterType	vector < const string * > *		672598	0					
ANR	672792	Identifier	preCommandHeaders		672598	1					
ANR	672793	Parameter	int fileType	583:82:20655:20666	672598	1	True				
ANR	672794	ParameterType	int		672598	0					
ANR	672795	Identifier	fileType		672598	1					
ANR	672796	CFGEntryNode	ENTRY		672598		True				
ANR	672797	CFGExitNode	EXIT		672598		True				
ANR	672798	Symbol	C_TYPE		672598						
ANR	672799	Symbol	preCommandHeaders -> begin		672598						
ANR	672800	Symbol	& AS_VOLATILE		672598						
ANR	672801	Symbol	& AS_NOEXCEPT		672598						
ANR	672802	Symbol	& AS_THROWS		672598						
ANR	672803	Symbol	& AS_CONST		672598						
ANR	672804	Symbol	false		672598						
ANR	672805	Symbol	sortOnName		672598						
ANR	672806	Symbol	JAVA_TYPE		672598						
ANR	672807	Symbol	SHARP_TYPE		672598						
ANR	672808	Symbol	preCommandHeaders -> end		672598						
ANR	672809	Symbol	& AS_SEALED		672598						
ANR	672810	Symbol	& AS_INTERRUPT		672598						
ANR	672811	Symbol	& AS_AUTORELEASEPOOL		672598						
ANR	672812	Symbol	preCommandHeaders -> size		672598						
ANR	672813	Symbol	reserved		672598						
ANR	672814	Symbol	& AS_OVERRIDE		672598						
ANR	672815	Symbol	elements		672598						
ANR	672816	Symbol	true		672598						
ANR	672817	Symbol	preCommandHeaders		672598						
ANR	672818	Symbol	& AS_WHERE		672598						
ANR	672819	Symbol	fileType		672598						
ANR	672820	Symbol	* preCommandHeaders		672598						
ANR	672821	Function	ASResource :: buildPreDefinitionHeaders	626:0:21800:22830							
ANR	672822	FunctionDef	"ASResource :: buildPreDefinitionHeaders (vector < const string * > * preDefinitionHeaders , int fileType)"		672821	0					
ANR	672823	CompoundStatement		627:0:21902:22830	672821	0					
ANR	672824	IdentifierDeclStatement	const size_t elements = 10 ;	628:1:21905:21931	672821	0	True				
ANR	672825	IdentifierDecl	elements = 10		672821	0					
ANR	672826	IdentifierDeclType	const size_t		672821	0					
ANR	672827	Identifier	elements		672821	1					
ANR	672828	AssignmentExpression	elements = 10		672821	2		=			
ANR	672829	Identifier	elements		672821	0					
ANR	672830	PrimaryExpression	10		672821	1					
ANR	672831	Statement	static	629:1:21934:21939	672821	1	True				
ANR	672832	IdentifierDeclStatement	bool reserved = false ;	629:8:21941:21962	672821	2	True				
ANR	672833	IdentifierDecl	reserved = false		672821	0					
ANR	672834	IdentifierDeclType	bool		672821	0					
ANR	672835	Identifier	reserved		672821	1					
ANR	672836	AssignmentExpression	reserved = false		672821	2		=			
ANR	672837	Identifier	false		672821	0					
ANR	672838	Identifier	false		672821	1					
ANR	672839	IfStatement	if ( ! reserved )		672821	3					
ANR	672840	Condition	! reserved	630:5:21969:21977	672821	0	True				
ANR	672841	UnaryOperationExpression	! reserved		672821	0					
ANR	672842	UnaryOperator	!		672821	0					
ANR	672843	Identifier	reserved		672821	1					
ANR	672844	CompoundStatement		5:1:78:78	672821	1					
ANR	672845	ExpressionStatement	preDefinitionHeaders -> reserve ( elements )	632:2:21985:22024	672821	0	True				
ANR	672846	CallExpression	preDefinitionHeaders -> reserve ( elements )		672821	0					
ANR	672847	Callee	preDefinitionHeaders -> reserve		672821	0					
ANR	672848	PtrMemberAccess	preDefinitionHeaders -> reserve		672821	0					
ANR	672849	Identifier	preDefinitionHeaders		672821	0					
ANR	672850	Identifier	reserve		672821	1					
ANR	672851	ArgumentList	elements		672821	1					
ANR	672852	Argument	elements		672821	0					
ANR	672853	Identifier	elements		672821	0					
ANR	672854	ExpressionStatement	reserved = true	633:2:22028:22043	672821	1	True				
ANR	672855	AssignmentExpression	reserved = true		672821	0		=			
ANR	672856	Identifier	reserved		672821	0					
ANR	672857	Identifier	true		672821	1					
ANR	672858	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_CLASS )	636:1:22050:22095	672821	4	True				
ANR	672859	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_CLASS )		672821	0					
ANR	672860	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672861	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672862	Identifier	preDefinitionHeaders		672821	0					
ANR	672863	Identifier	emplace_back		672821	1					
ANR	672864	ArgumentList	& AS_CLASS		672821	1					
ANR	672865	Argument	& AS_CLASS		672821	0					
ANR	672866	UnaryOperationExpression	& AS_CLASS		672821	0					
ANR	672867	UnaryOperator	&		672821	0					
ANR	672868	Identifier	AS_CLASS		672821	1					
ANR	672869	IfStatement	if ( fileType == C_TYPE )		672821	5					
ANR	672870	Condition	fileType == C_TYPE	637:5:22102:22119	672821	0	True				
ANR	672871	EqualityExpression	fileType == C_TYPE		672821	0		==			
ANR	672872	Identifier	fileType		672821	0					
ANR	672873	Identifier	C_TYPE		672821	1					
ANR	672874	CompoundStatement		12:1:220:220	672821	1					
ANR	672875	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_STRUCT )	639:2:22127:22173	672821	0	True				
ANR	672876	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_STRUCT )		672821	0					
ANR	672877	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672878	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672879	Identifier	preDefinitionHeaders		672821	0					
ANR	672880	Identifier	emplace_back		672821	1					
ANR	672881	ArgumentList	& AS_STRUCT		672821	1					
ANR	672882	Argument	& AS_STRUCT		672821	0					
ANR	672883	UnaryOperationExpression	& AS_STRUCT		672821	0					
ANR	672884	UnaryOperator	&		672821	0					
ANR	672885	Identifier	AS_STRUCT		672821	1					
ANR	672886	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_UNION )	640:2:22177:22222	672821	1	True				
ANR	672887	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_UNION )		672821	0					
ANR	672888	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672889	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672890	Identifier	preDefinitionHeaders		672821	0					
ANR	672891	Identifier	emplace_back		672821	1					
ANR	672892	ArgumentList	& AS_UNION		672821	1					
ANR	672893	Argument	& AS_UNION		672821	0					
ANR	672894	UnaryOperationExpression	& AS_UNION		672821	0					
ANR	672895	UnaryOperator	&		672821	0					
ANR	672896	Identifier	AS_UNION		672821	1					
ANR	672897	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_NAMESPACE )	641:2:22226:22275	672821	2	True				
ANR	672898	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_NAMESPACE )		672821	0					
ANR	672899	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672900	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672901	Identifier	preDefinitionHeaders		672821	0					
ANR	672902	Identifier	emplace_back		672821	1					
ANR	672903	ArgumentList	& AS_NAMESPACE		672821	1					
ANR	672904	Argument	& AS_NAMESPACE		672821	0					
ANR	672905	UnaryOperationExpression	& AS_NAMESPACE		672821	0					
ANR	672906	UnaryOperator	&		672821	0					
ANR	672907	Identifier	AS_NAMESPACE		672821	1					
ANR	672908	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_MODULE )	642:2:22279:22325	672821	3	True				
ANR	672909	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_MODULE )		672821	0					
ANR	672910	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672911	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672912	Identifier	preDefinitionHeaders		672821	0					
ANR	672913	Identifier	emplace_back		672821	1					
ANR	672914	ArgumentList	& AS_MODULE		672821	1					
ANR	672915	Argument	& AS_MODULE		672821	0					
ANR	672916	UnaryOperationExpression	& AS_MODULE		672821	0					
ANR	672917	UnaryOperator	&		672821	0					
ANR	672918	Identifier	AS_MODULE		672821	1					
ANR	672919	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_INTERFACE )	643:2:22350:22399	672821	4	True				
ANR	672920	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_INTERFACE )		672821	0					
ANR	672921	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672922	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672923	Identifier	preDefinitionHeaders		672821	0					
ANR	672924	Identifier	emplace_back		672821	1					
ANR	672925	ArgumentList	& AS_INTERFACE		672821	1					
ANR	672926	Argument	& AS_INTERFACE		672821	0					
ANR	672927	UnaryOperationExpression	& AS_INTERFACE		672821	0					
ANR	672928	UnaryOperator	&		672821	0					
ANR	672929	Identifier	AS_INTERFACE		672821	1					
ANR	672930	IfStatement	if ( fileType == JAVA_TYPE )		672821	6					
ANR	672931	Condition	fileType == JAVA_TYPE	645:5:22427:22447	672821	0	True				
ANR	672932	EqualityExpression	fileType == JAVA_TYPE		672821	0		==			
ANR	672933	Identifier	fileType		672821	0					
ANR	672934	Identifier	JAVA_TYPE		672821	1					
ANR	672935	CompoundStatement		20:1:548:548	672821	1					
ANR	672936	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_INTERFACE )	647:2:22455:22504	672821	0	True				
ANR	672937	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_INTERFACE )		672821	0					
ANR	672938	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672939	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672940	Identifier	preDefinitionHeaders		672821	0					
ANR	672941	Identifier	emplace_back		672821	1					
ANR	672942	ArgumentList	& AS_INTERFACE		672821	1					
ANR	672943	Argument	& AS_INTERFACE		672821	0					
ANR	672944	UnaryOperationExpression	& AS_INTERFACE		672821	0					
ANR	672945	UnaryOperator	&		672821	0					
ANR	672946	Identifier	AS_INTERFACE		672821	1					
ANR	672947	IfStatement	if ( fileType == SHARP_TYPE )		672821	7					
ANR	672948	Condition	fileType == SHARP_TYPE	649:5:22514:22535	672821	0	True				
ANR	672949	EqualityExpression	fileType == SHARP_TYPE		672821	0		==			
ANR	672950	Identifier	fileType		672821	0					
ANR	672951	Identifier	SHARP_TYPE		672821	1					
ANR	672952	CompoundStatement		24:1:636:636	672821	1					
ANR	672953	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_STRUCT )	651:2:22543:22589	672821	0	True				
ANR	672954	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_STRUCT )		672821	0					
ANR	672955	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672956	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672957	Identifier	preDefinitionHeaders		672821	0					
ANR	672958	Identifier	emplace_back		672821	1					
ANR	672959	ArgumentList	& AS_STRUCT		672821	1					
ANR	672960	Argument	& AS_STRUCT		672821	0					
ANR	672961	UnaryOperationExpression	& AS_STRUCT		672821	0					
ANR	672962	UnaryOperator	&		672821	0					
ANR	672963	Identifier	AS_STRUCT		672821	1					
ANR	672964	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_INTERFACE )	652:2:22593:22642	672821	1	True				
ANR	672965	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_INTERFACE )		672821	0					
ANR	672966	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672967	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672968	Identifier	preDefinitionHeaders		672821	0					
ANR	672969	Identifier	emplace_back		672821	1					
ANR	672970	ArgumentList	& AS_INTERFACE		672821	1					
ANR	672971	Argument	& AS_INTERFACE		672821	0					
ANR	672972	UnaryOperationExpression	& AS_INTERFACE		672821	0					
ANR	672973	UnaryOperator	&		672821	0					
ANR	672974	Identifier	AS_INTERFACE		672821	1					
ANR	672975	ExpressionStatement	preDefinitionHeaders -> emplace_back ( & AS_NAMESPACE )	653:2:22646:22695	672821	2	True				
ANR	672976	CallExpression	preDefinitionHeaders -> emplace_back ( & AS_NAMESPACE )		672821	0					
ANR	672977	Callee	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672978	PtrMemberAccess	preDefinitionHeaders -> emplace_back		672821	0					
ANR	672979	Identifier	preDefinitionHeaders		672821	0					
ANR	672980	Identifier	emplace_back		672821	1					
ANR	672981	ArgumentList	& AS_NAMESPACE		672821	1					
ANR	672982	Argument	& AS_NAMESPACE		672821	0					
ANR	672983	UnaryOperationExpression	& AS_NAMESPACE		672821	0					
ANR	672984	UnaryOperator	&		672821	0					
ANR	672985	Identifier	AS_NAMESPACE		672821	1					
ANR	672986	ExpressionStatement	assert ( preDefinitionHeaders -> size ( ) < elements )	656:1:22702:22749	672821	8	True				
ANR	672987	CallExpression	assert ( preDefinitionHeaders -> size ( ) < elements )		672821	0					
ANR	672988	Callee	assert		672821	0					
ANR	672989	Identifier	assert		672821	0					
ANR	672990	ArgumentList	preDefinitionHeaders -> size ( ) < elements		672821	1					
ANR	672991	Argument	preDefinitionHeaders -> size ( ) < elements		672821	0					
ANR	672992	RelationalExpression	preDefinitionHeaders -> size ( ) < elements		672821	0		<			
ANR	672993	CallExpression	preDefinitionHeaders -> size ( )		672821	0					
ANR	672994	Callee	preDefinitionHeaders -> size		672821	0					
ANR	672995	PtrMemberAccess	preDefinitionHeaders -> size		672821	0					
ANR	672996	Identifier	preDefinitionHeaders		672821	0					
ANR	672997	Identifier	size		672821	1					
ANR	672998	ArgumentList			672821	1					
ANR	672999	Identifier	elements		672821	1					
ANR	673000	ExpressionStatement	"sort ( preDefinitionHeaders -> begin ( ) , preDefinitionHeaders -> end ( ) , sortOnName )"	657:1:22752:22828	672821	9	True				
ANR	673001	CallExpression	"sort ( preDefinitionHeaders -> begin ( ) , preDefinitionHeaders -> end ( ) , sortOnName )"		672821	0					
ANR	673002	Callee	sort		672821	0					
ANR	673003	Identifier	sort		672821	0					
ANR	673004	ArgumentList	preDefinitionHeaders -> begin ( )		672821	1					
ANR	673005	Argument	preDefinitionHeaders -> begin ( )		672821	0					
ANR	673006	CallExpression	preDefinitionHeaders -> begin ( )		672821	0					
ANR	673007	Callee	preDefinitionHeaders -> begin		672821	0					
ANR	673008	PtrMemberAccess	preDefinitionHeaders -> begin		672821	0					
ANR	673009	Identifier	preDefinitionHeaders		672821	0					
ANR	673010	Identifier	begin		672821	1					
ANR	673011	ArgumentList			672821	1					
ANR	673012	Argument	preDefinitionHeaders -> end ( )		672821	1					
ANR	673013	CallExpression	preDefinitionHeaders -> end ( )		672821	0					
ANR	673014	Callee	preDefinitionHeaders -> end		672821	0					
ANR	673015	PtrMemberAccess	preDefinitionHeaders -> end		672821	0					
ANR	673016	Identifier	preDefinitionHeaders		672821	0					
ANR	673017	Identifier	end		672821	1					
ANR	673018	ArgumentList			672821	1					
ANR	673019	Argument	sortOnName		672821	2					
ANR	673020	Identifier	sortOnName		672821	0					
ANR	673021	ReturnType	void		672821	1					
ANR	673022	Identifier	ASResource :: buildPreDefinitionHeaders		672821	2					
ANR	673023	ParameterList	"vector < const string * > * preDefinitionHeaders , int fileType"		672821	3					
ANR	673024	Parameter	vector < const string * > * preDefinitionHeaders	626:43:21843:21885	672821	0	True				
ANR	673025	ParameterType	vector < const string * > *		672821	0					
ANR	673026	Identifier	preDefinitionHeaders		672821	1					
ANR	673027	Parameter	int fileType	626:88:21888:21899	672821	1	True				
ANR	673028	ParameterType	int		672821	0					
ANR	673029	Identifier	fileType		672821	1					
ANR	673030	CFGEntryNode	ENTRY		672821		True				
ANR	673031	CFGExitNode	EXIT		672821		True				
ANR	673032	Symbol	C_TYPE		672821						
ANR	673033	Symbol	& AS_NAMESPACE		672821						
ANR	673034	Symbol	preDefinitionHeaders -> size		672821						
ANR	673035	Symbol	false		672821						
ANR	673036	Symbol	& AS_UNION		672821						
ANR	673037	Symbol	sortOnName		672821						
ANR	673038	Symbol	JAVA_TYPE		672821						
ANR	673039	Symbol	& AS_MODULE		672821						
ANR	673040	Symbol	SHARP_TYPE		672821						
ANR	673041	Symbol	preDefinitionHeaders		672821						
ANR	673042	Symbol	& AS_STRUCT		672821						
ANR	673043	Symbol	& AS_CLASS		672821						
ANR	673044	Symbol	reserved		672821						
ANR	673045	Symbol	preDefinitionHeaders -> begin		672821						
ANR	673046	Symbol	elements		672821						
ANR	673047	Symbol	* preDefinitionHeaders		672821						
ANR	673048	Symbol	true		672821						
ANR	673049	Symbol	preDefinitionHeaders -> end		672821						
ANR	673050	Symbol	& AS_INTERFACE		672821						
ANR	673051	Symbol	fileType		672821						
ANR	673052	Function	ASBase :: findHeader	665:0:23093:24312							
ANR	673053	FunctionDef	"ASBase :: findHeader (const string & line , int i , const vector < const string * > * possibleHeaders)"		673052	0					
ANR	673054	CompoundStatement		667:0:23238:24312	673052	0					
ANR	673055	ExpressionStatement	"assert ( isCharPotentialHeader ( line , i ) )"	668:1:23241:23279	673052	0	True				
ANR	673056	CallExpression	"assert ( isCharPotentialHeader ( line , i ) )"		673052	0					
ANR	673057	Callee	assert		673052	0					
ANR	673058	Identifier	assert		673052	0					
ANR	673059	ArgumentList	"isCharPotentialHeader ( line , i )"		673052	1					
ANR	673060	Argument	"isCharPotentialHeader ( line , i )"		673052	0					
ANR	673061	CallExpression	"isCharPotentialHeader ( line , i )"		673052	0					
ANR	673062	Callee	isCharPotentialHeader		673052	0					
ANR	673063	Identifier	isCharPotentialHeader		673052	0					
ANR	673064	ArgumentList	line		673052	1					
ANR	673065	Argument	line		673052	0					
ANR	673066	Identifier	line		673052	0					
ANR	673067	Argument	i		673052	1					
ANR	673068	Identifier	i		673052	0					
ANR	673069	IdentifierDeclStatement	size_t maxHeaders = possibleHeaders -> size ( ) ;	670:1:23301:23344	673052	1	True				
ANR	673070	IdentifierDecl	maxHeaders = possibleHeaders -> size ( )		673052	0					
ANR	673071	IdentifierDeclType	size_t		673052	0					
ANR	673072	Identifier	maxHeaders		673052	1					
ANR	673073	AssignmentExpression	maxHeaders = possibleHeaders -> size ( )		673052	2		=			
ANR	673074	Identifier	maxHeaders		673052	0					
ANR	673075	CallExpression	possibleHeaders -> size ( )		673052	1					
ANR	673076	Callee	possibleHeaders -> size		673052	0					
ANR	673077	PtrMemberAccess	possibleHeaders -> size		673052	0					
ANR	673078	Identifier	possibleHeaders		673052	0					
ANR	673079	Identifier	size		673052	1					
ANR	673080	ArgumentList			673052	1					
ANR	673081	ForStatement	for ( size_t p = 0 ; p < maxHeaders ; p ++ )		673052	2					
ANR	673082	ForInit	size_t p = 0 ;	671:6:23352:23364	673052	0	True				
ANR	673083	IdentifierDeclStatement	size_t p = 0 ;		673052	0					
ANR	673084	IdentifierDecl	p = 0		673052	0					
ANR	673085	IdentifierDeclType	size_t		673052	0					
ANR	673086	Identifier	p		673052	1					
ANR	673087	AssignmentExpression	p = 0		673052	2		=			
ANR	673088	Identifier	p		673052	0					
ANR	673089	PrimaryExpression	0		673052	1					
ANR	673090	Condition	p < maxHeaders	671:20:23366:23379	673052	1	True				
ANR	673091	RelationalExpression	p < maxHeaders		673052	0		<			
ANR	673092	Identifier	p		673052	0					
ANR	673093	Identifier	maxHeaders		673052	1					
ANR	673094	PostIncDecOperationExpression	p ++	671:36:23382:23384	673052	2	True				
ANR	673095	Identifier	p		673052	0					
ANR	673096	IncDec	++		673052	1					
ANR	673097	CompoundStatement		21:2:563:616	673052	3					
ANR	673098	IdentifierDeclStatement	const string * header = ( * possibleHeaders ) [ p ] ;	673:2:23392:23436	673052	0	True				
ANR	673099	IdentifierDecl	* header = ( * possibleHeaders ) [ p ]		673052	0					
ANR	673100	IdentifierDeclType	const string *		673052	0					
ANR	673101	Identifier	header		673052	1					
ANR	673102	AssignmentExpression	* header = ( * possibleHeaders ) [ p ]		673052	2		=			
ANR	673103	Identifier	header		673052	0					
ANR	673104	ArrayIndexing	( * possibleHeaders ) [ p ]		673052	1					
ANR	673105	UnaryOperationExpression	* possibleHeaders		673052	0					
ANR	673106	UnaryOperator	*		673052	0					
ANR	673107	Identifier	possibleHeaders		673052	1					
ANR	673108	Identifier	p		673052	1					
ANR	673109	IdentifierDeclStatement	const size_t wordEnd = i + header -> length ( ) ;	674:2:23440:23483	673052	1	True				
ANR	673110	IdentifierDecl	wordEnd = i + header -> length ( )		673052	0					
ANR	673111	IdentifierDeclType	const size_t		673052	0					
ANR	673112	Identifier	wordEnd		673052	1					
ANR	673113	AssignmentExpression	wordEnd = i + header -> length ( )		673052	2		=			
ANR	673114	Identifier	wordEnd		673052	0					
ANR	673115	AdditiveExpression	i + header -> length ( )		673052	1		+			
ANR	673116	Identifier	i		673052	0					
ANR	673117	CallExpression	header -> length ( )		673052	1					
ANR	673118	Callee	header -> length		673052	0					
ANR	673119	PtrMemberAccess	header -> length		673052	0					
ANR	673120	Identifier	header		673052	0					
ANR	673121	Identifier	length		673052	1					
ANR	673122	ArgumentList			673052	1					
ANR	673123	IfStatement	if ( wordEnd > line . length ( ) )		673052	2					
ANR	673124	Condition	wordEnd > line . length ( )	675:6:23491:23513	673052	0	True				
ANR	673125	RelationalExpression	wordEnd > line . length ( )		673052	0		>			
ANR	673126	Identifier	wordEnd		673052	0					
ANR	673127	CallExpression	line . length ( )		673052	1					
ANR	673128	Callee	line . length		673052	0					
ANR	673129	MemberAccess	line . length		673052	0					
ANR	673130	Identifier	line		673052	0					
ANR	673131	Identifier	length		673052	1					
ANR	673132	ArgumentList			673052	1					
ANR	673133	ContinueStatement	continue ;	676:3:23519:23527	673052	1	True				
ANR	673134	IdentifierDeclStatement	"int result = ( line . compare ( i , header -> length ( ) , * header ) ) ;"	677:2:23531:23588	673052	3	True				
ANR	673135	IdentifierDecl	"result = ( line . compare ( i , header -> length ( ) , * header ) )"		673052	0					
ANR	673136	IdentifierDeclType	int		673052	0					
ANR	673137	Identifier	result		673052	1					
ANR	673138	AssignmentExpression	"result = ( line . compare ( i , header -> length ( ) , * header ) )"		673052	2		=			
ANR	673139	Identifier	result		673052	0					
ANR	673140	CallExpression	"line . compare ( i , header -> length ( ) , * header )"		673052	1					
ANR	673141	Callee	line . compare		673052	0					
ANR	673142	MemberAccess	line . compare		673052	0					
ANR	673143	Identifier	line		673052	0					
ANR	673144	Identifier	compare		673052	1					
ANR	673145	ArgumentList	i		673052	1					
ANR	673146	Argument	i		673052	0					
ANR	673147	Identifier	i		673052	0					
ANR	673148	Argument	header -> length ( )		673052	1					
ANR	673149	CallExpression	header -> length ( )		673052	0					
ANR	673150	Callee	header -> length		673052	0					
ANR	673151	PtrMemberAccess	header -> length		673052	0					
ANR	673152	Identifier	header		673052	0					
ANR	673153	Identifier	length		673052	1					
ANR	673154	ArgumentList			673052	1					
ANR	673155	Argument	* header		673052	2					
ANR	673156	UnaryOperationExpression	* header		673052	0					
ANR	673157	UnaryOperator	*		673052	0					
ANR	673158	Identifier	header		673052	1					
ANR	673159	IfStatement	if ( result > 0 )		673052	4					
ANR	673160	Condition	result > 0	678:6:23596:23605	673052	0	True				
ANR	673161	RelationalExpression	result > 0		673052	0		>			
ANR	673162	Identifier	result		673052	0					
ANR	673163	PrimaryExpression	0		673052	1					
ANR	673164	ContinueStatement	continue ;	679:3:23611:23619	673052	1	True				
ANR	673165	IfStatement	if ( result < 0 )		673052	5					
ANR	673166	Condition	result < 0	680:6:23627:23636	673052	0	True				
ANR	673167	RelationalExpression	result < 0		673052	0		<			
ANR	673168	Identifier	result		673052	0					
ANR	673169	PrimaryExpression	0		673052	1					
ANR	673170	BreakStatement	break ;	681:3:23642:23647	673052	1	True				
ANR	673171	IfStatement	if ( wordEnd == line . length ( ) )		673052	6					
ANR	673172	Condition	wordEnd == line . length ( )	683:6:23705:23728	673052	0	True				
ANR	673173	EqualityExpression	wordEnd == line . length ( )		673052	0		==			
ANR	673174	Identifier	wordEnd		673052	0					
ANR	673175	CallExpression	line . length ( )		673052	1					
ANR	673176	Callee	line . length		673052	0					
ANR	673177	MemberAccess	line . length		673052	0					
ANR	673178	Identifier	line		673052	0					
ANR	673179	Identifier	length		673052	1					
ANR	673180	ArgumentList			673052	1					
ANR	673181	ReturnStatement	return header ;	684:3:23734:23747	673052	1	True				
ANR	673182	Identifier	header		673052	0					
ANR	673183	IfStatement	if ( isLegalNameChar ( line [ wordEnd ] ) )		673052	7					
ANR	673184	Condition	isLegalNameChar ( line [ wordEnd ] )	685:6:23755:23784	673052	0	True				
ANR	673185	CallExpression	isLegalNameChar ( line [ wordEnd ] )		673052	0					
ANR	673186	Callee	isLegalNameChar		673052	0					
ANR	673187	Identifier	isLegalNameChar		673052	0					
ANR	673188	ArgumentList	line [ wordEnd ]		673052	1					
ANR	673189	Argument	line [ wordEnd ]		673052	0					
ANR	673190	ArrayIndexing	line [ wordEnd ]		673052	0					
ANR	673191	Identifier	line		673052	0					
ANR	673192	Identifier	wordEnd		673052	1					
ANR	673193	ContinueStatement	continue ;	686:3:23790:23798	673052	1	True				
ANR	673194	IdentifierDeclStatement	"const char peekChar = peekNextChar ( line , wordEnd - 1 ) ;"	687:2:23802:23855	673052	8	True				
ANR	673195	IdentifierDecl	"peekChar = peekNextChar ( line , wordEnd - 1 )"		673052	0					
ANR	673196	IdentifierDeclType	const char		673052	0					
ANR	673197	Identifier	peekChar		673052	1					
ANR	673198	AssignmentExpression	"peekChar = peekNextChar ( line , wordEnd - 1 )"		673052	2		=			
ANR	673199	Identifier	peekChar		673052	0					
ANR	673200	CallExpression	"peekNextChar ( line , wordEnd - 1 )"		673052	1					
ANR	673201	Callee	peekNextChar		673052	0					
ANR	673202	Identifier	peekNextChar		673052	0					
ANR	673203	ArgumentList	line		673052	1					
ANR	673204	Argument	line		673052	0					
ANR	673205	Identifier	line		673052	0					
ANR	673206	Argument	wordEnd - 1		673052	1					
ANR	673207	AdditiveExpression	wordEnd - 1		673052	0		-			
ANR	673208	Identifier	wordEnd		673052	0					
ANR	673209	PrimaryExpression	1		673052	1					
ANR	673210	IfStatement	"if ( peekChar == ',' || peekChar == ')' )"		673052	9					
ANR	673211	Condition	"peekChar == ',' || peekChar == ')'"	689:6:23908:23941	673052	0	True				
ANR	673212	OrExpression	"peekChar == ',' || peekChar == ')'"		673052	0		||			
ANR	673213	EqualityExpression	"peekChar == ','"		673052	0		==			
ANR	673214	Identifier	peekChar		673052	0					
ANR	673215	PrimaryExpression	"','"		673052	1					
ANR	673216	EqualityExpression	peekChar == ')'		673052	1		==			
ANR	673217	Identifier	peekChar		673052	0					
ANR	673218	PrimaryExpression	')'		673052	1					
ANR	673219	BreakStatement	break ;	690:3:23947:23952	673052	1	True				
ANR	673220	ElseStatement	else		673052	0					
ANR	673221	IfStatement	if ( ( header == & AS_GET || header == & AS_SET || header == & AS_DEFAULT ) && ( peekChar == ';' || peekChar == '(' || peekChar == '=' ) )		673052	0					
ANR	673222	Condition	( header == & AS_GET || header == & AS_SET || header == & AS_DEFAULT ) && ( peekChar == ';' || peekChar == '(' || peekChar == '=' )	694:11:24104:24262	673052	0	True				
ANR	673223	AndExpression	( header == & AS_GET || header == & AS_SET || header == & AS_DEFAULT ) && ( peekChar == ';' || peekChar == '(' || peekChar == '=' )		673052	0		&&			
ANR	673224	OrExpression	header == & AS_GET || header == & AS_SET || header == & AS_DEFAULT		673052	0		||			
ANR	673225	EqualityExpression	header == & AS_GET		673052	0		==			
ANR	673226	Identifier	header		673052	0					
ANR	673227	UnaryOperationExpression	& AS_GET		673052	1					
ANR	673228	UnaryOperator	&		673052	0					
ANR	673229	Identifier	AS_GET		673052	1					
ANR	673230	OrExpression	header == & AS_SET || header == & AS_DEFAULT		673052	1		||			
ANR	673231	EqualityExpression	header == & AS_SET		673052	0		==			
ANR	673232	Identifier	header		673052	0					
ANR	673233	UnaryOperationExpression	& AS_SET		673052	1					
ANR	673234	UnaryOperator	&		673052	0					
ANR	673235	Identifier	AS_SET		673052	1					
ANR	673236	EqualityExpression	header == & AS_DEFAULT		673052	1		==			
ANR	673237	Identifier	header		673052	0					
ANR	673238	UnaryOperationExpression	& AS_DEFAULT		673052	1					
ANR	673239	UnaryOperator	&		673052	0					
ANR	673240	Identifier	AS_DEFAULT		673052	1					
ANR	673241	OrExpression	peekChar == ';' || peekChar == '(' || peekChar == '='		673052	1		||			
ANR	673242	EqualityExpression	peekChar == ';'		673052	0		==			
ANR	673243	Identifier	peekChar		673052	0					
ANR	673244	PrimaryExpression	';'		673052	1					
ANR	673245	OrExpression	peekChar == '(' || peekChar == '='		673052	1		||			
ANR	673246	EqualityExpression	peekChar == '('		673052	0		==			
ANR	673247	Identifier	peekChar		673052	0					
ANR	673248	PrimaryExpression	'('		673052	1					
ANR	673249	EqualityExpression	peekChar == '='		673052	1		==			
ANR	673250	Identifier	peekChar		673052	0					
ANR	673251	PrimaryExpression	'='		673052	1					
ANR	673252	BreakStatement	break ;	698:3:24268:24273	673052	1	True				
ANR	673253	ReturnStatement	return header ;	699:2:24277:24290	673052	10	True				
ANR	673254	Identifier	header		673052	0					
ANR	673255	ReturnStatement	return nullptr ;	701:1:24296:24310	673052	3	True				
ANR	673256	Identifier	nullptr		673052	0					
ANR	673257	ReturnType	const string *		673052	1					
ANR	673258	Identifier	ASBase :: findHeader		673052	2					
ANR	673259	ParameterList	"const string & line , int i , const vector < const string * > * possibleHeaders"		673052	3					
ANR	673260	Parameter	const string & line	665:33:23126:23143	673052	0	True				
ANR	673261	ParameterType	const string &		673052	0					
ANR	673262	Identifier	line		673052	1					
ANR	673263	Parameter	int i	665:53:23146:23150	673052	1	True				
ANR	673264	ParameterType	int		673052	0					
ANR	673265	Identifier	i		673052	1					
ANR	673266	Parameter	const vector < const string * > * possibleHeaders	666:33:23186:23229	673052	2	True				
ANR	673267	ParameterType	const vector < const string * > *		673052	0					
ANR	673268	Identifier	possibleHeaders		673052	1					
ANR	673269	CFGEntryNode	ENTRY		673052		True				
ANR	673270	CFGExitNode	EXIT		673052		True				
ANR	673271	Symbol	line		673052						
ANR	673272	Symbol	possibleHeaders		673052						
ANR	673273	Symbol	isLegalNameChar		673052						
ANR	673274	Symbol	* line		673052						
ANR	673275	Symbol	result		673052						
ANR	673276	Symbol	wordEnd		673052						
ANR	673277	Symbol	possibleHeaders -> size		673052						
ANR	673278	Symbol	maxHeaders		673052						
ANR	673279	Symbol	line . compare		673052						
ANR	673280	Symbol	peekNextChar		673052						
ANR	673281	Symbol	peekChar		673052						
ANR	673282	Symbol	i		673052						
ANR	673283	Symbol	* header		673052						
ANR	673284	Symbol	header -> length		673052						
ANR	673285	Symbol	p		673052						
ANR	673286	Symbol	& AS_SET		673052						
ANR	673287	Symbol	isCharPotentialHeader		673052						
ANR	673288	Symbol	* possibleHeaders		673052						
ANR	673289	Symbol	* * possibleHeaders		673052						
ANR	673290	Symbol	& AS_DEFAULT		673052						
ANR	673291	Symbol	header		673052						
ANR	673292	Symbol	* p		673052						
ANR	673293	Symbol	nullptr		673052						
ANR	673294	Symbol	line . length		673052						
ANR	673295	Symbol	* wordEnd		673052						
ANR	673296	Symbol	& AS_GET		673052						
ANR	673297	Function	ASBase :: findKeyword	705:0:24372:25045							
ANR	673298	FunctionDef	"ASBase :: findKeyword (const string & line , int i , const string & keyword)"		673297	0					
ANR	673299	CompoundStatement		706:0:24453:25045	673297	0					
ANR	673300	ExpressionStatement	"assert ( isCharPotentialHeader ( line , i ) )"	707:1:24456:24494	673297	0	True				
ANR	673301	CallExpression	"assert ( isCharPotentialHeader ( line , i ) )"		673297	0					
ANR	673302	Callee	assert		673297	0					
ANR	673303	Identifier	assert		673297	0					
ANR	673304	ArgumentList	"isCharPotentialHeader ( line , i )"		673297	1					
ANR	673305	Argument	"isCharPotentialHeader ( line , i )"		673297	0					
ANR	673306	CallExpression	"isCharPotentialHeader ( line , i )"		673297	0					
ANR	673307	Callee	isCharPotentialHeader		673297	0					
ANR	673308	Identifier	isCharPotentialHeader		673297	0					
ANR	673309	ArgumentList	line		673297	1					
ANR	673310	Argument	line		673297	0					
ANR	673311	Identifier	line		673297	0					
ANR	673312	Argument	i		673297	1					
ANR	673313	Identifier	i		673297	0					
ANR	673314	IdentifierDeclStatement	const size_t keywordLength = keyword . length ( ) ;	709:1:24516:24561	673297	1	True				
ANR	673315	IdentifierDecl	keywordLength = keyword . length ( )		673297	0					
ANR	673316	IdentifierDeclType	const size_t		673297	0					
ANR	673317	Identifier	keywordLength		673297	1					
ANR	673318	AssignmentExpression	keywordLength = keyword . length ( )		673297	2		=			
ANR	673319	Identifier	keywordLength		673297	0					
ANR	673320	CallExpression	keyword . length ( )		673297	1					
ANR	673321	Callee	keyword . length		673297	0					
ANR	673322	MemberAccess	keyword . length		673297	0					
ANR	673323	Identifier	keyword		673297	0					
ANR	673324	Identifier	length		673297	1					
ANR	673325	ArgumentList			673297	1					
ANR	673326	IdentifierDeclStatement	const size_t wordEnd = i + keywordLength ;	710:1:24564:24604	673297	2	True				
ANR	673327	IdentifierDecl	wordEnd = i + keywordLength		673297	0					
ANR	673328	IdentifierDeclType	const size_t		673297	0					
ANR	673329	Identifier	wordEnd		673297	1					
ANR	673330	AssignmentExpression	wordEnd = i + keywordLength		673297	2		=			
ANR	673331	Identifier	wordEnd		673297	0					
ANR	673332	AdditiveExpression	i + keywordLength		673297	1		+			
ANR	673333	Identifier	i		673297	0					
ANR	673334	Identifier	keywordLength		673297	1					
ANR	673335	IfStatement	if ( wordEnd > line . length ( ) )		673297	3					
ANR	673336	Condition	wordEnd > line . length ( )	711:5:24611:24633	673297	0	True				
ANR	673337	RelationalExpression	wordEnd > line . length ( )		673297	0		>			
ANR	673338	Identifier	wordEnd		673297	0					
ANR	673339	CallExpression	line . length ( )		673297	1					
ANR	673340	Callee	line . length		673297	0					
ANR	673341	MemberAccess	line . length		673297	0					
ANR	673342	Identifier	line		673297	0					
ANR	673343	Identifier	length		673297	1					
ANR	673344	ArgumentList			673297	1					
ANR	673345	ReturnStatement	return false ;	712:2:24638:24650	673297	1	True				
ANR	673346	Identifier	false		673297	0					
ANR	673347	IfStatement	"if ( line . compare ( i , keywordLength , keyword ) != 0 )"		673297	4					
ANR	673348	Condition	"line . compare ( i , keywordLength , keyword ) != 0"	713:5:24657:24700	673297	0	True				
ANR	673349	EqualityExpression	"line . compare ( i , keywordLength , keyword ) != 0"		673297	0		!=			
ANR	673350	CallExpression	"line . compare ( i , keywordLength , keyword )"		673297	0					
ANR	673351	Callee	line . compare		673297	0					
ANR	673352	MemberAccess	line . compare		673297	0					
ANR	673353	Identifier	line		673297	0					
ANR	673354	Identifier	compare		673297	1					
ANR	673355	ArgumentList	i		673297	1					
ANR	673356	Argument	i		673297	0					
ANR	673357	Identifier	i		673297	0					
ANR	673358	Argument	keywordLength		673297	1					
ANR	673359	Identifier	keywordLength		673297	0					
ANR	673360	Argument	keyword		673297	2					
ANR	673361	Identifier	keyword		673297	0					
ANR	673362	PrimaryExpression	0		673297	1					
ANR	673363	ReturnStatement	return false ;	714:2:24705:24717	673297	1	True				
ANR	673364	Identifier	false		673297	0					
ANR	673365	IfStatement	if ( wordEnd == line . length ( ) )		673297	5					
ANR	673366	Condition	wordEnd == line . length ( )	716:5:24773:24796	673297	0	True				
ANR	673367	EqualityExpression	wordEnd == line . length ( )		673297	0		==			
ANR	673368	Identifier	wordEnd		673297	0					
ANR	673369	CallExpression	line . length ( )		673297	1					
ANR	673370	Callee	line . length		673297	0					
ANR	673371	MemberAccess	line . length		673297	0					
ANR	673372	Identifier	line		673297	0					
ANR	673373	Identifier	length		673297	1					
ANR	673374	ArgumentList			673297	1					
ANR	673375	ReturnStatement	return true ;	717:2:24801:24812	673297	1	True				
ANR	673376	Identifier	true		673297	0					
ANR	673377	IfStatement	if ( isLegalNameChar ( line [ wordEnd ] ) )		673297	6					
ANR	673378	Condition	isLegalNameChar ( line [ wordEnd ] )	718:5:24819:24848	673297	0	True				
ANR	673379	CallExpression	isLegalNameChar ( line [ wordEnd ] )		673297	0					
ANR	673380	Callee	isLegalNameChar		673297	0					
ANR	673381	Identifier	isLegalNameChar		673297	0					
ANR	673382	ArgumentList	line [ wordEnd ]		673297	1					
ANR	673383	Argument	line [ wordEnd ]		673297	0					
ANR	673384	ArrayIndexing	line [ wordEnd ]		673297	0					
ANR	673385	Identifier	line		673297	0					
ANR	673386	Identifier	wordEnd		673297	1					
ANR	673387	ReturnStatement	return false ;	719:2:24853:24865	673297	1	True				
ANR	673388	Identifier	false		673297	0					
ANR	673389	IdentifierDeclStatement	"const char peekChar = peekNextChar ( line , ( int ) wordEnd - 1 ) ;"	721:1:24913:24972	673297	7	True				
ANR	673390	IdentifierDecl	"peekChar = peekNextChar ( line , ( int ) wordEnd - 1 )"		673297	0					
ANR	673391	IdentifierDeclType	const char		673297	0					
ANR	673392	Identifier	peekChar		673297	1					
ANR	673393	AssignmentExpression	"peekChar = peekNextChar ( line , ( int ) wordEnd - 1 )"		673297	2		=			
ANR	673394	Identifier	peekChar		673297	0					
ANR	673395	CallExpression	"peekNextChar ( line , ( int ) wordEnd - 1 )"		673297	1					
ANR	673396	Callee	peekNextChar		673297	0					
ANR	673397	Identifier	peekNextChar		673297	0					
ANR	673398	ArgumentList	line		673297	1					
ANR	673399	Argument	line		673297	0					
ANR	673400	Identifier	line		673297	0					
ANR	673401	Argument	( int ) wordEnd - 1		673297	1					
ANR	673402	AdditiveExpression	( int ) wordEnd - 1		673297	0		-			
ANR	673403	CastExpression	( int ) wordEnd		673297	0					
ANR	673404	CastTarget	int		673297	0					
ANR	673405	Identifier	wordEnd		673297	1					
ANR	673406	PrimaryExpression	1		673297	1					
ANR	673407	IfStatement	"if ( peekChar == ',' || peekChar == ')' )"		673297	8					
ANR	673408	Condition	"peekChar == ',' || peekChar == ')'"	722:5:24979:25012	673297	0	True				
ANR	673409	OrExpression	"peekChar == ',' || peekChar == ')'"		673297	0		||			
ANR	673410	EqualityExpression	"peekChar == ','"		673297	0		==			
ANR	673411	Identifier	peekChar		673297	0					
ANR	673412	PrimaryExpression	"','"		673297	1					
ANR	673413	EqualityExpression	peekChar == ')'		673297	1		==			
ANR	673414	Identifier	peekChar		673297	0					
ANR	673415	PrimaryExpression	')'		673297	1					
ANR	673416	ReturnStatement	return false ;	723:2:25017:25029	673297	1	True				
ANR	673417	Identifier	false		673297	0					
ANR	673418	ReturnStatement	return true ;	724:1:25032:25043	673297	9	True				
ANR	673419	Identifier	true		673297	0					
ANR	673420	ReturnType	bool		673297	1					
ANR	673421	Identifier	ASBase :: findKeyword		673297	2					
ANR	673422	ParameterList	"const string & line , int i , const string & keyword"		673297	3					
ANR	673423	Parameter	const string & line	705:25:24397:24414	673297	0	True				
ANR	673424	ParameterType	const string &		673297	0					
ANR	673425	Identifier	line		673297	1					
ANR	673426	Parameter	int i	705:45:24417:24421	673297	1	True				
ANR	673427	ParameterType	int		673297	0					
ANR	673428	Identifier	i		673297	1					
ANR	673429	Parameter	const string & keyword	705:52:24424:24444	673297	2	True				
ANR	673430	ParameterType	const string &		673297	0					
ANR	673431	Identifier	keyword		673297	1					
ANR	673432	CFGEntryNode	ENTRY		673297		True				
ANR	673433	CFGExitNode	EXIT		673297		True				
ANR	673434	Symbol	keyword . length		673297						
ANR	673435	Symbol	line . compare		673297						
ANR	673436	Symbol	peekNextChar		673297						
ANR	673437	Symbol	keywordLength		673297						
ANR	673438	Symbol	line		673297						
ANR	673439	Symbol	peekChar		673297						
ANR	673440	Symbol	false		673297						
ANR	673441	Symbol	i		673297						
ANR	673442	Symbol	isLegalNameChar		673297						
ANR	673443	Symbol	* line		673297						
ANR	673444	Symbol	isCharPotentialHeader		673297						
ANR	673445	Symbol	wordEnd		673297						
ANR	673446	Symbol	true		673297						
ANR	673447	Symbol	keyword		673297						
ANR	673448	Symbol	line . length		673297						
ANR	673449	Symbol	* wordEnd		673297						
ANR	673450	Function	ASBase :: findOperator	728:0:25107:25780							
ANR	673451	FunctionDef	"ASBase :: findOperator (const string & line , int i , const vector < const string * > * possibleOperators)"		673450	0					
ANR	673452	CompoundStatement		730:0:25258:25780	673450	0					
ANR	673453	ExpressionStatement	assert ( isCharPotentialOperator ( line [ i ] ) )	731:1:25261:25301	673450	0	True				
ANR	673454	CallExpression	assert ( isCharPotentialOperator ( line [ i ] ) )		673450	0					
ANR	673455	Callee	assert		673450	0					
ANR	673456	Identifier	assert		673450	0					
ANR	673457	ArgumentList	isCharPotentialOperator ( line [ i ] )		673450	1					
ANR	673458	Argument	isCharPotentialOperator ( line [ i ] )		673450	0					
ANR	673459	CallExpression	isCharPotentialOperator ( line [ i ] )		673450	0					
ANR	673460	Callee	isCharPotentialOperator		673450	0					
ANR	673461	Identifier	isCharPotentialOperator		673450	0					
ANR	673462	ArgumentList	line [ i ]		673450	1					
ANR	673463	Argument	line [ i ]		673450	0					
ANR	673464	ArrayIndexing	line [ i ]		673450	0					
ANR	673465	Identifier	line		673450	0					
ANR	673466	Identifier	i		673450	1					
ANR	673467	IdentifierDeclStatement	size_t maxOperators = possibleOperators -> size ( ) ;	735:1:25429:25476	673450	1	True				
ANR	673468	IdentifierDecl	maxOperators = possibleOperators -> size ( )		673450	0					
ANR	673469	IdentifierDeclType	size_t		673450	0					
ANR	673470	Identifier	maxOperators		673450	1					
ANR	673471	AssignmentExpression	maxOperators = possibleOperators -> size ( )		673450	2		=			
ANR	673472	Identifier	maxOperators		673450	0					
ANR	673473	CallExpression	possibleOperators -> size ( )		673450	1					
ANR	673474	Callee	possibleOperators -> size		673450	0					
ANR	673475	PtrMemberAccess	possibleOperators -> size		673450	0					
ANR	673476	Identifier	possibleOperators		673450	0					
ANR	673477	Identifier	size		673450	1					
ANR	673478	ArgumentList			673450	1					
ANR	673479	ForStatement	for ( size_t p = 0 ; p < maxOperators ; p ++ )		673450	2					
ANR	673480	ForInit	size_t p = 0 ;	736:6:25484:25496	673450	0	True				
ANR	673481	IdentifierDeclStatement	size_t p = 0 ;		673450	0					
ANR	673482	IdentifierDecl	p = 0		673450	0					
ANR	673483	IdentifierDeclType	size_t		673450	0					
ANR	673484	Identifier	p		673450	1					
ANR	673485	AssignmentExpression	p = 0		673450	2		=			
ANR	673486	Identifier	p		673450	0					
ANR	673487	PrimaryExpression	0		673450	1					
ANR	673488	Condition	p < maxOperators	736:20:25498:25513	673450	1	True				
ANR	673489	RelationalExpression	p < maxOperators		673450	0		<			
ANR	673490	Identifier	p		673450	0					
ANR	673491	Identifier	maxOperators		673450	1					
ANR	673492	PostIncDecOperationExpression	p ++	736:38:25516:25518	673450	2	True				
ANR	673493	Identifier	p		673450	0					
ANR	673494	IncDec	++		673450	1					
ANR	673495	CompoundStatement		9:2:267:329	673450	3					
ANR	673496	IdentifierDeclStatement	const size_t wordEnd = i + ( * ( * possibleOperators ) [ p ] ) . length ( ) ;	738:2:25526:25588	673450	0	True				
ANR	673497	IdentifierDecl	wordEnd = i + ( * ( * possibleOperators ) [ p ] ) . length ( )		673450	0					
ANR	673498	IdentifierDeclType	const size_t		673450	0					
ANR	673499	Identifier	wordEnd		673450	1					
ANR	673500	AssignmentExpression	wordEnd = i + ( * ( * possibleOperators ) [ p ] ) . length ( )		673450	2		=			
ANR	673501	Identifier	wordEnd		673450	0					
ANR	673502	AdditiveExpression	i + ( * ( * possibleOperators ) [ p ] ) . length ( )		673450	1		+			
ANR	673503	Identifier	i		673450	0					
ANR	673504	CallExpression	( * ( * possibleOperators ) [ p ] ) . length ( )		673450	1					
ANR	673505	Callee	( * ( * possibleOperators ) [ p ] ) . length		673450	0					
ANR	673506	MemberAccess	( * ( * possibleOperators ) [ p ] ) . length		673450	0					
ANR	673507	UnaryOperationExpression	* ( * possibleOperators ) [ p ]		673450	0					
ANR	673508	UnaryOperator	*		673450	0					
ANR	673509	ArrayIndexing	( * possibleOperators ) [ p ]		673450	1					
ANR	673510	UnaryOperationExpression	* possibleOperators		673450	0					
ANR	673511	UnaryOperator	*		673450	0					
ANR	673512	Identifier	possibleOperators		673450	1					
ANR	673513	Identifier	p		673450	1					
ANR	673514	Identifier	length		673450	1					
ANR	673515	ArgumentList			673450	1					
ANR	673516	IfStatement	if ( wordEnd > line . length ( ) )		673450	1					
ANR	673517	Condition	wordEnd > line . length ( )	739:6:25596:25618	673450	0	True				
ANR	673518	RelationalExpression	wordEnd > line . length ( )		673450	0		>			
ANR	673519	Identifier	wordEnd		673450	0					
ANR	673520	CallExpression	line . length ( )		673450	1					
ANR	673521	Callee	line . length		673450	0					
ANR	673522	MemberAccess	line . length		673450	0					
ANR	673523	Identifier	line		673450	0					
ANR	673524	Identifier	length		673450	1					
ANR	673525	ArgumentList			673450	1					
ANR	673526	ContinueStatement	continue ;	740:3:25624:25632	673450	1	True				
ANR	673527	IfStatement	"if ( line . compare ( i , ( * ( * possibleOperators ) [ p ] ) . length ( ) , * ( * possibleOperators ) [ p ] ) == 0 )"		673450	2					
ANR	673528	Condition	"line . compare ( i , ( * ( * possibleOperators ) [ p ] ) . length ( ) , * ( * possibleOperators ) [ p ] ) == 0"	741:6:25640:25722	673450	0	True				
ANR	673529	EqualityExpression	"line . compare ( i , ( * ( * possibleOperators ) [ p ] ) . length ( ) , * ( * possibleOperators ) [ p ] ) == 0"		673450	0		==			
ANR	673530	CallExpression	"line . compare ( i , ( * ( * possibleOperators ) [ p ] ) . length ( ) , * ( * possibleOperators ) [ p ] )"		673450	0					
ANR	673531	Callee	line . compare		673450	0					
ANR	673532	MemberAccess	line . compare		673450	0					
ANR	673533	Identifier	line		673450	0					
ANR	673534	Identifier	compare		673450	1					
ANR	673535	ArgumentList	i		673450	1					
ANR	673536	Argument	i		673450	0					
ANR	673537	Identifier	i		673450	0					
ANR	673538	Argument	( * ( * possibleOperators ) [ p ] ) . length ( )		673450	1					
ANR	673539	CallExpression	( * ( * possibleOperators ) [ p ] ) . length ( )		673450	0					
ANR	673540	Callee	( * ( * possibleOperators ) [ p ] ) . length		673450	0					
ANR	673541	MemberAccess	( * ( * possibleOperators ) [ p ] ) . length		673450	0					
ANR	673542	UnaryOperationExpression	* ( * possibleOperators ) [ p ]		673450	0					
ANR	673543	UnaryOperator	*		673450	0					
ANR	673544	ArrayIndexing	( * possibleOperators ) [ p ]		673450	1					
ANR	673545	UnaryOperationExpression	* possibleOperators		673450	0					
ANR	673546	UnaryOperator	*		673450	0					
ANR	673547	Identifier	possibleOperators		673450	1					
ANR	673548	Identifier	p		673450	1					
ANR	673549	Identifier	length		673450	1					
ANR	673550	ArgumentList			673450	1					
ANR	673551	Argument	* ( * possibleOperators ) [ p ]		673450	2					
ANR	673552	UnaryOperationExpression	* ( * possibleOperators ) [ p ]		673450	0					
ANR	673553	UnaryOperator	*		673450	0					
ANR	673554	ArrayIndexing	( * possibleOperators ) [ p ]		673450	1					
ANR	673555	UnaryOperationExpression	* possibleOperators		673450	0					
ANR	673556	UnaryOperator	*		673450	0					
ANR	673557	Identifier	possibleOperators		673450	1					
ANR	673558	Identifier	p		673450	1					
ANR	673559	PrimaryExpression	0		673450	1					
ANR	673560	ReturnStatement	return ( * possibleOperators ) [ p ] ;	742:3:25728:25758	673450	1	True				
ANR	673561	ArrayIndexing	( * possibleOperators ) [ p ]		673450	0					
ANR	673562	UnaryOperationExpression	* possibleOperators		673450	0					
ANR	673563	UnaryOperator	*		673450	0					
ANR	673564	Identifier	possibleOperators		673450	1					
ANR	673565	Identifier	p		673450	1					
ANR	673566	ReturnStatement	return nullptr ;	744:1:25764:25778	673450	3	True				
ANR	673567	Identifier	nullptr		673450	0					
ANR	673568	ReturnType	const string *		673450	1					
ANR	673569	Identifier	ASBase :: findOperator		673450	2					
ANR	673570	ParameterList	"const string & line , int i , const vector < const string * > * possibleOperators"		673450	3					
ANR	673571	Parameter	const string & line	728:35:25142:25159	673450	0	True				
ANR	673572	ParameterType	const string &		673450	0					
ANR	673573	Identifier	line		673450	1					
ANR	673574	Parameter	int i	728:55:25162:25166	673450	1	True				
ANR	673575	ParameterType	int		673450	0					
ANR	673576	Identifier	i		673450	1					
ANR	673577	Parameter	const vector < const string * > * possibleOperators	729:35:25204:25249	673450	2	True				
ANR	673578	ParameterType	const vector < const string * > *		673450	0					
ANR	673579	Identifier	possibleOperators		673450	1					
ANR	673580	CFGEntryNode	ENTRY		673450		True				
ANR	673581	CFGExitNode	EXIT		673450		True				
ANR	673582	Symbol	line . compare		673450						
ANR	673583	Symbol	line		673450						
ANR	673584	Symbol	i		673450						
ANR	673585	Symbol	isCharPotentialOperator		673450						
ANR	673586	Symbol	* line		673450						
ANR	673587	Symbol	* ( * possibleOperators ) [ p ]		673450						
ANR	673588	Symbol	( * ( * possibleOperators ) [ p ] ) . length		673450						
ANR	673589	Symbol	maxOperators		673450						
ANR	673590	Symbol	possibleOperators -> size		673450						
ANR	673591	Symbol	p		673450						
ANR	673592	Symbol	* i		673450						
ANR	673593	Symbol	wordEnd		673450						
ANR	673594	Symbol	* * possibleOperators		673450						
ANR	673595	Symbol	* p		673450						
ANR	673596	Symbol	* possibleOperators		673450						
ANR	673597	Symbol	* * p		673450						
ANR	673598	Symbol	possibleOperators		673450						
ANR	673599	Symbol	* * * possibleOperators		673450						
ANR	673600	Symbol	nullptr		673450						
ANR	673601	Symbol	line . length		673450						
ANR	673602	Function	ASBase :: getCurrentWord	749:0:25866:26156							
ANR	673603	FunctionDef	"ASBase :: getCurrentWord (const string & line , size_t index)"		673602	0					
ANR	673604	CompoundStatement		750:0:25936:26156	673602	0					
ANR	673605	ExpressionStatement	"assert ( isCharPotentialHeader ( line , index ) )"	751:1:25939:25981	673602	0	True				
ANR	673606	CallExpression	"assert ( isCharPotentialHeader ( line , index ) )"		673602	0					
ANR	673607	Callee	assert		673602	0					
ANR	673608	Identifier	assert		673602	0					
ANR	673609	ArgumentList	"isCharPotentialHeader ( line , index )"		673602	1					
ANR	673610	Argument	"isCharPotentialHeader ( line , index )"		673602	0					
ANR	673611	CallExpression	"isCharPotentialHeader ( line , index )"		673602	0					
ANR	673612	Callee	isCharPotentialHeader		673602	0					
ANR	673613	Identifier	isCharPotentialHeader		673602	0					
ANR	673614	ArgumentList	line		673602	1					
ANR	673615	Argument	line		673602	0					
ANR	673616	Identifier	line		673602	0					
ANR	673617	Argument	index		673602	1					
ANR	673618	Identifier	index		673602	0					
ANR	673619	IdentifierDeclStatement	size_t lineLength = line . length ( ) ;	752:1:25984:26017	673602	1	True				
ANR	673620	IdentifierDecl	lineLength = line . length ( )		673602	0					
ANR	673621	IdentifierDeclType	size_t		673602	0					
ANR	673622	Identifier	lineLength		673602	1					
ANR	673623	AssignmentExpression	lineLength = line . length ( )		673602	2		=			
ANR	673624	Identifier	lineLength		673602	0					
ANR	673625	CallExpression	line . length ( )		673602	1					
ANR	673626	Callee	line . length		673602	0					
ANR	673627	MemberAccess	line . length		673602	0					
ANR	673628	Identifier	line		673602	0					
ANR	673629	Identifier	length		673602	1					
ANR	673630	ArgumentList			673602	1					
ANR	673631	IdentifierDeclStatement	size_t i ;	753:1:26020:26028	673602	2	True				
ANR	673632	IdentifierDecl	i		673602	0					
ANR	673633	IdentifierDeclType	size_t		673602	0					
ANR	673634	Identifier	i		673602	1					
ANR	673635	ForStatement	for ( i = index ; i < lineLength ; i ++ )		673602	3					
ANR	673636	ForInit	i = index ;	754:6:26036:26045	673602	0	True				
ANR	673637	AssignmentExpression	i = index		673602	0		=			
ANR	673638	Identifier	i		673602	0					
ANR	673639	Identifier	index		673602	1					
ANR	673640	Condition	i < lineLength	754:17:26047:26060	673602	1	True				
ANR	673641	RelationalExpression	i < lineLength		673602	0		<			
ANR	673642	Identifier	i		673602	0					
ANR	673643	Identifier	lineLength		673602	1					
ANR	673644	PostIncDecOperationExpression	i ++	754:33:26063:26065	673602	2	True				
ANR	673645	Identifier	i		673602	0					
ANR	673646	IncDec	++		673602	1					
ANR	673647	CompoundStatement		6:1:132:132	673602	3					
ANR	673648	IfStatement	if ( ! isLegalNameChar ( line [ i ] ) )		673602	0					
ANR	673649	Condition	! isLegalNameChar ( line [ i ] )	756:6:26077:26101	673602	0	True				
ANR	673650	UnaryOperationExpression	! isLegalNameChar ( line [ i ] )		673602	0					
ANR	673651	UnaryOperator	!		673602	0					
ANR	673652	CallExpression	isLegalNameChar ( line [ i ] )		673602	1					
ANR	673653	Callee	isLegalNameChar		673602	0					
ANR	673654	Identifier	isLegalNameChar		673602	0					
ANR	673655	ArgumentList	line [ i ]		673602	1					
ANR	673656	Argument	line [ i ]		673602	0					
ANR	673657	ArrayIndexing	line [ i ]		673602	0					
ANR	673658	Identifier	line		673602	0					
ANR	673659	Identifier	i		673602	1					
ANR	673660	BreakStatement	break ;	757:3:26107:26112	673602	1	True				
ANR	673661	ReturnStatement	"return line . substr ( index , i - index ) ;"	759:1:26118:26154	673602	4	True				
ANR	673662	CallExpression	"line . substr ( index , i - index )"		673602	0					
ANR	673663	Callee	line . substr		673602	0					
ANR	673664	MemberAccess	line . substr		673602	0					
ANR	673665	Identifier	line		673602	0					
ANR	673666	Identifier	substr		673602	1					
ANR	673667	ArgumentList	index		673602	1					
ANR	673668	Argument	index		673602	0					
ANR	673669	Identifier	index		673602	0					
ANR	673670	Argument	i - index		673602	1					
ANR	673671	AdditiveExpression	i - index		673602	0		-			
ANR	673672	Identifier	i		673602	0					
ANR	673673	Identifier	index		673602	1					
ANR	673674	ReturnType	string		673602	1					
ANR	673675	Identifier	ASBase :: getCurrentWord		673602	2					
ANR	673676	ParameterList	"const string & line , size_t index"		673602	3					
ANR	673677	Parameter	const string & line	749:30:25896:25913	673602	0	True				
ANR	673678	ParameterType	const string &		673602	0					
ANR	673679	Identifier	line		673602	1					
ANR	673680	Parameter	size_t index	749:50:25916:25927	673602	1	True				
ANR	673681	ParameterType	size_t		673602	0					
ANR	673682	Identifier	index		673602	1					
ANR	673683	CFGEntryNode	ENTRY		673602		True				
ANR	673684	CFGExitNode	EXIT		673602		True				
ANR	673685	Symbol	isCharPotentialHeader		673602						
ANR	673686	Symbol	* i		673602						
ANR	673687	Symbol	line		673602						
ANR	673688	Symbol	line . substr		673602						
ANR	673689	Symbol	index		673602						
ANR	673690	Symbol	i		673602						
ANR	673691	Symbol	isLegalNameChar		673602						
ANR	673692	Symbol	* line		673602						
ANR	673693	Symbol	lineLength		673602						
ANR	673694	Symbol	line . length		673602						
ANR	673695	Function	ASBase :: isLegalNameChar	763:0:26242:26559							
ANR	673696	FunctionDef	ASBase :: isLegalNameChar (char ch)		673695	0					
ANR	673697	CompoundStatement		764:0:26286:26559	673695	0					
ANR	673698	IfStatement	if ( isWhiteSpace ( ch ) )		673695	0					
ANR	673699	Condition	isWhiteSpace ( ch )	765:5:26293:26308	673695	0	True				
ANR	673700	CallExpression	isWhiteSpace ( ch )		673695	0					
ANR	673701	Callee	isWhiteSpace		673695	0					
ANR	673702	Identifier	isWhiteSpace		673695	0					
ANR	673703	ArgumentList	ch		673695	1					
ANR	673704	Argument	ch		673695	0					
ANR	673705	Identifier	ch		673695	0					
ANR	673706	ReturnStatement	return false ;	766:2:26313:26325	673695	1	True				
ANR	673707	Identifier	false		673695	0					
ANR	673708	IfStatement	if ( ( unsigned char ) ch > 127 )		673695	1					
ANR	673709	Condition	( unsigned char ) ch > 127	767:5:26332:26355	673695	0	True				
ANR	673710	RelationalExpression	( unsigned char ) ch > 127		673695	0		>			
ANR	673711	CastExpression	( unsigned char ) ch		673695	0					
ANR	673712	CastTarget	unsigned char		673695	0					
ANR	673713	Identifier	ch		673695	1					
ANR	673714	PrimaryExpression	127		673695	1					
ANR	673715	ReturnStatement	return false ;	768:2:26360:26372	673695	1	True				
ANR	673716	Identifier	false		673695	0					
ANR	673717	ReturnStatement	return ( isalnum ( ( unsigned char ) ch ) || ch == '.' || ch == '_' || ( isJavaStyle ( ) && ch == '$' ) || ( isSharpStyle ( ) && ch == '@' ) ) ;	769:1:26375:26529	673695	2	True				
ANR	673718	OrExpression	isalnum ( ( unsigned char ) ch ) || ch == '.' || ch == '_' || ( isJavaStyle ( ) && ch == '$' ) || ( isSharpStyle ( ) && ch == '@' )		673695	0		||			
ANR	673719	CallExpression	isalnum ( ( unsigned char ) ch )		673695	0					
ANR	673720	Callee	isalnum		673695	0					
ANR	673721	Identifier	isalnum		673695	0					
ANR	673722	ArgumentList	( unsigned char ) ch		673695	1					
ANR	673723	Argument	( unsigned char ) ch		673695	0					
ANR	673724	CastExpression	( unsigned char ) ch		673695	0					
ANR	673725	CastTarget	unsigned char		673695	0					
ANR	673726	Identifier	ch		673695	1					
ANR	673727	OrExpression	ch == '.' || ch == '_' || ( isJavaStyle ( ) && ch == '$' ) || ( isSharpStyle ( ) && ch == '@' )		673695	1		||			
ANR	673728	EqualityExpression	ch == '.'		673695	0		==			
ANR	673729	Identifier	ch		673695	0					
ANR	673730	PrimaryExpression	'.'		673695	1					
ANR	673731	OrExpression	ch == '_' || ( isJavaStyle ( ) && ch == '$' ) || ( isSharpStyle ( ) && ch == '@' )		673695	1		||			
ANR	673732	EqualityExpression	ch == '_'		673695	0		==			
ANR	673733	Identifier	ch		673695	0					
ANR	673734	PrimaryExpression	'_'		673695	1					
ANR	673735	OrExpression	( isJavaStyle ( ) && ch == '$' ) || ( isSharpStyle ( ) && ch == '@' )		673695	1		||			
ANR	673736	AndExpression	isJavaStyle ( ) && ch == '$'		673695	0		&&			
ANR	673737	CallExpression	isJavaStyle ( )		673695	0					
ANR	673738	Callee	isJavaStyle		673695	0					
ANR	673739	Identifier	isJavaStyle		673695	0					
ANR	673740	ArgumentList			673695	1					
ANR	673741	EqualityExpression	ch == '$'		673695	1		==			
ANR	673742	Identifier	ch		673695	0					
ANR	673743	PrimaryExpression	'$'		673695	1					
ANR	673744	AndExpression	isSharpStyle ( ) && ch == '@'		673695	1		&&			
ANR	673745	CallExpression	isSharpStyle ( )		673695	0					
ANR	673746	Callee	isSharpStyle		673695	0					
ANR	673747	Identifier	isSharpStyle		673695	0					
ANR	673748	ArgumentList			673695	1					
ANR	673749	EqualityExpression	ch == '@'		673695	1		==			
ANR	673750	Identifier	ch		673695	0					
ANR	673751	PrimaryExpression	'@'		673695	1					
ANR	673752	ReturnType	bool		673695	1					
ANR	673753	Identifier	ASBase :: isLegalNameChar		673695	2					
ANR	673754	ParameterList	char ch		673695	3					
ANR	673755	Parameter	char ch	763:29:26271:26277	673695	0	True				
ANR	673756	ParameterType	char		673695	0					
ANR	673757	Identifier	ch		673695	1					
ANR	673758	CFGEntryNode	ENTRY		673695		True				
ANR	673759	CFGExitNode	EXIT		673695		True				
ANR	673760	Symbol	isalnum		673695						
ANR	673761	Symbol	isSharpStyle		673695						
ANR	673762	Symbol	ch		673695						
ANR	673763	Symbol	isJavaStyle		673695						
ANR	673764	Symbol	false		673695						
ANR	673765	Symbol	isWhiteSpace		673695						
ANR	673766	Function	ASBase :: isCharPotentialHeader	776:0:26619:26870							
ANR	673767	FunctionDef	"ASBase :: isCharPotentialHeader (const string & line , size_t i)"		673766	0					
ANR	673768	CompoundStatement		777:0:26690:26870	673766	0					
ANR	673769	ExpressionStatement	assert ( ! isWhiteSpace ( line [ i ] ) )	778:1:26693:26723	673766	0	True				
ANR	673770	CallExpression	assert ( ! isWhiteSpace ( line [ i ] ) )		673766	0					
ANR	673771	Callee	assert		673766	0					
ANR	673772	Identifier	assert		673766	0					
ANR	673773	ArgumentList	! isWhiteSpace ( line [ i ] )		673766	1					
ANR	673774	Argument	! isWhiteSpace ( line [ i ] )		673766	0					
ANR	673775	UnaryOperationExpression	! isWhiteSpace ( line [ i ] )		673766	0					
ANR	673776	UnaryOperator	!		673766	0					
ANR	673777	CallExpression	isWhiteSpace ( line [ i ] )		673766	1					
ANR	673778	Callee	isWhiteSpace		673766	0					
ANR	673779	Identifier	isWhiteSpace		673766	0					
ANR	673780	ArgumentList	line [ i ]		673766	1					
ANR	673781	Argument	line [ i ]		673766	0					
ANR	673782	ArrayIndexing	line [ i ]		673766	0					
ANR	673783	Identifier	line		673766	0					
ANR	673784	Identifier	i		673766	1					
ANR	673785	IdentifierDeclStatement	char prevCh = ' ' ;	779:1:26726:26743	673766	1	True				
ANR	673786	IdentifierDecl	prevCh = ' '		673766	0					
ANR	673787	IdentifierDeclType	char		673766	0					
ANR	673788	Identifier	prevCh		673766	1					
ANR	673789	AssignmentExpression	prevCh = ' '		673766	2		=			
ANR	673790	Identifier	prevCh		673766	0					
ANR	673791	PrimaryExpression	' '		673766	1					
ANR	673792	IfStatement	if ( i > 0 )		673766	2					
ANR	673793	Condition	i > 0	780:5:26750:26754	673766	0	True				
ANR	673794	RelationalExpression	i > 0		673766	0		>			
ANR	673795	Identifier	i		673766	0					
ANR	673796	PrimaryExpression	0		673766	1					
ANR	673797	ExpressionStatement	prevCh = line [ i - 1 ]	781:2:26759:26779	673766	1	True				
ANR	673798	AssignmentExpression	prevCh = line [ i - 1 ]		673766	0		=			
ANR	673799	Identifier	prevCh		673766	0					
ANR	673800	ArrayIndexing	line [ i - 1 ]		673766	1					
ANR	673801	Identifier	line		673766	0					
ANR	673802	AdditiveExpression	i - 1		673766	1		-			
ANR	673803	Identifier	i		673766	0					
ANR	673804	PrimaryExpression	1		673766	1					
ANR	673805	IfStatement	if ( ! isLegalNameChar ( prevCh ) && isLegalNameChar ( line [ i ] ) )		673766	3					
ANR	673806	Condition	! isLegalNameChar ( prevCh ) && isLegalNameChar ( line [ i ] )	782:5:26786:26837	673766	0	True				
ANR	673807	AndExpression	! isLegalNameChar ( prevCh ) && isLegalNameChar ( line [ i ] )		673766	0		&&			
ANR	673808	UnaryOperationExpression	! isLegalNameChar ( prevCh )		673766	0					
ANR	673809	UnaryOperator	!		673766	0					
ANR	673810	CallExpression	isLegalNameChar ( prevCh )		673766	1					
ANR	673811	Callee	isLegalNameChar		673766	0					
ANR	673812	Identifier	isLegalNameChar		673766	0					
ANR	673813	ArgumentList	prevCh		673766	1					
ANR	673814	Argument	prevCh		673766	0					
ANR	673815	Identifier	prevCh		673766	0					
ANR	673816	CallExpression	isLegalNameChar ( line [ i ] )		673766	1					
ANR	673817	Callee	isLegalNameChar		673766	0					
ANR	673818	Identifier	isLegalNameChar		673766	0					
ANR	673819	ArgumentList	line [ i ]		673766	1					
ANR	673820	Argument	line [ i ]		673766	0					
ANR	673821	ArrayIndexing	line [ i ]		673766	0					
ANR	673822	Identifier	line		673766	0					
ANR	673823	Identifier	i		673766	1					
ANR	673824	ReturnStatement	return true ;	783:2:26842:26853	673766	1	True				
ANR	673825	Identifier	true		673766	0					
ANR	673826	ReturnStatement	return false ;	784:1:26856:26868	673766	4	True				
ANR	673827	Identifier	false		673766	0					
ANR	673828	ReturnType	bool		673766	1					
ANR	673829	Identifier	ASBase :: isCharPotentialHeader		673766	2					
ANR	673830	ParameterList	"const string & line , size_t i"		673766	3					
ANR	673831	Parameter	const string & line	776:35:26654:26671	673766	0	True				
ANR	673832	ParameterType	const string &		673766	0					
ANR	673833	Identifier	line		673766	1					
ANR	673834	Parameter	size_t i	776:55:26674:26681	673766	1	True				
ANR	673835	ParameterType	size_t		673766	0					
ANR	673836	Identifier	i		673766	1					
ANR	673837	CFGEntryNode	ENTRY		673766		True				
ANR	673838	CFGExitNode	EXIT		673766		True				
ANR	673839	Symbol	* i		673766						
ANR	673840	Symbol	line		673766						
ANR	673841	Symbol	true		673766						
ANR	673842	Symbol	false		673766						
ANR	673843	Symbol	i		673766						
ANR	673844	Symbol	isLegalNameChar		673766						
ANR	673845	Symbol	* line		673766						
ANR	673846	Symbol	prevCh		673766						
ANR	673847	Symbol	isWhiteSpace		673766						
ANR	673848	Function	ASBase :: isCharPotentialOperator	788:0:26933:27309							
ANR	673849	FunctionDef	ASBase :: isCharPotentialOperator (char ch)		673848	0					
ANR	673850	CompoundStatement		789:0:26985:27309	673848	0					
ANR	673851	ExpressionStatement	assert ( ! isWhiteSpace ( ch ) )	790:1:26988:27013	673848	0	True				
ANR	673852	CallExpression	assert ( ! isWhiteSpace ( ch ) )		673848	0					
ANR	673853	Callee	assert		673848	0					
ANR	673854	Identifier	assert		673848	0					
ANR	673855	ArgumentList	! isWhiteSpace ( ch )		673848	1					
ANR	673856	Argument	! isWhiteSpace ( ch )		673848	0					
ANR	673857	UnaryOperationExpression	! isWhiteSpace ( ch )		673848	0					
ANR	673858	UnaryOperator	!		673848	0					
ANR	673859	CallExpression	isWhiteSpace ( ch )		673848	1					
ANR	673860	Callee	isWhiteSpace		673848	0					
ANR	673861	Identifier	isWhiteSpace		673848	0					
ANR	673862	ArgumentList	ch		673848	1					
ANR	673863	Argument	ch		673848	0					
ANR	673864	Identifier	ch		673848	0					
ANR	673865	IfStatement	if ( ( unsigned ) ch > 127 )		673848	1					
ANR	673866	Condition	( unsigned ) ch > 127	791:5:27020:27038	673848	0	True				
ANR	673867	RelationalExpression	( unsigned ) ch > 127		673848	0		>			
ANR	673868	CastExpression	( unsigned ) ch		673848	0					
ANR	673869	CastTarget	unsigned		673848	0					
ANR	673870	Identifier	ch		673848	1					
ANR	673871	PrimaryExpression	127		673848	1					
ANR	673872	ReturnStatement	return false ;	792:2:27043:27055	673848	1	True				
ANR	673873	Identifier	false		673848	0					
ANR	673874	ReturnStatement	"return ( ispunct ( ( unsigned char ) ch ) && ch != '{' && ch != '}' && ch != '(' && ch != ')' && ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""' ) ;"	793:1:27058:27307	673848	2	True				
ANR	673875	AndExpression	"ispunct ( ( unsigned char ) ch ) && ch != '{' && ch != '}' && ch != '(' && ch != ')' && ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	0		&&			
ANR	673876	CallExpression	ispunct ( ( unsigned char ) ch )		673848	0					
ANR	673877	Callee	ispunct		673848	0					
ANR	673878	Identifier	ispunct		673848	0					
ANR	673879	ArgumentList	( unsigned char ) ch		673848	1					
ANR	673880	Argument	( unsigned char ) ch		673848	0					
ANR	673881	CastExpression	( unsigned char ) ch		673848	0					
ANR	673882	CastTarget	unsigned char		673848	0					
ANR	673883	Identifier	ch		673848	1					
ANR	673884	AndExpression	"ch != '{' && ch != '}' && ch != '(' && ch != ')' && ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673885	EqualityExpression	ch != '{'		673848	0		!=			
ANR	673886	Identifier	ch		673848	0					
ANR	673887	PrimaryExpression	'{'		673848	1					
ANR	673888	AndExpression	"ch != '}' && ch != '(' && ch != ')' && ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673889	EqualityExpression	ch != '}'		673848	0		!=			
ANR	673890	Identifier	ch		673848	0					
ANR	673891	PrimaryExpression	'}'		673848	1					
ANR	673892	AndExpression	"ch != '(' && ch != ')' && ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673893	EqualityExpression	ch != '('		673848	0		!=			
ANR	673894	Identifier	ch		673848	0					
ANR	673895	PrimaryExpression	'('		673848	1					
ANR	673896	AndExpression	"ch != ')' && ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673897	EqualityExpression	ch != ')'		673848	0		!=			
ANR	673898	Identifier	ch		673848	0					
ANR	673899	PrimaryExpression	')'		673848	1					
ANR	673900	AndExpression	"ch != '[' && ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673901	EqualityExpression	ch != '['		673848	0		!=			
ANR	673902	Identifier	ch		673848	0					
ANR	673903	PrimaryExpression	'['		673848	1					
ANR	673904	AndExpression	"ch != ']' && ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673905	EqualityExpression	ch != ']'		673848	0		!=			
ANR	673906	Identifier	ch		673848	0					
ANR	673907	PrimaryExpression	']'		673848	1					
ANR	673908	AndExpression	"ch != ';' && ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673909	EqualityExpression	ch != ';'		673848	0		!=			
ANR	673910	Identifier	ch		673848	0					
ANR	673911	PrimaryExpression	';'		673848	1					
ANR	673912	AndExpression	"ch != ',' && ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673913	EqualityExpression	"ch != ','"		673848	0		!=			
ANR	673914	Identifier	ch		673848	0					
ANR	673915	PrimaryExpression	"','"		673848	1					
ANR	673916	AndExpression	"ch != '#' && ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673917	EqualityExpression	ch != '#'		673848	0		!=			
ANR	673918	Identifier	ch		673848	0					
ANR	673919	PrimaryExpression	'#'		673848	1					
ANR	673920	AndExpression	"ch != '\\\\' && ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673921	EqualityExpression	ch != '\\\\'		673848	0		!=			
ANR	673922	Identifier	ch		673848	0					
ANR	673923	PrimaryExpression	'\\\\'		673848	1					
ANR	673924	AndExpression	"ch != '\\'' && ch != '\\""'"		673848	1		&&			
ANR	673925	EqualityExpression	ch != '\\''		673848	0		!=			
ANR	673926	Identifier	ch		673848	0					
ANR	673927	PrimaryExpression	'\\''		673848	1					
ANR	673928	EqualityExpression	"ch != '\\""'"		673848	1		!=			
ANR	673929	Identifier	ch		673848	0					
ANR	673930	PrimaryExpression	"'\\""'"		673848	1					
ANR	673931	ReturnType	bool		673848	1					
ANR	673932	Identifier	ASBase :: isCharPotentialOperator		673848	2					
ANR	673933	ParameterList	char ch		673848	3					
ANR	673934	Parameter	char ch	788:37:26970:26976	673848	0	True				
ANR	673935	ParameterType	char		673848	0					
ANR	673936	Identifier	ch		673848	1					
ANR	673937	CFGEntryNode	ENTRY		673848		True				
ANR	673938	CFGExitNode	EXIT		673848		True				
ANR	673939	Symbol	ch		673848						
ANR	673940	Symbol	false		673848						
ANR	673941	Symbol	ispunct		673848						
ANR	673942	Symbol	isWhiteSpace		673848						
ANR	673943	Function	ASBase :: isDigit	804:0:27417:27489							
ANR	673944	FunctionDef	ASBase :: isDigit (char ch)		673943	0					
ANR	673945	CompoundStatement		805:0:27453:27489	673943	0					
ANR	673946	ReturnStatement	return ( ch >= '0' && ch <= '9' ) ;	806:1:27456:27487	673943	0	True				
ANR	673947	AndExpression	ch >= '0' && ch <= '9'		673943	0		&&			
ANR	673948	RelationalExpression	ch >= '0'		673943	0		>=			
ANR	673949	Identifier	ch		673943	0					
ANR	673950	PrimaryExpression	'0'		673943	1					
ANR	673951	RelationalExpression	ch <= '9'		673943	1		<=			
ANR	673952	Identifier	ch		673943	0					
ANR	673953	PrimaryExpression	'9'		673943	1					
ANR	673954	ReturnType	bool		673943	1					
ANR	673955	Identifier	ASBase :: isDigit		673943	2					
ANR	673956	ParameterList	char ch		673943	3					
ANR	673957	Parameter	char ch	804:21:27438:27444	673943	0	True				
ANR	673958	ParameterType	char		673943	0					
ANR	673959	Identifier	ch		673943	1					
ANR	673960	CFGEntryNode	ENTRY		673943		True				
ANR	673961	CFGExitNode	EXIT		673943		True				
ANR	673962	Symbol	ch		673943						
ANR	673963	Function	ASBase :: isDigitSeparator	810:0:27546:28012							
ANR	673964	FunctionDef	"ASBase :: isDigitSeparator (const string & line , int i)"		673963	0					
ANR	673965	CompoundStatement		811:0:27609:28012	673963	0					
ANR	673966	ExpressionStatement	assert ( line [ i ] == '\\'' )	812:1:27612:27635	673963	0	True				
ANR	673967	CallExpression	assert ( line [ i ] == '\\'' )		673963	0					
ANR	673968	Callee	assert		673963	0					
ANR	673969	Identifier	assert		673963	0					
ANR	673970	ArgumentList	line [ i ] == '\\''		673963	1					
ANR	673971	Argument	line [ i ] == '\\''		673963	0					
ANR	673972	EqualityExpression	line [ i ] == '\\''		673963	0		==			
ANR	673973	ArrayIndexing	line [ i ]		673963	0					
ANR	673974	Identifier	line		673963	0					
ANR	673975	Identifier	i		673963	1					
ANR	673976	PrimaryExpression	'\\''		673963	1					
ANR	673977	IdentifierDeclStatement	bool foundDigitSeparator = i > 0 && isxdigit ( ( unsigned char ) line [ i - 1 ] ) && i < ( int ) line . length ( ) - 1 && isxdigit ( ( unsigned char ) line [ i + 1 ] ) ;	815:1:27752:27981	673963	1	True				
ANR	673978	IdentifierDecl	foundDigitSeparator = i > 0 && isxdigit ( ( unsigned char ) line [ i - 1 ] ) && i < ( int ) line . length ( ) - 1 && isxdigit ( ( unsigned char ) line [ i + 1 ] )		673963	0					
ANR	673979	IdentifierDeclType	bool		673963	0					
ANR	673980	Identifier	foundDigitSeparator		673963	1					
ANR	673981	AssignmentExpression	foundDigitSeparator = i > 0 && isxdigit ( ( unsigned char ) line [ i - 1 ] ) && i < ( int ) line . length ( ) - 1 && isxdigit ( ( unsigned char ) line [ i + 1 ] )		673963	2		=			
ANR	673982	Identifier	foundDigitSeparator		673963	0					
ANR	673983	AndExpression	i > 0 && isxdigit ( ( unsigned char ) line [ i - 1 ] ) && i < ( int ) line . length ( ) - 1 && isxdigit ( ( unsigned char ) line [ i + 1 ] )		673963	1		&&			
ANR	673984	RelationalExpression	i > 0		673963	0		>			
ANR	673985	Identifier	i		673963	0					
ANR	673986	PrimaryExpression	0		673963	1					
ANR	673987	AndExpression	isxdigit ( ( unsigned char ) line [ i - 1 ] ) && i < ( int ) line . length ( ) - 1 && isxdigit ( ( unsigned char ) line [ i + 1 ] )		673963	1		&&			
ANR	673988	CallExpression	isxdigit ( ( unsigned char ) line [ i - 1 ] )		673963	0					
ANR	673989	Callee	isxdigit		673963	0					
ANR	673990	Identifier	isxdigit		673963	0					
ANR	673991	ArgumentList	( unsigned char ) line [ i - 1 ]		673963	1					
ANR	673992	Argument	( unsigned char ) line [ i - 1 ]		673963	0					
ANR	673993	CastExpression	( unsigned char ) line [ i - 1 ]		673963	0					
ANR	673994	CastTarget	unsigned char		673963	0					
ANR	673995	ArrayIndexing	line [ i - 1 ]		673963	1					
ANR	673996	Identifier	line		673963	0					
ANR	673997	AdditiveExpression	i - 1		673963	1		-			
ANR	673998	Identifier	i		673963	0					
ANR	673999	PrimaryExpression	1		673963	1					
ANR	674000	AndExpression	i < ( int ) line . length ( ) - 1 && isxdigit ( ( unsigned char ) line [ i + 1 ] )		673963	1		&&			
ANR	674001	RelationalExpression	i < ( int ) line . length ( ) - 1		673963	0		<			
ANR	674002	Identifier	i		673963	0					
ANR	674003	AdditiveExpression	( int ) line . length ( ) - 1		673963	1		-			
ANR	674004	CastExpression	( int ) line . length ( )		673963	0					
ANR	674005	CastTarget	int		673963	0					
ANR	674006	CallExpression	line . length ( )		673963	1					
ANR	674007	Callee	line . length		673963	0					
ANR	674008	MemberAccess	line . length		673963	0					
ANR	674009	Identifier	line		673963	0					
ANR	674010	Identifier	length		673963	1					
ANR	674011	ArgumentList			673963	1					
ANR	674012	PrimaryExpression	1		673963	1					
ANR	674013	CallExpression	isxdigit ( ( unsigned char ) line [ i + 1 ] )		673963	1					
ANR	674014	Callee	isxdigit		673963	0					
ANR	674015	Identifier	isxdigit		673963	0					
ANR	674016	ArgumentList	( unsigned char ) line [ i + 1 ]		673963	1					
ANR	674017	Argument	( unsigned char ) line [ i + 1 ]		673963	0					
ANR	674018	CastExpression	( unsigned char ) line [ i + 1 ]		673963	0					
ANR	674019	CastTarget	unsigned char		673963	0					
ANR	674020	ArrayIndexing	line [ i + 1 ]		673963	1					
ANR	674021	Identifier	line		673963	0					
ANR	674022	AdditiveExpression	i + 1		673963	1		+			
ANR	674023	Identifier	i		673963	0					
ANR	674024	PrimaryExpression	1		673963	1					
ANR	674025	ReturnStatement	return foundDigitSeparator ;	819:1:27984:28010	673963	2	True				
ANR	674026	Identifier	foundDigitSeparator		673963	0					
ANR	674027	ReturnType	bool		673963	1					
ANR	674028	Identifier	ASBase :: isDigitSeparator		673963	2					
ANR	674029	ParameterList	"const string & line , int i"		673963	3					
ANR	674030	Parameter	const string & line	810:30:27576:27593	673963	0	True				
ANR	674031	ParameterType	const string &		673963	0					
ANR	674032	Identifier	line		673963	1					
ANR	674033	Parameter	int i	810:50:27596:27600	673963	1	True				
ANR	674034	ParameterType	int		673963	0					
ANR	674035	Identifier	i		673963	1					
ANR	674036	CFGEntryNode	ENTRY		673963		True				
ANR	674037	CFGExitNode	EXIT		673963		True				
ANR	674038	Symbol	* i		673963						
ANR	674039	Symbol	foundDigitSeparator		673963						
ANR	674040	Symbol	line		673963						
ANR	674041	Symbol	i		673963						
ANR	674042	Symbol	* line		673963						
ANR	674043	Symbol	isxdigit		673963						
ANR	674044	Symbol	line . length		673963						
ANR	674045	Function	ASBase :: peekNextChar	823:0:28053:28262							
ANR	674046	FunctionDef	"ASBase :: peekNextChar (const string & line , int i)"		674045	0					
ANR	674047	CompoundStatement		824:0:28112:28262	674045	0					
ANR	674048	IdentifierDeclStatement	char ch = ' ' ;	825:1:28115:28128	674045	0	True				
ANR	674049	IdentifierDecl	ch = ' '		674045	0					
ANR	674050	IdentifierDeclType	char		674045	0					
ANR	674051	Identifier	ch		674045	1					
ANR	674052	AssignmentExpression	ch = ' '		674045	2		=			
ANR	674053	Identifier	ch		674045	0					
ANR	674054	PrimaryExpression	' '		674045	1					
ANR	674055	IdentifierDeclStatement	"size_t peekNum = line . find_first_not_of ( "" \\t"" , i + 1 ) ;"	826:1:28131:28184	674045	1	True				
ANR	674056	IdentifierDecl	"peekNum = line . find_first_not_of ( "" \\t"" , i + 1 )"		674045	0					
ANR	674057	IdentifierDeclType	size_t		674045	0					
ANR	674058	Identifier	peekNum		674045	1					
ANR	674059	AssignmentExpression	"peekNum = line . find_first_not_of ( "" \\t"" , i + 1 )"		674045	2		=			
ANR	674060	Identifier	peekNum		674045	0					
ANR	674061	CallExpression	"line . find_first_not_of ( "" \\t"" , i + 1 )"		674045	1					
ANR	674062	Callee	line . find_first_not_of		674045	0					
ANR	674063	MemberAccess	line . find_first_not_of		674045	0					
ANR	674064	Identifier	line		674045	0					
ANR	674065	Identifier	find_first_not_of		674045	1					
ANR	674066	ArgumentList	""" \\t"""		674045	1					
ANR	674067	Argument	""" \\t"""		674045	0					
ANR	674068	PrimaryExpression	""" \\t"""		674045	0					
ANR	674069	Argument	i + 1		674045	1					
ANR	674070	AdditiveExpression	i + 1		674045	0		+			
ANR	674071	Identifier	i		674045	0					
ANR	674072	PrimaryExpression	1		674045	1					
ANR	674073	IfStatement	if ( peekNum == string :: npos )		674045	2					
ANR	674074	Condition	peekNum == string :: npos	827:5:28191:28213	674045	0	True				
ANR	674075	EqualityExpression	peekNum == string :: npos		674045	0		==			
ANR	674076	Identifier	peekNum		674045	0					
ANR	674077	Identifier	string :: npos		674045	1					
ANR	674078	ReturnStatement	return ch ;	828:2:28218:28227	674045	1	True				
ANR	674079	Identifier	ch		674045	0					
ANR	674080	ExpressionStatement	ch = line [ peekNum ]	829:1:28230:28248	674045	3	True				
ANR	674081	AssignmentExpression	ch = line [ peekNum ]		674045	0		=			
ANR	674082	Identifier	ch		674045	0					
ANR	674083	ArrayIndexing	line [ peekNum ]		674045	1					
ANR	674084	Identifier	line		674045	0					
ANR	674085	Identifier	peekNum		674045	1					
ANR	674086	ReturnStatement	return ch ;	830:1:28251:28260	674045	4	True				
ANR	674087	Identifier	ch		674045	0					
ANR	674088	ReturnType	char		674045	1					
ANR	674089	Identifier	ASBase :: peekNextChar		674045	2					
ANR	674090	ParameterList	"const string & line , int i"		674045	3					
ANR	674091	Parameter	const string & line	823:26:28079:28096	674045	0	True				
ANR	674092	ParameterType	const string &		674045	0					
ANR	674093	Identifier	line		674045	1					
ANR	674094	Parameter	int i	823:46:28099:28103	674045	1	True				
ANR	674095	ParameterType	int		674045	0					
ANR	674096	Identifier	i		674045	1					
ANR	674097	CFGEntryNode	ENTRY		674045		True				
ANR	674098	CFGExitNode	EXIT		674045		True				
ANR	674099	Symbol	* peekNum		674045						
ANR	674100	Symbol	ch		674045						
ANR	674101	Symbol	line		674045						
ANR	674102	Symbol	string :: npos		674045						
ANR	674103	Symbol	i		674045						
ANR	674104	Symbol	* line		674045						
ANR	674105	Symbol	line . find_first_not_of		674045						
ANR	674106	Symbol	peekNum		674045						
