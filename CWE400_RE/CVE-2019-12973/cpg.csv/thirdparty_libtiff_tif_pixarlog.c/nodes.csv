command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1095527	File	data/converged/CVE-2019-12973_openjpeg/thirdparty_libtiff_tif_pixarlog.c								
ANR	1095528	DeclStmt									
ANR	1095529	Decl							float	float	Fltsize
ANR	1095530	DeclStmt									
ANR	1095531	Decl							float	float	LogK1
ANR	1095532	Decl							float	float	LogK2
ANR	1095533	DeclStmt									
ANR	1095534	Decl							int	int	i
ANR	1095535	Function	horizontalAccumulateF	113:0:4949:6378							
ANR	1095536	FunctionDef	"horizontalAccumulateF (uint16 * wp , int n , int stride , float * op , float * ToLinearF)"		1095535	0					
ANR	1095537	CompoundStatement		116:0:5044:6378	1095535	0					
ANR	1095538	Statement	register	117:4:5050:5057	1095535	0	True				
ANR	1095539	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	117:13:5059:5093	1095535	1	True				
ANR	1095540	IdentifierDecl	cr		1095535	0					
ANR	1095541	IdentifierDeclType	unsigned int		1095535	0					
ANR	1095542	Identifier	cr		1095535	1					
ANR	1095543	IdentifierDecl	cg		1095535	1					
ANR	1095544	IdentifierDeclType	unsigned int		1095535	0					
ANR	1095545	Identifier	cg		1095535	1					
ANR	1095546	IdentifierDecl	cb		1095535	2					
ANR	1095547	IdentifierDeclType	unsigned int		1095535	0					
ANR	1095548	Identifier	cb		1095535	1					
ANR	1095549	IdentifierDecl	ca		1095535	3					
ANR	1095550	IdentifierDeclType	unsigned int		1095535	0					
ANR	1095551	Identifier	ca		1095535	1					
ANR	1095552	IdentifierDecl	mask		1095535	4					
ANR	1095553	IdentifierDeclType	unsigned int		1095535	0					
ANR	1095554	Identifier	mask		1095535	1					
ANR	1095555	Statement	register	118:4:5099:5106	1095535	2	True				
ANR	1095556	IdentifierDeclStatement	"float t0 , t1 , t2 , t3 ;"	118:13:5108:5129	1095535	3	True				
ANR	1095557	IdentifierDecl	t0		1095535	0					
ANR	1095558	IdentifierDeclType	float		1095535	0					
ANR	1095559	Identifier	t0		1095535	1					
ANR	1095560	IdentifierDecl	t1		1095535	1					
ANR	1095561	IdentifierDeclType	float		1095535	0					
ANR	1095562	Identifier	t1		1095535	1					
ANR	1095563	IdentifierDecl	t2		1095535	2					
ANR	1095564	IdentifierDeclType	float		1095535	0					
ANR	1095565	Identifier	t2		1095535	1					
ANR	1095566	IdentifierDecl	t3		1095535	3					
ANR	1095567	IdentifierDeclType	float		1095535	0					
ANR	1095568	Identifier	t3		1095535	1					
ANR	1095569	IfStatement	if ( n >= stride )		1095535	4					
ANR	1095570	Condition	n >= stride	120:8:5140:5150	1095535	0	True				
ANR	1095571	RelationalExpression	n >= stride		1095535	0		>=			
ANR	1095572	Identifier	n		1095535	0					
ANR	1095573	Identifier	stride		1095535	1					
ANR	1095574	CompoundStatement		5:21:108:108	1095535	1					
ANR	1095575	ExpressionStatement	mask = CODE_MASK	121:1:5156:5172	1095535	0	True				
ANR	1095576	AssignmentExpression	mask = CODE_MASK		1095535	0		=			
ANR	1095577	Identifier	mask		1095535	0					
ANR	1095578	Identifier	CODE_MASK		1095535	1					
ANR	1095579	IfStatement	if ( stride == 3 )		1095535	1					
ANR	1095580	Condition	stride == 3	122:5:5179:5189	1095535	0	True				
ANR	1095581	EqualityExpression	stride == 3		1095535	0		==			
ANR	1095582	Identifier	stride		1095535	0					
ANR	1095583	PrimaryExpression	3		1095535	1					
ANR	1095584	CompoundStatement		7:18:147:147	1095535	1					
ANR	1095585	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]	123:5:5199:5234	1095535	0	True				
ANR	1095586	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		1095535	0		=			
ANR	1095587	Identifier	t0		1095535	0					
ANR	1095588	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		1095535	1					
ANR	1095589	Identifier	ToLinearF		1095535	0					
ANR	1095590	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1095535	1		=			
ANR	1095591	Identifier	cr		1095535	0					
ANR	1095592	BitAndExpression	wp [ 0 ] & mask		1095535	1		&			
ANR	1095593	ArrayIndexing	wp [ 0 ]		1095535	0					
ANR	1095594	Identifier	wp		1095535	0					
ANR	1095595	PrimaryExpression	0		1095535	1					
ANR	1095596	Identifier	mask		1095535	1					
ANR	1095597	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]	124:5:5241:5276	1095535	1	True				
ANR	1095598	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		1095535	0		=			
ANR	1095599	Identifier	t1		1095535	0					
ANR	1095600	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		1095535	1					
ANR	1095601	Identifier	ToLinearF		1095535	0					
ANR	1095602	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1095535	1		=			
ANR	1095603	Identifier	cg		1095535	0					
ANR	1095604	BitAndExpression	wp [ 1 ] & mask		1095535	1		&			
ANR	1095605	ArrayIndexing	wp [ 1 ]		1095535	0					
ANR	1095606	Identifier	wp		1095535	0					
ANR	1095607	PrimaryExpression	1		1095535	1					
ANR	1095608	Identifier	mask		1095535	1					
ANR	1095609	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]	125:5:5283:5318	1095535	2	True				
ANR	1095610	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		1095535	0		=			
ANR	1095611	Identifier	t2		1095535	0					
ANR	1095612	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		1095535	1					
ANR	1095613	Identifier	ToLinearF		1095535	0					
ANR	1095614	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1095535	1		=			
ANR	1095615	Identifier	cb		1095535	0					
ANR	1095616	BitAndExpression	wp [ 2 ] & mask		1095535	1		&			
ANR	1095617	ArrayIndexing	wp [ 2 ]		1095535	0					
ANR	1095618	Identifier	wp		1095535	0					
ANR	1095619	PrimaryExpression	2		1095535	1					
ANR	1095620	Identifier	mask		1095535	1					
ANR	1095621	ExpressionStatement	op [ 0 ] = t0	126:5:5325:5335	1095535	3	True				
ANR	1095622	AssignmentExpression	op [ 0 ] = t0		1095535	0		=			
ANR	1095623	ArrayIndexing	op [ 0 ]		1095535	0					
ANR	1095624	Identifier	op		1095535	0					
ANR	1095625	PrimaryExpression	0		1095535	1					
ANR	1095626	Identifier	t0		1095535	1					
ANR	1095627	ExpressionStatement	op [ 1 ] = t1	127:5:5342:5352	1095535	4	True				
ANR	1095628	AssignmentExpression	op [ 1 ] = t1		1095535	0		=			
ANR	1095629	ArrayIndexing	op [ 1 ]		1095535	0					
ANR	1095630	Identifier	op		1095535	0					
ANR	1095631	PrimaryExpression	1		1095535	1					
ANR	1095632	Identifier	t1		1095535	1					
ANR	1095633	ExpressionStatement	op [ 2 ] = t2	128:5:5359:5369	1095535	5	True				
ANR	1095634	AssignmentExpression	op [ 2 ] = t2		1095535	0		=			
ANR	1095635	ArrayIndexing	op [ 2 ]		1095535	0					
ANR	1095636	Identifier	op		1095535	0					
ANR	1095637	PrimaryExpression	2		1095535	1					
ANR	1095638	Identifier	t2		1095535	1					
ANR	1095639	ExpressionStatement	n -= 3	129:5:5376:5382	1095535	6	True				
ANR	1095640	AssignmentExpression	n -= 3		1095535	0		-=			
ANR	1095641	Identifier	n		1095535	0					
ANR	1095642	PrimaryExpression	3		1095535	1					
ANR	1095643	WhileStatement	while ( n > 0 )		1095535	7					
ANR	1095644	Condition	n > 0	130:12:5396:5400	1095535	0	True				
ANR	1095645	RelationalExpression	n > 0		1095535	0		>			
ANR	1095646	Identifier	n		1095535	0					
ANR	1095647	PrimaryExpression	0		1095535	1					
ANR	1095648	CompoundStatement		15:19:358:358	1095535	1					
ANR	1095649	ExpressionStatement	wp += 3	131:2:5407:5414	1095535	0	True				
ANR	1095650	AssignmentExpression	wp += 3		1095535	0		+=			
ANR	1095651	Identifier	wp		1095535	0					
ANR	1095652	PrimaryExpression	3		1095535	1					
ANR	1095653	ExpressionStatement	op += 3	132:2:5418:5425	1095535	1	True				
ANR	1095654	AssignmentExpression	op += 3		1095535	0		+=			
ANR	1095655	Identifier	op		1095535	0					
ANR	1095656	PrimaryExpression	3		1095535	1					
ANR	1095657	ExpressionStatement	n -= 3	133:2:5429:5435	1095535	2	True				
ANR	1095658	AssignmentExpression	n -= 3		1095535	0		-=			
ANR	1095659	Identifier	n		1095535	0					
ANR	1095660	PrimaryExpression	3		1095535	1					
ANR	1095661	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]	134:2:5439:5475	1095535	3	True				
ANR	1095662	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		1095535	0		=			
ANR	1095663	Identifier	t0		1095535	0					
ANR	1095664	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		1095535	1					
ANR	1095665	Identifier	ToLinearF		1095535	0					
ANR	1095666	BitAndExpression	( cr += wp [ 0 ] ) & mask		1095535	1		&			
ANR	1095667	AssignmentExpression	cr += wp [ 0 ]		1095535	0		+=			
ANR	1095668	Identifier	cr		1095535	0					
ANR	1095669	ArrayIndexing	wp [ 0 ]		1095535	1					
ANR	1095670	Identifier	wp		1095535	0					
ANR	1095671	PrimaryExpression	0		1095535	1					
ANR	1095672	Identifier	mask		1095535	1					
ANR	1095673	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]	135:2:5479:5515	1095535	4	True				
ANR	1095674	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		1095535	0		=			
ANR	1095675	Identifier	t1		1095535	0					
ANR	1095676	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		1095535	1					
ANR	1095677	Identifier	ToLinearF		1095535	0					
ANR	1095678	BitAndExpression	( cg += wp [ 1 ] ) & mask		1095535	1		&			
ANR	1095679	AssignmentExpression	cg += wp [ 1 ]		1095535	0		+=			
ANR	1095680	Identifier	cg		1095535	0					
ANR	1095681	ArrayIndexing	wp [ 1 ]		1095535	1					
ANR	1095682	Identifier	wp		1095535	0					
ANR	1095683	PrimaryExpression	1		1095535	1					
ANR	1095684	Identifier	mask		1095535	1					
ANR	1095685	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]	136:2:5519:5555	1095535	5	True				
ANR	1095686	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		1095535	0		=			
ANR	1095687	Identifier	t2		1095535	0					
ANR	1095688	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		1095535	1					
ANR	1095689	Identifier	ToLinearF		1095535	0					
ANR	1095690	BitAndExpression	( cb += wp [ 2 ] ) & mask		1095535	1		&			
ANR	1095691	AssignmentExpression	cb += wp [ 2 ]		1095535	0		+=			
ANR	1095692	Identifier	cb		1095535	0					
ANR	1095693	ArrayIndexing	wp [ 2 ]		1095535	1					
ANR	1095694	Identifier	wp		1095535	0					
ANR	1095695	PrimaryExpression	2		1095535	1					
ANR	1095696	Identifier	mask		1095535	1					
ANR	1095697	ExpressionStatement	op [ 0 ] = t0	137:2:5559:5569	1095535	6	True				
ANR	1095698	AssignmentExpression	op [ 0 ] = t0		1095535	0		=			
ANR	1095699	ArrayIndexing	op [ 0 ]		1095535	0					
ANR	1095700	Identifier	op		1095535	0					
ANR	1095701	PrimaryExpression	0		1095535	1					
ANR	1095702	Identifier	t0		1095535	1					
ANR	1095703	ExpressionStatement	op [ 1 ] = t1	138:2:5573:5583	1095535	7	True				
ANR	1095704	AssignmentExpression	op [ 1 ] = t1		1095535	0		=			
ANR	1095705	ArrayIndexing	op [ 1 ]		1095535	0					
ANR	1095706	Identifier	op		1095535	0					
ANR	1095707	PrimaryExpression	1		1095535	1					
ANR	1095708	Identifier	t1		1095535	1					
ANR	1095709	ExpressionStatement	op [ 2 ] = t2	139:2:5587:5597	1095535	8	True				
ANR	1095710	AssignmentExpression	op [ 2 ] = t2		1095535	0		=			
ANR	1095711	ArrayIndexing	op [ 2 ]		1095535	0					
ANR	1095712	Identifier	op		1095535	0					
ANR	1095713	PrimaryExpression	2		1095535	1					
ANR	1095714	Identifier	t2		1095535	1					
ANR	1095715	ElseStatement	else		1095535	0					
ANR	1095716	IfStatement	if ( stride == 4 )		1095535	0					
ANR	1095717	Condition	stride == 4	141:12:5618:5628	1095535	0	True				
ANR	1095718	EqualityExpression	stride == 4		1095535	0		==			
ANR	1095719	Identifier	stride		1095535	0					
ANR	1095720	PrimaryExpression	4		1095535	1					
ANR	1095721	CompoundStatement		26:25:586:586	1095535	1					
ANR	1095722	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]	142:5:5638:5673	1095535	0	True				
ANR	1095723	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		1095535	0		=			
ANR	1095724	Identifier	t0		1095535	0					
ANR	1095725	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		1095535	1					
ANR	1095726	Identifier	ToLinearF		1095535	0					
ANR	1095727	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1095535	1		=			
ANR	1095728	Identifier	cr		1095535	0					
ANR	1095729	BitAndExpression	wp [ 0 ] & mask		1095535	1		&			
ANR	1095730	ArrayIndexing	wp [ 0 ]		1095535	0					
ANR	1095731	Identifier	wp		1095535	0					
ANR	1095732	PrimaryExpression	0		1095535	1					
ANR	1095733	Identifier	mask		1095535	1					
ANR	1095734	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]	143:5:5680:5715	1095535	1	True				
ANR	1095735	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		1095535	0		=			
ANR	1095736	Identifier	t1		1095535	0					
ANR	1095737	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		1095535	1					
ANR	1095738	Identifier	ToLinearF		1095535	0					
ANR	1095739	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1095535	1		=			
ANR	1095740	Identifier	cg		1095535	0					
ANR	1095741	BitAndExpression	wp [ 1 ] & mask		1095535	1		&			
ANR	1095742	ArrayIndexing	wp [ 1 ]		1095535	0					
ANR	1095743	Identifier	wp		1095535	0					
ANR	1095744	PrimaryExpression	1		1095535	1					
ANR	1095745	Identifier	mask		1095535	1					
ANR	1095746	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]	144:5:5722:5757	1095535	2	True				
ANR	1095747	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		1095535	0		=			
ANR	1095748	Identifier	t2		1095535	0					
ANR	1095749	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		1095535	1					
ANR	1095750	Identifier	ToLinearF		1095535	0					
ANR	1095751	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1095535	1		=			
ANR	1095752	Identifier	cb		1095535	0					
ANR	1095753	BitAndExpression	wp [ 2 ] & mask		1095535	1		&			
ANR	1095754	ArrayIndexing	wp [ 2 ]		1095535	0					
ANR	1095755	Identifier	wp		1095535	0					
ANR	1095756	PrimaryExpression	2		1095535	1					
ANR	1095757	Identifier	mask		1095535	1					
ANR	1095758	ExpressionStatement	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ]	145:5:5764:5799	1095535	3	True				
ANR	1095759	AssignmentExpression	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ]		1095535	0		=			
ANR	1095760	Identifier	t3		1095535	0					
ANR	1095761	ArrayIndexing	ToLinearF [ ca = ( wp [ 3 ] & mask ) ]		1095535	1					
ANR	1095762	Identifier	ToLinearF		1095535	0					
ANR	1095763	AssignmentExpression	ca = ( wp [ 3 ] & mask )		1095535	1		=			
ANR	1095764	Identifier	ca		1095535	0					
ANR	1095765	BitAndExpression	wp [ 3 ] & mask		1095535	1		&			
ANR	1095766	ArrayIndexing	wp [ 3 ]		1095535	0					
ANR	1095767	Identifier	wp		1095535	0					
ANR	1095768	PrimaryExpression	3		1095535	1					
ANR	1095769	Identifier	mask		1095535	1					
ANR	1095770	ExpressionStatement	op [ 0 ] = t0	146:5:5806:5816	1095535	4	True				
ANR	1095771	AssignmentExpression	op [ 0 ] = t0		1095535	0		=			
ANR	1095772	ArrayIndexing	op [ 0 ]		1095535	0					
ANR	1095773	Identifier	op		1095535	0					
ANR	1095774	PrimaryExpression	0		1095535	1					
ANR	1095775	Identifier	t0		1095535	1					
ANR	1095776	ExpressionStatement	op [ 1 ] = t1	147:5:5823:5833	1095535	5	True				
ANR	1095777	AssignmentExpression	op [ 1 ] = t1		1095535	0		=			
ANR	1095778	ArrayIndexing	op [ 1 ]		1095535	0					
ANR	1095779	Identifier	op		1095535	0					
ANR	1095780	PrimaryExpression	1		1095535	1					
ANR	1095781	Identifier	t1		1095535	1					
ANR	1095782	ExpressionStatement	op [ 2 ] = t2	148:5:5840:5850	1095535	6	True				
ANR	1095783	AssignmentExpression	op [ 2 ] = t2		1095535	0		=			
ANR	1095784	ArrayIndexing	op [ 2 ]		1095535	0					
ANR	1095785	Identifier	op		1095535	0					
ANR	1095786	PrimaryExpression	2		1095535	1					
ANR	1095787	Identifier	t2		1095535	1					
ANR	1095788	ExpressionStatement	op [ 3 ] = t3	149:5:5857:5867	1095535	7	True				
ANR	1095789	AssignmentExpression	op [ 3 ] = t3		1095535	0		=			
ANR	1095790	ArrayIndexing	op [ 3 ]		1095535	0					
ANR	1095791	Identifier	op		1095535	0					
ANR	1095792	PrimaryExpression	3		1095535	1					
ANR	1095793	Identifier	t3		1095535	1					
ANR	1095794	ExpressionStatement	n -= 4	150:5:5874:5880	1095535	8	True				
ANR	1095795	AssignmentExpression	n -= 4		1095535	0		-=			
ANR	1095796	Identifier	n		1095535	0					
ANR	1095797	PrimaryExpression	4		1095535	1					
ANR	1095798	WhileStatement	while ( n > 0 )		1095535	9					
ANR	1095799	Condition	n > 0	151:12:5894:5898	1095535	0	True				
ANR	1095800	RelationalExpression	n > 0		1095535	0		>			
ANR	1095801	Identifier	n		1095535	0					
ANR	1095802	PrimaryExpression	0		1095535	1					
ANR	1095803	CompoundStatement		36:19:856:856	1095535	1					
ANR	1095804	ExpressionStatement	wp += 4	152:2:5905:5912	1095535	0	True				
ANR	1095805	AssignmentExpression	wp += 4		1095535	0		+=			
ANR	1095806	Identifier	wp		1095535	0					
ANR	1095807	PrimaryExpression	4		1095535	1					
ANR	1095808	ExpressionStatement	op += 4	153:2:5916:5923	1095535	1	True				
ANR	1095809	AssignmentExpression	op += 4		1095535	0		+=			
ANR	1095810	Identifier	op		1095535	0					
ANR	1095811	PrimaryExpression	4		1095535	1					
ANR	1095812	ExpressionStatement	n -= 4	154:2:5927:5933	1095535	2	True				
ANR	1095813	AssignmentExpression	n -= 4		1095535	0		-=			
ANR	1095814	Identifier	n		1095535	0					
ANR	1095815	PrimaryExpression	4		1095535	1					
ANR	1095816	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]	155:2:5937:5973	1095535	3	True				
ANR	1095817	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		1095535	0		=			
ANR	1095818	Identifier	t0		1095535	0					
ANR	1095819	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		1095535	1					
ANR	1095820	Identifier	ToLinearF		1095535	0					
ANR	1095821	BitAndExpression	( cr += wp [ 0 ] ) & mask		1095535	1		&			
ANR	1095822	AssignmentExpression	cr += wp [ 0 ]		1095535	0		+=			
ANR	1095823	Identifier	cr		1095535	0					
ANR	1095824	ArrayIndexing	wp [ 0 ]		1095535	1					
ANR	1095825	Identifier	wp		1095535	0					
ANR	1095826	PrimaryExpression	0		1095535	1					
ANR	1095827	Identifier	mask		1095535	1					
ANR	1095828	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]	156:2:5977:6013	1095535	4	True				
ANR	1095829	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		1095535	0		=			
ANR	1095830	Identifier	t1		1095535	0					
ANR	1095831	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		1095535	1					
ANR	1095832	Identifier	ToLinearF		1095535	0					
ANR	1095833	BitAndExpression	( cg += wp [ 1 ] ) & mask		1095535	1		&			
ANR	1095834	AssignmentExpression	cg += wp [ 1 ]		1095535	0		+=			
ANR	1095835	Identifier	cg		1095535	0					
ANR	1095836	ArrayIndexing	wp [ 1 ]		1095535	1					
ANR	1095837	Identifier	wp		1095535	0					
ANR	1095838	PrimaryExpression	1		1095535	1					
ANR	1095839	Identifier	mask		1095535	1					
ANR	1095840	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]	157:2:6017:6053	1095535	5	True				
ANR	1095841	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		1095535	0		=			
ANR	1095842	Identifier	t2		1095535	0					
ANR	1095843	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		1095535	1					
ANR	1095844	Identifier	ToLinearF		1095535	0					
ANR	1095845	BitAndExpression	( cb += wp [ 2 ] ) & mask		1095535	1		&			
ANR	1095846	AssignmentExpression	cb += wp [ 2 ]		1095535	0		+=			
ANR	1095847	Identifier	cb		1095535	0					
ANR	1095848	ArrayIndexing	wp [ 2 ]		1095535	1					
ANR	1095849	Identifier	wp		1095535	0					
ANR	1095850	PrimaryExpression	2		1095535	1					
ANR	1095851	Identifier	mask		1095535	1					
ANR	1095852	ExpressionStatement	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ]	158:2:6057:6093	1095535	6	True				
ANR	1095853	AssignmentExpression	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ]		1095535	0		=			
ANR	1095854	Identifier	t3		1095535	0					
ANR	1095855	ArrayIndexing	ToLinearF [ ( ca += wp [ 3 ] ) & mask ]		1095535	1					
ANR	1095856	Identifier	ToLinearF		1095535	0					
ANR	1095857	BitAndExpression	( ca += wp [ 3 ] ) & mask		1095535	1		&			
ANR	1095858	AssignmentExpression	ca += wp [ 3 ]		1095535	0		+=			
ANR	1095859	Identifier	ca		1095535	0					
ANR	1095860	ArrayIndexing	wp [ 3 ]		1095535	1					
ANR	1095861	Identifier	wp		1095535	0					
ANR	1095862	PrimaryExpression	3		1095535	1					
ANR	1095863	Identifier	mask		1095535	1					
ANR	1095864	ExpressionStatement	op [ 0 ] = t0	159:2:6097:6107	1095535	7	True				
ANR	1095865	AssignmentExpression	op [ 0 ] = t0		1095535	0		=			
ANR	1095866	ArrayIndexing	op [ 0 ]		1095535	0					
ANR	1095867	Identifier	op		1095535	0					
ANR	1095868	PrimaryExpression	0		1095535	1					
ANR	1095869	Identifier	t0		1095535	1					
ANR	1095870	ExpressionStatement	op [ 1 ] = t1	160:2:6111:6121	1095535	8	True				
ANR	1095871	AssignmentExpression	op [ 1 ] = t1		1095535	0		=			
ANR	1095872	ArrayIndexing	op [ 1 ]		1095535	0					
ANR	1095873	Identifier	op		1095535	0					
ANR	1095874	PrimaryExpression	1		1095535	1					
ANR	1095875	Identifier	t1		1095535	1					
ANR	1095876	ExpressionStatement	op [ 2 ] = t2	161:2:6125:6135	1095535	9	True				
ANR	1095877	AssignmentExpression	op [ 2 ] = t2		1095535	0		=			
ANR	1095878	ArrayIndexing	op [ 2 ]		1095535	0					
ANR	1095879	Identifier	op		1095535	0					
ANR	1095880	PrimaryExpression	2		1095535	1					
ANR	1095881	Identifier	t2		1095535	1					
ANR	1095882	ExpressionStatement	op [ 3 ] = t3	162:2:6139:6149	1095535	10	True				
ANR	1095883	AssignmentExpression	op [ 3 ] = t3		1095535	0		=			
ANR	1095884	ArrayIndexing	op [ 3 ]		1095535	0					
ANR	1095885	Identifier	op		1095535	0					
ANR	1095886	PrimaryExpression	3		1095535	1					
ANR	1095887	Identifier	t3		1095535	1					
ANR	1095888	ElseStatement	else		1095535	0					
ANR	1095889	CompoundStatement		49:8:1121:1121	1095535	0					
ANR	1095890	Statement	REPEAT	165:5:6173:6178	1095535	0	True				
ANR	1095891	Statement	(	165:11:6179:6179	1095535	1	True				
ANR	1095892	ExpressionStatement	"stride , * op = ToLinearF [ * wp & mask ]"	165:12:6180:6213	1095535	2	True				
ANR	1095893	Expression	"stride , * op = ToLinearF [ * wp & mask ]"		1095535	0					
ANR	1095894	Identifier	stride		1095535	0					
ANR	1095895	AssignmentExpression	* op = ToLinearF [ * wp & mask ]		1095535	1		=			
ANR	1095896	UnaryOperationExpression	* op		1095535	0					
ANR	1095897	UnaryOperator	*		1095535	0					
ANR	1095898	Identifier	op		1095535	1					
ANR	1095899	ArrayIndexing	ToLinearF [ * wp & mask ]		1095535	1					
ANR	1095900	Identifier	ToLinearF		1095535	0					
ANR	1095901	BitAndExpression	* wp & mask		1095535	1		&			
ANR	1095902	UnaryOperationExpression	* wp		1095535	0					
ANR	1095903	UnaryOperator	*		1095535	0					
ANR	1095904	Identifier	wp		1095535	1					
ANR	1095905	Identifier	mask		1095535	1					
ANR	1095906	ExpressionStatement	wp ++	165:47:6215:6219	1095535	3	True				
ANR	1095907	PostIncDecOperationExpression	wp ++		1095535	0					
ANR	1095908	Identifier	wp		1095535	0					
ANR	1095909	IncDec	++		1095535	1					
ANR	1095910	Statement	op	165:53:6221:6222	1095535	4	True				
ANR	1095911	Statement	++	165:55:6223:6224	1095535	5	True				
ANR	1095912	Statement	)	165:57:6225:6225	1095535	6	True				
ANR	1095913	ExpressionStatement	n -= stride	166:5:6232:6243	1095535	7	True				
ANR	1095914	AssignmentExpression	n -= stride		1095535	0		-=			
ANR	1095915	Identifier	n		1095535	0					
ANR	1095916	Identifier	stride		1095535	1					
ANR	1095917	WhileStatement	while ( n > 0 )		1095535	8					
ANR	1095918	Condition	n > 0	167:12:6257:6261	1095535	0	True				
ANR	1095919	RelationalExpression	n > 0		1095535	0		>			
ANR	1095920	Identifier	n		1095535	0					
ANR	1095921	PrimaryExpression	0		1095535	1					
ANR	1095922	CompoundStatement		52:19:1219:1219	1095535	1					
ANR	1095923	Statement	REPEAT	168:2:6268:6273	1095535	0	True				
ANR	1095924	Statement	(	168:8:6274:6274	1095535	1	True				
ANR	1095925	ExpressionStatement	"stride , wp [ stride ] += * wp"	168:9:6275:6306	1095535	2	True				
ANR	1095926	Expression	"stride , wp [ stride ] += * wp"		1095535	0					
ANR	1095927	Identifier	stride		1095535	0					
ANR	1095928	AssignmentExpression	wp [ stride ] += * wp		1095535	1		+=			
ANR	1095929	ArrayIndexing	wp [ stride ]		1095535	0					
ANR	1095930	Identifier	wp		1095535	0					
ANR	1095931	Identifier	stride		1095535	1					
ANR	1095932	UnaryOperationExpression	* wp		1095535	1					
ANR	1095933	UnaryOperator	*		1095535	0					
ANR	1095934	Identifier	wp		1095535	1					
ANR	1095935	ExpressionStatement	* op = ToLinearF [ * wp & mask ]	169:25:6308:6333	1095535	3	True				
ANR	1095936	AssignmentExpression	* op = ToLinearF [ * wp & mask ]		1095535	0		=			
ANR	1095937	UnaryOperationExpression	* op		1095535	0					
ANR	1095938	UnaryOperator	*		1095535	0					
ANR	1095939	Identifier	op		1095535	1					
ANR	1095940	ArrayIndexing	ToLinearF [ * wp & mask ]		1095535	1					
ANR	1095941	Identifier	ToLinearF		1095535	0					
ANR	1095942	BitAndExpression	* wp & mask		1095535	1		&			
ANR	1095943	UnaryOperationExpression	* wp		1095535	0					
ANR	1095944	UnaryOperator	*		1095535	0					
ANR	1095945	Identifier	wp		1095535	1					
ANR	1095946	Identifier	mask		1095535	1					
ANR	1095947	ExpressionStatement	wp ++	169:52:6335:6339	1095535	4	True				
ANR	1095948	PostIncDecOperationExpression	wp ++		1095535	0					
ANR	1095949	Identifier	wp		1095535	0					
ANR	1095950	IncDec	++		1095535	1					
ANR	1095951	Statement	op	169:58:6341:6342	1095535	5	True				
ANR	1095952	Statement	++	169:60:6343:6344	1095535	6	True				
ANR	1095953	Statement	)	169:62:6345:6345	1095535	7	True				
ANR	1095954	ExpressionStatement	n -= stride	170:2:6349:6360	1095535	8	True				
ANR	1095955	AssignmentExpression	n -= stride		1095535	0		-=			
ANR	1095956	Identifier	n		1095535	0					
ANR	1095957	Identifier	stride		1095535	1					
ANR	1095958	ReturnType	static void		1095535	1					
ANR	1095959	Identifier	horizontalAccumulateF		1095535	2					
ANR	1095960	ParameterList	"uint16 * wp , int n , int stride , float * op , float * ToLinearF"		1095535	3					
ANR	1095961	Parameter	uint16 * wp	114:22:4983:4992	1095535	0	True				
ANR	1095962	ParameterType	uint16 *		1095535	0					
ANR	1095963	Identifier	wp		1095535	1					
ANR	1095964	Parameter	int n	114:34:4995:4999	1095535	1	True				
ANR	1095965	ParameterType	int		1095535	0					
ANR	1095966	Identifier	n		1095535	1					
ANR	1095967	Parameter	int stride	114:41:5002:5011	1095535	2	True				
ANR	1095968	ParameterType	int		1095535	0					
ANR	1095969	Identifier	stride		1095535	1					
ANR	1095970	Parameter	float * op	114:53:5014:5022	1095535	3	True				
ANR	1095971	ParameterType	float *		1095535	0					
ANR	1095972	Identifier	op		1095535	1					
ANR	1095973	Parameter	float * ToLinearF	115:1:5026:5041	1095535	4	True				
ANR	1095974	ParameterType	float *		1095535	0					
ANR	1095975	Identifier	ToLinearF		1095535	1					
ANR	1095976	CFGEntryNode	ENTRY		1095535		True				
ANR	1095977	CFGExitNode	EXIT		1095535		True				
ANR	1095978	Symbol	op		1095535						
ANR	1095979	Symbol	* stride		1095535						
ANR	1095980	Symbol	* mask		1095535						
ANR	1095981	Symbol	cg		1095535						
ANR	1095982	Symbol	* op		1095535						
ANR	1095983	Symbol	* * wp		1095535						
ANR	1095984	Symbol	stride		1095535						
ANR	1095985	Symbol	n		1095535						
ANR	1095986	Symbol	cr		1095535						
ANR	1095987	Symbol	CODE_MASK		1095535						
ANR	1095988	Symbol	wp		1095535						
ANR	1095989	Symbol	ToLinearF		1095535						
ANR	1095990	Symbol	t0		1095535						
ANR	1095991	Symbol	* wp		1095535						
ANR	1095992	Symbol	t1		1095535						
ANR	1095993	Symbol	ca		1095535						
ANR	1095994	Symbol	t2		1095535						
ANR	1095995	Symbol	* ToLinearF		1095535						
ANR	1095996	Symbol	mask		1095535						
ANR	1095997	Symbol	cb		1095535						
ANR	1095998	Symbol	t3		1095535						
ANR	1095999	Function	horizontalAccumulate12	176:0:6381:8253							
ANR	1096000	FunctionDef	"horizontalAccumulate12 (uint16 * wp , int n , int stride , int16 * op , float * ToLinearF)"		1095999	0					
ANR	1096001	CompoundStatement		179:0:6477:8253	1095999	0					
ANR	1096002	Statement	register	180:4:6483:6490	1095999	0	True				
ANR	1096003	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	180:13:6492:6526	1095999	1	True				
ANR	1096004	IdentifierDecl	cr		1095999	0					
ANR	1096005	IdentifierDeclType	unsigned int		1095999	0					
ANR	1096006	Identifier	cr		1095999	1					
ANR	1096007	IdentifierDecl	cg		1095999	1					
ANR	1096008	IdentifierDeclType	unsigned int		1095999	0					
ANR	1096009	Identifier	cg		1095999	1					
ANR	1096010	IdentifierDecl	cb		1095999	2					
ANR	1096011	IdentifierDeclType	unsigned int		1095999	0					
ANR	1096012	Identifier	cb		1095999	1					
ANR	1096013	IdentifierDecl	ca		1095999	3					
ANR	1096014	IdentifierDeclType	unsigned int		1095999	0					
ANR	1096015	Identifier	ca		1095999	1					
ANR	1096016	IdentifierDecl	mask		1095999	4					
ANR	1096017	IdentifierDeclType	unsigned int		1095999	0					
ANR	1096018	Identifier	mask		1095999	1					
ANR	1096019	Statement	register	181:4:6532:6539	1095999	2	True				
ANR	1096020	IdentifierDeclStatement	"float t0 , t1 , t2 , t3 ;"	181:13:6541:6562	1095999	3	True				
ANR	1096021	IdentifierDecl	t0		1095999	0					
ANR	1096022	IdentifierDeclType	float		1095999	0					
ANR	1096023	Identifier	t0		1095999	1					
ANR	1096024	IdentifierDecl	t1		1095999	1					
ANR	1096025	IdentifierDeclType	float		1095999	0					
ANR	1096026	Identifier	t1		1095999	1					
ANR	1096027	IdentifierDecl	t2		1095999	2					
ANR	1096028	IdentifierDeclType	float		1095999	0					
ANR	1096029	Identifier	t2		1095999	1					
ANR	1096030	IdentifierDecl	t3		1095999	3					
ANR	1096031	IdentifierDeclType	float		1095999	0					
ANR	1096032	Identifier	t3		1095999	1					
ANR	1096033	Statement	define	183:1:6566:6571	1095999	4	True				
ANR	1096034	Statement	SCALE12	183:8:6573:6579	1095999	5	True				
ANR	1096035	Statement	2048.0F	183:16:6581:6587	1095999	6	True				
ANR	1096036	Statement	define	184:1:6590:6595	1095999	7	True				
ANR	1096037	Statement	CLAMP12	184:8:6597:6603	1095999	8	True				
ANR	1096038	Statement	(	184:15:6604:6604	1095999	9	True				
ANR	1096039	Statement	t	184:16:6605:6605	1095999	10	True				
ANR	1096040	Statement	)	184:17:6606:6606	1095999	11	True				
ANR	1096041	Statement	(	184:19:6608:6608	1095999	12	True				
ANR	1096042	Statement	(	184:20:6609:6609	1095999	13	True				
ANR	1096043	Statement	(	184:21:6610:6610	1095999	14	True				
ANR	1096044	Statement	t	184:22:6611:6611	1095999	15	True				
ANR	1096045	Statement	)	184:23:6612:6612	1095999	16	True				
ANR	1096046	Statement	<	184:25:6614:6614	1095999	17	True				
ANR	1096047	Statement	3071	184:27:6616:6619	1095999	18	True				
ANR	1096048	Statement	)	184:31:6620:6620	1095999	19	True				
ANR	1096049	Statement	?	184:33:6622:6622	1095999	20	True				
ANR	1096050	Statement	(	184:35:6624:6624	1095999	21	True				
ANR	1096051	Statement	uint16	184:36:6625:6630	1095999	22	True				
ANR	1096052	Statement	)	184:42:6631:6631	1095999	23	True				
ANR	1096053	Statement	(	184:44:6633:6633	1095999	24	True				
ANR	1096054	Statement	t	184:45:6634:6634	1095999	25	True				
ANR	1096055	Statement	)	184:46:6635:6635	1095999	26	True				
ANR	1096056	Statement	:	184:48:6637:6637	1095999	27	True				
ANR	1096057	Statement	3071	184:50:6639:6642	1095999	28	True				
ANR	1096058	Statement	)	184:54:6643:6643	1095999	29	True				
ANR	1096059	IfStatement	if ( n >= stride )		1095999	30					
ANR	1096060	Condition	n >= stride	186:8:6654:6664	1095999	0	True				
ANR	1096061	RelationalExpression	n >= stride		1095999	0		>=			
ANR	1096062	Identifier	n		1095999	0					
ANR	1096063	Identifier	stride		1095999	1					
ANR	1096064	CompoundStatement		8:21:189:189	1095999	1					
ANR	1096065	ExpressionStatement	mask = CODE_MASK	187:1:6670:6686	1095999	0	True				
ANR	1096066	AssignmentExpression	mask = CODE_MASK		1095999	0		=			
ANR	1096067	Identifier	mask		1095999	0					
ANR	1096068	Identifier	CODE_MASK		1095999	1					
ANR	1096069	IfStatement	if ( stride == 3 )		1095999	1					
ANR	1096070	Condition	stride == 3	188:5:6693:6703	1095999	0	True				
ANR	1096071	EqualityExpression	stride == 3		1095999	0		==			
ANR	1096072	Identifier	stride		1095999	0					
ANR	1096073	PrimaryExpression	3		1095999	1					
ANR	1096074	CompoundStatement		10:18:228:228	1095999	1					
ANR	1096075	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12	189:5:6713:6758	1095999	0	True				
ANR	1096076	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096077	Identifier	t0		1095999	0					
ANR	1096078	MultiplicativeExpression	ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096079	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		1095999	0					
ANR	1096080	Identifier	ToLinearF		1095999	0					
ANR	1096081	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1095999	1		=			
ANR	1096082	Identifier	cr		1095999	0					
ANR	1096083	BitAndExpression	wp [ 0 ] & mask		1095999	1		&			
ANR	1096084	ArrayIndexing	wp [ 0 ]		1095999	0					
ANR	1096085	Identifier	wp		1095999	0					
ANR	1096086	PrimaryExpression	0		1095999	1					
ANR	1096087	Identifier	mask		1095999	1					
ANR	1096088	Identifier	SCALE12		1095999	1					
ANR	1096089	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12	190:5:6765:6810	1095999	1	True				
ANR	1096090	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096091	Identifier	t1		1095999	0					
ANR	1096092	MultiplicativeExpression	ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096093	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		1095999	0					
ANR	1096094	Identifier	ToLinearF		1095999	0					
ANR	1096095	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1095999	1		=			
ANR	1096096	Identifier	cg		1095999	0					
ANR	1096097	BitAndExpression	wp [ 1 ] & mask		1095999	1		&			
ANR	1096098	ArrayIndexing	wp [ 1 ]		1095999	0					
ANR	1096099	Identifier	wp		1095999	0					
ANR	1096100	PrimaryExpression	1		1095999	1					
ANR	1096101	Identifier	mask		1095999	1					
ANR	1096102	Identifier	SCALE12		1095999	1					
ANR	1096103	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12	191:5:6817:6862	1095999	2	True				
ANR	1096104	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096105	Identifier	t2		1095999	0					
ANR	1096106	MultiplicativeExpression	ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096107	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		1095999	0					
ANR	1096108	Identifier	ToLinearF		1095999	0					
ANR	1096109	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1095999	1		=			
ANR	1096110	Identifier	cb		1095999	0					
ANR	1096111	BitAndExpression	wp [ 2 ] & mask		1095999	1		&			
ANR	1096112	ArrayIndexing	wp [ 2 ]		1095999	0					
ANR	1096113	Identifier	wp		1095999	0					
ANR	1096114	PrimaryExpression	2		1095999	1					
ANR	1096115	Identifier	mask		1095999	1					
ANR	1096116	Identifier	SCALE12		1095999	1					
ANR	1096117	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	192:5:6869:6888	1095999	3	True				
ANR	1096118	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		1095999	0		=			
ANR	1096119	ArrayIndexing	op [ 0 ]		1095999	0					
ANR	1096120	Identifier	op		1095999	0					
ANR	1096121	PrimaryExpression	0		1095999	1					
ANR	1096122	CallExpression	CLAMP12 ( t0 )		1095999	1					
ANR	1096123	Callee	CLAMP12		1095999	0					
ANR	1096124	Identifier	CLAMP12		1095999	0					
ANR	1096125	ArgumentList	t0		1095999	1					
ANR	1096126	Argument	t0		1095999	0					
ANR	1096127	Identifier	t0		1095999	0					
ANR	1096128	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	193:5:6895:6914	1095999	4	True				
ANR	1096129	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		1095999	0		=			
ANR	1096130	ArrayIndexing	op [ 1 ]		1095999	0					
ANR	1096131	Identifier	op		1095999	0					
ANR	1096132	PrimaryExpression	1		1095999	1					
ANR	1096133	CallExpression	CLAMP12 ( t1 )		1095999	1					
ANR	1096134	Callee	CLAMP12		1095999	0					
ANR	1096135	Identifier	CLAMP12		1095999	0					
ANR	1096136	ArgumentList	t1		1095999	1					
ANR	1096137	Argument	t1		1095999	0					
ANR	1096138	Identifier	t1		1095999	0					
ANR	1096139	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	194:5:6921:6940	1095999	5	True				
ANR	1096140	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		1095999	0		=			
ANR	1096141	ArrayIndexing	op [ 2 ]		1095999	0					
ANR	1096142	Identifier	op		1095999	0					
ANR	1096143	PrimaryExpression	2		1095999	1					
ANR	1096144	CallExpression	CLAMP12 ( t2 )		1095999	1					
ANR	1096145	Callee	CLAMP12		1095999	0					
ANR	1096146	Identifier	CLAMP12		1095999	0					
ANR	1096147	ArgumentList	t2		1095999	1					
ANR	1096148	Argument	t2		1095999	0					
ANR	1096149	Identifier	t2		1095999	0					
ANR	1096150	ExpressionStatement	n -= 3	195:5:6947:6953	1095999	6	True				
ANR	1096151	AssignmentExpression	n -= 3		1095999	0		-=			
ANR	1096152	Identifier	n		1095999	0					
ANR	1096153	PrimaryExpression	3		1095999	1					
ANR	1096154	WhileStatement	while ( n > 0 )		1095999	7					
ANR	1096155	Condition	n > 0	196:12:6967:6971	1095999	0	True				
ANR	1096156	RelationalExpression	n > 0		1095999	0		>			
ANR	1096157	Identifier	n		1095999	0					
ANR	1096158	PrimaryExpression	0		1095999	1					
ANR	1096159	CompoundStatement		18:19:496:496	1095999	1					
ANR	1096160	ExpressionStatement	wp += 3	197:2:6978:6985	1095999	0	True				
ANR	1096161	AssignmentExpression	wp += 3		1095999	0		+=			
ANR	1096162	Identifier	wp		1095999	0					
ANR	1096163	PrimaryExpression	3		1095999	1					
ANR	1096164	ExpressionStatement	op += 3	198:2:6989:6996	1095999	1	True				
ANR	1096165	AssignmentExpression	op += 3		1095999	0		+=			
ANR	1096166	Identifier	op		1095999	0					
ANR	1096167	PrimaryExpression	3		1095999	1					
ANR	1096168	ExpressionStatement	n -= 3	199:2:7000:7006	1095999	2	True				
ANR	1096169	AssignmentExpression	n -= 3		1095999	0		-=			
ANR	1096170	Identifier	n		1095999	0					
ANR	1096171	PrimaryExpression	3		1095999	1					
ANR	1096172	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12	200:2:7010:7056	1095999	3	True				
ANR	1096173	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096174	Identifier	t0		1095999	0					
ANR	1096175	MultiplicativeExpression	ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096176	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		1095999	0					
ANR	1096177	Identifier	ToLinearF		1095999	0					
ANR	1096178	BitAndExpression	( cr += wp [ 0 ] ) & mask		1095999	1		&			
ANR	1096179	AssignmentExpression	cr += wp [ 0 ]		1095999	0		+=			
ANR	1096180	Identifier	cr		1095999	0					
ANR	1096181	ArrayIndexing	wp [ 0 ]		1095999	1					
ANR	1096182	Identifier	wp		1095999	0					
ANR	1096183	PrimaryExpression	0		1095999	1					
ANR	1096184	Identifier	mask		1095999	1					
ANR	1096185	Identifier	SCALE12		1095999	1					
ANR	1096186	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12	201:2:7060:7106	1095999	4	True				
ANR	1096187	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096188	Identifier	t1		1095999	0					
ANR	1096189	MultiplicativeExpression	ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096190	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		1095999	0					
ANR	1096191	Identifier	ToLinearF		1095999	0					
ANR	1096192	BitAndExpression	( cg += wp [ 1 ] ) & mask		1095999	1		&			
ANR	1096193	AssignmentExpression	cg += wp [ 1 ]		1095999	0		+=			
ANR	1096194	Identifier	cg		1095999	0					
ANR	1096195	ArrayIndexing	wp [ 1 ]		1095999	1					
ANR	1096196	Identifier	wp		1095999	0					
ANR	1096197	PrimaryExpression	1		1095999	1					
ANR	1096198	Identifier	mask		1095999	1					
ANR	1096199	Identifier	SCALE12		1095999	1					
ANR	1096200	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12	202:2:7110:7156	1095999	5	True				
ANR	1096201	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096202	Identifier	t2		1095999	0					
ANR	1096203	MultiplicativeExpression	ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096204	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		1095999	0					
ANR	1096205	Identifier	ToLinearF		1095999	0					
ANR	1096206	BitAndExpression	( cb += wp [ 2 ] ) & mask		1095999	1		&			
ANR	1096207	AssignmentExpression	cb += wp [ 2 ]		1095999	0		+=			
ANR	1096208	Identifier	cb		1095999	0					
ANR	1096209	ArrayIndexing	wp [ 2 ]		1095999	1					
ANR	1096210	Identifier	wp		1095999	0					
ANR	1096211	PrimaryExpression	2		1095999	1					
ANR	1096212	Identifier	mask		1095999	1					
ANR	1096213	Identifier	SCALE12		1095999	1					
ANR	1096214	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	203:2:7160:7179	1095999	6	True				
ANR	1096215	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		1095999	0		=			
ANR	1096216	ArrayIndexing	op [ 0 ]		1095999	0					
ANR	1096217	Identifier	op		1095999	0					
ANR	1096218	PrimaryExpression	0		1095999	1					
ANR	1096219	CallExpression	CLAMP12 ( t0 )		1095999	1					
ANR	1096220	Callee	CLAMP12		1095999	0					
ANR	1096221	Identifier	CLAMP12		1095999	0					
ANR	1096222	ArgumentList	t0		1095999	1					
ANR	1096223	Argument	t0		1095999	0					
ANR	1096224	Identifier	t0		1095999	0					
ANR	1096225	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	204:2:7183:7202	1095999	7	True				
ANR	1096226	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		1095999	0		=			
ANR	1096227	ArrayIndexing	op [ 1 ]		1095999	0					
ANR	1096228	Identifier	op		1095999	0					
ANR	1096229	PrimaryExpression	1		1095999	1					
ANR	1096230	CallExpression	CLAMP12 ( t1 )		1095999	1					
ANR	1096231	Callee	CLAMP12		1095999	0					
ANR	1096232	Identifier	CLAMP12		1095999	0					
ANR	1096233	ArgumentList	t1		1095999	1					
ANR	1096234	Argument	t1		1095999	0					
ANR	1096235	Identifier	t1		1095999	0					
ANR	1096236	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	205:2:7206:7225	1095999	8	True				
ANR	1096237	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		1095999	0		=			
ANR	1096238	ArrayIndexing	op [ 2 ]		1095999	0					
ANR	1096239	Identifier	op		1095999	0					
ANR	1096240	PrimaryExpression	2		1095999	1					
ANR	1096241	CallExpression	CLAMP12 ( t2 )		1095999	1					
ANR	1096242	Callee	CLAMP12		1095999	0					
ANR	1096243	Identifier	CLAMP12		1095999	0					
ANR	1096244	ArgumentList	t2		1095999	1					
ANR	1096245	Argument	t2		1095999	0					
ANR	1096246	Identifier	t2		1095999	0					
ANR	1096247	ElseStatement	else		1095999	0					
ANR	1096248	IfStatement	if ( stride == 4 )		1095999	0					
ANR	1096249	Condition	stride == 4	207:12:7246:7256	1095999	0	True				
ANR	1096250	EqualityExpression	stride == 4		1095999	0		==			
ANR	1096251	Identifier	stride		1095999	0					
ANR	1096252	PrimaryExpression	4		1095999	1					
ANR	1096253	CompoundStatement		29:25:781:781	1095999	1					
ANR	1096254	ExpressionStatement	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12	208:5:7266:7311	1095999	0	True				
ANR	1096255	AssignmentExpression	t0 = ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096256	Identifier	t0		1095999	0					
ANR	1096257	MultiplicativeExpression	ToLinearF [ cr = ( wp [ 0 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096258	ArrayIndexing	ToLinearF [ cr = ( wp [ 0 ] & mask ) ]		1095999	0					
ANR	1096259	Identifier	ToLinearF		1095999	0					
ANR	1096260	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1095999	1		=			
ANR	1096261	Identifier	cr		1095999	0					
ANR	1096262	BitAndExpression	wp [ 0 ] & mask		1095999	1		&			
ANR	1096263	ArrayIndexing	wp [ 0 ]		1095999	0					
ANR	1096264	Identifier	wp		1095999	0					
ANR	1096265	PrimaryExpression	0		1095999	1					
ANR	1096266	Identifier	mask		1095999	1					
ANR	1096267	Identifier	SCALE12		1095999	1					
ANR	1096268	ExpressionStatement	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12	209:5:7318:7363	1095999	1	True				
ANR	1096269	AssignmentExpression	t1 = ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096270	Identifier	t1		1095999	0					
ANR	1096271	MultiplicativeExpression	ToLinearF [ cg = ( wp [ 1 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096272	ArrayIndexing	ToLinearF [ cg = ( wp [ 1 ] & mask ) ]		1095999	0					
ANR	1096273	Identifier	ToLinearF		1095999	0					
ANR	1096274	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1095999	1		=			
ANR	1096275	Identifier	cg		1095999	0					
ANR	1096276	BitAndExpression	wp [ 1 ] & mask		1095999	1		&			
ANR	1096277	ArrayIndexing	wp [ 1 ]		1095999	0					
ANR	1096278	Identifier	wp		1095999	0					
ANR	1096279	PrimaryExpression	1		1095999	1					
ANR	1096280	Identifier	mask		1095999	1					
ANR	1096281	Identifier	SCALE12		1095999	1					
ANR	1096282	ExpressionStatement	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12	210:5:7370:7415	1095999	2	True				
ANR	1096283	AssignmentExpression	t2 = ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096284	Identifier	t2		1095999	0					
ANR	1096285	MultiplicativeExpression	ToLinearF [ cb = ( wp [ 2 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096286	ArrayIndexing	ToLinearF [ cb = ( wp [ 2 ] & mask ) ]		1095999	0					
ANR	1096287	Identifier	ToLinearF		1095999	0					
ANR	1096288	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1095999	1		=			
ANR	1096289	Identifier	cb		1095999	0					
ANR	1096290	BitAndExpression	wp [ 2 ] & mask		1095999	1		&			
ANR	1096291	ArrayIndexing	wp [ 2 ]		1095999	0					
ANR	1096292	Identifier	wp		1095999	0					
ANR	1096293	PrimaryExpression	2		1095999	1					
ANR	1096294	Identifier	mask		1095999	1					
ANR	1096295	Identifier	SCALE12		1095999	1					
ANR	1096296	ExpressionStatement	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ] * SCALE12	211:5:7422:7467	1095999	3	True				
ANR	1096297	AssignmentExpression	t3 = ToLinearF [ ca = ( wp [ 3 ] & mask ) ] * SCALE12		1095999	0		=			
ANR	1096298	Identifier	t3		1095999	0					
ANR	1096299	MultiplicativeExpression	ToLinearF [ ca = ( wp [ 3 ] & mask ) ] * SCALE12		1095999	1		*			
ANR	1096300	ArrayIndexing	ToLinearF [ ca = ( wp [ 3 ] & mask ) ]		1095999	0					
ANR	1096301	Identifier	ToLinearF		1095999	0					
ANR	1096302	AssignmentExpression	ca = ( wp [ 3 ] & mask )		1095999	1		=			
ANR	1096303	Identifier	ca		1095999	0					
ANR	1096304	BitAndExpression	wp [ 3 ] & mask		1095999	1		&			
ANR	1096305	ArrayIndexing	wp [ 3 ]		1095999	0					
ANR	1096306	Identifier	wp		1095999	0					
ANR	1096307	PrimaryExpression	3		1095999	1					
ANR	1096308	Identifier	mask		1095999	1					
ANR	1096309	Identifier	SCALE12		1095999	1					
ANR	1096310	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	212:5:7474:7493	1095999	4	True				
ANR	1096311	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		1095999	0		=			
ANR	1096312	ArrayIndexing	op [ 0 ]		1095999	0					
ANR	1096313	Identifier	op		1095999	0					
ANR	1096314	PrimaryExpression	0		1095999	1					
ANR	1096315	CallExpression	CLAMP12 ( t0 )		1095999	1					
ANR	1096316	Callee	CLAMP12		1095999	0					
ANR	1096317	Identifier	CLAMP12		1095999	0					
ANR	1096318	ArgumentList	t0		1095999	1					
ANR	1096319	Argument	t0		1095999	0					
ANR	1096320	Identifier	t0		1095999	0					
ANR	1096321	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	213:5:7500:7519	1095999	5	True				
ANR	1096322	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		1095999	0		=			
ANR	1096323	ArrayIndexing	op [ 1 ]		1095999	0					
ANR	1096324	Identifier	op		1095999	0					
ANR	1096325	PrimaryExpression	1		1095999	1					
ANR	1096326	CallExpression	CLAMP12 ( t1 )		1095999	1					
ANR	1096327	Callee	CLAMP12		1095999	0					
ANR	1096328	Identifier	CLAMP12		1095999	0					
ANR	1096329	ArgumentList	t1		1095999	1					
ANR	1096330	Argument	t1		1095999	0					
ANR	1096331	Identifier	t1		1095999	0					
ANR	1096332	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	214:5:7526:7545	1095999	6	True				
ANR	1096333	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		1095999	0		=			
ANR	1096334	ArrayIndexing	op [ 2 ]		1095999	0					
ANR	1096335	Identifier	op		1095999	0					
ANR	1096336	PrimaryExpression	2		1095999	1					
ANR	1096337	CallExpression	CLAMP12 ( t2 )		1095999	1					
ANR	1096338	Callee	CLAMP12		1095999	0					
ANR	1096339	Identifier	CLAMP12		1095999	0					
ANR	1096340	ArgumentList	t2		1095999	1					
ANR	1096341	Argument	t2		1095999	0					
ANR	1096342	Identifier	t2		1095999	0					
ANR	1096343	ExpressionStatement	op [ 3 ] = CLAMP12 ( t3 )	215:5:7552:7571	1095999	7	True				
ANR	1096344	AssignmentExpression	op [ 3 ] = CLAMP12 ( t3 )		1095999	0		=			
ANR	1096345	ArrayIndexing	op [ 3 ]		1095999	0					
ANR	1096346	Identifier	op		1095999	0					
ANR	1096347	PrimaryExpression	3		1095999	1					
ANR	1096348	CallExpression	CLAMP12 ( t3 )		1095999	1					
ANR	1096349	Callee	CLAMP12		1095999	0					
ANR	1096350	Identifier	CLAMP12		1095999	0					
ANR	1096351	ArgumentList	t3		1095999	1					
ANR	1096352	Argument	t3		1095999	0					
ANR	1096353	Identifier	t3		1095999	0					
ANR	1096354	ExpressionStatement	n -= 4	216:5:7578:7584	1095999	8	True				
ANR	1096355	AssignmentExpression	n -= 4		1095999	0		-=			
ANR	1096356	Identifier	n		1095999	0					
ANR	1096357	PrimaryExpression	4		1095999	1					
ANR	1096358	WhileStatement	while ( n > 0 )		1095999	9					
ANR	1096359	Condition	n > 0	217:12:7598:7602	1095999	0	True				
ANR	1096360	RelationalExpression	n > 0		1095999	0		>			
ANR	1096361	Identifier	n		1095999	0					
ANR	1096362	PrimaryExpression	0		1095999	1					
ANR	1096363	CompoundStatement		39:19:1127:1127	1095999	1					
ANR	1096364	ExpressionStatement	wp += 4	218:2:7609:7616	1095999	0	True				
ANR	1096365	AssignmentExpression	wp += 4		1095999	0		+=			
ANR	1096366	Identifier	wp		1095999	0					
ANR	1096367	PrimaryExpression	4		1095999	1					
ANR	1096368	ExpressionStatement	op += 4	219:2:7620:7627	1095999	1	True				
ANR	1096369	AssignmentExpression	op += 4		1095999	0		+=			
ANR	1096370	Identifier	op		1095999	0					
ANR	1096371	PrimaryExpression	4		1095999	1					
ANR	1096372	ExpressionStatement	n -= 4	220:2:7631:7637	1095999	2	True				
ANR	1096373	AssignmentExpression	n -= 4		1095999	0		-=			
ANR	1096374	Identifier	n		1095999	0					
ANR	1096375	PrimaryExpression	4		1095999	1					
ANR	1096376	ExpressionStatement	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12	221:2:7641:7687	1095999	3	True				
ANR	1096377	AssignmentExpression	t0 = ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096378	Identifier	t0		1095999	0					
ANR	1096379	MultiplicativeExpression	ToLinearF [ ( cr += wp [ 0 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096380	ArrayIndexing	ToLinearF [ ( cr += wp [ 0 ] ) & mask ]		1095999	0					
ANR	1096381	Identifier	ToLinearF		1095999	0					
ANR	1096382	BitAndExpression	( cr += wp [ 0 ] ) & mask		1095999	1		&			
ANR	1096383	AssignmentExpression	cr += wp [ 0 ]		1095999	0		+=			
ANR	1096384	Identifier	cr		1095999	0					
ANR	1096385	ArrayIndexing	wp [ 0 ]		1095999	1					
ANR	1096386	Identifier	wp		1095999	0					
ANR	1096387	PrimaryExpression	0		1095999	1					
ANR	1096388	Identifier	mask		1095999	1					
ANR	1096389	Identifier	SCALE12		1095999	1					
ANR	1096390	ExpressionStatement	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12	222:2:7691:7737	1095999	4	True				
ANR	1096391	AssignmentExpression	t1 = ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096392	Identifier	t1		1095999	0					
ANR	1096393	MultiplicativeExpression	ToLinearF [ ( cg += wp [ 1 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096394	ArrayIndexing	ToLinearF [ ( cg += wp [ 1 ] ) & mask ]		1095999	0					
ANR	1096395	Identifier	ToLinearF		1095999	0					
ANR	1096396	BitAndExpression	( cg += wp [ 1 ] ) & mask		1095999	1		&			
ANR	1096397	AssignmentExpression	cg += wp [ 1 ]		1095999	0		+=			
ANR	1096398	Identifier	cg		1095999	0					
ANR	1096399	ArrayIndexing	wp [ 1 ]		1095999	1					
ANR	1096400	Identifier	wp		1095999	0					
ANR	1096401	PrimaryExpression	1		1095999	1					
ANR	1096402	Identifier	mask		1095999	1					
ANR	1096403	Identifier	SCALE12		1095999	1					
ANR	1096404	ExpressionStatement	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12	223:2:7741:7787	1095999	5	True				
ANR	1096405	AssignmentExpression	t2 = ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096406	Identifier	t2		1095999	0					
ANR	1096407	MultiplicativeExpression	ToLinearF [ ( cb += wp [ 2 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096408	ArrayIndexing	ToLinearF [ ( cb += wp [ 2 ] ) & mask ]		1095999	0					
ANR	1096409	Identifier	ToLinearF		1095999	0					
ANR	1096410	BitAndExpression	( cb += wp [ 2 ] ) & mask		1095999	1		&			
ANR	1096411	AssignmentExpression	cb += wp [ 2 ]		1095999	0		+=			
ANR	1096412	Identifier	cb		1095999	0					
ANR	1096413	ArrayIndexing	wp [ 2 ]		1095999	1					
ANR	1096414	Identifier	wp		1095999	0					
ANR	1096415	PrimaryExpression	2		1095999	1					
ANR	1096416	Identifier	mask		1095999	1					
ANR	1096417	Identifier	SCALE12		1095999	1					
ANR	1096418	ExpressionStatement	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ] * SCALE12	224:2:7791:7837	1095999	6	True				
ANR	1096419	AssignmentExpression	t3 = ToLinearF [ ( ca += wp [ 3 ] ) & mask ] * SCALE12		1095999	0		=			
ANR	1096420	Identifier	t3		1095999	0					
ANR	1096421	MultiplicativeExpression	ToLinearF [ ( ca += wp [ 3 ] ) & mask ] * SCALE12		1095999	1		*			
ANR	1096422	ArrayIndexing	ToLinearF [ ( ca += wp [ 3 ] ) & mask ]		1095999	0					
ANR	1096423	Identifier	ToLinearF		1095999	0					
ANR	1096424	BitAndExpression	( ca += wp [ 3 ] ) & mask		1095999	1		&			
ANR	1096425	AssignmentExpression	ca += wp [ 3 ]		1095999	0		+=			
ANR	1096426	Identifier	ca		1095999	0					
ANR	1096427	ArrayIndexing	wp [ 3 ]		1095999	1					
ANR	1096428	Identifier	wp		1095999	0					
ANR	1096429	PrimaryExpression	3		1095999	1					
ANR	1096430	Identifier	mask		1095999	1					
ANR	1096431	Identifier	SCALE12		1095999	1					
ANR	1096432	ExpressionStatement	op [ 0 ] = CLAMP12 ( t0 )	225:2:7841:7860	1095999	7	True				
ANR	1096433	AssignmentExpression	op [ 0 ] = CLAMP12 ( t0 )		1095999	0		=			
ANR	1096434	ArrayIndexing	op [ 0 ]		1095999	0					
ANR	1096435	Identifier	op		1095999	0					
ANR	1096436	PrimaryExpression	0		1095999	1					
ANR	1096437	CallExpression	CLAMP12 ( t0 )		1095999	1					
ANR	1096438	Callee	CLAMP12		1095999	0					
ANR	1096439	Identifier	CLAMP12		1095999	0					
ANR	1096440	ArgumentList	t0		1095999	1					
ANR	1096441	Argument	t0		1095999	0					
ANR	1096442	Identifier	t0		1095999	0					
ANR	1096443	ExpressionStatement	op [ 1 ] = CLAMP12 ( t1 )	226:2:7864:7883	1095999	8	True				
ANR	1096444	AssignmentExpression	op [ 1 ] = CLAMP12 ( t1 )		1095999	0		=			
ANR	1096445	ArrayIndexing	op [ 1 ]		1095999	0					
ANR	1096446	Identifier	op		1095999	0					
ANR	1096447	PrimaryExpression	1		1095999	1					
ANR	1096448	CallExpression	CLAMP12 ( t1 )		1095999	1					
ANR	1096449	Callee	CLAMP12		1095999	0					
ANR	1096450	Identifier	CLAMP12		1095999	0					
ANR	1096451	ArgumentList	t1		1095999	1					
ANR	1096452	Argument	t1		1095999	0					
ANR	1096453	Identifier	t1		1095999	0					
ANR	1096454	ExpressionStatement	op [ 2 ] = CLAMP12 ( t2 )	227:2:7887:7906	1095999	9	True				
ANR	1096455	AssignmentExpression	op [ 2 ] = CLAMP12 ( t2 )		1095999	0		=			
ANR	1096456	ArrayIndexing	op [ 2 ]		1095999	0					
ANR	1096457	Identifier	op		1095999	0					
ANR	1096458	PrimaryExpression	2		1095999	1					
ANR	1096459	CallExpression	CLAMP12 ( t2 )		1095999	1					
ANR	1096460	Callee	CLAMP12		1095999	0					
ANR	1096461	Identifier	CLAMP12		1095999	0					
ANR	1096462	ArgumentList	t2		1095999	1					
ANR	1096463	Argument	t2		1095999	0					
ANR	1096464	Identifier	t2		1095999	0					
ANR	1096465	ExpressionStatement	op [ 3 ] = CLAMP12 ( t3 )	228:2:7910:7929	1095999	10	True				
ANR	1096466	AssignmentExpression	op [ 3 ] = CLAMP12 ( t3 )		1095999	0		=			
ANR	1096467	ArrayIndexing	op [ 3 ]		1095999	0					
ANR	1096468	Identifier	op		1095999	0					
ANR	1096469	PrimaryExpression	3		1095999	1					
ANR	1096470	CallExpression	CLAMP12 ( t3 )		1095999	1					
ANR	1096471	Callee	CLAMP12		1095999	0					
ANR	1096472	Identifier	CLAMP12		1095999	0					
ANR	1096473	ArgumentList	t3		1095999	1					
ANR	1096474	Argument	t3		1095999	0					
ANR	1096475	Identifier	t3		1095999	0					
ANR	1096476	ElseStatement	else		1095999	0					
ANR	1096477	CompoundStatement		52:8:1468:1468	1095999	0					
ANR	1096478	Statement	REPEAT	231:5:7953:7958	1095999	0	True				
ANR	1096479	Statement	(	231:11:7959:7959	1095999	1	True				
ANR	1096480	ExpressionStatement	"stride , t0 = ToLinearF [ * wp & mask ] * SCALE12"	231:12:7960:8002	1095999	2	True				
ANR	1096481	Expression	"stride , t0 = ToLinearF [ * wp & mask ] * SCALE12"		1095999	0					
ANR	1096482	Identifier	stride		1095999	0					
ANR	1096483	AssignmentExpression	t0 = ToLinearF [ * wp & mask ] * SCALE12		1095999	1		=			
ANR	1096484	Identifier	t0		1095999	0					
ANR	1096485	MultiplicativeExpression	ToLinearF [ * wp & mask ] * SCALE12		1095999	1		*			
ANR	1096486	ArrayIndexing	ToLinearF [ * wp & mask ]		1095999	0					
ANR	1096487	Identifier	ToLinearF		1095999	0					
ANR	1096488	BitAndExpression	* wp & mask		1095999	1		&			
ANR	1096489	UnaryOperationExpression	* wp		1095999	0					
ANR	1096490	UnaryOperator	*		1095999	0					
ANR	1096491	Identifier	wp		1095999	1					
ANR	1096492	Identifier	mask		1095999	1					
ANR	1096493	Identifier	SCALE12		1095999	1					
ANR	1096494	ExpressionStatement	* op = CLAMP12 ( t0 )	232:27:8031:8048	1095999	3	True				
ANR	1096495	AssignmentExpression	* op = CLAMP12 ( t0 )		1095999	0		=			
ANR	1096496	UnaryOperationExpression	* op		1095999	0					
ANR	1096497	UnaryOperator	*		1095999	0					
ANR	1096498	Identifier	op		1095999	1					
ANR	1096499	CallExpression	CLAMP12 ( t0 )		1095999	1					
ANR	1096500	Callee	CLAMP12		1095999	0					
ANR	1096501	Identifier	CLAMP12		1095999	0					
ANR	1096502	ArgumentList	t0		1095999	1					
ANR	1096503	Argument	t0		1095999	0					
ANR	1096504	Identifier	t0		1095999	0					
ANR	1096505	ExpressionStatement	wp ++	232:46:8050:8054	1095999	4	True				
ANR	1096506	PostIncDecOperationExpression	wp ++		1095999	0					
ANR	1096507	Identifier	wp		1095999	0					
ANR	1096508	IncDec	++		1095999	1					
ANR	1096509	Statement	op	232:52:8056:8057	1095999	5	True				
ANR	1096510	Statement	++	232:54:8058:8059	1095999	6	True				
ANR	1096511	Statement	)	232:56:8060:8060	1095999	7	True				
ANR	1096512	ExpressionStatement	n -= stride	233:5:8067:8078	1095999	8	True				
ANR	1096513	AssignmentExpression	n -= stride		1095999	0		-=			
ANR	1096514	Identifier	n		1095999	0					
ANR	1096515	Identifier	stride		1095999	1					
ANR	1096516	WhileStatement	while ( n > 0 )		1095999	9					
ANR	1096517	Condition	n > 0	234:12:8092:8096	1095999	0	True				
ANR	1096518	RelationalExpression	n > 0		1095999	0		>			
ANR	1096519	Identifier	n		1095999	0					
ANR	1096520	PrimaryExpression	0		1095999	1					
ANR	1096521	CompoundStatement		56:19:1621:1621	1095999	1					
ANR	1096522	Statement	REPEAT	235:2:8103:8108	1095999	0	True				
ANR	1096523	Statement	(	235:8:8109:8109	1095999	1	True				
ANR	1096524	ExpressionStatement	"stride , wp [ stride ] += * wp"	235:9:8110:8141	1095999	2	True				
ANR	1096525	Expression	"stride , wp [ stride ] += * wp"		1095999	0					
ANR	1096526	Identifier	stride		1095999	0					
ANR	1096527	AssignmentExpression	wp [ stride ] += * wp		1095999	1		+=			
ANR	1096528	ArrayIndexing	wp [ stride ]		1095999	0					
ANR	1096529	Identifier	wp		1095999	0					
ANR	1096530	Identifier	stride		1095999	1					
ANR	1096531	UnaryOperationExpression	* wp		1095999	1					
ANR	1096532	UnaryOperator	*		1095999	0					
ANR	1096533	Identifier	wp		1095999	1					
ANR	1096534	ExpressionStatement	t0 = ToLinearF [ wp [ stride ] & mask ] * SCALE12	236:25:8143:8182	1095999	3	True				
ANR	1096535	AssignmentExpression	t0 = ToLinearF [ wp [ stride ] & mask ] * SCALE12		1095999	0		=			
ANR	1096536	Identifier	t0		1095999	0					
ANR	1096537	MultiplicativeExpression	ToLinearF [ wp [ stride ] & mask ] * SCALE12		1095999	1		*			
ANR	1096538	ArrayIndexing	ToLinearF [ wp [ stride ] & mask ]		1095999	0					
ANR	1096539	Identifier	ToLinearF		1095999	0					
ANR	1096540	BitAndExpression	wp [ stride ] & mask		1095999	1		&			
ANR	1096541	ArrayIndexing	wp [ stride ]		1095999	0					
ANR	1096542	Identifier	wp		1095999	0					
ANR	1096543	Identifier	stride		1095999	1					
ANR	1096544	Identifier	mask		1095999	1					
ANR	1096545	Identifier	SCALE12		1095999	1					
ANR	1096546	ExpressionStatement	* op = CLAMP12 ( t0 )	237:6:8190:8207	1095999	4	True				
ANR	1096547	AssignmentExpression	* op = CLAMP12 ( t0 )		1095999	0		=			
ANR	1096548	UnaryOperationExpression	* op		1095999	0					
ANR	1096549	UnaryOperator	*		1095999	0					
ANR	1096550	Identifier	op		1095999	1					
ANR	1096551	CallExpression	CLAMP12 ( t0 )		1095999	1					
ANR	1096552	Callee	CLAMP12		1095999	0					
ANR	1096553	Identifier	CLAMP12		1095999	0					
ANR	1096554	ArgumentList	t0		1095999	1					
ANR	1096555	Argument	t0		1095999	0					
ANR	1096556	Identifier	t0		1095999	0					
ANR	1096557	ExpressionStatement	wp ++	237:26:8210:8214	1095999	5	True				
ANR	1096558	PostIncDecOperationExpression	wp ++		1095999	0					
ANR	1096559	Identifier	wp		1095999	0					
ANR	1096560	IncDec	++		1095999	1					
ANR	1096561	Statement	op	237:32:8216:8217	1095999	6	True				
ANR	1096562	Statement	++	237:34:8218:8219	1095999	7	True				
ANR	1096563	Statement	)	237:36:8220:8220	1095999	8	True				
ANR	1096564	ExpressionStatement	n -= stride	238:2:8224:8235	1095999	9	True				
ANR	1096565	AssignmentExpression	n -= stride		1095999	0		-=			
ANR	1096566	Identifier	n		1095999	0					
ANR	1096567	Identifier	stride		1095999	1					
ANR	1096568	ReturnType	static void		1095999	1					
ANR	1096569	Identifier	horizontalAccumulate12		1095999	2					
ANR	1096570	ParameterList	"uint16 * wp , int n , int stride , int16 * op , float * ToLinearF"		1095999	3					
ANR	1096571	Parameter	uint16 * wp	177:23:6416:6425	1095999	0	True				
ANR	1096572	ParameterType	uint16 *		1095999	0					
ANR	1096573	Identifier	wp		1095999	1					
ANR	1096574	Parameter	int n	177:35:6428:6432	1095999	1	True				
ANR	1096575	ParameterType	int		1095999	0					
ANR	1096576	Identifier	n		1095999	1					
ANR	1096577	Parameter	int stride	177:42:6435:6444	1095999	2	True				
ANR	1096578	ParameterType	int		1095999	0					
ANR	1096579	Identifier	stride		1095999	1					
ANR	1096580	Parameter	int16 * op	177:54:6447:6455	1095999	3	True				
ANR	1096581	ParameterType	int16 *		1095999	0					
ANR	1096582	Identifier	op		1095999	1					
ANR	1096583	Parameter	float * ToLinearF	178:1:6459:6474	1095999	4	True				
ANR	1096584	ParameterType	float *		1095999	0					
ANR	1096585	Identifier	ToLinearF		1095999	1					
ANR	1096586	CFGEntryNode	ENTRY		1095999		True				
ANR	1096587	CFGExitNode	EXIT		1095999		True				
ANR	1096588	Symbol	op		1095999						
ANR	1096589	Symbol	* stride		1095999						
ANR	1096590	Symbol	* mask		1095999						
ANR	1096591	Symbol	cg		1095999						
ANR	1096592	Symbol	* op		1095999						
ANR	1096593	Symbol	* * wp		1095999						
ANR	1096594	Symbol	stride		1095999						
ANR	1096595	Symbol	* * stride		1095999						
ANR	1096596	Symbol	n		1095999						
ANR	1096597	Symbol	cr		1095999						
ANR	1096598	Symbol	CODE_MASK		1095999						
ANR	1096599	Symbol	CLAMP12		1095999						
ANR	1096600	Symbol	wp		1095999						
ANR	1096601	Symbol	SCALE12		1095999						
ANR	1096602	Symbol	ToLinearF		1095999						
ANR	1096603	Symbol	t0		1095999						
ANR	1096604	Symbol	* wp		1095999						
ANR	1096605	Symbol	t1		1095999						
ANR	1096606	Symbol	ca		1095999						
ANR	1096607	Symbol	t2		1095999						
ANR	1096608	Symbol	* ToLinearF		1095999						
ANR	1096609	Symbol	mask		1095999						
ANR	1096610	Symbol	cb		1095999						
ANR	1096611	Symbol	t3		1095999						
ANR	1096612	Function	horizontalAccumulate16	244:0:8256:9494							
ANR	1096613	FunctionDef	"horizontalAccumulate16 (uint16 * wp , int n , int stride , uint16 * op , uint16 * ToLinear16)"		1096612	0					
ANR	1096614	CompoundStatement		247:0:8355:9494	1096612	0					
ANR	1096615	Statement	register	248:4:8361:8368	1096612	0	True				
ANR	1096616	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	248:13:8370:8404	1096612	1	True				
ANR	1096617	IdentifierDecl	cr		1096612	0					
ANR	1096618	IdentifierDeclType	unsigned int		1096612	0					
ANR	1096619	Identifier	cr		1096612	1					
ANR	1096620	IdentifierDecl	cg		1096612	1					
ANR	1096621	IdentifierDeclType	unsigned int		1096612	0					
ANR	1096622	Identifier	cg		1096612	1					
ANR	1096623	IdentifierDecl	cb		1096612	2					
ANR	1096624	IdentifierDeclType	unsigned int		1096612	0					
ANR	1096625	Identifier	cb		1096612	1					
ANR	1096626	IdentifierDecl	ca		1096612	3					
ANR	1096627	IdentifierDeclType	unsigned int		1096612	0					
ANR	1096628	Identifier	ca		1096612	1					
ANR	1096629	IdentifierDecl	mask		1096612	4					
ANR	1096630	IdentifierDeclType	unsigned int		1096612	0					
ANR	1096631	Identifier	mask		1096612	1					
ANR	1096632	IfStatement	if ( n >= stride )		1096612	2					
ANR	1096633	Condition	n >= stride	250:8:8415:8425	1096612	0	True				
ANR	1096634	RelationalExpression	n >= stride		1096612	0		>=			
ANR	1096635	Identifier	n		1096612	0					
ANR	1096636	Identifier	stride		1096612	1					
ANR	1096637	CompoundStatement		4:21:72:72	1096612	1					
ANR	1096638	ExpressionStatement	mask = CODE_MASK	251:1:8431:8447	1096612	0	True				
ANR	1096639	AssignmentExpression	mask = CODE_MASK		1096612	0		=			
ANR	1096640	Identifier	mask		1096612	0					
ANR	1096641	Identifier	CODE_MASK		1096612	1					
ANR	1096642	IfStatement	if ( stride == 3 )		1096612	1					
ANR	1096643	Condition	stride == 3	252:5:8454:8464	1096612	0	True				
ANR	1096644	EqualityExpression	stride == 3		1096612	0		==			
ANR	1096645	Identifier	stride		1096612	0					
ANR	1096646	PrimaryExpression	3		1096612	1					
ANR	1096647	CompoundStatement		6:18:111:111	1096612	1					
ANR	1096648	ExpressionStatement	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]	253:5:8474:8513	1096612	0	True				
ANR	1096649	AssignmentExpression	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		1096612	0		=			
ANR	1096650	ArrayIndexing	op [ 0 ]		1096612	0					
ANR	1096651	Identifier	op		1096612	0					
ANR	1096652	PrimaryExpression	0		1096612	1					
ANR	1096653	ArrayIndexing	ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		1096612	1					
ANR	1096654	Identifier	ToLinear16		1096612	0					
ANR	1096655	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1096612	1		=			
ANR	1096656	Identifier	cr		1096612	0					
ANR	1096657	BitAndExpression	wp [ 0 ] & mask		1096612	1		&			
ANR	1096658	ArrayIndexing	wp [ 0 ]		1096612	0					
ANR	1096659	Identifier	wp		1096612	0					
ANR	1096660	PrimaryExpression	0		1096612	1					
ANR	1096661	Identifier	mask		1096612	1					
ANR	1096662	ExpressionStatement	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]	254:5:8520:8559	1096612	1	True				
ANR	1096663	AssignmentExpression	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		1096612	0		=			
ANR	1096664	ArrayIndexing	op [ 1 ]		1096612	0					
ANR	1096665	Identifier	op		1096612	0					
ANR	1096666	PrimaryExpression	1		1096612	1					
ANR	1096667	ArrayIndexing	ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		1096612	1					
ANR	1096668	Identifier	ToLinear16		1096612	0					
ANR	1096669	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1096612	1		=			
ANR	1096670	Identifier	cg		1096612	0					
ANR	1096671	BitAndExpression	wp [ 1 ] & mask		1096612	1		&			
ANR	1096672	ArrayIndexing	wp [ 1 ]		1096612	0					
ANR	1096673	Identifier	wp		1096612	0					
ANR	1096674	PrimaryExpression	1		1096612	1					
ANR	1096675	Identifier	mask		1096612	1					
ANR	1096676	ExpressionStatement	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]	255:5:8566:8605	1096612	2	True				
ANR	1096677	AssignmentExpression	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		1096612	0		=			
ANR	1096678	ArrayIndexing	op [ 2 ]		1096612	0					
ANR	1096679	Identifier	op		1096612	0					
ANR	1096680	PrimaryExpression	2		1096612	1					
ANR	1096681	ArrayIndexing	ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		1096612	1					
ANR	1096682	Identifier	ToLinear16		1096612	0					
ANR	1096683	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1096612	1		=			
ANR	1096684	Identifier	cb		1096612	0					
ANR	1096685	BitAndExpression	wp [ 2 ] & mask		1096612	1		&			
ANR	1096686	ArrayIndexing	wp [ 2 ]		1096612	0					
ANR	1096687	Identifier	wp		1096612	0					
ANR	1096688	PrimaryExpression	2		1096612	1					
ANR	1096689	Identifier	mask		1096612	1					
ANR	1096690	ExpressionStatement	n -= 3	256:5:8612:8618	1096612	3	True				
ANR	1096691	AssignmentExpression	n -= 3		1096612	0		-=			
ANR	1096692	Identifier	n		1096612	0					
ANR	1096693	PrimaryExpression	3		1096612	1					
ANR	1096694	WhileStatement	while ( n > 0 )		1096612	4					
ANR	1096695	Condition	n > 0	257:12:8632:8636	1096612	0	True				
ANR	1096696	RelationalExpression	n > 0		1096612	0		>			
ANR	1096697	Identifier	n		1096612	0					
ANR	1096698	PrimaryExpression	0		1096612	1					
ANR	1096699	CompoundStatement		11:19:283:283	1096612	1					
ANR	1096700	ExpressionStatement	wp += 3	258:2:8643:8650	1096612	0	True				
ANR	1096701	AssignmentExpression	wp += 3		1096612	0		+=			
ANR	1096702	Identifier	wp		1096612	0					
ANR	1096703	PrimaryExpression	3		1096612	1					
ANR	1096704	ExpressionStatement	op += 3	259:2:8654:8661	1096612	1	True				
ANR	1096705	AssignmentExpression	op += 3		1096612	0		+=			
ANR	1096706	Identifier	op		1096612	0					
ANR	1096707	PrimaryExpression	3		1096612	1					
ANR	1096708	ExpressionStatement	n -= 3	260:2:8665:8671	1096612	2	True				
ANR	1096709	AssignmentExpression	n -= 3		1096612	0		-=			
ANR	1096710	Identifier	n		1096612	0					
ANR	1096711	PrimaryExpression	3		1096612	1					
ANR	1096712	ExpressionStatement	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]	261:2:8675:8715	1096612	3	True				
ANR	1096713	AssignmentExpression	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		1096612	0		=			
ANR	1096714	ArrayIndexing	op [ 0 ]		1096612	0					
ANR	1096715	Identifier	op		1096612	0					
ANR	1096716	PrimaryExpression	0		1096612	1					
ANR	1096717	ArrayIndexing	ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		1096612	1					
ANR	1096718	Identifier	ToLinear16		1096612	0					
ANR	1096719	BitAndExpression	( cr += wp [ 0 ] ) & mask		1096612	1		&			
ANR	1096720	AssignmentExpression	cr += wp [ 0 ]		1096612	0		+=			
ANR	1096721	Identifier	cr		1096612	0					
ANR	1096722	ArrayIndexing	wp [ 0 ]		1096612	1					
ANR	1096723	Identifier	wp		1096612	0					
ANR	1096724	PrimaryExpression	0		1096612	1					
ANR	1096725	Identifier	mask		1096612	1					
ANR	1096726	ExpressionStatement	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]	262:2:8719:8759	1096612	4	True				
ANR	1096727	AssignmentExpression	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		1096612	0		=			
ANR	1096728	ArrayIndexing	op [ 1 ]		1096612	0					
ANR	1096729	Identifier	op		1096612	0					
ANR	1096730	PrimaryExpression	1		1096612	1					
ANR	1096731	ArrayIndexing	ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		1096612	1					
ANR	1096732	Identifier	ToLinear16		1096612	0					
ANR	1096733	BitAndExpression	( cg += wp [ 1 ] ) & mask		1096612	1		&			
ANR	1096734	AssignmentExpression	cg += wp [ 1 ]		1096612	0		+=			
ANR	1096735	Identifier	cg		1096612	0					
ANR	1096736	ArrayIndexing	wp [ 1 ]		1096612	1					
ANR	1096737	Identifier	wp		1096612	0					
ANR	1096738	PrimaryExpression	1		1096612	1					
ANR	1096739	Identifier	mask		1096612	1					
ANR	1096740	ExpressionStatement	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]	263:2:8763:8803	1096612	5	True				
ANR	1096741	AssignmentExpression	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		1096612	0		=			
ANR	1096742	ArrayIndexing	op [ 2 ]		1096612	0					
ANR	1096743	Identifier	op		1096612	0					
ANR	1096744	PrimaryExpression	2		1096612	1					
ANR	1096745	ArrayIndexing	ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		1096612	1					
ANR	1096746	Identifier	ToLinear16		1096612	0					
ANR	1096747	BitAndExpression	( cb += wp [ 2 ] ) & mask		1096612	1		&			
ANR	1096748	AssignmentExpression	cb += wp [ 2 ]		1096612	0		+=			
ANR	1096749	Identifier	cb		1096612	0					
ANR	1096750	ArrayIndexing	wp [ 2 ]		1096612	1					
ANR	1096751	Identifier	wp		1096612	0					
ANR	1096752	PrimaryExpression	2		1096612	1					
ANR	1096753	Identifier	mask		1096612	1					
ANR	1096754	ElseStatement	else		1096612	0					
ANR	1096755	IfStatement	if ( stride == 4 )		1096612	0					
ANR	1096756	Condition	stride == 4	265:12:8824:8834	1096612	0	True				
ANR	1096757	EqualityExpression	stride == 4		1096612	0		==			
ANR	1096758	Identifier	stride		1096612	0					
ANR	1096759	PrimaryExpression	4		1096612	1					
ANR	1096760	CompoundStatement		19:25:481:481	1096612	1					
ANR	1096761	ExpressionStatement	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]	266:5:8844:8883	1096612	0	True				
ANR	1096762	AssignmentExpression	op [ 0 ] = ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		1096612	0		=			
ANR	1096763	ArrayIndexing	op [ 0 ]		1096612	0					
ANR	1096764	Identifier	op		1096612	0					
ANR	1096765	PrimaryExpression	0		1096612	1					
ANR	1096766	ArrayIndexing	ToLinear16 [ cr = ( wp [ 0 ] & mask ) ]		1096612	1					
ANR	1096767	Identifier	ToLinear16		1096612	0					
ANR	1096768	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1096612	1		=			
ANR	1096769	Identifier	cr		1096612	0					
ANR	1096770	BitAndExpression	wp [ 0 ] & mask		1096612	1		&			
ANR	1096771	ArrayIndexing	wp [ 0 ]		1096612	0					
ANR	1096772	Identifier	wp		1096612	0					
ANR	1096773	PrimaryExpression	0		1096612	1					
ANR	1096774	Identifier	mask		1096612	1					
ANR	1096775	ExpressionStatement	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]	267:5:8890:8929	1096612	1	True				
ANR	1096776	AssignmentExpression	op [ 1 ] = ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		1096612	0		=			
ANR	1096777	ArrayIndexing	op [ 1 ]		1096612	0					
ANR	1096778	Identifier	op		1096612	0					
ANR	1096779	PrimaryExpression	1		1096612	1					
ANR	1096780	ArrayIndexing	ToLinear16 [ cg = ( wp [ 1 ] & mask ) ]		1096612	1					
ANR	1096781	Identifier	ToLinear16		1096612	0					
ANR	1096782	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1096612	1		=			
ANR	1096783	Identifier	cg		1096612	0					
ANR	1096784	BitAndExpression	wp [ 1 ] & mask		1096612	1		&			
ANR	1096785	ArrayIndexing	wp [ 1 ]		1096612	0					
ANR	1096786	Identifier	wp		1096612	0					
ANR	1096787	PrimaryExpression	1		1096612	1					
ANR	1096788	Identifier	mask		1096612	1					
ANR	1096789	ExpressionStatement	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]	268:5:8936:8975	1096612	2	True				
ANR	1096790	AssignmentExpression	op [ 2 ] = ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		1096612	0		=			
ANR	1096791	ArrayIndexing	op [ 2 ]		1096612	0					
ANR	1096792	Identifier	op		1096612	0					
ANR	1096793	PrimaryExpression	2		1096612	1					
ANR	1096794	ArrayIndexing	ToLinear16 [ cb = ( wp [ 2 ] & mask ) ]		1096612	1					
ANR	1096795	Identifier	ToLinear16		1096612	0					
ANR	1096796	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1096612	1		=			
ANR	1096797	Identifier	cb		1096612	0					
ANR	1096798	BitAndExpression	wp [ 2 ] & mask		1096612	1		&			
ANR	1096799	ArrayIndexing	wp [ 2 ]		1096612	0					
ANR	1096800	Identifier	wp		1096612	0					
ANR	1096801	PrimaryExpression	2		1096612	1					
ANR	1096802	Identifier	mask		1096612	1					
ANR	1096803	ExpressionStatement	op [ 3 ] = ToLinear16 [ ca = ( wp [ 3 ] & mask ) ]	269:5:8982:9021	1096612	3	True				
ANR	1096804	AssignmentExpression	op [ 3 ] = ToLinear16 [ ca = ( wp [ 3 ] & mask ) ]		1096612	0		=			
ANR	1096805	ArrayIndexing	op [ 3 ]		1096612	0					
ANR	1096806	Identifier	op		1096612	0					
ANR	1096807	PrimaryExpression	3		1096612	1					
ANR	1096808	ArrayIndexing	ToLinear16 [ ca = ( wp [ 3 ] & mask ) ]		1096612	1					
ANR	1096809	Identifier	ToLinear16		1096612	0					
ANR	1096810	AssignmentExpression	ca = ( wp [ 3 ] & mask )		1096612	1		=			
ANR	1096811	Identifier	ca		1096612	0					
ANR	1096812	BitAndExpression	wp [ 3 ] & mask		1096612	1		&			
ANR	1096813	ArrayIndexing	wp [ 3 ]		1096612	0					
ANR	1096814	Identifier	wp		1096612	0					
ANR	1096815	PrimaryExpression	3		1096612	1					
ANR	1096816	Identifier	mask		1096612	1					
ANR	1096817	ExpressionStatement	n -= 4	270:5:9028:9034	1096612	4	True				
ANR	1096818	AssignmentExpression	n -= 4		1096612	0		-=			
ANR	1096819	Identifier	n		1096612	0					
ANR	1096820	PrimaryExpression	4		1096612	1					
ANR	1096821	WhileStatement	while ( n > 0 )		1096612	5					
ANR	1096822	Condition	n > 0	271:12:9048:9052	1096612	0	True				
ANR	1096823	RelationalExpression	n > 0		1096612	0		>			
ANR	1096824	Identifier	n		1096612	0					
ANR	1096825	PrimaryExpression	0		1096612	1					
ANR	1096826	CompoundStatement		25:19:699:699	1096612	1					
ANR	1096827	ExpressionStatement	wp += 4	272:2:9059:9066	1096612	0	True				
ANR	1096828	AssignmentExpression	wp += 4		1096612	0		+=			
ANR	1096829	Identifier	wp		1096612	0					
ANR	1096830	PrimaryExpression	4		1096612	1					
ANR	1096831	ExpressionStatement	op += 4	273:2:9070:9077	1096612	1	True				
ANR	1096832	AssignmentExpression	op += 4		1096612	0		+=			
ANR	1096833	Identifier	op		1096612	0					
ANR	1096834	PrimaryExpression	4		1096612	1					
ANR	1096835	ExpressionStatement	n -= 4	274:2:9081:9087	1096612	2	True				
ANR	1096836	AssignmentExpression	n -= 4		1096612	0		-=			
ANR	1096837	Identifier	n		1096612	0					
ANR	1096838	PrimaryExpression	4		1096612	1					
ANR	1096839	ExpressionStatement	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]	275:2:9091:9131	1096612	3	True				
ANR	1096840	AssignmentExpression	op [ 0 ] = ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		1096612	0		=			
ANR	1096841	ArrayIndexing	op [ 0 ]		1096612	0					
ANR	1096842	Identifier	op		1096612	0					
ANR	1096843	PrimaryExpression	0		1096612	1					
ANR	1096844	ArrayIndexing	ToLinear16 [ ( cr += wp [ 0 ] ) & mask ]		1096612	1					
ANR	1096845	Identifier	ToLinear16		1096612	0					
ANR	1096846	BitAndExpression	( cr += wp [ 0 ] ) & mask		1096612	1		&			
ANR	1096847	AssignmentExpression	cr += wp [ 0 ]		1096612	0		+=			
ANR	1096848	Identifier	cr		1096612	0					
ANR	1096849	ArrayIndexing	wp [ 0 ]		1096612	1					
ANR	1096850	Identifier	wp		1096612	0					
ANR	1096851	PrimaryExpression	0		1096612	1					
ANR	1096852	Identifier	mask		1096612	1					
ANR	1096853	ExpressionStatement	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]	276:2:9135:9175	1096612	4	True				
ANR	1096854	AssignmentExpression	op [ 1 ] = ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		1096612	0		=			
ANR	1096855	ArrayIndexing	op [ 1 ]		1096612	0					
ANR	1096856	Identifier	op		1096612	0					
ANR	1096857	PrimaryExpression	1		1096612	1					
ANR	1096858	ArrayIndexing	ToLinear16 [ ( cg += wp [ 1 ] ) & mask ]		1096612	1					
ANR	1096859	Identifier	ToLinear16		1096612	0					
ANR	1096860	BitAndExpression	( cg += wp [ 1 ] ) & mask		1096612	1		&			
ANR	1096861	AssignmentExpression	cg += wp [ 1 ]		1096612	0		+=			
ANR	1096862	Identifier	cg		1096612	0					
ANR	1096863	ArrayIndexing	wp [ 1 ]		1096612	1					
ANR	1096864	Identifier	wp		1096612	0					
ANR	1096865	PrimaryExpression	1		1096612	1					
ANR	1096866	Identifier	mask		1096612	1					
ANR	1096867	ExpressionStatement	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]	277:2:9179:9219	1096612	5	True				
ANR	1096868	AssignmentExpression	op [ 2 ] = ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		1096612	0		=			
ANR	1096869	ArrayIndexing	op [ 2 ]		1096612	0					
ANR	1096870	Identifier	op		1096612	0					
ANR	1096871	PrimaryExpression	2		1096612	1					
ANR	1096872	ArrayIndexing	ToLinear16 [ ( cb += wp [ 2 ] ) & mask ]		1096612	1					
ANR	1096873	Identifier	ToLinear16		1096612	0					
ANR	1096874	BitAndExpression	( cb += wp [ 2 ] ) & mask		1096612	1		&			
ANR	1096875	AssignmentExpression	cb += wp [ 2 ]		1096612	0		+=			
ANR	1096876	Identifier	cb		1096612	0					
ANR	1096877	ArrayIndexing	wp [ 2 ]		1096612	1					
ANR	1096878	Identifier	wp		1096612	0					
ANR	1096879	PrimaryExpression	2		1096612	1					
ANR	1096880	Identifier	mask		1096612	1					
ANR	1096881	ExpressionStatement	op [ 3 ] = ToLinear16 [ ( ca += wp [ 3 ] ) & mask ]	278:2:9223:9263	1096612	6	True				
ANR	1096882	AssignmentExpression	op [ 3 ] = ToLinear16 [ ( ca += wp [ 3 ] ) & mask ]		1096612	0		=			
ANR	1096883	ArrayIndexing	op [ 3 ]		1096612	0					
ANR	1096884	Identifier	op		1096612	0					
ANR	1096885	PrimaryExpression	3		1096612	1					
ANR	1096886	ArrayIndexing	ToLinear16 [ ( ca += wp [ 3 ] ) & mask ]		1096612	1					
ANR	1096887	Identifier	ToLinear16		1096612	0					
ANR	1096888	BitAndExpression	( ca += wp [ 3 ] ) & mask		1096612	1		&			
ANR	1096889	AssignmentExpression	ca += wp [ 3 ]		1096612	0		+=			
ANR	1096890	Identifier	ca		1096612	0					
ANR	1096891	ArrayIndexing	wp [ 3 ]		1096612	1					
ANR	1096892	Identifier	wp		1096612	0					
ANR	1096893	PrimaryExpression	3		1096612	1					
ANR	1096894	Identifier	mask		1096612	1					
ANR	1096895	ElseStatement	else		1096612	0					
ANR	1096896	CompoundStatement		34:8:924:924	1096612	0					
ANR	1096897	Statement	REPEAT	281:5:9287:9292	1096612	0	True				
ANR	1096898	Statement	(	281:11:9293:9293	1096612	1	True				
ANR	1096899	ExpressionStatement	"stride , * op = ToLinear16 [ * wp & mask ]"	281:12:9294:9328	1096612	2	True				
ANR	1096900	Expression	"stride , * op = ToLinear16 [ * wp & mask ]"		1096612	0					
ANR	1096901	Identifier	stride		1096612	0					
ANR	1096902	AssignmentExpression	* op = ToLinear16 [ * wp & mask ]		1096612	1		=			
ANR	1096903	UnaryOperationExpression	* op		1096612	0					
ANR	1096904	UnaryOperator	*		1096612	0					
ANR	1096905	Identifier	op		1096612	1					
ANR	1096906	ArrayIndexing	ToLinear16 [ * wp & mask ]		1096612	1					
ANR	1096907	Identifier	ToLinear16		1096612	0					
ANR	1096908	BitAndExpression	* wp & mask		1096612	1		&			
ANR	1096909	UnaryOperationExpression	* wp		1096612	0					
ANR	1096910	UnaryOperator	*		1096612	0					
ANR	1096911	Identifier	wp		1096612	1					
ANR	1096912	Identifier	mask		1096612	1					
ANR	1096913	ExpressionStatement	wp ++	281:48:9330:9334	1096612	3	True				
ANR	1096914	PostIncDecOperationExpression	wp ++		1096612	0					
ANR	1096915	Identifier	wp		1096612	0					
ANR	1096916	IncDec	++		1096612	1					
ANR	1096917	Statement	op	281:54:9336:9337	1096612	4	True				
ANR	1096918	Statement	++	281:56:9338:9339	1096612	5	True				
ANR	1096919	Statement	)	281:58:9340:9340	1096612	6	True				
ANR	1096920	ExpressionStatement	n -= stride	282:5:9347:9358	1096612	7	True				
ANR	1096921	AssignmentExpression	n -= stride		1096612	0		-=			
ANR	1096922	Identifier	n		1096612	0					
ANR	1096923	Identifier	stride		1096612	1					
ANR	1096924	WhileStatement	while ( n > 0 )		1096612	8					
ANR	1096925	Condition	n > 0	283:12:9372:9376	1096612	0	True				
ANR	1096926	RelationalExpression	n > 0		1096612	0		>			
ANR	1096927	Identifier	n		1096612	0					
ANR	1096928	PrimaryExpression	0		1096612	1					
ANR	1096929	CompoundStatement		37:19:1023:1023	1096612	1					
ANR	1096930	Statement	REPEAT	284:2:9383:9388	1096612	0	True				
ANR	1096931	Statement	(	284:8:9389:9389	1096612	1	True				
ANR	1096932	ExpressionStatement	"stride , wp [ stride ] += * wp"	284:9:9390:9421	1096612	2	True				
ANR	1096933	Expression	"stride , wp [ stride ] += * wp"		1096612	0					
ANR	1096934	Identifier	stride		1096612	0					
ANR	1096935	AssignmentExpression	wp [ stride ] += * wp		1096612	1		+=			
ANR	1096936	ArrayIndexing	wp [ stride ]		1096612	0					
ANR	1096937	Identifier	wp		1096612	0					
ANR	1096938	Identifier	stride		1096612	1					
ANR	1096939	UnaryOperationExpression	* wp		1096612	1					
ANR	1096940	UnaryOperator	*		1096612	0					
ANR	1096941	Identifier	wp		1096612	1					
ANR	1096942	ExpressionStatement	* op = ToLinear16 [ * wp & mask ]	285:25:9423:9449	1096612	3	True				
ANR	1096943	AssignmentExpression	* op = ToLinear16 [ * wp & mask ]		1096612	0		=			
ANR	1096944	UnaryOperationExpression	* op		1096612	0					
ANR	1096945	UnaryOperator	*		1096612	0					
ANR	1096946	Identifier	op		1096612	1					
ANR	1096947	ArrayIndexing	ToLinear16 [ * wp & mask ]		1096612	1					
ANR	1096948	Identifier	ToLinear16		1096612	0					
ANR	1096949	BitAndExpression	* wp & mask		1096612	1		&			
ANR	1096950	UnaryOperationExpression	* wp		1096612	0					
ANR	1096951	UnaryOperator	*		1096612	0					
ANR	1096952	Identifier	wp		1096612	1					
ANR	1096953	Identifier	mask		1096612	1					
ANR	1096954	ExpressionStatement	wp ++	285:53:9451:9455	1096612	4	True				
ANR	1096955	PostIncDecOperationExpression	wp ++		1096612	0					
ANR	1096956	Identifier	wp		1096612	0					
ANR	1096957	IncDec	++		1096612	1					
ANR	1096958	Statement	op	285:59:9457:9458	1096612	5	True				
ANR	1096959	Statement	++	285:61:9459:9460	1096612	6	True				
ANR	1096960	Statement	)	285:63:9461:9461	1096612	7	True				
ANR	1096961	ExpressionStatement	n -= stride	286:2:9465:9476	1096612	8	True				
ANR	1096962	AssignmentExpression	n -= stride		1096612	0		-=			
ANR	1096963	Identifier	n		1096612	0					
ANR	1096964	Identifier	stride		1096612	1					
ANR	1096965	ReturnType	static void		1096612	1					
ANR	1096966	Identifier	horizontalAccumulate16		1096612	2					
ANR	1096967	ParameterList	"uint16 * wp , int n , int stride , uint16 * op , uint16 * ToLinear16"		1096612	3					
ANR	1096968	Parameter	uint16 * wp	245:23:8291:8300	1096612	0	True				
ANR	1096969	ParameterType	uint16 *		1096612	0					
ANR	1096970	Identifier	wp		1096612	1					
ANR	1096971	Parameter	int n	245:35:8303:8307	1096612	1	True				
ANR	1096972	ParameterType	int		1096612	0					
ANR	1096973	Identifier	n		1096612	1					
ANR	1096974	Parameter	int stride	245:42:8310:8319	1096612	2	True				
ANR	1096975	ParameterType	int		1096612	0					
ANR	1096976	Identifier	stride		1096612	1					
ANR	1096977	Parameter	uint16 * op	245:54:8322:8331	1096612	3	True				
ANR	1096978	ParameterType	uint16 *		1096612	0					
ANR	1096979	Identifier	op		1096612	1					
ANR	1096980	Parameter	uint16 * ToLinear16	246:1:8335:8352	1096612	4	True				
ANR	1096981	ParameterType	uint16 *		1096612	0					
ANR	1096982	Identifier	ToLinear16		1096612	1					
ANR	1096983	CFGEntryNode	ENTRY		1096612		True				
ANR	1096984	CFGExitNode	EXIT		1096612		True				
ANR	1096985	Symbol	op		1096612						
ANR	1096986	Symbol	* ToLinear16		1096612						
ANR	1096987	Symbol	* stride		1096612						
ANR	1096988	Symbol	* mask		1096612						
ANR	1096989	Symbol	cg		1096612						
ANR	1096990	Symbol	* op		1096612						
ANR	1096991	Symbol	* * wp		1096612						
ANR	1096992	Symbol	stride		1096612						
ANR	1096993	Symbol	n		1096612						
ANR	1096994	Symbol	cr		1096612						
ANR	1096995	Symbol	CODE_MASK		1096612						
ANR	1096996	Symbol	wp		1096612						
ANR	1096997	Symbol	ToLinear16		1096612						
ANR	1096998	Symbol	* wp		1096612						
ANR	1096999	Symbol	ca		1096612						
ANR	1097000	Symbol	cb		1096612						
ANR	1097001	Symbol	mask		1096612						
ANR	1097002	Function	horizontalAccumulate11	296:0:9590:10537							
ANR	1097003	FunctionDef	"horizontalAccumulate11 (uint16 * wp , int n , int stride , uint16 * op)"		1097002	0					
ANR	1097004	CompoundStatement		298:0:9668:10537	1097002	0					
ANR	1097005	Statement	register	299:4:9674:9681	1097002	0	True				
ANR	1097006	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	299:13:9683:9717	1097002	1	True				
ANR	1097007	IdentifierDecl	cr		1097002	0					
ANR	1097008	IdentifierDeclType	unsigned int		1097002	0					
ANR	1097009	Identifier	cr		1097002	1					
ANR	1097010	IdentifierDecl	cg		1097002	1					
ANR	1097011	IdentifierDeclType	unsigned int		1097002	0					
ANR	1097012	Identifier	cg		1097002	1					
ANR	1097013	IdentifierDecl	cb		1097002	2					
ANR	1097014	IdentifierDeclType	unsigned int		1097002	0					
ANR	1097015	Identifier	cb		1097002	1					
ANR	1097016	IdentifierDecl	ca		1097002	3					
ANR	1097017	IdentifierDeclType	unsigned int		1097002	0					
ANR	1097018	Identifier	ca		1097002	1					
ANR	1097019	IdentifierDecl	mask		1097002	4					
ANR	1097020	IdentifierDeclType	unsigned int		1097002	0					
ANR	1097021	Identifier	mask		1097002	1					
ANR	1097022	IfStatement	if ( n >= stride )		1097002	2					
ANR	1097023	Condition	n >= stride	301:8:9728:9738	1097002	0	True				
ANR	1097024	RelationalExpression	n >= stride		1097002	0		>=			
ANR	1097025	Identifier	n		1097002	0					
ANR	1097026	Identifier	stride		1097002	1					
ANR	1097027	CompoundStatement		4:21:72:72	1097002	1					
ANR	1097028	ExpressionStatement	mask = CODE_MASK	302:1:9744:9760	1097002	0	True				
ANR	1097029	AssignmentExpression	mask = CODE_MASK		1097002	0		=			
ANR	1097030	Identifier	mask		1097002	0					
ANR	1097031	Identifier	CODE_MASK		1097002	1					
ANR	1097032	IfStatement	if ( stride == 3 )		1097002	1					
ANR	1097033	Condition	stride == 3	303:5:9767:9777	1097002	0	True				
ANR	1097034	EqualityExpression	stride == 3		1097002	0		==			
ANR	1097035	Identifier	stride		1097002	0					
ANR	1097036	PrimaryExpression	3		1097002	1					
ANR	1097037	CompoundStatement		6:18:111:111	1097002	1					
ANR	1097038	ExpressionStatement	op [ 0 ] = cr = wp [ 0 ]	304:5:9787:9805	1097002	0	True				
ANR	1097039	AssignmentExpression	op [ 0 ] = cr = wp [ 0 ]		1097002	0		=			
ANR	1097040	ArrayIndexing	op [ 0 ]		1097002	0					
ANR	1097041	Identifier	op		1097002	0					
ANR	1097042	PrimaryExpression	0		1097002	1					
ANR	1097043	AssignmentExpression	cr = wp [ 0 ]		1097002	1		=			
ANR	1097044	Identifier	cr		1097002	0					
ANR	1097045	ArrayIndexing	wp [ 0 ]		1097002	1					
ANR	1097046	Identifier	wp		1097002	0					
ANR	1097047	PrimaryExpression	0		1097002	1					
ANR	1097048	ExpressionStatement	op [ 1 ] = cg = wp [ 1 ]	304:26:9808:9826	1097002	1	True				
ANR	1097049	AssignmentExpression	op [ 1 ] = cg = wp [ 1 ]		1097002	0		=			
ANR	1097050	ArrayIndexing	op [ 1 ]		1097002	0					
ANR	1097051	Identifier	op		1097002	0					
ANR	1097052	PrimaryExpression	1		1097002	1					
ANR	1097053	AssignmentExpression	cg = wp [ 1 ]		1097002	1		=			
ANR	1097054	Identifier	cg		1097002	0					
ANR	1097055	ArrayIndexing	wp [ 1 ]		1097002	1					
ANR	1097056	Identifier	wp		1097002	0					
ANR	1097057	PrimaryExpression	1		1097002	1					
ANR	1097058	ExpressionStatement	op [ 2 ] = cb = wp [ 2 ]	304:47:9829:9847	1097002	2	True				
ANR	1097059	AssignmentExpression	op [ 2 ] = cb = wp [ 2 ]		1097002	0		=			
ANR	1097060	ArrayIndexing	op [ 2 ]		1097002	0					
ANR	1097061	Identifier	op		1097002	0					
ANR	1097062	PrimaryExpression	2		1097002	1					
ANR	1097063	AssignmentExpression	cb = wp [ 2 ]		1097002	1		=			
ANR	1097064	Identifier	cb		1097002	0					
ANR	1097065	ArrayIndexing	wp [ 2 ]		1097002	1					
ANR	1097066	Identifier	wp		1097002	0					
ANR	1097067	PrimaryExpression	2		1097002	1					
ANR	1097068	ExpressionStatement	n -= 3	305:5:9854:9860	1097002	3	True				
ANR	1097069	AssignmentExpression	n -= 3		1097002	0		-=			
ANR	1097070	Identifier	n		1097002	0					
ANR	1097071	PrimaryExpression	3		1097002	1					
ANR	1097072	WhileStatement	while ( n > 0 )		1097002	4					
ANR	1097073	Condition	n > 0	306:12:9874:9878	1097002	0	True				
ANR	1097074	RelationalExpression	n > 0		1097002	0		>			
ANR	1097075	Identifier	n		1097002	0					
ANR	1097076	PrimaryExpression	0		1097002	1					
ANR	1097077	CompoundStatement		9:19:212:212	1097002	1					
ANR	1097078	ExpressionStatement	wp += 3	307:2:9885:9892	1097002	0	True				
ANR	1097079	AssignmentExpression	wp += 3		1097002	0		+=			
ANR	1097080	Identifier	wp		1097002	0					
ANR	1097081	PrimaryExpression	3		1097002	1					
ANR	1097082	ExpressionStatement	op += 3	308:2:9896:9903	1097002	1	True				
ANR	1097083	AssignmentExpression	op += 3		1097002	0		+=			
ANR	1097084	Identifier	op		1097002	0					
ANR	1097085	PrimaryExpression	3		1097002	1					
ANR	1097086	ExpressionStatement	n -= 3	309:2:9907:9913	1097002	2	True				
ANR	1097087	AssignmentExpression	n -= 3		1097002	0		-=			
ANR	1097088	Identifier	n		1097002	0					
ANR	1097089	PrimaryExpression	3		1097002	1					
ANR	1097090	ExpressionStatement	op [ 0 ] = ( cr += wp [ 0 ] ) & mask	310:2:9917:9945	1097002	3	True				
ANR	1097091	AssignmentExpression	op [ 0 ] = ( cr += wp [ 0 ] ) & mask		1097002	0		=			
ANR	1097092	ArrayIndexing	op [ 0 ]		1097002	0					
ANR	1097093	Identifier	op		1097002	0					
ANR	1097094	PrimaryExpression	0		1097002	1					
ANR	1097095	BitAndExpression	( cr += wp [ 0 ] ) & mask		1097002	1		&			
ANR	1097096	AssignmentExpression	cr += wp [ 0 ]		1097002	0		+=			
ANR	1097097	Identifier	cr		1097002	0					
ANR	1097098	ArrayIndexing	wp [ 0 ]		1097002	1					
ANR	1097099	Identifier	wp		1097002	0					
ANR	1097100	PrimaryExpression	0		1097002	1					
ANR	1097101	Identifier	mask		1097002	1					
ANR	1097102	ExpressionStatement	op [ 1 ] = ( cg += wp [ 1 ] ) & mask	311:2:9949:9977	1097002	4	True				
ANR	1097103	AssignmentExpression	op [ 1 ] = ( cg += wp [ 1 ] ) & mask		1097002	0		=			
ANR	1097104	ArrayIndexing	op [ 1 ]		1097002	0					
ANR	1097105	Identifier	op		1097002	0					
ANR	1097106	PrimaryExpression	1		1097002	1					
ANR	1097107	BitAndExpression	( cg += wp [ 1 ] ) & mask		1097002	1		&			
ANR	1097108	AssignmentExpression	cg += wp [ 1 ]		1097002	0		+=			
ANR	1097109	Identifier	cg		1097002	0					
ANR	1097110	ArrayIndexing	wp [ 1 ]		1097002	1					
ANR	1097111	Identifier	wp		1097002	0					
ANR	1097112	PrimaryExpression	1		1097002	1					
ANR	1097113	Identifier	mask		1097002	1					
ANR	1097114	ExpressionStatement	op [ 2 ] = ( cb += wp [ 2 ] ) & mask	312:2:9981:10009	1097002	5	True				
ANR	1097115	AssignmentExpression	op [ 2 ] = ( cb += wp [ 2 ] ) & mask		1097002	0		=			
ANR	1097116	ArrayIndexing	op [ 2 ]		1097002	0					
ANR	1097117	Identifier	op		1097002	0					
ANR	1097118	PrimaryExpression	2		1097002	1					
ANR	1097119	BitAndExpression	( cb += wp [ 2 ] ) & mask		1097002	1		&			
ANR	1097120	AssignmentExpression	cb += wp [ 2 ]		1097002	0		+=			
ANR	1097121	Identifier	cb		1097002	0					
ANR	1097122	ArrayIndexing	wp [ 2 ]		1097002	1					
ANR	1097123	Identifier	wp		1097002	0					
ANR	1097124	PrimaryExpression	2		1097002	1					
ANR	1097125	Identifier	mask		1097002	1					
ANR	1097126	ElseStatement	else		1097002	0					
ANR	1097127	IfStatement	if ( stride == 4 )		1097002	0					
ANR	1097128	Condition	stride == 4	314:12:10030:10040	1097002	0	True				
ANR	1097129	EqualityExpression	stride == 4		1097002	0		==			
ANR	1097130	Identifier	stride		1097002	0					
ANR	1097131	PrimaryExpression	4		1097002	1					
ANR	1097132	CompoundStatement		17:25:374:374	1097002	1					
ANR	1097133	ExpressionStatement	op [ 0 ] = cr = wp [ 0 ]	315:5:10050:10068	1097002	0	True				
ANR	1097134	AssignmentExpression	op [ 0 ] = cr = wp [ 0 ]		1097002	0		=			
ANR	1097135	ArrayIndexing	op [ 0 ]		1097002	0					
ANR	1097136	Identifier	op		1097002	0					
ANR	1097137	PrimaryExpression	0		1097002	1					
ANR	1097138	AssignmentExpression	cr = wp [ 0 ]		1097002	1		=			
ANR	1097139	Identifier	cr		1097002	0					
ANR	1097140	ArrayIndexing	wp [ 0 ]		1097002	1					
ANR	1097141	Identifier	wp		1097002	0					
ANR	1097142	PrimaryExpression	0		1097002	1					
ANR	1097143	ExpressionStatement	op [ 1 ] = cg = wp [ 1 ]	315:26:10071:10089	1097002	1	True				
ANR	1097144	AssignmentExpression	op [ 1 ] = cg = wp [ 1 ]		1097002	0		=			
ANR	1097145	ArrayIndexing	op [ 1 ]		1097002	0					
ANR	1097146	Identifier	op		1097002	0					
ANR	1097147	PrimaryExpression	1		1097002	1					
ANR	1097148	AssignmentExpression	cg = wp [ 1 ]		1097002	1		=			
ANR	1097149	Identifier	cg		1097002	0					
ANR	1097150	ArrayIndexing	wp [ 1 ]		1097002	1					
ANR	1097151	Identifier	wp		1097002	0					
ANR	1097152	PrimaryExpression	1		1097002	1					
ANR	1097153	ExpressionStatement	op [ 2 ] = cb = wp [ 2 ]	316:5:10096:10114	1097002	2	True				
ANR	1097154	AssignmentExpression	op [ 2 ] = cb = wp [ 2 ]		1097002	0		=			
ANR	1097155	ArrayIndexing	op [ 2 ]		1097002	0					
ANR	1097156	Identifier	op		1097002	0					
ANR	1097157	PrimaryExpression	2		1097002	1					
ANR	1097158	AssignmentExpression	cb = wp [ 2 ]		1097002	1		=			
ANR	1097159	Identifier	cb		1097002	0					
ANR	1097160	ArrayIndexing	wp [ 2 ]		1097002	1					
ANR	1097161	Identifier	wp		1097002	0					
ANR	1097162	PrimaryExpression	2		1097002	1					
ANR	1097163	ExpressionStatement	op [ 3 ] = ca = wp [ 3 ]	316:26:10117:10135	1097002	3	True				
ANR	1097164	AssignmentExpression	op [ 3 ] = ca = wp [ 3 ]		1097002	0		=			
ANR	1097165	ArrayIndexing	op [ 3 ]		1097002	0					
ANR	1097166	Identifier	op		1097002	0					
ANR	1097167	PrimaryExpression	3		1097002	1					
ANR	1097168	AssignmentExpression	ca = wp [ 3 ]		1097002	1		=			
ANR	1097169	Identifier	ca		1097002	0					
ANR	1097170	ArrayIndexing	wp [ 3 ]		1097002	1					
ANR	1097171	Identifier	wp		1097002	0					
ANR	1097172	PrimaryExpression	3		1097002	1					
ANR	1097173	ExpressionStatement	n -= 4	317:5:10142:10148	1097002	4	True				
ANR	1097174	AssignmentExpression	n -= 4		1097002	0		-=			
ANR	1097175	Identifier	n		1097002	0					
ANR	1097176	PrimaryExpression	4		1097002	1					
ANR	1097177	WhileStatement	while ( n > 0 )		1097002	5					
ANR	1097178	Condition	n > 0	318:12:10162:10166	1097002	0	True				
ANR	1097179	RelationalExpression	n > 0		1097002	0		>			
ANR	1097180	Identifier	n		1097002	0					
ANR	1097181	PrimaryExpression	0		1097002	1					
ANR	1097182	CompoundStatement		21:19:500:500	1097002	1					
ANR	1097183	ExpressionStatement	wp += 4	319:2:10173:10180	1097002	0	True				
ANR	1097184	AssignmentExpression	wp += 4		1097002	0		+=			
ANR	1097185	Identifier	wp		1097002	0					
ANR	1097186	PrimaryExpression	4		1097002	1					
ANR	1097187	ExpressionStatement	op += 4	320:2:10184:10191	1097002	1	True				
ANR	1097188	AssignmentExpression	op += 4		1097002	0		+=			
ANR	1097189	Identifier	op		1097002	0					
ANR	1097190	PrimaryExpression	4		1097002	1					
ANR	1097191	ExpressionStatement	n -= 4	321:2:10195:10201	1097002	2	True				
ANR	1097192	AssignmentExpression	n -= 4		1097002	0		-=			
ANR	1097193	Identifier	n		1097002	0					
ANR	1097194	PrimaryExpression	4		1097002	1					
ANR	1097195	ExpressionStatement	op [ 0 ] = ( cr += wp [ 0 ] ) & mask	322:2:10205:10233	1097002	3	True				
ANR	1097196	AssignmentExpression	op [ 0 ] = ( cr += wp [ 0 ] ) & mask		1097002	0		=			
ANR	1097197	ArrayIndexing	op [ 0 ]		1097002	0					
ANR	1097198	Identifier	op		1097002	0					
ANR	1097199	PrimaryExpression	0		1097002	1					
ANR	1097200	BitAndExpression	( cr += wp [ 0 ] ) & mask		1097002	1		&			
ANR	1097201	AssignmentExpression	cr += wp [ 0 ]		1097002	0		+=			
ANR	1097202	Identifier	cr		1097002	0					
ANR	1097203	ArrayIndexing	wp [ 0 ]		1097002	1					
ANR	1097204	Identifier	wp		1097002	0					
ANR	1097205	PrimaryExpression	0		1097002	1					
ANR	1097206	Identifier	mask		1097002	1					
ANR	1097207	ExpressionStatement	op [ 1 ] = ( cg += wp [ 1 ] ) & mask	323:2:10237:10265	1097002	4	True				
ANR	1097208	AssignmentExpression	op [ 1 ] = ( cg += wp [ 1 ] ) & mask		1097002	0		=			
ANR	1097209	ArrayIndexing	op [ 1 ]		1097002	0					
ANR	1097210	Identifier	op		1097002	0					
ANR	1097211	PrimaryExpression	1		1097002	1					
ANR	1097212	BitAndExpression	( cg += wp [ 1 ] ) & mask		1097002	1		&			
ANR	1097213	AssignmentExpression	cg += wp [ 1 ]		1097002	0		+=			
ANR	1097214	Identifier	cg		1097002	0					
ANR	1097215	ArrayIndexing	wp [ 1 ]		1097002	1					
ANR	1097216	Identifier	wp		1097002	0					
ANR	1097217	PrimaryExpression	1		1097002	1					
ANR	1097218	Identifier	mask		1097002	1					
ANR	1097219	ExpressionStatement	op [ 2 ] = ( cb += wp [ 2 ] ) & mask	324:2:10269:10297	1097002	5	True				
ANR	1097220	AssignmentExpression	op [ 2 ] = ( cb += wp [ 2 ] ) & mask		1097002	0		=			
ANR	1097221	ArrayIndexing	op [ 2 ]		1097002	0					
ANR	1097222	Identifier	op		1097002	0					
ANR	1097223	PrimaryExpression	2		1097002	1					
ANR	1097224	BitAndExpression	( cb += wp [ 2 ] ) & mask		1097002	1		&			
ANR	1097225	AssignmentExpression	cb += wp [ 2 ]		1097002	0		+=			
ANR	1097226	Identifier	cb		1097002	0					
ANR	1097227	ArrayIndexing	wp [ 2 ]		1097002	1					
ANR	1097228	Identifier	wp		1097002	0					
ANR	1097229	PrimaryExpression	2		1097002	1					
ANR	1097230	Identifier	mask		1097002	1					
ANR	1097231	ExpressionStatement	op [ 3 ] = ( ca += wp [ 3 ] ) & mask	325:2:10301:10329	1097002	6	True				
ANR	1097232	AssignmentExpression	op [ 3 ] = ( ca += wp [ 3 ] ) & mask		1097002	0		=			
ANR	1097233	ArrayIndexing	op [ 3 ]		1097002	0					
ANR	1097234	Identifier	op		1097002	0					
ANR	1097235	PrimaryExpression	3		1097002	1					
ANR	1097236	BitAndExpression	( ca += wp [ 3 ] ) & mask		1097002	1		&			
ANR	1097237	AssignmentExpression	ca += wp [ 3 ]		1097002	0		+=			
ANR	1097238	Identifier	ca		1097002	0					
ANR	1097239	ArrayIndexing	wp [ 3 ]		1097002	1					
ANR	1097240	Identifier	wp		1097002	0					
ANR	1097241	PrimaryExpression	3		1097002	1					
ANR	1097242	Identifier	mask		1097002	1					
ANR	1097243	ElseStatement	else		1097002	0					
ANR	1097244	CompoundStatement		30:8:678:678	1097002	0					
ANR	1097245	Statement	REPEAT	328:5:10354:10359	1097002	0	True				
ANR	1097246	Statement	(	328:11:10360:10360	1097002	1	True				
ANR	1097247	ExpressionStatement	"stride , * op = * wp & mask"	328:12:10361:10383	1097002	2	True				
ANR	1097248	Expression	"stride , * op = * wp & mask"		1097002	0					
ANR	1097249	Identifier	stride		1097002	0					
ANR	1097250	AssignmentExpression	* op = * wp & mask		1097002	1		=			
ANR	1097251	UnaryOperationExpression	* op		1097002	0					
ANR	1097252	UnaryOperator	*		1097002	0					
ANR	1097253	Identifier	op		1097002	1					
ANR	1097254	BitAndExpression	* wp & mask		1097002	1		&			
ANR	1097255	UnaryOperationExpression	* wp		1097002	0					
ANR	1097256	UnaryOperator	*		1097002	0					
ANR	1097257	Identifier	wp		1097002	1					
ANR	1097258	Identifier	mask		1097002	1					
ANR	1097259	ExpressionStatement	wp ++	328:36:10385:10389	1097002	3	True				
ANR	1097260	PostIncDecOperationExpression	wp ++		1097002	0					
ANR	1097261	Identifier	wp		1097002	0					
ANR	1097262	IncDec	++		1097002	1					
ANR	1097263	Statement	op	328:42:10391:10392	1097002	4	True				
ANR	1097264	Statement	++	328:44:10393:10394	1097002	5	True				
ANR	1097265	Statement	)	328:46:10395:10395	1097002	6	True				
ANR	1097266	ExpressionStatement	n -= stride	329:5:10402:10413	1097002	7	True				
ANR	1097267	AssignmentExpression	n -= stride		1097002	0		-=			
ANR	1097268	Identifier	n		1097002	0					
ANR	1097269	Identifier	stride		1097002	1					
ANR	1097270	WhileStatement	while ( n > 0 )		1097002	8					
ANR	1097271	Condition	n > 0	330:12:10427:10431	1097002	0	True				
ANR	1097272	RelationalExpression	n > 0		1097002	0		>			
ANR	1097273	Identifier	n		1097002	0					
ANR	1097274	PrimaryExpression	0		1097002	1					
ANR	1097275	CompoundStatement		33:19:765:765	1097002	1					
ANR	1097276	Statement	REPEAT	331:2:10438:10443	1097002	0	True				
ANR	1097277	Statement	(	331:8:10444:10444	1097002	1	True				
ANR	1097278	ExpressionStatement	"stride , wp [ stride ] += * wp"	331:9:10445:10476	1097002	2	True				
ANR	1097279	Expression	"stride , wp [ stride ] += * wp"		1097002	0					
ANR	1097280	Identifier	stride		1097002	0					
ANR	1097281	AssignmentExpression	wp [ stride ] += * wp		1097002	1		+=			
ANR	1097282	ArrayIndexing	wp [ stride ]		1097002	0					
ANR	1097283	Identifier	wp		1097002	0					
ANR	1097284	Identifier	stride		1097002	1					
ANR	1097285	UnaryOperationExpression	* wp		1097002	1					
ANR	1097286	UnaryOperator	*		1097002	0					
ANR	1097287	Identifier	wp		1097002	1					
ANR	1097288	ExpressionStatement	* op = * wp & mask	332:25:10478:10492	1097002	3	True				
ANR	1097289	AssignmentExpression	* op = * wp & mask		1097002	0		=			
ANR	1097290	UnaryOperationExpression	* op		1097002	0					
ANR	1097291	UnaryOperator	*		1097002	0					
ANR	1097292	Identifier	op		1097002	1					
ANR	1097293	BitAndExpression	* wp & mask		1097002	1		&			
ANR	1097294	UnaryOperationExpression	* wp		1097002	0					
ANR	1097295	UnaryOperator	*		1097002	0					
ANR	1097296	Identifier	wp		1097002	1					
ANR	1097297	Identifier	mask		1097002	1					
ANR	1097298	ExpressionStatement	wp ++	332:41:10494:10498	1097002	4	True				
ANR	1097299	PostIncDecOperationExpression	wp ++		1097002	0					
ANR	1097300	Identifier	wp		1097002	0					
ANR	1097301	IncDec	++		1097002	1					
ANR	1097302	Statement	op	332:47:10500:10501	1097002	5	True				
ANR	1097303	Statement	++	332:49:10502:10503	1097002	6	True				
ANR	1097304	Statement	)	332:51:10504:10504	1097002	7	True				
ANR	1097305	ExpressionStatement	n -= stride	333:2:10508:10519	1097002	8	True				
ANR	1097306	AssignmentExpression	n -= stride		1097002	0		-=			
ANR	1097307	Identifier	n		1097002	0					
ANR	1097308	Identifier	stride		1097002	1					
ANR	1097309	ReturnType	static void		1097002	1					
ANR	1097310	Identifier	horizontalAccumulate11		1097002	2					
ANR	1097311	ParameterList	"uint16 * wp , int n , int stride , uint16 * op"		1097002	3					
ANR	1097312	Parameter	uint16 * wp	297:23:9625:9634	1097002	0	True				
ANR	1097313	ParameterType	uint16 *		1097002	0					
ANR	1097314	Identifier	wp		1097002	1					
ANR	1097315	Parameter	int n	297:35:9637:9641	1097002	1	True				
ANR	1097316	ParameterType	int		1097002	0					
ANR	1097317	Identifier	n		1097002	1					
ANR	1097318	Parameter	int stride	297:42:9644:9653	1097002	2	True				
ANR	1097319	ParameterType	int		1097002	0					
ANR	1097320	Identifier	stride		1097002	1					
ANR	1097321	Parameter	uint16 * op	297:54:9656:9665	1097002	3	True				
ANR	1097322	ParameterType	uint16 *		1097002	0					
ANR	1097323	Identifier	op		1097002	1					
ANR	1097324	CFGEntryNode	ENTRY		1097002		True				
ANR	1097325	CFGExitNode	EXIT		1097002		True				
ANR	1097326	Symbol	op		1097002						
ANR	1097327	Symbol	* stride		1097002						
ANR	1097328	Symbol	cg		1097002						
ANR	1097329	Symbol	* op		1097002						
ANR	1097330	Symbol	stride		1097002						
ANR	1097331	Symbol	n		1097002						
ANR	1097332	Symbol	cr		1097002						
ANR	1097333	Symbol	CODE_MASK		1097002						
ANR	1097334	Symbol	wp		1097002						
ANR	1097335	Symbol	* wp		1097002						
ANR	1097336	Symbol	ca		1097002						
ANR	1097337	Symbol	cb		1097002						
ANR	1097338	Symbol	mask		1097002						
ANR	1097339	Function	horizontalAccumulate8	339:0:10540:11774							
ANR	1097340	FunctionDef	"horizontalAccumulate8 (uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8)"		1097339	0					
ANR	1097341	CompoundStatement		342:0:10651:11774	1097339	0					
ANR	1097342	Statement	register	343:4:10657:10664	1097339	0	True				
ANR	1097343	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	343:13:10666:10700	1097339	1	True				
ANR	1097344	IdentifierDecl	cr		1097339	0					
ANR	1097345	IdentifierDeclType	unsigned int		1097339	0					
ANR	1097346	Identifier	cr		1097339	1					
ANR	1097347	IdentifierDecl	cg		1097339	1					
ANR	1097348	IdentifierDeclType	unsigned int		1097339	0					
ANR	1097349	Identifier	cg		1097339	1					
ANR	1097350	IdentifierDecl	cb		1097339	2					
ANR	1097351	IdentifierDeclType	unsigned int		1097339	0					
ANR	1097352	Identifier	cb		1097339	1					
ANR	1097353	IdentifierDecl	ca		1097339	3					
ANR	1097354	IdentifierDeclType	unsigned int		1097339	0					
ANR	1097355	Identifier	ca		1097339	1					
ANR	1097356	IdentifierDecl	mask		1097339	4					
ANR	1097357	IdentifierDeclType	unsigned int		1097339	0					
ANR	1097358	Identifier	mask		1097339	1					
ANR	1097359	IfStatement	if ( n >= stride )		1097339	2					
ANR	1097360	Condition	n >= stride	345:8:10711:10721	1097339	0	True				
ANR	1097361	RelationalExpression	n >= stride		1097339	0		>=			
ANR	1097362	Identifier	n		1097339	0					
ANR	1097363	Identifier	stride		1097339	1					
ANR	1097364	CompoundStatement		4:21:72:72	1097339	1					
ANR	1097365	ExpressionStatement	mask = CODE_MASK	346:1:10727:10743	1097339	0	True				
ANR	1097366	AssignmentExpression	mask = CODE_MASK		1097339	0		=			
ANR	1097367	Identifier	mask		1097339	0					
ANR	1097368	Identifier	CODE_MASK		1097339	1					
ANR	1097369	IfStatement	if ( stride == 3 )		1097339	1					
ANR	1097370	Condition	stride == 3	347:5:10750:10760	1097339	0	True				
ANR	1097371	EqualityExpression	stride == 3		1097339	0		==			
ANR	1097372	Identifier	stride		1097339	0					
ANR	1097373	PrimaryExpression	3		1097339	1					
ANR	1097374	CompoundStatement		6:18:111:111	1097339	1					
ANR	1097375	ExpressionStatement	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	348:5:10770:10808	1097339	0	True				
ANR	1097376	AssignmentExpression	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097339	0		=			
ANR	1097377	ArrayIndexing	op [ 0 ]		1097339	0					
ANR	1097378	Identifier	op		1097339	0					
ANR	1097379	PrimaryExpression	0		1097339	1					
ANR	1097380	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097339	1					
ANR	1097381	Identifier	ToLinear8		1097339	0					
ANR	1097382	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1097339	1		=			
ANR	1097383	Identifier	cr		1097339	0					
ANR	1097384	BitAndExpression	wp [ 0 ] & mask		1097339	1		&			
ANR	1097385	ArrayIndexing	wp [ 0 ]		1097339	0					
ANR	1097386	Identifier	wp		1097339	0					
ANR	1097387	PrimaryExpression	0		1097339	1					
ANR	1097388	Identifier	mask		1097339	1					
ANR	1097389	ExpressionStatement	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	349:5:10815:10853	1097339	1	True				
ANR	1097390	AssignmentExpression	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097339	0		=			
ANR	1097391	ArrayIndexing	op [ 1 ]		1097339	0					
ANR	1097392	Identifier	op		1097339	0					
ANR	1097393	PrimaryExpression	1		1097339	1					
ANR	1097394	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097339	1					
ANR	1097395	Identifier	ToLinear8		1097339	0					
ANR	1097396	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1097339	1		=			
ANR	1097397	Identifier	cg		1097339	0					
ANR	1097398	BitAndExpression	wp [ 1 ] & mask		1097339	1		&			
ANR	1097399	ArrayIndexing	wp [ 1 ]		1097339	0					
ANR	1097400	Identifier	wp		1097339	0					
ANR	1097401	PrimaryExpression	1		1097339	1					
ANR	1097402	Identifier	mask		1097339	1					
ANR	1097403	ExpressionStatement	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	350:5:10860:10898	1097339	2	True				
ANR	1097404	AssignmentExpression	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097339	0		=			
ANR	1097405	ArrayIndexing	op [ 2 ]		1097339	0					
ANR	1097406	Identifier	op		1097339	0					
ANR	1097407	PrimaryExpression	2		1097339	1					
ANR	1097408	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097339	1					
ANR	1097409	Identifier	ToLinear8		1097339	0					
ANR	1097410	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1097339	1		=			
ANR	1097411	Identifier	cb		1097339	0					
ANR	1097412	BitAndExpression	wp [ 2 ] & mask		1097339	1		&			
ANR	1097413	ArrayIndexing	wp [ 2 ]		1097339	0					
ANR	1097414	Identifier	wp		1097339	0					
ANR	1097415	PrimaryExpression	2		1097339	1					
ANR	1097416	Identifier	mask		1097339	1					
ANR	1097417	ExpressionStatement	n -= 3	351:5:10905:10911	1097339	3	True				
ANR	1097418	AssignmentExpression	n -= 3		1097339	0		-=			
ANR	1097419	Identifier	n		1097339	0					
ANR	1097420	PrimaryExpression	3		1097339	1					
ANR	1097421	WhileStatement	while ( n > 0 )		1097339	4					
ANR	1097422	Condition	n > 0	352:12:10925:10929	1097339	0	True				
ANR	1097423	RelationalExpression	n > 0		1097339	0		>			
ANR	1097424	Identifier	n		1097339	0					
ANR	1097425	PrimaryExpression	0		1097339	1					
ANR	1097426	CompoundStatement		11:19:280:280	1097339	1					
ANR	1097427	ExpressionStatement	n -= 3	353:2:10936:10942	1097339	0	True				
ANR	1097428	AssignmentExpression	n -= 3		1097339	0		-=			
ANR	1097429	Identifier	n		1097339	0					
ANR	1097430	PrimaryExpression	3		1097339	1					
ANR	1097431	ExpressionStatement	wp += 3	354:2:10946:10953	1097339	1	True				
ANR	1097432	AssignmentExpression	wp += 3		1097339	0		+=			
ANR	1097433	Identifier	wp		1097339	0					
ANR	1097434	PrimaryExpression	3		1097339	1					
ANR	1097435	ExpressionStatement	op += 3	355:2:10957:10964	1097339	2	True				
ANR	1097436	AssignmentExpression	op += 3		1097339	0		+=			
ANR	1097437	Identifier	op		1097339	0					
ANR	1097438	PrimaryExpression	3		1097339	1					
ANR	1097439	ExpressionStatement	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	356:2:10968:11007	1097339	3	True				
ANR	1097440	AssignmentExpression	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097339	0		=			
ANR	1097441	ArrayIndexing	op [ 0 ]		1097339	0					
ANR	1097442	Identifier	op		1097339	0					
ANR	1097443	PrimaryExpression	0		1097339	1					
ANR	1097444	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097339	1					
ANR	1097445	Identifier	ToLinear8		1097339	0					
ANR	1097446	BitAndExpression	( cr += wp [ 0 ] ) & mask		1097339	1		&			
ANR	1097447	AssignmentExpression	cr += wp [ 0 ]		1097339	0		+=			
ANR	1097448	Identifier	cr		1097339	0					
ANR	1097449	ArrayIndexing	wp [ 0 ]		1097339	1					
ANR	1097450	Identifier	wp		1097339	0					
ANR	1097451	PrimaryExpression	0		1097339	1					
ANR	1097452	Identifier	mask		1097339	1					
ANR	1097453	ExpressionStatement	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	357:2:11011:11050	1097339	4	True				
ANR	1097454	AssignmentExpression	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097339	0		=			
ANR	1097455	ArrayIndexing	op [ 1 ]		1097339	0					
ANR	1097456	Identifier	op		1097339	0					
ANR	1097457	PrimaryExpression	1		1097339	1					
ANR	1097458	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097339	1					
ANR	1097459	Identifier	ToLinear8		1097339	0					
ANR	1097460	BitAndExpression	( cg += wp [ 1 ] ) & mask		1097339	1		&			
ANR	1097461	AssignmentExpression	cg += wp [ 1 ]		1097339	0		+=			
ANR	1097462	Identifier	cg		1097339	0					
ANR	1097463	ArrayIndexing	wp [ 1 ]		1097339	1					
ANR	1097464	Identifier	wp		1097339	0					
ANR	1097465	PrimaryExpression	1		1097339	1					
ANR	1097466	Identifier	mask		1097339	1					
ANR	1097467	ExpressionStatement	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	358:2:11054:11093	1097339	5	True				
ANR	1097468	AssignmentExpression	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097339	0		=			
ANR	1097469	ArrayIndexing	op [ 2 ]		1097339	0					
ANR	1097470	Identifier	op		1097339	0					
ANR	1097471	PrimaryExpression	2		1097339	1					
ANR	1097472	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097339	1					
ANR	1097473	Identifier	ToLinear8		1097339	0					
ANR	1097474	BitAndExpression	( cb += wp [ 2 ] ) & mask		1097339	1		&			
ANR	1097475	AssignmentExpression	cb += wp [ 2 ]		1097339	0		+=			
ANR	1097476	Identifier	cb		1097339	0					
ANR	1097477	ArrayIndexing	wp [ 2 ]		1097339	1					
ANR	1097478	Identifier	wp		1097339	0					
ANR	1097479	PrimaryExpression	2		1097339	1					
ANR	1097480	Identifier	mask		1097339	1					
ANR	1097481	ElseStatement	else		1097339	0					
ANR	1097482	IfStatement	if ( stride == 4 )		1097339	0					
ANR	1097483	Condition	stride == 4	360:12:11114:11124	1097339	0	True				
ANR	1097484	EqualityExpression	stride == 4		1097339	0		==			
ANR	1097485	Identifier	stride		1097339	0					
ANR	1097486	PrimaryExpression	4		1097339	1					
ANR	1097487	CompoundStatement		19:25:475:475	1097339	1					
ANR	1097488	ExpressionStatement	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	361:5:11134:11172	1097339	0	True				
ANR	1097489	AssignmentExpression	op [ 0 ] = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097339	0		=			
ANR	1097490	ArrayIndexing	op [ 0 ]		1097339	0					
ANR	1097491	Identifier	op		1097339	0					
ANR	1097492	PrimaryExpression	0		1097339	1					
ANR	1097493	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097339	1					
ANR	1097494	Identifier	ToLinear8		1097339	0					
ANR	1097495	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1097339	1		=			
ANR	1097496	Identifier	cr		1097339	0					
ANR	1097497	BitAndExpression	wp [ 0 ] & mask		1097339	1		&			
ANR	1097498	ArrayIndexing	wp [ 0 ]		1097339	0					
ANR	1097499	Identifier	wp		1097339	0					
ANR	1097500	PrimaryExpression	0		1097339	1					
ANR	1097501	Identifier	mask		1097339	1					
ANR	1097502	ExpressionStatement	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	362:5:11179:11217	1097339	1	True				
ANR	1097503	AssignmentExpression	op [ 1 ] = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097339	0		=			
ANR	1097504	ArrayIndexing	op [ 1 ]		1097339	0					
ANR	1097505	Identifier	op		1097339	0					
ANR	1097506	PrimaryExpression	1		1097339	1					
ANR	1097507	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097339	1					
ANR	1097508	Identifier	ToLinear8		1097339	0					
ANR	1097509	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1097339	1		=			
ANR	1097510	Identifier	cg		1097339	0					
ANR	1097511	BitAndExpression	wp [ 1 ] & mask		1097339	1		&			
ANR	1097512	ArrayIndexing	wp [ 1 ]		1097339	0					
ANR	1097513	Identifier	wp		1097339	0					
ANR	1097514	PrimaryExpression	1		1097339	1					
ANR	1097515	Identifier	mask		1097339	1					
ANR	1097516	ExpressionStatement	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	363:5:11224:11262	1097339	2	True				
ANR	1097517	AssignmentExpression	op [ 2 ] = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097339	0		=			
ANR	1097518	ArrayIndexing	op [ 2 ]		1097339	0					
ANR	1097519	Identifier	op		1097339	0					
ANR	1097520	PrimaryExpression	2		1097339	1					
ANR	1097521	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097339	1					
ANR	1097522	Identifier	ToLinear8		1097339	0					
ANR	1097523	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1097339	1		=			
ANR	1097524	Identifier	cb		1097339	0					
ANR	1097525	BitAndExpression	wp [ 2 ] & mask		1097339	1		&			
ANR	1097526	ArrayIndexing	wp [ 2 ]		1097339	0					
ANR	1097527	Identifier	wp		1097339	0					
ANR	1097528	PrimaryExpression	2		1097339	1					
ANR	1097529	Identifier	mask		1097339	1					
ANR	1097530	ExpressionStatement	op [ 3 ] = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]	364:5:11269:11307	1097339	3	True				
ANR	1097531	AssignmentExpression	op [ 3 ] = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		1097339	0		=			
ANR	1097532	ArrayIndexing	op [ 3 ]		1097339	0					
ANR	1097533	Identifier	op		1097339	0					
ANR	1097534	PrimaryExpression	3		1097339	1					
ANR	1097535	ArrayIndexing	ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		1097339	1					
ANR	1097536	Identifier	ToLinear8		1097339	0					
ANR	1097537	AssignmentExpression	ca = ( wp [ 3 ] & mask )		1097339	1		=			
ANR	1097538	Identifier	ca		1097339	0					
ANR	1097539	BitAndExpression	wp [ 3 ] & mask		1097339	1		&			
ANR	1097540	ArrayIndexing	wp [ 3 ]		1097339	0					
ANR	1097541	Identifier	wp		1097339	0					
ANR	1097542	PrimaryExpression	3		1097339	1					
ANR	1097543	Identifier	mask		1097339	1					
ANR	1097544	ExpressionStatement	n -= 4	365:5:11314:11320	1097339	4	True				
ANR	1097545	AssignmentExpression	n -= 4		1097339	0		-=			
ANR	1097546	Identifier	n		1097339	0					
ANR	1097547	PrimaryExpression	4		1097339	1					
ANR	1097548	WhileStatement	while ( n > 0 )		1097339	5					
ANR	1097549	Condition	n > 0	366:12:11334:11338	1097339	0	True				
ANR	1097550	RelationalExpression	n > 0		1097339	0		>			
ANR	1097551	Identifier	n		1097339	0					
ANR	1097552	PrimaryExpression	0		1097339	1					
ANR	1097553	CompoundStatement		25:19:689:689	1097339	1					
ANR	1097554	ExpressionStatement	n -= 4	367:2:11345:11351	1097339	0	True				
ANR	1097555	AssignmentExpression	n -= 4		1097339	0		-=			
ANR	1097556	Identifier	n		1097339	0					
ANR	1097557	PrimaryExpression	4		1097339	1					
ANR	1097558	ExpressionStatement	wp += 4	368:2:11355:11362	1097339	1	True				
ANR	1097559	AssignmentExpression	wp += 4		1097339	0		+=			
ANR	1097560	Identifier	wp		1097339	0					
ANR	1097561	PrimaryExpression	4		1097339	1					
ANR	1097562	ExpressionStatement	op += 4	369:2:11366:11373	1097339	2	True				
ANR	1097563	AssignmentExpression	op += 4		1097339	0		+=			
ANR	1097564	Identifier	op		1097339	0					
ANR	1097565	PrimaryExpression	4		1097339	1					
ANR	1097566	ExpressionStatement	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	370:2:11377:11416	1097339	3	True				
ANR	1097567	AssignmentExpression	op [ 0 ] = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097339	0		=			
ANR	1097568	ArrayIndexing	op [ 0 ]		1097339	0					
ANR	1097569	Identifier	op		1097339	0					
ANR	1097570	PrimaryExpression	0		1097339	1					
ANR	1097571	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097339	1					
ANR	1097572	Identifier	ToLinear8		1097339	0					
ANR	1097573	BitAndExpression	( cr += wp [ 0 ] ) & mask		1097339	1		&			
ANR	1097574	AssignmentExpression	cr += wp [ 0 ]		1097339	0		+=			
ANR	1097575	Identifier	cr		1097339	0					
ANR	1097576	ArrayIndexing	wp [ 0 ]		1097339	1					
ANR	1097577	Identifier	wp		1097339	0					
ANR	1097578	PrimaryExpression	0		1097339	1					
ANR	1097579	Identifier	mask		1097339	1					
ANR	1097580	ExpressionStatement	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	371:2:11420:11459	1097339	4	True				
ANR	1097581	AssignmentExpression	op [ 1 ] = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097339	0		=			
ANR	1097582	ArrayIndexing	op [ 1 ]		1097339	0					
ANR	1097583	Identifier	op		1097339	0					
ANR	1097584	PrimaryExpression	1		1097339	1					
ANR	1097585	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097339	1					
ANR	1097586	Identifier	ToLinear8		1097339	0					
ANR	1097587	BitAndExpression	( cg += wp [ 1 ] ) & mask		1097339	1		&			
ANR	1097588	AssignmentExpression	cg += wp [ 1 ]		1097339	0		+=			
ANR	1097589	Identifier	cg		1097339	0					
ANR	1097590	ArrayIndexing	wp [ 1 ]		1097339	1					
ANR	1097591	Identifier	wp		1097339	0					
ANR	1097592	PrimaryExpression	1		1097339	1					
ANR	1097593	Identifier	mask		1097339	1					
ANR	1097594	ExpressionStatement	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	372:2:11463:11502	1097339	5	True				
ANR	1097595	AssignmentExpression	op [ 2 ] = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097339	0		=			
ANR	1097596	ArrayIndexing	op [ 2 ]		1097339	0					
ANR	1097597	Identifier	op		1097339	0					
ANR	1097598	PrimaryExpression	2		1097339	1					
ANR	1097599	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097339	1					
ANR	1097600	Identifier	ToLinear8		1097339	0					
ANR	1097601	BitAndExpression	( cb += wp [ 2 ] ) & mask		1097339	1		&			
ANR	1097602	AssignmentExpression	cb += wp [ 2 ]		1097339	0		+=			
ANR	1097603	Identifier	cb		1097339	0					
ANR	1097604	ArrayIndexing	wp [ 2 ]		1097339	1					
ANR	1097605	Identifier	wp		1097339	0					
ANR	1097606	PrimaryExpression	2		1097339	1					
ANR	1097607	Identifier	mask		1097339	1					
ANR	1097608	ExpressionStatement	op [ 3 ] = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]	373:2:11506:11545	1097339	6	True				
ANR	1097609	AssignmentExpression	op [ 3 ] = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		1097339	0		=			
ANR	1097610	ArrayIndexing	op [ 3 ]		1097339	0					
ANR	1097611	Identifier	op		1097339	0					
ANR	1097612	PrimaryExpression	3		1097339	1					
ANR	1097613	ArrayIndexing	ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		1097339	1					
ANR	1097614	Identifier	ToLinear8		1097339	0					
ANR	1097615	BitAndExpression	( ca += wp [ 3 ] ) & mask		1097339	1		&			
ANR	1097616	AssignmentExpression	ca += wp [ 3 ]		1097339	0		+=			
ANR	1097617	Identifier	ca		1097339	0					
ANR	1097618	ArrayIndexing	wp [ 3 ]		1097339	1					
ANR	1097619	Identifier	wp		1097339	0					
ANR	1097620	PrimaryExpression	3		1097339	1					
ANR	1097621	Identifier	mask		1097339	1					
ANR	1097622	ElseStatement	else		1097339	0					
ANR	1097623	CompoundStatement		34:8:910:910	1097339	0					
ANR	1097624	Statement	REPEAT	376:5:11569:11574	1097339	0	True				
ANR	1097625	Statement	(	376:11:11575:11575	1097339	1	True				
ANR	1097626	ExpressionStatement	"stride , * op = ToLinear8 [ * wp & mask ]"	376:12:11576:11609	1097339	2	True				
ANR	1097627	Expression	"stride , * op = ToLinear8 [ * wp & mask ]"		1097339	0					
ANR	1097628	Identifier	stride		1097339	0					
ANR	1097629	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		1097339	1		=			
ANR	1097630	UnaryOperationExpression	* op		1097339	0					
ANR	1097631	UnaryOperator	*		1097339	0					
ANR	1097632	Identifier	op		1097339	1					
ANR	1097633	ArrayIndexing	ToLinear8 [ * wp & mask ]		1097339	1					
ANR	1097634	Identifier	ToLinear8		1097339	0					
ANR	1097635	BitAndExpression	* wp & mask		1097339	1		&			
ANR	1097636	UnaryOperationExpression	* wp		1097339	0					
ANR	1097637	UnaryOperator	*		1097339	0					
ANR	1097638	Identifier	wp		1097339	1					
ANR	1097639	Identifier	mask		1097339	1					
ANR	1097640	ExpressionStatement	wp ++	376:47:11611:11615	1097339	3	True				
ANR	1097641	PostIncDecOperationExpression	wp ++		1097339	0					
ANR	1097642	Identifier	wp		1097339	0					
ANR	1097643	IncDec	++		1097339	1					
ANR	1097644	Statement	op	376:53:11617:11618	1097339	4	True				
ANR	1097645	Statement	++	376:55:11619:11620	1097339	5	True				
ANR	1097646	Statement	)	376:57:11621:11621	1097339	6	True				
ANR	1097647	ExpressionStatement	n -= stride	377:5:11628:11639	1097339	7	True				
ANR	1097648	AssignmentExpression	n -= stride		1097339	0		-=			
ANR	1097649	Identifier	n		1097339	0					
ANR	1097650	Identifier	stride		1097339	1					
ANR	1097651	WhileStatement	while ( n > 0 )		1097339	8					
ANR	1097652	Condition	n > 0	378:12:11653:11657	1097339	0	True				
ANR	1097653	RelationalExpression	n > 0		1097339	0		>			
ANR	1097654	Identifier	n		1097339	0					
ANR	1097655	PrimaryExpression	0		1097339	1					
ANR	1097656	CompoundStatement		37:19:1008:1008	1097339	1					
ANR	1097657	Statement	REPEAT	379:2:11664:11669	1097339	0	True				
ANR	1097658	Statement	(	379:8:11670:11670	1097339	1	True				
ANR	1097659	ExpressionStatement	"stride , wp [ stride ] += * wp"	379:9:11671:11702	1097339	2	True				
ANR	1097660	Expression	"stride , wp [ stride ] += * wp"		1097339	0					
ANR	1097661	Identifier	stride		1097339	0					
ANR	1097662	AssignmentExpression	wp [ stride ] += * wp		1097339	1		+=			
ANR	1097663	ArrayIndexing	wp [ stride ]		1097339	0					
ANR	1097664	Identifier	wp		1097339	0					
ANR	1097665	Identifier	stride		1097339	1					
ANR	1097666	UnaryOperationExpression	* wp		1097339	1					
ANR	1097667	UnaryOperator	*		1097339	0					
ANR	1097668	Identifier	wp		1097339	1					
ANR	1097669	ExpressionStatement	* op = ToLinear8 [ * wp & mask ]	380:25:11704:11729	1097339	3	True				
ANR	1097670	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		1097339	0		=			
ANR	1097671	UnaryOperationExpression	* op		1097339	0					
ANR	1097672	UnaryOperator	*		1097339	0					
ANR	1097673	Identifier	op		1097339	1					
ANR	1097674	ArrayIndexing	ToLinear8 [ * wp & mask ]		1097339	1					
ANR	1097675	Identifier	ToLinear8		1097339	0					
ANR	1097676	BitAndExpression	* wp & mask		1097339	1		&			
ANR	1097677	UnaryOperationExpression	* wp		1097339	0					
ANR	1097678	UnaryOperator	*		1097339	0					
ANR	1097679	Identifier	wp		1097339	1					
ANR	1097680	Identifier	mask		1097339	1					
ANR	1097681	ExpressionStatement	wp ++	380:52:11731:11735	1097339	4	True				
ANR	1097682	PostIncDecOperationExpression	wp ++		1097339	0					
ANR	1097683	Identifier	wp		1097339	0					
ANR	1097684	IncDec	++		1097339	1					
ANR	1097685	Statement	op	380:58:11737:11738	1097339	5	True				
ANR	1097686	Statement	++	380:60:11739:11740	1097339	6	True				
ANR	1097687	Statement	)	380:62:11741:11741	1097339	7	True				
ANR	1097688	ExpressionStatement	n -= stride	381:2:11745:11756	1097339	8	True				
ANR	1097689	AssignmentExpression	n -= stride		1097339	0		-=			
ANR	1097690	Identifier	n		1097339	0					
ANR	1097691	Identifier	stride		1097339	1					
ANR	1097692	ReturnType	static void		1097339	1					
ANR	1097693	Identifier	horizontalAccumulate8		1097339	2					
ANR	1097694	ParameterList	"uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8"		1097339	3					
ANR	1097695	Parameter	uint16 * wp	340:22:10574:10583	1097339	0	True				
ANR	1097696	ParameterType	uint16 *		1097339	0					
ANR	1097697	Identifier	wp		1097339	1					
ANR	1097698	Parameter	int n	340:34:10586:10590	1097339	1	True				
ANR	1097699	ParameterType	int		1097339	0					
ANR	1097700	Identifier	n		1097339	1					
ANR	1097701	Parameter	int stride	340:41:10593:10602	1097339	2	True				
ANR	1097702	ParameterType	int		1097339	0					
ANR	1097703	Identifier	stride		1097339	1					
ANR	1097704	Parameter	unsigned char * op	340:53:10605:10621	1097339	3	True				
ANR	1097705	ParameterType	unsigned char *		1097339	0					
ANR	1097706	Identifier	op		1097339	1					
ANR	1097707	Parameter	unsigned char * ToLinear8	341:1:10625:10648	1097339	4	True				
ANR	1097708	ParameterType	unsigned char *		1097339	0					
ANR	1097709	Identifier	ToLinear8		1097339	1					
ANR	1097710	CFGEntryNode	ENTRY		1097339		True				
ANR	1097711	CFGExitNode	EXIT		1097339		True				
ANR	1097712	Symbol	op		1097339						
ANR	1097713	Symbol	* stride		1097339						
ANR	1097714	Symbol	ToLinear8		1097339						
ANR	1097715	Symbol	* mask		1097339						
ANR	1097716	Symbol	cg		1097339						
ANR	1097717	Symbol	* op		1097339						
ANR	1097718	Symbol	* * wp		1097339						
ANR	1097719	Symbol	stride		1097339						
ANR	1097720	Symbol	* ToLinear8		1097339						
ANR	1097721	Symbol	n		1097339						
ANR	1097722	Symbol	cr		1097339						
ANR	1097723	Symbol	CODE_MASK		1097339						
ANR	1097724	Symbol	wp		1097339						
ANR	1097725	Symbol	* wp		1097339						
ANR	1097726	Symbol	ca		1097339						
ANR	1097727	Symbol	mask		1097339						
ANR	1097728	Symbol	cb		1097339						
ANR	1097729	Function	horizontalAccumulate8abgr	388:0:11778:13264							
ANR	1097730	FunctionDef	"horizontalAccumulate8abgr (uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8)"		1097729	0					
ANR	1097731	CompoundStatement		391:0:11893:13264	1097729	0					
ANR	1097732	Statement	register	392:4:11899:11906	1097729	0	True				
ANR	1097733	IdentifierDeclStatement	"unsigned int cr , cg , cb , ca , mask ;"	392:13:11908:11942	1097729	1	True				
ANR	1097734	IdentifierDecl	cr		1097729	0					
ANR	1097735	IdentifierDeclType	unsigned int		1097729	0					
ANR	1097736	Identifier	cr		1097729	1					
ANR	1097737	IdentifierDecl	cg		1097729	1					
ANR	1097738	IdentifierDeclType	unsigned int		1097729	0					
ANR	1097739	Identifier	cg		1097729	1					
ANR	1097740	IdentifierDecl	cb		1097729	2					
ANR	1097741	IdentifierDeclType	unsigned int		1097729	0					
ANR	1097742	Identifier	cb		1097729	1					
ANR	1097743	IdentifierDecl	ca		1097729	3					
ANR	1097744	IdentifierDeclType	unsigned int		1097729	0					
ANR	1097745	Identifier	ca		1097729	1					
ANR	1097746	IdentifierDecl	mask		1097729	4					
ANR	1097747	IdentifierDeclType	unsigned int		1097729	0					
ANR	1097748	Identifier	mask		1097729	1					
ANR	1097749	Statement	register	393:4:11948:11955	1097729	2	True				
ANR	1097750	IdentifierDeclStatement	"unsigned char t0 , t1 , t2 , t3 ;"	393:13:11957:11986	1097729	3	True				
ANR	1097751	IdentifierDecl	t0		1097729	0					
ANR	1097752	IdentifierDeclType	unsigned char		1097729	0					
ANR	1097753	Identifier	t0		1097729	1					
ANR	1097754	IdentifierDecl	t1		1097729	1					
ANR	1097755	IdentifierDeclType	unsigned char		1097729	0					
ANR	1097756	Identifier	t1		1097729	1					
ANR	1097757	IdentifierDecl	t2		1097729	2					
ANR	1097758	IdentifierDeclType	unsigned char		1097729	0					
ANR	1097759	Identifier	t2		1097729	1					
ANR	1097760	IdentifierDecl	t3		1097729	3					
ANR	1097761	IdentifierDeclType	unsigned char		1097729	0					
ANR	1097762	Identifier	t3		1097729	1					
ANR	1097763	IfStatement	if ( n >= stride )		1097729	4					
ANR	1097764	Condition	n >= stride	395:8:11997:12007	1097729	0	True				
ANR	1097765	RelationalExpression	n >= stride		1097729	0		>=			
ANR	1097766	Identifier	n		1097729	0					
ANR	1097767	Identifier	stride		1097729	1					
ANR	1097768	CompoundStatement		5:21:116:116	1097729	1					
ANR	1097769	ExpressionStatement	mask = CODE_MASK	396:1:12013:12029	1097729	0	True				
ANR	1097770	AssignmentExpression	mask = CODE_MASK		1097729	0		=			
ANR	1097771	Identifier	mask		1097729	0					
ANR	1097772	Identifier	CODE_MASK		1097729	1					
ANR	1097773	IfStatement	if ( stride == 3 )		1097729	1					
ANR	1097774	Condition	stride == 3	397:5:12036:12046	1097729	0	True				
ANR	1097775	EqualityExpression	stride == 3		1097729	0		==			
ANR	1097776	Identifier	stride		1097729	0					
ANR	1097777	PrimaryExpression	3		1097729	1					
ANR	1097778	CompoundStatement		7:18:155:155	1097729	1					
ANR	1097779	ExpressionStatement	op [ 0 ] = 0	398:5:12056:12065	1097729	0	True				
ANR	1097780	AssignmentExpression	op [ 0 ] = 0		1097729	0		=			
ANR	1097781	ArrayIndexing	op [ 0 ]		1097729	0					
ANR	1097782	Identifier	op		1097729	0					
ANR	1097783	PrimaryExpression	0		1097729	1					
ANR	1097784	PrimaryExpression	0		1097729	1					
ANR	1097785	ExpressionStatement	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	399:5:12072:12107	1097729	1	True				
ANR	1097786	AssignmentExpression	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097729	0		=			
ANR	1097787	Identifier	t1		1097729	0					
ANR	1097788	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097729	1					
ANR	1097789	Identifier	ToLinear8		1097729	0					
ANR	1097790	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1097729	1		=			
ANR	1097791	Identifier	cb		1097729	0					
ANR	1097792	BitAndExpression	wp [ 2 ] & mask		1097729	1		&			
ANR	1097793	ArrayIndexing	wp [ 2 ]		1097729	0					
ANR	1097794	Identifier	wp		1097729	0					
ANR	1097795	PrimaryExpression	2		1097729	1					
ANR	1097796	Identifier	mask		1097729	1					
ANR	1097797	ExpressionStatement	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	400:5:12114:12149	1097729	2	True				
ANR	1097798	AssignmentExpression	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097729	0		=			
ANR	1097799	Identifier	t2		1097729	0					
ANR	1097800	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097729	1					
ANR	1097801	Identifier	ToLinear8		1097729	0					
ANR	1097802	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1097729	1		=			
ANR	1097803	Identifier	cg		1097729	0					
ANR	1097804	BitAndExpression	wp [ 1 ] & mask		1097729	1		&			
ANR	1097805	ArrayIndexing	wp [ 1 ]		1097729	0					
ANR	1097806	Identifier	wp		1097729	0					
ANR	1097807	PrimaryExpression	1		1097729	1					
ANR	1097808	Identifier	mask		1097729	1					
ANR	1097809	ExpressionStatement	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	401:5:12156:12191	1097729	3	True				
ANR	1097810	AssignmentExpression	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097729	0		=			
ANR	1097811	Identifier	t3		1097729	0					
ANR	1097812	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097729	1					
ANR	1097813	Identifier	ToLinear8		1097729	0					
ANR	1097814	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1097729	1		=			
ANR	1097815	Identifier	cr		1097729	0					
ANR	1097816	BitAndExpression	wp [ 0 ] & mask		1097729	1		&			
ANR	1097817	ArrayIndexing	wp [ 0 ]		1097729	0					
ANR	1097818	Identifier	wp		1097729	0					
ANR	1097819	PrimaryExpression	0		1097729	1					
ANR	1097820	Identifier	mask		1097729	1					
ANR	1097821	ExpressionStatement	op [ 1 ] = t1	402:5:12198:12208	1097729	4	True				
ANR	1097822	AssignmentExpression	op [ 1 ] = t1		1097729	0		=			
ANR	1097823	ArrayIndexing	op [ 1 ]		1097729	0					
ANR	1097824	Identifier	op		1097729	0					
ANR	1097825	PrimaryExpression	1		1097729	1					
ANR	1097826	Identifier	t1		1097729	1					
ANR	1097827	ExpressionStatement	op [ 2 ] = t2	403:5:12215:12225	1097729	5	True				
ANR	1097828	AssignmentExpression	op [ 2 ] = t2		1097729	0		=			
ANR	1097829	ArrayIndexing	op [ 2 ]		1097729	0					
ANR	1097830	Identifier	op		1097729	0					
ANR	1097831	PrimaryExpression	2		1097729	1					
ANR	1097832	Identifier	t2		1097729	1					
ANR	1097833	ExpressionStatement	op [ 3 ] = t3	404:5:12232:12242	1097729	6	True				
ANR	1097834	AssignmentExpression	op [ 3 ] = t3		1097729	0		=			
ANR	1097835	ArrayIndexing	op [ 3 ]		1097729	0					
ANR	1097836	Identifier	op		1097729	0					
ANR	1097837	PrimaryExpression	3		1097729	1					
ANR	1097838	Identifier	t3		1097729	1					
ANR	1097839	ExpressionStatement	n -= 3	405:5:12249:12255	1097729	7	True				
ANR	1097840	AssignmentExpression	n -= 3		1097729	0		-=			
ANR	1097841	Identifier	n		1097729	0					
ANR	1097842	PrimaryExpression	3		1097729	1					
ANR	1097843	WhileStatement	while ( n > 0 )		1097729	8					
ANR	1097844	Condition	n > 0	406:12:12269:12273	1097729	0	True				
ANR	1097845	RelationalExpression	n > 0		1097729	0		>			
ANR	1097846	Identifier	n		1097729	0					
ANR	1097847	PrimaryExpression	0		1097729	1					
ANR	1097848	CompoundStatement		16:19:382:382	1097729	1					
ANR	1097849	ExpressionStatement	n -= 3	407:2:12280:12286	1097729	0	True				
ANR	1097850	AssignmentExpression	n -= 3		1097729	0		-=			
ANR	1097851	Identifier	n		1097729	0					
ANR	1097852	PrimaryExpression	3		1097729	1					
ANR	1097853	ExpressionStatement	wp += 3	408:2:12290:12297	1097729	1	True				
ANR	1097854	AssignmentExpression	wp += 3		1097729	0		+=			
ANR	1097855	Identifier	wp		1097729	0					
ANR	1097856	PrimaryExpression	3		1097729	1					
ANR	1097857	ExpressionStatement	op += 4	409:2:12301:12308	1097729	2	True				
ANR	1097858	AssignmentExpression	op += 4		1097729	0		+=			
ANR	1097859	Identifier	op		1097729	0					
ANR	1097860	PrimaryExpression	4		1097729	1					
ANR	1097861	ExpressionStatement	op [ 0 ] = 0	410:2:12312:12321	1097729	3	True				
ANR	1097862	AssignmentExpression	op [ 0 ] = 0		1097729	0		=			
ANR	1097863	ArrayIndexing	op [ 0 ]		1097729	0					
ANR	1097864	Identifier	op		1097729	0					
ANR	1097865	PrimaryExpression	0		1097729	1					
ANR	1097866	PrimaryExpression	0		1097729	1					
ANR	1097867	ExpressionStatement	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	411:2:12325:12361	1097729	4	True				
ANR	1097868	AssignmentExpression	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097729	0		=			
ANR	1097869	Identifier	t1		1097729	0					
ANR	1097870	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097729	1					
ANR	1097871	Identifier	ToLinear8		1097729	0					
ANR	1097872	BitAndExpression	( cb += wp [ 2 ] ) & mask		1097729	1		&			
ANR	1097873	AssignmentExpression	cb += wp [ 2 ]		1097729	0		+=			
ANR	1097874	Identifier	cb		1097729	0					
ANR	1097875	ArrayIndexing	wp [ 2 ]		1097729	1					
ANR	1097876	Identifier	wp		1097729	0					
ANR	1097877	PrimaryExpression	2		1097729	1					
ANR	1097878	Identifier	mask		1097729	1					
ANR	1097879	ExpressionStatement	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	412:2:12365:12401	1097729	5	True				
ANR	1097880	AssignmentExpression	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097729	0		=			
ANR	1097881	Identifier	t2		1097729	0					
ANR	1097882	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097729	1					
ANR	1097883	Identifier	ToLinear8		1097729	0					
ANR	1097884	BitAndExpression	( cg += wp [ 1 ] ) & mask		1097729	1		&			
ANR	1097885	AssignmentExpression	cg += wp [ 1 ]		1097729	0		+=			
ANR	1097886	Identifier	cg		1097729	0					
ANR	1097887	ArrayIndexing	wp [ 1 ]		1097729	1					
ANR	1097888	Identifier	wp		1097729	0					
ANR	1097889	PrimaryExpression	1		1097729	1					
ANR	1097890	Identifier	mask		1097729	1					
ANR	1097891	ExpressionStatement	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	413:2:12405:12441	1097729	6	True				
ANR	1097892	AssignmentExpression	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097729	0		=			
ANR	1097893	Identifier	t3		1097729	0					
ANR	1097894	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097729	1					
ANR	1097895	Identifier	ToLinear8		1097729	0					
ANR	1097896	BitAndExpression	( cr += wp [ 0 ] ) & mask		1097729	1		&			
ANR	1097897	AssignmentExpression	cr += wp [ 0 ]		1097729	0		+=			
ANR	1097898	Identifier	cr		1097729	0					
ANR	1097899	ArrayIndexing	wp [ 0 ]		1097729	1					
ANR	1097900	Identifier	wp		1097729	0					
ANR	1097901	PrimaryExpression	0		1097729	1					
ANR	1097902	Identifier	mask		1097729	1					
ANR	1097903	ExpressionStatement	op [ 1 ] = t1	414:2:12445:12455	1097729	7	True				
ANR	1097904	AssignmentExpression	op [ 1 ] = t1		1097729	0		=			
ANR	1097905	ArrayIndexing	op [ 1 ]		1097729	0					
ANR	1097906	Identifier	op		1097729	0					
ANR	1097907	PrimaryExpression	1		1097729	1					
ANR	1097908	Identifier	t1		1097729	1					
ANR	1097909	ExpressionStatement	op [ 2 ] = t2	415:2:12459:12469	1097729	8	True				
ANR	1097910	AssignmentExpression	op [ 2 ] = t2		1097729	0		=			
ANR	1097911	ArrayIndexing	op [ 2 ]		1097729	0					
ANR	1097912	Identifier	op		1097729	0					
ANR	1097913	PrimaryExpression	2		1097729	1					
ANR	1097914	Identifier	t2		1097729	1					
ANR	1097915	ExpressionStatement	op [ 3 ] = t3	416:2:12473:12483	1097729	9	True				
ANR	1097916	AssignmentExpression	op [ 3 ] = t3		1097729	0		=			
ANR	1097917	ArrayIndexing	op [ 3 ]		1097729	0					
ANR	1097918	Identifier	op		1097729	0					
ANR	1097919	PrimaryExpression	3		1097729	1					
ANR	1097920	Identifier	t3		1097729	1					
ANR	1097921	ElseStatement	else		1097729	0					
ANR	1097922	IfStatement	if ( stride == 4 )		1097729	0					
ANR	1097923	Condition	stride == 4	418:12:12504:12514	1097729	0	True				
ANR	1097924	EqualityExpression	stride == 4		1097729	0		==			
ANR	1097925	Identifier	stride		1097729	0					
ANR	1097926	PrimaryExpression	4		1097729	1					
ANR	1097927	CompoundStatement		28:25:623:623	1097729	1					
ANR	1097928	ExpressionStatement	t0 = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]	419:5:12524:12559	1097729	0	True				
ANR	1097929	AssignmentExpression	t0 = ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		1097729	0		=			
ANR	1097930	Identifier	t0		1097729	0					
ANR	1097931	ArrayIndexing	ToLinear8 [ ca = ( wp [ 3 ] & mask ) ]		1097729	1					
ANR	1097932	Identifier	ToLinear8		1097729	0					
ANR	1097933	AssignmentExpression	ca = ( wp [ 3 ] & mask )		1097729	1		=			
ANR	1097934	Identifier	ca		1097729	0					
ANR	1097935	BitAndExpression	wp [ 3 ] & mask		1097729	1		&			
ANR	1097936	ArrayIndexing	wp [ 3 ]		1097729	0					
ANR	1097937	Identifier	wp		1097729	0					
ANR	1097938	PrimaryExpression	3		1097729	1					
ANR	1097939	Identifier	mask		1097729	1					
ANR	1097940	ExpressionStatement	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]	420:5:12566:12601	1097729	1	True				
ANR	1097941	AssignmentExpression	t1 = ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097729	0		=			
ANR	1097942	Identifier	t1		1097729	0					
ANR	1097943	ArrayIndexing	ToLinear8 [ cb = ( wp [ 2 ] & mask ) ]		1097729	1					
ANR	1097944	Identifier	ToLinear8		1097729	0					
ANR	1097945	AssignmentExpression	cb = ( wp [ 2 ] & mask )		1097729	1		=			
ANR	1097946	Identifier	cb		1097729	0					
ANR	1097947	BitAndExpression	wp [ 2 ] & mask		1097729	1		&			
ANR	1097948	ArrayIndexing	wp [ 2 ]		1097729	0					
ANR	1097949	Identifier	wp		1097729	0					
ANR	1097950	PrimaryExpression	2		1097729	1					
ANR	1097951	Identifier	mask		1097729	1					
ANR	1097952	ExpressionStatement	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]	421:5:12608:12643	1097729	2	True				
ANR	1097953	AssignmentExpression	t2 = ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097729	0		=			
ANR	1097954	Identifier	t2		1097729	0					
ANR	1097955	ArrayIndexing	ToLinear8 [ cg = ( wp [ 1 ] & mask ) ]		1097729	1					
ANR	1097956	Identifier	ToLinear8		1097729	0					
ANR	1097957	AssignmentExpression	cg = ( wp [ 1 ] & mask )		1097729	1		=			
ANR	1097958	Identifier	cg		1097729	0					
ANR	1097959	BitAndExpression	wp [ 1 ] & mask		1097729	1		&			
ANR	1097960	ArrayIndexing	wp [ 1 ]		1097729	0					
ANR	1097961	Identifier	wp		1097729	0					
ANR	1097962	PrimaryExpression	1		1097729	1					
ANR	1097963	Identifier	mask		1097729	1					
ANR	1097964	ExpressionStatement	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]	422:5:12650:12685	1097729	3	True				
ANR	1097965	AssignmentExpression	t3 = ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097729	0		=			
ANR	1097966	Identifier	t3		1097729	0					
ANR	1097967	ArrayIndexing	ToLinear8 [ cr = ( wp [ 0 ] & mask ) ]		1097729	1					
ANR	1097968	Identifier	ToLinear8		1097729	0					
ANR	1097969	AssignmentExpression	cr = ( wp [ 0 ] & mask )		1097729	1		=			
ANR	1097970	Identifier	cr		1097729	0					
ANR	1097971	BitAndExpression	wp [ 0 ] & mask		1097729	1		&			
ANR	1097972	ArrayIndexing	wp [ 0 ]		1097729	0					
ANR	1097973	Identifier	wp		1097729	0					
ANR	1097974	PrimaryExpression	0		1097729	1					
ANR	1097975	Identifier	mask		1097729	1					
ANR	1097976	ExpressionStatement	op [ 0 ] = t0	423:5:12692:12702	1097729	4	True				
ANR	1097977	AssignmentExpression	op [ 0 ] = t0		1097729	0		=			
ANR	1097978	ArrayIndexing	op [ 0 ]		1097729	0					
ANR	1097979	Identifier	op		1097729	0					
ANR	1097980	PrimaryExpression	0		1097729	1					
ANR	1097981	Identifier	t0		1097729	1					
ANR	1097982	ExpressionStatement	op [ 1 ] = t1	424:5:12709:12719	1097729	5	True				
ANR	1097983	AssignmentExpression	op [ 1 ] = t1		1097729	0		=			
ANR	1097984	ArrayIndexing	op [ 1 ]		1097729	0					
ANR	1097985	Identifier	op		1097729	0					
ANR	1097986	PrimaryExpression	1		1097729	1					
ANR	1097987	Identifier	t1		1097729	1					
ANR	1097988	ExpressionStatement	op [ 2 ] = t2	425:5:12726:12736	1097729	6	True				
ANR	1097989	AssignmentExpression	op [ 2 ] = t2		1097729	0		=			
ANR	1097990	ArrayIndexing	op [ 2 ]		1097729	0					
ANR	1097991	Identifier	op		1097729	0					
ANR	1097992	PrimaryExpression	2		1097729	1					
ANR	1097993	Identifier	t2		1097729	1					
ANR	1097994	ExpressionStatement	op [ 3 ] = t3	426:5:12743:12753	1097729	7	True				
ANR	1097995	AssignmentExpression	op [ 3 ] = t3		1097729	0		=			
ANR	1097996	ArrayIndexing	op [ 3 ]		1097729	0					
ANR	1097997	Identifier	op		1097729	0					
ANR	1097998	PrimaryExpression	3		1097729	1					
ANR	1097999	Identifier	t3		1097729	1					
ANR	1098000	ExpressionStatement	n -= 4	427:5:12760:12766	1097729	8	True				
ANR	1098001	AssignmentExpression	n -= 4		1097729	0		-=			
ANR	1098002	Identifier	n		1097729	0					
ANR	1098003	PrimaryExpression	4		1097729	1					
ANR	1098004	WhileStatement	while ( n > 0 )		1097729	9					
ANR	1098005	Condition	n > 0	428:12:12780:12784	1097729	0	True				
ANR	1098006	RelationalExpression	n > 0		1097729	0		>			
ANR	1098007	Identifier	n		1097729	0					
ANR	1098008	PrimaryExpression	0		1097729	1					
ANR	1098009	CompoundStatement		38:19:893:893	1097729	1					
ANR	1098010	ExpressionStatement	n -= 4	429:2:12791:12797	1097729	0	True				
ANR	1098011	AssignmentExpression	n -= 4		1097729	0		-=			
ANR	1098012	Identifier	n		1097729	0					
ANR	1098013	PrimaryExpression	4		1097729	1					
ANR	1098014	ExpressionStatement	wp += 4	430:2:12801:12808	1097729	1	True				
ANR	1098015	AssignmentExpression	wp += 4		1097729	0		+=			
ANR	1098016	Identifier	wp		1097729	0					
ANR	1098017	PrimaryExpression	4		1097729	1					
ANR	1098018	ExpressionStatement	op += 4	431:2:12812:12819	1097729	2	True				
ANR	1098019	AssignmentExpression	op += 4		1097729	0		+=			
ANR	1098020	Identifier	op		1097729	0					
ANR	1098021	PrimaryExpression	4		1097729	1					
ANR	1098022	ExpressionStatement	t0 = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]	432:2:12823:12859	1097729	3	True				
ANR	1098023	AssignmentExpression	t0 = ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		1097729	0		=			
ANR	1098024	Identifier	t0		1097729	0					
ANR	1098025	ArrayIndexing	ToLinear8 [ ( ca += wp [ 3 ] ) & mask ]		1097729	1					
ANR	1098026	Identifier	ToLinear8		1097729	0					
ANR	1098027	BitAndExpression	( ca += wp [ 3 ] ) & mask		1097729	1		&			
ANR	1098028	AssignmentExpression	ca += wp [ 3 ]		1097729	0		+=			
ANR	1098029	Identifier	ca		1097729	0					
ANR	1098030	ArrayIndexing	wp [ 3 ]		1097729	1					
ANR	1098031	Identifier	wp		1097729	0					
ANR	1098032	PrimaryExpression	3		1097729	1					
ANR	1098033	Identifier	mask		1097729	1					
ANR	1098034	ExpressionStatement	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]	433:2:12863:12899	1097729	4	True				
ANR	1098035	AssignmentExpression	t1 = ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097729	0		=			
ANR	1098036	Identifier	t1		1097729	0					
ANR	1098037	ArrayIndexing	ToLinear8 [ ( cb += wp [ 2 ] ) & mask ]		1097729	1					
ANR	1098038	Identifier	ToLinear8		1097729	0					
ANR	1098039	BitAndExpression	( cb += wp [ 2 ] ) & mask		1097729	1		&			
ANR	1098040	AssignmentExpression	cb += wp [ 2 ]		1097729	0		+=			
ANR	1098041	Identifier	cb		1097729	0					
ANR	1098042	ArrayIndexing	wp [ 2 ]		1097729	1					
ANR	1098043	Identifier	wp		1097729	0					
ANR	1098044	PrimaryExpression	2		1097729	1					
ANR	1098045	Identifier	mask		1097729	1					
ANR	1098046	ExpressionStatement	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]	434:2:12903:12939	1097729	5	True				
ANR	1098047	AssignmentExpression	t2 = ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097729	0		=			
ANR	1098048	Identifier	t2		1097729	0					
ANR	1098049	ArrayIndexing	ToLinear8 [ ( cg += wp [ 1 ] ) & mask ]		1097729	1					
ANR	1098050	Identifier	ToLinear8		1097729	0					
ANR	1098051	BitAndExpression	( cg += wp [ 1 ] ) & mask		1097729	1		&			
ANR	1098052	AssignmentExpression	cg += wp [ 1 ]		1097729	0		+=			
ANR	1098053	Identifier	cg		1097729	0					
ANR	1098054	ArrayIndexing	wp [ 1 ]		1097729	1					
ANR	1098055	Identifier	wp		1097729	0					
ANR	1098056	PrimaryExpression	1		1097729	1					
ANR	1098057	Identifier	mask		1097729	1					
ANR	1098058	ExpressionStatement	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]	435:2:12943:12979	1097729	6	True				
ANR	1098059	AssignmentExpression	t3 = ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097729	0		=			
ANR	1098060	Identifier	t3		1097729	0					
ANR	1098061	ArrayIndexing	ToLinear8 [ ( cr += wp [ 0 ] ) & mask ]		1097729	1					
ANR	1098062	Identifier	ToLinear8		1097729	0					
ANR	1098063	BitAndExpression	( cr += wp [ 0 ] ) & mask		1097729	1		&			
ANR	1098064	AssignmentExpression	cr += wp [ 0 ]		1097729	0		+=			
ANR	1098065	Identifier	cr		1097729	0					
ANR	1098066	ArrayIndexing	wp [ 0 ]		1097729	1					
ANR	1098067	Identifier	wp		1097729	0					
ANR	1098068	PrimaryExpression	0		1097729	1					
ANR	1098069	Identifier	mask		1097729	1					
ANR	1098070	ExpressionStatement	op [ 0 ] = t0	436:2:12983:12993	1097729	7	True				
ANR	1098071	AssignmentExpression	op [ 0 ] = t0		1097729	0		=			
ANR	1098072	ArrayIndexing	op [ 0 ]		1097729	0					
ANR	1098073	Identifier	op		1097729	0					
ANR	1098074	PrimaryExpression	0		1097729	1					
ANR	1098075	Identifier	t0		1097729	1					
ANR	1098076	ExpressionStatement	op [ 1 ] = t1	437:2:12997:13007	1097729	8	True				
ANR	1098077	AssignmentExpression	op [ 1 ] = t1		1097729	0		=			
ANR	1098078	ArrayIndexing	op [ 1 ]		1097729	0					
ANR	1098079	Identifier	op		1097729	0					
ANR	1098080	PrimaryExpression	1		1097729	1					
ANR	1098081	Identifier	t1		1097729	1					
ANR	1098082	ExpressionStatement	op [ 2 ] = t2	438:2:13011:13021	1097729	9	True				
ANR	1098083	AssignmentExpression	op [ 2 ] = t2		1097729	0		=			
ANR	1098084	ArrayIndexing	op [ 2 ]		1097729	0					
ANR	1098085	Identifier	op		1097729	0					
ANR	1098086	PrimaryExpression	2		1097729	1					
ANR	1098087	Identifier	t2		1097729	1					
ANR	1098088	ExpressionStatement	op [ 3 ] = t3	439:2:13025:13035	1097729	10	True				
ANR	1098089	AssignmentExpression	op [ 3 ] = t3		1097729	0		=			
ANR	1098090	ArrayIndexing	op [ 3 ]		1097729	0					
ANR	1098091	Identifier	op		1097729	0					
ANR	1098092	PrimaryExpression	3		1097729	1					
ANR	1098093	Identifier	t3		1097729	1					
ANR	1098094	ElseStatement	else		1097729	0					
ANR	1098095	CompoundStatement		51:8:1158:1158	1097729	0					
ANR	1098096	Statement	REPEAT	442:5:13059:13064	1097729	0	True				
ANR	1098097	Statement	(	442:11:13065:13065	1097729	1	True				
ANR	1098098	ExpressionStatement	"stride , * op = ToLinear8 [ * wp & mask ]"	442:12:13066:13099	1097729	2	True				
ANR	1098099	Expression	"stride , * op = ToLinear8 [ * wp & mask ]"		1097729	0					
ANR	1098100	Identifier	stride		1097729	0					
ANR	1098101	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		1097729	1		=			
ANR	1098102	UnaryOperationExpression	* op		1097729	0					
ANR	1098103	UnaryOperator	*		1097729	0					
ANR	1098104	Identifier	op		1097729	1					
ANR	1098105	ArrayIndexing	ToLinear8 [ * wp & mask ]		1097729	1					
ANR	1098106	Identifier	ToLinear8		1097729	0					
ANR	1098107	BitAndExpression	* wp & mask		1097729	1		&			
ANR	1098108	UnaryOperationExpression	* wp		1097729	0					
ANR	1098109	UnaryOperator	*		1097729	0					
ANR	1098110	Identifier	wp		1097729	1					
ANR	1098111	Identifier	mask		1097729	1					
ANR	1098112	ExpressionStatement	wp ++	442:47:13101:13105	1097729	3	True				
ANR	1098113	PostIncDecOperationExpression	wp ++		1097729	0					
ANR	1098114	Identifier	wp		1097729	0					
ANR	1098115	IncDec	++		1097729	1					
ANR	1098116	Statement	op	442:53:13107:13108	1097729	4	True				
ANR	1098117	Statement	++	442:55:13109:13110	1097729	5	True				
ANR	1098118	Statement	)	442:57:13111:13111	1097729	6	True				
ANR	1098119	ExpressionStatement	n -= stride	443:5:13118:13129	1097729	7	True				
ANR	1098120	AssignmentExpression	n -= stride		1097729	0		-=			
ANR	1098121	Identifier	n		1097729	0					
ANR	1098122	Identifier	stride		1097729	1					
ANR	1098123	WhileStatement	while ( n > 0 )		1097729	8					
ANR	1098124	Condition	n > 0	444:12:13143:13147	1097729	0	True				
ANR	1098125	RelationalExpression	n > 0		1097729	0		>			
ANR	1098126	Identifier	n		1097729	0					
ANR	1098127	PrimaryExpression	0		1097729	1					
ANR	1098128	CompoundStatement		54:19:1256:1256	1097729	1					
ANR	1098129	Statement	REPEAT	445:2:13154:13159	1097729	0	True				
ANR	1098130	Statement	(	445:8:13160:13160	1097729	1	True				
ANR	1098131	ExpressionStatement	"stride , wp [ stride ] += * wp"	445:9:13161:13192	1097729	2	True				
ANR	1098132	Expression	"stride , wp [ stride ] += * wp"		1097729	0					
ANR	1098133	Identifier	stride		1097729	0					
ANR	1098134	AssignmentExpression	wp [ stride ] += * wp		1097729	1		+=			
ANR	1098135	ArrayIndexing	wp [ stride ]		1097729	0					
ANR	1098136	Identifier	wp		1097729	0					
ANR	1098137	Identifier	stride		1097729	1					
ANR	1098138	UnaryOperationExpression	* wp		1097729	1					
ANR	1098139	UnaryOperator	*		1097729	0					
ANR	1098140	Identifier	wp		1097729	1					
ANR	1098141	ExpressionStatement	* op = ToLinear8 [ * wp & mask ]	446:25:13194:13219	1097729	3	True				
ANR	1098142	AssignmentExpression	* op = ToLinear8 [ * wp & mask ]		1097729	0		=			
ANR	1098143	UnaryOperationExpression	* op		1097729	0					
ANR	1098144	UnaryOperator	*		1097729	0					
ANR	1098145	Identifier	op		1097729	1					
ANR	1098146	ArrayIndexing	ToLinear8 [ * wp & mask ]		1097729	1					
ANR	1098147	Identifier	ToLinear8		1097729	0					
ANR	1098148	BitAndExpression	* wp & mask		1097729	1		&			
ANR	1098149	UnaryOperationExpression	* wp		1097729	0					
ANR	1098150	UnaryOperator	*		1097729	0					
ANR	1098151	Identifier	wp		1097729	1					
ANR	1098152	Identifier	mask		1097729	1					
ANR	1098153	ExpressionStatement	wp ++	446:52:13221:13225	1097729	4	True				
ANR	1098154	PostIncDecOperationExpression	wp ++		1097729	0					
ANR	1098155	Identifier	wp		1097729	0					
ANR	1098156	IncDec	++		1097729	1					
ANR	1098157	Statement	op	446:58:13227:13228	1097729	5	True				
ANR	1098158	Statement	++	446:60:13229:13230	1097729	6	True				
ANR	1098159	Statement	)	446:62:13231:13231	1097729	7	True				
ANR	1098160	ExpressionStatement	n -= stride	447:2:13235:13246	1097729	8	True				
ANR	1098161	AssignmentExpression	n -= stride		1097729	0		-=			
ANR	1098162	Identifier	n		1097729	0					
ANR	1098163	Identifier	stride		1097729	1					
ANR	1098164	ReturnType	static void		1097729	1					
ANR	1098165	Identifier	horizontalAccumulate8abgr		1097729	2					
ANR	1098166	ParameterList	"uint16 * wp , int n , int stride , unsigned char * op , unsigned char * ToLinear8"		1097729	3					
ANR	1098167	Parameter	uint16 * wp	389:26:11816:11825	1097729	0	True				
ANR	1098168	ParameterType	uint16 *		1097729	0					
ANR	1098169	Identifier	wp		1097729	1					
ANR	1098170	Parameter	int n	389:38:11828:11832	1097729	1	True				
ANR	1098171	ParameterType	int		1097729	0					
ANR	1098172	Identifier	n		1097729	1					
ANR	1098173	Parameter	int stride	389:45:11835:11844	1097729	2	True				
ANR	1098174	ParameterType	int		1097729	0					
ANR	1098175	Identifier	stride		1097729	1					
ANR	1098176	Parameter	unsigned char * op	389:57:11847:11863	1097729	3	True				
ANR	1098177	ParameterType	unsigned char *		1097729	0					
ANR	1098178	Identifier	op		1097729	1					
ANR	1098179	Parameter	unsigned char * ToLinear8	390:1:11867:11890	1097729	4	True				
ANR	1098180	ParameterType	unsigned char *		1097729	0					
ANR	1098181	Identifier	ToLinear8		1097729	1					
ANR	1098182	CFGEntryNode	ENTRY		1097729		True				
ANR	1098183	CFGExitNode	EXIT		1097729		True				
ANR	1098184	Symbol	op		1097729						
ANR	1098185	Symbol	* stride		1097729						
ANR	1098186	Symbol	ToLinear8		1097729						
ANR	1098187	Symbol	* mask		1097729						
ANR	1098188	Symbol	cg		1097729						
ANR	1098189	Symbol	* op		1097729						
ANR	1098190	Symbol	* * wp		1097729						
ANR	1098191	Symbol	stride		1097729						
ANR	1098192	Symbol	* ToLinear8		1097729						
ANR	1098193	Symbol	n		1097729						
ANR	1098194	Symbol	cr		1097729						
ANR	1098195	Symbol	CODE_MASK		1097729						
ANR	1098196	Symbol	wp		1097729						
ANR	1098197	Symbol	t0		1097729						
ANR	1098198	Symbol	* wp		1097729						
ANR	1098199	Symbol	t1		1097729						
ANR	1098200	Symbol	ca		1097729						
ANR	1098201	Symbol	t2		1097729						
ANR	1098202	Symbol	mask		1097729						
ANR	1098203	Symbol	cb		1097729						
ANR	1098204	Symbol	t3		1097729						
ANR	1098205	ClassDef	<unnamed>	457:8:13366:13831							
ANR	1098206	DeclStmt									
ANR	1098207	Decl							TIFFPredictorState	TIFFPredictorState	predict
ANR	1098208	DeclStmt									
ANR	1098209	Decl							z_stream	z_stream	stream
ANR	1098210	DeclStmt									
ANR	1098211	Decl							uint16	uint16 *	tbuf
ANR	1098212	DeclStmt									
ANR	1098213	Decl							uint16	uint16	stride
ANR	1098214	DeclStmt									
ANR	1098215	Decl							int	int	state
ANR	1098216	DeclStmt									
ANR	1098217	Decl							int	int	user_datafmt
ANR	1098218	DeclStmt									
ANR	1098219	Decl							int	int	quality
ANR	1098220	DeclStmt									
ANR	1098221	Decl							TIFFVSetMethod	TIFFVSetMethod	vgetparent
ANR	1098222	DeclStmt									
ANR	1098223	Decl							TIFFVSetMethod	TIFFVSetMethod	vsetparent
ANR	1098224	DeclStmt									
ANR	1098225	Decl							float	float *	ToLinearF
ANR	1098226	DeclStmt									
ANR	1098227	Decl							uint16	uint16 *	ToLinear16
ANR	1098228	DeclStmt									
ANR	1098229	Decl							unsigned char	unsigned char *	ToLinear8
ANR	1098230	DeclStmt									
ANR	1098231	Decl							uint16	uint16 *	FromLT2
ANR	1098232	DeclStmt									
ANR	1098233	Decl							uint16	uint16 *	From14
ANR	1098234	DeclStmt									
ANR	1098235	Decl							uint16	uint16 *	From8
ANR	1098236	DeclStmt									
ANR	1098237	Decl									PixarLogState
ANR	1098238	Function	PixarLogMakeTables	479:0:13834:17147							
ANR	1098239	FunctionDef	PixarLogMakeTables (PixarLogState * sp)		1098238	0					
ANR	1098240	CompoundStatement		481:0:13883:17147	1098238	0					
ANR	1098241	IdentifierDeclStatement	"int nlin , lt2size ;"	494:4:14450:14468	1098238	0	True				
ANR	1098242	IdentifierDecl	nlin		1098238	0					
ANR	1098243	IdentifierDeclType	int		1098238	0					
ANR	1098244	Identifier	nlin		1098238	1					
ANR	1098245	IdentifierDecl	lt2size		1098238	1					
ANR	1098246	IdentifierDeclType	int		1098238	0					
ANR	1098247	Identifier	lt2size		1098238	1					
ANR	1098248	IdentifierDeclStatement	"int i , j ;"	495:4:14474:14483	1098238	1	True				
ANR	1098249	IdentifierDecl	i		1098238	0					
ANR	1098250	IdentifierDeclType	int		1098238	0					
ANR	1098251	Identifier	i		1098238	1					
ANR	1098252	IdentifierDecl	j		1098238	1					
ANR	1098253	IdentifierDeclType	int		1098238	0					
ANR	1098254	Identifier	j		1098238	1					
ANR	1098255	IdentifierDeclStatement	"double b , c , linstep , v ;"	496:4:14489:14513	1098238	2	True				
ANR	1098256	IdentifierDecl	b		1098238	0					
ANR	1098257	IdentifierDeclType	double		1098238	0					
ANR	1098258	Identifier	b		1098238	1					
ANR	1098259	IdentifierDecl	c		1098238	1					
ANR	1098260	IdentifierDeclType	double		1098238	0					
ANR	1098261	Identifier	c		1098238	1					
ANR	1098262	IdentifierDecl	linstep		1098238	2					
ANR	1098263	IdentifierDeclType	double		1098238	0					
ANR	1098264	Identifier	linstep		1098238	1					
ANR	1098265	IdentifierDecl	v		1098238	3					
ANR	1098266	IdentifierDeclType	double		1098238	0					
ANR	1098267	Identifier	v		1098238	1					
ANR	1098268	IdentifierDeclStatement	float * ToLinearF ;	497:4:14519:14535	1098238	3	True				
ANR	1098269	IdentifierDecl	* ToLinearF		1098238	0					
ANR	1098270	IdentifierDeclType	float *		1098238	0					
ANR	1098271	Identifier	ToLinearF		1098238	1					
ANR	1098272	IdentifierDeclStatement	uint16 * ToLinear16 ;	498:4:14541:14559	1098238	4	True				
ANR	1098273	IdentifierDecl	* ToLinear16		1098238	0					
ANR	1098274	IdentifierDeclType	uint16 *		1098238	0					
ANR	1098275	Identifier	ToLinear16		1098238	1					
ANR	1098276	IdentifierDeclStatement	unsigned char * ToLinear8 ;	499:4:14565:14589	1098238	5	True				
ANR	1098277	IdentifierDecl	* ToLinear8		1098238	0					
ANR	1098278	IdentifierDeclType	unsigned char *		1098238	0					
ANR	1098279	Identifier	ToLinear8		1098238	1					
ANR	1098280	IdentifierDeclStatement	uint16 * FromLT2 ;	500:4:14595:14611	1098238	6	True				
ANR	1098281	IdentifierDecl	* FromLT2		1098238	0					
ANR	1098282	IdentifierDeclType	uint16 *		1098238	0					
ANR	1098283	Identifier	FromLT2		1098238	1					
ANR	1098284	IdentifierDeclStatement	uint16 * From14 ;	501:4:14617:14632	1098238	7	True				
ANR	1098285	IdentifierDecl	* From14		1098238	0					
ANR	1098286	IdentifierDeclType	uint16 *		1098238	0					
ANR	1098287	Identifier	From14		1098238	1					
ANR	1098288	IdentifierDeclStatement	uint16 * From8 ;	502:4:14688:14702	1098238	8	True				
ANR	1098289	IdentifierDecl	* From8		1098238	0					
ANR	1098290	IdentifierDeclType	uint16 *		1098238	0					
ANR	1098291	Identifier	From8		1098238	1					
ANR	1098292	ExpressionStatement	c = log ( RATIO )	504:4:14709:14723	1098238	9	True				
ANR	1098293	AssignmentExpression	c = log ( RATIO )		1098238	0		=			
ANR	1098294	Identifier	c		1098238	0					
ANR	1098295	CallExpression	log ( RATIO )		1098238	1					
ANR	1098296	Callee	log		1098238	0					
ANR	1098297	Identifier	log		1098238	0					
ANR	1098298	ArgumentList	RATIO		1098238	1					
ANR	1098299	Argument	RATIO		1098238	0					
ANR	1098300	Identifier	RATIO		1098238	0					
ANR	1098301	ExpressionStatement	nlin = ( int ) ( 1. / c )	505:4:14730:14748	1098238	10	True				
ANR	1098302	AssignmentExpression	nlin = ( int ) ( 1. / c )		1098238	0		=			
ANR	1098303	Identifier	nlin		1098238	0					
ANR	1098304	CastExpression	( int ) ( 1. / c )		1098238	1					
ANR	1098305	CastTarget	int		1098238	0					
ANR	1098306	MultiplicativeExpression	1. / c		1098238	1		/			
ANR	1098307	PrimaryExpression	1.		1098238	0					
ANR	1098308	Identifier	c		1098238	1					
ANR	1098309	ExpressionStatement	c = 1. / nlin	506:4:14784:14795	1098238	11	True				
ANR	1098310	AssignmentExpression	c = 1. / nlin		1098238	0		=			
ANR	1098311	Identifier	c		1098238	0					
ANR	1098312	MultiplicativeExpression	1. / nlin		1098238	1		/			
ANR	1098313	PrimaryExpression	1.		1098238	0					
ANR	1098314	Identifier	nlin		1098238	1					
ANR	1098315	ExpressionStatement	b = exp ( - c * ONE )	507:4:14801:14816	1098238	12	True				
ANR	1098316	AssignmentExpression	b = exp ( - c * ONE )		1098238	0		=			
ANR	1098317	Identifier	b		1098238	0					
ANR	1098318	CallExpression	exp ( - c * ONE )		1098238	1					
ANR	1098319	Callee	exp		1098238	0					
ANR	1098320	Identifier	exp		1098238	0					
ANR	1098321	ArgumentList	- c * ONE		1098238	1					
ANR	1098322	Argument	- c * ONE		1098238	0					
ANR	1098323	MultiplicativeExpression	- c * ONE		1098238	0		*			
ANR	1098324	UnaryOperationExpression	- c		1098238	0					
ANR	1098325	UnaryOperator	-		1098238	0					
ANR	1098326	Identifier	c		1098238	1					
ANR	1098327	Identifier	ONE		1098238	1					
ANR	1098328	ExpressionStatement	linstep = b * c * exp ( 1. )	508:4:14875:14896	1098238	13	True				
ANR	1098329	AssignmentExpression	linstep = b * c * exp ( 1. )		1098238	0		=			
ANR	1098330	Identifier	linstep		1098238	0					
ANR	1098331	MultiplicativeExpression	b * c * exp ( 1. )		1098238	1		*			
ANR	1098332	Identifier	b		1098238	0					
ANR	1098333	MultiplicativeExpression	c * exp ( 1. )		1098238	1		*			
ANR	1098334	Identifier	c		1098238	0					
ANR	1098335	CallExpression	exp ( 1. )		1098238	1					
ANR	1098336	Callee	exp		1098238	0					
ANR	1098337	Identifier	exp		1098238	0					
ANR	1098338	ArgumentList	1.		1098238	1					
ANR	1098339	Argument	1.		1098238	0					
ANR	1098340	PrimaryExpression	1.		1098238	0					
ANR	1098341	ExpressionStatement	LogK1 = ( float ) ( 1. / c )	510:4:14903:14924	1098238	14	True				
ANR	1098342	AssignmentExpression	LogK1 = ( float ) ( 1. / c )		1098238	0		=			
ANR	1098343	Identifier	LogK1		1098238	0					
ANR	1098344	CastExpression	( float ) ( 1. / c )		1098238	1					
ANR	1098345	CastTarget	float		1098238	0					
ANR	1098346	MultiplicativeExpression	1. / c		1098238	1		/			
ANR	1098347	PrimaryExpression	1.		1098238	0					
ANR	1098348	Identifier	c		1098238	1					
ANR	1098349	ExpressionStatement	LogK2 = ( float ) ( 1. / b )	511:4:14970:14991	1098238	15	True				
ANR	1098350	AssignmentExpression	LogK2 = ( float ) ( 1. / b )		1098238	0		=			
ANR	1098351	Identifier	LogK2		1098238	0					
ANR	1098352	CastExpression	( float ) ( 1. / b )		1098238	1					
ANR	1098353	CastTarget	float		1098238	0					
ANR	1098354	MultiplicativeExpression	1. / b		1098238	1		/			
ANR	1098355	PrimaryExpression	1.		1098238	0					
ANR	1098356	Identifier	b		1098238	1					
ANR	1098357	ExpressionStatement	lt2size = ( int ) ( 2. / linstep ) + 1	512:4:14997:15028	1098238	16	True				
ANR	1098358	AssignmentExpression	lt2size = ( int ) ( 2. / linstep ) + 1		1098238	0		=			
ANR	1098359	Identifier	lt2size		1098238	0					
ANR	1098360	AdditiveExpression	( int ) ( 2. / linstep ) + 1		1098238	1		+			
ANR	1098361	CastExpression	( int ) ( 2. / linstep )		1098238	0					
ANR	1098362	CastTarget	int		1098238	0					
ANR	1098363	MultiplicativeExpression	2. / linstep		1098238	1		/			
ANR	1098364	PrimaryExpression	2.		1098238	0					
ANR	1098365	Identifier	linstep		1098238	1					
ANR	1098366	PrimaryExpression	1		1098238	1					
ANR	1098367	ExpressionStatement	FromLT2 = ( uint16 * ) _TIFFmalloc ( lt2size * sizeof ( uint16 ) )	513:4:15034:15089	1098238	17	True				
ANR	1098368	AssignmentExpression	FromLT2 = ( uint16 * ) _TIFFmalloc ( lt2size * sizeof ( uint16 ) )		1098238	0		=			
ANR	1098369	Identifier	FromLT2		1098238	0					
ANR	1098370	CastExpression	( uint16 * ) _TIFFmalloc ( lt2size * sizeof ( uint16 ) )		1098238	1					
ANR	1098371	CastTarget	uint16 *		1098238	0					
ANR	1098372	CallExpression	_TIFFmalloc ( lt2size * sizeof ( uint16 ) )		1098238	1					
ANR	1098373	Callee	_TIFFmalloc		1098238	0					
ANR	1098374	Identifier	_TIFFmalloc		1098238	0					
ANR	1098375	ArgumentList	lt2size * sizeof ( uint16 )		1098238	1					
ANR	1098376	Argument	lt2size * sizeof ( uint16 )		1098238	0					
ANR	1098377	MultiplicativeExpression	lt2size * sizeof ( uint16 )		1098238	0		*			
ANR	1098378	Identifier	lt2size		1098238	0					
ANR	1098379	SizeofExpression	sizeof ( uint16 )		1098238	1					
ANR	1098380	Sizeof	sizeof		1098238	0					
ANR	1098381	SizeofOperand	uint16		1098238	1					
ANR	1098382	ExpressionStatement	From14 = ( uint16 * ) _TIFFmalloc ( 16384 * sizeof ( uint16 ) )	514:4:15095:15147	1098238	18	True				
ANR	1098383	AssignmentExpression	From14 = ( uint16 * ) _TIFFmalloc ( 16384 * sizeof ( uint16 ) )		1098238	0		=			
ANR	1098384	Identifier	From14		1098238	0					
ANR	1098385	CastExpression	( uint16 * ) _TIFFmalloc ( 16384 * sizeof ( uint16 ) )		1098238	1					
ANR	1098386	CastTarget	uint16 *		1098238	0					
ANR	1098387	CallExpression	_TIFFmalloc ( 16384 * sizeof ( uint16 ) )		1098238	1					
ANR	1098388	Callee	_TIFFmalloc		1098238	0					
ANR	1098389	Identifier	_TIFFmalloc		1098238	0					
ANR	1098390	ArgumentList	16384 * sizeof ( uint16 )		1098238	1					
ANR	1098391	Argument	16384 * sizeof ( uint16 )		1098238	0					
ANR	1098392	MultiplicativeExpression	16384 * sizeof ( uint16 )		1098238	0		*			
ANR	1098393	PrimaryExpression	16384		1098238	0					
ANR	1098394	SizeofExpression	sizeof ( uint16 )		1098238	1					
ANR	1098395	Sizeof	sizeof		1098238	0					
ANR	1098396	SizeofOperand	uint16		1098238	1					
ANR	1098397	ExpressionStatement	From8 = ( uint16 * ) _TIFFmalloc ( 256 * sizeof ( uint16 ) )	515:4:15153:15202	1098238	19	True				
ANR	1098398	AssignmentExpression	From8 = ( uint16 * ) _TIFFmalloc ( 256 * sizeof ( uint16 ) )		1098238	0		=			
ANR	1098399	Identifier	From8		1098238	0					
ANR	1098400	CastExpression	( uint16 * ) _TIFFmalloc ( 256 * sizeof ( uint16 ) )		1098238	1					
ANR	1098401	CastTarget	uint16 *		1098238	0					
ANR	1098402	CallExpression	_TIFFmalloc ( 256 * sizeof ( uint16 ) )		1098238	1					
ANR	1098403	Callee	_TIFFmalloc		1098238	0					
ANR	1098404	Identifier	_TIFFmalloc		1098238	0					
ANR	1098405	ArgumentList	256 * sizeof ( uint16 )		1098238	1					
ANR	1098406	Argument	256 * sizeof ( uint16 )		1098238	0					
ANR	1098407	MultiplicativeExpression	256 * sizeof ( uint16 )		1098238	0		*			
ANR	1098408	PrimaryExpression	256		1098238	0					
ANR	1098409	SizeofExpression	sizeof ( uint16 )		1098238	1					
ANR	1098410	Sizeof	sizeof		1098238	0					
ANR	1098411	SizeofOperand	uint16		1098238	1					
ANR	1098412	ExpressionStatement	ToLinearF = ( float * ) _TIFFmalloc ( TSIZEP1 * sizeof ( float ) )	516:4:15208:15265	1098238	20	True				
ANR	1098413	AssignmentExpression	ToLinearF = ( float * ) _TIFFmalloc ( TSIZEP1 * sizeof ( float ) )		1098238	0		=			
ANR	1098414	Identifier	ToLinearF		1098238	0					
ANR	1098415	CastExpression	( float * ) _TIFFmalloc ( TSIZEP1 * sizeof ( float ) )		1098238	1					
ANR	1098416	CastTarget	float *		1098238	0					
ANR	1098417	CallExpression	_TIFFmalloc ( TSIZEP1 * sizeof ( float ) )		1098238	1					
ANR	1098418	Callee	_TIFFmalloc		1098238	0					
ANR	1098419	Identifier	_TIFFmalloc		1098238	0					
ANR	1098420	ArgumentList	TSIZEP1 * sizeof ( float )		1098238	1					
ANR	1098421	Argument	TSIZEP1 * sizeof ( float )		1098238	0					
ANR	1098422	MultiplicativeExpression	TSIZEP1 * sizeof ( float )		1098238	0		*			
ANR	1098423	Identifier	TSIZEP1		1098238	0					
ANR	1098424	SizeofExpression	sizeof ( float )		1098238	1					
ANR	1098425	Sizeof	sizeof		1098238	0					
ANR	1098426	SizeofOperand	float		1098238	1					
ANR	1098427	ExpressionStatement	ToLinear16 = ( uint16 * ) _TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )	517:4:15271:15331	1098238	21	True				
ANR	1098428	AssignmentExpression	ToLinear16 = ( uint16 * ) _TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )		1098238	0		=			
ANR	1098429	Identifier	ToLinear16		1098238	0					
ANR	1098430	CastExpression	( uint16 * ) _TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )		1098238	1					
ANR	1098431	CastTarget	uint16 *		1098238	0					
ANR	1098432	CallExpression	_TIFFmalloc ( TSIZEP1 * sizeof ( uint16 ) )		1098238	1					
ANR	1098433	Callee	_TIFFmalloc		1098238	0					
ANR	1098434	Identifier	_TIFFmalloc		1098238	0					
ANR	1098435	ArgumentList	TSIZEP1 * sizeof ( uint16 )		1098238	1					
ANR	1098436	Argument	TSIZEP1 * sizeof ( uint16 )		1098238	0					
ANR	1098437	MultiplicativeExpression	TSIZEP1 * sizeof ( uint16 )		1098238	0		*			
ANR	1098438	Identifier	TSIZEP1		1098238	0					
ANR	1098439	SizeofExpression	sizeof ( uint16 )		1098238	1					
ANR	1098440	Sizeof	sizeof		1098238	0					
ANR	1098441	SizeofOperand	uint16		1098238	1					
ANR	1098442	ExpressionStatement	ToLinear8 = ( unsigned char * ) _TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )	518:4:15337:15410	1098238	22	True				
ANR	1098443	AssignmentExpression	ToLinear8 = ( unsigned char * ) _TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )		1098238	0		=			
ANR	1098444	Identifier	ToLinear8		1098238	0					
ANR	1098445	CastExpression	( unsigned char * ) _TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )		1098238	1					
ANR	1098446	CastTarget	unsigned char *		1098238	0					
ANR	1098447	CallExpression	_TIFFmalloc ( TSIZEP1 * sizeof ( unsigned char ) )		1098238	1					
ANR	1098448	Callee	_TIFFmalloc		1098238	0					
ANR	1098449	Identifier	_TIFFmalloc		1098238	0					
ANR	1098450	ArgumentList	TSIZEP1 * sizeof ( unsigned char )		1098238	1					
ANR	1098451	Argument	TSIZEP1 * sizeof ( unsigned char )		1098238	0					
ANR	1098452	MultiplicativeExpression	TSIZEP1 * sizeof ( unsigned char )		1098238	0		*			
ANR	1098453	Identifier	TSIZEP1		1098238	0					
ANR	1098454	SizeofExpression	sizeof ( unsigned char )		1098238	1					
ANR	1098455	Sizeof	sizeof		1098238	0					
ANR	1098456	SizeofOperand	unsigned char		1098238	1					
ANR	1098457	IfStatement	if ( FromLT2 == NULL || From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL )		1098238	23					
ANR	1098458	Condition	FromLT2 == NULL || From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL	519:8:15420:15538	1098238	0	True				
ANR	1098459	OrExpression	FromLT2 == NULL || From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		1098238	0		||			
ANR	1098460	EqualityExpression	FromLT2 == NULL		1098238	0		==			
ANR	1098461	Identifier	FromLT2		1098238	0					
ANR	1098462	Identifier	NULL		1098238	1					
ANR	1098463	OrExpression	From14 == NULL || From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		1098238	1		||			
ANR	1098464	EqualityExpression	From14 == NULL		1098238	0		==			
ANR	1098465	Identifier	From14		1098238	0					
ANR	1098466	Identifier	NULL		1098238	1					
ANR	1098467	OrExpression	From8 == NULL || ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		1098238	1		||			
ANR	1098468	EqualityExpression	From8 == NULL		1098238	0		==			
ANR	1098469	Identifier	From8		1098238	0					
ANR	1098470	Identifier	NULL		1098238	1					
ANR	1098471	OrExpression	ToLinearF == NULL || ToLinear16 == NULL || ToLinear8 == NULL		1098238	1		||			
ANR	1098472	EqualityExpression	ToLinearF == NULL		1098238	0		==			
ANR	1098473	Identifier	ToLinearF		1098238	0					
ANR	1098474	Identifier	NULL		1098238	1					
ANR	1098475	OrExpression	ToLinear16 == NULL || ToLinear8 == NULL		1098238	1		||			
ANR	1098476	EqualityExpression	ToLinear16 == NULL		1098238	0		==			
ANR	1098477	Identifier	ToLinear16		1098238	0					
ANR	1098478	Identifier	NULL		1098238	1					
ANR	1098479	EqualityExpression	ToLinear8 == NULL		1098238	1		==			
ANR	1098480	Identifier	ToLinear8		1098238	0					
ANR	1098481	Identifier	NULL		1098238	1					
ANR	1098482	CompoundStatement		40:64:1657:1657	1098238	1					
ANR	1098483	IfStatement	if ( FromLT2 )		1098238	0					
ANR	1098484	Condition	FromLT2	521:5:15548:15554	1098238	0	True				
ANR	1098485	Identifier	FromLT2		1098238	0					
ANR	1098486	ExpressionStatement	_TIFFfree ( FromLT2 )	521:14:15557:15575	1098238	1	True				
ANR	1098487	CallExpression	_TIFFfree ( FromLT2 )		1098238	0					
ANR	1098488	Callee	_TIFFfree		1098238	0					
ANR	1098489	Identifier	_TIFFfree		1098238	0					
ANR	1098490	ArgumentList	FromLT2		1098238	1					
ANR	1098491	Argument	FromLT2		1098238	0					
ANR	1098492	Identifier	FromLT2		1098238	0					
ANR	1098493	IfStatement	if ( From14 )		1098238	1					
ANR	1098494	Condition	From14	522:5:15582:15587	1098238	0	True				
ANR	1098495	Identifier	From14		1098238	0					
ANR	1098496	ExpressionStatement	_TIFFfree ( From14 )	522:13:15590:15607	1098238	1	True				
ANR	1098497	CallExpression	_TIFFfree ( From14 )		1098238	0					
ANR	1098498	Callee	_TIFFfree		1098238	0					
ANR	1098499	Identifier	_TIFFfree		1098238	0					
ANR	1098500	ArgumentList	From14		1098238	1					
ANR	1098501	Argument	From14		1098238	0					
ANR	1098502	Identifier	From14		1098238	0					
ANR	1098503	IfStatement	if ( From8 )		1098238	2					
ANR	1098504	Condition	From8	523:5:15614:15618	1098238	0	True				
ANR	1098505	Identifier	From8		1098238	0					
ANR	1098506	ExpressionStatement	_TIFFfree ( From8 )	523:12:15621:15637	1098238	1	True				
ANR	1098507	CallExpression	_TIFFfree ( From8 )		1098238	0					
ANR	1098508	Callee	_TIFFfree		1098238	0					
ANR	1098509	Identifier	_TIFFfree		1098238	0					
ANR	1098510	ArgumentList	From8		1098238	1					
ANR	1098511	Argument	From8		1098238	0					
ANR	1098512	Identifier	From8		1098238	0					
ANR	1098513	IfStatement	if ( ToLinearF )		1098238	3					
ANR	1098514	Condition	ToLinearF	524:5:15644:15652	1098238	0	True				
ANR	1098515	Identifier	ToLinearF		1098238	0					
ANR	1098516	ExpressionStatement	_TIFFfree ( ToLinearF )	524:16:15655:15675	1098238	1	True				
ANR	1098517	CallExpression	_TIFFfree ( ToLinearF )		1098238	0					
ANR	1098518	Callee	_TIFFfree		1098238	0					
ANR	1098519	Identifier	_TIFFfree		1098238	0					
ANR	1098520	ArgumentList	ToLinearF		1098238	1					
ANR	1098521	Argument	ToLinearF		1098238	0					
ANR	1098522	Identifier	ToLinearF		1098238	0					
ANR	1098523	IfStatement	if ( ToLinear16 )		1098238	4					
ANR	1098524	Condition	ToLinear16	525:5:15682:15691	1098238	0	True				
ANR	1098525	Identifier	ToLinear16		1098238	0					
ANR	1098526	ExpressionStatement	_TIFFfree ( ToLinear16 )	525:17:15694:15715	1098238	1	True				
ANR	1098527	CallExpression	_TIFFfree ( ToLinear16 )		1098238	0					
ANR	1098528	Callee	_TIFFfree		1098238	0					
ANR	1098529	Identifier	_TIFFfree		1098238	0					
ANR	1098530	ArgumentList	ToLinear16		1098238	1					
ANR	1098531	Argument	ToLinear16		1098238	0					
ANR	1098532	Identifier	ToLinear16		1098238	0					
ANR	1098533	IfStatement	if ( ToLinear8 )		1098238	5					
ANR	1098534	Condition	ToLinear8	526:5:15722:15730	1098238	0	True				
ANR	1098535	Identifier	ToLinear8		1098238	0					
ANR	1098536	ExpressionStatement	_TIFFfree ( ToLinear8 )	526:16:15733:15753	1098238	1	True				
ANR	1098537	CallExpression	_TIFFfree ( ToLinear8 )		1098238	0					
ANR	1098538	Callee	_TIFFfree		1098238	0					
ANR	1098539	Identifier	_TIFFfree		1098238	0					
ANR	1098540	ArgumentList	ToLinear8		1098238	1					
ANR	1098541	Argument	ToLinear8		1098238	0					
ANR	1098542	Identifier	ToLinear8		1098238	0					
ANR	1098543	ExpressionStatement	sp -> FromLT2 = NULL	527:1:15756:15774	1098238	6	True				
ANR	1098544	AssignmentExpression	sp -> FromLT2 = NULL		1098238	0		=			
ANR	1098545	PtrMemberAccess	sp -> FromLT2		1098238	0					
ANR	1098546	Identifier	sp		1098238	0					
ANR	1098547	Identifier	FromLT2		1098238	1					
ANR	1098548	Identifier	NULL		1098238	1					
ANR	1098549	ExpressionStatement	sp -> From14 = NULL	528:1:15777:15794	1098238	7	True				
ANR	1098550	AssignmentExpression	sp -> From14 = NULL		1098238	0		=			
ANR	1098551	PtrMemberAccess	sp -> From14		1098238	0					
ANR	1098552	Identifier	sp		1098238	0					
ANR	1098553	Identifier	From14		1098238	1					
ANR	1098554	Identifier	NULL		1098238	1					
ANR	1098555	ExpressionStatement	sp -> From8 = NULL	529:1:15797:15813	1098238	8	True				
ANR	1098556	AssignmentExpression	sp -> From8 = NULL		1098238	0		=			
ANR	1098557	PtrMemberAccess	sp -> From8		1098238	0					
ANR	1098558	Identifier	sp		1098238	0					
ANR	1098559	Identifier	From8		1098238	1					
ANR	1098560	Identifier	NULL		1098238	1					
ANR	1098561	ExpressionStatement	sp -> ToLinearF = NULL	530:1:15816:15836	1098238	9	True				
ANR	1098562	AssignmentExpression	sp -> ToLinearF = NULL		1098238	0		=			
ANR	1098563	PtrMemberAccess	sp -> ToLinearF		1098238	0					
ANR	1098564	Identifier	sp		1098238	0					
ANR	1098565	Identifier	ToLinearF		1098238	1					
ANR	1098566	Identifier	NULL		1098238	1					
ANR	1098567	ExpressionStatement	sp -> ToLinear16 = NULL	531:1:15839:15860	1098238	10	True				
ANR	1098568	AssignmentExpression	sp -> ToLinear16 = NULL		1098238	0		=			
ANR	1098569	PtrMemberAccess	sp -> ToLinear16		1098238	0					
ANR	1098570	Identifier	sp		1098238	0					
ANR	1098571	Identifier	ToLinear16		1098238	1					
ANR	1098572	Identifier	NULL		1098238	1					
ANR	1098573	ExpressionStatement	sp -> ToLinear8 = NULL	532:1:15863:15883	1098238	11	True				
ANR	1098574	AssignmentExpression	sp -> ToLinear8 = NULL		1098238	0		=			
ANR	1098575	PtrMemberAccess	sp -> ToLinear8		1098238	0					
ANR	1098576	Identifier	sp		1098238	0					
ANR	1098577	Identifier	ToLinear8		1098238	1					
ANR	1098578	Identifier	NULL		1098238	1					
ANR	1098579	ReturnStatement	return 0 ;	533:1:15886:15894	1098238	12	True				
ANR	1098580	PrimaryExpression	0		1098238	0					
ANR	1098581	ExpressionStatement	j = 0	536:4:15907:15912	1098238	24	True				
ANR	1098582	AssignmentExpression	j = 0		1098238	0		=			
ANR	1098583	Identifier	j		1098238	0					
ANR	1098584	PrimaryExpression	0		1098238	1					
ANR	1098585	ForStatement	for ( i = 0 ; i < nlin ; i ++ )		1098238	25					
ANR	1098586	ForInit	i = 0 ;	538:9:15924:15929	1098238	0	True				
ANR	1098587	AssignmentExpression	i = 0		1098238	0		=			
ANR	1098588	Identifier	i		1098238	0					
ANR	1098589	PrimaryExpression	0		1098238	1					
ANR	1098590	Condition	i < nlin	538:16:15931:15938	1098238	1	True				
ANR	1098591	RelationalExpression	i < nlin		1098238	0		<			
ANR	1098592	Identifier	i		1098238	0					
ANR	1098593	Identifier	nlin		1098238	1					
ANR	1098594	PostIncDecOperationExpression	i ++	538:26:15941:15943	1098238	2	True				
ANR	1098595	Identifier	i		1098238	0					
ANR	1098596	IncDec	++		1098238	1					
ANR	1098597	CompoundStatement		58:32:2063:2063	1098238	3					
ANR	1098598	ExpressionStatement	v = i * linstep	539:1:15950:15965	1098238	0	True				
ANR	1098599	AssignmentExpression	v = i * linstep		1098238	0		=			
ANR	1098600	Identifier	v		1098238	0					
ANR	1098601	MultiplicativeExpression	i * linstep		1098238	1		*			
ANR	1098602	Identifier	i		1098238	0					
ANR	1098603	Identifier	linstep		1098238	1					
ANR	1098604	ExpressionStatement	ToLinearF [ j ++ ] = ( float ) v	540:1:15968:15993	1098238	1	True				
ANR	1098605	AssignmentExpression	ToLinearF [ j ++ ] = ( float ) v		1098238	0		=			
ANR	1098606	ArrayIndexing	ToLinearF [ j ++ ]		1098238	0					
ANR	1098607	Identifier	ToLinearF		1098238	0					
ANR	1098608	PostIncDecOperationExpression	j ++		1098238	1					
ANR	1098609	Identifier	j		1098238	0					
ANR	1098610	IncDec	++		1098238	1					
ANR	1098611	CastExpression	( float ) v		1098238	1					
ANR	1098612	CastTarget	float		1098238	0					
ANR	1098613	Identifier	v		1098238	1					
ANR	1098614	ForStatement	for ( i = nlin ; i < TSIZE ; i ++ )		1098238	26					
ANR	1098615	ForInit	i = nlin ;	543:9:16011:16019	1098238	0	True				
ANR	1098616	AssignmentExpression	i = nlin		1098238	0		=			
ANR	1098617	Identifier	i		1098238	0					
ANR	1098618	Identifier	nlin		1098238	1					
ANR	1098619	Condition	i < TSIZE	543:19:16021:16029	1098238	1	True				
ANR	1098620	RelationalExpression	i < TSIZE		1098238	0		<			
ANR	1098621	Identifier	i		1098238	0					
ANR	1098622	Identifier	TSIZE		1098238	1					
ANR	1098623	PostIncDecOperationExpression	i ++	543:30:16032:16034	1098238	2	True				
ANR	1098624	Identifier	i		1098238	0					
ANR	1098625	IncDec	++		1098238	1					
ANR	1098626	ExpressionStatement	ToLinearF [ j ++ ] = ( float ) ( b * exp ( c * i ) )	544:1:16038:16074	1098238	3	True				
ANR	1098627	AssignmentExpression	ToLinearF [ j ++ ] = ( float ) ( b * exp ( c * i ) )		1098238	0		=			
ANR	1098628	ArrayIndexing	ToLinearF [ j ++ ]		1098238	0					
ANR	1098629	Identifier	ToLinearF		1098238	0					
ANR	1098630	PostIncDecOperationExpression	j ++		1098238	1					
ANR	1098631	Identifier	j		1098238	0					
ANR	1098632	IncDec	++		1098238	1					
ANR	1098633	CastExpression	( float ) ( b * exp ( c * i ) )		1098238	1					
ANR	1098634	CastTarget	float		1098238	0					
ANR	1098635	MultiplicativeExpression	b * exp ( c * i )		1098238	1		*			
ANR	1098636	Identifier	b		1098238	0					
ANR	1098637	CallExpression	exp ( c * i )		1098238	1					
ANR	1098638	Callee	exp		1098238	0					
ANR	1098639	Identifier	exp		1098238	0					
ANR	1098640	ArgumentList	c * i		1098238	1					
ANR	1098641	Argument	c * i		1098238	0					
ANR	1098642	MultiplicativeExpression	c * i		1098238	0		*			
ANR	1098643	Identifier	c		1098238	0					
ANR	1098644	Identifier	i		1098238	1					
ANR	1098645	ExpressionStatement	ToLinearF [ 2048 ] = ToLinearF [ 2047 ]	546:4:16081:16114	1098238	27	True				
ANR	1098646	AssignmentExpression	ToLinearF [ 2048 ] = ToLinearF [ 2047 ]		1098238	0		=			
ANR	1098647	ArrayIndexing	ToLinearF [ 2048 ]		1098238	0					
ANR	1098648	Identifier	ToLinearF		1098238	0					
ANR	1098649	PrimaryExpression	2048		1098238	1					
ANR	1098650	ArrayIndexing	ToLinearF [ 2047 ]		1098238	1					
ANR	1098651	Identifier	ToLinearF		1098238	0					
ANR	1098652	PrimaryExpression	2047		1098238	1					
ANR	1098653	ForStatement	for ( i = 0 ; i < TSIZEP1 ; i ++ )		1098238	28					
ANR	1098654	ForInit	i = 0 ;	548:9:16126:16131	1098238	0	True				
ANR	1098655	AssignmentExpression	i = 0		1098238	0		=			
ANR	1098656	Identifier	i		1098238	0					
ANR	1098657	PrimaryExpression	0		1098238	1					
ANR	1098658	Condition	i < TSIZEP1	548:16:16133:16143	1098238	1	True				
ANR	1098659	RelationalExpression	i < TSIZEP1		1098238	0		<			
ANR	1098660	Identifier	i		1098238	0					
ANR	1098661	Identifier	TSIZEP1		1098238	1					
ANR	1098662	PostIncDecOperationExpression	i ++	548:29:16146:16148	1098238	2	True				
ANR	1098663	Identifier	i		1098238	0					
ANR	1098664	IncDec	++		1098238	1					
ANR	1098665	CompoundStatement		68:35:2268:2268	1098238	3					
ANR	1098666	ExpressionStatement	v = ToLinearF [ i ] * 65535.0 + 0.5	549:1:16155:16185	1098238	0	True				
ANR	1098667	AssignmentExpression	v = ToLinearF [ i ] * 65535.0 + 0.5		1098238	0		=			
ANR	1098668	Identifier	v		1098238	0					
ANR	1098669	AdditiveExpression	ToLinearF [ i ] * 65535.0 + 0.5		1098238	1		+			
ANR	1098670	MultiplicativeExpression	ToLinearF [ i ] * 65535.0		1098238	0		*			
ANR	1098671	ArrayIndexing	ToLinearF [ i ]		1098238	0					
ANR	1098672	Identifier	ToLinearF		1098238	0					
ANR	1098673	Identifier	i		1098238	1					
ANR	1098674	PrimaryExpression	65535.0		1098238	1					
ANR	1098675	PrimaryExpression	0.5		1098238	1					
ANR	1098676	ExpressionStatement	ToLinear16 [ i ] = ( v > 65535.0 ) ? 65535 : ( uint16 ) v	550:1:16188:16237	1098238	1	True				
ANR	1098677	AssignmentExpression	ToLinear16 [ i ] = ( v > 65535.0 ) ? 65535 : ( uint16 ) v		1098238	0		=			
ANR	1098678	ArrayIndexing	ToLinear16 [ i ]		1098238	0					
ANR	1098679	Identifier	ToLinear16		1098238	0					
ANR	1098680	Identifier	i		1098238	1					
ANR	1098681	ConditionalExpression	( v > 65535.0 ) ? 65535 : ( uint16 ) v		1098238	1					
ANR	1098682	Condition	v > 65535.0		1098238	0					
ANR	1098683	RelationalExpression	v > 65535.0		1098238	0		>			
ANR	1098684	Identifier	v		1098238	0					
ANR	1098685	PrimaryExpression	65535.0		1098238	1					
ANR	1098686	PrimaryExpression	65535		1098238	1					
ANR	1098687	CastExpression	( uint16 ) v		1098238	2					
ANR	1098688	CastTarget	uint16		1098238	0					
ANR	1098689	Identifier	v		1098238	1					
ANR	1098690	ExpressionStatement	v = ToLinearF [ i ] * 255.0 + 0.5	551:1:16240:16269	1098238	2	True				
ANR	1098691	AssignmentExpression	v = ToLinearF [ i ] * 255.0 + 0.5		1098238	0		=			
ANR	1098692	Identifier	v		1098238	0					
ANR	1098693	AdditiveExpression	ToLinearF [ i ] * 255.0 + 0.5		1098238	1		+			
ANR	1098694	MultiplicativeExpression	ToLinearF [ i ] * 255.0		1098238	0		*			
ANR	1098695	ArrayIndexing	ToLinearF [ i ]		1098238	0					
ANR	1098696	Identifier	ToLinearF		1098238	0					
ANR	1098697	Identifier	i		1098238	1					
ANR	1098698	PrimaryExpression	255.0		1098238	1					
ANR	1098699	PrimaryExpression	0.5		1098238	1					
ANR	1098700	ExpressionStatement	ToLinear8 [ i ] = ( v > 255.0 ) ? 255 : ( unsigned char ) v	552:1:16272:16324	1098238	3	True				
ANR	1098701	AssignmentExpression	ToLinear8 [ i ] = ( v > 255.0 ) ? 255 : ( unsigned char ) v		1098238	0		=			
ANR	1098702	ArrayIndexing	ToLinear8 [ i ]		1098238	0					
ANR	1098703	Identifier	ToLinear8		1098238	0					
ANR	1098704	Identifier	i		1098238	1					
ANR	1098705	ConditionalExpression	( v > 255.0 ) ? 255 : ( unsigned char ) v		1098238	1					
ANR	1098706	Condition	v > 255.0		1098238	0					
ANR	1098707	RelationalExpression	v > 255.0		1098238	0		>			
ANR	1098708	Identifier	v		1098238	0					
ANR	1098709	PrimaryExpression	255.0		1098238	1					
ANR	1098710	PrimaryExpression	255		1098238	1					
ANR	1098711	CastExpression	( unsigned char ) v		1098238	2					
ANR	1098712	CastTarget	unsigned char		1098238	0					
ANR	1098713	Identifier	v		1098238	1					
ANR	1098714	ExpressionStatement	j = 0	555:4:16337:16342	1098238	29	True				
ANR	1098715	AssignmentExpression	j = 0		1098238	0		=			
ANR	1098716	Identifier	j		1098238	0					
ANR	1098717	PrimaryExpression	0		1098238	1					
ANR	1098718	ForStatement	for ( i = 0 ; i < lt2size ; i ++ )		1098238	30					
ANR	1098719	ForInit	i = 0 ;	556:9:16353:16358	1098238	0	True				
ANR	1098720	AssignmentExpression	i = 0		1098238	0		=			
ANR	1098721	Identifier	i		1098238	0					
ANR	1098722	PrimaryExpression	0		1098238	1					
ANR	1098723	Condition	i < lt2size	556:16:16360:16370	1098238	1	True				
ANR	1098724	RelationalExpression	i < lt2size		1098238	0		<			
ANR	1098725	Identifier	i		1098238	0					
ANR	1098726	Identifier	lt2size		1098238	1					
ANR	1098727	PostIncDecOperationExpression	i ++	556:29:16373:16375	1098238	2	True				
ANR	1098728	Identifier	i		1098238	0					
ANR	1098729	IncDec	++		1098238	1					
ANR	1098730	CompoundStatement		76:35:2495:2495	1098238	3					
ANR	1098731	IfStatement	if ( ( i * linstep ) * ( i * linstep ) > ToLinearF [ j ] * ToLinearF [ j + 1 ] )		1098238	0					
ANR	1098732	Condition	( i * linstep ) * ( i * linstep ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]	557:5:16386:16438	1098238	0	True				
ANR	1098733	RelationalExpression	( i * linstep ) * ( i * linstep ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]		1098238	0		>			
ANR	1098734	MultiplicativeExpression	( i * linstep ) * ( i * linstep )		1098238	0		*			
ANR	1098735	MultiplicativeExpression	i * linstep		1098238	0		*			
ANR	1098736	Identifier	i		1098238	0					
ANR	1098737	Identifier	linstep		1098238	1					
ANR	1098738	MultiplicativeExpression	i * linstep		1098238	1		*			
ANR	1098739	Identifier	i		1098238	0					
ANR	1098740	Identifier	linstep		1098238	1					
ANR	1098741	MultiplicativeExpression	ToLinearF [ j ] * ToLinearF [ j + 1 ]		1098238	1		*			
ANR	1098742	ArrayIndexing	ToLinearF [ j ]		1098238	0					
ANR	1098743	Identifier	ToLinearF		1098238	0					
ANR	1098744	Identifier	j		1098238	1					
ANR	1098745	ArrayIndexing	ToLinearF [ j + 1 ]		1098238	1					
ANR	1098746	Identifier	ToLinearF		1098238	0					
ANR	1098747	AdditiveExpression	j + 1		1098238	1		+			
ANR	1098748	Identifier	j		1098238	0					
ANR	1098749	PrimaryExpression	1		1098238	1					
ANR	1098750	ExpressionStatement	j ++	558:5:16446:16449	1098238	1	True				
ANR	1098751	PostIncDecOperationExpression	j ++		1098238	0					
ANR	1098752	Identifier	j		1098238	0					
ANR	1098753	IncDec	++		1098238	1					
ANR	1098754	ExpressionStatement	FromLT2 [ i ] = j	559:1:16452:16466	1098238	1	True				
ANR	1098755	AssignmentExpression	FromLT2 [ i ] = j		1098238	0		=			
ANR	1098756	ArrayIndexing	FromLT2 [ i ]		1098238	0					
ANR	1098757	Identifier	FromLT2		1098238	0					
ANR	1098758	Identifier	i		1098238	1					
ANR	1098759	Identifier	j		1098238	1					
ANR	1098760	ExpressionStatement	j = 0	567:4:16658:16663	1098238	31	True				
ANR	1098761	AssignmentExpression	j = 0		1098238	0		=			
ANR	1098762	Identifier	j		1098238	0					
ANR	1098763	PrimaryExpression	0		1098238	1					
ANR	1098764	ForStatement	for ( i = 0 ; i < 16384 ; i ++ )		1098238	32					
ANR	1098765	ForInit	i = 0 ;	568:9:16674:16679	1098238	0	True				
ANR	1098766	AssignmentExpression	i = 0		1098238	0		=			
ANR	1098767	Identifier	i		1098238	0					
ANR	1098768	PrimaryExpression	0		1098238	1					
ANR	1098769	Condition	i < 16384	568:16:16681:16689	1098238	1	True				
ANR	1098770	RelationalExpression	i < 16384		1098238	0		<			
ANR	1098771	Identifier	i		1098238	0					
ANR	1098772	PrimaryExpression	16384		1098238	1					
ANR	1098773	PostIncDecOperationExpression	i ++	568:27:16692:16694	1098238	2	True				
ANR	1098774	Identifier	i		1098238	0					
ANR	1098775	IncDec	++		1098238	1					
ANR	1098776	CompoundStatement		88:33:2814:2814	1098238	3					
ANR	1098777	WhileStatement	while ( ( i / 16383. ) * ( i / 16383. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ] )		1098238	0					
ANR	1098778	Condition	( i / 16383. ) * ( i / 16383. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]	569:8:16708:16758	1098238	0	True				
ANR	1098779	RelationalExpression	( i / 16383. ) * ( i / 16383. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]		1098238	0		>			
ANR	1098780	MultiplicativeExpression	( i / 16383. ) * ( i / 16383. )		1098238	0		*			
ANR	1098781	MultiplicativeExpression	i / 16383.		1098238	0		/			
ANR	1098782	Identifier	i		1098238	0					
ANR	1098783	PrimaryExpression	16383.		1098238	1					
ANR	1098784	MultiplicativeExpression	i / 16383.		1098238	1		/			
ANR	1098785	Identifier	i		1098238	0					
ANR	1098786	PrimaryExpression	16383.		1098238	1					
ANR	1098787	MultiplicativeExpression	ToLinearF [ j ] * ToLinearF [ j + 1 ]		1098238	1		*			
ANR	1098788	ArrayIndexing	ToLinearF [ j ]		1098238	0					
ANR	1098789	Identifier	ToLinearF		1098238	0					
ANR	1098790	Identifier	j		1098238	1					
ANR	1098791	ArrayIndexing	ToLinearF [ j + 1 ]		1098238	1					
ANR	1098792	Identifier	ToLinearF		1098238	0					
ANR	1098793	AdditiveExpression	j + 1		1098238	1		+			
ANR	1098794	Identifier	j		1098238	0					
ANR	1098795	PrimaryExpression	1		1098238	1					
ANR	1098796	ExpressionStatement	j ++	570:5:16766:16769	1098238	1	True				
ANR	1098797	PostIncDecOperationExpression	j ++		1098238	0					
ANR	1098798	Identifier	j		1098238	0					
ANR	1098799	IncDec	++		1098238	1					
ANR	1098800	ExpressionStatement	From14 [ i ] = j	571:1:16772:16785	1098238	1	True				
ANR	1098801	AssignmentExpression	From14 [ i ] = j		1098238	0		=			
ANR	1098802	ArrayIndexing	From14 [ i ]		1098238	0					
ANR	1098803	Identifier	From14		1098238	0					
ANR	1098804	Identifier	i		1098238	1					
ANR	1098805	Identifier	j		1098238	1					
ANR	1098806	ExpressionStatement	j = 0	574:4:16798:16803	1098238	33	True				
ANR	1098807	AssignmentExpression	j = 0		1098238	0		=			
ANR	1098808	Identifier	j		1098238	0					
ANR	1098809	PrimaryExpression	0		1098238	1					
ANR	1098810	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		1098238	34					
ANR	1098811	ForInit	i = 0 ;	575:9:16814:16819	1098238	0	True				
ANR	1098812	AssignmentExpression	i = 0		1098238	0		=			
ANR	1098813	Identifier	i		1098238	0					
ANR	1098814	PrimaryExpression	0		1098238	1					
ANR	1098815	Condition	i < 256	575:16:16821:16827	1098238	1	True				
ANR	1098816	RelationalExpression	i < 256		1098238	0		<			
ANR	1098817	Identifier	i		1098238	0					
ANR	1098818	PrimaryExpression	256		1098238	1					
ANR	1098819	PostIncDecOperationExpression	i ++	575:25:16830:16832	1098238	2	True				
ANR	1098820	Identifier	i		1098238	0					
ANR	1098821	IncDec	++		1098238	1					
ANR	1098822	CompoundStatement		95:31:2952:2952	1098238	3					
ANR	1098823	WhileStatement	while ( ( i / 255. ) * ( i / 255. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ] )		1098238	0					
ANR	1098824	Condition	( i / 255. ) * ( i / 255. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]	576:8:16846:16892	1098238	0	True				
ANR	1098825	RelationalExpression	( i / 255. ) * ( i / 255. ) > ToLinearF [ j ] * ToLinearF [ j + 1 ]		1098238	0		>			
ANR	1098826	MultiplicativeExpression	( i / 255. ) * ( i / 255. )		1098238	0		*			
ANR	1098827	MultiplicativeExpression	i / 255.		1098238	0		/			
ANR	1098828	Identifier	i		1098238	0					
ANR	1098829	PrimaryExpression	255.		1098238	1					
ANR	1098830	MultiplicativeExpression	i / 255.		1098238	1		/			
ANR	1098831	Identifier	i		1098238	0					
ANR	1098832	PrimaryExpression	255.		1098238	1					
ANR	1098833	MultiplicativeExpression	ToLinearF [ j ] * ToLinearF [ j + 1 ]		1098238	1		*			
ANR	1098834	ArrayIndexing	ToLinearF [ j ]		1098238	0					
ANR	1098835	Identifier	ToLinearF		1098238	0					
ANR	1098836	Identifier	j		1098238	1					
ANR	1098837	ArrayIndexing	ToLinearF [ j + 1 ]		1098238	1					
ANR	1098838	Identifier	ToLinearF		1098238	0					
ANR	1098839	AdditiveExpression	j + 1		1098238	1		+			
ANR	1098840	Identifier	j		1098238	0					
ANR	1098841	PrimaryExpression	1		1098238	1					
ANR	1098842	ExpressionStatement	j ++	577:5:16900:16903	1098238	1	True				
ANR	1098843	PostIncDecOperationExpression	j ++		1098238	0					
ANR	1098844	Identifier	j		1098238	0					
ANR	1098845	IncDec	++		1098238	1					
ANR	1098846	ExpressionStatement	From8 [ i ] = j	578:1:16906:16918	1098238	1	True				
ANR	1098847	AssignmentExpression	From8 [ i ] = j		1098238	0		=			
ANR	1098848	ArrayIndexing	From8 [ i ]		1098238	0					
ANR	1098849	Identifier	From8		1098238	0					
ANR	1098850	Identifier	i		1098238	1					
ANR	1098851	Identifier	j		1098238	1					
ANR	1098852	ExpressionStatement	Fltsize = ( float ) ( lt2size / 2 )	581:4:16931:16959	1098238	35	True				
ANR	1098853	AssignmentExpression	Fltsize = ( float ) ( lt2size / 2 )		1098238	0		=			
ANR	1098854	Identifier	Fltsize		1098238	0					
ANR	1098855	CastExpression	( float ) ( lt2size / 2 )		1098238	1					
ANR	1098856	CastTarget	float		1098238	0					
ANR	1098857	MultiplicativeExpression	lt2size / 2		1098238	1		/			
ANR	1098858	Identifier	lt2size		1098238	0					
ANR	1098859	PrimaryExpression	2		1098238	1					
ANR	1098860	ExpressionStatement	sp -> ToLinearF = ToLinearF	583:4:16966:16991	1098238	36	True				
ANR	1098861	AssignmentExpression	sp -> ToLinearF = ToLinearF		1098238	0		=			
ANR	1098862	PtrMemberAccess	sp -> ToLinearF		1098238	0					
ANR	1098863	Identifier	sp		1098238	0					
ANR	1098864	Identifier	ToLinearF		1098238	1					
ANR	1098865	Identifier	ToLinearF		1098238	1					
ANR	1098866	ExpressionStatement	sp -> ToLinear16 = ToLinear16	584:4:16997:17024	1098238	37	True				
ANR	1098867	AssignmentExpression	sp -> ToLinear16 = ToLinear16		1098238	0		=			
ANR	1098868	PtrMemberAccess	sp -> ToLinear16		1098238	0					
ANR	1098869	Identifier	sp		1098238	0					
ANR	1098870	Identifier	ToLinear16		1098238	1					
ANR	1098871	Identifier	ToLinear16		1098238	1					
ANR	1098872	ExpressionStatement	sp -> ToLinear8 = ToLinear8	585:4:17030:17055	1098238	38	True				
ANR	1098873	AssignmentExpression	sp -> ToLinear8 = ToLinear8		1098238	0		=			
ANR	1098874	PtrMemberAccess	sp -> ToLinear8		1098238	0					
ANR	1098875	Identifier	sp		1098238	0					
ANR	1098876	Identifier	ToLinear8		1098238	1					
ANR	1098877	Identifier	ToLinear8		1098238	1					
ANR	1098878	ExpressionStatement	sp -> FromLT2 = FromLT2	586:4:17061:17082	1098238	39	True				
ANR	1098879	AssignmentExpression	sp -> FromLT2 = FromLT2		1098238	0		=			
ANR	1098880	PtrMemberAccess	sp -> FromLT2		1098238	0					
ANR	1098881	Identifier	sp		1098238	0					
ANR	1098882	Identifier	FromLT2		1098238	1					
ANR	1098883	Identifier	FromLT2		1098238	1					
ANR	1098884	ExpressionStatement	sp -> From14 = From14	587:4:17088:17107	1098238	40	True				
ANR	1098885	AssignmentExpression	sp -> From14 = From14		1098238	0		=			
ANR	1098886	PtrMemberAccess	sp -> From14		1098238	0					
ANR	1098887	Identifier	sp		1098238	0					
ANR	1098888	Identifier	From14		1098238	1					
ANR	1098889	Identifier	From14		1098238	1					
ANR	1098890	ExpressionStatement	sp -> From8 = From8	588:4:17113:17130	1098238	41	True				
ANR	1098891	AssignmentExpression	sp -> From8 = From8		1098238	0		=			
ANR	1098892	PtrMemberAccess	sp -> From8		1098238	0					
ANR	1098893	Identifier	sp		1098238	0					
ANR	1098894	Identifier	From8		1098238	1					
ANR	1098895	Identifier	From8		1098238	1					
ANR	1098896	ReturnStatement	return 1 ;	590:4:17137:17145	1098238	42	True				
ANR	1098897	PrimaryExpression	1		1098238	0					
ANR	1098898	ReturnType	static int		1098238	1					
ANR	1098899	Identifier	PixarLogMakeTables		1098238	2					
ANR	1098900	ParameterList	PixarLogState * sp		1098238	3					
ANR	1098901	Parameter	PixarLogState * sp	480:19:13864:13880	1098238	0	True				
ANR	1098902	ParameterType	PixarLogState *		1098238	0					
ANR	1098903	Identifier	sp		1098238	1					
ANR	1098904	CFGEntryNode	ENTRY		1098238		True				
ANR	1098905	CFGExitNode	EXIT		1098238		True				
ANR	1098906	Symbol	From14		1098238						
ANR	1098907	Symbol	* sp		1098238						
ANR	1098908	Symbol	* ToLinear16		1098238						
ANR	1098909	Symbol	* FromLT2		1098238						
ANR	1098910	Symbol	ToLinear8		1098238						
ANR	1098911	Symbol	sp -> FromLT2		1098238						
ANR	1098912	Symbol	log		1098238						
ANR	1098913	Symbol	* From14		1098238						
ANR	1098914	Symbol	ONE		1098238						
ANR	1098915	Symbol	LogK1		1098238						
ANR	1098916	Symbol	* From8		1098238						
ANR	1098917	Symbol	RATIO		1098238						
ANR	1098918	Symbol	LogK2		1098238						
ANR	1098919	Symbol	linstep		1098238						
ANR	1098920	Symbol	sp -> From8		1098238						
ANR	1098921	Symbol	nlin		1098238						
ANR	1098922	Symbol	TSIZE		1098238						
ANR	1098923	Symbol	Fltsize		1098238						
ANR	1098924	Symbol	exp		1098238						
ANR	1098925	Symbol	sp		1098238						
ANR	1098926	Symbol	From8		1098238						
ANR	1098927	Symbol	lt2size		1098238						
ANR	1098928	Symbol	b		1098238						
ANR	1098929	Symbol	c		1098238						
ANR	1098930	Symbol	NULL		1098238						
ANR	1098931	Symbol	i		1098238						
ANR	1098932	Symbol	j		1098238						
ANR	1098933	Symbol	TSIZEP1		1098238						
ANR	1098934	Symbol	FromLT2		1098238						
ANR	1098935	Symbol	sp -> ToLinear8		1098238						
ANR	1098936	Symbol	* ToLinear8		1098238						
ANR	1098937	Symbol	sp -> ToLinear16		1098238						
ANR	1098938	Symbol	* i		1098238						
ANR	1098939	Symbol	* j		1098238						
ANR	1098940	Symbol	v		1098238						
ANR	1098941	Symbol	sp -> From14		1098238						
ANR	1098942	Symbol	_TIFFmalloc		1098238						
ANR	1098943	Symbol	ToLinear16		1098238						
ANR	1098944	Symbol	sp -> ToLinearF		1098238						
ANR	1098945	Symbol	ToLinearF		1098238						
ANR	1098946	Symbol	* ToLinearF		1098238						
ANR	1098947	DeclStmt									
ANR	1098948	Decl							int	"int ( TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s )"	PixarLogEncode
ANR	1098949	DeclStmt									
ANR	1098950	Decl							int	"int ( TIFF * tif , uint8 * op , tmsize_t occ , uint16 s )"	PixarLogDecode
ANR	1098951	Function	PixarLogGuessDataFmt	601:0:17455:18307							
ANR	1098952	FunctionDef	PixarLogGuessDataFmt (TIFFDirectory * td)		1098951	0					
ANR	1098953	CompoundStatement		603:0:17506:18307	1098951	0					
ANR	1098954	IdentifierDeclStatement	int guess = PIXARLOGDATAFMT_UNKNOWN ;	604:1:17509:17544	1098951	0	True				
ANR	1098955	IdentifierDecl	guess = PIXARLOGDATAFMT_UNKNOWN		1098951	0					
ANR	1098956	IdentifierDeclType	int		1098951	0					
ANR	1098957	Identifier	guess		1098951	1					
ANR	1098958	AssignmentExpression	guess = PIXARLOGDATAFMT_UNKNOWN		1098951	2		=			
ANR	1098959	Identifier	PIXARLOGDATAFMT_UNKNOWN		1098951	0					
ANR	1098960	Identifier	PIXARLOGDATAFMT_UNKNOWN		1098951	1					
ANR	1098961	IdentifierDeclStatement	int format = td -> td_sampleformat ;	605:1:17547:17579	1098951	1	True				
ANR	1098962	IdentifierDecl	format = td -> td_sampleformat		1098951	0					
ANR	1098963	IdentifierDeclType	int		1098951	0					
ANR	1098964	Identifier	format		1098951	1					
ANR	1098965	AssignmentExpression	format = td -> td_sampleformat		1098951	2		=			
ANR	1098966	Identifier	format		1098951	0					
ANR	1098967	PtrMemberAccess	td -> td_sampleformat		1098951	1					
ANR	1098968	Identifier	td		1098951	0					
ANR	1098969	Identifier	td_sampleformat		1098951	1					
ANR	1098970	SwitchStatement	switch ( td -> td_bitspersample )		1098951	2					
ANR	1098971	Condition	td -> td_bitspersample	610:9:17688:17707	1098951	0	True				
ANR	1098972	PtrMemberAccess	td -> td_bitspersample		1098951	0					
ANR	1098973	Identifier	td		1098951	0					
ANR	1098974	Identifier	td_bitspersample		1098951	1					
ANR	1098975	CompoundStatement		8:31:203:203	1098951	1					
ANR	1098976	Label	case 32 :	611:2:17714:17721	1098951	0	True				
ANR	1098977	IfStatement	if ( format == SAMPLEFORMAT_IEEEFP )		1098951	1					
ANR	1098978	Condition	format == SAMPLEFORMAT_IEEEFP	612:6:17729:17757	1098951	0	True				
ANR	1098979	EqualityExpression	format == SAMPLEFORMAT_IEEEFP		1098951	0		==			
ANR	1098980	Identifier	format		1098951	0					
ANR	1098981	Identifier	SAMPLEFORMAT_IEEEFP		1098951	1					
ANR	1098982	ExpressionStatement	guess = PIXARLOGDATAFMT_FLOAT	613:3:17763:17792	1098951	1	True				
ANR	1098983	AssignmentExpression	guess = PIXARLOGDATAFMT_FLOAT		1098951	0		=			
ANR	1098984	Identifier	guess		1098951	0					
ANR	1098985	Identifier	PIXARLOGDATAFMT_FLOAT		1098951	1					
ANR	1098986	BreakStatement	break ;	614:2:17796:17801	1098951	2	True				
ANR	1098987	Label	case 16 :	615:2:17805:17812	1098951	3	True				
ANR	1098988	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT )		1098951	4					
ANR	1098989	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT	616:6:17820:17877	1098951	0	True				
ANR	1098990	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT		1098951	0		||			
ANR	1098991	EqualityExpression	format == SAMPLEFORMAT_VOID		1098951	0		==			
ANR	1098992	Identifier	format		1098951	0					
ANR	1098993	Identifier	SAMPLEFORMAT_VOID		1098951	1					
ANR	1098994	EqualityExpression	format == SAMPLEFORMAT_UINT		1098951	1		==			
ANR	1098995	Identifier	format		1098951	0					
ANR	1098996	Identifier	SAMPLEFORMAT_UINT		1098951	1					
ANR	1098997	ExpressionStatement	guess = PIXARLOGDATAFMT_16BIT	617:3:17883:17912	1098951	1	True				
ANR	1098998	AssignmentExpression	guess = PIXARLOGDATAFMT_16BIT		1098951	0		=			
ANR	1098999	Identifier	guess		1098951	0					
ANR	1099000	Identifier	PIXARLOGDATAFMT_16BIT		1098951	1					
ANR	1099001	BreakStatement	break ;	618:2:17916:17921	1098951	5	True				
ANR	1099002	Label	case 12 :	619:2:17925:17932	1098951	6	True				
ANR	1099003	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_INT )		1098951	7					
ANR	1099004	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_INT	620:6:17940:17996	1098951	0	True				
ANR	1099005	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_INT		1098951	0		||			
ANR	1099006	EqualityExpression	format == SAMPLEFORMAT_VOID		1098951	0		==			
ANR	1099007	Identifier	format		1098951	0					
ANR	1099008	Identifier	SAMPLEFORMAT_VOID		1098951	1					
ANR	1099009	EqualityExpression	format == SAMPLEFORMAT_INT		1098951	1		==			
ANR	1099010	Identifier	format		1098951	0					
ANR	1099011	Identifier	SAMPLEFORMAT_INT		1098951	1					
ANR	1099012	ExpressionStatement	guess = PIXARLOGDATAFMT_12BITPICIO	621:3:18002:18036	1098951	1	True				
ANR	1099013	AssignmentExpression	guess = PIXARLOGDATAFMT_12BITPICIO		1098951	0		=			
ANR	1099014	Identifier	guess		1098951	0					
ANR	1099015	Identifier	PIXARLOGDATAFMT_12BITPICIO		1098951	1					
ANR	1099016	BreakStatement	break ;	622:2:18040:18045	1098951	8	True				
ANR	1099017	Label	case 11 :	623:2:18049:18056	1098951	9	True				
ANR	1099018	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT )		1098951	10					
ANR	1099019	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT	624:6:18064:18121	1098951	0	True				
ANR	1099020	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT		1098951	0		||			
ANR	1099021	EqualityExpression	format == SAMPLEFORMAT_VOID		1098951	0		==			
ANR	1099022	Identifier	format		1098951	0					
ANR	1099023	Identifier	SAMPLEFORMAT_VOID		1098951	1					
ANR	1099024	EqualityExpression	format == SAMPLEFORMAT_UINT		1098951	1		==			
ANR	1099025	Identifier	format		1098951	0					
ANR	1099026	Identifier	SAMPLEFORMAT_UINT		1098951	1					
ANR	1099027	ExpressionStatement	guess = PIXARLOGDATAFMT_11BITLOG	625:3:18127:18159	1098951	1	True				
ANR	1099028	AssignmentExpression	guess = PIXARLOGDATAFMT_11BITLOG		1098951	0		=			
ANR	1099029	Identifier	guess		1098951	0					
ANR	1099030	Identifier	PIXARLOGDATAFMT_11BITLOG		1098951	1					
ANR	1099031	BreakStatement	break ;	626:2:18163:18168	1098951	11	True				
ANR	1099032	Label	case 8 :	627:2:18172:18178	1098951	12	True				
ANR	1099033	IfStatement	if ( format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT )		1098951	13					
ANR	1099034	Condition	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT	628:6:18186:18243	1098951	0	True				
ANR	1099035	OrExpression	format == SAMPLEFORMAT_VOID || format == SAMPLEFORMAT_UINT		1098951	0		||			
ANR	1099036	EqualityExpression	format == SAMPLEFORMAT_VOID		1098951	0		==			
ANR	1099037	Identifier	format		1098951	0					
ANR	1099038	Identifier	SAMPLEFORMAT_VOID		1098951	1					
ANR	1099039	EqualityExpression	format == SAMPLEFORMAT_UINT		1098951	1		==			
ANR	1099040	Identifier	format		1098951	0					
ANR	1099041	Identifier	SAMPLEFORMAT_UINT		1098951	1					
ANR	1099042	ExpressionStatement	guess = PIXARLOGDATAFMT_8BIT	629:3:18249:18277	1098951	1	True				
ANR	1099043	AssignmentExpression	guess = PIXARLOGDATAFMT_8BIT		1098951	0		=			
ANR	1099044	Identifier	guess		1098951	0					
ANR	1099045	Identifier	PIXARLOGDATAFMT_8BIT		1098951	1					
ANR	1099046	BreakStatement	break ;	630:2:18281:18286	1098951	14	True				
ANR	1099047	ReturnStatement	return guess ;	633:1:18293:18305	1098951	3	True				
ANR	1099048	Identifier	guess		1098951	0					
ANR	1099049	ReturnType	static int		1098951	1					
ANR	1099050	Identifier	PixarLogGuessDataFmt		1098951	2					
ANR	1099051	ParameterList	TIFFDirectory * td		1098951	3					
ANR	1099052	Parameter	TIFFDirectory * td	602:21:17487:17503	1098951	0	True				
ANR	1099053	ParameterType	TIFFDirectory *		1098951	0					
ANR	1099054	Identifier	td		1098951	1					
ANR	1099055	CFGEntryNode	ENTRY		1098951		True				
ANR	1099056	CFGExitNode	EXIT		1098951		True				
ANR	1099057	Symbol	SAMPLEFORMAT_UINT		1098951						
ANR	1099058	Symbol	PIXARLOGDATAFMT_FLOAT		1098951						
ANR	1099059	Symbol	PIXARLOGDATAFMT_16BIT		1098951						
ANR	1099060	Symbol	SAMPLEFORMAT_INT		1098951						
ANR	1099061	Symbol	format		1098951						
ANR	1099062	Symbol	PIXARLOGDATAFMT_8BIT		1098951						
ANR	1099063	Symbol	PIXARLOGDATAFMT_11BITLOG		1098951						
ANR	1099064	Symbol	SAMPLEFORMAT_IEEEFP		1098951						
ANR	1099065	Symbol	SAMPLEFORMAT_VOID		1098951						
ANR	1099066	Symbol	PIXARLOGDATAFMT_UNKNOWN		1098951						
ANR	1099067	Symbol	td		1098951						
ANR	1099068	Symbol	guess		1098951						
ANR	1099069	Symbol	td -> td_sampleformat		1098951						
ANR	1099070	Symbol	* td		1098951						
ANR	1099071	Symbol	PIXARLOGDATAFMT_12BITPICIO		1098951						
ANR	1099072	Symbol	td -> td_bitspersample		1098951						
ANR	1099073	Function	multiply_ms	636:0:18310:18452							
ANR	1099074	FunctionDef	"multiply_ms (tmsize_t m1 , tmsize_t m2)"		1099073	0					
ANR	1099075	CompoundStatement		638:0:18364:18452	1099073	0					
ANR	1099076	IdentifierDeclStatement	tmsize_t bytes = m1 * m2 ;	639:1:18367:18391	1099073	0	True				
ANR	1099077	IdentifierDecl	bytes = m1 * m2		1099073	0					
ANR	1099078	IdentifierDeclType	tmsize_t		1099073	0					
ANR	1099079	Identifier	bytes		1099073	1					
ANR	1099080	AssignmentExpression	bytes = m1 * m2		1099073	2		=			
ANR	1099081	Identifier	bytes		1099073	0					
ANR	1099082	MultiplicativeExpression	m1 * m2		1099073	1		*			
ANR	1099083	Identifier	m1		1099073	0					
ANR	1099084	Identifier	m2		1099073	1					
ANR	1099085	IfStatement	if ( m1 && bytes / m1 != m2 )		1099073	1					
ANR	1099086	Condition	m1 && bytes / m1 != m2	641:5:18399:18420	1099073	0	True				
ANR	1099087	AndExpression	m1 && bytes / m1 != m2		1099073	0		&&			
ANR	1099088	Identifier	m1		1099073	0					
ANR	1099089	EqualityExpression	bytes / m1 != m2		1099073	1		!=			
ANR	1099090	MultiplicativeExpression	bytes / m1		1099073	0		/			
ANR	1099091	Identifier	bytes		1099073	0					
ANR	1099092	Identifier	m1		1099073	1					
ANR	1099093	Identifier	m2		1099073	1					
ANR	1099094	ExpressionStatement	bytes = 0	642:2:18425:18434	1099073	1	True				
ANR	1099095	AssignmentExpression	bytes = 0		1099073	0		=			
ANR	1099096	Identifier	bytes		1099073	0					
ANR	1099097	PrimaryExpression	0		1099073	1					
ANR	1099098	ReturnStatement	return bytes ;	644:1:18438:18450	1099073	2	True				
ANR	1099099	Identifier	bytes		1099073	0					
ANR	1099100	ReturnType	static tmsize_t		1099073	1					
ANR	1099101	Identifier	multiply_ms		1099073	2					
ANR	1099102	ParameterList	"tmsize_t m1 , tmsize_t m2"		1099073	3					
ANR	1099103	Parameter	tmsize_t m1	637:12:18338:18348	1099073	0	True				
ANR	1099104	ParameterType	tmsize_t		1099073	0					
ANR	1099105	Identifier	m1		1099073	1					
ANR	1099106	Parameter	tmsize_t m2	637:25:18351:18361	1099073	1	True				
ANR	1099107	ParameterType	tmsize_t		1099073	0					
ANR	1099108	Identifier	m2		1099073	1					
ANR	1099109	CFGEntryNode	ENTRY		1099073		True				
ANR	1099110	CFGExitNode	EXIT		1099073		True				
ANR	1099111	Symbol	m1		1099073						
ANR	1099112	Symbol	m2		1099073						
ANR	1099113	Symbol	bytes		1099073						
ANR	1099114	Function	add_ms	647:0:18455:18704							
ANR	1099115	FunctionDef	"add_ms (tmsize_t m1 , tmsize_t m2)"		1099114	0					
ANR	1099116	CompoundStatement		649:0:18504:18704	1099114	0					
ANR	1099117	IdentifierDeclStatement	tmsize_t bytes = m1 + m2 ;	650:1:18507:18531	1099114	0	True				
ANR	1099118	IdentifierDecl	bytes = m1 + m2		1099114	0					
ANR	1099119	IdentifierDeclType	tmsize_t		1099114	0					
ANR	1099120	Identifier	bytes		1099114	1					
ANR	1099121	AssignmentExpression	bytes = m1 + m2		1099114	2		=			
ANR	1099122	Identifier	bytes		1099114	0					
ANR	1099123	AdditiveExpression	m1 + m2		1099114	1		+			
ANR	1099124	Identifier	m1		1099114	0					
ANR	1099125	Identifier	m2		1099114	1					
ANR	1099126	IfStatement	if ( m1 == 0 || m2 == 0 )		1099114	1					
ANR	1099127	Condition	m1 == 0 || m2 == 0	653:5:18604:18621	1099114	0	True				
ANR	1099128	OrExpression	m1 == 0 || m2 == 0		1099114	0		||			
ANR	1099129	EqualityExpression	m1 == 0		1099114	0		==			
ANR	1099130	Identifier	m1		1099114	0					
ANR	1099131	PrimaryExpression	0		1099114	1					
ANR	1099132	EqualityExpression	m2 == 0		1099114	1		==			
ANR	1099133	Identifier	m2		1099114	0					
ANR	1099134	PrimaryExpression	0		1099114	1					
ANR	1099135	ExpressionStatement	bytes = 0	654:2:18626:18635	1099114	1	True				
ANR	1099136	AssignmentExpression	bytes = 0		1099114	0		=			
ANR	1099137	Identifier	bytes		1099114	0					
ANR	1099138	PrimaryExpression	0		1099114	1					
ANR	1099139	ElseStatement	else		1099114	0					
ANR	1099140	IfStatement	if ( bytes <= m1 || bytes <= m2 )		1099114	0					
ANR	1099141	Condition	bytes <= m1 || bytes <= m2	655:10:18647:18672	1099114	0	True				
ANR	1099142	OrExpression	bytes <= m1 || bytes <= m2		1099114	0		||			
ANR	1099143	RelationalExpression	bytes <= m1		1099114	0		<=			
ANR	1099144	Identifier	bytes		1099114	0					
ANR	1099145	Identifier	m1		1099114	1					
ANR	1099146	RelationalExpression	bytes <= m2		1099114	1		<=			
ANR	1099147	Identifier	bytes		1099114	0					
ANR	1099148	Identifier	m2		1099114	1					
ANR	1099149	ExpressionStatement	bytes = 0	656:2:18677:18686	1099114	1	True				
ANR	1099150	AssignmentExpression	bytes = 0		1099114	0		=			
ANR	1099151	Identifier	bytes		1099114	0					
ANR	1099152	PrimaryExpression	0		1099114	1					
ANR	1099153	ReturnStatement	return bytes ;	658:1:18690:18702	1099114	2	True				
ANR	1099154	Identifier	bytes		1099114	0					
ANR	1099155	ReturnType	static tmsize_t		1099114	1					
ANR	1099156	Identifier	add_ms		1099114	2					
ANR	1099157	ParameterList	"tmsize_t m1 , tmsize_t m2"		1099114	3					
ANR	1099158	Parameter	tmsize_t m1	648:7:18478:18488	1099114	0	True				
ANR	1099159	ParameterType	tmsize_t		1099114	0					
ANR	1099160	Identifier	m1		1099114	1					
ANR	1099161	Parameter	tmsize_t m2	648:20:18491:18501	1099114	1	True				
ANR	1099162	ParameterType	tmsize_t		1099114	0					
ANR	1099163	Identifier	m2		1099114	1					
ANR	1099164	CFGEntryNode	ENTRY		1099114		True				
ANR	1099165	CFGExitNode	EXIT		1099114		True				
ANR	1099166	Symbol	m1		1099114						
ANR	1099167	Symbol	m2		1099114						
ANR	1099168	Symbol	bytes		1099114						
ANR	1099169	Function	PixarLogFixupTags	661:0:18707:18775							
ANR	1099170	FunctionDef	PixarLogFixupTags (TIFF * tif)		1099169	0					
ANR	1099171	CompoundStatement		663:0:18747:18775	1099169	0					
ANR	1099172	ExpressionStatement	( void ) tif	664:1:18750:18760	1099169	0	True				
ANR	1099173	CastExpression	( void ) tif		1099169	0					
ANR	1099174	CastTarget	void		1099169	0					
ANR	1099175	Identifier	tif		1099169	1					
ANR	1099176	ReturnStatement	return ( 1 ) ;	665:1:18763:18773	1099169	1	True				
ANR	1099177	PrimaryExpression	1		1099169	0					
ANR	1099178	ReturnType	static int		1099169	1					
ANR	1099179	Identifier	PixarLogFixupTags		1099169	2					
ANR	1099180	ParameterList	TIFF * tif		1099169	3					
ANR	1099181	Parameter	TIFF * tif	662:18:18736:18744	1099169	0	True				
ANR	1099182	ParameterType	TIFF *		1099169	0					
ANR	1099183	Identifier	tif		1099169	1					
ANR	1099184	CFGEntryNode	ENTRY		1099169		True				
ANR	1099185	CFGExitNode	EXIT		1099169		True				
ANR	1099186	Symbol	tif		1099169						
ANR	1099187	Function	PixarLogSetupDecode	668:0:18778:20225							
ANR	1099188	FunctionDef	PixarLogSetupDecode (TIFF * tif)		1099187	0					
ANR	1099189	CompoundStatement		670:0:18820:20225	1099187	0					
ANR	1099190	Statement	static	671:1:18823:18828	1099187	0	True				
ANR	1099191	IdentifierDeclStatement	"const char module [ ] = ""PixarLogSetupDecode"" ;"	671:8:18830:18873	1099187	1	True				
ANR	1099192	IdentifierDecl	"module [ ] = ""PixarLogSetupDecode"""		1099187	0					
ANR	1099193	IdentifierDeclType	const char [ ]		1099187	0					
ANR	1099194	Identifier	module		1099187	1					
ANR	1099195	AssignmentExpression	"module [ ] = ""PixarLogSetupDecode"""		1099187	2		=			
ANR	1099196	Identifier	module		1099187	0					
ANR	1099197	PrimaryExpression	"""PixarLogSetupDecode"""		1099187	1					
ANR	1099198	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	672:1:18876:18909	1099187	2	True				
ANR	1099199	IdentifierDecl	* td = & tif -> tif_dir		1099187	0					
ANR	1099200	IdentifierDeclType	TIFFDirectory *		1099187	0					
ANR	1099201	Identifier	td		1099187	1					
ANR	1099202	AssignmentExpression	* td = & tif -> tif_dir		1099187	2		=			
ANR	1099203	Identifier	td		1099187	0					
ANR	1099204	UnaryOperationExpression	& tif -> tif_dir		1099187	1					
ANR	1099205	UnaryOperator	&		1099187	0					
ANR	1099206	PtrMemberAccess	tif -> tif_dir		1099187	1					
ANR	1099207	Identifier	tif		1099187	0					
ANR	1099208	Identifier	tif_dir		1099187	1					
ANR	1099209	IdentifierDeclStatement	PixarLogState * sp = DecoderState ( tif ) ;	673:1:18912:18949	1099187	3	True				
ANR	1099210	IdentifierDecl	* sp = DecoderState ( tif )		1099187	0					
ANR	1099211	IdentifierDeclType	PixarLogState *		1099187	0					
ANR	1099212	Identifier	sp		1099187	1					
ANR	1099213	AssignmentExpression	* sp = DecoderState ( tif )		1099187	2		=			
ANR	1099214	Identifier	sp		1099187	0					
ANR	1099215	CallExpression	DecoderState ( tif )		1099187	1					
ANR	1099216	Callee	DecoderState		1099187	0					
ANR	1099217	Identifier	DecoderState		1099187	0					
ANR	1099218	ArgumentList	tif		1099187	1					
ANR	1099219	Argument	tif		1099187	0					
ANR	1099220	Identifier	tif		1099187	0					
ANR	1099221	IdentifierDeclStatement	tmsize_t tbuf_size ;	674:1:18952:18970	1099187	4	True				
ANR	1099222	IdentifierDecl	tbuf_size		1099187	0					
ANR	1099223	IdentifierDeclType	tmsize_t		1099187	0					
ANR	1099224	Identifier	tbuf_size		1099187	1					
ANR	1099225	ExpressionStatement	assert ( sp != NULL )	676:1:18974:18992	1099187	5	True				
ANR	1099226	CallExpression	assert ( sp != NULL )		1099187	0					
ANR	1099227	Callee	assert		1099187	0					
ANR	1099228	Identifier	assert		1099187	0					
ANR	1099229	ArgumentList	sp != NULL		1099187	1					
ANR	1099230	Argument	sp != NULL		1099187	0					
ANR	1099231	EqualityExpression	sp != NULL		1099187	0		!=			
ANR	1099232	Identifier	sp		1099187	0					
ANR	1099233	Identifier	NULL		1099187	1					
ANR	1099234	ExpressionStatement	tif -> tif_postdecode = _TIFFNoPostDecode	680:1:19075:19114	1099187	6	True				
ANR	1099235	AssignmentExpression	tif -> tif_postdecode = _TIFFNoPostDecode		1099187	0		=			
ANR	1099236	PtrMemberAccess	tif -> tif_postdecode		1099187	0					
ANR	1099237	Identifier	tif		1099187	0					
ANR	1099238	Identifier	tif_postdecode		1099187	1					
ANR	1099239	Identifier	_TIFFNoPostDecode		1099187	1					
ANR	1099240	ExpressionStatement	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )	684:1:19182:19273	1099187	7	True				
ANR	1099241	AssignmentExpression	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )		1099187	0		=			
ANR	1099242	PtrMemberAccess	sp -> stride		1099187	0					
ANR	1099243	Identifier	sp		1099187	0					
ANR	1099244	Identifier	stride		1099187	1					
ANR	1099245	ConditionalExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1		1099187	1					
ANR	1099246	Condition	td -> td_planarconfig == PLANARCONFIG_CONTIG		1099187	0					
ANR	1099247	EqualityExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG		1099187	0		==			
ANR	1099248	PtrMemberAccess	td -> td_planarconfig		1099187	0					
ANR	1099249	Identifier	td		1099187	0					
ANR	1099250	Identifier	td_planarconfig		1099187	1					
ANR	1099251	Identifier	PLANARCONFIG_CONTIG		1099187	1					
ANR	1099252	PtrMemberAccess	td -> td_samplesperpixel		1099187	1					
ANR	1099253	Identifier	td		1099187	0					
ANR	1099254	Identifier	td_samplesperpixel		1099187	1					
ANR	1099255	PrimaryExpression	1		1099187	2					
ANR	1099256	ExpressionStatement	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"	686:1:19276:19403	1099187	8	True				
ANR	1099257	AssignmentExpression	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"		1099187	0		=			
ANR	1099258	Identifier	tbuf_size		1099187	0					
ANR	1099259	CallExpression	"multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"		1099187	1					
ANR	1099260	Callee	multiply_ms		1099187	0					
ANR	1099261	Identifier	multiply_ms		1099187	0					
ANR	1099262	ArgumentList	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		1099187	1					
ANR	1099263	Argument	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		1099187	0					
ANR	1099264	CallExpression	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		1099187	0					
ANR	1099265	Callee	multiply_ms		1099187	0					
ANR	1099266	Identifier	multiply_ms		1099187	0					
ANR	1099267	ArgumentList	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		1099187	1					
ANR	1099268	Argument	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		1099187	0					
ANR	1099269	CallExpression	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		1099187	0					
ANR	1099270	Callee	multiply_ms		1099187	0					
ANR	1099271	Identifier	multiply_ms		1099187	0					
ANR	1099272	ArgumentList	sp -> stride		1099187	1					
ANR	1099273	Argument	sp -> stride		1099187	0					
ANR	1099274	PtrMemberAccess	sp -> stride		1099187	0					
ANR	1099275	Identifier	sp		1099187	0					
ANR	1099276	Identifier	stride		1099187	1					
ANR	1099277	Argument	td -> td_imagewidth		1099187	1					
ANR	1099278	PtrMemberAccess	td -> td_imagewidth		1099187	0					
ANR	1099279	Identifier	td		1099187	0					
ANR	1099280	Identifier	td_imagewidth		1099187	1					
ANR	1099281	Argument	td -> td_rowsperstrip		1099187	1					
ANR	1099282	PtrMemberAccess	td -> td_rowsperstrip		1099187	0					
ANR	1099283	Identifier	td		1099187	0					
ANR	1099284	Identifier	td_rowsperstrip		1099187	1					
ANR	1099285	Argument	sizeof ( uint16 )		1099187	1					
ANR	1099286	SizeofExpression	sizeof ( uint16 )		1099187	0					
ANR	1099287	Sizeof	sizeof		1099187	0					
ANR	1099288	SizeofOperand	uint16		1099187	1					
ANR	1099289	ExpressionStatement	"tbuf_size = add_ms ( tbuf_size , sizeof ( uint16 ) * sp -> stride )"	689:1:19463:19521	1099187	9	True				
ANR	1099290	AssignmentExpression	"tbuf_size = add_ms ( tbuf_size , sizeof ( uint16 ) * sp -> stride )"		1099187	0		=			
ANR	1099291	Identifier	tbuf_size		1099187	0					
ANR	1099292	CallExpression	"add_ms ( tbuf_size , sizeof ( uint16 ) * sp -> stride )"		1099187	1					
ANR	1099293	Callee	add_ms		1099187	0					
ANR	1099294	Identifier	add_ms		1099187	0					
ANR	1099295	ArgumentList	tbuf_size		1099187	1					
ANR	1099296	Argument	tbuf_size		1099187	0					
ANR	1099297	Identifier	tbuf_size		1099187	0					
ANR	1099298	Argument	sizeof ( uint16 ) * sp -> stride		1099187	1					
ANR	1099299	MultiplicativeExpression	sizeof ( uint16 ) * sp -> stride		1099187	0		*			
ANR	1099300	SizeofExpression	sizeof ( uint16 )		1099187	0					
ANR	1099301	Sizeof	sizeof		1099187	0					
ANR	1099302	SizeofOperand	uint16		1099187	1					
ANR	1099303	PtrMemberAccess	sp -> stride		1099187	1					
ANR	1099304	Identifier	sp		1099187	0					
ANR	1099305	Identifier	stride		1099187	1					
ANR	1099306	IfStatement	if ( tbuf_size == 0 )		1099187	10					
ANR	1099307	Condition	tbuf_size == 0	690:5:19528:19541	1099187	0	True				
ANR	1099308	EqualityExpression	tbuf_size == 0		1099187	0		==			
ANR	1099309	Identifier	tbuf_size		1099187	0					
ANR	1099310	PrimaryExpression	0		1099187	1					
ANR	1099311	ReturnStatement	return ( 0 ) ;	691:2:19546:19556	1099187	1	True				
ANR	1099312	PrimaryExpression	0		1099187	0					
ANR	1099313	ExpressionStatement	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )	692:1:19639:19683	1099187	11	True				
ANR	1099314	AssignmentExpression	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )		1099187	0		=			
ANR	1099315	PtrMemberAccess	sp -> tbuf		1099187	0					
ANR	1099316	Identifier	sp		1099187	0					
ANR	1099317	Identifier	tbuf		1099187	1					
ANR	1099318	CastExpression	( uint16 * ) _TIFFmalloc ( tbuf_size )		1099187	1					
ANR	1099319	CastTarget	uint16 *		1099187	0					
ANR	1099320	CallExpression	_TIFFmalloc ( tbuf_size )		1099187	1					
ANR	1099321	Callee	_TIFFmalloc		1099187	0					
ANR	1099322	Identifier	_TIFFmalloc		1099187	0					
ANR	1099323	ArgumentList	tbuf_size		1099187	1					
ANR	1099324	Argument	tbuf_size		1099187	0					
ANR	1099325	Identifier	tbuf_size		1099187	0					
ANR	1099326	IfStatement	if ( sp -> tbuf == NULL )		1099187	12					
ANR	1099327	Condition	sp -> tbuf == NULL	693:5:19690:19705	1099187	0	True				
ANR	1099328	EqualityExpression	sp -> tbuf == NULL		1099187	0		==			
ANR	1099329	PtrMemberAccess	sp -> tbuf		1099187	0					
ANR	1099330	Identifier	sp		1099187	0					
ANR	1099331	Identifier	tbuf		1099187	1					
ANR	1099332	Identifier	NULL		1099187	1					
ANR	1099333	ReturnStatement	return ( 0 ) ;	694:2:19710:19720	1099187	1	True				
ANR	1099334	PrimaryExpression	0		1099187	0					
ANR	1099335	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		1099187	13					
ANR	1099336	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	695:5:19727:19769	1099187	0	True				
ANR	1099337	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		1099187	0		==			
ANR	1099338	PtrMemberAccess	sp -> user_datafmt		1099187	0					
ANR	1099339	Identifier	sp		1099187	0					
ANR	1099340	Identifier	user_datafmt		1099187	1					
ANR	1099341	Identifier	PIXARLOGDATAFMT_UNKNOWN		1099187	1					
ANR	1099342	ExpressionStatement	sp -> user_datafmt = PixarLogGuessDataFmt ( td )	696:2:19774:19817	1099187	1	True				
ANR	1099343	AssignmentExpression	sp -> user_datafmt = PixarLogGuessDataFmt ( td )		1099187	0		=			
ANR	1099344	PtrMemberAccess	sp -> user_datafmt		1099187	0					
ANR	1099345	Identifier	sp		1099187	0					
ANR	1099346	Identifier	user_datafmt		1099187	1					
ANR	1099347	CallExpression	PixarLogGuessDataFmt ( td )		1099187	1					
ANR	1099348	Callee	PixarLogGuessDataFmt		1099187	0					
ANR	1099349	Identifier	PixarLogGuessDataFmt		1099187	0					
ANR	1099350	ArgumentList	td		1099187	1					
ANR	1099351	Argument	td		1099187	0					
ANR	1099352	Identifier	td		1099187	0					
ANR	1099353	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		1099187	14					
ANR	1099354	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	697:5:19824:19866	1099187	0	True				
ANR	1099355	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		1099187	0		==			
ANR	1099356	PtrMemberAccess	sp -> user_datafmt		1099187	0					
ANR	1099357	Identifier	sp		1099187	0					
ANR	1099358	Identifier	user_datafmt		1099187	1					
ANR	1099359	Identifier	PIXARLOGDATAFMT_UNKNOWN		1099187	1					
ANR	1099360	CompoundStatement		28:50:1048:1048	1099187	1					
ANR	1099361	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle bits depth/data format combination (depth: %d)"" , td -> td_bitspersample )"	698:2:19873:20027	1099187	0	True				
ANR	1099362	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle bits depth/data format combination (depth: %d)"" , td -> td_bitspersample )"		1099187	0					
ANR	1099363	Callee	TIFFErrorExt		1099187	0					
ANR	1099364	Identifier	TIFFErrorExt		1099187	0					
ANR	1099365	ArgumentList	tif -> tif_clientdata		1099187	1					
ANR	1099366	Argument	tif -> tif_clientdata		1099187	0					
ANR	1099367	PtrMemberAccess	tif -> tif_clientdata		1099187	0					
ANR	1099368	Identifier	tif		1099187	0					
ANR	1099369	Identifier	tif_clientdata		1099187	1					
ANR	1099370	Argument	module		1099187	1					
ANR	1099371	Identifier	module		1099187	0					
ANR	1099372	Argument	"""PixarLog compression can't handle bits depth/data format combination (depth: %d)"""		1099187	2					
ANR	1099373	PrimaryExpression	"""PixarLog compression can't handle bits depth/data format combination (depth: %d)"""		1099187	0					
ANR	1099374	Argument	td -> td_bitspersample		1099187	3					
ANR	1099375	PtrMemberAccess	td -> td_bitspersample		1099187	0					
ANR	1099376	Identifier	td		1099187	0					
ANR	1099377	Identifier	td_bitspersample		1099187	1					
ANR	1099378	ReturnStatement	return ( 0 ) ;	701:2:20031:20041	1099187	1	True				
ANR	1099379	PrimaryExpression	0		1099187	0					
ANR	1099380	IfStatement	if ( inflateInit ( & sp -> stream ) != Z_OK )		1099187	15					
ANR	1099381	Condition	inflateInit ( & sp -> stream ) != Z_OK	704:5:20052:20083	1099187	0	True				
ANR	1099382	EqualityExpression	inflateInit ( & sp -> stream ) != Z_OK		1099187	0		!=			
ANR	1099383	CallExpression	inflateInit ( & sp -> stream )		1099187	0					
ANR	1099384	Callee	inflateInit		1099187	0					
ANR	1099385	Identifier	inflateInit		1099187	0					
ANR	1099386	ArgumentList	& sp -> stream		1099187	1					
ANR	1099387	Argument	& sp -> stream		1099187	0					
ANR	1099388	UnaryOperationExpression	& sp -> stream		1099187	0					
ANR	1099389	UnaryOperator	&		1099187	0					
ANR	1099390	PtrMemberAccess	sp -> stream		1099187	1					
ANR	1099391	Identifier	sp		1099187	0					
ANR	1099392	Identifier	stream		1099187	1					
ANR	1099393	Identifier	Z_OK		1099187	1					
ANR	1099394	CompoundStatement		35:39:1265:1265	1099187	1					
ANR	1099395	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg )"	705:2:20090:20153	1099187	0	True				
ANR	1099396	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg )"		1099187	0					
ANR	1099397	Callee	TIFFErrorExt		1099187	0					
ANR	1099398	Identifier	TIFFErrorExt		1099187	0					
ANR	1099399	ArgumentList	tif -> tif_clientdata		1099187	1					
ANR	1099400	Argument	tif -> tif_clientdata		1099187	0					
ANR	1099401	PtrMemberAccess	tif -> tif_clientdata		1099187	0					
ANR	1099402	Identifier	tif		1099187	0					
ANR	1099403	Identifier	tif_clientdata		1099187	1					
ANR	1099404	Argument	module		1099187	1					
ANR	1099405	Identifier	module		1099187	0					
ANR	1099406	Argument	"""%s"""		1099187	2					
ANR	1099407	PrimaryExpression	"""%s"""		1099187	0					
ANR	1099408	Argument	sp -> stream . msg		1099187	3					
ANR	1099409	MemberAccess	sp -> stream . msg		1099187	0					
ANR	1099410	PtrMemberAccess	sp -> stream		1099187	0					
ANR	1099411	Identifier	sp		1099187	0					
ANR	1099412	Identifier	stream		1099187	1					
ANR	1099413	Identifier	msg		1099187	1					
ANR	1099414	ReturnStatement	return ( 0 ) ;	706:2:20157:20167	1099187	1	True				
ANR	1099415	PrimaryExpression	0		1099187	0					
ANR	1099416	ElseStatement	else		1099187	0					
ANR	1099417	CompoundStatement		38:8:1356:1356	1099187	0					
ANR	1099418	ExpressionStatement	sp -> state |= PLSTATE_INIT	708:2:20181:20206	1099187	0	True				
ANR	1099419	AssignmentExpression	sp -> state |= PLSTATE_INIT		1099187	0		|=			
ANR	1099420	PtrMemberAccess	sp -> state		1099187	0					
ANR	1099421	Identifier	sp		1099187	0					
ANR	1099422	Identifier	state		1099187	1					
ANR	1099423	Identifier	PLSTATE_INIT		1099187	1					
ANR	1099424	ReturnStatement	return ( 1 ) ;	709:2:20210:20220	1099187	1	True				
ANR	1099425	PrimaryExpression	1		1099187	0					
ANR	1099426	ReturnType	static int		1099187	1					
ANR	1099427	Identifier	PixarLogSetupDecode		1099187	2					
ANR	1099428	ParameterList	TIFF * tif		1099187	3					
ANR	1099429	Parameter	TIFF * tif	669:20:18809:18817	1099187	0	True				
ANR	1099430	ParameterType	TIFF *		1099187	0					
ANR	1099431	Identifier	tif		1099187	1					
ANR	1099432	CFGEntryNode	ENTRY		1099187		True				
ANR	1099433	CFGExitNode	EXIT		1099187		True				
ANR	1099434	Symbol	* sp		1099187						
ANR	1099435	Symbol	td -> td_planarconfig		1099187						
ANR	1099436	Symbol	& tif -> tif_dir		1099187						
ANR	1099437	Symbol	tif -> tif_postdecode		1099187						
ANR	1099438	Symbol	& sp -> stream		1099187						
ANR	1099439	Symbol	sp -> user_datafmt		1099187						
ANR	1099440	Symbol	inflateInit		1099187						
ANR	1099441	Symbol	Z_OK		1099187						
ANR	1099442	Symbol	PIXARLOGDATAFMT_UNKNOWN		1099187						
ANR	1099443	Symbol	tif		1099187						
ANR	1099444	Symbol	sp -> stride		1099187						
ANR	1099445	Symbol	DecoderState		1099187						
ANR	1099446	Symbol	PixarLogGuessDataFmt		1099187						
ANR	1099447	Symbol	sp -> stream . msg		1099187						
ANR	1099448	Symbol	_TIFFNoPostDecode		1099187						
ANR	1099449	Symbol	sp -> tbuf		1099187						
ANR	1099450	Symbol	PLSTATE_INIT		1099187						
ANR	1099451	Symbol	sp		1099187						
ANR	1099452	Symbol	NULL		1099187						
ANR	1099453	Symbol	td -> td_imagewidth		1099187						
ANR	1099454	Symbol	module		1099187						
ANR	1099455	Symbol	PLANARCONFIG_CONTIG		1099187						
ANR	1099456	Symbol	tbuf_size		1099187						
ANR	1099457	Symbol	sp -> state		1099187						
ANR	1099458	Symbol	multiply_ms		1099187						
ANR	1099459	Symbol	tif -> tif_clientdata		1099187						
ANR	1099460	Symbol	td		1099187						
ANR	1099461	Symbol	td -> td_samplesperpixel		1099187						
ANR	1099462	Symbol	add_ms		1099187						
ANR	1099463	Symbol	* td		1099187						
ANR	1099464	Symbol	_TIFFmalloc		1099187						
ANR	1099465	Symbol	sp -> stream		1099187						
ANR	1099466	Symbol	* tif		1099187						
ANR	1099467	Symbol	td -> td_rowsperstrip		1099187						
ANR	1099468	Symbol	td -> td_bitspersample		1099187						
ANR	1099469	Function	PixarLogPreDecode	716:0:20272:21006							
ANR	1099470	FunctionDef	"PixarLogPreDecode (TIFF * tif , uint16 s)"		1099469	0					
ANR	1099471	CompoundStatement		718:0:20322:21006	1099469	0					
ANR	1099472	Statement	static	719:1:20325:20330	1099469	0	True				
ANR	1099473	IdentifierDeclStatement	"const char module [ ] = ""PixarLogPreDecode"" ;"	719:8:20332:20373	1099469	1	True				
ANR	1099474	IdentifierDecl	"module [ ] = ""PixarLogPreDecode"""		1099469	0					
ANR	1099475	IdentifierDeclType	const char [ ]		1099469	0					
ANR	1099476	Identifier	module		1099469	1					
ANR	1099477	AssignmentExpression	"module [ ] = ""PixarLogPreDecode"""		1099469	2		=			
ANR	1099478	Identifier	module		1099469	0					
ANR	1099479	PrimaryExpression	"""PixarLogPreDecode"""		1099469	1					
ANR	1099480	IdentifierDeclStatement	PixarLogState * sp = DecoderState ( tif ) ;	720:1:20376:20413	1099469	2	True				
ANR	1099481	IdentifierDecl	* sp = DecoderState ( tif )		1099469	0					
ANR	1099482	IdentifierDeclType	PixarLogState *		1099469	0					
ANR	1099483	Identifier	sp		1099469	1					
ANR	1099484	AssignmentExpression	* sp = DecoderState ( tif )		1099469	2		=			
ANR	1099485	Identifier	sp		1099469	0					
ANR	1099486	CallExpression	DecoderState ( tif )		1099469	1					
ANR	1099487	Callee	DecoderState		1099469	0					
ANR	1099488	Identifier	DecoderState		1099469	0					
ANR	1099489	ArgumentList	tif		1099469	1					
ANR	1099490	Argument	tif		1099469	0					
ANR	1099491	Identifier	tif		1099469	0					
ANR	1099492	ExpressionStatement	( void ) s	722:1:20417:20425	1099469	3	True				
ANR	1099493	CastExpression	( void ) s		1099469	0					
ANR	1099494	CastTarget	void		1099469	0					
ANR	1099495	Identifier	s		1099469	1					
ANR	1099496	ExpressionStatement	assert ( sp != NULL )	723:1:20428:20446	1099469	4	True				
ANR	1099497	CallExpression	assert ( sp != NULL )		1099469	0					
ANR	1099498	Callee	assert		1099469	0					
ANR	1099499	Identifier	assert		1099469	0					
ANR	1099500	ArgumentList	sp != NULL		1099469	1					
ANR	1099501	Argument	sp != NULL		1099469	0					
ANR	1099502	EqualityExpression	sp != NULL		1099469	0		!=			
ANR	1099503	Identifier	sp		1099469	0					
ANR	1099504	Identifier	NULL		1099469	1					
ANR	1099505	ExpressionStatement	sp -> stream . next_in = tif -> tif_rawdata	724:1:20449:20486	1099469	5	True				
ANR	1099506	AssignmentExpression	sp -> stream . next_in = tif -> tif_rawdata		1099469	0		=			
ANR	1099507	MemberAccess	sp -> stream . next_in		1099469	0					
ANR	1099508	PtrMemberAccess	sp -> stream		1099469	0					
ANR	1099509	Identifier	sp		1099469	0					
ANR	1099510	Identifier	stream		1099469	1					
ANR	1099511	Identifier	next_in		1099469	1					
ANR	1099512	PtrMemberAccess	tif -> tif_rawdata		1099469	1					
ANR	1099513	Identifier	tif		1099469	0					
ANR	1099514	Identifier	tif_rawdata		1099469	1					
ANR	1099515	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_in ) == 4 )	725:1:20489:20527	1099469	6	True				
ANR	1099516	CallExpression	assert ( sizeof ( sp -> stream . avail_in ) == 4 )		1099469	0					
ANR	1099517	Callee	assert		1099469	0					
ANR	1099518	Identifier	assert		1099469	0					
ANR	1099519	ArgumentList	sizeof ( sp -> stream . avail_in ) == 4		1099469	1					
ANR	1099520	Argument	sizeof ( sp -> stream . avail_in ) == 4		1099469	0					
ANR	1099521	EqualityExpression	sizeof ( sp -> stream . avail_in ) == 4		1099469	0		==			
ANR	1099522	SizeofExpression	sizeof ( sp -> stream . avail_in )		1099469	0					
ANR	1099523	Sizeof	sizeof		1099469	0					
ANR	1099524	MemberAccess	sp -> stream . avail_in		1099469	1					
ANR	1099525	PtrMemberAccess	sp -> stream		1099469	0					
ANR	1099526	Identifier	sp		1099469	0					
ANR	1099527	Identifier	stream		1099469	1					
ANR	1099528	Identifier	avail_in		1099469	1					
ANR	1099529	PrimaryExpression	4		1099469	1					
ANR	1099530	ExpressionStatement	sp -> stream . avail_in = ( uInt ) tif -> tif_rawcc	729:1:20754:20797	1099469	7	True				
ANR	1099531	AssignmentExpression	sp -> stream . avail_in = ( uInt ) tif -> tif_rawcc		1099469	0		=			
ANR	1099532	MemberAccess	sp -> stream . avail_in		1099469	0					
ANR	1099533	PtrMemberAccess	sp -> stream		1099469	0					
ANR	1099534	Identifier	sp		1099469	0					
ANR	1099535	Identifier	stream		1099469	1					
ANR	1099536	Identifier	avail_in		1099469	1					
ANR	1099537	CastExpression	( uInt ) tif -> tif_rawcc		1099469	1					
ANR	1099538	CastTarget	uInt		1099469	0					
ANR	1099539	PtrMemberAccess	tif -> tif_rawcc		1099469	1					
ANR	1099540	Identifier	tif		1099469	0					
ANR	1099541	Identifier	tif_rawcc		1099469	1					
ANR	1099542	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_in != tif -> tif_rawcc )		1099469	8					
ANR	1099543	Condition	( tmsize_t ) sp -> stream . avail_in != tif -> tif_rawcc	730:5:20804:20850	1099469	0	True				
ANR	1099544	EqualityExpression	( tmsize_t ) sp -> stream . avail_in != tif -> tif_rawcc		1099469	0		!=			
ANR	1099545	CastExpression	( tmsize_t ) sp -> stream . avail_in		1099469	0					
ANR	1099546	CastTarget	tmsize_t		1099469	0					
ANR	1099547	MemberAccess	sp -> stream . avail_in		1099469	1					
ANR	1099548	PtrMemberAccess	sp -> stream		1099469	0					
ANR	1099549	Identifier	sp		1099469	0					
ANR	1099550	Identifier	stream		1099469	1					
ANR	1099551	Identifier	avail_in		1099469	1					
ANR	1099552	PtrMemberAccess	tif -> tif_rawcc		1099469	1					
ANR	1099553	Identifier	tif		1099469	0					
ANR	1099554	Identifier	tif_rawcc		1099469	1					
ANR	1099555	CompoundStatement		14:1:531:531	1099469	1					
ANR	1099556	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	732:2:20858:20942	1099469	0	True				
ANR	1099557	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		1099469	0					
ANR	1099558	Callee	TIFFErrorExt		1099469	0					
ANR	1099559	Identifier	TIFFErrorExt		1099469	0					
ANR	1099560	ArgumentList	tif -> tif_clientdata		1099469	1					
ANR	1099561	Argument	tif -> tif_clientdata		1099469	0					
ANR	1099562	PtrMemberAccess	tif -> tif_clientdata		1099469	0					
ANR	1099563	Identifier	tif		1099469	0					
ANR	1099564	Identifier	tif_clientdata		1099469	1					
ANR	1099565	Argument	module		1099469	1					
ANR	1099566	Identifier	module		1099469	0					
ANR	1099567	Argument	"""ZLib cannot deal with buffers this size"""		1099469	2					
ANR	1099568	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		1099469	0					
ANR	1099569	ReturnStatement	return ( 0 ) ;	733:2:20946:20956	1099469	1	True				
ANR	1099570	PrimaryExpression	0		1099469	0					
ANR	1099571	ReturnStatement	return ( inflateReset ( & sp -> stream ) == Z_OK ) ;	735:1:20962:21004	1099469	9	True				
ANR	1099572	EqualityExpression	inflateReset ( & sp -> stream ) == Z_OK		1099469	0		==			
ANR	1099573	CallExpression	inflateReset ( & sp -> stream )		1099469	0					
ANR	1099574	Callee	inflateReset		1099469	0					
ANR	1099575	Identifier	inflateReset		1099469	0					
ANR	1099576	ArgumentList	& sp -> stream		1099469	1					
ANR	1099577	Argument	& sp -> stream		1099469	0					
ANR	1099578	UnaryOperationExpression	& sp -> stream		1099469	0					
ANR	1099579	UnaryOperator	&		1099469	0					
ANR	1099580	PtrMemberAccess	sp -> stream		1099469	1					
ANR	1099581	Identifier	sp		1099469	0					
ANR	1099582	Identifier	stream		1099469	1					
ANR	1099583	Identifier	Z_OK		1099469	1					
ANR	1099584	ReturnType	static int		1099469	1					
ANR	1099585	Identifier	PixarLogPreDecode		1099469	2					
ANR	1099586	ParameterList	"TIFF * tif , uint16 s"		1099469	3					
ANR	1099587	Parameter	TIFF * tif	717:18:20301:20309	1099469	0	True				
ANR	1099588	ParameterType	TIFF *		1099469	0					
ANR	1099589	Identifier	tif		1099469	1					
ANR	1099590	Parameter	uint16 s	717:29:20312:20319	1099469	1	True				
ANR	1099591	ParameterType	uint16		1099469	0					
ANR	1099592	Identifier	s		1099469	1					
ANR	1099593	CFGEntryNode	ENTRY		1099469		True				
ANR	1099594	CFGExitNode	EXIT		1099469		True				
ANR	1099595	Symbol	* sp		1099469						
ANR	1099596	Symbol	NULL		1099469						
ANR	1099597	Symbol	& sp -> stream		1099469						
ANR	1099598	Symbol	module		1099469						
ANR	1099599	Symbol	sp -> stream . next_in		1099469						
ANR	1099600	Symbol	Z_OK		1099469						
ANR	1099601	Symbol	tif -> tif_clientdata		1099469						
ANR	1099602	Symbol	tif		1099469						
ANR	1099603	Symbol	tif -> tif_rawcc		1099469						
ANR	1099604	Symbol	s		1099469						
ANR	1099605	Symbol	sp -> stream . avail_in		1099469						
ANR	1099606	Symbol	DecoderState		1099469						
ANR	1099607	Symbol	sp -> stream		1099469						
ANR	1099608	Symbol	* tif		1099469						
ANR	1099609	Symbol	sp		1099469						
ANR	1099610	Symbol	inflateReset		1099469						
ANR	1099611	Symbol	tif -> tif_rawdata		1099469						
ANR	1099612	Function	PixarLogDecode	738:0:21009:25014							
ANR	1099613	FunctionDef	"PixarLogDecode (TIFF * tif , uint8 * op , tmsize_t occ , uint16 s)"		1099612	0					
ANR	1099614	CompoundStatement		740:0:21081:25014	1099612	0					
ANR	1099615	Statement	static	741:1:21084:21089	1099612	0	True				
ANR	1099616	IdentifierDeclStatement	"const char module [ ] = ""PixarLogDecode"" ;"	741:8:21091:21129	1099612	1	True				
ANR	1099617	IdentifierDecl	"module [ ] = ""PixarLogDecode"""		1099612	0					
ANR	1099618	IdentifierDeclType	const char [ ]		1099612	0					
ANR	1099619	Identifier	module		1099612	1					
ANR	1099620	AssignmentExpression	"module [ ] = ""PixarLogDecode"""		1099612	2		=			
ANR	1099621	Identifier	module		1099612	0					
ANR	1099622	PrimaryExpression	"""PixarLogDecode"""		1099612	1					
ANR	1099623	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	742:1:21132:21165	1099612	2	True				
ANR	1099624	IdentifierDecl	* td = & tif -> tif_dir		1099612	0					
ANR	1099625	IdentifierDeclType	TIFFDirectory *		1099612	0					
ANR	1099626	Identifier	td		1099612	1					
ANR	1099627	AssignmentExpression	* td = & tif -> tif_dir		1099612	2		=			
ANR	1099628	Identifier	td		1099612	0					
ANR	1099629	UnaryOperationExpression	& tif -> tif_dir		1099612	1					
ANR	1099630	UnaryOperator	&		1099612	0					
ANR	1099631	PtrMemberAccess	tif -> tif_dir		1099612	1					
ANR	1099632	Identifier	tif		1099612	0					
ANR	1099633	Identifier	tif_dir		1099612	1					
ANR	1099634	IdentifierDeclStatement	PixarLogState * sp = DecoderState ( tif ) ;	743:1:21168:21205	1099612	3	True				
ANR	1099635	IdentifierDecl	* sp = DecoderState ( tif )		1099612	0					
ANR	1099636	IdentifierDeclType	PixarLogState *		1099612	0					
ANR	1099637	Identifier	sp		1099612	1					
ANR	1099638	AssignmentExpression	* sp = DecoderState ( tif )		1099612	2		=			
ANR	1099639	Identifier	sp		1099612	0					
ANR	1099640	CallExpression	DecoderState ( tif )		1099612	1					
ANR	1099641	Callee	DecoderState		1099612	0					
ANR	1099642	Identifier	DecoderState		1099612	0					
ANR	1099643	ArgumentList	tif		1099612	1					
ANR	1099644	Argument	tif		1099612	0					
ANR	1099645	Identifier	tif		1099612	0					
ANR	1099646	IdentifierDeclStatement	tmsize_t i ;	744:1:21208:21218	1099612	4	True				
ANR	1099647	IdentifierDecl	i		1099612	0					
ANR	1099648	IdentifierDeclType	tmsize_t		1099612	0					
ANR	1099649	Identifier	i		1099612	1					
ANR	1099650	IdentifierDeclStatement	tmsize_t nsamples ;	745:1:21221:21238	1099612	5	True				
ANR	1099651	IdentifierDecl	nsamples		1099612	0					
ANR	1099652	IdentifierDeclType	tmsize_t		1099612	0					
ANR	1099653	Identifier	nsamples		1099612	1					
ANR	1099654	IdentifierDeclStatement	int llen ;	746:1:21241:21249	1099612	6	True				
ANR	1099655	IdentifierDecl	llen		1099612	0					
ANR	1099656	IdentifierDeclType	int		1099612	0					
ANR	1099657	Identifier	llen		1099612	1					
ANR	1099658	IdentifierDeclStatement	uint16 * up ;	747:1:21252:21262	1099612	7	True				
ANR	1099659	IdentifierDecl	* up		1099612	0					
ANR	1099660	IdentifierDeclType	uint16 *		1099612	0					
ANR	1099661	Identifier	up		1099612	1					
ANR	1099662	SwitchStatement	switch ( sp -> user_datafmt )		1099612	8					
ANR	1099663	Condition	sp -> user_datafmt	749:9:21274:21289	1099612	0	True				
ANR	1099664	PtrMemberAccess	sp -> user_datafmt		1099612	0					
ANR	1099665	Identifier	sp		1099612	0					
ANR	1099666	Identifier	user_datafmt		1099612	1					
ANR	1099667	CompoundStatement		10:27:210:210	1099612	1					
ANR	1099668	Label	case PIXARLOGDATAFMT_FLOAT :	750:1:21295:21321	1099612	0	True				
ANR	1099669	Identifier	PIXARLOGDATAFMT_FLOAT		1099612	0					
ANR	1099670	ExpressionStatement	nsamples = occ / sizeof ( float )	751:2:21325:21355	1099612	1	True				
ANR	1099671	AssignmentExpression	nsamples = occ / sizeof ( float )		1099612	0		=			
ANR	1099672	Identifier	nsamples		1099612	0					
ANR	1099673	MultiplicativeExpression	occ / sizeof ( float )		1099612	1		/			
ANR	1099674	Identifier	occ		1099612	0					
ANR	1099675	SizeofExpression	sizeof ( float )		1099612	1					
ANR	1099676	Sizeof	sizeof		1099612	0					
ANR	1099677	SizeofOperand	float		1099612	1					
ANR	1099678	BreakStatement	break ;	752:2:21386:21391	1099612	2	True				
ANR	1099679	Label	case PIXARLOGDATAFMT_16BIT :	753:1:21394:21420	1099612	3	True				
ANR	1099680	Identifier	PIXARLOGDATAFMT_16BIT		1099612	0					
ANR	1099681	Label	case PIXARLOGDATAFMT_12BITPICIO :	754:1:21423:21454	1099612	4	True				
ANR	1099682	Identifier	PIXARLOGDATAFMT_12BITPICIO		1099612	0					
ANR	1099683	Label	case PIXARLOGDATAFMT_11BITLOG :	755:1:21457:21486	1099612	5	True				
ANR	1099684	Identifier	PIXARLOGDATAFMT_11BITLOG		1099612	0					
ANR	1099685	ExpressionStatement	nsamples = occ / sizeof ( uint16 )	756:2:21490:21521	1099612	6	True				
ANR	1099686	AssignmentExpression	nsamples = occ / sizeof ( uint16 )		1099612	0		=			
ANR	1099687	Identifier	nsamples		1099612	0					
ANR	1099688	MultiplicativeExpression	occ / sizeof ( uint16 )		1099612	1		/			
ANR	1099689	Identifier	occ		1099612	0					
ANR	1099690	SizeofExpression	sizeof ( uint16 )		1099612	1					
ANR	1099691	Sizeof	sizeof		1099612	0					
ANR	1099692	SizeofOperand	uint16		1099612	1					
ANR	1099693	BreakStatement	break ;	757:2:21553:21558	1099612	7	True				
ANR	1099694	Label	case PIXARLOGDATAFMT_8BIT :	758:1:21561:21586	1099612	8	True				
ANR	1099695	Identifier	PIXARLOGDATAFMT_8BIT		1099612	0					
ANR	1099696	Label	case PIXARLOGDATAFMT_8BITABGR :	759:1:21589:21618	1099612	9	True				
ANR	1099697	Identifier	PIXARLOGDATAFMT_8BITABGR		1099612	0					
ANR	1099698	ExpressionStatement	nsamples = occ	760:2:21622:21636	1099612	10	True				
ANR	1099699	AssignmentExpression	nsamples = occ		1099612	0		=			
ANR	1099700	Identifier	nsamples		1099612	0					
ANR	1099701	Identifier	occ		1099612	1					
ANR	1099702	BreakStatement	break ;	761:2:21640:21645	1099612	11	True				
ANR	1099703	Label	default :	762:1:21648:21655	1099612	12	True				
ANR	1099704	Identifier	default		1099612	0					
ANR	1099705	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"	763:2:21659:21770	1099612	13	True				
ANR	1099706	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"		1099612	0					
ANR	1099707	Callee	TIFFErrorExt		1099612	0					
ANR	1099708	Identifier	TIFFErrorExt		1099612	0					
ANR	1099709	ArgumentList	tif -> tif_clientdata		1099612	1					
ANR	1099710	Argument	tif -> tif_clientdata		1099612	0					
ANR	1099711	PtrMemberAccess	tif -> tif_clientdata		1099612	0					
ANR	1099712	Identifier	tif		1099612	0					
ANR	1099713	Identifier	tif_clientdata		1099612	1					
ANR	1099714	Argument	module		1099612	1					
ANR	1099715	Identifier	module		1099612	0					
ANR	1099716	Argument	"""%d bit input not supported in PixarLog"""		1099612	2					
ANR	1099717	PrimaryExpression	"""%d bit input not supported in PixarLog"""		1099612	0					
ANR	1099718	Argument	td -> td_bitspersample		1099612	3					
ANR	1099719	PtrMemberAccess	td -> td_bitspersample		1099612	0					
ANR	1099720	Identifier	td		1099612	0					
ANR	1099721	Identifier	td_bitspersample		1099612	1					
ANR	1099722	ReturnStatement	return 0 ;	766:2:21774:21782	1099612	14	True				
ANR	1099723	PrimaryExpression	0		1099612	0					
ANR	1099724	ExpressionStatement	llen = sp -> stride * td -> td_imagewidth	769:1:21789:21826	1099612	9	True				
ANR	1099725	AssignmentExpression	llen = sp -> stride * td -> td_imagewidth		1099612	0		=			
ANR	1099726	Identifier	llen		1099612	0					
ANR	1099727	MultiplicativeExpression	sp -> stride * td -> td_imagewidth		1099612	1		*			
ANR	1099728	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1099729	Identifier	sp		1099612	0					
ANR	1099730	Identifier	stride		1099612	1					
ANR	1099731	PtrMemberAccess	td -> td_imagewidth		1099612	1					
ANR	1099732	Identifier	td		1099612	0					
ANR	1099733	Identifier	td_imagewidth		1099612	1					
ANR	1099734	ExpressionStatement	( void ) s	771:1:21830:21838	1099612	10	True				
ANR	1099735	CastExpression	( void ) s		1099612	0					
ANR	1099736	CastTarget	void		1099612	0					
ANR	1099737	Identifier	s		1099612	1					
ANR	1099738	ExpressionStatement	assert ( sp != NULL )	772:1:21841:21859	1099612	11	True				
ANR	1099739	CallExpression	assert ( sp != NULL )		1099612	0					
ANR	1099740	Callee	assert		1099612	0					
ANR	1099741	Identifier	assert		1099612	0					
ANR	1099742	ArgumentList	sp != NULL		1099612	1					
ANR	1099743	Argument	sp != NULL		1099612	0					
ANR	1099744	EqualityExpression	sp != NULL		1099612	0		!=			
ANR	1099745	Identifier	sp		1099612	0					
ANR	1099746	Identifier	NULL		1099612	1					
ANR	1099747	ExpressionStatement	sp -> stream . next_out = ( unsigned char * ) sp -> tbuf	773:1:21862:21910	1099612	12	True				
ANR	1099748	AssignmentExpression	sp -> stream . next_out = ( unsigned char * ) sp -> tbuf		1099612	0		=			
ANR	1099749	MemberAccess	sp -> stream . next_out		1099612	0					
ANR	1099750	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099751	Identifier	sp		1099612	0					
ANR	1099752	Identifier	stream		1099612	1					
ANR	1099753	Identifier	next_out		1099612	1					
ANR	1099754	CastExpression	( unsigned char * ) sp -> tbuf		1099612	1					
ANR	1099755	CastTarget	unsigned char *		1099612	0					
ANR	1099756	PtrMemberAccess	sp -> tbuf		1099612	1					
ANR	1099757	Identifier	sp		1099612	0					
ANR	1099758	Identifier	tbuf		1099612	1					
ANR	1099759	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_out ) == 4 )	774:1:21913:21952	1099612	13	True				
ANR	1099760	CallExpression	assert ( sizeof ( sp -> stream . avail_out ) == 4 )		1099612	0					
ANR	1099761	Callee	assert		1099612	0					
ANR	1099762	Identifier	assert		1099612	0					
ANR	1099763	ArgumentList	sizeof ( sp -> stream . avail_out ) == 4		1099612	1					
ANR	1099764	Argument	sizeof ( sp -> stream . avail_out ) == 4		1099612	0					
ANR	1099765	EqualityExpression	sizeof ( sp -> stream . avail_out ) == 4		1099612	0		==			
ANR	1099766	SizeofExpression	sizeof ( sp -> stream . avail_out )		1099612	0					
ANR	1099767	Sizeof	sizeof		1099612	0					
ANR	1099768	MemberAccess	sp -> stream . avail_out		1099612	1					
ANR	1099769	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099770	Identifier	sp		1099612	0					
ANR	1099771	Identifier	stream		1099612	1					
ANR	1099772	Identifier	avail_out		1099612	1					
ANR	1099773	PrimaryExpression	4		1099612	1					
ANR	1099774	ExpressionStatement	sp -> stream . avail_out = ( uInt ) ( nsamples * sizeof ( uint16 ) )	778:1:22179:22236	1099612	14	True				
ANR	1099775	AssignmentExpression	sp -> stream . avail_out = ( uInt ) ( nsamples * sizeof ( uint16 ) )		1099612	0		=			
ANR	1099776	MemberAccess	sp -> stream . avail_out		1099612	0					
ANR	1099777	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099778	Identifier	sp		1099612	0					
ANR	1099779	Identifier	stream		1099612	1					
ANR	1099780	Identifier	avail_out		1099612	1					
ANR	1099781	CastExpression	( uInt ) ( nsamples * sizeof ( uint16 ) )		1099612	1					
ANR	1099782	CastTarget	uInt		1099612	0					
ANR	1099783	MultiplicativeExpression	nsamples * sizeof ( uint16 )		1099612	1		*			
ANR	1099784	Identifier	nsamples		1099612	0					
ANR	1099785	SizeofExpression	sizeof ( uint16 )		1099612	1					
ANR	1099786	Sizeof	sizeof		1099612	0					
ANR	1099787	SizeofOperand	uint16		1099612	1					
ANR	1099788	IfStatement	if ( sp -> stream . avail_out != nsamples * sizeof ( uint16 ) )		1099612	15					
ANR	1099789	Condition	sp -> stream . avail_out != nsamples * sizeof ( uint16 )	779:5:22243:22291	1099612	0	True				
ANR	1099790	EqualityExpression	sp -> stream . avail_out != nsamples * sizeof ( uint16 )		1099612	0		!=			
ANR	1099791	MemberAccess	sp -> stream . avail_out		1099612	0					
ANR	1099792	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099793	Identifier	sp		1099612	0					
ANR	1099794	Identifier	stream		1099612	1					
ANR	1099795	Identifier	avail_out		1099612	1					
ANR	1099796	MultiplicativeExpression	nsamples * sizeof ( uint16 )		1099612	1		*			
ANR	1099797	Identifier	nsamples		1099612	0					
ANR	1099798	SizeofExpression	sizeof ( uint16 )		1099612	1					
ANR	1099799	Sizeof	sizeof		1099612	0					
ANR	1099800	SizeofOperand	uint16		1099612	1					
ANR	1099801	CompoundStatement		41:1:1213:1213	1099612	1					
ANR	1099802	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	781:2:22299:22383	1099612	0	True				
ANR	1099803	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		1099612	0					
ANR	1099804	Callee	TIFFErrorExt		1099612	0					
ANR	1099805	Identifier	TIFFErrorExt		1099612	0					
ANR	1099806	ArgumentList	tif -> tif_clientdata		1099612	1					
ANR	1099807	Argument	tif -> tif_clientdata		1099612	0					
ANR	1099808	PtrMemberAccess	tif -> tif_clientdata		1099612	0					
ANR	1099809	Identifier	tif		1099612	0					
ANR	1099810	Identifier	tif_clientdata		1099612	1					
ANR	1099811	Argument	module		1099612	1					
ANR	1099812	Identifier	module		1099612	0					
ANR	1099813	Argument	"""ZLib cannot deal with buffers this size"""		1099612	2					
ANR	1099814	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		1099612	0					
ANR	1099815	ReturnStatement	return ( 0 ) ;	782:2:22387:22397	1099612	1	True				
ANR	1099816	PrimaryExpression	0		1099612	0					
ANR	1099817	DoStatement	do		1099612	16					
ANR	1099818	CompoundStatement		46:2:1328:1377	1099612	0					
ANR	1099819	IdentifierDeclStatement	"int state = inflate ( & sp -> stream , Z_PARTIAL_FLUSH ) ;"	785:2:22410:22459	1099612	0	True				
ANR	1099820	IdentifierDecl	"state = inflate ( & sp -> stream , Z_PARTIAL_FLUSH )"		1099612	0					
ANR	1099821	IdentifierDeclType	int		1099612	0					
ANR	1099822	Identifier	state		1099612	1					
ANR	1099823	AssignmentExpression	"state = inflate ( & sp -> stream , Z_PARTIAL_FLUSH )"		1099612	2		=			
ANR	1099824	Identifier	state		1099612	0					
ANR	1099825	CallExpression	"inflate ( & sp -> stream , Z_PARTIAL_FLUSH )"		1099612	1					
ANR	1099826	Callee	inflate		1099612	0					
ANR	1099827	Identifier	inflate		1099612	0					
ANR	1099828	ArgumentList	& sp -> stream		1099612	1					
ANR	1099829	Argument	& sp -> stream		1099612	0					
ANR	1099830	UnaryOperationExpression	& sp -> stream		1099612	0					
ANR	1099831	UnaryOperator	&		1099612	0					
ANR	1099832	PtrMemberAccess	sp -> stream		1099612	1					
ANR	1099833	Identifier	sp		1099612	0					
ANR	1099834	Identifier	stream		1099612	1					
ANR	1099835	Argument	Z_PARTIAL_FLUSH		1099612	1					
ANR	1099836	Identifier	Z_PARTIAL_FLUSH		1099612	0					
ANR	1099837	IfStatement	if ( state == Z_STREAM_END )		1099612	1					
ANR	1099838	Condition	state == Z_STREAM_END	786:6:22467:22487	1099612	0	True				
ANR	1099839	EqualityExpression	state == Z_STREAM_END		1099612	0		==			
ANR	1099840	Identifier	state		1099612	0					
ANR	1099841	Identifier	Z_STREAM_END		1099612	1					
ANR	1099842	CompoundStatement		47:29:1408:1408	1099612	1					
ANR	1099843	BreakStatement	break ;	787:3:22495:22500	1099612	0	True				
ANR	1099844	IfStatement	if ( state == Z_DATA_ERROR )		1099612	2					
ANR	1099845	Condition	state == Z_DATA_ERROR	789:6:22524:22544	1099612	0	True				
ANR	1099846	EqualityExpression	state == Z_DATA_ERROR		1099612	0		==			
ANR	1099847	Identifier	state		1099612	0					
ANR	1099848	Identifier	Z_DATA_ERROR		1099612	1					
ANR	1099849	CompoundStatement		50:29:1465:1465	1099612	1					
ANR	1099850	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Decoding error at scanline %lu, %s"" , ( unsigned long ) tif -> tif_row , sp -> stream . msg )"	790:3:22552:22691	1099612	0	True				
ANR	1099851	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Decoding error at scanline %lu, %s"" , ( unsigned long ) tif -> tif_row , sp -> stream . msg )"		1099612	0					
ANR	1099852	Callee	TIFFErrorExt		1099612	0					
ANR	1099853	Identifier	TIFFErrorExt		1099612	0					
ANR	1099854	ArgumentList	tif -> tif_clientdata		1099612	1					
ANR	1099855	Argument	tif -> tif_clientdata		1099612	0					
ANR	1099856	PtrMemberAccess	tif -> tif_clientdata		1099612	0					
ANR	1099857	Identifier	tif		1099612	0					
ANR	1099858	Identifier	tif_clientdata		1099612	1					
ANR	1099859	Argument	module		1099612	1					
ANR	1099860	Identifier	module		1099612	0					
ANR	1099861	Argument	"""Decoding error at scanline %lu, %s"""		1099612	2					
ANR	1099862	PrimaryExpression	"""Decoding error at scanline %lu, %s"""		1099612	0					
ANR	1099863	Argument	( unsigned long ) tif -> tif_row		1099612	3					
ANR	1099864	CastExpression	( unsigned long ) tif -> tif_row		1099612	0					
ANR	1099865	CastTarget	unsigned long		1099612	0					
ANR	1099866	PtrMemberAccess	tif -> tif_row		1099612	1					
ANR	1099867	Identifier	tif		1099612	0					
ANR	1099868	Identifier	tif_row		1099612	1					
ANR	1099869	Argument	sp -> stream . msg		1099612	4					
ANR	1099870	MemberAccess	sp -> stream . msg		1099612	0					
ANR	1099871	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099872	Identifier	sp		1099612	0					
ANR	1099873	Identifier	stream		1099612	1					
ANR	1099874	Identifier	msg		1099612	1					
ANR	1099875	IfStatement	if ( inflateSync ( & sp -> stream ) != Z_OK )		1099612	1					
ANR	1099876	Condition	inflateSync ( & sp -> stream ) != Z_OK	793:7:22700:22731	1099612	0	True				
ANR	1099877	EqualityExpression	inflateSync ( & sp -> stream ) != Z_OK		1099612	0		!=			
ANR	1099878	CallExpression	inflateSync ( & sp -> stream )		1099612	0					
ANR	1099879	Callee	inflateSync		1099612	0					
ANR	1099880	Identifier	inflateSync		1099612	0					
ANR	1099881	ArgumentList	& sp -> stream		1099612	1					
ANR	1099882	Argument	& sp -> stream		1099612	0					
ANR	1099883	UnaryOperationExpression	& sp -> stream		1099612	0					
ANR	1099884	UnaryOperator	&		1099612	0					
ANR	1099885	PtrMemberAccess	sp -> stream		1099612	1					
ANR	1099886	Identifier	sp		1099612	0					
ANR	1099887	Identifier	stream		1099612	1					
ANR	1099888	Identifier	Z_OK		1099612	1					
ANR	1099889	ReturnStatement	return ( 0 ) ;	794:4:22738:22748	1099612	1	True				
ANR	1099890	PrimaryExpression	0		1099612	0					
ANR	1099891	ContinueStatement	continue ;	795:3:22753:22761	1099612	2	True				
ANR	1099892	IfStatement	if ( state != Z_OK )		1099612	3					
ANR	1099893	Condition	state != Z_OK	797:6:22773:22785	1099612	0	True				
ANR	1099894	EqualityExpression	state != Z_OK		1099612	0		!=			
ANR	1099895	Identifier	state		1099612	0					
ANR	1099896	Identifier	Z_OK		1099612	1					
ANR	1099897	CompoundStatement		58:21:1706:1706	1099612	1					
ANR	1099898	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg )"	798:3:22793:22875	1099612	0	True				
ANR	1099899	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg )"		1099612	0					
ANR	1099900	Callee	TIFFErrorExt		1099612	0					
ANR	1099901	Identifier	TIFFErrorExt		1099612	0					
ANR	1099902	ArgumentList	tif -> tif_clientdata		1099612	1					
ANR	1099903	Argument	tif -> tif_clientdata		1099612	0					
ANR	1099904	PtrMemberAccess	tif -> tif_clientdata		1099612	0					
ANR	1099905	Identifier	tif		1099612	0					
ANR	1099906	Identifier	tif_clientdata		1099612	1					
ANR	1099907	Argument	module		1099612	1					
ANR	1099908	Identifier	module		1099612	0					
ANR	1099909	Argument	"""ZLib error: %s"""		1099612	2					
ANR	1099910	PrimaryExpression	"""ZLib error: %s"""		1099612	0					
ANR	1099911	Argument	sp -> stream . msg		1099612	3					
ANR	1099912	MemberAccess	sp -> stream . msg		1099612	0					
ANR	1099913	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099914	Identifier	sp		1099612	0					
ANR	1099915	Identifier	stream		1099612	1					
ANR	1099916	Identifier	msg		1099612	1					
ANR	1099917	ReturnStatement	return ( 0 ) ;	800:3:22880:22890	1099612	1	True				
ANR	1099918	PrimaryExpression	0		1099612	0					
ANR	1099919	Condition	sp -> stream . avail_out > 0	802:10:22906:22929	1099612	1	True				
ANR	1099920	RelationalExpression	sp -> stream . avail_out > 0		1099612	0		>			
ANR	1099921	MemberAccess	sp -> stream . avail_out		1099612	0					
ANR	1099922	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099923	Identifier	sp		1099612	0					
ANR	1099924	Identifier	stream		1099612	1					
ANR	1099925	Identifier	avail_out		1099612	1					
ANR	1099926	PrimaryExpression	0		1099612	1					
ANR	1099927	IfStatement	if ( sp -> stream . avail_out != 0 )		1099612	17					
ANR	1099928	Condition	sp -> stream . avail_out != 0	805:5:22988:23012	1099612	0	True				
ANR	1099929	EqualityExpression	sp -> stream . avail_out != 0		1099612	0		!=			
ANR	1099930	MemberAccess	sp -> stream . avail_out		1099612	0					
ANR	1099931	PtrMemberAccess	sp -> stream		1099612	0					
ANR	1099932	Identifier	sp		1099612	0					
ANR	1099933	Identifier	stream		1099612	1					
ANR	1099934	Identifier	avail_out		1099612	1					
ANR	1099935	PrimaryExpression	0		1099612	1					
ANR	1099936	CompoundStatement		66:32:1933:1933	1099612	1					
ANR	1099937	Statement	TIFFErrorExt	806:2:23019:23030	1099612	0	True				
ANR	1099938	Statement	(	806:14:23031:23031	1099612	1	True				
ANR	1099939	Statement	tif	806:15:23032:23034	1099612	2	True				
ANR	1099940	Statement	->	806:18:23035:23036	1099612	3	True				
ANR	1099941	Statement	tif_clientdata	806:20:23037:23050	1099612	4	True				
ANR	1099942	Statement	","	806:34:23051:23051	1099612	5	True				
ANR	1099943	Statement	module	806:36:23053:23058	1099612	6	True				
ANR	1099944	Statement	","	806:42:23059:23059	1099612	7	True				
ANR	1099945	Statement	"""Not enough data at scanline %lu (short """	807:6:23067:23107	1099612	8	True				
ANR	1099946	Statement	TIFF_UINT64_FORMAT	807:48:23109:23126	1099612	9	True				
ANR	1099947	Statement	""" bytes)"""	807:67:23128:23136	1099612	10	True				
ANR	1099948	Statement	","	807:76:23137:23137	1099612	11	True				
ANR	1099949	Statement	(	808:6:23145:23145	1099612	12	True				
ANR	1099950	Statement	unsigned	808:7:23146:23153	1099612	13	True				
ANR	1099951	Statement	long	808:16:23155:23158	1099612	14	True				
ANR	1099952	Statement	)	808:20:23159:23159	1099612	15	True				
ANR	1099953	Statement	tif	808:22:23161:23163	1099612	16	True				
ANR	1099954	Statement	->	808:25:23164:23165	1099612	17	True				
ANR	1099955	Statement	tif_row	808:27:23166:23172	1099612	18	True				
ANR	1099956	Statement	","	808:34:23173:23173	1099612	19	True				
ANR	1099957	Statement	(	808:36:23175:23175	1099612	20	True				
ANR	1099958	Statement	TIFF_UINT64_T	808:37:23176:23188	1099612	21	True				
ANR	1099959	Statement	)	808:50:23189:23189	1099612	22	True				
ANR	1099960	Statement	sp	808:52:23191:23192	1099612	23	True				
ANR	1099961	Statement	->	808:54:23193:23194	1099612	24	True				
ANR	1099962	Statement	stream	808:56:23195:23200	1099612	25	True				
ANR	1099963	Statement	.	808:62:23201:23201	1099612	26	True				
ANR	1099964	Statement	avail_out	808:63:23202:23210	1099612	27	True				
ANR	1099965	Statement	)	808:72:23211:23211	1099612	28	True				
ANR	1099966	ExpressionStatement		808:73:23212:23212	1099612	29	True				
ANR	1099967	ReturnStatement	return ( 0 ) ;	809:2:23216:23226	1099612	30	True				
ANR	1099968	PrimaryExpression	0		1099612	0					
ANR	1099969	ExpressionStatement	up = sp -> tbuf	812:1:23233:23246	1099612	18	True				
ANR	1099970	AssignmentExpression	up = sp -> tbuf		1099612	0		=			
ANR	1099971	Identifier	up		1099612	0					
ANR	1099972	PtrMemberAccess	sp -> tbuf		1099612	1					
ANR	1099973	Identifier	sp		1099612	0					
ANR	1099974	Identifier	tbuf		1099612	1					
ANR	1099975	IfStatement	if ( tif -> tif_flags & TIFF_SWAB )		1099612	19					
ANR	1099976	Condition	tif -> tif_flags & TIFF_SWAB	814:5:23319:23344	1099612	0	True				
ANR	1099977	BitAndExpression	tif -> tif_flags & TIFF_SWAB		1099612	0		&			
ANR	1099978	PtrMemberAccess	tif -> tif_flags		1099612	0					
ANR	1099979	Identifier	tif		1099612	0					
ANR	1099980	Identifier	tif_flags		1099612	1					
ANR	1099981	Identifier	TIFF_SWAB		1099612	1					
ANR	1099982	ExpressionStatement	"TIFFSwabArrayOfShort ( up , nsamples )"	815:2:23349:23383	1099612	1	True				
ANR	1099983	CallExpression	"TIFFSwabArrayOfShort ( up , nsamples )"		1099612	0					
ANR	1099984	Callee	TIFFSwabArrayOfShort		1099612	0					
ANR	1099985	Identifier	TIFFSwabArrayOfShort		1099612	0					
ANR	1099986	ArgumentList	up		1099612	1					
ANR	1099987	Argument	up		1099612	0					
ANR	1099988	Identifier	up		1099612	0					
ANR	1099989	Argument	nsamples		1099612	1					
ANR	1099990	Identifier	nsamples		1099612	0					
ANR	1099991	IfStatement	if ( nsamples % llen )		1099612	20					
ANR	1099992	Condition	nsamples % llen	822:5:23593:23607	1099612	0	True				
ANR	1099993	MultiplicativeExpression	nsamples % llen		1099612	0		%			
ANR	1099994	Identifier	nsamples		1099612	0					
ANR	1099995	Identifier	llen		1099612	1					
ANR	1099996	CompoundStatement		83:22:2528:2528	1099612	1					
ANR	1099997	Statement	TIFFWarningExt	823:2:23615:23628	1099612	0	True				
ANR	1099998	Statement	(	823:16:23629:23629	1099612	1	True				
ANR	1099999	Statement	tif	823:17:23630:23632	1099612	2	True				
ANR	1100000	Statement	->	823:20:23633:23634	1099612	3	True				
ANR	1100001	Statement	tif_clientdata	823:22:23635:23648	1099612	4	True				
ANR	1100002	Statement	","	823:36:23649:23649	1099612	5	True				
ANR	1100003	Statement	module	823:38:23651:23656	1099612	6	True				
ANR	1100004	Statement	","	823:44:23657:23657	1099612	7	True				
ANR	1100005	Statement	"""stride %lu is not a multiple of sample count, """	824:3:23662:23709	1099612	8	True				
ANR	1100006	Statement	"""%lu, data truncated."""	825:3:23714:23735	1099612	9	True				
ANR	1100007	Statement	","	825:25:23736:23736	1099612	10	True				
ANR	1100008	Statement	(	825:27:23738:23738	1099612	11	True				
ANR	1100009	Statement	unsigned	825:28:23739:23746	1099612	12	True				
ANR	1100010	Statement	long	825:37:23748:23751	1099612	13	True				
ANR	1100011	Statement	)	825:41:23752:23752	1099612	14	True				
ANR	1100012	Statement	llen	825:43:23754:23757	1099612	15	True				
ANR	1100013	Statement	","	825:47:23758:23758	1099612	16	True				
ANR	1100014	Statement	(	825:49:23760:23760	1099612	17	True				
ANR	1100015	Statement	unsigned	825:50:23761:23768	1099612	18	True				
ANR	1100016	Statement	long	825:59:23770:23773	1099612	19	True				
ANR	1100017	Statement	)	825:63:23774:23774	1099612	20	True				
ANR	1100018	Statement	nsamples	825:65:23776:23783	1099612	21	True				
ANR	1100019	Statement	)	825:73:23784:23784	1099612	22	True				
ANR	1100020	ExpressionStatement		825:74:23785:23785	1099612	23	True				
ANR	1100021	ExpressionStatement	nsamples -= nsamples % llen	826:2:23789:23816	1099612	24	True				
ANR	1100022	AssignmentExpression	nsamples -= nsamples % llen		1099612	0		-=			
ANR	1100023	Identifier	nsamples		1099612	0					
ANR	1100024	MultiplicativeExpression	nsamples % llen		1099612	1		%			
ANR	1100025	Identifier	nsamples		1099612	0					
ANR	1100026	Identifier	llen		1099612	1					
ANR	1100027	ForStatement	"for ( i = 0 ; i < nsamples ; i += llen , up += llen )"		1099612	21					
ANR	1100028	ForInit	i = 0 ;	829:6:23828:23833	1099612	0	True				
ANR	1100029	AssignmentExpression	i = 0		1099612	0		=			
ANR	1100030	Identifier	i		1099612	0					
ANR	1100031	PrimaryExpression	0		1099612	1					
ANR	1100032	Condition	i < nsamples	829:13:23835:23846	1099612	1	True				
ANR	1100033	RelationalExpression	i < nsamples		1099612	0		<			
ANR	1100034	Identifier	i		1099612	0					
ANR	1100035	Identifier	nsamples		1099612	1					
ANR	1100036	Expression	"i += llen , up += llen"	829:27:23849:23869	1099612	2	True				
ANR	1100037	AssignmentExpression	i += llen		1099612	0		+=			
ANR	1100038	Identifier	i		1099612	0					
ANR	1100039	Identifier	llen		1099612	1					
ANR	1100040	AssignmentExpression	up += llen		1099612	1		+=			
ANR	1100041	Identifier	up		1099612	0					
ANR	1100042	Identifier	llen		1099612	1					
ANR	1100043	CompoundStatement		90:50:2790:2790	1099612	3					
ANR	1100044	SwitchStatement	switch ( sp -> user_datafmt )		1099612	0					
ANR	1100045	Condition	sp -> user_datafmt	830:10:23884:23899	1099612	0	True				
ANR	1100046	PtrMemberAccess	sp -> user_datafmt		1099612	0					
ANR	1100047	Identifier	sp		1099612	0					
ANR	1100048	Identifier	user_datafmt		1099612	1					
ANR	1100049	CompoundStatement		91:29:2821:2821	1099612	1					
ANR	1100050	Label	case PIXARLOGDATAFMT_FLOAT :	831:2:23907:23933	1099612	0	True				
ANR	1100051	Identifier	PIXARLOGDATAFMT_FLOAT		1099612	0					
ANR	1100052	ExpressionStatement	"horizontalAccumulateF ( up , llen , sp -> stride , ( float * ) op , sp -> ToLinearF )"	832:3:23938:24014	1099612	1	True				
ANR	1100053	CallExpression	"horizontalAccumulateF ( up , llen , sp -> stride , ( float * ) op , sp -> ToLinearF )"		1099612	0					
ANR	1100054	Callee	horizontalAccumulateF		1099612	0					
ANR	1100055	Identifier	horizontalAccumulateF		1099612	0					
ANR	1100056	ArgumentList	up		1099612	1					
ANR	1100057	Argument	up		1099612	0					
ANR	1100058	Identifier	up		1099612	0					
ANR	1100059	Argument	llen		1099612	1					
ANR	1100060	Identifier	llen		1099612	0					
ANR	1100061	Argument	sp -> stride		1099612	2					
ANR	1100062	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1100063	Identifier	sp		1099612	0					
ANR	1100064	Identifier	stride		1099612	1					
ANR	1100065	Argument	( float * ) op		1099612	3					
ANR	1100066	CastExpression	( float * ) op		1099612	0					
ANR	1100067	CastTarget	float *		1099612	0					
ANR	1100068	Identifier	op		1099612	1					
ANR	1100069	Argument	sp -> ToLinearF		1099612	4					
ANR	1100070	PtrMemberAccess	sp -> ToLinearF		1099612	0					
ANR	1100071	Identifier	sp		1099612	0					
ANR	1100072	Identifier	ToLinearF		1099612	1					
ANR	1100073	ExpressionStatement	op += llen * sizeof ( float )	834:3:24019:24045	1099612	2	True				
ANR	1100074	AssignmentExpression	op += llen * sizeof ( float )		1099612	0		+=			
ANR	1100075	Identifier	op		1099612	0					
ANR	1100076	MultiplicativeExpression	llen * sizeof ( float )		1099612	1		*			
ANR	1100077	Identifier	llen		1099612	0					
ANR	1100078	SizeofExpression	sizeof ( float )		1099612	1					
ANR	1100079	Sizeof	sizeof		1099612	0					
ANR	1100080	SizeofOperand	float		1099612	1					
ANR	1100081	BreakStatement	break ;	835:3:24050:24055	1099612	3	True				
ANR	1100082	Label	case PIXARLOGDATAFMT_16BIT :	836:2:24059:24085	1099612	4	True				
ANR	1100083	Identifier	PIXARLOGDATAFMT_16BIT		1099612	0					
ANR	1100084	ExpressionStatement	"horizontalAccumulate16 ( up , llen , sp -> stride , ( uint16 * ) op , sp -> ToLinear16 )"	837:3:24090:24169	1099612	5	True				
ANR	1100085	CallExpression	"horizontalAccumulate16 ( up , llen , sp -> stride , ( uint16 * ) op , sp -> ToLinear16 )"		1099612	0					
ANR	1100086	Callee	horizontalAccumulate16		1099612	0					
ANR	1100087	Identifier	horizontalAccumulate16		1099612	0					
ANR	1100088	ArgumentList	up		1099612	1					
ANR	1100089	Argument	up		1099612	0					
ANR	1100090	Identifier	up		1099612	0					
ANR	1100091	Argument	llen		1099612	1					
ANR	1100092	Identifier	llen		1099612	0					
ANR	1100093	Argument	sp -> stride		1099612	2					
ANR	1100094	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1100095	Identifier	sp		1099612	0					
ANR	1100096	Identifier	stride		1099612	1					
ANR	1100097	Argument	( uint16 * ) op		1099612	3					
ANR	1100098	CastExpression	( uint16 * ) op		1099612	0					
ANR	1100099	CastTarget	uint16 *		1099612	0					
ANR	1100100	Identifier	op		1099612	1					
ANR	1100101	Argument	sp -> ToLinear16		1099612	4					
ANR	1100102	PtrMemberAccess	sp -> ToLinear16		1099612	0					
ANR	1100103	Identifier	sp		1099612	0					
ANR	1100104	Identifier	ToLinear16		1099612	1					
ANR	1100105	ExpressionStatement	op += llen * sizeof ( uint16 )	839:3:24174:24201	1099612	6	True				
ANR	1100106	AssignmentExpression	op += llen * sizeof ( uint16 )		1099612	0		+=			
ANR	1100107	Identifier	op		1099612	0					
ANR	1100108	MultiplicativeExpression	llen * sizeof ( uint16 )		1099612	1		*			
ANR	1100109	Identifier	llen		1099612	0					
ANR	1100110	SizeofExpression	sizeof ( uint16 )		1099612	1					
ANR	1100111	Sizeof	sizeof		1099612	0					
ANR	1100112	SizeofOperand	uint16		1099612	1					
ANR	1100113	BreakStatement	break ;	840:3:24206:24211	1099612	7	True				
ANR	1100114	Label	case PIXARLOGDATAFMT_12BITPICIO :	841:2:24215:24246	1099612	8	True				
ANR	1100115	Identifier	PIXARLOGDATAFMT_12BITPICIO		1099612	0					
ANR	1100116	ExpressionStatement	"horizontalAccumulate12 ( up , llen , sp -> stride , ( int16 * ) op , sp -> ToLinearF )"	842:3:24251:24328	1099612	9	True				
ANR	1100117	CallExpression	"horizontalAccumulate12 ( up , llen , sp -> stride , ( int16 * ) op , sp -> ToLinearF )"		1099612	0					
ANR	1100118	Callee	horizontalAccumulate12		1099612	0					
ANR	1100119	Identifier	horizontalAccumulate12		1099612	0					
ANR	1100120	ArgumentList	up		1099612	1					
ANR	1100121	Argument	up		1099612	0					
ANR	1100122	Identifier	up		1099612	0					
ANR	1100123	Argument	llen		1099612	1					
ANR	1100124	Identifier	llen		1099612	0					
ANR	1100125	Argument	sp -> stride		1099612	2					
ANR	1100126	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1100127	Identifier	sp		1099612	0					
ANR	1100128	Identifier	stride		1099612	1					
ANR	1100129	Argument	( int16 * ) op		1099612	3					
ANR	1100130	CastExpression	( int16 * ) op		1099612	0					
ANR	1100131	CastTarget	int16 *		1099612	0					
ANR	1100132	Identifier	op		1099612	1					
ANR	1100133	Argument	sp -> ToLinearF		1099612	4					
ANR	1100134	PtrMemberAccess	sp -> ToLinearF		1099612	0					
ANR	1100135	Identifier	sp		1099612	0					
ANR	1100136	Identifier	ToLinearF		1099612	1					
ANR	1100137	ExpressionStatement	op += llen * sizeof ( int16 )	844:3:24333:24359	1099612	10	True				
ANR	1100138	AssignmentExpression	op += llen * sizeof ( int16 )		1099612	0		+=			
ANR	1100139	Identifier	op		1099612	0					
ANR	1100140	MultiplicativeExpression	llen * sizeof ( int16 )		1099612	1		*			
ANR	1100141	Identifier	llen		1099612	0					
ANR	1100142	SizeofExpression	sizeof ( int16 )		1099612	1					
ANR	1100143	Sizeof	sizeof		1099612	0					
ANR	1100144	SizeofOperand	int16		1099612	1					
ANR	1100145	BreakStatement	break ;	845:3:24364:24369	1099612	11	True				
ANR	1100146	Label	case PIXARLOGDATAFMT_11BITLOG :	846:2:24373:24402	1099612	12	True				
ANR	1100147	Identifier	PIXARLOGDATAFMT_11BITLOG		1099612	0					
ANR	1100148	ExpressionStatement	"horizontalAccumulate11 ( up , llen , sp -> stride , ( uint16 * ) op )"	847:3:24407:24470	1099612	13	True				
ANR	1100149	CallExpression	"horizontalAccumulate11 ( up , llen , sp -> stride , ( uint16 * ) op )"		1099612	0					
ANR	1100150	Callee	horizontalAccumulate11		1099612	0					
ANR	1100151	Identifier	horizontalAccumulate11		1099612	0					
ANR	1100152	ArgumentList	up		1099612	1					
ANR	1100153	Argument	up		1099612	0					
ANR	1100154	Identifier	up		1099612	0					
ANR	1100155	Argument	llen		1099612	1					
ANR	1100156	Identifier	llen		1099612	0					
ANR	1100157	Argument	sp -> stride		1099612	2					
ANR	1100158	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1100159	Identifier	sp		1099612	0					
ANR	1100160	Identifier	stride		1099612	1					
ANR	1100161	Argument	( uint16 * ) op		1099612	3					
ANR	1100162	CastExpression	( uint16 * ) op		1099612	0					
ANR	1100163	CastTarget	uint16 *		1099612	0					
ANR	1100164	Identifier	op		1099612	1					
ANR	1100165	ExpressionStatement	op += llen * sizeof ( uint16 )	849:3:24475:24502	1099612	14	True				
ANR	1100166	AssignmentExpression	op += llen * sizeof ( uint16 )		1099612	0		+=			
ANR	1100167	Identifier	op		1099612	0					
ANR	1100168	MultiplicativeExpression	llen * sizeof ( uint16 )		1099612	1		*			
ANR	1100169	Identifier	llen		1099612	0					
ANR	1100170	SizeofExpression	sizeof ( uint16 )		1099612	1					
ANR	1100171	Sizeof	sizeof		1099612	0					
ANR	1100172	SizeofOperand	uint16		1099612	1					
ANR	1100173	BreakStatement	break ;	850:3:24507:24512	1099612	15	True				
ANR	1100174	Label	case PIXARLOGDATAFMT_8BIT :	851:2:24516:24541	1099612	16	True				
ANR	1100175	Identifier	PIXARLOGDATAFMT_8BIT		1099612	0					
ANR	1100176	ExpressionStatement	"horizontalAccumulate8 ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"	852:3:24546:24630	1099612	17	True				
ANR	1100177	CallExpression	"horizontalAccumulate8 ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"		1099612	0					
ANR	1100178	Callee	horizontalAccumulate8		1099612	0					
ANR	1100179	Identifier	horizontalAccumulate8		1099612	0					
ANR	1100180	ArgumentList	up		1099612	1					
ANR	1100181	Argument	up		1099612	0					
ANR	1100182	Identifier	up		1099612	0					
ANR	1100183	Argument	llen		1099612	1					
ANR	1100184	Identifier	llen		1099612	0					
ANR	1100185	Argument	sp -> stride		1099612	2					
ANR	1100186	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1100187	Identifier	sp		1099612	0					
ANR	1100188	Identifier	stride		1099612	1					
ANR	1100189	Argument	( unsigned char * ) op		1099612	3					
ANR	1100190	CastExpression	( unsigned char * ) op		1099612	0					
ANR	1100191	CastTarget	unsigned char *		1099612	0					
ANR	1100192	Identifier	op		1099612	1					
ANR	1100193	Argument	sp -> ToLinear8		1099612	4					
ANR	1100194	PtrMemberAccess	sp -> ToLinear8		1099612	0					
ANR	1100195	Identifier	sp		1099612	0					
ANR	1100196	Identifier	ToLinear8		1099612	1					
ANR	1100197	ExpressionStatement	op += llen * sizeof ( unsigned char )	854:3:24635:24669	1099612	18	True				
ANR	1100198	AssignmentExpression	op += llen * sizeof ( unsigned char )		1099612	0		+=			
ANR	1100199	Identifier	op		1099612	0					
ANR	1100200	MultiplicativeExpression	llen * sizeof ( unsigned char )		1099612	1		*			
ANR	1100201	Identifier	llen		1099612	0					
ANR	1100202	SizeofExpression	sizeof ( unsigned char )		1099612	1					
ANR	1100203	Sizeof	sizeof		1099612	0					
ANR	1100204	SizeofOperand	unsigned char		1099612	1					
ANR	1100205	BreakStatement	break ;	855:3:24674:24679	1099612	19	True				
ANR	1100206	Label	case PIXARLOGDATAFMT_8BITABGR :	856:2:24683:24712	1099612	20	True				
ANR	1100207	Identifier	PIXARLOGDATAFMT_8BITABGR		1099612	0					
ANR	1100208	ExpressionStatement	"horizontalAccumulate8abgr ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"	857:3:24717:24805	1099612	21	True				
ANR	1100209	CallExpression	"horizontalAccumulate8abgr ( up , llen , sp -> stride , ( unsigned char * ) op , sp -> ToLinear8 )"		1099612	0					
ANR	1100210	Callee	horizontalAccumulate8abgr		1099612	0					
ANR	1100211	Identifier	horizontalAccumulate8abgr		1099612	0					
ANR	1100212	ArgumentList	up		1099612	1					
ANR	1100213	Argument	up		1099612	0					
ANR	1100214	Identifier	up		1099612	0					
ANR	1100215	Argument	llen		1099612	1					
ANR	1100216	Identifier	llen		1099612	0					
ANR	1100217	Argument	sp -> stride		1099612	2					
ANR	1100218	PtrMemberAccess	sp -> stride		1099612	0					
ANR	1100219	Identifier	sp		1099612	0					
ANR	1100220	Identifier	stride		1099612	1					
ANR	1100221	Argument	( unsigned char * ) op		1099612	3					
ANR	1100222	CastExpression	( unsigned char * ) op		1099612	0					
ANR	1100223	CastTarget	unsigned char *		1099612	0					
ANR	1100224	Identifier	op		1099612	1					
ANR	1100225	Argument	sp -> ToLinear8		1099612	4					
ANR	1100226	PtrMemberAccess	sp -> ToLinear8		1099612	0					
ANR	1100227	Identifier	sp		1099612	0					
ANR	1100228	Identifier	ToLinear8		1099612	1					
ANR	1100229	ExpressionStatement	op += llen * sizeof ( unsigned char )	859:3:24810:24844	1099612	22	True				
ANR	1100230	AssignmentExpression	op += llen * sizeof ( unsigned char )		1099612	0		+=			
ANR	1100231	Identifier	op		1099612	0					
ANR	1100232	MultiplicativeExpression	llen * sizeof ( unsigned char )		1099612	1		*			
ANR	1100233	Identifier	llen		1099612	0					
ANR	1100234	SizeofExpression	sizeof ( unsigned char )		1099612	1					
ANR	1100235	Sizeof	sizeof		1099612	0					
ANR	1100236	SizeofOperand	unsigned char		1099612	1					
ANR	1100237	BreakStatement	break ;	860:3:24849:24854	1099612	23	True				
ANR	1100238	Label	default :	861:2:24858:24865	1099612	24	True				
ANR	1100239	Identifier	default		1099612	0					
ANR	1100240	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unsupported bits/sample: %d"" , td -> td_bitspersample )"	862:3:24870:24976	1099612	25	True				
ANR	1100241	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Unsupported bits/sample: %d"" , td -> td_bitspersample )"		1099612	0					
ANR	1100242	Callee	TIFFErrorExt		1099612	0					
ANR	1100243	Identifier	TIFFErrorExt		1099612	0					
ANR	1100244	ArgumentList	tif -> tif_clientdata		1099612	1					
ANR	1100245	Argument	tif -> tif_clientdata		1099612	0					
ANR	1100246	PtrMemberAccess	tif -> tif_clientdata		1099612	0					
ANR	1100247	Identifier	tif		1099612	0					
ANR	1100248	Identifier	tif_clientdata		1099612	1					
ANR	1100249	Argument	module		1099612	1					
ANR	1100250	Identifier	module		1099612	0					
ANR	1100251	Argument	"""Unsupported bits/sample: %d"""		1099612	2					
ANR	1100252	PrimaryExpression	"""Unsupported bits/sample: %d"""		1099612	0					
ANR	1100253	Argument	td -> td_bitspersample		1099612	3					
ANR	1100254	PtrMemberAccess	td -> td_bitspersample		1099612	0					
ANR	1100255	Identifier	td		1099612	0					
ANR	1100256	Identifier	td_bitspersample		1099612	1					
ANR	1100257	ReturnStatement	return ( 0 ) ;	865:3:24981:24991	1099612	26	True				
ANR	1100258	PrimaryExpression	0		1099612	0					
ANR	1100259	ReturnStatement	return ( 1 ) ;	869:1:25002:25012	1099612	22	True				
ANR	1100260	PrimaryExpression	1		1099612	0					
ANR	1100261	ReturnType	static int		1099612	1					
ANR	1100262	Identifier	PixarLogDecode		1099612	2					
ANR	1100263	ParameterList	"TIFF * tif , uint8 * op , tmsize_t occ , uint16 s"		1099612	3					
ANR	1100264	Parameter	TIFF * tif	739:15:21035:21043	1099612	0	True				
ANR	1100265	ParameterType	TIFF *		1099612	0					
ANR	1100266	Identifier	tif		1099612	1					
ANR	1100267	Parameter	uint8 * op	739:26:21046:21054	1099612	1	True				
ANR	1100268	ParameterType	uint8 *		1099612	0					
ANR	1100269	Identifier	op		1099612	1					
ANR	1100270	Parameter	tmsize_t occ	739:37:21057:21068	1099612	2	True				
ANR	1100271	ParameterType	tmsize_t		1099612	0					
ANR	1100272	Identifier	occ		1099612	1					
ANR	1100273	Parameter	uint16 s	739:51:21071:21078	1099612	3	True				
ANR	1100274	ParameterType	uint16		1099612	0					
ANR	1100275	Identifier	s		1099612	1					
ANR	1100276	CFGEntryNode	ENTRY		1099612		True				
ANR	1100277	CFGExitNode	EXIT		1099612		True				
ANR	1100278	Symbol	* sp		1099612						
ANR	1100279	Symbol	& tif -> tif_dir		1099612						
ANR	1100280	Symbol	Z_DATA_ERROR		1099612						
ANR	1100281	Symbol	& sp -> stream		1099612						
ANR	1100282	Symbol	inflateSync		1099612						
ANR	1100283	Symbol	sp -> user_datafmt		1099612						
ANR	1100284	Symbol	sp -> stream . next_out		1099612						
ANR	1100285	Symbol	Z_OK		1099612						
ANR	1100286	Symbol	occ		1099612						
ANR	1100287	Symbol	tif		1099612						
ANR	1100288	Symbol	sp -> stride		1099612						
ANR	1100289	Symbol	DecoderState		1099612						
ANR	1100290	Symbol	sp -> stream . msg		1099612						
ANR	1100291	Symbol	Z_STREAM_END		1099612						
ANR	1100292	Symbol	sp -> tbuf		1099612						
ANR	1100293	Symbol	llen		1099612						
ANR	1100294	Symbol	up		1099612						
ANR	1100295	Symbol	state		1099612						
ANR	1100296	Symbol	sp		1099612						
ANR	1100297	Symbol	Z_PARTIAL_FLUSH		1099612						
ANR	1100298	Symbol	op		1099612						
ANR	1100299	Symbol	NULL		1099612						
ANR	1100300	Symbol	td -> td_imagewidth		1099612						
ANR	1100301	Symbol	module		1099612						
ANR	1100302	Symbol	i		1099612						
ANR	1100303	Symbol	tif -> tif_row		1099612						
ANR	1100304	Symbol	sp -> stream . avail_out		1099612						
ANR	1100305	Symbol	sp -> ToLinear8		1099612						
ANR	1100306	Symbol	tif -> tif_clientdata		1099612						
ANR	1100307	Symbol	td		1099612						
ANR	1100308	Symbol	sp -> ToLinear16		1099612						
ANR	1100309	Symbol	s		1099612						
ANR	1100310	Symbol	nsamples		1099612						
ANR	1100311	Symbol	inflate		1099612						
ANR	1100312	Symbol	* td		1099612						
ANR	1100313	Symbol	sp -> stream		1099612						
ANR	1100314	Symbol	sp -> ToLinearF		1099612						
ANR	1100315	Symbol	* tif		1099612						
ANR	1100316	Symbol	TIFF_SWAB		1099612						
ANR	1100317	Symbol	td -> td_bitspersample		1099612						
ANR	1100318	Symbol	tif -> tif_flags		1099612						
ANR	1100319	Function	PixarLogSetupEncode	872:0:25017:26204							
ANR	1100320	FunctionDef	PixarLogSetupEncode (TIFF * tif)		1100319	0					
ANR	1100321	CompoundStatement		874:0:25059:26204	1100319	0					
ANR	1100322	Statement	static	875:1:25062:25067	1100319	0	True				
ANR	1100323	IdentifierDeclStatement	"const char module [ ] = ""PixarLogSetupEncode"" ;"	875:8:25069:25112	1100319	1	True				
ANR	1100324	IdentifierDecl	"module [ ] = ""PixarLogSetupEncode"""		1100319	0					
ANR	1100325	IdentifierDeclType	const char [ ]		1100319	0					
ANR	1100326	Identifier	module		1100319	1					
ANR	1100327	AssignmentExpression	"module [ ] = ""PixarLogSetupEncode"""		1100319	2		=			
ANR	1100328	Identifier	module		1100319	0					
ANR	1100329	PrimaryExpression	"""PixarLogSetupEncode"""		1100319	1					
ANR	1100330	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	876:1:25115:25148	1100319	2	True				
ANR	1100331	IdentifierDecl	* td = & tif -> tif_dir		1100319	0					
ANR	1100332	IdentifierDeclType	TIFFDirectory *		1100319	0					
ANR	1100333	Identifier	td		1100319	1					
ANR	1100334	AssignmentExpression	* td = & tif -> tif_dir		1100319	2		=			
ANR	1100335	Identifier	td		1100319	0					
ANR	1100336	UnaryOperationExpression	& tif -> tif_dir		1100319	1					
ANR	1100337	UnaryOperator	&		1100319	0					
ANR	1100338	PtrMemberAccess	tif -> tif_dir		1100319	1					
ANR	1100339	Identifier	tif		1100319	0					
ANR	1100340	Identifier	tif_dir		1100319	1					
ANR	1100341	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	877:1:25151:25188	1100319	3	True				
ANR	1100342	IdentifierDecl	* sp = EncoderState ( tif )		1100319	0					
ANR	1100343	IdentifierDeclType	PixarLogState *		1100319	0					
ANR	1100344	Identifier	sp		1100319	1					
ANR	1100345	AssignmentExpression	* sp = EncoderState ( tif )		1100319	2		=			
ANR	1100346	Identifier	sp		1100319	0					
ANR	1100347	CallExpression	EncoderState ( tif )		1100319	1					
ANR	1100348	Callee	EncoderState		1100319	0					
ANR	1100349	Identifier	EncoderState		1100319	0					
ANR	1100350	ArgumentList	tif		1100319	1					
ANR	1100351	Argument	tif		1100319	0					
ANR	1100352	Identifier	tif		1100319	0					
ANR	1100353	IdentifierDeclStatement	tmsize_t tbuf_size ;	878:1:25191:25209	1100319	4	True				
ANR	1100354	IdentifierDecl	tbuf_size		1100319	0					
ANR	1100355	IdentifierDeclType	tmsize_t		1100319	0					
ANR	1100356	Identifier	tbuf_size		1100319	1					
ANR	1100357	ExpressionStatement	assert ( sp != NULL )	880:1:25213:25231	1100319	5	True				
ANR	1100358	CallExpression	assert ( sp != NULL )		1100319	0					
ANR	1100359	Callee	assert		1100319	0					
ANR	1100360	Identifier	assert		1100319	0					
ANR	1100361	ArgumentList	sp != NULL		1100319	1					
ANR	1100362	Argument	sp != NULL		1100319	0					
ANR	1100363	EqualityExpression	sp != NULL		1100319	0		!=			
ANR	1100364	Identifier	sp		1100319	0					
ANR	1100365	Identifier	NULL		1100319	1					
ANR	1100366	ExpressionStatement	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )	884:1:25297:25388	1100319	6	True				
ANR	1100367	AssignmentExpression	sp -> stride = ( td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1 )		1100319	0		=			
ANR	1100368	PtrMemberAccess	sp -> stride		1100319	0					
ANR	1100369	Identifier	sp		1100319	0					
ANR	1100370	Identifier	stride		1100319	1					
ANR	1100371	ConditionalExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG ? td -> td_samplesperpixel : 1		1100319	1					
ANR	1100372	Condition	td -> td_planarconfig == PLANARCONFIG_CONTIG		1100319	0					
ANR	1100373	EqualityExpression	td -> td_planarconfig == PLANARCONFIG_CONTIG		1100319	0		==			
ANR	1100374	PtrMemberAccess	td -> td_planarconfig		1100319	0					
ANR	1100375	Identifier	td		1100319	0					
ANR	1100376	Identifier	td_planarconfig		1100319	1					
ANR	1100377	Identifier	PLANARCONFIG_CONTIG		1100319	1					
ANR	1100378	PtrMemberAccess	td -> td_samplesperpixel		1100319	1					
ANR	1100379	Identifier	td		1100319	0					
ANR	1100380	Identifier	td_samplesperpixel		1100319	1					
ANR	1100381	PrimaryExpression	1		1100319	2					
ANR	1100382	ExpressionStatement	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"	886:1:25391:25518	1100319	7	True				
ANR	1100383	AssignmentExpression	"tbuf_size = multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"		1100319	0		=			
ANR	1100384	Identifier	tbuf_size		1100319	0					
ANR	1100385	CallExpression	"multiply_ms ( multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip ) , sizeof ( uint16 ) )"		1100319	1					
ANR	1100386	Callee	multiply_ms		1100319	0					
ANR	1100387	Identifier	multiply_ms		1100319	0					
ANR	1100388	ArgumentList	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		1100319	1					
ANR	1100389	Argument	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		1100319	0					
ANR	1100390	CallExpression	"multiply_ms ( multiply_ms ( sp -> stride , td -> td_imagewidth ) , td -> td_rowsperstrip )"		1100319	0					
ANR	1100391	Callee	multiply_ms		1100319	0					
ANR	1100392	Identifier	multiply_ms		1100319	0					
ANR	1100393	ArgumentList	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		1100319	1					
ANR	1100394	Argument	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		1100319	0					
ANR	1100395	CallExpression	"multiply_ms ( sp -> stride , td -> td_imagewidth )"		1100319	0					
ANR	1100396	Callee	multiply_ms		1100319	0					
ANR	1100397	Identifier	multiply_ms		1100319	0					
ANR	1100398	ArgumentList	sp -> stride		1100319	1					
ANR	1100399	Argument	sp -> stride		1100319	0					
ANR	1100400	PtrMemberAccess	sp -> stride		1100319	0					
ANR	1100401	Identifier	sp		1100319	0					
ANR	1100402	Identifier	stride		1100319	1					
ANR	1100403	Argument	td -> td_imagewidth		1100319	1					
ANR	1100404	PtrMemberAccess	td -> td_imagewidth		1100319	0					
ANR	1100405	Identifier	td		1100319	0					
ANR	1100406	Identifier	td_imagewidth		1100319	1					
ANR	1100407	Argument	td -> td_rowsperstrip		1100319	1					
ANR	1100408	PtrMemberAccess	td -> td_rowsperstrip		1100319	0					
ANR	1100409	Identifier	td		1100319	0					
ANR	1100410	Identifier	td_rowsperstrip		1100319	1					
ANR	1100411	Argument	sizeof ( uint16 )		1100319	1					
ANR	1100412	SizeofExpression	sizeof ( uint16 )		1100319	0					
ANR	1100413	Sizeof	sizeof		1100319	0					
ANR	1100414	SizeofOperand	uint16		1100319	1					
ANR	1100415	IfStatement	if ( tbuf_size == 0 )		1100319	8					
ANR	1100416	Condition	tbuf_size == 0	888:5:25525:25538	1100319	0	True				
ANR	1100417	EqualityExpression	tbuf_size == 0		1100319	0		==			
ANR	1100418	Identifier	tbuf_size		1100319	0					
ANR	1100419	PrimaryExpression	0		1100319	1					
ANR	1100420	ReturnStatement	return ( 0 ) ;	889:2:25543:25553	1100319	1	True				
ANR	1100421	PrimaryExpression	0		1100319	0					
ANR	1100422	ExpressionStatement	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )	890:1:25635:25679	1100319	9	True				
ANR	1100423	AssignmentExpression	sp -> tbuf = ( uint16 * ) _TIFFmalloc ( tbuf_size )		1100319	0		=			
ANR	1100424	PtrMemberAccess	sp -> tbuf		1100319	0					
ANR	1100425	Identifier	sp		1100319	0					
ANR	1100426	Identifier	tbuf		1100319	1					
ANR	1100427	CastExpression	( uint16 * ) _TIFFmalloc ( tbuf_size )		1100319	1					
ANR	1100428	CastTarget	uint16 *		1100319	0					
ANR	1100429	CallExpression	_TIFFmalloc ( tbuf_size )		1100319	1					
ANR	1100430	Callee	_TIFFmalloc		1100319	0					
ANR	1100431	Identifier	_TIFFmalloc		1100319	0					
ANR	1100432	ArgumentList	tbuf_size		1100319	1					
ANR	1100433	Argument	tbuf_size		1100319	0					
ANR	1100434	Identifier	tbuf_size		1100319	0					
ANR	1100435	IfStatement	if ( sp -> tbuf == NULL )		1100319	10					
ANR	1100436	Condition	sp -> tbuf == NULL	891:5:25686:25701	1100319	0	True				
ANR	1100437	EqualityExpression	sp -> tbuf == NULL		1100319	0		==			
ANR	1100438	PtrMemberAccess	sp -> tbuf		1100319	0					
ANR	1100439	Identifier	sp		1100319	0					
ANR	1100440	Identifier	tbuf		1100319	1					
ANR	1100441	Identifier	NULL		1100319	1					
ANR	1100442	ReturnStatement	return ( 0 ) ;	892:2:25706:25716	1100319	1	True				
ANR	1100443	PrimaryExpression	0		1100319	0					
ANR	1100444	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		1100319	11					
ANR	1100445	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	893:5:25723:25765	1100319	0	True				
ANR	1100446	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		1100319	0		==			
ANR	1100447	PtrMemberAccess	sp -> user_datafmt		1100319	0					
ANR	1100448	Identifier	sp		1100319	0					
ANR	1100449	Identifier	user_datafmt		1100319	1					
ANR	1100450	Identifier	PIXARLOGDATAFMT_UNKNOWN		1100319	1					
ANR	1100451	ExpressionStatement	sp -> user_datafmt = PixarLogGuessDataFmt ( td )	894:2:25770:25813	1100319	1	True				
ANR	1100452	AssignmentExpression	sp -> user_datafmt = PixarLogGuessDataFmt ( td )		1100319	0		=			
ANR	1100453	PtrMemberAccess	sp -> user_datafmt		1100319	0					
ANR	1100454	Identifier	sp		1100319	0					
ANR	1100455	Identifier	user_datafmt		1100319	1					
ANR	1100456	CallExpression	PixarLogGuessDataFmt ( td )		1100319	1					
ANR	1100457	Callee	PixarLogGuessDataFmt		1100319	0					
ANR	1100458	Identifier	PixarLogGuessDataFmt		1100319	0					
ANR	1100459	ArgumentList	td		1100319	1					
ANR	1100460	Argument	td		1100319	0					
ANR	1100461	Identifier	td		1100319	0					
ANR	1100462	IfStatement	if ( sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN )		1100319	12					
ANR	1100463	Condition	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN	895:5:25820:25862	1100319	0	True				
ANR	1100464	EqualityExpression	sp -> user_datafmt == PIXARLOGDATAFMT_UNKNOWN		1100319	0		==			
ANR	1100465	PtrMemberAccess	sp -> user_datafmt		1100319	0					
ANR	1100466	Identifier	sp		1100319	0					
ANR	1100467	Identifier	user_datafmt		1100319	1					
ANR	1100468	Identifier	PIXARLOGDATAFMT_UNKNOWN		1100319	1					
ANR	1100469	CompoundStatement		22:50:805:805	1100319	1					
ANR	1100470	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle %d bit linear encodings"" , td -> td_bitspersample )"	896:2:25869:25993	1100319	0	True				
ANR	1100471	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""PixarLog compression can't handle %d bit linear encodings"" , td -> td_bitspersample )"		1100319	0					
ANR	1100472	Callee	TIFFErrorExt		1100319	0					
ANR	1100473	Identifier	TIFFErrorExt		1100319	0					
ANR	1100474	ArgumentList	tif -> tif_clientdata		1100319	1					
ANR	1100475	Argument	tif -> tif_clientdata		1100319	0					
ANR	1100476	PtrMemberAccess	tif -> tif_clientdata		1100319	0					
ANR	1100477	Identifier	tif		1100319	0					
ANR	1100478	Identifier	tif_clientdata		1100319	1					
ANR	1100479	Argument	module		1100319	1					
ANR	1100480	Identifier	module		1100319	0					
ANR	1100481	Argument	"""PixarLog compression can't handle %d bit linear encodings"""		1100319	2					
ANR	1100482	PrimaryExpression	"""PixarLog compression can't handle %d bit linear encodings"""		1100319	0					
ANR	1100483	Argument	td -> td_bitspersample		1100319	3					
ANR	1100484	PtrMemberAccess	td -> td_bitspersample		1100319	0					
ANR	1100485	Identifier	td		1100319	0					
ANR	1100486	Identifier	td_bitspersample		1100319	1					
ANR	1100487	ReturnStatement	return ( 0 ) ;	897:2:25997:26007	1100319	1	True				
ANR	1100488	PrimaryExpression	0		1100319	0					
ANR	1100489	IfStatement	"if ( deflateInit ( & sp -> stream , sp -> quality ) != Z_OK )"		1100319	13					
ANR	1100490	Condition	"deflateInit ( & sp -> stream , sp -> quality ) != Z_OK"	900:5:26018:26062	1100319	0	True				
ANR	1100491	EqualityExpression	"deflateInit ( & sp -> stream , sp -> quality ) != Z_OK"		1100319	0		!=			
ANR	1100492	CallExpression	"deflateInit ( & sp -> stream , sp -> quality )"		1100319	0					
ANR	1100493	Callee	deflateInit		1100319	0					
ANR	1100494	Identifier	deflateInit		1100319	0					
ANR	1100495	ArgumentList	& sp -> stream		1100319	1					
ANR	1100496	Argument	& sp -> stream		1100319	0					
ANR	1100497	UnaryOperationExpression	& sp -> stream		1100319	0					
ANR	1100498	UnaryOperator	&		1100319	0					
ANR	1100499	PtrMemberAccess	sp -> stream		1100319	1					
ANR	1100500	Identifier	sp		1100319	0					
ANR	1100501	Identifier	stream		1100319	1					
ANR	1100502	Argument	sp -> quality		1100319	1					
ANR	1100503	PtrMemberAccess	sp -> quality		1100319	0					
ANR	1100504	Identifier	sp		1100319	0					
ANR	1100505	Identifier	quality		1100319	1					
ANR	1100506	Identifier	Z_OK		1100319	1					
ANR	1100507	CompoundStatement		27:52:1005:1005	1100319	1					
ANR	1100508	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg )"	901:2:26069:26132	1100319	0	True				
ANR	1100509	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%s"" , sp -> stream . msg )"		1100319	0					
ANR	1100510	Callee	TIFFErrorExt		1100319	0					
ANR	1100511	Identifier	TIFFErrorExt		1100319	0					
ANR	1100512	ArgumentList	tif -> tif_clientdata		1100319	1					
ANR	1100513	Argument	tif -> tif_clientdata		1100319	0					
ANR	1100514	PtrMemberAccess	tif -> tif_clientdata		1100319	0					
ANR	1100515	Identifier	tif		1100319	0					
ANR	1100516	Identifier	tif_clientdata		1100319	1					
ANR	1100517	Argument	module		1100319	1					
ANR	1100518	Identifier	module		1100319	0					
ANR	1100519	Argument	"""%s"""		1100319	2					
ANR	1100520	PrimaryExpression	"""%s"""		1100319	0					
ANR	1100521	Argument	sp -> stream . msg		1100319	3					
ANR	1100522	MemberAccess	sp -> stream . msg		1100319	0					
ANR	1100523	PtrMemberAccess	sp -> stream		1100319	0					
ANR	1100524	Identifier	sp		1100319	0					
ANR	1100525	Identifier	stream		1100319	1					
ANR	1100526	Identifier	msg		1100319	1					
ANR	1100527	ReturnStatement	return ( 0 ) ;	902:2:26136:26146	1100319	1	True				
ANR	1100528	PrimaryExpression	0		1100319	0					
ANR	1100529	ElseStatement	else		1100319	0					
ANR	1100530	CompoundStatement		30:8:1096:1096	1100319	0					
ANR	1100531	ExpressionStatement	sp -> state |= PLSTATE_INIT	904:2:26160:26185	1100319	0	True				
ANR	1100532	AssignmentExpression	sp -> state |= PLSTATE_INIT		1100319	0		|=			
ANR	1100533	PtrMemberAccess	sp -> state		1100319	0					
ANR	1100534	Identifier	sp		1100319	0					
ANR	1100535	Identifier	state		1100319	1					
ANR	1100536	Identifier	PLSTATE_INIT		1100319	1					
ANR	1100537	ReturnStatement	return ( 1 ) ;	905:2:26189:26199	1100319	1	True				
ANR	1100538	PrimaryExpression	1		1100319	0					
ANR	1100539	ReturnType	static int		1100319	1					
ANR	1100540	Identifier	PixarLogSetupEncode		1100319	2					
ANR	1100541	ParameterList	TIFF * tif		1100319	3					
ANR	1100542	Parameter	TIFF * tif	873:20:25048:25056	1100319	0	True				
ANR	1100543	ParameterType	TIFF *		1100319	0					
ANR	1100544	Identifier	tif		1100319	1					
ANR	1100545	CFGEntryNode	ENTRY		1100319		True				
ANR	1100546	CFGExitNode	EXIT		1100319		True				
ANR	1100547	Symbol	td -> td_planarconfig		1100319						
ANR	1100548	Symbol	* sp		1100319						
ANR	1100549	Symbol	& tif -> tif_dir		1100319						
ANR	1100550	Symbol	& sp -> stream		1100319						
ANR	1100551	Symbol	sp -> user_datafmt		1100319						
ANR	1100552	Symbol	Z_OK		1100319						
ANR	1100553	Symbol	PIXARLOGDATAFMT_UNKNOWN		1100319						
ANR	1100554	Symbol	tif		1100319						
ANR	1100555	Symbol	sp -> stride		1100319						
ANR	1100556	Symbol	PixarLogGuessDataFmt		1100319						
ANR	1100557	Symbol	sp -> stream . msg		1100319						
ANR	1100558	Symbol	sp -> tbuf		1100319						
ANR	1100559	Symbol	PLSTATE_INIT		1100319						
ANR	1100560	Symbol	sp		1100319						
ANR	1100561	Symbol	EncoderState		1100319						
ANR	1100562	Symbol	NULL		1100319						
ANR	1100563	Symbol	td -> td_imagewidth		1100319						
ANR	1100564	Symbol	module		1100319						
ANR	1100565	Symbol	PLANARCONFIG_CONTIG		1100319						
ANR	1100566	Symbol	deflateInit		1100319						
ANR	1100567	Symbol	tbuf_size		1100319						
ANR	1100568	Symbol	sp -> state		1100319						
ANR	1100569	Symbol	multiply_ms		1100319						
ANR	1100570	Symbol	tif -> tif_clientdata		1100319						
ANR	1100571	Symbol	sp -> quality		1100319						
ANR	1100572	Symbol	td		1100319						
ANR	1100573	Symbol	td -> td_samplesperpixel		1100319						
ANR	1100574	Symbol	* td		1100319						
ANR	1100575	Symbol	_TIFFmalloc		1100319						
ANR	1100576	Symbol	sp -> stream		1100319						
ANR	1100577	Symbol	* tif		1100319						
ANR	1100578	Symbol	td -> td_rowsperstrip		1100319						
ANR	1100579	Symbol	td -> td_bitspersample		1100319						
ANR	1100580	Function	PixarLogPreEncode	912:0:26263:27006							
ANR	1100581	FunctionDef	"PixarLogPreEncode (TIFF * tif , uint16 s)"		1100580	0					
ANR	1100582	CompoundStatement		914:0:26313:27006	1100580	0					
ANR	1100583	Statement	static	915:1:26316:26321	1100580	0	True				
ANR	1100584	IdentifierDeclStatement	"const char module [ ] = ""PixarLogPreEncode"" ;"	915:8:26323:26364	1100580	1	True				
ANR	1100585	IdentifierDecl	"module [ ] = ""PixarLogPreEncode"""		1100580	0					
ANR	1100586	IdentifierDeclType	const char [ ]		1100580	0					
ANR	1100587	Identifier	module		1100580	1					
ANR	1100588	AssignmentExpression	"module [ ] = ""PixarLogPreEncode"""		1100580	2		=			
ANR	1100589	Identifier	module		1100580	0					
ANR	1100590	PrimaryExpression	"""PixarLogPreEncode"""		1100580	1					
ANR	1100591	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	916:1:26367:26404	1100580	2	True				
ANR	1100592	IdentifierDecl	* sp = EncoderState ( tif )		1100580	0					
ANR	1100593	IdentifierDeclType	PixarLogState *		1100580	0					
ANR	1100594	Identifier	sp		1100580	1					
ANR	1100595	AssignmentExpression	* sp = EncoderState ( tif )		1100580	2		=			
ANR	1100596	Identifier	sp		1100580	0					
ANR	1100597	CallExpression	EncoderState ( tif )		1100580	1					
ANR	1100598	Callee	EncoderState		1100580	0					
ANR	1100599	Identifier	EncoderState		1100580	0					
ANR	1100600	ArgumentList	tif		1100580	1					
ANR	1100601	Argument	tif		1100580	0					
ANR	1100602	Identifier	tif		1100580	0					
ANR	1100603	ExpressionStatement	( void ) s	918:1:26408:26416	1100580	3	True				
ANR	1100604	CastExpression	( void ) s		1100580	0					
ANR	1100605	CastTarget	void		1100580	0					
ANR	1100606	Identifier	s		1100580	1					
ANR	1100607	ExpressionStatement	assert ( sp != NULL )	919:1:26419:26437	1100580	4	True				
ANR	1100608	CallExpression	assert ( sp != NULL )		1100580	0					
ANR	1100609	Callee	assert		1100580	0					
ANR	1100610	Identifier	assert		1100580	0					
ANR	1100611	ArgumentList	sp != NULL		1100580	1					
ANR	1100612	Argument	sp != NULL		1100580	0					
ANR	1100613	EqualityExpression	sp != NULL		1100580	0		!=			
ANR	1100614	Identifier	sp		1100580	0					
ANR	1100615	Identifier	NULL		1100580	1					
ANR	1100616	ExpressionStatement	sp -> stream . next_out = tif -> tif_rawdata	920:1:26440:26478	1100580	5	True				
ANR	1100617	AssignmentExpression	sp -> stream . next_out = tif -> tif_rawdata		1100580	0		=			
ANR	1100618	MemberAccess	sp -> stream . next_out		1100580	0					
ANR	1100619	PtrMemberAccess	sp -> stream		1100580	0					
ANR	1100620	Identifier	sp		1100580	0					
ANR	1100621	Identifier	stream		1100580	1					
ANR	1100622	Identifier	next_out		1100580	1					
ANR	1100623	PtrMemberAccess	tif -> tif_rawdata		1100580	1					
ANR	1100624	Identifier	tif		1100580	0					
ANR	1100625	Identifier	tif_rawdata		1100580	1					
ANR	1100626	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_out ) == 4 )	921:1:26481:26520	1100580	6	True				
ANR	1100627	CallExpression	assert ( sizeof ( sp -> stream . avail_out ) == 4 )		1100580	0					
ANR	1100628	Callee	assert		1100580	0					
ANR	1100629	Identifier	assert		1100580	0					
ANR	1100630	ArgumentList	sizeof ( sp -> stream . avail_out ) == 4		1100580	1					
ANR	1100631	Argument	sizeof ( sp -> stream . avail_out ) == 4		1100580	0					
ANR	1100632	EqualityExpression	sizeof ( sp -> stream . avail_out ) == 4		1100580	0		==			
ANR	1100633	SizeofExpression	sizeof ( sp -> stream . avail_out )		1100580	0					
ANR	1100634	Sizeof	sizeof		1100580	0					
ANR	1100635	MemberAccess	sp -> stream . avail_out		1100580	1					
ANR	1100636	PtrMemberAccess	sp -> stream		1100580	0					
ANR	1100637	Identifier	sp		1100580	0					
ANR	1100638	Identifier	stream		1100580	1					
ANR	1100639	Identifier	avail_out		1100580	1					
ANR	1100640	PrimaryExpression	4		1100580	1					
ANR	1100641	ExpressionStatement	sp -> stream . avail_out = tif -> tif_rawdatasize	925:1:26747:26790	1100580	7	True				
ANR	1100642	AssignmentExpression	sp -> stream . avail_out = tif -> tif_rawdatasize		1100580	0		=			
ANR	1100643	MemberAccess	sp -> stream . avail_out		1100580	0					
ANR	1100644	PtrMemberAccess	sp -> stream		1100580	0					
ANR	1100645	Identifier	sp		1100580	0					
ANR	1100646	Identifier	stream		1100580	1					
ANR	1100647	Identifier	avail_out		1100580	1					
ANR	1100648	PtrMemberAccess	tif -> tif_rawdatasize		1100580	1					
ANR	1100649	Identifier	tif		1100580	0					
ANR	1100650	Identifier	tif_rawdatasize		1100580	1					
ANR	1100651	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize )		1100580	8					
ANR	1100652	Condition	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize	926:5:26797:26850	1100580	0	True				
ANR	1100653	EqualityExpression	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize		1100580	0		!=			
ANR	1100654	CastExpression	( tmsize_t ) sp -> stream . avail_out		1100580	0					
ANR	1100655	CastTarget	tmsize_t		1100580	0					
ANR	1100656	MemberAccess	sp -> stream . avail_out		1100580	1					
ANR	1100657	PtrMemberAccess	sp -> stream		1100580	0					
ANR	1100658	Identifier	sp		1100580	0					
ANR	1100659	Identifier	stream		1100580	1					
ANR	1100660	Identifier	avail_out		1100580	1					
ANR	1100661	PtrMemberAccess	tif -> tif_rawdatasize		1100580	1					
ANR	1100662	Identifier	tif		1100580	0					
ANR	1100663	Identifier	tif_rawdatasize		1100580	1					
ANR	1100664	CompoundStatement		14:1:540:540	1100580	1					
ANR	1100665	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	928:2:26858:26942	1100580	0	True				
ANR	1100666	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		1100580	0					
ANR	1100667	Callee	TIFFErrorExt		1100580	0					
ANR	1100668	Identifier	TIFFErrorExt		1100580	0					
ANR	1100669	ArgumentList	tif -> tif_clientdata		1100580	1					
ANR	1100670	Argument	tif -> tif_clientdata		1100580	0					
ANR	1100671	PtrMemberAccess	tif -> tif_clientdata		1100580	0					
ANR	1100672	Identifier	tif		1100580	0					
ANR	1100673	Identifier	tif_clientdata		1100580	1					
ANR	1100674	Argument	module		1100580	1					
ANR	1100675	Identifier	module		1100580	0					
ANR	1100676	Argument	"""ZLib cannot deal with buffers this size"""		1100580	2					
ANR	1100677	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		1100580	0					
ANR	1100678	ReturnStatement	return ( 0 ) ;	929:2:26946:26956	1100580	1	True				
ANR	1100679	PrimaryExpression	0		1100580	0					
ANR	1100680	ReturnStatement	return ( deflateReset ( & sp -> stream ) == Z_OK ) ;	931:1:26962:27004	1100580	9	True				
ANR	1100681	EqualityExpression	deflateReset ( & sp -> stream ) == Z_OK		1100580	0		==			
ANR	1100682	CallExpression	deflateReset ( & sp -> stream )		1100580	0					
ANR	1100683	Callee	deflateReset		1100580	0					
ANR	1100684	Identifier	deflateReset		1100580	0					
ANR	1100685	ArgumentList	& sp -> stream		1100580	1					
ANR	1100686	Argument	& sp -> stream		1100580	0					
ANR	1100687	UnaryOperationExpression	& sp -> stream		1100580	0					
ANR	1100688	UnaryOperator	&		1100580	0					
ANR	1100689	PtrMemberAccess	sp -> stream		1100580	1					
ANR	1100690	Identifier	sp		1100580	0					
ANR	1100691	Identifier	stream		1100580	1					
ANR	1100692	Identifier	Z_OK		1100580	1					
ANR	1100693	ReturnType	static int		1100580	1					
ANR	1100694	Identifier	PixarLogPreEncode		1100580	2					
ANR	1100695	ParameterList	"TIFF * tif , uint16 s"		1100580	3					
ANR	1100696	Parameter	TIFF * tif	913:18:26292:26300	1100580	0	True				
ANR	1100697	ParameterType	TIFF *		1100580	0					
ANR	1100698	Identifier	tif		1100580	1					
ANR	1100699	Parameter	uint16 s	913:29:26303:26310	1100580	1	True				
ANR	1100700	ParameterType	uint16		1100580	0					
ANR	1100701	Identifier	s		1100580	1					
ANR	1100702	CFGEntryNode	ENTRY		1100580		True				
ANR	1100703	CFGExitNode	EXIT		1100580		True				
ANR	1100704	Symbol	* sp		1100580						
ANR	1100705	Symbol	EncoderState		1100580						
ANR	1100706	Symbol	NULL		1100580						
ANR	1100707	Symbol	& sp -> stream		1100580						
ANR	1100708	Symbol	module		1100580						
ANR	1100709	Symbol	sp -> stream . next_out		1100580						
ANR	1100710	Symbol	Z_OK		1100580						
ANR	1100711	Symbol	sp -> stream . avail_out		1100580						
ANR	1100712	Symbol	tif -> tif_clientdata		1100580						
ANR	1100713	Symbol	tif		1100580						
ANR	1100714	Symbol	s		1100580						
ANR	1100715	Symbol	tif -> tif_rawdatasize		1100580						
ANR	1100716	Symbol	deflateReset		1100580						
ANR	1100717	Symbol	sp -> stream		1100580						
ANR	1100718	Symbol	* tif		1100580						
ANR	1100719	Symbol	sp		1100580						
ANR	1100720	Symbol	tif -> tif_rawdata		1100580						
ANR	1100721	Function	horizontalDifferenceF	934:0:27009:28645							
ANR	1100722	FunctionDef	"horizontalDifferenceF (float * ip , int n , int stride , uint16 * wp , uint16 * FromLT2)"		1100721	0					
ANR	1100723	CompoundStatement		936:0:27102:28645	1100721	0					
ANR	1100724	IdentifierDeclStatement	"int32 r1 , g1 , b1 , a1 , r2 , g2 , b2 , a2 , mask ;"	937:4:27108:27150	1100721	0	True				
ANR	1100725	IdentifierDecl	r1		1100721	0					
ANR	1100726	IdentifierDeclType	int32		1100721	0					
ANR	1100727	Identifier	r1		1100721	1					
ANR	1100728	IdentifierDecl	g1		1100721	1					
ANR	1100729	IdentifierDeclType	int32		1100721	0					
ANR	1100730	Identifier	g1		1100721	1					
ANR	1100731	IdentifierDecl	b1		1100721	2					
ANR	1100732	IdentifierDeclType	int32		1100721	0					
ANR	1100733	Identifier	b1		1100721	1					
ANR	1100734	IdentifierDecl	a1		1100721	3					
ANR	1100735	IdentifierDeclType	int32		1100721	0					
ANR	1100736	Identifier	a1		1100721	1					
ANR	1100737	IdentifierDecl	r2		1100721	4					
ANR	1100738	IdentifierDeclType	int32		1100721	0					
ANR	1100739	Identifier	r2		1100721	1					
ANR	1100740	IdentifierDecl	g2		1100721	5					
ANR	1100741	IdentifierDeclType	int32		1100721	0					
ANR	1100742	Identifier	g2		1100721	1					
ANR	1100743	IdentifierDecl	b2		1100721	6					
ANR	1100744	IdentifierDeclType	int32		1100721	0					
ANR	1100745	Identifier	b2		1100721	1					
ANR	1100746	IdentifierDecl	a2		1100721	7					
ANR	1100747	IdentifierDeclType	int32		1100721	0					
ANR	1100748	Identifier	a2		1100721	1					
ANR	1100749	IdentifierDecl	mask		1100721	8					
ANR	1100750	IdentifierDeclType	int32		1100721	0					
ANR	1100751	Identifier	mask		1100721	1					
ANR	1100752	IdentifierDeclStatement	float fltsize = Fltsize ;	938:4:27156:27179	1100721	1	True				
ANR	1100753	IdentifierDecl	fltsize = Fltsize		1100721	0					
ANR	1100754	IdentifierDeclType	float		1100721	0					
ANR	1100755	Identifier	fltsize		1100721	1					
ANR	1100756	AssignmentExpression	fltsize = Fltsize		1100721	2		=			
ANR	1100757	Identifier	Fltsize		1100721	0					
ANR	1100758	Identifier	Fltsize		1100721	1					
ANR	1100759	Statement	define	940:1:27183:27188	1100721	2	True				
ANR	1100760	Statement	CLAMP	940:9:27191:27195	1100721	3	True				
ANR	1100761	Statement	(	940:14:27196:27196	1100721	4	True				
ANR	1100762	Statement	v	940:15:27197:27197	1100721	5	True				
ANR	1100763	Statement	)	940:16:27198:27198	1100721	6	True				
ANR	1100764	Statement	(	940:18:27200:27200	1100721	7	True				
ANR	1100765	Statement	(	940:20:27202:27202	1100721	8	True				
ANR	1100766	Statement	v	940:21:27203:27203	1100721	9	True				
ANR	1100767	Statement	<	940:22:27204:27204	1100721	10	True				
ANR	1100768	Statement	(	940:23:27205:27205	1100721	11	True				
ANR	1100769	Statement	float	940:24:27206:27210	1100721	12	True				
ANR	1100770	Statement	)	940:29:27211:27211	1100721	13	True				
ANR	1100771	Statement	0.	940:30:27212:27213	1100721	14	True				
ANR	1100772	Statement	)	940:32:27214:27214	1100721	15	True				
ANR	1100773	Statement	?	940:36:27218:27218	1100721	16	True				
ANR	1100774	Label	0 :	940:38:27220:27231	1100721	17	True				
ANR	1100775	Statement	(	941:6:27233:27233	1100721	18	True				
ANR	1100776	Statement	v	941:7:27234:27234	1100721	19	True				
ANR	1100777	Statement	<	941:8:27235:27235	1100721	20	True				
ANR	1100778	Statement	(	941:9:27236:27236	1100721	21	True				
ANR	1100779	Statement	float	941:10:27237:27241	1100721	22	True				
ANR	1100780	Statement	)	941:15:27242:27242	1100721	23	True				
ANR	1100781	Statement	2.	941:16:27243:27244	1100721	24	True				
ANR	1100782	Statement	)	941:18:27245:27245	1100721	25	True				
ANR	1100783	Statement	?	941:22:27249:27249	1100721	26	True				
ANR	1100784	Statement	FromLT2	941:24:27251:27257	1100721	27	True				
ANR	1100785	Statement	[	941:31:27258:27258	1100721	28	True				
ANR	1100786	Statement	(	941:32:27259:27259	1100721	29	True				
ANR	1100787	Statement	int	941:33:27260:27262	1100721	30	True				
ANR	1100788	Statement	)	941:36:27263:27263	1100721	31	True				
ANR	1100789	Statement	(	941:37:27264:27264	1100721	32	True				
ANR	1100790	Statement	v	941:38:27265:27265	1100721	33	True				
ANR	1100791	Statement	*	941:39:27266:27266	1100721	34	True				
ANR	1100792	Statement	fltsize	941:40:27267:27273	1100721	35	True				
ANR	1100793	Statement	)	941:47:27274:27274	1100721	36	True				
ANR	1100794	Statement	]	941:48:27275:27275	1100721	37	True				
ANR	1100795	Statement	:	942:4:27283:27283	1100721	38	True				
ANR	1100796	Statement	(	942:6:27285:27285	1100721	39	True				
ANR	1100797	Statement	v	942:7:27286:27286	1100721	40	True				
ANR	1100798	Statement	>	942:8:27287:27287	1100721	41	True				
ANR	1100799	Statement	(	942:9:27288:27288	1100721	42	True				
ANR	1100800	Statement	float	942:10:27289:27293	1100721	43	True				
ANR	1100801	Statement	)	942:15:27294:27294	1100721	44	True				
ANR	1100802	Statement	24.2	942:16:27295:27298	1100721	45	True				
ANR	1100803	Statement	)	942:20:27299:27299	1100721	46	True				
ANR	1100804	Statement	?	942:22:27301:27301	1100721	47	True				
ANR	1100805	Label	2047 :	942:24:27303:27316	1100721	48	True				
ANR	1100806	Statement	LogK1	943:6:27318:27322	1100721	49	True				
ANR	1100807	Statement	*	943:11:27323:27323	1100721	50	True				
ANR	1100808	Statement	log	943:12:27324:27326	1100721	51	True				
ANR	1100809	Statement	(	943:15:27327:27327	1100721	52	True				
ANR	1100810	Statement	v	943:16:27328:27328	1100721	53	True				
ANR	1100811	Statement	*	943:17:27329:27329	1100721	54	True				
ANR	1100812	Statement	LogK2	943:18:27330:27334	1100721	55	True				
ANR	1100813	Statement	)	943:23:27335:27335	1100721	56	True				
ANR	1100814	Statement	+	943:25:27337:27337	1100721	57	True				
ANR	1100815	Statement	0.5	943:27:27339:27341	1100721	58	True				
ANR	1100816	Statement	)	943:31:27343:27343	1100721	59	True				
ANR	1100817	ExpressionStatement	mask = CODE_MASK	945:4:27350:27366	1100721	60	True				
ANR	1100818	AssignmentExpression	mask = CODE_MASK		1100721	0		=			
ANR	1100819	Identifier	mask		1100721	0					
ANR	1100820	Identifier	CODE_MASK		1100721	1					
ANR	1100821	IfStatement	if ( n >= stride )		1100721	61					
ANR	1100822	Condition	n >= stride	946:8:27376:27386	1100721	0	True				
ANR	1100823	RelationalExpression	n >= stride		1100721	0		>=			
ANR	1100824	Identifier	n		1100721	0					
ANR	1100825	Identifier	stride		1100721	1					
ANR	1100826	CompoundStatement		11:21:286:286	1100721	1					
ANR	1100827	IfStatement	if ( stride == 3 )		1100721	0					
ANR	1100828	Condition	stride == 3	947:5:27396:27406	1100721	0	True				
ANR	1100829	EqualityExpression	stride == 3		1100721	0		==			
ANR	1100830	Identifier	stride		1100721	0					
ANR	1100831	PrimaryExpression	3		1100721	1					
ANR	1100832	CompoundStatement		12:18:306:306	1100721	1					
ANR	1100833	ExpressionStatement	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )	948:5:27416:27450	1100721	0	True				
ANR	1100834	AssignmentExpression	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		1100721	0		=			
ANR	1100835	Identifier	r2		1100721	0					
ANR	1100836	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1		=			
ANR	1100837	ArrayIndexing	wp [ 0 ]		1100721	0					
ANR	1100838	Identifier	wp		1100721	0					
ANR	1100839	PrimaryExpression	0		1100721	1					
ANR	1100840	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1100841	CastTarget	uint16		1100721	0					
ANR	1100842	CallExpression	CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1100843	Callee	CLAMP		1100721	0					
ANR	1100844	Identifier	CLAMP		1100721	0					
ANR	1100845	ArgumentList	ip [ 0 ]		1100721	1					
ANR	1100846	Argument	ip [ 0 ]		1100721	0					
ANR	1100847	ArrayIndexing	ip [ 0 ]		1100721	0					
ANR	1100848	Identifier	ip		1100721	0					
ANR	1100849	PrimaryExpression	0		1100721	1					
ANR	1100850	ExpressionStatement	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )	949:5:27457:27491	1100721	1	True				
ANR	1100851	AssignmentExpression	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		1100721	0		=			
ANR	1100852	Identifier	g2		1100721	0					
ANR	1100853	AssignmentExpression	wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		1100721	1		=			
ANR	1100854	ArrayIndexing	wp [ 1 ]		1100721	0					
ANR	1100855	Identifier	wp		1100721	0					
ANR	1100856	PrimaryExpression	1		1100721	1					
ANR	1100857	CastExpression	( uint16 ) CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1100858	CastTarget	uint16		1100721	0					
ANR	1100859	CallExpression	CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1100860	Callee	CLAMP		1100721	0					
ANR	1100861	Identifier	CLAMP		1100721	0					
ANR	1100862	ArgumentList	ip [ 1 ]		1100721	1					
ANR	1100863	Argument	ip [ 1 ]		1100721	0					
ANR	1100864	ArrayIndexing	ip [ 1 ]		1100721	0					
ANR	1100865	Identifier	ip		1100721	0					
ANR	1100866	PrimaryExpression	1		1100721	1					
ANR	1100867	ExpressionStatement	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )	950:5:27498:27532	1100721	2	True				
ANR	1100868	AssignmentExpression	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		1100721	0		=			
ANR	1100869	Identifier	b2		1100721	0					
ANR	1100870	AssignmentExpression	wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		1100721	1		=			
ANR	1100871	ArrayIndexing	wp [ 2 ]		1100721	0					
ANR	1100872	Identifier	wp		1100721	0					
ANR	1100873	PrimaryExpression	2		1100721	1					
ANR	1100874	CastExpression	( uint16 ) CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1100875	CastTarget	uint16		1100721	0					
ANR	1100876	CallExpression	CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1100877	Callee	CLAMP		1100721	0					
ANR	1100878	Identifier	CLAMP		1100721	0					
ANR	1100879	ArgumentList	ip [ 2 ]		1100721	1					
ANR	1100880	Argument	ip [ 2 ]		1100721	0					
ANR	1100881	ArrayIndexing	ip [ 2 ]		1100721	0					
ANR	1100882	Identifier	ip		1100721	0					
ANR	1100883	PrimaryExpression	2		1100721	1					
ANR	1100884	ExpressionStatement	n -= 3	951:5:27539:27545	1100721	3	True				
ANR	1100885	AssignmentExpression	n -= 3		1100721	0		-=			
ANR	1100886	Identifier	n		1100721	0					
ANR	1100887	PrimaryExpression	3		1100721	1					
ANR	1100888	WhileStatement	while ( n > 0 )		1100721	4					
ANR	1100889	Condition	n > 0	952:12:27559:27563	1100721	0	True				
ANR	1100890	RelationalExpression	n > 0		1100721	0		>			
ANR	1100891	Identifier	n		1100721	0					
ANR	1100892	PrimaryExpression	0		1100721	1					
ANR	1100893	CompoundStatement		17:19:463:463	1100721	1					
ANR	1100894	ExpressionStatement	n -= 3	953:2:27570:27576	1100721	0	True				
ANR	1100895	AssignmentExpression	n -= 3		1100721	0		-=			
ANR	1100896	Identifier	n		1100721	0					
ANR	1100897	PrimaryExpression	3		1100721	1					
ANR	1100898	ExpressionStatement	wp += 3	954:2:27580:27587	1100721	1	True				
ANR	1100899	AssignmentExpression	wp += 3		1100721	0		+=			
ANR	1100900	Identifier	wp		1100721	0					
ANR	1100901	PrimaryExpression	3		1100721	1					
ANR	1100902	ExpressionStatement	ip += 3	955:2:27591:27598	1100721	2	True				
ANR	1100903	AssignmentExpression	ip += 3		1100721	0		+=			
ANR	1100904	Identifier	ip		1100721	0					
ANR	1100905	PrimaryExpression	3		1100721	1					
ANR	1100906	ExpressionStatement	r1 = ( int32 ) CLAMP ( ip [ 0 ] )	956:2:27602:27627	1100721	3	True				
ANR	1100907	AssignmentExpression	r1 = ( int32 ) CLAMP ( ip [ 0 ] )		1100721	0		=			
ANR	1100908	Identifier	r1		1100721	0					
ANR	1100909	CastExpression	( int32 ) CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1100910	CastTarget	int32		1100721	0					
ANR	1100911	CallExpression	CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1100912	Callee	CLAMP		1100721	0					
ANR	1100913	Identifier	CLAMP		1100721	0					
ANR	1100914	ArgumentList	ip [ 0 ]		1100721	1					
ANR	1100915	Argument	ip [ 0 ]		1100721	0					
ANR	1100916	ArrayIndexing	ip [ 0 ]		1100721	0					
ANR	1100917	Identifier	ip		1100721	0					
ANR	1100918	PrimaryExpression	0		1100721	1					
ANR	1100919	ExpressionStatement	wp [ 0 ] = ( r1 - r2 ) & mask	956:29:27629:27651	1100721	4	True				
ANR	1100920	AssignmentExpression	wp [ 0 ] = ( r1 - r2 ) & mask		1100721	0		=			
ANR	1100921	ArrayIndexing	wp [ 0 ]		1100721	0					
ANR	1100922	Identifier	wp		1100721	0					
ANR	1100923	PrimaryExpression	0		1100721	1					
ANR	1100924	BitAndExpression	( r1 - r2 ) & mask		1100721	1		&			
ANR	1100925	AdditiveExpression	r1 - r2		1100721	0		-			
ANR	1100926	Identifier	r1		1100721	0					
ANR	1100927	Identifier	r2		1100721	1					
ANR	1100928	Identifier	mask		1100721	1					
ANR	1100929	ExpressionStatement	r2 = r1	956:53:27653:27660	1100721	5	True				
ANR	1100930	AssignmentExpression	r2 = r1		1100721	0		=			
ANR	1100931	Identifier	r2		1100721	0					
ANR	1100932	Identifier	r1		1100721	1					
ANR	1100933	ExpressionStatement	g1 = ( int32 ) CLAMP ( ip [ 1 ] )	957:2:27664:27689	1100721	6	True				
ANR	1100934	AssignmentExpression	g1 = ( int32 ) CLAMP ( ip [ 1 ] )		1100721	0		=			
ANR	1100935	Identifier	g1		1100721	0					
ANR	1100936	CastExpression	( int32 ) CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1100937	CastTarget	int32		1100721	0					
ANR	1100938	CallExpression	CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1100939	Callee	CLAMP		1100721	0					
ANR	1100940	Identifier	CLAMP		1100721	0					
ANR	1100941	ArgumentList	ip [ 1 ]		1100721	1					
ANR	1100942	Argument	ip [ 1 ]		1100721	0					
ANR	1100943	ArrayIndexing	ip [ 1 ]		1100721	0					
ANR	1100944	Identifier	ip		1100721	0					
ANR	1100945	PrimaryExpression	1		1100721	1					
ANR	1100946	ExpressionStatement	wp [ 1 ] = ( g1 - g2 ) & mask	957:29:27691:27713	1100721	7	True				
ANR	1100947	AssignmentExpression	wp [ 1 ] = ( g1 - g2 ) & mask		1100721	0		=			
ANR	1100948	ArrayIndexing	wp [ 1 ]		1100721	0					
ANR	1100949	Identifier	wp		1100721	0					
ANR	1100950	PrimaryExpression	1		1100721	1					
ANR	1100951	BitAndExpression	( g1 - g2 ) & mask		1100721	1		&			
ANR	1100952	AdditiveExpression	g1 - g2		1100721	0		-			
ANR	1100953	Identifier	g1		1100721	0					
ANR	1100954	Identifier	g2		1100721	1					
ANR	1100955	Identifier	mask		1100721	1					
ANR	1100956	ExpressionStatement	g2 = g1	957:53:27715:27722	1100721	8	True				
ANR	1100957	AssignmentExpression	g2 = g1		1100721	0		=			
ANR	1100958	Identifier	g2		1100721	0					
ANR	1100959	Identifier	g1		1100721	1					
ANR	1100960	ExpressionStatement	b1 = ( int32 ) CLAMP ( ip [ 2 ] )	958:2:27726:27751	1100721	9	True				
ANR	1100961	AssignmentExpression	b1 = ( int32 ) CLAMP ( ip [ 2 ] )		1100721	0		=			
ANR	1100962	Identifier	b1		1100721	0					
ANR	1100963	CastExpression	( int32 ) CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1100964	CastTarget	int32		1100721	0					
ANR	1100965	CallExpression	CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1100966	Callee	CLAMP		1100721	0					
ANR	1100967	Identifier	CLAMP		1100721	0					
ANR	1100968	ArgumentList	ip [ 2 ]		1100721	1					
ANR	1100969	Argument	ip [ 2 ]		1100721	0					
ANR	1100970	ArrayIndexing	ip [ 2 ]		1100721	0					
ANR	1100971	Identifier	ip		1100721	0					
ANR	1100972	PrimaryExpression	2		1100721	1					
ANR	1100973	ExpressionStatement	wp [ 2 ] = ( b1 - b2 ) & mask	958:29:27753:27775	1100721	10	True				
ANR	1100974	AssignmentExpression	wp [ 2 ] = ( b1 - b2 ) & mask		1100721	0		=			
ANR	1100975	ArrayIndexing	wp [ 2 ]		1100721	0					
ANR	1100976	Identifier	wp		1100721	0					
ANR	1100977	PrimaryExpression	2		1100721	1					
ANR	1100978	BitAndExpression	( b1 - b2 ) & mask		1100721	1		&			
ANR	1100979	AdditiveExpression	b1 - b2		1100721	0		-			
ANR	1100980	Identifier	b1		1100721	0					
ANR	1100981	Identifier	b2		1100721	1					
ANR	1100982	Identifier	mask		1100721	1					
ANR	1100983	ExpressionStatement	b2 = b1	958:53:27777:27784	1100721	11	True				
ANR	1100984	AssignmentExpression	b2 = b1		1100721	0		=			
ANR	1100985	Identifier	b2		1100721	0					
ANR	1100986	Identifier	b1		1100721	1					
ANR	1100987	ElseStatement	else		1100721	0					
ANR	1100988	IfStatement	if ( stride == 4 )		1100721	0					
ANR	1100989	Condition	stride == 4	960:12:27805:27815	1100721	0	True				
ANR	1100990	EqualityExpression	stride == 4		1100721	0		==			
ANR	1100991	Identifier	stride		1100721	0					
ANR	1100992	PrimaryExpression	4		1100721	1					
ANR	1100993	CompoundStatement		25:25:715:715	1100721	1					
ANR	1100994	ExpressionStatement	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )	961:5:27825:27859	1100721	0	True				
ANR	1100995	AssignmentExpression	r2 = wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		1100721	0		=			
ANR	1100996	Identifier	r2		1100721	0					
ANR	1100997	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1		=			
ANR	1100998	ArrayIndexing	wp [ 0 ]		1100721	0					
ANR	1100999	Identifier	wp		1100721	0					
ANR	1101000	PrimaryExpression	0		1100721	1					
ANR	1101001	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101002	CastTarget	uint16		1100721	0					
ANR	1101003	CallExpression	CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101004	Callee	CLAMP		1100721	0					
ANR	1101005	Identifier	CLAMP		1100721	0					
ANR	1101006	ArgumentList	ip [ 0 ]		1100721	1					
ANR	1101007	Argument	ip [ 0 ]		1100721	0					
ANR	1101008	ArrayIndexing	ip [ 0 ]		1100721	0					
ANR	1101009	Identifier	ip		1100721	0					
ANR	1101010	PrimaryExpression	0		1100721	1					
ANR	1101011	ExpressionStatement	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )	962:5:27866:27900	1100721	1	True				
ANR	1101012	AssignmentExpression	g2 = wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		1100721	0		=			
ANR	1101013	Identifier	g2		1100721	0					
ANR	1101014	AssignmentExpression	wp [ 1 ] = ( uint16 ) CLAMP ( ip [ 1 ] )		1100721	1		=			
ANR	1101015	ArrayIndexing	wp [ 1 ]		1100721	0					
ANR	1101016	Identifier	wp		1100721	0					
ANR	1101017	PrimaryExpression	1		1100721	1					
ANR	1101018	CastExpression	( uint16 ) CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1101019	CastTarget	uint16		1100721	0					
ANR	1101020	CallExpression	CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1101021	Callee	CLAMP		1100721	0					
ANR	1101022	Identifier	CLAMP		1100721	0					
ANR	1101023	ArgumentList	ip [ 1 ]		1100721	1					
ANR	1101024	Argument	ip [ 1 ]		1100721	0					
ANR	1101025	ArrayIndexing	ip [ 1 ]		1100721	0					
ANR	1101026	Identifier	ip		1100721	0					
ANR	1101027	PrimaryExpression	1		1100721	1					
ANR	1101028	ExpressionStatement	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )	963:5:27907:27941	1100721	2	True				
ANR	1101029	AssignmentExpression	b2 = wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		1100721	0		=			
ANR	1101030	Identifier	b2		1100721	0					
ANR	1101031	AssignmentExpression	wp [ 2 ] = ( uint16 ) CLAMP ( ip [ 2 ] )		1100721	1		=			
ANR	1101032	ArrayIndexing	wp [ 2 ]		1100721	0					
ANR	1101033	Identifier	wp		1100721	0					
ANR	1101034	PrimaryExpression	2		1100721	1					
ANR	1101035	CastExpression	( uint16 ) CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1101036	CastTarget	uint16		1100721	0					
ANR	1101037	CallExpression	CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1101038	Callee	CLAMP		1100721	0					
ANR	1101039	Identifier	CLAMP		1100721	0					
ANR	1101040	ArgumentList	ip [ 2 ]		1100721	1					
ANR	1101041	Argument	ip [ 2 ]		1100721	0					
ANR	1101042	ArrayIndexing	ip [ 2 ]		1100721	0					
ANR	1101043	Identifier	ip		1100721	0					
ANR	1101044	PrimaryExpression	2		1100721	1					
ANR	1101045	ExpressionStatement	a2 = wp [ 3 ] = ( uint16 ) CLAMP ( ip [ 3 ] )	964:5:27948:27982	1100721	3	True				
ANR	1101046	AssignmentExpression	a2 = wp [ 3 ] = ( uint16 ) CLAMP ( ip [ 3 ] )		1100721	0		=			
ANR	1101047	Identifier	a2		1100721	0					
ANR	1101048	AssignmentExpression	wp [ 3 ] = ( uint16 ) CLAMP ( ip [ 3 ] )		1100721	1		=			
ANR	1101049	ArrayIndexing	wp [ 3 ]		1100721	0					
ANR	1101050	Identifier	wp		1100721	0					
ANR	1101051	PrimaryExpression	3		1100721	1					
ANR	1101052	CastExpression	( uint16 ) CLAMP ( ip [ 3 ] )		1100721	1					
ANR	1101053	CastTarget	uint16		1100721	0					
ANR	1101054	CallExpression	CLAMP ( ip [ 3 ] )		1100721	1					
ANR	1101055	Callee	CLAMP		1100721	0					
ANR	1101056	Identifier	CLAMP		1100721	0					
ANR	1101057	ArgumentList	ip [ 3 ]		1100721	1					
ANR	1101058	Argument	ip [ 3 ]		1100721	0					
ANR	1101059	ArrayIndexing	ip [ 3 ]		1100721	0					
ANR	1101060	Identifier	ip		1100721	0					
ANR	1101061	PrimaryExpression	3		1100721	1					
ANR	1101062	ExpressionStatement	n -= 4	965:5:27989:27995	1100721	4	True				
ANR	1101063	AssignmentExpression	n -= 4		1100721	0		-=			
ANR	1101064	Identifier	n		1100721	0					
ANR	1101065	PrimaryExpression	4		1100721	1					
ANR	1101066	WhileStatement	while ( n > 0 )		1100721	5					
ANR	1101067	Condition	n > 0	966:12:28009:28013	1100721	0	True				
ANR	1101068	RelationalExpression	n > 0		1100721	0		>			
ANR	1101069	Identifier	n		1100721	0					
ANR	1101070	PrimaryExpression	0		1100721	1					
ANR	1101071	CompoundStatement		31:19:913:913	1100721	1					
ANR	1101072	ExpressionStatement	n -= 4	967:2:28020:28026	1100721	0	True				
ANR	1101073	AssignmentExpression	n -= 4		1100721	0		-=			
ANR	1101074	Identifier	n		1100721	0					
ANR	1101075	PrimaryExpression	4		1100721	1					
ANR	1101076	ExpressionStatement	wp += 4	968:2:28030:28037	1100721	1	True				
ANR	1101077	AssignmentExpression	wp += 4		1100721	0		+=			
ANR	1101078	Identifier	wp		1100721	0					
ANR	1101079	PrimaryExpression	4		1100721	1					
ANR	1101080	ExpressionStatement	ip += 4	969:2:28041:28048	1100721	2	True				
ANR	1101081	AssignmentExpression	ip += 4		1100721	0		+=			
ANR	1101082	Identifier	ip		1100721	0					
ANR	1101083	PrimaryExpression	4		1100721	1					
ANR	1101084	ExpressionStatement	r1 = ( int32 ) CLAMP ( ip [ 0 ] )	970:2:28052:28077	1100721	3	True				
ANR	1101085	AssignmentExpression	r1 = ( int32 ) CLAMP ( ip [ 0 ] )		1100721	0		=			
ANR	1101086	Identifier	r1		1100721	0					
ANR	1101087	CastExpression	( int32 ) CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101088	CastTarget	int32		1100721	0					
ANR	1101089	CallExpression	CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101090	Callee	CLAMP		1100721	0					
ANR	1101091	Identifier	CLAMP		1100721	0					
ANR	1101092	ArgumentList	ip [ 0 ]		1100721	1					
ANR	1101093	Argument	ip [ 0 ]		1100721	0					
ANR	1101094	ArrayIndexing	ip [ 0 ]		1100721	0					
ANR	1101095	Identifier	ip		1100721	0					
ANR	1101096	PrimaryExpression	0		1100721	1					
ANR	1101097	ExpressionStatement	wp [ 0 ] = ( r1 - r2 ) & mask	970:29:28079:28101	1100721	4	True				
ANR	1101098	AssignmentExpression	wp [ 0 ] = ( r1 - r2 ) & mask		1100721	0		=			
ANR	1101099	ArrayIndexing	wp [ 0 ]		1100721	0					
ANR	1101100	Identifier	wp		1100721	0					
ANR	1101101	PrimaryExpression	0		1100721	1					
ANR	1101102	BitAndExpression	( r1 - r2 ) & mask		1100721	1		&			
ANR	1101103	AdditiveExpression	r1 - r2		1100721	0		-			
ANR	1101104	Identifier	r1		1100721	0					
ANR	1101105	Identifier	r2		1100721	1					
ANR	1101106	Identifier	mask		1100721	1					
ANR	1101107	ExpressionStatement	r2 = r1	970:53:28103:28110	1100721	5	True				
ANR	1101108	AssignmentExpression	r2 = r1		1100721	0		=			
ANR	1101109	Identifier	r2		1100721	0					
ANR	1101110	Identifier	r1		1100721	1					
ANR	1101111	ExpressionStatement	g1 = ( int32 ) CLAMP ( ip [ 1 ] )	971:2:28114:28139	1100721	6	True				
ANR	1101112	AssignmentExpression	g1 = ( int32 ) CLAMP ( ip [ 1 ] )		1100721	0		=			
ANR	1101113	Identifier	g1		1100721	0					
ANR	1101114	CastExpression	( int32 ) CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1101115	CastTarget	int32		1100721	0					
ANR	1101116	CallExpression	CLAMP ( ip [ 1 ] )		1100721	1					
ANR	1101117	Callee	CLAMP		1100721	0					
ANR	1101118	Identifier	CLAMP		1100721	0					
ANR	1101119	ArgumentList	ip [ 1 ]		1100721	1					
ANR	1101120	Argument	ip [ 1 ]		1100721	0					
ANR	1101121	ArrayIndexing	ip [ 1 ]		1100721	0					
ANR	1101122	Identifier	ip		1100721	0					
ANR	1101123	PrimaryExpression	1		1100721	1					
ANR	1101124	ExpressionStatement	wp [ 1 ] = ( g1 - g2 ) & mask	971:29:28141:28163	1100721	7	True				
ANR	1101125	AssignmentExpression	wp [ 1 ] = ( g1 - g2 ) & mask		1100721	0		=			
ANR	1101126	ArrayIndexing	wp [ 1 ]		1100721	0					
ANR	1101127	Identifier	wp		1100721	0					
ANR	1101128	PrimaryExpression	1		1100721	1					
ANR	1101129	BitAndExpression	( g1 - g2 ) & mask		1100721	1		&			
ANR	1101130	AdditiveExpression	g1 - g2		1100721	0		-			
ANR	1101131	Identifier	g1		1100721	0					
ANR	1101132	Identifier	g2		1100721	1					
ANR	1101133	Identifier	mask		1100721	1					
ANR	1101134	ExpressionStatement	g2 = g1	971:53:28165:28172	1100721	8	True				
ANR	1101135	AssignmentExpression	g2 = g1		1100721	0		=			
ANR	1101136	Identifier	g2		1100721	0					
ANR	1101137	Identifier	g1		1100721	1					
ANR	1101138	ExpressionStatement	b1 = ( int32 ) CLAMP ( ip [ 2 ] )	972:2:28176:28201	1100721	9	True				
ANR	1101139	AssignmentExpression	b1 = ( int32 ) CLAMP ( ip [ 2 ] )		1100721	0		=			
ANR	1101140	Identifier	b1		1100721	0					
ANR	1101141	CastExpression	( int32 ) CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1101142	CastTarget	int32		1100721	0					
ANR	1101143	CallExpression	CLAMP ( ip [ 2 ] )		1100721	1					
ANR	1101144	Callee	CLAMP		1100721	0					
ANR	1101145	Identifier	CLAMP		1100721	0					
ANR	1101146	ArgumentList	ip [ 2 ]		1100721	1					
ANR	1101147	Argument	ip [ 2 ]		1100721	0					
ANR	1101148	ArrayIndexing	ip [ 2 ]		1100721	0					
ANR	1101149	Identifier	ip		1100721	0					
ANR	1101150	PrimaryExpression	2		1100721	1					
ANR	1101151	ExpressionStatement	wp [ 2 ] = ( b1 - b2 ) & mask	972:29:28203:28225	1100721	10	True				
ANR	1101152	AssignmentExpression	wp [ 2 ] = ( b1 - b2 ) & mask		1100721	0		=			
ANR	1101153	ArrayIndexing	wp [ 2 ]		1100721	0					
ANR	1101154	Identifier	wp		1100721	0					
ANR	1101155	PrimaryExpression	2		1100721	1					
ANR	1101156	BitAndExpression	( b1 - b2 ) & mask		1100721	1		&			
ANR	1101157	AdditiveExpression	b1 - b2		1100721	0		-			
ANR	1101158	Identifier	b1		1100721	0					
ANR	1101159	Identifier	b2		1100721	1					
ANR	1101160	Identifier	mask		1100721	1					
ANR	1101161	ExpressionStatement	b2 = b1	972:53:28227:28234	1100721	11	True				
ANR	1101162	AssignmentExpression	b2 = b1		1100721	0		=			
ANR	1101163	Identifier	b2		1100721	0					
ANR	1101164	Identifier	b1		1100721	1					
ANR	1101165	ExpressionStatement	a1 = ( int32 ) CLAMP ( ip [ 3 ] )	973:2:28238:28263	1100721	12	True				
ANR	1101166	AssignmentExpression	a1 = ( int32 ) CLAMP ( ip [ 3 ] )		1100721	0		=			
ANR	1101167	Identifier	a1		1100721	0					
ANR	1101168	CastExpression	( int32 ) CLAMP ( ip [ 3 ] )		1100721	1					
ANR	1101169	CastTarget	int32		1100721	0					
ANR	1101170	CallExpression	CLAMP ( ip [ 3 ] )		1100721	1					
ANR	1101171	Callee	CLAMP		1100721	0					
ANR	1101172	Identifier	CLAMP		1100721	0					
ANR	1101173	ArgumentList	ip [ 3 ]		1100721	1					
ANR	1101174	Argument	ip [ 3 ]		1100721	0					
ANR	1101175	ArrayIndexing	ip [ 3 ]		1100721	0					
ANR	1101176	Identifier	ip		1100721	0					
ANR	1101177	PrimaryExpression	3		1100721	1					
ANR	1101178	ExpressionStatement	wp [ 3 ] = ( a1 - a2 ) & mask	973:29:28265:28287	1100721	13	True				
ANR	1101179	AssignmentExpression	wp [ 3 ] = ( a1 - a2 ) & mask		1100721	0		=			
ANR	1101180	ArrayIndexing	wp [ 3 ]		1100721	0					
ANR	1101181	Identifier	wp		1100721	0					
ANR	1101182	PrimaryExpression	3		1100721	1					
ANR	1101183	BitAndExpression	( a1 - a2 ) & mask		1100721	1		&			
ANR	1101184	AdditiveExpression	a1 - a2		1100721	0		-			
ANR	1101185	Identifier	a1		1100721	0					
ANR	1101186	Identifier	a2		1100721	1					
ANR	1101187	Identifier	mask		1100721	1					
ANR	1101188	ExpressionStatement	a2 = a1	973:53:28289:28296	1100721	14	True				
ANR	1101189	AssignmentExpression	a2 = a1		1100721	0		=			
ANR	1101190	Identifier	a2		1100721	0					
ANR	1101191	Identifier	a1		1100721	1					
ANR	1101192	ElseStatement	else		1100721	0					
ANR	1101193	CompoundStatement		40:8:1210:1210	1100721	0					
ANR	1101194	ExpressionStatement	ip += n - 1	976:5:28320:28331	1100721	0	True				
ANR	1101195	AssignmentExpression	ip += n - 1		1100721	0		+=			
ANR	1101196	Identifier	ip		1100721	0					
ANR	1101197	AdditiveExpression	n - 1		1100721	1		-			
ANR	1101198	Identifier	n		1100721	0					
ANR	1101199	PrimaryExpression	1		1100721	1					
ANR	1101200	ExpressionStatement	wp += n - 1	977:5:28362:28373	1100721	1	True				
ANR	1101201	AssignmentExpression	wp += n - 1		1100721	0		+=			
ANR	1101202	Identifier	wp		1100721	0					
ANR	1101203	AdditiveExpression	n - 1		1100721	1		-			
ANR	1101204	Identifier	n		1100721	0					
ANR	1101205	PrimaryExpression	1		1100721	1					
ANR	1101206	ExpressionStatement	n -= stride	978:5:28404:28415	1100721	2	True				
ANR	1101207	AssignmentExpression	n -= stride		1100721	0		-=			
ANR	1101208	Identifier	n		1100721	0					
ANR	1101209	Identifier	stride		1100721	1					
ANR	1101210	WhileStatement	while ( n > 0 )		1100721	3					
ANR	1101211	Condition	n > 0	979:12:28429:28433	1100721	0	True				
ANR	1101212	RelationalExpression	n > 0		1100721	0		>			
ANR	1101213	Identifier	n		1100721	0					
ANR	1101214	PrimaryExpression	0		1100721	1					
ANR	1101215	CompoundStatement		44:19:1333:1333	1100721	1					
ANR	1101216	Statement	REPEAT	980:2:28440:28445	1100721	0	True				
ANR	1101217	Statement	(	980:8:28446:28446	1100721	1	True				
ANR	1101218	ExpressionStatement	"stride , wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )"	980:9:28447:28484	1100721	2	True				
ANR	1101219	Expression	"stride , wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )"		1100721	0					
ANR	1101220	Identifier	stride		1100721	0					
ANR	1101221	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1		=			
ANR	1101222	ArrayIndexing	wp [ 0 ]		1100721	0					
ANR	1101223	Identifier	wp		1100721	0					
ANR	1101224	PrimaryExpression	0		1100721	1					
ANR	1101225	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101226	CastTarget	uint16		1100721	0					
ANR	1101227	CallExpression	CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101228	Callee	CLAMP		1100721	0					
ANR	1101229	Identifier	CLAMP		1100721	0					
ANR	1101230	ArgumentList	ip [ 0 ]		1100721	1					
ANR	1101231	Argument	ip [ 0 ]		1100721	0					
ANR	1101232	ArrayIndexing	ip [ 0 ]		1100721	0					
ANR	1101233	Identifier	ip		1100721	0					
ANR	1101234	PrimaryExpression	0		1100721	1					
ANR	1101235	ExpressionStatement	wp [ stride ] -= wp [ 0 ]	981:4:28490:28509	1100721	3	True				
ANR	1101236	AssignmentExpression	wp [ stride ] -= wp [ 0 ]		1100721	0		-=			
ANR	1101237	ArrayIndexing	wp [ stride ]		1100721	0					
ANR	1101238	Identifier	wp		1100721	0					
ANR	1101239	Identifier	stride		1100721	1					
ANR	1101240	ArrayIndexing	wp [ 0 ]		1100721	1					
ANR	1101241	Identifier	wp		1100721	0					
ANR	1101242	PrimaryExpression	0		1100721	1					
ANR	1101243	ExpressionStatement	wp [ stride ] &= mask	982:4:28515:28533	1100721	4	True				
ANR	1101244	AssignmentExpression	wp [ stride ] &= mask		1100721	0		&=			
ANR	1101245	ArrayIndexing	wp [ stride ]		1100721	0					
ANR	1101246	Identifier	wp		1100721	0					
ANR	1101247	Identifier	stride		1100721	1					
ANR	1101248	Identifier	mask		1100721	1					
ANR	1101249	ExpressionStatement	wp --	983:4:28539:28543	1100721	5	True				
ANR	1101250	PostIncDecOperationExpression	wp --		1100721	0					
ANR	1101251	Identifier	wp		1100721	0					
ANR	1101252	IncDec	--		1100721	1					
ANR	1101253	Statement	ip	983:10:28545:28546	1100721	6	True				
ANR	1101254	Statement	--	983:12:28547:28548	1100721	7	True				
ANR	1101255	Statement	)	983:14:28549:28549	1100721	8	True				
ANR	1101256	ExpressionStatement	n -= stride	984:2:28553:28564	1100721	9	True				
ANR	1101257	AssignmentExpression	n -= stride		1100721	0		-=			
ANR	1101258	Identifier	n		1100721	0					
ANR	1101259	Identifier	stride		1100721	1					
ANR	1101260	Statement	REPEAT	986:5:28578:28583	1100721	4	True				
ANR	1101261	Statement	(	986:11:28584:28584	1100721	5	True				
ANR	1101262	ExpressionStatement	"stride , wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )"	986:12:28585:28622	1100721	6	True				
ANR	1101263	Expression	"stride , wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )"		1100721	0					
ANR	1101264	Identifier	stride		1100721	0					
ANR	1101265	AssignmentExpression	wp [ 0 ] = ( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1		=			
ANR	1101266	ArrayIndexing	wp [ 0 ]		1100721	0					
ANR	1101267	Identifier	wp		1100721	0					
ANR	1101268	PrimaryExpression	0		1100721	1					
ANR	1101269	CastExpression	( uint16 ) CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101270	CastTarget	uint16		1100721	0					
ANR	1101271	CallExpression	CLAMP ( ip [ 0 ] )		1100721	1					
ANR	1101272	Callee	CLAMP		1100721	0					
ANR	1101273	Identifier	CLAMP		1100721	0					
ANR	1101274	ArgumentList	ip [ 0 ]		1100721	1					
ANR	1101275	Argument	ip [ 0 ]		1100721	0					
ANR	1101276	ArrayIndexing	ip [ 0 ]		1100721	0					
ANR	1101277	Identifier	ip		1100721	0					
ANR	1101278	PrimaryExpression	0		1100721	1					
ANR	1101279	ExpressionStatement	wp --	986:51:28624:28628	1100721	7	True				
ANR	1101280	PostIncDecOperationExpression	wp --		1100721	0					
ANR	1101281	Identifier	wp		1100721	0					
ANR	1101282	IncDec	--		1100721	1					
ANR	1101283	Statement	ip	986:57:28630:28631	1100721	8	True				
ANR	1101284	Statement	--	986:59:28632:28633	1100721	9	True				
ANR	1101285	Statement	)	986:61:28634:28634	1100721	10	True				
ANR	1101286	ReturnType	static void		1100721	1					
ANR	1101287	Identifier	horizontalDifferenceF		1100721	2					
ANR	1101288	ParameterList	"float * ip , int n , int stride , uint16 * wp , uint16 * FromLT2"		1100721	3					
ANR	1101289	Parameter	float * ip	935:22:27043:27051	1100721	0	True				
ANR	1101290	ParameterType	float *		1100721	0					
ANR	1101291	Identifier	ip		1100721	1					
ANR	1101292	Parameter	int n	935:33:27054:27058	1100721	1	True				
ANR	1101293	ParameterType	int		1100721	0					
ANR	1101294	Identifier	n		1100721	1					
ANR	1101295	Parameter	int stride	935:40:27061:27070	1100721	2	True				
ANR	1101296	ParameterType	int		1100721	0					
ANR	1101297	Identifier	stride		1100721	1					
ANR	1101298	Parameter	uint16 * wp	935:52:27073:27082	1100721	3	True				
ANR	1101299	ParameterType	uint16 *		1100721	0					
ANR	1101300	Identifier	wp		1100721	1					
ANR	1101301	Parameter	uint16 * FromLT2	935:64:27085:27099	1100721	4	True				
ANR	1101302	ParameterType	uint16 *		1100721	0					
ANR	1101303	Identifier	FromLT2		1100721	1					
ANR	1101304	CFGEntryNode	ENTRY		1100721		True				
ANR	1101305	CFGExitNode	EXIT		1100721		True				
ANR	1101306	Symbol	r2		1100721						
ANR	1101307	Symbol	* stride		1100721						
ANR	1101308	Symbol	ip		1100721						
ANR	1101309	Symbol	CLAMP		1100721						
ANR	1101310	Symbol	g1		1100721						
ANR	1101311	Symbol	FromLT2		1100721						
ANR	1101312	Symbol	g2		1100721						
ANR	1101313	Symbol	stride		1100721						
ANR	1101314	Symbol	n		1100721						
ANR	1101315	Symbol	* ip		1100721						
ANR	1101316	Symbol	b1		1100721						
ANR	1101317	Symbol	a1		1100721						
ANR	1101318	Symbol	b2		1100721						
ANR	1101319	Symbol	fltsize		1100721						
ANR	1101320	Symbol	a2		1100721						
ANR	1101321	Symbol	CODE_MASK		1100721						
ANR	1101322	Symbol	Fltsize		1100721						
ANR	1101323	Symbol	wp		1100721						
ANR	1101324	Symbol	* wp		1100721						
ANR	1101325	Symbol	mask		1100721						
ANR	1101326	Symbol	r1		1100721						
ANR	1101327	Function	horizontalDifference16	991:0:28648:30062							
ANR	1101328	FunctionDef	"horizontalDifference16 (unsigned short * ip , int n , int stride , unsigned short * wp , uint16 * From14)"		1101327	0					
ANR	1101329	CompoundStatement		994:0:28760:30062	1101327	0					
ANR	1101330	Statement	register	995:4:28766:28773	1101327	0	True				
ANR	1101331	IdentifierDeclStatement	"int r1 , g1 , b1 , a1 , r2 , g2 , b2 , a2 , mask ;"	995:13:28775:28816	1101327	1	True				
ANR	1101332	IdentifierDecl	r1		1101327	0					
ANR	1101333	IdentifierDeclType	int		1101327	0					
ANR	1101334	Identifier	r1		1101327	1					
ANR	1101335	IdentifierDecl	g1		1101327	1					
ANR	1101336	IdentifierDeclType	int		1101327	0					
ANR	1101337	Identifier	g1		1101327	1					
ANR	1101338	IdentifierDecl	b1		1101327	2					
ANR	1101339	IdentifierDeclType	int		1101327	0					
ANR	1101340	Identifier	b1		1101327	1					
ANR	1101341	IdentifierDecl	a1		1101327	3					
ANR	1101342	IdentifierDeclType	int		1101327	0					
ANR	1101343	Identifier	a1		1101327	1					
ANR	1101344	IdentifierDecl	r2		1101327	4					
ANR	1101345	IdentifierDeclType	int		1101327	0					
ANR	1101346	Identifier	r2		1101327	1					
ANR	1101347	IdentifierDecl	g2		1101327	5					
ANR	1101348	IdentifierDeclType	int		1101327	0					
ANR	1101349	Identifier	g2		1101327	1					
ANR	1101350	IdentifierDecl	b2		1101327	6					
ANR	1101351	IdentifierDeclType	int		1101327	0					
ANR	1101352	Identifier	b2		1101327	1					
ANR	1101353	IdentifierDecl	a2		1101327	7					
ANR	1101354	IdentifierDeclType	int		1101327	0					
ANR	1101355	Identifier	a2		1101327	1					
ANR	1101356	IdentifierDecl	mask		1101327	8					
ANR	1101357	IdentifierDeclType	int		1101327	0					
ANR	1101358	Identifier	mask		1101327	1					
ANR	1101359	Statement	undef	998:1:28862:28866	1101327	2	True				
ANR	1101360	Statement	CLAMP	998:9:28870:28874	1101327	3	True				
ANR	1101361	Statement	define	999:1:28877:28882	1101327	4	True				
ANR	1101362	Statement	CLAMP	999:9:28885:28889	1101327	5	True				
ANR	1101363	Statement	(	999:14:28890:28890	1101327	6	True				
ANR	1101364	Statement	v	999:15:28891:28891	1101327	7	True				
ANR	1101365	Statement	)	999:16:28892:28892	1101327	8	True				
ANR	1101366	Statement	From14	999:18:28894:28899	1101327	9	True				
ANR	1101367	Statement	[	999:24:28900:28900	1101327	10	True				
ANR	1101368	Statement	(	999:25:28901:28901	1101327	11	True				
ANR	1101369	Statement	v	999:26:28902:28902	1101327	12	True				
ANR	1101370	Statement	)	999:27:28903:28903	1101327	13	True				
ANR	1101371	Statement	>>	999:29:28905:28906	1101327	14	True				
ANR	1101372	Statement	2	999:32:28908:28908	1101327	15	True				
ANR	1101373	Statement	]	999:33:28909:28909	1101327	16	True				
ANR	1101374	ExpressionStatement	mask = CODE_MASK	1001:4:28916:28932	1101327	17	True				
ANR	1101375	AssignmentExpression	mask = CODE_MASK		1101327	0		=			
ANR	1101376	Identifier	mask		1101327	0					
ANR	1101377	Identifier	CODE_MASK		1101327	1					
ANR	1101378	IfStatement	if ( n >= stride )		1101327	18					
ANR	1101379	Condition	n >= stride	1002:8:28942:28952	1101327	0	True				
ANR	1101380	RelationalExpression	n >= stride		1101327	0		>=			
ANR	1101381	Identifier	n		1101327	0					
ANR	1101382	Identifier	stride		1101327	1					
ANR	1101383	CompoundStatement		9:21:194:194	1101327	1					
ANR	1101384	IfStatement	if ( stride == 3 )		1101327	0					
ANR	1101385	Condition	stride == 3	1003:5:28962:28972	1101327	0	True				
ANR	1101386	EqualityExpression	stride == 3		1101327	0		==			
ANR	1101387	Identifier	stride		1101327	0					
ANR	1101388	PrimaryExpression	3		1101327	1					
ANR	1101389	CompoundStatement		10:18:214:214	1101327	1					
ANR	1101390	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1004:5:28982:29007	1101327	0	True				
ANR	1101391	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101327	0		=			
ANR	1101392	Identifier	r2		1101327	0					
ANR	1101393	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101327	1		=			
ANR	1101394	ArrayIndexing	wp [ 0 ]		1101327	0					
ANR	1101395	Identifier	wp		1101327	0					
ANR	1101396	PrimaryExpression	0		1101327	1					
ANR	1101397	CallExpression	CLAMP ( ip [ 0 ] )		1101327	1					
ANR	1101398	Callee	CLAMP		1101327	0					
ANR	1101399	Identifier	CLAMP		1101327	0					
ANR	1101400	ArgumentList	ip [ 0 ]		1101327	1					
ANR	1101401	Argument	ip [ 0 ]		1101327	0					
ANR	1101402	ArrayIndexing	ip [ 0 ]		1101327	0					
ANR	1101403	Identifier	ip		1101327	0					
ANR	1101404	PrimaryExpression	0		1101327	1					
ANR	1101405	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1004:33:29010:29035	1101327	1	True				
ANR	1101406	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101327	0		=			
ANR	1101407	Identifier	g2		1101327	0					
ANR	1101408	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101327	1		=			
ANR	1101409	ArrayIndexing	wp [ 1 ]		1101327	0					
ANR	1101410	Identifier	wp		1101327	0					
ANR	1101411	PrimaryExpression	1		1101327	1					
ANR	1101412	CallExpression	CLAMP ( ip [ 1 ] )		1101327	1					
ANR	1101413	Callee	CLAMP		1101327	0					
ANR	1101414	Identifier	CLAMP		1101327	0					
ANR	1101415	ArgumentList	ip [ 1 ]		1101327	1					
ANR	1101416	Argument	ip [ 1 ]		1101327	0					
ANR	1101417	ArrayIndexing	ip [ 1 ]		1101327	0					
ANR	1101418	Identifier	ip		1101327	0					
ANR	1101419	PrimaryExpression	1		1101327	1					
ANR	1101420	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1005:5:29042:29067	1101327	2	True				
ANR	1101421	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101327	0		=			
ANR	1101422	Identifier	b2		1101327	0					
ANR	1101423	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101327	1		=			
ANR	1101424	ArrayIndexing	wp [ 2 ]		1101327	0					
ANR	1101425	Identifier	wp		1101327	0					
ANR	1101426	PrimaryExpression	2		1101327	1					
ANR	1101427	CallExpression	CLAMP ( ip [ 2 ] )		1101327	1					
ANR	1101428	Callee	CLAMP		1101327	0					
ANR	1101429	Identifier	CLAMP		1101327	0					
ANR	1101430	ArgumentList	ip [ 2 ]		1101327	1					
ANR	1101431	Argument	ip [ 2 ]		1101327	0					
ANR	1101432	ArrayIndexing	ip [ 2 ]		1101327	0					
ANR	1101433	Identifier	ip		1101327	0					
ANR	1101434	PrimaryExpression	2		1101327	1					
ANR	1101435	ExpressionStatement	n -= 3	1006:5:29074:29080	1101327	3	True				
ANR	1101436	AssignmentExpression	n -= 3		1101327	0		-=			
ANR	1101437	Identifier	n		1101327	0					
ANR	1101438	PrimaryExpression	3		1101327	1					
ANR	1101439	WhileStatement	while ( n > 0 )		1101327	4					
ANR	1101440	Condition	n > 0	1007:12:29094:29098	1101327	0	True				
ANR	1101441	RelationalExpression	n > 0		1101327	0		>			
ANR	1101442	Identifier	n		1101327	0					
ANR	1101443	PrimaryExpression	0		1101327	1					
ANR	1101444	CompoundStatement		14:19:340:340	1101327	1					
ANR	1101445	ExpressionStatement	n -= 3	1008:2:29105:29111	1101327	0	True				
ANR	1101446	AssignmentExpression	n -= 3		1101327	0		-=			
ANR	1101447	Identifier	n		1101327	0					
ANR	1101448	PrimaryExpression	3		1101327	1					
ANR	1101449	ExpressionStatement	wp += 3	1009:2:29115:29122	1101327	1	True				
ANR	1101450	AssignmentExpression	wp += 3		1101327	0		+=			
ANR	1101451	Identifier	wp		1101327	0					
ANR	1101452	PrimaryExpression	3		1101327	1					
ANR	1101453	ExpressionStatement	ip += 3	1010:2:29126:29133	1101327	2	True				
ANR	1101454	AssignmentExpression	ip += 3		1101327	0		+=			
ANR	1101455	Identifier	ip		1101327	0					
ANR	1101456	PrimaryExpression	3		1101327	1					
ANR	1101457	ExpressionStatement	r1 = CLAMP ( ip [ 0 ] )	1011:2:29137:29154	1101327	3	True				
ANR	1101458	AssignmentExpression	r1 = CLAMP ( ip [ 0 ] )		1101327	0		=			
ANR	1101459	Identifier	r1		1101327	0					
ANR	1101460	CallExpression	CLAMP ( ip [ 0 ] )		1101327	1					
ANR	1101461	Callee	CLAMP		1101327	0					
ANR	1101462	Identifier	CLAMP		1101327	0					
ANR	1101463	ArgumentList	ip [ 0 ]		1101327	1					
ANR	1101464	Argument	ip [ 0 ]		1101327	0					
ANR	1101465	ArrayIndexing	ip [ 0 ]		1101327	0					
ANR	1101466	Identifier	ip		1101327	0					
ANR	1101467	PrimaryExpression	0		1101327	1					
ANR	1101468	ExpressionStatement	wp [ 0 ] = ( r1 - r2 ) & mask	1011:21:29156:29178	1101327	4	True				
ANR	1101469	AssignmentExpression	wp [ 0 ] = ( r1 - r2 ) & mask		1101327	0		=			
ANR	1101470	ArrayIndexing	wp [ 0 ]		1101327	0					
ANR	1101471	Identifier	wp		1101327	0					
ANR	1101472	PrimaryExpression	0		1101327	1					
ANR	1101473	BitAndExpression	( r1 - r2 ) & mask		1101327	1		&			
ANR	1101474	AdditiveExpression	r1 - r2		1101327	0		-			
ANR	1101475	Identifier	r1		1101327	0					
ANR	1101476	Identifier	r2		1101327	1					
ANR	1101477	Identifier	mask		1101327	1					
ANR	1101478	ExpressionStatement	r2 = r1	1011:45:29180:29187	1101327	5	True				
ANR	1101479	AssignmentExpression	r2 = r1		1101327	0		=			
ANR	1101480	Identifier	r2		1101327	0					
ANR	1101481	Identifier	r1		1101327	1					
ANR	1101482	ExpressionStatement	g1 = CLAMP ( ip [ 1 ] )	1012:2:29191:29208	1101327	6	True				
ANR	1101483	AssignmentExpression	g1 = CLAMP ( ip [ 1 ] )		1101327	0		=			
ANR	1101484	Identifier	g1		1101327	0					
ANR	1101485	CallExpression	CLAMP ( ip [ 1 ] )		1101327	1					
ANR	1101486	Callee	CLAMP		1101327	0					
ANR	1101487	Identifier	CLAMP		1101327	0					
ANR	1101488	ArgumentList	ip [ 1 ]		1101327	1					
ANR	1101489	Argument	ip [ 1 ]		1101327	0					
ANR	1101490	ArrayIndexing	ip [ 1 ]		1101327	0					
ANR	1101491	Identifier	ip		1101327	0					
ANR	1101492	PrimaryExpression	1		1101327	1					
ANR	1101493	ExpressionStatement	wp [ 1 ] = ( g1 - g2 ) & mask	1012:21:29210:29232	1101327	7	True				
ANR	1101494	AssignmentExpression	wp [ 1 ] = ( g1 - g2 ) & mask		1101327	0		=			
ANR	1101495	ArrayIndexing	wp [ 1 ]		1101327	0					
ANR	1101496	Identifier	wp		1101327	0					
ANR	1101497	PrimaryExpression	1		1101327	1					
ANR	1101498	BitAndExpression	( g1 - g2 ) & mask		1101327	1		&			
ANR	1101499	AdditiveExpression	g1 - g2		1101327	0		-			
ANR	1101500	Identifier	g1		1101327	0					
ANR	1101501	Identifier	g2		1101327	1					
ANR	1101502	Identifier	mask		1101327	1					
ANR	1101503	ExpressionStatement	g2 = g1	1012:45:29234:29241	1101327	8	True				
ANR	1101504	AssignmentExpression	g2 = g1		1101327	0		=			
ANR	1101505	Identifier	g2		1101327	0					
ANR	1101506	Identifier	g1		1101327	1					
ANR	1101507	ExpressionStatement	b1 = CLAMP ( ip [ 2 ] )	1013:2:29245:29262	1101327	9	True				
ANR	1101508	AssignmentExpression	b1 = CLAMP ( ip [ 2 ] )		1101327	0		=			
ANR	1101509	Identifier	b1		1101327	0					
ANR	1101510	CallExpression	CLAMP ( ip [ 2 ] )		1101327	1					
ANR	1101511	Callee	CLAMP		1101327	0					
ANR	1101512	Identifier	CLAMP		1101327	0					
ANR	1101513	ArgumentList	ip [ 2 ]		1101327	1					
ANR	1101514	Argument	ip [ 2 ]		1101327	0					
ANR	1101515	ArrayIndexing	ip [ 2 ]		1101327	0					
ANR	1101516	Identifier	ip		1101327	0					
ANR	1101517	PrimaryExpression	2		1101327	1					
ANR	1101518	ExpressionStatement	wp [ 2 ] = ( b1 - b2 ) & mask	1013:21:29264:29286	1101327	10	True				
ANR	1101519	AssignmentExpression	wp [ 2 ] = ( b1 - b2 ) & mask		1101327	0		=			
ANR	1101520	ArrayIndexing	wp [ 2 ]		1101327	0					
ANR	1101521	Identifier	wp		1101327	0					
ANR	1101522	PrimaryExpression	2		1101327	1					
ANR	1101523	BitAndExpression	( b1 - b2 ) & mask		1101327	1		&			
ANR	1101524	AdditiveExpression	b1 - b2		1101327	0		-			
ANR	1101525	Identifier	b1		1101327	0					
ANR	1101526	Identifier	b2		1101327	1					
ANR	1101527	Identifier	mask		1101327	1					
ANR	1101528	ExpressionStatement	b2 = b1	1013:45:29288:29295	1101327	11	True				
ANR	1101529	AssignmentExpression	b2 = b1		1101327	0		=			
ANR	1101530	Identifier	b2		1101327	0					
ANR	1101531	Identifier	b1		1101327	1					
ANR	1101532	ElseStatement	else		1101327	0					
ANR	1101533	IfStatement	if ( stride == 4 )		1101327	0					
ANR	1101534	Condition	stride == 4	1015:12:29316:29326	1101327	0	True				
ANR	1101535	EqualityExpression	stride == 4		1101327	0		==			
ANR	1101536	Identifier	stride		1101327	0					
ANR	1101537	PrimaryExpression	4		1101327	1					
ANR	1101538	CompoundStatement		22:25:568:568	1101327	1					
ANR	1101539	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1016:5:29336:29361	1101327	0	True				
ANR	1101540	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101327	0		=			
ANR	1101541	Identifier	r2		1101327	0					
ANR	1101542	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101327	1		=			
ANR	1101543	ArrayIndexing	wp [ 0 ]		1101327	0					
ANR	1101544	Identifier	wp		1101327	0					
ANR	1101545	PrimaryExpression	0		1101327	1					
ANR	1101546	CallExpression	CLAMP ( ip [ 0 ] )		1101327	1					
ANR	1101547	Callee	CLAMP		1101327	0					
ANR	1101548	Identifier	CLAMP		1101327	0					
ANR	1101549	ArgumentList	ip [ 0 ]		1101327	1					
ANR	1101550	Argument	ip [ 0 ]		1101327	0					
ANR	1101551	ArrayIndexing	ip [ 0 ]		1101327	0					
ANR	1101552	Identifier	ip		1101327	0					
ANR	1101553	PrimaryExpression	0		1101327	1					
ANR	1101554	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1016:33:29364:29389	1101327	1	True				
ANR	1101555	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101327	0		=			
ANR	1101556	Identifier	g2		1101327	0					
ANR	1101557	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101327	1		=			
ANR	1101558	ArrayIndexing	wp [ 1 ]		1101327	0					
ANR	1101559	Identifier	wp		1101327	0					
ANR	1101560	PrimaryExpression	1		1101327	1					
ANR	1101561	CallExpression	CLAMP ( ip [ 1 ] )		1101327	1					
ANR	1101562	Callee	CLAMP		1101327	0					
ANR	1101563	Identifier	CLAMP		1101327	0					
ANR	1101564	ArgumentList	ip [ 1 ]		1101327	1					
ANR	1101565	Argument	ip [ 1 ]		1101327	0					
ANR	1101566	ArrayIndexing	ip [ 1 ]		1101327	0					
ANR	1101567	Identifier	ip		1101327	0					
ANR	1101568	PrimaryExpression	1		1101327	1					
ANR	1101569	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1017:5:29396:29421	1101327	2	True				
ANR	1101570	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101327	0		=			
ANR	1101571	Identifier	b2		1101327	0					
ANR	1101572	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101327	1		=			
ANR	1101573	ArrayIndexing	wp [ 2 ]		1101327	0					
ANR	1101574	Identifier	wp		1101327	0					
ANR	1101575	PrimaryExpression	2		1101327	1					
ANR	1101576	CallExpression	CLAMP ( ip [ 2 ] )		1101327	1					
ANR	1101577	Callee	CLAMP		1101327	0					
ANR	1101578	Identifier	CLAMP		1101327	0					
ANR	1101579	ArgumentList	ip [ 2 ]		1101327	1					
ANR	1101580	Argument	ip [ 2 ]		1101327	0					
ANR	1101581	ArrayIndexing	ip [ 2 ]		1101327	0					
ANR	1101582	Identifier	ip		1101327	0					
ANR	1101583	PrimaryExpression	2		1101327	1					
ANR	1101584	ExpressionStatement	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )	1017:33:29424:29449	1101327	3	True				
ANR	1101585	AssignmentExpression	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )		1101327	0		=			
ANR	1101586	Identifier	a2		1101327	0					
ANR	1101587	AssignmentExpression	wp [ 3 ] = CLAMP ( ip [ 3 ] )		1101327	1		=			
ANR	1101588	ArrayIndexing	wp [ 3 ]		1101327	0					
ANR	1101589	Identifier	wp		1101327	0					
ANR	1101590	PrimaryExpression	3		1101327	1					
ANR	1101591	CallExpression	CLAMP ( ip [ 3 ] )		1101327	1					
ANR	1101592	Callee	CLAMP		1101327	0					
ANR	1101593	Identifier	CLAMP		1101327	0					
ANR	1101594	ArgumentList	ip [ 3 ]		1101327	1					
ANR	1101595	Argument	ip [ 3 ]		1101327	0					
ANR	1101596	ArrayIndexing	ip [ 3 ]		1101327	0					
ANR	1101597	Identifier	ip		1101327	0					
ANR	1101598	PrimaryExpression	3		1101327	1					
ANR	1101599	ExpressionStatement	n -= 4	1018:5:29456:29462	1101327	4	True				
ANR	1101600	AssignmentExpression	n -= 4		1101327	0		-=			
ANR	1101601	Identifier	n		1101327	0					
ANR	1101602	PrimaryExpression	4		1101327	1					
ANR	1101603	WhileStatement	while ( n > 0 )		1101327	5					
ANR	1101604	Condition	n > 0	1019:12:29476:29480	1101327	0	True				
ANR	1101605	RelationalExpression	n > 0		1101327	0		>			
ANR	1101606	Identifier	n		1101327	0					
ANR	1101607	PrimaryExpression	0		1101327	1					
ANR	1101608	CompoundStatement		26:19:722:722	1101327	1					
ANR	1101609	ExpressionStatement	n -= 4	1020:2:29487:29493	1101327	0	True				
ANR	1101610	AssignmentExpression	n -= 4		1101327	0		-=			
ANR	1101611	Identifier	n		1101327	0					
ANR	1101612	PrimaryExpression	4		1101327	1					
ANR	1101613	ExpressionStatement	wp += 4	1021:2:29497:29504	1101327	1	True				
ANR	1101614	AssignmentExpression	wp += 4		1101327	0		+=			
ANR	1101615	Identifier	wp		1101327	0					
ANR	1101616	PrimaryExpression	4		1101327	1					
ANR	1101617	ExpressionStatement	ip += 4	1022:2:29508:29515	1101327	2	True				
ANR	1101618	AssignmentExpression	ip += 4		1101327	0		+=			
ANR	1101619	Identifier	ip		1101327	0					
ANR	1101620	PrimaryExpression	4		1101327	1					
ANR	1101621	ExpressionStatement	r1 = CLAMP ( ip [ 0 ] )	1023:2:29519:29536	1101327	3	True				
ANR	1101622	AssignmentExpression	r1 = CLAMP ( ip [ 0 ] )		1101327	0		=			
ANR	1101623	Identifier	r1		1101327	0					
ANR	1101624	CallExpression	CLAMP ( ip [ 0 ] )		1101327	1					
ANR	1101625	Callee	CLAMP		1101327	0					
ANR	1101626	Identifier	CLAMP		1101327	0					
ANR	1101627	ArgumentList	ip [ 0 ]		1101327	1					
ANR	1101628	Argument	ip [ 0 ]		1101327	0					
ANR	1101629	ArrayIndexing	ip [ 0 ]		1101327	0					
ANR	1101630	Identifier	ip		1101327	0					
ANR	1101631	PrimaryExpression	0		1101327	1					
ANR	1101632	ExpressionStatement	wp [ 0 ] = ( r1 - r2 ) & mask	1023:21:29538:29560	1101327	4	True				
ANR	1101633	AssignmentExpression	wp [ 0 ] = ( r1 - r2 ) & mask		1101327	0		=			
ANR	1101634	ArrayIndexing	wp [ 0 ]		1101327	0					
ANR	1101635	Identifier	wp		1101327	0					
ANR	1101636	PrimaryExpression	0		1101327	1					
ANR	1101637	BitAndExpression	( r1 - r2 ) & mask		1101327	1		&			
ANR	1101638	AdditiveExpression	r1 - r2		1101327	0		-			
ANR	1101639	Identifier	r1		1101327	0					
ANR	1101640	Identifier	r2		1101327	1					
ANR	1101641	Identifier	mask		1101327	1					
ANR	1101642	ExpressionStatement	r2 = r1	1023:45:29562:29569	1101327	5	True				
ANR	1101643	AssignmentExpression	r2 = r1		1101327	0		=			
ANR	1101644	Identifier	r2		1101327	0					
ANR	1101645	Identifier	r1		1101327	1					
ANR	1101646	ExpressionStatement	g1 = CLAMP ( ip [ 1 ] )	1024:2:29573:29590	1101327	6	True				
ANR	1101647	AssignmentExpression	g1 = CLAMP ( ip [ 1 ] )		1101327	0		=			
ANR	1101648	Identifier	g1		1101327	0					
ANR	1101649	CallExpression	CLAMP ( ip [ 1 ] )		1101327	1					
ANR	1101650	Callee	CLAMP		1101327	0					
ANR	1101651	Identifier	CLAMP		1101327	0					
ANR	1101652	ArgumentList	ip [ 1 ]		1101327	1					
ANR	1101653	Argument	ip [ 1 ]		1101327	0					
ANR	1101654	ArrayIndexing	ip [ 1 ]		1101327	0					
ANR	1101655	Identifier	ip		1101327	0					
ANR	1101656	PrimaryExpression	1		1101327	1					
ANR	1101657	ExpressionStatement	wp [ 1 ] = ( g1 - g2 ) & mask	1024:21:29592:29614	1101327	7	True				
ANR	1101658	AssignmentExpression	wp [ 1 ] = ( g1 - g2 ) & mask		1101327	0		=			
ANR	1101659	ArrayIndexing	wp [ 1 ]		1101327	0					
ANR	1101660	Identifier	wp		1101327	0					
ANR	1101661	PrimaryExpression	1		1101327	1					
ANR	1101662	BitAndExpression	( g1 - g2 ) & mask		1101327	1		&			
ANR	1101663	AdditiveExpression	g1 - g2		1101327	0		-			
ANR	1101664	Identifier	g1		1101327	0					
ANR	1101665	Identifier	g2		1101327	1					
ANR	1101666	Identifier	mask		1101327	1					
ANR	1101667	ExpressionStatement	g2 = g1	1024:45:29616:29623	1101327	8	True				
ANR	1101668	AssignmentExpression	g2 = g1		1101327	0		=			
ANR	1101669	Identifier	g2		1101327	0					
ANR	1101670	Identifier	g1		1101327	1					
ANR	1101671	ExpressionStatement	b1 = CLAMP ( ip [ 2 ] )	1025:2:29627:29644	1101327	9	True				
ANR	1101672	AssignmentExpression	b1 = CLAMP ( ip [ 2 ] )		1101327	0		=			
ANR	1101673	Identifier	b1		1101327	0					
ANR	1101674	CallExpression	CLAMP ( ip [ 2 ] )		1101327	1					
ANR	1101675	Callee	CLAMP		1101327	0					
ANR	1101676	Identifier	CLAMP		1101327	0					
ANR	1101677	ArgumentList	ip [ 2 ]		1101327	1					
ANR	1101678	Argument	ip [ 2 ]		1101327	0					
ANR	1101679	ArrayIndexing	ip [ 2 ]		1101327	0					
ANR	1101680	Identifier	ip		1101327	0					
ANR	1101681	PrimaryExpression	2		1101327	1					
ANR	1101682	ExpressionStatement	wp [ 2 ] = ( b1 - b2 ) & mask	1025:21:29646:29668	1101327	10	True				
ANR	1101683	AssignmentExpression	wp [ 2 ] = ( b1 - b2 ) & mask		1101327	0		=			
ANR	1101684	ArrayIndexing	wp [ 2 ]		1101327	0					
ANR	1101685	Identifier	wp		1101327	0					
ANR	1101686	PrimaryExpression	2		1101327	1					
ANR	1101687	BitAndExpression	( b1 - b2 ) & mask		1101327	1		&			
ANR	1101688	AdditiveExpression	b1 - b2		1101327	0		-			
ANR	1101689	Identifier	b1		1101327	0					
ANR	1101690	Identifier	b2		1101327	1					
ANR	1101691	Identifier	mask		1101327	1					
ANR	1101692	ExpressionStatement	b2 = b1	1025:45:29670:29677	1101327	11	True				
ANR	1101693	AssignmentExpression	b2 = b1		1101327	0		=			
ANR	1101694	Identifier	b2		1101327	0					
ANR	1101695	Identifier	b1		1101327	1					
ANR	1101696	ExpressionStatement	a1 = CLAMP ( ip [ 3 ] )	1026:2:29681:29698	1101327	12	True				
ANR	1101697	AssignmentExpression	a1 = CLAMP ( ip [ 3 ] )		1101327	0		=			
ANR	1101698	Identifier	a1		1101327	0					
ANR	1101699	CallExpression	CLAMP ( ip [ 3 ] )		1101327	1					
ANR	1101700	Callee	CLAMP		1101327	0					
ANR	1101701	Identifier	CLAMP		1101327	0					
ANR	1101702	ArgumentList	ip [ 3 ]		1101327	1					
ANR	1101703	Argument	ip [ 3 ]		1101327	0					
ANR	1101704	ArrayIndexing	ip [ 3 ]		1101327	0					
ANR	1101705	Identifier	ip		1101327	0					
ANR	1101706	PrimaryExpression	3		1101327	1					
ANR	1101707	ExpressionStatement	wp [ 3 ] = ( a1 - a2 ) & mask	1026:21:29700:29722	1101327	13	True				
ANR	1101708	AssignmentExpression	wp [ 3 ] = ( a1 - a2 ) & mask		1101327	0		=			
ANR	1101709	ArrayIndexing	wp [ 3 ]		1101327	0					
ANR	1101710	Identifier	wp		1101327	0					
ANR	1101711	PrimaryExpression	3		1101327	1					
ANR	1101712	BitAndExpression	( a1 - a2 ) & mask		1101327	1		&			
ANR	1101713	AdditiveExpression	a1 - a2		1101327	0		-			
ANR	1101714	Identifier	a1		1101327	0					
ANR	1101715	Identifier	a2		1101327	1					
ANR	1101716	Identifier	mask		1101327	1					
ANR	1101717	ExpressionStatement	a2 = a1	1026:45:29724:29731	1101327	14	True				
ANR	1101718	AssignmentExpression	a2 = a1		1101327	0		=			
ANR	1101719	Identifier	a2		1101327	0					
ANR	1101720	Identifier	a1		1101327	1					
ANR	1101721	ElseStatement	else		1101327	0					
ANR	1101722	CompoundStatement		35:8:987:987	1101327	0					
ANR	1101723	ExpressionStatement	ip += n - 1	1029:5:29755:29766	1101327	0	True				
ANR	1101724	AssignmentExpression	ip += n - 1		1101327	0		+=			
ANR	1101725	Identifier	ip		1101327	0					
ANR	1101726	AdditiveExpression	n - 1		1101327	1		-			
ANR	1101727	Identifier	n		1101327	0					
ANR	1101728	PrimaryExpression	1		1101327	1					
ANR	1101729	ExpressionStatement	wp += n - 1	1030:5:29797:29808	1101327	1	True				
ANR	1101730	AssignmentExpression	wp += n - 1		1101327	0		+=			
ANR	1101731	Identifier	wp		1101327	0					
ANR	1101732	AdditiveExpression	n - 1		1101327	1		-			
ANR	1101733	Identifier	n		1101327	0					
ANR	1101734	PrimaryExpression	1		1101327	1					
ANR	1101735	ExpressionStatement	n -= stride	1031:5:29839:29850	1101327	2	True				
ANR	1101736	AssignmentExpression	n -= stride		1101327	0		-=			
ANR	1101737	Identifier	n		1101327	0					
ANR	1101738	Identifier	stride		1101327	1					
ANR	1101739	WhileStatement	while ( n > 0 )		1101327	3					
ANR	1101740	Condition	n > 0	1032:12:29864:29868	1101327	0	True				
ANR	1101741	RelationalExpression	n > 0		1101327	0		>			
ANR	1101742	Identifier	n		1101327	0					
ANR	1101743	PrimaryExpression	0		1101327	1					
ANR	1101744	CompoundStatement		39:19:1110:1110	1101327	1					
ANR	1101745	Statement	REPEAT	1033:2:29875:29880	1101327	0	True				
ANR	1101746	Statement	(	1033:8:29881:29881	1101327	1	True				
ANR	1101747	ExpressionStatement	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"	1033:9:29882:29910	1101327	2	True				
ANR	1101748	Expression	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"		1101327	0					
ANR	1101749	Identifier	stride		1101327	0					
ANR	1101750	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101327	1		=			
ANR	1101751	ArrayIndexing	wp [ 0 ]		1101327	0					
ANR	1101752	Identifier	wp		1101327	0					
ANR	1101753	PrimaryExpression	0		1101327	1					
ANR	1101754	CallExpression	CLAMP ( ip [ 0 ] )		1101327	1					
ANR	1101755	Callee	CLAMP		1101327	0					
ANR	1101756	Identifier	CLAMP		1101327	0					
ANR	1101757	ArgumentList	ip [ 0 ]		1101327	1					
ANR	1101758	Argument	ip [ 0 ]		1101327	0					
ANR	1101759	ArrayIndexing	ip [ 0 ]		1101327	0					
ANR	1101760	Identifier	ip		1101327	0					
ANR	1101761	PrimaryExpression	0		1101327	1					
ANR	1101762	ExpressionStatement	wp [ stride ] -= wp [ 0 ]	1034:4:29916:29935	1101327	3	True				
ANR	1101763	AssignmentExpression	wp [ stride ] -= wp [ 0 ]		1101327	0		-=			
ANR	1101764	ArrayIndexing	wp [ stride ]		1101327	0					
ANR	1101765	Identifier	wp		1101327	0					
ANR	1101766	Identifier	stride		1101327	1					
ANR	1101767	ArrayIndexing	wp [ 0 ]		1101327	1					
ANR	1101768	Identifier	wp		1101327	0					
ANR	1101769	PrimaryExpression	0		1101327	1					
ANR	1101770	ExpressionStatement	wp [ stride ] &= mask	1035:4:29941:29959	1101327	4	True				
ANR	1101771	AssignmentExpression	wp [ stride ] &= mask		1101327	0		&=			
ANR	1101772	ArrayIndexing	wp [ stride ]		1101327	0					
ANR	1101773	Identifier	wp		1101327	0					
ANR	1101774	Identifier	stride		1101327	1					
ANR	1101775	Identifier	mask		1101327	1					
ANR	1101776	ExpressionStatement	wp --	1036:4:29965:29969	1101327	5	True				
ANR	1101777	PostIncDecOperationExpression	wp --		1101327	0					
ANR	1101778	Identifier	wp		1101327	0					
ANR	1101779	IncDec	--		1101327	1					
ANR	1101780	Statement	ip	1036:10:29971:29972	1101327	6	True				
ANR	1101781	Statement	--	1036:12:29973:29974	1101327	7	True				
ANR	1101782	Statement	)	1036:14:29975:29975	1101327	8	True				
ANR	1101783	ExpressionStatement	n -= stride	1037:2:29979:29990	1101327	9	True				
ANR	1101784	AssignmentExpression	n -= stride		1101327	0		-=			
ANR	1101785	Identifier	n		1101327	0					
ANR	1101786	Identifier	stride		1101327	1					
ANR	1101787	Statement	REPEAT	1039:5:30004:30009	1101327	4	True				
ANR	1101788	Statement	(	1039:11:30010:30010	1101327	5	True				
ANR	1101789	ExpressionStatement	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"	1039:12:30011:30039	1101327	6	True				
ANR	1101790	Expression	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"		1101327	0					
ANR	1101791	Identifier	stride		1101327	0					
ANR	1101792	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101327	1		=			
ANR	1101793	ArrayIndexing	wp [ 0 ]		1101327	0					
ANR	1101794	Identifier	wp		1101327	0					
ANR	1101795	PrimaryExpression	0		1101327	1					
ANR	1101796	CallExpression	CLAMP ( ip [ 0 ] )		1101327	1					
ANR	1101797	Callee	CLAMP		1101327	0					
ANR	1101798	Identifier	CLAMP		1101327	0					
ANR	1101799	ArgumentList	ip [ 0 ]		1101327	1					
ANR	1101800	Argument	ip [ 0 ]		1101327	0					
ANR	1101801	ArrayIndexing	ip [ 0 ]		1101327	0					
ANR	1101802	Identifier	ip		1101327	0					
ANR	1101803	PrimaryExpression	0		1101327	1					
ANR	1101804	ExpressionStatement	wp --	1039:42:30041:30045	1101327	7	True				
ANR	1101805	PostIncDecOperationExpression	wp --		1101327	0					
ANR	1101806	Identifier	wp		1101327	0					
ANR	1101807	IncDec	--		1101327	1					
ANR	1101808	Statement	ip	1039:48:30047:30048	1101327	8	True				
ANR	1101809	Statement	--	1039:50:30049:30050	1101327	9	True				
ANR	1101810	Statement	)	1039:52:30051:30051	1101327	10	True				
ANR	1101811	ReturnType	static void		1101327	1					
ANR	1101812	Identifier	horizontalDifference16		1101327	2					
ANR	1101813	ParameterList	"unsigned short * ip , int n , int stride , unsigned short * wp , uint16 * From14"		1101327	3					
ANR	1101814	Parameter	unsigned short * ip	992:23:28683:28700	1101327	0	True				
ANR	1101815	ParameterType	unsigned short *		1101327	0					
ANR	1101816	Identifier	ip		1101327	1					
ANR	1101817	Parameter	int n	992:43:28703:28707	1101327	1	True				
ANR	1101818	ParameterType	int		1101327	0					
ANR	1101819	Identifier	n		1101327	1					
ANR	1101820	Parameter	int stride	992:50:28710:28719	1101327	2	True				
ANR	1101821	ParameterType	int		1101327	0					
ANR	1101822	Identifier	stride		1101327	1					
ANR	1101823	Parameter	unsigned short * wp	993:1:28724:28741	1101327	3	True				
ANR	1101824	ParameterType	unsigned short *		1101327	0					
ANR	1101825	Identifier	wp		1101327	1					
ANR	1101826	Parameter	uint16 * From14	993:21:28744:28757	1101327	4	True				
ANR	1101827	ParameterType	uint16 *		1101327	0					
ANR	1101828	Identifier	From14		1101327	1					
ANR	1101829	CFGEntryNode	ENTRY		1101327		True				
ANR	1101830	CFGExitNode	EXIT		1101327		True				
ANR	1101831	Symbol	From14		1101327						
ANR	1101832	Symbol	r2		1101327						
ANR	1101833	Symbol	* stride		1101327						
ANR	1101834	Symbol	ip		1101327						
ANR	1101835	Symbol	CLAMP		1101327						
ANR	1101836	Symbol	g1		1101327						
ANR	1101837	Symbol	g2		1101327						
ANR	1101838	Symbol	stride		1101327						
ANR	1101839	Symbol	n		1101327						
ANR	1101840	Symbol	* ip		1101327						
ANR	1101841	Symbol	b1		1101327						
ANR	1101842	Symbol	a1		1101327						
ANR	1101843	Symbol	b2		1101327						
ANR	1101844	Symbol	a2		1101327						
ANR	1101845	Symbol	CODE_MASK		1101327						
ANR	1101846	Symbol	wp		1101327						
ANR	1101847	Symbol	* wp		1101327						
ANR	1101848	Symbol	mask		1101327						
ANR	1101849	Symbol	r1		1101327						
ANR	1101850	Function	horizontalDifference8	1045:0:30066:31448							
ANR	1101851	FunctionDef	"horizontalDifference8 (unsigned char * ip , int n , int stride , unsigned short * wp , uint16 * From8)"		1101850	0					
ANR	1101852	CompoundStatement		1048:0:30175:31448	1101850	0					
ANR	1101853	Statement	register	1049:4:30181:30188	1101850	0	True				
ANR	1101854	IdentifierDeclStatement	"int r1 , g1 , b1 , a1 , r2 , g2 , b2 , a2 , mask ;"	1049:13:30190:30231	1101850	1	True				
ANR	1101855	IdentifierDecl	r1		1101850	0					
ANR	1101856	IdentifierDeclType	int		1101850	0					
ANR	1101857	Identifier	r1		1101850	1					
ANR	1101858	IdentifierDecl	g1		1101850	1					
ANR	1101859	IdentifierDeclType	int		1101850	0					
ANR	1101860	Identifier	g1		1101850	1					
ANR	1101861	IdentifierDecl	b1		1101850	2					
ANR	1101862	IdentifierDeclType	int		1101850	0					
ANR	1101863	Identifier	b1		1101850	1					
ANR	1101864	IdentifierDecl	a1		1101850	3					
ANR	1101865	IdentifierDeclType	int		1101850	0					
ANR	1101866	Identifier	a1		1101850	1					
ANR	1101867	IdentifierDecl	r2		1101850	4					
ANR	1101868	IdentifierDeclType	int		1101850	0					
ANR	1101869	Identifier	r2		1101850	1					
ANR	1101870	IdentifierDecl	g2		1101850	5					
ANR	1101871	IdentifierDeclType	int		1101850	0					
ANR	1101872	Identifier	g2		1101850	1					
ANR	1101873	IdentifierDecl	b2		1101850	6					
ANR	1101874	IdentifierDeclType	int		1101850	0					
ANR	1101875	Identifier	b2		1101850	1					
ANR	1101876	IdentifierDecl	a2		1101850	7					
ANR	1101877	IdentifierDeclType	int		1101850	0					
ANR	1101878	Identifier	a2		1101850	1					
ANR	1101879	IdentifierDecl	mask		1101850	8					
ANR	1101880	IdentifierDeclType	int		1101850	0					
ANR	1101881	Identifier	mask		1101850	1					
ANR	1101882	Statement	undef	1051:1:30235:30239	1101850	2	True				
ANR	1101883	Statement	CLAMP	1051:8:30242:30246	1101850	3	True				
ANR	1101884	Statement	define	1052:1:30249:30254	1101850	4	True				
ANR	1101885	Statement	CLAMP	1052:9:30257:30261	1101850	5	True				
ANR	1101886	Statement	(	1052:14:30262:30262	1101850	6	True				
ANR	1101887	Statement	v	1052:15:30263:30263	1101850	7	True				
ANR	1101888	Statement	)	1052:16:30264:30264	1101850	8	True				
ANR	1101889	Statement	(	1052:18:30266:30266	1101850	9	True				
ANR	1101890	Statement	From8	1052:19:30267:30271	1101850	10	True				
ANR	1101891	Statement	[	1052:24:30272:30272	1101850	11	True				
ANR	1101892	Statement	(	1052:25:30273:30273	1101850	12	True				
ANR	1101893	Statement	v	1052:26:30274:30274	1101850	13	True				
ANR	1101894	Statement	)	1052:27:30275:30275	1101850	14	True				
ANR	1101895	Statement	]	1052:28:30276:30276	1101850	15	True				
ANR	1101896	Statement	)	1052:29:30277:30277	1101850	16	True				
ANR	1101897	ExpressionStatement	mask = CODE_MASK	1054:4:30284:30300	1101850	17	True				
ANR	1101898	AssignmentExpression	mask = CODE_MASK		1101850	0		=			
ANR	1101899	Identifier	mask		1101850	0					
ANR	1101900	Identifier	CODE_MASK		1101850	1					
ANR	1101901	IfStatement	if ( n >= stride )		1101850	18					
ANR	1101902	Condition	n >= stride	1055:8:30310:30320	1101850	0	True				
ANR	1101903	RelationalExpression	n >= stride		1101850	0		>=			
ANR	1101904	Identifier	n		1101850	0					
ANR	1101905	Identifier	stride		1101850	1					
ANR	1101906	CompoundStatement		8:21:147:147	1101850	1					
ANR	1101907	IfStatement	if ( stride == 3 )		1101850	0					
ANR	1101908	Condition	stride == 3	1056:5:30330:30340	1101850	0	True				
ANR	1101909	EqualityExpression	stride == 3		1101850	0		==			
ANR	1101910	Identifier	stride		1101850	0					
ANR	1101911	PrimaryExpression	3		1101850	1					
ANR	1101912	CompoundStatement		9:18:167:167	1101850	1					
ANR	1101913	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1057:5:30350:30375	1101850	0	True				
ANR	1101914	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101850	0		=			
ANR	1101915	Identifier	r2		1101850	0					
ANR	1101916	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101850	1		=			
ANR	1101917	ArrayIndexing	wp [ 0 ]		1101850	0					
ANR	1101918	Identifier	wp		1101850	0					
ANR	1101919	PrimaryExpression	0		1101850	1					
ANR	1101920	CallExpression	CLAMP ( ip [ 0 ] )		1101850	1					
ANR	1101921	Callee	CLAMP		1101850	0					
ANR	1101922	Identifier	CLAMP		1101850	0					
ANR	1101923	ArgumentList	ip [ 0 ]		1101850	1					
ANR	1101924	Argument	ip [ 0 ]		1101850	0					
ANR	1101925	ArrayIndexing	ip [ 0 ]		1101850	0					
ANR	1101926	Identifier	ip		1101850	0					
ANR	1101927	PrimaryExpression	0		1101850	1					
ANR	1101928	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1057:33:30378:30403	1101850	1	True				
ANR	1101929	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101850	0		=			
ANR	1101930	Identifier	g2		1101850	0					
ANR	1101931	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101850	1		=			
ANR	1101932	ArrayIndexing	wp [ 1 ]		1101850	0					
ANR	1101933	Identifier	wp		1101850	0					
ANR	1101934	PrimaryExpression	1		1101850	1					
ANR	1101935	CallExpression	CLAMP ( ip [ 1 ] )		1101850	1					
ANR	1101936	Callee	CLAMP		1101850	0					
ANR	1101937	Identifier	CLAMP		1101850	0					
ANR	1101938	ArgumentList	ip [ 1 ]		1101850	1					
ANR	1101939	Argument	ip [ 1 ]		1101850	0					
ANR	1101940	ArrayIndexing	ip [ 1 ]		1101850	0					
ANR	1101941	Identifier	ip		1101850	0					
ANR	1101942	PrimaryExpression	1		1101850	1					
ANR	1101943	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1058:5:30410:30435	1101850	2	True				
ANR	1101944	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101850	0		=			
ANR	1101945	Identifier	b2		1101850	0					
ANR	1101946	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101850	1		=			
ANR	1101947	ArrayIndexing	wp [ 2 ]		1101850	0					
ANR	1101948	Identifier	wp		1101850	0					
ANR	1101949	PrimaryExpression	2		1101850	1					
ANR	1101950	CallExpression	CLAMP ( ip [ 2 ] )		1101850	1					
ANR	1101951	Callee	CLAMP		1101850	0					
ANR	1101952	Identifier	CLAMP		1101850	0					
ANR	1101953	ArgumentList	ip [ 2 ]		1101850	1					
ANR	1101954	Argument	ip [ 2 ]		1101850	0					
ANR	1101955	ArrayIndexing	ip [ 2 ]		1101850	0					
ANR	1101956	Identifier	ip		1101850	0					
ANR	1101957	PrimaryExpression	2		1101850	1					
ANR	1101958	ExpressionStatement	n -= 3	1059:5:30442:30448	1101850	3	True				
ANR	1101959	AssignmentExpression	n -= 3		1101850	0		-=			
ANR	1101960	Identifier	n		1101850	0					
ANR	1101961	PrimaryExpression	3		1101850	1					
ANR	1101962	WhileStatement	while ( n > 0 )		1101850	4					
ANR	1101963	Condition	n > 0	1060:12:30462:30466	1101850	0	True				
ANR	1101964	RelationalExpression	n > 0		1101850	0		>			
ANR	1101965	Identifier	n		1101850	0					
ANR	1101966	PrimaryExpression	0		1101850	1					
ANR	1101967	CompoundStatement		13:19:293:293	1101850	1					
ANR	1101968	ExpressionStatement	n -= 3	1061:2:30473:30479	1101850	0	True				
ANR	1101969	AssignmentExpression	n -= 3		1101850	0		-=			
ANR	1101970	Identifier	n		1101850	0					
ANR	1101971	PrimaryExpression	3		1101850	1					
ANR	1101972	ExpressionStatement	r1 = CLAMP ( ip [ 3 ] )	1062:2:30483:30500	1101850	1	True				
ANR	1101973	AssignmentExpression	r1 = CLAMP ( ip [ 3 ] )		1101850	0		=			
ANR	1101974	Identifier	r1		1101850	0					
ANR	1101975	CallExpression	CLAMP ( ip [ 3 ] )		1101850	1					
ANR	1101976	Callee	CLAMP		1101850	0					
ANR	1101977	Identifier	CLAMP		1101850	0					
ANR	1101978	ArgumentList	ip [ 3 ]		1101850	1					
ANR	1101979	Argument	ip [ 3 ]		1101850	0					
ANR	1101980	ArrayIndexing	ip [ 3 ]		1101850	0					
ANR	1101981	Identifier	ip		1101850	0					
ANR	1101982	PrimaryExpression	3		1101850	1					
ANR	1101983	ExpressionStatement	wp [ 3 ] = ( r1 - r2 ) & mask	1062:21:30502:30524	1101850	2	True				
ANR	1101984	AssignmentExpression	wp [ 3 ] = ( r1 - r2 ) & mask		1101850	0		=			
ANR	1101985	ArrayIndexing	wp [ 3 ]		1101850	0					
ANR	1101986	Identifier	wp		1101850	0					
ANR	1101987	PrimaryExpression	3		1101850	1					
ANR	1101988	BitAndExpression	( r1 - r2 ) & mask		1101850	1		&			
ANR	1101989	AdditiveExpression	r1 - r2		1101850	0		-			
ANR	1101990	Identifier	r1		1101850	0					
ANR	1101991	Identifier	r2		1101850	1					
ANR	1101992	Identifier	mask		1101850	1					
ANR	1101993	ExpressionStatement	r2 = r1	1062:45:30526:30533	1101850	3	True				
ANR	1101994	AssignmentExpression	r2 = r1		1101850	0		=			
ANR	1101995	Identifier	r2		1101850	0					
ANR	1101996	Identifier	r1		1101850	1					
ANR	1101997	ExpressionStatement	g1 = CLAMP ( ip [ 4 ] )	1063:2:30537:30554	1101850	4	True				
ANR	1101998	AssignmentExpression	g1 = CLAMP ( ip [ 4 ] )		1101850	0		=			
ANR	1101999	Identifier	g1		1101850	0					
ANR	1102000	CallExpression	CLAMP ( ip [ 4 ] )		1101850	1					
ANR	1102001	Callee	CLAMP		1101850	0					
ANR	1102002	Identifier	CLAMP		1101850	0					
ANR	1102003	ArgumentList	ip [ 4 ]		1101850	1					
ANR	1102004	Argument	ip [ 4 ]		1101850	0					
ANR	1102005	ArrayIndexing	ip [ 4 ]		1101850	0					
ANR	1102006	Identifier	ip		1101850	0					
ANR	1102007	PrimaryExpression	4		1101850	1					
ANR	1102008	ExpressionStatement	wp [ 4 ] = ( g1 - g2 ) & mask	1063:21:30556:30578	1101850	5	True				
ANR	1102009	AssignmentExpression	wp [ 4 ] = ( g1 - g2 ) & mask		1101850	0		=			
ANR	1102010	ArrayIndexing	wp [ 4 ]		1101850	0					
ANR	1102011	Identifier	wp		1101850	0					
ANR	1102012	PrimaryExpression	4		1101850	1					
ANR	1102013	BitAndExpression	( g1 - g2 ) & mask		1101850	1		&			
ANR	1102014	AdditiveExpression	g1 - g2		1101850	0		-			
ANR	1102015	Identifier	g1		1101850	0					
ANR	1102016	Identifier	g2		1101850	1					
ANR	1102017	Identifier	mask		1101850	1					
ANR	1102018	ExpressionStatement	g2 = g1	1063:45:30580:30587	1101850	6	True				
ANR	1102019	AssignmentExpression	g2 = g1		1101850	0		=			
ANR	1102020	Identifier	g2		1101850	0					
ANR	1102021	Identifier	g1		1101850	1					
ANR	1102022	ExpressionStatement	b1 = CLAMP ( ip [ 5 ] )	1064:2:30591:30608	1101850	7	True				
ANR	1102023	AssignmentExpression	b1 = CLAMP ( ip [ 5 ] )		1101850	0		=			
ANR	1102024	Identifier	b1		1101850	0					
ANR	1102025	CallExpression	CLAMP ( ip [ 5 ] )		1101850	1					
ANR	1102026	Callee	CLAMP		1101850	0					
ANR	1102027	Identifier	CLAMP		1101850	0					
ANR	1102028	ArgumentList	ip [ 5 ]		1101850	1					
ANR	1102029	Argument	ip [ 5 ]		1101850	0					
ANR	1102030	ArrayIndexing	ip [ 5 ]		1101850	0					
ANR	1102031	Identifier	ip		1101850	0					
ANR	1102032	PrimaryExpression	5		1101850	1					
ANR	1102033	ExpressionStatement	wp [ 5 ] = ( b1 - b2 ) & mask	1064:21:30610:30632	1101850	8	True				
ANR	1102034	AssignmentExpression	wp [ 5 ] = ( b1 - b2 ) & mask		1101850	0		=			
ANR	1102035	ArrayIndexing	wp [ 5 ]		1101850	0					
ANR	1102036	Identifier	wp		1101850	0					
ANR	1102037	PrimaryExpression	5		1101850	1					
ANR	1102038	BitAndExpression	( b1 - b2 ) & mask		1101850	1		&			
ANR	1102039	AdditiveExpression	b1 - b2		1101850	0		-			
ANR	1102040	Identifier	b1		1101850	0					
ANR	1102041	Identifier	b2		1101850	1					
ANR	1102042	Identifier	mask		1101850	1					
ANR	1102043	ExpressionStatement	b2 = b1	1064:45:30634:30641	1101850	9	True				
ANR	1102044	AssignmentExpression	b2 = b1		1101850	0		=			
ANR	1102045	Identifier	b2		1101850	0					
ANR	1102046	Identifier	b1		1101850	1					
ANR	1102047	ExpressionStatement	wp += 3	1065:2:30645:30652	1101850	10	True				
ANR	1102048	AssignmentExpression	wp += 3		1101850	0		+=			
ANR	1102049	Identifier	wp		1101850	0					
ANR	1102050	PrimaryExpression	3		1101850	1					
ANR	1102051	ExpressionStatement	ip += 3	1066:2:30656:30663	1101850	11	True				
ANR	1102052	AssignmentExpression	ip += 3		1101850	0		+=			
ANR	1102053	Identifier	ip		1101850	0					
ANR	1102054	PrimaryExpression	3		1101850	1					
ANR	1102055	ElseStatement	else		1101850	0					
ANR	1102056	IfStatement	if ( stride == 4 )		1101850	0					
ANR	1102057	Condition	stride == 4	1068:12:30684:30694	1101850	0	True				
ANR	1102058	EqualityExpression	stride == 4		1101850	0		==			
ANR	1102059	Identifier	stride		1101850	0					
ANR	1102060	PrimaryExpression	4		1101850	1					
ANR	1102061	CompoundStatement		21:25:521:521	1101850	1					
ANR	1102062	ExpressionStatement	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )	1069:5:30704:30729	1101850	0	True				
ANR	1102063	AssignmentExpression	r2 = wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101850	0		=			
ANR	1102064	Identifier	r2		1101850	0					
ANR	1102065	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101850	1		=			
ANR	1102066	ArrayIndexing	wp [ 0 ]		1101850	0					
ANR	1102067	Identifier	wp		1101850	0					
ANR	1102068	PrimaryExpression	0		1101850	1					
ANR	1102069	CallExpression	CLAMP ( ip [ 0 ] )		1101850	1					
ANR	1102070	Callee	CLAMP		1101850	0					
ANR	1102071	Identifier	CLAMP		1101850	0					
ANR	1102072	ArgumentList	ip [ 0 ]		1101850	1					
ANR	1102073	Argument	ip [ 0 ]		1101850	0					
ANR	1102074	ArrayIndexing	ip [ 0 ]		1101850	0					
ANR	1102075	Identifier	ip		1101850	0					
ANR	1102076	PrimaryExpression	0		1101850	1					
ANR	1102077	ExpressionStatement	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )	1069:33:30732:30757	1101850	1	True				
ANR	1102078	AssignmentExpression	g2 = wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101850	0		=			
ANR	1102079	Identifier	g2		1101850	0					
ANR	1102080	AssignmentExpression	wp [ 1 ] = CLAMP ( ip [ 1 ] )		1101850	1		=			
ANR	1102081	ArrayIndexing	wp [ 1 ]		1101850	0					
ANR	1102082	Identifier	wp		1101850	0					
ANR	1102083	PrimaryExpression	1		1101850	1					
ANR	1102084	CallExpression	CLAMP ( ip [ 1 ] )		1101850	1					
ANR	1102085	Callee	CLAMP		1101850	0					
ANR	1102086	Identifier	CLAMP		1101850	0					
ANR	1102087	ArgumentList	ip [ 1 ]		1101850	1					
ANR	1102088	Argument	ip [ 1 ]		1101850	0					
ANR	1102089	ArrayIndexing	ip [ 1 ]		1101850	0					
ANR	1102090	Identifier	ip		1101850	0					
ANR	1102091	PrimaryExpression	1		1101850	1					
ANR	1102092	ExpressionStatement	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )	1070:5:30764:30789	1101850	2	True				
ANR	1102093	AssignmentExpression	b2 = wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101850	0		=			
ANR	1102094	Identifier	b2		1101850	0					
ANR	1102095	AssignmentExpression	wp [ 2 ] = CLAMP ( ip [ 2 ] )		1101850	1		=			
ANR	1102096	ArrayIndexing	wp [ 2 ]		1101850	0					
ANR	1102097	Identifier	wp		1101850	0					
ANR	1102098	PrimaryExpression	2		1101850	1					
ANR	1102099	CallExpression	CLAMP ( ip [ 2 ] )		1101850	1					
ANR	1102100	Callee	CLAMP		1101850	0					
ANR	1102101	Identifier	CLAMP		1101850	0					
ANR	1102102	ArgumentList	ip [ 2 ]		1101850	1					
ANR	1102103	Argument	ip [ 2 ]		1101850	0					
ANR	1102104	ArrayIndexing	ip [ 2 ]		1101850	0					
ANR	1102105	Identifier	ip		1101850	0					
ANR	1102106	PrimaryExpression	2		1101850	1					
ANR	1102107	ExpressionStatement	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )	1070:33:30792:30817	1101850	3	True				
ANR	1102108	AssignmentExpression	a2 = wp [ 3 ] = CLAMP ( ip [ 3 ] )		1101850	0		=			
ANR	1102109	Identifier	a2		1101850	0					
ANR	1102110	AssignmentExpression	wp [ 3 ] = CLAMP ( ip [ 3 ] )		1101850	1		=			
ANR	1102111	ArrayIndexing	wp [ 3 ]		1101850	0					
ANR	1102112	Identifier	wp		1101850	0					
ANR	1102113	PrimaryExpression	3		1101850	1					
ANR	1102114	CallExpression	CLAMP ( ip [ 3 ] )		1101850	1					
ANR	1102115	Callee	CLAMP		1101850	0					
ANR	1102116	Identifier	CLAMP		1101850	0					
ANR	1102117	ArgumentList	ip [ 3 ]		1101850	1					
ANR	1102118	Argument	ip [ 3 ]		1101850	0					
ANR	1102119	ArrayIndexing	ip [ 3 ]		1101850	0					
ANR	1102120	Identifier	ip		1101850	0					
ANR	1102121	PrimaryExpression	3		1101850	1					
ANR	1102122	ExpressionStatement	n -= 4	1071:5:30824:30830	1101850	4	True				
ANR	1102123	AssignmentExpression	n -= 4		1101850	0		-=			
ANR	1102124	Identifier	n		1101850	0					
ANR	1102125	PrimaryExpression	4		1101850	1					
ANR	1102126	WhileStatement	while ( n > 0 )		1101850	5					
ANR	1102127	Condition	n > 0	1072:12:30844:30848	1101850	0	True				
ANR	1102128	RelationalExpression	n > 0		1101850	0		>			
ANR	1102129	Identifier	n		1101850	0					
ANR	1102130	PrimaryExpression	0		1101850	1					
ANR	1102131	CompoundStatement		25:19:675:675	1101850	1					
ANR	1102132	ExpressionStatement	n -= 4	1073:2:30855:30861	1101850	0	True				
ANR	1102133	AssignmentExpression	n -= 4		1101850	0		-=			
ANR	1102134	Identifier	n		1101850	0					
ANR	1102135	PrimaryExpression	4		1101850	1					
ANR	1102136	ExpressionStatement	r1 = CLAMP ( ip [ 4 ] )	1074:2:30865:30882	1101850	1	True				
ANR	1102137	AssignmentExpression	r1 = CLAMP ( ip [ 4 ] )		1101850	0		=			
ANR	1102138	Identifier	r1		1101850	0					
ANR	1102139	CallExpression	CLAMP ( ip [ 4 ] )		1101850	1					
ANR	1102140	Callee	CLAMP		1101850	0					
ANR	1102141	Identifier	CLAMP		1101850	0					
ANR	1102142	ArgumentList	ip [ 4 ]		1101850	1					
ANR	1102143	Argument	ip [ 4 ]		1101850	0					
ANR	1102144	ArrayIndexing	ip [ 4 ]		1101850	0					
ANR	1102145	Identifier	ip		1101850	0					
ANR	1102146	PrimaryExpression	4		1101850	1					
ANR	1102147	ExpressionStatement	wp [ 4 ] = ( r1 - r2 ) & mask	1074:21:30884:30906	1101850	2	True				
ANR	1102148	AssignmentExpression	wp [ 4 ] = ( r1 - r2 ) & mask		1101850	0		=			
ANR	1102149	ArrayIndexing	wp [ 4 ]		1101850	0					
ANR	1102150	Identifier	wp		1101850	0					
ANR	1102151	PrimaryExpression	4		1101850	1					
ANR	1102152	BitAndExpression	( r1 - r2 ) & mask		1101850	1		&			
ANR	1102153	AdditiveExpression	r1 - r2		1101850	0		-			
ANR	1102154	Identifier	r1		1101850	0					
ANR	1102155	Identifier	r2		1101850	1					
ANR	1102156	Identifier	mask		1101850	1					
ANR	1102157	ExpressionStatement	r2 = r1	1074:45:30908:30915	1101850	3	True				
ANR	1102158	AssignmentExpression	r2 = r1		1101850	0		=			
ANR	1102159	Identifier	r2		1101850	0					
ANR	1102160	Identifier	r1		1101850	1					
ANR	1102161	ExpressionStatement	g1 = CLAMP ( ip [ 5 ] )	1075:2:30919:30936	1101850	4	True				
ANR	1102162	AssignmentExpression	g1 = CLAMP ( ip [ 5 ] )		1101850	0		=			
ANR	1102163	Identifier	g1		1101850	0					
ANR	1102164	CallExpression	CLAMP ( ip [ 5 ] )		1101850	1					
ANR	1102165	Callee	CLAMP		1101850	0					
ANR	1102166	Identifier	CLAMP		1101850	0					
ANR	1102167	ArgumentList	ip [ 5 ]		1101850	1					
ANR	1102168	Argument	ip [ 5 ]		1101850	0					
ANR	1102169	ArrayIndexing	ip [ 5 ]		1101850	0					
ANR	1102170	Identifier	ip		1101850	0					
ANR	1102171	PrimaryExpression	5		1101850	1					
ANR	1102172	ExpressionStatement	wp [ 5 ] = ( g1 - g2 ) & mask	1075:21:30938:30960	1101850	5	True				
ANR	1102173	AssignmentExpression	wp [ 5 ] = ( g1 - g2 ) & mask		1101850	0		=			
ANR	1102174	ArrayIndexing	wp [ 5 ]		1101850	0					
ANR	1102175	Identifier	wp		1101850	0					
ANR	1102176	PrimaryExpression	5		1101850	1					
ANR	1102177	BitAndExpression	( g1 - g2 ) & mask		1101850	1		&			
ANR	1102178	AdditiveExpression	g1 - g2		1101850	0		-			
ANR	1102179	Identifier	g1		1101850	0					
ANR	1102180	Identifier	g2		1101850	1					
ANR	1102181	Identifier	mask		1101850	1					
ANR	1102182	ExpressionStatement	g2 = g1	1075:45:30962:30969	1101850	6	True				
ANR	1102183	AssignmentExpression	g2 = g1		1101850	0		=			
ANR	1102184	Identifier	g2		1101850	0					
ANR	1102185	Identifier	g1		1101850	1					
ANR	1102186	ExpressionStatement	b1 = CLAMP ( ip [ 6 ] )	1076:2:30973:30990	1101850	7	True				
ANR	1102187	AssignmentExpression	b1 = CLAMP ( ip [ 6 ] )		1101850	0		=			
ANR	1102188	Identifier	b1		1101850	0					
ANR	1102189	CallExpression	CLAMP ( ip [ 6 ] )		1101850	1					
ANR	1102190	Callee	CLAMP		1101850	0					
ANR	1102191	Identifier	CLAMP		1101850	0					
ANR	1102192	ArgumentList	ip [ 6 ]		1101850	1					
ANR	1102193	Argument	ip [ 6 ]		1101850	0					
ANR	1102194	ArrayIndexing	ip [ 6 ]		1101850	0					
ANR	1102195	Identifier	ip		1101850	0					
ANR	1102196	PrimaryExpression	6		1101850	1					
ANR	1102197	ExpressionStatement	wp [ 6 ] = ( b1 - b2 ) & mask	1076:21:30992:31014	1101850	8	True				
ANR	1102198	AssignmentExpression	wp [ 6 ] = ( b1 - b2 ) & mask		1101850	0		=			
ANR	1102199	ArrayIndexing	wp [ 6 ]		1101850	0					
ANR	1102200	Identifier	wp		1101850	0					
ANR	1102201	PrimaryExpression	6		1101850	1					
ANR	1102202	BitAndExpression	( b1 - b2 ) & mask		1101850	1		&			
ANR	1102203	AdditiveExpression	b1 - b2		1101850	0		-			
ANR	1102204	Identifier	b1		1101850	0					
ANR	1102205	Identifier	b2		1101850	1					
ANR	1102206	Identifier	mask		1101850	1					
ANR	1102207	ExpressionStatement	b2 = b1	1076:45:31016:31023	1101850	9	True				
ANR	1102208	AssignmentExpression	b2 = b1		1101850	0		=			
ANR	1102209	Identifier	b2		1101850	0					
ANR	1102210	Identifier	b1		1101850	1					
ANR	1102211	ExpressionStatement	a1 = CLAMP ( ip [ 7 ] )	1077:2:31027:31044	1101850	10	True				
ANR	1102212	AssignmentExpression	a1 = CLAMP ( ip [ 7 ] )		1101850	0		=			
ANR	1102213	Identifier	a1		1101850	0					
ANR	1102214	CallExpression	CLAMP ( ip [ 7 ] )		1101850	1					
ANR	1102215	Callee	CLAMP		1101850	0					
ANR	1102216	Identifier	CLAMP		1101850	0					
ANR	1102217	ArgumentList	ip [ 7 ]		1101850	1					
ANR	1102218	Argument	ip [ 7 ]		1101850	0					
ANR	1102219	ArrayIndexing	ip [ 7 ]		1101850	0					
ANR	1102220	Identifier	ip		1101850	0					
ANR	1102221	PrimaryExpression	7		1101850	1					
ANR	1102222	ExpressionStatement	wp [ 7 ] = ( a1 - a2 ) & mask	1077:21:31046:31068	1101850	11	True				
ANR	1102223	AssignmentExpression	wp [ 7 ] = ( a1 - a2 ) & mask		1101850	0		=			
ANR	1102224	ArrayIndexing	wp [ 7 ]		1101850	0					
ANR	1102225	Identifier	wp		1101850	0					
ANR	1102226	PrimaryExpression	7		1101850	1					
ANR	1102227	BitAndExpression	( a1 - a2 ) & mask		1101850	1		&			
ANR	1102228	AdditiveExpression	a1 - a2		1101850	0		-			
ANR	1102229	Identifier	a1		1101850	0					
ANR	1102230	Identifier	a2		1101850	1					
ANR	1102231	Identifier	mask		1101850	1					
ANR	1102232	ExpressionStatement	a2 = a1	1077:45:31070:31077	1101850	12	True				
ANR	1102233	AssignmentExpression	a2 = a1		1101850	0		=			
ANR	1102234	Identifier	a2		1101850	0					
ANR	1102235	Identifier	a1		1101850	1					
ANR	1102236	ExpressionStatement	wp += 4	1078:2:31081:31088	1101850	13	True				
ANR	1102237	AssignmentExpression	wp += 4		1101850	0		+=			
ANR	1102238	Identifier	wp		1101850	0					
ANR	1102239	PrimaryExpression	4		1101850	1					
ANR	1102240	ExpressionStatement	ip += 4	1079:2:31092:31099	1101850	14	True				
ANR	1102241	AssignmentExpression	ip += 4		1101850	0		+=			
ANR	1102242	Identifier	ip		1101850	0					
ANR	1102243	PrimaryExpression	4		1101850	1					
ANR	1102244	ElseStatement	else		1101850	0					
ANR	1102245	CompoundStatement		34:8:940:940	1101850	0					
ANR	1102246	ExpressionStatement	wp += n + stride - 1	1082:5:31123:31143	1101850	0	True				
ANR	1102247	AssignmentExpression	wp += n + stride - 1		1101850	0		+=			
ANR	1102248	Identifier	wp		1101850	0					
ANR	1102249	AdditiveExpression	n + stride - 1		1101850	1		+			
ANR	1102250	Identifier	n		1101850	0					
ANR	1102251	AdditiveExpression	stride - 1		1101850	1		-			
ANR	1102252	Identifier	stride		1101850	0					
ANR	1102253	PrimaryExpression	1		1101850	1					
ANR	1102254	ExpressionStatement	ip += n + stride - 1	1083:5:31174:31194	1101850	1	True				
ANR	1102255	AssignmentExpression	ip += n + stride - 1		1101850	0		+=			
ANR	1102256	Identifier	ip		1101850	0					
ANR	1102257	AdditiveExpression	n + stride - 1		1101850	1		+			
ANR	1102258	Identifier	n		1101850	0					
ANR	1102259	AdditiveExpression	stride - 1		1101850	1		-			
ANR	1102260	Identifier	stride		1101850	0					
ANR	1102261	PrimaryExpression	1		1101850	1					
ANR	1102262	ExpressionStatement	n -= stride	1084:5:31225:31236	1101850	2	True				
ANR	1102263	AssignmentExpression	n -= stride		1101850	0		-=			
ANR	1102264	Identifier	n		1101850	0					
ANR	1102265	Identifier	stride		1101850	1					
ANR	1102266	WhileStatement	while ( n > 0 )		1101850	3					
ANR	1102267	Condition	n > 0	1085:12:31250:31254	1101850	0	True				
ANR	1102268	RelationalExpression	n > 0		1101850	0		>			
ANR	1102269	Identifier	n		1101850	0					
ANR	1102270	PrimaryExpression	0		1101850	1					
ANR	1102271	CompoundStatement		38:19:1081:1081	1101850	1					
ANR	1102272	Statement	REPEAT	1086:2:31261:31266	1101850	0	True				
ANR	1102273	Statement	(	1086:8:31267:31267	1101850	1	True				
ANR	1102274	ExpressionStatement	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"	1086:9:31268:31296	1101850	2	True				
ANR	1102275	Expression	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"		1101850	0					
ANR	1102276	Identifier	stride		1101850	0					
ANR	1102277	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101850	1		=			
ANR	1102278	ArrayIndexing	wp [ 0 ]		1101850	0					
ANR	1102279	Identifier	wp		1101850	0					
ANR	1102280	PrimaryExpression	0		1101850	1					
ANR	1102281	CallExpression	CLAMP ( ip [ 0 ] )		1101850	1					
ANR	1102282	Callee	CLAMP		1101850	0					
ANR	1102283	Identifier	CLAMP		1101850	0					
ANR	1102284	ArgumentList	ip [ 0 ]		1101850	1					
ANR	1102285	Argument	ip [ 0 ]		1101850	0					
ANR	1102286	ArrayIndexing	ip [ 0 ]		1101850	0					
ANR	1102287	Identifier	ip		1101850	0					
ANR	1102288	PrimaryExpression	0		1101850	1					
ANR	1102289	ExpressionStatement	wp [ stride ] -= wp [ 0 ]	1087:4:31302:31321	1101850	3	True				
ANR	1102290	AssignmentExpression	wp [ stride ] -= wp [ 0 ]		1101850	0		-=			
ANR	1102291	ArrayIndexing	wp [ stride ]		1101850	0					
ANR	1102292	Identifier	wp		1101850	0					
ANR	1102293	Identifier	stride		1101850	1					
ANR	1102294	ArrayIndexing	wp [ 0 ]		1101850	1					
ANR	1102295	Identifier	wp		1101850	0					
ANR	1102296	PrimaryExpression	0		1101850	1					
ANR	1102297	ExpressionStatement	wp [ stride ] &= mask	1088:4:31327:31345	1101850	4	True				
ANR	1102298	AssignmentExpression	wp [ stride ] &= mask		1101850	0		&=			
ANR	1102299	ArrayIndexing	wp [ stride ]		1101850	0					
ANR	1102300	Identifier	wp		1101850	0					
ANR	1102301	Identifier	stride		1101850	1					
ANR	1102302	Identifier	mask		1101850	1					
ANR	1102303	ExpressionStatement	wp --	1089:4:31351:31355	1101850	5	True				
ANR	1102304	PostIncDecOperationExpression	wp --		1101850	0					
ANR	1102305	Identifier	wp		1101850	0					
ANR	1102306	IncDec	--		1101850	1					
ANR	1102307	Statement	ip	1089:10:31357:31358	1101850	6	True				
ANR	1102308	Statement	--	1089:12:31359:31360	1101850	7	True				
ANR	1102309	Statement	)	1089:14:31361:31361	1101850	8	True				
ANR	1102310	ExpressionStatement	n -= stride	1090:2:31365:31376	1101850	9	True				
ANR	1102311	AssignmentExpression	n -= stride		1101850	0		-=			
ANR	1102312	Identifier	n		1101850	0					
ANR	1102313	Identifier	stride		1101850	1					
ANR	1102314	Statement	REPEAT	1092:5:31390:31395	1101850	4	True				
ANR	1102315	Statement	(	1092:11:31396:31396	1101850	5	True				
ANR	1102316	ExpressionStatement	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"	1092:12:31397:31425	1101850	6	True				
ANR	1102317	Expression	"stride , wp [ 0 ] = CLAMP ( ip [ 0 ] )"		1101850	0					
ANR	1102318	Identifier	stride		1101850	0					
ANR	1102319	AssignmentExpression	wp [ 0 ] = CLAMP ( ip [ 0 ] )		1101850	1		=			
ANR	1102320	ArrayIndexing	wp [ 0 ]		1101850	0					
ANR	1102321	Identifier	wp		1101850	0					
ANR	1102322	PrimaryExpression	0		1101850	1					
ANR	1102323	CallExpression	CLAMP ( ip [ 0 ] )		1101850	1					
ANR	1102324	Callee	CLAMP		1101850	0					
ANR	1102325	Identifier	CLAMP		1101850	0					
ANR	1102326	ArgumentList	ip [ 0 ]		1101850	1					
ANR	1102327	Argument	ip [ 0 ]		1101850	0					
ANR	1102328	ArrayIndexing	ip [ 0 ]		1101850	0					
ANR	1102329	Identifier	ip		1101850	0					
ANR	1102330	PrimaryExpression	0		1101850	1					
ANR	1102331	ExpressionStatement	wp --	1092:42:31427:31431	1101850	7	True				
ANR	1102332	PostIncDecOperationExpression	wp --		1101850	0					
ANR	1102333	Identifier	wp		1101850	0					
ANR	1102334	IncDec	--		1101850	1					
ANR	1102335	Statement	ip	1092:48:31433:31434	1101850	8	True				
ANR	1102336	Statement	--	1092:50:31435:31436	1101850	9	True				
ANR	1102337	Statement	)	1092:52:31437:31437	1101850	10	True				
ANR	1102338	ReturnType	static void		1101850	1					
ANR	1102339	Identifier	horizontalDifference8		1101850	2					
ANR	1102340	ParameterList	"unsigned char * ip , int n , int stride , unsigned short * wp , uint16 * From8"		1101850	3					
ANR	1102341	Parameter	unsigned char * ip	1046:22:30100:30116	1101850	0	True				
ANR	1102342	ParameterType	unsigned char *		1101850	0					
ANR	1102343	Identifier	ip		1101850	1					
ANR	1102344	Parameter	int n	1046:41:30119:30123	1101850	1	True				
ANR	1102345	ParameterType	int		1101850	0					
ANR	1102346	Identifier	n		1101850	1					
ANR	1102347	Parameter	int stride	1046:48:30126:30135	1101850	2	True				
ANR	1102348	ParameterType	int		1101850	0					
ANR	1102349	Identifier	stride		1101850	1					
ANR	1102350	Parameter	unsigned short * wp	1047:1:30140:30157	1101850	3	True				
ANR	1102351	ParameterType	unsigned short *		1101850	0					
ANR	1102352	Identifier	wp		1101850	1					
ANR	1102353	Parameter	uint16 * From8	1047:21:30160:30172	1101850	4	True				
ANR	1102354	ParameterType	uint16 *		1101850	0					
ANR	1102355	Identifier	From8		1101850	1					
ANR	1102356	CFGEntryNode	ENTRY		1101850		True				
ANR	1102357	CFGExitNode	EXIT		1101850		True				
ANR	1102358	Symbol	r2		1101850						
ANR	1102359	Symbol	From8		1101850						
ANR	1102360	Symbol	* stride		1101850						
ANR	1102361	Symbol	ip		1101850						
ANR	1102362	Symbol	CLAMP		1101850						
ANR	1102363	Symbol	g1		1101850						
ANR	1102364	Symbol	g2		1101850						
ANR	1102365	Symbol	stride		1101850						
ANR	1102366	Symbol	n		1101850						
ANR	1102367	Symbol	* ip		1101850						
ANR	1102368	Symbol	b1		1101850						
ANR	1102369	Symbol	b2		1101850						
ANR	1102370	Symbol	a1		1101850						
ANR	1102371	Symbol	a2		1101850						
ANR	1102372	Symbol	CODE_MASK		1101850						
ANR	1102373	Symbol	wp		1101850						
ANR	1102374	Symbol	* wp		1101850						
ANR	1102375	Symbol	mask		1101850						
ANR	1102376	Symbol	r1		1101850						
ANR	1102377	Function	PixarLogEncode	1100:0:31487:34040							
ANR	1102378	FunctionDef	"PixarLogEncode (TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s)"		1102377	0					
ANR	1102379	CompoundStatement		1102:0:31558:34040	1102377	0					
ANR	1102380	Statement	static	1103:1:31561:31566	1102377	0	True				
ANR	1102381	IdentifierDeclStatement	"const char module [ ] = ""PixarLogEncode"" ;"	1103:8:31568:31606	1102377	1	True				
ANR	1102382	IdentifierDecl	"module [ ] = ""PixarLogEncode"""		1102377	0					
ANR	1102383	IdentifierDeclType	const char [ ]		1102377	0					
ANR	1102384	Identifier	module		1102377	1					
ANR	1102385	AssignmentExpression	"module [ ] = ""PixarLogEncode"""		1102377	2		=			
ANR	1102386	Identifier	module		1102377	0					
ANR	1102387	PrimaryExpression	"""PixarLogEncode"""		1102377	1					
ANR	1102388	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1104:1:31609:31642	1102377	2	True				
ANR	1102389	IdentifierDecl	* td = & tif -> tif_dir		1102377	0					
ANR	1102390	IdentifierDeclType	TIFFDirectory *		1102377	0					
ANR	1102391	Identifier	td		1102377	1					
ANR	1102392	AssignmentExpression	* td = & tif -> tif_dir		1102377	2		=			
ANR	1102393	Identifier	td		1102377	0					
ANR	1102394	UnaryOperationExpression	& tif -> tif_dir		1102377	1					
ANR	1102395	UnaryOperator	&		1102377	0					
ANR	1102396	PtrMemberAccess	tif -> tif_dir		1102377	1					
ANR	1102397	Identifier	tif		1102377	0					
ANR	1102398	Identifier	tif_dir		1102377	1					
ANR	1102399	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	1105:1:31645:31682	1102377	3	True				
ANR	1102400	IdentifierDecl	* sp = EncoderState ( tif )		1102377	0					
ANR	1102401	IdentifierDeclType	PixarLogState *		1102377	0					
ANR	1102402	Identifier	sp		1102377	1					
ANR	1102403	AssignmentExpression	* sp = EncoderState ( tif )		1102377	2		=			
ANR	1102404	Identifier	sp		1102377	0					
ANR	1102405	CallExpression	EncoderState ( tif )		1102377	1					
ANR	1102406	Callee	EncoderState		1102377	0					
ANR	1102407	Identifier	EncoderState		1102377	0					
ANR	1102408	ArgumentList	tif		1102377	1					
ANR	1102409	Argument	tif		1102377	0					
ANR	1102410	Identifier	tif		1102377	0					
ANR	1102411	IdentifierDeclStatement	tmsize_t i ;	1106:1:31685:31695	1102377	4	True				
ANR	1102412	IdentifierDecl	i		1102377	0					
ANR	1102413	IdentifierDeclType	tmsize_t		1102377	0					
ANR	1102414	Identifier	i		1102377	1					
ANR	1102415	IdentifierDeclStatement	tmsize_t n ;	1107:1:31698:31708	1102377	5	True				
ANR	1102416	IdentifierDecl	n		1102377	0					
ANR	1102417	IdentifierDeclType	tmsize_t		1102377	0					
ANR	1102418	Identifier	n		1102377	1					
ANR	1102419	IdentifierDeclStatement	int llen ;	1108:1:31711:31719	1102377	6	True				
ANR	1102420	IdentifierDecl	llen		1102377	0					
ANR	1102421	IdentifierDeclType	int		1102377	0					
ANR	1102422	Identifier	llen		1102377	1					
ANR	1102423	IdentifierDeclStatement	unsigned short * up ;	1109:1:31722:31741	1102377	7	True				
ANR	1102424	IdentifierDecl	* up		1102377	0					
ANR	1102425	IdentifierDeclType	unsigned short *		1102377	0					
ANR	1102426	Identifier	up		1102377	1					
ANR	1102427	ExpressionStatement	( void ) s	1111:1:31745:31753	1102377	8	True				
ANR	1102428	CastExpression	( void ) s		1102377	0					
ANR	1102429	CastTarget	void		1102377	0					
ANR	1102430	Identifier	s		1102377	1					
ANR	1102431	SwitchStatement	switch ( sp -> user_datafmt )		1102377	9					
ANR	1102432	Condition	sp -> user_datafmt	1113:9:31765:31780	1102377	0	True				
ANR	1102433	PtrMemberAccess	sp -> user_datafmt		1102377	0					
ANR	1102434	Identifier	sp		1102377	0					
ANR	1102435	Identifier	user_datafmt		1102377	1					
ANR	1102436	CompoundStatement		12:27:224:224	1102377	1					
ANR	1102437	Label	case PIXARLOGDATAFMT_FLOAT :	1114:1:31786:31812	1102377	0	True				
ANR	1102438	Identifier	PIXARLOGDATAFMT_FLOAT		1102377	0					
ANR	1102439	ExpressionStatement	n = cc / sizeof ( float )	1115:2:31816:31838	1102377	1	True				
ANR	1102440	AssignmentExpression	n = cc / sizeof ( float )		1102377	0		=			
ANR	1102441	Identifier	n		1102377	0					
ANR	1102442	MultiplicativeExpression	cc / sizeof ( float )		1102377	1		/			
ANR	1102443	Identifier	cc		1102377	0					
ANR	1102444	SizeofExpression	sizeof ( float )		1102377	1					
ANR	1102445	Sizeof	sizeof		1102377	0					
ANR	1102446	SizeofOperand	float		1102377	1					
ANR	1102447	BreakStatement	break ;	1116:2:31870:31875	1102377	2	True				
ANR	1102448	Label	case PIXARLOGDATAFMT_16BIT :	1117:1:31878:31904	1102377	3	True				
ANR	1102449	Identifier	PIXARLOGDATAFMT_16BIT		1102377	0					
ANR	1102450	Label	case PIXARLOGDATAFMT_12BITPICIO :	1118:1:31907:31938	1102377	4	True				
ANR	1102451	Identifier	PIXARLOGDATAFMT_12BITPICIO		1102377	0					
ANR	1102452	Label	case PIXARLOGDATAFMT_11BITLOG :	1119:1:31941:31970	1102377	5	True				
ANR	1102453	Identifier	PIXARLOGDATAFMT_11BITLOG		1102377	0					
ANR	1102454	ExpressionStatement	n = cc / sizeof ( uint16 )	1120:2:31974:31997	1102377	6	True				
ANR	1102455	AssignmentExpression	n = cc / sizeof ( uint16 )		1102377	0		=			
ANR	1102456	Identifier	n		1102377	0					
ANR	1102457	MultiplicativeExpression	cc / sizeof ( uint16 )		1102377	1		/			
ANR	1102458	Identifier	cc		1102377	0					
ANR	1102459	SizeofExpression	sizeof ( uint16 )		1102377	1					
ANR	1102460	Sizeof	sizeof		1102377	0					
ANR	1102461	SizeofOperand	uint16		1102377	1					
ANR	1102462	BreakStatement	break ;	1121:2:32029:32034	1102377	7	True				
ANR	1102463	Label	case PIXARLOGDATAFMT_8BIT :	1122:1:32037:32062	1102377	8	True				
ANR	1102464	Identifier	PIXARLOGDATAFMT_8BIT		1102377	0					
ANR	1102465	Label	case PIXARLOGDATAFMT_8BITABGR :	1123:1:32065:32094	1102377	9	True				
ANR	1102466	Identifier	PIXARLOGDATAFMT_8BITABGR		1102377	0					
ANR	1102467	ExpressionStatement	n = cc	1124:2:32098:32104	1102377	10	True				
ANR	1102468	AssignmentExpression	n = cc		1102377	0		=			
ANR	1102469	Identifier	n		1102377	0					
ANR	1102470	Identifier	cc		1102377	1					
ANR	1102471	BreakStatement	break ;	1125:2:32108:32113	1102377	11	True				
ANR	1102472	Label	default :	1126:1:32116:32123	1102377	12	True				
ANR	1102473	Identifier	default		1102377	0					
ANR	1102474	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"	1127:2:32127:32238	1102377	13	True				
ANR	1102475	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"		1102377	0					
ANR	1102476	Callee	TIFFErrorExt		1102377	0					
ANR	1102477	Identifier	TIFFErrorExt		1102377	0					
ANR	1102478	ArgumentList	tif -> tif_clientdata		1102377	1					
ANR	1102479	Argument	tif -> tif_clientdata		1102377	0					
ANR	1102480	PtrMemberAccess	tif -> tif_clientdata		1102377	0					
ANR	1102481	Identifier	tif		1102377	0					
ANR	1102482	Identifier	tif_clientdata		1102377	1					
ANR	1102483	Argument	module		1102377	1					
ANR	1102484	Identifier	module		1102377	0					
ANR	1102485	Argument	"""%d bit input not supported in PixarLog"""		1102377	2					
ANR	1102486	PrimaryExpression	"""%d bit input not supported in PixarLog"""		1102377	0					
ANR	1102487	Argument	td -> td_bitspersample		1102377	3					
ANR	1102488	PtrMemberAccess	td -> td_bitspersample		1102377	0					
ANR	1102489	Identifier	td		1102377	0					
ANR	1102490	Identifier	td_bitspersample		1102377	1					
ANR	1102491	ReturnStatement	return 0 ;	1130:2:32242:32250	1102377	14	True				
ANR	1102492	PrimaryExpression	0		1102377	0					
ANR	1102493	ExpressionStatement	llen = sp -> stride * td -> td_imagewidth	1133:1:32257:32294	1102377	10	True				
ANR	1102494	AssignmentExpression	llen = sp -> stride * td -> td_imagewidth		1102377	0		=			
ANR	1102495	Identifier	llen		1102377	0					
ANR	1102496	MultiplicativeExpression	sp -> stride * td -> td_imagewidth		1102377	1		*			
ANR	1102497	PtrMemberAccess	sp -> stride		1102377	0					
ANR	1102498	Identifier	sp		1102377	0					
ANR	1102499	Identifier	stride		1102377	1					
ANR	1102500	PtrMemberAccess	td -> td_imagewidth		1102377	1					
ANR	1102501	Identifier	td		1102377	0					
ANR	1102502	Identifier	td_imagewidth		1102377	1					
ANR	1102503	ForStatement	"for ( i = 0 , up = sp -> tbuf ; i < n ; i += llen , up += llen )"		1102377	11					
ANR	1102504	ForInit	"i = 0 , up = sp -> tbuf ;"	1135:6:32303:32323	1102377	0	True				
ANR	1102505	Expression	"i = 0 , up = sp -> tbuf"		1102377	0					
ANR	1102506	AssignmentExpression	i = 0		1102377	0		=			
ANR	1102507	Identifier	i		1102377	0					
ANR	1102508	PrimaryExpression	0		1102377	1					
ANR	1102509	AssignmentExpression	up = sp -> tbuf		1102377	1		=			
ANR	1102510	Identifier	up		1102377	0					
ANR	1102511	PtrMemberAccess	sp -> tbuf		1102377	1					
ANR	1102512	Identifier	sp		1102377	0					
ANR	1102513	Identifier	tbuf		1102377	1					
ANR	1102514	Condition	i < n	1135:28:32325:32329	1102377	1	True				
ANR	1102515	RelationalExpression	i < n		1102377	0		<			
ANR	1102516	Identifier	i		1102377	0					
ANR	1102517	Identifier	n		1102377	1					
ANR	1102518	Expression	"i += llen , up += llen"	1135:35:32332:32352	1102377	2	True				
ANR	1102519	AssignmentExpression	i += llen		1102377	0		+=			
ANR	1102520	Identifier	i		1102377	0					
ANR	1102521	Identifier	llen		1102377	1					
ANR	1102522	AssignmentExpression	up += llen		1102377	1		+=			
ANR	1102523	Identifier	up		1102377	0					
ANR	1102524	Identifier	llen		1102377	1					
ANR	1102525	CompoundStatement		34:58:796:796	1102377	3					
ANR	1102526	SwitchStatement	switch ( sp -> user_datafmt )		1102377	0					
ANR	1102527	Condition	sp -> user_datafmt	1136:10:32367:32382	1102377	0	True				
ANR	1102528	PtrMemberAccess	sp -> user_datafmt		1102377	0					
ANR	1102529	Identifier	sp		1102377	0					
ANR	1102530	Identifier	user_datafmt		1102377	1					
ANR	1102531	CompoundStatement		35:29:827:827	1102377	1					
ANR	1102532	Label	case PIXARLOGDATAFMT_FLOAT :	1137:2:32390:32416	1102377	0	True				
ANR	1102533	Identifier	PIXARLOGDATAFMT_FLOAT		1102377	0					
ANR	1102534	ExpressionStatement	"horizontalDifferenceF ( ( float * ) bp , llen , sp -> stride , up , sp -> FromLT2 )"	1138:3:32421:32495	1102377	1	True				
ANR	1102535	CallExpression	"horizontalDifferenceF ( ( float * ) bp , llen , sp -> stride , up , sp -> FromLT2 )"		1102377	0					
ANR	1102536	Callee	horizontalDifferenceF		1102377	0					
ANR	1102537	Identifier	horizontalDifferenceF		1102377	0					
ANR	1102538	ArgumentList	( float * ) bp		1102377	1					
ANR	1102539	Argument	( float * ) bp		1102377	0					
ANR	1102540	CastExpression	( float * ) bp		1102377	0					
ANR	1102541	CastTarget	float *		1102377	0					
ANR	1102542	Identifier	bp		1102377	1					
ANR	1102543	Argument	llen		1102377	1					
ANR	1102544	Identifier	llen		1102377	0					
ANR	1102545	Argument	sp -> stride		1102377	2					
ANR	1102546	PtrMemberAccess	sp -> stride		1102377	0					
ANR	1102547	Identifier	sp		1102377	0					
ANR	1102548	Identifier	stride		1102377	1					
ANR	1102549	Argument	up		1102377	3					
ANR	1102550	Identifier	up		1102377	0					
ANR	1102551	Argument	sp -> FromLT2		1102377	4					
ANR	1102552	PtrMemberAccess	sp -> FromLT2		1102377	0					
ANR	1102553	Identifier	sp		1102377	0					
ANR	1102554	Identifier	FromLT2		1102377	1					
ANR	1102555	ExpressionStatement	bp += llen * sizeof ( float )	1140:3:32500:32526	1102377	2	True				
ANR	1102556	AssignmentExpression	bp += llen * sizeof ( float )		1102377	0		+=			
ANR	1102557	Identifier	bp		1102377	0					
ANR	1102558	MultiplicativeExpression	llen * sizeof ( float )		1102377	1		*			
ANR	1102559	Identifier	llen		1102377	0					
ANR	1102560	SizeofExpression	sizeof ( float )		1102377	1					
ANR	1102561	Sizeof	sizeof		1102377	0					
ANR	1102562	SizeofOperand	float		1102377	1					
ANR	1102563	BreakStatement	break ;	1141:3:32531:32536	1102377	3	True				
ANR	1102564	Label	case PIXARLOGDATAFMT_16BIT :	1142:2:32540:32566	1102377	4	True				
ANR	1102565	Identifier	PIXARLOGDATAFMT_16BIT		1102377	0					
ANR	1102566	ExpressionStatement	"horizontalDifference16 ( ( uint16 * ) bp , llen , sp -> stride , up , sp -> From14 )"	1143:3:32571:32646	1102377	5	True				
ANR	1102567	CallExpression	"horizontalDifference16 ( ( uint16 * ) bp , llen , sp -> stride , up , sp -> From14 )"		1102377	0					
ANR	1102568	Callee	horizontalDifference16		1102377	0					
ANR	1102569	Identifier	horizontalDifference16		1102377	0					
ANR	1102570	ArgumentList	( uint16 * ) bp		1102377	1					
ANR	1102571	Argument	( uint16 * ) bp		1102377	0					
ANR	1102572	CastExpression	( uint16 * ) bp		1102377	0					
ANR	1102573	CastTarget	uint16 *		1102377	0					
ANR	1102574	Identifier	bp		1102377	1					
ANR	1102575	Argument	llen		1102377	1					
ANR	1102576	Identifier	llen		1102377	0					
ANR	1102577	Argument	sp -> stride		1102377	2					
ANR	1102578	PtrMemberAccess	sp -> stride		1102377	0					
ANR	1102579	Identifier	sp		1102377	0					
ANR	1102580	Identifier	stride		1102377	1					
ANR	1102581	Argument	up		1102377	3					
ANR	1102582	Identifier	up		1102377	0					
ANR	1102583	Argument	sp -> From14		1102377	4					
ANR	1102584	PtrMemberAccess	sp -> From14		1102377	0					
ANR	1102585	Identifier	sp		1102377	0					
ANR	1102586	Identifier	From14		1102377	1					
ANR	1102587	ExpressionStatement	bp += llen * sizeof ( uint16 )	1145:3:32651:32678	1102377	6	True				
ANR	1102588	AssignmentExpression	bp += llen * sizeof ( uint16 )		1102377	0		+=			
ANR	1102589	Identifier	bp		1102377	0					
ANR	1102590	MultiplicativeExpression	llen * sizeof ( uint16 )		1102377	1		*			
ANR	1102591	Identifier	llen		1102377	0					
ANR	1102592	SizeofExpression	sizeof ( uint16 )		1102377	1					
ANR	1102593	Sizeof	sizeof		1102377	0					
ANR	1102594	SizeofOperand	uint16		1102377	1					
ANR	1102595	BreakStatement	break ;	1146:3:32683:32688	1102377	7	True				
ANR	1102596	Label	case PIXARLOGDATAFMT_8BIT :	1147:2:32692:32717	1102377	8	True				
ANR	1102597	Identifier	PIXARLOGDATAFMT_8BIT		1102377	0					
ANR	1102598	ExpressionStatement	"horizontalDifference8 ( ( unsigned char * ) bp , llen , sp -> stride , up , sp -> From8 )"	1148:3:32722:32802	1102377	9	True				
ANR	1102599	CallExpression	"horizontalDifference8 ( ( unsigned char * ) bp , llen , sp -> stride , up , sp -> From8 )"		1102377	0					
ANR	1102600	Callee	horizontalDifference8		1102377	0					
ANR	1102601	Identifier	horizontalDifference8		1102377	0					
ANR	1102602	ArgumentList	( unsigned char * ) bp		1102377	1					
ANR	1102603	Argument	( unsigned char * ) bp		1102377	0					
ANR	1102604	CastExpression	( unsigned char * ) bp		1102377	0					
ANR	1102605	CastTarget	unsigned char *		1102377	0					
ANR	1102606	Identifier	bp		1102377	1					
ANR	1102607	Argument	llen		1102377	1					
ANR	1102608	Identifier	llen		1102377	0					
ANR	1102609	Argument	sp -> stride		1102377	2					
ANR	1102610	PtrMemberAccess	sp -> stride		1102377	0					
ANR	1102611	Identifier	sp		1102377	0					
ANR	1102612	Identifier	stride		1102377	1					
ANR	1102613	Argument	up		1102377	3					
ANR	1102614	Identifier	up		1102377	0					
ANR	1102615	Argument	sp -> From8		1102377	4					
ANR	1102616	PtrMemberAccess	sp -> From8		1102377	0					
ANR	1102617	Identifier	sp		1102377	0					
ANR	1102618	Identifier	From8		1102377	1					
ANR	1102619	ExpressionStatement	bp += llen * sizeof ( unsigned char )	1150:3:32807:32841	1102377	10	True				
ANR	1102620	AssignmentExpression	bp += llen * sizeof ( unsigned char )		1102377	0		+=			
ANR	1102621	Identifier	bp		1102377	0					
ANR	1102622	MultiplicativeExpression	llen * sizeof ( unsigned char )		1102377	1		*			
ANR	1102623	Identifier	llen		1102377	0					
ANR	1102624	SizeofExpression	sizeof ( unsigned char )		1102377	1					
ANR	1102625	Sizeof	sizeof		1102377	0					
ANR	1102626	SizeofOperand	unsigned char		1102377	1					
ANR	1102627	BreakStatement	break ;	1151:3:32846:32851	1102377	11	True				
ANR	1102628	Label	default :	1152:2:32855:32862	1102377	12	True				
ANR	1102629	Identifier	default		1102377	0					
ANR	1102630	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"	1153:3:32867:32980	1102377	13	True				
ANR	1102631	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""%d bit input not supported in PixarLog"" , td -> td_bitspersample )"		1102377	0					
ANR	1102632	Callee	TIFFErrorExt		1102377	0					
ANR	1102633	Identifier	TIFFErrorExt		1102377	0					
ANR	1102634	ArgumentList	tif -> tif_clientdata		1102377	1					
ANR	1102635	Argument	tif -> tif_clientdata		1102377	0					
ANR	1102636	PtrMemberAccess	tif -> tif_clientdata		1102377	0					
ANR	1102637	Identifier	tif		1102377	0					
ANR	1102638	Identifier	tif_clientdata		1102377	1					
ANR	1102639	Argument	module		1102377	1					
ANR	1102640	Identifier	module		1102377	0					
ANR	1102641	Argument	"""%d bit input not supported in PixarLog"""		1102377	2					
ANR	1102642	PrimaryExpression	"""%d bit input not supported in PixarLog"""		1102377	0					
ANR	1102643	Argument	td -> td_bitspersample		1102377	3					
ANR	1102644	PtrMemberAccess	td -> td_bitspersample		1102377	0					
ANR	1102645	Identifier	td		1102377	0					
ANR	1102646	Identifier	td_bitspersample		1102377	1					
ANR	1102647	ReturnStatement	return 0 ;	1156:3:32985:32993	1102377	14	True				
ANR	1102648	PrimaryExpression	0		1102377	0					
ANR	1102649	ExpressionStatement	sp -> stream . next_in = ( unsigned char * ) sp -> tbuf	1160:1:33005:33052	1102377	12	True				
ANR	1102650	AssignmentExpression	sp -> stream . next_in = ( unsigned char * ) sp -> tbuf		1102377	0		=			
ANR	1102651	MemberAccess	sp -> stream . next_in		1102377	0					
ANR	1102652	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102653	Identifier	sp		1102377	0					
ANR	1102654	Identifier	stream		1102377	1					
ANR	1102655	Identifier	next_in		1102377	1					
ANR	1102656	CastExpression	( unsigned char * ) sp -> tbuf		1102377	1					
ANR	1102657	CastTarget	unsigned char *		1102377	0					
ANR	1102658	PtrMemberAccess	sp -> tbuf		1102377	1					
ANR	1102659	Identifier	sp		1102377	0					
ANR	1102660	Identifier	tbuf		1102377	1					
ANR	1102661	ExpressionStatement	assert ( sizeof ( sp -> stream . avail_in ) == 4 )	1161:1:33055:33093	1102377	13	True				
ANR	1102662	CallExpression	assert ( sizeof ( sp -> stream . avail_in ) == 4 )		1102377	0					
ANR	1102663	Callee	assert		1102377	0					
ANR	1102664	Identifier	assert		1102377	0					
ANR	1102665	ArgumentList	sizeof ( sp -> stream . avail_in ) == 4		1102377	1					
ANR	1102666	Argument	sizeof ( sp -> stream . avail_in ) == 4		1102377	0					
ANR	1102667	EqualityExpression	sizeof ( sp -> stream . avail_in ) == 4		1102377	0		==			
ANR	1102668	SizeofExpression	sizeof ( sp -> stream . avail_in )		1102377	0					
ANR	1102669	Sizeof	sizeof		1102377	0					
ANR	1102670	MemberAccess	sp -> stream . avail_in		1102377	1					
ANR	1102671	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102672	Identifier	sp		1102377	0					
ANR	1102673	Identifier	stream		1102377	1					
ANR	1102674	Identifier	avail_in		1102377	1					
ANR	1102675	PrimaryExpression	4		1102377	1					
ANR	1102676	ExpressionStatement	sp -> stream . avail_in = ( uInt ) ( n * sizeof ( uint16 ) )	1165:1:33320:33369	1102377	14	True				
ANR	1102677	AssignmentExpression	sp -> stream . avail_in = ( uInt ) ( n * sizeof ( uint16 ) )		1102377	0		=			
ANR	1102678	MemberAccess	sp -> stream . avail_in		1102377	0					
ANR	1102679	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102680	Identifier	sp		1102377	0					
ANR	1102681	Identifier	stream		1102377	1					
ANR	1102682	Identifier	avail_in		1102377	1					
ANR	1102683	CastExpression	( uInt ) ( n * sizeof ( uint16 ) )		1102377	1					
ANR	1102684	CastTarget	uInt		1102377	0					
ANR	1102685	MultiplicativeExpression	n * sizeof ( uint16 )		1102377	1		*			
ANR	1102686	Identifier	n		1102377	0					
ANR	1102687	SizeofExpression	sizeof ( uint16 )		1102377	1					
ANR	1102688	Sizeof	sizeof		1102377	0					
ANR	1102689	SizeofOperand	uint16		1102377	1					
ANR	1102690	IfStatement	if ( ( sp -> stream . avail_in / sizeof ( uint16 ) ) != ( uInt ) n )		1102377	15					
ANR	1102691	Condition	( sp -> stream . avail_in / sizeof ( uint16 ) ) != ( uInt ) n	1166:5:33376:33425	1102377	0	True				
ANR	1102692	EqualityExpression	( sp -> stream . avail_in / sizeof ( uint16 ) ) != ( uInt ) n		1102377	0		!=			
ANR	1102693	MultiplicativeExpression	sp -> stream . avail_in / sizeof ( uint16 )		1102377	0		/			
ANR	1102694	MemberAccess	sp -> stream . avail_in		1102377	0					
ANR	1102695	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102696	Identifier	sp		1102377	0					
ANR	1102697	Identifier	stream		1102377	1					
ANR	1102698	Identifier	avail_in		1102377	1					
ANR	1102699	SizeofExpression	sizeof ( uint16 )		1102377	1					
ANR	1102700	Sizeof	sizeof		1102377	0					
ANR	1102701	SizeofOperand	uint16		1102377	1					
ANR	1102702	CastExpression	( uInt ) n		1102377	1					
ANR	1102703	CastTarget	uInt		1102377	0					
ANR	1102704	Identifier	n		1102377	1					
ANR	1102705	CompoundStatement		66:1:1870:1870	1102377	1					
ANR	1102706	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"	1168:2:33433:33525	1102377	0	True				
ANR	1102707	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib cannot deal with buffers this size"" )"		1102377	0					
ANR	1102708	Callee	TIFFErrorExt		1102377	0					
ANR	1102709	Identifier	TIFFErrorExt		1102377	0					
ANR	1102710	ArgumentList	tif -> tif_clientdata		1102377	1					
ANR	1102711	Argument	tif -> tif_clientdata		1102377	0					
ANR	1102712	PtrMemberAccess	tif -> tif_clientdata		1102377	0					
ANR	1102713	Identifier	tif		1102377	0					
ANR	1102714	Identifier	tif_clientdata		1102377	1					
ANR	1102715	Argument	module		1102377	1					
ANR	1102716	Identifier	module		1102377	0					
ANR	1102717	Argument	"""ZLib cannot deal with buffers this size"""		1102377	2					
ANR	1102718	PrimaryExpression	"""ZLib cannot deal with buffers this size"""		1102377	0					
ANR	1102719	ReturnStatement	return ( 0 ) ;	1170:2:33529:33539	1102377	1	True				
ANR	1102720	PrimaryExpression	0		1102377	0					
ANR	1102721	DoStatement	do		1102377	16					
ANR	1102722	CompoundStatement		72:4:1990:1990	1102377	0					
ANR	1102723	IfStatement	"if ( deflate ( & sp -> stream , Z_NO_FLUSH ) != Z_OK )"		1102377	0					
ANR	1102724	Condition	"deflate ( & sp -> stream , Z_NO_FLUSH ) != Z_OK"	1174:6:33557:33596	1102377	0	True				
ANR	1102725	EqualityExpression	"deflate ( & sp -> stream , Z_NO_FLUSH ) != Z_OK"		1102377	0		!=			
ANR	1102726	CallExpression	"deflate ( & sp -> stream , Z_NO_FLUSH )"		1102377	0					
ANR	1102727	Callee	deflate		1102377	0					
ANR	1102728	Identifier	deflate		1102377	0					
ANR	1102729	ArgumentList	& sp -> stream		1102377	1					
ANR	1102730	Argument	& sp -> stream		1102377	0					
ANR	1102731	UnaryOperationExpression	& sp -> stream		1102377	0					
ANR	1102732	UnaryOperator	&		1102377	0					
ANR	1102733	PtrMemberAccess	sp -> stream		1102377	1					
ANR	1102734	Identifier	sp		1102377	0					
ANR	1102735	Identifier	stream		1102377	1					
ANR	1102736	Argument	Z_NO_FLUSH		1102377	1					
ANR	1102737	Identifier	Z_NO_FLUSH		1102377	0					
ANR	1102738	Identifier	Z_OK		1102377	1					
ANR	1102739	CompoundStatement		73:48:2040:2040	1102377	1					
ANR	1102740	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Encoder error: %s"" , sp -> stream . msg )"	1175:3:33604:33689	1102377	0	True				
ANR	1102741	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Encoder error: %s"" , sp -> stream . msg )"		1102377	0					
ANR	1102742	Callee	TIFFErrorExt		1102377	0					
ANR	1102743	Identifier	TIFFErrorExt		1102377	0					
ANR	1102744	ArgumentList	tif -> tif_clientdata		1102377	1					
ANR	1102745	Argument	tif -> tif_clientdata		1102377	0					
ANR	1102746	PtrMemberAccess	tif -> tif_clientdata		1102377	0					
ANR	1102747	Identifier	tif		1102377	0					
ANR	1102748	Identifier	tif_clientdata		1102377	1					
ANR	1102749	Argument	module		1102377	1					
ANR	1102750	Identifier	module		1102377	0					
ANR	1102751	Argument	"""Encoder error: %s"""		1102377	2					
ANR	1102752	PrimaryExpression	"""Encoder error: %s"""		1102377	0					
ANR	1102753	Argument	sp -> stream . msg		1102377	3					
ANR	1102754	MemberAccess	sp -> stream . msg		1102377	0					
ANR	1102755	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102756	Identifier	sp		1102377	0					
ANR	1102757	Identifier	stream		1102377	1					
ANR	1102758	Identifier	msg		1102377	1					
ANR	1102759	ReturnStatement	return ( 0 ) ;	1177:3:33694:33704	1102377	1	True				
ANR	1102760	PrimaryExpression	0		1102377	0					
ANR	1102761	IfStatement	if ( sp -> stream . avail_out == 0 )		1102377	1					
ANR	1102762	Condition	sp -> stream . avail_out == 0	1179:6:33716:33740	1102377	0	True				
ANR	1102763	EqualityExpression	sp -> stream . avail_out == 0		1102377	0		==			
ANR	1102764	MemberAccess	sp -> stream . avail_out		1102377	0					
ANR	1102765	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102766	Identifier	sp		1102377	0					
ANR	1102767	Identifier	stream		1102377	1					
ANR	1102768	Identifier	avail_out		1102377	1					
ANR	1102769	PrimaryExpression	0		1102377	1					
ANR	1102770	CompoundStatement		78:33:2184:2184	1102377	1					
ANR	1102771	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize	1180:3:33748:33785	1102377	0	True				
ANR	1102772	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize		1102377	0		=			
ANR	1102773	PtrMemberAccess	tif -> tif_rawcc		1102377	0					
ANR	1102774	Identifier	tif		1102377	0					
ANR	1102775	Identifier	tif_rawcc		1102377	1					
ANR	1102776	PtrMemberAccess	tif -> tif_rawdatasize		1102377	1					
ANR	1102777	Identifier	tif		1102377	0					
ANR	1102778	Identifier	tif_rawdatasize		1102377	1					
ANR	1102779	ExpressionStatement	TIFFFlushData1 ( tif )	1181:3:33790:33809	1102377	1	True				
ANR	1102780	CallExpression	TIFFFlushData1 ( tif )		1102377	0					
ANR	1102781	Callee	TIFFFlushData1		1102377	0					
ANR	1102782	Identifier	TIFFFlushData1		1102377	0					
ANR	1102783	ArgumentList	tif		1102377	1					
ANR	1102784	Argument	tif		1102377	0					
ANR	1102785	Identifier	tif		1102377	0					
ANR	1102786	ExpressionStatement	sp -> stream . next_out = tif -> tif_rawdata	1182:3:33814:33852	1102377	2	True				
ANR	1102787	AssignmentExpression	sp -> stream . next_out = tif -> tif_rawdata		1102377	0		=			
ANR	1102788	MemberAccess	sp -> stream . next_out		1102377	0					
ANR	1102789	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102790	Identifier	sp		1102377	0					
ANR	1102791	Identifier	stream		1102377	1					
ANR	1102792	Identifier	next_out		1102377	1					
ANR	1102793	PtrMemberAccess	tif -> tif_rawdata		1102377	1					
ANR	1102794	Identifier	tif		1102377	0					
ANR	1102795	Identifier	tif_rawdata		1102377	1					
ANR	1102796	ExpressionStatement	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize	1183:3:33857:33907	1102377	3	True				
ANR	1102797	AssignmentExpression	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize		1102377	0		=			
ANR	1102798	MemberAccess	sp -> stream . avail_out		1102377	0					
ANR	1102799	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102800	Identifier	sp		1102377	0					
ANR	1102801	Identifier	stream		1102377	1					
ANR	1102802	Identifier	avail_out		1102377	1					
ANR	1102803	CastExpression	( uInt ) tif -> tif_rawdatasize		1102377	1					
ANR	1102804	CastTarget	uInt		1102377	0					
ANR	1102805	PtrMemberAccess	tif -> tif_rawdatasize		1102377	1					
ANR	1102806	Identifier	tif		1102377	0					
ANR	1102807	Identifier	tif_rawdatasize		1102377	1					
ANR	1102808	Condition	sp -> stream . avail_in > 0	1185:10:34001:34023	1102377	1	True				
ANR	1102809	RelationalExpression	sp -> stream . avail_in > 0		1102377	0		>			
ANR	1102810	MemberAccess	sp -> stream . avail_in		1102377	0					
ANR	1102811	PtrMemberAccess	sp -> stream		1102377	0					
ANR	1102812	Identifier	sp		1102377	0					
ANR	1102813	Identifier	stream		1102377	1					
ANR	1102814	Identifier	avail_in		1102377	1					
ANR	1102815	PrimaryExpression	0		1102377	1					
ANR	1102816	ReturnStatement	return ( 1 ) ;	1186:1:34028:34038	1102377	17	True				
ANR	1102817	PrimaryExpression	1		1102377	0					
ANR	1102818	ReturnType	static int		1102377	1					
ANR	1102819	Identifier	PixarLogEncode		1102377	2					
ANR	1102820	ParameterList	"TIFF * tif , uint8 * bp , tmsize_t cc , uint16 s"		1102377	3					
ANR	1102821	Parameter	TIFF * tif	1101:15:31513:31521	1102377	0	True				
ANR	1102822	ParameterType	TIFF *		1102377	0					
ANR	1102823	Identifier	tif		1102377	1					
ANR	1102824	Parameter	uint8 * bp	1101:26:31524:31532	1102377	1	True				
ANR	1102825	ParameterType	uint8 *		1102377	0					
ANR	1102826	Identifier	bp		1102377	1					
ANR	1102827	Parameter	tmsize_t cc	1101:37:31535:31545	1102377	2	True				
ANR	1102828	ParameterType	tmsize_t		1102377	0					
ANR	1102829	Identifier	cc		1102377	1					
ANR	1102830	Parameter	uint16 s	1101:50:31548:31555	1102377	3	True				
ANR	1102831	ParameterType	uint16		1102377	0					
ANR	1102832	Identifier	s		1102377	1					
ANR	1102833	CFGEntryNode	ENTRY		1102377		True				
ANR	1102834	CFGExitNode	EXIT		1102377		True				
ANR	1102835	Symbol	* sp		1102377						
ANR	1102836	Symbol	& tif -> tif_dir		1102377						
ANR	1102837	Symbol	sp -> FromLT2		1102377						
ANR	1102838	Symbol	& sp -> stream		1102377						
ANR	1102839	Symbol	sp -> user_datafmt		1102377						
ANR	1102840	Symbol	Z_OK		1102377						
ANR	1102841	Symbol	sp -> stream . next_out		1102377						
ANR	1102842	Symbol	bp		1102377						
ANR	1102843	Symbol	sp -> From8		1102377						
ANR	1102844	Symbol	tif		1102377						
ANR	1102845	Symbol	tif -> tif_rawcc		1102377						
ANR	1102846	Symbol	Z_NO_FLUSH		1102377						
ANR	1102847	Symbol	sp -> stride		1102377						
ANR	1102848	Symbol	sp -> stream . msg		1102377						
ANR	1102849	Symbol	sp -> tbuf		1102377						
ANR	1102850	Symbol	llen		1102377						
ANR	1102851	Symbol	up		1102377						
ANR	1102852	Symbol	sp		1102377						
ANR	1102853	Symbol	cc		1102377						
ANR	1102854	Symbol	EncoderState		1102377						
ANR	1102855	Symbol	td -> td_imagewidth		1102377						
ANR	1102856	Symbol	module		1102377						
ANR	1102857	Symbol	sp -> stream . next_in		1102377						
ANR	1102858	Symbol	i		1102377						
ANR	1102859	Symbol	sp -> stream . avail_out		1102377						
ANR	1102860	Symbol	n		1102377						
ANR	1102861	Symbol	tif -> tif_clientdata		1102377						
ANR	1102862	Symbol	td		1102377						
ANR	1102863	Symbol	s		1102377						
ANR	1102864	Symbol	sp -> stream . avail_in		1102377						
ANR	1102865	Symbol	deflate		1102377						
ANR	1102866	Symbol	tif -> tif_rawdatasize		1102377						
ANR	1102867	Symbol	* td		1102377						
ANR	1102868	Symbol	sp -> From14		1102377						
ANR	1102869	Symbol	sp -> stream		1102377						
ANR	1102870	Symbol	* tif		1102377						
ANR	1102871	Symbol	td -> td_bitspersample		1102377						
ANR	1102872	Symbol	tif -> tif_rawdata		1102377						
ANR	1102873	Function	PixarLogPostEncode	1194:0:34156:34969							
ANR	1102874	FunctionDef	PixarLogPostEncode (TIFF * tif)		1102873	0					
ANR	1102875	CompoundStatement		1196:0:34197:34969	1102873	0					
ANR	1102876	Statement	static	1197:1:34200:34205	1102873	0	True				
ANR	1102877	IdentifierDeclStatement	"const char module [ ] = ""PixarLogPostEncode"" ;"	1197:8:34207:34249	1102873	1	True				
ANR	1102878	IdentifierDecl	"module [ ] = ""PixarLogPostEncode"""		1102873	0					
ANR	1102879	IdentifierDeclType	const char [ ]		1102873	0					
ANR	1102880	Identifier	module		1102873	1					
ANR	1102881	AssignmentExpression	"module [ ] = ""PixarLogPostEncode"""		1102873	2		=			
ANR	1102882	Identifier	module		1102873	0					
ANR	1102883	PrimaryExpression	"""PixarLogPostEncode"""		1102873	1					
ANR	1102884	IdentifierDeclStatement	PixarLogState * sp = EncoderState ( tif ) ;	1198:1:34252:34289	1102873	2	True				
ANR	1102885	IdentifierDecl	* sp = EncoderState ( tif )		1102873	0					
ANR	1102886	IdentifierDeclType	PixarLogState *		1102873	0					
ANR	1102887	Identifier	sp		1102873	1					
ANR	1102888	AssignmentExpression	* sp = EncoderState ( tif )		1102873	2		=			
ANR	1102889	Identifier	sp		1102873	0					
ANR	1102890	CallExpression	EncoderState ( tif )		1102873	1					
ANR	1102891	Callee	EncoderState		1102873	0					
ANR	1102892	Identifier	EncoderState		1102873	0					
ANR	1102893	ArgumentList	tif		1102873	1					
ANR	1102894	Argument	tif		1102873	0					
ANR	1102895	Identifier	tif		1102873	0					
ANR	1102896	IdentifierDeclStatement	int state ;	1199:1:34292:34301	1102873	3	True				
ANR	1102897	IdentifierDecl	state		1102873	0					
ANR	1102898	IdentifierDeclType	int		1102873	0					
ANR	1102899	Identifier	state		1102873	1					
ANR	1102900	ExpressionStatement	sp -> stream . avail_in = 0	1201:1:34305:34328	1102873	4	True				
ANR	1102901	AssignmentExpression	sp -> stream . avail_in = 0		1102873	0		=			
ANR	1102902	MemberAccess	sp -> stream . avail_in		1102873	0					
ANR	1102903	PtrMemberAccess	sp -> stream		1102873	0					
ANR	1102904	Identifier	sp		1102873	0					
ANR	1102905	Identifier	stream		1102873	1					
ANR	1102906	Identifier	avail_in		1102873	1					
ANR	1102907	PrimaryExpression	0		1102873	1					
ANR	1102908	DoStatement	do		1102873	5					
ANR	1102909	CompoundStatement		8:4:137:137	1102873	0					
ANR	1102910	ExpressionStatement	"state = deflate ( & sp -> stream , Z_FINISH )"	1204:2:34339:34377	1102873	0	True				
ANR	1102911	AssignmentExpression	"state = deflate ( & sp -> stream , Z_FINISH )"		1102873	0		=			
ANR	1102912	Identifier	state		1102873	0					
ANR	1102913	CallExpression	"deflate ( & sp -> stream , Z_FINISH )"		1102873	1					
ANR	1102914	Callee	deflate		1102873	0					
ANR	1102915	Identifier	deflate		1102873	0					
ANR	1102916	ArgumentList	& sp -> stream		1102873	1					
ANR	1102917	Argument	& sp -> stream		1102873	0					
ANR	1102918	UnaryOperationExpression	& sp -> stream		1102873	0					
ANR	1102919	UnaryOperator	&		1102873	0					
ANR	1102920	PtrMemberAccess	sp -> stream		1102873	1					
ANR	1102921	Identifier	sp		1102873	0					
ANR	1102922	Identifier	stream		1102873	1					
ANR	1102923	Argument	Z_FINISH		1102873	1					
ANR	1102924	Identifier	Z_FINISH		1102873	0					
ANR	1102925	SwitchStatement	switch ( state )		1102873	1					
ANR	1102926	Condition	state	1205:10:34389:34393	1102873	0	True				
ANR	1102927	Identifier	state		1102873	0					
ANR	1102928	CompoundStatement		10:17:198:198	1102873	1					
ANR	1102929	Label	case Z_STREAM_END :	1206:2:34400:34417	1102873	0	True				
ANR	1102930	Identifier	Z_STREAM_END		1102873	0					
ANR	1102931	Label	case Z_OK :	1207:2:34421:34430	1102873	1	True				
ANR	1102932	Identifier	Z_OK		1102873	0					
ANR	1102933	IfStatement	if ( ( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize )		1102873	2					
ANR	1102934	Condition	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize	1208:10:34442:34495	1102873	0	True				
ANR	1102935	EqualityExpression	( tmsize_t ) sp -> stream . avail_out != tif -> tif_rawdatasize		1102873	0		!=			
ANR	1102936	CastExpression	( tmsize_t ) sp -> stream . avail_out		1102873	0					
ANR	1102937	CastTarget	tmsize_t		1102873	0					
ANR	1102938	MemberAccess	sp -> stream . avail_out		1102873	1					
ANR	1102939	PtrMemberAccess	sp -> stream		1102873	0					
ANR	1102940	Identifier	sp		1102873	0					
ANR	1102941	Identifier	stream		1102873	1					
ANR	1102942	Identifier	avail_out		1102873	1					
ANR	1102943	PtrMemberAccess	tif -> tif_rawdatasize		1102873	1					
ANR	1102944	Identifier	tif		1102873	0					
ANR	1102945	Identifier	tif_rawdatasize		1102873	1					
ANR	1102946	CompoundStatement		13:66:300:300	1102873	1					
ANR	1102947	ExpressionStatement	tif -> tif_rawcc = tif -> tif_rawdatasize - sp -> stream . avail_out	1209:7:34507:34571	1102873	0	True				
ANR	1102948	AssignmentExpression	tif -> tif_rawcc = tif -> tif_rawdatasize - sp -> stream . avail_out		1102873	0		=			
ANR	1102949	PtrMemberAccess	tif -> tif_rawcc		1102873	0					
ANR	1102950	Identifier	tif		1102873	0					
ANR	1102951	Identifier	tif_rawcc		1102873	1					
ANR	1102952	AdditiveExpression	tif -> tif_rawdatasize - sp -> stream . avail_out		1102873	1		-			
ANR	1102953	PtrMemberAccess	tif -> tif_rawdatasize		1102873	0					
ANR	1102954	Identifier	tif		1102873	0					
ANR	1102955	Identifier	tif_rawdatasize		1102873	1					
ANR	1102956	MemberAccess	sp -> stream . avail_out		1102873	1					
ANR	1102957	PtrMemberAccess	sp -> stream		1102873	0					
ANR	1102958	Identifier	sp		1102873	0					
ANR	1102959	Identifier	stream		1102873	1					
ANR	1102960	Identifier	avail_out		1102873	1					
ANR	1102961	ExpressionStatement	TIFFFlushData1 ( tif )	1211:7:34580:34599	1102873	1	True				
ANR	1102962	CallExpression	TIFFFlushData1 ( tif )		1102873	0					
ANR	1102963	Callee	TIFFFlushData1		1102873	0					
ANR	1102964	Identifier	TIFFFlushData1		1102873	0					
ANR	1102965	ArgumentList	tif		1102873	1					
ANR	1102966	Argument	tif		1102873	0					
ANR	1102967	Identifier	tif		1102873	0					
ANR	1102968	ExpressionStatement	sp -> stream . next_out = tif -> tif_rawdata	1212:7:34608:34646	1102873	2	True				
ANR	1102969	AssignmentExpression	sp -> stream . next_out = tif -> tif_rawdata		1102873	0		=			
ANR	1102970	MemberAccess	sp -> stream . next_out		1102873	0					
ANR	1102971	PtrMemberAccess	sp -> stream		1102873	0					
ANR	1102972	Identifier	sp		1102873	0					
ANR	1102973	Identifier	stream		1102873	1					
ANR	1102974	Identifier	next_out		1102873	1					
ANR	1102975	PtrMemberAccess	tif -> tif_rawdata		1102873	1					
ANR	1102976	Identifier	tif		1102873	0					
ANR	1102977	Identifier	tif_rawdata		1102873	1					
ANR	1102978	ExpressionStatement	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize	1213:7:34655:34705	1102873	3	True				
ANR	1102979	AssignmentExpression	sp -> stream . avail_out = ( uInt ) tif -> tif_rawdatasize		1102873	0		=			
ANR	1102980	MemberAccess	sp -> stream . avail_out		1102873	0					
ANR	1102981	PtrMemberAccess	sp -> stream		1102873	0					
ANR	1102982	Identifier	sp		1102873	0					
ANR	1102983	Identifier	stream		1102873	1					
ANR	1102984	Identifier	avail_out		1102873	1					
ANR	1102985	CastExpression	( uInt ) tif -> tif_rawdatasize		1102873	1					
ANR	1102986	CastTarget	uInt		1102873	0					
ANR	1102987	PtrMemberAccess	tif -> tif_rawdatasize		1102873	1					
ANR	1102988	Identifier	tif		1102873	0					
ANR	1102989	Identifier	tif_rawdatasize		1102873	1					
ANR	1102990	BreakStatement	break ;	1215:6:34799:34804	1102873	3	True				
ANR	1102991	Label	default :	1216:2:34808:34815	1102873	4	True				
ANR	1102992	Identifier	default		1102873	0					
ANR	1102993	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg )"	1217:3:34820:34898	1102873	5	True				
ANR	1102994	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg )"		1102873	0					
ANR	1102995	Callee	TIFFErrorExt		1102873	0					
ANR	1102996	Identifier	TIFFErrorExt		1102873	0					
ANR	1102997	ArgumentList	tif -> tif_clientdata		1102873	1					
ANR	1102998	Argument	tif -> tif_clientdata		1102873	0					
ANR	1102999	PtrMemberAccess	tif -> tif_clientdata		1102873	0					
ANR	1103000	Identifier	tif		1102873	0					
ANR	1103001	Identifier	tif_clientdata		1102873	1					
ANR	1103002	Argument	module		1102873	1					
ANR	1103003	Identifier	module		1102873	0					
ANR	1103004	Argument	"""ZLib error: %s"""		1102873	2					
ANR	1103005	PrimaryExpression	"""ZLib error: %s"""		1102873	0					
ANR	1103006	Argument	sp -> stream . msg		1102873	3					
ANR	1103007	MemberAccess	sp -> stream . msg		1102873	0					
ANR	1103008	PtrMemberAccess	sp -> stream		1102873	0					
ANR	1103009	Identifier	sp		1102873	0					
ANR	1103010	Identifier	stream		1102873	1					
ANR	1103011	Identifier	msg		1102873	1					
ANR	1103012	ReturnStatement	return ( 0 ) ;	1219:6:34906:34916	1102873	6	True				
ANR	1103013	PrimaryExpression	0		1102873	0					
ANR	1103014	Condition	state != Z_STREAM_END	1221:10:34932:34952	1102873	1	True				
ANR	1103015	EqualityExpression	state != Z_STREAM_END		1102873	0		!=			
ANR	1103016	Identifier	state		1102873	0					
ANR	1103017	Identifier	Z_STREAM_END		1102873	1					
ANR	1103018	ReturnStatement	return ( 1 ) ;	1222:1:34957:34967	1102873	6	True				
ANR	1103019	PrimaryExpression	1		1102873	0					
ANR	1103020	ReturnType	static int		1102873	1					
ANR	1103021	Identifier	PixarLogPostEncode		1102873	2					
ANR	1103022	ParameterList	TIFF * tif		1102873	3					
ANR	1103023	Parameter	TIFF * tif	1195:19:34186:34194	1102873	0	True				
ANR	1103024	ParameterType	TIFF *		1102873	0					
ANR	1103025	Identifier	tif		1102873	1					
ANR	1103026	CFGEntryNode	ENTRY		1102873		True				
ANR	1103027	CFGExitNode	EXIT		1102873		True				
ANR	1103028	Symbol	* sp		1102873						
ANR	1103029	Symbol	EncoderState		1102873						
ANR	1103030	Symbol	& sp -> stream		1102873						
ANR	1103031	Symbol	module		1102873						
ANR	1103032	Symbol	sp -> stream . next_out		1102873						
ANR	1103033	Symbol	sp -> stream . avail_out		1102873						
ANR	1103034	Symbol	Z_FINISH		1102873						
ANR	1103035	Symbol	tif -> tif_clientdata		1102873						
ANR	1103036	Symbol	tif		1102873						
ANR	1103037	Symbol	tif -> tif_rawcc		1102873						
ANR	1103038	Symbol	sp -> stream . avail_in		1102873						
ANR	1103039	Symbol	deflate		1102873						
ANR	1103040	Symbol	tif -> tif_rawdatasize		1102873						
ANR	1103041	Symbol	sp -> stream . msg		1102873						
ANR	1103042	Symbol	Z_STREAM_END		1102873						
ANR	1103043	Symbol	sp -> stream		1102873						
ANR	1103044	Symbol	state		1102873						
ANR	1103045	Symbol	* tif		1102873						
ANR	1103046	Symbol	sp		1102873						
ANR	1103047	Symbol	tif -> tif_rawdata		1102873						
ANR	1103048	Function	PixarLogClose	1225:0:34972:35555							
ANR	1103049	FunctionDef	PixarLogClose (TIFF * tif)		1103048	0					
ANR	1103050	CompoundStatement		1227:0:35009:35555	1103048	0					
ANR	1103051	IdentifierDeclStatement	TIFFDirectory * td = & tif -> tif_dir ;	1228:1:35012:35045	1103048	0	True				
ANR	1103052	IdentifierDecl	* td = & tif -> tif_dir		1103048	0					
ANR	1103053	IdentifierDeclType	TIFFDirectory *		1103048	0					
ANR	1103054	Identifier	td		1103048	1					
ANR	1103055	AssignmentExpression	* td = & tif -> tif_dir		1103048	2		=			
ANR	1103056	Identifier	td		1103048	0					
ANR	1103057	UnaryOperationExpression	& tif -> tif_dir		1103048	1					
ANR	1103058	UnaryOperator	&		1103048	0					
ANR	1103059	PtrMemberAccess	tif -> tif_dir		1103048	1					
ANR	1103060	Identifier	tif		1103048	0					
ANR	1103061	Identifier	tif_dir		1103048	1					
ANR	1103062	ExpressionStatement	td -> td_bitspersample = 8	1238:1:35487:35511	1103048	1	True				
ANR	1103063	AssignmentExpression	td -> td_bitspersample = 8		1103048	0		=			
ANR	1103064	PtrMemberAccess	td -> td_bitspersample		1103048	0					
ANR	1103065	Identifier	td		1103048	0					
ANR	1103066	Identifier	td_bitspersample		1103048	1					
ANR	1103067	PrimaryExpression	8		1103048	1					
ANR	1103068	ExpressionStatement	td -> td_sampleformat = SAMPLEFORMAT_UINT	1239:1:35514:35553	1103048	2	True				
ANR	1103069	AssignmentExpression	td -> td_sampleformat = SAMPLEFORMAT_UINT		1103048	0		=			
ANR	1103070	PtrMemberAccess	td -> td_sampleformat		1103048	0					
ANR	1103071	Identifier	td		1103048	0					
ANR	1103072	Identifier	td_sampleformat		1103048	1					
ANR	1103073	Identifier	SAMPLEFORMAT_UINT		1103048	1					
ANR	1103074	ReturnType	static void		1103048	1					
ANR	1103075	Identifier	PixarLogClose		1103048	2					
ANR	1103076	ParameterList	TIFF * tif		1103048	3					
ANR	1103077	Parameter	TIFF * tif	1226:14:34998:35006	1103048	0	True				
ANR	1103078	ParameterType	TIFF *		1103048	0					
ANR	1103079	Identifier	tif		1103048	1					
ANR	1103080	CFGEntryNode	ENTRY		1103048		True				
ANR	1103081	CFGExitNode	EXIT		1103048		True				
ANR	1103082	Symbol	tif		1103048						
ANR	1103083	Symbol	td		1103048						
ANR	1103084	Symbol	SAMPLEFORMAT_UINT		1103048						
ANR	1103085	Symbol	& tif -> tif_dir		1103048						
ANR	1103086	Symbol	* td		1103048						
ANR	1103087	Symbol	td -> td_sampleformat		1103048						
ANR	1103088	Symbol	td -> td_bitspersample		1103048						
ANR	1103089	Function	PixarLogCleanup	1242:0:35558:36313							
ANR	1103090	FunctionDef	PixarLogCleanup (TIFF * tif)		1103089	0					
ANR	1103091	CompoundStatement		1244:0:35597:36313	1103089	0					
ANR	1103092	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1245:1:35600:35650	1103089	0	True				
ANR	1103093	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		1103089	0					
ANR	1103094	IdentifierDeclType	PixarLogState *		1103089	0					
ANR	1103095	Identifier	sp		1103089	1					
ANR	1103096	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		1103089	2		=			
ANR	1103097	Identifier	sp		1103089	0					
ANR	1103098	CastExpression	( PixarLogState * ) tif -> tif_data		1103089	1					
ANR	1103099	CastTarget	PixarLogState *		1103089	0					
ANR	1103100	PtrMemberAccess	tif -> tif_data		1103089	1					
ANR	1103101	Identifier	tif		1103089	0					
ANR	1103102	Identifier	tif_data		1103089	1					
ANR	1103103	ExpressionStatement	assert ( sp != 0 )	1247:1:35654:35669	1103089	1	True				
ANR	1103104	CallExpression	assert ( sp != 0 )		1103089	0					
ANR	1103105	Callee	assert		1103089	0					
ANR	1103106	Identifier	assert		1103089	0					
ANR	1103107	ArgumentList	sp != 0		1103089	1					
ANR	1103108	Argument	sp != 0		1103089	0					
ANR	1103109	EqualityExpression	sp != 0		1103089	0		!=			
ANR	1103110	Identifier	sp		1103089	0					
ANR	1103111	PrimaryExpression	0		1103089	1					
ANR	1103112	ExpressionStatement	( void ) TIFFPredictorCleanup ( tif )	1249:1:35673:35704	1103089	2	True				
ANR	1103113	CastExpression	( void ) TIFFPredictorCleanup ( tif )		1103089	0					
ANR	1103114	CastTarget	void		1103089	0					
ANR	1103115	CallExpression	TIFFPredictorCleanup ( tif )		1103089	1					
ANR	1103116	Callee	TIFFPredictorCleanup		1103089	0					
ANR	1103117	Identifier	TIFFPredictorCleanup		1103089	0					
ANR	1103118	ArgumentList	tif		1103089	1					
ANR	1103119	Argument	tif		1103089	0					
ANR	1103120	Identifier	tif		1103089	0					
ANR	1103121	ExpressionStatement	tif -> tif_tagmethods . vgetfield = sp -> vgetparent	1251:1:35708:35754	1103089	3	True				
ANR	1103122	AssignmentExpression	tif -> tif_tagmethods . vgetfield = sp -> vgetparent		1103089	0		=			
ANR	1103123	MemberAccess	tif -> tif_tagmethods . vgetfield		1103089	0					
ANR	1103124	PtrMemberAccess	tif -> tif_tagmethods		1103089	0					
ANR	1103125	Identifier	tif		1103089	0					
ANR	1103126	Identifier	tif_tagmethods		1103089	1					
ANR	1103127	Identifier	vgetfield		1103089	1					
ANR	1103128	PtrMemberAccess	sp -> vgetparent		1103089	1					
ANR	1103129	Identifier	sp		1103089	0					
ANR	1103130	Identifier	vgetparent		1103089	1					
ANR	1103131	ExpressionStatement	tif -> tif_tagmethods . vsetfield = sp -> vsetparent	1252:1:35757:35803	1103089	4	True				
ANR	1103132	AssignmentExpression	tif -> tif_tagmethods . vsetfield = sp -> vsetparent		1103089	0		=			
ANR	1103133	MemberAccess	tif -> tif_tagmethods . vsetfield		1103089	0					
ANR	1103134	PtrMemberAccess	tif -> tif_tagmethods		1103089	0					
ANR	1103135	Identifier	tif		1103089	0					
ANR	1103136	Identifier	tif_tagmethods		1103089	1					
ANR	1103137	Identifier	vsetfield		1103089	1					
ANR	1103138	PtrMemberAccess	sp -> vsetparent		1103089	1					
ANR	1103139	Identifier	sp		1103089	0					
ANR	1103140	Identifier	vsetparent		1103089	1					
ANR	1103141	IfStatement	if ( sp -> FromLT2 )		1103089	5					
ANR	1103142	Condition	sp -> FromLT2	1254:5:35811:35821	1103089	0	True				
ANR	1103143	PtrMemberAccess	sp -> FromLT2		1103089	0					
ANR	1103144	Identifier	sp		1103089	0					
ANR	1103145	Identifier	FromLT2		1103089	1					
ANR	1103146	ExpressionStatement	_TIFFfree ( sp -> FromLT2 )	1254:18:35824:35846	1103089	1	True				
ANR	1103147	CallExpression	_TIFFfree ( sp -> FromLT2 )		1103089	0					
ANR	1103148	Callee	_TIFFfree		1103089	0					
ANR	1103149	Identifier	_TIFFfree		1103089	0					
ANR	1103150	ArgumentList	sp -> FromLT2		1103089	1					
ANR	1103151	Argument	sp -> FromLT2		1103089	0					
ANR	1103152	PtrMemberAccess	sp -> FromLT2		1103089	0					
ANR	1103153	Identifier	sp		1103089	0					
ANR	1103154	Identifier	FromLT2		1103089	1					
ANR	1103155	IfStatement	if ( sp -> From14 )		1103089	6					
ANR	1103156	Condition	sp -> From14	1255:5:35853:35862	1103089	0	True				
ANR	1103157	PtrMemberAccess	sp -> From14		1103089	0					
ANR	1103158	Identifier	sp		1103089	0					
ANR	1103159	Identifier	From14		1103089	1					
ANR	1103160	ExpressionStatement	_TIFFfree ( sp -> From14 )	1255:17:35865:35886	1103089	1	True				
ANR	1103161	CallExpression	_TIFFfree ( sp -> From14 )		1103089	0					
ANR	1103162	Callee	_TIFFfree		1103089	0					
ANR	1103163	Identifier	_TIFFfree		1103089	0					
ANR	1103164	ArgumentList	sp -> From14		1103089	1					
ANR	1103165	Argument	sp -> From14		1103089	0					
ANR	1103166	PtrMemberAccess	sp -> From14		1103089	0					
ANR	1103167	Identifier	sp		1103089	0					
ANR	1103168	Identifier	From14		1103089	1					
ANR	1103169	IfStatement	if ( sp -> From8 )		1103089	7					
ANR	1103170	Condition	sp -> From8	1256:5:35893:35901	1103089	0	True				
ANR	1103171	PtrMemberAccess	sp -> From8		1103089	0					
ANR	1103172	Identifier	sp		1103089	0					
ANR	1103173	Identifier	From8		1103089	1					
ANR	1103174	ExpressionStatement	_TIFFfree ( sp -> From8 )	1256:16:35904:35924	1103089	1	True				
ANR	1103175	CallExpression	_TIFFfree ( sp -> From8 )		1103089	0					
ANR	1103176	Callee	_TIFFfree		1103089	0					
ANR	1103177	Identifier	_TIFFfree		1103089	0					
ANR	1103178	ArgumentList	sp -> From8		1103089	1					
ANR	1103179	Argument	sp -> From8		1103089	0					
ANR	1103180	PtrMemberAccess	sp -> From8		1103089	0					
ANR	1103181	Identifier	sp		1103089	0					
ANR	1103182	Identifier	From8		1103089	1					
ANR	1103183	IfStatement	if ( sp -> ToLinearF )		1103089	8					
ANR	1103184	Condition	sp -> ToLinearF	1257:5:35931:35943	1103089	0	True				
ANR	1103185	PtrMemberAccess	sp -> ToLinearF		1103089	0					
ANR	1103186	Identifier	sp		1103089	0					
ANR	1103187	Identifier	ToLinearF		1103089	1					
ANR	1103188	ExpressionStatement	_TIFFfree ( sp -> ToLinearF )	1257:20:35946:35970	1103089	1	True				
ANR	1103189	CallExpression	_TIFFfree ( sp -> ToLinearF )		1103089	0					
ANR	1103190	Callee	_TIFFfree		1103089	0					
ANR	1103191	Identifier	_TIFFfree		1103089	0					
ANR	1103192	ArgumentList	sp -> ToLinearF		1103089	1					
ANR	1103193	Argument	sp -> ToLinearF		1103089	0					
ANR	1103194	PtrMemberAccess	sp -> ToLinearF		1103089	0					
ANR	1103195	Identifier	sp		1103089	0					
ANR	1103196	Identifier	ToLinearF		1103089	1					
ANR	1103197	IfStatement	if ( sp -> ToLinear16 )		1103089	9					
ANR	1103198	Condition	sp -> ToLinear16	1258:5:35977:35990	1103089	0	True				
ANR	1103199	PtrMemberAccess	sp -> ToLinear16		1103089	0					
ANR	1103200	Identifier	sp		1103089	0					
ANR	1103201	Identifier	ToLinear16		1103089	1					
ANR	1103202	ExpressionStatement	_TIFFfree ( sp -> ToLinear16 )	1258:21:35993:36018	1103089	1	True				
ANR	1103203	CallExpression	_TIFFfree ( sp -> ToLinear16 )		1103089	0					
ANR	1103204	Callee	_TIFFfree		1103089	0					
ANR	1103205	Identifier	_TIFFfree		1103089	0					
ANR	1103206	ArgumentList	sp -> ToLinear16		1103089	1					
ANR	1103207	Argument	sp -> ToLinear16		1103089	0					
ANR	1103208	PtrMemberAccess	sp -> ToLinear16		1103089	0					
ANR	1103209	Identifier	sp		1103089	0					
ANR	1103210	Identifier	ToLinear16		1103089	1					
ANR	1103211	IfStatement	if ( sp -> ToLinear8 )		1103089	10					
ANR	1103212	Condition	sp -> ToLinear8	1259:5:36025:36037	1103089	0	True				
ANR	1103213	PtrMemberAccess	sp -> ToLinear8		1103089	0					
ANR	1103214	Identifier	sp		1103089	0					
ANR	1103215	Identifier	ToLinear8		1103089	1					
ANR	1103216	ExpressionStatement	_TIFFfree ( sp -> ToLinear8 )	1259:20:36040:36064	1103089	1	True				
ANR	1103217	CallExpression	_TIFFfree ( sp -> ToLinear8 )		1103089	0					
ANR	1103218	Callee	_TIFFfree		1103089	0					
ANR	1103219	Identifier	_TIFFfree		1103089	0					
ANR	1103220	ArgumentList	sp -> ToLinear8		1103089	1					
ANR	1103221	Argument	sp -> ToLinear8		1103089	0					
ANR	1103222	PtrMemberAccess	sp -> ToLinear8		1103089	0					
ANR	1103223	Identifier	sp		1103089	0					
ANR	1103224	Identifier	ToLinear8		1103089	1					
ANR	1103225	IfStatement	if ( sp -> state & PLSTATE_INIT )		1103089	11					
ANR	1103226	Condition	sp -> state & PLSTATE_INIT	1260:5:36071:36092	1103089	0	True				
ANR	1103227	BitAndExpression	sp -> state & PLSTATE_INIT		1103089	0		&			
ANR	1103228	PtrMemberAccess	sp -> state		1103089	0					
ANR	1103229	Identifier	sp		1103089	0					
ANR	1103230	Identifier	state		1103089	1					
ANR	1103231	Identifier	PLSTATE_INIT		1103089	1					
ANR	1103232	CompoundStatement		17:29:497:497	1103089	1					
ANR	1103233	IfStatement	if ( tif -> tif_mode == O_RDONLY )		1103089	0					
ANR	1103234	Condition	tif -> tif_mode == O_RDONLY	1261:6:36103:36127	1103089	0	True				
ANR	1103235	EqualityExpression	tif -> tif_mode == O_RDONLY		1103089	0		==			
ANR	1103236	PtrMemberAccess	tif -> tif_mode		1103089	0					
ANR	1103237	Identifier	tif		1103089	0					
ANR	1103238	Identifier	tif_mode		1103089	1					
ANR	1103239	Identifier	O_RDONLY		1103089	1					
ANR	1103240	ExpressionStatement	inflateEnd ( & sp -> stream )	1262:3:36133:36156	1103089	1	True				
ANR	1103241	CallExpression	inflateEnd ( & sp -> stream )		1103089	0					
ANR	1103242	Callee	inflateEnd		1103089	0					
ANR	1103243	Identifier	inflateEnd		1103089	0					
ANR	1103244	ArgumentList	& sp -> stream		1103089	1					
ANR	1103245	Argument	& sp -> stream		1103089	0					
ANR	1103246	UnaryOperationExpression	& sp -> stream		1103089	0					
ANR	1103247	UnaryOperator	&		1103089	0					
ANR	1103248	PtrMemberAccess	sp -> stream		1103089	1					
ANR	1103249	Identifier	sp		1103089	0					
ANR	1103250	Identifier	stream		1103089	1					
ANR	1103251	ElseStatement	else		1103089	0					
ANR	1103252	ExpressionStatement	deflateEnd ( & sp -> stream )	1264:3:36168:36191	1103089	0	True				
ANR	1103253	CallExpression	deflateEnd ( & sp -> stream )		1103089	0					
ANR	1103254	Callee	deflateEnd		1103089	0					
ANR	1103255	Identifier	deflateEnd		1103089	0					
ANR	1103256	ArgumentList	& sp -> stream		1103089	1					
ANR	1103257	Argument	& sp -> stream		1103089	0					
ANR	1103258	UnaryOperationExpression	& sp -> stream		1103089	0					
ANR	1103259	UnaryOperator	&		1103089	0					
ANR	1103260	PtrMemberAccess	sp -> stream		1103089	1					
ANR	1103261	Identifier	sp		1103089	0					
ANR	1103262	Identifier	stream		1103089	1					
ANR	1103263	IfStatement	if ( sp -> tbuf )		1103089	12					
ANR	1103264	Condition	sp -> tbuf	1266:5:36201:36208	1103089	0	True				
ANR	1103265	PtrMemberAccess	sp -> tbuf		1103089	0					
ANR	1103266	Identifier	sp		1103089	0					
ANR	1103267	Identifier	tbuf		1103089	1					
ANR	1103268	ExpressionStatement	_TIFFfree ( sp -> tbuf )	1267:2:36213:36232	1103089	1	True				
ANR	1103269	CallExpression	_TIFFfree ( sp -> tbuf )		1103089	0					
ANR	1103270	Callee	_TIFFfree		1103089	0					
ANR	1103271	Identifier	_TIFFfree		1103089	0					
ANR	1103272	ArgumentList	sp -> tbuf		1103089	1					
ANR	1103273	Argument	sp -> tbuf		1103089	0					
ANR	1103274	PtrMemberAccess	sp -> tbuf		1103089	0					
ANR	1103275	Identifier	sp		1103089	0					
ANR	1103276	Identifier	tbuf		1103089	1					
ANR	1103277	ExpressionStatement	_TIFFfree ( sp )	1268:1:36235:36248	1103089	13	True				
ANR	1103278	CallExpression	_TIFFfree ( sp )		1103089	0					
ANR	1103279	Callee	_TIFFfree		1103089	0					
ANR	1103280	Identifier	_TIFFfree		1103089	0					
ANR	1103281	ArgumentList	sp		1103089	1					
ANR	1103282	Argument	sp		1103089	0					
ANR	1103283	Identifier	sp		1103089	0					
ANR	1103284	ExpressionStatement	tif -> tif_data = NULL	1269:1:36251:36271	1103089	14	True				
ANR	1103285	AssignmentExpression	tif -> tif_data = NULL		1103089	0		=			
ANR	1103286	PtrMemberAccess	tif -> tif_data		1103089	0					
ANR	1103287	Identifier	tif		1103089	0					
ANR	1103288	Identifier	tif_data		1103089	1					
ANR	1103289	Identifier	NULL		1103089	1					
ANR	1103290	ExpressionStatement	_TIFFSetDefaultCompressionState ( tif )	1271:1:36275:36311	1103089	15	True				
ANR	1103291	CallExpression	_TIFFSetDefaultCompressionState ( tif )		1103089	0					
ANR	1103292	Callee	_TIFFSetDefaultCompressionState		1103089	0					
ANR	1103293	Identifier	_TIFFSetDefaultCompressionState		1103089	0					
ANR	1103294	ArgumentList	tif		1103089	1					
ANR	1103295	Argument	tif		1103089	0					
ANR	1103296	Identifier	tif		1103089	0					
ANR	1103297	ReturnType	static void		1103089	1					
ANR	1103298	Identifier	PixarLogCleanup		1103089	2					
ANR	1103299	ParameterList	TIFF * tif		1103089	3					
ANR	1103300	Parameter	TIFF * tif	1243:16:35586:35594	1103089	0	True				
ANR	1103301	ParameterType	TIFF *		1103089	0					
ANR	1103302	Identifier	tif		1103089	1					
ANR	1103303	CFGEntryNode	ENTRY		1103089		True				
ANR	1103304	CFGExitNode	EXIT		1103089		True				
ANR	1103305	Symbol	* sp		1103089						
ANR	1103306	Symbol	tif -> tif_tagmethods . vsetfield		1103089						
ANR	1103307	Symbol	sp -> FromLT2		1103089						
ANR	1103308	Symbol	NULL		1103089						
ANR	1103309	Symbol	& sp -> stream		1103089						
ANR	1103310	Symbol	sp -> vgetparent		1103089						
ANR	1103311	Symbol	sp -> ToLinear8		1103089						
ANR	1103312	Symbol	sp -> vsetparent		1103089						
ANR	1103313	Symbol	sp -> state		1103089						
ANR	1103314	Symbol	sp -> From8		1103089						
ANR	1103315	Symbol	tif		1103089						
ANR	1103316	Symbol	sp -> ToLinear16		1103089						
ANR	1103317	Symbol	O_RDONLY		1103089						
ANR	1103318	Symbol	tif -> tif_tagmethods		1103089						
ANR	1103319	Symbol	sp -> From14		1103089						
ANR	1103320	Symbol	sp -> tbuf		1103089						
ANR	1103321	Symbol	tif -> tif_tagmethods . vgetfield		1103089						
ANR	1103322	Symbol	sp -> ToLinearF		1103089						
ANR	1103323	Symbol	PLSTATE_INIT		1103089						
ANR	1103324	Symbol	* tif		1103089						
ANR	1103325	Symbol	tif -> tif_mode		1103089						
ANR	1103326	Symbol	sp		1103089						
ANR	1103327	Symbol	tif -> tif_data		1103089						
ANR	1103328	Function	PixarLogVSetField	1274:0:36316:38360							
ANR	1103329	FunctionDef	"PixarLogVSetField (TIFF * tif , uint32 tag , va_list ap)"		1103328	0					
ANR	1103330	CompoundStatement		1276:0:36380:38360	1103328	0					
ANR	1103331	Statement	static	1277:4:36386:36391	1103328	0	True				
ANR	1103332	IdentifierDeclStatement	"const char module [ ] = ""PixarLogVSetField"" ;"	1277:11:36393:36434	1103328	1	True				
ANR	1103333	IdentifierDecl	"module [ ] = ""PixarLogVSetField"""		1103328	0					
ANR	1103334	IdentifierDeclType	const char [ ]		1103328	0					
ANR	1103335	Identifier	module		1103328	1					
ANR	1103336	AssignmentExpression	"module [ ] = ""PixarLogVSetField"""		1103328	2		=			
ANR	1103337	Identifier	module		1103328	0					
ANR	1103338	PrimaryExpression	"""PixarLogVSetField"""		1103328	1					
ANR	1103339	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1278:4:36440:36490	1103328	2	True				
ANR	1103340	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		1103328	0					
ANR	1103341	IdentifierDeclType	PixarLogState *		1103328	0					
ANR	1103342	Identifier	sp		1103328	1					
ANR	1103343	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		1103328	2		=			
ANR	1103344	Identifier	sp		1103328	0					
ANR	1103345	CastExpression	( PixarLogState * ) tif -> tif_data		1103328	1					
ANR	1103346	CastTarget	PixarLogState *		1103328	0					
ANR	1103347	PtrMemberAccess	tif -> tif_data		1103328	1					
ANR	1103348	Identifier	tif		1103328	0					
ANR	1103349	Identifier	tif_data		1103328	1					
ANR	1103350	IdentifierDeclStatement	int result ;	1279:4:36496:36506	1103328	3	True				
ANR	1103351	IdentifierDecl	result		1103328	0					
ANR	1103352	IdentifierDeclType	int		1103328	0					
ANR	1103353	Identifier	result		1103328	1					
ANR	1103354	SwitchStatement	switch ( tag )		1103328	4					
ANR	1103355	Condition	tag	1281:12:36521:36523	1103328	0	True				
ANR	1103356	Identifier	tag		1103328	0					
ANR	1103357	CompoundStatement		6:17:145:145	1103328	1					
ANR	1103358	Label	case TIFFTAG_PIXARLOGQUALITY :	1282:5:36533:36561	1103328	0	True				
ANR	1103359	Identifier	TIFFTAG_PIXARLOGQUALITY		1103328	0					
ANR	1103360	ExpressionStatement	"sp -> quality = ( int ) va_arg ( ap , int )"	1283:2:36565:36600	1103328	1	True				
ANR	1103361	AssignmentExpression	"sp -> quality = ( int ) va_arg ( ap , int )"		1103328	0		=			
ANR	1103362	PtrMemberAccess	sp -> quality		1103328	0					
ANR	1103363	Identifier	sp		1103328	0					
ANR	1103364	Identifier	quality		1103328	1					
ANR	1103365	CastExpression	"( int ) va_arg ( ap , int )"		1103328	1					
ANR	1103366	CastTarget	int		1103328	0					
ANR	1103367	CallExpression	"va_arg ( ap , int )"		1103328	1					
ANR	1103368	Callee	va_arg		1103328	0					
ANR	1103369	Identifier	va_arg		1103328	0					
ANR	1103370	ArgumentList	ap		1103328	1					
ANR	1103371	Argument	ap		1103328	0					
ANR	1103372	Identifier	ap		1103328	0					
ANR	1103373	Argument	int		1103328	1					
ANR	1103374	Identifier	int		1103328	0					
ANR	1103375	IfStatement	if ( tif -> tif_mode != O_RDONLY && ( sp -> state & PLSTATE_INIT ) )		1103328	2					
ANR	1103376	Condition	tif -> tif_mode != O_RDONLY && ( sp -> state & PLSTATE_INIT )	1284:6:36608:36660	1103328	0	True				
ANR	1103377	AndExpression	tif -> tif_mode != O_RDONLY && ( sp -> state & PLSTATE_INIT )		1103328	0		&&			
ANR	1103378	EqualityExpression	tif -> tif_mode != O_RDONLY		1103328	0		!=			
ANR	1103379	PtrMemberAccess	tif -> tif_mode		1103328	0					
ANR	1103380	Identifier	tif		1103328	0					
ANR	1103381	Identifier	tif_mode		1103328	1					
ANR	1103382	Identifier	O_RDONLY		1103328	1					
ANR	1103383	BitAndExpression	sp -> state & PLSTATE_INIT		1103328	1		&			
ANR	1103384	PtrMemberAccess	sp -> state		1103328	0					
ANR	1103385	Identifier	sp		1103328	0					
ANR	1103386	Identifier	state		1103328	1					
ANR	1103387	Identifier	PLSTATE_INIT		1103328	1					
ANR	1103388	CompoundStatement		9:61:282:282	1103328	1					
ANR	1103389	IfStatement	"if ( deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY ) != Z_OK )"		1103328	0					
ANR	1103390	Condition	"deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY ) != Z_OK"	1285:7:36672:36745	1103328	0	True				
ANR	1103391	EqualityExpression	"deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY ) != Z_OK"		1103328	0		!=			
ANR	1103392	CallExpression	"deflateParams ( & sp -> stream , sp -> quality , Z_DEFAULT_STRATEGY )"		1103328	0					
ANR	1103393	Callee	deflateParams		1103328	0					
ANR	1103394	Identifier	deflateParams		1103328	0					
ANR	1103395	ArgumentList	& sp -> stream		1103328	1					
ANR	1103396	Argument	& sp -> stream		1103328	0					
ANR	1103397	UnaryOperationExpression	& sp -> stream		1103328	0					
ANR	1103398	UnaryOperator	&		1103328	0					
ANR	1103399	PtrMemberAccess	sp -> stream		1103328	1					
ANR	1103400	Identifier	sp		1103328	0					
ANR	1103401	Identifier	stream		1103328	1					
ANR	1103402	Argument	sp -> quality		1103328	1					
ANR	1103403	PtrMemberAccess	sp -> quality		1103328	0					
ANR	1103404	Identifier	sp		1103328	0					
ANR	1103405	Identifier	quality		1103328	1					
ANR	1103406	Argument	Z_DEFAULT_STRATEGY		1103328	2					
ANR	1103407	Identifier	Z_DEFAULT_STRATEGY		1103328	0					
ANR	1103408	Identifier	Z_OK		1103328	1					
ANR	1103409	CompoundStatement		11:49:367:367	1103328	1					
ANR	1103410	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg )"	1287:4:36754:36834	1103328	0	True				
ANR	1103411	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""ZLib error: %s"" , sp -> stream . msg )"		1103328	0					
ANR	1103412	Callee	TIFFErrorExt		1103328	0					
ANR	1103413	Identifier	TIFFErrorExt		1103328	0					
ANR	1103414	ArgumentList	tif -> tif_clientdata		1103328	1					
ANR	1103415	Argument	tif -> tif_clientdata		1103328	0					
ANR	1103416	PtrMemberAccess	tif -> tif_clientdata		1103328	0					
ANR	1103417	Identifier	tif		1103328	0					
ANR	1103418	Identifier	tif_clientdata		1103328	1					
ANR	1103419	Argument	module		1103328	1					
ANR	1103420	Identifier	module		1103328	0					
ANR	1103421	Argument	"""ZLib error: %s"""		1103328	2					
ANR	1103422	PrimaryExpression	"""ZLib error: %s"""		1103328	0					
ANR	1103423	Argument	sp -> stream . msg		1103328	3					
ANR	1103424	MemberAccess	sp -> stream . msg		1103328	0					
ANR	1103425	PtrMemberAccess	sp -> stream		1103328	0					
ANR	1103426	Identifier	sp		1103328	0					
ANR	1103427	Identifier	stream		1103328	1					
ANR	1103428	Identifier	msg		1103328	1					
ANR	1103429	ReturnStatement	return ( 0 ) ;	1289:4:36840:36850	1103328	1	True				
ANR	1103430	PrimaryExpression	0		1103328	0					
ANR	1103431	ReturnStatement	return ( 1 ) ;	1292:2:36863:36873	1103328	3	True				
ANR	1103432	PrimaryExpression	1		1103328	0					
ANR	1103433	Label	case TIFFTAG_PIXARLOGDATAFMT :	1293:5:36880:36908	1103328	4	True				
ANR	1103434	Identifier	TIFFTAG_PIXARLOGDATAFMT		1103328	0					
ANR	1103435	ExpressionStatement	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"	1294:1:36911:36951	1103328	5	True				
ANR	1103436	AssignmentExpression	"sp -> user_datafmt = ( int ) va_arg ( ap , int )"		1103328	0		=			
ANR	1103437	PtrMemberAccess	sp -> user_datafmt		1103328	0					
ANR	1103438	Identifier	sp		1103328	0					
ANR	1103439	Identifier	user_datafmt		1103328	1					
ANR	1103440	CastExpression	"( int ) va_arg ( ap , int )"		1103328	1					
ANR	1103441	CastTarget	int		1103328	0					
ANR	1103442	CallExpression	"va_arg ( ap , int )"		1103328	1					
ANR	1103443	Callee	va_arg		1103328	0					
ANR	1103444	Identifier	va_arg		1103328	0					
ANR	1103445	ArgumentList	ap		1103328	1					
ANR	1103446	Argument	ap		1103328	0					
ANR	1103447	Identifier	ap		1103328	0					
ANR	1103448	Argument	int		1103328	1					
ANR	1103449	Identifier	int		1103328	0					
ANR	1103450	SwitchStatement	switch ( sp -> user_datafmt )		1103328	6					
ANR	1103451	Condition	sp -> user_datafmt	1300:9:37197:37212	1103328	0	True				
ANR	1103452	PtrMemberAccess	sp -> user_datafmt		1103328	0					
ANR	1103453	Identifier	sp		1103328	0					
ANR	1103454	Identifier	user_datafmt		1103328	1					
ANR	1103455	CompoundStatement		25:27:834:834	1103328	1					
ANR	1103456	Label	case PIXARLOGDATAFMT_8BIT :	1301:2:37219:37244	1103328	0	True				
ANR	1103457	Identifier	PIXARLOGDATAFMT_8BIT		1103328	0					
ANR	1103458	Label	case PIXARLOGDATAFMT_8BITABGR :	1302:2:37248:37277	1103328	1	True				
ANR	1103459	Identifier	PIXARLOGDATAFMT_8BITABGR		1103328	0					
ANR	1103460	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )"	1303:5:37284:37327	1103328	2	True				
ANR	1103461	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 8 )"		1103328	0					
ANR	1103462	Callee	TIFFSetField		1103328	0					
ANR	1103463	Identifier	TIFFSetField		1103328	0					
ANR	1103464	ArgumentList	tif		1103328	1					
ANR	1103465	Argument	tif		1103328	0					
ANR	1103466	Identifier	tif		1103328	0					
ANR	1103467	Argument	TIFFTAG_BITSPERSAMPLE		1103328	1					
ANR	1103468	Identifier	TIFFTAG_BITSPERSAMPLE		1103328	0					
ANR	1103469	Argument	8		1103328	2					
ANR	1103470	PrimaryExpression	8		1103328	0					
ANR	1103471	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"	1304:5:37334:37392	1103328	3	True				
ANR	1103472	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"		1103328	0					
ANR	1103473	Callee	TIFFSetField		1103328	0					
ANR	1103474	Identifier	TIFFSetField		1103328	0					
ANR	1103475	ArgumentList	tif		1103328	1					
ANR	1103476	Argument	tif		1103328	0					
ANR	1103477	Identifier	tif		1103328	0					
ANR	1103478	Argument	TIFFTAG_SAMPLEFORMAT		1103328	1					
ANR	1103479	Identifier	TIFFTAG_SAMPLEFORMAT		1103328	0					
ANR	1103480	Argument	SAMPLEFORMAT_UINT		1103328	2					
ANR	1103481	Identifier	SAMPLEFORMAT_UINT		1103328	0					
ANR	1103482	BreakStatement	break ;	1305:5:37399:37404	1103328	4	True				
ANR	1103483	Label	case PIXARLOGDATAFMT_11BITLOG :	1306:2:37408:37437	1103328	5	True				
ANR	1103484	Identifier	PIXARLOGDATAFMT_11BITLOG		1103328	0					
ANR	1103485	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"	1307:5:37444:37488	1103328	6	True				
ANR	1103486	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"		1103328	0					
ANR	1103487	Callee	TIFFSetField		1103328	0					
ANR	1103488	Identifier	TIFFSetField		1103328	0					
ANR	1103489	ArgumentList	tif		1103328	1					
ANR	1103490	Argument	tif		1103328	0					
ANR	1103491	Identifier	tif		1103328	0					
ANR	1103492	Argument	TIFFTAG_BITSPERSAMPLE		1103328	1					
ANR	1103493	Identifier	TIFFTAG_BITSPERSAMPLE		1103328	0					
ANR	1103494	Argument	16		1103328	2					
ANR	1103495	PrimaryExpression	16		1103328	0					
ANR	1103496	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"	1308:5:37495:37553	1103328	7	True				
ANR	1103497	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"		1103328	0					
ANR	1103498	Callee	TIFFSetField		1103328	0					
ANR	1103499	Identifier	TIFFSetField		1103328	0					
ANR	1103500	ArgumentList	tif		1103328	1					
ANR	1103501	Argument	tif		1103328	0					
ANR	1103502	Identifier	tif		1103328	0					
ANR	1103503	Argument	TIFFTAG_SAMPLEFORMAT		1103328	1					
ANR	1103504	Identifier	TIFFTAG_SAMPLEFORMAT		1103328	0					
ANR	1103505	Argument	SAMPLEFORMAT_UINT		1103328	2					
ANR	1103506	Identifier	SAMPLEFORMAT_UINT		1103328	0					
ANR	1103507	BreakStatement	break ;	1309:5:37560:37565	1103328	8	True				
ANR	1103508	Label	case PIXARLOGDATAFMT_12BITPICIO :	1310:2:37569:37600	1103328	9	True				
ANR	1103509	Identifier	PIXARLOGDATAFMT_12BITPICIO		1103328	0					
ANR	1103510	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"	1311:5:37607:37651	1103328	10	True				
ANR	1103511	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"		1103328	0					
ANR	1103512	Callee	TIFFSetField		1103328	0					
ANR	1103513	Identifier	TIFFSetField		1103328	0					
ANR	1103514	ArgumentList	tif		1103328	1					
ANR	1103515	Argument	tif		1103328	0					
ANR	1103516	Identifier	tif		1103328	0					
ANR	1103517	Argument	TIFFTAG_BITSPERSAMPLE		1103328	1					
ANR	1103518	Identifier	TIFFTAG_BITSPERSAMPLE		1103328	0					
ANR	1103519	Argument	16		1103328	2					
ANR	1103520	PrimaryExpression	16		1103328	0					
ANR	1103521	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_INT )"	1312:5:37658:37715	1103328	11	True				
ANR	1103522	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_INT )"		1103328	0					
ANR	1103523	Callee	TIFFSetField		1103328	0					
ANR	1103524	Identifier	TIFFSetField		1103328	0					
ANR	1103525	ArgumentList	tif		1103328	1					
ANR	1103526	Argument	tif		1103328	0					
ANR	1103527	Identifier	tif		1103328	0					
ANR	1103528	Argument	TIFFTAG_SAMPLEFORMAT		1103328	1					
ANR	1103529	Identifier	TIFFTAG_SAMPLEFORMAT		1103328	0					
ANR	1103530	Argument	SAMPLEFORMAT_INT		1103328	2					
ANR	1103531	Identifier	SAMPLEFORMAT_INT		1103328	0					
ANR	1103532	BreakStatement	break ;	1313:5:37722:37727	1103328	12	True				
ANR	1103533	Label	case PIXARLOGDATAFMT_16BIT :	1314:2:37731:37757	1103328	13	True				
ANR	1103534	Identifier	PIXARLOGDATAFMT_16BIT		1103328	0					
ANR	1103535	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"	1315:5:37764:37808	1103328	14	True				
ANR	1103536	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 16 )"		1103328	0					
ANR	1103537	Callee	TIFFSetField		1103328	0					
ANR	1103538	Identifier	TIFFSetField		1103328	0					
ANR	1103539	ArgumentList	tif		1103328	1					
ANR	1103540	Argument	tif		1103328	0					
ANR	1103541	Identifier	tif		1103328	0					
ANR	1103542	Argument	TIFFTAG_BITSPERSAMPLE		1103328	1					
ANR	1103543	Identifier	TIFFTAG_BITSPERSAMPLE		1103328	0					
ANR	1103544	Argument	16		1103328	2					
ANR	1103545	PrimaryExpression	16		1103328	0					
ANR	1103546	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"	1316:5:37815:37873	1103328	15	True				
ANR	1103547	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_UINT )"		1103328	0					
ANR	1103548	Callee	TIFFSetField		1103328	0					
ANR	1103549	Identifier	TIFFSetField		1103328	0					
ANR	1103550	ArgumentList	tif		1103328	1					
ANR	1103551	Argument	tif		1103328	0					
ANR	1103552	Identifier	tif		1103328	0					
ANR	1103553	Argument	TIFFTAG_SAMPLEFORMAT		1103328	1					
ANR	1103554	Identifier	TIFFTAG_SAMPLEFORMAT		1103328	0					
ANR	1103555	Argument	SAMPLEFORMAT_UINT		1103328	2					
ANR	1103556	Identifier	SAMPLEFORMAT_UINT		1103328	0					
ANR	1103557	BreakStatement	break ;	1317:5:37880:37885	1103328	16	True				
ANR	1103558	Label	case PIXARLOGDATAFMT_FLOAT :	1318:2:37889:37915	1103328	17	True				
ANR	1103559	Identifier	PIXARLOGDATAFMT_FLOAT		1103328	0					
ANR	1103560	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 32 )"	1319:5:37922:37966	1103328	18	True				
ANR	1103561	CallExpression	"TIFFSetField ( tif , TIFFTAG_BITSPERSAMPLE , 32 )"		1103328	0					
ANR	1103562	Callee	TIFFSetField		1103328	0					
ANR	1103563	Identifier	TIFFSetField		1103328	0					
ANR	1103564	ArgumentList	tif		1103328	1					
ANR	1103565	Argument	tif		1103328	0					
ANR	1103566	Identifier	tif		1103328	0					
ANR	1103567	Argument	TIFFTAG_BITSPERSAMPLE		1103328	1					
ANR	1103568	Identifier	TIFFTAG_BITSPERSAMPLE		1103328	0					
ANR	1103569	Argument	32		1103328	2					
ANR	1103570	PrimaryExpression	32		1103328	0					
ANR	1103571	ExpressionStatement	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_IEEEFP )"	1320:5:37973:38033	1103328	19	True				
ANR	1103572	CallExpression	"TIFFSetField ( tif , TIFFTAG_SAMPLEFORMAT , SAMPLEFORMAT_IEEEFP )"		1103328	0					
ANR	1103573	Callee	TIFFSetField		1103328	0					
ANR	1103574	Identifier	TIFFSetField		1103328	0					
ANR	1103575	ArgumentList	tif		1103328	1					
ANR	1103576	Argument	tif		1103328	0					
ANR	1103577	Identifier	tif		1103328	0					
ANR	1103578	Argument	TIFFTAG_SAMPLEFORMAT		1103328	1					
ANR	1103579	Identifier	TIFFTAG_SAMPLEFORMAT		1103328	0					
ANR	1103580	Argument	SAMPLEFORMAT_IEEEFP		1103328	2					
ANR	1103581	Identifier	SAMPLEFORMAT_IEEEFP		1103328	0					
ANR	1103582	BreakStatement	break ;	1321:5:38040:38045	1103328	20	True				
ANR	1103583	ExpressionStatement	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) ( - 1 )	1326:1:38114:38183	1103328	7	True				
ANR	1103584	AssignmentExpression	tif -> tif_tilesize = isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) ( - 1 )		1103328	0		=			
ANR	1103585	PtrMemberAccess	tif -> tif_tilesize		1103328	0					
ANR	1103586	Identifier	tif		1103328	0					
ANR	1103587	Identifier	tif_tilesize		1103328	1					
ANR	1103588	ConditionalExpression	isTiled ( tif ) ? TIFFTileSize ( tif ) : ( tmsize_t ) ( - 1 )		1103328	1					
ANR	1103589	Condition	isTiled ( tif )		1103328	0					
ANR	1103590	CallExpression	isTiled ( tif )		1103328	0					
ANR	1103591	Callee	isTiled		1103328	0					
ANR	1103592	Identifier	isTiled		1103328	0					
ANR	1103593	ArgumentList	tif		1103328	1					
ANR	1103594	Argument	tif		1103328	0					
ANR	1103595	Identifier	tif		1103328	0					
ANR	1103596	CallExpression	TIFFTileSize ( tif )		1103328	1					
ANR	1103597	Callee	TIFFTileSize		1103328	0					
ANR	1103598	Identifier	TIFFTileSize		1103328	0					
ANR	1103599	ArgumentList	tif		1103328	1					
ANR	1103600	Argument	tif		1103328	0					
ANR	1103601	Identifier	tif		1103328	0					
ANR	1103602	CastExpression	( tmsize_t ) ( - 1 )		1103328	2					
ANR	1103603	CastTarget	tmsize_t		1103328	0					
ANR	1103604	UnaryOperationExpression	- 1		1103328	1					
ANR	1103605	UnaryOperator	-		1103328	0					
ANR	1103606	PrimaryExpression	1		1103328	1					
ANR	1103607	ExpressionStatement	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )	1327:1:38186:38231	1103328	8	True				
ANR	1103608	AssignmentExpression	tif -> tif_scanlinesize = TIFFScanlineSize ( tif )		1103328	0		=			
ANR	1103609	PtrMemberAccess	tif -> tif_scanlinesize		1103328	0					
ANR	1103610	Identifier	tif		1103328	0					
ANR	1103611	Identifier	tif_scanlinesize		1103328	1					
ANR	1103612	CallExpression	TIFFScanlineSize ( tif )		1103328	1					
ANR	1103613	Callee	TIFFScanlineSize		1103328	0					
ANR	1103614	Identifier	TIFFScanlineSize		1103328	0					
ANR	1103615	ArgumentList	tif		1103328	1					
ANR	1103616	Argument	tif		1103328	0					
ANR	1103617	Identifier	tif		1103328	0					
ANR	1103618	ExpressionStatement	result = 1	1328:1:38234:38244	1103328	9	True				
ANR	1103619	AssignmentExpression	result = 1		1103328	0		=			
ANR	1103620	Identifier	result		1103328	0					
ANR	1103621	PrimaryExpression	1		1103328	1					
ANR	1103622	BreakStatement	break ;	1329:1:38269:38274	1103328	10	True				
ANR	1103623	Label	default :	1330:5:38281:38288	1103328	11	True				
ANR	1103624	Identifier	default		1103328	0					
ANR	1103625	ExpressionStatement	"result = ( * sp -> vsetparent ) ( tif , tag , ap )"	1331:1:38291:38331	1103328	12	True				
ANR	1103626	AssignmentExpression	"result = ( * sp -> vsetparent ) ( tif , tag , ap )"		1103328	0		=			
ANR	1103627	Identifier	result		1103328	0					
ANR	1103628	CallExpression	"( * sp -> vsetparent ) ( tif , tag , ap )"		1103328	1					
ANR	1103629	Callee	* sp -> vsetparent		1103328	0					
ANR	1103630	UnaryOperationExpression	* sp -> vsetparent		1103328	0					
ANR	1103631	UnaryOperator	*		1103328	0					
ANR	1103632	PtrMemberAccess	sp -> vsetparent		1103328	1					
ANR	1103633	Identifier	sp		1103328	0					
ANR	1103634	Identifier	vsetparent		1103328	1					
ANR	1103635	ArgumentList	tif		1103328	1					
ANR	1103636	Argument	tif		1103328	0					
ANR	1103637	Identifier	tif		1103328	0					
ANR	1103638	Argument	tag		1103328	1					
ANR	1103639	Identifier	tag		1103328	0					
ANR	1103640	Argument	ap		1103328	2					
ANR	1103641	Identifier	ap		1103328	0					
ANR	1103642	ReturnStatement	return ( result ) ;	1333:4:38343:38358	1103328	5	True				
ANR	1103643	Identifier	result		1103328	0					
ANR	1103644	ReturnType	static int		1103328	1					
ANR	1103645	Identifier	PixarLogVSetField		1103328	2					
ANR	1103646	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		1103328	3					
ANR	1103647	Parameter	TIFF * tif	1275:18:36345:36353	1103328	0	True				
ANR	1103648	ParameterType	TIFF *		1103328	0					
ANR	1103649	Identifier	tif		1103328	1					
ANR	1103650	Parameter	uint32 tag	1275:29:36356:36365	1103328	1	True				
ANR	1103651	ParameterType	uint32		1103328	0					
ANR	1103652	Identifier	tag		1103328	1					
ANR	1103653	Parameter	va_list ap	1275:41:36368:36377	1103328	2	True				
ANR	1103654	ParameterType	va_list		1103328	0					
ANR	1103655	Identifier	ap		1103328	1					
ANR	1103656	CFGEntryNode	ENTRY		1103328		True				
ANR	1103657	CFGExitNode	EXIT		1103328		True				
ANR	1103658	Symbol	* sp		1103328						
ANR	1103659	Symbol	SAMPLEFORMAT_UINT		1103328						
ANR	1103660	Symbol	TIFFTAG_SAMPLEFORMAT		1103328						
ANR	1103661	Symbol	tif -> tif_tilesize		1103328						
ANR	1103662	Symbol	& sp -> stream		1103328						
ANR	1103663	Symbol	sp -> user_datafmt		1103328						
ANR	1103664	Symbol	Z_OK		1103328						
ANR	1103665	Symbol	* * sp		1103328						
ANR	1103666	Symbol	tif		1103328						
ANR	1103667	Symbol	result		1103328						
ANR	1103668	Symbol	isTiled		1103328						
ANR	1103669	Symbol	sp -> stream . msg		1103328						
ANR	1103670	Symbol	tif -> tif_scanlinesize		1103328						
ANR	1103671	Symbol	PLSTATE_INIT		1103328						
ANR	1103672	Symbol	tag		1103328						
ANR	1103673	Symbol	tif -> tif_mode		1103328						
ANR	1103674	Symbol	sp		1103328						
ANR	1103675	Symbol	va_arg		1103328						
ANR	1103676	Symbol	tif -> tif_data		1103328						
ANR	1103677	Symbol	Z_DEFAULT_STRATEGY		1103328						
ANR	1103678	Symbol	TIFFScanlineSize		1103328						
ANR	1103679	Symbol	* sp -> vsetparent		1103328						
ANR	1103680	Symbol	SAMPLEFORMAT_INT		1103328						
ANR	1103681	Symbol	module		1103328						
ANR	1103682	Symbol	deflateParams		1103328						
ANR	1103683	Symbol	SAMPLEFORMAT_IEEEFP		1103328						
ANR	1103684	Symbol	sp -> state		1103328						
ANR	1103685	Symbol	sp -> vsetparent		1103328						
ANR	1103686	Symbol	int		1103328						
ANR	1103687	Symbol	ap		1103328						
ANR	1103688	Symbol	sp -> quality		1103328						
ANR	1103689	Symbol	tif -> tif_clientdata		1103328						
ANR	1103690	Symbol	TIFFTAG_BITSPERSAMPLE		1103328						
ANR	1103691	Symbol	O_RDONLY		1103328						
ANR	1103692	Symbol	sp -> stream		1103328						
ANR	1103693	Symbol	* tif		1103328						
ANR	1103694	Symbol	TIFFTileSize		1103328						
ANR	1103695	Function	PixarLogVGetField	1336:0:38363:38741							
ANR	1103696	FunctionDef	"PixarLogVGetField (TIFF * tif , uint32 tag , va_list ap)"		1103695	0					
ANR	1103697	CompoundStatement		1338:0:38427:38741	1103695	0					
ANR	1103698	IdentifierDeclStatement	PixarLogState * sp = ( PixarLogState * ) tif -> tif_data ;	1339:4:38433:38483	1103695	0	True				
ANR	1103699	IdentifierDecl	* sp = ( PixarLogState * ) tif -> tif_data		1103695	0					
ANR	1103700	IdentifierDeclType	PixarLogState *		1103695	0					
ANR	1103701	Identifier	sp		1103695	1					
ANR	1103702	AssignmentExpression	* sp = ( PixarLogState * ) tif -> tif_data		1103695	2		=			
ANR	1103703	Identifier	sp		1103695	0					
ANR	1103704	CastExpression	( PixarLogState * ) tif -> tif_data		1103695	1					
ANR	1103705	CastTarget	PixarLogState *		1103695	0					
ANR	1103706	PtrMemberAccess	tif -> tif_data		1103695	1					
ANR	1103707	Identifier	tif		1103695	0					
ANR	1103708	Identifier	tif_data		1103695	1					
ANR	1103709	SwitchStatement	switch ( tag )		1103695	1					
ANR	1103710	Condition	tag	1341:12:38498:38500	1103695	0	True				
ANR	1103711	Identifier	tag		1103695	0					
ANR	1103712	CompoundStatement		4:17:75:75	1103695	1					
ANR	1103713	Label	case TIFFTAG_PIXARLOGQUALITY :	1342:5:38510:38538	1103695	0	True				
ANR	1103714	Identifier	TIFFTAG_PIXARLOGQUALITY		1103695	0					
ANR	1103715	Statement	*	1343:1:38541:38541	1103695	1	True				
ANR	1103716	Statement	va_arg	1343:2:38542:38547	1103695	2	True				
ANR	1103717	Statement	(	1343:8:38548:38548	1103695	3	True				
ANR	1103718	Statement	ap	1343:9:38549:38550	1103695	4	True				
ANR	1103719	Statement	","	1343:11:38551:38551	1103695	5	True				
ANR	1103720	Statement	int	1343:13:38553:38555	1103695	6	True				
ANR	1103721	Statement	*	1343:16:38556:38556	1103695	7	True				
ANR	1103722	Statement	)	1343:17:38557:38557	1103695	8	True				
ANR	1103723	Statement	=	1343:19:38559:38559	1103695	9	True				
ANR	1103724	ExpressionStatement	sp -> quality	1343:21:38561:38572	1103695	10	True				
ANR	1103725	PtrMemberAccess	sp -> quality		1103695	0					
ANR	1103726	Identifier	sp		1103695	0					
ANR	1103727	Identifier	quality		1103695	1					
ANR	1103728	BreakStatement	break ;	1344:1:38575:38580	1103695	11	True				
ANR	1103729	Label	case TIFFTAG_PIXARLOGDATAFMT :	1345:5:38587:38615	1103695	12	True				
ANR	1103730	Identifier	TIFFTAG_PIXARLOGDATAFMT		1103695	0					
ANR	1103731	Statement	*	1346:1:38618:38618	1103695	13	True				
ANR	1103732	Statement	va_arg	1346:2:38619:38624	1103695	14	True				
ANR	1103733	Statement	(	1346:8:38625:38625	1103695	15	True				
ANR	1103734	Statement	ap	1346:9:38626:38627	1103695	16	True				
ANR	1103735	Statement	","	1346:11:38628:38628	1103695	17	True				
ANR	1103736	Statement	int	1346:13:38630:38632	1103695	18	True				
ANR	1103737	Statement	*	1346:16:38633:38633	1103695	19	True				
ANR	1103738	Statement	)	1346:17:38634:38634	1103695	20	True				
ANR	1103739	Statement	=	1346:19:38636:38636	1103695	21	True				
ANR	1103740	ExpressionStatement	sp -> user_datafmt	1346:21:38638:38654	1103695	22	True				
ANR	1103741	PtrMemberAccess	sp -> user_datafmt		1103695	0					
ANR	1103742	Identifier	sp		1103695	0					
ANR	1103743	Identifier	user_datafmt		1103695	1					
ANR	1103744	BreakStatement	break ;	1347:1:38657:38662	1103695	23	True				
ANR	1103745	Label	default :	1348:5:38669:38676	1103695	24	True				
ANR	1103746	Identifier	default		1103695	0					
ANR	1103747	ReturnStatement	"return ( * sp -> vgetparent ) ( tif , tag , ap ) ;"	1349:1:38679:38717	1103695	25	True				
ANR	1103748	CallExpression	"( * sp -> vgetparent ) ( tif , tag , ap )"		1103695	0					
ANR	1103749	Callee	* sp -> vgetparent		1103695	0					
ANR	1103750	UnaryOperationExpression	* sp -> vgetparent		1103695	0					
ANR	1103751	UnaryOperator	*		1103695	0					
ANR	1103752	PtrMemberAccess	sp -> vgetparent		1103695	1					
ANR	1103753	Identifier	sp		1103695	0					
ANR	1103754	Identifier	vgetparent		1103695	1					
ANR	1103755	ArgumentList	tif		1103695	1					
ANR	1103756	Argument	tif		1103695	0					
ANR	1103757	Identifier	tif		1103695	0					
ANR	1103758	Argument	tag		1103695	1					
ANR	1103759	Identifier	tag		1103695	0					
ANR	1103760	Argument	ap		1103695	2					
ANR	1103761	Identifier	ap		1103695	0					
ANR	1103762	ReturnStatement	return ( 1 ) ;	1351:4:38729:38739	1103695	2	True				
ANR	1103763	PrimaryExpression	1		1103695	0					
ANR	1103764	ReturnType	static int		1103695	1					
ANR	1103765	Identifier	PixarLogVGetField		1103695	2					
ANR	1103766	ParameterList	"TIFF * tif , uint32 tag , va_list ap"		1103695	3					
ANR	1103767	Parameter	TIFF * tif	1337:18:38392:38400	1103695	0	True				
ANR	1103768	ParameterType	TIFF *		1103695	0					
ANR	1103769	Identifier	tif		1103695	1					
ANR	1103770	Parameter	uint32 tag	1337:29:38403:38412	1103695	1	True				
ANR	1103771	ParameterType	uint32		1103695	0					
ANR	1103772	Identifier	tag		1103695	1					
ANR	1103773	Parameter	va_list ap	1337:41:38415:38424	1103695	2	True				
ANR	1103774	ParameterType	va_list		1103695	0					
ANR	1103775	Identifier	ap		1103695	1					
ANR	1103776	CFGEntryNode	ENTRY		1103695		True				
ANR	1103777	CFGExitNode	EXIT		1103695		True				
ANR	1103778	Symbol	tif		1103695						
ANR	1103779	Symbol	* sp		1103695						
ANR	1103780	Symbol	* sp -> vgetparent		1103695						
ANR	1103781	Symbol	tag		1103695						
ANR	1103782	Symbol	* tif		1103695						
ANR	1103783	Symbol	* * sp		1103695						
ANR	1103784	Symbol	sp -> vgetparent		1103695						
ANR	1103785	Symbol	sp		1103695						
ANR	1103786	Symbol	tif -> tif_data		1103695						
ANR	1103787	Symbol	ap		1103695						
ANR	1103788	DeclStmt									
ANR	1103789	Decl							const TIFFField	const TIFFField [ ]	pixarlogFields
ANR	1103790	Function	TIFFInitPixarLog	1359:0:39047:41170							
ANR	1103791	FunctionDef	"TIFFInitPixarLog (TIFF * tif , int scheme)"		1103790	0					
ANR	1103792	CompoundStatement		1361:0:39091:41170	1103790	0					
ANR	1103793	Statement	static	1362:1:39094:39099	1103790	0	True				
ANR	1103794	IdentifierDeclStatement	"const char module [ ] = ""TIFFInitPixarLog"" ;"	1362:8:39101:39141	1103790	1	True				
ANR	1103795	IdentifierDecl	"module [ ] = ""TIFFInitPixarLog"""		1103790	0					
ANR	1103796	IdentifierDeclType	const char [ ]		1103790	0					
ANR	1103797	Identifier	module		1103790	1					
ANR	1103798	AssignmentExpression	"module [ ] = ""TIFFInitPixarLog"""		1103790	2		=			
ANR	1103799	Identifier	module		1103790	0					
ANR	1103800	PrimaryExpression	"""TIFFInitPixarLog"""		1103790	1					
ANR	1103801	IdentifierDeclStatement	PixarLogState * sp ;	1364:1:39145:39162	1103790	2	True				
ANR	1103802	IdentifierDecl	* sp		1103790	0					
ANR	1103803	IdentifierDeclType	PixarLogState *		1103790	0					
ANR	1103804	Identifier	sp		1103790	1					
ANR	1103805	ExpressionStatement	assert ( scheme == COMPRESSION_PIXARLOG )	1366:1:39166:39204	1103790	3	True				
ANR	1103806	CallExpression	assert ( scheme == COMPRESSION_PIXARLOG )		1103790	0					
ANR	1103807	Callee	assert		1103790	0					
ANR	1103808	Identifier	assert		1103790	0					
ANR	1103809	ArgumentList	scheme == COMPRESSION_PIXARLOG		1103790	1					
ANR	1103810	Argument	scheme == COMPRESSION_PIXARLOG		1103790	0					
ANR	1103811	EqualityExpression	scheme == COMPRESSION_PIXARLOG		1103790	0		==			
ANR	1103812	Identifier	scheme		1103790	0					
ANR	1103813	Identifier	COMPRESSION_PIXARLOG		1103790	1					
ANR	1103814	IfStatement	"if ( ! _TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) ) )"		1103790	4					
ANR	1103815	Condition	"! _TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) )"	1371:5:39263:39341	1103790	0	True				
ANR	1103816	UnaryOperationExpression	"! _TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) )"		1103790	0					
ANR	1103817	UnaryOperator	!		1103790	0					
ANR	1103818	CallExpression	"_TIFFMergeFields ( tif , pixarlogFields , TIFFArrayCount ( pixarlogFields ) )"		1103790	1					
ANR	1103819	Callee	_TIFFMergeFields		1103790	0					
ANR	1103820	Identifier	_TIFFMergeFields		1103790	0					
ANR	1103821	ArgumentList	tif		1103790	1					
ANR	1103822	Argument	tif		1103790	0					
ANR	1103823	Identifier	tif		1103790	0					
ANR	1103824	Argument	pixarlogFields		1103790	1					
ANR	1103825	Identifier	pixarlogFields		1103790	0					
ANR	1103826	Argument	TIFFArrayCount ( pixarlogFields )		1103790	2					
ANR	1103827	CallExpression	TIFFArrayCount ( pixarlogFields )		1103790	0					
ANR	1103828	Callee	TIFFArrayCount		1103790	0					
ANR	1103829	Identifier	TIFFArrayCount		1103790	0					
ANR	1103830	ArgumentList	pixarlogFields		1103790	1					
ANR	1103831	Argument	pixarlogFields		1103790	0					
ANR	1103832	Identifier	pixarlogFields		1103790	0					
ANR	1103833	CompoundStatement		12:42:252:252	1103790	1					
ANR	1103834	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging PixarLog codec-specific tags failed"" )"	1373:2:39348:39444	1103790	0	True				
ANR	1103835	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""Merging PixarLog codec-specific tags failed"" )"		1103790	0					
ANR	1103836	Callee	TIFFErrorExt		1103790	0					
ANR	1103837	Identifier	TIFFErrorExt		1103790	0					
ANR	1103838	ArgumentList	tif -> tif_clientdata		1103790	1					
ANR	1103839	Argument	tif -> tif_clientdata		1103790	0					
ANR	1103840	PtrMemberAccess	tif -> tif_clientdata		1103790	0					
ANR	1103841	Identifier	tif		1103790	0					
ANR	1103842	Identifier	tif_clientdata		1103790	1					
ANR	1103843	Argument	module		1103790	1					
ANR	1103844	Identifier	module		1103790	0					
ANR	1103845	Argument	"""Merging PixarLog codec-specific tags failed"""		1103790	2					
ANR	1103846	PrimaryExpression	"""Merging PixarLog codec-specific tags failed"""		1103790	0					
ANR	1103847	ReturnStatement	return 0 ;	1375:2:39448:39456	1103790	1	True				
ANR	1103848	PrimaryExpression	0		1103790	0					
ANR	1103849	ExpressionStatement	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( PixarLogState ) )	1381:1:39543:39603	1103790	5	True				
ANR	1103850	AssignmentExpression	tif -> tif_data = ( uint8 * ) _TIFFmalloc ( sizeof ( PixarLogState ) )		1103790	0		=			
ANR	1103851	PtrMemberAccess	tif -> tif_data		1103790	0					
ANR	1103852	Identifier	tif		1103790	0					
ANR	1103853	Identifier	tif_data		1103790	1					
ANR	1103854	CastExpression	( uint8 * ) _TIFFmalloc ( sizeof ( PixarLogState ) )		1103790	1					
ANR	1103855	CastTarget	uint8 *		1103790	0					
ANR	1103856	CallExpression	_TIFFmalloc ( sizeof ( PixarLogState ) )		1103790	1					
ANR	1103857	Callee	_TIFFmalloc		1103790	0					
ANR	1103858	Identifier	_TIFFmalloc		1103790	0					
ANR	1103859	ArgumentList	sizeof ( PixarLogState )		1103790	1					
ANR	1103860	Argument	sizeof ( PixarLogState )		1103790	0					
ANR	1103861	SizeofExpression	sizeof ( PixarLogState )		1103790	0					
ANR	1103862	Sizeof	sizeof		1103790	0					
ANR	1103863	SizeofOperand	PixarLogState		1103790	1					
ANR	1103864	IfStatement	if ( tif -> tif_data == NULL )		1103790	6					
ANR	1103865	Condition	tif -> tif_data == NULL	1382:5:39610:39630	1103790	0	True				
ANR	1103866	EqualityExpression	tif -> tif_data == NULL		1103790	0		==			
ANR	1103867	PtrMemberAccess	tif -> tif_data		1103790	0					
ANR	1103868	Identifier	tif		1103790	0					
ANR	1103869	Identifier	tif_data		1103790	1					
ANR	1103870	Identifier	NULL		1103790	1					
ANR	1103871	GotoStatement	goto bad ;	1383:2:39635:39643	1103790	1	True				
ANR	1103872	Identifier	bad		1103790	0					
ANR	1103873	ExpressionStatement	sp = ( PixarLogState * ) tif -> tif_data	1384:1:39646:39681	1103790	7	True				
ANR	1103874	AssignmentExpression	sp = ( PixarLogState * ) tif -> tif_data		1103790	0		=			
ANR	1103875	Identifier	sp		1103790	0					
ANR	1103876	CastExpression	( PixarLogState * ) tif -> tif_data		1103790	1					
ANR	1103877	CastTarget	PixarLogState *		1103790	0					
ANR	1103878	PtrMemberAccess	tif -> tif_data		1103790	1					
ANR	1103879	Identifier	tif		1103790	0					
ANR	1103880	Identifier	tif_data		1103790	1					
ANR	1103881	ExpressionStatement	"_TIFFmemset ( sp , 0 , sizeof ( * sp ) )"	1385:1:39684:39716	1103790	8	True				
ANR	1103882	CallExpression	"_TIFFmemset ( sp , 0 , sizeof ( * sp ) )"		1103790	0					
ANR	1103883	Callee	_TIFFmemset		1103790	0					
ANR	1103884	Identifier	_TIFFmemset		1103790	0					
ANR	1103885	ArgumentList	sp		1103790	1					
ANR	1103886	Argument	sp		1103790	0					
ANR	1103887	Identifier	sp		1103790	0					
ANR	1103888	Argument	0		1103790	1					
ANR	1103889	PrimaryExpression	0		1103790	0					
ANR	1103890	Argument	sizeof ( * sp )		1103790	2					
ANR	1103891	SizeofExpression	sizeof ( * sp )		1103790	0					
ANR	1103892	Sizeof	sizeof		1103790	0					
ANR	1103893	UnaryOperationExpression	* sp		1103790	1					
ANR	1103894	UnaryOperator	*		1103790	0					
ANR	1103895	Identifier	sp		1103790	1					
ANR	1103896	ExpressionStatement	sp -> stream . data_type = Z_BINARY	1386:1:39719:39750	1103790	9	True				
ANR	1103897	AssignmentExpression	sp -> stream . data_type = Z_BINARY		1103790	0		=			
ANR	1103898	MemberAccess	sp -> stream . data_type		1103790	0					
ANR	1103899	PtrMemberAccess	sp -> stream		1103790	0					
ANR	1103900	Identifier	sp		1103790	0					
ANR	1103901	Identifier	stream		1103790	1					
ANR	1103902	Identifier	data_type		1103790	1					
ANR	1103903	Identifier	Z_BINARY		1103790	1					
ANR	1103904	ExpressionStatement	sp -> user_datafmt = PIXARLOGDATAFMT_UNKNOWN	1387:1:39753:39795	1103790	10	True				
ANR	1103905	AssignmentExpression	sp -> user_datafmt = PIXARLOGDATAFMT_UNKNOWN		1103790	0		=			
ANR	1103906	PtrMemberAccess	sp -> user_datafmt		1103790	0					
ANR	1103907	Identifier	sp		1103790	0					
ANR	1103908	Identifier	user_datafmt		1103790	1					
ANR	1103909	Identifier	PIXARLOGDATAFMT_UNKNOWN		1103790	1					
ANR	1103910	ExpressionStatement	tif -> tif_fixuptags = PixarLogFixupTags	1392:1:39835:39873	1103790	11	True				
ANR	1103911	AssignmentExpression	tif -> tif_fixuptags = PixarLogFixupTags		1103790	0		=			
ANR	1103912	PtrMemberAccess	tif -> tif_fixuptags		1103790	0					
ANR	1103913	Identifier	tif		1103790	0					
ANR	1103914	Identifier	tif_fixuptags		1103790	1					
ANR	1103915	Identifier	PixarLogFixupTags		1103790	1					
ANR	1103916	ExpressionStatement	tif -> tif_setupdecode = PixarLogSetupDecode	1393:1:39877:39919	1103790	12	True				
ANR	1103917	AssignmentExpression	tif -> tif_setupdecode = PixarLogSetupDecode		1103790	0		=			
ANR	1103918	PtrMemberAccess	tif -> tif_setupdecode		1103790	0					
ANR	1103919	Identifier	tif		1103790	0					
ANR	1103920	Identifier	tif_setupdecode		1103790	1					
ANR	1103921	Identifier	PixarLogSetupDecode		1103790	1					
ANR	1103922	ExpressionStatement	tif -> tif_predecode = PixarLogPreDecode	1394:1:39922:39960	1103790	13	True				
ANR	1103923	AssignmentExpression	tif -> tif_predecode = PixarLogPreDecode		1103790	0		=			
ANR	1103924	PtrMemberAccess	tif -> tif_predecode		1103790	0					
ANR	1103925	Identifier	tif		1103790	0					
ANR	1103926	Identifier	tif_predecode		1103790	1					
ANR	1103927	Identifier	PixarLogPreDecode		1103790	1					
ANR	1103928	ExpressionStatement	tif -> tif_decoderow = PixarLogDecode	1395:1:39963:39998	1103790	14	True				
ANR	1103929	AssignmentExpression	tif -> tif_decoderow = PixarLogDecode		1103790	0		=			
ANR	1103930	PtrMemberAccess	tif -> tif_decoderow		1103790	0					
ANR	1103931	Identifier	tif		1103790	0					
ANR	1103932	Identifier	tif_decoderow		1103790	1					
ANR	1103933	Identifier	PixarLogDecode		1103790	1					
ANR	1103934	ExpressionStatement	tif -> tif_decodestrip = PixarLogDecode	1396:1:40001:40038	1103790	15	True				
ANR	1103935	AssignmentExpression	tif -> tif_decodestrip = PixarLogDecode		1103790	0		=			
ANR	1103936	PtrMemberAccess	tif -> tif_decodestrip		1103790	0					
ANR	1103937	Identifier	tif		1103790	0					
ANR	1103938	Identifier	tif_decodestrip		1103790	1					
ANR	1103939	Identifier	PixarLogDecode		1103790	1					
ANR	1103940	ExpressionStatement	tif -> tif_decodetile = PixarLogDecode	1397:1:40043:40079	1103790	16	True				
ANR	1103941	AssignmentExpression	tif -> tif_decodetile = PixarLogDecode		1103790	0		=			
ANR	1103942	PtrMemberAccess	tif -> tif_decodetile		1103790	0					
ANR	1103943	Identifier	tif		1103790	0					
ANR	1103944	Identifier	tif_decodetile		1103790	1					
ANR	1103945	Identifier	PixarLogDecode		1103790	1					
ANR	1103946	ExpressionStatement	tif -> tif_setupencode = PixarLogSetupEncode	1398:1:40082:40124	1103790	17	True				
ANR	1103947	AssignmentExpression	tif -> tif_setupencode = PixarLogSetupEncode		1103790	0		=			
ANR	1103948	PtrMemberAccess	tif -> tif_setupencode		1103790	0					
ANR	1103949	Identifier	tif		1103790	0					
ANR	1103950	Identifier	tif_setupencode		1103790	1					
ANR	1103951	Identifier	PixarLogSetupEncode		1103790	1					
ANR	1103952	ExpressionStatement	tif -> tif_preencode = PixarLogPreEncode	1399:1:40127:40165	1103790	18	True				
ANR	1103953	AssignmentExpression	tif -> tif_preencode = PixarLogPreEncode		1103790	0		=			
ANR	1103954	PtrMemberAccess	tif -> tif_preencode		1103790	0					
ANR	1103955	Identifier	tif		1103790	0					
ANR	1103956	Identifier	tif_preencode		1103790	1					
ANR	1103957	Identifier	PixarLogPreEncode		1103790	1					
ANR	1103958	ExpressionStatement	tif -> tif_postencode = PixarLogPostEncode	1400:1:40168:40208	1103790	19	True				
ANR	1103959	AssignmentExpression	tif -> tif_postencode = PixarLogPostEncode		1103790	0		=			
ANR	1103960	PtrMemberAccess	tif -> tif_postencode		1103790	0					
ANR	1103961	Identifier	tif		1103790	0					
ANR	1103962	Identifier	tif_postencode		1103790	1					
ANR	1103963	Identifier	PixarLogPostEncode		1103790	1					
ANR	1103964	ExpressionStatement	tif -> tif_encoderow = PixarLogEncode	1401:1:40211:40246	1103790	20	True				
ANR	1103965	AssignmentExpression	tif -> tif_encoderow = PixarLogEncode		1103790	0		=			
ANR	1103966	PtrMemberAccess	tif -> tif_encoderow		1103790	0					
ANR	1103967	Identifier	tif		1103790	0					
ANR	1103968	Identifier	tif_encoderow		1103790	1					
ANR	1103969	Identifier	PixarLogEncode		1103790	1					
ANR	1103970	ExpressionStatement	tif -> tif_encodestrip = PixarLogEncode	1402:1:40251:40288	1103790	21	True				
ANR	1103971	AssignmentExpression	tif -> tif_encodestrip = PixarLogEncode		1103790	0		=			
ANR	1103972	PtrMemberAccess	tif -> tif_encodestrip		1103790	0					
ANR	1103973	Identifier	tif		1103790	0					
ANR	1103974	Identifier	tif_encodestrip		1103790	1					
ANR	1103975	Identifier	PixarLogEncode		1103790	1					
ANR	1103976	ExpressionStatement	tif -> tif_encodetile = PixarLogEncode	1403:1:40291:40327	1103790	22	True				
ANR	1103977	AssignmentExpression	tif -> tif_encodetile = PixarLogEncode		1103790	0		=			
ANR	1103978	PtrMemberAccess	tif -> tif_encodetile		1103790	0					
ANR	1103979	Identifier	tif		1103790	0					
ANR	1103980	Identifier	tif_encodetile		1103790	1					
ANR	1103981	Identifier	PixarLogEncode		1103790	1					
ANR	1103982	ExpressionStatement	tif -> tif_close = PixarLogClose	1404:1:40332:40362	1103790	23	True				
ANR	1103983	AssignmentExpression	tif -> tif_close = PixarLogClose		1103790	0		=			
ANR	1103984	PtrMemberAccess	tif -> tif_close		1103790	0					
ANR	1103985	Identifier	tif		1103790	0					
ANR	1103986	Identifier	tif_close		1103790	1					
ANR	1103987	Identifier	PixarLogClose		1103790	1					
ANR	1103988	ExpressionStatement	tif -> tif_cleanup = PixarLogCleanup	1405:1:40365:40399	1103790	24	True				
ANR	1103989	AssignmentExpression	tif -> tif_cleanup = PixarLogCleanup		1103790	0		=			
ANR	1103990	PtrMemberAccess	tif -> tif_cleanup		1103790	0					
ANR	1103991	Identifier	tif		1103790	0					
ANR	1103992	Identifier	tif_cleanup		1103790	1					
ANR	1103993	Identifier	PixarLogCleanup		1103790	1					
ANR	1103994	ExpressionStatement	sp -> vgetparent = tif -> tif_tagmethods . vgetfield	1408:1:40468:40514	1103790	25	True				
ANR	1103995	AssignmentExpression	sp -> vgetparent = tif -> tif_tagmethods . vgetfield		1103790	0		=			
ANR	1103996	PtrMemberAccess	sp -> vgetparent		1103790	0					
ANR	1103997	Identifier	sp		1103790	0					
ANR	1103998	Identifier	vgetparent		1103790	1					
ANR	1103999	MemberAccess	tif -> tif_tagmethods . vgetfield		1103790	1					
ANR	1104000	PtrMemberAccess	tif -> tif_tagmethods		1103790	0					
ANR	1104001	Identifier	tif		1103790	0					
ANR	1104002	Identifier	tif_tagmethods		1103790	1					
ANR	1104003	Identifier	vgetfield		1103790	1					
ANR	1104004	ExpressionStatement	tif -> tif_tagmethods . vgetfield = PixarLogVGetField	1409:1:40517:40566	1103790	26	True				
ANR	1104005	AssignmentExpression	tif -> tif_tagmethods . vgetfield = PixarLogVGetField		1103790	0		=			
ANR	1104006	MemberAccess	tif -> tif_tagmethods . vgetfield		1103790	0					
ANR	1104007	PtrMemberAccess	tif -> tif_tagmethods		1103790	0					
ANR	1104008	Identifier	tif		1103790	0					
ANR	1104009	Identifier	tif_tagmethods		1103790	1					
ANR	1104010	Identifier	vgetfield		1103790	1					
ANR	1104011	Identifier	PixarLogVGetField		1103790	1					
ANR	1104012	ExpressionStatement	sp -> vsetparent = tif -> tif_tagmethods . vsetfield	1410:1:40597:40643	1103790	27	True				
ANR	1104013	AssignmentExpression	sp -> vsetparent = tif -> tif_tagmethods . vsetfield		1103790	0		=			
ANR	1104014	PtrMemberAccess	sp -> vsetparent		1103790	0					
ANR	1104015	Identifier	sp		1103790	0					
ANR	1104016	Identifier	vsetparent		1103790	1					
ANR	1104017	MemberAccess	tif -> tif_tagmethods . vsetfield		1103790	1					
ANR	1104018	PtrMemberAccess	tif -> tif_tagmethods		1103790	0					
ANR	1104019	Identifier	tif		1103790	0					
ANR	1104020	Identifier	tif_tagmethods		1103790	1					
ANR	1104021	Identifier	vsetfield		1103790	1					
ANR	1104022	ExpressionStatement	tif -> tif_tagmethods . vsetfield = PixarLogVSetField	1411:1:40646:40695	1103790	28	True				
ANR	1104023	AssignmentExpression	tif -> tif_tagmethods . vsetfield = PixarLogVSetField		1103790	0		=			
ANR	1104024	MemberAccess	tif -> tif_tagmethods . vsetfield		1103790	0					
ANR	1104025	PtrMemberAccess	tif -> tif_tagmethods		1103790	0					
ANR	1104026	Identifier	tif		1103790	0					
ANR	1104027	Identifier	tif_tagmethods		1103790	1					
ANR	1104028	Identifier	vsetfield		1103790	1					
ANR	1104029	Identifier	PixarLogVSetField		1103790	1					
ANR	1104030	ExpressionStatement	sp -> quality = Z_DEFAULT_COMPRESSION	1414:1:40775:40810	1103790	29	True				
ANR	1104031	AssignmentExpression	sp -> quality = Z_DEFAULT_COMPRESSION		1103790	0		=			
ANR	1104032	PtrMemberAccess	sp -> quality		1103790	0					
ANR	1104033	Identifier	sp		1103790	0					
ANR	1104034	Identifier	quality		1103790	1					
ANR	1104035	Identifier	Z_DEFAULT_COMPRESSION		1103790	1					
ANR	1104036	ExpressionStatement	sp -> state = 0	1415:1:40839:40852	1103790	30	True				
ANR	1104037	AssignmentExpression	sp -> state = 0		1103790	0		=			
ANR	1104038	PtrMemberAccess	sp -> state		1103790	0					
ANR	1104039	Identifier	sp		1103790	0					
ANR	1104040	Identifier	state		1103790	1					
ANR	1104041	PrimaryExpression	0		1103790	1					
ANR	1104042	ExpressionStatement	( void ) TIFFPredictorInit ( tif )	1420:1:40951:40980	1103790	31	True				
ANR	1104043	CastExpression	( void ) TIFFPredictorInit ( tif )		1103790	0					
ANR	1104044	CastTarget	void		1103790	0					
ANR	1104045	CallExpression	TIFFPredictorInit ( tif )		1103790	1					
ANR	1104046	Callee	TIFFPredictorInit		1103790	0					
ANR	1104047	Identifier	TIFFPredictorInit		1103790	0					
ANR	1104048	ArgumentList	tif		1103790	1					
ANR	1104049	Argument	tif		1103790	0					
ANR	1104050	Identifier	tif		1103790	0					
ANR	1104051	ExpressionStatement	PixarLogMakeTables ( sp )	1425:1:41026:41048	1103790	32	True				
ANR	1104052	CallExpression	PixarLogMakeTables ( sp )		1103790	0					
ANR	1104053	Callee	PixarLogMakeTables		1103790	0					
ANR	1104054	Identifier	PixarLogMakeTables		1103790	0					
ANR	1104055	ArgumentList	sp		1103790	1					
ANR	1104056	Argument	sp		1103790	0					
ANR	1104057	Identifier	sp		1103790	0					
ANR	1104058	ReturnStatement	return ( 1 ) ;	1427:1:41052:41062	1103790	33	True				
ANR	1104059	PrimaryExpression	1		1103790	0					
ANR	1104060	Label	bad :	1428:0:41064:41067	1103790	34	True				
ANR	1104061	Identifier	bad		1103790	0					
ANR	1104062	ExpressionStatement	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for PixarLog state block"" )"	1429:1:41070:41155	1103790	35	True				
ANR	1104063	CallExpression	"TIFFErrorExt ( tif -> tif_clientdata , module , ""No space for PixarLog state block"" )"		1103790	0					
ANR	1104064	Callee	TIFFErrorExt		1103790	0					
ANR	1104065	Identifier	TIFFErrorExt		1103790	0					
ANR	1104066	ArgumentList	tif -> tif_clientdata		1103790	1					
ANR	1104067	Argument	tif -> tif_clientdata		1103790	0					
ANR	1104068	PtrMemberAccess	tif -> tif_clientdata		1103790	0					
ANR	1104069	Identifier	tif		1103790	0					
ANR	1104070	Identifier	tif_clientdata		1103790	1					
ANR	1104071	Argument	module		1103790	1					
ANR	1104072	Identifier	module		1103790	0					
ANR	1104073	Argument	"""No space for PixarLog state block"""		1103790	2					
ANR	1104074	PrimaryExpression	"""No space for PixarLog state block"""		1103790	0					
ANR	1104075	ReturnStatement	return ( 0 ) ;	1431:1:41158:41168	1103790	36	True				
ANR	1104076	PrimaryExpression	0		1103790	0					
ANR	1104077	ReturnType	int		1103790	1					
ANR	1104078	Identifier	TIFFInitPixarLog		1103790	2					
ANR	1104079	ParameterList	"TIFF * tif , int scheme"		1103790	3					
ANR	1104080	Parameter	TIFF * tif	1360:17:39068:39076	1103790	0	True				
ANR	1104081	ParameterType	TIFF *		1103790	0					
ANR	1104082	Identifier	tif		1103790	1					
ANR	1104083	Parameter	int scheme	1360:28:39079:39088	1103790	1	True				
ANR	1104084	ParameterType	int		1103790	0					
ANR	1104085	Identifier	scheme		1103790	1					
ANR	1104086	CFGEntryNode	ENTRY		1103790		True				
ANR	1104087	CFGExitNode	EXIT		1103790		True				
ANR	1104088	Symbol	* sp		1103790						
ANR	1104089	Symbol	PixarLogClose		1103790						
ANR	1104090	Symbol	tif -> tif_postencode		1103790						
ANR	1104091	Symbol	sp -> vgetparent		1103790						
ANR	1104092	Symbol	PIXARLOGDATAFMT_UNKNOWN		1103790						
ANR	1104093	Symbol	PixarLogSetupEncode		1103790						
ANR	1104094	Symbol	tif		1103790						
ANR	1104095	Symbol	PixarLogVSetField		1103790						
ANR	1104096	Symbol	tif -> tif_cleanup		1103790						
ANR	1104097	Symbol	tif -> tif_fixuptags		1103790						
ANR	1104098	Symbol	tif -> tif_setupdecode		1103790						
ANR	1104099	Symbol	tif -> tif_preencode		1103790						
ANR	1104100	Symbol	tif -> tif_decoderow		1103790						
ANR	1104101	Symbol	COMPRESSION_PIXARLOG		1103790						
ANR	1104102	Symbol	NULL		1103790						
ANR	1104103	Symbol	PixarLogPostEncode		1103790						
ANR	1104104	Symbol	module		1103790						
ANR	1104105	Symbol	PixarLogCleanup		1103790						
ANR	1104106	Symbol	PixarLogSetupDecode		1103790						
ANR	1104107	Symbol	sp -> state		1103790						
ANR	1104108	Symbol	sp -> quality		1103790						
ANR	1104109	Symbol	tif -> tif_encodetile		1103790						
ANR	1104110	Symbol	tif -> tif_setupencode		1103790						
ANR	1104111	Symbol	TIFFArrayCount		1103790						
ANR	1104112	Symbol	_TIFFmalloc		1103790						
ANR	1104113	Symbol	tif -> tif_close		1103790						
ANR	1104114	Symbol	tif -> tif_predecode		1103790						
ANR	1104115	Symbol	sp -> stream . data_type		1103790						
ANR	1104116	Symbol	tif -> tif_encoderow		1103790						
ANR	1104117	Symbol	PixarLogPreDecode		1103790						
ANR	1104118	Symbol	scheme		1103790						
ANR	1104119	Symbol	_TIFFMergeFields		1103790						
ANR	1104120	Symbol	sp -> user_datafmt		1103790						
ANR	1104121	Symbol	tif -> tif_encodestrip		1103790						
ANR	1104122	Symbol	PixarLogDecode		1103790						
ANR	1104123	Symbol	PixarLogPreEncode		1103790						
ANR	1104124	Symbol	PixarLogEncode		1103790						
ANR	1104125	Symbol	tif -> tif_tagmethods		1103790						
ANR	1104126	Symbol	PixarLogFixupTags		1103790						
ANR	1104127	Symbol	tif -> tif_tagmethods . vgetfield		1103790						
ANR	1104128	Symbol	PixarLogVGetField		1103790						
ANR	1104129	Symbol	tif -> tif_decodetile		1103790						
ANR	1104130	Symbol	sp		1103790						
ANR	1104131	Symbol	tif -> tif_data		1103790						
ANR	1104132	Symbol	tif -> tif_decodestrip		1103790						
ANR	1104133	Symbol	tif -> tif_tagmethods . vsetfield		1103790						
ANR	1104134	Symbol	Z_BINARY		1103790						
ANR	1104135	Symbol	Z_DEFAULT_COMPRESSION		1103790						
ANR	1104136	Symbol	sp -> vsetparent		1103790						
ANR	1104137	Symbol	tif -> tif_clientdata		1103790						
ANR	1104138	Symbol	pixarlogFields		1103790						
ANR	1104139	Symbol	sp -> stream		1103790						
ANR	1104140	Symbol	* tif		1103790						
