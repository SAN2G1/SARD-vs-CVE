command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	479346	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openjpip_target_manager.c								
ANR	479347	Function	gene_targetlist	57:0:2012:2258							
ANR	479348	FunctionDef	gene_targetlist ()		479347	0					
ANR	479349	CompoundStatement		58:0:2055:2258	479347	0					
ANR	479350	IdentifierDeclStatement	targetlist_param_t * targetlist ;	59:4:2061:2091	479347	0	True				
ANR	479351	IdentifierDecl	* targetlist		479347	0					
ANR	479352	IdentifierDeclType	targetlist_param_t *		479347	0					
ANR	479353	Identifier	targetlist		479347	1					
ANR	479354	ExpressionStatement	targetlist = ( targetlist_param_t * ) opj_malloc ( sizeof ( targetlist_param_t ) )	61:4:2098:2171	479347	1	True				
ANR	479355	AssignmentExpression	targetlist = ( targetlist_param_t * ) opj_malloc ( sizeof ( targetlist_param_t ) )		479347	0		=			
ANR	479356	Identifier	targetlist		479347	0					
ANR	479357	CastExpression	( targetlist_param_t * ) opj_malloc ( sizeof ( targetlist_param_t ) )		479347	1					
ANR	479358	CastTarget	targetlist_param_t *		479347	0					
ANR	479359	CallExpression	opj_malloc ( sizeof ( targetlist_param_t ) )		479347	1					
ANR	479360	Callee	opj_malloc		479347	0					
ANR	479361	Identifier	opj_malloc		479347	0					
ANR	479362	ArgumentList	sizeof ( targetlist_param_t )		479347	1					
ANR	479363	Argument	sizeof ( targetlist_param_t )		479347	0					
ANR	479364	SizeofExpression	sizeof ( targetlist_param_t )		479347	0					
ANR	479365	Sizeof	sizeof		479347	0					
ANR	479366	SizeofOperand	targetlist_param_t		479347	1					
ANR	479367	ExpressionStatement	targetlist -> first = NULL	63:4:2178:2202	479347	2	True				
ANR	479368	AssignmentExpression	targetlist -> first = NULL		479347	0		=			
ANR	479369	PtrMemberAccess	targetlist -> first		479347	0					
ANR	479370	Identifier	targetlist		479347	0					
ANR	479371	Identifier	first		479347	1					
ANR	479372	Identifier	NULL		479347	1					
ANR	479373	ExpressionStatement	targetlist -> last = NULL	64:4:2208:2232	479347	3	True				
ANR	479374	AssignmentExpression	targetlist -> last = NULL		479347	0		=			
ANR	479375	PtrMemberAccess	targetlist -> last		479347	0					
ANR	479376	Identifier	targetlist		479347	0					
ANR	479377	Identifier	last		479347	1					
ANR	479378	Identifier	NULL		479347	1					
ANR	479379	ReturnStatement	return targetlist ;	66:4:2239:2256	479347	4	True				
ANR	479380	Identifier	targetlist		479347	0					
ANR	479381	ReturnType	targetlist_param_t *		479347	1					
ANR	479382	Identifier	gene_targetlist		479347	2					
ANR	479383	ParameterList			479347	3					
ANR	479384	CFGEntryNode	ENTRY		479347		True				
ANR	479385	CFGExitNode	EXIT		479347		True				
ANR	479386	Symbol	opj_malloc		479347						
ANR	479387	Symbol	* targetlist		479347						
ANR	479388	Symbol	NULL		479347						
ANR	479389	Symbol	targetlist		479347						
ANR	479390	Symbol	targetlist -> first		479347						
ANR	479391	Symbol	targetlist -> last		479347						
ANR	479392	DeclStmt									
ANR	479393	Decl							int	"int ( const char filepath [ ] , char tmpfname [ ] )"	open_jp2file
ANR	479394	Function	gene_target	79:0:2502:4030							
ANR	479395	FunctionDef	"gene_target (targetlist_param_t * targetlist , char * targetpath)"		479394	0					
ANR	479396	CompoundStatement		80:0:2581:4030	479394	0					
ANR	479397	IdentifierDeclStatement	target_param_t * target ;	81:4:2587:2609	479394	0	True				
ANR	479398	IdentifierDecl	* target		479394	0					
ANR	479399	IdentifierDeclType	target_param_t *		479394	0					
ANR	479400	Identifier	target		479394	1					
ANR	479401	IdentifierDeclStatement	int fd ;	82:4:2615:2621	479394	1	True				
ANR	479402	IdentifierDecl	fd		479394	0					
ANR	479403	IdentifierDeclType	int		479394	0					
ANR	479404	Identifier	fd		479394	1					
ANR	479405	IdentifierDeclStatement	index_param_t * jp2idx ;	83:4:2627:2648	479394	2	True				
ANR	479406	IdentifierDecl	* jp2idx		479394	0					
ANR	479407	IdentifierDeclType	index_param_t *		479394	0					
ANR	479408	Identifier	jp2idx		479394	1					
ANR	479409	IdentifierDeclStatement	char tmpfname [ MAX_LENOFTID ] ;	84:4:2654:2681	479394	3	True				
ANR	479410	IdentifierDecl	tmpfname [ MAX_LENOFTID ]		479394	0					
ANR	479411	IdentifierDeclType	char [ MAX_LENOFTID ]		479394	0					
ANR	479412	Identifier	tmpfname		479394	1					
ANR	479413	Identifier	MAX_LENOFTID		479394	2					
ANR	479414	Statement	static	85:4:2687:2692	479394	4	True				
ANR	479415	IdentifierDeclStatement	int last_csn = 0 ;	85:11:2694:2710	479394	5	True				
ANR	479416	IdentifierDecl	last_csn = 0		479394	0					
ANR	479417	IdentifierDeclType	int		479394	0					
ANR	479418	Identifier	last_csn		479394	1					
ANR	479419	AssignmentExpression	last_csn = 0		479394	2		=			
ANR	479420	Identifier	last_csn		479394	0					
ANR	479421	PrimaryExpression	0		479394	1					
ANR	479422	IfStatement	if ( targetpath [ 0 ] == '\\0' )		479394	6					
ANR	479423	Condition	targetpath [ 0 ] == '\\0'	87:8:2721:2741	479394	0	True				
ANR	479424	EqualityExpression	targetpath [ 0 ] == '\\0'		479394	0		==			
ANR	479425	ArrayIndexing	targetpath [ 0 ]		479394	0					
ANR	479426	Identifier	targetpath		479394	0					
ANR	479427	PrimaryExpression	0		479394	1					
ANR	479428	PrimaryExpression	'\\0'		479394	1					
ANR	479429	CompoundStatement		8:31:162:162	479394	1					
ANR	479430	ExpressionStatement	"fprintf ( FCGI_stderr , ""Error: exception, no targetpath in gene_target()\\n"" )"	88:8:2754:2828	479394	0	True				
ANR	479431	CallExpression	"fprintf ( FCGI_stderr , ""Error: exception, no targetpath in gene_target()\\n"" )"		479394	0					
ANR	479432	Callee	fprintf		479394	0					
ANR	479433	Identifier	fprintf		479394	0					
ANR	479434	ArgumentList	FCGI_stderr		479394	1					
ANR	479435	Argument	FCGI_stderr		479394	0					
ANR	479436	Identifier	FCGI_stderr		479394	0					
ANR	479437	Argument	"""Error: exception, no targetpath in gene_target()\\n"""		479394	1					
ANR	479438	PrimaryExpression	"""Error: exception, no targetpath in gene_target()\\n"""		479394	0					
ANR	479439	ReturnStatement	return NULL ;	89:8:2838:2849	479394	1	True				
ANR	479440	Identifier	NULL		479394	0					
ANR	479441	IfStatement	"if ( ( fd = open_jp2file ( targetpath , tmpfname ) ) == - 1 )"		479394	7					
ANR	479442	Condition	"( fd = open_jp2file ( targetpath , tmpfname ) ) == - 1"	92:8:2866:2912	479394	0	True				
ANR	479443	EqualityExpression	"( fd = open_jp2file ( targetpath , tmpfname ) ) == - 1"		479394	0		==			
ANR	479444	AssignmentExpression	"fd = open_jp2file ( targetpath , tmpfname )"		479394	0		=			
ANR	479445	Identifier	fd		479394	0					
ANR	479446	CallExpression	"open_jp2file ( targetpath , tmpfname )"		479394	1					
ANR	479447	Callee	open_jp2file		479394	0					
ANR	479448	Identifier	open_jp2file		479394	0					
ANR	479449	ArgumentList	targetpath		479394	1					
ANR	479450	Argument	targetpath		479394	0					
ANR	479451	Identifier	targetpath		479394	0					
ANR	479452	Argument	tmpfname		479394	1					
ANR	479453	Identifier	tmpfname		479394	0					
ANR	479454	UnaryOperationExpression	- 1		479394	1					
ANR	479455	UnaryOperator	-		479394	0					
ANR	479456	PrimaryExpression	1		479394	1					
ANR	479457	CompoundStatement		13:57:333:333	479394	1					
ANR	479458	ExpressionStatement	"fprintf ( FCGI_stdout , ""Status: 404\\r\\n"" )"	93:8:2925:2964	479394	0	True				
ANR	479459	CallExpression	"fprintf ( FCGI_stdout , ""Status: 404\\r\\n"" )"		479394	0					
ANR	479460	Callee	fprintf		479394	0					
ANR	479461	Identifier	fprintf		479394	0					
ANR	479462	ArgumentList	FCGI_stdout		479394	1					
ANR	479463	Argument	FCGI_stdout		479394	0					
ANR	479464	Identifier	FCGI_stdout		479394	0					
ANR	479465	Argument	"""Status: 404\\r\\n"""		479394	1					
ANR	479466	PrimaryExpression	"""Status: 404\\r\\n"""		479394	0					
ANR	479467	ReturnStatement	return NULL ;	94:8:2974:2985	479394	1	True				
ANR	479468	Identifier	NULL		479394	0					
ANR	479469	IfStatement	if ( ! ( jp2idx = parse_jp2file ( fd ) ) )		479394	8					
ANR	479470	Condition	! ( jp2idx = parse_jp2file ( fd ) )	97:8:3002:3030	479394	0	True				
ANR	479471	UnaryOperationExpression	! ( jp2idx = parse_jp2file ( fd ) )		479394	0					
ANR	479472	UnaryOperator	!		479394	0					
ANR	479473	AssignmentExpression	jp2idx = parse_jp2file ( fd )		479394	1		=			
ANR	479474	Identifier	jp2idx		479394	0					
ANR	479475	CallExpression	parse_jp2file ( fd )		479394	1					
ANR	479476	Callee	parse_jp2file		479394	0					
ANR	479477	Identifier	parse_jp2file		479394	0					
ANR	479478	ArgumentList	fd		479394	1					
ANR	479479	Argument	fd		479394	0					
ANR	479480	Identifier	fd		479394	0					
ANR	479481	CompoundStatement		18:39:451:451	479394	1					
ANR	479482	ExpressionStatement	"fprintf ( FCGI_stdout , ""Status: 501\\r\\n"" )"	98:8:3043:3082	479394	0	True				
ANR	479483	CallExpression	"fprintf ( FCGI_stdout , ""Status: 501\\r\\n"" )"		479394	0					
ANR	479484	Callee	fprintf		479394	0					
ANR	479485	Identifier	fprintf		479394	0					
ANR	479486	ArgumentList	FCGI_stdout		479394	1					
ANR	479487	Argument	FCGI_stdout		479394	0					
ANR	479488	Identifier	FCGI_stdout		479394	0					
ANR	479489	Argument	"""Status: 501\\r\\n"""		479394	1					
ANR	479490	PrimaryExpression	"""Status: 501\\r\\n"""		479394	0					
ANR	479491	ReturnStatement	return NULL ;	99:8:3092:3103	479394	1	True				
ANR	479492	Identifier	NULL		479394	0					
ANR	479493	ExpressionStatement	target = ( target_param_t * ) opj_malloc ( sizeof ( target_param_t ) )	102:4:3116:3177	479394	9	True				
ANR	479494	AssignmentExpression	target = ( target_param_t * ) opj_malloc ( sizeof ( target_param_t ) )		479394	0		=			
ANR	479495	Identifier	target		479394	0					
ANR	479496	CastExpression	( target_param_t * ) opj_malloc ( sizeof ( target_param_t ) )		479394	1					
ANR	479497	CastTarget	target_param_t *		479394	0					
ANR	479498	CallExpression	opj_malloc ( sizeof ( target_param_t ) )		479394	1					
ANR	479499	Callee	opj_malloc		479394	0					
ANR	479500	Identifier	opj_malloc		479394	0					
ANR	479501	ArgumentList	sizeof ( target_param_t )		479394	1					
ANR	479502	Argument	sizeof ( target_param_t )		479394	0					
ANR	479503	SizeofExpression	sizeof ( target_param_t )		479394	0					
ANR	479504	Sizeof	sizeof		479394	0					
ANR	479505	SizeofOperand	target_param_t		479394	1					
ANR	479506	ExpressionStatement	"snprintf ( target -> tid , MAX_LENOFTID , ""%x-%x"" , ( unsigned int ) time ( NULL ) , ( unsigned int ) rand ( ) )"	103:4:3183:3288	479394	10	True				
ANR	479507	CallExpression	"snprintf ( target -> tid , MAX_LENOFTID , ""%x-%x"" , ( unsigned int ) time ( NULL ) , ( unsigned int ) rand ( ) )"		479394	0					
ANR	479508	Callee	snprintf		479394	0					
ANR	479509	Identifier	snprintf		479394	0					
ANR	479510	ArgumentList	target -> tid		479394	1					
ANR	479511	Argument	target -> tid		479394	0					
ANR	479512	PtrMemberAccess	target -> tid		479394	0					
ANR	479513	Identifier	target		479394	0					
ANR	479514	Identifier	tid		479394	1					
ANR	479515	Argument	MAX_LENOFTID		479394	1					
ANR	479516	Identifier	MAX_LENOFTID		479394	0					
ANR	479517	Argument	"""%x-%x"""		479394	2					
ANR	479518	PrimaryExpression	"""%x-%x"""		479394	0					
ANR	479519	Argument	( unsigned int ) time ( NULL )		479394	3					
ANR	479520	CastExpression	( unsigned int ) time ( NULL )		479394	0					
ANR	479521	CastTarget	unsigned int		479394	0					
ANR	479522	CallExpression	time ( NULL )		479394	1					
ANR	479523	Callee	time		479394	0					
ANR	479524	Identifier	time		479394	0					
ANR	479525	ArgumentList	NULL		479394	1					
ANR	479526	Argument	NULL		479394	0					
ANR	479527	Identifier	NULL		479394	0					
ANR	479528	Argument	( unsigned int ) rand ( )		479394	4					
ANR	479529	CastExpression	( unsigned int ) rand ( )		479394	0					
ANR	479530	CastTarget	unsigned int		479394	0					
ANR	479531	CallExpression	rand ( )		479394	1					
ANR	479532	Callee	rand		479394	0					
ANR	479533	Identifier	rand		479394	0					
ANR	479534	ArgumentList			479394	1					
ANR	479535	ExpressionStatement	target -> targetname = strdup ( targetpath )	105:4:3294:3333	479394	11	True				
ANR	479536	AssignmentExpression	target -> targetname = strdup ( targetpath )		479394	0		=			
ANR	479537	PtrMemberAccess	target -> targetname		479394	0					
ANR	479538	Identifier	target		479394	0					
ANR	479539	Identifier	targetname		479394	1					
ANR	479540	CallExpression	strdup ( targetpath )		479394	1					
ANR	479541	Callee	strdup		479394	0					
ANR	479542	Identifier	strdup		479394	0					
ANR	479543	ArgumentList	targetpath		479394	1					
ANR	479544	Argument	targetpath		479394	0					
ANR	479545	Identifier	targetpath		479394	0					
ANR	479546	ExpressionStatement	target -> fd = fd	106:4:3339:3354	479394	12	True				
ANR	479547	AssignmentExpression	target -> fd = fd		479394	0		=			
ANR	479548	PtrMemberAccess	target -> fd		479394	0					
ANR	479549	Identifier	target		479394	0					
ANR	479550	Identifier	fd		479394	1					
ANR	479551	Identifier	fd		479394	1					
ANR	479552	IfStatement	if ( tmpfname [ 0 ] )		479394	13					
ANR	479553	Condition	tmpfname [ 0 ]	108:8:3378:3388	479394	0	True				
ANR	479554	ArrayIndexing	tmpfname [ 0 ]		479394	0					
ANR	479555	Identifier	tmpfname		479394	0					
ANR	479556	PrimaryExpression	0		479394	1					
ANR	479557	CompoundStatement		29:21:809:809	479394	1					
ANR	479558	ExpressionStatement	target -> tmpfname = strdup ( tmpfname )	109:8:3401:3436	479394	0	True				
ANR	479559	AssignmentExpression	target -> tmpfname = strdup ( tmpfname )		479394	0		=			
ANR	479560	PtrMemberAccess	target -> tmpfname		479394	0					
ANR	479561	Identifier	target		479394	0					
ANR	479562	Identifier	tmpfname		479394	1					
ANR	479563	CallExpression	strdup ( tmpfname )		479394	1					
ANR	479564	Callee	strdup		479394	0					
ANR	479565	Identifier	strdup		479394	0					
ANR	479566	ArgumentList	tmpfname		479394	1					
ANR	479567	Argument	tmpfname		479394	0					
ANR	479568	Identifier	tmpfname		479394	0					
ANR	479569	ElseStatement	else		479394	0					
ANR	479570	CompoundStatement		31:11:867:867	479394	0					
ANR	479571	ExpressionStatement	target -> tmpfname = NULL	111:8:3459:3482	479394	0	True				
ANR	479572	AssignmentExpression	target -> tmpfname = NULL		479394	0		=			
ANR	479573	PtrMemberAccess	target -> tmpfname		479394	0					
ANR	479574	Identifier	target		479394	0					
ANR	479575	Identifier	tmpfname		479394	1					
ANR	479576	Identifier	NULL		479394	1					
ANR	479577	ExpressionStatement	target -> csn = last_csn ++	114:4:3501:3525	479394	14	True				
ANR	479578	AssignmentExpression	target -> csn = last_csn ++		479394	0		=			
ANR	479579	PtrMemberAccess	target -> csn		479394	0					
ANR	479580	Identifier	target		479394	0					
ANR	479581	Identifier	csn		479394	1					
ANR	479582	PostIncDecOperationExpression	last_csn ++		479394	1					
ANR	479583	Identifier	last_csn		479394	0					
ANR	479584	IncDec	++		479394	1					
ANR	479585	ExpressionStatement	target -> codeidx = jp2idx	115:4:3531:3555	479394	15	True				
ANR	479586	AssignmentExpression	target -> codeidx = jp2idx		479394	0		=			
ANR	479587	PtrMemberAccess	target -> codeidx		479394	0					
ANR	479588	Identifier	target		479394	0					
ANR	479589	Identifier	codeidx		479394	1					
ANR	479590	Identifier	jp2idx		479394	1					
ANR	479591	ExpressionStatement	target -> num_of_use = 0	116:4:3561:3583	479394	16	True				
ANR	479592	AssignmentExpression	target -> num_of_use = 0		479394	0		=			
ANR	479593	PtrMemberAccess	target -> num_of_use		479394	0					
ANR	479594	Identifier	target		479394	0					
ANR	479595	Identifier	num_of_use		479394	1					
ANR	479596	PrimaryExpression	0		479394	1					
ANR	479597	ExpressionStatement	target -> jppstream = OPJ_TRUE	117:4:3589:3617	479394	17	True				
ANR	479598	AssignmentExpression	target -> jppstream = OPJ_TRUE		479394	0		=			
ANR	479599	PtrMemberAccess	target -> jppstream		479394	0					
ANR	479600	Identifier	target		479394	0					
ANR	479601	Identifier	jppstream		479394	1					
ANR	479602	Identifier	OPJ_TRUE		479394	1					
ANR	479603	ExpressionStatement	target -> jptstream = isJPTfeasible ( * jp2idx )	118:4:3623:3665	479394	18	True				
ANR	479604	AssignmentExpression	target -> jptstream = isJPTfeasible ( * jp2idx )		479394	0		=			
ANR	479605	PtrMemberAccess	target -> jptstream		479394	0					
ANR	479606	Identifier	target		479394	0					
ANR	479607	Identifier	jptstream		479394	1					
ANR	479608	CallExpression	isJPTfeasible ( * jp2idx )		479394	1					
ANR	479609	Callee	isJPTfeasible		479394	0					
ANR	479610	Identifier	isJPTfeasible		479394	0					
ANR	479611	ArgumentList	* jp2idx		479394	1					
ANR	479612	Argument	* jp2idx		479394	0					
ANR	479613	UnaryOperationExpression	* jp2idx		479394	0					
ANR	479614	UnaryOperator	*		479394	0					
ANR	479615	Identifier	jp2idx		479394	1					
ANR	479616	ExpressionStatement	target -> next = NULL	119:4:3671:3690	479394	19	True				
ANR	479617	AssignmentExpression	target -> next = NULL		479394	0		=			
ANR	479618	PtrMemberAccess	target -> next		479394	0					
ANR	479619	Identifier	target		479394	0					
ANR	479620	Identifier	next		479394	1					
ANR	479621	Identifier	NULL		479394	1					
ANR	479622	IfStatement	if ( targetlist -> first )		479394	20					
ANR	479623	Condition	targetlist -> first	121:8:3701:3717	479394	0	True				
ANR	479624	PtrMemberAccess	targetlist -> first		479394	0					
ANR	479625	Identifier	targetlist		479394	0					
ANR	479626	Identifier	first		479394	1					
ANR	479627	CompoundStatement		42:27:1138:1138	479394	1					
ANR	479628	ExpressionStatement	targetlist -> last -> next = target	122:8:3765:3796	479394	0	True				
ANR	479629	AssignmentExpression	targetlist -> last -> next = target		479394	0		=			
ANR	479630	PtrMemberAccess	targetlist -> last -> next		479394	0					
ANR	479631	PtrMemberAccess	targetlist -> last		479394	0					
ANR	479632	Identifier	targetlist		479394	0					
ANR	479633	Identifier	last		479394	1					
ANR	479634	Identifier	next		479394	1					
ANR	479635	Identifier	target		479394	1					
ANR	479636	ElseStatement	else		479394	0					
ANR	479637	CompoundStatement		44:11:1227:1227	479394	0					
ANR	479638	ExpressionStatement	targetlist -> first = target	124:8:3850:3876	479394	0	True				
ANR	479639	AssignmentExpression	targetlist -> first = target		479394	0		=			
ANR	479640	PtrMemberAccess	targetlist -> first		479394	0					
ANR	479641	Identifier	targetlist		479394	0					
ANR	479642	Identifier	first		479394	1					
ANR	479643	Identifier	target		479394	1					
ANR	479644	ExpressionStatement	targetlist -> last = target	126:4:3888:3913	479394	21	True				
ANR	479645	AssignmentExpression	targetlist -> last = target		479394	0		=			
ANR	479646	PtrMemberAccess	targetlist -> last		479394	0					
ANR	479647	Identifier	targetlist		479394	0					
ANR	479648	Identifier	last		479394	1					
ANR	479649	Identifier	target		479394	1					
ANR	479650	ExpressionStatement	"fprintf ( logstream , ""local log: target %s generated\\n"" , targetpath )"	129:4:3935:4001	479394	22	True				
ANR	479651	CallExpression	"fprintf ( logstream , ""local log: target %s generated\\n"" , targetpath )"		479394	0					
ANR	479652	Callee	fprintf		479394	0					
ANR	479653	Identifier	fprintf		479394	0					
ANR	479654	ArgumentList	logstream		479394	1					
ANR	479655	Argument	logstream		479394	0					
ANR	479656	Identifier	logstream		479394	0					
ANR	479657	Argument	"""local log: target %s generated\\n"""		479394	1					
ANR	479658	PrimaryExpression	"""local log: target %s generated\\n"""		479394	0					
ANR	479659	Argument	targetpath		479394	2					
ANR	479660	Identifier	targetpath		479394	0					
ANR	479661	ReturnStatement	return target ;	132:4:4015:4028	479394	23	True				
ANR	479662	Identifier	target		479394	0					
ANR	479663	ReturnType	target_param_t *		479394	1					
ANR	479664	Identifier	gene_target		479394	2					
ANR	479665	ParameterList	"targetlist_param_t * targetlist , char * targetpath"		479394	3					
ANR	479666	Parameter	targetlist_param_t * targetlist	79:29:2531:2560	479394	0	True				
ANR	479667	ParameterType	targetlist_param_t *		479394	0					
ANR	479668	Identifier	targetlist		479394	1					
ANR	479669	Parameter	char * targetpath	79:61:2563:2578	479394	1	True				
ANR	479670	ParameterType	char *		479394	0					
ANR	479671	Identifier	targetpath		479394	1					
ANR	479672	CFGEntryNode	ENTRY		479394		True				
ANR	479673	CFGExitNode	EXIT		479394		True				
ANR	479674	Symbol	isJPTfeasible		479394						
ANR	479675	Symbol	opj_malloc		479394						
ANR	479676	Symbol	target -> fd		479394						
ANR	479677	Symbol	targetlist -> first		479394						
ANR	479678	Symbol	tmpfname		479394						
ANR	479679	Symbol	targetlist -> last		479394						
ANR	479680	Symbol	target -> targetname		479394						
ANR	479681	Symbol	target -> codeidx		479394						
ANR	479682	Symbol	rand		479394						
ANR	479683	Symbol	* * targetlist		479394						
ANR	479684	Symbol	target -> next		479394						
ANR	479685	Symbol	target -> csn		479394						
ANR	479686	Symbol	open_jp2file		479394						
ANR	479687	Symbol	FCGI_stdout		479394						
ANR	479688	Symbol	* jp2idx		479394						
ANR	479689	Symbol	target -> num_of_use		479394						
ANR	479690	Symbol	OPJ_TRUE		479394						
ANR	479691	Symbol	last_csn		479394						
ANR	479692	Symbol	targetlist -> last -> next		479394						
ANR	479693	Symbol	target -> jppstream		479394						
ANR	479694	Symbol	target -> jptstream		479394						
ANR	479695	Symbol	MAX_LENOFTID		479394						
ANR	479696	Symbol	* targetlist		479394						
ANR	479697	Symbol	NULL		479394						
ANR	479698	Symbol	targetlist		479394						
ANR	479699	Symbol	* targetpath		479394						
ANR	479700	Symbol	* targetlist -> last		479394						
ANR	479701	Symbol	target -> tmpfname		479394						
ANR	479702	Symbol	target -> tid		479394						
ANR	479703	Symbol	* tmpfname		479394						
ANR	479704	Symbol	target		479394						
ANR	479705	Symbol	* target		479394						
ANR	479706	Symbol	FCGI_stderr		479394						
ANR	479707	Symbol	jp2idx		479394						
ANR	479708	Symbol	parse_jp2file		479394						
ANR	479709	Symbol	targetpath		479394						
ANR	479710	Symbol	time		479394						
ANR	479711	Symbol	strdup		479394						
ANR	479712	Symbol	logstream		479394						
ANR	479713	Symbol	fd		479394						
ANR	479714	Function	refer_target	135:0:4033:4153							
ANR	479715	FunctionDef	"refer_target (target_param_t * reftarget , target_param_t * * ptr)"		479714	0					
ANR	479716	CompoundStatement		136:0:4100:4153	479714	0					
ANR	479717	ExpressionStatement	* ptr = reftarget	137:4:4106:4122	479714	0	True				
ANR	479718	AssignmentExpression	* ptr = reftarget		479714	0		=			
ANR	479719	UnaryOperationExpression	* ptr		479714	0					
ANR	479720	UnaryOperator	*		479714	0					
ANR	479721	Identifier	ptr		479714	1					
ANR	479722	Identifier	reftarget		479714	1					
ANR	479723	ExpressionStatement	reftarget -> num_of_use ++	138:4:4128:4151	479714	1	True				
ANR	479724	PostIncDecOperationExpression	reftarget -> num_of_use ++		479714	0					
ANR	479725	PtrMemberAccess	reftarget -> num_of_use		479714	0					
ANR	479726	Identifier	reftarget		479714	0					
ANR	479727	Identifier	num_of_use		479714	1					
ANR	479728	IncDec	++		479714	1					
ANR	479729	ReturnType	void		479714	1					
ANR	479730	Identifier	refer_target		479714	2					
ANR	479731	ParameterList	"target_param_t * reftarget , target_param_t * * ptr"		479714	3					
ANR	479732	Parameter	target_param_t * reftarget	135:18:4051:4075	479714	0	True				
ANR	479733	ParameterType	target_param_t *		479714	0					
ANR	479734	Identifier	reftarget		479714	1					
ANR	479735	Parameter	target_param_t * * ptr	135:45:4078:4097	479714	1	True				
ANR	479736	ParameterType	target_param_t * *		479714	0					
ANR	479737	Identifier	ptr		479714	1					
ANR	479738	CFGEntryNode	ENTRY		479714		True				
ANR	479739	CFGExitNode	EXIT		479714		True				
ANR	479740	Symbol	* reftarget		479714						
ANR	479741	Symbol	reftarget -> num_of_use		479714						
ANR	479742	Symbol	* ptr		479714						
ANR	479743	Symbol	reftarget		479714						
ANR	479744	Symbol	ptr		479714						
ANR	479745	Function	unrefer_target	141:0:4156:4228							
ANR	479746	FunctionDef	unrefer_target (target_param_t * target)		479745	0					
ANR	479747	CompoundStatement		142:0:4200:4228	479745	0					
ANR	479748	ExpressionStatement	target -> num_of_use --	143:4:4206:4226	479745	0	True				
ANR	479749	PostIncDecOperationExpression	target -> num_of_use --		479745	0					
ANR	479750	PtrMemberAccess	target -> num_of_use		479745	0					
ANR	479751	Identifier	target		479745	0					
ANR	479752	Identifier	num_of_use		479745	1					
ANR	479753	IncDec	--		479745	1					
ANR	479754	ReturnType	void		479745	1					
ANR	479755	Identifier	unrefer_target		479745	2					
ANR	479756	ParameterList	target_param_t * target		479745	3					
ANR	479757	Parameter	target_param_t * target	141:20:4176:4197	479745	0	True				
ANR	479758	ParameterType	target_param_t *		479745	0					
ANR	479759	Identifier	target		479745	1					
ANR	479760	CFGEntryNode	ENTRY		479745		True				
ANR	479761	CFGExitNode	EXIT		479745		True				
ANR	479762	Symbol	* target		479745						
ANR	479763	Symbol	target -> num_of_use		479745						
ANR	479764	Symbol	target		479745						
ANR	479765	Function	delete_target	146:0:4231:4730							
ANR	479766	FunctionDef	delete_target (target_param_t * * target)		479765	0					
ANR	479767	CompoundStatement		147:0:4275:4730	479765	0					
ANR	479768	ExpressionStatement	close ( ( * target ) -> fd )	148:4:4281:4301	479765	0	True				
ANR	479769	CallExpression	close ( ( * target ) -> fd )		479765	0					
ANR	479770	Callee	close		479765	0					
ANR	479771	Identifier	close		479765	0					
ANR	479772	ArgumentList	( * target ) -> fd		479765	1					
ANR	479773	Argument	( * target ) -> fd		479765	0					
ANR	479774	PtrMemberAccess	( * target ) -> fd		479765	0					
ANR	479775	UnaryOperationExpression	* target		479765	0					
ANR	479776	UnaryOperator	*		479765	0					
ANR	479777	Identifier	target		479765	1					
ANR	479778	Identifier	fd		479765	1					
ANR	479779	IfStatement	if ( ( * target ) -> tmpfname )		479765	1					
ANR	479780	Condition	( * target ) -> tmpfname	151:8:4326:4344	479765	0	True				
ANR	479781	PtrMemberAccess	( * target ) -> tmpfname		479765	0					
ANR	479782	UnaryOperationExpression	* target		479765	0					
ANR	479783	UnaryOperator	*		479765	0					
ANR	479784	Identifier	target		479765	1					
ANR	479785	Identifier	tmpfname		479765	1					
ANR	479786	CompoundStatement		5:29:71:71	479765	1					
ANR	479787	ExpressionStatement	"fprintf ( FCGI_stderr , ""Temporal file %s is deleted\\n"" , ( * target ) -> tmpfname )"	152:8:4357:4431	479765	0	True				
ANR	479788	CallExpression	"fprintf ( FCGI_stderr , ""Temporal file %s is deleted\\n"" , ( * target ) -> tmpfname )"		479765	0					
ANR	479789	Callee	fprintf		479765	0					
ANR	479790	Identifier	fprintf		479765	0					
ANR	479791	ArgumentList	FCGI_stderr		479765	1					
ANR	479792	Argument	FCGI_stderr		479765	0					
ANR	479793	Identifier	FCGI_stderr		479765	0					
ANR	479794	Argument	"""Temporal file %s is deleted\\n"""		479765	1					
ANR	479795	PrimaryExpression	"""Temporal file %s is deleted\\n"""		479765	0					
ANR	479796	Argument	( * target ) -> tmpfname		479765	2					
ANR	479797	PtrMemberAccess	( * target ) -> tmpfname		479765	0					
ANR	479798	UnaryOperationExpression	* target		479765	0					
ANR	479799	UnaryOperator	*		479765	0					
ANR	479800	Identifier	target		479765	1					
ANR	479801	Identifier	tmpfname		479765	1					
ANR	479802	ExpressionStatement	remove ( ( * target ) -> tmpfname )	153:8:4441:4468	479765	1	True				
ANR	479803	CallExpression	remove ( ( * target ) -> tmpfname )		479765	0					
ANR	479804	Callee	remove		479765	0					
ANR	479805	Identifier	remove		479765	0					
ANR	479806	ArgumentList	( * target ) -> tmpfname		479765	1					
ANR	479807	Argument	( * target ) -> tmpfname		479765	0					
ANR	479808	PtrMemberAccess	( * target ) -> tmpfname		479765	0					
ANR	479809	UnaryOperationExpression	* target		479765	0					
ANR	479810	UnaryOperator	*		479765	0					
ANR	479811	Identifier	target		479765	1					
ANR	479812	Identifier	tmpfname		479765	1					
ANR	479813	IfStatement	if ( ( * target ) -> codeidx )		479765	2					
ANR	479814	Condition	( * target ) -> codeidx	157:8:4492:4509	479765	0	True				
ANR	479815	PtrMemberAccess	( * target ) -> codeidx		479765	0					
ANR	479816	UnaryOperationExpression	* target		479765	0					
ANR	479817	UnaryOperator	*		479765	0					
ANR	479818	Identifier	target		479765	1					
ANR	479819	Identifier	codeidx		479765	1					
ANR	479820	CompoundStatement		11:28:236:236	479765	1					
ANR	479821	ExpressionStatement	delete_index ( & ( * target ) -> codeidx )	158:8:4522:4555	479765	0	True				
ANR	479822	CallExpression	delete_index ( & ( * target ) -> codeidx )		479765	0					
ANR	479823	Callee	delete_index		479765	0					
ANR	479824	Identifier	delete_index		479765	0					
ANR	479825	ArgumentList	& ( * target ) -> codeidx		479765	1					
ANR	479826	Argument	& ( * target ) -> codeidx		479765	0					
ANR	479827	UnaryOperationExpression	& ( * target ) -> codeidx		479765	0					
ANR	479828	UnaryOperator	&		479765	0					
ANR	479829	PtrMemberAccess	( * target ) -> codeidx		479765	1					
ANR	479830	UnaryOperationExpression	* target		479765	0					
ANR	479831	UnaryOperator	*		479765	0					
ANR	479832	Identifier	target		479765	1					
ANR	479833	Identifier	codeidx		479765	1					
ANR	479834	ExpressionStatement	"fprintf ( logstream , ""local log: target: %s deleted\\n"" , ( * target ) -> targetname )"	162:4:4583:4659	479765	3	True				
ANR	479835	CallExpression	"fprintf ( logstream , ""local log: target: %s deleted\\n"" , ( * target ) -> targetname )"		479765	0					
ANR	479836	Callee	fprintf		479765	0					
ANR	479837	Identifier	fprintf		479765	0					
ANR	479838	ArgumentList	logstream		479765	1					
ANR	479839	Argument	logstream		479765	0					
ANR	479840	Identifier	logstream		479765	0					
ANR	479841	Argument	"""local log: target: %s deleted\\n"""		479765	1					
ANR	479842	PrimaryExpression	"""local log: target: %s deleted\\n"""		479765	0					
ANR	479843	Argument	( * target ) -> targetname		479765	2					
ANR	479844	PtrMemberAccess	( * target ) -> targetname		479765	0					
ANR	479845	UnaryOperationExpression	* target		479765	0					
ANR	479846	UnaryOperator	*		479765	0					
ANR	479847	Identifier	target		479765	1					
ANR	479848	Identifier	targetname		479765	1					
ANR	479849	ExpressionStatement	opj_free ( ( * target ) -> targetname )	165:4:4673:4704	479765	4	True				
ANR	479850	CallExpression	opj_free ( ( * target ) -> targetname )		479765	0					
ANR	479851	Callee	opj_free		479765	0					
ANR	479852	Identifier	opj_free		479765	0					
ANR	479853	ArgumentList	( * target ) -> targetname		479765	1					
ANR	479854	Argument	( * target ) -> targetname		479765	0					
ANR	479855	PtrMemberAccess	( * target ) -> targetname		479765	0					
ANR	479856	UnaryOperationExpression	* target		479765	0					
ANR	479857	UnaryOperator	*		479765	0					
ANR	479858	Identifier	target		479765	1					
ANR	479859	Identifier	targetname		479765	1					
ANR	479860	ExpressionStatement	opj_free ( * target )	167:4:4711:4728	479765	5	True				
ANR	479861	CallExpression	opj_free ( * target )		479765	0					
ANR	479862	Callee	opj_free		479765	0					
ANR	479863	Identifier	opj_free		479765	0					
ANR	479864	ArgumentList	* target		479765	1					
ANR	479865	Argument	* target		479765	0					
ANR	479866	UnaryOperationExpression	* target		479765	0					
ANR	479867	UnaryOperator	*		479765	0					
ANR	479868	Identifier	target		479765	1					
ANR	479869	ReturnType	void		479765	1					
ANR	479870	Identifier	delete_target		479765	2					
ANR	479871	ParameterList	target_param_t * * target		479765	3					
ANR	479872	Parameter	target_param_t * * target	146:19:4250:4272	479765	0	True				
ANR	479873	ParameterType	target_param_t * *		479765	0					
ANR	479874	Identifier	target		479765	1					
ANR	479875	CFGEntryNode	ENTRY		479765		True				
ANR	479876	CFGExitNode	EXIT		479765		True				
ANR	479877	Symbol	* target		479765						
ANR	479878	Symbol	( * target ) -> tmpfname		479765						
ANR	479879	Symbol	FCGI_stderr		479765						
ANR	479880	Symbol	( * target ) -> codeidx		479765						
ANR	479881	Symbol	( * target ) -> targetname		479765						
ANR	479882	Symbol	& ( * target ) -> codeidx		479765						
ANR	479883	Symbol	* * target		479765						
ANR	479884	Symbol	logstream		479765						
ANR	479885	Symbol	target		479765						
ANR	479886	Symbol	( * target ) -> fd		479765						
ANR	479887	Function	delete_target_in_list	170:0:4733:5242							
ANR	479888	FunctionDef	"delete_target_in_list (target_param_t * * target , targetlist_param_t * targetlist)"		479887	0					
ANR	479889	CompoundStatement		172:0:4844:5242	479887	0					
ANR	479890	IdentifierDeclStatement	target_param_t * ptr ;	173:4:4850:4869	479887	0	True				
ANR	479891	IdentifierDecl	* ptr		479887	0					
ANR	479892	IdentifierDeclType	target_param_t *		479887	0					
ANR	479893	Identifier	ptr		479887	1					
ANR	479894	IfStatement	if ( * target == targetlist -> first )		479887	1					
ANR	479895	Condition	* target == targetlist -> first	175:8:4880:4907	479887	0	True				
ANR	479896	EqualityExpression	* target == targetlist -> first		479887	0		==			
ANR	479897	UnaryOperationExpression	* target		479887	0					
ANR	479898	UnaryOperator	*		479887	0					
ANR	479899	Identifier	target		479887	1					
ANR	479900	PtrMemberAccess	targetlist -> first		479887	1					
ANR	479901	Identifier	targetlist		479887	0					
ANR	479902	Identifier	first		479887	1					
ANR	479903	CompoundStatement		4:38:65:65	479887	1					
ANR	479904	ExpressionStatement	targetlist -> first = ( * target ) -> next	176:8:4920:4955	479887	0	True				
ANR	479905	AssignmentExpression	targetlist -> first = ( * target ) -> next		479887	0		=			
ANR	479906	PtrMemberAccess	targetlist -> first		479887	0					
ANR	479907	Identifier	targetlist		479887	0					
ANR	479908	Identifier	first		479887	1					
ANR	479909	PtrMemberAccess	( * target ) -> next		479887	1					
ANR	479910	UnaryOperationExpression	* target		479887	0					
ANR	479911	UnaryOperator	*		479887	0					
ANR	479912	Identifier	target		479887	1					
ANR	479913	Identifier	next		479887	1					
ANR	479914	ElseStatement	else		479887	0					
ANR	479915	CompoundStatement		6:11:123:123	479887	0					
ANR	479916	ExpressionStatement	ptr = targetlist -> first	178:8:4978:5001	479887	0	True				
ANR	479917	AssignmentExpression	ptr = targetlist -> first		479887	0		=			
ANR	479918	Identifier	ptr		479887	0					
ANR	479919	PtrMemberAccess	targetlist -> first		479887	1					
ANR	479920	Identifier	targetlist		479887	0					
ANR	479921	Identifier	first		479887	1					
ANR	479922	WhileStatement	while ( ptr -> next != * target )		479887	1					
ANR	479923	Condition	ptr -> next != * target	179:15:5018:5037	479887	0	True				
ANR	479924	EqualityExpression	ptr -> next != * target		479887	0		!=			
ANR	479925	PtrMemberAccess	ptr -> next		479887	0					
ANR	479926	Identifier	ptr		479887	0					
ANR	479927	Identifier	next		479887	1					
ANR	479928	UnaryOperationExpression	* target		479887	1					
ANR	479929	UnaryOperator	*		479887	0					
ANR	479930	Identifier	target		479887	1					
ANR	479931	CompoundStatement		8:37:195:195	479887	1					
ANR	479932	ExpressionStatement	ptr = ptr -> next	180:12:5054:5069	479887	0	True				
ANR	479933	AssignmentExpression	ptr = ptr -> next		479887	0		=			
ANR	479934	Identifier	ptr		479887	0					
ANR	479935	PtrMemberAccess	ptr -> next		479887	1					
ANR	479936	Identifier	ptr		479887	0					
ANR	479937	Identifier	next		479887	1					
ANR	479938	ExpressionStatement	ptr -> next = ( * target ) -> next	183:8:5090:5117	479887	2	True				
ANR	479939	AssignmentExpression	ptr -> next = ( * target ) -> next		479887	0		=			
ANR	479940	PtrMemberAccess	ptr -> next		479887	0					
ANR	479941	Identifier	ptr		479887	0					
ANR	479942	Identifier	next		479887	1					
ANR	479943	PtrMemberAccess	( * target ) -> next		479887	1					
ANR	479944	UnaryOperationExpression	* target		479887	0					
ANR	479945	UnaryOperator	*		479887	0					
ANR	479946	Identifier	target		479887	1					
ANR	479947	Identifier	next		479887	1					
ANR	479948	IfStatement	if ( * target == targetlist -> last )		479887	3					
ANR	479949	Condition	* target == targetlist -> last	185:12:5132:5158	479887	0	True				
ANR	479950	EqualityExpression	* target == targetlist -> last		479887	0		==			
ANR	479951	UnaryOperationExpression	* target		479887	0					
ANR	479952	UnaryOperator	*		479887	0					
ANR	479953	Identifier	target		479887	1					
ANR	479954	PtrMemberAccess	targetlist -> last		479887	1					
ANR	479955	Identifier	targetlist		479887	0					
ANR	479956	Identifier	last		479887	1					
ANR	479957	CompoundStatement		14:41:316:316	479887	1					
ANR	479958	ExpressionStatement	targetlist -> last = ptr	186:12:5175:5197	479887	0	True				
ANR	479959	AssignmentExpression	targetlist -> last = ptr		479887	0		=			
ANR	479960	PtrMemberAccess	targetlist -> last		479887	0					
ANR	479961	Identifier	targetlist		479887	0					
ANR	479962	Identifier	last		479887	1					
ANR	479963	Identifier	ptr		479887	1					
ANR	479964	ExpressionStatement	delete_target ( target )	189:4:5219:5240	479887	2	True				
ANR	479965	CallExpression	delete_target ( target )		479887	0					
ANR	479966	Callee	delete_target		479887	0					
ANR	479967	Identifier	delete_target		479887	0					
ANR	479968	ArgumentList	target		479887	1					
ANR	479969	Argument	target		479887	0					
ANR	479970	Identifier	target		479887	0					
ANR	479971	ReturnType	void		479887	1					
ANR	479972	Identifier	delete_target_in_list		479887	2					
ANR	479973	ParameterList	"target_param_t * * target , targetlist_param_t * targetlist"		479887	3					
ANR	479974	Parameter	target_param_t * * target	170:27:4760:4782	479887	0	True				
ANR	479975	ParameterType	target_param_t * *		479887	0					
ANR	479976	Identifier	target		479887	1					
ANR	479977	Parameter	targetlist_param_t * targetlist	171:27:4812:4841	479887	1	True				
ANR	479978	ParameterType	targetlist_param_t *		479887	0					
ANR	479979	Identifier	targetlist		479887	1					
ANR	479980	CFGEntryNode	ENTRY		479887		True				
ANR	479981	CFGExitNode	EXIT		479887		True				
ANR	479982	Symbol	* target		479887						
ANR	479983	Symbol	* targetlist		479887						
ANR	479984	Symbol	targetlist		479887						
ANR	479985	Symbol	targetlist -> first		479887						
ANR	479986	Symbol	targetlist -> last		479887						
ANR	479987	Symbol	* ptr		479887						
ANR	479988	Symbol	( * target ) -> next		479887						
ANR	479989	Symbol	* * target		479887						
ANR	479990	Symbol	target		479887						
ANR	479991	Symbol	ptr		479887						
ANR	479992	Symbol	ptr -> next		479887						
ANR	479993	Function	delete_targetlist	192:0:5245:5556							
ANR	479994	FunctionDef	delete_targetlist (targetlist_param_t * * targetlist)		479993	0					
ANR	479995	CompoundStatement		193:0:5301:5556	479993	0					
ANR	479996	IdentifierDeclStatement	"target_param_t * targetPtr , * targetNext ;"	194:4:5307:5345	479993	0	True				
ANR	479997	IdentifierDecl	* targetPtr		479993	0					
ANR	479998	IdentifierDeclType	target_param_t *		479993	0					
ANR	479999	Identifier	targetPtr		479993	1					
ANR	480000	IdentifierDecl	* targetNext		479993	1					
ANR	480001	IdentifierDeclType	target_param_t *		479993	0					
ANR	480002	Identifier	targetNext		479993	1					
ANR	480003	ExpressionStatement	targetPtr = ( * targetlist ) -> first	196:4:5352:5384	479993	1	True				
ANR	480004	AssignmentExpression	targetPtr = ( * targetlist ) -> first		479993	0		=			
ANR	480005	Identifier	targetPtr		479993	0					
ANR	480006	PtrMemberAccess	( * targetlist ) -> first		479993	1					
ANR	480007	UnaryOperationExpression	* targetlist		479993	0					
ANR	480008	UnaryOperator	*		479993	0					
ANR	480009	Identifier	targetlist		479993	1					
ANR	480010	Identifier	first		479993	1					
ANR	480011	WhileStatement	while ( targetPtr != NULL )		479993	2					
ANR	480012	Condition	targetPtr != NULL	197:11:5397:5413	479993	0	True				
ANR	480013	EqualityExpression	targetPtr != NULL		479993	0		!=			
ANR	480014	Identifier	targetPtr		479993	0					
ANR	480015	Identifier	NULL		479993	1					
ANR	480016	CompoundStatement		5:30:114:114	479993	1					
ANR	480017	ExpressionStatement	targetNext = targetPtr -> next	198:8:5426:5454	479993	0	True				
ANR	480018	AssignmentExpression	targetNext = targetPtr -> next		479993	0		=			
ANR	480019	Identifier	targetNext		479993	0					
ANR	480020	PtrMemberAccess	targetPtr -> next		479993	1					
ANR	480021	Identifier	targetPtr		479993	0					
ANR	480022	Identifier	next		479993	1					
ANR	480023	ExpressionStatement	delete_target ( & targetPtr )	199:8:5464:5489	479993	1	True				
ANR	480024	CallExpression	delete_target ( & targetPtr )		479993	0					
ANR	480025	Callee	delete_target		479993	0					
ANR	480026	Identifier	delete_target		479993	0					
ANR	480027	ArgumentList	& targetPtr		479993	1					
ANR	480028	Argument	& targetPtr		479993	0					
ANR	480029	UnaryOperationExpression	& targetPtr		479993	0					
ANR	480030	UnaryOperator	&		479993	0					
ANR	480031	Identifier	targetPtr		479993	1					
ANR	480032	ExpressionStatement	targetPtr = targetNext	200:8:5499:5521	479993	2	True				
ANR	480033	AssignmentExpression	targetPtr = targetNext		479993	0		=			
ANR	480034	Identifier	targetPtr		479993	0					
ANR	480035	Identifier	targetNext		479993	1					
ANR	480036	ExpressionStatement	opj_free ( * targetlist )	202:4:5533:5554	479993	3	True				
ANR	480037	CallExpression	opj_free ( * targetlist )		479993	0					
ANR	480038	Callee	opj_free		479993	0					
ANR	480039	Identifier	opj_free		479993	0					
ANR	480040	ArgumentList	* targetlist		479993	1					
ANR	480041	Argument	* targetlist		479993	0					
ANR	480042	UnaryOperationExpression	* targetlist		479993	0					
ANR	480043	UnaryOperator	*		479993	0					
ANR	480044	Identifier	targetlist		479993	1					
ANR	480045	ReturnType	void		479993	1					
ANR	480046	Identifier	delete_targetlist		479993	2					
ANR	480047	ParameterList	targetlist_param_t * * targetlist		479993	3					
ANR	480048	Parameter	targetlist_param_t * * targetlist	192:23:5268:5298	479993	0	True				
ANR	480049	ParameterType	targetlist_param_t * *		479993	0					
ANR	480050	Identifier	targetlist		479993	1					
ANR	480051	CFGEntryNode	ENTRY		479993		True				
ANR	480052	CFGExitNode	EXIT		479993		True				
ANR	480053	Symbol	* * targetlist		479993						
ANR	480054	Symbol	& targetPtr		479993						
ANR	480055	Symbol	* targetPtr		479993						
ANR	480056	Symbol	* targetlist		479993						
ANR	480057	Symbol	NULL		479993						
ANR	480058	Symbol	targetlist		479993						
ANR	480059	Symbol	targetPtr -> next		479993						
ANR	480060	Symbol	targetNext		479993						
ANR	480061	Symbol	targetPtr		479993						
ANR	480062	Symbol	( * targetlist ) -> first		479993						
ANR	480063	Function	print_target	205:0:5559:5808							
ANR	480064	FunctionDef	print_target (target_param_t * target)		480063	0					
ANR	480065	CompoundStatement		206:0:5601:5808	480063	0					
ANR	480066	ExpressionStatement	"fprintf ( logstream , ""target:\\n"" )"	207:4:5607:5638	480063	0	True				
ANR	480067	CallExpression	"fprintf ( logstream , ""target:\\n"" )"		480063	0					
ANR	480068	Callee	fprintf		480063	0					
ANR	480069	Identifier	fprintf		480063	0					
ANR	480070	ArgumentList	logstream		480063	1					
ANR	480071	Argument	logstream		480063	0					
ANR	480072	Identifier	logstream		480063	0					
ANR	480073	Argument	"""target:\\n"""		480063	1					
ANR	480074	PrimaryExpression	"""target:\\n"""		480063	0					
ANR	480075	ExpressionStatement	"fprintf ( logstream , ""\\t tid=%s\\n"" , target -> tid )"	208:4:5644:5690	480063	1	True				
ANR	480076	CallExpression	"fprintf ( logstream , ""\\t tid=%s\\n"" , target -> tid )"		480063	0					
ANR	480077	Callee	fprintf		480063	0					
ANR	480078	Identifier	fprintf		480063	0					
ANR	480079	ArgumentList	logstream		480063	1					
ANR	480080	Argument	logstream		480063	0					
ANR	480081	Identifier	logstream		480063	0					
ANR	480082	Argument	"""\\t tid=%s\\n"""		480063	1					
ANR	480083	PrimaryExpression	"""\\t tid=%s\\n"""		480063	0					
ANR	480084	Argument	target -> tid		480063	2					
ANR	480085	PtrMemberAccess	target -> tid		480063	0					
ANR	480086	Identifier	target		480063	0					
ANR	480087	Identifier	tid		480063	1					
ANR	480088	ExpressionStatement	"fprintf ( logstream , ""\\t csn=%d\\n"" , target -> csn )"	209:4:5696:5742	480063	2	True				
ANR	480089	CallExpression	"fprintf ( logstream , ""\\t csn=%d\\n"" , target -> csn )"		480063	0					
ANR	480090	Callee	fprintf		480063	0					
ANR	480091	Identifier	fprintf		480063	0					
ANR	480092	ArgumentList	logstream		480063	1					
ANR	480093	Argument	logstream		480063	0					
ANR	480094	Identifier	logstream		480063	0					
ANR	480095	Argument	"""\\t csn=%d\\n"""		480063	1					
ANR	480096	PrimaryExpression	"""\\t csn=%d\\n"""		480063	0					
ANR	480097	Argument	target -> csn		480063	2					
ANR	480098	PtrMemberAccess	target -> csn		480063	0					
ANR	480099	Identifier	target		480063	0					
ANR	480100	Identifier	csn		480063	1					
ANR	480101	ExpressionStatement	"fprintf ( logstream , ""\\t target=%s\\n\\n"" , target -> targetname )"	210:4:5748:5806	480063	3	True				
ANR	480102	CallExpression	"fprintf ( logstream , ""\\t target=%s\\n\\n"" , target -> targetname )"		480063	0					
ANR	480103	Callee	fprintf		480063	0					
ANR	480104	Identifier	fprintf		480063	0					
ANR	480105	ArgumentList	logstream		480063	1					
ANR	480106	Argument	logstream		480063	0					
ANR	480107	Identifier	logstream		480063	0					
ANR	480108	Argument	"""\\t target=%s\\n\\n"""		480063	1					
ANR	480109	PrimaryExpression	"""\\t target=%s\\n\\n"""		480063	0					
ANR	480110	Argument	target -> targetname		480063	2					
ANR	480111	PtrMemberAccess	target -> targetname		480063	0					
ANR	480112	Identifier	target		480063	0					
ANR	480113	Identifier	targetname		480063	1					
ANR	480114	ReturnType	void		480063	1					
ANR	480115	Identifier	print_target		480063	2					
ANR	480116	ParameterList	target_param_t * target		480063	3					
ANR	480117	Parameter	target_param_t * target	205:18:5577:5598	480063	0	True				
ANR	480118	ParameterType	target_param_t *		480063	0					
ANR	480119	Identifier	target		480063	1					
ANR	480120	CFGEntryNode	ENTRY		480063		True				
ANR	480121	CFGExitNode	EXIT		480063		True				
ANR	480122	Symbol	* target		480063						
ANR	480123	Symbol	target -> csn		480063						
ANR	480124	Symbol	target -> tid		480063						
ANR	480125	Symbol	target -> targetname		480063						
ANR	480126	Symbol	logstream		480063						
ANR	480127	Symbol	target		480063						
ANR	480128	Function	print_alltarget	213:0:5811:6005							
ANR	480129	FunctionDef	print_alltarget (targetlist_param_t * targetlist)		480128	0					
ANR	480130	CompoundStatement		214:0:5864:6005	480128	0					
ANR	480131	IdentifierDeclStatement	target_param_t * ptr ;	215:4:5870:5889	480128	0	True				
ANR	480132	IdentifierDecl	* ptr		480128	0					
ANR	480133	IdentifierDeclType	target_param_t *		480128	0					
ANR	480134	Identifier	ptr		480128	1					
ANR	480135	ExpressionStatement	ptr = targetlist -> first	217:4:5896:5919	480128	1	True				
ANR	480136	AssignmentExpression	ptr = targetlist -> first		480128	0		=			
ANR	480137	Identifier	ptr		480128	0					
ANR	480138	PtrMemberAccess	targetlist -> first		480128	1					
ANR	480139	Identifier	targetlist		480128	0					
ANR	480140	Identifier	first		480128	1					
ANR	480141	WhileStatement	while ( ptr != NULL )		480128	2					
ANR	480142	Condition	ptr != NULL	218:11:5932:5942	480128	0	True				
ANR	480143	EqualityExpression	ptr != NULL		480128	0		!=			
ANR	480144	Identifier	ptr		480128	0					
ANR	480145	Identifier	NULL		480128	1					
ANR	480146	CompoundStatement		5:24:80:80	480128	1					
ANR	480147	ExpressionStatement	print_target ( ptr )	219:8:5955:5972	480128	0	True				
ANR	480148	CallExpression	print_target ( ptr )		480128	0					
ANR	480149	Callee	print_target		480128	0					
ANR	480150	Identifier	print_target		480128	0					
ANR	480151	ArgumentList	ptr		480128	1					
ANR	480152	Argument	ptr		480128	0					
ANR	480153	Identifier	ptr		480128	0					
ANR	480154	ExpressionStatement	ptr = ptr -> next	220:8:5982:5997	480128	1	True				
ANR	480155	AssignmentExpression	ptr = ptr -> next		480128	0		=			
ANR	480156	Identifier	ptr		480128	0					
ANR	480157	PtrMemberAccess	ptr -> next		480128	1					
ANR	480158	Identifier	ptr		480128	0					
ANR	480159	Identifier	next		480128	1					
ANR	480160	ReturnType	void		480128	1					
ANR	480161	Identifier	print_alltarget		480128	2					
ANR	480162	ParameterList	targetlist_param_t * targetlist		480128	3					
ANR	480163	Parameter	targetlist_param_t * targetlist	213:21:5832:5861	480128	0	True				
ANR	480164	ParameterType	targetlist_param_t *		480128	0					
ANR	480165	Identifier	targetlist		480128	1					
ANR	480166	CFGEntryNode	ENTRY		480128		True				
ANR	480167	CFGExitNode	EXIT		480128		True				
ANR	480168	Symbol	* targetlist		480128						
ANR	480169	Symbol	NULL		480128						
ANR	480170	Symbol	targetlist		480128						
ANR	480171	Symbol	targetlist -> first		480128						
ANR	480172	Symbol	* ptr		480128						
ANR	480173	Symbol	ptr		480128						
ANR	480174	Symbol	ptr -> next		480128						
ANR	480175	Function	search_target	224:0:6008:6407							
ANR	480176	FunctionDef	"search_target (const char targetname [ ] , targetlist_param_t * targetlist)"		480175	0					
ANR	480177	CompoundStatement		226:0:6127:6407	480175	0					
ANR	480178	IdentifierDeclStatement	target_param_t * foundtarget ;	227:4:6133:6160	480175	0	True				
ANR	480179	IdentifierDecl	* foundtarget		480175	0					
ANR	480180	IdentifierDeclType	target_param_t *		480175	0					
ANR	480181	Identifier	foundtarget		480175	1					
ANR	480182	ExpressionStatement	foundtarget = targetlist -> first	229:4:6167:6198	480175	1	True				
ANR	480183	AssignmentExpression	foundtarget = targetlist -> first		480175	0		=			
ANR	480184	Identifier	foundtarget		480175	0					
ANR	480185	PtrMemberAccess	targetlist -> first		480175	1					
ANR	480186	Identifier	targetlist		480175	0					
ANR	480187	Identifier	first		480175	1					
ANR	480188	WhileStatement	while ( foundtarget != NULL )		480175	2					
ANR	480189	Condition	foundtarget != NULL	231:11:6212:6230	480175	0	True				
ANR	480190	EqualityExpression	foundtarget != NULL		480175	0		!=			
ANR	480191	Identifier	foundtarget		480175	0					
ANR	480192	Identifier	NULL		480175	1					
ANR	480193	CompoundStatement		6:32:105:105	480175	1					
ANR	480194	IfStatement	"if ( strcmp ( targetname , foundtarget -> targetname ) == 0 )"		480175	0					
ANR	480195	Condition	"strcmp ( targetname , foundtarget -> targetname ) == 0"	233:12:6248:6295	480175	0	True				
ANR	480196	EqualityExpression	"strcmp ( targetname , foundtarget -> targetname ) == 0"		480175	0		==			
ANR	480197	CallExpression	"strcmp ( targetname , foundtarget -> targetname )"		480175	0					
ANR	480198	Callee	strcmp		480175	0					
ANR	480199	Identifier	strcmp		480175	0					
ANR	480200	ArgumentList	targetname		480175	1					
ANR	480201	Argument	targetname		480175	0					
ANR	480202	Identifier	targetname		480175	0					
ANR	480203	Argument	foundtarget -> targetname		480175	1					
ANR	480204	PtrMemberAccess	foundtarget -> targetname		480175	0					
ANR	480205	Identifier	foundtarget		480175	0					
ANR	480206	Identifier	targetname		480175	1					
ANR	480207	PrimaryExpression	0		480175	1					
ANR	480208	CompoundStatement		8:62:170:170	480175	1					
ANR	480209	ReturnStatement	return foundtarget ;	234:12:6312:6330	480175	0	True				
ANR	480210	Identifier	foundtarget		480175	0					
ANR	480211	ExpressionStatement	foundtarget = foundtarget -> next	237:8:6351:6382	480175	1	True				
ANR	480212	AssignmentExpression	foundtarget = foundtarget -> next		480175	0		=			
ANR	480213	Identifier	foundtarget		480175	0					
ANR	480214	PtrMemberAccess	foundtarget -> next		480175	1					
ANR	480215	Identifier	foundtarget		480175	0					
ANR	480216	Identifier	next		480175	1					
ANR	480217	ReturnStatement	return NULL ;	239:4:6394:6405	480175	3	True				
ANR	480218	Identifier	NULL		480175	0					
ANR	480219	ReturnType	target_param_t *		480175	1					
ANR	480220	Identifier	search_target		480175	2					
ANR	480221	ParameterList	"const char targetname [ ] , targetlist_param_t * targetlist"		480175	3					
ANR	480222	Parameter	const char targetname [ ]	224:31:6039:6061	480175	0	True				
ANR	480223	ParameterType	const char [ ]		480175	0					
ANR	480224	Identifier	targetname		480175	1					
ANR	480225	Parameter	targetlist_param_t * targetlist	225:31:6095:6124	480175	1	True				
ANR	480226	ParameterType	targetlist_param_t *		480175	0					
ANR	480227	Identifier	targetlist		480175	1					
ANR	480228	CFGEntryNode	ENTRY		480175		True				
ANR	480229	CFGExitNode	EXIT		480175		True				
ANR	480230	Symbol	targetname		480175						
ANR	480231	Symbol	strcmp		480175						
ANR	480232	Symbol	* targetlist		480175						
ANR	480233	Symbol	NULL		480175						
ANR	480234	Symbol	targetlist		480175						
ANR	480235	Symbol	targetlist -> first		480175						
ANR	480236	Symbol	* foundtarget		480175						
ANR	480237	Symbol	foundtarget -> targetname		480175						
ANR	480238	Symbol	foundtarget		480175						
ANR	480239	Symbol	foundtarget -> next		480175						
ANR	480240	Function	search_targetBytid	242:0:6410:6799							
ANR	480241	FunctionDef	"search_targetBytid (const char tid [ ] , targetlist_param_t * targetlist)"		480240	0					
ANR	480242	CompoundStatement		244:0:6532:6799	480240	0					
ANR	480243	IdentifierDeclStatement	target_param_t * foundtarget ;	245:4:6538:6565	480240	0	True				
ANR	480244	IdentifierDecl	* foundtarget		480240	0					
ANR	480245	IdentifierDeclType	target_param_t *		480240	0					
ANR	480246	Identifier	foundtarget		480240	1					
ANR	480247	ExpressionStatement	foundtarget = targetlist -> first	247:4:6572:6603	480240	1	True				
ANR	480248	AssignmentExpression	foundtarget = targetlist -> first		480240	0		=			
ANR	480249	Identifier	foundtarget		480240	0					
ANR	480250	PtrMemberAccess	targetlist -> first		480240	1					
ANR	480251	Identifier	targetlist		480240	0					
ANR	480252	Identifier	first		480240	1					
ANR	480253	WhileStatement	while ( foundtarget != NULL )		480240	2					
ANR	480254	Condition	foundtarget != NULL	249:11:6617:6635	480240	0	True				
ANR	480255	EqualityExpression	foundtarget != NULL		480240	0		!=			
ANR	480256	Identifier	foundtarget		480240	0					
ANR	480257	Identifier	NULL		480240	1					
ANR	480258	CompoundStatement		6:32:105:105	480240	1					
ANR	480259	IfStatement	"if ( strcmp ( tid , foundtarget -> tid ) == 0 )"		480240	0					
ANR	480260	Condition	"strcmp ( tid , foundtarget -> tid ) == 0"	251:12:6653:6686	480240	0	True				
ANR	480261	EqualityExpression	"strcmp ( tid , foundtarget -> tid ) == 0"		480240	0		==			
ANR	480262	CallExpression	"strcmp ( tid , foundtarget -> tid )"		480240	0					
ANR	480263	Callee	strcmp		480240	0					
ANR	480264	Identifier	strcmp		480240	0					
ANR	480265	ArgumentList	tid		480240	1					
ANR	480266	Argument	tid		480240	0					
ANR	480267	Identifier	tid		480240	0					
ANR	480268	Argument	foundtarget -> tid		480240	1					
ANR	480269	PtrMemberAccess	foundtarget -> tid		480240	0					
ANR	480270	Identifier	foundtarget		480240	0					
ANR	480271	Identifier	tid		480240	1					
ANR	480272	PrimaryExpression	0		480240	1					
ANR	480273	CompoundStatement		8:48:156:156	480240	1					
ANR	480274	ReturnStatement	return foundtarget ;	252:12:6703:6721	480240	0	True				
ANR	480275	Identifier	foundtarget		480240	0					
ANR	480276	ExpressionStatement	foundtarget = foundtarget -> next	255:8:6742:6773	480240	1	True				
ANR	480277	AssignmentExpression	foundtarget = foundtarget -> next		480240	0		=			
ANR	480278	Identifier	foundtarget		480240	0					
ANR	480279	PtrMemberAccess	foundtarget -> next		480240	1					
ANR	480280	Identifier	foundtarget		480240	0					
ANR	480281	Identifier	next		480240	1					
ANR	480282	ReturnStatement	return NULL ;	258:4:6786:6797	480240	3	True				
ANR	480283	Identifier	NULL		480240	0					
ANR	480284	ReturnType	target_param_t *		480240	1					
ANR	480285	Identifier	search_targetBytid		480240	2					
ANR	480286	ParameterList	"const char tid [ ] , targetlist_param_t * targetlist"		480240	3					
ANR	480287	Parameter	const char tid [ ]	242:36:6446:6461	480240	0	True				
ANR	480288	ParameterType	const char [ ]		480240	0					
ANR	480289	Identifier	tid		480240	1					
ANR	480290	Parameter	targetlist_param_t * targetlist	243:36:6500:6529	480240	1	True				
ANR	480291	ParameterType	targetlist_param_t *		480240	0					
ANR	480292	Identifier	targetlist		480240	1					
ANR	480293	CFGEntryNode	ENTRY		480240		True				
ANR	480294	CFGExitNode	EXIT		480240		True				
ANR	480295	Symbol	strcmp		480240						
ANR	480296	Symbol	* targetlist		480240						
ANR	480297	Symbol	NULL		480240						
ANR	480298	Symbol	targetlist		480240						
ANR	480299	Symbol	targetlist -> first		480240						
ANR	480300	Symbol	* foundtarget		480240						
ANR	480301	Symbol	tid		480240						
ANR	480302	Symbol	foundtarget		480240						
ANR	480303	Symbol	foundtarget -> tid		480240						
ANR	480304	Symbol	foundtarget -> next		480240						
ANR	480305	DeclStmt									
ANR	480306	Decl							int	"int ( const char filepath [ ] , char tmpfname [ ] )"	open_remotefile
ANR	480307	Function	open_jp2file	263:0:6864:8161							
ANR	480308	FunctionDef	"open_jp2file (const char filepath [ ] , char tmpfname [ ])"		480307	0					
ANR	480309	CompoundStatement		264:0:6921:8161	480307	0					
ANR	480310	IdentifierDeclStatement	int fd ;	265:4:6927:6933	480307	0	True				
ANR	480311	IdentifierDecl	fd		480307	0					
ANR	480312	IdentifierDeclType	int		480307	0					
ANR	480313	Identifier	fd		480307	1					
ANR	480314	IdentifierDeclStatement	char * data ;	266:4:6939:6949	480307	1	True				
ANR	480315	IdentifierDecl	* data		480307	0					
ANR	480316	IdentifierDeclType	char *		480307	0					
ANR	480317	Identifier	data		480307	1					
ANR	480318	IfStatement	"if ( strncmp ( filepath , ""http://"" , 7 ) == 0 )"		480307	2					
ANR	480319	Condition	"strncmp ( filepath , ""http://"" , 7 ) == 0"	269:8:7014:7049	480307	0	True				
ANR	480320	EqualityExpression	"strncmp ( filepath , ""http://"" , 7 ) == 0"		480307	0		==			
ANR	480321	CallExpression	"strncmp ( filepath , ""http://"" , 7 )"		480307	0					
ANR	480322	Callee	strncmp		480307	0					
ANR	480323	Identifier	strncmp		480307	0					
ANR	480324	ArgumentList	filepath		480307	1					
ANR	480325	Argument	filepath		480307	0					
ANR	480326	Identifier	filepath		480307	0					
ANR	480327	Argument	"""http://"""		480307	1					
ANR	480328	PrimaryExpression	"""http://"""		480307	0					
ANR	480329	Argument	7		480307	2					
ANR	480330	PrimaryExpression	7		480307	0					
ANR	480331	PrimaryExpression	0		480307	1					
ANR	480332	CompoundStatement		6:46:130:130	480307	1					
ANR	480333	IfStatement	"if ( ( fd = open_remotefile ( filepath , tmpfname ) ) == - 1 )"		480307	0					
ANR	480334	Condition	"( fd = open_remotefile ( filepath , tmpfname ) ) == - 1"	270:12:7066:7113	480307	0	True				
ANR	480335	EqualityExpression	"( fd = open_remotefile ( filepath , tmpfname ) ) == - 1"		480307	0		==			
ANR	480336	AssignmentExpression	"fd = open_remotefile ( filepath , tmpfname )"		480307	0		=			
ANR	480337	Identifier	fd		480307	0					
ANR	480338	CallExpression	"open_remotefile ( filepath , tmpfname )"		480307	1					
ANR	480339	Callee	open_remotefile		480307	0					
ANR	480340	Identifier	open_remotefile		480307	0					
ANR	480341	ArgumentList	filepath		480307	1					
ANR	480342	Argument	filepath		480307	0					
ANR	480343	Identifier	filepath		480307	0					
ANR	480344	Argument	tmpfname		480307	1					
ANR	480345	Identifier	tmpfname		480307	0					
ANR	480346	UnaryOperationExpression	- 1		480307	1					
ANR	480347	UnaryOperator	-		480307	0					
ANR	480348	PrimaryExpression	1		480307	1					
ANR	480349	CompoundStatement		7:62:194:194	480307	1					
ANR	480350	ReturnStatement	return - 1 ;	271:12:7130:7139	480307	0	True				
ANR	480351	UnaryOperationExpression	- 1		480307	0					
ANR	480352	UnaryOperator	-		480307	0					
ANR	480353	PrimaryExpression	1		480307	1					
ANR	480354	ElseStatement	else		480307	0					
ANR	480355	CompoundStatement		10:11:240:240	480307	0					
ANR	480356	ExpressionStatement	tmpfname [ 0 ] = 0	274:8:7172:7187	480307	0	True				
ANR	480357	AssignmentExpression	tmpfname [ 0 ] = 0		480307	0		=			
ANR	480358	ArrayIndexing	tmpfname [ 0 ]		480307	0					
ANR	480359	Identifier	tmpfname		480307	0					
ANR	480360	PrimaryExpression	0		480307	1					
ANR	480361	PrimaryExpression	0		480307	1					
ANR	480362	IfStatement	"if ( ( fd = open ( filepath , O_RDONLY ) ) == - 1 )"		480307	1					
ANR	480363	Condition	"( fd = open ( filepath , O_RDONLY ) ) == - 1"	275:12:7201:7237	480307	0	True				
ANR	480364	EqualityExpression	"( fd = open ( filepath , O_RDONLY ) ) == - 1"		480307	0		==			
ANR	480365	AssignmentExpression	"fd = open ( filepath , O_RDONLY )"		480307	0		=			
ANR	480366	Identifier	fd		480307	0					
ANR	480367	CallExpression	"open ( filepath , O_RDONLY )"		480307	1					
ANR	480368	Callee	open		480307	0					
ANR	480369	Identifier	open		480307	0					
ANR	480370	ArgumentList	filepath		480307	1					
ANR	480371	Argument	filepath		480307	0					
ANR	480372	Identifier	filepath		480307	0					
ANR	480373	Argument	O_RDONLY		480307	1					
ANR	480374	Identifier	O_RDONLY		480307	0					
ANR	480375	UnaryOperationExpression	- 1		480307	1					
ANR	480376	UnaryOperator	-		480307	0					
ANR	480377	PrimaryExpression	1		480307	1					
ANR	480378	CompoundStatement		12:51:318:318	480307	1					
ANR	480379	ExpressionStatement	"fprintf ( FCGI_stdout , ""Reason: Target %s not found\\r\\n"" , filepath )"	276:12:7254:7319	480307	0	True				
ANR	480380	CallExpression	"fprintf ( FCGI_stdout , ""Reason: Target %s not found\\r\\n"" , filepath )"		480307	0					
ANR	480381	Callee	fprintf		480307	0					
ANR	480382	Identifier	fprintf		480307	0					
ANR	480383	ArgumentList	FCGI_stdout		480307	1					
ANR	480384	Argument	FCGI_stdout		480307	0					
ANR	480385	Identifier	FCGI_stdout		480307	0					
ANR	480386	Argument	"""Reason: Target %s not found\\r\\n"""		480307	1					
ANR	480387	PrimaryExpression	"""Reason: Target %s not found\\r\\n"""		480307	0					
ANR	480388	Argument	filepath		480307	2					
ANR	480389	Identifier	filepath		480307	0					
ANR	480390	ReturnStatement	return - 1 ;	277:12:7333:7342	480307	1	True				
ANR	480391	UnaryOperationExpression	- 1		480307	0					
ANR	480392	UnaryOperator	-		480307	0					
ANR	480393	PrimaryExpression	1		480307	1					
ANR	480394	IfStatement	"if ( lseek ( fd , 0 , SEEK_SET ) == - 1 )"		480307	3					
ANR	480395	Condition	"lseek ( fd , 0 , SEEK_SET ) == - 1"	281:8:7413:7440	480307	0	True				
ANR	480396	EqualityExpression	"lseek ( fd , 0 , SEEK_SET ) == - 1"		480307	0		==			
ANR	480397	CallExpression	"lseek ( fd , 0 , SEEK_SET )"		480307	0					
ANR	480398	Callee	lseek		480307	0					
ANR	480399	Identifier	lseek		480307	0					
ANR	480400	ArgumentList	fd		480307	1					
ANR	480401	Argument	fd		480307	0					
ANR	480402	Identifier	fd		480307	0					
ANR	480403	Argument	0		480307	1					
ANR	480404	PrimaryExpression	0		480307	0					
ANR	480405	Argument	SEEK_SET		480307	2					
ANR	480406	Identifier	SEEK_SET		480307	0					
ANR	480407	UnaryOperationExpression	- 1		480307	1					
ANR	480408	UnaryOperator	-		480307	0					
ANR	480409	PrimaryExpression	1		480307	1					
ANR	480410	CompoundStatement		18:38:521:521	480307	1					
ANR	480411	ExpressionStatement	close ( fd )	282:8:7453:7462	480307	0	True				
ANR	480412	CallExpression	close ( fd )		480307	0					
ANR	480413	Callee	close		480307	0					
ANR	480414	Identifier	close		480307	0					
ANR	480415	ArgumentList	fd		480307	1					
ANR	480416	Argument	fd		480307	0					
ANR	480417	Identifier	fd		480307	0					
ANR	480418	ExpressionStatement	"fprintf ( FCGI_stdout , ""Reason: Target %s broken (lseek error)\\r\\n"" , filepath )"	283:8:7472:7548	480307	1	True				
ANR	480419	CallExpression	"fprintf ( FCGI_stdout , ""Reason: Target %s broken (lseek error)\\r\\n"" , filepath )"		480307	0					
ANR	480420	Callee	fprintf		480307	0					
ANR	480421	Identifier	fprintf		480307	0					
ANR	480422	ArgumentList	FCGI_stdout		480307	1					
ANR	480423	Argument	FCGI_stdout		480307	0					
ANR	480424	Identifier	FCGI_stdout		480307	0					
ANR	480425	Argument	"""Reason: Target %s broken (lseek error)\\r\\n"""		480307	1					
ANR	480426	PrimaryExpression	"""Reason: Target %s broken (lseek error)\\r\\n"""		480307	0					
ANR	480427	Argument	filepath		480307	2					
ANR	480428	Identifier	filepath		480307	0					
ANR	480429	ReturnStatement	return - 1 ;	284:8:7558:7567	480307	2	True				
ANR	480430	UnaryOperationExpression	- 1		480307	0					
ANR	480431	UnaryOperator	-		480307	0					
ANR	480432	PrimaryExpression	1		480307	1					
ANR	480433	ExpressionStatement	data = ( char * ) opj_malloc ( 12 )	287:4:7580:7609	480307	4	True				
ANR	480434	AssignmentExpression	data = ( char * ) opj_malloc ( 12 )		480307	0		=			
ANR	480435	Identifier	data		480307	0					
ANR	480436	CastExpression	( char * ) opj_malloc ( 12 )		480307	1					
ANR	480437	CastTarget	char *		480307	0					
ANR	480438	CallExpression	opj_malloc ( 12 )		480307	1					
ANR	480439	Callee	opj_malloc		480307	0					
ANR	480440	Identifier	opj_malloc		480307	0					
ANR	480441	ArgumentList	12		480307	1					
ANR	480442	Argument	12		480307	0					
ANR	480443	PrimaryExpression	12		480307	0					
ANR	480444	IfStatement	"if ( read ( fd , data , 12 ) != 12 )"		480307	5					
ANR	480445	Condition	"read ( fd , data , 12 ) != 12"	289:8:7641:7664	480307	0	True				
ANR	480446	EqualityExpression	"read ( fd , data , 12 ) != 12"		480307	0		!=			
ANR	480447	CallExpression	"read ( fd , data , 12 )"		480307	0					
ANR	480448	Callee	read		480307	0					
ANR	480449	Identifier	read		480307	0					
ANR	480450	ArgumentList	fd		480307	1					
ANR	480451	Argument	fd		480307	0					
ANR	480452	Identifier	fd		480307	0					
ANR	480453	Argument	data		480307	1					
ANR	480454	Identifier	data		480307	0					
ANR	480455	Argument	12		480307	2					
ANR	480456	PrimaryExpression	12		480307	0					
ANR	480457	PrimaryExpression	12		480307	1					
ANR	480458	CompoundStatement		26:34:745:745	480307	1					
ANR	480459	ExpressionStatement	opj_free ( data )	290:8:7677:7691	480307	0	True				
ANR	480460	CallExpression	opj_free ( data )		480307	0					
ANR	480461	Callee	opj_free		480307	0					
ANR	480462	Identifier	opj_free		480307	0					
ANR	480463	ArgumentList	data		480307	1					
ANR	480464	Argument	data		480307	0					
ANR	480465	Identifier	data		480307	0					
ANR	480466	ExpressionStatement	close ( fd )	291:8:7701:7710	480307	1	True				
ANR	480467	CallExpression	close ( fd )		480307	0					
ANR	480468	Callee	close		480307	0					
ANR	480469	Identifier	close		480307	0					
ANR	480470	ArgumentList	fd		480307	1					
ANR	480471	Argument	fd		480307	0					
ANR	480472	Identifier	fd		480307	0					
ANR	480473	ExpressionStatement	"fprintf ( FCGI_stdout , ""Reason: Target %s broken (read error)\\r\\n"" , filepath )"	292:8:7720:7795	480307	2	True				
ANR	480474	CallExpression	"fprintf ( FCGI_stdout , ""Reason: Target %s broken (read error)\\r\\n"" , filepath )"		480307	0					
ANR	480475	Callee	fprintf		480307	0					
ANR	480476	Identifier	fprintf		480307	0					
ANR	480477	ArgumentList	FCGI_stdout		480307	1					
ANR	480478	Argument	FCGI_stdout		480307	0					
ANR	480479	Identifier	FCGI_stdout		480307	0					
ANR	480480	Argument	"""Reason: Target %s broken (read error)\\r\\n"""		480307	1					
ANR	480481	PrimaryExpression	"""Reason: Target %s broken (read error)\\r\\n"""		480307	0					
ANR	480482	Argument	filepath		480307	2					
ANR	480483	Identifier	filepath		480307	0					
ANR	480484	ReturnStatement	return - 1 ;	293:8:7805:7814	480307	3	True				
ANR	480485	UnaryOperationExpression	- 1		480307	0					
ANR	480486	UnaryOperator	-		480307	0					
ANR	480487	PrimaryExpression	1		480307	1					
ANR	480488	IfStatement	"if ( * data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 ) )"		480307	6					
ANR	480489	Condition	"* data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"	296:8:7831:7940	480307	0	True				
ANR	480490	OrExpression	"* data || * ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		480307	0		||			
ANR	480491	UnaryOperationExpression	* data		480307	0					
ANR	480492	UnaryOperator	*		480307	0					
ANR	480493	Identifier	data		480307	1					
ANR	480494	OrExpression	"* ( data + 1 ) || * ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		480307	1		||			
ANR	480495	UnaryOperationExpression	* ( data + 1 )		480307	0					
ANR	480496	UnaryOperator	*		480307	0					
ANR	480497	AdditiveExpression	data + 1		480307	1		+			
ANR	480498	Identifier	data		480307	0					
ANR	480499	PrimaryExpression	1		480307	1					
ANR	480500	OrExpression	"* ( data + 2 ) || * ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		480307	1		||			
ANR	480501	UnaryOperationExpression	* ( data + 2 )		480307	0					
ANR	480502	UnaryOperator	*		480307	0					
ANR	480503	AdditiveExpression	data + 2		480307	1		+			
ANR	480504	Identifier	data		480307	0					
ANR	480505	PrimaryExpression	2		480307	1					
ANR	480506	OrExpression	"* ( data + 3 ) != 12 || strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		480307	1		||			
ANR	480507	EqualityExpression	* ( data + 3 ) != 12		480307	0		!=			
ANR	480508	UnaryOperationExpression	* ( data + 3 )		480307	0					
ANR	480509	UnaryOperator	*		480307	0					
ANR	480510	AdditiveExpression	data + 3		480307	1		+			
ANR	480511	Identifier	data		480307	0					
ANR	480512	PrimaryExpression	3		480307	1					
ANR	480513	PrimaryExpression	12		480307	1					
ANR	480514	CallExpression	"strncmp ( data + 4 , ""jP  \\r\\n\\x87\\n"" , 8 )"		480307	1					
ANR	480515	Callee	strncmp		480307	0					
ANR	480516	Identifier	strncmp		480307	0					
ANR	480517	ArgumentList	data + 4		480307	1					
ANR	480518	Argument	data + 4		480307	0					
ANR	480519	AdditiveExpression	data + 4		480307	0		+			
ANR	480520	Identifier	data		480307	0					
ANR	480521	PrimaryExpression	4		480307	1					
ANR	480522	Argument	"""jP  \\r\\n\\x87\\n"""		480307	1					
ANR	480523	PrimaryExpression	"""jP  \\r\\n\\x87\\n"""		480307	0					
ANR	480524	Argument	8		480307	2					
ANR	480525	PrimaryExpression	8		480307	0					
ANR	480526	CompoundStatement		34:73:1021:1021	480307	1					
ANR	480527	ExpressionStatement	opj_free ( data )	298:8:7953:7967	480307	0	True				
ANR	480528	CallExpression	opj_free ( data )		480307	0					
ANR	480529	Callee	opj_free		480307	0					
ANR	480530	Identifier	opj_free		480307	0					
ANR	480531	ArgumentList	data		480307	1					
ANR	480532	Argument	data		480307	0					
ANR	480533	Identifier	data		480307	0					
ANR	480534	ExpressionStatement	close ( fd )	299:8:7977:7986	480307	1	True				
ANR	480535	CallExpression	close ( fd )		480307	0					
ANR	480536	Callee	close		480307	0					
ANR	480537	Identifier	close		480307	0					
ANR	480538	ArgumentList	fd		480307	1					
ANR	480539	Argument	fd		480307	0					
ANR	480540	Identifier	fd		480307	0					
ANR	480541	ExpressionStatement	"fprintf ( FCGI_stdout , ""Reason: No JPEG 2000 Signature box in target %s\\r\\n"" , filepath )"	300:8:7996:8097	480307	2	True				
ANR	480542	CallExpression	"fprintf ( FCGI_stdout , ""Reason: No JPEG 2000 Signature box in target %s\\r\\n"" , filepath )"		480307	0					
ANR	480543	Callee	fprintf		480307	0					
ANR	480544	Identifier	fprintf		480307	0					
ANR	480545	ArgumentList	FCGI_stdout		480307	1					
ANR	480546	Argument	FCGI_stdout		480307	0					
ANR	480547	Identifier	FCGI_stdout		480307	0					
ANR	480548	Argument	"""Reason: No JPEG 2000 Signature box in target %s\\r\\n"""		480307	1					
ANR	480549	PrimaryExpression	"""Reason: No JPEG 2000 Signature box in target %s\\r\\n"""		480307	0					
ANR	480550	Argument	filepath		480307	2					
ANR	480551	Identifier	filepath		480307	0					
ANR	480552	ReturnStatement	return - 1 ;	302:8:8107:8116	480307	3	True				
ANR	480553	UnaryOperationExpression	- 1		480307	0					
ANR	480554	UnaryOperator	-		480307	0					
ANR	480555	PrimaryExpression	1		480307	1					
ANR	480556	ExpressionStatement	opj_free ( data )	305:4:8129:8143	480307	7	True				
ANR	480557	CallExpression	opj_free ( data )		480307	0					
ANR	480558	Callee	opj_free		480307	0					
ANR	480559	Identifier	opj_free		480307	0					
ANR	480560	ArgumentList	data		480307	1					
ANR	480561	Argument	data		480307	0					
ANR	480562	Identifier	data		480307	0					
ANR	480563	ReturnStatement	return fd ;	307:4:8150:8159	480307	8	True				
ANR	480564	Identifier	fd		480307	0					
ANR	480565	ReturnType	int		480307	1					
ANR	480566	Identifier	open_jp2file		480307	2					
ANR	480567	ParameterList	"const char filepath [ ] , char tmpfname [ ]"		480307	3					
ANR	480568	Parameter	const char filepath [ ]	263:17:6881:6901	480307	0	True				
ANR	480569	ParameterType	const char [ ]		480307	0					
ANR	480570	Identifier	filepath		480307	1					
ANR	480571	Parameter	char tmpfname [ ]	263:40:6904:6918	480307	1	True				
ANR	480572	ParameterType	char [ ]		480307	0					
ANR	480573	Identifier	tmpfname		480307	1					
ANR	480574	CFGEntryNode	ENTRY		480307		True				
ANR	480575	CFGExitNode	EXIT		480307		True				
ANR	480576	Symbol	SEEK_SET		480307						
ANR	480577	Symbol	opj_malloc		480307						
ANR	480578	Symbol	lseek		480307						
ANR	480579	Symbol	read		480307						
ANR	480580	Symbol	data		480307						
ANR	480581	Symbol	tmpfname		480307						
ANR	480582	Symbol	* tmpfname		480307						
ANR	480583	Symbol	strncmp		480307						
ANR	480584	Symbol	O_RDONLY		480307						
ANR	480585	Symbol	filepath		480307						
ANR	480586	Symbol	* ( data + 3 )		480307						
ANR	480587	Symbol	* ( data + 2 )		480307						
ANR	480588	Symbol	FCGI_stdout		480307						
ANR	480589	Symbol	* ( data + 1 )		480307						
ANR	480590	Symbol	* data		480307						
ANR	480591	Symbol	fd		480307						
ANR	480592	Symbol	open_remotefile		480307						
ANR	480593	Symbol	open		480307						
ANR	480594	DeclStmt									
ANR	480595	Decl							size_t	"size_t ( void * ptr , size_t size , size_t nmemb , void * stream )"	write_data
ANR	480596	Function	open_remotefile	314:0:8264:9336							
ANR	480597	FunctionDef	"open_remotefile (const char filepath [ ] , char tmpfname [ ])"		480596	0					
ANR	480598	CompoundStatement		315:0:8324:9336	480596	0					
ANR	480599	ExpressionStatement	( void ) filepath	317:4:8345:8359	480596	0	True				
ANR	480600	CastExpression	( void ) filepath		480596	0					
ANR	480601	CastTarget	void		480596	0					
ANR	480602	Identifier	filepath		480596	1					
ANR	480603	ExpressionStatement	( void ) tmpfname	318:4:8365:8379	480596	1	True				
ANR	480604	CastExpression	( void ) tmpfname		480596	0					
ANR	480605	CastTarget	void		480596	0					
ANR	480606	Identifier	tmpfname		480596	1					
ANR	480607	ExpressionStatement	"fprintf ( FCGI_stderr , ""Remote file can not be opened in local mode\\n"" )"	319:4:8385:8454	480596	2	True				
ANR	480608	CallExpression	"fprintf ( FCGI_stderr , ""Remote file can not be opened in local mode\\n"" )"		480596	0					
ANR	480609	Callee	fprintf		480596	0					
ANR	480610	Identifier	fprintf		480596	0					
ANR	480611	ArgumentList	FCGI_stderr		480596	1					
ANR	480612	Argument	FCGI_stderr		480596	0					
ANR	480613	Identifier	FCGI_stderr		480596	0					
ANR	480614	Argument	"""Remote file can not be opened in local mode\\n"""		480596	1					
ANR	480615	PrimaryExpression	"""Remote file can not be opened in local mode\\n"""		480596	0					
ANR	480616	ReturnStatement	return - 1 ;	320:4:8460:8469	480596	3	True				
ANR	480617	UnaryOperationExpression	- 1		480596	0					
ANR	480618	UnaryOperator	-		480596	0					
ANR	480619	PrimaryExpression	1		480596	1					
ANR	480620	ReturnType	int		480596	1					
ANR	480621	Identifier	open_remotefile		480596	2					
ANR	480622	ParameterList	"const char filepath [ ] , char tmpfname [ ]"		480596	3					
ANR	480623	Parameter	const char filepath [ ]	314:20:8284:8304	480596	0	True				
ANR	480624	ParameterType	const char [ ]		480596	0					
ANR	480625	Identifier	filepath		480596	1					
ANR	480626	Parameter	char tmpfname [ ]	314:43:8307:8321	480596	1	True				
ANR	480627	ParameterType	char [ ]		480596	0					
ANR	480628	Identifier	tmpfname		480596	1					
ANR	480629	CFGEntryNode	ENTRY		480596		True				
ANR	480630	CFGExitNode	EXIT		480596		True				
ANR	480631	Symbol	FCGI_stderr		480596						
ANR	480632	Symbol	filepath		480596						
ANR	480633	Symbol	tmpfname		480596						
ANR	480634	Function	write_data	350:0:9353:9569							
ANR	480635	FunctionDef	"write_data (void * ptr , size_t size , size_t nmemb , void * stream)"		480634	0					
ANR	480636	CompoundStatement		351:0:9430:9569	480634	0					
ANR	480637	IdentifierDeclStatement	int * fd = ( int * ) stream ;	352:4:9436:9459	480634	0	True				
ANR	480638	IdentifierDecl	* fd = ( int * ) stream		480634	0					
ANR	480639	IdentifierDeclType	int *		480634	0					
ANR	480640	Identifier	fd		480634	1					
ANR	480641	AssignmentExpression	* fd = ( int * ) stream		480634	2		=			
ANR	480642	Identifier	fd		480634	0					
ANR	480643	CastExpression	( int * ) stream		480634	1					
ANR	480644	CastTarget	int *		480634	0					
ANR	480645	Identifier	stream		480634	1					
ANR	480646	IdentifierDeclStatement	"ssize_t written = write ( * fd , ptr , size * nmemb ) ;"	353:4:9465:9512	480634	1	True				
ANR	480647	IdentifierDecl	"written = write ( * fd , ptr , size * nmemb )"		480634	0					
ANR	480648	IdentifierDeclType	ssize_t		480634	0					
ANR	480649	Identifier	written		480634	1					
ANR	480650	AssignmentExpression	"written = write ( * fd , ptr , size * nmemb )"		480634	2		=			
ANR	480651	Identifier	written		480634	0					
ANR	480652	CallExpression	"write ( * fd , ptr , size * nmemb )"		480634	1					
ANR	480653	Callee	write		480634	0					
ANR	480654	Identifier	write		480634	0					
ANR	480655	ArgumentList	* fd		480634	1					
ANR	480656	Argument	* fd		480634	0					
ANR	480657	UnaryOperationExpression	* fd		480634	0					
ANR	480658	UnaryOperator	*		480634	0					
ANR	480659	Identifier	fd		480634	1					
ANR	480660	Argument	ptr		480634	1					
ANR	480661	Identifier	ptr		480634	0					
ANR	480662	Argument	size * nmemb		480634	2					
ANR	480663	MultiplicativeExpression	size * nmemb		480634	0		*			
ANR	480664	Identifier	size		480634	0					
ANR	480665	Identifier	nmemb		480634	1					
ANR	480666	ExpressionStatement	assert ( written >= 0 )	354:4:9518:9538	480634	2	True				
ANR	480667	CallExpression	assert ( written >= 0 )		480634	0					
ANR	480668	Callee	assert		480634	0					
ANR	480669	Identifier	assert		480634	0					
ANR	480670	ArgumentList	written >= 0		480634	1					
ANR	480671	Argument	written >= 0		480634	0					
ANR	480672	RelationalExpression	written >= 0		480634	0		>=			
ANR	480673	Identifier	written		480634	0					
ANR	480674	PrimaryExpression	0		480634	1					
ANR	480675	ReturnStatement	return ( size_t ) written ;	356:4:9545:9567	480634	3	True				
ANR	480676	CastExpression	( size_t ) written		480634	0					
ANR	480677	CastTarget	size_t		480634	0					
ANR	480678	Identifier	written		480634	1					
ANR	480679	ReturnType	static size_t		480634	1					
ANR	480680	Identifier	write_data		480634	2					
ANR	480681	ParameterList	"void * ptr , size_t size , size_t nmemb , void * stream"		480634	3					
ANR	480682	Parameter	void * ptr	350:25:9378:9386	480634	0	True				
ANR	480683	ParameterType	void *		480634	0					
ANR	480684	Identifier	ptr		480634	1					
ANR	480685	Parameter	size_t size	350:36:9389:9399	480634	1	True				
ANR	480686	ParameterType	size_t		480634	0					
ANR	480687	Identifier	size		480634	1					
ANR	480688	Parameter	size_t nmemb	350:49:9402:9413	480634	2	True				
ANR	480689	ParameterType	size_t		480634	0					
ANR	480690	Identifier	nmemb		480634	1					
ANR	480691	Parameter	void * stream	350:63:9416:9427	480634	3	True				
ANR	480692	ParameterType	void *		480634	0					
ANR	480693	Identifier	stream		480634	1					
ANR	480694	CFGEntryNode	ENTRY		480634		True				
ANR	480695	CFGExitNode	EXIT		480634		True				
ANR	480696	Symbol	size		480634						
ANR	480697	Symbol	stream		480634						
ANR	480698	Symbol	* fd		480634						
ANR	480699	Symbol	nmemb		480634						
ANR	480700	Symbol	written		480634						
ANR	480701	Symbol	write		480634						
ANR	480702	Symbol	fd		480634						
ANR	480703	Symbol	ptr		480634						
