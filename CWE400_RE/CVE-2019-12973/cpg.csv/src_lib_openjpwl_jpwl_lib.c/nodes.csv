command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	487642	File	data/converged/CVE-2019-12973_openjpeg/src_lib_openjpwl_jpwl_lib.c								
ANR	487643	DeclStmt									
ANR	487644	Decl							unsigned short int	"unsigned short int ( double V , int bytes )"	jpwl_double_to_pfp
ANR	487645	DeclStmt									
ANR	487646	Decl							double	"double ( unsigned short int em , int bytes )"	jpwl_pfp_to_double
ANR	487647	Function	jpwl_markcomp	68:0:3080:3398							
ANR	487648	FunctionDef	"jpwl_markcomp (const void * arg1 , const void * arg2)"		487647	0					
ANR	487649	CompoundStatement		69:0:3134:3398	487647	0					
ANR	487650	IdentifierDeclStatement	double diff = ( ( ( jpwl_marker_t * ) arg1 ) -> dpos - ( ( jpwl_marker_t * ) arg2 ) -> dpos ) ;	71:4:3185:3264	487647	0	True				
ANR	487651	IdentifierDecl	diff = ( ( ( jpwl_marker_t * ) arg1 ) -> dpos - ( ( jpwl_marker_t * ) arg2 ) -> dpos )		487647	0					
ANR	487652	IdentifierDeclType	double		487647	0					
ANR	487653	Identifier	diff		487647	1					
ANR	487654	AssignmentExpression	diff = ( ( ( jpwl_marker_t * ) arg1 ) -> dpos - ( ( jpwl_marker_t * ) arg2 ) -> dpos )		487647	2		=			
ANR	487655	Identifier	diff		487647	0					
ANR	487656	AdditiveExpression	( ( jpwl_marker_t * ) arg1 ) -> dpos - ( ( jpwl_marker_t * ) arg2 ) -> dpos		487647	1		-			
ANR	487657	PtrMemberAccess	( ( jpwl_marker_t * ) arg1 ) -> dpos		487647	0					
ANR	487658	CastExpression	( jpwl_marker_t * ) arg1		487647	0					
ANR	487659	CastTarget	jpwl_marker_t *		487647	0					
ANR	487660	Identifier	arg1		487647	1					
ANR	487661	Identifier	dpos		487647	1					
ANR	487662	PtrMemberAccess	( ( jpwl_marker_t * ) arg2 ) -> dpos		487647	1					
ANR	487663	CastExpression	( jpwl_marker_t * ) arg2		487647	0					
ANR	487664	CastTarget	jpwl_marker_t *		487647	0					
ANR	487665	Identifier	arg2		487647	1					
ANR	487666	Identifier	dpos		487647	1					
ANR	487667	IfStatement	if ( diff == 0.0 )		487647	1					
ANR	487668	Condition	diff == 0.0	73:8:3275:3285	487647	0	True				
ANR	487669	EqualityExpression	diff == 0.0		487647	0		==			
ANR	487670	Identifier	diff		487647	0					
ANR	487671	PrimaryExpression	0.0		487647	1					
ANR	487672	CompoundStatement		5:21:153:153	487647	1					
ANR	487673	ReturnStatement	return ( 0 ) ;	74:8:3298:3308	487647	0	True				
ANR	487674	PrimaryExpression	0		487647	0					
ANR	487675	ElseStatement	else		487647	0					
ANR	487676	IfStatement	if ( diff < 0 )		487647	0					
ANR	487677	Condition	diff < 0	75:15:3325:3332	487647	0	True				
ANR	487678	RelationalExpression	diff < 0		487647	0		<			
ANR	487679	Identifier	diff		487647	0					
ANR	487680	PrimaryExpression	0		487647	1					
ANR	487681	CompoundStatement		7:25:200:200	487647	1					
ANR	487682	ReturnStatement	return ( - 1 ) ;	76:8:3345:3356	487647	0	True				
ANR	487683	UnaryOperationExpression	- 1		487647	0					
ANR	487684	UnaryOperator	-		487647	0					
ANR	487685	PrimaryExpression	1		487647	1					
ANR	487686	ElseStatement	else		487647	0					
ANR	487687	CompoundStatement		9:11:234:234	487647	0					
ANR	487688	ReturnStatement	return ( + 1 ) ;	78:8:3379:3390	487647	0	True				
ANR	487689	UnaryOperationExpression	+ 1		487647	0					
ANR	487690	UnaryOperator	+		487647	0					
ANR	487691	PrimaryExpression	1		487647	1					
ANR	487692	ReturnType	int		487647	1					
ANR	487693	Identifier	jpwl_markcomp		487647	2					
ANR	487694	ParameterList	"const void * arg1 , const void * arg2"		487647	3					
ANR	487695	Parameter	const void * arg1	68:18:3098:3113	487647	0	True				
ANR	487696	ParameterType	const void *		487647	0					
ANR	487697	Identifier	arg1		487647	1					
ANR	487698	Parameter	const void * arg2	68:36:3116:3131	487647	1	True				
ANR	487699	ParameterType	const void *		487647	0					
ANR	487700	Identifier	arg2		487647	1					
ANR	487701	CFGEntryNode	ENTRY		487647		True				
ANR	487702	CFGExitNode	EXIT		487647		True				
ANR	487703	Symbol	arg2		487647						
ANR	487704	Symbol	arg1		487647						
ANR	487705	Symbol	( ( jpwl_marker_t * ) arg2 ) -> dpos		487647						
ANR	487706	Symbol	diff		487647						
ANR	487707	Symbol	* arg1		487647						
ANR	487708	Symbol	* arg2		487647						
ANR	487709	Symbol	( ( jpwl_marker_t * ) arg1 ) -> dpos		487647						
ANR	487710	Function	jpwl_epbs_add	82:0:3401:8678							
ANR	487711	FunctionDef	"jpwl_epbs_add (opj_j2k_t * j2k , jpwl_marker_t * jwmarker , int * jwmarker_num , opj_bool latest , opj_bool packed , opj_bool insideMH , int * idx , int hprot , double place_pos , int tileno , unsigned long int pre_len , unsigned long int post_len)"		487710	0					
ANR	487712	CompoundStatement		86:0:3692:8678	487710	0					
ANR	487713	IdentifierDeclStatement	jpwl_epb_ms_t * epb_mark = NULL ;	88:4:3699:3729	487710	0	True				
ANR	487714	IdentifierDecl	* epb_mark = NULL		487710	0					
ANR	487715	IdentifierDeclType	jpwl_epb_ms_t *		487710	0					
ANR	487716	Identifier	epb_mark		487710	1					
ANR	487717	AssignmentExpression	* epb_mark = NULL		487710	2		=			
ANR	487718	Identifier	NULL		487710	0					
ANR	487719	Identifier	NULL		487710	1					
ANR	487720	IdentifierDeclStatement	"int k_pre , k_post , n_pre , n_post ;"	90:4:3736:3768	487710	1	True				
ANR	487721	IdentifierDecl	k_pre		487710	0					
ANR	487722	IdentifierDeclType	int		487710	0					
ANR	487723	Identifier	k_pre		487710	1					
ANR	487724	IdentifierDecl	k_post		487710	1					
ANR	487725	IdentifierDeclType	int		487710	0					
ANR	487726	Identifier	k_post		487710	1					
ANR	487727	IdentifierDecl	n_pre		487710	2					
ANR	487728	IdentifierDeclType	int		487710	0					
ANR	487729	Identifier	n_pre		487710	1					
ANR	487730	IdentifierDecl	n_post		487710	3					
ANR	487731	IdentifierDeclType	int		487710	0					
ANR	487732	Identifier	n_post		487710	1					
ANR	487733	IdentifierDeclStatement	"unsigned long int L1 , L2 , dL4 , max_postlen , epbs_len = 0 ;"	92:4:3775:3831	487710	2	True				
ANR	487734	IdentifierDecl	L1		487710	0					
ANR	487735	IdentifierDeclType	unsigned long int		487710	0					
ANR	487736	Identifier	L1		487710	1					
ANR	487737	IdentifierDecl	L2		487710	1					
ANR	487738	IdentifierDeclType	unsigned long int		487710	0					
ANR	487739	Identifier	L2		487710	1					
ANR	487740	IdentifierDecl	dL4		487710	2					
ANR	487741	IdentifierDeclType	unsigned long int		487710	0					
ANR	487742	Identifier	dL4		487710	1					
ANR	487743	IdentifierDecl	max_postlen		487710	3					
ANR	487744	IdentifierDeclType	unsigned long int		487710	0					
ANR	487745	Identifier	max_postlen		487710	1					
ANR	487746	IdentifierDecl	epbs_len = 0		487710	4					
ANR	487747	IdentifierDeclType	unsigned long int		487710	0					
ANR	487748	Identifier	epbs_len		487710	1					
ANR	487749	AssignmentExpression	epbs_len = 0		487710	2		=			
ANR	487750	Identifier	epbs_len		487710	0					
ANR	487751	PrimaryExpression	0		487710	1					
ANR	487752	IfStatement	if ( insideMH && ( * idx == 0 ) )		487710	3					
ANR	487753	Condition	insideMH && ( * idx == 0 )	95:8:3903:3925	487710	0	True				
ANR	487754	AndExpression	insideMH && ( * idx == 0 )		487710	0		&&			
ANR	487755	Identifier	insideMH		487710	0					
ANR	487756	EqualityExpression	* idx == 0		487710	1		==			
ANR	487757	UnaryOperationExpression	* idx		487710	0					
ANR	487758	UnaryOperator	*		487710	0					
ANR	487759	Identifier	idx		487710	1					
ANR	487760	PrimaryExpression	0		487710	1					
ANR	487761	CompoundStatement		10:33:235:235	487710	1					
ANR	487762	ExpressionStatement	k_pre = 64	97:8:3968:3978	487710	0	True				
ANR	487763	AssignmentExpression	k_pre = 64		487710	0		=			
ANR	487764	Identifier	k_pre		487710	0					
ANR	487765	PrimaryExpression	64		487710	1					
ANR	487766	ExpressionStatement	n_pre = 160	98:8:3988:3999	487710	1	True				
ANR	487767	AssignmentExpression	n_pre = 160		487710	0		=			
ANR	487768	Identifier	n_pre		487710	0					
ANR	487769	PrimaryExpression	160		487710	1					
ANR	487770	ElseStatement	else		487710	0					
ANR	487771	IfStatement	if ( ! insideMH && ( * idx == 0 ) )		487710	0					
ANR	487772	Condition	! insideMH && ( * idx == 0 )	99:15:4016:4039	487710	0	True				
ANR	487773	AndExpression	! insideMH && ( * idx == 0 )		487710	0		&&			
ANR	487774	UnaryOperationExpression	! insideMH		487710	0					
ANR	487775	UnaryOperator	!		487710	0					
ANR	487776	Identifier	insideMH		487710	1					
ANR	487777	EqualityExpression	* idx == 0		487710	1		==			
ANR	487778	UnaryOperationExpression	* idx		487710	0					
ANR	487779	UnaryOperator	*		487710	0					
ANR	487780	Identifier	idx		487710	1					
ANR	487781	PrimaryExpression	0		487710	1					
ANR	487782	CompoundStatement		14:41:349:349	487710	1					
ANR	487783	ExpressionStatement	k_pre = 25	101:8:4082:4092	487710	0	True				
ANR	487784	AssignmentExpression	k_pre = 25		487710	0		=			
ANR	487785	Identifier	k_pre		487710	0					
ANR	487786	PrimaryExpression	25		487710	1					
ANR	487787	ExpressionStatement	n_pre = 80	102:8:4102:4112	487710	1	True				
ANR	487788	AssignmentExpression	n_pre = 80		487710	0		=			
ANR	487789	Identifier	n_pre		487710	0					
ANR	487790	PrimaryExpression	80		487710	1					
ANR	487791	ElseStatement	else		487710	0					
ANR	487792	CompoundStatement		18:11:432:432	487710	0					
ANR	487793	ExpressionStatement	k_pre = 13	105:8:4176:4186	487710	0	True				
ANR	487794	AssignmentExpression	k_pre = 13		487710	0		=			
ANR	487795	Identifier	k_pre		487710	0					
ANR	487796	PrimaryExpression	13		487710	1					
ANR	487797	ExpressionStatement	n_pre = 40	106:8:4196:4206	487710	1	True				
ANR	487798	AssignmentExpression	n_pre = 40		487710	0		=			
ANR	487799	Identifier	n_pre		487710	0					
ANR	487800	PrimaryExpression	40		487710	1					
ANR	487801	ExpressionStatement		107:5:4213:4213	487710	4	True				
ANR	487802	ExpressionStatement	L1 = pre_len + 13	111:4:4356:4373	487710	5	True				
ANR	487803	AssignmentExpression	L1 = pre_len + 13		487710	0		=			
ANR	487804	Identifier	L1		487710	0					
ANR	487805	AdditiveExpression	pre_len + 13		487710	1		+			
ANR	487806	Identifier	pre_len		487710	0					
ANR	487807	PrimaryExpression	13		487710	1					
ANR	487808	ExpressionStatement	L2 = ( n_pre - k_pre ) * ( unsigned long int ) ceil ( ( double ) L1 / ( double ) k_pre )	115:4:4504:4581	487710	6	True				
ANR	487809	AssignmentExpression	L2 = ( n_pre - k_pre ) * ( unsigned long int ) ceil ( ( double ) L1 / ( double ) k_pre )		487710	0		=			
ANR	487810	Identifier	L2		487710	0					
ANR	487811	MultiplicativeExpression	( n_pre - k_pre ) * ( unsigned long int ) ceil ( ( double ) L1 / ( double ) k_pre )		487710	1		*			
ANR	487812	AdditiveExpression	n_pre - k_pre		487710	0		-			
ANR	487813	Identifier	n_pre		487710	0					
ANR	487814	Identifier	k_pre		487710	1					
ANR	487815	CastExpression	( unsigned long int ) ceil ( ( double ) L1 / ( double ) k_pre )		487710	1					
ANR	487816	CastTarget	unsigned long int		487710	0					
ANR	487817	CallExpression	ceil ( ( double ) L1 / ( double ) k_pre )		487710	1					
ANR	487818	Callee	ceil		487710	0					
ANR	487819	Identifier	ceil		487710	0					
ANR	487820	ArgumentList	( double ) L1 / ( double ) k_pre		487710	1					
ANR	487821	Argument	( double ) L1 / ( double ) k_pre		487710	0					
ANR	487822	MultiplicativeExpression	( double ) L1 / ( double ) k_pre		487710	0		/			
ANR	487823	CastExpression	( double ) L1		487710	0					
ANR	487824	CastTarget	double		487710	0					
ANR	487825	Identifier	L1		487710	1					
ANR	487826	CastExpression	( double ) k_pre		487710	1					
ANR	487827	CastTarget	double		487710	0					
ANR	487828	Identifier	k_pre		487710	1					
ANR	487829	IfStatement	if ( ( hprot == 16 ) || ( hprot == 32 ) )		487710	7					
ANR	487830	Condition	( hprot == 16 ) || ( hprot == 32 )	118:8:4679:4708	487710	0	True				
ANR	487831	OrExpression	( hprot == 16 ) || ( hprot == 32 )		487710	0		||			
ANR	487832	EqualityExpression	hprot == 16		487710	0		==			
ANR	487833	Identifier	hprot		487710	0					
ANR	487834	PrimaryExpression	16		487710	1					
ANR	487835	EqualityExpression	hprot == 32		487710	1		==			
ANR	487836	Identifier	hprot		487710	0					
ANR	487837	PrimaryExpression	32		487710	1					
ANR	487838	CompoundStatement		33:40:1018:1018	487710	1					
ANR	487839	ExpressionStatement	k_post = post_len	120:8:4764:4781	487710	0	True				
ANR	487840	AssignmentExpression	k_post = post_len		487710	0		=			
ANR	487841	Identifier	k_post		487710	0					
ANR	487842	Identifier	post_len		487710	1					
ANR	487843	ExpressionStatement	n_post = post_len + ( hprot >> 3 )	121:8:4791:4823	487710	1	True				
ANR	487844	AssignmentExpression	n_post = post_len + ( hprot >> 3 )		487710	0		=			
ANR	487845	Identifier	n_post		487710	0					
ANR	487846	AdditiveExpression	post_len + ( hprot >> 3 )		487710	1		+			
ANR	487847	Identifier	post_len		487710	0					
ANR	487848	ShiftExpression	hprot >> 3		487710	1		>>			
ANR	487849	Identifier	hprot		487710	0					
ANR	487850	PrimaryExpression	3		487710	1					
ANR	487851	ElseStatement	else		487710	0					
ANR	487852	IfStatement	if ( ( hprot >= 37 ) && ( hprot <= 128 ) )		487710	0					
ANR	487853	Condition	( hprot >= 37 ) && ( hprot <= 128 )	124:15:4907:4937	487710	0	True				
ANR	487854	AndExpression	( hprot >= 37 ) && ( hprot <= 128 )		487710	0		&&			
ANR	487855	RelationalExpression	hprot >= 37		487710	0		>=			
ANR	487856	Identifier	hprot		487710	0					
ANR	487857	PrimaryExpression	37		487710	1					
ANR	487858	RelationalExpression	hprot <= 128		487710	1		<=			
ANR	487859	Identifier	hprot		487710	0					
ANR	487860	PrimaryExpression	128		487710	1					
ANR	487861	CompoundStatement		39:48:1247:1247	487710	1					
ANR	487862	ExpressionStatement	k_post = 32	126:8:4992:5003	487710	0	True				
ANR	487863	AssignmentExpression	k_post = 32		487710	0		=			
ANR	487864	Identifier	k_post		487710	0					
ANR	487865	PrimaryExpression	32		487710	1					
ANR	487866	ExpressionStatement	n_post = hprot	127:8:5013:5027	487710	1	True				
ANR	487867	AssignmentExpression	n_post = hprot		487710	0		=			
ANR	487868	Identifier	n_post		487710	0					
ANR	487869	Identifier	hprot		487710	1					
ANR	487870	ElseStatement	else		487710	0					
ANR	487871	CompoundStatement		44:11:1348:1348	487710	0					
ANR	487872	ExpressionStatement	n_post = n_pre	131:8:5086:5100	487710	0	True				
ANR	487873	AssignmentExpression	n_post = n_pre		487710	0		=			
ANR	487874	Identifier	n_post		487710	0					
ANR	487875	Identifier	n_pre		487710	1					
ANR	487876	ExpressionStatement	k_post = k_pre	132:8:5110:5124	487710	1	True				
ANR	487877	AssignmentExpression	k_post = k_pre		487710	0		=			
ANR	487878	Identifier	k_post		487710	0					
ANR	487879	Identifier	k_pre		487710	1					
ANR	487880	ExpressionStatement		133:5:5131:5131	487710	8	True				
ANR	487881	WhileStatement	while ( post_len > 0 )		487710	9					
ANR	487882	Condition	post_len > 0	136:11:5173:5184	487710	0	True				
ANR	487883	RelationalExpression	post_len > 0		487710	0		>			
ANR	487884	Identifier	post_len		487710	0					
ANR	487885	PrimaryExpression	0		487710	1					
ANR	487886	CompoundStatement		51:25:1494:1494	487710	1					
ANR	487887	ExpressionStatement	max_postlen = k_post * ( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )	141:8:5436:5566	487710	0	True				
ANR	487888	AssignmentExpression	max_postlen = k_post * ( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	0		=			
ANR	487889	Identifier	max_postlen		487710	0					
ANR	487890	MultiplicativeExpression	k_post * ( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	1		*			
ANR	487891	Identifier	k_post		487710	0					
ANR	487892	CastExpression	( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	1					
ANR	487893	CastTarget	unsigned long int		487710	0					
ANR	487894	CallExpression	floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	1					
ANR	487895	Callee	floor		487710	0					
ANR	487896	Identifier	floor		487710	0					
ANR	487897	ArgumentList	( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post )		487710	1					
ANR	487898	Argument	( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post )		487710	0					
ANR	487899	MultiplicativeExpression	( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post )		487710	0		/			
ANR	487900	CastExpression	( double ) JPWL_MAXIMUM_EPB_ROOM		487710	0					
ANR	487901	CastTarget	double		487710	0					
ANR	487902	Identifier	JPWL_MAXIMUM_EPB_ROOM		487710	1					
ANR	487903	CastExpression	( double ) ( n_post - k_post )		487710	1					
ANR	487904	CastTarget	double		487710	0					
ANR	487905	AdditiveExpression	n_post - k_post		487710	1		-			
ANR	487906	Identifier	n_post		487710	0					
ANR	487907	Identifier	k_post		487710	1					
ANR	487908	IfStatement	if ( * idx == 0 )		487710	1					
ANR	487909	Condition	* idx == 0	145:12:5640:5648	487710	0	True				
ANR	487910	EqualityExpression	* idx == 0		487710	0		==			
ANR	487911	UnaryOperationExpression	* idx		487710	0					
ANR	487912	UnaryOperator	*		487710	0					
ANR	487913	Identifier	idx		487710	1					
ANR	487914	PrimaryExpression	0		487710	1					
ANR	487915	CompoundStatement		63:8:2185:2185	487710	1					
ANR	487916	ExpressionStatement	max_postlen = k_post * ( unsigned long int ) floor ( ( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post ) )	149:12:5892:6037	487710	0	True				
ANR	487917	AssignmentExpression	max_postlen = k_post * ( unsigned long int ) floor ( ( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post ) )		487710	0		=			
ANR	487918	Identifier	max_postlen		487710	0					
ANR	487919	MultiplicativeExpression	k_post * ( unsigned long int ) floor ( ( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post ) )		487710	1		*			
ANR	487920	Identifier	k_post		487710	0					
ANR	487921	CastExpression	( unsigned long int ) floor ( ( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post ) )		487710	1					
ANR	487922	CastTarget	unsigned long int		487710	0					
ANR	487923	CallExpression	floor ( ( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post ) )		487710	1					
ANR	487924	Callee	floor		487710	0					
ANR	487925	Identifier	floor		487710	0					
ANR	487926	ArgumentList	( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post )		487710	1					
ANR	487927	Argument	( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post )		487710	0					
ANR	487928	MultiplicativeExpression	( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 ) / ( double ) ( n_post - k_post )		487710	0		/			
ANR	487929	CastExpression	( double ) ( JPWL_MAXIMUM_EPB_ROOM - L2 )		487710	0					
ANR	487930	CastTarget	double		487710	0					
ANR	487931	AdditiveExpression	JPWL_MAXIMUM_EPB_ROOM - L2		487710	1		-			
ANR	487932	Identifier	JPWL_MAXIMUM_EPB_ROOM		487710	0					
ANR	487933	Identifier	L2		487710	1					
ANR	487934	CastExpression	( double ) ( n_post - k_post )		487710	1					
ANR	487935	CastTarget	double		487710	0					
ANR	487936	AdditiveExpression	n_post - k_post		487710	1		-			
ANR	487937	Identifier	n_post		487710	0					
ANR	487938	Identifier	k_post		487710	1					
ANR	487939	ElseStatement	else		487710	0					
ANR	487940	CompoundStatement		71:8:2572:2572	487710	0					
ANR	487941	ExpressionStatement	max_postlen = k_post * ( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )	157:12:6279:6413	487710	0	True				
ANR	487942	AssignmentExpression	max_postlen = k_post * ( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	0		=			
ANR	487943	Identifier	max_postlen		487710	0					
ANR	487944	MultiplicativeExpression	k_post * ( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	1		*			
ANR	487945	Identifier	k_post		487710	0					
ANR	487946	CastExpression	( unsigned long int ) floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	1					
ANR	487947	CastTarget	unsigned long int		487710	0					
ANR	487948	CallExpression	floor ( ( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post ) )		487710	1					
ANR	487949	Callee	floor		487710	0					
ANR	487950	Identifier	floor		487710	0					
ANR	487951	ArgumentList	( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post )		487710	1					
ANR	487952	Argument	( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post )		487710	0					
ANR	487953	MultiplicativeExpression	( double ) JPWL_MAXIMUM_EPB_ROOM / ( double ) ( n_post - k_post )		487710	0		/			
ANR	487954	CastExpression	( double ) JPWL_MAXIMUM_EPB_ROOM		487710	0					
ANR	487955	CastTarget	double		487710	0					
ANR	487956	Identifier	JPWL_MAXIMUM_EPB_ROOM		487710	1					
ANR	487957	CastExpression	( double ) ( n_post - k_post )		487710	1					
ANR	487958	CastTarget	double		487710	0					
ANR	487959	AdditiveExpression	n_post - k_post		487710	1		-			
ANR	487960	Identifier	n_post		487710	0					
ANR	487961	Identifier	k_post		487710	1					
ANR	487962	IfStatement	if ( hprot == 0 )		487710	2					
ANR	487963	Condition	hprot == 0	163:12:6552:6561	487710	0	True				
ANR	487964	EqualityExpression	hprot == 0		487710	0		==			
ANR	487965	Identifier	hprot		487710	0					
ANR	487966	PrimaryExpression	0		487710	1					
ANR	487967	CompoundStatement		78:24:2871:2871	487710	1					
ANR	487968	ExpressionStatement	max_postlen = INT_MAX	164:12:6578:6599	487710	0	True				
ANR	487969	AssignmentExpression	max_postlen = INT_MAX		487710	0		=			
ANR	487970	Identifier	max_postlen		487710	0					
ANR	487971	Identifier	INT_MAX		487710	1					
ANR	487972	ExpressionStatement	"dL4 = min ( max_postlen , post_len )"	168:8:6648:6680	487710	3	True				
ANR	487973	AssignmentExpression	"dL4 = min ( max_postlen , post_len )"		487710	0		=			
ANR	487974	Identifier	dL4		487710	0					
ANR	487975	CallExpression	"min ( max_postlen , post_len )"		487710	1					
ANR	487976	Callee	min		487710	0					
ANR	487977	Identifier	min		487710	0					
ANR	487978	ArgumentList	max_postlen		487710	1					
ANR	487979	Argument	max_postlen		487710	0					
ANR	487980	Identifier	max_postlen		487710	0					
ANR	487981	Argument	post_len		487710	1					
ANR	487982	Identifier	post_len		487710	0					
ANR	487983	IfStatement	"if ( ( epb_mark = jpwl_epb_create ( j2k , latest ? ( dL4 < max_postlen ) : OPJ_FALSE , packed , tileno , * idx , hprot , 0 , dL4 ) ) )"		487710	4					
ANR	487984	Condition	"epb_mark = jpwl_epb_create ( j2k , latest ? ( dL4 < max_postlen ) : OPJ_FALSE , packed , tileno , * idx , hprot , 0 , dL4 )"	170:12:6695:7291	487710	0	True				
ANR	487985	AssignmentExpression	"epb_mark = jpwl_epb_create ( j2k , latest ? ( dL4 < max_postlen ) : OPJ_FALSE , packed , tileno , * idx , hprot , 0 , dL4 )"		487710	0		=			
ANR	487986	Identifier	epb_mark		487710	0					
ANR	487987	CallExpression	"jpwl_epb_create ( j2k , latest ? ( dL4 < max_postlen ) : OPJ_FALSE , packed , tileno , * idx , hprot , 0 , dL4 )"		487710	1					
ANR	487988	Callee	jpwl_epb_create		487710	0					
ANR	487989	Identifier	jpwl_epb_create		487710	0					
ANR	487990	ArgumentList	j2k		487710	1					
ANR	487991	Argument	j2k		487710	0					
ANR	487992	Identifier	j2k		487710	0					
ANR	487993	Argument	latest ? ( dL4 < max_postlen ) : OPJ_FALSE		487710	1					
ANR	487994	ConditionalExpression	latest ? ( dL4 < max_postlen ) : OPJ_FALSE		487710	0					
ANR	487995	Condition	latest		487710	0					
ANR	487996	Identifier	latest		487710	0					
ANR	487997	RelationalExpression	dL4 < max_postlen		487710	1		<			
ANR	487998	Identifier	dL4		487710	0					
ANR	487999	Identifier	max_postlen		487710	1					
ANR	488000	Identifier	OPJ_FALSE		487710	2					
ANR	488001	Argument	packed		487710	2					
ANR	488002	Identifier	packed		487710	0					
ANR	488003	Argument	tileno		487710	3					
ANR	488004	Identifier	tileno		487710	0					
ANR	488005	Argument	* idx		487710	4					
ANR	488006	UnaryOperationExpression	* idx		487710	0					
ANR	488007	UnaryOperator	*		487710	0					
ANR	488008	Identifier	idx		487710	1					
ANR	488009	Argument	hprot		487710	5					
ANR	488010	Identifier	hprot		487710	0					
ANR	488011	Argument	0		487710	6					
ANR	488012	PrimaryExpression	0		487710	0					
ANR	488013	Argument	dL4		487710	7					
ANR	488014	Identifier	dL4		487710	0					
ANR	488015	CompoundStatement		94:28:3601:3601	487710	1					
ANR	488016	IfStatement	if ( * jwmarker_num < JPWL_MAX_NO_MARKERS )		487710	0					
ANR	488017	Condition	* jwmarker_num < JPWL_MAX_NO_MARKERS	182:16:7372:7406	487710	0	True				
ANR	488018	RelationalExpression	* jwmarker_num < JPWL_MAX_NO_MARKERS		487710	0		<			
ANR	488019	UnaryOperationExpression	* jwmarker_num		487710	0					
ANR	488020	UnaryOperator	*		487710	0					
ANR	488021	Identifier	jwmarker_num		487710	1					
ANR	488022	Identifier	JPWL_MAX_NO_MARKERS		487710	1					
ANR	488023	CompoundStatement		97:53:3716:3716	487710	1					
ANR	488024	ExpressionStatement	jwmarker [ * jwmarker_num ] . id = J2K_MS_EPB	183:16:7427:7466	487710	0	True				
ANR	488025	AssignmentExpression	jwmarker [ * jwmarker_num ] . id = J2K_MS_EPB		487710	0		=			
ANR	488026	MemberAccess	jwmarker [ * jwmarker_num ] . id		487710	0					
ANR	488027	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488028	Identifier	jwmarker		487710	0					
ANR	488029	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488030	UnaryOperator	*		487710	0					
ANR	488031	Identifier	jwmarker_num		487710	1					
ANR	488032	Identifier	id		487710	1					
ANR	488033	Identifier	J2K_MS_EPB		487710	1					
ANR	488034	ExpressionStatement	jwmarker [ * jwmarker_num ] . m . epbmark = epb_mark	184:16:7499:7543	487710	1	True				
ANR	488035	AssignmentExpression	jwmarker [ * jwmarker_num ] . m . epbmark = epb_mark		487710	0		=			
ANR	488036	MemberAccess	jwmarker [ * jwmarker_num ] . m . epbmark		487710	0					
ANR	488037	MemberAccess	jwmarker [ * jwmarker_num ] . m		487710	0					
ANR	488038	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488039	Identifier	jwmarker		487710	0					
ANR	488040	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488041	UnaryOperator	*		487710	0					
ANR	488042	Identifier	jwmarker_num		487710	1					
ANR	488043	Identifier	m		487710	1					
ANR	488044	Identifier	epbmark		487710	1					
ANR	488045	Identifier	epb_mark		487710	1					
ANR	488046	ExpressionStatement	jwmarker [ * jwmarker_num ] . pos = ( int ) place_pos	185:16:7575:7620	487710	2	True				
ANR	488047	AssignmentExpression	jwmarker [ * jwmarker_num ] . pos = ( int ) place_pos		487710	0		=			
ANR	488048	MemberAccess	jwmarker [ * jwmarker_num ] . pos		487710	0					
ANR	488049	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488050	Identifier	jwmarker		487710	0					
ANR	488051	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488052	UnaryOperator	*		487710	0					
ANR	488053	Identifier	jwmarker_num		487710	1					
ANR	488054	Identifier	pos		487710	1					
ANR	488055	CastExpression	( int ) place_pos		487710	1					
ANR	488056	CastTarget	int		487710	0					
ANR	488057	Identifier	place_pos		487710	1					
ANR	488058	ExpressionStatement	jwmarker [ * jwmarker_num ] . dpos = place_pos + 0.0000001 * ( double ) ( * idx )	186:16:7654:7775	487710	3	True				
ANR	488059	AssignmentExpression	jwmarker [ * jwmarker_num ] . dpos = place_pos + 0.0000001 * ( double ) ( * idx )		487710	0		=			
ANR	488060	MemberAccess	jwmarker [ * jwmarker_num ] . dpos		487710	0					
ANR	488061	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488062	Identifier	jwmarker		487710	0					
ANR	488063	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488064	UnaryOperator	*		487710	0					
ANR	488065	Identifier	jwmarker_num		487710	1					
ANR	488066	Identifier	dpos		487710	1					
ANR	488067	AdditiveExpression	place_pos + 0.0000001 * ( double ) ( * idx )		487710	1		+			
ANR	488068	Identifier	place_pos		487710	0					
ANR	488069	MultiplicativeExpression	0.0000001 * ( double ) ( * idx )		487710	1		*			
ANR	488070	PrimaryExpression	0.0000001		487710	0					
ANR	488071	CastExpression	( double ) ( * idx )		487710	1					
ANR	488072	CastTarget	double		487710	0					
ANR	488073	UnaryOperationExpression	* idx		487710	1					
ANR	488074	UnaryOperator	*		487710	0					
ANR	488075	Identifier	idx		487710	1					
ANR	488076	ExpressionStatement	jwmarker [ * jwmarker_num ] . len = epb_mark -> Lepb	188:16:7815:7859	487710	4	True				
ANR	488077	AssignmentExpression	jwmarker [ * jwmarker_num ] . len = epb_mark -> Lepb		487710	0		=			
ANR	488078	MemberAccess	jwmarker [ * jwmarker_num ] . len		487710	0					
ANR	488079	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488080	Identifier	jwmarker		487710	0					
ANR	488081	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488082	UnaryOperator	*		487710	0					
ANR	488083	Identifier	jwmarker_num		487710	1					
ANR	488084	Identifier	len		487710	1					
ANR	488085	PtrMemberAccess	epb_mark -> Lepb		487710	1					
ANR	488086	Identifier	epb_mark		487710	0					
ANR	488087	Identifier	Lepb		487710	1					
ANR	488088	ExpressionStatement	jwmarker [ * jwmarker_num ] . len_ready = OPJ_TRUE	189:16:7894:7938	487710	5	True				
ANR	488089	AssignmentExpression	jwmarker [ * jwmarker_num ] . len_ready = OPJ_TRUE		487710	0		=			
ANR	488090	MemberAccess	jwmarker [ * jwmarker_num ] . len_ready		487710	0					
ANR	488091	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488092	Identifier	jwmarker		487710	0					
ANR	488093	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488094	UnaryOperator	*		487710	0					
ANR	488095	Identifier	jwmarker_num		487710	1					
ANR	488096	Identifier	len_ready		487710	1					
ANR	488097	Identifier	OPJ_TRUE		487710	1					
ANR	488098	ExpressionStatement	jwmarker [ * jwmarker_num ] . pos_ready = OPJ_TRUE	190:16:7968:8012	487710	6	True				
ANR	488099	AssignmentExpression	jwmarker [ * jwmarker_num ] . pos_ready = OPJ_TRUE		487710	0		=			
ANR	488100	MemberAccess	jwmarker [ * jwmarker_num ] . pos_ready		487710	0					
ANR	488101	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488102	Identifier	jwmarker		487710	0					
ANR	488103	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488104	UnaryOperator	*		487710	0					
ANR	488105	Identifier	jwmarker_num		487710	1					
ANR	488106	Identifier	pos_ready		487710	1					
ANR	488107	Identifier	OPJ_TRUE		487710	1					
ANR	488108	ExpressionStatement	jwmarker [ * jwmarker_num ] . parms_ready = OPJ_TRUE	191:16:8042:8088	487710	7	True				
ANR	488109	AssignmentExpression	jwmarker [ * jwmarker_num ] . parms_ready = OPJ_TRUE		487710	0		=			
ANR	488110	MemberAccess	jwmarker [ * jwmarker_num ] . parms_ready		487710	0					
ANR	488111	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488112	Identifier	jwmarker		487710	0					
ANR	488113	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488114	UnaryOperator	*		487710	0					
ANR	488115	Identifier	jwmarker_num		487710	1					
ANR	488116	Identifier	parms_ready		487710	1					
ANR	488117	Identifier	OPJ_TRUE		487710	1					
ANR	488118	ExpressionStatement	jwmarker [ * jwmarker_num ] . data_ready = OPJ_FALSE	192:16:8118:8164	487710	8	True				
ANR	488119	AssignmentExpression	jwmarker [ * jwmarker_num ] . data_ready = OPJ_FALSE		487710	0		=			
ANR	488120	MemberAccess	jwmarker [ * jwmarker_num ] . data_ready		487710	0					
ANR	488121	ArrayIndexing	jwmarker [ * jwmarker_num ]		487710	0					
ANR	488122	Identifier	jwmarker		487710	0					
ANR	488123	UnaryOperationExpression	* jwmarker_num		487710	1					
ANR	488124	UnaryOperator	*		487710	0					
ANR	488125	Identifier	jwmarker_num		487710	1					
ANR	488126	Identifier	data_ready		487710	1					
ANR	488127	Identifier	OPJ_FALSE		487710	1					
ANR	488128	ExpressionStatement	( * jwmarker_num ) ++	193:16:8198:8215	487710	9	True				
ANR	488129	PostIncDecOperationExpression	( * jwmarker_num ) ++		487710	0					
ANR	488130	UnaryOperationExpression	* jwmarker_num		487710	0					
ANR	488131	UnaryOperator	*		487710	0					
ANR	488132	Identifier	jwmarker_num		487710	1					
ANR	488133	IncDec	++		487710	1					
ANR	488134	ExpressionStatement	( * idx ) ++	197:12:8282:8290	487710	1	True				
ANR	488135	PostIncDecOperationExpression	( * idx ) ++		487710	0					
ANR	488136	UnaryOperationExpression	* idx		487710	0					
ANR	488137	UnaryOperator	*		487710	0					
ANR	488138	Identifier	idx		487710	1					
ANR	488139	IncDec	++		487710	1					
ANR	488140	ExpressionStatement	post_len -= dL4	200:12:8340:8355	487710	2	True				
ANR	488141	AssignmentExpression	post_len -= dL4		487710	0		-=			
ANR	488142	Identifier	post_len		487710	0					
ANR	488143	Identifier	dL4		487710	1					
ANR	488144	ExpressionStatement	epbs_len += epb_mark -> Lepb + 2	203:12:8422:8452	487710	3	True				
ANR	488145	AssignmentExpression	epbs_len += epb_mark -> Lepb + 2		487710	0		+=			
ANR	488146	Identifier	epbs_len		487710	0					
ANR	488147	AdditiveExpression	epb_mark -> Lepb + 2		487710	1		+			
ANR	488148	PtrMemberAccess	epb_mark -> Lepb		487710	0					
ANR	488149	Identifier	epb_mark		487710	0					
ANR	488150	Identifier	Lepb		487710	1					
ANR	488151	PrimaryExpression	2		487710	1					
ANR	488152	ElseStatement	else		487710	0					
ANR	488153	CompoundStatement		120:15:4777:4777	487710	0					
ANR	488154	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not create TPH EPB for UEP in tile %d\\n"" , tileno )"	207:12:8518:8637	487710	0	True				
ANR	488155	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not create TPH EPB for UEP in tile %d\\n"" , tileno )"		487710	0					
ANR	488156	Callee	opj_event_msg		487710	0					
ANR	488157	Identifier	opj_event_msg		487710	0					
ANR	488158	ArgumentList	j2k -> cinfo		487710	1					
ANR	488159	Argument	j2k -> cinfo		487710	0					
ANR	488160	PtrMemberAccess	j2k -> cinfo		487710	0					
ANR	488161	Identifier	j2k		487710	0					
ANR	488162	Identifier	cinfo		487710	1					
ANR	488163	Argument	EVT_ERROR		487710	1					
ANR	488164	Identifier	EVT_ERROR		487710	0					
ANR	488165	Argument	"""Could not create TPH EPB for UEP in tile %d\\n"""		487710	2					
ANR	488166	PrimaryExpression	"""Could not create TPH EPB for UEP in tile %d\\n"""		487710	0					
ANR	488167	Argument	tileno		487710	3					
ANR	488168	Identifier	tileno		487710	0					
ANR	488169	ExpressionStatement		209:9:8648:8648	487710	5	True				
ANR	488170	ReturnStatement	return epbs_len ;	212:4:8661:8676	487710	10	True				
ANR	488171	Identifier	epbs_len		487710	0					
ANR	488172	ReturnType	int		487710	1					
ANR	488173	Identifier	jpwl_epbs_add		487710	2					
ANR	488174	ParameterList	"opj_j2k_t * j2k , jpwl_marker_t * jwmarker , int * jwmarker_num , opj_bool latest , opj_bool packed , opj_bool insideMH , int * idx , int hprot , double place_pos , int tileno , unsigned long int pre_len , unsigned long int post_len"		487710	3					
ANR	488175	Parameter	opj_j2k_t * j2k	82:18:3419:3432	487710	0	True				
ANR	488176	ParameterType	opj_j2k_t *		487710	0					
ANR	488177	Identifier	j2k		487710	1					
ANR	488178	Parameter	jpwl_marker_t * jwmarker	82:34:3435:3457	487710	1	True				
ANR	488179	ParameterType	jpwl_marker_t *		487710	0					
ANR	488180	Identifier	jwmarker		487710	1					
ANR	488181	Parameter	int * jwmarker_num	82:59:3460:3476	487710	2	True				
ANR	488182	ParameterType	int *		487710	0					
ANR	488183	Identifier	jwmarker_num		487710	1					
ANR	488184	Parameter	opj_bool latest	83:18:3497:3511	487710	3	True				
ANR	488185	ParameterType	opj_bool		487710	0					
ANR	488186	Identifier	latest		487710	1					
ANR	488187	Parameter	opj_bool packed	83:35:3514:3528	487710	4	True				
ANR	488188	ParameterType	opj_bool		487710	0					
ANR	488189	Identifier	packed		487710	1					
ANR	488190	Parameter	opj_bool insideMH	83:52:3531:3547	487710	5	True				
ANR	488191	ParameterType	opj_bool		487710	0					
ANR	488192	Identifier	insideMH		487710	1					
ANR	488193	Parameter	int * idx	83:71:3550:3557	487710	6	True				
ANR	488194	ParameterType	int *		487710	0					
ANR	488195	Identifier	idx		487710	1					
ANR	488196	Parameter	int hprot	83:81:3560:3568	487710	7	True				
ANR	488197	ParameterType	int		487710	0					
ANR	488198	Identifier	hprot		487710	1					
ANR	488199	Parameter	double place_pos	84:18:3589:3604	487710	8	True				
ANR	488200	ParameterType	double		487710	0					
ANR	488201	Identifier	place_pos		487710	1					
ANR	488202	Parameter	int tileno	84:36:3607:3616	487710	9	True				
ANR	488203	ParameterType	int		487710	0					
ANR	488204	Identifier	tileno		487710	1					
ANR	488205	Parameter	unsigned long int pre_len	85:18:3637:3661	487710	10	True				
ANR	488206	ParameterType	unsigned long int		487710	0					
ANR	488207	Identifier	pre_len		487710	1					
ANR	488208	Parameter	unsigned long int post_len	85:45:3664:3689	487710	11	True				
ANR	488209	ParameterType	unsigned long int		487710	0					
ANR	488210	Identifier	post_len		487710	1					
ANR	488211	CFGEntryNode	ENTRY		487710		True				
ANR	488212	CFGExitNode	EXIT		487710		True				
ANR	488213	Symbol	tileno		487710						
ANR	488214	Symbol	pre_len		487710						
ANR	488215	Symbol	* * jwmarker_num		487710						
ANR	488216	Symbol	jwmarker		487710						
ANR	488217	Symbol	jwmarker [ * jwmarker_num ] . id		487710						
ANR	488218	Symbol	jwmarker [ * jwmarker_num ] . len		487710						
ANR	488219	Symbol	* jwmarker		487710						
ANR	488220	Symbol	* idx		487710						
ANR	488221	Symbol	max_postlen		487710						
ANR	488222	Symbol	OPJ_TRUE		487710						
ANR	488223	Symbol	JPWL_MAXIMUM_EPB_ROOM		487710						
ANR	488224	Symbol	hprot		487710						
ANR	488225	Symbol	NULL		487710						
ANR	488226	Symbol	jwmarker [ * jwmarker_num ] . m . epbmark		487710						
ANR	488227	Symbol	ceil		487710						
ANR	488228	Symbol	jwmarker [ * jwmarker_num ] . parms_ready		487710						
ANR	488229	Symbol	* j2k		487710						
ANR	488230	Symbol	jwmarker [ * jwmarker_num ] . pos_ready		487710						
ANR	488231	Symbol	idx		487710						
ANR	488232	Symbol	jpwl_epb_create		487710						
ANR	488233	Symbol	place_pos		487710						
ANR	488234	Symbol	epb_mark		487710						
ANR	488235	Symbol	jwmarker [ * jwmarker_num ] . m		487710						
ANR	488236	Symbol	dL4		487710						
ANR	488237	Symbol	JPWL_MAX_NO_MARKERS		487710						
ANR	488238	Symbol	jwmarker_num		487710						
ANR	488239	Symbol	jwmarker [ * jwmarker_num ] . data_ready		487710						
ANR	488240	Symbol	jwmarker [ * jwmarker_num ] . pos		487710						
ANR	488241	Symbol	post_len		487710						
ANR	488242	Symbol	jwmarker [ * jwmarker_num ] . dpos		487710						
ANR	488243	Symbol	epb_mark -> Lepb		487710						
ANR	488244	Symbol	jwmarker [ * jwmarker_num ] . len_ready		487710						
ANR	488245	Symbol	min		487710						
ANR	488246	Symbol	OPJ_FALSE		487710						
ANR	488247	Symbol	INT_MAX		487710						
ANR	488248	Symbol	J2K_MS_EPB		487710						
ANR	488249	Symbol	packed		487710						
ANR	488250	Symbol	floor		487710						
ANR	488251	Symbol	EVT_ERROR		487710						
ANR	488252	Symbol	epbs_len		487710						
ANR	488253	Symbol	latest		487710						
ANR	488254	Symbol	k_pre		487710						
ANR	488255	Symbol	j2k		487710						
ANR	488256	Symbol	L1		487710						
ANR	488257	Symbol	L2		487710						
ANR	488258	Symbol	* jwmarker_num		487710						
ANR	488259	Symbol	n_pre		487710						
ANR	488260	Symbol	insideMH		487710						
ANR	488261	Symbol	j2k -> cinfo		487710						
ANR	488262	Symbol	k_post		487710						
ANR	488263	Symbol	n_post		487710						
ANR	488264	Symbol	* epb_mark		487710						
ANR	488265	Function	jpwl_epb_create	216:0:8682:12259							
ANR	488266	FunctionDef	"jpwl_epb_create (opj_j2k_t * j2k , opj_bool latest , opj_bool packed , int tileno , int idx , int hprot , unsigned long int pre_len , unsigned long int post_len)"		488265	0					
ANR	488267	CompoundStatement		219:0:8912:12259	488265	0					
ANR	488268	IdentifierDeclStatement	jpwl_epb_ms_t * epb = NULL ;	221:4:8919:8944	488265	0	True				
ANR	488269	IdentifierDecl	* epb = NULL		488265	0					
ANR	488270	IdentifierDeclType	jpwl_epb_ms_t *		488265	0					
ANR	488271	Identifier	epb		488265	1					
ANR	488272	AssignmentExpression	* epb = NULL		488265	2		=			
ANR	488273	Identifier	NULL		488265	0					
ANR	488274	Identifier	NULL		488265	1					
ANR	488275	IdentifierDeclStatement	"unsigned short int L2 , L3 ;"	223:4:8991:9016	488265	1	True				
ANR	488276	IdentifierDecl	L2		488265	0					
ANR	488277	IdentifierDeclType	unsigned short int		488265	0					
ANR	488278	Identifier	L2		488265	1					
ANR	488279	IdentifierDecl	L3		488265	1					
ANR	488280	IdentifierDeclType	unsigned short int		488265	0					
ANR	488281	Identifier	L3		488265	1					
ANR	488282	IdentifierDeclStatement	"unsigned long int L1 , L4 ;"	224:4:9022:9046	488265	2	True				
ANR	488283	IdentifierDecl	L1		488265	0					
ANR	488284	IdentifierDeclType	unsigned long int		488265	0					
ANR	488285	Identifier	L1		488265	1					
ANR	488286	IdentifierDecl	L4		488265	1					
ANR	488287	IdentifierDeclType	unsigned long int		488265	0					
ANR	488288	Identifier	L4		488265	1					
ANR	488289	IdentifierDeclStatement	opj_bool insideMH = ( tileno == - 1 ) ;	227:4:9095:9129	488265	3	True				
ANR	488290	IdentifierDecl	insideMH = ( tileno == - 1 )		488265	0					
ANR	488291	IdentifierDeclType	opj_bool		488265	0					
ANR	488292	Identifier	insideMH		488265	1					
ANR	488293	AssignmentExpression	insideMH = ( tileno == - 1 )		488265	2		=			
ANR	488294	Identifier	insideMH		488265	0					
ANR	488295	EqualityExpression	tileno == - 1		488265	1		==			
ANR	488296	Identifier	tileno		488265	0					
ANR	488297	UnaryOperationExpression	- 1		488265	1					
ANR	488298	UnaryOperator	-		488265	0					
ANR	488299	PrimaryExpression	1		488265	1					
ANR	488300	IfStatement	if ( ! ( epb = ( jpwl_epb_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epb_ms_t ) ) ) )		488265	4					
ANR	488301	Condition	! ( epb = ( jpwl_epb_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epb_ms_t ) ) )	230:8:9162:9234	488265	0	True				
ANR	488302	UnaryOperationExpression	! ( epb = ( jpwl_epb_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epb_ms_t ) ) )		488265	0					
ANR	488303	UnaryOperator	!		488265	0					
ANR	488304	AssignmentExpression	epb = ( jpwl_epb_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epb_ms_t ) )		488265	1		=			
ANR	488305	Identifier	epb		488265	0					
ANR	488306	CastExpression	( jpwl_epb_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epb_ms_t ) )		488265	1					
ANR	488307	CastTarget	jpwl_epb_ms_t *		488265	0					
ANR	488308	CallExpression	opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epb_ms_t ) )		488265	1					
ANR	488309	Callee	opj_malloc		488265	0					
ANR	488310	Identifier	opj_malloc		488265	0					
ANR	488311	ArgumentList	( size_t ) 1 * sizeof ( jpwl_epb_ms_t )		488265	1					
ANR	488312	Argument	( size_t ) 1 * sizeof ( jpwl_epb_ms_t )		488265	0					
ANR	488313	MultiplicativeExpression	( size_t ) 1 * sizeof ( jpwl_epb_ms_t )		488265	0		*			
ANR	488314	CastExpression	( size_t ) 1		488265	0					
ANR	488315	CastTarget	size_t		488265	0					
ANR	488316	PrimaryExpression	1		488265	1					
ANR	488317	SizeofExpression	sizeof ( jpwl_epb_ms_t )		488265	1					
ANR	488318	Sizeof	sizeof		488265	0					
ANR	488319	SizeofOperand	jpwl_epb_ms_t		488265	1					
ANR	488320	CompoundStatement		12:83:324:324	488265	1					
ANR	488321	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not allocate room for one EPB MS\\n"" )"	231:8:9247:9349	488265	0	True				
ANR	488322	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not allocate room for one EPB MS\\n"" )"		488265	0					
ANR	488323	Callee	opj_event_msg		488265	0					
ANR	488324	Identifier	opj_event_msg		488265	0					
ANR	488325	ArgumentList	j2k -> cinfo		488265	1					
ANR	488326	Argument	j2k -> cinfo		488265	0					
ANR	488327	PtrMemberAccess	j2k -> cinfo		488265	0					
ANR	488328	Identifier	j2k		488265	0					
ANR	488329	Identifier	cinfo		488265	1					
ANR	488330	Argument	EVT_ERROR		488265	1					
ANR	488331	Identifier	EVT_ERROR		488265	0					
ANR	488332	Argument	"""Could not allocate room for one EPB MS\\n"""		488265	2					
ANR	488333	PrimaryExpression	"""Could not allocate room for one EPB MS\\n"""		488265	0					
ANR	488334	ReturnStatement	return NULL ;	233:8:9359:9370	488265	1	True				
ANR	488335	Identifier	NULL		488265	0					
ANR	488336	ExpressionStatement		234:5:9377:9377	488265	5	True				
ANR	488337	IfStatement	if ( insideMH && ( idx == 0 ) )		488265	6					
ANR	488338	Condition	insideMH && ( idx == 0 )	237:8:9448:9469	488265	0	True				
ANR	488339	AndExpression	insideMH && ( idx == 0 )		488265	0		&&			
ANR	488340	Identifier	insideMH		488265	0					
ANR	488341	EqualityExpression	idx == 0		488265	1		==			
ANR	488342	Identifier	idx		488265	0					
ANR	488343	PrimaryExpression	0		488265	1					
ANR	488344	CompoundStatement		19:32:559:559	488265	1					
ANR	488345	ExpressionStatement	epb -> k_pre = 64	239:8:9512:9527	488265	0	True				
ANR	488346	AssignmentExpression	epb -> k_pre = 64		488265	0		=			
ANR	488347	PtrMemberAccess	epb -> k_pre		488265	0					
ANR	488348	Identifier	epb		488265	0					
ANR	488349	Identifier	k_pre		488265	1					
ANR	488350	PrimaryExpression	64		488265	1					
ANR	488351	ExpressionStatement	epb -> n_pre = 160	240:8:9537:9553	488265	1	True				
ANR	488352	AssignmentExpression	epb -> n_pre = 160		488265	0		=			
ANR	488353	PtrMemberAccess	epb -> n_pre		488265	0					
ANR	488354	Identifier	epb		488265	0					
ANR	488355	Identifier	n_pre		488265	1					
ANR	488356	PrimaryExpression	160		488265	1					
ANR	488357	ElseStatement	else		488265	0					
ANR	488358	IfStatement	if ( ! insideMH && ( idx == 0 ) )		488265	0					
ANR	488359	Condition	! insideMH && ( idx == 0 )	241:15:9570:9592	488265	0	True				
ANR	488360	AndExpression	! insideMH && ( idx == 0 )		488265	0		&&			
ANR	488361	UnaryOperationExpression	! insideMH		488265	0					
ANR	488362	UnaryOperator	!		488265	0					
ANR	488363	Identifier	insideMH		488265	1					
ANR	488364	EqualityExpression	idx == 0		488265	1		==			
ANR	488365	Identifier	idx		488265	0					
ANR	488366	PrimaryExpression	0		488265	1					
ANR	488367	CompoundStatement		23:40:682:682	488265	1					
ANR	488368	ExpressionStatement	epb -> k_pre = 25	243:8:9635:9650	488265	0	True				
ANR	488369	AssignmentExpression	epb -> k_pre = 25		488265	0		=			
ANR	488370	PtrMemberAccess	epb -> k_pre		488265	0					
ANR	488371	Identifier	epb		488265	0					
ANR	488372	Identifier	k_pre		488265	1					
ANR	488373	PrimaryExpression	25		488265	1					
ANR	488374	ExpressionStatement	epb -> n_pre = 80	244:8:9660:9675	488265	1	True				
ANR	488375	AssignmentExpression	epb -> n_pre = 80		488265	0		=			
ANR	488376	PtrMemberAccess	epb -> n_pre		488265	0					
ANR	488377	Identifier	epb		488265	0					
ANR	488378	Identifier	n_pre		488265	1					
ANR	488379	PrimaryExpression	80		488265	1					
ANR	488380	ElseStatement	else		488265	0					
ANR	488381	CompoundStatement		27:11:775:775	488265	0					
ANR	488382	ExpressionStatement	epb -> k_pre = 13	247:8:9739:9754	488265	0	True				
ANR	488383	AssignmentExpression	epb -> k_pre = 13		488265	0		=			
ANR	488384	PtrMemberAccess	epb -> k_pre		488265	0					
ANR	488385	Identifier	epb		488265	0					
ANR	488386	Identifier	k_pre		488265	1					
ANR	488387	PrimaryExpression	13		488265	1					
ANR	488388	ExpressionStatement	epb -> n_pre = 40	248:8:9764:9779	488265	1	True				
ANR	488389	AssignmentExpression	epb -> n_pre = 40		488265	0		=			
ANR	488390	PtrMemberAccess	epb -> n_pre		488265	0					
ANR	488391	Identifier	epb		488265	0					
ANR	488392	Identifier	n_pre		488265	1					
ANR	488393	PrimaryExpression	40		488265	1					
ANR	488394	ExpressionStatement		249:5:9786:9786	488265	7	True				
ANR	488395	ExpressionStatement	L1 = pre_len + 13	253:4:9929:9946	488265	8	True				
ANR	488396	AssignmentExpression	L1 = pre_len + 13		488265	0		=			
ANR	488397	Identifier	L1		488265	0					
ANR	488398	AdditiveExpression	pre_len + 13		488265	1		+			
ANR	488399	Identifier	pre_len		488265	0					
ANR	488400	PrimaryExpression	13		488265	1					
ANR	488401	ExpressionStatement	epb -> pre_len = pre_len	254:4:9952:9974	488265	9	True				
ANR	488402	AssignmentExpression	epb -> pre_len = pre_len		488265	0		=			
ANR	488403	PtrMemberAccess	epb -> pre_len		488265	0					
ANR	488404	Identifier	epb		488265	0					
ANR	488405	Identifier	pre_len		488265	1					
ANR	488406	Identifier	pre_len		488265	1					
ANR	488407	ExpressionStatement	L2 = ( epb -> n_pre - epb -> k_pre ) * ( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )	258:4:10115:10220	488265	10	True				
ANR	488408	AssignmentExpression	L2 = ( epb -> n_pre - epb -> k_pre ) * ( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )		488265	0		=			
ANR	488409	Identifier	L2		488265	0					
ANR	488410	MultiplicativeExpression	( epb -> n_pre - epb -> k_pre ) * ( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )		488265	1		*			
ANR	488411	AdditiveExpression	epb -> n_pre - epb -> k_pre		488265	0		-			
ANR	488412	PtrMemberAccess	epb -> n_pre		488265	0					
ANR	488413	Identifier	epb		488265	0					
ANR	488414	Identifier	n_pre		488265	1					
ANR	488415	PtrMemberAccess	epb -> k_pre		488265	1					
ANR	488416	Identifier	epb		488265	0					
ANR	488417	Identifier	k_pre		488265	1					
ANR	488418	CastExpression	( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )		488265	1					
ANR	488419	CastTarget	unsigned short int		488265	0					
ANR	488420	CallExpression	ceil ( ( double ) L1 / ( double ) epb -> k_pre )		488265	1					
ANR	488421	Callee	ceil		488265	0					
ANR	488422	Identifier	ceil		488265	0					
ANR	488423	ArgumentList	( double ) L1 / ( double ) epb -> k_pre		488265	1					
ANR	488424	Argument	( double ) L1 / ( double ) epb -> k_pre		488265	0					
ANR	488425	MultiplicativeExpression	( double ) L1 / ( double ) epb -> k_pre		488265	0		/			
ANR	488426	CastExpression	( double ) L1		488265	0					
ANR	488427	CastTarget	double		488265	0					
ANR	488428	Identifier	L1		488265	1					
ANR	488429	CastExpression	( double ) epb -> k_pre		488265	1					
ANR	488430	CastTarget	double		488265	0					
ANR	488431	PtrMemberAccess	epb -> k_pre		488265	1					
ANR	488432	Identifier	epb		488265	0					
ANR	488433	Identifier	k_pre		488265	1					
ANR	488434	ExpressionStatement	L4 = post_len	262:4:10257:10270	488265	11	True				
ANR	488435	AssignmentExpression	L4 = post_len		488265	0		=			
ANR	488436	Identifier	L4		488265	0					
ANR	488437	Identifier	post_len		488265	1					
ANR	488438	ExpressionStatement	epb -> post_len = post_len	263:4:10276:10300	488265	12	True				
ANR	488439	AssignmentExpression	epb -> post_len = post_len		488265	0		=			
ANR	488440	PtrMemberAccess	epb -> post_len		488265	0					
ANR	488441	Identifier	epb		488265	0					
ANR	488442	Identifier	post_len		488265	1					
ANR	488443	Identifier	post_len		488265	1					
ANR	488444	IfStatement	if ( ( hprot == 16 ) || ( hprot == 32 ) )		488265	13					
ANR	488445	Condition	( hprot == 16 ) || ( hprot == 32 )	266:8:10398:10427	488265	0	True				
ANR	488446	OrExpression	( hprot == 16 ) || ( hprot == 32 )		488265	0		||			
ANR	488447	EqualityExpression	hprot == 16		488265	0		==			
ANR	488448	Identifier	hprot		488265	0					
ANR	488449	PrimaryExpression	16		488265	1					
ANR	488450	EqualityExpression	hprot == 32		488265	1		==			
ANR	488451	Identifier	hprot		488265	0					
ANR	488452	PrimaryExpression	32		488265	1					
ANR	488453	CompoundStatement		48:40:1517:1517	488265	1					
ANR	488454	ExpressionStatement	epb -> Pepb = 0x10000000 | ( ( unsigned long int ) hprot >> 5 )	268:8:10483:10574	488265	0	True				
ANR	488455	AssignmentExpression	epb -> Pepb = 0x10000000 | ( ( unsigned long int ) hprot >> 5 )		488265	0		=			
ANR	488456	PtrMemberAccess	epb -> Pepb		488265	0					
ANR	488457	Identifier	epb		488265	0					
ANR	488458	Identifier	Pepb		488265	1					
ANR	488459	InclusiveOrExpression	0x10000000 | ( ( unsigned long int ) hprot >> 5 )		488265	1		|			
ANR	488460	PrimaryExpression	0x10000000		488265	0					
ANR	488461	ShiftExpression	( unsigned long int ) hprot >> 5		488265	1		>>			
ANR	488462	CastExpression	( unsigned long int ) hprot		488265	0					
ANR	488463	CastTarget	unsigned long int		488265	0					
ANR	488464	Identifier	hprot		488265	1					
ANR	488465	PrimaryExpression	5		488265	1					
ANR	488466	ExpressionStatement	epb -> k_post = post_len	270:8:10609:10631	488265	1	True				
ANR	488467	AssignmentExpression	epb -> k_post = post_len		488265	0		=			
ANR	488468	PtrMemberAccess	epb -> k_post		488265	0					
ANR	488469	Identifier	epb		488265	0					
ANR	488470	Identifier	k_post		488265	1					
ANR	488471	Identifier	post_len		488265	1					
ANR	488472	ExpressionStatement	epb -> n_post = post_len + ( hprot >> 3 )	271:8:10641:10678	488265	2	True				
ANR	488473	AssignmentExpression	epb -> n_post = post_len + ( hprot >> 3 )		488265	0		=			
ANR	488474	PtrMemberAccess	epb -> n_post		488265	0					
ANR	488475	Identifier	epb		488265	0					
ANR	488476	Identifier	n_post		488265	1					
ANR	488477	AdditiveExpression	post_len + ( hprot >> 3 )		488265	1		+			
ANR	488478	Identifier	post_len		488265	0					
ANR	488479	ShiftExpression	hprot >> 3		488265	1		>>			
ANR	488480	Identifier	hprot		488265	0					
ANR	488481	PrimaryExpression	3		488265	1					
ANR	488482	ElseStatement	else		488265	0					
ANR	488483	IfStatement	if ( ( hprot >= 37 ) && ( hprot <= 128 ) )		488265	0					
ANR	488484	Condition	( hprot >= 37 ) && ( hprot <= 128 )	274:15:10762:10792	488265	0	True				
ANR	488485	AndExpression	( hprot >= 37 ) && ( hprot <= 128 )		488265	0		&&			
ANR	488486	RelationalExpression	hprot >= 37		488265	0		>=			
ANR	488487	Identifier	hprot		488265	0					
ANR	488488	PrimaryExpression	37		488265	1					
ANR	488489	RelationalExpression	hprot <= 128		488265	1		<=			
ANR	488490	Identifier	hprot		488265	0					
ANR	488491	PrimaryExpression	128		488265	1					
ANR	488492	CompoundStatement		56:48:1882:1882	488265	1					
ANR	488493	ExpressionStatement	epb -> Pepb = 0x20000020 | ( ( ( unsigned long int ) hprot & 0x000000FF ) << 8 )	276:8:10847:10919	488265	0	True				
ANR	488494	AssignmentExpression	epb -> Pepb = 0x20000020 | ( ( ( unsigned long int ) hprot & 0x000000FF ) << 8 )		488265	0		=			
ANR	488495	PtrMemberAccess	epb -> Pepb		488265	0					
ANR	488496	Identifier	epb		488265	0					
ANR	488497	Identifier	Pepb		488265	1					
ANR	488498	InclusiveOrExpression	0x20000020 | ( ( ( unsigned long int ) hprot & 0x000000FF ) << 8 )		488265	1		|			
ANR	488499	PrimaryExpression	0x20000020		488265	0					
ANR	488500	ShiftExpression	( ( unsigned long int ) hprot & 0x000000FF ) << 8		488265	1		<<			
ANR	488501	BitAndExpression	( unsigned long int ) hprot & 0x000000FF		488265	0		&			
ANR	488502	CastExpression	( unsigned long int ) hprot		488265	0					
ANR	488503	CastTarget	unsigned long int		488265	0					
ANR	488504	Identifier	hprot		488265	1					
ANR	488505	PrimaryExpression	0x000000FF		488265	1					
ANR	488506	PrimaryExpression	8		488265	1					
ANR	488507	ExpressionStatement	epb -> k_post = 32	277:8:10929:10945	488265	1	True				
ANR	488508	AssignmentExpression	epb -> k_post = 32		488265	0		=			
ANR	488509	PtrMemberAccess	epb -> k_post		488265	0					
ANR	488510	Identifier	epb		488265	0					
ANR	488511	Identifier	k_post		488265	1					
ANR	488512	PrimaryExpression	32		488265	1					
ANR	488513	ExpressionStatement	epb -> n_post = hprot	278:8:10955:10974	488265	2	True				
ANR	488514	AssignmentExpression	epb -> n_post = hprot		488265	0		=			
ANR	488515	PtrMemberAccess	epb -> n_post		488265	0					
ANR	488516	Identifier	epb		488265	0					
ANR	488517	Identifier	n_post		488265	1					
ANR	488518	Identifier	hprot		488265	1					
ANR	488519	ElseStatement	else		488265	0					
ANR	488520	IfStatement	if ( hprot == 1 )		488265	0					
ANR	488521	Condition	hprot == 1	280:15:10992:11001	488265	0	True				
ANR	488522	EqualityExpression	hprot == 1		488265	0		==			
ANR	488523	Identifier	hprot		488265	0					
ANR	488524	PrimaryExpression	1		488265	1					
ANR	488525	CompoundStatement		62:27:2091:2091	488265	1					
ANR	488526	ExpressionStatement	epb -> Pepb = ( unsigned long int ) 0x00000000	282:8:11049:11091	488265	0	True				
ANR	488527	AssignmentExpression	epb -> Pepb = ( unsigned long int ) 0x00000000		488265	0		=			
ANR	488528	PtrMemberAccess	epb -> Pepb		488265	0					
ANR	488529	Identifier	epb		488265	0					
ANR	488530	Identifier	Pepb		488265	1					
ANR	488531	CastExpression	( unsigned long int ) 0x00000000		488265	1					
ANR	488532	CastTarget	unsigned long int		488265	0					
ANR	488533	PrimaryExpression	0x00000000		488265	1					
ANR	488534	ExpressionStatement	epb -> n_post = epb -> n_pre	283:8:11101:11125	488265	1	True				
ANR	488535	AssignmentExpression	epb -> n_post = epb -> n_pre		488265	0		=			
ANR	488536	PtrMemberAccess	epb -> n_post		488265	0					
ANR	488537	Identifier	epb		488265	0					
ANR	488538	Identifier	n_post		488265	1					
ANR	488539	PtrMemberAccess	epb -> n_pre		488265	1					
ANR	488540	Identifier	epb		488265	0					
ANR	488541	Identifier	n_pre		488265	1					
ANR	488542	ExpressionStatement	epb -> k_post = epb -> k_pre	284:8:11135:11159	488265	2	True				
ANR	488543	AssignmentExpression	epb -> k_post = epb -> k_pre		488265	0		=			
ANR	488544	PtrMemberAccess	epb -> k_post		488265	0					
ANR	488545	Identifier	epb		488265	0					
ANR	488546	Identifier	k_post		488265	1					
ANR	488547	PtrMemberAccess	epb -> k_pre		488265	1					
ANR	488548	Identifier	epb		488265	0					
ANR	488549	Identifier	k_pre		488265	1					
ANR	488550	ElseStatement	else		488265	0					
ANR	488551	IfStatement	if ( hprot == 0 )		488265	0					
ANR	488552	Condition	hprot == 0	286:15:11177:11186	488265	0	True				
ANR	488553	EqualityExpression	hprot == 0		488265	0		==			
ANR	488554	Identifier	hprot		488265	0					
ANR	488555	PrimaryExpression	0		488265	1					
ANR	488556	CompoundStatement		68:27:2276:2276	488265	1					
ANR	488557	ExpressionStatement	epb -> Pepb = ( unsigned long int ) 0xFFFFFFFF	288:8:11281:11323	488265	0	True				
ANR	488558	AssignmentExpression	epb -> Pepb = ( unsigned long int ) 0xFFFFFFFF		488265	0		=			
ANR	488559	PtrMemberAccess	epb -> Pepb		488265	0					
ANR	488560	Identifier	epb		488265	0					
ANR	488561	Identifier	Pepb		488265	1					
ANR	488562	CastExpression	( unsigned long int ) 0xFFFFFFFF		488265	1					
ANR	488563	CastTarget	unsigned long int		488265	0					
ANR	488564	PrimaryExpression	0xFFFFFFFF		488265	1					
ANR	488565	ExpressionStatement	epb -> n_post = 1	289:8:11333:11348	488265	1	True				
ANR	488566	AssignmentExpression	epb -> n_post = 1		488265	0		=			
ANR	488567	PtrMemberAccess	epb -> n_post		488265	0					
ANR	488568	Identifier	epb		488265	0					
ANR	488569	Identifier	n_post		488265	1					
ANR	488570	PrimaryExpression	1		488265	1					
ANR	488571	ExpressionStatement	epb -> k_post = 1	290:8:11358:11373	488265	2	True				
ANR	488572	AssignmentExpression	epb -> k_post = 1		488265	0		=			
ANR	488573	PtrMemberAccess	epb -> k_post		488265	0					
ANR	488574	Identifier	epb		488265	0					
ANR	488575	Identifier	k_post		488265	1					
ANR	488576	PrimaryExpression	1		488265	1					
ANR	488577	ElseStatement	else		488265	0					
ANR	488578	CompoundStatement		74:11:2474:2474	488265	0					
ANR	488579	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Invalid protection value for EPB h = %d\\n"" , hprot )"	293:8:11397:11507	488265	0	True				
ANR	488580	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Invalid protection value for EPB h = %d\\n"" , hprot )"		488265	0					
ANR	488581	Callee	opj_event_msg		488265	0					
ANR	488582	Identifier	opj_event_msg		488265	0					
ANR	488583	ArgumentList	j2k -> cinfo		488265	1					
ANR	488584	Argument	j2k -> cinfo		488265	0					
ANR	488585	PtrMemberAccess	j2k -> cinfo		488265	0					
ANR	488586	Identifier	j2k		488265	0					
ANR	488587	Identifier	cinfo		488265	1					
ANR	488588	Argument	EVT_ERROR		488265	1					
ANR	488589	Identifier	EVT_ERROR		488265	0					
ANR	488590	Argument	"""Invalid protection value for EPB h = %d\\n"""		488265	2					
ANR	488591	PrimaryExpression	"""Invalid protection value for EPB h = %d\\n"""		488265	0					
ANR	488592	Argument	hprot		488265	3					
ANR	488593	Identifier	hprot		488265	0					
ANR	488594	ReturnStatement	return NULL ;	295:8:11517:11528	488265	1	True				
ANR	488595	Identifier	NULL		488265	0					
ANR	488596	ExpressionStatement	epb -> hprot = hprot	298:4:11541:11559	488265	14	True				
ANR	488597	AssignmentExpression	epb -> hprot = hprot		488265	0		=			
ANR	488598	PtrMemberAccess	epb -> hprot		488265	0					
ANR	488599	Identifier	epb		488265	0					
ANR	488600	Identifier	hprot		488265	1					
ANR	488601	Identifier	hprot		488265	1					
ANR	488602	ExpressionStatement	L3 = ( epb -> n_post - epb -> k_post ) * ( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )	301:4:11664:11772	488265	15	True				
ANR	488603	AssignmentExpression	L3 = ( epb -> n_post - epb -> k_post ) * ( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )		488265	0		=			
ANR	488604	Identifier	L3		488265	0					
ANR	488605	MultiplicativeExpression	( epb -> n_post - epb -> k_post ) * ( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )		488265	1		*			
ANR	488606	AdditiveExpression	epb -> n_post - epb -> k_post		488265	0		-			
ANR	488607	PtrMemberAccess	epb -> n_post		488265	0					
ANR	488608	Identifier	epb		488265	0					
ANR	488609	Identifier	n_post		488265	1					
ANR	488610	PtrMemberAccess	epb -> k_post		488265	1					
ANR	488611	Identifier	epb		488265	0					
ANR	488612	Identifier	k_post		488265	1					
ANR	488613	CastExpression	( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )		488265	1					
ANR	488614	CastTarget	unsigned short int		488265	0					
ANR	488615	CallExpression	ceil ( ( double ) L4 / ( double ) epb -> k_post )		488265	1					
ANR	488616	Callee	ceil		488265	0					
ANR	488617	Identifier	ceil		488265	0					
ANR	488618	ArgumentList	( double ) L4 / ( double ) epb -> k_post		488265	1					
ANR	488619	Argument	( double ) L4 / ( double ) epb -> k_post		488265	0					
ANR	488620	MultiplicativeExpression	( double ) L4 / ( double ) epb -> k_post		488265	0		/			
ANR	488621	CastExpression	( double ) L4		488265	0					
ANR	488622	CastTarget	double		488265	0					
ANR	488623	Identifier	L4		488265	1					
ANR	488624	CastExpression	( double ) epb -> k_post		488265	1					
ANR	488625	CastTarget	double		488265	0					
ANR	488626	PtrMemberAccess	epb -> k_post		488265	1					
ANR	488627	Identifier	epb		488265	0					
ANR	488628	Identifier	k_post		488265	1					
ANR	488629	ExpressionStatement	epb -> tileno = tileno	305:4:11804:11824	488265	16	True				
ANR	488630	AssignmentExpression	epb -> tileno = tileno		488265	0		=			
ANR	488631	PtrMemberAccess	epb -> tileno		488265	0					
ANR	488632	Identifier	epb		488265	0					
ANR	488633	Identifier	tileno		488265	1					
ANR	488634	Identifier	tileno		488265	1					
ANR	488635	ExpressionStatement	epb -> Lepb = 11 + L2 + L3	311:4:12022:12046	488265	17	True				
ANR	488636	AssignmentExpression	epb -> Lepb = 11 + L2 + L3		488265	0		=			
ANR	488637	PtrMemberAccess	epb -> Lepb		488265	0					
ANR	488638	Identifier	epb		488265	0					
ANR	488639	Identifier	Lepb		488265	1					
ANR	488640	AdditiveExpression	11 + L2 + L3		488265	1		+			
ANR	488641	PrimaryExpression	11		488265	0					
ANR	488642	AdditiveExpression	L2 + L3		488265	1		+			
ANR	488643	Identifier	L2		488265	0					
ANR	488644	Identifier	L3		488265	1					
ANR	488645	ExpressionStatement	epb -> Depb = ( ( packed & 0x0001 ) << 7 ) | ( ( latest & 0x0001 ) << 6 ) | ( idx & 0x003F )	314:4:12073:12169	488265	18	True				
ANR	488646	AssignmentExpression	epb -> Depb = ( ( packed & 0x0001 ) << 7 ) | ( ( latest & 0x0001 ) << 6 ) | ( idx & 0x003F )		488265	0		=			
ANR	488647	PtrMemberAccess	epb -> Depb		488265	0					
ANR	488648	Identifier	epb		488265	0					
ANR	488649	Identifier	Depb		488265	1					
ANR	488650	InclusiveOrExpression	( ( packed & 0x0001 ) << 7 ) | ( ( latest & 0x0001 ) << 6 ) | ( idx & 0x003F )		488265	1		|			
ANR	488651	ShiftExpression	( packed & 0x0001 ) << 7		488265	0		<<			
ANR	488652	BitAndExpression	packed & 0x0001		488265	0		&			
ANR	488653	Identifier	packed		488265	0					
ANR	488654	PrimaryExpression	0x0001		488265	1					
ANR	488655	PrimaryExpression	7		488265	1					
ANR	488656	InclusiveOrExpression	( ( latest & 0x0001 ) << 6 ) | ( idx & 0x003F )		488265	1		|			
ANR	488657	ShiftExpression	( latest & 0x0001 ) << 6		488265	0		<<			
ANR	488658	BitAndExpression	latest & 0x0001		488265	0		&			
ANR	488659	Identifier	latest		488265	0					
ANR	488660	PrimaryExpression	0x0001		488265	1					
ANR	488661	PrimaryExpression	6		488265	1					
ANR	488662	BitAndExpression	idx & 0x003F		488265	1		&			
ANR	488663	Identifier	idx		488265	0					
ANR	488664	PrimaryExpression	0x003F		488265	1					
ANR	488665	ExpressionStatement	epb -> LDPepb = L1 + L4	318:4:12219:12240	488265	19	True				
ANR	488666	AssignmentExpression	epb -> LDPepb = L1 + L4		488265	0		=			
ANR	488667	PtrMemberAccess	epb -> LDPepb		488265	0					
ANR	488668	Identifier	epb		488265	0					
ANR	488669	Identifier	LDPepb		488265	1					
ANR	488670	AdditiveExpression	L1 + L4		488265	1		+			
ANR	488671	Identifier	L1		488265	0					
ANR	488672	Identifier	L4		488265	1					
ANR	488673	ReturnStatement	return epb ;	320:4:12247:12257	488265	20	True				
ANR	488674	Identifier	epb		488265	0					
ANR	488675	ReturnType	jpwl_epb_ms_t *		488265	1					
ANR	488676	Identifier	jpwl_epb_create		488265	2					
ANR	488677	ParameterList	"opj_j2k_t * j2k , opj_bool latest , opj_bool packed , int tileno , int idx , int hprot , unsigned long int pre_len , unsigned long int post_len"		488265	3					
ANR	488678	Parameter	opj_j2k_t * j2k	216:31:8713:8726	488265	0	True				
ANR	488679	ParameterType	opj_j2k_t *		488265	0					
ANR	488680	Identifier	j2k		488265	1					
ANR	488681	Parameter	opj_bool latest	216:47:8729:8743	488265	1	True				
ANR	488682	ParameterType	opj_bool		488265	0					
ANR	488683	Identifier	latest		488265	1					
ANR	488684	Parameter	opj_bool packed	216:64:8746:8760	488265	2	True				
ANR	488685	ParameterType	opj_bool		488265	0					
ANR	488686	Identifier	packed		488265	1					
ANR	488687	Parameter	int tileno	217:31:8794:8803	488265	3	True				
ANR	488688	ParameterType	int		488265	0					
ANR	488689	Identifier	tileno		488265	1					
ANR	488690	Parameter	int idx	217:43:8806:8812	488265	4	True				
ANR	488691	ParameterType	int		488265	0					
ANR	488692	Identifier	idx		488265	1					
ANR	488693	Parameter	int hprot	217:52:8815:8823	488265	5	True				
ANR	488694	ParameterType	int		488265	0					
ANR	488695	Identifier	hprot		488265	1					
ANR	488696	Parameter	unsigned long int pre_len	218:31:8857:8881	488265	6	True				
ANR	488697	ParameterType	unsigned long int		488265	0					
ANR	488698	Identifier	pre_len		488265	1					
ANR	488699	Parameter	unsigned long int post_len	218:58:8884:8909	488265	7	True				
ANR	488700	ParameterType	unsigned long int		488265	0					
ANR	488701	Identifier	post_len		488265	1					
ANR	488702	CFGEntryNode	ENTRY		488265		True				
ANR	488703	CFGExitNode	EXIT		488265		True				
ANR	488704	Symbol	opj_malloc		488265						
ANR	488705	Symbol	tileno		488265						
ANR	488706	Symbol	epb -> Depb		488265						
ANR	488707	Symbol	pre_len		488265						
ANR	488708	Symbol	post_len		488265						
ANR	488709	Symbol	epb -> LDPepb		488265						
ANR	488710	Symbol	epb		488265						
ANR	488711	Symbol	epb -> post_len		488265						
ANR	488712	Symbol	epb -> k_pre		488265						
ANR	488713	Symbol	packed		488265						
ANR	488714	Symbol	EVT_ERROR		488265						
ANR	488715	Symbol	epb -> tileno		488265						
ANR	488716	Symbol	latest		488265						
ANR	488717	Symbol	hprot		488265						
ANR	488718	Symbol	j2k		488265						
ANR	488719	Symbol	NULL		488265						
ANR	488720	Symbol	L1		488265						
ANR	488721	Symbol	L2		488265						
ANR	488722	Symbol	L3		488265						
ANR	488723	Symbol	L4		488265						
ANR	488724	Symbol	insideMH		488265						
ANR	488725	Symbol	ceil		488265						
ANR	488726	Symbol	epb -> Pepb		488265						
ANR	488727	Symbol	j2k -> cinfo		488265						
ANR	488728	Symbol	epb -> n_pre		488265						
ANR	488729	Symbol	epb -> Lepb		488265						
ANR	488730	Symbol	* j2k		488265						
ANR	488731	Symbol	epb -> n_post		488265						
ANR	488732	Symbol	epb -> k_post		488265						
ANR	488733	Symbol	epb -> pre_len		488265						
ANR	488734	Symbol	epb -> hprot		488265						
ANR	488735	Symbol	idx		488265						
ANR	488736	Symbol	* epb		488265						
ANR	488737	Function	jpwl_epb_write	323:0:12262:13281							
ANR	488738	FunctionDef	"jpwl_epb_write (opj_j2k_t * j2k , jpwl_epb_ms_t * epb , unsigned char * buf)"		488737	0					
ANR	488739	CompoundStatement		324:0:12338:13281	488737	0					
ANR	488740	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPB >> 8 )	327:4:12362:12405	488737	0	True				
ANR	488741	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPB >> 8 )		488737	0		=			
ANR	488742	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488743	UnaryOperator	*		488737	0					
ANR	488744	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488745	Identifier	buf		488737	0					
ANR	488746	IncDec	++		488737	1					
ANR	488747	CastExpression	( unsigned char ) ( J2K_MS_EPB >> 8 )		488737	1					
ANR	488748	CastTarget	unsigned char		488737	0					
ANR	488749	ShiftExpression	J2K_MS_EPB >> 8		488737	1		>>			
ANR	488750	Identifier	J2K_MS_EPB		488737	0					
ANR	488751	PrimaryExpression	8		488737	1					
ANR	488752	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPB >> 0 )	328:4:12411:12454	488737	1	True				
ANR	488753	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPB >> 0 )		488737	0		=			
ANR	488754	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488755	UnaryOperator	*		488737	0					
ANR	488756	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488757	Identifier	buf		488737	0					
ANR	488758	IncDec	++		488737	1					
ANR	488759	CastExpression	( unsigned char ) ( J2K_MS_EPB >> 0 )		488737	1					
ANR	488760	CastTarget	unsigned char		488737	0					
ANR	488761	ShiftExpression	J2K_MS_EPB >> 0		488737	1		>>			
ANR	488762	Identifier	J2K_MS_EPB		488737	0					
ANR	488763	PrimaryExpression	0		488737	1					
ANR	488764	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Lepb >> 8 )	331:4:12476:12518	488737	2	True				
ANR	488765	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Lepb >> 8 )		488737	0		=			
ANR	488766	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488767	UnaryOperator	*		488737	0					
ANR	488768	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488769	Identifier	buf		488737	0					
ANR	488770	IncDec	++		488737	1					
ANR	488771	CastExpression	( unsigned char ) ( epb -> Lepb >> 8 )		488737	1					
ANR	488772	CastTarget	unsigned char		488737	0					
ANR	488773	ShiftExpression	epb -> Lepb >> 8		488737	1		>>			
ANR	488774	PtrMemberAccess	epb -> Lepb		488737	0					
ANR	488775	Identifier	epb		488737	0					
ANR	488776	Identifier	Lepb		488737	1					
ANR	488777	PrimaryExpression	8		488737	1					
ANR	488778	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Lepb >> 0 )	332:4:12524:12566	488737	3	True				
ANR	488779	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Lepb >> 0 )		488737	0		=			
ANR	488780	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488781	UnaryOperator	*		488737	0					
ANR	488782	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488783	Identifier	buf		488737	0					
ANR	488784	IncDec	++		488737	1					
ANR	488785	CastExpression	( unsigned char ) ( epb -> Lepb >> 0 )		488737	1					
ANR	488786	CastTarget	unsigned char		488737	0					
ANR	488787	ShiftExpression	epb -> Lepb >> 0		488737	1		>>			
ANR	488788	PtrMemberAccess	epb -> Lepb		488737	0					
ANR	488789	Identifier	epb		488737	0					
ANR	488790	Identifier	Lepb		488737	1					
ANR	488791	PrimaryExpression	0		488737	1					
ANR	488792	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Depb >> 0 )	335:4:12588:12630	488737	4	True				
ANR	488793	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Depb >> 0 )		488737	0		=			
ANR	488794	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488795	UnaryOperator	*		488737	0					
ANR	488796	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488797	Identifier	buf		488737	0					
ANR	488798	IncDec	++		488737	1					
ANR	488799	CastExpression	( unsigned char ) ( epb -> Depb >> 0 )		488737	1					
ANR	488800	CastTarget	unsigned char		488737	0					
ANR	488801	ShiftExpression	epb -> Depb >> 0		488737	1		>>			
ANR	488802	PtrMemberAccess	epb -> Depb		488737	0					
ANR	488803	Identifier	epb		488737	0					
ANR	488804	Identifier	Depb		488737	1					
ANR	488805	PrimaryExpression	0		488737	1					
ANR	488806	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 24 )	338:4:12654:12699	488737	5	True				
ANR	488807	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 24 )		488737	0		=			
ANR	488808	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488809	UnaryOperator	*		488737	0					
ANR	488810	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488811	Identifier	buf		488737	0					
ANR	488812	IncDec	++		488737	1					
ANR	488813	CastExpression	( unsigned char ) ( epb -> LDPepb >> 24 )		488737	1					
ANR	488814	CastTarget	unsigned char		488737	0					
ANR	488815	ShiftExpression	epb -> LDPepb >> 24		488737	1		>>			
ANR	488816	PtrMemberAccess	epb -> LDPepb		488737	0					
ANR	488817	Identifier	epb		488737	0					
ANR	488818	Identifier	LDPepb		488737	1					
ANR	488819	PrimaryExpression	24		488737	1					
ANR	488820	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 16 )	339:4:12705:12750	488737	6	True				
ANR	488821	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 16 )		488737	0		=			
ANR	488822	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488823	UnaryOperator	*		488737	0					
ANR	488824	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488825	Identifier	buf		488737	0					
ANR	488826	IncDec	++		488737	1					
ANR	488827	CastExpression	( unsigned char ) ( epb -> LDPepb >> 16 )		488737	1					
ANR	488828	CastTarget	unsigned char		488737	0					
ANR	488829	ShiftExpression	epb -> LDPepb >> 16		488737	1		>>			
ANR	488830	PtrMemberAccess	epb -> LDPepb		488737	0					
ANR	488831	Identifier	epb		488737	0					
ANR	488832	Identifier	LDPepb		488737	1					
ANR	488833	PrimaryExpression	16		488737	1					
ANR	488834	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 8 )	340:4:12756:12800	488737	7	True				
ANR	488835	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 8 )		488737	0		=			
ANR	488836	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488837	UnaryOperator	*		488737	0					
ANR	488838	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488839	Identifier	buf		488737	0					
ANR	488840	IncDec	++		488737	1					
ANR	488841	CastExpression	( unsigned char ) ( epb -> LDPepb >> 8 )		488737	1					
ANR	488842	CastTarget	unsigned char		488737	0					
ANR	488843	ShiftExpression	epb -> LDPepb >> 8		488737	1		>>			
ANR	488844	PtrMemberAccess	epb -> LDPepb		488737	0					
ANR	488845	Identifier	epb		488737	0					
ANR	488846	Identifier	LDPepb		488737	1					
ANR	488847	PrimaryExpression	8		488737	1					
ANR	488848	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 0 )	341:4:12806:12850	488737	8	True				
ANR	488849	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> LDPepb >> 0 )		488737	0		=			
ANR	488850	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488851	UnaryOperator	*		488737	0					
ANR	488852	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488853	Identifier	buf		488737	0					
ANR	488854	IncDec	++		488737	1					
ANR	488855	CastExpression	( unsigned char ) ( epb -> LDPepb >> 0 )		488737	1					
ANR	488856	CastTarget	unsigned char		488737	0					
ANR	488857	ShiftExpression	epb -> LDPepb >> 0		488737	1		>>			
ANR	488858	PtrMemberAccess	epb -> LDPepb		488737	0					
ANR	488859	Identifier	epb		488737	0					
ANR	488860	Identifier	LDPepb		488737	1					
ANR	488861	PrimaryExpression	0		488737	1					
ANR	488862	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 24 )	344:4:12872:12915	488737	9	True				
ANR	488863	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 24 )		488737	0		=			
ANR	488864	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488865	UnaryOperator	*		488737	0					
ANR	488866	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488867	Identifier	buf		488737	0					
ANR	488868	IncDec	++		488737	1					
ANR	488869	CastExpression	( unsigned char ) ( epb -> Pepb >> 24 )		488737	1					
ANR	488870	CastTarget	unsigned char		488737	0					
ANR	488871	ShiftExpression	epb -> Pepb >> 24		488737	1		>>			
ANR	488872	PtrMemberAccess	epb -> Pepb		488737	0					
ANR	488873	Identifier	epb		488737	0					
ANR	488874	Identifier	Pepb		488737	1					
ANR	488875	PrimaryExpression	24		488737	1					
ANR	488876	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 16 )	345:4:12921:12964	488737	10	True				
ANR	488877	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 16 )		488737	0		=			
ANR	488878	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488879	UnaryOperator	*		488737	0					
ANR	488880	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488881	Identifier	buf		488737	0					
ANR	488882	IncDec	++		488737	1					
ANR	488883	CastExpression	( unsigned char ) ( epb -> Pepb >> 16 )		488737	1					
ANR	488884	CastTarget	unsigned char		488737	0					
ANR	488885	ShiftExpression	epb -> Pepb >> 16		488737	1		>>			
ANR	488886	PtrMemberAccess	epb -> Pepb		488737	0					
ANR	488887	Identifier	epb		488737	0					
ANR	488888	Identifier	Pepb		488737	1					
ANR	488889	PrimaryExpression	16		488737	1					
ANR	488890	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 8 )	346:4:12970:13012	488737	11	True				
ANR	488891	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 8 )		488737	0		=			
ANR	488892	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488893	UnaryOperator	*		488737	0					
ANR	488894	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488895	Identifier	buf		488737	0					
ANR	488896	IncDec	++		488737	1					
ANR	488897	CastExpression	( unsigned char ) ( epb -> Pepb >> 8 )		488737	1					
ANR	488898	CastTarget	unsigned char		488737	0					
ANR	488899	ShiftExpression	epb -> Pepb >> 8		488737	1		>>			
ANR	488900	PtrMemberAccess	epb -> Pepb		488737	0					
ANR	488901	Identifier	epb		488737	0					
ANR	488902	Identifier	Pepb		488737	1					
ANR	488903	PrimaryExpression	8		488737	1					
ANR	488904	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 0 )	347:4:13018:13060	488737	12	True				
ANR	488905	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epb -> Pepb >> 0 )		488737	0		=			
ANR	488906	UnaryOperationExpression	* ( buf ++ )		488737	0					
ANR	488907	UnaryOperator	*		488737	0					
ANR	488908	PostIncDecOperationExpression	buf ++		488737	1					
ANR	488909	Identifier	buf		488737	0					
ANR	488910	IncDec	++		488737	1					
ANR	488911	CastExpression	( unsigned char ) ( epb -> Pepb >> 0 )		488737	1					
ANR	488912	CastTarget	unsigned char		488737	0					
ANR	488913	ShiftExpression	epb -> Pepb >> 0		488737	1		>>			
ANR	488914	PtrMemberAccess	epb -> Pepb		488737	0					
ANR	488915	Identifier	epb		488737	0					
ANR	488916	Identifier	Pepb		488737	1					
ANR	488917	PrimaryExpression	0		488737	1					
ANR	488918	ExpressionStatement	"memset ( buf , 0 , ( size_t ) epb -> Lepb - 11 )"	351:4:13139:13178	488737	13	True				
ANR	488919	CallExpression	"memset ( buf , 0 , ( size_t ) epb -> Lepb - 11 )"		488737	0					
ANR	488920	Callee	memset		488737	0					
ANR	488921	Identifier	memset		488737	0					
ANR	488922	ArgumentList	buf		488737	1					
ANR	488923	Argument	buf		488737	0					
ANR	488924	Identifier	buf		488737	0					
ANR	488925	Argument	0		488737	1					
ANR	488926	PrimaryExpression	0		488737	0					
ANR	488927	Argument	( size_t ) epb -> Lepb - 11		488737	2					
ANR	488928	AdditiveExpression	( size_t ) epb -> Lepb - 11		488737	0		-			
ANR	488929	CastExpression	( size_t ) epb -> Lepb		488737	0					
ANR	488930	CastTarget	size_t		488737	0					
ANR	488931	PtrMemberAccess	epb -> Lepb		488737	1					
ANR	488932	Identifier	epb		488737	0					
ANR	488933	Identifier	Lepb		488737	1					
ANR	488934	PrimaryExpression	11		488737	1					
ANR	488935	ExpressionStatement	"j2k_add_marker ( j2k -> cstr_info , J2K_MS_EPB , - 1 , epb -> Lepb + 2 )"	354:4:13217:13278	488737	14	True				
ANR	488936	CallExpression	"j2k_add_marker ( j2k -> cstr_info , J2K_MS_EPB , - 1 , epb -> Lepb + 2 )"		488737	0					
ANR	488937	Callee	j2k_add_marker		488737	0					
ANR	488938	Identifier	j2k_add_marker		488737	0					
ANR	488939	ArgumentList	j2k -> cstr_info		488737	1					
ANR	488940	Argument	j2k -> cstr_info		488737	0					
ANR	488941	PtrMemberAccess	j2k -> cstr_info		488737	0					
ANR	488942	Identifier	j2k		488737	0					
ANR	488943	Identifier	cstr_info		488737	1					
ANR	488944	Argument	J2K_MS_EPB		488737	1					
ANR	488945	Identifier	J2K_MS_EPB		488737	0					
ANR	488946	Argument	- 1		488737	2					
ANR	488947	UnaryOperationExpression	- 1		488737	0					
ANR	488948	UnaryOperator	-		488737	0					
ANR	488949	PrimaryExpression	1		488737	1					
ANR	488950	Argument	epb -> Lepb + 2		488737	3					
ANR	488951	AdditiveExpression	epb -> Lepb + 2		488737	0		+			
ANR	488952	PtrMemberAccess	epb -> Lepb		488737	0					
ANR	488953	Identifier	epb		488737	0					
ANR	488954	Identifier	Lepb		488737	1					
ANR	488955	PrimaryExpression	2		488737	1					
ANR	488956	ReturnType	void		488737	1					
ANR	488957	Identifier	jpwl_epb_write		488737	2					
ANR	488958	ParameterList	"opj_j2k_t * j2k , jpwl_epb_ms_t * epb , unsigned char * buf"		488737	3					
ANR	488959	Parameter	opj_j2k_t * j2k	323:20:12282:12295	488737	0	True				
ANR	488960	ParameterType	opj_j2k_t *		488737	0					
ANR	488961	Identifier	j2k		488737	1					
ANR	488962	Parameter	jpwl_epb_ms_t * epb	323:36:12298:12315	488737	1	True				
ANR	488963	ParameterType	jpwl_epb_ms_t *		488737	0					
ANR	488964	Identifier	epb		488737	1					
ANR	488965	Parameter	unsigned char * buf	323:56:12318:12335	488737	2	True				
ANR	488966	ParameterType	unsigned char *		488737	0					
ANR	488967	Identifier	buf		488737	1					
ANR	488968	CFGEntryNode	ENTRY		488737		True				
ANR	488969	CFGExitNode	EXIT		488737		True				
ANR	488970	Symbol	* ( buf ++ )		488737						
ANR	488971	Symbol	epb -> Lepb		488737						
ANR	488972	Symbol	j2k		488737						
ANR	488973	Symbol	buf		488737						
ANR	488974	Symbol	* j2k		488737						
ANR	488975	Symbol	epb -> Depb		488737						
ANR	488976	Symbol	epb -> LDPepb		488737						
ANR	488977	Symbol	epb		488737						
ANR	488978	Symbol	j2k -> cstr_info		488737						
ANR	488979	Symbol	J2K_MS_EPB		488737						
ANR	488980	Symbol	epb -> Pepb		488737						
ANR	488981	Symbol	* epb		488737						
ANR	488982	Function	jpwl_epc_create	359:0:13285:14159							
ANR	488983	FunctionDef	"jpwl_epc_create (opj_j2k_t * j2k , opj_bool esd_on , opj_bool red_on , opj_bool epb_on , opj_bool info_on)"		488982	0					
ANR	488984	CompoundStatement		361:0:13432:14159	488982	0					
ANR	488985	IdentifierDeclStatement	jpwl_epc_ms_t * epc = NULL ;	363:4:13439:13464	488982	0	True				
ANR	488986	IdentifierDecl	* epc = NULL		488982	0					
ANR	488987	IdentifierDeclType	jpwl_epc_ms_t *		488982	0					
ANR	488988	Identifier	epc		488982	1					
ANR	488989	AssignmentExpression	* epc = NULL		488982	2		=			
ANR	488990	Identifier	NULL		488982	0					
ANR	488991	Identifier	NULL		488982	1					
ANR	488992	IfStatement	if ( ! ( epc = ( jpwl_epc_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epc_ms_t ) ) ) )		488982	1					
ANR	488993	Condition	! ( epc = ( jpwl_epc_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epc_ms_t ) ) )	366:8:13497:13569	488982	0	True				
ANR	488994	UnaryOperationExpression	! ( epc = ( jpwl_epc_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epc_ms_t ) ) )		488982	0					
ANR	488995	UnaryOperator	!		488982	0					
ANR	488996	AssignmentExpression	epc = ( jpwl_epc_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epc_ms_t ) )		488982	1		=			
ANR	488997	Identifier	epc		488982	0					
ANR	488998	CastExpression	( jpwl_epc_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epc_ms_t ) )		488982	1					
ANR	488999	CastTarget	jpwl_epc_ms_t *		488982	0					
ANR	489000	CallExpression	opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_epc_ms_t ) )		488982	1					
ANR	489001	Callee	opj_malloc		488982	0					
ANR	489002	Identifier	opj_malloc		488982	0					
ANR	489003	ArgumentList	( size_t ) 1 * sizeof ( jpwl_epc_ms_t )		488982	1					
ANR	489004	Argument	( size_t ) 1 * sizeof ( jpwl_epc_ms_t )		488982	0					
ANR	489005	MultiplicativeExpression	( size_t ) 1 * sizeof ( jpwl_epc_ms_t )		488982	0		*			
ANR	489006	CastExpression	( size_t ) 1		488982	0					
ANR	489007	CastTarget	size_t		488982	0					
ANR	489008	PrimaryExpression	1		488982	1					
ANR	489009	SizeofExpression	sizeof ( jpwl_epc_ms_t )		488982	1					
ANR	489010	Sizeof	sizeof		488982	0					
ANR	489011	SizeofOperand	jpwl_epc_ms_t		488982	1					
ANR	489012	CompoundStatement		6:83:139:139	488982	1					
ANR	489013	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not allocate room for EPC MS\\n"" )"	367:8:13582:13658	488982	0	True				
ANR	489014	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not allocate room for EPC MS\\n"" )"		488982	0					
ANR	489015	Callee	opj_event_msg		488982	0					
ANR	489016	Identifier	opj_event_msg		488982	0					
ANR	489017	ArgumentList	j2k -> cinfo		488982	1					
ANR	489018	Argument	j2k -> cinfo		488982	0					
ANR	489019	PtrMemberAccess	j2k -> cinfo		488982	0					
ANR	489020	Identifier	j2k		488982	0					
ANR	489021	Identifier	cinfo		488982	1					
ANR	489022	Argument	EVT_ERROR		488982	1					
ANR	489023	Identifier	EVT_ERROR		488982	0					
ANR	489024	Argument	"""Could not allocate room for EPC MS\\n"""		488982	2					
ANR	489025	PrimaryExpression	"""Could not allocate room for EPC MS\\n"""		488982	0					
ANR	489026	ReturnStatement	return NULL ;	368:8:13668:13679	488982	1	True				
ANR	489027	Identifier	NULL		488982	0					
ANR	489028	ExpressionStatement		369:5:13686:13686	488982	2	True				
ANR	489029	ExpressionStatement	epc -> esd_on = esd_on	372:4:13726:13746	488982	3	True				
ANR	489030	AssignmentExpression	epc -> esd_on = esd_on		488982	0		=			
ANR	489031	PtrMemberAccess	epc -> esd_on		488982	0					
ANR	489032	Identifier	epc		488982	0					
ANR	489033	Identifier	esd_on		488982	1					
ANR	489034	Identifier	esd_on		488982	1					
ANR	489035	ExpressionStatement	epc -> epb_on = epb_on	373:4:13752:13772	488982	4	True				
ANR	489036	AssignmentExpression	epc -> epb_on = epb_on		488982	0		=			
ANR	489037	PtrMemberAccess	epc -> epb_on		488982	0					
ANR	489038	Identifier	epc		488982	0					
ANR	489039	Identifier	epb_on		488982	1					
ANR	489040	Identifier	epb_on		488982	1					
ANR	489041	ExpressionStatement	epc -> red_on = red_on	374:4:13778:13798	488982	5	True				
ANR	489042	AssignmentExpression	epc -> red_on = red_on		488982	0		=			
ANR	489043	PtrMemberAccess	epc -> red_on		488982	0					
ANR	489044	Identifier	epc		488982	0					
ANR	489045	Identifier	red_on		488982	1					
ANR	489046	Identifier	red_on		488982	1					
ANR	489047	ExpressionStatement	epc -> info_on = info_on	375:4:13804:13826	488982	6	True				
ANR	489048	AssignmentExpression	epc -> info_on = info_on		488982	0		=			
ANR	489049	PtrMemberAccess	epc -> info_on		488982	0					
ANR	489050	Identifier	epc		488982	0					
ANR	489051	Identifier	info_on		488982	1					
ANR	489052	Identifier	info_on		488982	1					
ANR	489053	ExpressionStatement	epc -> Lepc = 9	378:4:13883:13896	488982	7	True				
ANR	489054	AssignmentExpression	epc -> Lepc = 9		488982	0		=			
ANR	489055	PtrMemberAccess	epc -> Lepc		488982	0					
ANR	489056	Identifier	epc		488982	0					
ANR	489057	Identifier	Lepc		488982	1					
ANR	489058	PrimaryExpression	9		488982	1					
ANR	489059	ExpressionStatement	epc -> Pcrc = 0x0000	379:4:13902:13920	488982	8	True				
ANR	489060	AssignmentExpression	epc -> Pcrc = 0x0000		488982	0		=			
ANR	489061	PtrMemberAccess	epc -> Pcrc		488982	0					
ANR	489062	Identifier	epc		488982	0					
ANR	489063	Identifier	Pcrc		488982	1					
ANR	489064	PrimaryExpression	0x0000		488982	1					
ANR	489065	ExpressionStatement	epc -> DL = 0x00000000	380:4:13926:13946	488982	9	True				
ANR	489066	AssignmentExpression	epc -> DL = 0x00000000		488982	0		=			
ANR	489067	PtrMemberAccess	epc -> DL		488982	0					
ANR	489068	Identifier	epc		488982	0					
ANR	489069	Identifier	DL		488982	1					
ANR	489070	PrimaryExpression	0x00000000		488982	1					
ANR	489071	ExpressionStatement	epc -> Pepc = ( ( j2k -> cp -> esd_on & 0x0001 ) << 4 ) | ( ( j2k -> cp -> red_on & 0x0001 ) << 5 ) | ( ( j2k -> cp -> epb_on & 0x0001 ) << 6 ) | ( ( j2k -> cp -> info_on & 0x0001 ) << 7 )	381:4:13952:14138	488982	10	True				
ANR	489072	AssignmentExpression	epc -> Pepc = ( ( j2k -> cp -> esd_on & 0x0001 ) << 4 ) | ( ( j2k -> cp -> red_on & 0x0001 ) << 5 ) | ( ( j2k -> cp -> epb_on & 0x0001 ) << 6 ) | ( ( j2k -> cp -> info_on & 0x0001 ) << 7 )		488982	0		=			
ANR	489073	PtrMemberAccess	epc -> Pepc		488982	0					
ANR	489074	Identifier	epc		488982	0					
ANR	489075	Identifier	Pepc		488982	1					
ANR	489076	InclusiveOrExpression	( ( j2k -> cp -> esd_on & 0x0001 ) << 4 ) | ( ( j2k -> cp -> red_on & 0x0001 ) << 5 ) | ( ( j2k -> cp -> epb_on & 0x0001 ) << 6 ) | ( ( j2k -> cp -> info_on & 0x0001 ) << 7 )		488982	1		|			
ANR	489077	ShiftExpression	( j2k -> cp -> esd_on & 0x0001 ) << 4		488982	0		<<			
ANR	489078	BitAndExpression	j2k -> cp -> esd_on & 0x0001		488982	0		&			
ANR	489079	PtrMemberAccess	j2k -> cp -> esd_on		488982	0					
ANR	489080	PtrMemberAccess	j2k -> cp		488982	0					
ANR	489081	Identifier	j2k		488982	0					
ANR	489082	Identifier	cp		488982	1					
ANR	489083	Identifier	esd_on		488982	1					
ANR	489084	PrimaryExpression	0x0001		488982	1					
ANR	489085	PrimaryExpression	4		488982	1					
ANR	489086	InclusiveOrExpression	( ( j2k -> cp -> red_on & 0x0001 ) << 5 ) | ( ( j2k -> cp -> epb_on & 0x0001 ) << 6 ) | ( ( j2k -> cp -> info_on & 0x0001 ) << 7 )		488982	1		|			
ANR	489087	ShiftExpression	( j2k -> cp -> red_on & 0x0001 ) << 5		488982	0		<<			
ANR	489088	BitAndExpression	j2k -> cp -> red_on & 0x0001		488982	0		&			
ANR	489089	PtrMemberAccess	j2k -> cp -> red_on		488982	0					
ANR	489090	PtrMemberAccess	j2k -> cp		488982	0					
ANR	489091	Identifier	j2k		488982	0					
ANR	489092	Identifier	cp		488982	1					
ANR	489093	Identifier	red_on		488982	1					
ANR	489094	PrimaryExpression	0x0001		488982	1					
ANR	489095	PrimaryExpression	5		488982	1					
ANR	489096	InclusiveOrExpression	( ( j2k -> cp -> epb_on & 0x0001 ) << 6 ) | ( ( j2k -> cp -> info_on & 0x0001 ) << 7 )		488982	1		|			
ANR	489097	ShiftExpression	( j2k -> cp -> epb_on & 0x0001 ) << 6		488982	0		<<			
ANR	489098	BitAndExpression	j2k -> cp -> epb_on & 0x0001		488982	0		&			
ANR	489099	PtrMemberAccess	j2k -> cp -> epb_on		488982	0					
ANR	489100	PtrMemberAccess	j2k -> cp		488982	0					
ANR	489101	Identifier	j2k		488982	0					
ANR	489102	Identifier	cp		488982	1					
ANR	489103	Identifier	epb_on		488982	1					
ANR	489104	PrimaryExpression	0x0001		488982	1					
ANR	489105	PrimaryExpression	6		488982	1					
ANR	489106	ShiftExpression	( j2k -> cp -> info_on & 0x0001 ) << 7		488982	1		<<			
ANR	489107	BitAndExpression	j2k -> cp -> info_on & 0x0001		488982	0		&			
ANR	489108	PtrMemberAccess	j2k -> cp -> info_on		488982	0					
ANR	489109	PtrMemberAccess	j2k -> cp		488982	0					
ANR	489110	Identifier	j2k		488982	0					
ANR	489111	Identifier	cp		488982	1					
ANR	489112	Identifier	info_on		488982	1					
ANR	489113	PrimaryExpression	0x0001		488982	1					
ANR	489114	PrimaryExpression	7		488982	1					
ANR	489115	ReturnStatement	return ( epc ) ;	385:4:14145:14157	488982	11	True				
ANR	489116	Identifier	epc		488982	0					
ANR	489117	ReturnType	jpwl_epc_ms_t *		488982	1					
ANR	489118	Identifier	jpwl_epc_create		488982	2					
ANR	489119	ParameterList	"opj_j2k_t * j2k , opj_bool esd_on , opj_bool red_on , opj_bool epb_on , opj_bool info_on"		488982	3					
ANR	489120	Parameter	opj_j2k_t * j2k	359:31:13316:13329	488982	0	True				
ANR	489121	ParameterType	opj_j2k_t *		488982	0					
ANR	489122	Identifier	j2k		488982	1					
ANR	489123	Parameter	opj_bool esd_on	359:47:13332:13346	488982	1	True				
ANR	489124	ParameterType	opj_bool		488982	0					
ANR	489125	Identifier	esd_on		488982	1					
ANR	489126	Parameter	opj_bool red_on	359:64:13349:13363	488982	2	True				
ANR	489127	ParameterType	opj_bool		488982	0					
ANR	489128	Identifier	red_on		488982	1					
ANR	489129	Parameter	opj_bool epb_on	360:31:13397:13411	488982	3	True				
ANR	489130	ParameterType	opj_bool		488982	0					
ANR	489131	Identifier	epb_on		488982	1					
ANR	489132	Parameter	opj_bool info_on	360:48:13414:13429	488982	4	True				
ANR	489133	ParameterType	opj_bool		488982	0					
ANR	489134	Identifier	info_on		488982	1					
ANR	489135	CFGEntryNode	ENTRY		488982		True				
ANR	489136	CFGExitNode	EXIT		488982		True				
ANR	489137	Symbol	opj_malloc		488982						
ANR	489138	Symbol	j2k -> cp		488982						
ANR	489139	Symbol	j2k -> cp -> red_on		488982						
ANR	489140	Symbol	red_on		488982						
ANR	489141	Symbol	esd_on		488982						
ANR	489142	Symbol	epc		488982						
ANR	489143	Symbol	epc -> info_on		488982						
ANR	489144	Symbol	epc -> epb_on		488982						
ANR	489145	Symbol	EVT_ERROR		488982						
ANR	489146	Symbol	j2k -> cp -> epb_on		488982						
ANR	489147	Symbol	j2k		488982						
ANR	489148	Symbol	NULL		488982						
ANR	489149	Symbol	info_on		488982						
ANR	489150	Symbol	j2k -> cp -> esd_on		488982						
ANR	489151	Symbol	epc -> Pepc		488982						
ANR	489152	Symbol	epc -> Pcrc		488982						
ANR	489153	Symbol	j2k -> cinfo		488982						
ANR	489154	Symbol	epc -> DL		488982						
ANR	489155	Symbol	* j2k		488982						
ANR	489156	Symbol	epc -> esd_on		488982						
ANR	489157	Symbol	j2k -> cp -> info_on		488982						
ANR	489158	Symbol	epc -> red_on		488982						
ANR	489159	Symbol	epb_on		488982						
ANR	489160	Symbol	epc -> Lepc		488982						
ANR	489161	Symbol	* * j2k		488982						
ANR	489162	Symbol	* j2k -> cp		488982						
ANR	489163	Symbol	* epc		488982						
ANR	489164	Function	jpwl_epb_fill	388:0:14162:20228							
ANR	489165	FunctionDef	"jpwl_epb_fill (opj_j2k_t * j2k , jpwl_epb_ms_t * epb , unsigned char * buf , unsigned char * post_buf)"		489164	0					
ANR	489166	CompoundStatement		390:0:14289:20228	489164	0					
ANR	489167	IdentifierDeclStatement	"unsigned long int L1 , L2 , L3 , L4 ;"	392:4:14296:14328	489164	0	True				
ANR	489168	IdentifierDecl	L1		489164	0					
ANR	489169	IdentifierDeclType	unsigned long int		489164	0					
ANR	489170	Identifier	L1		489164	1					
ANR	489171	IdentifierDecl	L2		489164	1					
ANR	489172	IdentifierDeclType	unsigned long int		489164	0					
ANR	489173	Identifier	L2		489164	1					
ANR	489174	IdentifierDecl	L3		489164	2					
ANR	489175	IdentifierDeclType	unsigned long int		489164	0					
ANR	489176	Identifier	L3		489164	1					
ANR	489177	IdentifierDecl	L4		489164	3					
ANR	489178	IdentifierDeclType	unsigned long int		489164	0					
ANR	489179	Identifier	L4		489164	1					
ANR	489180	IdentifierDeclStatement	int remaining ;	393:4:14334:14347	489164	1	True				
ANR	489181	IdentifierDecl	remaining		489164	0					
ANR	489182	IdentifierDeclType	int		489164	0					
ANR	489183	Identifier	remaining		489164	1					
ANR	489184	IdentifierDeclStatement	"unsigned long int P , NN_P ;"	394:4:14353:14378	489164	2	True				
ANR	489185	IdentifierDecl	P		489164	0					
ANR	489186	IdentifierDeclType	unsigned long int		489164	0					
ANR	489187	Identifier	P		489164	1					
ANR	489188	IdentifierDecl	NN_P		489164	1					
ANR	489189	IdentifierDeclType	unsigned long int		489164	0					
ANR	489190	Identifier	NN_P		489164	1					
ANR	489191	Statement	static	397:4:14412:14417	489164	3	True				
ANR	489192	IdentifierDeclStatement	"unsigned char codeword [ NN ] , * parityword ;"	397:11:14419:14458	489164	4	True				
ANR	489193	IdentifierDecl	codeword [ NN ]		489164	0					
ANR	489194	IdentifierDeclType	unsigned char [ NN ]		489164	0					
ANR	489195	Identifier	codeword		489164	1					
ANR	489196	Identifier	NN		489164	2					
ANR	489197	IdentifierDecl	* parityword		489164	1					
ANR	489198	IdentifierDeclType	unsigned char *		489164	0					
ANR	489199	Identifier	parityword		489164	1					
ANR	489200	IdentifierDeclStatement	"unsigned char * L1_buf , * L2_buf ;"	399:4:14465:14495	489164	5	True				
ANR	489201	IdentifierDecl	* L1_buf		489164	0					
ANR	489202	IdentifierDeclType	unsigned char *		489164	0					
ANR	489203	Identifier	L1_buf		489164	1					
ANR	489204	IdentifierDecl	* L2_buf		489164	1					
ANR	489205	IdentifierDeclType	unsigned char *		489164	0					
ANR	489206	Identifier	L2_buf		489164	1					
ANR	489207	Statement	static	402:4:14614:14619	489164	6	True				
ANR	489208	IdentifierDeclStatement	"unsigned char * L3_buf , * L4_buf ;"	402:11:14621:14651	489164	7	True				
ANR	489209	IdentifierDecl	* L3_buf		489164	0					
ANR	489210	IdentifierDeclType	unsigned char *		489164	0					
ANR	489211	Identifier	L3_buf		489164	1					
ANR	489212	IdentifierDecl	* L4_buf		489164	1					
ANR	489213	IdentifierDeclType	unsigned char *		489164	0					
ANR	489214	Identifier	L4_buf		489164	1					
ANR	489215	IfStatement	if ( ! buf )		489164	8					
ANR	489216	Condition	! buf	405:8:14695:14698	489164	0	True				
ANR	489217	UnaryOperationExpression	! buf		489164	0					
ANR	489218	UnaryOperator	!		489164	0					
ANR	489219	Identifier	buf		489164	1					
ANR	489220	CompoundStatement		16:14:411:411	489164	1					
ANR	489221	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""There is no operating buffer for EPBs\\n"" )"	406:8:14711:14790	489164	0	True				
ANR	489222	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""There is no operating buffer for EPBs\\n"" )"		489164	0					
ANR	489223	Callee	opj_event_msg		489164	0					
ANR	489224	Identifier	opj_event_msg		489164	0					
ANR	489225	ArgumentList	j2k -> cinfo		489164	1					
ANR	489226	Argument	j2k -> cinfo		489164	0					
ANR	489227	PtrMemberAccess	j2k -> cinfo		489164	0					
ANR	489228	Identifier	j2k		489164	0					
ANR	489229	Identifier	cinfo		489164	1					
ANR	489230	Argument	EVT_ERROR		489164	1					
ANR	489231	Identifier	EVT_ERROR		489164	0					
ANR	489232	Argument	"""There is no operating buffer for EPBs\\n"""		489164	2					
ANR	489233	PrimaryExpression	"""There is no operating buffer for EPBs\\n"""		489164	0					
ANR	489234	ReturnStatement	return OPJ_FALSE ;	407:8:14800:14816	489164	1	True				
ANR	489235	Identifier	OPJ_FALSE		489164	0					
ANR	489236	IfStatement	if ( ! post_buf && ! L4_buf )		489164	9					
ANR	489237	Condition	! post_buf && ! L4_buf	410:8:14833:14852	489164	0	True				
ANR	489238	AndExpression	! post_buf && ! L4_buf		489164	0		&&			
ANR	489239	UnaryOperationExpression	! post_buf		489164	0					
ANR	489240	UnaryOperator	!		489164	0					
ANR	489241	Identifier	post_buf		489164	1					
ANR	489242	UnaryOperationExpression	! L4_buf		489164	1					
ANR	489243	UnaryOperator	!		489164	0					
ANR	489244	Identifier	L4_buf		489164	1					
ANR	489245	CompoundStatement		21:30:565:565	489164	1					
ANR	489246	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""There is no operating buffer for EPBs data\\n"" )"	411:8:14865:14971	489164	0	True				
ANR	489247	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""There is no operating buffer for EPBs data\\n"" )"		489164	0					
ANR	489248	Callee	opj_event_msg		489164	0					
ANR	489249	Identifier	opj_event_msg		489164	0					
ANR	489250	ArgumentList	j2k -> cinfo		489164	1					
ANR	489251	Argument	j2k -> cinfo		489164	0					
ANR	489252	PtrMemberAccess	j2k -> cinfo		489164	0					
ANR	489253	Identifier	j2k		489164	0					
ANR	489254	Identifier	cinfo		489164	1					
ANR	489255	Argument	EVT_ERROR		489164	1					
ANR	489256	Identifier	EVT_ERROR		489164	0					
ANR	489257	Argument	"""There is no operating buffer for EPBs data\\n"""		489164	2					
ANR	489258	PrimaryExpression	"""There is no operating buffer for EPBs data\\n"""		489164	0					
ANR	489259	ReturnStatement	return OPJ_FALSE ;	413:8:14981:14997	489164	1	True				
ANR	489260	Identifier	OPJ_FALSE		489164	0					
ANR	489261	ExpressionStatement	P = epb -> n_pre - epb -> k_pre	421:4:15147:15174	489164	10	True				
ANR	489262	AssignmentExpression	P = epb -> n_pre - epb -> k_pre		489164	0		=			
ANR	489263	Identifier	P		489164	0					
ANR	489264	AdditiveExpression	epb -> n_pre - epb -> k_pre		489164	1		-			
ANR	489265	PtrMemberAccess	epb -> n_pre		489164	0					
ANR	489266	Identifier	epb		489164	0					
ANR	489267	Identifier	n_pre		489164	1					
ANR	489268	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489269	Identifier	epb		489164	0					
ANR	489270	Identifier	k_pre		489164	1					
ANR	489271	ExpressionStatement	NN_P = NN - P	422:4:15180:15193	489164	11	True				
ANR	489272	AssignmentExpression	NN_P = NN - P		489164	0		=			
ANR	489273	Identifier	NN_P		489164	0					
ANR	489274	AdditiveExpression	NN - P		489164	1		-			
ANR	489275	Identifier	NN		489164	0					
ANR	489276	Identifier	P		489164	1					
ANR	489277	ExpressionStatement	"memset ( codeword , 0 , NN )"	423:4:15199:15222	489164	12	True				
ANR	489278	CallExpression	"memset ( codeword , 0 , NN )"		489164	0					
ANR	489279	Callee	memset		489164	0					
ANR	489280	Identifier	memset		489164	0					
ANR	489281	ArgumentList	codeword		489164	1					
ANR	489282	Argument	codeword		489164	0					
ANR	489283	Identifier	codeword		489164	0					
ANR	489284	Argument	0		489164	1					
ANR	489285	PrimaryExpression	0		489164	0					
ANR	489286	Argument	NN		489164	2					
ANR	489287	Identifier	NN		489164	0					
ANR	489288	ExpressionStatement	parityword = codeword + NN_P	424:4:15228:15256	489164	13	True				
ANR	489289	AssignmentExpression	parityword = codeword + NN_P		489164	0		=			
ANR	489290	Identifier	parityword		489164	0					
ANR	489291	AdditiveExpression	codeword + NN_P		489164	1		+			
ANR	489292	Identifier	codeword		489164	0					
ANR	489293	Identifier	NN_P		489164	1					
ANR	489294	ExpressionStatement	init_rs ( NN_P )	425:4:15262:15275	489164	14	True				
ANR	489295	CallExpression	init_rs ( NN_P )		489164	0					
ANR	489296	Callee	init_rs		489164	0					
ANR	489297	Identifier	init_rs		489164	0					
ANR	489298	ArgumentList	NN_P		489164	1					
ANR	489299	Argument	NN_P		489164	0					
ANR	489300	Identifier	NN_P		489164	0					
ANR	489301	ExpressionStatement	L1_buf = buf - epb -> pre_len	428:4:15340:15367	489164	15	True				
ANR	489302	AssignmentExpression	L1_buf = buf - epb -> pre_len		489164	0		=			
ANR	489303	Identifier	L1_buf		489164	0					
ANR	489304	AdditiveExpression	buf - epb -> pre_len		489164	1		-			
ANR	489305	Identifier	buf		489164	0					
ANR	489306	PtrMemberAccess	epb -> pre_len		489164	1					
ANR	489307	Identifier	epb		489164	0					
ANR	489308	Identifier	pre_len		489164	1					
ANR	489309	ExpressionStatement	L1 = epb -> pre_len + 13	429:4:15373:15395	489164	16	True				
ANR	489310	AssignmentExpression	L1 = epb -> pre_len + 13		489164	0		=			
ANR	489311	Identifier	L1		489164	0					
ANR	489312	AdditiveExpression	epb -> pre_len + 13		489164	1		+			
ANR	489313	PtrMemberAccess	epb -> pre_len		489164	0					
ANR	489314	Identifier	epb		489164	0					
ANR	489315	Identifier	pre_len		489164	1					
ANR	489316	PrimaryExpression	13		489164	1					
ANR	489317	ExpressionStatement	L2_buf = buf + 13	432:4:15471:15488	489164	17	True				
ANR	489318	AssignmentExpression	L2_buf = buf + 13		489164	0		=			
ANR	489319	Identifier	L2_buf		489164	0					
ANR	489320	AdditiveExpression	buf + 13		489164	1		+			
ANR	489321	Identifier	buf		489164	0					
ANR	489322	PrimaryExpression	13		489164	1					
ANR	489323	ExpressionStatement	L2 = ( epb -> n_pre - epb -> k_pre ) * ( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )	433:4:15494:15599	489164	18	True				
ANR	489324	AssignmentExpression	L2 = ( epb -> n_pre - epb -> k_pre ) * ( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )		489164	0		=			
ANR	489325	Identifier	L2		489164	0					
ANR	489326	MultiplicativeExpression	( epb -> n_pre - epb -> k_pre ) * ( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )		489164	1		*			
ANR	489327	AdditiveExpression	epb -> n_pre - epb -> k_pre		489164	0		-			
ANR	489328	PtrMemberAccess	epb -> n_pre		489164	0					
ANR	489329	Identifier	epb		489164	0					
ANR	489330	Identifier	n_pre		489164	1					
ANR	489331	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489332	Identifier	epb		489164	0					
ANR	489333	Identifier	k_pre		489164	1					
ANR	489334	CastExpression	( unsigned short int ) ceil ( ( double ) L1 / ( double ) epb -> k_pre )		489164	1					
ANR	489335	CastTarget	unsigned short int		489164	0					
ANR	489336	CallExpression	ceil ( ( double ) L1 / ( double ) epb -> k_pre )		489164	1					
ANR	489337	Callee	ceil		489164	0					
ANR	489338	Identifier	ceil		489164	0					
ANR	489339	ArgumentList	( double ) L1 / ( double ) epb -> k_pre		489164	1					
ANR	489340	Argument	( double ) L1 / ( double ) epb -> k_pre		489164	0					
ANR	489341	MultiplicativeExpression	( double ) L1 / ( double ) epb -> k_pre		489164	0		/			
ANR	489342	CastExpression	( double ) L1		489164	0					
ANR	489343	CastTarget	double		489164	0					
ANR	489344	Identifier	L1		489164	1					
ANR	489345	CastExpression	( double ) epb -> k_pre		489164	1					
ANR	489346	CastTarget	double		489164	0					
ANR	489347	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489348	Identifier	epb		489164	0					
ANR	489349	Identifier	k_pre		489164	1					
ANR	489350	IfStatement	if ( post_buf )		489164	19					
ANR	489351	Condition	post_buf	441:8:15791:15798	489164	0	True				
ANR	489352	Identifier	post_buf		489164	0					
ANR	489353	CompoundStatement		52:18:1511:1511	489164	1					
ANR	489354	ExpressionStatement	L4_buf = post_buf	442:8:15811:15828	489164	0	True				
ANR	489355	AssignmentExpression	L4_buf = post_buf		489164	0		=			
ANR	489356	Identifier	L4_buf		489164	0					
ANR	489357	Identifier	post_buf		489164	1					
ANR	489358	ExpressionStatement	L4 = epb -> post_len	444:4:15840:15858	489164	20	True				
ANR	489359	AssignmentExpression	L4 = epb -> post_len		489164	0		=			
ANR	489360	Identifier	L4		489164	0					
ANR	489361	PtrMemberAccess	epb -> post_len		489164	1					
ANR	489362	Identifier	epb		489164	0					
ANR	489363	Identifier	post_len		489164	1					
ANR	489364	ExpressionStatement	L3_buf = L2_buf + L2	447:4:15941:15961	489164	21	True				
ANR	489365	AssignmentExpression	L3_buf = L2_buf + L2		489164	0		=			
ANR	489366	Identifier	L3_buf		489164	0					
ANR	489367	AdditiveExpression	L2_buf + L2		489164	1		+			
ANR	489368	Identifier	L2_buf		489164	0					
ANR	489369	Identifier	L2		489164	1					
ANR	489370	ExpressionStatement	L3 = ( epb -> n_post - epb -> k_post ) * ( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )	448:4:15967:16075	489164	22	True				
ANR	489371	AssignmentExpression	L3 = ( epb -> n_post - epb -> k_post ) * ( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )		489164	0		=			
ANR	489372	Identifier	L3		489164	0					
ANR	489373	MultiplicativeExpression	( epb -> n_post - epb -> k_post ) * ( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )		489164	1		*			
ANR	489374	AdditiveExpression	epb -> n_post - epb -> k_post		489164	0		-			
ANR	489375	PtrMemberAccess	epb -> n_post		489164	0					
ANR	489376	Identifier	epb		489164	0					
ANR	489377	Identifier	n_post		489164	1					
ANR	489378	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489379	Identifier	epb		489164	0					
ANR	489380	Identifier	k_post		489164	1					
ANR	489381	CastExpression	( unsigned short int ) ceil ( ( double ) L4 / ( double ) epb -> k_post )		489164	1					
ANR	489382	CastTarget	unsigned short int		489164	0					
ANR	489383	CallExpression	ceil ( ( double ) L4 / ( double ) epb -> k_post )		489164	1					
ANR	489384	Callee	ceil		489164	0					
ANR	489385	Identifier	ceil		489164	0					
ANR	489386	ArgumentList	( double ) L4 / ( double ) epb -> k_post		489164	1					
ANR	489387	Argument	( double ) L4 / ( double ) epb -> k_post		489164	0					
ANR	489388	MultiplicativeExpression	( double ) L4 / ( double ) epb -> k_post		489164	0		/			
ANR	489389	CastExpression	( double ) L4		489164	0					
ANR	489390	CastTarget	double		489164	0					
ANR	489391	Identifier	L4		489164	1					
ANR	489392	CastExpression	( double ) epb -> k_post		489164	1					
ANR	489393	CastTarget	double		489164	0					
ANR	489394	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489395	Identifier	epb		489164	0					
ANR	489396	Identifier	k_post		489164	1					
ANR	489397	IfStatement	if ( epb -> Lepb < ( 11 + L2 + L3 ) )		489164	23					
ANR	489398	Condition	epb -> Lepb < ( 11 + L2 + L3 )	452:8:16167:16192	489164	0	True				
ANR	489399	RelationalExpression	epb -> Lepb < ( 11 + L2 + L3 )		489164	0		<			
ANR	489400	PtrMemberAccess	epb -> Lepb		489164	0					
ANR	489401	Identifier	epb		489164	0					
ANR	489402	Identifier	Lepb		489164	1					
ANR	489403	AdditiveExpression	11 + L2 + L3		489164	1		+			
ANR	489404	PrimaryExpression	11		489164	0					
ANR	489405	AdditiveExpression	L2 + L3		489164	1		+			
ANR	489406	Identifier	L2		489164	0					
ANR	489407	Identifier	L3		489164	1					
ANR	489408	CompoundStatement		63:36:1905:1905	489164	1					
ANR	489409	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""There is no room in EPB data field for writing redundancy data\\n"" )"	453:8:16205:16331	489164	0	True				
ANR	489410	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""There is no room in EPB data field for writing redundancy data\\n"" )"		489164	0					
ANR	489411	Callee	opj_event_msg		489164	0					
ANR	489412	Identifier	opj_event_msg		489164	0					
ANR	489413	ArgumentList	j2k -> cinfo		489164	1					
ANR	489414	Argument	j2k -> cinfo		489164	0					
ANR	489415	PtrMemberAccess	j2k -> cinfo		489164	0					
ANR	489416	Identifier	j2k		489164	0					
ANR	489417	Identifier	cinfo		489164	1					
ANR	489418	Argument	EVT_ERROR		489164	1					
ANR	489419	Identifier	EVT_ERROR		489164	0					
ANR	489420	Argument	"""There is no room in EPB data field for writing redundancy data\\n"""		489164	2					
ANR	489421	PrimaryExpression	"""There is no room in EPB data field for writing redundancy data\\n"""		489164	0					
ANR	489422	ExpressionStatement	remaining = L1	459:4:16480:16494	489164	24	True				
ANR	489423	AssignmentExpression	remaining = L1		489164	0		=			
ANR	489424	Identifier	remaining		489164	0					
ANR	489425	Identifier	L1		489164	1					
ANR	489426	WhileStatement	while ( remaining )		489164	25					
ANR	489427	Condition	remaining	460:11:16507:16515	489164	0	True				
ANR	489428	Identifier	remaining		489164	0					
ANR	489429	CompoundStatement		71:22:2228:2228	489164	1					
ANR	489430	IfStatement	if ( remaining < epb -> k_pre )		489164	0					
ANR	489431	Condition	remaining < epb -> k_pre	463:12:16586:16607	489164	0	True				
ANR	489432	RelationalExpression	remaining < epb -> k_pre		489164	0		<			
ANR	489433	Identifier	remaining		489164	0					
ANR	489434	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489435	Identifier	epb		489164	0					
ANR	489436	Identifier	k_pre		489164	1					
ANR	489437	CompoundStatement		74:36:2320:2320	489164	1					
ANR	489438	ExpressionStatement	"memset ( codeword , 0 , NN )"	465:12:16679:16702	489164	0	True				
ANR	489439	CallExpression	"memset ( codeword , 0 , NN )"		489164	0					
ANR	489440	Callee	memset		489164	0					
ANR	489441	Identifier	memset		489164	0					
ANR	489442	ArgumentList	codeword		489164	1					
ANR	489443	Argument	codeword		489164	0					
ANR	489444	Identifier	codeword		489164	0					
ANR	489445	Argument	0		489164	1					
ANR	489446	PrimaryExpression	0		489164	0					
ANR	489447	Argument	NN		489164	2					
ANR	489448	Identifier	NN		489164	0					
ANR	489449	ExpressionStatement	"memcpy ( codeword , L1_buf , remaining )"	466:12:16716:16751	489164	1	True				
ANR	489450	CallExpression	"memcpy ( codeword , L1_buf , remaining )"		489164	0					
ANR	489451	Callee	memcpy		489164	0					
ANR	489452	Identifier	memcpy		489164	0					
ANR	489453	ArgumentList	codeword		489164	1					
ANR	489454	Argument	codeword		489164	0					
ANR	489455	Identifier	codeword		489164	0					
ANR	489456	Argument	L1_buf		489164	1					
ANR	489457	Identifier	L1_buf		489164	0					
ANR	489458	Argument	remaining		489164	2					
ANR	489459	Identifier	remaining		489164	0					
ANR	489460	ExpressionStatement	L1_buf += remaining	467:12:16765:16784	489164	2	True				
ANR	489461	AssignmentExpression	L1_buf += remaining		489164	0		+=			
ANR	489462	Identifier	L1_buf		489164	0					
ANR	489463	Identifier	remaining		489164	1					
ANR	489464	ExpressionStatement	remaining = 0	468:12:16798:16811	489164	3	True				
ANR	489465	AssignmentExpression	remaining = 0		489164	0		=			
ANR	489466	Identifier	remaining		489164	0					
ANR	489467	PrimaryExpression	0		489164	1					
ANR	489468	ElseStatement	else		489164	0					
ANR	489469	CompoundStatement		81:15:2539:2539	489164	0					
ANR	489470	ExpressionStatement	"memcpy ( codeword , L1_buf , epb -> k_pre )"	471:12:16843:16879	489164	0	True				
ANR	489471	CallExpression	"memcpy ( codeword , L1_buf , epb -> k_pre )"		489164	0					
ANR	489472	Callee	memcpy		489164	0					
ANR	489473	Identifier	memcpy		489164	0					
ANR	489474	ArgumentList	codeword		489164	1					
ANR	489475	Argument	codeword		489164	0					
ANR	489476	Identifier	codeword		489164	0					
ANR	489477	Argument	L1_buf		489164	1					
ANR	489478	Identifier	L1_buf		489164	0					
ANR	489479	Argument	epb -> k_pre		489164	2					
ANR	489480	PtrMemberAccess	epb -> k_pre		489164	0					
ANR	489481	Identifier	epb		489164	0					
ANR	489482	Identifier	k_pre		489164	1					
ANR	489483	ExpressionStatement	L1_buf += epb -> k_pre	472:12:16893:16913	489164	1	True				
ANR	489484	AssignmentExpression	L1_buf += epb -> k_pre		489164	0		+=			
ANR	489485	Identifier	L1_buf		489164	0					
ANR	489486	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489487	Identifier	epb		489164	0					
ANR	489488	Identifier	k_pre		489164	1					
ANR	489489	ExpressionStatement	remaining -= epb -> k_pre	473:12:16927:16950	489164	2	True				
ANR	489490	AssignmentExpression	remaining -= epb -> k_pre		489164	0		-=			
ANR	489491	Identifier	remaining		489164	0					
ANR	489492	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489493	Identifier	epb		489164	0					
ANR	489494	Identifier	k_pre		489164	1					
ANR	489495	IfStatement	"if ( encode_rs ( codeword , parityword ) )"		489164	1					
ANR	489496	Condition	"encode_rs ( codeword , parityword )"	478:12:17032:17062	489164	0	True				
ANR	489497	CallExpression	"encode_rs ( codeword , parityword )"		489164	0					
ANR	489498	Callee	encode_rs		489164	0					
ANR	489499	Identifier	encode_rs		489164	0					
ANR	489500	ArgumentList	codeword		489164	1					
ANR	489501	Argument	codeword		489164	0					
ANR	489502	Identifier	codeword		489164	0					
ANR	489503	Argument	parityword		489164	1					
ANR	489504	Identifier	parityword		489164	0					
ANR	489505	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Possible encoding error in codeword @ position #%d\\n"" , ( L1_buf - buf ) / epb -> k_pre )"	479:12:17077:17252	489164	1	True				
ANR	489506	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Possible encoding error in codeword @ position #%d\\n"" , ( L1_buf - buf ) / epb -> k_pre )"		489164	0					
ANR	489507	Callee	opj_event_msg		489164	0					
ANR	489508	Identifier	opj_event_msg		489164	0					
ANR	489509	ArgumentList	j2k -> cinfo		489164	1					
ANR	489510	Argument	j2k -> cinfo		489164	0					
ANR	489511	PtrMemberAccess	j2k -> cinfo		489164	0					
ANR	489512	Identifier	j2k		489164	0					
ANR	489513	Identifier	cinfo		489164	1					
ANR	489514	Argument	EVT_WARNING		489164	1					
ANR	489515	Identifier	EVT_WARNING		489164	0					
ANR	489516	Argument	"""Possible encoding error in codeword @ position #%d\\n"""		489164	2					
ANR	489517	PrimaryExpression	"""Possible encoding error in codeword @ position #%d\\n"""		489164	0					
ANR	489518	Argument	( L1_buf - buf ) / epb -> k_pre		489164	3					
ANR	489519	MultiplicativeExpression	( L1_buf - buf ) / epb -> k_pre		489164	0		/			
ANR	489520	AdditiveExpression	L1_buf - buf		489164	0		-			
ANR	489521	Identifier	L1_buf		489164	0					
ANR	489522	Identifier	buf		489164	1					
ANR	489523	PtrMemberAccess	epb -> k_pre		489164	1					
ANR	489524	Identifier	epb		489164	0					
ANR	489525	Identifier	k_pre		489164	1					
ANR	489526	ExpressionStatement	"memcpy ( L2_buf , parityword , P )"	484:8:17321:17350	489164	2	True				
ANR	489527	CallExpression	"memcpy ( L2_buf , parityword , P )"		489164	0					
ANR	489528	Callee	memcpy		489164	0					
ANR	489529	Identifier	memcpy		489164	0					
ANR	489530	ArgumentList	L2_buf		489164	1					
ANR	489531	Argument	L2_buf		489164	0					
ANR	489532	Identifier	L2_buf		489164	0					
ANR	489533	Argument	parityword		489164	1					
ANR	489534	Identifier	parityword		489164	0					
ANR	489535	Argument	P		489164	2					
ANR	489536	Identifier	P		489164	0					
ANR	489537	ExpressionStatement	L2_buf += P	487:8:17397:17408	489164	3	True				
ANR	489538	AssignmentExpression	L2_buf += P		489164	0		+=			
ANR	489539	Identifier	L2_buf		489164	0					
ANR	489540	Identifier	P		489164	1					
ANR	489541	IfStatement	if ( epb -> hprot < 0 )		489164	26					
ANR	489542	Condition	epb -> hprot < 0	496:8:17749:17762	489164	0	True				
ANR	489543	RelationalExpression	epb -> hprot < 0		489164	0		<			
ANR	489544	PtrMemberAccess	epb -> hprot		489164	0					
ANR	489545	Identifier	epb		489164	0					
ANR	489546	Identifier	hprot		489164	1					
ANR	489547	PrimaryExpression	0		489164	1					
ANR	489548	CompoundStatement		107:24:3475:3475	489164	1					
ANR	489549	ElseStatement	else		489164	0					
ANR	489550	IfStatement	if ( epb -> hprot == 0 )		489164	0					
ANR	489551	Condition	epb -> hprot == 0	500:15:17821:17835	489164	0	True				
ANR	489552	EqualityExpression	epb -> hprot == 0		489164	0		==			
ANR	489553	PtrMemberAccess	epb -> hprot		489164	0					
ANR	489554	Identifier	epb		489164	0					
ANR	489555	Identifier	hprot		489164	1					
ANR	489556	PrimaryExpression	0		489164	1					
ANR	489557	CompoundStatement		111:32:3548:3548	489164	1					
ANR	489558	ExpressionStatement	L4_buf += epb -> post_len	504:8:17919:17942	489164	0	True				
ANR	489559	AssignmentExpression	L4_buf += epb -> post_len		489164	0		+=			
ANR	489560	Identifier	L4_buf		489164	0					
ANR	489561	PtrMemberAccess	epb -> post_len		489164	1					
ANR	489562	Identifier	epb		489164	0					
ANR	489563	Identifier	post_len		489164	1					
ANR	489564	ElseStatement	else		489164	0					
ANR	489565	IfStatement	if ( epb -> hprot == 16 )		489164	0					
ANR	489566	Condition	epb -> hprot == 16	506:15:17960:17975	489164	0	True				
ANR	489567	EqualityExpression	epb -> hprot == 16		489164	0		==			
ANR	489568	PtrMemberAccess	epb -> hprot		489164	0					
ANR	489569	Identifier	epb		489164	0					
ANR	489570	Identifier	hprot		489164	1					
ANR	489571	PrimaryExpression	16		489164	1					
ANR	489572	CompoundStatement		120:8:3720:3753	489164	1					
ANR	489573	IdentifierDeclStatement	unsigned short int mycrc = 0x0000 ;	509:8:18010:18043	489164	0	True				
ANR	489574	IdentifierDecl	mycrc = 0x0000		489164	0					
ANR	489575	IdentifierDeclType	unsigned short int		489164	0					
ANR	489576	Identifier	mycrc		489164	1					
ANR	489577	AssignmentExpression	mycrc = 0x0000		489164	2		=			
ANR	489578	Identifier	mycrc		489164	0					
ANR	489579	PrimaryExpression	0x0000		489164	1					
ANR	489580	ExpressionStatement	remaining = L4	512:8:18109:18123	489164	1	True				
ANR	489581	AssignmentExpression	remaining = L4		489164	0		=			
ANR	489582	Identifier	remaining		489164	0					
ANR	489583	Identifier	L4		489164	1					
ANR	489584	WhileStatement	while ( remaining -- )		489164	2					
ANR	489585	Condition	remaining --	513:15:18140:18150	489164	0	True				
ANR	489586	PostIncDecOperationExpression	remaining --		489164	0					
ANR	489587	Identifier	remaining		489164	0					
ANR	489588	IncDec	--		489164	1					
ANR	489589	CompoundStatement		124:28:3863:3863	489164	1					
ANR	489590	ExpressionStatement	"jpwl_updateCRC16 ( & mycrc , * ( L4_buf ++ ) )"	514:12:18167:18204	489164	0	True				
ANR	489591	CallExpression	"jpwl_updateCRC16 ( & mycrc , * ( L4_buf ++ ) )"		489164	0					
ANR	489592	Callee	jpwl_updateCRC16		489164	0					
ANR	489593	Identifier	jpwl_updateCRC16		489164	0					
ANR	489594	ArgumentList	& mycrc		489164	1					
ANR	489595	Argument	& mycrc		489164	0					
ANR	489596	UnaryOperationExpression	& mycrc		489164	0					
ANR	489597	UnaryOperator	&		489164	0					
ANR	489598	Identifier	mycrc		489164	1					
ANR	489599	Argument	* ( L4_buf ++ )		489164	1					
ANR	489600	UnaryOperationExpression	* ( L4_buf ++ )		489164	0					
ANR	489601	UnaryOperator	*		489164	0					
ANR	489602	PostIncDecOperationExpression	L4_buf ++		489164	1					
ANR	489603	Identifier	L4_buf		489164	0					
ANR	489604	IncDec	++		489164	1					
ANR	489605	ExpressionStatement	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 8 )	518:8:18259:18300	489164	3	True				
ANR	489606	AssignmentExpression	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 8 )		489164	0		=			
ANR	489607	UnaryOperationExpression	* ( L3_buf ++ )		489164	0					
ANR	489608	UnaryOperator	*		489164	0					
ANR	489609	PostIncDecOperationExpression	L3_buf ++		489164	1					
ANR	489610	Identifier	L3_buf		489164	0					
ANR	489611	IncDec	++		489164	1					
ANR	489612	CastExpression	( unsigned char ) ( mycrc >> 8 )		489164	1					
ANR	489613	CastTarget	unsigned char		489164	0					
ANR	489614	ShiftExpression	mycrc >> 8		489164	1		>>			
ANR	489615	Identifier	mycrc		489164	0					
ANR	489616	PrimaryExpression	8		489164	1					
ANR	489617	ExpressionStatement	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 0 )	519:8:18310:18351	489164	4	True				
ANR	489618	AssignmentExpression	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 0 )		489164	0		=			
ANR	489619	UnaryOperationExpression	* ( L3_buf ++ )		489164	0					
ANR	489620	UnaryOperator	*		489164	0					
ANR	489621	PostIncDecOperationExpression	L3_buf ++		489164	1					
ANR	489622	Identifier	L3_buf		489164	0					
ANR	489623	IncDec	++		489164	1					
ANR	489624	CastExpression	( unsigned char ) ( mycrc >> 0 )		489164	1					
ANR	489625	CastTarget	unsigned char		489164	0					
ANR	489626	ShiftExpression	mycrc >> 0		489164	1		>>			
ANR	489627	Identifier	mycrc		489164	0					
ANR	489628	PrimaryExpression	0		489164	1					
ANR	489629	ElseStatement	else		489164	0					
ANR	489630	IfStatement	if ( epb -> hprot == 32 )		489164	0					
ANR	489631	Condition	epb -> hprot == 32	521:15:18369:18384	489164	0	True				
ANR	489632	EqualityExpression	epb -> hprot == 32		489164	0		==			
ANR	489633	PtrMemberAccess	epb -> hprot		489164	0					
ANR	489634	Identifier	epb		489164	0					
ANR	489635	Identifier	hprot		489164	1					
ANR	489636	PrimaryExpression	32		489164	1					
ANR	489637	CompoundStatement		135:8:4129:4165	489164	1					
ANR	489638	IdentifierDeclStatement	unsigned long int mycrc = 0x00000000 ;	524:8:18419:18455	489164	0	True				
ANR	489639	IdentifierDecl	mycrc = 0x00000000		489164	0					
ANR	489640	IdentifierDeclType	unsigned long int		489164	0					
ANR	489641	Identifier	mycrc		489164	1					
ANR	489642	AssignmentExpression	mycrc = 0x00000000		489164	2		=			
ANR	489643	Identifier	mycrc		489164	0					
ANR	489644	PrimaryExpression	0x00000000		489164	1					
ANR	489645	ExpressionStatement	remaining = L4	527:8:18521:18535	489164	1	True				
ANR	489646	AssignmentExpression	remaining = L4		489164	0		=			
ANR	489647	Identifier	remaining		489164	0					
ANR	489648	Identifier	L4		489164	1					
ANR	489649	WhileStatement	while ( remaining -- )		489164	2					
ANR	489650	Condition	remaining --	528:15:18552:18562	489164	0	True				
ANR	489651	PostIncDecOperationExpression	remaining --		489164	0					
ANR	489652	Identifier	remaining		489164	0					
ANR	489653	IncDec	--		489164	1					
ANR	489654	CompoundStatement		139:28:4275:4275	489164	1					
ANR	489655	ExpressionStatement	"jpwl_updateCRC32 ( & mycrc , * ( L4_buf ++ ) )"	529:12:18579:18616	489164	0	True				
ANR	489656	CallExpression	"jpwl_updateCRC32 ( & mycrc , * ( L4_buf ++ ) )"		489164	0					
ANR	489657	Callee	jpwl_updateCRC32		489164	0					
ANR	489658	Identifier	jpwl_updateCRC32		489164	0					
ANR	489659	ArgumentList	& mycrc		489164	1					
ANR	489660	Argument	& mycrc		489164	0					
ANR	489661	UnaryOperationExpression	& mycrc		489164	0					
ANR	489662	UnaryOperator	&		489164	0					
ANR	489663	Identifier	mycrc		489164	1					
ANR	489664	Argument	* ( L4_buf ++ )		489164	1					
ANR	489665	UnaryOperationExpression	* ( L4_buf ++ )		489164	0					
ANR	489666	UnaryOperator	*		489164	0					
ANR	489667	PostIncDecOperationExpression	L4_buf ++		489164	1					
ANR	489668	Identifier	L4_buf		489164	0					
ANR	489669	IncDec	++		489164	1					
ANR	489670	ExpressionStatement	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 24 )	533:8:18671:18713	489164	3	True				
ANR	489671	AssignmentExpression	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 24 )		489164	0		=			
ANR	489672	UnaryOperationExpression	* ( L3_buf ++ )		489164	0					
ANR	489673	UnaryOperator	*		489164	0					
ANR	489674	PostIncDecOperationExpression	L3_buf ++		489164	1					
ANR	489675	Identifier	L3_buf		489164	0					
ANR	489676	IncDec	++		489164	1					
ANR	489677	CastExpression	( unsigned char ) ( mycrc >> 24 )		489164	1					
ANR	489678	CastTarget	unsigned char		489164	0					
ANR	489679	ShiftExpression	mycrc >> 24		489164	1		>>			
ANR	489680	Identifier	mycrc		489164	0					
ANR	489681	PrimaryExpression	24		489164	1					
ANR	489682	ExpressionStatement	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 16 )	534:8:18723:18765	489164	4	True				
ANR	489683	AssignmentExpression	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 16 )		489164	0		=			
ANR	489684	UnaryOperationExpression	* ( L3_buf ++ )		489164	0					
ANR	489685	UnaryOperator	*		489164	0					
ANR	489686	PostIncDecOperationExpression	L3_buf ++		489164	1					
ANR	489687	Identifier	L3_buf		489164	0					
ANR	489688	IncDec	++		489164	1					
ANR	489689	CastExpression	( unsigned char ) ( mycrc >> 16 )		489164	1					
ANR	489690	CastTarget	unsigned char		489164	0					
ANR	489691	ShiftExpression	mycrc >> 16		489164	1		>>			
ANR	489692	Identifier	mycrc		489164	0					
ANR	489693	PrimaryExpression	16		489164	1					
ANR	489694	ExpressionStatement	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 8 )	535:8:18775:18816	489164	5	True				
ANR	489695	AssignmentExpression	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 8 )		489164	0		=			
ANR	489696	UnaryOperationExpression	* ( L3_buf ++ )		489164	0					
ANR	489697	UnaryOperator	*		489164	0					
ANR	489698	PostIncDecOperationExpression	L3_buf ++		489164	1					
ANR	489699	Identifier	L3_buf		489164	0					
ANR	489700	IncDec	++		489164	1					
ANR	489701	CastExpression	( unsigned char ) ( mycrc >> 8 )		489164	1					
ANR	489702	CastTarget	unsigned char		489164	0					
ANR	489703	ShiftExpression	mycrc >> 8		489164	1		>>			
ANR	489704	Identifier	mycrc		489164	0					
ANR	489705	PrimaryExpression	8		489164	1					
ANR	489706	ExpressionStatement	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 0 )	536:8:18826:18867	489164	6	True				
ANR	489707	AssignmentExpression	* ( L3_buf ++ ) = ( unsigned char ) ( mycrc >> 0 )		489164	0		=			
ANR	489708	UnaryOperationExpression	* ( L3_buf ++ )		489164	0					
ANR	489709	UnaryOperator	*		489164	0					
ANR	489710	PostIncDecOperationExpression	L3_buf ++		489164	1					
ANR	489711	Identifier	L3_buf		489164	0					
ANR	489712	IncDec	++		489164	1					
ANR	489713	CastExpression	( unsigned char ) ( mycrc >> 0 )		489164	1					
ANR	489714	CastTarget	unsigned char		489164	0					
ANR	489715	ShiftExpression	mycrc >> 0		489164	1		>>			
ANR	489716	Identifier	mycrc		489164	0					
ANR	489717	PrimaryExpression	0		489164	1					
ANR	489718	ElseStatement	else		489164	0					
ANR	489719	CompoundStatement		149:11:4591:4591	489164	0					
ANR	489720	ExpressionStatement	P = epb -> n_post - epb -> k_post	543:8:18949:18978	489164	0	True				
ANR	489721	AssignmentExpression	P = epb -> n_post - epb -> k_post		489164	0		=			
ANR	489722	Identifier	P		489164	0					
ANR	489723	AdditiveExpression	epb -> n_post - epb -> k_post		489164	1		-			
ANR	489724	PtrMemberAccess	epb -> n_post		489164	0					
ANR	489725	Identifier	epb		489164	0					
ANR	489726	Identifier	n_post		489164	1					
ANR	489727	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489728	Identifier	epb		489164	0					
ANR	489729	Identifier	k_post		489164	1					
ANR	489730	ExpressionStatement	NN_P = NN - P	544:8:18988:19001	489164	1	True				
ANR	489731	AssignmentExpression	NN_P = NN - P		489164	0		=			
ANR	489732	Identifier	NN_P		489164	0					
ANR	489733	AdditiveExpression	NN - P		489164	1		-			
ANR	489734	Identifier	NN		489164	0					
ANR	489735	Identifier	P		489164	1					
ANR	489736	ExpressionStatement	"memset ( codeword , 0 , NN )"	545:8:19011:19034	489164	2	True				
ANR	489737	CallExpression	"memset ( codeword , 0 , NN )"		489164	0					
ANR	489738	Callee	memset		489164	0					
ANR	489739	Identifier	memset		489164	0					
ANR	489740	ArgumentList	codeword		489164	1					
ANR	489741	Argument	codeword		489164	0					
ANR	489742	Identifier	codeword		489164	0					
ANR	489743	Argument	0		489164	1					
ANR	489744	PrimaryExpression	0		489164	0					
ANR	489745	Argument	NN		489164	2					
ANR	489746	Identifier	NN		489164	0					
ANR	489747	ExpressionStatement	parityword = codeword + NN_P	546:8:19044:19072	489164	3	True				
ANR	489748	AssignmentExpression	parityword = codeword + NN_P		489164	0		=			
ANR	489749	Identifier	parityword		489164	0					
ANR	489750	AdditiveExpression	codeword + NN_P		489164	1		+			
ANR	489751	Identifier	codeword		489164	0					
ANR	489752	Identifier	NN_P		489164	1					
ANR	489753	ExpressionStatement	init_rs ( NN_P )	547:8:19082:19095	489164	4	True				
ANR	489754	CallExpression	init_rs ( NN_P )		489164	0					
ANR	489755	Callee	init_rs		489164	0					
ANR	489756	Identifier	init_rs		489164	0					
ANR	489757	ArgumentList	NN_P		489164	1					
ANR	489758	Argument	NN_P		489164	0					
ANR	489759	Identifier	NN_P		489164	0					
ANR	489760	ExpressionStatement	remaining = L4	550:8:19166:19180	489164	5	True				
ANR	489761	AssignmentExpression	remaining = L4		489164	0		=			
ANR	489762	Identifier	remaining		489164	0					
ANR	489763	Identifier	L4		489164	1					
ANR	489764	WhileStatement	while ( remaining )		489164	6					
ANR	489765	Condition	remaining	551:15:19197:19205	489164	0	True				
ANR	489766	Identifier	remaining		489164	0					
ANR	489767	CompoundStatement		162:26:4918:4918	489164	1					
ANR	489768	IfStatement	if ( remaining < epb -> k_post )		489164	0					
ANR	489769	Condition	remaining < epb -> k_post	554:16:19284:19306	489164	0	True				
ANR	489770	RelationalExpression	remaining < epb -> k_post		489164	0		<			
ANR	489771	Identifier	remaining		489164	0					
ANR	489772	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489773	Identifier	epb		489164	0					
ANR	489774	Identifier	k_post		489164	1					
ANR	489775	CompoundStatement		165:41:5019:5019	489164	1					
ANR	489776	ExpressionStatement	"memset ( codeword , 0 , NN )"	556:16:19386:19409	489164	0	True				
ANR	489777	CallExpression	"memset ( codeword , 0 , NN )"		489164	0					
ANR	489778	Callee	memset		489164	0					
ANR	489779	Identifier	memset		489164	0					
ANR	489780	ArgumentList	codeword		489164	1					
ANR	489781	Argument	codeword		489164	0					
ANR	489782	Identifier	codeword		489164	0					
ANR	489783	Argument	0		489164	1					
ANR	489784	PrimaryExpression	0		489164	0					
ANR	489785	Argument	NN		489164	2					
ANR	489786	Identifier	NN		489164	0					
ANR	489787	ExpressionStatement	"memcpy ( codeword , L4_buf , remaining )"	557:16:19427:19462	489164	1	True				
ANR	489788	CallExpression	"memcpy ( codeword , L4_buf , remaining )"		489164	0					
ANR	489789	Callee	memcpy		489164	0					
ANR	489790	Identifier	memcpy		489164	0					
ANR	489791	ArgumentList	codeword		489164	1					
ANR	489792	Argument	codeword		489164	0					
ANR	489793	Identifier	codeword		489164	0					
ANR	489794	Argument	L4_buf		489164	1					
ANR	489795	Identifier	L4_buf		489164	0					
ANR	489796	Argument	remaining		489164	2					
ANR	489797	Identifier	remaining		489164	0					
ANR	489798	ExpressionStatement	L4_buf += remaining	558:16:19480:19499	489164	2	True				
ANR	489799	AssignmentExpression	L4_buf += remaining		489164	0		+=			
ANR	489800	Identifier	L4_buf		489164	0					
ANR	489801	Identifier	remaining		489164	1					
ANR	489802	ExpressionStatement	remaining = 0	559:16:19517:19530	489164	3	True				
ANR	489803	AssignmentExpression	remaining = 0		489164	0		=			
ANR	489804	Identifier	remaining		489164	0					
ANR	489805	PrimaryExpression	0		489164	1					
ANR	489806	ElseStatement	else		489164	0					
ANR	489807	CompoundStatement		172:19:5262:5262	489164	0					
ANR	489808	ExpressionStatement	"memcpy ( codeword , L4_buf , epb -> k_post )"	562:16:19570:19607	489164	0	True				
ANR	489809	CallExpression	"memcpy ( codeword , L4_buf , epb -> k_post )"		489164	0					
ANR	489810	Callee	memcpy		489164	0					
ANR	489811	Identifier	memcpy		489164	0					
ANR	489812	ArgumentList	codeword		489164	1					
ANR	489813	Argument	codeword		489164	0					
ANR	489814	Identifier	codeword		489164	0					
ANR	489815	Argument	L4_buf		489164	1					
ANR	489816	Identifier	L4_buf		489164	0					
ANR	489817	Argument	epb -> k_post		489164	2					
ANR	489818	PtrMemberAccess	epb -> k_post		489164	0					
ANR	489819	Identifier	epb		489164	0					
ANR	489820	Identifier	k_post		489164	1					
ANR	489821	ExpressionStatement	L4_buf += epb -> k_post	563:16:19625:19646	489164	1	True				
ANR	489822	AssignmentExpression	L4_buf += epb -> k_post		489164	0		+=			
ANR	489823	Identifier	L4_buf		489164	0					
ANR	489824	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489825	Identifier	epb		489164	0					
ANR	489826	Identifier	k_post		489164	1					
ANR	489827	ExpressionStatement	remaining -= epb -> k_post	564:16:19664:19688	489164	2	True				
ANR	489828	AssignmentExpression	remaining -= epb -> k_post		489164	0		-=			
ANR	489829	Identifier	remaining		489164	0					
ANR	489830	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489831	Identifier	epb		489164	0					
ANR	489832	Identifier	k_post		489164	1					
ANR	489833	IfStatement	"if ( encode_rs ( codeword , parityword ) )"		489164	1					
ANR	489834	Condition	"encode_rs ( codeword , parityword )"	569:16:19782:19812	489164	0	True				
ANR	489835	CallExpression	"encode_rs ( codeword , parityword )"		489164	0					
ANR	489836	Callee	encode_rs		489164	0					
ANR	489837	Identifier	encode_rs		489164	0					
ANR	489838	ArgumentList	codeword		489164	1					
ANR	489839	Argument	codeword		489164	0					
ANR	489840	Identifier	codeword		489164	0					
ANR	489841	Argument	parityword		489164	1					
ANR	489842	Identifier	parityword		489164	0					
ANR	489843	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Possible encoding error in codeword @ position #%d\\n"" , ( L4_buf - buf ) / epb -> k_post )"	570:16:19831:20015	489164	1	True				
ANR	489844	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Possible encoding error in codeword @ position #%d\\n"" , ( L4_buf - buf ) / epb -> k_post )"		489164	0					
ANR	489845	Callee	opj_event_msg		489164	0					
ANR	489846	Identifier	opj_event_msg		489164	0					
ANR	489847	ArgumentList	j2k -> cinfo		489164	1					
ANR	489848	Argument	j2k -> cinfo		489164	0					
ANR	489849	PtrMemberAccess	j2k -> cinfo		489164	0					
ANR	489850	Identifier	j2k		489164	0					
ANR	489851	Identifier	cinfo		489164	1					
ANR	489852	Argument	EVT_WARNING		489164	1					
ANR	489853	Identifier	EVT_WARNING		489164	0					
ANR	489854	Argument	"""Possible encoding error in codeword @ position #%d\\n"""		489164	2					
ANR	489855	PrimaryExpression	"""Possible encoding error in codeword @ position #%d\\n"""		489164	0					
ANR	489856	Argument	( L4_buf - buf ) / epb -> k_post		489164	3					
ANR	489857	MultiplicativeExpression	( L4_buf - buf ) / epb -> k_post		489164	0		/			
ANR	489858	AdditiveExpression	L4_buf - buf		489164	0		-			
ANR	489859	Identifier	L4_buf		489164	0					
ANR	489860	Identifier	buf		489164	1					
ANR	489861	PtrMemberAccess	epb -> k_post		489164	1					
ANR	489862	Identifier	epb		489164	0					
ANR	489863	Identifier	k_post		489164	1					
ANR	489864	ExpressionStatement	"memcpy ( L3_buf , parityword , P )"	575:12:20092:20121	489164	2	True				
ANR	489865	CallExpression	"memcpy ( L3_buf , parityword , P )"		489164	0					
ANR	489866	Callee	memcpy		489164	0					
ANR	489867	Identifier	memcpy		489164	0					
ANR	489868	ArgumentList	L3_buf		489164	1					
ANR	489869	Argument	L3_buf		489164	0					
ANR	489870	Identifier	L3_buf		489164	0					
ANR	489871	Argument	parityword		489164	1					
ANR	489872	Identifier	parityword		489164	0					
ANR	489873	Argument	P		489164	2					
ANR	489874	Identifier	P		489164	0					
ANR	489875	ExpressionStatement	L3_buf += P	578:12:20176:20187	489164	3	True				
ANR	489876	AssignmentExpression	L3_buf += P		489164	0		+=			
ANR	489877	Identifier	L3_buf		489164	0					
ANR	489878	Identifier	P		489164	1					
ANR	489879	ReturnStatement	return OPJ_TRUE ;	583:4:20211:20226	489164	27	True				
ANR	489880	Identifier	OPJ_TRUE		489164	0					
ANR	489881	ReturnType	opj_bool		489164	1					
ANR	489882	Identifier	jpwl_epb_fill		489164	2					
ANR	489883	ParameterList	"opj_j2k_t * j2k , jpwl_epb_ms_t * epb , unsigned char * buf , unsigned char * post_buf"		489164	3					
ANR	489884	Parameter	opj_j2k_t * j2k	388:23:14185:14198	489164	0	True				
ANR	489885	ParameterType	opj_j2k_t *		489164	0					
ANR	489886	Identifier	j2k		489164	1					
ANR	489887	Parameter	jpwl_epb_ms_t * epb	388:39:14201:14218	489164	1	True				
ANR	489888	ParameterType	jpwl_epb_ms_t *		489164	0					
ANR	489889	Identifier	epb		489164	1					
ANR	489890	Parameter	unsigned char * buf	388:59:14221:14238	489164	2	True				
ANR	489891	ParameterType	unsigned char *		489164	0					
ANR	489892	Identifier	buf		489164	1					
ANR	489893	Parameter	unsigned char * post_buf	389:23:14264:14286	489164	3	True				
ANR	489894	ParameterType	unsigned char *		489164	0					
ANR	489895	Identifier	post_buf		489164	1					
ANR	489896	CFGEntryNode	ENTRY		489164		True				
ANR	489897	CFGExitNode	EXIT		489164		True				
ANR	489898	Symbol	NN		489164						
ANR	489899	Symbol	* ( L3_buf ++ )		489164						
ANR	489900	Symbol	L2_buf		489164						
ANR	489901	Symbol	P		489164						
ANR	489902	Symbol	mycrc		489164						
ANR	489903	Symbol	* ( L4_buf ++ )		489164						
ANR	489904	Symbol	OPJ_FALSE		489164						
ANR	489905	Symbol	epb		489164						
ANR	489906	Symbol	L1_buf		489164						
ANR	489907	Symbol	epb -> post_len		489164						
ANR	489908	Symbol	epb -> k_pre		489164						
ANR	489909	Symbol	OPJ_TRUE		489164						
ANR	489910	Symbol	EVT_ERROR		489164						
ANR	489911	Symbol	parityword		489164						
ANR	489912	Symbol	j2k		489164						
ANR	489913	Symbol	codeword		489164						
ANR	489914	Symbol	L1		489164						
ANR	489915	Symbol	L4_buf		489164						
ANR	489916	Symbol	EVT_WARNING		489164						
ANR	489917	Symbol	L2		489164						
ANR	489918	Symbol	L3		489164						
ANR	489919	Symbol	L4		489164						
ANR	489920	Symbol	ceil		489164						
ANR	489921	Symbol	remaining		489164						
ANR	489922	Symbol	encode_rs		489164						
ANR	489923	Symbol	& mycrc		489164						
ANR	489924	Symbol	j2k -> cinfo		489164						
ANR	489925	Symbol	L3_buf		489164						
ANR	489926	Symbol	epb -> n_pre		489164						
ANR	489927	Symbol	epb -> Lepb		489164						
ANR	489928	Symbol	buf		489164						
ANR	489929	Symbol	* j2k		489164						
ANR	489930	Symbol	NN_P		489164						
ANR	489931	Symbol	post_buf		489164						
ANR	489932	Symbol	epb -> n_post		489164						
ANR	489933	Symbol	epb -> k_post		489164						
ANR	489934	Symbol	epb -> pre_len		489164						
ANR	489935	Symbol	epb -> hprot		489164						
ANR	489936	Symbol	* epb		489164						
ANR	489937	Function	jpwl_correct	587:0:20232:26411							
ANR	489938	FunctionDef	jpwl_correct (opj_j2k_t * j2k)		489937	0					
ANR	489939	CompoundStatement		588:0:20270:26411	489937	0					
ANR	489940	IdentifierDeclStatement	opj_cio_t * cio = j2k -> cio ;	590:4:20277:20302	489937	0	True				
ANR	489941	IdentifierDecl	* cio = j2k -> cio		489937	0					
ANR	489942	IdentifierDeclType	opj_cio_t *		489937	0					
ANR	489943	Identifier	cio		489937	1					
ANR	489944	AssignmentExpression	* cio = j2k -> cio		489937	2		=			
ANR	489945	Identifier	cio		489937	0					
ANR	489946	PtrMemberAccess	j2k -> cio		489937	1					
ANR	489947	Identifier	j2k		489937	0					
ANR	489948	Identifier	cio		489937	1					
ANR	489949	IdentifierDeclStatement	opj_bool status ;	591:4:20308:20323	489937	1	True				
ANR	489950	IdentifierDecl	status		489937	0					
ANR	489951	IdentifierDeclType	opj_bool		489937	0					
ANR	489952	Identifier	status		489937	1					
ANR	489953	Statement	static	592:4:20329:20334	489937	2	True				
ANR	489954	IdentifierDeclStatement	opj_bool mh_done = OPJ_FALSE ;	592:11:20336:20364	489937	3	True				
ANR	489955	IdentifierDecl	mh_done = OPJ_FALSE		489937	0					
ANR	489956	IdentifierDeclType	opj_bool		489937	0					
ANR	489957	Identifier	mh_done		489937	1					
ANR	489958	AssignmentExpression	mh_done = OPJ_FALSE		489937	2		=			
ANR	489959	Identifier	OPJ_FALSE		489937	0					
ANR	489960	Identifier	OPJ_FALSE		489937	1					
ANR	489961	IdentifierDeclStatement	"int mark_pos , id , len , skips , sot_pos ;"	593:4:20370:20407	489937	4	True				
ANR	489962	IdentifierDecl	mark_pos		489937	0					
ANR	489963	IdentifierDeclType	int		489937	0					
ANR	489964	Identifier	mark_pos		489937	1					
ANR	489965	IdentifierDecl	id		489937	1					
ANR	489966	IdentifierDeclType	int		489937	0					
ANR	489967	Identifier	id		489937	1					
ANR	489968	IdentifierDecl	len		489937	2					
ANR	489969	IdentifierDeclType	int		489937	0					
ANR	489970	Identifier	len		489937	1					
ANR	489971	IdentifierDecl	skips		489937	3					
ANR	489972	IdentifierDeclType	int		489937	0					
ANR	489973	Identifier	skips		489937	1					
ANR	489974	IdentifierDecl	sot_pos		489937	4					
ANR	489975	IdentifierDeclType	int		489937	0					
ANR	489976	Identifier	sot_pos		489937	1					
ANR	489977	IdentifierDeclStatement	unsigned long int Psot = 0 ;	594:4:20413:20439	489937	5	True				
ANR	489978	IdentifierDecl	Psot = 0		489937	0					
ANR	489979	IdentifierDeclType	unsigned long int		489937	0					
ANR	489980	Identifier	Psot		489937	1					
ANR	489981	AssignmentExpression	Psot = 0		489937	2		=			
ANR	489982	Identifier	Psot		489937	0					
ANR	489983	PrimaryExpression	0		489937	1					
ANR	489984	ExpressionStatement	mark_pos = cio_tell ( cio ) - 2	597:4:20483:20511	489937	6	True				
ANR	489985	AssignmentExpression	mark_pos = cio_tell ( cio ) - 2		489937	0		=			
ANR	489986	Identifier	mark_pos		489937	0					
ANR	489987	AdditiveExpression	cio_tell ( cio ) - 2		489937	1		-			
ANR	489988	CallExpression	cio_tell ( cio )		489937	0					
ANR	489989	Callee	cio_tell		489937	0					
ANR	489990	Identifier	cio_tell		489937	0					
ANR	489991	ArgumentList	cio		489937	1					
ANR	489992	Argument	cio		489937	0					
ANR	489993	Identifier	cio		489937	0					
ANR	489994	PrimaryExpression	2		489937	1					
ANR	489995	ExpressionStatement	"cio_seek ( cio , mark_pos )"	598:4:20517:20540	489937	7	True				
ANR	489996	CallExpression	"cio_seek ( cio , mark_pos )"		489937	0					
ANR	489997	Callee	cio_seek		489937	0					
ANR	489998	Identifier	cio_seek		489937	0					
ANR	489999	ArgumentList	cio		489937	1					
ANR	490000	Argument	cio		489937	0					
ANR	490001	Identifier	cio		489937	0					
ANR	490002	Argument	mark_pos		489937	1					
ANR	490003	Identifier	mark_pos		489937	0					
ANR	490004	IfStatement	if ( ( j2k -> state == J2K_STATE_MHSOC ) && ! mh_done )		489937	8					
ANR	490005	Condition	( j2k -> state == J2K_STATE_MHSOC ) && ! mh_done	600:8:20551:20593	489937	0	True				
ANR	490006	AndExpression	( j2k -> state == J2K_STATE_MHSOC ) && ! mh_done		489937	0		&&			
ANR	490007	EqualityExpression	j2k -> state == J2K_STATE_MHSOC		489937	0		==			
ANR	490008	PtrMemberAccess	j2k -> state		489937	0					
ANR	490009	Identifier	j2k		489937	0					
ANR	490010	Identifier	state		489937	1					
ANR	490011	Identifier	J2K_STATE_MHSOC		489937	1					
ANR	490012	UnaryOperationExpression	! mh_done		489937	1					
ANR	490013	UnaryOperator	!		489937	0					
ANR	490014	Identifier	mh_done		489937	1					
ANR	490015	CompoundStatement		15:8:336:365	489937	1					
ANR	490016	IdentifierDeclStatement	"int mark_val = 0 , skipnum = 0 ;"	602:8:20607:20636	489937	0	True				
ANR	490017	IdentifierDecl	mark_val = 0		489937	0					
ANR	490018	IdentifierDeclType	int		489937	0					
ANR	490019	Identifier	mark_val		489937	1					
ANR	490020	AssignmentExpression	mark_val = 0		489937	2		=			
ANR	490021	Identifier	mark_val		489937	0					
ANR	490022	PrimaryExpression	0		489937	1					
ANR	490023	IdentifierDecl	skipnum = 0		489937	1					
ANR	490024	IdentifierDeclType	int		489937	0					
ANR	490025	Identifier	skipnum		489937	1					
ANR	490026	AssignmentExpression	skipnum = 0		489937	2		=			
ANR	490027	Identifier	skipnum		489937	0					
ANR	490028	PrimaryExpression	0		489937	1					
ANR	490029	ExpressionStatement	skipnum = 2 + 38 + 3 * j2k -> cp -> exp_comps + 2	615:8:21083:21146	489937	1	True				
ANR	490030	AssignmentExpression	skipnum = 2 + 38 + 3 * j2k -> cp -> exp_comps + 2		489937	0		=			
ANR	490031	Identifier	skipnum		489937	0					
ANR	490032	AdditiveExpression	2 + 38 + 3 * j2k -> cp -> exp_comps + 2		489937	1		+			
ANR	490033	PrimaryExpression	2		489937	0					
ANR	490034	AdditiveExpression	38 + 3 * j2k -> cp -> exp_comps + 2		489937	1		+			
ANR	490035	PrimaryExpression	38		489937	0					
ANR	490036	AdditiveExpression	3 * j2k -> cp -> exp_comps + 2		489937	1		+			
ANR	490037	MultiplicativeExpression	3 * j2k -> cp -> exp_comps		489937	0		*			
ANR	490038	PrimaryExpression	3		489937	0					
ANR	490039	PtrMemberAccess	j2k -> cp -> exp_comps		489937	1					
ANR	490040	PtrMemberAccess	j2k -> cp		489937	0					
ANR	490041	Identifier	j2k		489937	0					
ANR	490042	Identifier	cp		489937	1					
ANR	490043	Identifier	exp_comps		489937	1					
ANR	490044	PrimaryExpression	2		489937	1					
ANR	490045	IfStatement	if ( ( cio -> bp + skipnum ) < cio -> end )		489937	2					
ANR	490046	Condition	( cio -> bp + skipnum ) < cio -> end	616:12:21160:21189	489937	0	True				
ANR	490047	RelationalExpression	( cio -> bp + skipnum ) < cio -> end		489937	0		<			
ANR	490048	AdditiveExpression	cio -> bp + skipnum		489937	0		+			
ANR	490049	PtrMemberAccess	cio -> bp		489937	0					
ANR	490050	Identifier	cio		489937	0					
ANR	490051	Identifier	bp		489937	1					
ANR	490052	Identifier	skipnum		489937	1					
ANR	490053	PtrMemberAccess	cio -> end		489937	1					
ANR	490054	Identifier	cio		489937	0					
ANR	490055	Identifier	end		489937	1					
ANR	490056	CompoundStatement		29:44:921:921	489937	1					
ANR	490057	ExpressionStatement	"cio_skip ( cio , skipnum )"	618:12:21207:21229	489937	0	True				
ANR	490058	CallExpression	"cio_skip ( cio , skipnum )"		489937	0					
ANR	490059	Callee	cio_skip		489937	0					
ANR	490060	Identifier	cio_skip		489937	0					
ANR	490061	ArgumentList	cio		489937	1					
ANR	490062	Argument	cio		489937	0					
ANR	490063	Identifier	cio		489937	0					
ANR	490064	Argument	skipnum		489937	1					
ANR	490065	Identifier	skipnum		489937	0					
ANR	490066	ExpressionStatement	"status = jpwl_epb_correct ( j2k , cio -> bp , 0 , skipnum , - 1 , NULL , NULL )"	623:12:21358:21868	489937	1	True				
ANR	490067	AssignmentExpression	"status = jpwl_epb_correct ( j2k , cio -> bp , 0 , skipnum , - 1 , NULL , NULL )"		489937	0		=			
ANR	490068	Identifier	status		489937	0					
ANR	490069	CallExpression	"jpwl_epb_correct ( j2k , cio -> bp , 0 , skipnum , - 1 , NULL , NULL )"		489937	1					
ANR	490070	Callee	jpwl_epb_correct		489937	0					
ANR	490071	Identifier	jpwl_epb_correct		489937	0					
ANR	490072	ArgumentList	j2k		489937	1					
ANR	490073	Argument	j2k		489937	0					
ANR	490074	Identifier	j2k		489937	0					
ANR	490075	Argument	cio -> bp		489937	1					
ANR	490076	PtrMemberAccess	cio -> bp		489937	0					
ANR	490077	Identifier	cio		489937	0					
ANR	490078	Identifier	bp		489937	1					
ANR	490079	Argument	0		489937	2					
ANR	490080	PrimaryExpression	0		489937	0					
ANR	490081	Argument	skipnum		489937	3					
ANR	490082	Identifier	skipnum		489937	0					
ANR	490083	Argument	- 1		489937	4					
ANR	490084	UnaryOperationExpression	- 1		489937	0					
ANR	490085	UnaryOperator	-		489937	0					
ANR	490086	PrimaryExpression	1		489937	1					
ANR	490087	Argument	NULL		489937	5					
ANR	490088	Identifier	NULL		489937	0					
ANR	490089	Argument	NULL		489937	6					
ANR	490090	Identifier	NULL		489937	0					
ANR	490091	ExpressionStatement	mark_val = ( * ( cio -> bp ) << 8 ) | * ( cio -> bp + 1 )	633:12:21923:21968	489937	2	True				
ANR	490092	AssignmentExpression	mark_val = ( * ( cio -> bp ) << 8 ) | * ( cio -> bp + 1 )		489937	0		=			
ANR	490093	Identifier	mark_val		489937	0					
ANR	490094	InclusiveOrExpression	( * ( cio -> bp ) << 8 ) | * ( cio -> bp + 1 )		489937	1		|			
ANR	490095	ShiftExpression	* ( cio -> bp ) << 8		489937	0		<<			
ANR	490096	UnaryOperationExpression	* ( cio -> bp )		489937	0					
ANR	490097	UnaryOperator	*		489937	0					
ANR	490098	PtrMemberAccess	cio -> bp		489937	1					
ANR	490099	Identifier	cio		489937	0					
ANR	490100	Identifier	bp		489937	1					
ANR	490101	PrimaryExpression	8		489937	1					
ANR	490102	UnaryOperationExpression	* ( cio -> bp + 1 )		489937	1					
ANR	490103	UnaryOperator	*		489937	0					
ANR	490104	AdditiveExpression	cio -> bp + 1		489937	1		+			
ANR	490105	PtrMemberAccess	cio -> bp		489937	0					
ANR	490106	Identifier	cio		489937	0					
ANR	490107	Identifier	bp		489937	1					
ANR	490108	PrimaryExpression	1		489937	1					
ANR	490109	IfStatement	if ( status && ( mark_val == J2K_MS_EPB ) )		489937	3					
ANR	490110	Condition	status && ( mark_val == J2K_MS_EPB )	635:16:21987:22020	489937	0	True				
ANR	490111	AndExpression	status && ( mark_val == J2K_MS_EPB )		489937	0		&&			
ANR	490112	Identifier	status		489937	0					
ANR	490113	EqualityExpression	mark_val == J2K_MS_EPB		489937	1		==			
ANR	490114	Identifier	mark_val		489937	0					
ANR	490115	Identifier	J2K_MS_EPB		489937	1					
ANR	490116	CompoundStatement		48:52:1752:1752	489937	1					
ANR	490117	ExpressionStatement	mh_done = OPJ_TRUE	637:16:22076:22094	489937	0	True				
ANR	490118	AssignmentExpression	mh_done = OPJ_TRUE		489937	0		=			
ANR	490119	Identifier	mh_done		489937	0					
ANR	490120	Identifier	OPJ_TRUE		489937	1					
ANR	490121	ReturnStatement	return OPJ_TRUE ;	638:16:22112:22127	489937	1	True				
ANR	490122	Identifier	OPJ_TRUE		489937	0					
ANR	490123	IfStatement	if ( ! status )		489937	4					
ANR	490124	Condition	! status	645:16:22347:22353	489937	0	True				
ANR	490125	UnaryOperationExpression	! status		489937	0					
ANR	490126	UnaryOperator	!		489937	0					
ANR	490127	Identifier	status		489937	1					
ANR	490128	CompoundStatement		58:25:2085:2085	489937	1					
ANR	490129	ExpressionStatement	j2k -> cp -> correct = OPJ_FALSE	646:16:22374:22402	489937	0	True				
ANR	490130	AssignmentExpression	j2k -> cp -> correct = OPJ_FALSE		489937	0		=			
ANR	490131	PtrMemberAccess	j2k -> cp -> correct		489937	0					
ANR	490132	PtrMemberAccess	j2k -> cp		489937	0					
ANR	490133	Identifier	j2k		489937	0					
ANR	490134	Identifier	cp		489937	1					
ANR	490135	Identifier	correct		489937	1					
ANR	490136	Identifier	OPJ_FALSE		489937	1					
ANR	490137	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Couldn't find the MH EPB: disabling JPWL\\n"" )"	647:16:22420:22534	489937	1	True				
ANR	490138	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Couldn't find the MH EPB: disabling JPWL\\n"" )"		489937	0					
ANR	490139	Callee	opj_event_msg		489937	0					
ANR	490140	Identifier	opj_event_msg		489937	0					
ANR	490141	ArgumentList	j2k -> cinfo		489937	1					
ANR	490142	Argument	j2k -> cinfo		489937	0					
ANR	490143	PtrMemberAccess	j2k -> cinfo		489937	0					
ANR	490144	Identifier	j2k		489937	0					
ANR	490145	Identifier	cinfo		489937	1					
ANR	490146	Argument	EVT_WARNING		489937	1					
ANR	490147	Identifier	EVT_WARNING		489937	0					
ANR	490148	Argument	"""Couldn't find the MH EPB: disabling JPWL\\n"""		489937	2					
ANR	490149	PrimaryExpression	"""Couldn't find the MH EPB: disabling JPWL\\n"""		489937	0					
ANR	490150	IfStatement	if ( OPJ_TRUE )		489937	9					
ANR	490151	Condition	OPJ_TRUE	655:8:22577:22584	489937	0	True				
ANR	490152	Identifier	OPJ_TRUE		489937	0					
ANR	490153	CompoundStatement		68:88:2386:2386	489937	1					
ANR	490154	ExpressionStatement	"cio_seek ( cio , mark_pos )"	657:8:22746:22769	489937	0	True				
ANR	490155	CallExpression	"cio_seek ( cio , mark_pos )"		489937	0					
ANR	490156	Callee	cio_seek		489937	0					
ANR	490157	Identifier	cio_seek		489937	0					
ANR	490158	ArgumentList	cio		489937	1					
ANR	490159	Argument	cio		489937	0					
ANR	490160	Identifier	cio		489937	0					
ANR	490161	Argument	mark_pos		489937	1					
ANR	490162	Identifier	mark_pos		489937	0					
ANR	490163	IfStatement	if ( ( cio -> bp + 12 ) < cio -> end )		489937	1					
ANR	490164	Condition	( cio -> bp + 12 ) < cio -> end	658:12:22783:22807	489937	0	True				
ANR	490165	RelationalExpression	( cio -> bp + 12 ) < cio -> end		489937	0		<			
ANR	490166	AdditiveExpression	cio -> bp + 12		489937	0		+			
ANR	490167	PtrMemberAccess	cio -> bp		489937	0					
ANR	490168	Identifier	cio		489937	0					
ANR	490169	Identifier	bp		489937	1					
ANR	490170	PrimaryExpression	12		489937	1					
ANR	490171	PtrMemberAccess	cio -> end		489937	1					
ANR	490172	Identifier	cio		489937	0					
ANR	490173	Identifier	end		489937	1					
ANR	490174	CompoundStatement		71:39:2539:2539	489937	1					
ANR	490175	ExpressionStatement	"cio_skip ( cio , 12 )"	660:12:22825:22842	489937	0	True				
ANR	490176	CallExpression	"cio_skip ( cio , 12 )"		489937	0					
ANR	490177	Callee	cio_skip		489937	0					
ANR	490178	Identifier	cio_skip		489937	0					
ANR	490179	ArgumentList	cio		489937	1					
ANR	490180	Argument	cio		489937	0					
ANR	490181	Identifier	cio		489937	0					
ANR	490182	Argument	12		489937	1					
ANR	490183	PrimaryExpression	12		489937	0					
ANR	490184	ExpressionStatement	"status = jpwl_epb_correct ( j2k , cio -> bp , 1 , 12 , - 1 , NULL , NULL )"	663:12:22894:23400	489937	1	True				
ANR	490185	AssignmentExpression	"status = jpwl_epb_correct ( j2k , cio -> bp , 1 , 12 , - 1 , NULL , NULL )"		489937	0		=			
ANR	490186	Identifier	status		489937	0					
ANR	490187	CallExpression	"jpwl_epb_correct ( j2k , cio -> bp , 1 , 12 , - 1 , NULL , NULL )"		489937	1					
ANR	490188	Callee	jpwl_epb_correct		489937	0					
ANR	490189	Identifier	jpwl_epb_correct		489937	0					
ANR	490190	ArgumentList	j2k		489937	1					
ANR	490191	Argument	j2k		489937	0					
ANR	490192	Identifier	j2k		489937	0					
ANR	490193	Argument	cio -> bp		489937	1					
ANR	490194	PtrMemberAccess	cio -> bp		489937	0					
ANR	490195	Identifier	cio		489937	0					
ANR	490196	Identifier	bp		489937	1					
ANR	490197	Argument	1		489937	2					
ANR	490198	PrimaryExpression	1		489937	0					
ANR	490199	Argument	12		489937	3					
ANR	490200	PrimaryExpression	12		489937	0					
ANR	490201	Argument	- 1		489937	4					
ANR	490202	UnaryOperationExpression	- 1		489937	0					
ANR	490203	UnaryOperator	-		489937	0					
ANR	490204	PrimaryExpression	1		489937	1					
ANR	490205	Argument	NULL		489937	5					
ANR	490206	Identifier	NULL		489937	0					
ANR	490207	Argument	NULL		489937	6					
ANR	490208	Identifier	NULL		489937	0					
ANR	490209	IfStatement	if ( status )		489937	2					
ANR	490210	Condition	status	671:16:23418:23423	489937	0	True				
ANR	490211	Identifier	status		489937	0					
ANR	490212	CompoundStatement		86:12:3202:3202	489937	1					
ANR	490213	ReturnStatement	return OPJ_TRUE ;	674:16:23491:23506	489937	0	True				
ANR	490214	Identifier	OPJ_TRUE		489937	0					
ANR	490215	ReturnStatement	return OPJ_FALSE ;	679:4:23543:23559	489937	10	True				
ANR	490216	Identifier	OPJ_FALSE		489937	0					
ANR	490217	IfStatement	if ( mark_pos > 64 )		489937	11					
ANR	490218	Condition	mark_pos > 64	684:8:23667:23679	489937	0	True				
ANR	490219	RelationalExpression	mark_pos > 64		489937	0		>			
ANR	490220	Identifier	mark_pos		489937	0					
ANR	490221	PrimaryExpression	64		489937	1					
ANR	490222	CompoundStatement		97:23:3411:3411	489937	1					
ANR	490223	ExpressionStatement	"cio_seek ( cio , mark_pos )"	686:8:23745:23768	489937	0	True				
ANR	490224	CallExpression	"cio_seek ( cio , mark_pos )"		489937	0					
ANR	490225	Callee	cio_seek		489937	0					
ANR	490226	Identifier	cio_seek		489937	0					
ANR	490227	ArgumentList	cio		489937	1					
ANR	490228	Argument	cio		489937	0					
ANR	490229	Identifier	cio		489937	0					
ANR	490230	Argument	mark_pos		489937	1					
ANR	490231	Identifier	mark_pos		489937	0					
ANR	490232	ExpressionStatement	"cio_skip ( cio , 0 )"	687:8:23778:23794	489937	1	True				
ANR	490233	CallExpression	"cio_skip ( cio , 0 )"		489937	0					
ANR	490234	Callee	cio_skip		489937	0					
ANR	490235	Identifier	cio_skip		489937	0					
ANR	490236	ArgumentList	cio		489937	1					
ANR	490237	Argument	cio		489937	0					
ANR	490238	Identifier	cio		489937	0					
ANR	490239	Argument	0		489937	1					
ANR	490240	PrimaryExpression	0		489937	0					
ANR	490241	ExpressionStatement	"status = jpwl_epb_correct ( j2k , cio -> bp , 2 , 0 , - 1 , NULL , NULL )"	690:8:23838:24316	489937	2	True				
ANR	490242	AssignmentExpression	"status = jpwl_epb_correct ( j2k , cio -> bp , 2 , 0 , - 1 , NULL , NULL )"		489937	0		=			
ANR	490243	Identifier	status		489937	0					
ANR	490244	CallExpression	"jpwl_epb_correct ( j2k , cio -> bp , 2 , 0 , - 1 , NULL , NULL )"		489937	1					
ANR	490245	Callee	jpwl_epb_correct		489937	0					
ANR	490246	Identifier	jpwl_epb_correct		489937	0					
ANR	490247	ArgumentList	j2k		489937	1					
ANR	490248	Argument	j2k		489937	0					
ANR	490249	Identifier	j2k		489937	0					
ANR	490250	Argument	cio -> bp		489937	1					
ANR	490251	PtrMemberAccess	cio -> bp		489937	0					
ANR	490252	Identifier	cio		489937	0					
ANR	490253	Identifier	bp		489937	1					
ANR	490254	Argument	2		489937	2					
ANR	490255	PrimaryExpression	2		489937	0					
ANR	490256	Argument	0		489937	3					
ANR	490257	PrimaryExpression	0		489937	0					
ANR	490258	Argument	- 1		489937	4					
ANR	490259	UnaryOperationExpression	- 1		489937	0					
ANR	490260	UnaryOperator	-		489937	0					
ANR	490261	PrimaryExpression	1		489937	1					
ANR	490262	Argument	NULL		489937	5					
ANR	490263	Identifier	NULL		489937	0					
ANR	490264	Argument	NULL		489937	6					
ANR	490265	Identifier	NULL		489937	0					
ANR	490266	IfStatement	if ( status )		489937	3					
ANR	490267	Condition	status	698:12:24330:24335	489937	0	True				
ANR	490268	Identifier	status		489937	0					
ANR	490269	CompoundStatement		113:8:4106:4106	489937	1					
ANR	490270	ReturnStatement	return OPJ_TRUE ;	701:12:24391:24406	489937	0	True				
ANR	490271	Identifier	OPJ_TRUE		489937	0					
ANR	490272	ReturnStatement	return OPJ_FALSE ;	706:4:24506:24522	489937	12	True				
ANR	490273	Identifier	OPJ_FALSE		489937	0					
ANR	490274	ReturnStatement	return OPJ_TRUE ;	708:4:24529:24544	489937	13	True				
ANR	490275	Identifier	OPJ_TRUE		489937	0					
ANR	490276	ExpressionStatement	"cio_seek ( cio , 0 )"	714:4:24656:24672	489937	14	True				
ANR	490277	CallExpression	"cio_seek ( cio , 0 )"		489937	0					
ANR	490278	Callee	cio_seek		489937	0					
ANR	490279	Identifier	cio_seek		489937	0					
ANR	490280	ArgumentList	cio		489937	1					
ANR	490281	Argument	cio		489937	0					
ANR	490282	Identifier	cio		489937	0					
ANR	490283	Argument	0		489937	1					
ANR	490284	PrimaryExpression	0		489937	0					
ANR	490285	ExpressionStatement	j2k -> state = J2K_STATE_MHSOC	717:4:24701:24729	489937	15	True				
ANR	490286	AssignmentExpression	j2k -> state = J2K_STATE_MHSOC		489937	0		=			
ANR	490287	PtrMemberAccess	j2k -> state		489937	0					
ANR	490288	Identifier	j2k		489937	0					
ANR	490289	Identifier	state		489937	1					
ANR	490290	Identifier	J2K_STATE_MHSOC		489937	1					
ANR	490291	WhileStatement	while ( cio_tell ( cio ) < cio -> length )		489937	16					
ANR	490292	Condition	cio_tell ( cio ) < cio -> length	720:11:24780:24806	489937	0	True				
ANR	490293	RelationalExpression	cio_tell ( cio ) < cio -> length		489937	0		<			
ANR	490294	CallExpression	cio_tell ( cio )		489937	0					
ANR	490295	Callee	cio_tell		489937	0					
ANR	490296	Identifier	cio_tell		489937	0					
ANR	490297	ArgumentList	cio		489937	1					
ANR	490298	Argument	cio		489937	0					
ANR	490299	Identifier	cio		489937	0					
ANR	490300	PtrMemberAccess	cio -> length		489937	1					
ANR	490301	Identifier	cio		489937	0					
ANR	490302	Identifier	length		489937	1					
ANR	490303	CompoundStatement		133:40:4538:4538	489937	1					
ANR	490304	ExpressionStatement	mark_pos = cio_tell ( cio )	723:8:24850:24874	489937	0	True				
ANR	490305	AssignmentExpression	mark_pos = cio_tell ( cio )		489937	0		=			
ANR	490306	Identifier	mark_pos		489937	0					
ANR	490307	CallExpression	cio_tell ( cio )		489937	1					
ANR	490308	Callee	cio_tell		489937	0					
ANR	490309	Identifier	cio_tell		489937	0					
ANR	490310	ArgumentList	cio		489937	1					
ANR	490311	Argument	cio		489937	0					
ANR	490312	Identifier	cio		489937	0					
ANR	490313	ExpressionStatement	"id = cio_read ( cio , 2 )"	724:8:24884:24905	489937	1	True				
ANR	490314	AssignmentExpression	"id = cio_read ( cio , 2 )"		489937	0		=			
ANR	490315	Identifier	id		489937	0					
ANR	490316	CallExpression	"cio_read ( cio , 2 )"		489937	1					
ANR	490317	Callee	cio_read		489937	0					
ANR	490318	Identifier	cio_read		489937	0					
ANR	490319	ArgumentList	cio		489937	1					
ANR	490320	Argument	cio		489937	0					
ANR	490321	Identifier	cio		489937	0					
ANR	490322	Argument	2		489937	1					
ANR	490323	PrimaryExpression	2		489937	0					
ANR	490324	ExpressionStatement	"printf ( ""Marker@%d: %X\\n"" , cio_tell ( cio ) - 2 , id )"	727:8:24938:24986	489937	2	True				
ANR	490325	CallExpression	"printf ( ""Marker@%d: %X\\n"" , cio_tell ( cio ) - 2 , id )"		489937	0					
ANR	490326	Callee	printf		489937	0					
ANR	490327	Identifier	printf		489937	0					
ANR	490328	ArgumentList	"""Marker@%d: %X\\n"""		489937	1					
ANR	490329	Argument	"""Marker@%d: %X\\n"""		489937	0					
ANR	490330	PrimaryExpression	"""Marker@%d: %X\\n"""		489937	0					
ANR	490331	Argument	cio_tell ( cio ) - 2		489937	1					
ANR	490332	AdditiveExpression	cio_tell ( cio ) - 2		489937	0		-			
ANR	490333	CallExpression	cio_tell ( cio )		489937	0					
ANR	490334	Callee	cio_tell		489937	0					
ANR	490335	Identifier	cio_tell		489937	0					
ANR	490336	ArgumentList	cio		489937	1					
ANR	490337	Argument	cio		489937	0					
ANR	490338	Identifier	cio		489937	0					
ANR	490339	PrimaryExpression	2		489937	1					
ANR	490340	Argument	id		489937	2					
ANR	490341	Identifier	id		489937	0					
ANR	490342	SwitchStatement	switch ( id )		489937	3					
ANR	490343	Condition	id	730:16:25063:25064	489937	0	True				
ANR	490344	Identifier	id		489937	0					
ANR	490345	CompoundStatement		143:20:4796:4796	489937	1					
ANR	490346	Label	case J2K_MS_SOC :	735:8:25125:25140	489937	0	True				
ANR	490347	Identifier	J2K_MS_SOC		489937	0					
ANR	490348	ExpressionStatement	j2k -> state = J2K_STATE_MHSIZ	736:12:25154:25182	489937	1	True				
ANR	490349	AssignmentExpression	j2k -> state = J2K_STATE_MHSIZ		489937	0		=			
ANR	490350	PtrMemberAccess	j2k -> state		489937	0					
ANR	490351	Identifier	j2k		489937	0					
ANR	490352	Identifier	state		489937	1					
ANR	490353	Identifier	J2K_STATE_MHSIZ		489937	1					
ANR	490354	ExpressionStatement	len = 0	737:12:25196:25203	489937	2	True				
ANR	490355	AssignmentExpression	len = 0		489937	0		=			
ANR	490356	Identifier	len		489937	0					
ANR	490357	PrimaryExpression	0		489937	1					
ANR	490358	ExpressionStatement	skips = 0	738:12:25217:25226	489937	3	True				
ANR	490359	AssignmentExpression	skips = 0		489937	0		=			
ANR	490360	Identifier	skips		489937	0					
ANR	490361	PrimaryExpression	0		489937	1					
ANR	490362	BreakStatement	break ;	739:12:25240:25245	489937	4	True				
ANR	490363	Label	case J2K_MS_EOC :	742:8:25274:25289	489937	5	True				
ANR	490364	Identifier	J2K_MS_EOC		489937	0					
ANR	490365	ExpressionStatement	j2k -> state = J2K_STATE_MT	743:12:25303:25328	489937	6	True				
ANR	490366	AssignmentExpression	j2k -> state = J2K_STATE_MT		489937	0		=			
ANR	490367	PtrMemberAccess	j2k -> state		489937	0					
ANR	490368	Identifier	j2k		489937	0					
ANR	490369	Identifier	state		489937	1					
ANR	490370	Identifier	J2K_STATE_MT		489937	1					
ANR	490371	ExpressionStatement	len = 0	744:12:25342:25349	489937	7	True				
ANR	490372	AssignmentExpression	len = 0		489937	0		=			
ANR	490373	Identifier	len		489937	0					
ANR	490374	PrimaryExpression	0		489937	1					
ANR	490375	ExpressionStatement	skips = 0	745:12:25363:25372	489937	8	True				
ANR	490376	AssignmentExpression	skips = 0		489937	0		=			
ANR	490377	Identifier	skips		489937	0					
ANR	490378	PrimaryExpression	0		489937	1					
ANR	490379	BreakStatement	break ;	746:12:25386:25391	489937	9	True				
ANR	490380	Label	case J2K_MS_SOD :	749:8:25439:25454	489937	10	True				
ANR	490381	Identifier	J2K_MS_SOD		489937	0					
ANR	490382	ExpressionStatement	len = Psot - ( mark_pos - sot_pos ) - 2	750:12:25468:25505	489937	11	True				
ANR	490383	AssignmentExpression	len = Psot - ( mark_pos - sot_pos ) - 2		489937	0		=			
ANR	490384	Identifier	len		489937	0					
ANR	490385	AdditiveExpression	Psot - ( mark_pos - sot_pos ) - 2		489937	1		-			
ANR	490386	Identifier	Psot		489937	0					
ANR	490387	AdditiveExpression	( mark_pos - sot_pos ) - 2		489937	1		-			
ANR	490388	AdditiveExpression	mark_pos - sot_pos		489937	0		-			
ANR	490389	Identifier	mark_pos		489937	0					
ANR	490390	Identifier	sot_pos		489937	1					
ANR	490391	PrimaryExpression	2		489937	1					
ANR	490392	ExpressionStatement	skips = len	751:12:25519:25530	489937	12	True				
ANR	490393	AssignmentExpression	skips = len		489937	0		=			
ANR	490394	Identifier	skips		489937	0					
ANR	490395	Identifier	len		489937	1					
ANR	490396	BreakStatement	break ;	752:12:25544:25549	489937	13	True				
ANR	490397	Label	case J2K_MS_SOT :	757:8:25606:25621	489937	14	True				
ANR	490398	Identifier	J2K_MS_SOT		489937	0					
ANR	490399	ExpressionStatement	j2k -> state = J2K_STATE_TPH	758:12:25635:25661	489937	15	True				
ANR	490400	AssignmentExpression	j2k -> state = J2K_STATE_TPH		489937	0		=			
ANR	490401	PtrMemberAccess	j2k -> state		489937	0					
ANR	490402	Identifier	j2k		489937	0					
ANR	490403	Identifier	state		489937	1					
ANR	490404	Identifier	J2K_STATE_TPH		489937	1					
ANR	490405	ExpressionStatement	sot_pos = mark_pos	759:12:25675:25693	489937	16	True				
ANR	490406	AssignmentExpression	sot_pos = mark_pos		489937	0		=			
ANR	490407	Identifier	sot_pos		489937	0					
ANR	490408	Identifier	mark_pos		489937	1					
ANR	490409	ExpressionStatement	"len = cio_read ( cio , 2 )"	760:12:25729:25751	489937	17	True				
ANR	490410	AssignmentExpression	"len = cio_read ( cio , 2 )"		489937	0		=			
ANR	490411	Identifier	len		489937	0					
ANR	490412	CallExpression	"cio_read ( cio , 2 )"		489937	1					
ANR	490413	Callee	cio_read		489937	0					
ANR	490414	Identifier	cio_read		489937	0					
ANR	490415	ArgumentList	cio		489937	1					
ANR	490416	Argument	cio		489937	0					
ANR	490417	Identifier	cio		489937	0					
ANR	490418	Argument	2		489937	1					
ANR	490419	PrimaryExpression	2		489937	0					
ANR	490420	ExpressionStatement	"cio_skip ( cio , 2 )"	761:12:25793:25809	489937	18	True				
ANR	490421	CallExpression	"cio_skip ( cio , 2 )"		489937	0					
ANR	490422	Callee	cio_skip		489937	0					
ANR	490423	Identifier	cio_skip		489937	0					
ANR	490424	ArgumentList	cio		489937	1					
ANR	490425	Argument	cio		489937	0					
ANR	490426	Identifier	cio		489937	0					
ANR	490427	Argument	2		489937	1					
ANR	490428	PrimaryExpression	2		489937	0					
ANR	490429	ExpressionStatement	"Psot = cio_read ( cio , 4 )"	762:12:25855:25878	489937	19	True				
ANR	490430	AssignmentExpression	"Psot = cio_read ( cio , 4 )"		489937	0		=			
ANR	490431	Identifier	Psot		489937	0					
ANR	490432	CallExpression	"cio_read ( cio , 4 )"		489937	1					
ANR	490433	Callee	cio_read		489937	0					
ANR	490434	Identifier	cio_read		489937	0					
ANR	490435	ArgumentList	cio		489937	1					
ANR	490436	Argument	cio		489937	0					
ANR	490437	Identifier	cio		489937	0					
ANR	490438	Argument	4		489937	1					
ANR	490439	PrimaryExpression	4		489937	0					
ANR	490440	ExpressionStatement	skips = len - 8	763:12:25910:25925	489937	20	True				
ANR	490441	AssignmentExpression	skips = len - 8		489937	0		=			
ANR	490442	Identifier	skips		489937	0					
ANR	490443	AdditiveExpression	len - 8		489937	1		-			
ANR	490444	Identifier	len		489937	0					
ANR	490445	PrimaryExpression	8		489937	1					
ANR	490446	BreakStatement	break ;	764:12:25939:25944	489937	21	True				
ANR	490447	Label	case J2K_MS_SIZ :	767:8:25979:25994	489937	22	True				
ANR	490448	Identifier	J2K_MS_SIZ		489937	0					
ANR	490449	ExpressionStatement	j2k -> state = J2K_STATE_MH	768:12:26008:26033	489937	23	True				
ANR	490450	AssignmentExpression	j2k -> state = J2K_STATE_MH		489937	0		=			
ANR	490451	PtrMemberAccess	j2k -> state		489937	0					
ANR	490452	Identifier	j2k		489937	0					
ANR	490453	Identifier	state		489937	1					
ANR	490454	Identifier	J2K_STATE_MH		489937	1					
ANR	490455	ExpressionStatement	"len = cio_read ( cio , 2 )"	770:12:26087:26109	489937	24	True				
ANR	490456	AssignmentExpression	"len = cio_read ( cio , 2 )"		489937	0		=			
ANR	490457	Identifier	len		489937	0					
ANR	490458	CallExpression	"cio_read ( cio , 2 )"		489937	1					
ANR	490459	Callee	cio_read		489937	0					
ANR	490460	Identifier	cio_read		489937	0					
ANR	490461	ArgumentList	cio		489937	1					
ANR	490462	Argument	cio		489937	0					
ANR	490463	Identifier	cio		489937	0					
ANR	490464	Argument	2		489937	1					
ANR	490465	PrimaryExpression	2		489937	0					
ANR	490466	ExpressionStatement	skips = len - 2	771:12:26123:26138	489937	25	True				
ANR	490467	AssignmentExpression	skips = len - 2		489937	0		=			
ANR	490468	Identifier	skips		489937	0					
ANR	490469	AdditiveExpression	len - 2		489937	1		-			
ANR	490470	Identifier	len		489937	0					
ANR	490471	PrimaryExpression	2		489937	1					
ANR	490472	BreakStatement	break ;	772:12:26152:26157	489937	26	True				
ANR	490473	Label	default :	775:8:26192:26199	489937	27	True				
ANR	490474	Identifier	default		489937	0					
ANR	490475	ExpressionStatement	"len = cio_read ( cio , 2 )"	777:12:26253:26275	489937	28	True				
ANR	490476	AssignmentExpression	"len = cio_read ( cio , 2 )"		489937	0		=			
ANR	490477	Identifier	len		489937	0					
ANR	490478	CallExpression	"cio_read ( cio , 2 )"		489937	1					
ANR	490479	Callee	cio_read		489937	0					
ANR	490480	Identifier	cio_read		489937	0					
ANR	490481	ArgumentList	cio		489937	1					
ANR	490482	Argument	cio		489937	0					
ANR	490483	Identifier	cio		489937	0					
ANR	490484	Argument	2		489937	1					
ANR	490485	PrimaryExpression	2		489937	0					
ANR	490486	ExpressionStatement	skips = len - 2	778:12:26289:26304	489937	29	True				
ANR	490487	AssignmentExpression	skips = len - 2		489937	0		=			
ANR	490488	Identifier	skips		489937	0					
ANR	490489	AdditiveExpression	len - 2		489937	1		-			
ANR	490490	Identifier	len		489937	0					
ANR	490491	PrimaryExpression	2		489937	1					
ANR	490492	BreakStatement	break ;	779:12:26318:26323	489937	30	True				
ANR	490493	ExpressionStatement	"cio_skip ( cio , skips )"	784:8:26380:26400	489937	4	True				
ANR	490494	CallExpression	"cio_skip ( cio , skips )"		489937	0					
ANR	490495	Callee	cio_skip		489937	0					
ANR	490496	Identifier	cio_skip		489937	0					
ANR	490497	ArgumentList	cio		489937	1					
ANR	490498	Argument	cio		489937	0					
ANR	490499	Identifier	cio		489937	0					
ANR	490500	Argument	skips		489937	1					
ANR	490501	Identifier	skips		489937	0					
ANR	490502	ReturnType	opj_bool		489937	1					
ANR	490503	Identifier	jpwl_correct		489937	2					
ANR	490504	ParameterList	opj_j2k_t * j2k		489937	3					
ANR	490505	Parameter	opj_j2k_t * j2k	587:22:20254:20267	489937	0	True				
ANR	490506	ParameterType	opj_j2k_t *		489937	0					
ANR	490507	Identifier	j2k		489937	1					
ANR	490508	CFGEntryNode	ENTRY		489937		True				
ANR	490509	CFGExitNode	EXIT		489937		True				
ANR	490510	Symbol	j2k -> cp		489937						
ANR	490511	Symbol	cio -> end		489937						
ANR	490512	Symbol	J2K_STATE_MHSIZ		489937						
ANR	490513	Symbol	cio		489937						
ANR	490514	Symbol	j2k -> state		489937						
ANR	490515	Symbol	J2K_STATE_TPH		489937						
ANR	490516	Symbol	sot_pos		489937						
ANR	490517	Symbol	* cio		489937						
ANR	490518	Symbol	mh_done		489937						
ANR	490519	Symbol	cio_read		489937						
ANR	490520	Symbol	cio -> bp		489937						
ANR	490521	Symbol	skips		489937						
ANR	490522	Symbol	OPJ_FALSE		489937						
ANR	490523	Symbol	len		489937						
ANR	490524	Symbol	mark_pos		489937						
ANR	490525	Symbol	j2k -> cio		489937						
ANR	490526	Symbol	skipnum		489937						
ANR	490527	Symbol	cio -> length		489937						
ANR	490528	Symbol	J2K_MS_EPB		489937						
ANR	490529	Symbol	J2K_STATE_MHSOC		489937						
ANR	490530	Symbol	mark_val		489937						
ANR	490531	Symbol	id		489937						
ANR	490532	Symbol	* cio -> bp		489937						
ANR	490533	Symbol	OPJ_TRUE		489937						
ANR	490534	Symbol	* * cio		489937						
ANR	490535	Symbol	* ( cio -> bp )		489937						
ANR	490536	Symbol	j2k		489937						
ANR	490537	Symbol	NULL		489937						
ANR	490538	Symbol	jpwl_epb_correct		489937						
ANR	490539	Symbol	J2K_STATE_MH		489937						
ANR	490540	Symbol	EVT_WARNING		489937						
ANR	490541	Symbol	Psot		489937						
ANR	490542	Symbol	j2k -> cinfo		489937						
ANR	490543	Symbol	* ( cio -> bp + 1 )		489937						
ANR	490544	Symbol	* j2k		489937						
ANR	490545	Symbol	j2k -> cp -> correct		489937						
ANR	490546	Symbol	* * j2k		489937						
ANR	490547	Symbol	J2K_STATE_MT		489937						
ANR	490548	Symbol	j2k -> cp -> exp_comps		489937						
ANR	490549	Symbol	* j2k -> cp		489937						
ANR	490550	Symbol	cio_tell		489937						
ANR	490551	Symbol	status		489937						
ANR	490552	Function	jpwl_epb_correct	791:0:26414:40327							
ANR	490553	FunctionDef	"jpwl_epb_correct (opj_j2k_t * j2k , unsigned char * buffer , int type , int pre_len , int post_len , int * conn , unsigned char * * L4_bufp)"		490552	0					
ANR	490554	CompoundStatement		794:0:26604:40327	490552	0					
ANR	490555	IdentifierDeclStatement	"unsigned char codeword [ NN ] , * parityword ;"	797:4:26638:26677	490552	0	True				
ANR	490556	IdentifierDecl	codeword [ NN ]		490552	0					
ANR	490557	IdentifierDeclType	unsigned char [ NN ]		490552	0					
ANR	490558	Identifier	codeword		490552	1					
ANR	490559	Identifier	NN		490552	2					
ANR	490560	IdentifierDecl	* parityword		490552	1					
ANR	490561	IdentifierDeclType	unsigned char *		490552	0					
ANR	490562	Identifier	parityword		490552	1					
ANR	490563	IdentifierDeclStatement	"unsigned long int P , NN_P ;"	799:4:26684:26709	490552	1	True				
ANR	490564	IdentifierDecl	P		490552	0					
ANR	490565	IdentifierDeclType	unsigned long int		490552	0					
ANR	490566	Identifier	P		490552	1					
ANR	490567	IdentifierDecl	NN_P		490552	1					
ANR	490568	IdentifierDeclType	unsigned long int		490552	0					
ANR	490569	Identifier	NN_P		490552	1					
ANR	490570	IdentifierDeclStatement	"unsigned long int L1 , L4 ;"	800:4:26715:26739	490552	2	True				
ANR	490571	IdentifierDecl	L1		490552	0					
ANR	490572	IdentifierDeclType	unsigned long int		490552	0					
ANR	490573	Identifier	L1		490552	1					
ANR	490574	IdentifierDecl	L4		490552	1					
ANR	490575	IdentifierDeclType	unsigned long int		490552	0					
ANR	490576	Identifier	L4		490552	1					
ANR	490577	IdentifierDeclStatement	"int remaining , n_pre , k_pre , n_post , k_post ;"	801:4:26745:26788	490552	3	True				
ANR	490578	IdentifierDecl	remaining		490552	0					
ANR	490579	IdentifierDeclType	int		490552	0					
ANR	490580	Identifier	remaining		490552	1					
ANR	490581	IdentifierDecl	n_pre		490552	1					
ANR	490582	IdentifierDeclType	int		490552	0					
ANR	490583	Identifier	n_pre		490552	1					
ANR	490584	IdentifierDecl	k_pre		490552	2					
ANR	490585	IdentifierDeclType	int		490552	0					
ANR	490586	Identifier	k_pre		490552	1					
ANR	490587	IdentifierDecl	n_post		490552	3					
ANR	490588	IdentifierDeclType	int		490552	0					
ANR	490589	Identifier	n_post		490552	1					
ANR	490590	IdentifierDecl	k_post		490552	4					
ANR	490591	IdentifierDeclType	int		490552	0					
ANR	490592	Identifier	k_post		490552	1					
ANR	490593	IdentifierDeclStatement	"int status , tt ;"	803:4:26795:26809	490552	4	True				
ANR	490594	IdentifierDecl	status		490552	0					
ANR	490595	IdentifierDeclType	int		490552	0					
ANR	490596	Identifier	status		490552	1					
ANR	490597	IdentifierDecl	tt		490552	1					
ANR	490598	IdentifierDeclType	int		490552	0					
ANR	490599	Identifier	tt		490552	1					
ANR	490600	IdentifierDeclStatement	int orig_pos = cio_tell ( j2k -> cio ) ;	805:4:26816:26849	490552	5	True				
ANR	490601	IdentifierDecl	orig_pos = cio_tell ( j2k -> cio )		490552	0					
ANR	490602	IdentifierDeclType	int		490552	0					
ANR	490603	Identifier	orig_pos		490552	1					
ANR	490604	AssignmentExpression	orig_pos = cio_tell ( j2k -> cio )		490552	2		=			
ANR	490605	Identifier	orig_pos		490552	0					
ANR	490606	CallExpression	cio_tell ( j2k -> cio )		490552	1					
ANR	490607	Callee	cio_tell		490552	0					
ANR	490608	Identifier	cio_tell		490552	0					
ANR	490609	ArgumentList	j2k -> cio		490552	1					
ANR	490610	Argument	j2k -> cio		490552	0					
ANR	490611	PtrMemberAccess	j2k -> cio		490552	0					
ANR	490612	Identifier	j2k		490552	0					
ANR	490613	Identifier	cio		490552	1					
ANR	490614	IdentifierDeclStatement	"unsigned char * L1_buf , * L2_buf ;"	807:4:26856:26886	490552	6	True				
ANR	490615	IdentifierDecl	* L1_buf		490552	0					
ANR	490616	IdentifierDeclType	unsigned char *		490552	0					
ANR	490617	Identifier	L1_buf		490552	1					
ANR	490618	IdentifierDecl	* L2_buf		490552	1					
ANR	490619	IdentifierDeclType	unsigned char *		490552	0					
ANR	490620	Identifier	L2_buf		490552	1					
ANR	490621	IdentifierDeclStatement	"unsigned char * L3_buf , * L4_buf ;"	808:4:26892:26922	490552	7	True				
ANR	490622	IdentifierDecl	* L3_buf		490552	0					
ANR	490623	IdentifierDeclType	unsigned char *		490552	0					
ANR	490624	Identifier	L3_buf		490552	1					
ANR	490625	IdentifierDecl	* L4_buf		490552	1					
ANR	490626	IdentifierDeclType	unsigned char *		490552	0					
ANR	490627	Identifier	L4_buf		490552	1					
ANR	490628	IdentifierDeclStatement	"unsigned long int LDPepb , Pepb ;"	810:4:26929:26959	490552	8	True				
ANR	490629	IdentifierDecl	LDPepb		490552	0					
ANR	490630	IdentifierDeclType	unsigned long int		490552	0					
ANR	490631	Identifier	LDPepb		490552	1					
ANR	490632	IdentifierDecl	Pepb		490552	1					
ANR	490633	IdentifierDeclType	unsigned long int		490552	0					
ANR	490634	Identifier	Pepb		490552	1					
ANR	490635	IdentifierDeclStatement	unsigned short int Lepb ;	811:4:26965:26988	490552	9	True				
ANR	490636	IdentifierDecl	Lepb		490552	0					
ANR	490637	IdentifierDeclType	unsigned short int		490552	0					
ANR	490638	Identifier	Lepb		490552	1					
ANR	490639	IdentifierDeclStatement	unsigned char Depb ;	812:4:26994:27012	490552	10	True				
ANR	490640	IdentifierDecl	Depb		490552	0					
ANR	490641	IdentifierDeclType	unsigned char		490552	0					
ANR	490642	Identifier	Depb		490552	1					
ANR	490643	IdentifierDeclStatement	"char str1 [ 25 ] = """" ;"	813:4:27018:27036	490552	11	True				
ANR	490644	IdentifierDecl	"str1 [ 25 ] = """""		490552	0					
ANR	490645	IdentifierDeclType	char [ 25 ]		490552	0					
ANR	490646	Identifier	str1		490552	1					
ANR	490647	PrimaryExpression	25		490552	2					
ANR	490648	AssignmentExpression	"str1 [ 25 ] = """""		490552	3		=			
ANR	490649	Identifier	str1		490552	0					
ANR	490650	PrimaryExpression	""""""		490552	1					
ANR	490651	IdentifierDeclStatement	"int myconn , errnum = 0 ;"	814:4:27042:27064	490552	12	True				
ANR	490652	IdentifierDecl	myconn		490552	0					
ANR	490653	IdentifierDeclType	int		490552	0					
ANR	490654	Identifier	myconn		490552	1					
ANR	490655	IdentifierDecl	errnum = 0		490552	1					
ANR	490656	IdentifierDeclType	int		490552	0					
ANR	490657	Identifier	errnum		490552	1					
ANR	490658	AssignmentExpression	errnum = 0		490552	2		=			
ANR	490659	Identifier	errnum		490552	0					
ANR	490660	PrimaryExpression	0		490552	1					
ANR	490661	IdentifierDeclStatement	opj_bool errflag = OPJ_FALSE ;	815:4:27070:27098	490552	13	True				
ANR	490662	IdentifierDecl	errflag = OPJ_FALSE		490552	0					
ANR	490663	IdentifierDeclType	opj_bool		490552	0					
ANR	490664	Identifier	errflag		490552	1					
ANR	490665	AssignmentExpression	errflag = OPJ_FALSE		490552	2		=			
ANR	490666	Identifier	OPJ_FALSE		490552	0					
ANR	490667	Identifier	OPJ_FALSE		490552	1					
ANR	490668	IdentifierDeclStatement	opj_cio_t * cio = j2k -> cio ;	817:4:27105:27130	490552	14	True				
ANR	490669	IdentifierDecl	* cio = j2k -> cio		490552	0					
ANR	490670	IdentifierDeclType	opj_cio_t *		490552	0					
ANR	490671	Identifier	cio		490552	1					
ANR	490672	AssignmentExpression	* cio = j2k -> cio		490552	2		=			
ANR	490673	Identifier	cio		490552	0					
ANR	490674	PtrMemberAccess	j2k -> cio		490552	1					
ANR	490675	Identifier	j2k		490552	0					
ANR	490676	Identifier	cio		490552	1					
ANR	490677	IfStatement	if ( ! buffer )		490552	15					
ANR	490678	Condition	! buffer	820:8:27175:27181	490552	0	True				
ANR	490679	UnaryOperationExpression	! buffer		490552	0					
ANR	490680	UnaryOperator	!		490552	0					
ANR	490681	Identifier	buffer		490552	1					
ANR	490682	CompoundStatement		27:17:579:579	490552	1					
ANR	490683	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""The EPB pointer is a NULL buffer\\n"" )"	821:8:27194:27268	490552	0	True				
ANR	490684	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""The EPB pointer is a NULL buffer\\n"" )"		490552	0					
ANR	490685	Callee	opj_event_msg		490552	0					
ANR	490686	Identifier	opj_event_msg		490552	0					
ANR	490687	ArgumentList	j2k -> cinfo		490552	1					
ANR	490688	Argument	j2k -> cinfo		490552	0					
ANR	490689	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	490690	Identifier	j2k		490552	0					
ANR	490691	Identifier	cinfo		490552	1					
ANR	490692	Argument	EVT_ERROR		490552	1					
ANR	490693	Identifier	EVT_ERROR		490552	0					
ANR	490694	Argument	"""The EPB pointer is a NULL buffer\\n"""		490552	2					
ANR	490695	PrimaryExpression	"""The EPB pointer is a NULL buffer\\n"""		490552	0					
ANR	490696	ReturnStatement	return OPJ_FALSE ;	822:8:27278:27294	490552	1	True				
ANR	490697	Identifier	OPJ_FALSE		490552	0					
ANR	490698	ExpressionStatement	L1 = pre_len + 13	826:4:27331:27348	490552	16	True				
ANR	490699	AssignmentExpression	L1 = pre_len + 13		490552	0		=			
ANR	490700	Identifier	L1		490552	0					
ANR	490701	AdditiveExpression	pre_len + 13		490552	1		+			
ANR	490702	Identifier	pre_len		490552	0					
ANR	490703	PrimaryExpression	13		490552	1					
ANR	490704	SwitchStatement	switch ( type )		490552	17					
ANR	490705	Condition	type	829:12:27393:27396	490552	0	True				
ANR	490706	Identifier	type		490552	0					
ANR	490707	CompoundStatement		36:18:794:794	490552	1					
ANR	490708	Label	case 0 :	831:4:27406:27412	490552	0	True				
ANR	490709	ExpressionStatement	k_pre = 64	833:8:27443:27453	490552	1	True				
ANR	490710	AssignmentExpression	k_pre = 64		490552	0		=			
ANR	490711	Identifier	k_pre		490552	0					
ANR	490712	PrimaryExpression	64		490552	1					
ANR	490713	ExpressionStatement	n_pre = 160	834:8:27463:27474	490552	2	True				
ANR	490714	AssignmentExpression	n_pre = 160		490552	0		=			
ANR	490715	Identifier	n_pre		490552	0					
ANR	490716	PrimaryExpression	160		490552	1					
ANR	490717	BreakStatement	break ;	835:8:27484:27489	490552	3	True				
ANR	490718	Label	case 1 :	837:4:27496:27502	490552	4	True				
ANR	490719	ExpressionStatement	k_pre = 25	839:8:27534:27544	490552	5	True				
ANR	490720	AssignmentExpression	k_pre = 25		490552	0		=			
ANR	490721	Identifier	k_pre		490552	0					
ANR	490722	PrimaryExpression	25		490552	1					
ANR	490723	ExpressionStatement	n_pre = 80	840:8:27554:27564	490552	6	True				
ANR	490724	AssignmentExpression	n_pre = 80		490552	0		=			
ANR	490725	Identifier	n_pre		490552	0					
ANR	490726	PrimaryExpression	80		490552	1					
ANR	490727	BreakStatement	break ;	841:8:27574:27579	490552	7	True				
ANR	490728	Label	case 2 :	843:4:27586:27592	490552	8	True				
ANR	490729	ExpressionStatement	k_pre = 13	845:8:27627:27637	490552	9	True				
ANR	490730	AssignmentExpression	k_pre = 13		490552	0		=			
ANR	490731	Identifier	k_pre		490552	0					
ANR	490732	PrimaryExpression	13		490552	1					
ANR	490733	ExpressionStatement	n_pre = 40	846:8:27647:27657	490552	10	True				
ANR	490734	AssignmentExpression	n_pre = 40		490552	0		=			
ANR	490735	Identifier	n_pre		490552	0					
ANR	490736	PrimaryExpression	40		490552	1					
ANR	490737	BreakStatement	break ;	847:8:27667:27672	490552	11	True				
ANR	490738	Label	case 3 :	849:4:27679:27685	490552	12	True				
ANR	490739	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Auto. setup not yet implemented\\n"" )"	851:8:27725:27798	490552	13	True				
ANR	490740	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Auto. setup not yet implemented\\n"" )"		490552	0					
ANR	490741	Callee	opj_event_msg		490552	0					
ANR	490742	Identifier	opj_event_msg		490552	0					
ANR	490743	ArgumentList	j2k -> cinfo		490552	1					
ANR	490744	Argument	j2k -> cinfo		490552	0					
ANR	490745	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	490746	Identifier	j2k		490552	0					
ANR	490747	Identifier	cinfo		490552	1					
ANR	490748	Argument	EVT_ERROR		490552	1					
ANR	490749	Identifier	EVT_ERROR		490552	0					
ANR	490750	Argument	"""Auto. setup not yet implemented\\n"""		490552	2					
ANR	490751	PrimaryExpression	"""Auto. setup not yet implemented\\n"""		490552	0					
ANR	490752	ReturnStatement	return OPJ_FALSE ;	852:8:27808:27824	490552	14	True				
ANR	490753	Identifier	OPJ_FALSE		490552	0					
ANR	490754	BreakStatement	break ;	853:8:27834:27839	490552	15	True				
ANR	490755	Label	default :	855:4:27846:27853	490552	16	True				
ANR	490756	Identifier	default		490552	0					
ANR	490757	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Unknown expected EPB type\\n"" )"	857:8:27890:27957	490552	17	True				
ANR	490758	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Unknown expected EPB type\\n"" )"		490552	0					
ANR	490759	Callee	opj_event_msg		490552	0					
ANR	490760	Identifier	opj_event_msg		490552	0					
ANR	490761	ArgumentList	j2k -> cinfo		490552	1					
ANR	490762	Argument	j2k -> cinfo		490552	0					
ANR	490763	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	490764	Identifier	j2k		490552	0					
ANR	490765	Identifier	cinfo		490552	1					
ANR	490766	Argument	EVT_ERROR		490552	1					
ANR	490767	Identifier	EVT_ERROR		490552	0					
ANR	490768	Argument	"""Unknown expected EPB type\\n"""		490552	2					
ANR	490769	PrimaryExpression	"""Unknown expected EPB type\\n"""		490552	0					
ANR	490770	ReturnStatement	return OPJ_FALSE ;	858:8:27967:27983	490552	18	True				
ANR	490771	Identifier	OPJ_FALSE		490552	0					
ANR	490772	BreakStatement	break ;	859:8:27993:27998	490552	19	True				
ANR	490773	ExpressionStatement	P = n_pre - k_pre	864:4:28047:28064	490552	18	True				
ANR	490774	AssignmentExpression	P = n_pre - k_pre		490552	0		=			
ANR	490775	Identifier	P		490552	0					
ANR	490776	AdditiveExpression	n_pre - k_pre		490552	1		-			
ANR	490777	Identifier	n_pre		490552	0					
ANR	490778	Identifier	k_pre		490552	1					
ANR	490779	ExpressionStatement	NN_P = NN - P	865:4:28070:28083	490552	19	True				
ANR	490780	AssignmentExpression	NN_P = NN - P		490552	0		=			
ANR	490781	Identifier	NN_P		490552	0					
ANR	490782	AdditiveExpression	NN - P		490552	1		-			
ANR	490783	Identifier	NN		490552	0					
ANR	490784	Identifier	P		490552	1					
ANR	490785	ExpressionStatement	tt = ( int ) floor ( ( float ) P / 2.0F )	866:4:28089:28123	490552	20	True				
ANR	490786	AssignmentExpression	tt = ( int ) floor ( ( float ) P / 2.0F )		490552	0		=			
ANR	490787	Identifier	tt		490552	0					
ANR	490788	CastExpression	( int ) floor ( ( float ) P / 2.0F )		490552	1					
ANR	490789	CastTarget	int		490552	0					
ANR	490790	CallExpression	floor ( ( float ) P / 2.0F )		490552	1					
ANR	490791	Callee	floor		490552	0					
ANR	490792	Identifier	floor		490552	0					
ANR	490793	ArgumentList	( float ) P / 2.0F		490552	1					
ANR	490794	Argument	( float ) P / 2.0F		490552	0					
ANR	490795	MultiplicativeExpression	( float ) P / 2.0F		490552	0		/			
ANR	490796	CastExpression	( float ) P		490552	0					
ANR	490797	CastTarget	float		490552	0					
ANR	490798	Identifier	P		490552	1					
ANR	490799	PrimaryExpression	2.0F		490552	1					
ANR	490800	ExpressionStatement	"memset ( codeword , 0 , NN )"	867:4:28169:28192	490552	21	True				
ANR	490801	CallExpression	"memset ( codeword , 0 , NN )"		490552	0					
ANR	490802	Callee	memset		490552	0					
ANR	490803	Identifier	memset		490552	0					
ANR	490804	ArgumentList	codeword		490552	1					
ANR	490805	Argument	codeword		490552	0					
ANR	490806	Identifier	codeword		490552	0					
ANR	490807	Argument	0		490552	1					
ANR	490808	PrimaryExpression	0		490552	0					
ANR	490809	Argument	NN		490552	2					
ANR	490810	Identifier	NN		490552	0					
ANR	490811	ExpressionStatement	parityword = codeword + NN_P	868:4:28198:28226	490552	22	True				
ANR	490812	AssignmentExpression	parityword = codeword + NN_P		490552	0		=			
ANR	490813	Identifier	parityword		490552	0					
ANR	490814	AdditiveExpression	codeword + NN_P		490552	1		+			
ANR	490815	Identifier	codeword		490552	0					
ANR	490816	Identifier	NN_P		490552	1					
ANR	490817	ExpressionStatement	init_rs ( NN_P )	869:4:28232:28245	490552	23	True				
ANR	490818	CallExpression	init_rs ( NN_P )		490552	0					
ANR	490819	Callee	init_rs		490552	0					
ANR	490820	Identifier	init_rs		490552	0					
ANR	490821	ArgumentList	NN_P		490552	1					
ANR	490822	Argument	NN_P		490552	0					
ANR	490823	Identifier	NN_P		490552	0					
ANR	490824	ExpressionStatement	L1_buf = buffer - pre_len	872:4:28293:28318	490552	24	True				
ANR	490825	AssignmentExpression	L1_buf = buffer - pre_len		490552	0		=			
ANR	490826	Identifier	L1_buf		490552	0					
ANR	490827	AdditiveExpression	buffer - pre_len		490552	1		-			
ANR	490828	Identifier	buffer		490552	0					
ANR	490829	Identifier	pre_len		490552	1					
ANR	490830	ExpressionStatement	L2_buf = buffer + 13	873:4:28324:28344	490552	25	True				
ANR	490831	AssignmentExpression	L2_buf = buffer + 13		490552	0		=			
ANR	490832	Identifier	L2_buf		490552	0					
ANR	490833	AdditiveExpression	buffer + 13		490552	1		+			
ANR	490834	Identifier	buffer		490552	0					
ANR	490835	PrimaryExpression	13		490552	1					
ANR	490836	ExpressionStatement	remaining = L1	874:4:28350:28364	490552	26	True				
ANR	490837	AssignmentExpression	remaining = L1		490552	0		=			
ANR	490838	Identifier	remaining		490552	0					
ANR	490839	Identifier	L1		490552	1					
ANR	490840	WhileStatement	while ( remaining )		490552	27					
ANR	490841	Condition	remaining	875:11:28377:28385	490552	0	True				
ANR	490842	Identifier	remaining		490552	0					
ANR	490843	CompoundStatement		82:22:1783:1783	490552	1					
ANR	490844	ExpressionStatement	"memset ( codeword , 0 , NN )"	880:8:28590:28613	490552	0	True				
ANR	490845	CallExpression	"memset ( codeword , 0 , NN )"		490552	0					
ANR	490846	Callee	memset		490552	0					
ANR	490847	Identifier	memset		490552	0					
ANR	490848	ArgumentList	codeword		490552	1					
ANR	490849	Argument	codeword		490552	0					
ANR	490850	Identifier	codeword		490552	0					
ANR	490851	Argument	0		490552	1					
ANR	490852	PrimaryExpression	0		490552	0					
ANR	490853	Argument	NN		490552	2					
ANR	490854	Identifier	NN		490552	0					
ANR	490855	IfStatement	if ( remaining < k_pre )		490552	1					
ANR	490856	Condition	remaining < k_pre	883:12:28682:28698	490552	0	True				
ANR	490857	RelationalExpression	remaining < k_pre		490552	0		<			
ANR	490858	Identifier	remaining		490552	0					
ANR	490859	Identifier	k_pre		490552	1					
ANR	490860	CompoundStatement		90:31:2096:2096	490552	1					
ANR	490861	ExpressionStatement	"memcpy ( codeword , L1_buf , remaining )"	884:12:28715:28750	490552	0	True				
ANR	490862	CallExpression	"memcpy ( codeword , L1_buf , remaining )"		490552	0					
ANR	490863	Callee	memcpy		490552	0					
ANR	490864	Identifier	memcpy		490552	0					
ANR	490865	ArgumentList	codeword		490552	1					
ANR	490866	Argument	codeword		490552	0					
ANR	490867	Identifier	codeword		490552	0					
ANR	490868	Argument	L1_buf		490552	1					
ANR	490869	Identifier	L1_buf		490552	0					
ANR	490870	Argument	remaining		490552	2					
ANR	490871	Identifier	remaining		490552	0					
ANR	490872	ElseStatement	else		490552	0					
ANR	490873	CompoundStatement		92:15:2162:2162	490552	0					
ANR	490874	ExpressionStatement	"memcpy ( codeword , L1_buf , k_pre )"	886:12:28781:28812	490552	0	True				
ANR	490875	CallExpression	"memcpy ( codeword , L1_buf , k_pre )"		490552	0					
ANR	490876	Callee	memcpy		490552	0					
ANR	490877	Identifier	memcpy		490552	0					
ANR	490878	ArgumentList	codeword		490552	1					
ANR	490879	Argument	codeword		490552	0					
ANR	490880	Identifier	codeword		490552	0					
ANR	490881	Argument	L1_buf		490552	1					
ANR	490882	Identifier	L1_buf		490552	0					
ANR	490883	Argument	k_pre		490552	2					
ANR	490884	Identifier	k_pre		490552	0					
ANR	490885	ExpressionStatement	"memcpy ( parityword , L2_buf , P )"	890:8:28886:28915	490552	2	True				
ANR	490886	CallExpression	"memcpy ( parityword , L2_buf , P )"		490552	0					
ANR	490887	Callee	memcpy		490552	0					
ANR	490888	Identifier	memcpy		490552	0					
ANR	490889	ArgumentList	parityword		490552	1					
ANR	490890	Argument	parityword		490552	0					
ANR	490891	Identifier	parityword		490552	0					
ANR	490892	Argument	L2_buf		490552	1					
ANR	490893	Identifier	L2_buf		490552	0					
ANR	490894	Argument	P		490552	2					
ANR	490895	Identifier	P		490552	0					
ANR	490896	ExpressionStatement	"status = eras_dec_rs ( codeword , NULL , 0 )"	893:8:28994:29033	490552	3	True				
ANR	490897	AssignmentExpression	"status = eras_dec_rs ( codeword , NULL , 0 )"		490552	0		=			
ANR	490898	Identifier	status		490552	0					
ANR	490899	CallExpression	"eras_dec_rs ( codeword , NULL , 0 )"		490552	1					
ANR	490900	Callee	eras_dec_rs		490552	0					
ANR	490901	Identifier	eras_dec_rs		490552	0					
ANR	490902	ArgumentList	codeword		490552	1					
ANR	490903	Argument	codeword		490552	0					
ANR	490904	Identifier	codeword		490552	0					
ANR	490905	Argument	NULL		490552	1					
ANR	490906	Identifier	NULL		490552	0					
ANR	490907	Argument	0		490552	2					
ANR	490908	PrimaryExpression	0		490552	0					
ANR	490909	IfStatement	if ( status == - 1 )		490552	4					
ANR	490910	Condition	status == - 1	894:12:29047:29058	490552	0	True				
ANR	490911	EqualityExpression	status == - 1		490552	0		==			
ANR	490912	Identifier	status		490552	0					
ANR	490913	UnaryOperationExpression	- 1		490552	1					
ANR	490914	UnaryOperator	-		490552	0					
ANR	490915	PrimaryExpression	1		490552	1					
ANR	490916	CompoundStatement		101:26:2456:2456	490552	1					
ANR	490917	ExpressionStatement	errflag = OPJ_TRUE	898:12:29268:29286	490552	0	True				
ANR	490918	AssignmentExpression	errflag = OPJ_TRUE		490552	0		=			
ANR	490919	Identifier	errflag		490552	0					
ANR	490920	Identifier	OPJ_TRUE		490552	1					
ANR	490921	ElseStatement	else		490552	0					
ANR	490922	IfStatement	if ( status == 0 )		490552	0					
ANR	490923	Condition	status == 0	904:19:29529:29539	490552	0	True				
ANR	490924	EqualityExpression	status == 0		490552	0		==			
ANR	490925	Identifier	status		490552	0					
ANR	490926	PrimaryExpression	0		490552	1					
ANR	490927	CompoundStatement		111:32:2937:2937	490552	1					
ANR	490928	ElseStatement	else		490552	0					
ANR	490929	IfStatement	if ( status <= tt )		490552	0					
ANR	490930	Condition	status <= tt	908:19:29686:29697	490552	0	True				
ANR	490931	RelationalExpression	status <= tt		490552	0		<=			
ANR	490932	Identifier	status		490552	0					
ANR	490933	Identifier	tt		490552	1					
ANR	490934	CompoundStatement		115:33:3095:3095	490552	1					
ANR	490935	ExpressionStatement	errnum += status	912:12:29900:29916	490552	0	True				
ANR	490936	AssignmentExpression	errnum += status		490552	0		+=			
ANR	490937	Identifier	errnum		490552	0					
ANR	490938	Identifier	status		490552	1					
ANR	490939	ElseStatement	else		490552	0					
ANR	490940	CompoundStatement		121:15:3329:3329	490552	0					
ANR	490941	ExpressionStatement	errflag = OPJ_TRUE	918:12:30108:30126	490552	0	True				
ANR	490942	AssignmentExpression	errflag = OPJ_TRUE		490552	0		=			
ANR	490943	Identifier	errflag		490552	0					
ANR	490944	Identifier	OPJ_TRUE		490552	1					
ANR	490945	IfStatement	if ( ( status >= 0 ) && ( status <= tt ) )		490552	5					
ANR	490946	Condition	( status >= 0 ) && ( status <= tt )	923:12:30188:30218	490552	0	True				
ANR	490947	AndExpression	( status >= 0 ) && ( status <= tt )		490552	0		&&			
ANR	490948	RelationalExpression	status >= 0		490552	0		>=			
ANR	490949	Identifier	status		490552	0					
ANR	490950	PrimaryExpression	0		490552	1					
ANR	490951	RelationalExpression	status <= tt		490552	1		<=			
ANR	490952	Identifier	status		490552	0					
ANR	490953	Identifier	tt		490552	1					
ANR	490954	CompoundStatement		132:8:3687:3687	490552	1					
ANR	490955	ExpressionStatement	"memcpy ( L2_buf , parityword , P )"	926:12:30306:30335	490552	0	True				
ANR	490956	CallExpression	"memcpy ( L2_buf , parityword , P )"		490552	0					
ANR	490957	Callee	memcpy		490552	0					
ANR	490958	Identifier	memcpy		490552	0					
ANR	490959	ArgumentList	L2_buf		490552	1					
ANR	490960	Argument	L2_buf		490552	0					
ANR	490961	Identifier	L2_buf		490552	0					
ANR	490962	Argument	parityword		490552	1					
ANR	490963	Identifier	parityword		490552	0					
ANR	490964	Argument	P		490552	2					
ANR	490965	Identifier	P		490552	0					
ANR	490966	ExpressionStatement	L2_buf += P	928:8:30355:30366	490552	6	True				
ANR	490967	AssignmentExpression	L2_buf += P		490552	0		+=			
ANR	490968	Identifier	L2_buf		490552	0					
ANR	490969	Identifier	P		490552	1					
ANR	490970	IfStatement	if ( remaining < k_pre )		490552	7					
ANR	490971	Condition	remaining < k_pre	931:12:30418:30434	490552	0	True				
ANR	490972	RelationalExpression	remaining < k_pre		490552	0		<			
ANR	490973	Identifier	remaining		490552	0					
ANR	490974	Identifier	k_pre		490552	1					
ANR	490975	CompoundStatement		138:31:3832:3832	490552	1					
ANR	490976	IfStatement	if ( ( status >= 0 ) && ( status <= tt ) )		490552	0					
ANR	490977	Condition	( status >= 0 ) && ( status <= tt )	932:16:30455:30485	490552	0	True				
ANR	490978	AndExpression	( status >= 0 ) && ( status <= tt )		490552	0		&&			
ANR	490979	RelationalExpression	status >= 0		490552	0		>=			
ANR	490980	Identifier	status		490552	0					
ANR	490981	PrimaryExpression	0		490552	1					
ANR	490982	RelationalExpression	status <= tt		490552	1		<=			
ANR	490983	Identifier	status		490552	0					
ANR	490984	Identifier	tt		490552	1					
ANR	490985	CompoundStatement		141:12:3960:3960	490552	1					
ANR	490986	ExpressionStatement	"memcpy ( L1_buf , codeword , remaining )"	935:16:30583:30618	490552	0	True				
ANR	490987	CallExpression	"memcpy ( L1_buf , codeword , remaining )"		490552	0					
ANR	490988	Callee	memcpy		490552	0					
ANR	490989	Identifier	memcpy		490552	0					
ANR	490990	ArgumentList	L1_buf		490552	1					
ANR	490991	Argument	L1_buf		490552	0					
ANR	490992	Identifier	L1_buf		490552	0					
ANR	490993	Argument	codeword		490552	1					
ANR	490994	Identifier	codeword		490552	0					
ANR	490995	Argument	remaining		490552	2					
ANR	490996	Identifier	remaining		490552	0					
ANR	490997	ExpressionStatement	L1_buf += remaining	937:12:30646:30665	490552	1	True				
ANR	490998	AssignmentExpression	L1_buf += remaining		490552	0		+=			
ANR	490999	Identifier	L1_buf		490552	0					
ANR	491000	Identifier	remaining		490552	1					
ANR	491001	ExpressionStatement	remaining = 0	938:12:30679:30692	490552	2	True				
ANR	491002	AssignmentExpression	remaining = 0		490552	0		=			
ANR	491003	Identifier	remaining		490552	0					
ANR	491004	PrimaryExpression	0		490552	1					
ANR	491005	ElseStatement	else		490552	0					
ANR	491006	CompoundStatement		147:15:4105:4105	490552	0					
ANR	491007	IfStatement	if ( ( status >= 0 ) && ( status <= tt ) )		490552	0					
ANR	491008	Condition	( status >= 0 ) && ( status <= tt )	941:16:30728:30758	490552	0	True				
ANR	491009	AndExpression	( status >= 0 ) && ( status <= tt )		490552	0		&&			
ANR	491010	RelationalExpression	status >= 0		490552	0		>=			
ANR	491011	Identifier	status		490552	0					
ANR	491012	PrimaryExpression	0		490552	1					
ANR	491013	RelationalExpression	status <= tt		490552	1		<=			
ANR	491014	Identifier	status		490552	0					
ANR	491015	Identifier	tt		490552	1					
ANR	491016	CompoundStatement		150:12:4233:4233	490552	1					
ANR	491017	ExpressionStatement	"memcpy ( L1_buf , codeword , k_pre )"	944:16:30856:30887	490552	0	True				
ANR	491018	CallExpression	"memcpy ( L1_buf , codeword , k_pre )"		490552	0					
ANR	491019	Callee	memcpy		490552	0					
ANR	491020	Identifier	memcpy		490552	0					
ANR	491021	ArgumentList	L1_buf		490552	1					
ANR	491022	Argument	L1_buf		490552	0					
ANR	491023	Identifier	L1_buf		490552	0					
ANR	491024	Argument	codeword		490552	1					
ANR	491025	Identifier	codeword		490552	0					
ANR	491026	Argument	k_pre		490552	2					
ANR	491027	Identifier	k_pre		490552	0					
ANR	491028	ExpressionStatement	L1_buf += k_pre	946:12:30915:30930	490552	1	True				
ANR	491029	AssignmentExpression	L1_buf += k_pre		490552	0		+=			
ANR	491030	Identifier	L1_buf		490552	0					
ANR	491031	Identifier	k_pre		490552	1					
ANR	491032	ExpressionStatement	remaining -= k_pre	947:12:30944:30962	490552	2	True				
ANR	491033	AssignmentExpression	remaining -= k_pre		490552	0		-=			
ANR	491034	Identifier	remaining		490552	0					
ANR	491035	Identifier	k_pre		490552	1					
ANR	491036	IfStatement	if ( ! conn )		490552	28					
ANR	491037	Condition	! conn	953:8:31014:31018	490552	0	True				
ANR	491038	UnaryOperationExpression	! conn		490552	0					
ANR	491039	UnaryOperator	!		490552	0					
ANR	491040	Identifier	conn		490552	1					
ANR	491041	CompoundStatement		160:15:4416:4416	490552	1					
ANR	491042	IfStatement	if ( errflag )		490552	0					
ANR	491043	Condition	errflag	958:12:31240:31246	490552	0	True				
ANR	491044	Identifier	errflag		490552	0					
ANR	491045	CompoundStatement		165:21:4644:4644	490552	1					
ANR	491046	ReturnStatement	return OPJ_FALSE ;	960:12:31355:31371	490552	0	True				
ANR	491047	Identifier	OPJ_FALSE		490552	0					
ANR	491048	IfStatement	if ( conn )		490552	29					
ANR	491049	Condition	conn	969:8:31520:31523	490552	0	True				
ANR	491050	Identifier	conn		490552	0					
ANR	491051	CompoundStatement		176:14:4921:4921	490552	1					
ANR	491052	ExpressionStatement	cio -> bp = buffer	970:8:31536:31552	490552	0	True				
ANR	491053	AssignmentExpression	cio -> bp = buffer		490552	0		=			
ANR	491054	PtrMemberAccess	cio -> bp		490552	0					
ANR	491055	Identifier	cio		490552	0					
ANR	491056	Identifier	bp		490552	1					
ANR	491057	Identifier	buffer		490552	1					
ANR	491058	ExpressionStatement	"cio_skip ( cio , 2 )"	972:4:31564:31580	490552	30	True				
ANR	491059	CallExpression	"cio_skip ( cio , 2 )"		490552	0					
ANR	491060	Callee	cio_skip		490552	0					
ANR	491061	Identifier	cio_skip		490552	0					
ANR	491062	ArgumentList	cio		490552	1					
ANR	491063	Argument	cio		490552	0					
ANR	491064	Identifier	cio		490552	0					
ANR	491065	Argument	2		490552	1					
ANR	491066	PrimaryExpression	2		490552	0					
ANR	491067	ExpressionStatement	"Lepb = cio_read ( cio , 2 )"	973:4:31603:31626	490552	31	True				
ANR	491068	AssignmentExpression	"Lepb = cio_read ( cio , 2 )"		490552	0		=			
ANR	491069	Identifier	Lepb		490552	0					
ANR	491070	CallExpression	"cio_read ( cio , 2 )"		490552	1					
ANR	491071	Callee	cio_read		490552	0					
ANR	491072	Identifier	cio_read		490552	0					
ANR	491073	ArgumentList	cio		490552	1					
ANR	491074	Argument	cio		490552	0					
ANR	491075	Identifier	cio		490552	0					
ANR	491076	Argument	2		490552	1					
ANR	491077	PrimaryExpression	2		490552	0					
ANR	491078	ExpressionStatement	"Depb = cio_read ( cio , 1 )"	974:4:31632:31655	490552	32	True				
ANR	491079	AssignmentExpression	"Depb = cio_read ( cio , 1 )"		490552	0		=			
ANR	491080	Identifier	Depb		490552	0					
ANR	491081	CallExpression	"cio_read ( cio , 1 )"		490552	1					
ANR	491082	Callee	cio_read		490552	0					
ANR	491083	Identifier	cio_read		490552	0					
ANR	491084	ArgumentList	cio		490552	1					
ANR	491085	Argument	cio		490552	0					
ANR	491086	Identifier	cio		490552	0					
ANR	491087	Argument	1		490552	1					
ANR	491088	PrimaryExpression	1		490552	0					
ANR	491089	ExpressionStatement	"LDPepb = cio_read ( cio , 4 )"	975:4:31661:31686	490552	33	True				
ANR	491090	AssignmentExpression	"LDPepb = cio_read ( cio , 4 )"		490552	0		=			
ANR	491091	Identifier	LDPepb		490552	0					
ANR	491092	CallExpression	"cio_read ( cio , 4 )"		490552	1					
ANR	491093	Callee	cio_read		490552	0					
ANR	491094	Identifier	cio_read		490552	0					
ANR	491095	ArgumentList	cio		490552	1					
ANR	491096	Argument	cio		490552	0					
ANR	491097	Identifier	cio		490552	0					
ANR	491098	Argument	4		490552	1					
ANR	491099	PrimaryExpression	4		490552	0					
ANR	491100	ExpressionStatement	"Pepb = cio_read ( cio , 4 )"	976:4:31692:31715	490552	34	True				
ANR	491101	AssignmentExpression	"Pepb = cio_read ( cio , 4 )"		490552	0		=			
ANR	491102	Identifier	Pepb		490552	0					
ANR	491103	CallExpression	"cio_read ( cio , 4 )"		490552	1					
ANR	491104	Callee	cio_read		490552	0					
ANR	491105	Identifier	cio_read		490552	0					
ANR	491106	ArgumentList	cio		490552	1					
ANR	491107	Argument	cio		490552	0					
ANR	491108	Identifier	cio		490552	0					
ANR	491109	Argument	4		490552	1					
ANR	491110	PrimaryExpression	4		490552	0					
ANR	491111	IfStatement	if ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 0 )		490552	35					
ANR	491112	Condition	( ( Pepb & 0xF0000000 ) >> 28 ) == 0	979:8:31789:31820	490552	0	True				
ANR	491113	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 0		490552	0		==			
ANR	491114	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491115	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491116	Identifier	Pepb		490552	0					
ANR	491117	PrimaryExpression	0xF0000000		490552	1					
ANR	491118	PrimaryExpression	28		490552	1					
ANR	491119	PrimaryExpression	0		490552	1					
ANR	491120	CompoundStatement		186:42:5218:5218	490552	1					
ANR	491121	ExpressionStatement	"sprintf ( str1 , ""pred"" )"	980:8:31833:31854	490552	0	True				
ANR	491122	CallExpression	"sprintf ( str1 , ""pred"" )"		490552	0					
ANR	491123	Callee	sprintf		490552	0					
ANR	491124	Identifier	sprintf		490552	0					
ANR	491125	ArgumentList	str1		490552	1					
ANR	491126	Argument	str1		490552	0					
ANR	491127	Identifier	str1		490552	0					
ANR	491128	Argument	"""pred"""		490552	1					
ANR	491129	PrimaryExpression	"""pred"""		490552	0					
ANR	491130	ElseStatement	else		490552	0					
ANR	491131	IfStatement	if ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 1 )		490552	0					
ANR	491132	Condition	( ( Pepb & 0xF0000000 ) >> 28 ) == 1	981:15:31891:31922	490552	0	True				
ANR	491133	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 1		490552	0		==			
ANR	491134	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491135	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491136	Identifier	Pepb		490552	0					
ANR	491137	PrimaryExpression	0xF0000000		490552	1					
ANR	491138	PrimaryExpression	28		490552	1					
ANR	491139	PrimaryExpression	1		490552	1					
ANR	491140	CompoundStatement		188:49:5320:5320	490552	1					
ANR	491141	ExpressionStatement	"sprintf ( str1 , ""crc-%lu"" , 16 * ( ( Pepb & 0x00000001 ) + 1 ) )"	982:8:31935:31991	490552	0	True				
ANR	491142	CallExpression	"sprintf ( str1 , ""crc-%lu"" , 16 * ( ( Pepb & 0x00000001 ) + 1 ) )"		490552	0					
ANR	491143	Callee	sprintf		490552	0					
ANR	491144	Identifier	sprintf		490552	0					
ANR	491145	ArgumentList	str1		490552	1					
ANR	491146	Argument	str1		490552	0					
ANR	491147	Identifier	str1		490552	0					
ANR	491148	Argument	"""crc-%lu"""		490552	1					
ANR	491149	PrimaryExpression	"""crc-%lu"""		490552	0					
ANR	491150	Argument	16 * ( ( Pepb & 0x00000001 ) + 1 )		490552	2					
ANR	491151	MultiplicativeExpression	16 * ( ( Pepb & 0x00000001 ) + 1 )		490552	0		*			
ANR	491152	PrimaryExpression	16		490552	0					
ANR	491153	AdditiveExpression	( Pepb & 0x00000001 ) + 1		490552	1		+			
ANR	491154	BitAndExpression	Pepb & 0x00000001		490552	0		&			
ANR	491155	Identifier	Pepb		490552	0					
ANR	491156	PrimaryExpression	0x00000001		490552	1					
ANR	491157	PrimaryExpression	1		490552	1					
ANR	491158	ElseStatement	else		490552	0					
ANR	491159	IfStatement	if ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 2 )		490552	0					
ANR	491160	Condition	( ( Pepb & 0xF0000000 ) >> 28 ) == 2	983:15:32026:32057	490552	0	True				
ANR	491161	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 2		490552	0		==			
ANR	491162	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491163	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491164	Identifier	Pepb		490552	0					
ANR	491165	PrimaryExpression	0xF0000000		490552	1					
ANR	491166	PrimaryExpression	28		490552	1					
ANR	491167	PrimaryExpression	2		490552	1					
ANR	491168	CompoundStatement		190:49:5455:5455	490552	1					
ANR	491169	ExpressionStatement	"sprintf ( str1 , ""rs(%lu,32)"" , ( Pepb & 0x0000FF00 ) >> 8 )"	984:8:32070:32123	490552	0	True				
ANR	491170	CallExpression	"sprintf ( str1 , ""rs(%lu,32)"" , ( Pepb & 0x0000FF00 ) >> 8 )"		490552	0					
ANR	491171	Callee	sprintf		490552	0					
ANR	491172	Identifier	sprintf		490552	0					
ANR	491173	ArgumentList	str1		490552	1					
ANR	491174	Argument	str1		490552	0					
ANR	491175	Identifier	str1		490552	0					
ANR	491176	Argument	"""rs(%lu,32)"""		490552	1					
ANR	491177	PrimaryExpression	"""rs(%lu,32)"""		490552	0					
ANR	491178	Argument	( Pepb & 0x0000FF00 ) >> 8		490552	2					
ANR	491179	ShiftExpression	( Pepb & 0x0000FF00 ) >> 8		490552	0		>>			
ANR	491180	BitAndExpression	Pepb & 0x0000FF00		490552	0		&			
ANR	491181	Identifier	Pepb		490552	0					
ANR	491182	PrimaryExpression	0x0000FF00		490552	1					
ANR	491183	PrimaryExpression	8		490552	1					
ANR	491184	ElseStatement	else		490552	0					
ANR	491185	IfStatement	if ( Pepb == 0xFFFFFFFF )		490552	0					
ANR	491186	Condition	Pepb == 0xFFFFFFFF	985:15:32157:32174	490552	0	True				
ANR	491187	EqualityExpression	Pepb == 0xFFFFFFFF		490552	0		==			
ANR	491188	Identifier	Pepb		490552	0					
ANR	491189	PrimaryExpression	0xFFFFFFFF		490552	1					
ANR	491190	CompoundStatement		192:35:5572:5572	490552	1					
ANR	491191	ExpressionStatement	"sprintf ( str1 , ""nometh"" )"	986:8:32187:32210	490552	0	True				
ANR	491192	CallExpression	"sprintf ( str1 , ""nometh"" )"		490552	0					
ANR	491193	Callee	sprintf		490552	0					
ANR	491194	Identifier	sprintf		490552	0					
ANR	491195	ArgumentList	str1		490552	1					
ANR	491196	Argument	str1		490552	0					
ANR	491197	Identifier	str1		490552	0					
ANR	491198	Argument	"""nometh"""		490552	1					
ANR	491199	PrimaryExpression	"""nometh"""		490552	0					
ANR	491200	ElseStatement	else		490552	0					
ANR	491201	CompoundStatement		194:11:5635:5635	490552	0					
ANR	491202	ExpressionStatement	"sprintf ( str1 , ""unknown"" )"	988:8:32250:32274	490552	0	True				
ANR	491203	CallExpression	"sprintf ( str1 , ""unknown"" )"		490552	0					
ANR	491204	Callee	sprintf		490552	0					
ANR	491205	Identifier	sprintf		490552	0					
ANR	491206	ArgumentList	str1		490552	1					
ANR	491207	Argument	str1		490552	0					
ANR	491208	Identifier	str1		490552	0					
ANR	491209	Argument	"""unknown"""		490552	1					
ANR	491210	PrimaryExpression	"""unknown"""		490552	0					
ANR	491211	IfStatement	if ( ! conn && post_len )		490552	36					
ANR	491212	Condition	! conn && post_len	992:8:32346:32362	490552	0	True				
ANR	491213	AndExpression	! conn && post_len		490552	0		&&			
ANR	491214	UnaryOperationExpression	! conn		490552	0					
ANR	491215	UnaryOperator	!		490552	0					
ANR	491216	Identifier	conn		490552	1					
ANR	491217	Identifier	post_len		490552	1					
ANR	491218	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""EPB(%d): (%sl, %sp, %u), %lu, %s\\n"" , cio_tell ( cio ) - 13 , ( Depb & 0x40 ) ? """" : ""n"" , ( Depb & 0x80 ) ? """" : ""n"" , ( Depb & 0x3F ) , LDPepb , str1 )"	993:8:32373:32823	490552	1	True				
ANR	491219	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""EPB(%d): (%sl, %sp, %u), %lu, %s\\n"" , cio_tell ( cio ) - 13 , ( Depb & 0x40 ) ? """" : ""n"" , ( Depb & 0x80 ) ? """" : ""n"" , ( Depb & 0x3F ) , LDPepb , str1 )"		490552	0					
ANR	491220	Callee	opj_event_msg		490552	0					
ANR	491221	Identifier	opj_event_msg		490552	0					
ANR	491222	ArgumentList	j2k -> cinfo		490552	1					
ANR	491223	Argument	j2k -> cinfo		490552	0					
ANR	491224	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	491225	Identifier	j2k		490552	0					
ANR	491226	Identifier	cinfo		490552	1					
ANR	491227	Argument	EVT_INFO		490552	1					
ANR	491228	Identifier	EVT_INFO		490552	0					
ANR	491229	Argument	"""EPB(%d): (%sl, %sp, %u), %lu, %s\\n"""		490552	2					
ANR	491230	PrimaryExpression	"""EPB(%d): (%sl, %sp, %u), %lu, %s\\n"""		490552	0					
ANR	491231	Argument	cio_tell ( cio ) - 13		490552	3					
ANR	491232	AdditiveExpression	cio_tell ( cio ) - 13		490552	0		-			
ANR	491233	CallExpression	cio_tell ( cio )		490552	0					
ANR	491234	Callee	cio_tell		490552	0					
ANR	491235	Identifier	cio_tell		490552	0					
ANR	491236	ArgumentList	cio		490552	1					
ANR	491237	Argument	cio		490552	0					
ANR	491238	Identifier	cio		490552	0					
ANR	491239	PrimaryExpression	13		490552	1					
ANR	491240	Argument	"( Depb & 0x40 ) ? """" : ""n"""		490552	4					
ANR	491241	ConditionalExpression	"( Depb & 0x40 ) ? """" : ""n"""		490552	0					
ANR	491242	Condition	Depb & 0x40		490552	0					
ANR	491243	BitAndExpression	Depb & 0x40		490552	0		&			
ANR	491244	Identifier	Depb		490552	0					
ANR	491245	PrimaryExpression	0x40		490552	1					
ANR	491246	PrimaryExpression	""""""		490552	1					
ANR	491247	PrimaryExpression	"""n"""		490552	2					
ANR	491248	Argument	"( Depb & 0x80 ) ? """" : ""n"""		490552	5					
ANR	491249	ConditionalExpression	"( Depb & 0x80 ) ? """" : ""n"""		490552	0					
ANR	491250	Condition	Depb & 0x80		490552	0					
ANR	491251	BitAndExpression	Depb & 0x80		490552	0		&			
ANR	491252	Identifier	Depb		490552	0					
ANR	491253	PrimaryExpression	0x80		490552	1					
ANR	491254	PrimaryExpression	""""""		490552	1					
ANR	491255	PrimaryExpression	"""n"""		490552	2					
ANR	491256	Argument	Depb & 0x3F		490552	6					
ANR	491257	BitAndExpression	Depb & 0x3F		490552	0		&			
ANR	491258	Identifier	Depb		490552	0					
ANR	491259	PrimaryExpression	0x3F		490552	1					
ANR	491260	Argument	LDPepb		490552	7					
ANR	491261	Identifier	LDPepb		490552	0					
ANR	491262	Argument	str1		490552	8					
ANR	491263	Identifier	str1		490552	0					
ANR	491264	ExpressionStatement	myconn = Lepb + 2	1004:4:32942:32959	490552	37	True				
ANR	491265	AssignmentExpression	myconn = Lepb + 2		490552	0		=			
ANR	491266	Identifier	myconn		490552	0					
ANR	491267	AdditiveExpression	Lepb + 2		490552	1		+			
ANR	491268	Identifier	Lepb		490552	0					
ANR	491269	PrimaryExpression	2		490552	1					
ANR	491270	IfStatement	if ( ( Depb & 0x40 ) == 0 )		490552	38					
ANR	491271	Condition	( Depb & 0x40 ) == 0	1005:8:32969:32986	490552	0	True				
ANR	491272	EqualityExpression	( Depb & 0x40 ) == 0		490552	0		==			
ANR	491273	BitAndExpression	Depb & 0x40		490552	0		&			
ANR	491274	Identifier	Depb		490552	0					
ANR	491275	PrimaryExpression	0x40		490552	1					
ANR	491276	PrimaryExpression	0		490552	1					
ANR	491277	ExpressionStatement	"jpwl_epb_correct ( j2k , buffer + Lepb + 2 , 2 , 0 , 0 , & myconn , NULL )"	1006:8:33024:33438	490552	1	True				
ANR	491278	CallExpression	"jpwl_epb_correct ( j2k , buffer + Lepb + 2 , 2 , 0 , 0 , & myconn , NULL )"		490552	0					
ANR	491279	Callee	jpwl_epb_correct		490552	0					
ANR	491280	Identifier	jpwl_epb_correct		490552	0					
ANR	491281	ArgumentList	j2k		490552	1					
ANR	491282	Argument	j2k		490552	0					
ANR	491283	Identifier	j2k		490552	0					
ANR	491284	Argument	buffer + Lepb + 2		490552	1					
ANR	491285	AdditiveExpression	buffer + Lepb + 2		490552	0		+			
ANR	491286	Identifier	buffer		490552	0					
ANR	491287	AdditiveExpression	Lepb + 2		490552	1		+			
ANR	491288	Identifier	Lepb		490552	0					
ANR	491289	PrimaryExpression	2		490552	1					
ANR	491290	Argument	2		490552	2					
ANR	491291	PrimaryExpression	2		490552	0					
ANR	491292	Argument	0		490552	3					
ANR	491293	PrimaryExpression	0		490552	0					
ANR	491294	Argument	0		490552	4					
ANR	491295	PrimaryExpression	0		490552	0					
ANR	491296	Argument	& myconn		490552	5					
ANR	491297	UnaryOperationExpression	& myconn		490552	0					
ANR	491298	UnaryOperator	&		490552	0					
ANR	491299	Identifier	myconn		490552	1					
ANR	491300	Argument	NULL		490552	6					
ANR	491301	Identifier	NULL		490552	0					
ANR	491302	IfStatement	if ( conn )		490552	39					
ANR	491303	Condition	conn	1014:8:33448:33451	490552	0	True				
ANR	491304	Identifier	conn		490552	0					
ANR	491305	CompoundStatement		221:14:6849:6849	490552	1					
ANR	491306	ExpressionStatement	* conn += myconn	1015:8:33464:33479	490552	0	True				
ANR	491307	AssignmentExpression	* conn += myconn		490552	0		+=			
ANR	491308	UnaryOperationExpression	* conn		490552	0					
ANR	491309	UnaryOperator	*		490552	0					
ANR	491310	Identifier	conn		490552	1					
ANR	491311	Identifier	myconn		490552	1					
ANR	491312	IfStatement	if ( ! ( L4_bufp ) )		490552	40					
ANR	491313	Condition	! ( L4_bufp )	1027:8:33719:33728	490552	0	True				
ANR	491314	UnaryOperationExpression	! ( L4_bufp )		490552	0					
ANR	491315	UnaryOperator	!		490552	0					
ANR	491316	Identifier	L4_bufp		490552	1					
ANR	491317	CompoundStatement		234:20:7126:7126	490552	1					
ANR	491318	ExpressionStatement	L4_buf = buffer + myconn	1028:8:33741:33765	490552	0	True				
ANR	491319	AssignmentExpression	L4_buf = buffer + myconn		490552	0		=			
ANR	491320	Identifier	L4_buf		490552	0					
ANR	491321	AdditiveExpression	buffer + myconn		490552	1		+			
ANR	491322	Identifier	buffer		490552	0					
ANR	491323	Identifier	myconn		490552	1					
ANR	491324	ElseStatement	else		490552	0					
ANR	491325	IfStatement	if ( ! ( * L4_bufp ) )		490552	0					
ANR	491326	Condition	! ( * L4_bufp )	1029:15:33782:33792	490552	0	True				
ANR	491327	UnaryOperationExpression	! ( * L4_bufp )		490552	0					
ANR	491328	UnaryOperator	!		490552	0					
ANR	491329	UnaryOperationExpression	* L4_bufp		490552	1					
ANR	491330	UnaryOperator	*		490552	0					
ANR	491331	Identifier	L4_bufp		490552	1					
ANR	491332	CompoundStatement		236:28:7190:7190	490552	1					
ANR	491333	ExpressionStatement	L4_buf = buffer + myconn	1030:8:33805:33829	490552	0	True				
ANR	491334	AssignmentExpression	L4_buf = buffer + myconn		490552	0		=			
ANR	491335	Identifier	L4_buf		490552	0					
ANR	491336	AdditiveExpression	buffer + myconn		490552	1		+			
ANR	491337	Identifier	buffer		490552	0					
ANR	491338	Identifier	myconn		490552	1					
ANR	491339	ElseStatement	else		490552	0					
ANR	491340	CompoundStatement		238:11:7237:7237	490552	0					
ANR	491341	ExpressionStatement	L4_buf = * L4_bufp	1032:8:33852:33869	490552	0	True				
ANR	491342	AssignmentExpression	L4_buf = * L4_bufp		490552	0		=			
ANR	491343	Identifier	L4_buf		490552	0					
ANR	491344	UnaryOperationExpression	* L4_bufp		490552	1					
ANR	491345	UnaryOperator	*		490552	0					
ANR	491346	Identifier	L4_bufp		490552	1					
ANR	491347	IfStatement	if ( post_len == - 1 )		490552	41					
ANR	491348	Condition	post_len == - 1	1034:8:33885:33898	490552	0	True				
ANR	491349	EqualityExpression	post_len == - 1		490552	0		==			
ANR	491350	Identifier	post_len		490552	0					
ANR	491351	UnaryOperationExpression	- 1		490552	1					
ANR	491352	UnaryOperator	-		490552	0					
ANR	491353	PrimaryExpression	1		490552	1					
ANR	491354	CompoundStatement		241:24:7296:7296	490552	1					
ANR	491355	ExpressionStatement	L4 = LDPepb - pre_len - 13	1035:8:33911:33937	490552	0	True				
ANR	491356	AssignmentExpression	L4 = LDPepb - pre_len - 13		490552	0		=			
ANR	491357	Identifier	L4		490552	0					
ANR	491358	AdditiveExpression	LDPepb - pre_len - 13		490552	1		-			
ANR	491359	Identifier	LDPepb		490552	0					
ANR	491360	AdditiveExpression	pre_len - 13		490552	1		-			
ANR	491361	Identifier	pre_len		490552	0					
ANR	491362	PrimaryExpression	13		490552	1					
ANR	491363	ElseStatement	else		490552	0					
ANR	491364	IfStatement	if ( post_len == 0 )		490552	0					
ANR	491365	Condition	post_len == 0	1036:15:33954:33966	490552	0	True				
ANR	491366	EqualityExpression	post_len == 0		490552	0		==			
ANR	491367	Identifier	post_len		490552	0					
ANR	491368	PrimaryExpression	0		490552	1					
ANR	491369	CompoundStatement		243:30:7364:7364	490552	1					
ANR	491370	ExpressionStatement	L4 = 0	1037:8:33979:33985	490552	0	True				
ANR	491371	AssignmentExpression	L4 = 0		490552	0		=			
ANR	491372	Identifier	L4		490552	0					
ANR	491373	PrimaryExpression	0		490552	1					
ANR	491374	ElseStatement	else		490552	0					
ANR	491375	CompoundStatement		245:11:7393:7393	490552	0					
ANR	491376	ExpressionStatement	L4 = post_len	1039:8:34008:34021	490552	0	True				
ANR	491377	AssignmentExpression	L4 = post_len		490552	0		=			
ANR	491378	Identifier	L4		490552	0					
ANR	491379	Identifier	post_len		490552	1					
ANR	491380	ExpressionStatement	L3_buf = L2_buf	1042:4:34034:34049	490552	42	True				
ANR	491381	AssignmentExpression	L3_buf = L2_buf		490552	0		=			
ANR	491382	Identifier	L3_buf		490552	0					
ANR	491383	Identifier	L2_buf		490552	1					
ANR	491384	IfStatement	if ( L4 > ( unsigned long ) cio_numbytesleft ( j2k -> cio ) )		490552	43					
ANR	491385	Condition	L4 > ( unsigned long ) cio_numbytesleft ( j2k -> cio )	1045:8:34117:34163	490552	0	True				
ANR	491386	RelationalExpression	L4 > ( unsigned long ) cio_numbytesleft ( j2k -> cio )		490552	0		>			
ANR	491387	Identifier	L4		490552	0					
ANR	491388	CastExpression	( unsigned long ) cio_numbytesleft ( j2k -> cio )		490552	1					
ANR	491389	CastTarget	unsigned long		490552	0					
ANR	491390	CallExpression	cio_numbytesleft ( j2k -> cio )		490552	1					
ANR	491391	Callee	cio_numbytesleft		490552	0					
ANR	491392	Identifier	cio_numbytesleft		490552	0					
ANR	491393	ArgumentList	j2k -> cio		490552	1					
ANR	491394	Argument	j2k -> cio		490552	0					
ANR	491395	PtrMemberAccess	j2k -> cio		490552	0					
ANR	491396	Identifier	j2k		490552	0					
ANR	491397	Identifier	cio		490552	1					
ANR	491398	CompoundStatement		254:4:7588:7588	490552	1					
ANR	491399	ReturnStatement	return OPJ_FALSE ;	1048:8:34203:34219	490552	0	True				
ANR	491400	Identifier	OPJ_FALSE		490552	0					
ANR	491401	IfStatement	if ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 1 )		490552	44					
ANR	491402	Condition	( ( Pepb & 0xF0000000 ) >> 28 ) == 1	1052:8:34291:34322	490552	0	True				
ANR	491403	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 1		490552	0		==			
ANR	491404	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491405	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491406	Identifier	Pepb		490552	0					
ANR	491407	PrimaryExpression	0xF0000000		490552	1					
ANR	491408	PrimaryExpression	28		490552	1					
ANR	491409	PrimaryExpression	1		490552	1					
ANR	491410	CompoundStatement		259:42:7720:7720	490552	1					
ANR	491411	IfStatement	if ( ( 16 * ( ( Pepb & 0x00000001 ) + 1 ) ) == 16 )		490552	0					
ANR	491412	Condition	( 16 * ( ( Pepb & 0x00000001 ) + 1 ) ) == 16	1054:12:34362:34399	490552	0	True				
ANR	491413	EqualityExpression	( 16 * ( ( Pepb & 0x00000001 ) + 1 ) ) == 16		490552	0		==			
ANR	491414	MultiplicativeExpression	16 * ( ( Pepb & 0x00000001 ) + 1 )		490552	0		*			
ANR	491415	PrimaryExpression	16		490552	0					
ANR	491416	AdditiveExpression	( Pepb & 0x00000001 ) + 1		490552	1		+			
ANR	491417	BitAndExpression	Pepb & 0x00000001		490552	0		&			
ANR	491418	Identifier	Pepb		490552	0					
ANR	491419	PrimaryExpression	0x00000001		490552	1					
ANR	491420	PrimaryExpression	1		490552	1					
ANR	491421	PrimaryExpression	16		490552	1					
ANR	491422	CompoundStatement		264:12:7837:7888	490552	1					
ANR	491423	IdentifierDeclStatement	"unsigned short int mycrc = 0x0000 , filecrc = 0x0000 ;"	1057:12:34442:34493	490552	0	True				
ANR	491424	IdentifierDecl	mycrc = 0x0000		490552	0					
ANR	491425	IdentifierDeclType	unsigned short int		490552	0					
ANR	491426	Identifier	mycrc		490552	1					
ANR	491427	AssignmentExpression	mycrc = 0x0000		490552	2		=			
ANR	491428	Identifier	mycrc		490552	0					
ANR	491429	PrimaryExpression	0x0000		490552	1					
ANR	491430	IdentifierDecl	filecrc = 0x0000		490552	1					
ANR	491431	IdentifierDeclType	unsigned short int		490552	0					
ANR	491432	Identifier	filecrc		490552	1					
ANR	491433	AssignmentExpression	filecrc = 0x0000		490552	2		=			
ANR	491434	Identifier	filecrc		490552	0					
ANR	491435	PrimaryExpression	0x0000		490552	1					
ANR	491436	ExpressionStatement	remaining = L4	1060:12:34548:34562	490552	1	True				
ANR	491437	AssignmentExpression	remaining = L4		490552	0		=			
ANR	491438	Identifier	remaining		490552	0					
ANR	491439	Identifier	L4		490552	1					
ANR	491440	WhileStatement	while ( remaining -- )		490552	2					
ANR	491441	Condition	remaining --	1061:19:34583:34593	490552	0	True				
ANR	491442	PostIncDecOperationExpression	remaining --		490552	0					
ANR	491443	Identifier	remaining		490552	0					
ANR	491444	IncDec	--		490552	1					
ANR	491445	CompoundStatement		268:32:7991:7991	490552	1					
ANR	491446	ExpressionStatement	"jpwl_updateCRC16 ( & mycrc , * ( L4_buf ++ ) )"	1062:16:34614:34651	490552	0	True				
ANR	491447	CallExpression	"jpwl_updateCRC16 ( & mycrc , * ( L4_buf ++ ) )"		490552	0					
ANR	491448	Callee	jpwl_updateCRC16		490552	0					
ANR	491449	Identifier	jpwl_updateCRC16		490552	0					
ANR	491450	ArgumentList	& mycrc		490552	1					
ANR	491451	Argument	& mycrc		490552	0					
ANR	491452	UnaryOperationExpression	& mycrc		490552	0					
ANR	491453	UnaryOperator	&		490552	0					
ANR	491454	Identifier	mycrc		490552	1					
ANR	491455	Argument	* ( L4_buf ++ )		490552	1					
ANR	491456	UnaryOperationExpression	* ( L4_buf ++ )		490552	0					
ANR	491457	UnaryOperator	*		490552	0					
ANR	491458	PostIncDecOperationExpression	L4_buf ++		490552	1					
ANR	491459	Identifier	L4_buf		490552	0					
ANR	491460	IncDec	++		490552	1					
ANR	491461	ExpressionStatement	filecrc = * ( L3_buf ++ ) << 8	1066:12:34717:34743	490552	3	True				
ANR	491462	AssignmentExpression	filecrc = * ( L3_buf ++ ) << 8		490552	0		=			
ANR	491463	Identifier	filecrc		490552	0					
ANR	491464	ShiftExpression	* ( L3_buf ++ ) << 8		490552	1		<<			
ANR	491465	UnaryOperationExpression	* ( L3_buf ++ )		490552	0					
ANR	491466	UnaryOperator	*		490552	0					
ANR	491467	PostIncDecOperationExpression	L3_buf ++		490552	1					
ANR	491468	Identifier	L3_buf		490552	0					
ANR	491469	IncDec	++		490552	1					
ANR	491470	PrimaryExpression	8		490552	1					
ANR	491471	ExpressionStatement	filecrc |= * ( L3_buf ++ )	1067:12:34757:34779	490552	4	True				
ANR	491472	AssignmentExpression	filecrc |= * ( L3_buf ++ )		490552	0		|=			
ANR	491473	Identifier	filecrc		490552	0					
ANR	491474	UnaryOperationExpression	* ( L3_buf ++ )		490552	1					
ANR	491475	UnaryOperator	*		490552	0					
ANR	491476	PostIncDecOperationExpression	L3_buf ++		490552	1					
ANR	491477	Identifier	L3_buf		490552	0					
ANR	491478	IncDec	++		490552	1					
ANR	491479	IfStatement	if ( mycrc == filecrc )		490552	5					
ANR	491480	Condition	mycrc == filecrc	1070:16:34836:34851	490552	0	True				
ANR	491481	EqualityExpression	mycrc == filecrc		490552	0		==			
ANR	491482	Identifier	mycrc		490552	0					
ANR	491483	Identifier	filecrc		490552	1					
ANR	491484	CompoundStatement		277:34:8249:8249	490552	1					
ANR	491485	IfStatement	if ( conn == NULL )		490552	0					
ANR	491486	Condition	conn == NULL	1071:20:34876:34887	490552	0	True				
ANR	491487	EqualityExpression	conn == NULL		490552	0		==			
ANR	491488	Identifier	conn		490552	0					
ANR	491489	Identifier	NULL		490552	1					
ANR	491490	CompoundStatement		278:34:8285:8285	490552	1					
ANR	491491	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- CRC is OK\\n"" )"	1072:20:34912:34964	490552	0	True				
ANR	491492	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- CRC is OK\\n"" )"		490552	0					
ANR	491493	Callee	opj_event_msg		490552	0					
ANR	491494	Identifier	opj_event_msg		490552	0					
ANR	491495	ArgumentList	j2k -> cinfo		490552	1					
ANR	491496	Argument	j2k -> cinfo		490552	0					
ANR	491497	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	491498	Identifier	j2k		490552	0					
ANR	491499	Identifier	cinfo		490552	1					
ANR	491500	Argument	EVT_INFO		490552	1					
ANR	491501	Identifier	EVT_INFO		490552	0					
ANR	491502	Argument	"""- CRC is OK\\n"""		490552	2					
ANR	491503	PrimaryExpression	"""- CRC is OK\\n"""		490552	0					
ANR	491504	ElseStatement	else		490552	0					
ANR	491505	CompoundStatement		281:19:8398:8398	490552	0					
ANR	491506	IfStatement	if ( conn == NULL )		490552	0					
ANR	491507	Condition	conn == NULL	1075:20:35025:35036	490552	0	True				
ANR	491508	EqualityExpression	conn == NULL		490552	0		==			
ANR	491509	Identifier	conn		490552	0					
ANR	491510	Identifier	NULL		490552	1					
ANR	491511	CompoundStatement		282:34:8434:8434	490552	1					
ANR	491512	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""- CRC is KO (r=%d, c=%d)\\n"" , filecrc , mycrc )"	1076:20:35061:35179	490552	0	True				
ANR	491513	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""- CRC is KO (r=%d, c=%d)\\n"" , filecrc , mycrc )"		490552	0					
ANR	491514	Callee	opj_event_msg		490552	0					
ANR	491515	Identifier	opj_event_msg		490552	0					
ANR	491516	ArgumentList	j2k -> cinfo		490552	1					
ANR	491517	Argument	j2k -> cinfo		490552	0					
ANR	491518	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	491519	Identifier	j2k		490552	0					
ANR	491520	Identifier	cinfo		490552	1					
ANR	491521	Argument	EVT_WARNING		490552	1					
ANR	491522	Identifier	EVT_WARNING		490552	0					
ANR	491523	Argument	"""- CRC is KO (r=%d, c=%d)\\n"""		490552	2					
ANR	491524	PrimaryExpression	"""- CRC is KO (r=%d, c=%d)\\n"""		490552	0					
ANR	491525	Argument	filecrc		490552	3					
ANR	491526	Identifier	filecrc		490552	0					
ANR	491527	Argument	mycrc		490552	4					
ANR	491528	Identifier	mycrc		490552	0					
ANR	491529	ExpressionStatement	errflag = OPJ_TRUE	1079:16:35215:35233	490552	1	True				
ANR	491530	AssignmentExpression	errflag = OPJ_TRUE		490552	0		=			
ANR	491531	Identifier	errflag		490552	0					
ANR	491532	Identifier	OPJ_TRUE		490552	1					
ANR	491533	IfStatement	if ( ( 16 * ( ( Pepb & 0x00000001 ) + 1 ) ) == 32 )		490552	1					
ANR	491534	Condition	( 16 * ( ( Pepb & 0x00000001 ) + 1 ) ) == 32	1083:12:35272:35309	490552	0	True				
ANR	491535	EqualityExpression	( 16 * ( ( Pepb & 0x00000001 ) + 1 ) ) == 32		490552	0		==			
ANR	491536	MultiplicativeExpression	16 * ( ( Pepb & 0x00000001 ) + 1 )		490552	0		*			
ANR	491537	PrimaryExpression	16		490552	0					
ANR	491538	AdditiveExpression	( Pepb & 0x00000001 ) + 1		490552	1		+			
ANR	491539	BitAndExpression	Pepb & 0x00000001		490552	0		&			
ANR	491540	Identifier	Pepb		490552	0					
ANR	491541	PrimaryExpression	0x00000001		490552	1					
ANR	491542	PrimaryExpression	1		490552	1					
ANR	491543	PrimaryExpression	32		490552	1					
ANR	491544	CompoundStatement		293:12:8747:8805	490552	1					
ANR	491545	IdentifierDeclStatement	"unsigned long int mycrc = 0x00000000 , filecrc = 0x00000000 ;"	1086:12:35352:35410	490552	0	True				
ANR	491546	IdentifierDecl	mycrc = 0x00000000		490552	0					
ANR	491547	IdentifierDeclType	unsigned long int		490552	0					
ANR	491548	Identifier	mycrc		490552	1					
ANR	491549	AssignmentExpression	mycrc = 0x00000000		490552	2		=			
ANR	491550	Identifier	mycrc		490552	0					
ANR	491551	PrimaryExpression	0x00000000		490552	1					
ANR	491552	IdentifierDecl	filecrc = 0x00000000		490552	1					
ANR	491553	IdentifierDeclType	unsigned long int		490552	0					
ANR	491554	Identifier	filecrc		490552	1					
ANR	491555	AssignmentExpression	filecrc = 0x00000000		490552	2		=			
ANR	491556	Identifier	filecrc		490552	0					
ANR	491557	PrimaryExpression	0x00000000		490552	1					
ANR	491558	ExpressionStatement	remaining = L4	1089:12:35465:35479	490552	1	True				
ANR	491559	AssignmentExpression	remaining = L4		490552	0		=			
ANR	491560	Identifier	remaining		490552	0					
ANR	491561	Identifier	L4		490552	1					
ANR	491562	WhileStatement	while ( remaining -- )		490552	2					
ANR	491563	Condition	remaining --	1090:19:35500:35510	490552	0	True				
ANR	491564	PostIncDecOperationExpression	remaining --		490552	0					
ANR	491565	Identifier	remaining		490552	0					
ANR	491566	IncDec	--		490552	1					
ANR	491567	CompoundStatement		297:32:8908:8908	490552	1					
ANR	491568	ExpressionStatement	"jpwl_updateCRC32 ( & mycrc , * ( L4_buf ++ ) )"	1091:16:35531:35568	490552	0	True				
ANR	491569	CallExpression	"jpwl_updateCRC32 ( & mycrc , * ( L4_buf ++ ) )"		490552	0					
ANR	491570	Callee	jpwl_updateCRC32		490552	0					
ANR	491571	Identifier	jpwl_updateCRC32		490552	0					
ANR	491572	ArgumentList	& mycrc		490552	1					
ANR	491573	Argument	& mycrc		490552	0					
ANR	491574	UnaryOperationExpression	& mycrc		490552	0					
ANR	491575	UnaryOperator	&		490552	0					
ANR	491576	Identifier	mycrc		490552	1					
ANR	491577	Argument	* ( L4_buf ++ )		490552	1					
ANR	491578	UnaryOperationExpression	* ( L4_buf ++ )		490552	0					
ANR	491579	UnaryOperator	*		490552	0					
ANR	491580	PostIncDecOperationExpression	L4_buf ++		490552	1					
ANR	491581	Identifier	L4_buf		490552	0					
ANR	491582	IncDec	++		490552	1					
ANR	491583	ExpressionStatement	filecrc = * ( L3_buf ++ ) << 24	1095:12:35634:35661	490552	3	True				
ANR	491584	AssignmentExpression	filecrc = * ( L3_buf ++ ) << 24		490552	0		=			
ANR	491585	Identifier	filecrc		490552	0					
ANR	491586	ShiftExpression	* ( L3_buf ++ ) << 24		490552	1		<<			
ANR	491587	UnaryOperationExpression	* ( L3_buf ++ )		490552	0					
ANR	491588	UnaryOperator	*		490552	0					
ANR	491589	PostIncDecOperationExpression	L3_buf ++		490552	1					
ANR	491590	Identifier	L3_buf		490552	0					
ANR	491591	IncDec	++		490552	1					
ANR	491592	PrimaryExpression	24		490552	1					
ANR	491593	ExpressionStatement	filecrc |= * ( L3_buf ++ ) << 16	1096:12:35675:35703	490552	4	True				
ANR	491594	AssignmentExpression	filecrc |= * ( L3_buf ++ ) << 16		490552	0		|=			
ANR	491595	Identifier	filecrc		490552	0					
ANR	491596	ShiftExpression	* ( L3_buf ++ ) << 16		490552	1		<<			
ANR	491597	UnaryOperationExpression	* ( L3_buf ++ )		490552	0					
ANR	491598	UnaryOperator	*		490552	0					
ANR	491599	PostIncDecOperationExpression	L3_buf ++		490552	1					
ANR	491600	Identifier	L3_buf		490552	0					
ANR	491601	IncDec	++		490552	1					
ANR	491602	PrimaryExpression	16		490552	1					
ANR	491603	ExpressionStatement	filecrc |= * ( L3_buf ++ ) << 8	1097:12:35717:35744	490552	5	True				
ANR	491604	AssignmentExpression	filecrc |= * ( L3_buf ++ ) << 8		490552	0		|=			
ANR	491605	Identifier	filecrc		490552	0					
ANR	491606	ShiftExpression	* ( L3_buf ++ ) << 8		490552	1		<<			
ANR	491607	UnaryOperationExpression	* ( L3_buf ++ )		490552	0					
ANR	491608	UnaryOperator	*		490552	0					
ANR	491609	PostIncDecOperationExpression	L3_buf ++		490552	1					
ANR	491610	Identifier	L3_buf		490552	0					
ANR	491611	IncDec	++		490552	1					
ANR	491612	PrimaryExpression	8		490552	1					
ANR	491613	ExpressionStatement	filecrc |= * ( L3_buf ++ )	1098:12:35758:35780	490552	6	True				
ANR	491614	AssignmentExpression	filecrc |= * ( L3_buf ++ )		490552	0		|=			
ANR	491615	Identifier	filecrc		490552	0					
ANR	491616	UnaryOperationExpression	* ( L3_buf ++ )		490552	1					
ANR	491617	UnaryOperator	*		490552	0					
ANR	491618	PostIncDecOperationExpression	L3_buf ++		490552	1					
ANR	491619	Identifier	L3_buf		490552	0					
ANR	491620	IncDec	++		490552	1					
ANR	491621	IfStatement	if ( mycrc == filecrc )		490552	7					
ANR	491622	Condition	mycrc == filecrc	1101:16:35837:35852	490552	0	True				
ANR	491623	EqualityExpression	mycrc == filecrc		490552	0		==			
ANR	491624	Identifier	mycrc		490552	0					
ANR	491625	Identifier	filecrc		490552	1					
ANR	491626	CompoundStatement		308:34:9250:9250	490552	1					
ANR	491627	IfStatement	if ( conn == NULL )		490552	0					
ANR	491628	Condition	conn == NULL	1102:20:35877:35888	490552	0	True				
ANR	491629	EqualityExpression	conn == NULL		490552	0		==			
ANR	491630	Identifier	conn		490552	0					
ANR	491631	Identifier	NULL		490552	1					
ANR	491632	CompoundStatement		309:34:9286:9286	490552	1					
ANR	491633	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- CRC is OK\\n"" )"	1103:20:35913:35965	490552	0	True				
ANR	491634	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- CRC is OK\\n"" )"		490552	0					
ANR	491635	Callee	opj_event_msg		490552	0					
ANR	491636	Identifier	opj_event_msg		490552	0					
ANR	491637	ArgumentList	j2k -> cinfo		490552	1					
ANR	491638	Argument	j2k -> cinfo		490552	0					
ANR	491639	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	491640	Identifier	j2k		490552	0					
ANR	491641	Identifier	cinfo		490552	1					
ANR	491642	Argument	EVT_INFO		490552	1					
ANR	491643	Identifier	EVT_INFO		490552	0					
ANR	491644	Argument	"""- CRC is OK\\n"""		490552	2					
ANR	491645	PrimaryExpression	"""- CRC is OK\\n"""		490552	0					
ANR	491646	ElseStatement	else		490552	0					
ANR	491647	CompoundStatement		312:19:9399:9399	490552	0					
ANR	491648	IfStatement	if ( conn == NULL )		490552	0					
ANR	491649	Condition	conn == NULL	1106:20:36026:36037	490552	0	True				
ANR	491650	EqualityExpression	conn == NULL		490552	0		==			
ANR	491651	Identifier	conn		490552	0					
ANR	491652	Identifier	NULL		490552	1					
ANR	491653	CompoundStatement		313:34:9435:9435	490552	1					
ANR	491654	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""- CRC is KO (r=%d, c=%d)\\n"" , filecrc , mycrc )"	1107:20:36062:36180	490552	0	True				
ANR	491655	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""- CRC is KO (r=%d, c=%d)\\n"" , filecrc , mycrc )"		490552	0					
ANR	491656	Callee	opj_event_msg		490552	0					
ANR	491657	Identifier	opj_event_msg		490552	0					
ANR	491658	ArgumentList	j2k -> cinfo		490552	1					
ANR	491659	Argument	j2k -> cinfo		490552	0					
ANR	491660	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	491661	Identifier	j2k		490552	0					
ANR	491662	Identifier	cinfo		490552	1					
ANR	491663	Argument	EVT_WARNING		490552	1					
ANR	491664	Identifier	EVT_WARNING		490552	0					
ANR	491665	Argument	"""- CRC is KO (r=%d, c=%d)\\n"""		490552	2					
ANR	491666	PrimaryExpression	"""- CRC is KO (r=%d, c=%d)\\n"""		490552	0					
ANR	491667	Argument	filecrc		490552	3					
ANR	491668	Identifier	filecrc		490552	0					
ANR	491669	Argument	mycrc		490552	4					
ANR	491670	Identifier	mycrc		490552	0					
ANR	491671	ExpressionStatement	errflag = OPJ_TRUE	1110:16:36216:36234	490552	1	True				
ANR	491672	AssignmentExpression	errflag = OPJ_TRUE		490552	0		=			
ANR	491673	Identifier	errflag		490552	0					
ANR	491674	Identifier	OPJ_TRUE		490552	1					
ANR	491675	ElseStatement	else		490552	0					
ANR	491676	IfStatement	if ( Pepb == 0xFFFFFFFF )		490552	0					
ANR	491677	Condition	Pepb == 0xFFFFFFFF	1114:15:36276:36293	490552	0	True				
ANR	491678	EqualityExpression	Pepb == 0xFFFFFFFF		490552	0		==			
ANR	491679	Identifier	Pepb		490552	0					
ANR	491680	PrimaryExpression	0xFFFFFFFF		490552	1					
ANR	491681	CompoundStatement		321:35:9691:9691	490552	1					
ANR	491682	ExpressionStatement	remaining = L4	1118:8:36376:36390	490552	0	True				
ANR	491683	AssignmentExpression	remaining = L4		490552	0		=			
ANR	491684	Identifier	remaining		490552	0					
ANR	491685	Identifier	L4		490552	1					
ANR	491686	WhileStatement	while ( remaining -- )		490552	1					
ANR	491687	Condition	remaining --	1119:15:36407:36417	490552	0	True				
ANR	491688	PostIncDecOperationExpression	remaining --		490552	0					
ANR	491689	Identifier	remaining		490552	0					
ANR	491690	IncDec	--		490552	1					
ANR	491691	CompoundStatement		326:28:9815:9815	490552	1					
ANR	491692	ExpressionStatement	L4_buf ++	1120:12:36434:36442	490552	0	True				
ANR	491693	PostIncDecOperationExpression	L4_buf ++		490552	0					
ANR	491694	Identifier	L4_buf		490552	0					
ANR	491695	IncDec	++		490552	1					
ANR	491696	ElseStatement	else		490552	0					
ANR	491697	IfStatement	if ( ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 2 ) || ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 0 ) )		490552	0					
ANR	491698	Condition	( ( ( Pepb & 0xF0000000 ) >> 28 ) == 2 ) || ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 0 )	1123:15:36470:36556	490552	0	True				
ANR	491699	OrExpression	( ( ( Pepb & 0xF0000000 ) >> 28 ) == 2 ) || ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 0 )		490552	0		||			
ANR	491700	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 2		490552	0		==			
ANR	491701	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491702	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491703	Identifier	Pepb		490552	0					
ANR	491704	PrimaryExpression	0xF0000000		490552	1					
ANR	491705	PrimaryExpression	28		490552	1					
ANR	491706	PrimaryExpression	2		490552	1					
ANR	491707	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 0		490552	1		==			
ANR	491708	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491709	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491710	Identifier	Pepb		490552	0					
ANR	491711	PrimaryExpression	0xF0000000		490552	1					
ANR	491712	PrimaryExpression	28		490552	1					
ANR	491713	PrimaryExpression	0		490552	1					
ANR	491714	CompoundStatement		331:51:9954:9954	490552	1					
ANR	491715	IfStatement	if ( ( ( Pepb & 0xF0000000 ) >> 28 ) == 0 )		490552	0					
ANR	491716	Condition	( ( Pepb & 0xF0000000 ) >> 28 ) == 0	1127:12:36603:36634	490552	0	True				
ANR	491717	EqualityExpression	( ( Pepb & 0xF0000000 ) >> 28 ) == 0		490552	0		==			
ANR	491718	ShiftExpression	( Pepb & 0xF0000000 ) >> 28		490552	0		>>			
ANR	491719	BitAndExpression	Pepb & 0xF0000000		490552	0		&			
ANR	491720	Identifier	Pepb		490552	0					
ANR	491721	PrimaryExpression	0xF0000000		490552	1					
ANR	491722	PrimaryExpression	28		490552	1					
ANR	491723	PrimaryExpression	0		490552	1					
ANR	491724	CompoundStatement		334:46:10032:10032	490552	1					
ANR	491725	ExpressionStatement	k_post = k_pre	1129:12:36652:36666	490552	0	True				
ANR	491726	AssignmentExpression	k_post = k_pre		490552	0		=			
ANR	491727	Identifier	k_post		490552	0					
ANR	491728	Identifier	k_pre		490552	1					
ANR	491729	ExpressionStatement	n_post = n_pre	1130:12:36680:36694	490552	1	True				
ANR	491730	AssignmentExpression	n_post = n_pre		490552	0		=			
ANR	491731	Identifier	n_post		490552	0					
ANR	491732	Identifier	n_pre		490552	1					
ANR	491733	ElseStatement	else		490552	0					
ANR	491734	CompoundStatement		339:15:10107:10107	490552	0					
ANR	491735	ExpressionStatement	k_post = 32	1134:12:36727:36738	490552	0	True				
ANR	491736	AssignmentExpression	k_post = 32		490552	0		=			
ANR	491737	Identifier	k_post		490552	0					
ANR	491738	PrimaryExpression	32		490552	1					
ANR	491739	ExpressionStatement	n_post = ( Pepb & 0x0000FF00 ) >> 8	1135:12:36752:36785	490552	1	True				
ANR	491740	AssignmentExpression	n_post = ( Pepb & 0x0000FF00 ) >> 8		490552	0		=			
ANR	491741	Identifier	n_post		490552	0					
ANR	491742	ShiftExpression	( Pepb & 0x0000FF00 ) >> 8		490552	1		>>			
ANR	491743	BitAndExpression	Pepb & 0x0000FF00		490552	0		&			
ANR	491744	Identifier	Pepb		490552	0					
ANR	491745	PrimaryExpression	0x0000FF00		490552	1					
ANR	491746	PrimaryExpression	8		490552	1					
ANR	491747	ExpressionStatement	P = n_post - k_post	1139:8:36845:36864	490552	1	True				
ANR	491748	AssignmentExpression	P = n_post - k_post		490552	0		=			
ANR	491749	Identifier	P		490552	0					
ANR	491750	AdditiveExpression	n_post - k_post		490552	1		-			
ANR	491751	Identifier	n_post		490552	0					
ANR	491752	Identifier	k_post		490552	1					
ANR	491753	ExpressionStatement	NN_P = NN - P	1140:8:36874:36887	490552	2	True				
ANR	491754	AssignmentExpression	NN_P = NN - P		490552	0		=			
ANR	491755	Identifier	NN_P		490552	0					
ANR	491756	AdditiveExpression	NN - P		490552	1		-			
ANR	491757	Identifier	NN		490552	0					
ANR	491758	Identifier	P		490552	1					
ANR	491759	ExpressionStatement	tt = ( int ) floor ( ( float ) P / 2.0F )	1141:8:36897:36931	490552	3	True				
ANR	491760	AssignmentExpression	tt = ( int ) floor ( ( float ) P / 2.0F )		490552	0		=			
ANR	491761	Identifier	tt		490552	0					
ANR	491762	CastExpression	( int ) floor ( ( float ) P / 2.0F )		490552	1					
ANR	491763	CastTarget	int		490552	0					
ANR	491764	CallExpression	floor ( ( float ) P / 2.0F )		490552	1					
ANR	491765	Callee	floor		490552	0					
ANR	491766	Identifier	floor		490552	0					
ANR	491767	ArgumentList	( float ) P / 2.0F		490552	1					
ANR	491768	Argument	( float ) P / 2.0F		490552	0					
ANR	491769	MultiplicativeExpression	( float ) P / 2.0F		490552	0		/			
ANR	491770	CastExpression	( float ) P		490552	0					
ANR	491771	CastTarget	float		490552	0					
ANR	491772	Identifier	P		490552	1					
ANR	491773	PrimaryExpression	2.0F		490552	1					
ANR	491774	ExpressionStatement	"memset ( codeword , 0 , NN )"	1142:8:36976:36999	490552	4	True				
ANR	491775	CallExpression	"memset ( codeword , 0 , NN )"		490552	0					
ANR	491776	Callee	memset		490552	0					
ANR	491777	Identifier	memset		490552	0					
ANR	491778	ArgumentList	codeword		490552	1					
ANR	491779	Argument	codeword		490552	0					
ANR	491780	Identifier	codeword		490552	0					
ANR	491781	Argument	0		490552	1					
ANR	491782	PrimaryExpression	0		490552	0					
ANR	491783	Argument	NN		490552	2					
ANR	491784	Identifier	NN		490552	0					
ANR	491785	ExpressionStatement	parityword = codeword + NN_P	1143:8:37009:37037	490552	5	True				
ANR	491786	AssignmentExpression	parityword = codeword + NN_P		490552	0		=			
ANR	491787	Identifier	parityword		490552	0					
ANR	491788	AdditiveExpression	codeword + NN_P		490552	1		+			
ANR	491789	Identifier	codeword		490552	0					
ANR	491790	Identifier	NN_P		490552	1					
ANR	491791	ExpressionStatement	init_rs ( NN_P )	1144:8:37047:37060	490552	6	True				
ANR	491792	CallExpression	init_rs ( NN_P )		490552	0					
ANR	491793	Callee	init_rs		490552	0					
ANR	491794	Identifier	init_rs		490552	0					
ANR	491795	ArgumentList	NN_P		490552	1					
ANR	491796	Argument	NN_P		490552	0					
ANR	491797	Identifier	NN_P		490552	0					
ANR	491798	ExpressionStatement	L3_buf = L2_buf	1148:8:37157:37172	490552	7	True				
ANR	491799	AssignmentExpression	L3_buf = L2_buf		490552	0		=			
ANR	491800	Identifier	L3_buf		490552	0					
ANR	491801	Identifier	L2_buf		490552	1					
ANR	491802	ExpressionStatement	remaining = L4	1149:8:37182:37196	490552	8	True				
ANR	491803	AssignmentExpression	remaining = L4		490552	0		=			
ANR	491804	Identifier	remaining		490552	0					
ANR	491805	Identifier	L4		490552	1					
ANR	491806	WhileStatement	while ( remaining )		490552	9					
ANR	491807	Condition	remaining	1150:15:37213:37221	490552	0	True				
ANR	491808	Identifier	remaining		490552	0					
ANR	491809	CompoundStatement		357:26:10619:10619	490552	1					
ANR	491810	ExpressionStatement	"memset ( codeword , 0 , NN )"	1155:12:37442:37465	490552	0	True				
ANR	491811	CallExpression	"memset ( codeword , 0 , NN )"		490552	0					
ANR	491812	Callee	memset		490552	0					
ANR	491813	Identifier	memset		490552	0					
ANR	491814	ArgumentList	codeword		490552	1					
ANR	491815	Argument	codeword		490552	0					
ANR	491816	Identifier	codeword		490552	0					
ANR	491817	Argument	0		490552	1					
ANR	491818	PrimaryExpression	0		490552	0					
ANR	491819	Argument	NN		490552	2					
ANR	491820	Identifier	NN		490552	0					
ANR	491821	IfStatement	if ( remaining < k_post )		490552	1					
ANR	491822	Condition	remaining < k_post	1158:16:37542:37559	490552	0	True				
ANR	491823	RelationalExpression	remaining < k_post		490552	0		<			
ANR	491824	Identifier	remaining		490552	0					
ANR	491825	Identifier	k_post		490552	1					
ANR	491826	CompoundStatement		365:36:10957:10957	490552	1					
ANR	491827	ExpressionStatement	"memcpy ( codeword , L4_buf , remaining )"	1159:16:37580:37615	490552	0	True				
ANR	491828	CallExpression	"memcpy ( codeword , L4_buf , remaining )"		490552	0					
ANR	491829	Callee	memcpy		490552	0					
ANR	491830	Identifier	memcpy		490552	0					
ANR	491831	ArgumentList	codeword		490552	1					
ANR	491832	Argument	codeword		490552	0					
ANR	491833	Identifier	codeword		490552	0					
ANR	491834	Argument	L4_buf		490552	1					
ANR	491835	Identifier	L4_buf		490552	0					
ANR	491836	Argument	remaining		490552	2					
ANR	491837	Identifier	remaining		490552	0					
ANR	491838	ElseStatement	else		490552	0					
ANR	491839	CompoundStatement		367:19:11031:11031	490552	0					
ANR	491840	ExpressionStatement	"memcpy ( codeword , L4_buf , k_post )"	1161:16:37654:37686	490552	0	True				
ANR	491841	CallExpression	"memcpy ( codeword , L4_buf , k_post )"		490552	0					
ANR	491842	Callee	memcpy		490552	0					
ANR	491843	Identifier	memcpy		490552	0					
ANR	491844	ArgumentList	codeword		490552	1					
ANR	491845	Argument	codeword		490552	0					
ANR	491846	Identifier	codeword		490552	0					
ANR	491847	Argument	L4_buf		490552	1					
ANR	491848	Identifier	L4_buf		490552	0					
ANR	491849	Argument	k_post		490552	2					
ANR	491850	Identifier	k_post		490552	0					
ANR	491851	ExpressionStatement	"memcpy ( parityword , L3_buf , P )"	1165:12:37772:37801	490552	2	True				
ANR	491852	CallExpression	"memcpy ( parityword , L3_buf , P )"		490552	0					
ANR	491853	Callee	memcpy		490552	0					
ANR	491854	Identifier	memcpy		490552	0					
ANR	491855	ArgumentList	parityword		490552	1					
ANR	491856	Argument	parityword		490552	0					
ANR	491857	Identifier	parityword		490552	0					
ANR	491858	Argument	L3_buf		490552	1					
ANR	491859	Identifier	L3_buf		490552	0					
ANR	491860	Argument	P		490552	2					
ANR	491861	Identifier	P		490552	0					
ANR	491862	ExpressionStatement	"status = eras_dec_rs ( codeword , NULL , 0 )"	1168:12:37888:37927	490552	3	True				
ANR	491863	AssignmentExpression	"status = eras_dec_rs ( codeword , NULL , 0 )"		490552	0		=			
ANR	491864	Identifier	status		490552	0					
ANR	491865	CallExpression	"eras_dec_rs ( codeword , NULL , 0 )"		490552	1					
ANR	491866	Callee	eras_dec_rs		490552	0					
ANR	491867	Identifier	eras_dec_rs		490552	0					
ANR	491868	ArgumentList	codeword		490552	1					
ANR	491869	Argument	codeword		490552	0					
ANR	491870	Identifier	codeword		490552	0					
ANR	491871	Argument	NULL		490552	1					
ANR	491872	Identifier	NULL		490552	0					
ANR	491873	Argument	0		490552	2					
ANR	491874	PrimaryExpression	0		490552	0					
ANR	491875	IfStatement	if ( status == - 1 )		490552	4					
ANR	491876	Condition	status == - 1	1169:16:37945:37956	490552	0	True				
ANR	491877	EqualityExpression	status == - 1		490552	0		==			
ANR	491878	Identifier	status		490552	0					
ANR	491879	UnaryOperationExpression	- 1		490552	1					
ANR	491880	UnaryOperator	-		490552	0					
ANR	491881	PrimaryExpression	1		490552	1					
ANR	491882	CompoundStatement		376:30:11354:11354	490552	1					
ANR	491883	ExpressionStatement	errflag = OPJ_TRUE	1173:16:38196:38214	490552	0	True				
ANR	491884	AssignmentExpression	errflag = OPJ_TRUE		490552	0		=			
ANR	491885	Identifier	errflag		490552	0					
ANR	491886	Identifier	OPJ_TRUE		490552	1					
ANR	491887	ElseStatement	else		490552	0					
ANR	491888	IfStatement	if ( status == 0 )		490552	0					
ANR	491889	Condition	status == 0	1175:23:38240:38250	490552	0	True				
ANR	491890	EqualityExpression	status == 0		490552	0		==			
ANR	491891	Identifier	status		490552	0					
ANR	491892	PrimaryExpression	0		490552	1					
ANR	491893	CompoundStatement		382:36:11648:11648	490552	1					
ANR	491894	ElseStatement	else		490552	0					
ANR	491895	IfStatement	if ( status <= tt )		490552	0					
ANR	491896	Condition	status <= tt	1179:23:38409:38420	490552	0	True				
ANR	491897	RelationalExpression	status <= tt		490552	0		<=			
ANR	491898	Identifier	status		490552	0					
ANR	491899	Identifier	tt		490552	1					
ANR	491900	CompoundStatement		386:37:11818:11818	490552	1					
ANR	491901	ExpressionStatement	errnum += status	1182:16:38584:38600	490552	0	True				
ANR	491902	AssignmentExpression	errnum += status		490552	0		+=			
ANR	491903	Identifier	errnum		490552	0					
ANR	491904	Identifier	status		490552	1					
ANR	491905	ElseStatement	else		490552	0					
ANR	491906	CompoundStatement		391:19:12017:12017	490552	0					
ANR	491907	ExpressionStatement	errflag = OPJ_TRUE	1188:16:38812:38830	490552	0	True				
ANR	491908	AssignmentExpression	errflag = OPJ_TRUE		490552	0		=			
ANR	491909	Identifier	errflag		490552	0					
ANR	491910	Identifier	OPJ_TRUE		490552	1					
ANR	491911	IfStatement	if ( ( status >= 0 ) && ( status <= tt ) )		490552	5					
ANR	491912	Condition	( status >= 0 ) && ( status <= tt )	1193:16:38904:38934	490552	0	True				
ANR	491913	AndExpression	( status >= 0 ) && ( status <= tt )		490552	0		&&			
ANR	491914	RelationalExpression	status >= 0		490552	0		>=			
ANR	491915	Identifier	status		490552	0					
ANR	491916	PrimaryExpression	0		490552	1					
ANR	491917	RelationalExpression	status <= tt		490552	1		<=			
ANR	491918	Identifier	status		490552	0					
ANR	491919	Identifier	tt		490552	1					
ANR	491920	CompoundStatement		402:12:12409:12409	490552	1					
ANR	491921	ExpressionStatement	"memcpy ( L3_buf , parityword , P )"	1196:16:39032:39061	490552	0	True				
ANR	491922	CallExpression	"memcpy ( L3_buf , parityword , P )"		490552	0					
ANR	491923	Callee	memcpy		490552	0					
ANR	491924	Identifier	memcpy		490552	0					
ANR	491925	ArgumentList	L3_buf		490552	1					
ANR	491926	Argument	L3_buf		490552	0					
ANR	491927	Identifier	L3_buf		490552	0					
ANR	491928	Argument	parityword		490552	1					
ANR	491929	Identifier	parityword		490552	0					
ANR	491930	Argument	P		490552	2					
ANR	491931	Identifier	P		490552	0					
ANR	491932	ExpressionStatement	L3_buf += P	1198:12:39089:39100	490552	6	True				
ANR	491933	AssignmentExpression	L3_buf += P		490552	0		+=			
ANR	491934	Identifier	L3_buf		490552	0					
ANR	491935	Identifier	P		490552	1					
ANR	491936	IfStatement	if ( remaining < k_post )		490552	7					
ANR	491937	Condition	remaining < k_post	1201:16:39160:39177	490552	0	True				
ANR	491938	RelationalExpression	remaining < k_post		490552	0		<			
ANR	491939	Identifier	remaining		490552	0					
ANR	491940	Identifier	k_post		490552	1					
ANR	491941	CompoundStatement		408:36:12575:12575	490552	1					
ANR	491942	IfStatement	if ( ( status >= 0 ) && ( status <= tt ) )		490552	0					
ANR	491943	Condition	( status >= 0 ) && ( status <= tt )	1202:20:39202:39232	490552	0	True				
ANR	491944	AndExpression	( status >= 0 ) && ( status <= tt )		490552	0		&&			
ANR	491945	RelationalExpression	status >= 0		490552	0		>=			
ANR	491946	Identifier	status		490552	0					
ANR	491947	PrimaryExpression	0		490552	1					
ANR	491948	RelationalExpression	status <= tt		490552	1		<=			
ANR	491949	Identifier	status		490552	0					
ANR	491950	Identifier	tt		490552	1					
ANR	491951	CompoundStatement		411:16:12715:12715	490552	1					
ANR	491952	ExpressionStatement	"memcpy ( L4_buf , codeword , remaining )"	1205:20:39342:39377	490552	0	True				
ANR	491953	CallExpression	"memcpy ( L4_buf , codeword , remaining )"		490552	0					
ANR	491954	Callee	memcpy		490552	0					
ANR	491955	Identifier	memcpy		490552	0					
ANR	491956	ArgumentList	L4_buf		490552	1					
ANR	491957	Argument	L4_buf		490552	0					
ANR	491958	Identifier	L4_buf		490552	0					
ANR	491959	Argument	codeword		490552	1					
ANR	491960	Identifier	codeword		490552	0					
ANR	491961	Argument	remaining		490552	2					
ANR	491962	Identifier	remaining		490552	0					
ANR	491963	ExpressionStatement	L4_buf += remaining	1207:16:39413:39432	490552	1	True				
ANR	491964	AssignmentExpression	L4_buf += remaining		490552	0		+=			
ANR	491965	Identifier	L4_buf		490552	0					
ANR	491966	Identifier	remaining		490552	1					
ANR	491967	ExpressionStatement	remaining = 0	1208:16:39450:39463	490552	2	True				
ANR	491968	AssignmentExpression	remaining = 0		490552	0		=			
ANR	491969	Identifier	remaining		490552	0					
ANR	491970	PrimaryExpression	0		490552	1					
ANR	491971	ElseStatement	else		490552	0					
ANR	491972	CompoundStatement		417:19:12880:12880	490552	0					
ANR	491973	IfStatement	if ( ( status >= 0 ) && ( status <= tt ) )		490552	0					
ANR	491974	Condition	( status >= 0 ) && ( status <= tt )	1211:20:39507:39537	490552	0	True				
ANR	491975	AndExpression	( status >= 0 ) && ( status <= tt )		490552	0		&&			
ANR	491976	RelationalExpression	status >= 0		490552	0		>=			
ANR	491977	Identifier	status		490552	0					
ANR	491978	PrimaryExpression	0		490552	1					
ANR	491979	RelationalExpression	status <= tt		490552	1		<=			
ANR	491980	Identifier	status		490552	0					
ANR	491981	Identifier	tt		490552	1					
ANR	491982	CompoundStatement		420:16:13020:13020	490552	1					
ANR	491983	ExpressionStatement	"memcpy ( L4_buf , codeword , k_post )"	1214:20:39647:39679	490552	0	True				
ANR	491984	CallExpression	"memcpy ( L4_buf , codeword , k_post )"		490552	0					
ANR	491985	Callee	memcpy		490552	0					
ANR	491986	Identifier	memcpy		490552	0					
ANR	491987	ArgumentList	L4_buf		490552	1					
ANR	491988	Argument	L4_buf		490552	0					
ANR	491989	Identifier	L4_buf		490552	0					
ANR	491990	Argument	codeword		490552	1					
ANR	491991	Identifier	codeword		490552	0					
ANR	491992	Argument	k_post		490552	2					
ANR	491993	Identifier	k_post		490552	0					
ANR	491994	ExpressionStatement	L4_buf += k_post	1216:16:39715:39731	490552	1	True				
ANR	491995	AssignmentExpression	L4_buf += k_post		490552	0		+=			
ANR	491996	Identifier	L4_buf		490552	0					
ANR	491997	Identifier	k_post		490552	1					
ANR	491998	ExpressionStatement	remaining -= k_post	1217:16:39749:39768	490552	2	True				
ANR	491999	AssignmentExpression	remaining -= k_post		490552	0		-=			
ANR	492000	Identifier	remaining		490552	0					
ANR	492001	Identifier	k_post		490552	1					
ANR	492002	IfStatement	if ( L4_bufp )		490552	45					
ANR	492003	Condition	L4_bufp	1224:8:39849:39855	490552	0	True				
ANR	492004	Identifier	L4_bufp		490552	0					
ANR	492005	CompoundStatement		431:17:13253:13253	490552	1					
ANR	492006	ExpressionStatement	* L4_bufp = L4_buf	1225:8:39868:39885	490552	0	True				
ANR	492007	AssignmentExpression	* L4_bufp = L4_buf		490552	0		=			
ANR	492008	UnaryOperationExpression	* L4_bufp		490552	0					
ANR	492009	UnaryOperator	*		490552	0					
ANR	492010	Identifier	L4_bufp		490552	1					
ANR	492011	Identifier	L4_buf		490552	1					
ANR	492012	IfStatement	if ( ! conn )		490552	46					
ANR	492013	Condition	! conn	1229:8:39926:39930	490552	0	True				
ANR	492014	UnaryOperationExpression	! conn		490552	0					
ANR	492015	UnaryOperator	!		490552	0					
ANR	492016	Identifier	conn		490552	1					
ANR	492017	CompoundStatement		436:15:13328:13328	490552	1					
ANR	492018	IfStatement	if ( errnum )		490552	0					
ANR	492019	Condition	errnum	1231:12:39948:39953	490552	0	True				
ANR	492020	Identifier	errnum		490552	0					
ANR	492021	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- %d symbol errors corrected (Ps=%.1e)\\n"" , errnum , ( float ) errnum / ( float ) LDPepb )"	1232:12:39968:40140	490552	1	True				
ANR	492022	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- %d symbol errors corrected (Ps=%.1e)\\n"" , errnum , ( float ) errnum / ( float ) LDPepb )"		490552	0					
ANR	492023	Callee	opj_event_msg		490552	0					
ANR	492024	Identifier	opj_event_msg		490552	0					
ANR	492025	ArgumentList	j2k -> cinfo		490552	1					
ANR	492026	Argument	j2k -> cinfo		490552	0					
ANR	492027	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	492028	Identifier	j2k		490552	0					
ANR	492029	Identifier	cinfo		490552	1					
ANR	492030	Argument	EVT_INFO		490552	1					
ANR	492031	Identifier	EVT_INFO		490552	0					
ANR	492032	Argument	"""- %d symbol errors corrected (Ps=%.1e)\\n"""		490552	2					
ANR	492033	PrimaryExpression	"""- %d symbol errors corrected (Ps=%.1e)\\n"""		490552	0					
ANR	492034	Argument	errnum		490552	3					
ANR	492035	Identifier	errnum		490552	0					
ANR	492036	Argument	( float ) errnum / ( float ) LDPepb		490552	4					
ANR	492037	MultiplicativeExpression	( float ) errnum / ( float ) LDPepb		490552	0		/			
ANR	492038	CastExpression	( float ) errnum		490552	0					
ANR	492039	CastTarget	float		490552	0					
ANR	492040	Identifier	errnum		490552	1					
ANR	492041	CastExpression	( float ) LDPepb		490552	1					
ANR	492042	CastTarget	float		490552	0					
ANR	492043	Identifier	LDPepb		490552	1					
ANR	492044	IfStatement	if ( errflag )		490552	1					
ANR	492045	Condition	errflag	1235:12:40154:40160	490552	0	True				
ANR	492046	Identifier	errflag		490552	0					
ANR	492047	CompoundStatement		442:21:13558:13558	490552	1					
ANR	492048	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- there were unrecoverable errors\\n"" )"	1236:12:40177:40251	490552	0	True				
ANR	492049	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_INFO , ""- there were unrecoverable errors\\n"" )"		490552	0					
ANR	492050	Callee	opj_event_msg		490552	0					
ANR	492051	Identifier	opj_event_msg		490552	0					
ANR	492052	ArgumentList	j2k -> cinfo		490552	1					
ANR	492053	Argument	j2k -> cinfo		490552	0					
ANR	492054	PtrMemberAccess	j2k -> cinfo		490552	0					
ANR	492055	Identifier	j2k		490552	0					
ANR	492056	Identifier	cinfo		490552	1					
ANR	492057	Argument	EVT_INFO		490552	1					
ANR	492058	Identifier	EVT_INFO		490552	0					
ANR	492059	Argument	"""- there were unrecoverable errors\\n"""		490552	2					
ANR	492060	PrimaryExpression	"""- there were unrecoverable errors\\n"""		490552	0					
ANR	492061	ExpressionStatement	"cio_seek ( j2k -> cio , orig_pos )"	1241:4:40275:40303	490552	47	True				
ANR	492062	CallExpression	"cio_seek ( j2k -> cio , orig_pos )"		490552	0					
ANR	492063	Callee	cio_seek		490552	0					
ANR	492064	Identifier	cio_seek		490552	0					
ANR	492065	ArgumentList	j2k -> cio		490552	1					
ANR	492066	Argument	j2k -> cio		490552	0					
ANR	492067	PtrMemberAccess	j2k -> cio		490552	0					
ANR	492068	Identifier	j2k		490552	0					
ANR	492069	Identifier	cio		490552	1					
ANR	492070	Argument	orig_pos		490552	1					
ANR	492071	Identifier	orig_pos		490552	0					
ANR	492072	ReturnStatement	return OPJ_TRUE ;	1243:4:40310:40325	490552	48	True				
ANR	492073	Identifier	OPJ_TRUE		490552	0					
ANR	492074	ReturnType	opj_bool		490552	1					
ANR	492075	Identifier	jpwl_epb_correct		490552	2					
ANR	492076	ParameterList	"opj_j2k_t * j2k , unsigned char * buffer , int type , int pre_len , int post_len , int * conn , unsigned char * * L4_bufp"		490552	3					
ANR	492077	Parameter	opj_j2k_t * j2k	791:26:26440:26453	490552	0	True				
ANR	492078	ParameterType	opj_j2k_t *		490552	0					
ANR	492079	Identifier	j2k		490552	1					
ANR	492080	Parameter	unsigned char * buffer	791:42:26456:26476	490552	1	True				
ANR	492081	ParameterType	unsigned char *		490552	0					
ANR	492082	Identifier	buffer		490552	1					
ANR	492083	Parameter	int type	791:65:26479:26486	490552	2	True				
ANR	492084	ParameterType	int		490552	0					
ANR	492085	Identifier	type		490552	1					
ANR	492086	Parameter	int pre_len	792:26:26515:26525	490552	3	True				
ANR	492087	ParameterType	int		490552	0					
ANR	492088	Identifier	pre_len		490552	1					
ANR	492089	Parameter	int post_len	792:39:26528:26539	490552	4	True				
ANR	492090	ParameterType	int		490552	0					
ANR	492091	Identifier	post_len		490552	1					
ANR	492092	Parameter	int * conn	792:53:26542:26550	490552	5	True				
ANR	492093	ParameterType	int *		490552	0					
ANR	492094	Identifier	conn		490552	1					
ANR	492095	Parameter	unsigned char * * L4_bufp	793:26:26579:26601	490552	6	True				
ANR	492096	ParameterType	unsigned char * *		490552	0					
ANR	492097	Identifier	L4_bufp		490552	1					
ANR	492098	CFGEntryNode	ENTRY		490552		True				
ANR	492099	CFGExitNode	EXIT		490552		True				
ANR	492100	Symbol	tt		490552						
ANR	492101	Symbol	myconn		490552						
ANR	492102	Symbol	* L4_bufp		490552						
ANR	492103	Symbol	conn		490552						
ANR	492104	Symbol	errflag		490552						
ANR	492105	Symbol	pre_len		490552						
ANR	492106	Symbol	L2_buf		490552						
ANR	492107	Symbol	type		490552						
ANR	492108	Symbol	* cio		490552						
ANR	492109	Symbol	cio_read		490552						
ANR	492110	Symbol	mycrc		490552						
ANR	492111	Symbol	* ( L4_buf ++ )		490552						
ANR	492112	Symbol	L1_buf		490552						
ANR	492113	Symbol	str1		490552						
ANR	492114	Symbol	EVT_INFO		490552						
ANR	492115	Symbol	buffer		490552						
ANR	492116	Symbol	OPJ_TRUE		490552						
ANR	492117	Symbol	& myconn		490552						
ANR	492118	Symbol	NULL		490552						
ANR	492119	Symbol	codeword		490552						
ANR	492120	Symbol	L4_buf		490552						
ANR	492121	Symbol	EVT_WARNING		490552						
ANR	492122	Symbol	L4_bufp		490552						
ANR	492123	Symbol	LDPepb		490552						
ANR	492124	Symbol	remaining		490552						
ANR	492125	Symbol	& mycrc		490552						
ANR	492126	Symbol	L3_buf		490552						
ANR	492127	Symbol	* j2k		490552						
ANR	492128	Symbol	NN_P		490552						
ANR	492129	Symbol	cio_tell		490552						
ANR	492130	Symbol	status		490552						
ANR	492131	Symbol	NN		490552						
ANR	492132	Symbol	* ( L3_buf ++ )		490552						
ANR	492133	Symbol	cio_numbytesleft		490552						
ANR	492134	Symbol	cio		490552						
ANR	492135	Symbol	P		490552						
ANR	492136	Symbol	cio -> bp		490552						
ANR	492137	Symbol	filecrc		490552						
ANR	492138	Symbol	post_len		490552						
ANR	492139	Symbol	OPJ_FALSE		490552						
ANR	492140	Symbol	errnum		490552						
ANR	492141	Symbol	j2k -> cio		490552						
ANR	492142	Symbol	floor		490552						
ANR	492143	Symbol	EVT_ERROR		490552						
ANR	492144	Symbol	k_pre		490552						
ANR	492145	Symbol	parityword		490552						
ANR	492146	Symbol	j2k		490552						
ANR	492147	Symbol	Pepb		490552						
ANR	492148	Symbol	L1		490552						
ANR	492149	Symbol	L4		490552						
ANR	492150	Symbol	n_pre		490552						
ANR	492151	Symbol	eras_dec_rs		490552						
ANR	492152	Symbol	Lepb		490552						
ANR	492153	Symbol	j2k -> cinfo		490552						
ANR	492154	Symbol	k_post		490552						
ANR	492155	Symbol	Depb		490552						
ANR	492156	Symbol	n_post		490552						
ANR	492157	Symbol	orig_pos		490552						
ANR	492158	Symbol	* conn		490552						
ANR	492159	Function	jpwl_epc_write	1246:0:40330:41229							
ANR	492160	FunctionDef	"jpwl_epc_write (opj_j2k_t * j2k , jpwl_epc_ms_t * epc , unsigned char * buf)"		492159	0					
ANR	492161	CompoundStatement		1247:0:40406:41229	492159	0					
ANR	492162	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPC >> 8 )	1250:4:40430:40473	492159	0	True				
ANR	492163	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPC >> 8 )		492159	0		=			
ANR	492164	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492165	UnaryOperator	*		492159	0					
ANR	492166	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492167	Identifier	buf		492159	0					
ANR	492168	IncDec	++		492159	1					
ANR	492169	CastExpression	( unsigned char ) ( J2K_MS_EPC >> 8 )		492159	1					
ANR	492170	CastTarget	unsigned char		492159	0					
ANR	492171	ShiftExpression	J2K_MS_EPC >> 8		492159	1		>>			
ANR	492172	Identifier	J2K_MS_EPC		492159	0					
ANR	492173	PrimaryExpression	8		492159	1					
ANR	492174	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPC >> 0 )	1251:4:40479:40522	492159	1	True				
ANR	492175	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_EPC >> 0 )		492159	0		=			
ANR	492176	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492177	UnaryOperator	*		492159	0					
ANR	492178	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492179	Identifier	buf		492159	0					
ANR	492180	IncDec	++		492159	1					
ANR	492181	CastExpression	( unsigned char ) ( J2K_MS_EPC >> 0 )		492159	1					
ANR	492182	CastTarget	unsigned char		492159	0					
ANR	492183	ShiftExpression	J2K_MS_EPC >> 0		492159	1		>>			
ANR	492184	Identifier	J2K_MS_EPC		492159	0					
ANR	492185	PrimaryExpression	0		492159	1					
ANR	492186	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> Lepc >> 8 )	1254:4:40544:40586	492159	2	True				
ANR	492187	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> Lepc >> 8 )		492159	0		=			
ANR	492188	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492189	UnaryOperator	*		492159	0					
ANR	492190	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492191	Identifier	buf		492159	0					
ANR	492192	IncDec	++		492159	1					
ANR	492193	CastExpression	( unsigned char ) ( epc -> Lepc >> 8 )		492159	1					
ANR	492194	CastTarget	unsigned char		492159	0					
ANR	492195	ShiftExpression	epc -> Lepc >> 8		492159	1		>>			
ANR	492196	PtrMemberAccess	epc -> Lepc		492159	0					
ANR	492197	Identifier	epc		492159	0					
ANR	492198	Identifier	Lepc		492159	1					
ANR	492199	PrimaryExpression	8		492159	1					
ANR	492200	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> Lepc >> 0 )	1255:4:40592:40634	492159	3	True				
ANR	492201	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> Lepc >> 0 )		492159	0		=			
ANR	492202	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492203	UnaryOperator	*		492159	0					
ANR	492204	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492205	Identifier	buf		492159	0					
ANR	492206	IncDec	++		492159	1					
ANR	492207	CastExpression	( unsigned char ) ( epc -> Lepc >> 0 )		492159	1					
ANR	492208	CastTarget	unsigned char		492159	0					
ANR	492209	ShiftExpression	epc -> Lepc >> 0		492159	1		>>			
ANR	492210	PtrMemberAccess	epc -> Lepc		492159	0					
ANR	492211	Identifier	epc		492159	0					
ANR	492212	Identifier	Lepc		492159	1					
ANR	492213	PrimaryExpression	0		492159	1					
ANR	492214	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> Pcrc >> 8 )	1258:4:40656:40698	492159	4	True				
ANR	492215	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> Pcrc >> 8 )		492159	0		=			
ANR	492216	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492217	UnaryOperator	*		492159	0					
ANR	492218	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492219	Identifier	buf		492159	0					
ANR	492220	IncDec	++		492159	1					
ANR	492221	CastExpression	( unsigned char ) ( epc -> Pcrc >> 8 )		492159	1					
ANR	492222	CastTarget	unsigned char		492159	0					
ANR	492223	ShiftExpression	epc -> Pcrc >> 8		492159	1		>>			
ANR	492224	PtrMemberAccess	epc -> Pcrc		492159	0					
ANR	492225	Identifier	epc		492159	0					
ANR	492226	Identifier	Pcrc		492159	1					
ANR	492227	PrimaryExpression	8		492159	1					
ANR	492228	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> Pcrc >> 0 )	1259:4:40704:40746	492159	5	True				
ANR	492229	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> Pcrc >> 0 )		492159	0		=			
ANR	492230	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492231	UnaryOperator	*		492159	0					
ANR	492232	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492233	Identifier	buf		492159	0					
ANR	492234	IncDec	++		492159	1					
ANR	492235	CastExpression	( unsigned char ) ( epc -> Pcrc >> 0 )		492159	1					
ANR	492236	CastTarget	unsigned char		492159	0					
ANR	492237	ShiftExpression	epc -> Pcrc >> 0		492159	1		>>			
ANR	492238	PtrMemberAccess	epc -> Pcrc		492159	0					
ANR	492239	Identifier	epc		492159	0					
ANR	492240	Identifier	Pcrc		492159	1					
ANR	492241	PrimaryExpression	0		492159	1					
ANR	492242	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 24 )	1262:4:40766:40807	492159	6	True				
ANR	492243	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 24 )		492159	0		=			
ANR	492244	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492245	UnaryOperator	*		492159	0					
ANR	492246	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492247	Identifier	buf		492159	0					
ANR	492248	IncDec	++		492159	1					
ANR	492249	CastExpression	( unsigned char ) ( epc -> DL >> 24 )		492159	1					
ANR	492250	CastTarget	unsigned char		492159	0					
ANR	492251	ShiftExpression	epc -> DL >> 24		492159	1		>>			
ANR	492252	PtrMemberAccess	epc -> DL		492159	0					
ANR	492253	Identifier	epc		492159	0					
ANR	492254	Identifier	DL		492159	1					
ANR	492255	PrimaryExpression	24		492159	1					
ANR	492256	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 16 )	1263:4:40813:40854	492159	7	True				
ANR	492257	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 16 )		492159	0		=			
ANR	492258	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492259	UnaryOperator	*		492159	0					
ANR	492260	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492261	Identifier	buf		492159	0					
ANR	492262	IncDec	++		492159	1					
ANR	492263	CastExpression	( unsigned char ) ( epc -> DL >> 16 )		492159	1					
ANR	492264	CastTarget	unsigned char		492159	0					
ANR	492265	ShiftExpression	epc -> DL >> 16		492159	1		>>			
ANR	492266	PtrMemberAccess	epc -> DL		492159	0					
ANR	492267	Identifier	epc		492159	0					
ANR	492268	Identifier	DL		492159	1					
ANR	492269	PrimaryExpression	16		492159	1					
ANR	492270	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 8 )	1264:4:40860:40900	492159	8	True				
ANR	492271	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 8 )		492159	0		=			
ANR	492272	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492273	UnaryOperator	*		492159	0					
ANR	492274	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492275	Identifier	buf		492159	0					
ANR	492276	IncDec	++		492159	1					
ANR	492277	CastExpression	( unsigned char ) ( epc -> DL >> 8 )		492159	1					
ANR	492278	CastTarget	unsigned char		492159	0					
ANR	492279	ShiftExpression	epc -> DL >> 8		492159	1		>>			
ANR	492280	PtrMemberAccess	epc -> DL		492159	0					
ANR	492281	Identifier	epc		492159	0					
ANR	492282	Identifier	DL		492159	1					
ANR	492283	PrimaryExpression	8		492159	1					
ANR	492284	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 0 )	1265:4:40906:40946	492159	9	True				
ANR	492285	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> DL >> 0 )		492159	0		=			
ANR	492286	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492287	UnaryOperator	*		492159	0					
ANR	492288	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492289	Identifier	buf		492159	0					
ANR	492290	IncDec	++		492159	1					
ANR	492291	CastExpression	( unsigned char ) ( epc -> DL >> 0 )		492159	1					
ANR	492292	CastTarget	unsigned char		492159	0					
ANR	492293	ShiftExpression	epc -> DL >> 0		492159	1		>>			
ANR	492294	PtrMemberAccess	epc -> DL		492159	0					
ANR	492295	Identifier	epc		492159	0					
ANR	492296	Identifier	DL		492159	1					
ANR	492297	PrimaryExpression	0		492159	1					
ANR	492298	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( epc -> Pepc >> 0 )	1268:4:40968:41010	492159	10	True				
ANR	492299	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( epc -> Pepc >> 0 )		492159	0		=			
ANR	492300	UnaryOperationExpression	* ( buf ++ )		492159	0					
ANR	492301	UnaryOperator	*		492159	0					
ANR	492302	PostIncDecOperationExpression	buf ++		492159	1					
ANR	492303	Identifier	buf		492159	0					
ANR	492304	IncDec	++		492159	1					
ANR	492305	CastExpression	( unsigned char ) ( epc -> Pepc >> 0 )		492159	1					
ANR	492306	CastTarget	unsigned char		492159	0					
ANR	492307	ShiftExpression	epc -> Pepc >> 0		492159	1		>>			
ANR	492308	PtrMemberAccess	epc -> Pepc		492159	0					
ANR	492309	Identifier	epc		492159	0					
ANR	492310	Identifier	Pepc		492159	1					
ANR	492311	PrimaryExpression	0		492159	1					
ANR	492312	ExpressionStatement	"memset ( buf , 0 , ( size_t ) epc -> Lepc - 9 )"	1272:4:41088:41126	492159	11	True				
ANR	492313	CallExpression	"memset ( buf , 0 , ( size_t ) epc -> Lepc - 9 )"		492159	0					
ANR	492314	Callee	memset		492159	0					
ANR	492315	Identifier	memset		492159	0					
ANR	492316	ArgumentList	buf		492159	1					
ANR	492317	Argument	buf		492159	0					
ANR	492318	Identifier	buf		492159	0					
ANR	492319	Argument	0		492159	1					
ANR	492320	PrimaryExpression	0		492159	0					
ANR	492321	Argument	( size_t ) epc -> Lepc - 9		492159	2					
ANR	492322	AdditiveExpression	( size_t ) epc -> Lepc - 9		492159	0		-			
ANR	492323	CastExpression	( size_t ) epc -> Lepc		492159	0					
ANR	492324	CastTarget	size_t		492159	0					
ANR	492325	PtrMemberAccess	epc -> Lepc		492159	1					
ANR	492326	Identifier	epc		492159	0					
ANR	492327	Identifier	Lepc		492159	1					
ANR	492328	PrimaryExpression	9		492159	1					
ANR	492329	ExpressionStatement	"j2k_add_marker ( j2k -> cstr_info , J2K_MS_EPC , - 1 , epc -> Lepc + 2 )"	1275:4:41165:41226	492159	12	True				
ANR	492330	CallExpression	"j2k_add_marker ( j2k -> cstr_info , J2K_MS_EPC , - 1 , epc -> Lepc + 2 )"		492159	0					
ANR	492331	Callee	j2k_add_marker		492159	0					
ANR	492332	Identifier	j2k_add_marker		492159	0					
ANR	492333	ArgumentList	j2k -> cstr_info		492159	1					
ANR	492334	Argument	j2k -> cstr_info		492159	0					
ANR	492335	PtrMemberAccess	j2k -> cstr_info		492159	0					
ANR	492336	Identifier	j2k		492159	0					
ANR	492337	Identifier	cstr_info		492159	1					
ANR	492338	Argument	J2K_MS_EPC		492159	1					
ANR	492339	Identifier	J2K_MS_EPC		492159	0					
ANR	492340	Argument	- 1		492159	2					
ANR	492341	UnaryOperationExpression	- 1		492159	0					
ANR	492342	UnaryOperator	-		492159	0					
ANR	492343	PrimaryExpression	1		492159	1					
ANR	492344	Argument	epc -> Lepc + 2		492159	3					
ANR	492345	AdditiveExpression	epc -> Lepc + 2		492159	0		+			
ANR	492346	PtrMemberAccess	epc -> Lepc		492159	0					
ANR	492347	Identifier	epc		492159	0					
ANR	492348	Identifier	Lepc		492159	1					
ANR	492349	PrimaryExpression	2		492159	1					
ANR	492350	ReturnType	void		492159	1					
ANR	492351	Identifier	jpwl_epc_write		492159	2					
ANR	492352	ParameterList	"opj_j2k_t * j2k , jpwl_epc_ms_t * epc , unsigned char * buf"		492159	3					
ANR	492353	Parameter	opj_j2k_t * j2k	1246:20:40350:40363	492159	0	True				
ANR	492354	ParameterType	opj_j2k_t *		492159	0					
ANR	492355	Identifier	j2k		492159	1					
ANR	492356	Parameter	jpwl_epc_ms_t * epc	1246:36:40366:40383	492159	1	True				
ANR	492357	ParameterType	jpwl_epc_ms_t *		492159	0					
ANR	492358	Identifier	epc		492159	1					
ANR	492359	Parameter	unsigned char * buf	1246:56:40386:40403	492159	2	True				
ANR	492360	ParameterType	unsigned char *		492159	0					
ANR	492361	Identifier	buf		492159	1					
ANR	492362	CFGEntryNode	ENTRY		492159		True				
ANR	492363	CFGExitNode	EXIT		492159		True				
ANR	492364	Symbol	* ( buf ++ )		492159						
ANR	492365	Symbol	epc -> DL		492159						
ANR	492366	Symbol	j2k		492159						
ANR	492367	Symbol	buf		492159						
ANR	492368	Symbol	* j2k		492159						
ANR	492369	Symbol	epc -> Lepc		492159						
ANR	492370	Symbol	J2K_MS_EPC		492159						
ANR	492371	Symbol	j2k -> cstr_info		492159						
ANR	492372	Symbol	epc		492159						
ANR	492373	Symbol	epc -> Pepc		492159						
ANR	492374	Symbol	* epc		492159						
ANR	492375	Symbol	epc -> Pcrc		492159						
ANR	492376	Function	jpwl_esds_add	1279:0:41232:41510							
ANR	492377	FunctionDef	"jpwl_esds_add (opj_j2k_t * j2k , jpwl_marker_t * jwmarker , int * jwmarker_num , int comps , unsigned char addrm , unsigned char ad_size , unsigned char senst , unsigned char se_size , double place_pos , int tileno)"		492376	0					
ANR	492378	CompoundStatement		1283:0:41493:41510	492376	0					
ANR	492379	ReturnStatement	return 0 ;	1285:4:41500:41508	492376	0	True				
ANR	492380	PrimaryExpression	0		492376	0					
ANR	492381	ReturnType	int		492376	1					
ANR	492382	Identifier	jpwl_esds_add		492376	2					
ANR	492383	ParameterList	"opj_j2k_t * j2k , jpwl_marker_t * jwmarker , int * jwmarker_num , int comps , unsigned char addrm , unsigned char ad_size , unsigned char senst , unsigned char se_size , double place_pos , int tileno"		492376	3					
ANR	492384	Parameter	opj_j2k_t * j2k	1279:18:41250:41263	492376	0	True				
ANR	492385	ParameterType	opj_j2k_t *		492376	0					
ANR	492386	Identifier	j2k		492376	1					
ANR	492387	Parameter	jpwl_marker_t * jwmarker	1279:34:41266:41288	492376	1	True				
ANR	492388	ParameterType	jpwl_marker_t *		492376	0					
ANR	492389	Identifier	jwmarker		492376	1					
ANR	492390	Parameter	int * jwmarker_num	1279:59:41291:41307	492376	2	True				
ANR	492391	ParameterType	int *		492376	0					
ANR	492392	Identifier	jwmarker_num		492376	1					
ANR	492393	Parameter	int comps	1280:18:41328:41336	492376	3	True				
ANR	492394	ParameterType	int		492376	0					
ANR	492395	Identifier	comps		492376	1					
ANR	492396	Parameter	unsigned char addrm	1280:29:41339:41357	492376	4	True				
ANR	492397	ParameterType	unsigned char		492376	0					
ANR	492398	Identifier	addrm		492376	1					
ANR	492399	Parameter	unsigned char ad_size	1280:50:41360:41380	492376	5	True				
ANR	492400	ParameterType	unsigned char		492376	0					
ANR	492401	Identifier	ad_size		492376	1					
ANR	492402	Parameter	unsigned char senst	1281:18:41401:41419	492376	6	True				
ANR	492403	ParameterType	unsigned char		492376	0					
ANR	492404	Identifier	senst		492376	1					
ANR	492405	Parameter	unsigned char se_size	1281:39:41422:41442	492376	7	True				
ANR	492406	ParameterType	unsigned char		492376	0					
ANR	492407	Identifier	se_size		492376	1					
ANR	492408	Parameter	double place_pos	1282:18:41463:41478	492376	8	True				
ANR	492409	ParameterType	double		492376	0					
ANR	492410	Identifier	place_pos		492376	1					
ANR	492411	Parameter	int tileno	1282:36:41481:41490	492376	9	True				
ANR	492412	ParameterType	int		492376	0					
ANR	492413	Identifier	tileno		492376	1					
ANR	492414	CFGEntryNode	ENTRY		492376		True				
ANR	492415	CFGExitNode	EXIT		492376		True				
ANR	492416	Symbol	jwmarker_num		492376						
ANR	492417	Symbol	j2k		492376						
ANR	492418	Symbol	comps		492376						
ANR	492419	Symbol	tileno		492376						
ANR	492420	Symbol	se_size		492376						
ANR	492421	Symbol	jwmarker		492376						
ANR	492422	Symbol	addrm		492376						
ANR	492423	Symbol	senst		492376						
ANR	492424	Symbol	place_pos		492376						
ANR	492425	Symbol	ad_size		492376						
ANR	492426	Function	jpwl_esd_create	1288:0:41513:46147							
ANR	492427	FunctionDef	"jpwl_esd_create (opj_j2k_t * j2k , int comp , unsigned char addrm , unsigned char ad_size , unsigned char senst , int se_size , int tileno , unsigned long int svalnum , void * sensval)"		492426	0					
ANR	492428	CompoundStatement		1292:0:41795:46147	492426	0					
ANR	492429	IdentifierDeclStatement	jpwl_esd_ms_t * esd = NULL ;	1294:4:41802:41827	492426	0	True				
ANR	492430	IdentifierDecl	* esd = NULL		492426	0					
ANR	492431	IdentifierDeclType	jpwl_esd_ms_t *		492426	0					
ANR	492432	Identifier	esd		492426	1					
ANR	492433	AssignmentExpression	* esd = NULL		492426	2		=			
ANR	492434	Identifier	NULL		492426	0					
ANR	492435	Identifier	NULL		492426	1					
ANR	492436	IfStatement	if ( ! ( esd = ( jpwl_esd_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_esd_ms_t ) ) ) )		492426	1					
ANR	492437	Condition	! ( esd = ( jpwl_esd_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_esd_ms_t ) ) )	1297:8:41860:41932	492426	0	True				
ANR	492438	UnaryOperationExpression	! ( esd = ( jpwl_esd_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_esd_ms_t ) ) )		492426	0					
ANR	492439	UnaryOperator	!		492426	0					
ANR	492440	AssignmentExpression	esd = ( jpwl_esd_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_esd_ms_t ) )		492426	1		=			
ANR	492441	Identifier	esd		492426	0					
ANR	492442	CastExpression	( jpwl_esd_ms_t * ) opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_esd_ms_t ) )		492426	1					
ANR	492443	CastTarget	jpwl_esd_ms_t *		492426	0					
ANR	492444	CallExpression	opj_malloc ( ( size_t ) 1 * sizeof ( jpwl_esd_ms_t ) )		492426	1					
ANR	492445	Callee	opj_malloc		492426	0					
ANR	492446	Identifier	opj_malloc		492426	0					
ANR	492447	ArgumentList	( size_t ) 1 * sizeof ( jpwl_esd_ms_t )		492426	1					
ANR	492448	Argument	( size_t ) 1 * sizeof ( jpwl_esd_ms_t )		492426	0					
ANR	492449	MultiplicativeExpression	( size_t ) 1 * sizeof ( jpwl_esd_ms_t )		492426	0		*			
ANR	492450	CastExpression	( size_t ) 1		492426	0					
ANR	492451	CastTarget	size_t		492426	0					
ANR	492452	PrimaryExpression	1		492426	1					
ANR	492453	SizeofExpression	sizeof ( jpwl_esd_ms_t )		492426	1					
ANR	492454	Sizeof	sizeof		492426	0					
ANR	492455	SizeofOperand	jpwl_esd_ms_t		492426	1					
ANR	492456	CompoundStatement		6:83:139:139	492426	1					
ANR	492457	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not allocate room for ESD MS\\n"" )"	1298:8:41945:42021	492426	0	True				
ANR	492458	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Could not allocate room for ESD MS\\n"" )"		492426	0					
ANR	492459	Callee	opj_event_msg		492426	0					
ANR	492460	Identifier	opj_event_msg		492426	0					
ANR	492461	ArgumentList	j2k -> cinfo		492426	1					
ANR	492462	Argument	j2k -> cinfo		492426	0					
ANR	492463	PtrMemberAccess	j2k -> cinfo		492426	0					
ANR	492464	Identifier	j2k		492426	0					
ANR	492465	Identifier	cinfo		492426	1					
ANR	492466	Argument	EVT_ERROR		492426	1					
ANR	492467	Identifier	EVT_ERROR		492426	0					
ANR	492468	Argument	"""Could not allocate room for ESD MS\\n"""		492426	2					
ANR	492469	PrimaryExpression	"""Could not allocate room for ESD MS\\n"""		492426	0					
ANR	492470	ReturnStatement	return NULL ;	1299:8:42031:42042	492426	1	True				
ANR	492471	Identifier	NULL		492426	0					
ANR	492472	ExpressionStatement		1300:5:42049:42049	492426	2	True				
ANR	492473	IfStatement	if ( senst == 0 )		492426	3					
ANR	492474	Condition	senst == 0	1303:8:42120:42129	492426	0	True				
ANR	492475	EqualityExpression	senst == 0		492426	0		==			
ANR	492476	Identifier	senst		492426	0					
ANR	492477	PrimaryExpression	0		492426	1					
ANR	492478	CompoundStatement		12:20:336:336	492426	1					
ANR	492479	ExpressionStatement	addrm = 1	1304:8:42142:42151	492426	0	True				
ANR	492480	AssignmentExpression	addrm = 1		492426	0		=			
ANR	492481	Identifier	addrm		492426	0					
ANR	492482	PrimaryExpression	1		492426	1					
ANR	492483	IfStatement	if ( ( ad_size != 0 ) && ( ad_size != 2 ) && ( ad_size != 4 ) )		492426	4					
ANR	492484	Condition	( ad_size != 0 ) && ( ad_size != 2 ) && ( ad_size != 4 )	1308:8:42200:42249	492426	0	True				
ANR	492485	AndExpression	( ad_size != 0 ) && ( ad_size != 2 ) && ( ad_size != 4 )		492426	0		&&			
ANR	492486	EqualityExpression	ad_size != 0		492426	0		!=			
ANR	492487	Identifier	ad_size		492426	0					
ANR	492488	PrimaryExpression	0		492426	1					
ANR	492489	AndExpression	( ad_size != 2 ) && ( ad_size != 4 )		492426	1		&&			
ANR	492490	EqualityExpression	ad_size != 2		492426	0		!=			
ANR	492491	Identifier	ad_size		492426	0					
ANR	492492	PrimaryExpression	2		492426	1					
ANR	492493	EqualityExpression	ad_size != 4		492426	1		!=			
ANR	492494	Identifier	ad_size		492426	0					
ANR	492495	PrimaryExpression	4		492426	1					
ANR	492496	CompoundStatement		17:60:456:456	492426	1					
ANR	492497	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Address size %d for ESD MS is forbidden\\n"" , ad_size )"	1309:8:42262:42374	492426	0	True				
ANR	492498	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Address size %d for ESD MS is forbidden\\n"" , ad_size )"		492426	0					
ANR	492499	Callee	opj_event_msg		492426	0					
ANR	492500	Identifier	opj_event_msg		492426	0					
ANR	492501	ArgumentList	j2k -> cinfo		492426	1					
ANR	492502	Argument	j2k -> cinfo		492426	0					
ANR	492503	PtrMemberAccess	j2k -> cinfo		492426	0					
ANR	492504	Identifier	j2k		492426	0					
ANR	492505	Identifier	cinfo		492426	1					
ANR	492506	Argument	EVT_ERROR		492426	1					
ANR	492507	Identifier	EVT_ERROR		492426	0					
ANR	492508	Argument	"""Address size %d for ESD MS is forbidden\\n"""		492426	2					
ANR	492509	PrimaryExpression	"""Address size %d for ESD MS is forbidden\\n"""		492426	0					
ANR	492510	Argument	ad_size		492426	3					
ANR	492511	Identifier	ad_size		492426	0					
ANR	492512	ReturnStatement	return NULL ;	1311:8:42384:42395	492426	1	True				
ANR	492513	Identifier	NULL		492426	0					
ANR	492514	IfStatement	if ( ( se_size != 1 ) && ( se_size != 2 ) )		492426	5					
ANR	492515	Condition	( se_size != 1 ) && ( se_size != 2 )	1313:8:42411:42442	492426	0	True				
ANR	492516	AndExpression	( se_size != 1 ) && ( se_size != 2 )		492426	0		&&			
ANR	492517	EqualityExpression	se_size != 1		492426	0		!=			
ANR	492518	Identifier	se_size		492426	0					
ANR	492519	PrimaryExpression	1		492426	1					
ANR	492520	EqualityExpression	se_size != 2		492426	1		!=			
ANR	492521	Identifier	se_size		492426	0					
ANR	492522	PrimaryExpression	2		492426	1					
ANR	492523	CompoundStatement		22:42:649:649	492426	1					
ANR	492524	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Sensitivity size %d for ESD MS is forbidden\\n"" , se_size )"	1314:8:42455:42571	492426	0	True				
ANR	492525	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Sensitivity size %d for ESD MS is forbidden\\n"" , se_size )"		492426	0					
ANR	492526	Callee	opj_event_msg		492426	0					
ANR	492527	Identifier	opj_event_msg		492426	0					
ANR	492528	ArgumentList	j2k -> cinfo		492426	1					
ANR	492529	Argument	j2k -> cinfo		492426	0					
ANR	492530	PtrMemberAccess	j2k -> cinfo		492426	0					
ANR	492531	Identifier	j2k		492426	0					
ANR	492532	Identifier	cinfo		492426	1					
ANR	492533	Argument	EVT_ERROR		492426	1					
ANR	492534	Identifier	EVT_ERROR		492426	0					
ANR	492535	Argument	"""Sensitivity size %d for ESD MS is forbidden\\n"""		492426	2					
ANR	492536	PrimaryExpression	"""Sensitivity size %d for ESD MS is forbidden\\n"""		492426	0					
ANR	492537	Argument	se_size		492426	3					
ANR	492538	Identifier	se_size		492426	0					
ANR	492539	ReturnStatement	return NULL ;	1316:8:42581:42592	492426	1	True				
ANR	492540	Identifier	NULL		492426	0					
ANR	492541	SwitchStatement	switch ( addrm )		492426	6					
ANR	492542	Condition	addrm	1320:12:42658:42662	492426	0	True				
ANR	492543	Identifier	addrm		492426	0					
ANR	492544	CompoundStatement		29:19:869:869	492426	1					
ANR	492545	Statement	case	1323:4:42694:42697	492426	0	True				
ANR	492546	Statement	(	1323:9:42699:42699	492426	1	True				
ANR	492547	Statement	0	1323:10:42700:42700	492426	2	True				
ANR	492548	Statement	)	1323:11:42701:42701	492426	3	True				
ANR	492549	Statement	:	1323:12:42702:42702	492426	4	True				
ANR	492550	ExpressionStatement	ad_size = 0	1324:8:42712:42723	492426	5	True				
ANR	492551	AssignmentExpression	ad_size = 0		492426	0		=			
ANR	492552	Identifier	ad_size		492426	0					
ANR	492553	PrimaryExpression	0		492426	1					
ANR	492554	ExpressionStatement	esd -> sensval_size = ( unsigned int ) se_size	1325:8:42759:42800	492426	6	True				
ANR	492555	AssignmentExpression	esd -> sensval_size = ( unsigned int ) se_size		492426	0		=			
ANR	492556	PtrMemberAccess	esd -> sensval_size		492426	0					
ANR	492557	Identifier	esd		492426	0					
ANR	492558	Identifier	sensval_size		492426	1					
ANR	492559	CastExpression	( unsigned int ) se_size		492426	1					
ANR	492560	CastTarget	unsigned int		492426	0					
ANR	492561	Identifier	se_size		492426	1					
ANR	492562	BreakStatement	break ;	1326:8:42810:42815	492426	7	True				
ANR	492563	Statement	case	1329:4:42843:42846	492426	8	True				
ANR	492564	Statement	(	1329:9:42848:42848	492426	9	True				
ANR	492565	Statement	1	1329:10:42849:42849	492426	10	True				
ANR	492566	Statement	)	1329:11:42850:42850	492426	11	True				
ANR	492567	Statement	:	1329:12:42851:42851	492426	12	True				
ANR	492568	IfStatement	if ( ad_size == 0 )		492426	13					
ANR	492569	Condition	ad_size == 0	1331:12:42903:42914	492426	0	True				
ANR	492570	EqualityExpression	ad_size == 0		492426	0		==			
ANR	492571	Identifier	ad_size		492426	0					
ANR	492572	PrimaryExpression	0		492426	1					
ANR	492573	CompoundStatement		43:8:1275:1275	492426	1					
ANR	492574	ExpressionStatement	ad_size = ( j2k -> cstr_info -> codestream_size > ( 1 * 65535 / 3 ) ) ? 4 : 2	1335:12:43085:43154	492426	0	True				
ANR	492575	AssignmentExpression	ad_size = ( j2k -> cstr_info -> codestream_size > ( 1 * 65535 / 3 ) ) ? 4 : 2		492426	0		=			
ANR	492576	Identifier	ad_size		492426	0					
ANR	492577	ConditionalExpression	( j2k -> cstr_info -> codestream_size > ( 1 * 65535 / 3 ) ) ? 4 : 2		492426	1					
ANR	492578	Condition	j2k -> cstr_info -> codestream_size > ( 1 * 65535 / 3 )		492426	0					
ANR	492579	RelationalExpression	j2k -> cstr_info -> codestream_size > ( 1 * 65535 / 3 )		492426	0		>			
ANR	492580	PtrMemberAccess	j2k -> cstr_info -> codestream_size		492426	0					
ANR	492581	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492582	Identifier	j2k		492426	0					
ANR	492583	Identifier	cstr_info		492426	1					
ANR	492584	Identifier	codestream_size		492426	1					
ANR	492585	MultiplicativeExpression	1 * 65535 / 3		492426	1		*			
ANR	492586	PrimaryExpression	1		492426	0					
ANR	492587	MultiplicativeExpression	65535 / 3		492426	1		/			
ANR	492588	PrimaryExpression	65535		492426	0					
ANR	492589	PrimaryExpression	3		492426	1					
ANR	492590	PrimaryExpression	4		492426	1					
ANR	492591	PrimaryExpression	2		492426	2					
ANR	492592	ExpressionStatement	esd -> sensval_size = ad_size + ad_size + se_size	1337:8:43174:43221	492426	14	True				
ANR	492593	AssignmentExpression	esd -> sensval_size = ad_size + ad_size + se_size		492426	0		=			
ANR	492594	PtrMemberAccess	esd -> sensval_size		492426	0					
ANR	492595	Identifier	esd		492426	0					
ANR	492596	Identifier	sensval_size		492426	1					
ANR	492597	AdditiveExpression	ad_size + ad_size + se_size		492426	1		+			
ANR	492598	Identifier	ad_size		492426	0					
ANR	492599	AdditiveExpression	ad_size + se_size		492426	1		+			
ANR	492600	Identifier	ad_size		492426	0					
ANR	492601	Identifier	se_size		492426	1					
ANR	492602	BreakStatement	break ;	1338:8:43231:43236	492426	15	True				
ANR	492603	Statement	case	1341:4:43266:43269	492426	16	True				
ANR	492604	Statement	(	1341:9:43271:43271	492426	17	True				
ANR	492605	Statement	2	1341:10:43272:43272	492426	18	True				
ANR	492606	Statement	)	1341:11:43273:43273	492426	19	True				
ANR	492607	Statement	:	1341:12:43274:43274	492426	20	True				
ANR	492608	IfStatement	if ( ad_size == 0 )		492426	21					
ANR	492609	Condition	ad_size == 0	1343:12:43326:43337	492426	0	True				
ANR	492610	EqualityExpression	ad_size == 0		492426	0		==			
ANR	492611	Identifier	ad_size		492426	0					
ANR	492612	PrimaryExpression	0		492426	1					
ANR	492613	CompoundStatement		54:8:1629:1629	492426	1					
ANR	492614	ExpressionStatement	ad_size = ( j2k -> cstr_info -> packno > 65535 ) ? 4 : 2	1346:12:43439:43489	492426	0	True				
ANR	492615	AssignmentExpression	ad_size = ( j2k -> cstr_info -> packno > 65535 ) ? 4 : 2		492426	0		=			
ANR	492616	Identifier	ad_size		492426	0					
ANR	492617	ConditionalExpression	( j2k -> cstr_info -> packno > 65535 ) ? 4 : 2		492426	1					
ANR	492618	Condition	j2k -> cstr_info -> packno > 65535		492426	0					
ANR	492619	RelationalExpression	j2k -> cstr_info -> packno > 65535		492426	0		>			
ANR	492620	PtrMemberAccess	j2k -> cstr_info -> packno		492426	0					
ANR	492621	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492622	Identifier	j2k		492426	0					
ANR	492623	Identifier	cstr_info		492426	1					
ANR	492624	Identifier	packno		492426	1					
ANR	492625	PrimaryExpression	65535		492426	1					
ANR	492626	PrimaryExpression	4		492426	1					
ANR	492627	PrimaryExpression	2		492426	2					
ANR	492628	ExpressionStatement	esd -> sensval_size = ad_size + ad_size + se_size	1348:8:43509:43556	492426	22	True				
ANR	492629	AssignmentExpression	esd -> sensval_size = ad_size + ad_size + se_size		492426	0		=			
ANR	492630	PtrMemberAccess	esd -> sensval_size		492426	0					
ANR	492631	Identifier	esd		492426	0					
ANR	492632	Identifier	sensval_size		492426	1					
ANR	492633	AdditiveExpression	ad_size + ad_size + se_size		492426	1		+			
ANR	492634	Identifier	ad_size		492426	0					
ANR	492635	AdditiveExpression	ad_size + se_size		492426	1		+			
ANR	492636	Identifier	ad_size		492426	0					
ANR	492637	Identifier	se_size		492426	1					
ANR	492638	BreakStatement	break ;	1349:8:43566:43571	492426	23	True				
ANR	492639	Statement	case	1351:4:43578:43581	492426	24	True				
ANR	492640	Statement	(	1351:9:43583:43583	492426	25	True				
ANR	492641	Statement	3	1351:10:43584:43584	492426	26	True				
ANR	492642	Statement	)	1351:11:43585:43585	492426	27	True				
ANR	492643	Statement	:	1351:12:43586:43586	492426	28	True				
ANR	492644	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Address mode %d for ESD MS is unimplemented\\n"" , addrm )"	1352:8:43596:43710	492426	29	True				
ANR	492645	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Address mode %d for ESD MS is unimplemented\\n"" , addrm )"		492426	0					
ANR	492646	Callee	opj_event_msg		492426	0					
ANR	492647	Identifier	opj_event_msg		492426	0					
ANR	492648	ArgumentList	j2k -> cinfo		492426	1					
ANR	492649	Argument	j2k -> cinfo		492426	0					
ANR	492650	PtrMemberAccess	j2k -> cinfo		492426	0					
ANR	492651	Identifier	j2k		492426	0					
ANR	492652	Identifier	cinfo		492426	1					
ANR	492653	Argument	EVT_ERROR		492426	1					
ANR	492654	Identifier	EVT_ERROR		492426	0					
ANR	492655	Argument	"""Address mode %d for ESD MS is unimplemented\\n"""		492426	2					
ANR	492656	PrimaryExpression	"""Address mode %d for ESD MS is unimplemented\\n"""		492426	0					
ANR	492657	Argument	addrm		492426	3					
ANR	492658	Identifier	addrm		492426	0					
ANR	492659	ReturnStatement	return NULL ;	1354:8:43720:43731	492426	30	True				
ANR	492660	Identifier	NULL		492426	0					
ANR	492661	Label	default :	1356:4:43738:43745	492426	31	True				
ANR	492662	Identifier	default		492426	0					
ANR	492663	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Address mode %d for ESD MS is forbidden\\n"" , addrm )"	1357:8:43755:43865	492426	32	True				
ANR	492664	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""Address mode %d for ESD MS is forbidden\\n"" , addrm )"		492426	0					
ANR	492665	Callee	opj_event_msg		492426	0					
ANR	492666	Identifier	opj_event_msg		492426	0					
ANR	492667	ArgumentList	j2k -> cinfo		492426	1					
ANR	492668	Argument	j2k -> cinfo		492426	0					
ANR	492669	PtrMemberAccess	j2k -> cinfo		492426	0					
ANR	492670	Identifier	j2k		492426	0					
ANR	492671	Identifier	cinfo		492426	1					
ANR	492672	Argument	EVT_ERROR		492426	1					
ANR	492673	Identifier	EVT_ERROR		492426	0					
ANR	492674	Argument	"""Address mode %d for ESD MS is forbidden\\n"""		492426	2					
ANR	492675	PrimaryExpression	"""Address mode %d for ESD MS is forbidden\\n"""		492426	0					
ANR	492676	Argument	addrm		492426	3					
ANR	492677	Identifier	addrm		492426	0					
ANR	492678	ReturnStatement	return NULL ;	1359:8:43875:43886	492426	33	True				
ANR	492679	Identifier	NULL		492426	0					
ANR	492680	IfStatement	if ( svalnum <= 0 )		492426	7					
ANR	492681	Condition	svalnum <= 0	1363:8:43945:43956	492426	0	True				
ANR	492682	RelationalExpression	svalnum <= 0		492426	0		<=			
ANR	492683	Identifier	svalnum		492426	0					
ANR	492684	PrimaryExpression	0		492426	1					
ANR	492685	CompoundStatement		72:22:2163:2163	492426	1					
ANR	492686	SwitchStatement	switch ( senst )		492426	0					
ANR	492687	Condition	senst	1365:16:43978:43982	492426	0	True				
ANR	492688	Identifier	senst		492426	0					
ANR	492689	CompoundStatement		74:23:2189:2189	492426	1					
ANR	492690	Statement	case	1368:8:44053:44056	492426	0	True				
ANR	492691	Statement	(	1368:13:44058:44058	492426	1	True				
ANR	492692	Statement	0	1368:14:44059:44059	492426	2	True				
ANR	492693	Statement	)	1368:15:44060:44060	492426	3	True				
ANR	492694	Statement	:	1368:16:44061:44061	492426	4	True				
ANR	492695	ExpressionStatement	svalnum = 1 + ( j2k -> cstr_info -> tw * j2k -> cstr_info -> th ) * ( 1 + j2k -> cstr_info -> packno )	1370:12:44126:44234	492426	5	True				
ANR	492696	AssignmentExpression	svalnum = 1 + ( j2k -> cstr_info -> tw * j2k -> cstr_info -> th ) * ( 1 + j2k -> cstr_info -> packno )		492426	0		=			
ANR	492697	Identifier	svalnum		492426	0					
ANR	492698	AdditiveExpression	1 + ( j2k -> cstr_info -> tw * j2k -> cstr_info -> th ) * ( 1 + j2k -> cstr_info -> packno )		492426	1		+			
ANR	492699	PrimaryExpression	1		492426	0					
ANR	492700	MultiplicativeExpression	( j2k -> cstr_info -> tw * j2k -> cstr_info -> th ) * ( 1 + j2k -> cstr_info -> packno )		492426	1		*			
ANR	492701	MultiplicativeExpression	j2k -> cstr_info -> tw * j2k -> cstr_info -> th		492426	0		*			
ANR	492702	PtrMemberAccess	j2k -> cstr_info -> tw		492426	0					
ANR	492703	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492704	Identifier	j2k		492426	0					
ANR	492705	Identifier	cstr_info		492426	1					
ANR	492706	Identifier	tw		492426	1					
ANR	492707	PtrMemberAccess	j2k -> cstr_info -> th		492426	1					
ANR	492708	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492709	Identifier	j2k		492426	0					
ANR	492710	Identifier	cstr_info		492426	1					
ANR	492711	Identifier	th		492426	1					
ANR	492712	AdditiveExpression	1 + j2k -> cstr_info -> packno		492426	1		+			
ANR	492713	PrimaryExpression	1		492426	0					
ANR	492714	PtrMemberAccess	j2k -> cstr_info -> packno		492426	1					
ANR	492715	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492716	Identifier	j2k		492426	0					
ANR	492717	Identifier	cstr_info		492426	1					
ANR	492718	Identifier	packno		492426	1					
ANR	492719	BreakStatement	break ;	1372:12:44248:44253	492426	6	True				
ANR	492720	Label	default :	1375:8:44321:44328	492426	7	True				
ANR	492721	Identifier	default		492426	0					
ANR	492722	IfStatement	if ( tileno < 0 )		492426	8					
ANR	492723	Condition	tileno < 0	1376:16:44346:44355	492426	0	True				
ANR	492724	RelationalExpression	tileno < 0		492426	0		<			
ANR	492725	Identifier	tileno		492426	0					
ANR	492726	PrimaryExpression	0		492426	1					
ANR	492727	CompoundStatement		87:12:2650:2650	492426	1					
ANR	492728	ExpressionStatement	svalnum = j2k -> cstr_info -> tw * j2k -> cstr_info -> th * j2k -> cstr_info -> packno	1379:16:44464:44538	492426	0	True				
ANR	492729	AssignmentExpression	svalnum = j2k -> cstr_info -> tw * j2k -> cstr_info -> th * j2k -> cstr_info -> packno		492426	0		=			
ANR	492730	Identifier	svalnum		492426	0					
ANR	492731	MultiplicativeExpression	j2k -> cstr_info -> tw * j2k -> cstr_info -> th * j2k -> cstr_info -> packno		492426	1		*			
ANR	492732	PtrMemberAccess	j2k -> cstr_info -> tw		492426	0					
ANR	492733	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492734	Identifier	j2k		492426	0					
ANR	492735	Identifier	cstr_info		492426	1					
ANR	492736	Identifier	tw		492426	1					
ANR	492737	MultiplicativeExpression	j2k -> cstr_info -> th * j2k -> cstr_info -> packno		492426	1		*			
ANR	492738	PtrMemberAccess	j2k -> cstr_info -> th		492426	0					
ANR	492739	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492740	Identifier	j2k		492426	0					
ANR	492741	Identifier	cstr_info		492426	1					
ANR	492742	Identifier	th		492426	1					
ANR	492743	PtrMemberAccess	j2k -> cstr_info -> packno		492426	1					
ANR	492744	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492745	Identifier	j2k		492426	0					
ANR	492746	Identifier	cstr_info		492426	1					
ANR	492747	Identifier	packno		492426	1					
ANR	492748	ElseStatement	else		492426	0					
ANR	492749	CompoundStatement		91:12:2833:2833	492426	0					
ANR	492750	ExpressionStatement	svalnum = j2k -> cstr_info -> packno	1383:16:44647:44679	492426	0	True				
ANR	492751	AssignmentExpression	svalnum = j2k -> cstr_info -> packno		492426	0		=			
ANR	492752	Identifier	svalnum		492426	0					
ANR	492753	PtrMemberAccess	j2k -> cstr_info -> packno		492426	1					
ANR	492754	PtrMemberAccess	j2k -> cstr_info		492426	0					
ANR	492755	Identifier	j2k		492426	0					
ANR	492756	Identifier	cstr_info		492426	1					
ANR	492757	Identifier	packno		492426	1					
ANR	492758	BreakStatement	break ;	1385:12:44707:44712	492426	9	True				
ANR	492759	ExpressionStatement	esd -> senst = senst	1391:4:44766:44784	492426	8	True				
ANR	492760	AssignmentExpression	esd -> senst = senst		492426	0		=			
ANR	492761	PtrMemberAccess	esd -> senst		492426	0					
ANR	492762	Identifier	esd		492426	0					
ANR	492763	Identifier	senst		492426	1					
ANR	492764	Identifier	senst		492426	1					
ANR	492765	ExpressionStatement	esd -> ad_size = ad_size	1392:4:44790:44812	492426	9	True				
ANR	492766	AssignmentExpression	esd -> ad_size = ad_size		492426	0		=			
ANR	492767	PtrMemberAccess	esd -> ad_size		492426	0					
ANR	492768	Identifier	esd		492426	0					
ANR	492769	Identifier	ad_size		492426	1					
ANR	492770	Identifier	ad_size		492426	1					
ANR	492771	ExpressionStatement	esd -> se_size = se_size	1393:4:44818:44840	492426	10	True				
ANR	492772	AssignmentExpression	esd -> se_size = se_size		492426	0		=			
ANR	492773	PtrMemberAccess	esd -> se_size		492426	0					
ANR	492774	Identifier	esd		492426	0					
ANR	492775	Identifier	se_size		492426	1					
ANR	492776	Identifier	se_size		492426	1					
ANR	492777	ExpressionStatement	esd -> addrm = addrm	1394:4:44846:44864	492426	11	True				
ANR	492778	AssignmentExpression	esd -> addrm = addrm		492426	0		=			
ANR	492779	PtrMemberAccess	esd -> addrm		492426	0					
ANR	492780	Identifier	esd		492426	0					
ANR	492781	Identifier	addrm		492426	1					
ANR	492782	Identifier	addrm		492426	1					
ANR	492783	ExpressionStatement	esd -> svalnum = svalnum	1395:4:44870:44892	492426	12	True				
ANR	492784	AssignmentExpression	esd -> svalnum = svalnum		492426	0		=			
ANR	492785	PtrMemberAccess	esd -> svalnum		492426	0					
ANR	492786	Identifier	esd		492426	0					
ANR	492787	Identifier	svalnum		492426	1					
ANR	492788	Identifier	svalnum		492426	1					
ANR	492789	ExpressionStatement	esd -> numcomps = j2k -> image -> numcomps	1396:4:44898:44934	492426	13	True				
ANR	492790	AssignmentExpression	esd -> numcomps = j2k -> image -> numcomps		492426	0		=			
ANR	492791	PtrMemberAccess	esd -> numcomps		492426	0					
ANR	492792	Identifier	esd		492426	0					
ANR	492793	Identifier	numcomps		492426	1					
ANR	492794	PtrMemberAccess	j2k -> image -> numcomps		492426	1					
ANR	492795	PtrMemberAccess	j2k -> image		492426	0					
ANR	492796	Identifier	j2k		492426	0					
ANR	492797	Identifier	image		492426	1					
ANR	492798	Identifier	numcomps		492426	1					
ANR	492799	ExpressionStatement	esd -> tileno = tileno	1397:4:44940:44960	492426	14	True				
ANR	492800	AssignmentExpression	esd -> tileno = tileno		492426	0		=			
ANR	492801	PtrMemberAccess	esd -> tileno		492426	0					
ANR	492802	Identifier	esd		492426	0					
ANR	492803	Identifier	tileno		492426	1					
ANR	492804	Identifier	tileno		492426	1					
ANR	492805	IfStatement	if ( esd -> numcomps < 257 )		492426	15					
ANR	492806	Condition	esd -> numcomps < 257	1401:8:45043:45061	492426	0	True				
ANR	492807	RelationalExpression	esd -> numcomps < 257		492426	0		<			
ANR	492808	PtrMemberAccess	esd -> numcomps		492426	0					
ANR	492809	Identifier	esd		492426	0					
ANR	492810	Identifier	numcomps		492426	1					
ANR	492811	PrimaryExpression	257		492426	1					
ANR	492812	CompoundStatement		110:29:3268:3268	492426	1					
ANR	492813	ExpressionStatement	esd -> Lesd = 4 + ( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )	1402:8:45074:45144	492426	0	True				
ANR	492814	AssignmentExpression	esd -> Lesd = 4 + ( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )		492426	0		=			
ANR	492815	PtrMemberAccess	esd -> Lesd		492426	0					
ANR	492816	Identifier	esd		492426	0					
ANR	492817	Identifier	Lesd		492426	1					
ANR	492818	AdditiveExpression	4 + ( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )		492426	1		+			
ANR	492819	PrimaryExpression	4		492426	0					
ANR	492820	CastExpression	( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )		492426	1					
ANR	492821	CastTarget	unsigned short int		492426	0					
ANR	492822	MultiplicativeExpression	esd -> svalnum * esd -> sensval_size		492426	1		*			
ANR	492823	PtrMemberAccess	esd -> svalnum		492426	0					
ANR	492824	Identifier	esd		492426	0					
ANR	492825	Identifier	svalnum		492426	1					
ANR	492826	PtrMemberAccess	esd -> sensval_size		492426	1					
ANR	492827	Identifier	esd		492426	0					
ANR	492828	Identifier	sensval_size		492426	1					
ANR	492829	ElseStatement	else		492426	0					
ANR	492830	CompoundStatement		112:11:3361:3361	492426	0					
ANR	492831	ExpressionStatement	esd -> Lesd = 5 + ( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )	1404:8:45167:45237	492426	0	True				
ANR	492832	AssignmentExpression	esd -> Lesd = 5 + ( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )		492426	0		=			
ANR	492833	PtrMemberAccess	esd -> Lesd		492426	0					
ANR	492834	Identifier	esd		492426	0					
ANR	492835	Identifier	Lesd		492426	1					
ANR	492836	AdditiveExpression	5 + ( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )		492426	1		+			
ANR	492837	PrimaryExpression	5		492426	0					
ANR	492838	CastExpression	( unsigned short int ) ( esd -> svalnum * esd -> sensval_size )		492426	1					
ANR	492839	CastTarget	unsigned short int		492426	0					
ANR	492840	MultiplicativeExpression	esd -> svalnum * esd -> sensval_size		492426	1		*			
ANR	492841	PtrMemberAccess	esd -> svalnum		492426	0					
ANR	492842	Identifier	esd		492426	0					
ANR	492843	Identifier	svalnum		492426	1					
ANR	492844	PtrMemberAccess	esd -> sensval_size		492426	1					
ANR	492845	Identifier	esd		492426	0					
ANR	492846	Identifier	sensval_size		492426	1					
ANR	492847	IfStatement	if ( comp >= 0 )		492426	16					
ANR	492848	Condition	comp >= 0	1408:8:45285:45293	492426	0	True				
ANR	492849	RelationalExpression	comp >= 0		492426	0		>=			
ANR	492850	Identifier	comp		492426	0					
ANR	492851	PrimaryExpression	0		492426	1					
ANR	492852	CompoundStatement		117:19:3500:3500	492426	1					
ANR	492853	ExpressionStatement	esd -> Cesd = comp	1409:8:45306:45322	492426	0	True				
ANR	492854	AssignmentExpression	esd -> Cesd = comp		492426	0		=			
ANR	492855	PtrMemberAccess	esd -> Cesd		492426	0					
ANR	492856	Identifier	esd		492426	0					
ANR	492857	Identifier	Cesd		492426	1					
ANR	492858	Identifier	comp		492426	1					
ANR	492859	ElseStatement	else		492426	0					
ANR	492860	CompoundStatement		121:4:3574:3574	492426	0					
ANR	492861	ExpressionStatement	esd -> Cesd = 0	1413:8:45380:45393	492426	0	True				
ANR	492862	AssignmentExpression	esd -> Cesd = 0		492426	0		=			
ANR	492863	PtrMemberAccess	esd -> Cesd		492426	0					
ANR	492864	Identifier	esd		492426	0					
ANR	492865	Identifier	Cesd		492426	1					
ANR	492866	PrimaryExpression	0		492426	1					
ANR	492867	ExpressionStatement	esd -> Pesd = 0x00	1417:4:45427:45443	492426	17	True				
ANR	492868	AssignmentExpression	esd -> Pesd = 0x00		492426	0		=			
ANR	492869	PtrMemberAccess	esd -> Pesd		492426	0					
ANR	492870	Identifier	esd		492426	0					
ANR	492871	Identifier	Pesd		492426	1					
ANR	492872	PrimaryExpression	0x00		492426	1					
ANR	492873	ExpressionStatement	esd -> Pesd |= ( esd -> addrm & 0x03 ) << 6	1418:4:45449:45486	492426	18	True				
ANR	492874	AssignmentExpression	esd -> Pesd |= ( esd -> addrm & 0x03 ) << 6		492426	0		|=			
ANR	492875	PtrMemberAccess	esd -> Pesd		492426	0					
ANR	492876	Identifier	esd		492426	0					
ANR	492877	Identifier	Pesd		492426	1					
ANR	492878	ShiftExpression	( esd -> addrm & 0x03 ) << 6		492426	1		<<			
ANR	492879	BitAndExpression	esd -> addrm & 0x03		492426	0		&			
ANR	492880	PtrMemberAccess	esd -> addrm		492426	0					
ANR	492881	Identifier	esd		492426	0					
ANR	492882	Identifier	addrm		492426	1					
ANR	492883	PrimaryExpression	0x03		492426	1					
ANR	492884	PrimaryExpression	6		492426	1					
ANR	492885	ExpressionStatement	esd -> Pesd |= ( esd -> senst & 0x07 ) << 3	1419:4:45514:45551	492426	19	True				
ANR	492886	AssignmentExpression	esd -> Pesd |= ( esd -> senst & 0x07 ) << 3		492426	0		|=			
ANR	492887	PtrMemberAccess	esd -> Pesd		492426	0					
ANR	492888	Identifier	esd		492426	0					
ANR	492889	Identifier	Pesd		492426	1					
ANR	492890	ShiftExpression	( esd -> senst & 0x07 ) << 3		492426	1		<<			
ANR	492891	BitAndExpression	esd -> senst & 0x07		492426	0		&			
ANR	492892	PtrMemberAccess	esd -> senst		492426	0					
ANR	492893	Identifier	esd		492426	0					
ANR	492894	Identifier	senst		492426	1					
ANR	492895	PrimaryExpression	0x07		492426	1					
ANR	492896	PrimaryExpression	3		492426	1					
ANR	492897	ExpressionStatement	esd -> Pesd |= ( ( esd -> se_size >> 1 ) & 0x01 ) << 2	1420:4:45580:45626	492426	20	True				
ANR	492898	AssignmentExpression	esd -> Pesd |= ( ( esd -> se_size >> 1 ) & 0x01 ) << 2		492426	0		|=			
ANR	492899	PtrMemberAccess	esd -> Pesd		492426	0					
ANR	492900	Identifier	esd		492426	0					
ANR	492901	Identifier	Pesd		492426	1					
ANR	492902	ShiftExpression	( ( esd -> se_size >> 1 ) & 0x01 ) << 2		492426	1		<<			
ANR	492903	BitAndExpression	( esd -> se_size >> 1 ) & 0x01		492426	0		&			
ANR	492904	ShiftExpression	esd -> se_size >> 1		492426	0		>>			
ANR	492905	PtrMemberAccess	esd -> se_size		492426	0					
ANR	492906	Identifier	esd		492426	0					
ANR	492907	Identifier	se_size		492426	1					
ANR	492908	PrimaryExpression	1		492426	1					
ANR	492909	PrimaryExpression	0x01		492426	1					
ANR	492910	PrimaryExpression	2		492426	1					
ANR	492911	ExpressionStatement	esd -> Pesd |= ( ( esd -> ad_size >> 2 ) & 0x01 ) << 1	1421:4:45655:45701	492426	21	True				
ANR	492912	AssignmentExpression	esd -> Pesd |= ( ( esd -> ad_size >> 2 ) & 0x01 ) << 1		492426	0		|=			
ANR	492913	PtrMemberAccess	esd -> Pesd		492426	0					
ANR	492914	Identifier	esd		492426	0					
ANR	492915	Identifier	Pesd		492426	1					
ANR	492916	ShiftExpression	( ( esd -> ad_size >> 2 ) & 0x01 ) << 1		492426	1		<<			
ANR	492917	BitAndExpression	( esd -> ad_size >> 2 ) & 0x01		492426	0		&			
ANR	492918	ShiftExpression	esd -> ad_size >> 2		492426	0		>>			
ANR	492919	PtrMemberAccess	esd -> ad_size		492426	0					
ANR	492920	Identifier	esd		492426	0					
ANR	492921	Identifier	ad_size		492426	1					
ANR	492922	PrimaryExpression	2		492426	1					
ANR	492923	PrimaryExpression	0x01		492426	1					
ANR	492924	PrimaryExpression	1		492426	1					
ANR	492925	ExpressionStatement	esd -> Pesd |= ( comp < 0 ) ? 0x01 : 0x00	1422:4:45729:45766	492426	22	True				
ANR	492926	AssignmentExpression	esd -> Pesd |= ( comp < 0 ) ? 0x01 : 0x00		492426	0		|=			
ANR	492927	PtrMemberAccess	esd -> Pesd		492426	0					
ANR	492928	Identifier	esd		492426	0					
ANR	492929	Identifier	Pesd		492426	1					
ANR	492930	ConditionalExpression	( comp < 0 ) ? 0x01 : 0x00		492426	1					
ANR	492931	Condition	comp < 0		492426	0					
ANR	492932	RelationalExpression	comp < 0		492426	0		<			
ANR	492933	Identifier	comp		492426	0					
ANR	492934	PrimaryExpression	0		492426	1					
ANR	492935	PrimaryExpression	0x01		492426	1					
ANR	492936	PrimaryExpression	0x00		492426	2					
ANR	492937	IfStatement	if ( ! sensval )		492426	23					
ANR	492938	Condition	! sensval	1425:8:45881:45888	492426	0	True				
ANR	492939	UnaryOperationExpression	! sensval		492426	0					
ANR	492940	UnaryOperator	!		492426	0					
ANR	492941	Identifier	sensval		492426	1					
ANR	492942	CompoundStatement		134:18:4095:4095	492426	1					
ANR	492943	ExpressionStatement	esd -> data = NULL	1428:8:45950:45966	492426	0	True				
ANR	492944	AssignmentExpression	esd -> data = NULL		492426	0		=			
ANR	492945	PtrMemberAccess	esd -> data		492426	0					
ANR	492946	Identifier	esd		492426	0					
ANR	492947	Identifier	data		492426	1					
ANR	492948	Identifier	NULL		492426	1					
ANR	492949	ElseStatement	else		492426	0					
ANR	492950	CompoundStatement		139:11:4184:4184	492426	0					
ANR	492951	ExpressionStatement	esd -> data = ( unsigned char * ) sensval	1432:8:46083:46120	492426	0	True				
ANR	492952	AssignmentExpression	esd -> data = ( unsigned char * ) sensval		492426	0		=			
ANR	492953	PtrMemberAccess	esd -> data		492426	0					
ANR	492954	Identifier	esd		492426	0					
ANR	492955	Identifier	data		492426	1					
ANR	492956	CastExpression	( unsigned char * ) sensval		492426	1					
ANR	492957	CastTarget	unsigned char *		492426	0					
ANR	492958	Identifier	sensval		492426	1					
ANR	492959	ReturnStatement	return ( esd ) ;	1435:4:46133:46145	492426	24	True				
ANR	492960	Identifier	esd		492426	0					
ANR	492961	ReturnType	jpwl_esd_ms_t *		492426	1					
ANR	492962	Identifier	jpwl_esd_create		492426	2					
ANR	492963	ParameterList	"opj_j2k_t * j2k , int comp , unsigned char addrm , unsigned char ad_size , unsigned char senst , int se_size , int tileno , unsigned long int svalnum , void * sensval"		492426	3					
ANR	492964	Parameter	opj_j2k_t * j2k	1288:31:41544:41557	492426	0	True				
ANR	492965	ParameterType	opj_j2k_t *		492426	0					
ANR	492966	Identifier	j2k		492426	1					
ANR	492967	Parameter	int comp	1288:47:41560:41567	492426	1	True				
ANR	492968	ParameterType	int		492426	0					
ANR	492969	Identifier	comp		492426	1					
ANR	492970	Parameter	unsigned char addrm	1289:31:41601:41619	492426	2	True				
ANR	492971	ParameterType	unsigned char		492426	0					
ANR	492972	Identifier	addrm		492426	1					
ANR	492973	Parameter	unsigned char ad_size	1289:52:41622:41642	492426	3	True				
ANR	492974	ParameterType	unsigned char		492426	0					
ANR	492975	Identifier	ad_size		492426	1					
ANR	492976	Parameter	unsigned char senst	1290:31:41676:41694	492426	4	True				
ANR	492977	ParameterType	unsigned char		492426	0					
ANR	492978	Identifier	senst		492426	1					
ANR	492979	Parameter	int se_size	1290:52:41697:41707	492426	5	True				
ANR	492980	ParameterType	int		492426	0					
ANR	492981	Identifier	se_size		492426	1					
ANR	492982	Parameter	int tileno	1290:65:41710:41719	492426	6	True				
ANR	492983	ParameterType	int		492426	0					
ANR	492984	Identifier	tileno		492426	1					
ANR	492985	Parameter	unsigned long int svalnum	1291:31:41753:41777	492426	7	True				
ANR	492986	ParameterType	unsigned long int		492426	0					
ANR	492987	Identifier	svalnum		492426	1					
ANR	492988	Parameter	void * sensval	1291:58:41780:41792	492426	8	True				
ANR	492989	ParameterType	void *		492426	0					
ANR	492990	Identifier	sensval		492426	1					
ANR	492991	CFGEntryNode	ENTRY		492426		True				
ANR	492992	CFGExitNode	EXIT		492426		True				
ANR	492993	Symbol	opj_malloc		492426						
ANR	492994	Symbol	tileno		492426						
ANR	492995	Symbol	esd -> sensval_size		492426						
ANR	492996	Symbol	j2k -> cstr_info		492426						
ANR	492997	Symbol	esd -> Lesd		492426						
ANR	492998	Symbol	ad_size		492426						
ANR	492999	Symbol	esd -> Pesd		492426						
ANR	493000	Symbol	esd -> ad_size		492426						
ANR	493001	Symbol	esd -> tileno		492426						
ANR	493002	Symbol	* j2k -> image		492426						
ANR	493003	Symbol	addrm		492426						
ANR	493004	Symbol	EVT_ERROR		492426						
ANR	493005	Symbol	* esd		492426						
ANR	493006	Symbol	esd -> addrm		492426						
ANR	493007	Symbol	esd -> data		492426						
ANR	493008	Symbol	sensval		492426						
ANR	493009	Symbol	j2k -> cstr_info -> codestream_size		492426						
ANR	493010	Symbol	comp		492426						
ANR	493011	Symbol	esd -> numcomps		492426						
ANR	493012	Symbol	j2k		492426						
ANR	493013	Symbol	NULL		492426						
ANR	493014	Symbol	j2k -> cstr_info -> packno		492426						
ANR	493015	Symbol	esd -> se_size		492426						
ANR	493016	Symbol	svalnum		492426						
ANR	493017	Symbol	j2k -> cinfo		492426						
ANR	493018	Symbol	j2k -> image		492426						
ANR	493019	Symbol	* j2k		492426						
ANR	493020	Symbol	j2k -> cstr_info -> tw		492426						
ANR	493021	Symbol	* j2k -> cstr_info		492426						
ANR	493022	Symbol	j2k -> image -> numcomps		492426						
ANR	493023	Symbol	esd		492426						
ANR	493024	Symbol	* * j2k		492426						
ANR	493025	Symbol	se_size		492426						
ANR	493026	Symbol	senst		492426						
ANR	493027	Symbol	esd -> svalnum		492426						
ANR	493028	Symbol	esd -> Cesd		492426						
ANR	493029	Symbol	j2k -> cstr_info -> th		492426						
ANR	493030	Symbol	esd -> senst		492426						
ANR	493031	Function	jpwl_esd_fill	1438:0:46150:54582							
ANR	493032	FunctionDef	"jpwl_esd_fill (opj_j2k_t * j2k , jpwl_esd_ms_t * esd , unsigned char * buf)"		493031	0					
ANR	493033	CompoundStatement		1439:0:46229:54582	493031	0					
ANR	493034	IdentifierDeclStatement	int i ;	1441:4:46236:46241	493031	0	True				
ANR	493035	IdentifierDecl	i		493031	0					
ANR	493036	IdentifierDeclType	int		493031	0					
ANR	493037	Identifier	i		493031	1					
ANR	493038	IdentifierDeclStatement	unsigned long int vv ;	1442:4:46247:46267	493031	1	True				
ANR	493039	IdentifierDecl	vv		493031	0					
ANR	493040	IdentifierDeclType	unsigned long int		493031	0					
ANR	493041	Identifier	vv		493031	1					
ANR	493042	IdentifierDeclStatement	"unsigned long int addr1 = 0L , addr2 = 0L ;"	1443:4:46273:46313	493031	2	True				
ANR	493043	IdentifierDecl	addr1 = 0L		493031	0					
ANR	493044	IdentifierDeclType	unsigned long int		493031	0					
ANR	493045	Identifier	addr1		493031	1					
ANR	493046	AssignmentExpression	addr1 = 0L		493031	2		=			
ANR	493047	Identifier	addr1		493031	0					
ANR	493048	PrimaryExpression	0L		493031	1					
ANR	493049	IdentifierDecl	addr2 = 0L		493031	1					
ANR	493050	IdentifierDeclType	unsigned long int		493031	0					
ANR	493051	Identifier	addr2		493031	1					
ANR	493052	AssignmentExpression	addr2 = 0L		493031	2		=			
ANR	493053	Identifier	addr2		493031	0					
ANR	493054	PrimaryExpression	0L		493031	1					
ANR	493055	IdentifierDeclStatement	"double dvalue = 0.0 , Omax2 , tmp , TSE = 0.0 , MSE , oldMSE = 0.0 , PSNR , oldPSNR = 0.0 ;"	1444:4:46319:46412	493031	3	True				
ANR	493056	IdentifierDecl	dvalue = 0.0		493031	0					
ANR	493057	IdentifierDeclType	double		493031	0					
ANR	493058	Identifier	dvalue		493031	1					
ANR	493059	AssignmentExpression	dvalue = 0.0		493031	2		=			
ANR	493060	Identifier	dvalue		493031	0					
ANR	493061	PrimaryExpression	0.0		493031	1					
ANR	493062	IdentifierDecl	Omax2		493031	1					
ANR	493063	IdentifierDeclType	double		493031	0					
ANR	493064	Identifier	Omax2		493031	1					
ANR	493065	IdentifierDecl	tmp		493031	2					
ANR	493066	IdentifierDeclType	double		493031	0					
ANR	493067	Identifier	tmp		493031	1					
ANR	493068	IdentifierDecl	TSE = 0.0		493031	3					
ANR	493069	IdentifierDeclType	double		493031	0					
ANR	493070	Identifier	TSE		493031	1					
ANR	493071	AssignmentExpression	TSE = 0.0		493031	2		=			
ANR	493072	Identifier	TSE		493031	0					
ANR	493073	PrimaryExpression	0.0		493031	1					
ANR	493074	IdentifierDecl	MSE		493031	4					
ANR	493075	IdentifierDeclType	double		493031	0					
ANR	493076	Identifier	MSE		493031	1					
ANR	493077	IdentifierDecl	oldMSE = 0.0		493031	5					
ANR	493078	IdentifierDeclType	double		493031	0					
ANR	493079	Identifier	oldMSE		493031	1					
ANR	493080	AssignmentExpression	oldMSE = 0.0		493031	2		=			
ANR	493081	Identifier	oldMSE		493031	0					
ANR	493082	PrimaryExpression	0.0		493031	1					
ANR	493083	IdentifierDecl	PSNR		493031	6					
ANR	493084	IdentifierDeclType	double		493031	0					
ANR	493085	Identifier	PSNR		493031	1					
ANR	493086	IdentifierDecl	oldPSNR = 0.0		493031	7					
ANR	493087	IdentifierDeclType	double		493031	0					
ANR	493088	Identifier	oldPSNR		493031	1					
ANR	493089	AssignmentExpression	oldPSNR = 0.0		493031	2		=			
ANR	493090	Identifier	oldPSNR		493031	0					
ANR	493091	PrimaryExpression	0.0		493031	1					
ANR	493092	IdentifierDeclStatement	unsigned short int pfpvalue ;	1446:4:46418:46445	493031	4	True				
ANR	493093	IdentifierDecl	pfpvalue		493031	0					
ANR	493094	IdentifierDeclType	unsigned short int		493031	0					
ANR	493095	Identifier	pfpvalue		493031	1					
ANR	493096	IdentifierDeclStatement	unsigned long int addrmask = 0x00000000 ;	1447:4:46451:46490	493031	5	True				
ANR	493097	IdentifierDecl	addrmask = 0x00000000		493031	0					
ANR	493098	IdentifierDeclType	unsigned long int		493031	0					
ANR	493099	Identifier	addrmask		493031	1					
ANR	493100	AssignmentExpression	addrmask = 0x00000000		493031	2		=			
ANR	493101	Identifier	addrmask		493031	0					
ANR	493102	PrimaryExpression	0x00000000		493031	1					
ANR	493103	IdentifierDeclStatement	"opj_bool doneMH = OPJ_FALSE , doneTPH = OPJ_FALSE ;"	1448:4:46496:46544	493031	6	True				
ANR	493104	IdentifierDecl	doneMH = OPJ_FALSE		493031	0					
ANR	493105	IdentifierDeclType	opj_bool		493031	0					
ANR	493106	Identifier	doneMH		493031	1					
ANR	493107	AssignmentExpression	doneMH = OPJ_FALSE		493031	2		=			
ANR	493108	Identifier	OPJ_FALSE		493031	0					
ANR	493109	Identifier	OPJ_FALSE		493031	1					
ANR	493110	IdentifierDecl	doneTPH = OPJ_FALSE		493031	1					
ANR	493111	IdentifierDeclType	opj_bool		493031	0					
ANR	493112	Identifier	doneTPH		493031	1					
ANR	493113	AssignmentExpression	doneTPH = OPJ_FALSE		493031	2		=			
ANR	493114	Identifier	OPJ_FALSE		493031	0					
ANR	493115	Identifier	OPJ_FALSE		493031	1					
ANR	493116	ExpressionStatement	Omax2 = 0.0	1460:4:47266:47277	493031	7	True				
ANR	493117	AssignmentExpression	Omax2 = 0.0		493031	0		=			
ANR	493118	Identifier	Omax2		493031	0					
ANR	493119	PrimaryExpression	0.0		493031	1					
ANR	493120	ForStatement	for ( i = 0 ; i < j2k -> image -> numcomps ; i ++ )		493031	8					
ANR	493121	ForInit	i = 0 ;	1461:9:47288:47293	493031	0	True				
ANR	493122	AssignmentExpression	i = 0		493031	0		=			
ANR	493123	Identifier	i		493031	0					
ANR	493124	PrimaryExpression	0		493031	1					
ANR	493125	Condition	i < j2k -> image -> numcomps	1461:16:47295:47318	493031	1	True				
ANR	493126	RelationalExpression	i < j2k -> image -> numcomps		493031	0		<			
ANR	493127	Identifier	i		493031	0					
ANR	493128	PtrMemberAccess	j2k -> image -> numcomps		493031	1					
ANR	493129	PtrMemberAccess	j2k -> image		493031	0					
ANR	493130	Identifier	j2k		493031	0					
ANR	493131	Identifier	image		493031	1					
ANR	493132	Identifier	numcomps		493031	1					
ANR	493133	PostIncDecOperationExpression	i ++	1461:42:47321:47323	493031	2	True				
ANR	493134	Identifier	i		493031	0					
ANR	493135	IncDec	++		493031	1					
ANR	493136	CompoundStatement		23:47:1096:1096	493031	3					
ANR	493137	ExpressionStatement	"tmp = pow ( 2.0 , ( double ) ( j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp ) ) ) - 1"	1462:8:47336:47485	493031	0	True				
ANR	493138	AssignmentExpression	"tmp = pow ( 2.0 , ( double ) ( j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp ) ) ) - 1"		493031	0		=			
ANR	493139	Identifier	tmp		493031	0					
ANR	493140	AdditiveExpression	"pow ( 2.0 , ( double ) ( j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp ) ) ) - 1"		493031	1		-			
ANR	493141	CallExpression	"pow ( 2.0 , ( double ) ( j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp ) ) )"		493031	0					
ANR	493142	Callee	pow		493031	0					
ANR	493143	Identifier	pow		493031	0					
ANR	493144	ArgumentList	2.0		493031	1					
ANR	493145	Argument	2.0		493031	0					
ANR	493146	PrimaryExpression	2.0		493031	0					
ANR	493147	Argument	( double ) ( j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp ) )		493031	1					
ANR	493148	CastExpression	( double ) ( j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp ) )		493031	0					
ANR	493149	CastTarget	double		493031	0					
ANR	493150	ConditionalExpression	j2k -> image -> comps [ i ] . sgnd ? ( j2k -> image -> comps [ i ] . bpp - 1 ) : ( j2k -> image -> comps [ i ] . bpp )		493031	1					
ANR	493151	Condition	j2k -> image -> comps [ i ] . sgnd		493031	0					
ANR	493152	MemberAccess	j2k -> image -> comps [ i ] . sgnd		493031	0					
ANR	493153	ArrayIndexing	j2k -> image -> comps [ i ]		493031	0					
ANR	493154	PtrMemberAccess	j2k -> image -> comps		493031	0					
ANR	493155	PtrMemberAccess	j2k -> image		493031	0					
ANR	493156	Identifier	j2k		493031	0					
ANR	493157	Identifier	image		493031	1					
ANR	493158	Identifier	comps		493031	1					
ANR	493159	Identifier	i		493031	1					
ANR	493160	Identifier	sgnd		493031	1					
ANR	493161	AdditiveExpression	j2k -> image -> comps [ i ] . bpp - 1		493031	1		-			
ANR	493162	MemberAccess	j2k -> image -> comps [ i ] . bpp		493031	0					
ANR	493163	ArrayIndexing	j2k -> image -> comps [ i ]		493031	0					
ANR	493164	PtrMemberAccess	j2k -> image -> comps		493031	0					
ANR	493165	PtrMemberAccess	j2k -> image		493031	0					
ANR	493166	Identifier	j2k		493031	0					
ANR	493167	Identifier	image		493031	1					
ANR	493168	Identifier	comps		493031	1					
ANR	493169	Identifier	i		493031	1					
ANR	493170	Identifier	bpp		493031	1					
ANR	493171	PrimaryExpression	1		493031	1					
ANR	493172	MemberAccess	j2k -> image -> comps [ i ] . bpp		493031	2					
ANR	493173	ArrayIndexing	j2k -> image -> comps [ i ]		493031	0					
ANR	493174	PtrMemberAccess	j2k -> image -> comps		493031	0					
ANR	493175	PtrMemberAccess	j2k -> image		493031	0					
ANR	493176	Identifier	j2k		493031	0					
ANR	493177	Identifier	image		493031	1					
ANR	493178	Identifier	comps		493031	1					
ANR	493179	Identifier	i		493031	1					
ANR	493180	Identifier	bpp		493031	1					
ANR	493181	PrimaryExpression	1		493031	1					
ANR	493182	IfStatement	if ( tmp > Omax2 )		493031	1					
ANR	493183	Condition	tmp > Omax2	1464:12:47499:47509	493031	0	True				
ANR	493184	RelationalExpression	tmp > Omax2		493031	0		>			
ANR	493185	Identifier	tmp		493031	0					
ANR	493186	Identifier	Omax2		493031	1					
ANR	493187	CompoundStatement		26:25:1282:1282	493031	1					
ANR	493188	ExpressionStatement	Omax2 = tmp	1465:12:47526:47537	493031	0	True				
ANR	493189	AssignmentExpression	Omax2 = tmp		493031	0		=			
ANR	493190	Identifier	Omax2		493031	0					
ANR	493191	Identifier	tmp		493031	1					
ANR	493192	ExpressionStatement	Omax2 = Omax2 * Omax2	1468:4:47559:47580	493031	9	True				
ANR	493193	AssignmentExpression	Omax2 = Omax2 * Omax2		493031	0		=			
ANR	493194	Identifier	Omax2		493031	0					
ANR	493195	MultiplicativeExpression	Omax2 * Omax2		493031	1		*			
ANR	493196	Identifier	Omax2		493031	0					
ANR	493197	Identifier	Omax2		493031	1					
ANR	493198	IfStatement	if ( esd -> data )		493031	10					
ANR	493199	Condition	esd -> data	1471:8:47684:47692	493031	0	True				
ANR	493200	PtrMemberAccess	esd -> data		493031	0					
ANR	493201	Identifier	esd		493031	0					
ANR	493202	Identifier	data		493031	1					
ANR	493203	CompoundStatement		33:19:1465:1465	493031	1					
ANR	493204	ForStatement	for ( i = 0 ; i < ( int ) esd -> svalnum ; i ++ )		493031	0					
ANR	493205	ForInit	i = 0 ;	1472:13:47710:47715	493031	0	True				
ANR	493206	AssignmentExpression	i = 0		493031	0		=			
ANR	493207	Identifier	i		493031	0					
ANR	493208	PrimaryExpression	0		493031	1					
ANR	493209	Condition	i < ( int ) esd -> svalnum	1472:20:47717:47738	493031	1	True				
ANR	493210	RelationalExpression	i < ( int ) esd -> svalnum		493031	0		<			
ANR	493211	Identifier	i		493031	0					
ANR	493212	CastExpression	( int ) esd -> svalnum		493031	1					
ANR	493213	CastTarget	int		493031	0					
ANR	493214	PtrMemberAccess	esd -> svalnum		493031	1					
ANR	493215	Identifier	esd		493031	0					
ANR	493216	Identifier	svalnum		493031	1					
ANR	493217	PostIncDecOperationExpression	i ++	1472:44:47741:47743	493031	2	True				
ANR	493218	Identifier	i		493031	0					
ANR	493219	IncDec	++		493031	1					
ANR	493220	CompoundStatement		34:49:1516:1516	493031	3					
ANR	493221	ExpressionStatement	* ( buf ++ ) = esd -> data [ i ]	1473:12:47760:47783	493031	0	True				
ANR	493222	AssignmentExpression	* ( buf ++ ) = esd -> data [ i ]		493031	0		=			
ANR	493223	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493224	UnaryOperator	*		493031	0					
ANR	493225	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493226	Identifier	buf		493031	0					
ANR	493227	IncDec	++		493031	1					
ANR	493228	ArrayIndexing	esd -> data [ i ]		493031	1					
ANR	493229	PtrMemberAccess	esd -> data		493031	0					
ANR	493230	Identifier	esd		493031	0					
ANR	493231	Identifier	data		493031	1					
ANR	493232	Identifier	i		493031	1					
ANR	493233	ReturnStatement	return OPJ_TRUE ;	1475:8:47803:47818	493031	1	True				
ANR	493234	Identifier	OPJ_TRUE		493031	0					
ANR	493235	IfStatement	if ( esd -> ad_size == 2 )		493031	11					
ANR	493236	Condition	esd -> ad_size == 2	1479:8:47861:47877	493031	0	True				
ANR	493237	EqualityExpression	esd -> ad_size == 2		493031	0		==			
ANR	493238	PtrMemberAccess	esd -> ad_size		493031	0					
ANR	493239	Identifier	esd		493031	0					
ANR	493240	Identifier	ad_size		493031	1					
ANR	493241	PrimaryExpression	2		493031	1					
ANR	493242	CompoundStatement		41:27:1650:1650	493031	1					
ANR	493243	ExpressionStatement	addrmask = 0x0000FFFF	1480:8:47890:47911	493031	0	True				
ANR	493244	AssignmentExpression	addrmask = 0x0000FFFF		493031	0		=			
ANR	493245	Identifier	addrmask		493031	0					
ANR	493246	PrimaryExpression	0x0000FFFF		493031	1					
ANR	493247	ElseStatement	else		493031	0					
ANR	493248	CompoundStatement		43:11:1713:1713	493031	0					
ANR	493249	ExpressionStatement	addrmask = 0xFFFFFFFF	1482:8:47953:47974	493031	0	True				
ANR	493250	AssignmentExpression	addrmask = 0xFFFFFFFF		493031	0		=			
ANR	493251	Identifier	addrmask		493031	0					
ANR	493252	PrimaryExpression	0xFFFFFFFF		493031	1					
ANR	493253	IfStatement	if ( esd -> numcomps < 257 )		493031	12					
ANR	493254	Condition	esd -> numcomps < 257	1486:8:48067:48085	493031	0	True				
ANR	493255	RelationalExpression	esd -> numcomps < 257		493031	0		<			
ANR	493256	PtrMemberAccess	esd -> numcomps		493031	0					
ANR	493257	Identifier	esd		493031	0					
ANR	493258	Identifier	numcomps		493031	1					
ANR	493259	PrimaryExpression	257		493031	1					
ANR	493260	CompoundStatement		48:29:1858:1858	493031	1					
ANR	493261	ExpressionStatement	buf += 6	1487:8:48098:48106	493031	0	True				
ANR	493262	AssignmentExpression	buf += 6		493031	0		+=			
ANR	493263	Identifier	buf		493031	0					
ANR	493264	PrimaryExpression	6		493031	1					
ANR	493265	ElseStatement	else		493031	0					
ANR	493266	CompoundStatement		50:11:1889:1889	493031	0					
ANR	493267	ExpressionStatement	buf += 7	1489:8:48129:48137	493031	0	True				
ANR	493268	AssignmentExpression	buf += 7		493031	0		+=			
ANR	493269	Identifier	buf		493031	0					
ANR	493270	PrimaryExpression	7		493031	1					
ANR	493271	ForStatement	for ( vv = ( esd -> tileno < 0 ) ? 0 : ( j2k -> cstr_info -> packno * esd -> tileno ) ; vv < esd -> svalnum ; vv ++ )		493031	13					
ANR	493272	ForInit	vv = ( esd -> tileno < 0 ) ? 0 : ( j2k -> cstr_info -> packno * esd -> tileno ) ;	1493:9:48192:48259	493031	0	True				
ANR	493273	AssignmentExpression	vv = ( esd -> tileno < 0 ) ? 0 : ( j2k -> cstr_info -> packno * esd -> tileno )		493031	0		=			
ANR	493274	Identifier	vv		493031	0					
ANR	493275	ConditionalExpression	( esd -> tileno < 0 ) ? 0 : ( j2k -> cstr_info -> packno * esd -> tileno )		493031	1					
ANR	493276	Condition	esd -> tileno < 0		493031	0					
ANR	493277	RelationalExpression	esd -> tileno < 0		493031	0		<			
ANR	493278	PtrMemberAccess	esd -> tileno		493031	0					
ANR	493279	Identifier	esd		493031	0					
ANR	493280	Identifier	tileno		493031	1					
ANR	493281	PrimaryExpression	0		493031	1					
ANR	493282	PrimaryExpression	0		493031	1					
ANR	493283	MultiplicativeExpression	j2k -> cstr_info -> packno * esd -> tileno		493031	2		*			
ANR	493284	PtrMemberAccess	j2k -> cstr_info -> packno		493031	0					
ANR	493285	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493286	Identifier	j2k		493031	0					
ANR	493287	Identifier	cstr_info		493031	1					
ANR	493288	Identifier	packno		493031	1					
ANR	493289	PtrMemberAccess	esd -> tileno		493031	1					
ANR	493290	Identifier	esd		493031	0					
ANR	493291	Identifier	tileno		493031	1					
ANR	493292	Condition	vv < esd -> svalnum	1494:12:48273:48289	493031	1	True				
ANR	493293	RelationalExpression	vv < esd -> svalnum		493031	0		<			
ANR	493294	Identifier	vv		493031	0					
ANR	493295	PtrMemberAccess	esd -> svalnum		493031	1					
ANR	493296	Identifier	esd		493031	0					
ANR	493297	Identifier	svalnum		493031	1					
ANR	493298	PostIncDecOperationExpression	vv ++	1494:31:48292:48295	493031	2	True				
ANR	493299	Identifier	vv		493031	0					
ANR	493300	IncDec	++		493031	1					
ANR	493301	CompoundStatement		58:8:2079:2175	493031	3					
ANR	493302	IdentifierDeclStatement	"int thistile = vv / j2k -> cstr_info -> packno , thispacket = vv % j2k -> cstr_info -> packno ;"	1496:8:48309:48405	493031	0	True				
ANR	493303	IdentifierDecl	thistile = vv / j2k -> cstr_info -> packno		493031	0					
ANR	493304	IdentifierDeclType	int		493031	0					
ANR	493305	Identifier	thistile		493031	1					
ANR	493306	AssignmentExpression	thistile = vv / j2k -> cstr_info -> packno		493031	2		=			
ANR	493307	Identifier	thistile		493031	0					
ANR	493308	MultiplicativeExpression	vv / j2k -> cstr_info -> packno		493031	1		/			
ANR	493309	Identifier	vv		493031	0					
ANR	493310	PtrMemberAccess	j2k -> cstr_info -> packno		493031	1					
ANR	493311	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493312	Identifier	j2k		493031	0					
ANR	493313	Identifier	cstr_info		493031	1					
ANR	493314	Identifier	packno		493031	1					
ANR	493315	IdentifierDecl	thispacket = vv % j2k -> cstr_info -> packno		493031	1					
ANR	493316	IdentifierDeclType	int		493031	0					
ANR	493317	Identifier	thispacket		493031	1					
ANR	493318	AssignmentExpression	thispacket = vv % j2k -> cstr_info -> packno		493031	2		=			
ANR	493319	Identifier	thispacket		493031	0					
ANR	493320	MultiplicativeExpression	vv % j2k -> cstr_info -> packno		493031	1		%			
ANR	493321	Identifier	vv		493031	0					
ANR	493322	PtrMemberAccess	j2k -> cstr_info -> packno		493031	1					
ANR	493323	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493324	Identifier	j2k		493031	0					
ANR	493325	Identifier	cstr_info		493031	1					
ANR	493326	Identifier	packno		493031	1					
ANR	493327	IfStatement	if ( thistile == j2k -> cstr_info -> tw * j2k -> cstr_info -> th )		493031	1					
ANR	493328	Condition	thistile == j2k -> cstr_info -> tw * j2k -> cstr_info -> th	1500:12:48469:48519	493031	0	True				
ANR	493329	EqualityExpression	thistile == j2k -> cstr_info -> tw * j2k -> cstr_info -> th		493031	0		==			
ANR	493330	Identifier	thistile		493031	0					
ANR	493331	MultiplicativeExpression	j2k -> cstr_info -> tw * j2k -> cstr_info -> th		493031	1		*			
ANR	493332	PtrMemberAccess	j2k -> cstr_info -> tw		493031	0					
ANR	493333	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493334	Identifier	j2k		493031	0					
ANR	493335	Identifier	cstr_info		493031	1					
ANR	493336	Identifier	tw		493031	1					
ANR	493337	PtrMemberAccess	j2k -> cstr_info -> th		493031	1					
ANR	493338	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493339	Identifier	j2k		493031	0					
ANR	493340	Identifier	cstr_info		493031	1					
ANR	493341	Identifier	th		493031	1					
ANR	493342	CompoundStatement		62:65:2292:2292	493031	1					
ANR	493343	BreakStatement	break ;	1501:12:48536:48541	493031	0	True				
ANR	493344	IfStatement	if ( thispacket == 0 )		493031	2					
ANR	493345	Condition	thispacket == 0	1505:12:48605:48619	493031	0	True				
ANR	493346	EqualityExpression	thispacket == 0		493031	0		==			
ANR	493347	Identifier	thispacket		493031	0					
ANR	493348	PrimaryExpression	0		493031	1					
ANR	493349	CompoundStatement		67:29:2392:2392	493031	1					
ANR	493350	ExpressionStatement	TSE = j2k -> cstr_info -> tile [ thistile ] . distotile	1506:12:48636:48682	493031	0	True				
ANR	493351	AssignmentExpression	TSE = j2k -> cstr_info -> tile [ thistile ] . distotile		493031	0		=			
ANR	493352	Identifier	TSE		493031	0					
ANR	493353	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . distotile		493031	1					
ANR	493354	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493355	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493356	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493357	Identifier	j2k		493031	0					
ANR	493358	Identifier	cstr_info		493031	1					
ANR	493359	Identifier	tile		493031	1					
ANR	493360	Identifier	thistile		493031	1					
ANR	493361	Identifier	distotile		493031	1					
ANR	493362	ExpressionStatement	oldMSE = TSE / j2k -> cstr_info -> tile [ thistile ] . numpix	1507:12:48696:48748	493031	1	True				
ANR	493363	AssignmentExpression	oldMSE = TSE / j2k -> cstr_info -> tile [ thistile ] . numpix		493031	0		=			
ANR	493364	Identifier	oldMSE		493031	0					
ANR	493365	MultiplicativeExpression	TSE / j2k -> cstr_info -> tile [ thistile ] . numpix		493031	1		/			
ANR	493366	Identifier	TSE		493031	0					
ANR	493367	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . numpix		493031	1					
ANR	493368	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493369	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493370	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493371	Identifier	j2k		493031	0					
ANR	493372	Identifier	cstr_info		493031	1					
ANR	493373	Identifier	tile		493031	1					
ANR	493374	Identifier	thistile		493031	1					
ANR	493375	Identifier	numpix		493031	1					
ANR	493376	ExpressionStatement	oldPSNR = 10.0 * log10 ( Omax2 / oldMSE )	1508:12:48762:48800	493031	2	True				
ANR	493377	AssignmentExpression	oldPSNR = 10.0 * log10 ( Omax2 / oldMSE )		493031	0		=			
ANR	493378	Identifier	oldPSNR		493031	0					
ANR	493379	MultiplicativeExpression	10.0 * log10 ( Omax2 / oldMSE )		493031	1		*			
ANR	493380	PrimaryExpression	10.0		493031	0					
ANR	493381	CallExpression	log10 ( Omax2 / oldMSE )		493031	1					
ANR	493382	Callee	log10		493031	0					
ANR	493383	Identifier	log10		493031	0					
ANR	493384	ArgumentList	Omax2 / oldMSE		493031	1					
ANR	493385	Argument	Omax2 / oldMSE		493031	0					
ANR	493386	MultiplicativeExpression	Omax2 / oldMSE		493031	0		/			
ANR	493387	Identifier	Omax2		493031	0					
ANR	493388	Identifier	oldMSE		493031	1					
ANR	493389	ExpressionStatement	TSE -= j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . disto	1512:8:48839:48901	493031	3	True				
ANR	493390	AssignmentExpression	TSE -= j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . disto		493031	0		-=			
ANR	493391	Identifier	TSE		493031	0					
ANR	493392	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . disto		493031	1					
ANR	493393	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ]		493031	0					
ANR	493394	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . packet		493031	0					
ANR	493395	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493396	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493397	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493398	Identifier	j2k		493031	0					
ANR	493399	Identifier	cstr_info		493031	1					
ANR	493400	Identifier	tile		493031	1					
ANR	493401	Identifier	thistile		493031	1					
ANR	493402	Identifier	packet		493031	1					
ANR	493403	Identifier	thispacket		493031	1					
ANR	493404	Identifier	disto		493031	1					
ANR	493405	ExpressionStatement	MSE = TSE / j2k -> cstr_info -> tile [ thistile ] . numpix	1515:8:48930:48979	493031	4	True				
ANR	493406	AssignmentExpression	MSE = TSE / j2k -> cstr_info -> tile [ thistile ] . numpix		493031	0		=			
ANR	493407	Identifier	MSE		493031	0					
ANR	493408	MultiplicativeExpression	TSE / j2k -> cstr_info -> tile [ thistile ] . numpix		493031	1		/			
ANR	493409	Identifier	TSE		493031	0					
ANR	493410	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . numpix		493031	1					
ANR	493411	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493412	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493413	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493414	Identifier	j2k		493031	0					
ANR	493415	Identifier	cstr_info		493031	1					
ANR	493416	Identifier	tile		493031	1					
ANR	493417	Identifier	thistile		493031	1					
ANR	493418	Identifier	numpix		493031	1					
ANR	493419	ExpressionStatement	PSNR = 10.0 * log10 ( Omax2 / MSE )	1518:8:49009:49041	493031	5	True				
ANR	493420	AssignmentExpression	PSNR = 10.0 * log10 ( Omax2 / MSE )		493031	0		=			
ANR	493421	Identifier	PSNR		493031	0					
ANR	493422	MultiplicativeExpression	10.0 * log10 ( Omax2 / MSE )		493031	1		*			
ANR	493423	PrimaryExpression	10.0		493031	0					
ANR	493424	CallExpression	log10 ( Omax2 / MSE )		493031	1					
ANR	493425	Callee	log10		493031	0					
ANR	493426	Identifier	log10		493031	0					
ANR	493427	ArgumentList	Omax2 / MSE		493031	1					
ANR	493428	Argument	Omax2 / MSE		493031	0					
ANR	493429	MultiplicativeExpression	Omax2 / MSE		493031	0		/			
ANR	493430	Identifier	Omax2		493031	0					
ANR	493431	Identifier	MSE		493031	1					
ANR	493432	SwitchStatement	switch ( esd -> addrm )		493031	6					
ANR	493433	Condition	esd -> addrm	1521:16:49097:49106	493031	0	True				
ANR	493434	PtrMemberAccess	esd -> addrm		493031	0					
ANR	493435	Identifier	esd		493031	0					
ANR	493436	Identifier	addrm		493031	1					
ANR	493437	CompoundStatement		83:28:2879:2879	493031	1					
ANR	493438	Statement	case	1524:8:49146:49149	493031	0	True				
ANR	493439	Statement	(	1524:13:49151:49151	493031	1	True				
ANR	493440	Statement	0	1524:14:49152:49152	493031	2	True				
ANR	493441	Statement	)	1524:15:49153:49153	493031	3	True				
ANR	493442	Statement	:	1524:16:49154:49154	493031	4	True				
ANR	493443	BreakStatement	break ;	1526:12:49209:49214	493031	5	True				
ANR	493444	Statement	case	1529:8:49250:49253	493031	6	True				
ANR	493445	Statement	(	1529:13:49255:49255	493031	7	True				
ANR	493446	Statement	1	1529:14:49256:49256	493031	8	True				
ANR	493447	Statement	)	1529:15:49257:49257	493031	9	True				
ANR	493448	Statement	:	1529:16:49258:49258	493031	10	True				
ANR	493449	ExpressionStatement	addr1 = ( j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . start_pos ) & addrmask	1531:12:49314:49414	493031	11	True				
ANR	493450	AssignmentExpression	addr1 = ( j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . start_pos ) & addrmask		493031	0		=			
ANR	493451	Identifier	addr1		493031	0					
ANR	493452	BitAndExpression	( j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . start_pos ) & addrmask		493031	1		&			
ANR	493453	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . start_pos		493031	0					
ANR	493454	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ]		493031	0					
ANR	493455	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . packet		493031	0					
ANR	493456	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493457	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493458	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493459	Identifier	j2k		493031	0					
ANR	493460	Identifier	cstr_info		493031	1					
ANR	493461	Identifier	tile		493031	1					
ANR	493462	Identifier	thistile		493031	1					
ANR	493463	Identifier	packet		493031	1					
ANR	493464	Identifier	thispacket		493031	1					
ANR	493465	Identifier	start_pos		493031	1					
ANR	493466	Identifier	addrmask		493031	1					
ANR	493467	ExpressionStatement	addr2 = ( j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . end_pos ) & addrmask	1534:12:49468:49546	493031	12	True				
ANR	493468	AssignmentExpression	addr2 = ( j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . end_pos ) & addrmask		493031	0		=			
ANR	493469	Identifier	addr2		493031	0					
ANR	493470	BitAndExpression	( j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . end_pos ) & addrmask		493031	1		&			
ANR	493471	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . end_pos		493031	0					
ANR	493472	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ]		493031	0					
ANR	493473	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . packet		493031	0					
ANR	493474	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493475	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493476	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493477	Identifier	j2k		493031	0					
ANR	493478	Identifier	cstr_info		493031	1					
ANR	493479	Identifier	tile		493031	1					
ANR	493480	Identifier	thistile		493031	1					
ANR	493481	Identifier	packet		493031	1					
ANR	493482	Identifier	thispacket		493031	1					
ANR	493483	Identifier	end_pos		493031	1					
ANR	493484	Identifier	addrmask		493031	1					
ANR	493485	BreakStatement	break ;	1535:12:49560:49565	493031	13	True				
ANR	493486	Statement	case	1538:8:49603:49606	493031	14	True				
ANR	493487	Statement	(	1538:13:49608:49608	493031	15	True				
ANR	493488	Statement	2	1538:14:49609:49609	493031	16	True				
ANR	493489	Statement	)	1538:15:49610:49610	493031	17	True				
ANR	493490	Statement	:	1538:16:49611:49611	493031	18	True				
ANR	493491	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Addressing mode packet_range is not implemented\\n"" )"	1540:12:49664:49781	493031	19	True				
ANR	493492	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Addressing mode packet_range is not implemented\\n"" )"		493031	0					
ANR	493493	Callee	opj_event_msg		493031	0					
ANR	493494	Identifier	opj_event_msg		493031	0					
ANR	493495	ArgumentList	j2k -> cinfo		493031	1					
ANR	493496	Argument	j2k -> cinfo		493031	0					
ANR	493497	PtrMemberAccess	j2k -> cinfo		493031	0					
ANR	493498	Identifier	j2k		493031	0					
ANR	493499	Identifier	cinfo		493031	1					
ANR	493500	Argument	EVT_WARNING		493031	1					
ANR	493501	Identifier	EVT_WARNING		493031	0					
ANR	493502	Argument	"""Addressing mode packet_range is not implemented\\n"""		493031	2					
ANR	493503	PrimaryExpression	"""Addressing mode packet_range is not implemented\\n"""		493031	0					
ANR	493504	BreakStatement	break ;	1542:12:49795:49800	493031	20	True				
ANR	493505	Label	default :	1545:8:49851:49858	493031	21	True				
ANR	493506	Identifier	default		493031	0					
ANR	493507	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Unknown addressing mode\\n"" )"	1547:12:49911:49978	493031	22	True				
ANR	493508	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Unknown addressing mode\\n"" )"		493031	0					
ANR	493509	Callee	opj_event_msg		493031	0					
ANR	493510	Identifier	opj_event_msg		493031	0					
ANR	493511	ArgumentList	j2k -> cinfo		493031	1					
ANR	493512	Argument	j2k -> cinfo		493031	0					
ANR	493513	PtrMemberAccess	j2k -> cinfo		493031	0					
ANR	493514	Identifier	j2k		493031	0					
ANR	493515	Identifier	cinfo		493031	1					
ANR	493516	Argument	EVT_WARNING		493031	1					
ANR	493517	Identifier	EVT_WARNING		493031	0					
ANR	493518	Argument	"""Unknown addressing mode\\n"""		493031	2					
ANR	493519	PrimaryExpression	"""Unknown addressing mode\\n"""		493031	0					
ANR	493520	BreakStatement	break ;	1548:12:49992:49997	493031	23	True				
ANR	493521	IfStatement	if ( ( esd -> senst == 0 ) && ( thispacket == 0 ) )		493031	7					
ANR	493522	Condition	( esd -> senst == 0 ) && ( thispacket == 0 )	1553:12:50090:50127	493031	0	True				
ANR	493523	AndExpression	( esd -> senst == 0 ) && ( thispacket == 0 )		493031	0		&&			
ANR	493524	EqualityExpression	esd -> senst == 0		493031	0		==			
ANR	493525	PtrMemberAccess	esd -> senst		493031	0					
ANR	493526	Identifier	esd		493031	0					
ANR	493527	Identifier	senst		493031	1					
ANR	493528	PrimaryExpression	0		493031	1					
ANR	493529	EqualityExpression	thispacket == 0		493031	1		==			
ANR	493530	Identifier	thispacket		493031	0					
ANR	493531	PrimaryExpression	0		493031	1					
ANR	493532	CompoundStatement		115:52:3900:3900	493031	1					
ANR	493533	IfStatement	if ( ( thistile == 0 ) && ! doneMH )		493031	0					
ANR	493534	Condition	( thistile == 0 ) && ! doneMH	1556:16:50179:50204	493031	0	True				
ANR	493535	AndExpression	( thistile == 0 ) && ! doneMH		493031	0		&&			
ANR	493536	EqualityExpression	thistile == 0		493031	0		==			
ANR	493537	Identifier	thistile		493031	0					
ANR	493538	PrimaryExpression	0		493031	1					
ANR	493539	UnaryOperationExpression	! doneMH		493031	1					
ANR	493540	UnaryOperator	!		493031	0					
ANR	493541	Identifier	doneMH		493031	1					
ANR	493542	CompoundStatement		118:44:3977:3977	493031	1					
ANR	493543	ExpressionStatement	addr1 = 0	1558:16:50278:50287	493031	0	True				
ANR	493544	AssignmentExpression	addr1 = 0		493031	0		=			
ANR	493545	Identifier	addr1		493031	0					
ANR	493546	PrimaryExpression	0		493031	1					
ANR	493547	ExpressionStatement	addr2 = j2k -> cstr_info -> main_head_end	1559:16:50323:50360	493031	1	True				
ANR	493548	AssignmentExpression	addr2 = j2k -> cstr_info -> main_head_end		493031	0		=			
ANR	493549	Identifier	addr2		493031	0					
ANR	493550	PtrMemberAccess	j2k -> cstr_info -> main_head_end		493031	1					
ANR	493551	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493552	Identifier	j2k		493031	0					
ANR	493553	Identifier	cstr_info		493031	1					
ANR	493554	Identifier	main_head_end		493031	1					
ANR	493555	ExpressionStatement	dvalue = - 10.0	1561:16:50447:50461	493031	2	True				
ANR	493556	AssignmentExpression	dvalue = - 10.0		493031	0		=			
ANR	493557	Identifier	dvalue		493031	0					
ANR	493558	UnaryOperationExpression	- 10.0		493031	1					
ANR	493559	UnaryOperator	-		493031	0					
ANR	493560	PrimaryExpression	10.0		493031	1					
ANR	493561	ExpressionStatement	doneMH = OPJ_TRUE	1562:16:50479:50496	493031	3	True				
ANR	493562	AssignmentExpression	doneMH = OPJ_TRUE		493031	0		=			
ANR	493563	Identifier	doneMH		493031	0					
ANR	493564	Identifier	OPJ_TRUE		493031	1					
ANR	493565	ExpressionStatement	vv --	1563:16:50544:50548	493031	4	True				
ANR	493566	PostIncDecOperationExpression	vv --		493031	0					
ANR	493567	Identifier	vv		493031	0					
ANR	493568	IncDec	--		493031	1					
ANR	493569	ElseStatement	else		493031	0					
ANR	493570	IfStatement	if ( ! doneTPH )		493031	0					
ANR	493571	Condition	! doneTPH	1565:23:50603:50610	493031	0	True				
ANR	493572	UnaryOperationExpression	! doneTPH		493031	0					
ANR	493573	UnaryOperator	!		493031	0					
ANR	493574	Identifier	doneTPH		493031	1					
ANR	493575	CompoundStatement		127:33:4383:4383	493031	1					
ANR	493576	ExpressionStatement	addr1 = j2k -> cstr_info -> tile [ thistile ] . start_pos	1567:16:50685:50733	493031	0	True				
ANR	493577	AssignmentExpression	addr1 = j2k -> cstr_info -> tile [ thistile ] . start_pos		493031	0		=			
ANR	493578	Identifier	addr1		493031	0					
ANR	493579	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . start_pos		493031	1					
ANR	493580	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493581	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493582	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493583	Identifier	j2k		493031	0					
ANR	493584	Identifier	cstr_info		493031	1					
ANR	493585	Identifier	tile		493031	1					
ANR	493586	Identifier	thistile		493031	1					
ANR	493587	Identifier	start_pos		493031	1					
ANR	493588	ExpressionStatement	addr2 = j2k -> cstr_info -> tile [ thistile ] . end_header	1568:16:50751:50800	493031	1	True				
ANR	493589	AssignmentExpression	addr2 = j2k -> cstr_info -> tile [ thistile ] . end_header		493031	0		=			
ANR	493590	Identifier	addr2		493031	0					
ANR	493591	MemberAccess	j2k -> cstr_info -> tile [ thistile ] . end_header		493031	1					
ANR	493592	ArrayIndexing	j2k -> cstr_info -> tile [ thistile ]		493031	0					
ANR	493593	PtrMemberAccess	j2k -> cstr_info -> tile		493031	0					
ANR	493594	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493595	Identifier	j2k		493031	0					
ANR	493596	Identifier	cstr_info		493031	1					
ANR	493597	Identifier	tile		493031	1					
ANR	493598	Identifier	thistile		493031	1					
ANR	493599	Identifier	end_header		493031	1					
ANR	493600	ExpressionStatement	dvalue = - 1.0	1570:16:50872:50885	493031	2	True				
ANR	493601	AssignmentExpression	dvalue = - 1.0		493031	0		=			
ANR	493602	Identifier	dvalue		493031	0					
ANR	493603	UnaryOperationExpression	- 1.0		493031	1					
ANR	493604	UnaryOperator	-		493031	0					
ANR	493605	PrimaryExpression	1.0		493031	1					
ANR	493606	ExpressionStatement	doneTPH = OPJ_TRUE	1571:16:50903:50921	493031	3	True				
ANR	493607	AssignmentExpression	doneTPH = OPJ_TRUE		493031	0		=			
ANR	493608	Identifier	doneTPH		493031	0					
ANR	493609	Identifier	OPJ_TRUE		493031	1					
ANR	493610	ExpressionStatement	vv --	1572:16:50980:50984	493031	4	True				
ANR	493611	PostIncDecOperationExpression	vv --		493031	0					
ANR	493612	Identifier	vv		493031	0					
ANR	493613	IncDec	--		493031	1					
ANR	493614	ElseStatement	else		493031	0					
ANR	493615	CompoundStatement		137:15:4815:4815	493031	0					
ANR	493616	ExpressionStatement	doneTPH = OPJ_FALSE	1576:12:51059:51078	493031	0	True				
ANR	493617	AssignmentExpression	doneTPH = OPJ_FALSE		493031	0		=			
ANR	493618	Identifier	doneTPH		493031	0					
ANR	493619	Identifier	OPJ_FALSE		493031	1					
ANR	493620	SwitchStatement	switch ( esd -> ad_size )		493031	8					
ANR	493621	Condition	esd -> ad_size	1580:16:51182:51193	493031	0	True				
ANR	493622	PtrMemberAccess	esd -> ad_size		493031	0					
ANR	493623	Identifier	esd		493031	0					
ANR	493624	Identifier	ad_size		493031	1					
ANR	493625	CompoundStatement		142:30:4966:4966	493031	1					
ANR	493626	Statement	case	1582:8:51207:51210	493031	0	True				
ANR	493627	Statement	(	1582:13:51212:51212	493031	1	True				
ANR	493628	Statement	0	1582:14:51213:51213	493031	2	True				
ANR	493629	Statement	)	1582:15:51214:51214	493031	3	True				
ANR	493630	Statement	:	1582:16:51215:51215	493031	4	True				
ANR	493631	BreakStatement	break ;	1584:12:51258:51263	493031	5	True				
ANR	493632	Statement	case	1586:8:51274:51277	493031	6	True				
ANR	493633	Statement	(	1586:13:51279:51279	493031	7	True				
ANR	493634	Statement	2	1586:14:51280:51280	493031	8	True				
ANR	493635	Statement	)	1586:15:51281:51281	493031	9	True				
ANR	493636	Statement	:	1586:16:51282:51282	493031	10	True				
ANR	493637	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 8 )	1588:12:51324:51362	493031	11	True				
ANR	493638	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 8 )		493031	0		=			
ANR	493639	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493640	UnaryOperator	*		493031	0					
ANR	493641	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493642	Identifier	buf		493031	0					
ANR	493643	IncDec	++		493031	1					
ANR	493644	CastExpression	( unsigned char ) ( addr1 >> 8 )		493031	1					
ANR	493645	CastTarget	unsigned char		493031	0					
ANR	493646	ShiftExpression	addr1 >> 8		493031	1		>>			
ANR	493647	Identifier	addr1		493031	0					
ANR	493648	PrimaryExpression	8		493031	1					
ANR	493649	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 0 )	1589:12:51376:51414	493031	12	True				
ANR	493650	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 0 )		493031	0		=			
ANR	493651	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493652	UnaryOperator	*		493031	0					
ANR	493653	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493654	Identifier	buf		493031	0					
ANR	493655	IncDec	++		493031	1					
ANR	493656	CastExpression	( unsigned char ) ( addr1 >> 0 )		493031	1					
ANR	493657	CastTarget	unsigned char		493031	0					
ANR	493658	ShiftExpression	addr1 >> 0		493031	1		>>			
ANR	493659	Identifier	addr1		493031	0					
ANR	493660	PrimaryExpression	0		493031	1					
ANR	493661	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 8 )	1590:12:51428:51466	493031	13	True				
ANR	493662	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 8 )		493031	0		=			
ANR	493663	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493664	UnaryOperator	*		493031	0					
ANR	493665	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493666	Identifier	buf		493031	0					
ANR	493667	IncDec	++		493031	1					
ANR	493668	CastExpression	( unsigned char ) ( addr2 >> 8 )		493031	1					
ANR	493669	CastTarget	unsigned char		493031	0					
ANR	493670	ShiftExpression	addr2 >> 8		493031	1		>>			
ANR	493671	Identifier	addr2		493031	0					
ANR	493672	PrimaryExpression	8		493031	1					
ANR	493673	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 0 )	1591:12:51480:51518	493031	14	True				
ANR	493674	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 0 )		493031	0		=			
ANR	493675	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493676	UnaryOperator	*		493031	0					
ANR	493677	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493678	Identifier	buf		493031	0					
ANR	493679	IncDec	++		493031	1					
ANR	493680	CastExpression	( unsigned char ) ( addr2 >> 0 )		493031	1					
ANR	493681	CastTarget	unsigned char		493031	0					
ANR	493682	ShiftExpression	addr2 >> 0		493031	1		>>			
ANR	493683	Identifier	addr2		493031	0					
ANR	493684	PrimaryExpression	0		493031	1					
ANR	493685	BreakStatement	break ;	1592:12:51532:51537	493031	15	True				
ANR	493686	Statement	case	1594:8:51548:51551	493031	16	True				
ANR	493687	Statement	(	1594:13:51553:51553	493031	17	True				
ANR	493688	Statement	4	1594:14:51554:51554	493031	18	True				
ANR	493689	Statement	)	1594:15:51555:51555	493031	19	True				
ANR	493690	Statement	:	1594:16:51556:51556	493031	20	True				
ANR	493691	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 24 )	1596:12:51599:51638	493031	21	True				
ANR	493692	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 24 )		493031	0		=			
ANR	493693	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493694	UnaryOperator	*		493031	0					
ANR	493695	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493696	Identifier	buf		493031	0					
ANR	493697	IncDec	++		493031	1					
ANR	493698	CastExpression	( unsigned char ) ( addr1 >> 24 )		493031	1					
ANR	493699	CastTarget	unsigned char		493031	0					
ANR	493700	ShiftExpression	addr1 >> 24		493031	1		>>			
ANR	493701	Identifier	addr1		493031	0					
ANR	493702	PrimaryExpression	24		493031	1					
ANR	493703	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 16 )	1597:12:51652:51691	493031	22	True				
ANR	493704	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 16 )		493031	0		=			
ANR	493705	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493706	UnaryOperator	*		493031	0					
ANR	493707	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493708	Identifier	buf		493031	0					
ANR	493709	IncDec	++		493031	1					
ANR	493710	CastExpression	( unsigned char ) ( addr1 >> 16 )		493031	1					
ANR	493711	CastTarget	unsigned char		493031	0					
ANR	493712	ShiftExpression	addr1 >> 16		493031	1		>>			
ANR	493713	Identifier	addr1		493031	0					
ANR	493714	PrimaryExpression	16		493031	1					
ANR	493715	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 8 )	1598:12:51705:51743	493031	23	True				
ANR	493716	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 8 )		493031	0		=			
ANR	493717	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493718	UnaryOperator	*		493031	0					
ANR	493719	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493720	Identifier	buf		493031	0					
ANR	493721	IncDec	++		493031	1					
ANR	493722	CastExpression	( unsigned char ) ( addr1 >> 8 )		493031	1					
ANR	493723	CastTarget	unsigned char		493031	0					
ANR	493724	ShiftExpression	addr1 >> 8		493031	1		>>			
ANR	493725	Identifier	addr1		493031	0					
ANR	493726	PrimaryExpression	8		493031	1					
ANR	493727	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 0 )	1599:12:51757:51795	493031	24	True				
ANR	493728	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr1 >> 0 )		493031	0		=			
ANR	493729	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493730	UnaryOperator	*		493031	0					
ANR	493731	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493732	Identifier	buf		493031	0					
ANR	493733	IncDec	++		493031	1					
ANR	493734	CastExpression	( unsigned char ) ( addr1 >> 0 )		493031	1					
ANR	493735	CastTarget	unsigned char		493031	0					
ANR	493736	ShiftExpression	addr1 >> 0		493031	1		>>			
ANR	493737	Identifier	addr1		493031	0					
ANR	493738	PrimaryExpression	0		493031	1					
ANR	493739	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 24 )	1600:12:51809:51848	493031	25	True				
ANR	493740	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 24 )		493031	0		=			
ANR	493741	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493742	UnaryOperator	*		493031	0					
ANR	493743	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493744	Identifier	buf		493031	0					
ANR	493745	IncDec	++		493031	1					
ANR	493746	CastExpression	( unsigned char ) ( addr2 >> 24 )		493031	1					
ANR	493747	CastTarget	unsigned char		493031	0					
ANR	493748	ShiftExpression	addr2 >> 24		493031	1		>>			
ANR	493749	Identifier	addr2		493031	0					
ANR	493750	PrimaryExpression	24		493031	1					
ANR	493751	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 16 )	1601:12:51862:51901	493031	26	True				
ANR	493752	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 16 )		493031	0		=			
ANR	493753	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493754	UnaryOperator	*		493031	0					
ANR	493755	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493756	Identifier	buf		493031	0					
ANR	493757	IncDec	++		493031	1					
ANR	493758	CastExpression	( unsigned char ) ( addr2 >> 16 )		493031	1					
ANR	493759	CastTarget	unsigned char		493031	0					
ANR	493760	ShiftExpression	addr2 >> 16		493031	1		>>			
ANR	493761	Identifier	addr2		493031	0					
ANR	493762	PrimaryExpression	16		493031	1					
ANR	493763	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 8 )	1602:12:51915:51953	493031	27	True				
ANR	493764	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 8 )		493031	0		=			
ANR	493765	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493766	UnaryOperator	*		493031	0					
ANR	493767	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493768	Identifier	buf		493031	0					
ANR	493769	IncDec	++		493031	1					
ANR	493770	CastExpression	( unsigned char ) ( addr2 >> 8 )		493031	1					
ANR	493771	CastTarget	unsigned char		493031	0					
ANR	493772	ShiftExpression	addr2 >> 8		493031	1		>>			
ANR	493773	Identifier	addr2		493031	0					
ANR	493774	PrimaryExpression	8		493031	1					
ANR	493775	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 0 )	1603:12:51967:52005	493031	28	True				
ANR	493776	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( addr2 >> 0 )		493031	0		=			
ANR	493777	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493778	UnaryOperator	*		493031	0					
ANR	493779	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493780	Identifier	buf		493031	0					
ANR	493781	IncDec	++		493031	1					
ANR	493782	CastExpression	( unsigned char ) ( addr2 >> 0 )		493031	1					
ANR	493783	CastTarget	unsigned char		493031	0					
ANR	493784	ShiftExpression	addr2 >> 0		493031	1		>>			
ANR	493785	Identifier	addr2		493031	0					
ANR	493786	PrimaryExpression	0		493031	1					
ANR	493787	BreakStatement	break ;	1604:12:52019:52024	493031	29	True				
ANR	493788	Label	default :	1606:8:52035:52042	493031	30	True				
ANR	493789	Identifier	default		493031	0					
ANR	493790	BreakStatement	break ;	1608:12:52085:52090	493031	31	True				
ANR	493791	SwitchStatement	switch ( esd -> senst )		493031	9					
ANR	493792	Condition	esd -> senst	1613:16:52161:52170	493031	0	True				
ANR	493793	PtrMemberAccess	esd -> senst		493031	0					
ANR	493794	Identifier	esd		493031	0					
ANR	493795	Identifier	senst		493031	1					
ANR	493796	CompoundStatement		175:28:5943:5943	493031	1					
ANR	493797	Statement	case	1616:8:52219:52222	493031	0	True				
ANR	493798	Statement	(	1616:13:52224:52224	493031	1	True				
ANR	493799	Statement	0	1616:14:52225:52225	493031	2	True				
ANR	493800	Statement	)	1616:15:52226:52226	493031	3	True				
ANR	493801	Statement	:	1616:16:52227:52227	493031	4	True				
ANR	493802	IfStatement	if ( dvalue == - 10 )		493031	5					
ANR	493803	Condition	dvalue == - 10	1618:16:52302:52314	493031	0	True				
ANR	493804	EqualityExpression	dvalue == - 10		493031	0		==			
ANR	493805	Identifier	dvalue		493031	0					
ANR	493806	UnaryOperationExpression	- 10		493031	1					
ANR	493807	UnaryOperator	-		493031	0					
ANR	493808	PrimaryExpression	10		493031	1					
ANR	493809	CompoundStatement		182:12:6124:6124	493031	1					
ANR	493810	ExpressionStatement	dvalue = MAX_V1 + 1000.0	1621:16:52372:52396	493031	0	True				
ANR	493811	AssignmentExpression	dvalue = MAX_V1 + 1000.0		493031	0		=			
ANR	493812	Identifier	dvalue		493031	0					
ANR	493813	AdditiveExpression	MAX_V1 + 1000.0		493031	1		+			
ANR	493814	Identifier	MAX_V1		493031	0					
ANR	493815	PrimaryExpression	1000.0		493031	1					
ANR	493816	ElseStatement	else		493031	0					
ANR	493817	IfStatement	if ( dvalue == - 1 )		493031	0					
ANR	493818	Condition	dvalue == - 1	1622:23:52469:52480	493031	0	True				
ANR	493819	EqualityExpression	dvalue == - 1		493031	0		==			
ANR	493820	Identifier	dvalue		493031	0					
ANR	493821	UnaryOperationExpression	- 1		493031	1					
ANR	493822	UnaryOperator	-		493031	0					
ANR	493823	PrimaryExpression	1		493031	1					
ANR	493824	CompoundStatement		186:12:6291:6291	493031	1					
ANR	493825	ExpressionStatement	dvalue = MAX_V1 + 1000.0	1625:16:52539:52563	493031	0	True				
ANR	493826	AssignmentExpression	dvalue = MAX_V1 + 1000.0		493031	0		=			
ANR	493827	Identifier	dvalue		493031	0					
ANR	493828	AdditiveExpression	MAX_V1 + 1000.0		493031	1		+			
ANR	493829	Identifier	MAX_V1		493031	0					
ANR	493830	PrimaryExpression	1000.0		493031	1					
ANR	493831	ElseStatement	else		493031	0					
ANR	493832	CompoundStatement		191:12:6551:6551	493031	0					
ANR	493833	ExpressionStatement	"dvalue = jpwl_pfp_to_double ( ( unsigned short ) ( j2k -> cstr_info -> packno - thispacket ) , esd -> se_size )"	1630:16:52799:52939	493031	0	True				
ANR	493834	AssignmentExpression	"dvalue = jpwl_pfp_to_double ( ( unsigned short ) ( j2k -> cstr_info -> packno - thispacket ) , esd -> se_size )"		493031	0		=			
ANR	493835	Identifier	dvalue		493031	0					
ANR	493836	CallExpression	"jpwl_pfp_to_double ( ( unsigned short ) ( j2k -> cstr_info -> packno - thispacket ) , esd -> se_size )"		493031	1					
ANR	493837	Callee	jpwl_pfp_to_double		493031	0					
ANR	493838	Identifier	jpwl_pfp_to_double		493031	0					
ANR	493839	ArgumentList	( unsigned short ) ( j2k -> cstr_info -> packno - thispacket )		493031	1					
ANR	493840	Argument	( unsigned short ) ( j2k -> cstr_info -> packno - thispacket )		493031	0					
ANR	493841	CastExpression	( unsigned short ) ( j2k -> cstr_info -> packno - thispacket )		493031	0					
ANR	493842	CastTarget	unsigned short		493031	0					
ANR	493843	AdditiveExpression	j2k -> cstr_info -> packno - thispacket		493031	1		-			
ANR	493844	PtrMemberAccess	j2k -> cstr_info -> packno		493031	0					
ANR	493845	PtrMemberAccess	j2k -> cstr_info		493031	0					
ANR	493846	Identifier	j2k		493031	0					
ANR	493847	Identifier	cstr_info		493031	1					
ANR	493848	Identifier	packno		493031	1					
ANR	493849	Identifier	thispacket		493031	1					
ANR	493850	Argument	esd -> se_size		493031	1					
ANR	493851	PtrMemberAccess	esd -> se_size		493031	0					
ANR	493852	Identifier	esd		493031	0					
ANR	493853	Identifier	se_size		493031	1					
ANR	493854	BreakStatement	break ;	1633:12:52967:52972	493031	6	True				
ANR	493855	Statement	case	1636:8:53001:53004	493031	7	True				
ANR	493856	Statement	(	1636:13:53006:53006	493031	8	True				
ANR	493857	Statement	1	1636:14:53007:53007	493031	9	True				
ANR	493858	Statement	)	1636:15:53008:53008	493031	10	True				
ANR	493859	Statement	:	1636:16:53009:53009	493031	11	True				
ANR	493860	ExpressionStatement	dvalue = MSE	1638:12:53094:53106	493031	12	True				
ANR	493861	AssignmentExpression	dvalue = MSE		493031	0		=			
ANR	493862	Identifier	dvalue		493031	0					
ANR	493863	Identifier	MSE		493031	1					
ANR	493864	BreakStatement	break ;	1639:12:53120:53125	493031	13	True				
ANR	493865	Statement	case	1642:8:53164:53167	493031	14	True				
ANR	493866	Statement	(	1642:13:53169:53169	493031	15	True				
ANR	493867	Statement	2	1642:14:53170:53170	493031	16	True				
ANR	493868	Statement	)	1642:15:53171:53171	493031	17	True				
ANR	493869	Statement	:	1642:16:53172:53172	493031	18	True				
ANR	493870	ExpressionStatement	dvalue = oldMSE - MSE	1643:12:53186:53207	493031	19	True				
ANR	493871	AssignmentExpression	dvalue = oldMSE - MSE		493031	0		=			
ANR	493872	Identifier	dvalue		493031	0					
ANR	493873	AdditiveExpression	oldMSE - MSE		493031	1		-			
ANR	493874	Identifier	oldMSE		493031	0					
ANR	493875	Identifier	MSE		493031	1					
ANR	493876	ExpressionStatement	oldMSE = MSE	1644:12:53221:53233	493031	20	True				
ANR	493877	AssignmentExpression	oldMSE = MSE		493031	0		=			
ANR	493878	Identifier	oldMSE		493031	0					
ANR	493879	Identifier	MSE		493031	1					
ANR	493880	BreakStatement	break ;	1645:12:53247:53252	493031	21	True				
ANR	493881	Statement	case	1648:8:53282:53285	493031	22	True				
ANR	493882	Statement	(	1648:13:53287:53287	493031	23	True				
ANR	493883	Statement	3	1648:14:53288:53288	493031	24	True				
ANR	493884	Statement	)	1648:15:53289:53289	493031	25	True				
ANR	493885	Statement	:	1648:16:53290:53290	493031	26	True				
ANR	493886	ExpressionStatement	dvalue = PSNR	1649:12:53304:53317	493031	27	True				
ANR	493887	AssignmentExpression	dvalue = PSNR		493031	0		=			
ANR	493888	Identifier	dvalue		493031	0					
ANR	493889	Identifier	PSNR		493031	1					
ANR	493890	BreakStatement	break ;	1650:12:53331:53336	493031	28	True				
ANR	493891	Statement	case	1653:8:53375:53378	493031	29	True				
ANR	493892	Statement	(	1653:13:53380:53380	493031	30	True				
ANR	493893	Statement	4	1653:14:53381:53381	493031	31	True				
ANR	493894	Statement	)	1653:15:53382:53382	493031	32	True				
ANR	493895	Statement	:	1653:16:53383:53383	493031	33	True				
ANR	493896	ExpressionStatement	dvalue = PSNR - oldPSNR	1654:12:53397:53420	493031	34	True				
ANR	493897	AssignmentExpression	dvalue = PSNR - oldPSNR		493031	0		=			
ANR	493898	Identifier	dvalue		493031	0					
ANR	493899	AdditiveExpression	PSNR - oldPSNR		493031	1		-			
ANR	493900	Identifier	PSNR		493031	0					
ANR	493901	Identifier	oldPSNR		493031	1					
ANR	493902	ExpressionStatement	oldPSNR = PSNR	1655:12:53434:53448	493031	35	True				
ANR	493903	AssignmentExpression	oldPSNR = PSNR		493031	0		=			
ANR	493904	Identifier	oldPSNR		493031	0					
ANR	493905	Identifier	PSNR		493031	1					
ANR	493906	BreakStatement	break ;	1656:12:53462:53467	493031	36	True				
ANR	493907	Statement	case	1659:8:53499:53502	493031	37	True				
ANR	493908	Statement	(	1659:13:53504:53504	493031	38	True				
ANR	493909	Statement	5	1659:14:53505:53505	493031	39	True				
ANR	493910	Statement	)	1659:15:53506:53506	493031	40	True				
ANR	493911	Statement	:	1659:16:53507:53507	493031	41	True				
ANR	493912	ExpressionStatement	dvalue = 0.0	1660:12:53521:53533	493031	42	True				
ANR	493913	AssignmentExpression	dvalue = 0.0		493031	0		=			
ANR	493914	Identifier	dvalue		493031	0					
ANR	493915	PrimaryExpression	0.0		493031	1					
ANR	493916	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""MAXERR sensitivity mode is not implemented\\n"" )"	1661:12:53547:53659	493031	43	True				
ANR	493917	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""MAXERR sensitivity mode is not implemented\\n"" )"		493031	0					
ANR	493918	Callee	opj_event_msg		493031	0					
ANR	493919	Identifier	opj_event_msg		493031	0					
ANR	493920	ArgumentList	j2k -> cinfo		493031	1					
ANR	493921	Argument	j2k -> cinfo		493031	0					
ANR	493922	PtrMemberAccess	j2k -> cinfo		493031	0					
ANR	493923	Identifier	j2k		493031	0					
ANR	493924	Identifier	cinfo		493031	1					
ANR	493925	Argument	EVT_WARNING		493031	1					
ANR	493926	Identifier	EVT_WARNING		493031	0					
ANR	493927	Argument	"""MAXERR sensitivity mode is not implemented\\n"""		493031	2					
ANR	493928	PrimaryExpression	"""MAXERR sensitivity mode is not implemented\\n"""		493031	0					
ANR	493929	BreakStatement	break ;	1663:12:53673:53678	493031	44	True				
ANR	493930	Statement	case	1666:8:53707:53710	493031	45	True				
ANR	493931	Statement	(	1666:13:53712:53712	493031	46	True				
ANR	493932	Statement	6	1666:14:53713:53713	493031	47	True				
ANR	493933	Statement	)	1666:15:53714:53714	493031	48	True				
ANR	493934	Statement	:	1666:16:53715:53715	493031	49	True				
ANR	493935	ExpressionStatement	dvalue = TSE	1667:12:53729:53741	493031	50	True				
ANR	493936	AssignmentExpression	dvalue = TSE		493031	0		=			
ANR	493937	Identifier	dvalue		493031	0					
ANR	493938	Identifier	TSE		493031	1					
ANR	493939	BreakStatement	break ;	1668:12:53755:53760	493031	51	True				
ANR	493940	Statement	case	1671:8:53794:53797	493031	52	True				
ANR	493941	Statement	(	1671:13:53799:53799	493031	53	True				
ANR	493942	Statement	7	1671:14:53800:53800	493031	54	True				
ANR	493943	Statement	)	1671:15:53801:53801	493031	55	True				
ANR	493944	Statement	:	1671:16:53802:53802	493031	56	True				
ANR	493945	ExpressionStatement	dvalue = 0.0	1672:12:53816:53828	493031	57	True				
ANR	493946	AssignmentExpression	dvalue = 0.0		493031	0		=			
ANR	493947	Identifier	dvalue		493031	0					
ANR	493948	PrimaryExpression	0.0		493031	1					
ANR	493949	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Reserved sensitivity mode is not implemented\\n"" )"	1673:12:53842:53956	493031	58	True				
ANR	493950	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_WARNING , ""Reserved sensitivity mode is not implemented\\n"" )"		493031	0					
ANR	493951	Callee	opj_event_msg		493031	0					
ANR	493952	Identifier	opj_event_msg		493031	0					
ANR	493953	ArgumentList	j2k -> cinfo		493031	1					
ANR	493954	Argument	j2k -> cinfo		493031	0					
ANR	493955	PtrMemberAccess	j2k -> cinfo		493031	0					
ANR	493956	Identifier	j2k		493031	0					
ANR	493957	Identifier	cinfo		493031	1					
ANR	493958	Argument	EVT_WARNING		493031	1					
ANR	493959	Identifier	EVT_WARNING		493031	0					
ANR	493960	Argument	"""Reserved sensitivity mode is not implemented\\n"""		493031	2					
ANR	493961	PrimaryExpression	"""Reserved sensitivity mode is not implemented\\n"""		493031	0					
ANR	493962	BreakStatement	break ;	1675:12:53970:53975	493031	59	True				
ANR	493963	Label	default :	1677:8:53986:53993	493031	60	True				
ANR	493964	Identifier	default		493031	0					
ANR	493965	ExpressionStatement	dvalue = 0.0	1678:12:54007:54019	493031	61	True				
ANR	493966	AssignmentExpression	dvalue = 0.0		493031	0		=			
ANR	493967	Identifier	dvalue		493031	0					
ANR	493968	PrimaryExpression	0.0		493031	1					
ANR	493969	BreakStatement	break ;	1679:12:54033:54038	493031	62	True				
ANR	493970	ExpressionStatement	"pfpvalue = jpwl_double_to_pfp ( dvalue , esd -> se_size )"	1683:8:54113:54164	493031	10	True				
ANR	493971	AssignmentExpression	"pfpvalue = jpwl_double_to_pfp ( dvalue , esd -> se_size )"		493031	0		=			
ANR	493972	Identifier	pfpvalue		493031	0					
ANR	493973	CallExpression	"jpwl_double_to_pfp ( dvalue , esd -> se_size )"		493031	1					
ANR	493974	Callee	jpwl_double_to_pfp		493031	0					
ANR	493975	Identifier	jpwl_double_to_pfp		493031	0					
ANR	493976	ArgumentList	dvalue		493031	1					
ANR	493977	Argument	dvalue		493031	0					
ANR	493978	Identifier	dvalue		493031	0					
ANR	493979	Argument	esd -> se_size		493031	1					
ANR	493980	PtrMemberAccess	esd -> se_size		493031	0					
ANR	493981	Identifier	esd		493031	0					
ANR	493982	Identifier	se_size		493031	1					
ANR	493983	SwitchStatement	switch ( esd -> se_size )		493031	11					
ANR	493984	Condition	esd -> se_size	1686:16:54231:54242	493031	0	True				
ANR	493985	PtrMemberAccess	esd -> se_size		493031	0					
ANR	493986	Identifier	esd		493031	0					
ANR	493987	Identifier	se_size		493031	1					
ANR	493988	CompoundStatement		248:30:8015:8015	493031	1					
ANR	493989	Statement	case	1688:8:54256:54259	493031	0	True				
ANR	493990	Statement	(	1688:13:54261:54261	493031	1	True				
ANR	493991	Statement	1	1688:14:54262:54262	493031	2	True				
ANR	493992	Statement	)	1688:15:54263:54263	493031	3	True				
ANR	493993	Statement	:	1688:16:54264:54264	493031	4	True				
ANR	493994	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( pfpvalue >> 0 )	1690:12:54305:54346	493031	5	True				
ANR	493995	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( pfpvalue >> 0 )		493031	0		=			
ANR	493996	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	493997	UnaryOperator	*		493031	0					
ANR	493998	PostIncDecOperationExpression	buf ++		493031	1					
ANR	493999	Identifier	buf		493031	0					
ANR	494000	IncDec	++		493031	1					
ANR	494001	CastExpression	( unsigned char ) ( pfpvalue >> 0 )		493031	1					
ANR	494002	CastTarget	unsigned char		493031	0					
ANR	494003	ShiftExpression	pfpvalue >> 0		493031	1		>>			
ANR	494004	Identifier	pfpvalue		493031	0					
ANR	494005	PrimaryExpression	0		493031	1					
ANR	494006	BreakStatement	break ;	1691:12:54360:54365	493031	6	True				
ANR	494007	Statement	case	1693:8:54376:54379	493031	7	True				
ANR	494008	Statement	(	1693:13:54381:54381	493031	8	True				
ANR	494009	Statement	2	1693:14:54382:54382	493031	9	True				
ANR	494010	Statement	)	1693:15:54383:54383	493031	10	True				
ANR	494011	Statement	:	1693:16:54384:54384	493031	11	True				
ANR	494012	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( pfpvalue >> 8 )	1695:12:54426:54467	493031	12	True				
ANR	494013	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( pfpvalue >> 8 )		493031	0		=			
ANR	494014	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	494015	UnaryOperator	*		493031	0					
ANR	494016	PostIncDecOperationExpression	buf ++		493031	1					
ANR	494017	Identifier	buf		493031	0					
ANR	494018	IncDec	++		493031	1					
ANR	494019	CastExpression	( unsigned char ) ( pfpvalue >> 8 )		493031	1					
ANR	494020	CastTarget	unsigned char		493031	0					
ANR	494021	ShiftExpression	pfpvalue >> 8		493031	1		>>			
ANR	494022	Identifier	pfpvalue		493031	0					
ANR	494023	PrimaryExpression	8		493031	1					
ANR	494024	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( pfpvalue >> 0 )	1696:12:54481:54522	493031	13	True				
ANR	494025	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( pfpvalue >> 0 )		493031	0		=			
ANR	494026	UnaryOperationExpression	* ( buf ++ )		493031	0					
ANR	494027	UnaryOperator	*		493031	0					
ANR	494028	PostIncDecOperationExpression	buf ++		493031	1					
ANR	494029	Identifier	buf		493031	0					
ANR	494030	IncDec	++		493031	1					
ANR	494031	CastExpression	( unsigned char ) ( pfpvalue >> 0 )		493031	1					
ANR	494032	CastTarget	unsigned char		493031	0					
ANR	494033	ShiftExpression	pfpvalue >> 0		493031	1		>>			
ANR	494034	Identifier	pfpvalue		493031	0					
ANR	494035	PrimaryExpression	0		493031	1					
ANR	494036	BreakStatement	break ;	1697:12:54536:54541	493031	14	True				
ANR	494037	ReturnStatement	return OPJ_TRUE ;	1702:4:54565:54580	493031	14	True				
ANR	494038	Identifier	OPJ_TRUE		493031	0					
ANR	494039	ReturnType	opj_bool		493031	1					
ANR	494040	Identifier	jpwl_esd_fill		493031	2					
ANR	494041	ParameterList	"opj_j2k_t * j2k , jpwl_esd_ms_t * esd , unsigned char * buf"		493031	3					
ANR	494042	Parameter	opj_j2k_t * j2k	1438:23:46173:46186	493031	0	True				
ANR	494043	ParameterType	opj_j2k_t *		493031	0					
ANR	494044	Identifier	j2k		493031	1					
ANR	494045	Parameter	jpwl_esd_ms_t * esd	1438:39:46189:46206	493031	1	True				
ANR	494046	ParameterType	jpwl_esd_ms_t *		493031	0					
ANR	494047	Identifier	esd		493031	1					
ANR	494048	Parameter	unsigned char * buf	1438:59:46209:46226	493031	2	True				
ANR	494049	ParameterType	unsigned char *		493031	0					
ANR	494050	Identifier	buf		493031	1					
ANR	494051	CFGEntryNode	ENTRY		493031		True				
ANR	494052	CFGExitNode	EXIT		493031		True				
ANR	494053	Symbol	addrmask		493031						
ANR	494054	Symbol	* j2k -> image -> comps		493031						
ANR	494055	Symbol	thistile		493031						
ANR	494056	Symbol	j2k -> cstr_info -> tile [ thistile ] . numpix		493031						
ANR	494057	Symbol	Omax2		493031						
ANR	494058	Symbol	tmp		493031						
ANR	494059	Symbol	* esd -> data		493031						
ANR	494060	Symbol	j2k -> cstr_info -> main_head_end		493031						
ANR	494061	Symbol	doneTPH		493031						
ANR	494062	Symbol	OPJ_TRUE		493031						
ANR	494063	Symbol	jpwl_double_to_pfp		493031						
ANR	494064	Symbol	* * * j2k		493031						
ANR	494065	Symbol	esd -> numcomps		493031						
ANR	494066	Symbol	PSNR		493031						
ANR	494067	Symbol	EVT_WARNING		493031						
ANR	494068	Symbol	thispacket		493031						
ANR	494069	Symbol	* * thistile		493031						
ANR	494070	Symbol	TSE		493031						
ANR	494071	Symbol	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . disto		493031						
ANR	494072	Symbol	j2k -> cstr_info -> tile		493031						
ANR	494073	Symbol	j2k -> image		493031						
ANR	494074	Symbol	* ( buf ++ )		493031						
ANR	494075	Symbol	* * j2k -> cstr_info		493031						
ANR	494076	Symbol	* j2k		493031						
ANR	494077	Symbol	j2k -> image -> numcomps		493031						
ANR	494078	Symbol	* * j2k -> image		493031						
ANR	494079	Symbol	* j2k -> cstr_info		493031						
ANR	494080	Symbol	* * j2k -> cstr_info -> tile		493031						
ANR	494081	Symbol	* * j2k		493031						
ANR	494082	Symbol	esd -> svalnum		493031						
ANR	494083	Symbol	j2k -> image -> comps		493031						
ANR	494084	Symbol	* j2k -> cstr_info -> tile [ thistile ] . packet		493031						
ANR	494085	Symbol	vv		493031						
ANR	494086	Symbol	log10		493031						
ANR	494087	Symbol	j2k -> cstr_info		493031						
ANR	494088	Symbol	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . start_pos		493031						
ANR	494089	Symbol	j2k -> image -> comps [ i ] . sgnd		493031						
ANR	494090	Symbol	* * esd		493031						
ANR	494091	Symbol	oldMSE		493031						
ANR	494092	Symbol	esd -> ad_size		493031						
ANR	494093	Symbol	OPJ_FALSE		493031						
ANR	494094	Symbol	esd -> tileno		493031						
ANR	494095	Symbol	MAX_V1		493031						
ANR	494096	Symbol	* j2k -> image		493031						
ANR	494097	Symbol	* j2k -> cstr_info -> tile		493031						
ANR	494098	Symbol	pow		493031						
ANR	494099	Symbol	j2k -> cstr_info -> tile [ thistile ] . distotile		493031						
ANR	494100	Symbol	j2k -> cstr_info -> tile [ thistile ] . end_header		493031						
ANR	494101	Symbol	dvalue		493031						
ANR	494102	Symbol	MSE		493031						
ANR	494103	Symbol	* esd		493031						
ANR	494104	Symbol	esd -> data		493031						
ANR	494105	Symbol	* * * * j2k		493031						
ANR	494106	Symbol	esd -> addrm		493031						
ANR	494107	Symbol	* thistile		493031						
ANR	494108	Symbol	* thispacket		493031						
ANR	494109	Symbol	j2k		493031						
ANR	494110	Symbol	j2k -> image -> comps [ i ] . bpp		493031						
ANR	494111	Symbol	addr2		493031						
ANR	494112	Symbol	addr1		493031						
ANR	494113	Symbol	j2k -> cstr_info -> packno		493031						
ANR	494114	Symbol	esd -> se_size		493031						
ANR	494115	Symbol	i		493031						
ANR	494116	Symbol	doneMH		493031						
ANR	494117	Symbol	j2k -> cstr_info -> tile [ thistile ] . start_pos		493031						
ANR	494118	Symbol	oldPSNR		493031						
ANR	494119	Symbol	j2k -> cstr_info -> tile [ thistile ] . packet [ thispacket ] . end_pos		493031						
ANR	494120	Symbol	j2k -> cinfo		493031						
ANR	494121	Symbol	buf		493031						
ANR	494122	Symbol	j2k -> cstr_info -> tw		493031						
ANR	494123	Symbol	* i		493031						
ANR	494124	Symbol	* * * j2k -> cstr_info		493031						
ANR	494125	Symbol	esd		493031						
ANR	494126	Symbol	jpwl_pfp_to_double		493031						
ANR	494127	Symbol	j2k -> cstr_info -> tile [ thistile ] . packet		493031						
ANR	494128	Symbol	pfpvalue		493031						
ANR	494129	Symbol	j2k -> cstr_info -> th		493031						
ANR	494130	Symbol	esd -> senst		493031						
ANR	494131	Function	jpwl_esd_write	1705:0:54585:55519							
ANR	494132	FunctionDef	"jpwl_esd_write (opj_j2k_t * j2k , jpwl_esd_ms_t * esd , unsigned char * buf)"		494131	0					
ANR	494133	CompoundStatement		1706:0:54665:55519	494131	0					
ANR	494134	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_ESD >> 8 )	1709:4:54689:54732	494131	0	True				
ANR	494135	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_ESD >> 8 )		494131	0		=			
ANR	494136	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494137	UnaryOperator	*		494131	0					
ANR	494138	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494139	Identifier	buf		494131	0					
ANR	494140	IncDec	++		494131	1					
ANR	494141	CastExpression	( unsigned char ) ( J2K_MS_ESD >> 8 )		494131	1					
ANR	494142	CastTarget	unsigned char		494131	0					
ANR	494143	ShiftExpression	J2K_MS_ESD >> 8		494131	1		>>			
ANR	494144	Identifier	J2K_MS_ESD		494131	0					
ANR	494145	PrimaryExpression	8		494131	1					
ANR	494146	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_ESD >> 0 )	1710:4:54738:54781	494131	1	True				
ANR	494147	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( J2K_MS_ESD >> 0 )		494131	0		=			
ANR	494148	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494149	UnaryOperator	*		494131	0					
ANR	494150	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494151	Identifier	buf		494131	0					
ANR	494152	IncDec	++		494131	1					
ANR	494153	CastExpression	( unsigned char ) ( J2K_MS_ESD >> 0 )		494131	1					
ANR	494154	CastTarget	unsigned char		494131	0					
ANR	494155	ShiftExpression	J2K_MS_ESD >> 0		494131	1		>>			
ANR	494156	Identifier	J2K_MS_ESD		494131	0					
ANR	494157	PrimaryExpression	0		494131	1					
ANR	494158	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( esd -> Lesd >> 8 )	1713:4:54803:54845	494131	2	True				
ANR	494159	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( esd -> Lesd >> 8 )		494131	0		=			
ANR	494160	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494161	UnaryOperator	*		494131	0					
ANR	494162	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494163	Identifier	buf		494131	0					
ANR	494164	IncDec	++		494131	1					
ANR	494165	CastExpression	( unsigned char ) ( esd -> Lesd >> 8 )		494131	1					
ANR	494166	CastTarget	unsigned char		494131	0					
ANR	494167	ShiftExpression	esd -> Lesd >> 8		494131	1		>>			
ANR	494168	PtrMemberAccess	esd -> Lesd		494131	0					
ANR	494169	Identifier	esd		494131	0					
ANR	494170	Identifier	Lesd		494131	1					
ANR	494171	PrimaryExpression	8		494131	1					
ANR	494172	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( esd -> Lesd >> 0 )	1714:4:54851:54893	494131	3	True				
ANR	494173	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( esd -> Lesd >> 0 )		494131	0		=			
ANR	494174	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494175	UnaryOperator	*		494131	0					
ANR	494176	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494177	Identifier	buf		494131	0					
ANR	494178	IncDec	++		494131	1					
ANR	494179	CastExpression	( unsigned char ) ( esd -> Lesd >> 0 )		494131	1					
ANR	494180	CastTarget	unsigned char		494131	0					
ANR	494181	ShiftExpression	esd -> Lesd >> 0		494131	1		>>			
ANR	494182	PtrMemberAccess	esd -> Lesd		494131	0					
ANR	494183	Identifier	esd		494131	0					
ANR	494184	Identifier	Lesd		494131	1					
ANR	494185	PrimaryExpression	0		494131	1					
ANR	494186	IfStatement	if ( esd -> numcomps >= 257 )		494131	4					
ANR	494187	Condition	esd -> numcomps >= 257	1717:8:54919:54938	494131	0	True				
ANR	494188	RelationalExpression	esd -> numcomps >= 257		494131	0		>=			
ANR	494189	PtrMemberAccess	esd -> numcomps		494131	0					
ANR	494190	Identifier	esd		494131	0					
ANR	494191	Identifier	numcomps		494131	1					
ANR	494192	PrimaryExpression	257		494131	1					
ANR	494193	CompoundStatement		12:30:275:275	494131	1					
ANR	494194	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( esd -> Cesd >> 8 )	1718:8:54951:54993	494131	0	True				
ANR	494195	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( esd -> Cesd >> 8 )		494131	0		=			
ANR	494196	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494197	UnaryOperator	*		494131	0					
ANR	494198	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494199	Identifier	buf		494131	0					
ANR	494200	IncDec	++		494131	1					
ANR	494201	CastExpression	( unsigned char ) ( esd -> Cesd >> 8 )		494131	1					
ANR	494202	CastTarget	unsigned char		494131	0					
ANR	494203	ShiftExpression	esd -> Cesd >> 8		494131	1		>>			
ANR	494204	PtrMemberAccess	esd -> Cesd		494131	0					
ANR	494205	Identifier	esd		494131	0					
ANR	494206	Identifier	Cesd		494131	1					
ANR	494207	PrimaryExpression	8		494131	1					
ANR	494208	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( esd -> Cesd >> 0 )	1720:4:55005:55047	494131	5	True				
ANR	494209	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( esd -> Cesd >> 0 )		494131	0		=			
ANR	494210	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494211	UnaryOperator	*		494131	0					
ANR	494212	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494213	Identifier	buf		494131	0					
ANR	494214	IncDec	++		494131	1					
ANR	494215	CastExpression	( unsigned char ) ( esd -> Cesd >> 0 )		494131	1					
ANR	494216	CastTarget	unsigned char		494131	0					
ANR	494217	ShiftExpression	esd -> Cesd >> 0		494131	1		>>			
ANR	494218	PtrMemberAccess	esd -> Cesd		494131	0					
ANR	494219	Identifier	esd		494131	0					
ANR	494220	Identifier	Cesd		494131	1					
ANR	494221	PrimaryExpression	0		494131	1					
ANR	494222	ExpressionStatement	* ( buf ++ ) = ( unsigned char ) ( esd -> Pesd >> 0 )	1723:4:55069:55111	494131	6	True				
ANR	494223	AssignmentExpression	* ( buf ++ ) = ( unsigned char ) ( esd -> Pesd >> 0 )		494131	0		=			
ANR	494224	UnaryOperationExpression	* ( buf ++ )		494131	0					
ANR	494225	UnaryOperator	*		494131	0					
ANR	494226	PostIncDecOperationExpression	buf ++		494131	1					
ANR	494227	Identifier	buf		494131	0					
ANR	494228	IncDec	++		494131	1					
ANR	494229	CastExpression	( unsigned char ) ( esd -> Pesd >> 0 )		494131	1					
ANR	494230	CastTarget	unsigned char		494131	0					
ANR	494231	ShiftExpression	esd -> Pesd >> 0		494131	1		>>			
ANR	494232	PtrMemberAccess	esd -> Pesd		494131	0					
ANR	494233	Identifier	esd		494131	0					
ANR	494234	Identifier	Pesd		494131	1					
ANR	494235	PrimaryExpression	0		494131	1					
ANR	494236	IfStatement	if ( esd -> numcomps < 257 )		494131	7					
ANR	494237	Condition	esd -> numcomps < 257	1726:8:55137:55155	494131	0	True				
ANR	494238	RelationalExpression	esd -> numcomps < 257		494131	0		<			
ANR	494239	PtrMemberAccess	esd -> numcomps		494131	0					
ANR	494240	Identifier	esd		494131	0					
ANR	494241	Identifier	numcomps		494131	1					
ANR	494242	PrimaryExpression	257		494131	1					
ANR	494243	CompoundStatement		21:29:492:492	494131	1					
ANR	494244	ExpressionStatement	"memset ( buf , 0xAA , ( size_t ) esd -> Lesd - 4 )"	1727:8:55168:55209	494131	0	True				
ANR	494245	CallExpression	"memset ( buf , 0xAA , ( size_t ) esd -> Lesd - 4 )"		494131	0					
ANR	494246	Callee	memset		494131	0					
ANR	494247	Identifier	memset		494131	0					
ANR	494248	ArgumentList	buf		494131	1					
ANR	494249	Argument	buf		494131	0					
ANR	494250	Identifier	buf		494131	0					
ANR	494251	Argument	0xAA		494131	1					
ANR	494252	PrimaryExpression	0xAA		494131	0					
ANR	494253	Argument	( size_t ) esd -> Lesd - 4		494131	2					
ANR	494254	AdditiveExpression	( size_t ) esd -> Lesd - 4		494131	0		-			
ANR	494255	CastExpression	( size_t ) esd -> Lesd		494131	0					
ANR	494256	CastTarget	size_t		494131	0					
ANR	494257	PtrMemberAccess	esd -> Lesd		494131	1					
ANR	494258	Identifier	esd		494131	0					
ANR	494259	Identifier	Lesd		494131	1					
ANR	494260	PrimaryExpression	4		494131	1					
ANR	494261	ElseStatement	else		494131	0					
ANR	494262	CompoundStatement		25:9:616:616	494131	0					
ANR	494263	ExpressionStatement	"memset ( buf , 0xAA , ( size_t ) esd -> Lesd - 5 )"	1731:8:55292:55333	494131	0	True				
ANR	494264	CallExpression	"memset ( buf , 0xAA , ( size_t ) esd -> Lesd - 5 )"		494131	0					
ANR	494265	Callee	memset		494131	0					
ANR	494266	Identifier	memset		494131	0					
ANR	494267	ArgumentList	buf		494131	1					
ANR	494268	Argument	buf		494131	0					
ANR	494269	Identifier	buf		494131	0					
ANR	494270	Argument	0xAA		494131	1					
ANR	494271	PrimaryExpression	0xAA		494131	0					
ANR	494272	Argument	( size_t ) esd -> Lesd - 5		494131	2					
ANR	494273	AdditiveExpression	( size_t ) esd -> Lesd - 5		494131	0		-			
ANR	494274	CastExpression	( size_t ) esd -> Lesd		494131	0					
ANR	494275	CastTarget	size_t		494131	0					
ANR	494276	PtrMemberAccess	esd -> Lesd		494131	1					
ANR	494277	Identifier	esd		494131	0					
ANR	494278	Identifier	Lesd		494131	1					
ANR	494279	PrimaryExpression	5		494131	1					
ANR	494280	ExpressionStatement	"j2k_add_marker ( j2k -> cstr_info , J2K_MS_ESD , - 1 , esd -> Lesd + 2 )"	1736:4:55434:55495	494131	8	True				
ANR	494281	CallExpression	"j2k_add_marker ( j2k -> cstr_info , J2K_MS_ESD , - 1 , esd -> Lesd + 2 )"		494131	0					
ANR	494282	Callee	j2k_add_marker		494131	0					
ANR	494283	Identifier	j2k_add_marker		494131	0					
ANR	494284	ArgumentList	j2k -> cstr_info		494131	1					
ANR	494285	Argument	j2k -> cstr_info		494131	0					
ANR	494286	PtrMemberAccess	j2k -> cstr_info		494131	0					
ANR	494287	Identifier	j2k		494131	0					
ANR	494288	Identifier	cstr_info		494131	1					
ANR	494289	Argument	J2K_MS_ESD		494131	1					
ANR	494290	Identifier	J2K_MS_ESD		494131	0					
ANR	494291	Argument	- 1		494131	2					
ANR	494292	UnaryOperationExpression	- 1		494131	0					
ANR	494293	UnaryOperator	-		494131	0					
ANR	494294	PrimaryExpression	1		494131	1					
ANR	494295	Argument	esd -> Lesd + 2		494131	3					
ANR	494296	AdditiveExpression	esd -> Lesd + 2		494131	0		+			
ANR	494297	PtrMemberAccess	esd -> Lesd		494131	0					
ANR	494298	Identifier	esd		494131	0					
ANR	494299	Identifier	Lesd		494131	1					
ANR	494300	PrimaryExpression	2		494131	1					
ANR	494301	ReturnStatement	return OPJ_TRUE ;	1738:4:55502:55517	494131	9	True				
ANR	494302	Identifier	OPJ_TRUE		494131	0					
ANR	494303	ReturnType	opj_bool		494131	1					
ANR	494304	Identifier	jpwl_esd_write		494131	2					
ANR	494305	ParameterList	"opj_j2k_t * j2k , jpwl_esd_ms_t * esd , unsigned char * buf"		494131	3					
ANR	494306	Parameter	opj_j2k_t * j2k	1705:24:54609:54622	494131	0	True				
ANR	494307	ParameterType	opj_j2k_t *		494131	0					
ANR	494308	Identifier	j2k		494131	1					
ANR	494309	Parameter	jpwl_esd_ms_t * esd	1705:40:54625:54642	494131	1	True				
ANR	494310	ParameterType	jpwl_esd_ms_t *		494131	0					
ANR	494311	Identifier	esd		494131	1					
ANR	494312	Parameter	unsigned char * buf	1705:60:54645:54662	494131	2	True				
ANR	494313	ParameterType	unsigned char *		494131	0					
ANR	494314	Identifier	buf		494131	1					
ANR	494315	CFGEntryNode	ENTRY		494131		True				
ANR	494316	CFGExitNode	EXIT		494131		True				
ANR	494317	Symbol	esd -> numcomps		494131						
ANR	494318	Symbol	j2k		494131						
ANR	494319	Symbol	j2k -> cstr_info		494131						
ANR	494320	Symbol	esd -> Lesd		494131						
ANR	494321	Symbol	esd -> Pesd		494131						
ANR	494322	Symbol	* ( buf ++ )		494131						
ANR	494323	Symbol	buf		494131						
ANR	494324	Symbol	* j2k		494131						
ANR	494325	Symbol	esd		494131						
ANR	494326	Symbol	esd -> Cesd		494131						
ANR	494327	Symbol	J2K_MS_ESD		494131						
ANR	494328	Symbol	OPJ_TRUE		494131						
ANR	494329	Symbol	* esd		494131						
ANR	494330	Function	jpwl_double_to_pfp	1741:0:55522:56606							
ANR	494331	FunctionDef	"jpwl_double_to_pfp (double V , int bytes)"		494330	0					
ANR	494332	CompoundStatement		1742:0:55581:56606	494330	0					
ANR	494333	IdentifierDeclStatement	"unsigned short int em , e , m ;"	1744:4:55588:55615	494330	0	True				
ANR	494334	IdentifierDecl	em		494330	0					
ANR	494335	IdentifierDeclType	unsigned short int		494330	0					
ANR	494336	Identifier	em		494330	1					
ANR	494337	IdentifierDecl	e		494330	1					
ANR	494338	IdentifierDeclType	unsigned short int		494330	0					
ANR	494339	Identifier	e		494330	1					
ANR	494340	IdentifierDecl	m		494330	2					
ANR	494341	IdentifierDeclType	unsigned short int		494330	0					
ANR	494342	Identifier	m		494330	1					
ANR	494343	SwitchStatement	switch ( bytes )		494330	1					
ANR	494344	Condition	bytes	1746:12:55630:55634	494330	0	True				
ANR	494345	Identifier	bytes		494330	0					
ANR	494346	CompoundStatement		5:19:55:55	494330	1					
ANR	494347	Statement	case	1748:4:55644:55647	494330	0	True				
ANR	494348	Statement	(	1748:9:55649:55649	494330	1	True				
ANR	494349	Statement	1	1748:10:55650:55650	494330	2	True				
ANR	494350	Statement	)	1748:11:55651:55651	494330	3	True				
ANR	494351	Statement	:	1748:12:55652:55652	494330	4	True				
ANR	494352	IfStatement	if ( V < MIN_V1 )		494330	5					
ANR	494353	Condition	V < MIN_V1	1750:12:55667:55676	494330	0	True				
ANR	494354	RelationalExpression	V < MIN_V1		494330	0		<			
ANR	494355	Identifier	V		494330	0					
ANR	494356	Identifier	MIN_V1		494330	1					
ANR	494357	CompoundStatement		9:24:97:97	494330	1					
ANR	494358	ExpressionStatement	e = 0x0000	1751:12:55693:55703	494330	0	True				
ANR	494359	AssignmentExpression	e = 0x0000		494330	0		=			
ANR	494360	Identifier	e		494330	0					
ANR	494361	PrimaryExpression	0x0000		494330	1					
ANR	494362	ExpressionStatement	m = 0x0000	1752:12:55717:55727	494330	1	True				
ANR	494363	AssignmentExpression	m = 0x0000		494330	0		=			
ANR	494364	Identifier	m		494330	0					
ANR	494365	PrimaryExpression	0x0000		494330	1					
ANR	494366	ElseStatement	else		494330	0					
ANR	494367	IfStatement	if ( V > MAX_V1 )		494330	0					
ANR	494368	Condition	V > MAX_V1	1753:19:55748:55757	494330	0	True				
ANR	494369	RelationalExpression	V > MAX_V1		494330	0		>			
ANR	494370	Identifier	V		494330	0					
ANR	494371	Identifier	MAX_V1		494330	1					
ANR	494372	CompoundStatement		12:31:178:178	494330	1					
ANR	494373	ExpressionStatement	e = 0x000F	1754:12:55774:55784	494330	0	True				
ANR	494374	AssignmentExpression	e = 0x000F		494330	0		=			
ANR	494375	Identifier	e		494330	0					
ANR	494376	PrimaryExpression	0x000F		494330	1					
ANR	494377	ExpressionStatement	m = 0x000F	1755:12:55798:55808	494330	1	True				
ANR	494378	AssignmentExpression	m = 0x000F		494330	0		=			
ANR	494379	Identifier	m		494330	0					
ANR	494380	PrimaryExpression	0x000F		494330	1					
ANR	494381	ElseStatement	else		494330	0					
ANR	494382	CompoundStatement		15:15:243:243	494330	0					
ANR	494383	ExpressionStatement	e = ( unsigned short int ) ( floor ( log ( V ) * 1.44269504088896 ) / 4.0 )	1757:12:55839:55903	494330	0	True				
ANR	494384	AssignmentExpression	e = ( unsigned short int ) ( floor ( log ( V ) * 1.44269504088896 ) / 4.0 )		494330	0		=			
ANR	494385	Identifier	e		494330	0					
ANR	494386	CastExpression	( unsigned short int ) ( floor ( log ( V ) * 1.44269504088896 ) / 4.0 )		494330	1					
ANR	494387	CastTarget	unsigned short int		494330	0					
ANR	494388	MultiplicativeExpression	floor ( log ( V ) * 1.44269504088896 ) / 4.0		494330	1		/			
ANR	494389	CallExpression	floor ( log ( V ) * 1.44269504088896 )		494330	0					
ANR	494390	Callee	floor		494330	0					
ANR	494391	Identifier	floor		494330	0					
ANR	494392	ArgumentList	log ( V ) * 1.44269504088896		494330	1					
ANR	494393	Argument	log ( V ) * 1.44269504088896		494330	0					
ANR	494394	MultiplicativeExpression	log ( V ) * 1.44269504088896		494330	0		*			
ANR	494395	CallExpression	log ( V )		494330	0					
ANR	494396	Callee	log		494330	0					
ANR	494397	Identifier	log		494330	0					
ANR	494398	ArgumentList	V		494330	1					
ANR	494399	Argument	V		494330	0					
ANR	494400	Identifier	V		494330	0					
ANR	494401	PrimaryExpression	1.44269504088896		494330	1					
ANR	494402	PrimaryExpression	4.0		494330	1					
ANR	494403	ExpressionStatement	"m = ( unsigned short int ) ( 0.5 + ( V / ( pow ( 2.0 , ( double ) ( 4 * e ) ) ) ) )"	1758:12:55917:55982	494330	1	True				
ANR	494404	AssignmentExpression	"m = ( unsigned short int ) ( 0.5 + ( V / ( pow ( 2.0 , ( double ) ( 4 * e ) ) ) ) )"		494330	0		=			
ANR	494405	Identifier	m		494330	0					
ANR	494406	CastExpression	"( unsigned short int ) ( 0.5 + ( V / ( pow ( 2.0 , ( double ) ( 4 * e ) ) ) ) )"		494330	1					
ANR	494407	CastTarget	unsigned short int		494330	0					
ANR	494408	AdditiveExpression	"0.5 + ( V / ( pow ( 2.0 , ( double ) ( 4 * e ) ) ) )"		494330	1		+			
ANR	494409	PrimaryExpression	0.5		494330	0					
ANR	494410	MultiplicativeExpression	"V / ( pow ( 2.0 , ( double ) ( 4 * e ) ) )"		494330	1		/			
ANR	494411	Identifier	V		494330	0					
ANR	494412	CallExpression	"pow ( 2.0 , ( double ) ( 4 * e ) )"		494330	1					
ANR	494413	Callee	pow		494330	0					
ANR	494414	Identifier	pow		494330	0					
ANR	494415	ArgumentList	2.0		494330	1					
ANR	494416	Argument	2.0		494330	0					
ANR	494417	PrimaryExpression	2.0		494330	0					
ANR	494418	Argument	( double ) ( 4 * e )		494330	1					
ANR	494419	CastExpression	( double ) ( 4 * e )		494330	0					
ANR	494420	CastTarget	double		494330	0					
ANR	494421	MultiplicativeExpression	4 * e		494330	1		*			
ANR	494422	PrimaryExpression	4		494330	0					
ANR	494423	Identifier	e		494330	1					
ANR	494424	ExpressionStatement	em = ( ( e & 0x000F ) << 4 ) + ( m & 0x000F )	1760:8:56002:56041	494330	6	True				
ANR	494425	AssignmentExpression	em = ( ( e & 0x000F ) << 4 ) + ( m & 0x000F )		494330	0		=			
ANR	494426	Identifier	em		494330	0					
ANR	494427	AdditiveExpression	( ( e & 0x000F ) << 4 ) + ( m & 0x000F )		494330	1		+			
ANR	494428	ShiftExpression	( e & 0x000F ) << 4		494330	0		<<			
ANR	494429	BitAndExpression	e & 0x000F		494330	0		&			
ANR	494430	Identifier	e		494330	0					
ANR	494431	PrimaryExpression	0x000F		494330	1					
ANR	494432	PrimaryExpression	4		494330	1					
ANR	494433	BitAndExpression	m & 0x000F		494330	1		&			
ANR	494434	Identifier	m		494330	0					
ANR	494435	PrimaryExpression	0x000F		494330	1					
ANR	494436	BreakStatement	break ;	1761:8:56051:56056	494330	7	True				
ANR	494437	Statement	case	1763:4:56063:56066	494330	8	True				
ANR	494438	Statement	(	1763:9:56068:56068	494330	9	True				
ANR	494439	Statement	2	1763:10:56069:56069	494330	10	True				
ANR	494440	Statement	)	1763:11:56070:56070	494330	11	True				
ANR	494441	Statement	:	1763:12:56071:56071	494330	12	True				
ANR	494442	IfStatement	if ( V < MIN_V2 )		494330	13					
ANR	494443	Condition	V < MIN_V2	1765:12:56086:56095	494330	0	True				
ANR	494444	RelationalExpression	V < MIN_V2		494330	0		<			
ANR	494445	Identifier	V		494330	0					
ANR	494446	Identifier	MIN_V2		494330	1					
ANR	494447	CompoundStatement		24:24:516:516	494330	1					
ANR	494448	ExpressionStatement	e = 0x0000	1766:12:56112:56122	494330	0	True				
ANR	494449	AssignmentExpression	e = 0x0000		494330	0		=			
ANR	494450	Identifier	e		494330	0					
ANR	494451	PrimaryExpression	0x0000		494330	1					
ANR	494452	ExpressionStatement	m = 0x0000	1767:12:56136:56146	494330	1	True				
ANR	494453	AssignmentExpression	m = 0x0000		494330	0		=			
ANR	494454	Identifier	m		494330	0					
ANR	494455	PrimaryExpression	0x0000		494330	1					
ANR	494456	ElseStatement	else		494330	0					
ANR	494457	IfStatement	if ( V > MAX_V2 )		494330	0					
ANR	494458	Condition	V > MAX_V2	1768:19:56167:56176	494330	0	True				
ANR	494459	RelationalExpression	V > MAX_V2		494330	0		>			
ANR	494460	Identifier	V		494330	0					
ANR	494461	Identifier	MAX_V2		494330	1					
ANR	494462	CompoundStatement		27:31:597:597	494330	1					
ANR	494463	ExpressionStatement	e = 0x001F	1769:12:56193:56203	494330	0	True				
ANR	494464	AssignmentExpression	e = 0x001F		494330	0		=			
ANR	494465	Identifier	e		494330	0					
ANR	494466	PrimaryExpression	0x001F		494330	1					
ANR	494467	ExpressionStatement	m = 0x07FF	1770:12:56217:56227	494330	1	True				
ANR	494468	AssignmentExpression	m = 0x07FF		494330	0		=			
ANR	494469	Identifier	m		494330	0					
ANR	494470	PrimaryExpression	0x07FF		494330	1					
ANR	494471	ElseStatement	else		494330	0					
ANR	494472	CompoundStatement		30:15:662:662	494330	0					
ANR	494473	ExpressionStatement	e = ( unsigned short int ) floor ( log ( V ) * 1.44269504088896 ) + 15	1772:12:56258:56320	494330	0	True				
ANR	494474	AssignmentExpression	e = ( unsigned short int ) floor ( log ( V ) * 1.44269504088896 ) + 15		494330	0		=			
ANR	494475	Identifier	e		494330	0					
ANR	494476	AdditiveExpression	( unsigned short int ) floor ( log ( V ) * 1.44269504088896 ) + 15		494330	1		+			
ANR	494477	CastExpression	( unsigned short int ) floor ( log ( V ) * 1.44269504088896 )		494330	0					
ANR	494478	CastTarget	unsigned short int		494330	0					
ANR	494479	CallExpression	floor ( log ( V ) * 1.44269504088896 )		494330	1					
ANR	494480	Callee	floor		494330	0					
ANR	494481	Identifier	floor		494330	0					
ANR	494482	ArgumentList	log ( V ) * 1.44269504088896		494330	1					
ANR	494483	Argument	log ( V ) * 1.44269504088896		494330	0					
ANR	494484	MultiplicativeExpression	log ( V ) * 1.44269504088896		494330	0		*			
ANR	494485	CallExpression	log ( V )		494330	0					
ANR	494486	Callee	log		494330	0					
ANR	494487	Identifier	log		494330	0					
ANR	494488	ArgumentList	V		494330	1					
ANR	494489	Argument	V		494330	0					
ANR	494490	Identifier	V		494330	0					
ANR	494491	PrimaryExpression	1.44269504088896		494330	1					
ANR	494492	PrimaryExpression	15		494330	1					
ANR	494493	ExpressionStatement	"m = ( unsigned short int ) ( 0.5 + 2048.0 * ( ( V / ( pow ( 2.0 , ( double ) e - 15.0 ) ) ) - 1.0 ) )"	1773:12:56334:56455	494330	1	True				
ANR	494494	AssignmentExpression	"m = ( unsigned short int ) ( 0.5 + 2048.0 * ( ( V / ( pow ( 2.0 , ( double ) e - 15.0 ) ) ) - 1.0 ) )"		494330	0		=			
ANR	494495	Identifier	m		494330	0					
ANR	494496	CastExpression	"( unsigned short int ) ( 0.5 + 2048.0 * ( ( V / ( pow ( 2.0 , ( double ) e - 15.0 ) ) ) - 1.0 ) )"		494330	1					
ANR	494497	CastTarget	unsigned short int		494330	0					
ANR	494498	AdditiveExpression	"0.5 + 2048.0 * ( ( V / ( pow ( 2.0 , ( double ) e - 15.0 ) ) ) - 1.0 )"		494330	1		+			
ANR	494499	PrimaryExpression	0.5		494330	0					
ANR	494500	MultiplicativeExpression	"2048.0 * ( ( V / ( pow ( 2.0 , ( double ) e - 15.0 ) ) ) - 1.0 )"		494330	1		*			
ANR	494501	PrimaryExpression	2048.0		494330	0					
ANR	494502	AdditiveExpression	"( V / ( pow ( 2.0 , ( double ) e - 15.0 ) ) ) - 1.0"		494330	1		-			
ANR	494503	MultiplicativeExpression	"V / ( pow ( 2.0 , ( double ) e - 15.0 ) )"		494330	0		/			
ANR	494504	Identifier	V		494330	0					
ANR	494505	CallExpression	"pow ( 2.0 , ( double ) e - 15.0 )"		494330	1					
ANR	494506	Callee	pow		494330	0					
ANR	494507	Identifier	pow		494330	0					
ANR	494508	ArgumentList	2.0		494330	1					
ANR	494509	Argument	2.0		494330	0					
ANR	494510	PrimaryExpression	2.0		494330	0					
ANR	494511	Argument	( double ) e - 15.0		494330	1					
ANR	494512	AdditiveExpression	( double ) e - 15.0		494330	0		-			
ANR	494513	CastExpression	( double ) e		494330	0					
ANR	494514	CastTarget	double		494330	0					
ANR	494515	Identifier	e		494330	1					
ANR	494516	PrimaryExpression	15.0		494330	1					
ANR	494517	PrimaryExpression	1.0		494330	1					
ANR	494518	ExpressionStatement	em = ( ( e & 0x001F ) << 11 ) + ( m & 0x07FF )	1776:8:56475:56515	494330	14	True				
ANR	494519	AssignmentExpression	em = ( ( e & 0x001F ) << 11 ) + ( m & 0x07FF )		494330	0		=			
ANR	494520	Identifier	em		494330	0					
ANR	494521	AdditiveExpression	( ( e & 0x001F ) << 11 ) + ( m & 0x07FF )		494330	1		+			
ANR	494522	ShiftExpression	( e & 0x001F ) << 11		494330	0		<<			
ANR	494523	BitAndExpression	e & 0x001F		494330	0		&			
ANR	494524	Identifier	e		494330	0					
ANR	494525	PrimaryExpression	0x001F		494330	1					
ANR	494526	PrimaryExpression	11		494330	1					
ANR	494527	BitAndExpression	m & 0x07FF		494330	1		&			
ANR	494528	Identifier	m		494330	0					
ANR	494529	PrimaryExpression	0x07FF		494330	1					
ANR	494530	BreakStatement	break ;	1777:8:56525:56530	494330	15	True				
ANR	494531	Label	default :	1779:4:56537:56544	494330	16	True				
ANR	494532	Identifier	default		494330	0					
ANR	494533	ExpressionStatement	em = 0x0000	1781:8:56555:56566	494330	17	True				
ANR	494534	AssignmentExpression	em = 0x0000		494330	0		=			
ANR	494535	Identifier	em		494330	0					
ANR	494536	PrimaryExpression	0x0000		494330	1					
ANR	494537	BreakStatement	break ;	1782:8:56576:56581	494330	18	True				
ANR	494538	ExpressionStatement		1783:5:56588:56588	494330	2	True				
ANR	494539	ReturnStatement	return em ;	1785:4:56595:56604	494330	3	True				
ANR	494540	Identifier	em		494330	0					
ANR	494541	ReturnType	unsigned short int		494330	1					
ANR	494542	Identifier	jpwl_double_to_pfp		494330	2					
ANR	494543	ParameterList	"double V , int bytes"		494330	3					
ANR	494544	Parameter	double V	1741:38:55560:55567	494330	0	True				
ANR	494545	ParameterType	double		494330	0					
ANR	494546	Identifier	V		494330	1					
ANR	494547	Parameter	int bytes	1741:48:55570:55578	494330	1	True				
ANR	494548	ParameterType	int		494330	0					
ANR	494549	Identifier	bytes		494330	1					
ANR	494550	CFGEntryNode	ENTRY		494330		True				
ANR	494551	CFGExitNode	EXIT		494330		True				
ANR	494552	Symbol	MAX_V1		494330						
ANR	494553	Symbol	e		494330						
ANR	494554	Symbol	log		494330						
ANR	494555	Symbol	MAX_V2		494330						
ANR	494556	Symbol	V		494330						
ANR	494557	Symbol	bytes		494330						
ANR	494558	Symbol	MIN_V1		494330						
ANR	494559	Symbol	MIN_V2		494330						
ANR	494560	Symbol	em		494330						
ANR	494561	Symbol	pow		494330						
ANR	494562	Symbol	floor		494330						
ANR	494563	Symbol	m		494330						
ANR	494564	Function	jpwl_pfp_to_double	1788:0:56609:57021							
ANR	494565	FunctionDef	"jpwl_pfp_to_double (unsigned short int em , int bytes)"		494564	0					
ANR	494566	CompoundStatement		1789:0:56669:57021	494564	0					
ANR	494567	IdentifierDeclStatement	double V ;	1791:4:56676:56684	494564	0	True				
ANR	494568	IdentifierDecl	V		494564	0					
ANR	494569	IdentifierDeclType	double		494564	0					
ANR	494570	Identifier	V		494564	1					
ANR	494571	SwitchStatement	switch ( bytes )		494564	1					
ANR	494572	Condition	bytes	1793:12:56699:56703	494564	0	True				
ANR	494573	Identifier	bytes		494564	0					
ANR	494574	CompoundStatement		5:19:36:36	494564	1					
ANR	494575	Label	case 1 :	1795:4:56713:56719	494564	0	True				
ANR	494576	ExpressionStatement	"V = ( double ) ( em & 0x0F ) * pow ( 2.0 , ( double ) ( em & 0xF0 ) )"	1796:8:56729:56784	494564	1	True				
ANR	494577	AssignmentExpression	"V = ( double ) ( em & 0x0F ) * pow ( 2.0 , ( double ) ( em & 0xF0 ) )"		494564	0		=			
ANR	494578	Identifier	V		494564	0					
ANR	494579	MultiplicativeExpression	"( double ) ( em & 0x0F ) * pow ( 2.0 , ( double ) ( em & 0xF0 ) )"		494564	1		*			
ANR	494580	CastExpression	( double ) ( em & 0x0F )		494564	0					
ANR	494581	CastTarget	double		494564	0					
ANR	494582	BitAndExpression	em & 0x0F		494564	1		&			
ANR	494583	Identifier	em		494564	0					
ANR	494584	PrimaryExpression	0x0F		494564	1					
ANR	494585	CallExpression	"pow ( 2.0 , ( double ) ( em & 0xF0 ) )"		494564	1					
ANR	494586	Callee	pow		494564	0					
ANR	494587	Identifier	pow		494564	0					
ANR	494588	ArgumentList	2.0		494564	1					
ANR	494589	Argument	2.0		494564	0					
ANR	494590	PrimaryExpression	2.0		494564	0					
ANR	494591	Argument	( double ) ( em & 0xF0 )		494564	1					
ANR	494592	CastExpression	( double ) ( em & 0xF0 )		494564	0					
ANR	494593	CastTarget	double		494564	0					
ANR	494594	BitAndExpression	em & 0xF0		494564	1		&			
ANR	494595	Identifier	em		494564	0					
ANR	494596	PrimaryExpression	0xF0		494564	1					
ANR	494597	BreakStatement	break ;	1797:8:56794:56799	494564	2	True				
ANR	494598	Label	case 2 :	1799:4:56806:56812	494564	3	True				
ANR	494599	ExpressionStatement	"V = pow ( 2.0 , ( double ) ( ( em & 0xF800 ) >> 11 ) - 15.0 ) * ( 1.0 + ( double ) ( em & 0x07FF ) / 2048.0 )"	1801:8:56823:56935	494564	4	True				
ANR	494600	AssignmentExpression	"V = pow ( 2.0 , ( double ) ( ( em & 0xF800 ) >> 11 ) - 15.0 ) * ( 1.0 + ( double ) ( em & 0x07FF ) / 2048.0 )"		494564	0		=			
ANR	494601	Identifier	V		494564	0					
ANR	494602	MultiplicativeExpression	"pow ( 2.0 , ( double ) ( ( em & 0xF800 ) >> 11 ) - 15.0 ) * ( 1.0 + ( double ) ( em & 0x07FF ) / 2048.0 )"		494564	1		*			
ANR	494603	CallExpression	"pow ( 2.0 , ( double ) ( ( em & 0xF800 ) >> 11 ) - 15.0 )"		494564	0					
ANR	494604	Callee	pow		494564	0					
ANR	494605	Identifier	pow		494564	0					
ANR	494606	ArgumentList	2.0		494564	1					
ANR	494607	Argument	2.0		494564	0					
ANR	494608	PrimaryExpression	2.0		494564	0					
ANR	494609	Argument	( double ) ( ( em & 0xF800 ) >> 11 ) - 15.0		494564	1					
ANR	494610	AdditiveExpression	( double ) ( ( em & 0xF800 ) >> 11 ) - 15.0		494564	0		-			
ANR	494611	CastExpression	( double ) ( ( em & 0xF800 ) >> 11 )		494564	0					
ANR	494612	CastTarget	double		494564	0					
ANR	494613	ShiftExpression	( em & 0xF800 ) >> 11		494564	1		>>			
ANR	494614	BitAndExpression	em & 0xF800		494564	0		&			
ANR	494615	Identifier	em		494564	0					
ANR	494616	PrimaryExpression	0xF800		494564	1					
ANR	494617	PrimaryExpression	11		494564	1					
ANR	494618	PrimaryExpression	15.0		494564	1					
ANR	494619	AdditiveExpression	1.0 + ( double ) ( em & 0x07FF ) / 2048.0		494564	1		+			
ANR	494620	PrimaryExpression	1.0		494564	0					
ANR	494621	MultiplicativeExpression	( double ) ( em & 0x07FF ) / 2048.0		494564	1		/			
ANR	494622	CastExpression	( double ) ( em & 0x07FF )		494564	0					
ANR	494623	CastTarget	double		494564	0					
ANR	494624	BitAndExpression	em & 0x07FF		494564	1		&			
ANR	494625	Identifier	em		494564	0					
ANR	494626	PrimaryExpression	0x07FF		494564	1					
ANR	494627	PrimaryExpression	2048.0		494564	1					
ANR	494628	BreakStatement	break ;	1803:8:56945:56950	494564	5	True				
ANR	494629	Label	default :	1805:4:56957:56964	494564	6	True				
ANR	494630	Identifier	default		494564	0					
ANR	494631	ExpressionStatement	V = 0.0	1806:8:56974:56981	494564	7	True				
ANR	494632	AssignmentExpression	V = 0.0		494564	0		=			
ANR	494633	Identifier	V		494564	0					
ANR	494634	PrimaryExpression	0.0		494564	1					
ANR	494635	BreakStatement	break ;	1807:8:56991:56996	494564	8	True				
ANR	494636	ReturnStatement	return V ;	1811:4:57010:57018	494564	2	True				
ANR	494637	Identifier	V		494564	0					
ANR	494638	ReturnType	double		494564	1					
ANR	494639	Identifier	jpwl_pfp_to_double		494564	2					
ANR	494640	ParameterList	"unsigned short int em , int bytes"		494564	3					
ANR	494641	Parameter	unsigned short int em	1788:26:56635:56655	494564	0	True				
ANR	494642	ParameterType	unsigned short int		494564	0					
ANR	494643	Identifier	em		494564	1					
ANR	494644	Parameter	int bytes	1788:49:56658:56666	494564	1	True				
ANR	494645	ParameterType	int		494564	0					
ANR	494646	Identifier	bytes		494564	1					
ANR	494647	CFGEntryNode	ENTRY		494564		True				
ANR	494648	CFGExitNode	EXIT		494564		True				
ANR	494649	Symbol	bytes		494564						
ANR	494650	Symbol	V		494564						
ANR	494651	Symbol	em		494564						
ANR	494652	Symbol	pow		494564						
ANR	494653	Function	jpwl_update_info	1815:0:57024:62054							
ANR	494654	FunctionDef	"jpwl_update_info (opj_j2k_t * j2k , jpwl_marker_t * jwmarker , int jwmarker_num)"		494653	0					
ANR	494655	CompoundStatement		1817:0:57135:62054	494653	0					
ANR	494656	IdentifierDeclStatement	int mm ;	1819:4:57142:57148	494653	0	True				
ANR	494657	IdentifierDecl	mm		494653	0					
ANR	494658	IdentifierDeclType	int		494653	0					
ANR	494659	Identifier	mm		494653	1					
ANR	494660	IdentifierDeclStatement	unsigned long int addlen ;	1820:4:57154:57178	494653	1	True				
ANR	494661	IdentifierDecl	addlen		494653	0					
ANR	494662	IdentifierDeclType	unsigned long int		494653	0					
ANR	494663	Identifier	addlen		494653	1					
ANR	494664	IdentifierDeclStatement	opj_codestream_info_t * info = j2k -> cstr_info ;	1822:4:57185:57229	494653	2	True				
ANR	494665	IdentifierDecl	* info = j2k -> cstr_info		494653	0					
ANR	494666	IdentifierDeclType	opj_codestream_info_t *		494653	0					
ANR	494667	Identifier	info		494653	1					
ANR	494668	AssignmentExpression	* info = j2k -> cstr_info		494653	2		=			
ANR	494669	Identifier	info		494653	0					
ANR	494670	PtrMemberAccess	j2k -> cstr_info		494653	1					
ANR	494671	Identifier	j2k		494653	0					
ANR	494672	Identifier	cstr_info		494653	1					
ANR	494673	IdentifierDeclStatement	"int tileno , tpno , packno , numtiles = info -> th * info -> tw , numpacks = info -> packno ;"	1823:4:57235:57346	494653	3	True				
ANR	494674	IdentifierDecl	tileno		494653	0					
ANR	494675	IdentifierDeclType	int		494653	0					
ANR	494676	Identifier	tileno		494653	1					
ANR	494677	IdentifierDecl	tpno		494653	1					
ANR	494678	IdentifierDeclType	int		494653	0					
ANR	494679	Identifier	tpno		494653	1					
ANR	494680	IdentifierDecl	packno		494653	2					
ANR	494681	IdentifierDeclType	int		494653	0					
ANR	494682	Identifier	packno		494653	1					
ANR	494683	IdentifierDecl	numtiles = info -> th * info -> tw		494653	3					
ANR	494684	IdentifierDeclType	int		494653	0					
ANR	494685	Identifier	numtiles		494653	1					
ANR	494686	AssignmentExpression	numtiles = info -> th * info -> tw		494653	2		=			
ANR	494687	Identifier	numtiles		494653	0					
ANR	494688	MultiplicativeExpression	info -> th * info -> tw		494653	1		*			
ANR	494689	PtrMemberAccess	info -> th		494653	0					
ANR	494690	Identifier	info		494653	0					
ANR	494691	Identifier	th		494653	1					
ANR	494692	PtrMemberAccess	info -> tw		494653	1					
ANR	494693	Identifier	info		494653	0					
ANR	494694	Identifier	tw		494653	1					
ANR	494695	IdentifierDecl	numpacks = info -> packno		494653	4					
ANR	494696	IdentifierDeclType	int		494653	0					
ANR	494697	Identifier	numpacks		494653	1					
ANR	494698	AssignmentExpression	numpacks = info -> packno		494653	2		=			
ANR	494699	Identifier	numpacks		494653	0					
ANR	494700	PtrMemberAccess	info -> packno		494653	1					
ANR	494701	Identifier	info		494653	0					
ANR	494702	Identifier	packno		494653	1					
ANR	494703	IfStatement	if ( ! j2k || ! jwmarker )		494653	4					
ANR	494704	Condition	! j2k || ! jwmarker	1826:8:57357:57373	494653	0	True				
ANR	494705	OrExpression	! j2k || ! jwmarker		494653	0		||			
ANR	494706	UnaryOperationExpression	! j2k		494653	0					
ANR	494707	UnaryOperator	!		494653	0					
ANR	494708	Identifier	j2k		494653	1					
ANR	494709	UnaryOperationExpression	! jwmarker		494653	1					
ANR	494710	UnaryOperator	!		494653	0					
ANR	494711	Identifier	jwmarker		494653	1					
ANR	494712	CompoundStatement		10:27:240:240	494653	1					
ANR	494713	ExpressionStatement	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""J2K handle or JPWL markers list badly allocated\\n"" )"	1827:8:57386:57497	494653	0	True				
ANR	494714	CallExpression	"opj_event_msg ( j2k -> cinfo , EVT_ERROR , ""J2K handle or JPWL markers list badly allocated\\n"" )"		494653	0					
ANR	494715	Callee	opj_event_msg		494653	0					
ANR	494716	Identifier	opj_event_msg		494653	0					
ANR	494717	ArgumentList	j2k -> cinfo		494653	1					
ANR	494718	Argument	j2k -> cinfo		494653	0					
ANR	494719	PtrMemberAccess	j2k -> cinfo		494653	0					
ANR	494720	Identifier	j2k		494653	0					
ANR	494721	Identifier	cinfo		494653	1					
ANR	494722	Argument	EVT_ERROR		494653	1					
ANR	494723	Identifier	EVT_ERROR		494653	0					
ANR	494724	Argument	"""J2K handle or JPWL markers list badly allocated\\n"""		494653	2					
ANR	494725	PrimaryExpression	"""J2K handle or JPWL markers list badly allocated\\n"""		494653	0					
ANR	494726	ReturnStatement	return OPJ_FALSE ;	1829:8:57507:57523	494653	1	True				
ANR	494727	Identifier	OPJ_FALSE		494653	0					
ANR	494728	ExpressionStatement	addlen = 0	1833:4:57596:57606	494653	5	True				
ANR	494729	AssignmentExpression	addlen = 0		494653	0		=			
ANR	494730	Identifier	addlen		494653	0					
ANR	494731	PrimaryExpression	0		494653	1					
ANR	494732	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	6					
ANR	494733	ForInit	mm = 0 ;	1834:9:57617:57623	494653	0	True				
ANR	494734	AssignmentExpression	mm = 0		494653	0		=			
ANR	494735	Identifier	mm		494653	0					
ANR	494736	PrimaryExpression	0		494653	1					
ANR	494737	Condition	mm < jwmarker_num	1834:17:57625:57641	494653	1	True				
ANR	494738	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	494739	Identifier	mm		494653	0					
ANR	494740	Identifier	jwmarker_num		494653	1					
ANR	494741	PostIncDecOperationExpression	mm ++	1834:36:57644:57647	494653	2	True				
ANR	494742	Identifier	mm		494653	0					
ANR	494743	IncDec	++		494653	1					
ANR	494744	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> main_head_end )		494653	3					
ANR	494745	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> main_head_end	1835:12:57662:57719	494653	0	True				
ANR	494746	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> main_head_end		494653	0		<			
ANR	494747	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	494748	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494749	Identifier	jwmarker		494653	0					
ANR	494750	Identifier	mm		494653	1					
ANR	494751	Identifier	pos		494653	1					
ANR	494752	CastExpression	( unsigned long int ) info -> main_head_end		494653	1					
ANR	494753	CastTarget	unsigned long int		494653	0					
ANR	494754	PtrMemberAccess	info -> main_head_end		494653	1					
ANR	494755	Identifier	info		494653	0					
ANR	494756	Identifier	main_head_end		494653	1					
ANR	494757	CompoundStatement		19:72:586:586	494653	1					
ANR	494758	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1836:12:57736:57766	494653	0	True				
ANR	494759	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	494760	Identifier	addlen		494653	0					
ANR	494761	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	494762	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	494763	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494764	Identifier	jwmarker		494653	0					
ANR	494765	Identifier	mm		494653	1					
ANR	494766	Identifier	len		494653	1					
ANR	494767	PrimaryExpression	2		494653	1					
ANR	494768	ExpressionStatement	info -> main_head_end += addlen	1838:4:57782:57811	494653	7	True				
ANR	494769	AssignmentExpression	info -> main_head_end += addlen		494653	0		+=			
ANR	494770	PtrMemberAccess	info -> main_head_end		494653	0					
ANR	494771	Identifier	info		494653	0					
ANR	494772	Identifier	main_head_end		494653	1					
ANR	494773	Identifier	addlen		494653	1					
ANR	494774	ExpressionStatement	addlen = 0	1841:4:57879:57889	494653	8	True				
ANR	494775	AssignmentExpression	addlen = 0		494653	0		=			
ANR	494776	Identifier	addlen		494653	0					
ANR	494777	PrimaryExpression	0		494653	1					
ANR	494778	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	9					
ANR	494779	ForInit	mm = 0 ;	1842:9:57900:57906	494653	0	True				
ANR	494780	AssignmentExpression	mm = 0		494653	0		=			
ANR	494781	Identifier	mm		494653	0					
ANR	494782	PrimaryExpression	0		494653	1					
ANR	494783	Condition	mm < jwmarker_num	1842:17:57908:57924	494653	1	True				
ANR	494784	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	494785	Identifier	mm		494653	0					
ANR	494786	Identifier	jwmarker_num		494653	1					
ANR	494787	PostIncDecOperationExpression	mm ++	1842:36:57927:57930	494653	2	True				
ANR	494788	Identifier	mm		494653	0					
ANR	494789	IncDec	++		494653	1					
ANR	494790	CompoundStatement		26:42:797:797	494653	3					
ANR	494791	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1843:8:57943:57973	494653	0	True				
ANR	494792	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	494793	Identifier	addlen		494653	0					
ANR	494794	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	494795	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	494796	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494797	Identifier	jwmarker		494653	0					
ANR	494798	Identifier	mm		494653	1					
ANR	494799	Identifier	len		494653	1					
ANR	494800	PrimaryExpression	2		494653	1					
ANR	494801	ExpressionStatement	info -> codestream_size += addlen	1845:4:57985:58016	494653	10	True				
ANR	494802	AssignmentExpression	info -> codestream_size += addlen		494653	0		+=			
ANR	494803	PtrMemberAccess	info -> codestream_size		494653	0					
ANR	494804	Identifier	info		494653	0					
ANR	494805	Identifier	codestream_size		494653	1					
ANR	494806	Identifier	addlen		494653	1					
ANR	494807	ForStatement	for ( tileno = 0 ; tileno < numtiles ; tileno ++ )		494653	11					
ANR	494808	ForInit	tileno = 0 ;	1848:9:58069:58079	494653	0	True				
ANR	494809	AssignmentExpression	tileno = 0		494653	0		=			
ANR	494810	Identifier	tileno		494653	0					
ANR	494811	PrimaryExpression	0		494653	1					
ANR	494812	Condition	tileno < numtiles	1848:21:58081:58097	494653	1	True				
ANR	494813	RelationalExpression	tileno < numtiles		494653	0		<			
ANR	494814	Identifier	tileno		494653	0					
ANR	494815	Identifier	numtiles		494653	1					
ANR	494816	PostIncDecOperationExpression	tileno ++	1848:40:58100:58107	494653	2	True				
ANR	494817	Identifier	tileno		494653	0					
ANR	494818	IncDec	++		494653	1					
ANR	494819	CompoundStatement		32:50:974:974	494653	3					
ANR	494820	ExpressionStatement	addlen = 0	1851:8:58180:58190	494653	0	True				
ANR	494821	AssignmentExpression	addlen = 0		494653	0		=			
ANR	494822	Identifier	addlen		494653	0					
ANR	494823	PrimaryExpression	0		494653	1					
ANR	494824	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	1					
ANR	494825	ForInit	mm = 0 ;	1852:13:58205:58211	494653	0	True				
ANR	494826	AssignmentExpression	mm = 0		494653	0		=			
ANR	494827	Identifier	mm		494653	0					
ANR	494828	PrimaryExpression	0		494653	1					
ANR	494829	Condition	mm < jwmarker_num	1852:21:58213:58229	494653	1	True				
ANR	494830	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	494831	Identifier	mm		494653	0					
ANR	494832	Identifier	jwmarker_num		494653	1					
ANR	494833	PostIncDecOperationExpression	mm ++	1852:40:58232:58235	494653	2	True				
ANR	494834	Identifier	mm		494653	0					
ANR	494835	IncDec	++		494653	1					
ANR	494836	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . start_pos )		494653	3					
ANR	494837	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . start_pos	1853:16:58254:58320	494653	0	True				
ANR	494838	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . start_pos		494653	0		<			
ANR	494839	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	494840	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494841	Identifier	jwmarker		494653	0					
ANR	494842	Identifier	mm		494653	1					
ANR	494843	Identifier	pos		494653	1					
ANR	494844	CastExpression	( unsigned long int ) info -> tile [ tileno ] . start_pos		494653	1					
ANR	494845	CastTarget	unsigned long int		494653	0					
ANR	494846	MemberAccess	info -> tile [ tileno ] . start_pos		494653	1					
ANR	494847	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494848	PtrMemberAccess	info -> tile		494653	0					
ANR	494849	Identifier	info		494653	0					
ANR	494850	Identifier	tile		494653	1					
ANR	494851	Identifier	tileno		494653	1					
ANR	494852	Identifier	start_pos		494653	1					
ANR	494853	CompoundStatement		37:85:1187:1187	494653	1					
ANR	494854	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1854:16:58341:58371	494653	0	True				
ANR	494855	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	494856	Identifier	addlen		494653	0					
ANR	494857	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	494858	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	494859	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494860	Identifier	jwmarker		494653	0					
ANR	494861	Identifier	mm		494653	1					
ANR	494862	Identifier	len		494653	1					
ANR	494863	PrimaryExpression	2		494653	1					
ANR	494864	ExpressionStatement	info -> tile [ tileno ] . start_pos += addlen	1856:8:58395:58433	494653	2	True				
ANR	494865	AssignmentExpression	info -> tile [ tileno ] . start_pos += addlen		494653	0		+=			
ANR	494866	MemberAccess	info -> tile [ tileno ] . start_pos		494653	0					
ANR	494867	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494868	PtrMemberAccess	info -> tile		494653	0					
ANR	494869	Identifier	info		494653	0					
ANR	494870	Identifier	tile		494653	1					
ANR	494871	Identifier	tileno		494653	1					
ANR	494872	Identifier	start_pos		494653	1					
ANR	494873	Identifier	addlen		494653	1					
ANR	494874	ExpressionStatement	addlen = 0	1859:8:58506:58516	494653	3	True				
ANR	494875	AssignmentExpression	addlen = 0		494653	0		=			
ANR	494876	Identifier	addlen		494653	0					
ANR	494877	PrimaryExpression	0		494653	1					
ANR	494878	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	4					
ANR	494879	ForInit	mm = 0 ;	1860:13:58531:58537	494653	0	True				
ANR	494880	AssignmentExpression	mm = 0		494653	0		=			
ANR	494881	Identifier	mm		494653	0					
ANR	494882	PrimaryExpression	0		494653	1					
ANR	494883	Condition	mm < jwmarker_num	1860:21:58539:58555	494653	1	True				
ANR	494884	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	494885	Identifier	mm		494653	0					
ANR	494886	Identifier	jwmarker_num		494653	1					
ANR	494887	PostIncDecOperationExpression	mm ++	1860:40:58558:58561	494653	2	True				
ANR	494888	Identifier	mm		494653	0					
ANR	494889	IncDec	++		494653	1					
ANR	494890	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . end_header )		494653	3					
ANR	494891	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . end_header	1861:16:58580:58647	494653	0	True				
ANR	494892	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . end_header		494653	0		<			
ANR	494893	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	494894	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494895	Identifier	jwmarker		494653	0					
ANR	494896	Identifier	mm		494653	1					
ANR	494897	Identifier	pos		494653	1					
ANR	494898	CastExpression	( unsigned long int ) info -> tile [ tileno ] . end_header		494653	1					
ANR	494899	CastTarget	unsigned long int		494653	0					
ANR	494900	MemberAccess	info -> tile [ tileno ] . end_header		494653	1					
ANR	494901	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494902	PtrMemberAccess	info -> tile		494653	0					
ANR	494903	Identifier	info		494653	0					
ANR	494904	Identifier	tile		494653	1					
ANR	494905	Identifier	tileno		494653	1					
ANR	494906	Identifier	end_header		494653	1					
ANR	494907	CompoundStatement		45:86:1514:1514	494653	1					
ANR	494908	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1862:16:58668:58698	494653	0	True				
ANR	494909	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	494910	Identifier	addlen		494653	0					
ANR	494911	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	494912	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	494913	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494914	Identifier	jwmarker		494653	0					
ANR	494915	Identifier	mm		494653	1					
ANR	494916	Identifier	len		494653	1					
ANR	494917	PrimaryExpression	2		494653	1					
ANR	494918	ExpressionStatement	info -> tile [ tileno ] . end_header += addlen	1864:8:58722:58761	494653	5	True				
ANR	494919	AssignmentExpression	info -> tile [ tileno ] . end_header += addlen		494653	0		+=			
ANR	494920	MemberAccess	info -> tile [ tileno ] . end_header		494653	0					
ANR	494921	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494922	PtrMemberAccess	info -> tile		494653	0					
ANR	494923	Identifier	info		494653	0					
ANR	494924	Identifier	tile		494653	1					
ANR	494925	Identifier	tileno		494653	1					
ANR	494926	Identifier	end_header		494653	1					
ANR	494927	Identifier	addlen		494653	1					
ANR	494928	ExpressionStatement	addlen = 0	1868:8:58931:58941	494653	6	True				
ANR	494929	AssignmentExpression	addlen = 0		494653	0		=			
ANR	494930	Identifier	addlen		494653	0					
ANR	494931	PrimaryExpression	0		494653	1					
ANR	494932	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	7					
ANR	494933	ForInit	mm = 0 ;	1869:13:58956:58962	494653	0	True				
ANR	494934	AssignmentExpression	mm = 0		494653	0		=			
ANR	494935	Identifier	mm		494653	0					
ANR	494936	PrimaryExpression	0		494653	1					
ANR	494937	Condition	mm < jwmarker_num	1869:21:58964:58980	494653	1	True				
ANR	494938	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	494939	Identifier	mm		494653	0					
ANR	494940	Identifier	jwmarker_num		494653	1					
ANR	494941	PostIncDecOperationExpression	mm ++	1869:40:58983:58986	494653	2	True				
ANR	494942	Identifier	mm		494653	0					
ANR	494943	IncDec	++		494653	1					
ANR	494944	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . end_pos )		494653	3					
ANR	494945	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . end_pos	1870:16:59005:59069	494653	0	True				
ANR	494946	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . end_pos		494653	0		<			
ANR	494947	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	494948	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494949	Identifier	jwmarker		494653	0					
ANR	494950	Identifier	mm		494653	1					
ANR	494951	Identifier	pos		494653	1					
ANR	494952	CastExpression	( unsigned long int ) info -> tile [ tileno ] . end_pos		494653	1					
ANR	494953	CastTarget	unsigned long int		494653	0					
ANR	494954	MemberAccess	info -> tile [ tileno ] . end_pos		494653	1					
ANR	494955	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494956	PtrMemberAccess	info -> tile		494653	0					
ANR	494957	Identifier	info		494653	0					
ANR	494958	Identifier	tile		494653	1					
ANR	494959	Identifier	tileno		494653	1					
ANR	494960	Identifier	end_pos		494653	1					
ANR	494961	CompoundStatement		54:83:1936:1936	494653	1					
ANR	494962	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1871:16:59090:59120	494653	0	True				
ANR	494963	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	494964	Identifier	addlen		494653	0					
ANR	494965	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	494966	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	494967	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	494968	Identifier	jwmarker		494653	0					
ANR	494969	Identifier	mm		494653	1					
ANR	494970	Identifier	len		494653	1					
ANR	494971	PrimaryExpression	2		494653	1					
ANR	494972	ExpressionStatement	info -> tile [ tileno ] . end_pos += addlen	1873:8:59144:59180	494653	8	True				
ANR	494973	AssignmentExpression	info -> tile [ tileno ] . end_pos += addlen		494653	0		+=			
ANR	494974	MemberAccess	info -> tile [ tileno ] . end_pos		494653	0					
ANR	494975	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494976	PtrMemberAccess	info -> tile		494653	0					
ANR	494977	Identifier	info		494653	0					
ANR	494978	Identifier	tile		494653	1					
ANR	494979	Identifier	tileno		494653	1					
ANR	494980	Identifier	end_pos		494653	1					
ANR	494981	Identifier	addlen		494653	1					
ANR	494982	ForStatement	for ( tpno = 0 ; tpno < info -> tile [ tileno ] . num_tps ; tpno ++ )		494653	9					
ANR	494983	ForInit	tpno = 0 ;	1876:13:59246:59254	494653	0	True				
ANR	494984	AssignmentExpression	tpno = 0		494653	0		=			
ANR	494985	Identifier	tpno		494653	0					
ANR	494986	PrimaryExpression	0		494653	1					
ANR	494987	Condition	tpno < info -> tile [ tileno ] . num_tps	1876:23:59256:59288	494653	1	True				
ANR	494988	RelationalExpression	tpno < info -> tile [ tileno ] . num_tps		494653	0		<			
ANR	494989	Identifier	tpno		494653	0					
ANR	494990	MemberAccess	info -> tile [ tileno ] . num_tps		494653	1					
ANR	494991	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	494992	PtrMemberAccess	info -> tile		494653	0					
ANR	494993	Identifier	info		494653	0					
ANR	494994	Identifier	tile		494653	1					
ANR	494995	Identifier	tileno		494653	1					
ANR	494996	Identifier	num_tps		494653	1					
ANR	494997	PostIncDecOperationExpression	tpno ++	1876:58:59291:59296	494653	2	True				
ANR	494998	Identifier	tpno		494653	0					
ANR	494999	IncDec	++		494653	1					
ANR	495000	CompoundStatement		60:66:2163:2163	494653	3					
ANR	495001	ExpressionStatement	addlen = 0	1879:12:59377:59387	494653	0	True				
ANR	495002	AssignmentExpression	addlen = 0		494653	0		=			
ANR	495003	Identifier	addlen		494653	0					
ANR	495004	PrimaryExpression	0		494653	1					
ANR	495005	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	1					
ANR	495006	ForInit	mm = 0 ;	1880:17:59406:59412	494653	0	True				
ANR	495007	AssignmentExpression	mm = 0		494653	0		=			
ANR	495008	Identifier	mm		494653	0					
ANR	495009	PrimaryExpression	0		494653	1					
ANR	495010	Condition	mm < jwmarker_num	1880:25:59414:59430	494653	1	True				
ANR	495011	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	495012	Identifier	mm		494653	0					
ANR	495013	Identifier	jwmarker_num		494653	1					
ANR	495014	PostIncDecOperationExpression	mm ++	1880:44:59433:59436	494653	2	True				
ANR	495015	Identifier	mm		494653	0					
ANR	495016	IncDec	++		494653	1					
ANR	495017	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos )		494653	3					
ANR	495018	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos	1881:20:59459:59561	494653	0	True				
ANR	495019	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos		494653	0		<			
ANR	495020	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	495021	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495022	Identifier	jwmarker		494653	0					
ANR	495023	Identifier	mm		494653	1					
ANR	495024	Identifier	pos		494653	1					
ANR	495025	CastExpression	( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos		494653	1					
ANR	495026	CastTarget	unsigned long int		494653	0					
ANR	495027	MemberAccess	info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos		494653	1					
ANR	495028	ArrayIndexing	info -> tile [ tileno ] . tp [ tpno ]		494653	0					
ANR	495029	MemberAccess	info -> tile [ tileno ] . tp		494653	0					
ANR	495030	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495031	PtrMemberAccess	info -> tile		494653	0					
ANR	495032	Identifier	info		494653	0					
ANR	495033	Identifier	tile		494653	1					
ANR	495034	Identifier	tileno		494653	1					
ANR	495035	Identifier	tp		494653	1					
ANR	495036	Identifier	tpno		494653	1					
ANR	495037	Identifier	tp_start_pos		494653	1					
ANR	495038	CompoundStatement		66:66:2428:2428	494653	1					
ANR	495039	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1883:20:59586:59616	494653	0	True				
ANR	495040	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	495041	Identifier	addlen		494653	0					
ANR	495042	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	495043	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	495044	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495045	Identifier	jwmarker		494653	0					
ANR	495046	Identifier	mm		494653	1					
ANR	495047	Identifier	len		494653	1					
ANR	495048	PrimaryExpression	2		494653	1					
ANR	495049	ExpressionStatement	info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos += addlen	1885:12:59648:59698	494653	2	True				
ANR	495050	AssignmentExpression	info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos += addlen		494653	0		+=			
ANR	495051	MemberAccess	info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos		494653	0					
ANR	495052	ArrayIndexing	info -> tile [ tileno ] . tp [ tpno ]		494653	0					
ANR	495053	MemberAccess	info -> tile [ tileno ] . tp		494653	0					
ANR	495054	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495055	PtrMemberAccess	info -> tile		494653	0					
ANR	495056	Identifier	info		494653	0					
ANR	495057	Identifier	tile		494653	1					
ANR	495058	Identifier	tileno		494653	1					
ANR	495059	Identifier	tp		494653	1					
ANR	495060	Identifier	tpno		494653	1					
ANR	495061	Identifier	tp_start_pos		494653	1					
ANR	495062	Identifier	addlen		494653	1					
ANR	495063	ExpressionStatement	addlen = 0	1888:12:59779:59789	494653	3	True				
ANR	495064	AssignmentExpression	addlen = 0		494653	0		=			
ANR	495065	Identifier	addlen		494653	0					
ANR	495066	PrimaryExpression	0		494653	1					
ANR	495067	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	4					
ANR	495068	ForInit	mm = 0 ;	1889:17:59808:59814	494653	0	True				
ANR	495069	AssignmentExpression	mm = 0		494653	0		=			
ANR	495070	Identifier	mm		494653	0					
ANR	495071	PrimaryExpression	0		494653	1					
ANR	495072	Condition	mm < jwmarker_num	1889:25:59816:59832	494653	1	True				
ANR	495073	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	495074	Identifier	mm		494653	0					
ANR	495075	Identifier	jwmarker_num		494653	1					
ANR	495076	PostIncDecOperationExpression	mm ++	1889:44:59835:59838	494653	2	True				
ANR	495077	Identifier	mm		494653	0					
ANR	495078	IncDec	++		494653	1					
ANR	495079	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_header )		494653	3					
ANR	495080	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_header	1890:20:59861:59964	494653	0	True				
ANR	495081	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_header		494653	0		<			
ANR	495082	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	495083	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495084	Identifier	jwmarker		494653	0					
ANR	495085	Identifier	mm		494653	1					
ANR	495086	Identifier	pos		494653	1					
ANR	495087	CastExpression	( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_header		494653	1					
ANR	495088	CastTarget	unsigned long int		494653	0					
ANR	495089	MemberAccess	info -> tile [ tileno ] . tp [ tpno ] . tp_end_header		494653	1					
ANR	495090	ArrayIndexing	info -> tile [ tileno ] . tp [ tpno ]		494653	0					
ANR	495091	MemberAccess	info -> tile [ tileno ] . tp		494653	0					
ANR	495092	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495093	PtrMemberAccess	info -> tile		494653	0					
ANR	495094	Identifier	info		494653	0					
ANR	495095	Identifier	tile		494653	1					
ANR	495096	Identifier	tileno		494653	1					
ANR	495097	Identifier	tp		494653	1					
ANR	495098	Identifier	tpno		494653	1					
ANR	495099	Identifier	tp_end_header		494653	1					
ANR	495100	CompoundStatement		75:67:2831:2831	494653	1					
ANR	495101	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1892:20:59989:60019	494653	0	True				
ANR	495102	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	495103	Identifier	addlen		494653	0					
ANR	495104	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	495105	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	495106	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495107	Identifier	jwmarker		494653	0					
ANR	495108	Identifier	mm		494653	1					
ANR	495109	Identifier	len		494653	1					
ANR	495110	PrimaryExpression	2		494653	1					
ANR	495111	ExpressionStatement	info -> tile [ tileno ] . tp [ tpno ] . tp_end_header += addlen	1894:12:60051:60102	494653	5	True				
ANR	495112	AssignmentExpression	info -> tile [ tileno ] . tp [ tpno ] . tp_end_header += addlen		494653	0		+=			
ANR	495113	MemberAccess	info -> tile [ tileno ] . tp [ tpno ] . tp_end_header		494653	0					
ANR	495114	ArrayIndexing	info -> tile [ tileno ] . tp [ tpno ]		494653	0					
ANR	495115	MemberAccess	info -> tile [ tileno ] . tp		494653	0					
ANR	495116	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495117	PtrMemberAccess	info -> tile		494653	0					
ANR	495118	Identifier	info		494653	0					
ANR	495119	Identifier	tile		494653	1					
ANR	495120	Identifier	tileno		494653	1					
ANR	495121	Identifier	tp		494653	1					
ANR	495122	Identifier	tpno		494653	1					
ANR	495123	Identifier	tp_end_header		494653	1					
ANR	495124	Identifier	addlen		494653	1					
ANR	495125	ExpressionStatement	addlen = 0	1897:12:60200:60210	494653	6	True				
ANR	495126	AssignmentExpression	addlen = 0		494653	0		=			
ANR	495127	Identifier	addlen		494653	0					
ANR	495128	PrimaryExpression	0		494653	1					
ANR	495129	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	7					
ANR	495130	ForInit	mm = 0 ;	1898:17:60229:60235	494653	0	True				
ANR	495131	AssignmentExpression	mm = 0		494653	0		=			
ANR	495132	Identifier	mm		494653	0					
ANR	495133	PrimaryExpression	0		494653	1					
ANR	495134	Condition	mm < jwmarker_num	1898:25:60237:60253	494653	1	True				
ANR	495135	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	495136	Identifier	mm		494653	0					
ANR	495137	Identifier	jwmarker_num		494653	1					
ANR	495138	PostIncDecOperationExpression	mm ++	1898:44:60256:60259	494653	2	True				
ANR	495139	Identifier	mm		494653	0					
ANR	495140	IncDec	++		494653	1					
ANR	495141	IfStatement	if ( jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos )		494653	3					
ANR	495142	Condition	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos	1899:20:60282:60382	494653	0	True				
ANR	495143	RelationalExpression	jwmarker [ mm ] . pos < ( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos		494653	0		<			
ANR	495144	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	495145	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495146	Identifier	jwmarker		494653	0					
ANR	495147	Identifier	mm		494653	1					
ANR	495148	Identifier	pos		494653	1					
ANR	495149	CastExpression	( unsigned long int ) info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos		494653	1					
ANR	495150	CastTarget	unsigned long int		494653	0					
ANR	495151	MemberAccess	info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos		494653	1					
ANR	495152	ArrayIndexing	info -> tile [ tileno ] . tp [ tpno ]		494653	0					
ANR	495153	MemberAccess	info -> tile [ tileno ] . tp		494653	0					
ANR	495154	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495155	PtrMemberAccess	info -> tile		494653	0					
ANR	495156	Identifier	info		494653	0					
ANR	495157	Identifier	tile		494653	1					
ANR	495158	Identifier	tileno		494653	1					
ANR	495159	Identifier	tp		494653	1					
ANR	495160	Identifier	tpno		494653	1					
ANR	495161	Identifier	tp_end_pos		494653	1					
ANR	495162	CompoundStatement		84:64:3249:3249	494653	1					
ANR	495163	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1901:20:60407:60437	494653	0	True				
ANR	495164	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	495165	Identifier	addlen		494653	0					
ANR	495166	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	495167	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	495168	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495169	Identifier	jwmarker		494653	0					
ANR	495170	Identifier	mm		494653	1					
ANR	495171	Identifier	len		494653	1					
ANR	495172	PrimaryExpression	2		494653	1					
ANR	495173	ExpressionStatement	info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos += addlen	1903:12:60469:60517	494653	8	True				
ANR	495174	AssignmentExpression	info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos += addlen		494653	0		+=			
ANR	495175	MemberAccess	info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos		494653	0					
ANR	495176	ArrayIndexing	info -> tile [ tileno ] . tp [ tpno ]		494653	0					
ANR	495177	MemberAccess	info -> tile [ tileno ] . tp		494653	0					
ANR	495178	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495179	PtrMemberAccess	info -> tile		494653	0					
ANR	495180	Identifier	info		494653	0					
ANR	495181	Identifier	tile		494653	1					
ANR	495182	Identifier	tileno		494653	1					
ANR	495183	Identifier	tp		494653	1					
ANR	495184	Identifier	tpno		494653	1					
ANR	495185	Identifier	tp_end_pos		494653	1					
ANR	495186	Identifier	addlen		494653	1					
ANR	495187	ForStatement	for ( packno = 0 ; packno < numpacks ; packno ++ )		494653	10					
ANR	495188	ForInit	packno = 0 ;	1908:13:60604:60614	494653	0	True				
ANR	495189	AssignmentExpression	packno = 0		494653	0		=			
ANR	495190	Identifier	packno		494653	0					
ANR	495191	PrimaryExpression	0		494653	1					
ANR	495192	Condition	packno < numpacks	1908:25:60616:60632	494653	1	True				
ANR	495193	RelationalExpression	packno < numpacks		494653	0		<			
ANR	495194	Identifier	packno		494653	0					
ANR	495195	Identifier	numpacks		494653	1					
ANR	495196	PostIncDecOperationExpression	packno ++	1908:44:60635:60642	494653	2	True				
ANR	495197	Identifier	packno		494653	0					
ANR	495198	IncDec	++		494653	1					
ANR	495199	CompoundStatement		92:54:3509:3509	494653	3					
ANR	495200	ExpressionStatement	addlen = 0	1912:12:60787:60797	494653	0	True				
ANR	495201	AssignmentExpression	addlen = 0		494653	0		=			
ANR	495202	Identifier	addlen		494653	0					
ANR	495203	PrimaryExpression	0		494653	1					
ANR	495204	ForStatement	for ( mm = 0 ; mm < jwmarker_num ; mm ++ )		494653	1					
ANR	495205	ForInit	mm = 0 ;	1913:17:60816:60822	494653	0	True				
ANR	495206	AssignmentExpression	mm = 0		494653	0		=			
ANR	495207	Identifier	mm		494653	0					
ANR	495208	PrimaryExpression	0		494653	1					
ANR	495209	Condition	mm < jwmarker_num	1913:25:60824:60840	494653	1	True				
ANR	495210	RelationalExpression	mm < jwmarker_num		494653	0		<			
ANR	495211	Identifier	mm		494653	0					
ANR	495212	Identifier	jwmarker_num		494653	1					
ANR	495213	PostIncDecOperationExpression	mm ++	1913:44:60843:60846	494653	2	True				
ANR	495214	Identifier	mm		494653	0					
ANR	495215	IncDec	++		494653	1					
ANR	495216	IfStatement	if ( jwmarker [ mm ] . pos <= ( unsigned long int ) info -> tile [ tileno ] . packet [ packno ] . start_pos )		494653	3					
ANR	495217	Condition	jwmarker [ mm ] . pos <= ( unsigned long int ) info -> tile [ tileno ] . packet [ packno ] . start_pos	1914:20:60869:60975	494653	0	True				
ANR	495218	RelationalExpression	jwmarker [ mm ] . pos <= ( unsigned long int ) info -> tile [ tileno ] . packet [ packno ] . start_pos		494653	0		<=			
ANR	495219	MemberAccess	jwmarker [ mm ] . pos		494653	0					
ANR	495220	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495221	Identifier	jwmarker		494653	0					
ANR	495222	Identifier	mm		494653	1					
ANR	495223	Identifier	pos		494653	1					
ANR	495224	CastExpression	( unsigned long int ) info -> tile [ tileno ] . packet [ packno ] . start_pos		494653	1					
ANR	495225	CastTarget	unsigned long int		494653	0					
ANR	495226	MemberAccess	info -> tile [ tileno ] . packet [ packno ] . start_pos		494653	1					
ANR	495227	ArrayIndexing	info -> tile [ tileno ] . packet [ packno ]		494653	0					
ANR	495228	MemberAccess	info -> tile [ tileno ] . packet		494653	0					
ANR	495229	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495230	PtrMemberAccess	info -> tile		494653	0					
ANR	495231	Identifier	info		494653	0					
ANR	495232	Identifier	tile		494653	1					
ANR	495233	Identifier	tileno		494653	1					
ANR	495234	Identifier	packet		494653	1					
ANR	495235	Identifier	packno		494653	1					
ANR	495236	Identifier	start_pos		494653	1					
ANR	495237	CompoundStatement		99:69:3842:3842	494653	1					
ANR	495238	ExpressionStatement	addlen += jwmarker [ mm ] . len + 2	1916:20:61000:61030	494653	0	True				
ANR	495239	AssignmentExpression	addlen += jwmarker [ mm ] . len + 2		494653	0		+=			
ANR	495240	Identifier	addlen		494653	0					
ANR	495241	AdditiveExpression	jwmarker [ mm ] . len + 2		494653	1		+			
ANR	495242	MemberAccess	jwmarker [ mm ] . len		494653	0					
ANR	495243	ArrayIndexing	jwmarker [ mm ]		494653	0					
ANR	495244	Identifier	jwmarker		494653	0					
ANR	495245	Identifier	mm		494653	1					
ANR	495246	Identifier	len		494653	1					
ANR	495247	PrimaryExpression	2		494653	1					
ANR	495248	ExpressionStatement	info -> tile [ tileno ] . packet [ packno ] . start_pos += addlen	1918:12:61062:61115	494653	2	True				
ANR	495249	AssignmentExpression	info -> tile [ tileno ] . packet [ packno ] . start_pos += addlen		494653	0		+=			
ANR	495250	MemberAccess	info -> tile [ tileno ] . packet [ packno ] . start_pos		494653	0					
ANR	495251	ArrayIndexing	info -> tile [ tileno ] . packet [ packno ]		494653	0					
ANR	495252	MemberAccess	info -> tile [ tileno ] . packet		494653	0					
ANR	495253	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495254	PtrMemberAccess	info -> tile		494653	0					
ANR	495255	Identifier	info		494653	0					
ANR	495256	Identifier	tile		494653	1					
ANR	495257	Identifier	tileno		494653	1					
ANR	495258	Identifier	packet		494653	1					
ANR	495259	Identifier	packno		494653	1					
ANR	495260	Identifier	start_pos		494653	1					
ANR	495261	Identifier	addlen		494653	1					
ANR	495262	ExpressionStatement	info -> tile [ tileno ] . packet [ packno ] . end_ph_pos += addlen	1926:12:61493:61547	494653	3	True				
ANR	495263	AssignmentExpression	info -> tile [ tileno ] . packet [ packno ] . end_ph_pos += addlen		494653	0		+=			
ANR	495264	MemberAccess	info -> tile [ tileno ] . packet [ packno ] . end_ph_pos		494653	0					
ANR	495265	ArrayIndexing	info -> tile [ tileno ] . packet [ packno ]		494653	0					
ANR	495266	MemberAccess	info -> tile [ tileno ] . packet		494653	0					
ANR	495267	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495268	PtrMemberAccess	info -> tile		494653	0					
ANR	495269	Identifier	info		494653	0					
ANR	495270	Identifier	tile		494653	1					
ANR	495271	Identifier	tileno		494653	1					
ANR	495272	Identifier	packet		494653	1					
ANR	495273	Identifier	packno		494653	1					
ANR	495274	Identifier	end_ph_pos		494653	1					
ANR	495275	Identifier	addlen		494653	1					
ANR	495276	ExpressionStatement	info -> tile [ tileno ] . packet [ packno ] . end_pos += addlen	1934:12:61926:61977	494653	4	True				
ANR	495277	AssignmentExpression	info -> tile [ tileno ] . packet [ packno ] . end_pos += addlen		494653	0		+=			
ANR	495278	MemberAccess	info -> tile [ tileno ] . packet [ packno ] . end_pos		494653	0					
ANR	495279	ArrayIndexing	info -> tile [ tileno ] . packet [ packno ]		494653	0					
ANR	495280	MemberAccess	info -> tile [ tileno ] . packet		494653	0					
ANR	495281	ArrayIndexing	info -> tile [ tileno ]		494653	0					
ANR	495282	PtrMemberAccess	info -> tile		494653	0					
ANR	495283	Identifier	info		494653	0					
ANR	495284	Identifier	tile		494653	1					
ANR	495285	Identifier	tileno		494653	1					
ANR	495286	Identifier	packet		494653	1					
ANR	495287	Identifier	packno		494653	1					
ANR	495288	Identifier	end_pos		494653	1					
ANR	495289	Identifier	addlen		494653	1					
ANR	495290	ReturnStatement	return OPJ_TRUE ;	1941:4:62037:62052	494653	12	True				
ANR	495291	Identifier	OPJ_TRUE		494653	0					
ANR	495292	ReturnType	opj_bool		494653	1					
ANR	495293	Identifier	jpwl_update_info		494653	2					
ANR	495294	ParameterList	"opj_j2k_t * j2k , jpwl_marker_t * jwmarker , int jwmarker_num"		494653	3					
ANR	495295	Parameter	opj_j2k_t * j2k	1815:26:57050:57063	494653	0	True				
ANR	495296	ParameterType	opj_j2k_t *		494653	0					
ANR	495297	Identifier	j2k		494653	1					
ANR	495298	Parameter	jpwl_marker_t * jwmarker	1815:42:57066:57088	494653	1	True				
ANR	495299	ParameterType	jpwl_marker_t *		494653	0					
ANR	495300	Identifier	jwmarker		494653	1					
ANR	495301	Parameter	int jwmarker_num	1816:26:57117:57132	494653	2	True				
ANR	495302	ParameterType	int		494653	0					
ANR	495303	Identifier	jwmarker_num		494653	1					
ANR	495304	CFGEntryNode	ENTRY		494653		True				
ANR	495305	CFGExitNode	EXIT		494653		True				
ANR	495306	Symbol	* tileno		494653						
ANR	495307	Symbol	info -> tile [ tileno ] . tp [ tpno ] . tp_end_header		494653						
ANR	495308	Symbol	tileno		494653						
ANR	495309	Symbol	info -> tile [ tileno ] . end_header		494653						
ANR	495310	Symbol	jwmarker		494653						
ANR	495311	Symbol	tpno		494653						
ANR	495312	Symbol	* packno		494653						
ANR	495313	Symbol	info -> codestream_size		494653						
ANR	495314	Symbol	* jwmarker		494653						
ANR	495315	Symbol	info -> th		494653						
ANR	495316	Symbol	info -> packno		494653						
ANR	495317	Symbol	info -> tile [ tileno ] . tp [ tpno ] . tp_end_pos		494653						
ANR	495318	Symbol	OPJ_TRUE		494653						
ANR	495319	Symbol	info -> tile [ tileno ] . packet		494653						
ANR	495320	Symbol	info		494653						
ANR	495321	Symbol	info -> tile [ tileno ] . num_tps		494653						
ANR	495322	Symbol	mm		494653						
ANR	495323	Symbol	* info -> tile [ tileno ] . tp		494653						
ANR	495324	Symbol	* * * info		494653						
ANR	495325	Symbol	* * info -> tile		494653						
ANR	495326	Symbol	info -> tw		494653						
ANR	495327	Symbol	jwmarker [ mm ] . pos		494653						
ANR	495328	Symbol	numtiles		494653						
ANR	495329	Symbol	* j2k		494653						
ANR	495330	Symbol	* info -> tile		494653						
ANR	495331	Symbol	info -> tile [ tileno ] . tp [ tpno ] . tp_start_pos		494653						
ANR	495332	Symbol	packno		494653						
ANR	495333	Symbol	info -> tile		494653						
ANR	495334	Symbol	info -> main_head_end		494653						
ANR	495335	Symbol	info -> tile [ tileno ] . end_pos		494653						
ANR	495336	Symbol	* * info		494653						
ANR	495337	Symbol	* mm		494653						
ANR	495338	Symbol	info -> tile [ tileno ] . tp		494653						
ANR	495339	Symbol	j2k -> cstr_info		494653						
ANR	495340	Symbol	info -> tile [ tileno ] . packet [ packno ] . start_pos		494653						
ANR	495341	Symbol	info -> tile [ tileno ] . packet [ packno ] . end_ph_pos		494653						
ANR	495342	Symbol	jwmarker_num		494653						
ANR	495343	Symbol	info -> tile [ tileno ] . packet [ packno ] . end_pos		494653						
ANR	495344	Symbol	OPJ_FALSE		494653						
ANR	495345	Symbol	* tpno		494653						
ANR	495346	Symbol	EVT_ERROR		494653						
ANR	495347	Symbol	j2k		494653						
ANR	495348	Symbol	addlen		494653						
ANR	495349	Symbol	* * tileno		494653						
ANR	495350	Symbol	numpacks		494653						
ANR	495351	Symbol	jwmarker [ mm ] . len		494653						
ANR	495352	Symbol	j2k -> cinfo		494653						
ANR	495353	Symbol	* info -> tile [ tileno ] . packet		494653						
ANR	495354	Symbol	info -> tile [ tileno ] . start_pos		494653						
ANR	495355	Symbol	* info		494653						
