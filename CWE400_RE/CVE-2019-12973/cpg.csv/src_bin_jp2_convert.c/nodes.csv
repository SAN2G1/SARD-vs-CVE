command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	7529	File	data/converged/CVE-2019-12973_openjpeg/src_bin_jp2_convert.c								
ANR	7530	Function	int_floorlog2	54:0:2264:2376							
ANR	7531	FunctionDef	int_floorlog2 (int a)		7530	0					
ANR	7532	CompoundStatement		55:0:2296:2376	7530	0					
ANR	7533	IdentifierDeclStatement	int l ;	56:4:2302:2307	7530	0	True				
ANR	7534	IdentifierDecl	l		7530	0					
ANR	7535	IdentifierDeclType	int		7530	0					
ANR	7536	Identifier	l		7530	1					
ANR	7537	ForStatement	for ( l = 0 ; a > 1 ; l ++ )		7530	1					
ANR	7538	ForInit	l = 0 ;	57:9:2318:2323	7530	0	True				
ANR	7539	AssignmentExpression	l = 0		7530	0		=			
ANR	7540	Identifier	l		7530	0					
ANR	7541	PrimaryExpression	0		7530	1					
ANR	7542	Condition	a > 1	57:16:2325:2329	7530	1	True				
ANR	7543	RelationalExpression	a > 1		7530	0		>			
ANR	7544	Identifier	a		7530	0					
ANR	7545	PrimaryExpression	1		7530	1					
ANR	7546	PostIncDecOperationExpression	l ++	57:23:2332:2334	7530	2	True				
ANR	7547	Identifier	l		7530	0					
ANR	7548	IncDec	++		7530	1					
ANR	7549	CompoundStatement		3:28:40:40	7530	3					
ANR	7550	ExpressionStatement	a >>= 1	58:8:2347:2354	7530	0	True				
ANR	7551	AssignmentExpression	a >>= 1		7530	0		>>=			
ANR	7552	Identifier	a		7530	0					
ANR	7553	PrimaryExpression	1		7530	1					
ANR	7554	ReturnStatement	return l ;	60:4:2366:2374	7530	2	True				
ANR	7555	Identifier	l		7530	0					
ANR	7556	ReturnType	static int		7530	1					
ANR	7557	Identifier	int_floorlog2		7530	2					
ANR	7558	ParameterList	int a		7530	3					
ANR	7559	Parameter	int a	54:25:2289:2293	7530	0	True				
ANR	7560	ParameterType	int		7530	0					
ANR	7561	Identifier	a		7530	1					
ANR	7562	CFGEntryNode	ENTRY		7530		True				
ANR	7563	CFGExitNode	EXIT		7530		True				
ANR	7564	Symbol	a		7530						
ANR	7565	Symbol	l		7530						
ANR	7566	Function	clip_component	64:0:2413:3311							
ANR	7567	FunctionDef	"clip_component (opj_image_comp_t * component , OPJ_UINT32 precision)"		7566	0					
ANR	7568	CompoundStatement		65:0:2484:3311	7566	0					
ANR	7569	IdentifierDeclStatement	OPJ_SIZE_T i ;	66:4:2490:2502	7566	0	True				
ANR	7570	IdentifierDecl	i		7566	0					
ANR	7571	IdentifierDeclType	OPJ_SIZE_T		7566	0					
ANR	7572	Identifier	i		7566	1					
ANR	7573	IdentifierDeclStatement	OPJ_SIZE_T len ;	67:4:2508:2522	7566	1	True				
ANR	7574	IdentifierDecl	len		7566	0					
ANR	7575	IdentifierDeclType	OPJ_SIZE_T		7566	0					
ANR	7576	Identifier	len		7566	1					
ANR	7577	IdentifierDeclStatement	OPJ_UINT32 umax = ( OPJ_UINT32 ) ( ( OPJ_INT32 ) - 1 ) ;	68:4:2528:2575	7566	2	True				
ANR	7578	IdentifierDecl	umax = ( OPJ_UINT32 ) ( ( OPJ_INT32 ) - 1 )		7566	0					
ANR	7579	IdentifierDeclType	OPJ_UINT32		7566	0					
ANR	7580	Identifier	umax		7566	1					
ANR	7581	AssignmentExpression	umax = ( OPJ_UINT32 ) ( ( OPJ_INT32 ) - 1 )		7566	2		=			
ANR	7582	Identifier	umax		7566	0					
ANR	7583	CastExpression	( OPJ_UINT32 ) ( ( OPJ_INT32 ) - 1 )		7566	1					
ANR	7584	CastTarget	OPJ_UINT32		7566	0					
ANR	7585	CastExpression	( OPJ_INT32 ) - 1		7566	1					
ANR	7586	CastTarget	OPJ_INT32		7566	0					
ANR	7587	UnaryOperationExpression	- 1		7566	1					
ANR	7588	UnaryOperator	-		7566	0					
ANR	7589	PrimaryExpression	1		7566	1					
ANR	7590	ExpressionStatement	len = ( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h	70:4:2582:2639	7566	3	True				
ANR	7591	AssignmentExpression	len = ( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h		7566	0		=			
ANR	7592	Identifier	len		7566	0					
ANR	7593	MultiplicativeExpression	( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h		7566	1		*			
ANR	7594	CastExpression	( OPJ_SIZE_T ) component -> w		7566	0					
ANR	7595	CastTarget	OPJ_SIZE_T		7566	0					
ANR	7596	PtrMemberAccess	component -> w		7566	1					
ANR	7597	Identifier	component		7566	0					
ANR	7598	Identifier	w		7566	1					
ANR	7599	CastExpression	( OPJ_SIZE_T ) component -> h		7566	1					
ANR	7600	CastTarget	OPJ_SIZE_T		7566	0					
ANR	7601	PtrMemberAccess	component -> h		7566	1					
ANR	7602	Identifier	component		7566	0					
ANR	7603	Identifier	h		7566	1					
ANR	7604	IfStatement	if ( precision < 32 )		7566	4					
ANR	7605	Condition	precision < 32	71:8:2649:2662	7566	0	True				
ANR	7606	RelationalExpression	precision < 32		7566	0		<			
ANR	7607	Identifier	precision		7566	0					
ANR	7608	PrimaryExpression	32		7566	1					
ANR	7609	CompoundStatement		7:24:180:180	7566	1					
ANR	7610	ExpressionStatement	umax = ( 1U << precision ) - 1U	72:8:2675:2704	7566	0	True				
ANR	7611	AssignmentExpression	umax = ( 1U << precision ) - 1U		7566	0		=			
ANR	7612	Identifier	umax		7566	0					
ANR	7613	AdditiveExpression	( 1U << precision ) - 1U		7566	1		-			
ANR	7614	ShiftExpression	1U << precision		7566	0		<<			
ANR	7615	PrimaryExpression	1U		7566	0					
ANR	7616	Identifier	precision		7566	1					
ANR	7617	PrimaryExpression	1U		7566	1					
ANR	7618	IfStatement	if ( component -> sgnd )		7566	5					
ANR	7619	Condition	component -> sgnd	75:8:2721:2735	7566	0	True				
ANR	7620	PtrMemberAccess	component -> sgnd		7566	0					
ANR	7621	Identifier	component		7566	0					
ANR	7622	Identifier	sgnd		7566	1					
ANR	7623	CompoundStatement		14:8:356:380	7566	1					
ANR	7624	IdentifierDeclStatement	OPJ_INT32 * l_data = component -> data ;	76:8:2748:2783	7566	0	True				
ANR	7625	IdentifierDecl	* l_data = component -> data		7566	0					
ANR	7626	IdentifierDeclType	OPJ_INT32 *		7566	0					
ANR	7627	Identifier	l_data		7566	1					
ANR	7628	AssignmentExpression	* l_data = component -> data		7566	2		=			
ANR	7629	Identifier	l_data		7566	0					
ANR	7630	PtrMemberAccess	component -> data		7566	1					
ANR	7631	Identifier	component		7566	0					
ANR	7632	Identifier	data		7566	1					
ANR	7633	IdentifierDeclStatement	OPJ_INT32 max = ( OPJ_INT32 ) ( umax / 2U ) ;	77:8:2793:2831	7566	1	True				
ANR	7634	IdentifierDecl	max = ( OPJ_INT32 ) ( umax / 2U )		7566	0					
ANR	7635	IdentifierDeclType	OPJ_INT32		7566	0					
ANR	7636	Identifier	max		7566	1					
ANR	7637	AssignmentExpression	max = ( OPJ_INT32 ) ( umax / 2U )		7566	2		=			
ANR	7638	Identifier	max		7566	0					
ANR	7639	CastExpression	( OPJ_INT32 ) ( umax / 2U )		7566	1					
ANR	7640	CastTarget	OPJ_INT32		7566	0					
ANR	7641	MultiplicativeExpression	umax / 2U		7566	1		/			
ANR	7642	Identifier	umax		7566	0					
ANR	7643	PrimaryExpression	2U		7566	1					
ANR	7644	IdentifierDeclStatement	OPJ_INT32 min = - max - 1 ;	78:8:2841:2865	7566	2	True				
ANR	7645	IdentifierDecl	min = - max - 1		7566	0					
ANR	7646	IdentifierDeclType	OPJ_INT32		7566	0					
ANR	7647	Identifier	min		7566	1					
ANR	7648	AssignmentExpression	min = - max - 1		7566	2		=			
ANR	7649	Identifier	min		7566	0					
ANR	7650	AdditiveExpression	- max - 1		7566	1		-			
ANR	7651	UnaryOperationExpression	- max		7566	0					
ANR	7652	UnaryOperator	-		7566	0					
ANR	7653	Identifier	max		7566	1					
ANR	7654	PrimaryExpression	1		7566	1					
ANR	7655	ForStatement	for ( i = 0 ; i < len ; ++ i )		7566	3					
ANR	7656	ForInit	i = 0 ;	79:13:2880:2885	7566	0	True				
ANR	7657	AssignmentExpression	i = 0		7566	0		=			
ANR	7658	Identifier	i		7566	0					
ANR	7659	PrimaryExpression	0		7566	1					
ANR	7660	Condition	i < len	79:20:2887:2893	7566	1	True				
ANR	7661	RelationalExpression	i < len		7566	0		<			
ANR	7662	Identifier	i		7566	0					
ANR	7663	Identifier	len		7566	1					
ANR	7664	UnaryExpression	++ i	79:29:2896:2898	7566	2	True				
ANR	7665	IncDec	++		7566	0					
ANR	7666	Identifier	i		7566	1					
ANR	7667	CompoundStatement		15:34:416:416	7566	3					
ANR	7668	IfStatement	if ( l_data [ i ] > max )		7566	0					
ANR	7669	Condition	l_data [ i ] > max	80:16:2919:2933	7566	0	True				
ANR	7670	RelationalExpression	l_data [ i ] > max		7566	0		>			
ANR	7671	ArrayIndexing	l_data [ i ]		7566	0					
ANR	7672	Identifier	l_data		7566	0					
ANR	7673	Identifier	i		7566	1					
ANR	7674	Identifier	max		7566	1					
ANR	7675	CompoundStatement		16:33:451:451	7566	1					
ANR	7676	ExpressionStatement	l_data [ i ] = max	81:16:2954:2969	7566	0	True				
ANR	7677	AssignmentExpression	l_data [ i ] = max		7566	0		=			
ANR	7678	ArrayIndexing	l_data [ i ]		7566	0					
ANR	7679	Identifier	l_data		7566	0					
ANR	7680	Identifier	i		7566	1					
ANR	7681	Identifier	max		7566	1					
ANR	7682	ElseStatement	else		7566	0					
ANR	7683	IfStatement	if ( l_data [ i ] < min )		7566	0					
ANR	7684	Condition	l_data [ i ] < min	82:23:2994:3008	7566	0	True				
ANR	7685	RelationalExpression	l_data [ i ] < min		7566	0		<			
ANR	7686	ArrayIndexing	l_data [ i ]		7566	0					
ANR	7687	Identifier	l_data		7566	0					
ANR	7688	Identifier	i		7566	1					
ANR	7689	Identifier	min		7566	1					
ANR	7690	CompoundStatement		18:40:526:526	7566	1					
ANR	7691	ExpressionStatement	l_data [ i ] = min	83:16:3029:3044	7566	0	True				
ANR	7692	AssignmentExpression	l_data [ i ] = min		7566	0		=			
ANR	7693	ArrayIndexing	l_data [ i ]		7566	0					
ANR	7694	Identifier	l_data		7566	0					
ANR	7695	Identifier	i		7566	1					
ANR	7696	Identifier	min		7566	1					
ANR	7697	ElseStatement	else		7566	0					
ANR	7698	CompoundStatement		23:8:606:655	7566	0					
ANR	7699	IdentifierDeclStatement	OPJ_UINT32 * l_data = ( OPJ_UINT32 * ) component -> data ;	87:8:3091:3140	7566	0	True				
ANR	7700	IdentifierDecl	* l_data = ( OPJ_UINT32 * ) component -> data		7566	0					
ANR	7701	IdentifierDeclType	OPJ_UINT32 *		7566	0					
ANR	7702	Identifier	l_data		7566	1					
ANR	7703	AssignmentExpression	* l_data = ( OPJ_UINT32 * ) component -> data		7566	2		=			
ANR	7704	Identifier	l_data		7566	0					
ANR	7705	CastExpression	( OPJ_UINT32 * ) component -> data		7566	1					
ANR	7706	CastTarget	OPJ_UINT32 *		7566	0					
ANR	7707	PtrMemberAccess	component -> data		7566	1					
ANR	7708	Identifier	component		7566	0					
ANR	7709	Identifier	data		7566	1					
ANR	7710	ForStatement	for ( i = 0 ; i < len ; ++ i )		7566	1					
ANR	7711	ForInit	i = 0 ;	88:13:3155:3160	7566	0	True				
ANR	7712	AssignmentExpression	i = 0		7566	0		=			
ANR	7713	Identifier	i		7566	0					
ANR	7714	PrimaryExpression	0		7566	1					
ANR	7715	Condition	i < len	88:20:3162:3168	7566	1	True				
ANR	7716	RelationalExpression	i < len		7566	0		<			
ANR	7717	Identifier	i		7566	0					
ANR	7718	Identifier	len		7566	1					
ANR	7719	UnaryExpression	++ i	88:29:3171:3173	7566	2	True				
ANR	7720	IncDec	++		7566	0					
ANR	7721	Identifier	i		7566	1					
ANR	7722	CompoundStatement		24:34:691:691	7566	3					
ANR	7723	IfStatement	if ( l_data [ i ] > umax )		7566	0					
ANR	7724	Condition	l_data [ i ] > umax	89:16:3194:3209	7566	0	True				
ANR	7725	RelationalExpression	l_data [ i ] > umax		7566	0		>			
ANR	7726	ArrayIndexing	l_data [ i ]		7566	0					
ANR	7727	Identifier	l_data		7566	0					
ANR	7728	Identifier	i		7566	1					
ANR	7729	Identifier	umax		7566	1					
ANR	7730	CompoundStatement		25:34:727:727	7566	1					
ANR	7731	ExpressionStatement	l_data [ i ] = umax	90:16:3230:3246	7566	0	True				
ANR	7732	AssignmentExpression	l_data [ i ] = umax		7566	0		=			
ANR	7733	ArrayIndexing	l_data [ i ]		7566	0					
ANR	7734	Identifier	l_data		7566	0					
ANR	7735	Identifier	i		7566	1					
ANR	7736	Identifier	umax		7566	1					
ANR	7737	ExpressionStatement	component -> prec = precision	94:4:3282:3309	7566	6	True				
ANR	7738	AssignmentExpression	component -> prec = precision		7566	0		=			
ANR	7739	PtrMemberAccess	component -> prec		7566	0					
ANR	7740	Identifier	component		7566	0					
ANR	7741	Identifier	prec		7566	1					
ANR	7742	Identifier	precision		7566	1					
ANR	7743	ReturnType	void		7566	1					
ANR	7744	Identifier	clip_component		7566	2					
ANR	7745	ParameterList	"opj_image_comp_t * component , OPJ_UINT32 precision"		7566	3					
ANR	7746	Parameter	opj_image_comp_t * component	64:20:2433:2459	7566	0	True				
ANR	7747	ParameterType	opj_image_comp_t *		7566	0					
ANR	7748	Identifier	component		7566	1					
ANR	7749	Parameter	OPJ_UINT32 precision	64:49:2462:2481	7566	1	True				
ANR	7750	ParameterType	OPJ_UINT32		7566	0					
ANR	7751	Identifier	precision		7566	1					
ANR	7752	CFGEntryNode	ENTRY		7566		True				
ANR	7753	CFGExitNode	EXIT		7566		True				
ANR	7754	Symbol	* component		7566						
ANR	7755	Symbol	max		7566						
ANR	7756	Symbol	precision		7566						
ANR	7757	Symbol	component -> data		7566						
ANR	7758	Symbol	component -> h		7566						
ANR	7759	Symbol	l_data		7566						
ANR	7760	Symbol	i		7566						
ANR	7761	Symbol	component -> sgnd		7566						
ANR	7762	Symbol	component		7566						
ANR	7763	Symbol	min		7566						
ANR	7764	Symbol	* i		7566						
ANR	7765	Symbol	len		7566						
ANR	7766	Symbol	umax		7566						
ANR	7767	Symbol	component -> prec		7566						
ANR	7768	Symbol	* l_data		7566						
ANR	7769	Symbol	component -> w		7566						
ANR	7770	Function	scale_component_up	98:0:3348:4291							
ANR	7771	FunctionDef	"scale_component_up (opj_image_comp_t * component , OPJ_UINT32 precision)"		7770	0					
ANR	7772	CompoundStatement		100:0:3461:4291	7770	0					
ANR	7773	IdentifierDeclStatement	"OPJ_SIZE_T i , len ;"	101:4:3467:3484	7770	0	True				
ANR	7774	IdentifierDecl	i		7770	0					
ANR	7775	IdentifierDeclType	OPJ_SIZE_T		7770	0					
ANR	7776	Identifier	i		7770	1					
ANR	7777	IdentifierDecl	len		7770	1					
ANR	7778	IdentifierDeclType	OPJ_SIZE_T		7770	0					
ANR	7779	Identifier	len		7770	1					
ANR	7780	ExpressionStatement	len = ( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h	103:4:3491:3548	7770	1	True				
ANR	7781	AssignmentExpression	len = ( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h		7770	0		=			
ANR	7782	Identifier	len		7770	0					
ANR	7783	MultiplicativeExpression	( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h		7770	1		*			
ANR	7784	CastExpression	( OPJ_SIZE_T ) component -> w		7770	0					
ANR	7785	CastTarget	OPJ_SIZE_T		7770	0					
ANR	7786	PtrMemberAccess	component -> w		7770	1					
ANR	7787	Identifier	component		7770	0					
ANR	7788	Identifier	w		7770	1					
ANR	7789	CastExpression	( OPJ_SIZE_T ) component -> h		7770	1					
ANR	7790	CastTarget	OPJ_SIZE_T		7770	0					
ANR	7791	PtrMemberAccess	component -> h		7770	1					
ANR	7792	Identifier	component		7770	0					
ANR	7793	Identifier	h		7770	1					
ANR	7794	IfStatement	if ( component -> sgnd )		7770	2					
ANR	7795	Condition	component -> sgnd	104:8:3558:3572	7770	0	True				
ANR	7796	PtrMemberAccess	component -> sgnd		7770	0					
ANR	7797	Identifier	component		7770	0					
ANR	7798	Identifier	sgnd		7770	1					
ANR	7799	CompoundStatement		8:8:257:292	7770	1					
ANR	7800	IdentifierDeclStatement	OPJ_INT64 newMax = ( OPJ_INT64 ) ( 1U << ( precision - 1 ) ) ;	105:8:3585:3639	7770	0	True				
ANR	7801	IdentifierDecl	newMax = ( OPJ_INT64 ) ( 1U << ( precision - 1 ) )		7770	0					
ANR	7802	IdentifierDeclType	OPJ_INT64		7770	0					
ANR	7803	Identifier	newMax		7770	1					
ANR	7804	AssignmentExpression	newMax = ( OPJ_INT64 ) ( 1U << ( precision - 1 ) )		7770	2		=			
ANR	7805	Identifier	newMax		7770	0					
ANR	7806	CastExpression	( OPJ_INT64 ) ( 1U << ( precision - 1 ) )		7770	1					
ANR	7807	CastTarget	OPJ_INT64		7770	0					
ANR	7808	ShiftExpression	1U << ( precision - 1 )		7770	1		<<			
ANR	7809	PrimaryExpression	1U		7770	0					
ANR	7810	AdditiveExpression	precision - 1		7770	1		-			
ANR	7811	Identifier	precision		7770	0					
ANR	7812	PrimaryExpression	1		7770	1					
ANR	7813	IdentifierDeclStatement	OPJ_INT64 oldMax = ( OPJ_INT64 ) ( 1U << ( component -> prec - 1 ) ) ;	106:8:3649:3709	7770	1	True				
ANR	7814	IdentifierDecl	oldMax = ( OPJ_INT64 ) ( 1U << ( component -> prec - 1 ) )		7770	0					
ANR	7815	IdentifierDeclType	OPJ_INT64		7770	0					
ANR	7816	Identifier	oldMax		7770	1					
ANR	7817	AssignmentExpression	oldMax = ( OPJ_INT64 ) ( 1U << ( component -> prec - 1 ) )		7770	2		=			
ANR	7818	Identifier	oldMax		7770	0					
ANR	7819	CastExpression	( OPJ_INT64 ) ( 1U << ( component -> prec - 1 ) )		7770	1					
ANR	7820	CastTarget	OPJ_INT64		7770	0					
ANR	7821	ShiftExpression	1U << ( component -> prec - 1 )		7770	1		<<			
ANR	7822	PrimaryExpression	1U		7770	0					
ANR	7823	AdditiveExpression	component -> prec - 1		7770	1		-			
ANR	7824	PtrMemberAccess	component -> prec		7770	0					
ANR	7825	Identifier	component		7770	0					
ANR	7826	Identifier	prec		7770	1					
ANR	7827	PrimaryExpression	1		7770	1					
ANR	7828	IdentifierDeclStatement	OPJ_INT32 * l_data = component -> data ;	107:8:3719:3754	7770	2	True				
ANR	7829	IdentifierDecl	* l_data = component -> data		7770	0					
ANR	7830	IdentifierDeclType	OPJ_INT32 *		7770	0					
ANR	7831	Identifier	l_data		7770	1					
ANR	7832	AssignmentExpression	* l_data = component -> data		7770	2		=			
ANR	7833	Identifier	l_data		7770	0					
ANR	7834	PtrMemberAccess	component -> data		7770	1					
ANR	7835	Identifier	component		7770	0					
ANR	7836	Identifier	data		7770	1					
ANR	7837	ForStatement	for ( i = 0 ; i < len ; ++ i )		7770	3					
ANR	7838	ForInit	i = 0 ;	108:13:3769:3774	7770	0	True				
ANR	7839	AssignmentExpression	i = 0		7770	0		=			
ANR	7840	Identifier	i		7770	0					
ANR	7841	PrimaryExpression	0		7770	1					
ANR	7842	Condition	i < len	108:20:3776:3782	7770	1	True				
ANR	7843	RelationalExpression	i < len		7770	0		<			
ANR	7844	Identifier	i		7770	0					
ANR	7845	Identifier	len		7770	1					
ANR	7846	UnaryExpression	++ i	108:29:3785:3787	7770	2	True				
ANR	7847	IncDec	++		7770	0					
ANR	7848	Identifier	i		7770	1					
ANR	7849	CompoundStatement		9:34:328:328	7770	3					
ANR	7850	ExpressionStatement	l_data [ i ] = ( OPJ_INT32 ) ( ( ( OPJ_INT64 ) l_data [ i ] * newMax ) / oldMax )	109:12:3804:3869	7770	0	True				
ANR	7851	AssignmentExpression	l_data [ i ] = ( OPJ_INT32 ) ( ( ( OPJ_INT64 ) l_data [ i ] * newMax ) / oldMax )		7770	0		=			
ANR	7852	ArrayIndexing	l_data [ i ]		7770	0					
ANR	7853	Identifier	l_data		7770	0					
ANR	7854	Identifier	i		7770	1					
ANR	7855	CastExpression	( OPJ_INT32 ) ( ( ( OPJ_INT64 ) l_data [ i ] * newMax ) / oldMax )		7770	1					
ANR	7856	CastTarget	OPJ_INT32		7770	0					
ANR	7857	MultiplicativeExpression	( ( OPJ_INT64 ) l_data [ i ] * newMax ) / oldMax		7770	1		/			
ANR	7858	MultiplicativeExpression	( OPJ_INT64 ) l_data [ i ] * newMax		7770	0		*			
ANR	7859	CastExpression	( OPJ_INT64 ) l_data [ i ]		7770	0					
ANR	7860	CastTarget	OPJ_INT64		7770	0					
ANR	7861	ArrayIndexing	l_data [ i ]		7770	1					
ANR	7862	Identifier	l_data		7770	0					
ANR	7863	Identifier	i		7770	1					
ANR	7864	Identifier	newMax		7770	1					
ANR	7865	Identifier	oldMax		7770	1					
ANR	7866	ElseStatement	else		7770	0					
ANR	7867	CompoundStatement		15:8:580:629	7770	0					
ANR	7868	IdentifierDeclStatement	OPJ_UINT64 newMax = ( OPJ_UINT64 ) ( ( 1U << precision ) - 1U ) ;	112:8:3902:3959	7770	0	True				
ANR	7869	IdentifierDecl	newMax = ( OPJ_UINT64 ) ( ( 1U << precision ) - 1U )		7770	0					
ANR	7870	IdentifierDeclType	OPJ_UINT64		7770	0					
ANR	7871	Identifier	newMax		7770	1					
ANR	7872	AssignmentExpression	newMax = ( OPJ_UINT64 ) ( ( 1U << precision ) - 1U )		7770	2		=			
ANR	7873	Identifier	newMax		7770	0					
ANR	7874	CastExpression	( OPJ_UINT64 ) ( ( 1U << precision ) - 1U )		7770	1					
ANR	7875	CastTarget	OPJ_UINT64		7770	0					
ANR	7876	AdditiveExpression	( 1U << precision ) - 1U		7770	1		-			
ANR	7877	ShiftExpression	1U << precision		7770	0		<<			
ANR	7878	PrimaryExpression	1U		7770	0					
ANR	7879	Identifier	precision		7770	1					
ANR	7880	PrimaryExpression	1U		7770	1					
ANR	7881	IdentifierDeclStatement	OPJ_UINT64 oldMax = ( OPJ_UINT64 ) ( ( 1U << component -> prec ) - 1U ) ;	113:8:3969:4032	7770	1	True				
ANR	7882	IdentifierDecl	oldMax = ( OPJ_UINT64 ) ( ( 1U << component -> prec ) - 1U )		7770	0					
ANR	7883	IdentifierDeclType	OPJ_UINT64		7770	0					
ANR	7884	Identifier	oldMax		7770	1					
ANR	7885	AssignmentExpression	oldMax = ( OPJ_UINT64 ) ( ( 1U << component -> prec ) - 1U )		7770	2		=			
ANR	7886	Identifier	oldMax		7770	0					
ANR	7887	CastExpression	( OPJ_UINT64 ) ( ( 1U << component -> prec ) - 1U )		7770	1					
ANR	7888	CastTarget	OPJ_UINT64		7770	0					
ANR	7889	AdditiveExpression	( 1U << component -> prec ) - 1U		7770	1		-			
ANR	7890	ShiftExpression	1U << component -> prec		7770	0		<<			
ANR	7891	PrimaryExpression	1U		7770	0					
ANR	7892	PtrMemberAccess	component -> prec		7770	1					
ANR	7893	Identifier	component		7770	0					
ANR	7894	Identifier	prec		7770	1					
ANR	7895	PrimaryExpression	1U		7770	1					
ANR	7896	IdentifierDeclStatement	OPJ_UINT32 * l_data = ( OPJ_UINT32 * ) component -> data ;	114:8:4042:4091	7770	2	True				
ANR	7897	IdentifierDecl	* l_data = ( OPJ_UINT32 * ) component -> data		7770	0					
ANR	7898	IdentifierDeclType	OPJ_UINT32 *		7770	0					
ANR	7899	Identifier	l_data		7770	1					
ANR	7900	AssignmentExpression	* l_data = ( OPJ_UINT32 * ) component -> data		7770	2		=			
ANR	7901	Identifier	l_data		7770	0					
ANR	7902	CastExpression	( OPJ_UINT32 * ) component -> data		7770	1					
ANR	7903	CastTarget	OPJ_UINT32 *		7770	0					
ANR	7904	PtrMemberAccess	component -> data		7770	1					
ANR	7905	Identifier	component		7770	0					
ANR	7906	Identifier	data		7770	1					
ANR	7907	ForStatement	for ( i = 0 ; i < len ; ++ i )		7770	3					
ANR	7908	ForInit	i = 0 ;	115:13:4106:4111	7770	0	True				
ANR	7909	AssignmentExpression	i = 0		7770	0		=			
ANR	7910	Identifier	i		7770	0					
ANR	7911	PrimaryExpression	0		7770	1					
ANR	7912	Condition	i < len	115:20:4113:4119	7770	1	True				
ANR	7913	RelationalExpression	i < len		7770	0		<			
ANR	7914	Identifier	i		7770	0					
ANR	7915	Identifier	len		7770	1					
ANR	7916	UnaryExpression	++ i	115:29:4122:4124	7770	2	True				
ANR	7917	IncDec	++		7770	0					
ANR	7918	Identifier	i		7770	1					
ANR	7919	CompoundStatement		16:34:665:665	7770	3					
ANR	7920	ExpressionStatement	l_data [ i ] = ( OPJ_UINT32 ) ( ( ( OPJ_UINT64 ) l_data [ i ] * newMax ) / oldMax )	116:12:4141:4208	7770	0	True				
ANR	7921	AssignmentExpression	l_data [ i ] = ( OPJ_UINT32 ) ( ( ( OPJ_UINT64 ) l_data [ i ] * newMax ) / oldMax )		7770	0		=			
ANR	7922	ArrayIndexing	l_data [ i ]		7770	0					
ANR	7923	Identifier	l_data		7770	0					
ANR	7924	Identifier	i		7770	1					
ANR	7925	CastExpression	( OPJ_UINT32 ) ( ( ( OPJ_UINT64 ) l_data [ i ] * newMax ) / oldMax )		7770	1					
ANR	7926	CastTarget	OPJ_UINT32		7770	0					
ANR	7927	MultiplicativeExpression	( ( OPJ_UINT64 ) l_data [ i ] * newMax ) / oldMax		7770	1		/			
ANR	7928	MultiplicativeExpression	( OPJ_UINT64 ) l_data [ i ] * newMax		7770	0		*			
ANR	7929	CastExpression	( OPJ_UINT64 ) l_data [ i ]		7770	0					
ANR	7930	CastTarget	OPJ_UINT64		7770	0					
ANR	7931	ArrayIndexing	l_data [ i ]		7770	1					
ANR	7932	Identifier	l_data		7770	0					
ANR	7933	Identifier	i		7770	1					
ANR	7934	Identifier	newMax		7770	1					
ANR	7935	Identifier	oldMax		7770	1					
ANR	7936	ExpressionStatement	component -> prec = precision	119:4:4230:4257	7770	3	True				
ANR	7937	AssignmentExpression	component -> prec = precision		7770	0		=			
ANR	7938	PtrMemberAccess	component -> prec		7770	0					
ANR	7939	Identifier	component		7770	0					
ANR	7940	Identifier	prec		7770	1					
ANR	7941	Identifier	precision		7770	1					
ANR	7942	ExpressionStatement	component -> bpp = precision	120:4:4263:4289	7770	4	True				
ANR	7943	AssignmentExpression	component -> bpp = precision		7770	0		=			
ANR	7944	PtrMemberAccess	component -> bpp		7770	0					
ANR	7945	Identifier	component		7770	0					
ANR	7946	Identifier	bpp		7770	1					
ANR	7947	Identifier	precision		7770	1					
ANR	7948	ReturnType	static void		7770	1					
ANR	7949	Identifier	scale_component_up		7770	2					
ANR	7950	ParameterList	"opj_image_comp_t * component , OPJ_UINT32 precision"		7770	3					
ANR	7951	Parameter	opj_image_comp_t * component	98:31:3379:3405	7770	0	True				
ANR	7952	ParameterType	opj_image_comp_t *		7770	0					
ANR	7953	Identifier	component		7770	1					
ANR	7954	Parameter	OPJ_UINT32 precision	99:31:3439:3458	7770	1	True				
ANR	7955	ParameterType	OPJ_UINT32		7770	0					
ANR	7956	Identifier	precision		7770	1					
ANR	7957	CFGEntryNode	ENTRY		7770		True				
ANR	7958	CFGExitNode	EXIT		7770		True				
ANR	7959	Symbol	* component		7770						
ANR	7960	Symbol	precision		7770						
ANR	7961	Symbol	component -> data		7770						
ANR	7962	Symbol	component -> h		7770						
ANR	7963	Symbol	l_data		7770						
ANR	7964	Symbol	i		7770						
ANR	7965	Symbol	component -> sgnd		7770						
ANR	7966	Symbol	component		7770						
ANR	7967	Symbol	* i		7770						
ANR	7968	Symbol	len		7770						
ANR	7969	Symbol	oldMax		7770						
ANR	7970	Symbol	component -> prec		7770						
ANR	7971	Symbol	component -> bpp		7770						
ANR	7972	Symbol	* l_data		7770						
ANR	7973	Symbol	component -> w		7770						
ANR	7974	Symbol	newMax		7770						
ANR	7975	Function	scale_component	122:0:4293:5063							
ANR	7976	FunctionDef	"scale_component (opj_image_comp_t * component , OPJ_UINT32 precision)"		7975	0					
ANR	7977	CompoundStatement		123:0:4365:5063	7975	0					
ANR	7978	IdentifierDeclStatement	int shift ;	124:4:4371:4380	7975	0	True				
ANR	7979	IdentifierDecl	shift		7975	0					
ANR	7980	IdentifierDeclType	int		7975	0					
ANR	7981	Identifier	shift		7975	1					
ANR	7982	IdentifierDeclStatement	"OPJ_SIZE_T i , len ;"	125:4:4386:4403	7975	1	True				
ANR	7983	IdentifierDecl	i		7975	0					
ANR	7984	IdentifierDeclType	OPJ_SIZE_T		7975	0					
ANR	7985	Identifier	i		7975	1					
ANR	7986	IdentifierDecl	len		7975	1					
ANR	7987	IdentifierDeclType	OPJ_SIZE_T		7975	0					
ANR	7988	Identifier	len		7975	1					
ANR	7989	IfStatement	if ( component -> prec == precision )		7975	2					
ANR	7990	Condition	component -> prec == precision	127:8:4414:4441	7975	0	True				
ANR	7991	EqualityExpression	component -> prec == precision		7975	0		==			
ANR	7992	PtrMemberAccess	component -> prec		7975	0					
ANR	7993	Identifier	component		7975	0					
ANR	7994	Identifier	prec		7975	1					
ANR	7995	Identifier	precision		7975	1					
ANR	7996	CompoundStatement		5:38:78:78	7975	1					
ANR	7997	ReturnStatement	return ;	128:8:4454:4460	7975	0	True				
ANR	7998	IfStatement	if ( component -> prec < precision )		7975	3					
ANR	7999	Condition	component -> prec < precision	130:8:4476:4502	7975	0	True				
ANR	8000	RelationalExpression	component -> prec < precision		7975	0		<			
ANR	8001	PtrMemberAccess	component -> prec		7975	0					
ANR	8002	Identifier	component		7975	0					
ANR	8003	Identifier	prec		7975	1					
ANR	8004	Identifier	precision		7975	1					
ANR	8005	CompoundStatement		8:37:139:139	7975	1					
ANR	8006	ExpressionStatement	"scale_component_up ( component , precision )"	131:8:4515:4555	7975	0	True				
ANR	8007	CallExpression	"scale_component_up ( component , precision )"		7975	0					
ANR	8008	Callee	scale_component_up		7975	0					
ANR	8009	Identifier	scale_component_up		7975	0					
ANR	8010	ArgumentList	component		7975	1					
ANR	8011	Argument	component		7975	0					
ANR	8012	Identifier	component		7975	0					
ANR	8013	Argument	precision		7975	1					
ANR	8014	Identifier	precision		7975	0					
ANR	8015	ReturnStatement	return ;	132:8:4565:4571	7975	1	True				
ANR	8016	ExpressionStatement	shift = ( int ) ( component -> prec - precision )	134:4:4583:4625	7975	4	True				
ANR	8017	AssignmentExpression	shift = ( int ) ( component -> prec - precision )		7975	0		=			
ANR	8018	Identifier	shift		7975	0					
ANR	8019	CastExpression	( int ) ( component -> prec - precision )		7975	1					
ANR	8020	CastTarget	int		7975	0					
ANR	8021	AdditiveExpression	component -> prec - precision		7975	1		-			
ANR	8022	PtrMemberAccess	component -> prec		7975	0					
ANR	8023	Identifier	component		7975	0					
ANR	8024	Identifier	prec		7975	1					
ANR	8025	Identifier	precision		7975	1					
ANR	8026	ExpressionStatement	len = ( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h	135:4:4631:4688	7975	5	True				
ANR	8027	AssignmentExpression	len = ( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h		7975	0		=			
ANR	8028	Identifier	len		7975	0					
ANR	8029	MultiplicativeExpression	( OPJ_SIZE_T ) component -> w * ( OPJ_SIZE_T ) component -> h		7975	1		*			
ANR	8030	CastExpression	( OPJ_SIZE_T ) component -> w		7975	0					
ANR	8031	CastTarget	OPJ_SIZE_T		7975	0					
ANR	8032	PtrMemberAccess	component -> w		7975	1					
ANR	8033	Identifier	component		7975	0					
ANR	8034	Identifier	w		7975	1					
ANR	8035	CastExpression	( OPJ_SIZE_T ) component -> h		7975	1					
ANR	8036	CastTarget	OPJ_SIZE_T		7975	0					
ANR	8037	PtrMemberAccess	component -> h		7975	1					
ANR	8038	Identifier	component		7975	0					
ANR	8039	Identifier	h		7975	1					
ANR	8040	IfStatement	if ( component -> sgnd )		7975	6					
ANR	8041	Condition	component -> sgnd	136:8:4698:4712	7975	0	True				
ANR	8042	PtrMemberAccess	component -> sgnd		7975	0					
ANR	8043	Identifier	component		7975	0					
ANR	8044	Identifier	sgnd		7975	1					
ANR	8045	CompoundStatement		15:8:359:394	7975	1					
ANR	8046	IdentifierDeclStatement	OPJ_INT32 * l_data = component -> data ;	137:8:4725:4760	7975	0	True				
ANR	8047	IdentifierDecl	* l_data = component -> data		7975	0					
ANR	8048	IdentifierDeclType	OPJ_INT32 *		7975	0					
ANR	8049	Identifier	l_data		7975	1					
ANR	8050	AssignmentExpression	* l_data = component -> data		7975	2		=			
ANR	8051	Identifier	l_data		7975	0					
ANR	8052	PtrMemberAccess	component -> data		7975	1					
ANR	8053	Identifier	component		7975	0					
ANR	8054	Identifier	data		7975	1					
ANR	8055	ForStatement	for ( i = 0 ; i < len ; ++ i )		7975	1					
ANR	8056	ForInit	i = 0 ;	138:13:4775:4780	7975	0	True				
ANR	8057	AssignmentExpression	i = 0		7975	0		=			
ANR	8058	Identifier	i		7975	0					
ANR	8059	PrimaryExpression	0		7975	1					
ANR	8060	Condition	i < len	138:20:4782:4788	7975	1	True				
ANR	8061	RelationalExpression	i < len		7975	0		<			
ANR	8062	Identifier	i		7975	0					
ANR	8063	Identifier	len		7975	1					
ANR	8064	UnaryExpression	++ i	138:29:4791:4793	7975	2	True				
ANR	8065	IncDec	++		7975	0					
ANR	8066	Identifier	i		7975	1					
ANR	8067	CompoundStatement		16:34:430:430	7975	3					
ANR	8068	ExpressionStatement	l_data [ i ] >>= shift	139:12:4810:4829	7975	0	True				
ANR	8069	AssignmentExpression	l_data [ i ] >>= shift		7975	0		>>=			
ANR	8070	ArrayIndexing	l_data [ i ]		7975	0					
ANR	8071	Identifier	l_data		7975	0					
ANR	8072	Identifier	i		7975	1					
ANR	8073	Identifier	shift		7975	1					
ANR	8074	ElseStatement	else		7975	0					
ANR	8075	CompoundStatement		20:8:496:545	7975	0					
ANR	8076	IdentifierDeclStatement	OPJ_UINT32 * l_data = ( OPJ_UINT32 * ) component -> data ;	142:8:4862:4911	7975	0	True				
ANR	8077	IdentifierDecl	* l_data = ( OPJ_UINT32 * ) component -> data		7975	0					
ANR	8078	IdentifierDeclType	OPJ_UINT32 *		7975	0					
ANR	8079	Identifier	l_data		7975	1					
ANR	8080	AssignmentExpression	* l_data = ( OPJ_UINT32 * ) component -> data		7975	2		=			
ANR	8081	Identifier	l_data		7975	0					
ANR	8082	CastExpression	( OPJ_UINT32 * ) component -> data		7975	1					
ANR	8083	CastTarget	OPJ_UINT32 *		7975	0					
ANR	8084	PtrMemberAccess	component -> data		7975	1					
ANR	8085	Identifier	component		7975	0					
ANR	8086	Identifier	data		7975	1					
ANR	8087	ForStatement	for ( i = 0 ; i < len ; ++ i )		7975	1					
ANR	8088	ForInit	i = 0 ;	143:13:4926:4931	7975	0	True				
ANR	8089	AssignmentExpression	i = 0		7975	0		=			
ANR	8090	Identifier	i		7975	0					
ANR	8091	PrimaryExpression	0		7975	1					
ANR	8092	Condition	i < len	143:20:4933:4939	7975	1	True				
ANR	8093	RelationalExpression	i < len		7975	0		<			
ANR	8094	Identifier	i		7975	0					
ANR	8095	Identifier	len		7975	1					
ANR	8096	UnaryExpression	++ i	143:29:4942:4944	7975	2	True				
ANR	8097	IncDec	++		7975	0					
ANR	8098	Identifier	i		7975	1					
ANR	8099	CompoundStatement		21:34:581:581	7975	3					
ANR	8100	ExpressionStatement	l_data [ i ] >>= shift	144:12:4961:4980	7975	0	True				
ANR	8101	AssignmentExpression	l_data [ i ] >>= shift		7975	0		>>=			
ANR	8102	ArrayIndexing	l_data [ i ]		7975	0					
ANR	8103	Identifier	l_data		7975	0					
ANR	8104	Identifier	i		7975	1					
ANR	8105	Identifier	shift		7975	1					
ANR	8106	ExpressionStatement	component -> bpp = precision	147:4:5002:5028	7975	7	True				
ANR	8107	AssignmentExpression	component -> bpp = precision		7975	0		=			
ANR	8108	PtrMemberAccess	component -> bpp		7975	0					
ANR	8109	Identifier	component		7975	0					
ANR	8110	Identifier	bpp		7975	1					
ANR	8111	Identifier	precision		7975	1					
ANR	8112	ExpressionStatement	component -> prec = precision	148:4:5034:5061	7975	8	True				
ANR	8113	AssignmentExpression	component -> prec = precision		7975	0		=			
ANR	8114	PtrMemberAccess	component -> prec		7975	0					
ANR	8115	Identifier	component		7975	0					
ANR	8116	Identifier	prec		7975	1					
ANR	8117	Identifier	precision		7975	1					
ANR	8118	ReturnType	void		7975	1					
ANR	8119	Identifier	scale_component		7975	2					
ANR	8120	ParameterList	"opj_image_comp_t * component , OPJ_UINT32 precision"		7975	3					
ANR	8121	Parameter	opj_image_comp_t * component	122:21:4314:4340	7975	0	True				
ANR	8122	ParameterType	opj_image_comp_t *		7975	0					
ANR	8123	Identifier	component		7975	1					
ANR	8124	Parameter	OPJ_UINT32 precision	122:50:4343:4362	7975	1	True				
ANR	8125	ParameterType	OPJ_UINT32		7975	0					
ANR	8126	Identifier	precision		7975	1					
ANR	8127	CFGEntryNode	ENTRY		7975		True				
ANR	8128	CFGExitNode	EXIT		7975		True				
ANR	8129	Symbol	* component		7975						
ANR	8130	Symbol	precision		7975						
ANR	8131	Symbol	shift		7975						
ANR	8132	Symbol	component -> data		7975						
ANR	8133	Symbol	component -> h		7975						
ANR	8134	Symbol	l_data		7975						
ANR	8135	Symbol	i		7975						
ANR	8136	Symbol	component -> sgnd		7975						
ANR	8137	Symbol	component		7975						
ANR	8138	Symbol	* i		7975						
ANR	8139	Symbol	len		7975						
ANR	8140	Symbol	component -> prec		7975						
ANR	8141	Symbol	component -> bpp		7975						
ANR	8142	Symbol	* l_data		7975						
ANR	8143	Symbol	component -> w		7975						
ANR	8144	DeclStmt									
ANR	8145	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8146	DeclStmt									
ANR	8147	Decl							OPJ_INT32	OPJ_INT32 *	pDst0
ANR	8148	DeclStmt									
ANR	8149	Decl							OPJ_INT32	OPJ_INT32 *	pDst1
ANR	8150	DeclStmt									
ANR	8151	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8152	DeclStmt									
ANR	8153	Decl							OPJ_INT32	OPJ_INT32 *	pDst0
ANR	8154	DeclStmt									
ANR	8155	Decl							OPJ_INT32	OPJ_INT32 *	pDst1
ANR	8156	DeclStmt									
ANR	8157	Decl							OPJ_INT32	OPJ_INT32 *	pDst2
ANR	8158	DeclStmt									
ANR	8159	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8160	DeclStmt									
ANR	8161	Decl							OPJ_INT32	OPJ_INT32 *	pDst0
ANR	8162	DeclStmt									
ANR	8163	Decl							OPJ_INT32	OPJ_INT32 *	pDst1
ANR	8164	DeclStmt									
ANR	8165	Decl							OPJ_INT32	OPJ_INT32 *	pDst2
ANR	8166	DeclStmt									
ANR	8167	Decl							OPJ_INT32	OPJ_INT32 *	pDst3
ANR	8168	DeclStmt									
ANR	8169	Decl							const convert_32s_CXPX	const convert_32s_CXPX [ 5 ]	convert_32s_CXPX_LUT
ANR	8170	DeclStmt									
ANR	8171	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8172	DeclStmt									
ANR	8173	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc0
ANR	8174	DeclStmt									
ANR	8175	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8176	DeclStmt									
ANR	8177	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc0
ANR	8178	DeclStmt									
ANR	8179	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc1
ANR	8180	DeclStmt									
ANR	8181	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8182	DeclStmt									
ANR	8183	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc0
ANR	8184	DeclStmt									
ANR	8185	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc1
ANR	8186	DeclStmt									
ANR	8187	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc2
ANR	8188	DeclStmt									
ANR	8189	Decl							OPJ_SIZE_T	OPJ_SIZE_T	i
ANR	8190	DeclStmt									
ANR	8191	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc0
ANR	8192	DeclStmt									
ANR	8193	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc1
ANR	8194	DeclStmt									
ANR	8195	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc2
ANR	8196	DeclStmt									
ANR	8197	Decl							const OPJ_INT32	const OPJ_INT32 *	pSrc3
ANR	8198	DeclStmt									
ANR	8199	Decl							const convert_32s_PXCX	const convert_32s_PXCX [ 5 ]	convert_32s_PXCX_LUT
ANR	8200	Function	convert_1u32s_C1R	271:0:8500:10042							
ANR	8201	FunctionDef	"convert_1u32s_C1R (const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length)"		8200	0					
ANR	8202	CompoundStatement		273:0:8618:10042	8200	0					
ANR	8203	IdentifierDeclStatement	OPJ_SIZE_T i ;	274:4:8624:8636	8200	0	True				
ANR	8204	IdentifierDecl	i		8200	0					
ANR	8205	IdentifierDeclType	OPJ_SIZE_T		8200	0					
ANR	8206	Identifier	i		8200	1					
ANR	8207	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 7U ) ; i += 8U )		8200	1					
ANR	8208	ForInit	i = 0 ;	275:9:8647:8652	8200	0	True				
ANR	8209	AssignmentExpression	i = 0		8200	0		=			
ANR	8210	Identifier	i		8200	0					
ANR	8211	PrimaryExpression	0		8200	1					
ANR	8212	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 7U )	275:16:8654:8683	8200	1	True				
ANR	8213	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 7U )		8200	0		<			
ANR	8214	Identifier	i		8200	0					
ANR	8215	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 7U		8200	1		&			
ANR	8216	Identifier	length		8200	0					
ANR	8217	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 7U		8200	1					
ANR	8218	UnaryOperator	~		8200	0					
ANR	8219	CastExpression	( OPJ_SIZE_T ) 7U		8200	1					
ANR	8220	CastTarget	OPJ_SIZE_T		8200	0					
ANR	8221	PrimaryExpression	7U		8200	1					
ANR	8222	AssignmentExpression	i += 8U	275:48:8686:8692	8200	2	True	+=			
ANR	8223	Identifier	i		8200	0					
ANR	8224	PrimaryExpression	8U		8200	1					
ANR	8225	CompoundStatement		4:8:86:110	8200	3					
ANR	8226	IdentifierDeclStatement	OPJ_UINT32 val = * pSrc ++ ;	276:8:8705:8729	8200	0	True				
ANR	8227	IdentifierDecl	val = * pSrc ++		8200	0					
ANR	8228	IdentifierDeclType	OPJ_UINT32		8200	0					
ANR	8229	Identifier	val		8200	1					
ANR	8230	AssignmentExpression	val = * pSrc ++		8200	2		=			
ANR	8231	Identifier	val		8200	0					
ANR	8232	UnaryOperationExpression	* pSrc ++		8200	1					
ANR	8233	UnaryOperator	*		8200	0					
ANR	8234	PostIncDecOperationExpression	pSrc ++		8200	1					
ANR	8235	Identifier	pSrc		8200	0					
ANR	8236	IncDec	++		8200	1					
ANR	8237	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 7 )	277:8:8739:8774	8200	1	True				
ANR	8238	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 7 )		8200	0		=			
ANR	8239	ArrayIndexing	pDst [ i + 0 ]		8200	0					
ANR	8240	Identifier	pDst		8200	0					
ANR	8241	AdditiveExpression	i + 0		8200	1		+			
ANR	8242	Identifier	i		8200	0					
ANR	8243	PrimaryExpression	0		8200	1					
ANR	8244	CastExpression	( OPJ_INT32 ) ( val >> 7 )		8200	1					
ANR	8245	CastTarget	OPJ_INT32		8200	0					
ANR	8246	ShiftExpression	val >> 7		8200	1		>>			
ANR	8247	Identifier	val		8200	0					
ANR	8248	PrimaryExpression	7		8200	1					
ANR	8249	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 6 ) & 0x1U )	278:8:8784:8828	8200	2	True				
ANR	8250	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 6 ) & 0x1U )		8200	0		=			
ANR	8251	ArrayIndexing	pDst [ i + 1 ]		8200	0					
ANR	8252	Identifier	pDst		8200	0					
ANR	8253	AdditiveExpression	i + 1		8200	1		+			
ANR	8254	Identifier	i		8200	0					
ANR	8255	PrimaryExpression	1		8200	1					
ANR	8256	CastExpression	( OPJ_INT32 ) ( ( val >> 6 ) & 0x1U )		8200	1					
ANR	8257	CastTarget	OPJ_INT32		8200	0					
ANR	8258	BitAndExpression	( val >> 6 ) & 0x1U		8200	1		&			
ANR	8259	ShiftExpression	val >> 6		8200	0		>>			
ANR	8260	Identifier	val		8200	0					
ANR	8261	PrimaryExpression	6		8200	1					
ANR	8262	PrimaryExpression	0x1U		8200	1					
ANR	8263	ExpressionStatement	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 5 ) & 0x1U )	279:8:8838:8882	8200	3	True				
ANR	8264	AssignmentExpression	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 5 ) & 0x1U )		8200	0		=			
ANR	8265	ArrayIndexing	pDst [ i + 2 ]		8200	0					
ANR	8266	Identifier	pDst		8200	0					
ANR	8267	AdditiveExpression	i + 2		8200	1		+			
ANR	8268	Identifier	i		8200	0					
ANR	8269	PrimaryExpression	2		8200	1					
ANR	8270	CastExpression	( OPJ_INT32 ) ( ( val >> 5 ) & 0x1U )		8200	1					
ANR	8271	CastTarget	OPJ_INT32		8200	0					
ANR	8272	BitAndExpression	( val >> 5 ) & 0x1U		8200	1		&			
ANR	8273	ShiftExpression	val >> 5		8200	0		>>			
ANR	8274	Identifier	val		8200	0					
ANR	8275	PrimaryExpression	5		8200	1					
ANR	8276	PrimaryExpression	0x1U		8200	1					
ANR	8277	ExpressionStatement	pDst [ i + 3 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x1U )	280:8:8892:8936	8200	4	True				
ANR	8278	AssignmentExpression	pDst [ i + 3 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x1U )		8200	0		=			
ANR	8279	ArrayIndexing	pDst [ i + 3 ]		8200	0					
ANR	8280	Identifier	pDst		8200	0					
ANR	8281	AdditiveExpression	i + 3		8200	1		+			
ANR	8282	Identifier	i		8200	0					
ANR	8283	PrimaryExpression	3		8200	1					
ANR	8284	CastExpression	( OPJ_INT32 ) ( ( val >> 4 ) & 0x1U )		8200	1					
ANR	8285	CastTarget	OPJ_INT32		8200	0					
ANR	8286	BitAndExpression	( val >> 4 ) & 0x1U		8200	1		&			
ANR	8287	ShiftExpression	val >> 4		8200	0		>>			
ANR	8288	Identifier	val		8200	0					
ANR	8289	PrimaryExpression	4		8200	1					
ANR	8290	PrimaryExpression	0x1U		8200	1					
ANR	8291	ExpressionStatement	pDst [ i + 4 ] = ( OPJ_INT32 ) ( ( val >> 3 ) & 0x1U )	281:8:8946:8990	8200	5	True				
ANR	8292	AssignmentExpression	pDst [ i + 4 ] = ( OPJ_INT32 ) ( ( val >> 3 ) & 0x1U )		8200	0		=			
ANR	8293	ArrayIndexing	pDst [ i + 4 ]		8200	0					
ANR	8294	Identifier	pDst		8200	0					
ANR	8295	AdditiveExpression	i + 4		8200	1		+			
ANR	8296	Identifier	i		8200	0					
ANR	8297	PrimaryExpression	4		8200	1					
ANR	8298	CastExpression	( OPJ_INT32 ) ( ( val >> 3 ) & 0x1U )		8200	1					
ANR	8299	CastTarget	OPJ_INT32		8200	0					
ANR	8300	BitAndExpression	( val >> 3 ) & 0x1U		8200	1		&			
ANR	8301	ShiftExpression	val >> 3		8200	0		>>			
ANR	8302	Identifier	val		8200	0					
ANR	8303	PrimaryExpression	3		8200	1					
ANR	8304	PrimaryExpression	0x1U		8200	1					
ANR	8305	ExpressionStatement	pDst [ i + 5 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x1U )	282:8:9000:9044	8200	6	True				
ANR	8306	AssignmentExpression	pDst [ i + 5 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x1U )		8200	0		=			
ANR	8307	ArrayIndexing	pDst [ i + 5 ]		8200	0					
ANR	8308	Identifier	pDst		8200	0					
ANR	8309	AdditiveExpression	i + 5		8200	1		+			
ANR	8310	Identifier	i		8200	0					
ANR	8311	PrimaryExpression	5		8200	1					
ANR	8312	CastExpression	( OPJ_INT32 ) ( ( val >> 2 ) & 0x1U )		8200	1					
ANR	8313	CastTarget	OPJ_INT32		8200	0					
ANR	8314	BitAndExpression	( val >> 2 ) & 0x1U		8200	1		&			
ANR	8315	ShiftExpression	val >> 2		8200	0		>>			
ANR	8316	Identifier	val		8200	0					
ANR	8317	PrimaryExpression	2		8200	1					
ANR	8318	PrimaryExpression	0x1U		8200	1					
ANR	8319	ExpressionStatement	pDst [ i + 6 ] = ( OPJ_INT32 ) ( ( val >> 1 ) & 0x1U )	283:8:9054:9098	8200	7	True				
ANR	8320	AssignmentExpression	pDst [ i + 6 ] = ( OPJ_INT32 ) ( ( val >> 1 ) & 0x1U )		8200	0		=			
ANR	8321	ArrayIndexing	pDst [ i + 6 ]		8200	0					
ANR	8322	Identifier	pDst		8200	0					
ANR	8323	AdditiveExpression	i + 6		8200	1		+			
ANR	8324	Identifier	i		8200	0					
ANR	8325	PrimaryExpression	6		8200	1					
ANR	8326	CastExpression	( OPJ_INT32 ) ( ( val >> 1 ) & 0x1U )		8200	1					
ANR	8327	CastTarget	OPJ_INT32		8200	0					
ANR	8328	BitAndExpression	( val >> 1 ) & 0x1U		8200	1		&			
ANR	8329	ShiftExpression	val >> 1		8200	0		>>			
ANR	8330	Identifier	val		8200	0					
ANR	8331	PrimaryExpression	1		8200	1					
ANR	8332	PrimaryExpression	0x1U		8200	1					
ANR	8333	ExpressionStatement	pDst [ i + 7 ] = ( OPJ_INT32 ) ( val & 0x1U )	284:8:9108:9145	8200	8	True				
ANR	8334	AssignmentExpression	pDst [ i + 7 ] = ( OPJ_INT32 ) ( val & 0x1U )		8200	0		=			
ANR	8335	ArrayIndexing	pDst [ i + 7 ]		8200	0					
ANR	8336	Identifier	pDst		8200	0					
ANR	8337	AdditiveExpression	i + 7		8200	1		+			
ANR	8338	Identifier	i		8200	0					
ANR	8339	PrimaryExpression	7		8200	1					
ANR	8340	CastExpression	( OPJ_INT32 ) ( val & 0x1U )		8200	1					
ANR	8341	CastTarget	OPJ_INT32		8200	0					
ANR	8342	BitAndExpression	val & 0x1U		8200	1		&			
ANR	8343	Identifier	val		8200	0					
ANR	8344	PrimaryExpression	0x1U		8200	1					
ANR	8345	IfStatement	if ( length & 7U )		8200	2					
ANR	8346	Condition	length & 7U	286:8:9161:9171	8200	0	True				
ANR	8347	BitAndExpression	length & 7U		8200	0		&			
ANR	8348	Identifier	length		8200	0					
ANR	8349	PrimaryExpression	7U		8200	1					
ANR	8350	CompoundStatement		15:8:565:589	8200	1					
ANR	8351	IdentifierDeclStatement	OPJ_UINT32 val = * pSrc ++ ;	287:8:9184:9208	8200	0	True				
ANR	8352	IdentifierDecl	val = * pSrc ++		8200	0					
ANR	8353	IdentifierDeclType	OPJ_UINT32		8200	0					
ANR	8354	Identifier	val		8200	1					
ANR	8355	AssignmentExpression	val = * pSrc ++		8200	2		=			
ANR	8356	Identifier	val		8200	0					
ANR	8357	UnaryOperationExpression	* pSrc ++		8200	1					
ANR	8358	UnaryOperator	*		8200	0					
ANR	8359	PostIncDecOperationExpression	pSrc ++		8200	1					
ANR	8360	Identifier	pSrc		8200	0					
ANR	8361	IncDec	++		8200	1					
ANR	8362	ExpressionStatement	length = length & 7U	288:8:9218:9238	8200	1	True				
ANR	8363	AssignmentExpression	length = length & 7U		8200	0		=			
ANR	8364	Identifier	length		8200	0					
ANR	8365	BitAndExpression	length & 7U		8200	1		&			
ANR	8366	Identifier	length		8200	0					
ANR	8367	PrimaryExpression	7U		8200	1					
ANR	8368	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 7 )	289:8:9248:9283	8200	2	True				
ANR	8369	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 7 )		8200	0		=			
ANR	8370	ArrayIndexing	pDst [ i + 0 ]		8200	0					
ANR	8371	Identifier	pDst		8200	0					
ANR	8372	AdditiveExpression	i + 0		8200	1		+			
ANR	8373	Identifier	i		8200	0					
ANR	8374	PrimaryExpression	0		8200	1					
ANR	8375	CastExpression	( OPJ_INT32 ) ( val >> 7 )		8200	1					
ANR	8376	CastTarget	OPJ_INT32		8200	0					
ANR	8377	ShiftExpression	val >> 7		8200	1		>>			
ANR	8378	Identifier	val		8200	0					
ANR	8379	PrimaryExpression	7		8200	1					
ANR	8380	IfStatement	if ( length > 1U )		8200	3					
ANR	8381	Condition	length > 1U	291:12:9298:9308	8200	0	True				
ANR	8382	RelationalExpression	length > 1U		8200	0		>			
ANR	8383	Identifier	length		8200	0					
ANR	8384	PrimaryExpression	1U		8200	1					
ANR	8385	CompoundStatement		19:25:692:692	8200	1					
ANR	8386	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 6 ) & 0x1U )	292:12:9325:9369	8200	0	True				
ANR	8387	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 6 ) & 0x1U )		8200	0		=			
ANR	8388	ArrayIndexing	pDst [ i + 1 ]		8200	0					
ANR	8389	Identifier	pDst		8200	0					
ANR	8390	AdditiveExpression	i + 1		8200	1		+			
ANR	8391	Identifier	i		8200	0					
ANR	8392	PrimaryExpression	1		8200	1					
ANR	8393	CastExpression	( OPJ_INT32 ) ( ( val >> 6 ) & 0x1U )		8200	1					
ANR	8394	CastTarget	OPJ_INT32		8200	0					
ANR	8395	BitAndExpression	( val >> 6 ) & 0x1U		8200	1		&			
ANR	8396	ShiftExpression	val >> 6		8200	0		>>			
ANR	8397	Identifier	val		8200	0					
ANR	8398	PrimaryExpression	6		8200	1					
ANR	8399	PrimaryExpression	0x1U		8200	1					
ANR	8400	IfStatement	if ( length > 2U )		8200	1					
ANR	8401	Condition	length > 2U	293:16:9387:9397	8200	0	True				
ANR	8402	RelationalExpression	length > 2U		8200	0		>			
ANR	8403	Identifier	length		8200	0					
ANR	8404	PrimaryExpression	2U		8200	1					
ANR	8405	CompoundStatement		21:29:781:781	8200	1					
ANR	8406	ExpressionStatement	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 5 ) & 0x1U )	294:16:9418:9462	8200	0	True				
ANR	8407	AssignmentExpression	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 5 ) & 0x1U )		8200	0		=			
ANR	8408	ArrayIndexing	pDst [ i + 2 ]		8200	0					
ANR	8409	Identifier	pDst		8200	0					
ANR	8410	AdditiveExpression	i + 2		8200	1		+			
ANR	8411	Identifier	i		8200	0					
ANR	8412	PrimaryExpression	2		8200	1					
ANR	8413	CastExpression	( OPJ_INT32 ) ( ( val >> 5 ) & 0x1U )		8200	1					
ANR	8414	CastTarget	OPJ_INT32		8200	0					
ANR	8415	BitAndExpression	( val >> 5 ) & 0x1U		8200	1		&			
ANR	8416	ShiftExpression	val >> 5		8200	0		>>			
ANR	8417	Identifier	val		8200	0					
ANR	8418	PrimaryExpression	5		8200	1					
ANR	8419	PrimaryExpression	0x1U		8200	1					
ANR	8420	IfStatement	if ( length > 3U )		8200	1					
ANR	8421	Condition	length > 3U	295:20:9484:9494	8200	0	True				
ANR	8422	RelationalExpression	length > 3U		8200	0		>			
ANR	8423	Identifier	length		8200	0					
ANR	8424	PrimaryExpression	3U		8200	1					
ANR	8425	CompoundStatement		23:33:878:878	8200	1					
ANR	8426	ExpressionStatement	pDst [ i + 3 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x1U )	296:20:9519:9563	8200	0	True				
ANR	8427	AssignmentExpression	pDst [ i + 3 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x1U )		8200	0		=			
ANR	8428	ArrayIndexing	pDst [ i + 3 ]		8200	0					
ANR	8429	Identifier	pDst		8200	0					
ANR	8430	AdditiveExpression	i + 3		8200	1		+			
ANR	8431	Identifier	i		8200	0					
ANR	8432	PrimaryExpression	3		8200	1					
ANR	8433	CastExpression	( OPJ_INT32 ) ( ( val >> 4 ) & 0x1U )		8200	1					
ANR	8434	CastTarget	OPJ_INT32		8200	0					
ANR	8435	BitAndExpression	( val >> 4 ) & 0x1U		8200	1		&			
ANR	8436	ShiftExpression	val >> 4		8200	0		>>			
ANR	8437	Identifier	val		8200	0					
ANR	8438	PrimaryExpression	4		8200	1					
ANR	8439	PrimaryExpression	0x1U		8200	1					
ANR	8440	IfStatement	if ( length > 4U )		8200	1					
ANR	8441	Condition	length > 4U	297:24:9589:9599	8200	0	True				
ANR	8442	RelationalExpression	length > 4U		8200	0		>			
ANR	8443	Identifier	length		8200	0					
ANR	8444	PrimaryExpression	4U		8200	1					
ANR	8445	CompoundStatement		25:37:983:983	8200	1					
ANR	8446	ExpressionStatement	pDst [ i + 4 ] = ( OPJ_INT32 ) ( ( val >> 3 ) & 0x1U )	298:24:9628:9672	8200	0	True				
ANR	8447	AssignmentExpression	pDst [ i + 4 ] = ( OPJ_INT32 ) ( ( val >> 3 ) & 0x1U )		8200	0		=			
ANR	8448	ArrayIndexing	pDst [ i + 4 ]		8200	0					
ANR	8449	Identifier	pDst		8200	0					
ANR	8450	AdditiveExpression	i + 4		8200	1		+			
ANR	8451	Identifier	i		8200	0					
ANR	8452	PrimaryExpression	4		8200	1					
ANR	8453	CastExpression	( OPJ_INT32 ) ( ( val >> 3 ) & 0x1U )		8200	1					
ANR	8454	CastTarget	OPJ_INT32		8200	0					
ANR	8455	BitAndExpression	( val >> 3 ) & 0x1U		8200	1		&			
ANR	8456	ShiftExpression	val >> 3		8200	0		>>			
ANR	8457	Identifier	val		8200	0					
ANR	8458	PrimaryExpression	3		8200	1					
ANR	8459	PrimaryExpression	0x1U		8200	1					
ANR	8460	IfStatement	if ( length > 5U )		8200	1					
ANR	8461	Condition	length > 5U	299:28:9702:9712	8200	0	True				
ANR	8462	RelationalExpression	length > 5U		8200	0		>			
ANR	8463	Identifier	length		8200	0					
ANR	8464	PrimaryExpression	5U		8200	1					
ANR	8465	CompoundStatement		27:41:1096:1096	8200	1					
ANR	8466	ExpressionStatement	pDst [ i + 5 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x1U )	300:28:9745:9789	8200	0	True				
ANR	8467	AssignmentExpression	pDst [ i + 5 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x1U )		8200	0		=			
ANR	8468	ArrayIndexing	pDst [ i + 5 ]		8200	0					
ANR	8469	Identifier	pDst		8200	0					
ANR	8470	AdditiveExpression	i + 5		8200	1		+			
ANR	8471	Identifier	i		8200	0					
ANR	8472	PrimaryExpression	5		8200	1					
ANR	8473	CastExpression	( OPJ_INT32 ) ( ( val >> 2 ) & 0x1U )		8200	1					
ANR	8474	CastTarget	OPJ_INT32		8200	0					
ANR	8475	BitAndExpression	( val >> 2 ) & 0x1U		8200	1		&			
ANR	8476	ShiftExpression	val >> 2		8200	0		>>			
ANR	8477	Identifier	val		8200	0					
ANR	8478	PrimaryExpression	2		8200	1					
ANR	8479	PrimaryExpression	0x1U		8200	1					
ANR	8480	IfStatement	if ( length > 6U )		8200	1					
ANR	8481	Condition	length > 6U	301:32:9823:9833	8200	0	True				
ANR	8482	RelationalExpression	length > 6U		8200	0		>			
ANR	8483	Identifier	length		8200	0					
ANR	8484	PrimaryExpression	6U		8200	1					
ANR	8485	CompoundStatement		29:45:1217:1217	8200	1					
ANR	8486	ExpressionStatement	pDst [ i + 6 ] = ( OPJ_INT32 ) ( ( val >> 1 ) & 0x1U )	302:32:9870:9914	8200	0	True				
ANR	8487	AssignmentExpression	pDst [ i + 6 ] = ( OPJ_INT32 ) ( ( val >> 1 ) & 0x1U )		8200	0		=			
ANR	8488	ArrayIndexing	pDst [ i + 6 ]		8200	0					
ANR	8489	Identifier	pDst		8200	0					
ANR	8490	AdditiveExpression	i + 6		8200	1		+			
ANR	8491	Identifier	i		8200	0					
ANR	8492	PrimaryExpression	6		8200	1					
ANR	8493	CastExpression	( OPJ_INT32 ) ( ( val >> 1 ) & 0x1U )		8200	1					
ANR	8494	CastTarget	OPJ_INT32		8200	0					
ANR	8495	BitAndExpression	( val >> 1 ) & 0x1U		8200	1		&			
ANR	8496	ShiftExpression	val >> 1		8200	0		>>			
ANR	8497	Identifier	val		8200	0					
ANR	8498	PrimaryExpression	1		8200	1					
ANR	8499	PrimaryExpression	0x1U		8200	1					
ANR	8500	ReturnType	static void		8200	1					
ANR	8501	Identifier	convert_1u32s_C1R		8200	2					
ANR	8502	ParameterList	"const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length"		8200	3					
ANR	8503	Parameter	const OPJ_BYTE * pSrc	271:30:8530:8549	8200	0	True				
ANR	8504	ParameterType	const OPJ_BYTE *		8200	0					
ANR	8505	Identifier	pSrc		8200	1					
ANR	8506	Parameter	OPJ_INT32 * pDst	271:52:8552:8566	8200	1	True				
ANR	8507	ParameterType	OPJ_INT32 *		8200	0					
ANR	8508	Identifier	pDst		8200	1					
ANR	8509	Parameter	OPJ_SIZE_T length	272:30:8599:8615	8200	2	True				
ANR	8510	ParameterType	OPJ_SIZE_T		8200	0					
ANR	8511	Identifier	length		8200	1					
ANR	8512	CFGEntryNode	ENTRY		8200		True				
ANR	8513	CFGExitNode	EXIT		8200		True				
ANR	8514	Symbol	pSrc		8200						
ANR	8515	Symbol	val		8200						
ANR	8516	Symbol	* i		8200						
ANR	8517	Symbol	pDst		8200						
ANR	8518	Symbol	length		8200						
ANR	8519	Symbol	i		8200						
ANR	8520	Symbol	* pSrc ++		8200						
ANR	8521	Symbol	* pDst		8200						
ANR	8522	Function	convert_2u32s_C1R	311:0:10044:10823							
ANR	8523	FunctionDef	"convert_2u32s_C1R (const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length)"		8522	0					
ANR	8524	CompoundStatement		313:0:10162:10823	8522	0					
ANR	8525	IdentifierDeclStatement	OPJ_SIZE_T i ;	314:4:10168:10180	8522	0	True				
ANR	8526	IdentifierDecl	i		8522	0					
ANR	8527	IdentifierDeclType	OPJ_SIZE_T		8522	0					
ANR	8528	Identifier	i		8522	1					
ANR	8529	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 3U ) ; i += 4U )		8522	1					
ANR	8530	ForInit	i = 0 ;	315:9:10191:10196	8522	0	True				
ANR	8531	AssignmentExpression	i = 0		8522	0		=			
ANR	8532	Identifier	i		8522	0					
ANR	8533	PrimaryExpression	0		8522	1					
ANR	8534	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 3U )	315:16:10198:10227	8522	1	True				
ANR	8535	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 3U )		8522	0		<			
ANR	8536	Identifier	i		8522	0					
ANR	8537	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 3U		8522	1		&			
ANR	8538	Identifier	length		8522	0					
ANR	8539	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 3U		8522	1					
ANR	8540	UnaryOperator	~		8522	0					
ANR	8541	CastExpression	( OPJ_SIZE_T ) 3U		8522	1					
ANR	8542	CastTarget	OPJ_SIZE_T		8522	0					
ANR	8543	PrimaryExpression	3U		8522	1					
ANR	8544	AssignmentExpression	i += 4U	315:48:10230:10236	8522	2	True	+=			
ANR	8545	Identifier	i		8522	0					
ANR	8546	PrimaryExpression	4U		8522	1					
ANR	8547	CompoundStatement		4:8:86:110	8522	3					
ANR	8548	IdentifierDeclStatement	OPJ_UINT32 val = * pSrc ++ ;	316:8:10249:10273	8522	0	True				
ANR	8549	IdentifierDecl	val = * pSrc ++		8522	0					
ANR	8550	IdentifierDeclType	OPJ_UINT32		8522	0					
ANR	8551	Identifier	val		8522	1					
ANR	8552	AssignmentExpression	val = * pSrc ++		8522	2		=			
ANR	8553	Identifier	val		8522	0					
ANR	8554	UnaryOperationExpression	* pSrc ++		8522	1					
ANR	8555	UnaryOperator	*		8522	0					
ANR	8556	PostIncDecOperationExpression	pSrc ++		8522	1					
ANR	8557	Identifier	pSrc		8522	0					
ANR	8558	IncDec	++		8522	1					
ANR	8559	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 6 )	317:8:10283:10318	8522	1	True				
ANR	8560	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 6 )		8522	0		=			
ANR	8561	ArrayIndexing	pDst [ i + 0 ]		8522	0					
ANR	8562	Identifier	pDst		8522	0					
ANR	8563	AdditiveExpression	i + 0		8522	1		+			
ANR	8564	Identifier	i		8522	0					
ANR	8565	PrimaryExpression	0		8522	1					
ANR	8566	CastExpression	( OPJ_INT32 ) ( val >> 6 )		8522	1					
ANR	8567	CastTarget	OPJ_INT32		8522	0					
ANR	8568	ShiftExpression	val >> 6		8522	1		>>			
ANR	8569	Identifier	val		8522	0					
ANR	8570	PrimaryExpression	6		8522	1					
ANR	8571	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x3U )	318:8:10328:10372	8522	2	True				
ANR	8572	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x3U )		8522	0		=			
ANR	8573	ArrayIndexing	pDst [ i + 1 ]		8522	0					
ANR	8574	Identifier	pDst		8522	0					
ANR	8575	AdditiveExpression	i + 1		8522	1		+			
ANR	8576	Identifier	i		8522	0					
ANR	8577	PrimaryExpression	1		8522	1					
ANR	8578	CastExpression	( OPJ_INT32 ) ( ( val >> 4 ) & 0x3U )		8522	1					
ANR	8579	CastTarget	OPJ_INT32		8522	0					
ANR	8580	BitAndExpression	( val >> 4 ) & 0x3U		8522	1		&			
ANR	8581	ShiftExpression	val >> 4		8522	0		>>			
ANR	8582	Identifier	val		8522	0					
ANR	8583	PrimaryExpression	4		8522	1					
ANR	8584	PrimaryExpression	0x3U		8522	1					
ANR	8585	ExpressionStatement	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x3U )	319:8:10382:10426	8522	3	True				
ANR	8586	AssignmentExpression	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x3U )		8522	0		=			
ANR	8587	ArrayIndexing	pDst [ i + 2 ]		8522	0					
ANR	8588	Identifier	pDst		8522	0					
ANR	8589	AdditiveExpression	i + 2		8522	1		+			
ANR	8590	Identifier	i		8522	0					
ANR	8591	PrimaryExpression	2		8522	1					
ANR	8592	CastExpression	( OPJ_INT32 ) ( ( val >> 2 ) & 0x3U )		8522	1					
ANR	8593	CastTarget	OPJ_INT32		8522	0					
ANR	8594	BitAndExpression	( val >> 2 ) & 0x3U		8522	1		&			
ANR	8595	ShiftExpression	val >> 2		8522	0		>>			
ANR	8596	Identifier	val		8522	0					
ANR	8597	PrimaryExpression	2		8522	1					
ANR	8598	PrimaryExpression	0x3U		8522	1					
ANR	8599	ExpressionStatement	pDst [ i + 3 ] = ( OPJ_INT32 ) ( val & 0x3U )	320:8:10436:10473	8522	4	True				
ANR	8600	AssignmentExpression	pDst [ i + 3 ] = ( OPJ_INT32 ) ( val & 0x3U )		8522	0		=			
ANR	8601	ArrayIndexing	pDst [ i + 3 ]		8522	0					
ANR	8602	Identifier	pDst		8522	0					
ANR	8603	AdditiveExpression	i + 3		8522	1		+			
ANR	8604	Identifier	i		8522	0					
ANR	8605	PrimaryExpression	3		8522	1					
ANR	8606	CastExpression	( OPJ_INT32 ) ( val & 0x3U )		8522	1					
ANR	8607	CastTarget	OPJ_INT32		8522	0					
ANR	8608	BitAndExpression	val & 0x3U		8522	1		&			
ANR	8609	Identifier	val		8522	0					
ANR	8610	PrimaryExpression	0x3U		8522	1					
ANR	8611	IfStatement	if ( length & 3U )		8522	2					
ANR	8612	Condition	length & 3U	322:8:10489:10499	8522	0	True				
ANR	8613	BitAndExpression	length & 3U		8522	0		&			
ANR	8614	Identifier	length		8522	0					
ANR	8615	PrimaryExpression	3U		8522	1					
ANR	8616	CompoundStatement		11:8:349:373	8522	1					
ANR	8617	IdentifierDeclStatement	OPJ_UINT32 val = * pSrc ++ ;	323:8:10512:10536	8522	0	True				
ANR	8618	IdentifierDecl	val = * pSrc ++		8522	0					
ANR	8619	IdentifierDeclType	OPJ_UINT32		8522	0					
ANR	8620	Identifier	val		8522	1					
ANR	8621	AssignmentExpression	val = * pSrc ++		8522	2		=			
ANR	8622	Identifier	val		8522	0					
ANR	8623	UnaryOperationExpression	* pSrc ++		8522	1					
ANR	8624	UnaryOperator	*		8522	0					
ANR	8625	PostIncDecOperationExpression	pSrc ++		8522	1					
ANR	8626	Identifier	pSrc		8522	0					
ANR	8627	IncDec	++		8522	1					
ANR	8628	ExpressionStatement	length = length & 3U	324:8:10546:10566	8522	1	True				
ANR	8629	AssignmentExpression	length = length & 3U		8522	0		=			
ANR	8630	Identifier	length		8522	0					
ANR	8631	BitAndExpression	length & 3U		8522	1		&			
ANR	8632	Identifier	length		8522	0					
ANR	8633	PrimaryExpression	3U		8522	1					
ANR	8634	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 6 )	325:8:10576:10611	8522	2	True				
ANR	8635	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 6 )		8522	0		=			
ANR	8636	ArrayIndexing	pDst [ i + 0 ]		8522	0					
ANR	8637	Identifier	pDst		8522	0					
ANR	8638	AdditiveExpression	i + 0		8522	1		+			
ANR	8639	Identifier	i		8522	0					
ANR	8640	PrimaryExpression	0		8522	1					
ANR	8641	CastExpression	( OPJ_INT32 ) ( val >> 6 )		8522	1					
ANR	8642	CastTarget	OPJ_INT32		8522	0					
ANR	8643	ShiftExpression	val >> 6		8522	1		>>			
ANR	8644	Identifier	val		8522	0					
ANR	8645	PrimaryExpression	6		8522	1					
ANR	8646	IfStatement	if ( length > 1U )		8522	3					
ANR	8647	Condition	length > 1U	327:12:10626:10636	8522	0	True				
ANR	8648	RelationalExpression	length > 1U		8522	0		>			
ANR	8649	Identifier	length		8522	0					
ANR	8650	PrimaryExpression	1U		8522	1					
ANR	8651	CompoundStatement		15:25:476:476	8522	1					
ANR	8652	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x3U )	328:12:10653:10697	8522	0	True				
ANR	8653	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( val >> 4 ) & 0x3U )		8522	0		=			
ANR	8654	ArrayIndexing	pDst [ i + 1 ]		8522	0					
ANR	8655	Identifier	pDst		8522	0					
ANR	8656	AdditiveExpression	i + 1		8522	1		+			
ANR	8657	Identifier	i		8522	0					
ANR	8658	PrimaryExpression	1		8522	1					
ANR	8659	CastExpression	( OPJ_INT32 ) ( ( val >> 4 ) & 0x3U )		8522	1					
ANR	8660	CastTarget	OPJ_INT32		8522	0					
ANR	8661	BitAndExpression	( val >> 4 ) & 0x3U		8522	1		&			
ANR	8662	ShiftExpression	val >> 4		8522	0		>>			
ANR	8663	Identifier	val		8522	0					
ANR	8664	PrimaryExpression	4		8522	1					
ANR	8665	PrimaryExpression	0x3U		8522	1					
ANR	8666	IfStatement	if ( length > 2U )		8522	1					
ANR	8667	Condition	length > 2U	329:16:10715:10725	8522	0	True				
ANR	8668	RelationalExpression	length > 2U		8522	0		>			
ANR	8669	Identifier	length		8522	0					
ANR	8670	PrimaryExpression	2U		8522	1					
ANR	8671	CompoundStatement		17:29:565:565	8522	1					
ANR	8672	ExpressionStatement	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x3U )	330:16:10746:10790	8522	0	True				
ANR	8673	AssignmentExpression	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( val >> 2 ) & 0x3U )		8522	0		=			
ANR	8674	ArrayIndexing	pDst [ i + 2 ]		8522	0					
ANR	8675	Identifier	pDst		8522	0					
ANR	8676	AdditiveExpression	i + 2		8522	1		+			
ANR	8677	Identifier	i		8522	0					
ANR	8678	PrimaryExpression	2		8522	1					
ANR	8679	CastExpression	( OPJ_INT32 ) ( ( val >> 2 ) & 0x3U )		8522	1					
ANR	8680	CastTarget	OPJ_INT32		8522	0					
ANR	8681	BitAndExpression	( val >> 2 ) & 0x3U		8522	1		&			
ANR	8682	ShiftExpression	val >> 2		8522	0		>>			
ANR	8683	Identifier	val		8522	0					
ANR	8684	PrimaryExpression	2		8522	1					
ANR	8685	PrimaryExpression	0x3U		8522	1					
ANR	8686	ReturnType	static void		8522	1					
ANR	8687	Identifier	convert_2u32s_C1R		8522	2					
ANR	8688	ParameterList	"const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length"		8522	3					
ANR	8689	Parameter	const OPJ_BYTE * pSrc	311:30:10074:10093	8522	0	True				
ANR	8690	ParameterType	const OPJ_BYTE *		8522	0					
ANR	8691	Identifier	pSrc		8522	1					
ANR	8692	Parameter	OPJ_INT32 * pDst	311:52:10096:10110	8522	1	True				
ANR	8693	ParameterType	OPJ_INT32 *		8522	0					
ANR	8694	Identifier	pDst		8522	1					
ANR	8695	Parameter	OPJ_SIZE_T length	312:30:10143:10159	8522	2	True				
ANR	8696	ParameterType	OPJ_SIZE_T		8522	0					
ANR	8697	Identifier	length		8522	1					
ANR	8698	CFGEntryNode	ENTRY		8522		True				
ANR	8699	CFGExitNode	EXIT		8522		True				
ANR	8700	Symbol	pSrc		8522						
ANR	8701	Symbol	val		8522						
ANR	8702	Symbol	* i		8522						
ANR	8703	Symbol	pDst		8522						
ANR	8704	Symbol	length		8522						
ANR	8705	Symbol	i		8522						
ANR	8706	Symbol	* pSrc ++		8522						
ANR	8707	Symbol	* pDst		8522						
ANR	8708	Function	convert_4u32s_C1R	336:0:10825:11261							
ANR	8709	FunctionDef	"convert_4u32s_C1R (const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length)"		8708	0					
ANR	8710	CompoundStatement		338:0:10943:11261	8708	0					
ANR	8711	IdentifierDeclStatement	OPJ_SIZE_T i ;	339:4:10949:10961	8708	0	True				
ANR	8712	IdentifierDecl	i		8708	0					
ANR	8713	IdentifierDeclType	OPJ_SIZE_T		8708	0					
ANR	8714	Identifier	i		8708	1					
ANR	8715	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 1U ) ; i += 2U )		8708	1					
ANR	8716	ForInit	i = 0 ;	340:9:10972:10977	8708	0	True				
ANR	8717	AssignmentExpression	i = 0		8708	0		=			
ANR	8718	Identifier	i		8708	0					
ANR	8719	PrimaryExpression	0		8708	1					
ANR	8720	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 1U )	340:16:10979:11008	8708	1	True				
ANR	8721	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 1U )		8708	0		<			
ANR	8722	Identifier	i		8708	0					
ANR	8723	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 1U		8708	1		&			
ANR	8724	Identifier	length		8708	0					
ANR	8725	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 1U		8708	1					
ANR	8726	UnaryOperator	~		8708	0					
ANR	8727	CastExpression	( OPJ_SIZE_T ) 1U		8708	1					
ANR	8728	CastTarget	OPJ_SIZE_T		8708	0					
ANR	8729	PrimaryExpression	1U		8708	1					
ANR	8730	AssignmentExpression	i += 2U	340:48:11011:11017	8708	2	True	+=			
ANR	8731	Identifier	i		8708	0					
ANR	8732	PrimaryExpression	2U		8708	1					
ANR	8733	CompoundStatement		4:8:86:110	8708	3					
ANR	8734	IdentifierDeclStatement	OPJ_UINT32 val = * pSrc ++ ;	341:8:11030:11054	8708	0	True				
ANR	8735	IdentifierDecl	val = * pSrc ++		8708	0					
ANR	8736	IdentifierDeclType	OPJ_UINT32		8708	0					
ANR	8737	Identifier	val		8708	1					
ANR	8738	AssignmentExpression	val = * pSrc ++		8708	2		=			
ANR	8739	Identifier	val		8708	0					
ANR	8740	UnaryOperationExpression	* pSrc ++		8708	1					
ANR	8741	UnaryOperator	*		8708	0					
ANR	8742	PostIncDecOperationExpression	pSrc ++		8708	1					
ANR	8743	Identifier	pSrc		8708	0					
ANR	8744	IncDec	++		8708	1					
ANR	8745	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 4 )	342:8:11064:11099	8708	1	True				
ANR	8746	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 4 )		8708	0		=			
ANR	8747	ArrayIndexing	pDst [ i + 0 ]		8708	0					
ANR	8748	Identifier	pDst		8708	0					
ANR	8749	AdditiveExpression	i + 0		8708	1		+			
ANR	8750	Identifier	i		8708	0					
ANR	8751	PrimaryExpression	0		8708	1					
ANR	8752	CastExpression	( OPJ_INT32 ) ( val >> 4 )		8708	1					
ANR	8753	CastTarget	OPJ_INT32		8708	0					
ANR	8754	ShiftExpression	val >> 4		8708	1		>>			
ANR	8755	Identifier	val		8708	0					
ANR	8756	PrimaryExpression	4		8708	1					
ANR	8757	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( val & 0xFU )	343:8:11109:11146	8708	2	True				
ANR	8758	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( val & 0xFU )		8708	0		=			
ANR	8759	ArrayIndexing	pDst [ i + 1 ]		8708	0					
ANR	8760	Identifier	pDst		8708	0					
ANR	8761	AdditiveExpression	i + 1		8708	1		+			
ANR	8762	Identifier	i		8708	0					
ANR	8763	PrimaryExpression	1		8708	1					
ANR	8764	CastExpression	( OPJ_INT32 ) ( val & 0xFU )		8708	1					
ANR	8765	CastTarget	OPJ_INT32		8708	0					
ANR	8766	BitAndExpression	val & 0xFU		8708	1		&			
ANR	8767	Identifier	val		8708	0					
ANR	8768	PrimaryExpression	0xFU		8708	1					
ANR	8769	IfStatement	if ( length & 1U )		8708	2					
ANR	8770	Condition	length & 1U	345:8:11162:11172	8708	0	True				
ANR	8771	BitAndExpression	length & 1U		8708	0		&			
ANR	8772	Identifier	length		8708	0					
ANR	8773	PrimaryExpression	1U		8708	1					
ANR	8774	CompoundStatement		9:8:241:264	8708	1					
ANR	8775	IdentifierDeclStatement	OPJ_UINT8 val = * pSrc ++ ;	346:8:11185:11208	8708	0	True				
ANR	8776	IdentifierDecl	val = * pSrc ++		8708	0					
ANR	8777	IdentifierDeclType	OPJ_UINT8		8708	0					
ANR	8778	Identifier	val		8708	1					
ANR	8779	AssignmentExpression	val = * pSrc ++		8708	2		=			
ANR	8780	Identifier	val		8708	0					
ANR	8781	UnaryOperationExpression	* pSrc ++		8708	1					
ANR	8782	UnaryOperator	*		8708	0					
ANR	8783	PostIncDecOperationExpression	pSrc ++		8708	1					
ANR	8784	Identifier	pSrc		8708	0					
ANR	8785	IncDec	++		8708	1					
ANR	8786	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 4 )	347:8:11218:11253	8708	1	True				
ANR	8787	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val >> 4 )		8708	0		=			
ANR	8788	ArrayIndexing	pDst [ i + 0 ]		8708	0					
ANR	8789	Identifier	pDst		8708	0					
ANR	8790	AdditiveExpression	i + 0		8708	1		+			
ANR	8791	Identifier	i		8708	0					
ANR	8792	PrimaryExpression	0		8708	1					
ANR	8793	CastExpression	( OPJ_INT32 ) ( val >> 4 )		8708	1					
ANR	8794	CastTarget	OPJ_INT32		8708	0					
ANR	8795	ShiftExpression	val >> 4		8708	1		>>			
ANR	8796	Identifier	val		8708	0					
ANR	8797	PrimaryExpression	4		8708	1					
ANR	8798	ReturnType	static void		8708	1					
ANR	8799	Identifier	convert_4u32s_C1R		8708	2					
ANR	8800	ParameterList	"const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length"		8708	3					
ANR	8801	Parameter	const OPJ_BYTE * pSrc	336:30:10855:10874	8708	0	True				
ANR	8802	ParameterType	const OPJ_BYTE *		8708	0					
ANR	8803	Identifier	pSrc		8708	1					
ANR	8804	Parameter	OPJ_INT32 * pDst	336:52:10877:10891	8708	1	True				
ANR	8805	ParameterType	OPJ_INT32 *		8708	0					
ANR	8806	Identifier	pDst		8708	1					
ANR	8807	Parameter	OPJ_SIZE_T length	337:30:10924:10940	8708	2	True				
ANR	8808	ParameterType	OPJ_SIZE_T		8708	0					
ANR	8809	Identifier	length		8708	1					
ANR	8810	CFGEntryNode	ENTRY		8708		True				
ANR	8811	CFGExitNode	EXIT		8708		True				
ANR	8812	Symbol	pSrc		8708						
ANR	8813	Symbol	val		8708						
ANR	8814	Symbol	* i		8708						
ANR	8815	Symbol	pDst		8708						
ANR	8816	Symbol	length		8708						
ANR	8817	Symbol	i		8708						
ANR	8818	Symbol	* pSrc ++		8708						
ANR	8819	Symbol	* pDst		8708						
ANR	8820	Function	convert_6u32s_C1R	350:0:11263:12268							
ANR	8821	FunctionDef	"convert_6u32s_C1R (const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length)"		8820	0					
ANR	8822	CompoundStatement		352:0:11381:12268	8820	0					
ANR	8823	IdentifierDeclStatement	OPJ_SIZE_T i ;	353:4:11387:11399	8820	0	True				
ANR	8824	IdentifierDecl	i		8820	0					
ANR	8825	IdentifierDeclType	OPJ_SIZE_T		8820	0					
ANR	8826	Identifier	i		8820	1					
ANR	8827	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 3U ) ; i += 4U )		8820	1					
ANR	8828	ForInit	i = 0 ;	354:9:11410:11415	8820	0	True				
ANR	8829	AssignmentExpression	i = 0		8820	0		=			
ANR	8830	Identifier	i		8820	0					
ANR	8831	PrimaryExpression	0		8820	1					
ANR	8832	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 3U )	354:16:11417:11446	8820	1	True				
ANR	8833	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 3U )		8820	0		<			
ANR	8834	Identifier	i		8820	0					
ANR	8835	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 3U		8820	1		&			
ANR	8836	Identifier	length		8820	0					
ANR	8837	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 3U		8820	1					
ANR	8838	UnaryOperator	~		8820	0					
ANR	8839	CastExpression	( OPJ_SIZE_T ) 3U		8820	1					
ANR	8840	CastTarget	OPJ_SIZE_T		8820	0					
ANR	8841	PrimaryExpression	3U		8820	1					
ANR	8842	AssignmentExpression	i += 4U	354:48:11449:11455	8820	2	True	+=			
ANR	8843	Identifier	i		8820	0					
ANR	8844	PrimaryExpression	4U		8820	1					
ANR	8845	CompoundStatement		6:8:156:181	8820	3					
ANR	8846	IdentifierDeclStatement	OPJ_UINT32 val0 = * pSrc ++ ;	355:8:11468:11493	8820	0	True				
ANR	8847	IdentifierDecl	val0 = * pSrc ++		8820	0					
ANR	8848	IdentifierDeclType	OPJ_UINT32		8820	0					
ANR	8849	Identifier	val0		8820	1					
ANR	8850	AssignmentExpression	val0 = * pSrc ++		8820	2		=			
ANR	8851	Identifier	val0		8820	0					
ANR	8852	UnaryOperationExpression	* pSrc ++		8820	1					
ANR	8853	UnaryOperator	*		8820	0					
ANR	8854	PostIncDecOperationExpression	pSrc ++		8820	1					
ANR	8855	Identifier	pSrc		8820	0					
ANR	8856	IncDec	++		8820	1					
ANR	8857	IdentifierDeclStatement	OPJ_UINT32 val1 = * pSrc ++ ;	356:8:11503:11528	8820	1	True				
ANR	8858	IdentifierDecl	val1 = * pSrc ++		8820	0					
ANR	8859	IdentifierDeclType	OPJ_UINT32		8820	0					
ANR	8860	Identifier	val1		8820	1					
ANR	8861	AssignmentExpression	val1 = * pSrc ++		8820	2		=			
ANR	8862	Identifier	val1		8820	0					
ANR	8863	UnaryOperationExpression	* pSrc ++		8820	1					
ANR	8864	UnaryOperator	*		8820	0					
ANR	8865	PostIncDecOperationExpression	pSrc ++		8820	1					
ANR	8866	Identifier	pSrc		8820	0					
ANR	8867	IncDec	++		8820	1					
ANR	8868	IdentifierDeclStatement	OPJ_UINT32 val2 = * pSrc ++ ;	357:8:11538:11563	8820	2	True				
ANR	8869	IdentifierDecl	val2 = * pSrc ++		8820	0					
ANR	8870	IdentifierDeclType	OPJ_UINT32		8820	0					
ANR	8871	Identifier	val2		8820	1					
ANR	8872	AssignmentExpression	val2 = * pSrc ++		8820	2		=			
ANR	8873	Identifier	val2		8820	0					
ANR	8874	UnaryOperationExpression	* pSrc ++		8820	1					
ANR	8875	UnaryOperator	*		8820	0					
ANR	8876	PostIncDecOperationExpression	pSrc ++		8820	1					
ANR	8877	Identifier	pSrc		8820	0					
ANR	8878	IncDec	++		8820	1					
ANR	8879	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val0 >> 2 )	358:8:11573:11609	8820	3	True				
ANR	8880	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val0 >> 2 )		8820	0		=			
ANR	8881	ArrayIndexing	pDst [ i + 0 ]		8820	0					
ANR	8882	Identifier	pDst		8820	0					
ANR	8883	AdditiveExpression	i + 0		8820	1		+			
ANR	8884	Identifier	i		8820	0					
ANR	8885	PrimaryExpression	0		8820	1					
ANR	8886	CastExpression	( OPJ_INT32 ) ( val0 >> 2 )		8820	1					
ANR	8887	CastTarget	OPJ_INT32		8820	0					
ANR	8888	ShiftExpression	val0 >> 2		8820	1		>>			
ANR	8889	Identifier	val0		8820	0					
ANR	8890	PrimaryExpression	2		8820	1					
ANR	8891	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 ) )	359:8:11619:11680	8820	4	True				
ANR	8892	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 ) )		8820	0		=			
ANR	8893	ArrayIndexing	pDst [ i + 1 ]		8820	0					
ANR	8894	Identifier	pDst		8820	0					
ANR	8895	AdditiveExpression	i + 1		8820	1		+			
ANR	8896	Identifier	i		8820	0					
ANR	8897	PrimaryExpression	1		8820	1					
ANR	8898	CastExpression	( OPJ_INT32 ) ( ( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 ) )		8820	1					
ANR	8899	CastTarget	OPJ_INT32		8820	0					
ANR	8900	InclusiveOrExpression	( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 )		8820	1		|			
ANR	8901	ShiftExpression	( val0 & 0x3U ) << 4		8820	0		<<			
ANR	8902	BitAndExpression	val0 & 0x3U		8820	0		&			
ANR	8903	Identifier	val0		8820	0					
ANR	8904	PrimaryExpression	0x3U		8820	1					
ANR	8905	PrimaryExpression	4		8820	1					
ANR	8906	ShiftExpression	val1 >> 4		8820	1		>>			
ANR	8907	Identifier	val1		8820	0					
ANR	8908	PrimaryExpression	4		8820	1					
ANR	8909	ExpressionStatement	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 ) )	360:8:11690:11751	8820	5	True				
ANR	8910	AssignmentExpression	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 ) )		8820	0		=			
ANR	8911	ArrayIndexing	pDst [ i + 2 ]		8820	0					
ANR	8912	Identifier	pDst		8820	0					
ANR	8913	AdditiveExpression	i + 2		8820	1		+			
ANR	8914	Identifier	i		8820	0					
ANR	8915	PrimaryExpression	2		8820	1					
ANR	8916	CastExpression	( OPJ_INT32 ) ( ( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 ) )		8820	1					
ANR	8917	CastTarget	OPJ_INT32		8820	0					
ANR	8918	InclusiveOrExpression	( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 )		8820	1		|			
ANR	8919	ShiftExpression	( val1 & 0xFU ) << 2		8820	0		<<			
ANR	8920	BitAndExpression	val1 & 0xFU		8820	0		&			
ANR	8921	Identifier	val1		8820	0					
ANR	8922	PrimaryExpression	0xFU		8820	1					
ANR	8923	PrimaryExpression	2		8820	1					
ANR	8924	ShiftExpression	val2 >> 6		8820	1		>>			
ANR	8925	Identifier	val2		8820	0					
ANR	8926	PrimaryExpression	6		8820	1					
ANR	8927	ExpressionStatement	pDst [ i + 3 ] = ( OPJ_INT32 ) ( val2 & 0x3FU )	361:8:11761:11800	8820	6	True				
ANR	8928	AssignmentExpression	pDst [ i + 3 ] = ( OPJ_INT32 ) ( val2 & 0x3FU )		8820	0		=			
ANR	8929	ArrayIndexing	pDst [ i + 3 ]		8820	0					
ANR	8930	Identifier	pDst		8820	0					
ANR	8931	AdditiveExpression	i + 3		8820	1		+			
ANR	8932	Identifier	i		8820	0					
ANR	8933	PrimaryExpression	3		8820	1					
ANR	8934	CastExpression	( OPJ_INT32 ) ( val2 & 0x3FU )		8820	1					
ANR	8935	CastTarget	OPJ_INT32		8820	0					
ANR	8936	BitAndExpression	val2 & 0x3FU		8820	1		&			
ANR	8937	Identifier	val2		8820	0					
ANR	8938	PrimaryExpression	0x3FU		8820	1					
ANR	8939	IfStatement	if ( length & 3U )		8820	2					
ANR	8940	Condition	length & 3U	364:8:11817:11827	8820	0	True				
ANR	8941	BitAndExpression	length & 3U		8820	0		&			
ANR	8942	Identifier	length		8820	0					
ANR	8943	PrimaryExpression	3U		8820	1					
ANR	8944	CompoundStatement		14:8:458:483	8820	1					
ANR	8945	IdentifierDeclStatement	OPJ_UINT32 val0 = * pSrc ++ ;	365:8:11840:11865	8820	0	True				
ANR	8946	IdentifierDecl	val0 = * pSrc ++		8820	0					
ANR	8947	IdentifierDeclType	OPJ_UINT32		8820	0					
ANR	8948	Identifier	val0		8820	1					
ANR	8949	AssignmentExpression	val0 = * pSrc ++		8820	2		=			
ANR	8950	Identifier	val0		8820	0					
ANR	8951	UnaryOperationExpression	* pSrc ++		8820	1					
ANR	8952	UnaryOperator	*		8820	0					
ANR	8953	PostIncDecOperationExpression	pSrc ++		8820	1					
ANR	8954	Identifier	pSrc		8820	0					
ANR	8955	IncDec	++		8820	1					
ANR	8956	ExpressionStatement	length = length & 3U	366:8:11875:11895	8820	1	True				
ANR	8957	AssignmentExpression	length = length & 3U		8820	0		=			
ANR	8958	Identifier	length		8820	0					
ANR	8959	BitAndExpression	length & 3U		8820	1		&			
ANR	8960	Identifier	length		8820	0					
ANR	8961	PrimaryExpression	3U		8820	1					
ANR	8962	ExpressionStatement	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val0 >> 2 )	367:8:11905:11941	8820	2	True				
ANR	8963	AssignmentExpression	pDst [ i + 0 ] = ( OPJ_INT32 ) ( val0 >> 2 )		8820	0		=			
ANR	8964	ArrayIndexing	pDst [ i + 0 ]		8820	0					
ANR	8965	Identifier	pDst		8820	0					
ANR	8966	AdditiveExpression	i + 0		8820	1		+			
ANR	8967	Identifier	i		8820	0					
ANR	8968	PrimaryExpression	0		8820	1					
ANR	8969	CastExpression	( OPJ_INT32 ) ( val0 >> 2 )		8820	1					
ANR	8970	CastTarget	OPJ_INT32		8820	0					
ANR	8971	ShiftExpression	val0 >> 2		8820	1		>>			
ANR	8972	Identifier	val0		8820	0					
ANR	8973	PrimaryExpression	2		8820	1					
ANR	8974	IfStatement	if ( length > 1U )		8820	3					
ANR	8975	Condition	length > 1U	369:12:11956:11966	8820	0	True				
ANR	8976	RelationalExpression	length > 1U		8820	0		>			
ANR	8977	Identifier	length		8820	0					
ANR	8978	PrimaryExpression	1U		8820	1					
ANR	8979	CompoundStatement		19:12:601:626	8820	1					
ANR	8980	IdentifierDeclStatement	OPJ_UINT32 val1 = * pSrc ++ ;	370:12:11983:12008	8820	0	True				
ANR	8981	IdentifierDecl	val1 = * pSrc ++		8820	0					
ANR	8982	IdentifierDeclType	OPJ_UINT32		8820	0					
ANR	8983	Identifier	val1		8820	1					
ANR	8984	AssignmentExpression	val1 = * pSrc ++		8820	2		=			
ANR	8985	Identifier	val1		8820	0					
ANR	8986	UnaryOperationExpression	* pSrc ++		8820	1					
ANR	8987	UnaryOperator	*		8820	0					
ANR	8988	PostIncDecOperationExpression	pSrc ++		8820	1					
ANR	8989	Identifier	pSrc		8820	0					
ANR	8990	IncDec	++		8820	1					
ANR	8991	ExpressionStatement	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 ) )	371:12:12022:12083	8820	1	True				
ANR	8992	AssignmentExpression	pDst [ i + 1 ] = ( OPJ_INT32 ) ( ( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 ) )		8820	0		=			
ANR	8993	ArrayIndexing	pDst [ i + 1 ]		8820	0					
ANR	8994	Identifier	pDst		8820	0					
ANR	8995	AdditiveExpression	i + 1		8820	1		+			
ANR	8996	Identifier	i		8820	0					
ANR	8997	PrimaryExpression	1		8820	1					
ANR	8998	CastExpression	( OPJ_INT32 ) ( ( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 ) )		8820	1					
ANR	8999	CastTarget	OPJ_INT32		8820	0					
ANR	9000	InclusiveOrExpression	( ( val0 & 0x3U ) << 4 ) | ( val1 >> 4 )		8820	1		|			
ANR	9001	ShiftExpression	( val0 & 0x3U ) << 4		8820	0		<<			
ANR	9002	BitAndExpression	val0 & 0x3U		8820	0		&			
ANR	9003	Identifier	val0		8820	0					
ANR	9004	PrimaryExpression	0x3U		8820	1					
ANR	9005	PrimaryExpression	4		8820	1					
ANR	9006	ShiftExpression	val1 >> 4		8820	1		>>			
ANR	9007	Identifier	val1		8820	0					
ANR	9008	PrimaryExpression	4		8820	1					
ANR	9009	IfStatement	if ( length > 2U )		8820	2					
ANR	9010	Condition	length > 2U	372:16:12101:12111	8820	0	True				
ANR	9011	RelationalExpression	length > 2U		8820	0		>			
ANR	9012	Identifier	length		8820	0					
ANR	9013	PrimaryExpression	2U		8820	1					
ANR	9014	CompoundStatement		22:16:750:775	8820	1					
ANR	9015	IdentifierDeclStatement	OPJ_UINT32 val2 = * pSrc ++ ;	373:16:12132:12157	8820	0	True				
ANR	9016	IdentifierDecl	val2 = * pSrc ++		8820	0					
ANR	9017	IdentifierDeclType	OPJ_UINT32		8820	0					
ANR	9018	Identifier	val2		8820	1					
ANR	9019	AssignmentExpression	val2 = * pSrc ++		8820	2		=			
ANR	9020	Identifier	val2		8820	0					
ANR	9021	UnaryOperationExpression	* pSrc ++		8820	1					
ANR	9022	UnaryOperator	*		8820	0					
ANR	9023	PostIncDecOperationExpression	pSrc ++		8820	1					
ANR	9024	Identifier	pSrc		8820	0					
ANR	9025	IncDec	++		8820	1					
ANR	9026	ExpressionStatement	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 ) )	374:16:12175:12236	8820	1	True				
ANR	9027	AssignmentExpression	pDst [ i + 2 ] = ( OPJ_INT32 ) ( ( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 ) )		8820	0		=			
ANR	9028	ArrayIndexing	pDst [ i + 2 ]		8820	0					
ANR	9029	Identifier	pDst		8820	0					
ANR	9030	AdditiveExpression	i + 2		8820	1		+			
ANR	9031	Identifier	i		8820	0					
ANR	9032	PrimaryExpression	2		8820	1					
ANR	9033	CastExpression	( OPJ_INT32 ) ( ( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 ) )		8820	1					
ANR	9034	CastTarget	OPJ_INT32		8820	0					
ANR	9035	InclusiveOrExpression	( ( val1 & 0xFU ) << 2 ) | ( val2 >> 6 )		8820	1		|			
ANR	9036	ShiftExpression	( val1 & 0xFU ) << 2		8820	0		<<			
ANR	9037	BitAndExpression	val1 & 0xFU		8820	0		&			
ANR	9038	Identifier	val1		8820	0					
ANR	9039	PrimaryExpression	0xFU		8820	1					
ANR	9040	PrimaryExpression	2		8820	1					
ANR	9041	ShiftExpression	val2 >> 6		8820	1		>>			
ANR	9042	Identifier	val2		8820	0					
ANR	9043	PrimaryExpression	6		8820	1					
ANR	9044	ReturnType	static void		8820	1					
ANR	9045	Identifier	convert_6u32s_C1R		8820	2					
ANR	9046	ParameterList	"const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length"		8820	3					
ANR	9047	Parameter	const OPJ_BYTE * pSrc	350:30:11293:11312	8820	0	True				
ANR	9048	ParameterType	const OPJ_BYTE *		8820	0					
ANR	9049	Identifier	pSrc		8820	1					
ANR	9050	Parameter	OPJ_INT32 * pDst	350:52:11315:11329	8820	1	True				
ANR	9051	ParameterType	OPJ_INT32 *		8820	0					
ANR	9052	Identifier	pDst		8820	1					
ANR	9053	Parameter	OPJ_SIZE_T length	351:30:11362:11378	8820	2	True				
ANR	9054	ParameterType	OPJ_SIZE_T		8820	0					
ANR	9055	Identifier	length		8820	1					
ANR	9056	CFGEntryNode	ENTRY		8820		True				
ANR	9057	CFGExitNode	EXIT		8820		True				
ANR	9058	Symbol	pSrc		8820						
ANR	9059	Symbol	* i		8820						
ANR	9060	Symbol	pDst		8820						
ANR	9061	Symbol	val2		8820						
ANR	9062	Symbol	val1		8820						
ANR	9063	Symbol	length		8820						
ANR	9064	Symbol	val0		8820						
ANR	9065	Symbol	i		8820						
ANR	9066	Symbol	* pSrc ++		8820						
ANR	9067	Symbol	* pDst		8820						
ANR	9068	Function	convert_8u32s_C1R	379:0:12270:12476							
ANR	9069	FunctionDef	"convert_8u32s_C1R (const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length)"		9068	0					
ANR	9070	CompoundStatement		381:0:12388:12476	9068	0					
ANR	9071	IdentifierDeclStatement	OPJ_SIZE_T i ;	382:4:12394:12406	9068	0	True				
ANR	9072	IdentifierDecl	i		9068	0					
ANR	9073	IdentifierDeclType	OPJ_SIZE_T		9068	0					
ANR	9074	Identifier	i		9068	1					
ANR	9075	ForStatement	for ( i = 0 ; i < length ; i ++ )		9068	1					
ANR	9076	ForInit	i = 0 ;	383:9:12417:12422	9068	0	True				
ANR	9077	AssignmentExpression	i = 0		9068	0		=			
ANR	9078	Identifier	i		9068	0					
ANR	9079	PrimaryExpression	0		9068	1					
ANR	9080	Condition	i < length	383:16:12424:12433	9068	1	True				
ANR	9081	RelationalExpression	i < length		9068	0		<			
ANR	9082	Identifier	i		9068	0					
ANR	9083	Identifier	length		9068	1					
ANR	9084	PostIncDecOperationExpression	i ++	383:28:12436:12438	9068	2	True				
ANR	9085	Identifier	i		9068	0					
ANR	9086	IncDec	++		9068	1					
ANR	9087	CompoundStatement		3:33:52:52	9068	3					
ANR	9088	ExpressionStatement	pDst [ i ] = pSrc [ i ]	384:8:12451:12468	9068	0	True				
ANR	9089	AssignmentExpression	pDst [ i ] = pSrc [ i ]		9068	0		=			
ANR	9090	ArrayIndexing	pDst [ i ]		9068	0					
ANR	9091	Identifier	pDst		9068	0					
ANR	9092	Identifier	i		9068	1					
ANR	9093	ArrayIndexing	pSrc [ i ]		9068	1					
ANR	9094	Identifier	pSrc		9068	0					
ANR	9095	Identifier	i		9068	1					
ANR	9096	ReturnType	static void		9068	1					
ANR	9097	Identifier	convert_8u32s_C1R		9068	2					
ANR	9098	ParameterList	"const OPJ_BYTE * pSrc , OPJ_INT32 * pDst , OPJ_SIZE_T length"		9068	3					
ANR	9099	Parameter	const OPJ_BYTE * pSrc	379:30:12300:12319	9068	0	True				
ANR	9100	ParameterType	const OPJ_BYTE *		9068	0					
ANR	9101	Identifier	pSrc		9068	1					
ANR	9102	Parameter	OPJ_INT32 * pDst	379:52:12322:12336	9068	1	True				
ANR	9103	ParameterType	OPJ_INT32 *		9068	0					
ANR	9104	Identifier	pDst		9068	1					
ANR	9105	Parameter	OPJ_SIZE_T length	380:30:12369:12385	9068	2	True				
ANR	9106	ParameterType	OPJ_SIZE_T		9068	0					
ANR	9107	Identifier	length		9068	1					
ANR	9108	CFGEntryNode	ENTRY		9068		True				
ANR	9109	CFGExitNode	EXIT		9068		True				
ANR	9110	Symbol	pSrc		9068						
ANR	9111	Symbol	* i		9068						
ANR	9112	Symbol	pDst		9068						
ANR	9113	Symbol	length		9068						
ANR	9114	Symbol	* pSrc		9068						
ANR	9115	Symbol	i		9068						
ANR	9116	Symbol	* pDst		9068						
ANR	9117	DeclStmt									
ANR	9118	Decl							const convert_XXx32s_C1R	const convert_XXx32s_C1R [ 9 ]	convert_XXu32s_C1R_LUT
ANR	9119	Function	convert_32s1u_C1R	400:0:12692:14581							
ANR	9120	FunctionDef	"convert_32s1u_C1R (const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length)"		9119	0					
ANR	9121	CompoundStatement		402:0:12810:14581	9119	0					
ANR	9122	IdentifierDeclStatement	OPJ_SIZE_T i ;	403:4:12816:12828	9119	0	True				
ANR	9123	IdentifierDecl	i		9119	0					
ANR	9124	IdentifierDeclType	OPJ_SIZE_T		9119	0					
ANR	9125	Identifier	i		9119	1					
ANR	9126	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 7U ) ; i += 8U )		9119	1					
ANR	9127	ForInit	i = 0 ;	404:9:12839:12844	9119	0	True				
ANR	9128	AssignmentExpression	i = 0		9119	0		=			
ANR	9129	Identifier	i		9119	0					
ANR	9130	PrimaryExpression	0		9119	1					
ANR	9131	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 7U )	404:16:12846:12875	9119	1	True				
ANR	9132	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 7U )		9119	0		<			
ANR	9133	Identifier	i		9119	0					
ANR	9134	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 7U		9119	1		&			
ANR	9135	Identifier	length		9119	0					
ANR	9136	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 7U		9119	1					
ANR	9137	UnaryOperator	~		9119	0					
ANR	9138	CastExpression	( OPJ_SIZE_T ) 7U		9119	1					
ANR	9139	CastTarget	OPJ_SIZE_T		9119	0					
ANR	9140	PrimaryExpression	7U		9119	1					
ANR	9141	AssignmentExpression	i += 8U	404:48:12878:12884	9119	2	True	+=			
ANR	9142	Identifier	i		9119	0					
ANR	9143	PrimaryExpression	8U		9119	1					
ANR	9144	CompoundStatement		11:8:443:484	9119	3					
ANR	9145	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	405:8:12897:12938	9119	0	True				
ANR	9146	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9119	0					
ANR	9147	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9148	Identifier	src0		9119	1					
ANR	9149	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9119	2		=			
ANR	9150	Identifier	src0		9119	0					
ANR	9151	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9119	1					
ANR	9152	CastTarget	OPJ_UINT32		9119	0					
ANR	9153	ArrayIndexing	pSrc [ i + 0 ]		9119	1					
ANR	9154	Identifier	pSrc		9119	0					
ANR	9155	AdditiveExpression	i + 0		9119	1		+			
ANR	9156	Identifier	i		9119	0					
ANR	9157	PrimaryExpression	0		9119	1					
ANR	9158	IdentifierDeclStatement	OPJ_UINT32 src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ] ;	406:8:12948:12989	9119	1	True				
ANR	9159	IdentifierDecl	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9119	0					
ANR	9160	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9161	Identifier	src1		9119	1					
ANR	9162	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9119	2		=			
ANR	9163	Identifier	src1		9119	0					
ANR	9164	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9119	1					
ANR	9165	CastTarget	OPJ_UINT32		9119	0					
ANR	9166	ArrayIndexing	pSrc [ i + 1 ]		9119	1					
ANR	9167	Identifier	pSrc		9119	0					
ANR	9168	AdditiveExpression	i + 1		9119	1		+			
ANR	9169	Identifier	i		9119	0					
ANR	9170	PrimaryExpression	1		9119	1					
ANR	9171	IdentifierDeclStatement	OPJ_UINT32 src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ] ;	407:8:12999:13040	9119	2	True				
ANR	9172	IdentifierDecl	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9119	0					
ANR	9173	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9174	Identifier	src2		9119	1					
ANR	9175	AssignmentExpression	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9119	2		=			
ANR	9176	Identifier	src2		9119	0					
ANR	9177	CastExpression	( OPJ_UINT32 ) pSrc [ i + 2 ]		9119	1					
ANR	9178	CastTarget	OPJ_UINT32		9119	0					
ANR	9179	ArrayIndexing	pSrc [ i + 2 ]		9119	1					
ANR	9180	Identifier	pSrc		9119	0					
ANR	9181	AdditiveExpression	i + 2		9119	1		+			
ANR	9182	Identifier	i		9119	0					
ANR	9183	PrimaryExpression	2		9119	1					
ANR	9184	IdentifierDeclStatement	OPJ_UINT32 src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ] ;	408:8:13050:13091	9119	3	True				
ANR	9185	IdentifierDecl	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9119	0					
ANR	9186	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9187	Identifier	src3		9119	1					
ANR	9188	AssignmentExpression	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9119	2		=			
ANR	9189	Identifier	src3		9119	0					
ANR	9190	CastExpression	( OPJ_UINT32 ) pSrc [ i + 3 ]		9119	1					
ANR	9191	CastTarget	OPJ_UINT32		9119	0					
ANR	9192	ArrayIndexing	pSrc [ i + 3 ]		9119	1					
ANR	9193	Identifier	pSrc		9119	0					
ANR	9194	AdditiveExpression	i + 3		9119	1		+			
ANR	9195	Identifier	i		9119	0					
ANR	9196	PrimaryExpression	3		9119	1					
ANR	9197	IdentifierDeclStatement	OPJ_UINT32 src4 = ( OPJ_UINT32 ) pSrc [ i + 4 ] ;	409:8:13101:13142	9119	4	True				
ANR	9198	IdentifierDecl	src4 = ( OPJ_UINT32 ) pSrc [ i + 4 ]		9119	0					
ANR	9199	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9200	Identifier	src4		9119	1					
ANR	9201	AssignmentExpression	src4 = ( OPJ_UINT32 ) pSrc [ i + 4 ]		9119	2		=			
ANR	9202	Identifier	src4		9119	0					
ANR	9203	CastExpression	( OPJ_UINT32 ) pSrc [ i + 4 ]		9119	1					
ANR	9204	CastTarget	OPJ_UINT32		9119	0					
ANR	9205	ArrayIndexing	pSrc [ i + 4 ]		9119	1					
ANR	9206	Identifier	pSrc		9119	0					
ANR	9207	AdditiveExpression	i + 4		9119	1		+			
ANR	9208	Identifier	i		9119	0					
ANR	9209	PrimaryExpression	4		9119	1					
ANR	9210	IdentifierDeclStatement	OPJ_UINT32 src5 = ( OPJ_UINT32 ) pSrc [ i + 5 ] ;	410:8:13152:13193	9119	5	True				
ANR	9211	IdentifierDecl	src5 = ( OPJ_UINT32 ) pSrc [ i + 5 ]		9119	0					
ANR	9212	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9213	Identifier	src5		9119	1					
ANR	9214	AssignmentExpression	src5 = ( OPJ_UINT32 ) pSrc [ i + 5 ]		9119	2		=			
ANR	9215	Identifier	src5		9119	0					
ANR	9216	CastExpression	( OPJ_UINT32 ) pSrc [ i + 5 ]		9119	1					
ANR	9217	CastTarget	OPJ_UINT32		9119	0					
ANR	9218	ArrayIndexing	pSrc [ i + 5 ]		9119	1					
ANR	9219	Identifier	pSrc		9119	0					
ANR	9220	AdditiveExpression	i + 5		9119	1		+			
ANR	9221	Identifier	i		9119	0					
ANR	9222	PrimaryExpression	5		9119	1					
ANR	9223	IdentifierDeclStatement	OPJ_UINT32 src6 = ( OPJ_UINT32 ) pSrc [ i + 6 ] ;	411:8:13203:13244	9119	6	True				
ANR	9224	IdentifierDecl	src6 = ( OPJ_UINT32 ) pSrc [ i + 6 ]		9119	0					
ANR	9225	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9226	Identifier	src6		9119	1					
ANR	9227	AssignmentExpression	src6 = ( OPJ_UINT32 ) pSrc [ i + 6 ]		9119	2		=			
ANR	9228	Identifier	src6		9119	0					
ANR	9229	CastExpression	( OPJ_UINT32 ) pSrc [ i + 6 ]		9119	1					
ANR	9230	CastTarget	OPJ_UINT32		9119	0					
ANR	9231	ArrayIndexing	pSrc [ i + 6 ]		9119	1					
ANR	9232	Identifier	pSrc		9119	0					
ANR	9233	AdditiveExpression	i + 6		9119	1		+			
ANR	9234	Identifier	i		9119	0					
ANR	9235	PrimaryExpression	6		9119	1					
ANR	9236	IdentifierDeclStatement	OPJ_UINT32 src7 = ( OPJ_UINT32 ) pSrc [ i + 7 ] ;	412:8:13254:13295	9119	7	True				
ANR	9237	IdentifierDecl	src7 = ( OPJ_UINT32 ) pSrc [ i + 7 ]		9119	0					
ANR	9238	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9239	Identifier	src7		9119	1					
ANR	9240	AssignmentExpression	src7 = ( OPJ_UINT32 ) pSrc [ i + 7 ]		9119	2		=			
ANR	9241	Identifier	src7		9119	0					
ANR	9242	CastExpression	( OPJ_UINT32 ) pSrc [ i + 7 ]		9119	1					
ANR	9243	CastTarget	OPJ_UINT32		9119	0					
ANR	9244	ArrayIndexing	pSrc [ i + 7 ]		9119	1					
ANR	9245	Identifier	pSrc		9119	0					
ANR	9246	AdditiveExpression	i + 7		9119	1		+			
ANR	9247	Identifier	i		9119	0					
ANR	9248	PrimaryExpression	7		9119	1					
ANR	9249	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7 )	414:8:13306:13459	9119	8	True				
ANR	9250	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7 )		9119	0		=			
ANR	9251	UnaryOperationExpression	* pDst ++		9119	0					
ANR	9252	UnaryOperator	*		9119	0					
ANR	9253	PostIncDecOperationExpression	pDst ++		9119	1					
ANR	9254	Identifier	pDst		9119	0					
ANR	9255	IncDec	++		9119	1					
ANR	9256	CastExpression	( OPJ_BYTE ) ( ( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7 )		9119	1					
ANR	9257	CastTarget	OPJ_BYTE		9119	0					
ANR	9258	InclusiveOrExpression	( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7		9119	1		|			
ANR	9259	ShiftExpression	src0 << 7		9119	0		<<			
ANR	9260	Identifier	src0		9119	0					
ANR	9261	PrimaryExpression	7		9119	1					
ANR	9262	InclusiveOrExpression	( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7		9119	1		|			
ANR	9263	ShiftExpression	src1 << 6		9119	0		<<			
ANR	9264	Identifier	src1		9119	0					
ANR	9265	PrimaryExpression	6		9119	1					
ANR	9266	InclusiveOrExpression	( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7		9119	1		|			
ANR	9267	ShiftExpression	src2 << 5		9119	0		<<			
ANR	9268	Identifier	src2		9119	0					
ANR	9269	PrimaryExpression	5		9119	1					
ANR	9270	InclusiveOrExpression	( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7		9119	1		|			
ANR	9271	ShiftExpression	src3 << 4		9119	0		<<			
ANR	9272	Identifier	src3		9119	0					
ANR	9273	PrimaryExpression	4		9119	1					
ANR	9274	InclusiveOrExpression	( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) | src7		9119	1		|			
ANR	9275	ShiftExpression	src4 << 3		9119	0		<<			
ANR	9276	Identifier	src4		9119	0					
ANR	9277	PrimaryExpression	3		9119	1					
ANR	9278	InclusiveOrExpression	( src5 << 2 ) | ( src6 << 1 ) | src7		9119	1		|			
ANR	9279	ShiftExpression	src5 << 2		9119	0		<<			
ANR	9280	Identifier	src5		9119	0					
ANR	9281	PrimaryExpression	2		9119	1					
ANR	9282	InclusiveOrExpression	( src6 << 1 ) | src7		9119	1		|			
ANR	9283	ShiftExpression	src6 << 1		9119	0		<<			
ANR	9284	Identifier	src6		9119	0					
ANR	9285	PrimaryExpression	1		9119	1					
ANR	9286	Identifier	src7		9119	1					
ANR	9287	IfStatement	if ( length & 7U )		9119	2					
ANR	9288	Condition	length & 7U	418:8:13476:13486	9119	0	True				
ANR	9289	BitAndExpression	length & 7U		9119	0		&			
ANR	9290	Identifier	length		9119	0					
ANR	9291	PrimaryExpression	7U		9119	1					
ANR	9292	CompoundStatement		24:8:889:909	9119	1					
ANR	9293	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	419:8:13499:13540	9119	0	True				
ANR	9294	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9119	0					
ANR	9295	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9296	Identifier	src0		9119	1					
ANR	9297	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9119	2		=			
ANR	9298	Identifier	src0		9119	0					
ANR	9299	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9119	1					
ANR	9300	CastTarget	OPJ_UINT32		9119	0					
ANR	9301	ArrayIndexing	pSrc [ i + 0 ]		9119	1					
ANR	9302	Identifier	pSrc		9119	0					
ANR	9303	AdditiveExpression	i + 0		9119	1		+			
ANR	9304	Identifier	i		9119	0					
ANR	9305	PrimaryExpression	0		9119	1					
ANR	9306	IdentifierDeclStatement	OPJ_UINT32 src1 = 0U ;	420:8:13550:13570	9119	1	True				
ANR	9307	IdentifierDecl	src1 = 0U		9119	0					
ANR	9308	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9309	Identifier	src1		9119	1					
ANR	9310	AssignmentExpression	src1 = 0U		9119	2		=			
ANR	9311	Identifier	src1		9119	0					
ANR	9312	PrimaryExpression	0U		9119	1					
ANR	9313	IdentifierDeclStatement	OPJ_UINT32 src2 = 0U ;	421:8:13580:13600	9119	2	True				
ANR	9314	IdentifierDecl	src2 = 0U		9119	0					
ANR	9315	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9316	Identifier	src2		9119	1					
ANR	9317	AssignmentExpression	src2 = 0U		9119	2		=			
ANR	9318	Identifier	src2		9119	0					
ANR	9319	PrimaryExpression	0U		9119	1					
ANR	9320	IdentifierDeclStatement	OPJ_UINT32 src3 = 0U ;	422:8:13610:13630	9119	3	True				
ANR	9321	IdentifierDecl	src3 = 0U		9119	0					
ANR	9322	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9323	Identifier	src3		9119	1					
ANR	9324	AssignmentExpression	src3 = 0U		9119	2		=			
ANR	9325	Identifier	src3		9119	0					
ANR	9326	PrimaryExpression	0U		9119	1					
ANR	9327	IdentifierDeclStatement	OPJ_UINT32 src4 = 0U ;	423:8:13640:13660	9119	4	True				
ANR	9328	IdentifierDecl	src4 = 0U		9119	0					
ANR	9329	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9330	Identifier	src4		9119	1					
ANR	9331	AssignmentExpression	src4 = 0U		9119	2		=			
ANR	9332	Identifier	src4		9119	0					
ANR	9333	PrimaryExpression	0U		9119	1					
ANR	9334	IdentifierDeclStatement	OPJ_UINT32 src5 = 0U ;	424:8:13670:13690	9119	5	True				
ANR	9335	IdentifierDecl	src5 = 0U		9119	0					
ANR	9336	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9337	Identifier	src5		9119	1					
ANR	9338	AssignmentExpression	src5 = 0U		9119	2		=			
ANR	9339	Identifier	src5		9119	0					
ANR	9340	PrimaryExpression	0U		9119	1					
ANR	9341	IdentifierDeclStatement	OPJ_UINT32 src6 = 0U ;	425:8:13700:13720	9119	6	True				
ANR	9342	IdentifierDecl	src6 = 0U		9119	0					
ANR	9343	IdentifierDeclType	OPJ_UINT32		9119	0					
ANR	9344	Identifier	src6		9119	1					
ANR	9345	AssignmentExpression	src6 = 0U		9119	2		=			
ANR	9346	Identifier	src6		9119	0					
ANR	9347	PrimaryExpression	0U		9119	1					
ANR	9348	ExpressionStatement	length = length & 7U	426:8:13730:13750	9119	7	True				
ANR	9349	AssignmentExpression	length = length & 7U		9119	0		=			
ANR	9350	Identifier	length		9119	0					
ANR	9351	BitAndExpression	length & 7U		9119	1		&			
ANR	9352	Identifier	length		9119	0					
ANR	9353	PrimaryExpression	7U		9119	1					
ANR	9354	IfStatement	if ( length > 1U )		9119	8					
ANR	9355	Condition	length > 1U	428:12:13765:13775	9119	0	True				
ANR	9356	RelationalExpression	length > 1U		9119	0		>			
ANR	9357	Identifier	length		9119	0					
ANR	9358	PrimaryExpression	1U		9119	1					
ANR	9359	CompoundStatement		27:25:967:967	9119	1					
ANR	9360	ExpressionStatement	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]	429:12:13792:13822	9119	0	True				
ANR	9361	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9119	0		=			
ANR	9362	Identifier	src1		9119	0					
ANR	9363	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9119	1					
ANR	9364	CastTarget	OPJ_UINT32		9119	0					
ANR	9365	ArrayIndexing	pSrc [ i + 1 ]		9119	1					
ANR	9366	Identifier	pSrc		9119	0					
ANR	9367	AdditiveExpression	i + 1		9119	1		+			
ANR	9368	Identifier	i		9119	0					
ANR	9369	PrimaryExpression	1		9119	1					
ANR	9370	IfStatement	if ( length > 2U )		9119	1					
ANR	9371	Condition	length > 2U	430:16:13840:13850	9119	0	True				
ANR	9372	RelationalExpression	length > 2U		9119	0		>			
ANR	9373	Identifier	length		9119	0					
ANR	9374	PrimaryExpression	2U		9119	1					
ANR	9375	CompoundStatement		29:29:1042:1042	9119	1					
ANR	9376	ExpressionStatement	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]	431:16:13871:13901	9119	0	True				
ANR	9377	AssignmentExpression	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9119	0		=			
ANR	9378	Identifier	src2		9119	0					
ANR	9379	CastExpression	( OPJ_UINT32 ) pSrc [ i + 2 ]		9119	1					
ANR	9380	CastTarget	OPJ_UINT32		9119	0					
ANR	9381	ArrayIndexing	pSrc [ i + 2 ]		9119	1					
ANR	9382	Identifier	pSrc		9119	0					
ANR	9383	AdditiveExpression	i + 2		9119	1		+			
ANR	9384	Identifier	i		9119	0					
ANR	9385	PrimaryExpression	2		9119	1					
ANR	9386	IfStatement	if ( length > 3U )		9119	1					
ANR	9387	Condition	length > 3U	432:20:13923:13933	9119	0	True				
ANR	9388	RelationalExpression	length > 3U		9119	0		>			
ANR	9389	Identifier	length		9119	0					
ANR	9390	PrimaryExpression	3U		9119	1					
ANR	9391	CompoundStatement		31:33:1125:1125	9119	1					
ANR	9392	ExpressionStatement	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]	433:20:13958:13988	9119	0	True				
ANR	9393	AssignmentExpression	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9119	0		=			
ANR	9394	Identifier	src3		9119	0					
ANR	9395	CastExpression	( OPJ_UINT32 ) pSrc [ i + 3 ]		9119	1					
ANR	9396	CastTarget	OPJ_UINT32		9119	0					
ANR	9397	ArrayIndexing	pSrc [ i + 3 ]		9119	1					
ANR	9398	Identifier	pSrc		9119	0					
ANR	9399	AdditiveExpression	i + 3		9119	1		+			
ANR	9400	Identifier	i		9119	0					
ANR	9401	PrimaryExpression	3		9119	1					
ANR	9402	IfStatement	if ( length > 4U )		9119	1					
ANR	9403	Condition	length > 4U	434:24:14014:14024	9119	0	True				
ANR	9404	RelationalExpression	length > 4U		9119	0		>			
ANR	9405	Identifier	length		9119	0					
ANR	9406	PrimaryExpression	4U		9119	1					
ANR	9407	CompoundStatement		33:37:1216:1216	9119	1					
ANR	9408	ExpressionStatement	src4 = ( OPJ_UINT32 ) pSrc [ i + 4 ]	435:24:14053:14083	9119	0	True				
ANR	9409	AssignmentExpression	src4 = ( OPJ_UINT32 ) pSrc [ i + 4 ]		9119	0		=			
ANR	9410	Identifier	src4		9119	0					
ANR	9411	CastExpression	( OPJ_UINT32 ) pSrc [ i + 4 ]		9119	1					
ANR	9412	CastTarget	OPJ_UINT32		9119	0					
ANR	9413	ArrayIndexing	pSrc [ i + 4 ]		9119	1					
ANR	9414	Identifier	pSrc		9119	0					
ANR	9415	AdditiveExpression	i + 4		9119	1		+			
ANR	9416	Identifier	i		9119	0					
ANR	9417	PrimaryExpression	4		9119	1					
ANR	9418	IfStatement	if ( length > 5U )		9119	1					
ANR	9419	Condition	length > 5U	436:28:14113:14123	9119	0	True				
ANR	9420	RelationalExpression	length > 5U		9119	0		>			
ANR	9421	Identifier	length		9119	0					
ANR	9422	PrimaryExpression	5U		9119	1					
ANR	9423	CompoundStatement		35:41:1315:1315	9119	1					
ANR	9424	ExpressionStatement	src5 = ( OPJ_UINT32 ) pSrc [ i + 5 ]	437:28:14156:14186	9119	0	True				
ANR	9425	AssignmentExpression	src5 = ( OPJ_UINT32 ) pSrc [ i + 5 ]		9119	0		=			
ANR	9426	Identifier	src5		9119	0					
ANR	9427	CastExpression	( OPJ_UINT32 ) pSrc [ i + 5 ]		9119	1					
ANR	9428	CastTarget	OPJ_UINT32		9119	0					
ANR	9429	ArrayIndexing	pSrc [ i + 5 ]		9119	1					
ANR	9430	Identifier	pSrc		9119	0					
ANR	9431	AdditiveExpression	i + 5		9119	1		+			
ANR	9432	Identifier	i		9119	0					
ANR	9433	PrimaryExpression	5		9119	1					
ANR	9434	IfStatement	if ( length > 6U )		9119	1					
ANR	9435	Condition	length > 6U	438:32:14220:14230	9119	0	True				
ANR	9436	RelationalExpression	length > 6U		9119	0		>			
ANR	9437	Identifier	length		9119	0					
ANR	9438	PrimaryExpression	6U		9119	1					
ANR	9439	CompoundStatement		37:45:1422:1422	9119	1					
ANR	9440	ExpressionStatement	src6 = ( OPJ_UINT32 ) pSrc [ i + 6 ]	439:32:14267:14297	9119	0	True				
ANR	9441	AssignmentExpression	src6 = ( OPJ_UINT32 ) pSrc [ i + 6 ]		9119	0		=			
ANR	9442	Identifier	src6		9119	0					
ANR	9443	CastExpression	( OPJ_UINT32 ) pSrc [ i + 6 ]		9119	1					
ANR	9444	CastTarget	OPJ_UINT32		9119	0					
ANR	9445	ArrayIndexing	pSrc [ i + 6 ]		9119	1					
ANR	9446	Identifier	pSrc		9119	0					
ANR	9447	AdditiveExpression	i + 6		9119	1		+			
ANR	9448	Identifier	i		9119	0					
ANR	9449	PrimaryExpression	6		9119	1					
ANR	9450	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) )	446:8:14427:14573	9119	9	True				
ANR	9451	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) )		9119	0		=			
ANR	9452	UnaryOperationExpression	* pDst ++		9119	0					
ANR	9453	UnaryOperator	*		9119	0					
ANR	9454	PostIncDecOperationExpression	pDst ++		9119	1					
ANR	9455	Identifier	pDst		9119	0					
ANR	9456	IncDec	++		9119	1					
ANR	9457	CastExpression	( OPJ_BYTE ) ( ( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 ) )		9119	1					
ANR	9458	CastTarget	OPJ_BYTE		9119	0					
ANR	9459	InclusiveOrExpression	( src0 << 7 ) | ( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 )		9119	1		|			
ANR	9460	ShiftExpression	src0 << 7		9119	0		<<			
ANR	9461	Identifier	src0		9119	0					
ANR	9462	PrimaryExpression	7		9119	1					
ANR	9463	InclusiveOrExpression	( src1 << 6 ) | ( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 )		9119	1		|			
ANR	9464	ShiftExpression	src1 << 6		9119	0		<<			
ANR	9465	Identifier	src1		9119	0					
ANR	9466	PrimaryExpression	6		9119	1					
ANR	9467	InclusiveOrExpression	( src2 << 5 ) | ( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 )		9119	1		|			
ANR	9468	ShiftExpression	src2 << 5		9119	0		<<			
ANR	9469	Identifier	src2		9119	0					
ANR	9470	PrimaryExpression	5		9119	1					
ANR	9471	InclusiveOrExpression	( src3 << 4 ) | ( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 )		9119	1		|			
ANR	9472	ShiftExpression	src3 << 4		9119	0		<<			
ANR	9473	Identifier	src3		9119	0					
ANR	9474	PrimaryExpression	4		9119	1					
ANR	9475	InclusiveOrExpression	( src4 << 3 ) | ( src5 << 2 ) | ( src6 << 1 )		9119	1		|			
ANR	9476	ShiftExpression	src4 << 3		9119	0		<<			
ANR	9477	Identifier	src4		9119	0					
ANR	9478	PrimaryExpression	3		9119	1					
ANR	9479	InclusiveOrExpression	( src5 << 2 ) | ( src6 << 1 )		9119	1		|			
ANR	9480	ShiftExpression	src5 << 2		9119	0		<<			
ANR	9481	Identifier	src5		9119	0					
ANR	9482	PrimaryExpression	2		9119	1					
ANR	9483	ShiftExpression	src6 << 1		9119	1		<<			
ANR	9484	Identifier	src6		9119	0					
ANR	9485	PrimaryExpression	1		9119	1					
ANR	9486	ReturnType	static void		9119	1					
ANR	9487	Identifier	convert_32s1u_C1R		9119	2					
ANR	9488	ParameterList	"const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length"		9119	3					
ANR	9489	Parameter	const OPJ_INT32 * pSrc	400:30:12722:12742	9119	0	True				
ANR	9490	ParameterType	const OPJ_INT32 *		9119	0					
ANR	9491	Identifier	pSrc		9119	1					
ANR	9492	Parameter	OPJ_BYTE * pDst	400:53:12745:12758	9119	1	True				
ANR	9493	ParameterType	OPJ_BYTE *		9119	0					
ANR	9494	Identifier	pDst		9119	1					
ANR	9495	Parameter	OPJ_SIZE_T length	401:30:12791:12807	9119	2	True				
ANR	9496	ParameterType	OPJ_SIZE_T		9119	0					
ANR	9497	Identifier	length		9119	1					
ANR	9498	CFGEntryNode	ENTRY		9119		True				
ANR	9499	CFGExitNode	EXIT		9119		True				
ANR	9500	Symbol	pSrc		9119						
ANR	9501	Symbol	src5		9119						
ANR	9502	Symbol	src4		9119						
ANR	9503	Symbol	pDst		9119						
ANR	9504	Symbol	src7		9119						
ANR	9505	Symbol	src6		9119						
ANR	9506	Symbol	length		9119						
ANR	9507	Symbol	* pSrc		9119						
ANR	9508	Symbol	i		9119						
ANR	9509	Symbol	* i		9119						
ANR	9510	Symbol	src1		9119						
ANR	9511	Symbol	* pDst ++		9119						
ANR	9512	Symbol	src0		9119						
ANR	9513	Symbol	src3		9119						
ANR	9514	Symbol	src2		9119						
ANR	9515	Function	convert_32s2u_C1R	451:0:14584:15487							
ANR	9516	FunctionDef	"convert_32s2u_C1R (const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length)"		9515	0					
ANR	9517	CompoundStatement		453:0:14702:15487	9515	0					
ANR	9518	IdentifierDeclStatement	OPJ_SIZE_T i ;	454:4:14708:14720	9515	0	True				
ANR	9519	IdentifierDecl	i		9515	0					
ANR	9520	IdentifierDeclType	OPJ_SIZE_T		9515	0					
ANR	9521	Identifier	i		9515	1					
ANR	9522	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 3U ) ; i += 4U )		9515	1					
ANR	9523	ForInit	i = 0 ;	455:9:14731:14736	9515	0	True				
ANR	9524	AssignmentExpression	i = 0		9515	0		=			
ANR	9525	Identifier	i		9515	0					
ANR	9526	PrimaryExpression	0		9515	1					
ANR	9527	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 3U )	455:16:14738:14767	9515	1	True				
ANR	9528	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 3U )		9515	0		<			
ANR	9529	Identifier	i		9515	0					
ANR	9530	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 3U		9515	1		&			
ANR	9531	Identifier	length		9515	0					
ANR	9532	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 3U		9515	1					
ANR	9533	UnaryOperator	~		9515	0					
ANR	9534	CastExpression	( OPJ_SIZE_T ) 3U		9515	1					
ANR	9535	CastTarget	OPJ_SIZE_T		9515	0					
ANR	9536	PrimaryExpression	3U		9515	1					
ANR	9537	AssignmentExpression	i += 4U	455:48:14770:14776	9515	2	True	+=			
ANR	9538	Identifier	i		9515	0					
ANR	9539	PrimaryExpression	4U		9515	1					
ANR	9540	CompoundStatement		7:8:239:280	9515	3					
ANR	9541	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	456:8:14789:14830	9515	0	True				
ANR	9542	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9515	0					
ANR	9543	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9544	Identifier	src0		9515	1					
ANR	9545	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9515	2		=			
ANR	9546	Identifier	src0		9515	0					
ANR	9547	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9515	1					
ANR	9548	CastTarget	OPJ_UINT32		9515	0					
ANR	9549	ArrayIndexing	pSrc [ i + 0 ]		9515	1					
ANR	9550	Identifier	pSrc		9515	0					
ANR	9551	AdditiveExpression	i + 0		9515	1		+			
ANR	9552	Identifier	i		9515	0					
ANR	9553	PrimaryExpression	0		9515	1					
ANR	9554	IdentifierDeclStatement	OPJ_UINT32 src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ] ;	457:8:14840:14881	9515	1	True				
ANR	9555	IdentifierDecl	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9515	0					
ANR	9556	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9557	Identifier	src1		9515	1					
ANR	9558	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9515	2		=			
ANR	9559	Identifier	src1		9515	0					
ANR	9560	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9515	1					
ANR	9561	CastTarget	OPJ_UINT32		9515	0					
ANR	9562	ArrayIndexing	pSrc [ i + 1 ]		9515	1					
ANR	9563	Identifier	pSrc		9515	0					
ANR	9564	AdditiveExpression	i + 1		9515	1		+			
ANR	9565	Identifier	i		9515	0					
ANR	9566	PrimaryExpression	1		9515	1					
ANR	9567	IdentifierDeclStatement	OPJ_UINT32 src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ] ;	458:8:14891:14932	9515	2	True				
ANR	9568	IdentifierDecl	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9515	0					
ANR	9569	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9570	Identifier	src2		9515	1					
ANR	9571	AssignmentExpression	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9515	2		=			
ANR	9572	Identifier	src2		9515	0					
ANR	9573	CastExpression	( OPJ_UINT32 ) pSrc [ i + 2 ]		9515	1					
ANR	9574	CastTarget	OPJ_UINT32		9515	0					
ANR	9575	ArrayIndexing	pSrc [ i + 2 ]		9515	1					
ANR	9576	Identifier	pSrc		9515	0					
ANR	9577	AdditiveExpression	i + 2		9515	1		+			
ANR	9578	Identifier	i		9515	0					
ANR	9579	PrimaryExpression	2		9515	1					
ANR	9580	IdentifierDeclStatement	OPJ_UINT32 src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ] ;	459:8:14942:14983	9515	3	True				
ANR	9581	IdentifierDecl	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9515	0					
ANR	9582	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9583	Identifier	src3		9515	1					
ANR	9584	AssignmentExpression	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9515	2		=			
ANR	9585	Identifier	src3		9515	0					
ANR	9586	CastExpression	( OPJ_UINT32 ) pSrc [ i + 3 ]		9515	1					
ANR	9587	CastTarget	OPJ_UINT32		9515	0					
ANR	9588	ArrayIndexing	pSrc [ i + 3 ]		9515	1					
ANR	9589	Identifier	pSrc		9515	0					
ANR	9590	AdditiveExpression	i + 3		9515	1		+			
ANR	9591	Identifier	i		9515	0					
ANR	9592	PrimaryExpression	3		9515	1					
ANR	9593	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) | src3 )	461:8:14994:15062	9515	4	True				
ANR	9594	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) | src3 )		9515	0		=			
ANR	9595	UnaryOperationExpression	* pDst ++		9515	0					
ANR	9596	UnaryOperator	*		9515	0					
ANR	9597	PostIncDecOperationExpression	pDst ++		9515	1					
ANR	9598	Identifier	pDst		9515	0					
ANR	9599	IncDec	++		9515	1					
ANR	9600	CastExpression	( OPJ_BYTE ) ( ( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) | src3 )		9515	1					
ANR	9601	CastTarget	OPJ_BYTE		9515	0					
ANR	9602	InclusiveOrExpression	( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) | src3		9515	1		|			
ANR	9603	ShiftExpression	src0 << 6		9515	0		<<			
ANR	9604	Identifier	src0		9515	0					
ANR	9605	PrimaryExpression	6		9515	1					
ANR	9606	InclusiveOrExpression	( src1 << 4 ) | ( src2 << 2 ) | src3		9515	1		|			
ANR	9607	ShiftExpression	src1 << 4		9515	0		<<			
ANR	9608	Identifier	src1		9515	0					
ANR	9609	PrimaryExpression	4		9515	1					
ANR	9610	InclusiveOrExpression	( src2 << 2 ) | src3		9515	1		|			
ANR	9611	ShiftExpression	src2 << 2		9515	0		<<			
ANR	9612	Identifier	src2		9515	0					
ANR	9613	PrimaryExpression	2		9515	1					
ANR	9614	Identifier	src3		9515	1					
ANR	9615	IfStatement	if ( length & 3U )		9515	2					
ANR	9616	Condition	length & 3U	464:8:15079:15089	9515	0	True				
ANR	9617	BitAndExpression	length & 3U		9515	0		&			
ANR	9618	Identifier	length		9515	0					
ANR	9619	PrimaryExpression	3U		9515	1					
ANR	9620	CompoundStatement		15:8:480:500	9515	1					
ANR	9621	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	465:8:15102:15143	9515	0	True				
ANR	9622	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9515	0					
ANR	9623	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9624	Identifier	src0		9515	1					
ANR	9625	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9515	2		=			
ANR	9626	Identifier	src0		9515	0					
ANR	9627	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9515	1					
ANR	9628	CastTarget	OPJ_UINT32		9515	0					
ANR	9629	ArrayIndexing	pSrc [ i + 0 ]		9515	1					
ANR	9630	Identifier	pSrc		9515	0					
ANR	9631	AdditiveExpression	i + 0		9515	1		+			
ANR	9632	Identifier	i		9515	0					
ANR	9633	PrimaryExpression	0		9515	1					
ANR	9634	IdentifierDeclStatement	OPJ_UINT32 src1 = 0U ;	466:8:15153:15173	9515	1	True				
ANR	9635	IdentifierDecl	src1 = 0U		9515	0					
ANR	9636	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9637	Identifier	src1		9515	1					
ANR	9638	AssignmentExpression	src1 = 0U		9515	2		=			
ANR	9639	Identifier	src1		9515	0					
ANR	9640	PrimaryExpression	0U		9515	1					
ANR	9641	IdentifierDeclStatement	OPJ_UINT32 src2 = 0U ;	467:8:15183:15203	9515	2	True				
ANR	9642	IdentifierDecl	src2 = 0U		9515	0					
ANR	9643	IdentifierDeclType	OPJ_UINT32		9515	0					
ANR	9644	Identifier	src2		9515	1					
ANR	9645	AssignmentExpression	src2 = 0U		9515	2		=			
ANR	9646	Identifier	src2		9515	0					
ANR	9647	PrimaryExpression	0U		9515	1					
ANR	9648	ExpressionStatement	length = length & 3U	468:8:15213:15233	9515	3	True				
ANR	9649	AssignmentExpression	length = length & 3U		9515	0		=			
ANR	9650	Identifier	length		9515	0					
ANR	9651	BitAndExpression	length & 3U		9515	1		&			
ANR	9652	Identifier	length		9515	0					
ANR	9653	PrimaryExpression	3U		9515	1					
ANR	9654	IfStatement	if ( length > 1U )		9515	4					
ANR	9655	Condition	length > 1U	470:12:15248:15258	9515	0	True				
ANR	9656	RelationalExpression	length > 1U		9515	0		>			
ANR	9657	Identifier	length		9515	0					
ANR	9658	PrimaryExpression	1U		9515	1					
ANR	9659	CompoundStatement		18:25:558:558	9515	1					
ANR	9660	ExpressionStatement	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]	471:12:15275:15305	9515	0	True				
ANR	9661	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9515	0		=			
ANR	9662	Identifier	src1		9515	0					
ANR	9663	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9515	1					
ANR	9664	CastTarget	OPJ_UINT32		9515	0					
ANR	9665	ArrayIndexing	pSrc [ i + 1 ]		9515	1					
ANR	9666	Identifier	pSrc		9515	0					
ANR	9667	AdditiveExpression	i + 1		9515	1		+			
ANR	9668	Identifier	i		9515	0					
ANR	9669	PrimaryExpression	1		9515	1					
ANR	9670	IfStatement	if ( length > 2U )		9515	1					
ANR	9671	Condition	length > 2U	472:16:15323:15333	9515	0	True				
ANR	9672	RelationalExpression	length > 2U		9515	0		>			
ANR	9673	Identifier	length		9515	0					
ANR	9674	PrimaryExpression	2U		9515	1					
ANR	9675	CompoundStatement		20:29:633:633	9515	1					
ANR	9676	ExpressionStatement	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]	473:16:15354:15384	9515	0	True				
ANR	9677	AssignmentExpression	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9515	0		=			
ANR	9678	Identifier	src2		9515	0					
ANR	9679	CastExpression	( OPJ_UINT32 ) pSrc [ i + 2 ]		9515	1					
ANR	9680	CastTarget	OPJ_UINT32		9515	0					
ANR	9681	ArrayIndexing	pSrc [ i + 2 ]		9515	1					
ANR	9682	Identifier	pSrc		9515	0					
ANR	9683	AdditiveExpression	i + 2		9515	1		+			
ANR	9684	Identifier	i		9515	0					
ANR	9685	PrimaryExpression	2		9515	1					
ANR	9686	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) )	476:8:15418:15479	9515	5	True				
ANR	9687	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) )		9515	0		=			
ANR	9688	UnaryOperationExpression	* pDst ++		9515	0					
ANR	9689	UnaryOperator	*		9515	0					
ANR	9690	PostIncDecOperationExpression	pDst ++		9515	1					
ANR	9691	Identifier	pDst		9515	0					
ANR	9692	IncDec	++		9515	1					
ANR	9693	CastExpression	( OPJ_BYTE ) ( ( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 ) )		9515	1					
ANR	9694	CastTarget	OPJ_BYTE		9515	0					
ANR	9695	InclusiveOrExpression	( src0 << 6 ) | ( src1 << 4 ) | ( src2 << 2 )		9515	1		|			
ANR	9696	ShiftExpression	src0 << 6		9515	0		<<			
ANR	9697	Identifier	src0		9515	0					
ANR	9698	PrimaryExpression	6		9515	1					
ANR	9699	InclusiveOrExpression	( src1 << 4 ) | ( src2 << 2 )		9515	1		|			
ANR	9700	ShiftExpression	src1 << 4		9515	0		<<			
ANR	9701	Identifier	src1		9515	0					
ANR	9702	PrimaryExpression	4		9515	1					
ANR	9703	ShiftExpression	src2 << 2		9515	1		<<			
ANR	9704	Identifier	src2		9515	0					
ANR	9705	PrimaryExpression	2		9515	1					
ANR	9706	ReturnType	static void		9515	1					
ANR	9707	Identifier	convert_32s2u_C1R		9515	2					
ANR	9708	ParameterList	"const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length"		9515	3					
ANR	9709	Parameter	const OPJ_INT32 * pSrc	451:30:14614:14634	9515	0	True				
ANR	9710	ParameterType	const OPJ_INT32 *		9515	0					
ANR	9711	Identifier	pSrc		9515	1					
ANR	9712	Parameter	OPJ_BYTE * pDst	451:53:14637:14650	9515	1	True				
ANR	9713	ParameterType	OPJ_BYTE *		9515	0					
ANR	9714	Identifier	pDst		9515	1					
ANR	9715	Parameter	OPJ_SIZE_T length	452:30:14683:14699	9515	2	True				
ANR	9716	ParameterType	OPJ_SIZE_T		9515	0					
ANR	9717	Identifier	length		9515	1					
ANR	9718	CFGEntryNode	ENTRY		9515		True				
ANR	9719	CFGExitNode	EXIT		9515		True				
ANR	9720	Symbol	pSrc		9515						
ANR	9721	Symbol	* i		9515						
ANR	9722	Symbol	pDst		9515						
ANR	9723	Symbol	length		9515						
ANR	9724	Symbol	* pSrc		9515						
ANR	9725	Symbol	src1		9515						
ANR	9726	Symbol	* pDst ++		9515						
ANR	9727	Symbol	i		9515						
ANR	9728	Symbol	src0		9515						
ANR	9729	Symbol	src3		9515						
ANR	9730	Symbol	src2		9515						
ANR	9731	Function	convert_32s4u_C1R	480:0:15490:15970							
ANR	9732	FunctionDef	"convert_32s4u_C1R (const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length)"		9731	0					
ANR	9733	CompoundStatement		482:0:15608:15970	9731	0					
ANR	9734	IdentifierDeclStatement	OPJ_SIZE_T i ;	483:4:15614:15626	9731	0	True				
ANR	9735	IdentifierDecl	i		9731	0					
ANR	9736	IdentifierDeclType	OPJ_SIZE_T		9731	0					
ANR	9737	Identifier	i		9731	1					
ANR	9738	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 1U ) ; i += 2U )		9731	1					
ANR	9739	ForInit	i = 0 ;	484:9:15637:15642	9731	0	True				
ANR	9740	AssignmentExpression	i = 0		9731	0		=			
ANR	9741	Identifier	i		9731	0					
ANR	9742	PrimaryExpression	0		9731	1					
ANR	9743	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 1U )	484:16:15644:15673	9731	1	True				
ANR	9744	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 1U )		9731	0		<			
ANR	9745	Identifier	i		9731	0					
ANR	9746	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 1U		9731	1		&			
ANR	9747	Identifier	length		9731	0					
ANR	9748	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 1U		9731	1					
ANR	9749	UnaryOperator	~		9731	0					
ANR	9750	CastExpression	( OPJ_SIZE_T ) 1U		9731	1					
ANR	9751	CastTarget	OPJ_SIZE_T		9731	0					
ANR	9752	PrimaryExpression	1U		9731	1					
ANR	9753	AssignmentExpression	i += 2U	484:48:15676:15682	9731	2	True	+=			
ANR	9754	Identifier	i		9731	0					
ANR	9755	PrimaryExpression	2U		9731	1					
ANR	9756	CompoundStatement		5:8:137:178	9731	3					
ANR	9757	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	485:8:15695:15736	9731	0	True				
ANR	9758	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9731	0					
ANR	9759	IdentifierDeclType	OPJ_UINT32		9731	0					
ANR	9760	Identifier	src0		9731	1					
ANR	9761	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9731	2		=			
ANR	9762	Identifier	src0		9731	0					
ANR	9763	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9731	1					
ANR	9764	CastTarget	OPJ_UINT32		9731	0					
ANR	9765	ArrayIndexing	pSrc [ i + 0 ]		9731	1					
ANR	9766	Identifier	pSrc		9731	0					
ANR	9767	AdditiveExpression	i + 0		9731	1		+			
ANR	9768	Identifier	i		9731	0					
ANR	9769	PrimaryExpression	0		9731	1					
ANR	9770	IdentifierDeclStatement	OPJ_UINT32 src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ] ;	486:8:15746:15787	9731	1	True				
ANR	9771	IdentifierDecl	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9731	0					
ANR	9772	IdentifierDeclType	OPJ_UINT32		9731	0					
ANR	9773	Identifier	src1		9731	1					
ANR	9774	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9731	2		=			
ANR	9775	Identifier	src1		9731	0					
ANR	9776	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9731	1					
ANR	9777	CastTarget	OPJ_UINT32		9731	0					
ANR	9778	ArrayIndexing	pSrc [ i + 1 ]		9731	1					
ANR	9779	Identifier	pSrc		9731	0					
ANR	9780	AdditiveExpression	i + 1		9731	1		+			
ANR	9781	Identifier	i		9731	0					
ANR	9782	PrimaryExpression	1		9731	1					
ANR	9783	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 4 ) | src1 )	488:8:15798:15838	9731	2	True				
ANR	9784	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 4 ) | src1 )		9731	0		=			
ANR	9785	UnaryOperationExpression	* pDst ++		9731	0					
ANR	9786	UnaryOperator	*		9731	0					
ANR	9787	PostIncDecOperationExpression	pDst ++		9731	1					
ANR	9788	Identifier	pDst		9731	0					
ANR	9789	IncDec	++		9731	1					
ANR	9790	CastExpression	( OPJ_BYTE ) ( ( src0 << 4 ) | src1 )		9731	1					
ANR	9791	CastTarget	OPJ_BYTE		9731	0					
ANR	9792	InclusiveOrExpression	( src0 << 4 ) | src1		9731	1		|			
ANR	9793	ShiftExpression	src0 << 4		9731	0		<<			
ANR	9794	Identifier	src0		9731	0					
ANR	9795	PrimaryExpression	4		9731	1					
ANR	9796	Identifier	src1		9731	1					
ANR	9797	IfStatement	if ( length & 1U )		9731	2					
ANR	9798	Condition	length & 1U	491:8:15855:15865	9731	0	True				
ANR	9799	BitAndExpression	length & 1U		9731	0		&			
ANR	9800	Identifier	length		9731	0					
ANR	9801	PrimaryExpression	1U		9731	1					
ANR	9802	CompoundStatement		11:8:269:310	9731	1					
ANR	9803	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	492:8:15878:15919	9731	0	True				
ANR	9804	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9731	0					
ANR	9805	IdentifierDeclType	OPJ_UINT32		9731	0					
ANR	9806	Identifier	src0		9731	1					
ANR	9807	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9731	2		=			
ANR	9808	Identifier	src0		9731	0					
ANR	9809	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9731	1					
ANR	9810	CastTarget	OPJ_UINT32		9731	0					
ANR	9811	ArrayIndexing	pSrc [ i + 0 ]		9731	1					
ANR	9812	Identifier	pSrc		9731	0					
ANR	9813	AdditiveExpression	i + 0		9731	1		+			
ANR	9814	Identifier	i		9731	0					
ANR	9815	PrimaryExpression	0		9731	1					
ANR	9816	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 4 ) )	493:8:15929:15962	9731	1	True				
ANR	9817	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 4 ) )		9731	0		=			
ANR	9818	UnaryOperationExpression	* pDst ++		9731	0					
ANR	9819	UnaryOperator	*		9731	0					
ANR	9820	PostIncDecOperationExpression	pDst ++		9731	1					
ANR	9821	Identifier	pDst		9731	0					
ANR	9822	IncDec	++		9731	1					
ANR	9823	CastExpression	( OPJ_BYTE ) ( ( src0 << 4 ) )		9731	1					
ANR	9824	CastTarget	OPJ_BYTE		9731	0					
ANR	9825	ShiftExpression	src0 << 4		9731	1		<<			
ANR	9826	Identifier	src0		9731	0					
ANR	9827	PrimaryExpression	4		9731	1					
ANR	9828	ReturnType	static void		9731	1					
ANR	9829	Identifier	convert_32s4u_C1R		9731	2					
ANR	9830	ParameterList	"const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length"		9731	3					
ANR	9831	Parameter	const OPJ_INT32 * pSrc	480:30:15520:15540	9731	0	True				
ANR	9832	ParameterType	const OPJ_INT32 *		9731	0					
ANR	9833	Identifier	pSrc		9731	1					
ANR	9834	Parameter	OPJ_BYTE * pDst	480:53:15543:15556	9731	1	True				
ANR	9835	ParameterType	OPJ_BYTE *		9731	0					
ANR	9836	Identifier	pDst		9731	1					
ANR	9837	Parameter	OPJ_SIZE_T length	481:30:15589:15605	9731	2	True				
ANR	9838	ParameterType	OPJ_SIZE_T		9731	0					
ANR	9839	Identifier	length		9731	1					
ANR	9840	CFGEntryNode	ENTRY		9731		True				
ANR	9841	CFGExitNode	EXIT		9731		True				
ANR	9842	Symbol	pSrc		9731						
ANR	9843	Symbol	* i		9731						
ANR	9844	Symbol	pDst		9731						
ANR	9845	Symbol	length		9731						
ANR	9846	Symbol	* pSrc		9731						
ANR	9847	Symbol	src1		9731						
ANR	9848	Symbol	* pDst ++		9731						
ANR	9849	Symbol	i		9731						
ANR	9850	Symbol	src0		9731						
ANR	9851	Function	convert_32s6u_C1R	497:0:15973:17178							
ANR	9852	FunctionDef	"convert_32s6u_C1R (const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length)"		9851	0					
ANR	9853	CompoundStatement		499:0:16091:17178	9851	0					
ANR	9854	IdentifierDeclStatement	OPJ_SIZE_T i ;	500:4:16097:16109	9851	0	True				
ANR	9855	IdentifierDecl	i		9851	0					
ANR	9856	IdentifierDeclType	OPJ_SIZE_T		9851	0					
ANR	9857	Identifier	i		9851	1					
ANR	9858	ForStatement	for ( i = 0 ; i < ( length & ~ ( OPJ_SIZE_T ) 3U ) ; i += 4U )		9851	1					
ANR	9859	ForInit	i = 0 ;	501:9:16120:16125	9851	0	True				
ANR	9860	AssignmentExpression	i = 0		9851	0		=			
ANR	9861	Identifier	i		9851	0					
ANR	9862	PrimaryExpression	0		9851	1					
ANR	9863	Condition	i < ( length & ~ ( OPJ_SIZE_T ) 3U )	501:16:16127:16156	9851	1	True				
ANR	9864	RelationalExpression	i < ( length & ~ ( OPJ_SIZE_T ) 3U )		9851	0		<			
ANR	9865	Identifier	i		9851	0					
ANR	9866	BitAndExpression	length & ~ ( OPJ_SIZE_T ) 3U		9851	1		&			
ANR	9867	Identifier	length		9851	0					
ANR	9868	UnaryOperationExpression	~ ( OPJ_SIZE_T ) 3U		9851	1					
ANR	9869	UnaryOperator	~		9851	0					
ANR	9870	CastExpression	( OPJ_SIZE_T ) 3U		9851	1					
ANR	9871	CastTarget	OPJ_SIZE_T		9851	0					
ANR	9872	PrimaryExpression	3U		9851	1					
ANR	9873	AssignmentExpression	i += 4U	501:48:16159:16165	9851	2	True	+=			
ANR	9874	Identifier	i		9851	0					
ANR	9875	PrimaryExpression	4U		9851	1					
ANR	9876	CompoundStatement		7:8:239:280	9851	3					
ANR	9877	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	502:8:16178:16219	9851	0	True				
ANR	9878	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9851	0					
ANR	9879	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	9880	Identifier	src0		9851	1					
ANR	9881	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9851	2		=			
ANR	9882	Identifier	src0		9851	0					
ANR	9883	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9851	1					
ANR	9884	CastTarget	OPJ_UINT32		9851	0					
ANR	9885	ArrayIndexing	pSrc [ i + 0 ]		9851	1					
ANR	9886	Identifier	pSrc		9851	0					
ANR	9887	AdditiveExpression	i + 0		9851	1		+			
ANR	9888	Identifier	i		9851	0					
ANR	9889	PrimaryExpression	0		9851	1					
ANR	9890	IdentifierDeclStatement	OPJ_UINT32 src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ] ;	503:8:16229:16270	9851	1	True				
ANR	9891	IdentifierDecl	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9851	0					
ANR	9892	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	9893	Identifier	src1		9851	1					
ANR	9894	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9851	2		=			
ANR	9895	Identifier	src1		9851	0					
ANR	9896	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9851	1					
ANR	9897	CastTarget	OPJ_UINT32		9851	0					
ANR	9898	ArrayIndexing	pSrc [ i + 1 ]		9851	1					
ANR	9899	Identifier	pSrc		9851	0					
ANR	9900	AdditiveExpression	i + 1		9851	1		+			
ANR	9901	Identifier	i		9851	0					
ANR	9902	PrimaryExpression	1		9851	1					
ANR	9903	IdentifierDeclStatement	OPJ_UINT32 src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ] ;	504:8:16280:16321	9851	2	True				
ANR	9904	IdentifierDecl	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9851	0					
ANR	9905	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	9906	Identifier	src2		9851	1					
ANR	9907	AssignmentExpression	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9851	2		=			
ANR	9908	Identifier	src2		9851	0					
ANR	9909	CastExpression	( OPJ_UINT32 ) pSrc [ i + 2 ]		9851	1					
ANR	9910	CastTarget	OPJ_UINT32		9851	0					
ANR	9911	ArrayIndexing	pSrc [ i + 2 ]		9851	1					
ANR	9912	Identifier	pSrc		9851	0					
ANR	9913	AdditiveExpression	i + 2		9851	1		+			
ANR	9914	Identifier	i		9851	0					
ANR	9915	PrimaryExpression	2		9851	1					
ANR	9916	IdentifierDeclStatement	OPJ_UINT32 src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ] ;	505:8:16331:16372	9851	3	True				
ANR	9917	IdentifierDecl	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9851	0					
ANR	9918	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	9919	Identifier	src3		9851	1					
ANR	9920	AssignmentExpression	src3 = ( OPJ_UINT32 ) pSrc [ i + 3 ]		9851	2		=			
ANR	9921	Identifier	src3		9851	0					
ANR	9922	CastExpression	( OPJ_UINT32 ) pSrc [ i + 3 ]		9851	1					
ANR	9923	CastTarget	OPJ_UINT32		9851	0					
ANR	9924	ArrayIndexing	pSrc [ i + 3 ]		9851	1					
ANR	9925	Identifier	pSrc		9851	0					
ANR	9926	AdditiveExpression	i + 3		9851	1		+			
ANR	9927	Identifier	i		9851	0					
ANR	9928	PrimaryExpression	3		9851	1					
ANR	9929	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 2 ) | ( src1 >> 4 ) )	507:8:16383:16430	9851	4	True				
ANR	9930	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 2 ) | ( src1 >> 4 ) )		9851	0		=			
ANR	9931	UnaryOperationExpression	* pDst ++		9851	0					
ANR	9932	UnaryOperator	*		9851	0					
ANR	9933	PostIncDecOperationExpression	pDst ++		9851	1					
ANR	9934	Identifier	pDst		9851	0					
ANR	9935	IncDec	++		9851	1					
ANR	9936	CastExpression	( OPJ_BYTE ) ( ( src0 << 2 ) | ( src1 >> 4 ) )		9851	1					
ANR	9937	CastTarget	OPJ_BYTE		9851	0					
ANR	9938	InclusiveOrExpression	( src0 << 2 ) | ( src1 >> 4 )		9851	1		|			
ANR	9939	ShiftExpression	src0 << 2		9851	0		<<			
ANR	9940	Identifier	src0		9851	0					
ANR	9941	PrimaryExpression	2		9851	1					
ANR	9942	ShiftExpression	src1 >> 4		9851	1		>>			
ANR	9943	Identifier	src1		9851	0					
ANR	9944	PrimaryExpression	4		9851	1					
ANR	9945	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 ) )	508:8:16440:16496	9851	5	True				
ANR	9946	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 ) )		9851	0		=			
ANR	9947	UnaryOperationExpression	* pDst ++		9851	0					
ANR	9948	UnaryOperator	*		9851	0					
ANR	9949	PostIncDecOperationExpression	pDst ++		9851	1					
ANR	9950	Identifier	pDst		9851	0					
ANR	9951	IncDec	++		9851	1					
ANR	9952	CastExpression	( OPJ_BYTE ) ( ( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 ) )		9851	1					
ANR	9953	CastTarget	OPJ_BYTE		9851	0					
ANR	9954	InclusiveOrExpression	( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 )		9851	1		|			
ANR	9955	ShiftExpression	( src1 & 0xFU ) << 4		9851	0		<<			
ANR	9956	BitAndExpression	src1 & 0xFU		9851	0		&			
ANR	9957	Identifier	src1		9851	0					
ANR	9958	PrimaryExpression	0xFU		9851	1					
ANR	9959	PrimaryExpression	4		9851	1					
ANR	9960	ShiftExpression	src2 >> 2		9851	1		>>			
ANR	9961	Identifier	src2		9851	0					
ANR	9962	PrimaryExpression	2		9851	1					
ANR	9963	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( ( src2 & 0x3U ) << 6 ) | src3 )	509:8:16506:16555	9851	6	True				
ANR	9964	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( ( src2 & 0x3U ) << 6 ) | src3 )		9851	0		=			
ANR	9965	UnaryOperationExpression	* pDst ++		9851	0					
ANR	9966	UnaryOperator	*		9851	0					
ANR	9967	PostIncDecOperationExpression	pDst ++		9851	1					
ANR	9968	Identifier	pDst		9851	0					
ANR	9969	IncDec	++		9851	1					
ANR	9970	CastExpression	( OPJ_BYTE ) ( ( ( src2 & 0x3U ) << 6 ) | src3 )		9851	1					
ANR	9971	CastTarget	OPJ_BYTE		9851	0					
ANR	9972	InclusiveOrExpression	( ( src2 & 0x3U ) << 6 ) | src3		9851	1		|			
ANR	9973	ShiftExpression	( src2 & 0x3U ) << 6		9851	0		<<			
ANR	9974	BitAndExpression	src2 & 0x3U		9851	0		&			
ANR	9975	Identifier	src2		9851	0					
ANR	9976	PrimaryExpression	0x3U		9851	1					
ANR	9977	PrimaryExpression	6		9851	1					
ANR	9978	Identifier	src3		9851	1					
ANR	9979	IfStatement	if ( length & 3U )		9851	2					
ANR	9980	Condition	length & 3U	512:8:16572:16582	9851	0	True				
ANR	9981	BitAndExpression	length & 3U		9851	0		&			
ANR	9982	Identifier	length		9851	0					
ANR	9983	PrimaryExpression	3U		9851	1					
ANR	9984	CompoundStatement		17:8:584:604	9851	1					
ANR	9985	IdentifierDeclStatement	OPJ_UINT32 src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ] ;	513:8:16595:16636	9851	0	True				
ANR	9986	IdentifierDecl	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9851	0					
ANR	9987	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	9988	Identifier	src0		9851	1					
ANR	9989	AssignmentExpression	src0 = ( OPJ_UINT32 ) pSrc [ i + 0 ]		9851	2		=			
ANR	9990	Identifier	src0		9851	0					
ANR	9991	CastExpression	( OPJ_UINT32 ) pSrc [ i + 0 ]		9851	1					
ANR	9992	CastTarget	OPJ_UINT32		9851	0					
ANR	9993	ArrayIndexing	pSrc [ i + 0 ]		9851	1					
ANR	9994	Identifier	pSrc		9851	0					
ANR	9995	AdditiveExpression	i + 0		9851	1		+			
ANR	9996	Identifier	i		9851	0					
ANR	9997	PrimaryExpression	0		9851	1					
ANR	9998	IdentifierDeclStatement	OPJ_UINT32 src1 = 0U ;	514:8:16646:16666	9851	1	True				
ANR	9999	IdentifierDecl	src1 = 0U		9851	0					
ANR	10000	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	10001	Identifier	src1		9851	1					
ANR	10002	AssignmentExpression	src1 = 0U		9851	2		=			
ANR	10003	Identifier	src1		9851	0					
ANR	10004	PrimaryExpression	0U		9851	1					
ANR	10005	IdentifierDeclStatement	OPJ_UINT32 src2 = 0U ;	515:8:16676:16696	9851	2	True				
ANR	10006	IdentifierDecl	src2 = 0U		9851	0					
ANR	10007	IdentifierDeclType	OPJ_UINT32		9851	0					
ANR	10008	Identifier	src2		9851	1					
ANR	10009	AssignmentExpression	src2 = 0U		9851	2		=			
ANR	10010	Identifier	src2		9851	0					
ANR	10011	PrimaryExpression	0U		9851	1					
ANR	10012	ExpressionStatement	length = length & 3U	516:8:16706:16726	9851	3	True				
ANR	10013	AssignmentExpression	length = length & 3U		9851	0		=			
ANR	10014	Identifier	length		9851	0					
ANR	10015	BitAndExpression	length & 3U		9851	1		&			
ANR	10016	Identifier	length		9851	0					
ANR	10017	PrimaryExpression	3U		9851	1					
ANR	10018	IfStatement	if ( length > 1U )		9851	4					
ANR	10019	Condition	length > 1U	518:12:16741:16751	9851	0	True				
ANR	10020	RelationalExpression	length > 1U		9851	0		>			
ANR	10021	Identifier	length		9851	0					
ANR	10022	PrimaryExpression	1U		9851	1					
ANR	10023	CompoundStatement		20:25:662:662	9851	1					
ANR	10024	ExpressionStatement	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]	519:12:16768:16798	9851	0	True				
ANR	10025	AssignmentExpression	src1 = ( OPJ_UINT32 ) pSrc [ i + 1 ]		9851	0		=			
ANR	10026	Identifier	src1		9851	0					
ANR	10027	CastExpression	( OPJ_UINT32 ) pSrc [ i + 1 ]		9851	1					
ANR	10028	CastTarget	OPJ_UINT32		9851	0					
ANR	10029	ArrayIndexing	pSrc [ i + 1 ]		9851	1					
ANR	10030	Identifier	pSrc		9851	0					
ANR	10031	AdditiveExpression	i + 1		9851	1		+			
ANR	10032	Identifier	i		9851	0					
ANR	10033	PrimaryExpression	1		9851	1					
ANR	10034	IfStatement	if ( length > 2U )		9851	1					
ANR	10035	Condition	length > 2U	520:16:16816:16826	9851	0	True				
ANR	10036	RelationalExpression	length > 2U		9851	0		>			
ANR	10037	Identifier	length		9851	0					
ANR	10038	PrimaryExpression	2U		9851	1					
ANR	10039	CompoundStatement		22:29:737:737	9851	1					
ANR	10040	ExpressionStatement	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]	521:16:16847:16877	9851	0	True				
ANR	10041	AssignmentExpression	src2 = ( OPJ_UINT32 ) pSrc [ i + 2 ]		9851	0		=			
ANR	10042	Identifier	src2		9851	0					
ANR	10043	CastExpression	( OPJ_UINT32 ) pSrc [ i + 2 ]		9851	1					
ANR	10044	CastTarget	OPJ_UINT32		9851	0					
ANR	10045	ArrayIndexing	pSrc [ i + 2 ]		9851	1					
ANR	10046	Identifier	pSrc		9851	0					
ANR	10047	AdditiveExpression	i + 2		9851	1		+			
ANR	10048	Identifier	i		9851	0					
ANR	10049	PrimaryExpression	2		9851	1					
ANR	10050	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 2 ) | ( src1 >> 4 ) )	524:8:16911:16958	9851	5	True				
ANR	10051	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( src0 << 2 ) | ( src1 >> 4 ) )		9851	0		=			
ANR	10052	UnaryOperationExpression	* pDst ++		9851	0					
ANR	10053	UnaryOperator	*		9851	0					
ANR	10054	PostIncDecOperationExpression	pDst ++		9851	1					
ANR	10055	Identifier	pDst		9851	0					
ANR	10056	IncDec	++		9851	1					
ANR	10057	CastExpression	( OPJ_BYTE ) ( ( src0 << 2 ) | ( src1 >> 4 ) )		9851	1					
ANR	10058	CastTarget	OPJ_BYTE		9851	0					
ANR	10059	InclusiveOrExpression	( src0 << 2 ) | ( src1 >> 4 )		9851	1		|			
ANR	10060	ShiftExpression	src0 << 2		9851	0		<<			
ANR	10061	Identifier	src0		9851	0					
ANR	10062	PrimaryExpression	2		9851	1					
ANR	10063	ShiftExpression	src1 >> 4		9851	1		>>			
ANR	10064	Identifier	src1		9851	0					
ANR	10065	PrimaryExpression	4		9851	1					
ANR	10066	IfStatement	if ( length > 1U )		9851	6					
ANR	10067	Condition	length > 1U	525:12:16972:16982	9851	0	True				
ANR	10068	RelationalExpression	length > 1U		9851	0		>			
ANR	10069	Identifier	length		9851	0					
ANR	10070	PrimaryExpression	1U		9851	1					
ANR	10071	CompoundStatement		27:25:893:893	9851	1					
ANR	10072	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 ) )	526:12:16999:17055	9851	0	True				
ANR	10073	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 ) )		9851	0		=			
ANR	10074	UnaryOperationExpression	* pDst ++		9851	0					
ANR	10075	UnaryOperator	*		9851	0					
ANR	10076	PostIncDecOperationExpression	pDst ++		9851	1					
ANR	10077	Identifier	pDst		9851	0					
ANR	10078	IncDec	++		9851	1					
ANR	10079	CastExpression	( OPJ_BYTE ) ( ( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 ) )		9851	1					
ANR	10080	CastTarget	OPJ_BYTE		9851	0					
ANR	10081	InclusiveOrExpression	( ( src1 & 0xFU ) << 4 ) | ( src2 >> 2 )		9851	1		|			
ANR	10082	ShiftExpression	( src1 & 0xFU ) << 4		9851	0		<<			
ANR	10083	BitAndExpression	src1 & 0xFU		9851	0		&			
ANR	10084	Identifier	src1		9851	0					
ANR	10085	PrimaryExpression	0xFU		9851	1					
ANR	10086	PrimaryExpression	4		9851	1					
ANR	10087	ShiftExpression	src2 >> 2		9851	1		>>			
ANR	10088	Identifier	src2		9851	0					
ANR	10089	PrimaryExpression	2		9851	1					
ANR	10090	IfStatement	if ( length > 2U )		9851	1					
ANR	10091	Condition	length > 2U	527:16:17073:17083	9851	0	True				
ANR	10092	RelationalExpression	length > 2U		9851	0		>			
ANR	10093	Identifier	length		9851	0					
ANR	10094	PrimaryExpression	2U		9851	1					
ANR	10095	CompoundStatement		29:29:994:994	9851	1					
ANR	10096	ExpressionStatement	* pDst ++ = ( OPJ_BYTE ) ( ( ( src2 & 0x3U ) << 6 ) )	528:16:17104:17146	9851	0	True				
ANR	10097	AssignmentExpression	* pDst ++ = ( OPJ_BYTE ) ( ( ( src2 & 0x3U ) << 6 ) )		9851	0		=			
ANR	10098	UnaryOperationExpression	* pDst ++		9851	0					
ANR	10099	UnaryOperator	*		9851	0					
ANR	10100	PostIncDecOperationExpression	pDst ++		9851	1					
ANR	10101	Identifier	pDst		9851	0					
ANR	10102	IncDec	++		9851	1					
ANR	10103	CastExpression	( OPJ_BYTE ) ( ( ( src2 & 0x3U ) << 6 ) )		9851	1					
ANR	10104	CastTarget	OPJ_BYTE		9851	0					
ANR	10105	ShiftExpression	( src2 & 0x3U ) << 6		9851	1		<<			
ANR	10106	BitAndExpression	src2 & 0x3U		9851	0		&			
ANR	10107	Identifier	src2		9851	0					
ANR	10108	PrimaryExpression	0x3U		9851	1					
ANR	10109	PrimaryExpression	6		9851	1					
ANR	10110	ReturnType	static void		9851	1					
ANR	10111	Identifier	convert_32s6u_C1R		9851	2					
ANR	10112	ParameterList	"const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length"		9851	3					
ANR	10113	Parameter	const OPJ_INT32 * pSrc	497:30:16003:16023	9851	0	True				
ANR	10114	ParameterType	const OPJ_INT32 *		9851	0					
ANR	10115	Identifier	pSrc		9851	1					
ANR	10116	Parameter	OPJ_BYTE * pDst	497:53:16026:16039	9851	1	True				
ANR	10117	ParameterType	OPJ_BYTE *		9851	0					
ANR	10118	Identifier	pDst		9851	1					
ANR	10119	Parameter	OPJ_SIZE_T length	498:30:16072:16088	9851	2	True				
ANR	10120	ParameterType	OPJ_SIZE_T		9851	0					
ANR	10121	Identifier	length		9851	1					
ANR	10122	CFGEntryNode	ENTRY		9851		True				
ANR	10123	CFGExitNode	EXIT		9851		True				
ANR	10124	Symbol	pSrc		9851						
ANR	10125	Symbol	* i		9851						
ANR	10126	Symbol	pDst		9851						
ANR	10127	Symbol	length		9851						
ANR	10128	Symbol	* pSrc		9851						
ANR	10129	Symbol	src1		9851						
ANR	10130	Symbol	* pDst ++		9851						
ANR	10131	Symbol	i		9851						
ANR	10132	Symbol	src0		9851						
ANR	10133	Symbol	src3		9851						
ANR	10134	Symbol	src2		9851						
ANR	10135	Function	convert_32s8u_C1R	533:0:17180:17396							
ANR	10136	FunctionDef	"convert_32s8u_C1R (const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length)"		10135	0					
ANR	10137	CompoundStatement		535:0:17298:17396	10135	0					
ANR	10138	IdentifierDeclStatement	OPJ_SIZE_T i ;	536:4:17304:17316	10135	0	True				
ANR	10139	IdentifierDecl	i		10135	0					
ANR	10140	IdentifierDeclType	OPJ_SIZE_T		10135	0					
ANR	10141	Identifier	i		10135	1					
ANR	10142	ForStatement	for ( i = 0 ; i < length ; ++ i )		10135	1					
ANR	10143	ForInit	i = 0 ;	537:9:17327:17332	10135	0	True				
ANR	10144	AssignmentExpression	i = 0		10135	0		=			
ANR	10145	Identifier	i		10135	0					
ANR	10146	PrimaryExpression	0		10135	1					
ANR	10147	Condition	i < length	537:16:17334:17343	10135	1	True				
ANR	10148	RelationalExpression	i < length		10135	0		<			
ANR	10149	Identifier	i		10135	0					
ANR	10150	Identifier	length		10135	1					
ANR	10151	UnaryExpression	++ i	537:28:17346:17348	10135	2	True				
ANR	10152	IncDec	++		10135	0					
ANR	10153	Identifier	i		10135	1					
ANR	10154	CompoundStatement		3:33:52:52	10135	3					
ANR	10155	ExpressionStatement	pDst [ i ] = ( OPJ_BYTE ) pSrc [ i ]	538:8:17361:17388	10135	0	True				
ANR	10156	AssignmentExpression	pDst [ i ] = ( OPJ_BYTE ) pSrc [ i ]		10135	0		=			
ANR	10157	ArrayIndexing	pDst [ i ]		10135	0					
ANR	10158	Identifier	pDst		10135	0					
ANR	10159	Identifier	i		10135	1					
ANR	10160	CastExpression	( OPJ_BYTE ) pSrc [ i ]		10135	1					
ANR	10161	CastTarget	OPJ_BYTE		10135	0					
ANR	10162	ArrayIndexing	pSrc [ i ]		10135	1					
ANR	10163	Identifier	pSrc		10135	0					
ANR	10164	Identifier	i		10135	1					
ANR	10165	ReturnType	static void		10135	1					
ANR	10166	Identifier	convert_32s8u_C1R		10135	2					
ANR	10167	ParameterList	"const OPJ_INT32 * pSrc , OPJ_BYTE * pDst , OPJ_SIZE_T length"		10135	3					
ANR	10168	Parameter	const OPJ_INT32 * pSrc	533:30:17210:17230	10135	0	True				
ANR	10169	ParameterType	const OPJ_INT32 *		10135	0					
ANR	10170	Identifier	pSrc		10135	1					
ANR	10171	Parameter	OPJ_BYTE * pDst	533:53:17233:17246	10135	1	True				
ANR	10172	ParameterType	OPJ_BYTE *		10135	0					
ANR	10173	Identifier	pDst		10135	1					
ANR	10174	Parameter	OPJ_SIZE_T length	534:30:17279:17295	10135	2	True				
ANR	10175	ParameterType	OPJ_SIZE_T		10135	0					
ANR	10176	Identifier	length		10135	1					
ANR	10177	CFGEntryNode	ENTRY		10135		True				
ANR	10178	CFGExitNode	EXIT		10135		True				
ANR	10179	Symbol	pSrc		10135						
ANR	10180	Symbol	* i		10135						
ANR	10181	Symbol	pDst		10135						
ANR	10182	Symbol	length		10135						
ANR	10183	Symbol	* pSrc		10135						
ANR	10184	Symbol	i		10135						
ANR	10185	Symbol	* pDst		10135						
ANR	10186	DeclStmt									
ANR	10187	Decl							const convert_32sXXx_C1R	const convert_32sXXx_C1R [ 9 ]	convert_32sXXu_C1R_LUT
ANR	10188	ClassDef	tga_header	561:0:17733:18740							
ANR	10189	DeclStmt									
ANR	10190	Decl							unsigned char	unsigned char	id_length
ANR	10191	DeclStmt									
ANR	10192	Decl							unsigned char	unsigned char	colour_map_type
ANR	10193	DeclStmt									
ANR	10194	Decl							unsigned char	unsigned char	image_type
ANR	10195	DeclStmt									
ANR	10196	Decl							unsigned short	unsigned short	colour_map_index
ANR	10197	DeclStmt									
ANR	10198	Decl							unsigned short	unsigned short	colour_map_length
ANR	10199	DeclStmt									
ANR	10200	Decl							unsigned char	unsigned char	colour_map_entry_size
ANR	10201	DeclStmt									
ANR	10202	Decl							unsigned short	unsigned short	x_origin
ANR	10203	DeclStmt									
ANR	10204	Decl							unsigned short	unsigned short	y_origin
ANR	10205	DeclStmt									
ANR	10206	Decl							unsigned short	unsigned short	image_width
ANR	10207	DeclStmt									
ANR	10208	Decl							unsigned short	unsigned short	image_height
ANR	10209	DeclStmt									
ANR	10210	Decl							unsigned char	unsigned char	pixel_depth
ANR	10211	DeclStmt									
ANR	10212	Decl							unsigned char	unsigned char	image_desc
ANR	10213	Function	get_tga_ushort	584:0:18835:18956							
ANR	10214	FunctionDef	get_tga_ushort (const unsigned char * data)		10213	0					
ANR	10215	CompoundStatement		585:0:18899:18956	10213	0					
ANR	10216	ReturnStatement	return ( unsigned short ) ( data [ 0 ] | ( data [ 1 ] << 8 ) ) ;	586:4:18905:18954	10213	0	True				
ANR	10217	CastExpression	( unsigned short ) ( data [ 0 ] | ( data [ 1 ] << 8 ) )		10213	0					
ANR	10218	CastTarget	unsigned short		10213	0					
ANR	10219	InclusiveOrExpression	data [ 0 ] | ( data [ 1 ] << 8 )		10213	1		|			
ANR	10220	ArrayIndexing	data [ 0 ]		10213	0					
ANR	10221	Identifier	data		10213	0					
ANR	10222	PrimaryExpression	0		10213	1					
ANR	10223	ShiftExpression	data [ 1 ] << 8		10213	1		<<			
ANR	10224	ArrayIndexing	data [ 1 ]		10213	0					
ANR	10225	Identifier	data		10213	0					
ANR	10226	PrimaryExpression	1		10213	1					
ANR	10227	PrimaryExpression	8		10213	1					
ANR	10228	ReturnType	static unsigned short		10213	1					
ANR	10229	Identifier	get_tga_ushort		10213	2					
ANR	10230	ParameterList	const unsigned char * data		10213	3					
ANR	10231	Parameter	const unsigned char * data	584:37:18872:18896	10213	0	True				
ANR	10232	ParameterType	const unsigned char *		10213	0					
ANR	10233	Identifier	data		10213	1					
ANR	10234	CFGEntryNode	ENTRY		10213		True				
ANR	10235	CFGExitNode	EXIT		10213		True				
ANR	10236	Symbol	data		10213						
ANR	10237	Symbol	* data		10213						
ANR	10238	Function	tga_readheader	591:0:18987:21370							
ANR	10239	FunctionDef	"tga_readheader (FILE * fp , unsigned int * bits_per_pixel , unsigned int * width , unsigned int * height , int * flip_image)"		10238	0					
ANR	10240	CompoundStatement		593:0:19139:21370	10238	0					
ANR	10241	IdentifierDeclStatement	int palette_size ;	594:4:19145:19161	10238	0	True				
ANR	10242	IdentifierDecl	palette_size		10238	0					
ANR	10243	IdentifierDeclType	int		10238	0					
ANR	10244	Identifier	palette_size		10238	1					
ANR	10245	IdentifierDeclStatement	unsigned char tga [ TGA_HEADER_SIZE ] ;	595:4:19167:19201	10238	1	True				
ANR	10246	IdentifierDecl	tga [ TGA_HEADER_SIZE ]		10238	0					
ANR	10247	IdentifierDeclType	unsigned char [ TGA_HEADER_SIZE ]		10238	0					
ANR	10248	Identifier	tga		10238	1					
ANR	10249	Identifier	TGA_HEADER_SIZE		10238	2					
ANR	10250	IdentifierDeclStatement	"unsigned char id_len , image_type ;"	596:4:19207:19254	10238	2	True				
ANR	10251	IdentifierDecl	id_len		10238	0					
ANR	10252	IdentifierDeclType	unsigned char		10238	0					
ANR	10253	Identifier	id_len		10238	1					
ANR	10254	IdentifierDecl	image_type		10238	1					
ANR	10255	IdentifierDeclType	unsigned char		10238	0					
ANR	10256	Identifier	image_type		10238	1					
ANR	10257	IdentifierDeclStatement	"unsigned char pixel_depth , image_desc ;"	597:4:19260:19297	10238	3	True				
ANR	10258	IdentifierDecl	pixel_depth		10238	0					
ANR	10259	IdentifierDeclType	unsigned char		10238	0					
ANR	10260	Identifier	pixel_depth		10238	1					
ANR	10261	IdentifierDecl	image_desc		10238	1					
ANR	10262	IdentifierDeclType	unsigned char		10238	0					
ANR	10263	Identifier	image_desc		10238	1					
ANR	10264	IdentifierDeclStatement	"unsigned short cmap_len , cmap_entry_size ;"	598:4:19303:19359	10238	4	True				
ANR	10265	IdentifierDecl	cmap_len		10238	0					
ANR	10266	IdentifierDeclType	unsigned short		10238	0					
ANR	10267	Identifier	cmap_len		10238	1					
ANR	10268	IdentifierDecl	cmap_entry_size		10238	1					
ANR	10269	IdentifierDeclType	unsigned short		10238	0					
ANR	10270	Identifier	cmap_entry_size		10238	1					
ANR	10271	IdentifierDeclStatement	"unsigned short image_w , image_h ;"	599:4:19365:19420	10238	5	True				
ANR	10272	IdentifierDecl	image_w		10238	0					
ANR	10273	IdentifierDeclType	unsigned short		10238	0					
ANR	10274	Identifier	image_w		10238	1					
ANR	10275	IdentifierDecl	image_h		10238	1					
ANR	10276	IdentifierDeclType	unsigned short		10238	0					
ANR	10277	Identifier	image_h		10238	1					
ANR	10278	IfStatement	if ( ! bits_per_pixel || ! width || ! height || ! flip_image )		10238	6					
ANR	10279	Condition	! bits_per_pixel || ! width || ! height || ! flip_image	601:8:19431:19481	10238	0	True				
ANR	10280	OrExpression	! bits_per_pixel || ! width || ! height || ! flip_image		10238	0		||			
ANR	10281	UnaryOperationExpression	! bits_per_pixel		10238	0					
ANR	10282	UnaryOperator	!		10238	0					
ANR	10283	Identifier	bits_per_pixel		10238	1					
ANR	10284	OrExpression	! width || ! height || ! flip_image		10238	1		||			
ANR	10285	UnaryOperationExpression	! width		10238	0					
ANR	10286	UnaryOperator	!		10238	0					
ANR	10287	Identifier	width		10238	1					
ANR	10288	OrExpression	! height || ! flip_image		10238	1		||			
ANR	10289	UnaryOperationExpression	! height		10238	0					
ANR	10290	UnaryOperator	!		10238	0					
ANR	10291	Identifier	height		10238	1					
ANR	10292	UnaryOperationExpression	! flip_image		10238	1					
ANR	10293	UnaryOperator	!		10238	0					
ANR	10294	Identifier	flip_image		10238	1					
ANR	10295	CompoundStatement		9:61:344:344	10238	1					
ANR	10296	ReturnStatement	return 0 ;	602:8:19494:19502	10238	0	True				
ANR	10297	PrimaryExpression	0		10238	0					
ANR	10298	IfStatement	"if ( fread ( tga , TGA_HEADER_SIZE , 1 , fp ) != 1 )"		10238	7					
ANR	10299	Condition	"fread ( tga , TGA_HEADER_SIZE , 1 , fp ) != 1"	605:8:19519:19557	10238	0	True				
ANR	10300	EqualityExpression	"fread ( tga , TGA_HEADER_SIZE , 1 , fp ) != 1"		10238	0		!=			
ANR	10301	CallExpression	"fread ( tga , TGA_HEADER_SIZE , 1 , fp )"		10238	0					
ANR	10302	Callee	fread		10238	0					
ANR	10303	Identifier	fread		10238	0					
ANR	10304	ArgumentList	tga		10238	1					
ANR	10305	Argument	tga		10238	0					
ANR	10306	Identifier	tga		10238	0					
ANR	10307	Argument	TGA_HEADER_SIZE		10238	1					
ANR	10308	Identifier	TGA_HEADER_SIZE		10238	0					
ANR	10309	Argument	1		10238	2					
ANR	10310	PrimaryExpression	1		10238	0					
ANR	10311	Argument	fp		10238	3					
ANR	10312	Identifier	fp		10238	0					
ANR	10313	PrimaryExpression	1		10238	1					
ANR	10314	CompoundStatement		13:49:420:420	10238	1					
ANR	10315	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	606:8:19570:19677	10238	0	True				
ANR	10316	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		10238	0					
ANR	10317	Callee	fprintf		10238	0					
ANR	10318	Identifier	fprintf		10238	0					
ANR	10319	ArgumentList	stderr		10238	1					
ANR	10320	Argument	stderr		10238	0					
ANR	10321	Identifier	stderr		10238	0					
ANR	10322	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		10238	1					
ANR	10323	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		10238	0					
ANR	10324	ReturnStatement	return 0 ;	608:8:19687:19696	10238	1	True				
ANR	10325	PrimaryExpression	0		10238	0					
ANR	10326	ExpressionStatement	id_len = tga [ 0 ]	610:4:19708:19723	10238	8	True				
ANR	10327	AssignmentExpression	id_len = tga [ 0 ]		10238	0		=			
ANR	10328	Identifier	id_len		10238	0					
ANR	10329	ArrayIndexing	tga [ 0 ]		10238	1					
ANR	10330	Identifier	tga		10238	0					
ANR	10331	PrimaryExpression	0		10238	1					
ANR	10332	ExpressionStatement	image_type = tga [ 2 ]	612:4:19757:19776	10238	9	True				
ANR	10333	AssignmentExpression	image_type = tga [ 2 ]		10238	0		=			
ANR	10334	Identifier	image_type		10238	0					
ANR	10335	ArrayIndexing	tga [ 2 ]		10238	1					
ANR	10336	Identifier	tga		10238	0					
ANR	10337	PrimaryExpression	2		10238	1					
ANR	10338	ExpressionStatement	cmap_len = get_tga_ushort ( & tga [ 5 ] )	614:4:19828:19862	10238	10	True				
ANR	10339	AssignmentExpression	cmap_len = get_tga_ushort ( & tga [ 5 ] )		10238	0		=			
ANR	10340	Identifier	cmap_len		10238	0					
ANR	10341	CallExpression	get_tga_ushort ( & tga [ 5 ] )		10238	1					
ANR	10342	Callee	get_tga_ushort		10238	0					
ANR	10343	Identifier	get_tga_ushort		10238	0					
ANR	10344	ArgumentList	& tga [ 5 ]		10238	1					
ANR	10345	Argument	& tga [ 5 ]		10238	0					
ANR	10346	UnaryOperationExpression	& tga [ 5 ]		10238	0					
ANR	10347	UnaryOperator	&		10238	0					
ANR	10348	ArrayIndexing	tga [ 5 ]		10238	1					
ANR	10349	Identifier	tga		10238	0					
ANR	10350	PrimaryExpression	5		10238	1					
ANR	10351	ExpressionStatement	cmap_entry_size = tga [ 7 ]	615:4:19868:19892	10238	11	True				
ANR	10352	AssignmentExpression	cmap_entry_size = tga [ 7 ]		10238	0		=			
ANR	10353	Identifier	cmap_entry_size		10238	0					
ANR	10354	ArrayIndexing	tga [ 7 ]		10238	1					
ANR	10355	Identifier	tga		10238	0					
ANR	10356	PrimaryExpression	7		10238	1					
ANR	10357	ExpressionStatement	x_origin = get_tga_ushort ( & tga [ 8 ] )	619:4:19906:19940	10238	12	True				
ANR	10358	AssignmentExpression	x_origin = get_tga_ushort ( & tga [ 8 ] )		10238	0		=			
ANR	10359	Identifier	x_origin		10238	0					
ANR	10360	CallExpression	get_tga_ushort ( & tga [ 8 ] )		10238	1					
ANR	10361	Callee	get_tga_ushort		10238	0					
ANR	10362	Identifier	get_tga_ushort		10238	0					
ANR	10363	ArgumentList	& tga [ 8 ]		10238	1					
ANR	10364	Argument	& tga [ 8 ]		10238	0					
ANR	10365	UnaryOperationExpression	& tga [ 8 ]		10238	0					
ANR	10366	UnaryOperator	&		10238	0					
ANR	10367	ArrayIndexing	tga [ 8 ]		10238	1					
ANR	10368	Identifier	tga		10238	0					
ANR	10369	PrimaryExpression	8		10238	1					
ANR	10370	ExpressionStatement	y_origin = get_tga_ushort ( & tga [ 10 ] )	620:4:19946:19981	10238	13	True				
ANR	10371	AssignmentExpression	y_origin = get_tga_ushort ( & tga [ 10 ] )		10238	0		=			
ANR	10372	Identifier	y_origin		10238	0					
ANR	10373	CallExpression	get_tga_ushort ( & tga [ 10 ] )		10238	1					
ANR	10374	Callee	get_tga_ushort		10238	0					
ANR	10375	Identifier	get_tga_ushort		10238	0					
ANR	10376	ArgumentList	& tga [ 10 ]		10238	1					
ANR	10377	Argument	& tga [ 10 ]		10238	0					
ANR	10378	UnaryOperationExpression	& tga [ 10 ]		10238	0					
ANR	10379	UnaryOperator	&		10238	0					
ANR	10380	ArrayIndexing	tga [ 10 ]		10238	1					
ANR	10381	Identifier	tga		10238	0					
ANR	10382	PrimaryExpression	10		10238	1					
ANR	10383	ExpressionStatement	image_w = get_tga_ushort ( & tga [ 12 ] )	622:4:19994:20028	10238	14	True				
ANR	10384	AssignmentExpression	image_w = get_tga_ushort ( & tga [ 12 ] )		10238	0		=			
ANR	10385	Identifier	image_w		10238	0					
ANR	10386	CallExpression	get_tga_ushort ( & tga [ 12 ] )		10238	1					
ANR	10387	Callee	get_tga_ushort		10238	0					
ANR	10388	Identifier	get_tga_ushort		10238	0					
ANR	10389	ArgumentList	& tga [ 12 ]		10238	1					
ANR	10390	Argument	& tga [ 12 ]		10238	0					
ANR	10391	UnaryOperationExpression	& tga [ 12 ]		10238	0					
ANR	10392	UnaryOperator	&		10238	0					
ANR	10393	ArrayIndexing	tga [ 12 ]		10238	1					
ANR	10394	Identifier	tga		10238	0					
ANR	10395	PrimaryExpression	12		10238	1					
ANR	10396	ExpressionStatement	image_h = get_tga_ushort ( & tga [ 14 ] )	623:4:20034:20068	10238	15	True				
ANR	10397	AssignmentExpression	image_h = get_tga_ushort ( & tga [ 14 ] )		10238	0		=			
ANR	10398	Identifier	image_h		10238	0					
ANR	10399	CallExpression	get_tga_ushort ( & tga [ 14 ] )		10238	1					
ANR	10400	Callee	get_tga_ushort		10238	0					
ANR	10401	Identifier	get_tga_ushort		10238	0					
ANR	10402	ArgumentList	& tga [ 14 ]		10238	1					
ANR	10403	Argument	& tga [ 14 ]		10238	0					
ANR	10404	UnaryOperationExpression	& tga [ 14 ]		10238	0					
ANR	10405	UnaryOperator	&		10238	0					
ANR	10406	ArrayIndexing	tga [ 14 ]		10238	1					
ANR	10407	Identifier	tga		10238	0					
ANR	10408	PrimaryExpression	14		10238	1					
ANR	10409	ExpressionStatement	pixel_depth = tga [ 16 ]	624:4:20074:20095	10238	16	True				
ANR	10410	AssignmentExpression	pixel_depth = tga [ 16 ]		10238	0		=			
ANR	10411	Identifier	pixel_depth		10238	0					
ANR	10412	ArrayIndexing	tga [ 16 ]		10238	1					
ANR	10413	Identifier	tga		10238	0					
ANR	10414	PrimaryExpression	16		10238	1					
ANR	10415	ExpressionStatement	image_desc = tga [ 17 ]	625:4:20101:20122	10238	17	True				
ANR	10416	AssignmentExpression	image_desc = tga [ 17 ]		10238	0		=			
ANR	10417	Identifier	image_desc		10238	0					
ANR	10418	ArrayIndexing	tga [ 17 ]		10238	1					
ANR	10419	Identifier	tga		10238	0					
ANR	10420	PrimaryExpression	17		10238	1					
ANR	10421	ExpressionStatement	* bits_per_pixel = ( unsigned int ) pixel_depth	627:4:20129:20172	10238	18	True				
ANR	10422	AssignmentExpression	* bits_per_pixel = ( unsigned int ) pixel_depth		10238	0		=			
ANR	10423	UnaryOperationExpression	* bits_per_pixel		10238	0					
ANR	10424	UnaryOperator	*		10238	0					
ANR	10425	Identifier	bits_per_pixel		10238	1					
ANR	10426	CastExpression	( unsigned int ) pixel_depth		10238	1					
ANR	10427	CastTarget	unsigned int		10238	0					
ANR	10428	Identifier	pixel_depth		10238	1					
ANR	10429	ExpressionStatement	* width = ( unsigned int ) image_w	628:4:20178:20209	10238	19	True				
ANR	10430	AssignmentExpression	* width = ( unsigned int ) image_w		10238	0		=			
ANR	10431	UnaryOperationExpression	* width		10238	0					
ANR	10432	UnaryOperator	*		10238	0					
ANR	10433	Identifier	width		10238	1					
ANR	10434	CastExpression	( unsigned int ) image_w		10238	1					
ANR	10435	CastTarget	unsigned int		10238	0					
ANR	10436	Identifier	image_w		10238	1					
ANR	10437	ExpressionStatement	* height = ( unsigned int ) image_h	629:4:20215:20246	10238	20	True				
ANR	10438	AssignmentExpression	* height = ( unsigned int ) image_h		10238	0		=			
ANR	10439	UnaryOperationExpression	* height		10238	0					
ANR	10440	UnaryOperator	*		10238	0					
ANR	10441	Identifier	height		10238	1					
ANR	10442	CastExpression	( unsigned int ) image_h		10238	1					
ANR	10443	CastTarget	unsigned int		10238	0					
ANR	10444	Identifier	image_h		10238	1					
ANR	10445	IfStatement	if ( id_len )		10238	21					
ANR	10446	Condition	id_len	632:8:20305:20310	10238	0	True				
ANR	10447	Identifier	id_len		10238	0					
ANR	10448	CompoundStatement		41:8:1183:1235	10238	1					
ANR	10449	IdentifierDeclStatement	unsigned char * id = ( unsigned char * ) malloc ( id_len ) ;	633:8:20323:20375	10238	0	True				
ANR	10450	IdentifierDecl	* id = ( unsigned char * ) malloc ( id_len )		10238	0					
ANR	10451	IdentifierDeclType	unsigned char *		10238	0					
ANR	10452	Identifier	id		10238	1					
ANR	10453	AssignmentExpression	* id = ( unsigned char * ) malloc ( id_len )		10238	2		=			
ANR	10454	Identifier	id		10238	0					
ANR	10455	CastExpression	( unsigned char * ) malloc ( id_len )		10238	1					
ANR	10456	CastTarget	unsigned char *		10238	0					
ANR	10457	CallExpression	malloc ( id_len )		10238	1					
ANR	10458	Callee	malloc		10238	0					
ANR	10459	Identifier	malloc		10238	0					
ANR	10460	ArgumentList	id_len		10238	1					
ANR	10461	Argument	id_len		10238	0					
ANR	10462	Identifier	id_len		10238	0					
ANR	10463	IfStatement	if ( id == 0 )		10238	1					
ANR	10464	Condition	id == 0	634:12:20389:20395	10238	0	True				
ANR	10465	EqualityExpression	id == 0		10238	0		==			
ANR	10466	Identifier	id		10238	0					
ANR	10467	PrimaryExpression	0		10238	1					
ANR	10468	CompoundStatement		42:21:1258:1258	10238	1					
ANR	10469	ExpressionStatement	"fprintf ( stderr , ""tga_readheader: memory out\\n"" )"	635:12:20412:20459	10238	0	True				
ANR	10470	CallExpression	"fprintf ( stderr , ""tga_readheader: memory out\\n"" )"		10238	0					
ANR	10471	Callee	fprintf		10238	0					
ANR	10472	Identifier	fprintf		10238	0					
ANR	10473	ArgumentList	stderr		10238	1					
ANR	10474	Argument	stderr		10238	0					
ANR	10475	Identifier	stderr		10238	0					
ANR	10476	Argument	"""tga_readheader: memory out\\n"""		10238	1					
ANR	10477	PrimaryExpression	"""tga_readheader: memory out\\n"""		10238	0					
ANR	10478	ReturnStatement	return 0 ;	636:12:20473:20481	10238	1	True				
ANR	10479	PrimaryExpression	0		10238	0					
ANR	10480	IfStatement	"if ( ! fread ( id , id_len , 1 , fp ) )"		10238	2					
ANR	10481	Condition	"! fread ( id , id_len , 1 , fp )"	638:12:20505:20529	10238	0	True				
ANR	10482	UnaryOperationExpression	"! fread ( id , id_len , 1 , fp )"		10238	0					
ANR	10483	UnaryOperator	!		10238	0					
ANR	10484	CallExpression	"fread ( id , id_len , 1 , fp )"		10238	1					
ANR	10485	Callee	fread		10238	0					
ANR	10486	Identifier	fread		10238	0					
ANR	10487	ArgumentList	id		10238	1					
ANR	10488	Argument	id		10238	0					
ANR	10489	Identifier	id		10238	0					
ANR	10490	Argument	id_len		10238	1					
ANR	10491	Identifier	id_len		10238	0					
ANR	10492	Argument	1		10238	2					
ANR	10493	PrimaryExpression	1		10238	0					
ANR	10494	Argument	fp		10238	3					
ANR	10495	Identifier	fp		10238	0					
ANR	10496	CompoundStatement		46:39:1392:1392	10238	1					
ANR	10497	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	639:12:20546:20657	10238	0	True				
ANR	10498	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		10238	0					
ANR	10499	Callee	fprintf		10238	0					
ANR	10500	Identifier	fprintf		10238	0					
ANR	10501	ArgumentList	stderr		10238	1					
ANR	10502	Argument	stderr		10238	0					
ANR	10503	Identifier	stderr		10238	0					
ANR	10504	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		10238	1					
ANR	10505	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		10238	0					
ANR	10506	ExpressionStatement	free ( id )	641:12:20671:20679	10238	1	True				
ANR	10507	CallExpression	free ( id )		10238	0					
ANR	10508	Callee	free		10238	0					
ANR	10509	Identifier	free		10238	0					
ANR	10510	ArgumentList	id		10238	1					
ANR	10511	Argument	id		10238	0					
ANR	10512	Identifier	id		10238	0					
ANR	10513	ReturnStatement	return 0 ;	642:12:20693:20702	10238	2	True				
ANR	10514	PrimaryExpression	0		10238	0					
ANR	10515	ExpressionStatement	free ( id )	644:8:20722:20730	10238	3	True				
ANR	10516	CallExpression	free ( id )		10238	0					
ANR	10517	Callee	free		10238	0					
ANR	10518	Identifier	free		10238	0					
ANR	10519	ArgumentList	id		10238	1					
ANR	10520	Argument	id		10238	0					
ANR	10521	Identifier	id		10238	0					
ANR	10522	IfStatement	if ( image_type > 8 )		10238	22					
ANR	10523	Condition	image_type > 8	650:8:20892:20905	10238	0	True				
ANR	10524	RelationalExpression	image_type > 8		10238	0		>			
ANR	10525	Identifier	image_type		10238	0					
ANR	10526	PrimaryExpression	8		10238	1					
ANR	10527	CompoundStatement		58:24:1768:1768	10238	1					
ANR	10528	ExpressionStatement	"fprintf ( stderr , ""Sorry, compressed tga files are not currently supported.\\n"" )"	651:8:20918:20995	10238	0	True				
ANR	10529	CallExpression	"fprintf ( stderr , ""Sorry, compressed tga files are not currently supported.\\n"" )"		10238	0					
ANR	10530	Callee	fprintf		10238	0					
ANR	10531	Identifier	fprintf		10238	0					
ANR	10532	ArgumentList	stderr		10238	1					
ANR	10533	Argument	stderr		10238	0					
ANR	10534	Identifier	stderr		10238	0					
ANR	10535	Argument	"""Sorry, compressed tga files are not currently supported.\\n"""		10238	1					
ANR	10536	PrimaryExpression	"""Sorry, compressed tga files are not currently supported.\\n"""		10238	0					
ANR	10537	ReturnStatement	return 0 ;	652:8:21005:21014	10238	1	True				
ANR	10538	PrimaryExpression	0		10238	0					
ANR	10539	ExpressionStatement	* flip_image = ! ( image_desc & 32 )	655:4:21027:21059	10238	23	True				
ANR	10540	AssignmentExpression	* flip_image = ! ( image_desc & 32 )		10238	0		=			
ANR	10541	UnaryOperationExpression	* flip_image		10238	0					
ANR	10542	UnaryOperator	*		10238	0					
ANR	10543	Identifier	flip_image		10238	1					
ANR	10544	UnaryOperationExpression	! ( image_desc & 32 )		10238	1					
ANR	10545	UnaryOperator	!		10238	0					
ANR	10546	BitAndExpression	image_desc & 32		10238	1		&			
ANR	10547	Identifier	image_desc		10238	0					
ANR	10548	PrimaryExpression	32		10238	1					
ANR	10549	ExpressionStatement	palette_size = cmap_len * ( cmap_entry_size / 8 )	658:4:21156:21203	10238	24	True				
ANR	10550	AssignmentExpression	palette_size = cmap_len * ( cmap_entry_size / 8 )		10238	0		=			
ANR	10551	Identifier	palette_size		10238	0					
ANR	10552	MultiplicativeExpression	cmap_len * ( cmap_entry_size / 8 )		10238	1		*			
ANR	10553	Identifier	cmap_len		10238	0					
ANR	10554	MultiplicativeExpression	cmap_entry_size / 8		10238	1		/			
ANR	10555	Identifier	cmap_entry_size		10238	0					
ANR	10556	PrimaryExpression	8		10238	1					
ANR	10557	IfStatement	if ( palette_size > 0 )		10238	25					
ANR	10558	Condition	palette_size > 0	660:8:21214:21229	10238	0	True				
ANR	10559	RelationalExpression	palette_size > 0		10238	0		>			
ANR	10560	Identifier	palette_size		10238	0					
ANR	10561	PrimaryExpression	0		10238	1					
ANR	10562	CompoundStatement		68:26:2092:2092	10238	1					
ANR	10563	ExpressionStatement	"fprintf ( stderr , ""File contains a palette - not yet supported."" )"	661:8:21242:21305	10238	0	True				
ANR	10564	CallExpression	"fprintf ( stderr , ""File contains a palette - not yet supported."" )"		10238	0					
ANR	10565	Callee	fprintf		10238	0					
ANR	10566	Identifier	fprintf		10238	0					
ANR	10567	ArgumentList	stderr		10238	1					
ANR	10568	Argument	stderr		10238	0					
ANR	10569	Identifier	stderr		10238	0					
ANR	10570	Argument	"""File contains a palette - not yet supported."""		10238	1					
ANR	10571	PrimaryExpression	"""File contains a palette - not yet supported."""		10238	0					
ANR	10572	ExpressionStatement	"fseek ( fp , palette_size , SEEK_CUR )"	662:8:21315:21348	10238	1	True				
ANR	10573	CallExpression	"fseek ( fp , palette_size , SEEK_CUR )"		10238	0					
ANR	10574	Callee	fseek		10238	0					
ANR	10575	Identifier	fseek		10238	0					
ANR	10576	ArgumentList	fp		10238	1					
ANR	10577	Argument	fp		10238	0					
ANR	10578	Identifier	fp		10238	0					
ANR	10579	Argument	palette_size		10238	1					
ANR	10580	Identifier	palette_size		10238	0					
ANR	10581	Argument	SEEK_CUR		10238	2					
ANR	10582	Identifier	SEEK_CUR		10238	0					
ANR	10583	ReturnStatement	return 1 ;	664:4:21360:21368	10238	26	True				
ANR	10584	PrimaryExpression	1		10238	0					
ANR	10585	ReturnType	static int		10238	1					
ANR	10586	Identifier	tga_readheader		10238	2					
ANR	10587	ParameterList	"FILE * fp , unsigned int * bits_per_pixel , unsigned int * width , unsigned int * height , int * flip_image"		10238	3					
ANR	10588	Parameter	FILE * fp	591:26:19013:19020	10238	0	True				
ANR	10589	ParameterType	FILE *		10238	0					
ANR	10590	Identifier	fp		10238	1					
ANR	10591	Parameter	unsigned int * bits_per_pixel	591:36:19023:19050	10238	1	True				
ANR	10592	ParameterType	unsigned int *		10238	0					
ANR	10593	Identifier	bits_per_pixel		10238	1					
ANR	10594	Parameter	unsigned int * width	592:26:19079:19097	10238	2	True				
ANR	10595	ParameterType	unsigned int *		10238	0					
ANR	10596	Identifier	width		10238	1					
ANR	10597	Parameter	unsigned int * height	592:47:19100:19119	10238	3	True				
ANR	10598	ParameterType	unsigned int *		10238	0					
ANR	10599	Identifier	height		10238	1					
ANR	10600	Parameter	int * flip_image	592:69:19122:19136	10238	4	True				
ANR	10601	ParameterType	int *		10238	0					
ANR	10602	Identifier	flip_image		10238	1					
ANR	10603	CFGEntryNode	ENTRY		10238		True				
ANR	10604	CFGExitNode	EXIT		10238		True				
ANR	10605	Symbol	SEEK_CUR		10238						
ANR	10606	Symbol	palette_size		10238						
ANR	10607	Symbol	flip_image		10238						
ANR	10608	Symbol	get_tga_ushort		10238						
ANR	10609	Symbol	fp		10238						
ANR	10610	Symbol	pixel_depth		10238						
ANR	10611	Symbol	image_desc		10238						
ANR	10612	Symbol	bits_per_pixel		10238						
ANR	10613	Symbol	* width		10238						
ANR	10614	Symbol	tga		10238						
ANR	10615	Symbol	x_origin		10238						
ANR	10616	Symbol	y_origin		10238						
ANR	10617	Symbol	cmap_len		10238						
ANR	10618	Symbol	id		10238						
ANR	10619	Symbol	height		10238						
ANR	10620	Symbol	image_type		10238						
ANR	10621	Symbol	malloc		10238						
ANR	10622	Symbol	* bits_per_pixel		10238						
ANR	10623	Symbol	image_w		10238						
ANR	10624	Symbol	id_len		10238						
ANR	10625	Symbol	stderr		10238						
ANR	10626	Symbol	* height		10238						
ANR	10627	Symbol	fread		10238						
ANR	10628	Symbol	image_h		10238						
ANR	10629	Symbol	cmap_entry_size		10238						
ANR	10630	Symbol	* flip_image		10238						
ANR	10631	Symbol	width		10238						
ANR	10632	Symbol	* tga		10238						
ANR	10633	Symbol	TGA_HEADER_SIZE		10238						
ANR	10634	Function	swap16	669:0:21396:21516							
ANR	10635	FunctionDef	swap16 (OPJ_UINT16 x)		10634	0					
ANR	10636	CompoundStatement		670:0:21442:21516	10634	0					
ANR	10637	ReturnStatement	return ( OPJ_UINT16 ) ( ( ( x & 0x00ffU ) << 8 ) | ( ( x & 0xff00U ) >> 8 ) ) ;	671:4:21448:21514	10634	0	True				
ANR	10638	CastExpression	( OPJ_UINT16 ) ( ( ( x & 0x00ffU ) << 8 ) | ( ( x & 0xff00U ) >> 8 ) )		10634	0					
ANR	10639	CastTarget	OPJ_UINT16		10634	0					
ANR	10640	InclusiveOrExpression	( ( x & 0x00ffU ) << 8 ) | ( ( x & 0xff00U ) >> 8 )		10634	1		|			
ANR	10641	ShiftExpression	( x & 0x00ffU ) << 8		10634	0		<<			
ANR	10642	BitAndExpression	x & 0x00ffU		10634	0		&			
ANR	10643	Identifier	x		10634	0					
ANR	10644	PrimaryExpression	0x00ffU		10634	1					
ANR	10645	PrimaryExpression	8		10634	1					
ANR	10646	ShiftExpression	( x & 0xff00U ) >> 8		10634	1		>>			
ANR	10647	BitAndExpression	x & 0xff00U		10634	0		&			
ANR	10648	Identifier	x		10634	0					
ANR	10649	PrimaryExpression	0xff00U		10634	1					
ANR	10650	PrimaryExpression	8		10634	1					
ANR	10651	ReturnType	static INLINE OPJ_UINT16		10634	1					
ANR	10652	Identifier	swap16		10634	2					
ANR	10653	ParameterList	OPJ_UINT16 x		10634	3					
ANR	10654	Parameter	OPJ_UINT16 x	669:32:21428:21439	10634	0	True				
ANR	10655	ParameterType	OPJ_UINT16		10634	0					
ANR	10656	Identifier	x		10634	1					
ANR	10657	CFGEntryNode	ENTRY		10634		True				
ANR	10658	CFGExitNode	EXIT		10634		True				
ANR	10659	Symbol	x		10634						
ANR	10660	Function	tga_writeheader	676:0:21527:23620							
ANR	10661	FunctionDef	"tga_writeheader (FILE * fp , int bits_per_pixel , int width , int height , OPJ_BOOL flip_image)"		10660	0					
ANR	10662	CompoundStatement		678:0:21655:23620	10660	0					
ANR	10663	IdentifierDeclStatement	"OPJ_UINT16 image_w , image_h , us0 ;"	679:4:21661:21693	10660	0	True				
ANR	10664	IdentifierDecl	image_w		10660	0					
ANR	10665	IdentifierDeclType	OPJ_UINT16		10660	0					
ANR	10666	Identifier	image_w		10660	1					
ANR	10667	IdentifierDecl	image_h		10660	1					
ANR	10668	IdentifierDeclType	OPJ_UINT16		10660	0					
ANR	10669	Identifier	image_h		10660	1					
ANR	10670	IdentifierDecl	us0		10660	2					
ANR	10671	IdentifierDeclType	OPJ_UINT16		10660	0					
ANR	10672	Identifier	us0		10660	1					
ANR	10673	IdentifierDeclStatement	"unsigned char uc0 , image_type ;"	680:4:21699:21728	10660	1	True				
ANR	10674	IdentifierDecl	uc0		10660	0					
ANR	10675	IdentifierDeclType	unsigned char		10660	0					
ANR	10676	Identifier	uc0		10660	1					
ANR	10677	IdentifierDecl	image_type		10660	1					
ANR	10678	IdentifierDeclType	unsigned char		10660	0					
ANR	10679	Identifier	image_type		10660	1					
ANR	10680	IdentifierDeclStatement	"unsigned char pixel_depth , image_desc ;"	681:4:21734:21771	10660	2	True				
ANR	10681	IdentifierDecl	pixel_depth		10660	0					
ANR	10682	IdentifierDeclType	unsigned char		10660	0					
ANR	10683	Identifier	pixel_depth		10660	1					
ANR	10684	IdentifierDecl	image_desc		10660	1					
ANR	10685	IdentifierDeclType	unsigned char		10660	0					
ANR	10686	Identifier	image_desc		10660	1					
ANR	10687	IfStatement	if ( ! bits_per_pixel || ! width || ! height )		10660	3					
ANR	10688	Condition	! bits_per_pixel || ! width || ! height	683:8:21782:21817	10660	0	True				
ANR	10689	OrExpression	! bits_per_pixel || ! width || ! height		10660	0		||			
ANR	10690	UnaryOperationExpression	! bits_per_pixel		10660	0					
ANR	10691	UnaryOperator	!		10660	0					
ANR	10692	Identifier	bits_per_pixel		10660	1					
ANR	10693	OrExpression	! width || ! height		10660	1		||			
ANR	10694	UnaryOperationExpression	! width		10660	0					
ANR	10695	UnaryOperator	!		10660	0					
ANR	10696	Identifier	width		10660	1					
ANR	10697	UnaryOperationExpression	! height		10660	1					
ANR	10698	UnaryOperator	!		10660	0					
ANR	10699	Identifier	height		10660	1					
ANR	10700	CompoundStatement		6:46:164:164	10660	1					
ANR	10701	ReturnStatement	return 0 ;	684:8:21830:21838	10660	0	True				
ANR	10702	PrimaryExpression	0		10660	0					
ANR	10703	ExpressionStatement	pixel_depth = 0	687:4:21851:21866	10660	4	True				
ANR	10704	AssignmentExpression	pixel_depth = 0		10660	0		=			
ANR	10705	Identifier	pixel_depth		10660	0					
ANR	10706	PrimaryExpression	0		10660	1					
ANR	10707	IfStatement	if ( bits_per_pixel < 256 )		10660	5					
ANR	10708	Condition	bits_per_pixel < 256	689:8:21877:21896	10660	0	True				
ANR	10709	RelationalExpression	bits_per_pixel < 256		10660	0		<			
ANR	10710	Identifier	bits_per_pixel		10660	0					
ANR	10711	PrimaryExpression	256		10660	1					
ANR	10712	CompoundStatement		12:30:243:243	10660	1					
ANR	10713	ExpressionStatement	pixel_depth = ( unsigned char ) bits_per_pixel	690:8:21909:21952	10660	0	True				
ANR	10714	AssignmentExpression	pixel_depth = ( unsigned char ) bits_per_pixel		10660	0		=			
ANR	10715	Identifier	pixel_depth		10660	0					
ANR	10716	CastExpression	( unsigned char ) bits_per_pixel		10660	1					
ANR	10717	CastTarget	unsigned char		10660	0					
ANR	10718	Identifier	bits_per_pixel		10660	1					
ANR	10719	ElseStatement	else		10660	0					
ANR	10720	CompoundStatement		14:11:309:309	10660	0					
ANR	10721	ExpressionStatement	"fprintf ( stderr , ""ERROR: Wrong bits per pixel inside tga_header"" )"	692:8:21975:22039	10660	0	True				
ANR	10722	CallExpression	"fprintf ( stderr , ""ERROR: Wrong bits per pixel inside tga_header"" )"		10660	0					
ANR	10723	Callee	fprintf		10660	0					
ANR	10724	Identifier	fprintf		10660	0					
ANR	10725	ArgumentList	stderr		10660	1					
ANR	10726	Argument	stderr		10660	0					
ANR	10727	Identifier	stderr		10660	0					
ANR	10728	Argument	"""ERROR: Wrong bits per pixel inside tga_header"""		10660	1					
ANR	10729	PrimaryExpression	"""ERROR: Wrong bits per pixel inside tga_header"""		10660	0					
ANR	10730	ReturnStatement	return 0 ;	693:8:22049:22057	10660	1	True				
ANR	10731	PrimaryExpression	0		10660	0					
ANR	10732	ExpressionStatement	uc0 = 0	695:4:22069:22076	10660	6	True				
ANR	10733	AssignmentExpression	uc0 = 0		10660	0		=			
ANR	10734	Identifier	uc0		10660	0					
ANR	10735	PrimaryExpression	0		10660	1					
ANR	10736	IfStatement	"if ( fwrite ( & uc0 , 1 , 1 , fp ) != 1 )"		10660	7					
ANR	10737	Condition	"fwrite ( & uc0 , 1 , 1 , fp ) != 1"	697:8:22087:22113	10660	0	True				
ANR	10738	EqualityExpression	"fwrite ( & uc0 , 1 , 1 , fp ) != 1"		10660	0		!=			
ANR	10739	CallExpression	"fwrite ( & uc0 , 1 , 1 , fp )"		10660	0					
ANR	10740	Callee	fwrite		10660	0					
ANR	10741	Identifier	fwrite		10660	0					
ANR	10742	ArgumentList	& uc0		10660	1					
ANR	10743	Argument	& uc0		10660	0					
ANR	10744	UnaryOperationExpression	& uc0		10660	0					
ANR	10745	UnaryOperator	&		10660	0					
ANR	10746	Identifier	uc0		10660	1					
ANR	10747	Argument	1		10660	1					
ANR	10748	PrimaryExpression	1		10660	0					
ANR	10749	Argument	1		10660	2					
ANR	10750	PrimaryExpression	1		10660	0					
ANR	10751	Argument	fp		10660	3					
ANR	10752	Identifier	fp		10660	0					
ANR	10753	PrimaryExpression	1		10660	1					
ANR	10754	CompoundStatement		20:37:460:460	10660	1					
ANR	10755	GotoStatement	goto fails ;	698:8:22126:22136	10660	0	True				
ANR	10756	Identifier	fails		10660	0					
ANR	10757	IfStatement	"if ( fwrite ( & uc0 , 1 , 1 , fp ) != 1 )"		10660	8					
ANR	10758	Condition	"fwrite ( & uc0 , 1 , 1 , fp ) != 1"	700:8:22171:22197	10660	0	True				
ANR	10759	EqualityExpression	"fwrite ( & uc0 , 1 , 1 , fp ) != 1"		10660	0		!=			
ANR	10760	CallExpression	"fwrite ( & uc0 , 1 , 1 , fp )"		10660	0					
ANR	10761	Callee	fwrite		10660	0					
ANR	10762	Identifier	fwrite		10660	0					
ANR	10763	ArgumentList	& uc0		10660	1					
ANR	10764	Argument	& uc0		10660	0					
ANR	10765	UnaryOperationExpression	& uc0		10660	0					
ANR	10766	UnaryOperator	&		10660	0					
ANR	10767	Identifier	uc0		10660	1					
ANR	10768	Argument	1		10660	1					
ANR	10769	PrimaryExpression	1		10660	0					
ANR	10770	Argument	1		10660	2					
ANR	10771	PrimaryExpression	1		10660	0					
ANR	10772	Argument	fp		10660	3					
ANR	10773	Identifier	fp		10660	0					
ANR	10774	PrimaryExpression	1		10660	1					
ANR	10775	CompoundStatement		23:37:544:544	10660	1					
ANR	10776	GotoStatement	goto fails ;	701:8:22210:22220	10660	0	True				
ANR	10777	Identifier	fails		10660	0					
ANR	10778	ExpressionStatement	image_type = 2	704:4:22258:22272	10660	9	True				
ANR	10779	AssignmentExpression	image_type = 2		10660	0		=			
ANR	10780	Identifier	image_type		10660	0					
ANR	10781	PrimaryExpression	2		10660	1					
ANR	10782	IfStatement	"if ( fwrite ( & image_type , 1 , 1 , fp ) != 1 )"		10660	10					
ANR	10783	Condition	"fwrite ( & image_type , 1 , 1 , fp ) != 1"	705:8:22302:22335	10660	0	True				
ANR	10784	EqualityExpression	"fwrite ( & image_type , 1 , 1 , fp ) != 1"		10660	0		!=			
ANR	10785	CallExpression	"fwrite ( & image_type , 1 , 1 , fp )"		10660	0					
ANR	10786	Callee	fwrite		10660	0					
ANR	10787	Identifier	fwrite		10660	0					
ANR	10788	ArgumentList	& image_type		10660	1					
ANR	10789	Argument	& image_type		10660	0					
ANR	10790	UnaryOperationExpression	& image_type		10660	0					
ANR	10791	UnaryOperator	&		10660	0					
ANR	10792	Identifier	image_type		10660	1					
ANR	10793	Argument	1		10660	1					
ANR	10794	PrimaryExpression	1		10660	0					
ANR	10795	Argument	1		10660	2					
ANR	10796	PrimaryExpression	1		10660	0					
ANR	10797	Argument	fp		10660	3					
ANR	10798	Identifier	fp		10660	0					
ANR	10799	PrimaryExpression	1		10660	1					
ANR	10800	CompoundStatement		28:44:682:682	10660	1					
ANR	10801	GotoStatement	goto fails ;	706:8:22348:22358	10660	0	True				
ANR	10802	Identifier	fails		10660	0					
ANR	10803	ExpressionStatement	us0 = 0	709:4:22371:22378	10660	11	True				
ANR	10804	AssignmentExpression	us0 = 0		10660	0		=			
ANR	10805	Identifier	us0		10660	0					
ANR	10806	PrimaryExpression	0		10660	1					
ANR	10807	IfStatement	"if ( fwrite ( & us0 , 2 , 1 , fp ) != 1 )"		10660	12					
ANR	10808	Condition	"fwrite ( & us0 , 2 , 1 , fp ) != 1"	710:8:22388:22414	10660	0	True				
ANR	10809	EqualityExpression	"fwrite ( & us0 , 2 , 1 , fp ) != 1"		10660	0		!=			
ANR	10810	CallExpression	"fwrite ( & us0 , 2 , 1 , fp )"		10660	0					
ANR	10811	Callee	fwrite		10660	0					
ANR	10812	Identifier	fwrite		10660	0					
ANR	10813	ArgumentList	& us0		10660	1					
ANR	10814	Argument	& us0		10660	0					
ANR	10815	UnaryOperationExpression	& us0		10660	0					
ANR	10816	UnaryOperator	&		10660	0					
ANR	10817	Identifier	us0		10660	1					
ANR	10818	Argument	2		10660	1					
ANR	10819	PrimaryExpression	2		10660	0					
ANR	10820	Argument	1		10660	2					
ANR	10821	PrimaryExpression	1		10660	0					
ANR	10822	Argument	fp		10660	3					
ANR	10823	Identifier	fp		10660	0					
ANR	10824	PrimaryExpression	1		10660	1					
ANR	10825	CompoundStatement		33:37:761:761	10660	1					
ANR	10826	GotoStatement	goto fails ;	711:8:22427:22437	10660	0	True				
ANR	10827	Identifier	fails		10660	0					
ANR	10828	IfStatement	"if ( fwrite ( & us0 , 2 , 1 , fp ) != 1 )"		10660	13					
ANR	10829	Condition	"fwrite ( & us0 , 2 , 1 , fp ) != 1"	713:8:22479:22505	10660	0	True				
ANR	10830	EqualityExpression	"fwrite ( & us0 , 2 , 1 , fp ) != 1"		10660	0		!=			
ANR	10831	CallExpression	"fwrite ( & us0 , 2 , 1 , fp )"		10660	0					
ANR	10832	Callee	fwrite		10660	0					
ANR	10833	Identifier	fwrite		10660	0					
ANR	10834	ArgumentList	& us0		10660	1					
ANR	10835	Argument	& us0		10660	0					
ANR	10836	UnaryOperationExpression	& us0		10660	0					
ANR	10837	UnaryOperator	&		10660	0					
ANR	10838	Identifier	us0		10660	1					
ANR	10839	Argument	2		10660	1					
ANR	10840	PrimaryExpression	2		10660	0					
ANR	10841	Argument	1		10660	2					
ANR	10842	PrimaryExpression	1		10660	0					
ANR	10843	Argument	fp		10660	3					
ANR	10844	Identifier	fp		10660	0					
ANR	10845	PrimaryExpression	1		10660	1					
ANR	10846	CompoundStatement		36:37:852:852	10660	1					
ANR	10847	GotoStatement	goto fails ;	714:8:22518:22528	10660	0	True				
ANR	10848	Identifier	fails		10660	0					
ANR	10849	IfStatement	"if ( fwrite ( & uc0 , 1 , 1 , fp ) != 1 )"		10660	14					
ANR	10850	Condition	"fwrite ( & uc0 , 1 , 1 , fp ) != 1"	716:8:22571:22597	10660	0	True				
ANR	10851	EqualityExpression	"fwrite ( & uc0 , 1 , 1 , fp ) != 1"		10660	0		!=			
ANR	10852	CallExpression	"fwrite ( & uc0 , 1 , 1 , fp )"		10660	0					
ANR	10853	Callee	fwrite		10660	0					
ANR	10854	Identifier	fwrite		10660	0					
ANR	10855	ArgumentList	& uc0		10660	1					
ANR	10856	Argument	& uc0		10660	0					
ANR	10857	UnaryOperationExpression	& uc0		10660	0					
ANR	10858	UnaryOperator	&		10660	0					
ANR	10859	Identifier	uc0		10660	1					
ANR	10860	Argument	1		10660	1					
ANR	10861	PrimaryExpression	1		10660	0					
ANR	10862	Argument	1		10660	2					
ANR	10863	PrimaryExpression	1		10660	0					
ANR	10864	Argument	fp		10660	3					
ANR	10865	Identifier	fp		10660	0					
ANR	10866	PrimaryExpression	1		10660	1					
ANR	10867	CompoundStatement		39:37:944:944	10660	1					
ANR	10868	GotoStatement	goto fails ;	717:8:22610:22620	10660	0	True				
ANR	10869	Identifier	fails		10660	0					
ANR	10870	IfStatement	"if ( fwrite ( & us0 , 2 , 1 , fp ) != 1 )"		10660	15					
ANR	10871	Condition	"fwrite ( & us0 , 2 , 1 , fp ) != 1"	720:8:22668:22694	10660	0	True				
ANR	10872	EqualityExpression	"fwrite ( & us0 , 2 , 1 , fp ) != 1"		10660	0		!=			
ANR	10873	CallExpression	"fwrite ( & us0 , 2 , 1 , fp )"		10660	0					
ANR	10874	Callee	fwrite		10660	0					
ANR	10875	Identifier	fwrite		10660	0					
ANR	10876	ArgumentList	& us0		10660	1					
ANR	10877	Argument	& us0		10660	0					
ANR	10878	UnaryOperationExpression	& us0		10660	0					
ANR	10879	UnaryOperator	&		10660	0					
ANR	10880	Identifier	us0		10660	1					
ANR	10881	Argument	2		10660	1					
ANR	10882	PrimaryExpression	2		10660	0					
ANR	10883	Argument	1		10660	2					
ANR	10884	PrimaryExpression	1		10660	0					
ANR	10885	Argument	fp		10660	3					
ANR	10886	Identifier	fp		10660	0					
ANR	10887	PrimaryExpression	1		10660	1					
ANR	10888	CompoundStatement		43:37:1041:1041	10660	1					
ANR	10889	GotoStatement	goto fails ;	721:8:22707:22717	10660	0	True				
ANR	10890	Identifier	fails		10660	0					
ANR	10891	IfStatement	"if ( fwrite ( & us0 , 2 , 1 , fp ) != 1 )"		10660	16					
ANR	10892	Condition	"fwrite ( & us0 , 2 , 1 , fp ) != 1"	723:8:22751:22777	10660	0	True				
ANR	10893	EqualityExpression	"fwrite ( & us0 , 2 , 1 , fp ) != 1"		10660	0		!=			
ANR	10894	CallExpression	"fwrite ( & us0 , 2 , 1 , fp )"		10660	0					
ANR	10895	Callee	fwrite		10660	0					
ANR	10896	Identifier	fwrite		10660	0					
ANR	10897	ArgumentList	& us0		10660	1					
ANR	10898	Argument	& us0		10660	0					
ANR	10899	UnaryOperationExpression	& us0		10660	0					
ANR	10900	UnaryOperator	&		10660	0					
ANR	10901	Identifier	us0		10660	1					
ANR	10902	Argument	2		10660	1					
ANR	10903	PrimaryExpression	2		10660	0					
ANR	10904	Argument	1		10660	2					
ANR	10905	PrimaryExpression	1		10660	0					
ANR	10906	Argument	fp		10660	3					
ANR	10907	Identifier	fp		10660	0					
ANR	10908	PrimaryExpression	1		10660	1					
ANR	10909	CompoundStatement		46:37:1124:1124	10660	1					
ANR	10910	GotoStatement	goto fails ;	724:8:22790:22800	10660	0	True				
ANR	10911	Identifier	fails		10660	0					
ANR	10912	ExpressionStatement	image_w = ( unsigned short ) width	727:4:22831:22862	10660	17	True				
ANR	10913	AssignmentExpression	image_w = ( unsigned short ) width		10660	0		=			
ANR	10914	Identifier	image_w		10660	0					
ANR	10915	CastExpression	( unsigned short ) width		10660	1					
ANR	10916	CastTarget	unsigned short		10660	0					
ANR	10917	Identifier	width		10660	1					
ANR	10918	ExpressionStatement	image_h = ( unsigned short ) height	728:4:22868:22901	10660	18	True				
ANR	10919	AssignmentExpression	image_h = ( unsigned short ) height		10660	0		=			
ANR	10920	Identifier	image_h		10660	0					
ANR	10921	CastExpression	( unsigned short ) height		10660	1					
ANR	10922	CastTarget	unsigned short		10660	0					
ANR	10923	Identifier	height		10660	1					
ANR	10924	IfStatement	"if ( fwrite ( & image_w , 2 , 1 , fp ) != 1 )"		10660	19					
ANR	10925	Condition	"fwrite ( & image_w , 2 , 1 , fp ) != 1"	731:8:22935:22965	10660	0	True				
ANR	10926	EqualityExpression	"fwrite ( & image_w , 2 , 1 , fp ) != 1"		10660	0		!=			
ANR	10927	CallExpression	"fwrite ( & image_w , 2 , 1 , fp )"		10660	0					
ANR	10928	Callee	fwrite		10660	0					
ANR	10929	Identifier	fwrite		10660	0					
ANR	10930	ArgumentList	& image_w		10660	1					
ANR	10931	Argument	& image_w		10660	0					
ANR	10932	UnaryOperationExpression	& image_w		10660	0					
ANR	10933	UnaryOperator	&		10660	0					
ANR	10934	Identifier	image_w		10660	1					
ANR	10935	Argument	2		10660	1					
ANR	10936	PrimaryExpression	2		10660	0					
ANR	10937	Argument	1		10660	2					
ANR	10938	PrimaryExpression	1		10660	0					
ANR	10939	Argument	fp		10660	3					
ANR	10940	Identifier	fp		10660	0					
ANR	10941	PrimaryExpression	1		10660	1					
ANR	10942	CompoundStatement		54:41:1312:1312	10660	1					
ANR	10943	GotoStatement	goto fails ;	732:8:22978:22988	10660	0	True				
ANR	10944	Identifier	fails		10660	0					
ANR	10945	IfStatement	"if ( fwrite ( & image_h , 2 , 1 , fp ) != 1 )"		10660	20					
ANR	10946	Condition	"fwrite ( & image_h , 2 , 1 , fp ) != 1"	734:8:23004:23034	10660	0	True				
ANR	10947	EqualityExpression	"fwrite ( & image_h , 2 , 1 , fp ) != 1"		10660	0		!=			
ANR	10948	CallExpression	"fwrite ( & image_h , 2 , 1 , fp )"		10660	0					
ANR	10949	Callee	fwrite		10660	0					
ANR	10950	Identifier	fwrite		10660	0					
ANR	10951	ArgumentList	& image_h		10660	1					
ANR	10952	Argument	& image_h		10660	0					
ANR	10953	UnaryOperationExpression	& image_h		10660	0					
ANR	10954	UnaryOperator	&		10660	0					
ANR	10955	Identifier	image_h		10660	1					
ANR	10956	Argument	2		10660	1					
ANR	10957	PrimaryExpression	2		10660	0					
ANR	10958	Argument	1		10660	2					
ANR	10959	PrimaryExpression	1		10660	0					
ANR	10960	Argument	fp		10660	3					
ANR	10961	Identifier	fp		10660	0					
ANR	10962	PrimaryExpression	1		10660	1					
ANR	10963	CompoundStatement		57:41:1381:1381	10660	1					
ANR	10964	GotoStatement	goto fails ;	735:8:23047:23057	10660	0	True				
ANR	10965	Identifier	fails		10660	0					
ANR	10966	IfStatement	"if ( fwrite ( & pixel_depth , 1 , 1 , fp ) != 1 )"		10660	21					
ANR	10967	Condition	"fwrite ( & pixel_depth , 1 , 1 , fp ) != 1"	748:8:23287:23321	10660	0	True				
ANR	10968	EqualityExpression	"fwrite ( & pixel_depth , 1 , 1 , fp ) != 1"		10660	0		!=			
ANR	10969	CallExpression	"fwrite ( & pixel_depth , 1 , 1 , fp )"		10660	0					
ANR	10970	Callee	fwrite		10660	0					
ANR	10971	Identifier	fwrite		10660	0					
ANR	10972	ArgumentList	& pixel_depth		10660	1					
ANR	10973	Argument	& pixel_depth		10660	0					
ANR	10974	UnaryOperationExpression	& pixel_depth		10660	0					
ANR	10975	UnaryOperator	&		10660	0					
ANR	10976	Identifier	pixel_depth		10660	1					
ANR	10977	Argument	1		10660	1					
ANR	10978	PrimaryExpression	1		10660	0					
ANR	10979	Argument	1		10660	2					
ANR	10980	PrimaryExpression	1		10660	0					
ANR	10981	Argument	fp		10660	3					
ANR	10982	Identifier	fp		10660	0					
ANR	10983	PrimaryExpression	1		10660	1					
ANR	10984	CompoundStatement		71:45:1668:1668	10660	1					
ANR	10985	GotoStatement	goto fails ;	749:8:23334:23344	10660	0	True				
ANR	10986	Identifier	fails		10660	0					
ANR	10987	ExpressionStatement	image_desc = 8	752:4:23357:23371	10660	22	True				
ANR	10988	AssignmentExpression	image_desc = 8		10660	0		=			
ANR	10989	Identifier	image_desc		10660	0					
ANR	10990	PrimaryExpression	8		10660	1					
ANR	10991	IfStatement	if ( flip_image )		10660	23					
ANR	10992	Condition	flip_image	754:8:23410:23419	10660	0	True				
ANR	10993	Identifier	flip_image		10660	0					
ANR	10994	CompoundStatement		77:20:1766:1766	10660	1					
ANR	10995	ExpressionStatement	image_desc |= 32	755:8:23432:23448	10660	0	True				
ANR	10996	AssignmentExpression	image_desc |= 32		10660	0		|=			
ANR	10997	Identifier	image_desc		10660	0					
ANR	10998	PrimaryExpression	32		10660	1					
ANR	10999	IfStatement	"if ( fwrite ( & image_desc , 1 , 1 , fp ) != 1 )"		10660	24					
ANR	11000	Condition	"fwrite ( & image_desc , 1 , 1 , fp ) != 1"	757:8:23464:23497	10660	0	True				
ANR	11001	EqualityExpression	"fwrite ( & image_desc , 1 , 1 , fp ) != 1"		10660	0		!=			
ANR	11002	CallExpression	"fwrite ( & image_desc , 1 , 1 , fp )"		10660	0					
ANR	11003	Callee	fwrite		10660	0					
ANR	11004	Identifier	fwrite		10660	0					
ANR	11005	ArgumentList	& image_desc		10660	1					
ANR	11006	Argument	& image_desc		10660	0					
ANR	11007	UnaryOperationExpression	& image_desc		10660	0					
ANR	11008	UnaryOperator	&		10660	0					
ANR	11009	Identifier	image_desc		10660	1					
ANR	11010	Argument	1		10660	1					
ANR	11011	PrimaryExpression	1		10660	0					
ANR	11012	Argument	1		10660	2					
ANR	11013	PrimaryExpression	1		10660	0					
ANR	11014	Argument	fp		10660	3					
ANR	11015	Identifier	fp		10660	0					
ANR	11016	PrimaryExpression	1		10660	1					
ANR	11017	CompoundStatement		80:44:1844:1844	10660	1					
ANR	11018	GotoStatement	goto fails ;	758:8:23510:23520	10660	0	True				
ANR	11019	Identifier	fails		10660	0					
ANR	11020	ReturnStatement	return 1 ;	761:4:23533:23541	10660	25	True				
ANR	11021	PrimaryExpression	1		10660	0					
ANR	11022	Label	fails :	763:0:23544:23549	10660	26	True				
ANR	11023	Identifier	fails		10660	0					
ANR	11024	ExpressionStatement	"fputs ( ""\\nwrite_tgaheader: write ERROR\\n"" , stderr )"	764:4:23555:23604	10660	27	True				
ANR	11025	CallExpression	"fputs ( ""\\nwrite_tgaheader: write ERROR\\n"" , stderr )"		10660	0					
ANR	11026	Callee	fputs		10660	0					
ANR	11027	Identifier	fputs		10660	0					
ANR	11028	ArgumentList	"""\\nwrite_tgaheader: write ERROR\\n"""		10660	1					
ANR	11029	Argument	"""\\nwrite_tgaheader: write ERROR\\n"""		10660	0					
ANR	11030	PrimaryExpression	"""\\nwrite_tgaheader: write ERROR\\n"""		10660	0					
ANR	11031	Argument	stderr		10660	1					
ANR	11032	Identifier	stderr		10660	0					
ANR	11033	ReturnStatement	return 0 ;	765:4:23610:23618	10660	28	True				
ANR	11034	PrimaryExpression	0		10660	0					
ANR	11035	ReturnType	static int		10660	1					
ANR	11036	Identifier	tga_writeheader		10660	2					
ANR	11037	ParameterList	"FILE * fp , int bits_per_pixel , int width , int height , OPJ_BOOL flip_image"		10660	3					
ANR	11038	Parameter	FILE * fp	676:27:21554:21561	10660	0	True				
ANR	11039	ParameterType	FILE *		10660	0					
ANR	11040	Identifier	fp		10660	1					
ANR	11041	Parameter	int bits_per_pixel	676:37:21564:21581	10660	1	True				
ANR	11042	ParameterType	int		10660	0					
ANR	11043	Identifier	bits_per_pixel		10660	1					
ANR	11044	Parameter	int width	676:57:21584:21592	10660	2	True				
ANR	11045	ParameterType	int		10660	0					
ANR	11046	Identifier	width		10660	1					
ANR	11047	Parameter	int height	676:68:21595:21604	10660	3	True				
ANR	11048	ParameterType	int		10660	0					
ANR	11049	Identifier	height		10660	1					
ANR	11050	Parameter	OPJ_BOOL flip_image	677:27:21634:21652	10660	4	True				
ANR	11051	ParameterType	OPJ_BOOL		10660	0					
ANR	11052	Identifier	flip_image		10660	1					
ANR	11053	CFGEntryNode	ENTRY		10660		True				
ANR	11054	CFGExitNode	EXIT		10660		True				
ANR	11055	Symbol	& image_desc		10660						
ANR	11056	Symbol	uc0		10660						
ANR	11057	Symbol	image_w		10660						
ANR	11058	Symbol	flip_image		10660						
ANR	11059	Symbol	fwrite		10660						
ANR	11060	Symbol	& image_h		10660						
ANR	11061	Symbol	fp		10660						
ANR	11062	Symbol	pixel_depth		10660						
ANR	11063	Symbol	image_desc		10660						
ANR	11064	Symbol	stderr		10660						
ANR	11065	Symbol	bits_per_pixel		10660						
ANR	11066	Symbol	& image_type		10660						
ANR	11067	Symbol	& uc0		10660						
ANR	11068	Symbol	image_h		10660						
ANR	11069	Symbol	us0		10660						
ANR	11070	Symbol	width		10660						
ANR	11071	Symbol	& image_w		10660						
ANR	11072	Symbol	& pixel_depth		10660						
ANR	11073	Symbol	height		10660						
ANR	11074	Symbol	image_type		10660						
ANR	11075	Symbol	& us0		10660						
ANR	11076	Function	tgatoimage	768:0:23623:30185							
ANR	11077	FunctionDef	"tgatoimage (const char * filename , opj_cparameters_t * parameters)"		11076	0					
ANR	11078	CompoundStatement		769:0:23700:30185	11076	0					
ANR	11079	IdentifierDeclStatement	FILE * f ;	770:4:23706:23713	11076	0	True				
ANR	11080	IdentifierDecl	* f		11076	0					
ANR	11081	IdentifierDeclType	FILE *		11076	0					
ANR	11082	Identifier	f		11076	1					
ANR	11083	IdentifierDeclStatement	opj_image_t * image ;	771:4:23719:23737	11076	1	True				
ANR	11084	IdentifierDecl	* image		11076	0					
ANR	11085	IdentifierDeclType	opj_image_t *		11076	0					
ANR	11086	Identifier	image		11076	1					
ANR	11087	IdentifierDeclStatement	"unsigned int image_width , image_height , pixel_bit_depth ;"	772:4:23743:23798	11076	2	True				
ANR	11088	IdentifierDecl	image_width		11076	0					
ANR	11089	IdentifierDeclType	unsigned int		11076	0					
ANR	11090	Identifier	image_width		11076	1					
ANR	11091	IdentifierDecl	image_height		11076	1					
ANR	11092	IdentifierDeclType	unsigned int		11076	0					
ANR	11093	Identifier	image_height		11076	1					
ANR	11094	IdentifierDecl	pixel_bit_depth		11076	2					
ANR	11095	IdentifierDeclType	unsigned int		11076	0					
ANR	11096	Identifier	pixel_bit_depth		11076	1					
ANR	11097	IdentifierDeclStatement	"unsigned int x , y ;"	773:4:23804:23821	11076	3	True				
ANR	11098	IdentifierDecl	x		11076	0					
ANR	11099	IdentifierDeclType	unsigned int		11076	0					
ANR	11100	Identifier	x		11076	1					
ANR	11101	IdentifierDecl	y		11076	1					
ANR	11102	IdentifierDeclType	unsigned int		11076	0					
ANR	11103	Identifier	y		11076	1					
ANR	11104	IdentifierDeclStatement	int flip_image = 0 ;	774:4:23827:23845	11076	4	True				
ANR	11105	IdentifierDecl	flip_image = 0		11076	0					
ANR	11106	IdentifierDeclType	int		11076	0					
ANR	11107	Identifier	flip_image		11076	1					
ANR	11108	AssignmentExpression	flip_image = 0		11076	2		=			
ANR	11109	Identifier	flip_image		11076	0					
ANR	11110	PrimaryExpression	0		11076	1					
ANR	11111	IdentifierDeclStatement	opj_image_cmptparm_t cmptparm [ 4 ] ;	775:4:23851:23883	11076	5	True				
ANR	11112	IdentifierDecl	cmptparm [ 4 ]		11076	0					
ANR	11113	IdentifierDeclType	opj_image_cmptparm_t [ 4 ]		11076	0					
ANR	11114	Identifier	cmptparm		11076	1					
ANR	11115	PrimaryExpression	4		11076	2					
ANR	11116	IdentifierDeclStatement	int numcomps ;	776:4:23918:23930	11076	6	True				
ANR	11117	IdentifierDecl	numcomps		11076	0					
ANR	11118	IdentifierDeclType	int		11076	0					
ANR	11119	Identifier	numcomps		11076	1					
ANR	11120	IdentifierDeclStatement	OPJ_COLOR_SPACE color_space ;	777:4:23936:23963	11076	7	True				
ANR	11121	IdentifierDecl	color_space		11076	0					
ANR	11122	IdentifierDeclType	OPJ_COLOR_SPACE		11076	0					
ANR	11123	Identifier	color_space		11076	1					
ANR	11124	IdentifierDeclStatement	OPJ_BOOL mono ;	778:4:23969:23983	11076	8	True				
ANR	11125	IdentifierDecl	mono		11076	0					
ANR	11126	IdentifierDeclType	OPJ_BOOL		11076	0					
ANR	11127	Identifier	mono		11076	1					
ANR	11128	IdentifierDeclStatement	OPJ_BOOL save_alpha ;	779:4:23989:24008	11076	9	True				
ANR	11129	IdentifierDecl	save_alpha		11076	0					
ANR	11130	IdentifierDeclType	OPJ_BOOL		11076	0					
ANR	11131	Identifier	save_alpha		11076	1					
ANR	11132	IdentifierDeclStatement	"int subsampling_dx , subsampling_dy ;"	780:4:24014:24048	11076	10	True				
ANR	11133	IdentifierDecl	subsampling_dx		11076	0					
ANR	11134	IdentifierDeclType	int		11076	0					
ANR	11135	Identifier	subsampling_dx		11076	1					
ANR	11136	IdentifierDecl	subsampling_dy		11076	1					
ANR	11137	IdentifierDeclType	int		11076	0					
ANR	11138	Identifier	subsampling_dy		11076	1					
ANR	11139	IdentifierDeclStatement	int i ;	781:4:24054:24059	11076	11	True				
ANR	11140	IdentifierDecl	i		11076	0					
ANR	11141	IdentifierDeclType	int		11076	0					
ANR	11142	Identifier	i		11076	1					
ANR	11143	ExpressionStatement	"f = fopen ( filename , ""rb"" )"	783:4:24066:24091	11076	12	True				
ANR	11144	AssignmentExpression	"f = fopen ( filename , ""rb"" )"		11076	0		=			
ANR	11145	Identifier	f		11076	0					
ANR	11146	CallExpression	"fopen ( filename , ""rb"" )"		11076	1					
ANR	11147	Callee	fopen		11076	0					
ANR	11148	Identifier	fopen		11076	0					
ANR	11149	ArgumentList	filename		11076	1					
ANR	11150	Argument	filename		11076	0					
ANR	11151	Identifier	filename		11076	0					
ANR	11152	Argument	"""rb"""		11076	1					
ANR	11153	PrimaryExpression	"""rb"""		11076	0					
ANR	11154	IfStatement	if ( ! f )		11076	13					
ANR	11155	Condition	! f	784:8:24101:24102	11076	0	True				
ANR	11156	UnaryOperationExpression	! f		11076	0					
ANR	11157	UnaryOperator	!		11076	0					
ANR	11158	Identifier	f		11076	1					
ANR	11159	CompoundStatement		16:12:404:404	11076	1					
ANR	11160	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s for reading !!\\n"" , filename )"	785:8:24115:24178	11076	0	True				
ANR	11161	CallExpression	"fprintf ( stderr , ""Failed to open %s for reading !!\\n"" , filename )"		11076	0					
ANR	11162	Callee	fprintf		11076	0					
ANR	11163	Identifier	fprintf		11076	0					
ANR	11164	ArgumentList	stderr		11076	1					
ANR	11165	Argument	stderr		11076	0					
ANR	11166	Identifier	stderr		11076	0					
ANR	11167	Argument	"""Failed to open %s for reading !!\\n"""		11076	1					
ANR	11168	PrimaryExpression	"""Failed to open %s for reading !!\\n"""		11076	0					
ANR	11169	Argument	filename		11076	2					
ANR	11170	Identifier	filename		11076	0					
ANR	11171	ReturnStatement	return 0 ;	786:8:24188:24196	11076	1	True				
ANR	11172	PrimaryExpression	0		11076	0					
ANR	11173	IfStatement	"if ( ! tga_readheader ( f , & pixel_bit_depth , & image_width , & image_height , & flip_image ) )"		11076	14					
ANR	11174	Condition	"! tga_readheader ( f , & pixel_bit_depth , & image_width , & image_height , & flip_image )"	789:8:24213:24314	11076	0	True				
ANR	11175	UnaryOperationExpression	"! tga_readheader ( f , & pixel_bit_depth , & image_width , & image_height , & flip_image )"		11076	0					
ANR	11176	UnaryOperator	!		11076	0					
ANR	11177	CallExpression	"tga_readheader ( f , & pixel_bit_depth , & image_width , & image_height , & flip_image )"		11076	1					
ANR	11178	Callee	tga_readheader		11076	0					
ANR	11179	Identifier	tga_readheader		11076	0					
ANR	11180	ArgumentList	f		11076	1					
ANR	11181	Argument	f		11076	0					
ANR	11182	Identifier	f		11076	0					
ANR	11183	Argument	& pixel_bit_depth		11076	1					
ANR	11184	UnaryOperationExpression	& pixel_bit_depth		11076	0					
ANR	11185	UnaryOperator	&		11076	0					
ANR	11186	Identifier	pixel_bit_depth		11076	1					
ANR	11187	Argument	& image_width		11076	2					
ANR	11188	UnaryOperationExpression	& image_width		11076	0					
ANR	11189	UnaryOperator	&		11076	0					
ANR	11190	Identifier	image_width		11076	1					
ANR	11191	Argument	& image_height		11076	3					
ANR	11192	UnaryOperationExpression	& image_height		11076	0					
ANR	11193	UnaryOperator	&		11076	0					
ANR	11194	Identifier	image_height		11076	1					
ANR	11195	Argument	& flip_image		11076	4					
ANR	11196	UnaryOperationExpression	& flip_image		11076	0					
ANR	11197	UnaryOperator	&		11076	0					
ANR	11198	Identifier	flip_image		11076	1					
ANR	11199	CompoundStatement		22:38:616:616	11076	1					
ANR	11200	ExpressionStatement	fclose ( f )	791:8:24327:24336	11076	0	True				
ANR	11201	CallExpression	fclose ( f )		11076	0					
ANR	11202	Callee	fclose		11076	0					
ANR	11203	Identifier	fclose		11076	0					
ANR	11204	ArgumentList	f		11076	1					
ANR	11205	Argument	f		11076	0					
ANR	11206	Identifier	f		11076	0					
ANR	11207	ReturnStatement	return NULL ;	792:8:24346:24357	11076	1	True				
ANR	11208	Identifier	NULL		11076	0					
ANR	11209	IfStatement	if ( ! ( ( pixel_bit_depth == 24 ) || ( pixel_bit_depth == 32 ) ) )		11076	15					
ANR	11210	Condition	! ( ( pixel_bit_depth == 24 ) || ( pixel_bit_depth == 32 ) )	796:8:24432:24484	11076	0	True				
ANR	11211	UnaryOperationExpression	! ( ( pixel_bit_depth == 24 ) || ( pixel_bit_depth == 32 ) )		11076	0					
ANR	11212	UnaryOperator	!		11076	0					
ANR	11213	OrExpression	( pixel_bit_depth == 24 ) || ( pixel_bit_depth == 32 )		11076	1		||			
ANR	11214	EqualityExpression	pixel_bit_depth == 24		11076	0		==			
ANR	11215	Identifier	pixel_bit_depth		11076	0					
ANR	11216	PrimaryExpression	24		11076	1					
ANR	11217	EqualityExpression	pixel_bit_depth == 32		11076	1		==			
ANR	11218	Identifier	pixel_bit_depth		11076	0					
ANR	11219	PrimaryExpression	32		11076	1					
ANR	11220	CompoundStatement		28:63:786:786	11076	1					
ANR	11221	ExpressionStatement	fclose ( f )	797:8:24497:24506	11076	0	True				
ANR	11222	CallExpression	fclose ( f )		11076	0					
ANR	11223	Callee	fclose		11076	0					
ANR	11224	Identifier	fclose		11076	0					
ANR	11225	ArgumentList	f		11076	1					
ANR	11226	Argument	f		11076	0					
ANR	11227	Identifier	f		11076	0					
ANR	11228	ReturnStatement	return NULL ;	798:8:24516:24527	11076	1	True				
ANR	11229	Identifier	NULL		11076	0					
ANR	11230	ExpressionStatement	"memset ( & cmptparm [ 0 ] , 0 , 4 * sizeof ( opj_image_cmptparm_t ) )"	802:4:24578:24635	11076	16	True				
ANR	11231	CallExpression	"memset ( & cmptparm [ 0 ] , 0 , 4 * sizeof ( opj_image_cmptparm_t ) )"		11076	0					
ANR	11232	Callee	memset		11076	0					
ANR	11233	Identifier	memset		11076	0					
ANR	11234	ArgumentList	& cmptparm [ 0 ]		11076	1					
ANR	11235	Argument	& cmptparm [ 0 ]		11076	0					
ANR	11236	UnaryOperationExpression	& cmptparm [ 0 ]		11076	0					
ANR	11237	UnaryOperator	&		11076	0					
ANR	11238	ArrayIndexing	cmptparm [ 0 ]		11076	1					
ANR	11239	Identifier	cmptparm		11076	0					
ANR	11240	PrimaryExpression	0		11076	1					
ANR	11241	Argument	0		11076	1					
ANR	11242	PrimaryExpression	0		11076	0					
ANR	11243	Argument	4 * sizeof ( opj_image_cmptparm_t )		11076	2					
ANR	11244	MultiplicativeExpression	4 * sizeof ( opj_image_cmptparm_t )		11076	0		*			
ANR	11245	PrimaryExpression	4		11076	0					
ANR	11246	SizeofExpression	sizeof ( opj_image_cmptparm_t )		11076	1					
ANR	11247	Sizeof	sizeof		11076	0					
ANR	11248	SizeofOperand	opj_image_cmptparm_t		11076	1					
ANR	11249	ExpressionStatement	mono = ( pixel_bit_depth == 8 ) || ( pixel_bit_depth == 16 )	804:4:24642:24709	11076	17	True				
ANR	11250	AssignmentExpression	mono = ( pixel_bit_depth == 8 ) || ( pixel_bit_depth == 16 )		11076	0		=			
ANR	11251	Identifier	mono		11076	0					
ANR	11252	OrExpression	( pixel_bit_depth == 8 ) || ( pixel_bit_depth == 16 )		11076	1		||			
ANR	11253	EqualityExpression	pixel_bit_depth == 8		11076	0		==			
ANR	11254	Identifier	pixel_bit_depth		11076	0					
ANR	11255	PrimaryExpression	8		11076	1					
ANR	11256	EqualityExpression	pixel_bit_depth == 16		11076	1		==			
ANR	11257	Identifier	pixel_bit_depth		11076	0					
ANR	11258	PrimaryExpression	16		11076	1					
ANR	11259	ExpressionStatement	save_alpha = ( pixel_bit_depth == 16 ) || ( pixel_bit_depth == 32 )	806:4:24749:24829	11076	18	True				
ANR	11260	AssignmentExpression	save_alpha = ( pixel_bit_depth == 16 ) || ( pixel_bit_depth == 32 )		11076	0		=			
ANR	11261	Identifier	save_alpha		11076	0					
ANR	11262	OrExpression	( pixel_bit_depth == 16 ) || ( pixel_bit_depth == 32 )		11076	1		||			
ANR	11263	EqualityExpression	pixel_bit_depth == 16		11076	0		==			
ANR	11264	Identifier	pixel_bit_depth		11076	0					
ANR	11265	PrimaryExpression	16		11076	1					
ANR	11266	EqualityExpression	pixel_bit_depth == 32		11076	1		==			
ANR	11267	Identifier	pixel_bit_depth		11076	0					
ANR	11268	PrimaryExpression	32		11076	1					
ANR	11269	IfStatement	if ( mono )		11076	19					
ANR	11270	Condition	mono	809:8:24881:24884	11076	0	True				
ANR	11271	Identifier	mono		11076	0					
ANR	11272	CompoundStatement		41:14:1186:1186	11076	1					
ANR	11273	ExpressionStatement	color_space = OPJ_CLRSPC_GRAY	810:8:24897:24926	11076	0	True				
ANR	11274	AssignmentExpression	color_space = OPJ_CLRSPC_GRAY		11076	0		=			
ANR	11275	Identifier	color_space		11076	0					
ANR	11276	Identifier	OPJ_CLRSPC_GRAY		11076	1					
ANR	11277	ExpressionStatement	numcomps = save_alpha ? 2 : 1	811:8:24936:24965	11076	1	True				
ANR	11278	AssignmentExpression	numcomps = save_alpha ? 2 : 1		11076	0		=			
ANR	11279	Identifier	numcomps		11076	0					
ANR	11280	ConditionalExpression	save_alpha ? 2 : 1		11076	1					
ANR	11281	Condition	save_alpha		11076	0					
ANR	11282	Identifier	save_alpha		11076	0					
ANR	11283	PrimaryExpression	2		11076	1					
ANR	11284	PrimaryExpression	1		11076	2					
ANR	11285	ElseStatement	else		11076	0					
ANR	11286	CompoundStatement		44:11:1277:1277	11076	0					
ANR	11287	ExpressionStatement	numcomps = save_alpha ? 4 : 3	813:8:24988:25017	11076	0	True				
ANR	11288	AssignmentExpression	numcomps = save_alpha ? 4 : 3		11076	0		=			
ANR	11289	Identifier	numcomps		11076	0					
ANR	11290	ConditionalExpression	save_alpha ? 4 : 3		11076	1					
ANR	11291	Condition	save_alpha		11076	0					
ANR	11292	Identifier	save_alpha		11076	0					
ANR	11293	PrimaryExpression	4		11076	1					
ANR	11294	PrimaryExpression	3		11076	2					
ANR	11295	ExpressionStatement	color_space = OPJ_CLRSPC_SRGB	814:8:25027:25056	11076	1	True				
ANR	11296	AssignmentExpression	color_space = OPJ_CLRSPC_SRGB		11076	0		=			
ANR	11297	Identifier	color_space		11076	0					
ANR	11298	Identifier	OPJ_CLRSPC_SRGB		11076	1					
ANR	11299	IfStatement	if ( image_height != 0 && image_width > 10000000U / image_height / ( OPJ_UINT32 ) numcomps )		11076	20					
ANR	11300	Condition	image_height != 0 && image_width > 10000000U / image_height / ( OPJ_UINT32 ) numcomps	819:8:25203:25296	11076	0	True				
ANR	11301	AndExpression	image_height != 0 && image_width > 10000000U / image_height / ( OPJ_UINT32 ) numcomps		11076	0		&&			
ANR	11302	EqualityExpression	image_height != 0		11076	0		!=			
ANR	11303	Identifier	image_height		11076	0					
ANR	11304	PrimaryExpression	0		11076	1					
ANR	11305	RelationalExpression	image_width > 10000000U / image_height / ( OPJ_UINT32 ) numcomps		11076	1		>			
ANR	11306	Identifier	image_width		11076	0					
ANR	11307	MultiplicativeExpression	10000000U / image_height / ( OPJ_UINT32 ) numcomps		11076	1		/			
ANR	11308	PrimaryExpression	10000000U		11076	0					
ANR	11309	MultiplicativeExpression	image_height / ( OPJ_UINT32 ) numcomps		11076	1		/			
ANR	11310	Identifier	image_height		11076	0					
ANR	11311	CastExpression	( OPJ_UINT32 ) numcomps		11076	1					
ANR	11312	CastTarget	OPJ_UINT32		11076	0					
ANR	11313	Identifier	numcomps		11076	1					
ANR	11314	CompoundStatement		56:8:1740:1762	11076	1					
ANR	11315	IdentifierDeclStatement	char ch ;	821:8:25309:25316	11076	0	True				
ANR	11316	IdentifierDecl	ch		11076	0					
ANR	11317	IdentifierDeclType	char		11076	0					
ANR	11318	Identifier	ch		11076	1					
ANR	11319	IdentifierDeclStatement	OPJ_UINT64 expected_file_size = ( OPJ_UINT64 ) image_width * image_height * ( OPJ_UINT32 ) numcomps ;	822:8:25326:25431	11076	1	True				
ANR	11320	IdentifierDecl	expected_file_size = ( OPJ_UINT64 ) image_width * image_height * ( OPJ_UINT32 ) numcomps		11076	0					
ANR	11321	IdentifierDeclType	OPJ_UINT64		11076	0					
ANR	11322	Identifier	expected_file_size		11076	1					
ANR	11323	AssignmentExpression	expected_file_size = ( OPJ_UINT64 ) image_width * image_height * ( OPJ_UINT32 ) numcomps		11076	2		=			
ANR	11324	Identifier	expected_file_size		11076	0					
ANR	11325	MultiplicativeExpression	( OPJ_UINT64 ) image_width * image_height * ( OPJ_UINT32 ) numcomps		11076	1		*			
ANR	11326	CastExpression	( OPJ_UINT64 ) image_width		11076	0					
ANR	11327	CastTarget	OPJ_UINT64		11076	0					
ANR	11328	Identifier	image_width		11076	1					
ANR	11329	MultiplicativeExpression	image_height * ( OPJ_UINT32 ) numcomps		11076	1		*			
ANR	11330	Identifier	image_height		11076	0					
ANR	11331	CastExpression	( OPJ_UINT32 ) numcomps		11076	1					
ANR	11332	CastTarget	OPJ_UINT32		11076	0					
ANR	11333	Identifier	numcomps		11076	1					
ANR	11334	IdentifierDeclStatement	long curpos = ftell ( f ) ;	824:8:25441:25463	11076	2	True				
ANR	11335	IdentifierDecl	curpos = ftell ( f )		11076	0					
ANR	11336	IdentifierDeclType	long		11076	0					
ANR	11337	Identifier	curpos		11076	1					
ANR	11338	AssignmentExpression	curpos = ftell ( f )		11076	2		=			
ANR	11339	Identifier	curpos		11076	0					
ANR	11340	CallExpression	ftell ( f )		11076	1					
ANR	11341	Callee	ftell		11076	0					
ANR	11342	Identifier	ftell		11076	0					
ANR	11343	ArgumentList	f		11076	1					
ANR	11344	Argument	f		11076	0					
ANR	11345	Identifier	f		11076	0					
ANR	11346	IfStatement	if ( expected_file_size > ( OPJ_UINT64 ) INT_MAX )		11076	3					
ANR	11347	Condition	expected_file_size > ( OPJ_UINT64 ) INT_MAX	825:12:25477:25516	11076	0	True				
ANR	11348	RelationalExpression	expected_file_size > ( OPJ_UINT64 ) INT_MAX		11076	0		>			
ANR	11349	Identifier	expected_file_size		11076	0					
ANR	11350	CastExpression	( OPJ_UINT64 ) INT_MAX		11076	1					
ANR	11351	CastTarget	OPJ_UINT64		11076	0					
ANR	11352	Identifier	INT_MAX		11076	1					
ANR	11353	CompoundStatement		57:54:1818:1818	11076	1					
ANR	11354	ExpressionStatement	expected_file_size = ( OPJ_UINT64 ) INT_MAX	826:12:25533:25573	11076	0	True				
ANR	11355	AssignmentExpression	expected_file_size = ( OPJ_UINT64 ) INT_MAX		11076	0		=			
ANR	11356	Identifier	expected_file_size		11076	0					
ANR	11357	CastExpression	( OPJ_UINT64 ) INT_MAX		11076	1					
ANR	11358	CastTarget	OPJ_UINT64		11076	0					
ANR	11359	Identifier	INT_MAX		11076	1					
ANR	11360	ExpressionStatement	"fseek ( f , ( long ) expected_file_size - 1 , SEEK_SET )"	828:8:25593:25641	11076	4	True				
ANR	11361	CallExpression	"fseek ( f , ( long ) expected_file_size - 1 , SEEK_SET )"		11076	0					
ANR	11362	Callee	fseek		11076	0					
ANR	11363	Identifier	fseek		11076	0					
ANR	11364	ArgumentList	f		11076	1					
ANR	11365	Argument	f		11076	0					
ANR	11366	Identifier	f		11076	0					
ANR	11367	Argument	( long ) expected_file_size - 1		11076	1					
ANR	11368	AdditiveExpression	( long ) expected_file_size - 1		11076	0		-			
ANR	11369	CastExpression	( long ) expected_file_size		11076	0					
ANR	11370	CastTarget	long		11076	0					
ANR	11371	Identifier	expected_file_size		11076	1					
ANR	11372	PrimaryExpression	1		11076	1					
ANR	11373	Argument	SEEK_SET		11076	2					
ANR	11374	Identifier	SEEK_SET		11076	0					
ANR	11375	IfStatement	"if ( fread ( & ch , 1 , 1 , f ) != 1 )"		11076	5					
ANR	11376	Condition	"fread ( & ch , 1 , 1 , f ) != 1"	829:12:25655:25678	11076	0	True				
ANR	11377	EqualityExpression	"fread ( & ch , 1 , 1 , f ) != 1"		11076	0		!=			
ANR	11378	CallExpression	"fread ( & ch , 1 , 1 , f )"		11076	0					
ANR	11379	Callee	fread		11076	0					
ANR	11380	Identifier	fread		11076	0					
ANR	11381	ArgumentList	& ch		11076	1					
ANR	11382	Argument	& ch		11076	0					
ANR	11383	UnaryOperationExpression	& ch		11076	0					
ANR	11384	UnaryOperator	&		11076	0					
ANR	11385	Identifier	ch		11076	1					
ANR	11386	Argument	1		11076	1					
ANR	11387	PrimaryExpression	1		11076	0					
ANR	11388	Argument	1		11076	2					
ANR	11389	PrimaryExpression	1		11076	0					
ANR	11390	Argument	f		11076	3					
ANR	11391	Identifier	f		11076	0					
ANR	11392	PrimaryExpression	1		11076	1					
ANR	11393	CompoundStatement		61:38:1980:1980	11076	1					
ANR	11394	ExpressionStatement	fclose ( f )	830:12:25695:25704	11076	0	True				
ANR	11395	CallExpression	fclose ( f )		11076	0					
ANR	11396	Callee	fclose		11076	0					
ANR	11397	Identifier	fclose		11076	0					
ANR	11398	ArgumentList	f		11076	1					
ANR	11399	Argument	f		11076	0					
ANR	11400	Identifier	f		11076	0					
ANR	11401	ReturnStatement	return NULL ;	831:12:25718:25729	11076	1	True				
ANR	11402	Identifier	NULL		11076	0					
ANR	11403	ExpressionStatement	"fseek ( f , curpos , SEEK_SET )"	833:8:25749:25775	11076	6	True				
ANR	11404	CallExpression	"fseek ( f , curpos , SEEK_SET )"		11076	0					
ANR	11405	Callee	fseek		11076	0					
ANR	11406	Identifier	fseek		11076	0					
ANR	11407	ArgumentList	f		11076	1					
ANR	11408	Argument	f		11076	0					
ANR	11409	Identifier	f		11076	0					
ANR	11410	Argument	curpos		11076	1					
ANR	11411	Identifier	curpos		11076	0					
ANR	11412	Argument	SEEK_SET		11076	2					
ANR	11413	Identifier	SEEK_SET		11076	0					
ANR	11414	ExpressionStatement	subsampling_dx = parameters -> subsampling_dx	836:4:25788:25831	11076	21	True				
ANR	11415	AssignmentExpression	subsampling_dx = parameters -> subsampling_dx		11076	0		=			
ANR	11416	Identifier	subsampling_dx		11076	0					
ANR	11417	PtrMemberAccess	parameters -> subsampling_dx		11076	1					
ANR	11418	Identifier	parameters		11076	0					
ANR	11419	Identifier	subsampling_dx		11076	1					
ANR	11420	ExpressionStatement	subsampling_dy = parameters -> subsampling_dy	837:4:25837:25880	11076	22	True				
ANR	11421	AssignmentExpression	subsampling_dy = parameters -> subsampling_dy		11076	0		=			
ANR	11422	Identifier	subsampling_dy		11076	0					
ANR	11423	PtrMemberAccess	parameters -> subsampling_dy		11076	1					
ANR	11424	Identifier	parameters		11076	0					
ANR	11425	Identifier	subsampling_dy		11076	1					
ANR	11426	ForStatement	for ( i = 0 ; i < numcomps ; i ++ )		11076	23					
ANR	11427	ForInit	i = 0 ;	839:9:25892:25897	11076	0	True				
ANR	11428	AssignmentExpression	i = 0		11076	0		=			
ANR	11429	Identifier	i		11076	0					
ANR	11430	PrimaryExpression	0		11076	1					
ANR	11431	Condition	i < numcomps	839:16:25899:25910	11076	1	True				
ANR	11432	RelationalExpression	i < numcomps		11076	0		<			
ANR	11433	Identifier	i		11076	0					
ANR	11434	Identifier	numcomps		11076	1					
ANR	11435	PostIncDecOperationExpression	i ++	839:30:25913:25915	11076	2	True				
ANR	11436	Identifier	i		11076	0					
ANR	11437	IncDec	++		11076	1					
ANR	11438	CompoundStatement		71:35:2217:2217	11076	3					
ANR	11439	ExpressionStatement	cmptparm [ i ] . prec = 8	840:8:25928:25948	11076	0	True				
ANR	11440	AssignmentExpression	cmptparm [ i ] . prec = 8		11076	0		=			
ANR	11441	MemberAccess	cmptparm [ i ] . prec		11076	0					
ANR	11442	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11443	Identifier	cmptparm		11076	0					
ANR	11444	Identifier	i		11076	1					
ANR	11445	Identifier	prec		11076	1					
ANR	11446	PrimaryExpression	8		11076	1					
ANR	11447	ExpressionStatement	cmptparm [ i ] . bpp = 8	841:8:25958:25977	11076	1	True				
ANR	11448	AssignmentExpression	cmptparm [ i ] . bpp = 8		11076	0		=			
ANR	11449	MemberAccess	cmptparm [ i ] . bpp		11076	0					
ANR	11450	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11451	Identifier	cmptparm		11076	0					
ANR	11452	Identifier	i		11076	1					
ANR	11453	Identifier	bpp		11076	1					
ANR	11454	PrimaryExpression	8		11076	1					
ANR	11455	ExpressionStatement	cmptparm [ i ] . sgnd = 0	842:8:25987:26007	11076	2	True				
ANR	11456	AssignmentExpression	cmptparm [ i ] . sgnd = 0		11076	0		=			
ANR	11457	MemberAccess	cmptparm [ i ] . sgnd		11076	0					
ANR	11458	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11459	Identifier	cmptparm		11076	0					
ANR	11460	Identifier	i		11076	1					
ANR	11461	Identifier	sgnd		11076	1					
ANR	11462	PrimaryExpression	0		11076	1					
ANR	11463	ExpressionStatement	cmptparm [ i ] . dx = ( OPJ_UINT32 ) subsampling_dx	843:8:26017:26060	11076	3	True				
ANR	11464	AssignmentExpression	cmptparm [ i ] . dx = ( OPJ_UINT32 ) subsampling_dx		11076	0		=			
ANR	11465	MemberAccess	cmptparm [ i ] . dx		11076	0					
ANR	11466	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11467	Identifier	cmptparm		11076	0					
ANR	11468	Identifier	i		11076	1					
ANR	11469	Identifier	dx		11076	1					
ANR	11470	CastExpression	( OPJ_UINT32 ) subsampling_dx		11076	1					
ANR	11471	CastTarget	OPJ_UINT32		11076	0					
ANR	11472	Identifier	subsampling_dx		11076	1					
ANR	11473	ExpressionStatement	cmptparm [ i ] . dy = ( OPJ_UINT32 ) subsampling_dy	844:8:26070:26113	11076	4	True				
ANR	11474	AssignmentExpression	cmptparm [ i ] . dy = ( OPJ_UINT32 ) subsampling_dy		11076	0		=			
ANR	11475	MemberAccess	cmptparm [ i ] . dy		11076	0					
ANR	11476	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11477	Identifier	cmptparm		11076	0					
ANR	11478	Identifier	i		11076	1					
ANR	11479	Identifier	dy		11076	1					
ANR	11480	CastExpression	( OPJ_UINT32 ) subsampling_dy		11076	1					
ANR	11481	CastTarget	OPJ_UINT32		11076	0					
ANR	11482	Identifier	subsampling_dy		11076	1					
ANR	11483	ExpressionStatement	cmptparm [ i ] . w = image_width	845:8:26123:26150	11076	5	True				
ANR	11484	AssignmentExpression	cmptparm [ i ] . w = image_width		11076	0		=			
ANR	11485	MemberAccess	cmptparm [ i ] . w		11076	0					
ANR	11486	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11487	Identifier	cmptparm		11076	0					
ANR	11488	Identifier	i		11076	1					
ANR	11489	Identifier	w		11076	1					
ANR	11490	Identifier	image_width		11076	1					
ANR	11491	ExpressionStatement	cmptparm [ i ] . h = image_height	846:8:26160:26188	11076	6	True				
ANR	11492	AssignmentExpression	cmptparm [ i ] . h = image_height		11076	0		=			
ANR	11493	MemberAccess	cmptparm [ i ] . h		11076	0					
ANR	11494	ArrayIndexing	cmptparm [ i ]		11076	0					
ANR	11495	Identifier	cmptparm		11076	0					
ANR	11496	Identifier	i		11076	1					
ANR	11497	Identifier	h		11076	1					
ANR	11498	Identifier	image_height		11076	1					
ANR	11499	ExpressionStatement	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"	850:4:26228:26301	11076	24	True				
ANR	11500	AssignmentExpression	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"		11076	0		=			
ANR	11501	Identifier	image		11076	0					
ANR	11502	CallExpression	"opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"		11076	1					
ANR	11503	Callee	opj_image_create		11076	0					
ANR	11504	Identifier	opj_image_create		11076	0					
ANR	11505	ArgumentList	( OPJ_UINT32 ) numcomps		11076	1					
ANR	11506	Argument	( OPJ_UINT32 ) numcomps		11076	0					
ANR	11507	CastExpression	( OPJ_UINT32 ) numcomps		11076	0					
ANR	11508	CastTarget	OPJ_UINT32		11076	0					
ANR	11509	Identifier	numcomps		11076	1					
ANR	11510	Argument	& cmptparm [ 0 ]		11076	1					
ANR	11511	UnaryOperationExpression	& cmptparm [ 0 ]		11076	0					
ANR	11512	UnaryOperator	&		11076	0					
ANR	11513	ArrayIndexing	cmptparm [ 0 ]		11076	1					
ANR	11514	Identifier	cmptparm		11076	0					
ANR	11515	PrimaryExpression	0		11076	1					
ANR	11516	Argument	color_space		11076	2					
ANR	11517	Identifier	color_space		11076	0					
ANR	11518	IfStatement	if ( ! image )		11076	25					
ANR	11519	Condition	! image	852:8:26312:26317	11076	0	True				
ANR	11520	UnaryOperationExpression	! image		11076	0					
ANR	11521	UnaryOperator	!		11076	0					
ANR	11522	Identifier	image		11076	1					
ANR	11523	CompoundStatement		84:16:2619:2619	11076	1					
ANR	11524	ExpressionStatement	fclose ( f )	853:8:26330:26339	11076	0	True				
ANR	11525	CallExpression	fclose ( f )		11076	0					
ANR	11526	Callee	fclose		11076	0					
ANR	11527	Identifier	fclose		11076	0					
ANR	11528	ArgumentList	f		11076	1					
ANR	11529	Argument	f		11076	0					
ANR	11530	Identifier	f		11076	0					
ANR	11531	ReturnStatement	return NULL ;	854:8:26349:26360	11076	1	True				
ANR	11532	Identifier	NULL		11076	0					
ANR	11533	ExpressionStatement	image -> x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0	859:4:26420:26471	11076	26	True				
ANR	11534	AssignmentExpression	image -> x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0		11076	0		=			
ANR	11535	PtrMemberAccess	image -> x0		11076	0					
ANR	11536	Identifier	image		11076	0					
ANR	11537	Identifier	x0		11076	1					
ANR	11538	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_x0		11076	1					
ANR	11539	CastTarget	OPJ_UINT32		11076	0					
ANR	11540	PtrMemberAccess	parameters -> image_offset_x0		11076	1					
ANR	11541	Identifier	parameters		11076	0					
ANR	11542	Identifier	image_offset_x0		11076	1					
ANR	11543	ExpressionStatement	image -> y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0	860:4:26477:26528	11076	27	True				
ANR	11544	AssignmentExpression	image -> y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0		11076	0		=			
ANR	11545	PtrMemberAccess	image -> y0		11076	0					
ANR	11546	Identifier	image		11076	0					
ANR	11547	Identifier	y0		11076	1					
ANR	11548	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_y0		11076	1					
ANR	11549	CastTarget	OPJ_UINT32		11076	0					
ANR	11550	PtrMemberAccess	parameters -> image_offset_y0		11076	1					
ANR	11551	Identifier	parameters		11076	0					
ANR	11552	Identifier	image_offset_y0		11076	1					
ANR	11553	ExpressionStatement	image -> x1 = ! image -> x0 ? ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1 : image -> x0 + ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1	861:4:26534:26732	11076	28	True				
ANR	11554	AssignmentExpression	image -> x1 = ! image -> x0 ? ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1 : image -> x0 + ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		11076	0		=			
ANR	11555	PtrMemberAccess	image -> x1		11076	0					
ANR	11556	Identifier	image		11076	0					
ANR	11557	Identifier	x1		11076	1					
ANR	11558	ConditionalExpression	! image -> x0 ? ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1 : image -> x0 + ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		11076	1					
ANR	11559	Condition	! image -> x0		11076	0					
ANR	11560	UnaryOperationExpression	! image -> x0		11076	0					
ANR	11561	UnaryOperator	!		11076	0					
ANR	11562	PtrMemberAccess	image -> x0		11076	1					
ANR	11563	Identifier	image		11076	0					
ANR	11564	Identifier	x0		11076	1					
ANR	11565	AdditiveExpression	( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		11076	1		+			
ANR	11566	MultiplicativeExpression	( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx		11076	0		*			
ANR	11567	CastExpression	( OPJ_UINT32 ) ( image_width - 1 )		11076	0					
ANR	11568	CastTarget	OPJ_UINT32		11076	0					
ANR	11569	AdditiveExpression	image_width - 1		11076	1		-			
ANR	11570	Identifier	image_width		11076	0					
ANR	11571	PrimaryExpression	1		11076	1					
ANR	11572	CastExpression	( OPJ_UINT32 ) subsampling_dx		11076	1					
ANR	11573	CastTarget	OPJ_UINT32		11076	0					
ANR	11574	Identifier	subsampling_dx		11076	1					
ANR	11575	PrimaryExpression	1		11076	1					
ANR	11576	AdditiveExpression	image -> x0 + ( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		11076	2		+			
ANR	11577	PtrMemberAccess	image -> x0		11076	0					
ANR	11578	Identifier	image		11076	0					
ANR	11579	Identifier	x0		11076	1					
ANR	11580	AdditiveExpression	( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		11076	1		+			
ANR	11581	MultiplicativeExpression	( OPJ_UINT32 ) ( image_width - 1 ) * ( OPJ_UINT32 ) subsampling_dx		11076	0		*			
ANR	11582	CastExpression	( OPJ_UINT32 ) ( image_width - 1 )		11076	0					
ANR	11583	CastTarget	OPJ_UINT32		11076	0					
ANR	11584	AdditiveExpression	image_width - 1		11076	1		-			
ANR	11585	Identifier	image_width		11076	0					
ANR	11586	PrimaryExpression	1		11076	1					
ANR	11587	CastExpression	( OPJ_UINT32 ) subsampling_dx		11076	1					
ANR	11588	CastTarget	OPJ_UINT32		11076	0					
ANR	11589	Identifier	subsampling_dx		11076	1					
ANR	11590	PrimaryExpression	1		11076	1					
ANR	11591	ExpressionStatement	image -> y1 = ! image -> y0 ? ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1 : image -> y0 + ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1	864:4:26738:26936	11076	29	True				
ANR	11592	AssignmentExpression	image -> y1 = ! image -> y0 ? ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1 : image -> y0 + ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		11076	0		=			
ANR	11593	PtrMemberAccess	image -> y1		11076	0					
ANR	11594	Identifier	image		11076	0					
ANR	11595	Identifier	y1		11076	1					
ANR	11596	ConditionalExpression	! image -> y0 ? ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1 : image -> y0 + ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		11076	1					
ANR	11597	Condition	! image -> y0		11076	0					
ANR	11598	UnaryOperationExpression	! image -> y0		11076	0					
ANR	11599	UnaryOperator	!		11076	0					
ANR	11600	PtrMemberAccess	image -> y0		11076	1					
ANR	11601	Identifier	image		11076	0					
ANR	11602	Identifier	y0		11076	1					
ANR	11603	AdditiveExpression	( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		11076	1		+			
ANR	11604	MultiplicativeExpression	( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy		11076	0		*			
ANR	11605	CastExpression	( OPJ_UINT32 ) ( image_height - 1 )		11076	0					
ANR	11606	CastTarget	OPJ_UINT32		11076	0					
ANR	11607	AdditiveExpression	image_height - 1		11076	1		-			
ANR	11608	Identifier	image_height		11076	0					
ANR	11609	PrimaryExpression	1		11076	1					
ANR	11610	CastExpression	( OPJ_UINT32 ) subsampling_dy		11076	1					
ANR	11611	CastTarget	OPJ_UINT32		11076	0					
ANR	11612	Identifier	subsampling_dy		11076	1					
ANR	11613	PrimaryExpression	1		11076	1					
ANR	11614	AdditiveExpression	image -> y0 + ( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		11076	2		+			
ANR	11615	PtrMemberAccess	image -> y0		11076	0					
ANR	11616	Identifier	image		11076	0					
ANR	11617	Identifier	y0		11076	1					
ANR	11618	AdditiveExpression	( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		11076	1		+			
ANR	11619	MultiplicativeExpression	( OPJ_UINT32 ) ( image_height - 1 ) * ( OPJ_UINT32 ) subsampling_dy		11076	0		*			
ANR	11620	CastExpression	( OPJ_UINT32 ) ( image_height - 1 )		11076	0					
ANR	11621	CastTarget	OPJ_UINT32		11076	0					
ANR	11622	AdditiveExpression	image_height - 1		11076	1		-			
ANR	11623	Identifier	image_height		11076	0					
ANR	11624	PrimaryExpression	1		11076	1					
ANR	11625	CastExpression	( OPJ_UINT32 ) subsampling_dy		11076	1					
ANR	11626	CastTarget	OPJ_UINT32		11076	0					
ANR	11627	Identifier	subsampling_dy		11076	1					
ANR	11628	PrimaryExpression	1		11076	1					
ANR	11629	ForStatement	for ( y = 0 ; y < image_height ; y ++ )		11076	30					
ANR	11630	ForInit	y = 0 ;	869:9:26973:26978	11076	0	True				
ANR	11631	AssignmentExpression	y = 0		11076	0		=			
ANR	11632	Identifier	y		11076	0					
ANR	11633	PrimaryExpression	0		11076	1					
ANR	11634	Condition	y < image_height	869:16:26980:26995	11076	1	True				
ANR	11635	RelationalExpression	y < image_height		11076	0		<			
ANR	11636	Identifier	y		11076	0					
ANR	11637	Identifier	image_height		11076	1					
ANR	11638	PostIncDecOperationExpression	y ++	869:34:26998:27000	11076	2	True				
ANR	11639	Identifier	y		11076	0					
ANR	11640	IncDec	++		11076	1					
ANR	11641	CompoundStatement		102:8:3312:3321	11076	3					
ANR	11642	IdentifierDeclStatement	int index ;	870:8:27013:27022	11076	0	True				
ANR	11643	IdentifierDecl	index		11076	0					
ANR	11644	IdentifierDeclType	int		11076	0					
ANR	11645	Identifier	index		11076	1					
ANR	11646	IfStatement	if ( flip_image )		11076	1					
ANR	11647	Condition	flip_image	872:12:27037:27046	11076	0	True				
ANR	11648	Identifier	flip_image		11076	0					
ANR	11649	CompoundStatement		104:24:3348:3348	11076	1					
ANR	11650	ExpressionStatement	index = ( int ) ( ( image_height - y - 1 ) * image_width )	873:12:27063:27114	11076	0	True				
ANR	11651	AssignmentExpression	index = ( int ) ( ( image_height - y - 1 ) * image_width )		11076	0		=			
ANR	11652	Identifier	index		11076	0					
ANR	11653	CastExpression	( int ) ( ( image_height - y - 1 ) * image_width )		11076	1					
ANR	11654	CastTarget	int		11076	0					
ANR	11655	MultiplicativeExpression	( image_height - y - 1 ) * image_width		11076	1		*			
ANR	11656	AdditiveExpression	image_height - y - 1		11076	0		-			
ANR	11657	Identifier	image_height		11076	0					
ANR	11658	AdditiveExpression	y - 1		11076	1		-			
ANR	11659	Identifier	y		11076	0					
ANR	11660	PrimaryExpression	1		11076	1					
ANR	11661	Identifier	image_width		11076	1					
ANR	11662	ElseStatement	else		11076	0					
ANR	11663	CompoundStatement		106:15:3430:3430	11076	0					
ANR	11664	ExpressionStatement	index = ( int ) ( y * image_width )	875:12:27145:27175	11076	0	True				
ANR	11665	AssignmentExpression	index = ( int ) ( y * image_width )		11076	0		=			
ANR	11666	Identifier	index		11076	0					
ANR	11667	CastExpression	( int ) ( y * image_width )		11076	1					
ANR	11668	CastTarget	int		11076	0					
ANR	11669	MultiplicativeExpression	y * image_width		11076	1		*			
ANR	11670	Identifier	y		11076	0					
ANR	11671	Identifier	image_width		11076	1					
ANR	11672	IfStatement	if ( numcomps == 3 )		11076	2					
ANR	11673	Condition	numcomps == 3	878:12:27200:27212	11076	0	True				
ANR	11674	EqualityExpression	numcomps == 3		11076	0		==			
ANR	11675	Identifier	numcomps		11076	0					
ANR	11676	PrimaryExpression	3		11076	1					
ANR	11677	CompoundStatement		110:27:3514:3514	11076	1					
ANR	11678	ForStatement	for ( x = 0 ; x < image_width ; x ++ )		11076	0					
ANR	11679	ForInit	x = 0 ;	879:17:27234:27239	11076	0	True				
ANR	11680	AssignmentExpression	x = 0		11076	0		=			
ANR	11681	Identifier	x		11076	0					
ANR	11682	PrimaryExpression	0		11076	1					
ANR	11683	Condition	x < image_width	879:24:27241:27255	11076	1	True				
ANR	11684	RelationalExpression	x < image_width		11076	0		<			
ANR	11685	Identifier	x		11076	0					
ANR	11686	Identifier	image_width		11076	1					
ANR	11687	PostIncDecOperationExpression	x ++	879:41:27258:27260	11076	2	True				
ANR	11688	Identifier	x		11076	0					
ANR	11689	IncDec	++		11076	1					
ANR	11690	CompoundStatement		112:16:3580:3601	11076	3					
ANR	11691	IdentifierDeclStatement	"unsigned char r , g , b ;"	880:16:27281:27302	11076	0	True				
ANR	11692	IdentifierDecl	r		11076	0					
ANR	11693	IdentifierDeclType	unsigned char		11076	0					
ANR	11694	Identifier	r		11076	1					
ANR	11695	IdentifierDecl	g		11076	1					
ANR	11696	IdentifierDeclType	unsigned char		11076	0					
ANR	11697	Identifier	g		11076	1					
ANR	11698	IdentifierDecl	b		11076	2					
ANR	11699	IdentifierDeclType	unsigned char		11076	0					
ANR	11700	Identifier	b		11076	1					
ANR	11701	IfStatement	"if ( ! fread ( & b , 1 , 1 , f ) )"		11076	1					
ANR	11702	Condition	"! fread ( & b , 1 , 1 , f )"	882:20:27325:27343	11076	0	True				
ANR	11703	UnaryOperationExpression	"! fread ( & b , 1 , 1 , f )"		11076	0					
ANR	11704	UnaryOperator	!		11076	0					
ANR	11705	CallExpression	"fread ( & b , 1 , 1 , f )"		11076	1					
ANR	11706	Callee	fread		11076	0					
ANR	11707	Identifier	fread		11076	0					
ANR	11708	ArgumentList	& b		11076	1					
ANR	11709	Argument	& b		11076	0					
ANR	11710	UnaryOperationExpression	& b		11076	0					
ANR	11711	UnaryOperator	&		11076	0					
ANR	11712	Identifier	b		11076	1					
ANR	11713	Argument	1		11076	1					
ANR	11714	PrimaryExpression	1		11076	0					
ANR	11715	Argument	1		11076	2					
ANR	11716	PrimaryExpression	1		11076	0					
ANR	11717	Argument	f		11076	3					
ANR	11718	Identifier	f		11076	0					
ANR	11719	CompoundStatement		114:41:3645:3645	11076	1					
ANR	11720	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	883:20:27368:27487	11076	0	True				
ANR	11721	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	11722	Callee	fprintf		11076	0					
ANR	11723	Identifier	fprintf		11076	0					
ANR	11724	ArgumentList	stderr		11076	1					
ANR	11725	Argument	stderr		11076	0					
ANR	11726	Identifier	stderr		11076	0					
ANR	11727	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	11728	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	11729	ExpressionStatement	opj_image_destroy ( image )	885:20:27509:27533	11076	1	True				
ANR	11730	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	11731	Callee	opj_image_destroy		11076	0					
ANR	11732	Identifier	opj_image_destroy		11076	0					
ANR	11733	ArgumentList	image		11076	1					
ANR	11734	Argument	image		11076	0					
ANR	11735	Identifier	image		11076	0					
ANR	11736	ExpressionStatement	fclose ( f )	886:20:27555:27564	11076	2	True				
ANR	11737	CallExpression	fclose ( f )		11076	0					
ANR	11738	Callee	fclose		11076	0					
ANR	11739	Identifier	fclose		11076	0					
ANR	11740	ArgumentList	f		11076	1					
ANR	11741	Argument	f		11076	0					
ANR	11742	Identifier	f		11076	0					
ANR	11743	ReturnStatement	return NULL ;	887:20:27586:27597	11076	3	True				
ANR	11744	Identifier	NULL		11076	0					
ANR	11745	IfStatement	"if ( ! fread ( & g , 1 , 1 , f ) )"		11076	2					
ANR	11746	Condition	"! fread ( & g , 1 , 1 , f )"	889:20:27637:27655	11076	0	True				
ANR	11747	UnaryOperationExpression	"! fread ( & g , 1 , 1 , f )"		11076	0					
ANR	11748	UnaryOperator	!		11076	0					
ANR	11749	CallExpression	"fread ( & g , 1 , 1 , f )"		11076	1					
ANR	11750	Callee	fread		11076	0					
ANR	11751	Identifier	fread		11076	0					
ANR	11752	ArgumentList	& g		11076	1					
ANR	11753	Argument	& g		11076	0					
ANR	11754	UnaryOperationExpression	& g		11076	0					
ANR	11755	UnaryOperator	&		11076	0					
ANR	11756	Identifier	g		11076	1					
ANR	11757	Argument	1		11076	1					
ANR	11758	PrimaryExpression	1		11076	0					
ANR	11759	Argument	1		11076	2					
ANR	11760	PrimaryExpression	1		11076	0					
ANR	11761	Argument	f		11076	3					
ANR	11762	Identifier	f		11076	0					
ANR	11763	CompoundStatement		121:41:3957:3957	11076	1					
ANR	11764	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	890:20:27680:27799	11076	0	True				
ANR	11765	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	11766	Callee	fprintf		11076	0					
ANR	11767	Identifier	fprintf		11076	0					
ANR	11768	ArgumentList	stderr		11076	1					
ANR	11769	Argument	stderr		11076	0					
ANR	11770	Identifier	stderr		11076	0					
ANR	11771	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	11772	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	11773	ExpressionStatement	opj_image_destroy ( image )	892:20:27821:27845	11076	1	True				
ANR	11774	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	11775	Callee	opj_image_destroy		11076	0					
ANR	11776	Identifier	opj_image_destroy		11076	0					
ANR	11777	ArgumentList	image		11076	1					
ANR	11778	Argument	image		11076	0					
ANR	11779	Identifier	image		11076	0					
ANR	11780	ExpressionStatement	fclose ( f )	893:20:27867:27876	11076	2	True				
ANR	11781	CallExpression	fclose ( f )		11076	0					
ANR	11782	Callee	fclose		11076	0					
ANR	11783	Identifier	fclose		11076	0					
ANR	11784	ArgumentList	f		11076	1					
ANR	11785	Argument	f		11076	0					
ANR	11786	Identifier	f		11076	0					
ANR	11787	ReturnStatement	return NULL ;	894:20:27898:27909	11076	3	True				
ANR	11788	Identifier	NULL		11076	0					
ANR	11789	IfStatement	"if ( ! fread ( & r , 1 , 1 , f ) )"		11076	3					
ANR	11790	Condition	"! fread ( & r , 1 , 1 , f )"	896:20:27949:27967	11076	0	True				
ANR	11791	UnaryOperationExpression	"! fread ( & r , 1 , 1 , f )"		11076	0					
ANR	11792	UnaryOperator	!		11076	0					
ANR	11793	CallExpression	"fread ( & r , 1 , 1 , f )"		11076	1					
ANR	11794	Callee	fread		11076	0					
ANR	11795	Identifier	fread		11076	0					
ANR	11796	ArgumentList	& r		11076	1					
ANR	11797	Argument	& r		11076	0					
ANR	11798	UnaryOperationExpression	& r		11076	0					
ANR	11799	UnaryOperator	&		11076	0					
ANR	11800	Identifier	r		11076	1					
ANR	11801	Argument	1		11076	1					
ANR	11802	PrimaryExpression	1		11076	0					
ANR	11803	Argument	1		11076	2					
ANR	11804	PrimaryExpression	1		11076	0					
ANR	11805	Argument	f		11076	3					
ANR	11806	Identifier	f		11076	0					
ANR	11807	CompoundStatement		128:41:4269:4269	11076	1					
ANR	11808	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	897:20:27992:28111	11076	0	True				
ANR	11809	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	11810	Callee	fprintf		11076	0					
ANR	11811	Identifier	fprintf		11076	0					
ANR	11812	ArgumentList	stderr		11076	1					
ANR	11813	Argument	stderr		11076	0					
ANR	11814	Identifier	stderr		11076	0					
ANR	11815	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	11816	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	11817	ExpressionStatement	opj_image_destroy ( image )	899:20:28133:28157	11076	1	True				
ANR	11818	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	11819	Callee	opj_image_destroy		11076	0					
ANR	11820	Identifier	opj_image_destroy		11076	0					
ANR	11821	ArgumentList	image		11076	1					
ANR	11822	Argument	image		11076	0					
ANR	11823	Identifier	image		11076	0					
ANR	11824	ExpressionStatement	fclose ( f )	900:20:28179:28188	11076	2	True				
ANR	11825	CallExpression	fclose ( f )		11076	0					
ANR	11826	Callee	fclose		11076	0					
ANR	11827	Identifier	fclose		11076	0					
ANR	11828	ArgumentList	f		11076	1					
ANR	11829	Argument	f		11076	0					
ANR	11830	Identifier	f		11076	0					
ANR	11831	ReturnStatement	return NULL ;	901:20:28210:28221	11076	3	True				
ANR	11832	Identifier	NULL		11076	0					
ANR	11833	ExpressionStatement	image -> comps [ 0 ] . data [ index ] = r	904:16:28258:28289	11076	4	True				
ANR	11834	AssignmentExpression	image -> comps [ 0 ] . data [ index ] = r		11076	0		=			
ANR	11835	ArrayIndexing	image -> comps [ 0 ] . data [ index ]		11076	0					
ANR	11836	MemberAccess	image -> comps [ 0 ] . data		11076	0					
ANR	11837	ArrayIndexing	image -> comps [ 0 ]		11076	0					
ANR	11838	PtrMemberAccess	image -> comps		11076	0					
ANR	11839	Identifier	image		11076	0					
ANR	11840	Identifier	comps		11076	1					
ANR	11841	PrimaryExpression	0		11076	1					
ANR	11842	Identifier	data		11076	1					
ANR	11843	Identifier	index		11076	1					
ANR	11844	Identifier	r		11076	1					
ANR	11845	ExpressionStatement	image -> comps [ 1 ] . data [ index ] = g	905:16:28307:28338	11076	5	True				
ANR	11846	AssignmentExpression	image -> comps [ 1 ] . data [ index ] = g		11076	0		=			
ANR	11847	ArrayIndexing	image -> comps [ 1 ] . data [ index ]		11076	0					
ANR	11848	MemberAccess	image -> comps [ 1 ] . data		11076	0					
ANR	11849	ArrayIndexing	image -> comps [ 1 ]		11076	0					
ANR	11850	PtrMemberAccess	image -> comps		11076	0					
ANR	11851	Identifier	image		11076	0					
ANR	11852	Identifier	comps		11076	1					
ANR	11853	PrimaryExpression	1		11076	1					
ANR	11854	Identifier	data		11076	1					
ANR	11855	Identifier	index		11076	1					
ANR	11856	Identifier	g		11076	1					
ANR	11857	ExpressionStatement	image -> comps [ 2 ] . data [ index ] = b	906:16:28356:28387	11076	6	True				
ANR	11858	AssignmentExpression	image -> comps [ 2 ] . data [ index ] = b		11076	0		=			
ANR	11859	ArrayIndexing	image -> comps [ 2 ] . data [ index ]		11076	0					
ANR	11860	MemberAccess	image -> comps [ 2 ] . data		11076	0					
ANR	11861	ArrayIndexing	image -> comps [ 2 ]		11076	0					
ANR	11862	PtrMemberAccess	image -> comps		11076	0					
ANR	11863	Identifier	image		11076	0					
ANR	11864	Identifier	comps		11076	1					
ANR	11865	PrimaryExpression	2		11076	1					
ANR	11866	Identifier	data		11076	1					
ANR	11867	Identifier	index		11076	1					
ANR	11868	Identifier	b		11076	1					
ANR	11869	ExpressionStatement	index ++	907:16:28405:28412	11076	7	True				
ANR	11870	PostIncDecOperationExpression	index ++		11076	0					
ANR	11871	Identifier	index		11076	0					
ANR	11872	IncDec	++		11076	1					
ANR	11873	ElseStatement	else		11076	0					
ANR	11874	IfStatement	if ( numcomps == 4 )		11076	0					
ANR	11875	Condition	numcomps == 4	909:19:28447:28459	11076	0	True				
ANR	11876	EqualityExpression	numcomps == 4		11076	0		==			
ANR	11877	Identifier	numcomps		11076	0					
ANR	11878	PrimaryExpression	4		11076	1					
ANR	11879	CompoundStatement		141:34:4761:4761	11076	1					
ANR	11880	ForStatement	for ( x = 0 ; x < image_width ; x ++ )		11076	0					
ANR	11881	ForInit	x = 0 ;	910:17:28481:28486	11076	0	True				
ANR	11882	AssignmentExpression	x = 0		11076	0		=			
ANR	11883	Identifier	x		11076	0					
ANR	11884	PrimaryExpression	0		11076	1					
ANR	11885	Condition	x < image_width	910:24:28488:28502	11076	1	True				
ANR	11886	RelationalExpression	x < image_width		11076	0		<			
ANR	11887	Identifier	x		11076	0					
ANR	11888	Identifier	image_width		11076	1					
ANR	11889	PostIncDecOperationExpression	x ++	910:41:28505:28507	11076	2	True				
ANR	11890	Identifier	x		11076	0					
ANR	11891	IncDec	++		11076	1					
ANR	11892	CompoundStatement		143:16:4827:4851	11076	3					
ANR	11893	IdentifierDeclStatement	"unsigned char r , g , b , a ;"	911:16:28528:28552	11076	0	True				
ANR	11894	IdentifierDecl	r		11076	0					
ANR	11895	IdentifierDeclType	unsigned char		11076	0					
ANR	11896	Identifier	r		11076	1					
ANR	11897	IdentifierDecl	g		11076	1					
ANR	11898	IdentifierDeclType	unsigned char		11076	0					
ANR	11899	Identifier	g		11076	1					
ANR	11900	IdentifierDecl	b		11076	2					
ANR	11901	IdentifierDeclType	unsigned char		11076	0					
ANR	11902	Identifier	b		11076	1					
ANR	11903	IdentifierDecl	a		11076	3					
ANR	11904	IdentifierDeclType	unsigned char		11076	0					
ANR	11905	Identifier	a		11076	1					
ANR	11906	IfStatement	"if ( ! fread ( & b , 1 , 1 , f ) )"		11076	1					
ANR	11907	Condition	"! fread ( & b , 1 , 1 , f )"	912:20:28574:28592	11076	0	True				
ANR	11908	UnaryOperationExpression	"! fread ( & b , 1 , 1 , f )"		11076	0					
ANR	11909	UnaryOperator	!		11076	0					
ANR	11910	CallExpression	"fread ( & b , 1 , 1 , f )"		11076	1					
ANR	11911	Callee	fread		11076	0					
ANR	11912	Identifier	fread		11076	0					
ANR	11913	ArgumentList	& b		11076	1					
ANR	11914	Argument	& b		11076	0					
ANR	11915	UnaryOperationExpression	& b		11076	0					
ANR	11916	UnaryOperator	&		11076	0					
ANR	11917	Identifier	b		11076	1					
ANR	11918	Argument	1		11076	1					
ANR	11919	PrimaryExpression	1		11076	0					
ANR	11920	Argument	1		11076	2					
ANR	11921	PrimaryExpression	1		11076	0					
ANR	11922	Argument	f		11076	3					
ANR	11923	Identifier	f		11076	0					
ANR	11924	CompoundStatement		144:41:4894:4894	11076	1					
ANR	11925	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	913:20:28617:28736	11076	0	True				
ANR	11926	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	11927	Callee	fprintf		11076	0					
ANR	11928	Identifier	fprintf		11076	0					
ANR	11929	ArgumentList	stderr		11076	1					
ANR	11930	Argument	stderr		11076	0					
ANR	11931	Identifier	stderr		11076	0					
ANR	11932	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	11933	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	11934	ExpressionStatement	opj_image_destroy ( image )	915:20:28758:28782	11076	1	True				
ANR	11935	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	11936	Callee	opj_image_destroy		11076	0					
ANR	11937	Identifier	opj_image_destroy		11076	0					
ANR	11938	ArgumentList	image		11076	1					
ANR	11939	Argument	image		11076	0					
ANR	11940	Identifier	image		11076	0					
ANR	11941	ExpressionStatement	fclose ( f )	916:20:28804:28813	11076	2	True				
ANR	11942	CallExpression	fclose ( f )		11076	0					
ANR	11943	Callee	fclose		11076	0					
ANR	11944	Identifier	fclose		11076	0					
ANR	11945	ArgumentList	f		11076	1					
ANR	11946	Argument	f		11076	0					
ANR	11947	Identifier	f		11076	0					
ANR	11948	ReturnStatement	return NULL ;	917:20:28835:28846	11076	3	True				
ANR	11949	Identifier	NULL		11076	0					
ANR	11950	IfStatement	"if ( ! fread ( & g , 1 , 1 , f ) )"		11076	2					
ANR	11951	Condition	"! fread ( & g , 1 , 1 , f )"	919:20:28886:28904	11076	0	True				
ANR	11952	UnaryOperationExpression	"! fread ( & g , 1 , 1 , f )"		11076	0					
ANR	11953	UnaryOperator	!		11076	0					
ANR	11954	CallExpression	"fread ( & g , 1 , 1 , f )"		11076	1					
ANR	11955	Callee	fread		11076	0					
ANR	11956	Identifier	fread		11076	0					
ANR	11957	ArgumentList	& g		11076	1					
ANR	11958	Argument	& g		11076	0					
ANR	11959	UnaryOperationExpression	& g		11076	0					
ANR	11960	UnaryOperator	&		11076	0					
ANR	11961	Identifier	g		11076	1					
ANR	11962	Argument	1		11076	1					
ANR	11963	PrimaryExpression	1		11076	0					
ANR	11964	Argument	1		11076	2					
ANR	11965	PrimaryExpression	1		11076	0					
ANR	11966	Argument	f		11076	3					
ANR	11967	Identifier	f		11076	0					
ANR	11968	CompoundStatement		151:41:5206:5206	11076	1					
ANR	11969	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	920:20:28929:29048	11076	0	True				
ANR	11970	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	11971	Callee	fprintf		11076	0					
ANR	11972	Identifier	fprintf		11076	0					
ANR	11973	ArgumentList	stderr		11076	1					
ANR	11974	Argument	stderr		11076	0					
ANR	11975	Identifier	stderr		11076	0					
ANR	11976	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	11977	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	11978	ExpressionStatement	opj_image_destroy ( image )	922:20:29070:29094	11076	1	True				
ANR	11979	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	11980	Callee	opj_image_destroy		11076	0					
ANR	11981	Identifier	opj_image_destroy		11076	0					
ANR	11982	ArgumentList	image		11076	1					
ANR	11983	Argument	image		11076	0					
ANR	11984	Identifier	image		11076	0					
ANR	11985	ExpressionStatement	fclose ( f )	923:20:29116:29125	11076	2	True				
ANR	11986	CallExpression	fclose ( f )		11076	0					
ANR	11987	Callee	fclose		11076	0					
ANR	11988	Identifier	fclose		11076	0					
ANR	11989	ArgumentList	f		11076	1					
ANR	11990	Argument	f		11076	0					
ANR	11991	Identifier	f		11076	0					
ANR	11992	ReturnStatement	return NULL ;	924:20:29147:29158	11076	3	True				
ANR	11993	Identifier	NULL		11076	0					
ANR	11994	IfStatement	"if ( ! fread ( & r , 1 , 1 , f ) )"		11076	3					
ANR	11995	Condition	"! fread ( & r , 1 , 1 , f )"	926:20:29198:29216	11076	0	True				
ANR	11996	UnaryOperationExpression	"! fread ( & r , 1 , 1 , f )"		11076	0					
ANR	11997	UnaryOperator	!		11076	0					
ANR	11998	CallExpression	"fread ( & r , 1 , 1 , f )"		11076	1					
ANR	11999	Callee	fread		11076	0					
ANR	12000	Identifier	fread		11076	0					
ANR	12001	ArgumentList	& r		11076	1					
ANR	12002	Argument	& r		11076	0					
ANR	12003	UnaryOperationExpression	& r		11076	0					
ANR	12004	UnaryOperator	&		11076	0					
ANR	12005	Identifier	r		11076	1					
ANR	12006	Argument	1		11076	1					
ANR	12007	PrimaryExpression	1		11076	0					
ANR	12008	Argument	1		11076	2					
ANR	12009	PrimaryExpression	1		11076	0					
ANR	12010	Argument	f		11076	3					
ANR	12011	Identifier	f		11076	0					
ANR	12012	CompoundStatement		158:41:5518:5518	11076	1					
ANR	12013	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	927:20:29241:29360	11076	0	True				
ANR	12014	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	12015	Callee	fprintf		11076	0					
ANR	12016	Identifier	fprintf		11076	0					
ANR	12017	ArgumentList	stderr		11076	1					
ANR	12018	Argument	stderr		11076	0					
ANR	12019	Identifier	stderr		11076	0					
ANR	12020	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	12021	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	12022	ExpressionStatement	opj_image_destroy ( image )	929:20:29382:29406	11076	1	True				
ANR	12023	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	12024	Callee	opj_image_destroy		11076	0					
ANR	12025	Identifier	opj_image_destroy		11076	0					
ANR	12026	ArgumentList	image		11076	1					
ANR	12027	Argument	image		11076	0					
ANR	12028	Identifier	image		11076	0					
ANR	12029	ExpressionStatement	fclose ( f )	930:20:29428:29437	11076	2	True				
ANR	12030	CallExpression	fclose ( f )		11076	0					
ANR	12031	Callee	fclose		11076	0					
ANR	12032	Identifier	fclose		11076	0					
ANR	12033	ArgumentList	f		11076	1					
ANR	12034	Argument	f		11076	0					
ANR	12035	Identifier	f		11076	0					
ANR	12036	ReturnStatement	return NULL ;	931:20:29459:29470	11076	3	True				
ANR	12037	Identifier	NULL		11076	0					
ANR	12038	IfStatement	"if ( ! fread ( & a , 1 , 1 , f ) )"		11076	4					
ANR	12039	Condition	"! fread ( & a , 1 , 1 , f )"	933:20:29510:29528	11076	0	True				
ANR	12040	UnaryOperationExpression	"! fread ( & a , 1 , 1 , f )"		11076	0					
ANR	12041	UnaryOperator	!		11076	0					
ANR	12042	CallExpression	"fread ( & a , 1 , 1 , f )"		11076	1					
ANR	12043	Callee	fread		11076	0					
ANR	12044	Identifier	fread		11076	0					
ANR	12045	ArgumentList	& a		11076	1					
ANR	12046	Argument	& a		11076	0					
ANR	12047	UnaryOperationExpression	& a		11076	0					
ANR	12048	UnaryOperator	&		11076	0					
ANR	12049	Identifier	a		11076	1					
ANR	12050	Argument	1		11076	1					
ANR	12051	PrimaryExpression	1		11076	0					
ANR	12052	Argument	1		11076	2					
ANR	12053	PrimaryExpression	1		11076	0					
ANR	12054	Argument	f		11076	3					
ANR	12055	Identifier	f		11076	0					
ANR	12056	CompoundStatement		165:41:5830:5830	11076	1					
ANR	12057	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	934:20:29553:29672	11076	0	True				
ANR	12058	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		11076	0					
ANR	12059	Callee	fprintf		11076	0					
ANR	12060	Identifier	fprintf		11076	0					
ANR	12061	ArgumentList	stderr		11076	1					
ANR	12062	Argument	stderr		11076	0					
ANR	12063	Identifier	stderr		11076	0					
ANR	12064	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	1					
ANR	12065	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		11076	0					
ANR	12066	ExpressionStatement	opj_image_destroy ( image )	936:20:29694:29718	11076	1	True				
ANR	12067	CallExpression	opj_image_destroy ( image )		11076	0					
ANR	12068	Callee	opj_image_destroy		11076	0					
ANR	12069	Identifier	opj_image_destroy		11076	0					
ANR	12070	ArgumentList	image		11076	1					
ANR	12071	Argument	image		11076	0					
ANR	12072	Identifier	image		11076	0					
ANR	12073	ExpressionStatement	fclose ( f )	937:20:29740:29749	11076	2	True				
ANR	12074	CallExpression	fclose ( f )		11076	0					
ANR	12075	Callee	fclose		11076	0					
ANR	12076	Identifier	fclose		11076	0					
ANR	12077	ArgumentList	f		11076	1					
ANR	12078	Argument	f		11076	0					
ANR	12079	Identifier	f		11076	0					
ANR	12080	ReturnStatement	return NULL ;	938:20:29771:29782	11076	3	True				
ANR	12081	Identifier	NULL		11076	0					
ANR	12082	ExpressionStatement	image -> comps [ 0 ] . data [ index ] = r	941:16:29819:29850	11076	5	True				
ANR	12083	AssignmentExpression	image -> comps [ 0 ] . data [ index ] = r		11076	0		=			
ANR	12084	ArrayIndexing	image -> comps [ 0 ] . data [ index ]		11076	0					
ANR	12085	MemberAccess	image -> comps [ 0 ] . data		11076	0					
ANR	12086	ArrayIndexing	image -> comps [ 0 ]		11076	0					
ANR	12087	PtrMemberAccess	image -> comps		11076	0					
ANR	12088	Identifier	image		11076	0					
ANR	12089	Identifier	comps		11076	1					
ANR	12090	PrimaryExpression	0		11076	1					
ANR	12091	Identifier	data		11076	1					
ANR	12092	Identifier	index		11076	1					
ANR	12093	Identifier	r		11076	1					
ANR	12094	ExpressionStatement	image -> comps [ 1 ] . data [ index ] = g	942:16:29868:29899	11076	6	True				
ANR	12095	AssignmentExpression	image -> comps [ 1 ] . data [ index ] = g		11076	0		=			
ANR	12096	ArrayIndexing	image -> comps [ 1 ] . data [ index ]		11076	0					
ANR	12097	MemberAccess	image -> comps [ 1 ] . data		11076	0					
ANR	12098	ArrayIndexing	image -> comps [ 1 ]		11076	0					
ANR	12099	PtrMemberAccess	image -> comps		11076	0					
ANR	12100	Identifier	image		11076	0					
ANR	12101	Identifier	comps		11076	1					
ANR	12102	PrimaryExpression	1		11076	1					
ANR	12103	Identifier	data		11076	1					
ANR	12104	Identifier	index		11076	1					
ANR	12105	Identifier	g		11076	1					
ANR	12106	ExpressionStatement	image -> comps [ 2 ] . data [ index ] = b	943:16:29917:29948	11076	7	True				
ANR	12107	AssignmentExpression	image -> comps [ 2 ] . data [ index ] = b		11076	0		=			
ANR	12108	ArrayIndexing	image -> comps [ 2 ] . data [ index ]		11076	0					
ANR	12109	MemberAccess	image -> comps [ 2 ] . data		11076	0					
ANR	12110	ArrayIndexing	image -> comps [ 2 ]		11076	0					
ANR	12111	PtrMemberAccess	image -> comps		11076	0					
ANR	12112	Identifier	image		11076	0					
ANR	12113	Identifier	comps		11076	1					
ANR	12114	PrimaryExpression	2		11076	1					
ANR	12115	Identifier	data		11076	1					
ANR	12116	Identifier	index		11076	1					
ANR	12117	Identifier	b		11076	1					
ANR	12118	ExpressionStatement	image -> comps [ 3 ] . data [ index ] = a	944:16:29966:29997	11076	8	True				
ANR	12119	AssignmentExpression	image -> comps [ 3 ] . data [ index ] = a		11076	0		=			
ANR	12120	ArrayIndexing	image -> comps [ 3 ] . data [ index ]		11076	0					
ANR	12121	MemberAccess	image -> comps [ 3 ] . data		11076	0					
ANR	12122	ArrayIndexing	image -> comps [ 3 ]		11076	0					
ANR	12123	PtrMemberAccess	image -> comps		11076	0					
ANR	12124	Identifier	image		11076	0					
ANR	12125	Identifier	comps		11076	1					
ANR	12126	PrimaryExpression	3		11076	1					
ANR	12127	Identifier	data		11076	1					
ANR	12128	Identifier	index		11076	1					
ANR	12129	Identifier	a		11076	1					
ANR	12130	ExpressionStatement	index ++	945:16:30015:30022	11076	9	True				
ANR	12131	PostIncDecOperationExpression	index ++		11076	0					
ANR	12132	Identifier	index		11076	0					
ANR	12133	IncDec	++		11076	1					
ANR	12134	ElseStatement	else		11076	0					
ANR	12135	CompoundStatement		179:15:6352:6352	11076	0					
ANR	12136	ExpressionStatement	"fprintf ( stderr , ""Currently unsupported bit depth : %s\\n"" , filename )"	948:12:30067:30134	11076	0	True				
ANR	12137	CallExpression	"fprintf ( stderr , ""Currently unsupported bit depth : %s\\n"" , filename )"		11076	0					
ANR	12138	Callee	fprintf		11076	0					
ANR	12139	Identifier	fprintf		11076	0					
ANR	12140	ArgumentList	stderr		11076	1					
ANR	12141	Argument	stderr		11076	0					
ANR	12142	Identifier	stderr		11076	0					
ANR	12143	Argument	"""Currently unsupported bit depth : %s\\n"""		11076	1					
ANR	12144	PrimaryExpression	"""Currently unsupported bit depth : %s\\n"""		11076	0					
ANR	12145	Argument	filename		11076	2					
ANR	12146	Identifier	filename		11076	0					
ANR	12147	ExpressionStatement	fclose ( f )	951:4:30156:30165	11076	31	True				
ANR	12148	CallExpression	fclose ( f )		11076	0					
ANR	12149	Callee	fclose		11076	0					
ANR	12150	Identifier	fclose		11076	0					
ANR	12151	ArgumentList	f		11076	1					
ANR	12152	Argument	f		11076	0					
ANR	12153	Identifier	f		11076	0					
ANR	12154	ReturnStatement	return image ;	952:4:30171:30183	11076	32	True				
ANR	12155	Identifier	image		11076	0					
ANR	12156	ReturnType	opj_image_t *		11076	1					
ANR	12157	Identifier	tgatoimage		11076	2					
ANR	12158	ParameterList	"const char * filename , opj_cparameters_t * parameters"		11076	3					
ANR	12159	Parameter	const char * filename	768:24:23647:23666	11076	0	True				
ANR	12160	ParameterType	const char *		11076	0					
ANR	12161	Identifier	filename		11076	1					
ANR	12162	Parameter	opj_cparameters_t * parameters	768:46:23669:23697	11076	1	True				
ANR	12163	ParameterType	opj_cparameters_t *		11076	0					
ANR	12164	Identifier	parameters		11076	1					
ANR	12165	CFGEntryNode	ENTRY		11076		True				
ANR	12166	CFGExitNode	EXIT		11076		True				
ANR	12167	Symbol	& flip_image		11076						
ANR	12168	Symbol	image -> y0		11076						
ANR	12169	Symbol	curpos		11076						
ANR	12170	Symbol	image -> y1		11076						
ANR	12171	Symbol	* index		11076						
ANR	12172	Symbol	cmptparm		11076						
ANR	12173	Symbol	* image -> comps [ 1 ] . data		11076						
ANR	12174	Symbol	image -> comps		11076						
ANR	12175	Symbol	image -> comps [ 2 ] . data		11076						
ANR	12176	Symbol	& ch		11076						
ANR	12177	Symbol	image_height		11076						
ANR	12178	Symbol	* * * image		11076						
ANR	12179	Symbol	& image_width		11076						
ANR	12180	Symbol	* * image -> comps		11076						
ANR	12181	Symbol	& image_height		11076						
ANR	12182	Symbol	image		11076						
ANR	12183	Symbol	image -> x0		11076						
ANR	12184	Symbol	NULL		11076						
ANR	12185	Symbol	image -> x1		11076						
ANR	12186	Symbol	image -> comps [ 3 ] . data		11076						
ANR	12187	Symbol	index		11076						
ANR	12188	Symbol	image_width		11076						
ANR	12189	Symbol	stderr		11076						
ANR	12190	Symbol	save_alpha		11076						
ANR	12191	Symbol	fread		11076						
ANR	12192	Symbol	cmptparm [ i ] . dy		11076						
ANR	12193	Symbol	* image -> comps [ 2 ] . data		11076						
ANR	12194	Symbol	filename		11076						
ANR	12195	Symbol	* parameters		11076						
ANR	12196	Symbol	cmptparm [ i ] . h		11076						
ANR	12197	Symbol	cmptparm [ i ] . dx		11076						
ANR	12198	Symbol	tga_readheader		11076						
ANR	12199	Symbol	parameters		11076						
ANR	12200	Symbol	* image		11076						
ANR	12201	Symbol	cmptparm [ i ] . bpp		11076						
ANR	12202	Symbol	cmptparm [ i ] . w		11076						
ANR	12203	Symbol	ftell		11076						
ANR	12204	Symbol	OPJ_CLRSPC_GRAY		11076						
ANR	12205	Symbol	flip_image		11076						
ANR	12206	Symbol	parameters -> image_offset_x0		11076						
ANR	12207	Symbol	& pixel_bit_depth		11076						
ANR	12208	Symbol	opj_image_create		11076						
ANR	12209	Symbol	mono		11076						
ANR	12210	Symbol	* * image		11076						
ANR	12211	Symbol	INT_MAX		11076						
ANR	12212	Symbol	image -> comps [ 0 ] . data		11076						
ANR	12213	Symbol	* image -> comps [ 3 ] . data		11076						
ANR	12214	Symbol	* image -> comps [ 0 ] . data		11076						
ANR	12215	Symbol	color_space		11076						
ANR	12216	Symbol	numcomps		11076						
ANR	12217	Symbol	SEEK_SET		11076						
ANR	12218	Symbol	fopen		11076						
ANR	12219	Symbol	* image -> comps		11076						
ANR	12220	Symbol	a		11076						
ANR	12221	Symbol	b		11076						
ANR	12222	Symbol	subsampling_dx		11076						
ANR	12223	Symbol	cmptparm [ i ] . sgnd		11076						
ANR	12224	Symbol	subsampling_dy		11076						
ANR	12225	Symbol	ch		11076						
ANR	12226	Symbol	f		11076						
ANR	12227	Symbol	g		11076						
ANR	12228	Symbol	& a		11076						
ANR	12229	Symbol	& b		11076						
ANR	12230	Symbol	i		11076						
ANR	12231	Symbol	OPJ_CLRSPC_SRGB		11076						
ANR	12232	Symbol	parameters -> image_offset_y0		11076						
ANR	12233	Symbol	parameters -> subsampling_dx		11076						
ANR	12234	Symbol	& g		11076						
ANR	12235	Symbol	parameters -> subsampling_dy		11076						
ANR	12236	Symbol	r		11076						
ANR	12237	Symbol	* i		11076						
ANR	12238	Symbol	cmptparm [ i ] . prec		11076						
ANR	12239	Symbol	image -> comps [ 1 ] . data		11076						
ANR	12240	Symbol	expected_file_size		11076						
ANR	12241	Symbol	x		11076						
ANR	12242	Symbol	& r		11076						
ANR	12243	Symbol	pixel_bit_depth		11076						
ANR	12244	Symbol	y		11076						
ANR	12245	Symbol	* cmptparm		11076						
ANR	12246	Function	imagetotga	955:0:30188:34135							
ANR	12247	FunctionDef	"imagetotga (opj_image_t * image , const char * outfile)"		12246	0					
ANR	12248	CompoundStatement		956:0:30245:34135	12246	0					
ANR	12249	IdentifierDeclStatement	"int width , height , bpp , x , y ;"	957:4:30251:30279	12246	0	True				
ANR	12250	IdentifierDecl	width		12246	0					
ANR	12251	IdentifierDeclType	int		12246	0					
ANR	12252	Identifier	width		12246	1					
ANR	12253	IdentifierDecl	height		12246	1					
ANR	12254	IdentifierDeclType	int		12246	0					
ANR	12255	Identifier	height		12246	1					
ANR	12256	IdentifierDecl	bpp		12246	2					
ANR	12257	IdentifierDeclType	int		12246	0					
ANR	12258	Identifier	bpp		12246	1					
ANR	12259	IdentifierDecl	x		12246	3					
ANR	12260	IdentifierDeclType	int		12246	0					
ANR	12261	Identifier	x		12246	1					
ANR	12262	IdentifierDecl	y		12246	4					
ANR	12263	IdentifierDeclType	int		12246	0					
ANR	12264	Identifier	y		12246	1					
ANR	12265	IdentifierDeclStatement	OPJ_BOOL write_alpha ;	958:4:30285:30305	12246	1	True				
ANR	12266	IdentifierDecl	write_alpha		12246	0					
ANR	12267	IdentifierDeclType	OPJ_BOOL		12246	0					
ANR	12268	Identifier	write_alpha		12246	1					
ANR	12269	IdentifierDeclStatement	unsigned int i ;	959:4:30311:30325	12246	2	True				
ANR	12270	IdentifierDecl	i		12246	0					
ANR	12271	IdentifierDeclType	unsigned int		12246	0					
ANR	12272	Identifier	i		12246	1					
ANR	12273	IdentifierDeclStatement	"int adjustR , adjustG = 0 , adjustB = 0 , fails ;"	960:4:30331:30375	12246	3	True				
ANR	12274	IdentifierDecl	adjustR		12246	0					
ANR	12275	IdentifierDeclType	int		12246	0					
ANR	12276	Identifier	adjustR		12246	1					
ANR	12277	IdentifierDecl	adjustG = 0		12246	1					
ANR	12278	IdentifierDeclType	int		12246	0					
ANR	12279	Identifier	adjustG		12246	1					
ANR	12280	AssignmentExpression	adjustG = 0		12246	2		=			
ANR	12281	Identifier	adjustG		12246	0					
ANR	12282	PrimaryExpression	0		12246	1					
ANR	12283	IdentifierDecl	adjustB = 0		12246	2					
ANR	12284	IdentifierDeclType	int		12246	0					
ANR	12285	Identifier	adjustB		12246	1					
ANR	12286	AssignmentExpression	adjustB = 0		12246	2		=			
ANR	12287	Identifier	adjustB		12246	0					
ANR	12288	PrimaryExpression	0		12246	1					
ANR	12289	IdentifierDecl	fails		12246	3					
ANR	12290	IdentifierDeclType	int		12246	0					
ANR	12291	Identifier	fails		12246	1					
ANR	12292	IdentifierDeclStatement	unsigned int alpha_channel ;	961:4:30381:30407	12246	4	True				
ANR	12293	IdentifierDecl	alpha_channel		12246	0					
ANR	12294	IdentifierDeclType	unsigned int		12246	0					
ANR	12295	Identifier	alpha_channel		12246	1					
ANR	12296	IdentifierDeclStatement	"float r , g , b , a ;"	962:4:30413:30429	12246	5	True				
ANR	12297	IdentifierDecl	r		12246	0					
ANR	12298	IdentifierDeclType	float		12246	0					
ANR	12299	Identifier	r		12246	1					
ANR	12300	IdentifierDecl	g		12246	1					
ANR	12301	IdentifierDeclType	float		12246	0					
ANR	12302	Identifier	g		12246	1					
ANR	12303	IdentifierDecl	b		12246	2					
ANR	12304	IdentifierDeclType	float		12246	0					
ANR	12305	Identifier	b		12246	1					
ANR	12306	IdentifierDecl	a		12246	3					
ANR	12307	IdentifierDeclType	float		12246	0					
ANR	12308	Identifier	a		12246	1					
ANR	12309	IdentifierDeclStatement	unsigned char value ;	963:4:30435:30454	12246	6	True				
ANR	12310	IdentifierDecl	value		12246	0					
ANR	12311	IdentifierDeclType	unsigned char		12246	0					
ANR	12312	Identifier	value		12246	1					
ANR	12313	IdentifierDeclStatement	float scale ;	964:4:30460:30471	12246	7	True				
ANR	12314	IdentifierDecl	scale		12246	0					
ANR	12315	IdentifierDeclType	float		12246	0					
ANR	12316	Identifier	scale		12246	1					
ANR	12317	IdentifierDeclStatement	FILE * fdest ;	965:4:30477:30488	12246	8	True				
ANR	12318	IdentifierDecl	* fdest		12246	0					
ANR	12319	IdentifierDeclType	FILE *		12246	0					
ANR	12320	Identifier	fdest		12246	1					
ANR	12321	IdentifierDeclStatement	size_t res ;	966:4:30494:30504	12246	9	True				
ANR	12322	IdentifierDecl	res		12246	0					
ANR	12323	IdentifierDeclType	size_t		12246	0					
ANR	12324	Identifier	res		12246	1					
ANR	12325	ExpressionStatement	fails = 1	967:4:30510:30519	12246	10	True				
ANR	12326	AssignmentExpression	fails = 1		12246	0		=			
ANR	12327	Identifier	fails		12246	0					
ANR	12328	PrimaryExpression	1		12246	1					
ANR	12329	ExpressionStatement	"fdest = fopen ( outfile , ""wb"" )"	969:4:30526:30554	12246	11	True				
ANR	12330	AssignmentExpression	"fdest = fopen ( outfile , ""wb"" )"		12246	0		=			
ANR	12331	Identifier	fdest		12246	0					
ANR	12332	CallExpression	"fopen ( outfile , ""wb"" )"		12246	1					
ANR	12333	Callee	fopen		12246	0					
ANR	12334	Identifier	fopen		12246	0					
ANR	12335	ArgumentList	outfile		12246	1					
ANR	12336	Argument	outfile		12246	0					
ANR	12337	Identifier	outfile		12246	0					
ANR	12338	Argument	"""wb"""		12246	1					
ANR	12339	PrimaryExpression	"""wb"""		12246	0					
ANR	12340	IfStatement	if ( ! fdest )		12246	12					
ANR	12341	Condition	! fdest	970:8:30564:30569	12246	0	True				
ANR	12342	UnaryOperationExpression	! fdest		12246	0					
ANR	12343	UnaryOperator	!		12246	0					
ANR	12344	Identifier	fdest		12246	1					
ANR	12345	CompoundStatement		15:16:326:326	12246	1					
ANR	12346	ExpressionStatement	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , outfile )"	971:8:30582:30650	12246	0	True				
ANR	12347	CallExpression	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , outfile )"		12246	0					
ANR	12348	Callee	fprintf		12246	0					
ANR	12349	Identifier	fprintf		12246	0					
ANR	12350	ArgumentList	stderr		12246	1					
ANR	12351	Argument	stderr		12246	0					
ANR	12352	Identifier	stderr		12246	0					
ANR	12353	Argument	"""ERROR -> failed to open %s for writing\\n"""		12246	1					
ANR	12354	PrimaryExpression	"""ERROR -> failed to open %s for writing\\n"""		12246	0					
ANR	12355	Argument	outfile		12246	2					
ANR	12356	Identifier	outfile		12246	0					
ANR	12357	ReturnStatement	return 1 ;	972:8:30660:30668	12246	1	True				
ANR	12358	PrimaryExpression	1		12246	0					
ANR	12359	ForStatement	for ( i = 0 ; i < image -> numcomps - 1 ; i ++ )		12246	13					
ANR	12360	ForInit	i = 0 ;	975:9:30686:30691	12246	0	True				
ANR	12361	AssignmentExpression	i = 0		12246	0		=			
ANR	12362	Identifier	i		12246	0					
ANR	12363	PrimaryExpression	0		12246	1					
ANR	12364	Condition	i < image -> numcomps - 1	975:16:30693:30715	12246	1	True				
ANR	12365	RelationalExpression	i < image -> numcomps - 1		12246	0		<			
ANR	12366	Identifier	i		12246	0					
ANR	12367	AdditiveExpression	image -> numcomps - 1		12246	1		-			
ANR	12368	PtrMemberAccess	image -> numcomps		12246	0					
ANR	12369	Identifier	image		12246	0					
ANR	12370	Identifier	numcomps		12246	1					
ANR	12371	PrimaryExpression	1		12246	1					
ANR	12372	PostIncDecOperationExpression	i ++	975:41:30718:30720	12246	2	True				
ANR	12373	Identifier	i		12246	0					
ANR	12374	IncDec	++		12246	1					
ANR	12375	CompoundStatement		20:46:477:477	12246	3					
ANR	12376	IfStatement	if ( ( image -> comps [ 0 ] . dx != image -> comps [ i + 1 ] . dx ) || ( image -> comps [ 0 ] . dy != image -> comps [ i + 1 ] . dy ) || ( image -> comps [ 0 ] . prec != image -> comps [ i + 1 ] . prec ) || ( image -> comps [ 0 ] . sgnd != image -> comps [ i + 1 ] . sgnd ) )		12246	0					
ANR	12377	Condition	( image -> comps [ 0 ] . dx != image -> comps [ i + 1 ] . dx ) || ( image -> comps [ 0 ] . dy != image -> comps [ i + 1 ] . dy ) || ( image -> comps [ 0 ] . prec != image -> comps [ i + 1 ] . prec ) || ( image -> comps [ 0 ] . sgnd != image -> comps [ i + 1 ] . sgnd )	976:12:30737:30988	12246	0	True				
ANR	12378	OrExpression	( image -> comps [ 0 ] . dx != image -> comps [ i + 1 ] . dx ) || ( image -> comps [ 0 ] . dy != image -> comps [ i + 1 ] . dy ) || ( image -> comps [ 0 ] . prec != image -> comps [ i + 1 ] . prec ) || ( image -> comps [ 0 ] . sgnd != image -> comps [ i + 1 ] . sgnd )		12246	0		||			
ANR	12379	EqualityExpression	image -> comps [ 0 ] . dx != image -> comps [ i + 1 ] . dx		12246	0		!=			
ANR	12380	MemberAccess	image -> comps [ 0 ] . dx		12246	0					
ANR	12381	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12382	PtrMemberAccess	image -> comps		12246	0					
ANR	12383	Identifier	image		12246	0					
ANR	12384	Identifier	comps		12246	1					
ANR	12385	PrimaryExpression	0		12246	1					
ANR	12386	Identifier	dx		12246	1					
ANR	12387	MemberAccess	image -> comps [ i + 1 ] . dx		12246	1					
ANR	12388	ArrayIndexing	image -> comps [ i + 1 ]		12246	0					
ANR	12389	PtrMemberAccess	image -> comps		12246	0					
ANR	12390	Identifier	image		12246	0					
ANR	12391	Identifier	comps		12246	1					
ANR	12392	AdditiveExpression	i + 1		12246	1		+			
ANR	12393	Identifier	i		12246	0					
ANR	12394	PrimaryExpression	1		12246	1					
ANR	12395	Identifier	dx		12246	1					
ANR	12396	OrExpression	( image -> comps [ 0 ] . dy != image -> comps [ i + 1 ] . dy ) || ( image -> comps [ 0 ] . prec != image -> comps [ i + 1 ] . prec ) || ( image -> comps [ 0 ] . sgnd != image -> comps [ i + 1 ] . sgnd )		12246	1		||			
ANR	12397	EqualityExpression	image -> comps [ 0 ] . dy != image -> comps [ i + 1 ] . dy		12246	0		!=			
ANR	12398	MemberAccess	image -> comps [ 0 ] . dy		12246	0					
ANR	12399	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12400	PtrMemberAccess	image -> comps		12246	0					
ANR	12401	Identifier	image		12246	0					
ANR	12402	Identifier	comps		12246	1					
ANR	12403	PrimaryExpression	0		12246	1					
ANR	12404	Identifier	dy		12246	1					
ANR	12405	MemberAccess	image -> comps [ i + 1 ] . dy		12246	1					
ANR	12406	ArrayIndexing	image -> comps [ i + 1 ]		12246	0					
ANR	12407	PtrMemberAccess	image -> comps		12246	0					
ANR	12408	Identifier	image		12246	0					
ANR	12409	Identifier	comps		12246	1					
ANR	12410	AdditiveExpression	i + 1		12246	1		+			
ANR	12411	Identifier	i		12246	0					
ANR	12412	PrimaryExpression	1		12246	1					
ANR	12413	Identifier	dy		12246	1					
ANR	12414	OrExpression	( image -> comps [ 0 ] . prec != image -> comps [ i + 1 ] . prec ) || ( image -> comps [ 0 ] . sgnd != image -> comps [ i + 1 ] . sgnd )		12246	1		||			
ANR	12415	EqualityExpression	image -> comps [ 0 ] . prec != image -> comps [ i + 1 ] . prec		12246	0		!=			
ANR	12416	MemberAccess	image -> comps [ 0 ] . prec		12246	0					
ANR	12417	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12418	PtrMemberAccess	image -> comps		12246	0					
ANR	12419	Identifier	image		12246	0					
ANR	12420	Identifier	comps		12246	1					
ANR	12421	PrimaryExpression	0		12246	1					
ANR	12422	Identifier	prec		12246	1					
ANR	12423	MemberAccess	image -> comps [ i + 1 ] . prec		12246	1					
ANR	12424	ArrayIndexing	image -> comps [ i + 1 ]		12246	0					
ANR	12425	PtrMemberAccess	image -> comps		12246	0					
ANR	12426	Identifier	image		12246	0					
ANR	12427	Identifier	comps		12246	1					
ANR	12428	AdditiveExpression	i + 1		12246	1		+			
ANR	12429	Identifier	i		12246	0					
ANR	12430	PrimaryExpression	1		12246	1					
ANR	12431	Identifier	prec		12246	1					
ANR	12432	EqualityExpression	image -> comps [ 0 ] . sgnd != image -> comps [ i + 1 ] . sgnd		12246	1		!=			
ANR	12433	MemberAccess	image -> comps [ 0 ] . sgnd		12246	0					
ANR	12434	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12435	PtrMemberAccess	image -> comps		12246	0					
ANR	12436	Identifier	image		12246	0					
ANR	12437	Identifier	comps		12246	1					
ANR	12438	PrimaryExpression	0		12246	1					
ANR	12439	Identifier	sgnd		12246	1					
ANR	12440	MemberAccess	image -> comps [ i + 1 ] . sgnd		12246	1					
ANR	12441	ArrayIndexing	image -> comps [ i + 1 ]		12246	0					
ANR	12442	PtrMemberAccess	image -> comps		12246	0					
ANR	12443	Identifier	image		12246	0					
ANR	12444	Identifier	comps		12246	1					
ANR	12445	AdditiveExpression	i + 1		12246	1		+			
ANR	12446	Identifier	i		12246	0					
ANR	12447	PrimaryExpression	1		12246	1					
ANR	12448	Identifier	sgnd		12246	1					
ANR	12449	CompoundStatement		24:71:745:745	12246	1					
ANR	12450	ExpressionStatement	fclose ( fdest )	980:12:31005:31018	12246	0	True				
ANR	12451	CallExpression	fclose ( fdest )		12246	0					
ANR	12452	Callee	fclose		12246	0					
ANR	12453	Identifier	fclose		12246	0					
ANR	12454	ArgumentList	fdest		12246	1					
ANR	12455	Argument	fdest		12246	0					
ANR	12456	Identifier	fdest		12246	0					
ANR	12457	ExpressionStatement	"fprintf ( stderr , ""Unable to create a tga file with such J2K image charateristics.\\n"" )"	981:12:31032:31136	12246	1	True				
ANR	12458	CallExpression	"fprintf ( stderr , ""Unable to create a tga file with such J2K image charateristics.\\n"" )"		12246	0					
ANR	12459	Callee	fprintf		12246	0					
ANR	12460	Identifier	fprintf		12246	0					
ANR	12461	ArgumentList	stderr		12246	1					
ANR	12462	Argument	stderr		12246	0					
ANR	12463	Identifier	stderr		12246	0					
ANR	12464	Argument	"""Unable to create a tga file with such J2K image charateristics.\\n"""		12246	1					
ANR	12465	PrimaryExpression	"""Unable to create a tga file with such J2K image charateristics.\\n"""		12246	0					
ANR	12466	ReturnStatement	return 1 ;	983:12:31150:31158	12246	2	True				
ANR	12467	PrimaryExpression	1		12246	0					
ANR	12468	ExpressionStatement	width = ( int ) image -> comps [ 0 ] . w	987:4:31181:31212	12246	14	True				
ANR	12469	AssignmentExpression	width = ( int ) image -> comps [ 0 ] . w		12246	0		=			
ANR	12470	Identifier	width		12246	0					
ANR	12471	CastExpression	( int ) image -> comps [ 0 ] . w		12246	1					
ANR	12472	CastTarget	int		12246	0					
ANR	12473	MemberAccess	image -> comps [ 0 ] . w		12246	1					
ANR	12474	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12475	PtrMemberAccess	image -> comps		12246	0					
ANR	12476	Identifier	image		12246	0					
ANR	12477	Identifier	comps		12246	1					
ANR	12478	PrimaryExpression	0		12246	1					
ANR	12479	Identifier	w		12246	1					
ANR	12480	ExpressionStatement	height = ( int ) image -> comps [ 0 ] . h	988:4:31218:31249	12246	15	True				
ANR	12481	AssignmentExpression	height = ( int ) image -> comps [ 0 ] . h		12246	0		=			
ANR	12482	Identifier	height		12246	0					
ANR	12483	CastExpression	( int ) image -> comps [ 0 ] . h		12246	1					
ANR	12484	CastTarget	int		12246	0					
ANR	12485	MemberAccess	image -> comps [ 0 ] . h		12246	1					
ANR	12486	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12487	PtrMemberAccess	image -> comps		12246	0					
ANR	12488	Identifier	image		12246	0					
ANR	12489	Identifier	comps		12246	1					
ANR	12490	PrimaryExpression	0		12246	1					
ANR	12491	Identifier	h		12246	1					
ANR	12492	ExpressionStatement	write_alpha = ( image -> numcomps == 2 ) || ( image -> numcomps == 4 )	991:4:31302:31364	12246	16	True				
ANR	12493	AssignmentExpression	write_alpha = ( image -> numcomps == 2 ) || ( image -> numcomps == 4 )		12246	0		=			
ANR	12494	Identifier	write_alpha		12246	0					
ANR	12495	OrExpression	( image -> numcomps == 2 ) || ( image -> numcomps == 4 )		12246	1		||			
ANR	12496	EqualityExpression	image -> numcomps == 2		12246	0		==			
ANR	12497	PtrMemberAccess	image -> numcomps		12246	0					
ANR	12498	Identifier	image		12246	0					
ANR	12499	Identifier	numcomps		12246	1					
ANR	12500	PrimaryExpression	2		12246	1					
ANR	12501	EqualityExpression	image -> numcomps == 4		12246	1		==			
ANR	12502	PtrMemberAccess	image -> numcomps		12246	0					
ANR	12503	Identifier	image		12246	0					
ANR	12504	Identifier	numcomps		12246	1					
ANR	12505	PrimaryExpression	4		12246	1					
ANR	12506	ExpressionStatement	bpp = write_alpha ? 32 : 24	994:4:31399:31426	12246	17	True				
ANR	12507	AssignmentExpression	bpp = write_alpha ? 32 : 24		12246	0		=			
ANR	12508	Identifier	bpp		12246	0					
ANR	12509	ConditionalExpression	write_alpha ? 32 : 24		12246	1					
ANR	12510	Condition	write_alpha		12246	0					
ANR	12511	Identifier	write_alpha		12246	0					
ANR	12512	PrimaryExpression	32		12246	1					
ANR	12513	PrimaryExpression	24		12246	2					
ANR	12514	IfStatement	"if ( ! tga_writeheader ( fdest , bpp , width , height , OPJ_TRUE ) )"		12246	18					
ANR	12515	Condition	"! tga_writeheader ( fdest , bpp , width , height , OPJ_TRUE )"	996:8:31437:31489	12246	0	True				
ANR	12516	UnaryOperationExpression	"! tga_writeheader ( fdest , bpp , width , height , OPJ_TRUE )"		12246	0					
ANR	12517	UnaryOperator	!		12246	0					
ANR	12518	CallExpression	"tga_writeheader ( fdest , bpp , width , height , OPJ_TRUE )"		12246	1					
ANR	12519	Callee	tga_writeheader		12246	0					
ANR	12520	Identifier	tga_writeheader		12246	0					
ANR	12521	ArgumentList	fdest		12246	1					
ANR	12522	Argument	fdest		12246	0					
ANR	12523	Identifier	fdest		12246	0					
ANR	12524	Argument	bpp		12246	1					
ANR	12525	Identifier	bpp		12246	0					
ANR	12526	Argument	width		12246	2					
ANR	12527	Identifier	width		12246	0					
ANR	12528	Argument	height		12246	3					
ANR	12529	Identifier	height		12246	0					
ANR	12530	Argument	OPJ_TRUE		12246	4					
ANR	12531	Identifier	OPJ_TRUE		12246	0					
ANR	12532	CompoundStatement		41:63:1246:1246	12246	1					
ANR	12533	GotoStatement	goto fin ;	997:8:31502:31510	12246	0	True				
ANR	12534	Identifier	fin		12246	0					
ANR	12535	ExpressionStatement	alpha_channel = image -> numcomps - 1	1000:4:31523:31558	12246	19	True				
ANR	12536	AssignmentExpression	alpha_channel = image -> numcomps - 1		12246	0		=			
ANR	12537	Identifier	alpha_channel		12246	0					
ANR	12538	AdditiveExpression	image -> numcomps - 1		12246	1		-			
ANR	12539	PtrMemberAccess	image -> numcomps		12246	0					
ANR	12540	Identifier	image		12246	0					
ANR	12541	Identifier	numcomps		12246	1					
ANR	12542	PrimaryExpression	1		12246	1					
ANR	12543	ExpressionStatement	scale = 255.0f / ( float ) ( ( 1 << image -> comps [ 0 ] . prec ) - 1 )	1002:4:31565:31622	12246	20	True				
ANR	12544	AssignmentExpression	scale = 255.0f / ( float ) ( ( 1 << image -> comps [ 0 ] . prec ) - 1 )		12246	0		=			
ANR	12545	Identifier	scale		12246	0					
ANR	12546	MultiplicativeExpression	255.0f / ( float ) ( ( 1 << image -> comps [ 0 ] . prec ) - 1 )		12246	1		/			
ANR	12547	PrimaryExpression	255.0f		12246	0					
ANR	12548	CastExpression	( float ) ( ( 1 << image -> comps [ 0 ] . prec ) - 1 )		12246	1					
ANR	12549	CastTarget	float		12246	0					
ANR	12550	AdditiveExpression	( 1 << image -> comps [ 0 ] . prec ) - 1		12246	1		-			
ANR	12551	ShiftExpression	1 << image -> comps [ 0 ] . prec		12246	0		<<			
ANR	12552	PrimaryExpression	1		12246	0					
ANR	12553	MemberAccess	image -> comps [ 0 ] . prec		12246	1					
ANR	12554	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12555	PtrMemberAccess	image -> comps		12246	0					
ANR	12556	Identifier	image		12246	0					
ANR	12557	Identifier	comps		12246	1					
ANR	12558	PrimaryExpression	0		12246	1					
ANR	12559	Identifier	prec		12246	1					
ANR	12560	PrimaryExpression	1		12246	1					
ANR	12561	ExpressionStatement	adjustR = ( image -> comps [ 0 ] . sgnd ? 1 << ( image -> comps [ 0 ] . prec - 1 ) : 0 )	1004:4:31629:31699	12246	21	True				
ANR	12562	AssignmentExpression	adjustR = ( image -> comps [ 0 ] . sgnd ? 1 << ( image -> comps [ 0 ] . prec - 1 ) : 0 )		12246	0		=			
ANR	12563	Identifier	adjustR		12246	0					
ANR	12564	ConditionalExpression	image -> comps [ 0 ] . sgnd ? 1 << ( image -> comps [ 0 ] . prec - 1 ) : 0		12246	1					
ANR	12565	Condition	image -> comps [ 0 ] . sgnd		12246	0					
ANR	12566	MemberAccess	image -> comps [ 0 ] . sgnd		12246	0					
ANR	12567	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12568	PtrMemberAccess	image -> comps		12246	0					
ANR	12569	Identifier	image		12246	0					
ANR	12570	Identifier	comps		12246	1					
ANR	12571	PrimaryExpression	0		12246	1					
ANR	12572	Identifier	sgnd		12246	1					
ANR	12573	ShiftExpression	1 << ( image -> comps [ 0 ] . prec - 1 )		12246	1		<<			
ANR	12574	PrimaryExpression	1		12246	0					
ANR	12575	AdditiveExpression	image -> comps [ 0 ] . prec - 1		12246	1		-			
ANR	12576	MemberAccess	image -> comps [ 0 ] . prec		12246	0					
ANR	12577	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12578	PtrMemberAccess	image -> comps		12246	0					
ANR	12579	Identifier	image		12246	0					
ANR	12580	Identifier	comps		12246	1					
ANR	12581	PrimaryExpression	0		12246	1					
ANR	12582	Identifier	prec		12246	1					
ANR	12583	PrimaryExpression	1		12246	1					
ANR	12584	PrimaryExpression	0		12246	2					
ANR	12585	IfStatement	if ( image -> numcomps >= 3 )		12246	22					
ANR	12586	Condition	image -> numcomps >= 3	1005:8:31709:31728	12246	0	True				
ANR	12587	RelationalExpression	image -> numcomps >= 3		12246	0		>=			
ANR	12588	PtrMemberAccess	image -> numcomps		12246	0					
ANR	12589	Identifier	image		12246	0					
ANR	12590	Identifier	numcomps		12246	1					
ANR	12591	PrimaryExpression	3		12246	1					
ANR	12592	CompoundStatement		50:30:1485:1485	12246	1					
ANR	12593	ExpressionStatement	adjustG = ( image -> comps [ 1 ] . sgnd ? 1 << ( image -> comps [ 1 ] . prec - 1 ) : 0 )	1006:8:31741:31811	12246	0	True				
ANR	12594	AssignmentExpression	adjustG = ( image -> comps [ 1 ] . sgnd ? 1 << ( image -> comps [ 1 ] . prec - 1 ) : 0 )		12246	0		=			
ANR	12595	Identifier	adjustG		12246	0					
ANR	12596	ConditionalExpression	image -> comps [ 1 ] . sgnd ? 1 << ( image -> comps [ 1 ] . prec - 1 ) : 0		12246	1					
ANR	12597	Condition	image -> comps [ 1 ] . sgnd		12246	0					
ANR	12598	MemberAccess	image -> comps [ 1 ] . sgnd		12246	0					
ANR	12599	ArrayIndexing	image -> comps [ 1 ]		12246	0					
ANR	12600	PtrMemberAccess	image -> comps		12246	0					
ANR	12601	Identifier	image		12246	0					
ANR	12602	Identifier	comps		12246	1					
ANR	12603	PrimaryExpression	1		12246	1					
ANR	12604	Identifier	sgnd		12246	1					
ANR	12605	ShiftExpression	1 << ( image -> comps [ 1 ] . prec - 1 )		12246	1		<<			
ANR	12606	PrimaryExpression	1		12246	0					
ANR	12607	AdditiveExpression	image -> comps [ 1 ] . prec - 1		12246	1		-			
ANR	12608	MemberAccess	image -> comps [ 1 ] . prec		12246	0					
ANR	12609	ArrayIndexing	image -> comps [ 1 ]		12246	0					
ANR	12610	PtrMemberAccess	image -> comps		12246	0					
ANR	12611	Identifier	image		12246	0					
ANR	12612	Identifier	comps		12246	1					
ANR	12613	PrimaryExpression	1		12246	1					
ANR	12614	Identifier	prec		12246	1					
ANR	12615	PrimaryExpression	1		12246	1					
ANR	12616	PrimaryExpression	0		12246	2					
ANR	12617	ExpressionStatement	adjustB = ( image -> comps [ 2 ] . sgnd ? 1 << ( image -> comps [ 2 ] . prec - 1 ) : 0 )	1007:8:31821:31891	12246	1	True				
ANR	12618	AssignmentExpression	adjustB = ( image -> comps [ 2 ] . sgnd ? 1 << ( image -> comps [ 2 ] . prec - 1 ) : 0 )		12246	0		=			
ANR	12619	Identifier	adjustB		12246	0					
ANR	12620	ConditionalExpression	image -> comps [ 2 ] . sgnd ? 1 << ( image -> comps [ 2 ] . prec - 1 ) : 0		12246	1					
ANR	12621	Condition	image -> comps [ 2 ] . sgnd		12246	0					
ANR	12622	MemberAccess	image -> comps [ 2 ] . sgnd		12246	0					
ANR	12623	ArrayIndexing	image -> comps [ 2 ]		12246	0					
ANR	12624	PtrMemberAccess	image -> comps		12246	0					
ANR	12625	Identifier	image		12246	0					
ANR	12626	Identifier	comps		12246	1					
ANR	12627	PrimaryExpression	2		12246	1					
ANR	12628	Identifier	sgnd		12246	1					
ANR	12629	ShiftExpression	1 << ( image -> comps [ 2 ] . prec - 1 )		12246	1		<<			
ANR	12630	PrimaryExpression	1		12246	0					
ANR	12631	AdditiveExpression	image -> comps [ 2 ] . prec - 1		12246	1		-			
ANR	12632	MemberAccess	image -> comps [ 2 ] . prec		12246	0					
ANR	12633	ArrayIndexing	image -> comps [ 2 ]		12246	0					
ANR	12634	PtrMemberAccess	image -> comps		12246	0					
ANR	12635	Identifier	image		12246	0					
ANR	12636	Identifier	comps		12246	1					
ANR	12637	PrimaryExpression	2		12246	1					
ANR	12638	Identifier	prec		12246	1					
ANR	12639	PrimaryExpression	1		12246	1					
ANR	12640	PrimaryExpression	0		12246	2					
ANR	12641	ForStatement	for ( y = 0 ; y < height ; y ++ )		12246	23					
ANR	12642	ForInit	y = 0 ;	1010:9:31909:31914	12246	0	True				
ANR	12643	AssignmentExpression	y = 0		12246	0		=			
ANR	12644	Identifier	y		12246	0					
ANR	12645	PrimaryExpression	0		12246	1					
ANR	12646	Condition	y < height	1010:16:31916:31925	12246	1	True				
ANR	12647	RelationalExpression	y < height		12246	0		<			
ANR	12648	Identifier	y		12246	0					
ANR	12649	Identifier	height		12246	1					
ANR	12650	PostIncDecOperationExpression	y ++	1010:28:31928:31930	12246	2	True				
ANR	12651	Identifier	y		12246	0					
ANR	12652	IncDec	++		12246	1					
ANR	12653	CompoundStatement		56:8:1697:1743	12246	3					
ANR	12654	IdentifierDeclStatement	unsigned int index = ( unsigned int ) ( y * width ) ;	1011:8:31943:31989	12246	0	True				
ANR	12655	IdentifierDecl	index = ( unsigned int ) ( y * width )		12246	0					
ANR	12656	IdentifierDeclType	unsigned int		12246	0					
ANR	12657	Identifier	index		12246	1					
ANR	12658	AssignmentExpression	index = ( unsigned int ) ( y * width )		12246	2		=			
ANR	12659	Identifier	index		12246	0					
ANR	12660	CastExpression	( unsigned int ) ( y * width )		12246	1					
ANR	12661	CastTarget	unsigned int		12246	0					
ANR	12662	MultiplicativeExpression	y * width		12246	1		*			
ANR	12663	Identifier	y		12246	0					
ANR	12664	Identifier	width		12246	1					
ANR	12665	ForStatement	"for ( x = 0 ; x < width ; x ++ , index ++ )"		12246	1					
ANR	12666	ForInit	x = 0 ;	1013:13:32005:32010	12246	0	True				
ANR	12667	AssignmentExpression	x = 0		12246	0		=			
ANR	12668	Identifier	x		12246	0					
ANR	12669	PrimaryExpression	0		12246	1					
ANR	12670	Condition	x < width	1013:20:32012:32020	12246	1	True				
ANR	12671	RelationalExpression	x < width		12246	0		<			
ANR	12672	Identifier	x		12246	0					
ANR	12673	Identifier	width		12246	1					
ANR	12674	Expression	"x ++ , index ++"	1013:31:32023:32034	12246	2	True				
ANR	12675	PostIncDecOperationExpression	x ++		12246	0					
ANR	12676	Identifier	x		12246	0					
ANR	12677	IncDec	++		12246	1					
ANR	12678	PostIncDecOperationExpression	index ++		12246	1					
ANR	12679	Identifier	index		12246	0					
ANR	12680	IncDec	++		12246	1					
ANR	12681	CompoundStatement		58:45:1791:1791	12246	3					
ANR	12682	ExpressionStatement	r = ( float ) ( image -> comps [ 0 ] . data [ index ] + adjustR )	1014:12:32051:32101	12246	0	True				
ANR	12683	AssignmentExpression	r = ( float ) ( image -> comps [ 0 ] . data [ index ] + adjustR )		12246	0		=			
ANR	12684	Identifier	r		12246	0					
ANR	12685	CastExpression	( float ) ( image -> comps [ 0 ] . data [ index ] + adjustR )		12246	1					
ANR	12686	CastTarget	float		12246	0					
ANR	12687	AdditiveExpression	image -> comps [ 0 ] . data [ index ] + adjustR		12246	1		+			
ANR	12688	ArrayIndexing	image -> comps [ 0 ] . data [ index ]		12246	0					
ANR	12689	MemberAccess	image -> comps [ 0 ] . data		12246	0					
ANR	12690	ArrayIndexing	image -> comps [ 0 ]		12246	0					
ANR	12691	PtrMemberAccess	image -> comps		12246	0					
ANR	12692	Identifier	image		12246	0					
ANR	12693	Identifier	comps		12246	1					
ANR	12694	PrimaryExpression	0		12246	1					
ANR	12695	Identifier	data		12246	1					
ANR	12696	Identifier	index		12246	1					
ANR	12697	Identifier	adjustR		12246	1					
ANR	12698	IfStatement	if ( image -> numcomps > 2 )		12246	1					
ANR	12699	Condition	image -> numcomps > 2	1016:16:32120:32138	12246	0	True				
ANR	12700	RelationalExpression	image -> numcomps > 2		12246	0		>			
ANR	12701	PtrMemberAccess	image -> numcomps		12246	0					
ANR	12702	Identifier	image		12246	0					
ANR	12703	Identifier	numcomps		12246	1					
ANR	12704	PrimaryExpression	2		12246	1					
ANR	12705	CompoundStatement		61:37:1895:1895	12246	1					
ANR	12706	ExpressionStatement	g = ( float ) ( image -> comps [ 1 ] . data [ index ] + adjustG )	1017:16:32159:32209	12246	0	True				
ANR	12707	AssignmentExpression	g = ( float ) ( image -> comps [ 1 ] . data [ index ] + adjustG )		12246	0		=			
ANR	12708	Identifier	g		12246	0					
ANR	12709	CastExpression	( float ) ( image -> comps [ 1 ] . data [ index ] + adjustG )		12246	1					
ANR	12710	CastTarget	float		12246	0					
ANR	12711	AdditiveExpression	image -> comps [ 1 ] . data [ index ] + adjustG		12246	1		+			
ANR	12712	ArrayIndexing	image -> comps [ 1 ] . data [ index ]		12246	0					
ANR	12713	MemberAccess	image -> comps [ 1 ] . data		12246	0					
ANR	12714	ArrayIndexing	image -> comps [ 1 ]		12246	0					
ANR	12715	PtrMemberAccess	image -> comps		12246	0					
ANR	12716	Identifier	image		12246	0					
ANR	12717	Identifier	comps		12246	1					
ANR	12718	PrimaryExpression	1		12246	1					
ANR	12719	Identifier	data		12246	1					
ANR	12720	Identifier	index		12246	1					
ANR	12721	Identifier	adjustG		12246	1					
ANR	12722	ExpressionStatement	b = ( float ) ( image -> comps [ 2 ] . data [ index ] + adjustB )	1018:16:32227:32277	12246	1	True				
ANR	12723	AssignmentExpression	b = ( float ) ( image -> comps [ 2 ] . data [ index ] + adjustB )		12246	0		=			
ANR	12724	Identifier	b		12246	0					
ANR	12725	CastExpression	( float ) ( image -> comps [ 2 ] . data [ index ] + adjustB )		12246	1					
ANR	12726	CastTarget	float		12246	0					
ANR	12727	AdditiveExpression	image -> comps [ 2 ] . data [ index ] + adjustB		12246	1		+			
ANR	12728	ArrayIndexing	image -> comps [ 2 ] . data [ index ]		12246	0					
ANR	12729	MemberAccess	image -> comps [ 2 ] . data		12246	0					
ANR	12730	ArrayIndexing	image -> comps [ 2 ]		12246	0					
ANR	12731	PtrMemberAccess	image -> comps		12246	0					
ANR	12732	Identifier	image		12246	0					
ANR	12733	Identifier	comps		12246	1					
ANR	12734	PrimaryExpression	2		12246	1					
ANR	12735	Identifier	data		12246	1					
ANR	12736	Identifier	index		12246	1					
ANR	12737	Identifier	adjustB		12246	1					
ANR	12738	ElseStatement	else		12246	0					
ANR	12739	CompoundStatement		64:19:2052:2052	12246	0					
ANR	12740	ExpressionStatement	g = r	1021:16:32352:32357	12246	0	True				
ANR	12741	AssignmentExpression	g = r		12246	0		=			
ANR	12742	Identifier	g		12246	0					
ANR	12743	Identifier	r		12246	1					
ANR	12744	ExpressionStatement	b = r	1022:16:32375:32380	12246	1	True				
ANR	12745	AssignmentExpression	b = r		12246	0		=			
ANR	12746	Identifier	b		12246	0					
ANR	12747	Identifier	r		12246	1					
ANR	12748	IfStatement	if ( b > 255. )		12246	2					
ANR	12749	Condition	b > 255.	1026:16:32457:32464	12246	0	True				
ANR	12750	RelationalExpression	b > 255.		12246	0		>			
ANR	12751	Identifier	b		12246	0					
ANR	12752	PrimaryExpression	255.		12246	1					
ANR	12753	CompoundStatement		71:26:2221:2221	12246	1					
ANR	12754	ExpressionStatement	b = 255.	1027:16:32485:32493	12246	0	True				
ANR	12755	AssignmentExpression	b = 255.		12246	0		=			
ANR	12756	Identifier	b		12246	0					
ANR	12757	PrimaryExpression	255.		12246	1					
ANR	12758	ElseStatement	else		12246	0					
ANR	12759	IfStatement	if ( b < 0. )		12246	0					
ANR	12760	Condition	b < 0.	1028:23:32518:32523	12246	0	True				
ANR	12761	RelationalExpression	b < 0.		12246	0		<			
ANR	12762	Identifier	b		12246	0					
ANR	12763	PrimaryExpression	0.		12246	1					
ANR	12764	CompoundStatement		73:31:2280:2280	12246	1					
ANR	12765	ExpressionStatement	b = 0.	1029:16:32544:32550	12246	0	True				
ANR	12766	AssignmentExpression	b = 0.		12246	0		=			
ANR	12767	Identifier	b		12246	0					
ANR	12768	PrimaryExpression	0.		12246	1					
ANR	12769	ExpressionStatement	value = ( unsigned char ) ( b * scale )	1031:12:32578:32612	12246	3	True				
ANR	12770	AssignmentExpression	value = ( unsigned char ) ( b * scale )		12246	0		=			
ANR	12771	Identifier	value		12246	0					
ANR	12772	CastExpression	( unsigned char ) ( b * scale )		12246	1					
ANR	12773	CastTarget	unsigned char		12246	0					
ANR	12774	MultiplicativeExpression	b * scale		12246	1		*			
ANR	12775	Identifier	b		12246	0					
ANR	12776	Identifier	scale		12246	1					
ANR	12777	ExpressionStatement	"res = fwrite ( & value , 1 , 1 , fdest )"	1032:12:32626:32659	12246	4	True				
ANR	12778	AssignmentExpression	"res = fwrite ( & value , 1 , 1 , fdest )"		12246	0		=			
ANR	12779	Identifier	res		12246	0					
ANR	12780	CallExpression	"fwrite ( & value , 1 , 1 , fdest )"		12246	1					
ANR	12781	Callee	fwrite		12246	0					
ANR	12782	Identifier	fwrite		12246	0					
ANR	12783	ArgumentList	& value		12246	1					
ANR	12784	Argument	& value		12246	0					
ANR	12785	UnaryOperationExpression	& value		12246	0					
ANR	12786	UnaryOperator	&		12246	0					
ANR	12787	Identifier	value		12246	1					
ANR	12788	Argument	1		12246	1					
ANR	12789	PrimaryExpression	1		12246	0					
ANR	12790	Argument	1		12246	2					
ANR	12791	PrimaryExpression	1		12246	0					
ANR	12792	Argument	fdest		12246	3					
ANR	12793	Identifier	fdest		12246	0					
ANR	12794	IfStatement	if ( res < 1 )		12246	5					
ANR	12795	Condition	res < 1	1034:16:32678:32684	12246	0	True				
ANR	12796	RelationalExpression	res < 1		12246	0		<			
ANR	12797	Identifier	res		12246	0					
ANR	12798	PrimaryExpression	1		12246	1					
ANR	12799	CompoundStatement		79:25:2441:2441	12246	1					
ANR	12800	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"	1035:16:32705:32764	12246	0	True				
ANR	12801	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"		12246	0					
ANR	12802	Callee	fprintf		12246	0					
ANR	12803	Identifier	fprintf		12246	0					
ANR	12804	ArgumentList	stderr		12246	1					
ANR	12805	Argument	stderr		12246	0					
ANR	12806	Identifier	stderr		12246	0					
ANR	12807	Argument	"""failed to write 1 byte for %s\\n"""		12246	1					
ANR	12808	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		12246	0					
ANR	12809	Argument	outfile		12246	2					
ANR	12810	Identifier	outfile		12246	0					
ANR	12811	GotoStatement	goto fin ;	1036:16:32782:32790	12246	1	True				
ANR	12812	Identifier	fin		12246	0					
ANR	12813	IfStatement	if ( g > 255. )		12246	6					
ANR	12814	Condition	g > 255.	1038:16:32822:32829	12246	0	True				
ANR	12815	RelationalExpression	g > 255.		12246	0		>			
ANR	12816	Identifier	g		12246	0					
ANR	12817	PrimaryExpression	255.		12246	1					
ANR	12818	CompoundStatement		83:26:2586:2586	12246	1					
ANR	12819	ExpressionStatement	g = 255.	1039:16:32850:32858	12246	0	True				
ANR	12820	AssignmentExpression	g = 255.		12246	0		=			
ANR	12821	Identifier	g		12246	0					
ANR	12822	PrimaryExpression	255.		12246	1					
ANR	12823	ElseStatement	else		12246	0					
ANR	12824	IfStatement	if ( g < 0. )		12246	0					
ANR	12825	Condition	g < 0.	1040:23:32883:32888	12246	0	True				
ANR	12826	RelationalExpression	g < 0.		12246	0		<			
ANR	12827	Identifier	g		12246	0					
ANR	12828	PrimaryExpression	0.		12246	1					
ANR	12829	CompoundStatement		85:31:2645:2645	12246	1					
ANR	12830	ExpressionStatement	g = 0.	1041:16:32909:32915	12246	0	True				
ANR	12831	AssignmentExpression	g = 0.		12246	0		=			
ANR	12832	Identifier	g		12246	0					
ANR	12833	PrimaryExpression	0.		12246	1					
ANR	12834	ExpressionStatement	value = ( unsigned char ) ( g * scale )	1043:12:32943:32977	12246	7	True				
ANR	12835	AssignmentExpression	value = ( unsigned char ) ( g * scale )		12246	0		=			
ANR	12836	Identifier	value		12246	0					
ANR	12837	CastExpression	( unsigned char ) ( g * scale )		12246	1					
ANR	12838	CastTarget	unsigned char		12246	0					
ANR	12839	MultiplicativeExpression	g * scale		12246	1		*			
ANR	12840	Identifier	g		12246	0					
ANR	12841	Identifier	scale		12246	1					
ANR	12842	ExpressionStatement	"res = fwrite ( & value , 1 , 1 , fdest )"	1044:12:32991:33024	12246	8	True				
ANR	12843	AssignmentExpression	"res = fwrite ( & value , 1 , 1 , fdest )"		12246	0		=			
ANR	12844	Identifier	res		12246	0					
ANR	12845	CallExpression	"fwrite ( & value , 1 , 1 , fdest )"		12246	1					
ANR	12846	Callee	fwrite		12246	0					
ANR	12847	Identifier	fwrite		12246	0					
ANR	12848	ArgumentList	& value		12246	1					
ANR	12849	Argument	& value		12246	0					
ANR	12850	UnaryOperationExpression	& value		12246	0					
ANR	12851	UnaryOperator	&		12246	0					
ANR	12852	Identifier	value		12246	1					
ANR	12853	Argument	1		12246	1					
ANR	12854	PrimaryExpression	1		12246	0					
ANR	12855	Argument	1		12246	2					
ANR	12856	PrimaryExpression	1		12246	0					
ANR	12857	Argument	fdest		12246	3					
ANR	12858	Identifier	fdest		12246	0					
ANR	12859	IfStatement	if ( res < 1 )		12246	9					
ANR	12860	Condition	res < 1	1046:16:33043:33049	12246	0	True				
ANR	12861	RelationalExpression	res < 1		12246	0		<			
ANR	12862	Identifier	res		12246	0					
ANR	12863	PrimaryExpression	1		12246	1					
ANR	12864	CompoundStatement		91:25:2806:2806	12246	1					
ANR	12865	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"	1047:16:33070:33129	12246	0	True				
ANR	12866	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"		12246	0					
ANR	12867	Callee	fprintf		12246	0					
ANR	12868	Identifier	fprintf		12246	0					
ANR	12869	ArgumentList	stderr		12246	1					
ANR	12870	Argument	stderr		12246	0					
ANR	12871	Identifier	stderr		12246	0					
ANR	12872	Argument	"""failed to write 1 byte for %s\\n"""		12246	1					
ANR	12873	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		12246	0					
ANR	12874	Argument	outfile		12246	2					
ANR	12875	Identifier	outfile		12246	0					
ANR	12876	GotoStatement	goto fin ;	1048:16:33147:33155	12246	1	True				
ANR	12877	Identifier	fin		12246	0					
ANR	12878	IfStatement	if ( r > 255. )		12246	10					
ANR	12879	Condition	r > 255.	1050:16:33187:33194	12246	0	True				
ANR	12880	RelationalExpression	r > 255.		12246	0		>			
ANR	12881	Identifier	r		12246	0					
ANR	12882	PrimaryExpression	255.		12246	1					
ANR	12883	CompoundStatement		95:26:2951:2951	12246	1					
ANR	12884	ExpressionStatement	r = 255.	1051:16:33215:33223	12246	0	True				
ANR	12885	AssignmentExpression	r = 255.		12246	0		=			
ANR	12886	Identifier	r		12246	0					
ANR	12887	PrimaryExpression	255.		12246	1					
ANR	12888	ElseStatement	else		12246	0					
ANR	12889	IfStatement	if ( r < 0. )		12246	0					
ANR	12890	Condition	r < 0.	1052:23:33248:33253	12246	0	True				
ANR	12891	RelationalExpression	r < 0.		12246	0		<			
ANR	12892	Identifier	r		12246	0					
ANR	12893	PrimaryExpression	0.		12246	1					
ANR	12894	CompoundStatement		97:31:3010:3010	12246	1					
ANR	12895	ExpressionStatement	r = 0.	1053:16:33274:33280	12246	0	True				
ANR	12896	AssignmentExpression	r = 0.		12246	0		=			
ANR	12897	Identifier	r		12246	0					
ANR	12898	PrimaryExpression	0.		12246	1					
ANR	12899	ExpressionStatement	value = ( unsigned char ) ( r * scale )	1055:12:33308:33342	12246	11	True				
ANR	12900	AssignmentExpression	value = ( unsigned char ) ( r * scale )		12246	0		=			
ANR	12901	Identifier	value		12246	0					
ANR	12902	CastExpression	( unsigned char ) ( r * scale )		12246	1					
ANR	12903	CastTarget	unsigned char		12246	0					
ANR	12904	MultiplicativeExpression	r * scale		12246	1		*			
ANR	12905	Identifier	r		12246	0					
ANR	12906	Identifier	scale		12246	1					
ANR	12907	ExpressionStatement	"res = fwrite ( & value , 1 , 1 , fdest )"	1056:12:33356:33389	12246	12	True				
ANR	12908	AssignmentExpression	"res = fwrite ( & value , 1 , 1 , fdest )"		12246	0		=			
ANR	12909	Identifier	res		12246	0					
ANR	12910	CallExpression	"fwrite ( & value , 1 , 1 , fdest )"		12246	1					
ANR	12911	Callee	fwrite		12246	0					
ANR	12912	Identifier	fwrite		12246	0					
ANR	12913	ArgumentList	& value		12246	1					
ANR	12914	Argument	& value		12246	0					
ANR	12915	UnaryOperationExpression	& value		12246	0					
ANR	12916	UnaryOperator	&		12246	0					
ANR	12917	Identifier	value		12246	1					
ANR	12918	Argument	1		12246	1					
ANR	12919	PrimaryExpression	1		12246	0					
ANR	12920	Argument	1		12246	2					
ANR	12921	PrimaryExpression	1		12246	0					
ANR	12922	Argument	fdest		12246	3					
ANR	12923	Identifier	fdest		12246	0					
ANR	12924	IfStatement	if ( res < 1 )		12246	13					
ANR	12925	Condition	res < 1	1058:16:33408:33414	12246	0	True				
ANR	12926	RelationalExpression	res < 1		12246	0		<			
ANR	12927	Identifier	res		12246	0					
ANR	12928	PrimaryExpression	1		12246	1					
ANR	12929	CompoundStatement		103:25:3171:3171	12246	1					
ANR	12930	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"	1059:16:33435:33494	12246	0	True				
ANR	12931	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"		12246	0					
ANR	12932	Callee	fprintf		12246	0					
ANR	12933	Identifier	fprintf		12246	0					
ANR	12934	ArgumentList	stderr		12246	1					
ANR	12935	Argument	stderr		12246	0					
ANR	12936	Identifier	stderr		12246	0					
ANR	12937	Argument	"""failed to write 1 byte for %s\\n"""		12246	1					
ANR	12938	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		12246	0					
ANR	12939	Argument	outfile		12246	2					
ANR	12940	Identifier	outfile		12246	0					
ANR	12941	GotoStatement	goto fin ;	1060:16:33512:33520	12246	1	True				
ANR	12942	Identifier	fin		12246	0					
ANR	12943	IfStatement	if ( write_alpha )		12246	14					
ANR	12944	Condition	write_alpha	1063:16:33553:33563	12246	0	True				
ANR	12945	Identifier	write_alpha		12246	0					
ANR	12946	CompoundStatement		108:29:3320:3320	12246	1					
ANR	12947	ExpressionStatement	a = ( float ) ( image -> comps [ alpha_channel ] . data [ index ] )	1064:16:33584:33636	12246	0	True				
ANR	12948	AssignmentExpression	a = ( float ) ( image -> comps [ alpha_channel ] . data [ index ] )		12246	0		=			
ANR	12949	Identifier	a		12246	0					
ANR	12950	CastExpression	( float ) ( image -> comps [ alpha_channel ] . data [ index ] )		12246	1					
ANR	12951	CastTarget	float		12246	0					
ANR	12952	ArrayIndexing	image -> comps [ alpha_channel ] . data [ index ]		12246	1					
ANR	12953	MemberAccess	image -> comps [ alpha_channel ] . data		12246	0					
ANR	12954	ArrayIndexing	image -> comps [ alpha_channel ]		12246	0					
ANR	12955	PtrMemberAccess	image -> comps		12246	0					
ANR	12956	Identifier	image		12246	0					
ANR	12957	Identifier	comps		12246	1					
ANR	12958	Identifier	alpha_channel		12246	1					
ANR	12959	Identifier	data		12246	1					
ANR	12960	Identifier	index		12246	1					
ANR	12961	IfStatement	if ( a > 255. )		12246	1					
ANR	12962	Condition	a > 255.	1065:20:33658:33665	12246	0	True				
ANR	12963	RelationalExpression	a > 255.		12246	0		>			
ANR	12964	Identifier	a		12246	0					
ANR	12965	PrimaryExpression	255.		12246	1					
ANR	12966	CompoundStatement		110:30:3422:3422	12246	1					
ANR	12967	ExpressionStatement	a = 255.	1066:20:33690:33698	12246	0	True				
ANR	12968	AssignmentExpression	a = 255.		12246	0		=			
ANR	12969	Identifier	a		12246	0					
ANR	12970	PrimaryExpression	255.		12246	1					
ANR	12971	ElseStatement	else		12246	0					
ANR	12972	IfStatement	if ( a < 0. )		12246	0					
ANR	12973	Condition	a < 0.	1067:27:33727:33732	12246	0	True				
ANR	12974	RelationalExpression	a < 0.		12246	0		<			
ANR	12975	Identifier	a		12246	0					
ANR	12976	PrimaryExpression	0.		12246	1					
ANR	12977	CompoundStatement		112:35:3489:3489	12246	1					
ANR	12978	ExpressionStatement	a = 0.	1068:20:33757:33763	12246	0	True				
ANR	12979	AssignmentExpression	a = 0.		12246	0		=			
ANR	12980	Identifier	a		12246	0					
ANR	12981	PrimaryExpression	0.		12246	1					
ANR	12982	ExpressionStatement	value = ( unsigned char ) ( a * scale )	1070:16:33799:33833	12246	2	True				
ANR	12983	AssignmentExpression	value = ( unsigned char ) ( a * scale )		12246	0		=			
ANR	12984	Identifier	value		12246	0					
ANR	12985	CastExpression	( unsigned char ) ( a * scale )		12246	1					
ANR	12986	CastTarget	unsigned char		12246	0					
ANR	12987	MultiplicativeExpression	a * scale		12246	1		*			
ANR	12988	Identifier	a		12246	0					
ANR	12989	Identifier	scale		12246	1					
ANR	12990	ExpressionStatement	"res = fwrite ( & value , 1 , 1 , fdest )"	1071:16:33851:33884	12246	3	True				
ANR	12991	AssignmentExpression	"res = fwrite ( & value , 1 , 1 , fdest )"		12246	0		=			
ANR	12992	Identifier	res		12246	0					
ANR	12993	CallExpression	"fwrite ( & value , 1 , 1 , fdest )"		12246	1					
ANR	12994	Callee	fwrite		12246	0					
ANR	12995	Identifier	fwrite		12246	0					
ANR	12996	ArgumentList	& value		12246	1					
ANR	12997	Argument	& value		12246	0					
ANR	12998	UnaryOperationExpression	& value		12246	0					
ANR	12999	UnaryOperator	&		12246	0					
ANR	13000	Identifier	value		12246	1					
ANR	13001	Argument	1		12246	1					
ANR	13002	PrimaryExpression	1		12246	0					
ANR	13003	Argument	1		12246	2					
ANR	13004	PrimaryExpression	1		12246	0					
ANR	13005	Argument	fdest		12246	3					
ANR	13006	Identifier	fdest		12246	0					
ANR	13007	IfStatement	if ( res < 1 )		12246	4					
ANR	13008	Condition	res < 1	1073:20:33907:33913	12246	0	True				
ANR	13009	RelationalExpression	res < 1		12246	0		<			
ANR	13010	Identifier	res		12246	0					
ANR	13011	PrimaryExpression	1		12246	1					
ANR	13012	CompoundStatement		118:29:3670:3670	12246	1					
ANR	13013	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"	1074:20:33938:33997	12246	0	True				
ANR	13014	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"		12246	0					
ANR	13015	Callee	fprintf		12246	0					
ANR	13016	Identifier	fprintf		12246	0					
ANR	13017	ArgumentList	stderr		12246	1					
ANR	13018	Argument	stderr		12246	0					
ANR	13019	Identifier	stderr		12246	0					
ANR	13020	Argument	"""failed to write 1 byte for %s\\n"""		12246	1					
ANR	13021	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		12246	0					
ANR	13022	Argument	outfile		12246	2					
ANR	13023	Identifier	outfile		12246	0					
ANR	13024	GotoStatement	goto fin ;	1075:20:34019:34027	12246	1	True				
ANR	13025	Identifier	fin		12246	0					
ANR	13026	ExpressionStatement	fails = 0	1080:4:34081:34090	12246	24	True				
ANR	13027	AssignmentExpression	fails = 0		12246	0		=			
ANR	13028	Identifier	fails		12246	0					
ANR	13029	PrimaryExpression	0		12246	1					
ANR	13030	Label	fin :	1081:0:34092:34095	12246	25	True				
ANR	13031	Identifier	fin		12246	0					
ANR	13032	ExpressionStatement	fclose ( fdest )	1082:4:34101:34114	12246	26	True				
ANR	13033	CallExpression	fclose ( fdest )		12246	0					
ANR	13034	Callee	fclose		12246	0					
ANR	13035	Identifier	fclose		12246	0					
ANR	13036	ArgumentList	fdest		12246	1					
ANR	13037	Argument	fdest		12246	0					
ANR	13038	Identifier	fdest		12246	0					
ANR	13039	ReturnStatement	return fails ;	1084:4:34121:34133	12246	27	True				
ANR	13040	Identifier	fails		12246	0					
ANR	13041	ReturnType	int		12246	1					
ANR	13042	Identifier	imagetotga		12246	2					
ANR	13043	ParameterList	"opj_image_t * image , const char * outfile"		12246	3					
ANR	13044	Parameter	opj_image_t * image	955:15:30203:30221	12246	0	True				
ANR	13045	ParameterType	opj_image_t *		12246	0					
ANR	13046	Identifier	image		12246	1					
ANR	13047	Parameter	const char * outfile	955:36:30224:30242	12246	1	True				
ANR	13048	ParameterType	const char *		12246	0					
ANR	13049	Identifier	outfile		12246	1					
ANR	13050	CFGEntryNode	ENTRY		12246		True				
ANR	13051	CFGExitNode	EXIT		12246		True				
ANR	13052	Symbol	& value		12246						
ANR	13053	Symbol	* index		12246						
ANR	13054	Symbol	image -> comps [ i + 1 ] . dy		12246						
ANR	13055	Symbol	image -> comps [ 1 ] . sgnd		12246						
ANR	13056	Symbol	* image -> comps [ 1 ] . data		12246						
ANR	13057	Symbol	image -> comps		12246						
ANR	13058	Symbol	image -> comps [ 2 ] . data		12246						
ANR	13059	Symbol	* alpha_channel		12246						
ANR	13060	Symbol	image -> comps [ 2 ] . prec		12246						
ANR	13061	Symbol	image -> comps [ i + 1 ] . dx		12246						
ANR	13062	Symbol	* * * image		12246						
ANR	13063	Symbol	image -> comps [ 0 ] . h		12246						
ANR	13064	Symbol	* * image -> comps		12246						
ANR	13065	Symbol	OPJ_TRUE		12246						
ANR	13066	Symbol	height		12246						
ANR	13067	Symbol	image		12246						
ANR	13068	Symbol	res		12246						
ANR	13069	Symbol	image -> comps [ 2 ] . sgnd		12246						
ANR	13070	Symbol	alpha_channel		12246						
ANR	13071	Symbol	image -> comps [ 0 ] . w		12246						
ANR	13072	Symbol	index		12246						
ANR	13073	Symbol	stderr		12246						
ANR	13074	Symbol	* image -> comps [ 2 ] . data		12246						
ANR	13075	Symbol	* image		12246						
ANR	13076	Symbol	fdest		12246						
ANR	13077	Symbol	outfile		12246						
ANR	13078	Symbol	scale		12246						
ANR	13079	Symbol	adjustR		12246						
ANR	13080	Symbol	* * image		12246						
ANR	13081	Symbol	image -> comps [ 0 ] . prec		12246						
ANR	13082	Symbol	image -> comps [ 0 ] . data		12246						
ANR	13083	Symbol	tga_writeheader		12246						
ANR	13084	Symbol	* image -> comps [ 0 ] . data		12246						
ANR	13085	Symbol	value		12246						
ANR	13086	Symbol	fails		12246						
ANR	13087	Symbol	a		12246						
ANR	13088	Symbol	fopen		12246						
ANR	13089	Symbol	* image -> comps		12246						
ANR	13090	Symbol	* * alpha_channel		12246						
ANR	13091	Symbol	b		12246						
ANR	13092	Symbol	bpp		12246						
ANR	13093	Symbol	write_alpha		12246						
ANR	13094	Symbol	g		12246						
ANR	13095	Symbol	image -> comps [ alpha_channel ] . data		12246						
ANR	13096	Symbol	i		12246						
ANR	13097	Symbol	image -> comps [ i + 1 ] . sgnd		12246						
ANR	13098	Symbol	fwrite		12246						
ANR	13099	Symbol	image -> comps [ 0 ] . dy		12246						
ANR	13100	Symbol	image -> comps [ 0 ] . dx		12246						
ANR	13101	Symbol	image -> comps [ i + 1 ] . prec		12246						
ANR	13102	Symbol	image -> numcomps		12246						
ANR	13103	Symbol	r		12246						
ANR	13104	Symbol	image -> comps [ 0 ] . sgnd		12246						
ANR	13105	Symbol	* i		12246						
ANR	13106	Symbol	adjustG		12246						
ANR	13107	Symbol	image -> comps [ 1 ] . data		12246						
ANR	13108	Symbol	* image -> comps [ alpha_channel ] . data		12246						
ANR	13109	Symbol	width		12246						
ANR	13110	Symbol	x		12246						
ANR	13111	Symbol	y		12246						
ANR	13112	Symbol	adjustB		12246						
ANR	13113	Symbol	image -> comps [ 1 ] . prec		12246						
ANR	13114	Function	readuchar	1094:0:34205:34458							
ANR	13115	FunctionDef	readuchar (FILE * f)		13114	0					
ANR	13116	CompoundStatement		1095:0:34246:34458	13114	0					
ANR	13117	IdentifierDeclStatement	unsigned char c1 ;	1096:4:34252:34268	13114	0	True				
ANR	13118	IdentifierDecl	c1		13114	0					
ANR	13119	IdentifierDeclType	unsigned char		13114	0					
ANR	13120	Identifier	c1		13114	1					
ANR	13121	IfStatement	"if ( ! fread ( & c1 , 1 , 1 , f ) )"		13114	1					
ANR	13122	Condition	"! fread ( & c1 , 1 , 1 , f )"	1097:8:34278:34297	13114	0	True				
ANR	13123	UnaryOperationExpression	"! fread ( & c1 , 1 , 1 , f )"		13114	0					
ANR	13124	UnaryOperator	!		13114	0					
ANR	13125	CallExpression	"fread ( & c1 , 1 , 1 , f )"		13114	1					
ANR	13126	Callee	fread		13114	0					
ANR	13127	Identifier	fread		13114	0					
ANR	13128	ArgumentList	& c1		13114	1					
ANR	13129	Argument	& c1		13114	0					
ANR	13130	UnaryOperationExpression	& c1		13114	0					
ANR	13131	UnaryOperator	&		13114	0					
ANR	13132	Identifier	c1		13114	1					
ANR	13133	Argument	1		13114	1					
ANR	13134	PrimaryExpression	1		13114	0					
ANR	13135	Argument	1		13114	2					
ANR	13136	PrimaryExpression	1		13114	0					
ANR	13137	Argument	f		13114	3					
ANR	13138	Identifier	f		13114	0					
ANR	13139	CompoundStatement		3:30:53:53	13114	1					
ANR	13140	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1098:8:34310:34417	13114	0	True				
ANR	13141	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13114	0					
ANR	13142	Callee	fprintf		13114	0					
ANR	13143	Identifier	fprintf		13114	0					
ANR	13144	ArgumentList	stderr		13114	1					
ANR	13145	Argument	stderr		13114	0					
ANR	13146	Identifier	stderr		13114	0					
ANR	13147	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13114	1					
ANR	13148	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13114	0					
ANR	13149	ReturnStatement	return 0 ;	1100:8:34427:34435	13114	1	True				
ANR	13150	PrimaryExpression	0		13114	0					
ANR	13151	ReturnStatement	return c1 ;	1102:4:34447:34456	13114	2	True				
ANR	13152	Identifier	c1		13114	0					
ANR	13153	ReturnType	static unsigned char		13114	1					
ANR	13154	Identifier	readuchar		13114	2					
ANR	13155	ParameterList	FILE * f		13114	3					
ANR	13156	Parameter	FILE * f	1094:31:34236:34243	13114	0	True				
ANR	13157	ParameterType	FILE *		13114	0					
ANR	13158	Identifier	f		13114	1					
ANR	13159	CFGEntryNode	ENTRY		13114		True				
ANR	13160	CFGExitNode	EXIT		13114		True				
ANR	13161	Symbol	f		13114						
ANR	13162	Symbol	& c1		13114						
ANR	13163	Symbol	stderr		13114						
ANR	13164	Symbol	c1		13114						
ANR	13165	Symbol	fread		13114						
ANR	13166	Function	readushort	1105:0:34461:35031							
ANR	13167	FunctionDef	"readushort (FILE * f , int bigendian)"		13166	0					
ANR	13168	CompoundStatement		1106:0:34519:35031	13166	0					
ANR	13169	IdentifierDeclStatement	"unsigned char c1 , c2 ;"	1107:4:34525:34545	13166	0	True				
ANR	13170	IdentifierDecl	c1		13166	0					
ANR	13171	IdentifierDeclType	unsigned char		13166	0					
ANR	13172	Identifier	c1		13166	1					
ANR	13173	IdentifierDecl	c2		13166	1					
ANR	13174	IdentifierDeclType	unsigned char		13166	0					
ANR	13175	Identifier	c2		13166	1					
ANR	13176	IfStatement	"if ( ! fread ( & c1 , 1 , 1 , f ) )"		13166	1					
ANR	13177	Condition	"! fread ( & c1 , 1 , 1 , f )"	1108:8:34555:34574	13166	0	True				
ANR	13178	UnaryOperationExpression	"! fread ( & c1 , 1 , 1 , f )"		13166	0					
ANR	13179	UnaryOperator	!		13166	0					
ANR	13180	CallExpression	"fread ( & c1 , 1 , 1 , f )"		13166	1					
ANR	13181	Callee	fread		13166	0					
ANR	13182	Identifier	fread		13166	0					
ANR	13183	ArgumentList	& c1		13166	1					
ANR	13184	Argument	& c1		13166	0					
ANR	13185	UnaryOperationExpression	& c1		13166	0					
ANR	13186	UnaryOperator	&		13166	0					
ANR	13187	Identifier	c1		13166	1					
ANR	13188	Argument	1		13166	1					
ANR	13189	PrimaryExpression	1		13166	0					
ANR	13190	Argument	1		13166	2					
ANR	13191	PrimaryExpression	1		13166	0					
ANR	13192	Argument	f		13166	3					
ANR	13193	Identifier	f		13166	0					
ANR	13194	CompoundStatement		3:30:57:57	13166	1					
ANR	13195	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1109:8:34587:34694	13166	0	True				
ANR	13196	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13166	0					
ANR	13197	Callee	fprintf		13166	0					
ANR	13198	Identifier	fprintf		13166	0					
ANR	13199	ArgumentList	stderr		13166	1					
ANR	13200	Argument	stderr		13166	0					
ANR	13201	Identifier	stderr		13166	0					
ANR	13202	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13166	1					
ANR	13203	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13166	0					
ANR	13204	ReturnStatement	return 0 ;	1111:8:34704:34712	13166	1	True				
ANR	13205	PrimaryExpression	0		13166	0					
ANR	13206	IfStatement	"if ( ! fread ( & c2 , 1 , 1 , f ) )"		13166	2					
ANR	13207	Condition	"! fread ( & c2 , 1 , 1 , f )"	1113:8:34728:34747	13166	0	True				
ANR	13208	UnaryOperationExpression	"! fread ( & c2 , 1 , 1 , f )"		13166	0					
ANR	13209	UnaryOperator	!		13166	0					
ANR	13210	CallExpression	"fread ( & c2 , 1 , 1 , f )"		13166	1					
ANR	13211	Callee	fread		13166	0					
ANR	13212	Identifier	fread		13166	0					
ANR	13213	ArgumentList	& c2		13166	1					
ANR	13214	Argument	& c2		13166	0					
ANR	13215	UnaryOperationExpression	& c2		13166	0					
ANR	13216	UnaryOperator	&		13166	0					
ANR	13217	Identifier	c2		13166	1					
ANR	13218	Argument	1		13166	1					
ANR	13219	PrimaryExpression	1		13166	0					
ANR	13220	Argument	1		13166	2					
ANR	13221	PrimaryExpression	1		13166	0					
ANR	13222	Argument	f		13166	3					
ANR	13223	Identifier	f		13166	0					
ANR	13224	CompoundStatement		8:30:230:230	13166	1					
ANR	13225	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1114:8:34760:34867	13166	0	True				
ANR	13226	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13166	0					
ANR	13227	Callee	fprintf		13166	0					
ANR	13228	Identifier	fprintf		13166	0					
ANR	13229	ArgumentList	stderr		13166	1					
ANR	13230	Argument	stderr		13166	0					
ANR	13231	Identifier	stderr		13166	0					
ANR	13232	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13166	1					
ANR	13233	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13166	0					
ANR	13234	ReturnStatement	return 0 ;	1116:8:34877:34885	13166	1	True				
ANR	13235	PrimaryExpression	0		13166	0					
ANR	13236	IfStatement	if ( bigendian )		13166	3					
ANR	13237	Condition	bigendian	1118:8:34901:34909	13166	0	True				
ANR	13238	Identifier	bigendian		13166	0					
ANR	13239	CompoundStatement		13:19:392:392	13166	1					
ANR	13240	ReturnStatement	return ( unsigned short ) ( ( c1 << 8 ) + c2 ) ;	1119:8:34922:34961	13166	0	True				
ANR	13241	CastExpression	( unsigned short ) ( ( c1 << 8 ) + c2 )		13166	0					
ANR	13242	CastTarget	unsigned short		13166	0					
ANR	13243	AdditiveExpression	( c1 << 8 ) + c2		13166	1		+			
ANR	13244	ShiftExpression	c1 << 8		13166	0		<<			
ANR	13245	Identifier	c1		13166	0					
ANR	13246	PrimaryExpression	8		13166	1					
ANR	13247	Identifier	c2		13166	1					
ANR	13248	ElseStatement	else		13166	0					
ANR	13249	CompoundStatement		15:11:454:454	13166	0					
ANR	13250	ReturnStatement	return ( unsigned short ) ( ( c2 << 8 ) + c1 ) ;	1121:8:34984:35023	13166	0	True				
ANR	13251	CastExpression	( unsigned short ) ( ( c2 << 8 ) + c1 )		13166	0					
ANR	13252	CastTarget	unsigned short		13166	0					
ANR	13253	AdditiveExpression	( c2 << 8 ) + c1		13166	1		+			
ANR	13254	ShiftExpression	c2 << 8		13166	0		<<			
ANR	13255	Identifier	c2		13166	0					
ANR	13256	PrimaryExpression	8		13166	1					
ANR	13257	Identifier	c1		13166	1					
ANR	13258	ReturnType	static unsigned short		13166	1					
ANR	13259	Identifier	readushort		13166	2					
ANR	13260	ParameterList	"FILE * f , int bigendian"		13166	3					
ANR	13261	Parameter	FILE * f	1105:33:34494:34501	13166	0	True				
ANR	13262	ParameterType	FILE *		13166	0					
ANR	13263	Identifier	f		13166	1					
ANR	13264	Parameter	int bigendian	1105:43:34504:34516	13166	1	True				
ANR	13265	ParameterType	int		13166	0					
ANR	13266	Identifier	bigendian		13166	1					
ANR	13267	CFGEntryNode	ENTRY		13166		True				
ANR	13268	CFGExitNode	EXIT		13166		True				
ANR	13269	Symbol	f		13166						
ANR	13270	Symbol	& c2		13166						
ANR	13271	Symbol	& c1		13166						
ANR	13272	Symbol	stderr		13166						
ANR	13273	Symbol	bigendian		13166						
ANR	13274	Symbol	c1		13166						
ANR	13275	Symbol	fread		13166						
ANR	13276	Symbol	c2		13166						
ANR	13277	Function	readuint	1125:0:35034:36094							
ANR	13278	FunctionDef	"readuint (FILE * f , int bigendian)"		13277	0					
ANR	13279	CompoundStatement		1126:0:35088:36094	13277	0					
ANR	13280	IdentifierDeclStatement	"unsigned char c1 , c2 , c3 , c4 ;"	1127:4:35094:35122	13277	0	True				
ANR	13281	IdentifierDecl	c1		13277	0					
ANR	13282	IdentifierDeclType	unsigned char		13277	0					
ANR	13283	Identifier	c1		13277	1					
ANR	13284	IdentifierDecl	c2		13277	1					
ANR	13285	IdentifierDeclType	unsigned char		13277	0					
ANR	13286	Identifier	c2		13277	1					
ANR	13287	IdentifierDecl	c3		13277	2					
ANR	13288	IdentifierDeclType	unsigned char		13277	0					
ANR	13289	Identifier	c3		13277	1					
ANR	13290	IdentifierDecl	c4		13277	3					
ANR	13291	IdentifierDeclType	unsigned char		13277	0					
ANR	13292	Identifier	c4		13277	1					
ANR	13293	IfStatement	"if ( ! fread ( & c1 , 1 , 1 , f ) )"		13277	1					
ANR	13294	Condition	"! fread ( & c1 , 1 , 1 , f )"	1128:8:35132:35151	13277	0	True				
ANR	13295	UnaryOperationExpression	"! fread ( & c1 , 1 , 1 , f )"		13277	0					
ANR	13296	UnaryOperator	!		13277	0					
ANR	13297	CallExpression	"fread ( & c1 , 1 , 1 , f )"		13277	1					
ANR	13298	Callee	fread		13277	0					
ANR	13299	Identifier	fread		13277	0					
ANR	13300	ArgumentList	& c1		13277	1					
ANR	13301	Argument	& c1		13277	0					
ANR	13302	UnaryOperationExpression	& c1		13277	0					
ANR	13303	UnaryOperator	&		13277	0					
ANR	13304	Identifier	c1		13277	1					
ANR	13305	Argument	1		13277	1					
ANR	13306	PrimaryExpression	1		13277	0					
ANR	13307	Argument	1		13277	2					
ANR	13308	PrimaryExpression	1		13277	0					
ANR	13309	Argument	f		13277	3					
ANR	13310	Identifier	f		13277	0					
ANR	13311	CompoundStatement		3:30:65:65	13277	1					
ANR	13312	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1129:8:35164:35271	13277	0	True				
ANR	13313	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13277	0					
ANR	13314	Callee	fprintf		13277	0					
ANR	13315	Identifier	fprintf		13277	0					
ANR	13316	ArgumentList	stderr		13277	1					
ANR	13317	Argument	stderr		13277	0					
ANR	13318	Identifier	stderr		13277	0					
ANR	13319	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	1					
ANR	13320	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	0					
ANR	13321	ReturnStatement	return 0 ;	1131:8:35281:35289	13277	1	True				
ANR	13322	PrimaryExpression	0		13277	0					
ANR	13323	IfStatement	"if ( ! fread ( & c2 , 1 , 1 , f ) )"		13277	2					
ANR	13324	Condition	"! fread ( & c2 , 1 , 1 , f )"	1133:8:35305:35324	13277	0	True				
ANR	13325	UnaryOperationExpression	"! fread ( & c2 , 1 , 1 , f )"		13277	0					
ANR	13326	UnaryOperator	!		13277	0					
ANR	13327	CallExpression	"fread ( & c2 , 1 , 1 , f )"		13277	1					
ANR	13328	Callee	fread		13277	0					
ANR	13329	Identifier	fread		13277	0					
ANR	13330	ArgumentList	& c2		13277	1					
ANR	13331	Argument	& c2		13277	0					
ANR	13332	UnaryOperationExpression	& c2		13277	0					
ANR	13333	UnaryOperator	&		13277	0					
ANR	13334	Identifier	c2		13277	1					
ANR	13335	Argument	1		13277	1					
ANR	13336	PrimaryExpression	1		13277	0					
ANR	13337	Argument	1		13277	2					
ANR	13338	PrimaryExpression	1		13277	0					
ANR	13339	Argument	f		13277	3					
ANR	13340	Identifier	f		13277	0					
ANR	13341	CompoundStatement		8:30:238:238	13277	1					
ANR	13342	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1134:8:35337:35444	13277	0	True				
ANR	13343	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13277	0					
ANR	13344	Callee	fprintf		13277	0					
ANR	13345	Identifier	fprintf		13277	0					
ANR	13346	ArgumentList	stderr		13277	1					
ANR	13347	Argument	stderr		13277	0					
ANR	13348	Identifier	stderr		13277	0					
ANR	13349	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	1					
ANR	13350	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	0					
ANR	13351	ReturnStatement	return 0 ;	1136:8:35454:35462	13277	1	True				
ANR	13352	PrimaryExpression	0		13277	0					
ANR	13353	IfStatement	"if ( ! fread ( & c3 , 1 , 1 , f ) )"		13277	3					
ANR	13354	Condition	"! fread ( & c3 , 1 , 1 , f )"	1138:8:35478:35497	13277	0	True				
ANR	13355	UnaryOperationExpression	"! fread ( & c3 , 1 , 1 , f )"		13277	0					
ANR	13356	UnaryOperator	!		13277	0					
ANR	13357	CallExpression	"fread ( & c3 , 1 , 1 , f )"		13277	1					
ANR	13358	Callee	fread		13277	0					
ANR	13359	Identifier	fread		13277	0					
ANR	13360	ArgumentList	& c3		13277	1					
ANR	13361	Argument	& c3		13277	0					
ANR	13362	UnaryOperationExpression	& c3		13277	0					
ANR	13363	UnaryOperator	&		13277	0					
ANR	13364	Identifier	c3		13277	1					
ANR	13365	Argument	1		13277	1					
ANR	13366	PrimaryExpression	1		13277	0					
ANR	13367	Argument	1		13277	2					
ANR	13368	PrimaryExpression	1		13277	0					
ANR	13369	Argument	f		13277	3					
ANR	13370	Identifier	f		13277	0					
ANR	13371	CompoundStatement		13:30:411:411	13277	1					
ANR	13372	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1139:8:35510:35617	13277	0	True				
ANR	13373	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13277	0					
ANR	13374	Callee	fprintf		13277	0					
ANR	13375	Identifier	fprintf		13277	0					
ANR	13376	ArgumentList	stderr		13277	1					
ANR	13377	Argument	stderr		13277	0					
ANR	13378	Identifier	stderr		13277	0					
ANR	13379	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	1					
ANR	13380	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	0					
ANR	13381	ReturnStatement	return 0 ;	1141:8:35627:35635	13277	1	True				
ANR	13382	PrimaryExpression	0		13277	0					
ANR	13383	IfStatement	"if ( ! fread ( & c4 , 1 , 1 , f ) )"		13277	4					
ANR	13384	Condition	"! fread ( & c4 , 1 , 1 , f )"	1143:8:35651:35670	13277	0	True				
ANR	13385	UnaryOperationExpression	"! fread ( & c4 , 1 , 1 , f )"		13277	0					
ANR	13386	UnaryOperator	!		13277	0					
ANR	13387	CallExpression	"fread ( & c4 , 1 , 1 , f )"		13277	1					
ANR	13388	Callee	fread		13277	0					
ANR	13389	Identifier	fread		13277	0					
ANR	13390	ArgumentList	& c4		13277	1					
ANR	13391	Argument	& c4		13277	0					
ANR	13392	UnaryOperationExpression	& c4		13277	0					
ANR	13393	UnaryOperator	&		13277	0					
ANR	13394	Identifier	c4		13277	1					
ANR	13395	Argument	1		13277	1					
ANR	13396	PrimaryExpression	1		13277	0					
ANR	13397	Argument	1		13277	2					
ANR	13398	PrimaryExpression	1		13277	0					
ANR	13399	Argument	f		13277	3					
ANR	13400	Identifier	f		13277	0					
ANR	13401	CompoundStatement		18:30:584:584	13277	1					
ANR	13402	ExpressionStatement	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"	1144:8:35683:35790	13277	0	True				
ANR	13403	CallExpression	"fprintf ( stderr , ""\\nError: fread return a number of element different from the expected.\\n"" )"		13277	0					
ANR	13404	Callee	fprintf		13277	0					
ANR	13405	Identifier	fprintf		13277	0					
ANR	13406	ArgumentList	stderr		13277	1					
ANR	13407	Argument	stderr		13277	0					
ANR	13408	Identifier	stderr		13277	0					
ANR	13409	Argument	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	1					
ANR	13410	PrimaryExpression	"""\\nError: fread return a number of element different from the expected.\\n"""		13277	0					
ANR	13411	ReturnStatement	return 0 ;	1146:8:35800:35808	13277	1	True				
ANR	13412	PrimaryExpression	0		13277	0					
ANR	13413	IfStatement	if ( bigendian )		13277	5					
ANR	13414	Condition	bigendian	1148:8:35824:35832	13277	0	True				
ANR	13415	Identifier	bigendian		13277	0					
ANR	13416	CompoundStatement		23:19:746:746	13277	1					
ANR	13417	ReturnStatement	return ( unsigned int ) ( c1 << 24 ) + ( unsigned int ) ( c2 << 16 ) + ( unsigned int ) ( c3 << 8 ) + c4 ;	1149:8:35845:35954	13277	0	True				
ANR	13418	AdditiveExpression	( unsigned int ) ( c1 << 24 ) + ( unsigned int ) ( c2 << 16 ) + ( unsigned int ) ( c3 << 8 ) + c4		13277	0		+			
ANR	13419	CastExpression	( unsigned int ) ( c1 << 24 )		13277	0					
ANR	13420	CastTarget	unsigned int		13277	0					
ANR	13421	ShiftExpression	c1 << 24		13277	1		<<			
ANR	13422	Identifier	c1		13277	0					
ANR	13423	PrimaryExpression	24		13277	1					
ANR	13424	AdditiveExpression	( unsigned int ) ( c2 << 16 ) + ( unsigned int ) ( c3 << 8 ) + c4		13277	1		+			
ANR	13425	CastExpression	( unsigned int ) ( c2 << 16 )		13277	0					
ANR	13426	CastTarget	unsigned int		13277	0					
ANR	13427	ShiftExpression	c2 << 16		13277	1		<<			
ANR	13428	Identifier	c2		13277	0					
ANR	13429	PrimaryExpression	16		13277	1					
ANR	13430	AdditiveExpression	( unsigned int ) ( c3 << 8 ) + c4		13277	1		+			
ANR	13431	CastExpression	( unsigned int ) ( c3 << 8 )		13277	0					
ANR	13432	CastTarget	unsigned int		13277	0					
ANR	13433	ShiftExpression	c3 << 8		13277	1		<<			
ANR	13434	Identifier	c3		13277	0					
ANR	13435	PrimaryExpression	8		13277	1					
ANR	13436	Identifier	c4		13277	1					
ANR	13437	ElseStatement	else		13277	0					
ANR	13438	CompoundStatement		26:11:878:878	13277	0					
ANR	13439	ReturnStatement	return ( unsigned int ) ( c4 << 24 ) + ( unsigned int ) ( c3 << 16 ) + ( unsigned int ) ( c2 << 8 ) + c1 ;	1152:8:35977:36086	13277	0	True				
ANR	13440	AdditiveExpression	( unsigned int ) ( c4 << 24 ) + ( unsigned int ) ( c3 << 16 ) + ( unsigned int ) ( c2 << 8 ) + c1		13277	0		+			
ANR	13441	CastExpression	( unsigned int ) ( c4 << 24 )		13277	0					
ANR	13442	CastTarget	unsigned int		13277	0					
ANR	13443	ShiftExpression	c4 << 24		13277	1		<<			
ANR	13444	Identifier	c4		13277	0					
ANR	13445	PrimaryExpression	24		13277	1					
ANR	13446	AdditiveExpression	( unsigned int ) ( c3 << 16 ) + ( unsigned int ) ( c2 << 8 ) + c1		13277	1		+			
ANR	13447	CastExpression	( unsigned int ) ( c3 << 16 )		13277	0					
ANR	13448	CastTarget	unsigned int		13277	0					
ANR	13449	ShiftExpression	c3 << 16		13277	1		<<			
ANR	13450	Identifier	c3		13277	0					
ANR	13451	PrimaryExpression	16		13277	1					
ANR	13452	AdditiveExpression	( unsigned int ) ( c2 << 8 ) + c1		13277	1		+			
ANR	13453	CastExpression	( unsigned int ) ( c2 << 8 )		13277	0					
ANR	13454	CastTarget	unsigned int		13277	0					
ANR	13455	ShiftExpression	c2 << 8		13277	1		<<			
ANR	13456	Identifier	c2		13277	0					
ANR	13457	PrimaryExpression	8		13277	1					
ANR	13458	Identifier	c1		13277	1					
ANR	13459	ReturnType	static unsigned int		13277	1					
ANR	13460	Identifier	readuint		13277	2					
ANR	13461	ParameterList	"FILE * f , int bigendian"		13277	3					
ANR	13462	Parameter	FILE * f	1125:29:35063:35070	13277	0	True				
ANR	13463	ParameterType	FILE *		13277	0					
ANR	13464	Identifier	f		13277	1					
ANR	13465	Parameter	int bigendian	1125:39:35073:35085	13277	1	True				
ANR	13466	ParameterType	int		13277	0					
ANR	13467	Identifier	bigendian		13277	1					
ANR	13468	CFGEntryNode	ENTRY		13277		True				
ANR	13469	CFGExitNode	EXIT		13277		True				
ANR	13470	Symbol	c3		13277						
ANR	13471	Symbol	c4		13277						
ANR	13472	Symbol	f		13277						
ANR	13473	Symbol	& c2		13277						
ANR	13474	Symbol	& c1		13277						
ANR	13475	Symbol	& c4		13277						
ANR	13476	Symbol	& c3		13277						
ANR	13477	Symbol	stderr		13277						
ANR	13478	Symbol	bigendian		13277						
ANR	13479	Symbol	c1		13277						
ANR	13480	Symbol	fread		13277						
ANR	13481	Symbol	c2		13277						
ANR	13482	Function	pgxtoimage	1157:0:36097:40976							
ANR	13483	FunctionDef	"pgxtoimage (const char * filename , opj_cparameters_t * parameters)"		13482	0					
ANR	13484	CompoundStatement		1158:0:36174:40976	13482	0					
ANR	13485	IdentifierDeclStatement	FILE * f = NULL ;	1159:4:36180:36194	13482	0	True				
ANR	13486	IdentifierDecl	* f = NULL		13482	0					
ANR	13487	IdentifierDeclType	FILE *		13482	0					
ANR	13488	Identifier	f		13482	1					
ANR	13489	AssignmentExpression	* f = NULL		13482	2		=			
ANR	13490	Identifier	NULL		13482	0					
ANR	13491	Identifier	NULL		13482	1					
ANR	13492	IdentifierDeclStatement	"int w , h , prec ;"	1160:4:36200:36214	13482	1	True				
ANR	13493	IdentifierDecl	w		13482	0					
ANR	13494	IdentifierDeclType	int		13482	0					
ANR	13495	Identifier	w		13482	1					
ANR	13496	IdentifierDecl	h		13482	1					
ANR	13497	IdentifierDeclType	int		13482	0					
ANR	13498	Identifier	h		13482	1					
ANR	13499	IdentifierDecl	prec		13482	2					
ANR	13500	IdentifierDeclType	int		13482	0					
ANR	13501	Identifier	prec		13482	1					
ANR	13502	IdentifierDeclStatement	"int i , numcomps , max ;"	1161:4:36220:36240	13482	2	True				
ANR	13503	IdentifierDecl	i		13482	0					
ANR	13504	IdentifierDeclType	int		13482	0					
ANR	13505	Identifier	i		13482	1					
ANR	13506	IdentifierDecl	numcomps		13482	1					
ANR	13507	IdentifierDeclType	int		13482	0					
ANR	13508	Identifier	numcomps		13482	1					
ANR	13509	IdentifierDecl	max		13482	2					
ANR	13510	IdentifierDeclType	int		13482	0					
ANR	13511	Identifier	max		13482	1					
ANR	13512	IdentifierDeclStatement	OPJ_COLOR_SPACE color_space ;	1162:4:36246:36273	13482	3	True				
ANR	13513	IdentifierDecl	color_space		13482	0					
ANR	13514	IdentifierDeclType	OPJ_COLOR_SPACE		13482	0					
ANR	13515	Identifier	color_space		13482	1					
ANR	13516	IdentifierDeclStatement	opj_image_cmptparm_t cmptparm ;	1163:4:36279:36308	13482	4	True				
ANR	13517	IdentifierDecl	cmptparm		13482	0					
ANR	13518	IdentifierDeclType	opj_image_cmptparm_t		13482	0					
ANR	13519	Identifier	cmptparm		13482	1					
ANR	13520	IdentifierDeclStatement	opj_image_t * image = NULL ;	1164:4:36345:36371	13482	5	True				
ANR	13521	IdentifierDecl	* image = NULL		13482	0					
ANR	13522	IdentifierDeclType	opj_image_t *		13482	0					
ANR	13523	Identifier	image		13482	1					
ANR	13524	AssignmentExpression	* image = NULL		13482	2		=			
ANR	13525	Identifier	NULL		13482	0					
ANR	13526	Identifier	NULL		13482	1					
ANR	13527	IdentifierDeclStatement	"int adjustS , ushift , dshift , force8 ;"	1165:4:36377:36412	13482	6	True				
ANR	13528	IdentifierDecl	adjustS		13482	0					
ANR	13529	IdentifierDeclType	int		13482	0					
ANR	13530	Identifier	adjustS		13482	1					
ANR	13531	IdentifierDecl	ushift		13482	1					
ANR	13532	IdentifierDeclType	int		13482	0					
ANR	13533	Identifier	ushift		13482	1					
ANR	13534	IdentifierDecl	dshift		13482	2					
ANR	13535	IdentifierDeclType	int		13482	0					
ANR	13536	Identifier	dshift		13482	1					
ANR	13537	IdentifierDecl	force8		13482	3					
ANR	13538	IdentifierDeclType	int		13482	0					
ANR	13539	Identifier	force8		13482	1					
ANR	13540	IdentifierDeclStatement	OPJ_UINT64 expected_file_size ;	1166:4:36418:36447	13482	7	True				
ANR	13541	IdentifierDecl	expected_file_size		13482	0					
ANR	13542	IdentifierDeclType	OPJ_UINT64		13482	0					
ANR	13543	Identifier	expected_file_size		13482	1					
ANR	13544	IdentifierDeclStatement	"char endian1 , endian2 , sign ;"	1168:4:36454:36481	13482	8	True				
ANR	13545	IdentifierDecl	endian1		13482	0					
ANR	13546	IdentifierDeclType	char		13482	0					
ANR	13547	Identifier	endian1		13482	1					
ANR	13548	IdentifierDecl	endian2		13482	1					
ANR	13549	IdentifierDeclType	char		13482	0					
ANR	13550	Identifier	endian2		13482	1					
ANR	13551	IdentifierDecl	sign		13482	2					
ANR	13552	IdentifierDeclType	char		13482	0					
ANR	13553	Identifier	sign		13482	1					
ANR	13554	IdentifierDeclStatement	char signtmp [ 32 ] ;	1169:4:36487:36503	13482	9	True				
ANR	13555	IdentifierDecl	signtmp [ 32 ]		13482	0					
ANR	13556	IdentifierDeclType	char [ 32 ]		13482	0					
ANR	13557	Identifier	signtmp		13482	1					
ANR	13558	PrimaryExpression	32		13482	2					
ANR	13559	IdentifierDeclStatement	char temp [ 32 ] ;	1171:4:36510:36523	13482	10	True				
ANR	13560	IdentifierDecl	temp [ 32 ]		13482	0					
ANR	13561	IdentifierDeclType	char [ 32 ]		13482	0					
ANR	13562	Identifier	temp		13482	1					
ANR	13563	PrimaryExpression	32		13482	2					
ANR	13564	IdentifierDeclStatement	int bigendian ;	1172:4:36529:36542	13482	11	True				
ANR	13565	IdentifierDecl	bigendian		13482	0					
ANR	13566	IdentifierDeclType	int		13482	0					
ANR	13567	Identifier	bigendian		13482	1					
ANR	13568	IdentifierDeclStatement	opj_image_comp_t * comp = NULL ;	1173:4:36548:36577	13482	12	True				
ANR	13569	IdentifierDecl	* comp = NULL		13482	0					
ANR	13570	IdentifierDeclType	opj_image_comp_t *		13482	0					
ANR	13571	Identifier	comp		13482	1					
ANR	13572	AssignmentExpression	* comp = NULL		13482	2		=			
ANR	13573	Identifier	NULL		13482	0					
ANR	13574	Identifier	NULL		13482	1					
ANR	13575	ExpressionStatement	numcomps = 1	1175:4:36584:36596	13482	13	True				
ANR	13576	AssignmentExpression	numcomps = 1		13482	0		=			
ANR	13577	Identifier	numcomps		13482	0					
ANR	13578	PrimaryExpression	1		13482	1					
ANR	13579	ExpressionStatement	color_space = OPJ_CLRSPC_GRAY	1176:4:36602:36631	13482	14	True				
ANR	13580	AssignmentExpression	color_space = OPJ_CLRSPC_GRAY		13482	0		=			
ANR	13581	Identifier	color_space		13482	0					
ANR	13582	Identifier	OPJ_CLRSPC_GRAY		13482	1					
ANR	13583	ExpressionStatement	"memset ( & cmptparm , 0 , sizeof ( opj_image_cmptparm_t ) )"	1178:4:36638:36688	13482	15	True				
ANR	13584	CallExpression	"memset ( & cmptparm , 0 , sizeof ( opj_image_cmptparm_t ) )"		13482	0					
ANR	13585	Callee	memset		13482	0					
ANR	13586	Identifier	memset		13482	0					
ANR	13587	ArgumentList	& cmptparm		13482	1					
ANR	13588	Argument	& cmptparm		13482	0					
ANR	13589	UnaryOperationExpression	& cmptparm		13482	0					
ANR	13590	UnaryOperator	&		13482	0					
ANR	13591	Identifier	cmptparm		13482	1					
ANR	13592	Argument	0		13482	1					
ANR	13593	PrimaryExpression	0		13482	0					
ANR	13594	Argument	sizeof ( opj_image_cmptparm_t )		13482	2					
ANR	13595	SizeofExpression	sizeof ( opj_image_cmptparm_t )		13482	0					
ANR	13596	Sizeof	sizeof		13482	0					
ANR	13597	SizeofOperand	opj_image_cmptparm_t		13482	1					
ANR	13598	ExpressionStatement	max = 0	1180:4:36695:36702	13482	16	True				
ANR	13599	AssignmentExpression	max = 0		13482	0		=			
ANR	13600	Identifier	max		13482	0					
ANR	13601	PrimaryExpression	0		13482	1					
ANR	13602	ExpressionStatement	"f = fopen ( filename , ""rb"" )"	1182:4:36709:36734	13482	17	True				
ANR	13603	AssignmentExpression	"f = fopen ( filename , ""rb"" )"		13482	0		=			
ANR	13604	Identifier	f		13482	0					
ANR	13605	CallExpression	"fopen ( filename , ""rb"" )"		13482	1					
ANR	13606	Callee	fopen		13482	0					
ANR	13607	Identifier	fopen		13482	0					
ANR	13608	ArgumentList	filename		13482	1					
ANR	13609	Argument	filename		13482	0					
ANR	13610	Identifier	filename		13482	0					
ANR	13611	Argument	"""rb"""		13482	1					
ANR	13612	PrimaryExpression	"""rb"""		13482	0					
ANR	13613	IfStatement	if ( ! f )		13482	18					
ANR	13614	Condition	! f	1183:8:36744:36745	13482	0	True				
ANR	13615	UnaryOperationExpression	! f		13482	0					
ANR	13616	UnaryOperator	!		13482	0					
ANR	13617	Identifier	f		13482	1					
ANR	13618	CompoundStatement		26:12:573:573	13482	1					
ANR	13619	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s for reading !\\n"" , filename )"	1184:8:36758:36820	13482	0	True				
ANR	13620	CallExpression	"fprintf ( stderr , ""Failed to open %s for reading !\\n"" , filename )"		13482	0					
ANR	13621	Callee	fprintf		13482	0					
ANR	13622	Identifier	fprintf		13482	0					
ANR	13623	ArgumentList	stderr		13482	1					
ANR	13624	Argument	stderr		13482	0					
ANR	13625	Identifier	stderr		13482	0					
ANR	13626	Argument	"""Failed to open %s for reading !\\n"""		13482	1					
ANR	13627	PrimaryExpression	"""Failed to open %s for reading !\\n"""		13482	0					
ANR	13628	Argument	filename		13482	2					
ANR	13629	Identifier	filename		13482	0					
ANR	13630	ReturnStatement	return NULL ;	1185:8:36830:36841	13482	1	True				
ANR	13631	Identifier	NULL		13482	0					
ANR	13632	ExpressionStatement	"fseek ( f , 0 , SEEK_SET )"	1188:4:36854:36875	13482	19	True				
ANR	13633	CallExpression	"fseek ( f , 0 , SEEK_SET )"		13482	0					
ANR	13634	Callee	fseek		13482	0					
ANR	13635	Identifier	fseek		13482	0					
ANR	13636	ArgumentList	f		13482	1					
ANR	13637	Argument	f		13482	0					
ANR	13638	Identifier	f		13482	0					
ANR	13639	Argument	0		13482	1					
ANR	13640	PrimaryExpression	0		13482	0					
ANR	13641	Argument	SEEK_SET		13482	2					
ANR	13642	Identifier	SEEK_SET		13482	0					
ANR	13643	IfStatement	"if ( fscanf ( f , ""PG%31[ \\t]%c%c%31[ \\t+-]%d%31[ \\t]%d%31[ \\t]%d"" , temp , & endian1 , & endian2 , signtmp , & prec , temp , & w , temp , & h ) != 9 )"		13482	20					
ANR	13644	Condition	"fscanf ( f , ""PG%31[ \\t]%c%c%31[ \\t+-]%d%31[ \\t]%d%31[ \\t]%d"" , temp , & endian1 , & endian2 , signtmp , & prec , temp , & w , temp , & h ) != 9"	1189:8:36885:37025	13482	0	True				
ANR	13645	EqualityExpression	"fscanf ( f , ""PG%31[ \\t]%c%c%31[ \\t+-]%d%31[ \\t]%d%31[ \\t]%d"" , temp , & endian1 , & endian2 , signtmp , & prec , temp , & w , temp , & h ) != 9"		13482	0		!=			
ANR	13646	CallExpression	"fscanf ( f , ""PG%31[ \\t]%c%c%31[ \\t+-]%d%31[ \\t]%d%31[ \\t]%d"" , temp , & endian1 , & endian2 , signtmp , & prec , temp , & w , temp , & h )"		13482	0					
ANR	13647	Callee	fscanf		13482	0					
ANR	13648	Identifier	fscanf		13482	0					
ANR	13649	ArgumentList	f		13482	1					
ANR	13650	Argument	f		13482	0					
ANR	13651	Identifier	f		13482	0					
ANR	13652	Argument	"""PG%31[ \\t]%c%c%31[ \\t+-]%d%31[ \\t]%d%31[ \\t]%d"""		13482	1					
ANR	13653	PrimaryExpression	"""PG%31[ \\t]%c%c%31[ \\t+-]%d%31[ \\t]%d%31[ \\t]%d"""		13482	0					
ANR	13654	Argument	temp		13482	2					
ANR	13655	Identifier	temp		13482	0					
ANR	13656	Argument	& endian1		13482	3					
ANR	13657	UnaryOperationExpression	& endian1		13482	0					
ANR	13658	UnaryOperator	&		13482	0					
ANR	13659	Identifier	endian1		13482	1					
ANR	13660	Argument	& endian2		13482	4					
ANR	13661	UnaryOperationExpression	& endian2		13482	0					
ANR	13662	UnaryOperator	&		13482	0					
ANR	13663	Identifier	endian2		13482	1					
ANR	13664	Argument	signtmp		13482	5					
ANR	13665	Identifier	signtmp		13482	0					
ANR	13666	Argument	& prec		13482	6					
ANR	13667	UnaryOperationExpression	& prec		13482	0					
ANR	13668	UnaryOperator	&		13482	0					
ANR	13669	Identifier	prec		13482	1					
ANR	13670	Argument	temp		13482	7					
ANR	13671	Identifier	temp		13482	0					
ANR	13672	Argument	& w		13482	8					
ANR	13673	UnaryOperationExpression	& w		13482	0					
ANR	13674	UnaryOperator	&		13482	0					
ANR	13675	Identifier	w		13482	1					
ANR	13676	Argument	temp		13482	9					
ANR	13677	Identifier	temp		13482	0					
ANR	13678	Argument	& h		13482	10					
ANR	13679	UnaryOperationExpression	& h		13482	0					
ANR	13680	UnaryOperator	&		13482	0					
ANR	13681	Identifier	h		13482	1					
ANR	13682	PrimaryExpression	9		13482	1					
ANR	13683	CompoundStatement		33:67:853:853	13482	1					
ANR	13684	ExpressionStatement	fclose ( f )	1191:8:37038:37047	13482	0	True				
ANR	13685	CallExpression	fclose ( f )		13482	0					
ANR	13686	Callee	fclose		13482	0					
ANR	13687	Identifier	fclose		13482	0					
ANR	13688	ArgumentList	f		13482	1					
ANR	13689	Argument	f		13482	0					
ANR	13690	Identifier	f		13482	0					
ANR	13691	ExpressionStatement	"fprintf ( stderr , ""ERROR: Failed to read the right number of element from the fscanf() function!\\n"" )"	1192:8:37057:37171	13482	1	True				
ANR	13692	CallExpression	"fprintf ( stderr , ""ERROR: Failed to read the right number of element from the fscanf() function!\\n"" )"		13482	0					
ANR	13693	Callee	fprintf		13482	0					
ANR	13694	Identifier	fprintf		13482	0					
ANR	13695	ArgumentList	stderr		13482	1					
ANR	13696	Argument	stderr		13482	0					
ANR	13697	Identifier	stderr		13482	0					
ANR	13698	Argument	"""ERROR: Failed to read the right number of element from the fscanf() function!\\n"""		13482	1					
ANR	13699	PrimaryExpression	"""ERROR: Failed to read the right number of element from the fscanf() function!\\n"""		13482	0					
ANR	13700	ReturnStatement	return NULL ;	1194:8:37181:37192	13482	2	True				
ANR	13701	Identifier	NULL		13482	0					
ANR	13702	ExpressionStatement	i = 0	1197:4:37205:37210	13482	21	True				
ANR	13703	AssignmentExpression	i = 0		13482	0		=			
ANR	13704	Identifier	i		13482	0					
ANR	13705	PrimaryExpression	0		13482	1					
ANR	13706	ExpressionStatement	sign = '+'	1198:4:37216:37226	13482	22	True				
ANR	13707	AssignmentExpression	sign = '+'		13482	0		=			
ANR	13708	Identifier	sign		13482	0					
ANR	13709	PrimaryExpression	'+'		13482	1					
ANR	13710	WhileStatement	while ( signtmp [ i ] != '\\0' )		13482	23					
ANR	13711	Condition	signtmp [ i ] != '\\0'	1199:11:37239:37256	13482	0	True				
ANR	13712	EqualityExpression	signtmp [ i ] != '\\0'		13482	0		!=			
ANR	13713	ArrayIndexing	signtmp [ i ]		13482	0					
ANR	13714	Identifier	signtmp		13482	0					
ANR	13715	Identifier	i		13482	1					
ANR	13716	PrimaryExpression	'\\0'		13482	1					
ANR	13717	CompoundStatement		42:31:1084:1084	13482	1					
ANR	13718	IfStatement	if ( signtmp [ i ] == '-' )		13482	0					
ANR	13719	Condition	signtmp [ i ] == '-'	1200:12:37273:37289	13482	0	True				
ANR	13720	EqualityExpression	signtmp [ i ] == '-'		13482	0		==			
ANR	13721	ArrayIndexing	signtmp [ i ]		13482	0					
ANR	13722	Identifier	signtmp		13482	0					
ANR	13723	Identifier	i		13482	1					
ANR	13724	PrimaryExpression	'-'		13482	1					
ANR	13725	CompoundStatement		43:31:1117:1117	13482	1					
ANR	13726	ExpressionStatement	sign = '-'	1201:12:37306:37316	13482	0	True				
ANR	13727	AssignmentExpression	sign = '-'		13482	0		=			
ANR	13728	Identifier	sign		13482	0					
ANR	13729	PrimaryExpression	'-'		13482	1					
ANR	13730	ExpressionStatement	i ++	1203:8:37336:37339	13482	1	True				
ANR	13731	PostIncDecOperationExpression	i ++		13482	0					
ANR	13732	Identifier	i		13482	0					
ANR	13733	IncDec	++		13482	1					
ANR	13734	ExpressionStatement	fgetc ( f )	1206:4:37352:37360	13482	24	True				
ANR	13735	CallExpression	fgetc ( f )		13482	0					
ANR	13736	Callee	fgetc		13482	0					
ANR	13737	Identifier	fgetc		13482	0					
ANR	13738	ArgumentList	f		13482	1					
ANR	13739	Argument	f		13482	0					
ANR	13740	Identifier	f		13482	0					
ANR	13741	IfStatement	if ( endian1 == 'M' && endian2 == 'L' )		13482	25					
ANR	13742	Condition	endian1 == 'M' && endian2 == 'L'	1207:8:37370:37401	13482	0	True				
ANR	13743	AndExpression	endian1 == 'M' && endian2 == 'L'		13482	0		&&			
ANR	13744	EqualityExpression	endian1 == 'M'		13482	0		==			
ANR	13745	Identifier	endian1		13482	0					
ANR	13746	PrimaryExpression	'M'		13482	1					
ANR	13747	EqualityExpression	endian2 == 'L'		13482	1		==			
ANR	13748	Identifier	endian2		13482	0					
ANR	13749	PrimaryExpression	'L'		13482	1					
ANR	13750	CompoundStatement		50:42:1229:1229	13482	1					
ANR	13751	ExpressionStatement	bigendian = 1	1208:8:37414:37427	13482	0	True				
ANR	13752	AssignmentExpression	bigendian = 1		13482	0		=			
ANR	13753	Identifier	bigendian		13482	0					
ANR	13754	PrimaryExpression	1		13482	1					
ANR	13755	ElseStatement	else		13482	0					
ANR	13756	IfStatement	if ( endian2 == 'M' && endian1 == 'L' )		13482	0					
ANR	13757	Condition	endian2 == 'M' && endian1 == 'L'	1209:15:37444:37475	13482	0	True				
ANR	13758	AndExpression	endian2 == 'M' && endian1 == 'L'		13482	0		&&			
ANR	13759	EqualityExpression	endian2 == 'M'		13482	0		==			
ANR	13760	Identifier	endian2		13482	0					
ANR	13761	PrimaryExpression	'M'		13482	1					
ANR	13762	EqualityExpression	endian1 == 'L'		13482	1		==			
ANR	13763	Identifier	endian1		13482	0					
ANR	13764	PrimaryExpression	'L'		13482	1					
ANR	13765	CompoundStatement		52:49:1303:1303	13482	1					
ANR	13766	ExpressionStatement	bigendian = 0	1210:8:37488:37501	13482	0	True				
ANR	13767	AssignmentExpression	bigendian = 0		13482	0		=			
ANR	13768	Identifier	bigendian		13482	0					
ANR	13769	PrimaryExpression	0		13482	1					
ANR	13770	ElseStatement	else		13482	0					
ANR	13771	CompoundStatement		54:11:1339:1339	13482	0					
ANR	13772	ExpressionStatement	fclose ( f )	1212:8:37524:37533	13482	0	True				
ANR	13773	CallExpression	fclose ( f )		13482	0					
ANR	13774	Callee	fclose		13482	0					
ANR	13775	Identifier	fclose		13482	0					
ANR	13776	ArgumentList	f		13482	1					
ANR	13777	Argument	f		13482	0					
ANR	13778	Identifier	f		13482	0					
ANR	13779	ExpressionStatement	"fprintf ( stderr , ""Bad pgx header, please check input file\\n"" )"	1213:8:37543:37603	13482	1	True				
ANR	13780	CallExpression	"fprintf ( stderr , ""Bad pgx header, please check input file\\n"" )"		13482	0					
ANR	13781	Callee	fprintf		13482	0					
ANR	13782	Identifier	fprintf		13482	0					
ANR	13783	ArgumentList	stderr		13482	1					
ANR	13784	Argument	stderr		13482	0					
ANR	13785	Identifier	stderr		13482	0					
ANR	13786	Argument	"""Bad pgx header, please check input file\\n"""		13482	1					
ANR	13787	PrimaryExpression	"""Bad pgx header, please check input file\\n"""		13482	0					
ANR	13788	ReturnStatement	return NULL ;	1214:8:37613:37624	13482	2	True				
ANR	13789	Identifier	NULL		13482	0					
ANR	13790	IfStatement	if ( w < 1 || h < 1 || prec < 1 || prec > 31 )		13482	26					
ANR	13791	Condition	w < 1 || h < 1 || prec < 1 || prec > 31	1217:8:37641:37679	13482	0	True				
ANR	13792	OrExpression	w < 1 || h < 1 || prec < 1 || prec > 31		13482	0		||			
ANR	13793	RelationalExpression	w < 1		13482	0		<			
ANR	13794	Identifier	w		13482	0					
ANR	13795	PrimaryExpression	1		13482	1					
ANR	13796	OrExpression	h < 1 || prec < 1 || prec > 31		13482	1		||			
ANR	13797	RelationalExpression	h < 1		13482	0		<			
ANR	13798	Identifier	h		13482	0					
ANR	13799	PrimaryExpression	1		13482	1					
ANR	13800	OrExpression	prec < 1 || prec > 31		13482	1		||			
ANR	13801	RelationalExpression	prec < 1		13482	0		<			
ANR	13802	Identifier	prec		13482	0					
ANR	13803	PrimaryExpression	1		13482	1					
ANR	13804	RelationalExpression	prec > 31		13482	1		>			
ANR	13805	Identifier	prec		13482	0					
ANR	13806	PrimaryExpression	31		13482	1					
ANR	13807	CompoundStatement		60:49:1507:1507	13482	1					
ANR	13808	ExpressionStatement	fclose ( f )	1218:8:37692:37701	13482	0	True				
ANR	13809	CallExpression	fclose ( f )		13482	0					
ANR	13810	Callee	fclose		13482	0					
ANR	13811	Identifier	fclose		13482	0					
ANR	13812	ArgumentList	f		13482	1					
ANR	13813	Argument	f		13482	0					
ANR	13814	Identifier	f		13482	0					
ANR	13815	ExpressionStatement	"fprintf ( stderr , ""Bad pgx header, please check input file\\n"" )"	1219:8:37711:37771	13482	1	True				
ANR	13816	CallExpression	"fprintf ( stderr , ""Bad pgx header, please check input file\\n"" )"		13482	0					
ANR	13817	Callee	fprintf		13482	0					
ANR	13818	Identifier	fprintf		13482	0					
ANR	13819	ArgumentList	stderr		13482	1					
ANR	13820	Argument	stderr		13482	0					
ANR	13821	Identifier	stderr		13482	0					
ANR	13822	Argument	"""Bad pgx header, please check input file\\n"""		13482	1					
ANR	13823	PrimaryExpression	"""Bad pgx header, please check input file\\n"""		13482	0					
ANR	13824	ReturnStatement	return NULL ;	1220:8:37781:37792	13482	2	True				
ANR	13825	Identifier	NULL		13482	0					
ANR	13826	ExpressionStatement	expected_file_size = ( OPJ_UINT64 ) w * ( OPJ_UINT64 ) h * ( prec > 16 ? 4 : prec > 8 ? 2 : 1 )	1223:4:37805:37900	13482	27	True				
ANR	13827	AssignmentExpression	expected_file_size = ( OPJ_UINT64 ) w * ( OPJ_UINT64 ) h * ( prec > 16 ? 4 : prec > 8 ? 2 : 1 )		13482	0		=			
ANR	13828	Identifier	expected_file_size		13482	0					
ANR	13829	MultiplicativeExpression	( OPJ_UINT64 ) w * ( OPJ_UINT64 ) h * ( prec > 16 ? 4 : prec > 8 ? 2 : 1 )		13482	1		*			
ANR	13830	CastExpression	( OPJ_UINT64 ) w		13482	0					
ANR	13831	CastTarget	OPJ_UINT64		13482	0					
ANR	13832	Identifier	w		13482	1					
ANR	13833	MultiplicativeExpression	( OPJ_UINT64 ) h * ( prec > 16 ? 4 : prec > 8 ? 2 : 1 )		13482	1		*			
ANR	13834	CastExpression	( OPJ_UINT64 ) h		13482	0					
ANR	13835	CastTarget	OPJ_UINT64		13482	0					
ANR	13836	Identifier	h		13482	1					
ANR	13837	ConditionalExpression	prec > 16 ? 4 : prec > 8 ? 2 : 1		13482	1					
ANR	13838	Condition	prec > 16		13482	0					
ANR	13839	RelationalExpression	prec > 16		13482	0		>			
ANR	13840	Identifier	prec		13482	0					
ANR	13841	PrimaryExpression	16		13482	1					
ANR	13842	PrimaryExpression	4		13482	1					
ANR	13843	ConditionalExpression	prec > 8 ? 2 : 1		13482	2					
ANR	13844	Condition	prec > 8		13482	0					
ANR	13845	RelationalExpression	prec > 8		13482	0		>			
ANR	13846	Identifier	prec		13482	0					
ANR	13847	PrimaryExpression	8		13482	1					
ANR	13848	PrimaryExpression	2		13482	1					
ANR	13849	PrimaryExpression	1		13482	2					
ANR	13850	IfStatement	if ( expected_file_size > 10000000U )		13482	28					
ANR	13851	Condition	expected_file_size > 10000000U	1225:8:37910:37939	13482	0	True				
ANR	13852	RelationalExpression	expected_file_size > 10000000U		13482	0		>			
ANR	13853	Identifier	expected_file_size		13482	0					
ANR	13854	PrimaryExpression	10000000U		13482	1					
ANR	13855	CompoundStatement		70:8:1794:1816	13482	1					
ANR	13856	IdentifierDeclStatement	char ch ;	1226:8:37952:37959	13482	0	True				
ANR	13857	IdentifierDecl	ch		13482	0					
ANR	13858	IdentifierDeclType	char		13482	0					
ANR	13859	Identifier	ch		13482	1					
ANR	13860	IdentifierDeclStatement	long curpos = ftell ( f ) ;	1227:8:37969:37991	13482	1	True				
ANR	13861	IdentifierDecl	curpos = ftell ( f )		13482	0					
ANR	13862	IdentifierDeclType	long		13482	0					
ANR	13863	Identifier	curpos		13482	1					
ANR	13864	AssignmentExpression	curpos = ftell ( f )		13482	2		=			
ANR	13865	Identifier	curpos		13482	0					
ANR	13866	CallExpression	ftell ( f )		13482	1					
ANR	13867	Callee	ftell		13482	0					
ANR	13868	Identifier	ftell		13482	0					
ANR	13869	ArgumentList	f		13482	1					
ANR	13870	Argument	f		13482	0					
ANR	13871	Identifier	f		13482	0					
ANR	13872	IfStatement	if ( expected_file_size > ( OPJ_UINT64 ) INT_MAX )		13482	2					
ANR	13873	Condition	expected_file_size > ( OPJ_UINT64 ) INT_MAX	1228:12:38005:38044	13482	0	True				
ANR	13874	RelationalExpression	expected_file_size > ( OPJ_UINT64 ) INT_MAX		13482	0		>			
ANR	13875	Identifier	expected_file_size		13482	0					
ANR	13876	CastExpression	( OPJ_UINT64 ) INT_MAX		13482	1					
ANR	13877	CastTarget	OPJ_UINT64		13482	0					
ANR	13878	Identifier	INT_MAX		13482	1					
ANR	13879	CompoundStatement		71:54:1872:1872	13482	1					
ANR	13880	ExpressionStatement	expected_file_size = ( OPJ_UINT64 ) INT_MAX	1229:12:38061:38101	13482	0	True				
ANR	13881	AssignmentExpression	expected_file_size = ( OPJ_UINT64 ) INT_MAX		13482	0		=			
ANR	13882	Identifier	expected_file_size		13482	0					
ANR	13883	CastExpression	( OPJ_UINT64 ) INT_MAX		13482	1					
ANR	13884	CastTarget	OPJ_UINT64		13482	0					
ANR	13885	Identifier	INT_MAX		13482	1					
ANR	13886	ExpressionStatement	"fseek ( f , ( long ) expected_file_size - 1 , SEEK_SET )"	1231:8:38121:38169	13482	3	True				
ANR	13887	CallExpression	"fseek ( f , ( long ) expected_file_size - 1 , SEEK_SET )"		13482	0					
ANR	13888	Callee	fseek		13482	0					
ANR	13889	Identifier	fseek		13482	0					
ANR	13890	ArgumentList	f		13482	1					
ANR	13891	Argument	f		13482	0					
ANR	13892	Identifier	f		13482	0					
ANR	13893	Argument	( long ) expected_file_size - 1		13482	1					
ANR	13894	AdditiveExpression	( long ) expected_file_size - 1		13482	0		-			
ANR	13895	CastExpression	( long ) expected_file_size		13482	0					
ANR	13896	CastTarget	long		13482	0					
ANR	13897	Identifier	expected_file_size		13482	1					
ANR	13898	PrimaryExpression	1		13482	1					
ANR	13899	Argument	SEEK_SET		13482	2					
ANR	13900	Identifier	SEEK_SET		13482	0					
ANR	13901	IfStatement	"if ( fread ( & ch , 1 , 1 , f ) != 1 )"		13482	4					
ANR	13902	Condition	"fread ( & ch , 1 , 1 , f ) != 1"	1232:12:38183:38206	13482	0	True				
ANR	13903	EqualityExpression	"fread ( & ch , 1 , 1 , f ) != 1"		13482	0		!=			
ANR	13904	CallExpression	"fread ( & ch , 1 , 1 , f )"		13482	0					
ANR	13905	Callee	fread		13482	0					
ANR	13906	Identifier	fread		13482	0					
ANR	13907	ArgumentList	& ch		13482	1					
ANR	13908	Argument	& ch		13482	0					
ANR	13909	UnaryOperationExpression	& ch		13482	0					
ANR	13910	UnaryOperator	&		13482	0					
ANR	13911	Identifier	ch		13482	1					
ANR	13912	Argument	1		13482	1					
ANR	13913	PrimaryExpression	1		13482	0					
ANR	13914	Argument	1		13482	2					
ANR	13915	PrimaryExpression	1		13482	0					
ANR	13916	Argument	f		13482	3					
ANR	13917	Identifier	f		13482	0					
ANR	13918	PrimaryExpression	1		13482	1					
ANR	13919	CompoundStatement		75:38:2034:2034	13482	1					
ANR	13920	ExpressionStatement	"fprintf ( stderr , ""File too short\\n"" )"	1233:12:38223:38258	13482	0	True				
ANR	13921	CallExpression	"fprintf ( stderr , ""File too short\\n"" )"		13482	0					
ANR	13922	Callee	fprintf		13482	0					
ANR	13923	Identifier	fprintf		13482	0					
ANR	13924	ArgumentList	stderr		13482	1					
ANR	13925	Argument	stderr		13482	0					
ANR	13926	Identifier	stderr		13482	0					
ANR	13927	Argument	"""File too short\\n"""		13482	1					
ANR	13928	PrimaryExpression	"""File too short\\n"""		13482	0					
ANR	13929	ExpressionStatement	fclose ( f )	1234:12:38272:38281	13482	1	True				
ANR	13930	CallExpression	fclose ( f )		13482	0					
ANR	13931	Callee	fclose		13482	0					
ANR	13932	Identifier	fclose		13482	0					
ANR	13933	ArgumentList	f		13482	1					
ANR	13934	Argument	f		13482	0					
ANR	13935	Identifier	f		13482	0					
ANR	13936	ReturnStatement	return NULL ;	1235:12:38295:38306	13482	2	True				
ANR	13937	Identifier	NULL		13482	0					
ANR	13938	ExpressionStatement	"fseek ( f , curpos , SEEK_SET )"	1237:8:38326:38352	13482	5	True				
ANR	13939	CallExpression	"fseek ( f , curpos , SEEK_SET )"		13482	0					
ANR	13940	Callee	fseek		13482	0					
ANR	13941	Identifier	fseek		13482	0					
ANR	13942	ArgumentList	f		13482	1					
ANR	13943	Argument	f		13482	0					
ANR	13944	Identifier	f		13482	0					
ANR	13945	Argument	curpos		13482	1					
ANR	13946	Identifier	curpos		13482	0					
ANR	13947	Argument	SEEK_SET		13482	2					
ANR	13948	Identifier	SEEK_SET		13482	0					
ANR	13949	ExpressionStatement	cmptparm . x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0	1242:4:38403:38456	13482	29	True				
ANR	13950	AssignmentExpression	cmptparm . x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0		13482	0		=			
ANR	13951	MemberAccess	cmptparm . x0		13482	0					
ANR	13952	Identifier	cmptparm		13482	0					
ANR	13953	Identifier	x0		13482	1					
ANR	13954	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_x0		13482	1					
ANR	13955	CastTarget	OPJ_UINT32		13482	0					
ANR	13956	PtrMemberAccess	parameters -> image_offset_x0		13482	1					
ANR	13957	Identifier	parameters		13482	0					
ANR	13958	Identifier	image_offset_x0		13482	1					
ANR	13959	ExpressionStatement	cmptparm . y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0	1243:4:38462:38515	13482	30	True				
ANR	13960	AssignmentExpression	cmptparm . y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0		13482	0		=			
ANR	13961	MemberAccess	cmptparm . y0		13482	0					
ANR	13962	Identifier	cmptparm		13482	0					
ANR	13963	Identifier	y0		13482	1					
ANR	13964	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_y0		13482	1					
ANR	13965	CastTarget	OPJ_UINT32		13482	0					
ANR	13966	PtrMemberAccess	parameters -> image_offset_y0		13482	1					
ANR	13967	Identifier	parameters		13482	0					
ANR	13968	Identifier	image_offset_y0		13482	1					
ANR	13969	ExpressionStatement	cmptparm . w = ! cmptparm . x0 ? ( OPJ_UINT32 ) ( ( w - 1 ) * parameters -> subsampling_dx + 1 ) : cmptparm . x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dx + 1	1244:4:38521:38718	13482	31	True				
ANR	13970	AssignmentExpression	cmptparm . w = ! cmptparm . x0 ? ( OPJ_UINT32 ) ( ( w - 1 ) * parameters -> subsampling_dx + 1 ) : cmptparm . x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dx + 1		13482	0		=			
ANR	13971	MemberAccess	cmptparm . w		13482	0					
ANR	13972	Identifier	cmptparm		13482	0					
ANR	13973	Identifier	w		13482	1					
ANR	13974	ConditionalExpression	! cmptparm . x0 ? ( OPJ_UINT32 ) ( ( w - 1 ) * parameters -> subsampling_dx + 1 ) : cmptparm . x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dx + 1		13482	1					
ANR	13975	Condition	! cmptparm . x0		13482	0					
ANR	13976	UnaryOperationExpression	! cmptparm . x0		13482	0					
ANR	13977	UnaryOperator	!		13482	0					
ANR	13978	MemberAccess	cmptparm . x0		13482	1					
ANR	13979	Identifier	cmptparm		13482	0					
ANR	13980	Identifier	x0		13482	1					
ANR	13981	CastExpression	( OPJ_UINT32 ) ( ( w - 1 ) * parameters -> subsampling_dx + 1 )		13482	1					
ANR	13982	CastTarget	OPJ_UINT32		13482	0					
ANR	13983	AdditiveExpression	( w - 1 ) * parameters -> subsampling_dx + 1		13482	1		+			
ANR	13984	MultiplicativeExpression	( w - 1 ) * parameters -> subsampling_dx		13482	0		*			
ANR	13985	AdditiveExpression	w - 1		13482	0		-			
ANR	13986	Identifier	w		13482	0					
ANR	13987	PrimaryExpression	1		13482	1					
ANR	13988	PtrMemberAccess	parameters -> subsampling_dx		13482	1					
ANR	13989	Identifier	parameters		13482	0					
ANR	13990	Identifier	subsampling_dx		13482	1					
ANR	13991	PrimaryExpression	1		13482	1					
ANR	13992	AdditiveExpression	cmptparm . x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dx + 1		13482	2		+			
ANR	13993	MemberAccess	cmptparm . x0		13482	0					
ANR	13994	Identifier	cmptparm		13482	0					
ANR	13995	Identifier	x0		13482	1					
ANR	13996	AdditiveExpression	( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dx + 1		13482	1		+			
ANR	13997	MultiplicativeExpression	( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dx		13482	0		*			
ANR	13998	CastExpression	( OPJ_UINT32 ) ( w - 1 )		13482	0					
ANR	13999	CastTarget	OPJ_UINT32		13482	0					
ANR	14000	AdditiveExpression	w - 1		13482	1		-			
ANR	14001	Identifier	w		13482	0					
ANR	14002	PrimaryExpression	1		13482	1					
ANR	14003	CastExpression	( OPJ_UINT32 ) parameters -> subsampling_dx		13482	1					
ANR	14004	CastTarget	OPJ_UINT32		13482	0					
ANR	14005	PtrMemberAccess	parameters -> subsampling_dx		13482	1					
ANR	14006	Identifier	parameters		13482	0					
ANR	14007	Identifier	subsampling_dx		13482	1					
ANR	14008	PrimaryExpression	1		13482	1					
ANR	14009	ExpressionStatement	cmptparm . h = ! cmptparm . y0 ? ( OPJ_UINT32 ) ( ( h - 1 ) * parameters -> subsampling_dy + 1 ) : cmptparm . y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dy + 1	1247:4:38724:38921	13482	32	True				
ANR	14010	AssignmentExpression	cmptparm . h = ! cmptparm . y0 ? ( OPJ_UINT32 ) ( ( h - 1 ) * parameters -> subsampling_dy + 1 ) : cmptparm . y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dy + 1		13482	0		=			
ANR	14011	MemberAccess	cmptparm . h		13482	0					
ANR	14012	Identifier	cmptparm		13482	0					
ANR	14013	Identifier	h		13482	1					
ANR	14014	ConditionalExpression	! cmptparm . y0 ? ( OPJ_UINT32 ) ( ( h - 1 ) * parameters -> subsampling_dy + 1 ) : cmptparm . y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dy + 1		13482	1					
ANR	14015	Condition	! cmptparm . y0		13482	0					
ANR	14016	UnaryOperationExpression	! cmptparm . y0		13482	0					
ANR	14017	UnaryOperator	!		13482	0					
ANR	14018	MemberAccess	cmptparm . y0		13482	1					
ANR	14019	Identifier	cmptparm		13482	0					
ANR	14020	Identifier	y0		13482	1					
ANR	14021	CastExpression	( OPJ_UINT32 ) ( ( h - 1 ) * parameters -> subsampling_dy + 1 )		13482	1					
ANR	14022	CastTarget	OPJ_UINT32		13482	0					
ANR	14023	AdditiveExpression	( h - 1 ) * parameters -> subsampling_dy + 1		13482	1		+			
ANR	14024	MultiplicativeExpression	( h - 1 ) * parameters -> subsampling_dy		13482	0		*			
ANR	14025	AdditiveExpression	h - 1		13482	0		-			
ANR	14026	Identifier	h		13482	0					
ANR	14027	PrimaryExpression	1		13482	1					
ANR	14028	PtrMemberAccess	parameters -> subsampling_dy		13482	1					
ANR	14029	Identifier	parameters		13482	0					
ANR	14030	Identifier	subsampling_dy		13482	1					
ANR	14031	PrimaryExpression	1		13482	1					
ANR	14032	AdditiveExpression	cmptparm . y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dy + 1		13482	2		+			
ANR	14033	MemberAccess	cmptparm . y0		13482	0					
ANR	14034	Identifier	cmptparm		13482	0					
ANR	14035	Identifier	y0		13482	1					
ANR	14036	AdditiveExpression	( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dy + 1		13482	1		+			
ANR	14037	MultiplicativeExpression	( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) parameters -> subsampling_dy		13482	0		*			
ANR	14038	CastExpression	( OPJ_UINT32 ) ( h - 1 )		13482	0					
ANR	14039	CastTarget	OPJ_UINT32		13482	0					
ANR	14040	AdditiveExpression	h - 1		13482	1		-			
ANR	14041	Identifier	h		13482	0					
ANR	14042	PrimaryExpression	1		13482	1					
ANR	14043	CastExpression	( OPJ_UINT32 ) parameters -> subsampling_dy		13482	1					
ANR	14044	CastTarget	OPJ_UINT32		13482	0					
ANR	14045	PtrMemberAccess	parameters -> subsampling_dy		13482	1					
ANR	14046	Identifier	parameters		13482	0					
ANR	14047	Identifier	subsampling_dy		13482	1					
ANR	14048	PrimaryExpression	1		13482	1					
ANR	14049	IfStatement	if ( sign == '-' )		13482	33					
ANR	14050	Condition	sign == '-'	1251:8:38932:38942	13482	0	True				
ANR	14051	EqualityExpression	sign == '-'		13482	0		==			
ANR	14052	Identifier	sign		13482	0					
ANR	14053	PrimaryExpression	'-'		13482	1					
ANR	14054	CompoundStatement		94:21:2770:2770	13482	1					
ANR	14055	ExpressionStatement	cmptparm . sgnd = 1	1252:8:38955:38972	13482	0	True				
ANR	14056	AssignmentExpression	cmptparm . sgnd = 1		13482	0		=			
ANR	14057	MemberAccess	cmptparm . sgnd		13482	0					
ANR	14058	Identifier	cmptparm		13482	0					
ANR	14059	Identifier	sgnd		13482	1					
ANR	14060	PrimaryExpression	1		13482	1					
ANR	14061	ElseStatement	else		13482	0					
ANR	14062	CompoundStatement		96:11:2810:2810	13482	0					
ANR	14063	ExpressionStatement	cmptparm . sgnd = 0	1254:8:38995:39012	13482	0	True				
ANR	14064	AssignmentExpression	cmptparm . sgnd = 0		13482	0		=			
ANR	14065	MemberAccess	cmptparm . sgnd		13482	0					
ANR	14066	Identifier	cmptparm		13482	0					
ANR	14067	Identifier	sgnd		13482	1					
ANR	14068	PrimaryExpression	0		13482	1					
ANR	14069	IfStatement	if ( prec < 8 )		13482	34					
ANR	14070	Condition	prec < 8	1256:8:39028:39035	13482	0	True				
ANR	14071	RelationalExpression	prec < 8		13482	0		<			
ANR	14072	Identifier	prec		13482	0					
ANR	14073	PrimaryExpression	8		13482	1					
ANR	14074	CompoundStatement		99:18:2863:2863	13482	1					
ANR	14075	ExpressionStatement	force8 = 1	1257:8:39048:39058	13482	0	True				
ANR	14076	AssignmentExpression	force8 = 1		13482	0		=			
ANR	14077	Identifier	force8		13482	0					
ANR	14078	PrimaryExpression	1		13482	1					
ANR	14079	ExpressionStatement	ushift = 8 - prec	1258:8:39068:39085	13482	1	True				
ANR	14080	AssignmentExpression	ushift = 8 - prec		13482	0		=			
ANR	14081	Identifier	ushift		13482	0					
ANR	14082	AdditiveExpression	8 - prec		13482	1		-			
ANR	14083	PrimaryExpression	8		13482	0					
ANR	14084	Identifier	prec		13482	1					
ANR	14085	ExpressionStatement	dshift = prec - ushift	1259:8:39095:39117	13482	2	True				
ANR	14086	AssignmentExpression	dshift = prec - ushift		13482	0		=			
ANR	14087	Identifier	dshift		13482	0					
ANR	14088	AdditiveExpression	prec - ushift		13482	1		-			
ANR	14089	Identifier	prec		13482	0					
ANR	14090	Identifier	ushift		13482	1					
ANR	14091	IfStatement	if ( cmptparm . sgnd )		13482	3					
ANR	14092	Condition	cmptparm . sgnd	1260:12:39131:39143	13482	0	True				
ANR	14093	MemberAccess	cmptparm . sgnd		13482	0					
ANR	14094	Identifier	cmptparm		13482	0					
ANR	14095	Identifier	sgnd		13482	1					
ANR	14096	CompoundStatement		103:27:2971:2971	13482	1					
ANR	14097	ExpressionStatement	adjustS = ( 1 << ( prec - 1 ) )	1261:12:39160:39187	13482	0	True				
ANR	14098	AssignmentExpression	adjustS = ( 1 << ( prec - 1 ) )		13482	0		=			
ANR	14099	Identifier	adjustS		13482	0					
ANR	14100	ShiftExpression	1 << ( prec - 1 )		13482	1		<<			
ANR	14101	PrimaryExpression	1		13482	0					
ANR	14102	AdditiveExpression	prec - 1		13482	1		-			
ANR	14103	Identifier	prec		13482	0					
ANR	14104	PrimaryExpression	1		13482	1					
ANR	14105	ElseStatement	else		13482	0					
ANR	14106	CompoundStatement		105:15:3029:3029	13482	0					
ANR	14107	ExpressionStatement	adjustS = 0	1263:12:39218:39229	13482	0	True				
ANR	14108	AssignmentExpression	adjustS = 0		13482	0		=			
ANR	14109	Identifier	adjustS		13482	0					
ANR	14110	PrimaryExpression	0		13482	1					
ANR	14111	ExpressionStatement	cmptparm . sgnd = 0	1265:8:39249:39266	13482	4	True				
ANR	14112	AssignmentExpression	cmptparm . sgnd = 0		13482	0		=			
ANR	14113	MemberAccess	cmptparm . sgnd		13482	0					
ANR	14114	Identifier	cmptparm		13482	0					
ANR	14115	Identifier	sgnd		13482	1					
ANR	14116	PrimaryExpression	0		13482	1					
ANR	14117	ExpressionStatement	prec = 8	1266:8:39276:39284	13482	5	True				
ANR	14118	AssignmentExpression	prec = 8		13482	0		=			
ANR	14119	Identifier	prec		13482	0					
ANR	14120	PrimaryExpression	8		13482	1					
ANR	14121	ElseStatement	else		13482	0					
ANR	14122	CompoundStatement		110:11:3122:3122	13482	0					
ANR	14123	ExpressionStatement	ushift = dshift = force8 = adjustS = 0	1268:8:39307:39345	13482	0	True				
ANR	14124	AssignmentExpression	ushift = dshift = force8 = adjustS = 0		13482	0		=			
ANR	14125	Identifier	ushift		13482	0					
ANR	14126	AssignmentExpression	dshift = force8 = adjustS = 0		13482	1		=			
ANR	14127	Identifier	dshift		13482	0					
ANR	14128	AssignmentExpression	force8 = adjustS = 0		13482	1		=			
ANR	14129	Identifier	force8		13482	0					
ANR	14130	AssignmentExpression	adjustS = 0		13482	1		=			
ANR	14131	Identifier	adjustS		13482	0					
ANR	14132	PrimaryExpression	0		13482	1					
ANR	14133	ExpressionStatement	cmptparm . prec = ( OPJ_UINT32 ) prec	1271:4:39358:39390	13482	35	True				
ANR	14134	AssignmentExpression	cmptparm . prec = ( OPJ_UINT32 ) prec		13482	0		=			
ANR	14135	MemberAccess	cmptparm . prec		13482	0					
ANR	14136	Identifier	cmptparm		13482	0					
ANR	14137	Identifier	prec		13482	1					
ANR	14138	CastExpression	( OPJ_UINT32 ) prec		13482	1					
ANR	14139	CastTarget	OPJ_UINT32		13482	0					
ANR	14140	Identifier	prec		13482	1					
ANR	14141	ExpressionStatement	cmptparm . bpp = ( OPJ_UINT32 ) prec	1272:4:39396:39427	13482	36	True				
ANR	14142	AssignmentExpression	cmptparm . bpp = ( OPJ_UINT32 ) prec		13482	0		=			
ANR	14143	MemberAccess	cmptparm . bpp		13482	0					
ANR	14144	Identifier	cmptparm		13482	0					
ANR	14145	Identifier	bpp		13482	1					
ANR	14146	CastExpression	( OPJ_UINT32 ) prec		13482	1					
ANR	14147	CastTarget	OPJ_UINT32		13482	0					
ANR	14148	Identifier	prec		13482	1					
ANR	14149	ExpressionStatement	cmptparm . dx = ( OPJ_UINT32 ) parameters -> subsampling_dx	1273:4:39433:39485	13482	37	True				
ANR	14150	AssignmentExpression	cmptparm . dx = ( OPJ_UINT32 ) parameters -> subsampling_dx		13482	0		=			
ANR	14151	MemberAccess	cmptparm . dx		13482	0					
ANR	14152	Identifier	cmptparm		13482	0					
ANR	14153	Identifier	dx		13482	1					
ANR	14154	CastExpression	( OPJ_UINT32 ) parameters -> subsampling_dx		13482	1					
ANR	14155	CastTarget	OPJ_UINT32		13482	0					
ANR	14156	PtrMemberAccess	parameters -> subsampling_dx		13482	1					
ANR	14157	Identifier	parameters		13482	0					
ANR	14158	Identifier	subsampling_dx		13482	1					
ANR	14159	ExpressionStatement	cmptparm . dy = ( OPJ_UINT32 ) parameters -> subsampling_dy	1274:4:39491:39543	13482	38	True				
ANR	14160	AssignmentExpression	cmptparm . dy = ( OPJ_UINT32 ) parameters -> subsampling_dy		13482	0		=			
ANR	14161	MemberAccess	cmptparm . dy		13482	0					
ANR	14162	Identifier	cmptparm		13482	0					
ANR	14163	Identifier	dy		13482	1					
ANR	14164	CastExpression	( OPJ_UINT32 ) parameters -> subsampling_dy		13482	1					
ANR	14165	CastTarget	OPJ_UINT32		13482	0					
ANR	14166	PtrMemberAccess	parameters -> subsampling_dy		13482	1					
ANR	14167	Identifier	parameters		13482	0					
ANR	14168	Identifier	subsampling_dy		13482	1					
ANR	14169	ExpressionStatement	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm , color_space )"	1277:4:39577:39647	13482	39	True				
ANR	14170	AssignmentExpression	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm , color_space )"		13482	0		=			
ANR	14171	Identifier	image		13482	0					
ANR	14172	CallExpression	"opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm , color_space )"		13482	1					
ANR	14173	Callee	opj_image_create		13482	0					
ANR	14174	Identifier	opj_image_create		13482	0					
ANR	14175	ArgumentList	( OPJ_UINT32 ) numcomps		13482	1					
ANR	14176	Argument	( OPJ_UINT32 ) numcomps		13482	0					
ANR	14177	CastExpression	( OPJ_UINT32 ) numcomps		13482	0					
ANR	14178	CastTarget	OPJ_UINT32		13482	0					
ANR	14179	Identifier	numcomps		13482	1					
ANR	14180	Argument	& cmptparm		13482	1					
ANR	14181	UnaryOperationExpression	& cmptparm		13482	0					
ANR	14182	UnaryOperator	&		13482	0					
ANR	14183	Identifier	cmptparm		13482	1					
ANR	14184	Argument	color_space		13482	2					
ANR	14185	Identifier	color_space		13482	0					
ANR	14186	IfStatement	if ( ! image )		13482	40					
ANR	14187	Condition	! image	1278:8:39657:39662	13482	0	True				
ANR	14188	UnaryOperationExpression	! image		13482	0					
ANR	14189	UnaryOperator	!		13482	0					
ANR	14190	Identifier	image		13482	1					
ANR	14191	CompoundStatement		121:16:3490:3490	13482	1					
ANR	14192	ExpressionStatement	fclose ( f )	1279:8:39675:39684	13482	0	True				
ANR	14193	CallExpression	fclose ( f )		13482	0					
ANR	14194	Callee	fclose		13482	0					
ANR	14195	Identifier	fclose		13482	0					
ANR	14196	ArgumentList	f		13482	1					
ANR	14197	Argument	f		13482	0					
ANR	14198	Identifier	f		13482	0					
ANR	14199	ReturnStatement	return NULL ;	1280:8:39694:39705	13482	1	True				
ANR	14200	Identifier	NULL		13482	0					
ANR	14201	ExpressionStatement	image -> x0 = cmptparm . x0	1283:4:39763:39786	13482	41	True				
ANR	14202	AssignmentExpression	image -> x0 = cmptparm . x0		13482	0		=			
ANR	14203	PtrMemberAccess	image -> x0		13482	0					
ANR	14204	Identifier	image		13482	0					
ANR	14205	Identifier	x0		13482	1					
ANR	14206	MemberAccess	cmptparm . x0		13482	1					
ANR	14207	Identifier	cmptparm		13482	0					
ANR	14208	Identifier	x0		13482	1					
ANR	14209	ExpressionStatement	image -> y0 = cmptparm . x0	1284:4:39792:39815	13482	42	True				
ANR	14210	AssignmentExpression	image -> y0 = cmptparm . x0		13482	0		=			
ANR	14211	PtrMemberAccess	image -> y0		13482	0					
ANR	14212	Identifier	image		13482	0					
ANR	14213	Identifier	y0		13482	1					
ANR	14214	MemberAccess	cmptparm . x0		13482	1					
ANR	14215	Identifier	cmptparm		13482	0					
ANR	14216	Identifier	x0		13482	1					
ANR	14217	ExpressionStatement	image -> x1 = cmptparm . w	1285:4:39821:39843	13482	43	True				
ANR	14218	AssignmentExpression	image -> x1 = cmptparm . w		13482	0		=			
ANR	14219	PtrMemberAccess	image -> x1		13482	0					
ANR	14220	Identifier	image		13482	0					
ANR	14221	Identifier	x1		13482	1					
ANR	14222	MemberAccess	cmptparm . w		13482	1					
ANR	14223	Identifier	cmptparm		13482	0					
ANR	14224	Identifier	w		13482	1					
ANR	14225	ExpressionStatement	image -> y1 = cmptparm . h	1286:4:39849:39871	13482	44	True				
ANR	14226	AssignmentExpression	image -> y1 = cmptparm . h		13482	0		=			
ANR	14227	PtrMemberAccess	image -> y1		13482	0					
ANR	14228	Identifier	image		13482	0					
ANR	14229	Identifier	y1		13482	1					
ANR	14230	MemberAccess	cmptparm . h		13482	1					
ANR	14231	Identifier	cmptparm		13482	0					
ANR	14232	Identifier	h		13482	1					
ANR	14233	ExpressionStatement	comp = & image -> comps [ 0 ]	1290:4:39904:39927	13482	45	True				
ANR	14234	AssignmentExpression	comp = & image -> comps [ 0 ]		13482	0		=			
ANR	14235	Identifier	comp		13482	0					
ANR	14236	UnaryOperationExpression	& image -> comps [ 0 ]		13482	1					
ANR	14237	UnaryOperator	&		13482	0					
ANR	14238	ArrayIndexing	image -> comps [ 0 ]		13482	1					
ANR	14239	PtrMemberAccess	image -> comps		13482	0					
ANR	14240	Identifier	image		13482	0					
ANR	14241	Identifier	comps		13482	1					
ANR	14242	PrimaryExpression	0		13482	1					
ANR	14243	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		13482	46					
ANR	14244	ForInit	i = 0 ;	1292:9:39939:39944	13482	0	True				
ANR	14245	AssignmentExpression	i = 0		13482	0		=			
ANR	14246	Identifier	i		13482	0					
ANR	14247	PrimaryExpression	0		13482	1					
ANR	14248	Condition	i < w * h	1292:16:39946:39954	13482	1	True				
ANR	14249	RelationalExpression	i < w * h		13482	0		<			
ANR	14250	Identifier	i		13482	0					
ANR	14251	MultiplicativeExpression	w * h		13482	1		*			
ANR	14252	Identifier	w		13482	0					
ANR	14253	Identifier	h		13482	1					
ANR	14254	PostIncDecOperationExpression	i ++	1292:27:39957:39959	13482	2	True				
ANR	14255	Identifier	i		13482	0					
ANR	14256	IncDec	++		13482	1					
ANR	14257	CompoundStatement		136:8:3797:3802	13482	3					
ANR	14258	IdentifierDeclStatement	int v ;	1293:8:39972:39977	13482	0	True				
ANR	14259	IdentifierDecl	v		13482	0					
ANR	14260	IdentifierDeclType	int		13482	0					
ANR	14261	Identifier	v		13482	1					
ANR	14262	IfStatement	if ( force8 )		13482	1					
ANR	14263	Condition	force8	1294:12:39991:39996	13482	0	True				
ANR	14264	Identifier	force8		13482	0					
ANR	14265	CompoundStatement		137:20:3824:3824	13482	1					
ANR	14266	ExpressionStatement	v = readuchar ( f ) + adjustS	1295:12:40013:40039	13482	0	True				
ANR	14267	AssignmentExpression	v = readuchar ( f ) + adjustS		13482	0		=			
ANR	14268	Identifier	v		13482	0					
ANR	14269	AdditiveExpression	readuchar ( f ) + adjustS		13482	1		+			
ANR	14270	CallExpression	readuchar ( f )		13482	0					
ANR	14271	Callee	readuchar		13482	0					
ANR	14272	Identifier	readuchar		13482	0					
ANR	14273	ArgumentList	f		13482	1					
ANR	14274	Argument	f		13482	0					
ANR	14275	Identifier	f		13482	0					
ANR	14276	Identifier	adjustS		13482	1					
ANR	14277	ExpressionStatement	v = ( v << ushift ) + ( v >> dshift )	1296:12:40053:40086	13482	1	True				
ANR	14278	AssignmentExpression	v = ( v << ushift ) + ( v >> dshift )		13482	0		=			
ANR	14279	Identifier	v		13482	0					
ANR	14280	AdditiveExpression	( v << ushift ) + ( v >> dshift )		13482	1		+			
ANR	14281	ShiftExpression	v << ushift		13482	0		<<			
ANR	14282	Identifier	v		13482	0					
ANR	14283	Identifier	ushift		13482	1					
ANR	14284	ShiftExpression	v >> dshift		13482	1		>>			
ANR	14285	Identifier	v		13482	0					
ANR	14286	Identifier	dshift		13482	1					
ANR	14287	ExpressionStatement	comp -> data [ i ] = ( unsigned char ) v	1297:12:40100:40132	13482	2	True				
ANR	14288	AssignmentExpression	comp -> data [ i ] = ( unsigned char ) v		13482	0		=			
ANR	14289	ArrayIndexing	comp -> data [ i ]		13482	0					
ANR	14290	PtrMemberAccess	comp -> data		13482	0					
ANR	14291	Identifier	comp		13482	0					
ANR	14292	Identifier	data		13482	1					
ANR	14293	Identifier	i		13482	1					
ANR	14294	CastExpression	( unsigned char ) v		13482	1					
ANR	14295	CastTarget	unsigned char		13482	0					
ANR	14296	Identifier	v		13482	1					
ANR	14297	IfStatement	if ( v > max )		13482	3					
ANR	14298	Condition	v > max	1299:16:40151:40157	13482	0	True				
ANR	14299	RelationalExpression	v > max		13482	0		>			
ANR	14300	Identifier	v		13482	0					
ANR	14301	Identifier	max		13482	1					
ANR	14302	CompoundStatement		142:25:3985:3985	13482	1					
ANR	14303	ExpressionStatement	max = v	1300:16:40178:40185	13482	0	True				
ANR	14304	AssignmentExpression	max = v		13482	0		=			
ANR	14305	Identifier	max		13482	0					
ANR	14306	Identifier	v		13482	1					
ANR	14307	ContinueStatement	continue ;	1303:12:40214:40222	13482	4	True				
ANR	14308	IfStatement	if ( comp -> prec == 8 )		13482	2					
ANR	14309	Condition	comp -> prec == 8	1305:12:40246:40260	13482	0	True				
ANR	14310	EqualityExpression	comp -> prec == 8		13482	0		==			
ANR	14311	PtrMemberAccess	comp -> prec		13482	0					
ANR	14312	Identifier	comp		13482	0					
ANR	14313	Identifier	prec		13482	1					
ANR	14314	PrimaryExpression	8		13482	1					
ANR	14315	CompoundStatement		148:29:4088:4088	13482	1					
ANR	14316	IfStatement	if ( ! comp -> sgnd )		13482	0					
ANR	14317	Condition	! comp -> sgnd	1306:16:40281:40291	13482	0	True				
ANR	14318	UnaryOperationExpression	! comp -> sgnd		13482	0					
ANR	14319	UnaryOperator	!		13482	0					
ANR	14320	PtrMemberAccess	comp -> sgnd		13482	1					
ANR	14321	Identifier	comp		13482	0					
ANR	14322	Identifier	sgnd		13482	1					
ANR	14323	CompoundStatement		149:29:4119:4119	13482	1					
ANR	14324	ExpressionStatement	v = readuchar ( f )	1307:16:40312:40328	13482	0	True				
ANR	14325	AssignmentExpression	v = readuchar ( f )		13482	0		=			
ANR	14326	Identifier	v		13482	0					
ANR	14327	CallExpression	readuchar ( f )		13482	1					
ANR	14328	Callee	readuchar		13482	0					
ANR	14329	Identifier	readuchar		13482	0					
ANR	14330	ArgumentList	f		13482	1					
ANR	14331	Argument	f		13482	0					
ANR	14332	Identifier	f		13482	0					
ANR	14333	ElseStatement	else		13482	0					
ANR	14334	CompoundStatement		151:19:4174:4174	13482	0					
ANR	14335	ExpressionStatement	v = ( char ) readuchar ( f )	1309:16:40367:40390	13482	0	True				
ANR	14336	AssignmentExpression	v = ( char ) readuchar ( f )		13482	0		=			
ANR	14337	Identifier	v		13482	0					
ANR	14338	CastExpression	( char ) readuchar ( f )		13482	1					
ANR	14339	CastTarget	char		13482	0					
ANR	14340	CallExpression	readuchar ( f )		13482	1					
ANR	14341	Callee	readuchar		13482	0					
ANR	14342	Identifier	readuchar		13482	0					
ANR	14343	ArgumentList	f		13482	1					
ANR	14344	Argument	f		13482	0					
ANR	14345	Identifier	f		13482	0					
ANR	14346	ElseStatement	else		13482	0					
ANR	14347	IfStatement	if ( comp -> prec <= 16 )		13482	0					
ANR	14348	Condition	comp -> prec <= 16	1311:19:40425:40440	13482	0	True				
ANR	14349	RelationalExpression	comp -> prec <= 16		13482	0		<=			
ANR	14350	PtrMemberAccess	comp -> prec		13482	0					
ANR	14351	Identifier	comp		13482	0					
ANR	14352	Identifier	prec		13482	1					
ANR	14353	PrimaryExpression	16		13482	1					
ANR	14354	CompoundStatement		154:37:4268:4268	13482	1					
ANR	14355	IfStatement	if ( ! comp -> sgnd )		13482	0					
ANR	14356	Condition	! comp -> sgnd	1312:16:40461:40471	13482	0	True				
ANR	14357	UnaryOperationExpression	! comp -> sgnd		13482	0					
ANR	14358	UnaryOperator	!		13482	0					
ANR	14359	PtrMemberAccess	comp -> sgnd		13482	1					
ANR	14360	Identifier	comp		13482	0					
ANR	14361	Identifier	sgnd		13482	1					
ANR	14362	CompoundStatement		155:29:4299:4299	13482	1					
ANR	14363	ExpressionStatement	"v = readushort ( f , bigendian )"	1313:16:40492:40520	13482	0	True				
ANR	14364	AssignmentExpression	"v = readushort ( f , bigendian )"		13482	0		=			
ANR	14365	Identifier	v		13482	0					
ANR	14366	CallExpression	"readushort ( f , bigendian )"		13482	1					
ANR	14367	Callee	readushort		13482	0					
ANR	14368	Identifier	readushort		13482	0					
ANR	14369	ArgumentList	f		13482	1					
ANR	14370	Argument	f		13482	0					
ANR	14371	Identifier	f		13482	0					
ANR	14372	Argument	bigendian		13482	1					
ANR	14373	Identifier	bigendian		13482	0					
ANR	14374	ElseStatement	else		13482	0					
ANR	14375	CompoundStatement		157:19:4366:4366	13482	0					
ANR	14376	ExpressionStatement	"v = ( short ) readushort ( f , bigendian )"	1315:16:40559:40595	13482	0	True				
ANR	14377	AssignmentExpression	"v = ( short ) readushort ( f , bigendian )"		13482	0		=			
ANR	14378	Identifier	v		13482	0					
ANR	14379	CastExpression	"( short ) readushort ( f , bigendian )"		13482	1					
ANR	14380	CastTarget	short		13482	0					
ANR	14381	CallExpression	"readushort ( f , bigendian )"		13482	1					
ANR	14382	Callee	readushort		13482	0					
ANR	14383	Identifier	readushort		13482	0					
ANR	14384	ArgumentList	f		13482	1					
ANR	14385	Argument	f		13482	0					
ANR	14386	Identifier	f		13482	0					
ANR	14387	Argument	bigendian		13482	1					
ANR	14388	Identifier	bigendian		13482	0					
ANR	14389	ElseStatement	else		13482	0					
ANR	14390	CompoundStatement		160:15:4451:4451	13482	0					
ANR	14391	IfStatement	if ( ! comp -> sgnd )		13482	0					
ANR	14392	Condition	! comp -> sgnd	1318:16:40644:40654	13482	0	True				
ANR	14393	UnaryOperationExpression	! comp -> sgnd		13482	0					
ANR	14394	UnaryOperator	!		13482	0					
ANR	14395	PtrMemberAccess	comp -> sgnd		13482	1					
ANR	14396	Identifier	comp		13482	0					
ANR	14397	Identifier	sgnd		13482	1					
ANR	14398	CompoundStatement		161:29:4482:4482	13482	1					
ANR	14399	ExpressionStatement	"v = ( int ) readuint ( f , bigendian )"	1319:16:40675:40706	13482	0	True				
ANR	14400	AssignmentExpression	"v = ( int ) readuint ( f , bigendian )"		13482	0		=			
ANR	14401	Identifier	v		13482	0					
ANR	14402	CastExpression	"( int ) readuint ( f , bigendian )"		13482	1					
ANR	14403	CastTarget	int		13482	0					
ANR	14404	CallExpression	"readuint ( f , bigendian )"		13482	1					
ANR	14405	Callee	readuint		13482	0					
ANR	14406	Identifier	readuint		13482	0					
ANR	14407	ArgumentList	f		13482	1					
ANR	14408	Argument	f		13482	0					
ANR	14409	Identifier	f		13482	0					
ANR	14410	Argument	bigendian		13482	1					
ANR	14411	Identifier	bigendian		13482	0					
ANR	14412	ElseStatement	else		13482	0					
ANR	14413	CompoundStatement		163:19:4552:4552	13482	0					
ANR	14414	ExpressionStatement	"v = ( int ) readuint ( f , bigendian )"	1321:16:40745:40777	13482	0	True				
ANR	14415	AssignmentExpression	"v = ( int ) readuint ( f , bigendian )"		13482	0		=			
ANR	14416	Identifier	v		13482	0					
ANR	14417	CastExpression	"( int ) readuint ( f , bigendian )"		13482	1					
ANR	14418	CastTarget	int		13482	0					
ANR	14419	CallExpression	"readuint ( f , bigendian )"		13482	1					
ANR	14420	Callee	readuint		13482	0					
ANR	14421	Identifier	readuint		13482	0					
ANR	14422	ArgumentList	f		13482	1					
ANR	14423	Argument	f		13482	0					
ANR	14424	Identifier	f		13482	0					
ANR	14425	Argument	bigendian		13482	1					
ANR	14426	Identifier	bigendian		13482	0					
ANR	14427	IfStatement	if ( v > max )		13482	3					
ANR	14428	Condition	v > max	1324:12:40815:40821	13482	0	True				
ANR	14429	RelationalExpression	v > max		13482	0		>			
ANR	14430	Identifier	v		13482	0					
ANR	14431	Identifier	max		13482	1					
ANR	14432	CompoundStatement		167:21:4649:4649	13482	1					
ANR	14433	ExpressionStatement	max = v	1325:12:40838:40845	13482	0	True				
ANR	14434	AssignmentExpression	max = v		13482	0		=			
ANR	14435	Identifier	max		13482	0					
ANR	14436	Identifier	v		13482	1					
ANR	14437	ExpressionStatement	comp -> data [ i ] = v	1327:8:40865:40882	13482	4	True				
ANR	14438	AssignmentExpression	comp -> data [ i ] = v		13482	0		=			
ANR	14439	ArrayIndexing	comp -> data [ i ]		13482	0					
ANR	14440	PtrMemberAccess	comp -> data		13482	0					
ANR	14441	Identifier	comp		13482	0					
ANR	14442	Identifier	data		13482	1					
ANR	14443	Identifier	i		13482	1					
ANR	14444	Identifier	v		13482	1					
ANR	14445	ExpressionStatement	fclose ( f )	1329:4:40894:40903	13482	47	True				
ANR	14446	CallExpression	fclose ( f )		13482	0					
ANR	14447	Callee	fclose		13482	0					
ANR	14448	Identifier	fclose		13482	0					
ANR	14449	ArgumentList	f		13482	1					
ANR	14450	Argument	f		13482	0					
ANR	14451	Identifier	f		13482	0					
ANR	14452	ExpressionStatement	comp -> bpp = ( OPJ_UINT32 ) int_floorlog2 ( max ) + 1	1330:4:40909:40955	13482	48	True				
ANR	14453	AssignmentExpression	comp -> bpp = ( OPJ_UINT32 ) int_floorlog2 ( max ) + 1		13482	0		=			
ANR	14454	PtrMemberAccess	comp -> bpp		13482	0					
ANR	14455	Identifier	comp		13482	0					
ANR	14456	Identifier	bpp		13482	1					
ANR	14457	AdditiveExpression	( OPJ_UINT32 ) int_floorlog2 ( max ) + 1		13482	1		+			
ANR	14458	CastExpression	( OPJ_UINT32 ) int_floorlog2 ( max )		13482	0					
ANR	14459	CastTarget	OPJ_UINT32		13482	0					
ANR	14460	CallExpression	int_floorlog2 ( max )		13482	1					
ANR	14461	Callee	int_floorlog2		13482	0					
ANR	14462	Identifier	int_floorlog2		13482	0					
ANR	14463	ArgumentList	max		13482	1					
ANR	14464	Argument	max		13482	0					
ANR	14465	Identifier	max		13482	0					
ANR	14466	PrimaryExpression	1		13482	1					
ANR	14467	ReturnStatement	return image ;	1332:4:40962:40974	13482	49	True				
ANR	14468	Identifier	image		13482	0					
ANR	14469	ReturnType	opj_image_t *		13482	1					
ANR	14470	Identifier	pgxtoimage		13482	2					
ANR	14471	ParameterList	"const char * filename , opj_cparameters_t * parameters"		13482	3					
ANR	14472	Parameter	const char * filename	1157:24:36121:36140	13482	0	True				
ANR	14473	ParameterType	const char *		13482	0					
ANR	14474	Identifier	filename		13482	1					
ANR	14475	Parameter	opj_cparameters_t * parameters	1157:46:36143:36171	13482	1	True				
ANR	14476	ParameterType	opj_cparameters_t *		13482	0					
ANR	14477	Identifier	parameters		13482	1					
ANR	14478	CFGEntryNode	ENTRY		13482		True				
ANR	14479	CFGExitNode	EXIT		13482		True				
ANR	14480	Symbol	ushift		13482						
ANR	14481	Symbol	image -> y0		13482						
ANR	14482	Symbol	curpos		13482						
ANR	14483	Symbol	image -> y1		13482						
ANR	14484	Symbol	sign		13482						
ANR	14485	Symbol	cmptparm . dy		13482						
ANR	14486	Symbol	cmptparm . dx		13482						
ANR	14487	Symbol	cmptparm		13482						
ANR	14488	Symbol	image -> comps		13482						
ANR	14489	Symbol	& ch		13482						
ANR	14490	Symbol	prec		13482						
ANR	14491	Symbol	& prec		13482						
ANR	14492	Symbol	* signtmp		13482						
ANR	14493	Symbol	readushort		13482						
ANR	14494	Symbol	image		13482						
ANR	14495	Symbol	comp		13482						
ANR	14496	Symbol	image -> x0		13482						
ANR	14497	Symbol	NULL		13482						
ANR	14498	Symbol	image -> x1		13482						
ANR	14499	Symbol	readuchar		13482						
ANR	14500	Symbol	readuint		13482						
ANR	14501	Symbol	stderr		13482						
ANR	14502	Symbol	fread		13482						
ANR	14503	Symbol	* * comp		13482						
ANR	14504	Symbol	cmptparm . w		13482						
ANR	14505	Symbol	filename		13482						
ANR	14506	Symbol	* parameters		13482						
ANR	14507	Symbol	dshift		13482						
ANR	14508	Symbol	cmptparm . x0		13482						
ANR	14509	Symbol	parameters		13482						
ANR	14510	Symbol	cmptparm . h		13482						
ANR	14511	Symbol	* image		13482						
ANR	14512	Symbol	signtmp		13482						
ANR	14513	Symbol	ftell		13482						
ANR	14514	Symbol	int_floorlog2		13482						
ANR	14515	Symbol	OPJ_CLRSPC_GRAY		13482						
ANR	14516	Symbol	comp -> data		13482						
ANR	14517	Symbol	parameters -> image_offset_x0		13482						
ANR	14518	Symbol	adjustS		13482						
ANR	14519	Symbol	endian1		13482						
ANR	14520	Symbol	cmptparm . y0		13482						
ANR	14521	Symbol	endian2		13482						
ANR	14522	Symbol	cmptparm . prec		13482						
ANR	14523	Symbol	opj_image_create		13482						
ANR	14524	Symbol	& cmptparm		13482						
ANR	14525	Symbol	cmptparm . bpp		13482						
ANR	14526	Symbol	cmptparm . sgnd		13482						
ANR	14527	Symbol	INT_MAX		13482						
ANR	14528	Symbol	* comp		13482						
ANR	14529	Symbol	color_space		13482						
ANR	14530	Symbol	bigendian		13482						
ANR	14531	Symbol	numcomps		13482						
ANR	14532	Symbol	comp -> bpp		13482						
ANR	14533	Symbol	SEEK_SET		13482						
ANR	14534	Symbol	fopen		13482						
ANR	14535	Symbol	temp		13482						
ANR	14536	Symbol	max		13482						
ANR	14537	Symbol	ch		13482						
ANR	14538	Symbol	f		13482						
ANR	14539	Symbol	h		13482						
ANR	14540	Symbol	i		13482						
ANR	14541	Symbol	parameters -> image_offset_y0		13482						
ANR	14542	Symbol	comp -> prec		13482						
ANR	14543	Symbol	* comp -> data		13482						
ANR	14544	Symbol	parameters -> subsampling_dx		13482						
ANR	14545	Symbol	& h		13482						
ANR	14546	Symbol	parameters -> subsampling_dy		13482						
ANR	14547	Symbol	force8		13482						
ANR	14548	Symbol	fscanf		13482						
ANR	14549	Symbol	* i		13482						
ANR	14550	Symbol	expected_file_size		13482						
ANR	14551	Symbol	& endian1		13482						
ANR	14552	Symbol	v		13482						
ANR	14553	Symbol	w		13482						
ANR	14554	Symbol	& endian2		13482						
ANR	14555	Symbol	& w		13482						
ANR	14556	Symbol	comp -> sgnd		13482						
ANR	14557	Function	clamp	1337:0:41045:41623							
ANR	14558	FunctionDef	"clamp (const int value , const int prec , const int sgnd)"		14557	0					
ANR	14559	CompoundStatement		1338:0:41118:41623	14557	0					
ANR	14560	IfStatement	if ( sgnd )		14557	0					
ANR	14561	Condition	sgnd	1339:8:41128:41131	14557	0	True				
ANR	14562	Identifier	sgnd		14557	0					
ANR	14563	CompoundStatement		2:14:15:15	14557	1					
ANR	14564	IfStatement	if ( prec <= 8 )		14557	0					
ANR	14565	Condition	prec <= 8	1340:12:41148:41156	14557	0	True				
ANR	14566	RelationalExpression	prec <= 8		14557	0		<=			
ANR	14567	Identifier	prec		14557	0					
ANR	14568	PrimaryExpression	8		14557	1					
ANR	14569	CompoundStatement		3:23:40:40	14557	1					
ANR	14570	ReturnStatement	"return CLAMP ( value , - 128 , 127 ) ;"	1341:12:41173:41203	14557	0	True				
ANR	14571	CallExpression	"CLAMP ( value , - 128 , 127 )"		14557	0					
ANR	14572	Callee	CLAMP		14557	0					
ANR	14573	Identifier	CLAMP		14557	0					
ANR	14574	ArgumentList	value		14557	1					
ANR	14575	Argument	value		14557	0					
ANR	14576	Identifier	value		14557	0					
ANR	14577	Argument	- 128		14557	1					
ANR	14578	UnaryOperationExpression	- 128		14557	0					
ANR	14579	UnaryOperator	-		14557	0					
ANR	14580	PrimaryExpression	128		14557	1					
ANR	14581	Argument	127		14557	2					
ANR	14582	PrimaryExpression	127		14557	0					
ANR	14583	ElseStatement	else		14557	0					
ANR	14584	IfStatement	if ( prec <= 16 )		14557	0					
ANR	14585	Condition	prec <= 16	1342:19:41224:41233	14557	0	True				
ANR	14586	RelationalExpression	prec <= 16		14557	0		<=			
ANR	14587	Identifier	prec		14557	0					
ANR	14588	PrimaryExpression	16		14557	1					
ANR	14589	CompoundStatement		5:31:117:117	14557	1					
ANR	14590	ReturnStatement	"return CLAMP ( value , - 32768 , 32767 ) ;"	1343:12:41250:41284	14557	0	True				
ANR	14591	CallExpression	"CLAMP ( value , - 32768 , 32767 )"		14557	0					
ANR	14592	Callee	CLAMP		14557	0					
ANR	14593	Identifier	CLAMP		14557	0					
ANR	14594	ArgumentList	value		14557	1					
ANR	14595	Argument	value		14557	0					
ANR	14596	Identifier	value		14557	0					
ANR	14597	Argument	- 32768		14557	1					
ANR	14598	UnaryOperationExpression	- 32768		14557	0					
ANR	14599	UnaryOperator	-		14557	0					
ANR	14600	PrimaryExpression	32768		14557	1					
ANR	14601	Argument	32767		14557	2					
ANR	14602	PrimaryExpression	32767		14557	0					
ANR	14603	ElseStatement	else		14557	0					
ANR	14604	CompoundStatement		7:15:182:182	14557	0					
ANR	14605	ReturnStatement	"return CLAMP ( value , - 2147483647 - 1 , 2147483647 ) ;"	1345:12:41315:41363	14557	0	True				
ANR	14606	CallExpression	"CLAMP ( value , - 2147483647 - 1 , 2147483647 )"		14557	0					
ANR	14607	Callee	CLAMP		14557	0					
ANR	14608	Identifier	CLAMP		14557	0					
ANR	14609	ArgumentList	value		14557	1					
ANR	14610	Argument	value		14557	0					
ANR	14611	Identifier	value		14557	0					
ANR	14612	Argument	- 2147483647 - 1		14557	1					
ANR	14613	AdditiveExpression	- 2147483647 - 1		14557	0		-			
ANR	14614	UnaryOperationExpression	- 2147483647		14557	0					
ANR	14615	UnaryOperator	-		14557	0					
ANR	14616	PrimaryExpression	2147483647		14557	1					
ANR	14617	PrimaryExpression	1		14557	1					
ANR	14618	Argument	2147483647		14557	2					
ANR	14619	PrimaryExpression	2147483647		14557	0					
ANR	14620	ElseStatement	else		14557	0					
ANR	14621	CompoundStatement		10:11:267:267	14557	0					
ANR	14622	IfStatement	if ( prec <= 8 )		14557	0					
ANR	14623	Condition	prec <= 8	1348:12:41400:41408	14557	0	True				
ANR	14624	RelationalExpression	prec <= 8		14557	0		<=			
ANR	14625	Identifier	prec		14557	0					
ANR	14626	PrimaryExpression	8		14557	1					
ANR	14627	CompoundStatement		11:23:292:292	14557	1					
ANR	14628	ReturnStatement	"return CLAMP ( value , 0 , 255 ) ;"	1349:12:41425:41452	14557	0	True				
ANR	14629	CallExpression	"CLAMP ( value , 0 , 255 )"		14557	0					
ANR	14630	Callee	CLAMP		14557	0					
ANR	14631	Identifier	CLAMP		14557	0					
ANR	14632	ArgumentList	value		14557	1					
ANR	14633	Argument	value		14557	0					
ANR	14634	Identifier	value		14557	0					
ANR	14635	Argument	0		14557	1					
ANR	14636	PrimaryExpression	0		14557	0					
ANR	14637	Argument	255		14557	2					
ANR	14638	PrimaryExpression	255		14557	0					
ANR	14639	ElseStatement	else		14557	0					
ANR	14640	IfStatement	if ( prec <= 16 )		14557	0					
ANR	14641	Condition	prec <= 16	1350:19:41473:41482	14557	0	True				
ANR	14642	RelationalExpression	prec <= 16		14557	0		<=			
ANR	14643	Identifier	prec		14557	0					
ANR	14644	PrimaryExpression	16		14557	1					
ANR	14645	CompoundStatement		13:31:366:366	14557	1					
ANR	14646	ReturnStatement	"return CLAMP ( value , 0 , 65535 ) ;"	1351:12:41499:41528	14557	0	True				
ANR	14647	CallExpression	"CLAMP ( value , 0 , 65535 )"		14557	0					
ANR	14648	Callee	CLAMP		14557	0					
ANR	14649	Identifier	CLAMP		14557	0					
ANR	14650	ArgumentList	value		14557	1					
ANR	14651	Argument	value		14557	0					
ANR	14652	Identifier	value		14557	0					
ANR	14653	Argument	0		14557	1					
ANR	14654	PrimaryExpression	0		14557	0					
ANR	14655	Argument	65535		14557	2					
ANR	14656	PrimaryExpression	65535		14557	0					
ANR	14657	ElseStatement	else		14557	0					
ANR	14658	CompoundStatement		15:15:426:426	14557	0					
ANR	14659	ReturnStatement	return value ;	1353:12:41559:41571	14557	0	True				
ANR	14660	Identifier	value		14557	0					
ANR	14661	ReturnType	static INLINE int		14557	1					
ANR	14662	Identifier	clamp		14557	2					
ANR	14663	ParameterList	"const int value , const int prec , const int sgnd"		14557	3					
ANR	14664	Parameter	const int value	1337:24:41069:41083	14557	0	True				
ANR	14665	ParameterType	const int		14557	0					
ANR	14666	Identifier	value		14557	1					
ANR	14667	Parameter	const int prec	1337:41:41086:41099	14557	1	True				
ANR	14668	ParameterType	const int		14557	0					
ANR	14669	Identifier	prec		14557	1					
ANR	14670	Parameter	const int sgnd	1337:57:41102:41115	14557	2	True				
ANR	14671	ParameterType	const int		14557	0					
ANR	14672	Identifier	sgnd		14557	1					
ANR	14673	CFGEntryNode	ENTRY		14557		True				
ANR	14674	CFGExitNode	EXIT		14557		True				
ANR	14675	Symbol	prec		14557						
ANR	14676	Symbol	CLAMP		14557						
ANR	14677	Symbol	value		14557						
ANR	14678	Symbol	sgnd		14557						
ANR	14679	Function	imagetopgx	1358:0:41626:45741							
ANR	14680	FunctionDef	"imagetopgx (opj_image_t * image , const char * outfile)"		14679	0					
ANR	14681	CompoundStatement		1359:0:41683:45741	14679	0					
ANR	14682	IdentifierDeclStatement	"int w , h ;"	1360:4:41689:41697	14679	0	True				
ANR	14683	IdentifierDecl	w		14679	0					
ANR	14684	IdentifierDeclType	int		14679	0					
ANR	14685	Identifier	w		14679	1					
ANR	14686	IdentifierDecl	h		14679	1					
ANR	14687	IdentifierDeclType	int		14679	0					
ANR	14688	Identifier	h		14679	1					
ANR	14689	IdentifierDeclStatement	"int i , j , fails = 1 ;"	1361:4:41703:41722	14679	1	True				
ANR	14690	IdentifierDecl	i		14679	0					
ANR	14691	IdentifierDeclType	int		14679	0					
ANR	14692	Identifier	i		14679	1					
ANR	14693	IdentifierDecl	j		14679	1					
ANR	14694	IdentifierDeclType	int		14679	0					
ANR	14695	Identifier	j		14679	1					
ANR	14696	IdentifierDecl	fails = 1		14679	2					
ANR	14697	IdentifierDeclType	int		14679	0					
ANR	14698	Identifier	fails		14679	1					
ANR	14699	AssignmentExpression	fails = 1		14679	2		=			
ANR	14700	Identifier	fails		14679	0					
ANR	14701	PrimaryExpression	1		14679	1					
ANR	14702	IdentifierDeclStatement	unsigned int compno ;	1362:4:41728:41747	14679	2	True				
ANR	14703	IdentifierDecl	compno		14679	0					
ANR	14704	IdentifierDeclType	unsigned int		14679	0					
ANR	14705	Identifier	compno		14679	1					
ANR	14706	IdentifierDeclStatement	FILE * fdest = NULL ;	1363:4:41753:41771	14679	3	True				
ANR	14707	IdentifierDecl	* fdest = NULL		14679	0					
ANR	14708	IdentifierDeclType	FILE *		14679	0					
ANR	14709	Identifier	fdest		14679	1					
ANR	14710	AssignmentExpression	* fdest = NULL		14679	2		=			
ANR	14711	Identifier	NULL		14679	0					
ANR	14712	Identifier	NULL		14679	1					
ANR	14713	ForStatement	for ( compno = 0 ; compno < image -> numcomps ; compno ++ )		14679	4					
ANR	14714	ForInit	compno = 0 ;	1365:9:41783:41793	14679	0	True				
ANR	14715	AssignmentExpression	compno = 0		14679	0		=			
ANR	14716	Identifier	compno		14679	0					
ANR	14717	PrimaryExpression	0		14679	1					
ANR	14718	Condition	compno < image -> numcomps	1365:21:41795:41818	14679	1	True				
ANR	14719	RelationalExpression	compno < image -> numcomps		14679	0		<			
ANR	14720	Identifier	compno		14679	0					
ANR	14721	PtrMemberAccess	image -> numcomps		14679	1					
ANR	14722	Identifier	image		14679	0					
ANR	14723	Identifier	numcomps		14679	1					
ANR	14724	PostIncDecOperationExpression	compno ++	1365:47:41821:41828	14679	2	True				
ANR	14725	Identifier	compno		14679	0					
ANR	14726	IncDec	++		14679	1					
ANR	14727	CompoundStatement		15:8:431:470	14679	3					
ANR	14728	IdentifierDeclStatement	opj_image_comp_t * comp = & image -> comps [ compno ] ;	1366:8:41841:41887	14679	0	True				
ANR	14729	IdentifierDecl	* comp = & image -> comps [ compno ]		14679	0					
ANR	14730	IdentifierDeclType	opj_image_comp_t *		14679	0					
ANR	14731	Identifier	comp		14679	1					
ANR	14732	AssignmentExpression	* comp = & image -> comps [ compno ]		14679	2		=			
ANR	14733	Identifier	comp		14679	0					
ANR	14734	UnaryOperationExpression	& image -> comps [ compno ]		14679	1					
ANR	14735	UnaryOperator	&		14679	0					
ANR	14736	ArrayIndexing	image -> comps [ compno ]		14679	1					
ANR	14737	PtrMemberAccess	image -> comps		14679	0					
ANR	14738	Identifier	image		14679	0					
ANR	14739	Identifier	comps		14679	1					
ANR	14740	Identifier	compno		14679	1					
ANR	14741	IdentifierDeclStatement	char bname [ 256 ] ;	1367:8:41897:41912	14679	1	True				
ANR	14742	IdentifierDecl	bname [ 256 ]		14679	0					
ANR	14743	IdentifierDeclType	char [ 256 ]		14679	0					
ANR	14744	Identifier	bname		14679	1					
ANR	14745	PrimaryExpression	256		14679	2					
ANR	14746	IdentifierDeclStatement	char * name = bname ;	1368:8:41944:41962	14679	2	True				
ANR	14747	IdentifierDecl	* name = bname		14679	0					
ANR	14748	IdentifierDeclType	char *		14679	0					
ANR	14749	Identifier	name		14679	1					
ANR	14750	AssignmentExpression	* name = bname		14679	2		=			
ANR	14751	Identifier	bname		14679	0					
ANR	14752	Identifier	bname		14679	1					
ANR	14753	IdentifierDeclStatement	int nbytes = 0 ;	1369:8:41986:42000	14679	3	True				
ANR	14754	IdentifierDecl	nbytes = 0		14679	0					
ANR	14755	IdentifierDeclType	int		14679	0					
ANR	14756	Identifier	nbytes		14679	1					
ANR	14757	AssignmentExpression	nbytes = 0		14679	2		=			
ANR	14758	Identifier	nbytes		14679	0					
ANR	14759	PrimaryExpression	0		14679	1					
ANR	14760	IdentifierDeclStatement	size_t res ;	1370:8:42010:42020	14679	4	True				
ANR	14761	IdentifierDecl	res		14679	0					
ANR	14762	IdentifierDeclType	size_t		14679	0					
ANR	14763	Identifier	res		14679	1					
ANR	14764	IdentifierDeclStatement	const size_t olen = strlen ( outfile ) ;	1371:8:42030:42065	14679	5	True				
ANR	14765	IdentifierDecl	olen = strlen ( outfile )		14679	0					
ANR	14766	IdentifierDeclType	const size_t		14679	0					
ANR	14767	Identifier	olen		14679	1					
ANR	14768	AssignmentExpression	olen = strlen ( outfile )		14679	2		=			
ANR	14769	Identifier	olen		14679	0					
ANR	14770	CallExpression	strlen ( outfile )		14679	1					
ANR	14771	Callee	strlen		14679	0					
ANR	14772	Identifier	strlen		14679	0					
ANR	14773	ArgumentList	outfile		14679	1					
ANR	14774	Argument	outfile		14679	0					
ANR	14775	Identifier	outfile		14679	0					
ANR	14776	IdentifierDeclStatement	const size_t dotpos = olen - 4 ;	1372:8:42075:42105	14679	6	True				
ANR	14777	IdentifierDecl	dotpos = olen - 4		14679	0					
ANR	14778	IdentifierDeclType	const size_t		14679	0					
ANR	14779	Identifier	dotpos		14679	1					
ANR	14780	AssignmentExpression	dotpos = olen - 4		14679	2		=			
ANR	14781	Identifier	dotpos		14679	0					
ANR	14782	AdditiveExpression	olen - 4		14679	1		-			
ANR	14783	Identifier	olen		14679	0					
ANR	14784	PrimaryExpression	4		14679	1					
ANR	14785	IdentifierDeclStatement	const size_t total = dotpos + 1 + 1 + 4 ;	1373:8:42115:42154	14679	7	True				
ANR	14786	IdentifierDecl	total = dotpos + 1 + 1 + 4		14679	0					
ANR	14787	IdentifierDeclType	const size_t		14679	0					
ANR	14788	Identifier	total		14679	1					
ANR	14789	AssignmentExpression	total = dotpos + 1 + 1 + 4		14679	2		=			
ANR	14790	Identifier	total		14679	0					
ANR	14791	AdditiveExpression	dotpos + 1 + 1 + 4		14679	1		+			
ANR	14792	Identifier	dotpos		14679	0					
ANR	14793	AdditiveExpression	1 + 1 + 4		14679	1		+			
ANR	14794	PrimaryExpression	1		14679	0					
ANR	14795	AdditiveExpression	1 + 4		14679	1		+			
ANR	14796	PrimaryExpression	1		14679	0					
ANR	14797	PrimaryExpression	4		14679	1					
ANR	14798	IfStatement	if ( outfile [ dotpos ] != '.' )		14679	8					
ANR	14799	Condition	outfile [ dotpos ] != '.'	1375:12:42198:42219	14679	0	True				
ANR	14800	EqualityExpression	outfile [ dotpos ] != '.'		14679	0		!=			
ANR	14801	ArrayIndexing	outfile [ dotpos ]		14679	0					
ANR	14802	Identifier	outfile		14679	0					
ANR	14803	Identifier	dotpos		14679	1					
ANR	14804	PrimaryExpression	'.'		14679	1					
ANR	14805	CompoundStatement		17:36:538:538	14679	1					
ANR	14806	ExpressionStatement	"fprintf ( stderr , ""ERROR -> Impossible happen."" )"	1377:12:42316:42362	14679	0	True				
ANR	14807	CallExpression	"fprintf ( stderr , ""ERROR -> Impossible happen."" )"		14679	0					
ANR	14808	Callee	fprintf		14679	0					
ANR	14809	Identifier	fprintf		14679	0					
ANR	14810	ArgumentList	stderr		14679	1					
ANR	14811	Argument	stderr		14679	0					
ANR	14812	Identifier	stderr		14679	0					
ANR	14813	Argument	"""ERROR -> Impossible happen."""		14679	1					
ANR	14814	PrimaryExpression	"""ERROR -> Impossible happen."""		14679	0					
ANR	14815	GotoStatement	goto fin ;	1378:12:42376:42384	14679	1	True				
ANR	14816	Identifier	fin		14679	0					
ANR	14817	IfStatement	if ( total > 256 )		14679	9					
ANR	14818	Condition	total > 256	1380:12:42408:42418	14679	0	True				
ANR	14819	RelationalExpression	total > 256		14679	0		>			
ANR	14820	Identifier	total		14679	0					
ANR	14821	PrimaryExpression	256		14679	1					
ANR	14822	CompoundStatement		22:25:737:737	14679	1					
ANR	14823	ExpressionStatement	name = ( char * ) malloc ( total + 1 )	1381:12:42435:42466	14679	0	True				
ANR	14824	AssignmentExpression	name = ( char * ) malloc ( total + 1 )		14679	0		=			
ANR	14825	Identifier	name		14679	0					
ANR	14826	CastExpression	( char * ) malloc ( total + 1 )		14679	1					
ANR	14827	CastTarget	char *		14679	0					
ANR	14828	CallExpression	malloc ( total + 1 )		14679	1					
ANR	14829	Callee	malloc		14679	0					
ANR	14830	Identifier	malloc		14679	0					
ANR	14831	ArgumentList	total + 1		14679	1					
ANR	14832	Argument	total + 1		14679	0					
ANR	14833	AdditiveExpression	total + 1		14679	0		+			
ANR	14834	Identifier	total		14679	0					
ANR	14835	PrimaryExpression	1		14679	1					
ANR	14836	IfStatement	if ( name == NULL )		14679	1					
ANR	14837	Condition	name == NULL	1382:16:42484:42495	14679	0	True				
ANR	14838	EqualityExpression	name == NULL		14679	0		==			
ANR	14839	Identifier	name		14679	0					
ANR	14840	Identifier	NULL		14679	1					
ANR	14841	CompoundStatement		24:30:814:814	14679	1					
ANR	14842	ExpressionStatement	"fprintf ( stderr , ""imagetopgx: memory out\\n"" )"	1383:16:42516:42559	14679	0	True				
ANR	14843	CallExpression	"fprintf ( stderr , ""imagetopgx: memory out\\n"" )"		14679	0					
ANR	14844	Callee	fprintf		14679	0					
ANR	14845	Identifier	fprintf		14679	0					
ANR	14846	ArgumentList	stderr		14679	1					
ANR	14847	Argument	stderr		14679	0					
ANR	14848	Identifier	stderr		14679	0					
ANR	14849	Argument	"""imagetopgx: memory out\\n"""		14679	1					
ANR	14850	PrimaryExpression	"""imagetopgx: memory out\\n"""		14679	0					
ANR	14851	GotoStatement	goto fin ;	1384:16:42577:42585	14679	1	True				
ANR	14852	Identifier	fin		14679	0					
ANR	14853	ExpressionStatement	"strncpy ( name , outfile , dotpos )"	1387:8:42619:42649	14679	10	True				
ANR	14854	CallExpression	"strncpy ( name , outfile , dotpos )"		14679	0					
ANR	14855	Callee	strncpy		14679	0					
ANR	14856	Identifier	strncpy		14679	0					
ANR	14857	ArgumentList	name		14679	1					
ANR	14858	Argument	name		14679	0					
ANR	14859	Identifier	name		14679	0					
ANR	14860	Argument	outfile		14679	1					
ANR	14861	Identifier	outfile		14679	0					
ANR	14862	Argument	dotpos		14679	2					
ANR	14863	Identifier	dotpos		14679	0					
ANR	14864	ExpressionStatement	"sprintf ( name + dotpos , ""_%u.pgx"" , compno )"	1388:8:42659:42700	14679	11	True				
ANR	14865	CallExpression	"sprintf ( name + dotpos , ""_%u.pgx"" , compno )"		14679	0					
ANR	14866	Callee	sprintf		14679	0					
ANR	14867	Identifier	sprintf		14679	0					
ANR	14868	ArgumentList	name + dotpos		14679	1					
ANR	14869	Argument	name + dotpos		14679	0					
ANR	14870	AdditiveExpression	name + dotpos		14679	0		+			
ANR	14871	Identifier	name		14679	0					
ANR	14872	Identifier	dotpos		14679	1					
ANR	14873	Argument	"""_%u.pgx"""		14679	1					
ANR	14874	PrimaryExpression	"""_%u.pgx"""		14679	0					
ANR	14875	Argument	compno		14679	2					
ANR	14876	Identifier	compno		14679	0					
ANR	14877	ExpressionStatement	"fdest = fopen ( name , ""wb"" )"	1389:8:42710:42735	14679	12	True				
ANR	14878	AssignmentExpression	"fdest = fopen ( name , ""wb"" )"		14679	0		=			
ANR	14879	Identifier	fdest		14679	0					
ANR	14880	CallExpression	"fopen ( name , ""wb"" )"		14679	1					
ANR	14881	Callee	fopen		14679	0					
ANR	14882	Identifier	fopen		14679	0					
ANR	14883	ArgumentList	name		14679	1					
ANR	14884	Argument	name		14679	0					
ANR	14885	Identifier	name		14679	0					
ANR	14886	Argument	"""wb"""		14679	1					
ANR	14887	PrimaryExpression	"""wb"""		14679	0					
ANR	14888	IfStatement	if ( ! fdest )		14679	13					
ANR	14889	Condition	! fdest	1392:12:42788:42793	14679	0	True				
ANR	14890	UnaryOperationExpression	! fdest		14679	0					
ANR	14891	UnaryOperator	!		14679	0					
ANR	14892	Identifier	fdest		14679	1					
ANR	14893	CompoundStatement		34:20:1112:1112	14679	1					
ANR	14894	ExpressionStatement	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , name )"	1394:12:42811:42876	14679	0	True				
ANR	14895	CallExpression	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , name )"		14679	0					
ANR	14896	Callee	fprintf		14679	0					
ANR	14897	Identifier	fprintf		14679	0					
ANR	14898	ArgumentList	stderr		14679	1					
ANR	14899	Argument	stderr		14679	0					
ANR	14900	Identifier	stderr		14679	0					
ANR	14901	Argument	"""ERROR -> failed to open %s for writing\\n"""		14679	1					
ANR	14902	PrimaryExpression	"""ERROR -> failed to open %s for writing\\n"""		14679	0					
ANR	14903	Argument	name		14679	2					
ANR	14904	Identifier	name		14679	0					
ANR	14905	IfStatement	if ( total > 256 )		14679	1					
ANR	14906	Condition	total > 256	1395:16:42894:42904	14679	0	True				
ANR	14907	RelationalExpression	total > 256		14679	0		>			
ANR	14908	Identifier	total		14679	0					
ANR	14909	PrimaryExpression	256		14679	1					
ANR	14910	CompoundStatement		37:29:1223:1223	14679	1					
ANR	14911	ExpressionStatement	free ( name )	1396:16:42925:42935	14679	0	True				
ANR	14912	CallExpression	free ( name )		14679	0					
ANR	14913	Callee	free		14679	0					
ANR	14914	Identifier	free		14679	0					
ANR	14915	ArgumentList	name		14679	1					
ANR	14916	Argument	name		14679	0					
ANR	14917	Identifier	name		14679	0					
ANR	14918	GotoStatement	goto fin ;	1398:12:42963:42971	14679	2	True				
ANR	14919	Identifier	fin		14679	0					
ANR	14920	ExpressionStatement	w = ( int ) image -> comps [ compno ] . w	1401:8:42992:43023	14679	14	True				
ANR	14921	AssignmentExpression	w = ( int ) image -> comps [ compno ] . w		14679	0		=			
ANR	14922	Identifier	w		14679	0					
ANR	14923	CastExpression	( int ) image -> comps [ compno ] . w		14679	1					
ANR	14924	CastTarget	int		14679	0					
ANR	14925	MemberAccess	image -> comps [ compno ] . w		14679	1					
ANR	14926	ArrayIndexing	image -> comps [ compno ]		14679	0					
ANR	14927	PtrMemberAccess	image -> comps		14679	0					
ANR	14928	Identifier	image		14679	0					
ANR	14929	Identifier	comps		14679	1					
ANR	14930	Identifier	compno		14679	1					
ANR	14931	Identifier	w		14679	1					
ANR	14932	ExpressionStatement	h = ( int ) image -> comps [ compno ] . h	1402:8:43033:43064	14679	15	True				
ANR	14933	AssignmentExpression	h = ( int ) image -> comps [ compno ] . h		14679	0		=			
ANR	14934	Identifier	h		14679	0					
ANR	14935	CastExpression	( int ) image -> comps [ compno ] . h		14679	1					
ANR	14936	CastTarget	int		14679	0					
ANR	14937	MemberAccess	image -> comps [ compno ] . h		14679	1					
ANR	14938	ArrayIndexing	image -> comps [ compno ]		14679	0					
ANR	14939	PtrMemberAccess	image -> comps		14679	0					
ANR	14940	Identifier	image		14679	0					
ANR	14941	Identifier	comps		14679	1					
ANR	14942	Identifier	compno		14679	1					
ANR	14943	Identifier	h		14679	1					
ANR	14944	ExpressionStatement	"fprintf ( fdest , ""PG ML %c %d %d %d\\n"" , comp -> sgnd ? '-' : '+' , comp -> prec , w , h )"	1404:8:43075:43170	14679	16	True				
ANR	14945	CallExpression	"fprintf ( fdest , ""PG ML %c %d %d %d\\n"" , comp -> sgnd ? '-' : '+' , comp -> prec , w , h )"		14679	0					
ANR	14946	Callee	fprintf		14679	0					
ANR	14947	Identifier	fprintf		14679	0					
ANR	14948	ArgumentList	fdest		14679	1					
ANR	14949	Argument	fdest		14679	0					
ANR	14950	Identifier	fdest		14679	0					
ANR	14951	Argument	"""PG ML %c %d %d %d\\n"""		14679	1					
ANR	14952	PrimaryExpression	"""PG ML %c %d %d %d\\n"""		14679	0					
ANR	14953	Argument	comp -> sgnd ? '-' : '+'		14679	2					
ANR	14954	ConditionalExpression	comp -> sgnd ? '-' : '+'		14679	0					
ANR	14955	Condition	comp -> sgnd		14679	0					
ANR	14956	PtrMemberAccess	comp -> sgnd		14679	0					
ANR	14957	Identifier	comp		14679	0					
ANR	14958	Identifier	sgnd		14679	1					
ANR	14959	PrimaryExpression	'-'		14679	1					
ANR	14960	PrimaryExpression	'+'		14679	2					
ANR	14961	Argument	comp -> prec		14679	3					
ANR	14962	PtrMemberAccess	comp -> prec		14679	0					
ANR	14963	Identifier	comp		14679	0					
ANR	14964	Identifier	prec		14679	1					
ANR	14965	Argument	w		14679	4					
ANR	14966	Identifier	w		14679	0					
ANR	14967	Argument	h		14679	5					
ANR	14968	Identifier	h		14679	0					
ANR	14969	IfStatement	if ( comp -> prec <= 8 )		14679	17					
ANR	14970	Condition	comp -> prec <= 8	1407:12:43185:43199	14679	0	True				
ANR	14971	RelationalExpression	comp -> prec <= 8		14679	0		<=			
ANR	14972	PtrMemberAccess	comp -> prec		14679	0					
ANR	14973	Identifier	comp		14679	0					
ANR	14974	Identifier	prec		14679	1					
ANR	14975	PrimaryExpression	8		14679	1					
ANR	14976	CompoundStatement		49:29:1518:1518	14679	1					
ANR	14977	ExpressionStatement	nbytes = 1	1408:12:43216:43226	14679	0	True				
ANR	14978	AssignmentExpression	nbytes = 1		14679	0		=			
ANR	14979	Identifier	nbytes		14679	0					
ANR	14980	PrimaryExpression	1		14679	1					
ANR	14981	ElseStatement	else		14679	0					
ANR	14982	IfStatement	if ( comp -> prec <= 16 )		14679	0					
ANR	14983	Condition	comp -> prec <= 16	1409:19:43247:43262	14679	0	True				
ANR	14984	RelationalExpression	comp -> prec <= 16		14679	0		<=			
ANR	14985	PtrMemberAccess	comp -> prec		14679	0					
ANR	14986	Identifier	comp		14679	0					
ANR	14987	Identifier	prec		14679	1					
ANR	14988	PrimaryExpression	16		14679	1					
ANR	14989	CompoundStatement		51:37:1581:1581	14679	1					
ANR	14990	ExpressionStatement	nbytes = 2	1410:12:43279:43289	14679	0	True				
ANR	14991	AssignmentExpression	nbytes = 2		14679	0		=			
ANR	14992	Identifier	nbytes		14679	0					
ANR	14993	PrimaryExpression	2		14679	1					
ANR	14994	ElseStatement	else		14679	0					
ANR	14995	CompoundStatement		53:15:1622:1622	14679	0					
ANR	14996	ExpressionStatement	nbytes = 4	1412:12:43320:43330	14679	0	True				
ANR	14997	AssignmentExpression	nbytes = 4		14679	0		=			
ANR	14998	Identifier	nbytes		14679	0					
ANR	14999	PrimaryExpression	4		14679	1					
ANR	15000	IfStatement	if ( nbytes == 1 )		14679	18					
ANR	15001	Condition	nbytes == 1	1415:12:43355:43365	14679	0	True				
ANR	15002	EqualityExpression	nbytes == 1		14679	0		==			
ANR	15003	Identifier	nbytes		14679	0					
ANR	15004	PrimaryExpression	1		14679	1					
ANR	15005	CompoundStatement		58:12:1698:1744	14679	1					
ANR	15006	IdentifierDeclStatement	unsigned char * line_buffer = malloc ( ( size_t ) w ) ;	1416:12:43382:43428	14679	0	True				
ANR	15007	IdentifierDecl	* line_buffer = malloc ( ( size_t ) w )		14679	0					
ANR	15008	IdentifierDeclType	unsigned char *		14679	0					
ANR	15009	Identifier	line_buffer		14679	1					
ANR	15010	AssignmentExpression	* line_buffer = malloc ( ( size_t ) w )		14679	2		=			
ANR	15011	Identifier	line_buffer		14679	0					
ANR	15012	CallExpression	malloc ( ( size_t ) w )		14679	1					
ANR	15013	Callee	malloc		14679	0					
ANR	15014	Identifier	malloc		14679	0					
ANR	15015	ArgumentList	( size_t ) w		14679	1					
ANR	15016	Argument	( size_t ) w		14679	0					
ANR	15017	CastExpression	( size_t ) w		14679	0					
ANR	15018	CastTarget	size_t		14679	0					
ANR	15019	Identifier	w		14679	1					
ANR	15020	IfStatement	if ( line_buffer == NULL )		14679	1					
ANR	15021	Condition	line_buffer == NULL	1417:16:43446:43464	14679	0	True				
ANR	15022	EqualityExpression	line_buffer == NULL		14679	0		==			
ANR	15023	Identifier	line_buffer		14679	0					
ANR	15024	Identifier	NULL		14679	1					
ANR	15025	CompoundStatement		59:37:1783:1783	14679	1					
ANR	15026	ExpressionStatement	"fprintf ( stderr , ""Out of memory"" )"	1418:16:43485:43517	14679	0	True				
ANR	15027	CallExpression	"fprintf ( stderr , ""Out of memory"" )"		14679	0					
ANR	15028	Callee	fprintf		14679	0					
ANR	15029	Identifier	fprintf		14679	0					
ANR	15030	ArgumentList	stderr		14679	1					
ANR	15031	Argument	stderr		14679	0					
ANR	15032	Identifier	stderr		14679	0					
ANR	15033	Argument	"""Out of memory"""		14679	1					
ANR	15034	PrimaryExpression	"""Out of memory"""		14679	0					
ANR	15035	IfStatement	if ( total > 256 )		14679	1					
ANR	15036	Condition	total > 256	1419:20:43539:43549	14679	0	True				
ANR	15037	RelationalExpression	total > 256		14679	0		>			
ANR	15038	Identifier	total		14679	0					
ANR	15039	PrimaryExpression	256		14679	1					
ANR	15040	CompoundStatement		61:33:1868:1868	14679	1					
ANR	15041	ExpressionStatement	free ( name )	1420:20:43574:43584	14679	0	True				
ANR	15042	CallExpression	free ( name )		14679	0					
ANR	15043	Callee	free		14679	0					
ANR	15044	Identifier	free		14679	0					
ANR	15045	ArgumentList	name		14679	1					
ANR	15046	Argument	name		14679	0					
ANR	15047	Identifier	name		14679	0					
ANR	15048	GotoStatement	goto fin ;	1422:16:43620:43628	14679	2	True				
ANR	15049	Identifier	fin		14679	0					
ANR	15050	ForStatement	for ( j = 0 ; j < h ; j ++ )		14679	2					
ANR	15051	ForInit	j = 0 ;	1424:17:43661:43666	14679	0	True				
ANR	15052	AssignmentExpression	j = 0		14679	0		=			
ANR	15053	Identifier	j		14679	0					
ANR	15054	PrimaryExpression	0		14679	1					
ANR	15055	Condition	j < h	1424:24:43668:43672	14679	1	True				
ANR	15056	RelationalExpression	j < h		14679	0		<			
ANR	15057	Identifier	j		14679	0					
ANR	15058	Identifier	h		14679	1					
ANR	15059	PostIncDecOperationExpression	j ++	1424:31:43675:43677	14679	2	True				
ANR	15060	Identifier	j		14679	0					
ANR	15061	IncDec	++		14679	1					
ANR	15062	CompoundStatement		66:36:1996:1996	14679	3					
ANR	15063	IfStatement	if ( comp -> prec == 8 && comp -> sgnd == 0 )		14679	0					
ANR	15064	Condition	comp -> prec == 8 && comp -> sgnd == 0	1425:20:43702:43735	14679	0	True				
ANR	15065	AndExpression	comp -> prec == 8 && comp -> sgnd == 0		14679	0		&&			
ANR	15066	EqualityExpression	comp -> prec == 8		14679	0		==			
ANR	15067	PtrMemberAccess	comp -> prec		14679	0					
ANR	15068	Identifier	comp		14679	0					
ANR	15069	Identifier	prec		14679	1					
ANR	15070	PrimaryExpression	8		14679	1					
ANR	15071	EqualityExpression	comp -> sgnd == 0		14679	1		==			
ANR	15072	PtrMemberAccess	comp -> sgnd		14679	0					
ANR	15073	Identifier	comp		14679	0					
ANR	15074	Identifier	sgnd		14679	1					
ANR	15075	PrimaryExpression	0		14679	1					
ANR	15076	CompoundStatement		67:56:2054:2054	14679	1					
ANR	15077	ForStatement	for ( i = 0 ; i < w ; i ++ )		14679	0					
ANR	15078	ForInit	i = 0 ;	1426:25:43765:43770	14679	0	True				
ANR	15079	AssignmentExpression	i = 0		14679	0		=			
ANR	15080	Identifier	i		14679	0					
ANR	15081	PrimaryExpression	0		14679	1					
ANR	15082	Condition	i < w	1426:32:43772:43776	14679	1	True				
ANR	15083	RelationalExpression	i < w		14679	0		<			
ANR	15084	Identifier	i		14679	0					
ANR	15085	Identifier	w		14679	1					
ANR	15086	PostIncDecOperationExpression	i ++	1426:39:43779:43781	14679	2	True				
ANR	15087	Identifier	i		14679	0					
ANR	15088	IncDec	++		14679	1					
ANR	15089	CompoundStatement		68:44:2100:2100	14679	3					
ANR	15090	ExpressionStatement	"line_buffer [ i ] = ( unsigned char ) CLAMP ( image -> comps [ compno ] . data [ j * w + i ] , 0 , 255 )"	1427:24:43810:43955	14679	0	True				
ANR	15091	AssignmentExpression	"line_buffer [ i ] = ( unsigned char ) CLAMP ( image -> comps [ compno ] . data [ j * w + i ] , 0 , 255 )"		14679	0		=			
ANR	15092	ArrayIndexing	line_buffer [ i ]		14679	0					
ANR	15093	Identifier	line_buffer		14679	0					
ANR	15094	Identifier	i		14679	1					
ANR	15095	CastExpression	"( unsigned char ) CLAMP ( image -> comps [ compno ] . data [ j * w + i ] , 0 , 255 )"		14679	1					
ANR	15096	CastTarget	unsigned char		14679	0					
ANR	15097	CallExpression	"CLAMP ( image -> comps [ compno ] . data [ j * w + i ] , 0 , 255 )"		14679	1					
ANR	15098	Callee	CLAMP		14679	0					
ANR	15099	Identifier	CLAMP		14679	0					
ANR	15100	ArgumentList	image -> comps [ compno ] . data [ j * w + i ]		14679	1					
ANR	15101	Argument	image -> comps [ compno ] . data [ j * w + i ]		14679	0					
ANR	15102	ArrayIndexing	image -> comps [ compno ] . data [ j * w + i ]		14679	0					
ANR	15103	MemberAccess	image -> comps [ compno ] . data		14679	0					
ANR	15104	ArrayIndexing	image -> comps [ compno ]		14679	0					
ANR	15105	PtrMemberAccess	image -> comps		14679	0					
ANR	15106	Identifier	image		14679	0					
ANR	15107	Identifier	comps		14679	1					
ANR	15108	Identifier	compno		14679	1					
ANR	15109	Identifier	data		14679	1					
ANR	15110	AdditiveExpression	j * w + i		14679	1		+			
ANR	15111	MultiplicativeExpression	j * w		14679	0		*			
ANR	15112	Identifier	j		14679	0					
ANR	15113	Identifier	w		14679	1					
ANR	15114	Identifier	i		14679	1					
ANR	15115	Argument	0		14679	1					
ANR	15116	PrimaryExpression	0		14679	0					
ANR	15117	Argument	255		14679	2					
ANR	15118	PrimaryExpression	255		14679	0					
ANR	15119	ElseStatement	else		14679	0					
ANR	15120	CompoundStatement		72:23:2318:2318	14679	0					
ANR	15121	ForStatement	for ( i = 0 ; i < w ; i ++ )		14679	0					
ANR	15122	ForInit	i = 0 ;	1431:25:44029:44034	14679	0	True				
ANR	15123	AssignmentExpression	i = 0		14679	0		=			
ANR	15124	Identifier	i		14679	0					
ANR	15125	PrimaryExpression	0		14679	1					
ANR	15126	Condition	i < w	1431:32:44036:44040	14679	1	True				
ANR	15127	RelationalExpression	i < w		14679	0		<			
ANR	15128	Identifier	i		14679	0					
ANR	15129	Identifier	w		14679	1					
ANR	15130	PostIncDecOperationExpression	i ++	1431:39:44043:44045	14679	2	True				
ANR	15131	Identifier	i		14679	0					
ANR	15132	IncDec	++		14679	1					
ANR	15133	CompoundStatement		73:44:2364:2364	14679	3					
ANR	15134	ExpressionStatement	"line_buffer [ i ] = ( unsigned char ) clamp ( image -> comps [ compno ] . data [ j * w + i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"	1432:24:44074:44272	14679	0	True				
ANR	15135	AssignmentExpression	"line_buffer [ i ] = ( unsigned char ) clamp ( image -> comps [ compno ] . data [ j * w + i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"		14679	0		=			
ANR	15136	ArrayIndexing	line_buffer [ i ]		14679	0					
ANR	15137	Identifier	line_buffer		14679	0					
ANR	15138	Identifier	i		14679	1					
ANR	15139	CastExpression	"( unsigned char ) clamp ( image -> comps [ compno ] . data [ j * w + i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"		14679	1					
ANR	15140	CastTarget	unsigned char		14679	0					
ANR	15141	CallExpression	"clamp ( image -> comps [ compno ] . data [ j * w + i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"		14679	1					
ANR	15142	Callee	clamp		14679	0					
ANR	15143	Identifier	clamp		14679	0					
ANR	15144	ArgumentList	image -> comps [ compno ] . data [ j * w + i ]		14679	1					
ANR	15145	Argument	image -> comps [ compno ] . data [ j * w + i ]		14679	0					
ANR	15146	ArrayIndexing	image -> comps [ compno ] . data [ j * w + i ]		14679	0					
ANR	15147	MemberAccess	image -> comps [ compno ] . data		14679	0					
ANR	15148	ArrayIndexing	image -> comps [ compno ]		14679	0					
ANR	15149	PtrMemberAccess	image -> comps		14679	0					
ANR	15150	Identifier	image		14679	0					
ANR	15151	Identifier	comps		14679	1					
ANR	15152	Identifier	compno		14679	1					
ANR	15153	Identifier	data		14679	1					
ANR	15154	AdditiveExpression	j * w + i		14679	1		+			
ANR	15155	MultiplicativeExpression	j * w		14679	0		*			
ANR	15156	Identifier	j		14679	0					
ANR	15157	Identifier	w		14679	1					
ANR	15158	Identifier	i		14679	1					
ANR	15159	Argument	( int ) comp -> prec		14679	1					
ANR	15160	CastExpression	( int ) comp -> prec		14679	0					
ANR	15161	CastTarget	int		14679	0					
ANR	15162	PtrMemberAccess	comp -> prec		14679	1					
ANR	15163	Identifier	comp		14679	0					
ANR	15164	Identifier	prec		14679	1					
ANR	15165	Argument	( int ) comp -> sgnd		14679	2					
ANR	15166	CastExpression	( int ) comp -> sgnd		14679	0					
ANR	15167	CastTarget	int		14679	0					
ANR	15168	PtrMemberAccess	comp -> sgnd		14679	1					
ANR	15169	Identifier	comp		14679	0					
ANR	15170	Identifier	sgnd		14679	1					
ANR	15171	ExpressionStatement	"res = fwrite ( line_buffer , 1 , ( size_t ) w , fdest )"	1437:16:44330:44376	14679	1	True				
ANR	15172	AssignmentExpression	"res = fwrite ( line_buffer , 1 , ( size_t ) w , fdest )"		14679	0		=			
ANR	15173	Identifier	res		14679	0					
ANR	15174	CallExpression	"fwrite ( line_buffer , 1 , ( size_t ) w , fdest )"		14679	1					
ANR	15175	Callee	fwrite		14679	0					
ANR	15176	Identifier	fwrite		14679	0					
ANR	15177	ArgumentList	line_buffer		14679	1					
ANR	15178	Argument	line_buffer		14679	0					
ANR	15179	Identifier	line_buffer		14679	0					
ANR	15180	Argument	1		14679	1					
ANR	15181	PrimaryExpression	1		14679	0					
ANR	15182	Argument	( size_t ) w		14679	2					
ANR	15183	CastExpression	( size_t ) w		14679	0					
ANR	15184	CastTarget	size_t		14679	0					
ANR	15185	Identifier	w		14679	1					
ANR	15186	Argument	fdest		14679	3					
ANR	15187	Identifier	fdest		14679	0					
ANR	15188	IfStatement	if ( res != ( size_t ) w )		14679	2					
ANR	15189	Condition	res != ( size_t ) w	1438:20:44398:44413	14679	0	True				
ANR	15190	EqualityExpression	res != ( size_t ) w		14679	0		!=			
ANR	15191	Identifier	res		14679	0					
ANR	15192	CastExpression	( size_t ) w		14679	1					
ANR	15193	CastTarget	size_t		14679	0					
ANR	15194	Identifier	w		14679	1					
ANR	15195	CompoundStatement		80:38:2732:2732	14679	1					
ANR	15196	ExpressionStatement	"fprintf ( stderr , ""failed to write %d bytes for %s\\n"" , w , name )"	1439:20:44438:44499	14679	0	True				
ANR	15197	CallExpression	"fprintf ( stderr , ""failed to write %d bytes for %s\\n"" , w , name )"		14679	0					
ANR	15198	Callee	fprintf		14679	0					
ANR	15199	Identifier	fprintf		14679	0					
ANR	15200	ArgumentList	stderr		14679	1					
ANR	15201	Argument	stderr		14679	0					
ANR	15202	Identifier	stderr		14679	0					
ANR	15203	Argument	"""failed to write %d bytes for %s\\n"""		14679	1					
ANR	15204	PrimaryExpression	"""failed to write %d bytes for %s\\n"""		14679	0					
ANR	15205	Argument	w		14679	2					
ANR	15206	Identifier	w		14679	0					
ANR	15207	Argument	name		14679	3					
ANR	15208	Identifier	name		14679	0					
ANR	15209	IfStatement	if ( total > 256 )		14679	1					
ANR	15210	Condition	total > 256	1440:24:44525:44535	14679	0	True				
ANR	15211	RelationalExpression	total > 256		14679	0		>			
ANR	15212	Identifier	total		14679	0					
ANR	15213	PrimaryExpression	256		14679	1					
ANR	15214	CompoundStatement		82:37:2854:2854	14679	1					
ANR	15215	ExpressionStatement	free ( name )	1441:24:44564:44574	14679	0	True				
ANR	15216	CallExpression	free ( name )		14679	0					
ANR	15217	Callee	free		14679	0					
ANR	15218	Identifier	free		14679	0					
ANR	15219	ArgumentList	name		14679	1					
ANR	15220	Argument	name		14679	0					
ANR	15221	Identifier	name		14679	0					
ANR	15222	ExpressionStatement	free ( line_buffer )	1443:20:44618:44635	14679	2	True				
ANR	15223	CallExpression	free ( line_buffer )		14679	0					
ANR	15224	Callee	free		14679	0					
ANR	15225	Identifier	free		14679	0					
ANR	15226	ArgumentList	line_buffer		14679	1					
ANR	15227	Argument	line_buffer		14679	0					
ANR	15228	Identifier	line_buffer		14679	0					
ANR	15229	GotoStatement	goto fin ;	1444:20:44657:44665	14679	3	True				
ANR	15230	Identifier	fin		14679	0					
ANR	15231	ExpressionStatement	free ( line_buffer )	1447:12:44711:44728	14679	3	True				
ANR	15232	CallExpression	free ( line_buffer )		14679	0					
ANR	15233	Callee	free		14679	0					
ANR	15234	Identifier	free		14679	0					
ANR	15235	ArgumentList	line_buffer		14679	1					
ANR	15236	Argument	line_buffer		14679	0					
ANR	15237	Identifier	line_buffer		14679	0					
ANR	15238	ElseStatement	else		14679	0					
ANR	15239	CompoundStatement		90:15:3061:3061	14679	0					
ANR	15240	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		14679	0					
ANR	15241	ForInit	i = 0 ;	1450:17:44765:44770	14679	0	True				
ANR	15242	AssignmentExpression	i = 0		14679	0		=			
ANR	15243	Identifier	i		14679	0					
ANR	15244	PrimaryExpression	0		14679	1					
ANR	15245	Condition	i < w * h	1450:24:44772:44780	14679	1	True				
ANR	15246	RelationalExpression	i < w * h		14679	0		<			
ANR	15247	Identifier	i		14679	0					
ANR	15248	MultiplicativeExpression	w * h		14679	1		*			
ANR	15249	Identifier	w		14679	0					
ANR	15250	Identifier	h		14679	1					
ANR	15251	PostIncDecOperationExpression	i ++	1450:35:44783:44785	14679	2	True				
ANR	15252	Identifier	i		14679	0					
ANR	15253	IncDec	++		14679	1					
ANR	15254	CompoundStatement		94:16:3192:3315	14679	3					
ANR	15255	IdentifierDeclStatement	"const int val = clamp ( image -> comps [ compno ] . data [ i ] , ( int ) comp -> prec , ( int ) comp -> sgnd ) ;"	1452:16:44876:44999	14679	0	True				
ANR	15256	IdentifierDecl	"val = clamp ( image -> comps [ compno ] . data [ i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"		14679	0					
ANR	15257	IdentifierDeclType	const int		14679	0					
ANR	15258	Identifier	val		14679	1					
ANR	15259	AssignmentExpression	"val = clamp ( image -> comps [ compno ] . data [ i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"		14679	2		=			
ANR	15260	Identifier	val		14679	0					
ANR	15261	CallExpression	"clamp ( image -> comps [ compno ] . data [ i ] , ( int ) comp -> prec , ( int ) comp -> sgnd )"		14679	1					
ANR	15262	Callee	clamp		14679	0					
ANR	15263	Identifier	clamp		14679	0					
ANR	15264	ArgumentList	image -> comps [ compno ] . data [ i ]		14679	1					
ANR	15265	Argument	image -> comps [ compno ] . data [ i ]		14679	0					
ANR	15266	ArrayIndexing	image -> comps [ compno ] . data [ i ]		14679	0					
ANR	15267	MemberAccess	image -> comps [ compno ] . data		14679	0					
ANR	15268	ArrayIndexing	image -> comps [ compno ]		14679	0					
ANR	15269	PtrMemberAccess	image -> comps		14679	0					
ANR	15270	Identifier	image		14679	0					
ANR	15271	Identifier	comps		14679	1					
ANR	15272	Identifier	compno		14679	1					
ANR	15273	Identifier	data		14679	1					
ANR	15274	Identifier	i		14679	1					
ANR	15275	Argument	( int ) comp -> prec		14679	1					
ANR	15276	CastExpression	( int ) comp -> prec		14679	0					
ANR	15277	CastTarget	int		14679	0					
ANR	15278	PtrMemberAccess	comp -> prec		14679	1					
ANR	15279	Identifier	comp		14679	0					
ANR	15280	Identifier	prec		14679	1					
ANR	15281	Argument	( int ) comp -> sgnd		14679	2					
ANR	15282	CastExpression	( int ) comp -> sgnd		14679	0					
ANR	15283	CastTarget	int		14679	0					
ANR	15284	PtrMemberAccess	comp -> sgnd		14679	1					
ANR	15285	Identifier	comp		14679	0					
ANR	15286	Identifier	sgnd		14679	1					
ANR	15287	ForStatement	for ( j = nbytes - 1 ; j >= 0 ; j -- )		14679	1					
ANR	15288	ForInit	j = nbytes - 1 ;	1455:21:45023:45037	14679	0	True				
ANR	15289	AssignmentExpression	j = nbytes - 1		14679	0		=			
ANR	15290	Identifier	j		14679	0					
ANR	15291	AdditiveExpression	nbytes - 1		14679	1		-			
ANR	15292	Identifier	nbytes		14679	0					
ANR	15293	PrimaryExpression	1		14679	1					
ANR	15294	Condition	j >= 0	1455:37:45039:45044	14679	1	True				
ANR	15295	RelationalExpression	j >= 0		14679	0		>=			
ANR	15296	Identifier	j		14679	0					
ANR	15297	PrimaryExpression	0		14679	1					
ANR	15298	PostIncDecOperationExpression	j --	1455:45:45047:45049	14679	2	True				
ANR	15299	Identifier	j		14679	0					
ANR	15300	IncDec	--		14679	1					
ANR	15301	CompoundStatement		99:20:3441:3478	14679	3					
ANR	15302	IdentifierDeclStatement	int v = ( int ) ( val >> ( j * 8 ) ) ;	1456:20:45074:45103	14679	0	True				
ANR	15303	IdentifierDecl	v = ( int ) ( val >> ( j * 8 ) )		14679	0					
ANR	15304	IdentifierDeclType	int		14679	0					
ANR	15305	Identifier	v		14679	1					
ANR	15306	AssignmentExpression	v = ( int ) ( val >> ( j * 8 ) )		14679	2		=			
ANR	15307	Identifier	v		14679	0					
ANR	15308	CastExpression	( int ) ( val >> ( j * 8 ) )		14679	1					
ANR	15309	CastTarget	int		14679	0					
ANR	15310	ShiftExpression	val >> ( j * 8 )		14679	1		>>			
ANR	15311	Identifier	val		14679	0					
ANR	15312	MultiplicativeExpression	j * 8		14679	1		*			
ANR	15313	Identifier	j		14679	0					
ANR	15314	PrimaryExpression	8		14679	1					
ANR	15315	IdentifierDeclStatement	unsigned char byte = ( unsigned char ) v ;	1457:20:45125:45162	14679	1	True				
ANR	15316	IdentifierDecl	byte = ( unsigned char ) v		14679	0					
ANR	15317	IdentifierDeclType	unsigned char		14679	0					
ANR	15318	Identifier	byte		14679	1					
ANR	15319	AssignmentExpression	byte = ( unsigned char ) v		14679	2		=			
ANR	15320	Identifier	byte		14679	0					
ANR	15321	CastExpression	( unsigned char ) v		14679	1					
ANR	15322	CastTarget	unsigned char		14679	0					
ANR	15323	Identifier	v		14679	1					
ANR	15324	ExpressionStatement	"res = fwrite ( & byte , 1 , 1 , fdest )"	1458:20:45184:45216	14679	2	True				
ANR	15325	AssignmentExpression	"res = fwrite ( & byte , 1 , 1 , fdest )"		14679	0		=			
ANR	15326	Identifier	res		14679	0					
ANR	15327	CallExpression	"fwrite ( & byte , 1 , 1 , fdest )"		14679	1					
ANR	15328	Callee	fwrite		14679	0					
ANR	15329	Identifier	fwrite		14679	0					
ANR	15330	ArgumentList	& byte		14679	1					
ANR	15331	Argument	& byte		14679	0					
ANR	15332	UnaryOperationExpression	& byte		14679	0					
ANR	15333	UnaryOperator	&		14679	0					
ANR	15334	Identifier	byte		14679	1					
ANR	15335	Argument	1		14679	1					
ANR	15336	PrimaryExpression	1		14679	0					
ANR	15337	Argument	1		14679	2					
ANR	15338	PrimaryExpression	1		14679	0					
ANR	15339	Argument	fdest		14679	3					
ANR	15340	Identifier	fdest		14679	0					
ANR	15341	IfStatement	if ( res < 1 )		14679	3					
ANR	15342	Condition	res < 1	1460:24:45243:45249	14679	0	True				
ANR	15343	RelationalExpression	res < 1		14679	0		<			
ANR	15344	Identifier	res		14679	0					
ANR	15345	PrimaryExpression	1		14679	1					
ANR	15346	CompoundStatement		102:33:3568:3568	14679	1					
ANR	15347	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , name )"	1461:24:45278:45334	14679	0	True				
ANR	15348	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , name )"		14679	0					
ANR	15349	Callee	fprintf		14679	0					
ANR	15350	Identifier	fprintf		14679	0					
ANR	15351	ArgumentList	stderr		14679	1					
ANR	15352	Argument	stderr		14679	0					
ANR	15353	Identifier	stderr		14679	0					
ANR	15354	Argument	"""failed to write 1 byte for %s\\n"""		14679	1					
ANR	15355	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		14679	0					
ANR	15356	Argument	name		14679	2					
ANR	15357	Identifier	name		14679	0					
ANR	15358	IfStatement	if ( total > 256 )		14679	1					
ANR	15359	Condition	total > 256	1462:28:45364:45374	14679	0	True				
ANR	15360	RelationalExpression	total > 256		14679	0		>			
ANR	15361	Identifier	total		14679	0					
ANR	15362	PrimaryExpression	256		14679	1					
ANR	15363	CompoundStatement		104:41:3693:3693	14679	1					
ANR	15364	ExpressionStatement	free ( name )	1463:28:45407:45417	14679	0	True				
ANR	15365	CallExpression	free ( name )		14679	0					
ANR	15366	Callee	free		14679	0					
ANR	15367	Identifier	free		14679	0					
ANR	15368	ArgumentList	name		14679	1					
ANR	15369	Argument	name		14679	0					
ANR	15370	Identifier	name		14679	0					
ANR	15371	GotoStatement	goto fin ;	1465:24:45469:45477	14679	2	True				
ANR	15372	Identifier	fin		14679	0					
ANR	15373	IfStatement	if ( total > 256 )		14679	19					
ANR	15374	Condition	total > 256	1471:12:45556:45566	14679	0	True				
ANR	15375	RelationalExpression	total > 256		14679	0		>			
ANR	15376	Identifier	total		14679	0					
ANR	15377	PrimaryExpression	256		14679	1					
ANR	15378	CompoundStatement		113:25:3885:3885	14679	1					
ANR	15379	ExpressionStatement	free ( name )	1472:12:45583:45593	14679	0	True				
ANR	15380	CallExpression	free ( name )		14679	0					
ANR	15381	Callee	free		14679	0					
ANR	15382	Identifier	free		14679	0					
ANR	15383	ArgumentList	name		14679	1					
ANR	15384	Argument	name		14679	0					
ANR	15385	Identifier	name		14679	0					
ANR	15386	ExpressionStatement	fclose ( fdest )	1474:8:45613:45626	14679	20	True				
ANR	15387	CallExpression	fclose ( fdest )		14679	0					
ANR	15388	Callee	fclose		14679	0					
ANR	15389	Identifier	fclose		14679	0					
ANR	15390	ArgumentList	fdest		14679	1					
ANR	15391	Argument	fdest		14679	0					
ANR	15392	Identifier	fdest		14679	0					
ANR	15393	ExpressionStatement	fdest = NULL	1475:8:45636:45648	14679	21	True				
ANR	15394	AssignmentExpression	fdest = NULL		14679	0		=			
ANR	15395	Identifier	fdest		14679	0					
ANR	15396	Identifier	NULL		14679	1					
ANR	15397	ExpressionStatement	fails = 0	1477:4:45660:45669	14679	5	True				
ANR	15398	AssignmentExpression	fails = 0		14679	0		=			
ANR	15399	Identifier	fails		14679	0					
ANR	15400	PrimaryExpression	0		14679	1					
ANR	15401	Label	fin :	1478:0:45671:45674	14679	6	True				
ANR	15402	Identifier	fin		14679	0					
ANR	15403	IfStatement	if ( fdest )		14679	7					
ANR	15404	Condition	fdest	1479:8:45684:45688	14679	0	True				
ANR	15405	Identifier	fdest		14679	0					
ANR	15406	CompoundStatement		121:15:4007:4007	14679	1					
ANR	15407	ExpressionStatement	fclose ( fdest )	1480:8:45701:45714	14679	0	True				
ANR	15408	CallExpression	fclose ( fdest )		14679	0					
ANR	15409	Callee	fclose		14679	0					
ANR	15410	Identifier	fclose		14679	0					
ANR	15411	ArgumentList	fdest		14679	1					
ANR	15412	Argument	fdest		14679	0					
ANR	15413	Identifier	fdest		14679	0					
ANR	15414	ReturnStatement	return fails ;	1483:4:45727:45739	14679	8	True				
ANR	15415	Identifier	fails		14679	0					
ANR	15416	ReturnType	int		14679	1					
ANR	15417	Identifier	imagetopgx		14679	2					
ANR	15418	ParameterList	"opj_image_t * image , const char * outfile"		14679	3					
ANR	15419	Parameter	opj_image_t * image	1358:15:41641:41659	14679	0	True				
ANR	15420	ParameterType	opj_image_t *		14679	0					
ANR	15421	Identifier	image		14679	1					
ANR	15422	Parameter	const char * outfile	1358:36:41662:41680	14679	1	True				
ANR	15423	ParameterType	const char *		14679	0					
ANR	15424	Identifier	outfile		14679	1					
ANR	15425	CFGEntryNode	ENTRY		14679		True				
ANR	15426	CFGExitNode	EXIT		14679		True				
ANR	15427	Symbol	* w		14679						
ANR	15428	Symbol	image -> comps [ compno ] . h		14679						
ANR	15429	Symbol	& byte		14679						
ANR	15430	Symbol	image -> comps		14679						
ANR	15431	Symbol	strlen		14679						
ANR	15432	Symbol	* dotpos		14679						
ANR	15433	Symbol	* image -> comps [ compno ] . data		14679						
ANR	15434	Symbol	* * * image		14679						
ANR	15435	Symbol	* * image -> comps		14679						
ANR	15436	Symbol	image -> comps [ compno ] . w		14679						
ANR	15437	Symbol	dotpos		14679						
ANR	15438	Symbol	clamp		14679						
ANR	15439	Symbol	val		14679						
ANR	15440	Symbol	image		14679						
ANR	15441	Symbol	comp		14679						
ANR	15442	Symbol	res		14679						
ANR	15443	Symbol	NULL		14679						
ANR	15444	Symbol	byte		14679						
ANR	15445	Symbol	stderr		14679						
ANR	15446	Symbol	* line_buffer		14679						
ANR	15447	Symbol	compno		14679						
ANR	15448	Symbol	* compno		14679						
ANR	15449	Symbol	name		14679						
ANR	15450	Symbol	* outfile		14679						
ANR	15451	Symbol	image -> comps [ compno ] . data		14679						
ANR	15452	Symbol	* image		14679						
ANR	15453	Symbol	fdest		14679						
ANR	15454	Symbol	outfile		14679						
ANR	15455	Symbol	CLAMP		14679						
ANR	15456	Symbol	line_buffer		14679						
ANR	15457	Symbol	total		14679						
ANR	15458	Symbol	* * image		14679						
ANR	15459	Symbol	* comp		14679						
ANR	15460	Symbol	fails		14679						
ANR	15461	Symbol	malloc		14679						
ANR	15462	Symbol	fopen		14679						
ANR	15463	Symbol	* image -> comps		14679						
ANR	15464	Symbol	h		14679						
ANR	15465	Symbol	i		14679						
ANR	15466	Symbol	fwrite		14679						
ANR	15467	Symbol	j		14679						
ANR	15468	Symbol	comp -> prec		14679						
ANR	15469	Symbol	* * compno		14679						
ANR	15470	Symbol	nbytes		14679						
ANR	15471	Symbol	image -> numcomps		14679						
ANR	15472	Symbol	olen		14679						
ANR	15473	Symbol	* i		14679						
ANR	15474	Symbol	* j		14679						
ANR	15475	Symbol	bname		14679						
ANR	15476	Symbol	v		14679						
ANR	15477	Symbol	w		14679						
ANR	15478	Symbol	comp -> sgnd		14679						
ANR	15479	ClassDef	pnm_header	1492:0:45810:45926							
ANR	15480	DeclStmt									
ANR	15481	Decl							int	int	width
ANR	15482	Decl							int	int	height
ANR	15483	Decl							int	int	maxval
ANR	15484	Decl							int	int	depth
ANR	15485	Decl							int	int	format
ANR	15486	DeclStmt									
ANR	15487	Decl							char	char	rgb
ANR	15488	Decl							char	char	rgba
ANR	15489	Decl							char	char	gray
ANR	15490	Decl							char	char	graya
ANR	15491	Decl							char	char	bw
ANR	15492	DeclStmt									
ANR	15493	Decl							char	char	ok
ANR	15494	Function	skip_white	1498:0:45930:46241							
ANR	15495	FunctionDef	skip_white (char * s)		15494	0					
ANR	15496	CompoundStatement		1499:0:45963:46241	15494	0					
ANR	15497	IfStatement	if ( s != NULL )		15494	0					
ANR	15498	Condition	s != NULL	1500:8:45973:45981	15494	0	True				
ANR	15499	EqualityExpression	s != NULL		15494	0		!=			
ANR	15500	Identifier	s		15494	0					
ANR	15501	Identifier	NULL		15494	1					
ANR	15502	CompoundStatement		2:19:20:20	15494	1					
ANR	15503	WhileStatement	while ( * s )		15494	0					
ANR	15504	Condition	* s	1501:15:46001:46002	15494	0	True				
ANR	15505	UnaryOperationExpression	* s		15494	0					
ANR	15506	UnaryOperator	*		15494	0					
ANR	15507	Identifier	s		15494	1					
ANR	15508	CompoundStatement		3:19:41:41	15494	1					
ANR	15509	IfStatement	if ( * s == '\\n' || * s == '\\r' )		15494	0					
ANR	15510	Condition	* s == '\\n' || * s == '\\r'	1502:16:46023:46046	15494	0	True				
ANR	15511	OrExpression	* s == '\\n' || * s == '\\r'		15494	0		||			
ANR	15512	EqualityExpression	* s == '\\n'		15494	0		==			
ANR	15513	UnaryOperationExpression	* s		15494	0					
ANR	15514	UnaryOperator	*		15494	0					
ANR	15515	Identifier	s		15494	1					
ANR	15516	PrimaryExpression	'\\n'		15494	1					
ANR	15517	EqualityExpression	* s == '\\r'		15494	1		==			
ANR	15518	UnaryOperationExpression	* s		15494	0					
ANR	15519	UnaryOperator	*		15494	0					
ANR	15520	Identifier	s		15494	1					
ANR	15521	PrimaryExpression	'\\r'		15494	1					
ANR	15522	CompoundStatement		4:42:85:85	15494	1					
ANR	15523	ReturnStatement	return NULL ;	1503:16:46067:46078	15494	0	True				
ANR	15524	Identifier	NULL		15494	0					
ANR	15525	IfStatement	if ( isspace ( * s ) )		15494	1					
ANR	15526	Condition	isspace ( * s )	1505:16:46110:46120	15494	0	True				
ANR	15527	CallExpression	isspace ( * s )		15494	0					
ANR	15528	Callee	isspace		15494	0					
ANR	15529	Identifier	isspace		15494	0					
ANR	15530	ArgumentList	* s		15494	1					
ANR	15531	Argument	* s		15494	0					
ANR	15532	UnaryOperationExpression	* s		15494	0					
ANR	15533	UnaryOperator	*		15494	0					
ANR	15534	Identifier	s		15494	1					
ANR	15535	CompoundStatement		7:29:159:159	15494	1					
ANR	15536	ExpressionStatement	++ s	1506:16:46141:46144	15494	0	True				
ANR	15537	UnaryExpression	++ s		15494	0					
ANR	15538	IncDec	++		15494	0					
ANR	15539	Identifier	s		15494	1					
ANR	15540	ContinueStatement	continue ;	1507:16:46162:46170	15494	1	True				
ANR	15541	ReturnStatement	return s ;	1509:12:46198:46206	15494	2	True				
ANR	15542	Identifier	s		15494	0					
ANR	15543	ReturnStatement	return NULL ;	1512:4:46228:46239	15494	1	True				
ANR	15544	Identifier	NULL		15494	0					
ANR	15545	ReturnType	static char *		15494	1					
ANR	15546	Identifier	skip_white		15494	2					
ANR	15547	ParameterList	char * s		15494	3					
ANR	15548	Parameter	char * s	1498:24:45954:45960	15494	0	True				
ANR	15549	ParameterType	char *		15494	0					
ANR	15550	Identifier	s		15494	1					
ANR	15551	CFGEntryNode	ENTRY		15494		True				
ANR	15552	CFGExitNode	EXIT		15494		True				
ANR	15553	Symbol	s		15494						
ANR	15554	Symbol	NULL		15494						
ANR	15555	Symbol	isspace		15494						
ANR	15556	Symbol	* s		15494						
ANR	15557	Function	skip_int	1515:0:46244:46596							
ANR	15558	FunctionDef	"skip_int (char * start , int * out_n)"		15557	0					
ANR	15559	CompoundStatement		1516:0:46291:46596	15557	0					
ANR	15560	IdentifierDeclStatement	char * s ;	1517:4:46297:46304	15557	0	True				
ANR	15561	IdentifierDecl	* s		15557	0					
ANR	15562	IdentifierDeclType	char *		15557	0					
ANR	15563	Identifier	s		15557	1					
ANR	15564	IdentifierDeclStatement	char c ;	1518:4:46310:46316	15557	1	True				
ANR	15565	IdentifierDecl	c		15557	0					
ANR	15566	IdentifierDeclType	char		15557	0					
ANR	15567	Identifier	c		15557	1					
ANR	15568	ExpressionStatement	* out_n = 0	1520:4:46323:46333	15557	2	True				
ANR	15569	AssignmentExpression	* out_n = 0		15557	0		=			
ANR	15570	UnaryOperationExpression	* out_n		15557	0					
ANR	15571	UnaryOperator	*		15557	0					
ANR	15572	Identifier	out_n		15557	1					
ANR	15573	PrimaryExpression	0		15557	1					
ANR	15574	ExpressionStatement	s = skip_white ( start )	1522:4:46340:46361	15557	3	True				
ANR	15575	AssignmentExpression	s = skip_white ( start )		15557	0		=			
ANR	15576	Identifier	s		15557	0					
ANR	15577	CallExpression	skip_white ( start )		15557	1					
ANR	15578	Callee	skip_white		15557	0					
ANR	15579	Identifier	skip_white		15557	0					
ANR	15580	ArgumentList	start		15557	1					
ANR	15581	Argument	start		15557	0					
ANR	15582	Identifier	start		15557	0					
ANR	15583	IfStatement	if ( s == NULL )		15557	4					
ANR	15584	Condition	s == NULL	1523:8:46371:46379	15557	0	True				
ANR	15585	EqualityExpression	s == NULL		15557	0		==			
ANR	15586	Identifier	s		15557	0					
ANR	15587	Identifier	NULL		15557	1					
ANR	15588	CompoundStatement		8:19:90:90	15557	1					
ANR	15589	ReturnStatement	return NULL ;	1524:8:46392:46403	15557	0	True				
ANR	15590	Identifier	NULL		15557	0					
ANR	15591	ExpressionStatement	start = s	1526:4:46415:46424	15557	5	True				
ANR	15592	AssignmentExpression	start = s		15557	0		=			
ANR	15593	Identifier	start		15557	0					
ANR	15594	Identifier	s		15557	1					
ANR	15595	WhileStatement	while ( * s )		15557	6					
ANR	15596	Condition	* s	1528:11:46438:46439	15557	0	True				
ANR	15597	UnaryOperationExpression	* s		15557	0					
ANR	15598	UnaryOperator	*		15557	0					
ANR	15599	Identifier	s		15557	1					
ANR	15600	CompoundStatement		13:15:150:150	15557	1					
ANR	15601	IfStatement	if ( ! isdigit ( * s ) )		15557	0					
ANR	15602	Condition	! isdigit ( * s )	1529:12:46456:46467	15557	0	True				
ANR	15603	UnaryOperationExpression	! isdigit ( * s )		15557	0					
ANR	15604	UnaryOperator	!		15557	0					
ANR	15605	CallExpression	isdigit ( * s )		15557	1					
ANR	15606	Callee	isdigit		15557	0					
ANR	15607	Identifier	isdigit		15557	0					
ANR	15608	ArgumentList	* s		15557	1					
ANR	15609	Argument	* s		15557	0					
ANR	15610	UnaryOperationExpression	* s		15557	0					
ANR	15611	UnaryOperator	*		15557	0					
ANR	15612	Identifier	s		15557	1					
ANR	15613	CompoundStatement		14:26:178:178	15557	1					
ANR	15614	BreakStatement	break ;	1530:12:46484:46489	15557	0	True				
ANR	15615	ExpressionStatement	++ s	1532:8:46509:46512	15557	1	True				
ANR	15616	UnaryExpression	++ s		15557	0					
ANR	15617	IncDec	++		15557	0					
ANR	15618	Identifier	s		15557	1					
ANR	15619	ExpressionStatement	c = * s	1534:4:46524:46530	15557	7	True				
ANR	15620	AssignmentExpression	c = * s		15557	0		=			
ANR	15621	Identifier	c		15557	0					
ANR	15622	UnaryOperationExpression	* s		15557	1					
ANR	15623	UnaryOperator	*		15557	0					
ANR	15624	Identifier	s		15557	1					
ANR	15625	ExpressionStatement	* s = 0	1535:4:46536:46542	15557	8	True				
ANR	15626	AssignmentExpression	* s = 0		15557	0		=			
ANR	15627	UnaryOperationExpression	* s		15557	0					
ANR	15628	UnaryOperator	*		15557	0					
ANR	15629	Identifier	s		15557	1					
ANR	15630	PrimaryExpression	0		15557	1					
ANR	15631	ExpressionStatement	* out_n = atoi ( start )	1536:4:46548:46568	15557	9	True				
ANR	15632	AssignmentExpression	* out_n = atoi ( start )		15557	0		=			
ANR	15633	UnaryOperationExpression	* out_n		15557	0					
ANR	15634	UnaryOperator	*		15557	0					
ANR	15635	Identifier	out_n		15557	1					
ANR	15636	CallExpression	atoi ( start )		15557	1					
ANR	15637	Callee	atoi		15557	0					
ANR	15638	Identifier	atoi		15557	0					
ANR	15639	ArgumentList	start		15557	1					
ANR	15640	Argument	start		15557	0					
ANR	15641	Identifier	start		15557	0					
ANR	15642	ExpressionStatement	* s = c	1537:4:46574:46580	15557	10	True				
ANR	15643	AssignmentExpression	* s = c		15557	0		=			
ANR	15644	UnaryOperationExpression	* s		15557	0					
ANR	15645	UnaryOperator	*		15557	0					
ANR	15646	Identifier	s		15557	1					
ANR	15647	Identifier	c		15557	1					
ANR	15648	ReturnStatement	return s ;	1538:4:46586:46594	15557	11	True				
ANR	15649	Identifier	s		15557	0					
ANR	15650	ReturnType	static char *		15557	1					
ANR	15651	Identifier	skip_int		15557	2					
ANR	15652	ParameterList	"char * start , int * out_n"		15557	3					
ANR	15653	Parameter	char * start	1515:22:46266:46276	15557	0	True				
ANR	15654	ParameterType	char *		15557	0					
ANR	15655	Identifier	start		15557	1					
ANR	15656	Parameter	int * out_n	1515:35:46279:46288	15557	1	True				
ANR	15657	ParameterType	int *		15557	0					
ANR	15658	Identifier	out_n		15557	1					
ANR	15659	CFGEntryNode	ENTRY		15557		True				
ANR	15660	CFGExitNode	EXIT		15557		True				
ANR	15661	Symbol	atoi		15557						
ANR	15662	Symbol	s		15557						
ANR	15663	Symbol	c		15557						
ANR	15664	Symbol	NULL		15557						
ANR	15665	Symbol	* out_n		15557						
ANR	15666	Symbol	start		15557						
ANR	15667	Symbol	* s		15557						
ANR	15668	Symbol	isdigit		15557						
ANR	15669	Symbol	out_n		15557						
ANR	15670	Symbol	skip_white		15557						
ANR	15671	Function	skip_idf	1541:0:46599:46983							
ANR	15672	FunctionDef	"skip_idf (char * start , char out_idf [ 256 ])"		15671	0					
ANR	15673	CompoundStatement		1542:0:46653:46983	15671	0					
ANR	15674	IdentifierDeclStatement	char * s ;	1543:4:46659:46666	15671	0	True				
ANR	15675	IdentifierDecl	* s		15671	0					
ANR	15676	IdentifierDeclType	char *		15671	0					
ANR	15677	Identifier	s		15671	1					
ANR	15678	IdentifierDeclStatement	char c ;	1544:4:46672:46678	15671	1	True				
ANR	15679	IdentifierDecl	c		15671	0					
ANR	15680	IdentifierDeclType	char		15671	0					
ANR	15681	Identifier	c		15671	1					
ANR	15682	ExpressionStatement	s = skip_white ( start )	1546:4:46685:46706	15671	2	True				
ANR	15683	AssignmentExpression	s = skip_white ( start )		15671	0		=			
ANR	15684	Identifier	s		15671	0					
ANR	15685	CallExpression	skip_white ( start )		15671	1					
ANR	15686	Callee	skip_white		15671	0					
ANR	15687	Identifier	skip_white		15671	0					
ANR	15688	ArgumentList	start		15671	1					
ANR	15689	Argument	start		15671	0					
ANR	15690	Identifier	start		15671	0					
ANR	15691	IfStatement	if ( s == NULL )		15671	3					
ANR	15692	Condition	s == NULL	1547:8:46716:46724	15671	0	True				
ANR	15693	EqualityExpression	s == NULL		15671	0		==			
ANR	15694	Identifier	s		15671	0					
ANR	15695	Identifier	NULL		15671	1					
ANR	15696	CompoundStatement		6:19:73:73	15671	1					
ANR	15697	ReturnStatement	return NULL ;	1548:8:46737:46748	15671	0	True				
ANR	15698	Identifier	NULL		15671	0					
ANR	15699	ExpressionStatement	start = s	1550:4:46760:46769	15671	4	True				
ANR	15700	AssignmentExpression	start = s		15671	0		=			
ANR	15701	Identifier	start		15671	0					
ANR	15702	Identifier	s		15671	1					
ANR	15703	WhileStatement	while ( * s )		15671	5					
ANR	15704	Condition	* s	1552:11:46783:46784	15671	0	True				
ANR	15705	UnaryOperationExpression	* s		15671	0					
ANR	15706	UnaryOperator	*		15671	0					
ANR	15707	Identifier	s		15671	1					
ANR	15708	CompoundStatement		11:15:133:133	15671	1					
ANR	15709	IfStatement	if ( isalpha ( * s ) || * s == '_' )		15671	0					
ANR	15710	Condition	isalpha ( * s ) || * s == '_'	1553:12:46801:46824	15671	0	True				
ANR	15711	OrExpression	isalpha ( * s ) || * s == '_'		15671	0		||			
ANR	15712	CallExpression	isalpha ( * s )		15671	0					
ANR	15713	Callee	isalpha		15671	0					
ANR	15714	Identifier	isalpha		15671	0					
ANR	15715	ArgumentList	* s		15671	1					
ANR	15716	Argument	* s		15671	0					
ANR	15717	UnaryOperationExpression	* s		15671	0					
ANR	15718	UnaryOperator	*		15671	0					
ANR	15719	Identifier	s		15671	1					
ANR	15720	EqualityExpression	* s == '_'		15671	1		==			
ANR	15721	UnaryOperationExpression	* s		15671	0					
ANR	15722	UnaryOperator	*		15671	0					
ANR	15723	Identifier	s		15671	1					
ANR	15724	PrimaryExpression	'_'		15671	1					
ANR	15725	CompoundStatement		12:38:173:173	15671	1					
ANR	15726	ExpressionStatement	++ s	1554:12:46841:46844	15671	0	True				
ANR	15727	UnaryExpression	++ s		15671	0					
ANR	15728	IncDec	++		15671	0					
ANR	15729	Identifier	s		15671	1					
ANR	15730	ContinueStatement	continue ;	1555:12:46858:46866	15671	1	True				
ANR	15731	BreakStatement	break ;	1557:8:46886:46891	15671	1	True				
ANR	15732	ExpressionStatement	c = * s	1559:4:46903:46909	15671	6	True				
ANR	15733	AssignmentExpression	c = * s		15671	0		=			
ANR	15734	Identifier	c		15671	0					
ANR	15735	UnaryOperationExpression	* s		15671	1					
ANR	15736	UnaryOperator	*		15671	0					
ANR	15737	Identifier	s		15671	1					
ANR	15738	ExpressionStatement	* s = 0	1560:4:46915:46921	15671	7	True				
ANR	15739	AssignmentExpression	* s = 0		15671	0		=			
ANR	15740	UnaryOperationExpression	* s		15671	0					
ANR	15741	UnaryOperator	*		15671	0					
ANR	15742	Identifier	s		15671	1					
ANR	15743	PrimaryExpression	0		15671	1					
ANR	15744	ExpressionStatement	"strncpy ( out_idf , start , 255 )"	1561:4:46927:46955	15671	8	True				
ANR	15745	CallExpression	"strncpy ( out_idf , start , 255 )"		15671	0					
ANR	15746	Callee	strncpy		15671	0					
ANR	15747	Identifier	strncpy		15671	0					
ANR	15748	ArgumentList	out_idf		15671	1					
ANR	15749	Argument	out_idf		15671	0					
ANR	15750	Identifier	out_idf		15671	0					
ANR	15751	Argument	start		15671	1					
ANR	15752	Identifier	start		15671	0					
ANR	15753	Argument	255		15671	2					
ANR	15754	PrimaryExpression	255		15671	0					
ANR	15755	ExpressionStatement	* s = c	1562:4:46961:46967	15671	9	True				
ANR	15756	AssignmentExpression	* s = c		15671	0		=			
ANR	15757	UnaryOperationExpression	* s		15671	0					
ANR	15758	UnaryOperator	*		15671	0					
ANR	15759	Identifier	s		15671	1					
ANR	15760	Identifier	c		15671	1					
ANR	15761	ReturnStatement	return s ;	1563:4:46973:46981	15671	10	True				
ANR	15762	Identifier	s		15671	0					
ANR	15763	ReturnType	static char *		15671	1					
ANR	15764	Identifier	skip_idf		15671	2					
ANR	15765	ParameterList	"char * start , char out_idf [ 256 ]"		15671	3					
ANR	15766	Parameter	char * start	1541:22:46621:46631	15671	0	True				
ANR	15767	ParameterType	char *		15671	0					
ANR	15768	Identifier	start		15671	1					
ANR	15769	Parameter	char out_idf [ 256 ]	1541:35:46634:46650	15671	1	True				
ANR	15770	ParameterType	char [ 256 ]		15671	0					
ANR	15771	Identifier	out_idf		15671	1					
ANR	15772	CFGEntryNode	ENTRY		15671		True				
ANR	15773	CFGExitNode	EXIT		15671		True				
ANR	15774	Symbol	out_idf		15671						
ANR	15775	Symbol	isalpha		15671						
ANR	15776	Symbol	s		15671						
ANR	15777	Symbol	c		15671						
ANR	15778	Symbol	NULL		15671						
ANR	15779	Symbol	start		15671						
ANR	15780	Symbol	* s		15671						
ANR	15781	Symbol	skip_white		15671						
ANR	15782	Function	read_pnm_header	1566:0:46986:51659							
ANR	15783	FunctionDef	"read_pnm_header (FILE * reader , struct pnm_header * ph)"		15782	0					
ANR	15784	CompoundStatement		1567:0:47051:51659	15782	0					
ANR	15785	IdentifierDeclStatement	"int format , end , ttype ;"	1568:4:47057:47079	15782	0	True				
ANR	15786	IdentifierDecl	format		15782	0					
ANR	15787	IdentifierDeclType	int		15782	0					
ANR	15788	Identifier	format		15782	1					
ANR	15789	IdentifierDecl	end		15782	1					
ANR	15790	IdentifierDeclType	int		15782	0					
ANR	15791	Identifier	end		15782	1					
ANR	15792	IdentifierDecl	ttype		15782	2					
ANR	15793	IdentifierDeclType	int		15782	0					
ANR	15794	Identifier	ttype		15782	1					
ANR	15795	IdentifierDeclStatement	"char idf [ 256 ] , type [ 256 ] ;"	1569:4:47085:47109	15782	1	True				
ANR	15796	IdentifierDecl	idf [ 256 ]		15782	0					
ANR	15797	IdentifierDeclType	char [ 256 ]		15782	0					
ANR	15798	Identifier	idf		15782	1					
ANR	15799	PrimaryExpression	256		15782	2					
ANR	15800	IdentifierDecl	type [ 256 ]		15782	1					
ANR	15801	IdentifierDeclType	char [ 256 ]		15782	0					
ANR	15802	Identifier	type		15782	1					
ANR	15803	PrimaryExpression	256		15782	2					
ANR	15804	IdentifierDeclStatement	char line [ 256 ] ;	1570:4:47115:47129	15782	2	True				
ANR	15805	IdentifierDecl	line [ 256 ]		15782	0					
ANR	15806	IdentifierDeclType	char [ 256 ]		15782	0					
ANR	15807	Identifier	line		15782	1					
ANR	15808	PrimaryExpression	256		15782	2					
ANR	15809	IfStatement	"if ( fgets ( line , 250 , reader ) == NULL )"		15782	3					
ANR	15810	Condition	"fgets ( line , 250 , reader ) == NULL"	1572:8:47140:47171	15782	0	True				
ANR	15811	EqualityExpression	"fgets ( line , 250 , reader ) == NULL"		15782	0		==			
ANR	15812	CallExpression	"fgets ( line , 250 , reader )"		15782	0					
ANR	15813	Callee	fgets		15782	0					
ANR	15814	Identifier	fgets		15782	0					
ANR	15815	ArgumentList	line		15782	1					
ANR	15816	Argument	line		15782	0					
ANR	15817	Identifier	line		15782	0					
ANR	15818	Argument	250		15782	1					
ANR	15819	PrimaryExpression	250		15782	0					
ANR	15820	Argument	reader		15782	2					
ANR	15821	Identifier	reader		15782	0					
ANR	15822	Identifier	NULL		15782	1					
ANR	15823	CompoundStatement		6:42:122:122	15782	1					
ANR	15824	ExpressionStatement	"fprintf ( stderr , ""\\nWARNING: fgets return a NULL value"" )"	1573:8:47184:47239	15782	0	True				
ANR	15825	CallExpression	"fprintf ( stderr , ""\\nWARNING: fgets return a NULL value"" )"		15782	0					
ANR	15826	Callee	fprintf		15782	0					
ANR	15827	Identifier	fprintf		15782	0					
ANR	15828	ArgumentList	stderr		15782	1					
ANR	15829	Argument	stderr		15782	0					
ANR	15830	Identifier	stderr		15782	0					
ANR	15831	Argument	"""\\nWARNING: fgets return a NULL value"""		15782	1					
ANR	15832	PrimaryExpression	"""\\nWARNING: fgets return a NULL value"""		15782	0					
ANR	15833	ReturnStatement	return ;	1574:8:47249:47255	15782	1	True				
ANR	15834	IfStatement	if ( line [ 0 ] != 'P' )		15782	4					
ANR	15835	Condition	line [ 0 ] != 'P'	1577:8:47272:47285	15782	0	True				
ANR	15836	EqualityExpression	line [ 0 ] != 'P'		15782	0		!=			
ANR	15837	ArrayIndexing	line [ 0 ]		15782	0					
ANR	15838	Identifier	line		15782	0					
ANR	15839	PrimaryExpression	0		15782	1					
ANR	15840	PrimaryExpression	'P'		15782	1					
ANR	15841	CompoundStatement		11:24:236:236	15782	1					
ANR	15842	ExpressionStatement	"fprintf ( stderr , ""read_pnm_header:PNM:magic P missing\\n"" )"	1578:8:47298:47354	15782	0	True				
ANR	15843	CallExpression	"fprintf ( stderr , ""read_pnm_header:PNM:magic P missing\\n"" )"		15782	0					
ANR	15844	Callee	fprintf		15782	0					
ANR	15845	Identifier	fprintf		15782	0					
ANR	15846	ArgumentList	stderr		15782	1					
ANR	15847	Argument	stderr		15782	0					
ANR	15848	Identifier	stderr		15782	0					
ANR	15849	Argument	"""read_pnm_header:PNM:magic P missing\\n"""		15782	1					
ANR	15850	PrimaryExpression	"""read_pnm_header:PNM:magic P missing\\n"""		15782	0					
ANR	15851	ReturnStatement	return ;	1579:8:47364:47370	15782	1	True				
ANR	15852	ExpressionStatement	format = atoi ( line + 1 )	1581:4:47382:47405	15782	5	True				
ANR	15853	AssignmentExpression	format = atoi ( line + 1 )		15782	0		=			
ANR	15854	Identifier	format		15782	0					
ANR	15855	CallExpression	atoi ( line + 1 )		15782	1					
ANR	15856	Callee	atoi		15782	0					
ANR	15857	Identifier	atoi		15782	0					
ANR	15858	ArgumentList	line + 1		15782	1					
ANR	15859	Argument	line + 1		15782	0					
ANR	15860	AdditiveExpression	line + 1		15782	0		+			
ANR	15861	Identifier	line		15782	0					
ANR	15862	PrimaryExpression	1		15782	1					
ANR	15863	IfStatement	if ( format < 1 || format > 7 )		15782	6					
ANR	15864	Condition	format < 1 || format > 7	1582:8:47415:47438	15782	0	True				
ANR	15865	OrExpression	format < 1 || format > 7		15782	0		||			
ANR	15866	RelationalExpression	format < 1		15782	0		<			
ANR	15867	Identifier	format		15782	0					
ANR	15868	PrimaryExpression	1		15782	1					
ANR	15869	RelationalExpression	format > 7		15782	1		>			
ANR	15870	Identifier	format		15782	0					
ANR	15871	PrimaryExpression	7		15782	1					
ANR	15872	CompoundStatement		16:34:389:389	15782	1					
ANR	15873	ExpressionStatement	"fprintf ( stderr , ""read_pnm_header:magic format %d invalid\\n"" , format )"	1583:8:47451:47519	15782	0	True				
ANR	15874	CallExpression	"fprintf ( stderr , ""read_pnm_header:magic format %d invalid\\n"" , format )"		15782	0					
ANR	15875	Callee	fprintf		15782	0					
ANR	15876	Identifier	fprintf		15782	0					
ANR	15877	ArgumentList	stderr		15782	1					
ANR	15878	Argument	stderr		15782	0					
ANR	15879	Identifier	stderr		15782	0					
ANR	15880	Argument	"""read_pnm_header:magic format %d invalid\\n"""		15782	1					
ANR	15881	PrimaryExpression	"""read_pnm_header:magic format %d invalid\\n"""		15782	0					
ANR	15882	Argument	format		15782	2					
ANR	15883	Identifier	format		15782	0					
ANR	15884	ReturnStatement	return ;	1584:8:47529:47535	15782	1	True				
ANR	15885	ExpressionStatement	ph -> format = format	1586:4:47547:47566	15782	7	True				
ANR	15886	AssignmentExpression	ph -> format = format		15782	0		=			
ANR	15887	PtrMemberAccess	ph -> format		15782	0					
ANR	15888	Identifier	ph		15782	0					
ANR	15889	Identifier	format		15782	1					
ANR	15890	Identifier	format		15782	1					
ANR	15891	ExpressionStatement	ttype = end = 0	1587:4:47572:47587	15782	8	True				
ANR	15892	AssignmentExpression	ttype = end = 0		15782	0		=			
ANR	15893	Identifier	ttype		15782	0					
ANR	15894	AssignmentExpression	end = 0		15782	1		=			
ANR	15895	Identifier	end		15782	0					
ANR	15896	PrimaryExpression	0		15782	1					
ANR	15897	WhileStatement	"while ( fgets ( line , 250 , reader ) )"		15782	9					
ANR	15898	Condition	"fgets ( line , 250 , reader )"	1589:11:47601:47624	15782	0	True				
ANR	15899	CallExpression	"fgets ( line , 250 , reader )"		15782	0					
ANR	15900	Callee	fgets		15782	0					
ANR	15901	Identifier	fgets		15782	0					
ANR	15902	ArgumentList	line		15782	1					
ANR	15903	Argument	line		15782	0					
ANR	15904	Identifier	line		15782	0					
ANR	15905	Argument	250		15782	1					
ANR	15906	PrimaryExpression	250		15782	0					
ANR	15907	Argument	reader		15782	2					
ANR	15908	Identifier	reader		15782	0					
ANR	15909	CompoundStatement		25:8:602:620	15782	1					
ANR	15910	IdentifierDeclStatement	char * s ;	1590:8:47637:47644	15782	0	True				
ANR	15911	IdentifierDecl	* s		15782	0					
ANR	15912	IdentifierDeclType	char *		15782	0					
ANR	15913	Identifier	s		15782	1					
ANR	15914	IdentifierDeclStatement	int allow_null = 0 ;	1591:8:47654:47672	15782	1	True				
ANR	15915	IdentifierDecl	allow_null = 0		15782	0					
ANR	15916	IdentifierDeclType	int		15782	0					
ANR	15917	Identifier	allow_null		15782	1					
ANR	15918	AssignmentExpression	allow_null = 0		15782	2		=			
ANR	15919	Identifier	allow_null		15782	0					
ANR	15920	PrimaryExpression	0		15782	1					
ANR	15921	IfStatement	if ( * line == '#' )		15782	2					
ANR	15922	Condition	* line == '#'	1593:12:47687:47698	15782	0	True				
ANR	15923	EqualityExpression	* line == '#'		15782	0		==			
ANR	15924	UnaryOperationExpression	* line		15782	0					
ANR	15925	UnaryOperator	*		15782	0					
ANR	15926	Identifier	line		15782	1					
ANR	15927	PrimaryExpression	'#'		15782	1					
ANR	15928	CompoundStatement		27:26:649:649	15782	1					
ANR	15929	ContinueStatement	continue ;	1594:12:47715:47723	15782	0	True				
ANR	15930	ExpressionStatement	s = line	1597:8:47744:47752	15782	3	True				
ANR	15931	AssignmentExpression	s = line		15782	0		=			
ANR	15932	Identifier	s		15782	0					
ANR	15933	Identifier	line		15782	1					
ANR	15934	IfStatement	if ( format == 7 )		15782	4					
ANR	15935	Condition	format == 7	1599:12:47767:47777	15782	0	True				
ANR	15936	EqualityExpression	format == 7		15782	0		==			
ANR	15937	Identifier	format		15782	0					
ANR	15938	PrimaryExpression	7		15782	1					
ANR	15939	CompoundStatement		33:25:728:728	15782	1					
ANR	15940	ExpressionStatement	"s = skip_idf ( s , idf )"	1600:12:47794:47814	15782	0	True				
ANR	15941	AssignmentExpression	"s = skip_idf ( s , idf )"		15782	0		=			
ANR	15942	Identifier	s		15782	0					
ANR	15943	CallExpression	"skip_idf ( s , idf )"		15782	1					
ANR	15944	Callee	skip_idf		15782	0					
ANR	15945	Identifier	skip_idf		15782	0					
ANR	15946	ArgumentList	s		15782	1					
ANR	15947	Argument	s		15782	0					
ANR	15948	Identifier	s		15782	0					
ANR	15949	Argument	idf		15782	1					
ANR	15950	Identifier	idf		15782	0					
ANR	15951	IfStatement	if ( s == NULL || * s == 0 )		15782	1					
ANR	15952	Condition	s == NULL || * s == 0	1602:16:47833:47852	15782	0	True				
ANR	15953	OrExpression	s == NULL || * s == 0		15782	0		||			
ANR	15954	EqualityExpression	s == NULL		15782	0		==			
ANR	15955	Identifier	s		15782	0					
ANR	15956	Identifier	NULL		15782	1					
ANR	15957	EqualityExpression	* s == 0		15782	1		==			
ANR	15958	UnaryOperationExpression	* s		15782	0					
ANR	15959	UnaryOperator	*		15782	0					
ANR	15960	Identifier	s		15782	1					
ANR	15961	PrimaryExpression	0		15782	1					
ANR	15962	CompoundStatement		36:38:803:803	15782	1					
ANR	15963	ReturnStatement	return ;	1603:16:47873:47879	15782	0	True				
ANR	15964	IfStatement	"if ( strcmp ( idf , ""ENDHDR"" ) == 0 )"		15782	2					
ANR	15965	Condition	"strcmp ( idf , ""ENDHDR"" ) == 0"	1606:16:47912:47937	15782	0	True				
ANR	15966	EqualityExpression	"strcmp ( idf , ""ENDHDR"" ) == 0"		15782	0		==			
ANR	15967	CallExpression	"strcmp ( idf , ""ENDHDR"" )"		15782	0					
ANR	15968	Callee	strcmp		15782	0					
ANR	15969	Identifier	strcmp		15782	0					
ANR	15970	ArgumentList	idf		15782	1					
ANR	15971	Argument	idf		15782	0					
ANR	15972	Identifier	idf		15782	0					
ANR	15973	Argument	"""ENDHDR"""		15782	1					
ANR	15974	PrimaryExpression	"""ENDHDR"""		15782	0					
ANR	15975	PrimaryExpression	0		15782	1					
ANR	15976	CompoundStatement		40:44:888:888	15782	1					
ANR	15977	ExpressionStatement	end = 1	1607:16:47958:47965	15782	0	True				
ANR	15978	AssignmentExpression	end = 1		15782	0		=			
ANR	15979	Identifier	end		15782	0					
ANR	15980	PrimaryExpression	1		15782	1					
ANR	15981	BreakStatement	break ;	1608:16:47983:47988	15782	1	True				
ANR	15982	IfStatement	"if ( strcmp ( idf , ""WIDTH"" ) == 0 )"		15782	3					
ANR	15983	Condition	"strcmp ( idf , ""WIDTH"" ) == 0"	1610:16:48020:48044	15782	0	True				
ANR	15984	EqualityExpression	"strcmp ( idf , ""WIDTH"" ) == 0"		15782	0		==			
ANR	15985	CallExpression	"strcmp ( idf , ""WIDTH"" )"		15782	0					
ANR	15986	Callee	strcmp		15782	0					
ANR	15987	Identifier	strcmp		15782	0					
ANR	15988	ArgumentList	idf		15782	1					
ANR	15989	Argument	idf		15782	0					
ANR	15990	Identifier	idf		15782	0					
ANR	15991	Argument	"""WIDTH"""		15782	1					
ANR	15992	PrimaryExpression	"""WIDTH"""		15782	0					
ANR	15993	PrimaryExpression	0		15782	1					
ANR	15994	CompoundStatement		44:43:995:995	15782	1					
ANR	15995	ExpressionStatement	"s = skip_int ( s , & ph -> width )"	1611:16:48065:48092	15782	0	True				
ANR	15996	AssignmentExpression	"s = skip_int ( s , & ph -> width )"		15782	0		=			
ANR	15997	Identifier	s		15782	0					
ANR	15998	CallExpression	"skip_int ( s , & ph -> width )"		15782	1					
ANR	15999	Callee	skip_int		15782	0					
ANR	16000	Identifier	skip_int		15782	0					
ANR	16001	ArgumentList	s		15782	1					
ANR	16002	Argument	s		15782	0					
ANR	16003	Identifier	s		15782	0					
ANR	16004	Argument	& ph -> width		15782	1					
ANR	16005	UnaryOperationExpression	& ph -> width		15782	0					
ANR	16006	UnaryOperator	&		15782	0					
ANR	16007	PtrMemberAccess	ph -> width		15782	1					
ANR	16008	Identifier	ph		15782	0					
ANR	16009	Identifier	width		15782	1					
ANR	16010	IfStatement	if ( s == NULL || * s == 0 )		15782	1					
ANR	16011	Condition	s == NULL || * s == 0	1612:20:48114:48133	15782	0	True				
ANR	16012	OrExpression	s == NULL || * s == 0		15782	0		||			
ANR	16013	EqualityExpression	s == NULL		15782	0		==			
ANR	16014	Identifier	s		15782	0					
ANR	16015	Identifier	NULL		15782	1					
ANR	16016	EqualityExpression	* s == 0		15782	1		==			
ANR	16017	UnaryOperationExpression	* s		15782	0					
ANR	16018	UnaryOperator	*		15782	0					
ANR	16019	Identifier	s		15782	1					
ANR	16020	PrimaryExpression	0		15782	1					
ANR	16021	CompoundStatement		46:42:1084:1084	15782	1					
ANR	16022	ReturnStatement	return ;	1613:20:48158:48164	15782	0	True				
ANR	16023	ContinueStatement	continue ;	1616:16:48201:48209	15782	2	True				
ANR	16024	IfStatement	"if ( strcmp ( idf , ""HEIGHT"" ) == 0 )"		15782	4					
ANR	16025	Condition	"strcmp ( idf , ""HEIGHT"" ) == 0"	1618:16:48241:48266	15782	0	True				
ANR	16026	EqualityExpression	"strcmp ( idf , ""HEIGHT"" ) == 0"		15782	0		==			
ANR	16027	CallExpression	"strcmp ( idf , ""HEIGHT"" )"		15782	0					
ANR	16028	Callee	strcmp		15782	0					
ANR	16029	Identifier	strcmp		15782	0					
ANR	16030	ArgumentList	idf		15782	1					
ANR	16031	Argument	idf		15782	0					
ANR	16032	Identifier	idf		15782	0					
ANR	16033	Argument	"""HEIGHT"""		15782	1					
ANR	16034	PrimaryExpression	"""HEIGHT"""		15782	0					
ANR	16035	PrimaryExpression	0		15782	1					
ANR	16036	CompoundStatement		52:44:1217:1217	15782	1					
ANR	16037	ExpressionStatement	"s = skip_int ( s , & ph -> height )"	1619:16:48287:48315	15782	0	True				
ANR	16038	AssignmentExpression	"s = skip_int ( s , & ph -> height )"		15782	0		=			
ANR	16039	Identifier	s		15782	0					
ANR	16040	CallExpression	"skip_int ( s , & ph -> height )"		15782	1					
ANR	16041	Callee	skip_int		15782	0					
ANR	16042	Identifier	skip_int		15782	0					
ANR	16043	ArgumentList	s		15782	1					
ANR	16044	Argument	s		15782	0					
ANR	16045	Identifier	s		15782	0					
ANR	16046	Argument	& ph -> height		15782	1					
ANR	16047	UnaryOperationExpression	& ph -> height		15782	0					
ANR	16048	UnaryOperator	&		15782	0					
ANR	16049	PtrMemberAccess	ph -> height		15782	1					
ANR	16050	Identifier	ph		15782	0					
ANR	16051	Identifier	height		15782	1					
ANR	16052	IfStatement	if ( s == NULL || * s == 0 )		15782	1					
ANR	16053	Condition	s == NULL || * s == 0	1620:20:48337:48356	15782	0	True				
ANR	16054	OrExpression	s == NULL || * s == 0		15782	0		||			
ANR	16055	EqualityExpression	s == NULL		15782	0		==			
ANR	16056	Identifier	s		15782	0					
ANR	16057	Identifier	NULL		15782	1					
ANR	16058	EqualityExpression	* s == 0		15782	1		==			
ANR	16059	UnaryOperationExpression	* s		15782	0					
ANR	16060	UnaryOperator	*		15782	0					
ANR	16061	Identifier	s		15782	1					
ANR	16062	PrimaryExpression	0		15782	1					
ANR	16063	CompoundStatement		54:42:1307:1307	15782	1					
ANR	16064	ReturnStatement	return ;	1621:20:48381:48387	15782	0	True				
ANR	16065	ContinueStatement	continue ;	1624:16:48424:48432	15782	2	True				
ANR	16066	IfStatement	"if ( strcmp ( idf , ""DEPTH"" ) == 0 )"		15782	5					
ANR	16067	Condition	"strcmp ( idf , ""DEPTH"" ) == 0"	1626:16:48464:48488	15782	0	True				
ANR	16068	EqualityExpression	"strcmp ( idf , ""DEPTH"" ) == 0"		15782	0		==			
ANR	16069	CallExpression	"strcmp ( idf , ""DEPTH"" )"		15782	0					
ANR	16070	Callee	strcmp		15782	0					
ANR	16071	Identifier	strcmp		15782	0					
ANR	16072	ArgumentList	idf		15782	1					
ANR	16073	Argument	idf		15782	0					
ANR	16074	Identifier	idf		15782	0					
ANR	16075	Argument	"""DEPTH"""		15782	1					
ANR	16076	PrimaryExpression	"""DEPTH"""		15782	0					
ANR	16077	PrimaryExpression	0		15782	1					
ANR	16078	CompoundStatement		60:43:1439:1439	15782	1					
ANR	16079	ExpressionStatement	"s = skip_int ( s , & ph -> depth )"	1627:16:48509:48536	15782	0	True				
ANR	16080	AssignmentExpression	"s = skip_int ( s , & ph -> depth )"		15782	0		=			
ANR	16081	Identifier	s		15782	0					
ANR	16082	CallExpression	"skip_int ( s , & ph -> depth )"		15782	1					
ANR	16083	Callee	skip_int		15782	0					
ANR	16084	Identifier	skip_int		15782	0					
ANR	16085	ArgumentList	s		15782	1					
ANR	16086	Argument	s		15782	0					
ANR	16087	Identifier	s		15782	0					
ANR	16088	Argument	& ph -> depth		15782	1					
ANR	16089	UnaryOperationExpression	& ph -> depth		15782	0					
ANR	16090	UnaryOperator	&		15782	0					
ANR	16091	PtrMemberAccess	ph -> depth		15782	1					
ANR	16092	Identifier	ph		15782	0					
ANR	16093	Identifier	depth		15782	1					
ANR	16094	IfStatement	if ( s == NULL || * s == 0 )		15782	1					
ANR	16095	Condition	s == NULL || * s == 0	1628:20:48558:48577	15782	0	True				
ANR	16096	OrExpression	s == NULL || * s == 0		15782	0		||			
ANR	16097	EqualityExpression	s == NULL		15782	0		==			
ANR	16098	Identifier	s		15782	0					
ANR	16099	Identifier	NULL		15782	1					
ANR	16100	EqualityExpression	* s == 0		15782	1		==			
ANR	16101	UnaryOperationExpression	* s		15782	0					
ANR	16102	UnaryOperator	*		15782	0					
ANR	16103	Identifier	s		15782	1					
ANR	16104	PrimaryExpression	0		15782	1					
ANR	16105	CompoundStatement		62:42:1528:1528	15782	1					
ANR	16106	ReturnStatement	return ;	1629:20:48602:48608	15782	0	True				
ANR	16107	ContinueStatement	continue ;	1632:16:48645:48653	15782	2	True				
ANR	16108	IfStatement	"if ( strcmp ( idf , ""MAXVAL"" ) == 0 )"		15782	6					
ANR	16109	Condition	"strcmp ( idf , ""MAXVAL"" ) == 0"	1634:16:48685:48710	15782	0	True				
ANR	16110	EqualityExpression	"strcmp ( idf , ""MAXVAL"" ) == 0"		15782	0		==			
ANR	16111	CallExpression	"strcmp ( idf , ""MAXVAL"" )"		15782	0					
ANR	16112	Callee	strcmp		15782	0					
ANR	16113	Identifier	strcmp		15782	0					
ANR	16114	ArgumentList	idf		15782	1					
ANR	16115	Argument	idf		15782	0					
ANR	16116	Identifier	idf		15782	0					
ANR	16117	Argument	"""MAXVAL"""		15782	1					
ANR	16118	PrimaryExpression	"""MAXVAL"""		15782	0					
ANR	16119	PrimaryExpression	0		15782	1					
ANR	16120	CompoundStatement		68:44:1661:1661	15782	1					
ANR	16121	ExpressionStatement	"s = skip_int ( s , & ph -> maxval )"	1635:16:48731:48759	15782	0	True				
ANR	16122	AssignmentExpression	"s = skip_int ( s , & ph -> maxval )"		15782	0		=			
ANR	16123	Identifier	s		15782	0					
ANR	16124	CallExpression	"skip_int ( s , & ph -> maxval )"		15782	1					
ANR	16125	Callee	skip_int		15782	0					
ANR	16126	Identifier	skip_int		15782	0					
ANR	16127	ArgumentList	s		15782	1					
ANR	16128	Argument	s		15782	0					
ANR	16129	Identifier	s		15782	0					
ANR	16130	Argument	& ph -> maxval		15782	1					
ANR	16131	UnaryOperationExpression	& ph -> maxval		15782	0					
ANR	16132	UnaryOperator	&		15782	0					
ANR	16133	PtrMemberAccess	ph -> maxval		15782	1					
ANR	16134	Identifier	ph		15782	0					
ANR	16135	Identifier	maxval		15782	1					
ANR	16136	IfStatement	if ( s == NULL || * s == 0 )		15782	1					
ANR	16137	Condition	s == NULL || * s == 0	1636:20:48781:48800	15782	0	True				
ANR	16138	OrExpression	s == NULL || * s == 0		15782	0		||			
ANR	16139	EqualityExpression	s == NULL		15782	0		==			
ANR	16140	Identifier	s		15782	0					
ANR	16141	Identifier	NULL		15782	1					
ANR	16142	EqualityExpression	* s == 0		15782	1		==			
ANR	16143	UnaryOperationExpression	* s		15782	0					
ANR	16144	UnaryOperator	*		15782	0					
ANR	16145	Identifier	s		15782	1					
ANR	16146	PrimaryExpression	0		15782	1					
ANR	16147	CompoundStatement		70:42:1751:1751	15782	1					
ANR	16148	ReturnStatement	return ;	1637:20:48825:48831	15782	0	True				
ANR	16149	ContinueStatement	continue ;	1640:16:48868:48876	15782	2	True				
ANR	16150	IfStatement	"if ( strcmp ( idf , ""TUPLTYPE"" ) == 0 )"		15782	7					
ANR	16151	Condition	"strcmp ( idf , ""TUPLTYPE"" ) == 0"	1642:16:48908:48935	15782	0	True				
ANR	16152	EqualityExpression	"strcmp ( idf , ""TUPLTYPE"" ) == 0"		15782	0		==			
ANR	16153	CallExpression	"strcmp ( idf , ""TUPLTYPE"" )"		15782	0					
ANR	16154	Callee	strcmp		15782	0					
ANR	16155	Identifier	strcmp		15782	0					
ANR	16156	ArgumentList	idf		15782	1					
ANR	16157	Argument	idf		15782	0					
ANR	16158	Identifier	idf		15782	0					
ANR	16159	Argument	"""TUPLTYPE"""		15782	1					
ANR	16160	PrimaryExpression	"""TUPLTYPE"""		15782	0					
ANR	16161	PrimaryExpression	0		15782	1					
ANR	16162	CompoundStatement		76:46:1886:1886	15782	1					
ANR	16163	ExpressionStatement	"s = skip_idf ( s , type )"	1643:16:48956:48977	15782	0	True				
ANR	16164	AssignmentExpression	"s = skip_idf ( s , type )"		15782	0		=			
ANR	16165	Identifier	s		15782	0					
ANR	16166	CallExpression	"skip_idf ( s , type )"		15782	1					
ANR	16167	Callee	skip_idf		15782	0					
ANR	16168	Identifier	skip_idf		15782	0					
ANR	16169	ArgumentList	s		15782	1					
ANR	16170	Argument	s		15782	0					
ANR	16171	Identifier	s		15782	0					
ANR	16172	Argument	type		15782	1					
ANR	16173	Identifier	type		15782	0					
ANR	16174	IfStatement	if ( s == NULL || * s == 0 )		15782	1					
ANR	16175	Condition	s == NULL || * s == 0	1644:20:48999:49018	15782	0	True				
ANR	16176	OrExpression	s == NULL || * s == 0		15782	0		||			
ANR	16177	EqualityExpression	s == NULL		15782	0		==			
ANR	16178	Identifier	s		15782	0					
ANR	16179	Identifier	NULL		15782	1					
ANR	16180	EqualityExpression	* s == 0		15782	1		==			
ANR	16181	UnaryOperationExpression	* s		15782	0					
ANR	16182	UnaryOperator	*		15782	0					
ANR	16183	Identifier	s		15782	1					
ANR	16184	PrimaryExpression	0		15782	1					
ANR	16185	CompoundStatement		78:42:1969:1969	15782	1					
ANR	16186	ReturnStatement	return ;	1645:20:49043:49049	15782	0	True				
ANR	16187	IfStatement	"if ( strcmp ( type , ""BLACKANDWHITE"" ) == 0 )"		15782	2					
ANR	16188	Condition	"strcmp ( type , ""BLACKANDWHITE"" ) == 0"	1648:20:49090:49123	15782	0	True				
ANR	16189	EqualityExpression	"strcmp ( type , ""BLACKANDWHITE"" ) == 0"		15782	0		==			
ANR	16190	CallExpression	"strcmp ( type , ""BLACKANDWHITE"" )"		15782	0					
ANR	16191	Callee	strcmp		15782	0					
ANR	16192	Identifier	strcmp		15782	0					
ANR	16193	ArgumentList	type		15782	1					
ANR	16194	Argument	type		15782	0					
ANR	16195	Identifier	type		15782	0					
ANR	16196	Argument	"""BLACKANDWHITE"""		15782	1					
ANR	16197	PrimaryExpression	"""BLACKANDWHITE"""		15782	0					
ANR	16198	PrimaryExpression	0		15782	1					
ANR	16199	CompoundStatement		82:56:2074:2074	15782	1					
ANR	16200	ExpressionStatement	ph -> bw = 1	1649:20:49148:49158	15782	0	True				
ANR	16201	AssignmentExpression	ph -> bw = 1		15782	0		=			
ANR	16202	PtrMemberAccess	ph -> bw		15782	0					
ANR	16203	Identifier	ph		15782	0					
ANR	16204	Identifier	bw		15782	1					
ANR	16205	PrimaryExpression	1		15782	1					
ANR	16206	ExpressionStatement	ttype = 1	1650:20:49180:49189	15782	1	True				
ANR	16207	AssignmentExpression	ttype = 1		15782	0		=			
ANR	16208	Identifier	ttype		15782	0					
ANR	16209	PrimaryExpression	1		15782	1					
ANR	16210	ContinueStatement	continue ;	1651:20:49211:49219	15782	2	True				
ANR	16211	IfStatement	"if ( strcmp ( type , ""GRAYSCALE"" ) == 0 )"		15782	3					
ANR	16212	Condition	"strcmp ( type , ""GRAYSCALE"" ) == 0"	1653:20:49259:49288	15782	0	True				
ANR	16213	EqualityExpression	"strcmp ( type , ""GRAYSCALE"" ) == 0"		15782	0		==			
ANR	16214	CallExpression	"strcmp ( type , ""GRAYSCALE"" )"		15782	0					
ANR	16215	Callee	strcmp		15782	0					
ANR	16216	Identifier	strcmp		15782	0					
ANR	16217	ArgumentList	type		15782	1					
ANR	16218	Argument	type		15782	0					
ANR	16219	Identifier	type		15782	0					
ANR	16220	Argument	"""GRAYSCALE"""		15782	1					
ANR	16221	PrimaryExpression	"""GRAYSCALE"""		15782	0					
ANR	16222	PrimaryExpression	0		15782	1					
ANR	16223	CompoundStatement		87:52:2239:2239	15782	1					
ANR	16224	ExpressionStatement	ph -> gray = 1	1654:20:49313:49325	15782	0	True				
ANR	16225	AssignmentExpression	ph -> gray = 1		15782	0		=			
ANR	16226	PtrMemberAccess	ph -> gray		15782	0					
ANR	16227	Identifier	ph		15782	0					
ANR	16228	Identifier	gray		15782	1					
ANR	16229	PrimaryExpression	1		15782	1					
ANR	16230	ExpressionStatement	ttype = 1	1655:20:49347:49356	15782	1	True				
ANR	16231	AssignmentExpression	ttype = 1		15782	0		=			
ANR	16232	Identifier	ttype		15782	0					
ANR	16233	PrimaryExpression	1		15782	1					
ANR	16234	ContinueStatement	continue ;	1656:20:49378:49386	15782	2	True				
ANR	16235	IfStatement	"if ( strcmp ( type , ""GRAYSCALE_ALPHA"" ) == 0 )"		15782	4					
ANR	16236	Condition	"strcmp ( type , ""GRAYSCALE_ALPHA"" ) == 0"	1658:20:49426:49461	15782	0	True				
ANR	16237	EqualityExpression	"strcmp ( type , ""GRAYSCALE_ALPHA"" ) == 0"		15782	0		==			
ANR	16238	CallExpression	"strcmp ( type , ""GRAYSCALE_ALPHA"" )"		15782	0					
ANR	16239	Callee	strcmp		15782	0					
ANR	16240	Identifier	strcmp		15782	0					
ANR	16241	ArgumentList	type		15782	1					
ANR	16242	Argument	type		15782	0					
ANR	16243	Identifier	type		15782	0					
ANR	16244	Argument	"""GRAYSCALE_ALPHA"""		15782	1					
ANR	16245	PrimaryExpression	"""GRAYSCALE_ALPHA"""		15782	0					
ANR	16246	PrimaryExpression	0		15782	1					
ANR	16247	CompoundStatement		92:58:2412:2412	15782	1					
ANR	16248	ExpressionStatement	ph -> graya = 1	1659:20:49486:49499	15782	0	True				
ANR	16249	AssignmentExpression	ph -> graya = 1		15782	0		=			
ANR	16250	PtrMemberAccess	ph -> graya		15782	0					
ANR	16251	Identifier	ph		15782	0					
ANR	16252	Identifier	graya		15782	1					
ANR	16253	PrimaryExpression	1		15782	1					
ANR	16254	ExpressionStatement	ttype = 1	1660:20:49521:49530	15782	1	True				
ANR	16255	AssignmentExpression	ttype = 1		15782	0		=			
ANR	16256	Identifier	ttype		15782	0					
ANR	16257	PrimaryExpression	1		15782	1					
ANR	16258	ContinueStatement	continue ;	1661:20:49552:49560	15782	2	True				
ANR	16259	IfStatement	"if ( strcmp ( type , ""RGB"" ) == 0 )"		15782	5					
ANR	16260	Condition	"strcmp ( type , ""RGB"" ) == 0"	1663:20:49600:49623	15782	0	True				
ANR	16261	EqualityExpression	"strcmp ( type , ""RGB"" ) == 0"		15782	0		==			
ANR	16262	CallExpression	"strcmp ( type , ""RGB"" )"		15782	0					
ANR	16263	Callee	strcmp		15782	0					
ANR	16264	Identifier	strcmp		15782	0					
ANR	16265	ArgumentList	type		15782	1					
ANR	16266	Argument	type		15782	0					
ANR	16267	Identifier	type		15782	0					
ANR	16268	Argument	"""RGB"""		15782	1					
ANR	16269	PrimaryExpression	"""RGB"""		15782	0					
ANR	16270	PrimaryExpression	0		15782	1					
ANR	16271	CompoundStatement		97:46:2574:2574	15782	1					
ANR	16272	ExpressionStatement	ph -> rgb = 1	1664:20:49648:49659	15782	0	True				
ANR	16273	AssignmentExpression	ph -> rgb = 1		15782	0		=			
ANR	16274	PtrMemberAccess	ph -> rgb		15782	0					
ANR	16275	Identifier	ph		15782	0					
ANR	16276	Identifier	rgb		15782	1					
ANR	16277	PrimaryExpression	1		15782	1					
ANR	16278	ExpressionStatement	ttype = 1	1665:20:49681:49690	15782	1	True				
ANR	16279	AssignmentExpression	ttype = 1		15782	0		=			
ANR	16280	Identifier	ttype		15782	0					
ANR	16281	PrimaryExpression	1		15782	1					
ANR	16282	ContinueStatement	continue ;	1666:20:49712:49720	15782	2	True				
ANR	16283	IfStatement	"if ( strcmp ( type , ""RGB_ALPHA"" ) == 0 )"		15782	6					
ANR	16284	Condition	"strcmp ( type , ""RGB_ALPHA"" ) == 0"	1668:20:49760:49789	15782	0	True				
ANR	16285	EqualityExpression	"strcmp ( type , ""RGB_ALPHA"" ) == 0"		15782	0		==			
ANR	16286	CallExpression	"strcmp ( type , ""RGB_ALPHA"" )"		15782	0					
ANR	16287	Callee	strcmp		15782	0					
ANR	16288	Identifier	strcmp		15782	0					
ANR	16289	ArgumentList	type		15782	1					
ANR	16290	Argument	type		15782	0					
ANR	16291	Identifier	type		15782	0					
ANR	16292	Argument	"""RGB_ALPHA"""		15782	1					
ANR	16293	PrimaryExpression	"""RGB_ALPHA"""		15782	0					
ANR	16294	PrimaryExpression	0		15782	1					
ANR	16295	CompoundStatement		102:52:2740:2740	15782	1					
ANR	16296	ExpressionStatement	ph -> rgba = 1	1669:20:49814:49826	15782	0	True				
ANR	16297	AssignmentExpression	ph -> rgba = 1		15782	0		=			
ANR	16298	PtrMemberAccess	ph -> rgba		15782	0					
ANR	16299	Identifier	ph		15782	0					
ANR	16300	Identifier	rgba		15782	1					
ANR	16301	PrimaryExpression	1		15782	1					
ANR	16302	ExpressionStatement	ttype = 1	1670:20:49848:49857	15782	1	True				
ANR	16303	AssignmentExpression	ttype = 1		15782	0		=			
ANR	16304	Identifier	ttype		15782	0					
ANR	16305	PrimaryExpression	1		15782	1					
ANR	16306	ContinueStatement	continue ;	1671:20:49879:49887	15782	2	True				
ANR	16307	ExpressionStatement	"fprintf ( stderr , ""read_pnm_header:unknown P7 TUPLTYPE %s\\n"" , type )"	1673:16:49923:49988	15782	7	True				
ANR	16308	CallExpression	"fprintf ( stderr , ""read_pnm_header:unknown P7 TUPLTYPE %s\\n"" , type )"		15782	0					
ANR	16309	Callee	fprintf		15782	0					
ANR	16310	Identifier	fprintf		15782	0					
ANR	16311	ArgumentList	stderr		15782	1					
ANR	16312	Argument	stderr		15782	0					
ANR	16313	Identifier	stderr		15782	0					
ANR	16314	Argument	"""read_pnm_header:unknown P7 TUPLTYPE %s\\n"""		15782	1					
ANR	16315	PrimaryExpression	"""read_pnm_header:unknown P7 TUPLTYPE %s\\n"""		15782	0					
ANR	16316	Argument	type		15782	2					
ANR	16317	Identifier	type		15782	0					
ANR	16318	ReturnStatement	return ;	1674:16:50006:50012	15782	8	True				
ANR	16319	ExpressionStatement	"fprintf ( stderr , ""read_pnm_header:unknown P7 idf %s\\n"" , idf )"	1676:12:50040:50099	15782	8	True				
ANR	16320	CallExpression	"fprintf ( stderr , ""read_pnm_header:unknown P7 idf %s\\n"" , idf )"		15782	0					
ANR	16321	Callee	fprintf		15782	0					
ANR	16322	Identifier	fprintf		15782	0					
ANR	16323	ArgumentList	stderr		15782	1					
ANR	16324	Argument	stderr		15782	0					
ANR	16325	Identifier	stderr		15782	0					
ANR	16326	Argument	"""read_pnm_header:unknown P7 idf %s\\n"""		15782	1					
ANR	16327	PrimaryExpression	"""read_pnm_header:unknown P7 idf %s\\n"""		15782	0					
ANR	16328	Argument	idf		15782	2					
ANR	16329	Identifier	idf		15782	0					
ANR	16330	ReturnStatement	return ;	1677:12:50113:50119	15782	9	True				
ANR	16331	IfStatement	if ( ph -> width == 0 )		15782	5					
ANR	16332	Condition	ph -> width == 0	1681:12:50210:50223	15782	0	True				
ANR	16333	EqualityExpression	ph -> width == 0		15782	0		==			
ANR	16334	PtrMemberAccess	ph -> width		15782	0					
ANR	16335	Identifier	ph		15782	0					
ANR	16336	Identifier	width		15782	1					
ANR	16337	PrimaryExpression	0		15782	1					
ANR	16338	CompoundStatement		115:28:3174:3174	15782	1					
ANR	16339	ExpressionStatement	"s = skip_int ( s , & ph -> width )"	1682:12:50240:50267	15782	0	True				
ANR	16340	AssignmentExpression	"s = skip_int ( s , & ph -> width )"		15782	0		=			
ANR	16341	Identifier	s		15782	0					
ANR	16342	CallExpression	"skip_int ( s , & ph -> width )"		15782	1					
ANR	16343	Callee	skip_int		15782	0					
ANR	16344	Identifier	skip_int		15782	0					
ANR	16345	ArgumentList	s		15782	1					
ANR	16346	Argument	s		15782	0					
ANR	16347	Identifier	s		15782	0					
ANR	16348	Argument	& ph -> width		15782	1					
ANR	16349	UnaryOperationExpression	& ph -> width		15782	0					
ANR	16350	UnaryOperator	&		15782	0					
ANR	16351	PtrMemberAccess	ph -> width		15782	1					
ANR	16352	Identifier	ph		15782	0					
ANR	16353	Identifier	width		15782	1					
ANR	16354	IfStatement	if ( ( s == NULL ) || ( * s == 0 ) || ( ph -> width < 1 ) )		15782	1					
ANR	16355	Condition	( s == NULL ) || ( * s == 0 ) || ( ph -> width < 1 )	1683:16:50285:50327	15782	0	True				
ANR	16356	OrExpression	( s == NULL ) || ( * s == 0 ) || ( ph -> width < 1 )		15782	0		||			
ANR	16357	EqualityExpression	s == NULL		15782	0		==			
ANR	16358	Identifier	s		15782	0					
ANR	16359	Identifier	NULL		15782	1					
ANR	16360	OrExpression	( * s == 0 ) || ( ph -> width < 1 )		15782	1		||			
ANR	16361	EqualityExpression	* s == 0		15782	0		==			
ANR	16362	UnaryOperationExpression	* s		15782	0					
ANR	16363	UnaryOperator	*		15782	0					
ANR	16364	Identifier	s		15782	1					
ANR	16365	PrimaryExpression	0		15782	1					
ANR	16366	RelationalExpression	ph -> width < 1		15782	1		<			
ANR	16367	PtrMemberAccess	ph -> width		15782	0					
ANR	16368	Identifier	ph		15782	0					
ANR	16369	Identifier	width		15782	1					
ANR	16370	PrimaryExpression	1		15782	1					
ANR	16371	CompoundStatement		117:61:3278:3278	15782	1					
ANR	16372	ReturnStatement	return ;	1684:16:50348:50354	15782	0	True				
ANR	16373	ExpressionStatement	allow_null = 1	1686:12:50382:50396	15782	2	True				
ANR	16374	AssignmentExpression	allow_null = 1		15782	0		=			
ANR	16375	Identifier	allow_null		15782	0					
ANR	16376	PrimaryExpression	1		15782	1					
ANR	16377	IfStatement	if ( ph -> height == 0 )		15782	6					
ANR	16378	Condition	ph -> height == 0	1688:12:50420:50434	15782	0	True				
ANR	16379	EqualityExpression	ph -> height == 0		15782	0		==			
ANR	16380	PtrMemberAccess	ph -> height		15782	0					
ANR	16381	Identifier	ph		15782	0					
ANR	16382	Identifier	height		15782	1					
ANR	16383	PrimaryExpression	0		15782	1					
ANR	16384	CompoundStatement		122:29:3385:3385	15782	1					
ANR	16385	ExpressionStatement	"s = skip_int ( s , & ph -> height )"	1689:12:50451:50479	15782	0	True				
ANR	16386	AssignmentExpression	"s = skip_int ( s , & ph -> height )"		15782	0		=			
ANR	16387	Identifier	s		15782	0					
ANR	16388	CallExpression	"skip_int ( s , & ph -> height )"		15782	1					
ANR	16389	Callee	skip_int		15782	0					
ANR	16390	Identifier	skip_int		15782	0					
ANR	16391	ArgumentList	s		15782	1					
ANR	16392	Argument	s		15782	0					
ANR	16393	Identifier	s		15782	0					
ANR	16394	Argument	& ph -> height		15782	1					
ANR	16395	UnaryOperationExpression	& ph -> height		15782	0					
ANR	16396	UnaryOperator	&		15782	0					
ANR	16397	PtrMemberAccess	ph -> height		15782	1					
ANR	16398	Identifier	ph		15782	0					
ANR	16399	Identifier	height		15782	1					
ANR	16400	IfStatement	if ( ( s == NULL ) && allow_null )		15782	1					
ANR	16401	Condition	( s == NULL ) && allow_null	1690:16:50497:50521	15782	0	True				
ANR	16402	AndExpression	( s == NULL ) && allow_null		15782	0		&&			
ANR	16403	EqualityExpression	s == NULL		15782	0		==			
ANR	16404	Identifier	s		15782	0					
ANR	16405	Identifier	NULL		15782	1					
ANR	16406	Identifier	allow_null		15782	1					
ANR	16407	CompoundStatement		124:43:3472:3472	15782	1					
ANR	16408	ContinueStatement	continue ;	1691:16:50542:50550	15782	0	True				
ANR	16409	IfStatement	if ( ( s == NULL ) || ( * s == 0 ) || ( ph -> height < 1 ) )		15782	2					
ANR	16410	Condition	( s == NULL ) || ( * s == 0 ) || ( ph -> height < 1 )	1693:16:50582:50625	15782	0	True				
ANR	16411	OrExpression	( s == NULL ) || ( * s == 0 ) || ( ph -> height < 1 )		15782	0		||			
ANR	16412	EqualityExpression	s == NULL		15782	0		==			
ANR	16413	Identifier	s		15782	0					
ANR	16414	Identifier	NULL		15782	1					
ANR	16415	OrExpression	( * s == 0 ) || ( ph -> height < 1 )		15782	1		||			
ANR	16416	EqualityExpression	* s == 0		15782	0		==			
ANR	16417	UnaryOperationExpression	* s		15782	0					
ANR	16418	UnaryOperator	*		15782	0					
ANR	16419	Identifier	s		15782	1					
ANR	16420	PrimaryExpression	0		15782	1					
ANR	16421	RelationalExpression	ph -> height < 1		15782	1		<			
ANR	16422	PtrMemberAccess	ph -> height		15782	0					
ANR	16423	Identifier	ph		15782	0					
ANR	16424	Identifier	height		15782	1					
ANR	16425	PrimaryExpression	1		15782	1					
ANR	16426	CompoundStatement		127:62:3576:3576	15782	1					
ANR	16427	ReturnStatement	return ;	1694:16:50646:50652	15782	0	True				
ANR	16428	IfStatement	if ( format == 1 || format == 4 )		15782	3					
ANR	16429	Condition	format == 1 || format == 4	1696:16:50684:50709	15782	0	True				
ANR	16430	OrExpression	format == 1 || format == 4		15782	0		||			
ANR	16431	EqualityExpression	format == 1		15782	0		==			
ANR	16432	Identifier	format		15782	0					
ANR	16433	PrimaryExpression	1		15782	1					
ANR	16434	EqualityExpression	format == 4		15782	1		==			
ANR	16435	Identifier	format		15782	0					
ANR	16436	PrimaryExpression	4		15782	1					
ANR	16437	CompoundStatement		130:44:3660:3660	15782	1					
ANR	16438	BreakStatement	break ;	1697:16:50730:50735	15782	0	True				
ANR	16439	ExpressionStatement	allow_null = 1	1699:12:50763:50777	15782	4	True				
ANR	16440	AssignmentExpression	allow_null = 1		15782	0		=			
ANR	16441	Identifier	allow_null		15782	0					
ANR	16442	PrimaryExpression	1		15782	1					
ANR	16443	ExpressionStatement	"s = skip_int ( s , & ph -> maxval )"	1702:8:50845:50873	15782	7	True				
ANR	16444	AssignmentExpression	"s = skip_int ( s , & ph -> maxval )"		15782	0		=			
ANR	16445	Identifier	s		15782	0					
ANR	16446	CallExpression	"skip_int ( s , & ph -> maxval )"		15782	1					
ANR	16447	Callee	skip_int		15782	0					
ANR	16448	Identifier	skip_int		15782	0					
ANR	16449	ArgumentList	s		15782	1					
ANR	16450	Argument	s		15782	0					
ANR	16451	Identifier	s		15782	0					
ANR	16452	Argument	& ph -> maxval		15782	1					
ANR	16453	UnaryOperationExpression	& ph -> maxval		15782	0					
ANR	16454	UnaryOperator	&		15782	0					
ANR	16455	PtrMemberAccess	ph -> maxval		15782	1					
ANR	16456	Identifier	ph		15782	0					
ANR	16457	Identifier	maxval		15782	1					
ANR	16458	IfStatement	if ( ( s == NULL ) && allow_null )		15782	8					
ANR	16459	Condition	( s == NULL ) && allow_null	1703:12:50887:50911	15782	0	True				
ANR	16460	AndExpression	( s == NULL ) && allow_null		15782	0		&&			
ANR	16461	EqualityExpression	s == NULL		15782	0		==			
ANR	16462	Identifier	s		15782	0					
ANR	16463	Identifier	NULL		15782	1					
ANR	16464	Identifier	allow_null		15782	1					
ANR	16465	CompoundStatement		137:39:3862:3862	15782	1					
ANR	16466	ContinueStatement	continue ;	1704:12:50928:50936	15782	0	True				
ANR	16467	IfStatement	if ( ( s == NULL ) || ( * s == 0 ) )		15782	9					
ANR	16468	Condition	( s == NULL ) || ( * s == 0 )	1706:12:50960:50983	15782	0	True				
ANR	16469	OrExpression	( s == NULL ) || ( * s == 0 )		15782	0		||			
ANR	16470	EqualityExpression	s == NULL		15782	0		==			
ANR	16471	Identifier	s		15782	0					
ANR	16472	Identifier	NULL		15782	1					
ANR	16473	EqualityExpression	* s == 0		15782	1		==			
ANR	16474	UnaryOperationExpression	* s		15782	0					
ANR	16475	UnaryOperator	*		15782	0					
ANR	16476	Identifier	s		15782	1					
ANR	16477	PrimaryExpression	0		15782	1					
ANR	16478	CompoundStatement		140:38:3934:3934	15782	1					
ANR	16479	ReturnStatement	return ;	1707:12:51000:51006	15782	0	True				
ANR	16480	BreakStatement	break ;	1709:8:51026:51031	15782	10	True				
ANR	16481	IfStatement	if ( format == 2 || format == 3 || format > 4 )		15782	10					
ANR	16482	Condition	format == 2 || format == 3 || format > 4	1711:8:51067:51106	15782	0	True				
ANR	16483	OrExpression	format == 2 || format == 3 || format > 4		15782	0		||			
ANR	16484	EqualityExpression	format == 2		15782	0		==			
ANR	16485	Identifier	format		15782	0					
ANR	16486	PrimaryExpression	2		15782	1					
ANR	16487	OrExpression	format == 3 || format > 4		15782	1		||			
ANR	16488	EqualityExpression	format == 3		15782	0		==			
ANR	16489	Identifier	format		15782	0					
ANR	16490	PrimaryExpression	3		15782	1					
ANR	16491	RelationalExpression	format > 4		15782	1		>			
ANR	16492	Identifier	format		15782	0					
ANR	16493	PrimaryExpression	4		15782	1					
ANR	16494	CompoundStatement		145:50:4057:4057	15782	1					
ANR	16495	IfStatement	if ( ph -> maxval < 1 || ph -> maxval > 65535 )		15782	0					
ANR	16496	Condition	ph -> maxval < 1 || ph -> maxval > 65535	1712:12:51123:51158	15782	0	True				
ANR	16497	OrExpression	ph -> maxval < 1 || ph -> maxval > 65535		15782	0		||			
ANR	16498	RelationalExpression	ph -> maxval < 1		15782	0		<			
ANR	16499	PtrMemberAccess	ph -> maxval		15782	0					
ANR	16500	Identifier	ph		15782	0					
ANR	16501	Identifier	maxval		15782	1					
ANR	16502	PrimaryExpression	1		15782	1					
ANR	16503	RelationalExpression	ph -> maxval > 65535		15782	1		>			
ANR	16504	PtrMemberAccess	ph -> maxval		15782	0					
ANR	16505	Identifier	ph		15782	0					
ANR	16506	Identifier	maxval		15782	1					
ANR	16507	PrimaryExpression	65535		15782	1					
ANR	16508	CompoundStatement		146:50:4109:4109	15782	1					
ANR	16509	ReturnStatement	return ;	1713:12:51175:51181	15782	0	True				
ANR	16510	IfStatement	if ( ph -> width < 1 || ph -> height < 1 )		15782	11					
ANR	16511	Condition	ph -> width < 1 || ph -> height < 1	1716:8:51207:51237	15782	0	True				
ANR	16512	OrExpression	ph -> width < 1 || ph -> height < 1		15782	0		||			
ANR	16513	RelationalExpression	ph -> width < 1		15782	0		<			
ANR	16514	PtrMemberAccess	ph -> width		15782	0					
ANR	16515	Identifier	ph		15782	0					
ANR	16516	Identifier	width		15782	1					
ANR	16517	PrimaryExpression	1		15782	1					
ANR	16518	RelationalExpression	ph -> height < 1		15782	1		<			
ANR	16519	PtrMemberAccess	ph -> height		15782	0					
ANR	16520	Identifier	ph		15782	0					
ANR	16521	Identifier	height		15782	1					
ANR	16522	PrimaryExpression	1		15782	1					
ANR	16523	CompoundStatement		150:41:4188:4188	15782	1					
ANR	16524	ReturnStatement	return ;	1717:8:51250:51256	15782	0	True				
ANR	16525	IfStatement	if ( format == 7 )		15782	12					
ANR	16526	Condition	format == 7	1720:8:51273:51283	15782	0	True				
ANR	16527	EqualityExpression	format == 7		15782	0		==			
ANR	16528	Identifier	format		15782	0					
ANR	16529	PrimaryExpression	7		15782	1					
ANR	16530	CompoundStatement		154:21:4234:4234	15782	1					
ANR	16531	IfStatement	if ( ! end )		15782	0					
ANR	16532	Condition	! end	1721:12:51300:51303	15782	0	True				
ANR	16533	UnaryOperationExpression	! end		15782	0					
ANR	16534	UnaryOperator	!		15782	0					
ANR	16535	Identifier	end		15782	1					
ANR	16536	CompoundStatement		155:18:4254:4254	15782	1					
ANR	16537	ExpressionStatement	"fprintf ( stderr , ""read_pnm_header:P7 without ENDHDR\\n"" )"	1722:12:51320:51374	15782	0	True				
ANR	16538	CallExpression	"fprintf ( stderr , ""read_pnm_header:P7 without ENDHDR\\n"" )"		15782	0					
ANR	16539	Callee	fprintf		15782	0					
ANR	16540	Identifier	fprintf		15782	0					
ANR	16541	ArgumentList	stderr		15782	1					
ANR	16542	Argument	stderr		15782	0					
ANR	16543	Identifier	stderr		15782	0					
ANR	16544	Argument	"""read_pnm_header:P7 without ENDHDR\\n"""		15782	1					
ANR	16545	PrimaryExpression	"""read_pnm_header:P7 without ENDHDR\\n"""		15782	0					
ANR	16546	ReturnStatement	return ;	1723:12:51388:51394	15782	1	True				
ANR	16547	IfStatement	if ( ph -> depth < 1 || ph -> depth > 4 )		15782	1					
ANR	16548	Condition	ph -> depth < 1 || ph -> depth > 4	1725:12:51418:51447	15782	0	True				
ANR	16549	OrExpression	ph -> depth < 1 || ph -> depth > 4		15782	0		||			
ANR	16550	RelationalExpression	ph -> depth < 1		15782	0		<			
ANR	16551	PtrMemberAccess	ph -> depth		15782	0					
ANR	16552	Identifier	ph		15782	0					
ANR	16553	Identifier	depth		15782	1					
ANR	16554	PrimaryExpression	1		15782	1					
ANR	16555	RelationalExpression	ph -> depth > 4		15782	1		>			
ANR	16556	PtrMemberAccess	ph -> depth		15782	0					
ANR	16557	Identifier	ph		15782	0					
ANR	16558	Identifier	depth		15782	1					
ANR	16559	PrimaryExpression	4		15782	1					
ANR	16560	CompoundStatement		159:44:4398:4398	15782	1					
ANR	16561	ReturnStatement	return ;	1726:12:51464:51470	15782	0	True				
ANR	16562	IfStatement	if ( ttype )		15782	2					
ANR	16563	Condition	ttype	1729:12:51495:51499	15782	0	True				
ANR	16564	Identifier	ttype		15782	0					
ANR	16565	CompoundStatement		163:19:4450:4450	15782	1					
ANR	16566	ExpressionStatement	ph -> ok = 1	1730:12:51516:51526	15782	0	True				
ANR	16567	AssignmentExpression	ph -> ok = 1		15782	0		=			
ANR	16568	PtrMemberAccess	ph -> ok		15782	0					
ANR	16569	Identifier	ph		15782	0					
ANR	16570	Identifier	ok		15782	1					
ANR	16571	PrimaryExpression	1		15782	1					
ANR	16572	ElseStatement	else		15782	0					
ANR	16573	CompoundStatement		166:11:4497:4497	15782	0					
ANR	16574	ExpressionStatement	ph -> ok = 1	1733:8:51559:51569	15782	0	True				
ANR	16575	AssignmentExpression	ph -> ok = 1		15782	0		=			
ANR	16576	PtrMemberAccess	ph -> ok		15782	0					
ANR	16577	Identifier	ph		15782	0					
ANR	16578	Identifier	ok		15782	1					
ANR	16579	PrimaryExpression	1		15782	1					
ANR	16580	IfStatement	if ( format == 1 || format == 4 )		15782	1					
ANR	16581	Condition	format == 1 || format == 4	1734:12:51583:51608	15782	0	True				
ANR	16582	OrExpression	format == 1 || format == 4		15782	0		||			
ANR	16583	EqualityExpression	format == 1		15782	0		==			
ANR	16584	Identifier	format		15782	0					
ANR	16585	PrimaryExpression	1		15782	1					
ANR	16586	EqualityExpression	format == 4		15782	1		==			
ANR	16587	Identifier	format		15782	0					
ANR	16588	PrimaryExpression	4		15782	1					
ANR	16589	CompoundStatement		168:40:4559:4559	15782	1					
ANR	16590	ExpressionStatement	ph -> maxval = 255	1735:12:51625:51641	15782	0	True				
ANR	16591	AssignmentExpression	ph -> maxval = 255		15782	0		=			
ANR	16592	PtrMemberAccess	ph -> maxval		15782	0					
ANR	16593	Identifier	ph		15782	0					
ANR	16594	Identifier	maxval		15782	1					
ANR	16595	PrimaryExpression	255		15782	1					
ANR	16596	ReturnType	static void		15782	1					
ANR	16597	Identifier	read_pnm_header		15782	2					
ANR	16598	ParameterList	"FILE * reader , struct pnm_header * ph"		15782	3					
ANR	16599	Parameter	FILE * reader	1566:28:47014:47025	15782	0	True				
ANR	16600	ParameterType	FILE *		15782	0					
ANR	16601	Identifier	reader		15782	1					
ANR	16602	Parameter	struct pnm_header * ph	1566:42:47028:47048	15782	1	True				
ANR	16603	ParameterType	struct pnm_header *		15782	0					
ANR	16604	Identifier	ph		15782	1					
ANR	16605	CFGEntryNode	ENTRY		15782		True				
ANR	16606	CFGExitNode	EXIT		15782		True				
ANR	16607	Symbol	ph -> bw		15782						
ANR	16608	Symbol	reader		15782						
ANR	16609	Symbol	line		15782						
ANR	16610	Symbol	ph -> gray		15782						
ANR	16611	Symbol	skip_int		15782						
ANR	16612	Symbol	ph -> rgba		15782						
ANR	16613	Symbol	* line		15782						
ANR	16614	Symbol	type		15782						
ANR	16615	Symbol	fgets		15782						
ANR	16616	Symbol	skip_idf		15782						
ANR	16617	Symbol	& ph -> width		15782						
ANR	16618	Symbol	ph -> height		15782						
ANR	16619	Symbol	ph -> graya		15782						
ANR	16620	Symbol	ph -> maxval		15782						
ANR	16621	Symbol	ph -> format		15782						
ANR	16622	Symbol	end		15782						
ANR	16623	Symbol	& ph -> maxval		15782						
ANR	16624	Symbol	ph -> width		15782						
ANR	16625	Symbol	atoi		15782						
ANR	16626	Symbol	strcmp		15782						
ANR	16627	Symbol	NULL		15782						
ANR	16628	Symbol	& ph -> height		15782						
ANR	16629	Symbol	format		15782						
ANR	16630	Symbol	ph -> depth		15782						
ANR	16631	Symbol	idf		15782						
ANR	16632	Symbol	stderr		15782						
ANR	16633	Symbol	ph -> rgb		15782						
ANR	16634	Symbol	s		15782						
ANR	16635	Symbol	ttype		15782						
ANR	16636	Symbol	ph		15782						
ANR	16637	Symbol	allow_null		15782						
ANR	16638	Symbol	* ph		15782						
ANR	16639	Symbol	* s		15782						
ANR	16640	Symbol	& ph -> depth		15782						
ANR	16641	Symbol	ph -> ok		15782						
ANR	16642	Function	has_prec	1740:0:51662:52388							
ANR	16643	FunctionDef	has_prec (int val)		16642	0					
ANR	16644	CompoundStatement		1741:0:51691:52388	16642	0					
ANR	16645	IfStatement	if ( val < 2 )		16642	0					
ANR	16646	Condition	val < 2	1742:8:51701:51707	16642	0	True				
ANR	16647	RelationalExpression	val < 2		16642	0		<			
ANR	16648	Identifier	val		16642	0					
ANR	16649	PrimaryExpression	2		16642	1					
ANR	16650	CompoundStatement		2:17:18:18	16642	1					
ANR	16651	ReturnStatement	return 1 ;	1743:8:51720:51728	16642	0	True				
ANR	16652	PrimaryExpression	1		16642	0					
ANR	16653	IfStatement	if ( val < 4 )		16642	1					
ANR	16654	Condition	val < 4	1745:8:51744:51750	16642	0	True				
ANR	16655	RelationalExpression	val < 4		16642	0		<			
ANR	16656	Identifier	val		16642	0					
ANR	16657	PrimaryExpression	4		16642	1					
ANR	16658	CompoundStatement		5:17:61:61	16642	1					
ANR	16659	ReturnStatement	return 2 ;	1746:8:51763:51771	16642	0	True				
ANR	16660	PrimaryExpression	2		16642	0					
ANR	16661	IfStatement	if ( val < 8 )		16642	2					
ANR	16662	Condition	val < 8	1748:8:51787:51793	16642	0	True				
ANR	16663	RelationalExpression	val < 8		16642	0		<			
ANR	16664	Identifier	val		16642	0					
ANR	16665	PrimaryExpression	8		16642	1					
ANR	16666	CompoundStatement		8:17:104:104	16642	1					
ANR	16667	ReturnStatement	return 3 ;	1749:8:51806:51814	16642	0	True				
ANR	16668	PrimaryExpression	3		16642	0					
ANR	16669	IfStatement	if ( val < 16 )		16642	3					
ANR	16670	Condition	val < 16	1751:8:51830:51837	16642	0	True				
ANR	16671	RelationalExpression	val < 16		16642	0		<			
ANR	16672	Identifier	val		16642	0					
ANR	16673	PrimaryExpression	16		16642	1					
ANR	16674	CompoundStatement		11:18:148:148	16642	1					
ANR	16675	ReturnStatement	return 4 ;	1752:8:51850:51858	16642	0	True				
ANR	16676	PrimaryExpression	4		16642	0					
ANR	16677	IfStatement	if ( val < 32 )		16642	4					
ANR	16678	Condition	val < 32	1754:8:51874:51881	16642	0	True				
ANR	16679	RelationalExpression	val < 32		16642	0		<			
ANR	16680	Identifier	val		16642	0					
ANR	16681	PrimaryExpression	32		16642	1					
ANR	16682	CompoundStatement		14:18:192:192	16642	1					
ANR	16683	ReturnStatement	return 5 ;	1755:8:51894:51902	16642	0	True				
ANR	16684	PrimaryExpression	5		16642	0					
ANR	16685	IfStatement	if ( val < 64 )		16642	5					
ANR	16686	Condition	val < 64	1757:8:51918:51925	16642	0	True				
ANR	16687	RelationalExpression	val < 64		16642	0		<			
ANR	16688	Identifier	val		16642	0					
ANR	16689	PrimaryExpression	64		16642	1					
ANR	16690	CompoundStatement		17:18:236:236	16642	1					
ANR	16691	ReturnStatement	return 6 ;	1758:8:51938:51946	16642	0	True				
ANR	16692	PrimaryExpression	6		16642	0					
ANR	16693	IfStatement	if ( val < 128 )		16642	6					
ANR	16694	Condition	val < 128	1760:8:51962:51970	16642	0	True				
ANR	16695	RelationalExpression	val < 128		16642	0		<			
ANR	16696	Identifier	val		16642	0					
ANR	16697	PrimaryExpression	128		16642	1					
ANR	16698	CompoundStatement		20:19:281:281	16642	1					
ANR	16699	ReturnStatement	return 7 ;	1761:8:51983:51991	16642	0	True				
ANR	16700	PrimaryExpression	7		16642	0					
ANR	16701	IfStatement	if ( val < 256 )		16642	7					
ANR	16702	Condition	val < 256	1763:8:52007:52015	16642	0	True				
ANR	16703	RelationalExpression	val < 256		16642	0		<			
ANR	16704	Identifier	val		16642	0					
ANR	16705	PrimaryExpression	256		16642	1					
ANR	16706	CompoundStatement		23:19:326:326	16642	1					
ANR	16707	ReturnStatement	return 8 ;	1764:8:52028:52036	16642	0	True				
ANR	16708	PrimaryExpression	8		16642	0					
ANR	16709	IfStatement	if ( val < 512 )		16642	8					
ANR	16710	Condition	val < 512	1766:8:52052:52060	16642	0	True				
ANR	16711	RelationalExpression	val < 512		16642	0		<			
ANR	16712	Identifier	val		16642	0					
ANR	16713	PrimaryExpression	512		16642	1					
ANR	16714	CompoundStatement		26:19:371:371	16642	1					
ANR	16715	ReturnStatement	return 9 ;	1767:8:52073:52081	16642	0	True				
ANR	16716	PrimaryExpression	9		16642	0					
ANR	16717	IfStatement	if ( val < 1024 )		16642	9					
ANR	16718	Condition	val < 1024	1769:8:52097:52106	16642	0	True				
ANR	16719	RelationalExpression	val < 1024		16642	0		<			
ANR	16720	Identifier	val		16642	0					
ANR	16721	PrimaryExpression	1024		16642	1					
ANR	16722	CompoundStatement		29:20:417:417	16642	1					
ANR	16723	ReturnStatement	return 10 ;	1770:8:52119:52128	16642	0	True				
ANR	16724	PrimaryExpression	10		16642	0					
ANR	16725	IfStatement	if ( val < 2048 )		16642	10					
ANR	16726	Condition	val < 2048	1772:8:52144:52153	16642	0	True				
ANR	16727	RelationalExpression	val < 2048		16642	0		<			
ANR	16728	Identifier	val		16642	0					
ANR	16729	PrimaryExpression	2048		16642	1					
ANR	16730	CompoundStatement		32:20:464:464	16642	1					
ANR	16731	ReturnStatement	return 11 ;	1773:8:52166:52175	16642	0	True				
ANR	16732	PrimaryExpression	11		16642	0					
ANR	16733	IfStatement	if ( val < 4096 )		16642	11					
ANR	16734	Condition	val < 4096	1775:8:52191:52200	16642	0	True				
ANR	16735	RelationalExpression	val < 4096		16642	0		<			
ANR	16736	Identifier	val		16642	0					
ANR	16737	PrimaryExpression	4096		16642	1					
ANR	16738	CompoundStatement		35:20:511:511	16642	1					
ANR	16739	ReturnStatement	return 12 ;	1776:8:52213:52222	16642	0	True				
ANR	16740	PrimaryExpression	12		16642	0					
ANR	16741	IfStatement	if ( val < 8192 )		16642	12					
ANR	16742	Condition	val < 8192	1778:8:52238:52247	16642	0	True				
ANR	16743	RelationalExpression	val < 8192		16642	0		<			
ANR	16744	Identifier	val		16642	0					
ANR	16745	PrimaryExpression	8192		16642	1					
ANR	16746	CompoundStatement		38:20:558:558	16642	1					
ANR	16747	ReturnStatement	return 13 ;	1779:8:52260:52269	16642	0	True				
ANR	16748	PrimaryExpression	13		16642	0					
ANR	16749	IfStatement	if ( val < 16384 )		16642	13					
ANR	16750	Condition	val < 16384	1781:8:52285:52295	16642	0	True				
ANR	16751	RelationalExpression	val < 16384		16642	0		<			
ANR	16752	Identifier	val		16642	0					
ANR	16753	PrimaryExpression	16384		16642	1					
ANR	16754	CompoundStatement		41:21:606:606	16642	1					
ANR	16755	ReturnStatement	return 14 ;	1782:8:52308:52317	16642	0	True				
ANR	16756	PrimaryExpression	14		16642	0					
ANR	16757	IfStatement	if ( val < 32768 )		16642	14					
ANR	16758	Condition	val < 32768	1784:8:52333:52343	16642	0	True				
ANR	16759	RelationalExpression	val < 32768		16642	0		<			
ANR	16760	Identifier	val		16642	0					
ANR	16761	PrimaryExpression	32768		16642	1					
ANR	16762	CompoundStatement		44:21:654:654	16642	1					
ANR	16763	ReturnStatement	return 15 ;	1785:8:52356:52365	16642	0	True				
ANR	16764	PrimaryExpression	15		16642	0					
ANR	16765	ReturnStatement	return 16 ;	1787:4:52377:52386	16642	15	True				
ANR	16766	PrimaryExpression	16		16642	0					
ANR	16767	ReturnType	static int		16642	1					
ANR	16768	Identifier	has_prec		16642	2					
ANR	16769	ParameterList	int val		16642	3					
ANR	16770	Parameter	int val	1740:20:51682:51688	16642	0	True				
ANR	16771	ParameterType	int		16642	0					
ANR	16772	Identifier	val		16642	1					
ANR	16773	CFGEntryNode	ENTRY		16642		True				
ANR	16774	CFGExitNode	EXIT		16642		True				
ANR	16775	Symbol	val		16642						
ANR	16776	Function	pnmtoimage	1790:0:52391:58871							
ANR	16777	FunctionDef	"pnmtoimage (const char * filename , opj_cparameters_t * parameters)"		16776	0					
ANR	16778	CompoundStatement		1791:0:52468:58871	16776	0					
ANR	16779	IdentifierDeclStatement	int subsampling_dx = parameters -> subsampling_dx ;	1792:4:52474:52521	16776	0	True				
ANR	16780	IdentifierDecl	subsampling_dx = parameters -> subsampling_dx		16776	0					
ANR	16781	IdentifierDeclType	int		16776	0					
ANR	16782	Identifier	subsampling_dx		16776	1					
ANR	16783	AssignmentExpression	subsampling_dx = parameters -> subsampling_dx		16776	2		=			
ANR	16784	Identifier	subsampling_dx		16776	0					
ANR	16785	PtrMemberAccess	parameters -> subsampling_dx		16776	1					
ANR	16786	Identifier	parameters		16776	0					
ANR	16787	Identifier	subsampling_dx		16776	1					
ANR	16788	IdentifierDeclStatement	int subsampling_dy = parameters -> subsampling_dy ;	1793:4:52527:52574	16776	1	True				
ANR	16789	IdentifierDecl	subsampling_dy = parameters -> subsampling_dy		16776	0					
ANR	16790	IdentifierDeclType	int		16776	0					
ANR	16791	Identifier	subsampling_dy		16776	1					
ANR	16792	AssignmentExpression	subsampling_dy = parameters -> subsampling_dy		16776	2		=			
ANR	16793	Identifier	subsampling_dy		16776	0					
ANR	16794	PtrMemberAccess	parameters -> subsampling_dy		16776	1					
ANR	16795	Identifier	parameters		16776	0					
ANR	16796	Identifier	subsampling_dy		16776	1					
ANR	16797	IdentifierDeclStatement	FILE * fp = NULL ;	1795:4:52581:52596	16776	2	True				
ANR	16798	IdentifierDecl	* fp = NULL		16776	0					
ANR	16799	IdentifierDeclType	FILE *		16776	0					
ANR	16800	Identifier	fp		16776	1					
ANR	16801	AssignmentExpression	* fp = NULL		16776	2		=			
ANR	16802	Identifier	NULL		16776	0					
ANR	16803	Identifier	NULL		16776	1					
ANR	16804	IdentifierDeclStatement	"int i , compno , numcomps , w , h , prec , format ;"	1796:4:52602:52645	16776	3	True				
ANR	16805	IdentifierDecl	i		16776	0					
ANR	16806	IdentifierDeclType	int		16776	0					
ANR	16807	Identifier	i		16776	1					
ANR	16808	IdentifierDecl	compno		16776	1					
ANR	16809	IdentifierDeclType	int		16776	0					
ANR	16810	Identifier	compno		16776	1					
ANR	16811	IdentifierDecl	numcomps		16776	2					
ANR	16812	IdentifierDeclType	int		16776	0					
ANR	16813	Identifier	numcomps		16776	1					
ANR	16814	IdentifierDecl	w		16776	3					
ANR	16815	IdentifierDeclType	int		16776	0					
ANR	16816	Identifier	w		16776	1					
ANR	16817	IdentifierDecl	h		16776	4					
ANR	16818	IdentifierDeclType	int		16776	0					
ANR	16819	Identifier	h		16776	1					
ANR	16820	IdentifierDecl	prec		16776	5					
ANR	16821	IdentifierDeclType	int		16776	0					
ANR	16822	Identifier	prec		16776	1					
ANR	16823	IdentifierDecl	format		16776	6					
ANR	16824	IdentifierDeclType	int		16776	0					
ANR	16825	Identifier	format		16776	1					
ANR	16826	IdentifierDeclStatement	OPJ_COLOR_SPACE color_space ;	1797:4:52651:52678	16776	4	True				
ANR	16827	IdentifierDecl	color_space		16776	0					
ANR	16828	IdentifierDeclType	OPJ_COLOR_SPACE		16776	0					
ANR	16829	Identifier	color_space		16776	1					
ANR	16830	IdentifierDeclStatement	opj_image_cmptparm_t cmptparm [ 4 ] ;	1798:4:52684:52716	16776	5	True				
ANR	16831	IdentifierDecl	cmptparm [ 4 ]		16776	0					
ANR	16832	IdentifierDeclType	opj_image_cmptparm_t [ 4 ]		16776	0					
ANR	16833	Identifier	cmptparm		16776	1					
ANR	16834	PrimaryExpression	4		16776	2					
ANR	16835	IdentifierDeclStatement	opj_image_t * image = NULL ;	1799:4:52752:52778	16776	6	True				
ANR	16836	IdentifierDecl	* image = NULL		16776	0					
ANR	16837	IdentifierDeclType	opj_image_t *		16776	0					
ANR	16838	Identifier	image		16776	1					
ANR	16839	AssignmentExpression	* image = NULL		16776	2		=			
ANR	16840	Identifier	NULL		16776	0					
ANR	16841	Identifier	NULL		16776	1					
ANR	16842	IdentifierDeclStatement	struct pnm_header header_info ;	1800:4:52784:52813	16776	7	True				
ANR	16843	IdentifierDecl	header_info		16776	0					
ANR	16844	IdentifierDeclType	struct pnm_header		16776	0					
ANR	16845	Identifier	header_info		16776	1					
ANR	16846	IfStatement	"if ( ( fp = fopen ( filename , ""rb"" ) ) == NULL )"		16776	8					
ANR	16847	Condition	"( fp = fopen ( filename , ""rb"" ) ) == NULL"	1802:8:52824:52859	16776	0	True				
ANR	16848	EqualityExpression	"( fp = fopen ( filename , ""rb"" ) ) == NULL"		16776	0		==			
ANR	16849	AssignmentExpression	"fp = fopen ( filename , ""rb"" )"		16776	0		=			
ANR	16850	Identifier	fp		16776	0					
ANR	16851	CallExpression	"fopen ( filename , ""rb"" )"		16776	1					
ANR	16852	Callee	fopen		16776	0					
ANR	16853	Identifier	fopen		16776	0					
ANR	16854	ArgumentList	filename		16776	1					
ANR	16855	Argument	filename		16776	0					
ANR	16856	Identifier	filename		16776	0					
ANR	16857	Argument	"""rb"""		16776	1					
ANR	16858	PrimaryExpression	"""rb"""		16776	0					
ANR	16859	Identifier	NULL		16776	1					
ANR	16860	CompoundStatement		12:46:393:393	16776	1					
ANR	16861	ExpressionStatement	"fprintf ( stderr , ""pnmtoimage:Failed to open %s for reading!\\n"" , filename )"	1803:8:52872:52944	16776	0	True				
ANR	16862	CallExpression	"fprintf ( stderr , ""pnmtoimage:Failed to open %s for reading!\\n"" , filename )"		16776	0					
ANR	16863	Callee	fprintf		16776	0					
ANR	16864	Identifier	fprintf		16776	0					
ANR	16865	ArgumentList	stderr		16776	1					
ANR	16866	Argument	stderr		16776	0					
ANR	16867	Identifier	stderr		16776	0					
ANR	16868	Argument	"""pnmtoimage:Failed to open %s for reading!\\n"""		16776	1					
ANR	16869	PrimaryExpression	"""pnmtoimage:Failed to open %s for reading!\\n"""		16776	0					
ANR	16870	Argument	filename		16776	2					
ANR	16871	Identifier	filename		16776	0					
ANR	16872	ReturnStatement	return NULL ;	1804:8:52954:52965	16776	1	True				
ANR	16873	Identifier	NULL		16776	0					
ANR	16874	ExpressionStatement	"memset ( & header_info , 0 , sizeof ( struct pnm_header ) )"	1806:4:52977:53027	16776	9	True				
ANR	16875	CallExpression	"memset ( & header_info , 0 , sizeof ( struct pnm_header ) )"		16776	0					
ANR	16876	Callee	memset		16776	0					
ANR	16877	Identifier	memset		16776	0					
ANR	16878	ArgumentList	& header_info		16776	1					
ANR	16879	Argument	& header_info		16776	0					
ANR	16880	UnaryOperationExpression	& header_info		16776	0					
ANR	16881	UnaryOperator	&		16776	0					
ANR	16882	Identifier	header_info		16776	1					
ANR	16883	Argument	0		16776	1					
ANR	16884	PrimaryExpression	0		16776	0					
ANR	16885	Argument	sizeof ( struct pnm_header )		16776	2					
ANR	16886	SizeofExpression	sizeof ( struct pnm_header )		16776	0					
ANR	16887	Sizeof	sizeof		16776	0					
ANR	16888	SizeofOperand	struct pnm_header		16776	1					
ANR	16889	ExpressionStatement	"read_pnm_header ( fp , & header_info )"	1808:4:53034:53067	16776	10	True				
ANR	16890	CallExpression	"read_pnm_header ( fp , & header_info )"		16776	0					
ANR	16891	Callee	read_pnm_header		16776	0					
ANR	16892	Identifier	read_pnm_header		16776	0					
ANR	16893	ArgumentList	fp		16776	1					
ANR	16894	Argument	fp		16776	0					
ANR	16895	Identifier	fp		16776	0					
ANR	16896	Argument	& header_info		16776	1					
ANR	16897	UnaryOperationExpression	& header_info		16776	0					
ANR	16898	UnaryOperator	&		16776	0					
ANR	16899	Identifier	header_info		16776	1					
ANR	16900	IfStatement	if ( ! header_info . ok )		16776	11					
ANR	16901	Condition	! header_info . ok	1810:8:53078:53092	16776	0	True				
ANR	16902	UnaryOperationExpression	! header_info . ok		16776	0					
ANR	16903	UnaryOperator	!		16776	0					
ANR	16904	MemberAccess	header_info . ok		16776	1					
ANR	16905	Identifier	header_info		16776	0					
ANR	16906	Identifier	ok		16776	1					
ANR	16907	CompoundStatement		20:25:626:626	16776	1					
ANR	16908	ExpressionStatement	fclose ( fp )	1811:8:53105:53115	16776	0	True				
ANR	16909	CallExpression	fclose ( fp )		16776	0					
ANR	16910	Callee	fclose		16776	0					
ANR	16911	Identifier	fclose		16776	0					
ANR	16912	ArgumentList	fp		16776	1					
ANR	16913	Argument	fp		16776	0					
ANR	16914	Identifier	fp		16776	0					
ANR	16915	ReturnStatement	return NULL ;	1812:8:53125:53136	16776	1	True				
ANR	16916	Identifier	NULL		16776	0					
ANR	16917	IfStatement	if ( header_info . width == 0 || header_info . height == 0 || ( header_info . format == 7 && header_info . depth == 0 ) )		16776	12					
ANR	16918	Condition	header_info . width == 0 || header_info . height == 0 || ( header_info . format == 7 && header_info . depth == 0 )	1815:8:53153:53280	16776	0	True				
ANR	16919	OrExpression	header_info . width == 0 || header_info . height == 0 || ( header_info . format == 7 && header_info . depth == 0 )		16776	0		||			
ANR	16920	EqualityExpression	header_info . width == 0		16776	0		==			
ANR	16921	MemberAccess	header_info . width		16776	0					
ANR	16922	Identifier	header_info		16776	0					
ANR	16923	Identifier	width		16776	1					
ANR	16924	PrimaryExpression	0		16776	1					
ANR	16925	OrExpression	header_info . height == 0 || ( header_info . format == 7 && header_info . depth == 0 )		16776	1		||			
ANR	16926	EqualityExpression	header_info . height == 0		16776	0		==			
ANR	16927	MemberAccess	header_info . height		16776	0					
ANR	16928	Identifier	header_info		16776	0					
ANR	16929	Identifier	height		16776	1					
ANR	16930	PrimaryExpression	0		16776	1					
ANR	16931	AndExpression	header_info . format == 7 && header_info . depth == 0		16776	1		&&			
ANR	16932	EqualityExpression	header_info . format == 7		16776	0		==			
ANR	16933	MemberAccess	header_info . format		16776	0					
ANR	16934	Identifier	header_info		16776	0					
ANR	16935	Identifier	format		16776	1					
ANR	16936	PrimaryExpression	7		16776	1					
ANR	16937	EqualityExpression	header_info . depth == 0		16776	1		==			
ANR	16938	MemberAccess	header_info . depth		16776	0					
ANR	16939	Identifier	header_info		16776	0					
ANR	16940	Identifier	depth		16776	1					
ANR	16941	PrimaryExpression	0		16776	1					
ANR	16942	CompoundStatement		27:68:814:814	16776	1					
ANR	16943	ExpressionStatement	fclose ( fp )	1818:8:53293:53303	16776	0	True				
ANR	16944	CallExpression	fclose ( fp )		16776	0					
ANR	16945	Callee	fclose		16776	0					
ANR	16946	Identifier	fclose		16776	0					
ANR	16947	ArgumentList	fp		16776	1					
ANR	16948	Argument	fp		16776	0					
ANR	16949	Identifier	fp		16776	0					
ANR	16950	ReturnStatement	return NULL ;	1819:8:53313:53324	16776	1	True				
ANR	16951	Identifier	NULL		16776	0					
ANR	16952	IfStatement	if ( header_info . height != 0 && header_info . width > INT_MAX / header_info . height )		16776	13					
ANR	16953	Condition	header_info . height != 0 && header_info . width > INT_MAX / header_info . height	1823:8:53419:53505	16776	0	True				
ANR	16954	AndExpression	header_info . height != 0 && header_info . width > INT_MAX / header_info . height		16776	0		&&			
ANR	16955	EqualityExpression	header_info . height != 0		16776	0		!=			
ANR	16956	MemberAccess	header_info . height		16776	0					
ANR	16957	Identifier	header_info		16776	0					
ANR	16958	Identifier	height		16776	1					
ANR	16959	PrimaryExpression	0		16776	1					
ANR	16960	RelationalExpression	header_info . width > INT_MAX / header_info . height		16776	1		>			
ANR	16961	MemberAccess	header_info . width		16776	0					
ANR	16962	Identifier	header_info		16776	0					
ANR	16963	Identifier	width		16776	1					
ANR	16964	MultiplicativeExpression	INT_MAX / header_info . height		16776	1		/			
ANR	16965	Identifier	INT_MAX		16776	0					
ANR	16966	MemberAccess	header_info . height		16776	1					
ANR	16967	Identifier	header_info		16776	0					
ANR	16968	Identifier	height		16776	1					
ANR	16969	CompoundStatement		34:62:1039:1039	16776	1					
ANR	16970	ExpressionStatement	"fprintf ( stderr , ""pnmtoimage:Image %dx%d too big!\\n"" , header_info . width , header_info . height )"	1825:8:53518:53625	16776	0	True				
ANR	16971	CallExpression	"fprintf ( stderr , ""pnmtoimage:Image %dx%d too big!\\n"" , header_info . width , header_info . height )"		16776	0					
ANR	16972	Callee	fprintf		16776	0					
ANR	16973	Identifier	fprintf		16776	0					
ANR	16974	ArgumentList	stderr		16776	1					
ANR	16975	Argument	stderr		16776	0					
ANR	16976	Identifier	stderr		16776	0					
ANR	16977	Argument	"""pnmtoimage:Image %dx%d too big!\\n"""		16776	1					
ANR	16978	PrimaryExpression	"""pnmtoimage:Image %dx%d too big!\\n"""		16776	0					
ANR	16979	Argument	header_info . width		16776	2					
ANR	16980	MemberAccess	header_info . width		16776	0					
ANR	16981	Identifier	header_info		16776	0					
ANR	16982	Identifier	width		16776	1					
ANR	16983	Argument	header_info . height		16776	3					
ANR	16984	MemberAccess	header_info . height		16776	0					
ANR	16985	Identifier	header_info		16776	0					
ANR	16986	Identifier	height		16776	1					
ANR	16987	ExpressionStatement	fclose ( fp )	1827:8:53635:53645	16776	1	True				
ANR	16988	CallExpression	fclose ( fp )		16776	0					
ANR	16989	Callee	fclose		16776	0					
ANR	16990	Identifier	fclose		16776	0					
ANR	16991	ArgumentList	fp		16776	1					
ANR	16992	Argument	fp		16776	0					
ANR	16993	Identifier	fp		16776	0					
ANR	16994	ReturnStatement	return NULL ;	1828:8:53655:53666	16776	2	True				
ANR	16995	Identifier	NULL		16776	0					
ANR	16996	ExpressionStatement	format = header_info . format	1831:4:53679:53706	16776	14	True				
ANR	16997	AssignmentExpression	format = header_info . format		16776	0		=			
ANR	16998	Identifier	format		16776	0					
ANR	16999	MemberAccess	header_info . format		16776	1					
ANR	17000	Identifier	header_info		16776	0					
ANR	17001	Identifier	format		16776	1					
ANR	17002	SwitchStatement	switch ( format )		16776	15					
ANR	17003	Condition	format	1833:12:53721:53726	16776	0	True				
ANR	17004	Identifier	format		16776	0					
ANR	17005	CompoundStatement		43:20:1260:1260	16776	1					
ANR	17006	Label	case 1 :	1834:4:53735:53741	16776	0	True				
ANR	17007	Label	case 4 :	1835:4:53766:53772	16776	1	True				
ANR	17008	ExpressionStatement	numcomps = 1	1836:8:53799:53811	16776	2	True				
ANR	17009	AssignmentExpression	numcomps = 1		16776	0		=			
ANR	17010	Identifier	numcomps		16776	0					
ANR	17011	PrimaryExpression	1		16776	1					
ANR	17012	BreakStatement	break ;	1837:8:53821:53826	16776	3	True				
ANR	17013	Label	case 2 :	1839:4:53833:53839	16776	4	True				
ANR	17014	Label	case 5 :	1840:4:53865:53871	16776	5	True				
ANR	17015	ExpressionStatement	numcomps = 1	1841:8:53899:53911	16776	6	True				
ANR	17016	AssignmentExpression	numcomps = 1		16776	0		=			
ANR	17017	Identifier	numcomps		16776	0					
ANR	17018	PrimaryExpression	1		16776	1					
ANR	17019	BreakStatement	break ;	1842:8:53921:53926	16776	7	True				
ANR	17020	Label	case 3 :	1844:4:53933:53939	16776	8	True				
ANR	17021	Label	case 6 :	1845:4:53964:53970	16776	9	True				
ANR	17022	ExpressionStatement	numcomps = 3	1846:8:53997:54009	16776	10	True				
ANR	17023	AssignmentExpression	numcomps = 3		16776	0		=			
ANR	17024	Identifier	numcomps		16776	0					
ANR	17025	PrimaryExpression	3		16776	1					
ANR	17026	BreakStatement	break ;	1847:8:54019:54024	16776	11	True				
ANR	17027	Label	case 7 :	1849:4:54031:54037	16776	12	True				
ANR	17028	ExpressionStatement	numcomps = header_info . depth	1850:8:54067:54095	16776	13	True				
ANR	17029	AssignmentExpression	numcomps = header_info . depth		16776	0		=			
ANR	17030	Identifier	numcomps		16776	0					
ANR	17031	MemberAccess	header_info . depth		16776	1					
ANR	17032	Identifier	header_info		16776	0					
ANR	17033	Identifier	depth		16776	1					
ANR	17034	BreakStatement	break ;	1851:8:54105:54110	16776	14	True				
ANR	17035	Label	default :	1853:4:54117:54124	16776	15	True				
ANR	17036	Identifier	default		16776	0					
ANR	17037	ExpressionStatement	fclose ( fp )	1854:8:54134:54144	16776	16	True				
ANR	17038	CallExpression	fclose ( fp )		16776	0					
ANR	17039	Callee	fclose		16776	0					
ANR	17040	Identifier	fclose		16776	0					
ANR	17041	ArgumentList	fp		16776	1					
ANR	17042	Argument	fp		16776	0					
ANR	17043	Identifier	fp		16776	0					
ANR	17044	ReturnStatement	return NULL ;	1855:8:54154:54165	16776	17	True				
ANR	17045	Identifier	NULL		16776	0					
ANR	17046	IfStatement	if ( numcomps < 3 )		16776	16					
ANR	17047	Condition	numcomps < 3	1857:8:54181:54192	16776	0	True				
ANR	17048	RelationalExpression	numcomps < 3		16776	0		<			
ANR	17049	Identifier	numcomps		16776	0					
ANR	17050	PrimaryExpression	3		16776	1					
ANR	17051	CompoundStatement		67:22:1726:1726	16776	1					
ANR	17052	ExpressionStatement	color_space = OPJ_CLRSPC_GRAY	1858:8:54205:54234	16776	0	True				
ANR	17053	AssignmentExpression	color_space = OPJ_CLRSPC_GRAY		16776	0		=			
ANR	17054	Identifier	color_space		16776	0					
ANR	17055	Identifier	OPJ_CLRSPC_GRAY		16776	1					
ANR	17056	ElseStatement	else		16776	0					
ANR	17057	CompoundStatement		69:11:1799:1799	16776	0					
ANR	17058	ExpressionStatement	color_space = OPJ_CLRSPC_SRGB	1860:8:54278:54307	16776	0	True				
ANR	17059	AssignmentExpression	color_space = OPJ_CLRSPC_SRGB		16776	0		=			
ANR	17060	Identifier	color_space		16776	0					
ANR	17061	Identifier	OPJ_CLRSPC_SRGB		16776	1					
ANR	17062	ExpressionStatement	prec = has_prec ( header_info . maxval )	1863:4:54339:54374	16776	17	True				
ANR	17063	AssignmentExpression	prec = has_prec ( header_info . maxval )		16776	0		=			
ANR	17064	Identifier	prec		16776	0					
ANR	17065	CallExpression	has_prec ( header_info . maxval )		16776	1					
ANR	17066	Callee	has_prec		16776	0					
ANR	17067	Identifier	has_prec		16776	0					
ANR	17068	ArgumentList	header_info . maxval		16776	1					
ANR	17069	Argument	header_info . maxval		16776	0					
ANR	17070	MemberAccess	header_info . maxval		16776	0					
ANR	17071	Identifier	header_info		16776	0					
ANR	17072	Identifier	maxval		16776	1					
ANR	17073	IfStatement	if ( prec < 8 )		16776	18					
ANR	17074	Condition	prec < 8	1865:8:54385:54392	16776	0	True				
ANR	17075	RelationalExpression	prec < 8		16776	0		<			
ANR	17076	Identifier	prec		16776	0					
ANR	17077	PrimaryExpression	8		16776	1					
ANR	17078	CompoundStatement		75:18:1926:1926	16776	1					
ANR	17079	ExpressionStatement	prec = 8	1866:8:54405:54413	16776	0	True				
ANR	17080	AssignmentExpression	prec = 8		16776	0		=			
ANR	17081	Identifier	prec		16776	0					
ANR	17082	PrimaryExpression	8		16776	1					
ANR	17083	ExpressionStatement	w = header_info . width	1869:4:54426:54447	16776	19	True				
ANR	17084	AssignmentExpression	w = header_info . width		16776	0		=			
ANR	17085	Identifier	w		16776	0					
ANR	17086	MemberAccess	header_info . width		16776	1					
ANR	17087	Identifier	header_info		16776	0					
ANR	17088	Identifier	width		16776	1					
ANR	17089	ExpressionStatement	h = header_info . height	1870:4:54453:54475	16776	20	True				
ANR	17090	AssignmentExpression	h = header_info . height		16776	0		=			
ANR	17091	Identifier	h		16776	0					
ANR	17092	MemberAccess	header_info . height		16776	1					
ANR	17093	Identifier	header_info		16776	0					
ANR	17094	Identifier	height		16776	1					
ANR	17095	ExpressionStatement	subsampling_dx = parameters -> subsampling_dx	1871:4:54481:54524	16776	21	True				
ANR	17096	AssignmentExpression	subsampling_dx = parameters -> subsampling_dx		16776	0		=			
ANR	17097	Identifier	subsampling_dx		16776	0					
ANR	17098	PtrMemberAccess	parameters -> subsampling_dx		16776	1					
ANR	17099	Identifier	parameters		16776	0					
ANR	17100	Identifier	subsampling_dx		16776	1					
ANR	17101	ExpressionStatement	subsampling_dy = parameters -> subsampling_dy	1872:4:54530:54573	16776	22	True				
ANR	17102	AssignmentExpression	subsampling_dy = parameters -> subsampling_dy		16776	0		=			
ANR	17103	Identifier	subsampling_dy		16776	0					
ANR	17104	PtrMemberAccess	parameters -> subsampling_dy		16776	1					
ANR	17105	Identifier	parameters		16776	0					
ANR	17106	Identifier	subsampling_dy		16776	1					
ANR	17107	ExpressionStatement	"memset ( & cmptparm [ 0 ] , 0 , ( size_t ) numcomps * sizeof ( opj_image_cmptparm_t ) )"	1874:4:54580:54652	16776	23	True				
ANR	17108	CallExpression	"memset ( & cmptparm [ 0 ] , 0 , ( size_t ) numcomps * sizeof ( opj_image_cmptparm_t ) )"		16776	0					
ANR	17109	Callee	memset		16776	0					
ANR	17110	Identifier	memset		16776	0					
ANR	17111	ArgumentList	& cmptparm [ 0 ]		16776	1					
ANR	17112	Argument	& cmptparm [ 0 ]		16776	0					
ANR	17113	UnaryOperationExpression	& cmptparm [ 0 ]		16776	0					
ANR	17114	UnaryOperator	&		16776	0					
ANR	17115	ArrayIndexing	cmptparm [ 0 ]		16776	1					
ANR	17116	Identifier	cmptparm		16776	0					
ANR	17117	PrimaryExpression	0		16776	1					
ANR	17118	Argument	0		16776	1					
ANR	17119	PrimaryExpression	0		16776	0					
ANR	17120	Argument	( size_t ) numcomps * sizeof ( opj_image_cmptparm_t )		16776	2					
ANR	17121	MultiplicativeExpression	( size_t ) numcomps * sizeof ( opj_image_cmptparm_t )		16776	0		*			
ANR	17122	CastExpression	( size_t ) numcomps		16776	0					
ANR	17123	CastTarget	size_t		16776	0					
ANR	17124	Identifier	numcomps		16776	1					
ANR	17125	SizeofExpression	sizeof ( opj_image_cmptparm_t )		16776	1					
ANR	17126	Sizeof	sizeof		16776	0					
ANR	17127	SizeofOperand	opj_image_cmptparm_t		16776	1					
ANR	17128	ForStatement	for ( i = 0 ; i < numcomps ; i ++ )		16776	24					
ANR	17129	ForInit	i = 0 ;	1876:9:54664:54669	16776	0	True				
ANR	17130	AssignmentExpression	i = 0		16776	0		=			
ANR	17131	Identifier	i		16776	0					
ANR	17132	PrimaryExpression	0		16776	1					
ANR	17133	Condition	i < numcomps	1876:16:54671:54682	16776	1	True				
ANR	17134	RelationalExpression	i < numcomps		16776	0		<			
ANR	17135	Identifier	i		16776	0					
ANR	17136	Identifier	numcomps		16776	1					
ANR	17137	PostIncDecOperationExpression	i ++	1876:30:54685:54687	16776	2	True				
ANR	17138	Identifier	i		16776	0					
ANR	17139	IncDec	++		16776	1					
ANR	17140	CompoundStatement		86:35:2221:2221	16776	3					
ANR	17141	ExpressionStatement	cmptparm [ i ] . prec = ( OPJ_UINT32 ) prec	1877:8:54700:54735	16776	0	True				
ANR	17142	AssignmentExpression	cmptparm [ i ] . prec = ( OPJ_UINT32 ) prec		16776	0		=			
ANR	17143	MemberAccess	cmptparm [ i ] . prec		16776	0					
ANR	17144	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17145	Identifier	cmptparm		16776	0					
ANR	17146	Identifier	i		16776	1					
ANR	17147	Identifier	prec		16776	1					
ANR	17148	CastExpression	( OPJ_UINT32 ) prec		16776	1					
ANR	17149	CastTarget	OPJ_UINT32		16776	0					
ANR	17150	Identifier	prec		16776	1					
ANR	17151	ExpressionStatement	cmptparm [ i ] . bpp = ( OPJ_UINT32 ) prec	1878:8:54745:54779	16776	1	True				
ANR	17152	AssignmentExpression	cmptparm [ i ] . bpp = ( OPJ_UINT32 ) prec		16776	0		=			
ANR	17153	MemberAccess	cmptparm [ i ] . bpp		16776	0					
ANR	17154	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17155	Identifier	cmptparm		16776	0					
ANR	17156	Identifier	i		16776	1					
ANR	17157	Identifier	bpp		16776	1					
ANR	17158	CastExpression	( OPJ_UINT32 ) prec		16776	1					
ANR	17159	CastTarget	OPJ_UINT32		16776	0					
ANR	17160	Identifier	prec		16776	1					
ANR	17161	ExpressionStatement	cmptparm [ i ] . sgnd = 0	1879:8:54789:54809	16776	2	True				
ANR	17162	AssignmentExpression	cmptparm [ i ] . sgnd = 0		16776	0		=			
ANR	17163	MemberAccess	cmptparm [ i ] . sgnd		16776	0					
ANR	17164	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17165	Identifier	cmptparm		16776	0					
ANR	17166	Identifier	i		16776	1					
ANR	17167	Identifier	sgnd		16776	1					
ANR	17168	PrimaryExpression	0		16776	1					
ANR	17169	ExpressionStatement	cmptparm [ i ] . dx = ( OPJ_UINT32 ) subsampling_dx	1880:8:54819:54862	16776	3	True				
ANR	17170	AssignmentExpression	cmptparm [ i ] . dx = ( OPJ_UINT32 ) subsampling_dx		16776	0		=			
ANR	17171	MemberAccess	cmptparm [ i ] . dx		16776	0					
ANR	17172	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17173	Identifier	cmptparm		16776	0					
ANR	17174	Identifier	i		16776	1					
ANR	17175	Identifier	dx		16776	1					
ANR	17176	CastExpression	( OPJ_UINT32 ) subsampling_dx		16776	1					
ANR	17177	CastTarget	OPJ_UINT32		16776	0					
ANR	17178	Identifier	subsampling_dx		16776	1					
ANR	17179	ExpressionStatement	cmptparm [ i ] . dy = ( OPJ_UINT32 ) subsampling_dy	1881:8:54872:54915	16776	4	True				
ANR	17180	AssignmentExpression	cmptparm [ i ] . dy = ( OPJ_UINT32 ) subsampling_dy		16776	0		=			
ANR	17181	MemberAccess	cmptparm [ i ] . dy		16776	0					
ANR	17182	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17183	Identifier	cmptparm		16776	0					
ANR	17184	Identifier	i		16776	1					
ANR	17185	Identifier	dy		16776	1					
ANR	17186	CastExpression	( OPJ_UINT32 ) subsampling_dy		16776	1					
ANR	17187	CastTarget	OPJ_UINT32		16776	0					
ANR	17188	Identifier	subsampling_dy		16776	1					
ANR	17189	ExpressionStatement	cmptparm [ i ] . w = ( OPJ_UINT32 ) w	1882:8:54925:54954	16776	5	True				
ANR	17190	AssignmentExpression	cmptparm [ i ] . w = ( OPJ_UINT32 ) w		16776	0		=			
ANR	17191	MemberAccess	cmptparm [ i ] . w		16776	0					
ANR	17192	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17193	Identifier	cmptparm		16776	0					
ANR	17194	Identifier	i		16776	1					
ANR	17195	Identifier	w		16776	1					
ANR	17196	CastExpression	( OPJ_UINT32 ) w		16776	1					
ANR	17197	CastTarget	OPJ_UINT32		16776	0					
ANR	17198	Identifier	w		16776	1					
ANR	17199	ExpressionStatement	cmptparm [ i ] . h = ( OPJ_UINT32 ) h	1883:8:54964:54993	16776	6	True				
ANR	17200	AssignmentExpression	cmptparm [ i ] . h = ( OPJ_UINT32 ) h		16776	0		=			
ANR	17201	MemberAccess	cmptparm [ i ] . h		16776	0					
ANR	17202	ArrayIndexing	cmptparm [ i ]		16776	0					
ANR	17203	Identifier	cmptparm		16776	0					
ANR	17204	Identifier	i		16776	1					
ANR	17205	Identifier	h		16776	1					
ANR	17206	CastExpression	( OPJ_UINT32 ) h		16776	1					
ANR	17207	CastTarget	OPJ_UINT32		16776	0					
ANR	17208	Identifier	h		16776	1					
ANR	17209	ExpressionStatement	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"	1885:4:55005:55078	16776	25	True				
ANR	17210	AssignmentExpression	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"		16776	0		=			
ANR	17211	Identifier	image		16776	0					
ANR	17212	CallExpression	"opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"		16776	1					
ANR	17213	Callee	opj_image_create		16776	0					
ANR	17214	Identifier	opj_image_create		16776	0					
ANR	17215	ArgumentList	( OPJ_UINT32 ) numcomps		16776	1					
ANR	17216	Argument	( OPJ_UINT32 ) numcomps		16776	0					
ANR	17217	CastExpression	( OPJ_UINT32 ) numcomps		16776	0					
ANR	17218	CastTarget	OPJ_UINT32		16776	0					
ANR	17219	Identifier	numcomps		16776	1					
ANR	17220	Argument	& cmptparm [ 0 ]		16776	1					
ANR	17221	UnaryOperationExpression	& cmptparm [ 0 ]		16776	0					
ANR	17222	UnaryOperator	&		16776	0					
ANR	17223	ArrayIndexing	cmptparm [ 0 ]		16776	1					
ANR	17224	Identifier	cmptparm		16776	0					
ANR	17225	PrimaryExpression	0		16776	1					
ANR	17226	Argument	color_space		16776	2					
ANR	17227	Identifier	color_space		16776	0					
ANR	17228	IfStatement	if ( ! image )		16776	26					
ANR	17229	Condition	! image	1887:8:55089:55094	16776	0	True				
ANR	17230	UnaryOperationExpression	! image		16776	0					
ANR	17231	UnaryOperator	!		16776	0					
ANR	17232	Identifier	image		16776	1					
ANR	17233	CompoundStatement		97:16:2628:2628	16776	1					
ANR	17234	ExpressionStatement	fclose ( fp )	1888:8:55107:55117	16776	0	True				
ANR	17235	CallExpression	fclose ( fp )		16776	0					
ANR	17236	Callee	fclose		16776	0					
ANR	17237	Identifier	fclose		16776	0					
ANR	17238	ArgumentList	fp		16776	1					
ANR	17239	Argument	fp		16776	0					
ANR	17240	Identifier	fp		16776	0					
ANR	17241	ReturnStatement	return NULL ;	1889:8:55127:55138	16776	1	True				
ANR	17242	Identifier	NULL		16776	0					
ANR	17243	ExpressionStatement	image -> x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0	1893:4:55197:55248	16776	27	True				
ANR	17244	AssignmentExpression	image -> x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0		16776	0		=			
ANR	17245	PtrMemberAccess	image -> x0		16776	0					
ANR	17246	Identifier	image		16776	0					
ANR	17247	Identifier	x0		16776	1					
ANR	17248	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_x0		16776	1					
ANR	17249	CastTarget	OPJ_UINT32		16776	0					
ANR	17250	PtrMemberAccess	parameters -> image_offset_x0		16776	1					
ANR	17251	Identifier	parameters		16776	0					
ANR	17252	Identifier	image_offset_x0		16776	1					
ANR	17253	ExpressionStatement	image -> y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0	1894:4:55254:55305	16776	28	True				
ANR	17254	AssignmentExpression	image -> y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0		16776	0		=			
ANR	17255	PtrMemberAccess	image -> y0		16776	0					
ANR	17256	Identifier	image		16776	0					
ANR	17257	Identifier	y0		16776	1					
ANR	17258	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_y0		16776	1					
ANR	17259	CastTarget	OPJ_UINT32		16776	0					
ANR	17260	PtrMemberAccess	parameters -> image_offset_y0		16776	1					
ANR	17261	Identifier	parameters		16776	0					
ANR	17262	Identifier	image_offset_y0		16776	1					
ANR	17263	ExpressionStatement	image -> x1 = ( OPJ_UINT32 ) ( parameters -> image_offset_x0 + ( w - 1 ) * subsampling_dx + 1 )	1895:4:55311:55424	16776	29	True				
ANR	17264	AssignmentExpression	image -> x1 = ( OPJ_UINT32 ) ( parameters -> image_offset_x0 + ( w - 1 ) * subsampling_dx + 1 )		16776	0		=			
ANR	17265	PtrMemberAccess	image -> x1		16776	0					
ANR	17266	Identifier	image		16776	0					
ANR	17267	Identifier	x1		16776	1					
ANR	17268	CastExpression	( OPJ_UINT32 ) ( parameters -> image_offset_x0 + ( w - 1 ) * subsampling_dx + 1 )		16776	1					
ANR	17269	CastTarget	OPJ_UINT32		16776	0					
ANR	17270	AdditiveExpression	parameters -> image_offset_x0 + ( w - 1 ) * subsampling_dx + 1		16776	1		+			
ANR	17271	PtrMemberAccess	parameters -> image_offset_x0		16776	0					
ANR	17272	Identifier	parameters		16776	0					
ANR	17273	Identifier	image_offset_x0		16776	1					
ANR	17274	AdditiveExpression	( w - 1 ) * subsampling_dx + 1		16776	1		+			
ANR	17275	MultiplicativeExpression	( w - 1 ) * subsampling_dx		16776	0		*			
ANR	17276	AdditiveExpression	w - 1		16776	0		-			
ANR	17277	Identifier	w		16776	0					
ANR	17278	PrimaryExpression	1		16776	1					
ANR	17279	Identifier	subsampling_dx		16776	1					
ANR	17280	PrimaryExpression	1		16776	1					
ANR	17281	ExpressionStatement	image -> y1 = ( OPJ_UINT32 ) ( parameters -> image_offset_y0 + ( h - 1 ) * subsampling_dy + 1 )	1897:4:55430:55543	16776	30	True				
ANR	17282	AssignmentExpression	image -> y1 = ( OPJ_UINT32 ) ( parameters -> image_offset_y0 + ( h - 1 ) * subsampling_dy + 1 )		16776	0		=			
ANR	17283	PtrMemberAccess	image -> y1		16776	0					
ANR	17284	Identifier	image		16776	0					
ANR	17285	Identifier	y1		16776	1					
ANR	17286	CastExpression	( OPJ_UINT32 ) ( parameters -> image_offset_y0 + ( h - 1 ) * subsampling_dy + 1 )		16776	1					
ANR	17287	CastTarget	OPJ_UINT32		16776	0					
ANR	17288	AdditiveExpression	parameters -> image_offset_y0 + ( h - 1 ) * subsampling_dy + 1		16776	1		+			
ANR	17289	PtrMemberAccess	parameters -> image_offset_y0		16776	0					
ANR	17290	Identifier	parameters		16776	0					
ANR	17291	Identifier	image_offset_y0		16776	1					
ANR	17292	AdditiveExpression	( h - 1 ) * subsampling_dy + 1		16776	1		+			
ANR	17293	MultiplicativeExpression	( h - 1 ) * subsampling_dy		16776	0		*			
ANR	17294	AdditiveExpression	h - 1		16776	0		-			
ANR	17295	Identifier	h		16776	0					
ANR	17296	PrimaryExpression	1		16776	1					
ANR	17297	Identifier	subsampling_dy		16776	1					
ANR	17298	PrimaryExpression	1		16776	1					
ANR	17299	IfStatement	if ( ( format == 2 ) || ( format == 3 ) )		16776	31					
ANR	17300	Condition	( format == 2 ) || ( format == 3 )	1900:8:55554:55583	16776	0	True				
ANR	17301	OrExpression	( format == 2 ) || ( format == 3 )		16776	0		||			
ANR	17302	EqualityExpression	format == 2		16776	0		==			
ANR	17303	Identifier	format		16776	0					
ANR	17304	PrimaryExpression	2		16776	1					
ANR	17305	EqualityExpression	format == 3		16776	1		==			
ANR	17306	Identifier	format		16776	0					
ANR	17307	PrimaryExpression	3		16776	1					
ANR	17308	CompoundStatement		111:8:3146:3164	16776	1					
ANR	17309	IdentifierDeclStatement	unsigned int index ;	1901:8:55615:55633	16776	0	True				
ANR	17310	IdentifierDecl	index		16776	0					
ANR	17311	IdentifierDeclType	unsigned int		16776	0					
ANR	17312	Identifier	index		16776	1					
ANR	17313	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		16776	1					
ANR	17314	ForInit	i = 0 ;	1903:13:55649:55654	16776	0	True				
ANR	17315	AssignmentExpression	i = 0		16776	0		=			
ANR	17316	Identifier	i		16776	0					
ANR	17317	PrimaryExpression	0		16776	1					
ANR	17318	Condition	i < w * h	1903:20:55656:55664	16776	1	True				
ANR	17319	RelationalExpression	i < w * h		16776	0		<			
ANR	17320	Identifier	i		16776	0					
ANR	17321	MultiplicativeExpression	w * h		16776	1		*			
ANR	17322	Identifier	w		16776	0					
ANR	17323	Identifier	h		16776	1					
ANR	17324	PostIncDecOperationExpression	i ++	1903:31:55667:55669	16776	2	True				
ANR	17325	Identifier	i		16776	0					
ANR	17326	IncDec	++		16776	1					
ANR	17327	CompoundStatement		113:36:3203:3203	16776	3					
ANR	17328	ForStatement	for ( compno = 0 ; compno < numcomps ; compno ++ )		16776	0					
ANR	17329	ForInit	compno = 0 ;	1904:17:55691:55701	16776	0	True				
ANR	17330	AssignmentExpression	compno = 0		16776	0		=			
ANR	17331	Identifier	compno		16776	0					
ANR	17332	PrimaryExpression	0		16776	1					
ANR	17333	Condition	compno < numcomps	1904:29:55703:55719	16776	1	True				
ANR	17334	RelationalExpression	compno < numcomps		16776	0		<			
ANR	17335	Identifier	compno		16776	0					
ANR	17336	Identifier	numcomps		16776	1					
ANR	17337	PostIncDecOperationExpression	compno ++	1904:48:55722:55729	16776	2	True				
ANR	17338	Identifier	compno		16776	0					
ANR	17339	IncDec	++		16776	1					
ANR	17340	CompoundStatement		114:58:3263:3263	16776	3					
ANR	17341	ExpressionStatement	index = 0	1905:16:55750:55759	16776	0	True				
ANR	17342	AssignmentExpression	index = 0		16776	0		=			
ANR	17343	Identifier	index		16776	0					
ANR	17344	PrimaryExpression	0		16776	1					
ANR	17345	IfStatement	"if ( fscanf ( fp , ""%u"" , & index ) != 1 )"		16776	1					
ANR	17346	Condition	"fscanf ( fp , ""%u"" , & index ) != 1"	1906:20:55781:55809	16776	0	True				
ANR	17347	EqualityExpression	"fscanf ( fp , ""%u"" , & index ) != 1"		16776	0		!=			
ANR	17348	CallExpression	"fscanf ( fp , ""%u"" , & index )"		16776	0					
ANR	17349	Callee	fscanf		16776	0					
ANR	17350	Identifier	fscanf		16776	0					
ANR	17351	ArgumentList	fp		16776	1					
ANR	17352	Argument	fp		16776	0					
ANR	17353	Identifier	fp		16776	0					
ANR	17354	Argument	"""%u"""		16776	1					
ANR	17355	PrimaryExpression	"""%u"""		16776	0					
ANR	17356	Argument	& index		16776	2					
ANR	17357	UnaryOperationExpression	& index		16776	0					
ANR	17358	UnaryOperator	&		16776	0					
ANR	17359	Identifier	index		16776	1					
ANR	17360	PrimaryExpression	1		16776	1					
ANR	17361	CompoundStatement		116:51:3343:3343	16776	1					
ANR	17362	ExpressionStatement	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"	1907:20:55834:55878	16776	0	True				
ANR	17363	CallExpression	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"		16776	0					
ANR	17364	Callee	fprintf		16776	0					
ANR	17365	Identifier	fprintf		16776	0					
ANR	17366	ArgumentList	stderr		16776	1					
ANR	17367	Argument	stderr		16776	0					
ANR	17368	Identifier	stderr		16776	0					
ANR	17369	Argument	"""Missing data. Quitting.\\n"""		16776	1					
ANR	17370	PrimaryExpression	"""Missing data. Quitting.\\n"""		16776	0					
ANR	17371	ExpressionStatement	opj_image_destroy ( image )	1908:20:55900:55924	16776	1	True				
ANR	17372	CallExpression	opj_image_destroy ( image )		16776	0					
ANR	17373	Callee	opj_image_destroy		16776	0					
ANR	17374	Identifier	opj_image_destroy		16776	0					
ANR	17375	ArgumentList	image		16776	1					
ANR	17376	Argument	image		16776	0					
ANR	17377	Identifier	image		16776	0					
ANR	17378	ExpressionStatement	fclose ( fp )	1909:20:55946:55956	16776	2	True				
ANR	17379	CallExpression	fclose ( fp )		16776	0					
ANR	17380	Callee	fclose		16776	0					
ANR	17381	Identifier	fclose		16776	0					
ANR	17382	ArgumentList	fp		16776	1					
ANR	17383	Argument	fp		16776	0					
ANR	17384	Identifier	fp		16776	0					
ANR	17385	ReturnStatement	return NULL ;	1910:20:55978:55989	16776	3	True				
ANR	17386	Identifier	NULL		16776	0					
ANR	17387	ExpressionStatement	image -> comps [ compno ] . data [ i ] = ( OPJ_INT32 ) ( index * 255 ) / header_info . maxval	1913:16:56026:56102	16776	2	True				
ANR	17388	AssignmentExpression	image -> comps [ compno ] . data [ i ] = ( OPJ_INT32 ) ( index * 255 ) / header_info . maxval		16776	0		=			
ANR	17389	ArrayIndexing	image -> comps [ compno ] . data [ i ]		16776	0					
ANR	17390	MemberAccess	image -> comps [ compno ] . data		16776	0					
ANR	17391	ArrayIndexing	image -> comps [ compno ]		16776	0					
ANR	17392	PtrMemberAccess	image -> comps		16776	0					
ANR	17393	Identifier	image		16776	0					
ANR	17394	Identifier	comps		16776	1					
ANR	17395	Identifier	compno		16776	1					
ANR	17396	Identifier	data		16776	1					
ANR	17397	Identifier	i		16776	1					
ANR	17398	MultiplicativeExpression	( OPJ_INT32 ) ( index * 255 ) / header_info . maxval		16776	1		/			
ANR	17399	CastExpression	( OPJ_INT32 ) ( index * 255 )		16776	0					
ANR	17400	CastTarget	OPJ_INT32		16776	0					
ANR	17401	MultiplicativeExpression	index * 255		16776	1		*			
ANR	17402	Identifier	index		16776	0					
ANR	17403	PrimaryExpression	255		16776	1					
ANR	17404	MemberAccess	header_info . maxval		16776	1					
ANR	17405	Identifier	header_info		16776	0					
ANR	17406	Identifier	maxval		16776	1					
ANR	17407	ElseStatement	else		16776	0					
ANR	17408	IfStatement	if ( ( format == 5 ) || ( format == 6 ) || ( ( format == 7 ) && ( header_info . gray || header_info . graya || header_info . rgb || header_info . rgba ) ) )		16776	0					
ANR	17409	Condition	( format == 5 ) || ( format == 6 ) || ( ( format == 7 ) && ( header_info . gray || header_info . graya || header_info . rgb || header_info . rgba ) )	1916:15:56143:56345	16776	0	True				
ANR	17410	OrExpression	( format == 5 ) || ( format == 6 ) || ( ( format == 7 ) && ( header_info . gray || header_info . graya || header_info . rgb || header_info . rgba ) )		16776	0		||			
ANR	17411	EqualityExpression	format == 5		16776	0		==			
ANR	17412	Identifier	format		16776	0					
ANR	17413	PrimaryExpression	5		16776	1					
ANR	17414	OrExpression	( format == 6 ) || ( ( format == 7 ) && ( header_info . gray || header_info . graya || header_info . rgb || header_info . rgba ) )		16776	1		||			
ANR	17415	EqualityExpression	format == 6		16776	0		==			
ANR	17416	Identifier	format		16776	0					
ANR	17417	PrimaryExpression	6		16776	1					
ANR	17418	AndExpression	( format == 7 ) && ( header_info . gray || header_info . graya || header_info . rgb || header_info . rgba )		16776	1		&&			
ANR	17419	EqualityExpression	format == 7		16776	0		==			
ANR	17420	Identifier	format		16776	0					
ANR	17421	PrimaryExpression	7		16776	1					
ANR	17422	OrExpression	header_info . gray || header_info . graya || header_info . rgb || header_info . rgba		16776	1		||			
ANR	17423	MemberAccess	header_info . gray		16776	0					
ANR	17424	Identifier	header_info		16776	0					
ANR	17425	Identifier	gray		16776	1					
ANR	17426	OrExpression	header_info . graya || header_info . rgb || header_info . rgba		16776	1		||			
ANR	17427	MemberAccess	header_info . graya		16776	0					
ANR	17428	Identifier	header_info		16776	0					
ANR	17429	Identifier	graya		16776	1					
ANR	17430	OrExpression	header_info . rgb || header_info . rgba		16776	1		||			
ANR	17431	MemberAccess	header_info . rgb		16776	0					
ANR	17432	Identifier	header_info		16776	0					
ANR	17433	Identifier	rgb		16776	1					
ANR	17434	MemberAccess	header_info . rgba		16776	1					
ANR	17435	Identifier	header_info		16776	0					
ANR	17436	Identifier	rgba		16776	1					
ANR	17437	CompoundStatement		131:8:3909:3934	16776	1					
ANR	17438	IdentifierDeclStatement	"unsigned char c0 , c1 , one ;"	1921:8:56378:56403	16776	0	True				
ANR	17439	IdentifierDecl	c0		16776	0					
ANR	17440	IdentifierDeclType	unsigned char		16776	0					
ANR	17441	Identifier	c0		16776	1					
ANR	17442	IdentifierDecl	c1		16776	1					
ANR	17443	IdentifierDeclType	unsigned char		16776	0					
ANR	17444	Identifier	c1		16776	1					
ANR	17445	IdentifierDecl	one		16776	2					
ANR	17446	IdentifierDeclType	unsigned char		16776	0					
ANR	17447	Identifier	one		16776	1					
ANR	17448	ExpressionStatement	one = ( prec < 9 )	1923:8:56414:56430	16776	1	True				
ANR	17449	AssignmentExpression	one = ( prec < 9 )		16776	0		=			
ANR	17450	Identifier	one		16776	0					
ANR	17451	RelationalExpression	prec < 9		16776	1		<			
ANR	17452	Identifier	prec		16776	0					
ANR	17453	PrimaryExpression	9		16776	1					
ANR	17454	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		16776	2					
ANR	17455	ForInit	i = 0 ;	1925:13:56446:56451	16776	0	True				
ANR	17456	AssignmentExpression	i = 0		16776	0		=			
ANR	17457	Identifier	i		16776	0					
ANR	17458	PrimaryExpression	0		16776	1					
ANR	17459	Condition	i < w * h	1925:20:56453:56461	16776	1	True				
ANR	17460	RelationalExpression	i < w * h		16776	0		<			
ANR	17461	Identifier	i		16776	0					
ANR	17462	MultiplicativeExpression	w * h		16776	1		*			
ANR	17463	Identifier	w		16776	0					
ANR	17464	Identifier	h		16776	1					
ANR	17465	PostIncDecOperationExpression	i ++	1925:31:56464:56466	16776	2	True				
ANR	17466	Identifier	i		16776	0					
ANR	17467	IncDec	++		16776	1					
ANR	17468	CompoundStatement		135:36:4000:4000	16776	3					
ANR	17469	ForStatement	for ( compno = 0 ; compno < numcomps ; compno ++ )		16776	0					
ANR	17470	ForInit	compno = 0 ;	1926:17:56488:56498	16776	0	True				
ANR	17471	AssignmentExpression	compno = 0		16776	0		=			
ANR	17472	Identifier	compno		16776	0					
ANR	17473	PrimaryExpression	0		16776	1					
ANR	17474	Condition	compno < numcomps	1926:29:56500:56516	16776	1	True				
ANR	17475	RelationalExpression	compno < numcomps		16776	0		<			
ANR	17476	Identifier	compno		16776	0					
ANR	17477	Identifier	numcomps		16776	1					
ANR	17478	PostIncDecOperationExpression	compno ++	1926:48:56519:56526	16776	2	True				
ANR	17479	Identifier	compno		16776	0					
ANR	17480	IncDec	++		16776	1					
ANR	17481	CompoundStatement		136:58:4060:4060	16776	3					
ANR	17482	IfStatement	"if ( ! fread ( & c0 , 1 , 1 , fp ) )"		16776	0					
ANR	17483	Condition	"! fread ( & c0 , 1 , 1 , fp )"	1927:20:56551:56571	16776	0	True				
ANR	17484	UnaryOperationExpression	"! fread ( & c0 , 1 , 1 , fp )"		16776	0					
ANR	17485	UnaryOperator	!		16776	0					
ANR	17486	CallExpression	"fread ( & c0 , 1 , 1 , fp )"		16776	1					
ANR	17487	Callee	fread		16776	0					
ANR	17488	Identifier	fread		16776	0					
ANR	17489	ArgumentList	& c0		16776	1					
ANR	17490	Argument	& c0		16776	0					
ANR	17491	UnaryOperationExpression	& c0		16776	0					
ANR	17492	UnaryOperator	&		16776	0					
ANR	17493	Identifier	c0		16776	1					
ANR	17494	Argument	1		16776	1					
ANR	17495	PrimaryExpression	1		16776	0					
ANR	17496	Argument	1		16776	2					
ANR	17497	PrimaryExpression	1		16776	0					
ANR	17498	Argument	fp		16776	3					
ANR	17499	Identifier	fp		16776	0					
ANR	17500	CompoundStatement		137:43:4105:4105	16776	1					
ANR	17501	ExpressionStatement	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"	1928:20:56596:56640	16776	0	True				
ANR	17502	CallExpression	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"		16776	0					
ANR	17503	Callee	fprintf		16776	0					
ANR	17504	Identifier	fprintf		16776	0					
ANR	17505	ArgumentList	stderr		16776	1					
ANR	17506	Argument	stderr		16776	0					
ANR	17507	Identifier	stderr		16776	0					
ANR	17508	Argument	"""Missing data. Quitting.\\n"""		16776	1					
ANR	17509	PrimaryExpression	"""Missing data. Quitting.\\n"""		16776	0					
ANR	17510	ExpressionStatement	opj_image_destroy ( image )	1929:20:56662:56686	16776	1	True				
ANR	17511	CallExpression	opj_image_destroy ( image )		16776	0					
ANR	17512	Callee	opj_image_destroy		16776	0					
ANR	17513	Identifier	opj_image_destroy		16776	0					
ANR	17514	ArgumentList	image		16776	1					
ANR	17515	Argument	image		16776	0					
ANR	17516	Identifier	image		16776	0					
ANR	17517	ExpressionStatement	fclose ( fp )	1930:20:56708:56718	16776	2	True				
ANR	17518	CallExpression	fclose ( fp )		16776	0					
ANR	17519	Callee	fclose		16776	0					
ANR	17520	Identifier	fclose		16776	0					
ANR	17521	ArgumentList	fp		16776	1					
ANR	17522	Argument	fp		16776	0					
ANR	17523	Identifier	fp		16776	0					
ANR	17524	ReturnStatement	return NULL ;	1931:20:56740:56751	16776	3	True				
ANR	17525	Identifier	NULL		16776	0					
ANR	17526	IfStatement	if ( one )		16776	1					
ANR	17527	Condition	one	1933:20:56791:56793	16776	0	True				
ANR	17528	Identifier	one		16776	0					
ANR	17529	CompoundStatement		143:25:4327:4327	16776	1					
ANR	17530	ExpressionStatement	image -> comps [ compno ] . data [ i ] = c0	1934:20:56818:56851	16776	0	True				
ANR	17531	AssignmentExpression	image -> comps [ compno ] . data [ i ] = c0		16776	0		=			
ANR	17532	ArrayIndexing	image -> comps [ compno ] . data [ i ]		16776	0					
ANR	17533	MemberAccess	image -> comps [ compno ] . data		16776	0					
ANR	17534	ArrayIndexing	image -> comps [ compno ]		16776	0					
ANR	17535	PtrMemberAccess	image -> comps		16776	0					
ANR	17536	Identifier	image		16776	0					
ANR	17537	Identifier	comps		16776	1					
ANR	17538	Identifier	compno		16776	1					
ANR	17539	Identifier	data		16776	1					
ANR	17540	Identifier	i		16776	1					
ANR	17541	Identifier	c0		16776	1					
ANR	17542	ElseStatement	else		16776	0					
ANR	17543	CompoundStatement		145:23:4407:4407	16776	0					
ANR	17544	IfStatement	"if ( ! fread ( & c1 , 1 , 1 , fp ) )"		16776	0					
ANR	17545	Condition	"! fread ( & c1 , 1 , 1 , fp )"	1936:24:56902:56922	16776	0	True				
ANR	17546	UnaryOperationExpression	"! fread ( & c1 , 1 , 1 , fp )"		16776	0					
ANR	17547	UnaryOperator	!		16776	0					
ANR	17548	CallExpression	"fread ( & c1 , 1 , 1 , fp )"		16776	1					
ANR	17549	Callee	fread		16776	0					
ANR	17550	Identifier	fread		16776	0					
ANR	17551	ArgumentList	& c1		16776	1					
ANR	17552	Argument	& c1		16776	0					
ANR	17553	UnaryOperationExpression	& c1		16776	0					
ANR	17554	UnaryOperator	&		16776	0					
ANR	17555	Identifier	c1		16776	1					
ANR	17556	Argument	1		16776	1					
ANR	17557	PrimaryExpression	1		16776	0					
ANR	17558	Argument	1		16776	2					
ANR	17559	PrimaryExpression	1		16776	0					
ANR	17560	Argument	fp		16776	3					
ANR	17561	Identifier	fp		16776	0					
ANR	17562	CompoundStatement		146:47:4456:4456	16776	1					
ANR	17563	ExpressionStatement	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"	1937:24:56951:56995	16776	0	True				
ANR	17564	CallExpression	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"		16776	0					
ANR	17565	Callee	fprintf		16776	0					
ANR	17566	Identifier	fprintf		16776	0					
ANR	17567	ArgumentList	stderr		16776	1					
ANR	17568	Argument	stderr		16776	0					
ANR	17569	Identifier	stderr		16776	0					
ANR	17570	Argument	"""Missing data. Quitting.\\n"""		16776	1					
ANR	17571	PrimaryExpression	"""Missing data. Quitting.\\n"""		16776	0					
ANR	17572	ExpressionStatement	opj_image_destroy ( image )	1938:24:57021:57045	16776	1	True				
ANR	17573	CallExpression	opj_image_destroy ( image )		16776	0					
ANR	17574	Callee	opj_image_destroy		16776	0					
ANR	17575	Identifier	opj_image_destroy		16776	0					
ANR	17576	ArgumentList	image		16776	1					
ANR	17577	Argument	image		16776	0					
ANR	17578	Identifier	image		16776	0					
ANR	17579	ExpressionStatement	fclose ( fp )	1939:24:57071:57081	16776	2	True				
ANR	17580	CallExpression	fclose ( fp )		16776	0					
ANR	17581	Callee	fclose		16776	0					
ANR	17582	Identifier	fclose		16776	0					
ANR	17583	ArgumentList	fp		16776	1					
ANR	17584	Argument	fp		16776	0					
ANR	17585	Identifier	fp		16776	0					
ANR	17586	ReturnStatement	return NULL ;	1940:24:57107:57118	16776	3	True				
ANR	17587	Identifier	NULL		16776	0					
ANR	17588	ExpressionStatement	image -> comps [ compno ] . data [ i ] = ( ( c0 << 8 ) | c1 )	1943:20:57196:57243	16776	1	True				
ANR	17589	AssignmentExpression	image -> comps [ compno ] . data [ i ] = ( ( c0 << 8 ) | c1 )		16776	0		=			
ANR	17590	ArrayIndexing	image -> comps [ compno ] . data [ i ]		16776	0					
ANR	17591	MemberAccess	image -> comps [ compno ] . data		16776	0					
ANR	17592	ArrayIndexing	image -> comps [ compno ]		16776	0					
ANR	17593	PtrMemberAccess	image -> comps		16776	0					
ANR	17594	Identifier	image		16776	0					
ANR	17595	Identifier	comps		16776	1					
ANR	17596	Identifier	compno		16776	1					
ANR	17597	Identifier	data		16776	1					
ANR	17598	Identifier	i		16776	1					
ANR	17599	InclusiveOrExpression	( c0 << 8 ) | c1		16776	1		|			
ANR	17600	ShiftExpression	c0 << 8		16776	0		<<			
ANR	17601	Identifier	c0		16776	0					
ANR	17602	PrimaryExpression	8		16776	1					
ANR	17603	Identifier	c1		16776	1					
ANR	17604	ElseStatement	else		16776	0					
ANR	17605	IfStatement	if ( format == 1 )		16776	0					
ANR	17606	Condition	format == 1	1947:15:57302:57312	16776	0	True				
ANR	17607	EqualityExpression	format == 1		16776	0		==			
ANR	17608	Identifier	format		16776	0					
ANR	17609	PrimaryExpression	1		16776	1					
ANR	17610	CompoundStatement		157:28:4846:4846	16776	1					
ANR	17611	ForStatement	for ( i = 0 ; i < w * h ; i ++ )		16776	0					
ANR	17612	ForInit	i = 0 ;	1948:13:57349:57354	16776	0	True				
ANR	17613	AssignmentExpression	i = 0		16776	0		=			
ANR	17614	Identifier	i		16776	0					
ANR	17615	PrimaryExpression	0		16776	1					
ANR	17616	Condition	i < w * h	1948:20:57356:57364	16776	1	True				
ANR	17617	RelationalExpression	i < w * h		16776	0		<			
ANR	17618	Identifier	i		16776	0					
ANR	17619	MultiplicativeExpression	w * h		16776	1		*			
ANR	17620	Identifier	w		16776	0					
ANR	17621	Identifier	h		16776	1					
ANR	17622	PostIncDecOperationExpression	i ++	1948:31:57367:57369	16776	2	True				
ANR	17623	Identifier	i		16776	0					
ANR	17624	IncDec	++		16776	1					
ANR	17625	CompoundStatement		159:12:4917:4935	16776	3					
ANR	17626	IdentifierDeclStatement	unsigned int index ;	1949:12:57386:57404	16776	0	True				
ANR	17627	IdentifierDecl	index		16776	0					
ANR	17628	IdentifierDeclType	unsigned int		16776	0					
ANR	17629	Identifier	index		16776	1					
ANR	17630	IfStatement	"if ( fscanf ( fp , ""%u"" , & index ) != 1 )"		16776	1					
ANR	17631	Condition	"fscanf ( fp , ""%u"" , & index ) != 1"	1951:16:57423:57451	16776	0	True				
ANR	17632	EqualityExpression	"fscanf ( fp , ""%u"" , & index ) != 1"		16776	0		!=			
ANR	17633	CallExpression	"fscanf ( fp , ""%u"" , & index )"		16776	0					
ANR	17634	Callee	fscanf		16776	0					
ANR	17635	Identifier	fscanf		16776	0					
ANR	17636	ArgumentList	fp		16776	1					
ANR	17637	Argument	fp		16776	0					
ANR	17638	Identifier	fp		16776	0					
ANR	17639	Argument	"""%u"""		16776	1					
ANR	17640	PrimaryExpression	"""%u"""		16776	0					
ANR	17641	Argument	& index		16776	2					
ANR	17642	UnaryOperationExpression	& index		16776	0					
ANR	17643	UnaryOperator	&		16776	0					
ANR	17644	Identifier	index		16776	1					
ANR	17645	PrimaryExpression	1		16776	1					
ANR	17646	CompoundStatement		161:47:4985:4985	16776	1					
ANR	17647	ExpressionStatement	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"	1952:16:57472:57516	16776	0	True				
ANR	17648	CallExpression	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"		16776	0					
ANR	17649	Callee	fprintf		16776	0					
ANR	17650	Identifier	fprintf		16776	0					
ANR	17651	ArgumentList	stderr		16776	1					
ANR	17652	Argument	stderr		16776	0					
ANR	17653	Identifier	stderr		16776	0					
ANR	17654	Argument	"""Missing data. Quitting.\\n"""		16776	1					
ANR	17655	PrimaryExpression	"""Missing data. Quitting.\\n"""		16776	0					
ANR	17656	ExpressionStatement	opj_image_destroy ( image )	1953:16:57534:57558	16776	1	True				
ANR	17657	CallExpression	opj_image_destroy ( image )		16776	0					
ANR	17658	Callee	opj_image_destroy		16776	0					
ANR	17659	Identifier	opj_image_destroy		16776	0					
ANR	17660	ArgumentList	image		16776	1					
ANR	17661	Argument	image		16776	0					
ANR	17662	Identifier	image		16776	0					
ANR	17663	ExpressionStatement	fclose ( fp )	1954:16:57576:57586	16776	2	True				
ANR	17664	CallExpression	fclose ( fp )		16776	0					
ANR	17665	Callee	fclose		16776	0					
ANR	17666	Identifier	fclose		16776	0					
ANR	17667	ArgumentList	fp		16776	1					
ANR	17668	Argument	fp		16776	0					
ANR	17669	Identifier	fp		16776	0					
ANR	17670	ReturnStatement	return NULL ;	1955:16:57604:57615	16776	3	True				
ANR	17671	Identifier	NULL		16776	0					
ANR	17672	ExpressionStatement	image -> comps [ 0 ] . data [ i ] = ( index ? 0 : 255 )	1958:12:57644:57687	16776	2	True				
ANR	17673	AssignmentExpression	image -> comps [ 0 ] . data [ i ] = ( index ? 0 : 255 )		16776	0		=			
ANR	17674	ArrayIndexing	image -> comps [ 0 ] . data [ i ]		16776	0					
ANR	17675	MemberAccess	image -> comps [ 0 ] . data		16776	0					
ANR	17676	ArrayIndexing	image -> comps [ 0 ]		16776	0					
ANR	17677	PtrMemberAccess	image -> comps		16776	0					
ANR	17678	Identifier	image		16776	0					
ANR	17679	Identifier	comps		16776	1					
ANR	17680	PrimaryExpression	0		16776	1					
ANR	17681	Identifier	data		16776	1					
ANR	17682	Identifier	i		16776	1					
ANR	17683	ConditionalExpression	index ? 0 : 255		16776	1					
ANR	17684	Condition	index		16776	0					
ANR	17685	Identifier	index		16776	0					
ANR	17686	PrimaryExpression	0		16776	1					
ANR	17687	PrimaryExpression	255		16776	2					
ANR	17688	ElseStatement	else		16776	0					
ANR	17689	IfStatement	if ( format == 4 )		16776	0					
ANR	17690	Condition	format == 4	1960:15:57714:57724	16776	0	True				
ANR	17691	EqualityExpression	format == 4		16776	0		==			
ANR	17692	Identifier	format		16776	0					
ANR	17693	PrimaryExpression	4		16776	1					
ANR	17694	CompoundStatement		172:8:5291:5297	16776	1					
ANR	17695	IdentifierDeclStatement	"int x , y , bit ;"	1961:8:57737:57750	16776	0	True				
ANR	17696	IdentifierDecl	x		16776	0					
ANR	17697	IdentifierDeclType	int		16776	0					
ANR	17698	Identifier	x		16776	1					
ANR	17699	IdentifierDecl	y		16776	1					
ANR	17700	IdentifierDeclType	int		16776	0					
ANR	17701	Identifier	y		16776	1					
ANR	17702	IdentifierDecl	bit		16776	2					
ANR	17703	IdentifierDeclType	int		16776	0					
ANR	17704	Identifier	bit		16776	1					
ANR	17705	IdentifierDeclStatement	int uc ;	1962:8:57760:57766	16776	1	True				
ANR	17706	IdentifierDecl	uc		16776	0					
ANR	17707	IdentifierDeclType	int		16776	0					
ANR	17708	Identifier	uc		16776	1					
ANR	17709	ExpressionStatement	i = 0	1964:8:57777:57782	16776	2	True				
ANR	17710	AssignmentExpression	i = 0		16776	0		=			
ANR	17711	Identifier	i		16776	0					
ANR	17712	PrimaryExpression	0		16776	1					
ANR	17713	ForStatement	for ( y = 0 ; y < h ; ++ y )		16776	3					
ANR	17714	ForInit	y = 0 ;	1965:13:57797:57802	16776	0	True				
ANR	17715	AssignmentExpression	y = 0		16776	0		=			
ANR	17716	Identifier	y		16776	0					
ANR	17717	PrimaryExpression	0		16776	1					
ANR	17718	Condition	y < h	1965:20:57804:57808	16776	1	True				
ANR	17719	RelationalExpression	y < h		16776	0		<			
ANR	17720	Identifier	y		16776	0					
ANR	17721	Identifier	h		16776	1					
ANR	17722	UnaryExpression	++ y	1965:27:57811:57813	16776	2	True				
ANR	17723	IncDec	++		16776	0					
ANR	17724	Identifier	y		16776	1					
ANR	17725	CompoundStatement		175:32:5347:5347	16776	3					
ANR	17726	ExpressionStatement	bit = - 1	1966:12:57830:57838	16776	0	True				
ANR	17727	AssignmentExpression	bit = - 1		16776	0		=			
ANR	17728	Identifier	bit		16776	0					
ANR	17729	UnaryOperationExpression	- 1		16776	1					
ANR	17730	UnaryOperator	-		16776	0					
ANR	17731	PrimaryExpression	1		16776	1					
ANR	17732	ExpressionStatement	uc = 0	1967:12:57852:57858	16776	1	True				
ANR	17733	AssignmentExpression	uc = 0		16776	0		=			
ANR	17734	Identifier	uc		16776	0					
ANR	17735	PrimaryExpression	0		16776	1					
ANR	17736	ForStatement	for ( x = 0 ; x < w ; ++ x )		16776	2					
ANR	17737	ForInit	x = 0 ;	1969:17:57878:57883	16776	0	True				
ANR	17738	AssignmentExpression	x = 0		16776	0		=			
ANR	17739	Identifier	x		16776	0					
ANR	17740	PrimaryExpression	0		16776	1					
ANR	17741	Condition	x < w	1969:24:57885:57889	16776	1	True				
ANR	17742	RelationalExpression	x < w		16776	0		<			
ANR	17743	Identifier	x		16776	0					
ANR	17744	Identifier	w		16776	1					
ANR	17745	UnaryExpression	++ x	1969:31:57892:57894	16776	2	True				
ANR	17746	IncDec	++		16776	0					
ANR	17747	Identifier	x		16776	1					
ANR	17748	CompoundStatement		179:36:5428:5428	16776	3					
ANR	17749	IfStatement	if ( bit == - 1 )		16776	0					
ANR	17750	Condition	bit == - 1	1970:20:57919:57927	16776	0	True				
ANR	17751	EqualityExpression	bit == - 1		16776	0		==			
ANR	17752	Identifier	bit		16776	0					
ANR	17753	UnaryOperationExpression	- 1		16776	1					
ANR	17754	UnaryOperator	-		16776	0					
ANR	17755	PrimaryExpression	1		16776	1					
ANR	17756	CompoundStatement		180:31:5461:5461	16776	1					
ANR	17757	ExpressionStatement	bit = 7	1971:20:57952:57959	16776	0	True				
ANR	17758	AssignmentExpression	bit = 7		16776	0		=			
ANR	17759	Identifier	bit		16776	0					
ANR	17760	PrimaryExpression	7		16776	1					
ANR	17761	ExpressionStatement	uc = getc ( fp )	1972:20:57981:57994	16776	1	True				
ANR	17762	AssignmentExpression	uc = getc ( fp )		16776	0		=			
ANR	17763	Identifier	uc		16776	0					
ANR	17764	CallExpression	getc ( fp )		16776	1					
ANR	17765	Callee	getc		16776	0					
ANR	17766	Identifier	getc		16776	0					
ANR	17767	ArgumentList	fp		16776	1					
ANR	17768	Argument	fp		16776	0					
ANR	17769	Identifier	fp		16776	0					
ANR	17770	IfStatement	if ( uc == EOF )		16776	2					
ANR	17771	Condition	uc == EOF	1973:24:58020:58028	16776	0	True				
ANR	17772	EqualityExpression	uc == EOF		16776	0		==			
ANR	17773	Identifier	uc		16776	0					
ANR	17774	Identifier	EOF		16776	1					
ANR	17775	CompoundStatement		183:35:5562:5562	16776	1					
ANR	17776	ExpressionStatement	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"	1974:24:58057:58101	16776	0	True				
ANR	17777	CallExpression	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"		16776	0					
ANR	17778	Callee	fprintf		16776	0					
ANR	17779	Identifier	fprintf		16776	0					
ANR	17780	ArgumentList	stderr		16776	1					
ANR	17781	Argument	stderr		16776	0					
ANR	17782	Identifier	stderr		16776	0					
ANR	17783	Argument	"""Missing data. Quitting.\\n"""		16776	1					
ANR	17784	PrimaryExpression	"""Missing data. Quitting.\\n"""		16776	0					
ANR	17785	ExpressionStatement	opj_image_destroy ( image )	1975:24:58127:58151	16776	1	True				
ANR	17786	CallExpression	opj_image_destroy ( image )		16776	0					
ANR	17787	Callee	opj_image_destroy		16776	0					
ANR	17788	Identifier	opj_image_destroy		16776	0					
ANR	17789	ArgumentList	image		16776	1					
ANR	17790	Argument	image		16776	0					
ANR	17791	Identifier	image		16776	0					
ANR	17792	ExpressionStatement	fclose ( fp )	1976:24:58177:58187	16776	2	True				
ANR	17793	CallExpression	fclose ( fp )		16776	0					
ANR	17794	Callee	fclose		16776	0					
ANR	17795	Identifier	fclose		16776	0					
ANR	17796	ArgumentList	fp		16776	1					
ANR	17797	Argument	fp		16776	0					
ANR	17798	Identifier	fp		16776	0					
ANR	17799	ReturnStatement	return NULL ;	1977:24:58213:58224	16776	3	True				
ANR	17800	Identifier	NULL		16776	0					
ANR	17801	ExpressionStatement	image -> comps [ 0 ] . data [ i ] = ( ( ( ( unsigned char ) uc >> bit ) & 1 ) ? 0 : 255 )	1980:16:58282:58352	16776	1	True				
ANR	17802	AssignmentExpression	image -> comps [ 0 ] . data [ i ] = ( ( ( ( unsigned char ) uc >> bit ) & 1 ) ? 0 : 255 )		16776	0		=			
ANR	17803	ArrayIndexing	image -> comps [ 0 ] . data [ i ]		16776	0					
ANR	17804	MemberAccess	image -> comps [ 0 ] . data		16776	0					
ANR	17805	ArrayIndexing	image -> comps [ 0 ]		16776	0					
ANR	17806	PtrMemberAccess	image -> comps		16776	0					
ANR	17807	Identifier	image		16776	0					
ANR	17808	Identifier	comps		16776	1					
ANR	17809	PrimaryExpression	0		16776	1					
ANR	17810	Identifier	data		16776	1					
ANR	17811	Identifier	i		16776	1					
ANR	17812	ConditionalExpression	( ( ( unsigned char ) uc >> bit ) & 1 ) ? 0 : 255		16776	1					
ANR	17813	Condition	( ( unsigned char ) uc >> bit ) & 1		16776	0					
ANR	17814	BitAndExpression	( ( unsigned char ) uc >> bit ) & 1		16776	0		&			
ANR	17815	ShiftExpression	( unsigned char ) uc >> bit		16776	0		>>			
ANR	17816	CastExpression	( unsigned char ) uc		16776	0					
ANR	17817	CastTarget	unsigned char		16776	0					
ANR	17818	Identifier	uc		16776	1					
ANR	17819	Identifier	bit		16776	1					
ANR	17820	PrimaryExpression	1		16776	1					
ANR	17821	PrimaryExpression	0		16776	1					
ANR	17822	PrimaryExpression	255		16776	2					
ANR	17823	ExpressionStatement	-- bit	1981:16:58370:58375	16776	2	True				
ANR	17824	UnaryExpression	-- bit		16776	0					
ANR	17825	IncDec	--		16776	0					
ANR	17826	Identifier	bit		16776	1					
ANR	17827	ExpressionStatement	++ i	1982:16:58393:58396	16776	3	True				
ANR	17828	UnaryExpression	++ i		16776	0					
ANR	17829	IncDec	++		16776	0					
ANR	17830	Identifier	i		16776	1					
ANR	17831	ElseStatement	else		16776	0					
ANR	17832	IfStatement	if ( ( format == 7 && header_info . bw ) )		16776	0					
ANR	17833	Condition	format == 7 && header_info . bw	1985:15:58437:58467	16776	0	True				
ANR	17834	AndExpression	format == 7 && header_info . bw		16776	0		&&			
ANR	17835	EqualityExpression	format == 7		16776	0		==			
ANR	17836	Identifier	format		16776	0					
ANR	17837	PrimaryExpression	7		16776	1					
ANR	17838	MemberAccess	header_info . bw		16776	1					
ANR	17839	Identifier	header_info		16776	0					
ANR	17840	Identifier	bw		16776	1					
ANR	17841	CompoundStatement		196:8:6020:6036	16776	1					
ANR	17842	IdentifierDeclStatement	unsigned char uc ;	1986:8:58489:58505	16776	0	True				
ANR	17843	IdentifierDecl	uc		16776	0					
ANR	17844	IdentifierDeclType	unsigned char		16776	0					
ANR	17845	Identifier	uc		16776	1					
ANR	17846	ForStatement	for ( i = 0 ; i < w * h ; ++ i )		16776	1					
ANR	17847	ForInit	i = 0 ;	1988:13:58521:58526	16776	0	True				
ANR	17848	AssignmentExpression	i = 0		16776	0		=			
ANR	17849	Identifier	i		16776	0					
ANR	17850	PrimaryExpression	0		16776	1					
ANR	17851	Condition	i < w * h	1988:20:58528:58536	16776	1	True				
ANR	17852	RelationalExpression	i < w * h		16776	0		<			
ANR	17853	Identifier	i		16776	0					
ANR	17854	MultiplicativeExpression	w * h		16776	1		*			
ANR	17855	Identifier	w		16776	0					
ANR	17856	Identifier	h		16776	1					
ANR	17857	UnaryExpression	++ i	1988:31:58539:58541	16776	2	True				
ANR	17858	IncDec	++		16776	0					
ANR	17859	Identifier	i		16776	1					
ANR	17860	CompoundStatement		198:36:6075:6075	16776	3					
ANR	17861	IfStatement	"if ( ! fread ( & uc , 1 , 1 , fp ) )"		16776	0					
ANR	17862	Condition	"! fread ( & uc , 1 , 1 , fp )"	1989:16:58562:58582	16776	0	True				
ANR	17863	UnaryOperationExpression	"! fread ( & uc , 1 , 1 , fp )"		16776	0					
ANR	17864	UnaryOperator	!		16776	0					
ANR	17865	CallExpression	"fread ( & uc , 1 , 1 , fp )"		16776	1					
ANR	17866	Callee	fread		16776	0					
ANR	17867	Identifier	fread		16776	0					
ANR	17868	ArgumentList	& uc		16776	1					
ANR	17869	Argument	& uc		16776	0					
ANR	17870	UnaryOperationExpression	& uc		16776	0					
ANR	17871	UnaryOperator	&		16776	0					
ANR	17872	Identifier	uc		16776	1					
ANR	17873	Argument	1		16776	1					
ANR	17874	PrimaryExpression	1		16776	0					
ANR	17875	Argument	1		16776	2					
ANR	17876	PrimaryExpression	1		16776	0					
ANR	17877	Argument	fp		16776	3					
ANR	17878	Identifier	fp		16776	0					
ANR	17879	CompoundStatement		199:39:6116:6116	16776	1					
ANR	17880	ExpressionStatement	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"	1990:16:58603:58647	16776	0	True				
ANR	17881	CallExpression	"fprintf ( stderr , ""Missing data. Quitting.\\n"" )"		16776	0					
ANR	17882	Callee	fprintf		16776	0					
ANR	17883	Identifier	fprintf		16776	0					
ANR	17884	ArgumentList	stderr		16776	1					
ANR	17885	Argument	stderr		16776	0					
ANR	17886	Identifier	stderr		16776	0					
ANR	17887	Argument	"""Missing data. Quitting.\\n"""		16776	1					
ANR	17888	PrimaryExpression	"""Missing data. Quitting.\\n"""		16776	0					
ANR	17889	ExpressionStatement	opj_image_destroy ( image )	1991:16:58665:58689	16776	1	True				
ANR	17890	CallExpression	opj_image_destroy ( image )		16776	0					
ANR	17891	Callee	opj_image_destroy		16776	0					
ANR	17892	Identifier	opj_image_destroy		16776	0					
ANR	17893	ArgumentList	image		16776	1					
ANR	17894	Argument	image		16776	0					
ANR	17895	Identifier	image		16776	0					
ANR	17896	ExpressionStatement	fclose ( fp )	1992:16:58707:58717	16776	2	True				
ANR	17897	CallExpression	fclose ( fp )		16776	0					
ANR	17898	Callee	fclose		16776	0					
ANR	17899	Identifier	fclose		16776	0					
ANR	17900	ArgumentList	fp		16776	1					
ANR	17901	Argument	fp		16776	0					
ANR	17902	Identifier	fp		16776	0					
ANR	17903	ReturnStatement	return NULL ;	1993:16:58735:58746	16776	3	True				
ANR	17904	Identifier	NULL		16776	0					
ANR	17905	ExpressionStatement	image -> comps [ 0 ] . data [ i ] = ( uc & 1 ) ? 0 : 255	1995:12:58774:58818	16776	1	True				
ANR	17906	AssignmentExpression	image -> comps [ 0 ] . data [ i ] = ( uc & 1 ) ? 0 : 255		16776	0		=			
ANR	17907	ArrayIndexing	image -> comps [ 0 ] . data [ i ]		16776	0					
ANR	17908	MemberAccess	image -> comps [ 0 ] . data		16776	0					
ANR	17909	ArrayIndexing	image -> comps [ 0 ]		16776	0					
ANR	17910	PtrMemberAccess	image -> comps		16776	0					
ANR	17911	Identifier	image		16776	0					
ANR	17912	Identifier	comps		16776	1					
ANR	17913	PrimaryExpression	0		16776	1					
ANR	17914	Identifier	data		16776	1					
ANR	17915	Identifier	i		16776	1					
ANR	17916	ConditionalExpression	( uc & 1 ) ? 0 : 255		16776	1					
ANR	17917	Condition	uc & 1		16776	0					
ANR	17918	BitAndExpression	uc & 1		16776	0		&			
ANR	17919	Identifier	uc		16776	0					
ANR	17920	PrimaryExpression	1		16776	1					
ANR	17921	PrimaryExpression	0		16776	1					
ANR	17922	PrimaryExpression	255		16776	2					
ANR	17923	ExpressionStatement	fclose ( fp )	1998:4:58840:58850	16776	32	True				
ANR	17924	CallExpression	fclose ( fp )		16776	0					
ANR	17925	Callee	fclose		16776	0					
ANR	17926	Identifier	fclose		16776	0					
ANR	17927	ArgumentList	fp		16776	1					
ANR	17928	Argument	fp		16776	0					
ANR	17929	Identifier	fp		16776	0					
ANR	17930	ReturnStatement	return image ;	2000:4:58857:58869	16776	33	True				
ANR	17931	Identifier	image		16776	0					
ANR	17932	ReturnType	opj_image_t *		16776	1					
ANR	17933	Identifier	pnmtoimage		16776	2					
ANR	17934	ParameterList	"const char * filename , opj_cparameters_t * parameters"		16776	3					
ANR	17935	Parameter	const char * filename	1790:24:52415:52434	16776	0	True				
ANR	17936	ParameterType	const char *		16776	0					
ANR	17937	Identifier	filename		16776	1					
ANR	17938	Parameter	opj_cparameters_t * parameters	1790:46:52437:52465	16776	1	True				
ANR	17939	ParameterType	opj_cparameters_t *		16776	0					
ANR	17940	Identifier	parameters		16776	1					
ANR	17941	CFGEntryNode	ENTRY		16776		True				
ANR	17942	CFGExitNode	EXIT		16776		True				
ANR	17943	Symbol	image -> y0		16776						
ANR	17944	Symbol	image -> y1		16776						
ANR	17945	Symbol	header_info . ok		16776						
ANR	17946	Symbol	cmptparm		16776						
ANR	17947	Symbol	image -> comps		16776						
ANR	17948	Symbol	bit		16776						
ANR	17949	Symbol	header_info . bw		16776						
ANR	17950	Symbol	uc		16776						
ANR	17951	Symbol	header_info . gray		16776						
ANR	17952	Symbol	& header_info		16776						
ANR	17953	Symbol	prec		16776						
ANR	17954	Symbol	* image -> comps [ compno ] . data		16776						
ANR	17955	Symbol	* * * image		16776						
ANR	17956	Symbol	* * image -> comps		16776						
ANR	17957	Symbol	& index		16776						
ANR	17958	Symbol	header_info . rgb		16776						
ANR	17959	Symbol	image		16776						
ANR	17960	Symbol	image -> x0		16776						
ANR	17961	Symbol	NULL		16776						
ANR	17962	Symbol	header_info . depth		16776						
ANR	17963	Symbol	image -> x1		16776						
ANR	17964	Symbol	format		16776						
ANR	17965	Symbol	index		16776						
ANR	17966	Symbol	stderr		16776						
ANR	17967	Symbol	c0		16776						
ANR	17968	Symbol	c1		16776						
ANR	17969	Symbol	fread		16776						
ANR	17970	Symbol	compno		16776						
ANR	17971	Symbol	header_info		16776						
ANR	17972	Symbol	cmptparm [ i ] . dy		16776						
ANR	17973	Symbol	* compno		16776						
ANR	17974	Symbol	filename		16776						
ANR	17975	Symbol	* parameters		16776						
ANR	17976	Symbol	cmptparm [ i ] . h		16776						
ANR	17977	Symbol	cmptparm [ i ] . dx		16776						
ANR	17978	Symbol	image -> comps [ compno ] . data		16776						
ANR	17979	Symbol	parameters		16776						
ANR	17980	Symbol	* image		16776						
ANR	17981	Symbol	cmptparm [ i ] . bpp		16776						
ANR	17982	Symbol	cmptparm [ i ] . w		16776						
ANR	17983	Symbol	OPJ_CLRSPC_GRAY		16776						
ANR	17984	Symbol	has_prec		16776						
ANR	17985	Symbol	parameters -> image_offset_x0		16776						
ANR	17986	Symbol	fp		16776						
ANR	17987	Symbol	opj_image_create		16776						
ANR	17988	Symbol	header_info . graya		16776						
ANR	17989	Symbol	header_info . width		16776						
ANR	17990	Symbol	* * image		16776						
ANR	17991	Symbol	INT_MAX		16776						
ANR	17992	Symbol	image -> comps [ 0 ] . data		16776						
ANR	17993	Symbol	& uc		16776						
ANR	17994	Symbol	* image -> comps [ 0 ] . data		16776						
ANR	17995	Symbol	color_space		16776						
ANR	17996	Symbol	EOF		16776						
ANR	17997	Symbol	numcomps		16776						
ANR	17998	Symbol	fopen		16776						
ANR	17999	Symbol	* image -> comps		16776						
ANR	18000	Symbol	header_info . maxval		16776						
ANR	18001	Symbol	subsampling_dx		16776						
ANR	18002	Symbol	cmptparm [ i ] . sgnd		16776						
ANR	18003	Symbol	subsampling_dy		16776						
ANR	18004	Symbol	one		16776						
ANR	18005	Symbol	h		16776						
ANR	18006	Symbol	i		16776						
ANR	18007	Symbol	OPJ_CLRSPC_SRGB		16776						
ANR	18008	Symbol	parameters -> image_offset_y0		16776						
ANR	18009	Symbol	header_info . rgba		16776						
ANR	18010	Symbol	parameters -> subsampling_dx		16776						
ANR	18011	Symbol	parameters -> subsampling_dy		16776						
ANR	18012	Symbol	* * compno		16776						
ANR	18013	Symbol	header_info . height		16776						
ANR	18014	Symbol	fscanf		16776						
ANR	18015	Symbol	cmptparm [ i ] . prec		16776						
ANR	18016	Symbol	* i		16776						
ANR	18017	Symbol	& c0		16776						
ANR	18018	Symbol	w		16776						
ANR	18019	Symbol	header_info . format		16776						
ANR	18020	Symbol	x		16776						
ANR	18021	Symbol	& c1		16776						
ANR	18022	Symbol	y		16776						
ANR	18023	Symbol	* cmptparm		16776						
ANR	18024	Symbol	getc		16776						
ANR	18025	Function	are_comps_similar	2003:0:58892:59352							
ANR	18026	FunctionDef	are_comps_similar (opj_image_t * image)		18025	0					
ANR	18027	CompoundStatement		2004:0:58942:59352	18025	0					
ANR	18028	IdentifierDeclStatement	unsigned int i ;	2005:4:58948:58962	18025	0	True				
ANR	18029	IdentifierDecl	i		18025	0					
ANR	18030	IdentifierDeclType	unsigned int		18025	0					
ANR	18031	Identifier	i		18025	1					
ANR	18032	ForStatement	for ( i = 1 ; i < image -> numcomps ; i ++ )		18025	1					
ANR	18033	ForInit	i = 1 ;	2006:9:58973:58978	18025	0	True				
ANR	18034	AssignmentExpression	i = 1		18025	0		=			
ANR	18035	Identifier	i		18025	0					
ANR	18036	PrimaryExpression	1		18025	1					
ANR	18037	Condition	i < image -> numcomps	2006:16:58980:58998	18025	1	True				
ANR	18038	RelationalExpression	i < image -> numcomps		18025	0		<			
ANR	18039	Identifier	i		18025	0					
ANR	18040	PtrMemberAccess	image -> numcomps		18025	1					
ANR	18041	Identifier	image		18025	0					
ANR	18042	Identifier	numcomps		18025	1					
ANR	18043	PostIncDecOperationExpression	i ++	2006:37:59001:59003	18025	2	True				
ANR	18044	Identifier	i		18025	0					
ANR	18045	IncDec	++		18025	1					
ANR	18046	CompoundStatement		3:42:63:63	18025	3					
ANR	18047	IfStatement	if ( image -> comps [ 0 ] . dx != image -> comps [ i ] . dx || image -> comps [ 0 ] . dy != image -> comps [ i ] . dy || ( i <= 2 && ( image -> comps [ 0 ] . prec != image -> comps [ i ] . prec || image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd ) ) )		18025	0					
ANR	18048	Condition	image -> comps [ 0 ] . dx != image -> comps [ i ] . dx || image -> comps [ 0 ] . dy != image -> comps [ i ] . dy || ( i <= 2 && ( image -> comps [ 0 ] . prec != image -> comps [ i ] . prec || image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd ) )	2007:12:59020:59280	18025	0	True				
ANR	18049	OrExpression	image -> comps [ 0 ] . dx != image -> comps [ i ] . dx || image -> comps [ 0 ] . dy != image -> comps [ i ] . dy || ( i <= 2 && ( image -> comps [ 0 ] . prec != image -> comps [ i ] . prec || image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd ) )		18025	0		||			
ANR	18050	EqualityExpression	image -> comps [ 0 ] . dx != image -> comps [ i ] . dx		18025	0		!=			
ANR	18051	MemberAccess	image -> comps [ 0 ] . dx		18025	0					
ANR	18052	ArrayIndexing	image -> comps [ 0 ]		18025	0					
ANR	18053	PtrMemberAccess	image -> comps		18025	0					
ANR	18054	Identifier	image		18025	0					
ANR	18055	Identifier	comps		18025	1					
ANR	18056	PrimaryExpression	0		18025	1					
ANR	18057	Identifier	dx		18025	1					
ANR	18058	MemberAccess	image -> comps [ i ] . dx		18025	1					
ANR	18059	ArrayIndexing	image -> comps [ i ]		18025	0					
ANR	18060	PtrMemberAccess	image -> comps		18025	0					
ANR	18061	Identifier	image		18025	0					
ANR	18062	Identifier	comps		18025	1					
ANR	18063	Identifier	i		18025	1					
ANR	18064	Identifier	dx		18025	1					
ANR	18065	OrExpression	image -> comps [ 0 ] . dy != image -> comps [ i ] . dy || ( i <= 2 && ( image -> comps [ 0 ] . prec != image -> comps [ i ] . prec || image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd ) )		18025	1		||			
ANR	18066	EqualityExpression	image -> comps [ 0 ] . dy != image -> comps [ i ] . dy		18025	0		!=			
ANR	18067	MemberAccess	image -> comps [ 0 ] . dy		18025	0					
ANR	18068	ArrayIndexing	image -> comps [ 0 ]		18025	0					
ANR	18069	PtrMemberAccess	image -> comps		18025	0					
ANR	18070	Identifier	image		18025	0					
ANR	18071	Identifier	comps		18025	1					
ANR	18072	PrimaryExpression	0		18025	1					
ANR	18073	Identifier	dy		18025	1					
ANR	18074	MemberAccess	image -> comps [ i ] . dy		18025	1					
ANR	18075	ArrayIndexing	image -> comps [ i ]		18025	0					
ANR	18076	PtrMemberAccess	image -> comps		18025	0					
ANR	18077	Identifier	image		18025	0					
ANR	18078	Identifier	comps		18025	1					
ANR	18079	Identifier	i		18025	1					
ANR	18080	Identifier	dy		18025	1					
ANR	18081	AndExpression	i <= 2 && ( image -> comps [ 0 ] . prec != image -> comps [ i ] . prec || image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd )		18025	1		&&			
ANR	18082	RelationalExpression	i <= 2		18025	0		<=			
ANR	18083	Identifier	i		18025	0					
ANR	18084	PrimaryExpression	2		18025	1					
ANR	18085	OrExpression	image -> comps [ 0 ] . prec != image -> comps [ i ] . prec || image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd		18025	1		||			
ANR	18086	EqualityExpression	image -> comps [ 0 ] . prec != image -> comps [ i ] . prec		18025	0		!=			
ANR	18087	MemberAccess	image -> comps [ 0 ] . prec		18025	0					
ANR	18088	ArrayIndexing	image -> comps [ 0 ]		18025	0					
ANR	18089	PtrMemberAccess	image -> comps		18025	0					
ANR	18090	Identifier	image		18025	0					
ANR	18091	Identifier	comps		18025	1					
ANR	18092	PrimaryExpression	0		18025	1					
ANR	18093	Identifier	prec		18025	1					
ANR	18094	MemberAccess	image -> comps [ i ] . prec		18025	1					
ANR	18095	ArrayIndexing	image -> comps [ i ]		18025	0					
ANR	18096	PtrMemberAccess	image -> comps		18025	0					
ANR	18097	Identifier	image		18025	0					
ANR	18098	Identifier	comps		18025	1					
ANR	18099	Identifier	i		18025	1					
ANR	18100	Identifier	prec		18025	1					
ANR	18101	EqualityExpression	image -> comps [ 0 ] . sgnd != image -> comps [ i ] . sgnd		18025	1		!=			
ANR	18102	MemberAccess	image -> comps [ 0 ] . sgnd		18025	0					
ANR	18103	ArrayIndexing	image -> comps [ 0 ]		18025	0					
ANR	18104	PtrMemberAccess	image -> comps		18025	0					
ANR	18105	Identifier	image		18025	0					
ANR	18106	Identifier	comps		18025	1					
ANR	18107	PrimaryExpression	0		18025	1					
ANR	18108	Identifier	sgnd		18025	1					
ANR	18109	MemberAccess	image -> comps [ i ] . sgnd		18025	1					
ANR	18110	ArrayIndexing	image -> comps [ i ]		18025	0					
ANR	18111	PtrMemberAccess	image -> comps		18025	0					
ANR	18112	Identifier	image		18025	0					
ANR	18113	Identifier	comps		18025	1					
ANR	18114	Identifier	i		18025	1					
ANR	18115	Identifier	sgnd		18025	1					
ANR	18116	CompoundStatement		8:66:340:340	18025	1					
ANR	18117	ReturnStatement	return OPJ_FALSE ;	2012:12:59297:59313	18025	0	True				
ANR	18118	Identifier	OPJ_FALSE		18025	0					
ANR	18119	ReturnStatement	return OPJ_TRUE ;	2015:4:59335:59350	18025	2	True				
ANR	18120	Identifier	OPJ_TRUE		18025	0					
ANR	18121	ReturnType	static int		18025	1					
ANR	18122	Identifier	are_comps_similar		18025	2					
ANR	18123	ParameterList	opj_image_t * image		18025	3					
ANR	18124	Parameter	opj_image_t * image	2003:29:58921:58939	18025	0	True				
ANR	18125	ParameterType	opj_image_t *		18025	0					
ANR	18126	Identifier	image		18025	1					
ANR	18127	CFGEntryNode	ENTRY		18025		True				
ANR	18128	CFGExitNode	EXIT		18025		True				
ANR	18129	Symbol	image		18025						
ANR	18130	Symbol	* image -> comps		18025						
ANR	18131	Symbol	image -> comps [ i ] . sgnd		18025						
ANR	18132	Symbol	i		18025						
ANR	18133	Symbol	image -> comps [ 0 ] . dy		18025						
ANR	18134	Symbol	image -> comps [ 0 ] . dx		18025						
ANR	18135	Symbol	image -> comps		18025						
ANR	18136	Symbol	image -> numcomps		18025						
ANR	18137	Symbol	* i		18025						
ANR	18138	Symbol	image -> comps [ 0 ] . sgnd		18025						
ANR	18139	Symbol	OPJ_FALSE		18025						
ANR	18140	Symbol	* * image		18025						
ANR	18141	Symbol	image -> comps [ i ] . prec		18025						
ANR	18142	Symbol	image -> comps [ 0 ] . prec		18025						
ANR	18143	Symbol	image -> comps [ i ] . dx		18025						
ANR	18144	Symbol	OPJ_TRUE		18025						
ANR	18145	Symbol	* image		18025						
ANR	18146	Symbol	image -> comps [ i ] . dy		18025						
ANR	18147	Function	imagetopnm	2019:0:59356:67227							
ANR	18148	FunctionDef	"imagetopnm (opj_image_t * image , const char * outfile , int force_split)"		18147	0					
ANR	18149	CompoundStatement		2020:0:59430:67227	18147	0					
ANR	18150	IdentifierDeclStatement	"int * red , * green , * blue , * alpha ;"	2021:4:59436:59467	18147	0	True				
ANR	18151	IdentifierDecl	* red		18147	0					
ANR	18152	IdentifierDeclType	int *		18147	0					
ANR	18153	Identifier	red		18147	1					
ANR	18154	IdentifierDecl	* green		18147	1					
ANR	18155	IdentifierDeclType	int *		18147	0					
ANR	18156	Identifier	green		18147	1					
ANR	18157	IdentifierDecl	* blue		18147	2					
ANR	18158	IdentifierDeclType	int *		18147	0					
ANR	18159	Identifier	blue		18147	1					
ANR	18160	IdentifierDecl	* alpha		18147	3					
ANR	18161	IdentifierDeclType	int *		18147	0					
ANR	18162	Identifier	alpha		18147	1					
ANR	18163	IdentifierDeclStatement	"int wr , hr , max ;"	2022:4:59473:59488	18147	1	True				
ANR	18164	IdentifierDecl	wr		18147	0					
ANR	18165	IdentifierDeclType	int		18147	0					
ANR	18166	Identifier	wr		18147	1					
ANR	18167	IdentifierDecl	hr		18147	1					
ANR	18168	IdentifierDeclType	int		18147	0					
ANR	18169	Identifier	hr		18147	1					
ANR	18170	IdentifierDecl	max		18147	2					
ANR	18171	IdentifierDeclType	int		18147	0					
ANR	18172	Identifier	max		18147	1					
ANR	18173	IdentifierDeclStatement	int i ;	2023:4:59494:59499	18147	2	True				
ANR	18174	IdentifierDecl	i		18147	0					
ANR	18175	IdentifierDeclType	int		18147	0					
ANR	18176	Identifier	i		18147	1					
ANR	18177	IdentifierDeclStatement	"unsigned int compno , ncomp ;"	2024:4:59505:59531	18147	3	True				
ANR	18178	IdentifierDecl	compno		18147	0					
ANR	18179	IdentifierDeclType	unsigned int		18147	0					
ANR	18180	Identifier	compno		18147	1					
ANR	18181	IdentifierDecl	ncomp		18147	1					
ANR	18182	IdentifierDeclType	unsigned int		18147	0					
ANR	18183	Identifier	ncomp		18147	1					
ANR	18184	IdentifierDeclStatement	"int adjustR , adjustG , adjustB , adjustA ;"	2025:4:59537:59575	18147	4	True				
ANR	18185	IdentifierDecl	adjustR		18147	0					
ANR	18186	IdentifierDeclType	int		18147	0					
ANR	18187	Identifier	adjustR		18147	1					
ANR	18188	IdentifierDecl	adjustG		18147	1					
ANR	18189	IdentifierDeclType	int		18147	0					
ANR	18190	Identifier	adjustG		18147	1					
ANR	18191	IdentifierDecl	adjustB		18147	2					
ANR	18192	IdentifierDeclType	int		18147	0					
ANR	18193	Identifier	adjustB		18147	1					
ANR	18194	IdentifierDecl	adjustA		18147	3					
ANR	18195	IdentifierDeclType	int		18147	0					
ANR	18196	Identifier	adjustA		18147	1					
ANR	18197	IdentifierDeclStatement	"int fails , two , want_gray , has_alpha , triple ;"	2026:4:59581:59625	18147	5	True				
ANR	18198	IdentifierDecl	fails		18147	0					
ANR	18199	IdentifierDeclType	int		18147	0					
ANR	18200	Identifier	fails		18147	1					
ANR	18201	IdentifierDecl	two		18147	1					
ANR	18202	IdentifierDeclType	int		18147	0					
ANR	18203	Identifier	two		18147	1					
ANR	18204	IdentifierDecl	want_gray		18147	2					
ANR	18205	IdentifierDeclType	int		18147	0					
ANR	18206	Identifier	want_gray		18147	1					
ANR	18207	IdentifierDecl	has_alpha		18147	3					
ANR	18208	IdentifierDeclType	int		18147	0					
ANR	18209	Identifier	has_alpha		18147	1					
ANR	18210	IdentifierDecl	triple		18147	4					
ANR	18211	IdentifierDeclType	int		18147	0					
ANR	18212	Identifier	triple		18147	1					
ANR	18213	IdentifierDeclStatement	"int prec , v ;"	2027:4:59631:59642	18147	6	True				
ANR	18214	IdentifierDecl	prec		18147	0					
ANR	18215	IdentifierDeclType	int		18147	0					
ANR	18216	Identifier	prec		18147	1					
ANR	18217	IdentifierDecl	v		18147	1					
ANR	18218	IdentifierDeclType	int		18147	0					
ANR	18219	Identifier	v		18147	1					
ANR	18220	IdentifierDeclStatement	FILE * fdest = NULL ;	2028:4:59648:59666	18147	7	True				
ANR	18221	IdentifierDecl	* fdest = NULL		18147	0					
ANR	18222	IdentifierDeclType	FILE *		18147	0					
ANR	18223	Identifier	fdest		18147	1					
ANR	18224	AssignmentExpression	* fdest = NULL		18147	2		=			
ANR	18225	Identifier	NULL		18147	0					
ANR	18226	Identifier	NULL		18147	1					
ANR	18227	IdentifierDeclStatement	const char * tmp = outfile ;	2029:4:59672:59697	18147	8	True				
ANR	18228	IdentifierDecl	* tmp = outfile		18147	0					
ANR	18229	IdentifierDeclType	const char *		18147	0					
ANR	18230	Identifier	tmp		18147	1					
ANR	18231	AssignmentExpression	* tmp = outfile		18147	2		=			
ANR	18232	Identifier	outfile		18147	0					
ANR	18233	Identifier	outfile		18147	1					
ANR	18234	IdentifierDeclStatement	char * destname ;	2030:4:59703:59717	18147	9	True				
ANR	18235	IdentifierDecl	* destname		18147	0					
ANR	18236	IdentifierDeclType	char *		18147	0					
ANR	18237	Identifier	destname		18147	1					
ANR	18238	ExpressionStatement	alpha = NULL	2032:4:59724:59736	18147	10	True				
ANR	18239	AssignmentExpression	alpha = NULL		18147	0		=			
ANR	18240	Identifier	alpha		18147	0					
ANR	18241	Identifier	NULL		18147	1					
ANR	18242	IfStatement	if ( ( prec = ( int ) image -> comps [ 0 ] . prec ) > 16 )		18147	11					
ANR	18243	Condition	( prec = ( int ) image -> comps [ 0 ] . prec ) > 16	2034:8:59747:59785	18147	0	True				
ANR	18244	RelationalExpression	( prec = ( int ) image -> comps [ 0 ] . prec ) > 16		18147	0		>			
ANR	18245	AssignmentExpression	prec = ( int ) image -> comps [ 0 ] . prec		18147	0		=			
ANR	18246	Identifier	prec		18147	0					
ANR	18247	CastExpression	( int ) image -> comps [ 0 ] . prec		18147	1					
ANR	18248	CastTarget	int		18147	0					
ANR	18249	MemberAccess	image -> comps [ 0 ] . prec		18147	1					
ANR	18250	ArrayIndexing	image -> comps [ 0 ]		18147	0					
ANR	18251	PtrMemberAccess	image -> comps		18147	0					
ANR	18252	Identifier	image		18147	0					
ANR	18253	Identifier	comps		18147	1					
ANR	18254	PrimaryExpression	0		18147	1					
ANR	18255	Identifier	prec		18147	1					
ANR	18256	PrimaryExpression	16		18147	1					
ANR	18257	CompoundStatement		15:49:357:357	18147	1					
ANR	18258	Statement	fprintf	2035:8:59798:59804	18147	0	True				
ANR	18259	Statement	(	2035:15:59805:59805	18147	1	True				
ANR	18260	Statement	stderr	2035:16:59806:59811	18147	2	True				
ANR	18261	Statement	","	2035:22:59812:59812	18147	3	True				
ANR	18262	Statement	"""%s:%d:imagetopnm\\n\\tprecision %d is larger than 16"""	2035:24:59814:59865	18147	4	True				
ANR	18263	Statement	"""\\n\\t: refused.\\n"""	2036:16:59883:59900	18147	5	True				
ANR	18264	Statement	","	2036:34:59901:59901	18147	6	True				
ANR	18265	Statement	__FILE__	2036:36:59903:59910	18147	7	True				
ANR	18266	Statement	","	2036:44:59911:59911	18147	8	True				
ANR	18267	Statement	__LINE__	2036:46:59913:59920	18147	9	True				
ANR	18268	Statement	","	2036:54:59921:59921	18147	10	True				
ANR	18269	Statement	prec	2036:56:59923:59926	18147	11	True				
ANR	18270	Statement	)	2036:60:59927:59927	18147	12	True				
ANR	18271	ExpressionStatement		2036:61:59928:59928	18147	13	True				
ANR	18272	ReturnStatement	return 1 ;	2037:8:59938:59946	18147	14	True				
ANR	18273	PrimaryExpression	1		18147	0					
ANR	18274	ExpressionStatement	two = has_alpha = 0	2039:4:59958:59977	18147	12	True				
ANR	18275	AssignmentExpression	two = has_alpha = 0		18147	0		=			
ANR	18276	Identifier	two		18147	0					
ANR	18277	AssignmentExpression	has_alpha = 0		18147	1		=			
ANR	18278	Identifier	has_alpha		18147	0					
ANR	18279	PrimaryExpression	0		18147	1					
ANR	18280	ExpressionStatement	fails = 1	2040:4:59983:59992	18147	13	True				
ANR	18281	AssignmentExpression	fails = 1		18147	0		=			
ANR	18282	Identifier	fails		18147	0					
ANR	18283	PrimaryExpression	1		18147	1					
ANR	18284	ExpressionStatement	ncomp = image -> numcomps	2041:4:59998:60021	18147	14	True				
ANR	18285	AssignmentExpression	ncomp = image -> numcomps		18147	0		=			
ANR	18286	Identifier	ncomp		18147	0					
ANR	18287	PtrMemberAccess	image -> numcomps		18147	1					
ANR	18288	Identifier	image		18147	0					
ANR	18289	Identifier	numcomps		18147	1					
ANR	18290	WhileStatement	while ( * tmp )		18147	15					
ANR	18291	Condition	* tmp	2043:11:60035:60038	18147	0	True				
ANR	18292	UnaryOperationExpression	* tmp		18147	0					
ANR	18293	UnaryOperator	*		18147	0					
ANR	18294	Identifier	tmp		18147	1					
ANR	18295	CompoundStatement		24:17:610:610	18147	1					
ANR	18296	ExpressionStatement	++ tmp	2044:8:60051:60056	18147	0	True				
ANR	18297	UnaryExpression	++ tmp		18147	0					
ANR	18298	IncDec	++		18147	0					
ANR	18299	Identifier	tmp		18147	1					
ANR	18300	ExpressionStatement	tmp -= 2	2046:4:60068:60076	18147	16	True				
ANR	18301	AssignmentExpression	tmp -= 2		18147	0		-=			
ANR	18302	Identifier	tmp		18147	0					
ANR	18303	PrimaryExpression	2		18147	1					
ANR	18304	ExpressionStatement	want_gray = ( * tmp == 'g' || * tmp == 'G' )	2047:4:60082:60122	18147	17	True				
ANR	18305	AssignmentExpression	want_gray = ( * tmp == 'g' || * tmp == 'G' )		18147	0		=			
ANR	18306	Identifier	want_gray		18147	0					
ANR	18307	OrExpression	* tmp == 'g' || * tmp == 'G'		18147	1		||			
ANR	18308	EqualityExpression	* tmp == 'g'		18147	0		==			
ANR	18309	UnaryOperationExpression	* tmp		18147	0					
ANR	18310	UnaryOperator	*		18147	0					
ANR	18311	Identifier	tmp		18147	1					
ANR	18312	PrimaryExpression	'g'		18147	1					
ANR	18313	EqualityExpression	* tmp == 'G'		18147	1		==			
ANR	18314	UnaryOperationExpression	* tmp		18147	0					
ANR	18315	UnaryOperator	*		18147	0					
ANR	18316	Identifier	tmp		18147	1					
ANR	18317	PrimaryExpression	'G'		18147	1					
ANR	18318	ExpressionStatement	ncomp = image -> numcomps	2048:4:60128:60151	18147	18	True				
ANR	18319	AssignmentExpression	ncomp = image -> numcomps		18147	0		=			
ANR	18320	Identifier	ncomp		18147	0					
ANR	18321	PtrMemberAccess	image -> numcomps		18147	1					
ANR	18322	Identifier	image		18147	0					
ANR	18323	Identifier	numcomps		18147	1					
ANR	18324	IfStatement	if ( want_gray )		18147	19					
ANR	18325	Condition	want_gray	2050:8:60162:60170	18147	0	True				
ANR	18326	Identifier	want_gray		18147	0					
ANR	18327	CompoundStatement		31:19:742:742	18147	1					
ANR	18328	ExpressionStatement	ncomp = 1	2051:8:60183:60192	18147	0	True				
ANR	18329	AssignmentExpression	ncomp = 1		18147	0		=			
ANR	18330	Identifier	ncomp		18147	0					
ANR	18331	PrimaryExpression	1		18147	1					
ANR	18332	IfStatement	if ( ( force_split == 0 ) && ncomp >= 2 && are_comps_similar ( image ) )		18147	20					
ANR	18333	Condition	( force_split == 0 ) && ncomp >= 2 && are_comps_similar ( image )	2054:8:60209:60280	18147	0	True				
ANR	18334	AndExpression	( force_split == 0 ) && ncomp >= 2 && are_comps_similar ( image )		18147	0		&&			
ANR	18335	EqualityExpression	force_split == 0		18147	0		==			
ANR	18336	Identifier	force_split		18147	0					
ANR	18337	PrimaryExpression	0		18147	1					
ANR	18338	AndExpression	ncomp >= 2 && are_comps_similar ( image )		18147	1		&&			
ANR	18339	RelationalExpression	ncomp >= 2		18147	0		>=			
ANR	18340	Identifier	ncomp		18147	0					
ANR	18341	PrimaryExpression	2		18147	1					
ANR	18342	CallExpression	are_comps_similar ( image )		18147	1					
ANR	18343	Callee	are_comps_similar		18147	0					
ANR	18344	Identifier	are_comps_similar		18147	0					
ANR	18345	ArgumentList	image		18147	1					
ANR	18346	Argument	image		18147	0					
ANR	18347	Identifier	image		18147	0					
ANR	18348	CompoundStatement		36:38:852:852	18147	1					
ANR	18349	ExpressionStatement	"fdest = fopen ( outfile , ""wb"" )"	2056:8:60293:60321	18147	0	True				
ANR	18350	AssignmentExpression	"fdest = fopen ( outfile , ""wb"" )"		18147	0		=			
ANR	18351	Identifier	fdest		18147	0					
ANR	18352	CallExpression	"fopen ( outfile , ""wb"" )"		18147	1					
ANR	18353	Callee	fopen		18147	0					
ANR	18354	Identifier	fopen		18147	0					
ANR	18355	ArgumentList	outfile		18147	1					
ANR	18356	Argument	outfile		18147	0					
ANR	18357	Identifier	outfile		18147	0					
ANR	18358	Argument	"""wb"""		18147	1					
ANR	18359	PrimaryExpression	"""wb"""		18147	0					
ANR	18360	IfStatement	if ( ! fdest )		18147	1					
ANR	18361	Condition	! fdest	2058:12:60336:60341	18147	0	True				
ANR	18362	UnaryOperationExpression	! fdest		18147	0					
ANR	18363	UnaryOperator	!		18147	0					
ANR	18364	Identifier	fdest		18147	1					
ANR	18365	CompoundStatement		39:20:913:913	18147	1					
ANR	18366	ExpressionStatement	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , outfile )"	2059:12:60358:60426	18147	0	True				
ANR	18367	CallExpression	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , outfile )"		18147	0					
ANR	18368	Callee	fprintf		18147	0					
ANR	18369	Identifier	fprintf		18147	0					
ANR	18370	ArgumentList	stderr		18147	1					
ANR	18371	Argument	stderr		18147	0					
ANR	18372	Identifier	stderr		18147	0					
ANR	18373	Argument	"""ERROR -> failed to open %s for writing\\n"""		18147	1					
ANR	18374	PrimaryExpression	"""ERROR -> failed to open %s for writing\\n"""		18147	0					
ANR	18375	Argument	outfile		18147	2					
ANR	18376	Identifier	outfile		18147	0					
ANR	18377	ReturnStatement	return fails ;	2060:12:60440:60452	18147	1	True				
ANR	18378	Identifier	fails		18147	0					
ANR	18379	ExpressionStatement	two = ( prec > 8 )	2062:8:60472:60488	18147	2	True				
ANR	18380	AssignmentExpression	two = ( prec > 8 )		18147	0		=			
ANR	18381	Identifier	two		18147	0					
ANR	18382	RelationalExpression	prec > 8		18147	1		>			
ANR	18383	Identifier	prec		18147	0					
ANR	18384	PrimaryExpression	8		18147	1					
ANR	18385	ExpressionStatement	triple = ( ncomp > 2 )	2063:8:60498:60518	18147	3	True				
ANR	18386	AssignmentExpression	triple = ( ncomp > 2 )		18147	0		=			
ANR	18387	Identifier	triple		18147	0					
ANR	18388	RelationalExpression	ncomp > 2		18147	1		>			
ANR	18389	Identifier	ncomp		18147	0					
ANR	18390	PrimaryExpression	2		18147	1					
ANR	18391	ExpressionStatement	wr = ( int ) image -> comps [ 0 ] . w	2064:8:60528:60555	18147	4	True				
ANR	18392	AssignmentExpression	wr = ( int ) image -> comps [ 0 ] . w		18147	0		=			
ANR	18393	Identifier	wr		18147	0					
ANR	18394	CastExpression	( int ) image -> comps [ 0 ] . w		18147	1					
ANR	18395	CastTarget	int		18147	0					
ANR	18396	MemberAccess	image -> comps [ 0 ] . w		18147	1					
ANR	18397	ArrayIndexing	image -> comps [ 0 ]		18147	0					
ANR	18398	PtrMemberAccess	image -> comps		18147	0					
ANR	18399	Identifier	image		18147	0					
ANR	18400	Identifier	comps		18147	1					
ANR	18401	PrimaryExpression	0		18147	1					
ANR	18402	Identifier	w		18147	1					
ANR	18403	ExpressionStatement	hr = ( int ) image -> comps [ 0 ] . h	2065:8:60565:60592	18147	5	True				
ANR	18404	AssignmentExpression	hr = ( int ) image -> comps [ 0 ] . h		18147	0		=			
ANR	18405	Identifier	hr		18147	0					
ANR	18406	CastExpression	( int ) image -> comps [ 0 ] . h		18147	1					
ANR	18407	CastTarget	int		18147	0					
ANR	18408	MemberAccess	image -> comps [ 0 ] . h		18147	1					
ANR	18409	ArrayIndexing	image -> comps [ 0 ]		18147	0					
ANR	18410	PtrMemberAccess	image -> comps		18147	0					
ANR	18411	Identifier	image		18147	0					
ANR	18412	Identifier	comps		18147	1					
ANR	18413	PrimaryExpression	0		18147	1					
ANR	18414	Identifier	h		18147	1					
ANR	18415	ExpressionStatement	max = ( 1 << prec ) - 1	2066:8:60602:60623	18147	6	True				
ANR	18416	AssignmentExpression	max = ( 1 << prec ) - 1		18147	0		=			
ANR	18417	Identifier	max		18147	0					
ANR	18418	AdditiveExpression	( 1 << prec ) - 1		18147	1		-			
ANR	18419	ShiftExpression	1 << prec		18147	0		<<			
ANR	18420	PrimaryExpression	1		18147	0					
ANR	18421	Identifier	prec		18147	1					
ANR	18422	PrimaryExpression	1		18147	1					
ANR	18423	ExpressionStatement	has_alpha = ( ncomp == 4 || ncomp == 2 )	2067:8:60633:60671	18147	7	True				
ANR	18424	AssignmentExpression	has_alpha = ( ncomp == 4 || ncomp == 2 )		18147	0		=			
ANR	18425	Identifier	has_alpha		18147	0					
ANR	18426	OrExpression	ncomp == 4 || ncomp == 2		18147	1		||			
ANR	18427	EqualityExpression	ncomp == 4		18147	0		==			
ANR	18428	Identifier	ncomp		18147	0					
ANR	18429	PrimaryExpression	4		18147	1					
ANR	18430	EqualityExpression	ncomp == 2		18147	1		==			
ANR	18431	Identifier	ncomp		18147	0					
ANR	18432	PrimaryExpression	2		18147	1					
ANR	18433	ExpressionStatement	red = image -> comps [ 0 ] . data	2069:8:60682:60708	18147	8	True				
ANR	18434	AssignmentExpression	red = image -> comps [ 0 ] . data		18147	0		=			
ANR	18435	Identifier	red		18147	0					
ANR	18436	MemberAccess	image -> comps [ 0 ] . data		18147	1					
ANR	18437	ArrayIndexing	image -> comps [ 0 ]		18147	0					
ANR	18438	PtrMemberAccess	image -> comps		18147	0					
ANR	18439	Identifier	image		18147	0					
ANR	18440	Identifier	comps		18147	1					
ANR	18441	PrimaryExpression	0		18147	1					
ANR	18442	Identifier	data		18147	1					
ANR	18443	IfStatement	if ( triple )		18147	9					
ANR	18444	Condition	triple	2071:12:60723:60728	18147	0	True				
ANR	18445	Identifier	triple		18147	0					
ANR	18446	CompoundStatement		52:20:1300:1300	18147	1					
ANR	18447	ExpressionStatement	green = image -> comps [ 1 ] . data	2072:12:60745:60773	18147	0	True				
ANR	18448	AssignmentExpression	green = image -> comps [ 1 ] . data		18147	0		=			
ANR	18449	Identifier	green		18147	0					
ANR	18450	MemberAccess	image -> comps [ 1 ] . data		18147	1					
ANR	18451	ArrayIndexing	image -> comps [ 1 ]		18147	0					
ANR	18452	PtrMemberAccess	image -> comps		18147	0					
ANR	18453	Identifier	image		18147	0					
ANR	18454	Identifier	comps		18147	1					
ANR	18455	PrimaryExpression	1		18147	1					
ANR	18456	Identifier	data		18147	1					
ANR	18457	ExpressionStatement	blue = image -> comps [ 2 ] . data	2073:12:60787:60814	18147	1	True				
ANR	18458	AssignmentExpression	blue = image -> comps [ 2 ] . data		18147	0		=			
ANR	18459	Identifier	blue		18147	0					
ANR	18460	MemberAccess	image -> comps [ 2 ] . data		18147	1					
ANR	18461	ArrayIndexing	image -> comps [ 2 ]		18147	0					
ANR	18462	PtrMemberAccess	image -> comps		18147	0					
ANR	18463	Identifier	image		18147	0					
ANR	18464	Identifier	comps		18147	1					
ANR	18465	PrimaryExpression	2		18147	1					
ANR	18466	Identifier	data		18147	1					
ANR	18467	ElseStatement	else		18147	0					
ANR	18468	CompoundStatement		55:15:1400:1400	18147	0					
ANR	18469	ExpressionStatement	green = blue = NULL	2075:12:60845:60864	18147	0	True				
ANR	18470	AssignmentExpression	green = blue = NULL		18147	0		=			
ANR	18471	Identifier	green		18147	0					
ANR	18472	AssignmentExpression	blue = NULL		18147	1		=			
ANR	18473	Identifier	blue		18147	0					
ANR	18474	Identifier	NULL		18147	1					
ANR	18475	IfStatement	if ( has_alpha )		18147	10					
ANR	18476	Condition	has_alpha	2078:12:60889:60897	18147	0	True				
ANR	18477	Identifier	has_alpha		18147	0					
ANR	18478	CompoundStatement		60:12:1483:1542	18147	1					
ANR	18479	IdentifierDeclStatement	"const char * tt = ( triple ? ""RGB_ALPHA"" : ""GRAYSCALE_ALPHA"" ) ;"	2079:12:60914:60973	18147	0	True				
ANR	18480	IdentifierDecl	"* tt = ( triple ? ""RGB_ALPHA"" : ""GRAYSCALE_ALPHA"" )"		18147	0					
ANR	18481	IdentifierDeclType	const char *		18147	0					
ANR	18482	Identifier	tt		18147	1					
ANR	18483	AssignmentExpression	"* tt = ( triple ? ""RGB_ALPHA"" : ""GRAYSCALE_ALPHA"" )"		18147	2		=			
ANR	18484	Identifier	tt		18147	0					
ANR	18485	ConditionalExpression	"triple ? ""RGB_ALPHA"" : ""GRAYSCALE_ALPHA"""		18147	1					
ANR	18486	Condition	triple		18147	0					
ANR	18487	Identifier	triple		18147	0					
ANR	18488	PrimaryExpression	"""RGB_ALPHA"""		18147	1					
ANR	18489	PrimaryExpression	"""GRAYSCALE_ALPHA"""		18147	2					
ANR	18490	Statement	fprintf	2081:12:60988:60994	18147	1	True				
ANR	18491	Statement	(	2081:19:60995:60995	18147	2	True				
ANR	18492	Statement	fdest	2081:20:60996:61000	18147	3	True				
ANR	18493	Statement	","	2081:25:61001:61001	18147	4	True				
ANR	18494	Statement	"""P7\\n# OpenJPEG-%s\\nWIDTH %d\\nHEIGHT %d\\nDEPTH %u\\n"""	2081:27:61003:61054	18147	5	True				
ANR	18495	Statement	"""MAXVAL %d\\nTUPLTYPE %s\\nENDHDR\\n"""	2082:20:61076:61109	18147	6	True				
ANR	18496	Statement	","	2082:54:61110:61110	18147	7	True				
ANR	18497	Statement	opj_version	2082:56:61112:61122	18147	8	True				
ANR	18498	Statement	(	2082:67:61123:61123	18147	9	True				
ANR	18499	Statement	)	2082:68:61124:61124	18147	10	True				
ANR	18500	Statement	","	2082:69:61125:61125	18147	11	True				
ANR	18501	Statement	wr	2083:20:61147:61148	18147	12	True				
ANR	18502	Statement	","	2083:22:61149:61149	18147	13	True				
ANR	18503	Statement	hr	2083:24:61151:61152	18147	14	True				
ANR	18504	Statement	","	2083:26:61153:61153	18147	15	True				
ANR	18505	Statement	ncomp	2083:28:61155:61159	18147	16	True				
ANR	18506	Statement	","	2083:33:61160:61160	18147	17	True				
ANR	18507	Statement	max	2083:35:61162:61164	18147	18	True				
ANR	18508	Statement	","	2083:38:61165:61165	18147	19	True				
ANR	18509	Statement	tt	2083:40:61167:61168	18147	20	True				
ANR	18510	Statement	)	2083:42:61169:61169	18147	21	True				
ANR	18511	ExpressionStatement		2083:43:61170:61170	18147	22	True				
ANR	18512	ExpressionStatement	alpha = image -> comps [ ncomp - 1 ] . data	2084:12:61184:61220	18147	23	True				
ANR	18513	AssignmentExpression	alpha = image -> comps [ ncomp - 1 ] . data		18147	0		=			
ANR	18514	Identifier	alpha		18147	0					
ANR	18515	MemberAccess	image -> comps [ ncomp - 1 ] . data		18147	1					
ANR	18516	ArrayIndexing	image -> comps [ ncomp - 1 ]		18147	0					
ANR	18517	PtrMemberAccess	image -> comps		18147	0					
ANR	18518	Identifier	image		18147	0					
ANR	18519	Identifier	comps		18147	1					
ANR	18520	AdditiveExpression	ncomp - 1		18147	1		-			
ANR	18521	Identifier	ncomp		18147	0					
ANR	18522	PrimaryExpression	1		18147	1					
ANR	18523	Identifier	data		18147	1					
ANR	18524	ExpressionStatement	adjustA = ( image -> comps [ ncomp - 1 ] . sgnd ? 1 << ( image -> comps [ ncomp - 1 ] . prec - 1 ) : 0 )	2085:12:61234:61343	18147	24	True				
ANR	18525	AssignmentExpression	adjustA = ( image -> comps [ ncomp - 1 ] . sgnd ? 1 << ( image -> comps [ ncomp - 1 ] . prec - 1 ) : 0 )		18147	0		=			
ANR	18526	Identifier	adjustA		18147	0					
ANR	18527	ConditionalExpression	image -> comps [ ncomp - 1 ] . sgnd ? 1 << ( image -> comps [ ncomp - 1 ] . prec - 1 ) : 0		18147	1					
ANR	18528	Condition	image -> comps [ ncomp - 1 ] . sgnd		18147	0					
ANR	18529	MemberAccess	image -> comps [ ncomp - 1 ] . sgnd		18147	0					
ANR	18530	ArrayIndexing	image -> comps [ ncomp - 1 ]		18147	0					
ANR	18531	PtrMemberAccess	image -> comps		18147	0					
ANR	18532	Identifier	image		18147	0					
ANR	18533	Identifier	comps		18147	1					
ANR	18534	AdditiveExpression	ncomp - 1		18147	1		-			
ANR	18535	Identifier	ncomp		18147	0					
ANR	18536	PrimaryExpression	1		18147	1					
ANR	18537	Identifier	sgnd		18147	1					
ANR	18538	ShiftExpression	1 << ( image -> comps [ ncomp - 1 ] . prec - 1 )		18147	1		<<			
ANR	18539	PrimaryExpression	1		18147	0					
ANR	18540	AdditiveExpression	image -> comps [ ncomp - 1 ] . prec - 1		18147	1		-			
ANR	18541	MemberAccess	image -> comps [ ncomp - 1 ] . prec		18147	0					
ANR	18542	ArrayIndexing	image -> comps [ ncomp - 1 ]		18147	0					
ANR	18543	PtrMemberAccess	image -> comps		18147	0					
ANR	18544	Identifier	image		18147	0					
ANR	18545	Identifier	comps		18147	1					
ANR	18546	AdditiveExpression	ncomp - 1		18147	1		-			
ANR	18547	Identifier	ncomp		18147	0					
ANR	18548	PrimaryExpression	1		18147	1					
ANR	18549	Identifier	prec		18147	1					
ANR	18550	PrimaryExpression	1		18147	1					
ANR	18551	PrimaryExpression	0		18147	2					
ANR	18552	ElseStatement	else		18147	0					
ANR	18553	CompoundStatement		68:15:1929:1929	18147	0					
ANR	18554	ExpressionStatement	"fprintf ( fdest , ""P6\\n# OpenJPEG-%s\\n%d %d\\n%d\\n"" , opj_version ( ) , wr , hr , max )"	2088:12:61374:61470	18147	0	True				
ANR	18555	CallExpression	"fprintf ( fdest , ""P6\\n# OpenJPEG-%s\\n%d %d\\n%d\\n"" , opj_version ( ) , wr , hr , max )"		18147	0					
ANR	18556	Callee	fprintf		18147	0					
ANR	18557	Identifier	fprintf		18147	0					
ANR	18558	ArgumentList	fdest		18147	1					
ANR	18559	Argument	fdest		18147	0					
ANR	18560	Identifier	fdest		18147	0					
ANR	18561	Argument	"""P6\\n# OpenJPEG-%s\\n%d %d\\n%d\\n"""		18147	1					
ANR	18562	PrimaryExpression	"""P6\\n# OpenJPEG-%s\\n%d %d\\n%d\\n"""		18147	0					
ANR	18563	Argument	opj_version ( )		18147	2					
ANR	18564	CallExpression	opj_version ( )		18147	0					
ANR	18565	Callee	opj_version		18147	0					
ANR	18566	Identifier	opj_version		18147	0					
ANR	18567	ArgumentList			18147	1					
ANR	18568	Argument	wr		18147	3					
ANR	18569	Identifier	wr		18147	0					
ANR	18570	Argument	hr		18147	4					
ANR	18571	Identifier	hr		18147	0					
ANR	18572	Argument	max		18147	5					
ANR	18573	Identifier	max		18147	0					
ANR	18574	ExpressionStatement	adjustA = 0	2090:12:61484:61495	18147	1	True				
ANR	18575	AssignmentExpression	adjustA = 0		18147	0		=			
ANR	18576	Identifier	adjustA		18147	0					
ANR	18577	PrimaryExpression	0		18147	1					
ANR	18578	ExpressionStatement	adjustR = ( image -> comps [ 0 ] . sgnd ? 1 << ( image -> comps [ 0 ] . prec - 1 ) : 0 )	2092:8:61515:61585	18147	11	True				
ANR	18579	AssignmentExpression	adjustR = ( image -> comps [ 0 ] . sgnd ? 1 << ( image -> comps [ 0 ] . prec - 1 ) : 0 )		18147	0		=			
ANR	18580	Identifier	adjustR		18147	0					
ANR	18581	ConditionalExpression	image -> comps [ 0 ] . sgnd ? 1 << ( image -> comps [ 0 ] . prec - 1 ) : 0		18147	1					
ANR	18582	Condition	image -> comps [ 0 ] . sgnd		18147	0					
ANR	18583	MemberAccess	image -> comps [ 0 ] . sgnd		18147	0					
ANR	18584	ArrayIndexing	image -> comps [ 0 ]		18147	0					
ANR	18585	PtrMemberAccess	image -> comps		18147	0					
ANR	18586	Identifier	image		18147	0					
ANR	18587	Identifier	comps		18147	1					
ANR	18588	PrimaryExpression	0		18147	1					
ANR	18589	Identifier	sgnd		18147	1					
ANR	18590	ShiftExpression	1 << ( image -> comps [ 0 ] . prec - 1 )		18147	1		<<			
ANR	18591	PrimaryExpression	1		18147	0					
ANR	18592	AdditiveExpression	image -> comps [ 0 ] . prec - 1		18147	1		-			
ANR	18593	MemberAccess	image -> comps [ 0 ] . prec		18147	0					
ANR	18594	ArrayIndexing	image -> comps [ 0 ]		18147	0					
ANR	18595	PtrMemberAccess	image -> comps		18147	0					
ANR	18596	Identifier	image		18147	0					
ANR	18597	Identifier	comps		18147	1					
ANR	18598	PrimaryExpression	0		18147	1					
ANR	18599	Identifier	prec		18147	1					
ANR	18600	PrimaryExpression	1		18147	1					
ANR	18601	PrimaryExpression	0		18147	2					
ANR	18602	IfStatement	if ( triple )		18147	12					
ANR	18603	Condition	triple	2094:12:61600:61605	18147	0	True				
ANR	18604	Identifier	triple		18147	0					
ANR	18605	CompoundStatement		75:20:2177:2177	18147	1					
ANR	18606	ExpressionStatement	adjustG = ( image -> comps [ 1 ] . sgnd ? 1 << ( image -> comps [ 1 ] . prec - 1 ) : 0 )	2095:12:61622:61692	18147	0	True				
ANR	18607	AssignmentExpression	adjustG = ( image -> comps [ 1 ] . sgnd ? 1 << ( image -> comps [ 1 ] . prec - 1 ) : 0 )		18147	0		=			
ANR	18608	Identifier	adjustG		18147	0					
ANR	18609	ConditionalExpression	image -> comps [ 1 ] . sgnd ? 1 << ( image -> comps [ 1 ] . prec - 1 ) : 0		18147	1					
ANR	18610	Condition	image -> comps [ 1 ] . sgnd		18147	0					
ANR	18611	MemberAccess	image -> comps [ 1 ] . sgnd		18147	0					
ANR	18612	ArrayIndexing	image -> comps [ 1 ]		18147	0					
ANR	18613	PtrMemberAccess	image -> comps		18147	0					
ANR	18614	Identifier	image		18147	0					
ANR	18615	Identifier	comps		18147	1					
ANR	18616	PrimaryExpression	1		18147	1					
ANR	18617	Identifier	sgnd		18147	1					
ANR	18618	ShiftExpression	1 << ( image -> comps [ 1 ] . prec - 1 )		18147	1		<<			
ANR	18619	PrimaryExpression	1		18147	0					
ANR	18620	AdditiveExpression	image -> comps [ 1 ] . prec - 1		18147	1		-			
ANR	18621	MemberAccess	image -> comps [ 1 ] . prec		18147	0					
ANR	18622	ArrayIndexing	image -> comps [ 1 ]		18147	0					
ANR	18623	PtrMemberAccess	image -> comps		18147	0					
ANR	18624	Identifier	image		18147	0					
ANR	18625	Identifier	comps		18147	1					
ANR	18626	PrimaryExpression	1		18147	1					
ANR	18627	Identifier	prec		18147	1					
ANR	18628	PrimaryExpression	1		18147	1					
ANR	18629	PrimaryExpression	0		18147	2					
ANR	18630	ExpressionStatement	adjustB = ( image -> comps [ 2 ] . sgnd ? 1 << ( image -> comps [ 2 ] . prec - 1 ) : 0 )	2096:12:61706:61776	18147	1	True				
ANR	18631	AssignmentExpression	adjustB = ( image -> comps [ 2 ] . sgnd ? 1 << ( image -> comps [ 2 ] . prec - 1 ) : 0 )		18147	0		=			
ANR	18632	Identifier	adjustB		18147	0					
ANR	18633	ConditionalExpression	image -> comps [ 2 ] . sgnd ? 1 << ( image -> comps [ 2 ] . prec - 1 ) : 0		18147	1					
ANR	18634	Condition	image -> comps [ 2 ] . sgnd		18147	0					
ANR	18635	MemberAccess	image -> comps [ 2 ] . sgnd		18147	0					
ANR	18636	ArrayIndexing	image -> comps [ 2 ]		18147	0					
ANR	18637	PtrMemberAccess	image -> comps		18147	0					
ANR	18638	Identifier	image		18147	0					
ANR	18639	Identifier	comps		18147	1					
ANR	18640	PrimaryExpression	2		18147	1					
ANR	18641	Identifier	sgnd		18147	1					
ANR	18642	ShiftExpression	1 << ( image -> comps [ 2 ] . prec - 1 )		18147	1		<<			
ANR	18643	PrimaryExpression	1		18147	0					
ANR	18644	AdditiveExpression	image -> comps [ 2 ] . prec - 1		18147	1		-			
ANR	18645	MemberAccess	image -> comps [ 2 ] . prec		18147	0					
ANR	18646	ArrayIndexing	image -> comps [ 2 ]		18147	0					
ANR	18647	PtrMemberAccess	image -> comps		18147	0					
ANR	18648	Identifier	image		18147	0					
ANR	18649	Identifier	comps		18147	1					
ANR	18650	PrimaryExpression	2		18147	1					
ANR	18651	Identifier	prec		18147	1					
ANR	18652	PrimaryExpression	1		18147	1					
ANR	18653	PrimaryExpression	0		18147	2					
ANR	18654	ElseStatement	else		18147	0					
ANR	18655	CompoundStatement		78:15:2362:2362	18147	0					
ANR	18656	ExpressionStatement	adjustG = adjustB = 0	2098:12:61807:61828	18147	0	True				
ANR	18657	AssignmentExpression	adjustG = adjustB = 0		18147	0		=			
ANR	18658	Identifier	adjustG		18147	0					
ANR	18659	AssignmentExpression	adjustB = 0		18147	1		=			
ANR	18660	Identifier	adjustB		18147	0					
ANR	18661	PrimaryExpression	0		18147	1					
ANR	18662	ForStatement	for ( i = 0 ; i < wr * hr ; ++ i )		18147	13					
ANR	18663	ForInit	i = 0 ;	2101:13:61854:61859	18147	0	True				
ANR	18664	AssignmentExpression	i = 0		18147	0		=			
ANR	18665	Identifier	i		18147	0					
ANR	18666	PrimaryExpression	0		18147	1					
ANR	18667	Condition	i < wr * hr	2101:20:61861:61871	18147	1	True				
ANR	18668	RelationalExpression	i < wr * hr		18147	0		<			
ANR	18669	Identifier	i		18147	0					
ANR	18670	MultiplicativeExpression	wr * hr		18147	1		*			
ANR	18671	Identifier	wr		18147	0					
ANR	18672	Identifier	hr		18147	1					
ANR	18673	UnaryExpression	++ i	2101:33:61874:61876	18147	2	True				
ANR	18674	IncDec	++		18147	0					
ANR	18675	Identifier	i		18147	1					
ANR	18676	CompoundStatement		82:38:2448:2448	18147	3					
ANR	18677	IfStatement	if ( two )		18147	0					
ANR	18678	Condition	two	2102:16:61897:61899	18147	0	True				
ANR	18679	Identifier	two		18147	0					
ANR	18680	CompoundStatement		83:21:2471:2471	18147	1					
ANR	18681	ExpressionStatement	v = * red + adjustR	2103:16:61920:61938	18147	0	True				
ANR	18682	AssignmentExpression	v = * red + adjustR		18147	0		=			
ANR	18683	Identifier	v		18147	0					
ANR	18684	AdditiveExpression	* red + adjustR		18147	1		+			
ANR	18685	UnaryOperationExpression	* red		18147	0					
ANR	18686	UnaryOperator	*		18147	0					
ANR	18687	Identifier	red		18147	1					
ANR	18688	Identifier	adjustR		18147	1					
ANR	18689	ExpressionStatement	++ red	2104:16:61956:61961	18147	1	True				
ANR	18690	UnaryExpression	++ red		18147	0					
ANR	18691	IncDec	++		18147	0					
ANR	18692	Identifier	red		18147	1					
ANR	18693	IfStatement	if ( v > 65535 )		18147	2					
ANR	18694	Condition	v > 65535	2105:20:61983:61991	18147	0	True				
ANR	18695	RelationalExpression	v > 65535		18147	0		>			
ANR	18696	Identifier	v		18147	0					
ANR	18697	PrimaryExpression	65535		18147	1					
ANR	18698	CompoundStatement		86:31:2563:2563	18147	1					
ANR	18699	ExpressionStatement	v = 65535	2106:20:62016:62025	18147	0	True				
ANR	18700	AssignmentExpression	v = 65535		18147	0		=			
ANR	18701	Identifier	v		18147	0					
ANR	18702	PrimaryExpression	65535		18147	1					
ANR	18703	ElseStatement	else		18147	0					
ANR	18704	IfStatement	if ( v < 0 )		18147	0					
ANR	18705	Condition	v < 0	2107:27:62054:62058	18147	0	True				
ANR	18706	RelationalExpression	v < 0		18147	0		<			
ANR	18707	Identifier	v		18147	0					
ANR	18708	PrimaryExpression	0		18147	1					
ANR	18709	CompoundStatement		88:34:2630:2630	18147	1					
ANR	18710	ExpressionStatement	v = 0	2108:20:62083:62088	18147	0	True				
ANR	18711	AssignmentExpression	v = 0		18147	0		=			
ANR	18712	Identifier	v		18147	0					
ANR	18713	PrimaryExpression	0		18147	1					
ANR	18714	ExpressionStatement	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"	2112:16:62155:62220	18147	3	True				
ANR	18715	CallExpression	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"		18147	0					
ANR	18716	Callee	fprintf		18147	0					
ANR	18717	Identifier	fprintf		18147	0					
ANR	18718	ArgumentList	fdest		18147	1					
ANR	18719	Argument	fdest		18147	0					
ANR	18720	Identifier	fdest		18147	0					
ANR	18721	Argument	"""%c%c"""		18147	1					
ANR	18722	PrimaryExpression	"""%c%c"""		18147	0					
ANR	18723	Argument	( unsigned char ) ( v >> 8 )		18147	2					
ANR	18724	CastExpression	( unsigned char ) ( v >> 8 )		18147	0					
ANR	18725	CastTarget	unsigned char		18147	0					
ANR	18726	ShiftExpression	v >> 8		18147	1		>>			
ANR	18727	Identifier	v		18147	0					
ANR	18728	PrimaryExpression	8		18147	1					
ANR	18729	Argument	( unsigned char ) v		18147	3					
ANR	18730	CastExpression	( unsigned char ) v		18147	0					
ANR	18731	CastTarget	unsigned char		18147	0					
ANR	18732	Identifier	v		18147	1					
ANR	18733	IfStatement	if ( triple )		18147	4					
ANR	18734	Condition	triple	2114:20:62243:62248	18147	0	True				
ANR	18735	Identifier	triple		18147	0					
ANR	18736	CompoundStatement		95:28:2820:2820	18147	1					
ANR	18737	ExpressionStatement	v = * green + adjustG	2115:20:62273:62293	18147	0	True				
ANR	18738	AssignmentExpression	v = * green + adjustG		18147	0		=			
ANR	18739	Identifier	v		18147	0					
ANR	18740	AdditiveExpression	* green + adjustG		18147	1		+			
ANR	18741	UnaryOperationExpression	* green		18147	0					
ANR	18742	UnaryOperator	*		18147	0					
ANR	18743	Identifier	green		18147	1					
ANR	18744	Identifier	adjustG		18147	1					
ANR	18745	ExpressionStatement	++ green	2116:20:62315:62322	18147	1	True				
ANR	18746	UnaryExpression	++ green		18147	0					
ANR	18747	IncDec	++		18147	0					
ANR	18748	Identifier	green		18147	1					
ANR	18749	IfStatement	if ( v > 65535 )		18147	2					
ANR	18750	Condition	v > 65535	2117:24:62348:62356	18147	0	True				
ANR	18751	RelationalExpression	v > 65535		18147	0		>			
ANR	18752	Identifier	v		18147	0					
ANR	18753	PrimaryExpression	65535		18147	1					
ANR	18754	CompoundStatement		98:35:2928:2928	18147	1					
ANR	18755	ExpressionStatement	v = 65535	2118:24:62385:62394	18147	0	True				
ANR	18756	AssignmentExpression	v = 65535		18147	0		=			
ANR	18757	Identifier	v		18147	0					
ANR	18758	PrimaryExpression	65535		18147	1					
ANR	18759	ElseStatement	else		18147	0					
ANR	18760	IfStatement	if ( v < 0 )		18147	0					
ANR	18761	Condition	v < 0	2119:31:62427:62431	18147	0	True				
ANR	18762	RelationalExpression	v < 0		18147	0		<			
ANR	18763	Identifier	v		18147	0					
ANR	18764	PrimaryExpression	0		18147	1					
ANR	18765	CompoundStatement		100:38:3003:3003	18147	1					
ANR	18766	ExpressionStatement	v = 0	2120:24:62460:62465	18147	0	True				
ANR	18767	AssignmentExpression	v = 0		18147	0		=			
ANR	18768	Identifier	v		18147	0					
ANR	18769	PrimaryExpression	0		18147	1					
ANR	18770	ExpressionStatement	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"	2124:20:62544:62609	18147	3	True				
ANR	18771	CallExpression	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"		18147	0					
ANR	18772	Callee	fprintf		18147	0					
ANR	18773	Identifier	fprintf		18147	0					
ANR	18774	ArgumentList	fdest		18147	1					
ANR	18775	Argument	fdest		18147	0					
ANR	18776	Identifier	fdest		18147	0					
ANR	18777	Argument	"""%c%c"""		18147	1					
ANR	18778	PrimaryExpression	"""%c%c"""		18147	0					
ANR	18779	Argument	( unsigned char ) ( v >> 8 )		18147	2					
ANR	18780	CastExpression	( unsigned char ) ( v >> 8 )		18147	0					
ANR	18781	CastTarget	unsigned char		18147	0					
ANR	18782	ShiftExpression	v >> 8		18147	1		>>			
ANR	18783	Identifier	v		18147	0					
ANR	18784	PrimaryExpression	8		18147	1					
ANR	18785	Argument	( unsigned char ) v		18147	3					
ANR	18786	CastExpression	( unsigned char ) v		18147	0					
ANR	18787	CastTarget	unsigned char		18147	0					
ANR	18788	Identifier	v		18147	1					
ANR	18789	ExpressionStatement	v = * blue + adjustB	2126:20:62632:62652	18147	4	True				
ANR	18790	AssignmentExpression	v = * blue + adjustB		18147	0		=			
ANR	18791	Identifier	v		18147	0					
ANR	18792	AdditiveExpression	* blue + adjustB		18147	1		+			
ANR	18793	UnaryOperationExpression	* blue		18147	0					
ANR	18794	UnaryOperator	*		18147	0					
ANR	18795	Identifier	blue		18147	1					
ANR	18796	Identifier	adjustB		18147	1					
ANR	18797	ExpressionStatement	++ blue	2127:20:62674:62680	18147	5	True				
ANR	18798	UnaryExpression	++ blue		18147	0					
ANR	18799	IncDec	++		18147	0					
ANR	18800	Identifier	blue		18147	1					
ANR	18801	IfStatement	if ( v > 65535 )		18147	6					
ANR	18802	Condition	v > 65535	2128:24:62706:62714	18147	0	True				
ANR	18803	RelationalExpression	v > 65535		18147	0		>			
ANR	18804	Identifier	v		18147	0					
ANR	18805	PrimaryExpression	65535		18147	1					
ANR	18806	CompoundStatement		109:35:3286:3286	18147	1					
ANR	18807	ExpressionStatement	v = 65535	2129:24:62743:62752	18147	0	True				
ANR	18808	AssignmentExpression	v = 65535		18147	0		=			
ANR	18809	Identifier	v		18147	0					
ANR	18810	PrimaryExpression	65535		18147	1					
ANR	18811	ElseStatement	else		18147	0					
ANR	18812	IfStatement	if ( v < 0 )		18147	0					
ANR	18813	Condition	v < 0	2130:31:62785:62789	18147	0	True				
ANR	18814	RelationalExpression	v < 0		18147	0		<			
ANR	18815	Identifier	v		18147	0					
ANR	18816	PrimaryExpression	0		18147	1					
ANR	18817	CompoundStatement		111:38:3361:3361	18147	1					
ANR	18818	ExpressionStatement	v = 0	2131:24:62818:62823	18147	0	True				
ANR	18819	AssignmentExpression	v = 0		18147	0		=			
ANR	18820	Identifier	v		18147	0					
ANR	18821	PrimaryExpression	0		18147	1					
ANR	18822	ExpressionStatement	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"	2135:20:62902:62967	18147	7	True				
ANR	18823	CallExpression	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"		18147	0					
ANR	18824	Callee	fprintf		18147	0					
ANR	18825	Identifier	fprintf		18147	0					
ANR	18826	ArgumentList	fdest		18147	1					
ANR	18827	Argument	fdest		18147	0					
ANR	18828	Identifier	fdest		18147	0					
ANR	18829	Argument	"""%c%c"""		18147	1					
ANR	18830	PrimaryExpression	"""%c%c"""		18147	0					
ANR	18831	Argument	( unsigned char ) ( v >> 8 )		18147	2					
ANR	18832	CastExpression	( unsigned char ) ( v >> 8 )		18147	0					
ANR	18833	CastTarget	unsigned char		18147	0					
ANR	18834	ShiftExpression	v >> 8		18147	1		>>			
ANR	18835	Identifier	v		18147	0					
ANR	18836	PrimaryExpression	8		18147	1					
ANR	18837	Argument	( unsigned char ) v		18147	3					
ANR	18838	CastExpression	( unsigned char ) v		18147	0					
ANR	18839	CastTarget	unsigned char		18147	0					
ANR	18840	Identifier	v		18147	1					
ANR	18841	IfStatement	if ( has_alpha )		18147	5					
ANR	18842	Condition	has_alpha	2139:20:63025:63033	18147	0	True				
ANR	18843	Identifier	has_alpha		18147	0					
ANR	18844	CompoundStatement		120:31:3605:3605	18147	1					
ANR	18845	ExpressionStatement	v = * alpha + adjustA	2140:20:63058:63078	18147	0	True				
ANR	18846	AssignmentExpression	v = * alpha + adjustA		18147	0		=			
ANR	18847	Identifier	v		18147	0					
ANR	18848	AdditiveExpression	* alpha + adjustA		18147	1		+			
ANR	18849	UnaryOperationExpression	* alpha		18147	0					
ANR	18850	UnaryOperator	*		18147	0					
ANR	18851	Identifier	alpha		18147	1					
ANR	18852	Identifier	adjustA		18147	1					
ANR	18853	ExpressionStatement	++ alpha	2141:20:63100:63107	18147	1	True				
ANR	18854	UnaryExpression	++ alpha		18147	0					
ANR	18855	IncDec	++		18147	0					
ANR	18856	Identifier	alpha		18147	1					
ANR	18857	IfStatement	if ( v > 65535 )		18147	2					
ANR	18858	Condition	v > 65535	2142:24:63133:63141	18147	0	True				
ANR	18859	RelationalExpression	v > 65535		18147	0		>			
ANR	18860	Identifier	v		18147	0					
ANR	18861	PrimaryExpression	65535		18147	1					
ANR	18862	CompoundStatement		123:35:3713:3713	18147	1					
ANR	18863	ExpressionStatement	v = 65535	2143:24:63170:63179	18147	0	True				
ANR	18864	AssignmentExpression	v = 65535		18147	0		=			
ANR	18865	Identifier	v		18147	0					
ANR	18866	PrimaryExpression	65535		18147	1					
ANR	18867	ElseStatement	else		18147	0					
ANR	18868	IfStatement	if ( v < 0 )		18147	0					
ANR	18869	Condition	v < 0	2144:31:63212:63216	18147	0	True				
ANR	18870	RelationalExpression	v < 0		18147	0		<			
ANR	18871	Identifier	v		18147	0					
ANR	18872	PrimaryExpression	0		18147	1					
ANR	18873	CompoundStatement		125:38:3788:3788	18147	1					
ANR	18874	ExpressionStatement	v = 0	2145:24:63245:63250	18147	0	True				
ANR	18875	AssignmentExpression	v = 0		18147	0		=			
ANR	18876	Identifier	v		18147	0					
ANR	18877	PrimaryExpression	0		18147	1					
ANR	18878	ExpressionStatement	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"	2149:20:63329:63394	18147	3	True				
ANR	18879	CallExpression	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"		18147	0					
ANR	18880	Callee	fprintf		18147	0					
ANR	18881	Identifier	fprintf		18147	0					
ANR	18882	ArgumentList	fdest		18147	1					
ANR	18883	Argument	fdest		18147	0					
ANR	18884	Identifier	fdest		18147	0					
ANR	18885	Argument	"""%c%c"""		18147	1					
ANR	18886	PrimaryExpression	"""%c%c"""		18147	0					
ANR	18887	Argument	( unsigned char ) ( v >> 8 )		18147	2					
ANR	18888	CastExpression	( unsigned char ) ( v >> 8 )		18147	0					
ANR	18889	CastTarget	unsigned char		18147	0					
ANR	18890	ShiftExpression	v >> 8		18147	1		>>			
ANR	18891	Identifier	v		18147	0					
ANR	18892	PrimaryExpression	8		18147	1					
ANR	18893	Argument	( unsigned char ) v		18147	3					
ANR	18894	CastExpression	( unsigned char ) v		18147	0					
ANR	18895	CastTarget	unsigned char		18147	0					
ANR	18896	Identifier	v		18147	1					
ANR	18897	ContinueStatement	continue ;	2151:16:63430:63438	18147	6	True				
ANR	18898	ExpressionStatement	v = * red ++	2156:12:63513:63523	18147	1	True				
ANR	18899	AssignmentExpression	v = * red ++		18147	0		=			
ANR	18900	Identifier	v		18147	0					
ANR	18901	UnaryOperationExpression	* red ++		18147	1					
ANR	18902	UnaryOperator	*		18147	0					
ANR	18903	PostIncDecOperationExpression	red ++		18147	1					
ANR	18904	Identifier	red		18147	0					
ANR	18905	IncDec	++		18147	1					
ANR	18906	IfStatement	if ( v > 255 )		18147	2					
ANR	18907	Condition	v > 255	2157:16:63541:63547	18147	0	True				
ANR	18908	RelationalExpression	v > 255		18147	0		>			
ANR	18909	Identifier	v		18147	0					
ANR	18910	PrimaryExpression	255		18147	1					
ANR	18911	CompoundStatement		138:25:4119:4119	18147	1					
ANR	18912	ExpressionStatement	v = 255	2158:16:63568:63575	18147	0	True				
ANR	18913	AssignmentExpression	v = 255		18147	0		=			
ANR	18914	Identifier	v		18147	0					
ANR	18915	PrimaryExpression	255		18147	1					
ANR	18916	ElseStatement	else		18147	0					
ANR	18917	IfStatement	if ( v < 0 )		18147	0					
ANR	18918	Condition	v < 0	2159:23:63600:63604	18147	0	True				
ANR	18919	RelationalExpression	v < 0		18147	0		<			
ANR	18920	Identifier	v		18147	0					
ANR	18921	PrimaryExpression	0		18147	1					
ANR	18922	CompoundStatement		140:30:4176:4176	18147	1					
ANR	18923	ExpressionStatement	v = 0	2160:16:63625:63630	18147	0	True				
ANR	18924	AssignmentExpression	v = 0		18147	0		=			
ANR	18925	Identifier	v		18147	0					
ANR	18926	PrimaryExpression	0		18147	1					
ANR	18927	ExpressionStatement	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"	2163:12:63659:63697	18147	3	True				
ANR	18928	CallExpression	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"		18147	0					
ANR	18929	Callee	fprintf		18147	0					
ANR	18930	Identifier	fprintf		18147	0					
ANR	18931	ArgumentList	fdest		18147	1					
ANR	18932	Argument	fdest		18147	0					
ANR	18933	Identifier	fdest		18147	0					
ANR	18934	Argument	"""%c"""		18147	1					
ANR	18935	PrimaryExpression	"""%c"""		18147	0					
ANR	18936	Argument	( unsigned char ) v		18147	2					
ANR	18937	CastExpression	( unsigned char ) v		18147	0					
ANR	18938	CastTarget	unsigned char		18147	0					
ANR	18939	Identifier	v		18147	1					
ANR	18940	IfStatement	if ( triple )		18147	4					
ANR	18941	Condition	triple	2164:16:63715:63720	18147	0	True				
ANR	18942	Identifier	triple		18147	0					
ANR	18943	CompoundStatement		145:24:4292:4292	18147	1					
ANR	18944	ExpressionStatement	v = * green ++	2165:16:63741:63753	18147	0	True				
ANR	18945	AssignmentExpression	v = * green ++		18147	0		=			
ANR	18946	Identifier	v		18147	0					
ANR	18947	UnaryOperationExpression	* green ++		18147	1					
ANR	18948	UnaryOperator	*		18147	0					
ANR	18949	PostIncDecOperationExpression	green ++		18147	1					
ANR	18950	Identifier	green		18147	0					
ANR	18951	IncDec	++		18147	1					
ANR	18952	IfStatement	if ( v > 255 )		18147	1					
ANR	18953	Condition	v > 255	2166:20:63775:63781	18147	0	True				
ANR	18954	RelationalExpression	v > 255		18147	0		>			
ANR	18955	Identifier	v		18147	0					
ANR	18956	PrimaryExpression	255		18147	1					
ANR	18957	CompoundStatement		147:29:4353:4353	18147	1					
ANR	18958	ExpressionStatement	v = 255	2167:20:63806:63813	18147	0	True				
ANR	18959	AssignmentExpression	v = 255		18147	0		=			
ANR	18960	Identifier	v		18147	0					
ANR	18961	PrimaryExpression	255		18147	1					
ANR	18962	ElseStatement	else		18147	0					
ANR	18963	IfStatement	if ( v < 0 )		18147	0					
ANR	18964	Condition	v < 0	2168:27:63842:63846	18147	0	True				
ANR	18965	RelationalExpression	v < 0		18147	0		<			
ANR	18966	Identifier	v		18147	0					
ANR	18967	PrimaryExpression	0		18147	1					
ANR	18968	CompoundStatement		149:34:4418:4418	18147	1					
ANR	18969	ExpressionStatement	v = 0	2169:20:63871:63876	18147	0	True				
ANR	18970	AssignmentExpression	v = 0		18147	0		=			
ANR	18971	Identifier	v		18147	0					
ANR	18972	PrimaryExpression	0		18147	1					
ANR	18973	ExpressionStatement	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"	2172:16:63913:63951	18147	2	True				
ANR	18974	CallExpression	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"		18147	0					
ANR	18975	Callee	fprintf		18147	0					
ANR	18976	Identifier	fprintf		18147	0					
ANR	18977	ArgumentList	fdest		18147	1					
ANR	18978	Argument	fdest		18147	0					
ANR	18979	Identifier	fdest		18147	0					
ANR	18980	Argument	"""%c"""		18147	1					
ANR	18981	PrimaryExpression	"""%c"""		18147	0					
ANR	18982	Argument	( unsigned char ) v		18147	2					
ANR	18983	CastExpression	( unsigned char ) v		18147	0					
ANR	18984	CastTarget	unsigned char		18147	0					
ANR	18985	Identifier	v		18147	1					
ANR	18986	ExpressionStatement	v = * blue ++	2173:16:63969:63980	18147	3	True				
ANR	18987	AssignmentExpression	v = * blue ++		18147	0		=			
ANR	18988	Identifier	v		18147	0					
ANR	18989	UnaryOperationExpression	* blue ++		18147	1					
ANR	18990	UnaryOperator	*		18147	0					
ANR	18991	PostIncDecOperationExpression	blue ++		18147	1					
ANR	18992	Identifier	blue		18147	0					
ANR	18993	IncDec	++		18147	1					
ANR	18994	IfStatement	if ( v > 255 )		18147	4					
ANR	18995	Condition	v > 255	2174:20:64002:64008	18147	0	True				
ANR	18996	RelationalExpression	v > 255		18147	0		>			
ANR	18997	Identifier	v		18147	0					
ANR	18998	PrimaryExpression	255		18147	1					
ANR	18999	CompoundStatement		155:29:4580:4580	18147	1					
ANR	19000	ExpressionStatement	v = 255	2175:20:64033:64040	18147	0	True				
ANR	19001	AssignmentExpression	v = 255		18147	0		=			
ANR	19002	Identifier	v		18147	0					
ANR	19003	PrimaryExpression	255		18147	1					
ANR	19004	ElseStatement	else		18147	0					
ANR	19005	IfStatement	if ( v < 0 )		18147	0					
ANR	19006	Condition	v < 0	2176:27:64069:64073	18147	0	True				
ANR	19007	RelationalExpression	v < 0		18147	0		<			
ANR	19008	Identifier	v		18147	0					
ANR	19009	PrimaryExpression	0		18147	1					
ANR	19010	CompoundStatement		157:34:4645:4645	18147	1					
ANR	19011	ExpressionStatement	v = 0	2177:20:64098:64103	18147	0	True				
ANR	19012	AssignmentExpression	v = 0		18147	0		=			
ANR	19013	Identifier	v		18147	0					
ANR	19014	PrimaryExpression	0		18147	1					
ANR	19015	ExpressionStatement	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"	2180:16:64140:64178	18147	5	True				
ANR	19016	CallExpression	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"		18147	0					
ANR	19017	Callee	fprintf		18147	0					
ANR	19018	Identifier	fprintf		18147	0					
ANR	19019	ArgumentList	fdest		18147	1					
ANR	19020	Argument	fdest		18147	0					
ANR	19021	Identifier	fdest		18147	0					
ANR	19022	Argument	"""%c"""		18147	1					
ANR	19023	PrimaryExpression	"""%c"""		18147	0					
ANR	19024	Argument	( unsigned char ) v		18147	2					
ANR	19025	CastExpression	( unsigned char ) v		18147	0					
ANR	19026	CastTarget	unsigned char		18147	0					
ANR	19027	Identifier	v		18147	1					
ANR	19028	IfStatement	if ( has_alpha )		18147	5					
ANR	19029	Condition	has_alpha	2182:16:64210:64218	18147	0	True				
ANR	19030	Identifier	has_alpha		18147	0					
ANR	19031	CompoundStatement		163:27:4790:4790	18147	1					
ANR	19032	ExpressionStatement	v = * alpha ++	2183:16:64239:64251	18147	0	True				
ANR	19033	AssignmentExpression	v = * alpha ++		18147	0		=			
ANR	19034	Identifier	v		18147	0					
ANR	19035	UnaryOperationExpression	* alpha ++		18147	1					
ANR	19036	UnaryOperator	*		18147	0					
ANR	19037	PostIncDecOperationExpression	alpha ++		18147	1					
ANR	19038	Identifier	alpha		18147	0					
ANR	19039	IncDec	++		18147	1					
ANR	19040	IfStatement	if ( v > 255 )		18147	1					
ANR	19041	Condition	v > 255	2184:20:64273:64279	18147	0	True				
ANR	19042	RelationalExpression	v > 255		18147	0		>			
ANR	19043	Identifier	v		18147	0					
ANR	19044	PrimaryExpression	255		18147	1					
ANR	19045	CompoundStatement		165:29:4851:4851	18147	1					
ANR	19046	ExpressionStatement	v = 255	2185:20:64304:64311	18147	0	True				
ANR	19047	AssignmentExpression	v = 255		18147	0		=			
ANR	19048	Identifier	v		18147	0					
ANR	19049	PrimaryExpression	255		18147	1					
ANR	19050	ElseStatement	else		18147	0					
ANR	19051	IfStatement	if ( v < 0 )		18147	0					
ANR	19052	Condition	v < 0	2186:27:64340:64344	18147	0	True				
ANR	19053	RelationalExpression	v < 0		18147	0		<			
ANR	19054	Identifier	v		18147	0					
ANR	19055	PrimaryExpression	0		18147	1					
ANR	19056	CompoundStatement		167:34:4916:4916	18147	1					
ANR	19057	ExpressionStatement	v = 0	2187:20:64369:64374	18147	0	True				
ANR	19058	AssignmentExpression	v = 0		18147	0		=			
ANR	19059	Identifier	v		18147	0					
ANR	19060	PrimaryExpression	0		18147	1					
ANR	19061	ExpressionStatement	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"	2190:16:64411:64449	18147	2	True				
ANR	19062	CallExpression	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"		18147	0					
ANR	19063	Callee	fprintf		18147	0					
ANR	19064	Identifier	fprintf		18147	0					
ANR	19065	ArgumentList	fdest		18147	1					
ANR	19066	Argument	fdest		18147	0					
ANR	19067	Identifier	fdest		18147	0					
ANR	19068	Argument	"""%c"""		18147	1					
ANR	19069	PrimaryExpression	"""%c"""		18147	0					
ANR	19070	Argument	( unsigned char ) v		18147	2					
ANR	19071	CastExpression	( unsigned char ) v		18147	0					
ANR	19072	CastTarget	unsigned char		18147	0					
ANR	19073	Identifier	v		18147	1					
ANR	19074	ExpressionStatement	fclose ( fdest )	2194:8:64498:64511	18147	14	True				
ANR	19075	CallExpression	fclose ( fdest )		18147	0					
ANR	19076	Callee	fclose		18147	0					
ANR	19077	Identifier	fclose		18147	0					
ANR	19078	ArgumentList	fdest		18147	1					
ANR	19079	Argument	fdest		18147	0					
ANR	19080	Identifier	fdest		18147	0					
ANR	19081	ReturnStatement	return 0 ;	2195:8:64521:64529	18147	15	True				
ANR	19082	PrimaryExpression	0		18147	0					
ANR	19083	IfStatement	if ( image -> numcomps > ncomp )		18147	21					
ANR	19084	Condition	image -> numcomps > ncomp	2200:8:64570:64592	18147	0	True				
ANR	19085	RelationalExpression	image -> numcomps > ncomp		18147	0		>			
ANR	19086	PtrMemberAccess	image -> numcomps		18147	0					
ANR	19087	Identifier	image		18147	0					
ANR	19088	Identifier	numcomps		18147	1					
ANR	19089	Identifier	ncomp		18147	1					
ANR	19090	CompoundStatement		181:33:5164:5164	18147	1					
ANR	19091	ExpressionStatement	"fprintf ( stderr , ""WARNING -> [PGM file] Only the first component\\n"" )"	2201:8:64605:64672	18147	0	True				
ANR	19092	CallExpression	"fprintf ( stderr , ""WARNING -> [PGM file] Only the first component\\n"" )"		18147	0					
ANR	19093	Callee	fprintf		18147	0					
ANR	19094	Identifier	fprintf		18147	0					
ANR	19095	ArgumentList	stderr		18147	1					
ANR	19096	Argument	stderr		18147	0					
ANR	19097	Identifier	stderr		18147	0					
ANR	19098	Argument	"""WARNING -> [PGM file] Only the first component\\n"""		18147	1					
ANR	19099	PrimaryExpression	"""WARNING -> [PGM file] Only the first component\\n"""		18147	0					
ANR	19100	ExpressionStatement	"fprintf ( stderr , ""           is written to the file\\n"" )"	2202:8:64682:64736	18147	1	True				
ANR	19101	CallExpression	"fprintf ( stderr , ""           is written to the file\\n"" )"		18147	0					
ANR	19102	Callee	fprintf		18147	0					
ANR	19103	Identifier	fprintf		18147	0					
ANR	19104	ArgumentList	stderr		18147	1					
ANR	19105	Argument	stderr		18147	0					
ANR	19106	Identifier	stderr		18147	0					
ANR	19107	Argument	"""           is written to the file\\n"""		18147	1					
ANR	19108	PrimaryExpression	"""           is written to the file\\n"""		18147	0					
ANR	19109	ExpressionStatement	destname = ( char * ) malloc ( strlen ( outfile ) + 8 )	2204:4:64748:64793	18147	22	True				
ANR	19110	AssignmentExpression	destname = ( char * ) malloc ( strlen ( outfile ) + 8 )		18147	0		=			
ANR	19111	Identifier	destname		18147	0					
ANR	19112	CastExpression	( char * ) malloc ( strlen ( outfile ) + 8 )		18147	1					
ANR	19113	CastTarget	char *		18147	0					
ANR	19114	CallExpression	malloc ( strlen ( outfile ) + 8 )		18147	1					
ANR	19115	Callee	malloc		18147	0					
ANR	19116	Identifier	malloc		18147	0					
ANR	19117	ArgumentList	strlen ( outfile ) + 8		18147	1					
ANR	19118	Argument	strlen ( outfile ) + 8		18147	0					
ANR	19119	AdditiveExpression	strlen ( outfile ) + 8		18147	0		+			
ANR	19120	CallExpression	strlen ( outfile )		18147	0					
ANR	19121	Callee	strlen		18147	0					
ANR	19122	Identifier	strlen		18147	0					
ANR	19123	ArgumentList	outfile		18147	1					
ANR	19124	Argument	outfile		18147	0					
ANR	19125	Identifier	outfile		18147	0					
ANR	19126	PrimaryExpression	8		18147	1					
ANR	19127	IfStatement	if ( destname == NULL )		18147	23					
ANR	19128	Condition	destname == NULL	2205:8:64803:64818	18147	0	True				
ANR	19129	EqualityExpression	destname == NULL		18147	0		==			
ANR	19130	Identifier	destname		18147	0					
ANR	19131	Identifier	NULL		18147	1					
ANR	19132	CompoundStatement		186:26:5390:5390	18147	1					
ANR	19133	ExpressionStatement	"fprintf ( stderr , ""imagetopnm: memory out\\n"" )"	2206:8:64831:64874	18147	0	True				
ANR	19134	CallExpression	"fprintf ( stderr , ""imagetopnm: memory out\\n"" )"		18147	0					
ANR	19135	Callee	fprintf		18147	0					
ANR	19136	Identifier	fprintf		18147	0					
ANR	19137	ArgumentList	stderr		18147	1					
ANR	19138	Argument	stderr		18147	0					
ANR	19139	Identifier	stderr		18147	0					
ANR	19140	Argument	"""imagetopnm: memory out\\n"""		18147	1					
ANR	19141	PrimaryExpression	"""imagetopnm: memory out\\n"""		18147	0					
ANR	19142	ReturnStatement	return 1 ;	2207:8:64884:64892	18147	1	True				
ANR	19143	PrimaryExpression	1		18147	0					
ANR	19144	ForStatement	for ( compno = 0 ; compno < ncomp ; compno ++ )		18147	24					
ANR	19145	ForInit	compno = 0 ;	2209:9:64909:64919	18147	0	True				
ANR	19146	AssignmentExpression	compno = 0		18147	0		=			
ANR	19147	Identifier	compno		18147	0					
ANR	19148	PrimaryExpression	0		18147	1					
ANR	19149	Condition	compno < ncomp	2209:21:64921:64934	18147	1	True				
ANR	19150	RelationalExpression	compno < ncomp		18147	0		<			
ANR	19151	Identifier	compno		18147	0					
ANR	19152	Identifier	ncomp		18147	1					
ANR	19153	PostIncDecOperationExpression	compno ++	2209:37:64937:64944	18147	2	True				
ANR	19154	Identifier	compno		18147	0					
ANR	19155	IncDec	++		18147	1					
ANR	19156	CompoundStatement		190:47:5516:5516	18147	3					
ANR	19157	IfStatement	if ( ncomp > 1 )		18147	0					
ANR	19158	Condition	ncomp > 1	2210:12:64961:64969	18147	0	True				
ANR	19159	RelationalExpression	ncomp > 1		18147	0		>			
ANR	19160	Identifier	ncomp		18147	0					
ANR	19161	PrimaryExpression	1		18147	1					
ANR	19162	CompoundStatement		194:12:5665:5695	18147	1					
ANR	19163	IdentifierDeclStatement	const size_t olen = strlen ( outfile ) ;	2212:12:65047:65082	18147	0	True				
ANR	19164	IdentifierDecl	olen = strlen ( outfile )		18147	0					
ANR	19165	IdentifierDeclType	const size_t		18147	0					
ANR	19166	Identifier	olen		18147	1					
ANR	19167	AssignmentExpression	olen = strlen ( outfile )		18147	2		=			
ANR	19168	Identifier	olen		18147	0					
ANR	19169	CallExpression	strlen ( outfile )		18147	1					
ANR	19170	Callee	strlen		18147	0					
ANR	19171	Identifier	strlen		18147	0					
ANR	19172	ArgumentList	outfile		18147	1					
ANR	19173	Argument	outfile		18147	0					
ANR	19174	Identifier	outfile		18147	0					
ANR	19175	IdentifierDeclStatement	const size_t dotpos = olen - 4 ;	2213:12:65096:65126	18147	1	True				
ANR	19176	IdentifierDecl	dotpos = olen - 4		18147	0					
ANR	19177	IdentifierDeclType	const size_t		18147	0					
ANR	19178	Identifier	dotpos		18147	1					
ANR	19179	AssignmentExpression	dotpos = olen - 4		18147	2		=			
ANR	19180	Identifier	dotpos		18147	0					
ANR	19181	AdditiveExpression	olen - 4		18147	1		-			
ANR	19182	Identifier	olen		18147	0					
ANR	19183	PrimaryExpression	4		18147	1					
ANR	19184	ExpressionStatement	"strncpy ( destname , outfile , dotpos )"	2215:12:65141:65175	18147	2	True				
ANR	19185	CallExpression	"strncpy ( destname , outfile , dotpos )"		18147	0					
ANR	19186	Callee	strncpy		18147	0					
ANR	19187	Identifier	strncpy		18147	0					
ANR	19188	ArgumentList	destname		18147	1					
ANR	19189	Argument	destname		18147	0					
ANR	19190	Identifier	destname		18147	0					
ANR	19191	Argument	outfile		18147	1					
ANR	19192	Identifier	outfile		18147	0					
ANR	19193	Argument	dotpos		18147	2					
ANR	19194	Identifier	dotpos		18147	0					
ANR	19195	ExpressionStatement	"sprintf ( destname + dotpos , ""_%u.pgm"" , compno )"	2216:12:65189:65234	18147	3	True				
ANR	19196	CallExpression	"sprintf ( destname + dotpos , ""_%u.pgm"" , compno )"		18147	0					
ANR	19197	Callee	sprintf		18147	0					
ANR	19198	Identifier	sprintf		18147	0					
ANR	19199	ArgumentList	destname + dotpos		18147	1					
ANR	19200	Argument	destname + dotpos		18147	0					
ANR	19201	AdditiveExpression	destname + dotpos		18147	0		+			
ANR	19202	Identifier	destname		18147	0					
ANR	19203	Identifier	dotpos		18147	1					
ANR	19204	Argument	"""_%u.pgm"""		18147	1					
ANR	19205	PrimaryExpression	"""_%u.pgm"""		18147	0					
ANR	19206	Argument	compno		18147	2					
ANR	19207	Identifier	compno		18147	0					
ANR	19208	ElseStatement	else		18147	0					
ANR	19209	CompoundStatement		198:15:5820:5820	18147	0					
ANR	19210	ExpressionStatement	"sprintf ( destname , ""%s"" , outfile )"	2218:12:65265:65297	18147	0	True				
ANR	19211	CallExpression	"sprintf ( destname , ""%s"" , outfile )"		18147	0					
ANR	19212	Callee	sprintf		18147	0					
ANR	19213	Identifier	sprintf		18147	0					
ANR	19214	ArgumentList	destname		18147	1					
ANR	19215	Argument	destname		18147	0					
ANR	19216	Identifier	destname		18147	0					
ANR	19217	Argument	"""%s"""		18147	1					
ANR	19218	PrimaryExpression	"""%s"""		18147	0					
ANR	19219	Argument	outfile		18147	2					
ANR	19220	Identifier	outfile		18147	0					
ANR	19221	ExpressionStatement	"fdest = fopen ( destname , ""wb"" )"	2221:8:65318:65347	18147	1	True				
ANR	19222	AssignmentExpression	"fdest = fopen ( destname , ""wb"" )"		18147	0		=			
ANR	19223	Identifier	fdest		18147	0					
ANR	19224	CallExpression	"fopen ( destname , ""wb"" )"		18147	1					
ANR	19225	Callee	fopen		18147	0					
ANR	19226	Identifier	fopen		18147	0					
ANR	19227	ArgumentList	destname		18147	1					
ANR	19228	Argument	destname		18147	0					
ANR	19229	Identifier	destname		18147	0					
ANR	19230	Argument	"""wb"""		18147	1					
ANR	19231	PrimaryExpression	"""wb"""		18147	0					
ANR	19232	IfStatement	if ( ! fdest )		18147	2					
ANR	19233	Condition	! fdest	2222:12:65361:65366	18147	0	True				
ANR	19234	UnaryOperationExpression	! fdest		18147	0					
ANR	19235	UnaryOperator	!		18147	0					
ANR	19236	Identifier	fdest		18147	1					
ANR	19237	CompoundStatement		203:20:5938:5938	18147	1					
ANR	19238	ExpressionStatement	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , destname )"	2223:12:65383:65452	18147	0	True				
ANR	19239	CallExpression	"fprintf ( stderr , ""ERROR -> failed to open %s for writing\\n"" , destname )"		18147	0					
ANR	19240	Callee	fprintf		18147	0					
ANR	19241	Identifier	fprintf		18147	0					
ANR	19242	ArgumentList	stderr		18147	1					
ANR	19243	Argument	stderr		18147	0					
ANR	19244	Identifier	stderr		18147	0					
ANR	19245	Argument	"""ERROR -> failed to open %s for writing\\n"""		18147	1					
ANR	19246	PrimaryExpression	"""ERROR -> failed to open %s for writing\\n"""		18147	0					
ANR	19247	Argument	destname		18147	2					
ANR	19248	Identifier	destname		18147	0					
ANR	19249	ExpressionStatement	free ( destname )	2224:12:65466:65480	18147	1	True				
ANR	19250	CallExpression	free ( destname )		18147	0					
ANR	19251	Callee	free		18147	0					
ANR	19252	Identifier	free		18147	0					
ANR	19253	ArgumentList	destname		18147	1					
ANR	19254	Argument	destname		18147	0					
ANR	19255	Identifier	destname		18147	0					
ANR	19256	ReturnStatement	return 1 ;	2225:12:65494:65502	18147	2	True				
ANR	19257	PrimaryExpression	1		18147	0					
ANR	19258	ExpressionStatement	wr = ( int ) image -> comps [ compno ] . w	2227:8:65522:65554	18147	3	True				
ANR	19259	AssignmentExpression	wr = ( int ) image -> comps [ compno ] . w		18147	0		=			
ANR	19260	Identifier	wr		18147	0					
ANR	19261	CastExpression	( int ) image -> comps [ compno ] . w		18147	1					
ANR	19262	CastTarget	int		18147	0					
ANR	19263	MemberAccess	image -> comps [ compno ] . w		18147	1					
ANR	19264	ArrayIndexing	image -> comps [ compno ]		18147	0					
ANR	19265	PtrMemberAccess	image -> comps		18147	0					
ANR	19266	Identifier	image		18147	0					
ANR	19267	Identifier	comps		18147	1					
ANR	19268	Identifier	compno		18147	1					
ANR	19269	Identifier	w		18147	1					
ANR	19270	ExpressionStatement	hr = ( int ) image -> comps [ compno ] . h	2228:8:65564:65596	18147	4	True				
ANR	19271	AssignmentExpression	hr = ( int ) image -> comps [ compno ] . h		18147	0		=			
ANR	19272	Identifier	hr		18147	0					
ANR	19273	CastExpression	( int ) image -> comps [ compno ] . h		18147	1					
ANR	19274	CastTarget	int		18147	0					
ANR	19275	MemberAccess	image -> comps [ compno ] . h		18147	1					
ANR	19276	ArrayIndexing	image -> comps [ compno ]		18147	0					
ANR	19277	PtrMemberAccess	image -> comps		18147	0					
ANR	19278	Identifier	image		18147	0					
ANR	19279	Identifier	comps		18147	1					
ANR	19280	Identifier	compno		18147	1					
ANR	19281	Identifier	h		18147	1					
ANR	19282	ExpressionStatement	prec = ( int ) image -> comps [ compno ] . prec	2229:8:65606:65643	18147	5	True				
ANR	19283	AssignmentExpression	prec = ( int ) image -> comps [ compno ] . prec		18147	0		=			
ANR	19284	Identifier	prec		18147	0					
ANR	19285	CastExpression	( int ) image -> comps [ compno ] . prec		18147	1					
ANR	19286	CastTarget	int		18147	0					
ANR	19287	MemberAccess	image -> comps [ compno ] . prec		18147	1					
ANR	19288	ArrayIndexing	image -> comps [ compno ]		18147	0					
ANR	19289	PtrMemberAccess	image -> comps		18147	0					
ANR	19290	Identifier	image		18147	0					
ANR	19291	Identifier	comps		18147	1					
ANR	19292	Identifier	compno		18147	1					
ANR	19293	Identifier	prec		18147	1					
ANR	19294	ExpressionStatement	max = ( 1 << prec ) - 1	2230:8:65653:65674	18147	6	True				
ANR	19295	AssignmentExpression	max = ( 1 << prec ) - 1		18147	0		=			
ANR	19296	Identifier	max		18147	0					
ANR	19297	AdditiveExpression	( 1 << prec ) - 1		18147	1		-			
ANR	19298	ShiftExpression	1 << prec		18147	0		<<			
ANR	19299	PrimaryExpression	1		18147	0					
ANR	19300	Identifier	prec		18147	1					
ANR	19301	PrimaryExpression	1		18147	1					
ANR	19302	ExpressionStatement	"fprintf ( fdest , ""P5\\n#OpenJPEG-%s\\n%d %d\\n%d\\n"" , opj_version ( ) , wr , hr , max )"	2232:8:65685:65776	18147	7	True				
ANR	19303	CallExpression	"fprintf ( fdest , ""P5\\n#OpenJPEG-%s\\n%d %d\\n%d\\n"" , opj_version ( ) , wr , hr , max )"		18147	0					
ANR	19304	Callee	fprintf		18147	0					
ANR	19305	Identifier	fprintf		18147	0					
ANR	19306	ArgumentList	fdest		18147	1					
ANR	19307	Argument	fdest		18147	0					
ANR	19308	Identifier	fdest		18147	0					
ANR	19309	Argument	"""P5\\n#OpenJPEG-%s\\n%d %d\\n%d\\n"""		18147	1					
ANR	19310	PrimaryExpression	"""P5\\n#OpenJPEG-%s\\n%d %d\\n%d\\n"""		18147	0					
ANR	19311	Argument	opj_version ( )		18147	2					
ANR	19312	CallExpression	opj_version ( )		18147	0					
ANR	19313	Callee	opj_version		18147	0					
ANR	19314	Identifier	opj_version		18147	0					
ANR	19315	ArgumentList			18147	1					
ANR	19316	Argument	wr		18147	3					
ANR	19317	Identifier	wr		18147	0					
ANR	19318	Argument	hr		18147	4					
ANR	19319	Identifier	hr		18147	0					
ANR	19320	Argument	max		18147	5					
ANR	19321	Identifier	max		18147	0					
ANR	19322	ExpressionStatement	red = image -> comps [ compno ] . data	2235:8:65787:65818	18147	8	True				
ANR	19323	AssignmentExpression	red = image -> comps [ compno ] . data		18147	0		=			
ANR	19324	Identifier	red		18147	0					
ANR	19325	MemberAccess	image -> comps [ compno ] . data		18147	1					
ANR	19326	ArrayIndexing	image -> comps [ compno ]		18147	0					
ANR	19327	PtrMemberAccess	image -> comps		18147	0					
ANR	19328	Identifier	image		18147	0					
ANR	19329	Identifier	comps		18147	1					
ANR	19330	Identifier	compno		18147	1					
ANR	19331	Identifier	data		18147	1					
ANR	19332	IfStatement	if ( ! red )		18147	9					
ANR	19333	Condition	! red	2236:12:65832:65835	18147	0	True				
ANR	19334	UnaryOperationExpression	! red		18147	0					
ANR	19335	UnaryOperator	!		18147	0					
ANR	19336	Identifier	red		18147	1					
ANR	19337	CompoundStatement		217:18:6407:6407	18147	1					
ANR	19338	ExpressionStatement	fclose ( fdest )	2237:12:65852:65865	18147	0	True				
ANR	19339	CallExpression	fclose ( fdest )		18147	0					
ANR	19340	Callee	fclose		18147	0					
ANR	19341	Identifier	fclose		18147	0					
ANR	19342	ArgumentList	fdest		18147	1					
ANR	19343	Argument	fdest		18147	0					
ANR	19344	Identifier	fdest		18147	0					
ANR	19345	ContinueStatement	continue ;	2238:12:65879:65887	18147	1	True				
ANR	19346	ExpressionStatement	adjustR = ( image -> comps [ compno ] . sgnd ? 1 << ( image -> comps [ compno ] . prec - 1 ) : 0 )	2241:8:65908:66000	18147	10	True				
ANR	19347	AssignmentExpression	adjustR = ( image -> comps [ compno ] . sgnd ? 1 << ( image -> comps [ compno ] . prec - 1 ) : 0 )		18147	0		=			
ANR	19348	Identifier	adjustR		18147	0					
ANR	19349	ConditionalExpression	image -> comps [ compno ] . sgnd ? 1 << ( image -> comps [ compno ] . prec - 1 ) : 0		18147	1					
ANR	19350	Condition	image -> comps [ compno ] . sgnd		18147	0					
ANR	19351	MemberAccess	image -> comps [ compno ] . sgnd		18147	0					
ANR	19352	ArrayIndexing	image -> comps [ compno ]		18147	0					
ANR	19353	PtrMemberAccess	image -> comps		18147	0					
ANR	19354	Identifier	image		18147	0					
ANR	19355	Identifier	comps		18147	1					
ANR	19356	Identifier	compno		18147	1					
ANR	19357	Identifier	sgnd		18147	1					
ANR	19358	ShiftExpression	1 << ( image -> comps [ compno ] . prec - 1 )		18147	1		<<			
ANR	19359	PrimaryExpression	1		18147	0					
ANR	19360	AdditiveExpression	image -> comps [ compno ] . prec - 1		18147	1		-			
ANR	19361	MemberAccess	image -> comps [ compno ] . prec		18147	0					
ANR	19362	ArrayIndexing	image -> comps [ compno ]		18147	0					
ANR	19363	PtrMemberAccess	image -> comps		18147	0					
ANR	19364	Identifier	image		18147	0					
ANR	19365	Identifier	comps		18147	1					
ANR	19366	Identifier	compno		18147	1					
ANR	19367	Identifier	prec		18147	1					
ANR	19368	PrimaryExpression	1		18147	1					
ANR	19369	PrimaryExpression	0		18147	2					
ANR	19370	IfStatement	if ( prec > 8 )		18147	11					
ANR	19371	Condition	prec > 8	2244:12:66015:66022	18147	0	True				
ANR	19372	RelationalExpression	prec > 8		18147	0		>			
ANR	19373	Identifier	prec		18147	0					
ANR	19374	PrimaryExpression	8		18147	1					
ANR	19375	CompoundStatement		225:22:6594:6594	18147	1					
ANR	19376	ForStatement	for ( i = 0 ; i < wr * hr ; i ++ )		18147	0					
ANR	19377	ForInit	i = 0 ;	2245:17:66044:66049	18147	0	True				
ANR	19378	AssignmentExpression	i = 0		18147	0		=			
ANR	19379	Identifier	i		18147	0					
ANR	19380	PrimaryExpression	0		18147	1					
ANR	19381	Condition	i < wr * hr	2245:24:66051:66061	18147	1	True				
ANR	19382	RelationalExpression	i < wr * hr		18147	0		<			
ANR	19383	Identifier	i		18147	0					
ANR	19384	MultiplicativeExpression	wr * hr		18147	1		*			
ANR	19385	Identifier	wr		18147	0					
ANR	19386	Identifier	hr		18147	1					
ANR	19387	PostIncDecOperationExpression	i ++	2245:37:66064:66066	18147	2	True				
ANR	19388	Identifier	i		18147	0					
ANR	19389	IncDec	++		18147	1					
ANR	19390	CompoundStatement		226:42:6638:6638	18147	3					
ANR	19391	ExpressionStatement	v = * red + adjustR	2246:16:66087:66105	18147	0	True				
ANR	19392	AssignmentExpression	v = * red + adjustR		18147	0		=			
ANR	19393	Identifier	v		18147	0					
ANR	19394	AdditiveExpression	* red + adjustR		18147	1		+			
ANR	19395	UnaryOperationExpression	* red		18147	0					
ANR	19396	UnaryOperator	*		18147	0					
ANR	19397	Identifier	red		18147	1					
ANR	19398	Identifier	adjustR		18147	1					
ANR	19399	ExpressionStatement	++ red	2247:16:66123:66128	18147	1	True				
ANR	19400	UnaryExpression	++ red		18147	0					
ANR	19401	IncDec	++		18147	0					
ANR	19402	Identifier	red		18147	1					
ANR	19403	IfStatement	if ( v > 65535 )		18147	2					
ANR	19404	Condition	v > 65535	2248:20:66150:66158	18147	0	True				
ANR	19405	RelationalExpression	v > 65535		18147	0		>			
ANR	19406	Identifier	v		18147	0					
ANR	19407	PrimaryExpression	65535		18147	1					
ANR	19408	CompoundStatement		229:31:6730:6730	18147	1					
ANR	19409	ExpressionStatement	v = 65535	2249:20:66183:66192	18147	0	True				
ANR	19410	AssignmentExpression	v = 65535		18147	0		=			
ANR	19411	Identifier	v		18147	0					
ANR	19412	PrimaryExpression	65535		18147	1					
ANR	19413	ElseStatement	else		18147	0					
ANR	19414	IfStatement	if ( v < 0 )		18147	0					
ANR	19415	Condition	v < 0	2250:27:66221:66225	18147	0	True				
ANR	19416	RelationalExpression	v < 0		18147	0		<			
ANR	19417	Identifier	v		18147	0					
ANR	19418	PrimaryExpression	0		18147	1					
ANR	19419	CompoundStatement		231:34:6797:6797	18147	1					
ANR	19420	ExpressionStatement	v = 0	2251:20:66250:66255	18147	0	True				
ANR	19421	AssignmentExpression	v = 0		18147	0		=			
ANR	19422	Identifier	v		18147	0					
ANR	19423	PrimaryExpression	0		18147	1					
ANR	19424	ExpressionStatement	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"	2255:16:66322:66387	18147	3	True				
ANR	19425	CallExpression	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"		18147	0					
ANR	19426	Callee	fprintf		18147	0					
ANR	19427	Identifier	fprintf		18147	0					
ANR	19428	ArgumentList	fdest		18147	1					
ANR	19429	Argument	fdest		18147	0					
ANR	19430	Identifier	fdest		18147	0					
ANR	19431	Argument	"""%c%c"""		18147	1					
ANR	19432	PrimaryExpression	"""%c%c"""		18147	0					
ANR	19433	Argument	( unsigned char ) ( v >> 8 )		18147	2					
ANR	19434	CastExpression	( unsigned char ) ( v >> 8 )		18147	0					
ANR	19435	CastTarget	unsigned char		18147	0					
ANR	19436	ShiftExpression	v >> 8		18147	1		>>			
ANR	19437	Identifier	v		18147	0					
ANR	19438	PrimaryExpression	8		18147	1					
ANR	19439	Argument	( unsigned char ) v		18147	3					
ANR	19440	CastExpression	( unsigned char ) v		18147	0					
ANR	19441	CastTarget	unsigned char		18147	0					
ANR	19442	Identifier	v		18147	1					
ANR	19443	IfStatement	if ( has_alpha )		18147	4					
ANR	19444	Condition	has_alpha	2257:20:66410:66418	18147	0	True				
ANR	19445	Identifier	has_alpha		18147	0					
ANR	19446	CompoundStatement		238:31:6990:6990	18147	1					
ANR	19447	ExpressionStatement	v = * alpha ++	2258:20:66443:66455	18147	0	True				
ANR	19448	AssignmentExpression	v = * alpha ++		18147	0		=			
ANR	19449	Identifier	v		18147	0					
ANR	19450	UnaryOperationExpression	* alpha ++		18147	1					
ANR	19451	UnaryOperator	*		18147	0					
ANR	19452	PostIncDecOperationExpression	alpha ++		18147	1					
ANR	19453	Identifier	alpha		18147	0					
ANR	19454	IncDec	++		18147	1					
ANR	19455	IfStatement	if ( v > 65535 )		18147	1					
ANR	19456	Condition	v > 65535	2259:24:66481:66489	18147	0	True				
ANR	19457	RelationalExpression	v > 65535		18147	0		>			
ANR	19458	Identifier	v		18147	0					
ANR	19459	PrimaryExpression	65535		18147	1					
ANR	19460	CompoundStatement		240:35:7061:7061	18147	1					
ANR	19461	ExpressionStatement	v = 65535	2260:24:66518:66527	18147	0	True				
ANR	19462	AssignmentExpression	v = 65535		18147	0		=			
ANR	19463	Identifier	v		18147	0					
ANR	19464	PrimaryExpression	65535		18147	1					
ANR	19465	ElseStatement	else		18147	0					
ANR	19466	IfStatement	if ( v < 0 )		18147	0					
ANR	19467	Condition	v < 0	2261:31:66560:66564	18147	0	True				
ANR	19468	RelationalExpression	v < 0		18147	0		<			
ANR	19469	Identifier	v		18147	0					
ANR	19470	PrimaryExpression	0		18147	1					
ANR	19471	CompoundStatement		242:38:7136:7136	18147	1					
ANR	19472	ExpressionStatement	v = 0	2262:24:66593:66598	18147	0	True				
ANR	19473	AssignmentExpression	v = 0		18147	0		=			
ANR	19474	Identifier	v		18147	0					
ANR	19475	PrimaryExpression	0		18147	1					
ANR	19476	ExpressionStatement	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"	2266:20:66677:66742	18147	2	True				
ANR	19477	CallExpression	"fprintf ( fdest , ""%c%c"" , ( unsigned char ) ( v >> 8 ) , ( unsigned char ) v )"		18147	0					
ANR	19478	Callee	fprintf		18147	0					
ANR	19479	Identifier	fprintf		18147	0					
ANR	19480	ArgumentList	fdest		18147	1					
ANR	19481	Argument	fdest		18147	0					
ANR	19482	Identifier	fdest		18147	0					
ANR	19483	Argument	"""%c%c"""		18147	1					
ANR	19484	PrimaryExpression	"""%c%c"""		18147	0					
ANR	19485	Argument	( unsigned char ) ( v >> 8 )		18147	2					
ANR	19486	CastExpression	( unsigned char ) ( v >> 8 )		18147	0					
ANR	19487	CastTarget	unsigned char		18147	0					
ANR	19488	ShiftExpression	v >> 8		18147	1		>>			
ANR	19489	Identifier	v		18147	0					
ANR	19490	PrimaryExpression	8		18147	1					
ANR	19491	Argument	( unsigned char ) v		18147	3					
ANR	19492	CastExpression	( unsigned char ) v		18147	0					
ANR	19493	CastTarget	unsigned char		18147	0					
ANR	19494	Identifier	v		18147	1					
ANR	19495	ElseStatement	else		18147	0					
ANR	19496	CompoundStatement		250:15:7371:7371	18147	0					
ANR	19497	ForStatement	for ( i = 0 ; i < wr * hr ; ++ i )		18147	0					
ANR	19498	ForInit	i = 0 ;	2270:17:66837:66842	18147	0	True				
ANR	19499	AssignmentExpression	i = 0		18147	0		=			
ANR	19500	Identifier	i		18147	0					
ANR	19501	PrimaryExpression	0		18147	1					
ANR	19502	Condition	i < wr * hr	2270:24:66844:66854	18147	1	True				
ANR	19503	RelationalExpression	i < wr * hr		18147	0		<			
ANR	19504	Identifier	i		18147	0					
ANR	19505	MultiplicativeExpression	wr * hr		18147	1		*			
ANR	19506	Identifier	wr		18147	0					
ANR	19507	Identifier	hr		18147	1					
ANR	19508	UnaryExpression	++ i	2270:37:66857:66859	18147	2	True				
ANR	19509	IncDec	++		18147	0					
ANR	19510	Identifier	i		18147	1					
ANR	19511	CompoundStatement		251:42:7431:7431	18147	3					
ANR	19512	ExpressionStatement	v = * red + adjustR	2271:16:66880:66898	18147	0	True				
ANR	19513	AssignmentExpression	v = * red + adjustR		18147	0		=			
ANR	19514	Identifier	v		18147	0					
ANR	19515	AdditiveExpression	* red + adjustR		18147	1		+			
ANR	19516	UnaryOperationExpression	* red		18147	0					
ANR	19517	UnaryOperator	*		18147	0					
ANR	19518	Identifier	red		18147	1					
ANR	19519	Identifier	adjustR		18147	1					
ANR	19520	ExpressionStatement	++ red	2272:16:66916:66921	18147	1	True				
ANR	19521	UnaryExpression	++ red		18147	0					
ANR	19522	IncDec	++		18147	0					
ANR	19523	Identifier	red		18147	1					
ANR	19524	IfStatement	if ( v > 255 )		18147	2					
ANR	19525	Condition	v > 255	2273:20:66943:66949	18147	0	True				
ANR	19526	RelationalExpression	v > 255		18147	0		>			
ANR	19527	Identifier	v		18147	0					
ANR	19528	PrimaryExpression	255		18147	1					
ANR	19529	CompoundStatement		254:29:7521:7521	18147	1					
ANR	19530	ExpressionStatement	v = 255	2274:20:66974:66981	18147	0	True				
ANR	19531	AssignmentExpression	v = 255		18147	0		=			
ANR	19532	Identifier	v		18147	0					
ANR	19533	PrimaryExpression	255		18147	1					
ANR	19534	ElseStatement	else		18147	0					
ANR	19535	IfStatement	if ( v < 0 )		18147	0					
ANR	19536	Condition	v < 0	2275:27:67010:67014	18147	0	True				
ANR	19537	RelationalExpression	v < 0		18147	0		<			
ANR	19538	Identifier	v		18147	0					
ANR	19539	PrimaryExpression	0		18147	1					
ANR	19540	CompoundStatement		256:34:7586:7586	18147	1					
ANR	19541	ExpressionStatement	v = 0	2276:20:67039:67044	18147	0	True				
ANR	19542	AssignmentExpression	v = 0		18147	0		=			
ANR	19543	Identifier	v		18147	0					
ANR	19544	PrimaryExpression	0		18147	1					
ANR	19545	ExpressionStatement	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"	2279:16:67081:67119	18147	3	True				
ANR	19546	CallExpression	"fprintf ( fdest , ""%c"" , ( unsigned char ) v )"		18147	0					
ANR	19547	Callee	fprintf		18147	0					
ANR	19548	Identifier	fprintf		18147	0					
ANR	19549	ArgumentList	fdest		18147	1					
ANR	19550	Argument	fdest		18147	0					
ANR	19551	Identifier	fdest		18147	0					
ANR	19552	Argument	"""%c"""		18147	1					
ANR	19553	PrimaryExpression	"""%c"""		18147	0					
ANR	19554	Argument	( unsigned char ) v		18147	2					
ANR	19555	CastExpression	( unsigned char ) v		18147	0					
ANR	19556	CastTarget	unsigned char		18147	0					
ANR	19557	Identifier	v		18147	1					
ANR	19558	ExpressionStatement	fclose ( fdest )	2282:8:67153:67166	18147	12	True				
ANR	19559	CallExpression	fclose ( fdest )		18147	0					
ANR	19560	Callee	fclose		18147	0					
ANR	19561	Identifier	fclose		18147	0					
ANR	19562	ArgumentList	fdest		18147	1					
ANR	19563	Argument	fdest		18147	0					
ANR	19564	Identifier	fdest		18147	0					
ANR	19565	ExpressionStatement	free ( destname )	2284:4:67196:67210	18147	25	True				
ANR	19566	CallExpression	free ( destname )		18147	0					
ANR	19567	Callee	free		18147	0					
ANR	19568	Identifier	free		18147	0					
ANR	19569	ArgumentList	destname		18147	1					
ANR	19570	Argument	destname		18147	0					
ANR	19571	Identifier	destname		18147	0					
ANR	19572	ReturnStatement	return 0 ;	2286:4:67217:67225	18147	26	True				
ANR	19573	PrimaryExpression	0		18147	0					
ANR	19574	ReturnType	int		18147	1					
ANR	19575	Identifier	imagetopnm		18147	2					
ANR	19576	ParameterList	"opj_image_t * image , const char * outfile , int force_split"		18147	3					
ANR	19577	Parameter	opj_image_t * image	2019:15:59371:59389	18147	0	True				
ANR	19578	ParameterType	opj_image_t *		18147	0					
ANR	19579	Identifier	image		18147	1					
ANR	19580	Parameter	const char * outfile	2019:36:59392:59410	18147	1	True				
ANR	19581	ParameterType	const char *		18147	0					
ANR	19582	Identifier	outfile		18147	1					
ANR	19583	Parameter	int force_split	2019:57:59413:59427	18147	2	True				
ANR	19584	ParameterType	int		18147	0					
ANR	19585	Identifier	force_split		18147	1					
ANR	19586	CFGEntryNode	ENTRY		18147		True				
ANR	19587	CFGExitNode	EXIT		18147		True				
ANR	19588	Symbol	tt		18147						
ANR	19589	Symbol	* alpha		18147						
ANR	19590	Symbol	* green ++		18147						
ANR	19591	Symbol	image -> comps [ compno ] . h		18147						
ANR	19592	Symbol	hr		18147						
ANR	19593	Symbol	image -> comps [ 1 ] . sgnd		18147						
ANR	19594	Symbol	* alpha ++		18147						
ANR	19595	Symbol	image -> comps		18147						
ANR	19596	Symbol	* blue		18147						
ANR	19597	Symbol	image -> comps [ 2 ] . data		18147						
ANR	19598	Symbol	red		18147						
ANR	19599	Symbol	strlen		18147						
ANR	19600	Symbol	prec		18147						
ANR	19601	Symbol	image -> comps [ ncomp - 1 ] . sgnd		18147						
ANR	19602	Symbol	image -> comps [ 2 ] . prec		18147						
ANR	19603	Symbol	tmp		18147						
ANR	19604	Symbol	image -> comps [ 0 ] . h		18147						
ANR	19605	Symbol	* ncomp		18147						
ANR	19606	Symbol	image -> comps [ compno ] . w		18147						
ANR	19607	Symbol	dotpos		18147						
ANR	19608	Symbol	* blue ++		18147						
ANR	19609	Symbol	image		18147						
ANR	19610	Symbol	image -> comps [ compno ] . sgnd		18147						
ANR	19611	Symbol	NULL		18147						
ANR	19612	Symbol	image -> comps [ 2 ] . sgnd		18147						
ANR	19613	Symbol	image -> comps [ 0 ] . w		18147						
ANR	19614	Symbol	stderr		18147						
ANR	19615	Symbol	compno		18147						
ANR	19616	Symbol	* compno		18147						
ANR	19617	Symbol	destname		18147						
ANR	19618	Symbol	triple		18147						
ANR	19619	Symbol	force_split		18147						
ANR	19620	Symbol	are_comps_similar		18147						
ANR	19621	Symbol	image -> comps [ compno ] . data		18147						
ANR	19622	Symbol	image -> comps [ ncomp - 1 ] . data		18147						
ANR	19623	Symbol	image -> comps [ ncomp - 1 ] . prec		18147						
ANR	19624	Symbol	* image		18147						
ANR	19625	Symbol	image -> comps [ compno ] . prec		18147						
ANR	19626	Symbol	ncomp		18147						
ANR	19627	Symbol	* tmp		18147						
ANR	19628	Symbol	fdest		18147						
ANR	19629	Symbol	outfile		18147						
ANR	19630	Symbol	has_alpha		18147						
ANR	19631	Symbol	* green		18147						
ANR	19632	Symbol	two		18147						
ANR	19633	Symbol	adjustR		18147						
ANR	19634	Symbol	* * image		18147						
ANR	19635	Symbol	alpha		18147						
ANR	19636	Symbol	image -> comps [ 0 ] . prec		18147						
ANR	19637	Symbol	image -> comps [ 0 ] . data		18147						
ANR	19638	Symbol	wr		18147						
ANR	19639	Symbol	want_gray		18147						
ANR	19640	Symbol	fails		18147						
ANR	19641	Symbol	* image -> comps		18147						
ANR	19642	Symbol	fopen		18147						
ANR	19643	Symbol	malloc		18147						
ANR	19644	Symbol	green		18147						
ANR	19645	Symbol	max		18147						
ANR	19646	Symbol	opj_version		18147						
ANR	19647	Symbol	i		18147						
ANR	19648	Symbol	image -> numcomps		18147						
ANR	19649	Symbol	olen		18147						
ANR	19650	Symbol	image -> comps [ 0 ] . sgnd		18147						
ANR	19651	Symbol	blue		18147						
ANR	19652	Symbol	adjustG		18147						
ANR	19653	Symbol	image -> comps [ 1 ] . data		18147						
ANR	19654	Symbol	v		18147						
ANR	19655	Symbol	* red		18147						
ANR	19656	Symbol	* red ++		18147						
ANR	19657	Symbol	adjustB		18147						
ANR	19658	Symbol	image -> comps [ 1 ] . prec		18147						
ANR	19659	Symbol	adjustA		18147						
ANR	19660	Function	rawtoimage_common	2294:0:67318:72903							
ANR	19661	FunctionDef	"rawtoimage_common (const char * filename , opj_cparameters_t * parameters , raw_cparameters_t * raw_cp , OPJ_BOOL big_endian)"		19660	0					
ANR	19662	CompoundStatement		2296:0:67495:72903	19660	0					
ANR	19663	IdentifierDeclStatement	int subsampling_dx = parameters -> subsampling_dx ;	2297:4:67501:67548	19660	0	True				
ANR	19664	IdentifierDecl	subsampling_dx = parameters -> subsampling_dx		19660	0					
ANR	19665	IdentifierDeclType	int		19660	0					
ANR	19666	Identifier	subsampling_dx		19660	1					
ANR	19667	AssignmentExpression	subsampling_dx = parameters -> subsampling_dx		19660	2		=			
ANR	19668	Identifier	subsampling_dx		19660	0					
ANR	19669	PtrMemberAccess	parameters -> subsampling_dx		19660	1					
ANR	19670	Identifier	parameters		19660	0					
ANR	19671	Identifier	subsampling_dx		19660	1					
ANR	19672	IdentifierDeclStatement	int subsampling_dy = parameters -> subsampling_dy ;	2298:4:67554:67601	19660	1	True				
ANR	19673	IdentifierDecl	subsampling_dy = parameters -> subsampling_dy		19660	0					
ANR	19674	IdentifierDeclType	int		19660	0					
ANR	19675	Identifier	subsampling_dy		19660	1					
ANR	19676	AssignmentExpression	subsampling_dy = parameters -> subsampling_dy		19660	2		=			
ANR	19677	Identifier	subsampling_dy		19660	0					
ANR	19678	PtrMemberAccess	parameters -> subsampling_dy		19660	1					
ANR	19679	Identifier	parameters		19660	0					
ANR	19680	Identifier	subsampling_dy		19660	1					
ANR	19681	IdentifierDeclStatement	FILE * f = NULL ;	2300:4:67608:67622	19660	2	True				
ANR	19682	IdentifierDecl	* f = NULL		19660	0					
ANR	19683	IdentifierDeclType	FILE *		19660	0					
ANR	19684	Identifier	f		19660	1					
ANR	19685	AssignmentExpression	* f = NULL		19660	2		=			
ANR	19686	Identifier	NULL		19660	0					
ANR	19687	Identifier	NULL		19660	1					
ANR	19688	IdentifierDeclStatement	"int i , compno , numcomps , w , h ;"	2301:4:67628:67657	19660	3	True				
ANR	19689	IdentifierDecl	i		19660	0					
ANR	19690	IdentifierDeclType	int		19660	0					
ANR	19691	Identifier	i		19660	1					
ANR	19692	IdentifierDecl	compno		19660	1					
ANR	19693	IdentifierDeclType	int		19660	0					
ANR	19694	Identifier	compno		19660	1					
ANR	19695	IdentifierDecl	numcomps		19660	2					
ANR	19696	IdentifierDeclType	int		19660	0					
ANR	19697	Identifier	numcomps		19660	1					
ANR	19698	IdentifierDecl	w		19660	3					
ANR	19699	IdentifierDeclType	int		19660	0					
ANR	19700	Identifier	w		19660	1					
ANR	19701	IdentifierDecl	h		19660	4					
ANR	19702	IdentifierDeclType	int		19660	0					
ANR	19703	Identifier	h		19660	1					
ANR	19704	IdentifierDeclStatement	OPJ_COLOR_SPACE color_space ;	2302:4:67663:67690	19660	4	True				
ANR	19705	IdentifierDecl	color_space		19660	0					
ANR	19706	IdentifierDeclType	OPJ_COLOR_SPACE		19660	0					
ANR	19707	Identifier	color_space		19660	1					
ANR	19708	IdentifierDeclStatement	opj_image_cmptparm_t * cmptparm ;	2303:4:67696:67726	19660	5	True				
ANR	19709	IdentifierDecl	* cmptparm		19660	0					
ANR	19710	IdentifierDeclType	opj_image_cmptparm_t *		19660	0					
ANR	19711	Identifier	cmptparm		19660	1					
ANR	19712	IdentifierDeclStatement	opj_image_t * image = NULL ;	2304:4:67732:67758	19660	6	True				
ANR	19713	IdentifierDecl	* image = NULL		19660	0					
ANR	19714	IdentifierDeclType	opj_image_t *		19660	0					
ANR	19715	Identifier	image		19660	1					
ANR	19716	AssignmentExpression	* image = NULL		19660	2		=			
ANR	19717	Identifier	NULL		19660	0					
ANR	19718	Identifier	NULL		19660	1					
ANR	19719	IdentifierDeclStatement	unsigned short ch ;	2305:4:67764:67781	19660	7	True				
ANR	19720	IdentifierDecl	ch		19660	0					
ANR	19721	IdentifierDeclType	unsigned short		19660	0					
ANR	19722	Identifier	ch		19660	1					
ANR	19723	IfStatement	if ( ( ! ( raw_cp -> rawWidth & raw_cp -> rawHeight & raw_cp -> rawComp & raw_cp -> rawBitDepth ) ) == 0 )		19660	8					
ANR	19724	Condition	( ! ( raw_cp -> rawWidth & raw_cp -> rawHeight & raw_cp -> rawComp & raw_cp -> rawBitDepth ) ) == 0	2307:8:67792:67889	19660	0	True				
ANR	19725	EqualityExpression	( ! ( raw_cp -> rawWidth & raw_cp -> rawHeight & raw_cp -> rawComp & raw_cp -> rawBitDepth ) ) == 0		19660	0		==			
ANR	19726	UnaryOperationExpression	! ( raw_cp -> rawWidth & raw_cp -> rawHeight & raw_cp -> rawComp & raw_cp -> rawBitDepth )		19660	0					
ANR	19727	UnaryOperator	!		19660	0					
ANR	19728	BitAndExpression	raw_cp -> rawWidth & raw_cp -> rawHeight & raw_cp -> rawComp & raw_cp -> rawBitDepth		19660	1		&			
ANR	19729	PtrMemberAccess	raw_cp -> rawWidth		19660	0					
ANR	19730	Identifier	raw_cp		19660	0					
ANR	19731	Identifier	rawWidth		19660	1					
ANR	19732	BitAndExpression	raw_cp -> rawHeight & raw_cp -> rawComp & raw_cp -> rawBitDepth		19660	1		&			
ANR	19733	PtrMemberAccess	raw_cp -> rawHeight		19660	0					
ANR	19734	Identifier	raw_cp		19660	0					
ANR	19735	Identifier	rawHeight		19660	1					
ANR	19736	BitAndExpression	raw_cp -> rawComp & raw_cp -> rawBitDepth		19660	1		&			
ANR	19737	PtrMemberAccess	raw_cp -> rawComp		19660	0					
ANR	19738	Identifier	raw_cp		19660	0					
ANR	19739	Identifier	rawComp		19660	1					
ANR	19740	PtrMemberAccess	raw_cp -> rawBitDepth		19660	1					
ANR	19741	Identifier	raw_cp		19660	0					
ANR	19742	Identifier	rawBitDepth		19660	1					
ANR	19743	PrimaryExpression	0		19660	1					
ANR	19744	CompoundStatement		13:40:396:396	19660	1					
ANR	19745	ExpressionStatement	"fprintf ( stderr , ""\\nError: invalid raw image parameters\\n"" )"	2309:8:67902:67960	19660	0	True				
ANR	19746	CallExpression	"fprintf ( stderr , ""\\nError: invalid raw image parameters\\n"" )"		19660	0					
ANR	19747	Callee	fprintf		19660	0					
ANR	19748	Identifier	fprintf		19660	0					
ANR	19749	ArgumentList	stderr		19660	1					
ANR	19750	Argument	stderr		19660	0					
ANR	19751	Identifier	stderr		19660	0					
ANR	19752	Argument	"""\\nError: invalid raw image parameters\\n"""		19660	1					
ANR	19753	PrimaryExpression	"""\\nError: invalid raw image parameters\\n"""		19660	0					
ANR	19754	ExpressionStatement	"fprintf ( stderr , ""Please use the Format option -F:\\n"" )"	2310:8:67970:68023	19660	1	True				
ANR	19755	CallExpression	"fprintf ( stderr , ""Please use the Format option -F:\\n"" )"		19660	0					
ANR	19756	Callee	fprintf		19660	0					
ANR	19757	Identifier	fprintf		19660	0					
ANR	19758	ArgumentList	stderr		19660	1					
ANR	19759	Argument	stderr		19660	0					
ANR	19760	Identifier	stderr		19660	0					
ANR	19761	Argument	"""Please use the Format option -F:\\n"""		19660	1					
ANR	19762	PrimaryExpression	"""Please use the Format option -F:\\n"""		19660	0					
ANR	19763	ExpressionStatement	"fprintf ( stderr , ""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"" )"	2311:8:68033:68142	19660	2	True				
ANR	19764	CallExpression	"fprintf ( stderr , ""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"" )"		19660	0					
ANR	19765	Callee	fprintf		19660	0					
ANR	19766	Identifier	fprintf		19660	0					
ANR	19767	ArgumentList	stderr		19660	1					
ANR	19768	Argument	stderr		19660	0					
ANR	19769	Identifier	stderr		19660	0					
ANR	19770	Argument	"""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"""		19660	1					
ANR	19771	PrimaryExpression	"""-F <width>,<height>,<ncomp>,<bitdepth>,{s,u}@<dx1>x<dy1>:...:<dxn>x<dyn>\\n"""		19660	0					
ANR	19772	ExpressionStatement	"fprintf ( stderr , ""If subsampling is omitted, 1x1 is assumed for all components\\n"" )"	2313:8:68152:68249	19660	3	True				
ANR	19773	CallExpression	"fprintf ( stderr , ""If subsampling is omitted, 1x1 is assumed for all components\\n"" )"		19660	0					
ANR	19774	Callee	fprintf		19660	0					
ANR	19775	Identifier	fprintf		19660	0					
ANR	19776	ArgumentList	stderr		19660	1					
ANR	19777	Argument	stderr		19660	0					
ANR	19778	Identifier	stderr		19660	0					
ANR	19779	Argument	"""If subsampling is omitted, 1x1 is assumed for all components\\n"""		19660	1					
ANR	19780	PrimaryExpression	"""If subsampling is omitted, 1x1 is assumed for all components\\n"""		19660	0					
ANR	19781	ExpressionStatement	"fprintf ( stderr , ""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"" )"	2315:8:68259:68359	19660	4	True				
ANR	19782	CallExpression	"fprintf ( stderr , ""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"" )"		19660	0					
ANR	19783	Callee	fprintf		19660	0					
ANR	19784	Identifier	fprintf		19660	0					
ANR	19785	ArgumentList	stderr		19660	1					
ANR	19786	Argument	stderr		19660	0					
ANR	19787	Identifier	stderr		19660	0					
ANR	19788	Argument	"""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"""		19660	1					
ANR	19789	PrimaryExpression	"""Example: -i image.raw -o image.j2k -F 512,512,3,8,u@1x1:2x2:2x2\\n"""		19660	0					
ANR	19790	ExpressionStatement	"fprintf ( stderr , ""         for raw 512x512 image with 4:2:0 subsampling\\n"" )"	2317:8:68369:68443	19660	5	True				
ANR	19791	CallExpression	"fprintf ( stderr , ""         for raw 512x512 image with 4:2:0 subsampling\\n"" )"		19660	0					
ANR	19792	Callee	fprintf		19660	0					
ANR	19793	Identifier	fprintf		19660	0					
ANR	19794	ArgumentList	stderr		19660	1					
ANR	19795	Argument	stderr		19660	0					
ANR	19796	Identifier	stderr		19660	0					
ANR	19797	Argument	"""         for raw 512x512 image with 4:2:0 subsampling\\n"""		19660	1					
ANR	19798	PrimaryExpression	"""         for raw 512x512 image with 4:2:0 subsampling\\n"""		19660	0					
ANR	19799	ExpressionStatement	"fprintf ( stderr , ""Aborting.\\n"" )"	2318:8:68453:68483	19660	6	True				
ANR	19800	CallExpression	"fprintf ( stderr , ""Aborting.\\n"" )"		19660	0					
ANR	19801	Callee	fprintf		19660	0					
ANR	19802	Identifier	fprintf		19660	0					
ANR	19803	ArgumentList	stderr		19660	1					
ANR	19804	Argument	stderr		19660	0					
ANR	19805	Identifier	stderr		19660	0					
ANR	19806	Argument	"""Aborting.\\n"""		19660	1					
ANR	19807	PrimaryExpression	"""Aborting.\\n"""		19660	0					
ANR	19808	ReturnStatement	return NULL ;	2319:8:68493:68504	19660	7	True				
ANR	19809	Identifier	NULL		19660	0					
ANR	19810	ExpressionStatement	"f = fopen ( filename , ""rb"" )"	2322:4:68517:68542	19660	9	True				
ANR	19811	AssignmentExpression	"f = fopen ( filename , ""rb"" )"		19660	0		=			
ANR	19812	Identifier	f		19660	0					
ANR	19813	CallExpression	"fopen ( filename , ""rb"" )"		19660	1					
ANR	19814	Callee	fopen		19660	0					
ANR	19815	Identifier	fopen		19660	0					
ANR	19816	ArgumentList	filename		19660	1					
ANR	19817	Argument	filename		19660	0					
ANR	19818	Identifier	filename		19660	0					
ANR	19819	Argument	"""rb"""		19660	1					
ANR	19820	PrimaryExpression	"""rb"""		19660	0					
ANR	19821	IfStatement	if ( ! f )		19660	10					
ANR	19822	Condition	! f	2323:8:68552:68553	19660	0	True				
ANR	19823	UnaryOperationExpression	! f		19660	0					
ANR	19824	UnaryOperator	!		19660	0					
ANR	19825	Identifier	f		19660	1					
ANR	19826	CompoundStatement		28:12:1060:1060	19660	1					
ANR	19827	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s for reading !!\\n"" , filename )"	2324:8:68566:68629	19660	0	True				
ANR	19828	CallExpression	"fprintf ( stderr , ""Failed to open %s for reading !!\\n"" , filename )"		19660	0					
ANR	19829	Callee	fprintf		19660	0					
ANR	19830	Identifier	fprintf		19660	0					
ANR	19831	ArgumentList	stderr		19660	1					
ANR	19832	Argument	stderr		19660	0					
ANR	19833	Identifier	stderr		19660	0					
ANR	19834	Argument	"""Failed to open %s for reading !!\\n"""		19660	1					
ANR	19835	PrimaryExpression	"""Failed to open %s for reading !!\\n"""		19660	0					
ANR	19836	Argument	filename		19660	2					
ANR	19837	Identifier	filename		19660	0					
ANR	19838	ExpressionStatement	"fprintf ( stderr , ""Aborting\\n"" )"	2325:8:68639:68668	19660	1	True				
ANR	19839	CallExpression	"fprintf ( stderr , ""Aborting\\n"" )"		19660	0					
ANR	19840	Callee	fprintf		19660	0					
ANR	19841	Identifier	fprintf		19660	0					
ANR	19842	ArgumentList	stderr		19660	1					
ANR	19843	Argument	stderr		19660	0					
ANR	19844	Identifier	stderr		19660	0					
ANR	19845	Argument	"""Aborting\\n"""		19660	1					
ANR	19846	PrimaryExpression	"""Aborting\\n"""		19660	0					
ANR	19847	ReturnStatement	return NULL ;	2326:8:68678:68689	19660	2	True				
ANR	19848	Identifier	NULL		19660	0					
ANR	19849	ExpressionStatement	numcomps = raw_cp -> rawComp	2328:4:68701:68727	19660	11	True				
ANR	19850	AssignmentExpression	numcomps = raw_cp -> rawComp		19660	0		=			
ANR	19851	Identifier	numcomps		19660	0					
ANR	19852	PtrMemberAccess	raw_cp -> rawComp		19660	1					
ANR	19853	Identifier	raw_cp		19660	0					
ANR	19854	Identifier	rawComp		19660	1					
ANR	19855	IfStatement	if ( numcomps == 1 )		19660	12					
ANR	19856	Condition	numcomps == 1	2331:8:68827:68839	19660	0	True				
ANR	19857	EqualityExpression	numcomps == 1		19660	0		==			
ANR	19858	Identifier	numcomps		19660	0					
ANR	19859	PrimaryExpression	1		19660	1					
ANR	19860	CompoundStatement		36:23:1346:1346	19660	1					
ANR	19861	ExpressionStatement	color_space = OPJ_CLRSPC_GRAY	2332:8:68852:68881	19660	0	True				
ANR	19862	AssignmentExpression	color_space = OPJ_CLRSPC_GRAY		19660	0		=			
ANR	19863	Identifier	color_space		19660	0					
ANR	19864	Identifier	OPJ_CLRSPC_GRAY		19660	1					
ANR	19865	ElseStatement	else		19660	0					
ANR	19866	IfStatement	if ( ( numcomps >= 3 ) && ( parameters -> tcp_mct == 0 ) )		19660	0					
ANR	19867	Condition	( numcomps >= 3 ) && ( parameters -> tcp_mct == 0 )	2333:15:68898:68942	19660	0	True				
ANR	19868	AndExpression	( numcomps >= 3 ) && ( parameters -> tcp_mct == 0 )		19660	0		&&			
ANR	19869	RelationalExpression	numcomps >= 3		19660	0		>=			
ANR	19870	Identifier	numcomps		19660	0					
ANR	19871	PrimaryExpression	3		19660	1					
ANR	19872	EqualityExpression	parameters -> tcp_mct == 0		19660	1		==			
ANR	19873	PtrMemberAccess	parameters -> tcp_mct		19660	0					
ANR	19874	Identifier	parameters		19660	0					
ANR	19875	Identifier	tcp_mct		19660	1					
ANR	19876	PrimaryExpression	0		19660	1					
ANR	19877	CompoundStatement		38:62:1449:1449	19660	1					
ANR	19878	ExpressionStatement	color_space = OPJ_CLRSPC_SYCC	2334:8:68955:68984	19660	0	True				
ANR	19879	AssignmentExpression	color_space = OPJ_CLRSPC_SYCC		19660	0		=			
ANR	19880	Identifier	color_space		19660	0					
ANR	19881	Identifier	OPJ_CLRSPC_SYCC		19660	1					
ANR	19882	ElseStatement	else		19660	0					
ANR	19883	IfStatement	if ( ( numcomps >= 3 ) && ( parameters -> tcp_mct != 2 ) )		19660	0					
ANR	19884	Condition	( numcomps >= 3 ) && ( parameters -> tcp_mct != 2 )	2335:15:69001:69045	19660	0	True				
ANR	19885	AndExpression	( numcomps >= 3 ) && ( parameters -> tcp_mct != 2 )		19660	0		&&			
ANR	19886	RelationalExpression	numcomps >= 3		19660	0		>=			
ANR	19887	Identifier	numcomps		19660	0					
ANR	19888	PrimaryExpression	3		19660	1					
ANR	19889	EqualityExpression	parameters -> tcp_mct != 2		19660	1		!=			
ANR	19890	PtrMemberAccess	parameters -> tcp_mct		19660	0					
ANR	19891	Identifier	parameters		19660	0					
ANR	19892	Identifier	tcp_mct		19660	1					
ANR	19893	PrimaryExpression	2		19660	1					
ANR	19894	CompoundStatement		40:62:1552:1552	19660	1					
ANR	19895	ExpressionStatement	color_space = OPJ_CLRSPC_SRGB	2336:8:69058:69087	19660	0	True				
ANR	19896	AssignmentExpression	color_space = OPJ_CLRSPC_SRGB		19660	0		=			
ANR	19897	Identifier	color_space		19660	0					
ANR	19898	Identifier	OPJ_CLRSPC_SRGB		19660	1					
ANR	19899	ElseStatement	else		19660	0					
ANR	19900	CompoundStatement		42:11:1604:1604	19660	0					
ANR	19901	ExpressionStatement	color_space = OPJ_CLRSPC_UNKNOWN	2338:8:69110:69142	19660	0	True				
ANR	19902	AssignmentExpression	color_space = OPJ_CLRSPC_UNKNOWN		19660	0		=			
ANR	19903	Identifier	color_space		19660	0					
ANR	19904	Identifier	OPJ_CLRSPC_UNKNOWN		19660	1					
ANR	19905	ExpressionStatement	w = raw_cp -> rawWidth	2340:4:69154:69174	19660	13	True				
ANR	19906	AssignmentExpression	w = raw_cp -> rawWidth		19660	0		=			
ANR	19907	Identifier	w		19660	0					
ANR	19908	PtrMemberAccess	raw_cp -> rawWidth		19660	1					
ANR	19909	Identifier	raw_cp		19660	0					
ANR	19910	Identifier	rawWidth		19660	1					
ANR	19911	ExpressionStatement	h = raw_cp -> rawHeight	2341:4:69180:69201	19660	14	True				
ANR	19912	AssignmentExpression	h = raw_cp -> rawHeight		19660	0		=			
ANR	19913	Identifier	h		19660	0					
ANR	19914	PtrMemberAccess	raw_cp -> rawHeight		19660	1					
ANR	19915	Identifier	raw_cp		19660	0					
ANR	19916	Identifier	rawHeight		19660	1					
ANR	19917	ExpressionStatement	"cmptparm = ( opj_image_cmptparm_t * ) calloc ( ( OPJ_UINT32 ) numcomps , sizeof ( opj_image_cmptparm_t ) )"	2342:4:69207:69315	19660	15	True				
ANR	19918	AssignmentExpression	"cmptparm = ( opj_image_cmptparm_t * ) calloc ( ( OPJ_UINT32 ) numcomps , sizeof ( opj_image_cmptparm_t ) )"		19660	0		=			
ANR	19919	Identifier	cmptparm		19660	0					
ANR	19920	CastExpression	"( opj_image_cmptparm_t * ) calloc ( ( OPJ_UINT32 ) numcomps , sizeof ( opj_image_cmptparm_t ) )"		19660	1					
ANR	19921	CastTarget	opj_image_cmptparm_t *		19660	0					
ANR	19922	CallExpression	"calloc ( ( OPJ_UINT32 ) numcomps , sizeof ( opj_image_cmptparm_t ) )"		19660	1					
ANR	19923	Callee	calloc		19660	0					
ANR	19924	Identifier	calloc		19660	0					
ANR	19925	ArgumentList	( OPJ_UINT32 ) numcomps		19660	1					
ANR	19926	Argument	( OPJ_UINT32 ) numcomps		19660	0					
ANR	19927	CastExpression	( OPJ_UINT32 ) numcomps		19660	0					
ANR	19928	CastTarget	OPJ_UINT32		19660	0					
ANR	19929	Identifier	numcomps		19660	1					
ANR	19930	Argument	sizeof ( opj_image_cmptparm_t )		19660	1					
ANR	19931	SizeofExpression	sizeof ( opj_image_cmptparm_t )		19660	0					
ANR	19932	Sizeof	sizeof		19660	0					
ANR	19933	SizeofOperand	opj_image_cmptparm_t		19660	1					
ANR	19934	IfStatement	if ( ! cmptparm )		19660	16					
ANR	19935	Condition	! cmptparm	2344:8:69325:69333	19660	0	True				
ANR	19936	UnaryOperationExpression	! cmptparm		19660	0					
ANR	19937	UnaryOperator	!		19660	0					
ANR	19938	Identifier	cmptparm		19660	1					
ANR	19939	CompoundStatement		49:19:1840:1840	19660	1					
ANR	19940	ExpressionStatement	"fprintf ( stderr , ""Failed to allocate image components parameters !!\\n"" )"	2345:8:69346:69416	19660	0	True				
ANR	19941	CallExpression	"fprintf ( stderr , ""Failed to allocate image components parameters !!\\n"" )"		19660	0					
ANR	19942	Callee	fprintf		19660	0					
ANR	19943	Identifier	fprintf		19660	0					
ANR	19944	ArgumentList	stderr		19660	1					
ANR	19945	Argument	stderr		19660	0					
ANR	19946	Identifier	stderr		19660	0					
ANR	19947	Argument	"""Failed to allocate image components parameters !!\\n"""		19660	1					
ANR	19948	PrimaryExpression	"""Failed to allocate image components parameters !!\\n"""		19660	0					
ANR	19949	ExpressionStatement	"fprintf ( stderr , ""Aborting\\n"" )"	2346:8:69426:69455	19660	1	True				
ANR	19950	CallExpression	"fprintf ( stderr , ""Aborting\\n"" )"		19660	0					
ANR	19951	Callee	fprintf		19660	0					
ANR	19952	Identifier	fprintf		19660	0					
ANR	19953	ArgumentList	stderr		19660	1					
ANR	19954	Argument	stderr		19660	0					
ANR	19955	Identifier	stderr		19660	0					
ANR	19956	Argument	"""Aborting\\n"""		19660	1					
ANR	19957	PrimaryExpression	"""Aborting\\n"""		19660	0					
ANR	19958	ExpressionStatement	fclose ( f )	2347:8:69465:69474	19660	2	True				
ANR	19959	CallExpression	fclose ( f )		19660	0					
ANR	19960	Callee	fclose		19660	0					
ANR	19961	Identifier	fclose		19660	0					
ANR	19962	ArgumentList	f		19660	1					
ANR	19963	Argument	f		19660	0					
ANR	19964	Identifier	f		19660	0					
ANR	19965	ReturnStatement	return NULL ;	2348:8:69484:69495	19660	3	True				
ANR	19966	Identifier	NULL		19660	0					
ANR	19967	ForStatement	for ( i = 0 ; i < numcomps ; i ++ )		19660	17					
ANR	19968	ForInit	i = 0 ;	2351:9:69550:69555	19660	0	True				
ANR	19969	AssignmentExpression	i = 0		19660	0		=			
ANR	19970	Identifier	i		19660	0					
ANR	19971	PrimaryExpression	0		19660	1					
ANR	19972	Condition	i < numcomps	2351:16:69557:69568	19660	1	True				
ANR	19973	RelationalExpression	i < numcomps		19660	0		<			
ANR	19974	Identifier	i		19660	0					
ANR	19975	Identifier	numcomps		19660	1					
ANR	19976	PostIncDecOperationExpression	i ++	2351:30:69571:69573	19660	2	True				
ANR	19977	Identifier	i		19660	0					
ANR	19978	IncDec	++		19660	1					
ANR	19979	CompoundStatement		56:35:2080:2080	19660	3					
ANR	19980	ExpressionStatement	cmptparm [ i ] . prec = ( OPJ_UINT32 ) raw_cp -> rawBitDepth	2352:8:69586:69636	19660	0	True				
ANR	19981	AssignmentExpression	cmptparm [ i ] . prec = ( OPJ_UINT32 ) raw_cp -> rawBitDepth		19660	0		=			
ANR	19982	MemberAccess	cmptparm [ i ] . prec		19660	0					
ANR	19983	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	19984	Identifier	cmptparm		19660	0					
ANR	19985	Identifier	i		19660	1					
ANR	19986	Identifier	prec		19660	1					
ANR	19987	CastExpression	( OPJ_UINT32 ) raw_cp -> rawBitDepth		19660	1					
ANR	19988	CastTarget	OPJ_UINT32		19660	0					
ANR	19989	PtrMemberAccess	raw_cp -> rawBitDepth		19660	1					
ANR	19990	Identifier	raw_cp		19660	0					
ANR	19991	Identifier	rawBitDepth		19660	1					
ANR	19992	ExpressionStatement	cmptparm [ i ] . bpp = ( OPJ_UINT32 ) raw_cp -> rawBitDepth	2353:8:69646:69695	19660	1	True				
ANR	19993	AssignmentExpression	cmptparm [ i ] . bpp = ( OPJ_UINT32 ) raw_cp -> rawBitDepth		19660	0		=			
ANR	19994	MemberAccess	cmptparm [ i ] . bpp		19660	0					
ANR	19995	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	19996	Identifier	cmptparm		19660	0					
ANR	19997	Identifier	i		19660	1					
ANR	19998	Identifier	bpp		19660	1					
ANR	19999	CastExpression	( OPJ_UINT32 ) raw_cp -> rawBitDepth		19660	1					
ANR	20000	CastTarget	OPJ_UINT32		19660	0					
ANR	20001	PtrMemberAccess	raw_cp -> rawBitDepth		19660	1					
ANR	20002	Identifier	raw_cp		19660	0					
ANR	20003	Identifier	rawBitDepth		19660	1					
ANR	20004	ExpressionStatement	cmptparm [ i ] . sgnd = ( OPJ_UINT32 ) raw_cp -> rawSigned	2354:8:69705:69753	19660	2	True				
ANR	20005	AssignmentExpression	cmptparm [ i ] . sgnd = ( OPJ_UINT32 ) raw_cp -> rawSigned		19660	0		=			
ANR	20006	MemberAccess	cmptparm [ i ] . sgnd		19660	0					
ANR	20007	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	20008	Identifier	cmptparm		19660	0					
ANR	20009	Identifier	i		19660	1					
ANR	20010	Identifier	sgnd		19660	1					
ANR	20011	CastExpression	( OPJ_UINT32 ) raw_cp -> rawSigned		19660	1					
ANR	20012	CastTarget	OPJ_UINT32		19660	0					
ANR	20013	PtrMemberAccess	raw_cp -> rawSigned		19660	1					
ANR	20014	Identifier	raw_cp		19660	0					
ANR	20015	Identifier	rawSigned		19660	1					
ANR	20016	ExpressionStatement	cmptparm [ i ] . dx = ( OPJ_UINT32 ) ( subsampling_dx * raw_cp -> rawComps [ i ] . dx )	2355:8:69763:69833	19660	3	True				
ANR	20017	AssignmentExpression	cmptparm [ i ] . dx = ( OPJ_UINT32 ) ( subsampling_dx * raw_cp -> rawComps [ i ] . dx )		19660	0		=			
ANR	20018	MemberAccess	cmptparm [ i ] . dx		19660	0					
ANR	20019	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	20020	Identifier	cmptparm		19660	0					
ANR	20021	Identifier	i		19660	1					
ANR	20022	Identifier	dx		19660	1					
ANR	20023	CastExpression	( OPJ_UINT32 ) ( subsampling_dx * raw_cp -> rawComps [ i ] . dx )		19660	1					
ANR	20024	CastTarget	OPJ_UINT32		19660	0					
ANR	20025	MultiplicativeExpression	subsampling_dx * raw_cp -> rawComps [ i ] . dx		19660	1		*			
ANR	20026	Identifier	subsampling_dx		19660	0					
ANR	20027	MemberAccess	raw_cp -> rawComps [ i ] . dx		19660	1					
ANR	20028	ArrayIndexing	raw_cp -> rawComps [ i ]		19660	0					
ANR	20029	PtrMemberAccess	raw_cp -> rawComps		19660	0					
ANR	20030	Identifier	raw_cp		19660	0					
ANR	20031	Identifier	rawComps		19660	1					
ANR	20032	Identifier	i		19660	1					
ANR	20033	Identifier	dx		19660	1					
ANR	20034	ExpressionStatement	cmptparm [ i ] . dy = ( OPJ_UINT32 ) ( subsampling_dy * raw_cp -> rawComps [ i ] . dy )	2356:8:69843:69913	19660	4	True				
ANR	20035	AssignmentExpression	cmptparm [ i ] . dy = ( OPJ_UINT32 ) ( subsampling_dy * raw_cp -> rawComps [ i ] . dy )		19660	0		=			
ANR	20036	MemberAccess	cmptparm [ i ] . dy		19660	0					
ANR	20037	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	20038	Identifier	cmptparm		19660	0					
ANR	20039	Identifier	i		19660	1					
ANR	20040	Identifier	dy		19660	1					
ANR	20041	CastExpression	( OPJ_UINT32 ) ( subsampling_dy * raw_cp -> rawComps [ i ] . dy )		19660	1					
ANR	20042	CastTarget	OPJ_UINT32		19660	0					
ANR	20043	MultiplicativeExpression	subsampling_dy * raw_cp -> rawComps [ i ] . dy		19660	1		*			
ANR	20044	Identifier	subsampling_dy		19660	0					
ANR	20045	MemberAccess	raw_cp -> rawComps [ i ] . dy		19660	1					
ANR	20046	ArrayIndexing	raw_cp -> rawComps [ i ]		19660	0					
ANR	20047	PtrMemberAccess	raw_cp -> rawComps		19660	0					
ANR	20048	Identifier	raw_cp		19660	0					
ANR	20049	Identifier	rawComps		19660	1					
ANR	20050	Identifier	i		19660	1					
ANR	20051	Identifier	dy		19660	1					
ANR	20052	ExpressionStatement	cmptparm [ i ] . w = ( OPJ_UINT32 ) w	2357:8:69923:69952	19660	5	True				
ANR	20053	AssignmentExpression	cmptparm [ i ] . w = ( OPJ_UINT32 ) w		19660	0		=			
ANR	20054	MemberAccess	cmptparm [ i ] . w		19660	0					
ANR	20055	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	20056	Identifier	cmptparm		19660	0					
ANR	20057	Identifier	i		19660	1					
ANR	20058	Identifier	w		19660	1					
ANR	20059	CastExpression	( OPJ_UINT32 ) w		19660	1					
ANR	20060	CastTarget	OPJ_UINT32		19660	0					
ANR	20061	Identifier	w		19660	1					
ANR	20062	ExpressionStatement	cmptparm [ i ] . h = ( OPJ_UINT32 ) h	2358:8:69962:69991	19660	6	True				
ANR	20063	AssignmentExpression	cmptparm [ i ] . h = ( OPJ_UINT32 ) h		19660	0		=			
ANR	20064	MemberAccess	cmptparm [ i ] . h		19660	0					
ANR	20065	ArrayIndexing	cmptparm [ i ]		19660	0					
ANR	20066	Identifier	cmptparm		19660	0					
ANR	20067	Identifier	i		19660	1					
ANR	20068	Identifier	h		19660	1					
ANR	20069	CastExpression	( OPJ_UINT32 ) h		19660	1					
ANR	20070	CastTarget	OPJ_UINT32		19660	0					
ANR	20071	Identifier	h		19660	1					
ANR	20072	ExpressionStatement	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"	2361:4:70030:70103	19660	18	True				
ANR	20073	AssignmentExpression	"image = opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"		19660	0		=			
ANR	20074	Identifier	image		19660	0					
ANR	20075	CallExpression	"opj_image_create ( ( OPJ_UINT32 ) numcomps , & cmptparm [ 0 ] , color_space )"		19660	1					
ANR	20076	Callee	opj_image_create		19660	0					
ANR	20077	Identifier	opj_image_create		19660	0					
ANR	20078	ArgumentList	( OPJ_UINT32 ) numcomps		19660	1					
ANR	20079	Argument	( OPJ_UINT32 ) numcomps		19660	0					
ANR	20080	CastExpression	( OPJ_UINT32 ) numcomps		19660	0					
ANR	20081	CastTarget	OPJ_UINT32		19660	0					
ANR	20082	Identifier	numcomps		19660	1					
ANR	20083	Argument	& cmptparm [ 0 ]		19660	1					
ANR	20084	UnaryOperationExpression	& cmptparm [ 0 ]		19660	0					
ANR	20085	UnaryOperator	&		19660	0					
ANR	20086	ArrayIndexing	cmptparm [ 0 ]		19660	1					
ANR	20087	Identifier	cmptparm		19660	0					
ANR	20088	PrimaryExpression	0		19660	1					
ANR	20089	Argument	color_space		19660	2					
ANR	20090	Identifier	color_space		19660	0					
ANR	20091	ExpressionStatement	free ( cmptparm )	2362:4:70109:70123	19660	19	True				
ANR	20092	CallExpression	free ( cmptparm )		19660	0					
ANR	20093	Callee	free		19660	0					
ANR	20094	Identifier	free		19660	0					
ANR	20095	ArgumentList	cmptparm		19660	1					
ANR	20096	Argument	cmptparm		19660	0					
ANR	20097	Identifier	cmptparm		19660	0					
ANR	20098	IfStatement	if ( ! image )		19660	20					
ANR	20099	Condition	! image	2363:8:70133:70138	19660	0	True				
ANR	20100	UnaryOperationExpression	! image		19660	0					
ANR	20101	UnaryOperator	!		19660	0					
ANR	20102	Identifier	image		19660	1					
ANR	20103	CompoundStatement		68:16:2645:2645	19660	1					
ANR	20104	ExpressionStatement	fclose ( f )	2364:8:70151:70160	19660	0	True				
ANR	20105	CallExpression	fclose ( f )		19660	0					
ANR	20106	Callee	fclose		19660	0					
ANR	20107	Identifier	fclose		19660	0					
ANR	20108	ArgumentList	f		19660	1					
ANR	20109	Argument	f		19660	0					
ANR	20110	Identifier	f		19660	0					
ANR	20111	ReturnStatement	return NULL ;	2365:8:70170:70181	19660	1	True				
ANR	20112	Identifier	NULL		19660	0					
ANR	20113	ExpressionStatement	image -> x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0	2368:4:70239:70290	19660	21	True				
ANR	20114	AssignmentExpression	image -> x0 = ( OPJ_UINT32 ) parameters -> image_offset_x0		19660	0		=			
ANR	20115	PtrMemberAccess	image -> x0		19660	0					
ANR	20116	Identifier	image		19660	0					
ANR	20117	Identifier	x0		19660	1					
ANR	20118	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_x0		19660	1					
ANR	20119	CastTarget	OPJ_UINT32		19660	0					
ANR	20120	PtrMemberAccess	parameters -> image_offset_x0		19660	1					
ANR	20121	Identifier	parameters		19660	0					
ANR	20122	Identifier	image_offset_x0		19660	1					
ANR	20123	ExpressionStatement	image -> y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0	2369:4:70296:70347	19660	22	True				
ANR	20124	AssignmentExpression	image -> y0 = ( OPJ_UINT32 ) parameters -> image_offset_y0		19660	0		=			
ANR	20125	PtrMemberAccess	image -> y0		19660	0					
ANR	20126	Identifier	image		19660	0					
ANR	20127	Identifier	y0		19660	1					
ANR	20128	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_y0		19660	1					
ANR	20129	CastTarget	OPJ_UINT32		19660	0					
ANR	20130	PtrMemberAccess	parameters -> image_offset_y0		19660	1					
ANR	20131	Identifier	parameters		19660	0					
ANR	20132	Identifier	image_offset_y0		19660	1					
ANR	20133	ExpressionStatement	image -> x1 = ( OPJ_UINT32 ) parameters -> image_offset_x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1	2370:4:70353:70475	19660	23	True				
ANR	20134	AssignmentExpression	image -> x1 = ( OPJ_UINT32 ) parameters -> image_offset_x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		19660	0		=			
ANR	20135	PtrMemberAccess	image -> x1		19660	0					
ANR	20136	Identifier	image		19660	0					
ANR	20137	Identifier	x1		19660	1					
ANR	20138	AdditiveExpression	( OPJ_UINT32 ) parameters -> image_offset_x0 + ( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		19660	1		+			
ANR	20139	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_x0		19660	0					
ANR	20140	CastTarget	OPJ_UINT32		19660	0					
ANR	20141	PtrMemberAccess	parameters -> image_offset_x0		19660	1					
ANR	20142	Identifier	parameters		19660	0					
ANR	20143	Identifier	image_offset_x0		19660	1					
ANR	20144	AdditiveExpression	( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) subsampling_dx + 1		19660	1		+			
ANR	20145	MultiplicativeExpression	( OPJ_UINT32 ) ( w - 1 ) * ( OPJ_UINT32 ) subsampling_dx		19660	0		*			
ANR	20146	CastExpression	( OPJ_UINT32 ) ( w - 1 )		19660	0					
ANR	20147	CastTarget	OPJ_UINT32		19660	0					
ANR	20148	AdditiveExpression	w - 1		19660	1		-			
ANR	20149	Identifier	w		19660	0					
ANR	20150	PrimaryExpression	1		19660	1					
ANR	20151	CastExpression	( OPJ_UINT32 ) subsampling_dx		19660	1					
ANR	20152	CastTarget	OPJ_UINT32		19660	0					
ANR	20153	Identifier	subsampling_dx		19660	1					
ANR	20154	PrimaryExpression	1		19660	1					
ANR	20155	ExpressionStatement	image -> y1 = ( OPJ_UINT32 ) parameters -> image_offset_y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1	2372:4:70481:70603	19660	24	True				
ANR	20156	AssignmentExpression	image -> y1 = ( OPJ_UINT32 ) parameters -> image_offset_y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		19660	0		=			
ANR	20157	PtrMemberAccess	image -> y1		19660	0					
ANR	20158	Identifier	image		19660	0					
ANR	20159	Identifier	y1		19660	1					
ANR	20160	AdditiveExpression	( OPJ_UINT32 ) parameters -> image_offset_y0 + ( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		19660	1		+			
ANR	20161	CastExpression	( OPJ_UINT32 ) parameters -> image_offset_y0		19660	0					
ANR	20162	CastTarget	OPJ_UINT32		19660	0					
ANR	20163	PtrMemberAccess	parameters -> image_offset_y0		19660	1					
ANR	20164	Identifier	parameters		19660	0					
ANR	20165	Identifier	image_offset_y0		19660	1					
ANR	20166	AdditiveExpression	( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) subsampling_dy + 1		19660	1		+			
ANR	20167	MultiplicativeExpression	( OPJ_UINT32 ) ( h - 1 ) * ( OPJ_UINT32 ) subsampling_dy		19660	0		*			
ANR	20168	CastExpression	( OPJ_UINT32 ) ( h - 1 )		19660	0					
ANR	20169	CastTarget	OPJ_UINT32		19660	0					
ANR	20170	AdditiveExpression	h - 1		19660	1		-			
ANR	20171	Identifier	h		19660	0					
ANR	20172	PrimaryExpression	1		19660	1					
ANR	20173	CastExpression	( OPJ_UINT32 ) subsampling_dy		19660	1					
ANR	20174	CastTarget	OPJ_UINT32		19660	0					
ANR	20175	Identifier	subsampling_dy		19660	1					
ANR	20176	PrimaryExpression	1		19660	1					
ANR	20177	IfStatement	if ( raw_cp -> rawBitDepth <= 8 )		19660	25					
ANR	20178	Condition	raw_cp -> rawBitDepth <= 8	2375:8:70614:70637	19660	0	True				
ANR	20179	RelationalExpression	raw_cp -> rawBitDepth <= 8		19660	0		<=			
ANR	20180	PtrMemberAccess	raw_cp -> rawBitDepth		19660	0					
ANR	20181	Identifier	raw_cp		19660	0					
ANR	20182	Identifier	rawBitDepth		19660	1					
ANR	20183	PrimaryExpression	8		19660	1					
ANR	20184	CompoundStatement		81:8:3154:3177	19660	1					
ANR	20185	IdentifierDeclStatement	unsigned char value = 0 ;	2376:8:70650:70673	19660	0	True				
ANR	20186	IdentifierDecl	value = 0		19660	0					
ANR	20187	IdentifierDeclType	unsigned char		19660	0					
ANR	20188	Identifier	value		19660	1					
ANR	20189	AssignmentExpression	value = 0		19660	2		=			
ANR	20190	Identifier	value		19660	0					
ANR	20191	PrimaryExpression	0		19660	1					
ANR	20192	ForStatement	for ( compno = 0 ; compno < numcomps ; compno ++ )		19660	1					
ANR	20193	ForInit	compno = 0 ;	2377:13:70688:70698	19660	0	True				
ANR	20194	AssignmentExpression	compno = 0		19660	0		=			
ANR	20195	Identifier	compno		19660	0					
ANR	20196	PrimaryExpression	0		19660	1					
ANR	20197	Condition	compno < numcomps	2377:25:70700:70716	19660	1	True				
ANR	20198	RelationalExpression	compno < numcomps		19660	0		<			
ANR	20199	Identifier	compno		19660	0					
ANR	20200	Identifier	numcomps		19660	1					
ANR	20201	PostIncDecOperationExpression	compno ++	2377:44:70719:70726	19660	2	True				
ANR	20202	Identifier	compno		19660	0					
ANR	20203	IncDec	++		19660	1					
ANR	20204	CompoundStatement		83:12:3247:3363	19660	3					
ANR	20205	IdentifierDeclStatement	int nloop = ( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy ) ;	2378:12:70743:70859	19660	0	True				
ANR	20206	IdentifierDecl	nloop = ( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy )		19660	0					
ANR	20207	IdentifierDeclType	int		19660	0					
ANR	20208	Identifier	nloop		19660	1					
ANR	20209	AssignmentExpression	nloop = ( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy )		19660	2		=			
ANR	20210	Identifier	nloop		19660	0					
ANR	20211	MultiplicativeExpression	( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy )		19660	1		/			
ANR	20212	MultiplicativeExpression	w * h		19660	0		*			
ANR	20213	Identifier	w		19660	0					
ANR	20214	Identifier	h		19660	1					
ANR	20215	MultiplicativeExpression	raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy		19660	1		*			
ANR	20216	MemberAccess	raw_cp -> rawComps [ compno ] . dx		19660	0					
ANR	20217	ArrayIndexing	raw_cp -> rawComps [ compno ]		19660	0					
ANR	20218	PtrMemberAccess	raw_cp -> rawComps		19660	0					
ANR	20219	Identifier	raw_cp		19660	0					
ANR	20220	Identifier	rawComps		19660	1					
ANR	20221	Identifier	compno		19660	1					
ANR	20222	Identifier	dx		19660	1					
ANR	20223	MemberAccess	raw_cp -> rawComps [ compno ] . dy		19660	1					
ANR	20224	ArrayIndexing	raw_cp -> rawComps [ compno ]		19660	0					
ANR	20225	PtrMemberAccess	raw_cp -> rawComps		19660	0					
ANR	20226	Identifier	raw_cp		19660	0					
ANR	20227	Identifier	rawComps		19660	1					
ANR	20228	Identifier	compno		19660	1					
ANR	20229	Identifier	dy		19660	1					
ANR	20230	ForStatement	for ( i = 0 ; i < nloop ; i ++ )		19660	1					
ANR	20231	ForInit	i = 0 ;	2380:17:70878:70883	19660	0	True				
ANR	20232	AssignmentExpression	i = 0		19660	0		=			
ANR	20233	Identifier	i		19660	0					
ANR	20234	PrimaryExpression	0		19660	1					
ANR	20235	Condition	i < nloop	2380:24:70885:70893	19660	1	True				
ANR	20236	RelationalExpression	i < nloop		19660	0		<			
ANR	20237	Identifier	i		19660	0					
ANR	20238	Identifier	nloop		19660	1					
ANR	20239	PostIncDecOperationExpression	i ++	2380:35:70896:70898	19660	2	True				
ANR	20240	Identifier	i		19660	0					
ANR	20241	IncDec	++		19660	1					
ANR	20242	CompoundStatement		85:40:3405:3405	19660	3					
ANR	20243	IfStatement	"if ( ! fread ( & value , 1 , 1 , f ) )"		19660	0					
ANR	20244	Condition	"! fread ( & value , 1 , 1 , f )"	2381:20:70923:70945	19660	0	True				
ANR	20245	UnaryOperationExpression	"! fread ( & value , 1 , 1 , f )"		19660	0					
ANR	20246	UnaryOperator	!		19660	0					
ANR	20247	CallExpression	"fread ( & value , 1 , 1 , f )"		19660	1					
ANR	20248	Callee	fread		19660	0					
ANR	20249	Identifier	fread		19660	0					
ANR	20250	ArgumentList	& value		19660	1					
ANR	20251	Argument	& value		19660	0					
ANR	20252	UnaryOperationExpression	& value		19660	0					
ANR	20253	UnaryOperator	&		19660	0					
ANR	20254	Identifier	value		19660	1					
ANR	20255	Argument	1		19660	1					
ANR	20256	PrimaryExpression	1		19660	0					
ANR	20257	Argument	1		19660	2					
ANR	20258	PrimaryExpression	1		19660	0					
ANR	20259	Argument	f		19660	3					
ANR	20260	Identifier	f		19660	0					
ANR	20261	CompoundStatement		86:45:3452:3452	19660	1					
ANR	20262	ExpressionStatement	"fprintf ( stderr , ""Error reading raw file. End of file probably reached.\\n"" )"	2382:20:70970:71044	19660	0	True				
ANR	20263	CallExpression	"fprintf ( stderr , ""Error reading raw file. End of file probably reached.\\n"" )"		19660	0					
ANR	20264	Callee	fprintf		19660	0					
ANR	20265	Identifier	fprintf		19660	0					
ANR	20266	ArgumentList	stderr		19660	1					
ANR	20267	Argument	stderr		19660	0					
ANR	20268	Identifier	stderr		19660	0					
ANR	20269	Argument	"""Error reading raw file. End of file probably reached.\\n"""		19660	1					
ANR	20270	PrimaryExpression	"""Error reading raw file. End of file probably reached.\\n"""		19660	0					
ANR	20271	ExpressionStatement	opj_image_destroy ( image )	2383:20:71066:71090	19660	1	True				
ANR	20272	CallExpression	opj_image_destroy ( image )		19660	0					
ANR	20273	Callee	opj_image_destroy		19660	0					
ANR	20274	Identifier	opj_image_destroy		19660	0					
ANR	20275	ArgumentList	image		19660	1					
ANR	20276	Argument	image		19660	0					
ANR	20277	Identifier	image		19660	0					
ANR	20278	ExpressionStatement	fclose ( f )	2384:20:71112:71121	19660	2	True				
ANR	20279	CallExpression	fclose ( f )		19660	0					
ANR	20280	Callee	fclose		19660	0					
ANR	20281	Identifier	fclose		19660	0					
ANR	20282	ArgumentList	f		19660	1					
ANR	20283	Argument	f		19660	0					
ANR	20284	Identifier	f		19660	0					
ANR	20285	ReturnStatement	return NULL ;	2385:20:71143:71154	19660	3	True				
ANR	20286	Identifier	NULL		19660	0					
ANR	20287	ExpressionStatement	image -> comps [ compno ] . data [ i ] = raw_cp -> rawSigned ? ( char ) value : value	2387:16:71190:71260	19660	1	True				
ANR	20288	AssignmentExpression	image -> comps [ compno ] . data [ i ] = raw_cp -> rawSigned ? ( char ) value : value		19660	0		=			
ANR	20289	ArrayIndexing	image -> comps [ compno ] . data [ i ]		19660	0					
ANR	20290	MemberAccess	image -> comps [ compno ] . data		19660	0					
ANR	20291	ArrayIndexing	image -> comps [ compno ]		19660	0					
ANR	20292	PtrMemberAccess	image -> comps		19660	0					
ANR	20293	Identifier	image		19660	0					
ANR	20294	Identifier	comps		19660	1					
ANR	20295	Identifier	compno		19660	1					
ANR	20296	Identifier	data		19660	1					
ANR	20297	Identifier	i		19660	1					
ANR	20298	ConditionalExpression	raw_cp -> rawSigned ? ( char ) value : value		19660	1					
ANR	20299	Condition	raw_cp -> rawSigned		19660	0					
ANR	20300	PtrMemberAccess	raw_cp -> rawSigned		19660	0					
ANR	20301	Identifier	raw_cp		19660	0					
ANR	20302	Identifier	rawSigned		19660	1					
ANR	20303	CastExpression	( char ) value		19660	1					
ANR	20304	CastTarget	char		19660	0					
ANR	20305	Identifier	value		19660	1					
ANR	20306	Identifier	value		19660	2					
ANR	20307	ElseStatement	else		19660	0					
ANR	20308	IfStatement	if ( raw_cp -> rawBitDepth <= 16 )		19660	0					
ANR	20309	Condition	raw_cp -> rawBitDepth <= 16	2390:15:71301:71325	19660	0	True				
ANR	20310	RelationalExpression	raw_cp -> rawBitDepth <= 16		19660	0		<=			
ANR	20311	PtrMemberAccess	raw_cp -> rawBitDepth		19660	0					
ANR	20312	Identifier	raw_cp		19660	0					
ANR	20313	Identifier	rawBitDepth		19660	1					
ANR	20314	PrimaryExpression	16		19660	1					
ANR	20315	CompoundStatement		96:8:3842:3862	19660	1					
ANR	20316	IdentifierDeclStatement	unsigned short value ;	2391:8:71338:71358	19660	0	True				
ANR	20317	IdentifierDecl	value		19660	0					
ANR	20318	IdentifierDeclType	unsigned short		19660	0					
ANR	20319	Identifier	value		19660	1					
ANR	20320	ForStatement	for ( compno = 0 ; compno < numcomps ; compno ++ )		19660	1					
ANR	20321	ForInit	compno = 0 ;	2392:13:71373:71383	19660	0	True				
ANR	20322	AssignmentExpression	compno = 0		19660	0		=			
ANR	20323	Identifier	compno		19660	0					
ANR	20324	PrimaryExpression	0		19660	1					
ANR	20325	Condition	compno < numcomps	2392:25:71385:71401	19660	1	True				
ANR	20326	RelationalExpression	compno < numcomps		19660	0		<			
ANR	20327	Identifier	compno		19660	0					
ANR	20328	Identifier	numcomps		19660	1					
ANR	20329	PostIncDecOperationExpression	compno ++	2392:44:71404:71411	19660	2	True				
ANR	20330	Identifier	compno		19660	0					
ANR	20331	IncDec	++		19660	1					
ANR	20332	CompoundStatement		98:12:3932:4048	19660	3					
ANR	20333	IdentifierDeclStatement	int nloop = ( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy ) ;	2393:12:71428:71544	19660	0	True				
ANR	20334	IdentifierDecl	nloop = ( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy )		19660	0					
ANR	20335	IdentifierDeclType	int		19660	0					
ANR	20336	Identifier	nloop		19660	1					
ANR	20337	AssignmentExpression	nloop = ( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy )		19660	2		=			
ANR	20338	Identifier	nloop		19660	0					
ANR	20339	MultiplicativeExpression	( w * h ) / ( raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy )		19660	1		/			
ANR	20340	MultiplicativeExpression	w * h		19660	0		*			
ANR	20341	Identifier	w		19660	0					
ANR	20342	Identifier	h		19660	1					
ANR	20343	MultiplicativeExpression	raw_cp -> rawComps [ compno ] . dx * raw_cp -> rawComps [ compno ] . dy		19660	1		*			
ANR	20344	MemberAccess	raw_cp -> rawComps [ compno ] . dx		19660	0					
ANR	20345	ArrayIndexing	raw_cp -> rawComps [ compno ]		19660	0					
ANR	20346	PtrMemberAccess	raw_cp -> rawComps		19660	0					
ANR	20347	Identifier	raw_cp		19660	0					
ANR	20348	Identifier	rawComps		19660	1					
ANR	20349	Identifier	compno		19660	1					
ANR	20350	Identifier	dx		19660	1					
ANR	20351	MemberAccess	raw_cp -> rawComps [ compno ] . dy		19660	1					
ANR	20352	ArrayIndexing	raw_cp -> rawComps [ compno ]		19660	0					
ANR	20353	PtrMemberAccess	raw_cp -> rawComps		19660	0					
ANR	20354	Identifier	raw_cp		19660	0					
ANR	20355	Identifier	rawComps		19660	1					
ANR	20356	Identifier	compno		19660	1					
ANR	20357	Identifier	dy		19660	1					
ANR	20358	ForStatement	for ( i = 0 ; i < nloop ; i ++ )		19660	1					
ANR	20359	ForInit	i = 0 ;	2395:17:71563:71568	19660	0	True				
ANR	20360	AssignmentExpression	i = 0		19660	0		=			
ANR	20361	Identifier	i		19660	0					
ANR	20362	PrimaryExpression	0		19660	1					
ANR	20363	Condition	i < nloop	2395:24:71570:71578	19660	1	True				
ANR	20364	RelationalExpression	i < nloop		19660	0		<			
ANR	20365	Identifier	i		19660	0					
ANR	20366	Identifier	nloop		19660	1					
ANR	20367	PostIncDecOperationExpression	i ++	2395:35:71581:71583	19660	2	True				
ANR	20368	Identifier	i		19660	0					
ANR	20369	IncDec	++		19660	1					
ANR	20370	CompoundStatement		102:16:4145:4164	19660	3					
ANR	20371	IdentifierDeclStatement	unsigned char temp1 ;	2396:16:71604:71623	19660	0	True				
ANR	20372	IdentifierDecl	temp1		19660	0					
ANR	20373	IdentifierDeclType	unsigned char		19660	0					
ANR	20374	Identifier	temp1		19660	1					
ANR	20375	IdentifierDeclStatement	unsigned char temp2 ;	2397:16:71641:71660	19660	1	True				
ANR	20376	IdentifierDecl	temp2		19660	0					
ANR	20377	IdentifierDeclType	unsigned char		19660	0					
ANR	20378	Identifier	temp2		19660	1					
ANR	20379	IfStatement	"if ( ! fread ( & temp1 , 1 , 1 , f ) )"		19660	2					
ANR	20380	Condition	"! fread ( & temp1 , 1 , 1 , f )"	2398:20:71682:71704	19660	0	True				
ANR	20381	UnaryOperationExpression	"! fread ( & temp1 , 1 , 1 , f )"		19660	0					
ANR	20382	UnaryOperator	!		19660	0					
ANR	20383	CallExpression	"fread ( & temp1 , 1 , 1 , f )"		19660	1					
ANR	20384	Callee	fread		19660	0					
ANR	20385	Identifier	fread		19660	0					
ANR	20386	ArgumentList	& temp1		19660	1					
ANR	20387	Argument	& temp1		19660	0					
ANR	20388	UnaryOperationExpression	& temp1		19660	0					
ANR	20389	UnaryOperator	&		19660	0					
ANR	20390	Identifier	temp1		19660	1					
ANR	20391	Argument	1		19660	1					
ANR	20392	PrimaryExpression	1		19660	0					
ANR	20393	Argument	1		19660	2					
ANR	20394	PrimaryExpression	1		19660	0					
ANR	20395	Argument	f		19660	3					
ANR	20396	Identifier	f		19660	0					
ANR	20397	CompoundStatement		103:45:4211:4211	19660	1					
ANR	20398	ExpressionStatement	"fprintf ( stderr , ""Error reading raw file. End of file probably reached.\\n"" )"	2399:20:71729:71803	19660	0	True				
ANR	20399	CallExpression	"fprintf ( stderr , ""Error reading raw file. End of file probably reached.\\n"" )"		19660	0					
ANR	20400	Callee	fprintf		19660	0					
ANR	20401	Identifier	fprintf		19660	0					
ANR	20402	ArgumentList	stderr		19660	1					
ANR	20403	Argument	stderr		19660	0					
ANR	20404	Identifier	stderr		19660	0					
ANR	20405	Argument	"""Error reading raw file. End of file probably reached.\\n"""		19660	1					
ANR	20406	PrimaryExpression	"""Error reading raw file. End of file probably reached.\\n"""		19660	0					
ANR	20407	ExpressionStatement	opj_image_destroy ( image )	2400:20:71825:71849	19660	1	True				
ANR	20408	CallExpression	opj_image_destroy ( image )		19660	0					
ANR	20409	Callee	opj_image_destroy		19660	0					
ANR	20410	Identifier	opj_image_destroy		19660	0					
ANR	20411	ArgumentList	image		19660	1					
ANR	20412	Argument	image		19660	0					
ANR	20413	Identifier	image		19660	0					
ANR	20414	ExpressionStatement	fclose ( f )	2401:20:71871:71880	19660	2	True				
ANR	20415	CallExpression	fclose ( f )		19660	0					
ANR	20416	Callee	fclose		19660	0					
ANR	20417	Identifier	fclose		19660	0					
ANR	20418	ArgumentList	f		19660	1					
ANR	20419	Argument	f		19660	0					
ANR	20420	Identifier	f		19660	0					
ANR	20421	ReturnStatement	return NULL ;	2402:20:71902:71913	19660	3	True				
ANR	20422	Identifier	NULL		19660	0					
ANR	20423	IfStatement	"if ( ! fread ( & temp2 , 1 , 1 , f ) )"		19660	3					
ANR	20424	Condition	"! fread ( & temp2 , 1 , 1 , f )"	2404:20:71953:71975	19660	0	True				
ANR	20425	UnaryOperationExpression	"! fread ( & temp2 , 1 , 1 , f )"		19660	0					
ANR	20426	UnaryOperator	!		19660	0					
ANR	20427	CallExpression	"fread ( & temp2 , 1 , 1 , f )"		19660	1					
ANR	20428	Callee	fread		19660	0					
ANR	20429	Identifier	fread		19660	0					
ANR	20430	ArgumentList	& temp2		19660	1					
ANR	20431	Argument	& temp2		19660	0					
ANR	20432	UnaryOperationExpression	& temp2		19660	0					
ANR	20433	UnaryOperator	&		19660	0					
ANR	20434	Identifier	temp2		19660	1					
ANR	20435	Argument	1		19660	1					
ANR	20436	PrimaryExpression	1		19660	0					
ANR	20437	Argument	1		19660	2					
ANR	20438	PrimaryExpression	1		19660	0					
ANR	20439	Argument	f		19660	3					
ANR	20440	Identifier	f		19660	0					
ANR	20441	CompoundStatement		109:45:4482:4482	19660	1					
ANR	20442	ExpressionStatement	"fprintf ( stderr , ""Error reading raw file. End of file probably reached.\\n"" )"	2405:20:72000:72074	19660	0	True				
ANR	20443	CallExpression	"fprintf ( stderr , ""Error reading raw file. End of file probably reached.\\n"" )"		19660	0					
ANR	20444	Callee	fprintf		19660	0					
ANR	20445	Identifier	fprintf		19660	0					
ANR	20446	ArgumentList	stderr		19660	1					
ANR	20447	Argument	stderr		19660	0					
ANR	20448	Identifier	stderr		19660	0					
ANR	20449	Argument	"""Error reading raw file. End of file probably reached.\\n"""		19660	1					
ANR	20450	PrimaryExpression	"""Error reading raw file. End of file probably reached.\\n"""		19660	0					
ANR	20451	ExpressionStatement	opj_image_destroy ( image )	2406:20:72096:72120	19660	1	True				
ANR	20452	CallExpression	opj_image_destroy ( image )		19660	0					
ANR	20453	Callee	opj_image_destroy		19660	0					
ANR	20454	Identifier	opj_image_destroy		19660	0					
ANR	20455	ArgumentList	image		19660	1					
ANR	20456	Argument	image		19660	0					
ANR	20457	Identifier	image		19660	0					
ANR	20458	ExpressionStatement	fclose ( f )	2407:20:72142:72151	19660	2	True				
ANR	20459	CallExpression	fclose ( f )		19660	0					
ANR	20460	Callee	fclose		19660	0					
ANR	20461	Identifier	fclose		19660	0					
ANR	20462	ArgumentList	f		19660	1					
ANR	20463	Argument	f		19660	0					
ANR	20464	Identifier	f		19660	0					
ANR	20465	ReturnStatement	return NULL ;	2408:20:72173:72184	19660	3	True				
ANR	20466	Identifier	NULL		19660	0					
ANR	20467	IfStatement	if ( big_endian )		19660	4					
ANR	20468	Condition	big_endian	2410:20:72224:72233	19660	0	True				
ANR	20469	Identifier	big_endian		19660	0					
ANR	20470	CompoundStatement		115:32:4740:4740	19660	1					
ANR	20471	ExpressionStatement	value = ( unsigned short ) ( ( temp1 << 8 ) + temp2 )	2411:20:72258:72304	19660	0	True				
ANR	20472	AssignmentExpression	value = ( unsigned short ) ( ( temp1 << 8 ) + temp2 )		19660	0		=			
ANR	20473	Identifier	value		19660	0					
ANR	20474	CastExpression	( unsigned short ) ( ( temp1 << 8 ) + temp2 )		19660	1					
ANR	20475	CastTarget	unsigned short		19660	0					
ANR	20476	AdditiveExpression	( temp1 << 8 ) + temp2		19660	1		+			
ANR	20477	ShiftExpression	temp1 << 8		19660	0		<<			
ANR	20478	Identifier	temp1		19660	0					
ANR	20479	PrimaryExpression	8		19660	1					
ANR	20480	Identifier	temp2		19660	1					
ANR	20481	ElseStatement	else		19660	0					
ANR	20482	CompoundStatement		117:23:4833:4833	19660	0					
ANR	20483	ExpressionStatement	value = ( unsigned short ) ( ( temp2 << 8 ) + temp1 )	2413:20:72351:72397	19660	0	True				
ANR	20484	AssignmentExpression	value = ( unsigned short ) ( ( temp2 << 8 ) + temp1 )		19660	0		=			
ANR	20485	Identifier	value		19660	0					
ANR	20486	CastExpression	( unsigned short ) ( ( temp2 << 8 ) + temp1 )		19660	1					
ANR	20487	CastTarget	unsigned short		19660	0					
ANR	20488	AdditiveExpression	( temp2 << 8 ) + temp1		19660	1		+			
ANR	20489	ShiftExpression	temp2 << 8		19660	0		<<			
ANR	20490	Identifier	temp2		19660	0					
ANR	20491	PrimaryExpression	8		19660	1					
ANR	20492	Identifier	temp1		19660	1					
ANR	20493	ExpressionStatement	image -> comps [ compno ] . data [ i ] = raw_cp -> rawSigned ? ( short ) value : value	2415:16:72433:72504	19660	5	True				
ANR	20494	AssignmentExpression	image -> comps [ compno ] . data [ i ] = raw_cp -> rawSigned ? ( short ) value : value		19660	0		=			
ANR	20495	ArrayIndexing	image -> comps [ compno ] . data [ i ]		19660	0					
ANR	20496	MemberAccess	image -> comps [ compno ] . data		19660	0					
ANR	20497	ArrayIndexing	image -> comps [ compno ]		19660	0					
ANR	20498	PtrMemberAccess	image -> comps		19660	0					
ANR	20499	Identifier	image		19660	0					
ANR	20500	Identifier	comps		19660	1					
ANR	20501	Identifier	compno		19660	1					
ANR	20502	Identifier	data		19660	1					
ANR	20503	Identifier	i		19660	1					
ANR	20504	ConditionalExpression	raw_cp -> rawSigned ? ( short ) value : value		19660	1					
ANR	20505	Condition	raw_cp -> rawSigned		19660	0					
ANR	20506	PtrMemberAccess	raw_cp -> rawSigned		19660	0					
ANR	20507	Identifier	raw_cp		19660	0					
ANR	20508	Identifier	rawSigned		19660	1					
ANR	20509	CastExpression	( short ) value		19660	1					
ANR	20510	CastTarget	short		19660	0					
ANR	20511	Identifier	value		19660	1					
ANR	20512	Identifier	value		19660	2					
ANR	20513	ElseStatement	else		19660	0					
ANR	20514	CompoundStatement		123:11:5045:5045	19660	0					
ANR	20515	ExpressionStatement	"fprintf ( stderr , ""OpenJPEG cannot encode raw components with bit depth higher than 16 bits.\\n"" )"	2419:8:72551:72661	19660	0	True				
ANR	20516	CallExpression	"fprintf ( stderr , ""OpenJPEG cannot encode raw components with bit depth higher than 16 bits.\\n"" )"		19660	0					
ANR	20517	Callee	fprintf		19660	0					
ANR	20518	Identifier	fprintf		19660	0					
ANR	20519	ArgumentList	stderr		19660	1					
ANR	20520	Argument	stderr		19660	0					
ANR	20521	Identifier	stderr		19660	0					
ANR	20522	Argument	"""OpenJPEG cannot encode raw components with bit depth higher than 16 bits.\\n"""		19660	1					
ANR	20523	PrimaryExpression	"""OpenJPEG cannot encode raw components with bit depth higher than 16 bits.\\n"""		19660	0					
ANR	20524	ExpressionStatement	opj_image_destroy ( image )	2421:8:72671:72695	19660	1	True				
ANR	20525	CallExpression	opj_image_destroy ( image )		19660	0					
ANR	20526	Callee	opj_image_destroy		19660	0					
ANR	20527	Identifier	opj_image_destroy		19660	0					
ANR	20528	ArgumentList	image		19660	1					
ANR	20529	Argument	image		19660	0					
ANR	20530	Identifier	image		19660	0					
ANR	20531	ExpressionStatement	fclose ( f )	2422:8:72705:72714	19660	2	True				
ANR	20532	CallExpression	fclose ( f )		19660	0					
ANR	20533	Callee	fclose		19660	0					
ANR	20534	Identifier	fclose		19660	0					
ANR	20535	ArgumentList	f		19660	1					
ANR	20536	Argument	f		19660	0					
ANR	20537	Identifier	f		19660	0					
ANR	20538	ReturnStatement	return NULL ;	2423:8:72724:72735	19660	3	True				
ANR	20539	Identifier	NULL		19660	0					
ANR	20540	IfStatement	"if ( fread ( & ch , 1 , 1 , f ) )"		19660	26					
ANR	20541	Condition	"fread ( & ch , 1 , 1 , f )"	2426:8:72752:72770	19660	0	True				
ANR	20542	CallExpression	"fread ( & ch , 1 , 1 , f )"		19660	0					
ANR	20543	Callee	fread		19660	0					
ANR	20544	Identifier	fread		19660	0					
ANR	20545	ArgumentList	& ch		19660	1					
ANR	20546	Argument	& ch		19660	0					
ANR	20547	UnaryOperationExpression	& ch		19660	0					
ANR	20548	UnaryOperator	&		19660	0					
ANR	20549	Identifier	ch		19660	1					
ANR	20550	Argument	1		19660	1					
ANR	20551	PrimaryExpression	1		19660	0					
ANR	20552	Argument	1		19660	2					
ANR	20553	PrimaryExpression	1		19660	0					
ANR	20554	Argument	f		19660	3					
ANR	20555	Identifier	f		19660	0					
ANR	20556	CompoundStatement		131:29:5277:5277	19660	1					
ANR	20557	ExpressionStatement	"fprintf ( stderr , ""Warning. End of raw file not reached... processing anyway\\n"" )"	2427:8:72783:72861	19660	0	True				
ANR	20558	CallExpression	"fprintf ( stderr , ""Warning. End of raw file not reached... processing anyway\\n"" )"		19660	0					
ANR	20559	Callee	fprintf		19660	0					
ANR	20560	Identifier	fprintf		19660	0					
ANR	20561	ArgumentList	stderr		19660	1					
ANR	20562	Argument	stderr		19660	0					
ANR	20563	Identifier	stderr		19660	0					
ANR	20564	Argument	"""Warning. End of raw file not reached... processing anyway\\n"""		19660	1					
ANR	20565	PrimaryExpression	"""Warning. End of raw file not reached... processing anyway\\n"""		19660	0					
ANR	20566	ExpressionStatement	fclose ( f )	2429:4:72873:72882	19660	27	True				
ANR	20567	CallExpression	fclose ( f )		19660	0					
ANR	20568	Callee	fclose		19660	0					
ANR	20569	Identifier	fclose		19660	0					
ANR	20570	ArgumentList	f		19660	1					
ANR	20571	Argument	f		19660	0					
ANR	20572	Identifier	f		19660	0					
ANR	20573	ReturnStatement	return image ;	2431:4:72889:72901	19660	28	True				
ANR	20574	Identifier	image		19660	0					
ANR	20575	ReturnType	static opj_image_t *		19660	1					
ANR	20576	Identifier	rawtoimage_common		19660	2					
ANR	20577	ParameterList	"const char * filename , opj_cparameters_t * parameters , raw_cparameters_t * raw_cp , OPJ_BOOL big_endian"		19660	3					
ANR	20578	Parameter	const char * filename	2294:38:67356:67375	19660	0	True				
ANR	20579	ParameterType	const char *		19660	0					
ANR	20580	Identifier	filename		19660	1					
ANR	20581	Parameter	opj_cparameters_t * parameters	2295:38:67416:67444	19660	1	True				
ANR	20582	ParameterType	opj_cparameters_t *		19660	0					
ANR	20583	Identifier	parameters		19660	1					
ANR	20584	Parameter	raw_cparameters_t * raw_cp	2295:69:67447:67471	19660	2	True				
ANR	20585	ParameterType	raw_cparameters_t *		19660	0					
ANR	20586	Identifier	raw_cp		19660	1					
ANR	20587	Parameter	OPJ_BOOL big_endian	2295:96:67474:67492	19660	3	True				
ANR	20588	ParameterType	OPJ_BOOL		19660	0					
ANR	20589	Identifier	big_endian		19660	1					
ANR	20590	CFGEntryNode	ENTRY		19660		True				
ANR	20591	CFGExitNode	EXIT		19660		True				
ANR	20592	Symbol	image -> y0		19660						
ANR	20593	Symbol	image -> y1		19660						
ANR	20594	Symbol	& value		19660						
ANR	20595	Symbol	raw_cp -> rawComps [ i ] . dx		19660						
ANR	20596	Symbol	cmptparm		19660						
ANR	20597	Symbol	raw_cp -> rawComps [ i ] . dy		19660						
ANR	20598	Symbol	image -> comps		19660						
ANR	20599	Symbol	& ch		19660						
ANR	20600	Symbol	raw_cp -> rawComps		19660						
ANR	20601	Symbol	* image -> comps [ compno ] . data		19660						
ANR	20602	Symbol	* * * image		19660						
ANR	20603	Symbol	* * image -> comps		19660						
ANR	20604	Symbol	image		19660						
ANR	20605	Symbol	raw_cp -> rawWidth		19660						
ANR	20606	Symbol	image -> x0		19660						
ANR	20607	Symbol	NULL		19660						
ANR	20608	Symbol	image -> x1		19660						
ANR	20609	Symbol	stderr		19660						
ANR	20610	Symbol	fread		19660						
ANR	20611	Symbol	compno		19660						
ANR	20612	Symbol	raw_cp -> rawComp		19660						
ANR	20613	Symbol	cmptparm [ i ] . dy		19660						
ANR	20614	Symbol	* compno		19660						
ANR	20615	Symbol	filename		19660						
ANR	20616	Symbol	* parameters		19660						
ANR	20617	Symbol	raw_cp -> rawBitDepth		19660						
ANR	20618	Symbol	* raw_cp -> rawComps		19660						
ANR	20619	Symbol	cmptparm [ i ] . h		19660						
ANR	20620	Symbol	cmptparm [ i ] . dx		19660						
ANR	20621	Symbol	& temp1		19660						
ANR	20622	Symbol	* * raw_cp		19660						
ANR	20623	Symbol	image -> comps [ compno ] . data		19660						
ANR	20624	Symbol	parameters		19660						
ANR	20625	Symbol	OPJ_CLRSPC_SYCC		19660						
ANR	20626	Symbol	* image		19660						
ANR	20627	Symbol	& temp2		19660						
ANR	20628	Symbol	cmptparm [ i ] . bpp		19660						
ANR	20629	Symbol	cmptparm [ i ] . w		19660						
ANR	20630	Symbol	raw_cp -> rawHeight		19660						
ANR	20631	Symbol	OPJ_CLRSPC_GRAY		19660						
ANR	20632	Symbol	raw_cp -> rawSigned		19660						
ANR	20633	Symbol	parameters -> image_offset_x0		19660						
ANR	20634	Symbol	calloc		19660						
ANR	20635	Symbol	temp2		19660						
ANR	20636	Symbol	opj_image_create		19660						
ANR	20637	Symbol	temp1		19660						
ANR	20638	Symbol	OPJ_CLRSPC_UNKNOWN		19660						
ANR	20639	Symbol	nloop		19660						
ANR	20640	Symbol	* * image		19660						
ANR	20641	Symbol	* raw_cp		19660						
ANR	20642	Symbol	color_space		19660						
ANR	20643	Symbol	value		19660						
ANR	20644	Symbol	numcomps		19660						
ANR	20645	Symbol	fopen		19660						
ANR	20646	Symbol	* image -> comps		19660						
ANR	20647	Symbol	raw_cp -> rawComps [ compno ] . dy		19660						
ANR	20648	Symbol	subsampling_dx		19660						
ANR	20649	Symbol	cmptparm [ i ] . sgnd		19660						
ANR	20650	Symbol	subsampling_dy		19660						
ANR	20651	Symbol	ch		19660						
ANR	20652	Symbol	raw_cp -> rawComps [ compno ] . dx		19660						
ANR	20653	Symbol	f		19660						
ANR	20654	Symbol	h		19660						
ANR	20655	Symbol	i		19660						
ANR	20656	Symbol	OPJ_CLRSPC_SRGB		19660						
ANR	20657	Symbol	parameters -> image_offset_y0		19660						
ANR	20658	Symbol	parameters -> subsampling_dx		19660						
ANR	20659	Symbol	parameters -> subsampling_dy		19660						
ANR	20660	Symbol	* * compno		19660						
ANR	20661	Symbol	parameters -> tcp_mct		19660						
ANR	20662	Symbol	raw_cp		19660						
ANR	20663	Symbol	* i		19660						
ANR	20664	Symbol	cmptparm [ i ] . prec		19660						
ANR	20665	Symbol	big_endian		19660						
ANR	20666	Symbol	w		19660						
ANR	20667	Symbol	* cmptparm		19660						
ANR	20668	Function	rawltoimage	2434:0:72906:73109							
ANR	20669	FunctionDef	"rawltoimage (const char * filename , opj_cparameters_t * parameters , raw_cparameters_t * raw_cp)"		20668	0					
ANR	20670	CompoundStatement		2436:0:73036:73109	20668	0					
ANR	20671	ReturnStatement	"return rawtoimage_common ( filename , parameters , raw_cp , OPJ_FALSE ) ;"	2437:4:73042:73107	20668	0	True				
ANR	20672	CallExpression	"rawtoimage_common ( filename , parameters , raw_cp , OPJ_FALSE )"		20668	0					
ANR	20673	Callee	rawtoimage_common		20668	0					
ANR	20674	Identifier	rawtoimage_common		20668	0					
ANR	20675	ArgumentList	filename		20668	1					
ANR	20676	Argument	filename		20668	0					
ANR	20677	Identifier	filename		20668	0					
ANR	20678	Argument	parameters		20668	1					
ANR	20679	Identifier	parameters		20668	0					
ANR	20680	Argument	raw_cp		20668	2					
ANR	20681	Identifier	raw_cp		20668	0					
ANR	20682	Argument	OPJ_FALSE		20668	3					
ANR	20683	Identifier	OPJ_FALSE		20668	0					
ANR	20684	ReturnType	opj_image_t *		20668	1					
ANR	20685	Identifier	rawltoimage		20668	2					
ANR	20686	ParameterList	"const char * filename , opj_cparameters_t * parameters , raw_cparameters_t * raw_cp"		20668	3					
ANR	20687	Parameter	const char * filename	2434:25:72931:72950	20668	0	True				
ANR	20688	ParameterType	const char *		20668	0					
ANR	20689	Identifier	filename		20668	1					
ANR	20690	Parameter	opj_cparameters_t * parameters	2434:47:72953:72981	20668	1	True				
ANR	20691	ParameterType	opj_cparameters_t *		20668	0					
ANR	20692	Identifier	parameters		20668	1					
ANR	20693	Parameter	raw_cparameters_t * raw_cp	2435:25:73009:73033	20668	2	True				
ANR	20694	ParameterType	raw_cparameters_t *		20668	0					
ANR	20695	Identifier	raw_cp		20668	1					
ANR	20696	CFGEntryNode	ENTRY		20668		True				
ANR	20697	CFGExitNode	EXIT		20668		True				
ANR	20698	Symbol	raw_cp		20668						
ANR	20699	Symbol	filename		20668						
ANR	20700	Symbol	OPJ_FALSE		20668						
ANR	20701	Symbol	rawtoimage_common		20668						
ANR	20702	Symbol	parameters		20668						
ANR	20703	Function	rawtoimage	2440:0:73112:73312							
ANR	20704	FunctionDef	"rawtoimage (const char * filename , opj_cparameters_t * parameters , raw_cparameters_t * raw_cp)"		20703	0					
ANR	20705	CompoundStatement		2442:0:73240:73312	20703	0					
ANR	20706	ReturnStatement	"return rawtoimage_common ( filename , parameters , raw_cp , OPJ_TRUE ) ;"	2443:4:73246:73310	20703	0	True				
ANR	20707	CallExpression	"rawtoimage_common ( filename , parameters , raw_cp , OPJ_TRUE )"		20703	0					
ANR	20708	Callee	rawtoimage_common		20703	0					
ANR	20709	Identifier	rawtoimage_common		20703	0					
ANR	20710	ArgumentList	filename		20703	1					
ANR	20711	Argument	filename		20703	0					
ANR	20712	Identifier	filename		20703	0					
ANR	20713	Argument	parameters		20703	1					
ANR	20714	Identifier	parameters		20703	0					
ANR	20715	Argument	raw_cp		20703	2					
ANR	20716	Identifier	raw_cp		20703	0					
ANR	20717	Argument	OPJ_TRUE		20703	3					
ANR	20718	Identifier	OPJ_TRUE		20703	0					
ANR	20719	ReturnType	opj_image_t *		20703	1					
ANR	20720	Identifier	rawtoimage		20703	2					
ANR	20721	ParameterList	"const char * filename , opj_cparameters_t * parameters , raw_cparameters_t * raw_cp"		20703	3					
ANR	20722	Parameter	const char * filename	2440:24:73136:73155	20703	0	True				
ANR	20723	ParameterType	const char *		20703	0					
ANR	20724	Identifier	filename		20703	1					
ANR	20725	Parameter	opj_cparameters_t * parameters	2440:46:73158:73186	20703	1	True				
ANR	20726	ParameterType	opj_cparameters_t *		20703	0					
ANR	20727	Identifier	parameters		20703	1					
ANR	20728	Parameter	raw_cparameters_t * raw_cp	2441:24:73213:73237	20703	2	True				
ANR	20729	ParameterType	raw_cparameters_t *		20703	0					
ANR	20730	Identifier	raw_cp		20703	1					
ANR	20731	CFGEntryNode	ENTRY		20703		True				
ANR	20732	CFGExitNode	EXIT		20703		True				
ANR	20733	Symbol	raw_cp		20703						
ANR	20734	Symbol	filename		20703						
ANR	20735	Symbol	rawtoimage_common		20703						
ANR	20736	Symbol	OPJ_TRUE		20703						
ANR	20737	Symbol	parameters		20703						
ANR	20738	Function	imagetoraw_common	2446:0:73315:79494							
ANR	20739	FunctionDef	"imagetoraw_common (opj_image_t * image , const char * outfile , OPJ_BOOL big_endian)"		20738	0					
ANR	20740	CompoundStatement		2448:0:73436:79494	20738	0					
ANR	20741	IdentifierDeclStatement	FILE * rawFile = NULL ;	2449:4:73442:73462	20738	0	True				
ANR	20742	IdentifierDecl	* rawFile = NULL		20738	0					
ANR	20743	IdentifierDeclType	FILE *		20738	0					
ANR	20744	Identifier	rawFile		20738	1					
ANR	20745	AssignmentExpression	* rawFile = NULL		20738	2		=			
ANR	20746	Identifier	NULL		20738	0					
ANR	20747	Identifier	NULL		20738	1					
ANR	20748	IdentifierDeclStatement	size_t res ;	2450:4:73468:73478	20738	1	True				
ANR	20749	IdentifierDecl	res		20738	0					
ANR	20750	IdentifierDeclType	size_t		20738	0					
ANR	20751	Identifier	res		20738	1					
ANR	20752	IdentifierDeclStatement	"unsigned int compno , numcomps ;"	2451:4:73484:73513	20738	2	True				
ANR	20753	IdentifierDecl	compno		20738	0					
ANR	20754	IdentifierDeclType	unsigned int		20738	0					
ANR	20755	Identifier	compno		20738	1					
ANR	20756	IdentifierDecl	numcomps		20738	1					
ANR	20757	IdentifierDeclType	unsigned int		20738	0					
ANR	20758	Identifier	numcomps		20738	1					
ANR	20759	IdentifierDeclStatement	"int w , h , fails ;"	2452:4:73519:73534	20738	3	True				
ANR	20760	IdentifierDecl	w		20738	0					
ANR	20761	IdentifierDeclType	int		20738	0					
ANR	20762	Identifier	w		20738	1					
ANR	20763	IdentifierDecl	h		20738	1					
ANR	20764	IdentifierDeclType	int		20738	0					
ANR	20765	Identifier	h		20738	1					
ANR	20766	IdentifierDecl	fails		20738	2					
ANR	20767	IdentifierDeclType	int		20738	0					
ANR	20768	Identifier	fails		20738	1					
ANR	20769	IdentifierDeclStatement	"int line , row , curr , mask ;"	2453:4:73540:73565	20738	4	True				
ANR	20770	IdentifierDecl	line		20738	0					
ANR	20771	IdentifierDeclType	int		20738	0					
ANR	20772	Identifier	line		20738	1					
ANR	20773	IdentifierDecl	row		20738	1					
ANR	20774	IdentifierDeclType	int		20738	0					
ANR	20775	Identifier	row		20738	1					
ANR	20776	IdentifierDecl	curr		20738	2					
ANR	20777	IdentifierDeclType	int		20738	0					
ANR	20778	Identifier	curr		20738	1					
ANR	20779	IdentifierDecl	mask		20738	3					
ANR	20780	IdentifierDeclType	int		20738	0					
ANR	20781	Identifier	mask		20738	1					
ANR	20782	IdentifierDeclStatement	int * ptr ;	2454:4:73571:73579	20738	5	True				
ANR	20783	IdentifierDecl	* ptr		20738	0					
ANR	20784	IdentifierDeclType	int *		20738	0					
ANR	20785	Identifier	ptr		20738	1					
ANR	20786	IdentifierDeclStatement	unsigned char uc ;	2455:4:73585:73601	20738	6	True				
ANR	20787	IdentifierDecl	uc		20738	0					
ANR	20788	IdentifierDeclType	unsigned char		20738	0					
ANR	20789	Identifier	uc		20738	1					
ANR	20790	ExpressionStatement	( void ) big_endian	2456:4:73607:73623	20738	7	True				
ANR	20791	CastExpression	( void ) big_endian		20738	0					
ANR	20792	CastTarget	void		20738	0					
ANR	20793	Identifier	big_endian		20738	1					
ANR	20794	IfStatement	if ( ( image -> numcomps * image -> x1 * image -> y1 ) == 0 )		20738	8					
ANR	20795	Condition	( image -> numcomps * image -> x1 * image -> y1 ) == 0	2458:8:73634:73679	20738	0	True				
ANR	20796	EqualityExpression	( image -> numcomps * image -> x1 * image -> y1 ) == 0		20738	0		==			
ANR	20797	MultiplicativeExpression	image -> numcomps * image -> x1 * image -> y1		20738	0		*			
ANR	20798	PtrMemberAccess	image -> numcomps		20738	0					
ANR	20799	Identifier	image		20738	0					
ANR	20800	Identifier	numcomps		20738	1					
ANR	20801	MultiplicativeExpression	image -> x1 * image -> y1		20738	1		*			
ANR	20802	PtrMemberAccess	image -> x1		20738	0					
ANR	20803	Identifier	image		20738	0					
ANR	20804	Identifier	x1		20738	1					
ANR	20805	PtrMemberAccess	image -> y1		20738	1					
ANR	20806	Identifier	image		20738	0					
ANR	20807	Identifier	y1		20738	1					
ANR	20808	PrimaryExpression	0		20738	1					
ANR	20809	CompoundStatement		11:56:245:245	20738	1					
ANR	20810	ExpressionStatement	"fprintf ( stderr , ""\\nError: invalid raw image parameters\\n"" )"	2459:8:73692:73750	20738	0	True				
ANR	20811	CallExpression	"fprintf ( stderr , ""\\nError: invalid raw image parameters\\n"" )"		20738	0					
ANR	20812	Callee	fprintf		20738	0					
ANR	20813	Identifier	fprintf		20738	0					
ANR	20814	ArgumentList	stderr		20738	1					
ANR	20815	Argument	stderr		20738	0					
ANR	20816	Identifier	stderr		20738	0					
ANR	20817	Argument	"""\\nError: invalid raw image parameters\\n"""		20738	1					
ANR	20818	PrimaryExpression	"""\\nError: invalid raw image parameters\\n"""		20738	0					
ANR	20819	ReturnStatement	return 1 ;	2460:8:73760:73768	20738	1	True				
ANR	20820	PrimaryExpression	1		20738	0					
ANR	20821	ExpressionStatement	numcomps = image -> numcomps	2463:4:73781:73807	20738	9	True				
ANR	20822	AssignmentExpression	numcomps = image -> numcomps		20738	0		=			
ANR	20823	Identifier	numcomps		20738	0					
ANR	20824	PtrMemberAccess	image -> numcomps		20738	1					
ANR	20825	Identifier	image		20738	0					
ANR	20826	Identifier	numcomps		20738	1					
ANR	20827	IfStatement	if ( numcomps > 4 )		20738	10					
ANR	20828	Condition	numcomps > 4	2465:8:73818:73829	20738	0	True				
ANR	20829	RelationalExpression	numcomps > 4		20738	0		>			
ANR	20830	Identifier	numcomps		20738	0					
ANR	20831	PrimaryExpression	4		20738	1					
ANR	20832	CompoundStatement		18:22:395:395	20738	1					
ANR	20833	ExpressionStatement	numcomps = 4	2466:8:73842:73854	20738	0	True				
ANR	20834	AssignmentExpression	numcomps = 4		20738	0		=			
ANR	20835	Identifier	numcomps		20738	0					
ANR	20836	PrimaryExpression	4		20738	1					
ANR	20837	ForStatement	for ( compno = 1 ; compno < numcomps ; ++ compno )		20738	11					
ANR	20838	ForInit	compno = 1 ;	2469:9:73872:73882	20738	0	True				
ANR	20839	AssignmentExpression	compno = 1		20738	0		=			
ANR	20840	Identifier	compno		20738	0					
ANR	20841	PrimaryExpression	1		20738	1					
ANR	20842	Condition	compno < numcomps	2469:21:73884:73900	20738	1	True				
ANR	20843	RelationalExpression	compno < numcomps		20738	0		<			
ANR	20844	Identifier	compno		20738	0					
ANR	20845	Identifier	numcomps		20738	1					
ANR	20846	UnaryExpression	++ compno	2469:40:73903:73910	20738	2	True				
ANR	20847	IncDec	++		20738	0					
ANR	20848	Identifier	compno		20738	1					
ANR	20849	CompoundStatement		22:50:476:476	20738	3					
ANR	20850	IfStatement	if ( image -> comps [ 0 ] . dx != image -> comps [ compno ] . dx )		20738	0					
ANR	20851	Condition	image -> comps [ 0 ] . dx != image -> comps [ compno ] . dx	2470:12:73927:73971	20738	0	True				
ANR	20852	EqualityExpression	image -> comps [ 0 ] . dx != image -> comps [ compno ] . dx		20738	0		!=			
ANR	20853	MemberAccess	image -> comps [ 0 ] . dx		20738	0					
ANR	20854	ArrayIndexing	image -> comps [ 0 ]		20738	0					
ANR	20855	PtrMemberAccess	image -> comps		20738	0					
ANR	20856	Identifier	image		20738	0					
ANR	20857	Identifier	comps		20738	1					
ANR	20858	PrimaryExpression	0		20738	1					
ANR	20859	Identifier	dx		20738	1					
ANR	20860	MemberAccess	image -> comps [ compno ] . dx		20738	1					
ANR	20861	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	20862	PtrMemberAccess	image -> comps		20738	0					
ANR	20863	Identifier	image		20738	0					
ANR	20864	Identifier	comps		20738	1					
ANR	20865	Identifier	compno		20738	1					
ANR	20866	Identifier	dx		20738	1					
ANR	20867	CompoundStatement		23:59:537:537	20738	1					
ANR	20868	BreakStatement	break ;	2471:12:73988:73993	20738	0	True				
ANR	20869	IfStatement	if ( image -> comps [ 0 ] . dy != image -> comps [ compno ] . dy )		20738	1					
ANR	20870	Condition	image -> comps [ 0 ] . dy != image -> comps [ compno ] . dy	2473:12:74017:74061	20738	0	True				
ANR	20871	EqualityExpression	image -> comps [ 0 ] . dy != image -> comps [ compno ] . dy		20738	0		!=			
ANR	20872	MemberAccess	image -> comps [ 0 ] . dy		20738	0					
ANR	20873	ArrayIndexing	image -> comps [ 0 ]		20738	0					
ANR	20874	PtrMemberAccess	image -> comps		20738	0					
ANR	20875	Identifier	image		20738	0					
ANR	20876	Identifier	comps		20738	1					
ANR	20877	PrimaryExpression	0		20738	1					
ANR	20878	Identifier	dy		20738	1					
ANR	20879	MemberAccess	image -> comps [ compno ] . dy		20738	1					
ANR	20880	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	20881	PtrMemberAccess	image -> comps		20738	0					
ANR	20882	Identifier	image		20738	0					
ANR	20883	Identifier	comps		20738	1					
ANR	20884	Identifier	compno		20738	1					
ANR	20885	Identifier	dy		20738	1					
ANR	20886	CompoundStatement		26:59:627:627	20738	1					
ANR	20887	BreakStatement	break ;	2474:12:74078:74083	20738	0	True				
ANR	20888	IfStatement	if ( image -> comps [ 0 ] . prec != image -> comps [ compno ] . prec )		20738	2					
ANR	20889	Condition	image -> comps [ 0 ] . prec != image -> comps [ compno ] . prec	2476:12:74107:74155	20738	0	True				
ANR	20890	EqualityExpression	image -> comps [ 0 ] . prec != image -> comps [ compno ] . prec		20738	0		!=			
ANR	20891	MemberAccess	image -> comps [ 0 ] . prec		20738	0					
ANR	20892	ArrayIndexing	image -> comps [ 0 ]		20738	0					
ANR	20893	PtrMemberAccess	image -> comps		20738	0					
ANR	20894	Identifier	image		20738	0					
ANR	20895	Identifier	comps		20738	1					
ANR	20896	PrimaryExpression	0		20738	1					
ANR	20897	Identifier	prec		20738	1					
ANR	20898	MemberAccess	image -> comps [ compno ] . prec		20738	1					
ANR	20899	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	20900	PtrMemberAccess	image -> comps		20738	0					
ANR	20901	Identifier	image		20738	0					
ANR	20902	Identifier	comps		20738	1					
ANR	20903	Identifier	compno		20738	1					
ANR	20904	Identifier	prec		20738	1					
ANR	20905	CompoundStatement		29:63:721:721	20738	1					
ANR	20906	BreakStatement	break ;	2477:12:74172:74177	20738	0	True				
ANR	20907	IfStatement	if ( image -> comps [ 0 ] . sgnd != image -> comps [ compno ] . sgnd )		20738	3					
ANR	20908	Condition	image -> comps [ 0 ] . sgnd != image -> comps [ compno ] . sgnd	2479:12:74201:74249	20738	0	True				
ANR	20909	EqualityExpression	image -> comps [ 0 ] . sgnd != image -> comps [ compno ] . sgnd		20738	0		!=			
ANR	20910	MemberAccess	image -> comps [ 0 ] . sgnd		20738	0					
ANR	20911	ArrayIndexing	image -> comps [ 0 ]		20738	0					
ANR	20912	PtrMemberAccess	image -> comps		20738	0					
ANR	20913	Identifier	image		20738	0					
ANR	20914	Identifier	comps		20738	1					
ANR	20915	PrimaryExpression	0		20738	1					
ANR	20916	Identifier	sgnd		20738	1					
ANR	20917	MemberAccess	image -> comps [ compno ] . sgnd		20738	1					
ANR	20918	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	20919	PtrMemberAccess	image -> comps		20738	0					
ANR	20920	Identifier	image		20738	0					
ANR	20921	Identifier	comps		20738	1					
ANR	20922	Identifier	compno		20738	1					
ANR	20923	Identifier	sgnd		20738	1					
ANR	20924	CompoundStatement		32:63:815:815	20738	1					
ANR	20925	BreakStatement	break ;	2480:12:74266:74271	20738	0	True				
ANR	20926	IfStatement	if ( compno != numcomps )		20738	12					
ANR	20927	Condition	compno != numcomps	2483:8:74297:74314	20738	0	True				
ANR	20928	EqualityExpression	compno != numcomps		20738	0		!=			
ANR	20929	Identifier	compno		20738	0					
ANR	20930	Identifier	numcomps		20738	1					
ANR	20931	CompoundStatement		36:28:880:880	20738	1					
ANR	20932	ExpressionStatement	"fprintf ( stderr , ""imagetoraw_common: All components shall have the same subsampling, same bit depth, same sign.\\n"" )"	2484:8:74327:74457	20738	0	True				
ANR	20933	CallExpression	"fprintf ( stderr , ""imagetoraw_common: All components shall have the same subsampling, same bit depth, same sign.\\n"" )"		20738	0					
ANR	20934	Callee	fprintf		20738	0					
ANR	20935	Identifier	fprintf		20738	0					
ANR	20936	ArgumentList	stderr		20738	1					
ANR	20937	Argument	stderr		20738	0					
ANR	20938	Identifier	stderr		20738	0					
ANR	20939	Argument	"""imagetoraw_common: All components shall have the same subsampling, same bit depth, same sign.\\n"""		20738	1					
ANR	20940	PrimaryExpression	"""imagetoraw_common: All components shall have the same subsampling, same bit depth, same sign.\\n"""		20738	0					
ANR	20941	ExpressionStatement	"fprintf ( stderr , ""\\tAborting\\n"" )"	2486:8:74467:74498	20738	1	True				
ANR	20942	CallExpression	"fprintf ( stderr , ""\\tAborting\\n"" )"		20738	0					
ANR	20943	Callee	fprintf		20738	0					
ANR	20944	Identifier	fprintf		20738	0					
ANR	20945	ArgumentList	stderr		20738	1					
ANR	20946	Argument	stderr		20738	0					
ANR	20947	Identifier	stderr		20738	0					
ANR	20948	Argument	"""\\tAborting\\n"""		20738	1					
ANR	20949	PrimaryExpression	"""\\tAborting\\n"""		20738	0					
ANR	20950	ReturnStatement	return 1 ;	2487:8:74508:74516	20738	2	True				
ANR	20951	PrimaryExpression	1		20738	0					
ANR	20952	ExpressionStatement	"rawFile = fopen ( outfile , ""wb"" )"	2490:4:74529:74559	20738	13	True				
ANR	20953	AssignmentExpression	"rawFile = fopen ( outfile , ""wb"" )"		20738	0		=			
ANR	20954	Identifier	rawFile		20738	0					
ANR	20955	CallExpression	"fopen ( outfile , ""wb"" )"		20738	1					
ANR	20956	Callee	fopen		20738	0					
ANR	20957	Identifier	fopen		20738	0					
ANR	20958	ArgumentList	outfile		20738	1					
ANR	20959	Argument	outfile		20738	0					
ANR	20960	Identifier	outfile		20738	0					
ANR	20961	Argument	"""wb"""		20738	1					
ANR	20962	PrimaryExpression	"""wb"""		20738	0					
ANR	20963	IfStatement	if ( ! rawFile )		20738	14					
ANR	20964	Condition	! rawFile	2491:8:74569:74576	20738	0	True				
ANR	20965	UnaryOperationExpression	! rawFile		20738	0					
ANR	20966	UnaryOperator	!		20738	0					
ANR	20967	Identifier	rawFile		20738	1					
ANR	20968	CompoundStatement		44:18:1142:1142	20738	1					
ANR	20969	ExpressionStatement	"fprintf ( stderr , ""Failed to open %s for writing !!\\n"" , outfile )"	2492:8:74589:74651	20738	0	True				
ANR	20970	CallExpression	"fprintf ( stderr , ""Failed to open %s for writing !!\\n"" , outfile )"		20738	0					
ANR	20971	Callee	fprintf		20738	0					
ANR	20972	Identifier	fprintf		20738	0					
ANR	20973	ArgumentList	stderr		20738	1					
ANR	20974	Argument	stderr		20738	0					
ANR	20975	Identifier	stderr		20738	0					
ANR	20976	Argument	"""Failed to open %s for writing !!\\n"""		20738	1					
ANR	20977	PrimaryExpression	"""Failed to open %s for writing !!\\n"""		20738	0					
ANR	20978	Argument	outfile		20738	2					
ANR	20979	Identifier	outfile		20738	0					
ANR	20980	ReturnStatement	return 1 ;	2493:8:74661:74669	20738	1	True				
ANR	20981	PrimaryExpression	1		20738	0					
ANR	20982	ExpressionStatement	fails = 1	2496:4:74682:74691	20738	15	True				
ANR	20983	AssignmentExpression	fails = 1		20738	0		=			
ANR	20984	Identifier	fails		20738	0					
ANR	20985	PrimaryExpression	1		20738	1					
ANR	20986	ExpressionStatement	"fprintf ( stdout , ""Raw image characteristics: %d components\\n"" , image -> numcomps )"	2497:4:74697:74775	20738	16	True				
ANR	20987	CallExpression	"fprintf ( stdout , ""Raw image characteristics: %d components\\n"" , image -> numcomps )"		20738	0					
ANR	20988	Callee	fprintf		20738	0					
ANR	20989	Identifier	fprintf		20738	0					
ANR	20990	ArgumentList	stdout		20738	1					
ANR	20991	Argument	stdout		20738	0					
ANR	20992	Identifier	stdout		20738	0					
ANR	20993	Argument	"""Raw image characteristics: %d components\\n"""		20738	1					
ANR	20994	PrimaryExpression	"""Raw image characteristics: %d components\\n"""		20738	0					
ANR	20995	Argument	image -> numcomps		20738	2					
ANR	20996	PtrMemberAccess	image -> numcomps		20738	0					
ANR	20997	Identifier	image		20738	0					
ANR	20998	Identifier	numcomps		20738	1					
ANR	20999	ForStatement	for ( compno = 0 ; compno < image -> numcomps ; compno ++ )		20738	17					
ANR	21000	ForInit	compno = 0 ;	2499:9:74787:74797	20738	0	True				
ANR	21001	AssignmentExpression	compno = 0		20738	0		=			
ANR	21002	Identifier	compno		20738	0					
ANR	21003	PrimaryExpression	0		20738	1					
ANR	21004	Condition	compno < image -> numcomps	2499:21:74799:74822	20738	1	True				
ANR	21005	RelationalExpression	compno < image -> numcomps		20738	0		<			
ANR	21006	Identifier	compno		20738	0					
ANR	21007	PtrMemberAccess	image -> numcomps		20738	1					
ANR	21008	Identifier	image		20738	0					
ANR	21009	Identifier	numcomps		20738	1					
ANR	21010	PostIncDecOperationExpression	compno ++	2499:47:74825:74832	20738	2	True				
ANR	21011	Identifier	compno		20738	0					
ANR	21012	IncDec	++		20738	1					
ANR	21013	CompoundStatement		52:57:1398:1398	20738	3					
ANR	21014	ExpressionStatement	"fprintf ( stdout , ""Component %u characteristics: %dx%dx%d %s\\n"" , compno , image -> comps [ compno ] . w , image -> comps [ compno ] . h , image -> comps [ compno ] . prec , image -> comps [ compno ] . sgnd == 1 ? ""signed"" : ""unsigned"" )"	2500:8:74845:75094	20738	0	True				
ANR	21015	CallExpression	"fprintf ( stdout , ""Component %u characteristics: %dx%dx%d %s\\n"" , compno , image -> comps [ compno ] . w , image -> comps [ compno ] . h , image -> comps [ compno ] . prec , image -> comps [ compno ] . sgnd == 1 ? ""signed"" : ""unsigned"" )"		20738	0					
ANR	21016	Callee	fprintf		20738	0					
ANR	21017	Identifier	fprintf		20738	0					
ANR	21018	ArgumentList	stdout		20738	1					
ANR	21019	Argument	stdout		20738	0					
ANR	21020	Identifier	stdout		20738	0					
ANR	21021	Argument	"""Component %u characteristics: %dx%dx%d %s\\n"""		20738	1					
ANR	21022	PrimaryExpression	"""Component %u characteristics: %dx%dx%d %s\\n"""		20738	0					
ANR	21023	Argument	compno		20738	2					
ANR	21024	Identifier	compno		20738	0					
ANR	21025	Argument	image -> comps [ compno ] . w		20738	3					
ANR	21026	MemberAccess	image -> comps [ compno ] . w		20738	0					
ANR	21027	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21028	PtrMemberAccess	image -> comps		20738	0					
ANR	21029	Identifier	image		20738	0					
ANR	21030	Identifier	comps		20738	1					
ANR	21031	Identifier	compno		20738	1					
ANR	21032	Identifier	w		20738	1					
ANR	21033	Argument	image -> comps [ compno ] . h		20738	4					
ANR	21034	MemberAccess	image -> comps [ compno ] . h		20738	0					
ANR	21035	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21036	PtrMemberAccess	image -> comps		20738	0					
ANR	21037	Identifier	image		20738	0					
ANR	21038	Identifier	comps		20738	1					
ANR	21039	Identifier	compno		20738	1					
ANR	21040	Identifier	h		20738	1					
ANR	21041	Argument	image -> comps [ compno ] . prec		20738	5					
ANR	21042	MemberAccess	image -> comps [ compno ] . prec		20738	0					
ANR	21043	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21044	PtrMemberAccess	image -> comps		20738	0					
ANR	21045	Identifier	image		20738	0					
ANR	21046	Identifier	comps		20738	1					
ANR	21047	Identifier	compno		20738	1					
ANR	21048	Identifier	prec		20738	1					
ANR	21049	Argument	"image -> comps [ compno ] . sgnd == 1 ? ""signed"" : ""unsigned"""		20738	6					
ANR	21050	ConditionalExpression	"image -> comps [ compno ] . sgnd == 1 ? ""signed"" : ""unsigned"""		20738	0					
ANR	21051	Condition	image -> comps [ compno ] . sgnd == 1		20738	0					
ANR	21052	EqualityExpression	image -> comps [ compno ] . sgnd == 1		20738	0		==			
ANR	21053	MemberAccess	image -> comps [ compno ] . sgnd		20738	0					
ANR	21054	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21055	PtrMemberAccess	image -> comps		20738	0					
ANR	21056	Identifier	image		20738	0					
ANR	21057	Identifier	comps		20738	1					
ANR	21058	Identifier	compno		20738	1					
ANR	21059	Identifier	sgnd		20738	1					
ANR	21060	PrimaryExpression	1		20738	1					
ANR	21061	PrimaryExpression	"""signed"""		20738	1					
ANR	21062	PrimaryExpression	"""unsigned"""		20738	2					
ANR	21063	ExpressionStatement	w = ( int ) image -> comps [ compno ] . w	2505:8:75105:75136	20738	1	True				
ANR	21064	AssignmentExpression	w = ( int ) image -> comps [ compno ] . w		20738	0		=			
ANR	21065	Identifier	w		20738	0					
ANR	21066	CastExpression	( int ) image -> comps [ compno ] . w		20738	1					
ANR	21067	CastTarget	int		20738	0					
ANR	21068	MemberAccess	image -> comps [ compno ] . w		20738	1					
ANR	21069	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21070	PtrMemberAccess	image -> comps		20738	0					
ANR	21071	Identifier	image		20738	0					
ANR	21072	Identifier	comps		20738	1					
ANR	21073	Identifier	compno		20738	1					
ANR	21074	Identifier	w		20738	1					
ANR	21075	ExpressionStatement	h = ( int ) image -> comps [ compno ] . h	2506:8:75146:75177	20738	2	True				
ANR	21076	AssignmentExpression	h = ( int ) image -> comps [ compno ] . h		20738	0		=			
ANR	21077	Identifier	h		20738	0					
ANR	21078	CastExpression	( int ) image -> comps [ compno ] . h		20738	1					
ANR	21079	CastTarget	int		20738	0					
ANR	21080	MemberAccess	image -> comps [ compno ] . h		20738	1					
ANR	21081	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21082	PtrMemberAccess	image -> comps		20738	0					
ANR	21083	Identifier	image		20738	0					
ANR	21084	Identifier	comps		20738	1					
ANR	21085	Identifier	compno		20738	1					
ANR	21086	Identifier	h		20738	1					
ANR	21087	IfStatement	if ( image -> comps [ compno ] . prec <= 8 )		20738	3					
ANR	21088	Condition	image -> comps [ compno ] . prec <= 8	2508:12:75192:75221	20738	0	True				
ANR	21089	RelationalExpression	image -> comps [ compno ] . prec <= 8		20738	0		<=			
ANR	21090	MemberAccess	image -> comps [ compno ] . prec		20738	0					
ANR	21091	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21092	PtrMemberAccess	image -> comps		20738	0					
ANR	21093	Identifier	image		20738	0					
ANR	21094	Identifier	comps		20738	1					
ANR	21095	Identifier	compno		20738	1					
ANR	21096	Identifier	prec		20738	1					
ANR	21097	PrimaryExpression	8		20738	1					
ANR	21098	CompoundStatement		61:44:1787:1787	20738	1					
ANR	21099	IfStatement	if ( image -> comps [ compno ] . sgnd == 1 )		20738	0					
ANR	21100	Condition	image -> comps [ compno ] . sgnd == 1	2509:16:75242:75271	20738	0	True				
ANR	21101	EqualityExpression	image -> comps [ compno ] . sgnd == 1		20738	0		==			
ANR	21102	MemberAccess	image -> comps [ compno ] . sgnd		20738	0					
ANR	21103	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21104	PtrMemberAccess	image -> comps		20738	0					
ANR	21105	Identifier	image		20738	0					
ANR	21106	Identifier	comps		20738	1					
ANR	21107	Identifier	compno		20738	1					
ANR	21108	Identifier	sgnd		20738	1					
ANR	21109	PrimaryExpression	1		20738	1					
ANR	21110	CompoundStatement		62:48:1837:1837	20738	1					
ANR	21111	ExpressionStatement	mask = ( 1 << image -> comps [ compno ] . prec ) - 1	2510:16:75292:75335	20738	0	True				
ANR	21112	AssignmentExpression	mask = ( 1 << image -> comps [ compno ] . prec ) - 1		20738	0		=			
ANR	21113	Identifier	mask		20738	0					
ANR	21114	AdditiveExpression	( 1 << image -> comps [ compno ] . prec ) - 1		20738	1		-			
ANR	21115	ShiftExpression	1 << image -> comps [ compno ] . prec		20738	0		<<			
ANR	21116	PrimaryExpression	1		20738	0					
ANR	21117	MemberAccess	image -> comps [ compno ] . prec		20738	1					
ANR	21118	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21119	PtrMemberAccess	image -> comps		20738	0					
ANR	21120	Identifier	image		20738	0					
ANR	21121	Identifier	comps		20738	1					
ANR	21122	Identifier	compno		20738	1					
ANR	21123	Identifier	prec		20738	1					
ANR	21124	PrimaryExpression	1		20738	1					
ANR	21125	ExpressionStatement	ptr = image -> comps [ compno ] . data	2511:16:75353:75384	20738	1	True				
ANR	21126	AssignmentExpression	ptr = image -> comps [ compno ] . data		20738	0		=			
ANR	21127	Identifier	ptr		20738	0					
ANR	21128	MemberAccess	image -> comps [ compno ] . data		20738	1					
ANR	21129	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21130	PtrMemberAccess	image -> comps		20738	0					
ANR	21131	Identifier	image		20738	0					
ANR	21132	Identifier	comps		20738	1					
ANR	21133	Identifier	compno		20738	1					
ANR	21134	Identifier	data		20738	1					
ANR	21135	ForStatement	for ( line = 0 ; line < h ; line ++ )		20738	2					
ANR	21136	ForInit	line = 0 ;	2512:21:75407:75415	20738	0	True				
ANR	21137	AssignmentExpression	line = 0		20738	0		=			
ANR	21138	Identifier	line		20738	0					
ANR	21139	PrimaryExpression	0		20738	1					
ANR	21140	Condition	line < h	2512:31:75417:75424	20738	1	True				
ANR	21141	RelationalExpression	line < h		20738	0		<			
ANR	21142	Identifier	line		20738	0					
ANR	21143	Identifier	h		20738	1					
ANR	21144	PostIncDecOperationExpression	line ++	2512:41:75427:75432	20738	2	True				
ANR	21145	Identifier	line		20738	0					
ANR	21146	IncDec	++		20738	1					
ANR	21147	CompoundStatement		65:49:1998:1998	20738	3					
ANR	21148	ForStatement	for ( row = 0 ; row < w ; row ++ )		20738	0					
ANR	21149	ForInit	row = 0 ;	2513:25:75462:75469	20738	0	True				
ANR	21150	AssignmentExpression	row = 0		20738	0		=			
ANR	21151	Identifier	row		20738	0					
ANR	21152	PrimaryExpression	0		20738	1					
ANR	21153	Condition	row < w	2513:34:75471:75477	20738	1	True				
ANR	21154	RelationalExpression	row < w		20738	0		<			
ANR	21155	Identifier	row		20738	0					
ANR	21156	Identifier	w		20738	1					
ANR	21157	PostIncDecOperationExpression	row ++	2513:43:75480:75484	20738	2	True				
ANR	21158	Identifier	row		20738	0					
ANR	21159	IncDec	++		20738	1					
ANR	21160	CompoundStatement		66:53:2053:2053	20738	3					
ANR	21161	ExpressionStatement	curr = * ptr	2514:24:75516:75527	20738	0	True				
ANR	21162	AssignmentExpression	curr = * ptr		20738	0		=			
ANR	21163	Identifier	curr		20738	0					
ANR	21164	UnaryOperationExpression	* ptr		20738	1					
ANR	21165	UnaryOperator	*		20738	0					
ANR	21166	Identifier	ptr		20738	1					
ANR	21167	IfStatement	if ( curr > 127 )		20738	1					
ANR	21168	Condition	curr > 127	2515:28:75557:75566	20738	0	True				
ANR	21169	RelationalExpression	curr > 127		20738	0		>			
ANR	21170	Identifier	curr		20738	0					
ANR	21171	PrimaryExpression	127		20738	1					
ANR	21172	CompoundStatement		68:40:2132:2132	20738	1					
ANR	21173	ExpressionStatement	curr = 127	2516:28:75599:75609	20738	0	True				
ANR	21174	AssignmentExpression	curr = 127		20738	0		=			
ANR	21175	Identifier	curr		20738	0					
ANR	21176	PrimaryExpression	127		20738	1					
ANR	21177	ElseStatement	else		20738	0					
ANR	21178	IfStatement	if ( curr < - 128 )		20738	0					
ANR	21179	Condition	curr < - 128	2517:35:75646:75656	20738	0	True				
ANR	21180	RelationalExpression	curr < - 128		20738	0		<			
ANR	21181	Identifier	curr		20738	0					
ANR	21182	UnaryOperationExpression	- 128		20738	1					
ANR	21183	UnaryOperator	-		20738	0					
ANR	21184	PrimaryExpression	128		20738	1					
ANR	21185	CompoundStatement		70:48:2222:2222	20738	1					
ANR	21186	ExpressionStatement	curr = - 128	2518:28:75689:75700	20738	0	True				
ANR	21187	AssignmentExpression	curr = - 128		20738	0		=			
ANR	21188	Identifier	curr		20738	0					
ANR	21189	UnaryOperationExpression	- 128		20738	1					
ANR	21190	UnaryOperator	-		20738	0					
ANR	21191	PrimaryExpression	128		20738	1					
ANR	21192	ExpressionStatement	uc = ( unsigned char ) ( curr & mask )	2520:24:75752:75785	20738	2	True				
ANR	21193	AssignmentExpression	uc = ( unsigned char ) ( curr & mask )		20738	0		=			
ANR	21194	Identifier	uc		20738	0					
ANR	21195	CastExpression	( unsigned char ) ( curr & mask )		20738	1					
ANR	21196	CastTarget	unsigned char		20738	0					
ANR	21197	BitAndExpression	curr & mask		20738	1		&			
ANR	21198	Identifier	curr		20738	0					
ANR	21199	Identifier	mask		20738	1					
ANR	21200	ExpressionStatement	"res = fwrite ( & uc , 1 , 1 , rawFile )"	2521:24:75811:75843	20738	3	True				
ANR	21201	AssignmentExpression	"res = fwrite ( & uc , 1 , 1 , rawFile )"		20738	0		=			
ANR	21202	Identifier	res		20738	0					
ANR	21203	CallExpression	"fwrite ( & uc , 1 , 1 , rawFile )"		20738	1					
ANR	21204	Callee	fwrite		20738	0					
ANR	21205	Identifier	fwrite		20738	0					
ANR	21206	ArgumentList	& uc		20738	1					
ANR	21207	Argument	& uc		20738	0					
ANR	21208	UnaryOperationExpression	& uc		20738	0					
ANR	21209	UnaryOperator	&		20738	0					
ANR	21210	Identifier	uc		20738	1					
ANR	21211	Argument	1		20738	1					
ANR	21212	PrimaryExpression	1		20738	0					
ANR	21213	Argument	1		20738	2					
ANR	21214	PrimaryExpression	1		20738	0					
ANR	21215	Argument	rawFile		20738	3					
ANR	21216	Identifier	rawFile		20738	0					
ANR	21217	IfStatement	if ( res < 1 )		20738	4					
ANR	21218	Condition	res < 1	2522:28:75873:75879	20738	0	True				
ANR	21219	RelationalExpression	res < 1		20738	0		<			
ANR	21220	Identifier	res		20738	0					
ANR	21221	PrimaryExpression	1		20738	1					
ANR	21222	CompoundStatement		75:37:2445:2445	20738	1					
ANR	21223	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"	2523:28:75912:75971	20738	0	True				
ANR	21224	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"		20738	0					
ANR	21225	Callee	fprintf		20738	0					
ANR	21226	Identifier	fprintf		20738	0					
ANR	21227	ArgumentList	stderr		20738	1					
ANR	21228	Argument	stderr		20738	0					
ANR	21229	Identifier	stderr		20738	0					
ANR	21230	Argument	"""failed to write 1 byte for %s\\n"""		20738	1					
ANR	21231	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		20738	0					
ANR	21232	Argument	outfile		20738	2					
ANR	21233	Identifier	outfile		20738	0					
ANR	21234	GotoStatement	goto fin ;	2524:28:76001:76009	20738	1	True				
ANR	21235	Identifier	fin		20738	0					
ANR	21236	ExpressionStatement	ptr ++	2526:24:76061:76066	20738	5	True				
ANR	21237	PostIncDecOperationExpression	ptr ++		20738	0					
ANR	21238	Identifier	ptr		20738	0					
ANR	21239	IncDec	++		20738	1					
ANR	21240	ElseStatement	else		20738	0					
ANR	21241	IfStatement	if ( image -> comps [ compno ] . sgnd == 0 )		20738	0					
ANR	21242	Condition	image -> comps [ compno ] . sgnd == 0	2529:23:76131:76160	20738	0	True				
ANR	21243	EqualityExpression	image -> comps [ compno ] . sgnd == 0		20738	0		==			
ANR	21244	MemberAccess	image -> comps [ compno ] . sgnd		20738	0					
ANR	21245	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21246	PtrMemberAccess	image -> comps		20738	0					
ANR	21247	Identifier	image		20738	0					
ANR	21248	Identifier	comps		20738	1					
ANR	21249	Identifier	compno		20738	1					
ANR	21250	Identifier	sgnd		20738	1					
ANR	21251	PrimaryExpression	0		20738	1					
ANR	21252	CompoundStatement		82:55:2726:2726	20738	1					
ANR	21253	ExpressionStatement	mask = ( 1 << image -> comps [ compno ] . prec ) - 1	2530:16:76181:76224	20738	0	True				
ANR	21254	AssignmentExpression	mask = ( 1 << image -> comps [ compno ] . prec ) - 1		20738	0		=			
ANR	21255	Identifier	mask		20738	0					
ANR	21256	AdditiveExpression	( 1 << image -> comps [ compno ] . prec ) - 1		20738	1		-			
ANR	21257	ShiftExpression	1 << image -> comps [ compno ] . prec		20738	0		<<			
ANR	21258	PrimaryExpression	1		20738	0					
ANR	21259	MemberAccess	image -> comps [ compno ] . prec		20738	1					
ANR	21260	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21261	PtrMemberAccess	image -> comps		20738	0					
ANR	21262	Identifier	image		20738	0					
ANR	21263	Identifier	comps		20738	1					
ANR	21264	Identifier	compno		20738	1					
ANR	21265	Identifier	prec		20738	1					
ANR	21266	PrimaryExpression	1		20738	1					
ANR	21267	ExpressionStatement	ptr = image -> comps [ compno ] . data	2531:16:76242:76273	20738	1	True				
ANR	21268	AssignmentExpression	ptr = image -> comps [ compno ] . data		20738	0		=			
ANR	21269	Identifier	ptr		20738	0					
ANR	21270	MemberAccess	image -> comps [ compno ] . data		20738	1					
ANR	21271	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21272	PtrMemberAccess	image -> comps		20738	0					
ANR	21273	Identifier	image		20738	0					
ANR	21274	Identifier	comps		20738	1					
ANR	21275	Identifier	compno		20738	1					
ANR	21276	Identifier	data		20738	1					
ANR	21277	ForStatement	for ( line = 0 ; line < h ; line ++ )		20738	2					
ANR	21278	ForInit	line = 0 ;	2532:21:76296:76304	20738	0	True				
ANR	21279	AssignmentExpression	line = 0		20738	0		=			
ANR	21280	Identifier	line		20738	0					
ANR	21281	PrimaryExpression	0		20738	1					
ANR	21282	Condition	line < h	2532:31:76306:76313	20738	1	True				
ANR	21283	RelationalExpression	line < h		20738	0		<			
ANR	21284	Identifier	line		20738	0					
ANR	21285	Identifier	h		20738	1					
ANR	21286	PostIncDecOperationExpression	line ++	2532:41:76316:76321	20738	2	True				
ANR	21287	Identifier	line		20738	0					
ANR	21288	IncDec	++		20738	1					
ANR	21289	CompoundStatement		85:49:2887:2887	20738	3					
ANR	21290	ForStatement	for ( row = 0 ; row < w ; row ++ )		20738	0					
ANR	21291	ForInit	row = 0 ;	2533:25:76351:76358	20738	0	True				
ANR	21292	AssignmentExpression	row = 0		20738	0		=			
ANR	21293	Identifier	row		20738	0					
ANR	21294	PrimaryExpression	0		20738	1					
ANR	21295	Condition	row < w	2533:34:76360:76366	20738	1	True				
ANR	21296	RelationalExpression	row < w		20738	0		<			
ANR	21297	Identifier	row		20738	0					
ANR	21298	Identifier	w		20738	1					
ANR	21299	PostIncDecOperationExpression	row ++	2533:43:76369:76373	20738	2	True				
ANR	21300	Identifier	row		20738	0					
ANR	21301	IncDec	++		20738	1					
ANR	21302	CompoundStatement		86:53:2942:2942	20738	3					
ANR	21303	ExpressionStatement	curr = * ptr	2534:24:76405:76416	20738	0	True				
ANR	21304	AssignmentExpression	curr = * ptr		20738	0		=			
ANR	21305	Identifier	curr		20738	0					
ANR	21306	UnaryOperationExpression	* ptr		20738	1					
ANR	21307	UnaryOperator	*		20738	0					
ANR	21308	Identifier	ptr		20738	1					
ANR	21309	IfStatement	if ( curr > 255 )		20738	1					
ANR	21310	Condition	curr > 255	2535:28:76446:76455	20738	0	True				
ANR	21311	RelationalExpression	curr > 255		20738	0		>			
ANR	21312	Identifier	curr		20738	0					
ANR	21313	PrimaryExpression	255		20738	1					
ANR	21314	CompoundStatement		88:40:3021:3021	20738	1					
ANR	21315	ExpressionStatement	curr = 255	2536:28:76488:76498	20738	0	True				
ANR	21316	AssignmentExpression	curr = 255		20738	0		=			
ANR	21317	Identifier	curr		20738	0					
ANR	21318	PrimaryExpression	255		20738	1					
ANR	21319	ElseStatement	else		20738	0					
ANR	21320	IfStatement	if ( curr < 0 )		20738	0					
ANR	21321	Condition	curr < 0	2537:35:76535:76542	20738	0	True				
ANR	21322	RelationalExpression	curr < 0		20738	0		<			
ANR	21323	Identifier	curr		20738	0					
ANR	21324	PrimaryExpression	0		20738	1					
ANR	21325	CompoundStatement		90:45:3108:3108	20738	1					
ANR	21326	ExpressionStatement	curr = 0	2538:28:76575:76583	20738	0	True				
ANR	21327	AssignmentExpression	curr = 0		20738	0		=			
ANR	21328	Identifier	curr		20738	0					
ANR	21329	PrimaryExpression	0		20738	1					
ANR	21330	ExpressionStatement	uc = ( unsigned char ) ( curr & mask )	2540:24:76635:76668	20738	2	True				
ANR	21331	AssignmentExpression	uc = ( unsigned char ) ( curr & mask )		20738	0		=			
ANR	21332	Identifier	uc		20738	0					
ANR	21333	CastExpression	( unsigned char ) ( curr & mask )		20738	1					
ANR	21334	CastTarget	unsigned char		20738	0					
ANR	21335	BitAndExpression	curr & mask		20738	1		&			
ANR	21336	Identifier	curr		20738	0					
ANR	21337	Identifier	mask		20738	1					
ANR	21338	ExpressionStatement	"res = fwrite ( & uc , 1 , 1 , rawFile )"	2541:24:76694:76726	20738	3	True				
ANR	21339	AssignmentExpression	"res = fwrite ( & uc , 1 , 1 , rawFile )"		20738	0		=			
ANR	21340	Identifier	res		20738	0					
ANR	21341	CallExpression	"fwrite ( & uc , 1 , 1 , rawFile )"		20738	1					
ANR	21342	Callee	fwrite		20738	0					
ANR	21343	Identifier	fwrite		20738	0					
ANR	21344	ArgumentList	& uc		20738	1					
ANR	21345	Argument	& uc		20738	0					
ANR	21346	UnaryOperationExpression	& uc		20738	0					
ANR	21347	UnaryOperator	&		20738	0					
ANR	21348	Identifier	uc		20738	1					
ANR	21349	Argument	1		20738	1					
ANR	21350	PrimaryExpression	1		20738	0					
ANR	21351	Argument	1		20738	2					
ANR	21352	PrimaryExpression	1		20738	0					
ANR	21353	Argument	rawFile		20738	3					
ANR	21354	Identifier	rawFile		20738	0					
ANR	21355	IfStatement	if ( res < 1 )		20738	4					
ANR	21356	Condition	res < 1	2542:28:76756:76762	20738	0	True				
ANR	21357	RelationalExpression	res < 1		20738	0		<			
ANR	21358	Identifier	res		20738	0					
ANR	21359	PrimaryExpression	1		20738	1					
ANR	21360	CompoundStatement		95:37:3328:3328	20738	1					
ANR	21361	ExpressionStatement	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"	2543:28:76795:76854	20738	0	True				
ANR	21362	CallExpression	"fprintf ( stderr , ""failed to write 1 byte for %s\\n"" , outfile )"		20738	0					
ANR	21363	Callee	fprintf		20738	0					
ANR	21364	Identifier	fprintf		20738	0					
ANR	21365	ArgumentList	stderr		20738	1					
ANR	21366	Argument	stderr		20738	0					
ANR	21367	Identifier	stderr		20738	0					
ANR	21368	Argument	"""failed to write 1 byte for %s\\n"""		20738	1					
ANR	21369	PrimaryExpression	"""failed to write 1 byte for %s\\n"""		20738	0					
ANR	21370	Argument	outfile		20738	2					
ANR	21371	Identifier	outfile		20738	0					
ANR	21372	GotoStatement	goto fin ;	2544:28:76884:76892	20738	1	True				
ANR	21373	Identifier	fin		20738	0					
ANR	21374	ExpressionStatement	ptr ++	2546:24:76944:76949	20738	5	True				
ANR	21375	PostIncDecOperationExpression	ptr ++		20738	0					
ANR	21376	Identifier	ptr		20738	0					
ANR	21377	IncDec	++		20738	1					
ANR	21378	ElseStatement	else		20738	0					
ANR	21379	IfStatement	if ( image -> comps [ compno ] . prec <= 16 )		20738	0					
ANR	21380	Condition	image -> comps [ compno ] . prec <= 16	2550:19:77024:77054	20738	0	True				
ANR	21381	RelationalExpression	image -> comps [ compno ] . prec <= 16		20738	0		<=			
ANR	21382	MemberAccess	image -> comps [ compno ] . prec		20738	0					
ANR	21383	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21384	PtrMemberAccess	image -> comps		20738	0					
ANR	21385	Identifier	image		20738	0					
ANR	21386	Identifier	comps		20738	1					
ANR	21387	Identifier	compno		20738	1					
ANR	21388	Identifier	prec		20738	1					
ANR	21389	PrimaryExpression	16		20738	1					
ANR	21390	CompoundStatement		103:52:3620:3620	20738	1					
ANR	21391	IfStatement	if ( image -> comps [ compno ] . sgnd == 1 )		20738	0					
ANR	21392	Condition	image -> comps [ compno ] . sgnd == 1	2551:16:77075:77104	20738	0	True				
ANR	21393	EqualityExpression	image -> comps [ compno ] . sgnd == 1		20738	0		==			
ANR	21394	MemberAccess	image -> comps [ compno ] . sgnd		20738	0					
ANR	21395	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21396	PtrMemberAccess	image -> comps		20738	0					
ANR	21397	Identifier	image		20738	0					
ANR	21398	Identifier	comps		20738	1					
ANR	21399	Identifier	compno		20738	1					
ANR	21400	Identifier	sgnd		20738	1					
ANR	21401	PrimaryExpression	1		20738	1					
ANR	21402	CompoundStatement		105:16:3688:3797	20738	1					
ANR	21403	ClassDefStatement	union { signed short val ; signed char vals [ 2 ] ; } uc16 ;	2552:16:77125:77234	20738	0	True				
ANR	21404	IdentifierDecl	uc16		20738	0					
ANR	21405	IdentifierDeclType			20738	0					
ANR	21406	Identifier	uc16		20738	1					
ANR	21407	ExpressionStatement	mask = ( 1 << image -> comps [ compno ] . prec ) - 1	2556:16:77252:77295	20738	1	True				
ANR	21408	AssignmentExpression	mask = ( 1 << image -> comps [ compno ] . prec ) - 1		20738	0		=			
ANR	21409	Identifier	mask		20738	0					
ANR	21410	AdditiveExpression	( 1 << image -> comps [ compno ] . prec ) - 1		20738	1		-			
ANR	21411	ShiftExpression	1 << image -> comps [ compno ] . prec		20738	0		<<			
ANR	21412	PrimaryExpression	1		20738	0					
ANR	21413	MemberAccess	image -> comps [ compno ] . prec		20738	1					
ANR	21414	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21415	PtrMemberAccess	image -> comps		20738	0					
ANR	21416	Identifier	image		20738	0					
ANR	21417	Identifier	comps		20738	1					
ANR	21418	Identifier	compno		20738	1					
ANR	21419	Identifier	prec		20738	1					
ANR	21420	PrimaryExpression	1		20738	1					
ANR	21421	ExpressionStatement	ptr = image -> comps [ compno ] . data	2557:16:77313:77344	20738	2	True				
ANR	21422	AssignmentExpression	ptr = image -> comps [ compno ] . data		20738	0		=			
ANR	21423	Identifier	ptr		20738	0					
ANR	21424	MemberAccess	image -> comps [ compno ] . data		20738	1					
ANR	21425	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21426	PtrMemberAccess	image -> comps		20738	0					
ANR	21427	Identifier	image		20738	0					
ANR	21428	Identifier	comps		20738	1					
ANR	21429	Identifier	compno		20738	1					
ANR	21430	Identifier	data		20738	1					
ANR	21431	ForStatement	for ( line = 0 ; line < h ; line ++ )		20738	3					
ANR	21432	ForInit	line = 0 ;	2558:21:77367:77375	20738	0	True				
ANR	21433	AssignmentExpression	line = 0		20738	0		=			
ANR	21434	Identifier	line		20738	0					
ANR	21435	PrimaryExpression	0		20738	1					
ANR	21436	Condition	line < h	2558:31:77377:77384	20738	1	True				
ANR	21437	RelationalExpression	line < h		20738	0		<			
ANR	21438	Identifier	line		20738	0					
ANR	21439	Identifier	h		20738	1					
ANR	21440	PostIncDecOperationExpression	line ++	2558:41:77387:77392	20738	2	True				
ANR	21441	Identifier	line		20738	0					
ANR	21442	IncDec	++		20738	1					
ANR	21443	CompoundStatement		111:49:3958:3958	20738	3					
ANR	21444	ForStatement	for ( row = 0 ; row < w ; row ++ )		20738	0					
ANR	21445	ForInit	row = 0 ;	2559:25:77422:77429	20738	0	True				
ANR	21446	AssignmentExpression	row = 0		20738	0		=			
ANR	21447	Identifier	row		20738	0					
ANR	21448	PrimaryExpression	0		20738	1					
ANR	21449	Condition	row < w	2559:34:77431:77437	20738	1	True				
ANR	21450	RelationalExpression	row < w		20738	0		<			
ANR	21451	Identifier	row		20738	0					
ANR	21452	Identifier	w		20738	1					
ANR	21453	PostIncDecOperationExpression	row ++	2559:43:77440:77444	20738	2	True				
ANR	21454	Identifier	row		20738	0					
ANR	21455	IncDec	++		20738	1					
ANR	21456	CompoundStatement		112:53:4013:4013	20738	3					
ANR	21457	ExpressionStatement	curr = * ptr	2560:24:77476:77487	20738	0	True				
ANR	21458	AssignmentExpression	curr = * ptr		20738	0		=			
ANR	21459	Identifier	curr		20738	0					
ANR	21460	UnaryOperationExpression	* ptr		20738	1					
ANR	21461	UnaryOperator	*		20738	0					
ANR	21462	Identifier	ptr		20738	1					
ANR	21463	IfStatement	if ( curr > 32767 )		20738	1					
ANR	21464	Condition	curr > 32767	2561:28:77517:77528	20738	0	True				
ANR	21465	RelationalExpression	curr > 32767		20738	0		>			
ANR	21466	Identifier	curr		20738	0					
ANR	21467	PrimaryExpression	32767		20738	1					
ANR	21468	CompoundStatement		114:42:4094:4094	20738	1					
ANR	21469	ExpressionStatement	curr = 32767	2562:28:77561:77573	20738	0	True				
ANR	21470	AssignmentExpression	curr = 32767		20738	0		=			
ANR	21471	Identifier	curr		20738	0					
ANR	21472	PrimaryExpression	32767		20738	1					
ANR	21473	ElseStatement	else		20738	0					
ANR	21474	IfStatement	if ( curr < - 32768 )		20738	0					
ANR	21475	Condition	curr < - 32768	2563:35:77610:77622	20738	0	True				
ANR	21476	RelationalExpression	curr < - 32768		20738	0		<			
ANR	21477	Identifier	curr		20738	0					
ANR	21478	UnaryOperationExpression	- 32768		20738	1					
ANR	21479	UnaryOperator	-		20738	0					
ANR	21480	PrimaryExpression	32768		20738	1					
ANR	21481	CompoundStatement		116:50:4188:4188	20738	1					
ANR	21482	ExpressionStatement	curr = - 32768	2564:28:77655:77668	20738	0	True				
ANR	21483	AssignmentExpression	curr = - 32768		20738	0		=			
ANR	21484	Identifier	curr		20738	0					
ANR	21485	UnaryOperationExpression	- 32768		20738	1					
ANR	21486	UnaryOperator	-		20738	0					
ANR	21487	PrimaryExpression	32768		20738	1					
ANR	21488	ExpressionStatement	uc16 . val = ( signed short ) ( curr & mask )	2566:24:77720:77758	20738	2	True				
ANR	21489	AssignmentExpression	uc16 . val = ( signed short ) ( curr & mask )		20738	0		=			
ANR	21490	MemberAccess	uc16 . val		20738	0					
ANR	21491	Identifier	uc16		20738	0					
ANR	21492	Identifier	val		20738	1					
ANR	21493	CastExpression	( signed short ) ( curr & mask )		20738	1					
ANR	21494	CastTarget	signed short		20738	0					
ANR	21495	BitAndExpression	curr & mask		20738	1		&			
ANR	21496	Identifier	curr		20738	0					
ANR	21497	Identifier	mask		20738	1					
ANR	21498	ExpressionStatement	"res = fwrite ( uc16 . vals , 1 , 2 , rawFile )"	2567:24:77784:77822	20738	3	True				
ANR	21499	AssignmentExpression	"res = fwrite ( uc16 . vals , 1 , 2 , rawFile )"		20738	0		=			
ANR	21500	Identifier	res		20738	0					
ANR	21501	CallExpression	"fwrite ( uc16 . vals , 1 , 2 , rawFile )"		20738	1					
ANR	21502	Callee	fwrite		20738	0					
ANR	21503	Identifier	fwrite		20738	0					
ANR	21504	ArgumentList	uc16 . vals		20738	1					
ANR	21505	Argument	uc16 . vals		20738	0					
ANR	21506	MemberAccess	uc16 . vals		20738	0					
ANR	21507	Identifier	uc16		20738	0					
ANR	21508	Identifier	vals		20738	1					
ANR	21509	Argument	1		20738	1					
ANR	21510	PrimaryExpression	1		20738	0					
ANR	21511	Argument	2		20738	2					
ANR	21512	PrimaryExpression	2		20738	0					
ANR	21513	Argument	rawFile		20738	3					
ANR	21514	Identifier	rawFile		20738	0					
ANR	21515	IfStatement	if ( res < 2 )		20738	4					
ANR	21516	Condition	res < 2	2568:28:77852:77858	20738	0	True				
ANR	21517	RelationalExpression	res < 2		20738	0		<			
ANR	21518	Identifier	res		20738	0					
ANR	21519	PrimaryExpression	2		20738	1					
ANR	21520	CompoundStatement		121:37:4424:4424	20738	1					
ANR	21521	ExpressionStatement	"fprintf ( stderr , ""failed to write 2 byte for %s\\n"" , outfile )"	2569:28:77891:77950	20738	0	True				
ANR	21522	CallExpression	"fprintf ( stderr , ""failed to write 2 byte for %s\\n"" , outfile )"		20738	0					
ANR	21523	Callee	fprintf		20738	0					
ANR	21524	Identifier	fprintf		20738	0					
ANR	21525	ArgumentList	stderr		20738	1					
ANR	21526	Argument	stderr		20738	0					
ANR	21527	Identifier	stderr		20738	0					
ANR	21528	Argument	"""failed to write 2 byte for %s\\n"""		20738	1					
ANR	21529	PrimaryExpression	"""failed to write 2 byte for %s\\n"""		20738	0					
ANR	21530	Argument	outfile		20738	2					
ANR	21531	Identifier	outfile		20738	0					
ANR	21532	GotoStatement	goto fin ;	2570:28:77980:77988	20738	1	True				
ANR	21533	Identifier	fin		20738	0					
ANR	21534	ExpressionStatement	ptr ++	2572:24:78040:78045	20738	5	True				
ANR	21535	PostIncDecOperationExpression	ptr ++		20738	0					
ANR	21536	Identifier	ptr		20738	0					
ANR	21537	IncDec	++		20738	1					
ANR	21538	ElseStatement	else		20738	0					
ANR	21539	IfStatement	if ( image -> comps [ compno ] . sgnd == 0 )		20738	0					
ANR	21540	Condition	image -> comps [ compno ] . sgnd == 0	2575:23:78110:78139	20738	0	True				
ANR	21541	EqualityExpression	image -> comps [ compno ] . sgnd == 0		20738	0		==			
ANR	21542	MemberAccess	image -> comps [ compno ] . sgnd		20738	0					
ANR	21543	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21544	PtrMemberAccess	image -> comps		20738	0					
ANR	21545	Identifier	image		20738	0					
ANR	21546	Identifier	comps		20738	1					
ANR	21547	Identifier	compno		20738	1					
ANR	21548	Identifier	sgnd		20738	1					
ANR	21549	PrimaryExpression	0		20738	1					
ANR	21550	CompoundStatement		129:16:4723:4836	20738	1					
ANR	21551	ClassDefStatement	union { unsigned short val ; unsigned char vals [ 2 ] ; } uc16 ;	2576:16:78160:78273	20738	0	True				
ANR	21552	IdentifierDecl	uc16		20738	0					
ANR	21553	IdentifierDeclType			20738	0					
ANR	21554	Identifier	uc16		20738	1					
ANR	21555	ExpressionStatement	mask = ( 1 << image -> comps [ compno ] . prec ) - 1	2580:16:78291:78334	20738	1	True				
ANR	21556	AssignmentExpression	mask = ( 1 << image -> comps [ compno ] . prec ) - 1		20738	0		=			
ANR	21557	Identifier	mask		20738	0					
ANR	21558	AdditiveExpression	( 1 << image -> comps [ compno ] . prec ) - 1		20738	1		-			
ANR	21559	ShiftExpression	1 << image -> comps [ compno ] . prec		20738	0		<<			
ANR	21560	PrimaryExpression	1		20738	0					
ANR	21561	MemberAccess	image -> comps [ compno ] . prec		20738	1					
ANR	21562	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21563	PtrMemberAccess	image -> comps		20738	0					
ANR	21564	Identifier	image		20738	0					
ANR	21565	Identifier	comps		20738	1					
ANR	21566	Identifier	compno		20738	1					
ANR	21567	Identifier	prec		20738	1					
ANR	21568	PrimaryExpression	1		20738	1					
ANR	21569	ExpressionStatement	ptr = image -> comps [ compno ] . data	2581:16:78352:78383	20738	2	True				
ANR	21570	AssignmentExpression	ptr = image -> comps [ compno ] . data		20738	0		=			
ANR	21571	Identifier	ptr		20738	0					
ANR	21572	MemberAccess	image -> comps [ compno ] . data		20738	1					
ANR	21573	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21574	PtrMemberAccess	image -> comps		20738	0					
ANR	21575	Identifier	image		20738	0					
ANR	21576	Identifier	comps		20738	1					
ANR	21577	Identifier	compno		20738	1					
ANR	21578	Identifier	data		20738	1					
ANR	21579	ForStatement	for ( line = 0 ; line < h ; line ++ )		20738	3					
ANR	21580	ForInit	line = 0 ;	2582:21:78406:78414	20738	0	True				
ANR	21581	AssignmentExpression	line = 0		20738	0		=			
ANR	21582	Identifier	line		20738	0					
ANR	21583	PrimaryExpression	0		20738	1					
ANR	21584	Condition	line < h	2582:31:78416:78423	20738	1	True				
ANR	21585	RelationalExpression	line < h		20738	0		<			
ANR	21586	Identifier	line		20738	0					
ANR	21587	Identifier	h		20738	1					
ANR	21588	PostIncDecOperationExpression	line ++	2582:41:78426:78431	20738	2	True				
ANR	21589	Identifier	line		20738	0					
ANR	21590	IncDec	++		20738	1					
ANR	21591	CompoundStatement		135:49:4997:4997	20738	3					
ANR	21592	ForStatement	for ( row = 0 ; row < w ; row ++ )		20738	0					
ANR	21593	ForInit	row = 0 ;	2583:25:78461:78468	20738	0	True				
ANR	21594	AssignmentExpression	row = 0		20738	0		=			
ANR	21595	Identifier	row		20738	0					
ANR	21596	PrimaryExpression	0		20738	1					
ANR	21597	Condition	row < w	2583:34:78470:78476	20738	1	True				
ANR	21598	RelationalExpression	row < w		20738	0		<			
ANR	21599	Identifier	row		20738	0					
ANR	21600	Identifier	w		20738	1					
ANR	21601	PostIncDecOperationExpression	row ++	2583:43:78479:78483	20738	2	True				
ANR	21602	Identifier	row		20738	0					
ANR	21603	IncDec	++		20738	1					
ANR	21604	CompoundStatement		136:53:5052:5052	20738	3					
ANR	21605	ExpressionStatement	curr = * ptr	2584:24:78515:78526	20738	0	True				
ANR	21606	AssignmentExpression	curr = * ptr		20738	0		=			
ANR	21607	Identifier	curr		20738	0					
ANR	21608	UnaryOperationExpression	* ptr		20738	1					
ANR	21609	UnaryOperator	*		20738	0					
ANR	21610	Identifier	ptr		20738	1					
ANR	21611	IfStatement	if ( curr > 65535 )		20738	1					
ANR	21612	Condition	curr > 65535	2585:28:78556:78567	20738	0	True				
ANR	21613	RelationalExpression	curr > 65535		20738	0		>			
ANR	21614	Identifier	curr		20738	0					
ANR	21615	PrimaryExpression	65535		20738	1					
ANR	21616	CompoundStatement		138:42:5133:5133	20738	1					
ANR	21617	ExpressionStatement	curr = 65535	2586:28:78600:78612	20738	0	True				
ANR	21618	AssignmentExpression	curr = 65535		20738	0		=			
ANR	21619	Identifier	curr		20738	0					
ANR	21620	PrimaryExpression	65535		20738	1					
ANR	21621	ElseStatement	else		20738	0					
ANR	21622	IfStatement	if ( curr < 0 )		20738	0					
ANR	21623	Condition	curr < 0	2587:35:78649:78656	20738	0	True				
ANR	21624	RelationalExpression	curr < 0		20738	0		<			
ANR	21625	Identifier	curr		20738	0					
ANR	21626	PrimaryExpression	0		20738	1					
ANR	21627	CompoundStatement		140:45:5222:5222	20738	1					
ANR	21628	ExpressionStatement	curr = 0	2588:28:78689:78697	20738	0	True				
ANR	21629	AssignmentExpression	curr = 0		20738	0		=			
ANR	21630	Identifier	curr		20738	0					
ANR	21631	PrimaryExpression	0		20738	1					
ANR	21632	ExpressionStatement	uc16 . val = ( unsigned short ) ( curr & mask )	2590:24:78749:78789	20738	2	True				
ANR	21633	AssignmentExpression	uc16 . val = ( unsigned short ) ( curr & mask )		20738	0		=			
ANR	21634	MemberAccess	uc16 . val		20738	0					
ANR	21635	Identifier	uc16		20738	0					
ANR	21636	Identifier	val		20738	1					
ANR	21637	CastExpression	( unsigned short ) ( curr & mask )		20738	1					
ANR	21638	CastTarget	unsigned short		20738	0					
ANR	21639	BitAndExpression	curr & mask		20738	1		&			
ANR	21640	Identifier	curr		20738	0					
ANR	21641	Identifier	mask		20738	1					
ANR	21642	ExpressionStatement	"res = fwrite ( uc16 . vals , 1 , 2 , rawFile )"	2591:24:78815:78853	20738	3	True				
ANR	21643	AssignmentExpression	"res = fwrite ( uc16 . vals , 1 , 2 , rawFile )"		20738	0		=			
ANR	21644	Identifier	res		20738	0					
ANR	21645	CallExpression	"fwrite ( uc16 . vals , 1 , 2 , rawFile )"		20738	1					
ANR	21646	Callee	fwrite		20738	0					
ANR	21647	Identifier	fwrite		20738	0					
ANR	21648	ArgumentList	uc16 . vals		20738	1					
ANR	21649	Argument	uc16 . vals		20738	0					
ANR	21650	MemberAccess	uc16 . vals		20738	0					
ANR	21651	Identifier	uc16		20738	0					
ANR	21652	Identifier	vals		20738	1					
ANR	21653	Argument	1		20738	1					
ANR	21654	PrimaryExpression	1		20738	0					
ANR	21655	Argument	2		20738	2					
ANR	21656	PrimaryExpression	2		20738	0					
ANR	21657	Argument	rawFile		20738	3					
ANR	21658	Identifier	rawFile		20738	0					
ANR	21659	IfStatement	if ( res < 2 )		20738	4					
ANR	21660	Condition	res < 2	2592:28:78883:78889	20738	0	True				
ANR	21661	RelationalExpression	res < 2		20738	0		<			
ANR	21662	Identifier	res		20738	0					
ANR	21663	PrimaryExpression	2		20738	1					
ANR	21664	CompoundStatement		145:37:5455:5455	20738	1					
ANR	21665	ExpressionStatement	"fprintf ( stderr , ""failed to write 2 byte for %s\\n"" , outfile )"	2593:28:78922:78981	20738	0	True				
ANR	21666	CallExpression	"fprintf ( stderr , ""failed to write 2 byte for %s\\n"" , outfile )"		20738	0					
ANR	21667	Callee	fprintf		20738	0					
ANR	21668	Identifier	fprintf		20738	0					
ANR	21669	ArgumentList	stderr		20738	1					
ANR	21670	Argument	stderr		20738	0					
ANR	21671	Identifier	stderr		20738	0					
ANR	21672	Argument	"""failed to write 2 byte for %s\\n"""		20738	1					
ANR	21673	PrimaryExpression	"""failed to write 2 byte for %s\\n"""		20738	0					
ANR	21674	Argument	outfile		20738	2					
ANR	21675	Identifier	outfile		20738	0					
ANR	21676	GotoStatement	goto fin ;	2594:28:79011:79019	20738	1	True				
ANR	21677	Identifier	fin		20738	0					
ANR	21678	ExpressionStatement	ptr ++	2596:24:79071:79076	20738	5	True				
ANR	21679	PostIncDecOperationExpression	ptr ++		20738	0					
ANR	21680	Identifier	ptr		20738	0					
ANR	21681	IncDec	++		20738	1					
ANR	21682	ElseStatement	else		20738	0					
ANR	21683	IfStatement	if ( image -> comps [ compno ] . prec <= 32 )		20738	0					
ANR	21684	Condition	image -> comps [ compno ] . prec <= 32	2600:19:79151:79181	20738	0	True				
ANR	21685	RelationalExpression	image -> comps [ compno ] . prec <= 32		20738	0		<=			
ANR	21686	MemberAccess	image -> comps [ compno ] . prec		20738	0					
ANR	21687	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21688	PtrMemberAccess	image -> comps		20738	0					
ANR	21689	Identifier	image		20738	0					
ANR	21690	Identifier	comps		20738	1					
ANR	21691	Identifier	compno		20738	1					
ANR	21692	Identifier	prec		20738	1					
ANR	21693	PrimaryExpression	32		20738	1					
ANR	21694	CompoundStatement		153:52:5747:5747	20738	1					
ANR	21695	ExpressionStatement	"fprintf ( stderr , ""More than 16 bits per component not handled yet\\n"" )"	2601:12:79198:79266	20738	0	True				
ANR	21696	CallExpression	"fprintf ( stderr , ""More than 16 bits per component not handled yet\\n"" )"		20738	0					
ANR	21697	Callee	fprintf		20738	0					
ANR	21698	Identifier	fprintf		20738	0					
ANR	21699	ArgumentList	stderr		20738	1					
ANR	21700	Argument	stderr		20738	0					
ANR	21701	Identifier	stderr		20738	0					
ANR	21702	Argument	"""More than 16 bits per component not handled yet\\n"""		20738	1					
ANR	21703	PrimaryExpression	"""More than 16 bits per component not handled yet\\n"""		20738	0					
ANR	21704	GotoStatement	goto fin ;	2602:12:79280:79288	20738	1	True				
ANR	21705	Identifier	fin		20738	0					
ANR	21706	ElseStatement	else		20738	0					
ANR	21707	CompoundStatement		156:15:5868:5868	20738	0					
ANR	21708	ExpressionStatement	"fprintf ( stderr , ""Error: invalid precision: %d\\n"" , image -> comps [ compno ] . prec )"	2604:12:79319:79395	20738	0	True				
ANR	21709	CallExpression	"fprintf ( stderr , ""Error: invalid precision: %d\\n"" , image -> comps [ compno ] . prec )"		20738	0					
ANR	21710	Callee	fprintf		20738	0					
ANR	21711	Identifier	fprintf		20738	0					
ANR	21712	ArgumentList	stderr		20738	1					
ANR	21713	Argument	stderr		20738	0					
ANR	21714	Identifier	stderr		20738	0					
ANR	21715	Argument	"""Error: invalid precision: %d\\n"""		20738	1					
ANR	21716	PrimaryExpression	"""Error: invalid precision: %d\\n"""		20738	0					
ANR	21717	Argument	image -> comps [ compno ] . prec		20738	2					
ANR	21718	MemberAccess	image -> comps [ compno ] . prec		20738	0					
ANR	21719	ArrayIndexing	image -> comps [ compno ]		20738	0					
ANR	21720	PtrMemberAccess	image -> comps		20738	0					
ANR	21721	Identifier	image		20738	0					
ANR	21722	Identifier	comps		20738	1					
ANR	21723	Identifier	compno		20738	1					
ANR	21724	Identifier	prec		20738	1					
ANR	21725	GotoStatement	goto fin ;	2605:12:79409:79417	20738	1	True				
ANR	21726	Identifier	fin		20738	0					
ANR	21727	ExpressionStatement	fails = 0	2608:4:79439:79448	20738	18	True				
ANR	21728	AssignmentExpression	fails = 0		20738	0		=			
ANR	21729	Identifier	fails		20738	0					
ANR	21730	PrimaryExpression	0		20738	1					
ANR	21731	Label	fin :	2609:0:79450:79453	20738	19	True				
ANR	21732	Identifier	fin		20738	0					
ANR	21733	ExpressionStatement	fclose ( rawFile )	2610:4:79459:79474	20738	20	True				
ANR	21734	CallExpression	fclose ( rawFile )		20738	0					
ANR	21735	Callee	fclose		20738	0					
ANR	21736	Identifier	fclose		20738	0					
ANR	21737	ArgumentList	rawFile		20738	1					
ANR	21738	Argument	rawFile		20738	0					
ANR	21739	Identifier	rawFile		20738	0					
ANR	21740	ReturnStatement	return fails ;	2611:4:79480:79492	20738	21	True				
ANR	21741	Identifier	fails		20738	0					
ANR	21742	ReturnType	static int		20738	1					
ANR	21743	Identifier	imagetoraw_common		20738	2					
ANR	21744	ParameterList	"opj_image_t * image , const char * outfile , OPJ_BOOL big_endian"		20738	3					
ANR	21745	Parameter	opj_image_t * image	2446:29:73344:73362	20738	0	True				
ANR	21746	ParameterType	opj_image_t *		20738	0					
ANR	21747	Identifier	image		20738	1					
ANR	21748	Parameter	const char * outfile	2446:50:73365:73383	20738	1	True				
ANR	21749	ParameterType	const char *		20738	0					
ANR	21750	Identifier	outfile		20738	1					
ANR	21751	Parameter	OPJ_BOOL big_endian	2447:29:73415:73433	20738	2	True				
ANR	21752	ParameterType	OPJ_BOOL		20738	0					
ANR	21753	Identifier	big_endian		20738	1					
ANR	21754	CFGEntryNode	ENTRY		20738		True				
ANR	21755	CFGExitNode	EXIT		20738		True				
ANR	21756	Symbol	image -> y1		20738						
ANR	21757	Symbol	stdout		20738						
ANR	21758	Symbol	uc16		20738						
ANR	21759	Symbol	line		20738						
ANR	21760	Symbol	outfile		20738						
ANR	21761	Symbol	image -> comps [ compno ] . h		20738						
ANR	21762	Symbol	image -> comps		20738						
ANR	21763	Symbol	uc		20738						
ANR	21764	Symbol	* * image		20738						
ANR	21765	Symbol	image -> comps [ 0 ] . prec		20738						
ANR	21766	Symbol	* ptr		20738						
ANR	21767	Symbol	& uc		20738						
ANR	21768	Symbol	row		20738						
ANR	21769	Symbol	image -> comps [ compno ] . w		20738						
ANR	21770	Symbol	curr		20738						
ANR	21771	Symbol	fails		20738						
ANR	21772	Symbol	numcomps		20738						
ANR	21773	Symbol	mask		20738						
ANR	21774	Symbol	image		20738						
ANR	21775	Symbol	res		20738						
ANR	21776	Symbol	* image -> comps		20738						
ANR	21777	Symbol	image -> comps [ compno ] . sgnd		20738						
ANR	21778	Symbol	fopen		20738						
ANR	21779	Symbol	NULL		20738						
ANR	21780	Symbol	image -> x1		20738						
ANR	21781	Symbol	uc16 . val		20738						
ANR	21782	Symbol	h		20738						
ANR	21783	Symbol	fwrite		20738						
ANR	21784	Symbol	image -> comps [ 0 ] . dy		20738						
ANR	21785	Symbol	image -> comps [ 0 ] . dx		20738						
ANR	21786	Symbol	stderr		20738						
ANR	21787	Symbol	compno		20738						
ANR	21788	Symbol	ptr		20738						
ANR	21789	Symbol	image -> numcomps		20738						
ANR	21790	Symbol	* compno		20738						
ANR	21791	Symbol	image -> comps [ 0 ] . sgnd		20738						
ANR	21792	Symbol	big_endian		20738						
ANR	21793	Symbol	uc16 . vals		20738						
ANR	21794	Symbol	w		20738						
ANR	21795	Symbol	image -> comps [ compno ] . dx		20738						
ANR	21796	Symbol	image -> comps [ compno ] . data		20738						
ANR	21797	Symbol	image -> comps [ compno ] . dy		20738						
ANR	21798	Symbol	rawFile		20738						
ANR	21799	Symbol	* image		20738						
ANR	21800	Symbol	image -> comps [ compno ] . prec		20738						
ANR	21801	Function	imagetoraw	2614:0:79497:79612							
ANR	21802	FunctionDef	"imagetoraw (opj_image_t * image , const char * outfile)"		21801	0					
ANR	21803	CompoundStatement		2615:0:79554:79612	21801	0					
ANR	21804	ReturnStatement	"return imagetoraw_common ( image , outfile , OPJ_TRUE ) ;"	2616:4:79560:79610	21801	0	True				
ANR	21805	CallExpression	"imagetoraw_common ( image , outfile , OPJ_TRUE )"		21801	0					
ANR	21806	Callee	imagetoraw_common		21801	0					
ANR	21807	Identifier	imagetoraw_common		21801	0					
ANR	21808	ArgumentList	image		21801	1					
ANR	21809	Argument	image		21801	0					
ANR	21810	Identifier	image		21801	0					
ANR	21811	Argument	outfile		21801	1					
ANR	21812	Identifier	outfile		21801	0					
ANR	21813	Argument	OPJ_TRUE		21801	2					
ANR	21814	Identifier	OPJ_TRUE		21801	0					
ANR	21815	ReturnType	int		21801	1					
ANR	21816	Identifier	imagetoraw		21801	2					
ANR	21817	ParameterList	"opj_image_t * image , const char * outfile"		21801	3					
ANR	21818	Parameter	opj_image_t * image	2614:15:79512:79530	21801	0	True				
ANR	21819	ParameterType	opj_image_t *		21801	0					
ANR	21820	Identifier	image		21801	1					
ANR	21821	Parameter	const char * outfile	2614:36:79533:79551	21801	1	True				
ANR	21822	ParameterType	const char *		21801	0					
ANR	21823	Identifier	outfile		21801	1					
ANR	21824	CFGEntryNode	ENTRY		21801		True				
ANR	21825	CFGExitNode	EXIT		21801		True				
ANR	21826	Symbol	image		21801						
ANR	21827	Symbol	imagetoraw_common		21801						
ANR	21828	Symbol	outfile		21801						
ANR	21829	Symbol	OPJ_TRUE		21801						
ANR	21830	Function	imagetorawl	2619:0:79615:79732							
ANR	21831	FunctionDef	"imagetorawl (opj_image_t * image , const char * outfile)"		21830	0					
ANR	21832	CompoundStatement		2620:0:79673:79732	21830	0					
ANR	21833	ReturnStatement	"return imagetoraw_common ( image , outfile , OPJ_FALSE ) ;"	2621:4:79679:79730	21830	0	True				
ANR	21834	CallExpression	"imagetoraw_common ( image , outfile , OPJ_FALSE )"		21830	0					
ANR	21835	Callee	imagetoraw_common		21830	0					
ANR	21836	Identifier	imagetoraw_common		21830	0					
ANR	21837	ArgumentList	image		21830	1					
ANR	21838	Argument	image		21830	0					
ANR	21839	Identifier	image		21830	0					
ANR	21840	Argument	outfile		21830	1					
ANR	21841	Identifier	outfile		21830	0					
ANR	21842	Argument	OPJ_FALSE		21830	2					
ANR	21843	Identifier	OPJ_FALSE		21830	0					
ANR	21844	ReturnType	int		21830	1					
ANR	21845	Identifier	imagetorawl		21830	2					
ANR	21846	ParameterList	"opj_image_t * image , const char * outfile"		21830	3					
ANR	21847	Parameter	opj_image_t * image	2619:16:79631:79649	21830	0	True				
ANR	21848	ParameterType	opj_image_t *		21830	0					
ANR	21849	Identifier	image		21830	1					
ANR	21850	Parameter	const char * outfile	2619:37:79652:79670	21830	1	True				
ANR	21851	ParameterType	const char *		21830	0					
ANR	21852	Identifier	outfile		21830	1					
ANR	21853	CFGEntryNode	ENTRY		21830		True				
ANR	21854	CFGExitNode	EXIT		21830		True				
ANR	21855	Symbol	image		21830						
ANR	21856	Symbol	OPJ_FALSE		21830						
ANR	21857	Symbol	imagetoraw_common		21830						
ANR	21858	Symbol	outfile		21830						
